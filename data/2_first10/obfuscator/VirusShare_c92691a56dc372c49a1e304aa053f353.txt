push
mov
push
push
mov
push
mov
sub
push
push
push
call
mov
jmp
pusha
call
pushl
call
push
jmp
mov
pushf
lea
jmp
pushf
pushf
push
mov
pushf
pushf
popl
jmp
pushl
inc
movl
mov
jmp
pushf
movb
mov
push
pushl
mov
lea
jmp
mov
pushf
call
mov
call
mov
mov
jmp
push
pusha
jmp
movb
jmp
stc
sub
pushf
push
pushf
pushf
lea
jmp
mov
lea
jo
pusha
mov
pushf
jmp
pusha
push
add
add
jae
push
clc
shrd
movb
call
push
mov
push
movb
pushl
pushf
lea
jmp
pushf
add
bsr
pop
not
shl
neg
movzbw
ror
btc
and
dec
jo
test
mov
pusha
add
call
call
push
mov
pushf
popl
movl
pushf
movl
mov
pushf
jmp
mov
pushf
lea
jmp
movl
call
sub
test
add
pusha
jmp
adc
daa
bsf
sar
mov
clc
call
not
mov
pushf
jmp
pusha
rcr
rcr
bsr
mov
stc
clc
test
add
call
mov
push
movb
mov
jmp
push
dec
movl
sub
movb
add
cmc
sub
jmp
mov
pushf
call
pushf
popl
call
jmp
mov
mov
jmp
pushf
popl
jmp
movb
push
mov
movw
call
mov
pusha
call
not
add
neg
sbb
sar
mov
cmp
stc
add
push
clc
jmp
mov
jmp
repz
xor
add
add
je
cmp
je
cmp
jne
mov
mov
jmp
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
movl
jmp
mov
pushf
pushf
pushf
movb
mov
pushf
pushf
lea
jmp
setae
not
not
call
pushf
pushf
pushf
popl
jmp
jmp
mov
call
shld
add
aad
mov
btc
mov
jo
test
push
bt
sub
cmc
imul
pushf
call
mov
shr
stc
sbb
mov
cmp
xchg
call
call
mov
mov
pushf
pushf
lea
jmp
mov
movb
jmp
mov
pushf
popl
pushf
jmp
jmp
or
cld
decl
inc
inc
cld
pop
add
add
hlt
mov
lea
movb
call
lea
movl
call
mov
mov
mov
jmp
cmp
je
cmp
je
cmp
jne
push
push
push
call
mov
mov
jmp
cmp
jne
push
mov
call
push
mov
call
lea
push
push
mov
movb
movb
mov
movb
mov
mov
mov
mov
mov
call
lea
push
push
mov
movb
movb
mov
movb
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
mov
call
mov
mov
jmp
push
mov
call
mov
mov
jmp
cmp
jne
mov
lea
cmp
ja
xor
mov
jmp
mov
mov
mov
lea
call
mov
mov
xor
repz
jne
mov
mov
lea
call
mov
lea
cmp
jne
xor
jmp
mov
mov
push
push
push
push
call
push
mov
call
mov
jmp
push
mov
call
push
mov
call
mov
lea
cmp
je
mov
mov
push
push
push
push
call
jmp
push
mov
call
mov
lea
cmp
je
mov
mov
push
push
push
push
call
jmp
mov
xor
cmp
sete
mov
cmp
mov
jne
mov
push
push
push
call
add
jmp
mov
mov
mov
add
push
call
jmp
lea
push
push
push
call
mov
push
call
add
lea
mov
call
cmp
jle
push
push
push
call
mov
add
jmp
push
push
call
mov
add
jmp
mov
call
jmp
mov
call
jmp
mov
lea
mov
call
mov
mov
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
add
mov
call
mov
jmp
mov
lea
push
push
push
mov
call
mov
lea
push
push
lea
mov
push
call
mov
mov
mov
mov
push
push
lea
push
push
movl
call
add
lea
mov
mov
push
call
call
mov
add
push
mov
call
lea
movl
call
jmp
push
mov
call
jmp
cmp
jne
cmpl
jne
push
mov
call
mov
mov
mov
push
mov
push
push
push
push
call
mov
pop
pop
mov
pop
mov
pop
ret
nop
push
pop
inc
add
inc
add
sbb
or
inc
add
inc
add
adc
inc
add
push
inc
add
push
inc
add
adc
inc
add
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
push
or
or
or
or
or
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
mov
movl
mov
cmp
je
mov
jmp
jnp
pushl
shl
not
add
push
mov
push
lea
push
call
add
movl
jmp
mov
add
mov
cmpl
jge
mov
xor
mov
push
push
mov
lea
push
call
add
jmp
lea
push
mov
call
mov
or
mov
mov
pop
pop
pop
mov
pop
ret
int3
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
lea
movl
mov
call
push
push
push
push
push
push
lea
call
mov
push
push
push
push
push
lea
movb
call
mov
test
je
mov
push
mov
call
mov
mov
call
lea
movl
call
lea
movb
call
lea
movl
call
mov
pop
pop
mov
pop
mov
pop
ret
mov
call
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
movl
mov
mov
mov
lea
push
movb
call
mov
movb
call
mov
mov
mov
push
mov
push
mov
push
push
lea
push
push
call
add
lea
movb
call
mov
mov
push
lea
push
mov
call
push
lea
push
push
movb
call
lea
movb
push
push
lea
push
call
lea
movb
call
lea
movb
call
lea
push
lea
call
lea
lea
push
call
push
lea
mov
mov
push
call
mov
mov
call
cmpl
jne
cmpl
jne
add
push
mov
call
test
jle
mov
push
push
push
push
call
add
lea
movb
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
movl
mov
lea
push
push
push
movl
call
mov
add
lea
mov
push
call
lea
push
lea
push
push
movb
call
lea
lea
push
push
push
movb
call
lea
movb
call
lea
movb
call
push
mov
mov
push
call
mov
lea
movb
call
push
lea
push
mov
call
mov
mov
mov
push
lea
push
mov
movb
call
push
lea
push
push
movb
call
push
movb
push
lea
push
call
lea
movb
call
lea
movb
call
lea
movb
call
push
lea
mov
mov
push
call
mov
mov
call
mov
lea
cmpl
jne
push
mov
mov
push
call
mov
mov
movb
call
lea
push
push
mov
call
push
mov
movb
call
lea
movb
call
push
push
push
call
mov
lea
push
mov
call
mov
mov
push
lea
push
mov
movb
call
mov
mov
lea
lea
push
push
mov
movb
call
push
lea
push
push
movb
call
mov
mov
push
lea
push
mov
movb
call
mov
push
push
mov
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
push
push
push
call
mov
mov
push
mov
push
mov
call
movl
lea
movb
call
movb
lea
call
lea
movb
call
mov
mov
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
xor
push
push
test
jle
mov
mov
mov
mov
lea
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
repz
je
mov
inc
cmp
jl
pop
pop
pop
xor
pop
ret
pop
pop
pop
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
movl
call
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
mov
movl
mov
cmp
je
mov
jmp
psubsb
add
push
push
lea
push
call
add
lea
push
mov
call
mov
or
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
push
push
mov
push
mov
sub
push
mov
movl
mov
mov
movb
call
push
lea
push
push
call
mov
mov
add
mov
push
lea
push
call
push
lea
push
push
movb
call
lea
movb
push
push
lea
push
call
push
lea
push
push
movb
call
lea
movb
push
push
lea
push
call
push
lea
push
push
movb
call
lea
movb
push
push
lea
push
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
push
lea
mov
mov
push
call
mov
mov
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
push
mov
push
push
mov
or
xor
xor
xor
repnz
not
dec
lea
mov
mov
mov
cmp
rep
stos
mov
stos
jle
lea
xor
mov
push
push
push
call
add
inc
add
cmp
jl
mov
lea
push
mov
call
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
mov
movl
mov
cmp
je
mov
jmp
jnp
pushl
shl
not
add
shr
mov
movb
mov
xor
lea
rep
stos
stos
movl
jmp
mov
add
mov
mov
cmp
jge
mov
lea
push
push
mov
mov
lea
push
call
add
jmp
lea
push
mov
call
mov
or
mov
mov
pop
pop
pop
mov
pop
ret
int3
push
push
call
push
call
call
push
push
push
call
test
je
call
ret
nop
nop
push
push
push
push
mov
xor
push
push
push
push
call
mov
test
je
push
mov
lea
push
push
call
mov
push
push
call
add
test
je
inc
push
push
push
push
call
mov
test
jne
cmp
pop
jle
incl
pop
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
sub
movb
mov
mov
mov
mov
test
je
call
movl
mov
mov
mov
testb
je
call
mov
pop
ret
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
movl
movl
call
and
push
lea
push
push
call
add
lea
lea
lea
push
push
push
call
mov
mov
push
lea
push
mov
movb
call
push
lea
movb
call
lea
movb
call
lea
movb
call
mov
xor
lea
movb
rep
mov
or
stos
stos
mov
xor
repnz
not
dec
xor
mov
test
jle
lea
sub
lea
lea
push
push
lea
push
call
mov
and
jns
dec
or
inc
mov
mov
mov
xor
mov
mov
and
push
push
push
call
add
add
cmp
jl
lea
push
lea
call
lea
lea
push
movb
call
lea
call
mov
lea
push
mov
call
movl
lea
movb
call
lea
movb
call
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
movl
mov
or
xor
lea
repnz
not
sub
movl
mov
mov
mov
shr
rep
mov
and
rep
lea
push
call
lea
or
xor
add
repnz
not
dec
lea
mov
lea
sub
lea
push
push
push
call
mov
mov
push
lea
push
mov
movb
call
push
lea
movb
call
lea
movb
call
lea
movb
call
mov
xor
lea
movb
rep
stos
xor
test
stos
jle
lea
lea
push
push
push
call
mov
and
jns
dec
or
inc
mov
mov
mov
xor
lea
mov
mov
and
push
push
push
call
add
add
cmp
jl
mov
lea
push
mov
call
movl
lea
movb
call
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
sub
push
mov
push
push
mov
push
push
call
test
jne
mov
push
or
push
call
test
jne
lea
push
push
call
push
call
test
je
lea
push
push
push
call
mov
push
push
lea
push
push
push
push
movl
movl
call
call
test
jne
cmp
jne
push
push
push
push
push
call
pop
pop
pop
add
ret
push
push
call
test
jne
push
push
call
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
lea
mov
push
push
push
mov
movl
call
mov
lea
push
push
lea
mov
push
call
mov
mov
lea
push
push
push
mov
call
mov
lea
add
push
push
push
mov
call
cmp
jbe
mov
cmp
je
mov
push
push
lea
push
push
push
call
add
lea
mov
push
push
lea
mov
call
mov
push
push
call
add
lea
test
sete
call
test
je
push
lea
call
lea
push
push
lea
call
mov
push
push
call
add
lea
test
sete
call
test
je
push
lea
call
lea
push
push
lea
call
mov
push
push
call
add
lea
test
sete
call
test
pop
je
push
lea
call
mov
push
push
call
add
test
jne
push
lea
call
mov
lea
push
mov
call
mov
lea
movb
call
mov
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
push
push
jmp
pusha
mov
push
pushf
pushf
movl
lea
jmp
rcl
bt
mov
or
shrd
bswap
add
cmc
shld
sub
call
push
mov
pusha
pusha
call
lea
jne
setg
dec
add
xorb
pushf
sete
setl
mov
mov
push
lea
jmp
call
call
jmp
pushf
mov
bt
clc
pushf
mov
add
push
movl
lea
jmp
pushl
popl
pusha
movw
pushf
lea
jmp
mov
movb
movl
lea
jmp
mov
pushf
jmp
cli
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
push
push
mov
push
mov
call
mov
lea
push
add
push
push
mov
call
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
add
push
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
mov
call
mov
lea
push
lea
push
push
call
mov
add
lea
mov
push
call
add
ret
nop
mov
call
mov
push
test
movl
jne
mov
push
mov
call
mov
pop
add
ret
mov
lea
push
push
lea
push
push
call
mov
add
mov
mov
push
call
mov
lea
push
push
push
call
mov
add
mov
push
push
call
mov
pop
pop
add
ret
nop
nop
nop
nop
push
mov
sub
mov
test
jne
xor
mov
pop
ret
mov
lea
push
push
push
call
mov
mov
push
pushl
mov
call
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
test
movl
jne
mov
push
mov
call
mov
pop
mov
pop
ret
mov
lea
push
push
push
call
mov
mov
pushl
mov
call
push
mov
call
mov
mov
test
jne
mov
mov
push
mov
call
mov
pop
mov
pop
ret
nop
nop
mov
push
push
lea
push
push
push
call
mov
push
push
call
add
test
sete
and
mov
lea
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
lea
push
push
push
call
mov
push
push
call
add
test
sete
and
mov
lea
call
mov
pop
pop
ret
nop
nop
nop
push
push
lea
push
push
push
call
mov
push
call
add
lea
mov
call
mov
pop
pop
ret
nop
nop
nop
push
push
lea
push
push
push
call
mov
push
call
add
lea
mov
call
mov
pop
pop
ret
nop
nop
nop
push
mov
push
test
mov
je
call
lea
push
add
push
push
mov
call
mov
lea
push
add
push
push
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
mov
je
push
mov
xor
lea
rep
stos
mov
push
stos
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
push
mov
movb
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
ret
nop
nop
nop
nop
nop
mov
call
mov
push
test
mov
je
lea
push
push
call
mov
test
je
push
mov
xor
lea
rep
stos
stos
mov
mov
lea
push
push
mov
movb
call
pop
pop
add
ret
mov
call
push
mov
push
lea
mov
push
push
push
mov
call
mov
lea
push
push
lea
mov
push
call
mov
test
je
mov
test
je
xor
mov
add
rep
mov
mov
lea
mov
rep
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
mov
push
mov
xor
lea
push
rep
stos
stos
mov
lea
mov
mov
push
mov
movb
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
test
je
mov
lea
mov
mov
push
push
push
call
mov
mov
pushl
pushl
mov
call
mov
pop
ret
nop
nop
nop
nop
sub
or
xor
push
push
push
push
mov
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
mov
test
je
mov
mov
xor
lea
rep
push
lea
push
push
push
call
mov
lea
test
je
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
je
mov
or
xor
repnz
not
dec
mov
lea
test
jne
mov
xor
lea
push
rep
lea
push
push
push
call
mov
test
je
lea
mov
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
je
mov
or
xor
repnz
not
dec
mov
lea
test
jne
cmpb
je
mov
mov
mov
lea
cmp
je
inc
add
cmp
jl
pop
pop
pop
pop
add
ret
mov
shl
add
lea
mov
push
mov
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
add
movl
test
je
mov
push
push
mov
call
ret
mov
push
push
call
ret
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
test
mov
je
mov
mov
push
lea
push
cmp
push
mov
je
mov
mov
mov
add
rep
mov
add
cmp
jne
mov
mov
mov
lea
push
push
push
mov
mov
call
mov
movl
lea
mov
lea
push
push
push
mov
call
mov
test
jle
lea
push
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
mov
mov
call
test
jl
mov
lea
push
add
push
push
mov
call
cmp
jae
mov
lea
push
push
lea
mov
push
call
lea
mov
lea
push
lea
push
mov
lea
shl
lea
push
call
mov
mov
lea
push
add
mov
push
push
mov
call
mov
lea
push
push
lea
mov
push
call
mov
mov
lea
push
lea
mov
push
push
mov
call
mov
mov
imul
lea
push
add
add
push
push
mov
mov
call
mov
mov
imul
mov
add
mov
sar
sar
add
add
mov
mov
jmp
xor
mov
mov
mov
mov
imul
mov
mov
sar
mov
shr
add
mov
sub
mov
imul
sar
mov
shr
add
cmp
jae
mov
call
cmp
jbe
mov
call
mov
jmp
mov
mov
call
mov
add
mov
jns
xor
mov
shl
add
lea
shl
push
call
add
mov
mov
mov
push
push
push
call
lea
mov
push
push
push
mov
call
mov
mov
add
mov
push
push
push
call
mov
mov
push
push
mov
call
mov
push
call
mov
add
shl
add
lea
mov
lea
mov
call
inc
mov
mov
shl
add
lea
lea
mov
jmp
mov
mov
sub
imul
sar
mov
shr
add
cmp
jae
lea
mov
push
push
push
call
mov
lea
mov
push
sub
mov
imul
sar
mov
mov
shr
add
mov
sub
push
push
call
mov
cmp
je
mov
add
mov
lea
cmp
rep
jne
jmp
lea
push
push
push
mov
mov
call
mov
lea
cmp
je
sub
sub
mov
mov
mov
cmp
rep
jne
lea
cmp
je
mov
add
mov
lea
cmp
rep
jne
addl
mov
mov
mov
add
dec
mov
mov
jne
pop
pop
pop
pop
add
ret
sub
push
mov
push
lea
mov
push
mov
cmp
push
mov
je
mov
mov
add
mov
add
cmp
rep
jne
mov
mov
xor
mov
mov
mov
xor
lea
movb
rep
mov
lea
stos
stos
mov
push
add
push
push
mov
call
mov
test
je
lea
push
mov
call
test
je
mov
test
jle
mov
lea
lea
shl
cltd
idiv
mov
jmp
movl
mov
mov
sub
mov
imul
sar
mov
mov
shr
add
cmp
jae
mov
test
je
mov
mov
sub
imul
sar
mov
shr
add
cmp
mov
ja
mov
test
jne
xor
jmp
sub
mov
imul
sar
mov
shr
add
add
test
mov
jge
xor
lea
sub
lea
shl
push
call
add
mov
mov
mov
push
push
push
call
lea
mov
push
push
push
mov
call
mov
mov
add
mov
push
push
push
call
mov
mov
push
push
mov
call
mov
push
call
lea
add
sub
lea
lea
mov
mov
call
inc
mov
lea
sub
lea
lea
mov
jmp
mov
mov
sub
imul
sar
mov
shr
add
cmp
jae
lea
push
push
push
mov
call
mov
lea
mov
push
sub
mov
imul
sar
mov
mov
shr
add
mov
sub
push
push
call
mov
cmp
je
mov
add
mov
lea
cmp
rep
jne
jmp
lea
push
push
push
mov
mov
call
mov
lea
cmp
je
sub
sub
mov
mov
mov
cmp
rep
jne
lea
cmp
je
mov
add
mov
lea
cmp
rep
jne
addl
mov
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
mov
push
mov
test
mov
je
mov
mov
push
lea
push
cmp
push
mov
je
mov
mov
mov
add
rep
mov
add
cmp
jne
mov
mov
mov
lea
push
push
push
mov
mov
call
mov
movl
lea
mov
lea
push
lea
push
push
mov
call
mov
test
je
mov
test
je
mov
add
lea
rep
mov
mov
lea
rep
jmp
lea
push
lea
push
push
mov
call
lea
push
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
push
push
mov
mov
call
mov
lea
test
lea
lea
lea
mov
jl
lea
push
lea
push
push
mov
call
cmp
jae
lea
lea
push
push
push
mov
call
lea
mov
shl
sub
lea
shl
sub
push
shl
push
lea
push
mov
call
mov
lea
push
add
push
push
mov
call
mov
lea
push
push
lea
mov
push
call
mov
lea
push
push
lea
mov
push
call
lea
push
add
push
push
mov
call
mov
mov
imul
mov
mov
sar
add
add
mov
imul
mov
mov
sar
add
add
test
jle
test
jle
mov
mov
mov
mov
sub
mov
imul
sar
mov
shr
add
cmp
jae
mov
call
cmp
jbe
mov
call
mov
jmp
mov
mov
call
mov
add
mov
jns
xor
mov
shl
add
lea
lea
shl
sub
shl
push
call
add
mov
mov
mov
push
push
push
call
lea
mov
push
push
push
mov
call
mov
mov
add
mov
push
push
push
call
mov
mov
push
push
mov
call
mov
push
call
mov
add
shl
add
lea
mov
lea
shl
sub
lea
mov
call
inc
mov
mov
shl
add
lea
lea
shl
sub
lea
mov
jmp
mov
mov
sub
imul
sar
mov
shr
add
cmp
jae
lea
mov
push
push
push
call
mov
lea
mov
push
sub
mov
imul
sar
mov
mov
shr
add
mov
sub
push
push
call
mov
cmp
je
mov
add
mov
lea
cmp
rep
jne
jmp
lea
push
push
push
mov
mov
call
mov
lea
cmp
je
sub
sub
mov
mov
mov
cmp
rep
jne
lea
mov
cmp
je
mov
add
mov
lea
cmp
rep
jne
addl
mov
mov
mov
add
dec
mov
mov
jne
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
mov
lea
push
push
mov
push
mov
call
mov
mov
mov
lea
lea
push
push
push
mov
call
cmp
je
inc
add
cmp
jl
pop
pop
pop
xor
pop
pop
ret
pop
pop
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
test
push
mov
je
mov
cmp
ja
mov
push
lea
push
push
push
mov
call
lea
mov
push
push
lea
mov
mov
lea
shl
add
push
call
add
push
push
call
add
test
pop
je
movb
pop
pop
ret
nop
nop
push
mov
push
mov
test
je
mov
mov
pushl
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
mov
lea
push
lea
push
push
call
mov
add
lea
push
call
add
ret
nop
push
mov
lea
push
push
push
call
mov
xor
cmp
sbb
neg
pop
ret
nop
mov
push
test
push
mov
je
mov
mov
test
jne
mov
mov
push
push
mov
call
mov
lea
push
push
push
mov
call
cmp
je
mov
push
push
push
call
add
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
cmp
mov
jne
lea
push
push
push
call
mov
push
call
mov
add
neg
sbb
lea
inc
call
lea
push
push
push
call
mov
push
call
add
cmp
lea
sete
call
mov
test
jne
push
mov
xor
lea
rep
mov
push
stos
stos
lea
mov
push
movb
mov
call
pop
pop
pop
add
ret
nop
mov
test
je
mov
push
shl
cltd
and
mov
add
sar
push
mov
shl
cltd
and
add
sar
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
mov
je
push
mov
xor
lea
rep
mov
push
stos
stos
mov
mov
lea
mov
mov
push
mov
movb
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
mov
je
push
mov
xor
lea
rep
mov
push
stos
stos
mov
mov
lea
mov
mov
push
mov
movb
call
pop
add
ret
nop
nop
nop
nop
nop
mov
sub
test
mov
je
push
mov
xor
lea
rep
mov
push
stos
stos
mov
mov
lea
mov
mov
push
mov
movb
call
pop
add
ret
nop
nop
nop
nop
nop
mov
push
push
push
mov
mov
sub
test
push
je
mov
lea
push
push
mov
call
mov
test
mov
jl
mov
mov
and
and
movswl
push
push
push
push
push
call
add
lea
push
call
push
lea
push
push
movl
call
mov
mov
push
call
lea
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
mov
sub
test
mov
je
push
mov
xor
lea
rep
mov
push
stos
stos
mov
mov
lea
mov
mov
push
mov
movb
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
sub
cmp
je
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
xor
lea
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
rep
lea
push
stos
mov
push
mov
movb
call
pop
add
ret
nop
nop
nop
nop
nop
mov
sub
test
mov
je
push
mov
xor
lea
rep
stos
stos
mov
lea
mov
mov
push
push
mov
movb
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
mov
sub
test
push
je
mov
lea
push
push
mov
call
mov
test
mov
jl
mov
mov
and
and
movswl
push
push
push
push
push
call
add
lea
push
call
push
lea
push
push
movl
call
mov
mov
push
call
lea
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
push
mov
call
mov
mov
push
call
test
je
mov
push
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
mov
je
push
mov
xor
lea
rep
stos
stos
mov
lea
mov
mov
push
push
mov
movb
movl
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
test
jbe
cmp
ja
mov
push
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jge
mov
push
push
call
add
ret
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
sub
mov
mov
test
mov
je
push
push
mov
xor
lea
mov
rep
stos
stos
lea
xor
test
movb
mov
movb
mov
jle
mov
push
push
lea
mov
mov
mov
mov
cltd
idiv
mov
add
add
mov
imul
sar
mov
shr
add
inc
mov
cmp
jl
mov
pop
pop
mov
lea
push
lea
push
mov
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
sub
test
mov
je
push
push
mov
xor
lea
mov
rep
stos
stos
mov
movb
test
lea
movb
mov
mov
sete
test
mov
jle
mov
mov
lea
rep
mov
lea
lea
push
push
mov
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
push
mov
jne
xor
pop
add
ret
mov
push
push
push
call
mov
xor
lea
mov
rep
add
lea
stos
push
push
stos
push
mov
movb
movb
call
mov
lea
push
add
push
push
mov
call
mov
pop
cmp
jae
movb
mov
lea
push
push
mov
call
mov
pop
neg
sbb
and
add
add
ret
nop
nop
mov
sub
test
mov
je
push
mov
xor
lea
rep
stos
stos
mov
lea
mov
mov
push
push
mov
movb
movb
movb
call
pop
add
ret
nop
nop
nop
nop
nop
sub
mov
mov
mov
lea
push
push
movb
movb
movb
movb
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
lea
mov
mov
mov
mov
mov
mov
push
push
movb
movb
movb
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
movb
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
mov
xor
lea
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
sub
push
mov
push
mov
movl
lea
movl
call
mov
push
mov
call
xor
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
add
add
mov
movl
push
lea
push
push
mov
call
mov
push
call
add
lea
mov
mov
call
mov
dec
mov
jne
mov
push
call
add
mov
lea
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
push
mov
lea
push
push
mov
call
mov
push
call
add
lea
movl
movl
call
mov
pop
dec
mov
jne
mov
push
call
add
movl
lea
call
pop
ret
nop
nop
nop
nop
mov
test
je
mov
mov
push
mov
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
push
mov
je
push
mov
test
push
jne
lea
push
push
push
call
mov
push
call
add
lea
mov
call
mov
xor
lea
mov
rep
mov
push
stos
stos
lea
mov
push
mov
movb
movb
mov
movl
call
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
xor
lea
push
rep
mov
stos
stos
mov
mov
lea
mov
mov
push
mov
movb
movl
movl
call
pop
add
ret
push
mov
push
mov
test
je
mov
mov
pushl
pushl
pushl
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
mov
push
push
je
call
ret
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
test
push
je
mov
push
call
mov
push
push
push
push
call
mov
mov
test
je
push
push
push
push
call
push
mov
push
push
push
push
call
push
push
push
push
call
test
pop
je
push
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
push
push
movsbl
push
call
shl
or
push
mov
push
push
push
call
pop
ret
nop
nop
push
push
mov
push
mov
mov
test
je
push
push
call
shl
or
mov
push
push
push
call
push
push
movsbl
push
call
shl
or
mov
push
push
push
call
push
push
call
shl
or
mov
push
push
push
call
test
pop
je
push
push
call
shl
or
mov
push
push
push
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
mov
sub
test
je
push
push
push
lea
push
push
call
mov
mov
mov
lea
push
push
mov
mov
call
mov
push
call
mov
mov
mov
push
push
call
mov
and
shl
and
or
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
push
push
call
push
call
pop
pop
pop
pop
add
ret
nop
mov
push
push
push
test
push
je
mov
mov
lea
push
push
push
push
call
mov
mov
mov
mov
shr
rep
mov
lea
and
push
rep
mov
push
push
push
call
pop
pop
pop
pop
ret
mov
push
push
push
call
mov
test
je
mov
mov
mov
lea
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
lea
push
push
push
push
push
call
push
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
test
je
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
push
push
push
call
mov
test
je
xor
xor
cmp
jae
mov
mov
lea
sub
push
push
mov
lea
push
lea
push
push
call
mov
add
inc
cmp
jl
push
call
cmp
jae
push
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
mov
push
push
mov
lea
push
push
lea
push
push
call
mov
mov
lea
sub
push
push
sub
push
push
mov
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
push
mov
push
mov
mov
shr
rep
mov
and
rep
mov
test
je
mov
add
push
push
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
add
test
je
mov
push
push
mov
call
ret
mov
push
push
call
ret
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
push
mov
call
add
xor
mov
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
mov
push
mov
mov
push
mov
test
je
mov
cmp
jne
cmp
jne
lea
call
mov
lea
movl
mov
call
mov
movb
cmp
mov
je
mov
push
mov
call
mov
lea
call
push
call
mov
add
cmp
mov
jne
lea
movb
call
mov
mov
mov
lea
mov
mov
movl
movl
mov
mov
mov
mov
mov
mov
call
mov
pop
pop
pop
mov
mov
add
ret
cmp
je
mov
lea
call
lea
push
push
mov
call
mov
cmp
jne
mov
pop
pop
pop
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
mov
push
push
lea
call
mov
lea
mov
call
mov
mov
cmp
movl
jne
mov
jmp
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
mov
cmp
jne
lea
call
mov
cmp
mov
je
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
jmp
lea
mov
call
mov
mov
cmp
je
mov
mov
cmp
jne
lea
call
mov
mov
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
jmp
lea
mov
call
mov
mov
cmp
je
mov
mov
cmp
jne
lea
call
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
test
jne
mov
mov
lea
movl
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
lea
mov
call
mov
mov
mov
cmp
jne
mov
cmp
jne
jmp
mov
mov
test
jne
mov
mov
lea
movl
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
lea
mov
call
mov
mov
mov
cmp
jne
mov
cmp
jne
movl
mov
mov
cmp
jne
jmp
mov
cmp
jne
mov
mov
lea
movl
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
mov
lea
jmp
mov
cmp
jne
mov
mov
mov
lea
jmp
mov
mov
mov
lea
jmp
mov
cmp
jne
mov
mov
lea
movl
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
lea
call
mov
mov
mov
test
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
xor
mov
mov
mov
mov
cmp
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
xor
push
mov
mov
mov
call
mov
mov
add
dec
mov
mov
lea
mov
movl
call
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
push
lea
call
mov
mov
xor
cmp
mov
mov
je
mov
mov
push
call
mov
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
push
mov
mov
mov
call
mov
add
cmp
mov
jne
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
lea
call
mov
xor
cmp
mov
jne
push
call
mov
movl
mov
mov
mov
add
mov
mov
push
inc
mov
mov
call
mov
mov
mov
mov
mov
mov
add
lea
mov
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
test
jne
ret
mov
sub
mov
imul
sar
mov
shr
add
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
cmp
je
mov
push
push
test
je
mov
mov
mov
rep
add
add
cmp
jne
pop
pop
pop
ret
mov
pop
ret
nop
mov
test
jbe
push
mov
push
mov
mov
push
test
je
mov
mov
mov
rep
add
dec
jne
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
ret
mov
sub
mov
imul
sar
mov
shr
add
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
cmp
je
mov
push
push
test
je
mov
mov
mov
rep
add
add
cmp
jne
pop
pop
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
nop
mov
test
jbe
push
mov
push
mov
mov
push
test
je
mov
mov
mov
rep
add
dec
jne
pop
pop
pop
ret
mov
test
jne
ret
mov
sub
mov
imul
sar
mov
shr
add
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
cmp
je
mov
push
push
test
je
mov
mov
mov
rep
add
add
cmp
jne
pop
pop
pop
ret
mov
pop
ret
nop
mov
test
jbe
push
mov
push
mov
mov
push
test
je
mov
mov
mov
rep
add
dec
jne
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
mov
mov
movl
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
mov
cmp
jne
lea
call
mov
jmp
mov
mov
cmp
jne
mov
mov
mov
cmp
je
mov
cmp
je
mov
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
mov
mov
mov
pop
pop
ret
push
call
add
mov
mov
mov
pop
pop
ret
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
push
push
mov
push
mov
sub
mov
push
add
lea
push
push
movl
call
push
lea
movl
call
push
lea
mov
call
test
jl
test
jle
sub
add
sub
lea
push
lea
push
push
call
push
lea
movb
call
lea
movb
call
push
push
lea
call
push
push
lea
call
mov
lea
push
mov
call
movl
lea
movb
call
mov
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
movl
call
mov
pop
pop
ret
nop
push
push
mov
push
lea
mov
push
push
push
mov
movl
call
mov
mov
add
mov
push
push
call
mov
pop
pop
pop
ret
nop
nop
sub
push
push
mov
push
test
mov
movl
jne
mov
push
mov
call
mov
pop
pop
pop
add
ret
push
mov
xor
lea
movb
rep
stos
stos
lea
xor
sub
lea
push
push
lea
push
mov
call
cmpb
je
inc
cmp
jb
mov
lea
push
mov
call
mov
pop
pop
pop
pop
add
ret
nop
push
push
mov
push
mov
sub
mov
push
push
push
lea
mov
push
mov
mov
movl
mov
push
lea
movb
call
mov
lea
push
push
push
push
mov
call
add
push
lea
movb
call
lea
movb
call
mov
mov
test
jne
push
lea
call
mov
lea
push
push
push
push
mov
call
add
push
lea
movb
call
lea
movb
call
mov
mov
test
jne
push
lea
call
mov
lea
push
push
push
push
mov
call
add
push
lea
movb
call
lea
movb
call
mov
mov
test
jne
push
lea
call
mov
lea
push
push
push
push
mov
call
add
push
lea
movb
call
lea
movb
call
mov
lea
push
mov
call
mov
lea
push
push
push
mov
movb
call
mov
lea
push
push
lea
mov
push
call
push
call
mov
mov
sub
add
imul
add
sar
mov
shr
add
and
jns
dec
or
inc
mov
jne
mov
push
lea
call
mov
push
push
movb
call
add
test
jne
mov
lea
push
push
push
mov
call
mov
mov
lea
add
push
push
push
mov
call
mov
lea
lea
cltd
sub
mov
sar
imul
imul
add
js
cmp
jge
mov
push
push
push
call
mov
mov
mov
mov
push
push
push
push
push
call
mov
push
push
push
call
add
jmp
mov
push
push
call
add
test
jne
mov
push
mov
call
jmp
mov
test
je
mov
push
mov
call
jmp
mov
mov
call
mov
call
mov
push
mov
call
mov
test
je
mov
sub
mov
imul
sar
mov
shr
add
je
mov
mov
lea
push
call
mov
test
jne
push
push
push
call
add
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
call
mov
mov
lea
add
push
push
push
mov
call
mov
mov
sub
mov
sub
mov
cltd
imul
sub
sar
imul
add
jns
mov
jmp
cmp
mov
jle
push
mov
call
mov
push
push
call
add
cmp
jle
push
mov
call
mov
mov
push
push
mov
call
mov
push
mov
call
jmp
cmp
jge
mov
mov
test
je
call
cltd
mov
idiv
mov
lea
push
call
cltd
mov
idiv
mov
lea
jmp
mov
lea
push
push
push
mov
call
mov
lea
push
push
lea
mov
push
call
cmpl
jne
mov
mov
mov
push
call
mov
test
je
push
mov
call
mov
push
push
call
mov
add
mov
push
call
push
push
push
call
add
mov
mov
test
je
push
mov
call
mov
lea
push
push
push
mov
call
mov
lea
push
push
lea
lea
push
mov
call
mov
test
mov
je
lea
push
add
push
push
mov
call
mov
xor
lea
lea
shl
div
cmp
jge
mov
push
mov
call
mov
lea
push
push
push
mov
call
mov
lea
push
push
lea
lea
push
mov
call
mov
test
mov
je
lea
push
add
push
push
mov
call
mov
xor
lea
lea
shl
div
cmp
jge
mov
push
mov
call
jmp
push
mov
call
mov
push
mov
call
jmp
push
mov
call
mov
push
mov
call
mov
mov
mov
push
call
mov
mov
test
jle
mov
add
push
push
push
call
add
mov
mov
call
lea
push
push
mov
call
xor
cmp
setge
mov
test
je
push
mov
call
lea
push
push
mov
call
xor
cmp
setge
mov
test
je
push
mov
call
jmp
mov
mov
push
push
call
add
test
jne
mov
mov
test
jne
lea
push
push
push
call
mov
push
call
add
lea
mov
call
lea
push
push
push
call
mov
push
call
add
lea
mov
call
mov
lea
push
push
push
mov
call
mov
mov
cmp
mov
jge
cmpl
je
cmp
jge
push
lea
call
mov
mov
jmp
push
lea
call
mov
mov
jmp
cmp
jge
cmpl
je
cmp
jge
push
lea
call
mov
mov
jmp
push
lea
call
mov
mov
mov
push
push
push
call
mov
push
push
push
call
mov
mov
push
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
add
push
push
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
add
jmp
mov
push
mov
call
jmp
push
push
call
add
test
jne
mov
push
push
push
call
mov
push
push
push
call
mov
mov
push
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
add
push
push
push
push
push
call
mov
push
push
push
call
add
jmp
push
call
mov
mov
imul
add
add
sar
mov
mov
shr
add
mov
cltd
idiv
test
jl
cmp
jge
mov
push
push
push
call
mov
add
test
je
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
mov
call
add
jmp
mov
push
push
push
mov
call
add
mov
mov
push
push
push
inc
call
mov
mov
push
push
push
inc
call
mov
mov
push
push
push
inc
call
mov
push
push
push
call
add
jmp
push
push
mov
call
mov
push
mov
call
jmp
mov
push
push
push
call
mov
mov
push
push
push
push
call
add
mov
movl
mov
mov
mov
lea
lea
push
movb
call
push
lea
push
push
movb
call
push
lea
push
push
movb
call
push
push
lea
movb
push
call
push
lea
push
push
movb
call
mov
lea
push
push
movb
call
mov
add
mov
mov
mov
xor
repz
je
sbb
sbb
mov
lea
shl
sub
shl
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movl
add
mov
lea
movb
call
lea
movb
call
lea
movb
call
mov
mov
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
mov
push
push
push
lea
mov
xor
mov
mov
cmp
push
mov
jne
lea
mov
cmp
jae
mov
mov
mov
call
mov
push
mov
call
mov
mov
mov
push
push
push
push
call
add
jmp
mov
call
cmp
jne
mov
cmp
jbe
cmp
jae
mov
mov
push
mov
call
mov
push
mov
call
jmp
mov
mov
add
cmp
mov
jne
push
push
push
mov
mov
call
mov
mov
push
mov
call
mov
mov
call
jmp
cmp
jne
mov
xor
lea
lea
rep
mov
or
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
xor
rep
mov
inc
not
mov
cmp
jl
mov
lea
push
add
push
push
mov
call
push
push
mov
call
mov
push
mov
jmp
cmp
jne
mov
lea
push
add
push
push
mov
call
xor
mov
inc
not
mov
cmp
jl
mov
lea
push
push
call
add
test
je
mov
push
mov
call
jmp
mov
mov
push
push
push
push
call
mov
push
push
push
call
add
jmp
cmp
jne
mov
or
mov
xor
repnz
not
dec
je
xor
test
jle
mov
cmp
jl
cmp
jg
inc
cmp
jl
mov
push
call
push
push
push
call
add
jmp
cmpb
je
lea
push
push
push
call
mov
push
call
add
lea
mov
call
mov
mov
mov
movl
cmp
jl
push
lea
push
push
push
call
add
lea
push
lea
push
push
movb
call
push
lea
movb
call
lea
movb
call
mov
push
push
call
add
test
je
lea
movb
call
inc
cmp
jle
jmp
mov
push
push
push
call
add
lea
movb
call
cmp
jle
mov
mov
mov
push
push
push
push
push
call
mov
push
push
call
add
lea
movl
call
jmp
push
push
mov
call
mov
push
mov
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
lea
mov
push
push
push
movl
call
add
mov
movl
mov
test
jne
lea
push
push
push
call
add
push
lea
movb
call
lea
movb
call
mov
lea
push
mov
call
movl
lea
movb
call
mov
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
push
mov
mov
call
mov
push
push
push
lea
push
push
mov
lea
call
mov
lea
mov
rep
mov
test
jne
mov
mov
call
mov
push
mov
call
mov
mov
pop
pop
pop
mov
pop
ret
mov
lea
mov
mov
mov
cmp
jne
test
je
mov
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
jne
mov
push
call
mov
push
mov
call
mov
mov
pop
pop
pop
mov
pop
ret
mov
lea
mov
mov
mov
cmp
jne
test
je
mov
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
jne
mov
push
call
mov
push
push
push
call
mov
add
mov
push
call
mov
mov
call
mov
mov
pop
pop
pop
mov
pop
ret
mov
lea
mov
mov
mov
cmp
jne
test
je
mov
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
jne
mov
mov
call
mov
mov
pop
pop
pop
mov
pop
ret
mov
lea
mov
mov
mov
cmp
jne
test
je
mov
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
jne
mov
mov
call
mov
mov
pop
pop
pop
mov
pop
ret
lea
push
call
mov
xor
lea
movb
rep
stos
stos
mov
mov
movl
mov
lea
push
push
movb
call
mov
lea
push
push
call
add
test
jbe
cmp
jbe
sub
add
lea
push
lea
mov
shr
rep
mov
and
rep
movb
lea
push
call
lea
push
push
mov
call
add
test
jbe
cmp
jbe
sub
add
sub
lea
push
push
call
push
lea
movb
call
lea
movb
call
lea
push
push
call
mov
lea
push
push
call
add
test
jbe
cmp
jbe
sub
add
sub
lea
push
push
call
push
lea
movb
call
lea
movb
call
lea
call
lea
mov
mov
mov
cmp
jne
lea
lea
push
push
mov
call
mov
movb
test
jne
mov
push
push
call
add
test
jne
push
push
call
add
test
jne
push
push
call
add
test
je
mov
mov
xor
test
mov
setne
inc
mov
mov
call
mov
xor
lea
movl
rep
mov
test
jne
mov
lea
lea
push
push
push
mov
call
mov
test
mov
jl
mov
mov
cmp
jne
mov
push
push
push
call
mov
add
test
jne
mov
mov
push
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
add
jmp
jle
cmp
jne
mov
test
jne
test
jne
mov
mov
sub
push
push
mov
call
jmp
movw
movb
movb
mov
push
push
mov
call
mov
push
push
push
call
mov
add
mov
push
call
jmp
mov
cmp
jle
lea
push
lea
push
push
call
add
mov
movb
test
jne
mov
lea
push
push
mov
call
xor
movb
cmp
mov
setge
test
mov
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
test
je
lea
push
lea
push
push
call
add
mov
movb
test
jne
mov
push
mov
call
mov
movb
test
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
push
mov
call
mov
push
push
push
call
mov
push
push
push
call
add
jmp
mov
test
jne
mov
push
mov
call
test
je
mov
jmp
xor
mov
cmp
jg
cmpl
jne
mov
test
jne
mov
push
mov
call
test
je
mov
jmp
xor
mov
cmp
jle
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
add
jmp
mov
call
test
je
mov
push
push
call
mov
xor
add
cmp
je
lea
mov
test
je
cmp
je
dec
mov
jmp
mov
call
mov
cmp
jl
mov
call
mov
cmp
jl
lea
push
push
push
call
mov
push
push
call
add
lea
test
sete
call
mov
test
je
mov
push
push
call
mov
xor
add
cmp
je
lea
mov
test
je
cmp
je
dec
mov
jmp
mov
push
push
push
call
mov
add
test
jne
mov
mov
mov
push
push
push
push
push
call
add
cmp
jne
mov
test
jne
mov
mov
push
push
push
push
push
call
add
mov
movb
test
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
jmp
mov
push
push
call
mov
xor
add
cmp
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
jmp
mov
lea
push
mov
call
push
mov
movb
call
test
lea
movb
setg
call
mov
test
je
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
add
jmp
mov
mov
push
push
push
push
call
mov
mov
add
push
push
mov
call
mov
test
mov
jne
mov
mov
push
push
push
push
call
add
jmp
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
mov
push
push
push
push
call
mov
add
push
push
push
call
mov
push
push
push
mov
call
add
mov
lea
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
jne
mov
push
push
push
call
mov
push
push
push
mov
call
add
mov
mov
test
je
mov
mov
push
push
push
inc
call
add
mov
mov
mov
inc
mov
mov
push
push
push
push
push
call
mov
mov
push
push
push
inc
call
mov
mov
push
push
push
inc
call
mov
mov
push
push
push
inc
call
mov
add
mov
test
je
mov
mov
push
push
push
inc
call
add
mov
mov
push
push
push
inc
call
mov
add
mov
test
jle
mov
lea
mov
push
push
push
push
inc
call
add
mov
mov
test
je
mov
mov
push
push
push
inc
call
add
mov
mov
mov
inc
mov
push
push
push
push
call
mov
mov
push
push
push
inc
call
mov
mov
push
push
push
inc
call
add
test
jle
add
mov
mov
sub
fildl
mov
inc
fmull
fstpl
push
push
push
call
add
mov
push
push
push
call
add
mov
test
je
mov
or
xor
repnz
not
dec
cmp
jae
call
push
call
cltd
mov
add
idiv
cmp
jge
mov
movl
mov
mov
mov
lea
movb
call
lea
movb
call
lea
movb
call
mov
mov
call
jmp
mov
lea
push
push
push
call
add
lea
movb
call
lea
movl
call
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
push
mov
push
mov
call
mov
movl
mov
test
jne
lea
movl
call
xor
pop
mov
mov
add
ret
mov
mov
push
push
push
lea
lea
mov
push
call
mov
lea
push
push
push
mov
movb
call
mov
lea
add
push
push
push
mov
call
mov
mov
push
push
mov
call
mov
mov
lea
push
push
push
call
add
mov
push
push
call
mov
mov
lea
push
push
push
call
add
mov
push
push
call
mov
mov
push
push
push
push
call
mov
lea
push
push
push
call
add
mov
push
push
call
mov
push
push
call
add
test
jne
mov
push
push
call
add
jmp
mov
push
push
call
add
test
jne
mov
push
push
mov
call
mov
mov
xor
call
push
mov
call
mov
lea
push
push
push
mov
call
mov
lea
push
push
lea
mov
push
call
cmpl
jb
mov
push
push
call
add
test
je
mov
push
push
push
mov
call
add
mov
mov
mov
inc
mov
mov
push
push
push
push
push
call
add
mov
mov
mov
push
push
push
push
inc
call
mov
push
push
call
add
test
jne
mov
mov
push
push
push
inc
call
add
mov
mov
push
mov
mov
push
push
push
push
inc
call
mov
add
lea
mov
push
push
call
mov
mov
mov
push
push
push
push
movb
inc
call
add
lea
movb
call
mov
push
push
push
call
add
jmp
mov
push
push
call
add
test
je
mov
push
push
call
add
test
jne
mov
mov
call
mov
call
mov
xor
cmp
jne
mov
jmp
mov
sub
mov
imul
sar
mov
shr
add
mov
mov
mov
cmp
jle
mov
mov
lea
push
push
push
mov
call
mov
lea
add
push
push
push
mov
call
mov
mov
cmp
je
mov
mov
test
ja
mov
mov
inc
add
cmp
mov
jl
mov
mov
mov
cmp
jne
mov
push
push
mov
call
mov
mov
call
mov
push
push
push
push
call
mov
mov
call
push
mov
call
jmp
mov
push
mov
call
jmp
lea
push
push
lea
call
mov
push
push
call
add
lea
test
sete
call
mov
push
test
push
mov
je
call
mov
mov
call
lea
push
push
lea
call
mov
mov
push
movb
call
lea
mov
movb
call
test
je
mov
mov
call
jmp
call
mov
mov
push
mov
call
mov
push
push
call
add
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
mov
push
xor
push
cmp
mov
je
mov
or
xor
repnz
not
dec
cmp
jb
mov
push
push
mov
mov
mov
or
xor
repnz
not
dec
push
mov
lea
push
mov
mov
mov
call
test
je
mov
mov
mov
push
shr
rep
mov
and
rep
lea
call
mov
push
lea
mov
mov
call
lea
movb
push
lea
call
lea
lea
push
movb
call
mov
lea
lea
push
push
lea
movb
call
mov
mov
lea
mov
lea
push
push
lea
mov
call
mov
lea
movb
mov
mov
call
push
lea
movb
call
mov
or
mov
xor
add
push
repnz
not
dec
mov
mov
push
call
test
je
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
movb
mov
pop
test
pop
je
lea
mov
test
je
cmp
je
dec
pop
mov
pop
mov
mov
add
ret
push
call
add
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
mov
xor
mov
mov
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
lea
push
push
push
mov
call
mov
lea
push
add
push
push
mov
call
mov
lea
push
push
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
lea
push
push
push
mov
call
mov
lea
push
add
push
push
mov
call
mov
lea
push
push
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
lea
push
push
push
mov
call
mov
lea
push
add
push
push
mov
call
mov
lea
push
push
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
lea
push
push
push
mov
call
mov
lea
push
push
lea
lea
push
mov
call
mov
cmp
mov
je
lea
push
add
push
push
mov
call
mov
xor
lea
push
lea
push
lea
shl
div
push
jmp
lea
mov
push
push
push
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
push
push
push
call
add
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
lea
push
push
push
mov
call
mov
lea
push
add
push
push
mov
call
mov
lea
push
push
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
lea
push
push
push
mov
call
mov
lea
push
add
push
push
mov
call
mov
lea
push
push
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
lea
push
push
push
mov
call
mov
lea
push
add
push
push
mov
call
mov
lea
push
push
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
lea
push
push
push
mov
call
mov
lea
push
add
push
push
mov
call
mov
lea
push
push
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
push
push
push
call
add
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
push
push
push
call
add
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
push
push
push
call
add
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
push
push
push
call
add
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
push
push
push
call
add
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
mov
push
mov
call
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
push
push
push
call
add
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
push
push
push
call
add
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
push
push
push
call
add
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
push
push
push
call
add
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
call
mov
cmp
jne
xor
jmp
mov
sub
mov
imul
sar
mov
shr
add
lea
push
push
push
call
mov
add
mov
push
call
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
call
mov
cmp
je
mov
sub
mov
imul
sar
mov
shr
add
je
mov
mov
add
mov
push
call
jmp
mov
mov
push
mov
call
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
push
push
push
call
add
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
lea
push
push
push
call
add
mov
lea
push
push
push
mov
call
mov
add
sub
push
call
mov
add
mov
push
call
lea
movl
call
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
lea
push
push
push
call
add
mov
lea
push
push
push
movl
call
mov
add
sub
push
call
mov
add
mov
push
call
lea
movl
call
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
lea
push
push
push
call
add
mov
lea
push
push
push
movl
call
mov
add
sub
push
call
mov
add
mov
push
call
lea
movl
call
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
push
lea
push
push
call
mov
call
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
push
lea
push
push
call
mov
call
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
push
lea
push
push
call
mov
call
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
push
lea
push
push
call
mov
call
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
push
lea
push
push
call
mov
call
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
lea
push
push
push
call
add
mov
movl
cmp
jne
or
jmp
push
lea
call
xor
test
setg
mov
lea
push
push
push
call
mov
add
mov
push
call
lea
movl
call
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
push
push
push
call
add
jmp
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
cmp
jne
mov
push
push
push
call
add
jmp
mov
mov
mov
mov
mov
mov
lea
lea
push
movl
call
push
lea
push
push
movb
call
push
lea
push
push
movb
call
push
push
lea
movb
push
call
push
lea
mov
push
push
mov
call
mov
lea
push
push
movb
call
mov
add
mov
mov
mov
xor
repz
je
sbb
sbb
mov
lea
shl
sub
shl
call
lea
mov
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
mov
add
lea
movl
call
lea
movb
call
lea
movl
call
mov
mov
mov
or
xor
xor
xor
mov
repnz
not
dec
mov
mov
mov
cmp
jbe
call
mov
xor
cmp
je
mov
test
je
cmp
je
cmp
jne
dec
mov
mov
mov
mov
jmp
mov
jmp
xor
cmp
jne
push
lea
call
jmp
cmp
ja
cmp
jae
push
lea
call
push
lea
call
mov
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
movb
mov
movl
mov
mov
mov
mov
mov
push
lea
movb
mov
call
mov
lea
push
push
push
lea
call
mov
push
lea
movb
mov
call
mov
lea
push
push
push
lea
call
mov
lea
lea
push
push
add
movb
call
mov
mov
mov
push
lea
movb
call
mov
cmp
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
cmp
mov
mov
movb
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
mov
cmp
jne
mov
mov
push
mov
call
mov
cmp
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
mov
call
push
push
push
mov
mov
cmp
je
mov
jmp
pop
xor
or
add
incl
pop
mov
mov
mov
call
mov
cmpl
jne
jmp
mov
xor
mov
div
xor
mov
div
test
jne
push
mov
call
test
je
push
mov
mov
mov
call
push
mov
mov
mov
call
mov
mov
xor
cmpl
sete
test
jne
mov
cmpl
jne
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
add
mov
movl
jmp
push
mov
call
test
je
push
mov
mov
mov
push
call
add
jmp
mov
mov
mov
call
mov
call
cmp
jg
mov
mov
xor
cmpl
sete
test
jne
mov
cmpl
jne
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
add
mov
movl
jmp
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
add
mov
push
lea
push
mov
push
mov
call
cmpl
jne
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
add
mov
push
lea
push
mov
add
push
mov
call
mov
mov
cmpl
je
push
lea
push
mov
add
push
mov
call
mov
imul
xor
divl
mov
jmp
movl
cmpl
jne
mov
mov
mov
call
cmp
jne
jmp
push
lea
push
mov
mov
mov
call
mov
mov
mov
movl
mov
mov
mov
push
mov
push
call
add
neg
sbb
inc
and
test
je
lea
push
lea
push
mov
call
push
push
mov
push
mov
push
mov
call
mov
xor
cmpl
setl
mov
mov
and
test
je
movl
jmp
movl
mov
mov
movl
lea
call
mov
and
test
je
movl
mov
mov
push
mov
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
lea
push
mov
mov
mov
call
mov
mov
mov
movl
mov
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
movl
lea
call
push
lea
push
mov
mov
mov
call
mov
mov
mov
movl
mov
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
movl
lea
call
push
push
mov
mov
mov
call
push
mov
call
push
mov
mov
mov
call
jmp
push
lea
push
mov
mov
mov
call
mov
mov
mov
movl
mov
mov
xor
cmpl
sete
test
jne
lea
push
lea
push
mov
call
push
push
mov
push
mov
push
mov
call
mov
xor
cmpl
setl
mov
mov
and
test
je
movl
jmp
movl
mov
mov
movl
lea
call
mov
and
test
je
movl
mov
mov
mov
call
movl
push
mov
push
push
mov
mov
push
call
mov
mov
push
mov
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
lea
push
mov
mov
mov
call
mov
mov
mov
movl
mov
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
movl
lea
call
push
push
mov
mov
mov
call
push
mov
call
push
mov
mov
mov
call
jmp
mov
cmpl
je
mov
call
test
je
push
mov
mov
mov
call
mov
xor
mov
div
xor
mov
div
test
jne
mov
cmpl
je
push
mov
mov
mov
call
push
lea
push
mov
call
mov
mov
mov
mov
mov
push
call
add
xor
cmp
setl
mov
lea
call
mov
and
test
je
push
mov
mov
mov
call
jmp
pushl
popl
mov
mov
mov
push
lea
jmp
mov
pushl
jmp
pushf
mov
pushl
mov
pushl
push
lea
mov
push
pusha
mov
pushf
movl
push
lea
jmp
pusha
mov
mov
pushf
lea
jmp
pushf
pushf
mov
mov
pushf
pusha
lea
jmp
not
neg
ror
add
mov
stc
call
call
mov
decl
pushf
call
pusha
pusha
jmp
jmp
call
sub
pusha
movw
mov
lea
jmp
stc
sub
call
mov
bswap
mov
push
idivl
pusha
pushf
movb
movb
mov
mov
movb
mov
push
mov
pushf
popl
call
neg
add
call
cwtl
movzbw
push
mov
jmp
jmp
decl
jmp
push
pushl
popl
push
pushl
lea
jmp
lea
jno
push
jmp
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
lea
push
lea
push
push
mov
push
call
add
movsbl
cmp
jne
lea
or
xor
repnz
not
add
movb
lea
mov
lea
or
xor
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
lea
push
lea
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
lea
push
lea
push
push
mov
push
call
add
lea
push
lea
push
mov
push
call
add
movl
mov
push
lea
push
mov
mov
mov
call
mov
mov
mov
call
movl
lea
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
lea
push
mov
mov
mov
call
mov
mov
mov
mov
mov
push
call
add
mov
lea
push
call
add
add
push
push
lea
push
call
add
lea
call
lea
push
lea
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
lea
push
mov
mov
mov
call
mov
mov
mov
movl
mov
mov
mov
mov
push
mov
call
movl
lea
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
lea
push
lea
push
lea
push
lea
push
push
mov
push
call
add
movsbl
cmp
jne
lea
or
xor
repnz
not
add
movb
lea
mov
lea
or
xor
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
lea
push
lea
push
mov
mov
mov
call
mov
mov
mov
mov
lea
push
mov
push
call
add
mov
lea
call
jmp
lea
push
lea
push
mov
mov
mov
call
mov
mov
mov
mov
mov
push
call
add
mov
lea
push
call
add
sub
mov
lea
call
lea
push
lea
push
mov
mov
mov
call
lea
call
movl
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
xor
cmpl
setl
mov
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
xor
cmpl
setle
mov
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
xor
cmpl
setne
mov
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
xor
cmpl
sete
mov
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
xor
cmpl
sete
mov
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
xor
cmpl
setg
mov
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
xor
cmpl
setge
mov
cmpl
je
mov
or
xor
repnz
not
add
cmp
jae
jmp
cmpl
je
lea
push
mov
mov
mov
call
jmp
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
push
push
lea
push
call
add
push
lea
push
call
add
mov
cmpl
jne
mov
mov
mov
call
jmp
movl
mov
test
je
mov
push
push
lea
push
call
add
test
jne
jmp
push
lea
push
call
add
mov
cmpl
je
mov
movb
lea
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
jmp
mov
push
call
add
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
lea
push
push
push
lea
push
call
add
push
lea
push
call
add
mov
cmpl
jne
mov
mov
mov
call
jmp
movl
mov
test
je
mov
push
push
lea
push
call
add
test
jne
jmp
push
lea
push
call
add
mov
cmpl
je
mov
movb
lea
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
jmp
mov
push
call
add
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
call
add
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
push
push
mov
push
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
je
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
lea
push
push
mov
push
call
add
lea
push
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
lea
push
push
mov
push
call
add
lea
push
mov
mov
mov
push
call
add
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
mov
push
call
mov
push
call
mov
mov
mov
call
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
mov
push
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
mov
mov
mov
call
mov
mov
mov
movl
mov
mov
push
push
call
add
movl
lea
call
lea
push
mov
call
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
lea
push
push
mov
push
call
add
lea
push
mov
mov
mov
call
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
call
add
cltd
mov
idiv
cltd
mov
idiv
mov
lea
push
call
add
cmp
jge
jmp
movsbl
test
je
lea
push
call
add
cmp
jle
jmp
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
or
xor
repnz
not
add
mov
add
xor
mov
div
mov
movb
mov
xor
lea
rep
stos
stos
movl
jmp
mov
add
mov
mov
cmp
jge
lea
push
push
mov
imul
lea
push
call
add
mov
mov
mov
jmp
mov
push
lea
push
mov
mov
mov
call
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
lea
push
push
mov
push
call
add
lea
push
push
mov
mov
mov
push
call
add
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
add
mov
push
lea
push
mov
push
mov
call
cmpl
jne
mov
mov
mov
call
jmp
lea
push
call
add
mov
lea
push
call
add
mov
cmpl
je
cmpl
jne
mov
mov
mov
call
jmp
mov
mov
mov
mov
lea
push
lea
push
mov
call
mov
push
mov
push
mov
push
mov
push
mov
call
mov
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
mov
mov
mov
push
mov
push
mov
call
cmpl
jge
cmpl
je
cmpl
jne
mov
push
fildl
fdivl
sub
fstpl
fildl
fdivl
sub
fstpl
push
mov
push
call
add
mov
mov
mov
call
movl
jmp
xor
cmpl
setle
dec
and
add
push
mov
mov
mov
call
cmpl
jne
mov
add
mov
mov
cmp
jae
movl
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
mov
mov
mov
add
mov
push
lea
push
mov
push
mov
call
mov
mov
mov
push
mov
push
mov
call
push
mov
mov
mov
call
push
call
add
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
call
add
mov
lea
push
call
add
mov
mov
push
mov
push
mov
call
mov
mov
mov
call
lea
push
call
add
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
call
add
mov
lea
push
call
add
mov
mov
push
mov
push
mov
call
mov
mov
mov
call
lea
push
call
add
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
mov
mov
mov
add
mov
push
lea
push
mov
push
mov
call
mov
mov
lea
push
call
add
mov
call
mov
lea
cltd
idiv
sub
mov
add
mov
call
mov
lea
cltd
idiv
mov
shl
sub
mov
add
mov
mov
push
mov
push
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
push
mov
call
mov
mov
mov
call
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
movsbl
cmp
jne
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
mov
mov
mov
add
mov
push
lea
push
mov
push
mov
call
mov
mov
jmp
push
mov
call
mov
push
mov
push
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
or
xor
repnz
not
add
mov
cmpl
jne
movb
jmp
movl
jmp
mov
add
mov
mov
cmp
jge
mov
movsbl
cmp
jl
mov
movsbl
cmp
jle
movb
jmp
jmp
movb
mov
and
test
je
lea
push
call
add
mov
lea
push
call
add
mov
lea
push
lea
push
mov
call
mov
push
mov
push
mov
push
mov
push
mov
call
mov
jmp
mov
mov
mov
call
lea
push
mov
call
mov
cmpl
je
mov
mov
mov
mov
mov
mov
lea
push
lea
push
mov
call
mov
push
mov
push
mov
push
mov
push
mov
call
mov
jmp
movl
push
lea
push
mov
push
call
add
push
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
mov
mov
mov
call
mov
mov
mov
mov
lea
push
mov
push
call
add
neg
sbb
inc
mov
lea
call
mov
and
test
je
mov
mov
mov
call
jmp
push
mov
mov
mov
call
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
add
mov
push
lea
push
mov
add
push
mov
call
mov
mov
cmpl
je
push
lea
push
mov
add
push
mov
call
mov
imul
xor
divl
mov
jmp
movl
cmpl
jne
mov
call
push
mov
mov
mov
call
lea
push
call
add
cmp
jge
lea
push
call
add
add
push
lea
push
push
push
mov
mov
mov
push
call
add
jmp
lea
push
push
push
mov
mov
mov
push
call
add
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
sub
mov
mov
lea
push
mov
mov
mov
call
mov
mov
mov
movl
mov
call
mov
mov
mov
mov
mov
push
mov
call
mov
or
xor
repnz
not
add
push
mov
push
mov
call
mov
mov
mov
call
mov
mov
mov
movl
lea
call
mov
and
test
je
mov
mov
mov
call
jmp
push
mov
mov
mov
push
call
add
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
add
mov
push
lea
push
mov
push
mov
call
cmpl
jne
mov
call
push
mov
mov
mov
call
push
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
mov
mov
movsbl
test
je
lea
push
call
add
cmp
jne
mov
mov
mov
call
jmp
movsbl
test
je
lea
push
call
add
cmp
jne
mov
mov
mov
call
jmp
movsbl
test
je
lea
push
call
add
cmp
jne
mov
mov
mov
call
cmpl
je
mov
or
xor
repnz
not
add
cmp
jae
jmp
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
mov
mov
mov
call
push
lea
push
mov
call
movl
mov
push
call
add
lea
push
lea
call
test
jl
mov
mov
mov
call
push
mov
call
movl
lea
call
jmp
push
mov
mov
mov
call
movl
lea
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
mov
mov
mov
call
push
lea
push
mov
call
movl
mov
push
call
add
cmpl
je
mov
or
xor
repnz
not
add
cmp
jae
movl
lea
call
jmp
lea
push
lea
call
xor
test
setge
push
push
lea
push
call
add
mov
push
push
mov
mov
mov
call
mov
mov
mov
call
movl
lea
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
mov
mov
mov
call
mov
mov
mov
call
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
push
mov
mov
mov
push
call
add
push
lea
push
mov
call
movl
mov
push
call
add
mov
mov
mov
call
movl
lea
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
lea
push
mov
call
mov
movl
cmpl
je
mov
cmpl
jne
mov
mov
push
mov
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
call
mov
mov
mov
call
jmp
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
lea
push
mov
call
mov
movl
cmpl
je
lea
push
call
add
mov
cmp
jne
mov
cmpl
jle
mov
mov
push
mov
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
call
mov
mov
mov
call
jmp
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
movsbl
test
je
lea
push
call
add
mov
jmp
movl
mov
push
lea
push
mov
call
mov
cmpl
je
mov
cmpl
jne
push
mov
call
push
mov
mov
push
mov
call
push
mov
mov
mov
call
jmp
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
movl
movb
xor
mov
push
lea
push
mov
call
mov
cmpl
je
mov
cmpl
je
mov
cmpl
je
movsbl
test
jne
mov
mov
push
mov
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
movb
lea
push
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
sub
cmp
jbe
push
mov
mov
mov
call
jmp
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
movl
movl
lea
push
lea
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
mov
mov
mov
mov
push
lea
push
call
add
mov
mov
mov
mov
mov
mov
mov
xor
mov
repz
je
sbb
sbb
mov
mov
mov
mov
imul
mov
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
mov
mov
add
mov
mov
movl
movl
movl
lea
call
movb
lea
call
movl
lea
call
movsbl
test
je
push
lea
push
mov
call
mov
jmp
push
push
mov
call
mov
mov
mov
cmpl
je
mov
mov
push
mov
call
mov
add
push
push
mov
push
call
add
jmp
push
mov
call
push
mov
call
mov
mov
mov
call
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
cmpl
je
mov
or
xor
repnz
not
add
cmp
jae
jmp
movsbl
test
je
push
lea
push
mov
call
mov
jmp
push
push
mov
call
mov
mov
mov
cmpl
je
mov
mov
push
mov
call
mov
add
push
mov
mov
push
push
mov
push
call
add
jmp
push
mov
call
push
mov
call
lea
push
push
push
mov
mov
mov
push
call
add
mov
mov
mov
call
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
lea
push
mov
call
mov
mov
rep
movsbl
test
je
movl
mov
mov
mov
mov
mov
call
jmp
mov
add
mov
cmpl
jge
push
mov
mov
mov
call
jmp
mov
add
mov
cmpl
jge
mov
mov
mov
call
movsbl
test
je
push
lea
push
mov
call
mov
jmp
push
push
mov
call
mov
mov
mov
cmpl
je
mov
mov
push
mov
call
mov
add
push
push
mov
push
call
add
jmp
push
mov
call
movl
push
mov
mov
mov
call
lea
push
lea
push
mov
call
call
cltd
mov
idiv
sub
shl
mov
add
push
call
cltd
mov
idiv
sub
shl
mov
add
push
mov
call
jmp
movl
mov
mov
mov
mov
mov
call
jmp
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
lea
push
mov
call
mov
mov
rep
movsbl
test
jne
mov
add
mov
cmpl
jge
push
mov
mov
mov
call
jmp
lea
push
call
add
lea
push
call
add
and
test
je
lea
push
call
add
sub
push
mov
call
jmp
movl
jmp
mov
add
mov
cmpl
jge
mov
imul
movsbl
test
jne
jmp
mov
imul
lea
push
call
add
lea
mov
mov
imul
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
push
mov
call
jmp
jmp
cmpl
jl
movsbl
test
jne
push
mov
mov
mov
push
call
add
jmp
mov
mov
mov
call
push
mov
mov
mov
call
movl
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
lea
push
mov
call
mov
mov
rep
movsbl
test
jne
push
mov
mov
mov
call
jmp
movsbl
test
jne
movl
lea
push
call
add
lea
push
lea
push
call
add
test
je
movl
jmp
movl
jmp
mov
add
mov
cmpl
jge
mov
imul
lea
push
call
add
lea
mov
mov
imul
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
add
mov
jmp
jmp
push
lea
push
mov
push
call
add
push
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movsbl
cmp
jne
lea
push
lea
push
call
add
neg
sbb
neg
mov
jmp
lea
mov
movsbl
sub
imul
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
xor
cmpl
sete
mov
push
lea
push
mov
push
call
add
push
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
push
mov
call
push
mov
call
mov
mov
mov
call
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
call
push
push
mov
call
push
mov
call
push
mov
call
mov
mov
mov
call
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
je
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
movsbl
test
je
lea
push
call
add
mov
jmp
movl
mov
push
lea
push
call
add
sub
push
mov
call
mov
mov
mov
call
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
lea
call
movl
lea
push
lea
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
mov
mov
mov
mov
push
lea
push
call
add
mov
mov
mov
mov
mov
mov
mov
xor
mov
repz
je
sbb
sbb
mov
mov
mov
mov
imul
mov
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
mov
mov
add
mov
mov
movl
lea
call
movsbl
test
je
movsbl
cmp
jne
movl
mov
xor
lea
rep
lea
push
lea
push
lea
push
mov
call
movswl
test
jl
lea
push
push
mov
call
jmp
lea
push
call
add
mov
push
push
push
lea
push
call
lea
push
lea
push
mov
call
mov
mov
cmp
jge
push
mov
mov
mov
push
call
add
jmp
mov
cmp
jle
mov
mov
movl
jmp
mov
add
mov
mov
cmp
jge
movl
mov
xor
lea
rep
lea
push
mov
mov
push
mov
call
mov
mov
mov
jmp
lea
push
mov
push
mov
call
mov
mov
mov
call
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
movl
mov
xor
lea
rep
movl
mov
xor
lea
rep
movl
lea
push
lea
push
lea
push
mov
call
movswl
test
jl
mov
mov
mov
mov
add
mov
jmp
lea
push
push
mov
mov
mov
push
call
add
jmp
movsbl
test
je
lea
push
lea
push
lea
push
mov
call
movswl
test
jl
mov
mov
mov
mov
add
mov
jmp
lea
push
push
mov
mov
mov
push
call
add
jmp
movsbl
test
je
lea
push
lea
push
lea
push
mov
call
movswl
test
jl
mov
mov
mov
mov
add
mov
jmp
lea
push
push
mov
mov
mov
push
call
add
jmp
movsbl
test
je
lea
push
lea
push
lea
push
mov
call
movswl
test
jl
mov
mov
mov
mov
add
mov
jmp
lea
push
push
mov
mov
mov
push
call
add
jmp
lea
push
mov
push
mov
call
mov
mov
mov
call
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
je
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
movl
mov
xor
lea
rep
lea
push
lea
push
lea
push
mov
call
movswl
test
jl
push
mov
push
mov
call
movsbl
test
je
lea
push
call
add
cmp
jle
lea
push
call
add
sub
push
lea
push
push
push
mov
mov
mov
push
call
add
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
push
push
push
lea
push
call
lea
push
push
lea
push
mov
call
test
jle
lea
push
mov
push
mov
call
push
mov
push
mov
call
movsbl
test
je
lea
push
call
add
cmp
jle
lea
push
call
add
sub
push
lea
push
push
push
mov
mov
mov
push
call
add
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
lea
push
mov
call
cmpl
je
mov
or
xor
repnz
not
add
cmp
jae
jmp
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
movsbl
cmp
jl
movsbl
cmp
jg
lea
push
call
add
push
mov
call
push
mov
mov
mov
call
jmp
lea
push
mov
call
mov
cmpl
je
mov
mov
push
mov
call
push
mov
mov
mov
call
jmp
lea
push
mov
call
mov
cmpl
je
mov
mov
push
mov
call
push
mov
mov
mov
call
movl
lea
call
movl
lea
push
lea
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
mov
mov
mov
mov
push
lea
push
call
add
mov
mov
mov
mov
mov
mov
mov
xor
mov
repz
je
sbb
sbb
mov
mov
mov
mov
imul
mov
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
mov
mov
add
mov
mov
movl
lea
call
movsbl
test
je
lea
push
call
add
cmp
jle
lea
push
call
add
sub
push
lea
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
lea
push
mov
call
movsbl
test
je
lea
push
call
add
cmp
jle
lea
push
call
add
sub
push
lea
push
push
push
mov
mov
mov
push
call
add
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
sub
push
movsbl
sub
push
movsbl
sub
push
lea
call
mov
push
movsbl
sub
push
movsbl
sub
push
movsbl
sub
push
lea
call
mov
push
mov
call
jmp
mov
mov
mov
call
lea
push
lea
push
mov
call
mov
mov
movswl
test
jl
movsbl
sub
push
movsbl
sub
push
movsbl
sub
push
lea
call
mov
push
mov
push
mov
call
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
lea
push
lea
push
lea
push
mov
call
cmpl
jbe
movsbl
test
je
lea
push
call
add
mov
jmp
movl
mov
cmp
jl
mov
mov
mov
call
jmp
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
mov
mov
xor
mov
mov
push
lea
push
call
add
test
jne
lea
push
mov
call
mov
push
lea
push
mov
push
call
add
jmp
lea
push
lea
push
lea
push
mov
call
cmpl
jbe
push
lea
push
mov
push
call
add
lea
push
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
call
mov
mov
mov
call
push
push
push
lea
call
mov
push
lea
push
mov
call
mov
push
push
push
push
lea
call
mov
push
mov
call
push
mov
mov
mov
call
cmpl
je
mov
or
xor
repnz
not
add
cmp
jae
jmp
mov
mov
mov
call
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
lea
push
mov
push
call
add
mov
mov
mov
mov
mov
push
call
add
mov
lea
call
movsbl
cmp
jne
cmpl
jne
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
lea
push
mov
mov
mov
call
jmp
movsbl
cmp
jne
cmpl
jle
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
lea
push
mov
mov
mov
call
mov
mov
mov
call
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
movsbl
test
je
movsbl
sub
mov
jmp
movl
mov
mov
mov
mov
mov
call
mov
push
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
movsbl
test
jne
mov
call
jmp
lea
push
call
add
and
test
je
lea
push
call
add
push
mov
call
jmp
lea
push
mov
call
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
call
add
mov
mov
mov
mov
call
cmpl
je
movl
jmp
movl
mov
push
push
push
call
add
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
push
lea
push
call
add
push
lea
push
mov
call
test
je
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
push
lea
push
call
add
push
lea
push
mov
call
test
je
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
push
lea
push
call
add
push
lea
push
mov
call
test
je
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
movsbl
test
je
lea
push
call
add
mov
jmp
movl
mov
push
lea
push
call
add
push
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
movsbl
test
je
mov
push
mov
call
lea
push
push
push
mov
mov
mov
push
call
add
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
call
add
push
lea
push
call
add
push
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
xor
lea
rep
stos
stos
push
lea
push
mov
mov
mov
call
push
mov
call
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
xor
lea
rep
stos
stos
push
lea
push
mov
mov
mov
call
mov
mov
mov
call
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
lea
push
call
add
mov
lea
push
call
add
mov
lea
push
call
add
mov
push
lea
push
mov
mov
mov
call
cmpl
je
mov
or
xor
repnz
not
add
cmp
jae
jmp
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
lea
push
call
add
mov
lea
push
call
add
mov
push
lea
push
mov
mov
mov
call
push
call
push
lea
push
mov
mov
mov
call
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
call
add
mov
cmpl
je
push
mov
call
mov
push
mov
call
cmpl
jne
push
mov
mov
mov
push
call
add
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
call
add
push
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
call
lea
push
mov
call
mov
cmpl
je
push
mov
call
mov
mov
push
mov
mov
push
mov
call
push
mov
mov
mov
call
cmpl
je
movl
jmp
movl
mov
push
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
mov
call
lea
push
mov
mov
mov
call
mov
mov
mov
mov
lea
push
mov
push
call
add
neg
sbb
inc
mov
lea
call
mov
and
test
je
mov
mov
mov
call
jmp
lea
push
mov
call
mov
movl
cmpl
jne
lea
push
push
mov
mov
mov
push
call
add
jmp
lea
call
movl
lea
push
lea
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
mov
mov
mov
mov
push
lea
push
call
add
mov
mov
mov
mov
mov
mov
mov
xor
mov
repz
je
sbb
sbb
mov
mov
mov
mov
imul
mov
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
mov
mov
add
mov
mov
movl
lea
call
mov
mov
mov
call
push
lea
push
mov
call
movswl
xor
test
setge
mov
cmpl
je
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
cltd
mov
idiv
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
cltd
mov
idiv
cmp
jne
lea
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
jmp
mov
cltd
mov
idiv
cltd
mov
idiv
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
cltd
mov
idiv
test
jle
mov
cltd
mov
idiv
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
jmp
mov
cltd
mov
idiv
cmp
jne
push
lea
push
mov
call
movswl
xor
test
setge
mov
cmpl
jne
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
cltd
mov
idiv
cltd
mov
idiv
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
jmp
mov
cltd
mov
idiv
cmp
jne
push
lea
push
mov
call
movswl
xor
test
setge
mov
cmpl
jne
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
cltd
mov
idiv
cltd
mov
idiv
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
jmp
mov
cltd
mov
idiv
cmp
jne
push
lea
push
mov
call
movswl
xor
test
setge
mov
cmpl
jne
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
cltd
mov
idiv
cltd
mov
idiv
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
cltd
mov
idiv
test
jle
mov
cltd
mov
idiv
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
jmp
mov
cltd
mov
idiv
cmp
jne
push
lea
push
mov
call
movswl
xor
test
setge
mov
cmpl
jne
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
lea
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
lea
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
movl
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
jmp
lea
push
mov
mov
mov
call
mov
mov
mov
movl
mov
mov
mov
lea
push
mov
push
mov
call
mov
movl
lea
call
cmpl
je
mov
mov
push
mov
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
jmp
lea
push
push
mov
mov
mov
push
call
add
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
mov
mov
mov
call
mov
mov
mov
movl
mov
mov
mov
lea
push
mov
push
mov
call
mov
movl
lea
call
cmpl
je
mov
mov
push
mov
mov
push
mov
call
lea
push
call
add
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
mov
mov
mov
call
movl
lea
push
mov
push
mov
call
mov
cmpl
je
mov
mov
push
mov
mov
push
mov
call
push
mov
mov
mov
call
mov
mov
push
mov
mov
push
mov
call
cmp
jge
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
cmpl
jne
mov
mov
push
mov
push
call
add
neg
sbb
inc
and
test
je
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
push
mov
call
mov
mov
push
mov
push
call
add
neg
sbb
inc
and
test
je
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
push
mov
call
mov
mov
push
mov
push
call
add
neg
sbb
inc
and
test
je
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
push
mov
call
mov
mov
push
mov
push
call
add
neg
sbb
inc
and
test
je
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
push
mov
call
mov
mov
push
mov
push
call
add
neg
sbb
inc
and
test
je
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
push
mov
call
mov
mov
push
mov
push
call
add
neg
sbb
inc
and
test
je
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
push
mov
call
mov
mov
mov
call
jmp
mov
mov
mov
call
movl
lea
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
lea
push
mov
call
mov
cmpl
je
mov
mov
push
mov
mov
push
mov
call
lea
push
call
add
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
mov
mov
mov
call
movl
mov
mov
lea
push
mov
push
call
add
neg
sbb
inc
and
test
je
mov
mov
mov
call
movl
lea
call
jmp
lea
push
mov
call
mov
cmpl
jne
lea
push
push
mov
mov
mov
push
call
add
jmp
lea
call
movb
lea
push
lea
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
mov
mov
mov
mov
push
lea
push
call
add
mov
mov
mov
mov
mov
mov
mov
xor
mov
repz
je
sbb
sbb
mov
mov
mov
mov
imul
mov
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
mov
mov
add
mov
mov
movb
lea
call
lea
push
push
push
mov
mov
mov
push
call
add
push
lea
call
mov
call
sub
mov
jmp
mov
sub
mov
cmpl
jle
mov
push
mov
call
mov
mov
cmpl
jne
movl
jmp
mov
mov
mov
mov
mov
mov
push
mov
push
call
add
neg
sbb
inc
and
test
je
jmp
mov
push
mov
call
mov
mov
cmpl
jne
movl
jmp
mov
mov
mov
mov
push
push
push
mov
mov
mov
push
call
add
jmp
cmpl
jne
push
mov
call
mov
mov
cmpl
jne
movl
jmp
mov
mov
mov
mov
push
push
push
mov
mov
mov
push
call
add
mov
mov
mov
call
movl
lea
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
movl
lea
push
mov
mov
mov
call
movl
mov
push
mov
call
cltd
mov
idiv
cmp
je
push
push
mov
call
mov
cmpl
je
mov
mov
push
mov
push
call
add
neg
sbb
inc
and
test
je
movl
mov
add
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
push
mov
call
jmp
mov
mov
push
mov
push
call
add
neg
sbb
inc
and
test
je
movl
mov
add
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
push
mov
call
jmp
mov
mov
push
mov
push
call
add
neg
sbb
inc
and
test
je
movl
mov
add
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
push
mov
call
jmp
mov
mov
push
mov
push
call
add
neg
sbb
inc
and
test
je
movl
mov
add
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
push
mov
call
jmp
mov
mov
push
mov
push
call
add
neg
sbb
inc
and
test
je
movl
mov
add
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
push
mov
call
jmp
mov
mov
push
mov
push
call
add
neg
sbb
inc
and
test
je
movl
mov
add
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
push
mov
call
jmp
mov
mov
push
mov
push
call
add
neg
sbb
inc
and
test
je
movl
mov
add
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
push
mov
call
jmp
mov
mov
push
mov
push
call
add
neg
sbb
inc
and
test
je
movl
mov
add
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
push
mov
call
jmp
mov
mov
push
mov
push
call
add
neg
sbb
inc
and
test
je
movl
mov
add
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
push
mov
call
jmp
mov
mov
push
mov
push
call
add
neg
sbb
inc
and
test
je
movl
mov
add
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
push
mov
call
jmp
mov
mov
push
mov
push
call
add
neg
sbb
inc
and
test
je
movl
mov
add
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
push
mov
call
jmp
mov
mov
push
mov
push
call
add
neg
sbb
inc
and
test
je
movl
mov
add
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
push
mov
call
jmp
mov
mov
push
mov
mov
push
mov
call
push
mov
mov
mov
call
jmp
mov
mov
mov
call
push
mov
push
call
add
movl
lea
call
jmp
push
mov
call
mov
cmpl
je
mov
cmpl
je
mov
cmpl
jne
movl
lea
call
jmp
mov
cmpl
jne
mov
mov
push
mov
mov
push
mov
call
cmp
jge
mov
mov
mov
call
push
mov
call
lea
call
movb
mov
add
push
mov
add
push
push
mov
mov
push
mov
mov
mov
call
mov
mov
mov
movb
push
mov
mov
push
mov
mov
mov
call
mov
lea
movb
call
movb
lea
call
jmp
push
push
mov
call
mov
cmpl
je
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
push
mov
call
cmp
jle
mov
mov
push
mov
mov
push
mov
call
push
mov
mov
mov
call
jmp
mov
mov
push
mov
mov
push
mov
call
cmp
jle
mov
mov
push
mov
mov
push
mov
call
push
mov
mov
mov
call
jmp
lea
push
call
add
mov
lea
push
call
add
mov
cmpl
je
mov
push
mov
push
mov
call
cmp
jge
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
cmpl
jne
lea
push
mov
mov
mov
call
mov
mov
mov
movb
mov
mov
mov
push
mov
push
mov
call
mov
movb
lea
call
cmpl
jne
push
mov
mov
mov
push
call
add
movl
lea
call
jmp
mov
mov
push
mov
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
mov
mov
call
movl
jmp
mov
push
mov
push
mov
call
push
mov
mov
mov
call
cmpl
jne
mov
add
mov
mov
cmp
jae
movl
lea
push
lea
push
mov
call
mov
push
mov
push
mov
call
push
call
add
movl
lea
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
movl
lea
push
mov
call
test
je
lea
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
jmp
lea
push
lea
push
mov
call
movswl
xor
test
setge
mov
cmpl
je
jmp
push
lea
push
call
add
test
je
push
lea
push
call
add
movb
movl
mov
xor
lea
rep
lea
push
lea
push
lea
push
mov
call
movswl
cmp
jl
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
lea
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
movl
mov
xor
lea
rep
lea
push
lea
push
lea
push
mov
call
mov
mov
push
push
push
lea
call
mov
push
lea
push
mov
call
mov
mov
movswl
test
jl
movswl
test
jl
mov
push
mov
push
mov
call
movsbl
test
je
lea
push
call
add
cmp
jle
lea
push
call
add
sub
push
lea
push
push
push
mov
mov
mov
push
call
add
cmpl
je
mov
or
xor
repnz
not
add
cmp
jae
jmp
mov
mov
mov
call
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
movl
mov
xor
lea
rep
lea
push
lea
push
lea
push
mov
call
mov
mov
push
push
push
lea
call
mov
push
lea
push
mov
call
mov
mov
movswl
test
jl
movswl
test
jl
mov
push
mov
push
mov
call
movsbl
test
je
lea
push
call
add
cmp
jle
lea
push
call
add
sub
push
lea
push
push
push
mov
mov
mov
push
call
add
mov
mov
mov
call
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
movl
mov
xor
lea
rep
push
push
push
lea
call
lea
push
push
push
push
lea
call
mov
push
mov
call
test
jle
mov
push
lea
push
mov
call
mov
mov
mov
push
push
push
push
lea
call
mov
push
mov
call
mov
add
mov
lea
push
push
push
push
lea
call
mov
push
mov
call
test
jle
mov
push
lea
push
mov
call
mov
mov
mov
push
push
push
push
lea
call
mov
push
mov
call
mov
add
mov
lea
push
push
push
push
lea
call
mov
push
mov
call
test
jle
mov
push
lea
push
mov
call
mov
mov
mov
push
push
push
push
lea
call
mov
push
mov
call
mov
add
mov
lea
push
push
push
push
lea
call
mov
push
mov
call
test
jle
mov
push
lea
push
mov
call
mov
mov
mov
push
push
push
push
lea
call
mov
push
mov
call
mov
add
mov
lea
push
push
push
push
lea
call
mov
push
mov
call
test
jle
mov
push
lea
push
mov
call
mov
mov
mov
push
push
push
push
lea
call
mov
push
mov
call
mov
add
mov
mov
mov
mov
call
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
movl
lea
push
lea
call
movl
lea
push
lea
call
movb
mov
add
mov
movl
mov
xor
lea
rep
mov
mov
mov
imul
mov
mov
shl
push
lea
push
mov
mov
push
mov
call
movl
jmp
mov
add
mov
mov
cmp
jge
mov
mov
mov
movl
mov
xor
lea
rep
cmpl
jbe
cmpl
jae
lea
push
mov
push
mov
call
lea
push
lea
push
lea
call
movb
mov
mov
lea
push
mov
push
lea
call
movb
push
lea
call
jmp
lea
push
lea
call
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
add
movl
jmp
mov
add
mov
mov
cmp
jge
mov
mov
mov
shl
mov
add
push
lea
call
movb
mov
mov
cmpl
je
mov
mov
mov
shl
mov
add
push
lea
call
neg
sbb
inc
and
test
je
movb
push
lea
call
jmp
mov
mov
jmp
mov
add
mov
mov
cmp
jge
mov
mov
lea
push
mov
shl
mov
add
call
neg
sbb
inc
and
test
je
jmp
jmp
mov
mov
cltd
idivl
push
mov
mov
cltd
idivl
push
mov
mov
cltd
idivl
push
mov
mov
cltd
idivl
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
mov
mov
mov
mov
push
push
mov
shl
mov
add
push
mov
shl
mov
add
call
mov
mov
mov
mov
push
push
lea
push
mov
shl
mov
add
call
mov
movb
push
lea
call
jmp
mov
mov
mov
call
movb
lea
call
movl
lea
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
call
mov
add
call
mov
cmpl
jne
push
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
cmpl
je
lea
push
lea
push
mov
call
mov
mov
mov
mov
add
mov
jmp
mov
add
mov
mov
mov
mov
mov
cmp
je
mov
cmpl
jne
mov
cmpl
je
mov
mov
push
mov
mov
push
mov
push
mov
push
mov
call
cmp
jge
mov
mov
push
mov
call
mov
add
push
push
mov
push
call
add
jmp
jmp
mov
call
push
mov
call
lea
push
lea
push
mov
call
mov
mov
mov
mov
add
mov
jmp
mov
add
mov
mov
mov
mov
mov
cmp
je
mov
cmpl
jne
mov
cmpl
jne
mov
mov
push
mov
mov
push
mov
push
mov
push
mov
call
cmp
jge
mov
mov
push
mov
call
jmp
jmp
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
add
mov
push
lea
push
mov
push
mov
call
cmpl
je
cmpl
jne
mov
call
jmp
cmpl
jge
lea
push
lea
push
mov
call
mov
mov
mov
mov
add
mov
jmp
mov
add
mov
mov
mov
mov
mov
cmp
je
movl
jmp
mov
add
mov
mov
cmp
jge
mov
mov
mov
mov
add
mov
mov
imul
mov
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
jmp
jmp
mov
cmp
jge
jmp
mov
cmpl
jne
mov
cmpl
jne
mov
mov
push
mov
mov
push
mov
push
mov
push
mov
call
cmp
jge
mov
mov
push
mov
call
jmp
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
call
mov
add
call
test
jne
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
mov
call
movl
movl
mov
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
cmp
je
push
mov
add
push
mov
call
test
je
mov
add
mov
jmp
lea
push
call
add
cmp
jge
mov
add
call
cmp
jb
jmp
movsbl
test
jne
lea
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
jmp
lea
push
call
add
cmp
jle
lea
push
call
add
sub
push
lea
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
mov
call
mov
add
call
mov
cmpl
jg
mov
mov
mov
call
jmp
cmpl
je
mov
push
call
test
jne
push
mov
mov
mov
push
call
add
jmp
movsbl
test
je
lea
push
call
add
mov
jmp
movl
mov
mov
mov
mov
mov
xor
imul
mov
mov
mov
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
add
mov
push
lea
push
mov
push
mov
call
mov
mov
lea
push
call
add
mov
mov
and
mov
and
shl
or
push
mov
and
shl
or
push
push
mov
push
call
mov
mov
cmp
jge
cmpl
jle
mov
sub
push
lea
push
push
push
mov
mov
mov
push
call
add
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
cmpl
je
mov
push
call
test
jne
push
mov
mov
mov
push
call
add
jmp
mov
mov
mov
xor
imul
mov
mov
mov
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
add
mov
push
lea
push
mov
push
mov
call
mov
mov
lea
push
call
add
mov
mov
and
mov
and
shl
or
push
mov
and
shl
or
push
push
mov
push
call
mov
movb
xor
mov
mov
mov
mov
mov
mov
push
lea
push
mov
push
call
add
push
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
cmpl
je
mov
push
call
test
jne
push
mov
mov
mov
push
call
add
jmp
push
push
push
mov
push
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
cmpl
jne
push
mov
mov
mov
call
jmp
lea
push
call
add
mov
lea
push
call
add
mov
lea
push
lea
push
mov
call
mov
push
mov
push
mov
push
mov
push
mov
call
mov
cmpl
jge
mov
push
fildl
fdivl
sub
fstpl
fildl
fdivl
sub
fstpl
push
mov
push
call
add
mov
mov
mov
call
jmp
lea
push
mov
push
call
mov
sub
cltd
sub
sar
add
sub
mov
mov
sub
cltd
sub
mov
sar
mov
sub
cltd
sub
sar
add
mov
mov
push
mov
push
push
mov
mov
mov
push
call
add
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
lea
push
mov
push
call
add
mov
mov
mov
mov
push
mov
push
call
add
neg
sbb
inc
mov
lea
call
mov
and
test
je
mov
mov
mov
call
push
mov
mov
mov
call
jmp
mov
cmpl
je
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
add
mov
push
lea
push
mov
push
mov
call
cmpl
jne
mov
call
push
mov
mov
mov
call
push
mov
call
jmp
mov
call
push
mov
mov
mov
call
mov
add
call
test
jne
jmp
mov
mov
mov
xor
imul
mov
lea
mov
mov
cmpl
je
mov
mov
mov
mov
call
xor
imul
mov
cmp
je
mov
mov
mov
xor
imul
mov
mov
push
push
lea
push
mov
push
call
add
movl
mov
mov
mov
mov
call
mov
xor
cmpl
sete
test
jne
mov
mov
mov
call
push
lea
push
lea
push
call
mov
mov
mov
movb
mov
mov
mov
push
mov
push
mov
call
mov
movb
lea
call
push
mov
call
push
mov
call
cmpl
je
mov
mov
push
mov
mov
push
mov
call
mov
mov
push
mov
mov
push
mov
call
push
mov
mov
mov
call
jmp
mov
push
push
push
mov
mov
mov
push
call
add
movl
lea
call
jmp
movl
lea
call
mov
mov
mov
call
mov
push
mov
call
mov
cmpl
jne
mov
push
push
mov
push
call
add
jmp
mov
mov
push
mov
mov
push
mov
call
mov
lea
push
call
add
test
jle
lea
push
call
add
mov
jmp
movl
mov
imul
cmp
jle
push
mov
call
push
mov
mov
mov
push
call
add
cmpl
jle
push
mov
call
mov
mov
push
mov
mov
push
mov
call
push
mov
mov
mov
call
lea
push
mov
mov
mov
call
mov
mov
mov
movl
mov
mov
mov
push
mov
push
call
add
neg
sbb
inc
and
test
je
push
push
mov
call
xor
cmp
setl
mov
mov
and
test
je
movl
jmp
movl
mov
mov
movl
lea
call
mov
and
test
je
push
push
mov
call
push
mov
mov
mov
call
jmp
cmpl
jge
mov
cmpl
je
call
cltd
mov
idiv
mov
mov
lea
push
call
cltd
mov
idiv
mov
mov
lea
push
mov
call
push
mov
mov
mov
call
jmp
sub
mov
mov
lea
push
lea
push
mov
mov
mov
call
mov
mov
mov
movl
mov
call
push
mov
call
mov
mov
call
mov
mov
mov
movl
lea
call
mov
and
test
je
push
mov
mov
mov
call
jmp
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
add
mov
push
lea
push
mov
push
mov
call
cmpl
jne
mov
mov
push
mov
call
mov
cmpl
je
push
mov
call
push
mov
mov
mov
push
call
add
mov
push
mov
call
push
push
mov
mov
mov
push
call
add
mov
cmpl
je
push
mov
call
mov
call
cmp
jge
push
mov
mov
mov
call
mov
call
cmp
jge
push
mov
mov
mov
call
jmp
push
mov
call
push
mov
mov
mov
call
mov
mov
push
mov
call
push
mov
mov
mov
call
jmp
mov
cmpl
je
push
mov
mov
mov
call
jmp
push
mov
call
push
mov
mov
mov
call
mov
mov
push
mov
call
push
mov
mov
mov
call
mov
mov
mov
call
push
lea
push
mov
call
movswl
xor
test
setge
mov
cmpl
je
push
mov
call
push
lea
push
mov
call
movswl
xor
test
setge
mov
cmpl
je
push
mov
call
push
lea
push
mov
call
movswl
xor
test
setge
mov
cmpl
je
push
mov
call
jmp
movb
mov
and
test
jne
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
movsbl
test
jne
mov
mov
mov
call
push
push
mov
call
mov
cmpl
je
mov
add
mov
lea
or
xor
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
movsbl
test
je
lea
push
push
mov
mov
mov
push
call
add
lea
push
push
mov
push
call
add
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
lea
push
mov
mov
mov
call
mov
mov
mov
mov
mov
push
call
add
mov
lea
call
push
lea
push
mov
mov
mov
call
mov
mov
mov
mov
mov
push
call
add
mov
lea
call
cmpl
jl
cmpl
jg
cmpl
jle
mov
push
mov
push
mov
call
mov
mov
mov
call
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
movl
mov
xor
lea
rep
lea
push
lea
push
lea
push
mov
call
mov
mov
movswl
test
jl
lea
push
call
add
cmp
jl
push
mov
push
call
add
mov
mov
mov
call
jmp
mov
mov
mov
call
mov
mov
mov
xor
imul
mov
mov
mov
cmpl
jne
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
add
mov
push
lea
push
mov
push
mov
call
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
add
mov
push
lea
push
mov
push
mov
call
mov
cmp
jne
push
mov
call
push
lea
push
mov
call
mov
cmpl
je
mov
mov
push
mov
mov
push
mov
call
cmp
jge
mov
mov
push
mov
mov
push
mov
call
mov
mov
push
mov
call
push
mov
mov
mov
call
jmp
mov
mov
push
mov
mov
push
mov
call
push
mov
mov
mov
call
jmp
push
mov
call
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
push
lea
push
mov
call
mov
cmpl
je
mov
cmpl
je
push
mov
call
push
mov
mov
mov
push
call
add
push
mov
mov
mov
call
mov
mov
mov
call
jmp
mov
mov
push
mov
mov
push
mov
call
mov
cmpl
jle
push
mov
call
push
mov
mov
mov
push
call
add
mov
mov
push
mov
mov
push
mov
call
jmp
push
mov
call
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
add
mov
push
lea
push
mov
push
mov
call
push
mov
push
mov
call
mov
mov
mov
call
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
add
mov
push
lea
push
mov
push
mov
call
cmpl
jne
mov
call
push
mov
mov
mov
call
push
mov
call
mov
mov
mov
call
jmp
lea
call
movl
lea
push
lea
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
push
mov
push
lea
push
call
mov
mov
mov
movb
mov
mov
mov
mov
push
lea
push
call
add
mov
mov
mov
mov
mov
mov
mov
xor
mov
repz
je
sbb
sbb
mov
mov
mov
mov
imul
mov
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
mov
mov
add
mov
mov
movl
lea
call
push
mov
mov
mov
call
lea
push
mov
call
movl
xor
mov
and
test
jne
mov
or
mov
mov
mov
push
call
add
push
lea
call
test
jle
movl
mov
mov
mov
call
push
mov
call
jmp
push
mov
mov
mov
call
call
cltd
mov
idiv
test
jne
mov
cmpl
je
push
push
mov
mov
mov
push
call
add
movl
lea
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
lea
push
mov
push
call
add
mov
mov
mov
mov
mov
push
call
add
mov
lea
call
mov
push
mov
call
mov
movl
cmpl
je
mov
add
mov
mov
cmpl
jne
movl
jmp
mov
mov
mov
mov
add
mov
mov
cmpl
jne
movl
jmp
mov
mov
mov
mov
add
mov
mov
cmpl
jne
movl
jmp
mov
mov
mov
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
cmpl
jne
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
add
mov
push
lea
push
mov
push
mov
call
cmpl
jne
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
add
mov
mov
cmpl
jne
movl
jmp
mov
mov
mov
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
mov
push
mov
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
jmp
push
mov
mov
mov
push
call
add
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
push
lea
push
mov
push
call
add
mov
mov
mov
movl
mov
call
xor
test
setg
mov
movl
lea
call
mov
and
test
je
mov
mov
mov
call
jmp
mov
call
test
jne
mov
mov
mov
call
mov
call
mov
add
call
mov
movl
jmp
mov
add
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
add
mov
push
lea
push
mov
push
mov
call
mov
imul
mov
mov
cmp
jne
jmp
mov
mov
mov
mov
imul
mov
cmpl
jbe
jmp
jmp
mov
cmp
jne
movl
push
mov
push
push
mov
mov
push
call
mov
call
push
mov
mov
mov
call
jmp
push
mov
mov
mov
call
jmp
push
lea
push
mov
push
call
add
mov
mov
mov
mov
mov
push
call
add
mov
lea
call
mov
push
mov
call
mov
movl
cmpl
jne
push
mov
mov
mov
push
call
add
jmp
mov
mov
mov
call
mov
add
mov
mov
cmpl
jne
movl
jmp
mov
mov
mov
mov
push
mov
call
mov
cmpl
jne
push
mov
mov
mov
call
jmp
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
add
mov
push
lea
push
mov
push
mov
call
cmpl
jne
mov
call
push
mov
call
mov
cmpl
je
mov
push
mov
call
push
push
mov
mov
mov
push
call
add
mov
call
cmp
jge
push
mov
mov
mov
call
mov
call
cmp
jge
push
mov
mov
mov
call
push
mov
mov
mov
call
jmp
mov
call
test
jne
mov
add
mov
push
mov
call
mov
mov
push
mov
call
push
mov
mov
mov
push
call
add
push
mov
mov
mov
call
mov
cmpl
jle
mov
mov
add
push
push
mov
mov
mov
push
call
add
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
add
mov
push
lea
push
mov
push
mov
call
mov
mov
mov
and
cmp
jne
push
mov
mov
mov
push
call
add
mov
cmpl
je
mov
mov
mov
mov
mov
mov
call
and
jns
dec
or
inc
mov
lea
cltd
mov
idiv
sub
mov
mov
cltd
xor
sub
cmp
jne
mov
imul
mov
add
mov
jmp
mov
cltd
xor
sub
cmp
jne
mov
imul
mov
add
mov
mov
push
mov
push
mov
call
mov
mov
push
mov
call
push
push
mov
mov
mov
push
call
add
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
cmpl
jge
mov
mov
mov
call
jmp
push
lea
push
mov
push
call
add
mov
mov
mov
mov
push
mov
push
call
add
neg
sbb
inc
mov
lea
call
mov
and
test
je
mov
mov
mov
call
jmp
cmpl
je
mov
or
xor
repnz
not
add
cmp
jae
jmp
movl
push
mov
mov
mov
call
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
movl
jmp
mov
add
mov
cmpl
jge
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
jmp
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
mov
call
push
mov
call
sub
mov
mov
lea
push
lea
push
mov
mov
mov
call
mov
mov
mov
movl
mov
call
push
mov
call
mov
mov
call
mov
mov
mov
movl
lea
call
mov
and
test
je
mov
mov
mov
call
jmp
mov
mov
mov
call
movl
mov
add
push
mov
call
cmp
jne
push
mov
mov
mov
call
jmp
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
lea
push
mov
call
movswl
xor
test
setge
mov
cmpl
je
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
jmp
push
lea
push
mov
call
movswl
xor
test
setge
mov
cmpl
je
mov
add
mov
mov
mov
xor
cmpl
sete
test
je
push
mov
call
mov
mov
mov
mov
push
mov
call
mov
cmpl
jne
mov
mov
push
push
mov
mov
mov
push
call
add
jmp
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
cltd
mov
idiv
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
cltd
mov
idiv
cmp
jne
lea
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
jmp
mov
cltd
mov
idiv
cltd
mov
idiv
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
cltd
mov
idiv
test
jle
mov
cltd
mov
idiv
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
jmp
push
lea
push
mov
call
movswl
xor
test
setge
mov
cmpl
je
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
jmp
push
mov
mov
mov
push
call
add
jmp
lea
call
movl
push
lea
push
lea
call
mov
mov
mov
movb
mov
mov
mov
mov
push
call
add
neg
sbb
inc
mov
movb
lea
call
mov
and
test
je
mov
mov
add
mov
mov
movl
lea
call
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
movl
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
mov
mov
cmpl
jle
movl
push
mov
push
mov
call
push
mov
call
mov
movsbl
test
je
lea
push
call
add
mov
jmp
movl
mov
sub
mov
cmpl
jle
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
push
mov
sub
cltd
mov
idiv
add
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
lea
push
mov
call
movswl
xor
test
setge
mov
cmpl
jne
push
lea
push
mov
call
movswl
xor
test
setge
mov
cmpl
jne
push
lea
push
mov
call
movswl
xor
test
setge
mov
cmpl
jne
mov
call
test
je
push
mov
mov
mov
push
call
add
jmp
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
movl
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
mov
mov
cmpl
jle
movl
push
mov
push
mov
call
push
mov
call
mov
movsbl
test
je
lea
push
call
add
mov
jmp
movl
mov
mov
push
mov
push
mov
call
push
mov
call
mov
movsbl
test
je
lea
push
call
add
mov
jmp
movl
mov
mov
mov
cmp
jl
mov
cmp
jge
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
cmp
jge
mov
sub
push
mov
sub
cltd
mov
idiv
add
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
cmp
jge
mov
sub
push
mov
sub
cltd
mov
idiv
add
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
mov
mov
mov
mov
call
cmp
jge
mov
cmp
jae
mov
imul
mov
add
mov
push
mov
mov
mov
call
mov
call
cmp
jge
mov
cmp
jae
mov
add
mov
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
je
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
sub
mov
mov
lea
push
lea
push
mov
mov
mov
call
mov
mov
mov
movl
mov
call
push
mov
call
mov
mov
call
mov
mov
and
neg
sbb
inc
mov
movl
lea
call
mov
and
test
je
push
lea
push
mov
call
movswl
xor
test
setge
mov
cmpl
je
push
mov
call
push
mov
mov
mov
call
jmp
push
lea
push
mov
call
movswl
xor
test
setge
mov
cmpl
je
push
mov
call
push
mov
mov
mov
call
jmp
push
mov
mov
mov
push
call
add
jmp
lea
call
movl
push
lea
push
lea
call
mov
mov
mov
movb
mov
mov
mov
mov
push
call
add
neg
sbb
inc
mov
movb
lea
call
mov
and
test
je
mov
mov
add
mov
mov
movl
lea
call
mov
call
test
je
push
mov
mov
mov
push
call
add
jmp
mov
mov
mov
call
movl
movl
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
push
mov
call
mov
sub
mov
cmpl
jle
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
push
mov
call
mov
sub
mov
cmpl
jle
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
push
mov
call
mov
sub
mov
cmpl
jle
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
push
mov
call
mov
sub
mov
cmpl
jle
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
movl
push
push
push
mov
call
cmp
jge
push
push
push
mov
call
cmp
jge
push
push
push
mov
call
cmp
jge
push
push
push
mov
call
cmp
jl
mov
call
test
je
push
mov
mov
mov
push
call
add
jmp
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
push
push
mov
call
cmp
jge
push
push
push
mov
call
cmp
jge
push
push
push
mov
call
cmp
jge
push
push
push
mov
call
cmp
jl
mov
call
test
je
push
mov
mov
mov
push
call
add
jmp
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
cmpl
jle
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
movl
push
push
push
mov
call
cmp
jge
push
push
push
mov
call
cmp
jge
push
push
push
mov
call
cmp
jge
push
push
push
mov
call
cmp
jl
mov
call
test
je
push
mov
mov
mov
push
call
add
jmp
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
cmpl
jle
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
call
add
fadd
call
mov
mov
push
mov
call
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
push
push
push
lea
push
call
movl
lea
push
push
mov
call
mov
movsbl
test
jne
movl
jmp
mov
add
mov
mov
cmp
jge
lea
push
mov
mov
push
mov
call
cmpl
je
jmp
mov
xor
mov
push
mov
xor
mov
push
mov
movswl
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
jmp
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
jmp
lea
push
call
add
mov
mov
mov
movl
mov
mov
jmp
mov
add
mov
mov
cmp
jge
lea
push
mov
mov
push
mov
call
mov
cmp
jae
mov
mov
mov
mov
jmp
mov
cmp
jle
mov
mov
push
mov
mov
push
mov
call
push
mov
mov
mov
call
mov
cmp
jge
mov
add
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
lea
push
mov
call
mov
mov
rep
lea
push
call
add
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
imul
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
push
mov
call
push
mov
mov
mov
call
jmp
jmp
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
lea
push
mov
call
mov
mov
rep
movsbl
test
jne
jmp
lea
push
mov
call
mov
movl
cmpl
jne
push
mov
mov
mov
push
call
add
jmp
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
add
mov
mov
cmpl
jne
movl
jmp
mov
mov
mov
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
mov
push
mov
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
movl
mov
cmp
jae
movl
mov
push
lea
push
mov
call
movswl
xor
test
setge
mov
cmpl
je
mov
add
mov
jmp
mov
cmp
jae
movl
mov
push
lea
push
mov
call
movswl
xor
test
setge
mov
cmpl
je
mov
add
mov
jmp
mov
cmp
jae
movl
mov
push
lea
push
mov
call
movswl
xor
test
setge
mov
cmpl
je
mov
add
mov
jmp
mov
cmp
jae
movl
mov
push
lea
push
mov
call
movswl
xor
test
setge
mov
cmpl
je
mov
add
mov
jmp
mov
cmp
jae
movl
mov
push
lea
push
mov
call
movswl
xor
test
setge
mov
cmpl
je
mov
add
mov
jmp
mov
cmp
jae
movl
mov
push
lea
push
mov
call
movswl
xor
test
setge
mov
cmpl
je
mov
add
mov
jmp
mov
mov
mov
call
jmp
mov
call
test
je
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
lea
push
mov
call
mov
mov
rep
push
lea
push
call
add
test
je
push
mov
mov
mov
push
call
add
jmp
cmpl
je
mov
or
xor
repnz
not
add
cmp
jae
jmp
push
mov
mov
mov
call
push
mov
mov
push
push
mov
call
mov
lea
push
mov
call
mov
movl
push
mov
mov
push
push
mov
call
mov
lea
push
mov
call
mov
movb
push
mov
mov
push
push
mov
call
mov
lea
push
mov
call
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
push
mov
push
mov
push
mov
add
mov
mov
call
mov
push
lea
push
mov
mov
mov
call
push
mov
mov
mov
call
mov
mov
mov
call
movb
lea
call
movb
lea
call
movl
lea
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
add
mov
push
lea
push
mov
push
mov
call
mov
mov
mov
and
cmp
jne
push
mov
mov
mov
push
call
add
mov
and
cmp
jne
push
mov
mov
mov
push
call
add
mov
and
cmp
jne
push
mov
mov
mov
push
call
add
mov
and
cmp
jne
push
mov
mov
mov
push
call
add
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
add
mov
push
lea
push
mov
push
mov
call
mov
mov
movl
mov
and
cmp
jne
push
mov
mov
mov
push
call
add
mov
and
cmp
jne
push
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
xor
mov
and
test
jne
mov
or
mov
lea
push
lea
push
mov
call
push
call
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
movl
jmp
mov
add
mov
cmpl
jge
mov
add
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
imul
mov
push
mov
imul
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
add
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
imul
mov
push
mov
imul
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
jmp
jmp
lea
push
call
add
and
test
je
mov
mov
mov
call
push
push
mov
call
mov
cmpl
je
push
mov
call
lea
push
mov
add
push
lea
call
movl
lea
push
call
add
mov
lea
push
mov
call
mov
movl
push
lea
call
jmp
push
mov
call
push
mov
mov
mov
call
jmp
jmp
lea
push
push
lea
push
call
add
lea
push
lea
push
lea
call
movl
lea
push
mov
call
mov
mov
movl
push
lea
call
cmpl
jne
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
jmp
mov
sub
mov
mov
imul
mov
push
mov
imul
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
imul
mov
push
mov
imul
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
lea
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
imul
mov
push
mov
imul
mov
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
lea
push
mov
push
call
add
mov
mov
mov
mov
push
mov
push
call
add
neg
sbb
inc
mov
lea
call
mov
and
test
je
push
mov
mov
mov
call
jmp
mov
mov
mov
call
push
mov
call
mov
movl
cmpl
je
mov
cmpl
jne
mov
mov
push
mov
mov
push
mov
call
cmp
jge
mov
mov
push
mov
call
mov
mov
mov
call
mov
add
push
mov
mov
push
push
mov
push
call
add
mov
mov
push
mov
mov
push
mov
call
push
mov
mov
mov
call
jmp
cmpl
jne
lea
push
mov
mov
mov
call
mov
mov
mov
movl
mov
mov
mov
mov
push
mov
call
mov
movl
lea
call
cmpl
jne
mov
mov
mov
call
jmp
mov
add
mov
mov
cmpl
jne
movl
jmp
mov
mov
mov
mov
mov
push
mov
mov
push
mov
call
cmp
jge
movl
jmp
mov
mov
push
mov
mov
push
mov
call
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
lea
push
mov
call
mov
mov
rep
movsbl
test
jne
push
mov
mov
mov
push
call
add
mov
mov
mov
call
push
mov
mov
mov
call
jmp
lea
push
call
add
push
lea
push
call
add
test
je
mov
mov
mov
call
push
mov
mov
mov
call
jmp
push
lea
push
call
add
test
je
mov
mov
mov
call
push
mov
mov
mov
call
jmp
push
lea
push
call
add
test
je
mov
mov
mov
call
push
mov
mov
mov
call
jmp
push
lea
push
call
add
test
je
mov
mov
mov
call
push
mov
mov
mov
call
jmp
push
lea
push
call
add
test
je
mov
mov
mov
call
push
mov
mov
mov
call
jmp
push
lea
push
call
add
test
je
push
mov
call
push
mov
mov
mov
call
jmp
push
lea
push
call
add
test
jne
push
lea
push
mov
push
call
add
mov
mov
mov
mov
push
mov
push
call
add
neg
sbb
inc
mov
lea
call
mov
and
test
je
push
mov
mov
mov
call
jmp
lea
push
lea
push
mov
call
movl
mov
push
push
call
add
mov
mov
mov
cmpl
jne
push
mov
mov
mov
push
call
add
movl
lea
call
jmp
movl
jmp
mov
add
mov
cmpl
jge
mov
imul
movsbl
test
jne
jmp
mov
imul
lea
push
call
add
mov
mov
mov
imul
lea
push
mov
push
call
add
neg
sbb
inc
and
test
je
mov
push
mov
call
push
mov
mov
mov
call
movl
lea
call
jmp
jmp
movl
jmp
mov
add
mov
cmpl
jge
mov
imul
movsbl
test
jne
jmp
mov
push
mov
imul
lea
push
call
add
test
je
mov
push
mov
call
push
mov
mov
mov
call
movl
lea
call
jmp
jmp
movl
jmp
mov
add
mov
cmpl
jge
mov
imul
movsbl
test
jne
jmp
mov
imul
lea
push
mov
push
call
add
test
je
mov
push
mov
call
push
mov
mov
mov
call
movl
lea
call
jmp
jmp
push
mov
mov
mov
push
call
add
movl
lea
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
lea
push
mov
call
mov
mov
mov
movl
mov
mov
push
lea
push
mov
call
mov
mov
mov
movb
mov
mov
push
lea
push
mov
call
mov
mov
mov
movb
mov
mov
push
push
call
add
movb
lea
call
movb
lea
call
movl
lea
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
push
mov
mov
mov
push
call
add
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
lea
push
mov
push
call
add
mov
mov
mov
mov
mov
push
call
add
mov
lea
call
lea
push
call
add
mov
sub
mov
lea
push
call
add
cmp
jle
lea
push
call
add
mov
lea
push
call
add
cmp
jl
mov
push
lea
push
push
mov
mov
mov
push
call
add
lea
push
mov
push
push
mov
push
call
add
push
mov
mov
mov
call
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
push
lea
push
mov
push
call
add
movl
push
lea
push
mov
push
call
add
movb
push
lea
push
mov
push
call
add
movb
push
lea
push
mov
push
call
add
movb
push
lea
push
mov
push
call
add
movb
push
lea
push
mov
push
call
add
movb
push
lea
push
mov
push
call
add
movb
push
lea
push
mov
push
call
add
movb
mov
mov
movb
lea
push
mov
mov
mov
call
mov
mov
mov
movb
mov
mov
mov
push
lea
push
mov
push
mov
call
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
mov
push
push
lea
push
call
add
movb
lea
call
push
push
lea
push
call
add
push
lea
push
mov
mov
mov
call
mov
mov
mov
movb
mov
push
push
lea
push
mov
mov
mov
call
mov
mov
mov
movb
mov
push
lea
push
call
mov
mov
mov
movb
mov
push
lea
push
call
mov
mov
mov
movb
mov
push
lea
push
call
movb
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
lea
push
mov
push
mov
push
push
call
mov
mov
mov
call
movb
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
movb
lea
call
movl
lea
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
xor
mov
and
test
jne
mov
or
mov
mov
mov
push
call
add
xor
mov
and
test
jne
mov
or
mov
mov
mov
push
call
add
lea
push
push
push
lea
push
call
add
lea
push
call
test
jne
lea
push
push
mov
mov
mov
push
call
add
jmp
push
lea
push
lea
call
movl
mov
mov
movb
mov
mov
movb
movl
lea
push
lea
call
test
je
mov
xor
cmpl
sete
test
jne
mov
mov
mov
movsbl
cmp
jne
push
lea
push
lea
push
call
mov
mov
mov
movb
mov
push
lea
call
movb
lea
call
jmp
push
push
lea
call
push
push
lea
call
movb
mov
xor
lea
rep
stos
stos
movb
mov
xor
lea
rep
stos
stos
movb
mov
xor
lea
rep
stos
stos
movb
mov
xor
lea
rep
stos
stos
movl
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
mov
push
call
add
mov
mov
lea
push
mov
push
call
add
neg
sbb
inc
and
test
je
mov
mov
lea
push
mov
push
call
add
neg
sbb
inc
and
test
je
mov
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
call
add
jmp
cmpl
jne
cmpl
je
mov
add
cmp
jne
cmpl
jne
mov
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
call
add
lea
push
mov
call
lea
push
mov
call
push
mov
mov
mov
call
mov
call
cmp
jne
sub
mov
mov
lea
push
lea
push
mov
mov
mov
call
mov
mov
mov
movb
mov
call
push
mov
call
mov
mov
call
mov
mov
and
neg
sbb
inc
mov
movb
lea
call
mov
and
test
je
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
lea
push
lea
push
lea
push
lea
push
push
mov
mov
mov
push
mov
add
mov
mov
mov
mov
push
call
add
lea
push
lea
push
lea
push
lea
push
push
mov
add
push
call
add
mov
movl
movl
push
mov
mov
mov
call
mov
mov
mov
call
push
lea
push
lea
push
call
mov
mov
mov
movb
mov
push
lea
call
movb
lea
call
jmp
lea
call
lea
call
movb
push
lea
push
lea
call
mov
mov
mov
movb
mov
mov
mov
mov
push
call
add
neg
sbb
inc
mov
movb
lea
call
mov
and
test
je
mov
mov
add
mov
mov
movb
lea
call
push
push
lea
push
lea
call
mov
push
lea
call
lea
call
cmpl
jne
push
mov
mov
mov
push
call
add
movb
lea
call
movb
lea
call
movl
lea
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
call
add
push
lea
push
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
call
jmp
movl
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
jmp
mov
mov
mov
call
cmpl
je
mov
xor
mov
div
xor
mov
div
cmp
jae
mov
mov
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
movl
ret
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
mov
dec
js
push
mov
push
mov
push
mov
push
lea
mov
call
add
dec
jne
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
mov
mov
push
mov
lea
push
push
mov
call
mov
push
call
add
lea
movl
movl
call
mov
pop
dec
mov
jne
mov
push
call
add
movl
lea
call
pop
ret
nop
nop
nop
nop
push
push
mov
push
mov
sub
mov
push
push
push
push
xor
mov
cmp
mov
je
mov
mov
mull
mov
xor
shr
div
cmp
jae
xor
jmp
mov
push
push
lea
call
mov
push
push
call
add
lea
test
sete
call
mov
test
je
mov
mov
mov
mov
lea
call
mov
mov
xor
lea
rep
mov
lea
push
lea
push
push
mov
call
mov
mov
test
jl
cmp
jl
jle
mov
push
push
mov
call
jmp
movw
movb
movb
mov
push
push
mov
call
mov
mov
call
mov
push
mov
call
jmp
sub
push
mov
mov
mov
call
mov
test
je
mov
xor
lea
movl
rep
mov
test
jne
mov
mov
lea
push
lea
push
push
mov
call
mov
mov
mov
sub
test
jle
mov
movl
test
je
mov
mov
lea
push
mov
call
mov
mov
push
push
mov
movl
call
test
lea
movl
sete
call
mov
test
je
mov
push
push
push
mov
call
add
mov
test
jne
mov
mov
mov
push
push
push
push
inc
call
mov
mov
push
push
push
inc
call
mov
add
test
jne
mov
mov
mov
push
push
push
push
inc
call
mov
mov
push
push
push
inc
call
mov
mov
push
mov
mov
push
push
push
push
inc
call
mov
add
test
jle
mov
mov
mov
mov
push
push
push
push
inc
call
add
dec
jne
mov
push
push
push
call
mov
add
mov
call
jmp
push
mov
call
mov
test
je
xor
mov
mov
test
je
mov
lea
sub
sar
cmp
jae
mov
mov
add
movl
mov
test
je
mov
mov
mov
push
mov
mov
push
push
push
push
inc
call
mov
add
add
add
mov
jmp
mov
mov
mov
push
push
push
push
inc
call
mov
push
push
push
call
mov
mov
inc
push
push
push
push
call
mov
add
mov
call
jmp
mov
push
push
push
call
add
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
mov
push
push
push
push
lea
lea
mov
mov
mov
test
je
mov
lea
push
push
push
mov
call
mov
lea
push
push
lea
mov
push
call
mov
test
jne
mov
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
mov
call
mov
test
je
push
mov
call
mov
push
mov
mov
call
mov
call
test
je
mov
test
je
mov
call
push
mov
call
mov
test
je
fildl
sub
sub
fmull
fstpl
fildl
fmull
fstpl
push
push
call
add
mov
push
call
mov
mov
push
push
mov
call
mov
push
push
push
call
mov
mov
mov
push
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
push
push
push
call
mov
push
push
push
mov
call
add
mov
push
mov
call
test
jne
mov
test
je
push
mov
call
push
mov
call
mov
mov
push
push
push
inc
call
add
mov
test
je
lea
mov
push
call
lea
mov
push
mov
call
mov
lea
add
push
mov
mov
call
mov
add
lea
mov
push
mov
call
add
jne
push
mov
call
mov
mov
push
push
push
inc
call
add
mov
push
call
mov
test
jle
add
mov
mov
sub
fildl
mov
inc
fmull
fstpl
push
push
push
call
add
mov
test
je
mov
lea
push
push
push
mov
call
mov
mov
mov
push
call
lea
push
push
mov
call
cmpw
jge
push
mov
call
mov
mov
push
push
push
inc
call
add
mov
push
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
test
je
mov
lea
push
push
push
mov
call
mov
mov
mov
push
call
lea
push
push
mov
call
cmpw
jge
push
mov
call
mov
mov
push
push
push
inc
call
add
mov
push
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
test
je
mov
mov
cmp
jae
add
push
mov
mov
push
push
call
add
mov
test
je
mov
lea
push
push
push
mov
call
mov
lea
push
add
push
push
mov
call
cmpl
jne
mov
mov
cmp
mov
je
lea
cmpl
jae
push
mov
call
mov
test
jne
mov
mov
add
add
cmp
mov
jne
jmp
push
mov
call
mov
push
push
call
mov
add
mov
push
push
call
mov
push
mov
call
jmp
mov
lea
push
mov
call
xor
lea
mov
call
mov
sub
mov
mov
or
mov
mov
mov
mov
mov
xor
mov
repnz
not
dec
mov
mov
cmp
mov
jbe
call
mov
xor
cmp
je
mov
test
je
cmp
je
cmp
jne
dec
mov
mov
mov
mov
jmp
cmp
jne
cmp
je
lea
mov
test
je
cmp
je
dec
mov
mov
mov
mov
jmp
push
call
add
xor
mov
mov
mov
jmp
mov
cmp
ja
cmp
jae
push
mov
call
push
mov
call
mov
mov
mov
mov
mov
shr
rep
mov
mov
and
rep
mov
mov
mov
add
movb
mov
call
mov
test
je
mov
test
je
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
mov
call
add
mov
test
je
mov
mov
push
push
push
inc
call
add
mov
test
je
mov
mov
mov
inc
mov
mov
push
push
push
push
push
call
add
mov
test
je
mov
mov
push
push
push
inc
call
add
mov
test
je
mov
mov
push
push
push
inc
call
add
mov
test
je
mov
mov
push
push
push
inc
call
mov
push
mov
push
call
add
test
je
mov
mov
push
push
push
push
call
jmp
mov
mov
push
mov
mov
push
push
push
push
inc
call
mov
add
test
je
mov
mov
push
push
push
inc
call
add
mov
mov
push
push
push
inc
call
mov
add
test
je
mov
mov
push
push
push
inc
call
add
mov
mov
add
mov
inc
lea
lea
shl
push
push
push
push
call
mov
mov
mov
push
push
push
push
inc
call
mov
add
test
jle
mov
add
mov
push
push
push
push
inc
call
add
mov
test
je
mov
mov
push
push
push
inc
call
add
mov
mov
push
push
push
push
call
add
lea
movl
call
mov
mov
call
mov
pop
pop
pop
mov
pop
add
ret
nop
push
push
push
mov
push
push
mov
cmp
movl
je
mov
mov
lea
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
jne
cmpl
je
mov
add
cmp
jne
mov
pop
pop
pop
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
lea
push
mov
push
push
mov
call
mov
lea
push
add
push
push
mov
call
mov
mov
mov
xor
cmp
mov
je
push
mov
mov
lea
push
push
call
add
test
je
mov
mov
mov
sub
mov
sub
cltd
sub
mov
sar
imul
imul
add
jns
mov
cmp
jge
mov
mov
mov
add
cmp
jne
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
lea
push
mov
push
push
mov
call
mov
lea
push
add
push
push
mov
call
mov
mov
mov
xor
cmp
mov
je
push
mov
lea
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
jne
mov
mov
mov
mov
sub
sub
cltd
sub
mov
sar
imul
imul
add
jns
mov
cmp
jge
mov
mov
add
cmp
jne
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
push
push
mov
push
push
mov
push
push
mov
call
mov
lea
push
add
push
push
mov
call
mov
mov
mov
add
xor
cmp
je
mov
mov
cmp
jne
mov
mov
mov
sub
mov
sub
cltd
sub
mov
sar
imul
imul
add
jns
mov
cmp
jge
mov
mov
add
cmp
jne
pop
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
push
push
mov
push
push
mov
push
push
mov
call
mov
lea
push
add
push
push
mov
call
mov
mov
add
cmp
je
mov
mov
cmpl
jne
mov
test
je
mov
mov
mov
sub
mov
sub
cltd
sub
mov
sar
imul
imul
add
js
cmp
jl
add
cmp
jne
pop
pop
pop
xor
pop
add
ret
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
sub
push
push
mov
xor
mov
mov
mov
cmp
je
lea
push
mov
push
mov
mov
push
mov
call
mov
test
je
mov
test
jle
mov
test
jle
lea
lea
shl
cltd
idiv
cmp
jg
mov
mov
mov
mov
mov
add
add
cmp
mov
jne
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
call
mov
lea
push
push
push
mov
call
mov
lea
push
add
push
push
mov
call
mov
mov
cmp
je
mov
push
mov
call
mov
add
cmp
jne
pop
pop
pop
ret
nop
mov
push
push
push
push
mov
cmp
je
lea
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
je
add
add
cmp
jne
pop
pop
pop
xor
pop
ret
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
sub
push
push
push
mov
xor
mov
imul
test
jle
lea
lea
push
mov
push
push
call
test
jle
lea
mov
test
jbe
cmp
jae
inc
add
dec
jne
mov
imul
pop
sub
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
mov
push
push
mov
mov
add
push
call
mov
cmp
ja
push
mov
xor
lea
movl
rep
lea
mov
push
push
call
mov
xor
test
pop
pop
setg
add
ret
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
xor
push
lea
mov
mov
mov
cmp
je
cmp
jl
mov
imul
test
jle
mov
lea
lea
push
push
push
mov
call
xor
test
jle
lea
mov
test
jbe
cmp
jae
mov
push
push
mov
call
mov
mov
lea
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
je
mov
inc
add
cmp
jl
mov
mov
inc
add
cmp
mov
mov
jl
mov
mov
xor
movw
rep
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
mov
mov
mov
mov
mov
cltd
idiv
mov
pop
pop
pop
pop
mov
cltd
idiv
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
xor
mov
mov
lea
cmp
je
cmp
jl
mov
imul
test
jle
mov
lea
lea
push
push
push
mov
call
xor
test
jle
lea
mov
test
jbe
cmp
jae
mov
push
mov
push
call
mov
mov
add
push
push
call
add
test
jne
inc
add
cmp
jl
mov
mov
inc
add
cmp
mov
jl
mov
mov
xor
movw
rep
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
mov
mov
mov
mov
cltd
idiv
mov
pop
pop
pop
pop
mov
cltd
idiv
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
xor
lea
mov
mov
mov
cmp
je
cmp
jl
mov
imul
test
jle
mov
lea
lea
push
push
push
mov
call
xor
test
jle
lea
mov
jmp
mov
mov
xor
lea
movl
mov
mov
test
rep
jbe
cmp
jae
lea
mov
push
push
call
mov
lea
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
je
mov
inc
add
cmp
mov
jl
mov
mov
mov
inc
add
cmp
mov
mov
jl
mov
movw
movb
movb
mov
pop
pop
pop
mov
pop
add
ret
mov
mov
mov
mov
mov
pop
cltd
idiv
mov
pop
pop
pop
mov
cltd
idiv
mov
mov
mov
mov
add
ret
nop
nop
sub
push
push
push
mov
push
xor
lea
mov
mov
mov
mov
cmp
je
cmp
jl
mov
imul
test
jle
mov
lea
lea
push
push
push
mov
call
xor
test
jle
mov
mov
lea
lea
mov
mov
mov
xor
lea
movl
mov
mov
test
rep
jbe
cmp
jae
lea
mov
push
push
call
mov
lea
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
jne
mov
test
je
mov
mov
mov
mov
mov
cltd
idiv
mov
mov
cltd
idiv
mov
mov
mov
mov
mov
mov
inc
add
mov
mov
mov
mov
inc
add
cmp
mov
jl
mov
mov
inc
add
cmp
mov
mov
jl
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
xor
lea
mov
mov
mov
mov
cmp
je
cmp
jl
mov
imul
test
jle
mov
lea
lea
push
push
push
mov
call
xor
test
jle
mov
mov
lea
lea
mov
mov
mov
xor
lea
movl
mov
mov
test
rep
jbe
cmp
jae
lea
mov
push
push
call
mov
lea
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
jne
mov
test
jl
cmp
jne
mov
test
je
mov
mov
mov
mov
mov
cltd
idiv
mov
mov
cltd
idiv
mov
mov
mov
mov
mov
mov
inc
add
mov
mov
mov
mov
inc
add
cmp
mov
jl
mov
mov
inc
add
cmp
mov
mov
jl
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
xor
xor
lea
mov
mov
mov
mov
cmp
je
cmp
jl
mov
imul
cmp
jle
mov
lea
lea
push
push
push
mov
call
cmp
jle
lea
mov
mov
mov
xor
lea
mov
cmp
rep
jbe
cmp
jae
mov
lea
push
push
call
mov
lea
mov
mov
cmp
jne
cmp
je
mov
mov
cmp
jne
add
add
cmp
jne
xor
jmp
sbb
sbb
cmp
jne
mov
mov
add
mov
mov
add
dec
mov
jne
mov
mov
mov
inc
add
cmp
mov
mov
jl
mov
pop
pop
pop
pop
add
ret
nop
sub
push
push
movswl
push
push
mov
mov
cmp
jge
lea
lea
cmp
je
cmp
jl
mov
imul
test
jle
lea
lea
push
mov
push
push
call
xor
cmp
jne
mov
mov
and
and
imul
add
cmp
jge
lea
cmpl
je
inc
add
cmp
jl
mov
inc
add
cmp
jl
mov
movw
movb
movb
mov
pop
pop
pop
mov
pop
add
ret
mov
mov
cltd
idiv
mov
mov
pop
pop
mov
cltd
idiv
pop
pop
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
mov
imul
test
jle
mov
lea
lea
push
push
push
mov
call
xor
test
jle
lea
mov
mov
mov
test
jbe
cmp
jae
mov
mov
push
push
call
mov
mov
add
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
je
mov
inc
add
cmp
mov
jl
mov
mov
xor
movw
rep
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
mov
mov
cltd
idiv
mov
movw
pop
pop
pop
pop
mov
cltd
idiv
mov
mov
mov
mov
add
ret
nop
nop
nop
sub
push
push
mov
push
mov
imul
test
jle
mov
lea
lea
push
push
push
mov
call
xor
cmpw
jne
mov
mov
and
and
imul
add
cmp
jge
mov
lea
mov
cltd
idiv
cmp
jge
mov
cltd
idiv
cmp
jge
cmpl
je
inc
add
cmp
jl
mov
movw
movb
movb
mov
pop
pop
mov
pop
add
ret
mov
movw
cltd
idiv
mov
pop
mov
cltd
idiv
pop
pop
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
mov
push
call
xor
lea
mov
mov
cmp
je
cmp
jl
mov
imul
test
jle
mov
lea
lea
push
push
push
mov
call
xor
test
jle
lea
mov
mov
mov
xor
lea
mov
movl
test
rep
jbe
cmp
jae
lea
mov
push
push
call
mov
cmp
jl
cmp
jg
mov
mov
cmp
jge
mov
mov
mov
mov
cltd
idiv
push
mov
cltd
idiv
mov
push
push
push
push
call
add
mov
inc
add
cmp
mov
jl
mov
mov
inc
add
cmp
mov
mov
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
movswl
mov
push
mov
lea
push
lea
lea
push
push
and
mov
mov
imul
mov
and
add
lea
push
mov
call
mov
test
jbe
cmp
jae
mov
mov
push
push
call
mov
pop
pop
ret
mov
mov
xor
rep
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
xor
mov
xor
lea
mov
rep
lea
mov
mov
mov
mov
cmp
je
cmp
jl
mov
imul
test
jle
mov
lea
lea
push
push
push
mov
call
test
movl
jle
mov
lea
lea
mov
mov
mov
xor
lea
movl
test
rep
jbe
cmp
jae
lea
mov
push
push
call
mov
lea
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
mov
test
jne
test
jl
cmp
jne
mov
mov
mov
mov
inc
add
mov
mov
mov
mov
cmp
jge
mov
mov
inc
add
cmp
mov
jl
mov
mov
inc
add
cmp
mov
mov
jl
pop
pop
pop
xor
pop
add
ret
mov
push
lea
push
push
mov
call
mov
push
push
push
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
call
jmp
nop
nop
nop
nop
nop
nop
push
lea
lea
push
push
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
push
mov
mov
push
mov
lea
push
push
mov
call
mov
push
call
add
lea
movl
movl
call
mov
pop
dec
mov
jne
mov
push
call
add
movl
lea
call
pop
ret
nop
nop
nop
nop
push
push
mov
xor
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
mov
mov
mov
pop
pop
ret
push
call
add
mov
mov
mov
pop
pop
ret
nop
nop
nop
mov
mov
mov
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
cmp
jne
cmp
mov
jbe
call
mov
call
mov
sub
cmp
jae
mov
cmp
jbe
mov
sub
add
push
lea
push
push
call
mov
add
sub
mov
push
push
call
test
je
push
mov
call
mov
call
pop
pop
mov
pop
pop
ret
cmp
jbe
cmp
jne
mov
cmp
jne
mov
cmpb
jae
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
inc
pop
mov
pop
mov
pop
pop
ret
push
push
mov
call
test
je
mov
cmp
jne
mov
mov
mov
mov
push
shr
rep
mov
and
rep
mov
call
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
mov
push
push
mov
mov
push
push
mov
mov
xor
or
xor
mov
mov
mov
repnz
not
dec
mov
cmp
jbe
call
mov
cmp
je
mov
test
je
cmp
je
cmp
jne
dec
push
mov
mov
call
pop
mov
pop
pop
pop
ret
cmp
jne
push
mov
call
pop
mov
pop
pop
pop
ret
mov
cmp
ja
cmp
jae
push
mov
call
push
mov
call
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
pop
pop
movb
mov
pop
pop
ret
nop
nop
nop
push
push
push
push
mov
xor
mov
mov
cmp
je
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
add
cmp
jne
mov
push
call
add
mov
mov
mov
pop
pop
pop
pop
ret
push
push
mov
push
mov
push
cmp
push
mov
je
mov
test
jne
xor
jmp
mov
sub
sar
mov
test
jne
xor
jmp
mov
sub
sar
cmp
ja
mov
mov
cmp
je
mov
mov
push
push
push
call
add
add
cmp
jne
mov
mov
cmp
je
push
mov
call
add
cmp
jne
mov
mov
test
jne
mov
xor
shl
add
pop
mov
mov
pop
pop
pop
pop
ret
mov
pop
sub
mov
sar
shl
add
pop
mov
mov
pop
pop
pop
ret
test
jne
xor
jmp
mov
sub
sar
test
jne
xor
jmp
mov
sub
sar
cmp
ja
test
jne
xor
jmp
mov
sub
sar
shl
add
mov
mov
cmp
je
mov
push
push
push
mov
call
add
add
cmp
jne
mov
mov
mov
mov
cmp
mov
je
push
push
call
add
add
add
cmp
jne
mov
mov
mov
test
jne
mov
xor
shl
add
pop
pop
mov
pop
mov
pop
pop
ret
mov
pop
sub
mov
sar
shl
add
pop
mov
pop
mov
pop
pop
ret
mov
mov
cmp
je
push
mov
call
add
cmp
jne
mov
push
call
mov
add
test
jne
xor
jmp
mov
sub
sar
test
jge
xor
shl
push
call
mov
mov
mov
add
mov
mov
cmp
je
push
push
call
add
add
add
cmp
jne
mov
mov
pop
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
xor
ret
mov
sub
sar
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
test
je
mov
sub
sar
cmp
ja
mov
call
mov
mov
shl
pop
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
mov
push
push
mov
mov
xor
mov
mov
push
lea
mov
mov
call
mov
mov
cmp
jne
push
call
mov
movl
mov
mov
mov
add
mov
mov
push
inc
mov
mov
call
mov
mov
mov
mov
mov
mov
add
lea
mov
movl
call
mov
mov
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
mov
mov
push
push
mov
xor
mov
push
mov
push
push
lea
mov
mov
mov
call
mov
lea
lea
push
push
mov
mov
call
mov
mov
mov
cmp
mov
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
mov
lea
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
mov
push
push
mov
mov
xor
mov
mov
push
lea
mov
mov
call
mov
mov
cmp
jne
push
call
mov
movl
mov
mov
mov
add
mov
mov
push
inc
mov
mov
call
mov
mov
mov
mov
mov
mov
add
lea
mov
movl
call
mov
mov
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
movl
movl
movl
pop
ret
nop
nop
push
push
mov
xor
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
mov
mov
mov
pop
pop
ret
push
call
add
mov
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
mov
mov
cmp
jae
call
mov
mov
mov
sub
cmp
jae
mov
cmp
jne
mov
mov
add
cmp
jae
call
mov
call
mov
sub
cmp
jae
mov
test
jbe
mov
sub
add
push
lea
push
push
call
mov
add
sub
mov
push
push
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
cmp
jae
mov
test
jbe
mov
sub
push
lea
push
push
call
mov
add
sub
mov
push
push
call
test
je
push
mov
call
pop
mov
pop
pop
pop
ret
xor
cmp
jbe
cmp
jne
mov
cmp
jne
mov
cmpb
jae
mov
cmp
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
xor
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
inc
pop
mov
mov
pop
pop
pop
ret
mov
call
cmp
jae
call
mov
test
je
mov
test
je
cmp
je
test
jne
dec
push
mov
mov
call
pop
mov
pop
pop
pop
ret
test
jne
push
mov
call
pop
mov
pop
pop
pop
ret
mov
cmp
ja
cmp
jae
push
mov
call
push
mov
call
mov
test
jne
mov
mov
mov
add
mov
shr
rep
mov
and
rep
mov
mov
movb
pop
mov
pop
pop
pop
ret
mov
push
test
mov
je
mov
test
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
movl
movl
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
mov
mov
mov
mov
sub
sub
sar
sar
cmp
mov
jae
test
je
mov
sub
sar
cmp
ja
mov
test
jne
xor
jmp
sub
sar
add
test
mov
jge
xor
shl
push
call
mov
add
cmp
mov
mov
je
push
push
call
add
add
add
cmp
jne
mov
push
push
call
mov
add
add
mov
push
push
push
call
mov
mov
push
push
mov
call
mov
push
call
mov
mov
shl
add
add
mov
mov
call
mov
inc
shl
add
mov
mov
mov
mov
pop
shl
pop
pop
add
pop
add
ret
mov
sub
sar
cmp
jae
lea
mov
push
push
push
call
mov
mov
mov
mov
sub
push
sar
sub
mov
push
push
call
mov
push
push
push
call
add
jmp
push
push
add
mov
push
call
mov
push
add
push
push
call
mov
lea
push
push
push
call
add
mov
mov
add
pop
mov
mov
shl
pop
pop
add
pop
add
ret
nop
push
mov
push
mov
cmp
je
push
xor
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
add
cmp
jne
pop
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
je
push
mov
push
push
call
add
add
add
cmp
jne
mov
pop
pop
pop
ret
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
mov
push
push
push
mov
mov
or
xor
xor
push
repnz
not
dec
mov
mov
lea
push
mov
mov
call
test
je
mov
mov
mov
push
mov
shr
rep
mov
and
rep
mov
mov
pop
mov
lea
mov
push
lea
movl
call
mov
push
lea
movb
mov
call
mov
lea
push
push
push
lea
call
lea
push
push
mov
movl
call
pop
pop
pop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
mov
push
mov
mov
push
mov
test
je
mov
cmp
jne
cmp
jne
lea
call
mov
lea
movl
mov
call
mov
movb
cmp
mov
je
mov
push
mov
call
mov
lea
push
call
push
call
mov
add
cmp
mov
jne
lea
movb
call
mov
mov
mov
lea
mov
mov
movl
movl
mov
mov
mov
mov
mov
mov
call
mov
pop
pop
pop
mov
mov
add
ret
cmp
je
mov
lea
call
lea
push
push
mov
call
mov
cmp
jne
mov
pop
pop
pop
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
mov
push
mov
mov
push
mov
test
je
mov
cmp
jne
cmp
jne
lea
call
mov
lea
movl
mov
call
mov
movb
cmp
mov
je
mov
push
mov
call
mov
lea
call
push
call
mov
add
cmp
mov
jne
lea
movb
call
mov
mov
mov
lea
mov
mov
movl
movl
mov
mov
mov
mov
mov
mov
call
mov
pop
pop
pop
mov
mov
add
ret
cmp
je
mov
lea
call
lea
push
push
mov
call
mov
cmp
jne
mov
pop
pop
pop
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
mov
mov
movl
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
mov
cmp
jne
lea
call
mov
jmp
mov
mov
cmp
jne
mov
mov
mov
cmp
je
mov
cmp
je
mov
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
cmp
mov
jbe
call
mov
xor
cmp
je
mov
test
je
cmp
je
cmp
jne
dec
mov
mov
mov
mov
mov
pop
pop
ret
cmp
jne
push
mov
call
mov
pop
pop
ret
mov
cmp
ja
cmp
jae
push
mov
call
push
mov
call
mov
push
mov
mov
push
mov
shr
rep
mov
mov
and
rep
mov
pop
mov
pop
movb
pop
pop
ret
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
cmp
jae
call
mov
xor
cmp
je
mov
test
je
cmp
je
dec
mov
mov
or
xor
mov
mov
mov
repnz
not
dec
push
mov
mov
push
call
test
je
mov
mov
mov
push
shr
rep
mov
and
rep
mov
call
xor
mov
mov
mov
sub
cmp
jae
mov
cmp
jbe
mov
mov
add
sub
push
lea
push
push
call
mov
add
sub
cmp
jbe
call
mov
cmp
je
mov
test
je
cmp
je
cmp
jne
dec
push
mov
mov
call
pop
mov
pop
pop
pop
ret
cmp
jne
cmp
je
pop
mov
mov
pop
pop
movb
pop
ret
cmp
jae
push
mov
call
mov
mov
movb
pop
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
movb
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
cmp
mov
jbe
call
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
jne
dec
pop
mov
mov
mov
mov
pop
xor
pop
ret
mov
cmp
jne
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
dec
pop
mov
mov
mov
mov
pop
xor
pop
ret
push
call
add
mov
mov
mov
pop
pop
xor
pop
ret
cmp
je
mov
mov
pop
pop
xor
pop
ret
cmp
je
mov
cmp
ja
cmp
jae
cmp
je
lea
mov
cmp
je
cmp
je
dec
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
call
add
push
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
cmp
jae
push
mov
call
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
mov
push
mov
lea
mov
call
mov
mov
cmp
movl
je
mov
mov
test
mov
jne
mov
push
push
mov
mov
push
push
call
test
setl
test
je
mov
jmp
mov
cmp
jne
lea
movl
call
mov
mov
test
je
push
push
lea
push
push
call
mov
mov
movb
mov
mov
mov
jmp
test
mov
je
mov
cmp
jne
push
push
lea
push
push
call
mov
mov
movb
mov
mov
mov
jmp
lea
call
mov
push
lea
call
test
jge
lea
lea
push
push
push
push
push
mov
movb
call
push
lea
jmp
lea
lea
push
push
movb
lea
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
mov
push
mov
lea
mov
call
mov
mov
cmp
movl
je
mov
mov
test
mov
jne
mov
push
push
mov
mov
push
push
call
test
setl
test
je
mov
jmp
mov
cmp
jne
lea
movl
call
mov
mov
test
je
push
push
lea
push
push
call
mov
mov
movb
mov
mov
mov
jmp
test
mov
je
mov
cmp
jne
push
push
lea
push
push
call
mov
mov
movb
mov
mov
mov
jmp
lea
call
mov
push
lea
call
test
jge
lea
lea
push
push
push
push
push
mov
movb
call
push
lea
jmp
lea
lea
push
push
movb
lea
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
mov
push
push
lea
call
lea
mov
call
mov
mov
xor
cmp
mov
jne
mov
jmp
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
mov
cmp
jne
lea
call
mov
cmp
mov
je
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xor
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
jmp
lea
mov
call
mov
mov
cmp
je
mov
mov
cmp
jne
lea
call
mov
xor
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
jmp
lea
mov
call
mov
mov
cmp
je
mov
mov
cmp
jne
lea
call
mov
mov
xor
mov
mov
cmp
jne
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
lea
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
lea
mov
call
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
jmp
mov
cmp
jne
mov
mov
lea
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
lea
mov
call
mov
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
cmp
jne
jmp
mov
cmp
jne
mov
lea
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
mov
lea
jmp
mov
cmp
jne
mov
mov
mov
lea
jmp
mov
mov
mov
lea
jmp
mov
cmp
jne
mov
mov
lea
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
lea
call
xor
mov
mov
mov
cmp
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
xor
push
mov
mov
mov
call
mov
mov
add
dec
mov
mov
lea
mov
movl
call
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
push
lea
call
mov
mov
xor
cmp
mov
mov
je
mov
mov
push
call
mov
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
push
mov
mov
mov
call
mov
add
cmp
mov
jne
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
push
push
mov
push
mov
sub
push
push
mov
mov
push
push
lea
call
mov
lea
mov
call
mov
mov
cmp
movl
jne
mov
jmp
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
mov
cmp
jne
lea
call
mov
cmp
mov
je
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
jmp
lea
mov
call
mov
mov
cmp
je
mov
mov
cmp
jne
lea
call
mov
mov
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
jmp
lea
mov
call
mov
mov
cmp
je
mov
mov
cmp
jne
lea
call
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
test
jne
mov
mov
lea
movl
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
lea
mov
call
mov
mov
mov
cmp
jne
mov
cmp
jne
jmp
mov
mov
test
jne
mov
mov
lea
movl
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
lea
mov
call
mov
mov
mov
cmp
jne
mov
cmp
jne
movl
mov
mov
cmp
jne
jmp
mov
cmp
jne
mov
mov
lea
movl
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
mov
lea
jmp
mov
cmp
jne
mov
mov
mov
lea
jmp
mov
mov
mov
lea
jmp
mov
cmp
jne
mov
mov
lea
movl
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
lea
call
mov
mov
push
lea
call
mov
xor
cmp
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
mov
cmp
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
xor
push
mov
mov
mov
call
mov
mov
add
dec
mov
mov
lea
mov
movl
call
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
push
lea
call
mov
mov
xor
cmp
mov
mov
je
mov
mov
push
call
mov
push
lea
call
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
push
mov
mov
mov
call
mov
add
cmp
mov
jne
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
mov
push
push
mov
or
push
mov
cmp
mov
mov
mov
jbe
mov
mov
lea
movl
test
jge
xor
push
call
add
mov
jmp
mov
mov
add
test
jge
xor
push
call
mov
add
mov
ret
mov
mov
mov
test
jbe
cmp
jbe
mov
mov
mov
mov
mov
shr
lea
rep
mov
and
rep
mov
mov
mov
test
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
movl
inc
cmp
mov
movb
mov
ja
mov
mov
mov
pop
movb
mov
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
push
push
mov
cmp
je
mov
test
je
cmp
je
dec
mov
mov
mov
or
xor
mov
mov
mov
repnz
not
dec
mov
cmp
jbe
call
xor
mov
cmp
je
mov
test
je
cmp
je
cmp
jne
dec
push
mov
mov
call
pop
pop
pop
pop
ret
cmp
jne
push
mov
call
pop
pop
pop
pop
ret
mov
cmp
ja
cmp
jae
push
mov
call
push
mov
call
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
movb
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
push
lea
call
xor
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
mov
call
mov
mov
add
inc
cmp
mov
je
mov
mov
cmp
jne
lea
push
mov
call
test
jl
mov
mov
cmp
jne
mov
jmp
mov
mov
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
cmp
je
mov
xor
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
lea
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
lea
mov
call
mov
movl
mov
mov
lea
mov
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
mov
lea
jmp
mov
cmp
jne
mov
mov
mov
lea
jmp
mov
mov
mov
lea
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
lea
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
lea
mov
call
mov
movl
mov
mov
lea
mov
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
lea
call
mov
cmp
jne
mov
mov
movl
mov
lea
movl
mov
call
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
jbe
push
mov
push
mov
push
push
call
add
add
dec
jne
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
push
lea
call
xor
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
mov
call
mov
mov
add
inc
cmp
mov
je
mov
mov
cmp
jne
lea
push
mov
call
test
jl
mov
mov
cmp
jne
mov
jmp
mov
mov
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
cmp
je
mov
xor
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
lea
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
lea
mov
call
mov
movl
mov
mov
lea
mov
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
mov
lea
jmp
mov
cmp
jne
mov
mov
mov
lea
jmp
mov
mov
mov
lea
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
lea
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
lea
mov
call
mov
movl
mov
mov
lea
mov
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
lea
call
mov
cmp
jne
mov
mov
movl
mov
lea
movl
mov
call
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
ret
nop
nop
nop
push
push
mov
push
mov
push
push
push
push
mov
push
mov
push
mov
call
mov
add
lea
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
cmp
jne
cmp
mov
jbe
call
mov
call
mov
sub
cmp
jae
mov
test
jbe
mov
sub
add
push
lea
push
push
call
mov
add
sub
mov
push
push
call
test
je
push
mov
call
mov
call
movl
mov
mov
pop
pop
pop
pop
mov
add
ret
cmp
jbe
cmp
jne
mov
cmp
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
shr
rep
mov
mov
and
rep
mov
mov
movb
movl
jmp
nop
nop
nop
sub
push
lea
call
lea
push
push
call
nop
nop
nop
nop
push
mov
movl
mov
test
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
movl
movl
movl
call
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
sub
push
lea
call
lea
push
push
call
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
push
mov
push
mov
push
mov
call
mov
add
lea
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
cmp
jne
cmp
mov
jbe
call
mov
call
mov
sub
cmp
jae
mov
test
jbe
mov
sub
add
push
lea
push
push
call
mov
add
sub
mov
push
push
call
test
je
push
mov
call
mov
call
movl
mov
mov
pop
pop
pop
pop
mov
add
ret
cmp
jbe
cmp
jne
mov
cmp
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
push
shr
rep
mov
and
rep
mov
call
mov
movl
jmp
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
call
mov
movl
mov
test
jne
mov
cmp
jne
mov
mov
jmp
mov
mov
cmp
je
push
mov
lea
call
mov
mov
cmp
je
mov
mov
cmp
jne
lea
call
mov
pop
jmp
mov
mov
cmp
jne
mov
mov
mov
cmp
je
mov
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
call
mov
movl
mov
test
jne
mov
cmp
jne
mov
mov
jmp
mov
mov
cmp
je
push
mov
lea
call
mov
mov
cmp
je
mov
mov
cmp
jne
lea
call
mov
pop
jmp
mov
mov
cmp
jne
mov
mov
mov
cmp
je
mov
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
mov
mov
movl
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
mov
cmp
jne
lea
call
mov
jmp
mov
mov
cmp
jne
mov
mov
mov
cmp
je
mov
cmp
je
mov
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
mov
mov
push
push
mov
push
xor
push
mov
push
push
lea
mov
mov
mov
mov
call
mov
or
mov
xor
repnz
mov
or
not
dec
sub
mov
mov
cmp
ja
call
cmp
push
jbe
mov
push
lea
lea
push
call
test
je
mov
mov
mov
lea
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
pop
cmp
je
lea
mov
cmp
je
cmp
je
dec
pop
mov
mov
pop
pop
mov
mov
add
ret
push
call
add
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
push
mov
xor
cmp
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
cmp
jne
cmp
mov
jbe
call
mov
call
mov
sub
cmp
jae
mov
cmp
jbe
mov
sub
add
push
lea
push
push
call
mov
add
sub
mov
push
push
call
test
je
push
mov
call
mov
call
pop
pop
pop
pop
mov
mov
add
ret
cmp
jbe
cmp
jne
mov
cmp
jne
mov
cmpb
jae
push
mov
call
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
pop
inc
pop
pop
mov
pop
mov
mov
add
ret
push
push
mov
call
test
je
mov
cmp
jne
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
movb
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
cmp
je
push
push
push
mov
mov
mov
mov
cmp
jae
mov
cmp
jne
cmp
jae
call
mov
call
mov
sub
cmp
jae
mov
test
jbe
mov
sub
add
push
lea
push
push
call
mov
add
sub
mov
push
push
call
test
je
push
mov
call
mov
call
jmp
xor
cmp
jbe
cmp
jne
mov
cmp
jne
mov
cmpb
jae
mov
cmp
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
movb
mov
add
cmp
jne
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
cmp
je
push
push
mov
push
mov
mov
sub
mov
sub
cmp
mov
jae
mov
cmp
jne
cmp
jae
call
mov
call
mov
sub
cmp
jae
mov
test
jbe
mov
sub
add
push
lea
push
push
call
mov
add
sub
mov
push
push
call
test
je
push
mov
call
mov
call
jmp
xor
cmp
jbe
cmp
jne
mov
cmp
jne
mov
cmpb
jae
mov
cmp
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
movb
cmp
jne
mov
pop
pop
pop
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
push
mov
push
mov
xor
cmp
mov
je
mov
mov
mov
mov
mov
mov
mov
push
push
push
mov
call
mov
add
lea
movb
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
cmp
jne
push
push
mov
call
push
push
mov
call
pop
pop
pop
pop
mov
mov
add
ret
xor
cmp
jbe
cmp
jne
mov
cmp
jne
mov
cmpb
jae
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
pop
inc
pop
pop
mov
pop
mov
mov
add
ret
push
push
mov
call
test
je
mov
cmp
mov
je
mov
mov
mov
mov
push
shr
rep
mov
and
rep
mov
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
xor
cmp
mov
je
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
cmp
jne
cmp
jbe
call
mov
call
mov
sub
cmp
jae
mov
test
jbe
mov
sub
add
push
lea
push
push
call
mov
add
sub
mov
push
push
call
test
je
push
mov
call
mov
call
jmp
cmp
jbe
cmp
jne
mov
cmp
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
movb
mov
pop
pop
mov
pop
mov
pop
mov
add
ret
nop
nop
push
mov
mov
test
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
movl
test
movl
movl
je
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
mov
mov
test
jne
mov
mov
cmp
mov
jb
mov
mov
push
mov
xor
repz
pop
je
sbb
sbb
test
jne
cmp
jae
pop
or
pop
ret
xor
cmp
setne
pop
pop
ret
push
push
mov
push
mov
cmp
jae
call
mov
mov
sub
cmp
jae
mov
mov
mov
cmp
jb
mov
mov
test
jne
xor
jmp
lea
mov
xor
repz
je
sbb
sbb
test
jne
cmp
jae
pop
pop
or
pop
ret
xor
cmp
setne
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
mov
mov
sub
push
mov
sub
push
and
push
cmp
push
jg
cmp
je
lea
cmp
je
mov
lea
mov
push
lea
mov
call
mov
push
push
push
lea
call
lea
mov
push
movl
call
test
jl
push
lea
sub
mov
mov
push
call
push
call
add
jmp
push
push
push
call
mov
add
lea
push
push
push
mov
call
push
lea
movl
call
mov
add
add
cmp
jne
mov
mov
pop
pop
pop
pop
add
ret
cmp
mov
mov
jle
mov
push
sub
mov
mov
push
lea
sub
mov
mov
push
call
mov
sub
sub
mov
sar
cltd
sub
mov
sar
shl
add
movl
push
call
sub
movb
mov
mov
push
call
push
movl
call
add
push
push
call
mov
mov
mov
sub
sub
add
and
and
cmp
push
jg
mov
push
push
push
call
add
mov
jmp
mov
push
push
push
call
add
mov
mov
sub
and
cmp
jg
mov
lea
cmp
je
lea
cmp
je
push
lea
call
lea
mov
push
movl
call
test
jl
mov
lea
push
sub
mov
mov
push
call
push
call
add
jmp
cmp
mov
je
mov
sub
push
push
push
lea
call
cmp
jne
mov
lea
push
push
push
mov
call
push
lea
movl
call
add
cmp
jne
mov
mov
cmp
je
mov
push
sub
mov
mov
push
call
push
call
mov
add
add
cmp
jne
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
push
mov
push
mov
sub
mov
and
cmp
jle
mov
push
lea
sub
mov
mov
push
mov
sub
mov
mov
push
call
mov
sub
sar
cltd
sub
mov
sar
shl
add
mov
push
movl
call
sub
movb
mov
mov
push
call
mov
movl
push
call
add
push
push
call
mov
mov
mov
sub
sub
add
and
and
cmp
push
push
jg
push
push
call
add
mov
jmp
push
push
call
add
mov
mov
sub
mov
and
cmp
jg
mov
pop
pop
pop
mov
pop
add
ret
nop
mov
push
push
push
mov
push
push
push
push
mov
movl
lea
mov
sub
test
jne
mov
mov
mov
cmp
jae
mov
mov
xor
repz
je
sbb
sbb
mov
test
jne
cmp
jb
xor
cmp
setne
test
jge
mov
lea
push
push
push
mov
call
mov
jmp
mov
mov
cmp
jae
mov
lea
cmp
jne
push
push
mov
call
push
push
mov
call
jmp
test
jbe
cmp
jne
mov
mov
test
je
mov
cmpb
jae
push
mov
call
test
mov
je
mov
mov
mov
mov
mov
incb
jmp
mov
push
push
mov
call
test
je
test
jne
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
movb
mov
test
je
mov
test
je
cmp
je
dec
mov
mov
mov
pop
pop
pop
pop
add
ret
dec
push
call
add
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
push
push
mov
push
mov
push
movl
mov
movl
test
jne
mov
mov
mov
push
push
push
push
push
push
lea
call
test
jge
mov
test
jne
mov
mov
mov
push
push
push
push
lea
call
test
jge
lea
jmp
mov
test
jne
mov
mov
mov
push
push
push
push
lea
call
test
lea
jl
lea
mov
mov
push
mov
mov
call
mov
push
push
push
mov
call
push
lea
call
push
lea
call
push
lea
call
mov
pop
pop
mov
mov
add
ret
mov
test
jne
mov
mov
lea
push
push
mov
push
push
call
test
jge
lea
jmp
mov
test
jne
mov
mov
mov
push
push
push
push
lea
call
test
lea
jl
lea
mov
mov
push
mov
mov
call
mov
push
push
push
mov
call
push
lea
call
push
lea
call
mov
test
je
mov
test
je
cmp
je
dec
mov
mov
pop
pop
mov
mov
add
ret
dec
push
call
add
mov
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
movw
mov
mov
ret
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
movl
mov
mov
mov
test
jne
mov
mov
cmp
mov
jb
mov
mov
mov
xor
repz
je
sbb
sbb
test
jne
cmp
jb
cmp
setne
test
jge
addl
jmp
mov
sub
test
jne
mov
mov
mov
cmp
mov
jb
mov
mov
xor
repz
je
sbb
sbb
test
jne
cmp
jb
cmp
setne
test
jl
mov
cmp
jbe
mov
push
lea
mov
call
mov
push
push
push
lea
call
mov
mov
push
push
push
movb
call
mov
lea
push
push
push
mov
call
push
lea
movb
call
add
mov
jmp
mov
test
je
mov
test
je
cmp
je
dec
mov
jmp
dec
push
call
add
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
mov
mov
mov
sub
mov
sub
cltd
sub
mov
sar
imul
imul
add
jns
mov
ret
nop
nop
nop
sub
lea
push
mov
push
push
mov
push
mov
call
mov
lea
push
add
push
push
mov
call
mov
mov
mov
mov
sub
sub
cltd
sub
mov
sar
imul
imul
add
pop
jns
mov
add
ret
nop
nop
sub
lea
push
mov
push
push
mov
push
mov
call
mov
lea
push
add
push
push
mov
call
mov
lea
push
push
push
mov
call
mov
lea
push
add
push
push
mov
call
mov
pop
cmp
jbe
mov
cmp
je
mov
add
ret
push
push
mov
lea
push
mov
push
push
mov
call
mov
mov
lea
push
mov
mov
add
push
push
mov
call
mov
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
lea
push
mov
push
push
mov
call
mov
lea
push
push
lea
mov
push
call
mov
test
je
lea
push
add
push
push
mov
call
mov
xor
pop
pop
lea
lea
shl
div
pop
pop
ret
pop
pop
mov
pop
pop
ret
nop
nop
push
push
push
mov
push
lea
push
mov
push
push
mov
call
mov
lea
push
push
lea
mov
push
call
mov
test
je
lea
push
add
push
push
mov
call
mov
xor
pop
pop
lea
lea
shl
div
pop
pop
ret
pop
pop
mov
pop
pop
ret
nop
nop
push
mov
push
push
call
add
test
jne
push
push
call
add
test
jne
push
push
call
add
test
jne
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
or
xor
repnz
not
dec
jne
pop
xor
pop
ret
xor
test
jle
mov
cmp
jl
cmp
jg
inc
cmp
jl
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
xor
mov
rep
push
call
mov
or
xor
push
repnz
not
sub
push
mov
mov
mov
shr
rep
mov
and
rep
call
add
test
je
movb
push
push
push
call
add
call
push
call
add
mov
call
jmp
cmc
add
jp
add
cmc
cmc
bt
add
call
jmp
mov
jmp
not
stc
pusha
push
cmc
rol
push
call
jmp
call
pushf
push
mov
jmp
movzbw
pusha
lea
mov
movsbw
movzbw
movzbl
movsbw
mov
pushl
mov
pushl
jmp
movw
call
mov
push
mov
pusha
lea
jmp
mov
pusha
mov
pushl
lea
jmp
mov
mov
lea
jmp
call
call
jmp
cmp
add
pop
ret
nop
mov
push
push
push
mov
sub
xor
push
mov
push
push
mov
or
repnz
not
sub
push
mov
mov
mov
push
shr
rep
mov
and
rep
call
add
test
je
movb
call
xor
mov
cmp
je
add
cmp
jl
mov
push
call
push
call
mov
mov
mov
mov
mov
mov
lea
push
push
lea
movl
call
lea
call
mov
lea
push
push
lea
call
mov
lea
push
push
lea
movb
call
lea
call
lea
movb
call
mov
mov
call
mov
mov
lea
movl
call
lea
movb
call
lea
movl
call
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
test
mov
je
mov
test
je
push
mov
push
push
call
push
mov
call
push
mov
call
push
mov
call
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
mov
sub
cmp
jne
mov
test
je
mov
push
push
push
push
call
mov
test
je
mov
jmp
mov
test
jne
push
push
push
push
call
mov
mov
push
mov
xor
mov
test
rep
je
push
push
push
call
mov
call
lea
push
mov
call
mov
lea
mov
push
movl
call
mov
lea
mov
push
movb
call
push
lea
push
push
movb
call
push
lea
push
push
movb
call
push
push
lea
movb
push
call
push
lea
push
push
movb
call
mov
or
xor
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
lea
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
movb
lea
call
lea
movl
call
pop
mov
pop
mov
mov
add
ret
cmp
jne
mov
push
push
push
call
mov
mov
mov
add
ret
cmp
jne
mov
test
je
push
call
mov
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
pusha
push
mov
call
popa
jmp
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
pusha
push
push
push
push
call
popa
jmp
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
mov
lea
push
push
lea
push
push
call
push
lea
push
push
call
lea
push
push
call
mov
add
test
je
push
push
call
lea
push
call
lea
push
push
call
push
push
call
lea
push
call
lea
push
push
call
push
push
call
lea
push
push
call
push
call
add
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
test
je
push
push
push
call
mov
mov
inc
push
push
call
mov
push
call
mov
mov
or
xor
repnz
not
sub
push
mov
mov
mov
shr
rep
mov
and
rep
call
push
push
call
call
pop
pop
pop
lea
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
and
push
push
push
call
mov
test
je
push
push
call
mov
test
je
push
push
call
test
je
push
call
test
je
mov
push
push
push
call
pop
pop
mov
pop
ret
pop
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
call
mov
cmp
jne
push
call
add
xor
pop
pop
add
ret
mov
xor
lea
movl
rep
lea
push
push
call
cmp
jne
mov
lea
push
push
call
add
test
je
lea
push
push
call
cmp
je
push
call
pop
xor
pop
add
ret
push
call
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
mov
xor
lea
push
movl
mov
push
rep
push
call
cmp
mov
jne
push
call
add
mov
pop
pop
pop
add
ret
push
push
push
call
mov
cmp
jne
push
call
add
jmp
lea
push
push
call
mov
mov
cmp
je
lea
lea
push
push
push
call
lea
push
push
call
add
test
je
lea
push
push
call
add
test
je
lea
push
push
call
mov
test
jne
jmp
test
mov
jne
push
push
call
add
mov
pop
test
je
push
call
mov
push
call
pop
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
mov
or
xor
xor
repnz
not
dec
lea
push
push
push
mov
call
add
lea
xor
mov
push
push
push
call
add
inc
add
cmp
jl
mov
lea
push
mov
call
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
push
mov
sub
push
push
jmp
btr
rcl
mov
pusha
mov
call
pushf
popl
pushf
pushl
jmp
rcl
mov
bswap
movsbl
sub
pushf
mov
mov
clc
test
add
jmp
pushf
popl
pushf
pushf
pushl
popl
pushf
pushf
pushl
push
lea
jmp
xor
call
rcr
pusha
mov
pushf
call
mov
call
mov
jmp
mov
call
pushl
popl
movb
push
pushf
lea
jmp
pushl
popl
push
push
lea
jmp
add
add
out
outsl
mov
pop
pop
mov
pop
ret
nop
sub
push
mov
push
push
mov
xor
lea
movb
rep
lea
movb
push
mov
call
mov
xor
lea
lea
rep
mov
or
repnz
not
sub
movb
mov
mov
mov
mov
shr
rep
mov
lea
and
push
rep
lea
movw
mov
call
test
jne
mov
mov
mov
and
and
push
mov
and
push
mov
push
mov
and
and
push
and
push
push
push
push
push
call
add
pop
pop
mov
pop
add
ret
sub
push
push
push
movl
xor
push
lea
push
push
call
add
lea
push
push
push
push
push
push
push
call
mov
cmp
je
mov
xor
lea
lea
rep
push
push
lea
push
push
push
push
push
push
movl
call
mov
test
jbe
mov
lea
shr
mov
and
neg
sbb
and
add
mov
xor
rep
stos
mov
mov
xor
mov
rep
lea
lea
push
push
push
push
push
push
call
add
test
je
lea
mov
xor
add
mov
add
mov
cmp
jl
lea
push
push
call
add
movl
push
call
inc
cmp
jl
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
xor
mov
mov
mov
mov
mov
mov
mov
and
or
mov
mov
push
mov
push
shl
mov
mov
push
push
push
mov
movl
push
mov
push
push
call
pop
ret
nop
sub
push
push
mov
push
push
xor
mov
mov
push
lea
push
push
call
add
lea
push
push
push
push
push
push
push
call
mov
cmp
je
xor
mov
xor
lea
push
rep
lea
push
stos
push
movl
movl
movl
movl
call
add
lea
lea
lea
push
push
push
push
push
push
push
push
movb
mov
call
test
je
mov
test
je
lea
lea
mov
xor
add
mov
add
mov
dec
jne
mov
lea
push
lea
push
call
add
movl
inc
cmp
jl
push
call
mov
inc
cmp
mov
jl
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
push
push
push
push
push
call
mov
or
xor
add
repnz
not
sub
lea
mov
mov
mov
shr
rep
mov
mov
and
test
rep
jne
movsbl
push
call
add
test
jne
movsbl
push
call
add
test
je
lea
or
xor
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
xor
cmp
jg
mov
sub
inc
lea
mov
mov
add
shr
mov
mov
inc
mov
inc
dec
jne
movb
dec
test
pop
jle
mov
cmp
jne
movb
dec
test
jg
mov
ret
sub
push
push
mov
or
xor
repnz
not
sub
mov
mov
mov
shr
rep
mov
xor
and
rep
mov
lea
rep
lea
movl
push
call
mov
pop
cmp
pop
jne
call
call
xor
add
ret
nop
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
mov
call
movl
push
lea
movb
call
push
lea
movb
call
push
lea
movb
call
push
lea
movb
call
push
lea
movb
call
push
lea
movb
call
push
lea
movb
call
push
lea
movb
call
push
lea
movb
call
mov
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
lea
movb
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
mov
movl
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
movb
mov
call
lea
movb
call
lea
movb
call
lea
mov
lea
movb
call
lea
movb
call
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
lea
movb
call
mov
movb
call
lea
movb
call
lea
movb
call
mov
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
push
jmp
shld
xor
daa
mov
setb
rcr
sets
mov
push
add
call
mov
push
call
mov
pusha
pushf
push
lea
jmp
mov
movb
call
pushf
popl
push
jmp
cmp
test
shl
cmp
shr
movw
clc
clc
pushf
or
stc
pusha
xor
jmp
lea
call
pop
aam
add
add
into
je
cmp
je
push
call
mov
mov
push
lea
push
push
push
call
push
lea
push
push
call
mov
mov
mov
sub
push
push
mov
sub
push
push
push
mov
call
mov
push
push
lea
push
push
call
test
je
mov
lea
push
call
lea
push
call
cmpl
je
call
cmp
mov
jbe
push
lea
call
add
test
jne
mov
push
call
push
push
lea
push
push
call
test
jne
jmp
mov
mov
call
mov
pop
test
pop
je
mov
push
call
movl
mov
mov
pop
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
mov
test
je
xor
ret
mov
lea
push
push
push
push
push
push
call
xor
mov
test
sete
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
push
push
push
push
push
call
push
call
push
call
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
cmp
je
mov
jmp
psubsw
mov
or
addb
and
xor
and
sub
or
add
es
and
aam
and
jnp
and
add
and
add
add
aaa
and
in
jmp
adcb
and
add
or
add
add
adcb
es
add
add
or
sbbb
add
or
add
cmp
orb
and
movl
adcb
cmpb
and
cmp
add
sbb
and
add
andb
and
imul
add
aaa
and
adc
add
aaa
and
cmp
or
cmpb
and
adcb
adcb
add
orb
es
and
xchg
or
add
push
and
lea
cmpb
orb
and
addb
adcb
add
add
orb
sbbb
and
adcb
and
jp
orb
and
mov
and
lods
inc
and
lods
inc
and
xor
and
mov
or
or
cmpb
orb
adcb
and
adcb
and
aam
and
mov
add
and
aam
and
adc
add
add
add
es
es
or
addb
add
or
add
sbbb
add
aaa
and
lds
and
pusha
or
add
or
add
add
sbb
addb
adcb
and
add
and
add
add
and
add
or
subb
addb
cmpb
add
and
jnp
and
adcb
add
push
add
add
subb
sub
and
lds
and
movl
add
and
mov
add
andb
orb
adcb
add
or
add
addb
orb
adcb
and
xor
and
add
or
add
and
orb
and
add
and
cmp
aaa
and
jl
es
and
sbbb
add
and
pop
add
es
add
or
add
or
add
jmp
add
sbbb
addb
add
inc
and
arpl
and
sub
or
cmpb
and
cmp
and
sbb
orb
es
add
addb
addb
and
jl
add
push
and
xchg
std
and
add
add
aaa
and
inc
aaa
and
lea
add
aaa
and
arpl
and
lea
and
addb
add
aaa
and
mov
add
add
orb
enter
inc
and
call
pushf
mov
pushf
push
pusha
lea
jmp
push
call
lea
je
pushf
call
mov
push
movl
push
push
pushl
ret
mov
pushf
pusha
mov
pushl
mov
pushf
lea
jmp
rcr
adc
movsbw
mov
test
pushf
add
not
dec
rol
xor
mov
not
setb
bswap
inc
push
ror
shl
rcr
pusha
bsr
add
bt
rcr
adc
mov
mov
test
cmc
add
movw
call
mov
pusha
movw
pushf
mov
push
mov
mov
mov
jmp
mov
movb
lea
jmp
call
pushl
mov
mov
jmp
sub
call
push
push
mov
pusha
mov
jmp
pushf
mov
mov
mov
call
jmp
cmc
adc
aaa
mov
pusha
shl
neg
mov
clc
sub
cmp
shl
jmp
push
call
pusha
mov
pushf
lea
jmp
jmp
clc
inc
lea
push
mov
mov
push
call
mov
add
mov
mov
sub
mov
mov
add
mov
mov
sub
mov
push
mov
sub
push
mov
sub
push
mov
push
mov
push
mov
add
call
push
mov
sub
push
mov
sub
push
mov
push
mov
push
mov
add
call
push
mov
sub
push
mov
sub
push
mov
push
mov
push
mov
add
call
push
mov
sub
push
mov
sub
push
mov
push
mov
push
mov
add
call
push
mov
sub
push
mov
sub
push
mov
push
mov
push
mov
add
call
push
mov
sub
push
mov
sub
push
mov
push
mov
push
mov
add
call
push
mov
sub
push
mov
sub
push
mov
push
mov
push
mov
add
call
push
mov
sub
push
mov
sub
push
mov
push
mov
push
mov
add
call
push
mov
sub
push
mov
sub
push
mov
push
mov
push
mov
add
call
movl
push
mov
push
push
mov
mov
push
call
push
push
push
mov
mov
push
call
push
push
mov
call
movl
movl
movl
movl
lea
call
movb
lea
call
movl
lea
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
nop
nop
push
mov
push
push
mov
push
push
push
mov
push
call
mov
test
jne
push
mov
call
mov
mov
push
push
push
push
call
pop
pop
pop
ret
xor
cmp
sete
push
lea
mov
call
xor
cmp
sete
push
lea
call
xor
cmp
sete
push
lea
call
xor
cmp
sete
push
lea
call
xor
cmp
sete
push
lea
call
xor
cmp
sete
push
lea
call
xor
cmp
sete
push
lea
call
xor
cmp
sete
push
lea
call
pop
pop
pop
ret
nop
nop
nop
push
call
xor
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
call
cmp
jne
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
sub
lea
push
call
mov
mov
push
lea
push
push
call
mov
lea
push
push
call
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
mov
movl
movl
movl
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
mov
mov
mov
lea
shr
lea
and
cmp
mov
jae
incl
mov
mov
shr
add
mov
mov
sub
cmp
jb
mov
push
lea
push
push
call
lea
push
push
call
mov
add
add
cmp
jae
mov
lea
push
push
call
add
add
add
cmp
jb
xor
jmp
xor
mov
sub
add
push
lea
push
push
call
add
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
push
mov
push
lea
push
push
call
mov
add
shr
and
mov
cmp
jb
mov
sub
push
push
push
call
lea
push
push
push
call
mov
push
push
push
call
push
push
push
call
add
pop
pop
add
ret
nop
nop
sub
mov
push
push
push
mov
push
push
lea
mov
mov
mov
mov
push
push
mov
call
mov
mov
not
mov
and
and
or
mov
add
lea
mov
mov
shr
shl
or
add
mov
and
not
and
or
mov
add
lea
mov
shr
shl
or
add
mov
mov
not
and
and
or
mov
add
mov
lea
mov
shr
shl
or
add
mov
and
not
and
or
mov
add
lea
mov
shl
shr
or
mov
add
mov
mov
not
and
and
mov
or
add
mov
mov
lea
mov
shr
shl
or
add
mov
and
not
and
or
mov
add
lea
mov
shr
shl
or
add
mov
mov
not
and
and
or
mov
add
mov
lea
mov
shr
shl
or
add
mov
and
not
and
or
mov
add
lea
mov
shl
shr
or
mov
add
mov
mov
not
and
and
mov
or
add
mov
mov
lea
mov
shr
shl
or
add
mov
and
not
and
or
mov
add
lea
mov
shr
shl
or
add
mov
not
mov
and
and
or
mov
add
mov
lea
mov
shr
shl
or
add
mov
and
not
and
or
mov
add
lea
mov
shl
shr
or
mov
add
mov
mov
not
and
and
mov
or
add
mov
mov
lea
mov
shr
shl
or
add
mov
and
not
and
or
mov
add
lea
mov
shr
shl
or
add
mov
mov
not
and
and
or
mov
add
mov
lea
mov
shr
shl
or
add
mov
and
not
mov
and
or
mov
add
mov
lea
mov
shl
shr
or
mov
add
mov
and
mov
and
mov
or
add
mov
lea
mov
mov
shr
shl
or
mov
add
and
and
or
mov
add
mov
not
lea
and
mov
shr
shl
or
add
mov
and
mov
or
add
lea
mov
shr
shl
or
mov
add
not
mov
and
and
or
mov
add
mov
lea
mov
shl
shr
or
mov
add
mov
mov
mov
not
and
and
mov
or
add
mov
lea
mov
shr
shl
or
mov
add
not
mov
and
and
or
mov
add
mov
not
lea
and
mov
shr
shl
or
add
mov
and
mov
or
add
lea
mov
shr
shl
or
mov
add
not
mov
and
and
or
mov
add
mov
lea
mov
shl
shr
or
mov
add
mov
mov
mov
not
and
and
mov
or
add
mov
mov
lea
mov
shr
shl
or
mov
add
not
and
and
or
mov
add
mov
not
lea
and
mov
shr
shl
or
add
mov
and
mov
or
add
lea
mov
shr
shl
or
mov
add
not
mov
and
and
or
mov
add
mov
lea
mov
shl
shr
or
mov
add
mov
mov
mov
not
and
and
mov
or
add
mov
mov
lea
mov
shr
shl
or
mov
add
not
and
and
or
mov
add
mov
not
lea
and
mov
shr
shl
or
add
mov
and
mov
or
add
lea
mov
shr
shl
or
mov
add
not
mov
and
and
or
mov
add
mov
lea
mov
shl
shr
or
add
mov
mov
xor
xor
add
mov
lea
mov
shr
shl
or
mov
add
xor
xor
add
mov
lea
mov
shr
shl
or
add
mov
xor
xor
add
mov
lea
mov
shr
shl
or
mov
add
xor
mov
xor
add
mov
lea
mov
shl
shr
or
mov
add
xor
add
mov
lea
mov
shr
shl
or
mov
add
xor
xor
add
mov
lea
mov
shr
shl
or
add
mov
xor
xor
add
lea
mov
shr
shl
or
mov
add
xor
mov
xor
add
lea
mov
shl
shr
or
mov
add
xor
add
mov
lea
mov
shr
shl
or
mov
add
xor
xor
add
mov
lea
mov
shr
shl
or
add
mov
xor
xor
add
lea
mov
shr
shl
or
mov
add
xor
mov
xor
add
lea
mov
shl
shr
or
mov
add
xor
add
lea
mov
shr
shl
or
mov
add
xor
xor
add
lea
mov
shr
shl
or
add
mov
xor
xor
add
lea
mov
shr
shl
or
mov
add
xor
xor
add
lea
mov
shl
shr
or
mov
add
not
or
xor
add
lea
mov
shr
shl
or
mov
add
not
or
xor
add
lea
mov
shr
shl
or
mov
add
not
or
xor
add
lea
mov
shr
shl
or
mov
add
not
or
xor
add
lea
mov
shl
shr
or
mov
add
not
or
xor
add
lea
mov
shr
shl
or
mov
add
not
or
xor
add
lea
mov
shr
shl
or
mov
add
not
or
xor
add
lea
mov
shr
shl
or
mov
add
not
or
xor
add
lea
mov
shl
shr
or
mov
add
not
or
xor
add
lea
mov
shr
shl
or
mov
add
not
or
xor
add
lea
mov
shr
shl
or
mov
add
not
or
xor
add
lea
mov
shr
shl
or
mov
add
not
or
xor
add
lea
mov
shl
shr
or
mov
add
not
or
xor
add
lea
mov
shr
shl
or
mov
add
not
or
xor
add
lea
mov
shr
shl
or
mov
add
not
or
push
xor
push
add
lea
mov
shr
shl
or
mov
add
not
or
xor
add
mov
add
lea
mov
add
mov
shl
shr
or
mov
add
mov
add
add
mov
lea
push
mov
mov
mov
call
add
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
mov
push
or
lea
sub
mov
add
mov
mov
shr
mov
mov
shr
mov
mov
shr
mov
add
lea
cmp
jb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
mov
lea
sub
xor
xor
mov
mov
mov
add
shl
or
xor
mov
add
shl
or
mov
lea
cmp
jb
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
test
jbe
mov
mov
sub
mov
mov
inc
dec
jne
pop
ret
nop
nop
mov
test
jbe
mov
push
mov
mov
mov
push
mov
mov
shl
mov
shr
rep
mov
and
rep
pop
pop
ret
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
mov
call
movl
lea
movb
mov
call
movl
lea
movb
mov
call
movl
lea
movb
mov
call
mov
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
call
push
push
lea
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
mov
lea
push
push
call
mov
mov
mov
sub
mov
sub
push
push
mov
lea
sub
push
push
push
mov
call
mov
mov
mov
sub
push
push
mov
lea
sub
push
push
push
mov
call
mov
mov
mov
sub
push
push
mov
lea
sub
push
push
push
mov
call
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
push
push
push
push
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
mov
push
push
push
push
call
push
push
mov
call
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
cmp
jne
mov
mov
call
mov
mov
push
push
push
push
call
pop
pop
pop
ret
xor
lea
test
sete
push
mov
call
xor
cmp
sete
push
lea
call
xor
cmp
sete
push
lea
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
sub
push
mov
push
mov
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
push
push
push
push
call
xor
mov
mov
movl
mov
mov
mov
mov
cmp
je
push
push
mov
cmp
jne
mov
jmp
test
jl
cmp
jg
test
lea
jne
mov
lea
push
push
push
call
mov
add
lea
lea
push
push
push
push
push
push
push
mov
call
mov
lea
push
push
push
call
mov
add
lea
push
push
push
mov
call
mov
lea
push
push
push
mov
call
mov
cltd
and
add
sar
push
mov
cltd
and
add
lea
sar
push
push
push
call
mov
add
lea
push
push
push
mov
call
mov
lea
push
push
push
call
mov
add
push
push
push
mov
call
mov
lea
push
push
push
call
mov
add
push
push
push
mov
call
mov
lea
push
push
push
call
mov
add
push
push
push
jmp
cmp
jne
mov
lea
push
push
push
call
mov
add
lea
push
push
push
push
push
push
push
mov
call
mov
lea
push
push
push
mov
call
mov
lea
cltd
and
add
sar
push
mov
cltd
and
add
sar
push
push
push
call
add
lea
push
push
jmp
cmp
jne
mov
lea
push
push
push
call
mov
add
lea
lea
push
push
push
push
push
push
push
mov
call
mov
lea
push
push
push
call
mov
add
lea
push
push
push
mov
call
mov
lea
push
push
push
mov
call
mov
cltd
and
add
sar
push
mov
cltd
and
add
lea
sar
push
push
push
call
mov
add
lea
push
push
push
mov
call
mov
lea
push
push
push
call
mov
add
push
push
push
mov
call
mov
lea
push
push
push
call
mov
add
push
push
push
mov
call
mov
lea
push
push
push
call
mov
add
push
push
push
mov
call
mov
lea
push
push
push
call
mov
add
lea
push
push
push
mov
call
mov
test
mov
jne
mov
push
push
mov
push
mov
call
incl
mov
add
cmp
jne
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
push
push
push
mov
push
push
mov
call
lea
xor
mov
mov
call
movl
mov
lea
mov
mov
push
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
lea
push
push
mov
call
mov
mov
call
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
lea
mov
call
mov
mov
call
push
mov
call
push
push
mov
call
mov
push
push
push
call
mov
push
push
push
call
add
mov
call
push
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
call
push
mov
call
mov
lea
jmp
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
call
lea
mov
push
call
push
lea
movl
call
lea
movl
call
mov
lea
push
push
push
mov
call
mov
lea
mov
mov
add
push
push
push
mov
call
mov
push
mov
mov
call
mov
mov
mov
mov
push
push
lea
push
push
movl
call
add
lea
mov
mov
push
call
call
push
lea
push
push
call
add
lea
push
mov
call
mov
mov
lea
push
push
push
push
call
lea
call
lea
push
push
mov
lea
push
push
call
add
push
push
push
call
mov
lea
push
lea
push
push
push
call
add
push
push
push
call
lea
movl
call
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
mov
push
push
mov
lea
mov
call
mov
mov
call
push
mov
call
mov
mov
push
push
push
push
call
add
mov
call
pop
pop
ret
nop
nop
nop
sub
push
push
mov
push
call
mov
mov
push
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
push
push
push
lea
push
mov
push
call
push
lea
movl
call
lea
movl
call
mov
push
push
push
push
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
mov
push
push
push
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
mov
mov
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
sub
mov
mov
push
push
mov
lea
push
push
mov
push
push
push
movl
call
lea
mov
push
mov
call
mov
pop
add
ret
nop
nop
push
mov
push
call
mov
test
je
mov
jmp
xor
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
mov
push
push
mov
push
call
movl
mov
pop
ret
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
mov
call
movl
lea
movb
mov
call
movl
lea
movb
mov
call
movl
lea
movb
mov
call
movl
lea
movb
mov
call
movl
lea
movb
mov
call
mov
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
call
push
push
lea
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
mov
lea
push
push
call
mov
mov
mov
sub
mov
sub
push
push
mov
lea
sub
push
push
push
mov
call
mov
mov
mov
sub
push
push
mov
lea
sub
push
push
push
mov
call
mov
mov
lea
push
mov
sub
push
mov
sub
push
push
push
mov
call
mov
mov
sub
push
push
mov
sub
lea
push
push
mov
push
call
mov
mov
sub
push
push
mov
sub
lea
push
push
mov
push
call
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
push
push
push
push
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
lea
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
lea
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
mov
push
push
push
push
call
push
push
mov
call
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
push
push
call
mov
xor
test
sete
push
lea
call
xor
cmp
sete
push
lea
call
xor
cmp
sete
push
lea
call
xor
cmp
sete
push
lea
call
xor
cmp
sete
push
lea
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
call
mov
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
lea
push
push
mov
call
mov
push
push
mov
call
mov
lea
push
push
mov
call
mov
lea
push
push
mov
call
mov
push
push
mov
call
mov
push
push
mov
call
mov
lea
push
push
mov
call
pop
pop
ret
nop
sub
push
mov
push
push
mov
push
push
push
push
call
mov
mov
mov
imul
test
mov
jle
mov
lea
lea
push
push
push
mov
call
test
movl
jle
lea
push
mov
mov
mov
test
jbe
cmp
jae
mov
xor
lea
movl
rep
lea
mov
push
push
call
mov
test
je
mov
lea
push
inc
push
push
call
add
mov
push
push
push
push
push
push
push
call
lea
push
push
push
call
add
mov
push
push
push
call
mov
lea
push
push
push
call
add
lea
mov
push
push
push
call
lea
push
push
push
mov
call
fildl
sub
lea
fmull
fstpl
push
push
call
add
lea
mov
push
push
push
call
mov
mov
imul
sar
mov
mov
shr
add
mov
push
imul
sar
mov
lea
shr
add
push
push
push
call
add
lea
mov
push
push
push
call
inc
mov
mov
mov
inc
add
cmp
mov
mov
jl
pop
push
push
push
push
push
push
push
mov
call
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
push
mov
push
push
call
mov
xor
call
mov
mov
cmp
je
add
mov
lea
push
push
push
call
add
mov
push
push
push
push
push
push
push
call
lea
mov
push
push
push
call
mov
lea
cltd
and
add
sar
push
mov
cltd
and
add
sar
push
push
push
call
add
lea
mov
push
push
push
call
mov
lea
push
push
push
call
add
mov
push
push
push
call
mov
add
inc
cmp
jne
pop
pop
pop
add
ret
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
mov
push
push
push
mov
mov
push
call
cmp
jne
lea
jmp
cmp
jne
lea
mov
push
push
push
push
call
test
jg
push
push
push
mov
call
pop
pop
pop
add
ret
push
push
push
mov
call
cmp
je
mov
push
push
push
push
push
call
xor
mov
test
jle
mov
push
push
push
push
call
test
je
mov
xor
lea
movb
rep
lea
push
push
push
push
mov
stos
call
mov
test
je
lea
lea
push
push
push
call
mov
add
push
push
mov
call
mov
mov
inc
cmp
jl
push
call
mov
mov
call
pop
pop
pop
pop
add
ret
push
push
push
mov
call
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
push
mov
push
mov
mov
push
push
push
push
call
test
jne
lea
jmp
cmp
jne
lea
jmp
cmp
jne
lea
mov
push
push
push
push
call
mov
test
jge
push
push
push
mov
call
cmp
jne
mov
xor
push
push
push
push
call
test
jle
mov
xor
lea
movb
rep
stos
lea
push
push
push
push
mov
call
mov
test
je
lea
lea
push
push
push
call
mov
add
mov
push
push
call
mov
push
push
push
push
inc
call
cmp
jl
jmp
mov
xor
lea
movb
rep
lea
push
push
push
push
mov
stos
call
mov
test
jne
push
push
push
jmp
push
lea
push
push
mov
call
push
lea
push
push
movl
call
mov
push
push
push
mov
movb
call
cmp
lea
sete
movb
call
lea
movl
call
test
je
lea
lea
push
push
push
call
mov
add
push
push
mov
call
jmp
push
push
push
mov
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
push
mov
push
mov
mov
push
push
push
push
call
test
jne
lea
jmp
cmp
jne
lea
jmp
cmp
jne
lea
mov
push
push
push
push
call
mov
test
jge
push
push
push
jmp
mov
xor
lea
movb
rep
lea
push
push
push
push
mov
stos
call
mov
test
jne
push
push
push
jmp
push
lea
push
push
mov
call
push
lea
push
push
movl
call
mov
push
push
push
mov
movb
call
cmp
lea
sete
movb
call
lea
movl
call
test
je
lea
lea
push
push
push
call
mov
add
push
push
mov
call
pop
pop
pop
pop
mov
mov
add
ret
push
push
push
mov
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
lea
movl
call
mov
movl
movb
mov
pop
mov
add
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
call
mov
push
push
push
push
call
push
push
lea
push
push
push
mov
call
push
push
push
push
push
mov
call
movl
movl
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movb
ret
nop
nop
nop
nop
nop
nop
nop
nop
movb
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
push
call
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
push
push
push
push
push
lea
call
lea
movl
call
cmp
jne
lea
lea
push
call
mov
add
push
push
push
movb
call
add
lea
movb
call
lea
movl
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
mov
push
mov
push
push
mov
lea
movb
lea
cmp
jle
mov
push
imul
mov
shr
add
mov
call
add
xor
test
jle
push
mov
xor
mov
push
push
push
call
add
inc
add
cmp
jl
mov
pop
pop
pop
pop
ret
pop
mov
pop
pop
ret
nop
sub
push
mov
push
mov
test
je
mov
test
jle
mov
xor
xor
mov
add
cmp
ja
xor
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
mov
lea
push
push
lea
push
mov
movb
call
add
mov
test
jne
lea
push
push
push
push
lea
push
push
push
mov
call
mov
push
push
push
push
call
mov
mov
push
push
lea
push
push
call
add
test
je
push
mov
call
lea
push
mov
call
lea
mov
push
push
push
call
pop
pop
pop
pop
add
ret
mov
scas
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
push
add
add
push
push
push
push
add
add
pop
push
or
or
push
push
push
push
push
push
push
push
push
push
or
push
or
push
push
push
push
push
push
push
push
push
push
push
movhps
push
adc
push
push
adc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
adc
push
push
push
adc
push
push
push
push
push
push
push
push
push
push
adc
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
mov
test
jle
mov
cmpb
je
push
mov
push
push
lea
push
lea
push
push
mov
call
mov
or
xor
add
repnz
not
sub
lea
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
push
push
and
push
push
rep
lea
lea
push
push
push
mov
call
mov
push
push
push
push
call
mov
mov
push
push
lea
push
push
call
add
lea
mov
push
push
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
mov
call
push
mov
push
push
mov
push
push
call
mov
test
jl
push
push
mov
xor
lea
movb
rep
lea
push
stos
push
push
push
lea
stos
call
lea
or
xor
movb
repnz
not
dec
mov
mul
mov
xor
lea
mov
rep
stos
shr
xor
test
stos
jle
lea
lea
push
push
push
call
mov
add
mov
inc
add
cmp
jl
lea
push
push
mov
call
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
mov
sub
push
push
push
call
mov
add
test
jne
push
push
push
call
xor
pop
mov
mov
add
ret
push
push
push
call
mov
call
mov
movl
mov
call
mov
mov
push
push
lea
push
push
mov
movl
mov
movl
call
mov
mov
push
push
push
push
call
mov
xor
test
jle
test
jle
movsbl
push
push
push
call
add
mov
lea
push
push
push
push
call
mov
push
push
push
call
add
inc
cmp
jl
push
push
call
mov
add
xor
test
jle
xor
test
jle
test
jle
movsbl
push
push
push
call
add
mov
push
lea
push
push
call
mov
push
push
push
call
add
lea
call
inc
cmp
jl
push
push
call
mov
add
inc
cmp
jl
push
call
add
movl
call
mov
call
mov
pop
pop
pop
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
call
mov
jmp
nop
nop
nop
push
mov
call
mov
movl
mov
movb
mov
pop
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
push
mov
test
mov
jl
mov
mov
push
push
mov
push
push
call
cmp
jge
mov
mov
mov
mov
lea
push
push
movl
call
mov
lea
push
push
mov
push
push
call
push
lea
push
push
call
mov
push
lea
push
push
push
mov
call
mov
push
push
push
mov
push
call
push
call
test
je
mov
mov
push
push
push
push
call
mov
mov
push
call
mov
push
call
push
call
mov
call
lea
movl
call
pop
pop
mov
pop
mov
mov
add
ret
test
je
mov
push
mov
call
mov
pop
pop
xor
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
push
mov
lea
mov
push
push
call
mov
mov
push
push
call
push
call
cmp
je
push
mov
call
pop
ret
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
test
je
mov
push
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
cmp
mov
je
cmp
je
cmp
je
call
pop
ret
push
mov
call
push
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
mov
mov
test
jne
push
movb
call
mov
test
je
mov
mov
lea
movl
push
mov
call
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
push
push
push
mov
push
call
mov
mov
push
push
mov
push
push
call
lea
movl
call
mov
mov
push
push
push
lea
push
push
call
test
je
mov
push
push
push
lea
push
push
call
test
jne
mov
mov
call
pop
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
mov
call
mov
movl
movl
mov
pop
pop
mov
add
ret
push
push
mov
push
mov
mov
push
push
push
push
call
movb
movl
movl
call
mov
mov
push
mov
push
lea
push
mov
call
mov
push
push
push
push
call
pop
pop
pop
ret
nop
mov
push
push
push
mov
push
cmp
jae
pop
pop
pop
xor
pop
ret
mov
lea
push
push
movb
mov
push
push
call
mov
test
jge
mov
push
push
push
push
call
test
jle
mov
xor
push
push
push
push
call
mov
push
push
push
push
call
mov
cmp
jne
lea
pop
pop
pop
pop
ret
mov
call
pop
pop
pop
xor
pop
ret
cmp
jne
mov
mov
call
pop
pop
pop
xor
pop
ret
test
jne
mov
mov
call
pop
pop
pop
xor
pop
ret
pop
mov
pop
pop
pop
ret
nop
xor
mov
test
je
cmp
je
inc
cmp
jb
mov
cmp
lea
je
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
lea
push
push
push
push
push
push
call
mov
mov
add
mov
push
push
push
push
call
mov
test
jl
mov
lea
push
mov
lea
push
push
push
call
mov
push
push
push
push
call
pop
pop
pop
add
ret
mov
lea
push
push
push
push
call
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
push
mov
call
push
lea
call
mov
lea
push
xor
push
push
mov
call
lea
movb
call
mov
mov
mov
mov
push
push
push
push
movb
call
mov
test
jle
lea
lea
push
push
call
mov
mov
push
push
call
add
test
je
inc
cmp
jl
mov
push
push
call
add
lea
movb
call
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
mov
push
push
push
push
call
jmp
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
mov
cmp
jne
mov
push
push
push
push
call
jmp
inc
mov
push
push
push
push
call
cmp
jl
xor
mov
push
push
push
push
call
movb
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
cmp
mov
jge
lea
shl
cltd
idivl
mov
call
add
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
mov
push
push
push
mov
push
call
mov
dec
js
mov
lea
push
push
push
push
call
cmpb
jne
mov
push
push
push
push
call
dec
jns
movb
pop
pop
pop
add
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
call
mov
mov
call
push
push
mov
call
mov
call
push
mov
call
mov
mov
push
push
mov
push
push
call
lea
call
push
lea
movl
call
push
lea
push
push
movb
call
mov
push
push
lea
movb
call
lea
mov
movb
call
lea
movb
call
test
je
lea
call
mov
lea
push
lea
call
mov
mov
push
push
push
push
call
lea
call
test
jne
lea
call
lea
movl
call
mov
pop
pop
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movl
mov
test
push
je
mov
push
push
push
call
ret
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
mov
mov
push
push
push
push
call
test
jge
mov
push
push
push
push
call
mov
push
test
push
push
je
mov
push
jmp
mov
push
call
call
push
push
push
mov
call
mov
push
mov
call
pop
pop
ret
mov
push
test
mov
push
je
mov
push
jmp
mov
push
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
push
call
mov
push
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
mov
push
test
mov
je
mov
push
push
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
mov
call
mov
push
lea
push
push
lea
push
push
call
mov
add
test
je
cmp
je
push
lea
push
push
mov
call
mov
push
push
call
add
test
jne
mov
mov
test
je
mov
jmp
xor
lea
call
test
pop
je
mov
mov
mov
call
mov
push
mov
call
lea
push
mov
call
mov
lea
mov
push
movl
call
mov
lea
mov
push
movb
call
mov
lea
push
mov
push
mov
push
push
push
movb
call
add
lea
movb
call
lea
movb
call
movl
lea
jmp
mov
test
je
lea
push
push
push
call
add
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
mov
test
je
push
push
call
mov
mov
test
je
mov
mov
call
mov
push
mov
call
mov
push
push
push
call
mov
push
push
push
call
add
mov
call
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
movl
call
mov
lea
movl
call
lea
movb
call
movl
lea
call
mov
pop
pop
mov
add
ret
nop
push
push
mov
push
mov
sub
push
push
lea
call
push
push
lea
movl
push
call
mov
push
call
lea
mov
call
lea
movl
call
test
je
call
mov
push
lea
call
push
lea
push
push
movl
call
mov
push
push
push
call
lea
call
lea
movl
call
pop
mov
mov
add
ret
call
mov
push
push
push
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
je
push
call
test
je
mov
mov
push
mov
mov
or
xor
mov
repnz
not
mov
dec
mov
lea
push
push
push
push
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
push
push
push
call
mov
mov
cmp
jne
push
call
add
mov
test
movl
je
add
mov
push
call
jmp
xor
push
mov
movl
call
pop
pop
mov
mov
add
ret
mov
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
push
mov
push
call
mov
call
test
jne
push
push
push
mov
call
jmp
push
push
push
push
push
push
lea
call
lea
movl
call
lea
lea
push
call
mov
xor
mov
lea
test
sete
mov
call
test
je
lea
movl
call
lea
movl
call
jmp
push
mov
call
mov
mov
mov
push
push
push
push
call
mov
mov
call
lea
lea
push
call
mov
push
push
call
mov
add
lea
mov
call
test
jne
push
push
push
mov
call
lea
movl
call
lea
movl
call
jmp
mov
push
push
push
push
push
call
mov
lea
push
push
push
call
add
test
je
lea
push
push
call
add
test
je
movb
mov
lea
push
push
push
push
call
mov
mov
lea
xor
repz
jne
mov
lea
push
push
mov
push
push
jmp
push
call
add
mov
push
push
call
mov
call
lea
movl
call
lea
movl
call
pop
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
push
mov
push
call
mov
call
test
jne
push
push
push
mov
call
jmp
push
mov
call
mov
mov
mov
push
push
push
push
call
push
mov
call
mov
push
push
push
mov
push
call
test
jl
mov
mov
lea
movl
push
push
mov
call
mov
mov
mov
lea
push
push
push
push
movb
call
mov
add
mov
call
mov
push
push
call
add
mov
test
jne
push
push
push
mov
call
mov
push
push
push
push
call
mov
push
push
push
push
call
lea
movb
call
lea
movl
call
jmp
mov
push
push
push
push
push
call
mov
lea
push
push
push
call
add
test
je
lea
push
push
call
add
test
je
movb
mov
lea
push
push
push
push
call
mov
mov
lea
xor
repz
jne
mov
lea
push
push
mov
push
push
jmp
push
call
add
mov
push
push
call
mov
call
lea
movb
call
lea
movl
call
pop
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
push
mov
push
call
mov
call
test
jne
push
push
push
mov
call
pop
pop
pop
mov
mov
add
ret
push
mov
call
mov
mov
push
push
mov
push
push
call
test
jl
mov
push
mov
lea
mov
push
push
movl
call
push
lea
call
lea
lea
push
mov
push
push
mov
call
push
lea
movb
call
lea
mov
call
lea
movb
call
mov
mov
mov
xor
push
push
push
push
movb
call
test
jle
lea
lea
mov
push
push
call
mov
mov
push
push
call
add
test
je
mov
push
push
push
push
inc
call
cmp
jl
jmp
mov
push
push
push
push
call
lea
movb
call
lea
movl
call
pop
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
call
mov
call
test
jne
push
push
push
jmp
mov
call
lea
mov
push
call
mov
mov
push
movl
call
lea
movl
call
push
push
push
mov
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
push
push
push
push
mov
push
push
mov
call
mov
lea
xor
mov
mov
mov
lea
mov
mov
lea
mov
or
push
movb
movl
mov
mov
mov
mov
mov
mov
call
push
mov
movl
mov
call
push
mov
mov
mov
call
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
mov
mov
call
mov
call
mov
pop
ret
mov
sub
push
push
push
mov
lea
xor
mov
call
mov
mov
call
push
mov
call
push
lea
push
push
call
lea
push
push
call
mov
add
test
je
push
lea
push
push
call
add
test
je
lea
push
push
call
add
test
je
movb
mov
lea
mov
push
push
push
inc
call
add
jmp
push
call
mov
add
push
push
push
push
call
push
mov
call
mov
call
pop
pop
pop
add
ret
nop
nop
mov
sub
push
push
push
mov
lea
xor
mov
call
mov
mov
call
push
mov
call
push
lea
push
push
call
lea
push
push
call
mov
add
test
je
push
lea
push
push
call
add
test
je
lea
push
push
call
add
test
je
movb
mov
lea
mov
push
push
push
inc
call
add
jmp
push
call
mov
add
push
push
push
push
call
push
mov
call
mov
call
pop
pop
pop
add
ret
nop
nop
push
mov
push
push
mov
lea
push
mov
call
mov
mov
call
push
mov
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
add
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
add
push
push
push
call
mov
push
push
push
call
mov
add
cmp
jge
mov
lea
shl
push
push
push
push
call
add
jmp
mov
push
push
push
call
add
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
add
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
add
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
add
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
add
push
push
push
call
mov
mov
mov
push
push
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
add
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
mov
call
mov
add
test
jle
add
mov
mov
sub
fildl
mov
fmull
fstpl
push
push
push
call
add
mov
mov
push
push
push
inc
call
mov
add
test
jle
add
mov
mov
sub
fildl
mov
inc
fmull
fstpl
push
push
push
call
add
mov
mov
push
push
push
inc
call
mov
add
test
jle
add
mov
mov
sub
fildl
mov
inc
fmull
fstpl
push
push
push
call
add
mov
mov
push
push
push
inc
call
mov
add
test
jle
add
mov
mov
sub
fildl
mov
inc
fmull
fstpl
push
push
push
call
add
mov
mov
push
push
push
inc
call
mov
add
test
jle
add
mov
mov
sub
fildl
mov
inc
fmull
fstpl
push
push
push
call
add
mov
mov
push
push
push
inc
call
mov
mov
push
push
push
inc
call
mov
mov
push
push
push
inc
call
mov
mov
push
push
push
inc
call
mov
mov
push
push
push
inc
call
mov
mov
push
push
push
inc
call
mov
add
mov
inc
push
push
push
call
mov
mov
push
push
push
inc
call
mov
mov
push
push
push
inc
call
mov
mov
push
push
push
inc
call
mov
mov
push
push
push
inc
call
mov
mov
inc
push
push
push
call
mov
add
push
push
push
call
mov
lea
push
push
push
call
add
mov
push
call
mov
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
mov
lea
jmp
nop
sub
push
push
mov
push
call
mov
push
lea
push
push
push
call
mov
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
push
push
push
call
add
push
mov
call
push
mov
call
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
mov
push
push
push
push
call
mov
push
push
push
call
add
pop
pop
add
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
push
push
mov
push
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
mov
push
push
lea
push
push
call
push
lea
movl
call
lea
movl
call
push
push
push
lea
push
push
call
push
lea
movl
call
lea
movl
call
push
push
push
push
call
push
push
push
lea
push
push
mov
call
lea
push
mov
movl
call
lea
movl
call
mov
push
push
push
call
add
mov
push
push
call
push
mov
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
je
mov
push
push
push
call
add
pop
ret
push
push
call
add
pop
ret
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
push
push
mov
push
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
call
push
mov
call
mov
mov
push
push
push
push
call
push
mov
call
mov
test
je
push
push
push
mov
call
mov
push
push
push
push
call
push
push
mov
call
mov
call
mov
mov
call
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
lea
push
mov
call
mov
mov
call
push
mov
call
push
push
mov
xor
call
mov
call
cmp
je
mov
test
je
mov
push
push
push
mov
call
add
jmp
mov
push
push
call
add
mov
mov
push
push
push
inc
call
mov
mov
push
push
push
inc
call
mov
mov
push
push
push
inc
call
mov
mov
push
push
push
inc
call
mov
mov
push
push
push
inc
call
mov
mov
push
push
push
inc
call
mov
add
mov
inc
push
push
push
call
mov
add
test
je
mov
mov
push
push
push
inc
call
add
mov
test
je
mov
mov
push
push
push
inc
call
add
mov
test
je
mov
mov
push
mov
mov
push
push
push
push
inc
call
add
mov
mov
push
push
push
inc
call
mov
add
test
je
mov
mov
push
push
push
inc
call
add
mov
mov
push
push
push
inc
call
mov
mov
push
push
push
inc
call
mov
mov
push
push
push
inc
call
mov
mov
push
push
push
inc
call
mov
mov
push
push
push
inc
call
mov
mov
mov
inc
inc
push
push
push
push
call
mov
add
mov
inc
push
push
push
call
mov
mov
push
push
push
inc
call
mov
add
test
je
mov
push
push
push
call
add
jmp
mov
mov
inc
push
push
push
push
call
add
push
push
mov
call
push
mov
call
mov
mov
mov
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
mov
lea
jmp
nop
push
push
mov
push
mov
push
mov
push
push
push
push
mov
mov
push
movl
call
mov
lea
push
push
mov
call
mov
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
jne
lea
movl
call
mov
jmp
mov
mov
push
push
call
add
test
jne
lea
movl
call
mov
jmp
push
mov
call
mov
lea
push
push
mov
call
mov
push
push
call
add
test
je
mov
push
push
call
add
test
jne
lea
movl
call
mov
jmp
mov
push
push
call
add
test
jne
lea
movl
call
mov
jmp
push
mov
call
mov
lea
push
push
mov
call
mov
push
push
call
add
test
je
mov
push
push
call
add
test
jne
lea
movl
call
mov
jmp
mov
push
push
call
add
test
jne
lea
movl
call
mov
jmp
lea
movl
call
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
push
call
mov
push
push
push
push
call
xor
cmp
sete
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
call
mov
test
jne
movl
mov
push
lea
push
push
push
call
mov
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
push
push
mov
push
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
mov
mov
test
jne
movl
push
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
push
push
mov
push
call
xor
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
movl
mov
pop
ret
nop
nop
push
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
mov
push
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
mov
mov
call
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
call
mov
push
lea
push
push
push
call
mov
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
mov
push
lea
push
push
push
call
add
push
push
push
call
pop
pop
add
ret
nop
push
push
mov
push
push
push
mov
push
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
lea
mov
call
mov
mov
call
push
mov
call
push
mov
call
mov
mov
add
push
push
push
push
call
add
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
pop
test
je
push
mov
call
ret
push
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
mov
lea
call
mov
mov
lea
xor
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
movb
mov
mov
call
mov
movb
cmp
jne
push
call
mov
movl
mov
mov
mov
add
mov
mov
push
inc
mov
mov
call
mov
mov
mov
mov
mov
mov
add
lea
mov
movb
call
mov
movl
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
push
push
mov
push
mov
mov
mov
cmp
movl
je
push
mov
call
add
cmp
jne
mov
push
call
xor
add
mov
mov
mov
mov
mov
movb
cmp
je
push
mov
call
add
cmp
jne
mov
push
call
mov
mov
mov
mov
mov
add
cmp
mov
je
push
mov
call
add
cmp
jne
mov
push
call
mov
mov
mov
mov
mov
add
cmp
movl
je
push
mov
call
add
cmp
jne
mov
push
call
mov
add
mov
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
push
mov
push
mov
movl
lea
movl
call
mov
mov
xor
cmp
movb
je
push
mov
call
add
cmp
jne
mov
push
call
mov
mov
mov
mov
mov
add
cmp
movb
je
push
mov
call
add
cmp
jne
mov
push
call
mov
mov
mov
mov
mov
add
cmp
movb
je
push
mov
call
add
cmp
jne
mov
push
call
mov
mov
mov
mov
mov
add
cmp
movb
je
push
mov
call
add
cmp
jne
mov
push
call
mov
mov
mov
mov
mov
add
cmp
movb
je
push
mov
call
add
cmp
jne
mov
push
call
lea
add
mov
mov
mov
mov
mov
push
push
mov
movb
call
mov
push
call
mov
mov
mov
mov
mov
lea
add
mov
movb
push
push
call
mov
push
call
add
lea
mov
mov
mov
mov
call
add
mov
lea
movl
call
lea
movb
call
lea
movb
call
mov
movl
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
push
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
mov
push
push
movl
mov
push
lea
mov
push
push
mov
call
add
lea
push
call
lea
movb
call
push
lea
push
push
lea
movb
call
test
jne
lea
push
push
push
call
add
test
jne
mov
lea
push
mov
call
mov
lea
movb
call
lea
mov
call
lea
movb
call
mov
jmp
mov
cmp
lea
jne
lea
push
push
push
push
push
lea
call
mov
movb
mov
call
mov
lea
lea
push
call
mov
push
push
lea
call
push
lea
movb
call
lea
call
lea
call
mov
lea
push
mov
call
lea
mov
movb
call
lea
movb
call
lea
mov
call
lea
movb
call
mov
pop
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
lea
push
push
movl
call
add
lea
push
call
mov
lea
mov
call
push
lea
push
push
lea
movb
call
test
jne
lea
push
push
push
call
add
test
jne
mov
push
mov
call
mov
jmp
mov
cmp
lea
jne
lea
push
push
push
push
lea
call
mov
mov
mov
lea
lea
push
movb
call
test
je
mov
lea
push
lea
call
mov
push
push
call
add
test
jne
lea
lea
push
call
test
jne
mov
push
mov
call
lea
mov
movb
call
lea
movb
call
lea
movb
call
lea
mov
call
lea
movb
call
mov
mov
pop
pop
mov
add
ret
mov
lea
push
mov
call
jmp
nop
push
push
mov
push
mov
sub
push
push
lea
push
mov
push
call
add
lea
push
call
lea
movl
call
push
lea
push
push
lea
movb
call
test
jne
lea
push
push
push
call
add
test
jne
lea
mov
call
lea
movl
call
pop
mov
mov
add
ret
mov
cmp
lea
jne
lea
push
push
push
push
push
lea
call
mov
mov
mov
mov
add
push
push
push
movb
call
add
mov
mov
mov
push
push
call
lea
mov
push
lea
call
test
je
push
push
mov
mov
test
je
cmpb
je
mov
push
lea
mov
call
mov
push
lea
movb
mov
call
lea
movb
push
lea
call
mov
xor
lea
movb
rep
stos
stos
mov
xor
lea
movb
rep
stos
stos
mov
xor
lea
movb
rep
stos
stos
lea
lea
push
lea
push
lea
push
mov
lea
push
push
push
push
movb
call
lea
or
xor
add
repnz
not
dec
push
mov
lea
push
call
test
je
mov
mov
mov
lea
shr
rep
mov
and
rep
mov
mov
movb
lea
or
xor
push
repnz
not
dec
mov
lea
push
call
test
je
mov
mov
mov
lea
shr
rep
mov
and
rep
mov
mov
movb
lea
or
xor
push
repnz
not
dec
mov
lea
push
call
test
je
mov
mov
mov
lea
shr
rep
mov
and
rep
mov
mov
movb
mov
mov
mov
shl
mov
lea
push
push
shl
push
mov
mov
call
push
lea
movb
call
push
lea
movb
call
mov
xor
cmp
movb
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
lea
lea
push
call
test
jne
pop
pop
lea
call
lea
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
pop
mov
add
ret
push
push
mov
xor
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
mov
mov
mov
pop
pop
ret
push
call
add
mov
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
mov
cmp
je
mov
mov
test
jne
mov
push
push
call
add
test
je
mov
test
jne
mov
push
push
call
add
test
jne
mov
add
cmp
jne
pop
pop
xor
pop
ret
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
lea
push
mov
push
call
add
lea
push
call
xor
lea
mov
call
push
lea
push
push
lea
movb
call
test
jne
lea
push
push
push
call
add
test
jne
lea
mov
call
lea
movl
call
pop
pop
mov
mov
add
ret
mov
cmp
lea
jne
lea
push
push
push
push
push
lea
call
mov
mov
mov
mov
add
push
push
push
movb
call
add
mov
mov
mov
push
push
call
lea
mov
push
lea
call
test
je
push
mov
cmp
je
cmpb
je
mov
push
lea
mov
call
mov
push
lea
movb
mov
call
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
push
lea
push
lea
push
lea
push
mov
lea
push
push
push
push
movb
movb
call
lea
or
xor
add
repnz
not
dec
push
mov
lea
push
call
test
je
mov
mov
mov
lea
shr
rep
mov
and
rep
mov
mov
xor
movb
lea
or
xor
push
repnz
not
dec
mov
lea
push
call
test
je
mov
mov
mov
lea
shr
rep
mov
and
rep
mov
mov
xor
movb
mov
lea
push
push
push
mov
call
mov
movb
cmp
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
cmp
mov
mov
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
lea
lea
push
call
test
jne
pop
lea
call
lea
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
push
push
mov
xor
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
mov
mov
mov
pop
pop
ret
push
call
add
mov
mov
mov
pop
pop
ret
nop
nop
nop
mov
mov
cmp
je
mov
cmp
je
add
cmp
jne
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
lea
push
mov
push
call
add
lea
push
call
lea
movl
call
push
lea
push
push
lea
movb
call
test
jne
lea
push
push
push
call
add
test
jne
lea
mov
call
lea
movl
call
pop
mov
mov
add
ret
mov
cmp
lea
jne
lea
push
push
push
push
push
lea
call
mov
mov
mov
mov
add
push
push
push
movb
call
add
mov
mov
mov
push
push
call
lea
mov
push
lea
call
test
je
push
push
mov
mov
test
je
cmpb
je
mov
push
lea
mov
call
mov
push
lea
movb
mov
call
lea
movb
push
lea
call
xor
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
lea
push
push
push
push
movb
movb
call
lea
or
xor
add
repnz
not
dec
push
mov
lea
push
call
test
je
mov
mov
mov
lea
shr
rep
mov
and
rep
mov
mov
movb
lea
or
xor
push
repnz
not
dec
mov
lea
push
call
test
je
mov
mov
mov
lea
shr
rep
mov
and
rep
mov
mov
movb
lea
or
xor
push
repnz
not
dec
mov
lea
push
call
test
je
mov
mov
mov
lea
shr
rep
mov
and
rep
mov
mov
movb
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
mov
call
push
lea
movb
call
push
lea
movb
call
mov
xor
cmp
movb
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
lea
lea
push
call
test
jne
pop
pop
lea
call
lea
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
mov
mov
mov
pop
pop
ret
push
call
add
mov
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
mov
push
cmp
push
mov
mov
je
add
mov
or
mov
xor
repnz
mov
not
dec
mov
mov
cmp
jb
mov
mov
mov
xor
repz
je
sbb
sbb
test
jne
cmp
jb
cmp
setne
test
jne
mov
or
mov
xor
repnz
mov
not
dec
mov
mov
cmp
jb
mov
mov
mov
xor
repz
je
sbb
sbb
test
jne
cmp
jb
cmp
setne
test
je
mov
mov
add
add
cmp
mov
jne
pop
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
lea
call
lea
movl
push
push
push
call
add
test
jne
lea
movl
call
pop
mov
mov
add
ret
push
push
push
lea
push
push
lea
call
mov
mov
mov
mov
add
push
push
push
movb
call
add
mov
mov
mov
push
push
call
lea
lea
push
mov
call
test
je
push
push
mov
mov
test
je
cmpb
je
mov
push
mov
lea
call
mov
push
lea
movb
mov
call
lea
lea
push
movb
call
lea
movb
push
lea
call
xor
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
push
lea
push
lea
push
lea
push
mov
lea
push
push
push
push
movb
movb
call
lea
or
xor
add
repnz
not
dec
mov
push
push
lea
call
test
je
mov
mov
mov
lea
shr
rep
mov
push
and
rep
lea
call
lea
or
xor
push
repnz
not
dec
mov
lea
push
call
test
je
mov
mov
mov
lea
shr
rep
mov
and
rep
mov
mov
movb
lea
or
xor
push
repnz
not
dec
mov
lea
push
call
test
je
mov
mov
mov
lea
shr
rep
mov
and
rep
mov
mov
movb
lea
or
xor
push
repnz
not
dec
mov
lea
push
call
test
je
mov
mov
mov
lea
shr
rep
mov
and
rep
mov
mov
movb
mov
lea
push
push
push
mov
call
push
lea
movb
call
push
lea
movb
call
push
lea
movb
call
push
lea
movb
call
lea
lea
push
call
test
jne
pop
pop
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
pop
mov
add
ret
push
push
mov
xor
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
mov
mov
mov
pop
pop
ret
push
call
add
mov
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
mov
push
cmp
push
mov
mov
je
add
mov
or
mov
xor
repnz
mov
not
dec
mov
mov
cmp
jb
mov
mov
mov
xor
repz
je
sbb
sbb
test
jne
cmp
jb
cmp
setne
test
je
mov
mov
add
add
cmp
mov
jne
pop
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
lea
call
lea
xor
push
push
push
mov
call
add
test
je
push
push
lea
push
push
lea
call
mov
mov
mov
mov
add
push
push
mov
movb
mov
call
lea
lea
push
call
test
je
push
push
mov
cmp
je
cmpb
je
mov
push
mov
lea
call
lea
lea
push
movb
call
lea
lea
push
movb
call
xor
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
push
lea
push
lea
push
lea
push
lea
push
mov
lea
push
push
push
push
movb
mov
mov
mov
mov
mov
call
lea
or
xor
add
repnz
not
dec
push
mov
lea
push
call
test
je
mov
mov
mov
lea
shr
rep
mov
push
and
rep
lea
call
mov
cmp
je
mov
push
mov
lea
call
lea
or
xor
lea
repnz
not
dec
push
push
lea
call
mov
lea
push
push
push
lea
movb
call
push
lea
movb
call
mov
lea
push
push
push
lea
call
cmp
je
mov
push
mov
lea
call
lea
or
xor
push
repnz
not
dec
mov
lea
push
call
test
je
mov
mov
mov
lea
shr
rep
mov
push
and
rep
lea
call
mov
mov
lea
push
push
push
lea
movb
call
push
lea
movb
call
mov
lea
push
push
push
lea
call
mov
lea
push
push
push
mov
call
mov
mov
push
push
lea
movb
call
mov
push
call
add
lea
mov
mov
mov
movb
call
push
lea
movb
call
lea
lea
push
call
test
jne
pop
pop
lea
movb
call
lea
mov
call
lea
movl
call
mov
pop
pop
mov
add
ret
nop
push
push
mov
push
mov
sub
push
push
push
mov
push
mov
mov
xor
push
mov
mov
call
mov
mov
mov
mov
mov
add
cmp
je
push
mov
call
add
cmp
jne
mov
push
call
mov
mov
mov
mov
add
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
mov
pop
pop
pop
pop
mov
add
ret
sub
push
push
mov
mov
push
cmp
push
mov
mov
je
add
mov
or
mov
xor
repnz
mov
not
dec
mov
mov
cmp
jb
mov
mov
mov
xor
repz
je
sbb
sbb
test
jne
cmp
jb
cmp
setne
test
je
mov
mov
add
add
cmp
mov
jne
pop
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
push
push
mov
push
mov
sub
push
push
mov
push
lea
call
lea
xor
push
push
push
mov
call
add
test
je
push
push
lea
push
push
lea
call
mov
mov
mov
add
push
lea
push
mov
movb
mov
call
mov
lea
push
push
mov
call
lea
lea
push
call
test
je
push
push
mov
cmp
je
cmpb
je
mov
xor
lea
movb
rep
stos
lea
stos
push
lea
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
push
call
lea
add
test
je
mov
push
lea
mov
call
mov
mov
mov
mov
mov
xor
movb
mov
lea
jmp
xor
mov
test
je
mov
push
lea
mov
call
mov
or
xor
push
repnz
not
dec
mov
lea
push
call
test
je
mov
mov
mov
mov
shr
rep
mov
push
and
rep
lea
call
mov
mov
lea
push
push
push
lea
movb
call
push
lea
movb
call
inc
add
cmp
mov
jl
jmp
lea
or
push
lea
xor
mov
repnz
not
dec
mov
lea
push
call
test
je
mov
mov
mov
push
shr
rep
mov
and
rep
lea
call
xor
mov
mov
mov
mov
mov
lea
lea
push
push
lea
movb
call
mov
push
lea
movb
push
call
mov
mov
lea
mov
lea
push
push
lea
mov
call
mov
lea
movb
mov
mov
call
lea
movb
call
add
lea
cmp
je
mov
call
lea
mov
call
cmp
ja
mov
mov
mov
push
push
push
call
mov
add
push
push
mov
call
lea
call
mov
shl
add
mov
jmp
mov
call
lea
mov
call
cmp
ja
mov
mov
call
mov
mov
mov
push
shl
add
push
push
call
mov
mov
add
push
push
push
mov
call
lea
call
mov
shl
add
mov
jmp
mov
mov
push
push
mov
call
mov
push
call
add
lea
call
test
jge
xor
shl
push
call
add
mov
mov
mov
push
mov
push
push
call
mov
mov
lea
movb
call
push
lea
movb
call
xor
lea
push
lea
call
test
jne
pop
pop
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
push
push
mov
push
mov
sub
mov
mov
push
push
push
mov
push
mov
mov
or
xor
xor
repnz
not
dec
mov
push
push
lea
mov
mov
call
lea
lea
lea
push
push
mov
mov
call
mov
mov
cmp
mov
je
add
lea
push
call
test
jl
lea
jmp
mov
mov
lea
mov
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
cmp
je
lea
jmp
xor
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
call
mov
test
je
mov
push
push
push
push
call
mov
mov
cmp
mov
je
mov
test
jne
mov
mov
push
push
push
push
call
lea
call
mov
mov
cmp
jne
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
mov
push
lea
push
push
push
mov
push
push
mov
call
mov
push
lea
mov
call
or
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
push
repnz
not
dec
mov
lea
push
mov
call
test
je
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
push
lea
call
mov
lea
push
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
push
repnz
not
dec
mov
lea
push
mov
call
test
je
mov
mov
mov
mov
shr
rep
mov
mov
and
push
rep
lea
call
mov
lea
push
push
push
mov
movl
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
xor
push
repnz
not
dec
mov
lea
push
call
test
je
mov
mov
mov
mov
shr
rep
mov
push
and
rep
lea
call
mov
lea
push
push
push
mov
movl
call
mov
pop
pop
pop
test
pop
je
lea
mov
test
je
cmp
je
dec
mov
mov
mov
add
ret
push
call
add
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
push
push
mov
mov
cmp
mov
je
mov
mov
test
jne
mov
mov
cmp
mov
jb
mov
mov
xor
repz
je
sbb
sbb
test
jne
cmp
jb
cmp
setne
test
je
mov
add
cmp
jne
mov
cmp
mov
setne
test
je
mov
test
je
cmp
je
dec
mov
jmp
dec
push
call
add
mov
pop
pop
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
push
lea
call
lea
xor
push
push
push
mov
call
add
test
jne
lea
movl
call
pop
pop
mov
mov
add
ret
push
push
push
lea
push
push
lea
call
mov
mov
mov
mov
add
push
push
push
movb
call
add
mov
mov
mov
push
push
call
lea
lea
push
mov
call
test
je
push
mov
cmp
je
cmpb
je
mov
push
mov
lea
call
mov
push
lea
movb
mov
call
mov
xor
lea
movb
rep
stos
stos
mov
xor
lea
movb
rep
stos
stos
lea
lea
push
lea
push
lea
push
lea
push
mov
lea
push
push
push
push
movb
call
lea
or
xor
add
repnz
not
dec
push
mov
lea
push
call
test
je
mov
mov
mov
lea
shr
rep
mov
and
rep
mov
mov
xor
movb
lea
or
xor
push
repnz
not
dec
mov
lea
push
call
test
je
mov
mov
mov
lea
shr
rep
mov
and
rep
mov
mov
xor
movb
mov
lea
push
push
push
mov
mov
call
mov
movb
cmp
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
cmp
mov
mov
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
lea
lea
push
call
test
jne
pop
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
mov
push
cmp
push
mov
mov
je
add
mov
or
mov
xor
repnz
mov
not
dec
mov
mov
cmp
jb
mov
mov
mov
xor
repz
je
sbb
sbb
test
jne
cmp
jb
cmp
setne
test
jne
mov
or
mov
xor
repnz
mov
not
dec
mov
mov
cmp
jb
mov
mov
mov
xor
repz
je
sbb
sbb
test
jne
cmp
jb
cmp
setne
test
je
mov
mov
add
add
cmp
mov
jne
pop
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
push
push
mov
push
mov
sub
mov
push
mov
push
xor
mov
mov
mov
mov
mov
mov
cmp
mov
mov
je
mov
push
lea
mov
or
xor
repnz
not
dec
push
mov
push
push
push
mov
call
test
jne
mov
mov
or
add
repnz
not
dec
push
push
push
mov
call
cmp
jne
mov
lea
push
push
push
lea
call
mov
mov
add
cmp
mov
jne
mov
pop
test
je
mov
sub
sar
jne
push
call
add
xor
pop
pop
mov
mov
add
ret
call
xor
div
mov
push
mov
call
mov
add
mov
mov
pop
pop
add
ret
nop
push
push
mov
push
mov
sub
mov
push
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
mov
mov
je
add
mov
or
mov
xor
repnz
mov
not
dec
mov
mov
cmp
jb
mov
mov
mov
xor
repz
je
sbb
sbb
test
jne
cmp
jb
cmp
setne
test
jne
mov
or
xor
repnz
mov
not
dec
mov
mov
cmp
jb
mov
mov
mov
xor
repz
je
sbb
sbb
test
jne
cmp
jb
cmp
setne
test
jne
mov
mov
inc
mov
mov
cmp
je
mov
mov
add
add
cmp
mov
jne
mov
xor
mov
mov
push
push
mov
call
push
mov
call
add
mov
mov
pop
pop
pop
pop
mov
add
ret
mov
push
inc
mov
call
mov
add
jmp
push
push
mov
push
mov
sub
mov
push
push
push
mov
xor
push
push
lea
mov
mov
mov
call
mov
or
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
mov
cmp
mov
je
lea
mov
mov
cmp
jne
mov
push
push
push
lea
call
cmp
jne
mov
add
add
cmp
jne
mov
mov
mov
xor
repnz
not
dec
push
push
push
lea
call
cmp
je
mov
mov
push
mov
mov
call
mov
mov
xor
repnz
not
dec
push
push
mov
call
push
lea
mov
call
mov
jmp
mov
mov
add
push
mov
mov
call
mov
mov
push
push
push
call
push
lea
mov
call
mov
jmp
mov
mov
xor
repnz
not
dec
push
push
push
lea
call
cmp
je
mov
mov
push
mov
mov
call
mov
mov
xor
repnz
not
dec
push
push
mov
call
push
lea
mov
call
mov
jmp
mov
mov
xor
repnz
not
dec
push
push
push
lea
call
cmp
je
mov
mov
push
mov
mov
call
mov
mov
xor
repnz
not
dec
push
push
mov
call
push
lea
mov
call
mov
jmp
mov
mov
xor
repnz
not
dec
push
push
push
lea
call
cmp
je
mov
mov
push
mov
mov
call
mov
mov
xor
repnz
not
dec
push
push
mov
call
push
lea
mov
call
mov
jmp
mov
mov
xor
repnz
not
dec
push
push
push
lea
call
cmp
je
mov
mov
push
mov
mov
call
mov
mov
xor
repnz
not
dec
push
push
mov
call
push
lea
mov
call
mov
jmp
mov
mov
xor
repnz
not
dec
push
push
push
lea
call
cmp
je
mov
mov
push
mov
mov
call
mov
mov
xor
repnz
not
dec
push
push
mov
call
push
lea
mov
call
mov
jmp
mov
mov
xor
repnz
not
dec
push
push
push
lea
call
cmp
je
mov
mov
push
mov
mov
call
mov
mov
xor
repnz
not
dec
push
push
mov
call
push
lea
mov
call
mov
jmp
mov
mov
xor
repnz
not
dec
push
push
push
lea
call
cmp
je
mov
mov
push
mov
mov
call
mov
mov
xor
repnz
not
dec
push
push
mov
call
push
lea
mov
call
mov
jmp
mov
mov
xor
repnz
not
dec
push
push
push
lea
call
cmp
je
mov
mov
push
mov
mov
call
mov
mov
xor
repnz
not
dec
push
push
mov
call
push
lea
mov
call
mov
jmp
mov
mov
xor
repnz
not
dec
push
push
push
lea
call
cmp
je
mov
mov
push
mov
mov
call
mov
mov
xor
repnz
not
dec
push
push
mov
call
push
lea
mov
call
mov
jmp
mov
mov
xor
repnz
not
dec
push
push
push
lea
call
cmp
je
mov
mov
push
mov
mov
call
mov
mov
xor
repnz
not
dec
push
push
mov
call
push
lea
mov
call
mov
jmp
mov
mov
xor
repnz
not
dec
push
push
push
lea
call
cmp
je
mov
mov
push
mov
mov
call
mov
mov
xor
push
repnz
not
dec
mov
mov
push
call
test
je
mov
mov
mov
mov
push
shr
rep
mov
and
rep
mov
call
or
push
lea
mov
call
jmp
mov
mov
xor
repnz
not
dec
push
push
push
lea
call
cmp
je
mov
mov
push
mov
mov
call
mov
mov
xor
push
repnz
not
dec
mov
mov
push
call
test
je
mov
mov
mov
jmp
mov
mov
xor
repnz
not
dec
push
push
push
lea
call
cmp
je
mov
mov
push
mov
mov
call
mov
mov
xor
push
repnz
not
dec
mov
mov
push
call
test
je
mov
mov
mov
jmp
mov
mov
xor
repnz
not
dec
push
push
push
lea
call
cmp
je
mov
mov
push
mov
mov
call
mov
mov
xor
push
repnz
not
dec
mov
mov
push
call
test
je
mov
mov
mov
jmp
mov
mov
xor
repnz
not
dec
push
push
push
lea
call
cmp
je
mov
mov
push
mov
mov
call
mov
mov
xor
push
repnz
not
dec
mov
mov
push
call
test
je
mov
mov
mov
jmp
mov
mov
xor
repnz
not
dec
push
push
push
lea
call
cmp
je
mov
mov
push
mov
mov
call
mov
mov
xor
push
repnz
not
dec
mov
mov
push
call
test
je
mov
mov
mov
mov
push
shr
rep
mov
and
rep
mov
call
push
lea
movl
call
jmp
mov
mov
mov
cmp
je
lea
mov
mov
or
xor
repnz
not
dec
push
mov
push
push
push
lea
call
test
je
mov
mov
test
mov
movl
je
mov
test
jne
xor
jmp
mov
test
jbe
cmp
ja
mov
mov
mov
movsbl
sub
add
push
push
push
call
add
test
je
jmp
mov
mov
mov
mov
xor
repz
je
sub
lea
lea
mov
push
movsbl
push
push
call
add
test
jne
mov
mov
mov
cmp
jne
mov
add
add
mov
mov
mov
cmp
jne
or
xor
jmp
mov
mov
sub
jmp
mov
mov
lea
xor
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
cmp
je
mov
test
je
cmp
je
dec
mov
mov
jmp
dec
push
call
add
mov
jmp
mov
mov
mov
mov
mov
xor
mov
mov
mov
repnz
not
dec
push
push
mov
call
mov
cmp
je
mov
test
je
cmp
je
dec
mov
jmp
dec
push
call
add
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
xor
push
push
mov
mov
push
lea
mov
call
test
jl
mov
push
mov
call
mov
jmp
push
lea
call
test
jl
mov
push
mov
call
jmp
mov
push
push
call
add
test
jne
mov
push
mov
call
jmp
mov
push
push
call
add
test
jne
mov
push
mov
call
jmp
push
lea
call
test
jl
mov
push
mov
call
jmp
mov
lea
push
mov
call
mov
lea
mov
call
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
jge
mov
ret
cmp
jge
mov
ret
cmp
jge
mov
ret
cmp
mov
jl
mov
ret
nop
nop
nop
mov
cmp
jge
mov
ret
cmp
jge
mov
ret
cmp
jge
mov
ret
cmp
mov
jl
mov
ret
nop
nop
nop
mov
cmp
jge
mov
ret
cmp
jge
mov
ret
cmp
jge
mov
ret
cmp
mov
jl
mov
ret
nop
nop
nop
push
push
mov
push
mov
sub
mov
push
mov
push
push
push
mov
xor
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
movb
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movb
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
movb
lea
push
push
mov
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movb
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movb
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
movb
lea
push
push
mov
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movb
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movb
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
movb
lea
push
push
mov
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movb
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movb
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
movb
lea
push
push
mov
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movb
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movb
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
movb
lea
push
push
mov
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movb
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movb
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
movb
lea
push
push
mov
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movb
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movb
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
movb
lea
push
push
mov
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movb
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movb
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
movb
lea
push
push
mov
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movb
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
lea
push
push
mov
movb
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
mov
movb
lea
push
push
push
mov
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
push
repnz
not
dec
mov
lea
push
mov
call
test
je
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
push
lea
call
mov
lea
push
push
push
mov
movb
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
push
repnz
not
dec
mov
lea
push
call
test
je
mov
mov
mov
mov
shr
rep
mov
push
and
rep
lea
call
mov
lea
lea
movb
push
push
push
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
push
repnz
not
dec
mov
lea
push
call
test
je
mov
mov
mov
mov
shr
rep
mov
push
and
rep
lea
call
mov
lea
lea
movb
push
push
push
call
push
lea
movb
call
mov
push
lea
mov
call
mov
or
xor
push
repnz
not
dec
mov
lea
push
call
test
je
mov
mov
mov
mov
shr
rep
mov
push
and
rep
lea
call
mov
lea
lea
movb
push
push
push
call
mov
test
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
pop
pop
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
mov
push
mov
push
cmp
mov
je
mov
or
xor
repnz
mov
not
dec
push
push
push
push
mov
call
test
je
mov
add
cmp
jne
cmp
je
mov
pop
sub
sar
lea
pop
pop
pop
lea
add
ret
mov
mov
cmp
mov
je
mov
or
xor
mov
repnz
not
dec
push
push
push
push
mov
call
test
je
mov
add
cmp
jne
cmp
je
mov
pop
sub
sar
lea
pop
pop
pop
lea
add
ret
mov
mov
cmp
mov
je
mov
or
xor
repnz
not
dec
push
mov
push
push
push
mov
call
test
je
mov
add
cmp
jne
cmp
je
sub
sar
cmp
lea
jle
lea
pop
pop
pop
lea
pop
add
ret
pop
pop
pop
lea
pop
add
ret
mov
mov
mov
mov
cmp
mov
je
mov
or
xor
repnz
mov
not
dec
cmp
mov
jae
mov
mov
mov
xor
repz
je
sbb
sbb
test
jne
mov
cmp
jb
cmp
setne
test
je
mov
add
cmp
jne
mov
mov
cmp
je
sub
pop
sar
pop
pop
lea
pop
lea
add
ret
pop
pop
pop
xor
pop
add
ret
nop
push
push
mov
mov
push
mov
lea
push
push
mov
call
mov
push
call
add
lea
movl
movl
call
mov
pop
dec
mov
jne
mov
push
call
add
movl
lea
call
pop
ret
nop
nop
nop
nop
push
push
push
mov
mov
mov
cmp
je
mov
call
add
cmp
jne
mov
push
call
add
xor
mov
mov
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
mov
cmp
je
mov
call
add
cmp
jne
mov
push
call
add
xor
mov
mov
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
mov
cmp
je
mov
call
add
cmp
jne
mov
push
call
add
xor
mov
mov
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
mov
cmp
je
mov
call
add
cmp
jne
mov
push
call
add
xor
mov
mov
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
mov
cmp
je
mov
call
add
cmp
jne
mov
push
call
add
xor
mov
mov
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
mov
cmp
je
mov
call
add
cmp
jne
mov
push
call
add
xor
mov
mov
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
xor
mov
mov
cmp
je
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
add
cmp
jne
mov
push
call
mov
mov
mov
mov
add
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
mov
mov
mov
pop
pop
pop
pop
ret
push
call
add
mov
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
push
test
mov
jne
cmp
jbe
mov
cmp
jae
sub
cmp
ja
mov
mov
sub
add
add
mov
push
movsbl
push
push
call
add
test
je
mov
mov
xor
repz
je
mov
sub
lea
lea
jmp
mov
pop
pop
pop
mov
pop
sub
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
xor
ret
mov
sub
sar
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
push
push
mov
push
mov
cmp
mov
mov
mov
je
mov
lea
sub
mov
mov
mov
cmp
jbe
or
lea
cmp
jne
mov
mov
push
push
call
push
push
mov
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
push
mov
shr
rep
mov
and
rep
mov
call
mov
mov
mov
add
add
lea
mov
cmp
jne
mov
mov
mov
cmp
je
lea
mov
test
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
mov
mov
add
xor
mov
mov
mov
add
lea
cmp
jne
mov
pop
pop
mov
pop
pop
add
ret
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
mov
push
push
push
mov
sub
push
mov
push
mov
mov
push
mov
test
je
mov
cmp
jne
cmp
jne
lea
call
mov
lea
movl
mov
call
mov
movb
cmp
mov
je
mov
push
mov
call
mov
lea
call
push
call
mov
add
cmp
mov
jne
lea
movb
call
mov
mov
mov
lea
mov
mov
movl
movl
mov
mov
mov
mov
mov
mov
call
mov
pop
pop
pop
mov
mov
add
ret
cmp
je
mov
lea
call
lea
push
push
mov
call
mov
cmp
jne
mov
pop
pop
pop
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
push
mov
push
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
cmp
jne
push
push
mov
call
push
push
mov
call
jmp
cmp
jbe
cmp
jne
mov
cmp
jne
mov
cmpb
jae
push
mov
call
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
mov
call
test
je
mov
cmp
jne
mov
mov
mov
mov
push
shr
rep
mov
and
rep
mov
call
xor
mov
mov
mov
mov
mov
cmp
jne
xor
jmp
mov
sub
sar
cmp
jge
xor
shl
push
call
mov
mov
mov
add
mov
cmp
mov
je
mov
test
movb
je
mov
push
mov
mov
call
mov
mov
push
push
push
call
add
add
cmp
movb
mov
jne
mov
mov
mov
pop
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
mov
mov
movl
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
mov
cmp
jne
lea
call
mov
jmp
mov
mov
cmp
jne
mov
mov
mov
cmp
je
mov
cmp
je
mov
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
je
mov
call
add
cmp
jne
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
je
mov
call
add
cmp
jne
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
push
cmp
push
mov
mov
je
lea
sub
mov
push
mov
mov
lea
mov
push
push
lea
call
push
lea
call
lea
lea
push
call
add
add
lea
cmp
jne
mov
mov
mov
mov
cmp
je
mov
call
add
cmp
jne
mov
mov
pop
mov
pop
pop
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
je
mov
call
add
cmp
jne
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
je
mov
call
add
cmp
jne
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
je
mov
call
add
cmp
jne
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
push
push
mov
sub
push
sar
cmp
mov
jae
mov
test
je
mov
sub
sar
cmp
jb
mov
test
jne
xor
jmp
sub
sar
add
test
mov
jge
xor
shl
push
call
mov
mov
mov
mov
mov
add
cmp
je
push
push
call
mov
add
add
add
cmp
jne
test
mov
jbe
mov
mov
push
push
call
mov
add
add
dec
mov
jne
mov
mov
shl
lea
mov
cmp
je
mov
mov
push
push
call
mov
add
add
add
cmp
mov
jne
mov
mov
cmp
je
push
mov
call
add
cmp
jne
mov
push
call
mov
mov
mov
add
shl
add
test
mov
jne
xor
pop
mov
mov
shl
add
pop
mov
pop
pop
add
ret
mov
pop
sub
mov
sar
add
pop
shl
add
mov
pop
pop
add
ret
mov
mov
sub
sar
cmp
jae
mov
mov
shl
cmp
mov
lea
je
mov
mov
push
push
call
mov
add
add
add
cmp
mov
jne
mov
mov
mov
mov
mov
sub
sar
sub
je
push
push
call
add
add
dec
jne
mov
mov
mov
mov
cmp
je
push
push
push
mov
call
add
cmp
jne
mov
mov
pop
pop
mov
pop
add
pop
mov
add
ret
test
jbe
shl
mov
mov
sub
mov
cmp
mov
je
push
push
call
add
add
add
cmp
jne
mov
mov
mov
mov
sub
cmp
je
sub
sub
push
push
push
mov
call
cmp
jne
mov
mov
lea
mov
cmp
je
mov
push
push
push
mov
call
add
cmp
jne
mov
mov
add
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
sar
cmp
jae
mov
test
je
mov
sub
sar
cmp
jb
mov
test
jne
xor
jmp
sub
sar
add
test
mov
jge
xor
lea
push
call
mov
mov
mov
mov
add
cmp
je
test
je
mov
mov
add
add
cmp
jne
test
mov
jbe
mov
mov
test
je
mov
mov
mov
add
dec
jne
mov
lea
cmp
lea
je
mov
sub
sub
add
test
je
mov
mov
add
add
cmp
jne
mov
mov
push
mov
call
mov
mov
add
lea
mov
mov
test
jne
xor
mov
mov
pop
lea
mov
pop
pop
pop
add
ret
mov
mov
sub
pop
sar
add
lea
mov
pop
pop
pop
add
ret
mov
mov
sub
sar
cmp
jae
lea
cmp
lea
je
mov
sub
test
je
mov
mov
mov
add
add
cmp
jne
mov
mov
mov
sub
sar
sub
je
test
je
mov
mov
add
dec
jne
mov
mov
cmp
je
mov
mov
add
cmp
jne
mov
add
mov
pop
pop
pop
pop
add
ret
test
jbe
shl
mov
mov
sub
cmp
je
test
je
mov
mov
add
add
cmp
jne
mov
mov
sub
cmp
je
mov
sub
sub
cmp
mov
jne
lea
mov
cmp
je
mov
mov
mov
add
cmp
jne
add
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
mov
push
mov
lea
mov
call
mov
mov
cmp
movl
je
mov
mov
test
mov
jne
mov
push
push
mov
mov
push
push
call
test
setl
test
je
mov
jmp
mov
cmp
jne
lea
movl
call
mov
mov
test
je
push
push
lea
push
push
call
mov
mov
movb
mov
mov
mov
jmp
test
mov
je
mov
cmp
jne
push
push
lea
push
push
call
mov
mov
movb
mov
mov
mov
jmp
lea
call
mov
push
lea
call
test
jge
lea
lea
push
push
push
push
push
mov
movb
call
push
lea
jmp
lea
lea
push
push
movb
lea
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
mov
push
push
lea
call
lea
mov
call
mov
mov
cmp
movl
jne
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
mov
cmp
jne
lea
call
mov
cmp
mov
je
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
jmp
lea
mov
call
mov
mov
cmp
je
mov
mov
cmp
jne
lea
call
mov
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
jmp
lea
mov
call
mov
mov
cmp
je
mov
mov
cmp
jne
lea
call
mov
mov
mov
mov
cmp
jne
mov
cmp
je
xor
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
lea
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
lea
mov
call
mov
mov
mov
cmp
jne
mov
cmp
jne
jmp
mov
cmp
jne
mov
mov
mov
mov
lea
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
lea
mov
call
mov
mov
mov
cmp
jne
mov
cmp
jne
xor
mov
mov
mov
cmp
jne
jmp
mov
cmp
jne
mov
mov
lea
movl
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
mov
lea
jmp
mov
cmp
jne
mov
mov
mov
lea
jmp
mov
mov
mov
lea
jmp
mov
cmp
jne
mov
mov
lea
movl
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
lea
call
mov
mov
mov
mov
cmp
je
push
mov
call
add
cmp
jne
mov
mov
push
call
xor
add
mov
mov
mov
mov
cmp
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
push
mov
mov
mov
call
mov
mov
add
dec
mov
mov
lea
mov
movl
call
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
mov
push
push
lea
call
mov
mov
cmp
movl
mov
je
push
push
mov
mov
push
call
mov
mov
mov
cmp
je
push
mov
call
add
cmp
jne
mov
push
call
xor
add
mov
mov
mov
mov
cmp
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
push
mov
mov
mov
call
mov
add
cmp
mov
jne
pop
pop
lea
movl
call
mov
pop
pop
mov
add
ret
nop
push
push
mov
push
mov
push
push
push
mov
push
lea
call
mov
xor
cmp
mov
jne
push
call
mov
movl
mov
mov
mov
add
mov
mov
push
inc
mov
mov
call
mov
mov
mov
mov
mov
mov
add
lea
mov
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
sub
mov
imul
mov
mov
sar
mov
shr
add
cmp
jae
mov
test
je
mov
mov
sub
imul
sar
mov
shr
add
cmp
mov
jb
mov
test
jne
xor
jmp
sub
mov
imul
sar
mov
shr
add
lea
test
mov
jge
xor
lea
lea
shl
push
call
mov
mov
mov
mov
mov
add
cmp
je
push
push
call
mov
add
add
add
cmp
jne
test
mov
jbe
mov
mov
push
push
call
mov
add
add
dec
mov
jne
mov
lea
lea
lea
mov
cmp
je
mov
mov
push
push
call
mov
add
add
add
cmp
mov
jne
mov
mov
cmp
je
mov
call
add
cmp
jne
mov
push
call
mov
mov
add
lea
lea
lea
mov
mov
test
jne
xor
jmp
mov
sub
mov
imul
sar
mov
shr
add
add
mov
lea
lea
lea
pop
pop
mov
pop
pop
add
ret
mov
mov
sub
mov
imul
sar
mov
shr
add
cmp
jae
lea
mov
lea
shl
mov
add
cmp
je
mov
mov
push
push
call
mov
add
add
add
cmp
mov
jne
mov
mov
mov
mov
mov
sub
imul
sar
mov
shr
add
sub
je
push
push
call
add
add
dec
jne
mov
mov
cmp
je
push
mov
call
add
cmp
jne
mov
mov
add
mov
pop
pop
pop
pop
add
ret
test
jbe
lea
mov
lea
mov
shl
sub
mov
cmp
je
push
push
call
add
add
add
cmp
jne
mov
mov
mov
mov
sub
cmp
je
mov
sub
sub
push
push
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
push
mov
call
push
lea
push
push
lea
call
cmp
jne
mov
mov
lea
cmp
mov
je
mov
lea
lea
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
mov
call
push
lea
push
push
lea
call
mov
add
lea
cmp
jne
mov
mov
add
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
mov
mov
mov
mov
mov
sub
imul
sar
mov
shr
add
cmp
jae
mov
test
je
mov
mov
sub
imul
sar
mov
shr
add
cmp
mov
jb
mov
test
jne
xor
jmp
sub
mov
imul
sar
mov
shr
add
lea
test
mov
jge
xor
lea
shl
push
call
mov
mov
mov
mov
add
cmp
je
push
push
call
mov
add
add
add
cmp
jne
test
mov
jbe
mov
mov
push
push
call
mov
add
add
dec
mov
jne
mov
lea
lea
mov
cmp
je
mov
mov
push
push
call
mov
add
add
add
cmp
mov
jne
mov
mov
cmp
je
mov
call
add
cmp
jne
mov
push
call
mov
mov
add
lea
lea
mov
test
mov
jne
xor
mov
add
lea
lea
mov
pop
pop
pop
pop
add
ret
mov
mov
sub
mov
imul
sar
mov
shr
add
add
lea
lea
mov
pop
pop
pop
pop
add
ret
mov
mov
sub
mov
imul
sar
mov
shr
add
cmp
jae
lea
mov
shl
mov
add
cmp
je
mov
mov
mov
push
push
call
mov
mov
add
add
add
cmp
mov
mov
jne
mov
mov
mov
sub
imul
sar
mov
shr
add
sub
mov
mov
je
mov
push
push
call
mov
add
add
dec
mov
jne
mov
cmp
je
push
mov
call
add
cmp
jne
jmp
test
jbe
lea
mov
shl
sub
mov
cmp
mov
je
mov
push
push
call
mov
add
add
add
cmp
mov
jne
mov
mov
mov
sub
cmp
je
lea
lea
jmp
mov
mov
sub
sub
sub
sub
push
lea
mov
push
push
lea
mov
call
push
push
push
mov
call
push
lea
push
push
lea
call
push
lea
push
push
lea
call
mov
cmp
mov
jne
mov
mov
lea
cmp
mov
je
mov
lea
lea
mov
push
push
push
lea
mov
call
push
lea
push
push
mov
call
push
lea
push
push
lea
call
push
lea
push
push
lea
call
mov
mov
mov
add
lea
cmp
jne
mov
mov
add
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
sub
mov
imul
add
mov
sar
mov
mov
shr
add
cmp
jae
mov
test
je
mov
mov
sub
imul
add
sar
mov
shr
add
cmp
mov
jb
mov
test
jne
xor
jmp
sub
mov
imul
add
sar
mov
shr
add
lea
test
mov
jge
xor
lea
sub
shl
push
call
mov
mov
mov
mov
mov
add
cmp
je
push
push
call
mov
add
add
add
cmp
jne
test
mov
jbe
mov
mov
push
push
call
mov
add
add
dec
mov
jne
mov
lea
sub
lea
mov
cmp
je
mov
mov
push
push
call
mov
add
add
add
cmp
mov
jne
mov
mov
cmp
je
mov
call
add
cmp
jne
mov
push
call
mov
mov
add
lea
sub
mov
test
lea
mov
jne
xor
jmp
mov
sub
mov
imul
add
sar
mov
shr
add
add
mov
lea
sub
pop
lea
pop
mov
pop
pop
add
ret
mov
mov
sub
mov
imul
add
sar
mov
shr
add
cmp
jae
lea
mov
sub
shl
mov
add
cmp
je
mov
mov
push
push
call
mov
add
add
add
cmp
mov
jne
mov
mov
mov
mov
sub
imul
add
mov
sar
mov
mov
shr
add
sub
je
push
push
call
add
add
dec
jne
mov
mov
cmp
mov
je
lea
lea
mov
push
mov
mov
push
push
mov
mov
call
lea
lea
push
call
lea
lea
push
call
mov
add
lea
cmp
jne
jmp
test
jbe
lea
mov
sub
mov
shl
sub
mov
cmp
je
push
push
call
add
add
add
cmp
jne
mov
mov
mov
mov
sub
cmp
je
lea
lea
jmp
mov
mov
sub
sub
sub
sub
push
mov
mov
push
push
mov
mov
mov
call
lea
lea
push
call
lea
push
lea
call
cmp
jne
mov
mov
lea
cmp
je
mov
push
mov
call
add
cmp
jne
mov
mov
add
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
mov
push
mov
mov
sub
mov
imul
sar
mov
mov
shr
add
cmp
jae
mov
test
je
mov
mov
sub
imul
sar
mov
shr
add
cmp
mov
jb
mov
test
jne
xor
jmp
sub
mov
imul
sar
mov
shr
add
lea
test
mov
jge
xor
lea
shl
push
call
mov
mov
mov
mov
add
cmp
je
push
push
call
mov
add
add
add
cmp
jne
test
mov
jbe
mov
mov
push
push
call
mov
add
add
dec
mov
jne
mov
lea
shl
add
mov
cmp
je
mov
mov
push
push
call
mov
add
add
add
cmp
mov
jne
mov
mov
cmp
je
mov
call
add
cmp
jne
mov
push
call
mov
mov
add
lea
shl
add
mov
mov
test
jne
xor
jmp
mov
sub
mov
imul
sar
mov
shr
add
add
mov
lea
pop
shl
add
pop
mov
pop
pop
add
ret
mov
mov
sub
mov
imul
sar
mov
shr
add
cmp
jae
lea
mov
shl
mov
add
cmp
je
mov
mov
mov
push
push
call
mov
mov
add
add
add
cmp
mov
mov
jne
mov
mov
mov
sub
imul
sar
mov
shr
add
sub
mov
mov
je
mov
push
push
call
mov
add
add
dec
mov
jne
mov
cmp
je
push
mov
call
add
cmp
jne
mov
mov
add
pop
mov
pop
pop
pop
add
ret
test
jbe
lea
mov
shl
sub
mov
cmp
mov
je
mov
push
push
call
mov
add
add
add
cmp
mov
jne
mov
mov
mov
sub
cmp
je
sub
sub
push
mov
call
cmp
jne
mov
lea
cmp
mov
je
mov
lea
mov
sub
mov
push
mov
lea
push
push
lea
call
mov
push
lea
mov
push
push
lea
call
mov
push
lea
push
push
lea
mov
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
add
dec
jne
lea
mov
mov
mov
add
dec
jne
mov
add
sub
lea
cmp
jne
mov
mov
add
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
push
mov
mov
sub
push
imul
mov
mov
sar
mov
shr
add
cmp
jae
mov
test
je
mov
mov
sub
imul
sar
mov
shr
add
cmp
mov
jb
mov
test
jne
xor
jmp
sub
mov
imul
sar
mov
shr
add
lea
test
mov
jge
xor
lea
shl
push
call
mov
mov
mov
mov
mov
add
cmp
je
push
push
call
mov
add
add
add
cmp
jne
test
mov
jbe
mov
mov
push
push
call
mov
add
add
dec
mov
jne
mov
lea
shl
lea
mov
cmp
je
mov
mov
push
push
call
mov
add
add
add
cmp
mov
jne
mov
mov
cmp
je
mov
call
add
cmp
jne
mov
push
call
mov
mov
add
lea
mov
shl
add
test
mov
jne
xor
jmp
mov
sub
mov
imul
sar
mov
shr
add
add
mov
lea
pop
shl
add
pop
mov
pop
pop
add
ret
mov
mov
sub
mov
imul
sar
mov
shr
add
cmp
jae
lea
mov
shl
mov
add
cmp
je
mov
mov
push
push
call
mov
add
add
add
cmp
mov
jne
mov
mov
mov
mov
mov
sub
imul
sar
mov
shr
add
sub
je
push
push
call
add
add
dec
jne
mov
mov
cmp
je
push
mov
call
add
cmp
jne
jmp
test
jbe
lea
mov
shl
sub
mov
cmp
mov
je
push
push
call
add
add
add
cmp
jne
mov
mov
mov
mov
sub
cmp
je
lea
lea
jmp
mov
mov
sub
sub
sub
sub
push
lea
mov
push
push
lea
mov
call
push
push
push
mov
call
mov
cmp
mov
mov
mov
mov
mov
jne
mov
mov
lea
cmp
mov
je
mov
lea
lea
mov
push
push
push
lea
mov
call
push
lea
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
add
lea
cmp
jne
mov
mov
add
pop
pop
pop
pop
add
ret
nop
sub
push
push
push
mov
push
mov
sub
mov
imul
add
mov
sar
mov
mov
shr
add
cmp
jae
mov
test
je
mov
mov
sub
imul
add
sar
mov
shr
add
cmp
mov
jb
mov
test
jne
xor
jmp
sub
mov
imul
add
sar
mov
shr
add
lea
test
mov
jge
xor
lea
sub
shl
push
call
mov
mov
mov
mov
mov
add
cmp
je
push
push
call
mov
add
add
add
cmp
jne
test
mov
jbe
mov
mov
push
push
call
mov
add
add
dec
mov
jne
mov
lea
sub
lea
mov
cmp
je
mov
mov
push
push
call
mov
add
add
add
cmp
mov
jne
mov
mov
cmp
je
mov
call
add
cmp
jne
mov
push
call
mov
mov
add
lea
sub
mov
test
lea
mov
jne
xor
jmp
mov
sub
mov
imul
add
sar
mov
shr
add
add
mov
lea
sub
pop
lea
pop
mov
pop
pop
add
ret
mov
mov
sub
mov
imul
add
sar
mov
shr
add
cmp
jae
lea
mov
sub
shl
mov
add
cmp
je
mov
mov
push
push
call
mov
add
add
add
cmp
mov
jne
mov
mov
mov
mov
sub
imul
add
sar
mov
shr
add
sub
mov
mov
je
mov
push
push
call
add
add
dec
jne
mov
mov
cmp
mov
je
lea
lea
push
push
push
lea
call
push
push
push
lea
call
push
lea
push
push
mov
call
mov
mov
mov
mov
mov
add
lea
cmp
jne
jmp
test
jbe
lea
mov
sub
mov
shl
sub
mov
cmp
je
push
push
call
add
add
add
cmp
jne
mov
mov
mov
mov
sub
cmp
je
lea
lea
jmp
mov
sub
sub
push
push
push
mov
sub
mov
sub
call
push
lea
push
push
lea
call
push
push
push
mov
call
mov
cmp
mov
mov
mov
jne
mov
mov
lea
cmp
je
mov
push
mov
call
add
cmp
jne
mov
mov
add
pop
pop
pop
pop
add
ret
push
push
mov
push
mov
sub
push
push
mov
push
push
lea
call
xor
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
mov
call
mov
mov
add
inc
cmp
mov
je
mov
mov
cmp
jne
lea
push
mov
call
test
jl
mov
mov
cmp
jne
mov
jmp
mov
mov
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
cmp
je
mov
xor
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
lea
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
lea
mov
call
mov
movl
mov
mov
lea
mov
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
mov
lea
jmp
mov
cmp
jne
mov
mov
mov
lea
jmp
mov
mov
mov
lea
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
lea
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
lea
mov
call
mov
movl
mov
mov
lea
mov
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
lea
call
mov
cmp
jne
mov
mov
movl
mov
lea
movl
mov
call
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
mov
mov
mov
mov
cmp
je
mov
push
push
mov
mov
mov
jmp
mov
test
mov
je
mov
mov
cmp
mov
jb
mov
mov
xor
repz
je
sbb
sbb
test
jne
cmp
jb
cmp
setne
test
jge
mov
jmp
mov
mov
cmp
jne
pop
pop
lea
movl
call
mov
mov
pop
pop
mov
add
ret
push
push
mov
push
mov
sub
push
mov
lea
call
mov
movl
mov
test
jne
mov
cmp
jne
mov
mov
jmp
mov
mov
cmp
je
push
mov
lea
call
mov
mov
cmp
je
mov
mov
cmp
jne
lea
call
mov
pop
jmp
mov
mov
cmp
jne
mov
mov
mov
cmp
je
mov
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
cmp
je
push
push
mov
push
mov
mov
cmp
jbe
or
cmp
jne
mov
mov
cmp
jae
call
mov
call
mov
sub
cmp
jae
mov
test
jbe
mov
sub
add
push
lea
push
push
call
mov
add
sub
mov
push
push
call
test
je
push
mov
call
mov
call
jmp
xor
cmp
jbe
cmp
jne
mov
cmp
jne
mov
cmpb
jae
mov
cmp
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
movb
mov
add
add
cmp
mov
jne
mov
pop
pop
pop
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
cmp
je
mov
push
push
push
push
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jbe
movl
mov
lea
lea
cmp
jne
mov
lea
push
push
mov
call
push
push
mov
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
lea
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
lea
call
test
je
mov
test
jne
mov
mov
mov
mov
shr
rep
mov
mov
and
rep
mov
mov
movb
mov
mov
cmp
mov
jbe
movl
mov
lea
lea
cmp
jne
mov
mov
cmp
jae
call
lea
call
mov
sub
cmp
jae
mov
test
jbe
mov
sub
push
lea
lea
push
push
call
mov
add
sub
lea
push
push
call
test
je
push
lea
call
push
push
lea
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
lea
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
lea
call
test
je
mov
test
jne
mov
mov
mov
mov
shr
rep
mov
mov
and
rep
mov
mov
movb
mov
mov
mov
add
add
add
add
cmp
mov
mov
jne
pop
pop
pop
pop
pop
ret
mov
pop
ret
nop
nop
nop
nop
push
mov
mov
cmp
je
mov
push
push
push
lea
push
lea
mov
mov
push
lea
mov
push
push
lea
call
push
lea
push
push
lea
call
mov
mov
cmp
jbe
or
lea
lea
cmp
jne
mov
lea
push
push
mov
call
push
push
mov
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
lea
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
lea
call
test
je
mov
test
jne
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
movb
mov
mov
cmp
jbe
or
lea
lea
cmp
jne
mov
mov
cmp
jae
call
lea
call
mov
sub
cmp
jae
mov
test
jbe
mov
sub
add
push
lea
push
push
call
mov
add
sub
lea
push
push
mov
call
test
je
push
mov
call
push
push
lea
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
lea
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
lea
call
test
je
mov
test
jne
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
movb
mov
mov
mov
mov
mov
add
add
add
add
cmp
mov
mov
mov
jne
pop
pop
pop
pop
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
cmp
je
mov
push
push
push
push
lea
lea
jmp
mov
mov
mov
push
lea
push
push
lea
mov
call
mov
mov
mov
mov
cmp
mov
jbe
movl
mov
lea
lea
cmp
jne
mov
lea
push
push
mov
call
push
push
mov
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
lea
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
lea
call
test
je
mov
test
jne
mov
mov
mov
mov
shr
rep
mov
mov
and
rep
mov
mov
movb
mov
mov
mov
mov
cmp
mov
jbe
movl
mov
lea
lea
cmp
jne
mov
mov
push
push
call
push
push
mov
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
shr
rep
mov
mov
and
rep
mov
mov
movb
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
sub
mov
mov
mov
add
dec
jne
lea
mov
mov
mov
add
dec
jne
mov
add
add
add
mov
mov
add
cmp
mov
jne
mov
pop
pop
pop
pop
pop
ret
mov
pop
ret
nop
nop
push
mov
mov
cmp
je
mov
push
push
push
lea
push
lea
mov
mov
mov
mov
mov
cmp
jbe
or
lea
lea
cmp
jne
mov
lea
push
push
mov
call
push
push
mov
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
lea
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
lea
call
test
je
mov
test
jne
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
movb
mov
mov
cmp
jbe
or
lea
lea
cmp
jne
mov
mov
cmp
jae
call
lea
call
mov
sub
cmp
jae
mov
test
jbe
mov
sub
add
push
lea
push
push
call
mov
add
sub
lea
push
push
mov
call
test
je
push
mov
call
push
push
lea
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
lea
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
lea
call
test
je
mov
test
jne
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
movb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
cmp
mov
mov
mov
jne
pop
pop
pop
pop
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
cmp
je
mov
push
push
push
push
lea
lea
mov
push
push
push
mov
call
mov
mov
cmp
jbe
or
lea
lea
cmp
jne
mov
lea
push
push
mov
call
push
push
mov
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
lea
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
lea
call
test
je
mov
mov
test
je
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
movb
mov
mov
cmp
jbe
or
lea
lea
cmp
jne
mov
mov
cmp
jae
call
lea
call
mov
sub
cmp
jae
mov
test
jbe
mov
sub
add
push
lea
push
push
call
mov
add
sub
lea
push
push
mov
call
test
je
push
mov
call
push
push
lea
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
lea
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
lea
call
test
je
mov
mov
test
je
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
movb
mov
mov
mov
mov
mov
mov
mov
add
add
add
add
cmp
mov
mov
mov
jne
pop
pop
pop
pop
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
mov
xor
cmp
mov
je
push
push
mov
mov
mov
mov
mov
mov
mov
push
push
push
mov
call
mov
movb
mov
mov
cmp
jne
xor
jmp
mov
sub
sar
cmp
jge
xor
shl
push
call
mov
mov
mov
add
mov
cmp
mov
je
mov
xor
movb
cmp
je
mov
mov
mov
mov
mov
mov
push
push
push
mov
call
add
add
cmp
movb
mov
jne
pop
mov
mov
pop
mov
pop
pop
mov
add
ret
nop
push
push
mov
push
mov
push
push
push
push
mov
push
mov
xor
cmp
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
push
push
push
call
mov
add
lea
movb
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
cmp
jne
push
push
mov
call
push
push
mov
call
pop
pop
pop
pop
mov
mov
add
ret
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
pop
inc
pop
pop
mov
pop
mov
mov
add
ret
push
push
mov
call
test
je
mov
mov
test
je
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
movb
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
push
push
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
lea
lea
movb
mov
mov
mov
mov
mov
push
push
push
call
mov
lea
lea
movb
mov
mov
mov
mov
mov
push
push
push
call
mov
lea
push
movb
mov
mov
call
mov
lea
push
push
push
mov
call
mov
pop
mov
pop
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
mov
xor
cmp
mov
je
push
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
movb
mov
mov
cmp
jne
xor
jmp
mov
sub
sar
cmp
jge
xor
shl
push
push
call
mov
mov
mov
add
mov
cmp
mov
mov
je
mov
test
movb
je
mov
push
mov
mov
call
mov
mov
push
push
push
call
mov
add
add
cmp
mov
jne
mov
mov
mov
movb
mov
mov
test
pop
jne
xor
jmp
mov
sub
sar
test
jge
xor
lea
push
call
mov
mov
mov
add
cmp
je
test
je
mov
mov
add
add
cmp
jne
mov
mov
pop
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
push
push
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
lea
mov
lea
mov
movb
mov
mov
mov
mov
mov
push
push
push
call
mov
lea
mov
lea
mov
movb
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
mov
mov
lea
mov
lea
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
pop
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
mov
xor
cmp
mov
je
push
push
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
push
push
push
call
mov
add
add
movb
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
cmp
jne
push
push
mov
call
push
push
mov
call
jmp
cmp
jbe
cmp
jne
mov
cmp
jne
mov
cmpb
jae
push
mov
call
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
mov
call
test
je
mov
cmp
jne
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
movb
mov
mov
pop
pop
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
push
push
mov
mov
mov
mov
mov
mov
mov
push
push
push
mov
call
mov
lea
lea
movb
mov
mov
mov
mov
mov
push
push
push
call
mov
lea
lea
movb
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
pop
mov
pop
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jbe
or
cmp
jne
mov
mov
cmp
jae
call
mov
call
mov
sub
cmp
jae
mov
test
jbe
mov
sub
add
push
lea
push
push
call
mov
add
sub
mov
push
push
call
test
je
push
mov
call
push
push
mov
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
push
shr
rep
mov
and
rep
mov
call
mov
mov
lea
mov
mov
cmp
lea
jbe
or
cmp
jne
mov
mov
cmp
jae
call
mov
call
mov
sub
cmp
jae
mov
test
jbe
mov
sub
add
push
lea
push
push
call
mov
add
sub
mov
push
push
call
test
je
push
mov
call
push
push
mov
call
mov
pop
pop
pop
pop
pop
ret
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
mov
pop
pop
pop
pop
pop
ret
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
push
shr
rep
mov
and
rep
mov
call
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
mov
mov
push
lea
push
push
lea
mov
mov
call
mov
add
mov
lea
cmp
jbe
or
cmp
jne
mov
mov
push
push
call
push
push
mov
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
push
shr
rep
mov
and
rep
mov
call
mov
mov
lea
mov
lea
mov
cmp
jbe
or
cmp
jne
mov
mov
push
push
call
push
push
mov
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
push
shr
rep
mov
and
rep
mov
call
mov
mov
lea
mov
lea
mov
cmp
jbe
or
cmp
jne
mov
mov
push
push
call
push
push
mov
call
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
movb
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
mov
add
mov
mov
mov
mov
mov
mov
cmp
lea
jbe
or
cmp
jne
mov
mov
push
push
call
push
push
mov
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
push
shr
rep
mov
and
rep
mov
call
mov
mov
lea
lea
cmp
je
mov
test
jne
xor
jmp
mov
sub
sar
mov
test
jne
xor
jmp
mov
sub
sar
cmp
ja
mov
mov
cmp
mov
je
push
push
push
mov
call
mov
add
add
cmp
jne
mov
mov
push
push
call
mov
call
mov
mov
shl
add
mov
jmp
mov
call
mov
mov
call
cmp
ja
mov
mov
call
mov
mov
mov
shl
add
push
push
push
call
mov
mov
add
mov
push
push
push
call
jmp
mov
mov
push
push
mov
call
mov
push
call
add
mov
call
test
jge
xor
shl
push
call
add
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
add
push
lea
call
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
push
push
push
push
mov
push
mov
mov
add
mov
mov
mov
lea
mov
cmp
jbe
or
cmp
jne
mov
push
push
mov
call
push
push
mov
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
push
shr
rep
mov
and
rep
mov
call
mov
mov
lea
mov
add
mov
mov
mov
cmp
jbe
or
cmp
jne
mov
push
push
mov
call
push
push
mov
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
push
shr
rep
mov
and
rep
mov
call
mov
mov
lea
mov
add
mov
mov
mov
cmp
jbe
or
cmp
jne
mov
push
push
mov
call
push
push
mov
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
movb
mov
mov
mov
mov
mov
mov
mov
lea
sub
mov
mov
mov
add
dec
jne
lea
mov
mov
mov
add
dec
jne
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
mov
mov
add
mov
mov
mov
lea
mov
cmp
jbe
or
cmp
jne
mov
mov
cmp
jae
call
mov
call
mov
sub
cmp
jae
mov
test
jbe
mov
sub
add
push
lea
push
push
call
mov
add
sub
mov
push
push
call
test
je
push
mov
call
push
push
mov
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
push
shr
rep
mov
and
rep
mov
call
mov
mov
lea
mov
lea
mov
cmp
jbe
or
cmp
jne
mov
mov
cmp
jae
call
mov
call
mov
sub
cmp
jae
mov
test
jbe
mov
sub
add
push
lea
push
push
call
mov
add
sub
mov
push
push
call
test
je
push
mov
call
push
push
mov
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
push
shr
rep
mov
and
rep
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
mov
mov
mov
mov
cmp
jbe
or
cmp
jne
mov
mov
push
push
call
push
push
mov
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
push
shr
rep
mov
and
rep
mov
call
mov
mov
mov
add
mov
lea
cmp
jbe
or
cmp
jne
mov
push
push
mov
call
push
push
mov
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
push
shr
rep
mov
and
rep
mov
call
mov
mov
lea
lea
mov
mov
cmp
jbe
or
cmp
jne
mov
push
push
mov
call
push
push
mov
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
movb
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
mov
cmp
push
je
mov
test
jne
xor
jmp
mov
sub
sar
mov
test
jne
xor
jmp
mov
sub
sar
cmp
ja
mov
cmp
je
mov
add
mov
add
cmp
jne
mov
test
jne
mov
xor
pop
lea
mov
mov
pop
pop
ret
mov
pop
sub
mov
sar
lea
mov
mov
pop
pop
ret
test
jne
xor
jmp
mov
sub
sar
test
jne
xor
jmp
mov
sub
sar
cmp
ja
test
jne
xor
jmp
mov
sub
sar
lea
cmp
je
mov
add
mov
add
cmp
jne
mov
mov
cmp
mov
je
test
je
mov
mov
add
add
cmp
jne
mov
test
jne
mov
xor
pop
lea
pop
mov
mov
pop
ret
mov
mov
sub
pop
sar
lea
pop
mov
mov
pop
ret
push
mov
call
mov
add
test
jne
xor
jmp
mov
sub
sar
test
jge
xor
lea
push
call
mov
mov
mov
mov
add
cmp
je
test
je
mov
mov
add
add
cmp
jne
mov
mov
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
mov
call
movl
xor
lea
mov
call
mov
mov
xor
lea
movl
rep
mov
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
mov
mov
lea
push
mov
mov
push
push
push
push
mov
call
mov
cmp
je
mov
lea
push
push
push
push
mov
call
mov
test
je
mov
mov
sub
mov
push
push
mov
mov
push
mov
mov
mov
mov
mov
call
mov
call
pop
pop
pop
add
ret
nop
mov
push
push
push
mov
sub
push
push
mov
xor
push
cmp
jne
push
lea
lea
push
push
push
mov
mov
mov
mov
mov
call
push
mov
call
mov
movl
push
mov
call
lea
push
neg
sbb
mov
and
push
mov
push
push
call
lea
call
movl
lea
movl
call
movl
cmpl
jne
mov
push
mov
lea
push
push
push
mov
call
mov
mov
mov
sub
push
push
mov
add
sub
movl
push
push
push
mov
call
push
mov
call
mov
mov
push
call
cmp
jne
xor
jmp
mov
push
call
mov
push
push
push
push
call
mov
push
push
push
push
call
and
and
shl
or
mov
push
call
lea
movl
call
pop
pop
pop
pop
mov
mov
add
ret
push
lea
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
mov
push
push
cmp
mov
jne
push
lea
call
lea
lea
push
mov
movl
call
mov
call
mov
mov
and
push
shr
push
push
mov
call
lea
movl
call
mov
test
jne
push
lea
call
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
sub
push
mov
push
mov
push
push
mov
push
call
mov
call
test
je
mov
lea
push
push
call
lea
mov
push
call
movswl
shr
movswl
push
lea
push
push
call
test
je
cmp
jne
mov
test
je
lea
mov
call
and
cmp
jne
push
mov
call
pop
pop
pop
add
ret
nop
nop
sub
push
push
mov
mov
cmpl
jne
cmpl
jne
mov
test
je
lea
call
and
cmp
jne
push
push
mov
call
lea
lea
push
push
mov
call
test
jne
lea
lea
push
push
mov
call
mov
mov
lea
push
push
push
push
push
mov
call
mov
mov
lea
lea
push
push
push
mov
call
mov
mov
push
push
push
push
call
mov
inc
je
push
mov
lea
push
push
push
push
call
push
inc
push
push
mov
mov
call
test
jne
pop
mov
push
push
push
mov
call
pop
pop
mov
pop
add
ret
push
mov
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
push
push
mov
push
push
call
lea
mov
call
mov
mov
mov
and
shr
mov
mov
mov
call
mov
test
jne
pop
pop
pop
pop
ret
push
push
call
mov
push
push
push
push
mov
call
and
test
pop
jne
mov
inc
mov
mov
cmp
mov
jl
mov
lea
cmp
jne
movl
movl
jmp
movl
mov
inc
mov
cmp
jl
dec
mov
pop
pop
xor
pop
pop
ret
mov
dec
mov
jns
dec
mov
mov
dec
mov
cmpl
jge
mov
dec
mov
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
call
lea
mov
call
mov
mov
mov
and
shr
mov
mov
mov
push
push
push
push
call
and
test
jne
pop
pop
xor
pop
ret
mov
dec
cmp
jl
xor
pop
mov
pop
mov
pop
ret
lea
pop
mov
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
mov
push
call
push
call
test
je
mov
mov
push
push
push
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
cmpl
jne
mov
cmp
jne
mov
push
call
push
call
test
movl
jne
push
push
jmp
mov
push
push
jmp
cmp
jne
mov
push
call
push
call
test
movl
je
mov
push
push
push
push
call
push
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
movl
movl
call
mov
mov
add
ret
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
movl
movl
call
mov
mov
add
ret
nop
nop
nop
nop
push
mov
cmpl
jne
push
push
xor
push
mov
call
push
push
push
mov
pushl
mov
call
test
jne
call
jmp
call
mov
test
je
mov
mov
call
test
jne
mov
mov
call
jmp
pushl
mov
call
movl
mov
mov
pop
pop
pop
jmp
cmpl
jne
call
mov
test
je
mov
mov
call
call
push
call
call
push
pushl
call
jmp
cmpl
jne
call
push
call
pushl
call
push
pop
pop
ret
push
push
call
call
jmp
jmp
call
push
call
pop
mov
ret
push
mov
pushl
call
mov
andl
andl
mov
movl
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
movl
ret
push
mov
pushl
call
mov
andl
andl
mov
movl
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
movl
ret
pushl
add
call
ret
push
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
lea
movl
push
call
mov
call
pop
ret
add
push
call
push
pop
ret
add
push
call
push
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
call
test
je
mov
mov
call
ret
xor
ret
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
mov
movl
andl
add
call
mov
mov
leave
ret
mov
jmp
mov
jmp
push
xor
cmp
push
push
je
xor
cmp
setne
jmp
push
call
mov
cmp
je
mov
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
pop
mov
jmp
mov
mov
mov
mov
mov
mov
movl
xor
pop
pop
pop
ret
push
push
call
test
je
pushl
pushl
call
jmp
testb
jne
mov
xor
cmp
jle
cmp
jle
mov
push
call
cmp
jge
push
call
cmp
jl
xor
jmp
mov
pop
pop
ret
push
mov
sub
call
test
je
pushl
pushl
call
jmp
testb
je
mov
jmp
pushl
call
test
je
lea
push
pushl
call
jmp
lea
push
pushl
call
test
je
pushl
lea
push
call
jmp
xor
leave
ret
push
mov
sub
push
push
call
test
je
pushl
pushl
call
jmp
cmpl
jne
mov
xor
cmp
je
cmpl
jb
lea
push
push
push
push
call
test
je
push
mov
mov
push
mov
call
push
mov
call
lea
lea
movsl
movsl
movsl
cmpl
push
movsl
pop
mov
mov
pop
jb
add
push
push
call
mov
jmp
xor
pop
pop
leave
ret
mov
test
jne
pushl
call
push
call
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
pushl
call
mov
andl
andl
mov
movl
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
movl
ret
push
mov
pushl
call
mov
andl
andl
mov
movl
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
movl
ret
pushl
pushl
pushl
call
ret
pushl
pushl
call
ret
pushl
pushl
pushl
pushl
pushl
call
ret
push
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
ret
push
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
movswl
shr
movswl
mov
mov
mov
pop
ret
pushl
pushl
pushl
pushl
pushl
call
ret
push
mov
mov
test
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
pop
ret
pushl
pushl
pushl
pushl
pushl
call
ret
mov
mov
mov
xor
movl
mov
mov
mov
movb
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
movl
movl
call
andb
lea
call
mov
pop
mov
leave
ret
push
mov
mov
test
je
push
call
andl
pop
mov
test
je
push
call
andl
pop
mov
test
je
cmp
je
mov
mov
call
andl
pop
ret
pushl
call
ret
push
push
push
mov
call
push
call
mov
andl
test
pop
mov
jne
mov
add
push
push
call
pushl
push
call
cmp
mov
jne
call
mov
mov
call
push
jmp
push
mov
lea
push
mov
call
mov
push
push
push
call
add
test
pop
jne
mov
push
call
mov
call
push
call
xor
jmp
push
push
call
push
push
mov
call
add
test
jne
test
je
mov
test
jne
mov
cmp
jb
andb
jmp
andb
mov
push
call
push
pop
pop
pop
pop
ret
mov
test
je
mov
and
neg
sbb
neg
jmp
xor
ret
mov
test
je
mov
test
je
mov
push
mov
mov
mov
pop
jmp
xor
ret
mov
test
je
mov
test
je
mov
push
mov
mov
mov
pop
jmp
xor
ret
mov
test
je
mov
test
je
mov
push
mov
mov
mov
pop
jmp
xor
ret
push
mov
push
mov
test
je
add
push
push
lea
call
mov
mov
push
mov
pop
jmp
xor
leave
ret
push
mov
push
mov
test
je
add
push
push
lea
call
mov
mov
push
mov
pop
jmp
xor
leave
ret
push
mov
push
mov
test
je
add
push
push
lea
call
mov
mov
push
mov
pop
jmp
xor
leave
ret
push
push
mov
xor
cmp
je
mov
push
call
test
je
mov
cmpb
jne
mov
test
je
cmp
jne
cmpb
jne
push
pop
mov
pop
pop
ret
push
mov
cmpl
jne
xor
pop
ret
cmpl
push
lea
jne
push
call
pop
mov
mov
mov
push
mov
pushl
mov
call
pop
pop
ret
mov
call
sub
andl
push
push
mov
push
lea
call
mov
push
pop
lea
push
mov
mov
call
push
lea
movb
call
lea
mov
call
mov
lea
push
call
mov
andb
lea
call
mov
mov
pop
pop
mov
leave
ret
push
mov
push
andl
add
push
mov
call
mov
leave
ret
mov
call
sub
push
andl
push
mov
lea
lea
push
call
mov
push
pop
mov
mov
cmpb
je
cmpb
je
mov
lea
push
call
mov
lea
push
mov
call
push
lea
movb
call
lea
mov
call
mov
lea
push
call
mov
andb
lea
call
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
mov
andl
push
lea
push
push
call
mov
push
pop
mov
mov
mov
push
push
lea
movb
call
push
push
push
push
call
add
lea
push
call
mov
lea
push
call
mov
lea
mov
call
andb
lea
call
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
andl
push
mov
mov
push
pop
test
mov
je
add
lea
push
call
mov
lea
push
call
mov
andb
lea
call
mov
mov
pop
mov
leave
ret
push
mov
mov
mov
lea
cmp
jbe
sub
mov
inc
push
call
mov
mov
mov
mov
incl
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
movl
movl
call
andb
lea
call
orl
lea
call
mov
pop
mov
leave
ret
mov
push
mov
andl
andl
mov
mov
mov
lea
push
call
mov
pop
ret
push
mov
call
add
push
call
pop
ret
push
mov
push
lea
push
call
mov
call
andl
andl
push
call
pop
pop
ret
mov
call
sub
push
push
mov
push
mov
mov
lea
push
call
cmpl
jne
pushl
andl
lea
pushl
push
call
mov
dec
mov
imul
test
lea
jl
inc
mov
mov
mov
sub
dec
jne
mov
push
mov
mov
call
mov
mov
pop
pop
mov
pop
leave
ret
mov
add
push
call
push
push
call
push
push
mov
mov
test
je
push
lea
push
call
mov
push
mov
mov
call
pop
pop
pop
ret
mov
andl
movl
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
movl
test
je
push
call
andl
pop
ret
pushl
pushl
call
neg
sbb
inc
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
mov
movl
andl
call
mov
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
mov
movl
andl
add
call
mov
mov
leave
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
int3
mov
push
push
push
mov
mov
test
je
mov
test
je
mov
mov
mov
inc
cmp
je
test
je
mov
inc
cmp
je
test
jne
pop
pop
pop
xor
ret
mov
inc
cmp
jne
lea
mov
test
je
mov
add
cmp
jne
mov
test
je
mov
add
cmp
je
jmp
xor
pop
pop
pop
mov
jmp
lea
pop
pop
pop
ret
mov
pop
pop
pop
ret
push
mov
sub
mov
push
mov
mov
lea
movl
push
lea
pushl
movl
push
call
add
decl
mov
js
mov
andb
jmp
lea
push
push
call
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
jmp
pop
pop
pop
leave
ret
pop
pop
xchg
jmp
pop
pop
xchg
jmp
push
mov
push
push
push
push
push
mov
mov
movl
push
pushl
pushl
pushl
call
mov
mov
and
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
cld
mov
xor
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
mov
mov
pop
ret
push
mov
sub
mov
andl
mov
mov
mov
movl
inc
mov
mov
mov
mov
lea
mov
pushl
push
pushl
call
mov
mov
mov
mov
leave
ret
push
mov
cld
mov
push
push
pushl
pushl
push
pushl
pushl
pushl
call
add
pop
ret
push
mov
sub
push
push
push
andl
movl
mov
mov
mov
mov
mov
mov
mov
mov
andl
andl
andl
andl
movl
mov
mov
mov
mov
lea
mov
movl
mov
mov
mov
mov
lea
push
mov
pushl
call
call
pop
pop
andl
cmpl
je
mov
mov
mov
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
cld
mov
mov
and
test
je
mov
movl
push
pop
jmp
push
mov
pushl
mov
pushl
mov
pushl
push
pushl
mov
pushl
pushl
call
add
mov
cmpl
jne
pushl
pushl
call
mov
mov
mov
jmp
push
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
cmpl
push
mov
mov
mov
mov
mov
mov
jl
cmp
jne
call
mov
dec
lea
cmp
lea
jge
cmp
jle
cmp
jne
mov
decl
mov
mov
cmpl
jge
mov
mov
inc
mov
mov
mov
cmp
ja
cmp
jbe
call
lea
pop
pop
lea
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
push
movl
call
mov
pop
test
je
push
call
pop
push
call
pop
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
mov
movl
push
mov
mov
call
mov
lea
push
lea
pushl
push
call
add
leave
ret
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
call
mov
mov
ret
call
mov
imul
add
mov
mov
shr
and
ret
push
call
pushl
call
mov
pop
mov
mov
sub
add
cmp
jae
push
call
add
push
pushl
call
add
test
jne
xor
jmp
mov
sub
mov
sar
lea
mov
mov
mov
addl
mov
call
mov
pop
ret
pushl
call
neg
sbb
pop
neg
dec
ret
push
call
test
pop
mov
jne
push
call
mov
pop
andl
mov
mov
ret
push
mov
cmpl
push
push
push
jne
pushl
pushl
call
pop
pop
jmp
push
call
mov
mov
pop
movzbw
movzbl
inc
mov
testb
je
mov
test
jne
andl
jmp
xor
inc
mov
mov
mov
movzbw
movzbl
inc
testb
je
mov
test
jne
xor
jmp
xor
inc
mov
mov
mov
cmp
jne
cmpw
je
jmp
push
call
cmp
pop
sbb
and
dec
jmp
push
call
pop
xor
pop
pop
pop
pop
ret
push
mov
sub
mov
push
pushl
mov
mov
lea
pushl
movl
movl
push
call
add
decl
mov
js
mov
andb
jmp
lea
push
push
call
pop
pop
mov
pop
leave
ret
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
push
mov
sub
lea
push
call
lea
push
call
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
lea
push
call
cmp
je
cmp
jne
cmpw
je
cmpl
je
push
pop
jmp
xor
jmp
or
push
push
lea
mov
movsl
movsl
movsl
movsl
pop
mov
pop
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
call
mov
add
test
je
mov
leave
ret
call
call
mov
call
fnclex
ret
ret
mov
movl
mov
movl
movl
movl
mov
ret
push
mov
sub
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
push
push
push
call
pop
push
lea
push
push
call
fldl
add
pop
leave
ret
push
mov
push
or
testb
je
andl
jmp
push
call
push
call
push
mov
call
add
mov
pop
pop
ret
push
mov
push
or
testb
je
push
call
push
mov
call
pushl
call
add
test
jge
or
jmp
mov
test
je
push
call
andl
pop
andl
mov
pop
pop
ret
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
inc
bts
jmp
mov
mov
or
je
inc
bt
jae
lea
add
pop
leave
ret
push
mov
cmpl
push
mov
push
mov
jg
xor
jmp
push
mov
push
call
pop
decl
je
decl
js
mov
movzbl
inc
mov
jmp
push
call
pop
cmp
je
mov
inc
cmp
je
jmp
cmp
jne
xor
jmp
andb
push
call
pop
mov
pop
pop
pop
pop
ret
push
call
mov
test
jne
pop
ret
push
push
pushl
pushl
pushl
call
push
mov
call
add
mov
pop
pop
ret
push
pushl
pushl
call
add
ret
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
sub
cmpl
push
push
push
jne
pushl
pushl
call
pop
pop
jmp
push
call
mov
pop
mov
mov
lea
mov
lea
mov
movzbw
movzbl
inc
incl
testb
mov
je
cmpb
jne
xor
jmp
push
lea
pushl
push
push
push
pushl
push
pushl
call
add
cmp
jne
movzbw
jmp
cmp
jne
movzbw
movzbw
shl
add
incl
incl
jmp
movzwl
mov
and
cmp
jne
movzbw
jmp
mov
movzbw
movzbl
inc
incl
testb
mov
je
cmpb
jne
xor
jmp
push
lea
pushl
push
push
push
pushl
push
pushl
call
add
cmp
jne
movzbw
jmp
cmp
jne
movzbw
movzbw
shl
add
incl
incl
jmp
movzwl
mov
and
cmp
jne
movzbw
cmp
jne
test
je
mov
mov
jmp
push
call
pop
mov
jmp
push
call
cmp
pop
sbb
and
dec
jmp
push
call
pop
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
call
push
call
mov
lea
push
pushl
push
call
push
push
mov
call
push
call
add
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
inc
add
int
add
int
add
int
add
int
add
int
add
int
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
inc
add
into
inc
add
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
into
inc
add
iret
inc
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
iret
inc
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
iret
inc
add
iret
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
movl
pushl
call
inc
push
call
pop
mov
test
pop
je
pushl
push
call
pop
pop
movl
mov
pop
pop
ret
push
push
mov
mov
movl
mov
test
mov
je
pushl
call
inc
push
call
pop
mov
test
pop
je
pushl
push
call
pop
pop
jmp
mov
mov
mov
pop
pop
ret
cmpl
movl
je
pushl
call
pop
ret
mov
test
jne
mov
ret
push
mov
sub
mov
push
push
push
pop
mov
lea
rep
mov
mov
mov
lea
push
pushl
pushl
pushl
call
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
call
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
je
call
pop
ret
pushl
mov
call
pop
ret
push
call
pop
ret
push
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
push
push
pushl
call
mov
mov
push
call
push
call
push
push
push
mov
pushl
call
push
push
mov
call
push
call
add
xor
cmp
pop
pop
sete
dec
pop
pop
ret
push
mov
sub
push
push
lea
push
push
call
movzwl
push
mov
pop
mov
cltd
mov
andb
idiv
mov
movb
movb
add
mov
mov
cltd
mov
idiv
movzwl
add
mov
cltd
idiv
add
mov
movzwl
cltd
idiv
movzwl
add
mov
cltd
idiv
pop
add
mov
movzwl
cltd
idiv
pop
mov
add
pop
mov
leave
ret
push
mov
sub
push
push
lea
push
push
call
movzwl
push
cltd
pop
idiv
movzwl
push
mov
pop
mov
mov
andb
movb
movb
mov
cltd
idiv
mov
add
mov
mov
cltd
mov
idiv
movzwl
add
mov
cltd
idiv
add
mov
movzwl
cltd
idiv
mov
add
mov
cltd
idiv
pop
add
mov
mov
cltd
idiv
pop
mov
add
pop
mov
leave
ret
push
mov
push
push
call
decl
pop
js
mov
mov
movzbl
mov
incl
jmp
push
pushl
call
pop
mov
pop
push
call
pop
mov
pop
pop
ret
push
push
push
mov
push
push
push
or
call
push
call
pushl
mov
call
mov
push
push
push
pushl
call
add
cmp
jne
decl
js
mov
movb
incl
jmp
push
push
call
pop
pop
xor
push
push
call
push
push
call
add
mov
pop
pop
pop
pop
ret
push
push
mov
push
push
push
call
push
call
mov
lea
push
pushl
push
call
push
push
mov
call
push
push
call
add
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
cmpl
jle
push
pushl
call
pop
pop
ret
mov
mov
mov
and
ret
cmpl
jle
push
pushl
call
pop
pop
ret
mov
mov
mov
and
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
mov
xor
mov
test
je
mov
inc
xor
je
dec
je
test
jne
sub
jb
push
mov
shl
add
mov
shl
add
jmp
pop
add
je
mov
inc
xor
je
dec
jne
pop
ret
sub
jb
mov
xor
mov
add
xor
xor
add
and
je
mov
xor
je
xor
je
shr
xor
je
xor
je
jmp
pop
lea
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
mov
cmp
jne
call
push
mov
call
test
pop
je
mov
xor
mov
and
shrl
mov
mov
shl
add
mov
call
test
jne
call
xor
jmp
call
mov
call
mov
call
call
call
call
incl
jmp
xor
cmp
jne
cmp
jle
decl
cmp
jne
call
call
call
call
jmp
cmp
jne
push
call
pop
push
pop
ret
bt
not
stc
not
bt
bt
clc
test
sub
pushf
and
pushf
pushf
call
push
jmp
cld
pushl
rep
call
movw
movl
mov
mov
pushf
pushf
push
pushl
ret
xchg
jne
not
push
mov
pop
rcr
lea
dec
add
not
call
test
add
pushf
pusha
movb
pushf
mov
pushf
call
mov
call
mov
cmp
je
test
jne
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rcr
add
fadds
adc
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
flds
jl
inc
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
inc
add
flds
rcr
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
fiaddl
push
fiaddl
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
inc
add
fiaddl
hlt
fiaddl
cld
fiaddl
add
inc
add
inc
add
inc
add
fildl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
fildl
dec
fildl
pop
fildl
insb
fildl
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
cmpw
lea
je
mov
inc
inc
test
jne
sub
sar
dec
ret
int3
int3
push
push
mov
push
mov
mov
mov
lea
push
ret
push
mov
cmpl
push
push
jne
pushl
pushl
call
pop
pop
jmp
push
call
mov
pop
movzbw
test
je
movzbl
testb
je
mov
inc
test
je
movzwl
movzbl
shl
or
cmp
je
jmp
movzwl
cmp
je
inc
jmp
push
call
pop
xor
jmp
push
call
pop
lea
jmp
push
call
mov
pop
movzwl
sub
neg
sbb
not
and
pop
pop
pop
ret
cmpl
push
push
mov
push
mov
mov
jne
push
call
pop
jmp
push
call
pop
mov
test
je
movzbl
mov
and
inc
test
je
mov
test
je
mov
mov
mov
inc
jmp
dec
cmp
jae
mov
mov
mov
inc
mov
jmp
push
call
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
mov
movzbl
mov
and
inc
test
je
inc
ret
push
mov
push
xor
cmp
push
push
jne
pushl
pushl
call
pop
pop
jmp
pushl
mov
call
mov
push
sub
call
pop
add
pop
cmp
je
cmp
ja
cmp
mov
je
mov
sub
mov
cmp
je
cmp
jne
inc
cmp
jne
cmp
je
push
call
pop
mov
jmp
mov
jmp
xor
pop
pop
pop
pop
ret
push
mov
push
xor
cmp
jne
pushl
pushl
call
pop
pop
jmp
push
push
call
pop
mov
mov
movzbl
movzbl
testb
je
mov
inc
test
je
movzbl
shl
or
cmp
jne
lea
jmp
test
jmp
cmp
jne
mov
inc
test
jne
push
call
pop
mov
pop
pop
pop
ret
mov
push
movzbl
testb
pop
setne
inc
ret
push
mov
push
xor
cmp
push
push
je
cmp
jne
pushl
pushl
pushl
call
add
jmp
push
call
decl
mov
mov
pop
movzbw
movzbl
inc
mov
testb
je
cmp
jne
movzbl
mov
testb
jne
mov
jmp
mov
test
jne
mov
jmp
xor
inc
mov
mov
mov
movzbw
movzbl
inc
testb
je
cmpl
je
mov
decl
test
jne
xor
jmp
xor
inc
mov
mov
mov
cmp
jne
cmpw
je
mov
decl
test
je
xor
jmp
push
call
cmp
pop
sbb
and
dec
jmp
push
call
pop
xor
pop
pop
pop
pop
ret
push
mov
push
mov
cmp
jbe
andw
push
xor
lea
stos
mov
mov
shr
cmpl
mov
pop
jne
xor
leave
ret
push
lea
pushl
pushl
push
lea
push
push
push
call
add
test
je
cmpw
jne
testb
je
push
pop
leave
ret
cmpl
jle
push
push
call
pop
pop
leave
ret
mov
mov
and
leave
ret
push
mov
push
mov
cmp
jbe
andw
push
xor
lea
stos
mov
mov
shr
cmpl
mov
pop
jne
xor
leave
ret
push
lea
pushl
pushl
push
lea
push
push
push
call
add
test
je
cmpw
jne
testb
je
push
pop
leave
ret
cmpl
jle
push
push
call
pop
pop
leave
ret
mov
mov
and
leave
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
push
ja
push
call
push
call
push
mov
call
add
test
je
mov
jmp
test
jne
push
pop
add
and
push
push
pushl
call
pop
pop
ret
push
mov
test
je
push
call
push
call
pop
test
pop
je
push
push
call
push
call
add
pop
ret
push
call
pop
push
push
pushl
call
pop
ret
push
push
push
push
push
push
push
or
call
xor
pop
mov
mov
mov
mov
test
je
lea
cmp
jae
testb
jne
cmpl
jne
push
call
cmpl
pop
jne
lea
push
call
incl
push
call
pop
lea
push
call
testb
je
push
call
mov
mov
add
add
jmp
orl
mov
sub
push
pop
cltd
idiv
mov
add
cmp
jne
mov
addl
add
inc
cmp
mov
jl
jmp
mov
push
call
test
pop
je
addl
lea
lea
mov
cmp
jae
andb
orl
andl
movb
mov
add
add
jmp
shl
mov
push
call
pop
push
call
pop
mov
pop
pop
pop
pop
pop
pop
ret
mov
push
cmp
push
jae
mov
sar
lea
mov
and
lea
mov
shl
cmpl
jne
cmpl
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
mov
xor
pop
jmp
call
movl
call
andl
or
pop
pop
ret
mov
push
cmp
push
jae
mov
sar
lea
mov
and
lea
mov
shl
add
testb
je
cmpl
je
cmpl
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
orl
xor
jmp
call
movl
call
andl
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
lea
mov
testb
lea
je
mov
ret
call
movl
call
andl
or
ret
push
mov
push
xor
testb
push
je
add
testb
je
or
testb
je
or
pushl
call
test
jne
call
push
call
pop
jmp
cmp
jne
or
jmp
cmp
jne
or
call
mov
cmp
jne
call
movl
call
andl
or
jmp
pushl
push
call
mov
mov
sar
and
or
mov
push
lea
mov
call
add
mov
pop
pop
pop
ret
mov
push
mov
and
sar
push
push
mov
lea
lea
shl
add
cmpl
jne
push
call
cmpl
pop
jne
lea
push
call
incl
push
call
pop
mov
lea
push
call
pop
pop
pop
ret
mov
mov
and
sar
lea
mov
lea
push
call
ret
push
call
mov
xor
mov
mov
cmp
je
add
inc
cmp
jl
cmp
jb
cmp
ja
call
movl
pop
ret
call
mov
pop
mov
ret
cmp
jb
cmp
ja
call
movl
pop
ret
call
movl
pop
ret
call
add
ret
call
add
ret
push
mov
mov
push
cmp
push
jae
mov
and
sar
push
lea
mov
pop
test
je
call
mov
test
je
mov
mov
cmp
je
cmp
je
cmp
je
xor
jmp
mov
jmp
movl
mov
push
xor
mov
and
or
mov
inc
test
je
test
je
movsbl
sub
je
sub
je
dec
je
sub
je
sub
je
jmp
test
jne
andb
mov
jmp
test
jne
orb
mov
jmp
cmpl
jne
mov
jmp
mov
test
je
xor
jmp
and
or
mov
jmp
mov
incl
mov
pop
push
call
pop
mov
jmp
xor
pop
pop
pop
ret
push
mov
push
call
mov
andl
cmp
pop
je
mov
sar
and
mov
lea
lea
jmp
mov
andb
push
call
pop
pop
ret
push
mov
push
pushl
call
pushl
pushl
pushl
pushl
call
pushl
mov
call
add
mov
pop
pop
ret
push
mov
push
push
push
push
mov
imul
mov
mov
test
mov
mov
jne
xor
jmp
mov
testw
je
mov
mov
jmp
movl
jmp
mov
testw
je
mov
test
je
cmp
mov
jb
mov
push
pushl
push
call
sub
sub
add
add
add
mov
jmp
cmp
jb
cmpl
mov
je
xor
divl
mov
sub
push
push
pushl
call
add
test
je
cmp
je
sub
add
jmp
push
call
cmp
pop
je
mov
mov
inc
decl
mov
cmpl
jne
mov
pop
pop
pop
leave
ret
orl
jmp
orl
mov
xor
sub
divl
jmp
push
mov
push
pushl
call
pushl
pushl
pushl
pushl
call
pushl
mov
call
add
mov
pop
pop
ret
push
mov
push
push
push
push
mov
imul
mov
mov
test
mov
mov
jne
xor
jmp
mov
testw
je
mov
mov
jmp
movl
mov
and
je
mov
test
je
cmp
mov
jb
mov
push
pushl
pushl
call
sub
add
add
sub
add
jmp
cmp
jb
test
je
push
call
test
pop
jne
cmpl
je
mov
xor
divl
mov
sub
jmp
mov
push
pushl
pushl
call
add
cmp
je
add
sub
cmp
jb
mov
jmp
mov
push
movsbl
push
call
pop
cmp
pop
je
incl
mov
dec
mov
test
jg
movl
test
jne
mov
pop
pop
pop
leave
ret
orl
mov
jmp
mov
sub
xor
divl
jmp
push
mov
push
push
call
push
call
push
mov
call
add
mov
pop
pop
ret
push
mov
sub
push
push
push
mov
xor
mov
cmp
mov
jge
mov
push
push
push
call
add
cmp
mov
jl
mov
test
jne
sub
jmp
mov
mov
mov
sub
test
mov
je
mov
mov
sar
and
mov
lea
testb
je
mov
cmp
jae
cmpb
jne
incl
inc
jmp
test
jne
call
movl
or
jmp
cmpl
jne
mov
jmp
testb
je
mov
test
jne
and
jmp
sub
add
mov
mov
sar
lea
mov
and
lea
mov
shl
testb
je
push
push
pushl
call
add
cmp
jne
mov
mov
add
cmp
jae
cmpb
jne
incl
inc
jmp
testb
jmp
push
pushl
pushl
call
mov
add
cmp
ja
mov
test
je
test
je
mov
mov
mov
testb
je
incl
mov
sub
mov
mov
add
pop
pop
pop
leave
ret
push
mov
push
pushl
call
pushl
pushl
pushl
call
pushl
mov
call
add
mov
pop
pop
ret
push
mov
push
mov
test
je
mov
test
je
cmp
je
cmp
jne
and
cmp
mov
jne
push
call
add
pop
xor
push
call
mov
pop
test
je
and
mov
jmp
test
je
test
je
test
jne
movl
push
pushl
pushl
call
add
xor
cmp
setne
dec
mov
jmp
call
movl
or
pop
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
push
call
push
call
push
mov
call
add
mov
pop
pop
ret
push
mov
push
call
test
pop
je
or
pop
ret
testb
je
pushl
call
neg
pop
pop
sbb
ret
xor
pop
ret
push
push
mov
xor
push
mov
mov
and
cmp
jne
test
je
mov
mov
sub
test
jle
push
push
pushl
call
add
cmp
jne
mov
test
je
and
mov
jmp
orl
or
mov
andl
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
push
push
xor
xor
call
xor
pop
cmp
jle
mov
mov
test
je
testb
je
push
push
call
mov
pop
pop
mov
mov
test
je
cmpl
jne
push
call
cmp
pop
je
inc
jmp
cmpl
jne
test
je
push
call
cmp
pop
jne
or
mov
pushl
push
call
pop
pop
inc
cmp
jl
push
call
cmpl
pop
mov
je
mov
pop
pop
pop
ret
push
pushl
call
pop
pop
ret
push
mov
push
push
mov
mov
cmp
jl
cmp
jg
mov
test
jl
cmp
jle
push
mov
push
cltd
pop
idiv
push
add
mov
cltd
pop
pop
idiv
test
mov
jge
add
dec
mov
cmp
jl
cmp
jg
mov
test
mov
jne
cmp
jle
inc
lea
imul
sar
add
lea
mov
test
lea
jl
test
jl
test
jl
jmp
test
jge
test
jge
lea
shl
test
je
mov
cltd
idiv
xor
cmp
setne
mov
jmp
xor
test
jne
mov
test
lea
jl
test
jl
test
jl
jmp
test
jge
test
jge
mov
imul
test
je
mov
cltd
idiv
xor
cmp
setne
mov
jmp
xor
test
jne
mov
test
lea
jl
test
jl
test
jl
jmp
test
jge
test
jge
mov
imul
test
je
mov
cltd
idiv
xor
cmp
setne
mov
jmp
xor
test
jne
mov
test
lea
mov
jl
test
jl
test
jl
jmp
test
jge
test
jge
cmpl
je
call
mov
add
lea
push
call
test
pop
je
mov
test
jg
jge
cmpl
jle
mov
add
lea
push
call
pop
jmp
lea
push
call
test
pop
je
push
mov
mov
pop
rep
jmp
or
pop
pop
pop
ret
mov
push
push
push
mov
xor
call
test
mov
jge
xor
jmp
cmpl
jne
push
call
pop
mov
test
mov
je
mov
mov
mov
cltd
idiv
mov
imul
add
lea
mov
cmp
jl
sub
inc
cmp
jl
sub
mov
inc
cmp
jl
inc
sub
jmp
push
pop
mov
mov
cltd
mov
idiv
mov
mov
imul
add
test
jne
mov
mov
push
pop
lea
cmp
jge
inc
add
jmp
mov
dec
mov
push
sub
mov
mov
mov
mov
cltd
idiv
pop
push
add
cltd
idiv
mov
mov
mov
cltd
idiv
pop
mov
imul
add
mov
cltd
idiv
mov
imul
sub
andl
mov
mov
pop
pop
pop
ret
push
mov
push
mov
cmpl
jge
xor
jmp
call
mov
cmp
jle
cmp
jge
sub
mov
lea
push
call
cmpl
pop
mov
je
push
call
test
pop
je
mov
sub
lea
push
call
mov
pop
movl
jmp
push
call
mov
push
call
pop
test
mov
pop
je
sub
sub
push
push
mov
pop
cltd
mov
idiv
test
mov
jge
add
mov
sub
mov
mov
cltd
idiv
add
mov
cltd
idiv
pop
test
mov
jge
add
mov
sub
mov
push
cltd
idiv
pop
add
mov
cltd
idiv
test
mov
jge
add
mov
sub
mov
push
cltd
pop
idiv
mov
test
mov
jle
mov
push
add
pop
cltd
idiv
mov
mov
add
mov
add
mov
pop
pop
ret
jge
mov
push
lea
pop
cltd
idiv
mov
mov
add
mov
test
jg
add
decl
mov
movl
movl
jmp
push
mov
sub
push
push
push
push
call
pushl
call
mov
pop
cmp
pop
mov
jne
xor
jmp
test
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
push
pop
cmp
jne
push
andl
pop
xor
mov
cmp
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
andl
push
pop
xor
mov
lea
rep
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
mov
orb
inc
cmp
jb
push
call
pop
mov
mov
jmp
andl
xor
mov
stos
stos
stos
jmp
cmpl
je
call
call
jmp
or
push
call
pop
mov
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
pushl
pushl
pushl
pushl
call
add
ret
push
mov
push
push
mov
push
push
xor
cmp
push
jne
mov
mov
mov
mov
mov
push
call
cmp
mov
je
push
call
push
call
pop
movl
jmp
mov
cmp
jbe
mov
mov
test
je
cmp
je
mov
movzbl
testb
je
cmpl
jbe
mov
mov
incl
inc
decl
mov
mov
mov
incl
inc
decl
jmp
andl
inc
cmpb
jne
movl
inc
pushl
lea
push
lea
push
mov
pushl
push
call
add
inc
cmpl
ja
cmpl
je
push
call
pop
jmp
push
call
cmpl
pop
pop
pop
jbe
mov
andb
mov
sub
leave
ret
xor
leave
ret
push
mov
movsbl
push
push
cmp
push
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
dec
jne
mov
push
mov
mov
pop
mov
cltd
idiv
test
jne
push
pop
pushl
pushl
push
push
jmp
pushl
mov
mov
mov
pushl
push
pushl
jmp
pushl
mov
mov
pushl
mov
pushl
jmp
pushl
mov
mov
pushl
mov
pushl
jmp
mov
mov
movb
incl
mov
decl
jmp
pushl
mov
mov
mov
pushl
push
pushl
jmp
sub
je
dec
dec
je
dec
dec
je
dec
je
dec
jne
mov
pushl
mov
mov
pushl
mov
push
mov
push
cltd
pop
idiv
push
mov
mov
cltd
pop
add
idiv
imul
add
push
call
add
jmp
mov
andl
push
pushl
pushl
pushl
pushl
jmp
mov
mov
mov
mov
test
jne
push
pop
jmp
lea
jmp
mov
mov
mov
mov
mov
cmp
jge
xor
jmp
mov
push
cltd
pop
idiv
push
mov
mov
cltd
pop
idiv
cmp
jl
inc
pushl
pushl
push
push
jmp
pushl
mov
mov
mov
pushl
push
pushl
jmp
cmp
jg
je
sub
je
dec
je
dec
je
dec
je
sub
jne
mov
pushl
mov
mov
pushl
mov
push
inc
push
jmp
pushl
mov
mov
mov
pushl
push
pushl
jmp
cmpl
je
mov
mov
mov
andl
push
push
push
pushl
pushl
jmp
mov
mov
mov
push
push
push
pushl
pushl
call
add
cmpl
je
mov
push
push
push
pushl
movb
incl
decl
pushl
jmp
pushl
mov
mov
pushl
mov
pushl
jmp
pushl
mov
mov
pushl
mov
pushl
jmp
mov
pushl
mov
mov
pushl
mov
push
jmp
sub
je
sub
je
dec
je
dec
je
dec
jne
call
mov
pushl
xor
cmp
pushl
setne
pushl
jmp
mov
pushl
mov
mov
pushl
mov
push
push
cltd
pop
idiv
jmp
cmpl
je
mov
andl
push
pushl
pushl
pushl
pushl
call
add
jmp
mov
push
pushl
pushl
pushl
pushl
jmp
pushl
mov
mov
mov
pushl
push
pushl
jmp
mov
pushl
cmpl
pushl
mov
jg
pushl
jmp
pushl
call
add
pop
pop
pop
pop
ret
mov
push
push
cmpl
je
mov
mov
mov
test
je
mov
mov
incl
inc
decl
jne
pop
pop
ret
push
mov
push
xor
push
cmp
mov
je
pushl
pushl
pushl
call
add
jmp
mov
mov
cmp
jae
dec
push
mov
lea
test
je
push
mov
push
cltd
pop
idiv
mov
add
mov
mov
cltd
idiv
incl
dec
cmp
mov
jne
pop
mov
add
sub
pop
jmp
mov
pop
leave
ret
push
mov
push
push
mov
push
mov
mov
cmpl
jbe
mov
push
cltd
pop
idiv
mov
add
mov
inc
cltd
idiv
decl
test
mov
jg
mov
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
push
mov
push
push
cmpb
je
mov
mov
xor
cmp
je
mov
mov
mov
lea
mov
mov
mov
mov
inc
incl
mov
cmp
je
decl
mov
movsbl
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
movzbl
testb
je
mov
mov
mov
incl
decl
mov
mov
mov
incl
inc
decl
cmpb
jne
pop
pop
pop
leave
ret
dec
je
dec
je
dec
je
dec
jne
movb
jmp
movb
jmp
movl
movb
jmp
dec
je
dec
je
jmp
movl
movb
jmp
push
push
call
pop
test
pop
jne
add
jmp
push
push
call
pop
test
pop
jne
add
mov
movb
jmp
test
je
add
mov
test
je
cmpl
je
cmp
je
mov
movzbl
testb
je
cmpl
jbe
mov
mov
incl
inc
decl
mov
mov
mov
incl
inc
decl
jmp
inc
jmp
add
jmp
dec
je
dec
je
dec
je
dec
jne
movb
jmp
movb
jmp
movl
movb
jmp
sub
je
sub
je
sub
je
dec
je
sub
jne
mov
dec
dec
je
dec
dec
jne
movb
jmp
movb
jmp
mov
cmpl
mov
jg
mov
jmp
mov
test
jle
cmpl
jbe
mov
mov
movzbl
testb
je
cmpl
jbe
mov
mov
incl
inc
decl
mov
mov
mov
incl
inc
decl
decl
cmpl
jg
mov
jmp
dec
je
dec
je
jmp
movl
movb
jmp
dec
je
dec
je
jmp
movl
movb
jmp
dec
je
dec
je
jmp
movl
movb
pushl
push
push
pushl
pushl
call
add
jmp
push
mov
test
je
push
call
inc
push
call
pop
test
pop
je
push
push
call
pop
pop
pop
ret
xor
pop
ret
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
inc
inc
dec
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
and
cmp
jne
dec
pop
pop
ret
push
mov
push
mov
push
push
test
jne
pushl
call
pop
jmp
mov
test
jne
push
call
pop
xor
jmp
xor
cmp
ja
push
call
push
call
pop
mov
test
pop
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
mov
pop
test
je
mov
dec
cmp
jb
mov
push
push
push
call
push
pushl
call
add
test
jne
test
jne
push
pop
add
and
push
push
pushl
call
mov
test
je
mov
dec
cmp
jb
mov
push
push
push
call
push
pushl
call
add
push
call
pop
jmp
push
call
test
pop
jne
push
pop
add
and
push
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
jne
jmp
mov
pop
pop
pop
pop
ret
push
pushl
pushl
pushl
call
add
ret
push
mov
sub
push
andl
push
push
mov
mov
lea
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
test
je
mov
inc
jmp
cmp
mov
jne
orl
jmp
cmp
jne
mov
inc
mov
mov
test
jl
cmp
je
cmp
jg
push
test
pop
jne
cmp
je
movl
jmp
mov
cmp
je
cmp
je
movl
jmp
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
mov
inc
inc
mov
or
xor
divl
mov
mov
cmpl
movzbl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsbl
sub
jmp
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsbl
push
call
pop
mov
sub
cmp
jae
mov
orl
cmp
jb
jne
or
xor
divl
cmp
jbe
orl
jmp
imul
add
mov
mov
incl
mov
jmp
mov
decl
mov
test
jne
test
je
mov
mov
andl
jmp
test
mov
jne
test
jne
and
je
cmpl
ja
test
jne
cmp
jbe
call
testb
movl
je
orl
jmp
mov
and
neg
sbb
neg
add
mov
test
je
mov
mov
testb
je
mov
neg
mov
mov
jmp
mov
test
je
mov
xor
pop
pop
pop
leave
ret
push
pushl
pushl
pushl
call
add
ret
push
mov
push
mov
test
push
je
cmpb
je
mov
test
jne
push
call
mov
pop
test
jne
call
movl
jmp
movl
lea
push
push
pushl
push
call
cmp
jb
cmpl
jne
push
call
pop
call
movl
jmp
test
jne
cmp
jne
push
call
pop
call
push
call
pop
xor
jmp
mov
jmp
pushl
pushl
call
pop
pop
pop
pop
pop
ret
push
mov
push
andl
push
mov
push
push
push
call
cmp
pop
jb
cmpb
jne
mov
test
je
push
push
push
call
add
andb
inc
inc
jmp
mov
test
je
andb
andl
cmpb
mov
mov
mov
je
mov
movzbl
testb
je
inc
jmp
cmp
je
cmp
je
cmp
jne
mov
jmp
lea
mov
inc
cmpb
jne
mov
mov
test
je
cmpl
je
sub
cmp
jb
mov
push
push
pushl
call
mov
add
andb
mov
mov
jmp
mov
test
je
andb
mov
test
je
cmp
jb
cmpl
je
sub
cmp
jb
mov
push
push
pushl
call
mov
add
andb
mov
mov
test
je
sub
cmp
jae
mov
push
pushl
push
call
add
andb
jmp
mov
test
je
sub
cmp
jae
mov
push
push
push
call
add
andb
mov
test
je
andb
pop
pop
pop
leave
ret
push
push
call
mov
push
call
pop
test
pop
je
mov
push
sub
call
pop
jmp
push
call
pop
push
push
pushl
call
mov
mov
pop
ret
push
call
pop
ret
push
push
mov
cmp
jbe
xor
jmp
push
call
mov
push
call
pop
test
pop
je
push
xor
cmp
ja
push
push
push
call
add
test
je
mov
push
call
pop
mov
pop
jmp
push
call
test
pop
jne
push
pop
add
and
push
push
push
pushl
call
pop
pop
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
push
push
mov
mov
mov
test
je
test
jne
test
je
andl
test
je
mov
and
mov
mov
mov
andl
andl
and
or
test
mov
jne
cmp
je
cmp
jne
push
call
test
pop
jne
push
call
pop
testw
push
je
mov
mov
sub
lea
mov
mov
dec
test
mov
jle
push
push
push
call
add
mov
jmp
cmp
je
mov
mov
sar
and
mov
lea
lea
jmp
mov
testb
je
push
push
push
call
add
mov
mov
mov
jmp
push
lea
pop
push
push
push
call
add
mov
cmp
pop
je
orl
jmp
mov
and
jmp
or
mov
or
pop
pop
pop
ret
push
mov
sub
push
push
push
mov
xor
mov
inc
test
mov
mov
mov
je
mov
xor
jmp
mov
mov
xor
cmp
jl
cmp
jl
cmp
jg
movsbl
mov
and
jmp
xor
movsbl
sar
cmp
mov
ja
jmp
orl
mov
mov
mov
mov
mov
mov
jmp
movsbl
sub
je
sub
je
sub
je
dec
dec
je
sub
jne
orl
jmp
orl
jmp
orl
jmp
orb
jmp
orl
jmp
cmp
jne
lea
push
call
test
pop
mov
jge
orl
neg
mov
jmp
mov
movsbl
lea
lea
jmp
mov
jmp
cmp
jne
lea
push
call
test
pop
mov
jge
orl
jmp
lea
movsbl
lea
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
orb
jmp
orl
jmp
orl
jmp
cmpb
jne
cmpb
jne
inc
inc
orb
mov
jmp
mov
mov
mov
movzbl
testb
je
lea
push
pushl
movsbl
push
call
mov
add
inc
mov
lea
push
pushl
movsbl
push
call
add
jmp
movsbl
cmp
jg
cmp
jge
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
sub
jne
testw
jne
orb
mov
cmp
jne
mov
lea
push
call
testw
pop
mov
mov
je
test
jne
mov
mov
movl
mov
mov
dec
test
je
cmpw
je
inc
inc
jmp
movl
add
orl
lea
cmp
mov
jge
movl
jmp
testw
jne
orb
testw
lea
push
je
call
push
lea
push
call
add
mov
test
jge
movl
jmp
sub
je
sub
je
dec
je
jmp
call
pop
mov
movl
lea
mov
jmp
lea
push
call
test
pop
je
mov
test
je
testb
je
movswl
shr
mov
mov
movl
jmp
andl
mov
movswl
jmp
mov
mov
push
jmp
jne
cmp
jne
movl
mov
pushl
add
mov
pushl
mov
mov
mov
mov
movsbl
push
lea
push
lea
push
call
mov
add
and
je
cmpl
jne
lea
push
call
pop
cmp
jne
test
jne
lea
push
call
pop
cmpb
jne
orb
lea
mov
push
call
pop
jmp
sub
je
sub
je
dec
je
dec
je
sub
je
dec
dec
je
sub
jne
movl
jmp
sub
sar
jmp
test
jne
mov
mov
mov
mov
dec
test
je
cmpb
je
inc
jmp
sub
jmp
movl
movl
testb
movl
je
mov
movb
add
movl
mov
jmp
testb
movl
je
orb
jmp
lea
push
call
testb
pop
je
mov
mov
jmp
mov
mov
movl
jmp
orl
movl
testb
je
lea
push
call
pop
jmp
testb
je
testb
lea
push
je
call
pop
movswl
cltd
jmp
call
pop
movzwl
jmp
testb
lea
push
je
call
pop
jmp
call
pop
xor
testb
je
test
jg
jl
test
jae
neg
adc
mov
neg
orb
mov
jmp
mov
mov
testb
jne
and
cmpl
jge
movl
jmp
andl
mov
or
jne
andl
lea
mov
mov
decl
test
jg
mov
or
je
mov
cltd
push
push
push
push
mov
mov
call
pushl
mov
add
pushl
push
push
call
cmp
mov
mov
jle
add
mov
decl
mov
jmp
lea
sub
incl
testb
mov
je
mov
cmpb
jne
test
jne
decl
inc
mov
movb
mov
cmpl
jne
mov
test
je
test
je
movb
jmp
test
je
movb
jmp
test
je
movb
movl
mov
sub
sub
test
jne
lea
push
pushl
push
push
call
add
lea
push
lea
pushl
pushl
push
call
add
test
je
test
jne
lea
push
pushl
push
push
call
add
cmpl
je
cmpl
jle
mov
mov
lea
mov
inc
push
lea
push
inc
call
pop
test
pop
jle
lea
push
pushl
push
lea
push
call
add
mov
dec
test
jne
jmp
lea
push
pushl
pushl
pushl
call
add
testb
je
lea
push
pushl
push
push
call
add
mov
mov
inc
test
mov
jne
mov
pop
pop
pop
leave
ret
stos
pop
inc
add
push
inc
add
push
inc
add
pop
inc
add
pop
inc
add
add
pop
inc
add
in
mov
decl
js
mov
mov
mov
incl
movzbl
jmp
push
pushl
call
pop
pop
cmp
mov
jne
orl
pop
ret
incl
pop
ret
push
push
mov
mov
dec
test
jle
mov
push
pushl
pushl
call
add
cmpl
je
mov
dec
test
jg
pop
pop
ret
push
mov
mov
dec
push
push
test
jle
mov
mov
movsbl
push
inc
pushl
push
call
add
cmpl
je
mov
dec
test
jg
pop
pop
pop
ret
mov
addl
mov
mov
ret
mov
addl
mov
mov
mov
ret
mov
addl
mov
mov
ret
push
mov
push
mov
push
mov
cmp
je
call
mov
testb
je
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
add
jmp
cmpl
je
cmpl
jne
cmp
jbe
mov
mov
test
je
movzbl
push
pushl
pushl
push
pushl
pushl
pushl
push
call
add
jmp
pushl
pushl
pushl
push
pushl
pushl
pushl
push
call
add
push
pop
pop
pop
pop
ret
push
mov
sub
mov
andb
mov
cmp
mov
jl
mov
cmp
jl
call
push
push
mov
mov
push
mov
cmp
jne
cmpl
jne
cmp
jne
cmpl
jne
call
cmpl
je
call
mov
call
mov
push
push
mov
movb
call
pop
test
pop
jne
call
cmp
jne
cmpl
jne
cmp
jne
cmpl
jne
call
cmp
jne
cmpl
jne
cmp
jne
mov
lea
push
lea
push
push
pushl
pushl
call
add
mov
mov
cmp
jae
cmp
jg
cmp
jg
mov
mov
mov
test
mov
jle
mov
mov
lea
mov
test
mov
jle
pushl
pushl
pushl
call
add
test
jne
decl
add
cmp
jg
decl
addl
cmpl
jg
jmp
pushl
pushl
pushl
push
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
mov
incl
add
jmp
cmpb
je
push
push
call
pop
pop
pop
pop
pop
leave
ret
cmpb
jne
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
jmp
jmp
push
mov
push
push
push
push
call
cmpl
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
test
jne
mov
lea
push
lea
push
push
pushl
pushl
call
add
mov
mov
cmp
jae
cmp
jl
cmp
jg
mov
mov
shl
add
mov
test
je
cmpb
jne
push
add
pushl
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
incl
add
jmp
pop
pop
leave
ret
push
push
mov
mov
test
je
cmpb
lea
je
mov
mov
cmp
je
add
push
push
call
pop
test
pop
jne
testb
je
testb
je
mov
mov
test
je
testb
je
test
je
testb
jne
xor
jmp
push
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
cmp
je
cmp
jle
cmp
jl
call
andl
mov
mov
test
je
push
push
push
call
orl
jmp
pushl
call
pop
ret
mov
orl
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
cmpl
je
xor
ret
jmp
push
mov
cmpl
push
mov
push
push
mov
je
pushl
push
push
pushl
call
add
cmpl
pushl
jne
push
jmp
pushl
call
mov
pushl
pushl
pushl
push
call
mov
push
pushl
inc
mov
pushl
pushl
pushl
push
pushl
call
add
test
je
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
andl
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
andl
movl
pushl
pushl
push
pushl
push
call
add
mov
andl
orl
call
mov
mov
mov
pop
pop
pop
leave
ret
pushl
call
pop
ret
mov
andl
push
lea
push
call
pop
pop
xor
jmp
mov
mov
mov
mov
call
mov
mov
call
mov
mov
cmpl
jne
cmpl
jne
cmpl
jne
cmpl
jne
cmpl
je
call
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
cmpl
jne
cmpl
jne
cmpl
jne
push
pop
ret
xor
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
test
je
cmpb
je
mov
test
je
mov
lea
andl
testb
je
mov
push
pushl
call
pop
pop
test
je
push
push
call
pop
pop
test
je
mov
mov
mov
add
push
push
call
pop
pop
mov
jmp
mov
testb
je
mov
push
pushl
call
pop
pop
test
je
push
push
call
pop
pop
test
je
pushl
pushl
push
call
add
cmpl
jne
mov
test
je
add
push
jmp
cmpl
mov
push
pushl
jne
call
pop
pop
test
je
push
push
call
pop
pop
test
je
pushl
add
push
pushl
call
pop
pop
push
push
call
add
jmp
call
pop
pop
test
je
push
push
call
pop
pop
test
je
pushl
call
pop
test
je
testb
je
push
lea
push
pushl
call
pop
pop
push
pushl
push
call
jmp
lea
push
pushl
call
pop
pop
push
pushl
push
call
jmp
call
orl
mov
mov
pop
pop
pop
leave
ret
push
pop
ret
mov
jmp
push
mov
push
push
push
mov
push
mov
push
push
push
push
push
mov
mov
test
je
mov
mov
test
je
andl
push
pushl
call
orl
mov
mov
pop
pop
pop
leave
ret
xor
cmp
setne
ret
mov
jmp
mov
push
mov
mov
mov
add
test
jl
mov
mov
mov
add
add
pop
ret
int3
int3
int3
push
mov
sub
push
push
mov
add
mov
mov
push
pushl
mov
mov
call
push
push
call
pop
pop
mov
pop
mov
push
mov
cmp
jne
mov
push
call
pop
pop
pop
leave
ret
push
call
call
cmp
mov
je
push
push
call
mov
pop
test
pop
je
push
pushl
call
test
je
push
call
pop
call
orl
push
mov
pop
pop
ret
xor
pop
ret
call
mov
cmp
je
push
call
orl
ret
mov
movl
movl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
pop
test
pop
je
push
pushl
call
test
je
push
call
pop
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
mov
cmp
je
push
mov
test
jne
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
push
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
push
push
push
push
push
mov
xor
mov
call
cmp
je
movl
call
call
mov
jmp
push
pop
ret
mov
andl
orl
call
jmp
push
mov
push
push
push
mov
push
mov
push
push
push
push
push
mov
andl
mov
test
je
movl
call
jmp
push
pop
ret
mov
andl
orl
call
jmp
push
mov
pushl
call
pushl
call
pushl
call
pushl
call
pop
ret
push
push
mov
mov
mov
test
je
cmp
je
cmp
je
cmp
je
cmp
je
push
call
pushl
call
pop
add
cmp
jl
pushl
call
pushl
call
pushl
call
pushl
call
pop
pop
ret
push
mov
mov
push
cmpl
lea
jne
push
push
call
mov
pop
test
jne
push
call
pop
push
call
cmpl
pop
push
jne
call
mov
jmp
call
pop
push
call
pop
pop
pushl
call
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
inc
ret
mov
test
je
mov
inc
cmp
jne
inc
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
push
mov
sub
andb
push
push
mov
xor
push
mov
mov
test
mov
je
mov
jmp
mov
xor
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
cmp
je
decl
push
lea
push
push
call
pop
pop
push
call
movzbl
inc
push
call
add
test
je
movzbl
inc
push
call
pop
jmp
cmpb
jne
andb
andb
andb
andb
andb
andb
xor
andb
mov
mov
mov
movb
mov
movzbl
inc
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
test
je
mov
incl
lea
lea
mov
jmp
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
incb
jmp
cmpb
jne
cmpb
lea
jne
incl
andl
andl
mov
jmp
incb
jmp
cmp
je
cmp
je
cmp
je
incb
jmp
incb
incb
jmp
decb
decb
cmpb
je
cmpb
mov
jne
mov
mov
add
mov
mov
mov
andb
cmpb
jne
mov
cmp
je
cmp
je
orb
jmp
movb
mov
movzbl
or
cmp
mov
je
cmp
je
cmp
je
pushl
lea
push
call
pop
jmp
pushl
incl
call
pop
mov
xor
cmp
je
cmp
je
cmp
jg
je
cmp
je
cmp
je
jle
cmp
jle
cmp
je
cmp
jne
cmpb
mov
je
jmp
push
pop
mov
cmp
jne
movb
jmp
mov
lea
cmp
jne
mov
lea
jmp
cmp
jne
mov
decl
incl
push
call
mov
pop
mov
jmp
mov
cmpl
je
cmpl
jle
movl
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
mov
decl
test
je
incl
mov
inc
incl
push
call
mov
pop
mov
jmp
cmp
jne
mov
decl
test
je
incl
push
call
mov
mov
mov
pop
mov
inc
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
mov
decl
test
je
incl
mov
inc
incl
push
call
mov
pop
mov
jmp
cmpl
je
cmp
je
cmp
jne
mov
decl
test
je
movb
inc
incl
push
call
mov
pop
cmp
mov
jne
mov
inc
jmp
cmp
jne
mov
decl
test
jne
and
jmp
incl
push
call
mov
pop
mov
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
mov
decl
test
je
incl
mov
inc
jmp
decl
push
push
call
cmpl
pop
pop
je
cmpb
jne
incl
andb
lea
push
movsbl
pushl
dec
push
call
add
jmp
cmp
jne
incl
movl
cmpb
jle
movb
mov
jmp
mov
sub
je
sub
je
dec
dec
je
sub
je
sub
je
movzbl
cmp
jne
decb
cmpb
jne
mov
mov
jmp
cmpb
jle
movb
mov
inc
mov
cmpb
jne
mov
lea
jmp
cmp
jne
decl
jne
cmpl
je
movb
jmp
pushl
incl
call
mov
pop
mov
cmp
jne
pushl
incl
call
mov
pop
cmp
mov
je
cmp
je
cmp
movl
je
push
pop
jmp
pushl
decl
push
call
pop
pop
push
pop
jmp
pushl
incl
call
pop
mov
mov
push
jmp
cmpb
jle
movb
mov
orb
push
lea
push
push
call
add
cmpl
jne
cmpb
jne
mov
inc
movb
jmp
mov
mov
cmp
je
inc
cmp
jne
test
je
mov
cmp
je
inc
cmp
jae
mov
jmp
mov
mov
cmp
ja
movzbl
movzbl
sub
inc
mov
mov
and
mov
shr
shl
lea
or
inc
dec
jne
xor
jmp
movzbl
mov
mov
and
mov
shr
shl
lea
or
jmp
cmpb
je
cmpl
jne
mov
mov
mov
decl
push
pushl
mov
call
pop
pop
cmpl
je
mov
decl
test
je
incl
push
call
cmp
pop
mov
je
mov
push
and
pop
movsbl
shl
mov
sar
movsbl
xor
test
je
cmpb
jne
cmpb
je
mov
mov
movzbl
testb
je
incl
push
call
pop
mov
pushl
lea
push
lea
push
call
mov
add
mov
inc
inc
jmp
mov
inc
mov
jmp
incl
jmp
decl
push
push
call
pop
pop
cmp
je
cmpb
jne
incl
cmpl
je
cmpb
mov
je
andw
jmp
andb
jmp
movb
mov
cmp
jne
movb
jmp
cmp
jne
decl
jne
cmpl
je
movb
jmp
pushl
incl
call
pop
mov
mov
cmpl
je
cmpb
jne
cmp
jne
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
mov
mov
push
pop
call
push
mov
mov
call
mov
pop
mov
jmp
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
cmp
jne
cmp
jge
mov
mov
push
pop
call
jmp
push
push
pushl
pushl
call
mov
mov
incl
lea
cltd
add
adc
cmpl
je
decl
je
pushl
incl
call
mov
pop
mov
jmp
pushl
decl
push
call
pop
pop
cmpb
je
mov
mov
neg
adc
mov
neg
mov
jmp
cmpb
jne
cmp
je
cmp
je
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
cmp
jne
cmp
jge
shl
jmp
lea
shl
jmp
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
push
shl
call
mov
pop
mov
incl
cmpl
lea
je
decl
je
pushl
incl
call
mov
pop
mov
jmp
pushl
decl
push
call
pop
pop
cmpb
je
neg
cmp
jne
andl
cmpl
je
cmpb
jne
incl
cmpl
je
mov
mov
mov
mov
mov
jmp
cmpb
mov
je
mov
jmp
mov
incb
incl
mov
jmp
incl
push
call
mov
pop
movzbl
inc
cmp
mov
mov
jne
mov
movzbl
testb
je
incl
push
call
pop
movzbl
inc
cmp
mov
jne
decl
cmpl
jne
cmpb
jne
mov
cmpb
jne
mov
mov
test
jne
jmp
pushl
decl
pushl
jmp
decl
push
push
call
pop
pop
jmp
decl
push
push
call
decl
push
push
call
add
cmpl
jne
mov
test
jne
cmp
jne
or
jmp
mov
pop
pop
pop
leave
ret
cmpl
push
jle
mov
push
push
call
pop
pop
jmp
mov
mov
mov
and
test
jne
and
sub
mov
pop
ret
mov
decl
js
mov
movzbl
inc
mov
ret
push
call
pop
ret
cmpl
je
pushl
pushl
call
pop
pop
ret
push
mov
push
pushl
incl
call
mov
push
call
pop
test
pop
jne
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
sub
push
mov
sub
cmp
jl
cmp
jg
push
push
mov
mov
add
test
jne
cmp
jle
inc
call
mov
lea
imul
sar
mov
mov
add
mov
add
mov
lea
mov
mov
lea
imul
add
imul
add
dec
cmpl
mov
pop
pop
lea
mov
je
cmpl
jne
cmpl
je
lea
push
call
pop
mov
test
je
add
mov
jmp
or
pop
leave
ret
push
push
call
pop
pop
ret
push
mov
sub
fldl
fstpl
fldl
fstpl
fldl
fdivl
fmull
fsubrl
fstpl
fldl
fcompl
fnstsw
sahf
jbe
push
pop
leave
ret
xor
leave
ret
push
call
test
je
push
push
call
test
je
push
call
ret
jmp
push
mov
movsbl
push
call
cmp
pop
je
inc
cmpl
jle
movsbl
push
push
call
pop
pop
jmp
movsbl
mov
mov
and
test
jne
mov
mov
mov
inc
mov
mov
mov
mov
inc
test
jne
pop
ret
mov
mov
mov
test
je
cmp
je
mov
inc
test
jne
mov
inc
test
je
mov
test
je
cmp
je
cmp
je
inc
jmp
mov
dec
cmpb
je
cmp
jne
dec
mov
inc
inc
test
mov
jne
ret
mov
fldl
fcompl
fnstsw
sahf
jb
push
pop
ret
xor
ret
push
mov
push
push
cmpl
pushl
je
lea
push
call
mov
pop
pop
mov
mov
mov
mov
leave
ret
lea
push
call
mov
pop
pop
mov
mov
leave
ret
push
mov
sub
lea
push
push
lea
push
mov
push
push
fldl
fstpl
call
mov
lea
push
mov
lea
push
xor
cmpl
sete
xor
test
setg
add
add
push
call
lea
push
push
pushl
push
pushl
call
mov
add
pop
leave
ret
push
mov
push
xor
cmp
push
mov
push
mov
je
xor
cmp
setg
push
xor
cmpl
sete
add
push
call
pop
pop
cmpl
mov
jne
movb
lea
cmp
jle
mov
lea
mov
mov
mov
mov
xor
cmp
push
sete
add
add
push
call
cmp
pop
pop
mov
je
movb
mov
inc
cmpb
je
mov
dec
jns
neg
movb
inc
cmp
jl
mov
push
cltd
pop
idiv
add
mov
cltd
idiv
mov
inc
cmp
jl
mov
push
cltd
pop
idiv
add
mov
cltd
idiv
mov
add
mov
pop
pop
pop
pop
ret
push
mov
sub
lea
push
push
lea
push
mov
push
push
fldl
fstpl
call
mov
lea
push
mov
add
push
xor
cmpl
sete
add
push
call
lea
push
push
push
pushl
call
mov
add
pop
leave
ret
push
mov
push
push
mov
mov
push
mov
dec
cmpb
je
cmp
jne
xor
cmpl
sete
add
add
mov
movb
andb
cmpl
mov
jne
movb
lea
mov
test
jg
push
push
call
pop
movb
pop
inc
jmp
add
cmpl
jle
push
push
call
mov
pop
mov
mov
inc
pop
test
jge
cmpb
je
neg
jmp
neg
cmp
jl
mov
pushl
push
call
pushl
push
push
call
add
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
lea
push
push
lea
push
mov
push
push
fldl
fstpl
call
mov
mov
lea
xor
cmpl
sete
add
mov
lea
push
push
push
call
mov
add
dec
cmp
setl
cmp
jl
cmp
jge
test
je
mov
inc
test
jne
and
lea
push
push
push
pushl
call
add
jmp
lea
push
push
pushl
push
pushl
call
add
pop
pop
pop
leave
ret
push
mov
cmpl
je
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
add
pop
ret
pushl
pushl
pushl
pushl
call
jmp
pushl
pushl
pushl
pushl
call
add
pop
ret
push
mov
test
je
push
mov
push
call
inc
push
push
add
push
call
add
pop
pop
ret
push
mov
sub
push
push
xor
push
push
push
push
push
pushl
lea
xor
push
lea
push
call
mov
add
test
je
mov
mov
mov
jmp
lea
push
lea
push
call
pop
test
pop
jne
cmp
jne
mov
test
jne
cmp
jne
or
mov
mov
sub
fldl
mov
pop
fstpl
pop
mov
pop
leave
ret
mov
push
push
test
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
mov
test
pop
jne
push
push
mov
call
pop
mov
test
pop
jne
push
call
pop
xor
mov
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
sar
and
mov
lea
mov
cmp
je
test
jne
orl
add
inc
cmp
jl
pop
ret
call
cmpb
je
jmp
ret
mov
mov
cmp
jb
cmp
ja
sub
sar
add
push
call
pop
ret
add
push
call
ret
mov
cmp
jge
add
push
call
pop
ret
mov
add
push
call
ret
mov
mov
cmp
jb
cmp
ja
sub
sar
add
push
call
pop
ret
add
push
call
ret
mov
cmp
jge
add
push
call
pop
ret
mov
add
push
call
ret
push
mov
cmp
jae
mov
mov
sar
and
mov
lea
testb
je
push
push
call
push
call
push
mov
call
add
mov
pop
pop
ret
call
movl
call
andl
or
pop
ret
push
mov
push
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
and
sar
pop
mov
lea
andb
test
je
push
call
pop
or
jmp
xor
pop
pop
ret
push
mov
mov
test
je
test
je
pushl
call
andw
xor
pop
mov
mov
mov
pop
ret
push
mov
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
pushl
pushl
pushl
call
add
mov
test
je
cmp
je
mov
test
jne
mov
push
cmp
je
mov
sar
and
mov
lea
lea
jmp
mov
mov
pop
and
cmp
jne
or
mov
cmpl
jne
mov
test
je
test
jne
movl
mov
dec
mov
movzbl
inc
mov
pop
ret
neg
sbb
and
add
or
andl
or
pop
ret
push
mov
push
push
push
push
mov
push
mov
xor
mov
mov
mov
cmp
je
cmp
je
cmp
jne
mov
jmp
xor
or
jmp
mov
or
push
pop
mov
inc
cmp
je
cmp
je
movsbl
cmp
jg
je
sub
je
sub
je
sub
je
dec
jne
cmp
jne
movl
or
jmp
cmp
jne
movl
or
jmp
test
jne
or
jmp
test
jne
and
and
or
or
jmp
mov
test
jne
or
jmp
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
movl
and
jmp
cmp
jne
movl
or
jmp
test
je
xor
jmp
or
jmp
push
pushl
push
pushl
call
mov
add
cmp
jge
xor
jmp
mov
incl
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
push
push
push
xor
xor
call
xor
cmp
pop
jle
mov
mov
cmp
je
testb
jne
push
push
call
pop
pop
mov
mov
testb
je
push
push
call
pop
pop
inc
cmp
jl
jmp
mov
jmp
push
shl
call
pop
mov
mov
mov
mov
cmp
je
add
push
call
mov
mov
add
push
call
mov
mov
cmp
je
orl
mov
mov
mov
mov
mov
push
call
pop
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
cmpl
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
jmp
lock
cmpl
jg
push
jmp
lock
push
call
movl
mov
xor
nop
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
mov
pop
or
jne
lock
jmp
push
call
add
mov
pop
pop
pop
leave
ret
push
mov
pushl
call
test
pop
je
cmp
jne
xor
jmp
cmp
jne
push
pop
incl
testw
jne
cmpl
push
push
lea
mov
jne
push
call
test
pop
mov
jne
lea
push
mov
mov
pop
mov
mov
jmp
mov
mov
mov
mov
mov
orw
push
pop
pop
pop
pop
ret
xor
pop
ret
cmpl
push
je
mov
testb
je
push
call
andb
andl
andl
andl
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
mov
mov
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
test
je
push
call
test
pop
je
push
call
jmp
xor
pop
ret
push
call
mov
ret
pushl
call
ret
push
mov
sub
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
andl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
andl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
lea
mov
mov
mov
mov
mov
addl
inc
inc
cmp
jl
xor
mov
lea
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
leave
ret
push
push
push
mov
mov
test
je
mov
add
cmp
jae
lea
cmpl
je
push
call
mov
add
add
add
cmp
jb
pushl
call
andl
pop
add
cmp
jl
pop
pop
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
push
xor
cmp
push
mov
jle
mov
push
push
mov
lea
push
push
pushl
call
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pop
pop
pushl
push
pushl
call
pushl
call
pop
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
xor
or
repnz
cmp
je
dec
dec
cmp
jae
mov
mov
mov
mov
inc
dec
jmp
mov
pop
pop
leave
ret
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
inc
bts
jmp
mov
or
nop
inc
mov
or
je
inc
bt
jb
mov
add
pop
leave
ret
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
inc
bts
jmp
mov
or
nop
inc
mov
or
je
inc
bt
jae
mov
add
pop
leave
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
push
mov
mov
lea
sub
mov
and
shr
mov
imul
lea
mov
mov
dec
cmp
mov
mov
lea
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
jae
mov
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
mov
sar
dec
mov
cmp
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
mov
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
push
pop
pop
pop
pop
leave
ret
push
mov
cmp
jae
mov
mov
sar
and
mov
lea
testb
je
push
push
call
pushl
pushl
push
call
push
mov
call
add
mov
pop
pop
ret
call
movl
call
andl
or
pop
ret
push
mov
sub
andl
cmpl
push
mov
push
push
mov
je
mov
mov
and
sar
lea
mov
lea
shl
add
mov
test
jne
test
je
mov
cmp
je
decl
mov
mov
lea
movl
movb
lea
push
push
mov
pushl
push
pushl
call
test
jne
call
push
pop
cmp
jne
call
movl
call
mov
jmp
cmp
je
push
call
pop
or
jmp
mov
mov
add
lea
mov
test
je
test
je
cmpb
jne
or
jmp
and
mov
mov
mov
mov
add
cmp
mov
jae
mov
mov
cmp
je
cmp
je
mov
inc
incl
jmp
dec
cmp
jae
mov
inc
cmpb
jne
addl
jmp
movb
inc
mov
jmp
lea
push
push
incl
lea
push
push
mov
pushl
call
test
jne
call
test
jne
cmpl
je
mov
testb
je
mov
cmp
je
movb
mov
inc
mov
jmp
cmp
jne
cmpb
jne
movb
jmp
push
push
pushl
call
add
cmpb
je
movb
inc
mov
cmp
jb
jmp
mov
lea
mov
test
jne
or
mov
sub
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
cmp
jae
mov
mov
sar
and
mov
lea
testb
je
push
push
call
pushl
pushl
push
call
push
mov
call
add
mov
pop
pop
ret
call
movl
call
andl
or
pop
ret
push
mov
sub
push
push
push
xor
cmp
mov
mov
jne
xor
jmp
mov
sar
lea
mov
and
lea
mov
shl
testb
je
push
push
pushl
call
add
mov
add
testb
je
mov
cmp
mov
mov
jbe
lea
mov
sub
cmp
jae
mov
incl
mov
cmp
jne
incl
movb
inc
mov
inc
mov
lea
sub
cmp
jl
mov
lea
sub
lea
push
push
lea
push
push
mov
pushl
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
call
movl
call
mov
jmp
call
mov
jmp
lea
push
push
pushl
pushl
pushl
call
test
je
mov
mov
mov
jmp
call
mov
jmp
pushl
call
pop
or
jmp
mov
testb
je
mov
cmpb
je
call
movl
call
mov
jmp
sub
pop
pop
pop
leave
ret
push
mov
cmp
jae
mov
mov
sar
and
mov
lea
testb
je
push
push
call
pushl
pushl
push
call
push
mov
call
add
mov
pop
pop
ret
call
movl
call
andl
or
pop
ret
push
mov
push
push
call
cmp
pop
jne
call
movl
jmp
pushl
push
pushl
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
or
jmp
mov
and
sar
mov
mov
lea
andb
lea
mov
pop
pop
ret
push
mov
cmp
push
push
jae
mov
sar
lea
mov
and
lea
mov
shl
testb
je
push
call
mov
pop
testb
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
test
je
call
mov
call
movl
or
push
call
pop
mov
jmp
call
movl
or
pop
pop
pop
ret
cmpl
jne
push
call
cmpl
pop
jne
call
incl
push
call
pop
ret
push
mov
push
push
push
push
push
push
pop
xor
push
mov
call
orl
orl
mov
movl
call
mov
pop
cmp
jne
push
call
movl
call
cmp
je
mov
mov
imul
cmp
push
pop
mov
mov
je
mov
imul
add
mov
cmp
je
mov
cmp
je
sub
mov
imul
mov
jmp
mov
mov
lea
mov
push
push
push
mov
pushl
push
push
push
pushl
call
test
je
cmp
jne
mov
andb
jmp
mov
andb
lea
push
push
push
pushl
push
push
push
pushl
call
test
je
cmp
jne
mov
andb
jmp
cmpb
je
mov
cmp
je
push
push
call
pop
test
pop
je
pushl
call
push
call
inc
push
call
add
cmp
mov
je
push
push
call
push
call
push
push
pushl
call
mov
add
add
andb
cmpb
jne
movl
inc
push
call
pop
mov
mov
imul
mov
mov
cmp
je
cmp
jl
cmp
jg
inc
jmp
cmpb
jne
inc
push
call
imul
pop
mov
add
mov
mov
cmp
jl
cmp
jg
inc
jmp
cmpb
jne
inc
push
call
pop
mov
add
mov
mov
cmp
jl
cmp
jg
inc
jmp
cmpl
je
neg
mov
movsbl
test
mov
je
push
push
pushl
call
mov
add
andb
jmp
mov
andb
jmp
push
call
pop
pop
pop
pop
leave
ret
push
push
call
pushl
call
push
mov
call
add
mov
pop
ret
push
push
push
xor
cmp
jne
xor
jmp
mov
push
pop
mov
cmp
jne
cmp
je
cmp
je
movzwl
push
cmp
movzwl
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
movzwl
push
push
push
jmp
movzwl
push
push
movzwl
push
push
push
push
push
call
movzwl
add
cmp
push
movzwl
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
movzwl
push
pushl
push
push
call
add
jmp
movzwl
push
push
movzwl
push
push
pushl
push
jmp
push
push
push
push
push
push
push
push
push
push
push
call
push
push
push
push
push
push
push
push
pushl
push
push
call
add
mov
mov
mov
cmp
jge
cmp
jl
cmp
jg
cmp
jle
cmp
jge
mov
pop
pop
pop
ret
cmp
jl
cmp
jg
cmp
jle
cmp
jl
mov
imul
add
imul
add
imul
cmp
jne
xor
cmp
setge
mov
jmp
xor
cmp
setl
jmp
push
mov
cmpl
push
mov
push
jne
mov
mov
andl
mov
jne
shl
mov
jmp
shl
mov
mov
lea
imul
lea
push
sar
mov
push
add
lea
pop
cltd
idiv
mov
pop
cmp
jge
imul
sub
add
lea
jmp
imul
sub
add
add
cmpl
jne
cmpl
jne
mov
jmp
mov
cmp
jle
sub
jmp
mov
test
jne
mov
jmp
mov
add
cmpl
jne
mov
mov
imul
add
mov
imul
add
imul
add
mov
jmp
mov
mov
imul
add
imul
add
add
imul
add
mov
jns
add
dec
mov
jmp
mov
cmp
jl
sub
inc
mov
mov
mov
pop
pop
pop
ret
push
push
mov
push
imul
cmp
mov
ja
test
jne
push
pop
add
and
xor
cmp
ja
cmp
ja
push
call
push
call
push
mov
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
je
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
xor
jmp
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
xor
cmp
jne
mov
cmp
jl
cmp
jg
sub
pop
ret
push
mov
push
push
call
cmp
mov
je
push
call
push
call
pop
push
pop
pushl
call
test
pop
mov
je
push
call
pop
jmp
push
call
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
jne
mov
cmp
jl
cmp
jg
sub
jmp
mov
cmp
jge
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
leave
ret
push
push
call
pushl
pushl
push
call
push
mov
call
add
mov
pop
ret
push
mov
sub
push
mov
test
je
push
call
test
pop
jne
call
movl
call
movl
xor
pop
leave
ret
lea
andb
push
lea
push
lea
add
push
push
mov
movb
movb
call
jmp
lea
push
push
call
test
je
inc
cmp
ja
mov
test
jne
cmp
jg
mov
push
call
pop
mov
test
jne
call
movl
jmp
cmp
jle
call
movl
jmp
lea
push
push
call
pop
pop
jmp
push
mov
mov
test
je
andb
add
mov
lea
push
movb
movb
call
test
je
cmp
je
push
pop
pop
ret
xor
pop
ret
push
mov
cmpl
push
mov
mov
jne
pushl
pushl
push
call
add
jmp
push
push
call
mov
pop
test
je
mov
mov
dec
movzbl
testb
mov
je
inc
inc
test
je
mov
dec
mov
inc
inc
test
je
jmp
inc
inc
test
je
test
jne
jmp
andb
jmp
andb
mov
dec
test
pop
je
lea
xor
mov
shr
rep
mov
and
rep
push
call
mov
pop
pop
pop
ret
incl
push
call
pop
mov
test
mov
je
orl
movl
jmp
orl
lea
mov
movl
mov
andl
mov
ret
mov
cmp
jb
xor
ret
mov
and
sar
lea
mov
mov
and
ret
push
mov
push
push
mov
push
push
call
mov
xor
cmp
je
push
call
push
call
pop
push
pop
pushl
pushl
call
pop
mov
test
pop
je
push
call
pop
jmp
push
call
mov
pop
pop
pop
pop
ret
push
mov
mov
test
jne
pop
ret
cmpl
jne
mov
cmp
ja
push
mov
pop
pop
ret
lea
andl
push
push
pushl
push
lea
push
push
push
pushl
call
test
je
cmpl
je
call
movl
or
pop
ret
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
xchg
mull
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
push
push
pop
pushl
pushl
call
test
je
xor
mov
pop
ret
push
push
pop
pushl
pushl
call
test
je
xor
mov
pop
ret
push
push
pop
pushl
call
test
je
xor
mov
pop
ret
push
call
push
call
pop
pop
push
call
push
mov
push
push
mov
push
push
call
mov
xor
cmp
je
push
call
push
call
pop
push
pop
pushl
pushl
pushl
call
add
mov
test
je
push
call
pop
jmp
push
call
mov
pop
pop
pop
pop
ret
push
mov
push
push
mov
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
mov
xor
pop
pop
pop
ret
cmp
jne
mov
cmp
je
movzbw
mov
push
pop
jmp
mov
movzbl
testb
je
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
pushl
push
push
push
pushl
call
test
mov
jne
cmp
jb
cmp
jne
call
movl
or
jmp
xor
cmp
setne
push
pushl
push
push
push
pushl
call
test
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
cmp
jae
shld
shl
ret
mov
xor
and
shl
ret
xor
xor
ret
push
mov
cmp
push
je
mov
mov
test
jne
test
je
test
jne
cmpl
jne
push
call
pop
mov
cmp
jne
cmpl
jne
inc
mov
testb
je
decl
mov
cmp
je
inc
mov
or
pop
pop
ret
decl
mov
mov
mov
incl
and
or
mov
mov
and
jmp
push
mov
push
push
fstcw
pushl
call
mov
mov
not
and
mov
and
or
push
call
pop
mov
pop
fldcw
mov
pop
leave
ret
mov
and
push
pushl
call
pop
pop
ret
push
mov
xor
push
test
push
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
movzwl
push
mov
mov
mov
and
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
and
pop
je
cmp
jne
or
jmp
or
pop
pop
test
pop
je
or
ret
push
mov
xor
push
test
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
mov
mov
and
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
mov
and
je
cmp
jne
or
jmp
or
pop
test
pop
je
or
ret
push
xor
cmp
jne
mov
cmp
jl
cmp
jg
add
pop
ret
push
mov
push
push
call
cmp
mov
je
push
call
push
call
pop
push
pop
pushl
call
test
pop
mov
je
push
call
pop
jmp
push
call
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
mov
push
push
cltd
pop
idiv
push
mov
mov
cltd
idiv
pop
mov
sub
or
shl
not
test
jne
inc
cmp
jge
lea
cmpl
jne
inc
add
cmp
jl
push
pop
pop
ret
xor
pop
ret
mov
push
push
push
push
mov
cltd
pop
idiv
mov
mov
cltd
idiv
lea
push
push
pop
push
pop
sub
shl
push
pushl
call
add
dec
js
lea
test
je
push
push
pushl
call
add
dec
sub
test
jge
pop
pop
pop
ret
push
mov
push
push
mov
push
push
push
lea
push
pop
andl
lea
push
mov
pop
cltd
idiv
push
mov
mov
cltd
idiv
mov
pop
push
mov
lea
mov
sub
pop
mov
shl
test
je
inc
push
pushl
call
pop
test
pop
jne
push
pushl
call
pop
mov
pop
mov
or
mov
shl
push
pop
and
mov
inc
cmp
jge
mov
sub
lea
xor
rep
mov
pop
pop
pop
leave
ret
mov
mov
push
push
sub
pop
mov
mov
add
dec
jne
pop
ret
push
mov
xor
stos
stos
stos
pop
ret
mov
xor
cmpl
jne
inc
add
cmp
jl
push
pop
ret
xor
ret
push
mov
sub
mov
push
push
push
push
mov
pop
or
cltd
mov
movl
idiv
mov
mov
cltd
idiv
andl
mov
shl
sub
not
mov
mov
and
mov
mov
shr
or
mov
mov
mov
add
shl
decl
mov
jne
mov
push
pop
mov
push
pop
shl
cmp
jl
mov
mov
sub
mov
mov
jmp
mov
andl
dec
sub
jns
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
movzwl
mov
and
mov
mov
mov
mov
movzwl
mov
and
sub
mov
shl
cmp
mov
jne
lea
xor
push
call
test
pop
jne
lea
push
call
pop
push
pop
jmp
lea
push
lea
push
call
pushl
lea
push
call
add
test
je
inc
mov
mov
sub
cmp
jge
lea
push
call
pop
jmp
cmp
jg
sub
mov
lea
push
lea
push
call
lea
push
push
call
pushl
lea
push
call
mov
inc
push
lea
push
call
add
xor
jmp
cmp
jl
lea
push
call
pushl
orb
lea
push
call
mov
add
add
push
jmp
pushl
mov
andb
lea
push
add
call
pop
pop
xor
push
pop
sub
mov
shl
mov
neg
sbb
and
or
or
cmp
jne
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
pushl
pushl
call
add
ret
push
pushl
pushl
call
add
ret
push
mov
sub
xor
push
push
push
push
pushl
lea
push
lea
push
call
pushl
lea
push
call
add
leave
ret
push
mov
sub
xor
push
push
push
push
pushl
lea
push
lea
push
call
pushl
lea
push
call
add
leave
ret
push
mov
mov
push
mov
push
mov
mov
push
lea
movb
test
mov
jle
mov
xor
mov
test
je
movsbl
inc
jmp
push
pop
mov
inc
decl
jne
mov
andb
test
jl
cmpb
jl
dec
cmpb
jne
movb
jmp
incb
cmpb
jne
incl
jmp
push
call
inc
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
sub
push
lea
push
push
lea
push
call
pop
lea
pop
lea
push
push
push
sub
mov
movsl
movsl
movsw
call
mov
mov
mov
movsbl
mov
movswl
mov
lea
push
push
call
add
mov
mov
pop
pop
leave
ret
push
mov
push
mov
push
push
push
mov
mov
mov
and
shr
and
mov
mov
mov
movzwl
mov
and
test
mov
je
cmp
je
lea
jmp
mov
jmp
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
lea
mov
mov
shr
shl
or
mov
or
shl
mov
mov
test
jne
mov
add
mov
shr
or
lea
mov
mov
add
mov
jmp
mov
or
mov
pop
pop
pop
leave
ret
push
call
pop
ret
push
mov
sub
push
push
push
mov
lea
push
mov
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
push
pop
mov
inc
cmp
ja
jmp
cmp
jl
cmp
jg
push
jmp
cmp
jne
push
jmp
movsbl
sub
je
dec
dec
je
sub
jne
jmp
push
movl
pop
jmp
andl
push
pop
jmp
cmp
mov
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
jle
cmp
jg
push
jmp
dec
push
jmp
cmp
jl
cmp
jle
cmp
je
cmp
jne
mov
jmp
mov
cmp
jle
movzbl
push
push
call
pop
pop
push
pop
jmp
mov
movzbl
mov
and
test
je
cmpl
jae
mov
incl
sub
incl
mov
jmp
incl
mov
inc
jmp
cmp
jne
mov
jmp
cmpl
mov
mov
jne
cmp
jne
decl
mov
inc
jmp
cmp
jle
movzbl
push
push
call
pop
pop
push
pop
jmp
mov
movzbl
mov
and
test
je
cmpl
jae
mov
incl
sub
incl
decl
mov
mov
inc
jmp
cmp
je
cmp
je
jmp
cmp
mov
jle
movzbl
push
push
call
pop
pop
push
pop
jmp
mov
movzbl
mov
and
test
je
mov
jmp
lea
cmp
mov
jl
cmp
jle
movsbl
sub
je
dec
dec
je
sub
jne
push
jmp
mov
cmp
jne
mov
inc
jmp
cmp
jl
cmp
jg
jmp
cmp
jl
cmp
jg
push
pop
dec
jmp
cmp
jne
jmp
cmpl
je
movsbl
lea
sub
mov
je
dec
dec
jne
orl
push
pop
jmp
push
pop
jmp
push
dec
pop
cmp
je
jmp
mov
jmp
movl
xor
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
test
je
movsbl
lea
lea
cmp
jg
mov
inc
jmp
mov
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
test
je
mov
inc
jmp
dec
jmp
mov
mov
cmpl
mov
je
push
pop
cmp
jbe
cmpb
jl
incb
mov
mov
dec
incl
jmp
mov
cmpl
jbe
dec
cmpb
jne
decl
incl
jmp
lea
push
lea
pushl
push
call
mov
xor
add
cmp
jge
neg
add
cmp
jne
add
cmp
jne
sub
cmp
jle
movl
mov
mov
mov
mov
cmpl
je
xor
mov
mov
xor
movl
jmp
cmp
jge
movl
jmp
pushl
push
lea
push
call
mov
mov
mov
mov
add
jmp
xor
xor
xor
xor
jmp
xor
xor
xor
xor
movl
jmp
cmpl
je
xor
xor
xor
xor
movl
mov
or
pop
mov
mov
mov
mov
pop
mov
pop
leave
ret
aad
inc
add
inc
add
inc
add
push
add
inc
add
push
add
push
add
inc
add
inc
add
imul
push
push
xor
call
pop
push
pop
cmp
jle
push
mov
mov
shl
mov
test
je
testb
je
push
call
cmp
pop
je
inc
cmp
jl
mov
mov
add
push
call
mov
pushl
call
mov
pop
andl
inc
cmp
jl
pop
push
call
pop
mov
pop
pop
ret
push
mov
sub
mov
push
xor
push
test
push
movl
mov
je
mov
movb
jmp
andb
movl
mov
test
jne
test
jne
cmp
je
orb
push
mov
pop
and
sub
je
dec
je
dec
jne
movl
jmp
movl
jmp
movl
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
movl
jmp
movl
jmp
mov
mov
mov
and
mov
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
movl
jmp
movl
jmp
mov
jmp
cmp
je
cmp
je
cmp
je
call
movl
call
mov
or
jmp
movl
jmp
movl
mov
mov
test
je
mov
not
and
test
jne
push
pop
test
je
or
orb
test
je
or
test
je
or
jmp
test
je
or
call
mov
or
cmp
jne
call
movl
call
andl
mov
jmp
push
push
pushl
lea
push
pushl
pushl
pushl
call
mov
cmp
jne
call
push
call
pop
mov
jmp
push
call
test
jne
push
call
jmp
cmp
jne
orb
jmp
cmp
jne
orb
push
push
call
mov
pop
sar
pop
mov
lea
mov
or
and
mov
lea
mov
shl
andb
mov
jne
test
je
testb
je
push
push
push
call
add
cmp
mov
jne
call
cmpl
je
push
call
pop
or
jmp
andb
lea
push
push
push
call
add
test
jne
cmpb
jne
pushl
push
call
pop
cmp
pop
je
push
push
push
call
add
cmp
je
cmpb
jne
testb
je
mov
orb
lea
mov
push
call
pop
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
cmpl
push
push
mov
push
je
test
jne
cmp
je
call
test
jne
mov
test
je
mov
test
je
push
call
pop
mov
mov
test
je
push
call
cmp
pop
jbe
mov
cmpb
jne
push
push
push
call
add
test
je
add
jmp
mov
lea
jmp
xor
pop
pop
pop
ret
push
mov
sub
mov
andl
dec
push
push
dec
push
je
dec
dec
je
sub
je
sub
je
sub
je
sub
je
dec
je
or
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
call
mov
pushl
pushl
call
mov
pop
add
pop
mov
jmp
mov
mov
push
movl
call
mov
pop
cmp
jne
cmpl
je
push
call
pop
jmp
xor
cmp
jne
cmp
je
push
call
pop
push
call
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
mov
mov
jne
mov
movl
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
add
andl
mov
mov
inc
add
cmp
jl
jmp
mov
cmpl
je
push
call
pop
cmpl
jne
pushl
push
call
pop
pop
jmp
pushl
call
cmpl
pop
je
cmpl
jne
mov
cmpl
mov
jne
mov
mov
xor
pop
pop
pop
leave
ret
mov
mov
push
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
lea
cmp
jae
cmp
je
xor
pop
pop
ret
mov
push
mov
xor
lea
cmp
jb
cmp
jae
push
pop
mov
pop
mov
ret
push
mov
push
mov
push
pushl
pushl
call
add
test
je
lea
push
push
pushl
call
add
test
je
incl
lea
push
pushl
pushl
call
add
test
je
incl
lea
push
pushl
pushl
call
add
pop
pop
ret
mov
push
push
mov
mov
mov
add
mov
lea
shr
or
mov
mov
mov
shr
shl
or
pop
mov
pop
ret
mov
push
push
mov
mov
mov
mov
shl
shr
or
mov
mov
shl
shr
shr
or
pop
mov
mov
pop
ret
push
mov
sub
mov
push
mov
xor
cmp
push
movl
mov
mov
mov
jbe
push
mov
mov
lea
movsl
movsl
push
movsl
call
push
call
lea
push
push
call
push
call
mov
andl
andl
movsbl
mov
lea
push
push
call
add
incl
decl
jne
xor
pop
cmp
jne
mov
mov
shr
mov
mov
mov
shr
shl
or
shl
addl
mov
mov
jmp
mov
test
jne
push
call
addl
pop
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
mov
push
mov
push
mov
mov
and
and
test
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movl
mov
je
movb
jmp
movb
mov
test
jne
test
jne
cmp
jne
andw
movb
movb
movb
jmp
cmp
jne
mov
movw
cmp
jne
cmpl
je
test
jne
push
jmp
test
je
cmp
jne
cmpl
jne
push
jmp
cmp
jne
cmpl
jne
push
lea
push
call
pop
movb
pop
andl
jmp
push
lea
push
call
pop
movb
pop
jmp
movzwl
mov
mov
shr
imul
shr
andw
push
lea
mov
imul
mov
lea
mov
sar
mov
movswl
neg
push
lea
push
call
add
cmpw
jb
lea
inc
push
lea
push
call
pop
pop
testb
mov
je
mov
movswl
add
test
jg
jmp
mov
cmp
jle
push
pop
movzwl
sub
andw
movl
lea
push
call
decl
pop
jne
test
jge
neg
and
jle
lea
push
call
dec
pop
jne
lea
lea
test
mov
jle
mov
lea
lea
movsl
movsl
lea
push
movsl
call
lea
push
call
lea
push
lea
push
call
lea
push
call
mov
mov
andb
add
add
incl
decl
mov
jne
mov
mov
dec
dec
cmp
lea
jl
cmp
jb
cmpb
jne
movb
dec
jmp
cmp
jae
inc
incw
incb
sub
sub
mov
movsbl
andb
mov
pop
pop
pop
leave
ret
cmp
jb
cmpb
jne
dec
jmp
cmp
jae
andw
movb
movb
movb
andb
push
pop
jmp
push
mov
sub
push
mov
push
mov
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
xor
and
and
and
cmp
lea
mov
jae
cmp
jae
cmp
ja
cmp
ja
xor
jmp
test
mov
jne
incl
test
jne
xor
cmp
jne
cmp
jne
jmp
xor
cmp
jne
incl
test
jne
cmp
jne
cmp
jne
mov
mov
mov
jmp
mov
lea
mov
movl
mov
add
cmpl
jle
add
lea
mov
mov
mov
mov
mov
mov
movzwl
movzwl
imul
mov
add
push
push
pushl
call
add
test
je
mov
incw
addl
subl
decl
jne
addl
incl
decl
cmpl
jg
addl
cmpw
jle
testb
jne
lea
push
call
addl
pop
cmpw
jg
cmpw
jg
addl
cmpw
jge
movswl
neg
add
mov
testb
je
incl
lea
push
call
dec
pop
jne
cmpl
je
orb
cmpw
ja
mov
and
cmp
jne
cmpl
jne
andl
cmpl
jne
andl
cmpw
jne
incl
movw
jmp
incw
jmp
incl
jmp
incl
mov
cmp
jae
mov
or
mov
mov
mov
mov
mov
mov
jmp
neg
sbb
andl
and
add
andl
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
xor
sub
cmp
je
jge
mov
mov
neg
mov
sub
cmp
jne
mov
mov
cmp
je
push
push
mov
add
sarl
and
cmp
je
lea
cmpw
lea
jb
lea
movsl
movsl
movsl
decl
lea
push
pushl
call
pop
pop
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
mov
call
push
push
xor
push
push
pushl
call
or
add
cmp
mov
je
push
push
pushl
call
add
cmp
je
push
mov
sub
test
jle
mov
lea
push
push
push
call
push
pushl
call
add
mov
cmp
mov
jge
mov
push
lea
push
pushl
call
add
cmp
je
sub
test
jle
jmp
call
cmpl
jne
call
movl
or
pushl
pushl
call
pop
pop
jmp
jge
push
pushl
pushl
call
pushl
call
add
push
call
mov
neg
sbb
neg
dec
cmp
jne
call
movl
call
mov
call
mov
push
pushl
pushl
call
add
mov
pop
jmp
mov
pop
pop
leave
ret
push
mov
cmpl
jne
xor
pop
ret
pushl
pushl
pushl
pushl
pushl
push
pushl
call
add
test
jne
mov
pop
ret
add
pop
ret
push
push
push
push
mov
push
xor
mov
cmp
je
mov
push
push
push
push
push
push
push
push
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
pushl
push
push
call
test
je
push
pushl
call
mov
add
pop
cmp
pop
jne
xor
pop
pop
pop
pop
pop
ret
or
jmp
push
mov
cmpl
jne
cmpl
jge
push
push
jmp
push
pushl
pushl
pushl
call
mov
add
pop
ret
push
mov
cmpl
mov
push
push
push
je
mov
movb
inc
neg
jmp
mov
mov
mov
xor
divl
mov
mov
xor
divl
cmp
mov
jbe
add
jmp
add
mov
inc
test
ja
andb
dec
mov
mov
mov
mov
dec
inc
cmp
jb
pop
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
lea
cmpl
jne
mov
mov
mov
lea
mov
or
mov
je
or
je
inc
inc
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
dec
jne
xor
cmp
je
mov
jb
neg
jmp
lock
cmpl
jg
push
jmp
lock
mov
push
call
movl
mov
xor
xor
mov
mov
or
mov
je
or
je
inc
inc
push
push
push
call
mov
add
call
add
pop
cmp
jne
dec
jne
xor
cmp
je
mov
jb
neg
pop
or
jne
lock
jmp
mov
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
and
sar
lea
mov
mov
lea
mov
mov
and
cmp
jne
and
jmp
cmpl
jne
or
neg
sbb
mov
and
add
pop
ret
call
movl
or
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
push
pop
jne
push
mov
push
push
push
push
push
call
test
je
mov
jmp
push
mov
push
push
push
push
push
call
test
je
movl
mov
cmp
jle
push
pushl
call
pop
pop
mov
mov
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
push
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
cmp
je
cmp
jne
cmp
jne
push
pop
jmp
cmp
jle
mov
jmp
cmp
jg
lea
push
pushl
call
test
je
cmp
jle
cmpl
jb
lea
cmp
je
mov
cmp
je
mov
mov
cmp
jb
cmp
jbe
inc
inc
cmp
jne
push
jmp
cmp
jle
cmpl
jb
lea
cmp
je
mov
cmp
je
mov
mov
cmp
jb
cmp
jbe
inc
inc
cmp
jne
jmp
push
push
push
pushl
push
pushl
call
mov
cmp
je
mov
add
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
push
pop
cmp
je
pushl
pushl
push
pushl
push
pushl
mov
call
test
je
push
push
pushl
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
push
pushl
call
test
je
push
push
pushl
pushl
pushl
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
je
push
pushl
call
mov
pop
cmp
pop
mov
je
cmp
je
mov
xor
cmp
sete
cmp
jne
push
call
pop
mov
cmp
jne
cmp
je
cmp
je
call
test
je
or
pop
pop
pop
leave
ret
cmp
jne
push
call
cmp
pop
mov
je
mov
cmp
jne
push
call
cmp
pop
mov
je
mov
sub
mov
mov
push
pushl
call
mov
pop
test
pop
jl
cmpl
je
test
je
pushl
lea
call
pop
cmpl
je
mov
inc
mov
add
jmp
mov
shl
push
pushl
call
pop
test
pop
je
jmp
mov
mov
jmp
test
jne
test
jge
neg
lea
push
push
call
pop
test
pop
je
mov
mov
andl
mov
cmpl
je
pushl
call
inc
inc
push
call
mov
pop
test
pop
je
pushl
push
call
mov
pop
sub
pop
add
andb
inc
neg
sbb
not
and
push
push
call
push
call
pop
xor
jmp
push
mov
push
mov
test
je
mov
push
push
pushl
call
add
test
jne
mov
mov
cmp
je
test
je
mov
add
test
jne
mov
sub
sar
neg
pop
pop
ret
mov
sub
sar
jmp
push
mov
xor
test
jne
xor
pop
ret
cmpl
lea
je
mov
inc
add
test
jne
push
push
lea
push
push
call
mov
pop
test
mov
jne
push
call
pop
mov
mov
test
je
push
add
call
mov
mov
pop
add
jmp
andl
mov
pop
pop
pop
pop
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
push
push
push
push
mov
pop
cmp
jne
push
jmp
test
mov
jne
push
push
call
test
jne
push
call
push
call
pop
mov
jmp
cmp
jne
mov
cmpl
jne
push
call
jmp
cmp
jne
push
call
mov
pop
pop
pop
ret
push
push
call
cmp
jne
push
call
ret
cmpl
jne
push
call
ret
mov
call
sub
mov
push
push
lea
mov
call
mov
push
call
pop
push
push
lea
call
andl
lea
push
lea
call
lea
push
push
movl
call
pop
mov
call
push
push
push
push
lea
push
mov
push
mov
movl
call
mov
andl
lea
push
mov
mov
mov
call
pushl
mov
push
push
call
mov
movl
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
mov
mov
movl
andl
push
lea
call
orl
mov
call
mov
pop
mov
leave
ret
push
mov
sub
push
lea
call
lea
push
push
call
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
pushl
call
movl
mov
pop
ret
mov
call
sub
mov
push
push
lea
mov
call
mov
push
call
pop
push
push
lea
call
andl
lea
push
lea
call
lea
push
push
movl
call
pop
testb
jne
orb
call
testb
jne
orb
jmp
push
call
pop
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
mov
cmpl
push
mov
mov
je
pushl
call
pushl
pushl
pushl
call
add
mov
pop
ret
mov
call
push
push
mov
andl
push
mov
mov
push
pop
lea
mov
push
push
push
pushl
lea
mov
call
mov
lea
push
call
mov
andb
lea
call
mov
mov
pop
mov
leave
ret
push
mov
push
push
xor
cmp
mov
je
call
mov
mov
add
cmp
jae
mov
cmp
jne
mov
inc
push
call
pop
jmp
mov
pop
pop
pop
ret
push
mov
sub
push
push
push
xor
cmp
mov
mov
je
pushl
mov
call
cmp
mov
jne
xor
jmp
cmp
jne
mov
jmp
pushl
call
mov
mov
mov
mov
add
cmp
jae
pushl
push
call
pop
test
pop
je
mov
incl
lea
jmp
push
call
lea
cmp
jb
cmpl
jle
mov
call
mov
mov
sub
mov
imul
add
mov
cmp
mov
jl
cmpl
jle
lea
push
mov
mov
call
mov
pushl
push
pushl
call
add
pushl
call
mov
mov
add
cmp
mov
jae
pushl
push
call
mov
pop
test
pop
je
mov
mov
mov
mov
sub
lea
sub
add
add
push
push
push
call
pushl
pushl
push
call
mov
pushl
sub
andb
push
add
call
mov
add
test
jne
mov
push
call
lea
cmp
jb
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
call
mov
mov
mov
add
cmp
jae
mov
cmp
je
push
mov
call
pop
mov
push
call
pop
mov
jmp
mov
andb
sub
pop
mov
mov
pop
pop
sub
leave
ret
push
mov
push
mov
andl
mov
sub
push
pushl
pushl
call
mov
leave
ret
mov
call
push
mov
andl
test
jge
xor
mov
test
jge
xor
push
mov
push
lea
mov
cmp
jle
mov
sub
cmp
jle
xor
test
jne
cmp
jne
push
mov
call
jmp
mov
mov
push
pop
push
push
push
lea
push
mov
call
mov
lea
push
call
andb
lea
mov
call
mov
mov
pop
pop
mov
leave
ret
mov
call
push
mov
andl
test
jge
xor
mov
cmp
jl
push
mov
call
mov
jmp
mov
push
mov
push
pop
push
push
push
lea
push
mov
call
mov
lea
push
call
andb
lea
mov
call
mov
pop
mov
mov
leave
ret
push
pushl
call
ret
push
mov
mov
mov
cmp
jg
pushl
add
push
call
pop
test
pop
jne
or
jmp
sub
pop
ret
sub
andl
push
mov
push
mov
push
mov
mov
cmpb
mov
je
push
cmpb
jne
push
call
mov
pop
mov
cmp
je
xor
test
mov
je
cmp
jne
addl
jmp
cmp
jne
mov
add
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
push
call
mov
pop
mov
test
jne
cmp
jne
push
call
pop
mov
mov
test
je
movsbl
push
call
test
pop
je
push
call
pop
mov
jmp
xor
cmpb
jne
push
call
mov
pop
cmpb
jne
mov
add
push
call
pop
mov
andl
push
push
push
call
add
test
jne
add
movl
jmp
push
call
pop
mov
mov
test
je
movsbl
push
call
test
pop
je
push
call
pop
mov
jmp
movsbl
sub
je
sub
je
dec
dec
je
sub
je
sub
jne
movl
jmp
movl
push
call
pop
mov
movsbl
or
mov
cmp
jg
je
sub
je
push
pop
sub
je
sub
je
sub
je
sub
je
sub
je
movsbl
cmp
jg
je
sub
je
sub
je
sub
je
dec
je
dec
je
dec
je
jmp
sub
je
sub
je
sub
je
sub
je
sub
jne
mov
add
test
je
push
call
pop
jmp
push
add
pop
jmp
mov
add
test
jne
push
pop
jmp
push
call
mov
cmp
jge
push
pop
test
je
test
je
cmp
jl
mov
cmp
jg
mov
jmp
add
mov
lea
jmp
add
mov
jmp
sub
je
dec
je
dec
je
sub
je
sub
je
jmp
add
push
pop
mov
add
cmp
jl
mov
jmp
testb
je
add
jmp
add
add
mov
jmp
push
call
add
pop
push
call
mov
pop
cmpb
jne
pop
pushl
mov
call
pushl
pushl
pushl
call
add
mov
push
call
pop
pop
pop
add
ret
mov
lea
push
pushl
call
ret
push
push
push
mov
call
mov
xor
mov
test
je
movsbl
push
call
test
pop
je
test
jne
mov
jmp
xor
push
call
mov
pop
mov
test
jne
test
je
and
mov
sub
mov
pop
pop
pop
ret
push
mov
push
lea
movl
push
pushl
call
neg
sbb
neg
mov
pop
ret
mov
push
test
mov
je
andl
cmpl
jne
mov
call
cmpl
je
pushl
lea
push
pushl
call
jmp
mov
andb
mov
pop
ret
push
mov
push
lea
push
push
movl
call
push
mov
push
lea
push
push
movl
call
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
mov
mov
add
mov
mov
mov
lea
push
call
mov
pop
mov
pop
leave
ret
push
mov
mov
push
mov
mov
cmp
jae
andl
jmp
movzwl
pushl
push
movzwl
push
movzwl
push
movzwl
movzwl
push
push
movzwl
push
lea
call
mov
mov
mov
pop
pop
ret
push
mov
sub
lea
push
push
mov
pushl
call
test
je
lea
push
lea
push
call
test
jne
andl
jmp
pushl
lea
lea
push
call
mov
mov
mov
pop
leave
ret
push
call
pop
mov
mov
mov
ret
push
mov
sub
andl
push
call
test
pop
je
push
lea
pushl
push
push
call
add
test
jne
andb
mov
lea
push
call
mov
leave
ret
mov
call
push
push
push
push
xor
pushl
mov
mov
push
call
mov
mov
mov
lea
push
push
push
movb
movl
call
mov
add
mov
lea
neg
sbb
lea
add
mov
mov
mov
mov
mov
or
mov
or
mov
movl
mov
movl
mov
movl
cmp
jne
call
test
je
orl
cmp
je
orb
call
mov
mov
cmp
movl
je
push
pushl
push
call
cmp
je
pushl
lea
mov
call
push
mov
call
push
push
call
pop
cmp
pop
je
mov
push
inc
jmp
mov
mov
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
push
push
mov
push
pushl
call
mov
inc
sub
add
push
push
push
call
add
call
mov
mov
xor
call
mov
call
mov
mov
test
je
push
call
test
je
push
pop
push
pushl
call
push
call
testb
mov
je
mov
jmp
push
call
cmpl
lea
push
je
call
jmp
call
andl
mov
test
pop
je
push
pushl
call
pushl
call
test
je
pushl
call
mov
call
mov
pop
pop
pop
test
jne
push
pop
pop
pop
ret
mov
call
push
push
andl
push
testb
push
push
mov
je
mov
test
je
mov
mov
mov
andl
push
call
push
call
mov
lea
push
mov
call
push
push
push
pushl
mov
call
test
jge
lea
call
jmp
push
lea
call
mov
cmpl
je
mov
pushl
call
push
call
push
lea
mov
call
push
push
push
pushl
call
test
jge
lea
call
orl
lea
call
mov
pushl
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
push
lea
call
mov
lea
push
call
orl
lea
call
jmp
xor
ret
xor
ret
ret
pushl
call
push
call
push
mov
call
ret
ret
push
mov
push
push
mov
push
push
mov
pushl
call
test
jne
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
pushl
mov
call
mov
jmp
mov
xor
push
push
push
pushl
call
test
jne
push
push
push
pushl
call
jmp
mov
mov
call
jmp
mov
mov
call
push
pop
pop
pop
pop
ret
mov
ret
push
mov
cmpl
push
push
push
je
push
mov
call
mov
mov
test
je
pushl
call
andl
mov
mov
cmp
jne
mov
push
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
pushl
mov
pushl
push
pushl
call
jmp
cmp
mov
je
cmp
jne
cmpw
je
cmp
jb
pushl
call
mov
push
mov
call
test
je
testb
jne
cmp
jne
mov
pushl
mov
call
jmp
cmp
jne
cmpl
je
mov
mov
mov
mov
call
andl
jmp
cmp
jne
mov
mov
shr
push
movzwl
push
mov
pushl
call
xor
jmp
cmp
jne
mov
mov
call
jmp
push
push
push
pushl
call
push
pop
pop
pop
pop
pop
ret
push
mov
push
call
test
je
mov
call
pop
ret
jmp
call
ret
mov
ret
mov
call
push
push
mov
mov
movl
andl
call
orl
mov
call
mov
pop
mov
leave
ret
push
mov
sub
mov
push
mov
mov
mov
lea
push
pushl
push
pushl
call
mov
test
je
lea
push
pushl
call
mov
pop
leave
ret
push
mov
sub
mov
movl
mov
mov
mov
mov
cmp
je
movl
mov
mov
cmp
je
orl
mov
lea
push
pushl
push
pushl
call
leave
ret
push
mov
sub
mov
andl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
pushl
call
leave
ret
push
mov
sub
mov
mov
mov
mov
lea
push
pushl
push
pushl
call
leave
ret
push
mov
sub
mov
mov
mov
mov
lea
push
pushl
push
pushl
call
leave
ret
mov
call
sub
andl
push
push
push
push
lea
push
mov
push
call
mov
add
mov
mov
mov
push
mov
pop
mov
add
lea
push
mov
call
mov
lea
push
pushl
push
pushl
call
lea
cmp
je
push
lea
call
mov
lea
push
call
mov
andb
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
sub
push
push
lea
push
mov
push
call
mov
add
mov
mov
mov
mov
mov
lea
push
pushl
push
pushl
call
pop
leave
ret
push
mov
cmpl
je
pushl
pushl
pushl
pushl
call
jmp
mov
pushl
call
push
pop
pop
ret
push
push
push
mov
pushl
mov
push
pushl
call
push
call
test
je
push
pushl
push
pushl
call
pop
pop
ret
push
mov
push
call
push
mov
call
push
mov
call
mov
call
pop
ret
push
push
pushl
mov
mov
pushl
push
pushl
call
pushl
pushl
push
pushl
call
pop
pop
ret
mov
ret
mov
call
push
push
mov
mov
movl
andl
call
orl
mov
call
mov
pop
mov
leave
ret
ret
push
push
mov
push
mov
push
push
pushl
call
push
call
test
je
push
push
push
pushl
call
mov
call
pop
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
pushl
push
pushl
call
leave
ret
mov
call
push
call
mov
cmpl
jne
cmpl
je
push
push
call
push
mov
call
pop
mov
mov
andl
test
je
push
push
push
call
jmp
xor
orl
push
mov
call
pop
mov
mov
pop
mov
leave
ret
mov
andl
movl
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
mov
movl
andl
call
mov
mov
leave
ret
push
mov
push
mov
test
je
push
call
test
je
pushl
lea
call
andl
mov
pop
pop
ret
cmpl
jne
xor
ret
call
push
call
ret
push
call
mov
xor
test
je
pushl
add
call
ret
push
push
push
pushl
call
test
jne
ret
push
call
ret
push
mov
push
xor
mov
mov
mov
mov
mov
call
mov
pop
pop
ret
mov
mov
mov
decl
mov
jne
call
ret
mov
push
mov
mov
test
mov
je
andl
jmp
andl
push
call
mov
pop
ret
mov
imul
add
push
call
pop
mov
mov
mov
mov
ret
test
je
push
mov
push
call
pop
test
mov
jne
pop
ret
mov
xor
mov
mov
mov
mov
mov
movl
movl
mov
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
je
push
call
andl
pop
cmpl
mov
je
push
mov
shl
push
call
push
push
push
mov
call
add
pop
mov
pop
pop
ret
push
mov
mov
test
je
push
call
andl
pop
mov
andl
andl
call
andl
pop
ret
mov
call
push
mov
movl
andl
call
mov
mov
leave
ret
push
mov
cmpl
jne
push
lea
pushl
push
call
mov
add
lea
dec
test
lea
jl
inc
mov
mov
mov
sub
dec
jne
mov
mov
incl
mov
andl
andl
pop
ret
mov
mov
mov
decl
mov
jne
call
ret
push
mov
mov
xor
shr
divl
mov
mov
mov
test
je
mov
test
je
cmp
je
mov
jmp
xor
pop
ret
push
mov
test
push
je
mov
xor
mov
shr
divl
mov
test
je
cmp
je
mov
jmp
mov
jmp
xor
pop
pop
ret
push
mov
lea
push
pushl
call
test
je
mov
mov
push
mov
pop
pop
ret
push
mov
push
push
mov
lea
push
mov
push
call
test
jne
cmp
jne
push
mov
pushl
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
add
pop
pop
ret
push
mov
test
push
je
mov
xor
mov
shr
divl
mov
lea
test
je
cmp
je
mov
mov
jmp
mov
push
mov
call
push
pop
jmp
xor
pop
pop
ret
mov
push
push
mov
cmp
jne
mov
xor
test
jbe
mov
mov
test
jne
inc
add
cmp
jb
mov
test
jne
mov
push
mov
xor
shr
div
inc
cmp
jae
mov
lea
mov
test
jne
inc
add
cmp
jb
pop
mov
mov
mov
mov
mov
mov
mov
pop
mov
pop
ret
push
mov
mov
mov
cmpl
jl
mov
add
push
call
jmp
mov
mov
pushl
mov
call
mov
pop
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
push
push
mov
mov
test
jne
mov
mov
jmp
push
push
pop
cmp
jg
mov
call
mov
jmp
mov
cmp
jg
mov
jmp
mov
cmp
jg
mov
jmp
mov
cmp
jg
mov
jmp
lea
push
call
pop
mov
movl
andb
mov
add
mov
pop
pop
pop
ret
mov
cmp
jne
push
mov
call
ret
cmp
jne
push
mov
jmp
cmp
jne
push
mov
jmp
cmp
push
jne
mov
jmp
call
pop
ret
push
mov
mov
lea
cmp
je
add
push
call
test
jg
mov
sub
call
mov
mov
pop
ret
push
mov
cmp
je
push
call
test
jg
mov
call
pop
ret
mov
cmpl
je
cmpl
jl
jmp
push
call
ret
push
push
mov
mov
cmpl
jle
call
pushl
mov
call
mov
inc
push
push
pushl
call
add
pop
pop
ret
push
mov
push
mov
mov
cmpl
jg
cmp
jle
mov
call
push
mov
call
pop
pop
ret
push
mov
mov
lea
cmp
je
add
push
call
test
jg
mov
sub
call
pop
ret
push
mov
mov
push
mov
push
add
mov
test
jne
mov
mov
mov
jmp
push
mov
push
mov
call
mov
push
add
push
pushl
call
add
pop
pop
pop
pop
ret
mov
push
mov
push
mov
push
test
mov
je
mov
shr
test
jne
movzwl
push
call
jmp
push
call
mov
test
je
push
mov
call
push
push
pushl
call
add
mov
pop
pop
pop
ret
push
push
mov
mov
push
call
push
pushl
pushl
call
mov
add
mov
mov
andb
pop
pop
ret
push
push
mov
mov
mov
mov
cmp
je
cmpl
jge
add
cmp
jne
cmpl
jge
push
mov
pushl
call
jmp
mov
call
mov
mov
add
push
call
mov
pop
pop
ret
push
push
mov
mov
test
jne
xor
jmp
push
call
push
push
mov
call
mov
pop
pop
ret
push
mov
push
push
mov
mov
lea
test
je
push
call
push
pushl
pushl
call
mov
push
pushl
add
push
call
add
pop
pop
pop
ret
mov
call
push
push
mov
andl
push
mov
mov
mov
push
mov
mov
pop
push
mov
pushl
push
pushl
lea
call
mov
lea
push
call
mov
andb
lea
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
andl
push
mov
cmpl
push
pop
mov
jne
xor
jmp
pushl
call
mov
pushl
mov
push
push
pushl
lea
call
mov
lea
push
call
mov
andb
lea
call
mov
mov
pop
mov
leave
ret
push
push
push
mov
test
mov
je
mov
cmpl
lea
jg
mov
lea
cmp
jg
push
add
pushl
push
call
mov
add
add
mov
mov
andb
jmp
pushl
mov
push
push
pushl
call
push
call
pop
pop
pop
ret
push
push
mov
mov
test
jne
xor
jmp
push
call
push
push
mov
call
mov
pop
pop
ret
lea
push
push
mov
push
call
mov
pop
ret
mov
push
mov
mov
push
pushl
call
mov
pop
ret
push
push
mov
mov
mov
cmpl
lea
jg
cmp
jle
push
mov
cmp
jge
mov
push
mov
call
lea
push
lea
push
pushl
call
mov
add
push
mov
call
pop
mov
pop
pop
ret
push
mov
call
mov
cmp
jne
pushl
call
mov
mov
mov
pop
andb
ret
push
push
mov
mov
push
call
mov
mov
mov
andb
mov
pop
pop
ret
push
pushl
call
ret
push
mov
mov
mov
cmp
jge
add
movzbl
push
push
call
pop
test
pop
jne
or
jmp
sub
pop
ret
push
mov
call
pushl
call
pop
pop
ret
pushl
mov
pushl
mov
pushl
call
ret
mov
test
jne
pushl
pushl
call
push
call
jmp
mov
pushl
mov
call
ret
mov
test
jne
pushl
pushl
call
mov
mov
jmp
pushl
mov
mov
pushl
call
ret
push
mov
testb
je
call
mov
pushl
mov
mov
push
call
jmp
pushl
pushl
call
pop
ret
mov
test
jne
push
pushl
call
ret
mov
mov
jmp
mov
test
jne
push
pushl
call
ret
mov
mov
jmp
mov
test
jne
pushl
pushl
call
jmp
mov
pushl
mov
call
ret
push
mov
mov
test
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
pushl
mov
mov
pushl
pushl
pushl
pushl
call
pop
ret
push
mov
mov
test
jne
mov
test
je
mov
pushl
pushl
pushl
pushl
pushl
push
pushl
call
jmp
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
call
pop
ret
mov
test
jne
pushl
pushl
call
jmp
mov
pushl
mov
call
ret
mov
test
jne
pushl
call
ret
mov
mov
jmp
mov
test
jne
pushl
pushl
call
jmp
mov
pushl
mov
call
ret
mov
test
jne
pushl
call
push
call
ret
mov
mov
jmp
push
mov
test
je
cmpl
jne
pushl
call
push
mov
lea
call
test
je
mov
test
je
mov
push
mov
call
pop
ret
cmpl
jne
mov
mov
test
je
mov
push
mov
call
ret
mov
movl
ret
mov
mov
mov
ret
cmpl
jle
test
je
mov
push
call
ret
push
mov
sub
mov
lea
push
lea
push
push
call
test
je
pushl
lea
pushl
push
call
jmp
cmpl
jne
movl
pushl
pushl
pushl
call
leave
ret
call
xor
ret
mov
mov
mov
ret
push
push
mov
push
call
mov
pop
test
jne
mov
test
je
push
call
test
pop
jne
mov
pop
pop
ret
pushl
call
pop
ret
push
mov
call
andl
movl
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
sub
push
mov
push
mov
call
andl
lea
movl
call
mov
mov
andl
orl
mov
push
lea
movb
mov
call
lea
mov
push
movb
pushl
pushl
call
test
jne
pushl
pushl
pushl
call
mov
lea
movb
call
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
mov
movl
xor
cmp
mov
je
cmp
je
call
orl
mov
call
mov
pop
mov
leave
ret
push
mov
push
mov
push
push
mov
mov
and
push
push
mov
pushl
andl
call
test
je
test
je
test
jne
movb
jmp
test
je
movb
push
pop
test
jne
push
movb
pop
test
mov
je
movb
inc
xor
jmp
push
movb
test
pop
jne
jmp
movb
inc
andb
push
pushl
call
pop
cmp
pop
je
lea
push
push
call
pop
mov
pop
cmpl
jne
test
je
call
mov
mov
call
pushl
call
mov
mov
call
xor
jmp
push
pop
pop
pop
pop
pop
ret
cmpl
push
mov
jne
xor
jmp
push
pushl
pushl
push
pushl
call
mov
add
test
jne
mov
testb
jne
pushl
call
pushl
push
call
mov
testb
je
push
call
pop
pushl
call
pushl
push
call
mov
pop
pop
ret
push
mov
pushl
pushl
push
pushl
call
add
cmp
je
pushl
call
pushl
push
call
pop
ret
push
mov
pushl
pushl
call
pop
cmp
pop
jne
pushl
call
pushl
push
call
pop
ret
push
mov
push
pushl
pushl
pushl
call
mov
add
test
jne
mov
testb
jne
push
call
pop
pushl
call
pushl
push
call
mov
pop
pop
ret
push
push
push
push
mov
mov
push
mov
call
push
mov
call
mov
pushl
push
push
call
add
mov
mov
push
call
test
je
push
call
cmp
jl
cmpb
je
mov
mov
mov
lea
push
call
mov
add
jmp
mov
testb
jne
push
call
pop
pushl
call
pushl
push
call
push
mov
call
mov
mov
test
je
cmpb
jne
dec
push
mov
call
xor
pop
test
pop
pop
setne
pop
ret
push
mov
pushl
pushl
pushl
call
add
test
je
pushl
call
pushl
push
call
pushl
call
pop
pop
ret
push
mov
push
pushl
call
mov
pop
cmp
jne
pushl
call
pushl
push
call
mov
pop
pop
ret
push
mov
mov
test
je
push
call
test
pop
je
pushl
call
pushl
push
call
pop
ret
push
mov
xor
mov
test
je
push
call
pop
orl
andl
andl
test
je
pushl
call
pushl
push
call
pop
ret
push
mov
mov
test
je
cmpl
je
push
call
pop
orl
andl
andl
pop
ret
call
xor
ret
call
ret
mov
ret
push
mov
cmpl
jne
call
test
je
push
call
mov
call
pop
ret
push
push
mov
call
mov
xor
push
push
push
mov
pushl
call
pushl
mov
mov
pushl
call
pop
pop
ret
mov
push
mov
mov
dec
je
sub
je
push
xor
push
cmp
mov
jne
cmp
jne
inc
push
pop
mov
push
mov
call
test
je
mov
push
push
jmp
push
mov
call
test
jne
mov
push
push
mov
call
mov
pop
pop
jmp
push
pushl
call
pop
ret
push
mov
push
push
mov
mov
test
jg
push
call
mov
andl
test
je
mov
call
test
mov
je
mov
lea
push
mov
call
mov
mov
call
cmpl
jne
jmp
cmp
jne
push
mov
call
xor
cmp
pop
pop
setl
pop
ret
push
mov
push
push
push
mov
push
xor
mov
cmp
je
mov
push
call
movzwl
pushl
add
push
call
test
jne
lea
push
push
pushl
call
test
je
mov
cmp
je
push
call
push
push
push
pushl
pushl
push
call
push
push
call
push
mov
call
push
push
push
pushl
pushl
push
call
cmp
je
pushl
call
mov
pushl
call
pop
pop
pop
leave
ret
call
mov
test
jne
call
mov
ret
call
cmpb
jne
push
call
mov
call
push
push
push
push
call
push
mov
mov
call
mov
cmpl
je
call
pushl
call
push
mov
call
pop
ret
push
call
push
call
cmpl
jne
mov
call
mov
test
je
mov
test
je
mov
call
mov
test
je
mov
push
call
andl
mov
pop
test
je
push
pushl
call
ret
cmpl
je
test
je
mov
push
call
ret
push
push
push
push
push
push
xor
mov
pop
mov
cmp
je
lea
push
push
push
push
push
call
test
jne
mov
mov
incl
push
mov
call
test
jne
xor
cmp
jne
mov
mov
call
test
je
mov
lea
push
mov
call
test
je
push
mov
pop
push
push
push
push
push
call
test
jne
jmp
mov
mov
call
pop
pop
pop
pop
pop
ret
mov
push
push
mov
cmp
je
cmp
je
cmp
je
cmp
jne
xor
jmp
mov
mov
cmp
jne
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
push
pop
pop
pop
ret
mov
ret
push
push
xor
push
cmp
push
jg
mov
mov
cmp
je
mov
cmp
je
push
call
test
je
push
push
pop
push
push
pushl
push
call
push
push
push
push
push
pushl
call
call
add
push
mov
call
mov
cmp
je
cmp
je
cmp
je
cmp
jne
push
mov
call
pushl
call
test
jne
cmp
jl
push
push
push
pushl
push
call
push
push
push
push
push
pushl
call
mov
cmp
jle
push
mov
call
orl
mov
jmp
call
add
push
mov
call
cmp
jne
call
push
call
xor
cmp
pop
pop
pop
pop
setl
ret
push
mov
push
push
push
push
mov
call
mov
xor
cmp
je
mov
mov
mov
cmp
jae
push
push
push
pushl
call
cmp
jne
mov
cmp
jne
jmp
mov
push
push
push
push
call
cmp
je
mov
mov
cmp
je
push
push
push
add
jmp
pushl
mov
pushl
call
push
pop
jmp
xor
pop
pop
pop
pop
pop
ret
push
push
mov
cmpl
jne
push
call
test
jne
call
mov
test
je
mov
push
push
call
test
je
push
pop
jmp
test
je
pushl
call
mov
call
cmp
je
mov
push
mov
call
jmp
xor
pop
pop
ret
mov
mov
cmp
jne
or
jmp
cmp
jne
push
pushl
call
xor
ret
push
call
cmpb
mov
jne
test
jge
cmp
jne
call
test
je
pushl
mov
mov
push
call
jmp
push
mov
call
pushl
pushl
push
pushl
call
pop
ret
mov
push
cmpl
jne
cmpl
jne
mov
shr
test
jne
mov
push
call
test
jl
push
call
test
jl
push
call
test
jl
push
pop
jmp
xor
pop
ret
push
mov
sub
push
push
mov
xor
cmp
push
mov
je
mov
sub
je
dec
dec
je
sub
jmp
pushl
call
cmp
je
mov
call
mov
cmp
je
mov
call
test
je
cmp
je
call
mov
cmp
je
mov
cmp
jne
cmpl
je
cmp
jne
push
push
push
pushl
call
jmp
call
cmpl
mov
jae
cmp
je
push
call
test
je
push
push
push
pushl
jmp
cmp
jne
mov
cmp
je
mov
cmp
jb
cmp
ja
push
mov
call
mov
cmpl
jne
push
lea
pop
movl
rep
mov
mov
call
test
je
mov
lea
push
mov
call
test
je
andl
push
pop
jmp
andl
xor
pop
pop
pop
leave
ret
mov
test
jne
mov
test
jne
call
push
call
ret
push
mov
xor
push
push
lea
push
push
push
call
test
je
cmpl
je
mov
push
mov
call
test
jne
push
call
push
call
push
pop
pop
pop
ret
mov
push
pop
xor
mov
mov
mov
mov
mov
mov
ret
mov
call
push
mov
mov
andl
add
test
je
call
mov
mov
leave
ret
push
mov
mov
push
push
push
test
pop
je
mov
mov
mov
mov
jmp
mov
cmp
ja
je
dec
dec
je
sub
je
dec
je
sub
je
sub
je
dec
jne
mov
mov
pushl
pushl
call
jmp
mov
mov
pushl
pushl
call
jmp
mov
call
jmp
pushl
jmp
mov
call
jmp
pushl
jmp
mov
mov
pushl
pushl
pushl
call
jmp
sub
je
sub
je
dec
je
dec
je
dec
je
xor
jmp
pushl
mov
call
jmp
pushl
mov
call
jmp
pushl
mov
mov
push
call
xor
cmp
sete
andl
jmp
mov
mov
push
call
jmp
mov
mov
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
ret
push
mov
mov
push
push
push
cmp
mov
jne
call
pushl
mov
mov
pushl
mov
pushl
push
call
jmp
cmp
jne
mov
andl
mov
mov
mov
mov
call
mov
test
je
cmpl
jne
mov
mov
test
je
cmpl
je
cmpl
jne
cmp
jne
cmpl
jne
cmpl
je
jmp
mov
test
je
push
push
pushl
call
add
test
jne
mov
movl
mov
add
jmp
mov
jmp
mov
jmp
cmp
je
mov
movzwl
shr
mov
jne
mov
mov
mov
call
mov
test
je
pushl
pushl
push
pushl
call
test
jne
mov
jmp
pushl
pushl
pushl
pushl
pushl
pushl
push
call
jmp
xor
pop
pop
pop
pop
ret
push
pop
ret
xor
ret
mov
ret
call
mov
push
mov
mov
call
ret
call
mov
push
mov
mov
call
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
mov
push
call
mov
mov
call
test
je
mov
call
push
call
test
je
mov
push
mov
call
pop
ret
push
pop
ret
mov
ret
mov
ret
mov
xor
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
mov
test
je
cmpl
jne
mov
neg
sbb
and
add
or
push
pushl
pushl
call
jmp
cmpl
push
jne
mov
call
cmp
jne
pushl
call
push
call
mov
test
je
mov
push
push
pushl
call
push
call
mov
call
pushl
mov
call
pop
movl
pop
ret
push
mov
push
mov
test
je
cmpl
jne
mov
neg
sbb
and
or
push
pushl
pushl
call
jmp
mov
mov
push
push
push
pushl
call
test
je
mov
push
pushl
push
pushl
call
pop
pop
ret
push
push
mov
xor
xor
cmp
mov
setne
push
mov
call
cmp
je
cmp
jne
cmp
jne
call
cmp
je
pushl
mov
push
push
pushl
pushl
call
pop
pop
ret
push
mov
mov
test
je
cmpl
jne
mov
push
mov
push
push
pushl
call
pushl
and
or
pushl
push
mov
pushl
pushl
call
pop
jmp
pushl
mov
pushl
call
pop
ret
cmpl
jne
pushl
call
push
push
call
pop
test
pop
je
mov
mov
call
jmp
push
pop
jmp
xor
ret
mov
ret
push
push
mov
mov
push
call
test
jne
mov
call
test
je
cmpl
je
xor
jmp
cmpl
jne
mov
cmp
je
cmp
jne
push
pushl
call
test
je
push
pushl
call
test
je
push
pushl
call
test
je
push
call
test
je
push
push
push
pushl
call
push
pop
jmp
push
mov
call
pop
pop
ret
push
mov
push
push
mov
push
pushl
mov
mov
pushl
push
push
call
test
jne
test
je
cmp
jne
test
je
cmp
jae
pushl
call
push
call
test
je
pushl
mov
mov
pushl
push
push
call
test
jne
call
test
je
pushl
mov
mov
pushl
push
push
call
test
je
push
pop
jmp
xor
pop
pop
pop
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
movl
andl
cmpl
je
call
orl
mov
call
mov
pop
mov
leave
ret
push
mov
push
mov
push
mov
shr
test
mov
jne
cmpl
jne
movzwl
mov
call
mov
push
push
push
call
push
push
call
push
mov
pushl
push
call
pop
pop
pop
ret
push
mov
pushl
call
pushl
mov
push
pushl
push
call
pop
ret
mov
push
test
mov
jne
call
pushl
mov
mov
mov
push
pushl
call
pop
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
mov
jne
call
mov
mov
call
mov
push
mov
mov
mov
mov
call
push
call
cmp
je
mov
lea
push
mov
call
cmp
je
pushl
mov
lea
push
mov
call
mov
cmp
je
mov
mov
lea
movb
push
lea
push
mov
pushl
call
add
xor
cmp
sete
mov
cmp
jne
push
call
test
je
push
pushl
call
pop
test
pop
je
push
pushl
call
pop
test
pop
je
push
pushl
call
pop
test
pop
jne
cmpw
jne
mov
pushl
lea
call
pushl
lea
movb
call
lea
call
lea
mov
movb
call
cmp
je
pushl
call
mov
orl
orl
push
call
mov
cmp
jne
xor
jmp
mov
push
push
push
pushl
pushl
call
lea
mov
mov
call
jmp
mov
call
mov
orl
mov
ret
mov
mov
xor
orl
cmp
je
mov
lea
push
mov
call
cmp
je
mov
push
mov
call
call
test
jne
mov
mov
call
cmp
je
testb
jne
pushl
call
mov
cmp
je
pushl
call
pushl
call
cmp
jne
testb
je
xor
jmp
push
pop
mov
pop
pop
mov
pop
leave
ret
mov
push
mov
pop
ret
push
push
mov
call
lea
push
push
push
movl
call
mov
add
mov
mov
movzwl
mov
mov
mov
pop
pop
ret
push
push
mov
call
mov
test
je
push
mov
call
mov
test
je
mov
lea
push
push
call
push
mov
call
mov
pop
pop
ret
push
mov
call
mov
call
pushl
call
test
je
push
pushl
call
andl
call
mov
pop
test
je
push
mov
call
ret
mov
call
sub
push
push
mov
push
mov
mov
mov
mov
mov
call
cmpl
mov
je
call
mov
push
pushl
push
call
push
push
call
mov
test
je
push
call
mov
cmpl
jne
or
jmp
mov
call
mov
call
xor
cmp
mov
je
pushl
call
test
je
push
pushl
call
movl
push
mov
call
pushl
call
push
push
pushl
mov
call
cmp
je
testb
je
push
mov
pop
call
test
je
push
pop
push
mov
call
cmp
je
push
push
push
push
push
push
mov
call
jmp
mov
call
mov
orl
mov
ret
mov
xor
orl
cmp
je
push
pushl
call
cmp
je
call
cmp
jne
pushl
call
mov
mov
call
mov
call
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
testb
je
mov
pushl
call
pushl
pushl
call
pop
ret
push
push
pushl
mov
mov
call
push
mov
call
mov
call
pop
pop
ret
ret
push
mov
push
mov
call
call
mov
test
je
mov
test
je
mov
test
je
mov
push
push
push
call
jmp
mov
push
pushl
push
call
test
jne
push
mov
call
xor
jmp
mov
call
mov
test
je
testb
je
push
push
pushl
call
push
call
test
je
mov
call
xor
mov
pop
pop
ret
push
mov
push
push
push
push
call
xor
cmp
jne
xor
jmp
call
cmp
mov
je
mov
lea
push
push
push
push
mov
call
test
je
push
pop
jmp
call
mov
lea
push
push
mov
push
push
mov
call
pop
pop
leave
ret
push
mov
mov
test
je
push
call
jmp
pushl
mov
call
test
je
push
mov
call
test
jne
push
mov
call
xor
pop
ret
push
mov
call
mov
test
je
call
neg
sbb
mov
and
push
call
push
pop
pop
ret
push
mov
push
call
test
je
push
mov
call
pop
ret
push
call
ret
push
push
mov
cmpl
mov
mov
je
push
call
mov
push
pushl
push
call
push
push
call
pop
test
je
push
call
mov
push
test
pop
je
cmpw
mov
jne
mov
mov
mov
jmp
mov
mov
test
jne
test
jne
test
jne
push
pop
jmp
xor
pop
pop
ret
pushl
pushl
pushl
call
ret
push
mov
test
jne
mov
test
je
lea
test
je
call
mov
test
je
mov
push
push
mov
call
push
pop
jmp
xor
pop
ret
mov
test
je
add
jmp
xor
ret
jmp
push
call
mov
ret
call
jmp
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
call
jmp
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
call
jmp
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
call
jmp
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
push
mov
call
push
lea
push
push
movl
call
add
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
call
lea
push
push
push
movl
call
mov
add
mov
mov
pop
pop
ret
push
mov
pushl
pushl
call
mov
call
mov
pop
mov
ret
push
mov
sub
testb
push
jne
mov
mov
call
test
jne
lea
push
pushl
call
mov
mov
cmp
jne
mov
cmp
jne
push
pushl
call
push
call
test
je
mov
call
test
jne
mov
mov
call
test
je
push
mov
call
pop
leave
ret
push
mov
push
push
push
push
mov
push
mov
call
test
jne
mov
call
mov
mov
mov
call
cmp
je
mov
test
mov
jne
and
jmp
mov
mov
lea
push
pushl
push
pushl
call
pop
pop
pop
leave
ret
push
mov
cmpl
push
jne
cmpl
je
cmpl
je
cmpl
jne
mov
call
test
je
pushl
call
push
call
mov
test
je
call
push
call
cmp
je
mov
call
test
je
pushl
call
push
pop
jmp
xor
pop
pop
ret
mov
call
sub
push
push
push
mov
mov
push
call
mov
push
pop
lea
lea
andl
mov
mov
rep
mov
mov
mov
mov
mov
cmp
mov
mov
mov
mov
jne
mov
test
je
mov
push
call
andl
cmp
jne
lea
push
lea
push
push
call
pushl
mov
mov
pushl
push
call
cmp
mov
jne
pushl
lea
push
push
call
jmp
call
mov
mov
add
push
mov
pushl
call
mov
mov
call
mov
ret
mov
push
mov
lea
pop
lea
rep
mov
pop
pop
mov
pop
leave
ret
push
push
mov
call
mov
call
mov
call
movswl
shr
movswl
mov
mov
lea
pop
ret
push
mov
push
mov
call
pushl
mov
mov
pushl
pushl
call
pop
ret
mov
call
push
call
mov
cmpl
jne
cmpl
je
push
push
call
push
mov
call
pop
mov
mov
andl
test
je
push
push
push
call
jmp
xor
orl
push
mov
call
pop
mov
mov
pop
mov
leave
ret
push
push
push
call
mov
pushl
mov
call
mov
push
mov
call
mov
pop
pop
ret
push
call
mov
xor
test
je
pushl
add
call
ret
push
mov
push
mov
test
jne
xor
jmp
push
push
call
mov
push
mov
lea
call
push
mov
mov
call
push
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
test
je
pushl
lea
call
andl
andl
mov
pop
pop
ret
push
mov
cmpl
jne
push
pop
jmp
pushl
call
pushl
pushl
pushl
pushl
push
call
pop
ret
mov
ret
mov
call
sub
push
push
push
mov
mov
mov
push
push
call
andl
andl
mov
mov
push
sub
pop
je
sub
je
sub
je
sub
jne
push
call
mov
lea
push
lea
push
push
call
pushl
pushl
push
push
pushl
call
pushl
mov
lea
push
push
call
mov
mov
pop
pop
mov
pop
leave
ret
pushl
push
push
call
push
push
call
push
call
push
call
jmp
push
call
mov
shr
push
movswl
push
push
call
xor
test
sete
jmp
pushl
call
push
mov
call
push
pushl
push
call
test
je
pushl
pushl
pushl
push
pushl
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
mov
pushl
call
mov
mov
call
mov
ret
push
mov
push
push
push
mov
call
mov
mov
mov
test
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
pushl
push
lea
push
pushl
pushl
call
test
je
mov
jmp
pushl
pushl
push
pushl
call
pop
pop
pop
ret
push
mov
sub
push
mov
call
cmpl
mov
je
pushl
pushl
pushl
pushl
call
jmp
mov
push
push
mov
push
mov
call
movzbl
mov
mov
test
jne
testb
jne
test
jne
cmpl
je
push
push
call
test
jne
mov
mov
shr
test
jne
and
lea
push
push
mov
push
call
lea
push
push
call
test
je
test
je
push
mov
call
mov
mov
call
mov
mov
call
cmpl
mov
jne
cmpl
jne
mov
test
je
cmpl
je
push
push
push
push
push
call
test
mov
je
call
push
push
mov
call
pushl
mov
sub
push
neg
sbb
inc
call
test
jne
pushl
push
push
call
jmp
call
mov
push
push
push
call
cmp
je
mov
mov
mov
andl
jmp
push
push
call
test
mov
je
mov
mov
push
push
call
test
jne
pushl
push
push
call
push
push
call
cmp
jne
push
call
mov
cmpl
mov
jne
mov
push
push
push
call
mov
pushl
push
push
pushl
call
cmpl
mov
je
pushl
call
andl
mov
pop
pop
pop
leave
ret
push
push
push
mov
call
mov
mov
cmp
je
cmpl
jne
call
push
push
push
push
call
test
mov
jne
call
mov
pop
pop
ret
push
push
mov
call
mov
call
cmpb
je
mov
test
je
push
call
andl
cmpl
je
andl
xor
pop
ret
push
pop
pop
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
push
mov
call
test
jne
mov
mov
call
xor
jmp
push
push
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
call
test
jne
mov
mov
call
xor
test
setne
pop
pop
leave
ret
push
mov
cmpl
jne
push
call
movl
push
pop
pop
ret
push
mov
mov
push
test
push
jne
xor
jmp
mov
pushl
mov
pushl
mov
mov
push
mov
mov
sub
sub
push
push
mov
push
or
push
push
pushl
pushl
push
call
pop
pop
pop
ret
mov
call
push
push
mov
mov
movl
andl
cmpl
je
cmp
je
cmp
je
cmp
je
cmp
je
call
mov
test
je
mov
push
call
mov
test
je
cmp
jne
andl
orl
mov
call
mov
pop
mov
leave
ret
push
mov
mov
test
je
mov
push
call
andl
mov
call
pop
ret
push
mov
sub
push
push
push
mov
call
mov
xor
cmp
je
cmp
jne
call
cmp
jne
call
cmp
jne
call
test
je
push
call
mov
cmp
jne
mov
mov
cmp
je
mov
call
mov
mov
push
test
pop
je
mov
push
call
andl
test
je
call
mov
test
je
cmpl
je
push
lea
push
push
call
mov
add
mov
mov
lea
movl
push
push
push
mov
pushl
call
mov
push
pushl
call
mov
mov
call
push
pushl
call
cmp
jne
mov
mov
call
mov
test
je
push
push
pushl
call
mov
call
mov
mov
call
pop
pop
pop
leave
ret
cmpl
mov
je
jmp
jmp
push
mov
cmpl
jne
xor
pop
ret
push
push
push
call
pushl
lea
call
mov
mov
test
jne
pushl
call
jmp
mov
call
test
mov
jne
mov
call
mov
pop
pop
pop
ret
push
mov
push
mov
mov
test
jne
mov
call
mov
test
jne
pushl
pushl
pushl
pushl
call
jmp
pushl
pushl
pushl
pushl
push
call
pop
pop
ret
lea
ret
push
mov
call
mov
test
je
push
pushl
call
xor
pop
ret
push
call
mov
mov
test
je
mov
test
je
push
push
push
push
call
cmpl
mov
je
test
je
push
call
test
jl
mov
push
mov
call
pop
ret
push
mov
push
push
pushl
mov
pushl
pushl
call
mov
test
je
push
push
call
mov
movzwl
test
mov
je
cmpl
jb
mov
orl
orl
push
push
push
push
mov
mov
call
test
jne
orl
mov
pop
jmp
or
pop
pop
pop
ret
push
mov
mov
test
jne
pushl
call
lea
push
mov
push
call
push
pushl
call
mov
push
call
jmp
mov
pushl
call
pop
ret
push
mov
push
mov
cmpl
jne
pushl
call
test
je
mov
push
mov
call
jmp
push
pushl
call
test
jne
mov
call
pop
pop
ret
push
mov
lea
push
push
mov
mov
pushl
call
test
je
mov
jmp
mov
call
pop
pop
ret
mov
push
push
mov
pushl
call
test
jne
mov
call
pop
ret
push
mov
push
mov
mov
test
je
lea
push
call
test
je
mov
jmp
mov
call
pop
pop
ret
push
push
mov
push
pushl
call
mov
xor
test
jle
push
pushl
call
push
call
test
je
pushl
push
call
test
jne
jmp
push
pushl
call
cmp
je
inc
cmp
jl
xor
pop
pop
pop
ret
pushl
call
jmp
push
mov
push
mov
cmpl
jne
push
mov
call
mov
cmp
jne
pushl
jmp
push
call
push
call
pushl
push
call
test
je
mov
push
mov
call
jmp
mov
push
push
pushl
call
test
je
push
mov
call
test
jne
mov
call
pop
pop
ret
mov
call
sub
push
push
mov
push
lea
mov
push
pushl
pushl
call
test
jne
push
call
test
jne
xor
jmp
call
xor
cmp
je
push
call
mov
call
pushl
mov
lea
push
call
lea
movb
push
push
mov
call
orl
push
call
push
pop
mov
pop
pop
mov
pop
leave
ret
push
call
xor
push
push
call
push
mov
sub
mov
push
mov
mov
mov
push
mov
mov
call
mov
lea
sub
push
mov
mov
push
push
mov
call
pop
leave
ret
mov
call
push
push
push
mov
call
mov
mov
call
mov
call
mov
xor
mov
mov
call
test
je
mov
mov
call
push
mov
push
push
push
pushl
call
push
push
push
push
push
pushl
call
mov
call
push
mov
push
push
pushl
call
push
push
push
push
push
pushl
call
call
cmp
je
push
push
push
push
call
pushl
mov
pushl
pushl
pushl
call
test
pop
jne
push
push
push
call
orl
call
mov
call
mov
pop
pop
mov
leave
ret
mov
ret
push
mov
push
mov
mov
mov
mov
cmpl
je
cmp
je
add
jmp
cmp
jne
cmp
jb
cmp
ja
mov
jmp
xor
mov
mov
pop
pop
ret
push
mov
push
push
mov
lea
andl
mov
push
pushl
mov
pushl
pushl
call
test
jne
pushl
mov
mov
pushl
pushl
call
mov
mov
pop
leave
ret
mov
call
sub
andl
push
mov
push
push
cmp
mov
jne
pushl
mov
pushl
call
test
je
jmp
cmp
jne
mov
cmpl
je
mov
lea
push
push
pushl
mov
call
test
jne
jmp
mov
cmp
jne
push
call
push
pushl
push
call
cmp
jne
mov
shr
push
movswl
push
push
call
test
jne
mov
mov
call
mov
mov
mov
mov
and
and
push
xor
call
mov
lea
cmp
lea
mov
jne
cmp
jne
mov
push
mov
call
test
je
cmpl
jb
jmp
test
mov
mov
je
jmp
mov
mov
mov
cmp
jae
push
push
push
pushl
call
test
mov
jne
jmp
mov
push
push
push
push
call
test
mov
je
jmp
mov
mov
mov
cmp
je
push
push
add
push
push
call
test
mov
jne
mov
mov
test
mov
jne
andl
push
call
xor
mov
pop
pop
pop
mov
leave
ret
push
mov
call
mov
mov
mov
cmpl
mov
jne
call
mov
cmp
sbb
and
add
dec
cmp
ja
jmp
pushl
call
push
jmp
pushl
jmp
mov
shr
push
movswl
push
pushl
call
jmp
push
pushl
call
jmp
lea
call
mov
andl
lea
mov
call
mov
mov
push
movb
mov
call
test
jne
mov
test
je
pushl
lea
call
test
je
mov
lea
push
push
lea
mov
push
call
andl
andl
andb
lea
mov
call
orl
lea
jmp
lea
call
mov
pushl
mov
lea
push
mov
movl
call
andl
orl
mov
lea
call
jmp
mov
shr
push
push
call
jmp
mov
shr
push
movzwl
jmp
push
mov
call
jmp
push
call
push
mov
shr
push
movzwl
push
mov
call
jmp
mov
call
jmp
pushl
jmp
mov
shr
movswl
push
movswl
push
jmp
mov
shr
push
movzwl
jmp
pushl
call
push
push
call
push
xor
cmp
sete
push
jmp
pushl
call
push
jmp
pushl
call
jmp
mov
shr
push
movzwl
push
pushl
call
jmp
pushl
jmp
push
call
jmp
mov
shr
push
movzwl
jmp
movswl
shr
movswl
push
push
pushl
call
jmp
push
pushl
call
jmp
push
call
push
jmp
mov
shr
push
push
call
jmp
mov
movswl
shr
cmpl
mov
movswl
mov
jne
push
call
push
pushl
pushl
jmp
push
push
jmp
push
pushl
mov
call
jmp
movswl
shr
movswl
push
push
jmp
mov
call
jmp
push
mov
call
jmp
mov
push
shr
push
movzwl
jmp
movswl
shr
movswl
push
push
pushl
mov
call
jmp
push
mov
pushl
call
movl
jmp
movzwl
shr
push
push
mov
mov
shr
push
movzwl
push
call
mov
jmp
push
mov
call
mov
mov
push
pushl
mov
call
mov
mov
test
je
mov
mov
push
pop
jmp
adc
inc
add
inc
add
inc
add
add
inc
add
inc
add
xlat
inc
add
inc
add
xlat
inc
add
fadds
and
inc
add
xlat
inc
add
inc
add
fadds
push
xlat
inc
add
inc
add
inc
add
fadds
jo
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
fadds
pop
fadds
test
inc
add
fadds
inc
fadds
push
fadds
pop
fadds
cmp
inc
add
fadds
rcr
inc
add
fadds
rcr
inc
add
xlat
inc
add
inc
add
inc
add
fadds
pop
fadds
jo
inc
add
icebp
call
movl
movl
mov
pop
ret
mov
movl
mov
ret
push
mov
sub
mov
push
push
push
movzwl
xor
mov
shr
cmp
mov
jne
cmp
je
lea
call
mov
lea
push
push
push
push
mov
mov
call
cmp
je
mov
mov
push
push
mov
pushl
push
call
pop
pop
pop
leave
ret
push
mov
call
mov
cmp
je
push
pushl
call
test
je
push
pop
jmp
cmp
jne
xor
jmp
push
mov
sub
push
push
mov
push
mov
mov
push
call
movzwl
mov
mov
push
mov
mov
call
mov
cmp
je
pushl
push
call
test
je
push
pop
jmp
mov
lea
push
push
movzwl
or
mov
mov
push
pushl
mov
mov
call
pop
pop
pop
leave
ret
push
push
test
je
mov
test
je
mov
push
call
push
call
mov
test
je
mov
mov
call
test
jne
pushl
jmp
mov
jmp
xor
pop
pop
ret
push
mov
push
call
test
je
mov
call
test
je
mov
jmp
push
push
call
test
je
push
call
jmp
push
push
call
pop
ret
test
je
mov
test
jne
xor
ret
push
mov
push
call
test
je
mov
push
jmp
push
call
pop
ret
push
mov
test
je
cmpl
jne
xor
pop
ret
mov
mov
call
test
jne
mov
call
mov
test
je
mov
call
test
je
mov
mov
jmp
mov
pop
ret
mov
push
test
mov
jne
call
mov
test
jne
xor
jmp
mov
pushl
push
pushl
push
call
pop
ret
push
mov
push
push
pushl
pushl
call
mov
mov
test
je
push
call
test
je
pushl
pushl
push
call
test
jne
cmpl
push
jne
call
jmp
call
test
jne
pushl
call
mov
test
je
pushl
pushl
push
call
test
jne
push
push
call
jmp
xor
pop
pop
pop
ret
push
mov
push
push
pushl
mov
call
mov
test
je
cmpl
je
push
call
test
je
pushl
pushl
pushl
pushl
push
call
jmp
pushl
pushl
pushl
push
call
cmpl
je
push
call
test
je
pushl
pushl
pushl
pushl
pushl
push
call
push
push
call
jmp
pop
pop
pop
ret
xor
ret
push
mov
call
cmpl
jne
and
push
push
mov
call
push
pushl
call
pop
ret
push
push
mov
mov
test
je
push
call
test
je
mov
push
mov
call
test
jne
cmp
je
push
call
mov
jmp
push
pop
jmp
xor
pop
pop
ret
push
mov
push
mov
call
pushl
mov
mov
pushl
pushl
pushl
call
pop
ret
mov
call
sub
push
push
push
call
test
je
mov
lea
push
mov
call
test
jne
push
call
push
mov
call
test
je
mov
test
je
push
lea
call
mov
test
je
push
lea
call
pushl
andl
lea
mov
call
andl
orl
lea
mov
call
mov
jmp
xor
jmp
pushl
mov
call
mov
pop
pop
mov
leave
ret
push
mov
cmpl
push
je
pushl
mov
pushl
lea
push
pushl
call
cmp
jb
cmp
ja
test
je
mov
test
je
mov
push
pop
jmp
pushl
pushl
pushl
pushl
call
pop
pop
ret
push
mov
sub
mov
mov
cmp
push
ja
je
cmp
jb
cmp
jbe
cmp
je
cmp
jne
mov
mov
mov
mov
mov
xor
lea
push
push
movzwl
or
push
push
call
jmp
mov
xor
shr
push
or
push
push
push
call
test
je
mov
push
cmp
pop
je
mov
jmp
cmp
jb
cmp
jbe
cmp
jne
pushl
add
pushl
pushl
push
call
jmp
cmp
jb
cmp
ja
mov
add
push
mov
mov
lea
push
xor
push
push
push
mov
call
cmp
pop
jne
xor
pop
leave
ret
cmpw
push
mov
je
cmpw
jne
push
pushl
call
test
jne
mov
call
pop
ret
cmpw
jne
call
testb
jne
push
call
xor
ret
push
mov
call
mov
test
je
cmp
jne
mov
call
call
cmpb
jne
call
test
je
call
cmp
jne
push
mov
call
mov
test
je
call
mov
call
test
jne
push
push
push
push
push
pushl
call
mov
call
pop
ret
push
push
mov
call
cmpb
jne
push
mov
call
mov
call
test
je
call
cmp
jne
mov
test
je
call
andl
push
push
mov
call
pop
pop
ret
push
mov
call
mov
test
je
cmp
jne
pushl
mov
call
mov
call
test
jne
call
push
push
pushl
pushl
pushl
pushl
call
pop
ret
push
push
push
mov
call
test
jne
call
mov
test
je
mov
push
call
test
jl
push
call
test
jl
push
call
test
jl
push
push
push
pushl
call
push
pop
jmp
mov
call
pop
pop
pop
ret
push
mov
call
cmp
jne
mov
call
mov
call
test
jne
call
push
push
pushl
pushl
pushl
pushl
call
mov
call
pop
ret
push
mov
lea
push
push
mov
mov
pushl
call
test
je
mov
jmp
mov
call
pop
pop
ret
push
mov
mov
test
je
push
call
test
jne
mov
call
pop
ret
push
mov
sub
push
push
push
mov
mov
push
push
push
lea
push
mov
push
call
test
je
lea
push
call
push
push
push
lea
push
push
jmp
mov
call
pop
pop
pop
leave
ret
push
mov
push
mov
mov
lea
push
call
test
je
mov
jmp
mov
call
pop
pop
ret
push
mov
push
push
push
mov
mov
lea
push
mov
call
test
je
mov
jmp
push
mov
call
test
mov
je
mov
pushl
mov
pushl
pushl
push
pushl
call
test
jne
mov
call
jmp
mov
pop
pop
pop
pop
ret
push
mov
sub
cmpl
je
cmpl
je
mov
cmp
je
test
je
cmp
je
cmp
jne
push
pushl
call
test
je
lea
push
push
pushl
call
pushl
pushl
call
mov
cmp
jne
push
call
push
pushl
call
push
pop
jmp
xor
leave
ret
mov
ret
mov
call
sub
push
push
push
mov
mov
pushl
lea
push
call
call
mov
andl
andl
mov
mov
lea
mov
mov
mov
mov
lea
push
mov
call
movl
jmp
mov
ret
mov
push
push
mov
mov
call
mov
call
mov
ret
mov
mov
mov
mov
mov
pop
pop
mov
pop
leave
ret
mov
mov
andl
mov
mov
mov
ret
push
mov
sub
push
push
mov
push
mov
call
mov
mov
test
je
mov
jmp
testb
je
pushl
call
jmp
push
pushl
call
mov
test
je
push
push
push
push
call
test
je
mov
mov
lea
push
pushl
call
testb
jne
test
je
push
push
call
test
je
test
je
xor
test
movl
jne
call
test
je
mov
lea
push
push
push
call
push
call
mov
lea
push
lea
push
call
lea
push
lea
push
call
jmp
lea
push
push
call
lea
push
push
push
call
push
call
lea
push
lea
push
call
jmp
pushl
call
mov
mov
lea
push
push
call
lea
push
push
call
lea
push
push
push
push
call
mov
mov
mov
add
sub
mov
cltd
sub
sub
mov
mov
cltd
sub
mov
sar
sar
sub
mov
add
cltd
sub
mov
mov
cltd
sub
sar
sar
sub
cmp
jge
mov
jmp
mov
add
cmp
jle
sub
add
mov
cmp
jge
mov
jmp
add
cmp
jle
mov
sub
add
push
push
push
push
push
mov
push
call
pop
pop
pop
leave
ret
push
push
push
xor
cmp
mov
je
call
mov
push
pushl
push
call
cmp
je
push
push
call
cmp
jne
xor
jmp
push
call
mov
push
mov
call
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
test
movl
je
push
mov
mov
test
je
inc
inc
mov
inc
inc
mov
add
cmp
mov
je
cmp
jne
mov
jmp
cmp
jne
mov
cmp
jne
orl
lea
push
push
movl
mov
push
jmp
cmp
je
cmp
jne
movzwl
push
push
push
movzwl
push
pushl
call
cmp
jne
andl
add
cmpl
jne
cmpl
pop
je
xor
push
push
push
push
push
pushl
call
mov
pop
pop
leave
ret
mov
mov
cmp
jb
cmp
jbe
cmp
jb
cmp
ja
push
call
jmp
xor
ret
sub
push
push
push
push
push
xor
testb
pop
mov
mov
mov
je
call
test
mov
je
mov
pushl
call
orl
mov
call
mov
mov
add
cmp
je
push
push
push
push
push
call
test
jne
cmp
je
push
mov
call
pushl
call
mov
testb
jne
cmp
je
cmp
jne
pushl
push
push
pushl
call
testb
jne
mov
incl
push
push
push
pushl
call
test
jne
mov
jmp
call
mov
mov
call
test
je
cmp
je
mov
cmp
je
cmp
jne
push
mov
call
pushl
call
mov
mov
mov
call
test
je
call
mov
push
mov
call
test
je
movl
mov
push
push
push
push
push
call
test
jne
jmp
push
call
or
jmp
andl
mov
pop
pop
pop
pop
add
ret
mov
and
ret
mov
mov
mov
test
je
and
mov
xor
push
push
push
pushl
call
ret
mov
push
mov
push
mov
call
movzwl
mov
mov
push
push
call
test
mov
jne
push
push
call
mov
push
call
pop
pop
ret
push
push
mov
push
push
call
push
mov
call
mov
test
je
push
push
xor
call
test
jne
mov
mov
and
cmp
jne
call
mov
jmp
pushl
call
test
je
mov
test
jne
call
or
push
call
mov
pop
pop
pop
ret
push
mov
sub
call
mov
mov
not
and
jne
push
pop
jmp
push
push
push
xor
push
lea
push
push
xor
call
mov
add
mov
call
mov
push
testb
mov
mov
pop
mov
mov
je
lea
movl
push
movl
call
test
je
push
pop
testb
je
orb
lea
push
movl
call
test
je
or
testb
je
lea
mov
push
movl
movl
call
test
je
or
testb
je
push
lea
push
push
mov
mov
call
test
je
or
test
je
push
lea
push
push
movl
movl
call
test
je
or
testb
je
lea
push
push
movl
call
or
andw
testb
je
lea
push
push
movl
call
or
testb
je
lea
push
push
movl
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
movl
call
or
mov
test
je
lea
push
push
movl
call
or
mov
test
je
lea
push
push
movl
call
or
mov
test
je
push
lea
push
movl
call
or
mov
test
je
push
lea
push
movl
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
movl
call
or
mov
test
je
push
lea
push
movl
call
or
mov
mov
or
mov
mov
and
cmp
jne
or
or
mov
mov
pop
and
pop
pop
sub
neg
sbb
inc
leave
ret
mov
test
je
cmp
je
cmp
je
push
pop
ret
xor
ret
push
mov
pushl
call
test
je
mov
mov
call
mov
mov
call
mov
call
push
push
pushl
call
cmpl
jne
mov
push
pop
pop
ret
pushl
mov
call
ret
mov
mov
mov
orl
andl
movl
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
mov
mov
mov
andl
movl
mov
ret
mov
call
push
push
mov
mov
movl
cmpl
movl
je
cmpl
je
call
andb
lea
call
mov
pop
mov
leave
ret
push
mov
push
push
push
mov
push
call
test
pop
je
push
mov
call
mov
jmp
xor
push
mov
push
push
lea
push
push
call
push
pushl
call
push
call
test
pop
jne
test
je
mov
push
mov
call
push
call
push
call
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
mov
push
mov
andl
orl
lea
and
mov
call
pushl
lea
push
call
lea
mov
push
call
mov
xor
and
sub
je
dec
je
dec
jne
mov
jmp
mov
jmp
mov
mov
push
and
pop
je
cmp
je
cmp
je
cmp
je
cmp
jne
push
pop
jmp
push
jmp
mov
jmp
xor
andl
mov
not
shr
and
movl
test
mov
je
and
neg
sbb
and
inc
inc
jmp
push
pop
push
push
lea
push
push
push
push
pushl
call
cmp
jne
mov
test
je
call
push
mov
call
pushl
lea
mov
call
xor
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
cmpl
jne
xor
jmp
lea
push
push
pushl
pushl
pushl
call
test
jne
push
call
push
call
mov
pop
ret
push
mov
push
push
mov
mov
test
je
lea
push
push
push
pushl
pushl
call
test
jne
pushl
call
push
call
cmp
je
pushl
push
push
call
pop
pop
pop
ret
push
pushl
push
pushl
pushl
call
mov
cmp
jne
push
call
push
call
mov
pop
ret
push
push
push
push
pushl
call
mov
cmp
jne
push
call
push
call
mov
pop
ret
mov
cmp
je
push
call
test
jne
push
call
push
call
ret
push
mov
push
xor
mov
cmp
je
push
call
mov
neg
sbb
inc
orl
andl
lea
call
test
pop
pop
je
push
call
push
call
ret
push
mov
mov
cmp
je
push
call
orl
lea
call
pop
ret
push
pushl
push
pushl
pushl
call
test
jne
push
call
push
call
ret
push
pushl
push
pushl
pushl
call
test
jne
push
call
push
call
ret
push
mov
push
mov
pushl
call
pushl
call
test
pop
jne
push
call
push
call
ret
push
push
mov
push
push
push
mov
call
mov
mov
push
push
mov
call
mov
mov
push
push
mov
call
pop
mov
pop
pop
ret
xor
ret
mov
call
sub
push
push
mov
lea
push
mov
push
push
pushl
call
test
jne
push
pushl
push
call
xor
jmp
mov
mov
lea
xor
push
push
mov
call
push
lea
push
push
lea
push
push
push
push
pushl
call
test
je
testb
jne
push
call
testb
jne
lea
push
pushl
call
cmp
je
push
call
lea
push
pushl
call
push
pop
orl
lea
call
mov
mov
pop
pop
mov
leave
ret
mov
push
push
mov
push
push
call
xor
mov
push
push
push
call
add
push
pushl
push
call
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
je
cmp
je
push
call
pop
mov
jmp
cmp
je
inc
inc
mov
cmp
je
cmp
je
cmp
je
push
call
pop
jmp
cmp
je
push
call
pop
mov
cmp
je
cmp
je
cmp
jne
cmp
je
mov
mov
push
call
pop
pop
pop
ret
mov
mov
cmp
je
cmp
je
cmp
je
push
call
pop
mov
jmp
push
mov
sub
push
push
mov
test
mov
jne
lea
movl
pushl
push
pushl
call
test
je
pushl
push
pushl
call
jmp
test
jne
push
call
inc
jmp
xor
pop
pop
leave
ret
call
incl
ret
push
mov
push
push
push
call
mov
xor
mov
cmp
je
dec
cmp
mov
jne
cmp
je
cmpl
je
call
cmp
je
mov
cmp
je
push
push
call
mov
call
mov
call
mov
call
mov
call
mov
call
call
mov
push
mov
call
test
mov
je
mov
test
je
push
call
cmp
pop
jae
cmpl
je
mov
andl
test
je
push
call
pushl
mov
call
pop
pop
pushl
call
test
pop
mov
jne
cmp
je
pushl
call
pop
mov
xor
pop
cmp
pop
pop
setne
pop
ret
mov
call
push
push
mov
push
push
lea
mov
call
andl
lea
push
mov
call
push
push
mov
movb
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
push
push
push
mov
test
mov
mov
jne
xor
mov
pop
pop
mov
pop
leave
ret
push
lea
call
test
jne
lea
push
call
test
je
mov
mov
add
cmpl
jne
mov
jmp
push
call
mov
andl
mov
call
mov
test
jne
call
push
lea
call
pushl
orl
mov
call
mov
mov
add
cmpl
jne
mov
mov
jmp
pushl
call
push
push
call
push
mov
sub
push
mov
test
je
mov
neg
sbb
test
mov
je
push
lea
lea
mov
push
lea
push
lea
push
call
mov
add
andl
cmpl
jne
andl
mov
test
je
mov
push
call
cmpl
jne
pop
lea
call
pop
leave
ret
push
mov
sub
push
mov
push
lea
push
push
pushl
mov
call
mov
mov
sub
cmp
jbe
mov
lea
push
call
xor
test
setg
jmp
push
mov
mov
add
push
lea
push
call
push
pushl
call
mov
mov
sub
cmp
jle
mov
push
call
xor
test
setg
pop
pop
pop
leave
ret
push
call
pushl
mov
mov
push
pushl
push
call
test
jne
and
pop
ret
mov
ret
mov
call
pushl
mov
call
ret
cmpl
je
pushl
mov
call
test
je
mov
ret
xor
ret
mov
call
sub
push
push
xor
push
cmp
mov
je
mov
mov
call
mov
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
mov
ret
test
je
cmp
je
mov
jmp
push
pop
jmp
xor
ret
mov
call
sub
andl
lea
push
push
call
mov
mov
push
mov
pop
lea
push
push
mov
call
push
lea
push
call
push
lea
call
mov
lea
push
call
mov
andb
lea
call
mov
mov
pop
mov
leave
ret
mov
call
sub
andl
lea
push
push
call
mov
mov
push
mov
pop
lea
push
push
mov
call
push
lea
push
call
push
lea
call
mov
lea
push
call
mov
andb
lea
call
mov
mov
pop
mov
leave
ret
push
mov
sub
andl
lea
push
call
mov
lea
push
call
mov
leave
ret
push
mov
sub
push
push
mov
push
push
push
mov
push
call
add
lea
push
pushl
push
call
mov
or
cmp
je
lea
push
lea
push
lea
push
push
call
test
je
push
pushl
call
cmp
mov
jne
xor
jmp
mov
cmpl
jne
andb
jmp
push
call
cmp
je
mov
lea
push
push
lea
call
mov
push
mov
lea
push
lea
call
mov
push
mov
lea
push
lea
call
mov
mov
cmpl
jne
mov
cmpl
jne
mov
mov
push
pop
pop
pop
pop
leave
ret
cmpl
je
pushl
pushl
pushl
call
push
call
ret
mov
call
push
mov
push
push
mov
test
mov
je
mov
add
mov
mov
mov
andl
lea
push
lea
call
mov
movb
cmpl
jne
push
lea
call
mov
pushl
add
push
lea
push
call
pushl
pushl
pushl
call
andb
lea
call
orl
lea
call
mov
push
pop
pop
pop
mov
leave
ret
mov
call
push
push
push
push
call
mov
pop
mov
andl
test
je
mov
call
mov
lea
mov
mov
pushl
mov
mov
movb
movl
mov
call
jmp
xor
orl
lea
push
push
mov
call
pop
mov
mov
cmp
ja
je
cmp
ja
je
cmp
ja
je
cmp
ja
jmp
xor
jmp
push
jmp
push
jmp
cmp
ja
je
cmp
ja
je
sub
je
dec
je
dec
dec
je
dec
jne
push
jmp
push
jmp
sub
je
dec
je
dec
dec
je
dec
dec
jne
push
jmp
add
cmp
ja
jmp
push
jmp
push
jmp
cmp
ja
je
cmp
ja
je
sub
je
dec
je
dec
je
dec
je
dec
je
jmp
sub
je
dec
dec
je
sub
je
dec
je
dec
dec
jne
push
pop
ret
push
jmp
mov
cmp
ja
je
cmp
ja
je
sub
je
sub
je
dec
je
dec
je
dec
jne
push
jmp
push
jmp
sub
je
dec
je
dec
je
sub
je
jmp
mov
cmp
ja
je
sub
je
sub
je
sub
je
sub
je
sub
jne
jmp
push
jmp
push
jmp
sub
je
sub
je
dec
dec
je
sub
je
dec
dec
jne
jmp
sub
je
dec
je
dec
je
dec
dec
je
push
jmp
mov
sti
inc
add
stc
inc
add
stc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cli
inc
add
inc
add
inc
add
sti
inc
add
stc
inc
add
inc
add
inc
add
inc
add
inc
add
stc
inc
add
cli
inc
add
inc
add
inc
add
inc
add
inc
add
push
mov
mov
push
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
push
mov
call
push
mov
call
mov
pop
pop
ret
push
push
push
mov
mov
push
call
push
mov
call
cmpl
mov
je
call
jmp
call
push
call
mov
mov
push
push
call
push
push
mov
call
push
push
mov
call
pop
pop
pop
ret
push
push
mov
xor
cmp
mov
jne
mov
mov
mov
jmp
push
call
pop
push
push
mov
call
mov
pop
pop
ret
mov
push
mov
mov
add
push
push
call
test
mov
je
push
push
call
pushl
mov
pushl
push
call
add
cmpw
jne
mov
jmp
mov
pushl
not
shr
and
mov
call
push
pop
pop
pop
ret
mov
test
je
push
call
ret
mov
andl
ret
mov
cmpw
jne
add
jmp
add
mov
push
cmp
pop
jne
add
mov
cmp
jne
add
jmp
add
test
je
mov
jmp
add
test
je
mov
jmp
mov
add
test
jne
ret
push
mov
xor
push
cmpw
push
sete
mov
call
cmpw
pop
jne
mov
jmp
mov
test
je
mov
push
neg
sbb
and
inc
lea
push
call
pop
lea
pop
test
je
mov
jmp
mov
test
jbe
neg
sbb
and
add
movzwl
add
and
add
mov
cmp
jne
add
mov
cmp
jne
add
jmp
add
test
je
mov
inc
inc
jmp
add
test
je
mov
inc
inc
jmp
movzwl
dec
lea
jne
sub
pop
pop
ret
push
mov
cmpw
jne
mov
jmp
mov
test
jne
xor
pop
ret
push
call
mov
pop
mov
push
mov
xor
cmpw
push
push
push
setne
dec
and
inc
lea
mov
call
push
push
push
push
push
call
mov
push
call
push
pop
pop
ret
push
mov
sub
push
xor
cmp
mov
jne
xor
jmp
push
push
pushl
call
mov
xor
mov
cmp
sete
cmp
mov
jne
mov
jmp
mov
mov
and
neg
sbb
mov
and
inc
shl
cmp
je
orl
jmp
orl
lea
push
push
push
pushl
push
push
call
lea
push
mov
call
pop
mov
xor
mov
cmp
je
lea
push
call
pop
lea
mov
lea
and
lea
mov
and
cmpl
je
mov
jmp
mov
cmp
je
test
jbe
mov
sub
add
push
push
push
call
add
mov
mov
mov
sub
push
mov
lea
add
push
push
call
mov
sub
add
pushl
add
call
andl
push
pop
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
push
push
mov
pop
mov
push
call
test
jne
push
call
test
je
lea
push
push
push
call
test
je
push
lea
call
mov
mov
test
jge
neg
mov
push
push
call
push
push
pushl
call
push
push
mov
call
cmpw
jne
mov
pushl
mov
push
call
pop
pop
pop
leave
ret
mov
call
push
call
mov
cmpl
jne
cmpl
je
push
push
call
push
mov
call
pop
mov
mov
andl
test
je
push
push
push
call
jmp
xor
orl
push
mov
call
pop
mov
mov
pop
mov
leave
ret
push
call
mov
pushl
call
ret
push
call
mov
xor
test
je
pushl
add
call
ret
push
mov
push
mov
test
je
push
call
test
je
pushl
lea
call
andl
mov
pop
pop
ret
cmpl
jne
xor
ret
call
push
call
ret
ret
mov
push
push
push
pushl
call
ret
mov
xor
movl
mov
mov
mov
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
call
mov
cmpl
jne
cmpl
je
push
push
call
push
mov
call
pop
mov
mov
andl
test
je
push
push
push
call
jmp
xor
orl
push
mov
call
pop
mov
mov
pop
mov
leave
ret
push
call
mov
pushl
call
ret
push
mov
push
mov
test
je
push
call
test
je
pushl
lea
call
mov
mov
call
andl
mov
pop
pop
ret
mov
call
push
mov
movl
andl
cmpl
je
call
push
call
mov
mov
leave
ret
mov
mov
ret
mov
mov
ret
andl
ret
andl
ret
push
push
mov
xor
push
mov
mov
test
je
push
call
mov
mov
cmp
je
push
call
test
je
or
pop
mov
pop
pop
ret
push
mov
push
mov
mov
push
cmp
pop
je
pushl
push
call
mov
test
je
test
je
pushl
push
call
test
je
push
pop
jmp
xor
pop
pop
ret
push
push
push
mov
pushl
call
mov
mov
mov
xor
cmp
je
push
push
call
mov
test
je
push
push
call
push
call
pop
pop
pop
ret
push
mov
push
mov
xor
push
mov
mov
cmp
je
test
je
mov
push
push
call
mov
test
je
test
jne
xor
jmp
mov
push
push
call
push
call
pop
pop
pop
ret
push
mov
or
push
mov
mov
cmp
je
pushl
push
call
mov
test
je
pushl
push
call
pop
pop
ret
push
mov
or
push
mov
mov
cmp
je
pushl
push
call
mov
test
je
pushl
push
call
pop
pop
ret
push
mov
xor
push
mov
mov
cmp
je
pushl
push
call
mov
test
je
pushl
push
call
pop
pop
ret
push
mov
push
push
push
mov
push
mov
mov
cmp
je
lea
push
pushl
pushl
push
call
mov
test
je
lea
push
pushl
pushl
push
call
mov
mov
pop
pop
mov
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
mov
cmp
je
lea
push
pushl
pushl
push
call
mov
test
je
lea
push
pushl
pushl
push
call
mov
mov
pop
pop
mov
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
mov
cmp
je
lea
push
pushl
pushl
push
call
mov
test
je
lea
push
pushl
pushl
push
call
mov
mov
pop
pop
mov
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
mov
cmp
je
lea
push
pushl
pushl
pushl
pushl
push
call
mov
test
je
lea
push
pushl
pushl
pushl
pushl
push
call
mov
mov
pop
pop
mov
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
mov
cmp
je
lea
push
pushl
pushl
push
call
mov
test
je
lea
push
pushl
pushl
push
call
mov
mov
pop
pop
mov
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
mov
cmp
je
lea
push
pushl
pushl
pushl
pushl
push
call
mov
test
je
lea
push
pushl
pushl
pushl
pushl
push
call
mov
mov
pop
pop
mov
mov
mov
leave
ret
pushl
pushl
call
ret
push
push
mov
push
push
mov
mov
push
pushl
call
lea
push
pushl
call
mov
call
test
je
mov
mov
mov
mov
pop
pop
pop
pop
ret
mov
call
push
call
mov
cmpl
jne
cmpl
je
push
push
call
push
mov
call
pop
mov
mov
andl
test
je
push
push
push
call
jmp
xor
orl
push
mov
call
pop
mov
mov
pop
mov
leave
ret
push
call
mov
pushl
call
ret
push
mov
push
mov
test
je
push
call
test
je
pushl
lea
call
andl
mov
pop
pop
ret
cmpl
jne
xor
ret
call
push
call
ret
push
mov
push
lea
push
push
movl
call
mov
call
push
push
mov
push
mov
mov
push
lea
mov
push
mov
call
mov
orl
push
mov
pop
xor
not
test
mov
mov
mov
mov
mov
mov
je
movl
jmp
movl
mov
mov
mov
mov
mov
movl
cmp
mov
jge
mov
mov
jmp
mov
mov
cmp
mov
jne
mov
push
push
push
push
mov
call
cmp
mov
jne
pushl
call
pop
mov
mov
jmp
mov
mov
mov
add
testb
mov
je
mov
mov
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
mov
mov
andl
cmpl
je
testb
jne
call
mov
call
orl
lea
call
mov
pop
mov
leave
ret
push
push
mov
xor
cmp
mov
jne
pushl
call
pop
mov
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
pop
pop
ret
push
mov
call
andl
pop
ret
push
mov
push
push
push
mov
push
mov
test
jne
xor
jmp
mov
push
mov
sub
cmp
jae
mov
push
push
pushl
call
add
add
add
sub
je
mov
xor
divl
mov
sub
andl
mov
mov
pushl
mov
pushl
call
add
add
sub
test
jbe
cmpl
ja
sub
cmp
jne
xor
cmp
jne
mov
mov
cmp
ja
mov
mov
mov
mov
pushl
mov
pushl
call
add
sub
add
test
jbe
cmpl
jbe
cmp
jb
mov
mov
lea
mov
jmp
mov
lea
lea
push
mov
push
pushl
push
call
mov
mov
mov
sub
cmp
jae
mov
push
push
pushl
call
add
add
sub
mov
pop
sub
pop
pop
leave
ret
push
mov
push
testb
je
mov
mov
cmp
je
mov
sub
push
push
mov
call
mov
mov
jmp
mov
mov
push
xor
cmp
lea
jne
cmp
je
mov
sub
push
push
mov
call
jmp
cmp
je
mov
push
push
sub
mov
push
push
push
call
pop
mov
lea
push
push
pushl
mov
push
call
mov
pop
mov
pop
pop
ret
push
mov
push
push
push
push
mov
mov
push
mov
mov
lea
sub
add
cmpl
mov
jne
mov
cmp
jbe
test
jle
push
push
push
call
mov
add
mov
lea
mov
mov
mov
sub
add
mov
push
push
mov
call
add
add
sub
test
jbe
test
jbe
mov
cmp
jb
mov
mov
mov
add
mov
jmp
test
je
mov
push
neg
mov
push
call
mov
lea
push
push
pushl
mov
push
call
mov
mov
mov
pop
sub
pop
pop
cmp
jae
push
push
call
leave
ret
mov
call
sub
push
mov
push
xor
push
cmp
mov
mov
jge
neg
mov
mov
mov
cmp
jge
mov
lea
push
call
mov
cmp
je
cmp
je
mov
inc
mov
jmp
mov
lea
push
call
mov
cmp
je
mov
inc
jmp
mov
cmpl
jne
call
cmpl
jne
mov
ret
xor
jmp
mov
ret
push
push
call
mov
mov
andb
mov
mov
pop
pop
mov
pop
leave
ret
push
push
push
push
mov
mov
push
mov
call
push
mov
call
mov
push
push
mov
call
push
mov
mov
call
test
je
push
call
cmp
jl
cmpb
je
mov
mov
mov
lea
push
call
mov
add
jmp
push
mov
call
mov
mov
test
je
cmpb
jne
dec
push
mov
call
xor
pop
test
pop
pop
setne
pop
ret
push
mov
sub
cmpl
je
push
pushl
call
and
cmp
je
xor
jmp
lea
push
push
pushl
call
lea
push
push
call
neg
sbb
inc
leave
ret
push
mov
sub
lea
push
push
pushl
call
pushl
lea
push
call
neg
sbb
inc
leave
ret
push
mov
sub
push
lea
push
push
pushl
call
mov
push
pushl
call
mov
test
je
push
call
cmp
je
push
push
call
test
je
lea
push
push
call
pushl
lea
pushl
push
call
test
jne
push
push
jmp
mov
jmp
xor
pop
pop
leave
ret
push
mov
sub
push
pushl
call
mov
mov
cmp
ja
push
lea
push
pushl
call
cmp
jne
pushl
lea
push
call
test
je
pushl
pushl
call
pop
leave
ret
push
mov
mov
test
je
push
call
andl
pop
ret
push
mov
test
je
push
call
and
mov
dec
test
je
push
lea
push
call
dec
jne
pop
push
call
pop
ret
push
call
mov
test
je
mov
test
je
push
call
pop
mov
lea
cmp
ja
pushl
call
andl
pop
jmp
sub
sub
push
pushl
call
pop
pop
push
pop
pop
ret
call
xor
pop
ret
mov
call
push
mov
push
push
mov
test
mov
je
mov
add
mov
mov
mov
andl
lea
push
lea
call
mov
movb
cmpl
jne
push
lea
call
mov
pushl
add
push
lea
push
call
pushl
pushl
pushl
call
andb
lea
call
orl
lea
call
mov
push
pop
pop
pop
mov
leave
ret
mov
call
push
push
push
push
call
mov
pop
mov
andl
test
je
mov
call
mov
lea
mov
mov
pushl
movb
movl
mov
call
jmp
xor
orl
lea
push
push
mov
call
pop
push
call
mov
test
je
mov
mov
call
test
je
mov
test
je
mov
pushl
call
pop
ret
push
mov
sub
push
push
push
xor
mov
push
mov
call
lea
push
push
call
xor
cmp
mov
je
push
push
push
pushl
call
cmp
je
mov
jmp
cmp
je
lea
cmp
mov
je
mov
mov
mov
cmp
je
add
mov
mov
test
jne
mov
and
cmp
jbe
cmp
jbe
cmp
ja
or
test
je
mov
jmp
lea
push
push
push
lea
call
push
push
pushl
pushl
call
test
mov
je
mov
mov
cmpl
je
push
pushl
call
mov
push
call
mov
pop
pop
pop
leave
ret
push
mov
call
mov
test
je
pushl
mov
mov
pushl
pushl
call
jmp
pushl
xor
pushl
pushl
call
pop
ret
mov
call
push
mov
mov
pushl
andl
lea
call
mov
cmp
jne
mov
push
push
pushl
pushl
call
orl
lea
mov
call
mov
mov
pop
mov
leave
ret
push
mov
push
mov
push
push
test
mov
jne
call
test
jne
call
test
jne
xor
test
mov
mov
je
push
mov
call
test
jne
test
jne
test
je
push
call
mov
mov
test
je
test
je
push
call
test
je
cmp
je
push
push
mov
call
jmp
mov
test
je
push
push
call
test
je
push
call
mov
jmp
andl
mov
pop
pop
pop
pop
ret
call
mov
ret
push
push
mov
push
call
mov
add
mov
test
jle
pushl
call
test
jle
cmpl
jne
mov
jmp
pushl
andl
call
push
call
pop
pop
ret
mov
test
je
mov
jmp
push
pop
ret
mov
test
je
mov
pushl
call
ret
mov
pushl
mov
call
ret
mov
test
jne
mov
push
mov
call
jmp
mov
pushl
call
ret
mov
test
je
mov
pushl
call
jmp
xor
ret
mov
push
lea
push
lea
mov
mov
mov
mov
push
call
test
jne
mov
push
mov
call
push
pop
pop
pop
ret
push
mov
call
mov
movl
mov
xor
mov
mov
mov
mov
movl
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
andl
mov
mov
neg
sbb
andl
not
and
mov
mov
mov
mov
ret
mov
call
push
push
mov
push
mov
movl
xor
cmp
mov
je
call
orl
mov
mov
mov
mov
mov
call
mov
pop
pop
mov
leave
ret
pushl
call
pop
ret
pushl
pushl
call
pop
pop
ret
mov
push
mov
push
mov
mov
mov
shr
rep
mov
mov
and
rep
pop
pop
ret
pushl
call
pop
ret
mov
ret
push
mov
push
mov
push
mov
cmp
jbe
cmpl
jne
call
cmp
jae
mov
add
cmp
jb
mov
test
jne
mov
push
mov
call
jmp
mov
push
push
mov
call
mov
test
jne
call
mov
mov
pop
pop
pop
ret
push
push
mov
mov
cmp
jbe
mov
push
call
cmp
jae
mov
mov
pop
pop
ret
push
push
mov
mov
test
je
mov
mov
cmp
jbe
xor
jmp
lea
cmp
jbe
sub
mov
mov
mov
add
push
push
mov
pushl
call
add
mov
pop
pop
ret
push
push
mov
mov
test
je
mov
add
cmp
jbe
mov
push
call
mov
mov
add
push
pushl
push
mov
call
add
mov
cmp
jbe
mov
pop
pop
ret
push
mov
cmpl
push
push
mov
mov
jne
mov
jmp
cmpl
je
cmpl
jne
mov
add
test
jge
push
push
push
call
mov
mov
jmp
or
pop
pop
pop
ret
ret
push
mov
push
xor
mov
mov
cmp
mov
mov
mov
je
cmp
je
mov
push
call
mov
pop
pop
ret
mov
jmp
call
ret
call
xor
ret
push
mov
push
mov
push
cmp
mov
jne
push
pop
jmp
cmp
jne
mov
add
mov
cmp
jbe
mov
xor
jmp
push
mov
cmp
jne
mov
add
cmp
jbe
mov
push
mov
call
mov
mov
add
cmp
mov
jne
mov
mov
add
cmp
jae
mov
add
mov
mov
jmp
cmp
jne
mov
sub
mov
mov
add
cmp
jae
mov
mov
add
mov
mov
sub
add
mov
pop
sub
pop
pop
pop
ret
push
mov
pushl
call
movl
pop
ret
push
mov
lea
push
mov
push
pushl
mov
call
cmpl
jne
call
mov
andl
mov
pop
pop
ret
push
mov
cmpl
je
mov
test
je
push
call
cmpl
je
push
push
push
pushl
call
call
pop
ret
push
mov
mov
push
inc
push
xor
mov
cmp
je
cmp
jne
push
pop
inc
mov
mov
cmp
je
cmp
jne
inc
mov
jmp
cmpb
mov
jne
lea
push
push
push
call
jmp
cmp
je
lea
push
push
push
call
add
test
jne
cmp
jne
mov
mov
cmp
je
cmp
jne
inc
mov
jmp
cmpb
jne
test
je
movswl
cmp
je
xor
jmp
mov
mov
mov
jmp
mov
mov
mov
push
pop
pop
pop
pop
ret
push
mov
sub
push
mov
push
mov
pushl
call
cmpl
mov
je
lea
push
push
push
call
lea
push
lea
pushl
push
call
test
jne
push
push
pushl
call
mov
call
jmp
lea
push
lea
pushl
push
call
lea
push
push
call
pop
pop
leave
ret
push
mov
mov
cmpl
je
pushl
jmp
mov
pushl
push
push
pushl
push
call
add
pop
ret
push
mov
push
push
mov
pushl
mov
call
cmpl
mov
je
push
call
lea
push
mov
push
call
push
push
call
mov
push
call
jmp
mov
pushl
push
call
pop
pop
pop
ret
push
mov
push
mov
pushl
call
xor
cmp
je
push
push
push
push
call
mov
mov
jmp
mov
mov
cmp
jl
cmp
jle
mov
push
pushl
push
push
call
pop
pop
ret
push
mov
push
mov
push
mov
pushl
call
cmpl
mov
je
push
call
test
jle
lea
push
mov
push
call
jmp
mov
push
push
call
push
push
call
mov
push
call
jmp
mov
pushl
push
push
push
call
cmp
jne
pushl
push
call
pop
pop
pop
ret
push
mov
pushl
mov
call
xor
cmp
pop
push
je
push
push
push
call
mov
mov
jmp
mov
pushl
push
push
call
ret
push
mov
pushl
mov
call
xor
cmp
pop
je
push
push
push
push
call
mov
mov
jmp
mov
pushl
push
push
push
call
ret
mov
call
sub
push
mov
cmpl
je
push
mov
pushl
lea
pushl
push
call
pushl
lea
pushl
push
call
mov
add
mov
lea
andl
push
lea
push
lea
pushl
push
call
pushl
push
pushl
call
lea
call
mov
call
orl
lea
call
pop
mov
pop
mov
leave
ret
push
mov
mov
cmp
jl
cmp
jle
push
push
pushl
pushl
pushl
call
pop
ret
push
push
mov
cmpl
jne
mov
pushl
mov
call
push
mov
call
test
jne
call
jmp
pushl
mov
call
cmp
je
push
mov
call
pop
pop
ret
push
mov
sub
push
mov
cmpl
je
pushl
call
mov
test
je
push
lea
push
push
push
push
pushl
push
call
push
mov
call
xor
test
sete
pop
jmp
pushl
lea
push
push
call
add
lea
pushl
push
pushl
pushl
call
pop
leave
ret
push
mov
sub
lea
push
push
pushl
call
test
je
pushl
lea
pushl
push
pushl
call
leave
ret
push
mov
push
push
mov
xor
push
mov
cmp
je
mov
cmp
jne
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jg
cmp
jle
movsbl
sub
jmp
movsbl
sub
inc
inc
cmp
jge
mov
mov
test
je
push
call
add
jmp
movzbl
testb
je
inc
inc
inc
inc
cmpb
jne
push
mov
mov
call
mov
cmpb
je
mov
cmp
jne
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jg
cmp
jle
movsbl
sub
jmp
movsbl
sub
inc
inc
cmp
jl
movb
inc
jmp
mov
mov
test
je
push
push
call
push
call
add
jmp
movzbl
testb
je
mov
inc
inc
mov
mov
inc
inc
jmp
sub
mov
push
call
pop
pop
pop
pop
ret
lea
push
push
pushl
pushl
call
ret
push
mov
push
push
mov
push
mov
mov
mov
lea
push
pushl
pushl
call
leave
ret
mov
call
push
push
mov
mov
movl
andl
call
orl
mov
call
mov
pop
mov
leave
ret
xor
ret
ret
call
ret
push
mov
mov
sub
je
dec
je
dec
je
dec
je
dec
je
sub
je
pushl
pushl
pushl
pushl
call
jmp
mov
pushl
call
jmp
mov
mov
shr
push
movzwl
push
call
mov
mov
jmp
mov
mov
shr
push
movzwl
push
call
jmp
mov
pushl
call
jmp
mov
pushl
call
jmp
mov
pushl
call
push
pop
pop
ret
push
push
push
mov
pushl
mov
push
pushl
call
mov
push
call
push
pushl
push
pushl
call
mov
push
call
pop
pop
ret
mov
call
push
push
mov
mov
movl
andl
call
orl
mov
call
mov
pop
mov
leave
ret
push
mov
mov
sub
je
dec
je
dec
je
sub
je
pushl
pushl
pushl
pushl
call
jmp
mov
pushl
call
mov
mov
jmp
mov
pushl
call
jmp
mov
pushl
call
jmp
mov
pushl
call
push
pop
pop
ret
push
push
push
mov
pushl
mov
push
pushl
call
mov
push
call
push
pushl
push
pushl
call
mov
push
call
pop
pop
ret
push
mov
pushl
pushl
pushl
pushl
push
push
call
ret
mov
call
push
push
mov
mov
movl
andl
call
orl
mov
call
mov
pop
mov
leave
ret
call
xor
cmp
sete
mov
ret
call
mov
ret
push
call
ret
jmp
push
call
pop
mov
ret
push
mov
sub
xor
push
cmp
push
push
je
cmp
je
mov
mov
mov
and
and
mov
lea
mov
push
push
lea
movl
push
pushl
call
test
jne
call
cmp
jne
pushl
call
pop
mov
lea
push
push
push
pushl
movl
call
test
jne
push
call
pop
xor
pop
pop
pop
leave
ret
lea
mov
push
pushl
push
push
call
cmpl
mov
je
push
call
pop
test
jne
mov
movl
jmp
mov
mov
mov
mov
dec
je
dec
je
dec
je
dec
je
dec
je
dec
je
dec
mov
jne
movl
jmp
mov
movl
jmp
mov
movl
jmp
mov
movl
jmp
mov
movl
jmp
mov
movl
jmp
mov
movl
mov
jmp
push
mov
sub
cmpl
push
mov
movl
jne
xor
jmp
push
push
pop
lea
push
push
push
call
mov
add
mov
mov
push
movl
call
mov
push
mov
movl
call
push
mov
pushl
lea
push
push
pushl
call
mov
push
mov
call
mov
push
call
mov
pop
pop
leave
ret
push
mov
push
cmpl
movl
je
lea
push
lea
push
push
pushl
call
test
mov
jne
mov
leave
ret
push
mov
lea
mov
push
pushl
call
test
je
pushl
mov
pushl
mov
pushl
pushl
call
pop
ret
push
mov
push
lea
push
call
pushl
mov
pushl
call
lea
mov
mov
call
mov
pop
pop
ret
mov
call
push
mov
movl
andl
call
mov
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
andl
andl
andl
mov
mov
test
movl
jne
call
mov
pushl
pushl
pushl
pushl
push
call
test
mov
jne
push
pushl
call
jmp
push
push
mov
call
mov
mov
pop
mov
leave
ret
push
mov
lea
push
call
pushl
mov
call
mov
mov
mov
lea
call
pop
ret
push
mov
cmpl
je
push
call
mov
test
je
push
call
pushl
mov
call
andl
pop
ret
push
mov
lea
push
call
pushl
mov
call
mov
lea
call
pop
ret
mov
call
sub
cmpl
push
push
push
mov
jne
mov
mov
mov
mov
andl
mov
lea
movb
push
lea
push
lea
push
lea
push
pushl
call
mov
test
je
cmpl
jne
mov
mov
and
push
neg
sbb
and
add
mov
call
pop
mov
test
movb
je
push
mov
pushl
call
jmp
xor
mov
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
test
jne
push
pushl
call
test
jne
push
call
mov
mov
dec
je
dec
je
dec
je
sub
je
sub
je
dec
dec
je
sub
je
xor
jmp
push
call
pop
mov
test
movb
je
pushl
mov
pushl
pushl
pushl
pushl
push
call
jmp
push
call
pop
mov
test
movb
je
pushl
mov
push
push
pushl
push
call
jmp
push
call
pop
mov
test
movb
je
push
mov
pushl
pushl
pushl
pushl
push
call
jmp
xor
push
push
mov
movb
mov
call
andb
lea
call
orl
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
test
je
pushl
pushl
pushl
pushl
pushl
call
ret
push
mov
push
xor
mov
cmp
jne
xor
jmp
cmp
je
cmp
jne
push
push
call
cmp
je
mov
movl
jmp
push
pushl
call
jmp
cmp
je
push
push
call
mov
push
pop
pop
pop
ret
mov
call
push
push
push
mov
push
mov
call
mov
lea
mov
mov
xor
mov
mov
pushl
lea
movb
movl
call
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
push
push
mov
push
cmp
mov
movl
je
mov
cmp
je
mov
cmp
jbe
andl
jmp
test
jne
pushl
call
and
pop
jmp
mov
test
mov
jne
push
call
pop
mov
mov
jmp
push
sub
push
mov
call
test
pop
mov
jbe
mov
push
add
push
push
call
add
andl
mov
jmp
andl
mov
pushl
call
pop
pop
mov
mov
pop
pop
leave
ret
push
push
mov
xor
push
cmp
je
cmp
je
push
pushl
call
mov
mov
sub
je
dec
je
dec
je
push
pushl
call
jmp
push
pop
jmp
push
jmp
xor
pushl
push
push
pushl
pushl
call
mov
cmp
jne
push
pushl
call
mov
pop
pop
pop
ret
mov
call
push
push
mov
mov
movl
cmpl
movl
je
call
mov
test
je
push
call
pop
mov
test
je
push
call
pop
andb
lea
call
orl
mov
call
mov
pop
mov
leave
ret
push
mov
cmpl
je
mov
call
lea
call
pop
ret
push
mov
push
push
mov
mov
test
je
mov
test
jbe
lea
push
push
push
pushl
call
test
jne
push
pushl
call
mov
cmp
je
push
pushl
call
andl
pop
leave
ret
push
mov
cmpl
je
mov
call
pushl
call
pushl
mov
call
mov
andl
test
je
push
call
andl
pop
mov
test
je
push
call
andl
pop
pop
ret
push
mov
push
push
push
mov
xor
cmp
je
cmp
jne
push
pushl
call
mov
cmp
jne
lea
push
pushl
pushl
pushl
call
test
jne
push
pushl
call
mov
jmp
mov
mov
push
mov
cmp
jb
sub
js
mov
add
push
push
pushl
call
mov
add
mov
lea
push
mov
sub
add
push
push
pushl
call
test
jne
push
pushl
call
mov
add
jmp
lea
cmp
jb
sub
jns
xor
jmp
mov
add
push
push
pushl
call
add
lea
push
pushl
pushl
pushl
call
test
jne
push
pushl
call
mov
sub
cmp
mov
jae
mov
pushl
mov
add
pushl
push
call
mov
add
mov
jmp
add
push
push
pushl
call
add
add
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
cmpl
je
cmpl
jne
push
pushl
call
mov
test
jne
mov
lea
push
push
pushl
pushl
call
test
jne
push
pushl
call
cmp
je
push
pushl
call
jmp
mov
mov
mov
lea
cmp
jb
lea
push
push
push
pushl
call
test
jne
push
pushl
call
andl
cmp
jb
lea
push
push
pushl
pushl
call
test
jne
jmp
mov
push
pushl
add
push
call
add
add
pop
pop
pop
leave
ret
push
mov
push
cmpl
jne
push
pushl
call
pushl
mov
call
push
mov
pushl
call
pop
pop
ret
push
mov
push
push
push
mov
xor
push
cmp
jne
push
call
test
je
lea
push
pushl
pushl
pushl
call
test
jne
push
pushl
call
mov
mov
mov
mov
mov
add
decl
je
mov
cmp
jb
lea
push
pushl
pushl
pushl
call
test
jne
push
pushl
call
mov
cmp
mov
je
mov
mov
mov
cmp
je
mov
inc
incl
mov
inc
cmp
je
jmp
mov
mov
sub
neg
sbb
and
jmp
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
push
mov
push
push
mov
call
mov
mov
push
call
mov
mov
push
push
mov
call
push
mov
mov
call
cmpl
je
push
call
cmp
jl
cmpb
je
mov
mov
mov
mov
add
push
call
mov
add
jmp
push
mov
call
mov
mov
test
je
cmpb
lea
jne
andb
push
mov
call
xor
pop
cmp
pop
pop
setne
leave
ret
push
mov
push
mov
andl
test
je
push
lea
push
push
push
call
test
jne
and
mov
leave
ret
call
ret
call
xor
ret
mov
call
push
push
push
pushl
mov
mov
pushl
pushl
pushl
pushl
call
pushl
andl
lea
call
pushl
lea
movb
call
mov
movl
mov
pop
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
movl
lea
movl
call
andb
lea
call
orl
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
andl
push
mov
push
push
lea
call
cmpl
push
pop
mov
je
lea
lea
push
call
mov
add
cmpl
jle
mov
cmp
je
cmp
je
push
lea
call
push
lea
call
mov
lea
push
call
mov
andb
lea
call
mov
mov
pop
pop
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
push
push
pushl
mov
mov
push
push
pushl
mov
pushl
call
pushl
andl
lea
pushl
call
mov
movl
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
movl
andl
lea
call
orl
mov
call
mov
pop
mov
leave
ret
jmp
call
ret
mov
call
push
push
push
mov
push
mov
mov
andl
lea
mov
mov
mov
push
movb
movl
call
push
pushl
push
call
add
mov
push
call
mov
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
mov
movl
andl
add
call
mov
mov
leave
ret
mov
call
push
cmpl
jne
call
mov
push
call
pop
mov
mov
andl
test
je
pushl
call
jmp
xor
mov
orl
mov
mov
lea
push
push
call
push
mov
sub
mov
push
push
push
test
mov
je
andl
push
call
mov
mov
test
mov
je
push
lea
push
push
push
pushl
push
push
call
test
jne
xor
lea
push
push
push
push
pushl
push
push
call
mov
test
jne
mov
andb
jmp
cmpl
mov
jne
mov
andl
lea
push
lea
push
push
call
test
jne
call
cmp
jne
pushl
push
call
mov
lea
push
lea
push
push
call
pushl
push
pushl
call
push
call
jmp
pushl
pushl
pushl
call
push
pop
pushl
call
pushl
call
mov
pop
pop
pop
leave
ret
push
mov
call
mov
movl
mov
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
movl
ret
mov
call
push
push
push
mov
push
mov
call
andl
lea
push
mov
call
movl
add
push
call
mov
movl
mov
pop
pop
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
push
push
mov
mov
movl
andl
lea
lea
movl
push
call
mov
call
orl
mov
call
mov
pop
pop
mov
leave
ret
mov
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
mov
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
mov
call
push
push
call
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
call
jmp
mov
jmp
push
call
pop
ret
mov
jmp
mov
ret
mov
movl
ret
push
mov
call
testb
je
push
call
mov
pop
ret
mov
call
push
push
push
mov
push
mov
call
xor
movl
cmp
mov
je
pushl
call
pop
mov
jmp
mov
call
mov
push
lea
call
mov
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
pop
pop
pop
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
test
je
cmpl
lea
jne
mov
andl
mov
test
je
mov
push
call
jmp
andl
push
pop
ret
push
pop
ret
mov
call
push
push
push
mov
mov
movl
mov
xor
cmp
mov
je
mov
push
call
mov
cmp
je
mov
push
call
call
cmp
jne
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
push
call
mov
cmp
je
push
call
mov
push
mov
cmp
je
push
call
mov
cmp
je
push
call
mov
pop
cmp
je
mov
push
call
call
mov
cmp
jne
mov
cmp
jne
mov
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
orl
add
mov
mov
call
mov
pop
pop
mov
leave
ret
push
mov
mov
test
je
mov
call
mov
test
je
push
push
push
mov
call
pop
ret
push
mov
mov
test
je
cmpl
je
call
cmpb
jne
mov
call
mov
test
je
call
mov
pop
ret
mov
ret
call
jmp
ret
push
call
pop
ret
mov
jmp
jmp
mov
call
push
push
call
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
call
xor
mov
mov
movl
mov
mov
call
mov
mov
pop
mov
leave
ret
push
mov
push
xor
lea
mov
push
mov
mov
mov
mov
mov
call
mov
mov
movl
pop
pop
ret
mov
ret
push
call
test
je
movl
ret
xor
ret
push
call
test
je
movl
ret
xor
ret
push
mov
call
testb
je
push
call
mov
pop
ret
push
mov
call
testb
je
push
call
mov
pop
ret
push
mov
sub
push
push
push
call
movswl
shr
movswl
cmp
mov
jle
push
pop
lea
lea
cltd
sub
sar
mov
mov
sar
shl
add
sub
cmp
jle
push
pop
push
pop
cmp
jle
mov
push
lea
push
push
call
mov
add
add
movl
sar
imul
add
movl
lea
mov
mov
movzbw
shl
incl
xor
not
mov
mov
mov
add
decl
jne
lea
push
push
push
pushl
push
call
pop
pop
test
mov
pop
jne
push
push
call
mov
leave
ret
mov
ret
mov
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
ret
mov
call
push
push
mov
call
mov
mov
xor
cmp
mov
je
mov
call
movl
mov
mov
pop
mov
leave
ret
push
mov
call
testb
je
push
mov
call
mov
pop
ret
jmp
mov
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
mov
call
push
push
call
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
ret
mov
ret
push
call
test
pop
je
mov
call
ret
xor
ret
mov
ret
push
mov
call
mov
test
je
mov
call
movl
mov
pop
ret
xor
pop
ret
push
mov
call
testb
je
push
mov
call
mov
pop
ret
jmp
mov
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
orl
orl
movl
ret
push
mov
call
testb
je
push
call
mov
pop
ret
mov
call
push
push
mov
push
mov
movl
mov
andl
lea
test
je
mov
call
mov
test
je
mov
push
call
mov
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
pop
mov
pop
pop
mov
leave
ret
push
mov
call
ret
call
jmp
ret
push
call
pop
ret
mov
jmp
mov
xor
lea
mov
mov
mov
mov
mov
mov
orl
lea
mov
mov
mov
mov
movl
movl
movl
mov
mov
movl
movl
ret
push
mov
call
testb
je
push
call
mov
pop
ret
mov
call
push
push
mov
push
mov
movl
mov
movl
test
je
mov
push
call
mov
lea
test
je
mov
lea
push
call
mov
test
je
mov
push
call
andb
lea
call
mov
pop
pop
mov
leave
ret
mov
andl
andl
movl
movl
movl
ret
push
mov
call
testb
je
push
call
mov
pop
ret
mov
call
push
push
push
mov
mov
movl
mov
andl
push
test
pop
je
mov
push
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
test
je
cmpl
je
call
push
call
pop
mov
jmp
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
pop
pop
mov
leave
ret
call
jmp
ret
push
call
pop
ret
mov
jmp
push
mov
call
mov
test
jne
push
mov
call
ret
call
add
push
mov
call
ret
push
mov
lea
push
call
test
jne
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
pop
ret
push
push
call
mov
test
je
push
mov
call
movl
mov
pop
ret
xor
pop
ret
push
mov
call
testb
je
push
call
mov
pop
ret
jmp
mov
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
mov
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
push
call
test
pop
je
mov
call
ret
xor
ret
mov
ret
push
call
test
pop
je
movl
andl
ret
xor
ret
mov
ret
mov
ret
push
mov
call
mov
test
je
mov
call
movl
mov
pop
ret
xor
pop
ret
push
mov
call
testb
je
push
mov
call
mov
pop
ret
jmp
mov
ret
mov
call
test
je
andl
movl
ret
xor
ret
push
mov
call
testb
je
push
mov
call
mov
pop
ret
mov
call
push
mov
movl
andl
call
mov
mov
leave
ret
mov
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
mov
ret
mov
ret
mov
mov
push
mov
mov
mov
pop
ret
mov
test
jne
xor
jmp
push
mov
xor
cmp
jne
mov
mov
mov
jmp
test
je
mov
push
mov
cmp
je
mov
test
jne
test
pop
je
mov
mov
push
pop
pop
ret
push
pushl
push
call
mov
test
jne
call
mov
pop
ret
cmpl
je
pushl
call
ret
push
mov
xor
mov
mov
movl
mov
movl
mov
mov
call
cmp
mov
jne
call
lea
push
call
mov
pop
ret
push
mov
push
mov
cmp
je
push
call
mov
test
je
mov
push
push
mov
call
test
mov
jne
mov
test
je
push
call
mov
push
call
push
call
add
push
call
pop
pop
ret
push
push
push
push
mov
push
lea
push
mov
call
mov
mov
cmp
jge
mov
testb
je
push
pop
cmp
jle
mov
add
testb
je
inc
add
cmp
jl
cmp
jl
mov
add
test
push
jne
mov
shl
push
push
call
jmp
push
call
mov
push
call
mov
push
shl
push
push
call
mov
mov
test
jne
pushl
call
push
call
pushl
call
call
pushl
call
mov
mov
mov
imul
add
lea
shl
push
push
push
call
add
mov
mov
pop
cmp
jl
lea
mov
mov
orl
pushl
lea
lea
mov
call
mov
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
lea
push
mov
call
mov
mov
test
je
cmp
jge
mov
mov
test
je
mov
push
call
mov
andl
mov
test
jne
mov
pushl
andl
lea
call
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
pushl
call
mov
test
je
mov
lea
cmp
jl
cmpl
je
jmp
push
call
test
je
movl
mov
jmp
xor
andl
andl
lea
lea
push
mov
call
push
lea
call
lea
push
call
mov
test
jne
mov
shl
push
push
call
jmp
mov
push
shl
push
push
call
test
mov
jne
call
mov
mov
imul
add
shl
push
mov
push
lea
push
call
mov
add
mov
push
pushl
call
mov
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
call
testb
je
push
call
mov
pop
ret
ret
push
mov
push
lea
push
call
push
pop
cmp
jle
mov
cmpl
lea
jne
testb
je
mov
mov
inc
cmp
jl
push
call
pop
pop
ret
push
mov
push
push
push
mov
push
push
mov
pop
cmp
mov
jle
mov
test
je
mov
cmp
je
mov
cmpl
je
andl
jmp
mov
mov
test
je
mov
push
call
mov
andl
inc
cmp
jl
cmpl
je
lea
push
call
push
lea
call
push
call
pushl
call
test
je
mov
push
mov
call
push
pushl
call
pop
pop
pop
leave
ret
push
push
mov
lea
push
call
cmpl
jne
pushl
call
test
je
pushl
mov
push
call
jmp
mov
test
je
push
pushl
mov
mov
push
call
test
mov
jne
pop
push
call
pop
pop
ret
push
push
mov
cmpl
jne
mov
test
jne
mov
mov
test
je
call
mov
jmp
xor
mov
call
mov
mov
mov
pushl
call
test
je
cmp
jge
mov
mov
jmp
xor
test
jne
call
mov
mov
push
pushl
call
mov
pop
pop
ret
push
mov
test
je
mov
test
je
pushl
call
test
je
cmp
jge
mov
mov
pop
ret
xor
pop
ret
push
mov
mov
test
je
mov
test
je
push
call
andl
pop
ret
mov
call
push
push
push
push
push
mov
xor
mov
cmp
jne
push
call
mov
cmp
jne
call
mov
orl
push
call
mov
mov
pop
pop
mov
pop
leave
ret
push
call
xor
push
push
call
push
mov
push
cmpl
je
mov
mov
mov
mov
cmpl
je
mov
mov
push
call
leave
ret
mov
test
je
pushl
call
ret
mov
test
je
pushl
pushl
call
ret
incl
ret
cmpl
je
decl
jne
mov
test
je
call
andl
ret
push
mov
push
call
or
push
call
call
mov
mov
mov
call
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
call
call
cmpb
pop
jne
call
push
pop
ret
push
mov
sub
push
push
push
mov
call
mov
mov
mov
mov
mov
mov
lea
push
push
pushl
call
lea
push
push
call
andb
pop
pop
mov
lea
push
push
lea
push
call
xor
cmp
jne
lea
push
call
pop
mov
cmp
jne
lea
push
push
push
call
test
je
lea
push
jmp
pushl
call
pop
mov
mov
mov
cmp
lea
jne
mov
push
push
call
lea
push
call
mov
andb
pop
cmpl
jne
lea
push
push
call
lea
push
call
pop
mov
pop
pop
pop
leave
ret
push
mov
push
mov
cmpb
je
mov
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
push
call
pop
mov
jmp
cmpl
jne
push
call
inc
jmp
pushl
push
pushl
call
xor
pop
pop
ret
cmpl
push
jne
push
pop
mov
call
cmp
jae
test
je
mov
jmp
andl
push
call
mov
pop
ret
cmpl
je
decl
cmpl
jne
push
push
push
mov
push
call
mov
mov
cmpl
je
push
call
decl
add
add
cmp
jl
pop
pop
pop
ret
push
xor
cmp
jne
call
cmp
jne
push
push
mov
cmp
mov
lea
jne
push
mov
push
call
cmpl
jne
lea
lea
push
call
incl
push
call
pop
lea
lea
push
call
pop
pop
pop
ret
cmpl
jne
mov
lea
lea
push
call
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
mov
sub
push
push
lea
push
mov
xor
push
push
push
mov
push
push
mov
mov
mov
mov
call
test
jne
lea
push
lea
push
push
push
push
push
push
pushl
mov
pushl
call
test
jne
lea
push
lea
push
mov
push
push
push
push
push
pushl
pushl
call
cmp
mov
je
pushl
call
cmp
je
pushl
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
xor
push
mov
call
mov
cmp
jne
xor
jmp
lea
push
lea
push
push
push
push
push
push
pushl
push
call
push
call
mov
pop
pop
leave
ret
call
jmp
mov
jmp
push
call
pop
ret
mov
jmp
cmpl
je
push
mov
push
call
inc
push
mov
call
inc
movl
mov
pop
ret
push
mov
push
call
push
mov
call
andl
mov
pop
ret
push
push
push
mov
call
xor
push
mov
movzbl
movzbl
shl
add
mov
mov
shr
cmp
mov
sbb
pop
inc
xor
sub
cmp
mov
mov
mov
mov
je
push
call
cmp
sbb
inc
mov
mov
call
mov
mov
call
mov
push
push
call
push
push
mov
call
mov
xor
cmp
mov
mov
pop
setne
inc
mov
mov
mov
pop
pop
ret
mov
call
push
push
mov
mov
movl
mov
andl
test
je
push
call
mov
test
je
push
call
mov
pop
mov
leave
ret
mov
call
push
mov
movl
mov
andl
test
je
mov
test
je
call
mov
mov
leave
ret
call
jmp
ret
push
call
pop
ret
mov
jmp
jmp
call
jmp
ret
push
call
pop
ret
mov
jmp
push
mov
sub
lea
push
call
push
call
push
pop
cmp
sbb
neg
leave
ret
jmp
call
mov
ret
push
call
test
pop
je
movl
andl
ret
xor
ret
mov
ret
mov
call
test
je
andl
movl
ret
xor
ret
push
mov
call
testb
je
push
mov
call
mov
pop
ret
mov
call
push
mov
movl
andl
call
mov
mov
leave
ret
mov
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
mov
ret
mov
call
push
mov
movl
andl
add
push
call
mov
mov
leave
ret
call
test
je
mov
test
je
push
push
call
pushl
call
ret
mov
call
push
push
mov
mov
movl
mov
andl
test
je
push
call
call
cmp
jne
andl
orl
mov
call
mov
pop
mov
leave
ret
push
push
push
push
call
push
mov
call
add
xor
mov
cmp
je
push
push
call
pop
mov
pop
mov
call
pushl
push
call
lea
jmp
push
mov
call
call
mov
cmp
je
mov
cmp
je
push
push
call
call
mov
mov
lea
cmp
je
mov
call
test
je
mov
call
cmp
jne
mov
mov
cmp
je
push
call
mov
mov
cmp
je
push
call
mov
pop
pop
pop
pop
ret
add
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
mov
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
call
add
ret
mov
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
call
add
ret
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
call
add
ret
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
mov
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
lea
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
and
test
je
mov
jmp
ret
lea
jmp
mov
jmp
lea
jmp
lea
jmp
mov
and
test
je
mov
jmp
ret
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
push
mov
push
call
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
call
add
ret
mov
jmp
mov
push
mov
push
call
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
call
add
ret
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
call
add
ret
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
mov
push
mov
push
call
add
ret
mov
add
jmp
mov
push
mov
push
call
add
ret
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
call
add
ret
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
call
add
ret
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
call
add
ret
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
mov
and
test
je
mov
jmp
ret
lea
jmp
mov
jmp
int3
int3
int3
mov
and
test
je
mov
jmp
ret
lea
jmp
mov
jmp
int3
int3
int3
pushl
call
ret
mov
jmp
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
pushl
call
ret
pushl
call
ret
pushl
call
ret
pushl
call
ret
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
pushl
call
ret
mov
jmp
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
pushl
call
ret
mov
jmp
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
int3
int3
pushl
call
pop
ret
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
pushl
call
ret
mov
jmp
int3
pushl
call
pop
ret
mov
jmp
pushl
call
ret
mov
jmp
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
pushl
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
lea
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
pushl
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
pushl
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
pushl
call
ret
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
pushl
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
pushl
call
ret
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
xchg
shr
scas
mov
jns
push
push
jle
xor
sarl
add
leave
xchg
dec
and
mov
or
in
jp
xor
repnz
push
push
or
cld
jo
scas
incb
ja
je
loop
repz
test
pop
push
test
adc
jecxz
leave
xlat
jmp
fmul
sub
aad
jnp
pop
cwtl
scas
call
hlt
jmp
sbb
adc
imul
mov
mov
add
push
xchg
pop
sti
inc
rclb
inc
mov
pop
inc
popa
jnp
loopne
jg
clc
dec
sti
xor
xor
sub
into
mov
syscall
pop
adc
and
pop
adc
mov
or
test
jnp
rolb
pusha
repz
xchg
ret
mov
add
nop
push
imul
data16
cltd
loopne
or
test
cmp
mov
pop
adc
cltd
rcr
cli
dec
push
shrl
pop
xchg
jl
pop
aas
insb
fs
dec
jg
jae
lahf
movsl
test
xorl
scas
fdivrs
stos
mov
push
sbb
ret
or
pop
mov
outsl
jnp
fisubl
push
aam
call
daa
andl
pop
pop
jo
test
xor
mov
roll
loopne
cmpsl
inc
pop
jge
cmp
pop
das
and
pop
pop
mov
fwait
cltd
and
pusha
ret
cmp
clc
or
mov
mov
sub
mov
jp
inc
jle
into
jo
sarb
outsl
jno
popf
jns
and
js
jns
aad
fstpt
outsl
lret
pop
xor
in
jo
mov
jne
jnp
lahf
xor
cmp
lea
lock
insb
fsts
pop
ds
sbbl
aad
pushl
stos
call
rcr
sub
inc
inc
clc
mov
jns
pop
mov
push
push
ret
cmpsl
or
lahf
xor
dec
lods
xor
cmp
pop
in
je
lahf
push
add
iret
subl
mov
fidivrs
outsl
jecxz
and
das
aaa
jl
and
sar
fcom
mov
pop
xor
mov
or
jbe
imul
ja
out
das
or
xor
shl
jp
ds
mov
lret
sub
push
pop
sbbb
cli
shrb
lahf
sub
xchg
adc
outsl
sbbb
jo
fs
add
aaa
lahf
sbb
mov
push
mov
cli
fistl
imul
jns
pop
test
jns
sahf
dec
loopne
incb
das
adc
mov
jp
call
sub
push
jecxz
imul
testb
lods
fmull
push
or
cmp
jb
and
mov
ds
dec
test
loopne
nop
scas
out
in
iret
sub
loopne
call
lock
ret
mov
enter
add
out
aaa
cmc
add
pop
cmp
add
push
pop
mov
jl
dec
pop
sbb
in
fidivrs
sub
cltd
xchg
out
pushf
fistps
cmp
in
ror
mov
pop
jnp
cwtl
out
enter
pop
cmp
push
xor
sub
ja
data16
cmpb
shlb
sbb
cmp
adc
imul
push
in
psllw
lods
pop
jnp
mov
pusha
inc
xchg
aam
sbb
jle
cltd
out
frstor
fldcw
mov
test
lds
add
xor
iret
sub
add
cmp
lcall
ret
ja
mov
cmp
cmp
push
inc
repz
push
in
icebp
mov
jae
dec
ljmp
inc
push
xchg
gs
add
int3
or
outsl
mov
dec
mov
test
icebp
call
xchg
aas
inc
mov
call
pop
aaa
cmp
mov
jbe
sti
mov
ds
cld
add
pushf
sbb
mov
cmc
cmpsl
mov
pop
pop
sub
xor
xchg
inc
pushf
mov
stc
cmp
mov
dec
arpl
push
sub
lahf
xor
jae
xchg
sbb
fxch
popf
mov
mov
mov
push
roll
pop
dec
mov
mov
mov
ja
cmp
adc
push
lds
cmpsl
push
xchg
push
imul
jle
push
dec
adc
shlb
iret
mov
xchg
or
clc
sbb
fs
ficompl
sub
adcl
xor
fs
lret
mov
fidivl
cs
imul
sub
hlt
pusha
mov
adc
js
shufps
cmpsb
mov
jno
adc
mov
enter
fldl
push
iret
push
fbstp
adc
aad
aas
shl
sub
cli
jl
lret
jp
mov
inc
cmp
gs
adc
std
jmp
sub
mov
loope
mov
pop
adc
xlat
fidivrl
aaa
push
jl
mov
mov
dec
loop
cmpsb
out
std
sub
sub
insb
xchg
cmp
js
push
js
cmpsl
jmp
xchg
adc
es
xchg
jbe
push
rcrl
mov
cmc
push
jnp
sbb
or
jp
push
out
sbb
dec
mov
sub
jle
xchg
add
sbb
pop
pop
push
jb
inc
in
mov
pushf
xchg
fs
pushf
loope
cmp
jae
sub
lods
mov
daa
es
dec
pop
pop
or
xchg
aam
lock
xor
and
cmp
jg
add
popf
arpl
pop
xchg
sub
ds
in
dec
inc
pop
das
inc
sbbl
mov
jns
imul
adc
cs
outsb
cmp
pop
mov
daa
mov
pop
mov
imul
js
out
lds
sti
pop
xchg
xlat
or
dec
xchg
ljmp
pop
push
inc
pop
jg
insl
sahf
sbb
mov
sbb
sbb
ljmp
push
adc
jl
and
gs
push
test
jg
repnz
iret
pop
inc
aas
cwtl
adc
daa
loop
xchg
xor
cmp
cmp
inc
xchg
mov
pop
lds
push
cli
adc
xchg
or
or
mov
mov
jnp
cmp
xchg
xor
loope
ret
and
xchg
cltd
mov
or
mov
cmpsl
mov
rolb
jl
cwtl
les
cmc
test
add
cltd
adc
push
pop
leave
fdivl
data16
inc
and
icebp
fistpll
stc
add
das
insb
jg
fisttps
scas
fldt
push
xchg
cmp
jo
ljmp
pop
cltd
mov
popf
je
jns
push
add
sub
add
xchg
xor
sbb
fcoml
shlb
or
adc
mov
push
and
mov
mov
fdivrl
dec
loope
cmp
loopne
sub
nop
inc
roll
sub
mov
pop
cmc
xchg
out
hlt
inc
pop
xchg
aaa
mov
pop
add
dec
lods
xchg
jmp
sub
in
add
sbb
xchg
in
loop
adc
and
test
mov
fdivrs
jo
imul
pop
loope
push
aad
test
jl
test
push
mov
and
mov
inc
fildl
fcmovnbe
dec
data16
sbb
mov
mov
jmp
mov
lods
mov
mov
lahf
sub
fcmovbe
fcomi
add
clc
lock
jns
pop
mov
adc
lldt
movsl
lock
xor
data16
pop
int
pop
je
aad
mov
iret
popf
xor
loope
cmpsb
jbe
cmpsb
mov
in
sahf
lods
cltd
shll
mov
daa
mov
push
ja
fiadds
xchg
les
jae
out
dec
ja
dec
ret
in
dec
xor
mov
sarb
test
in
push
out
sbb
scas
push
cmp
into
xchg
lea
inc
xchg
testb
push
jle
xchg
out
adc
lret
dec
outsl
lods
and
das
pop
cmp
aad
inc
mov
cwtl
in
mov
jp
pop
packsswb
insb
data16
into
mov
cmc
jmp
lods
fdivrl
divl
packuswb
mov
bswap
scas
mov
adc
or
inc
mov
rcrl
add
shl
cmpsb
inc
arpl
mov
lret
idivb
data16
add
je
sub
out
lods
pop
lods
sbb
es
adc
xchg
in
and
lret
adc
mov
inc
and
mov
out
and
cmc
jno
andb
lods
shrb
repnz
xchg
sarb
sub
mov
and
shlb
inc
pop
jo
cmp
dec
jno
ret
scas
sbb
add
dec
sbb
decb
push
dec
frstor
mov
mov
ds
rorl
or
xlat
push
jbe
in
add
roll
push
aas
ds
sbbl
dec
cmp
loopne
sub
lds
fwait
jnp
pop
jge
int3
cmp
scas
repz
add
cs
pop
into
faddp
xor
dec
adc
jnp
add
cmp
cmp
inc
and
in
xor
ja
pop
popa
test
jl
sahf
ljmp
sub
mov
or
sub
jge
mov
xchg
in
loop
mov
pushf
call
or
pop
outsb
mov
stos
inc
sub
inc
inc
out
test
add
notl
sub
stc
inc
xlat
cmp
stos
inc
cmp
pop
jmp
cld
sub
xor
and
out
push
add
xchg
xchg
pop
lea
push
inc
into
mov
loop
inc
mov
lock
mov
out
jle
dec
daa
cmpsl
hlt
fisttps
xchg
and
ss
popf
jbe
rclb
loope
sar
stos
jne
mov
pop
pop
in
xchg
xchg
push
mov
lea
fiadds
xchg
cmpsl
sarl
in
lret
pop
in
pop
push
dec
mov
xchg
cli
insb
sahf
cmpsl
std
mov
pop
mov
std
sar
iret
xchg
bound
movsb
inc
push
xchg
leave
jge
fsubl
sbb
jno
insl
pop
mov
cwtl
mov
int
in
cmp
negb
lds
clc
daa
sbb
jbe
int
jno
int3
mov
je
push
jg
aam
iret
ret
mov
leave
ud0
cmp
mov
push
rcrl
jle
les
aad
dec
xorb
sub
sbb
cwtl
aaa
and
jmp
and
mov
cltd
je
mov
mov
lret
lds
pop
adc
pop
mov
mov
push
iret
pop
shrl
jb
mov
repz
nop
es
sub
jg
xchg
ret
repz
jns
and
popf
ss
test
jbe
xor
and
leave
int
jle
outsl
call
fdiv
scas
test
adc
addr16
nop
loop
cli
mov
xchg
pop
mov
and
sbb
xchg
popf
or
pop
dec
push
sbbb
sar
fidivrs
icebp
popf
dec
cld
dec
rcrl
fdivrp
roll
mov
jns
inc
test
pop
jns
push
scas
sub
xchg
call
gs
loop
and
jo
cltd
jp
jecxz
ljmp
add
imul
andb
xor
push
inc
and
add
std
lods
in
in
popa
inc
bound
inc
mov
stos
adc
push
mov
push
add
out
dec
add
lock
imul
sbb
in
xchg
push
mov
subl
fisubrl
or
repnz
xor
xchg
fnstsw
bound
adc
ds
data16
out
aaa
xor
mov
mov
jno
scas
sbb
sbb
dec
int3
jp
xlat
mov
add
jno
shll
and
mov
jecxz
in
dec
cmp
xchg
jb
pop
aad
mov
imul
orb
sbb
add
pop
aad
out
jmp
adc
xor
cmp
jmp
xchg
ret
arpl
loope
lods
push
in
xor
in
imull
daa
lea
mov
mov
enter
fdivl
js
shll
cmp
jno
ljmp
mov
aas
aas
xchg
push
cmpsl
xchg
mov
gs
inc
testb
ret
cmp
pop
and
mov
movl
inc
and
jno
cmpsl
aaa
popa
test
pop
sbb
ficomps
xor
jge
add
les
negl
lcall
scas
push
mov
fld
sub
in
mov
and
fsubrs
sti
xchg
xchg
pop
rcll
push
push
jecxz
ret
jmp
add
xor
lods
sub
shlb
mov
mov
and
or
js,pt
icebp
jb
dec
mov
mov
mov
sub
push
test
push
outsb
pop
xchg
pop
out
fs
shlb
pop
jae
imul
mov
mov
adc
mov
mov
push
lock
imul
pop
xor
dec
iret
fstpt
arpl
scas
xchg
mov
sbb
fisttpl
and
xor
push
sub
loopne
lahf
cld
pop
shll
stos
cmpb
push
pop
push
jb
hlt
jne
pop
adc
in
mov
pop
stos
inc
sub
jmp
mov
push
push
lods
int3
pop
lds
jmp
enter
mov
fadd
out
sub
pop
jb
add
xor
mov
cmp
push
and
sahf
andb
xor
test
and
stc
int
imul
inc
icebp
cmp
mov
aas
and
jns
pushf
rcr
sbb
sub
jb
pop
cli
repz
dec
je
mov
xor
std
out
pop
int3
movb
inc
add
mov
xor
lds
insb
insl
and
push
icebp
dec
push
scas
mov
lret
mov
jge
fisttpl
popa
jge
sub
aas
faddl
jbe
mov
dec
pop
mov
pop
jnp,pt
add
repz
lret
sti
fwait
xchg
mov
in
dec
sub
jns
sbb
jo
jnp
ss
movsb
mov
sbb
push
ljmp
loope
pop
or
addr16
mov
pop
das
jo
testl
es
jbe
sub
sbbl
cmp
stos
cmp
andl
inc
and
push
cli
dec
and
sbb
das
push
xor
movsl
jae
lahf
std
dec
int
jmp
adc
jae
int
popw
popa
test
outsb
shrb
mov
add
add
cmc
fsubs
bound
testl
mov
xchg
loope
enter
stos
add
and
fisubrl
add
xchg
rsm
push
sbb
push
sub
sbbb
xor
shrl
fcmovnu
xor
jno
inc
in
outsb
push
push
pop
fwait
in
notb
sbb
insl
mov
pop
out
jp
jmp
xchg
add
or
and
pop
xor
add
dec
add
inc
pop
ret
popf
lcall
mov
sub
pop
and
cmp
jae
into
mov
in
sbb
adcb
mov
in
cmp
mov
or
js
mov
rcr
pop
loope
out
mov
adc
repnz
pusha
adc
mov
push
flds
jmp
pushf
pushf
xor
cwtl
jns
sub
add
lahf
and
jmp
cld
inc
stos
or
xchg
mov
movsb
xor
in
cmp
mov
lds
inc
insl
pushf
fiadds
icebp
pushf
in
shr
imul
sub
sub
inc
inc
sub
les
inc
loopne
lods
call
inc
call
xchg
adc
fiadds
call
xchg
lock
imul
fildll
push
jb
fwait
stc
and
jb
adc
ss
mov
pusha
xchg
icebp
push
int3
mov
popf
pop
push
data16
out
xchg
cmp
xor
mov
mov
in
push
xor
sbb
lods
adc
and
dec
jp
sub
or
addr16
daa
shlb
sub
dec
daa
push
xor
adc
sahf
mov
push
scas
addr16
scas
dec
jbe
add
adc
jg
push
insb
int3
sub
cmpsl
sbb
lock
dec
sbb
xchg
xlat
ja
push
fucomi
popf
js
mov
adc
cmp
fbld
mov
les
popf
insb
les
pop
push
inc
stos
fidivrl
mov
call
lock
and
into
cmp
gs
jl
test
sub
mov
andl
cltd
mov
rorl
test
repnz
mov
inc
into
lret
pop
and
push
call
pop
daa
fcmovnbe
inc
mov
jmp
imul
test
scas
in
add
push
lods
cmp
adc
inc
mov
fisttpl
es
lahf
mov
xchg
pop
cmp
push
in
jl
fstpl
push
lcall
xchg
xchg
jle
lret
sub
test
not
dec
sub
imul
add
in
jge
push
in
test
xchg
push
movb
mov
sbb
jae
jl
xor
jnp
movsl
push
movsl
pop
popa
pop
std
pop
ja
cs
xlat
jle
les
cmpsb
adc
inc
mov
add
ficoml
nop
mov
fbstp
adc
mov
xor
lds
xor
fsts
shrl
out
dec
scas
out
pop
les
repz
enter
xchg
xor
and
out
sub
es
jge
xor
fidivrs
ja
mov
sbb
aaa
movsl
inc
sub
mov
mov
sub
xor
out
test
test
xor
std
xchg
insl
cmpl
or
xchg
or
pop
mov
gs
insl
outsb
dec
fimuls
xor
xor
fisubl
inc
std
adc
popf
push
adc
nop
aas
xchg
imul
ja
data16
push
sahf
filds
sbbl
ljmp
xchg
in
sub
push
lock
cmc
push
jnp
test
cmp
push
mov
arpl
hlt
ljmp
jl
pop
inc
out
xchg
lahf
stos
ja
into
jle
adc
loopne
pushf
mov
imul
lods
lcall
dec
clc
lret
mov
inc
fnstenv
lahf
and
or
ret
lahf
das
cmc
lea
lcall
mov
mov
fs
movsl
daa
ja
je
ret
pop
push
loopne
inc
adc
push
pop
push
mov
pusha
daa
ja
xchg
and
dec
test
std
push
pop
mov
adc
enter
add
enter
ficomps
dec
dec
push
gs
loop
adc
outsb
outsb
insb
mov
wbinvd
mov
cmc
ljmp
scas
pop
test
pop
insl
in
sbb
mov
fwait
cmp
push
dec
jo
stos
je
sti
mov
mov
push
in
xor
sub
fidivrl
or
xor
dec
dec
mov
sbb
push
repz
mov
es
push
out
rclb
dec
push
add
sbb
rcl
bound
jae
xchg
mov
cs
sbb
popa
arpl
add
ficomps
scas
dec
inc
imul
dec
push
out
push
push
lcall
adc
sbb
xor
mov
mov
ljmp
xor
test
jg
add
push
in
shll
dec
mov
shl
jbe
imul
leave
mov
pop
sub
test
xorb
adc
pusha
sbb
mov
sahf
je
xchg
or
mov
loopne
sub
push
mov
hlt
adc
dec
gs
dec
mov
cmp
add
inc
cwtl
fidivl
inc
mov
in
pop
popf
push
xor
inc
xchg
dec
and
rcrb
mov
loope
jno
pop
xor
mov
insb
mov
sbb
icebp
call
dec
mov
ljmp
insb
rcr
ret
fucomp
shll
std
movsb
dec
add
push
cmpb
sub
jno
xchg
or
jno
push
push
or
push
cld
push
and
jo
cltd
outsl
inc
fiaddl
ja
adc
or
jns
cs
rcrl
in
out
repnz
fsub
jnp
int
mov
enter
pop
push
xchg
das
xchg
mov
jge
mov
nop
jg
ffree
cmpsb
negb
jbe
pop
mov
cmp
cmpsb
xor
stc
test
ficomps
push
mov
out
mov
adc
dec
int
out
add
call
ds
or
jecxz
sbb
xchg
cmp
adc
cmp
nop
pushf
leave
sub
insl
jns
adc
mov
lods
int3
pusha
insl
cmc
mov
pop
jp
pop
inc
pop
mov
ror
aaa
iret
cmp
lret
xchg
jb
ds
leave
rcrl
adc
push
out
add
gs
jl
into
push
mov
push
or
and
adc
mov
out
shrb
push
jmp
mov
jl
lea
mov
out
dec
push
subb
fisubrl
in
cld
bound
repz
pop
data16
jnp
cmp
and
or
insb
jo
in
or
mov
inc
pop
sub
add
inc
xchg
sub
insl
xor
mov
das
iret
sub
or
adc
pushf
enter
mov
sarl
es
test
pop
xor
jo
mulb
cmp
lds
movsl
xor
bound
lock
addb
mov
lahf
sbb
mov
mull
frstor
dec
js
pop
and
adc
push
pop
inc
mov
jg
in
test
lahf
sbb
pop
shlb
xchg
push
and
and
out
mov
vpunpcklqdq
mov
out
iret
int
and
insl
sub
fisttps
xor
fidivl
dec
movsb
in
jecxz
repnz
xor
push
jne
lds
xor
repnz
push
mov
inc
jl
adc
fs
shll
nop
xor
cwtl
cltd
sub
inc
mov
mov
in
pop
stos
xchg
push
daa
cld
scas
cli
mov
scas
in
inc
sbb
inc
add
dec
cwtl
push
cmpsb
cmpsl
faddl
mov
push
mov
pop
stc
sbb
add
in
cmp
enter
movsb
aas
xchg
mov
inc
lods
jge
pop
or
mov
inc
loop
push
jne
or
mov
cmp
dec
scas
mov
xor
mov
outsl
les
or
xor
xor
sbb
sub
xor
out
dec
lds
xchg
es
adc
out
inc
test
mov
mov
std
das
sub
or
mov
jb
xchg
test
testb
cmc
or
push
shlb
test
mov
loopne
jo
xchg
ja
xchg
sbb
enter
or
pop
test
arpl
outsb
add
lcall
dec
aad
add
clc
mov
mov
sti
or
inc
jge
add
xchg
dec
dec
ret
cs
loope
push
xchg
cmp
int
lock
mov
cmpsl
xchg
popf
lods
mov
pop
xchg
jecxz
xchg
sub
sbb
pop
orb
fstpl
jecxz
test
and
mov
cmp
push
sub
pop
sarb
addr16
insb
jb
dec
call
leave
xchg
or
mov
mov
sub
repnz
sbb
or
subb
xor
sbb
dec
scas
ljmp
mov
test
out
adc
mov
lahf
sbb
push
gs
jge
mov
push
movsb
dec
jo
les
push
pusha
out
daa
mov
in
push
cwtl
adc
mov
add
cmpsb
into
stos
popa
pop
loop
xchg
les
mov
inc
fistps
arpl
insb
enter
out
push
push
mov
adc
les
aas
scas
sbb
icebp
mov
aas
dec
testb
push
and
scas
lret
arpl
mov
or
pop
xor
aad
ds
xchg
sbb
push
inc
add
jbe
jl
pop
je
vcmppd
add
in
data16
push
push
mov
data16
mov
push
inc
xchg
push
js
inc
jns
mov
cli
out
cmp
mov
int
dec
lods
xchg
xchg
sbb
push
scas
lcall
mov
sub
sbb
or
icebp
or
push
imull
bound
dec
and
lods
mov
ja
sbb
test
inc
fsubrp
or
cmp
js
sub
mov
jl
addr16
stos
clc
jae
loop
icebp
in
outsl
cmpsb
mov
mov
mov
fistpll
pop
mov
aad
push
pop
shll
dec
mov
loope
mov
pop
sbb
cmpsl
or
aas
push
jns
dec
sub
jne
adc
test
inc
test
mov
sub
shr
inc
pop
jle
inc
push
in
pop
clc
testl
shl
sub
and
mov
jg
fisttpl
imul
or
pop
or
pusha
and
out
imulb
pop
mov
jae
sti
lods
pop
lods
push
fldlg2
push
cmp
xor
rol
lds
arpl
jbe
ss
scas
dec
inc
cmpsl
jnp
testb
gs
inc
ret
mov
test
fists
sub
fisubrl
out
mov
xor
xchg
test
jnp
push
arpl
add
lret
imul
add
fcomps
xor
xchg
aad
call
mov
mov
cmp
shl
adc
stc
adc
xor
inc
repnz
lahf
lcall
push
xor
push
test
jno
addb
aad
pop
movsb
push
shlb
scas
popf
and
jns
movsb
and
loope,pt
maxps
outsl
xchg
add
push
cmp
or
out
loop
push
xchg
push
das
adc
mov
test
sub
dec
jnp
fs
jmp
stos
jns
jl
jl
popf
ja
aas
xchg
mov
aas
pop
mov
jae
mov
repnz
jns
mov
xchg
cmp
push
cmp
fwait
shl
add
adc
outsb
pop
xor
or
lahf
pop
dec
xlat
aam
and
je
or
jo
pop
push
mov
call
std
sub
shlb
movsl
lahf
dec
int3
xchg
dec
aas
push
lods
ja
out
sbb
cli
or
and
mov
movsb
sti
adc
lret
and
scas
and
ljmp
add
les
xor
xchg
subb
or
jns
sub
lahf
xor
pop
xor
mov
mov
aam
movsb
in
sub
loopne
lahf
pop
scas
cld
dec
cmp
stos
dec
xor
aas
adc
push
je
cmp
mov
mov
lahf
pop
xor
popa
out
int
cmpsl
add
movsl
fwait
je
jbe
mov
xchg
mov
and
add
sbb
cmp
stc
mov
and
rol
and
lahf
push
icebp
sahf
leave
imul
and
dec
or
je
movsl
cwtl
sub
mov
push
fwait
idivl
int3
out
adc
or
or
divl
cli
outsl
ret
fs
aad
insl
jl
les
pop
es
mov
dec
repnz
mov
dec
cwtl
jg
rclb
or
insl
jl
xchg
insl
and
ljmp
fnsave
imul
test
jbe
xadd
sbb
cmp
mov
call
or
inc
mov
mov
test
and
inc
movsb
mov
ficomps
fsubrp
aas
in
jp
xlat
scas
pop
mov
sbb
out
scas
adc
movb
push
cmp
mov
aam
ds
cli
or
xor
and
enter
out
shl
lock
mov
sub
in
dec
cmc
xchg
and
nop
fwait
inc
and
sbb
scas
sbb
popa
add
xor
and
ficompl
push
mov
ss
fisubrl
ret
mov
mov
daa
jg
inc
jl
xor
mov
inc
insb
and
mov
pop
jae
push
scas
mov
jg
hlt
mov
push
xchg
cmp
ret
ss
shrb
pop
stc
jbe
sarb
mov
test
push
sub
sub
test
shr
adc
dec
and
stc
sub
mov
loop
sub
xor
push
adc
imul
push
repnz
sbb
inc
jmp
aas
xor
mov
scas
test
adc
or
jge
mov
into
insb
aam
mov
mov
clc
push
inc
fnstsw
push
fcompl
loope
xor
pop
mov
pop
mov
pushf
mov
jne
push
into
xchg
nop
jmp
out
lods
rcr
adc
call
pop
jmp
aad
leave
push
and
bnd
shrl
pusha
pop
push
cmp
jg
in
mov
push
aam
lods
mov
in
xlat
jecxz
loop
push
fnstenv
or
das
and
daa
rclb
enter
pop
jl
sub
int
rclb
popf
sub
jo
lahf
stc
fistpl
sbb
fsubs
mov
rcrl
lea
mov
test
or
leave
mov
push
push
inc
leave
divb
cmp
lcall
and
sub
jg
or
xor
aas
xor
fstps
mov
mov
xchg
jns
xor
xor
test
pop
jg
jecxz
sbb
adc
jmp
xor
pop
outsb
mov
mov
push
fwait
mov
scas
adc
or
nop
int
sbb
inc
mov
mov
sbb
mov
repz
xchg
adc
fs
imul
push
dec
fstpt
push
cmpsb
add
call
inc
fimull
jno
pop
add
int
sbb
xor
xor
out
sar
mov
mov
mov
dec
cwtl
dec
mov
sbb
xor
xor
jnp
add
xchg
loope
xchg
pop
sbb
je
add
mov
adc
dec
sbb
jl
inc
add
inc
jns
cli
out
ret
aam
aad
adc
push
jp
sbb
push
dec
insl
xor
mov
jnp
jg
adc
je
sub
sbb
xor
mov
dec
imul
fisttpl
xchg
stos
lahf
cmpsb
xchg
sahf
cmc
aas
xchg
mov
pusha
sbb
push
mov
addb
fsubrl
rolb
aam
aad
in
cld
push
adc
cld
or
sbb
add
jns
push
push
jnp
xchg
inc
dec
out
pop
outsl
mov
pop
or
imul
scas
cmpb
shll
mov
fsts
aam
fnstcw
cmc
dec
pop
adc
nop
cmp
les
pop
lods
inc
push
js
sbb
xor
pop
in
insb
adc
lret
fwait
push
icebp
adc
mov
pop
lods
sub
cmp
scas
mov
jge
and
mov
mov
fs
movsl
out
in
xor
push
ret
mov
cmp
iret
ret
sbb
xor
or
mov
jmp
cmc
jne
xor
push
push
mov
add
xchg
rolb
pop
adc
hlt
addr16
jns
lock
stos
ds
test
add
mov
and
dec
and
ret
mov
mov
add
jnp
fnstsw
adc
and
mov
jmp
shlb
pmullw
adc
lcall
xor
adc
in
das
add
shrb
sbb
xchg
jno
xchg
repz
cmp
stc
fwait
push
xor
cld
or
fidivs
sub
push
ret
fnsave
rcr
fwait
cmp
arpl
jp
xchg
scas
rol
faddl
sub
in
test
mov
lock
lock
or
movsl
jl
mov
or
gs
dec
pop
mov
mov
out
jg
mov
loop
scas
add
xor
inc
adc
dec
and
cli
pushf
mov
shrl
mov
repz
addr16
xor
outsb
cwtl
lods
arpl
push
insl
in
int
mov
or
push
inc
and
scas
icebp
xchg
shl
dec
loop
stos
or
push
cmpsl
mov
into
mov
inc
jecxz
hlt
cld
jecxz
mov
gs
cmp
xchg
mov
pop
fstpt
and
fs
arpl
imul
mov
jne
js
movsb
push
cmc
xor
outsl
mov
mov
std
sub
test
adc
in
or
bound
mov
cmp
out
rolb
mov
push
test
and
jo
push
jb
jnp
jne
int3
out
or
inc
push
ja
mov
sbb
adc
mov
pop
dec
and
jno
lcall
fnstcw
mov
sbb
cmp
push
inc
cmpsl
leave
icebp
shll
add
pop
jl
icebp
int
scas
nop
les
pushl
dec
pop
incl
sub
shrb
sbb
or
add
xor
push
mov
jno
mov
repnz
xchg
repnz
or
lcall
mov
loopne
pop
and
mov
sahf
and
inc
out
mov
xor
arpl
popa
into
sbb
pop
hlt
inc
sub
mov
mov
or
push
or
nop
mov
jmp
jecxz
mov
lods
mov
iret
pop
inc
and
out
add
cld
cwtl
jmp
mov
add
adc
dec
xchg
adc
repnz
jmp
push
cmp
jno
mov
mov
rcr
mov
mov
iret
mul
ds
clc
pop
cmpsb
test
mov
aam
sbb
pop
dec
loop
nopl
inc
stos
inc
test
xchg
xchg
jb
or
lods
mov
inc
mov
mov
mov
push
arpl
jae
cmp
aam
cltd
push
fnstsw
xor
cmp
mov
aad
mov
insl
or
aaa
out
in
pushf
push
adc
push
add
in
inc
cmp
inc
ja
repnz
push
lret
out
cld
and
adc
cld
mov
and
push
cltd
pop
pop
andl
mov
outsl
push
cmp
mov
push
fld
imul
test
stos
inc
push
lahf
jae
sub
das
cmp
jae
dec
insl
mov
ds
mov
add
push
lock
mov
jp
bound
ds
push
imul
daa
cli
sbbl
add
mov
aam
and
insb
xchg
and
inc
or
and
xor
leave
jns
in
int
ljmp
lods
clc
jp
jg
lahf
or
addr16
jnp
hlt
rorl
or
and
inc
sbb
es
cmp
cwtl
cwtl
pop
push
mov
pop
leave
pushf
inc
pop
aaa
ret
xchg
xor
bound
lret
cs
dec
addr16
or
mov
icebp
in
aas
imul
mov
push
pop
enter
adc
mov
adc
leave
dec
repnz
and
js
pop
les
ljmp
jp
and
or
mov
jmp
sti
loope
adc
in
pop
push
fstpl
xor
addr16
es
sbb
cltd
in
aad
inc
pop
std
ljmp
test
imul
movsl
xchg
jae
mov
pop
cmp
push
mov
cmp
nop
dec
mov
mov
dec
in
sti
and
push
pop
js
jbe
rcrb
or
push
cmp
push
cmp
pushf
xor
or
pop
pop
mov
cmp
daa
xchg
lods
ss
cmp
jb
lods
enter
das
in
aaa
xor
push
ja
pop
sti
inc
add
xorl
jecxz
push
das
xor
out
lods
dec
stos
push
and
xor
pop
jb
lahf
pop
cmp
mov
or
mov
jns
adc
push
jns
cld
lcall
mov
lahf
or
pop
faddl
repz
out
pop
test
popa
mov
lahf
or
je
push
fwait
mov
mov
mov
xorb
into
out
add
sti
fildl
lahf
or
es
das
mov
dec
aaa
and
pop
xor
enter
or
dec
scas
xor
scas
xchg
xchg
mov
notb
mov
push
pop
in
cs
pop
and
xchg
fnstsw
into
xchg
xor
aaa
and
fwait
pushf
jl
aaa
jp
cwtl
insl
cmpsl
insb
push
sub
or
xor
aam
loopne
pop
adc
adc
in
jne
lret
add
sub
cli
out
cli
aad
jno
sti
sub
stos
xor
and
repz
pop
inc
lea
push
pop
mov
cli
aam
pop
test
lea
and
aas
and
cwtl
pop
es
mov
xchg
adc
repnz
xor
aam
jo
sti
daa
add
ja
das
mov
xlat
clc
push
fstps
ret
jo
adc
mov
sub
mov
lret
mov
inc
fistpll
jb
lahf
xchg
adc
adc
inc
push
or
repz
push
sub
and
repz
es
xchg
stos
shlb
mov
scas
push
cmpsb
adc
dec
push
push
icebp
stos
mov
lahf
add
lahf
or
push
in
ret
mov
xor
push
mov
ret
xor
jno
push
sub
pop
sub
mov
repnz
xchg
sbb
pop
dec
pop
sarl
xor
icebp
xor
xchg
mov
mov
mov
mov
lods
jnp
add
cld
stos
inc
fistpll
stos
sub
mov
mov
jb
jae
add
inc
pop
jg
pop
lcall
inc
ret
jne
dec
cmp
mov
mov
test
sbb
mov
sub
push
xor
lods
cmpsb
add
sbb
sub
lret
insl
xor
iret
mov
sub
xor
cmp
pop
stos
mov
xor
xor
push
cmp
repnz
xlat
stc
jo
jle
aaa
shlb
lods
stos
xor
dec
dec
insb
lret
xor
xor
in
sub
std
insl
xchg
mov
adc
mov
pop
mov
push
sbb
daa
ss
lahf
fidivrl
jo
repz
cmp
sub
jl
push
in
cs
scas
or
lret
xchg
insb
push
sar
push
cwtl
mov
cmp
sub
pop
or
or
fidivrl
or
or
aaa
inc
cmpsb
mov
pop
xchg
popa
pop
xchg
xchg
pop
fidivrl
mov
dec
xor
faddl
lock
xchg
sub
iret
repz
imul
cmp
cld
dec
pop
addl
mov
cmpsb
pop
dec
sbb
addl
sbb
lock
loop
mov
sbb
mov
dec
xchg
addb
lea
frstor
hlt
ljmp
add
out
dec
enter
jne
add
and
add
filds
push
xor
push
subb
push
lret
hlt
mov
lods
bound
pop
push
enter
jno
cld
xlat
jno
pop
fucomp
sarb
icebp
xchg
pop
movsb
ffree
ja
dec
movsl
jge
and
fidivrs
mov
fistps
test
push
aad
imul
ds
ficoml
fucompp
sahf
test
jge
add
mov
inc
mov
mov
bound
popf
pop
inc
lahf
add
or
lods
jg
outsb
test
js
mov
pop
cmp
jae
pxor
sbb
js
sbb
dec
fldcw
ds
int3
xchg
xor
popa
icebp
add
cmp
enter
mov
dec
xchg
add
sub
inc
pusha
mov
cmovb
xchg
hlt
xchg
mov
inc
adc
inc
frstor
jle
xor
icebp
cli
cmc
aas
push
mov
ret
mov
repz
mov
sbb
mov
movsb
lds
insl
lods
out
mov
xor
mov
cltd
in
sbb
pop
pop
sarb
js
outsb
jo,pn
hlt
std
out
adc
xor
call
push
xor
xor
push
rorl
in
out
fsubrl
xchg
xor
movsl
jo
cmc
fisttpl
roll
lret
pop
mov
or
xor
out
divb
into
inc
popf
test
and
ret
mov
pop
mov
mov
not
xchg
clc
mov
test
dec
mov
fwait
shrb
mov
xchg
jne
mov
xor
ret
inc
push
fdiv
pop
imul
dec
outsb
or
xchg
xor
lcall
jae
inc
cmp
xchg
xor
xchg
loopne,pt
and
es
es
add
dec
cld
mov
roll
mov
xchg
fsubrl
mov
ror
adcb
sbb
je
jmp
jecxz
sbb
or
stos
fsts
push
jbe
je
rorb
cwtl
ljmp
outsl
bound
lods
xchg
jmp
push
and
inc
inc
cmp
out
push
ljmp
dec
xlat
dec
iret
dec
scas
jae
pop
inc
aad
cmp
leave
mov
lret
addr16
dec
sbb
and
jnp
mov
sbb
sub
mov
shrl
cmp
dec
loopne
shlb
loope
out
pop
mov
std
addr16
dec
or
pop
push
test
fwait
mov
dec
aad
repz
xchg
adc
inc
inc
mov
cmp
mov
mov
in
jbe
xchg
mov
adc
or
mov
xchg
lcall
leave
cmpsb
and
addr16
out
jg
mov
dec
mov
xchg
xor
push
xor
xor
adc
out
ret
add
fstps
loop
nop
add
mov
xchg
imul
add
jno
std
mov
pop
fs
sbb
sub
mov
sbb
cmp
adc
adc
cmpsb
rolb
bound
cmp
xor
cmp
adc
add
loopne
mov
and
in
jecxz
test
push
lds
pop
xchg
sub
pusha
mov
ret
xor
jmp
ret
ds
popa
aad
dec
xchg
mov
imul
mov
in
mov
sub
arpl
inc
inc
gs
and
clc
lock
xchg
push
adc
pop
mov
xor
inc
loope
mov
xchg
shlb
and
loope
or
mov
stos
repz
mov
xor
or
stos
aaa
popf
inc
pop
or
cmp
mov
movsl
lods
xchg
fxch
lret
xchg
jno
scas
jbe
insl
lahf
fwait
jmp
jnp
inc
ret
adc
ss
add
cmp
clc
inc
mov
pop
call
cmp
fdivr
daa
xchg
sbb
sub
daa
xchg
xor
cmp
das
cmc
push
xchg
add
cmc
mov
imul
pop
add
jnp
pop
and
cltd
scas
sbb
lods
mov
xor
rcl
mov
ret
sub
mov
cmp
dec
movsl
nop
sbb
or
shlb
mov
sti
nop
imul
lahf
inc
pop
dec
nop
jbe
mov
lds
xchg
jb
aam
stos
out
mov
push
fadds
cmp
sub
stos
sub
lahf
add
push
imul
adc
add
jmp
add
xchg
dec
in
stos
cmp
nop
and
ret
testb
sub
add
popa
dec
xor
sub
jl
popa
inc
or
mov
inc
fldl
pop
fbld
mov
subl
data16
push
xlat
mov
and
or
push
push
add
xchg
ret
add
xchg
das
mov
and
pop
cld
push
xchg
jno
roll
mov
test
leave
fwait
popa
aas
data16
cmp
mov
imul
cli
mov
pop
popf
pop
daa
fisubl
sub
jae
das
call
mov
xchg
fstpl
sub
lahf
xchg
mov
lcall
mov
into
xchg
and
jp
and
fidivl
ret
out
mov
sahf
rclb
add
shl
sub
xor
jg
sti
lahf
adc
sbb
sbb
jge
pop
and
hlt
shrb
adc
loopne
pushf
das
cmpsl
xchg
add
testl
int
mov
cmp
cmp
sub
xchg
movsb
jae
repnz
mov
mov
pop
shll
inc
pop
stc
test
mov
jp
mov
dec
das
push
int3
sahf
jp
test
push
push
add
cmp
addr16
clc
add
lret
andl
ret
adc
xchg
add
sbb
out
test
stc
push
pop
push
shr
lea
mov
push
jne
jp
jle
sub
jb
fbld
mov
and
inc
fcom
jmp
xor
scas
dec
enter
leave
adc
mov
mov
dec
or
dec
pop
dec
and
roll
sbb
xor
lods
cwtl
test
fidivrl
lds
xchg
fistpll
imul
mov
lods
inc
jmp
dec
fwait
es
mov
mov
pop
lret
fs
cli
dec
pusha
es
jp
xlat
xor
gs
or
popa
daa
aas
jnp
jle
adc
aam
xchg
call
push
clc
sub
insl
rcrl
adc
aaa
push
mov
inc
popa
jl
daa
repnz
adc
in
rorl
jecxz
lock
mov
xor
imul
xchg
and
aam
test
fidivrs
dec
imul
and
cli
icebp
xor
cmp
xor
insl
cwtl
lock
test
xorb
and
and
lods
test
mov
lahf
add
std
pop
or
mov
out
out
fstps
or
sub
add
jg
fsubrl
pushl
arpl
xchg
mov
subb
sub
loopne
mov
adc
stc
sub
xchg
sbb
enter
bnd
lahf
add
xor
sbb
out
cmp
mov
mov
pop
pop
and
xchg
imul
jnp
cmp
test
cmc
or
inc
cld
cmp
mov
and
icebp
fdivr
punpckhdq
scas
pop
loope
inc
movsl
pop
xor
call
push
push
in
jge
jecxz
gs
adc
xchg
push
cmp
jge
sahf
decl
sub
mov
mov
mov
jecxz
xor
sahf
lcall
cmp
bt
test
cmc
add
cmp
add
and
movzbl
bt
cmc
or
shrd
bt
mov
call
jl
aas
pop
xchg
insb
mov
adc
fdivl
xchg
mov
pop
xchg
jne
sbb
and
and
mov
mov
cld
sbbb
call
add
lock
test
push
mov
add
push
pop
arpl
aaa
pop
xchg
pop
mov
aaa
cwtl
xor
pushl
xor
test
lock
sub
fidivs
leave
dec
ficoms
daa
int
sub
mov
mov
mov
aad
and
dec
fisubs
mov
test
int
scas
cli
aad
jmp
cmp
lods
shll
leave
pop
sbb
js
pop
sti
xlat
xor
fwait
aaa
fildll
ret
stos
mov
gs
pop
shrb
ret
cwtl
pop
leave
lret
fs
js
outsl
dec
test
mov
ret
mov
jle
mov
cmp
pop
cmp
add
xchg
jle
loop
mov
xor
loopne,pt
dec
dec
mov
or
inc
xchg
nop
dec
cwtl
mov
cwtl
xor
sub
ljmp
cwtl
mov
mov
inc
jns
repz
inc
and
pop
pop
outsl
sbb
lods
pop
data16
pop
lret
setg
mov
out
sti
push
leave
sti
xlat
mov
xchg
test
mov
sbbl
add
scas
push
sub
fcmovbe
gs
xor
fisttpll
dec
push
out
pxor
test
and
xchg
mov
xor
mov
std
sbb
addb
inc
xor
fidivl
cltd
mov
pop
pushf
mov
sub
jle
push
push
out
cmp
xor
cmp
inc
push
adc
out
pop
out
je
daa
inc
insb
adc
shlb
sahf
std
add
mov
mov
cld
mov
and
dec
enter
xchg
loopne
int
jb
sbb
icebp
cwtl
and
adc
mov
cmc
int
lods
pop
out
or
test
stc
adc
aam
inc
out
mov
lods
packsswb
cmp
mov
xor
fwait
cmp
sbb
push
loope
decl
out
dec
jno
sub
test
pop
mov
adc
jmp
jb
rcrl
jae
shrl
cmp
sub
fimull
mov
imul
mov
xor
pop
mov
mov
and
loope
int3
or
sub
adc
in
mov
lea
add
sub
lcall
jbe
lea
xor
cmpsl
sbb
pop
pop
mov
lcall
stos
mov
das
or
mov
mov
iret
clc
aaa
mov
and
inc
ja
push
lahf
fldenv
cmp
movsb
sbb
arpl
mov
imul
push
fmuls
cmp
sub
fwait
inc
mov
xchg
xchg
call
insb
das
jmp
sub
inc
pop
jo
cltd
mov
dec
daa
fistl
xchg
xor
clc
inc
pop
sub
lock
fwait
in
push
mov
icebp
inc
pop
and
lret
popf
nop
ret
push
fmul
popa
fnsave
ffreep
scas
add
insb
xor
pop
cld
int
or
addr16
cwtl
mov
xor
mov
mov
test
dec
or
or
test
and
jbe
sbb
sbbl
fcoms
inc
xor
mov
in
or
sahf
sti
push
lods
mov
pushl
sub
sti
cld
jmp
add
push
or
hlt
xor
mov
int
mov
and
shlb
sahf
sti
sub
xor
stc
pop
in
sub
xor
mov
mov
adc
fwait
int
and
or
mov
or
sub
add
push
insb
jbe
incl
mov
and
inc
sbb
xchg
std
dec
int
inc
jle
jae
mov
into
push
cmp
lods
mov
dec
and
sarl
and
or
ljmp
fmul
mov
rolb
lods
sub
std
mov
sti
fldt
and
popa
mov
push
sub
stos
sbb
mov
je
sbb
dec
jne
push
movsl
xchg
or
lret
cmpsl
xchg
push
scas
sub
or
testb
mov
sub
notb
jle
aas
mov
stos
xchg
mov
push
ss
push
movsl
out
lods
lds
inc
adc
std
push
jb
aas
xchg
lret
xchg
jle
add
fistpll
mov
clc
in
shrl
gs
aam
repz
inc
mov
rcll
mov
addr16
xor
into
insl
leave
aas
js
jne
sub
pop
sub
mov
mov
lods
and
in
imul
leave
in
sahf
clc
jbe
adc
fcoms
popa
test
loop
add
ds
xor
pop
sub
inc
in
mov
fsubrp
pop
in
imul
push
popf
and
test
pop
fistps
test
clc
cmp
mov
jmp
and
mov
dec
mull
fsubp
aam
inc
out
push
icebp
push
cmp
xchg
pop
mov
std
xor
sub
stc
push
mov
ret
xor
dec
daa
xor
psrad
sub
movsl
shrl
sbb
insb
jbe
jle
jnp
inc
xchg
mov
pop
divb
xchg
push
sar
dec
popf
push
inc
les
push
ja
test
xor
aam
aad
mov
push
dec
aad
sbb
mov
push
mov
xchg
fwait
js
add
cwtl
and
inc
and
cmp
adc
outsb
fstps
insl
ret
or
xchg
ss
mov
cmp
mov
lret
push
fcmove
or
sbbl
test
arpl
stos
dec
cmp
dec
xchg
into
sbb
in
or
and
imul
sbb
and
inc
out
fistpl
jg
movsl
inc
and
es
ja
cltd
subl
cmp
cmpsb
getsec
sub
aam
aas
stos
repnz
xchg
enter
jb
lea
fmuls
cld
inc
and
movsb
ss
in
or
pop
mov
arpl
push
dec
jmp
out
clc
lock
clc
fwait
mov
lock
xchg
movsb
aam
xchg
jnp
sub
enter
mov
arpl
or
ret
in
fidivrl
mov
lea
mov
int3
mov
adc
lret
out
sahf
inc
inc
leave
xchg
cmpsl
jb
inc
sbb
in
dec
jg
fstpt
cmp
or
cli
ret
pop
jmp
mov
xor
pop
push
aam
dec
test
test
cmp
and
dec
mov
jno
ret
cmc
test
mov
test
and
ss
mov
cmpsl
repnz
test
fdivrl
xor
sbb
iret
cmp
lahf
mov
sbb
sbb
xchg
push
cmc
add
xchg
cmpsb
cmpl
fbld
mov
gs
inc
ss
and
imul
insl
cli
leave
cld
cmpsb
daa
add
pop
mov
xor
ds
jmp
sbb
fistpl
jg
push
sbb
mov
loop
mov
or
addr16
lock
push
mov
xor
call
aam
add
add
data16
popa
pop
std
clc
xlat
fs
in
sbb
aaa
mov
add
pop
ds
pshufw
cmp
fidivrl
sti
push
fisttpl
aam
jecxz
push
jb
sbb
rorl
das
sbb
jae
jns
adc
pop
fwait
mov
fistl
pop
sub
leave
outsb
subl
mov
xchg
mov
or
cmc
inc
xchg
fs
xchg
pop
xchg
mov
xchg
dec
lods
inc
lods
inc
mov
ss
xchg
bnd
or
or
pop
scas
ja
popa
repnz
loope
js
js
out
leave
dec
enter
add
rorb
sbb
rcrl
shll
xchg
xchg
ss
call
testb
enter
or
or
pop
dec
jnp
pop
subl
arpl
mov
dec
cmp
lock
arpl
shll
das
outsl
push
movsl
movsb
std
cmp
cld
cmpsb
inc
lock
shll
rcrl
aas
dec
ret
adc
mov
into
xchg
mov
or
adc
mov
aam
cmp
in
and
insl
pop
test
inc
push
xchg
js
mov
jge
imul
jo
push
mov
or
scas
sub
or
jb
and
add
xor
sub
popf
xor
idivl
imul
xor
cmp
mov
cwtl
push
or
mov
adc
sbb
xchg
in
and
cmp
std
fs
pop
inc
mov
pop
jecxz
add
or
push
in
adc
cmp
push
cmp
shl
arpl
sub
mov
popf
add
or
mov
cld
push
sub
dec
adc
or
sbb
xchg
xchg
push
and
add
mov
rcll
dec
and
insl
jnp,pn
std
mov
ja
sti
mov
call
push
cmp
cmp
adc
rcrl
mov
sub
jmp
inc
sti
jb
insb
xor
jmp
inc
jl
jo
test
sbb
xor
cmp
ficompl
hlt
imul
bound
push
ret
repz
test
rcrb
jg
dec
daa
cmp
xor
movl
pusha
push
pusha
lea
jmp
push
movl
call
ljmp
mov
loop
shrb
ficomps
jne
mov
push
int3
pop
jnp
negl
mov
pop
cmp
pop
loop
jb
les
fstpt
push
inc
or
push
lds
add
push
xchg
ja
ss
sbb
lds
lret
mov
nop
push
mov
loope
pushf
adc
sub
mov
test
lcall
fidivrl
mov
mov
pop
pop
jecxz
out
test
push
mov
imul
repz
daa
mov
dec
mov
enter
lock
cmc
dec
lahf
shl
test
lret
cmpsb
inc
lea
adc
fiaddl
xchg
sub
sub
pop
addr16
or
test
test
sbb
gs
xchg
pop
mov
insl
xor
fiadds
fcompl
sbb
leave
je
test
xor
popa
andl
popl
fildl
insl
je
filds
pop
adc
inc
pop
pop
xchg
mov
test
bound
rcrb
adc
cmp
pop
add
scas
gs
pop
adc
lea
test
or
mov
mov
aaa
push
pop
dec
xor
fstps
push
js
mov
push
xchg
adc
pop
aad
adcb
or
xor
out
sub
jmp
sbb
shlb
push
mov
mov
xlat
jle
in
cmpl
data16
sarl
mov
adc
or
cmc
pop
add
das
inc
hlt
dec
xor
das
xchg
add
fistpll
dec
mov
xchg
jnp
in
jbe
xchg
dec
mov
aad
mov
lahf
mov
mov
inc
test
push
dec
lret
lea
mov
pushf
sbb
stos
loopne
aaa
add
push
int3
shrl
dec
and
loopne
mov
adc
sahf
icebp
inc
lahf
jle
mov
outsl
es
in
aaa
adc
lods
adc
insl
out
mov
dec
in
xor
cmp
add
lret
sahf
int
mov
dec
add
mov
pop
cmp
fwait
and
sahf
lock
sub
sub
mov
mov
cltd
xor
scas
out
ljmp
dec
mov
mov
mov
aad
push
lret
cmpsl
push
xchg
jge
subb
mov
mov
out
mov
andl
loopne
jae
pop
xor
xchg
jg
adc
daa
stos
aad
sahf
lret
insl
push
ret
and
or
divb
sahf
icebp
cmp
es
sub
arpl
int3
mov
outsl
bound
cmpsb
fldl
dec
sarb
in
jecxz,pn
lods
rorl
cwtl
adc
inc
mov
outsb
inc
add
pop
pop
aas
popa
and
test
jl
andl
lock
test
mov
icebp
jnp
fists
inc
popa
cmc
push
addr16
add
jbe
push
push
std
enter
test
or
in
xchg
popa
cmp
sarl
out
or
sbbl
sub
rcl
or
jg
arpl
mulb
push
lret
loopne
clc
dec
clc
pop
mov
lea
mov
nop
mov
sbb
inc
or
icebp
aaa
xor
mov
fistpl
jbe
mov
mov
cmp
xor
pop
jmp
dec
jne
outsl
arpl
mov
lock
jbe
fwait
mov
popf
mov
pop
inc
ds
fisubl
xchg
ljmp
daa
xor
push
push
pop
push
in
mov
dec
lods
ja,pn
mov
mov
add
pop
inc
fdivrl
mov
sub
mov
scas
push
jge
mov
adc
sahf
out
adc
mov
pushf
push
dec
inc
add
add
dec
sar
add
movzbw
ror
sar
sar
and
shl
shl
dec
or
pusha
pop
mov
cmc
mov
bt
shl
dec
shr
sub
jmp
enter
cmpsl
adc
push
push
jecxz
ds
inc
xchg
jg
js
imul
mov
mov
clc
push
xchg
faddl
adc
dec
xchg
push
sbb
imull
sub
add
sbb
out
cmp
sbb
jne
xor
mov
jb
xor
and
out
je
mov
iret
xor
push
into
adc
dec
faddl
gs
repz
cmp
das
jg
test
arpl
xchg
sub
or
sbb
fsts
daa
test
shlb
and
stc
lods
sbb
inc
lods
shlb
icebp
inc
lcall
or
push
sahf
in
sub
in
ds
push
or
pushl
dec
dec
jmp
xchg
ljmp
imull
daa
pop
ja
jl
das
mov
pop
pop
cs
movsb
mov
inc
mov
pop
repz
fwait
jl
cs
test
xchg
out
dec
or
mov
sub
xor
gs
dec
out
daa
lcall
out
addr16
or
adcb
mov
aad
mov
pop
and
xor
mov
cmpsb
shrb
inc
movb
adc
sub
xchg
fnstcw
pusha
inc
dec
es
jge
jge
ljmp
add
in
cli
inc
pop
xlat
lock
repnz
frndint
loopne
repnz
push
dec
scas
push
push
mov
loope
mov
dec
call
jne
or
je
scas
rcrb
mov
xor
leave
push
add
repz
leave
push
jae
imul
xchg
mov
insb
ljmp
xchg
pop
mov
mov
sahf
in
mov
or
pushl
out
scas
push
jb
enter
jp
jnp
sahf
in
sarl
sbb
add
xchg
mov
test
push
ret
out
lahf
dec
dec
sub
sti
test
sub
sahf
in
inc
into
test
jbe
mov
mov
es
push
xchg
mov
and
xchg
test
test
lcall
adc
stos
int
fsts
xchg
push
aaa
and
add
xor
add
jge
mov
inc
cwtl
aad
pop
mov
xchg
daa
mov
mov
aas
icebp
outsl
pop
mov
insb
bound
std
rcll
pop
shll
movb
dec
shl
adc
adc
mov
cli
pop
dec
lods
arpl
cmpsb
movsb
jnp
fstpt
jge
mov
in
adc
sub
daa
xor
mov
mov
addr16
mov
imul
or
popa
sti
push
outsb
iret
shrb
shll
and
fadds
inc
pop
repz
sbb
jb
daa
mov
aam
mov
mov
xor
aad
mov
xchg
int3
les
push
mov
push
movsb
pop
jmp
or
cmp
ror
mov
cmc
sbb
cmp
out
pushf
test
mov
cmp
fsub
sbb
mov
stos
dec
in
rorl
adcl
xchg
mov
rcrb
dec
sbb
fstl
mov
push
xchg
inc
ss
inc
shrb
pusha
sarb
leave
adc
fsubrl
les
xor
push
outsb
mov
and
sub
pop
jae
ret
orl
sahf
jmp
in
mov
sub
popf
jp
mov
sbb
push
fcomi
push
iret
gs
jnp
xchg
std
xor
push
xor
cmp
insl
and
push
adc
ret
adc
das
popa
shrb
xor
pusha
movl
push
pushf
pusha
call
ja
pushf
movl
jmp
cmc
sub
mov
lea
jmp
jle
push
push
jmp
movl
pushf
movb
lea
jmp
insl
fst
lret
jg
xchg
lret
movsb
mov
xor
add
adc
push
repz
xor
cmc
cmp
fdivr
repnz
or
fwait
cmp
add
mov
or
pop
mov
mov
filds
pop
fdecstp
mov
pop
shrb
jb
jno
or
mov
imul
push
xor
test
mov
aas
dec
cmp
add
sbb
push
ss
dec
leave
and
fwait
jge
sbb
dec
cmp
pop
xor
push
dec
fwait
subb
sbb
mov
in
aad
out
nop
lcall
fidivrl
sbbb
ret
addr16
xor
and
add
in
test
push
inc
mov
pop
xor
nop
mov
aaa
movsl
out
in
adc
adc
inc
sbb
sahf
jmp
cld
je
in
xchg
scas
cli
pop
push
ror
pop
dec
stos
hlt
sbb
movsl
dec
xor
sbb
push
and
and
jmp
push
cltd
cmpsb
mov
popa
or
mov
out
stc
push
dec
mov
add
movsb
mov
push
xlat
mov
int
push
jae
inc
jb
cmc
lret
testl
insl
dec
inc
ret
aaa
mov
rolb
cwtl
ja
pop
push
xor
pop
outsl
stos
dec
xor
outsl
std
sub
xchg
xor
adcb
mov
fcoms
xchg
cmp
mov
fisttpll
dec
fstl
inc
pop
popf
cmp
add
dec
sub
shll
fmuls
xor
mov
xchg
lods
pop
js
or
pop
add
xchg
std
inc
push
xchg
cmp
jae
and
add
add
add
addl
mov
xorb
fcomps
rorb
lock
add
lahf
in
aas
jnp
xrelease
mov
data16
pop
xchg
xor
dec
insl
ret
jmp
ret
inc
mov
jmp
shl
sub
add
sbb
xchg
cltd
addr16
cmp
ret
insl
int3
xor
xchg
mov
inc
mov
push
in
loop
popa
ret
pusha
out
ret
push
push
add
and
jp
aaa
push
dec
emms
fs
jl
dec
or
xchg
cs
xchg
push
cmc
jo
addr16
pop
lcall
pop
lods
mov
push
test
ds
enter
je
ret
and
std
or
shll
aas
push
adc
jl
mov
jge
pop
xlat
jmp
push
ficoml
mov
mov
adc
add
in
movsl
imul
push
js
or
mov
int3
call
sbb
cld
cli
xor
fucomi
or
jle
aam
mov
iret
fwait
popf
inc
cmpsb
mov
in
mov
hlt
inc
pop
mov
mov
jle
es
sbb
mov
dec
clc
dec
inc
lods
sbb
outsb
xchg
and
ljmp
aaa
lahf
in
stc
pusha
int3
adc
js
inc
xor
mov
mov
jecxz
xor
fnstcw
in
into
lahf
mov
pop
mov
add
push
pop
add
or
push
cltd
add
cmp
imul
fisubrl
and
inc
pop
cmc
push
pop
loopne
push
mov
and
mov
lods
mov
sahf
dec
and
testb
mov
xor
insb
bnd
dec
adc
shlb
call
inc
cmp
lahf
test
cmp
iret
pop
outsb
aam
adc
repnz
pop
dec
xor
movsb
and
add
lods
adc
repz
pop
in
jb
sub
insb
mov
jg
pop
insl
push
mov
scas
arpl
adc
or
add
dec
nop
not
fstpt
sub
mov
pop
mov
jnp
popl
and
es
pop
and
dec
mov
adc
rcrb
xchg
cwtl
mov
add
roll
stos
mov
and
aad
cwtl
sub
adc
inc
jo
add
sub
dec
pop
mov
xor
pushf
call
pushf
jmp
pusha
cmc
shr
bt
and
clc
clc
jmp
fbld
call
adc
or
push
mov
sahf
push
movsb
movsl
in
mov
mov
fmul
push
push
dec
jle
into
test
sbb
mov
mov
mov
push
lret
sbb
mov
push
cmp
mov
popf
jno
dec
es
pop
test
pop
call
jmp
lar
insb
pop
repz
add
pop
xor
add
cmp
addr16
mov
enter
stc
lods
xor
add
cld
xor
dec
negb
dec
adc
ss
cmp
sahf
in
std
mov
add
sti
popf
loopne
mov
adc
xchg
dec
push
jne
sbb
aam
into
cmp
adc
inc
cli
jae
jle
iret
cmp
loopne
mov
das
mov
adc
dec
mov
fwait
adc
and
sbb
jecxz
xor
sbb
adc
lret
lahf
sbb
pop
sbb
fidivl
out
sahf
in
jne
call
push
jmp
daa
cmp
sub
push
inc
xchg
sub
jns
or
xor
movsb
mov
stc
gs
jno
decb
mov
dec
loope
sub
ficoms
por
clc
rcll
out
add
jg
into
int
ret
jnp
dec
decb
pop
arpl
push
sbb
scas
addr16
sub
xor
lock
test
add
xchg
adc
arpl
int
push
add
int
mov
xchg
pop
lods
add
lock
cmp
inc
mov
pop
jb
pop
leave
inc
stos
pop
sbb
xchg
sub
sbb
lods
outsb
les
inc
aaa
and
mov
loope
push
pop
cmp
mov
xlat
jns
dec
stos
xchg
jns
loopne
and
ret
je
pusha
add
rorb
fcomp
jns
call
fistps
arpl
and
sti
mov
mov
mov
icebp
mov
mov
adc
adc
mov
cmp
movl
push
mov
pusha
push
lea
jmp
pushf
movl
pusha
mov
lea
jmp
jmp
or
mov
iret
popf
addb
addl
push
push
aad
jge
jle
mov
sub
ljmp
mov
mov
xor
cmp
inc
cwtl
outsb
inc
mov
stos
pushf
or
adc
xor
adc
cmp
mov
jbe
xor
or
dec
ja
std
xchg
mov
mov
and
sahf
stos
stos
sbb
inc
jp
sarl
outsl
inc
push
imul
mov
push
xor
xor
cmp
pushf
bt
test
pushl
movb
jmp
pusha
jmp
jmp
mov
movb
add
jmp
mov
jmp
fucomi
int3
int3
int3
int3
jmp
mov
shl
pop
clc
mov
jmp
inc
lea
add
pushf
mov
rcr
setl
add
not
jmp
mov
mov
push
lea
jmp
mov
mov
pusha
push
lea
jmp
mov
mov
call
pushf
pusha
test
sub
movb
jmp
pushf
mov
pusha
mov
mov
call
pushf
popl
pushf
call
call
pushf
jmp
jmp
int3
int3
int3
jmp
mov
mov
pushl
pushf
call
mov
push
pushf
push
lea
jmp
dec
add
movzbl
bt
mov
sbb
sar
and
mov
clc
add
push
cmp
cmc
pushf
shld
push
pushl
pushf
movl
mov
jmp
mov
call
xchg
ror
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
pushf
pusha
mov
pusha
push
mov
mov
push
movb
push
mov
pushf
push
push
mov
mov
jmp
lea
jne
shr
setl
lea
bt
mov
pushf
cmp
test
bt
and
bt
call
ror
pusha
mov
bt
mov
cmp
sub
pusha
clc
shl
call
pushf
mov
push
pushf
jmp
call
and
push
add
pusha
pushf
popl
pushf
mov
mov
pushf
pushf
call
pushl
pusha
jmp
jmp
sbb
jmp
add
mov
bt
lea
push
call
pushf
movb
mov
call
mov
movb
mov
mov
call
mov
movw
mov
pushl
mov
lea
jmp
push
movb
push
mov
movw
lea
jmp
pushl
pushf
xor
clc
xchg
call
mov
mov
push
pushl
pushl
mov
pushf
jmp
pusha
mov
jmp
movb
pushf
pushl
mov
jmp
pushl
popl
pushf
movw
movb
lea
jmp
mov
mov
push
divl
pusha
mov
call
movw
pushf
dec
push
pushl
pushf
call
call
imul
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
cbtw
cmc
mov
push
cmc
push
jmp
pusha
pushl
popl
pusha
pushf
pushf
movb
lea
jmp
xchg
lea
pusha
mov
movb
jmp
jmp
aad
btc
aaa
daa
mov
xor
mov
cmc
stc
add
jmp
movb
pushl
inc
stc
ror
mov
clc
push
add
stc
pushl
cmc
call
mov
pushf
pusha
lea
jmp
mov
movb
movw
jmp
mov
bswap
setg
jnp
mov
jmp
movl
mov
pushf
mov
mov
pushf
popl
jmp
mov
jmp
jmp
call
pusha
mov
movb
call
pushf
dec
lea
js
push
sub
jmp
pushf
popl
pushf
call
mov
pushf
pusha
mov
mov
mov
mov
push
lea
jmp
lea
jnp
pushf
pushf
popl
pusha
pushl
popl
push
lea
jmp
jmp
call
mov
mov
movl
movb
lea
jmp
ret
add
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
int3
int3
int3
int3
int3
int3
int3
int3
pushf
pushf
popl
push
mov
lea
jnp
pushf
mov
pushf
pusha
mov
pusha
lea
jmp
sub
rdtsc
stc
sub
jns
pushf
push
mov
mov
pusha
mov
push
lea
jmp
mov
call
pushf
mov
pusha
lea
jmp
sub
mov
shr
mov
pusha
stc
mov
add
lea
jae
push
pusha
pusha
mov
pushl
lea
jmp
pushf
pushf
mov
mov
pushf
popl
push
jmp
pushf
pushf
mov
movl
mov
jmp
pushl
popl
push
push
push
pusha
lea
jmp
jmp
mov
mov
pusha
pushl
pushl
call
jmp
jmp
push
pusha
pushl
mov
mov
pusha
mov
pushl
movb
jmp
cmp
pushf
add
clc
cmp
pusha
cmc
add
movw
rol
test
pusha
cmp
neg
clc
stc
add
pushf
call
call
call
mov
mov
push
pushl
lea
jmp
call
pusha
jmp
pushl
mov
pushf
pushl
popl
pushl
push
movb
lea
jmp
pushf
lea
jne
jle
pusha
push
mov
mov
movb
pusha
lea
jmp
pushf
popl
jmp
mov
pushf
mov
pushf
push
pushf
lea
jmp
pushf
pusha
mov
movb
pushf
push
mov
push
mov
jmp
mov
pushf
pushf
popl
lea
jns
pushf
pushf
pusha
mov
movb
push
jmp
push
mov
jno
push
pusha
pushf
mov
pusha
mov
movb
pushf
mov
call
sub
pushl
push
mov
pushl
mov
movl
lea
jmp
clc
sub
jmp
mov
call
pushf
jmp
call
lea
cpuid
jmp
push
mov
call
lods
scas
lods
cmc
int3
int3
int3
int3
int3
int3
jmp
stc
shl
mov
push
push
mov
mov
call
btc
ror
sar
btc
call
mov
jmp
pushl
pushl
pushf
popl
push
pushl
popl
pushf
push
movw
lea
jmp
bsr
sar
mov
rol
add
jmp
pushf
mov
call
setno
daa
mov
cmp
mov
mov
test
jmp
sub
pushf
mov
lea
bswap
pushf
lea
pushf
call
sub
neg
mov
sbb
mov
btr
bt
bsf
add
xadd
mov
push
neg
shrd
add
push
movb
rol
sub
rcr
add
inc
add
or
bswap
not
rcl
push
or
call
jmp
mov
pushf
call
mov
pushf
mov
call
pushf
call
pushl
jmp
mov
pushf
popl
jmp
movb
pushl
mov
jmp
pushl
popl
mov
push
mov
lea
jmp
cmc
test
add
pushf
bt
sub
movw
jmp
jmp
pushf
pushf
mov
mov
movb
pusha
mov
lea
js
push
pusha
pusha
mov
pushf
mov
push
mov
movw
pushf
mov
jmp
cmc
mul
call
movw
clc
pushf
cwtl
cmc
bt
sub
jmp
mov
pusha
movl
mov
mov
jmp
movb
mov
push
mov
lea
jmp
pushf
mov
pusha
movw
mov
mov
lea
jmp
pusha
pushl
pushl
popl
movw
pushf
pushf
lea
jmp
call
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jge
push
push
pushf
mov
movb
call
jmp
pushf
mov
push
call
pushf
movb
mov
call
movb
mov
pushl
movb
call
pushl
mov
mov
pusha
pushl
pushf
lea
jmp
test
stc
cmp
sub
call
add
push
pushf
popl
pushf
jmp
mov
pusha
jmp
mov
pushf
movb
movb
movb
lea
jmp
movb
pushf
popl
push
pushf
mov
push
mov
pushl
jmp
push
call
call
stc
mov
add
pushf
pushf
movw
mov
pushf
push
movb
pushl
ret
mov
pushf
call
call
jmp
movw
pushf
popl
jmp
bsr
or
add
add
not
test
adc
inc
bswap
add
setb
rcl
clc
movzbl
btc
mov
pushf
rol
call
mov
mov
push
mov
pushf
lea
jmp
mov
movw
mov
pushf
mov
movb
lea
jmp
sbb
bts
aaa
mov
cmp
bts
mov
push
stc
add
pushl
pusha
mov
movl
mov
pushl
pushf
lea
jmp
pusha
mov
pushf
pusha
lea
jb
push
push
call
stc
shl
pushf
shr
jmp
call
inc
push
pushl
add
pushf
bt
clc
sub
jmp
pushf
pushl
popl
movw
push
lea
jmp
pusha
push
mov
push
push
pushf
movw
mov
jmp
pushl
popl
pushf
pushf
movl
lea
jmp
pushl
popl
pushf
movb
lea
jmp
mov
pushf
mov
mov
lea
jmp
mov
call
jmp
int3
push
pushf
not
push
bt
rol
mov
pushf
jmp
mov
push
pushl
mov
lea
jmp
pushl
popl
pushf
movb
pushf
movb
lea
jmp
dec
cmc
clc
sub
pushf
mov
movl
movw
lea
jmp
mov
call
bt
pushf
cmp
mov
stc
pushf
or
call
xor
movw
pushf
jmp
pushf
pushf
popl
push
pushl
mov
call
cwtl
mov
push
movw
call
mov
call
lea
inc
call
shr
push
pushf
push
pushf
mov
pushf
pushf
popl
pushf
pushl
popl
push
mov
movb
lea
jmp
pushf
pushf
call
mov
int3
int3
int3
int3
int3
pushl
popl
pusha
lea
jmp
shl
movzbl
push
pushf
pushf
test
add
pushl
add
pushf
bt
movb
jmp
mov
pushf
mov
lea
jmp
mov
movb
push
lea
jmp
mov
pusha
movb
lea
jmp
movzbw
mov
add
mov
stc
bt
clc
clc
sub
jmp
pushf
mov
jmp
pushf
call
mov
pushf
mov
lea
je
pusha
mov
movb
jmp
call
not
push
not
bt
cmc
stc
and
movw
call
mov
mov
call
lea
ja
shl
cmp
cmc
mov
daa
neg
lea
shrd
sub
shr
daa
push
lea
shrd
sub
and
not
jmp
call
jmp
int3
int3
int3
int3
int3
jmp
push
cbtw
push
cwtl
mov
jmp
push
call
mov
lea
ja
push
mov
pushf
pushf
popl
mov
movb
pushf
mov
jmp
mov
push
pusha
lea
jmp
push
pushf
popl
pushl
jmp
shl
mov
cmc
shl
mov
pushf
add
pushf
pushf
mov
mov
movw
lea
jmp
mov
pushf
pusha
mov
mov
mov
pushf
push
call
stc
add
bt
test
stc
xor
call
call
mov
pushf
pushf
pushf
lea
jmp
pushf
popl
mov
mov
pusha
push
pushl
popl
push
push
movb
lea
jmp
pushf
jmp
rcl
ror
push
movzbl
pusha
ror
setno
add
btc
shrd
adc
clc
add
movzbw
dec
pop
rol
sete
rol
shl
movb
neg
neg
add
cmp
add
lea
push
movzbl
bt
jmp
lea
jge
pushf
cbtw
pusha
pushf
mov
mov
cwtl
call
mov
push
pushf
jmp
shl
bswap
movzbl
xor
add
not
add
bswap
not
setns
rol
stc
sub
jmp
jmp
pushl
popl
pusha
pushf
push
lea
jmp
mov
pushl
lea
jmp
pushf
pusha
call
call
pusha
mov
mov
pusha
lea
jmp
mov
mov
pushf
lea
jmp
pushf
popl
call
call
push
mov
mov
call
pusha
mov
call
test
mov
jmp
mov
pushf
pushf
pusha
pushf
lea
jmp
push
lea
jne
call
call
jmp
jle
decb
mov
xor
cmp
sete
mov
ret
mov
mov
jmp
mov
mov
movb
pushf
mov
mov
pushf
mov
mov
push
mov
movw
push
mov
push
pushf
call
dec
mov
btc
pushf
call
mov
jmp
push
cli
int3
int3
jmp
cmp
bt
pushl
popf
mov
mov
lea
jmp
cmp
mov
clc
push
add
call
pusha
mov
pushl
movb
mov
movw
pushf
push
mov
pushf
lea
jmp
or
int3
int3
int3
int3
int3
int3
mov
sub
je
sub
jne
mov
push
call
add
mov
ret
call
mov
ret
jmp
push
pushf
push
pushf
call
call
pusha
pushf
pushl
popl
push
lea
jmp
push
mov
pushf
jmp
pushf
popl
mov
mov
pushf
jmp
mov
bt
or
cmp
clc
call
call
push
cmp
add
movb
mov
jmp
call
mov
jmp
inc
jmp
xchg
call
call
jmp
dec
xor
int3
int3
int3
int3
int3
int3
int3
jmp
push
pusha
pushf
popl
push
mov
pushf
pushl
lea
jo
pusha
mov
pusha
pushl
mov
push
movb
pushl
lea
jmp
push
call
xchg
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
pusha
lea
jb
mov
pusha
mov
pushf
call
pusha
not
not
mov
movsbw
jmp
rep
shrd
stc
mov
add
test
shrd
test
mov
cmp
test
pushl
popf
mov
pushl
pushf
lea
jmp
jmp
movw
call
mov
jmp
imul
int3
int3
int3
int3
int3
jmp
rcr
mov
clc
shrd
pop
bt
aam
call
mov
mov
push
mov
jmp
pushl
mov
mov
pushf
popl
pushf
pushf
mov
pushf
jmp
shrd
jmp
imul
jmp
jmp
mov
movb
lea
jmp
mov
call
rol
bt
neg
movb
call
jmp
call
pushf
pushf
mov
mov
jmp
mov
mov
pushf
mov
push
pushf
call
jmp
movl
mov
mov
call
jmp
mov
pushf
lea
jmp
pushl
mov
sub
pusha
jmp
ret
nop
adc
int3
int3
int3
int3
jmp
mov
movsbw
stc
cmp
mov
ror
test
mov
cmp
pushf
sub
test
call
rcl
test
mov
pusha
bt
sub
lea
jp
push
mov
pushf
mov
lea
jmp
call
call
push
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
mov
pushf
popl
push
call
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
jmp
pushl
pusha
lea
cld
push
pushl
std
mov
movzbl
pushf
mov
pushf
cld
movb
pushf
movb
call
mov
movb
pusha
mov
jmp
pushl
popl
movb
lea
jmp
cmc
pusha
bt
sub
test
cmc
bt
pusha
cmpl
pushf
pushf
mov
call
movb
mov
pushf
pushf
lea
jmp
lea
cld
mov
pushl
mov
cld
jmp
xchg
jmp
shld
pusha
not
clc
mov
push
movb
pusha
test
add
push
push
pushl
lea
jmp
jmp
mov
push
mov
jmp
setb
mov
call
mov
pushf
lea
jmp
push
mov
pusha
pushf
lea
jmp
mov
push
call
mov
jmp
mov
push
pushf
push
pushf
popl
call
pushf
jmp
push
pushf
call
xchg
push
int3
int3
jmp
pushf
popl
pushf
pushl
popl
mov
push
mov
lea
jmp
sub
ja
mov
cmc
or
jmp
mov
mov
mov
mov
pushf
mov
mov
call
pushl
popl
pushf
pushf
movb
lea
jmp
jmp
stc
pushf
call
pushl
mov
jmp
pushf
mov
call
add
pop
stc
movzbl
btc
movb
bswap
movsbl
mov
mov
pushl
pusha
clc
rol
clc
add
call
lea
jne
call
call
pushf
mov
movb
movb
mov
movw
mov
pusha
jmp
pushf
mov
call
push
pushf
pushf
popl
push
pushl
pushf
jmp
mov
call
mov
mov
lea
jmp
call
mov
jmp
call
sub
jmp
xchg
sar
aaa
rcr
mov
pusha
and
clc
pushf
mov
pushl
cmc
push
cmp
sub
bt
bt
shr
push
mov
push
pushf
popl
jmp
mov
push
jmp
xchg
push
lea
jle
pusha
mov
not
bswap
pusha
call
cmp
movzbw
call
jmp
call
jge
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
shr
daa
seta
btc
mov
cmp
test
cmp
stc
bswap
cmc
test
stc
lea
clc
cmc
push
add
pusha
push
push
pushf
inc
test
neg
jmp
jmp
lea
jb
push
pushl
mov
pusha
pushf
mov
push
lea
jmp
jmp
pushf
popl
mov
call
xchg
rdtsc
push
cltd
mov
mov
call
mov
pusha
mov
mov
lea
jmp
mov
jmp
jmp
cbtw
pusha
pushf
jmp
pushf
call
jmp
aad
not
notl
bsr
movzbw
mov
call
shr
and
pusha
mov
cmc
call
mov
call
pushl
pusha
mov
call
call
call
pusha
call
pushl
call
movw
call
mov
mov
call
pushf
pushf
jmp
pushf
call
movl
push
pushf
popl
push
jmp
push
int3
int3
jmp
aaa
mov
pushf
sbb
rcl
shl
mov
ror
test
mov
bt
call
movl
pushf
pushl
popl
movb
mov
mov
mov
lea
jmp
pushf
pushf
mov
pushf
pushf
pushf
lea
jmp
inc
lea
cmp
pushf
clc
cmp
call
call
mov
int3
jmp
daa
dec
btc
shl
mov
ror
cmc
add
sbb
mov
pusha
movw
mov
pusha
sub
stc
cmc
stc
pushf
mul
call
aas
and
dec
movzww
clc
pushf
clc
pusha
xchg
movb
movb
sub
lea
jns
clc
bt
clc
not
pushf
lea
jne
rol
call
sbb
push
call
movw
pushl
popl
mov
lea
jmp
mov
movb
mov
jmp
pushl
cmp
xor
add
setae
call
mov
pushf
mov
push
mov
lea
jmp
mov
stc
jmp
call
mov
pushf
popl
call
mov
call
mov
call
mov
cmp
sub
jmp
pushl
popl
push
pushf
lea
jmp
call
rcl
shrd
and
mov
pushf
add
call
push
popa
lea
mov
push
call
jmp
call
cmc
pushl
stc
stc
push
pusha
add
pushf
std
pushf
cmc
pushl
popf
movb
lea
jmp
jmp
lea
je
push
mov
push
pushf
popl
call
call
call
pushf
push
mov
call
call
pusha
pushf
popl
pushf
pushl
jmp
mov
movb
mov
jmp
jmp
call
test
push
ja
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
mov
mov
jmp
push
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
mov
movb
mov
movb
lea
jmp
pushf
mov
pushf
pushl
jmp
sub
pusha
call
jmp
xor
add
dec
test
clc
sub
test
clc
pushf
add
cmp
pusha
sub
jg
cmp
sub
call
bswap
jmp
test
lea
lea
je
cmc
clc
sub
cmc
xchg
cmp
cmp
push
push
cmc
clc
sub
pusha
call
mov
pushf
lea
jmp
push
jmp
int3
int3
int3
int3
int3
int3
int3
jmp
mov
pushf
movb
movl
movb
lea
jmp
mov
pushf
pushf
pushf
mov
pushl
call
jmp
xchg
push
into
int3
int3
jmp
push
mov
movw
pushl
movb
push
lea
jmp
mov
mov
push
mov
push
lea
pushf
pusha
jmp
pushf
mov
pushf
pushf
lea
jmp
cmp
call
jmp
int3
jmp
aad
mov
setnp
rcr
rol
btr
mov
btc
std
setbe
bt
mov
bsr
mov
std
neg
pushl
popf
lea
jle
movzbl
pushf
not
mov
pushl
mov
pushf
mov
not
bswap
bswap
pop
mov
pushf
mov
pusha
push
mov
movb
pushl
ret
push
mov
pushf
lea
jmp
and
mov
call
pushf
mov
mov
pushf
mov
pushf
push
push
pushf
popl
pushl
lea
jg
push
push
mov
push
mov
push
lea
jmp
movb
dec
cmp
clc
sub
call
movb
jmp
pusha
jmp
mov
call
dec
cmc
sub
jmp
push
mov
jmp
sub
pusha
test
bt
add
mov
mov
jmp
clc
sub
mov
push
pushf
pushf
mov
mov
movw
push
lea
jmp
mov
pushf
pushf
mov
movb
pushl
ret
pushf
call
int3
int3
int3
int3
int3
int3
int3
jmp
pusha
cmc
bswap
rol
not
sar
inc
lea
shld
sar
stc
sar
sub
xadd
shrd
pusha
shl
lea
push
btc
shr
movsbw
mov
shrd
add
btr
mov
cmc
stc
add
ror
movsbl
rol
not
ror
add
bt
jmp
mov
jmp
jmp
pushf
shrd
bsr
bts
not
pushf
bts
cmc
shl
neg
bt
jmp
not
lahf
aaa
setge
mov
ror
sub
rcl
mov
test
add
push
pusha
pushf
mov
pushf
lea
jmp
pushf
stc
rol
test
mov
cmc
neg
pusha
call
call
jmp
lea
int3
int3
int3
jmp
sub
test
pusha
pushf
mov
bt
call
push
mov
pushf
pushf
pushl
mov
lea
jmp
push
pushf
popl
push
jmp
cmc
aad
mov
sub
aas
cbtw
movsbw
mov
not
or
bsf
mov
stc
sub
pusha
div
call
lea
js
pushf
mov
push
pushf
pushf
push
mov
pusha
call
bsr
mov
neg
sub
js
push
add
pusha
sete
jmp
jmp
mov
pushl
pusha
mov
call
cwtl
jmp
pushf
mov
push
mov
pushf
pushf
popl
call
lea
je
pushf
pushf
pushf
jmp
jmp
push
pusha
mov
pushl
pushf
pushf
lea
jmp
call
mov
movsb
and
add
add
and
call
mov
cltd
mov
cwtl
clc
pushf
aaa
mov
clc
sub
clc
pushf
pusha
imul
push
call
lea
jne
clc
xor
jmp
pushl
pushf
mov
pushf
mov
movw
lea
je
pusha
pushf
pushf
popl
call
test
rcl
jae
mov
pusha
stc
mov
add
movw
mov
jmp
pushf
mov
pushf
jmp
mov
call
call
call
pusha
jmp
mov
setg
bswap
movb
mov
pushf
pushl
mov
pushl
ret
in
imul
add
pusha
cmp
add
cmp
mov
sub
stc
add
call
mov
mov
pushf
call
clc
sub
call
jmp
cwtl
bswap
mov
pusha
call
push
pushf
push
pushf
popl
call
pushf
push
movw
mov
movb
pushl
pushf
popl
jmp
jmp
add
neg
cmp
add
mov
shl
shl
mov
push
cmp
sub
cmc
shr
pushf
push
pushf
mov
pushf
pushf
pusha
movb
pushf
popl
lea
jge
popl
push
pushf
lea
jmp
test
jmp
pusha
mov
pushf
mov
pushf
mov
call
call
sar
cmp
movzbl
push
cmc
cmp
add
clc
pusha
test
cmc
add
clc
clc
rol
cmp
cmp
pushf
sub
cmp
add
bt
cmc
push
mov
cmc
pushl
cmc
mov
add
clc
movb
sub
push
pushl
pushf
push
mov
mov
lea
jmp
push
pushf
popl
jmp
pusha
pusha
mov
call
pushf
mov
jmp
pushl
pushl
mov
call
mov
push
pushf
mov
pushl
jmp
push
sub
push
test
cwtl
push
jmp
pushf
mov
pushf
pushl
movw
pushf
mov
push
pushf
call
bt
mov
shr
mov
sub
mov
call
mov
pusha
mov
jmp
call
push
mov
pushf
pusha
call
pusha
pusha
call
jmp
sete
lea
aas
push
mov
sar
pushf
mov
cmc
pusha
push
add
pushf
pushf
pushf
mov
pushf
lea
jmp
pusha
mov
mov
push
pushf
lea
je
pushf
jmp
pusha
pusha
mov
movzbw
bswap
setno
movsbw
mov
xchg
push
seto
mov
not
movzbw
pop
mov
setae
setle
mov
xchg
push
movzbl
pushf
popl
push
clc
bswap
movzbw
mov
pushf
mov
rol
setb
btr
mov
lea
cmc
cmc
pushl
not
mov
pushf
pop
push
not
mov
btr
mov
rol
pusha
rcr
not
pusha
bts
xchg
lea
jbe
rol
sub
cmc
call
pushf
popl
push
movb
push
mov
mov
pushf
pushl
mov
mov
jmp
pushf
popl
movb
pushf
call
pushf
call
sar
cmp
rol
mov
cmc
call
stc
rol
push
mov
call
mov
call
call
call
inc
pop
int3
int3
int3
int3
int3
jmp
push
movl
push
pushf
movl
mov
pushf
pushf
pushf
lea
jmp
movb
movw
add
jmp
pushf
movl
call
movsbw
xchg
rdtsc
push
lea
xchg
mov
pop
movw
lea
call
jmp
mov
movzbw
mov
call
push
dec
mov
pushf
lea
jmp
pushl
jmp
pusha
movb
pushf
movl
jmp
movl
call
movl
jmp
movl
pusha
lea
jmp
jmp
int3
int3
int3
jmp
lea
je
movsbw
mov
cmp
cmp
movl
stc
mov
bt
stc
stc
pushf
test
call
pusha
mov
pushf
mov
pusha
call
jae
push
movl
push
movl
pusha
lea
jmp
pusha
call
test
add
clc
and
jmp
jmp
xor
add
lea
pop
xor
mov
add
jmp
shr
movzwl
cmc
neg
adc
sar
mov
push
pushf
mov
call
movl
mov
lea
jmp
pusha
jmp
mov
call
int3
int3
int3
int3
int3
jmp
dec
test
sub
jmp
call
call
lea
add
mov
adc
inc
jge
test
push
lret
xor
and
scas
xor
jl
mov
pop
ljmp
push
int
pop
pop
movsb
bound
jecxz
adc
cmp
pop
aas
push
sbb
jmp
lods
cmp
or
sbb
push
mov
hlt
repnz
mov
inc
cmp
push
lods
sub
outsb
push
sub
cs
mov
jg
sahf
mov
daa
mov
cmp
pusha
mov
add
sbb
in
mov
pusha
test
ror
shl
mov
pusha
cmc
shl
mov
add
stc
sub
xor
pushl
dec
movzwl
rcl
rol
bts
add
rcr
movsbl
shl
pop
movzbl
pop
test
shr
mov
test
mov
or
ror
shl
bts
shl
add
stc
mov
cmc
jmp
cmpsl
pop
mov
pop
ficoms
test
xor
scas
push
inc
in
push
and
js
sahf
or
insb
aas
lock
fsubrs
mov
pop
loope
cli
cmp
push
cmp
aas
xchg
subl
pop
inc
push
mov
aad
out
lret
xor
int3
lret
add
arpl
in
adc
adc
sub
nop
div
pop
movsb
loope
jne
or
es
call
dec
out
xchg
mov
xchg
xor
mov
or
pop
repz
inc
pop
inc
cmp
xchg
fisubrs
repz
xchg
mov
pop
pushf
movl
push
mov
movl
pushf
lea
jmp
mov
add
clc
test
pushf
cmp
pushf
pusha
lea
jne
call
cmp
call
sar
movsbl
btr
btr
mov
bt
shl
sub
shr
stc
add
pushf
inc
jmp
pusha
movl
movb
mov
pushf
pushl
movl
movb
push
push
lea
jmp
xor
call
add
movb
pushf
jmp
pusha
movl
pushf
lea
jmp
jmp
int3
int3
int3
jmp
iret
cs
cltd
jp
scas
lahf
loope
and
int
jae
mov
sub
lock
inc
leave
sub
insb
cmp
arpl
std
sub
mov
inc
and
dec
add
frstor
insb
lock
inc
add
mov
cmpsb
dec
add
cmp
inc
mov
cld
andb
hlt
mov
idivl
jnp
repnz
ljmp
mov
fadd
inc
shl
iret
gs
jle
mov
in
lods
dec
push
out
cs
cmp
sti
fwait
sbbb
shr
sbb
pop
mov
xchg
pop
pop
pop
cwtl
in
sbb
or
jp
pusha
addr16
pop
cmp
fwait
fs
shlb
je
jp
data16
lock
jbe
xlat
jmp
push
out
shlb
or
lret
inc
cmp
popl
xchg
lahf
clc
adc
jns
jbe
sbb
push
movsb
sbb
test
cli
mov
clc
push
stos
int3
mov
mov
push
clc
push
sahf
push
out
pop
std
out
out
ret
fdivl
ljmp
scas
aam
mov
add
push
adc
jg
jbe
orb
jecxz
push
sub
in
mov
xor
notb
mov
inc
enter
mov
xchg
inc
nop
dec
mov
sbb
cwtl
lcall
fidivl
sahf
mov
or
jl
mov
lret
and
arpl
std
iret
sti
xor
mov
cmp
call
jae
pop
and
pop
xor
cwtl
pop
cmp
jmp
mov
mov
lcall
stos
push
inc
lods
test
jnp
outsb
scas
push
insl
aaa
jo
leave
or
js
mov
shll
sahf
mov
incl
movsbl
lea
inc
movsbw
mov
pop
shl
bts
mov
shrd
btc
btc
rol
shr
test
neg
add
add
sub
mov
btc
shl
and
cmc
lea
mov
test
shr
pusha
movb
jmp
push
mov
mov
call
pusha
mov
jmp
xor
stc
cmp
jmp
pushf
pusha
movl
pushf
pusha
jmp
jmp
jmp
jmp
pop
lea
xor
sbb
or
lock
inc
out
je
xor
sbb
mov
movsl
jne
cwtl
lcall
add
aas
sub
jns
sub
and
pop
push
jae
push
loope
jns
idivl
aad
cwtl
cltd
out
popa
gs
jo
ljmp
lea
lcall
push
pop
cmpsb
je
int3
test
stc
jo
aaa
arpl
cld
sbb
pop
fwait
lock
lret
nopl
pop
es
mov
movsb
lahf
jne
cld
and
fstpt
lcall
xchg
insl
mov
pop
out
and
xchg
test
sbb
lods
xchg
shrl
std
add
and
hlt
rclb
dec
xchg
imul
sub
jbe
sbb
insb
mov
jno
mov
mov
mov
jmp
stos
cmpsb
leave
in
pop
fs
sub
test
popf
xlat
daa
fidivrl
mov
push
enter
bound
lods
stos
loopne
mov
xor
setb
mov
pusha
pusha
jp
mov
sahf
xchg
xchg
and
lods
icebp
outsb
cmp
sub
imulb
sub
xchg
cmpb
inc
test
mov
cmpsl
test
scas
mov
outsb
es
xor
les
adc
xlat
mov
jl
xor
adc
outsb
es
outsb
jbe
bound
es
mov
add
inc
sahf
xchg
enter
in
imul
push
sahf
lds
je
orl
cli
scas
out
iret
aas
imul
loop
sahf
test
add
in
ja
lcall
jmp
pusha
movb
push
movl
jmp
movl
push
lea
jmp
push
pusha
push
pushf
push
lea
jmp
call
mov
cmc
clc
and
cmp
stc
clc
stc
shr
movb
pushf
cmp
jmp
test
add
stc
bt
xor
call
pushl
movl
pushf
mov
lea
jmp
call
out
adc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
dec
sbb
out
lds
push
jo
xchg
jnp
sub
lds
jge
and
inc
and
insl
add
hlt
inc
push
jae
jbe
push
movsb
and
jne
mov
mov
mov
add
lcall
dec
mov
pop
insl
mov
adc
push
cmc
jecxz
mov
sbb
shr
popf
or
or
lods
and
jp
lods
jb
sbb
mov
jo
scas
fidivrs
fcmovu
jo
add
ret
sub
bound
call
and
xor
jmp
call
sbb
push
push
mov
mov
mov
cmc
sbb
out
aam
mov
pop
mov
pop
xorb
push
or
fisubrl
fiaddl
rclb
inc
cmpsb
stc
pop
add
add
mov
int
push
and
outsb
mov
andb
xlat
repnz
or
xchg
pfadd
adcl
fs
dec
xchg
pop
test
sahf
adc
jb
cmp
movb
pusha
movl
jmp
cmp
cmc
call
movl
call
push
movl
jmp
sub
stc
push
jmp
pushf
movl
jge
push
movl
push
push
lea
jmp
pushl
and
xchg
shld
movzbw
rcr
add
shl
neg
cmp
neg
mov
rol
mov
stc
rcl
lea
rcr
shld
mov
btc
pusha
mov
pushf
movb
clc
shr
cmc
push
shr
cmp
jmp
cmc
movzwl
jmp
aam
in
dec
add
clc
scas
mov
or
clc
scas
push
repz
push
and
clc
lods
out
cmp
clc
xchg
pop
out
aas
roll
clc
and
insl
orb
aas
negb
mov
push
or
shrb
adc
testb
and
push
mov
idivb
pop
sahf
dec
mov
push
add
push
mov
out
shl
sbb
mov
out
aas
out
rol
test
inc
xchg
inc
aas
out
rclb
es
and
iret
out
sarb
loope
out
iret
xchg
cwtl
std
gs
aas
out
into
icebp
sub
out
int
or
aas
out
int
daa
xchg
lret
aas
out
int3
jl
lds
ret
int3
cmp
pop
iret
pop
lret
leave
and
inc
add
push
aas
out
pop
jb
sub
out
cli
outsb
aas
out
xor
lgs
out
jmp
subb
imul
ret
jg
jge
leave
and
out
ret
mov
out
shrl
into
dec
aas
aas
out
mov
mov
outsb
push
and
cmp
aas
out
mov
std
fwait
aas
out
mov
out
aas
out
mov
pop
jnp
out
mov
imul
repz
or
aas
out
mov
and
jno
hlt
rcll
dec
aas
add
sbb
out
mov
popf
xchg
aas
out
mov
jge
aas
out
mov
mov
aas
out
mov
jle
adc
mov
mov
aas
out
mov
cwtl
and
mov
aas
out
mov
jne
outsb
jae
aas
out
mov
dec
mov
out
mov
sahf
mov
aaa
sbb
adc
cwtl
mov
out
mov
xor
inc
mov
xor
popa
dec
stos
aas
out
mov
cmp
push
cmp
out
mov
ss
out
mov
pop
mov
ficoms
mov
jne
mov
mov
repnz
mov
aas
out
scas
push
adc
insb
popa
sti
aas
out
scas
ss
ja
ljmp
je
or
out
stos
pop
or
out
stos
push
mov
aas
out
stos
xchg
or
dec
jne
aas
out
stos
xchg
aas
out
lods
push
cli
call
out
lods
push
stc
fdivl
scas
push
shrb
mov
fisubrl
mov
sti
fisubl
inc
jge
out
mov
and
sti
or
mov
outsb
movsl
aas
out
ret
mov
aas
out
ret
ss
addr16
jle
add
enter
out
in
mov
out
push
clc
bound
lret
push
cld
xor
outsb
lahf
aas
out
lret
icebp
jge
ss
out
int
cli
iret
cltd
dec
inc
aas
out
into
sar
test
testb
stos
cmp
inc
add
and
daa
aas
testb
inc
inc
and
push
stc
push
dec
test
aas
testb
push
lods
dec
xor
clc
and
testl
sahf
pop
xchg
lret
lock
add
sti
cmpl
popf
xchg
or
shlb
xchg
cmpsb
popa
mov
inc
sub
loop
clc
dec
mov
rcrl
jae
cmp
dec
and
jecxz
cmp
jo
cltd
pushf
jge
xchg
sbb
test
aas
sbb
fldcw
clc
repz
xor
sub
push
xor
fsts
jno
fisubl
mov
sbb
inc
mov
test
pusha
add
cli
frstor
sbb
push
mov
sbbb
or
sub
xchg
and
pop
insl
xchg
fimull
sbb
neg
pop
add
xor
push
mov
mov
lss
insl
mov
and
js
jnp
nop
lds
inc
or
into
stos
sub
rorl
sti
cli
xor
test
jo
ret
outsb
mov
sbb
xor
pop
cmpsl
inc
pop
addl
ds
rorb
test
pop
xor
cli
repnz
cmp
dec
fwait
orl
push
xorb
xor
nop
aad
aam
pminsw
mov
xor
adc
cltd
arpl
dec
fwait
mov
in
pop
mov
fistpll
fdiv
mov
jge
sub
sub
mov
enter
lock
out
jbe
dec
repnz
icebp
push
aaa
popf
or
sbb
adc
mov
sub
push
insl
adc
pop
xor
cmc
or
mov
pop
sub
sbb
bound
mov
arpl
mov
mov
push
das
cmp
shlb
int
clc
rcll
bound
lret
mov
xchg
jecxz
adc
inc
out
shll
jge
push
imul
mov
sub
mov
pop
and
xchg
out
mov
push
shl
or
push
push
cmp
sti
stc
push
mov
pop
outsb
xchg
dec
mov
es
ret
arpl
push
inc
pop
mov
xchg
sbb
push
popa
popa
sub
adc
mov
jno
pop
cmp
jb
and
fldt
jo
lea
lcall
outsb
mov
daa
push
mov
cmp
inc
cwtl
pusha
imul
mov
fstp
and
sub
cmp
inc
sarl
int
in
pop
jle
xor
jns
js
les
add
sbb
mov
lret
sub
inc
movsb
int
sti
or
mov
pop
and
jno
adc
inc
movsl
or
rolb
aad
mov
mov
testb
jnp
imul
hlt
lods
sub
hlt
jmp
pusha
push
arpl
pushf
add
pushf
push
divb
jns
in
inc
mov
sahf
pop
mov
add
mov
add
push
loop
fs
test
sbb
dec
jmp
dec
xor
cmpsl
sub
out
and
testb
mov
dec
push
add
jp
sbb
push
pcmpgtb
add
push
fs
sarb
sub
xchg
push
push
dec
and
push
cmpsb
and
mov
sub
inc
mov
insb
pop
cmp
sahf
jl
aam
imul
push
imul
cmp
add
jle
dec
jb
andb
pop
test
ret
push
pushf
cmp
in
dec
mov
pushf
js
cmp
gs
or
jbe
ret
rcrl
mov
cmp
movsl
inc
popf
add
mov
jo
xchg
xchg
adc
test
std
cli
inc
push
daa
ds
sub
repz
or
testb
push
test
test
testb
push
insb
into
outsl
int
pop
mov
imul
pop
cmpsl
sub
push
sar
call
inc
add
outsl
aam
mov
gs
pop
xchg
pop
ret
push
xchg
lods
lods
insl
cmp
dec
inc
inc
faddl
xor
cmpsb
sub
lret
jne
push
sbb
or
cmpsl
jns
mov
pushf
xor
add
mov
nop
enter
mov
xor
in
sahf
jnp
push
addb
lock
xor
mov
pop
int
cmp
out
sbb
sahf
jnp
push
jae
repz
scas
sbbl
jmp
mov
repnz
fisubrl
mov
inc
mov
xor
in
stos
push
push
jg
xor
lret
imull
pop
imulb
imul
shlb
sahf
jp
arpl
fsubrl
mov
mov
xor
ljmp
push
jp
jmp
add
mulb
mov
inc
adc
popf
ret
je
ret
or
add
mov
iret
and
inc
mov
sbb
mov
pop
stc
ret
pop
mov
leave
or
dec
out
pusha
rclb
or
jne
fnstcw
and
cmp
jmp
add
jne
notl
hlt
fstpt
xchg
cmpsb
or
subb
pop
cmc
sbb
inc
leave
jl
jns
shlb
outsb
jle
cmc
pop
cmpsl
add
ret
rcrl
cwtl
jae
iret
mov
inc
in
cmp
sbb
jge
mov
mov
sbb
inc
and
adc
ret
dec
aad
lahf
jmp
pop
jecxz
dec
sub
mov
push
popf
add
icebp
fucomi
stc
lret
and
mov
and
popl
add
adc
pop
jecxz
push
and
mov
adcl
xor
addr16
in
xor
popf
ss
stc
icebp
pop
xor
mov
lds
or
adc
jmp
fstps
lods
adc
enter
xchg
rorl
xchg
jns
jecxz
pop
call
mov
fprem1
push
lods
dec
push
outsl
xor
mov
test
ljmp
cli
jl
or
dec
adcl
adc
sbb
js
inc
shlb
cli
sbb
pop
jnp
xor
cwtl
add
jmp
iret
mov
dec
add
aad
add
outsb
mov
add
jle
jnp
jmp
inc
out
add
sahf
js
loope
inc
or
enter
fldpi
pop
into
push
dec
push
and
pop
xchg
xor
pushf
movl
pusha
movb
call
cmp
ficomps
rorl
and
pop
imul
xlat
fnstenv
test
fnsave
test
loopne
cmpsb
jge
push
int3
lods
sub
pop
and
lcall
lods
mov
or
xchg
dec
mov
out
iret
inc
jb,pt
out
push
test
and
mov
rcll
fiadds
rclb
loope
enter
loop
aaa
les
shlb
dec
pop
fists
jbe
jmp
fucom
test
adc
ret
or
xor
adc
imul
xor
stc
aas
popf
test
ljmp
adc
mov
adc
xor
add
test
movl
mov
pushf
push
mov
lea
jmp
jb
jp
fwait
add
add
inc
insl
insb
jo
push
insb
scas
out
fwait
sub
sahf
xchg
jl
push
xor
jp
sub
notb
inc
xor
mov
xchg
mov
clc
int3
notb
shl
int
ds
mull
aad
scas
in
movsl
jnp
mov
sub
insb
mov
sub
xchg
mov
sbb
pop
sti
movsl
nop
insb
xor
mov
inc
cmp
sub
push
lock
ss
jno
xchg
imul
adc
push
xchg
movd
js
push
jecxz
or
cmp
push
xchg
xor
fldl
and
mov
push
loopne
js
jns
cwtl
or
insl
mov
and
push
mov
push
jmp
push
xor
enter
dec
xchg
sti
movsb
xor
cmpsb
movl
push
xor
sub
mov
mov
push
into
leave
push
sbbb
mov
mov
push
mov
fdivs
pop
lret
insl
enter
or
sub
aaa
addb
dec
push
shl
push
sub
sub
add
cs
mov
push
test
xchg
repz
fisttps
adc
sbb
bound
test
mov
movsb
xor
xor
aad
sub
lods
jecxz
loopne
pop
sub
insl
aas
adc
push
out
pop
aam
sub
int3
jbe
outsb
push
les
inc
rolb
ds
scas
mov
sub
push
push
pop
jo
mov
insl
and
in
xlat
insl
and
dec
fbstp
test
add
pop
pop
ja
leave
and
mov
cmp
adc
rorb
mov
inc
add
add
outsb
or
mov
sbb
fstpt
pop
adc
xchg
repz
sahf
insb
or
rcrl
loope
rcrb
cld
push
lock
or
or
insl
fmuls
les
cs
divl
mov
or
aam
mov
negl
adc
jb
jmp
add
shll
popf
cmc
lds
adc
adc
lods
or
ret
fdivrp
pusha
mov
ficompl
loop
addr16
fcmove
imul
sahf
jne
cmp
xchg
ss
aam
sub
mov
stos
mov
add
sahf
jne
cld
inc
push
jnp
clc
xchg
push
test
mov
sbb
and
jbe
aas
dec
into
lret
stos
sub
or
out
dec
pusha
jmp
lret
xchg
cld
sbb
hlt
lret
rorl
jbe
xor
das
movq
rorb
call
mov
and
inc
mov
cmp
cwtl
aad
sahf
jbe
mov
rcll
ja
mov
loope
icebp
pushf
mov
jae
in
rcrl
xchg
das
jmp
jmp
aam
hlt
xor
xor
and
rcrb
in
xchg
xor
mov
outsl
push
cmc
aas
jne
xchg
dec
mov
iret
sbb
pop
into
dec
dec
mov
xchg
cmpsl
or
xor
inc
pop
mov
add
add
mov
decl
inc
popa
push
popf
shrb
hlt
push
jmp
jne
repz
jge
xor
imul
mov
rcrb
xor
xor
xor
lret
mov
cwtl
mov
jecxz
jnp
xor
xor
ror
fildl
pop
lods
sbb
push
xor
xor
int
stos
xor
je
sti
xor
cmp
jl
push
imul
jne
shrl
xor
in
jmp
xchg
jno
sbb
dec
add
sbb
out
and
cmovg
in
fs
mov
xor
movl
push
jmp
mov
movl
pusha
pushf
movb
movb
lea
jmp
jmp
sub
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
negb
test
ret
jmp
ds
mov
daa
or
mov
scas
fisubrl
in
insl
popa
lea
mov
mov
cli
and
imul
push
sub
jle
fwait
push
xchg
push
out
adc
push
ja
or
cmp
push
mov
cmp
movsl
out
push
adc
out
sub
xchg
sub
lods
rolb
shrl
cmp
sahf
jb
inc
test
cmp
or
ss
std
popf
pop
and
jge
sbb
sub
mov
fidivl
test
inc
sub
sub
movsl
xchg
mov
or
sbb
push
call
ret
das
sarl
cmp
int3
xor
mov
xor
and
lahf
cmp
sub
jb
cs
daa
mov
stc
rcr
shld
xor
bswap
mov
clc
test
div
ror
shld
rcl
rcl
xor
dec
mov
bt
div
push
test
push
movb
test
pusha
lea
jne
test
push
stc
cmc
cmpl
movb
pushf
jmp
push
pushl
jmp
test
call
jmp
test
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
lea
shr
push
push
call
add
mov
mov
mov
test
je
neg
add
add
add
mov
mov
movzbl
mov
inc
mov
mov
dec
mov
shr
lea
mov
shr
add
and
addl
lea
mov
shr
add
mov
add
mov
shr
mov
shr
add
and
add
mov
add
xor
and
add
movzbw
movzbw
shl
movzbl
shl
or
mov
xor
add
movzbw
or
movzwl
mov
sub
xor
mov
mov
mov
shr
add
and
mov
shr
add
mov
shr
add
sub
xor
mov
mov
test
jne
mov
mov
shr
add
mov
shr
mov
and
movzbl
add
lea
add
mov
mov
shr
add
and
mov
mov
mov
shr
add
add
xor
add
movzbw
movzbl
mov
mov
mov
mov
xor
add
movzbw
mov
shl
or
cmp
jbe
nop
mov
xor
mov
add
shr
add
and
mov
mov
shr
add
mov
add
xor
movzbl
add
movzbw
mov
shl
movzwl
or
lea
mov
mov
inc
mov
mov
shr
add
mov
shr
and
add
add
xor
add
movzbw
mov
shr
add
and
mov
shr
add
mov
add
xor
shl
add
movzbw
or
mov
jne
mov
shr
add
and
mov
shr
add
mov
add
xor
add
movzbw
movzbw
shl
or
dec
movzwl
mov
sub
xor
mov
mov
mov
shr
add
and
mov
shr
add
mov
mov
add
shr
sub
xor
mov
mov
mov
add
mov
shr
add
mov
shr
and
add
mov
add
xor
add
add
movzbw
mov
mov
xor
add
mov
movzbw
mov
shl
or
cmp
ja
pop
pop
pop
mov
pop
add
ret
int3
int3
int3
jmp
push
push
pushf
movl
pushl
mov
lea
jmp
movl
pushf
mov
lea
jmp
lea
sbb
daa
jbe
es
push
loop
loopne
dec
jo
mov
movsb
mov
dec
push
xor
cmp
mov
sahf
sub
or
xchg
or
leave
mov
ficoml
icebp
shlb
ret
pop
mov
jo
add
push
sub
notl
add
sub
jns
mov
pushf
add
and
cmc
adcl
jecxz
bound
in
imul
call
xlat
das
fadd
and
jecxz
and
lret
daa
pop
mov
lds
stc
jb
mov
lods
pop
or
or
sub
subl
mov
jecxz
pop
std
fidivl
jno
in
dec
and
out
sbb
fildl
pop
je
fisubs
adc
push
xor
fwait
cld
dec
fistl
fcmove
fistpl
fnsave
stos
inc
in
call
fwait
jmp
ss
push
in
jmp
repnz
mov
in
ljmp
xor
jl
outsl
pop
sti
out
xlat
inc
push
jg
aad
xchg
gs
add
int3
out
fdivs
sbb
std
das
nop
pop
dec
jae
inc
xor
rcl
lods
dec
out
inc
into
out
or
pop
ds
lcall
mov
mov
push
inc
sbb
pop
add
pop
sub
iret
lahf
xor
dec
mov
mov
mov
pandn
gs
dec
cmc
std
sub
cmp
aaa
adc
pop
mov
or
adc
cmpsb
mov
mov
lret
and
or
push
xor
or
mov
adc
or
loop
mov
and
cmpb
fcoml
cwtl
inc
pop
jge
ret
xor
or
cltd
xor
call
mov
dec
shlb
mov
push
pop
stos
xor
sahf
insb
out
in
out
mov
pushl
xor
lahf
pop
jno
xor
xlat
movsb
xor
je
cmpsl
dec
xchg
add
jecxz
xchg
push
loop
jno
xor
xor
add
negl
in
pop
dec
inc
enter
in
pop
loopne
jns
sahf
insb
dec
shll
lret
rorl
jge
push
sub
je
sahf
insb
jae
ds
sbb
insb
push
std
cli
jno
stc
outsb
js
jae
add
and
sbb
mov
push
pop
ret
outsb
dec
mov
and
les
cmp
ljmp
sahf
imul
inc
add
fisttpll
cmc
or
mov
add
mov
xor
movb
lea
jge
pushf
rcl
mov
cmc
call
jmp
mov
xlat
int3
int3
int3
jmp
pushf
movl
pushl
movl
pushf
pushf
lea
jmp
mov
cmp
call
pusha
mov
jmp
movl
pushf
pushf
movl
push
mov
mov
lea
jmp
adc
fldz
fwait
push
cmp
popl
lcall
out
cld
call
rorl
jmp
call
lea
je
push
movl
pusha
lea
jmp
jmp
pusha
movl
jmp
test
jmp
ljmp
add
pop
or
add
jb
cltd
ljmp
cmp
fwait
inc
sbb
inc
mov
push
mov
mov
sti
cmpsb
in
inc
popf
dec
out
scas
adc
sub
and
rcrb
pop
int
cmp
pop
push
lea
out
jmp
and
sahf
and
or
pop
das
add
adc
inc
inc
fs
cli
xchg
mov
mov
jns
mov
int
das
xlat
mov
fdivr
ljmp
sbb
dec
subl
jge
jmp
ret
sti
push
xchg
xchg
sbb
xchg
xor
mov
shl
or
xchg
in
jne
dec
adc
popa
cmp
sahf
push
xchg
and
movsb
jecxz
add
inc
and
repz
lahf
call
pusha
pushf
movl
pushf
pushf
pushf
movl
movb
pushf
movb
pushf
lea
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
call
xchg
mov
cs
add
xor
pop
aas
imul
aam
cs
int
or
repz
cmp
inc
pop
mov
sbb
mov
loopne
sbb
sbb
push
test
jne
or
or
hlt
arpl
push
xorl
jo
mov
ret
mov
mov
pop
xchg
and
sbb
sahf
imul
call
pushf
call
sub
ror
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
pushf
mov
movl
pushf
push
movb
lea
jmp
movzbw
xor
adc
clc
mov
cmc
pushf
pushl
test
xor
stc
test
bt
shl
stc
jmp
push
pusha
movl
mov
pusha
movb
movb
lea
jmp
inc
mov
int3
int3
int3
int3
int3
int3
int3
jmp
movl
push
lea
jmp
movl
pushl
lea
jmp
pusha
pushl
movl
pushf
mov
push
movl
pusha
pushf
pushf
push
lea
jmp
movb
movw
call
jmp
call
aas
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
hlt
scas
ss
popf
stos
push
in
inc
loop
xor
add
pop
lds
int
push
pop
decb
imul
lret
push
jno
dec
int
push
and
insb
pushf
sub
push
mov
add
pop
xor
pop
sbb
sahf
jg
jbe
mov
cmp
loope
fcomps
xchg
lock
cmp
into
cmp
inc
cmpsl
stos
jne
adc
mov
in
xor
loopne
repnz
add
sub
add
sahf
and
jne
and
mov
adc
inc
ds
aaa
jbe
push
je
sahf
dec
movl
push
lea
jmp
fcmovb
mov
add
daa
mov
hlt
js
stc
ror
add
inc
popa
mov
addr16
fadd
inc
dec
rolb
js
inc
push
mov
jae
test
fmuls
mov
popa
bound
push
ss
jns
mov
lods
add
fs
inc
in
cmp
ret
cmpsb
sbb
loopne
adc
aam
xchg
jo
rcll
mov
or
popa
out
jnp
push
movsb
call
sbb
cli
pop
xor
pop
mov
mov
out
adc
cmovge
or
mov
inc
rorb
rcrl
rcll
sarl
inc
mov
jg
xchg
es
xor
cli
xor
clc
push
xor
sahf
cmp
mov
dec
mov
ljmp
jmp
xor
in
mov
mov
and
and
sahf
data16
pop
in
push
orl
popa
daa
dec
xchg
ret
xor
pop
inc
pop
out
sub
sahf
outsw
clc
scas
movl
pushf
pusha
movl
movw
movb
movb
pushf
lea
jmp
jmp
call
adc
xor
mov
xchg
pop
sbb
push
ja
adc
sbb
add
mov
add
inc
dec
cmp
push
mov
fcomps
lods
mov
fcoms
popf
cli
es
jecxz
rolb
cmp
push
inc
pushf
sbb
fucomp
inc
sub
add
repnz
fisubrs
loopne
ret
push
jp
xorl
dec
out
lret
cmpsb
xchg
imul
hlt
xchg
jnp
inc
jae
pop
mov
sarb
or
shll
lahf
loopne
and
sbb
subl
test
and
call
pop
stos
jl
sbb
pop
je
iret
cmp
loopne
inc
cmp
xchg
xor
dec
push
xor
pop
andb
mov
xor
push
mov
inc
jae
js
pushf
jbe
and
or
shrb
movl
or
add
xorb
cmp
sti
adc
xor
mov
mov
cmp
stos
jne
lcall
es
insb
push
sub
inc
incb
in
jae
mov
push
push
mov
pushf
roll
jg
and
cmp
sahf
mov
and
vpsubd
pushf
pushf
movl
push
pushl
push
pushl
lea
jmp
pusha
movl
pusha
push
movl
pushl
mov
lea
jmp
shr
jmp
sub
pushf
ss
add
shlb
mov
shll
or
inc
jmp
stos
pop
xchg
mov
xchg
mov
and
jg
mov
inc
fld1
adc
pop
pop
lea
xchg
add
lcall
mov
and
cmp
outsl
ljmp
xor
pop
testl
sub
pop
ss
enter
fcomps
lcall
leave
adc
adc
test
dec
push
and
hlt
xchg
into
pusha
dec
std
push
cltd
into
mov
jo
inc
leave
xchg
gs
xchg
icebp
xchg
test
test
jecxz
enter
fildl
loopne
mov
inc
out
push
jo
jnp
sub
ljmp
jns
dec
mov
orl
cmp
lcall
fdecstp
in
push
push
mov
mov
clc
xor
mov
bound
sub
and
jns
xchg
inc
mov
pop
xchg
sahf
mov
push
jp
mov
xor
adc
aad
mov
or
rcll
lret
adc
xor
movl
push
pushf
movb
lea
jmp
push
movl
call
pushl
movl
call
movl
movw
pushf
mov
lea
jmp
call
push
pushf
jmp
loop
test
int3
int3
int3
jmp
xor
sbb
push
cmp
out
sbb
fstpl
dec
cli
jnp
push
pop
std
xchg
dec
lods
lds
mov
dec
xchg
push
fdivl
cmp
sub
pop
cmp
fldt
ret
fs
jmp
arpl
mov
push
lods
dec
arpl
or
andl
xchg
lea
fldpi
int
into
popf
gs
lods
pop
add
out
push
jle
enter
stos
xchg
ss
push
xor
lret
push
xchg
iret
jbe
movsl
pop
stos
arpl
push
outsl
int
je
sbb
add
jo
cmpps
cld
in
nop
lods
mov
popf
xor
and
int3
jae
enter
hlt
mov
les
mov
enter
push
pop
push
dec
out
jns
adc
lret
lret
sub
out
lds
jne
loop
fstpt
push
fsub
or
ds
mov
or
inc
xor
in
xchg
or
sahf
popa
aam
fstpl
stc
pushl
lea
js
pusha
movl
movl
lea
jmp
lea
cmp
add
sub
ret
fwait
adc
xor
jno
pop
pop
bound
jecxz
inc
pop
inc
js
jge
movsb
loope
jns
and
out
shll
sbbb
gs
jge
add
jo
inc
jle
sti
mov
test
sahf
pusha
fdivp
out
jno
movsb
xor
xchg
cs
mov
mov
lea
xorl
pusha
ljmp
popa
mov
es
lea
jmp
movl
pushf
pushl
pushf
lea
jmp
pushf
jmp
call
or
int3
int3
int3
int3
int3
int3
int3
jmp
call
push
pushf
movl
call
sub
sbb
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
mov
pushl
pushf
movl
mov
pushf
lea
jmp
call
cmp
int3
int3
int3
int3
int3
int3
int3
jmp
clc
mov
bswap
rcl
mov
xor
sbb
mov
shr
mov
movsbl
shr
rol
shl
adc
jmp
cmp
int3
int3
int3
int3
int3
int3
int3
int3
jmp
push
mov
inc
stc
test
stc
push
xor
rol
bsr
sub
xor
mov
lea
jg
test
mov
inc
mov
pushf
clc
shr
pushf
push
movb
pushf
lea
jmp
push
mov
jmp
jmp
jmp
pop
fisttps
lea
aad
imul
pop
in
mov
out
and
nop
lret
mov
pop
or
call
adc
stos
mov
rcrl
mov
jecxz
cmp
aaa
push
pop
mov
and
lods
aad
pop
xor
xor
sub
cmpsb
cltd
shlb
cmc
mov
adc
out
lods
pop
mov
jbe
sub
lods
loope
lahf
ds
lcall
jle
stos
loope
daa
cmp
jo
xchg
lods
mov
shrb
popf
mov
sahf
fiadds
out
add
shlb
insl
cvtdq2ps
dec
nop
in
scas
xchg
push
sbb
cmp
cwtl
xor
ss
push
mov
mov
mov
sub
xchg
xor
push
add
jbe
mov
enter
xchg
push
cld
mov
orl
outsb
lret
dec
adc
lcall
xchg
scas
sub
pop
pop
cltd
jnp
out
and
sbb
test
stos
jecxz
mov
inc
dec
pop
sub
add
clc
xchg
and
aas
pushf
mov
cmp
xor
int3
sar
push
mov
and
sub
mov
jmp
sahf
pop
push
test
add
mov
sti
fbld
pusha
movl
pushf
mov
push
lea
jmp
clc
jmp
call
mov
test
int3
int3
jmp
xor
js
add
imul
xchg
sub
das
sub
push
std
add
cli
xchg
pushf
or
and
arpl
and
pop
cmp
adc
mov
push
in
sub
aam
bound
dec
lret
push
daa
xchg
fisubrl
or
xchg
scas
add
sahf
es
out
jbe
es
lea
sub
call
pop
inc
repz
stos
rcrl
dec
sub
mov
sub
fcompl
inc
out
push
inc
dec
imul
pop
adc
movsb
push
cmpsb
cmp
jnp
jl
push
mov
sub
sbb
iret
pop
jl
jl
icebp
and
fstpl
loopne
pop
jno
mov
fidivrl
dec
outsl
sbb
xor
outsl
pop
mov
hlt
lcall
aaa
jno
jmp
mov
notb
mov
xchg
arpl
or
jno
fnsave
mov
add
gs
mov
stos
fs
and
mov
inc
mov
xlat
setb
push
and
mov
push
dec
ljmp
add
mov
aas
clc
sub
movsb
jmp
or
dec
push
dec
leave
adc
sub
ret
icebp
fwait
lret
mov
sahf
xchg
fstl
out
scas
gs
je
insb
mov
lret
cmpsb
out
push
mov
mov
mov
cs
ret
add
in
imul
insl
xor
mov
das
push
scas
jle
jne
test
test
int
and
xor
push
aas
insb
and
pop
add
cmpxchg
jo
mov
ret
jg
jg
push
rorb
les
ja
mov
enter
bndldx
push
mov
in
pop
inc
ficompl
jp
sahf
pop
loope
and
mov
bswap
xchg
mov
lahf
bt
mov
pusha
rcr
rcr
imul
shld
shr
shld
sbb
mov
cmc
movw
movb
shl
test
jmp
movl
pushf
lea
jmp
negl
int3
int3
int3
int3
jmp
jecxz
std
loopne
sbb
jmp
xor
mov
cmp
sub
shlb
push
mov
or
fdivr
dec
push
daa
pop
outsl
orl
leave
adc
xchg
pop
push
pushl
sahf
pop
xor
mov
test
inc
mov
loope
insl
cmpl
ret
mov
lods
fisttpl
bswap
mov
and
bts
neg
shrd
or
movzbw
imul
shl
xchg
sub
rcr
add
call
mov
pushf
jmp
push
pushf
call
bnd
push
jmp
mov
lea
push
pusha
pushf
pushl
movl
call
movl
mov
pusha
movl
lea
jmp
jmp
in
int3
int3
int3
int3
int3
int3
jmp
movl
movw
movl
pusha
pushf
movl
push
lea
jmp
call
or
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
pushf
pusha
movl
mov
lea
jmp
movl
pusha
lea
jmp
movb
push
call
int3
int3
int3
int3
jmp
pushf
pushl
mov
movl
movb
pushf
pushl
push
lea
jmp
pushf
jmp
pushf
jmp
push
mov
int3
int3
jmp
stc
shl
movb
cmc
mov
cmp
ror
sub
mov
lea
pusha
not
pusha
movsbw
rep
lea
push
stos
not
jmp
push
pusha
movl
pushf
pusha
mov
pushf
lea
jmp
pushf
push
jmp
inc
or
int3
jmp
movl
pusha
pushl
jmp
insb
cli
sub
lea
shr
movzwl
cmp
mov
stc
shr
lea
inc
add
lea
mov
clc
and
bt
test
sub
ja
stc
shr
cmp
clc
add
not
movzbl
pusha
mov
lea
jmp
call
pusha
jmp
int3
jmp
adc
imul
jle
lods
out
sbb
clc
adc
addl
adc
test
stc
popa
sub
cld
mov
mov
or
pop
cmp
xor
xor
sbb
xor
xchg
ret
mov
out
sbb
pop
inc
mov
pop
pop
iret
cmp
cmp
or
xchg
dec
iret
adc
mov
iret
int
icebp
xlat
es
data16
addl
or
outsb
push
inc
fwait
pop
lahf
and
jae
data16
xor
fnstsw
xor
dec
lods
into
mov
into
in
jnp
sahf
or
inc
mov
and
enter
xchg
fcoms
in
mov
add
shl
sub
aas
inc
mov
ss
xor
aam
and
xchg
xchg
aam
sbb
mov
in
cwtl
outsb
mov
mov
mov
out
xor
dec
add
dec
addr16
mov
cmpsl
into
and
adc
stos
push
lea
xchg
or
or
or
aad
inc
xchg
cmp
sub
and
mov
cld
imul
mov
in
dec
addr16
add
into
cwtl
xchg
cmp
movsl
dec
int
sahf
add
sahf
push
test
lock
aam
mov
jae
enter
xorl
dec
add
je
cmpsl
fldcw
jns
jbe
orb
in
mov
mov
mov
and
adcb
das
andb
lods
ss
mov
gs
pop
stos
jae
push
test
jg
lcall
xor
pop
jl
xchg
xchg
add
stos
nop
cmp
sahf
push
inc
lret
push
popf
imul
std
adc
xor
shrl
or
sahf
push
cmp
ja
jb
add
int3
int3
int3
int3
int3
int3
int3
int3
jmp
daa
addr16
cwtl
sbb
loop
data16
dec
imul
stos
pop
jno
aam
mov
adc
dec
arpl
jb
cmpsb
aam
or
loop
test
ja
mulb
adc
mov
jle
xchg
sbb
jb
imul
lods
clc
fisttps
fstpl
test
or
ds
push
icebp
cmc
into
or
rcrl
and
cmp
cli
mov
scas
mov
fisttpll
movsl
test
movb
mov
jg
cmp
pop
push
adc
loopne
mov
adc
icebp
sbb
sahf
push
add
add
movsl
mov
mov
jmp
movl
movw
push
lea
jmp
rorb
push
mov
call
movl
mov
pop
ret
movl
jmp
mov
push
mov
push
mov
movl
call
testb
je
push
call
pop
mov
pop
pop
ret
mov
push
mov
push
pushl
mov
call
movl
mov
pop
pop
ret
mov
push
mov
sub
jmp
pushl
call
pop
test
je
pushl
call
pop
test
je
leave
ret
testb
mov
jne
orl
mov
call
push
call
pop
push
lea
call
push
lea
push
call
int3
mov
push
mov
pop
jmp
mov
push
mov
pop
jmp
mov
push
mov
pop
jmp
mov
push
mov
mov
mov
mov
inc
inc
test
jne
mov
dec
dec
cmp
je
cmp
jne
cmp
je
xor
pop
ret
mov
push
mov
mov
push
mov
movb
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
push
push
mov
xor
push
cmp
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
cmpl
mov
jne
mov
mov
inc
inc
cmp
je
dec
jne
jmp
mov
mov
inc
inc
cmp
je
dec
je
decl
jne
cmp
jne
mov
cmp
jne
cmpl
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
xor
or
repnz
add
neg
sub
mov
std
repnz
add
cmp
je
xor
jmp
mov
cld
pop
leave
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
pop
jmp
call
mov
imul
add
mov
mov
shr
and
ret
mov
push
movl
call
pop
ret
mov
push
mov
push
mov
call
testb
je
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
push
dec
add
push
dec
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
js
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
movsb
push
dec
add
dec
add
push
dec
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
inc
push
dec
add
dec
add
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
dec
add
push
dec
add
push
dec
add
push
dec
add
dec
add
dec
add
dec
add
push
dec
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
push
dec
add
dec
add
dec
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
mov
mov
push
push
cmp
jne
push
call
pop
test
jne
xor
jmp
call
test
jne
call
jmp
call
call
mov
call
mov
call
test
jge
call
jmp
call
test
jl
call
test
jl
push
call
pop
test
jne
incl
jmp
call
jmp
xor
cmp
jne
cmp
jle
decl
cmp
jne
call
cmp
jne
call
call
call
jmp
cmp
jne
call
push
push
call
mov
pop
pop
cmp
je
push
pushl
pushl
call
pop
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
jmp
cmp
jne
push
call
pop
xor
inc
pop
pop
pop
ret
push
push
call
mov
mov
mov
xor
inc
mov
test
jne
cmp
je
andl
cmp
je
cmp
jne
mov
test
je
push
push
push
call
mov
cmpl
je
push
push
push
call
mov
test
je
push
push
push
call
mov
cmp
jne
test
jne
push
push
push
call
push
push
push
call
mov
test
je
push
push
push
call
test
je
cmp
jne
push
push
push
call
test
jne
and
cmpl
je
mov
test
je
push
push
push
call
mov
movl
mov
jmp
mov
mov
mov
push
push
call
pop
pop
ret
mov
movl
xor
call
ret
mov
push
mov
cmpl
jne
call
pushl
mov
mov
call
pop
pop
ret
mov
push
mov
mov
mov
movl
mov
andl
mov
pop
ret
mov
push
mov
push
mov
push
mov
movl
mov
mov
test
mov
push
je
test
je
push
call
mov
inc
push
call
pop
pop
mov
test
je
pushl
push
push
call
add
jmp
andl
jmp
mov
pop
mov
pop
pop
pop
ret
cmpl
movl
je
pushl
call
pop
ret
mov
test
jne
mov
ret
mov
push
mov
push
mov
call
testb
je
push
call
pop
mov
pop
pop
ret
mov
push
mov
push
push
push
push
pushl
call
pushl
mov
mov
call
mov
pop
pop
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
pushl
call
pop
pop
test
jne
lea
cmp
jb
push
pushl
call
pop
pop
test
je
sar
push
lea
call
pop
mov
pushl
call
mov
add
push
call
pop
mov
mov
pop
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
mov
push
call
add
mov
mov
test
jne
push
pop
pop
ret
andl
xor
pop
ret
push
push
call
call
andl
pushl
call
pop
mov
movl
call
mov
call
ret
call
ret
mov
push
mov
pushl
call
neg
sbb
neg
pop
dec
pop
ret
push
push
call
andl
mov
cmp
ja
push
call
pop
andl
push
call
pop
mov
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
mov
cmp
ja
push
push
mov
cmpl
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
test
je
mov
jmp
xor
inc
push
jmp
cmp
jne
push
call
pop
test
jne
test
jne
inc
add
and
push
push
pushl
call
mov
test
jne
push
pop
cmp
je
pushl
call
pop
test
je
mov
jmp
call
mov
call
mov
pop
mov
pop
jmp
push
call
pop
call
movl
xor
pop
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
pushl
call
pop
test
je
pushl
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
mov
push
mov
sub
mov
push
push
push
pop
mov
lea
rep
mov
mov
pop
mov
pop
test
je
testb
je
movl
lea
push
pushl
pushl
pushl
call
leave
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
movl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
test
jne
call
mov
call
push
call
mov
pop
call
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzwl
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
pushl
call
mov
test
je
xor
mov
inc
cmp
jb
mov
movb
test
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
inc
mov
inc
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
movb
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
mov
add
jmp
cmp
ja
orb
mov
sub
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
inc
inc
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
inc
mov
inc
inc
inc
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzwl
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
lea
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
lea
movl
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
decl
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
test
je
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
ret
xor
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
lea
mov
call
mov
movl
call
jmp
push
call
pop
mov
ret
mov
push
mov
push
pushl
mov
call
test
je
mov
cmp
je
push
pushl
call
call
test
je
mov
jmp
mov
push
call
test
jne
push
call
pop
test
je
push
push
call
test
je
pushl
call
mov
mov
pop
pop
ret
push
call
pop
ret
mov
push
mov
push
pushl
mov
call
test
je
mov
cmp
je
push
pushl
call
call
test
je
mov
jmp
mov
push
call
test
jne
push
call
pop
test
je
push
push
call
test
je
pushl
call
mov
mov
pop
pop
ret
call
ret
mov
push
pushl
call
mov
test
jne
pushl
call
pop
mov
push
pushl
call
mov
pop
ret
mov
cmp
je
push
pushl
call
pop
call
orl
mov
cmp
je
push
call
orl
jmp
push
push
call
mov
push
call
test
jne
push
call
pop
mov
mov
movl
xor
inc
mov
test
je
push
push
mov
call
mov
push
pushl
call
mov
mov
movb
movb
movl
push
call
pop
andl
pushl
call
movl
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
pop
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
andl
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
movl
call
push
call
pop
movl
mov
test
je
push
call
pop
cmp
je
cmp
je
cmpl
jne
push
call
pop
movl
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
mov
cmpl
je
cmpl
jne
push
pushl
mov
call
test
je
pushl
pushl
call
call
mov
pop
push
pushl
pushl
call
pop
call
pushl
call
mov
cmp
je
push
push
call
pop
ret
mov
push
push
mov
push
call
test
jne
push
call
pop
mov
test
je
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
je
cmpl
je
cmpl
je
test
jne
mov
mov
mov
movl
mov
mov
call
mov
cmp
je
pushl
push
call
test
je
call
pushl
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
add
mov
call
test
je
push
pushl
call
pop
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
pop
call
test
je
push
push
call
pop
pop
call
orl
mov
xor
inc
jmp
call
xor
pop
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
andl
push
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
movl
mov
mov
mov
mov
movl
movl
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
push
call
pop
push
call
push
call
mov
xor
pop
call
leave
ret
mov
push
mov
pushl
call
pop
test
je
pop
jmp
push
call
pop
pop
jmp
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
sub
push
push
pushl
lea
call
mov
mov
xor
cmp
je
mov
cmp
jne
call
push
push
push
push
push
movl
call
add
cmpb
je
mov
andl
xor
jmp
cmp
je
cmpl
jl
cmpl
jg
mov
push
mov
mov
lea
cmpl
jle
lea
push
movzbl
push
push
call
mov
add
jmp
mov
movzbl
movzwl
and
test
je
mov
inc
jmp
cmp
jne
orl
jmp
cmp
jne
mov
inc
mov
test
jl
cmp
je
cmp
jg
test
jne
cmp
je
movl
jmp
mov
cmp
je
cmp
je
movl
jmp
movl
jmp
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
inc
mov
inc
mov
mov
xor
divl
movzbl
movzwl
test
je
movsbl
sub
jmp
test
je
mov
sub
cmp
movsbl
ja
sub
add
cmp
jae
orl
cmp
jb
jne
cmp
jbe
orl
cmpl
jne
mov
dec
test
jne
cmpl
je
mov
andl
jmp
mov
imul
add
mov
mov
inc
jmp
mov
test
jne
test
jne
and
je
cmpl
ja
test
jne
cmp
jbe
call
testb
movl
je
orl
jmp
testb
push
pop
setne
add
mov
mov
test
je
mov
testb
je
negl
cmpb
je
mov
andl
mov
jmp
mov
test
je
mov
cmpb
je
mov
andl
xor
pop
pop
pop
leave
ret
mov
push
mov
xor
push
pushl
pushl
pushl
cmp
jne
push
jmp
push
call
add
pop
ret
mov
push
mov
sub
mov
xor
mov
testb
push
je
push
call
pop
call
test
je
push
call
pop
testb
je
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
push
mov
lea
push
push
call
lea
add
mov
lea
push
movl
mov
mov
call
lea
push
call
push
call
int3
mov
push
mov
push
push
push
mov
push
push
xor
xor
mov
cmp
je
inc
mov
cmp
jb
cmp
jae
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
je
cmp
je
push
mov
push
mov
push
call
add
test
je
push
push
push
push
push
call
add
push
mov
push
push
movb
call
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
inc
pop
cmp
jbe
push
call
sub
add
push
mov
push
sub
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
xor
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
pushl
push
push
call
add
test
je
push
push
push
push
push
call
add
push
push
push
call
add
jmp
push
call
mov
cmp
je
cmp
je
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
pop
pop
pop
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
jne
push
call
push
call
pop
pop
ret
mov
push
mov
mov
mov
pop
ret
push
push
call
push
call
pop
andl
mov
mov
test
je
mov
mov
mov
test
je
cmp
jne
mov
mov
push
call
pop
pushl
call
pop
andl
movl
call
call
ret
mov
jmp
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
push
mov
sub
mov
mov
mov
mov
mov
shr
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cltd
mov
mov
xor
sub
and
xor
sub
cltd
mov
xor
sub
and
xor
sub
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
push
push
call
add
mov
mov
test
je
mov
mov
add
sub
mov
add
sub
mov
mov
mov
mov
rep
mov
jmp
cmp
jne
neg
add
mov
mov
mov
mov
rep
mov
add
mov
add
mov
sub
push
push
push
call
add
mov
jmp
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
pop
ret
push
push
call
andl
movapd
movl
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
andl
movl
mov
call
ret
mov
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
testl
je
call
test
je
xor
inc
jmp
xor
pop
leave
ret
call
mov
xor
ret
mov
push
mov
push
push
xor
pushl
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
pushl
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
mov
push
call
pushl
call
add
cmp
ja
test
je
pop
pop
ret
mov
push
mov
call
pushl
call
pushl
call
push
call
add
pop
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
pushl
call
pop
ret
mov
push
mov
pushl
call
pop
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmpl
je
push
call
pop
test
je
pushl
call
pop
call
push
push
call
pop
pop
test
jne
push
call
mov
movl
call
cmpl
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
andl
xor
inc
cmp
je
mov
mov
mov
cmpl
jne
pushl
call
pop
mov
mov
test
je
pushl
call
pop
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
pushl
call
mov
call
mov
call
pushl
call
mov
pushl
call
add
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
push
mov
call
pop
push
mov
call
pop
movl
call
cmpl
jne
mov
push
call
pop
pushl
call
xor
inc
cmpl
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
push
push
push
call
add
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
pop
ret
push
push
call
xor
mov
lea
push
call
movl
push
push
pop
push
call
pop
pop
cmp
je
mov
mov
lea
jmp
movb
orl
movb
mov
movb
movb
movb
mov
movb
add
mov
add
cmp
jb
cmp
je
mov
cmp
je
mov
lea
lea
mov
mov
cmp
jl
mov
movl
jmp
push
push
call
pop
pop
test
je
mov
lea
mov
addl
lea
jmp
movb
orl
movb
andl
andb
movb
movb
andl
movb
add
mov
add
cmp
jb
incl
cmp
jl
jmp
mov
andl
test
jle
mov
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
shl
add
mov
mov
mov
mov
mov
push
lea
push
call
pop
pop
test
je
incl
incl
inc
addl
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
orb
jmp
cmp
jne
orb
push
lea
push
call
pop
pop
test
je
incl
jmp
orb
movl
inc
cmp
jl
pushl
call
xor
jmp
xor
inc
ret
mov
movl
or
call
ret
mov
push
push
mov
mov
test
je
lea
jmp
cmpl
je
lea
push
call
mov
add
add
cmp
jb
pushl
call
andl
pop
add
cmp
jl
pop
pop
ret
cmpl
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
add
add
cmpb
jne
pushl
call
andl
andl
movl
xor
pop
pop
pop
pop
ret
pushl
call
andl
or
jmp
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
movl
cmp
je
mov
addl
mov
mov
cmpb
jne
xor
cmp
mov
sete
inc
mov
jmp
incl
test
je
mov
mov
inc
mov
mov
movzbl
push
inc
call
pop
test
je
incl
cmpl
je
mov
mov
incl
mov
inc
mov
mov
test
je
cmpl
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
movb
inc
incl
test
jne
mov
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
movsbl
push
test
je
call
pop
test
je
mov
mov
incl
mov
inc
incl
mov
mov
incl
mov
jmp
call
pop
test
je
inc
incl
incl
mov
inc
jmp
test
je
movb
inc
mov
incl
mov
jmp
mov
pop
pop
test
je
andl
incl
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
mov
sub
push
push
mov
push
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
jne
xor
jmp
mov
cmp
je
inc
inc
cmp
jne
inc
inc
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
pushl
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
jne
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
push
mov
call
mov
pop
cmp
jne
push
call
jmp
pushl
push
push
call
add
push
call
mov
pop
pop
pop
leave
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
xor
cmp
push
sete
push
push
call
mov
test
jne
pop
ret
xor
inc
mov
pop
ret
cmpl
jne
push
xor
cmp
push
mov
jle
push
mov
add
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pop
pushl
push
pushl
call
pop
pop
pushl
call
andl
ret
ret
mov
push
mov
push
push
push
call
mov
test
je
mov
mov
push
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
test
je
mov
mov
test
jne
xor
jmp
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
add
cmp
jge
imul
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
pop
pop
pop
leave
ret
mov
push
mov
mov
cmp
jne
pushl
push
call
pop
pop
pop
ret
xor
pop
ret
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
jl
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
sub
mov
andl
andl
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
shl
or
mov
not
mov
pop
pop
pop
leave
ret
mov
push
mov
mov
push
xor
push
push
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
movl
push
push
push
push
push
call
add
or
jmp
cmpl
jne
push
call
pop
mov
push
call
pop
mov
cmp
je
mov
sub
mov
jmp
mov
movl
call
cmp
jne
push
push
pushl
call
mov
mov
call
ret
xor
mov
mov
push
call
pop
ret
mov
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
pop
pop
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
pushl
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmpl
jne
push
call
pop
test
jne
push
call
pop
pushl
call
pop
pop
ret
mov
push
mov
mov
mov
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
pop
ret
mov
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
mov
test
jne
push
lea
mov
mov
mov
mov
mov
mov
test
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
mov
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
add
imul
push
pushl
push
pushl
call
cmp
jne
xor
jmp
addl
mov
mov
imul
add
push
push
pushl
call
mov
cmp
je
push
push
push
push
call
mov
cmp
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
mov
cmp
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
mov
cmp
jbe
push
pop
mov
mov
cmp
jne
mov
cmp
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
mov
mov
cmp
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
imul
add
add
and
mov
sar
push
dec
cmp
push
push
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
jmp
mov
mov
and
and
or
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
mov
cmp
jb
cmp
jne
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
call
mov
mov
test
jne
xor
jmp
push
call
pop
mov
mov
mov
cmpl
je
mov
mov
mov
mov
cmp
je
mov
mov
and
and
or
jne
andl
mov
lea
mov
and
and
or
jne
incl
mov
add
jmp
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
lea
mov
test
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
mov
push
mov
mov
test
je
sub
cmpl
jne
push
call
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
xor
push
mov
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testl
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
jmp
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
mov
push
push
pushl
push
pushl
pushl
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
add
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
push
call
add
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
lea
pushl
push
push
pushl
pushl
call
mov
mov
add
neg
sbb
and
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
cmp
je
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
mov
xor
mov
mov
push
push
xor
push
mov
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
jmp
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
mov
add
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
call
add
cmpb
je
mov
andl
leave
ret
cmp
jne
repz
jmp
mov
push
mov
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
mov
push
xor
push
push
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
je
inc
dec
jne
cmp
je
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
sub
dec
add
dec
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
sti
mov
dec
add
mov
dec
add
mov
dec
add
mov
dec
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
dec
add
dec
add
mov
dec
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
dec
add
mov
dec
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
mov
dec
add
add
add
add
add
dec
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
dec
add
mov
dec
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
movzwl
and
cmpb
je
mov
andl
leave
ret
mov
push
mov
sub
push
pushl
lea
call
mov
lea
cmp
ja
mov
mov
movzwl
jmp
mov
sarl
lea
push
mov
and
push
call
pop
pop
test
je
mov
push
mov
mov
movb
pop
jmp
xor
mov
movb
inc
mov
push
pushl
pushl
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
andl
xor
jmp
movzwl
and
cmpb
je
mov
andl
pop
leave
ret
andl
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
pushl
call
pop
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
mov
add
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
xor
push
push
push
push
push
call
add
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
pop
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
sub
push
push
push
call
andl
cmpl
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
push
call
movl
push
mov
call
push
call
movl
push
mov
call
push
call
movl
push
mov
call
push
call
pop
mov
test
je
push
push
call
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
pop
pop
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
orl
jmp
mov
cmp
je
push
call
pop
test
je
call
mov
test
je
mov
cmp
je
push
call
pop
test
je
pushl
call
mov
pushl
call
pop
test
je
pushl
pushl
pushl
pushl
call
jmp
xor
pop
pop
pop
leave
ret
mov
push
mov
mov
push
xor
cmp
jl
cmp
jle
cmp
jne
mov
jmp
mov
mov
jmp
call
push
push
push
push
push
movl
call
add
or
pop
pop
ret
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
push
push
call
mov
xor
cmp
jbe
push
pop
xor
div
cmp
sbb
inc
jne
call
movl
push
push
push
push
push
call
add
xor
jmp
imul
mov
mov
cmp
jne
xor
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
mov
pushl
call
pop
mov
movl
call
mov
cmp
je
pushl
push
push
call
add
cmp
jne
push
push
pushl
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
mov
cmp
je
movl
jmp
xor
mov
push
call
pop
ret
cmp
jne
mov
cmp
je
movl
mov
call
ret
push
push
call
mov
test
jne
pushl
call
pop
jmp
mov
test
jne
push
call
pop
jmp
cmpl
jne
xor
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
movl
call
cmpl
jne
test
jne
inc
add
and
mov
push
push
push
pushl
call
mov
jmp
mov
mov
push
call
pop
ret
mov
test
jne
cmp
je
push
call
pop
test
jne
call
cmp
jne
mov
call
push
call
pop
mov
jmp
test
jne
call
cmp
je
movl
jmp
test
jne
inc
push
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
call
ret
call
jmp
test
jne
call
mov
call
push
call
mov
pop
mov
jmp
mov
push
push
xor
lea
pushl
call
add
pop
mov
cmp
jb
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
cmp
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
push
call
pop
mov
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
push
push
call
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
cmp
sete
mov
ret
mov
cmpl
jne
push
call
andl
movl
mov
call
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
test
jne
cmpl
je
mov
mov
movzwl
and
jmp
xor
test
je
xor
inc
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
pushl
push
call
add
pop
ret
push
mov
sub
mov
mov
mov
shr
pxor
jmp
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
mov
mov
pop
ret
push
mov
sub
mov
mov
cltd
mov
xor
sub
and
xor
sub
test
jne
mov
mov
and
mov
cmp
je
sub
push
push
call
add
mov
mov
test
je
add
sub
mov
xor
mov
mov
rep
mov
jmp
neg
add
mov
xor
mov
mov
rep
mov
mov
mov
add
sub
push
push
push
call
add
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
lea
push
push
pushl
movb
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
mov
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
xor
mov
mov
mov
cmp
je
mov
lea
push
push
call
mov
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
mov
movl
cmp
jne
pushl
call
mov
pop
inc
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
push
pushl
pushl
push
pushl
call
mov
cmp
jne
xor
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
lea
push
push
pushl
call
add
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
cmp
je
push
push
pushl
push
push
pushl
push
pushl
call
test
je
mov
jmp
mov
cmp
jne
push
push
push
push
push
pushl
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
pushl
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
pushl
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
push
call
add
or
jle
cmp
je
lea
mov
or
je
push
push
lea
xor
xor
xor
xor
xor
call
pop
pop
mov
or
je
js
push
pushl
call
add
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
mov
xor
xor
xor
xor
xor
call
mov
lea
mov
jmp
mov
jmp
mov
orl
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
push
mov
push
mov
cmpl
jne
cmpl
je
push
call
pop
test
je
pushl
push
call
pop
pop
pop
pop
ret
int3
int3
int3
mov
push
mov
push
xor
or
push
cmp
je
mov
lea
lea
mov
sub
and
cmp
je
test
je
mov
cmp
jb
mov
add
cmp
jb
push
push
call
add
test
je
testl
je
mov
mov
test
je
sub
and
mov
cmp
je
mov
cmp
jb
mov
add
cmp
jb
push
push
call
add
test
je
testl
je
mov
mov
cmp
jne
pop
mov
pop
pop
ret
pop
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
mov
mov
test
je
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
cmp
jb
cmp
jb
mov
mov
cmp
je
xor
xor
mov
mov
cmp
je
cmp
jae
cmpl
je
mov
inc
add
cmp
jbe
test
je
mov
mov
cmp
jb
cmp
jae
mov
and
mov
xor
mov
cmp
jge
mov
mov
cmp
jne
movl
push
call
add
test
je
mov
push
mov
call
add
test
je
mov
mov
sub
push
push
call
add
test
je
movl
test
jle
mov
mov
xchg
test
jne
mov
cmp
je
mov
lea
test
jl
cmp
je
sub
jns
jmp
mov
mov
test
jge
cmp
jge
inc
mov
lea
test
jle
xor
test
jl
lea
mov
mov
mov
mov
mov
mov
inc
cmp
jle
jmp
mov
mov
mov
xor
cmp
sete
mov
ret
mov
movl
mov
push
lea
push
push
call
test
je
cmpl
je
or
mov
mov
pop
pop
pop
pop
mov
pop
ret
inc
jmp
mov
push
call
add
test
je
testb
je
mov
sub
push
push
call
add
test
je
testl
jne
mov
push
mov
call
add
test
je
mov
mov
sub
push
push
call
add
test
je
mov
mov
xchg
test
jne
mov
mov
test
jle
lea
mov
cmp
je
dec
sub
test
jg
test
jne
cmp
lea
jg
mov
mov
mov
test
jl
mov
lea
mov
mov
mov
mov
mov
mov
add
sub
jne
mov
cmp
jge
inc
mov
jmp
mov
mov
mov
xor
xchg
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
or
rol
mov
ret
movl
mov
jmp
call
add
add
add
add
add
add
add
add
add
pop
add
add
add
addb
add
add
add
add
fadds
add
in
add
add
add
add
add
and
add
xor
add
inc
add
add
add
pop
add
add
add
mov
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
jbe
add
mov
add
add
add
add
add
add
add
add
add
add
cmp
add
dec
add
add
add
addb
add
add
add
in
add
add
or
add
sbb
add
xor
add
inc
push
add
push
push
add
fs
add
jbe
add
addb
add
pop
add
add
add
mov
add
add
sahf
movsb
insb
rolb
add
lock
add
add
add
dec
pop
dec
add
ja
add
fisttpl
push
dec
add
dec
add
dec
add
push
dec
add
add
add
pop
dec
add
dec
add
imul
outsb
and
arpl
je
outsl
outsb
add
add
insl
loopne
add
add
add
add
add
add
add
add
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
outsb
arpl
gs
outsl
imul
add
inc
add
dec
add
dec
add
add
add
add
add
add
add
outsl
fs
outsl
imul
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
xor
or
and
jo
imul
and
jae
insl
popa
fs
and
je
insl
jo
and
insb
outsl
popa
and
and
jb
outsb
je
insl
and
jb
jb
and
arpl
jb
arpl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
add
add
xor
xor
je
gs
jo
and
jne
and
dec
dec
and
fs
outsl
insl
and
jae
popa
jae
gs
bound
fs
imul
imul
and
imul
je
outsl
outsb
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
and
and
and
jae
and
gs
jns
je
and
jae
insb
je
outsl
data16
insb
insb
imul
dec
push
dec
dec
sub
imul
insb
jb
and
outsb
arpl
outsb
and
outsl
insl
and
outsb
popa
je
jbe
and
outsb
jae
jb
arpl
and
and
outsl
insl
and
dec
popa
imul
push
xor
xor
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
arpl
and
outsw
jb
popa
je
outsl
outsb
or
add
add
xor
xor
je
gs
jo
and
imul
imul
and
push
and
jb
and
outsb
and
arpl
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
cs
xor
xor
push
push
and
je
imul
imul
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
jo
jb
and
je
insb
outsl
popa
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
jb
js
je
jb
arpl
jae
add
jae
arpl
outsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
inc
push
xor
cs
dec
dec
add
and
insl
jo
gs
and
push
arpl
outsl
arpl
outsl
jb
add
add
inc
insb
popa
jae
and
gs
jb
push
jae
jb
jo
outsl
jb
add
add
and
jae
and
popa
jae
and
jb
jns
add
and
jae
and
popa
jae
and
arpl
jo
outsl
jb
popa
je
sub
and
and
arpl
jo
outsl
jb
add
add
outsl
arpl
and
popa
je
arpl
je
jb
popa
and
popa
jb
daa
add
popa
outsb
popa
gs
arpl
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
pusha
jbe
arpl
and
popa
jae
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
add
pusha
jbe
arpl
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
pusha
fs
popa
insl
imul
imul
jne
je
jb
outsw
jb
daa
add
add
pusha
fs
popa
insl
imul
imul
and
jb
daa
add
pusha
gs
je
jb
jbe
popa
jae
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jns
arpl
jae
jb
arpl
and
gs
je
jb
add
add
popa
outsb
popa
gs
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
insl
popa
outsb
popa
gs
arpl
and
outsb
jae
jb
arpl
and
gs
je
jb
add
add
insb
popa
arpl
outsb
je
fs
gs
pop
pop
and
outsl
jae
jb
daa
add
add
pusha
jo
popa
arpl
outsb
je
fs
gs
and
outsl
jae
jb
daa
add
pusha
outsl
insl
outsb
imul
jae
addr16
add
and
gs
pop
pop
add
add
outsb
gs
pop
add
pusha
insb
outsl
arpl
and
je
bound
arpl
jae
jb
arpl
and
outsl
jae
jb
daa
add
outsl
arpl
and
je
bound
add
push
push
dec
add
add
dec
add
fs
jb
je
jb
imul
outsl
jo
and
outsb
jae
jb
arpl
and
outsl
jae
jb
daa
add
pusha
gs
je
jb
jbe
popa
jae
and
outsb
jae
jb
arpl
and
gs
je
jb
add
pusha
gs
je
jb
fs
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jae
jb
arpl
and
gs
je
jb
add
add
pusha
jbe
jb
jne
insb
and
jo
popa
arpl
outsb
je
insl
popa
jo
add
pusha
jbe
arpl
and
popa
jae
and
outsb
jae
jb
arpl
and
gs
je
jb
add
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
jbe
arpl
and
outsb
jae
jb
arpl
and
gs
je
jb
add
add
arpl
popa
jb
fs
gs
outsb
and
jae
jb
arpl
daa
add
add
pusha
fs
jne
je
arpl
jae
jb
arpl
and
outsl
jae
jb
daa
add
add
arpl
and
gs
outsb
and
jae
jb
arpl
daa
add
add
pusha
jbe
popa
jae
and
je
jne
je
jb
add
pusha
jae
jb
outsb
addr16
add
add
pusha
insb
outsl
arpl
and
popa
je
arpl
addr16
jb
daa
add
add
pusha
je
jo
outsl
data16
add
add
pusha
jbe
popa
insb
insb
daa
add
bound
insb
gs
add
add
data16
bound
add
add
add
jl
add
es
cmp
add
cmp
add
sub
add
jl
add
es
jl
add
pop
add
add
add
sub
add
sub
add
ds
add
cmp
add
cmp
add
and
add
add
add
add
add
add
sub
add
sub
add
sub
jo
jb
je
jb
add
add
add
and
add
and
add
cmp
add
ds
and
gs
add
outsb
gs
add
add
jne
popa
insb
imul
pop
jb
jae
jb
arpl
pop
pop
jo
jb
xor
pop
pop
arpl
popa
insb
insb
add
add
popaw
jae
arpl
insb
add
pop
pop
je
imul
add
jae
arpl
insb
add
add
jo
jae
popa
insb
add
add
pop
pop
arpl
insb
add
bound
gs
add
add
add
add
fmuls
fmuls
fmuls
fmuls
fmuls
fmuls
xlat
dec
add
xlat
dec
add
xlat
dec
add
xlat
dec
add
ret
sbb
dec
add
rorb
rorb
rorb
rorb
xlat
dec
add
xlat
dec
add
ret
rcl
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
dec
add
xlat
dec
add
dec
add
xlat
dec
add
dec
add
xlat
dec
add
dec
add
xlat
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
aad
add
aad
add
dec
add
add
dec
add
dec
add
add
dec
add
aad
add
aad
add
aam
add
aam
add
aam
add
aam
add
dec
add
aam
add
dec
add
rorl
rorl
rorl
rorl
rorl
rorl
ret
or
add
outsb
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
jl
mov
xor
or
call
cltd
push
push
fisttps
es
mov
fldcw
jl
outsb
stos
bound
push
icebp
push
movsb
outsl
cmpsb
cmp
xchg
clc
scas
mov
out
mov
inc
adcl
lea
mov
adc
push
cld
es
cmc
das
jg
xor
xchg
pushf
ss
adc
insb
sub
dec
pop
xchg
push
pop
xchg
cmpsb
cmp
jne
jns
stc
mov
ds
sub
pop
sub
xchg
outsb
push
arpl
add
and
insb
outsl
arpl
imul
push
pusha
cmpsb
cmp
and
dec
loope
bound
cmpsb
xor
mul
mov
add
lods
daa
mov
sbb
nop
mov
add
add
pop
ret
ljmp
nop
mov
lcall
aas
add
popa
insb
scas
enter
and
jno
ss
insb
dec
or
jne
daa
push
rcrl
aaa
lcall
aas
sbb
adc
out
icebp
cmpsb
sbb
imul
sbb
lock
ljmp
jns
or
gs
inc
cld
dec
mov
mov
pop
inc
mov
add
dec
add
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
xor
xor
sub
add
dec
add
fisttpl
add
add
add
add
add
add
fisttpl
fisttpl
fmull
add
add
dec
add
add
add
add
add
incl
add
add
add
dec
add
lock
add
incl
add
add
add
xor
dec
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
pop
fmull
add
add
lock
add
fmull
add
add
cld
dec
add
add
add
add
add
add
add
fmull
fmull
fisttpll
add
add
cld
dec
add
add
add
add
add
incl
add
add
add
mov
add
add
add
add
add
add
fisttpll
fisttpll
add
add
add
add
add
incl
add
add
add
lock
add
add
push
dec
add
add
add
dec
add
add
add
add
dec
add
add
add
dec
add
add
add
incl
add
add
add
pop
push
dec
add
add
add
lock
add
add
add
incl
add
add
add
lock
dec
add
add
add
incl
add
add
incl
add
add
decl
pop
dec
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
pop
dec
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
dec
add
add
add
incl
add
add
incl
add
add
incl
add
add
imul
add
add
dec
add
incl
add
add
incl
add
add
incl
add
add
push
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
je
add
add
add
incl
add
add
incl
add
add
decl
ja
add
ja
add
add
add
incl
add
add
incl
add
add
incl
add
add
jnp
add
add
add
incl
add
add
add
jmp
jge
add
jge
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
cmpsb
dec
add
add
add
incl
add
add
incl
add
add
incl
add
add
stos
dec
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
ljmp
scas
dec
add
add
add
incl
add
add
incl
add
add
std
scas
dec
add
scas
dec
add
add
add
incl
add
add
incl
add
add
jmp
dec
add
dec
add
add
add
call
inc
dec
add
jmp
dec
add
dec
add
incl
add
add
add
add
jp
dec
add
vmulsd
push
out
popf
repnz
and
xor
xchg
inc
xchg
orb
fcom
push
aas
sbb
popf
lds
add
call
add
add
add
add
add
add
add
add
add
pop
add
add
add
addb
add
add
add
add
fadds
add
in
add
add
add
add
add
and
add
xor
add
inc
add
add
add
pop
add
add
add
mov
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
jbe
add
mov
add
add
add
add
add
add
add
add
add
add
cmp
add
dec
add
add
add
addb
add
add
add
in
add
add
or
add
sbb
add
xor
add
inc
push
add
push
push
add
fs
add
jbe
add
addb
add
pop
add
pop
or
leave
decb
add
push
add
popl
add
les
js
pushf
std
sub
add
cld
add
jmp
mov
inc
mov
add
sub
or
adc
sbb
add
cmpsl
push
ljmp
pop
shr
xchg
add
or
cwtl
pcmpgtw
hlt
push
or
aas
fildl
add
and
and
iret
psubw
add
jmp
outsl
jns
movsl
fiadds
das
sbb
popf
mov
je
es
mov
push
add
les
add
dec
pop
pop
into
pop
add
mov
mov
imul
stc
or
mov
and
add
lahf
or
sub
jbe
push
insb
push
out
gs
add
mov
addb
cmp
xlat
addb
sub
sub
xor
lret
ret
in
add
arpl
jmp
stc
dec
mov
pop
jg
in
xor
test
add
xchg
icebp
and
sub
test
jg
sbb
pop
or
push
mov
add
cwtl
ja
dec
sub
or
adc
inc
add
dec
test
add
aaa
add
push
jnp
dec
outsb
test
add
push
pop
or
push
add
cmp
push
repz
pop
ret
adc
test
cld
cltd
add
jecxz
pop
add
sub
repnz
jbe
insl
or
add
loop
in
sub
add
ljmp
push
addl
dec
xor
add
dec
sti
scas
insb
xor
out
mov
dec
inc
cmc
sub
dec
popf
push
add
insl
push
xchg
out
mov
shlb
push
dec
mov
or
add
mov
mov
bound
mov
lcall
data16
es
and
sub
mov
subb
rorl
add
imul
movsl
xchg
ret
dec
xor
xchg
jno
test
in
sub
insl
sub
outsb
int3
arpl
rcr
in
pop
bound
iret
adc
add
sti
decb
cli
pushf
pop
add
dec
cmp
xchg
xchg
movsl
add
negb
ds
das
arpl
xor
lods
movsb
add
outsl
lock
mov
lret
shlb
add
imul
and
aaa
enter
test
int3
inc
mov
mov
jbe
orl
addr16
cltd
nop
inc
dec
xchg
or
mov
add
sub
add
sahf
daa
mov
dec
clc
push
lcall
jecxz
dec
push
mov
push
inc
jbe
xor
ror
add
jge
shl
mov
cmc
cmpb
add
sahf
and
push
dec
add
pop
in
test
xchg
cmc
sbbb
and
add
movsl
into
mov
lahf
pop
cmp
jle
mov
add
xchg
xor
push
ds
and
add
push
push
ljmp
mov
lock
andb
inc
movsl
xor
add
test
iret
sub
sarl
cli
xorb
adc
and
adc
xor
cmp
arpl
fwait
insb
xchg
sub
add
pop
mov
inc
mov
pusha
lahf
enter
lds
outsb
xor
cmp
cmp
jmp
imul
push
xor
mov
out
ljmp
mov
cld
test
sbb
add
cld
pop
test
jl
or
pushf
in
fbld
shr
sub
inc
lods
inc
loopne
call
lods
call
lods
inc
add
in
cmpb
stos
mov
sarl
data16
aad
enter
test
add
and
lods
mov
add
nop
pop
add
ss
into
sub
jl
sub
xor
and
add
dec
pop
cwtl
enter
jle
jecxz
add
int
add
cmpsl
lret
out
addr16
das
nop
mov
arpl
add
xchg
sub
outsw
popf
sub
mov
sbb
out
add
loope
jle
imul
cmp
dec
test
pop
lea
sub
out
add
push
mov
sbb
xchg
sub
or
sub
negl
fmul
repz
lcall
add
mov
add
inc
mov
adc
dec
jnp
iret
jns
outsl
in
sub
jns
addb
and
push
sbb
mov
pushf
cmp
add
cld
loopne
lock
out
fdivrl
fdivs
or
fs
mov
jg
pop
push
shr
es
push
cli
hlt
imul
push
test
dec
pusha
sahf
sbb
pop
scas
pusha
loopne
push
mov
in
push
rorb
push
fbld
or
cmp
xor
jp
mov
push
sarl
push
inc
int3
adc
xchg
jmp
int3
xor
xor
cs
or
das
dec
xchg
insb
dec
mov
ret
xor
int
rol
inc
test
xor
lods
push
and
cmp
out
and
pop
stos
nop
dec
dec
add
lea
sbb
pushf
push
lcall
sbb
pop
push
call
push
adc
xlat
add
stc
cmpsb
dec
sbb
icebp
add
mov
cmp
mov
xchg
pop
aas
add
add
fimull
rorl
add
cs
inc
push
bound
pop
popa
insb
insb
outsl
arpl
je
inc
inc
add
dec
add
add
add
aas
inc
push
gs
gs
imul
inc
inc
add
add
add
fimull
rorl
add
cs
inc
push
je
jo
pop
imul
add
add
rcr
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
dec
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
dec
add
incl
add
add
add
add
add
nop
cmc
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
sti
dec
add
lret
nop
into
dec
add
rorb
cli
dec
add
add
add
lock
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
add
add
add
add
add
add
enter
or
add
pushf
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
jl
dec
add
add
add
dec
add
add
add
dec
add
add
add
lds
add
add
lds
add
add
add
pop
lds
add
add
add
adc
dec
add
add
add
add
add
dec
add
add
add
add
add
ret
js
add
rol
dec
add
add
rol
add
add
mov
dec
add
add
add
add
pushf
ret
rcr
add
jnp
add
add
add
incl
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
out
mov
or
dec
add
int3
dec
add
rorb
rorb
rorb
rorb
rorb
rorb
rorb
rorb
rorb
rorb
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
rorl
add
add
add
add
add
add
dec
add
add
add
dec
add
add
nop
add
nop
add
nop
add
nop
add
nop
add
nop
add
nop
add
jg
jg
jg
jg
and
dec
add
add
add
add
add
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
add
icebp
incl
add
add
push
add
push
add
sti
dec
add
incl
add
add
add
add
incl
add
add
add
add
add
add
lcall
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
lcall
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
insb
add
add
add
add
fimull
fimull
add
jb
gs
xor
cs
insb
add
push
add
add
aas
inc
push
inc
gs
insb
outsl
arpl
inc
inc
inc
dec
popa
jb
ja
jb
dec
inc
inc
inc
add
add
push
add
add
aas
inc
push
dec
inc
gs
insb
outsl
arpl
dec
popa
jb
ja
jb
dec
inc
inc
inc
add
pushf
fisubrs
push
add
or
xor
js
jne
es
mov
push
outsl
cmp
sbb
cmpw
lahf
dec
xor
movsl
in
rolb
xchg
stos
fistpl
mov
pop
xor
js
ds
cwtl
out
fsubrl
jno
in
lret
loopne
xchg
lcall
cmp
imul
mov
push
push
xchg
dec
mov
popf
sub
in
adc
pop
or
jne
cmpsb
push
test
push
or
sbb
inc
lods
ds
cmp
fwait
cmpsb
es
lahf
sbb
inc
dec
imul
cwtl
out
movsb
jae
jns
cli
xchg
mov
dec
adc
int3
insb
jae
push
or
shlb
repnz
push
test
lret
mov
or
xor
dec
mov
loopne
sub
cmpps
jecxz
outsl
pop
lret
js
sbb
pushf
dec
aaa
add
push
ss
js
adc
test
scas
mov
mov
inc
fwait
and
jo
xchg
push
mov
invd
xchg
popa
dec
cmp
aad
xchg
inc
divb
out
lods
push
sub
loope
cmc
push
aam
add
outsl
and
out
fsts
xchg
scas
inc
bound
ds
inc
pop
mov
xchg
push
test
dec
fld
jmp
pop
fs
xorl
fidivl
adc
inc
ds
jb
xor
int
scas
sub
or
or
insl
cmpsb
adcb
push
dec
cmpsl
cmp
clc
xchg
push
sbb
and
push
dec
loope
scas
adc
mov
pop
imul
daa
mov
movsb
dec
add
add
arpl
test
hlt
xchg
add
cmp
jge
lldt
jmp
push
xchg
xchg
dec
pusha
add
flds
test
mov
ljmp
add
inc
mull
xor
jbe
dec
pop
test
setle
mov
icebp
push
sbb
cmp
or
popf
or
pop
das
or
and
inc
ds
add
jl
rol
loop
mov
inc
push
mov
sti
loopne
movsl
add
movsb
or
jmp
xchg
aas
shlb
jno
mov
mov
push
mov
dec
pop
inc
jbe
dec
pusha
int
pop
mov
jl
dec
xchg
jge
sti
in
jecxz
in
pop
test
lock
push
xchg
mov
xchg
jne
xor
sbb
adc
and
mov
mov
ja
lret
mov
mov
pop
dec
negl
mov
int3
shll
push
repz
xchg
push
aad
xchg
mov
xchg
and
jmp
mov
mov
dec
xor
hlt
add
xchg
cmpsl
xchg
rorb
xchg
or
jno
fwait
xchg
mov
ret
xchg
and
repnz
inc
xor
mov
push
sub
push
das
mov
shl
mov
mov
and
jno
xchg
or
cs
pop
dec
lea
push
daa
push
jmp
ds
les
push
mov
aas
push
and
adc
cmp
int3
cmp
xchg
push
mov
xchg
test
popf
lea
cmp
lcall
inc
mov
lret
dec
pushf
add
addl
push
scas
mov
mov
icebp
inc
cmp
push
xor
jbe
dec
cmp
insl
and
lahf
push
jno
pop
jo
aas
xchg
cmp
cmpsl
mov
pop
imul
pop
test
inc
icebp
push
xchg
mov
movsl
mov
dec
jbe
cwtl
xor
jnp
sub
repz
cltd
je
sbb
jns
and
and
mov
out
aad
gs
mov
aad
push
bound
ljmp
xchg
mov
popf
jge
clc
frstor
out
aas
inc
dec
aaa
cs
dec
adc
test
push
fimull
jns
xlat
push
test
lea
inc
icebp
xchg
fdivr
shll
arpl
push
pop
fs
subl
fwait
sbb
ds
push
and
cmp
sub
push
mov
jo
cltd
mov
mov
out
push
stc
inc
ss
inc
pop
pop
dec
cmpsl
movsb
add
test
inc
push
aad
call
xor
cmpsl
and
lock
add
adc
das
mov
mov
enter
testb
mov
in
push
lcall
imul
cmpsl
dec
popl
clc
dec
fmull
or
imul
mov
jns
addr16
pop
fnstcw
cmp
xor
inc
aad
xor
or
aad
xor
cmpsb
shlb
mov
mov
pop
imul
aaa
fs
lods
lcall
fstpl
xor
push
pop
scas
les
loope
push
cmp
mov
mov
jne
xchg
push
in
ljmp
add
ss
jno
jo
push
mov
pop
jmp
test
push
lea
jmp
mov
dec
enter
fwait
and
mov
incl
xor
mov
jb
cmpsb
push
push
xchg
and
push
fisttps
jecxz
test
cmp
int
fsub
sub
jbe
and
lret
inc
mov
inc
dec
cmp
mov
jl
test
into
sub
xchg
jne
jnp
aam
and
push
cli
adc
scas
push
or
in
xchg
add
rep
pop
loopne
rcr
lods
fisttpll
pop
in
cmp
add
fistpll
jae
gs
push
mov
inc
mov
or
jmp
lea
mov
sbb
xchg
inc
mov
pusha
inc
xor
stos
pop
inc
in
jne
and
repnz
mov
in
inc
pop
inc
les
sub
add
jg
cmp
sbbb
aam
pusha
inc
adc
dec
dec
sbb
or
in
mov
jae
sahf
fiadds
adc
fisubrs
lret
repz
cwtl
xchg
mov
xchg
flds
shlb
aas
and
sbb
fwait
clc
out
stos
leave
or
fists
out
nop
mov
sub
mov
shl
std
cmc
xchg
loopne
mov
mov
cmp
adc
sbb
stc
push
adc
flds
pop
mov
push
out
pop
das
push
adc
push
in
out
fdivp
adc
iret
in
mov
lock
fdivrs
mov
aas
push
push
jge
add
push
xor
xchg
mov
jae
push
dec
daa
xorb
shll
fbstp
mov
popa
inc
in
in
cmc
testl
cli
jmp
scas
call
cmp
lods
cltd
lea
mov
hlt
shlb
pop
sub
push
aam
push
lods
rcl
push
addr16
pushf
jb
adc
ljmp
sbbb
stc
push
lahf
mov
idivb
and
bound
pop
je
add
lret
sbb
scas
test
imul
jnp
jbe
andl
imul
fisubrl
in
mov
insb
xchg
pop
fwait
scas
or
lret
fstp
cli
xchg
nop
out
dec
adc
nop
fdivr
push
ds
sub
lahf
sub
fstps
sub
jp
pop
or
es
mov
adc
movsb
icebp
scas
push
rclb
push
adc
dec
sbb
xchg
push
pop
mov
in
xchg
rclb
mov
popa
mov
std
jb
icebp
icebp
jg
xchg
movsb
or
cwtl
jge
negb
mov
fisubrs
pop
mov
push
iret
push
and
sbb
xchg
daa
icebp
leave
mov
lock
jge
shrl
stos
ja
pop
pusha
loope
lock
xor
nop
cmpsl
sbb
enter
mov
add
popf
inc
push
std
mull
ficompl
jne
mov
push
into
or
inc
les
pop
dec
add
lods
mov
mov
mov
jmp
jno
aas
repz
lock
xchg
leave
cmc
out
adc
repz
enter
push
add
fxtract
lods
and
in
incl
lods
pushf
lods
xchg
mov
jmp
dec
push
out
incb
in
dec
jle
daa
std
adc
add
sti
enter
dec
call
in
sbb
sub
mov
lods
scas
pop
dec
icebp
xchg
test
push
dec
cmpsb
adc
jb
out
xchg
or
sahf
insb
jnp
and
add
add
ret
mov
int3
xchg
and
aaa
pusha
cmp
push
or
movsb
insl
shll
rcll
out
enter
cwtl
stc
adc
jne
inc
mov
ja
push
mov
jmp
push
sub
cwtl
insl
aaa
push
add
or
mov
std
pop
in
std
push
push
push
cwtl
push
mov
aam
lock
xchg
lcall
xchg
in
cli
and
sbb
lods
into
mov
inc
pop
mov
jmp
inc
scas
fwait
mov
es
inc
movsl
int
out
decb
jnp
xchg
mov
jnp
icebp
push
or
xchg
cmc
das
mulb
lcall
push
imul
test
in
inc
daa
imul
popa
in
sub
lods
xor
cwtl
mov
dec
imul
and
stos
cld
stos
or
jmp
push
lahf
scas
in
out
repz
and
fwait
mov
loopne
xlat
fidivs
imul
into
stos
nop
cwtl
cld
clc
jp
outsb
sbbb
sbb
daa
jno
mov
and
outsl
imul
and
test
divb
outsb
mov
sahf
popf
aad
out
mov
out
cmp
inc
xchg
int3
callw
and
cmp
and
insb
fildl
mov
ret
inc
gs
aam
sbb
jmp
sub
jge
out
outsl
test
lcall
mov
pop
fsubs
int
push
and
sbb
in
pushl
out
lahf
cmp
xorb
push
jl
mov
adc
push
out
dec
into
in
push
pop
cmp
push
lods
shr
lret
into
xchg
mov
xor
adc
hlt
xor
mov
mov
rcrl
ja
add
popf
jae
sahf
jecxz
jl
loopne
dec
mov
cwtl
mov
mov
aaa
xor
pushf
movl
mov
mov
mov
push
lea
jmp
movb
lea
jge
dec
mov
movsbw
bts
movzbw
shl
mov
cmc
cmp
pusha
mov
lea
je
aad
aam
mov
pushf
movl
push
mov
call
jp
xchg
fcoms
xchg
ja
andl
xor
sti
adc
sub
add
mov
outsb
xchg
stc
inc
pop
cmp
mov
push
xor
sub
jg
shll
cld
fdivl
pop
test
or
stos
add
in
shll
lret
fsubs
idivl
lods
mov
add
push
pop
adc
ss
jae
pop
jne
daa
jg
jb
test
pop
cli
daa
xchg
and
clc
daa
loope
push
rorl
rcr
pop
mov
jbe
les
hlt
ja
fimuls
xor
popa
sbb
jns
fst
sbb
xchg
add
out
push
addr16
cmp
iret
sub
in
jne
jns
arpl
jp
ror
fadds
int
arpl
push
arpl
out
movsb
xchg
mov
sbb
fildll
pushl
dec
outsl
shll
xchg
sbb
cmpsl
lods
movsl
xor
out
imul
int
test
in
icebp
adc
xor
ret
pusha
pushl
movl
movl
call
clc
shr
add
shl
shr
mov
test
test
pusha
push
sub
jmp
mov
movb
push
lea
push
push
lea
jmp
push
flds
jae
sar
icebp
pop
imul
inc
aam
cmp
and
stos
mov
push
adcl
jmp
jle
xlat
insl
sub
jbe
repnz
mov
xor
imul
rclb
or
fcmovnu
es
xlat
ja
dec
test
pop
mov
call
mov
mov
push
lds
cmp
or
mov
pop
cmp
mov
or
inc
mov
icebp
aad
mov
inc
lcall
lods
scas
scas
sub
xchg
mov
ljmp
std
mov
data16
in
pop
xchg
mov
filds
aaa
add
fistpll
xor
inc
sahf
xchg
imul
insl
push
cs
adc
add
in
scas
push
mov
lahf
jle
pop
scas
adc
shrd
mov
mov
pop
cwtl
divb
cmpsb
sbbb
fidivs
iret
and
insl
fsub
std
mov
or
popf
jo
or
xlat
subl
mov
mov
jno
add
in
xor
in
add
pushl
pop
mov
xor
popf
jno
idivb
sbb
ljmpw
and
xor
mov
mov
jg
push
inc
faddl
popf
jno
jns
jmp
xor
sti
pop
or
dec
fwait
xchg
jae
xchg
add
cli
fisttpll
push
cmc
xor
mov
dec
adc
mov
arpl
push
cs
xor
xchg
clc
mov
xchg
cs
jo
adc
lahf
mov
sub
imul
mov
add
out
ret
rclb
sbb
fildl
aas
in
cmp
enter
mov
pop
xor
jecxz
ja
sbb
inc
and
mov
insl
xor
lock
xchg
pushf
lods
enter
adc
dec
dec
popf
mov
int
fsubrl
add
xchg
outsb
or
dec
add
pop
xchg
scas
negl
stc
sbb
sbb
cmp
and
push
outsb
xchg
lods
enter
adc
sub
jns
fbstp
js
cmp
shlb
aas
xchg
sub
add
jl
push
enter
cld
adc
xchg
vpunpcklwd
fmulp
lds
inc
pop
outsl
outsl
mov
or
push
pxor
dec
mov
adc
or
inc
lret
cmpsb
add
rorb
cmp
sbb
or
xchg
leave
xchg
gs
fbld
ljmp
cli
loop
push
ss
pop
dec
psubusb
test
jbe
movsb
mov
movsb
cmc
or
or
mov
icebp
push
xchg
jl
xstore-rng
cmpsl
inc
push
dec
push
scas
daa
mov
fists
lock
jae
push
mov
mov
xchg
cmp
ret
popf
outsb
xchg
add
in
in
test
xlat
or
lock
xor
cltd
xor
enter
jo
push
aam
movsl
mov
outsb
xchg
and
fnstcw
in
test
sbb
dec
lock
sar
sub
popf
outsb
xchg
dec
lea
out
xor
push
cmp
cld
cs
sti
insb
fadds
mov
shlb
mov
ss
pop
cmpsl
test
rep
out
pop
mov
pusha
or
mov
stos
or
in
into
test
sbbl
pop
xor
pushf
mov
shrb
adc
push
jg
and
xor
mov
int
xchg
sarb
dec
fistpll
fidivl
xchg
pop
sub
push
push
mov
popa
or
jg
mov
repnz
lcall
xlat
outsb
test
sub
testb
fiadds
pusha
in
cmpsl
in
mov
sbb
xor
lcall
jno
push
cltd
ss
dec
push
mov
mov
icebp
into
out
arpl
and
std
cmc
mov
mov
popf
fstl
rclb
pop
pop
sbb
jno
outsl
mov
xor
ret
jg
sbb
or
add
jo
or
fwait
dec
mov
test
push
mov
arpl
out
xor
and
sbb
rolb
mov
test
stos
inc
jb
sbb
mov
in
lcall
int
ja
imul
scas
xor
subb
daa
aas
nop
inc
hlt
xchg
mov
mov
test
nop
or
movsl
jbe
sub
in
push
or
popf
add
adc
push
call
ret
cmp
lds
ss
push
jle
imul
xchg
fildl
sbb
in
stc
les
jbe
imul
stos
jp
imul
sbb
cs
sbb
imul
xchg
jecxz
mov
loop
mov
cmp
scas
xchg
icebp
jb
stos
jne
mov
mov
pop
es
sbb
lods
iret
xor
sub
arpl
cmpsl
inc
mov
movsl
inc
fsubrs
scas
vmovsd
outsl
cmp
daa
addb
lds
into
sbb
nop
mov
test
mov
aam
mul
adc
sbb
mov
lret
fimuls
movsb
stos
xor
pop
rorb
adc
cltd
insb
and
push
fneni(8087
unpckhps
xor
pop
lea
lahf
into
push
push
push
stos
lret
ljmp
outsl
int
xor
insl
cmp
mov
cmp
dec
push
test
dec
insb
cmp
sbb
iret
insb
iret
sub
mov
out
scas
pop
pop
and
mov
mov
leave
add
add
out
mov
jl
ltr
adc
pop
addb
jns
xchg
filds
movsl
sub
fdiv
loope
cmp
sbb
mov
gs
jb
mov
pop
lret
into
mov
or
mov
test
ret
inc
xchg
cmp
rclb
push
mov
andb
test
nop
insl
shll
pop
sti
cmp
dec
and
dec
scas
jl
jns
push
adc
add
loop
sub
sub
xor
sub
sahf
push
push
stos
cld
mov
mov
je
aad
push
xor
dec
mov
or
addr16
out
inc
test
lcall
sbb
loop,pn
into
jp
aas
rcll
sbbb
push
xchg
loopne
cli
xor
in
loopne
cwtl
sbb
adc
add
imull
adc
cltd
call
and
imul
popa
xchg
add
sub
adc
fsubrs
xchg
les
jo
push
arpl
mov
js
out
sbb
lods
mov
jne
cltd
scas
cmp
pop
adc
push
in
and
add
loope
push
pop
daa
ja
jns
inc
stc
bound
in
movsl
mov
push
mov
xor
nop
pop
loop
and
push
xchg
insl
ror
push
rolb
sub
jnp
or
popf
push
adc
dec
gs
cmpl
or
xchg
xor
push
inc
cwtl
ljmp
orb
jnp
lret
or
fwait
int3
mov
or
adc
push
cmp
mov
inc
and
arpl
cmpsb
movsl
ja
addr16
gs
jno
lods
sub
out
cld
lods
jg
stc
movl
xchg
or
sub
dec
out
mov
aaa
inc
jecxz
addb
repz
fidivl
xor
outsb
sub
ficompl
rcrb
jns
mov
push
or
and
daa
lock
cmp
lahf
jg
cmp
leave
mov
push
insl
aas
call
mov
hlt
dec
subl
int
jae
in
add
cwtl
and
aad
dec
add
jns
and
mov
push
loope
push
fstpt
add
xor
xchg
xor
cmp
xlat
lret
popa
and
dec
imul
shll
ficompl
daa
mov
pusha
fstpl
adcl
stc
nop
std
xchg
out
dec
mov
std
cmp
cmp
test
jae
xor
pop
shll
stos
push
jg
or
and
int
xor
adc
jne
and
pop
lret
popf
push
mov
sti
mov
inc
sahf
or
mov
or
popf
push
idivl
adc
jno
icebp
xchg
xor
jne
dec
iret
or
mov
mov
xchg
jl
sbb
cmpsl
cmpsl
dec
ficompl
movsl
cmpsl
lcall
stos
inc
push
mov
ljmp
adc
pop
repnz
push
rclb
hlt
stos
shl
pop
test
xor
mov
pop
cltd
pop
push
stos
rcrb
iret
daa
mov
mov
cmc
dec
or
int
mov
push
mov
push
test
movsl
sub
mov
pop
js
dec
and
inc
push
mov
mov
lds
pop
out
repz
lods
pop
cmp
test
sbb
dec
cld
je
pop
rcrl
mov
cmc
pusha
mov
andl
mov
daa
pop
std
cmpsb
adc
adc
loopne
ljmp
sub
sbb
pop
add
pop
dec
and
pop
xchg
sbb
lods
xchg
lret
mov
mov
xlat
mov
incb
out
hlt
fucomp
xchg
ds
mov
xor
push
jmp
add
push
xor
pushf
mov
movb
movb
call
enter
stos
lret
mov
dec
pop
mov
loope
int
adc
dec
adc
cmp
mov
clc
mov
icebp
adc
imul
push
sbb
lods
mov
lahf
lcall
pop
cmp
add
daa
addr16
jb
sbb
add
jp
in
scas
mov
mov
and
hlt
xchg
xchg
stos
test
loop
enter
fnstcw
mov
daa
lret
or
xchg
fcmovb
or
cmp
xorb
xchg
sahf
addb
mov
lods
pop
mov
jo
fs
xor
xor
xlat
mov
mov
push
jo
mov
insb
push
push
mov
stos
pop
lret
notb
xor
ds
out
xor
xchg
cmp
pop
mulb
mov
aad
xor
fildl
cmp
pop
orl
jne
inc
add
notl
and
cmp
push
fcomip
mov
cmpsb
or
cli
sub
or
adc
add
mov
subb
sbb
xchg
dec
sub
sti
jle
dec
js
dec
std
inc
shlb
cbtw
mov
jecxz
out
dec
bound
xor
xor
mov
xor
and
or
popf
inc
pushf
xchg
in
mov
sti
in
cmc
mov
xor
push
dec
bound
jmp
pop
scas
mov
jae
in
movsl
pop
add
std
fs
fs
mov
gs
ds
jno
sti
movsb
xchg
xor
std
pusha
xchg
imul
loop
cmpsb
sub
or
xchg
mov
out
inc
cmp
out
add
pop
xor
jl
pop
cmp
test
rorl
push
cmp
dec
into
inc
jns
test
repz
add
pop
pop
imul
pop
lret
out
sbb
and
xchg
loope
push
dec
fs
and
mov
clc
fstpt
mov
mov
hlt
xor
stos
popa
push
aad
aam
nop
push
gs
push
mov
int
loope
mov
xor
je
xorl
adc
adc
mov
or
and
call
xchg
clc
movsb
jmp
stos
mov
mov
test
mov
xlat
and
xor
adc
ja
inc
pop
ljmp
cltd
or
in
repnz
mov
testl
cltd
mov
pusha
lea
pop
rcrl
aaa
scas
mov
mov
fs
xor
rolb
outsb
xchg
pushf
lcall
loop
inc
xchg
scas
inc
and
cmp
push
pinsrw
xor
in
push
pop
adc
sbb
cmp
mov
xchg
call
arpl
aas
sub
rcrl
inc
setns
mov
bt
sbb
mov
lea
not
lea
xadd
rcl
lea
shld
ror
mov
inc
mov
jmp
movl
jae
pusha
mov
pushl
movl
pushf
lea
jmp
pusha
mov
bt
add
push
stc
cmc
bt
sub
stc
mov
jmp
fs
cs
jp
and
mov
xchg
int
mov
push
pop
dec
mov
mov
jmp
xchg
push
out
dec
sbb
mov
sub
aam
xchg
sarl
sub
insl
orl
xchg
and
mov
mov
mov
hlt
ret
aaa
test
add
mov
inc
mov
sbb
jo
xor
or
int
adc
push
je
enter
out
ret
push
xor
push
stos
cmc
imul
cmc
xchg
out
daa
stos
jne
jnp
pop
or
xchg
lds
fsubrs
push
popa
jno
into
push
iret
imul
inc
test
popa
mov
das
shlb
mov
test
pop
add
mov
adcl
dec
ficomps
mov
cwtl
inc
sbb
fidivrs
popf
ja
fsubrs
mov
mov
jle
adc
in
aam
bound
clc
je
scas
pop
jp
inc
int3
push
and
xchg
ljmp
movsb
cmp
js
push
and
insb
jbe
push
insl
adc
push
push
inc
clc
sub
push
xchg
cmp
add
xor
lods
dec
mov
hlt
mov
or
sub
fistpl
popf
outsb
idivb
cmpsl
adc
mov
and
xchg
mov
mov
push
sub
inc
xor
adc
or
inc
xchg
lcall
les
popf
popa
ret
cmc
mov
std
lahf
movsl
pushl
xchg
daa
call
popf
popa
je
push
add
or
inc
mov
cs
cli
popa
pop
out
jne
jmp
aam
xchg
jno
popf
popa
fmul
xor
bound
stos
cmp
jne
roll
inc
ret
ret
not
push
add
inc
cmp
adc
push
or
pop
mov
icebp
lret
sub
cmp
imul
jb
add
jae
lret
es
lret
jp
sbb
and
push
pop
pop
cmp
mov
ja
cltd
pop
lcall
mov
addb
fs
jecxz
xor
and
in
cmp
cmc
cmp
push
arpl
push
hlt
add
xor
rolb
cmc
nop
xor
shl
in
std
inc
or
into
lds
add
inc
mov
xchg
lods
xor
repnz
push
adc
sbb
mov
lahf
xlat
xchg
int
popf
pusha
movsl
clc
je
cmp
cltd
fiaddl
sahf
xchg
movsl
lahf
jno
xor
pushf
test
jmp
cmpsb
sub
mov
cmp
and
pop
jbe,pt
or
gs
and
addb
sub
and
test
lret
cmp
mov
scas
lret
aad
and
icebp
cs
push
and
insl
inc
aaa
xchg
adc
xchg
mov
andl
mov
cmp
cmp
dec
add
and
add
xchg
cmovbe
cmovns
ljmp
psrld
cmp
cmpsb
jo
dec
adc
pop
push
mov
pop
inc
mov
sbb
pop
mov
shr
test
orb
jo
fidivs
adc
jae
xchg
xor
jo
inc
shr
xchg
xchg
sarl
sub
imul
push
ja
arpl
xorl
dec
mov
int3
xor
xchg
mov
jl
clc
xor
cmpsb
sbb
mov
bswap
jns
adc
xor
das
mov
add
rcr
xor
out
stos
sbb
cmp
aas
mov
sub
push
ja
mov
inc
sbb
insl
out
xchg
jns
push
clc
adc
in
pushf
sbb
fistpll
mov
pop
push
cli
add
xchg
roll
test
fdivl
loop
ja
lcall
mov
dec
xchg
addr16
pop
leave
lahf
jle
icebp
popa
stc
ret
mov
and
cli
push
mov
popa
into
popf
call
int3
cmp
or
out
out
adc
stos
fwait
adc
sub
sub
iret
dec
inc
jnp
loopne
mov
lods
xor
ret
inc
xchg
mov
push
das
int3
adc
pop
mov
fiaddl
sub
mov
or
pop
jg
out
mov
mov
fnstenv
xlat
int
mov
dec
iret
movsl
xchg
int3
mov
js
mov
cli
adc
movsb
inc
loop
xchg
push
repz
pop
enter
adc
jle
insb
xor
add
sti
aas
lods
add
out
mov
xor
push
pusha
pushf
movl
pusha
mov
call
repz
jg
jne
inc
test
cmp
pop
mov
cmp
xchg
mov
pusha
push
in
xchg
addr16
mov
cwtl
lock
mov
and
pop
cmp
adc
sbb
pop
inc
andb
cld
lcall
mov
aam
in
push
adc
push
int
jl
push
rcrl
imul
jle
jbe
aaa
ljmp
imul
sub
test
mov
mov
loop
xchg
inc
imul
fucomp
fcomp
mov
cmp
cltd
loope
mov
in
cmc
pop
into
repz
daa
cmpsl
leave
iret
cmp
leave
xchg
cmp
leave
cmpsl
push
test
inc
lahf
cmp
and
mov
mov
mov
pop
ja
aaa
inc
ljmp
repnz
xchg
jle
insb
sbb
sbb
inc
jl
mov
inc
fnstsw
and
movsb
int3
cltd
mov
push
dec
sub
push
gs
pop
pop
sub
int
dec
imul
jge
dec
jne
jg
ja
xchg
je
jb
scas
mov
dec
ror
andl
dec
or
dec
ret
lods
add
or
rorb
sar
cmp
outsl
xchg
dec
pop
xor
pop
jo
lods
mov
sub
popf
xchg
hlt
cmp
scas
adc
cmp
inc
and
daa
pushf
xor
das
lea
jg
sbbl
pushl
loopne
or
jle
dec
push
push
sti
call
sub
bound
fwait
testl
out
cmc
subl
and
push
rcr
pop
popf
cmp
sahf
pop
rcl
add
push
adc
lcall
ficomps
xchg
hlt
jbe
stos
push
popa
out
lock
mov
stos
mov
xor
add
push
sbb
imull
cmp
mov
mov
jmp
adc
test
enter
and
insl
into
cli
jg
jmp
add
push
orb
push
push
sti
mov
pop
xor
sti
lock
lcall
stos
xor
mov
add
or
or
jnp
sbb
popf
pop
xor
sub
ss
xor
popf
pop
shll
and
cmp
sbb
pushf
movl
pushf
pusha
call
sbb
sub
or
call
dec
testb
sbb
jb
loop
cmp
jae
adc
push
sbb
leave
xor
pusha
or
mov
loop
sbb
call
popa
mov
icebp
stc
hlt
mov
mov
fisubs
nop
sbbl
mov
pushf
sub
movsl
shlb
pop
pop
mov
mov
xchg
cmp
inc
bound
xlat
cli
mov
inc
or
movsb
xor
and
stos
mov
mov
pusha
outsb
or
lea
mov
fisttpl
jp
or
xchg
xor
pusha
into
xchg
fwait
jnp
adc
mov
hlt
and
pop
scas
dec
or
push
add
or
and
mov
imul
xlat
inc
rolb
out
aam
popf
xor
pushl
jmp
movl
pushf
pushf
lea
jmp
pushf
mov
test
clc
test
jmp
adc
sti
hlt
mov
mov
xchg
jno
popf
dec
data16
or
cmc
push
ja
stos
xchg
adc
fwait
pop
jecxz
repz
int3
xchg
push
testb
mov
pop
mov
pop
iret
sbb
pop
mov
test
leave
es
xchg
or
xor
test
pop
push
jl
xlat
push
mov
js
mov
popf
pop
mov
arpl
sub
lea
jmp
add
jnp
popa
cltd
mov
xchg
jno
lret
repz
lods
cmc
shl
out
or
inc
or
dec
mov
out
mov
ds
cmp
cmc
movsb
xor
out
call
ret
dec
mov
adc
push
push
cmp
jecxz
jge
xor
test
out
cmpsb
cmp
std
cmp
les
adc
lcall
ret
iret
sbb
les
jg
cmpsb
into
jb
fistpll
shl
push
aaa
ret
mov
adc
idivb
xchg
out
movsl
shrd
cld
inc
adc
fwait
mov
push
xlat
lods
fs
mov
cltd
cli
test
sub
in
enter
insb
cs
xor
xor
fistps
pop
adcl
add
add
xchg
dec
or
outsl
push
outsl
lcall
adc
push
mov
cmpsb
imul
xchg
xchg
adc
lcall
popa
sbb
shlb
es
or
xor
leave
pop
adc
mov
icebp
cmpsb
sub
and
pusha
or
pop
cmovnp
adc
push
pop
xchg
pop
outsl
inc
add
mov
push
adc
std
int
mov
and
xchg
imul
push
push
xchg
and
in
sbb
idivb
jno
fmuls
adc
jl
push
mov
pop
sub
xchg
out
ljmp
orb
pushf
repnz
insb
mov
cld
popf
iret
shlb
dec
rolb
jge
cmp
mov
rorb
push
repz
sbb
sub
popf
pop
inc
sbb
push
and
xor
push
add
adc
jmp
lods
pop
movsl
xchg
popf
push
in
jbe
add
mov
imulb
data16
je
cld
ret
add
dec
push
test
mov
xor
lea
push
sbb
push
scas
adc
push
addb
push
pop
xor
jecxz
sub
xor
insl
imul
bound
inc
jo
inc
into
clc
push
hlt
fistpl
sub
cmp
jae
jmp
mov
adc
mov
adc
cli
push
imul
rcll
enter
xor
push
jp
icebp
jns
jl
dec
lea
and
lahf
lock
xchg
push
or
jge
popf
push
push
cmovnp
push
pop
ret
or
cmp
popf
push
out
and
ljmp
mov
test
popf
push
mov
sbb
add
mov
add
loop
aad
jl,pn
popf
push
scas
sub
xor
push
aam
xor
xchg
scas
mov
ja
and
dec
xor
sbb
adc
dec
scas
in
jns
xchg
loop
clc
xchg
jo
xor
dec
cli
into
and
xor
mov
sbb
das
jge
ljmp
gs
pushf
or
adc
loopne
and
inc
add
pop
jle
cwtl
sbb
add
test
mov
xor
cmp
into
push
arpl
sub
fistl
jne
loop
mov
mov
sbb
stos
popf
dec
enter
orb
xchg
popa
mull
cli
jecxz
repnz
cmpsl
fildll
in
cld
sbb
movsb
add
addb
pop
test
sbb
dec
mov
dec
mov
push
imul
sbb
adc
int3
pop
jne
sbb
ds
jmp
jb
lahf
cmp
mov
mov
loop
sahf
sbb
ss
xchg
xor
cltd
sbb
mov
fbstp
xlat
xor
pop
cmp
pushl
jbe
xlat
push
push
xchg
popf
push
pop
jmp
call
shlb
into
movsb
into
popa
or
cmp
imul
xor
in
std
dec
sbb
mov
pop
add
xchg
sbb
popf
push
jb
inc
sub
adc
mov
and
xor
cmc
jmp
mov
mov
movzwl
mov
call
fsubs
or
add
jno
or
sub
stos
cmp
leave
mov
sbbl
mov
add
lahf
iret
xor
mov
data16
cmp
sub
movsl
test
jne
fcoms
xchg
cmpsb
pop
mov
sub
imul
add
cmp
pop
aad
data16
shrb
test
adc
dec
lret
jns
aam
pop
pop
imul
push
stc
lahf
lods
xor
in
add
sbb
fwait
dec
pop
cmp
popf
push
push
lods
sub
xor
pop
pop
jmp
ret
and
sti
das
xabort
mov
fiaddl
lods
sbb
decl
pop
cmp
mov
mov
adc
adc
stc
push
lcall
jno
pop
cmp
cmp
push
cmpb
pop
sub
stos
cmpsb
sub
sbb
fcomps
cmp
mov
adc
iret
mov
mov
xor
seta
subb
inc
or
repz
leave
and
enter
sub
jnp
stos
mov
leave
insl
xor
and
test
jne
andl
lret
or
aaa
gs
das
scas
inc
sub
pop
lret
mov
mov
aad
xchg
subb
psubsb
pop
mov
inc
loopne
sub
push
mov
mov
test
mov
fbstp
aad
push
fprem1
fiaddl
cmp
inc
bound
xlat
fimull
sbb
imul
aam
enterw
ficompl
out
addr16
sahf
fistl
outsl
mov
sbb
push
sbb
lea
cmp
aaa
sbb
or
in
mov
xchg
push
repnz
jg
sahf
add
fstpt
mov
inc
jl
jecxz
sahf
bound
or
fwait
mov
fstp
ret
je,pn
nop
sbb
addr16
in
jo
xor
push
ljmp
cmp
stos
inc
dec
dec
mov
insb
inc
cmp
push
xor
mov
sub
scas
sub
inc
xchg
in
loopne
mov
push
push
jae
mov
push
imul
xor
dec
sub
mov
push
nop
fstpl
xor
inc
pushf
jo
pop
adc
sbb
mov
add
pop
mov
pop
cmp
jb
pop
and
mov
repz
xchg
aad
jecxz
mov
in
pop
popf
out
inc
in
xor
test
jb
aad
aaa
pop
mov
or
mulb
dec
sub
xor
jne
xor
mov
mov
scas
jge
iret
xchg
mov
stos
jns
lcall
stc
mov
jmp
add
int3
out
dec
lret
xchg
hlt
clc
loope
xchg
xor
movb
movl
movb
lea
jmp
stos
xchg
outsl
mov
ljmp
inc
push
fwait
push
xchg
pop
mov
in
insl
jno
fs
les
inc
push
das
lcall
lcall
mov
inc
pop
add
mov
inc
dec
dec
or
loopne
lcall
jno
lret
sahf
mov
cs
insb
xor
or
or
rcrb
shrb
add
outsb
or
movsb
and
adc
adc
hlt
bnd
push
dec
sub
add
push
fdivrl
dec
cli
ja
add
pushf
dec
sbb
dec
adc
xor
stos
jb
mov
call
push
shll
psubb
sbb
and
mov
sbb
add
call
addr16
xor
fnstcw
jmp
lods
test
fbstp
popf
dec
icebp
or
ja
jmp
cmp
test
popf
push
in
jne
cmp
gs
inc
in
inc
out
mov
adc
sbb
inc
negl
insb
cmp
ficomps
pop
adc
movsb
and
pop
dec
mov
dec
ret
test
rorl
mov
add
mov
sbb
add
imul
inc
ret
adc
ret
popa
cs
ja
dec
mov
jnp
loop
popf
cmp
pop
or
clc
adc
addr16
shlb
dec
xchg
jmp
test
push
icebp
jae
jge
mov
add
pop
push
aam
clc
cmp
ds
fadd
aaa
nop
sub
inc
jl
insl
mov
enter
cmp
sbbl
dec
dec
lods
ret
xchg
into
sub
xchg
cmc
jbe
dec
and
xchg
dec
outsb
push
out
loop
stos
inc
out
mov
dec
lods
sarb
mov
aad
imul
shl
sbb
decb
adc
rorl
imul
sub
jp
leave
ja
outsb
in
mov
cld
or
das
popa
cmp
imul
or
adc
sub
out
cmc
data16
jle
mov
jecxz
aad
mov
cmp
mov
jge
idivl
jecxz
push
xchg
jecxz
insb
fiaddl
shr
std
add
into
icebp
mov
mov
cld
lahf
and
lods
pusha
out
or
inc
sbb
jecxz
movsb
xchg
inc
lahf
mov
lahf
adc
push
incl
loop
mov
outsb
fisubrs
pop
mov
xor
bound
pusha
push
xchg
xor
scas
or
in
mov
jns
adc
fidivrl
popf
dec
loope
xchg
movb
mov
lea
jb
jmp
dec
pop
push
clc
shll
add
jb
cld
cmp
inc
es
dec
inc
jns
fwait
hlt
in
sbb
movsl
dec
test
cmp
sbbb
cmp
in
mov
pushf
repnz
test
out
inc
ja
pop
movsl
dec
test
popf
inc
adcl
inc
loop
jno
popw
cmp
jns
pop
jb
pop
mov
push
mov
data16
mov
xor
mov
bound
movsl
cltd
jae
jge
lock
pop
mov
pop
lret
clc
fwait
outsb
in
jle
sub
push
cld
xor
popf
dec
cs
push
ret
push
mov
mov
lea
shlb
add
aaa
fmull
mov
cmc
test
or
hlt
mov
mov
es
in
xchg
sub
lea
fldt
dec
outsb
xchg
mov
repz
mov
stc
andb
lret
push
xor
aam
inc
shrb
pop
mov
and
add
mov
dec
push
jp
cmp
das
ret
in
sub
sbb
pop
push
adc
movsl
jmp
mull
and
inc
or
push
or
mov
mov
ja
rolb
push
mov
jno
inc
pop
cmc
enter
inc
xchg
das
and
push
sub
adc
mov
imul
mov
jne
lods
adc
les
popa
pusha
popa
xor
dec
sti
stos
sbb
lock
aas
jne
xlat
push
mov
jb
xor
pusha
mov
movl
push
movl
pushl
mov
movw
movw
lea
jmp
movl
pusha
movb
mov
pushf
lea
jmp
pushl
movl
push
push
jmp
movl
pushf
movl
pushf
pushl
lea
jmp
add
mov
shrl
sbb
cmp
cli
aas
jle
js
cli
cmp
cmpsb
and
lods
mov
pop
xor
xchg
lea
nop
sbb
fstl
inc
push
lahf
jp
cmp
jg
loop
ds
jp
inc
sub
push
in
pop
pop
jbe
xor
pop
js
insb
cmpsl
icebp
jne
int
mov
loop
jg
dec
adc
rol
pop
inc
pop
ja
pop
xor
add
jnp
fsubr
fidivrl
shll
push
sbb
inc
scas
add
xor
add
mov
test
inc
fnstenv
hlt
loope
lock
ficoml
aam
sbb
pop
mov
jmp
int3
lea
mov
xor
lea
sub
repz
cwtl
scas
mov
xchg
insl
pop
iret
aam
jb
cld
push
int
fnsave
addb
data16
outsl
jecxz
test
ljmp
loop
sbb
or
rcrb
push
iret
rol
jle
lds
dec
fucomi
rcll
mov
and
or
mov
rolb
mov
repz
mov
and
fucomip
inc
mov
inc
sbb
addr16
out
sbbl
cmp
sub
jecxz
dec
imul
jnp
and
push
or
fucomp
ds
jecxz
popf
notb
sub
pop
xchg
xor
es
negb
ret
divb
mov
aad
jp
les
jl
push
pop
add
mov
mov
adc
or
push
repnz
xor
stc
and
popf
dec
lods
or
push
cmp
test
and
popf
dec
xchg
test
leave
mov
pushl
push
lea
jmp
pushl
call
movl
pushl
push
pushl
lea
jmp
movl
pusha
push
pushl
push
lea
jmp
jmp
push
jmp
call
pusha
pushf
pushl
lea
js
push
pushf
movb
call
pushf
jmp
push
movl
mov
pusha
lea
jmp
pusha
movl
pushf
pushf
push
movl
mov
push
lea
jmp
mov
push
push
dec
xor
cmp
push
fimuls
insb
ds
call
insl
push
fs
divb
cmp
data16
sub
scas
inc
sub
in
fs
and
dec
out
out
mov
sub
inc
add
or
inc
and
lods
shlb
repz
sarb
adc
ficompl
imul
fisubrl
scas
in
xchg
dec
cmp
and
daa
mov
sti
push
lods
in
ljmp
aad
dec
shlb
mov
lea
adc
popf
dec
pop
mov
call
jmp
call
btr
mov
pusha
pushf
movl
movw
bt
test
cmp
mov
stc
jmp
cmc
cmp
add
bswap
shl
sub
add
bsr
cmp
bsf
xor
add
add
sub
or
movzbw
clc
shrd
bt
shl
cmp
btc
xor
movzwl
shl
push
bsr
mov
shrd
xor
xor
rol
shr
add
shl
lea
add
shl
sar
movb
mov
stc
jmp
mov
movl
pushf
pushf
pushf
lea
jmp
mov
cmc
btc
pop
mov
bt
sub
call
push
movl
mov
pushf
push
lea
jmp
sub
push
std
or
jmp
inc
fst
cld
push
imul
or
or
pusha
push
push
in
icebp
sbb
push
jmp
push
jo
dec
jae
or
push
push
lcall
sub
push
cmp
xor
fdivrl
imul
dec
daa
ficoms
cmpl
jl
add
pop
imul
cld
fstps
jmp
mov
add
mov
inc
std
fimuls
and
pusha
push
cwtl
stos
in
mov
inc
mov
mov
cltd
lret
in
or
aas
popa
and
or
pop
pop
es
adc
sub
cltd
push
shrb
in
shlb
and
test
dec
popa
scas
and
add
adc
in
push
leave
ljmp
dec
stc
popf
push
add
cltd
div
inc
mov
out
ljmp
push
push
test
mov
cmc
shlb
icebp
adc
cmp
sti
pusha
cs
out
add
int3
rorb
mov
icebp
and
dec
aad
je
sbb
sbb
outsl
sub
cwtl
dec
das
fistpll
mov
cld
enter
out
jo
pop
mov
in
mov
jne
inc
and
fsubrp
shr
sbb
mov
pop
in
add
repnz
xlat
lcall
cmpsl
add
push
jae
xchg
mov
ja
les
iret
pop
popa
mov
pop
sbb
gs
pusha
push
aas
pop
aas
xor
cli
ds
xor
push
dec
sbb
xchg
in
pop
insl
xor
mov
pop
xchg
inc
pop
add
cmp
adc
mov
cli
addr16
dec
std
dec
adc
xchg
nop
std
pop
movsl
pop
xor
dec
nop
inc
lcall
lahf
add
out
fcompl
dec
out
popf
inc
out
das
incb
fimull
dec
jmp
inc
sub
jp
sbb
hlt
stc
jo
and
sbb
jne
sahf
cld
dec
sub
and
mov
adc
cwtl
cmp
mov
lock
mov
add
push
rorl
mov
push
outsb
sub
xor
mov
movsb
add
mov
sub
bound
cmp
fldcw
int
iret
jno
xchg
mov
sti
inc
shll
fwait
popf
jg
mov
sub
iret
lcall
int3
orl
pop
xchg
jbe
sahf
cmp
stc
cwtl
data16
pushf
stc
test
in
cli
std
inc
call
and
shl
mov
add
paddsw
add
shrl
jg
sub
enter
daa
fsubp
add
push
lds
in
pop
adc
gs
cmp
sahf
push
enter
popf
inc
outsl
push
rcrl
jo
inc
clc
ror
sti
inc
xchg
fwait
mov
pusha
xor
pusha
movl
pushf
movl
pushl
mov
lea
jmp
push
movl
movl
jmp
int3
jne
fdivrs
pop
test
fidivl
hlt
icebp
lods
xorb
ja
xchg
pop
leave
cli
mov
fsubrp
dec
sahf
add
int
add
dec
add
cltd
jge
lahf
mov
push
lods
loope
mov
push
mov
dec
xchg
cmp
xchg
arpl
je
jl
lcall
mov
outsl
jle
dec
xchg
xchg
push
mov
jl
leave
sbb
aaa
stos
xchg
popf
inc
pop
mov
lea
popa
add
mov
mov
mov
mov
flds
jp
jae
jne
sub
push
pop
add
sbb
scas
pop
js
fucom
fistpll
jne
jg
aad
sbb
add
inc
mov
pop
mov
xchg
hlt
sahf
cld
jne
incl
mov
aas
inc
repnz
sbb
add
sarl
xor
pusha
inc
call
std
call
out
out
lahf
fisttpl
data16
xor
jmp
imul
cmpsl
dec
add
push
cli
dec
int3
or
xchg
xor
jne
loopne
inc
pop
fwait
and
cmp
xor
outsb
iret
insb
loopne
xchg
jge
jge
jae
std
fistpll
mov
xchg
adc
js
and
les
push
mov
inc
fcmove
xor
add
loope
nop
stos
inc
es
stos
add
jbe
inc
jne
out
jns
jb
mov
push
add
pop
xchg
mov
mov
cmpsb
pop
out
shr
mov
dec
fsubrs
or
insl
leave
jb
fsubrs
into
hlt
fimuls
into
popa
cmp
orl
inc
idiv
adc
insl
mov
dec
adc
test
inc
lock
aas
leave
adc
mov
push
add
and
popf
std
push
loopne
dec
mov
leave
gs
mov
xor
out
imul
pop
fistps
insl
dec
in
lock
jg
aam
xchg
aad
push
aam
mov
xor
shll
or
imul
js
inc
rcll
inc
and
jns
push
jo
aad
xor
add
mov
mov
dec
mov
data16
pop
outsl
xor
popf
inc
sub
mov
xor
aaa
iret
fsubs
push
mov
sub
push
cwtl
mov
mov
clc
or
loope
int
mov
mov
jae
and
or
inc
push
ficomps
xor
scas
pop
dec
xchg
xor
dec
stc
ss
movsl
mov
xor
scas
addr16
dec
or
popf
jl
adc
inc
inc
inc
mov
sti
stc
push
jecxz
rcl
lcall
into
outsl
pop
add
test
xor
pop
mov
orb
addr16
jge
adc
dec
mov
and
pop
mov
fs
push
insl
arpl
je
popa
out
xor
sub
dec
out
sbbb
jmp
pop
aaa
daa
and
fcoml
add
pop
aaa
sbb
pop
jo
pop
icebp
mov
cli
jle
ret
popf
adc
mov
inc
cmp
sub
jno
jmp
xor
jecxz
ret
in
fiadds
fdivr
inc
and
mov
cmp
pop
adcb
pop
dec
cmp
fst
mov
dec
lock
in
test
pop
mov
lds
addr16
push
or
addr16
sti
icebp
mov
adc
cmp
xor
sub
iret
je
bound
mov
or
push
repz
clc
arpl
fwait
int
not
xor
mov
or
mov
sar
loopne
fisubrl
or
mov
push
xchg
jp
adc
xchg
sahf
stc
lods
stc
mov
inc
cmp
enter
fdivrp
lcall
cs
push
insb
mov
loope
cmp
mov
or
dec
push
mov
enter
dec
les
daa
pop
adc
cmp
int3
mov
out
or
mov
add
sbb
addr16
sub
inc
jb
mov
out
mov
mov
inc
ljmp
pop
arpl
mov
push
daa
loope
pop
sbbl
mov
or
mov
xor
dec
inc
sbb
aam
or
or
or
out
fisubs
std
push
pop
cli
in
lret
pusha
out
sbb
mov
dec
int3
popa
cmpsl
inc
add
jmp
frstor
fsubl
iret
push
xchg
loop
repz
or
adcl
int
cmpsb
adc
stos
mov
ret
mov
mov
and
icebp
mov
inc
pop
bound
dec
movsb
xchg
lock
lret
mov
pop
insb
mov
in
nop
test
nop
sti
ficomps
sbb
and
push
pop
std
add
mov
ror
and
mov
and
jecxz
or
jnp
add
popf
cmp
mov
add
add
adc
shr
add
sbb
clc
shl
cmc
xor
stc
add
pop
rcr
bts
movzbw
bsf
bt
shl
bts
movzwl
sub
rcl
mov
pop
movzbw
shr
sub
sar
sub
add
xor
and
call
pusha
pushf
movl
jmp
pop
lds
sub
jne
cmp
xchg
call
aad
push
bound
pop
in
test
test
cmpsl
loope
cwtl
fnsave
cmp
lods
ljmp
jne
scas
lahf
mov
add
nop
addr16
and
lea
cmpsl
js
pop
int
xchg
jb
mov
jbe
in
ljmp
jno
mov
bound
out
aaa
inc
cmpsb
xor
mov
sbb
jmp
sub
sub
lcall
bound
sub
imul
xor
xor
in
push
std
adc
in
pop
outsl
xor
mov
cmc
dec
adc
push
fs
adc
mov
aam
pop
gs
cmpsb
jns
xchg
std
and
inc
loope
fwait
stos
cmp
and
test
xchg
hlt
xchg
mov
imul
fidivrs
iret
push
mov
and
xor
call
mov
jmp
mov
push
inc
movb
cmp
xor
xor
add
bswap
mov
call
pop
fwait
stos
jl
outsl
and
aas
in
outsb
or
adc
sub
cmp
xlat
stos
xchg
imul
pushf
std
xchg
outsl
mov
arpl
cmp
pop
loope
shrl
cli
xchg
out
cmp
pushf
jecxz
pop
cli
adc
movsb
jg
pop
sahf
out
jbe
mov
and
je
scas
pminsw
xchg
shll
jp
adc
das
scas
shrl
dec
leave
aam
fidivl
lods
mov
inc
les
add
ja
jno
testl
scas
and
inc
fistpll
and
mov
xchg
sti
in
xlat
inc
in
or
int
inc
dec
leave
aad
and
in
cmp
mov
xchg
xor
cmp
jp
sbb
js
js
daa
ljmp
xchg
cli
mov
iret
add
mov
in
and
push
ljmp
sbb
jmp
mov
sub
mov
mov
push
es
pop
cmpsl
mov
fimuls
sub
pop
cld
lods
push
jle
xchg
idiv
pop
sti
pop
pop
dec
or
ss
cld
out
push
lcall
ds
push
xor
xor
fcoms
lods
std
xor
lds
inc
cmpsb
int
sbb
mov
cld
xchg
lock
loopne
std
jae
mov
int
sub
cli
push
dec
jb
cmp
cmp
pandn
sbb
and
xchg
das
or
adc
fwait
xchg
es
das
test
lods
fstpl
cmp
ja
cmp
lods
jno
push
push
xchg
std
sti
inc
sbb
xor
cltd
flds
shrb
popa
test
push
pop
dec
pop
xchg
xor
movl
pushf
push
pushf
lea
jmp
push
pushf
movl
jmp
jle
xchg
aas
fldcw
xor
jecxz
mov
sub
addr16
jl
mov
bound
sbb
sbb
inc
into
jmp
repz
or
jns
int3
sti
dec
sub
es
add
jg
lret
push
push
cmpsb
lret
xor
mov
xchg
mov
not
mov
cmp
xor
mov
cmp
pop
jne
fnstsw
outsb
jbe
and
adc
mulb
lcall
jge
and
dec
push
into
mov
ja
and
insb
loop
fs
enter
dec
sar
mov
test
hlt
fildl
addr16
jne
ret
scas
xchg
fisttpl
jo
jg
push
jbe
push
mov
sub
jo
in
jecxz
andl
dec
xchg
testb
lods
or
push
lret
out
stc
in
jmp
mov
mov
fucom
mov
shll
movsb
les
jecxz
orl
sarb
mov
sti
xlat
mov
stos
ss
out
add
stos
std
sbb
ds
xchg
or
ss
loopne
push
icebp
lods
out
add
nop
mov
jbe
or
out
xor
mov
dec
inc
xor
enter
xchg
sub
out
jo
sbb
xlat
popa
std
pop
inc
dec
push
lret
fistps
jb
xchg
mov
insl
dec
mov
test
pop
shr
xor
cmp
or
adc
cmpb
push
pushf
fs
rcrl
xchg
or
ljmp
je
xchg
cmpsb
mov
xlat
loope
mov
xorl
icebp
dec
sub
sbb
shrl
jl
andl
icebp
js
mov
or
push
fwait
or
loope
in
hlt
and
or
cmp
cmp
cs
lahf
cmp
shll
test
stc
pop
dec
out
aaa
fsts
mov
popa
inc
pop
dec
mov
xor
cmpl
or
dec
mov
mov
in
lahf
adc
fwait
xchg
addb
in
lahf
fucomip
and
xchg
lods
mov
add
push
push
mov
out
lock
out
pop
mov
insb
or
push
mov
stc
and
mov
inc
mov
push
mov
push
cmp
in
pushl
movsb
ret
jns
push
movsb
lods
xchg
xor
lock
das
dec
inc
mov
push
adc
add
sti
mov
jmp
rcll
sbb
fstpl
sub
mov
pop
sti
je
lods
xlat
xlat
mov
xor
mov
xchg
ja
insb
lods
stos
and
cmp
xor
pop
mov
imul
jmp
adc
and
xchg
xchg
inc
fwait
shr
mov
jnp
cltd
jmp
jnp
in
scas
popa
int
sbb
cmpsb
mov
fwait
shr
out
nop
inc
les
cmc
mov
sub
sub
xchg
xlat
ficompl
xor
inc
pop
shlb
or
in
xchg
jns
xor
scas
loope
shr
cmp
inc
mov
add
adc
outsl
idivb
js
outsb
or
xor
mov
lods
adc
dec
jnp
fwait
bound
aam
in
mov
dec
xchg
aam
mov
shll
or
xor
rorl
jns
push
dec
lret
out
mov
adc
pop
lods
dec
mov
cmp
dec
mov
adcb
xchg
lock
inc
fwait
pop
push
push
jecxz
or
add
xchg
add
es
pop
movsl
push
and
jecxz
lahf
xchg
xchg
push
shll
xor
sbb
pop
jge
lods
or
mov
ss
out
sub
inc
cmp
jle
xor
mov
dec
ljmp
sbb
push
rcrb
xchg
mov
push
sbb
xchg
out
movsb
lods
mov
pop
jns
mov
fsubrl
inc
hlt
cmp
mov
div
mov
inc
xor
jp
lret
mov
imul
jb
push
push
xchg
xor
xchg
pop
inc
aam
daa
mov
push
and
lods
xor
dec
out
xchg
pushl
scas
dec
idivl
xor
pop
inc
aam
sub
xchg
cmp
les
xchg
lods
xor
das
test
lods
xor
xor
and
clc
hlt
xchg
push
scas
int3
ret
cld
add
push
js
lods
out
mov
std
stos
xchg
into
or
cwtl
pop
clc
leave
xchg
mov
clc
cmp
xor
push
inc
aam
mov
cmp
xor
shlb
xor
mov
add
push
mov
mov
mov
dec
call
shl
test
clc
add
bt
cmp
mov
jmp
pop
jecxz
jmp
test
mov
push
outsb
mov
or
jnp
inc
xchg
pushl
mov
lahf
fwait
xor
or
mov
test
sub
into
pusha
ret
pushf
inc
mov
cltd
pop
test
dec
ret
popa
lret
pop
or
lea
sbb
mov
pop
lods
inc
xor
fdivrl
pushl
cmp
inc
sti
mov
popf
xor
addr16
fcompl
sub
scas
sub
inc
adc
push
push
mov
mov
push
outsb
cmp
mov
xor
in
or
xchg
fwait
inc
push
push
ljmp
shll
jmp
xchg
dec
mov
lock
jb
sbb
mov
test
popf
xor
imul
mov
add
out
xor
mov
test
enter
neg
mov
clc
cmp
call
inc
js
lea
cmc
cmpsb
adc
sarb
jecxz
mov
mov
add
mov
iret
and
sub
fistps
shl
imul
lods
enter
das
ljmp
outsb
outsb
dec
mov
pmullw
pop
mov
popf
cltd
fisubrl
or
lds
mov
jbe
shl
and
jp
shrl
and
mov
mov
addr16
or
and
outsb
or
out
push
xor
cmp
push
hlt
mov
add
xor
lret
add
sbb
xor
xor
xor
add
pushf
push
mov
stos
inc
ja
out
or
or
scas
jmp
lret
hlt
mov
inc
aam
sar
sbb
cmp
jns
inc
aaa
add
push
xor
dec
insb
add
xor
jmp
and
enter
cmp
xlat
push
jbe
lret
dec
fsubl
jl
jecxz
in
pushl
push
cmp
aas
xlat
shll
loopne
scas
inc
popf
clc
push
pop
fadd
xor
test
mov
call
add
inc
jmp
or
inc
gs
push
test
scas
add
inc
xor
adc
mov
pop
ds
jmp
mov
mov
lret
mov
int
loopne
or
test
ds
push
int
roll
inc
push
test
test
adc
addr16
sbb
xchg
leave
pop
test
or
movsb
daa
mov
mov
mov
stos
dec
scas
pop
pop
mov
fildll
lods
or
movsb
pop
mov
jae
movsl
lahf
ret
scas
fistpll
push
add
ja
aam
push
test
sahf
arpl
test
jns
push
push
imul
mov
adc
fists
imull
fildl
out
xor
testb
mov
add
dec
stos
sub
xor
inc
ljmp
push
sub
mov
or
movsl
or
mov
test
sbb
add
and
mov
add
nop
xor
or
fisttpl
fcmovnu
mov
push
and
mov
insb
adc
sbb
and
jnp
xor
mov
mov
pop
in
dec
dec
loope
sbb
sub
stos
dec
outsb
sub
cld
call
pushl
xchg
js
fucomp
fdiv
mov
xchg
and
sub
cmpb
mov
fxch
movsb
fwait
sub
sbb
xor
call
ljmp
or
rclb
bnd
dec
jg
xor
mov
in
mov
and
cltd
mov
xchg
mov
sar
imul
jae
loope
je
dec
ficoms
je
fs
push
hlt
xor
mov
negb
inc
fisttpl
fsub
cmc
push
mov
lret
fnstenv
popf
xor
jnp
mov
jmp
add
xor
das
xor
jle
fistpll
inc
sti
xor
inc
or
shrb
and
mov
jmp
dec
and
push
sahf
inc
mov
push
mov
cmpsb
inc
jmp
imul
in
mov
pop
mov
pop
jmp
aad
addr16
pusha
stos
dec
pop
call
out
adc
push
in
outsb
mov
orb
add
mov
push
out
sub
pop
pop
enter
or
es
jmp
ret
xchg
es
pop
gs
cmp
pop
mov
pop
loope
test
ds
or
mov
pusha
xor
idivl
int3
inc
pop
cmc
lahf
shll
jmp
sbb
scas
inc
lea
sbb
pop
in
xor
jne
jne
stos
bound
loope
mov
pop
das
or
popf
xor
sub
mov
add
btr
bswap
mov
pushf
test
mov
push
shr
push
pushf
push
push
lea
jmp
call
movl
mov
pusha
push
mov
lea
jmp
push
jmp
mov
shl
mov
dec
rcr
lea
setle
add
bts
shr
mov
inc
seta
lea
add
shl
btc
mov
test
lea
and
btc
xor
bts
mov
shl
shl
bts
push
shr
clc
sar
shld
add
rcl
dec
adc
shr
bts
bt
xadd
mov
bt
dec
or
mov
neg
movzbw
bswap
shr
dec
cmp
inc
add
xadd
bsr
add
and
cmc
xadd
btr
mov
lea
mov
xor
shr
shr
rol
shr
ror
sbb
add
bsf
neg
and
bsf
add
not
setb
pushl
mov
jmp
pusha
mov
pusha
movl
pushf
call
movl
pushf
jmp
movsbw
shld
neg
shl
movzbl
shl
add
xadd
bswap
btc
bsf
lea
bt
bsf
sbb
xor
add
pusha
shl
btr
call
shr
sub
sub
shr
movzwl
clc
mov
test
pusha
test
sub
bt
xor
pushl
clc
shr
jmp
nop
insl
pushf
cwtl
repz
std
pop
mov
xlat
sahf
jmp
adc
xor
pop
stos
in
call
push
cmp
cmc
int3
cmp
rclb
pop
shrl
xor
and
push
mov
orb
out
inc
and
dec
jge
push
sub
adc
sbb
xor
push
lret
mov
sbbb
xor
gs
xchg
fdivrl
dec
cwtl
ret
or
ja
xor
cli
lret
subb
out
adc
and
stc
cmp
jbe
mov
cmp
ljmp
sbb
lahf
repz
dec
out
sbb
aam
aaa
cmpsb
and
stc
cmp
cmp
cmp
ret
push
push
mov
xor
divb
fs
add
testb
or
xchg
lahf
shlb
adc
sbb
mov
fldenv
pop
pop
push
in
lods
loopne
cmp
pop
add
jmp
cmpsb
add
mov
ds
cmp
iret
sub
xchg
jno
push
mov
mov
nop
out
adc
aad
jmp
jle
lret
lods
dec
lds
mov
call
pop
inc
mov
push
shll
repz
xor
mov
leave
and
inc
or
nop
cltd
ret
jl
mov
or
xchg
enter
sbb
cs
lret
in
lret
push
mov
hlt
lahf
jnp
popf
lods
push
cli
pop
xchg
fnstenv
and
mov
mov
sub
into
inc
mov
inc
dec
or
adc
and
xor
mov
pop
jb
xor
jnp
leave
sub
mov
sub
cmp
sbbb
cmp
mov
fistpl
push
lcall
shl
call
mov
push
mov
jmp
dec
sub
fldl
lods
fstpl
pop
ja
xchg
add
outsb
xchg
mov
xor
in
and
sub
sbb
xlat
xor
inc
cltd
stc
mov
dec
add
inc
mov
xchg
xchg
inc
out
dec
out
xor
popa
fsubrl
and
aad
sbb
dec
jl
popf
sub
mov
stos
push
movsl
inc
mov
cmc
xchg
movsl
iret
push
dec
lahf
mov
jge
lea
jge
bswap
mov
call
pushf
movl
push
pushf
movl
mov
call
mov
xchg
cmp
int
jmp
pop
je
or
jae
in
shll
push
clc
fdivs
jmp
lret
scas
dec
es
xchg
mov
mov
int
dec
and
and
sub
xchg
popf
lea
mov
push
pop
ds
dec
pop
ljmp
sub
jle
mov
outsb
fiadds
and
shrb
popf
sub
cmp
dec
data16
movl
call
push
pusha
pushf
lea
jmp
sub
leave
popa
push
popf
jno
out
push
shrb
mov
cld
loop,pt
scas
adc
jb
mov
inc
sub
dec
mov
sahf
ss
xchg
pop
dec
out
mov
xor
and
inc
fnstsw
push
cmpsb
jl
popf
pop
sub
pop
in
push
mov
adc
popf
mov
adc
clc
add
jmp
dec
stc
test
sub
stc
clc
call
add
shl
neg
pushf
call
movl
push
pushf
lea
jmp
call
mov
pusha
stc
push
test
jmp
push
pushf
jmp
push
pushf
pusha
lea
jns
push
movl
pushf
pushf
pushf
pushf
lea
jmp
pusha
mov
call
scas
sub
adc
mov
inc
dec
daa
mov
sbb
cltd
leave
fucomp
adc
hlt
pop
jb
mov
xor
enter
add
inc
push
fiadds
pop
in
and
test
imul
fnstsw
inc
test
movsl
and
cmp
fidivrs
push
es
add
push
push
add
imul
cltd
mov
clc
push
call
fidivs
stc
les
neg
xchg
adc
cs
int
imul
xchg
mov
sbb
inc
xorb
es
mov
xchg
push
fsubrs
mov
iret
or
xor
fidivrs
sbb
dec
ffreep
push
dec
xchg
jmp
fisubrs
cs
fidivs
rol
scas
out
inc
pop
repz
sbbb
popf
repz
out
or
cs
nop
pop
lock
sub
shrb
fcomi
lahf
outsb
enter
mov
xor
pushf
jl
jmp
fdivrl
scas
icebp
lods
movsl
cmpsb
mov
iret
xor
mov
jnp
mov
jmp
cmpsl
add
inc
scas
mov
fdivrl
mov
mov
cwtl
fdivr
mov
jmp
sub
mov
lods
insb
xlat
jge
cmp
fldl
iret
orb
jle
movsb
in
mov
test
lret
stos
loope
fst
mov
cmp
cmp
aad
dec
mov
adc
pop
lret
nop
fwait
lahf
pop
push
dec
adc
mov
jl
cmp
jnp
fisttpll
mov
adc
fcmovnu
sub
mov
sub
or
test
cmp
cmp
ror
dec
je
fs
cmp
xor
ds
push
std
imul
mov
popf
sub
in
call
dec
mov
sub
push
pop
sti
jo
jne
sbb
stos
dec
xlat
mov
pop
inc
jmp
jo
int3
mov
fistps
mov
int
ss
xchg
adc
adc
xchg
sahf
push
mov
cmpsb
inc
lret
jmp
cmpsb
xlat
adc
inc
cs
adc
sub
and
popf
daa
mov
add
and
pushl
pushf
pushf
call
test
jmp
bt
add
rol
jmp
mov
pushf
pushl
mov
jmp
cmp
add
bt
and
cmp
add
cmp
call
in
push
xor
or
les
lock
fisubl
les
pop
sbbb
mov
cli
cmpsb
in
inc
jecxz
bound
sub
les
or
xchg
les
cmp
mov
in
ficoml
adc
lods
mov
sub
push
jl
in
icebp
sub
shrl
cltd
jno
sarl
mov
aad
out
scas
outsb
movsb
scas
dec
mov
sbb
into
movsb
sbb
sbb
push
pop
jae
cltd
ss
mov
lahf
xchg
call
mov
sbb
adc
ret
pop
icebp
xchg
mov
imul
sti
icebp
and
mov
lock
rcl
cmp
out
in
repnz
popf
es
imul
lock
mov
xchg
inc
shlb
xor
hlt
mov
movsb
mov
adc
ja
js,pt
in
push
inc
adc
insl
jb
and
fistpl
mov
insb
loopne
push
jmp
and
or
stos
dec
mov
nop
pop
sahf
dec
popf
loope
mov
out
out
or
shll
icebp
and
cmpsb
rcrl
mov
dec
add
rcl
out
cmp
mov
mov
xor
test
adc
cs
mov
rcrb
push
cmp
js
cmpsl
cld
in
push
lods
xchg
xor
in
sarl
lds
and
push
les
jmp
sbb
popf
and
xorb
inc
or
outsb
aam
pop
negb
xor
xchg
rorb
sbb
sti
test
and
cmc
lsl
sbb
xchg
gs
mov
dec
rcl
jmp
cs
sub
cmp
adc
mov
xor
xor
cs
mov
ficoms
dec
jbe
aam
or
lret
and
inc
sbb
mov
mov
cmp
loope
mov
sarb
or
xor
add
psubusb
addl
popf
rcrb
cmp
enter
xor
and
push
pop
dec
scas
aas
fistpll
mov
or
pop
cld
clc
lcall
mov
push
pushf
mov
movw
mov
push
call
bt
cmc
shr
mov
movw
cmp
bt
sub
test
add
jmp
shr
mov
sub
movl
call
pusha
movb
pushl
popl
pushf
pushl
ret
out
cmp
xchg
push
mov
mov
addr16
repz
xor
adc
dec
fs
jg
repz
mov
push
sub
sbb
xchg
test
cli
push
adc
cld
push
mov
jg
pop
nop
jb
int
or
ret
and
stos
jns
or
xchg
sub
dec
and
dec
mov
and
js
dec
cmpsl
mov
cmp
pop
xchg
aaa
stos
mov
dec
sbbl
adcl
gs
xchg
jbe
insb
stos
ds
shlb
iret
sarl
aaa
jae
mov
mov
push
out
in
fldt
lods
leave
das
or
xchg
sub
inc
inc
mov
not
inc
testl
xor
gs
add
mov
jnp
push
pop
daa
or
and
fs
jge
xchg
and
popf
and
xchg
jb
xor
in
sti
loope
out
dec
mov
sbb
popf
and
push
xor
mov
pop
jno
enter
push
sbb
sbb
pop
fs
xchg
mov
sar
sti
xor
dec
add
sbb
xchg
leave
add
sti
pop
repnz
and
ret
jmp
push
cmp
adc
inc
lret
add
movb
movl
pusha
lea
jmp
jmp
movl
push
movb
movw
pusha
lea
jmp
stc
sub
cmp
cmc
call
mov
cli
out
mov
popa
ss
js
aad
mov
mov
in
pop
fs
test
jbe
aad
mov
cmc
fdivrl
push
sub
cmc
ret
out
mov
clc
push
jge
jbe
push
sub
movb
adc
adc
xor
jno
mov
lods
fadds
insl
adc
xor
xchg
out
aas
jmp
movzbw
mov
movl
movsbw
mov
movsbl
lea
pushf
pushf
call
adc
adc
add
setno
pushf
movb
xchg
movb
movb
call
call
int3
or
or
lcall
mov
int
jae
daa
inc
cld
sub
fisubl
cmp
and
add
vhaddpd
repz
fucomip
insl
loopne
int3
cmp
adc
mov
mov
adc
js
adc
mov
les
jp
sbb
add
test
ds
scas
aad
xor
dec
fsubrs
push
aaa
mov
sbb
push
mov
popf
and
and
adc
outsl
call
xor
iret
sub
mov
js
clc
add
add
mov
out
dec
sub
inc
out
and
cmp
sarb
mov
mov
lahf
pop
orb
pop
aam
out
loope
jmp
push
ret
cmp
rcr
lret
adc
cmpsb
outsl
unpcklps
pushf
ss
movsl
stc
mov
xchg
jno
outsl
jno
popa
dec
cmpsl
leave
jmp
addr16
add
xchg
sbb
leave
add
imul
mov
out
adc
mov
les
mov
clc
icebp
jl
scas
repnz
add
or
pop
mov
adc
xchg
fstl
xchg
pop
and
inc
mov
inc
sbbb
dec
mov
test
dec
sarb
sub
xor
push
xor
or
cmp
mov
test
sbbb
push
js
movl
inc
or
add
push
and
inc
pop
xor
icebp
daa
cmp
sub
iret
rcrb
mov
stos
rcll
inc
nop
addr16
ss
inc
push
test
pop
mov
sbbl
insl
cli
or
dec
lea
xchg
lods
in
cmp
push
test
lock
lret
mov
fisubrl
out
mov
inc
sahf
cmp
xchg
sub
mov
adc
test
pop
repz
rcll
push
xlat
int3
fdivr
ret
movntps
aad
xchg
mov
cmp
or
mov
cmpsb
or
std
mov
test
ret
mov
mov
dec
jmp
cli
sbb
push
hlt
les
aam
xor
mov
push
cmp
inc
and
pop
test
out
inc
mov
icebp
sbb
pop
mov
mov
psubsw
mov
sub
test
fidivl
add
sbb
cli
inc
adc
daa
xor
pushf
mov
jne
mov
hlt
mov
jmp
push
mov
ret
fidivs
test
pop
jbe
insb
mov
pop
or
test
jmp
arpl
pushf
push
movl
call
scas
push
sti
cmp
jno
mov
dec
push
push
and
cld
mov
jecxz
or
mov
xchg
mov
imul
mov
dec
cmpsl
push
and
and
or
mov
jmp
inc
into
aaa
aaa
shrb
sbb
movsb
clc
sar
and
icebp
jae
xchg
jl
mov
and
xor
pushf
movl
pushf
jmp
dec
sub
loope
xor
inc
mov
das
add
dec
pop
push
add
arpl
jle
test
add
pop
push
mov
clc
aam
or
add
cmpsb
repnz
jle
dec
arpl
cmpl
cmp
mov
je
scas
adc
std
mov
push
ss
and
pusha
inc
xor
test
sbb
and
es
jno
inc
pop
mov
ja
scas
lds
fcomp
jge
mov
jo
daa
call
xor
repz
pop
lahf
in
addr16
mov
mov
cmpsl
pop
jns
ljmp
xlat
ret
cltd
ljmp
dec
push
insl
arpl
cmpsb
push
push
mov
xor
pop
mov
enter
pop
xchg
aam
iret
dec
clc
addl
mov
sbb
cld
xor
push
movsl
xlat
sbb
and
pop
push
pushl
xor
adc
or
xor
xor
pop
mov
xchg
inc
mov
cli
push
sbb
jne
scas
xor
scas
out
in
in
mov
push
pop
lods
jns
mov
scas
xor
cmp
and
mov
inc
adc
lods
call
jo
out
aaa
jno
mov
and
adc
sub
sub
cs
push
sub
jge
movsb
sbb
lcall
in
mov
data16
mov
inc
add
ds
in
iret
mov
enter
sbb
pop
or
sbb
xor
fs
inc
mov
add
lods
stc
push
fucom
mov
xor
call
sub
test
jmp
mov
movzbw
mov
lea
call
and
jmp
movl
jmp
jmp
or
shll
out
and
or
xor
cmp
inc
push
aad
rorl
fs
clc
dec
in
test
je
cmp
jmp
adc
dec
addb
pusha
rcl
adc
std
xchg
loop
dec
cmpsl
cmc
aam
jp
test
and
pop
testb
int3
or
pop
cmpsb
rcrl
xor
sbb
cmp
sub
mov
in
mov
stc
fwait
call
iret
movsb
rcl
push
ret
aad
ret
insb
into
and
mov
adc
iret
jle
lahf
rclb
cli
adc
push
and
rclb
std
mov
adc
jne
lret
outsb
adc
loopne
push
ret
repnz
stos
push
xchg
sbb
push
pop
sbb
xchg
pop
fnsave
test
sbb
rclb
dec
insb
mov
imul
adc
lock
addr16
cltd
adc
cmc
adc
pop
inc
xor
sub
sub
push
or
mov
adc
xchg
push
int
pop
ror
test
mov
fcmovnu
mov
xchg
and
cmp
in
ror
cltd
sub
mov
iret
addr16
xchg
cmp
or
push
mov
in
pop
xor
or
mov
dec
sarb
inc
loop
test
bound
repnz
cli
cli
pop
cmp
xchg
test
push
jecxz
mov
cmp
and
mov
dec
cmp
adc
cmp
inc
mov
inc
leave
lods
mov
push
push
cmc
add
repz
ljmp
dec
rcrl
xchg
jmp
mov
rcrl
loop
out
gs
aaa
ja
mov
xchg
mov
xor
mov
push
dec
sahf
xor
xor
in
push
nop
aas
sub
jmp
and
psubq
sarl
and
enter
jo
xor
jmp
decb
lods
inc
mov
insb
mov
ja
mov
push
or
adcb
out
jnp
sbb
fcompl
cmp
jp
xchg
cli
pop
movsb
test
lock
cld
cmpsb
ljmp
push
in
fdivp
mov
mov
pop
sbb
and
mov
xchg
cmpsl
jo
and
andb
loope
dec
dec
and
jno
sbb
mov
mov
inc
jno
adc
jp
mov
sar
shlb
pop
dec
or
bound
or
push
sub
jae
test
test
out
iret
mov
outsl
push
sbb
pop
mov
iret
mov
movl
mov
pop
call
call
rclb
adc
shll
adc
lret
in
movhlps
imul
cmp
outsb
cmp
imul
stos
mov
mov
ljmp
pop
pop
lahf
adc
push
mov
jge
push
push
insb
adc
addr16
mov
mov
iret
movl
test
and
out
sub
iret
xchg
sub
dec
insb
mov
icebp
popf
mov
pop
mov
jp
mov
or
pop
sub
lods
dec
fdivrl
lcall
pop
and
popa
mov
xchg
inc
popa
mov
xor
and
or
pop
cmp
arpl
or
mov
outsl
ret
add
or
adc
test
jmp
lahf
sub
xchg
sar
es
xchg
pop
call
lds
decl
in
lea
dec
pop
fwait
sti
fstl
arpl
es
clc
fnstcw
push
jns
push
push
xchg
pop
cmp
lahf
fdivs
mov
inc
in
sbb
call
cmpb
int3
shrb
jb
movsl
xchg
repnz
clc
iret
out
pusha
cmp
mov
loopne
mov
push
pop
insb
test
jne
dec
test
mov
or
ret
mov
xchg
imul
leave
cmpsl
sub
shlb
imul
push
xor
jg
dec
and
shll
adc
popa
cmp
frstor
repz
dec
repz
mov
add
and
ja
xor
xor
mov
aad
daa
adc
fwait
ljmp
fildl
jmp
lcall
and
inc
nop
mov
fists
sahf
mov
divb
loopne
addb
sbb
int3
cmpsl
add
mov
fwait
popa
adc
scas
xchg
lret
mov
aaa
mov
or
mov
pushf
adc
push
xor
not
ss
push
push
add
and
fildl
cltd
repz
mov
fidivrs
imul
pop
mov
add
inc
lds
push
das
lahf
mov
mov
das
icebp
dec
sbb
stos
lea
push
movsb
pop
mov
pop
hlt
mov
sub
mov
jmp
test
mov
and
mov
stos
andl
jle
add
or
add
in
fildll
subl
or
xor
aaa
mov
fiadds
cmp
dec
cmpsb
add
ret
sub
loopne
movl
movb
lea
jmp
movzwl
xadd
mov
shr
shr
mov
test
adc
add
add
add
bsr
pushf
mov
stc
cmc
stc
and
cmp
bt
call
xchg
stc
pusha
inc
cmp
lret
xor
out
out
xor
out
stc
sub
adc
dec
aam
js
cmpsl
addb
jecxz
mov
mov
insl
inc
movsl
sbbb
jns
ljmp
xor
xchg
hlt
ds
hlt
iret
jmp
adc
push
shr
push
xchg
adc
outsl
dec
test
movsb
mov
ret
mov
sahf
push
shll
or
xchg
mov
ffree
mov
cmpb
pop
popf
icebp
aaa
ret
push
sub
dec
mov
cmp
cli
push
xchg
in
add
shll
xchg
mov
dec
imul
aaa
fnstenv
outsl
jg
inc
loopne
jg
inc
and
and
cltd
rcrb
fsubrl
dec
rcrb
push
negl
or
fdivl
fldl
in
mov
adc
inc
push
cltd
mov
outsb
sbb
jl
les
mov
stos
inc
mov
jo
jl
arpl
xchg
andl
shr
mov
fildll
out
enter
dec
loop
or
dec
mov
cltd
push
cmp
and
adc
mov
xlat
cli
imulb
je
cmpsb
mov
push
mov
push
cmp
xchg
cmp
insb
popf
add
fs
out
sub
das
xor
int
ja
pop
daa
or
arpl
mov
js
push
lret
or
push
or
push
loope
mov
addb
icebp
shrb
mov
inc
imul
notb
fidivs
inc
or
jne
ds
pop
push
pop
popf
popf
adcl
aaa
add
mov
jge
mov
addb
dec
or
iret
cwtl
cmp
add
push
pop
jbe
popf
adc
cmpsl
daa
mov
pushf
movl
lea
jno
push
mov
movl
pushf
lea
jmp
call
push
call
call
jmp
mov
call
pop
dec
xor
dec
sbb
jge
cli
icebp
cmpsb
inc
pop
add
lods
std
jecxz
inc
sbb
subb
and
add
lods
std
test
pop
pop
xor
sbbb
rcrb
inc
imul
xchg
in
pop
fs
lea
jl
gs
jl
int
jge
push
loop
ds
push
outsl
rorb
insb
out
shlb
pop
mov
adc
pop
or
rol
dec
into
imul
xor
push
aaa
cmp
aad
fcomps
fisttpl
xor
movl
pusha
push
lea
jmp
rol
shr
and
shl
mov
pushf
shr
clc
pushl
clc
test
add
btr
and
bt
movsbw
mov
jmp
lea
jl
dec
shrd
mov
bsr
mov
clc
lea
stc
test
test
pushf
add
lea
mov
push
pusha
pushf
movb
lea
jmp
push
jmp
call
test
jmp
movl
pushf
movw
jmp
jmp
push
movl
push
lea
jmp
mov
movb
pushl
mov
cwtl
not
push
mov
jmp
pushf
pushf
pushl
push
movl
call
pushf
mov
not
movzbw
movzbl
mov
cwtl
mov
mov
jmp
shl
mov
not
shl
test
shr
cmc
bsr
add
pusha
and
xchg
add
and
adc
call
push
movl
pushf
push
lea
jmp
out
jmp
sar
inc
in
pop
cmp
lock
inc
sbb
sub
lret
cmp
fsts
add
sub
ret
inc
sbb
adc
xchg
cmp
mov
pusha
pop
jmp
adc
xchg
pop
pushl
popf
adc
and
xor
sbb
gs
push
ja
fdivp
pop
ss
mov
test
addr16
add
movsl
adc
dec
call
sbb
push
ss
iret
adc
lret
int
push
pop
jl
sub
popl
mov
outsb
inc
dec
push
in
pop
daa
inc
adc
cmpsb
or
xor
sub
ret
test
sbb
sbbb
imul
xor
mov
dec
mov
jl
les
popf
adc
fs
and
cmp
icebp
jns
dec
mov
cld
iret
pop
inc
push
sub
mov
cmp
jge
push
xchg
aam
jbe
pop
imul
adc
and
cmp
dec
cs
push
pop
out
ds
jb
rcr
xor
out
mov
mov
xchg
ss
pop
xor
pop
popa
sbb
lret
push
push
aam
leave
and
test
mov
adc
pop
push
icebp
sub
sub
scas
in
or
bound
popa
cmp
dec
xchg
aam
lahf
xor
leave
push
scas
daa
xor
push
shrl
jp
or
xchg
xchg
call
lds
dec
pop
and
xor
gs
dec
jecxz
jns
xor
inc
jmp
ret
adc
rcrl
out
lahf
lds
cmp
push
jb
fmuls
out
gs
repnz
stos
add
test
cmpsl
stos
push
xchg
mov
pop
adc
lea
pop
mov
pop
icebp
adcl
test
add
xor
fisubl
mov
push
aaa
mov
dec
bound
popf
pmaxub
mov
in
ljmp
ds
mov
cmp
pop
mov
mov
cli
push
ljmp
stos
shll
and
es
mov
out
loope
icebp
jnp
sti
inc
sbb
fsqrt
bound
call
dec
iret
pushf
jmp
addr16
jge
ljmp
cwtl
cwtl
xor
js
mov
mov
in
mov
ja
repz
into
push
popw
cmpsl
adc
shll
mov
nop
pop
sub
inc
fisubrs
pop
dec
jp
pop
rclb
xchg
jmp
in
scas
sub
push
add
adc
pop
and
out
push
scas
push
inc
fsubrl
lds
pop
leave
jne
push
stos
mov
push
lock
mov
movsl
fwait
sbb
ffreep
std
add
cltd
mov
inc
shrl
fidivs
fdivrl
jle
inc
clc
clc
jle
test
sbb
add
pop
shll
adc
negl
popf
or
sub
cmp
adc
push
repnz
or
mov
xlat
rorl
xor
fcompl
rcl
mov
jmp
and
jmp
fwait
xchg
add
push
mov
call
jne
fucomp
sbb
sub
pushf
stos
add
push
adc
sub
and
push
sub
scas
add
shl
ljmp
lods
test
mov
test
popf
or
inc
inc
cmp
adc
inc
push
jne
popf
or
adc
cmpsb
pop
insb
mov
in
fnstenv
xor
test
stos
test
pop
ds
xor
mov
mov
sbb
inc
inc
ret
es
xchg
sub
mov
rorb
ds
add
jp
jbe
add
sbb
addr16
insb
mov
jnp
xor
ja
inc
cmp
mov
ljmp
or
jl
pushl
pop
sbb
test
popf
or
popa
inc
inc
cmp
cmc
cmpsl
inc
dec
adc
xor
dec
insb
xor
add
aam
pop
cwtl
inc
pop
or
jbe
or
inc
lahf
pop
movsb
sahf
in
scas
cltd
lret
push
pop
xor
jge
pusha
mov
movl
pushf
pushf
jmp
call
negb
mov
jle
and
xchg
hlt
xchg
sub
cmp
mov
xor
fwait
dec
addr16
xchg
jne
insl
dec
or
pop
mov
add
push
jo
stos
ss
ret
in
sub
adc
leave
fsubr
fmull
cmp
dec
xchg
test
jae
aaa
mov
pop
imul
mov
lcall
dec
shrl
jp
mov
xchg
mov
shr
inc
mov
or
mov
popf
or
xor
leave
in
push
cltd
sub
mov
push
jl
xor
mov
loopne
lret
adc
in
leave
insb
pop
sbb
mov
dec
mov
out
in
into
push
mov
std
mov
xor
jl
pusha
xchg
xor
xchg
mov
leave
inc
push
xor
popf
or
mov
in
scas
mov
cmp
out
es
mov
fists
jno
adc
inc
addr16
push
imul
jge
sahf
mov
das
iret
sub
xchg
mov
inc
popf
push
push
dec
inc
lds
cmp
add
cmp
ss
popf
dec
cmp
or
out
push
mov
and
in
and
ljmp
mov
into
mov
sub
and
cmp
fsubrl
adc
cmc
movsb
cmp
mov
repz
lahf
aaa
roll
push
sub
lret
or
loope
ljmp
cli
xchg
clc
add
cmpsb
add
into
ja
xchg
repnz
dec
out
pop
xor
stc
cmp
xor
sbb
add
dec
xor
pushf
movl
jmp
loopne
loopne
add
fistps
pop
push
outsb
mov
ficoms
ret
inc
or
pop
jns
and
js
pushf
cmpsl
lock
push
nop
mov
push
mov
sub
sahf
in
mov
test
ljmp
sbb
xor
xlat
repz
movsb
pop
in
sbb
pop
test
sbb
ds
xor
push
or
dec
jae
imul
push
mov
inc
mov
sbb
xchg
mov
loope
ret
sub
scas
or
cmpsl
mov
or
out
in
or
daa
das
pop
outsb
xchg
fisttpl
jecxz
je
pop
dec
sub
jbe
in
shlb
sbb
push
ss
xor
mov
scas
jmp
mov
popf
or
imul
xor
daa
push
dec
cmpsb
loope
cmpsl
ret
or
test
in
and
inc
cmp
lret
leave
das
loop
cmp
add
clc
xchg
jle
fnstsw
sub
popa
mov
and
fstpl
pop
aam
in
mov
imul
pop
cld
cmp
jbe
imul
mov
test
rcll
scas
imul
cmp
lcall
adc
call
lret
cmp
jo
xor
imul
rcr
stc
clc
xadd
movzbl
sub
inc
clc
add
btc
movzbw
sar
bsr
lea
pushf
bt
bt
call
pusha
mov
mov
neg
neg
shl
bswap
movzbw
sbb
bsr
lea
rcr
test
or
stc
mov
cmp
bt
add
cmc
sub
jg
jb
mov
pusha
shrd
shl
movzbw
jmp
movl
jmp
pusha
movl
movb
pushf
movl
push
mov
pushf
pusha
lea
jmp
bt
test
add
mov
jmp
or
mov
out
ret
aam
ret
or
ds
divl
jb
sub
and
ja
popf
jmp
adc
setle
lods
sub
test
push
loope
hlt
jno
inc
cmc
xor
cmpsb
popa
in
or
jmp
xchg
mov
inc
fmull
outsl
pop
adc
dec
mov
adc
outsb
push
movsb
pushf
test
adc
aaa
test
mov
out
sbb
jbe
aam
pop
and
test
pop
mov
pop
push
ljmp
popf
je
mov
mov
push
mov
jae
cmpsb
inc
loope
sbb
das
push
data16
inc
pop
push
mov
lock
ljmp
bound
pusha
subl
fs
pop
mov
pop
xor
mov
or
cmpl
hlt
pushf
inc
sub
mov
xchg
jno
or
dec
lcall
and
ret
imul
mov
and
lret
adc
dec
sbb
jns
lods
popf
loopne
icebp
loopne
mov
fistl
fldcw
push
cmp
arpl
cmpsl
repz
push
test
fs
out
repz
fsubl
out
add
test
xor
cmpb
inc
cmp
out
int
and
push
scas
add
mov
rorl
sub
pop
dec
lcall
xor
shrl
push
out
mov
mov
mov
jns
pushf
cmp
adc
js
popf
mov
js
add
or
dec
and
cli
adc
cmp
movsb
mov
xchg
ret
cli
cmp
mov
push
pop
mov
fiaddl
push
sub
iret
lret
xor
xchg
cltd
cs
leave
dec
inc
dec
test
mov
in
popf
push
sub
fdivs
fcomps
inc
imul
call
xchg
test
out
jne
xor
outsl
cmp
sbb
sub
mov
xor
push
out
mov
pop
sbb
jp
shll
xor
jns
test
in
and
ret
mov
inc
push
inc
pop
aam
outsb
inc
jp
lock
push
outsb
or
sbb
pop
pop
dec
xchg
out
fcompl
mov
std
sbb
fisubs
and
push
mov
push
divl
js
movsl
in
lret
mov
dec
inc
inc
insb
bound
mov
in
sahf
dec
add
adc
mov
sub
enter
adc
out
les
sti
lds
mov
into
or
jns
orb
inc
mov
loope
jnp
sub
adc
push
movsb
out
rclb
pop
insl
cmc
aas
push
rcrb
adc
aam
jns
ja
push
mov
packsswb
enter
sub
adc
fisubrl
insl
inc
mov
xchg
jmp
add
inc
data16
or
mov
inc
fs
cmp
loopne
fs
inc
inc
cwtl
push
cltd
pop
loopne
in
jg
lcall
popf
add
jg
scas
scas
ret
aad
mov
dec
mov
popf
add
sub
pushl
jg
add
lahf
sub
fwait
scas
scas
ret
push
lock
push
mov
lods
sub
inc
movsb
xchg
dec
dec
pusha
xor
push
xor
jmp
mov
inc
test
add
mov
fcomps
out
scas
stc
scas
inc
xor
mov
mov
aam
mov
jg
pop
sbbl
call
sub
pop
add
cli
push
mov
mov
iret
out
popf
shll
lods
fidivrl
push
jae
aam
mov
das
xlat
std
jge
mov
jmp
push
daa
mov
inc
jg
rcrl
rcr
scas
das
dec
jmp
es
push
inc
mov
std
push
mov
mov
gs
or
add
aad
ret
imul
dec
lock
je
push
js
sbb
int
jnp
xchg
jg
repnz
lock
in
sub
rcrl
add
dec
out
subb
xor
pop
lret
add
jnp
pop
pop
imul
aaa
jle
add
repz
adc
jo
push
or
xor
movsb
fistl
hlt
xchg
jb
gs
out
push
and
movsb
push
xor
cmp
jns
add
mov
dec
es
mov
mov
dec
imul
cmpsl
xchg
adc
pusha
and
xor
mov
in
jnp
loopne
inc
shrb
lret
fwait
es
es
insb
mov
xorb
jnp
loop
xchg
jnp
mov
movsl
lods
xlat
xor
and
subb
fdivrp
or
cltd
mov
cmc
lret
rol
fidivs
filds
faddl
and
sub
mov
sahf
rcrl
sbb
lds
pop
pop
sarb
inc
pusha
std
aas
or
leave
xor
dec
rdtsc
mov
fsubp
icebp
mov
es
and
xor
or
cmpsb
cmp
dec
jge
cmp
cmp
mov
rorb
cmp
int
int
and
dec
call
mov
js
shll
jb
inc
arpl
xor
fdivs
lahf
stos
subb
inc
push
adc
sbb
cmp
sub
mov
xchg
or
imul
sbb
mov
and
inc
and
aam
arpl
cmp
repz
fistpll
cmp
sub
jge
loop
adc
lret
sbb
sbb
scas
shll
fsubs
loop
mov
xor
in
adc
mov
js
mov
push
jl
pop
xor
into
pop
mov
lds
xor
out
andb
mov
movsl
push
mov
add
repz
mov
rcrb
in
mov
scas
add
sti
fs
or
add
dec
inc
stc
test
pushf
call
dec
cmp
inc
sub
loope
shr
stos
faddl
push
stc
inc
negl
dec
push
lret
mov
jle
adc
fdivrl
and
push
xor
mov
jecxz
loop
mov
inc
ror
mov
adc
aaa
and
movsb
dec
dec
aad
xchg
jg
adc
add
mov
mov
and
inc
sbb
fsubs
xchg
add
add
pushf
inc
jmp
push
push
pushl
movl
push
pushl
push
lea
jmp
pushf
movl
call
sarl
out
nop
stos
and
testl
adcb
sbb
fisttpll
in
testb
inc
insl
mov
xchg
ss
and
push
loop
mov
jge
fisttpll
in
popa
lods
mov
and
jecxz
cltd
scas
and
pop
scas
mov
inc
push
loope
in
test
push
pop
and
cmpsl
hlt
xchg
and
pushf
pop
adc
push
add
mov
sub
add
arpl
lret
pop
push
or
pop
popf
jg
push
loope
push
bound
push
scas
fiaddl
fcom
xchg
out
repz
fimuls
loope
sbb
movsl
and
jecxz
pmulhuw
js
push
push
xor
test
inc
adc
ljmp
popf
add
fs
xsha1
cmpsb
mov
xor
cmp
enter
jge
or
mov
adc
loopne
pop
and
push
add
xchg
ds
lods
pusha
mov
lock
lcall
mov
pop
and
fs
or
aam
pusha
push
jg
inc
hlt
xchg
cmc
stc
xlat
out
sbb
add
loop
addl
pop
mov
fsubs
int3
mov
push
outsb
mov
mov
xchg
popa
out
and
ljmp
ljmp
add
stos
adc
and
lret
mov
test
sub
dec
pop
jg
mov
push
popf
pop
mov
xchg
push
mov
pop
xor
movsl
jns
sbb
call
mov
in
push
xor
loop
iret
lock
in
out
sbb
cmpsl
push
sub
adc
adc
lahf
mov
ret
add
push
inc
xchg
mov
xchg
out
xlat
mov
mov
into
test
adc
mov
in
aam
testl
aaa
scas
push
mov
ret
push
bound
and
cmp
aaa
cmpsb
popf
cmp
loopne
lahf
cmp
es
das
mov
scas
inc
add
cmp
call
xchg
nop
mov
aam
sbb
mov
leave
xchg
out
push
jmp
adc
push
test
mov
add
ljmp
fcomip
jo
lds
sar
pop
push
jnp
loope
gs
xlat
jno
mov
and
gs
push
sbb
adc
in
jle
xchg
popf
aad
rclb
clc
int3
ret
mov
lock
adc
dec
sahf
iret
arpl
mov
call
mov
push
test
enter
mov
arpl
daa
lods
hlt
call
mov
add
dec
mov
mov
xor
pop
cmp
lret
in
ret
mov
lock
lods
and
lret
lret
call
mov
and
ficoms
notb
loop
inc
sbb
outsl
cmp
inc
lahf
mov
mov
or
mulb
fcoms
jo
jl
es
fmull
dec
nop
jo
fucom
ret
and
sub
roll
jne
shll
dec
in
sbb
dec
pop
dec
stos
mov
dec
cmpsb
add
mov
fldt
xor
mov
sub
pop
movsb
les
inc
stos
pop
jb
pop
jl
push
mov
xor
repnz
pop
inc
or
and
xchg
aam
repz
pop
mov
cmp
ret
inc
lcall
push
fdivrl
mov
sarl
mov
aas
adc
fstpt
mov
rcrl
lret
cs
cmp
sbbl
fmuls
rclb
fcomps
mov
movsb
mov
dec
jl
mov
in
in
test
inc
ja
pushf
outsb
in
pop
sbb
cmp
jno
scas
mov
aaa
add
dec
cli
and
addr16
mov
ret
out
push
mov
add
testb
mov
mov
ljmp
nopl
jle
push
movsl
push
jno
pop
nop
in
jnp
daa
sbb
mov
or
stos
adc
sub
mov
or
dec
add
adc
dec
ljmp
dec
jle
or
ja
dec
push
mov
imul
xor
lods
jp
clc
xor
movb
loop
clc
pop
rcl
aas
xchg
mov
push
popf
jge
pop
mov
sbb
sub
push
pop
add
dec
stos
add
jge
add
push
push
lods
dec
icebp
push
lock
cmp
sub
adc
pop
cmp
mov
or
inc
out
jns
dec
and
sbb
or
push
pop
adc
sub
dec
xchg
lea
xchg
push
add
pop
inc
lahf
imul
xchg
push
xor
fwait
mov
loop
lret
loop
sub
push
mov
cmpsb
sti
cmp
dec
lahf
sub
cmc
inc
ret
outsl
mov
aam
nop
inc
dec
push
div
lcall
arpl
jnp
cmp
push
jnp
int3
xchg
adc
push
pop
into
cmp
jae
push
inc
mov
rcrb
stos
lcall
and
sub
inc
push
xchg
test
dec
jo
jle
js
pushf
sti
or
ljmp
push
xor
mov
or
cli
adc
stos
cmp
outsb
pushl
std
mov
inc
sub
inc
sub
pushf
cli
bound
pop
cld
inc
ja
jmp
xchg
dec
loope
or
arpl
xor
out
fucomip
lods
sub
int3
cltd
xor
ja
jmp
popf
cmp
or
in
mov
into
idivl
fnstenv
fdiv
addl
movsl
lds
cmpsl
sbb
fdivr
inc
pop
or
cmp
movsb
mov
mov
stos
and
jns
lods
mov
fstl
das
aam
adc
pop
jbe
ret
fsubrl
sub
sbb
push
dec
jb
insb
shlb
jo
xchg
cs
sub
gs
or
repnz
imul
fbstp
shl
fcompl
push
pusha
pop
das
inc
rolb
ljmp
cwtl
cld
mov
dec
sub
je
enter
xor
pushf
stc
das
mov
or
mov
sub
clc
xor
inc
mov
jo
cmp
lds
push
xchg
push
int
idivb
outsl
lds
push
cmp
or
je
notb
ljmp
mov
xchg
sbb
arpl
push
pop
mov
pop
sbb
enter
aaa
xor
add
push
leave
jns
cwtl
pop
sbb
test
iret
aas
test
lret
ret
push
xor
iret
mov
popa
es
mov
push
imul
shlb
pushf
in
sbb
xor
in
sub
in
inc
push
iret
jns
fsub
lret
pushf
sub
loope
jg
sub
xchg
lcall
pop
test
lret
in
inc
jo
inc
cld
adc
jno
mov
int3
std
addb
in
dec
mov
stc
repnz
adc
aas
pusha
je
push
push
mov
sbb
and
and
in
leave
jb
addr16
push
push
jno
out
push
push
xor
shll
xor
push
mov
adc
push
push
ret
out
jmp
cmpsw
dec
scas
pop
cmp
xlat
nop
push
cld
add
pusha
sbb
add
cmpsl
mov
dec
icebp
test
xor
pop
test
das
xchg
cs
cmp
ljmp
mov
push
jg
out
sub
stos
push
fs
fisttps
arpl
frstor
test
or
out
push
xor
stos
in
inc
push
xchg
gs
xor
inc
imul
pushf
or
mov
into
negl
roll
lods
adc
int3
sbb
xchg
mov
outsb
and
add
dec
lods
push
stos
loopne
cmp
repnz
mov
jo
addr16
leave
sub
mov
pop
loopne
cli
inc
loopne
pop
test
fdivrl
movsb
jne
push
xchg
notb
hlt
mov
push
mov
mov
pop
inc
and
xchg
leave
lea
enter
add
ss
cmp
or
mov
or
xlat
cld
adc
xchg
mov
or
sbb
icebp
xchg
mov
xor
aaa
mov
fisttpl
inc
xor
gs
xchg
xchg
adc
pop
xor
call
add
fisubs
push
and
dec
jecxz
or
xchg
imul
sarb
shll
xor
or
add
mov
subl
out
cwtl
flds
leave
in
iret
xor
inc
outsl
jmp
mov
movl
push
lea
jmp
movb
call
add
bt
bt
xor
pushf
pushf
pushl
mov
call
push
pushf
movl
pushl
call
mov
stc
pushf
call
push
movl
push
call
scas
inc
jp
inc
inc
dec
push
mov
aad
mov
add
mov
sub
adc
int
push
xor
push
dec
pop
add
adc
mov
lret
in
add
fwait
popf
jg
push
push
out
orb
pop
movsb
adc
sub
stc
pusha
inc
adc
loop
jbe
loope
xchg
fcmovbe
inc
in
aad
lea
jl
xor
and
pop
push
ret
popa
adc
popf
shrb
pushf
cmc
nop
shlb
fwait
gs
or
add
mov
clc
push
cwtl
call
bswap
mov
pushl
lahf
movl
lahf
mov
pushf
pusha
mov
pushf
lea
call
jmp
jle
dec
fnsave
xchg
xchg
lret
mov
push
cmc
mov
and
mov
mov
mov
cs
loope
in
ja
sti
jge
fs
or
popa
mov
push
hlt
inc
popa
xor
inc
daa
rorb
imul
stc
dec
pop
js
mov
sub
adcl
sub
cmpsl
push
stos
sti
mov
pop
ss
cmp
fbstp
negl
and
out
and
mov
shll
push
xor
push
in
add
cmp
imul
fstl
jbe
inc
xchg
mov
aaa
adc
xchg
sub
das
pushf
imul
mov
mov
adc
movaps
dec
ficompl
push
ljmp
enter
jmp
xchg
lahf
push
mov
cmpsl
adc
push
jno
lock
xchg
cmpsl
mov
pushf
hlt
add
std
mov
pushl
xlat
pop
test
pushf
hlt
in
jns
pop
jle
int
out
push
fcomi
adc
add
xchg
test
dec
dec
cmpsl
xor
in
test
mov
pop
add
fisttpl
inc
push
in
fistpl
ret
mov
enter
loop
push
push
xchg
fdivrp
aas
xor
inc
popa
mov
mov
jl
pop
mov
mov
jns
pushf
hlt
lods
ficomps
jmp
lea
movl
pushf
movw
lea
jmp
aam
jp
repnz
pop
mov
and
mov
mov
or
mov
daa
sub
lret
fnstsw
push
xchg
mov
sbb
jl
hlt
mov
cmp
mov
pop
jp
std
jae
rorb
xchg
jl
sub
dec
ss
pop
mov
mov
hlt
and
or
in
lcall
mov
or
mov
xor
mov
xor
loopne
pushl
mov
jp
loop
pushf
xor
data16
lock
ljmp
into
dec
lods
mov
icebp
fstpl
xor
in
xor
xlat
jno
test
cmp
int3
repz
mov
mov
js
enter
negb
rcl
dec
shl
out
adc
xor
mov
fsubrs
test
insb
aaa
rdtsc
pushf
repz
fsubp
sub
lret
cld
jecxz
stos
push
pop
call
sub
loope
stos
push
shlb
jbe
js
arpl
fbld
in
adcb
pop
and
push
shlb
unpcklps
mov
repnz
inc
fdiv
sub
xlat
or
icebp
js
inc
out
sbb
push
xchg
scas
idivb
pushf
repnz
cmp
fstp
dec
jmp
push
inc
out
jnp
xor
jb
pushf
repnz
mov
jmp
pushf
lea
jge
pusha
clc
btc
mov
shl
push
cmp
mov
stc
test
pushf
cmp
pushf
pushl
pushf
lea
jp
je
shl
shl
mov
push
add
jnp
movl
push
call
jmp
pushf
movl
pushl
movb
pusha
pushf
lea
jmp
lds
repnz
mov
cmp
call
movsl
inc
popf
adc
bswap
push
cwtl
outsb
imul
or
daa
outsl
dec
mov
orl
push
dec
push
mov
and
loopne
sbb
in
imul
mull
xchg
bound
scas
mov
xchg
lods
cmp
fnstsw
xchg
dec
stos
setno
xor
xchg
sbb
push
inc
add
push
mov
imul
cli
xchg
or
mov
int3
mov
push
jne
orl
mov
iret
inc
repnz
sbb
gs
std
push
push
xor
sbb
cmp
data16
mov
add
mov
fisubs
mull
jle
pop
mov
ret
fwait
shrl
jbe
xor
loop
push
cmpsl
dec
inc
fimuls
and
leave
lret
popa
fwait
inc
adc
ss
nop
jo
push
mov
mov
mov
push
mov
sti
dec
sbb
jne
mov
xor
dec
je
dec
mov
repz
sbb
add
pop
xchg
es
dec
cmpsl
int
lods
test
sbb
fimuls
popa
cmc
jmp
fst
cmp
lahf
push
in
dec
repz
xchg
fs
pusha
add
and
jecxz
pusha
ds
aas
xchg
call
lret
pop
inc
addr16
hlt
outsb
into
fisttpll
mov
dec
mov
xchg
mov
inc
movsb
cltd
fisubl
imul
add
jo
imul
sbb
fdivrs
pop
popa
mov
mov
ret
les
nop
adc
jb
and
frstor
mov
jne
shlb
xor
pop
push
je
daa
pop
cld
cmp
pop
imul
out
or
jecxz
call
push
xchg
and
mov
pushf
out
int3
sbb
jle
je
mov
push
jno
repz
xor
inc
cmp
mov
xor
in
pop
dec
icebp
adc
dec
add
lods
test
cli
push
xchg
sub
cs
sub
mov
inc
xor
sub
lea
jno
pushf
movl
pusha
call
cmp
repz
xor
mov
adcb
push
mov
adc
and
dec
jnp
enter
sar
inc
mov
pop
jmp
mov
and
es
push
jno
popa
adc
aam
mov
into
lret
mov
iret
sbb
and
int
insb
pop
sub
pushf
mov
rorl
sbb
pop
mov
std
xor
push
repz
xchg
clc
xchg
sbb
lds
mov
rolb
cs
stos
sub
mul
test
outsb
mov
cmp
sub
bound
ds
xchg
ret
shlb
mov
out
dec
mov
xchg
fisttpl
inc
ljmp
dec
and
test
dec
and
dec
pop
mov
cmovg
mov
and
in
subl
pushf
lods
leave
dec
stc
test
pop
pop
dec
test
and
push
jecxz
push
stos
adc
push
rolb
call
xor
mov
pop
or
js
inc
or
mov
jg
jno
lods
repz
fcomip
nop
lahf
test
cmp
mov
inc
xchg
xchg
inc
pop
pusha
popf
push
addr16
lcall
scas
lods
pop
jne
jo
shll
push
mov
lods
pop
aas
js
xor
mov
sti
inc
jne
mov
fnstenv
std
arpl
pop
js
xchg
sub
jg
mov
jg
mov
xor
fdivr
fwait
jl
mov
sarl
adc
fidivl
xor
jg
xchg
push
mov
outsl
out
cmp
cld
ror
imul
xchg
ljmp
loopne
lret
adc
cmp
mov
notl
push
mov
jp
sbbb
sub
jle
ja
mov
push
leave
pop
in
gs
sbb
test
lock
dec
and
inc
mov
imul
ds
and
jge
pushf
add
inc
sbb
jge
inc
cmp
mul
mov
jae
adc
add
daa
jb
add
xor
inc
cmpsl
add
xchg
cwtl
push
cltd
or
push
and
outsl
in
mov
sbb
push
cltd
scas
add
inc
cmpb
stos
sub
xor
jb
xchg
and
into
pushl
lods
popa
ret
xor
fstpl
xor
sti
cmpb
fwait
shrl
aaa
dec
mov
or
jge
mov
hlt
jns
outsb
sbb
aad
ficompl
ret
or
pushf
sbb
arpl
iret
shl
inc
mov
pop
loopne
mov
jp
jno
mov
movsl
jb
or
movsl
cmc
jp
or
stc
or
jo
or
push
fisttpl
push
imul
mov
daa
xchg
mov
mov
aam
inc
xor
aaa
imulb
jns
xchg
and
sbbb
mov
jecxz
stos
fimuls
inc
jae
je
loope
lcall
dec
fmull
sahf
dec
cltd
stc
cmc
xchg
push
cs
xor
adc
arpl
adc
inc
roll
cmp
push
subl
daa
inc
and
jae
das
pop
ja
sub
dec
ja
push
push
add
and
inc
test
les
mov
pop
jg
and
ret
and
jno
sub
or
pop
test
fmull
iret
insb
dec
mov
add
dec
mov
and
test
test
adc
pop
testb
shlb
or
cmp
cmp
push
outsl
mov
xchg
out
and
dec
jl
popf
fists
jns
jg
sbb
mov
stos
pushf
rorl
cmp
out
and
adc
mov
dec
loopne
xchg
das
xchg
mov
add
lea
jbe
imul
fs
xchg
ja
inc
sbb
jns
in
mov
sub
jb
pop
sbb
aaa
and
jp
mov
xor
icebp
push
and
inc
pop
dec
scas
dec
outsl
popa
xor
mov
outsb
lods
and
ljmp
push
mov
jnp
adc
lahf
jg
imul
ljmp
fst
ret
mov
mov
add
pop
loope
add
sbb
xor
sbb
test
mov
or
mov
lret
xor
lds
jmp
and
fdivrs
fs
insb
jle
push
pushf
ljmp
das
or
out
jno
xor
imul
mov
cs
pop
push
sub
mov
sti
outsl
xchg
cmc
fmul
fwait
shlb
mov
ret
and
pop
sahf
lret
push
and
bound
stos
rcl
mov
out
inc
cmpsl
mov
lahf
hlt
aad
xchg
adc
pop
inc
cmc
fidivs
mov
jns
inc
pop
or
lds
cld
or
mov
cmpsb
xor
clc
cmp
xchg
pop
adc
sub
pop
push
mov
aam
or
pop
insb
and
inc
in
pop
repnz
xor
test
movsl
add
popa
pusha
or
movsb
fmulp
push
or
mov
outsb
xor
push
stc
dec
ljmp
std
mov
int
xor
shlb
idivl
neg
jecxz
sub
xor
and
dec
ljmp
add
pop
mov
or
jl
fdivrl
je
xor
out
std
add
pop
xchg
aaa
pushf
and
mov
dec
and
dec
jle
mov
mov
test
insl
push
popa
mov
pushf
jmp
cld
inc
jo
or
not
sub
scas
sbbb
pushf
jmp
pop
adc
lock
lcall
push
jns
xchg
cmp
mov
sbb
orb
je
jb
add
gs
fwait
imul
dec
js
mov
push
pop
sti
dec
loope
jl
adc
dec
pop
stc
dec
lcall
daa
mov
mov
test
dec
jg
hlt
movb
or
pop
repz
mov
mov
movsb
cmp
or
push
mov
sbb
xchg
shrb
xchg
sub
pop
mov
andb
cltd
fwait
mov
push
dec
stos
inc
cld
pop
dec
cmp
and
push
pop
pop
xor
jmp
pop
jbe
mov
bound
mov
cli
iret
sbb
push
stos
or
push
push
sbb
movsb
cmp
stos
je
jle
test
sbb
mov
add
mov
cmp
fwait
lods
cmp
arpl
pop
movl
sub
call
pop
nop
jo
setl
data16
insl
pop
fwait
cmp
aam
popf
sub
pop
mov
sbb
cmp
adc
add
fidivrl
and
xchg
mov
add
scas
pop
push
mov
das
and
sub
cmc
xchg
loope
cli
sbb
and
mov
int3
ret
add
or
fistps
jbe
mov
mov
cmp
nop
jp
pop
push
xor
jmp
or
inc
mov
xchg
dec
cmpsl
jg
out
and
out
cmp
repz
inc
das
push
sbb
jmp
ja
push
adc
dec
push
mov
insb
dec
mov
jge
into
xchg
dec
lea
or
stos
jbe
add
mov
in
cmpsl
jae
out
inc
mov
insb
pop
xchg
loope
xchg
push
mov
push
lock
repz
fsub
subl
imul
int3
repz
jno
pop
movsl
inc
cmc
stc
push
mov
aad
inc
or
imul
cmp
pushf
out
push
enter
mov
xor
and
push
out
mov
mov
insb
shll
pushf
out
sbb
in
test
sti
outsb
test
jae
std
cld
arpl
pushf
out
or
mov
adc
leave
pop
popa
ret
pushf
out
mov
pusha
jmp
movl
pusha
movw
pushf
mov
lea
jmp
jp
adc
sbb
push
and
dec
daa
or
fcomps
bnd
cs
xchg
mov
inc
movsl
test
dec
sbb
stc
adc
mov
mov
mov
or
cmpsl
mov
mov
inc
in
mov
push
push
insl
jnp
xchg
jne
fnsave
cmc
rcrl
les
dec
xor
arpl
fs
in
rcrb
adc
xchg
enter
gs
xor
and
mov
clc
or
stc
cs
pop
mov
xor
enter
call
xchg
hlt
lds
mov
or
std
sbb
les
inc
outsb
sahf
jno
inc
scas
mulb
xchg
sbb
jmp
inc
adc
out
sbb
add
sbb
incl
and
cmp
daa
sbb
dec
adc
push
and
sub
xor
cmp
mov
mov
andl
or
cmc
std
fidivrs
sbb
xchg
add
jne
pop
sbb
pop
ss
jne
mov
mov
pop
daa
fs
sub
lret
push
leave
pop
leave
outsw
jo
pop
jns
dec
es
insb
lret
data16
arpl
loop
popa
out
jp
sub
js
pushw
sbbb
cmp
in
dec
cmp
fldenv
push
gs
stc
inc
push
push
push
js
pop
lret
fstpl
mov
ret
lahf
shll
cld
enter
fs
or
insl
xchg
jae
lock
mov
dec
sarb
out
cmpl
in
sbb
pop
in
mov
mull
rolb
xchg
push
stc
xor
cmp
movsb
inc
mov
mov
shlb
int
es
and
mov
cmpl
xchg
and
mov
les
mov
ljmp
xchg
lock
popa
insb
lret
outsl
bound
insl
xor
fbld
xor
push
mov
or
insb
inc
lods
testl
sbb
out
outsb
ds
mov
daa
xor
sbb
fs
mov
icebp
fidivl
xchg
stc
popa
stos
mov
out
cmp
mov
add
jg
mov
or
or
add
mov
iret
int
pop
mov
movsb
in
jb
outsl
loop
jp
ret
pop
ljmp
mov
das
aad
stos
fnstsw
repz
test
push
and
jns
push
in
enter
sti
pop
push
mov
lods
test
fists
mov
sub
add
aaa
stos
mov
sbb
out
sbb
mov
cmpsl
add
and
aad
xlat
inc
js
sub
lret
cmp
fs
mov
cmpsl
xor
jle,pt
jge
xor
imul
repz
add
pop
cltd
in
add
xor
cmp
cmp
loop
aad
jno
xchg
pop
lret
sahf
mov
cltd
pop
int3
imul
jp
in
popf
inc
jne
jae
mov
loop
mov
subb
mov
xchg
mov
cmp
push
pushl
lret
lcall
out
sub
inc
mov
roll
sti
xor
jp
inc
jbe
add
sbb
mov
loop
fsin
push
jmp
jmp
pusha
pushf
bt
mov
call
movb
movl
pusha
push
mov
lea
jmp
jmp
jmp
movzbw
shr
shl
bsr
movzwl
movzbw
mov
movsbw
shr
shr
add
neg
bt
sub
mov
clc
pushf
shr
clc
movb
pushf
stc
and
pushf
clc
cmp
call
pusha
call
mov
jae
pop
sub
fcmovbe
dec
movsl
dec
sub
outsl
xchg
push
stos
rcl
fstps
fisttpll
sub
cmc
popa
or
xchg
sub
mov
cld
mov
nop
out
add
xchg
andb
or
cmc
and
aaa
xor
cmp
push
sbb
test
lcall
cs
or
movl
dec
scas
pop
push
mov
push
cltd
xchg
pop
jle
iret
lahf
leave
xchg
xor
inc
xchg
out
cmpsb
xor
cs
ret
sub
sti
or
cmpsl
data16
hlt
pop
ss
fs
repz
push
mov
es
iret
xchg
aas
cmpsb
ret
xchg
xchg
push
push
pop
fs
mov
lahf
shll
js
sub
jo
sub
push
add
push
fisubrs
pop
je
sbb
loopne
jge
pusha
movl
movb
mov
jmp
pusha
call
movw
pushl
movl
pushf
mov
lea
jmp
pop
inc
fnstcw
or
push
sub
cmc
xchg
repz
xchg
inc
pushf
mov
jl
mov
sub
cmp
lods
mov
iret
mov
fnstsw
lret
sbbl
mov
dec
data16
dec
int3
lods
jmp
pop
xchg
outsl
pop
mov
fidivs
mov
and
ljmp
ret
jmp
in
sub
pop
mov
lds
pop
mov
orl
sbb
inc
inc
jnp
lods
xchg
mov
dec
push
mov
mov
pop
pop
cld
pushf
jne
or
dec
mov
dec
in
mov
dec
sbb
in
dec
add
mov
cwtl
das
out
or
xor
inc
inc
pusha
ss
jmp
mov
into
sub
mov
cs
dec
xor
jo
mov
jg
sub
bound
dec
movsb
imul
xor
ret
daa
push
inc
adc
adc
cmpsl
dec
aam
out
mov
cmpsl
cmp
mov
inc
lahf
rep
stos
cmp
hlt
jns
jns
popl
enter
in
push
mov
xor
idiv
std
jg
or
jle
xchg
mov
mov
repz
mov
lds
and
jbe
mov
iret
xchg
xchg
mov
sbb
lahf
test
sub
mov
jp
js
xchg
pop
mov
adc
fdivs
jnp
loop
sub
lcall
enter
lock
jl
add
mov
nop
dec
xchg
sbb
pop
fidivrs
xchg
mov
jecxz
fwait
test
mov
enter
mov
sub
sub
lcall
popa
fiaddl
fidivs
xchg
push
inc
xlat
inc
lods
sti
and
fldcw
imulb
aas
sub
lahf
sub
ret
xor
lds
jo
lret
fisubs
pop
outsl
xchg
cmp
lret
push
mov
fisttpll
loopne
mov
lea
pushf
faddp
dec
push
jmp
iret
push
inc
cwtl
push
test
pop
pop
mov
aad
stc
rorl
sbb
sbb
scas
stos
cld
adc
mov
decb
addr16
jae
sbb
jbe
pop
and
imul
nop
jb
add
or
fidivrs
hlt
call
push
cmp
dec
sbb
fnstenv
jne
shrb
mov
sub
cmp
hlt
mov
pop
mov
dec
mov
adcl
std
insl
movsl
decb
sub
xlat
xor
mov
adc
ja
pop
pop
mov
sub
aad
outsl
je
fsubl
or
mov
inc
mov
cmp
mov
lret
shrl
push
scas
jle
or
dec
pushf
cmpsb
cmp
pusha
lock
iret
jae
repnz
mov
and
iret
adc
xor
jbe
cmpsb
xchg
mov
sub
or
or
imul
dec
test
movsl
cmpsl
jbe
xlat
cmp
inc
loop
mov
shl
jp
jg
jns
lock
sbb
sub
xchg
dec
shl
sub
cwtl
into
std
jmp
cmp
or
pop
jbe
scas
aam
sbb
pop
std
imul
push
js
ljmp
insb
dec
sbb
imul
add
inc
pop
sbb
cmp
pop
mov
ret
fdivrp
dec
fiadds
js
push
movsl
stc
xchg
inc
jbe
dec
vcmppd
pop
adc
sbb
mov
jl
dec
and
xchg
and
icebp
jb
leave
pop
lods
mov
adc
loopne
cmpsb
sbb
jae
mov
jbe
punpckldq
jo
mov
in
lahf
in
lods
and
and
clc
pop
push
je
stos
push
or
shrb
movsb
data16
imul
jl
pop
insl
inc
insb
or
or
lmsw
testb
pop
shl
dec
xor
test
dec
cmpsl
sbb
lret
clc
mov
cld
sub
or
dec
sub
sahf
movsb
sbb
cmp
sbb
testl
hlt
push
in
adc
cmp
dec
cmpsb
mov
add
push
and
inc
out
lret
pause
push
lods
xor
movl
call
pushl
popl
movb
mov
mov
movl
pushl
ret
movl
mov
pushf
movb
lea
jmp
jmp
js
fucom
ret
nop
clc
xchg
sub
jp
das
mov
insl
jp
stc
repz
aad
ret
js
xchg
lds
jle,pn
scas
push
jno
cld
jp
movsl
loop
dec
mov
int3
imul
push
ret
mov
jbe
push
aad
jecxz
or
mov
js
adc
int
jl
and
rorb
test
in
cmp
shr
jp
mov
lock
inc
jo
call
cmpsb
pushf
lods
inc
ror
pop
call
rorb
hlt
mov
mov
addl
leave
stc
int3
mov
mov
test
sbb
rcrl
xchg
push
jno
pushf
xchg
test
pushf
in
int
insl
fmuls
movsb
sbb
mov
into
daa
in
pop
shrl
in
je
xchg
cmpsb
push
xor
aas
sbb
mov
sbb
out
adc
jecxz
adc
push
xor
jae
fists
push
aaa
mov
pop
mov
andb
arpl
rcrl
xchg
ljmp
pop
fadds
in
sahf
ljmp
dec
xor
and
stc
inc
mov
insb
aas
xor
pushf
fisubrl
pop
inc
mov
in
inc
mov
or
ret
mov
mov
adc
bound
mov
mov
pop
jle
mov
shll
sbbb
dec
xor
inc
mov
or
mov
push
sbb
xchg
test
adc
fstpt
push
push
jp
mov
dec
and
rorb
loope
dec
ljmp
xchg
mov
dec
out
cmpb
pusha
test
ucomiss
movsb
dec
test
fdivrl
stos
clc
mov
inc
add
mov
jp
push
jecxz
dec
rol
sahf
mov
into
sub
fdivrs
sbbl
pushf
bound
pop
mov
in
loope
loope
mov
mov
popf
jae
data16
mov
das
sub
lret
fdivrl
js
fisubs
lret
push
nop
mov
sub
fdivrl
out
pop
cmpl
movsb
dec
ja
out
ja
sbb
fsubl
fidivrs
mov
cs
cmp
pop
push
mov
sarb
mov
aaa
mov
push
daa
imulb
into
cmp
and
add
into
dec
outsb
sub
cmp
shlb
int3
test
insl
test
jmp
push
lock
fucomip
in
xor
pop
add
pop
shrb
out
stos
mov
cltd
dec
fs
push
pop
jbe
filds
ljmp
xlat
scas
pop
fnstcw
fwait
notb
xchg
ds
fisttpll
jne
popa
aaa
imul
les
push
mov
and
mov
lret
pushf
sbb
xchg
pop
mov
ja
out
movsl
out
idiv
xor
inc
xchg
fstpt
les
enter
sbb
test
push
ret
sbb
arpl
movsl
add
aam
jnp
rol
fistps
jbe
mov
inc
mov
or
xchg
and
sbb
ss
and
out
xchg
iret
test
and
pushf
xlat
mov
lret
add
bt
clc
clc
shr
call
pushf
push
movl
lea
ja
pusha
movl
pushf
movb
lea
jmp
sub
repnz
ret
ficomps
push
arpl
inc
mov
lods
int
mov
dec
jbe
push
pop
pop
enter
mov
inc
add
push
adc
arpl
xor
test
xchg
cmp
adcb
jg
xlat
cs
or
push
mov
pop
pop
enter
inc
xor
push
mov
nop
lods
idivl
jo
fisttpll
in
shl
jge
sbb
and
idivl
xor
mov
xor
loopne
lret
add
mov
movsb
dec
cmp
pushf
mov
aad
pop
or
jne
adc
add
ds
inc
cmp
xchg
cmp
mov
lahf
xlat
or
fists
pushf
and
push
mov
aad
pop
push
aaa
dec
xor
add
cmp
rcr
pushf
mov
bound
xchg
scas
inc
out
lock
les
aad
pop
lret
xor
std
mov
dec
jp
shl
or
jb
fucompp
dec
test
imul
or
fucomip
cli
imul
adc
mov
dec
jge
pop
fs
js
push
xchg
int
std
mov
addr16
push
and
scas
cmpsb
push
jge
cmp
fnstcw
and
js,pt
int
ds
sti
icebp
xchg
or
jge
sub
sub
shr
push
scas
jo
jl
pop
pop
outsl
sub
mov
loop
data16
and
dec
lea
lea
sbb
arpl
jnp
testl
arpl
jae
mov
add
mov
xor
jmp
mov
sub
movsb
dec
test
lds
leave
inc
inc
cwtl
sub
jmp
sbbl
dec
fwait
add
insb
inc
pop
and
lods
sbb
leave
in
bound
mov
stos
pusha
imul
xor
testb
push
xchg
loopne
mov
dec
jl
inc
fimuls
mov
call
mov
mov
or
cmp
shlb
push
pop
jns
push
mov
push
popa
xchg
mov
or
iret
jb
movsl
ss
jb
rclb
loop
jg
jle
shrl
ja
subb
ret
push
xchg
push
pop
andl
and
jns
dec
adc
bound
xor
jg
stc
xchg
sahf
push
mov
dec
push
xchg
ror
divl
cmp
jne
test
pop
lcall
repz
fimuls
daa
movq
aas
jl
or
mov
lock
mov
sar
pop
xor
mov
fnstcw
aad
scas
lret
roll
stc
imul
jl
mov
push
dec
cmc
cmp
jno
cmc
sub
addr16
clc
xchg
aam
pop
xorb
add
mov
xor
movsl
sbb
xchg
push
pop
lcall
ljmp
xor
sbbb
cmp
ret
fs
rcrb
stc
dec
outsb
pop
inc
mov
bound
cli
adc
pop
mov
scas
xor
jecxz
push
lahf
ret
jnp
mov
mov
lret
sub
push
rcrl
aad
and
loopne
pushf
sarl
push
jl
lock
out
std
sbb
shl
imul
push
xchg
pushl
das
dec
nop
xor
sub
lock
imul
pop
dec
iret
xchg
loop
sbb
enter
push
mov
pushf
shll
pushl
in
and
mov
jns
loop
dec
lock
mov
cmp
insl
jg
lcall
fwait
push
outsl
inc
iret
mov
xchg
jmp
ss
movsb
mov
loope
pushf
aam
add
outsb
es
inc
cmp
int3
dec
mov
xor
and
pushf
sarl
movsl
mov
movl
pushf
pusha
lea
jmp
add
test
cmpsl
popf
mov
lret
sub
xchg
js
xor
aam
sub
and
sub
shl
iret
pushf
lret
pop
mov
dec
pusha
sub
xchg
int
sbb
jecxz
stos
fdivrl
pushf
shl
inc
test
cmpsl
adc
jle
test
mov
lcall
cmp
mov
in
fs
add
test
ja
adc
xor
lds
jno
in
arpl
cmpsl
dec
cmp
and
push
fcompl
lcall
cltd
push
les
cmpl
fcoms
mov
andb
sbb
loopne
add
inc
mov
inc
pop
lds
push
pop
mov
mov
inc
lret
vmovaps
clc
push
daa
ds
mov
stos
sahf
inc
or
scas
or
sub
pop
mov
sub
push
adc
mov
mov
mov
jo
add
xor
shlb
repnz
neg
jmp
mov
push
inc
pop
neg
cmpb
mov
pop
icebp
and
mov
xchg
and
pop
xchg
insl
insb
mov
sub
xchg
stos
cmp
mov
add
out
inc
sub
push
rcrb
push
js
movsb
into
fistpll
jb
fcmovne
xorb
push
jb
fdivp
push
test
daa
shll
mov
je
hlt
push
inc
sahf
cmp
cmpsl
pop
sbb
dec
sbb
clc
mov
movsb
std
rcrl
sub
jecxz
enter
jecxz
ret
insb
sub
int3
js
jo
xchg
sub
pop
sbb
xor
cmpb
mov
in
lret
or
insb
sub
adc
std
pop
repnz
rcrb
not
test
push
aaa
adc
or
adc
es
fnsave
mov
sub
jecxz
xor
out
jae
sahf
push
pop
clc
int
or
out
data16
sbb
push
je
repnz
outsl
lret
ljmp
and
xor
xchg
int
xor
cld
mov
sub
push
test
lock
stos
push
mov
imul
rcr
lock
sub
ror
imul
hlt
xchg
in
cmp
in
inc
lcall
pop
push
push
push
enter
or
add
jle
addl
sbb
ds
mov
add
in
push
sub
push
mov
push
cltd
inc
rcl
inc
mov
mov
jp
mov
xchg
mov
mov
jnp
bound
pop
flds
sub
dec
jmp
pop
jge
int3
daa
fsts
daa
sub
enter
rcrl
mov
push
fistl
fbld
mov
cltd
lock
mov
loop
adcb
xchg
repz
out
lods
mov
jl
inc
and
jl
mov
dec
pop
jle
ljmp
js
pushf
iret
jno
add
shr
in
push
add
xor
add
pusha
pusha
pushl
pushf
movl
pushf
jmp
imull
or
pop
xchg
loope
mov
mov
mov
pop
inc
fbstp
xchg
mov
fidivl
testb
imul
xchg
inc
mov
inc
fdivrp
jne
and
ficoml
cmp
es
aam
push
inc
jb
shrl
bound
into
xor
enter
test
popf
xchg
adc
fsubrl
scas
lahf
jnp
insl
or
loopne
and
and
cmp
lret
pop
leave
scas
jb
add
xchg
shrb
mov
push
dec
sub
cmp
sti
aas
pusha
xchg
aad
jl
pop
jl
pop
divb
test
mov
scas
in
or
add
jns
mov
cmp
mov
lds
and
out
dec
pusha
jg
mov
mov
push
cmp
jmp
inc
sbb
loope
scas
mov
dec
aam
add
dec
cmp
iret
icebp
dec
adc
movsb
mov
add
xorl
ficoms
idivb
mov
dec
adc
xor
add
gs
in
inc
xor
sbb
loop
xor
out
pusha
cmc
out
aas
pop
inc
xchg
cmpsl
scas
adc
mov
push
ret
push
mov
push
xchg
adc
or
push
push
ja
out
daa
push
pop
fidivrs
sub
xorl
jle
cmp
insl
ret
test
mov
cld
jbe
push
mov
clc
add
aad
and
sub
mov
shlb
int3
out
addb
push
pusha
shrl
xchg
cmp
aaa
or
sub
pushf
int
jb
movsl
jae
sub
jg
mov
test
repnz
mov
enter
clc
jno
lcall
and
adc
push
jmp
bt
cmp
stc
test
jmp
or
jp
xlat
mull
lret
pop
gs
and
test
cmp
pop
or
sub
jae
data16
cli
cld
sbb
cli
push
nop
jno
movsb
jp
nop
sarl
jle
push
mov
fdivl
cmp
int3
test
mov
dec
add
pop
movl
dec
icebp
dec
test
sub
dec
sbb
and
fcoms
jns
lock
jae
insl
fsts
or
mov
dec
mov
xchg
rcrl
and
pop
inc
ds
push
rol
ret
enter
push
add
sub
or
dec
imul
cld
pop
jo
jno
xchg
cmc
jecxz
fiadds
jo
dec
inc
pop
dec
xchg
cmp
xor
hlt
jo
push
lret
daa
pop
xor
sub
jp
call
scas
dec
sbb
fyl2x
sub
into
outsl
jnp
jmp
push
xor
lods
mov
jnp
ljmp
fstl
sbb
fdiv
test
xlat
pop
or
jo
jb
lods
dec
and
jl
sbb
pusha
icebp
xchg
addr16
jbe
sub
push
jns
jl
dec
fcomip
sbb
into
sub
mov
inc
imul
inc
ja
mov
cmpb
or
mov
out
shlb
test
pop
stos
fs
lret
sub
lahf
out
and
and
inc
loope
push
mov
and
jne
lea
out
enter
mov
lea
fistpl
sub
jmp
cmpsb
jl
repnz
xor
sbb
sbb
push
movl
lea
js
push
movl
push
mov
push
lea
jmp
movl
push
push
mov
push
lea
jmp
movl
movl
lea
jmp
gs
adcb
movsb
inc
mov
lcall
mov
mov
aas
out
cmpsb
xor
bound
std
add
pusha
sub
cmp
dec
sub
and
dec
mov
push
ljmp
push
push
hlt
mov
mov
mov
sub
cs
dec
mov
addr16
cmp
and
cwtl
xor
lcall
push
add
je
lea
loopne
pop
mulb
das
lret
and
fistpll
xlat
cltd
jge
pop
push
je
outsb
inc
imulb
aas
fmull
inc
pop
cmpsb
cmp
std
xchg
jp
stc
mov
jne
inc
test
jg
cs
into
imul
sbb
inc
test
dec
call
inc
cmp
adc
xchg
mov
jo
aam
outsl
inc
sbb
cmpsl
ret
imul
pusha
mov
pusha
push
push
pop
sti
lock
xchg
adc
inc
xchg
aas
test
outsl
jne
lret
push
test
sbb
gs
loop
adc
xchg
aas
inc
and
sub
mov
pop
cvtdq2ps
popa
jmp
push
cmp
inc
mov
cmp
adc
pushf
inc
sbb
cmp
cli
jno
in
adc
sahf
mov
cmp
aad
insb
ds
loop
adc
cmp
lret
xor
dec
sub
push
cmc
sti
repnz
xchg
sub
jbe
insl
mov
repz
mov
cld
mov
dec
test
adc
jno
imul
test
pop
test
inc
lds
or
mov
jle
xor
roll
bound
test
pop
arpl
idivl
in
pop
ds
dec
leave
xlat
xchg
xchg
mov
sbb
sbb
enter
fcom
and
xchg
cmp
divb
pushf
leave
sub
sbb
mov
add
dec
mov
pushf
leave
imul
or
add
pop
xor
psllw
imul
sub
xor
cmp
dec
ret
and
adc
xor
jmp
in
or
gs
xlat
dec
stos
and
movsl
cmp
fisubs
arpl
adc
mov
and
lock
sbb
xor
gs
mov
xor
insb
in
dec
cmc
notl
scas
sub
push
ffree
cmp
cmpl
pop
repz
daa
loope
ret
jmp
ret
and
daa
adc
andb
fisttps
loope
cmpsl
mov
sub
sub
add
in
ret
fdivrs
scas
mov
test
dec
cmp
aaa
xchg
dec
add
lret
fildl
xor
rorl
jmp
ss
adc
es
inc
out
mov
das
movl
and
std
mov
out
add
cltd
sbb
mov
sbb
adc
in
data16
pop
testl
inc
mov
gs
push
das
push
movsb
std
imul
std
mov
and
dec
mov
pop
cwtl
dec
or
pushf
fsubrs
fistl
movl
xchg
scas
paddsb
nop
xor
inc
and
xchg
fdivrp
jg
pop
push
add
sub
test
adc
repnz
shl
mov
add
mov
fnstsw
mov
sahf
inc
dec
sub
and
lret
sub
xchg
mov
inc
imul
sub
jns
shll
imul
add
jns
jg
rolb
add
iret
push
cs
in
cmpsb
ljmp
sbb
xchg
or
sub
pop
pop
popf
xorl
mov
jmp
or
pushf
cmp
mov
popa
lret
xchg
test
mov
in
xchg
fistps
mov
cmp
gs
loope
jge
bound
scas
leave
out
mov
mov
out
xchg
cli
popa
push
fwait
ja
push
cmpsb
inc
inc
shrl
push
add
out
fwait
dec
add
out
cmpsb
push
inc
and
data16
xlat
or
es
dec
pop
outsb
test
ficoml
out
xchg
and
mov
jp
push
call
or
mov
dec
hlt
push
sub
mov
adc
call
sub
addr16
sahf
push
cwtl
nop
jo
je
call
xor
dec
jl
enter
fisttpll
xor
enter
das
movsl
xchg
and
inc
sub
imul
add
enter
das
xchg
adc
sub
and
mov
out
pop
mov
popaw
insl
lock
xor
jmp
cmc
mov
scas
sub
push
or
add
xor
push
mov
push
lds
ja
scas
jp
xor
sub
stc
ret
push
push
cmp
xor
push
fstpl
inc
clc
arpl
jo
pushf
lds
int
cmc
xchg
adc
push
popf
divl
sahf
jbe
pushf
lds
add
test
es
push
movl
call
pushf
clc
clc
stc
test
pusha
push
jmp
mov
fistl
sub
pop
cmpsb
mov
xchg
push
ret
in
call
fst
out
jne
or
rcll
shl
psrad
imul
jno
faddl
fst
es
xchg
loop
add
inc
ja
test
or
addl
and
adc
mov
push
jnp
std
sti
sbb
ja
mov
pusha
rorb
xchg
sub
xchg
je
mov
scas
push
adc
in
cmc
push
add
or
mov
and
sbb
pusha
jg
push
push
ljmp
add
hlt
jb
and
lea
shl
inc
ljmp
xor
int
mov
bound
out
iret
xlat
mov
or
in
inc
aas
sub
dec
mov
std
movsb
pop
je
xchg
js
mov
pushf
push
lock
sub
and
fiadds
jns
add
fistl
push
jl
test
fs
mov
daa
fs
adc
mov
stos
gs
adc
les
daa
xchg
sbb
add
inc
out
popf
lock
pushf
les
or
std
pop
or
dec
xor
xor
sbb
sbb
aam
out
rolb
insb
fidivl
pushf
les
xor
lcall
sbb
dec
jp
test
dec
lret
fsubs
pop
push
popf
mov
and
jne
sbb
lods
mov
test
notb
dec
inc
mov
mov
mov
pushf
ret
shl
push
pusha
movl
pushl
pusha
call
add
stc
xor
movsbw
lea
mov
setp
mov
jmp
and
pusha
mov
clc
stc
mov
bt
cmp
call
pushf
movl
push
lea
jnp
push
push
movb
movb
lea
jmp
pusha
movl
movb
push
pushf
pushf
lea
jmp
mov
mov
mov
lea
jmp
and
sbbl
ss
or
xor
sbb
mov
ds
in
adc
inc
mov
xor
fsubrl
hlt
jnp
sub
sti
mov
shld
and
test
jb
mov
std
imul
mov
mov
dec
cld
popa
jp
cmpsb
mov
fs
cli
addr16
pushf
test
sub
push
test
add
movl
bt
push
test
xor
inc
mov
pushl
jmp
push
es
fnstenv
inc
xchg
xchg
das
mov
pushf
fcomps
push
mov
sbb
sub
das
cmp
mov
xchg
jge
sti
aas
xchg
imul
jb
and
stos
and
insl
rclb
xor
push
aas
lcall
mov
push
mov
inc
add
xchg
mov
push
pop
mov
sub
mov
inc
mov
addb
cmpsl
mov
insb
xchg
adc
pushf
shr
andps
sahf
stc
and
loop
mov
insb
call
icebp
dec
dec
pushf
jmp
movl
pushf
push
pushl
pusha
lea
jmp
movb
call
cmp
vpandn
push
ja
bound
xor
add
enter
inc
cmp
imul
imul
push
sbb
mov
loop
and
mov
cs
ss
jno
mov
mov
or
or
cmpps
dec
push
jg
outsl
or
push
push
xor
cld
rorb
ljmp
xor
lahf
inc
test
jmp
outsb
outsb
adc
fcomps
negl
int3
push
not
stc
and
popf
sub
mov
mov
jb
ret
icebp
mov
push
fwait
and
lret
inc
inc
mov
adc
int
xchg
mov
lret
mov
adc
mov
inc
lcall
mov
mov
sub
outsl
hlt
out
pushf
mov
lods
repz
sbbl
mov
outsb
inc
dec
jnp
sahf
sub
or
jp
popa
mov
or
cwtl
xor
push
enter
call
xchg
adc
inc
and
ljmp
hlt
dec
push
mov
stos
icebp
in
jmp
pop
sti
nop
or
loope
subb
leave
adc
int
jp
push
or
rep
jge
jl
xor
sbb
out
xor
jg
cmpsb
mov
mov
shlb
jecxz
or
stc
lds
out
push
add
es
int3
add
loop
jnp
aad
loop
pop
mov
aad
divb
int3
pushf
xlat
xor
nop
into
sti
pusha
out
data16
imul
lock
daa
addl
loope
nop
jmp
fbstp
adc
filds
imul
lret
dec
mov
out
push
and
repnz
jns
mov
pop
sub
rclb
pop
incl
pop
jns
adc
push
rcrl
imull
pop
rolb
cmp
push
je
fs
addr16
xchg
lods
sbb
pusha
lret
movsl
add
and
inc
sahf
push
mov
scas
bound
mov
adc
pop
aas
sbb
loope
mov
add
sbb
ljmp
and
sbb
xchg
or
dec
ljmp
pop
stos
int3
arpl
xor
arpl
test
sub
inc
push
jmp
cmpsl
push
jo
cmp
test
pop
xor
xchg
xchg
or
mov
into
sahf
inc
in
nop
mov
adc
scas
xor
sbb
insl
jo
outsl
and
hlt
push
and
movsb
xlat
sbb
push
add
cmc
ficompl
shlb
pop
sbb
push
push
inc
test
or
out
pop
loop
xchg
sti
adc
xchg
je
enter
mov
sbb
cmp
jne
sahf
or
sub
aam
and
std
dec
ja
jae
pop
rcr
xor
lods
stos
sahf
mov
ss
scas
ret
jge
cmpsb
mov
push
cmp
dec
cmp
xchg
aam
les
in
xchg
dec
add
enter
pushf
mov
mov
ret
dec
sub
add
push
nop
jnp
xor
icebp
int
mov
int3
fiaddl
movsb
adc
mov
mov
inc
jp
push
xchg
ja
arpl
ss
push
jg
sbb
xor
sub
add
xor
pop
mov
xor
repnz
push
outsb
dec
scas
repz
add
fiaddl
cmpsb
subl
enter
mov
cmp
pop
iret
dec
sbb
movsl
jo
jle
jp
mov
sbb
mov
xor
xchg
inc
add
add
xchg
and
sub
out
adc
mov
insb
movsl
inc
mov
arpl
or
pusha
sbb
cmpsb
mov
jne
jnp
mov
xor
mov
outsl
outsl
xchg
xor
mov
aas
lcall
mov
ret
out
orl
and
push
lea
jbe
dec
dec
movsbl
adc
mov
adc
call
int3
jge
icebp
push
dec
jbe
or
jl
jp
sahf
mov
adc
cmp
jp
test
repz
dec
fld
sub
mov
pusha
test
cltd
insl
sub
xchg
pop
pusha
ret
or
cwtl
sbb
gs
cmp
leave
imulb
jns
mov
imul
lds
push
andl
pushf
mov
das
insl
jp
push
cwtl
mov
adc
xor
pushf
pusha
call
push
movl
push
jmp
movl
mov
mov
call
pop
inc
int3
js
xchg
lcall
in
outsb
ljmp
and
fldt
sahf
faddl
pushf
mov
mov
pop
sbb
sahf
mov
pop
cmovb
movsl
prefetch
xor
inc
and
movb
or
dec
and
lea
jmp
xchg
lods
fwait
pop
loop
push
icebp
fwait
cmpb
fs
cmp
pusha
sub
inc
faddl
mov
cmp
xor
xchg
push
pop
dec
push
stc
inc
out
je
bound
inc
and
xchg
pop
inc
leave
data16
scas
das
inc
adc
loop
sub
pop
lcall
cmp
data16
mov
dec
pop
mov
push
add
dec
lods
jbe
cltd
xor
stc
pop
aas
movsl
pop
xor
es
push
in
add
shr
in
dec
and
or
xor
ss
and
loope
inc
jbe
pushf
lea
jmp
push
jle
shl
push
pop
fisubrl
mov
popa
sbb
ds
sbb
push
adc
push
bnd
ret
inc
jmp
shlb
fs
xchg
cmp
addr16
cmpsb
in
mov
push
les
ja
lret
or
fiaddl
jae
xchg
lret
xchg
jb
and
mov
add
xchg
loope
aam
in
pop
cmpsl
call
in
iret
lock
dec
hlt
add
fnstsw
pushf
fisttpll
cmpsb
jecxz
mov
mov
mov
movsb
and
sbb
cmp
lods
jle
mov
in
js
ficomps
mov
movsl
js
imul
loopne
sbb
lds
shll
jmp
movl
pushf
movb
lea
jmp
push
movl
call
pusha
pusha
movl
pushf
call
cmp
xchg
xchg
shll
outsl
pop
cmpsl
rorb
mov
popa
cs
stos
les
addl
xchg
and
push
iret
mov
and
cmpl
add
pop
jbe
call
push
mov
mov
push
incb
insl
push
popa
inc
xor
enter
test
push
insb
dec
call
lds
movsl
adc
imul
adc
fsubs
add
cltd
movsb
push
or
xor
movl
pusha
movl
movb
lea
jmp
fisubl
cmp
adc
pop
mov
out
xor
enter
das
or
xor
leave
xchg
incl
mov
xor
xchg
xor
xor
push
jnp
fcomi
push
sarl
xchg
fidivl
shlb
jae
dec
in
jge
push
std
aas
jle
addb
cmp
inc
in
xchg
jbe
xchg
xchg
xchg
leave
jae
divb
add
xchg
test
xchg
test
test
rolb
fcomps
jae
imulb
mov
push
mov
sbb
ret
mov
repz
insl
or
mov
cmp
push
pop
jno
cmp
sbb
inc
inc
fmulp
sub
iret
jge
pusha
sarb
cmpsb
jbe
inc
into
pushf
ja
loop
dec
stos
add
mov
in
mov
call
lahf
mov
sar
ja
scas
js
cmp
jp
stos
sub
popa
sbb
xor
inc
fisttpl
in
cmp
imul
cs
add
sbb
cmc
push
hlt
lock
das
in
add
add
insl
insb
pushf
fdivrs
lock
leave
es
stc
lods
leave
mov
pop
aad
iret
add
xchg
ret
adc
sub
test
insl
movsb
sbb
cs
lock
movsb
aam
adc
mov
aad
adc
insl
fcmovnu
xchg
in
sahf
ret
imul
out
icebp
pop
inc
pusha
mov
fcoml
mov
outsl
mov
lahf
inc
or
in
pop
mov
daa
mov
loop
mov
or
insb
xor
insl
gs
pop
pop
cmc
xchg
and
pop
mov
pop
repnz
icebp
inc
lods
pop
cmc
sub
inc
sahf
jbe
shll
sar
sahf
xchg
mov
and
add
mov
or
or
int3
dec
repnz
pop
sub
push
xor
jns
movsb
outsb
lods
fsts
imul
arpl
subl
xor
xor
loopne
dec
xchg
dec
hlt
xchg
pop
xchg
imul
lods
add
frstor
pop
push
or
mov
call
mov
ror
mov
not
mov
shl
clc
sar
btc
shr
bts
sub
sar
add
sar
neg
sbb
mov
clc
test
stc
pushf
and
cmp
cmp
cmp
bt
shr
cmc
add
rol
sub
jmp
dec
cwtl
das
mov
jg
mov
jle
mov
sbb
mov
inc
lret
mov
pop
or
sub
popa
sar
test
ret
sub
test
xor
icebp
das
sbb
cmpb
lret
mov
lret
repnz
jb
fisttpl
mov
movsl
pop
prefetchw
xor
jmp
fiadds
mov
add
xchg
rcrb
push
mov
negb
inc
mov
inc
repnz
jae
dec
std
adc
shll
nop
aas
add
leave
mov
pusha
rorb
fs
xchg
lea
repz
push
stc
adc
popf
xchg
dec
cmpsl
pop
xchg
fimull
add
das
cmp
mov
cld
or
push
sbb
xchg
adc
push
icebp
fdivr
pop
ret
cld
test
pop
insl
imul
cltd
pop
pop
addb
pop
roll
mov
addr16
aas
mov
push
adc
jmp
xor
sbb
subl
and
cwtl
inc
and
test
in
sbb
out
imul
mov
mov
add
fcmovnu
test
test
arpl
xor
out
aas
add
jnp
cltd
cmp
in
jl
cltd
test
lea
lret
mov
inc
sti
fnstenv
xchg
push
cltd
in
jb
sub
into
or
outsb
xor
scas
inc
add
sub
xchg
mov
sub
jle
mov
jb
ja
mov
int
xchg
es
stc
fcompl
orb
scas
jle
scas
fwait
mov
int3
adc
push
or
sub
mov
pushf
jge
push
stc
aaa
in
pop
nop
scas
movsb
dec
jns
lods
test
popf
mov
sub
add
mov
cs
mov
add
ret
insb
leave
add
ja
add
pop
xchg
test
paddq
out
dec
jnp
sarl
mov
add
adc
into
outsb
jns
xor
xor
nop
lcall
ds
add
sbb
out
xchg
je
mov
adc
loop
jecxz
jns
loopne
mov
inc
in
jno
mov
or
pop
push
mov
movsl
jmp
or
sbb
xchg
xor
inc
lock
xor
xor
cld
inc
fisubs
mov
jg
je
adc
leave
imul
pusha
cli
imul
pop
inc
loopne
in
fisubrl
sub
pop
sub
lahf
add
scas
sbb
addr16
mov
cmp
mov
ja
inc
aaa
jb
sub
sbb
xchg
cmp
int
xchg
jle,pt
adc
mov
in
sub
outsb
cmpl
add
jno
sbbb
mov
or
mov
fildll
sub
loope
shr
xor
inc
and
xor
dec
push
int3
pushf
lea
jmp
push
push
pushf
pusha
lea
jmp
xchg
push
dec
filds
sbb
and
shrb
fnstsw
gs
roll
lods
aaa
je
imul
repnz
sbbb
outsl
xchg
out
dec
jmp
dec
nop
lods
push
cmp
fsubl
sbb
push
mov
or
test
imul
call
lret
and
mov
pushf
pop
stos
aam
lock
aam
push
shrl
and
inc
xor
sbb
mov
stos
rcrl
test
stc
repnz
cmc
lods
fisubl
pop
cmp
movd
dec
das
push
add
cltd
stos
inc
adc
outsb
mov
push
jo
or
mov
push
xchg
rcl
sub
fs
xchg
mov
decl
fwait
dec
scas
xchg
hlt
cmpsb
jns
das
adc
insb
dec
pop
push
pop
jno
movsl
les
or
fwait
std
orl
dec
imul
jl
xchg
add
imulb
mov
test
and
add
jae,pt
fwait
sub
sbb
or
add
sbb
add
or
daa
sub
add
push
push
pop
ja
or
xor
dec
mov
or
lcall
mov
mov
in
or
dec
push
jecxz
sahf
xor
cmpsl
lret
jno
sarl
or
xlat
lahf
stos
or
pop
xor
xchg
idivb
pop
xor
pusha
sub
sub
mov
cltd
adc
sub
in
xchg
and
hlt
mov
inc
in
shlb
and
lods
sbbb
fnstcw
dec
imul
mov
bound
popl
call
jg
imul
dec
movsb
dec
jb
jp
dec
mov
adc
mov
ficoml
faddl
pop
pop
imul
mov
mov
push
xchg
sahf
test
popa
repz
rcrl
xchg
outsl
pop
add
adc
add
fwait
mov
mov
aad
cmc
sub
mov
icebp
pop
inc
xor
sbb
clc
adc
cmpsl
dec
jp
inc
pop
imul
aas
xorb
outsl
jle
hlt
ret
hlt
lcall
push
or
sub
outsl
xchg
les
insl
fcmovb
xchg
pushf
push
lds
mov
clc
stc
leave
repz
xlat
lahf
pushf
jg
push
mov
adc
pop
cmp
pop
shlb
daa
enter
or
stos
inc
sbb
pushf
mov
inc
addr16
aam
test
repz
adc
into
push
shll
mov
imul
stos
sub
aas
loopne
push
out
push
rolb
das
sbb
mov
pop
or
sbb
sbb
adc
and
add
out
inc
mov
cs
dec
jno
jne
lahf
cmp
inc
xor
push
pusha
inc
xchg
icebp
add
ss
in
shl
push
div
pop
scas
fs
inc
xor
dec
or
jae
ds
pop
fwait
jo
xchg
fs
mov
xchg
push
and
mov
lcall
sub
xchg
xor
sub
mov
cmp
sbb
inc
push
sbb
inc
lods
push
adc
jbe
xchg
shl
dec
inc
mov
and
iret
div
fcmovnu
scas
pop
movsb
jge
jae
psubw
pop
add
adc
mov
aam
ret
mov
and
mov
movsb
inc
inc
mov
xchg
pop
rcrl
aam
xchg
sbb
loopne
xor
lret
enter
xchg
out
add
and
in
xlat
and
jae
rolb
in
or
sbbl
push
ds
xor
mov
lahf
movsb
and
fisubrs
xor
lock
fwait
cmp
pop
js
mov
sbb
jae
sbb
pop
mov
mov
mov
in
scas
mov
cs
in
jmp
inc
sbb
in
push
push
insb
push
or
lea
xor
dec
and
jb
push
add
sub
lcall
xor
leave
mov
inc
popf
lret
dec
pop
cs
adc
xor
add
mov
stc
jle
inc
adc
inc
fldcw
call
xor
aas
dec
pop
xchg
shrb
lods
inc
stos
cs
adc
pop
movsb
jecxz
or
pop
cld
sub
cli
push
xor
pushf
dec
and
cmp
adc
bound
mov
xor
push
insl
mov
ret
mov
int
bound
pusha
push
mov
xorps
sbb
xor
out
xchg
pop
xchg
pop
mov
mov
xchg
rclb
xchg
iret
nop
jns
xor
sbbb
or
nop
mov
pop
or
or
push
dec
in
in
fnstsw
jl
pushf
movl
push
pusha
call
cli
mov
pop
adcb
mov
daa
inc
or
imul
stos
fstpl
and
dec
xchg
xchg
in
dec
lock
shl
test
adc
enter
ret
and
adc
shl
add
push
or
push
or
mov
add
ret
shl
jge
push
adc
add
in
mov
sub
ljmp
pop
shrb
mov
stos
push
adc
fmull
cmp
xchg
push
call
popa
and
in
xlat
xchg
insl
rcr
in
jb
sub
lods
sbb
cli
push
stc
sbb
dec
mov
pop
loope
mov
mov
xchg
call
out
ds
in
mov
in
push
mov
sbb
xchg
sbb
loopne
in
mov
in
xchg
stos
sbb
lret
add
or
push
push
or
fidivrl
pop
movsb
inc
push
outsb
out
iret
aad
out
dec
sub
lret
sbb
jmp
jg
popa
es
xlat
or
cmp
enter
adc
dec
loop
aam
sub
pop
pop
loope
pop
sbbl
shrb
jle
fiadds
jo
and
inc
pop
jbe
stc
mov
or
call
call
add
xlat
imulb
cmp
or
jb
xlat
ljmp
cmp
pop
jbe
and
mov
repz
imul
cli
xor
test
push
jns
jb
movsl
outsb
cmpsb
sub
mov
pop
and
xor
mov
clc
aas
inc
mov
and
adc
pushf
lods
jp
in
and
or
mov
push
xlat
fisttpll
sahf
mov
jle
inc
lret
xchg
shl
hlt
popa
add
mov
cmp
ret
frstor
adc
sbb
dec
jns
push
test
loopne
aad
aam
scas
and
xchg
das
popa
inc
jno
add
xorb
xor
and
xor
mov
into
mov
stos
pusha
subl
jmp
cmp
aas
scas
push
cmp
mov
mov
cmp
xchg
and
xchg
shll
aam
mov
sub
jb
int
push
scas
xchg
and
adc
addr16
sbb
sub
mov
lahf
rcrb
jbe
xor
xor
cld
xchg
push
or
mov
xor
mov
and
loop
add
add
insl
add
enter
mov
jmp
pop
sbb
std
adc
mov
jo
movsb
out
icebp
popa
outsl
cli
jge
rcll
lahf
fiaddl
sub
inc
sahf
ljmp
js
insb
adc
aaa
fsubs
cmp
std
or
xchg
dec
movsb
inc
xor
aaa
dec
ret
aaa
pushf
stos
inc
stc
mov
jnp
cli
repnz
pop
jnp
lcall
ficomps
mov
fidivrl
adc
fimull
dec
dec
mov
out
xor
adc
lret
mov
push
ljmp
enter
adc
and
aas
or
or
jo
dec
or
ret
aad
mov
xor
mov
stos
mov
enter
sbb
push
cmpsb
es
pushf
test
jle
out
inc
mov
lea
dec
jmp
icebp
dec
pop
push
repz
pushl
enter
scas
inc
dec
iret
xor
jle
call
insb
aas
dec
mov
fldcw
inc
gs
lea
cmp
xor
leave
sbb
icebp
dec
adc
les
cmp
out
pop
xor
imul
add
jp
xor
push
fbstp
in
mov
enter
and
nop
je
pop
xor
inc
and
mov
cmc
mov
jnp
pushf
lea
jmp
jmp
pusha
pusha
pushf
pushl
movl
pushf
push
push
movl
pushf
movb
lea
jmp
movl
pushl
pushl
popl
pusha
pushl
mov
pushl
ret
movl
push
lea
jmp
pushf
pusha
pushf
movl
mov
push
movl
mov
push
mov
mov
lea
jmp
push
push
movw
pusha
movb
movl
pushf
pusha
movb
lea
jmp
pop
push
or
and
cmpsl
push
add
cltd
xchg
mov
mov
addr16
pop
outsb
mov
incb
jg
stos
add
testl
icebp
xchg
cs
or
xchg
jne
ss
std
jl
and
lcall
fs
jmp
inc
data16
nop
ss
sub
out
in
dec
xchg
inc
mov
or
sahf
ljmp
jbe
push
pop
stc
jbe
imul
and
pop
dec
jmp
sub
lret
and
inc
insl
imul
mov
mov
and
or
sti
and
movl
mov
int
in
lahf
mov
in
cld
push
ja
xchg
into
cwtl
inc
jns
mov
lds
imul
push
decl
dec
addr16
ret
dec
lret
cmp
xor
cmpsl
repnz
push
iret
dec
xchg
push
bound
dec
inc
or
mov
xchg
push
push
mov
sbb
mov
pushl
mov
call
pushf
pushf
mov
movl
pushf
mov
movl
pusha
lea
jmp
call
movl
pushf
pushf
lea
jmp
mov
push
mov
setne
mov
pushf
movl
lahf
bswap
movzbl
lea
mov
mov
pushf
lea
jae
push
pusha
pushf
jmp
movl
movl
pusha
call
pusha
movl
pushl
jmp
test
pusha
sub
mov
pusha
jmp
test
cs
nop
movsb
out
push
pop
jbe
adc
fs
pop
loopne
mov
pop
ja
sbb
movhps
fbld
mov
shll
les
outsb
push
mov
fisubrs
filds
jno
movsb
int
int3
into
sub
xchg
mov
xlat
or
leave
sub
and
cmp
pushf
cmpsb
and
imul
push
mov
sbb
add
es
cmp
xor
out
fwait
push
add
and
ss
sub
popa
bound
mov
aaa
cmp
ret
jecxz
pop
lcall
in
in
movsb
and
dec
jne
mov
and
lods
jo
insl
testb
mov
pop
mov
fs
inc
add
push
xor
icebp
sub
fistps
mov
shll
sbb
cld
adc
fwait
sub
fwait
jns
les
test
leave
ret
push
lock
imul
pop
repnz
in
shrl
adc
pop
fstpl
stos
mov
sti
pushf
pop
pop
xchg
mov
dec
sub
push
in
ja
rcrl
test
add
aad
xlat
xor
inc
and
or
cmp
fs
xor
sub
insl
xor
sub
lods
push
les
xchg
popa
arpl
scas
push
out
push
ret
pop
iret
enter
xchg
lods
pusha
jnp
lret
loop
pop
scas
or
xchg
stc
jo
aas
add
inc
into
or
fcomps
push
xchg
inc
pop
call
rcl
loop
pusha
incb
loop
xchg
xchg
adc
adc
jae
icebp
fucomi
push
pop
insl
push
xchg
adc
mov
fstpl
jae
outsb
sarl
lret
popf
mov
sub
xor
pop
dec
dec
mov
dec
arpl
test
mov
scas
sub
scas
aaa
add
into
stos
aam
pop
es
imul
cmc
push
arpl
ja
daa
movsb
leave
outsb
xlat
imul
nop
sub
xor
xchg
pop
sub
outsl
out
mov
dec
loop
je
or
fwait
hlt
xlat
jge
sub
xor
ljmp
jb
mov
jecxz
sarb
jne
repnz
popa
test
sub
popf
loopne
rorb
es
mov
cmp
js
int
ljmp
es
pop
fistpll
jns
pop
scas
xchg
mov
xor
imul
pop
and
or
movsl
sti
sub
arpl
ret
mov
jmp
pop
push
pushf
push
out
ja
mov
mov
jb
stc
aam
mov
mov
lds
lock
xlat
jns
add
out
add
mov
dec
rorb
cld
dec
adc
sbb
push
shrl
add
mov
popa
test
fstps
inc
add
ret
pop
mov
or
add
cmp
inc
xchg
mov
dec
test
loop
push
stc
call
call
lret
fdivrs
and
xorl
inc
cmpsl
dec
movsl
pop
cwtl
in
out
fdivrp
iret
fxtract
xor
fcompl
mov
aaa
adc
hlt
sti
subl
push
imul
les
sbb
movsl
out
fists
pop
xchg
sahf
leave
mov
xchg
in
push
into
out
into
mov
jp
movntps
lds
jne
or
dec
cmp
mov
jno
jns
repnz
push
jl
pusha
and
mov
cs
andl
and
andb
xchg
repnz
dec
lods
dec
mov
imul
mov
test
xchg
scas
mov
lcall
inc
xor
mov
nop
dec
cmp
cs
or
inc
mov
scas
je
jbe
popf
cmp
popf
mov
mov
in
scas
inc
fs
cmp
lock
out
jbe
and
repnz
push
push
pushf
cmpsl
dec
inc
pop
imul
or
lods
lock
dec
mov
adc
jmp
pop
das
mov
ja
popf
or
shrl
daa
mov
out
mov
cs
mov
inc
out
outsb
dec
push
fcmove
and
sbb
shrl
cmpb
inc
stos
adcl
sbb
fdivrl
inc
pop
mov
mov
in
sub
sub
pop
int3
addr16
cld
pop
jne
cld
mov
xchg
sub
sub
and
test
adc
cmc
push
decb
jmp
and
jb
cli
repz
push
mov
arpl
mov
nop
cs
stos
sub
ja
popf
cltd
jo
into
lahf
jmp
dec
in
jmp
icebp
iret
inc
test
xchg
in
nop
mov
sub
loop
push
jp
pop
or
out
rol
xchg
cmp
jecxz
inc
cmp
jno
dec
sub
lea
sub
add
enter
mov
cmpsl
jg
jns
aam
int3
scas
aam
and
jle
stc
lret
or
out
loope
call
jb
adc
pop
mov
gs
mov
xor
pop
sub
test
xchg
clc
mov
add
add
pop
xchg
xlat
cwtl
mov
mov
mov
mov
test
xor
movsb
sbb
push
mov
insb
mov
mov
sbb
fisubl
jno
loopne
mov
mov
lods
daa
xchg
lods
rcrb
mov
mov
push
dec
sub
scas
movsl
lret
call
roll
xchg
sub
rolb
sbb
cmp
add
or
arpl
addb
dec
add
mov
pushf
mov
adc
shl
and
btc
shld
add
cmp
btr
ror
mov
clc
xchg
lea
sar
bts
shl
bt
mov
btc
pushf
bswap
mov
cmc
clc
shr
bt
movb
shr
stc
add
pusha
and
bt
test
add
pop
mov
xor
add
or
dec
pop
adc
xor
call
pusha
movl
pusha
push
lea
jmp
jmp
xlat
leave
flds
pushf
cmp
xchg
push
xor
lock
mov
sub
hlt
push
mov
and
jmp
add
sbb
jmp
lcall
in
inc
into
rol
push
jle
repnz
imul
cmp
inc
push
lock
loope
ds
xchg
pop
push
out
das
leave
sbb
xor
sahf
in
mov
jp
lret
push
pop
shl
mov
jge
popa
imul
push
push
mov
push
sbb
sbb
outsl
cmp
loope
inc
in
sbb
test
fimull
in
mov
mov
mov
bound
cld
cvtpi2ps
ret
call
repz
insb
push
push
cmp
stos
out
int
xor
xchg
insl
add
aas
loopne
push
xor
repz
enter
cmc
mov
fistps
add
lods
xor
fisubrs
sub
ret
inc
ds
adc
sbb
fwait
mov
outsl
mov
add
fildl
and
lods
jl
call
sbb
pop
xchg
mov
gs
lcall
push
jno
out
lea
test
mov
push
outsl
gs
imul
aam
aaa
pop
movsl
popf
stc
mov
or
or
and
mov
and
pop
push
jp
adc
test
popa
or
loop
cltd
or
push
lret
fdiv
xchg
sub
mov
call
into
outsb
int3
es
xchg
xchg
xor
into
dec
pop
aad
add
mov
imul
push
incl
inc
repz
xchg
jnp
xchg
jbe
push
dec
push
cmp
lret
jb
data16
std
pop
std
int
enter
mov
imul
hlt
ljmp
mov
sub
sbb
jg
add
fcmovne
out
jg
imulb
shll
inc
pop
pop
imul
mov
outsl
lret
or
cli
idivl
push
jb
sub
xor
into
repz
insl
jg
testl
xchg
popa
std
lahf
push
in
pop
notl
jbe
mull
lock
sub
cmp
push
aaa
cmp
pop
mov
fmull
jnp
push
and
ret
dec
add
arpl
jnp
push
data16
cmpsl
jl
out
mov
jae
sahf
sti
xor
arpl
insb
addr16
xchg
lcall
fidivl
dec
adc
and
add
add
xlat
push
loopne
xor
jmp
push
adc
add
push
jle
jns
pushf
pushf
mov
in
sar
mov
push
jmp
push
nop
sti
rcll
pushf
out
mov
mov
sub
push
test
ljmp
sub
jne
mov
pushf
pushf
sbb
ljmp
inc
stos
pop
fsubrs
pushf
pushf
inc
enter
xor
cmp
inc
addr16
sub
repnz
pushf
mov
call
fbld
mov
add
and
add
adc
call
movl
push
mov
pushf
push
lea
jmp
push
movl
pusha
lea
jmp
push
pusha
jmp
call
push
xchg
push
loop
aaa
adc
jle
pusha
inc
in
adc
imul
push
addb
aam
mov
loopne
jecxz
addr16
pop
cltd
sahf
out
or
faddl
mov
insl
outsl
sbbl
sti
mov
jmp
inc
jge
pop
jp
xchg
adc
add
dec
js
inc
push
sub
or
mov
push
cmp
cmp
in
fwait
ror
repz
xor
fisubs
pop
jl
rclb
call
mov
jbe
sbb
xchg
xchg
mov
mov
mov
mov
divps
mov
xor
sar
cmp
and
sbb
dec
add
sbb
fimull
leave
adc
sbb
push
aad
add
test
fwait
je
and
leave
jmp
push
movl
pushf
push
jmp
sub
bt
btc
mov
btc
stc
mov
jmp
or
push
test
cmp
pop
ss
xor
movl
test
xor
pop
cmpsl
std
jp
pop
gs
xchg
pop
out
push
aas
loope
xchg
fcmovb
mov
inc
cmp
std
sub
push
jp
jns
fsubrl
add
pop
mov
notl
repz
jns
add
ss
dec
xorb
outsb
and
mov
loop
inc
fcmovnbe
push
push
test
out
sub
enter
fwait
add
adc
roll
icebp
jo
cmp
loop
inc
test
loopne
jle
scas
rsm
idivb
push
or
jg
mov
xchg
cli
sub
mov
mov
out
or
fwait
gs
pop
mov
js
mov
sahf
push
call
imul
sbb
xor
fbld
jbe
jmp
add
sti
lcall
inc
cmp
pop
movsb
out
out
das
imul
data16
ds
cltd
scas
lea
pop
mov
and
aas
clc
sbb
mov
cmp
or
sub
mov
and
inc
jmpw
mov
mov
adc
pop
add
mov
gs
jne
or
stc
imul
out
aam
sub
xchg
aad
dec
mov
cltd
test
stos
pushf
movl
mov
pushf
lea
jmp
jg
xchg
fistpl
mov
push
negl
push
arpl
add
lea
push
xchg
stc
inc
stos
mulb
mov
call
dec
lods
and
lods
ja
cmpsl
mov
pop
pop
out
in
add
pop
sub
incl
outsb
push
xor
jle
sahf
repnz
enter
ljmp
mov
push
out
mov
movsb
in
or
sub
imul
repz
jb
sub
or
ficomps
and
sub
xchg
pop
jle
testb
sub
subb
jl
push
into
andb
jnp
aam
scas
or
in
cmc
push
ds
xchg
cmc
mov
out
adc
lods
or
jmp
inc
cmp
rcrb
scas
test
das
adc
add
je
inc
idivl
data16
xchg
stos
xorl
scas
int
xchg
fwait
in
ficompl
pushl
fdivs
test
in
mov
push
mov
jb
fsub
push
fsubl
cmp
ficoms
sbb
mov
jge
or
out
dec
ret
adc
pop
popa
pop
es
mov
sbb
add
mov
mov
mov
pop
subl
jae
out
movsb
out
jae
lock
cmp
push
cmp
push
xchg
or
out
add
lods
jecxz
addr16
pop
in
std
mov
outsb
or
jo
dec
push
add
mov
outsb
inc
test
inc
hlt
out
out
outsb
sbb
iret
fdivr
ja
dec
pop
cmpsb
ficomps
cwtl
lahf
out
addl
pop
jle
xor
jo
jp
in
jecxz
pop
test
xor
adc
pusha
movl
pushf
call
or
nop
gs
cmp
lea
loop
pop
sbb
fsubl
lea
dec
in
add
rcll
xor
loopne
mov
cmp
in
xor
ret
cld
negl
lock
xchg
repz
xchg
lea
jge
movzbw
lea
shl
mov
shl
mov
call
hlt
adc
dec
add
dec
scas
sub
leave
sub
xchg
cmp
pop
mov
call
loope
push
loopne
leave
and
pop
sub
jnp
cmp
lods
movsl
and
sub
jns
cmp
jle
hlt
adc
and
cmp
bound
fwait
inc
or
xor
inc
popa
mov
icebp
ss
mov
ljmp
jmp
stc
or
pop
and
add
pop
stos
or
inc
ret
inc
xchg
add
scas
mov
cs
dec
adcl
dec
pop
ret
xor
sbb
call
push
cmp
scas
or
gs
jecxz
add
or
inc
stos
inc
clc
mov
inc
add
stos
jne
jns
sbb
mov
scas
adc
and
std
movsl
pop
jle
mov
or
lock
addr16
cmp
lahf
cld
cli
xor
push
imul
sbb
enter
js
aad
mov
mov
into
inc
loopne
lret
aas
fucomp
test
in
pop
xor
mov
pop
mov
xchg
cmpsl
ret
cmp
mov
loop
inc
inc
xchg
imul
pop
and
imul
mov
int3
xchg
rclb
xchg
or
fcoms
mov
jns
mov
ret
int3
jbe
cmp
fstp
mov
movb
sbbb
dec
fidivl
push
test
xchg
sub
sbb
out
ret
in
mov
dec
stos
lods
cmp
loop
movsl
cs
push
cmp
fdiv
out
lds
outsl
add
xchg
rcrl
test
aad
ds
shl
lahf
jnp
mov
je
inc
xor
sti
mov
add
pop
xchg
popf
xor
out
stos
mov
aas
popa
mov
adc
cmc
mov
rolb
mov
mov
xchg
cmc
cmp
test
test
lock
xor
jecxz
inc
lods
popf
imul
push
icebp
adc
xor
dec
mov
pop
mov
mov
push
mov
pushf
cmp
adc
dec
pop
or
popf
stc
fdivrl
out
leave
fidivs
inc
fisttps
jge
faddp
imul
sub
pop
jmp
dec
pop
mov
sarb
dec
jmp
push
daa
add
or
sbb
cmpsb
adc
sbb
fsub
mov
pop
adc
insl
push
push
xchg
jo
insl
sahf
or
adc
adc
adc
mov
ss
cs
push
xorl
dec
loope
or
adc
inc
cmpsl
and
rclb
sbbb
enter
lret
nop
adc
or
insb
js
daa
inc
fnsave
inc
shlb
lds
outsl
std
out
out
xchg
sub
in
sbb
dec
jecxz
les
in
test
leave
jne
adc
xor
mov
mov
sarl
inc
pushf
ret
xchg
mov
or
icebp
push
push
lret
jne
and
popa
mov
xchg
seto
dec
icebp
call
add
fimuls
mov
into
add
testb
mov
dec
cmp
ss
add
inc
mov
lret
dec
dec
enter
add
xor
push
divl
cmc
mov
insl
lret
ret
inc
loop
out
xor
and
out
pushl
mov
pop
xor
jnp
divl
sarl
sub
aad
les
mov
sbb
cmp
in
jge
xchg
dec
xchg
cli
call
rol
movsl
sub
pop
sub
sbb
loopne
cltd
aam
stc
out
xchg
out
insl
test
int
push
nop
adc
imul
or
testl
sbb
mov
vmovdqa
cmp
jb
dec
mov
cwtl
aad
repnz
sub
das
inc
xchg
fadds
xor
xchg
cs
lods
aas
sbb
cs
scas
mov
push
xchg
repnz
insb
mov
pop
sub
pushf
test
inc
add
stos
int3
pop
or
fadds
aas
mov
push
inc
lret
lods
int3
lock
push
and
in
adcb
pop
aaa
repz
in
test
das
and
adc
fwait
mov
cli
push
jnp
scas
xchg
xchg
and
das
jns
cmpsl
ljmp
test
pop
popa
stos
call
xchg
cwtl
mov
gs
pop
mov
mov
xchg
lcall
test
dec
imul
clc
lock
inc
jnp
ljmp
xor
vcvtsd2ss
ja
test
and
push
repz
jecxz
add
dec
xchg
hlt
mov
dec
movsl
push
aas
and
test
into
int
movsl
sbb
jns
pop
lret
daa
adc
aad
jg
xchg
mov
cmp
push
xchg
aam
push
adc
or
add
movl
loope
mov
mov
sbb
faddl
xor
sbb
jo
push
out
sub
jae
call
fnstenv
pop
popf
decl
stc
pushl
js
mov
cmp
mov
dec
xor
ret
cltd
dec
pop
push
daa
inc
or
ja
pushf
xchg
dec
gs
and
and
push
or
fnstsw
jnp
xchg
loope
imul
aas
lods
in
jle
fwait
je
sbb
add
rcrl
xchg
cmp
mov
test
ljmp
push
fldcw
pop
pop
and
lret
in
mov
adc
xchg
or
or
xchg
inc
jle
add
lret
or
mov
imul
cmp
cmp
sub
cmpsb
sti
and
or
jle
repz
lods
ss
inc
push
push
inc
cld
cmp
cmp
mov
scas
dec
inc
cmp
jne
enter
mov
dec
jno
mov
test
mov
push
mov
xchg
int3
jmp
pop
pop
cltd
bound
scas
jno
lret
lret
mov
and
jb
ds
xor
out
adc
mov
rclb
xor
std
iret
and
pushf
jns
popa
pop
pushl
mov
xchg
mov
pushf
cli
mov
dec
inc
pop
out
imul
ffree
lods
test
stc
shrl
push
cmp
out
xchg
rorb
shlb
xchg
xchg
sub
imull
cmp
add
mov
sarb
sub
shl
stos
jge
scas
and
pop
les
frstor
cmp
andl
ficomps
in
dec
dec
cs
aam
int3
movsl
shll
jae
push
shl
das
inc
mov
pop
jl
cltd
aaa
sbb
or
mov
imul
rolb
jp
loope
ljmp
cmp
inc
js
push
cmp
push
xchg
jne
and
mov
shlb
inc
sub
adc
mov
mov
ror
lahf
mov
aaa
mov
fwait
cmp
xchg
mov
adc
stc
test
inc
int
add
mov
mov
pushf
lock
movl
push
pushf
call
clc
cmc
stc
xor
bt
add
xor
bsr
movzbw
call
movb
movl
mov
push
lea
jmp
pushf
movl
push
movl
pusha
pusha
pushl
pushf
lea
jmp
lcall
outsl
cmpsl
mov
mov
sub
xchg
xor
fsubr
jl
push
mov
push
or
adc
rclb
sbb
fwait
cli
xor
popa
clc
mov
loope
sahf
jo,pt
pop
xor
test
movntps
mov
and
cmpsl
jo
insl
xchg
mov
xor
mov
add
pop
dec
push
push
pop
orl
cwtl
divl
or
cmp
mov
push
pop
out
mov
cmp
ds
mov
sahf
mov
adc
push
add
lock
push
inc
sbb
leave
in
push
jae
out
shll
dec
mov
pop
ds
and
insl
lret
xchg
mov
dec
dec
jo
mov
outsl
fistpll
cmp
pop
data16
hlt
lahf
roll
in
sub
int3
inc
mov
scas
in
dec
mov
outsb
sbb
xchg
mov
iret
fisttps
fwait
stos
sti
std
sbb
dec
sti
daa
es
sub
xchg
aad
repz
out
mov
or
call
inc
ljmp
jecxz
outsl
push
adc
cwtl
sub
into
das
mov
int
cltd
and
ds
ret
and
sti
jne
push
pop
rcrl
push
adc
icebp
or
aas
push
out
push
cmp
repnz
scas
mov
pop
and
ret
insb
es
out
jnp
xor
lock
std
std
xorl
outsb
dec
mov
ret
js
push
stos
lret
frstor
insl
loope
mov
pop
outsb
ss
mov
cmp
jge
stc
in
js
inc
inc
and
aam
pop
into
add
in
sub
pop
test
std
pushf
jno
mov
movsb
inc
lcall
hlt
and
or
cmc
rcl
mov
jmp
adc
inc
pushf
movl
push
jmp
movl
pushl
pushf
lea
jmp
push
mov
loop
rorl
cmp
call
sbb
mov
pushf
dec
mov
push
scas
xchg
movsl
sbb
push
inc
inc
or
ja
mov
or
pushf
dec
mov
aas
pushf
lahf
adc
and
loopne
repnz
dec
jl
mov
in
dec
sbb
rcll
arpl
js
test
mov
data16
filds
and
sub
mov
and
mov
je
pop
adc
adcl
sbb
mov
mov
aad
shrb
aad
cmp
aad
inc
fisttps
adc
jns
arpl
leave
jnp
outsl
sub
xchg
sti
into
mov
inc
insl
sub
lea
in
sarb
pop
pop
out
jnp
mov
ss
sar
aad
shlb
and
shlb
in
jo
push
jl
mov
cs
pop
jecxz
jecxz
pop
ret
mov
xlat
enter
or
pushf
mov
fstps
and
aad
repnz
sbb
xor
push
cs
cmp
sbb
mov
cmp
ss
mov
or
xchg
icebp
mov
xchg
pop
dec
sbb
mov
sub
aam
mov
sbb
lods
pushf
lock
and
lock
pop
vmovapd
sub
adc
fstpl
xorl
repnz
adc
inc
hlt
movb
jmp
ret
push
xor
inc
push
insb
stos
notb
push
pusha
sbb
sub
and
jmp
lds
shrl
push
popa
jno
into
cli
call
push
pushl
movl
pusha
pushf
lea
jmp
inc
and
cld
sbb
lcall
js
ja
test
in
mov
fisubrs
test
jnp
mov
les
xchg
sbb
mov
popa
jns
push
insl
adc
inc
loopne
hlt
cli
push
push
jl
sub
jbe
dec
insb
lods
inc
stos
fistpll
pop
mov
out
sbb
mov
sub
aad
out
in
and
push
add
pop
data16
xor
mov
jo
pop
mov
sub
fiadds
add
add
stos
mov
adcl
fstl
stc
mov
aaa
jle
sub
jno
pop
test
rep
aas
pop
imull
xlat
popf
cmpsl
lods
jg
pusha
fldenv
fwait
mov
shrb
in
cmpsl
xor
dec
sub
cmc
push
les
scas
cmp
loope
aad
lahf
xchg
insl
fcomi
out
in
mov
push
xor
shlb
fldt
jno
push
push
add
lea
push
xchg
inc
fistps
lret
shl
mov
cltd
pop
shll
dec
lods
xchg
aaa
xlat
imul
scas
bound
xor
int
adc
jge
inc
pop
sub
data16
and
mov
data16
sbb
movsb
in
cmp
sub
mov
or
and
inc
xor
push
fiadds
pop
popa
aaa
adc
mov
outsb
out
mov
push
sbb
add
ss
push
cmp
cmp
xor
mov
jno
clc
jmp
scas
sarl
push
ja
or
jno
mov
adc
testb
mov
je
sbb
or
je
es
sub
shll
mov
cmc
pop
push
xor
loope
xchg
lods
adc
xor
stos
data16
add
jb
inc
mov
sub
dec
inc
push
push
shrb
dec
sub
push
repnz
jmp
push
mov
lahf
aaa
insl
xchg
sahf
leave
push
adc
incl
lods
sbb
jl
js
sbb
dec
cmp
movsl
push
sti
sbb
sbb
outsb
adc
scas
xchg
push
cli
lcall
stos
nop
mov
xchg
sarl
out
jbe
in
in
mov
adc
or
sahf
push
repz
pushl
dec
lcall
pop
jge
push
xor
xor
dec
adc
sbb
jge
or
xor
std
fstp
nop
sub
stc
pop
mov
lea
outsb
into
cltd
lods
shlb
je
movsl
jnp
cld
push
hlt
xchg
stc
stc
or
adc
in
lods
lods
sbb
stos
xor
xor
test
lods
leave
cmp
adc
out
pushf
xchg
mov
push
lcall
testb
push
sbb
push
mov
and
dec
out
xchg
ret
int3
adc
stos
mov
rorb
jg
call
mov
test
nop
and
sub
pop
or
sbb
ficompl
sub
and
bound
mov
push
shl
fwait
mov
sti
jge
enter
aad
dec
push
xor
test
stos
push
xorl
cli
fcomp
in
sub
push
pop
xchg
push
hlt
push
cs
mov
inc
sbb
mov
jno
xchg
add
rolb
xor
std
lea
pop
xor
fldt
popa
cmp
fidivrl
lea
je
xchg
lea
lahf
outsl
push
mov
mov
pop
push
jo,pn
xchg
push
aaa
inc
lahf
lea
and
xchg
out
addb
adc
pop
sahf
insb
lret
push
sub
xorl
aas
pop
or
roll
movsl
add
insb
clc
mov
dec
sub
xchg
lea
shl
mov
cmp
les
out
inc
mov
call
mov
imul
sarb
out
fwait
loope
mov
inc
incl
in
xchg
cmp
and
int3
shlb
fists
fcomps
pop
shll
xorl
in
movsb
add
adc
fsts
lret
arpl
lock
xchg
add
push
pop
mov
sub
stos
xchg
data16
ret
ret
xor
fsubs
add
jle
and
add
pushf
test
mov
inc
imul
adc
mov
loop
pushf
test
cli
sub
or
dec
fnstcw
adc
push
xchg
push
scas
xor
rcrl
jae
repz
push
jle
into
jnp
fsts
cwtl
jne
push
sub
hlt
jnp
and
jbe
and
cld
add
cmp
call
or
xchg
adc
andl
and
and
roll
mov
fdivrl
leave
leave
mov
and
jmp
xchg
sub
sub
jne
insl
add
out
cmc
xchg
hlt
addr16
loope
pushf
inc
in
out
ljmp
loopne
xor
xchg
movsb
sbb
lret
lods
or
outsl
bnd
mull
jo
inc
jns
hlt
push
out
shll
add
add
popf
cmpsl
mov
int3
insl
mov
addb
pop
repz
push
insb
aas
dec
js
test
cmp
cmp
add
jg
and
dec
cmp
and
pop
cmp
insb
mov
add
aaa
xchg
loope
xchg
jnp
and
lret
mov
push
jmp
push
in
mov
insb
repz
inc
jns
xchg
mov
jae
push
ret
and
call
mov
inc
push
mov
lock
cmp
mov
mull
mov
daa
dec
sbb
sub
js
mov
sub
in
inc
mov
xor
iret
xor
into
xor
mov
cmc
repnz
pop
add
push
lret
pop
and
fiaddl
dec
gs
pop
mov
enter
hlt
mov
std
test
enter
fsubrl
dec
jmp
push
xor
stc
insb
mov
imull
or
push
xchg
cmc
lods
push
addl
lahf
ds
inc
mov
dec
inc
sub
fisubs
std
jbe
fadd
jae
xchg
sbb
call
hlt
std
jnp
cmc
push
je
add
push
ds
mov
inc
mov
push
xchg
jnp
pop
imul
les
loopne
xor
ds
leave
sub
pop
xchg
ror
cwtl
pop
sbb
inc
jo
jge
shll
ljmp
mov
ljmp
das
imul
inc
das
mov
add
xor
or
jnp
hlt
loope
in
mov
ja
xlat
enter
mov
dec
push
add
pop
test
cltd
testl
pushf
and
xor
in
jg
fmull
sbb
xor
pushf
cmpb
mov
loop
pop
add
jp
xor
mov
push
xor
adc
xor
adc
push
jl
int
pushf
inc
xor
xchg
leave
sub
xor
in
clc
aad
jl
out
adc
fidivrs
stos
dec
fmulp
test
pop
mov
rorb
loope
data16
add
inc
insb
xchg
inc
sbb
out
pop
maxps
arpl
mov
xchg
lret
lds
xor
sbb
add
fistpll
fcmovnbe
push
jae
mov
dec
stos
mov
inc
popf
and
pop
inc
and
xor
and
add
call
ss
cmpsb
stc
aad
push
out
js,pn
mov
lret
insl
pop
xor
pop
nop
inc
or
nop
cli
ja
daa
fildll
ljmp
sub
leave
xor
cmp
out
lret
mov
loop
mov
sbbl
jmp
pushf
shr
stc
cmp
jmp
pusha
push
push
movl
pushf
pushf
pushf
mov
lea
jmp
add
btr
or
rol
mov
pushf
call
movl
movl
movw
movb
pushf
lea
jmp
push
pushf
movl
pusha
push
lea
jmp
inc
jl
scas
or
sub
and
mov
xchg
mov
aaa
jecxz
inc
pop
xchg
ja
stc
pop
dec
aad
test
mov
jmp
inc
sub
push
push
neg
ss
adc
rolb
mov
fistpl
cmp
in
repnz
imul
ljmp
es
pop
stos
les
mov
out
cmp
sti
loop
iret
cli
jns
sbb
mov
icebp
jg
test
sbb
jge
pop
mov
jge
xor
fisubs
xchg
jno
xchg
jnp
xor
mov
lock
hlt
xor
mov
xor
xor
aaa
bound
lcall
cmpsl
psrld
jge
leave
scas
adc
xchg
subl
ret
mov
lcall
or
mov
and
stc
push
pop
xchg
pop
adc
sbb
dec
test
cmp
mov
add
pushf
xor
pushl
movzbw
jmp
jmp
push
call
mov
movw
movl
push
lea
jmp
movzbw
bswap
mov
lahf
rdtsc
lea
lahf
xchg
setns
bswap
rdtsc
cltd
lea
pusha
xchg
xchg
not
lea
not
lea
not
pushf
xchg
call
stc
mov
adc
aam
bsr
mov
test
cmc
sub
call
movb
push
cmp
jmp
js
sahf
or
ffreep
xor
daa
and
movsb
test
and
in
sub
mov
mov
cwtl
test
mov
test
jmp
adc
adc
mov
jb
popf
jo
mov
out
call
and
ljmp
or
int3
shlb
mov
lods
adc
mov
loopne
fidivrs
sbb
js
sbb
les
push
rol
aad
pop
out
and
fsubrs
sti
lock
and
mov
mov
mov
roll
mov
sbbb
leave
movsb
mov
cmp
inc
inc
mov
mov
dec
pop
xor
addr16
pop
push
cmp
pop
inc
xor
add
ret
cmp
push
std
jmp
in
jle
or
and
add
aam
pushf
jle
xchg
pop
jmp
fdivl
stc
push
mov
test
xor
cmp
jnp
divl
xor
cs
xor
pop
mov
cmp
adc
pop
inc
xchg
nop
std
push
pop
fildll
pop
adc
pop
dec
mov
out
mov
lret
sbb
lds
fldcw
out
rcr
stos
inc
inc
push
in
push
in
xchg
add
outsl
mov
cmp
out
jbe
in
shlb
mov
outsl
xor
xor
mov
and
ret
mov
and
imul
test
cli
fidivs
ss
jle
std
xor
rorb
add
lcall
loopne
dec
xor
mov
scas
out
jp
ja
pop
mov
xor
loop
push
out
das
addl
fistpl
shlb
jge
xchg
and
inc
and
and
and
add
loopne
std
lcall
xor
adc
std
jmp
mov
pop
mov
loop
add
clc
out
or
lret
fnstcw
sarb
xchg
sub
loope
push
loopne
push
jmp
cltd
aas
inc
inc
pop
jne
jmp
pop
test
leave
outsb
mov
test
jmp
idivl
xchg
push
jmp
cmp
mov
cld
add
jns
sbb
ss
add
into
sti
pop
pop
mov
xchg
cmpsl
ret
fisubs
inc
mov
jns
aad
inc
and
push
mov
shl
inc
and
sti
push
sbb
pop
mov
inc
enter
or
and
pop
lods
cs
lods
pop
in
in
stos
lret
outsb
lods
jp
insl
lock
sub
mov
sub
jg
outsb
cmc
mov
mov
push
test
jp
mov
int3
daa
add
lea
cmp
push
xor
hlt
sub
push
xor
mov
jbe
cmp
imul
cwtl
enter
xchg
les
in
mov
popa
stos
fists
mov
lahf
or
sub
pop
sahf
xor
push
and
dec
mov
push
pop
pusha
popf
mov
dec
xor
out
into
push
or
rorl
inc
jle
ret
push
lret
fisubs
cltd
sbb
cltd
sub
cmp
outsl
mov
dec
pop
iret
sbb
jne
repz
xorl
mov
fdivl
jg
fists
arpl
lahf
in
nop
mov
sti
xor
xchg
clc
icebp
popf
xchg
test
arpl
movsb
mov
icebp
ljmp
jmp
orb
inc
and
pop
cltd
pop
push
inc
ds
ret
je
push
jb
xchg
jmp
push
mov
fwait
addr16
cmpsb
das
or
sbb
mov
inc
mov
adc
xchg
lock
addr16
mov
dec
cli
inc
jg
add
mov
daa
push
inc
lods
jae
pop
out
and
mov
add
mov
int
mov
aaa
xchg
pop
cld
pop
xchg
movsb
sti
call
out
jmp
jbe
xchg
aas
shl
xchg
jae
es
jecxz
jb
sbb
mov
cld
test
in
dec
dec
fdiv
les
out
out
les
mov
enter
imul
push
test
or
fistpl
arpl
fs
shlb
or
or
sub
outsb
mov
shr
cmpsl
pop
loop
jne
pop
sbb
jp
mov
inc
shll
lds
je
push
fsubs
scas
lcall
shrb
dec
ljmp
lcall
call
pop
sarb
ds
rorl
push
inc
jnp
inc
adc
scas
ror
mov
je
rcrl
ret
pop
push
dec
mov
jl
adc
xor
jne
pop
dec
sbb
mov
xor
pop
xor
pushl
addr16
popf
insb
xchg
pushf
jns
and
lret
arpl
mov
cmp
loope
adc
gs
xor
out
pop
inc
sahf
cld
pop
dec
aas
push
mov
jbe
ficompl
pop
xor
jne
fdivr
sub
add
daa
or
sub
xor
cli
pusha
mov
movl
pusha
push
movl
mov
push
mov
lea
jmp
pushf
shr
mov
bt
cmp
stc
sub
pushf
stc
call
or
and
mov
xchg
or
xor
ficompl
aaa
mov
lock
mov
mov
or
ljmp
div
jmp
and
xor
arpl
lock
mov
pop
std
pusha
pmaxsw
loope
lds
pop
fldt
idivl
ret
sub
mov
mov
push
movsb
mov
cs
adc
outsb
jo
dec
pop
mov
mov
cmp
in
sub
pop
cmp
lock
cmp
mov
mov
pop
sub
mov
popf
div
in
out
sahf
lea
xor
push
jmp
dec
pop
les
cld
mov
scas
inc
xchg
xor
repz
xor
daa
add
mov
push
pusha
inc
lock
cli
and
dec
notb
dec
sbb
cmpsb
jns
mov
xor
adc
stos
jnp
shrb
add
scas
push
cld
in
or
loope
dec
icebp
and
cmp
in
loopne
aad
adc
fstps
cmp
imul
push
mov
xor
fcomp
xor
xor
xor
repz
or
jg
ss
int
decb
mov
out
jmp
imulb
xchg
bound
pop
adcb
filds
repz
push
sub
fadds
ret
jg
or
mov
add
jae
lcall
and
leave
adc
push
test
or
jne
mov
ret
repz
mov
stos
xchg
int3
push
inc
jle,pn
cwtl
dec
scas
sub
push
inc
and
lock
imul
test
dec
ljmp
imul
movsb
inc
jmp
jecxz
in
xchg
xorl
out
lods
out
dec
je
xor
adc
pop
xchg
repnz
in
xor
cmp
popf
sbb
xchg
xchg
cmp
stc
mov
iret
inc
out
pop
xchg
push
clc
daa
sbbb
push
jo
loop
mov
popa
or
pop
push
mov
mov
dec
xchg
mov
mov
lock
das
lret
lock
xor
adc
sub
pop
sbb
ljmp
sarl
loope
fmull
mov
inc
sti
in
or
mov
lods
es
pop
fdivr
sahf
cwtl
je
call
clc
pop
inc
aas
mov
jge
inc
sub
jp
out
repz
je
add
sub
sub
dec
xchg
mov
mov
cltd
dec
insl
or
mov
test
sbb
outsb
add
xchg
xchg
inc
xchg
sahf
jg
pushf
jne
sbb
sub
call
ljmp
stos
pop
outsb
imul
lds
aas
xchg
xchg
lods
pop
out
fisubs
pop
pop
and
jno
xor
adc
testl
pop
test
add
pop
xor
daa
pop
xchg
call
shll
stos
jge
mov
adc
cmp
push
repnz
mov
arpl
or
arpl
mov
mov
and
mov
mov
or
push
push
ja
cld
push
addr16
stc
jnp
push
dec
mov
shrl
mov
jge
mov
mov
shrl
push
push
sub
jle
stos
out
test
movsb
cld
lods
sar
xor
xor
js
mov
fsubrs
imul
mov
pushf
jne
ja
movl
push
movb
lea
jmp
mov
add
xor
mov
sbb
fiaddl
in
es
sub
xchg
xchg
test
subl
pop
aaa
xor
pop
xchg
xor
push
insl
divl
pushl
cmpsl
xchg
pop
es
sahf
insl
pop
jge
xchg
mov
js
into
push
int3
lods
mov
in
fdivrp
f2xm1
xor
mov
dec
lods
repnz
flds
roll
dec
xchg
xor
inc
adc
dec
ss
or
mov
ljmp
xchg
cmp
sub
dec
sub
xor
js
lods
loopne
adc
stos
xlat
sub
orb
xchg
cmp
or
xlat
sub
scas
xlat
js
sub
and
out
xor
mov
inc
imul
mov
int3
mov
and
mov
mov
scas
xchg
fadds
sbb
or
jle
xor
mov
stc
aad
lods
jle
mov
das
xchg
mov
mov
jl
mov
pop
in
mov
pusha
lds
sarl
xlat
push
out
mov
mov
push
add
xchg
dec
push
mov
sub
pavgw
adc
mov
mov
sub
jecxz
pop
call
lcall
popa
jno
rcrb
jmp
mov
aaa
pop
jbe
es
push
or
push
mov
fistpll
cmpsb
mov
pop
push
pop
out
cmpsb
push
stos
inc
mov
lods
mov
imulb
dec
jecxz
inc
mov
int
cltd
lock
imul
test
imul
rolb
cwtl
rcrb
bound
js
stc
xor
mov
inc
mov
mov
inc
movsl
xor
cmpsb
dec
jne
mov
push
imul
test
rorb
movsb
adc
mov
jns
imull
mov
cmp
push
jl
cmp
pushf
jno
and
mov
jae
fistpll
and
cmc
push
mov
pop
pop
ds
adc
mov
and
in
sub
imul
arpl
push
gs
mov
rdtsc
pushf
jb
rorb
shll
fwait
jecxz
mov
sub
jp
clc
jb
outsb
inc
dec
add
cli
pop
mov
lahf
push
pop
xlat
notl
push
mov
sub
cltd
rorl
repz
add
mov
movsb
sub
aad
adc
mov
mov
xchg
cmp
popa
mov
ljmp
pop
cmp
gs
adc
cmpsb
jbe
push
ret
fists
or
decb
inc
maxps
std
loope
movsb
aas
mov
adc
mov
test
cmp
xor
loopne
pop
test
mov
mov
pushf
jno
push
pop
ljmp
and
cmpsb
fiaddl
aas
aas
or
pushf
jno
int3
imul
pop
test
mov
sarl
out
pop
movl
fisttpll
push
xchg
ljmp
pusha
mov
adc
jmp
push
xor
mov
aas
push
pop
popa
mov
jge
enter
scas
mov
pushf
jno
shll
in
add
call
movsbw
movb
mov
lea
jae
push
push
mov
pushl
movl
pushf
movb
push
push
pushl
popl
pushf
movb
pushl
ret
pop
lods
xor
jns
mov
push
subb
add
test
add
mov
xor
jns
xor
or
mov
and
jp
add
xor
sub
mov
mov
fucomp
xchg
pop
cltd
stos
imul
pushf
jo
mov
cld
ds
xlat
std
stc
xor
movb
in
push
inc
add
mov
jbe
xor
mov
lea
lret
push
cmpsw
xchg
pop
cli
lcall
daa
jle
xchg
repnz
fs
mov
push
test
lcall
xchg
std
mov
pop
repz
lock
and
out
sub
fisttps
push
fst
jecxz
imul
jns
in
sub
jbe
lahf
push
in
add
xor
fsubr
xchg
jle
push
sub
int3
aas
xor
inc
dec
add
xchg
push
xchg
daa
clc
aaa
inc
mov
cs
adc
aam
arpl
fdivrs
loope
mov
mov
xchg
nop
daa
pusha
punpckldq
insl
sbb
pop
jp
lods
div
dec
xlat
pop
xchg
dec
push
xlat
lahf
push
and
push
jae
jle
cltd
fistl
sub
addr16
sub
loope
and
cltd
xor
inc
lcall
xchg
rorl
xor
in
js
jmp
inc
push
cmp
pop
or
mov
push
repnz
movsb
in
jb
or
push
xor
mov
mov
sti
icebp
lods
pop
xchg
insb
add
bound
sub
repz
mov
dec
cmp
mov
lcall
xchg
adc
and
jae
cmc
add
pushf
xchg
pop
mov
arpl
pop
pop
das
dec
test
inc
xor
add
sbb
in
leave
jne
notb
test
inc
pop
jae
cmp
imul
cwtl
inc
push
or
cwtl
hlt
dec
gs
in
dec
ljmp
jne
dec
mov
ss
loop
loopne
into
cmp
cltd
fiaddl
and
jl
les
fsubrs
data16
js
xor
pushf
outsb
lcall
push
inc
xorl
das
enter
fisubrl
jmp
ljmp
scas
movsb
add
aaa
jg
cmp
add
inc
pop
cmp
lock
mov
mov
into
push
lods
jb
ljmp
jns
stc
ss
aaa
mov
adcl
or
xchg
mov
push
xor
jns
outsl
test
lahf
or
popf
dec
xchg
imul
mov
push
xor
loope
fwait
add
pop
std
cmp
sbbl
sbb
dec
insb
sbbb
push
mov
cmp
add
inc
fdivrp
loop
aas
jb
out
and
mov
scas
or
sbb
imul
pop
leave
and
rorb
icebp
adc
pop
cmp
arpl
push
das
rcl
xchg
push
test
and
pop
outsl
adc
xchg
in
iret
inc
fstl
or
add
mov
leave
pop
test
cmp
movsb
add
and
sbb
jmp
xor
adc
pop
aas
mov
popa
adc
cmp
mov
push
cld
lods
jge
dec
jno
aad
fwait
or
pop
insb
stos
test
add
ret
cld
daa
cld
stc
jmp
xchg
pop
mov
repz
adc
stos
aad
sub
inc
pop
mov
sub
dec
ss
test
arpl
push
movsb
in
mov
xor
cmp
cmovl
adc
scas
mov
push
adc
into
pop
lcall
mov
popa
rcll
pop
pop
in
popa
cs
daa
sub
insb
inc
js
std
les
bound
xchg
leave
test
sbb
jnp
repnz
xchg
xor
xchg
add
push
jmp
jmp
imul
sbb
leave
xor
xor
dec
pop
ja
cmp
push
mov
jns
fdivs
rcrb
je
jg,pt
adc
rol
dec
aam
rcr
in
xchg
cmpsl
loop
jg
cmp
push
cmp
pushf
insb
mov
popl
enter
decl
cld
call
call
inc
xchg
mov
and
xchg
clc
pop
gs
jmp
test
inc
jp
popa
cmp
xlat
mov
pop
cmpsb
push
shlb
sbb
ret
in
fsts
jp
cmpsl
mov
in
add
mov
xchg
add
sbb
ret
leave
mov
mov
sbb
jnp
xchg
dec
inc
push
cmc
sbb
lea
jmp
push
sti
rcl
test
add
arpl
and
negl
idivb
xchg
jb
ret
ret
cwtl
bound
adc
mov
notl
lods
jle
in
adc
lds
insl
insb
rcrl
aas
fs
mov
pop
test
call
fisttpll
jo
in
and
push
mov
dec
xor
jo
loop
push
cltd
shlb
scas
xchg
adc
stc
inc
and
mov
xor
xchg
ljmp
push
test
fstl
push
data16
pushf
pop
xor
push
jb
jmp
push
sarb
clc
sbb
mov
subl
cwtl
mov
sbb
ficomps
loope
xor
insl
mov
dec
xchg
nop
cmp
test
mov
adc
push
orl
popf
add
sub
orb
mov
mov
sub
lods
add
pushl
fs
out
xor
xchg
sbb
call
push
imul
cmp
add
shlb
lods
sbb
dec
mov
xor
and
movsb
sub
stc
idivb
push
in
repnz
outsl
push
outsb
inc
jns
add
push
and
pushf
sub
sub
ret
ret
push
cmp
adc
and
mov
pop
inc
imul
pushf
push
sbb
and
add
adc
and
imul
sbb
mov
out
cmp
adc
cld
sub
pop
imul
movsb
xor
cmp
cmc
mov
or
dec
aaa
mov
mov
pcmpeqw
lock
shrb
test
mov
jg
xchg
mov
insl
or
jle
fs
insb
push
scas
mov
lds
or
es
and
in
cltd
movsl
cltd
adc
adc
aad
shrl
mov
sti
jge
scas
or
jle
shl
pop
mov
xor
push
adc
xor
es
pop
shl
mov
or
loop
movsl
or
xor
lahf
cld
pushl
push
mov
xor
xchg
es
pop
leave
sub
repz
es
les
mov
xor
in
add
inc
xchg
jae
ds
lahf
notl
mov
mov
imul
outsb
test
es
test
mov
test
pop
xor
sbb
bound
push
pop
inc
cmc
xchg
std
sub
pushf
push
mov
out
push
pop
test
bound
push
cli
mov
add
daa
lea
rorl
fcmovb
inc
sub
sbb
xor
xor
mov
inc
mov
jg
xchg
mov
or
jbe
mov
icebp
popf
fwait
enter
aas
aaa
je
sub
xchg
std
mov
mov
jo
mov
dec
add
sub
or
sub
loopne
cmp
xlat
dec
ret
and
mov
cmp
scas
movsb
lea
mov
mov
fiadds
je
jno
or
or
mov
test
gs
ja
jbe
mov
mov
push
js
loope
and
fldenv
jmp
inc
mov
cld
lock
sub
cmc
shlb
cwtl
mov
or
out
adc
ljmp
push
dec
test
out
pop
cmp
in
int
aam
pusha
push
mov
cmp
jle
push
js
fdivs
jnp
repz
jo
aad
or
mov
sbb
push
cmc
push
fwait
jge
xor
add
mov
inc
xchg
xchg
ja
xor
enter
inc
jbe
xlat
mov
xor
enter
imul
jp
and
icebp
jp
and
or
jmp
jbe
lods
dec
int3
fisubrl
add
imul
xor
mov
lcall
mov
jge
push
outsl
mov
fxtract
xchg
xor
std
imul
pop
int
ss
movsb
push
cmp
repz
dec
stc
ja
sub
pop
mov
popf
push
mov
popf
pop
mov
dec
repnz
or
icebp
jb
xorl
and
jnp
mov
mov
int
add
push
adc
add
jecxz
rcrb
push
jg
ret
cmpsl
fcmovnu
lret
ret
and
push
cmp
xchg
lahf
sbb
adc
inc
push
mov
mov
sub
jb
mov
dec
mov
loop
cld
cs
sub
test
sbbb
dec
fnsave
loop
mov
scas
in
mov
cmc
and
int
jge
mov
dec
push
jo
test
rcr
pop
lret
sub
push
dec
out
xchg
xchg
jl
clc
out
cwtl
xchg
into
and
mov
popf
stos
dec
out
mov
lret
cmp
dec
mov
add
mov
jae
insb
cli
ss
je
adc
stc
cmp
push
loopne
out
in
pop
fucom
ret
dec
fidivs
sbb
push
inc
test
pop
mov
or
jnp
sub
adc
ja
cmp
adc
dec
add
notl
outsb
jmp
mov
mov
cmpsl
mov
aad
cmc
imul
fdivl
stos
mov
mov
pop
xor
mov
xor
psubusw
pusha
outsb
popa
divl
rcrl
in
sbb
mov
sub
lahf
filds
repz
mov
jp
dec
xor
or
jecxz
inc
pop
pusha
sbb
dec
pop
imul
sub
enter
pop
ja
push
xor
pusha
adc
sub
jle
rcrb
add
cmpsb
and
pop
in
movsl
outsl
xchg
fisttpll
cltd
mov
sub
out
pushf
icebp
inc
fwait
mov
mov
pop
hlt
popa
test
repnz
mov
mov
fistps
cltd
add
fstps
call
andl
push
loop
pop
lods
pop
cmp
stos
subb
dec
frstor
jl
cmp
popa
scas
lds
bound
cmpsl
fnstsw
mov
fstpl
mov
inc
lahf
xor
mov
mov
mov
test
pop
inc
inc
mov
sarb
pushf
fs
out
jp
ret
mov
pop
adc
ret
xor
pop
mov
mov
add
fistps
xor
mov
ds
nop
jno
pushf
arpl
data16
in
mov
into
inc
rolb
pop
xchg
repz
xor
in
jl
push
ret
stc
cmova
adc
imul
add
mov
into
mov
jmp
xor
push
push
jmp
pushf
movl
push
push
push
lea
jmp
xor
dec
fildl
mov
inc
das
sbb
pop
adc
mov
dec
cltd
inc
sbb
icebp
push
jns
push
pop
testl
cmpsb
pop
push
sub
aam
or
insb
bound
add
rcll
jne
call
pop
stc
jne
mov
in
pop
gs
adc
pop
push
add
or
inc
pop
sub
aas
lds
sub
xor
mov
addl
mov
jns
insl
or
jb
pop
movl
xor
xor
ror
aas
sbb
es
pop
orl
ljmp
xor
sbb
stos
inc
jo
xchg
lods
in
pop
test
lcall
psadbw
sbb
xchg
aaa
hlt
jo
jl
lds
mov
stos
jmp
imul
xchg
cwtl
cmp
push
iret
out
je
clc
mov
scas
dec
mov
mov
adc
add
std
subl
inc
fidivrs
lods
add
push
xchg
das
jmp
push
test
sbb
and
das
mov
shlb
fcmovne
fmul
inc
gs
pop
lock
push
mov
inc
cltd
out
dec
xor
fnstsw
xchg
lret
cmpsb
call
loop
addl
fwait
dec
scas
pmulhuw
shl
sub
and
jl
pop
and
mov
xor
out
ret
popf
xor
fwait
daa
hlt
xchg
adc
cmc
mov
pushf
arpl
or
pushf
sub
inc
jl
into
xor
cli
mov
mov
out
or
cmpsl
out
lds
inc
fistpl
pop
fsubrl
stos
stos
insl
push
xchg
jb
xchg
inc
loopne
pop
or
jne
pop
cmp
test
cmc
mov
das
and
loopne
mov
mov
sbb
arpl
test
mov
nop
lods
xchg
test
xor
adc
std
fldcw
xlat
pop
scas
idivl
fstpl
add
or
push
test
xchg
cmpxchg
push
cmp
je
dec
or
cmc
jbe
subps
js
dec
shrd
xor
fistpl
xor
sub
jns
insl
cwtl
jecxz
jp
ds
push
cmp
sub
push
cmp
xchg
rorl
add
ret
jle
nop
in
adc
xchg
lods
in
jae
insb
pop
cmp
stc
push
das
sbb
cmp
inc
push
cmc
cmp
sbbb
lahf
dec
out
out
mov
repz
dec
in
call
or
dec
jnp
mov
lds
mov
mov
dec
fmull
mov
mov
pusha
rcll
shl
mov
xor
inc
pop
shll
shlb
rol
add
sahf
xor
push
jb
mov
mov
mov
xchg
nop
arpl
mov
mov
out
xorl
in
leave
or
cmp
shrl
hlt
cmp
imul
mov
inc
je
call
cmp
push
jb
or
or
sldt
push
mov
mov
sahf
jbe
out
or
lods
test
sahf
pop
mov
mov
add
cmp
loope
xchg
imul
bound
ficomps
fs
dec
stos
mov
notb
inc
ret
sub
mov
cmpsb
mov
mov
daa
xchg
xchg
xor
mov
jbe
jo
xor
xor
sbb
inc
rorb
mov
aaa
xor
stc
xchg
out
loopne
sub
jne
and
jbe
sub
dec
call
mov
and
push
jae
sbb
mov
mov
xchg
inc
sub
pop
int
aaa
ror
in
insb
dec
aas
nop
add
mov
dec
int3
xchg
fs
lea
es
ds
and
push
jno
std
push
and
icebp
pushf
mov
mov
pop
mov
outsb
or
jmp
insl
mov
in
pushf
pop
push
int3
cmp
sub
cld
or
adc
les
lcall
xchg
icebp
stos
add
pop
sbb
lret
push
mov
cld
bound
mov
xchg
mov
mov
xchg
out
aas
mov
sbb
out
lcall
push
mov
cmpb
jno
jae
xor
sub
clc
fbstp
adc
adc
or
pop
divb
add
jg
ret
lds
inc
pop
movl
pushf
movl
pusha
push
lea
jmp
pusha
pushl
call
in
mov
push
das
dec
fiadds
and
inc
lock
es
in
in
lret
ja
movsl
dec
sbb
fstpt
pop
or
cwtl
ds
nop
fists
add
jmp
mov
sahf
pop
mov
push
popl
stc
js
dec
sbb
xchg
adc
bound
push
cmpsb
out
sub
inc
or
xor
xchg
mov
mov
mov
adc
xchg
movsb
add
imul
movsl
jmp
mov
sbb
mov
inc
cmp
pusha
cmc
lahf
subl
pushf
pop
add
pop
pop
sbb
adc
adc
pusha
clc
fildl
loope
pushf
pop
dec
jp
pusha
movl
pusha
push
pushf
call
push
inc
push
jo
mov
movsb
out
sbb
and
in
dec
arpl
add
repnz
add
inc
push
push
mov
xor
out
pop
mov
inc
push
cmp
sbb
cmpsl
in
into
ss
jmp
jae
push
add
mov
or
ds
imul
add
aad
push
adc
jmp
movl
pop
test
dec
xor
pop
pushf
mov
and
and
sbb
dec
and
shll
adc
movl
jmp
pusha
movl
call
push
pusha
pushf
movl
pusha
lea
jmp
pusha
jmp
ficoml
cmpsb
testb
jecxz
rolb
jl
rep
repz
xlat
adc
or
loop
jg
dec
and
inc
test
xor
pop
popf
cmp
popf
xchg
jl
adc
mov
lock
sbb
lds
add
adc
sti
mov
xor
push
xor
je
adcl
add
rol
dec
fwait
or
fimuls
push
popa
lds
in
pushf
dec
fwait
ss
add
jmp
mov
cmpsb
daa
pop
ja
xor
aaa
xor
repz
jmp
cmp
mov
or
adc
push
bswap
or
jae
push
sbb
inc
mov
lea
jns
lea
test
out
and
sarl
xchg
in
adc
cmpsl
inc
ljmp
stos
data16
cmpsl
fwait
ss
cli
adc
add
push
stos
push
mov
clc
aam
jmp
test
shrb
pop
jg
cmp
jnp
jno
jmp
fcomps
mov
mov
xchg
stc
inc
sbb
sbb
pop
xor
test
lods
lea
dec
ja
jp
adc
dec
dec
mov
divb
jbe
lret
rorl
and
dec
adc
scas
xchg
fs
arpl
ret
rcll
pop
pushf
mov
popa
jno
cmp
lahf
popa
das
sub
scas
ljmp
fildll
inc
sar
inc
cltd
adc
cwtl
sbb
fsubr
fs
mov
jb
or
fwait
sub
or
xchg
pop
sti
sbb
adc
popf
mov
jmp
jb
xor
dec
push
jno
cmpsl
shll
das
xchg
and
add
mov
and
xor
fdivrl
mov
push
jecxz
ret
xor
movsbl
pop
mov
xchg
pushl
movzbw
setp
mov
lea
js
push
pushf
lea
mov
call
movl
pushf
lea
jmp
lea
push
lea
jmp
call
pusha
pushf
movl
call
push
movl
pushl
push
movl
pushf
mov
pushf
movb
lea
jmp
mov
jmp
call
jae
fnstcw
push
stos
lahf
outsb
jl
mov
mov
mov
int3
insb
pop
pop
mov
inc
mov
fdivrp
cmp
jae
sub
or
daa
xchg
jmp
popf
mov
stc
pop
inc
loope
dec
std
cmp
loope
into
jmp
mov
out
rorl
pop
mov
mov
push
out
xabort
dec
and
nop
fldt
adc
in
lea
pushf
pop
and
cld
sarl
iret
aam
loop
mov
ret
outsb
dec
xor
leave
xchg
dec
scas
lcall
jge
repz
sub
inc
orl
nop
test
or
dec
push
sbb
subl
out
lea
lret
test
xchg
stos
sti
and
sti
int3
js
push
xchg
int3
int3
scas
or
mov
sahf
cmp
lea
movsb
dec
mul
subb
mov
adc
out
fdivr
cld
cmp
fisubl
xchg
decl
lcall
icebp
push
pop
cmp
inc
pop
jbe
lds
dec
daa
lret
mov
lret
sbb
adc
insb
loopne
or
sub
cmp
or
jg
jo
pop
xor
jmp
lock
ja
ds
test
stos
push
pop
ljmp
repz
std
sbb
sbb
pop
fcomi
out
add
inc
stos
lcall
xchg
adc
imul
pop
clc
adc
imul
xor
in
shlb
fbld
gs
xor
shl
call
pop
les
insb
sbb
sahf
push
adc
js
loopne
mov
call
bound
orb
ficomps
fimuls
fcompl
or
ja
fbstp
mov
sbb
sub
incl
scas
push
std
mov
pushf
pop
lcall
aad
adc
dec
sub
pushf
pop
lds
pushl
mov
popf
dec
addl
jns
hlt
pop
pop
push
ret
cld
pop
sahf
bswap
xchg
hlt
add
pop
mov
push
or
adc
das
sbb
jne
pop
outsl
cmp
stos
push
sahf
push
mov
dec
push
or
push
jnp
dec
jmp
jne
lret
dec
daa
xor
and
pop
shlb
push
testb
push
pop
sbb
mov
xchg
loop
mov
sahf
cli
jbe
inc
and
mov
mov
mov
dec
lea
mov
call
das
shl
in
mov
jle
in
xchg
das
pop
ja
mov
adc
cmpsl
bound
add
mov
f2xm1
jle
adc
mov
and
dec
out
mov
add
fsubr
jo
pop
push
xor
push
cmpsb
inc
pop
ja
test
sarl
jo
xor
mov
xor
or
mov
cmp
mov
add
cmpsl
aad
push
mov
sub
sbb
and
pushf
shll
andb
cld
jge
scas
mov
scas
icebp
pop
adc
popf
adcb
adc
loop
xor
jae
mov
inc
xchg
push
mov
pushf
push
leave
fstl
xor
adc
test
imul
loope
pop
imul
mov
pop
cmp
dec
sarl
xchg
jae
adc
imul
jae
xor
dec
shlb
xor
sbbl
pop
pop
push
repnz
repnz
inc
cmp
dec
or
sti
xchg
lret
lods
or
inc
rcll
fs
xlat
nop
push
xor
insl
or
lods
outsb
mov
xchg
nop
or
mov
mov
aas
out
and
das
hlt
jns
rcrl
push
and
cld
stc
movsl
cmp
push
and
dec
pop
add
jns
add
cmp
decl
jle
imulb
or
outsb
int3
xchg
mov
push
cmp
inc
jge
je
pop
lods
mov
fadds
movsb
jo
and
or
sbb
out
sub
inc
sbb
repnz
pop
jecxz
adc
jl
cli
cmpsb
outsl
xchg
xchg
inc
test
das
and
dec
xchg
in
push
cld
push
test
not
scas
mov
xchg
mov
pop
inc
or
hlt
mov
inc
xchg
pop
xor
dec
or
dec
ljmp
imul
inc
nop
or
mov
jo
xor
lret
xor
mov
or
test
rolb
push
dec
push
dec
stc
pushl
inc
imul
inc
adc
inc
push
xor
cmp
test
xchg
mov
push
pusha
jb
in
ficoml
cli
mov
loope
mov
test
test
icebp
idivl
mov
push
and
add
lea
pushf
lods
pop
or
fidivs
dec
fnsave
add
lods
aad
inc
jo
test
fisubrl
xor
xor
push
pop
or
mov
lds
das
out
dec
sub
mov
xchg
push
xchg
adc
push
out
lahf
adc
xchg
popf
je
mov
ret
sbb
daa
cmc
test
inc
push
and
js
fsts
xor
pop
jae
sbb
jge
push
dec
movsl
lcall
and
add
outsl
leave
imul
dec
jmp
and
dec
jo
mov
ss
shlb
pop
or
xchg
jno
mov
push
es
xor
test
icebp
xchg
mov
sbb
push
scas
mov
ljmp
scas
shlb
jo
imul
pushf
push
mov
fnstcw
mov
mov
pop
sbb
cmp
mov
sbb
stos
push
lods
xor
ds
sbb
or
dec
inc
jmp
int3
sahf
lret
add
aas
or
ljmp
sahf
pop
dec
sbb
mov
or
mov
pop
add
xor
lods
xchg
jae
in
jecxz
outsl
hlt
andb
and
dec
jmp
stc
push
sub
sub
jae
dec
lock
pop
xchg
test
rol
jne
xor
adc
push
jl
jg
fnstcw
mov
loopne
js
xchg
cmpsl
or
repz
or
xor
lock
cli
jne
and
aas
jb
adc
mov
daa
ljmp
or
icebp
outsb
jg
jmp
fidivl
addb
inc
inc
or
cmp
xchg
int3
leave
scas
push
pushf
mov
int3
lods
ficompl
adc
les
or
xlat
mov
stos
fsubrl
inc
add
mov
notb
pop
loop
cmp
jae
stos
and
xor
xchg
jecxz
push
mov
movsl
cmp
in
in
xor
lock
sbb
fstps
sub
or
stc
push
nop
lods
jge
jl,pn
pushf
push
scas
loope
in
popl
and
push
data16
in
scas
xchg
test
fidivs
call
cwtl
and
pop
loopne
mov
sarb
daa
outsb
ret
and
pop
fnstenv
jg
cmp
xchg
mov
loopne
loop
pop
ss
adc
lahf
jb
out
sarl
push
jno
jge
stos
repnz
xchg
shr
push
and
or
hlt
add
in
daa
sub
pop
push
movsb
jno
fiaddl
cmpsb
add
lahf
mov
push
sbb
xor
lea
out
pop
jbe
mov
dec
andl
inc
lahf
dec
imul
rolb
lea
mov
jb
jnp
mov
leave
mov
sbb
mov
and
and
shll
aaa
mov
shll
std
pop
mov
shr
and
or
divb
sub
mov
sbb
adc
xorl
lds
or
adc
rolb
xor
jge
shrl
pop
mov
outsl
lods
imul
pushf
push
mov
andb
and
scas
push
push
push
push
lea
jmp
jbe
jg
int3
push
je
cmp
mov
inc
sbb
popf
rcrl
dec
cmp
lcall
sub
cmpsb
add
std
xor
ja
sbb
lcall
dec
adc
push
lahf
jb
add
inc
les
out
and
clc
bsf
lea
jmp
sbb
jmp
jg
mov
jle
add
fs
push
mov
jb
fcoms
or
pusha
daa
and
fs
xchg
das
xchg
adc
sarl
mov
imul
pop
ds
inc
stos
jo
mov
pop
iret
mov
ret
xor
decb
mov
mov
xchg
aas
cmpsb
and
jge
xor
imul
mov
or
mov
adc
std
sbb
pushf
push
sbb
test
out
xor
popa
mov
shll
or
pushf
push
and
insb
roll
jo
sub
rcll
jl
pop
out
jp
pushf
push
loope
orl
add
je
or
xchg
jno
ljmp
dec
jne
jb
repnz
xchg
cmp
enter
mov
rorb
sti
repz
orb
add
addr16
fbld
add
fildll
push
xor
fnstsw
mov
cmp
mov
ss
and
xor
push
scas
cmp
cmp
cmc
inc
cmp
pop
fcmovnbe
cmp
jno
addl
xor
mov
lea
jp
adc
mov
add
push
ficoml
mov
mov
add
in
xchg
sub
and
in
sub
add
dec
push
test
add
adcl
aas
fists
stos
mov
pop
notl
push
inc
push
mov
cld
xor
sub
cwtl
and
ja
cmp
test
cmp
or
mov
push
scas
cmpl
outsb
or
dec
cmpsb
dec
imul
sahf
and
jge
jl
inc
xor
xor
or
std
sub
jae
jg
mov
jns
fdivp
jb
mov
add
cmp
push
mov
cmp
xor
test
inc
mov
stos
xor
fnstsw
xchg
sbb
dec
mov
mov
jge
mov
je
add
pop
mov
pushf
mov
fcos
inc
mov
pop
imul
les
inc
dec
xor
inc
stos
int3
fdecstp
and
cld
lahf
push
mov
cmp
rcll
and
inc
mov
lcall
lahf
mov
ss
adc
mov
ds
or
popa
nop
dec
popa
fnstcw
xchg
mov
fsqrt
mov
add
xor
add
xor
lret
or
mov
int3
outsl
sbb
repz
ret
fwait
movl
movb
lea
jmp
movl
pushl
pushf
movl
push
mov
lea
jmp
jle
inc
jl
outsb
pop
out
mov
outsb
or
sbb
adc
dec
xchg
xor
out
pop
mov
out
inc
stos
in
inc
push
push
mov
mov
pop
mov
xlat
cltd
jae
jge
xchg
ud2
stos
cld
or
adc
out
dec
std
xchg
cmpb
mov
repnz
xchg
dec
pop
icebp
repnz
iret
leave
cmpl
xlat
adc
ret
sub
xchg
jge
push
push
push
pushf
cmp
jae
jecxz
not
enter
cmp
and
xor
mov
pop
es
adc
adc
test
jne
mov
cmpsl
inc
stos
push
mov
in
flds
out
loope
mov
push
mov
notl
roll
test
pusha
outsb
adc
mov
gs
ljmp
cmpsb
sbb
add
adc
mov
mov
cmp
mov
add
shrb
outsb
imul
sub
pop
jg
dec
mov
dec
pusha
mov
lret
push
jp
xor
add
or
in
jecxz
test
pcmpgtw
push
clc
in
dec
pushf
gs
scas
pop
inc
out
cs
test
or
xor
lods
sbb
xor
je
test
imul
out
ss
mov
iret
stos
cmpsb
cmp
xor
test
repz
cmpsb
push
lcall
pop
out
pop
push
repz
xchg
pushf
sub
jg
cwtl
mov
pop
jge
lods
repz
jb
cmpsb
dec
iret
pop
cs
shrl
icebp
mov
sub
mov
rcrl
rorl
es
int3
pop
cs
aas
pop
xorb
add
nop
jo
test
faddl
cmp
mov
test
jle
dec
add
xchg
mov
mov
sti
sahf
mov
dec
rorl
mov
cmp
gs
sbb
pop
imul
iret
outsl
aam
lcall
pusha
pop
push
mov
roll
mull
cmp
lds
lcall
shr
mov
in
stos
sub
jecxz
cli
pop
xor
mov
insl
leave
and
je
or
push
cmpsl
insb
inc
dec
push
out
leave
imul
out
fsubl
xor
imul
dec
lods
int
mov
dec
xchg
arpl
pushf
dec
repz
mov
and
mov
cmp
je
cli
test
pushf
dec
mov
popl
movsb
mov
movsl
lds
rcrl
ret
dec
xchg
es
jle
mov
or
mov
call
xor
in
push
pop
or
icebp
icebp
or
mov
xchg
sub
mov
adc
icebp
stos
shrl
addb
pushf
fisubl
movsb
inc
sahf
sahf
push
inc
rcrl
in
mov
movsl
dec
inc
mov
sti
adc
fwait
adcl
nop
and
jae
dec
outsb
call
mov
push
push
hlt
int
and
cld
adcl
incb
mov
sbb
loopne
rcl
outsb
insl
push
repz
test
faddl
roll
jae
std
add
std
xchg
repz
into
sti
push
int3
gs
sti
mov
cmp
dec
addr16
xchg
ja
addr16
cmp
out
cmp
cmp
cmpsl
xchg
cmp
push
mov
cmp
jae
stos
leave
addr16
mov
jmp
xlat
psadbw
movaps
test
mov
or
popl
mov
add
push
sub
pop
xchg
movsb
dec
add
aad
test
loop
aas
popa
pop
sub
jmp
pushf
dec
xor
imul
out
fsub
add
xor
jns
pushl
cld
into
xchg
dec
xor
sub
mov
fnstsw
adc
pusha
mov
stc
xor
out
mov
lods
mov
imull
icebp
jbe
es
jmp
filds
and
mov
pop
mov
clc
push
push
pop
mov
add
sbb
lods
xor
mov
cmpsl
dec
jle
adcl
pushf
dec
mov
push
mov
movl
push
lea
jmp
pusha
pusha
movl
pushf
movl
pushf
push
movw
push
lea
jmp
movl
pushf
lea
jmp
inc
and
imul
pop
dec
loope
aam
inc
add
lret
sbb
mov
mov
pop
lock
stos
scas
imul
int
ret
movsb
add
mov
xor
mov
cmp
xchg
sub
jb
roll
jae
jb
push
in
dec
fidivrl
in
arpl
jecxz
mov
push
mov
pop
and
sbb
sub
popf
jl,pt
decb
aam
add
push
stos
sbb
enter
inc
bound
push
orb
jle
cmp
data16
and
or
fmuls
cmp
or
mov
xchg
add
out
xchg
pushf
imul
inc
and
jmp
jl
jge
sub
cmp
or
rcr
push
cmp
mov
adc
in
add
movsl
fisubrs
lds
jmp
dec
mov
xchg
faddl
push
loop
xor
pop
mov
pop
in
add
jo
pop
fstpt
xchg
ja
dec
fcmovu
mov
leave
xor
xor
sub
and
mov
jae
fdivrl
fstpt
push
or
mov
dec
je
mov
or
dec
sub
outsl
push
push
sub
xchg
rcl
lret
mov
es
outsl
js
insl
lret
or
xchg
inc
jp
fiadds
cmp
pop
in
fisubs
cmpsb
xchg
stc
sub
pop
popa
rcll
pushf
inc
inc
je
add
jmp
lahf
or
les
pop
dec
add
imul
push
clc
dec
cs
dec
mov
or
sti
in
adc
inc
sub
or
es
xor
or
imul
xchg
push
inc
pop
sbb
divl
push
inc
mov
scas
das
adc
out
pop
xchg
iret
movsb
lret
pop
or
rcrl
mov
stos
mov
sbb
movsl
repz
faddl
int3
or
iret
inc
loopne
xchg
pop
sub
mov
xchg
cmp
push
clc
inc
cmp
xchg
mov
ds
adc
cmp
push
cmpsl
arpl
mov
fcmovnu
fistpl
clc
xor
cmp
add
or
nop
xchg
cmpb
xchg
adc
sub
xor
dec
mov
mov
add
xor
mov
out
mov
lret
jbe
jo
pushf
inc
add
mov
dec
push
adc
inc
sbb
push
xor
fmuls
pushl
xchg
stc
dec
push
fimuls
xor
mov
sti
mov
shrl
into
push
fisubl
push
xor
mov
cmp
xor
js
ljmp
lock
stc
adc
ret
xor
movl
pushf
pusha
call
mov
lea
jle
push
pusha
movw
mov
lea
jae
push
pusha
mov
mov
pusha
lea
jmp
sub
cmp
adc
ja
push
cld
fsubr
shlb
je
stos
out
out
jmp
xor
repnz
insl
mov
xchg
repz
push
xchg
inc
not
out
jmp
out
cmp
shl
adc
or
mov
mov
jae
xchg
sbb
pop
adc
jle
or
movsb
rcrb
in
inc
sbb
jnp
mov
xchg
enter
jecxz
ret
out
mov
nop
mov
sti
bound
mov
or
add
fld
xchg
adc
gs
sbb
jp
inc
imul
mov
outsl
repz
push
movsl
and
inc
or
or
sbb
loop
inc
inc
jmp
sbb
inc
pop
mov
iret
mov
pushl
push
or
sub
dec
push
jne
das
enter
xchg
pop
pop
jb
pop
jg
inc
lods
mov
js
or
fnstsw
pushf
inc
mov
xor
dec
add
outsb
movb
xor
sub
mov
pop
sub
jb
pop
cmp
lcall
shrb
sbb
xor
xor
scas
sbb
cmp
and
adc
push
and
xor
movl
call
mov
pop
ds
loope
add
and
ss
push
push
int
imul
bound
cmp
mov
xchg
lret
aaa
jb
fcoml
inc
mov
sbb
jnp
pop
scas
sahf
fs
mov
jg
inc
testb
xor
add
mov
fnstsw
cbtw
shr
cmp
push
dec
pop
fisubrl
adc
bound
dec
push
xor
ja
lds
push
xor
xor
ja
fsubrs
and
mov
sbb
insb
ret
sub
cmc
xchg
jnp
fsqrt
pop
mov
mov
test
dec
in
inc
rorb
cmp
mov
push
cmpsb
add
rolb
loope
aaa
stos
popf
add
push
xor
sub
mov
sub
sahf
cmp
sbb
mov
insb
cwtl
fs
xchg
popa
out
push
lds
aam
push
dec
lahf
aaa
or
jecxz
push
lahf
add
sbb
loopne
push
sbb
in
mov
insb
jns
mov
cltd
mov
cwtl
mov
mov
rcrb
xchg
ret
add
jb
notb
pusha
call
dec
mov
jns
sbb
jo
scas
mov
test
lret
pop
daa
stc
scas
jl
add
push
sub
out
adc
mov
stos
dec
xor
and
jle
ss
mov
sbb
xchg
int
imul
mov
stos
pop
mov
inc
repz
cli
mov
mov
aam
jne
repz
or
ja
pusha
jno
ja
xchg
test
xor
mov
mov
mov
jbe
stc
mov
ret
fnstcw
inc
push
shll
pushf
cmp
jp
pop
cmpsb
and
cld
lret
xchg
inc
xlat
pushf
mov
test
mov
add
ljmp
push
popf
sub
addr16
addr16
adc
mov
push
push
jp
stos
jmp
ret
rolb
aaa
jge
mov
aaa
int
addr16
cmp
fiaddl
adc
push
cltd
addb
mov
push
xchg
cmpsl
pop
xor
fwait
xchg
cmpsb
xor
data16
pushl
pop
lret
inc
loop
cwtl
dec
mov
inc
sub
mov
xchg
addb
pop
xor
aad
mov
mov
xor
pushf
inc
xchg
xchg
stos
xor
mov
outsb
cltd
cmp
ficompl
roll
ret
jbe
sahf
mov
jb
adc
movsb
push
sarb
fimull
test
pop
jno
lahf
xor
inc
and
or
mov
and
jmp
shlb
ljmp
cltd
int3
mov
xlat
pop
popf
adc
jmp
push
pop
shrb
push
jecxz
mov
pop
daa
in
and
xchg
add
out
or
aaa
shll
and
adc
adc
mov
cmp
stos
mov
jnp
xor
shl
cmp
pop
rclb
lods
loopne
int3
cmp
jbe
add
sub
mov
xchg
stos
or
xor
sbb
inc
add
push
mov
inc
pop
ficoml
sub
xor
mov
push
pop
sub
aaa
inc
jae
imul
mov
in
lret
adc
cld
sbb
cmpsb
cmp
fstpt
mov
push
cwtl
pop
cltd
enter
or
jg
sub
cmp
jge
aaa
xor
sbb
or
in
mov
fs
pop
xor
pushf
aas
xor
inc
inc
and
push
sbb
punpckhbw
popa
push
pusha
push
movl
mov
pushl
push
lea
jmp
sbb
shl
mov
scas
add
out
push
jmp
cmp
push
adc
add
mov
lret
dec
adc
lods
js
push
inc
mov
adc
jecxz
shrl
jge
into
jle
mov
into
lret
sahf
rcll
sbb
adc
mov
jl
mov
gs
insb
ss
dec
lcall
aaa
sbb
lea
cmc
dec
sbb
inc
adc
push
dec
dec
cwtl
loope
jb
cltd
jbe
dec
mov
mov
addr16
cltd
dec
lods
les
lods
into
cmpsl
inc
mov
in
sub
xor
mov
rolb
lock
push
aas
insb
aas
push
xor
mov
dec
push
imul
adc
sub
mov
insl
mov
in
loope
jno
test
lods
mov
cmp
xor
mulps
mov
push
dec
jp
mov
mov
adc
fisubl
stc
testl
in
and
lods
jae
mov
int
sbb
les
push
and
insl
dec
dec
loope
je
aas
out
inc
cmpsl
mov
or
xchg
and
push
xchg
movsl
mov
pop
or
in
dec
jmp
mov
es
sub
push
xor
xchg
int3
dec
lret
jnp
push
cmp
pop
mov
xchg
xor
add
or
fwait
cld
xchg
popf
xchg
jae
xor
sbbl
jns
push
mov
lahf
mov
inc
sbb
adc
loopne
cmp
push
adc
out
fldenv
jg
lock
jle
and
mov
lock
inc
sub
je
xor
repnz
jmp
mov
rorb
out
daa
out
out
dec
les
or
sbb
les
or
movsb
xor
and
out
popf
flds
out
mov
call
pop
pop
das
mov
or
imulb
push
mov
jns
movsb
jg
sahf
adc
add
jno
fidivrl
mov
sbbl
push
mov
outsl
fwait
ret
rcl
push
mov
out
outsl
aas
add
add
shlb
sbb
push
pusha
ror
mov
das
mov
outsl
xor
or
dec
aad
and
dec
sub
pushf
cmp
jnp
std
push
les
push
cmc
or
jmp
movl
push
pushf
call
jmp
sbb
mov
adc
xchg
into
jbe
lods
inc
cli
daa
or
call
je
inc
cmc
out
jnp
push
xchg
pop
xor
add
movsb
das
add
pusha
fwait
orl
dec
lock
rcrl
call
pop
popf
mov
gs
push
pop
clc
inc
nop
xchg
inc
rcll
lods
add
subb
jnp
pop
addl
jo
xor
push
out
xor
xor
mov
lods
jae
mov
inc
add
lret
sub
inc
add
stc
push
jns
push
decl
xchg
hlt
je
jmp
xor
scas
out
call
dec
lds
push
mov
sub
clc
scas
repnz
mov
cmpsl
jbe
je
repz
inc
dec
cmp
xor
cs
outsb
nop
and
xor
loopne
jns
jno
mov
mov
stos
xor
loopne
call
mov
push
dec
xor
xchg
adc
negl
pushf
cmp
sbb
pusha
movb
movl
pusha
pushf
movb
lea
jmp
mov
add
sbb
fdivs
leave
jp
das
mov
fisubs
or
scas
xchg
in
push
jb
frstor
sub
mov
sbb
mov
mov
in
movb
in
inc
add
add
mov
das
js
js,pn
in
stos
rorb
filds
sbb
into
pop
lods
andl
push
ljmp
enter
sbb
push
mov
xor
gs
push
cld
sbb
out
fcmove
int3
mov
sub
es
ret
outsl
jecxz
sar
mov
dec
aad
outsl
gs
cld
pop
aas
dec
mov
sub
int3
repz
daa
and
aam
adc
xchg
stos
fiadds
mov
mov
out
push
aam
mov
xchg
lods
cld
dec
jbe
rcl
pop
mov
xchg
dec
jo
push
or
mov
xor
aad
mov
cmp
into
sahf
xchg
idivb
or
shr
push
xchg
ret
call
xor
xor
dec
and
sbb
jecxz
fpatan
sbb
lea
mov
or
sarl
inc
jecxz
test
daa
push
pushf
pop
mov
bound
out
stc
pusha
dec
inc
outsb
inc
dec
arpl
adc
stos
pop
data16
adc
cmpsl
mov
sub
mov
scas
mov
add
xchg
pop
sub
add
das
pop
sahf
mov
repz
mov
mov
mov
mov
mov
shr
test
lods
dec
fsubs
daa
jecxz
mov
movsb
cli
clc
dec
ja
insb
popf
mov
adc
mov
arpl
adc
icebp
sbb
mov
lock
dec
xor
xlat
outsl
xchg
int
and
push
setge
xchg
cs
aad
test
push
cwtl
in
leave
xlat
sub
push
and
sub
into
rcrl
bound
aaa
pop
iret
imul
xchg
ret
es
xchg
push
mov
cmp
loopne
or
movaps
jb
mov
mov
add
mov
mulb
stc
pop
dec
arpl
lods
xor
stos
inc
jae,pt
lods
xchg
scas
ds
and
push
lea
cli
imul
jl
inc
mov
xor
add
gs
scas
mov
cld
xchg
xchg
scas
in
or
inc
add
lcall
je
cli
ret
or
orb
mov
and
sahf
pop
mov
test
fsubs
or
lahf
xorb
in
pop
push
insl
test
lock
pop
pushf
mov
rcr
mov
imul
loop
clc
adc
mov
push
xchg
push
pop
inc
or
out
jge
in
inc
test
and
cltd
in
mov
aam
pop
mov
xor
rcpps
addr16
mov
dec
add
daa
jmp
loop
inc
lahf
pop
push
fistps
sub
dec
mov
sbb
cmp
sub
int
mov
cmp
pusha
mov
icebp
pop
and
xchg
jae
dec
xchg
inc
movsb
loope
xor
lods
add
and
clc
mov
sub
stos
or
pushf
test
pop
hlt
movsb
test
lahf
out
cmpsl
dec
mov
sub
arpl
inc
xchg
xor
sti
sbb
pop
push
movl
pusha
pushf
pushf
pushf
lea
jmp
add
jmp
jmp
jmp
jmp
dec
bt
mov
movw
stc
sub
cmp
cmp
sub
bt
test
pushl
push
mov
test
pushl
mov
jmp
add
sbb
sbb
rol
add
stc
xor
btc
add
movb
bswap
not
cmp
movzbl
sub
bt
ror
ror
or
sbb
xor
rdtsc
shld
mov
daa
lea
or
mov
xor
pushf
daa
lea
cmp
shr
mov
or
stc
btc
shr
shr
ror
add
mov
mov
movb
shr
jmp
sub
aam
jg
notb
add
xor
cli
xor
popa
fimull
xor
cmp
ss
test
jne
loopne
hlt
xchg
xor
sti
test
inc
xor
pop
imul
nop
push
mov
imul
push
jbe
lcall
xchg
xchg
xchg
das
xchg
dec
aas
cmp
xor
sbb
add
movl
push
push
push
pushf
movl
pushl
pusha
lea
jmp
mov
cli
jnp
mov
loopne
cltd
aas
lods
jbe
or
ljmp
and
or
clc
add
arpl
imul
pop
shrl
xor
xchg
cwtl
xchg
push
pop
fcomi
mov
xor
mov
jae
jle
cmpsb
mov
shlb
rorb
fcmovbe
loopne
pushf
mov
jp
jns
xor
ret
jmp
xchg
jo
jecxz
into
rorb
push
xor
pushl
movl
jmp
jmp
pushf
pusha
pushl
movl
pushf
movl
mov
pushf
pushf
push
lea
jmp
pusha
movl
pushl
movb
lea
jmp
cld
cmp
adc
inc
and
andb
jbe
sub
xchg
je
in
mov
mov
ljmp
mov
sub
imul
add
clc
test
enter
jle
dec
fdivrs
mov
bound
mov
test
pushf
xor
inc
cld
mov
es
rcll
xchg
outsb
mov
je
insl
jl
ss
fstp
mov
mov
fisubs
push
fildl
lahf
jbe
xor
sti
stc
mov
push
pop
xchg
sub
inc
loopne
fcoml
fcoms
push
cwtl
sbb
movsl
adc
add
jle
jl
rcll
in
push
ljmp
iret
outsl
movsb
insb
out
outsl
out
or
ds
lods
mov
mov
loope
in
arpl
lea
test
jae
mov
mov
mov
nop
sbbb
mov
jg
sub
cmp
inc
clc
push
inc
mov
test
leave
test
pop
inc
imul
pop
and
pop
mov
stos
xorl
es
call
xor
xor
push
xchg
push
imul
addr16
pop
jbe
push
lods
xchg
adc
lcall
push
lods
or
add
test
xor
lret
out
pop
int3
or
or
das
daa
sahf
mov
pop
adc
cmp
pop
xor
push
add
mov
pop
pop
lret
jne
int3
pop
jb
adc
lock
jmp
loopne
sub
into
ljmp
lods
outsl
push
mov
imul
push
out
lcall
mov
inc
nop
mov
xor
scas
lret
imul
dec
mov
ds
imul
gs
xchg
call
pop
pop
cmp
mov
mov
cs
test
add
and
cltd
in
pop
cld
out
scas
jg
aad
pushf
xor
or
pop
int
cli
pop
push
add
lahf
in
inc
rcrl
xor
cmc
mov
pushl
adc
mov
sub
jb
xor
pop
int
jmp
add
mov
das
or
inc
push
xor
insl
inc
sbb
and
and
cld
ss
or
mov
inc
shrb
scas
and
xchg
dec
mov
mov
xor
dec
daa
pushf
call
call
pushl
mov
movl
pusha
mov
lea
jmp
pushf
cmp
bt
shr
push
pushl
mov
lea
jmp
lea
jb
bt
clc
push
cmp
sub
test
movb
pushf
cmp
shl
pushf
call
mov
loopne
and
std
pop
cmp
mov
push
mov
fmul
xchg
fwait
or
lea
cli
mov
pusha
add
mov
cmc
mov
pop
fs
pop
mov
mov
and
adc
add
or
notb
movb
xor
push
loope
adc
imul
mov
or
pop
jle
rcrb
push
mov
lods
aam
in
dec
pop
sarb
mov
loope
outsb
jne
pop
lret
and
out
and
outsl
icebp
inc
ljmp
sbb
xchg
mov
loop
and
jmp
mov
mov
jmp
pcmpgtb
rcrb
test
int3
xchg
and
pop
ret
call
ficomps
std
xorl
xor
cmp
aad
jne
movsb
dec
in
lret
or
cmpsl
xchg
push
and
pushf
xor
xor
jmp
mov
setl
add
not
setge
mov
xchg
movb
setb
push
setns
movb
call
push
pushl
mov
movl
pusha
movl
push
pushf
push
lea
jmp
cmp
mov
and
test
mov
sti
mov
add
pop
lret
mov
mov
xchg
sub
ja
xor
pop
dec
xor
inc
pop
jp
push
jge
jo
lret
shrb
stos
out
xor
inc
mov
ss
dec
sbb
xor
pusha
lcall
xlat
lock
adc
es
mov
dec
movsl
rorl
movsb
in
out
js
cltd
sti
fnstsw
xchg
xor
rcrl
insb
mov
push
aaa
xchg
out
xchg
mov
jbe
pop
inc
lock
mov
arpl
inc
or
mov
js
fisttpl
xchg
cmp
repz
sub
js
add
mov
loopw
add
sti
jb
fstps
xchg
xor
push
adc
andl
mov
loopne
pushf
das
scas
xor
es
imul
mov
fldenv
pop
sub
lahf
xor
aam
out
mov
adc
jno
jle
data16
jb
cld
sar
pop
or
data16
sbb
cmp
inc
pusha
rcrl
jecxz
enter
testb
in
push
push
xchg
subl
push
bound
add
hlt
out
fwait
ror
iret
push
xchg
cwtl
arpl
sbb
or
jno
cld
pop
push
test
fcomp
flds
fwait
hlt
cmp
aam
out
cmp
icebp
xor
aam
xor
cmp
imul
sub
dec
or
adc
pop
sti
dec
sub
std
ret
xor
cmp
sub
dec
pop
sbb
aas
pop
rcr
das
negl
jns
lods
adc
movsl
adc
testl
cmpsl
out
sub
jle
jno
xor
mov
jnp
sbb
scas
ss
xchg
ret
add
fdivr
out
cmpsl
add
fnstcw
in
test
xchg
jmp
jmp
jae
pop
add
xorl
push
dec
push
es
lock
mov
cmp
in
adc
and
js
xor
inc
jmp
xlat
cld
stc
sbb
xorl
xchg
mov
xor
jae
inc
out
xor
int
mov
cs
mov
call
and
sub
aam
test
mov
bt
shr
cmp
add
push
cmc
and
pusha
mov
test
mov
push
bt
shr
cmc
movw
bt
cmp
mov
push
movb
aad
movsbw
mov
bt
pushf
shr
stc
bt
mov
rcl
rcr
add
test
lea
rol
aaa
add
or
jmp
out
lret
ret
enter
shr
inc
lret
mov
inc
push
sbb
je
cmp
loop
std
cli
sbb
mov
fsubrl
xchg
fisubl
dec
xchg
test
enter
lahf
add
push
xor
cli
sbb
das
jecxz
imul
cli
outsb
das
push
mov
sub
data16
push
mov
or
xchg
insb
xchg
in
push
lret
mov
mov
daa
push
stos
add
jecxz
sahf
mov
xlat
add
test
or
ficompl
adc
ja
loope
jge
sub
jns
dec
jbe
aam
xor
outsl
ret
std
fcomp
fildll
fninit
lret
pushf
sub
cmp
sub
arpl
mov
xor
pushf
pusha
movl
call
movw
lea
jge
mov
inc
mov
pushf
pusha
pushl
inc
pushf
cmp
pushf
mov
pushf
call
movb
movl
call
call
jmp
add
pushf
bts
add
neg
setnp
and
bswap
xor
pushl
shld
bsr
add
shrd
jmp
movl
push
lea
jmp
call
movl
mov
lea
jmp
pushf
movl
pushf
movb
push
pushf
lea
jmp
movl
pushf
jmp
sub
les
mov
xor
cmpsl
popf
mov
in
pop
jno
inc
jg
add
dec
xchg
dec
hlt
rorl
mov
cmp
jmp
lret
js
push
xor
lods
mov
xor
jne
bound
push
addr16
inc
jmp
in
mov
rcll
xchg
adc
fnstcw
jbe
enter
inc
inc
sub
inc
xchg
sub
sbb
cmp
mov
pusha
jnp
sub
hlt
mov
out
js
icebp
ja
dec
mov
inc
je
sub
or
dec
add
xchg
dec
or
enter
mov
mov
imul
mov
jl
shrb
shr
dec
push
xchg
cltd
mov
mov
cmpsb
fstps
mov
out
sbb
popf
xchg
das
push
sub
sub
clc
or
ficoms
xor
sbb
loop
push
xor
notb
sub
mov
inc
adc
xorl
movsl
or
leave
insl
js
rorl
dec
insb
push
pop
cmpsl
ret
sub
jl
cltd
cmp
insl
lcall
sub
mov
cld
mov
icebp
mov
mov
ret
icebp
sarl
std
xchg
lret
inc
and
xchg
and
dec
add
ds
dec
imul
mov
pop
ljmp
sbb
dec
test
popf
push
jg
in
xchg
repz
sbb
xchg
outsb
cltd
fs
inc
mov
push
xchg
ret
xchg
icebp
and
mov
jecxz
movsb
scas
mov
sbb
adc
inc
and
test
daa
mov
push
mov
sub
int3
ss
fs
repnz
xor
lret
pop
clc
movb
lods
sbb
out
sub
scas
repz
mov
xchg
xor
test
cmp
mov
pushl
mov
iret
lea
mov
out
lcall
cmp
jecxz
xchg
mov
icebp
inc
push
push
clc
jne
or
lock
loope
into
jg
vpsraw
pushf
sub
mov
dec
pxor
adc
dec
bound
fidivl
pushf
sub
or
add
ja
lret
outsb
mov
push
push
push
in
je
cwtl
pop
test
jp
cmp
cmp
jo
xor
aad
mov
add
xchg
xor
push
jecxz
add
test
test
loopne
arpl
ss
pusha
cmp
gs
je
fwait
out
repnz
add
add
mov
roll
leave
fst
pop
aaa
and
or
ljmp
pop
lret
int3
frstor
pusha
sbb
cld
icebp
dec
into
xchg
push
jnp
stos
xchg
mov
pop
fstl
mov
push
stos
xchg
pop
cmp
fnstsw
push
push
lds
xchg
mov
sub
dec
jmp
push
dec
adc
divb
dec
xor
mov
inc
or
and
fdecstp
sub
das
inc
pop
add
leave
mov
hlt
jl
or
mov
outsb
adc
fidivs
test
or
sbb
gs
sub
dec
pushw
insl
pop
jne
mov
push
mov
sbb
dec
push
xor
push
jecxz
les
insb
daa
xor
rcll
xor
shll
and
and
xchg
movb
add
fs
jmp
cmp
push
js
mov
seto
inc
jmp
add
test
or
cmp
xlat
movsb
addr16
adc
inc
cmpb
push
mov
mov
inc
cmp
lock
arpl
xchg
add
and
jp
xor
or
push
subl
daa
or
movsb
xchg
pop
cltd
fisubrl
pop
xor
add
aas
hlt
push
xor
not
and
bsf
mov
xor
call
adc
mov
repz
pop
xchg
push
ljmp
xor
push
push
sbb
sbb
adc
push
cmp
and
xchg
add
syscall
adc
cwtl
jl
repz
and
clc
movsb
loopw
mov
mov
test
and
lods
xchg
in
mov
stos
lret
enter
ds
ss
pop
push
cmp
or
std
jg
cmp
jg
mov
incl
inc
cmpsb
inc
mov
or
mov
add
inc
mov
adc
mov
mov
inc
dec
adc
push
jae
push
out
fnsave
pop
stos
jle
imul
sub
fidivrs
outsb
cwtl
aam
call
std
or
cmp
add
cwtl
aam
mov
xchg
ljmp
lret
dec
daa
test
jns
ja
arpl
mov
fmulp
hlt
lcall
test
xchg
roll
mov
mov
jg
push
pop
mov
in
jne
adc
jae
or
and
pop
dec
mov
pusha
push
xor
repnz
mov
ja
mov
sub
xlat
in
out
mov
divb
cmp
mov
cmp
fnstsw
lahf
xchg
jae
popf
gs
ret
cmpsb
test
jns
mov
inc
out
int
fmuls
inc
sub
inc
stc
pop
adc
je
push
int
int
xor
dec
in
dec
mov
or
scas
popa
dec
sbb
pop
mov
test
fcomip
adc
mov
jne
dec
jl
jne
cld
stos
and
sub
mov
sbbl
inc
xchg
ror
aas
int
or
pop
sub
xor
std
enter
mov
mov
fs
test
aad
fs
ja
imul
xchg
arpl
or
push
sti
push
fistpll
je
dec
leave
inc
inc
xor
push
push
push
decl
mov
sub
inc
pop
add
pushf
and
cli
xchg
mov
mov
or
loope
arpl
push
dec
out
xor
lcall
ret
and
lock
les
xchg
jno
xor
mov
inc
shlb
cld
xchg
cmc
push
stc
outsl
push
dec
pop
xchg
push
cwtl
xchg
pop
lret
xor
sub
arpl
arpl
cmp
dec
fdivrl
ss
push
adc
xor
arpl
pop
cwtl
pop
pop
insb
leave
stc
clc
sbb
in
fcmovnbe
sbb
xchg
jno
fdiv
dec
sbb
pop
das
mov
mov
or
nop
insb
lret
lret
mov
pushf
popa
mov
mov
scas
mov
out
nop
adc
xor
pop
lods
sbb
pop
ss
or
dec
inc
or
pop
mov
aam
mov
push
xor
mov
adc
mov
sbb
mov
lea
mov
mov
and
xchg
fcompl
rolb
pop
mov
daa
inc
sti
int
frstor
mov
inc
outsb
adc
pop
cmp
cwtl
testb
pop
push
push
popf
cli
iret
fxtract
pop
sbb
pop
mov
lock
ds
ljmp
pop
ja
push
pop
lahf
push
xchg
aas
xchg
lcall
lods
pop
inc
or
mov
std
dec
stos
mov
mov
loope
cmpsb
mov
testb
push
mov
xor
popf
mov
push
fsub
ja
mov
cmp
ss
adc
push
test
mov
jnp
cld
xchg
mov
cmp
jg
fnstsw
push
dec
cmp
push
sbb
not
repnz
mov
pop
cmp
cltd
cmp
mov
mov
push
inc
xor
icebp
js
sbb
pop
cmc
xorb
mov
xlat
sbb
mov
repnz
out
mov
push
inc
ljmp
rorb
das
xchg
fisttpll
xchg
out
ss
outsl
lcall
sbb
outsl
lahf
sti
pop
xor
xchg
xchg
pop
loop
data16
and
lret
daa
mov
push
pop
xorl
fsubs
popa
xchg
fwait
sbb
sub
sbb
mov
lds
cmp
mov
inc
scas
neg
mov
push
test
add
testb
push
imul
shrb
repz
and
add
inc
rcrb
fs
mov
or
jp
scas
not
jge
test
or
dec
dec
adc
sbb
data16
fdivrl
adc
aad
mov
aad
mov
subl
jle
dec
sbb
pop
mov
sub
out
push
mov
push
bound
mov
cltd
and
repz
xchg
sub
hlt
movsl
mov
lds
shll
jnp
fists
out
negl
dec
movsl
aas
notl
xchg
mov
sbb
xchg
add
dec
adc
adc
imul
mov
ja
jb
fcmovnb
xor
js
movsl
sti
sti
mov
stc
int3
in
cmp
imul
inc
ljmp
mov
push
icebp
xlat
mov
pop
pop
mov
xor
xor
cmpsb
add
sarl
and
movsb
xchg
mov
pusha
xor
push
ss
sbb
push
xor
mov
ficomps
cmp
cmc
in
or
cmp
mov
xor
pushf
and
fsubp
cmpsb
flds
jge
pop
and
popf
nop
and
cmp
out
xor
pushl
call
and
shrd
neg
shl
xadd
mov
stc
shld
pushf
call
call
call
pushf
jmp
pusha
push
lea
jno
pushf
movl
push
movb
call
shr
sbb
sub
and
mov
pushl
bswap
add
sub
mov
and
test
clc
pusha
shr
call
lea
jle
and
or
mov
not
pop
not
test
pushf
bsf
mov
add
mov
shl
mov
cmp
cmp
cmc
bt
add
push
pushl
ret
and
dec
cmp
xchg
push
stos
xchg
jp
cmp
adcl
sti
jle
sub
dec
jae
fucomip
and
sub
ficompl
lahf
outsl
push
cmp
push
rol
mov
pop
cmp
icebp
shrl
jp
mov
imul
stc
fldt
outsl
stos
xorl
cmp
in
lea
jae
imul
lret
xchg
lds
mov
repz
popf
mov
push
mov
nop
and
pop
orb
int3
loop
divl
dec
fsubrl
xlat
sbb
les
clc
lods
in
je
sbb
loop
inc
stos
stos
adcl
lcall
out
lahf
cs
xchg
cmp
mov
inc
iret
stos
das
mov
out
lret
jl
jne
out
and
ljmp
jbe
adc
and
shlb
les
in
push
add
in
ret
lea
mov
iret
pop
sub
loope
cmp
jle
bound
sub
jo
cmpsb
lahf
out
mov
lock
mov
jb
push
mov
inc
jns
mov
cmpsl
test
clc
push
dec
daa
xchg
push
sbb
cmp
in
xchg
adc
daa
filds
aaa
push
loope
pushf
imul
pop
mov
sarb
jo
and
cmp
dec
add
pop
adc
cli
or
scas
fsubs
test
xor
push
ss
jbe
mov
pop
mov
jl
jo
jne
lret
imul
pop
and
sub
sub
sahf
test
out
or
and
out
jae
jnp
lds
ja
aad
loop
es
popf
dec
and
and
pop
testb
ss
subb
inc
icebp
iret
or
adc
out
inc
mov
sbb
xchg
mov
or
and
xchg
push
lock
mov
mov
iret
sub
fiadds
inc
push
sub
add
push
inc
aaa
sub
pop
push
xchg
and
xchg
dec
mov
addr16
sub
ljmp
leave
jle
or
shll
mov
stc
ret
mov
lods
test
shlb
and
mov
pop
jl
dec
arpl
pop
xor
sbb
cltd
mov
push
fnstenv
push
aam
jl
adc
lahf
and
loop
loope
shll
fsubp
push
mov
aaa
and
or
xor
andl
or
lea
lods
shll
test
pop
inc
test
ret
pop
scas
mov
push
xor
scas
test
mov
int3
xchg
push
and
push
sub
clc
mov
add
pop
lret
sbb
insb
stc
and
or
xor
xor
fildl
lods
mov
dec
adc
sbb
imul
sbb
pop
jmp
jnp
ja
mov
inc
das
lahf
andl
xlat
mov
jg
js
div
pop
fldenv
cmp
sbb
mov
iret
or
add
std
dec
rol
std
xchg
std
add
stos
jbe
pop
mov
or
ljmp
xor
cmp
out
mov
inc
in
xchg
xchg
inc
mov
sbb
xor
rcrl
jg
mov
sbb
and
sub
std
jle
insl
iret
sbb
jl
ljmp
rcrb
jnp
pop
mov
out
add
pop
arpl
mov
cld
fmul
sahf
sub
mov
xor
sbb
lret
nop
movsb
adc
or
ds
ret
movsl
ja
jecxz
movsl
leave
ja
leave
lods
jmp
test
cwtl
lds
xlat
in
add
xlat
and
jb
je
adc
out
loop
jns
icebp
jle
xchg
sub
cmpb
call
and
out
rcl
xor
or
dec
out
push
dec
cmp
or
mov
dec
mov
mov
xchg
pushf
sbb
dec
cmc
mov
jmp
outsl
test
xchg
sbb
mov
jge
adc
mov
stc
mov
push
outsb
mov
les
insl
and
das
movq
cmp
adc
dec
fnstcw
mov
sbb
jmp
push
ss
xor
jge
mov
popf
ds
sbb
push
pop
mov
imul
sti
inc
and
mov
push
insl
into
pop
cmp
push
xchg
stos
fcompl
fidivs
pop
adc
andl
pop
lahf
cmp
outsb
ret
cwtl
fnstenv
test
rolb
or
jb
popa
or
test
rolb
mov
dec
xchg
xchg
stc
aas
scas
mov
pusha
cmp
sub
loope
mov
xor
rcr
xor
adc
stos
sar
mov
fldl
lret
je
and
xor
pop
mov
push
mov
lds
mov
xchg
mov
push
xor
xchg
lahf
sar
js
xchg
in
or
push
cmp
jle
mov
push
shl
int3
mov
clc
add
imul
dec
ja
lea
mov
fdivl
fldl
sub
leave
add
adc
ret
jp
je
jns
add
push
dec
and
adc
mov
add
pop
add
pop
xchg
push
mov
outsb
xchg
fs
or
pushf
sbb
inc
pushl
mov
fcoms
xor
push
call
sbb
inc
shl
pop
xchg
jg
jg
aad
das
aaa
mov
add
lods
out
add
mov
test
inc
or
test
mov
xor
sbbl
insl
in
leave
xchg
jmp
sbb
and
mov
pop
leave
jo
lods
popa
imul
shll
mov
repz
iret
cmp
mov
call
push
sbb
movsl
and
add
lcall
mov
pop
fbstp
push
jl
push
imul
cs
xor
das
and
mov
lea
test
cmpsb
fistl
ljmp
jg
clc
xor
stos
mov
es
repz
ds
std
fidivrs
fnstenv
sub
fdivrl
je,pt
pop
sub
and
pop
adc
inc
mov
mov
jnp
mov
pop
add
jne
xchg
and
mov
out
popa
out
data16
test
xchg
in
sti
add
lods
test
lds
jmp
fstps
sarl
shrl
sbb
sub
scas
sbb
aas
cmp
rolb
test
daa
int3
repnz
mov
mov
call
sub
mov
jb
in
out
ds
arpl
es
inc
jg
lea
aaa
lock
imulb
push
jge
inc
xchg
subw
lahf
sub
mov
adc
jl
xor
mov
xor
mov
repz
cltd
xchg
and
mov
cmp
mov
xor
sahf
scas
or
in
push
or
mov
cltd
mov
jg
xchg
icebp
jb
popf
inc
xchg
cmp
sub
jno
mov
push
push
push
stos
js
test
xor
iret
cmp
lret
sub
dec
ljmp
push
dec
mov
pushf
pop
mov
insb
insb
cmp
cmp
or
sbb
pop
sbb
out
shr
push
clc
call
and
inc
xchg
mov
sub
sbb
pop
mov
icebp
sbb
fsubrl
pop
cmp
mov
and
jbe
insb
dec
stos
jne
jecxz
sbb
jne
icebp
imul
or
cmp
cmpsb
repnz
push
mov
inc
into
ds
pop
adc
outsb
aam
pop
gs
jbe
push
movsb
and
and
clc
scas
and
sti
sti
dec
popa
ficompl
fwait
out
lods
idivb
outsb
sti
es
repz
jbe
sub
std
imul
shlb
loope
imul
and
mov
movsl
movl
push
notl
xor
test
mov
cmp
ljmp
negl
ljmp
and
loopne
test
mov
xchg
push
in
mov
inc
sbb
test
out
fwait
mov
or
jecxz
pushf
adc
into
push
loop
lods
les
and
or
adc
and
sub
call
pushl
pop
pop
in
push
mov
fcompl
jae
fldl
push
loop
aam
outsl
mov
imul
inc
xor
test
movsl
outsl
xor
fsubr
fstp
lock
sub
cli
adc
xchg
and
inc
fwait
mov
jne
xor
inc
push
lods
adc
lret
jno
out
incb
out
add
push
dec
jp
pusha
pushl
movl
mov
pushf
lea
jmp
xchg
mov
sub
xor
add
es
mov
push
mov
add
sbb
lock
movsl
xchg
inc
nop
dec
push
int
xlat
out
lds
pop
out
xor
sub
das
cwtl
and
xor
sub
mov
and
dec
rcrl
and
dec
and
adc
icebp
icebp
mov
cmp
add
add
out
adc
je
push
pop
and
int
pop
call
mov
data16
sbb
xor
pop
pop
or
push
cmp
movsl
outsb
push
loopne
mov
or
mov
outsl
int
mov
pop
or
xor
fwait
ljmp
or
fdivrl
js
sub
daa
daa
mov
iret
ljmp
movsl
sbb
mov
xchg
sbb
xor
sbbl
rolb
lock
push
add
push
rcll
jns
outsl
and
add
pop
shlb
or
xlat
inc
pusha
fldcw
add
pop
or
cwtl
imulb
jns
ret
xchg
jns
cmp
sub
add
mov
movsl
fildll
pop
stc
mov
shlb
psadbw
or
inc
cmp
push
test
push
cmpsl
push
insl
clc
test
or
jns
adc
dec
lods
push
xor
sbb
jmp
push
loopne
mov
loop
push
out
cmp
cmc
cmp
xchg
shlb
inc
mul
es
cmp
sub
mov
xor
les
sarb
cmp
xor
push
and
cmp
test
cmp
mov
add
jle
test
call
jmp
in
lods
std
xchg
xchg
pop
test
mov
and
movsl
push
push
xorb
adc
fistpl
or
mov
mov
xchg
ja
mov
into
and
push
mov
cmp
inc
inc
or
aaa
cmp
dec
icebp
jae
jge
jecxz
out
rcll
mov
mov
test
mov
ds
xchg
push
pop
pushf
pop
lods
ret
int3
js
inc
and
nop
cmp
loope
and
inc
cld
adc
movsl
push
insb
ret
das
into
stc
cmp
scas
dec
mov
mov
dec
nop
or
inc
rorl
int3
dec
cmp
gs
jb
jl
orb
in
sub
icebp
and
mov
sbb
ficompl
popf
andb
cs
adc
adc
adc
xor
testb
and
aaa
inc
xlat
and
popf
sbb
andb
push
and
cli
movsl
xchg
dec
inc
or
in
loop
rcr
dec
lret
sbb
fisubl
mov
add
rcrl
enter
push
push
sbb
mov
adc
gs
mov
movl
movw
mov
movb
lea
jmp
jmp
call
call
rcr
or
mov
dec
movzbw
mov
stc
mov
test
shl
mov
pop
bswap
shl
adc
clc
clc
pop
xor
bswap
clc
movzwl
shl
cmc
add
bsf
lea
movzbw
movzbl
sar
call
adc
shlb
rcrb
scas
movsl
cltd
jns
push
cmpsb
and
ret
or
jae
test
add
cmp
xchg
int
sbb
andb
sub
push
popf
repnz
dec
inc
add
outsl
aas
mov
jge
test
sbb
inc
ficoms
mov
inc
fildl
inc
sub
xchg
push
repz
pop
adc
cmp
mov
rcll
cmc
idivb
out
mov
adc
mov
outsb
aad
cmpsl
mov
sub
dec
idiv
dec
xor
loopne
lock
add
mov
aam
std
xor
dec
imul
test
rolb
fcomps
or
sbbl
add
lds
std
gs
imul
sbb
int3
mov
pushf
psubsb
sbb
insb
push
xor
dec
sbb
jo
scas
lret
es
mov
mov
cld
pop
fs
jae
inc
sbb
cmp
inc
outsb
mov
jmp
and
pop
sar
ljmp
or
ss
xchg
pop
mov
sbb
or
lods
test
add
pop
xchg
sub
aad
loopne
mov
pop
stc
sar
lcall
test
cmpsb
mov
push
iret
push
gs
daa
orl
cmp
or
mov
cmp
frstor
aas
xor
scas
cmpsb
lea
lock
fwait
xorb
push
add
icebp
test
arpl
add
or
add
inc
mov
test
pop
shll
mov
inc
push
out
lea
in
lea
add
push
or
mov
mov
int3
cmc
shrl
das
scas
in
std
fwait
loope
dec
shr
sbb
enter
cmpsb
dec
sub
mov
sub
sarb
adc
inc
loope
cltd
push
cmc
inc
add
int
inc
mov
gs
xor
addr16
ljmp
push
mov
or
movsl
adc
jne
loopne
iret
sahf
mov
outsb
aad
cmpsb
repz
aam
into
rorl
dec
out
ror
stc
cmp
mov
sahf
mov
sahf
repz
inc
test
and
xchg
cli
nop
cmp
push
je
xchg
jecxz
das
jne
test
fdivrp
cmp
orb
pop
ret
outsb
cld
mov
sub
cltd
iret
in
es
in
cmp
dec
fadds
nop
insb
lret
cltd
dec
mov
cltd
xchg
adc
cmpsl
push
add
js
jns
lret
orl
jp
ss
fdivl
mov
loop
add
mov
lcall
out
lret
pop
xor
push
mov
fisubrl
pop
cmc
in
and
sti
xchg
xchg
jb
or
pop
adc
jl
sbb
lea
enter
cwtl
sub
out
pop
roll
mov
sub
fmull
fbstp
jle
ss
add
mov
push
shlb
clc
sub
or
and
enter
cmc
xchg
xor
icebp
sub
scas
daa
mov
flds
jmp
push
fists
pop
notb
pushl
cmpsl
jge
pop
xor
sub
scas
out
mov
push
push
sbb
jmp
imul
sub
pushf
setb
mov
out
loopne
stc
add
sub
push
gs
aad
fldcw
fdivrl
cmp
mov
mov
movl
adc
bound
sti
adc
pop
popl
push
sub
hlt
mov
and
mov
ret
in
or
and
pop
out
sub
loop
repnz
fisubl
jno
fisubs
fdivp
test
insl
dec
ret
adc
mov
jle
mov
ret
insl
lcall
and
dec
fdivrl
rorl
mull
lret
lret
mov
psllw
inc
mov
add
enter
sarb
adc
mov
scas
movsl
push
push
mov
sub
cs
cltd
push
lock
sbb
push
in
xchg
push
mov
add
push
lea
fsubrp
leave
sbb
repnz
dec
lods
mov
push
and
sbb
dec
hlt
insl
sbb
dec
sub
setge
sbb
and
ja
xchg
fstpl
cld
xor
stos
and
out
ja
push
loopne
and
lock
jp
ljmp
js
push
pop
xor
in
outsb
or
adc
js
loop
out
cli
adc
outsb
fs
subb
aad
shl
cmp
cmpb
jbe
sbb
dec
stos
jns
push
or
test
mov
insb
outsb
ret
mov
and
stos
jae
jp
xor
jns
aam
or
xor
dec
fldt
fwait
mov
or
xchg
into
xor
mov
or
jp
xor
jl
xchg
mov
movsb
cmc
dec
aad
xchg
and
lret
xchg
shrb
cs
xor
sub
outsb
jg
push
out
pop
bound
cmpsb
xor
cmpsl
inc
jb
std
jne
ss
fildl
or
pusha
pop
xor
popf
ljmp
adc
shrl
xchg
inc
loope
mov
cmc
xor
sahf
cmp
mov
mov
mov
lcall
or
or
in
inc
dec
lods
sbb
je
daa
jnp
pop
xor
xor
call
imul
pop
daa
dec
or
negb
lcall
scas
or
iret
popf
rorb
pop
cmp
daa
mov
mov
mov
and
fstl
mov
xchg
in
sub
sub
leave
and
nop
jo
mov
cmpsl
test
sbb
push
stos
in
mov
cmpsb
in
mov
jg
mov
fiadds
cs
pop
scas
lock
sbb
push
addr16
je
movsl
pop
gs
pop
pop
gs
and
bound
das
cmp
popa
bound
push
sarb
adc
lods
cltd
dec
aaa
les
fcompl
fists
stc
dec
jae
ljmp
push
inc
inc
call
js
jge
or
inc
scas
inc
pop
jno
repz
push
inc
xor
adc
daa
out
ja
sub
sub
aaa
cltd
push
outsb
or
cmp
sbb
popf
shl
std
adc
mov
add
or
jnp
ficomps
cmpsl
in
int
push
or
push
loop
rcll
sub
xor
mov
lea
mov
btc
xor
inc
btr
or
movsbw
bsf
lea
call
sete
movsbw
pushf
mov
setp
pusha
mov
bswap
call
push
movl
movb
lea
jmp
call
int3
call
dec
sub
sbbb
imul
data16
neg
aad
add
mov
sbb
dec
jge
fmull
jge
cmpsb
ljmp
jns
ljmp
outsb
idivb
inc
and
es
mov
pop
xchg
ja
xor
inc
and
and
and
outsl
mov
mov
mov
adc
adc
rcl
out
sub
into
dec
push
dec
outsl
icebp
in
dec
imul
mov
lods
aad
mov
adc
aam
loope
repnz
mov
lea
mov
ds
lods
inc
mov
pop
mov
mov
in
sbbb
push
es
inc
fsts
ljmp
inc
cmp
xlat
stc
into
and
cmc
mov
pusha
dec
xchg
test
push
cli
and
outsb
sbb
mov
cmp
xchg
jecxz
arpl
popa
xorb
ret
jp
icebp
mov
imul
aam
imul
or
ficomps
sbb
out
rolw
push
cmp
or
mov
lods
mov
lret
xor
mov
jb
jecxz
stos
jl
mov
inc
mov
icebp
xor
icebp
pusha
xchg
lds
jp
js
ret
les
movsb
js
cmpsl
mov
mov
lea
mov
inc
mov
cmpsb
and
push
and
adc
movd
push
add
add
scas
fdivrp
insb
call
sahf
mov
in
push
jp
mov
aad
hlt
mov
inc
sub
in
jo
cmp
mov
leave
and
or
jnp
dec
mov
pop
push
movsb
into
mov
xor
test
add
inc
cmp
icebp
or
fidivl
sub
icebp
add
aad
data16
xchg
pop
cmp
push
stos
je
in
arpl
xorb
imul
jno
test
xchg
xor
cs
jp
cwtl
test
and
adc
sub
dec
cld
inc
push
stos
ret
mov
daa
aas
test
push
mov
repnz
pusha
sub
lret
loopne
adc
aam
rclb
leave
xor
sub
push
or
pop
in
mov
es
je
mov
sbb
lods
out
jcxz
sub
bound
es
push
pop
gs
popa
cwtl
lds
ret
mov
inc
jg
jp
ret
mov
fxch
jb
stos
push
imul
popf
int3
mov
add
or
sti
xor
or
repz
pusha
jnp
or
fldenv
mov
movsl
dec
lods
jmp
pusha
cmpsl
xor
or
sbb
cmc
insl
push
out
insl
sbb
std
jle
imul
sub
or
into
adc
imul
push
inc
and
fisttpl
pop
push
lods
and
xchg
out
xor
pop
aad
test
and
popf
inc
mov
adc
fstpt
pop
dec
xchg
lods
dec
into
addr16
push
or
out
and
int
test
roll
ja
repnz
outsb
in
enter
xchg
repz
push
scas
repnz
ficomps
and
adc
push
push
push
in
dec
mov
hlt
jp
push
sub
sbb
sub
lahf
pop
popa
and
jge
repz
lret
pop
adc
xchg
in
loopne
imul
lcall
xchg
xchg
jle
pushf
sbb
pushf
add
mov
lods
test
cmpsl
mov
mov
xorb
add
inc
cli
pop
pushf
pushl
movl
pushf
push
lea
jmp
push
test
out
sbb
dec
js
push
lea
mov
mov
lock
fimull
mov
stos
sub
cmp
xor
jno
insb
xchg
sbb
rcrb
pushf
add
movb
cmp
add
jnp
test
out
dec
xor
movl
pusha
movl
mov
push
lea
jmp
enter
xchg
mov
cmp
andb
mov
div
pop
fbld
push
scas
in
xor
mov
lods
jne
stos
or
fnsave
imul
js
mov
in
xor
scas
inc
sbb
sti
les
push
rolb
dec
cmpsb
or
gs
jg
xchg
jne
ss
out
and
ljmp
shlb
shll
cmpsb
iret
sahf
sub
mov
jns
lock
xchg
mov
pop
fstps
add
call
add
inc
mov
in
fldt
sub
arpl
or
cmp
arpl
and
cmpsb
sbb
in
mov
jmp
jl
lea
fistpll
and
push
mov
sbbb
pop
test
sub
cs
mov
sbb
cs
sbbl
mov
cmp
imull
mov
mov
out
push
pop
pop
mov
and
mov
dec
inc
add
inc
push
pop
cmp
sbb
ja
xor
cmp
jbe
inc
pop
or
mov
in
jnp
sbb
aad
scas
sub
jns
fstps
jmp
scas
test
pop
pop
test
clc
test
adc
xor
in
mov
ja
out
icebp
dec
int
push
fs
sahf
mov
add
sub
lods
jae
in
out
mov
cmp
cli
sbb
imul
inc
arpl
push
sbb
add
dec
push
or
dec
push
and
xchg
jno
int3
pop
mov
out
pushf
call
lods
std
fcos
mov
inc
dec
xchg
adc
pushf
add
daa
push
sbb
inc
or
jmp
pop
loop
divl
dec
and
cltd
dec
cmpsl
pop
loope
xchg
push
xor
testl
outsl
add
push
addl
sub
sbb
arpl
ret
ljmp
nop
jne
imul
shrl
ja
xchg
mov
sub
inc
stos
ss
pushf
push
pushf
mov
iret
push
mov
inc
outsl
jg
out
mov
adc
cmpsb
lea
shl
mov
inc
mov
inc
or
cli
imul
sbb
mov
cmpsb
mov
call
mov
cmpl
inc
outsb
scas
lods
mov
xor
push
ret
cmp
fiaddl
inc
pop
dec
lea
xor
mov
sahf
ljmp
movsb
or
sub
pop
cmp
sti
sub
std
fdivrs
fcomp
popa
mov
loopne
jecxz
scas
dec
repnz
and
sub
jns
and
rol
jb
fbld
mov
lea
dec
add
sbb
stc
js
mov
notl
pop
jns
cli
les
jns
rorl
xlat
mov
insb
sub
movsl
int
mov
cmpsb
daa
ret
popf
sti
in
add
icebp
outsl
dec
stc
and
loop
mov
loope
adc
adcb
xchg
xor
mov
stc
dec
inc
or
add
add
xchg
clc
mov
pop
mov
push
insb
xor
lods
add
push
sahf
fstpl
imul
es
sti
int
mov
out
mov
adcb
and
sbb
lea
inc
pop
mov
add
push
aaa
cmp
xchg
fsubr
mov
push
lahf
fnstenv
jo
sbb
cmpsb
push
ds
mov
lcall
dec
sahf
mov
sbb
popf
out
cli
int3
sahf
aaa
xchg
jno
sti
pop
icebp
mov
shlb
dec
pushf
add
xchg
xchg
mov
movb
clc
pusha
movl
stc
clc
jmp
xor
scas
adc
push
daa
xchg
addr16
test
xchg
pop
insb
testb
dec
das
mov
rcrl
add
inc
and
mov
sub
and
push
loop
popl
movsb
imul
das
popa
jo
rol
mov
cmp
jmp
push
movl
pushf
push
lea
jmp
sahf
and
outsl
xchg
mov
xchg
push
xchg
movsb
mov
imul
xchg
dec
addb
pushf
push
int3
jb
aaa
add
ja
cld
push
sub
push
adc
push
push
xchg
dec
out
pushf
push
notb
push
es
addr16
ds
pop
xchg
lods
xor
xor
push
pushl
pop
pop
xchg
add
loop
pushf
add
push
add
scas
xchg
or
push
es
aad
cmp
cs
cmc
adc
pushf
add
iret
ljmp
adc
push
jae
xor
jmp
stc
pusha
mov
sub
pushf
cmp
mov
clc
cmp
mov
pushf
cmp
cmc
mov
movw
test
pushf
pushf
call
sub
outsl
cmp
mov
xchg
jp
mov
push
mov
mov
pushl
sahf
mov
repnz
add
fldl
iret
push
inc
xorl
lcall
es
xlat
pusha
mov
push
shlb
sub
insl
xchg
sbbb
inc
fists
mov
lret
mov
aas
cld
call
stos
fistpll
fcompl
sbb
inc
dec
inc
and
mov
sub
pop
xchg
mov
and
out
data16
push
andl
clc
xlat
adc
xchg
sbb
adcb
cmp
pop
add
mov
mov
jo
das
xor
hlt
push
xor
inc
dec
sub
aad
push
int
mov
roll
and
ficomps
jg
dec
adc
jl
fldcw
inc
movsl
push
jno
out
clc
fadd
pop
inc
xorl
hlt
das
dec
lahf
loope
inc
popa
sti
jmp
ret
adc
adc
mov
or
test
jno
pop
je
ret
mov
sub
insl
sub
xchg
xor
inc
call
pop
aas
push
sbb
dec
dec
dec
stos
inc
mov
mov
ret
es
pop
xchg
xor
iret
rolb
shufps
arpl
add
rorb
scas
sbb
pop
xor
movl
movb
pushf
push
pushl
lea
jmp
call
pushf
movl
jmp
movl
push
push
lea
jmp
push
push
lea
jmp
push
movl
pushf
pushf
lea
jmp
push
xor
add
sub
setae
fnsave
jae
mov
push
icebp
xor
dec
je
mov
adc
popf
mov
gs
add
add
call
nop
popa
jl
push
push
jecxz
ja
push
cmp
cmpsl
sbb
xor
adcb
xor
sub
ficomps
mov
jb
pushf
sahf
jne
nop
clc
je
dec
xchg
inc
jne
ror
inc
sahf
cmc
adc
xor
repnz
mov
and
jb
popa
xlat
scas
lret
clc
sbb
pushf
mov
inc
outsb
ljmp
add
iret
sub
popf
pop
loop
inc
adc
mov
and
adc
sti
push
ds
mov
in
shll
xor
mov
and
jo
cmpsb
sbbb
pop
push
repnz
push
xor
shlb
fisubrs
fistpll
xchg
loopne
sahf
daa
and
mov
dec
xchg
je
daa
xchg
jno
mov
dec
sub
popa
cmp
adc
cmc
ds
push
mov
xor
inc
cmpsl
or
xchg
movsb
or
add
std
add
int3
inc
mov
scas
jnp
and
xchg
jb
imul
fnsave
jo
push
arpl
mov
loope
mov
subb
outsb
fimuls
icebp
jge
xchg
das
fcmovbe
call
shll
xlat
hlt
out
jecxz
es
int3
pop
mov
test
dec
push
ss
jmp
xor
xchg
xor
in
mov
es
jl
jno
lock
sbb
mov
mov
xor
sub
add
popf
sbb
pop
clc
sti
fcompl
and
pusha
jno
inc
test
inc
jmp
ljmp
orb
cmp
push
pop
sbb
push
xor
std
pop
mov
dec
push
cld
xlat
add
outsl
jbe
lods
dec
xchg
inc
imul
out
push
xor
xchg
test
push
in
mov
notl
or
cld
bound
into
pop
mov
in
and
shrl
jb
sub
add
lods
std
pop
mov
xor
pop
sbb
push
das
inc
pop
cmp
je
sub
and
xor
xchg
and
clc
sub
jns
or
jp
xchg
out
or
in
xchg
pop
rcr
mov
insb
lret
jmp
mov
rorb
bound
lods
into
xchg
leave
sbb
outsb
mov
imul
clflush
mov
jb
aad
popf
jl
data16
jmp
jb
testb
inc
sbb
loope
sub
xchg
mov
dec
pop
hlt
add
mov
sbb
lock
xchg
xor
add
fwait
sbb
push
inc
adcb
jne
jecxz
pop
int3
insl
sarl
aam
mov
shll
cs
aas
fstps
leave
lret
pushf
cmp
mov
dec
jns
lods
fstpt
sbb
push
imul
sub
ja
nop
subb
movsl
fs
repnz
xchg
jno
daa
enter
sbb
lods
fucomp
cmp
mov
in
leave
addb
cmp
loop
inc
mov
xchg
and
gs
mov
sbb
jl
shlb
xor
add
mov
mov
in
pop
and
scas
fnstcw
dec
xor
or
aaa
lods
adc
vmovsldup
cmp
push
xlat
orb
sti
xchg
pop
jmp
push
pop
rorb
sbb
lret
jnp
inc
cld
push
xor
and
psubq
test
dec
jle
add
mov
cmp
mov
or
fucomp
add
or
into
gs
pop
push
fldl
sbb
and
js
add
scas
lret
fnstenv
cmpsl
mov
sub
inc
mov
mov
test
push
shll
pushf
dec
jmp
dec
cmp
call
jae
sub
sbb
add
xor
lahf
cli
fwait
adc
mov
loop,pn
notb
inc
push
mov
add
cmp
add
cmpsl
aad
cmc
pop
pop
iret
xor
xor
sbb
dec
addb
inc
mov
mov
stos
adc
xor
pusha
call
jmp
test
xchg
jae
add
add
push
xor
icebp
and
cmpsl
loop
pop
ljmp
inc
xor
mov
notl
mov
sahf
stc
mov
mov
pushf
ror
pop
adc
xor
clc
in
into
and
js
sub
lock
add
cli
sub
mov
sbb
bound
loope
idivb
dec
out
pop
and
add
data16
popf
mov
mov
mov
outsb
mov
or
mov
mov
sub
pop
ds
out
pop
aas
inc
test
mov
inc
in
mov
test
xor
loopne
xchg
ss
outsb
xor
rolb
or
sub
insl
aaa
push
mov
mov
popa
gs
out
int3
xor
add
stc
inc
xchg
lock
cmp
fldcw
sub
lahf
aam
sbb
xchg
xchg
scas
das
test
sub
dec
nop
inc
out
mov
lcall
push
push
xor
ja
cmp
fwait
idivl
inc
in
pushl
movl
pusha
pushf
call
push
jmp
push
push
pusha
mov
push
lea
jmp
xor
pusha
add
rcl
lea
setle
setne
movzbl
lahf
sub
cmp
or
mov
stc
pusha
movw
or
mov
imul
shrd
sub
jg
cmc
rol
movzbl
pushf
sub
cmp
add
adc
pushf
lea
cmp
bswap
add
sar
neg
btr
inc
xor
btr
sub
add
btc
inc
shrd
movzbw
pusha
jmp
mov
jae
aas
mov
in
scas
out
gs
mov
mov
out
movsb
jmp
mov
int
out
in
push
loop
xchg
shll
push
xor
movsl
dec
mov
jecxz
mov
sbb
into
popf
pop
fcomps
icebp
mov
lret
cld
aas
dec
aam
inc
aas
pushf
sarl
cmp
sbb
sub
mov
out
and
mov
insl
add
ljmp
xlat
xor
lret
cmc
call
jo
jle
in
jo
js
sahf
push
sar
jle
out
jb
pop
out
rcr
inc
xchg
and
in
xor
insl
mov
das
mov
push
adc
loopne
push
divb
push
and
jge
push
movl
jmp
add
stos
xor
fldenv
mov
mov
pop
sti
sti
je
loopne
ret
pop
fsubl
shl
test
insb
xchg
inc
jno
dec
mov
gs
lcall
sbb
mov
xor
stc
mov
sub
mov
nop
movsb
iret
cli
xchg
push
cmp
add
push
aaa
adc
jle,pn
sbb
fcompp
mov
or
adc
dec
and
pusha
js
mov
arpl
cmp
adc
mov
mov
ret
mov
mov
mov
jp
add
jno
in
cmpsb
sahf
popf
add
and
testb
ret
mov
outsl
jo
dec
mov
lock
pusha
dec
add
or
sbb
jo
and
adcb
push
divl
cmpsb
int3
dec
je
pop
jl
lds
xchg
fsubs
xor
into
clc
and
add
sub
push
mov
rorl
icebp
sarb
idivl
xor
subb
sbb
lcall
dec
jp
push
les
stos
inc
or
jmp
out
xchg
mov
out
lea
add
sub
daa
adc
ds
mov
ds
mov
mov
cmpb
arpl
and
es
sub
adc
andl
mov
test
imulb
sub
inc
cmp
idivb
andb
mov
push
movsb
push
mov
cs
jecxz
cli
push
pop
sub
jns
popf
stos
ss
add
lds
jmp
dec
mov
add
dec
loope
loopne
test
iret
aad
push
add
insl
stos
mov
test
or
js
sub
push
xchg
inc
cli
cmc
lods
testl
adc
dec
sub
cmpsb
lahf
and
xchg
sbb
cs
sub
xchg
rcr
mov
in
scas
mov
pop
add
lahf
sub
cmp
xor
and
test
sub
lcall
mov
pop
xor
mov
mov
mov
outsb
hlt
or
push
shll
aam
and
hlt
iret
sub
and
xor
xchg
dec
lcall
imul
mov
mov
mov
fisttpll
jge
sbb
mov
cmpsl
lds
out
sub
dec
cmp
lcall
xor
cmpsl
mov
repnz
mov
pop
xchg
xor
xchg
or
mov
out
dec
mov
repz
push
dec
jbe
cmpsl
adc
aas
jno
sub
mov
adc
jb
jo
and
dec
add
fstpl
pop
sub
pop
pushf
lcall
mov
jo
iret
inc
ds
dec
sub
and
inc
addl
imul
mov
fnstcw
xor
dec
sahf
mov
push
jno
push
scas
hlt
shlb
inc
sarl
sti
cli
ljmp
sub
repz
pop
les
sbb
fnstcw
pop
adc
jl
andl
js
lea
js
push
cmp
cltd
inc
lret
mov
std
shrb
rcl
or
or
add
out
push
xchg
jo
and
movsl
iret
mov
mov
pop
sub
cmp
aaa
and
adc
or
bound
jl
mov
push
pop
inc
mov
mov
shrb
cwtl
cmc
inc
cmp
dec
mov
mov
xor
inc
in
and
insl
pop
add
inc
jge
lods
lcall
popf
xchg
jbe
outsb
cld
add
scas
test
cwtl
and
stos
stos
mov
mov
mov
out
mov
push
mov
addr16
aam
aas
mov
add
push
jae
or
aad
repz
push
jmp
xor
ja
xchg
pop
mov
leave
les
and
fcompl
xlat
jbe
jl
je
and
or
xor
cmpsb
cmp
aaa
loop
cltd
cmpsl
ret
in
jg
pop
and
or
pop
and
adc
test
push
ja
add
mov
shll
js
mov
ljmp
cmp
pop
or
jmp
pop
push
jo
call
dec
out
xor
in
xor
bt
mov
cmc
call
shr
movb
add
mov
cmp
and
clc
pushf
stc
cmp
add
movsbl
add
stc
stc
xor
push
add
bsf
movsbw
movzbw
ror
xchg
sar
clc
shl
call
cmp
mov
insl
gs
jne
pop
adc
push
inc
pop
sbbb
dec
cs
repnz
adc
cmpl
lock
or
cmp
mov
popa
aad
pop
jne
aad
sahf
enter
dec
enter
inc
inc
outsl
mov
mov
loope
inc
rol
mov
add
add
fcoml
flds
lret
add
push
sub
test
movsb
aad
movb
jns
mov
xor
test
inc
jp
mov
inc
cmp
cmp
adc
sub
inc
aaa
push
inc
jge
mov
jmp
push
shl
pop
jns
cmc
push
or
push
imulb
inc
dec
mov
lahf
and
xor
dec
pushf
dec
in
out
inc
pop
lcall
fbld
mov
repnz
ret
fnstsw
push
aam
out
ja
fisttps
arpl
mov
push
xchg
inc
cli
mov
roll
jmp
mov
pop
sub
push
sbb
xor
dec
andb
dec
scas
es
pop
inc
or
xor
lret
inc
bound
inc
sub
xchg
cmp
sbb
mov
in
jecxz
data16
mov
mov
mov
addr16
push
aas
mov
lret
or
pop
mov
dec
call
fbld
std
dec
cwtl
repz
xchg
mov
and
add
fwait
cmpsl
cmp
dec
rclb
and
repnz
pop
inc
lret
dec
xchg
in
clc
sub
shrl
sub
mov
icebp
ret
pop
add
aas
sbb
add
mov
lcall
jno
and
and
adc
jae
or
cmpsl
jge
shlb
and
add
out
mov
and
sbb
dec
xchg
mov
xor
movl
push
call
mov
mov
outsb
push
lret
or
dec
cmp
mov
js
lret
mov
xor
inc
pop
movsb
pop
xorl
or
loope
pusha
mov
sub
loop
gs
dec
mov
data16
aad
push
lcall
cmp
int
sbb
adc
subl
add
addr16
pop
cs
fnsave
in
sti
adcl
dec
mov
mov
int
in
push
inc
add
jecxz
lea
lcall
mov
push
xor
shlb
pop
std
aad
xchg
adc
or
stc
dec
mov
and
and
jno
pop
xchg
xchg
or
daa
pop
lock
and
shll
jne
adc
lea
mov
std
dec
out
adc
push
jns
stos
jno
and
xor
sub
test
inc
mov
je
push
shl
xor
xlat
dec
std
jmp
xor
dec
ret
mov
loop
sahf
pushf
inc
mov
stc
xor
je
add
mov
ret
sub
pop
pop
push
jecxz
mov
inc
arpl
inc
pushl
ret
dec
mov
ret
sbb
or
push
aam
inc
sahf
aas
jl
test
inc
push
pmaxsw
and
lods
cmp
mov
aaa
negl
mov
jge
rolb
jge
mov
test
movsb
lea
dec
enter
nop
push
push
in
xor
je
neg
int
arpl
shl
scas
or
inc
shrl
es
imul
cli
jae
push
cmpsl
mov
xlat
incb
xchg
repz
mov
mov
in
jns
or
aam
pushl
pop
leave
push
in
inc
sahf
pop
fwait
cmp
or
dec
pop
js
xor
call
fstps
gs
push
cwtl
xor
and
jne
repz
push
pushf
or
enter
std
popf
jp
sub
fwait
in
sub
lea
jl
xchg
mov
bts
shrd
test
mov
clc
bt
lea
call
pusha
pushf
pusha
pushf
movl
pushf
pushl
mov
lea
jmp
jns
lea
nop
lods
dec
lods
mov
test
adc
lods
insl
dec
mov
xchg
fnstenv
or
sbb
fwait
jmp
rorl
sbb
adcl
test
cmp
fidivrs
xchg
xor
movzbw
mov
lea
jmp
movl
pushl
push
pusha
lea
jmp
push
movl
jmp
xchg
inc
lahf
imul
std
xor
aam
pop
enter
jge
pop
aas
jbe
mov
lret
jbe
mov
mov
aaa
or
rcrb
outsl
mov
inc
xchg
sbb
push
xchg
and
pop
mov
and
insl
fdivl
int3
dec
push
loopne
int3
fwait
mov
bound
push
mov
xchg
jae
addr16
icebp
pushf
mov
inc
filds
dec
movsl
testb
cmp
addr16
or
lahf
leave
movsl
or
adc
xor
fidivl
sbb
mov
daa
in
jle
shll
ja
movsb
subb
fwait
jge
hlt
leave
add
sbb
xor
cwtl
cwtl
jge
sub
sbbb
daa
rcrl
or
jbe
and
cmpb
inc
out
sbb
sbb
push
in
sbb
fistl
mov
in
push
fsubrl
sub
mov
lcall
pushl
jno
outsb
roll
outsb
imul
insl
add
ljmp
and
jmp
btc
mov
cmp
pushf
pushf
pusha
shr
cmc
cmc
pushl
and
stc
add
bts
rol
xor
mov
stc
cmp
add
mov
jmp
add
adc
pop
xor
mov
negb
lods
lret
mov
sti
and
push
pop
jmp
aas
push
in
xor
lea
add
inc
pushf
mov
ret
and
into
cmp
cmc
dec
lds
sub
cmpsl
jno
dec
aas
sarb
xor
dec
push
mov
sbb
inc
xchg
inc
mov
mov
pop
inc
and
fwait
jmp
mov
lcall
jmp
mov
push
movl
pushf
pushf
push
lea
jmp
call
call
or
inc
fbld
ljmp
xorl
js
sub
mov
sbb
sbb
add
int3
std
pop
adc
sti
stos
mov
xor
push
shl
addr16
pusha
jge
push
mov
and
lret
push
push
sahf
mov
arpl
jg
mov
aaa
fsubs
ds
into
sub
xor
divb
pop
repz
jp
ds
add
sub
adc
pop
jb
and
in
testb
dec
jle
cmc
sbb
fistps
js
mov
lds
stc
ret
testl
push
dec
rcll
sub
in
push
popa
mov
pop
mov
pop
jle
xchg
and
ret
xor
imul
and
das
inc
in
or
std
lret
push
push
push
fprem1
lods
rclb
daa
jo
repnz
repnz
xlat
int3
mov
lds
flds
popf
clc
pop
pop
adc
rcr
xchg
push
push
fdivrl
mov
inc
xchg
iret
in
adc
mov
aas
std
lahf
std
mov
pop
or
outsb
adc
sbb
add
ret
cld
test
aas
leave
outsb
adc
dec
lods
pop
and
shr
repnz
xchg
icebp
push
push
out
jmp
mov
mov
cmp
mov
movsbl
and
lcall
cmc
out
or
aam
mov
test
or
cmp
jmp
in
movsb
xchg
xchg
pop
lods
test
jmp
stos
dec
pop
fnstenv
repnz
pop
iret
pop
repz
insb
mov
icebp
mov
pop
aam
int
sub
xchg
std
cli
mov
pop
jnp
pop
add
mov
stos
pop
js
pop
lods
jle
inc
out
push
jbe
cmpsl
andl
add
in
clc
in
fisubl
pop
pusha
mov
shlb
jae
xchg
cwtl
sarl
push
or
gs
stos
lds
mov
out
call
xor
pushl
add
shl
movzbl
cwtl
mov
stc
cmp
bt
cmc
or
call
movb
lea
jns
pusha
movl
movw
push
movl
pushl
pushf
mov
pushf
lea
jmp
movl
pushf
movb
pusha
pushl
lea
jmp
push
movl
pushf
pushl
lea
jmp
movl
jmp
push
cs
add
jae
xchg
dec
pop
mov
outsl
clc
mov
and
outsl
or
mov
jl
or
inc
sub
stc
or
inc
pop
addb
arpl
es
icebp
into
icebp
push
jecxz
cmc
jno
out
gs
lret
sahf
mov
ror
sbb
xchg
push
out
gs
pushf
ljmp
scas
mov
sub
mov
nop
jl
fwait
in
or
cmp
push
rcll
mov
xchg
dec
into
add
xor
cmpsb
fwait
sub
cmpsl
pop
adc
cmc
jno
inc
jnp
shrl
negb
test
mov
lahf
sbb
popa
push
dec
xor
inc
adc
bound
or
mov
popa
idivl
movb
fisubl
jno
pop
adc
jp
dec
leave
jns
cmp
les
movsb
cmc
loop
fldcw
out
mov
hlt
call
add
or
rol
add
out
cmc
out
movsb
xor
add
adcl
jnp
aaa
push
fidivs
jbe
xchg
jae
or
push
orb
lock
mov
cmp
jo
int
out
mov
pop
sub
ss
sahf
aam
jle
hlt
xor
andb
lret
mov
and
sti
pushf
movsl
lahf
insb
pop
ss
repz
mov
idivb
or
or
into
mov
pop
jp
mov
sub
sbb
pop
mov
loop
and
imul
inc
loop
cmpsb
iret
dec
in
and
lods
mov
mov
dec
leave
faddl
cmpsl
jecxz
push
inc
pushf
mov
loopne
jae,pt
jbe
aam
insb
jnp
dec
sbb
cltd
ja
push
jmp
cmpsb
mov
jge
test
pop
add
cli
dec
adc
cld
into
pusha
pop
test
pushf
ljmp
cmp
pop
xor
sub
dec
movsl
cmp
push
std
insb
adc
mov
rolb
dec
imul
movl
js
test
cmp
or
lret
std
scas
in
push
inc
push
mov
dec
xor
mov
mov
pop
test
jnp
ret
out
repz
call
push
movl
jmp
leave
lcall
jne
nop
xor
out
iret
iret
xchg
push
mov
cmp
cmp
fidivs
add
inc
add
xchg
inc
sub
jge
idiv
push
fs
das
add
mov
or
test
xor
add
xchg
inc
mov
sbb
imul
div
adc
dec
insb
mov
repz
sub
jns
xchg
aaa
mov
andnps
mov
lods
mov
lods
repz
repz
ja
aaa
xchg
movsl
inc
dec
aad
in
hlt
daa
divb
sub
and
push
lahf
ja
sbb
insl
adc
lahf
hlt
mov
testb
xchg
inc
mov
sbb
sub
sub
fcmovne
mov
inc
pop
xchg
add
pop
mov
in
in
xor
loopne
and
pop
inc
stos
lds
roll
js
int3
mull
sub
adc
xor
xchg
test
add
add
push
out
enter
add
aad
jmp
and
lods
in
dec
and
pushf
dec
dec
xor
xchg
arpl
jne
mov
stos
jns
jp
mov
ror
and
push
lods
cmp
inc
xchg
mov
jge
and
aam
mov
pop
xor
mov
and
popf
sbb
cmp
loope
cmpsb
outsl
inc
rolb
sbb
or
inc
lds
and
sbb
outsl
lods
outsb
and
ja
jg,pn
pop
dec
mov
dec
or
ror
testl
inc
test
addr16
cli
jo
bound
rcrl
mov
cmp
mov
mov
and
sub
stc
push
cmp
mov
sub
jl
dec
sub
mov
mov
loope
sbb
mov
jg
xchg
out
cmp
lret
shll
pop
jge
mov
ds
xchg
ret
push
add
mov
out
mov
fs
out
or
mov
mov
imul
mov
scas
fisttps
loopne
test
loop
jg
fiadds
out
cmpsb
mov
mov
ja
in
pop
mov
pushf
cmp
pop
and
pushf
xchg
jb
cld
pop
push
or
add
inc
ficomps
aaa
jae
and
fdivp
and
icebp
xor
idivl
fabs
dec
orb
and
lea
adc
aad
js
inc
les
mov
pop
dec
ss
adc
stos
fcmovnbe
lods
inc
sbb
dec
gs
les
push
cmp
addr16
adc
fisttpll
mov
insb
adc
les
movsb
pop
pop
cli
mov
sub
enter
loope
xchg
into
sub
call
pop
lahf
pop
sbb
mov
push
push
outsb
pusha
dec
nop
stos
mov
xor
fidivs
jle
push
ret
sub
pop
mov
scas
repz
inc
shlb
ret
mov
xchg
push
add
jbe
int
and
push
sarb
mov
out
cmpsb
inc
outsb
or
dec
cmp
push
clc
jb
repnz
icebp
xor
xor
imul
ror
push
nop
xor
lea
add
loopne
movl
jmp
stos
shrl
mov
in
ret
sbb
test
data16
cmpsb
js
das
mov
sub
repz
aas
adc
pop
mov
mov
dec
leave
cld
pop
mov
push
test
mov
pop
xchg
and
fdivl
add
ficomps
cmp
imul
cmp
lods
push
movsb
sbb
lods
test
lcall
fimuls
sub
imul
xchg
testb
ret
adc
cmp
les
push
ljmp
jb
hlt
das
daa
or
hlt
jle
divb
sub
xchg
mov
inc
mov
lods
dec
aam
inc
xor
jmp
movl
pusha
pushf
pushf
lea
jmp
mov
ds
jae
xor
and
sbb
loopne
fdivrl
push
mov
imul
jmp
outsb
lcall
jae
push
inc
xor
bound
pop
mov
pop
sbb
mov
xor
ja
pop
imul
xor
xchg
arpl
mov
lret
mov
ljmp
imul
cwtl
sahf
lock
lcall
pop
xor
sarl
insb
xor
push
pusha
pop
test
icebp
jb
xor
cmpsb
push
lock
lcall
inc
and
cmp
push
xor
lea
jle
stc
call
aas
aas
cmp
pusha
lret
pop
xchg
pop
jg
in
out
add
cmp
push
pop
sub
cld
ror
mov
jnp
lds
or
insl
iret
sub
ror
push
mov
and
into
sub
sub
loopne
pop
mov
fst
sub
inc
xor
mov
add
sub
clc
pop
xor
adc
mov
inc
js
lock
jno
push
xor
dec
sub
cmp
mov
xor
adc
and
add
jo
mov
test
idivl
cwtl
pop
rorl
push
stos
dec
mov
call
sub
sti
inc
ret
inc
and
mov
lcall
jno
es
push
andl
lods
push
enter
leave
push
inc
loop
pop
in
std
outsb
sub
xor
pop
fisubrl
cltd
jns
test
ret
das
in
shlb
jp
push
cmp
and
stos
dec
mov
aaa
jnp
pusha
adc
inc
push
clc
fcompl
pop
rolb
cmpsl
pop
xchg
rorb
cmpsl
aaa
or
and
repz
scas
push
hlt
sub
lret
roll
imul
lret
cmp
cwtl
je
jmp
pop
sub
push
jge
ljmp
push
mov
popf
xchg
mov
pop
hlt
in
lds
mov
out
leave
ret
bound
into
outsl
or
outsb
fstl
sub
stos
out
pusha
daa
xchg
pop
and
sbb
mov
mov
mov
pop
cli
int3
subb
add
xor
in
lock
jo
shlb
mov
out
pop
cs
imul
aas
mov
cwtl
jecxz
lock
mov
mov
inc
mov
inc
or
rolb
push
push
sbb
enter
or
fdivr
pop
leave
inc
xor
pop
or
imul
mov
mov
leave
xchg
xor
mov
leave
in
js
adc
xchg
xor
sub
sub
and
jg
sub
fbld
popa
mov
xlat
leave
or
mov
shl
js
fsts
pop
add
icebp
xor
or
cwtl
xor
xlat
adc
movsl
js
arpl
push
mov
movb
lea
jmp
cmpb
mov
cs
add
mov
pop
cltd
mov
out
dec
jmp
push
push
jne
fsubl
movsl
adc
mov
fstpt
mov
add
addr16
push
add
addr16
pop
push
push
incb
jle
les
loop
sbb
jmp
ds
mov
es
dec
loopne
or
xor
sbb
pop
lods
push
dec
inc
push
aam
pop
jnp
movsb
cmp
jo
idivl
push
mov
mov
pop
jne
jle
int3
inc
or
mov
clc
lcall
cwtl
loop
inc
int3
out
je
add
mov
fs
nop
lock
ljmp
std
das
add
in
and
test
in
lea
add
push
push
adc
sbbb
cmp
hlt
inc
aaa
dec
cmp
jmp
xlat
stos
loop
cmpsb
int
push
pop
mov
mov
aas
dec
leave
push
std
mov
inc
aam
ljmp
mov
ficoms
subl
sahf
lret
jmp
pop
pop
mov
cmpsl
jo
ret
fistps
add
sbb
jmp
icebp
mov
gs
insb
pop
xor
sti
xchg
lcall
rol
sahf
mov
dec
arpl
nop
leave
and
inc
fnstcw
xor
ret
mov
rclb
inc
sub
rcrl
pop
lret
icebp
jnp
adc
fldenv
repz
addr16
xor
std
aas
sub
jg
das
add
loope
fchs
cmp
jns
jns
pushl
sub
jg
sub
xor
pcmpeqw
pop
push
push
add
das
aas
pop
xor
xor
ret
imul
sbb
adc
stc
ss
movsb
sub
stos
xorl
pushf
insl
push
mov
fmul
pop
jb
mov
mov
das
pop
jecxz
loop
cmpb
jle
fstcw
lahf
jo
pusha
pusha
movl
call
sti
sbb
stos
lock
test
bswap
xchg
shlb
outsl
les
xor
xchg
sbb
jae
sub
dec
mov
add
jmp
rcrl
xlat
rcr
sub
mov
ds
push
fs
and
popf
xor
xor
jge
lret
rorb
fnstenv
mov
insb
pop
js
scas
loope
ds
xor
hlt
ja
out
pop
dec
psrlw
mov
sub
int
push
out
sahf
es
aam
dec
and
push
ja
xlat
mov
in
mov
rcll
outsb
and
jae
cmp
xchg
jl
in
jg
xchg
rorb
and
push
insb
addr16
mov
or
test
mov
xor
lea
and
div
and
repnz
jo
jmp
int3
loopne
fadds
pop
call
call
jg
in
movsl
rolb
movsb
fsubl
inc
xchg
cli
xchg
pop
outsb
dec
cmp
loop
rcrb
out
add
jl
pushf
jp
cmp
bound
adcl
ffree
jg
dec
das
adc
in
jl
jo
inc
jecxz
cli
push
xchg
xchg
lock
pop
adc
out
and
call
scas
clc
inc
inc
sbb
cmp
mov
cmp
aas
mov
iret
and
mov
lock
xchg
sbb
out
sub
sub
pop
mov
sub
sub
push
mov
int
pushf
inc
out
push
ret
xchg
xor
lds
push
mov
mov
pop
fnstenv
dec
cs
fidivs
lods
mov
xor
jo
push
movsb
inc
jno
outsb
adc
test
cmp
mov
ljmp
mov
das
or
xor
sbb
xor
lods
ror
inc
ds
lahf
test
pop
test
pop
mov
mov
pop
xor
stc
jmp
xor
xchg
pop
outsb
iret
mov
ja
add
xchg
lret
or
push
out
adc
mov
ds
aaa
clc
pop
test
push
out
sub
or
test
aas
pop
test
insl
mov
add
push
push
outsb
sbb
mov
mov
or
testl
repnz
scas
dec
out
add
dec
add
xor
inc
and
mov
push
popf
dec
movsl
mov
inc
sbb
add
ficoms
in
mov
xor
xlat
mov
in
jns
mov
frstor
mov
jp
fdivr
outsb
mov
or
sub
sti
sahf
jg
dec
jbe
pop
push
or
xchg
sub
out
push
pop
cmp
inc
sti
mov
mov
dec
push
sub
adc
out
out
in
out
xchg
pop
xchg
sub
mov
ss
sbb
sbb
rol
cmc
jmp
push
pop
push
push
adc
fs
lods
mov
fildl
cs
lods
jno
mov
pop
inc
sub
xor
jnp
fisttps
xchg
jb
sahf
into
cmpb
enter
pop
mov
aad
jne
iret
es
std
inc
jmp
xchg
iret
xchg
pop
sub
sarl
fs
daa
inc
and
xor
xlat
shlb
cmc
fs
cmp
lods
ljmp
push
pop
bswap
mov
jae
scas
dec
sbb
sbb
cs
sbb
test
sbb
and
fstpt
xor
stc
and
aaa
push
stc
jo
test
popf
jns
cmc
push
ss
push
and
shlb
cli
jl
jnp
or
mov
push
mov
pop
inc
adc
jl
sub
sbb
sub
jns
aam
pop
lahf
sbb
sbb
rcl
scas
dec
les
inc
sub
dec
xor
in
mov
xor
cmp
push
push
sbb
add
adc
sbb
test
outsl
fnsave
out
movsl
outsb
push
jns
xor
push
lcall
dec
in
pop
push
dec
mov
sbb
aam
insl
push
ret
push
rorl
add
dec
rcll
dec
push
test
outsl
mov
fists
loopne
clc
mov
out
dec
xor
jmp
lea
jg
push
push
call
pushf
pushl
jmp
add
sub
neg
xor
aas
mov
test
cmp
cmc
pushf
and
pushf
mov
lea
jmp
and
cmc
test
clc
pushl
add
call
fsubs
cmpb
jno
mov
popf
fwait
xor
bnd
add
xor
sahf
cltd
push
jb
xor
addb
sub
dec
leave
cmpsl
mov
divb
xor
mov
imul
cmp
loope
dec
or
lods
gs
mov
mov
test
xor
lea
mov
mov
mov
or
cmp
xor
xor
xor
jne
jmp
xchg
cmpb
push
into
jo
cmp
jno
daa
shll
outsb
push
lea
cwtl
cmc
mov
into
sub
mov
sub
or
sub
fiaddl
notl
mov
mov
cmp
in
push
or
int
pop
mov
add
aaa
cmpsb
arpl
inc
jecxz
je
xlat
jmp
jnp
sub
adc
pop
ret
leave
pop
mov
push
movsl
test
inc
or
pop
addr16
in
adc
or
and
push
test
adc
inc
mov
fcoms
dec
lds
repnz
divb
inc
adc
dec
movsb
mov
push
add
testb
fldl
std
jns
rcr
ret
jnp
fsubrs
inc
add
and
xor
jmp
xor
test
lahf
push
adc
pop
addr16
in
cltd
cmp
int3
js
push
das
adc
daa
mov
jp
clc
imul
subb
adc
stos
push
cmp
jnp
xor
mov
cli
pop
and
ds
mov
and
sbb
imul
jg
fwait
shlb
sysret
jae
dec
hlt
xor
fimuls
loop
xchg
cmp
xor
mov
or
and
dec
sbb
xchg
mov
fildll
add
pop
movsl
pop
cld
sbb
rcll
popf
enter
es
xchg
aas
pop
imul
xchg
cmpb
test
cwtl
and
xchg
mov
cs
sbb
pop
jg
pop
andb
shl
cmc
and
mov
add
mov
adc
sub
cmp
cmp
sbb
sbb
into
mov
out
mov
into
mov
lock
jno
fisttpll
fwait
not
fistpll
fldl
inc
jecxz
sub
dec
sub
cs
les
sbbl
adc
mov
adc
mov
movsl
cmp
je,pn
or
inc
fsubrl
movsl
pop
xor
ja
cmp
sti
push
jg
push
cmp
mov
sub
mov
lods
andb
subb
sub
lds
and
imul
mov
cwtl
fwait
sub
mov
mov
mov
fisttpl
add
and
insb
mov
movsb
nop
icebp
aad
jle
dec
mov
lcall
adcl
les
lahf
fdivl
add
mov
test
fs
adc
xor
jmp
ja
push
ljmp
pop
xor
adc
int
cmp
xor
push
sub
inc
push
mov
scas
inc
bnd
sbb
hlt
add
sub
scas
outsl
stc
sbb
loopne
inc
rcr
lret
jb
add
in
call
and
mov
jae
dec
xor
jp
mov
stc
xchg
fisttpl
out
sub
sub
mov
xor
test
jmp
movl
mov
pushf
lea
jmp
dec
insb
xor
and
add
xor
ljmp
inc
pop
in
shlb
dec
sbb
cwtl
pop
cmpsb
push
mov
xor
dec
pushl
test
jmp
adc
out
mov
rolb
mov
cmp
call
cmp
js
add
mov
jb
cmovae
push
out
nop
mov
gs
hlt
sbb
and
loopne
cmp
xchg
vpmulhuw
loope
dec
dec
inc
pmulhw
xor
inc
inc
mov
pop
xor
imul
cmpsl
cmp
cmp
jecxz
sbb
cmp
outsl
jne
call
ljmp
jns
inc
shlb
stc
xor
inc
cld
popa
adc
mov
xchg
push
stos
mov
insb
lock
cld
xor
loopne
pop
in
sarb
mov
dec
iret
cwtl
outsl
div
adc
and
repnz
or
or
test
add
stos
xchg
std
mov
push
xchg
test
cmc
arpl
imul
cltd
dec
push
fsubl
jnp
scas
mov
fwait
into
andl
dec
adc
sub
cs
pop
xchg
mov
je
fwait
into
cmpsl
fsts
icebp
dec
add
and
jae
rdtsc
push
bswap
jmp
movl
pusha
jmp
pushf
pushf
movl
pushl
mov
pushf
lea
jmp
lods
popa
sbb
ljmp
cmp
popa
cltd
lcall
dec
jae
out
cmpsl
add
jg
lods
jbe
cli
push
cmpsb
scas
aad
or
add
aad
scas
jb
mov
fs
jb
sahf
push
push
xor
in
dec
push
fwait
cmc
push
add
jl
sub
daa
lcall
cmp
sahf
fdiv
jge
dec
into
mov
inc
sub
repnz
push
cmpsb
sbb
dec
leave
mov
inc
mov
push
mov
aaa
pop
jae
adcl
dec
or
mov
mov
mov
mov
int3
dec
shll
add
push
cmp
aas
imul
jo
pop
in
sti
stos
or
dec
loop
mov
mov
mov
inc
pop
lods
mov
aas
fnstenv
mov
ljmp
xor
int
xchg
add
xor
das
adc
mov
fwait
inc
in
enter
sbb
pop
jg
adc
jbe
cwtl
or
or
ret
adc
aaa
adc
or
add
fnsave
dec
stos
ja
aad
icebp
or
ds
sbb
mov
lods
xorl
cld
out
xchg
lcall
or
add
les
and
mov
idivl
ja
in
sarl
sbb
jo
and
or
add
bound
fadd
or
sub
out
pop
scas
pop
xchg
mov
add
scas
in
pop
pusha
inc
out
js
add
pop
imul
pop
stos
mov
cmpb
js
cmp
lea
fwait
int3
mov
cmc
lods
lds
jecxz
jmp
mov
pop
xor
xorb
fisubs
add
loopne
sbb
fwait
int3
call
lds
in
icebp
pop
dec
dec
lahf
fisubrl
sbb
idivb
mov
xor
ljmp
mov
js
lcall
mov
jne
add
add
jge
mov
push
ret
stc
movsl
adc
add
push
or
test
push
xor
adc
cmp
sarl
add
xchg
mov
pop
mov
rcl
int
jle
and
sbb
or
iret
xchg
sub
lret
lcall
in
mov
out
add
sbb
in
xlat
cmp
xor
fcomip
and
xchg
pop
add
jecxz
aaa
cmp
testl
popa
lret
orl
test
hlt
push
adc
push
jne
cmpl
jmp
adc
inc
aaa
call
xor
loope
add
repz
movsb
inc
pop
repz
icebp
sbb
cltd
cmc
push
mov
std
mov
aad
mov
add
xchg
inc
test
aaa
bound
gs
test
xor
push
fmull
lds
shrb
repz
jno
cmc
nop
pop
mov
sub
mov
addr16
fidivrl
shrl
xchg
push
cmp
sub
sbbb
ja
adc
lock
push
outsl
dec
add
shlb
or
cmpsl
mov
dec
enter
mov
mov
sbb
leave
aaa
xchg
jge
orb
push
xchg
sbb
inc
int
leave
adcl
subl
mov
jnp
pop
cmp
push
shll
pop
scas
dec
test
pop
lret
out
and
das
out
jle
xchg
jp
insb
ror
addr16
adc
dec
add
pop
std
cwtl
jnp
adc
xchg
adc
sub
je
mov
or
mov
inc
fsubl
lret
add
push
sub
insb
fcompl
or
sub
mov
scas
fwait
stos
nop
pop
loopne
add
aad
outsb
mov
xlat
mov
mov
jae
xchg
jmp
xor
ficomps
fldl
pushf
pop
xor
pop
push
out
fstpt
roll
ret
rcll
dec
mov
dec
loopne
adc
imul
outsl
cmc
bound
adc
mov
xchg
jno
out
int
shrb
or
jmp
in
cltd
or
mov
das
adc
insl
and
insl
je
adc
aaa
jno
inc
movsl
cmp
lahf
add
out
mov
mov
jmp
dec
rorl
cmp
jl
mov
push
sub
fisttpll
jnp
and
inc
in
mov
outsl
hlt
mov
xor
push
jmp
pushf
push
call
movsbl
movsbw
mov
mov
stc
shr
bt
add
movzbw
sets
mov
clc
clc
cmp
clc
movzbl
clc
cmp
add
bt
add
cmc
call
fisttpl
add
iret
sub
inc
sub
pop
mov
movb
jmp
and
fdiv
jne
lret
and
dec
clc
add
jnp
or
mov
fdiv
je
and
pop
and
mov
pop
shlb
loop
movsl
cmpb
mov
icebp
xchg
sbb
sbb
lock
xor
les
pop
pop
aas
xchg
in
out
adc
xor
push
movl
jmp
push
movl
pushf
pushl
jmp
jmp
push
pusha
jmp
pushf
push
movl
push
push
movl
push
push
mov
lea
jmp
movl
mov
lea
jmp
mov
bt
mov
call
and
stc
add
not
add
cmp
lea
bts
call
add
add
cmp
mov
adc
mov
repnz
dec
pop
xor
icebp
filds
roll
leave
rcr
inc
lret
jns
adc
ss
scas
lahf
cwtl
outsl
or
or
imul
rcll
sbb
mov
dec
jecxz
add
xor
adc
insb
nop
leave
cld
in
cld
adc
jbe
in
fisttpll
out
xor
xchg
leave
lds
outsb
mov
mov
imul
xor
jbe
inc
mov
adc
shrl
outsb
jne
fiadds
jp
mov
adc
jl
jg
test
call
test
xchg
out
xor
sahf
scas
ret
sbb
out
xchg
inc
sbb
push
outsl
mov
inc
faddp
adc
loopne
leave
ss
xchg
insl
jae
in
xchg
mov
pushf
jp
in
movsb
aam
or
inc
daa
rorl
jg
fldt
jmp
leave
sub
xor
into
and
xor
adc
cmp
rcr
pop
cmp
mov
add
repz
push
sar
xchg
out
ds
sbb
out
aas
movb
push
scas
lea
and
aaa
inc
ljmp
dec
test
movsb
mov
lock
negl
adc
aaa
inc
aam
in
sbb
lods
fnsave
sti
ret
int3
pop
test
sbb
setno
xchg
push
sub
mov
sbb
cmp
sub
iret
xchg
pusha
cmpsb
sub
mov
mov
cmp
xchg
call
jae
mov
idivb
fnstenv
jb
in
add
mov
ljmp
clc
push
jb
jecxz
xchg
sbb
int3
xchg
pop
cld
sbb
aam
push
sbb
or
popf
and
imull
mov
adc
adc
in
xchg
movsb
lock
mov
ds
insb
in
lcall
dec
aam
dec
cmp
test
aad
std
addb
sub
add
mov
stos
xchg
cltd
inc
movsb
and
mov
cltd
xchg
xlat
mov
mov
mov
loop
mov
jbe
push
stos
dec
stc
push
lods
jmp
adc
adc
loope
imul
loop
sbb
jmp
jmp
out
loope
icebp
lea
js
repz
add
insl
lods
inc
stos
lea
and
cmpsl
icebp
shll
or
faddp
int3
aaa
pop
in
das
shlb
pop
mov
jne
mov
sbb
push
adc
adc
inc
popa
popa
adc
push
cwtl
ret
ja
jmp
aaa
push
popa
mov
js
daa
outsb
fidivs
shll
rorb
inc
sub
dec
mov
dec
ss
mov
cmp
xchg
jmp
inc
shrl
scas
test
loope
dec
inc
inc
xor
xchg
lods
ficompl
adc
subb
mov
jmp
call
call
sbb
push
mov
jno
dec
push
mov
lcall
dec
jne
loope
pushf
mov
push
xchg
daa
dec
mov
push
in
sub
sbb
add
stos
cmpb
push
stc
push
lret
xchg
ss
outsl
push
sub
xor
jmp
jo
inc
xorb
les
clc
call
mov
outsl
clc
clc
sbb
lea
jle
cmp
add
sub
ret
sub
iret
fbstp
fldcw
ljmp
xor
movsb
pusha
cmp
dec
sub
es
xchg
push
push
xor
pop
push
ja
hlt
addr16
xorb
aad
fidivs
cmp
sub
iret
mov
xor
ret
fidivl
xor
call
mov
clc
push
stc
pushl
test
call
jmp
or
jo
test
jp
or
movsl
sahf
ja
sti
xchg
mov
lods
adc
mov
push
jbe
pop
push
push
shrb
imul
jbe
dec
xor
sbb
addb
pop
sahf
cltd
and
cli
sahf
fstpl
and
mov
fdivl
and
ret
mov
lahf
cmp
sub
pusha
jecxz
loope
sub
xlat
gs
loopne
faddp
cmp
adc
loopne
inc
movsl
lahf
mov
inc
sbb
cmc
jno
push
scas
hlt
add
nop
gs
mov
and
clc
test
hlt
ret
fldl
pop
pop
pusha
or
push
shrl
sub
add
jge
pusha
inc
fidivs
mov
mov
jle
aad
ja
nop
and
fisubs
sub
fwait
jae
or
mov
sbb
into
lcall
mov
aas
and
shrb
add
sub
mov
sbb
xor
insl
or
jp
popa
lods
arpl
or
xor
aad
mov
inc
push
andl
jo
loopne
inc
pop
sbb
rol
lcall
push
or
std
je
icebp
sbb
cmp
mov
and
xchg
loop
jp
rorb
pop
push
or
adc
pusha
and
mov
cmpsl
jle
fs
mov
clc
mov
xchg
fnstsw
push
inc
dec
lret
cmp
inc
dec
out
jl
out
fiadds
mov
je
push
inc
lcall
int3
adc
jecxz
push
pushl
aaa
push
xor
fmuls
pop
lcall
dec
jno
mov
out
scas
xor
dec
push
jmp
mov
jo
mov
fildll
fwait
shll
jo
inc
and
mov
sbb
call
call
add
dec
xor
insb
sub
xor
gs
xor
push
movsb
sub
push
xor
jg
mov
imul
lods
sub
shr
mov
xor
lods
adc
sahf
xor
ds
cltd
aaa
lods
xchg
xchg
call
xchg
mov
lcall
mov
sub
or
xlat
mov
insb
push
les
ss
fucomip
xor
nop
push
test
andb
cmc
int3
inc
cmp
xor
mov
dec
xor
popa
mov
addl
and
dec
jb
loop
fiaddl
fwait
stos
stos
sub
jl
jmp
push
addb
xchg
dec
scas
mov
fadds
and
repnz
pop
and
movsb
push
push
lret
sbb
push
mov
and
xchg
aas
push
dec
leave
sti
pop
and
fwait
sbb
lea
into
dec
adc
pusha
mov
add
sbb
rcr
ficompl
cmp
cltd
push
es
pop
mov
push
cmp
imul
shrl
fwait
shrb
push
pusha
jmp
push
movl
push
pusha
movl
pushf
pushf
pushf
lea
jmp
test
movzbw
sar
or
clc
add
shl
pusha
mov
pushf
movb
shr
cmc
cmp
test
and
jmp
mov
jmp
stos
sbb
xchg
cmp
sub
icebp
insb
js
orb
xchg
lea
mov
xor
jae
adc
mov
fcoms
push
imul
fidivrs
cmp
arpl
data16
scas
bound
xor
sub
aaa
cmpsl
adc
mov
sbb
bound
dec
lods
int
pop
lcall
and
jg
negb
dec
or
cltd
bound
sbbb
sti
imul
sbb
out
add
cs
fistpll
pop
lods
lahf
mov
aam
push
ror
mov
fwait
mov
into
test
sub
outsl
or
or
imul
std
mov
adc
cwtl
push
int3
ret
aas
in
adc
pop
mov
sub
jae
add
cmp
mov
mov
fisttps
push
dec
jp
clc
sub
cmpb
out
ficoms
in
lcall
jnp
fwait
outsl
sub
in
fmull
sub
xor
lcall
push
xchg
fcomps
xlat
and
out
or
mov
test
xchg
and
cld
cmp
mov
push
das
adc
sub
jl
out
ss
lret
sub
std
add
int
add
je
lods
jge
jno
mov
pop
xor
add
mov
in
sub
fwait
mov
add
push
scas
lret
mov
jbe
add
je
sub
daa
jge
lcall
sub
pushl
lea
jmp
movw
movl
call
call
adc
mov
pop
mov
sub
or
lods
xchg
mov
mov
mov
mov
negl
les
es
shl
cmp
repz
popf
adc
lock
push
jmp
icebp
add
dec
and
push
push
dec
mov
push
mov
adcl
xor
inc
ret
cmc
xchg
jno
jle
into
pop
lods
mov
jp
xor
mov
mov
movl
pusha
movl
movw
pushf
lea
jmp
pusha
pusha
movl
jmp
inc
push
sbb
idivl
push
aaa
dec
mov
iret
data16
xor
lahf
xchg
lds
aaa
jl
xchg
jbe
lea
popf
andb
jns
ja
cmp
iret
cli
push
or
and
data16
add
faddp
lcall
ja
sbb
fwait
aad
mov
stc
test
test
loope
pop
je
cmp
mov
mov
loope
push
insl
ja
fstpt
fildl
sub
jae
jnp
shrl
icebp
js
out
andb
outsb
pop
jb
mov
jg
cli
pop
xor
dec
fwait
leave
add
push
inc
out
popf
xlat
cmp
cmc
sahf
je
and
adc
cmpsl
movsl
xor
inc
push
incb
adc
int3
sbb
syscall
pop
xchg
out
xchg
cmp
pop
aad
push
dec
mov
inc
xchg
sahf
inc
mov
ds
jmp
and
aaa
pop
call
loop
add
popf
and
sbb
or
mov
es
pop
inc
inc
or
lods
xchg
dec
leave
cmp
mov
xchg
movsl
out
lahf
pop
xchg
push
cs
mov
add
cmp
mov
fdivr
or
inc
sub
xchg
jne
in
xchg
clc
mov
les
jp
sub
xchg
cmp
xchg
push
inc
inc
insb
pop
mov
jae
bound
xchg
sbb
lret
insb
jge
sub
dec
in
or
xchg
xchg
mov
mov
sub
and
and
cmc
out
and
xor
loopne
sbb
push
fs
out
fimuls
push
pop
cwtl
push
and
sub
aad
call
xor
sar
jno
gs
inc
dec
rcrb
mov
pop
sub
and
lret
mov
inc
inc
test
dec
sbb
bound
bound
push
enter
ds
push
mov
and
or
xchg
jmp
punpckldq
adc
pop
pop
nopl
lcall
ss
orl
mov
xchg
in
dec
sub
ret
out
push
cmp
imul
mov
aam
sahf
add
adc
xchg
jb
ds
cli
mov
mov
push
lea
lods
push
cltd
jmp
xchg
xor
inc
rcrl
addl
jne
sahf
jle
adc
into
cmp
into
xchg
jbe
jb
icebp
jge
mov
sbb
xor
fcompl
retw
jne
iret
ret
insb
fwait
and
jp
mov
or
inc
push
add
mov
or
std
jno
scas
mov
inc
arpl
and
add
push
test
inc
out
mov
xchg
insb
js
pop
pop
add
cs
dec
stc
xchg
mov
or
into
sbbl
daa
dec
imull
into
cwtl
insb
js
or
pop
test
inc
cmp
push
movsl
adc
mov
cmp
adc
sbb
dec
arpl
jns
mov
fidivs
adc
sbb
fs
sbb
inc
cmp
stos
dec
stc
insl
stc
jnp
fdecstp
xor
jmp
insb
je
ds
pop
xchg
dec
cltd
jle
repnz
popa
mov
inc
jp
ret
ss
adc
push
push
lods
call
ret
pop
xchg
jg
stos
shll
jl
shll
adc
jmp
fisubs
ljmp
mov
fwait
lret
sbb
push
jle
loope
xchg
test
fisubrl
or
sub
push
mov
dec
addr16
aam
lds
mov
xchg
jle
push
fstpt
jge
inc
and
lds
and
iret
movsl
xor
xchg
aam
retw
loop
test
pop
incb
in
cwtl
shll
repnz
sbb
dec
sbbb
sub
scas
dec
jnp
and
sbb
inc
ss
fstps
imul
jmp
inc
aad
out
dec
sti
popf
notl
push
dec
or
push
and
nop
push
fsts
pop
lock
inc
dec
or
jb
sub
nop
mov
icebp
xlat
loopne
sti
pushf
cli
insl
into
ret
out
cmp
out
nop
push
ja
add
stc
jg
dec
or
xor
les
push
dec
imul
cmpsl
pop
xor
lret
shll
push
imul
mov
dec
ror
mov
dec
pop
je
scas
or
mov
adc
repz
dec
xchg
in
mov
pop
fucomip
cwtl
inc
rcrb
call
xchg
dec
inc
xchg
loopne
xchg
shlb
xchg
vrcpss
xchg
adc
push
lret
sbb
movsb
movsb
rcrb
and
sahf
xor
lock
jl
lcall
scas
aam
lahf
pushl
std
imul
dec
data16
mov
mov
sbbb
mov
lea
ja
insl
popf
lds
out
iret
mov
ret
dec
das
fmull
jb
sar
adc
in
push
lds
inc
inc
arpl
push
mov
mov
push
sbb
int3
enter
les
mov
cmp
fists
icebp
and
jae
or
pop
mov
dec
xor
adc
les
dec
mov
sbb
cmp
cli
cli
xor
and
mov
roll
jecxz
int3
add
mov
pop
mov
scas
fwait
cmp
repz
dec
fsubrp
inc
xchg
xchg
cmp
js
ds
test
mov
jnp
sub
xchg
xor
loop
xchg
xlat
ljmp
sbb
push
push
pop
mov
lods
std
loopne
mov
adc
mov
je
push
and
fs
and
add
loope
mov
cmpsb
sub
cmpsb
jnp
cmp
aaa
notl
sahf
or
xchg
mov
fwait
mov
jns
std
mov
out
stc
mov
push
xlat
clc
xor
leave
outsb
or
imul
outsl
inc
or
imul
xchg
push
pusha
popa
jae
adc
xorb
or
repnz
sbb
filds
mov
mov
popa
shll
or
int3
ffreep
cmc
or
push
mov
test
test
sub
loop
mov
jno
jnp
mov
iret
or
fnstsw
fidivrs
mov
das
je
pop
cmp
push
mov
pop
mov
adc
mov
fdivp
push
push
jno
push
lods
jecxz
pop
test
jecxz
xor
ret
xchg
jmp
inc
into
ret
add
xchg
dec
dec
jl
inc
test
and
pop
sub
sti
jno
into
dec
cmp
lcall
inc
int3
int3
cs
cmp
sub
jns
or
int
mov
or
shlb
mov
leave
popa
idiv
int3
add
int3
mov
or
out
xchg
xor
sbb
mov
inc
push
dec
xor
ja
jb
data16
add
xor
mov
or
inc
adc
xor
xor
push
or
xlat
mov
add
addb
insl
mov
lcall
push
aaa
lret
repz
sbb
and
pop
cli
xor
clc
movzbl
cmc
movb
pushf
add
test
test
mov
cmp
shrl
pushf
jmp
jle
shl
shr
cmpsl
bound
adc
stos
js
repnz
pushf
mov
push
xchg
cmp
sub
xor
and
cmp
pop
jae
lods
cmp
in
gs
sahf
pop
push
dec
stos
pop
mov
pop
loopne
cmp
mov
out
ljmp
aaa
test
jb
add
in
das
push
icebp
outsb
out
mov
cmc
fdivrs
dec
scas
in
push
xchg
add
inc
js
daa
repnz
pop
or
das
addr16
ss
incl
mov
rol
push
iret
xchg
xchg
in
inc
sbb
mov
mov
jnp
shrb
loope
in
subl
fucomip
lds
aam
pop
push
push
ficomps
cmp
xchg
fisubs
fidivl
leave
mov
adc
fisttpl
out
jmp
mov
mov
sbb
xor
inc
divl
adc
in
or
push
cs
sbb
cmp
pop
bound
loopne
testl
adc
lea
testl
and
push
addr16
stc
pop
test
mov
incb
pop
aaa
scas
clc
push
xchg
xchg
ljmp
mov
jle
pop
add
adcb
adc
sub
sub
mov
movsl
adc
mov
stc
jge
xchg
outsb
iret
pop
clc
jecxz
xchg
fmulp
xor
cmp
jecxz
xchg
pop
jo
xchg
inc
movsl
insl
and
imul
and
shll
add
inc
dec
xchg
sbb
mov
add
sub
adc
push
je
ret
stc
int3
mov
inc
repnz
addl
sub
mov
icebp
movb
adc
in
test
jg
cmp
mov
xor
jmp
push
cmp
inc
adc
aam
fnsave
cwtl
xor
jge
pop
lods
mov
mov
adc
stc
xor
cmpsb
clc
adc
pushl
lods
lcall
rol
in
pop
scas
mov
mov
clc
cmp
sub
imul
adc
xor
out
adc
mov
xor
xchg
cld
xchg
xor
cwtl
push
rorb
jne
dec
movsb
in
add
test
inc
test
dec
pusha
push
jp
scas
mov
das
into
sbb
adc
and
inc
das
mov
loopne
dec
add
faddl
aad
or
lea
std
inc
fidivs
pop
movb
into
jmp
jno
push
mov
inc
pop
mov
jmp
cmp
mov
insb
sbbb
and
pushf
into
test
pushf
mov
lea
jmp
push
repz
popa
icebp
fs
sub
out
cmp
bound
outsb
out
mulb
movsb
xchg
xchg
adc
dec
pop
lcall
insl
pop
repnz
or
xchg
adc
xchg
push
or
pop
addr16
fidivl
mov
fwait
mov
out
mov
push
rorl
inc
mov
je
lret
sub
fwait
mov
test
add
adc
and
pop
and
pusha
movl
push
lea
jmp
cmp
fcoms
popf
stos
mov
inc
cmp
fcoml
xor
xchg
in
mov
dec
outsb
xor
jecxz
ds
add
xchg
int3
call
ds
test
and
popa
jbe
push
sbb
sub
std
stos
inc
mov
xor
xchg
dec
loope
push
push
sub
lret
jl
xor
lea
adc
iret
inc
pop
out
sub
cmpl
or
shlb
imul
lret
sub
xor
loop
lods
testb
mov
mov
insl
clc
mov
mov
mov
push
lock
sub
or
mov
cmpl
imul
gs
mov
mov
cmp
add
std
imul
stos
jnp
adc
mov
mov
stc
in
inc
adc
dec
rcll
adcl
xor
dec
inc
push
mov
mov
test
cs
jg
outsb
int3
inc
jg
stos
orl
lods
pop
ret
jge
cmpsl
adc
and
scas
inc
sub
sub
psrlw
jne
mov
rcr
mov
cld
filds
and
loopne
subb
cmpsl
popf
fdivs
mov
mov
in
pop
cltd
mov
mov
push
pop
inc
and
add
xor
psubsb
nop
push
xor
ja
ds
hlt
lock
aam
int
fildl
dec
xchg
xchg
cmp
dec
lret
in
jnp
jg
mov
or
jo
or
fwait
scas
cmpsb
scas
stos
hlt
jnp
pmuludq
out
mov
fsubl
lahf
sbb
and
push
push
out
pushl
xchg
les
repnz
repz
sbb
fwait
scas
jmp
fs
incb
pmuludq
push
outsb
pop
mov
aas
adc
push
lds
xor
xor
es
into
push
fsincos
in
inc
cmpsb
pop
shlb
int3
xor
or
not
mov
pop
nop
sbbb
adc
test
mov
lock
mov
shlb
out
pop
xorb
scas
cltd
cs
popa
or
inc
xchg
xchg
pop
enter
movsb
clc
mov
sbbl
movl
push
call
call
sub
in
repnz
cmpsb
mov
imul
movsl
fyl2x
cmp
cwtl
cmp
cmp
add
aam
dec
push
jmp
mov
std
mov
xor
dec
fadds
adc
cwtl
cmp
in
cwtl
mov
outsl
fbstp
adc
or
jo
test
sub
lret
push
jae
adc
and
dec
addr16
mov
fists
enter
xor
sbb
xchg
shl
orl
test
leave
jmp
stos
movb
lods
adc
sub
cmp
mov
adc
aam
push
xor
repnz
inc
cmpsb
jo
or
dec
xor
and
inc
nop
ret
jbe
lock
or
adc
sub
push
lcall
xor
imul
sahf
lahf
test
mov
pop
loopne
fwait
lods
scas
shlb
call
mov
jne
mov
test
add
les
xor
xor
pop
mov
loope
mov
inc
je
push
js
push
sub
mov
out
pop
ss
out
pop
and
fwait
scas
sbb
roll
adc
dec
out
sbb
loop
or
lods
lods
or
fwait
lods
outsl
lret
xchg
push
test
movl
call
pushf
movzbl
jmp
movl
movb
lea
jmp
cmp
mov
movb
test
movw
lea
jge
lea
rcr
clc
push
mov
push
bt
mov
jmp
xor
or
dec
add
and
mov
neg
bsr
btr
cmc
mov
stc
jmp
inc
andl
shrb
es
fs
sti
pop
jne
sub
add
stos
out
sbb
loopne
outsl
mov
loopne
jno
inc
sbb
sbb
xchg
mov
repz
lret
fcoms
ds
aad
leave
sbb
push
sahf
mov
cmp
dec
push
adcl
ret
sub
mov
mov
daa
hlt
das
inc
dec
mov
mov
mov
or
orb
and
add
ds
in
shlb
pushf
adc
cmpsl
sub
sbbl
mov
ss
ret
mov
ja
cmpw
push
xor
jo
sbb
cmp
add
push
outsb
jnp
hlt
aad
mov
sti
push
jmp
jne
sbb
inc
std
bound
mov
jle
sub
push
test
fbld
ljmp
inc
add
push
loopne
scas
lret
scas
xor
or
popf
dec
fucomip
je
jmp
lcall
sarl
iret
arpl
adc
xorb
add
mov
adc
jnp
movsb
stc
jne
je
mov
push
mov
sbb
pop
jns,pn
inc
arpl
jne
jl
fsubs
dec
mov
insb
sub
sbb
xchg
or
jns
push
jbe
das
push
lea
ret
pushf
mov
stos
outsb
imul
mov
movsb
test
xor
movsb
mov
imul
sbb
testb
sbb
push
stos
adc
insl
push
push
gs
pop
aad
cwtl
ret
inc
cwtl
cli
mov
dec
cmpsl
push
and
pop
dec
push
xchg
xlat
insb
xchg
data16
or
lret
xor
pop
add
cmpsb
xchg
daa
into
cmp
jecxz
sti
cmp
std
sbb
xchg
in
xor
pushf
movl
movl
pusha
call
iret
div
fidivrl
cmp
dec
cmp
pop
sub
mov
imul
xchg
lahf
sub
mov
jmp
out
addr16
and
sub
les
sbb
and
push
jle
lahf
sub
ret
mov
sbb
jbe
movsb
inc
bound
mov
xchg
je
xchg
repnz
call
jmp
and
fnstsw
pop
leave
push
mov
stc
cmpsb
and
cmp
leave
dec
in
sbb
mov
es
pop
mov
mov
dec
xor
xchg
pop
addb
ret
cmp
push
jns
mov
cmc
mov
pop
shrl
test
and
xchg
push
subb
ret
push
leave
rcll
push
aaa
mov
jno
mov
and
sub
jno
mov
and
and
jno
fs
and
cmpb
sbb
popl
sahf
add
and
pop
jmp
inc
sub
mov
jno
sbb
fcom
jge
data16
mov
mov
mov
mov
clc
xchg
test
sbb
insl
repnz
inc
xchg
fistl
mov
hlt
fidivl
fwait
test
mov
ret
lret
mov
and
adc
mov
xor
adc
mov
push
push
or
or
pop
push
sahf
push
add
lret
inc
test
xchg
shr
les
fwait
test
mov
into
out
bound
dec
mov
rcll
fs
jne
aaa
ret
sti
in
sub
stos
sti
pop
clc
jp
pop
mov
mov
xchg
mov
mov
xchg
call
les
daa
inc
je
push
stos
orb
aam
pop
bound
std
xor
incb
adc
pop
mov
cmpsl
fisttpll
add
and
adc
fdivrl
cmp
xor
xchg
add
sbb
jge
test
mov
push
aaa
shl
in
ds
sbb
push
mov
neg
mov
push
pop
add
loop
pop
ret
or
stos
fsubr
cmp
cmp
rolb
scas
stc
cltd
cmp
sub
aam
fwait
jae
inc
sbb
push
scas
in
sbb
sbb
lcall
push
xor
and
mov
out
cmp
jp
dec
sub
and
lds
movsb
jo
cmp
mov
push
data16
xor
lods
pop
les
repz
xor
test
inc
sub
and
in
push
push
cmpsl
loope
add
or
xor
sub
sbb
cli
pop
mov
in
ficoms
xor
dec
jge
call
lods
adc
lret
test
mov
xchg
cmpsl
fdivl
js
fxtract
test
adc
mov
leave
cmp
cmp
ja
mov
pop
and
dec
clc
or
mov
xchg
mov
mov
xchg
cmc
je
jne
inc
sbb
cmpsb
jl
or
aam
in
pusha
fcmovu
les
sub
cli
daa
inc
sbb
mov
cmc
lret
aad
xlat
out
in
jo
mov
les
stos
ja
push
dec
mov
push
xlat
push
or
inc
stc
notb
iret
cmp
insb
ret
mov
add
jp
shll
sbb
sti
out
cmp
outsl
inc
in
pop
lret
dec
fstpt
les
cmc
mov
fsubs
adc
push
mov
rolb
mov
lds
or
daa
or
sub
adc
or
or
rorb
add
mov
jmp
pop
mov
loope
inc
jne
filds
lock
mov
xchg
addb
test
sbb
stos
das
insl
xchg
xchg
jae
call
xlat
push
adc
fisubrs
mov
adcl
jnp
and
or
jle
mov
push
cmp
cli
or
outsl
xchg
in
repnz
mov
and
ja
lods
xchg
add
test
fs
mov
cmp
sti
sbbb
movsl
mov
pop
cmp
addb
adc
loopne
mov
shll
cmp
test
and
jbe
adc
imul
mov
pushf
mov
jne
jae
lock
jno
jae
hlt
push
jno
addr16
jle
sbbl
fwait
jnp
xor
push
or
dec
mov
ficoms
cli
cmp
sub
xor
bound
call
mov
push
shll
xor
jmp
dec
mov
repz
lcall
movsl
aam
jmp
ljmp
push
pop
and
pop
mov
pop
or
xchg
insl
out
adc
imul
out
pavgb
pop
inc
sub
in
push
movsl
xor
nop
mov
outsl
not
inc
push
sbb
fwait
movsl
adc
jbe
pusha
pushf
movl
jmp
lods
lea
sbbb
xlat
mov
cli
jp
lea
mov
pop
test
test
mov
ja
add
rolb
lods
cmpl
test
es
gs
push
iret
mov
out
repnz
out
pusha
cmp
push
stos
mov
ja
in
outsl
lods
fnstcw
and
mov
xor
add
fwait
movsb
pop
push
inc
movl
pusha
push
push
jmp
call
push
lea
jge
aam
mov
push
mov
bt
clc
pusha
push
cmp
call
push
call
push
push
jmp
pusha
movl
pusha
movl
push
push
lea
jmp
pushf
pusha
movl
push
call
push
cs
movsl
mov
divl
outsb
shrl
mov
jl
jle
or
loopne
arpl
and
es
stos
xchg
jle
mov
add
ret
setne
movsb
sub
adc
and
push
pop
pop
aas
xchg
shlb
mov
jmp
pop
push
daa
and
imul
int3
dec
pop
mov
mov
aad
aad
and
bound
mov
push
dec
cmpsb
movsb
in
popf
mov
dec
pop
add
push
mov
notl
fucomip
add
sub
sbb
fwait
out
and
repnz
out
arpl
add
sub
std
fisubrs
fidivrs
pop
xchg
pop
pop
fimuls
inc
shll
fs
ficoms
adc
pop
cmp
stos
xchg
sub
and
sub
hlt
add
or
out
ljmp
scas
aas
sbb
jnp
shlb
sbb
mov
sub
mov
mov
lods
daa
push
aam
jge
cmpsb
andl
sub
je
ret
loop
mov
fwait
sti
dec
inc
and
lret
or
mov
xor
or
test
scas
scas
jo
push
scas
cmpsb
xor
push
xchg
push
fsubs
test
test
bound
mov
mov
aad
cmp
aas
cmp
inc
bound
push
mov
xor
lock
sti
cmp
aas
dec
dec
shlb
and
mov
fcoml
loopne
xor
adc
fistps
mov
inc
dec
mov
mov
or
gs
push
xor
jmp
imul
xor
push
mov
jmp
push
pushf
call
lea
jle
cwtl
mov
movzbw
mov
pusha
pushf
pusha
mov
lea
jmp
pushf
pushf
pusha
call
js
daa
mov
xchg
mov
cli
xor
out
xchg
cmp
adc
sahf
pop
mov
pop
flds
lock
out
adc
pop
idivb
bound
fcoml
or
mov
lock
xchg
sahf
js
dec
sub
inc
test
fsubp
fiadds
mov
jecxz
inc
sti
in
pop
cmp
in
dec
stos
push
dec
mov
push
fwait
pop
and
ja
out
leave
in
sbb
dec
call
cmp
dec
jns
adcl
mov
and
out
addr16
out
dec
out
filds
or
xchg
add
lds
push
push
movsl
cmp
inc
movsl
add
insl
pop
pop
aas
push
scas
fcompl
xchg
sbb
fistpll
xchg
pusha
fcmovbe
lea
jmp
sub
je
popf
xor
dec
pop
and
daa
xchg
pop
xchg
stos
gs
cltd
pushl
popf
sbb
imul
outsb
push
clc
push
add
cmp
inc
gs
push
and
aam
inc
mov
xor
jle
test
adc
aas
mov
pop
pop
bound
add
sub
fisttpl
test
out
mov
sbb
dec
sbb
xchg
xchg
sti
mov
iret
xchg
es
cltd
xor
iret
out
jmp
jmp
jnp
bound
and
pop
movsb
lret
pop
hlt
ljmp
dec
scas
or
test
pop
adc
stos
push
inc
fcoml
jnp
cli
stc
out
ja
and
xlat
dec
stos
cwtl
mov
adc
fmuls
out
rcrl
js
push
or
pop
jne
sbb
push
iret
dec
icebp
adc
ficoms
xchg
sbb
repnz
pop
insb
icebp
inc
and
test
adc
lcall
jl
stos
lret
jecxz
mov
add
pop
push
cmp
outsb
mov
fildll
jbe
loope
dec
sub
xchg
repnz
pop
push
fsubr
mov
xchg
mov
ret
sub
test
sarl
shll
inc
cmpsl
negb
sbb
add
mov
fsubrs
popa
pop
cmpb
push
rolb
adcb
jbe
and
pop
stc
fbstp
lock
movsl
mov
cmpsl
add
xchg
inc
ljmp
repnz
xchg
dec
push
test
fcmovu
fmul
pop
call
dec
xchg
test
lahf
lods
sti
popa
dec
push
jae
test
push
add
lahf
push
lods
mov
std
aad
imul
dec
fidivl
push
mov
sbb
andb
ret
adc
xor
mov
inc
clc
pop
loop
sub
pop
cli
jae
pcmpgtd
mov
and
gs
push
or
or
or
inc
imul
fsubrs
push
hlt
xor
repz
mov
xor
adc
pop
xor
iret
xchg
fwait
mov
daa
arpl
mov
and
cmp
test
mov
dec
jl
cmp
jle
xchg
pop
jecxz
dec
sbb
in
shll
pusha
mov
lret
rdpmc
aam
lret
std
aaa
fxch
xor
jns
lret
xchg
aas
cwtl
cmp
outsb
int3
es
das
cmp
test
mov
jnp
test
test
hlt
xchg
jmp
sub
jnp
adcb
adc
mov
or
mov
mov
jae
aaa
or
inc
adc
mov
fcomp
add
mov
push
data16
add
pop
adcb
scas
movsb
hlt
mov
test
or
inc
xchg
fmul
and
aad
popa
mov
add
jge
mov
shl
mov
inc
cltd
mov
repnz
js
nop
push
cmpsb
daa
add
adc
dec
mov
cmpsl
movsb
inc
fidivrl
nop
jne
fdiv
or
pop
std
adc
or
add
inc
dec
in
jle
inc
in
pop
dec
mov
das
push
or
add
das
stos
or
pop
icebp
push
push
popa
frstor
and
in
fstl
call
sbb
push
shl
adc
push
out
vcvttsd2si
aam
or
push
or
dec
cmp
popa
popa
test
movsb
stos
loope
sub
jnp
je
nop
adc
pop
adc
iret
ja
mov
dec
mov
arpl
sub
xchg
mov
je
push
push
loop
push
fucomip
adc
ljmp
sbb
cmc
shlb
lea
fucomip
inc
call
xor
push
imul
and
jno
cli
mov
xchg
push
mov
fwait
pushf
cltd
xchg
arpl
cli
inc
std
decl
add
ret
movl
movb
call
mov
call
call
jmp
jmp
pushf
jmp
call
pusha
movl
pushf
call
add
call
jmp
inc
pushf
cmp
clc
cmp
cmp
pusha
push
jmp
call
arpl
cmc
pop
es
jae
ret
sub
or
xor
push
mov
jo
pop
xor
aad
jnp
xor
scas
mov
xchg
es
mov
ret
fwait
fwait
loope
repnz
lea
jge
push
pusha
movl
pusha
lea
jmp
push
sub
push
push
add
pop
xor
movsb
and
sbb
js
aas
cld
scas
fbstp
icebp
repnz
rclb
icebp
fsubrl
lahf
fisubs
fldl
pop
adc
std
aas
std
xchg
repnz
out
jl
push
jecxz
jmp
sub
scas
xchg
pushf
adc
leave
push
pop
mov
pop
ss
cld
fwait
mov
mov
clc
xor
push
iret
popf
arpl
int
cmp
addl
push
xor
int3
pop
pop
add
cmp
int
insb
mov
test
ret
js
push
push
sahf
inc
pop
lahf
cli
je
xchg
call
mov
fnstsw
fwait
lcall
xchg
aam
mov
ljmp
cmp
arpl
push
sub
jg
mov
xor
mov
cs
fisubrl
dec
cld
fwait
xor
jg
mov
int
loop
jge
dec
and
xor
mov
fsubrs
add
push
jl
inc
mov
out
lret
outsb
les
push
movsl
rcrb
mov
jmp
cltd
insl
jmp
jns
sub
into
xchg
xchg
sbb
daa
arpl
iret
loope
jae
adc
cmpsl
or
int3
mov
sbb
fcomps
and
sbb
mov
test
out
push
lahf
test
scas
test
mov
pusha
cmc
fwait
aam
xor
mov
pop
es
pushf
xor
enter
xor
lahf
xchg
sti
stos
fsub
cmc
fwait
fwait
repnz
adc
icebp
sbb
dec
idiv
popa
sbb
pop
xor
imul
push
push
push
ljmp
arpl
jnp
pushf
and
push
movsb
jle
xchg
cmp
subl
test
fdivrp
fst
jbe
xor
daa
repnz
filds
in
ja
dec
out
xor
call
kmovd
insl
sub
pop
sub
je
shll
sti
cmp
mov
mov
dec
mov
mov
lea
mov
mov
out
adc
push
pop
pop
cmp
mov
ret
iret
or
add
leave
and
in
minps
xor
push
rorb
out
sbb
jns
shl
aaa
cltd
xor
mov
mov
mov
xchg
cmp
and
xchg
mov
xor
or
xor
mov
notb
inc
and
cmpsb
pop
fucomip
add
cmpsb
test
iret
and
movsl
xchg
nop
in
sahf
mov
push
bound
mov
lret
pushf
add
lret
ss
pop
leave
test
jmp
mov
fwait
mov
xchg
mov
shlb
jmp
in
pusha
inc
adc
int
mov
cli
or
push
or
pop
mov
les
jl
in
push
out
push
jle
mov
push
mov
fsubs
xchg
or
je
jle
jecxz
adc
es
lods
popf
ja
inc
fwait
jge
inc
sbb
scas
shll
adc
test
sahf
bound
bound
jp
out
fcompl
inc
mov
jno
or
loop
fwait
cwtl
jns
call
mov
mov
movsb
inc
mov
cwtl
sub
mov
mov
push
ds
push
push
xor
sbb
mov
dec
or
out
pop
mov
xchg
clc
xor
xor
xor
xchg
xchg
adc
add
push
jo
jns
push
jns
loop
imul
mov
dec
mov
mov
cmpsl
sub
mov
jo,pt
mov
fwait
xchg
cli
push
cmpsb
xor
test
sar
sar
pushf
mov
movb
movw
mov
pushf
adc
lea
cmp
mov
push
shr
stc
cmp
add
stc
cmc
call
mov
repnz
add
lret
or
aam
push
push
sbb
dec
mov
xchg
mov
add
movsb
push
imul
mov
fbld
sbb
rolb
sbb
and
sub
xor
add
xor
test
push
cmp
repz
pop
inc
xchg
pop
repnz
fwait
ja
mov
mov
ljmp
rorb
test
addr16
and
out
mov
ficomps
cld
adc
jge
jno
out
sub
push
or
fstl
mov
cmpsb
out
jbe
neg
out
ret
fs
lods
pop
mov
testb
push
adc
insb
pmulhuw
loope
or
jns
fucomi
andl
xor
push
pop
orl
inc
adc
dec
dec
cs
popa
xchg
mov
jno
jo
test
cld
jle
sbb
pop
outsl
dec
test
push
sahf
pop
cwtl
cmp
repz
repnz
lock
outsl
cmp
xlat
jne
mov
fxch
out
aas
scas
sub
bound
stos
mov
pop
rorb
cmc
out
cmp
xor
mov
push
xchg
into
in
push
arpl
mov
sahf
orb
iret
js
jmp
mov
fisubrl
add
inc
das
pop
push
mov
cmc
xchg
and
adc
shlb
cmc
fidivl
jge
daa
out
jbe
stos
xor
pop
repnz
cmpsb
imulb
call
jl
jp
test
lea
lds
xlat
in
pusha
sbb
scas
lock
mov
inc
dec
std
popf
pop
pop
inc
movsl
dec
sbb
or
shll
adc
sub
out
dec
inc
ja
and
shlb
fwait
xchg
or
in
inc
and
aad
pop
xor
outsb
sbb
xor
mov
mov
push
mov
addr16
inc
xor
imul
inc
cmp
addr16
fbstp
push
adc
adc
adc
jo
loop
fwait
xchg
dec
mov
ljmp
outsb
add
jmp
std
aaa
and
into
mov
iret
push
sub
hlt
lahf
out
jge
fmull
into
add
icebp
sub
pop
scas
inc
sub
mov
data16
test
add
setae
push
das
cs
jle
movsl
dec
inc
add
dec
lock
inc
xor
jbe
stos
mov
mov
dec
cmpsl
loope
cmp
fwait
xchg
outsl
clc
gs
enter
mov
xchg
mov
or
mov
imul
and
lock
pop
xor
in
xchg
xchg
sbb
xor
mov
xor
cmp
mov
jg
outsb
mov
lret
add
push
fwait
sub
xor
cwtl
loop
ds
dec
adc
mov
hlt
es
xchg
clc
xor
in
jmp
aas
ficoml
icebp
in
cli
xor
lcall
and
and
scas
xchg
fdivs
sub
je
xor
in
jne
outsb
idivb
xchg
mov
inc
cli
iret
inc
mov
inc
popa
mov
adc
xchg
xchg
lods
imul
cmc
adc
shrb
mov
outsb
mov
cmpsl
movq
mov
fisubl
xchg
shlb
mov
jecxz
inc
lahf
incb
mov
call
fwait
xchg
jne
fucomp
jle
add
test
mov
jmp
ss
aad
or
pop
mull
jns
inc
lds
lds
dec
pop
mov
enter
loopne
jl
cld
or
mov
and
ficoml
sbb
fdivrl
cli
or
mov
sahf
mov
dec
fisubrs
mov
scas
xchg
adc
xchg
pushf
testl
jle
enter
mov
inc
mov
xchg
clc
or
aad
sub
lcall
lret
sahf
add
sbb
dec
jmp
fstl
push
pop
fwait
dec
ljmp
pop
pushf
xor
sub
xor
popa
pusha
xchg
mov
dec
mov
and
xor
adc
loopne
xchg
ss
lea
xchg
xor
sub
inc
mov
jne
ret
mov
push
inc
add
cld
xor
sbb
fstpt
test
pop
push
call
pushf
shlb
or
mov
adc
pop
pusha
add
ss
xor
fwait
xchg
das
popa
out
jmp
pusha
push
pusha
push
movl
call
jmp
movl
pushf
movl
mov
pushf
mov
push
lea
jmp
jg
pusha
pusha
movl
mov
pushl
call
jmp
pop
into
inc
adc
insl
jge
pop
std
pop
pop
jge
xchg
ljmp
dec
sbb
mov
ja
push
pusha
aaa
mov
andl
cltd
test
stc
push
push
and
call
sub
xor
loope
ret
mov
xor
push
push
leave
fs
sub
mov
popa
loop
imulb
into
mov
dec
or
cwtl
jne
movsl
scas
mov
nop
js
push
lcall
inc
clc
xor
pop
adc
out
cmp
and
sbb
sbb
xchg
ja
jp
fsqrt
mov
add
lahf
lret
add
dec
psraw
add
push
sbb
xor
mov
or
sub
add
sbb
pop
inc
dec
xchg
popa
xchg
sbb
ljmp
pop
movsl
icebp
cmpsb
mov
mov
or
or
and
sbb
cmp
lcall
iret
enter
lcall
jno
or
roll
xchg
lcall
sub
mov
test
push
mov
out
inc
jns
fwait
xor
jmp
adc
es
pop
js
inc
cmpsb
fwait
inc
jmp
lret
sub
or
or
push
xchg
cmp
cld
mov
icebp
push
sbb
mov
fidivl
push
cmp
je
cmp
add
dec
call
int
inc
lahf
and
jns
sbb
xchg
lds
pusha
pand
mov
xchg
xor
or
pop
incl
mov
mov
shll
icebp
mov
inc
inc
out
dec
mov
push
outsb
cs
mov
sbb
mov
sbb
popa
nop
pop
jl
out
gs
pop
xor
xchg
push
ret
ljmp
mov
adc
aad
and
push
shr
cmc
cmp
inc
xchg
jae
je
push
sbb
mov
dec
sbb
mov
pop
enter
mov
std
in
dec
in
lods
push
mov
imul
scas
arpl
push
mov
jle
std
push
add
lret
inc
jo
xor
fisubl
mov
leave
push
lock
stos
out
xchg
mov
icebp
insl
inc
xorl
xchg
dec
and
sbb
insb
rcrb
or
dec
in
xchg
cwtl
dec
sbb
sahf
jns
sti
dec
loop
add
out
jbe
bound
sti
movsb
stc
adc
mov
rclb
push
mov
push
push
scas
scas
sub
das
and
vpmuludq
shrl
push
dec
loop
hlt
jle
mov
into
mov
push
in
push
pop
sub
push
cmp
cmp
sbb
insl
mov
add
dec
pop
je
or
movb
cwtl
mov
mov
pop
insb
fstpt
sub
or
push
lret
movsb
mov
and
and
or
or
pop
fwait
and
mov
cltd
jns
ss
jnp
push
dec
fdivs
push
or
mov
sbbl
add
loopne
pop
jmp
xor
int3
movsl
inc
inc
ds
gs
sub
mov
aad
aam
pop
clc
sbbb
repnz
add
sub
jle
cmp
jo
sahf
mov
sti
cmp
inc
adc
loopne
bound
mov
inc
enter
test
lret
iret
shl
fwait
mov
loope
jecxz
mov
and
jb
cmp
mov
cmp
lcall
mov
pop
ret
dec
ljmp
jb
xlat
js
into
in
sbb
add
std
push
lret
cmp
pop
xor
cmp
je
pop
push
call
mov
nop
icebp
shll
jle
xor
adc
dec
cli
push
sbb
jb
inc
cmpsb
mov
pop
inc
xor
dec
shrl
add
fs
push
xchg
jmp
add
inc
aam
adc
dec
or
mov
xor
call
test
add
adc
shlb
mov
xor
stc
popf
leave
dec
call
xchg
out
sysenter
add
add
aaa
add
cmp
jecxz
adc
push
adc
fisttpll
leave
imul
sub
add
mov
mov
lahf
iret
mov
pusha
xchg
in
add
std
das
adc
add
imul
pop
mov
ret
xor
cmp
jg
push
push
movl
push
jmp
bt
pushf
mov
pushf
pushf
sub
jmp
sar
jmp
movsl
repnz
push
cld
popa
fstpl
movsl
es
xor
sti
pop
jae
mov
inc
jg
in
insb
test
push
sahf
movsb
cs
cmp
mov
mov
sti
out
and
cmp
fsts
insb
into
mov
inc
leave
pop
leave
dec
pop
in
mov
push
jmp
hlt
xor
dec
mov
jb
in
ret
jl
aad
in
adc
jnp
sahf
mov
das
xor
in
jno
jp
shr
shrb
mov
push
cmp
cmpsl
jge
pop
nop
aad
test
mov
or
lret
rcrb
push
cli
loope
test
fs
jge
pop
sub
ret
mov
insb
and
sar
xlat
adc
in
dec
xchg
loope
mov
cld
loop
fwait
mov
stos
or
pushf
fwait
dec
xchg
xor
mov
punpckldq
loopne
push
mov
jle
fcoms
enter
decl
and
outsb
sar
pushl
movb
mov
pushf
movl
push
movb
movb
lea
jmp
sbb
xchg
xchg
xor
sub
in
out
jno
sbb
push
jmp
fsubr
push
pop
test
jl
mov
adc
mov
loope
cmpsb
jmp
mov
push
pop
push
mov
mov
pop
jmp
negl
mov
adc
enter
sub
rclb
divl
mov
cmovne
dec
arpl
pop
and
scas
sub
push
push
pop
xchg
mov
jbe
xchg
inc
dec
jns
jmp
jne
jle
clc
shl
inc
xor
in
hlt
xchg
test
dec
addb
push
add
adc
cmp
or
sbb
xchg
pop
jnp
pop
lods
repnz
push
or
pop
loopne
stos
mov
xor
or
daa
or
cmp
mov
loopne
outsl
inc
mov
das
adc
jo
inc
data16
mov
pusha
in
sub
sub
adc
stc
aas
or
adc
inc
sbb
mov
add
jecxz
sub
scas
shlb
push
xor
cmp
adc
rcrl
and
cmp
or
lret
add
sbb
jae
push
ja
aam
in
jbe
test
xlat
shlb
test
rol
in
sahf
sbb
pop
dec
push
insl
cmp
data16
lcall
pushf
ja
push
push
cmp
out
daa
sub
jmp
lahf
in
jae
jns
aas
inc
pop
stc
jge
dec
cmpl
in
jg
or
xchg
jns
scas
push
test
mov
jns
cld
xor
mov
cltd
mov
ja
pop
sbb
arpl
into
sbb
mov
mov
test
jp
jg
js
sbb
enter
arpl
push
pop
dec
lods
in
push
dec
jmp
lret
push
and
test
cmp
push
icebp
xchg
lret
imull
xor
and
ds
cmp
std
bnd
inc
ret
aad
push
sbb
in
xchg
outsb
leave
mov
jmp
je
ljmp
test
xor
mov
jp
inc
adc
dec
sub
jno
outsl
mov
movsb
data16
movsb
adc
fsubrs
mov
xchg
mov
mov
bnd
mov
inc
push
int3
loop
xchg
loop
out
ljmp
clc
scas
xor
xlat
sahf
pop
pop
lea
xchg
push
fbstp
in
push
cmc
fcoms
sahf
cmp
pop
mov
lea
mov
cs
movsb
add
shrb
lock
inc
cmpsb
mov
fstpl
sbb
repz
fwait
les
sbb
lds
cld
leave
sub
or
pop
xchg
pop
fimuls
stc
cli
lods
sub
pop
adc
ljmp
jecxz
cmp
inc
das
xor
mov
or
outsb
dec
dec
sbb
xchg
add
lcall
sbb
fxch
dec
loope
scas
lret
mov
mov
cmp
lds
push
mov
test
mov
fisttpl
mov
lock
jno
or
sbb
mov
inc
shll
fldcw
testb
int
push
inc
js
mov
and
push
es
cltd
adc
out
fs
mov
sub
inc
xchg
adc
inc
repnz
mov
mov
cmp
xchg
dec
sub
sub
lea
insl
mov
ret
jl
in
in
test
aam
fwait
mov
in
mov
adc
xchg
nop
sub
sbbb
and
rclb
xchg
hlt
stos
dec
mov
and
mov
fidivrl
jae
stos
out
inc
lods
xchg
pop
jb
inc
test
pop
fnstcw
les
mov
cltd
adc
sub
pop
cli
lock
aas
adc
shl
call
into
and
lcall
pop
out
in
mov
out
les
das
les
lods
jge
fcompl
jle
jnp
and
cmp
les
insb
in
cmp
iret
sarb
or
hlt
push
xor
cwtl
mov
test
mov
push
aas
fdivl
fwait
xchg
stc
sbb
aas
shl
or
pop
jl
inc
fcomi
inc
jne
repz
scas
xchg
dec
xchg
mov
push
mov
std
lea
int
jb
and
jno
xor
dec
adc
nop
clc
jecxz
mov
inc
iret
add
fstpt
xor
ljmp
fisttps
popa
push
lret
imul
jmp
outsl
jmp
push
cmp
jae
test
int
shlb
cmp
mov
lret
add
mov
fwait
sti
loope
fnsetpm(287
mov
pop
mov
mov
int
xor
imul
icebp
cmp
cmp
cmpsl
ljmp
jne
aam
push
fstl
and
xchg
or
inc
popf
mov
pushf
pop
adc
or
or
xor
mov
arpl
movb
jge
cltd
sbb
inc
aam
sub
fwait
test
cmp
mov
fildll
sbbl
lahf
ja
jle
xor
dec
jne
pusha
mov
sbb
outsb
xchg
fwait
xchg
add
test
fidivs
fwait
test
xchg
jmp
leave
xor
xchg
icebp
aam
neg
nop
aam
push
shlb
inc
stc
cld
push
add
bound
movsl
outsl
sbb
cltd
mov
fwait
test
sbb
mov
pop
je
mov
push
adc
xchg
loop
fwait
test
cmp
sub
and
xchg
or
jl
loop
xor
lahf
stos
jb
mov
inc
jmp
test
dec
clc
mov
out
and
ljmp
xor
sub
cmpl
adc
int
inc
arpl
push
roll
jnp
int3
mov
pushf
inc
jns
mov
push
fwait
test
inc
add
rol
rcr
movzbl
movsbw
shr
lea
neg
mov
jmp
push
call
jmp
pusha
movl
pushf
push
call
mov
mov
sbb
lods
in
lds
jmp
pop
insl
lcall
sbb
push
cwtl
ds
push
je
cmp
enter
rolb
stc
jecxz
outsb
into
cmc
sub
mov
jg
xchg
adc
int
push
das
sub
ret
lret
in
fiaddl
or
xchg
cmp
stos
ret
out
fcmovbe
sbb
daa
test
adc
jp
cmp
xchg
push
inc
inc
iret
icebp
dec
or
out
dec
and
ror
lock
lea
icebp
or
aaa
and
push
andl
push
xor
cs
in
in
sbb
mov
add
adc
mov
in
fidivl
jle
dec
xor
leave
fists
cmp
pop
jp
cmp
add
std
dec
push
pop
nop
dec
movsb
inc
les
mov
xchg
loop
cs
add
orl
insl
shlb
push
mov
dec
sub
mov
rcrb
faddl
pop
push
xchg
movsb
sub
and
nop
sti
sarb
std
xor
dec
cmp
test
mov
movsb
xor
out
push
sbb
int3
add
fiaddl
inc
stc
cli
enter
add
jle
mov
das
mov
or
cmp
pop
sub
sub
out
or
adc
mov
mov
dec
sub
pop
gs
mov
je
jecxz
mov
inc
or
push
jmp
jecxz
mov
xor
jae
repz
testb
fwait
in
push
scas
adc
jne
hlt
pop
clc
cmp
adc
aad
mov
mov
ficomps
por
xchg
dec
jmp
mov
inc
movsl
aad
mov
inc
insb
mov
sbb
fs
xchg
insl
sbb
outsb
stos
cltd
andl
dec
stc
push
jns
adc
push
sahf
loop
out
lahf
xor
test
add
adc
arpl
cmp
push
jp
notb
inc
fs
push
mov
aad
mov
enter
fistps
in
jae
ret
clc
ret
movsb
pop
and
sub
mov
xor
gs
add
or
sbb
clc
cld
bound
repz
xor
add
cmpl
mov
xor
scas
xor
add
mov
lods
das
pop
cmp
mov
adc
dec
push
push
jmp
aaa
and
out
imul
rorb
outsl
mov
and
lea
fcoml
sub
je
mov
push
dec
in
pop
ret
adc
mov
push
in
jnp
mov
into
and
jmp
mov
or
popa
jp
mov
stos
test
pop
jbe
inc
hlt
mov
add
jnp
mov
sub
xchg
jb
popa
cmp
xchg
fxch
mov
cmpsl
cwtl
sbb
sbb
jbe
loopne
gs
jg
cmp
jnp
xor
fcmovbe
insl
pop
mov
push
decb
stos
repz
cs
fistps
mov
inc
adc
add
pop
adc
adc
cs
lret
mov
pop
sti
fsubrl
aaa
cwtl
stos
inc
or
insl
lds
leave
jmp
lret
daa
andl
adc
stos
fucomip
into
pop
lcall
dec
sbb
sub
or
ficoms
fmull
insb
inc
xchg
sub
add
out
dec
lods
hlt
andl
frstor
add
jg
add
dec
mov
xor
repnz
cmp
les
push
rorb
and
mov
jbe
xor
dec
jge
cltd
xor
xor
pop
pop
mov
cmp
adc
ret
aas
sbb
clc
sub
push
push
jg
bswap
outsb
sub
out
xchg
cmpsb
dec
and
clc
jle
daa
adc
push
add
repnz
out
ss
jmp
push
push
js
mov
negl
clc
int
call
stos
push
cwtl
mov
sbb
xchg
mov
push
outsl
jl
cmp
xlat
cmc
int
daa
daa
mov
addr16
and
inc
jne
je
jg
push
push
in
inc
or
enter
lcall
lea
mov
pushf
and
mov
mov
xor
push
loope
out
cmp
fbld
ljmp
pop
das
xchg
xchg
out
ror
ds
pop
xchg
loop
sub
imul
ja
popf
dec
imul
mov
sub
push
xchg
addb
dec
xchg
stos
jecxz
sub
cmp
fstl
mov
data16
sahf
dec
jg
push
ss
inc
jecxz
adc
xchg
mov
add
les
adc
lret
dec
imul
insb
adc
add
adc
push
mov
sarb
mov
mov
or
mov
push
pop
push
and
push
cld
push
add
mov
cmp
dec
and
sarl
rolb
jg
pop
push
mov
popa
ja
jp
into
in
sarb
in
lds
leave
daa
test
push
jle
stos
adc
push
int
mov
or
in
push
push
std
loopne
sbb
test
std
jne
jl
into
nop
push
jo
sub
int3
cmpsl
repz
push
lock
mov
adc
or
bound
xor
mov
jecxz
popl
popf
lds
sbb
pop
ds
xchg
mov
jmp
insl
adc
or
push
adc
cmc
add
popa
mov
lea
inc
and
pop
cmpsl
jnp
out
cmp
jnp
push
pop
loope
cli
and
lcall
aas
das
xchg
repnz
cmp
fdivl
adc
scas
push
mov
hlt
loopne,pt
and
mov
dec
popa
enter
jg
test
ss
dec
mov
mov
push
mov
test
daa
shlb
pop
mov
inc
and
pop
aas
push
rclb
gs
movsb
mov
jns
xchg
and
lds
push
sbb
push
push
mov
fwait
bound
adc
add
and
je
ficoml
mov
cmp
pop
xchg
stos
xor
test
jne
pop
push
sbb
je
clc
add
xor
outsb
andb
outsb
test
and
nop
dec
pushf
test
jl
sub
pushl
cmp
mov
mov
sbb
dec
push
xchg
andb
xor
dec
cmpsl
push
lea
sbbb
es
xor
out
xor
jmp
jmp
ljmp
in
xchg
or
sbb
mov
cmp
mov
mov
push
pop
hlt
lret
jns
inc
mov
leave
frstor
cli
ljmp
add
hlt
jb
out
movsb
fiadds
sti
test
insl
mov
sbb
pop
dec
xor
cmp
adc
mov
enter
xchg
jl
lock
pop
cmc
repnz
hlt
sbb
push
jnp
aam
je
or
dec
push
and
shll
cmpsb
sub
add
dec
jp
pop
out
sarl
ljmp
dec
fisubs
sbb
and
in
mov
push
pop
add
enter
aad
sbb
ret
xor
inc
jmp
pusha
cmpsl
and
push
cmp
xlat
jns
lods
push
mov
push
jp
fwait
jnp
push
pushl
movzwl
call
pushf
movl
pushf
movl
mov
pushf
movl
movb
movw
pushf
lea
jmp
in
adc
sbb
loope
push
xor
or
lock
pop
popf
mov
aad
xchg
aad
dec
mov
je
inc
stos
dec
ljmp
xor
pushl
popl
push
pushl
pushl
ret
jmp
xor
pusha
mov
in
push
sub
loopne
imul
insl
jb
xor
mov
xchg
shrl
adc
mov
and
cmp
out
outsl
dec
mulb
stc
cs
jg
xchg
xchg
call
mov
dec
in
pushf
arpl
xchg
in
inc
mov
pop
mov
xor
out
inc
sbb
pushf
gs
adc
in
lods
mov
movsb
insl
or
mov
insb
mov
jne
inc
arpl
fcoml
sbb
pop
cs
fs
add
lcall
jnp
fwait
shl
xor
pusha
mov
cmp
fwait
jp
shrl
fdiv
pushl
ljmp
jp
dec
jecxz
ret
cmp
mov
cwtl
shrl
pop
jne
push
push
jp
lret
xor
inc
lock
lods
xchg
push
jnp
and
jae
push
xor
mov
fwait
push
in
test
iret
loopne
xchg
outsb
cmpsb
and
xor
lea
je
inc
btc
call
jmp
call
push
lahf
clc
in
xchg
mov
sahf
add
out
in
mov
out
push
pop
xlat
inc
sub
pop
and
pop
inc
bound
mov
pop
insb
cmp
lahf
cltd
cmp
jo
mov
pushf
xchg
xchg
adc
test
pop
ljmp
push
and
into
nop
mov
adc
shrl
sub
xchg
cltd
in
mov
mov
push
sub
ds
sbb
xor
fcomps
inc
rclb
repnz
jmp
sbb
fsubr
push
loopne
jge
mov
mov
mov
jbe
add
in
add
and
testl
out
push
push
cmp
out
push
mov
fldt
xchg
add
subb
mov
rcrb
lret
sbb
out
mov
andl
inc
mov
mov
shll
nop
decl
jmp
add
mov
pushf
xchg
adc
iret
cmpsl
push
cmc
popf
faddl
dec
cmp
pop
fwait
sbb
lcall
out
filds
adc
push
xchg
stos
push
shlb
gs
loope
sahf
orb
aam
notb
cmp
aad
dec
mov
loope
jns
fists
cmp
jnp
inc
pusha
push
les
insb
cltd
loopne
dec
fldcw
loope
mov
pop
clc
cmp
in
sbb
add
fnstsw
or
inc
scas
test
jns
lret
inc
pop
mov
fs
out
cwtl
mov
mov
jge
push
iret
lods
fidivrs
mov
sbb
mov
xchg
mov
sahf
jbe
mov
insl
insl
adc
fwait
ja
and
pop
popa
mov
sbb
aad
sbb
inc
cmc
dec
and
sbb
clc
cltd
xor
pushf
mov
push
movl
pushf
lea
jbe
pusha
push
movl
push
movb
pushf
lea
jmp
dec
cmp
mov
test
mov
test
clc
jmp
push
push
pusha
movb
lea
jmp
clc
test
cmp
add
bt
test
call
aaa
inc
test
inc
faddp
or
jp
push
xor
dec
out
std
aaa
mov
dec
das
xor
cmp
aaa
xchg
icebp
aam
fistpll
add
arpl
jmp
scas
adc
stc
rol
test
mov
mov
sub
lock
fs
mov
sti
bound
mov
mov
mov
xor
ret
scas
inc
mov
pushl
adc
fiadds
cld
mov
popa
cmp
movsb
aas
dec
or
jg
lcall
mov
inc
insl
pop
jae
inc
inc
xlat
add
fwait
pop
xor
test
idivl
in
or
popa
mov
push
imul
faddp
arpl
xor
xchg
jnp
xor
movl
pusha
call
jle
pop
inc
pushf
mov
inc
mov
mov
enter
lret
jbe
test
cmp
pop
mov
inc
or
xor
inc
dec
pusha
add
add
lahf
scas
sbb
jo
mov
fnop
enter
jl
data16
test
dec
push
add
dec
ret
bound
ss
cwtl
repz
or
xor
popf
mov
push
add
cmp
mov
sbb
jle
cmp
dec
pop
pop
push
xchg
mov
adc
mulb
shrl
dec
push
jns
ja
into
push
push
push
pop
dec
mov
fsubl
pop
hlt
push
push
sti
mov
int
add
push
mov
jb
add
jl
loopne
jnp
add
xor
pop
sti
cmp
and
mov
iret
dec
xchg
sub
inc
xor
inc
movsl
cmp
jge
arpl
aaa
pop
pop
les
lods
loope
movsl
mov
xor
push
movl
push
push
call
movl
push
pushl
mov
lea
jmp
sub
btc
shr
stc
pop
mov
call
test
leave
add
pop
aas
mov
leave
enter
daa
push
sub
dec
rorl
arpl
pop
popa
cltd
mov
test
sbb
cmp
mov
add
clc
xchg
xor
dec
cmpsb
xchg
xor
popl
and
and
cmpsb
idiv
in
xchg
pcmpeqw
adc
test
cmpsl
dec
inc
push
fldenv
add
pop
movsl
jl
rcl
and
push
shrl
popa
dec
aas
fdivs
dec
outsb
fwait
mov
push
mov
std
inc
inc
add
jnp
test
inc
mov
in
in
dec
loop
into
imul
fistl
adc
aam
je
ja
stos
fildl
ffreep
rcl
sub
insl
into
in
lea
push
push
mov
fimull
xor
ret
adc
ds
mov
mov
inc
xor
sub
popa
inc
lods
subl
dec
sbb
cli
mov
mov
sbb
fldcw
sub
xor
inc
in
fidivl
in
fbstp
push
cmp
mov
call
sub
push
push
mov
lret
xchg
hlt
addr16
das
adc
cmc
push
jg
filds
pop
pop
ds
lahf
cld
repnz
out
jge
pop
add
mov
mov
lahf
sbb
inc
enter
fwait
test
cmp
push
leave
inc
cmpsb
mov
adc
xchg
xchg
and
sbb
mov
jns
fisubrs
iret
add
push
xchg
pop
bound
clc
inc
pop
stc
mov
xchg
pop
repnz
sahf
or
mov
popa
mov
ret
sahf
pop
aam
out
push
jmp
xchg
leave
sbb
scas
xchg
pop
adc
dec
pop
fsts
out
ds
cmp
ljmp
push
and
xchg
in
sbb
jle
ret
xchg
mov
add
fsubrs
fistpll
jecxz
leave
hlt
rol
mov
jnp
jge
fdivrs
cmp
pop
test
adc
inc
cld
imul
mov
fbld
or
dec
test
mov
cmp
xlat
mov
addr16
fsts
imul
pop
lret
sti
into
and
adc
mov
sub
adc
fisttpll
mov
repz
int
jb
xor
daa
lods
shll
cmp
insb
cwtl
enter
sbb
pusha
push
jo
out
xor
and
in
movsb
sub
mov
fwait
xor
mov
les
xchg
and
shll
fildl
or
inc
sub
sbb
lahf
jnp
test
mov
pop
outsl
scas
scas
pop
xchg
imul
sub
pop
js
js
ffreep
sub
test
out
inc
arpl
addr16
test
xchg
mov
pop
movntps
outsb
and
das
cs
add
hlt
adc
xchg
jb
out
and
fwait
jno
cwtl
scas
mov
mov
fsubrs
aaa
and
cs
xlat
xchg
dec
outsb
in
jle
filds
popa
in
lea
jnp
das
scas
js
das
aaa
mov
xchg
add
pop
xchg
xor
in
jle
jmp
daa
inc
cs
xchg
push
pop
roll
fwait
xchg
mov
dec
imul
cmp
in
sub
outsl
mov
insb
pusha
lret
call
cmp
loopne
jb
lret
jle
loopnew
cltd
aam
push
jecxz
fmul
cmp
ficoml
popa
push
ds
jp
add
neg
cmp
xchg
fsubrs
pop
add
and
mov
lret
call
push
iret
cmp
in
dec
loop
push
mov
cmp
xchg
mov
adc
cs
dec
jmp
subl
push
into
out
aas
mov
cmp
push
push
push
leave
and
push
mov
loope
sbb
ss
das
jb
xchg
jp
shlb
sbb
pop
mov
aad
mov
jno
sbb
jge
movsl
out
das
push
jp
pop
sbb
cs
xor
loop
xor
int
push
pushl
cmpsl
les
add
fwait
outsl
push
imul
js
pop
daa
cli
dec
mov
sub
cmp
aam
iret
not
xor
xor
lods
sub
sub
icebp
adc
sahf
mov
loopne
in
xchg
loopne
sbb
mov
or
stos
loope
and
subl
pop
stc
cmp
nop
mov
ds
xor
mov
aad
loope
add
pushf
bound
xor
push
push
pusha
push
movl
jmp
call
sub
pushf
stc
clc
xor
add
cmp
mov
sets
mov
bt
test
test
stc
movzbl
sub
pop
rcr
not
add
btr
sbb
mov
bt
pushf
mov
bt
bt
shr
call
call
cs
jne
dec
xchg
mov
inc
xlat
pop
cs
xor
loopne
sbb
sbb
fsubrl
pop
cmp
rol
dec
mov
pop
cmp
sahf
cltd
outsb
dec
gs
imul
adc
mov
idivb
repz
pop
ret
repnz
hlt
andl
mov
call
cmp
xor
push
test
lock
xchg
xor
or
fistl
fiaddl
add
dec
lcall
ljmp
lret
sbb
sahf
jno
mov
aam
ss
adc
jns
mov
lds
jae
scas
pop
mov
jecxz
call
push
fwait
outsb
enter
add
in
cmpsl
aaa
inc
dec
mov
mov
add
fwait
outsb
scas
loopne
jnp
pop
dec
pushl
add
xor
fsubl
adc
cmpsb
repnz
movsl
stos
mov
push
mov
mov
dec
add
imulb
outsb
call
inc
ret
fwait
sbb
imul
mov
ss
clc
lea
gs
rclb
sbb
imul
adc
cmp
ja
idivb
das
sti
lds
jb
mov
aad
mov
cmp
jne
fwait
outsb
fsubl
pushl
and
bt
add
movzbw
sbb
dec
mov
cmp
shl
clc
call
movl
push
pushl
push
pusha
lea
jmp
out
clc
movsb
add
outsb
cmp
or
xor
cmpsl
or
mov
sub
loope
push
ljmp
mov
inc
cmp
push
cld
pop
loope
xor
cld
stos
dec
mov
fdivrl
push
cmpsl
add
dec
sbb
xchg
lods
repz
jmp
inc
xor
add
shrl
jp
cli
movsl
je
dec
fwait
cmpsl
jmp
pop
lahf
ja
mov
sub
les
push
push
xchg
xchg
sub
mov
aad
aam
adc
mov
jge
mov
mov
xor
ret
insl
clc
cltd
test
bound
inc
addr16
iret
xor
daa
inc
xlat
pushl
lock
out
xor
clc
cmpsb
add
cs
push
jns
lods
jmp
lcall
std
fwait
insb
and
sbb
mov
push
xchg
jge
rorb
xchg
hlt
inc
and
ja
addr16
aas
jmp
jmp
or
mov
repz
insb
mov
jle
adcb
fsub
daa
lock
dec
mov
cltd
hlt
push
xor
jecxz
icebp
jmp
aad
xor
int3
divb
mov
xchg
lods
popf
cmp
cwtl
jo
dec
fstpl
das
xchg
outsl
mov
sbb
adc
xor
push
call
fisttps
sub
in
nop
mov
inc
xchg
dec
mov
test
ljmp
std
imul
insb
or
sub
jbe
xor
lods
sbb
jge
xor
popa
insb
fwait
push
ja
jnp
imulb
ja
clc
inc
lahf
stos
lods
js
cltd
fidivl
or
stos
stc
call
mov
pop
cmp
jae
popf
dec
aam
jae
lahf
data16
in
push
out
sub
sub
aaa
jp
or
sbb
jns
repz
inc
jne
cli
push
jg
rcrl
aad
add
inc
push
sahf
and
mov
jbe
je,pn
shlb
int3
std
inc
bound
cmpsl
adc
into
outsl
jg
push
inc
scas
xchg
inc
sbb
inc
aaa
push
add
nop
add
les
mov
inc
cli
test
loope
repz
xchg
fmul
push
inc
cmp
into
inc
inc
jmp
cmp
pop
loope
push
mov
dec
lods
mov
icebp
ror
lcall
jnp
ss
popf
ret
ja
in
dec
sub
sti
fwait
xor
fidivrs
jg
sub
in
and
js
jl
and
or
mov
fnsave
cmp
xor
out
jno
push
push
and
sbb
jnp
or
cmp
dec
xchg
add
loopw
imul
outsl
ljmp
push
mov
pusha
xchg
xchg
add
jb
imul
lods
fbstp
lock
xchg
loopne
pop
lcall
jb
paddsb
sbb
push
aam
mov
sub
push
cmc
jns
mov
sbb
shlb
int3
out
dec
sbb
cmp
adc
pop
mov
stos
loope,pn
filds
addl
shrl
loopne
loopne
pushf
jl
sbb
sbb
jo
adc
mov
sbb
ss
sbb
call
rclb
cmc
fists
daa
cmp
stos
nop
pop
jno
popf
pushf
mov
push
add
std
sahf
cmp
push
mov
or
in
dec
lods
pop
cmpsb
rcrl
in
cs
lcall
mov
pop
ljmp
sbb
mov
adc
mov
js
insl
sbb
nop
mov
shll
repz
sti
xchg
out
jae
mov
std
and
mov
xchg
in
xchg
movsb
inc
lds
mov
and
mov
popf
push
jecxz
dec
gs
cmpsb
mov
dec
push
sti
adc
pop
mov
lock
sahf
test
shll
push
loope
ret
push
mov
push
repnz
jo
loope
jnp
add
int
pushf
int3
outsb
mov
fdivrp
fdiv
minps
lea
andl
jle
dec
mov
dec
shll
movsl
inc
leave
push
sbbl
push
sbb
call
add
inc
xchg
ds
js
cmp
mov
pop
scas
enter
in
xchg
mov
in
shll
mov
andl
fdivrs
xchg
loop
push
outsb
xchg
xor
test
ljmp
mov
jno
in
mov
cmp
jae
ret
insb
push
xor
insb
rorb
xchg
loope
ds
and
lods
popf
mov
arpl
push
inc
or
lcall
fists
std
pop
shlb
cld
cmpsl
in
push
arpl
cwtl
daa
leave
daa
lcall
test
int3
xor
nop
int3
ret
xchg
pop
mov
adc
loopne
divb
fwait
push
push
inc
call
out
test
mov
mov
vaddsd
mov
dec
fstl
sub
ss
daa
xchg
lahf
out
fstl
jg
mov
stc
xchg
aaa
mov
out
adc
add
jg
pusha
add
jecxz
adc
cmp
or
cmp
stc
mov
addb
sbb
adc
jne
mov
test
fidivl
push
xor
data16
add
mov
pop
fisttpl
inc
in
adc
and
frstor
pusha
push
xchg
lods
fisttpl
fcmovnu
xchg
mov
fdivrl
das
shrd
das
arpl
popa
pop
movsb
mov
lcall
xor
xor
fnstcw
pop
pop
push
jne
out
dec
sbb
pmuludq
push
outsl
xchg
xchg
divl
mov
dec
push
dec
mov
jbe
gs
adc
dec
ficoml
sub
xchg
js
pusha
cmp
in
jge
iret
adc
jle
dec
or
adc
push
stc
mov
pushf
cli
mov
xor
push
insl
jge
adc
ret
jne
idivl
xor
dec
mov
xchg
call
dec
pop
mov
xchg
xlat
imul
fwait
data16
pushl
stos
dec
leave
inc
pop
aas
xor
xor
jb
xchg
test
shlb
cld
fwait
or
jns
xor
xor
test
push
mov
adc
test
jb
fwait
xchg
test
ds
xchg
sub
mov
or
or
sub
jbe
scas
mov
stc
mov
jmp
xorw
adc
inc
xor
xchg
imul
mov
cwtl
push
mov
fwait
data16
repnz
insl
rcll
inc
pop
xchg
js
movsb
pop
jge
leave
das
sbb
iret
inc
arpl
dec
pusha
bnd
xchg
rclb
movsb
adc
std
aaa
push
aas
inc
loop
jle
loope
aad
inc
fmull
cmpsl
jge
bnd
and
inc
mov
bnd
xor
adc
insb
mov
test
sahf
test
sahf
cmp
pop
sbbl
and
cmc
sbb
or
ficompl
push
xchg
inc
insl
mov
cli
inc
ljmp
aaa
or
jae
subb
jl
mov
shrb
stos
fwait
cmp
inc
xlat
lret
sbb
dec
nop
pmaxub
imul
jg
adc
add
pushf
pushf
call
mov
pushf
lahf
mov
push
movsbl
mov
pushl
pushf
mov
pushf
dec
sub
push
clc
clc
call
cld
xchg
int
std
cmp
fdivrp
popa
fstpl
sbb
xchg
hlt
or
popa
popf
push
push
dec
dec
push
outsb
adc
std
repnz
stc
call
mov
cwtl
stos
push
leave
or
pushf
xor
ja
orl
outsb
data16
push
jg
push
mov
jge
sbb
scas
mov
mov
lock
sbb
fiaddl
fs
jne
lret
ret
ret
fldt
pop
inc
fdivrl
ja
adc
mov
sub
jns
cmp
test
xor
cmp
cwtl
jg
xchg
out
imul
dec
popf
arpl
std
sub
cld
mov
push
push
fnstcw
lods
sub
gs
int3
inc
ss
jp
inc
test
sahf
and
lock
aaa
popf
dec
mov
dec
xor
fs
xor
mov
push
sub
loopne
ret
or
lock
push
push
cmp
leave
sub
into
and
pop
jnp
mov
call
in
cli
fsubl
and
sub
lock
jno
jmp
movsl
ja
jne
psubd
les
cmp
leave
insl
cmp
leave
shrl
jbe
push
aam
sub
pop
pop
cmp
jbe
rcrb
push
xor
push
imul
adc
lock
inc
push
test
push
pop
sub
add
hlt
jbe
mov
insb
mov
std
dec
lcall
cmp
gs
dec
shl
in
into
push
out
dec
adc
int
jne
insb
in
addr16
fwait
arpl
sbb
push
mov
fiaddl
adc
or
rcll
arpl
mov
pushl
mov
stos
pushf
sbb
jne
fwait
arpl
or
add
push
jle
inc
sahf
sub
mov
inc
push
sub
fwait
arpl
shlb
jmp
jmp
ret
daa
mov
test
mov
repnz
add
int
sbb
sub
insb
cld
int
rcrl
ss
sbb
mov
inc
mov
push
jne
sub
fsqrt
mov
inc
icebp
mov
repnz
inc
nop
leave
add
pop
mov
xchg
mov
pop
xorb
fdivrp
fdivrp
adc
sbb
cmp
fsts
xchg
in
ror
cmp
push
and
mov
mov
repz
lahf
nopl
sub
aas
shr
andl
cmp
loope
xor
jo
mov
js
jg
mov
push
dec
jb
add
ret
jmp
mov
push
scas
inc
mov
bound
add
sub
add
call
mov
jae
pop
pop
xchg
bound
mov
jp
xor
lock
and
inc
adc
push
jg
xchg
mov
push
les
inc
inc
hlt
add
push
cmp
push
xchg
jmp
lahf
cmp
pop
movsl
and
mov
movsl
jno
mov
cwtl
lret
jno
dec
orb
gs
inc
dec
dec
faddl
jecxz
pop
shlb
sbb
cwtl
mov
aas
hlt
push
repnz
sbbl
pop
insl
in
xor
mov
out
es
xchg
mov
add
xchg
fsubs
or
cld
sub
out
testl
lcall
lret
cmp
ja
rep
cmp
mov
fsubrp
mov
jmp
in
inc
in
xor
shlb
daa
fldcw
xor
adc
pusha
lahf
in
mov
push
pop
fcomps
mov
pop
addr16
iret
dec
test
and
mov
push
mov
inc
adc
shl
repz
sub
movsb
inc
add
lods
lods
inc
js
pop
mov
ss
cmpsb
subl
pop
mov
fwait
imull
out
test
insl
or
fistpll
inc
clc
loope
add
jcxz
sub
into
and
gs
ljmp
ss
fcompl
inc
sarb
shll
shlb
test
jns
cld
adc
mov
testl
pop
jp
das
repnz
pop
test
push
test
das
leave
mov
sbb
aas
out
sbb
repnz
loop
sub
sub
push
loopne
sbb
cmp
fbld
aam
xor
mov
enter
push
pushf
lock
inc
dec
gs
int
int3
iret
loope
and
jns
push
jns
inc
xchg
mov
pop
ja
pop
jmp
xchg
lahf
scas
push
push
xor
rorb
jns
jmp
das
test
enter
imul
cmp
test
and
push
sub
cmp
push
in
test
fwait
les
and
mov
cmp
mov
jp
and
xchg
mov
jl
pop
lods
push
xchg
dec
lods
popa
inc
mov
pop
scas
mov
ss
xchg
push
int
sbbb
ret
or
push
lcall
imul
fnstsw
ja
mov
push
insl
mov
adc
loop
out
jae
sub
stc
mov
mov
inc
loop
aas
sbb
hlt
nop
lahf
loopne
sub
push
jg
lret
dec
push
pop
jbe
ljmp
dec
adc
lods
loope
cmpsl
inc
in
mov
xchg
jne
int3
daa
je
mov
rorb
lods
adc
or
cmp
inc
ja
cmp
push
mov
fsub
push
in
into
cmp
xchg
inc
mov
adc
popa
cld
add
ss
and
cmpb
cltd
aaa
loop
jle
mov
cmp
xchg
add
hlt
push
fsubl
cmc
addl
cmp
aaa
sarb
jmp
cli
cmp
ret
push
ja
jmp
adc
push
push
mov
inc
and
aaa
pop
mov
mov
jo
xchg
repz
push
loopne
dec
loop
dec
xchg
inc
fsub
lea
test
cmp
in
lods
repnz
lock
push
aaa
aaa
mov
stc
daa
mov
inc
repz
add
jb
rolb
add
xchg
in
aaa
ds
addr16
data16
cld
jg
fprem1
adc
mov
push
xchg
fistl
andb
aad
jl
xchg
xor
xor
cmp
cmp
mov
mov
jns
pop
xor
or
or
adc
repz
es
sub
lret
add
mov
push
cltd
or
pop
cltd
xor
sbb
scas
or
xchg
scas
pop
incb
cli
inc
adc
mov
push
xor
imul
add
aas
push
nop
scas
xor
jnp
xchg
sbb
dec
jo
jo
out
or
notb
loope
fsubl
ja
repnz
imul
mov
jmp
cmp
aam
mov
pop
xor
fstpl
mov
xlat
pop
sarb
pop
pop
push
jg
adc
or
out
enter
pop
lea
nop
jg
dec
sub
push
std
clc
and
sub
jbe
adc
pop
mov
mov
xor
jo
xor
scas
std
xchg
add
add
mulb
movsl
add
pushf
add
pop
fwait
jnp
add
push
add
xlat
js
imull
inc
push
mov
lret
stc
cmc
ret
cmp
sbb
fnstsw
cmp
pop
cmpsl
adc
sub
enter
fwait
mov
pop
jne
dec
xchg
pop
adc
pop
or
pusha
lea
jne
movzbl
pusha
movw
movl
pusha
mov
setle
mov
lea
call
cmc
stc
neg
push
jmp
out
loopne
sbb
sub
adcl
fisttpll
mov
std
arpl
sub
pop
cmp
fcomi
negl
daa
pop
xchg
sbb
and
ret
jle
jl
jle
adc
loope
and
adc
cmp
jge
fs
das
push
mov
dec
and
loopne
sbb
addr16
sbb
loop
inc
mov
cld
mull
xchg
lret
dec
add
repz
jp
jle
mov
iret
movsl
xlat
jecxz
std
out
faddl
mov
sub
rclb
xor
pop
pop
les
jnp
mov
mov
mov
add
push
stos
lret
sahf
mov
jo
jecxz
xor
and
bound
mov
xor
pop
je
mov
mov
mov
xor
sbb
fwait
pop
or
idivb
aad
dec
ja
scas
jo
lret
add
xor
jmp
inc
test
cmp
dec
lods
outsb
jg
mov
lahf
fsubl
int3
jecxz
and
icebp
jb
xchg
adc
outsb
out
pop
adc
push
pop
cmp
xor
loopne
mov
rcl
cld
jne
pusha
cld
dec
out
mov
movsb
jnp
fsubrs
push
lcall
xor
mov
ss
push
dec
cmc
out
fidivrs
mul
cmp
mov
in
dec
xchg
int3
sbb
jmp
lds
sbb
jge
add
iret
xchg
outsb
mov
add
cld
addr16
push
stos
imulb
lock
test
dec
dec
fdivrs
inc
jne
lock
fldl
aad
loop
cmp
jmp
out
ss
jb
ja
scas
push
cmp
inc
mov
push
adc
shlb
insb
add
cltd
add
mov
inc
mov
popf
and
mov
jo
add
dec
xchg
push
cmp
and
and
and
fists
push
scas
or
outsb
leave
mov
aas
xor
jae
in
icebp
mov
mov
mov
out
in
dec
out
push
and
pop
out
cmp
lcall
xor
cmp
mov
xor
dec
sbb
notb
inc
test
aaa
or
sub
adc
cwtl
divl
and
jg
push
mov
jg
add
xchg
add
fs
loope
scas
inc
mov
out
dec
das
mov
sbb
jb
out
out
pop
mov
les
jmp
pop
stos
test
cs
divl
add
imul
int3
or
mov
enter
mov
jae
gs
jecxz
bound
xor
cmp
jno
jg
xor
les
fisubrl
ds
lds
es
or
dec
and
lds
inc
sbb
imul
push
scas
sub
jbe
sti
add
cmp
icebp
cld
ret
and
mov
pop
fbld
xchg
lahf
test
mov
cmp
xchg
iret
rorb
lea
xchg
xor
jge
dec
shl
sbb
inc
lret
jecxz
mov
lahf
jmp
rcrb
sbb
add
andb
inc
inc
mov
add
out
or
nop
insl
jnp
cltd
inc
xchg
daa
pop
out
lcall
in
jne
inc
push
mov
jg
leave
xchg
ret
stos
or
mov
dec
hlt
inc
adc
fs
jae
or
ljmp
fwait
cltd
aam
push
dec
out
outsl
es
mov
cmp
arpl
es
cmpsb
dec
es
mov
lahf
sub
push
push
adc
daa
ret
sarb
adc
push
lea
int3
sbbl
inc
mov
jno
fs
mov
imul
std
les
mov
add
push
mov
cs
aam
push
dec
xor
adc
ja
into
and
stos
push
pop
ret
mov
pop
ss
popf
adc
popa
mov
and
or
fwait
pop
jb
add
inc
and
shlb
movl
mov
pushf
pushf
movw
lea
jmp
in
push
je
mov
mov
mov
cmp
mov
into
xchg
or
insl
mov
pop
inc
add
jb
cmpl
cmp
fdivs
mov
mov
push
mov
mov
lahf
dec
add
add
push
add
adc
sbb
cmpsb
inc
lods
ss
pusha
imul
mov
mov
add
insl
sub
push
insl
insl
push
mov
mov
mov
xorl
in
fwait
sti
dec
mov
dec
cmp
mov
stos
dec
sub
mov
add
add
mov
dec
pop
clc
loope
jo
or
mov
outsl
cmp
mov
lret
mov
xor
jbe
jnp
sub
sbb
push
sub
mov
aam
xor
insl
sar
xchg
jbe
std
movsl
sub
and
adc
inc
jle
add
jae
int
test
add
push
ret
or
sub
iret
rclb
mov
out
ret
sbb
mov
jo
mov
sahf
cmpsl
jg
addr16
lret
addr16
int
in
or
fwait
inc
push
xor
ret
into
fdivrs
cs
mov
sbb
je
cmp
loopne
bound
mov
adc
inc
rolb
mov
cmp
rorb
addr16
jmp
fmul
adc
gs
mov
xchg
push
jecxz
sub
mov
mov
push
push
dec
fwait
cli
mov
push
cmpsl
andb
out
jecxz
mov
cltd
bnd
in
rcrb
and
jae
xchg
movsb
inc
jl
int3
lods
cmp
out
xchg
stos
dec
mov
in
or
adc
js
fs
cltd
clc
mov
mov
mov
clc
and
filds
in
or
and
push
xor
int
cwtl
test
das
imul
in
xchg
call
pop
popa
add
insl
scas
mov
cs
cli
xlat
and
inc
cmp
test
pop
jae
in
out
inc
stos
fisubrl
shrb
test
clc
negb
fwait
and
push
pusha
dec
or
mov
cwtl
sti
xor
cwtl
dec
xchg
cmp
or
sarb
sub
in
lods
addr16
xor
jo
mov
outsl
into
in
add
pop
cmp
rol
jbe
add
jp
in
xor
aas
sub
pop
mov
rorb
es
mov
jnp
sub
sbb
lods
ds
pop
fisubl
sub
mov
jg
outsl
xchg
pop
and
movsl
mov
dec
mov
mov
and
xor
nop
nop
add
dec
lea
push
or
popa
inc
mov
je
dec
xor
xchg
adc
repz
mov
dec
mov
push
jmp
sub
outsb
sub
repz
xor
adc
lods
or
mov
not
movnti
inc
enter
add
imul
inc
movb
jge
xor
dec
sub
pusha
xchg
mov
xchg
imul
adc
add
or
pop
sub
cmp
push
iret
iret
scas
add
xor
scas
add
lea
mov
out
out
addr16
push
mov
sbb
cmovno
adcb
adc
pusha
jnp
dec
jbe
aad
dec
pop
daa
ret
inc
fwait
push
ss
flds
dec
jnp
xchg
push
cs
push
ret
in
sub
nop
jmp
popa
aad
cld
xor
mov
pushf
push
pusha
lea
jmp
pusha
push
movl
pusha
push
pushf
lea
js
push
push
lea
jmp
cmp
clc
call
pushf
movl
call
and
jmp
in
insl
lods
mov
adc
xor
mov
pop
int3
mov
push
inc
adc
sub
mov
lret
div
rclb
add
loope
neg
mov
data16
push
inc
adc
dec
push
xchg
test
mov
dec
ffree
pushf
fidivs
mov
pop
fmuls
mov
add
insl
fists
loopne
jle
ds
mull
inc
cmpsl
repnz
mov
xchg
pop
xchg
push
fucompp
ret
mov
and
pop
in
insl
adc
faddl
jb
iret
or
clc
push
xor
push
sbbl
cmpsb
dec
fnstcw
mov
sub
mov
leave
add
ds
sub
adc
pop
push
adc
cmpsl
mov
pushl
cmpb
aas
jg
ss
jnp
mov
xchg
and
pop
lods
stos
dec
aas
push
ljmp
pop
lea
subb
cmp
lret
mov
push
xchg
subb
mov
sub
out
jl
push
xor
leave
pop
cwtl
and
xor
push
push
test
sub
jg
fcoml
jb
add
sbb
mov
ret
rorl
int3
cmp
popa
mov
sub
pop
sub
popf
insl
mov
mov
sbb
mov
xchg
negl
push
xor
inc
cmc
fwait
lret
sahf
ss
repnz
xor
in
outsl
add
dec
lahf
std
repz
repz
mov
sub
cmp
lahf
imul
sub
aas
mov
aam
scas
adc
in
xlat
sbb
iret
stc
mov
test
push
push
dec
in
mov
mov
dec
xorb
fs
stc
xchg
fnstsw
cmp
mov
mov
mov
mov
sub
push
test
mov
adc
pop
mov
rcl
xor
fnstcw
push
sbb
sti
sub
fdivs
jecxz
adc
mov
hlt
adc
push
aaa
or
mov
and
lsl
sbb
push
xchg
mov
out
push
icebp
dec
sbb
and
jns
mov
in
cmpl
and
push
es
jb
and
xor
sub
sbb
mov
and
or
push
stos
and
imul
push
sub
test
lret
imul
dec
aas
jp
cs
push
cld
icebp
and
mov
inc
repz
sub
dec
mov
cmc
popf
outsl
mov
adc
jmp
dec
xchg
jae
aam
dec
dec
mov
push
fs
int
pop
mov
push
insb
or
mov
fadd
add
cmpsl
pushf
xchg
imul
test
dec
outsl
test
push
pop
rol
fidivl
iret
and
lcall
lea
sub
scas
sub
in
repnz
and
mov
lahf
push
push
imul
ljmp
jl
sbb
sub
mov
inc
mov
adc
push
and
insl
inc
sub
mov
dec
or
outsb
test
mov
lret
pop
cltd
lahf
lcall
ret
aaa
adc
inc
fidivrl
jne
jle
fcmovu
mov
mov
ficomps
loopne
jg
ss
xchg
push
out
jne
jbe
pop
xchg
mov
idivb
push
dec
adc
lea
bound
aaa
scas
clc
test
mov
xchg
es
cmpsb
mov
sti
dec
movlps
push
fstl
push
stos
mov
outsb
jbe
leave
push
test
fwait
xchg
int3
push
pop
inc
ds
loope
addb
inc
xchg
rorl
clc
aam
mov
push
pop
inc
dec
mov
add
push
cltd
xchg
aas
bswap
sbbb
sub
xor
sub
add
inc
mov
negb
repz
dec
sub
xchg
icebp
daa
pop
mov
cmc
mov
out
ss
std
mov
gs
and
mov
dec
or
das
fdivrl
and
jno
out
mov
mov
sbb
bswap
jne
ljmp
fdivr
sub
rolb
jp
push
dec
stc
outsb
or
hlt
out
xchg
dec
mov
dec
dec
inc
adc
and
rorb
mov
push
pushl
lea
jmp
cmpsb
sub
pop
jno
push
test
push
leave
adc
sub
rcr
jge
sub
xor
cmpsl
outsb
ljmp
jge
sub
test
jbe
pushf
mov
sbb
push
pusha
mov
sub
push
sbb
mov
xchg
jl
mov
imul
movsbl
ror
mov
jmp
push
pusha
movl
push
movl
pusha
movb
push
pushl
lea
jmp
pushf
movb
call
mov
pushf
movl
pusha
lea
jmp
push
movl
movb
lea
jmp
aad
adc
jecxz
mov
fdivr
push
mov
pop
push
cltd
test
push
sub
aaa
and
xor
arpl
sahf
les
and
insb
sbb
movb
dec
xor
pop
pusha
cli
jno
pop
cmp
mov
xlat
sub
ss
scas
pusha
lret
and
jmp
notl
sub
loopne
push
or
hlt
cmc
cmpsb
int3
enter
pop
cld
and
mov
sbb
jns,pt
adc
dec
iret
sub
loope
stc
push
xchg
inc
stos
les
popf
and
ja
movsl
sub
cmp
stos
pop
xchg
pop
scas
scas
push
daa
mov
test
sbb
lret
sahf
sub
filds
dec
lcall
mov
push
sub
cmp
mov
pusha
xchg
mov
dec
int3
xor
inc
in
add
shrb
dec
sbb
jge
arpl
adc
in
xor
fwait
cmp
pushl
jne
stc
pushf
and
fwait
dec
icebp
xchg
push
jno
mov
sbb
adc
ficoml
in
aaa
pusha
jo
fidivs
fwait
dec
cmc
insl
adc
cmpsl
repnz
lods
sbb
addr16
nop
xchg
cli
in
pop
inc
imul
pop
mov
sbb
ror
mov
iret
jnp
lahf
adc
aad
pushf
lea
call
xlat
adc
xor
mov
and
into
scas
clc
mov
test
ds
xorl
ffreep
xor
daa
loope
mov
xchg
shl
cld
push
arpl
adc
adc
jnp,pt
sub
push
iret
ja
or
arpl
fisttps
dec
and
cmp
ss
scas
fwait
lds
test
jg
lahf
add
add
adc
pop
repnz
push
in
loope
inc
in
sar
add
test
adc
outsb
pop
push
ss
cmp
sub
clc
loope
mov
push
in
icebp
rolb
insb
js
icebp
cli
add
fcmovnb
inc
addr16
gs
leave
std
mov
push
push
arpl
mov
inc
hlt
leave
jmp
fnstsw
add
jae
dec
sub
es
dec
push
addr16
and
ret
das
jbe
mov
into
jle
dec
loop
imul
ret
jle
jno
shlb
sub
jb
shlb
fsubrp
push
xorl
fwait
out
fisttpl
cmp
lods
movsb
jnp
rcrb
addr16
sbb
push
pop
add
dec
mov
mov
clc
or
mov
cs
jae
or
test
push
inc
mov
frstor
lods
ljmp
movsb
add
xchg
cmpsb
or
sub
imul
dec
add
test
cli
pop
mov
stos
cwtl
cmp
cmp
add
push
mov
popaw
pop
add
pushf
adc
testb
xor
and
rcr
lcall
stc
xor
rclb
mov
and
dec
mov
jge
push
xor
in
cmpsl
jge
pushl
xor
add
fwait
dec
aaa
bound
fadd
mov
and
bound
lods
or
jae
fisttpl
jae
movsl
mov
fwait
dec
into
pop
add
out
inc
adc
js
dec
push
jl
jge,pt
loop
outsb
fdivrs
int
cmc
fistl
pop
jl
stos
into
add
sub
subl
loop
call
in
add
fwait
dec
add
adc
pop
mov
data16
inc
push
push
rcl
mov
mov
jge
fldt
xchg
outsl
jge
inc
dec
mov
push
pop
in
push
fildl
scas
cmp
mov
std
jle
repz
int
mov
push
and
add
addl
out
mov
lcall
pop
inc
push
sub
xchg
lods
ja
dec
ja
das
adc
fistpll
xor
push
pushf
pushl
movl
jmp
bt
cmc
cmp
add
bt
xor
jmp
pusha
pushf
pushf
movl
call
add
shld
clc
rcr
and
bt
mov
clc
shr
stc
movb
call
jmp
xchg
push
sbbb
mov
fcoml
fists
mov
jns
mov
rclb
aam
push
mov
into
push
loop
mov
cli
jg
sbb
lahf
mov
icebp
pop
in
xor
mov
scas
xchg
jg
sbb
jb
in
or
jle
xor
loope
cmp
mov
xchg
imul
cld
mov
loope
mov
jbe
scas
xchg
inc
jne
lcall
cmp
sbb
fwait
dec
insb
jmp
lods
enter
cmp
xchg
insl
out
sbb
xchg
sub
mov
in
sbb
and
add
xchg
cmp
sti
sbb
int
inc
and
fwait
inc
repz
jne
es
xlat
hlt
inc
ret
sarl
fwait
dec
leave
and
lock
lahf
inc
xor
push
and
es
add
popa
cmpsl
lods
xlat
add
les
mov
xor
pop
cmpsl
xchg
stos
in
cmp
jl
mov
lret
jbe
pop
adc
pop
pop
inc
test
xchg
inc
clc
inc
xchg
push
push
into
jp
mov
cwtl
daa
push
hlt
jg
sbb
or
test
fstps
pop
sub
inc
enter
inc
and
or
jno
je
lea
jmp
xor
push
outsb
lcall
jl
inc
sub
stos
mov
enter
adcl
pusha
adcb
inc
jns
lret
inc
arpl
sti
hlt
add
clc
xlat
cmpsb
out
test
ja
mov
sbb
sub
inc
je
xchg
sbb
add
xchg
icebp
sti
pop
dec
pop
inc
jo
jns
sbb
pusha
lcall
mov
mov
adc
les
dec
sbbl
outsb
pushf
jp
mov
or
mov
in
leave
cli
dec
jns
bound
push
fcompl
mov
fdivs
or
insb
mov
add
stos
inc
lock
adc
hlt
cli
adc
add
pop
cmp
pop
add
rcrl
unpcklps
jns
test
add
inc
loope
sahf
repz
jae
mov
adc
das
xchg
es
mov
loop
sub
and
inc
insb
jns
mov
jle
stc
mov
jp
push
sbb
inc
inc
mov
fldt
fs
lret
iret
xor
cltd
jp
clc
dec
loope
sbb
out
ror
jp
mov
enter
notl
mov
jbe
mov
push
cmp
enter
inc
xorb
inc
shll
push
addr16
int
and
xor
pop
clc
decb
das
xchg
test
jp
int
loop
jl
lret
adc
in
lret
xlat
std
shl
outsl
dec
addr16
adcl
add
sbb
mov
xor
push
arpl
lock
nop
cltd
lcall
sbb
push
sub
stc
cmp
sbb
sbb
jno
xchg
push
movsl
jae
test
loope
addr16
pop
mov
stos
pop
lcall
lcall
inc
inc
and
sub
pushf
lea
jmp
push
pushf
movl
call
cmp
scas
in
mov
mov
cmpsl
push
fisubrs
xchg
jnp
dec
rcrl
dec
test
cltd
in
mov
cmp
in
push
jl
test
scas
pop
mov
negl
inc
cmpsb
push
sti
cli
add
fs
dec
jo
imul
into
xor
xchg
sbb
testl
jne
ds
xchg
jb
sbb
push
in
scas
lahf
scas
sub
dec
add
inc
cmp
pop
cmp
shll
daa
fwait
mov
lds
fnstcw
inc
or
xor
mov
xchg
leave
or
nop
repnz
jg
es
nop
and
shrb
sbb
pop
imul
sub
out
jle
stos
or
jns
hlt
popf
loopne
jl
aaa
cmp
inc
imul
mov
pusha
or
pusha
cmp
add
push
mov
jmp
pop
test
push
negl
pop
inc
mov
outsl
inc
xlat
jle
dec
stos
mov
mov
int3
lcall
push
lret
pop
mov
pop
and
popf
sysret
ret
pop
inc
push
and
and
sbb
inc
insl
and
ret
pop
pop
orb
dec
test
adc
lods
movsb
add
lcall
jl
arpl
sub
nop
jno
jge
mov
ficompl
test
mull
shlb
loope
out
loopne
mov
cltd
fld
adc
sbb
xor
pusha
mov
adc
sbb
test
xlat
push
in
rcl
sub
shrl
sub
pop
sbb
push
outsb
hlt
mov
push
addr16
mov
push
in
fwait
inc
ja
adc
inc
cmp
pop
arpl
dec
xor
and
test
stos
jmp
add
add
in
movsl
rolb
sub
dec
test
jns
and
xchg
xchg
sbb
add
cmp
jo
stos
xchg
mov
dec
mov
daa
sub
ljmp
sbb
std
add
cli
cltd
or
jecxz
inc
xchg
mov
inc
inc
scas
pop
notl
xlat
inc
loope
or
push
dec
xor
push
aam
movsb
stos
icebp
pop
stos
mov
clc
pop
iret
xlat
daa
out
jb
jae
xor
dec
jo
xor
fstps
outsb
and
cmp
cmpsl
movb
inc
fcmovnbe
test
push
xchg
pop
xor
pop
add
stos
add
sbb
mov
loop
insb
xchg
sar
dec
in
sahf
dec
lods
leave
sti
xor
jge
xchg
leave
movsb
cmp
out
sub
jmp
std
dec
loop
add
pushl
pop
sub
mov
das
jbe
bound
dec
lret
test
cmp
test
mov
adc
pop
xchg
aaa
addr16
jl
mov
les
sti
pop
mov
iret
mov
or
lods
cwtl
sbb
xor
xlat
mov
iret
push
mov
pop
sub
push
cwtl
adc
and
iret
repz
fdivrl
mov
push
mov
or
sbb
call
cmp
lcall
pushf
xchg
faddl
jg
cld
into
xor
jb
push
int
and
repnz
lahf
push
sbb
cmp
fldt
push
mov
mov
imul
mov
test
pop
aad
pop
outsl
in
fdivs
loop
scas
stos
lods
cld
sbb
fs
cmp
addr16
jl
out
or
lea
repnz
sti
cmc
mov
jp
pop
mov
xor
arpl
push
mov
sahf
mov
push
jmp
xchg
loopne
icebp
adc
push
mov
lds
stos
push
mov
insb
movsb
adc
test
dec
sahf
mov
aaa
sub
cwtl
sbbb
jg
sbbl
or
sub
ds
mov
sub
xor
jle
dec
call
and
jno
jnp
ljmp
insb
or
xor
pop
stc
outsl
inc
mov
xchg
stc
insl
test
sbb
inc
and
inc
jb
jns
insl
ds
dec
into
test
out
loop
sti
ljmp
stos
test
lcall
mov
fs
inc
arpl
mov
push
xor
pop
hlt
push
lock
mov
je
cmpsl
jmp
mov
push
loop
pop
ret
out
stos
or
jno
sub
repz
add
rdmsr
xor
lahf
rcrl
mov
push
lret
mov
nop
pop
xchg
xor
mov
push
push
popf
mov
leave
dec
push
jmp
arpl
mov
sahf
mov
and
xchg
repz
stos
iret
push
mov
inc
bound
neg
mov
das
dec
mov
sub
xor
loopne
enter
add
adc
mov
test
adc
fldt
scas
mov
in
sub
dec
sub
lds
push
lds
ret
push
xor
cmp
dec
jg
adc
push
jae
dec
or
insl
fsubs
or
jo
and
das
xor
cmc
aad
movsb
mov
pop
bound
xor
dec
rcrb
das
dec
sbb
jb
cltd
inc
sub
pop
jne
lds
pusha
stos
inc
dec
jne
repz
test
pop
fst
lds
cmp
push
pop
lret
rcr
jbe
or
or
negb
cmpsl
call
inc
loope
mov
daa
lock
sbb
add
test
cmp
cmpsl
sbb
sub
inc
rol
shr
pop
stos
sub
push
fs
mov
jl
enter
les
cmpsl
out
pop
pop
inc
pushf
xchg
sbbl
dec
pop
outsl
bound
sub
xchg
leave
lock
out
in
mov
sub
pop
push
xor
shlb
out
inc
mov
or
gs
add
cmp
jne
roll
pop
sbb
leave
shlb
fwait
ds
clc
jno
add
test
xor
push
movw
add
shr
sbb
movzbl
sar
shr
das
movsbl
mov
bt
bt
stc
or
rcr
bswap
push
imul
clc
movzbl
neg
ror
add
xor
lea
pushl
test
pushf
add
clc
call
pushf
movl
pusha
movl
jmp
push
rol
dec
test
or
stos
jg
cld
push
out
sbb
mov
aaa
inc
sar
movsl
xor
das
lcall
ret
repz
add
outsb
faddl
jge
and
pop
and
incl
loopne
fwait
push
mov
mov
pop
inc
js
push
cmpsb
std
das
out
and
icebp
mov
pop
xor
insl
mov
mov
xchg
das
inc
faddl
dec
cmpsl
movsl
cld
repnz
push
xor
insl
gs
jl
por
loop
sbb
cmp
out
xchg
push
outsb
push
das
leave
pop
push
mov
repnz
movsl
push
scas
sahf
stc
push
fsubr
mov
stos
movsl
pop
and
xor
dec
pop
cmc
add
push
dec
stc
lods
popf
or
mov
xchg
jno
test
jnp
push
ljmp
stos
sub
fwait
cmp
mov
pop
mov
test
cmp
pop
mov
mov
icebp
movb
push
movl
pusha
mov
pushf
lea
jmp
les
and
cmp
rcrl
pop
ljmp
insb
inc
enter
hlt
shl
ret
mov
jle
pop
mov
lcall
lret
insb
inc
enter
xchg
jg,pn
imul
cli
pop
ljmp
das
std
xchg
jns
call
pushf
ja
sub
and
icebp
aaa
icebp
into
xor
pop
mov
mov
outsb
aad
and
and
insl
push
outsb
out
sti
ret
or
bound
ret
push
fimull
arpl
loop
addr16
pop
mov
inc
lahf
mov
fimull
jbe
xchg
jnp
mov
fst
jecxz
scas
popf
ret
repz
or
stc
mov
cltd
inc
inc
sub
pop
movl
mov
stos
or
sbb
mov
sbb
xor
test
and
mov
adc
andl
mov
push
sbb
pop
int
fsubs
adc
jg
lods
test
out
mov
mov
cltd
pop
cmpsl
inc
pop
cmpxchg
pop
cmp
dec
pushf
cmp
xchg
adc
jg
ljmp
loop
test
push
cmc
jp
and
jo
push
daa
lock
adc
insl
jmp
push
or
xchg
push
adc
xor
gs
xchg
loope
pop
and
shr
mov
push
outsb
imul
movsb
sub
in
ret
xor
loopne
jnp
push
arpl
jns
cs
out
jns
xchg
xor
shll
mov
test
mov
sarl
or
mov
fadd
cmpsb
fidivrs
jmp
std
inc
mov
fdivrs
pop
jne
push
mov
rolb
mov
xor
jo
xor
lret
push
int
in
fs
cltd
and
js
xor
mov
dec
insb
pushf
and
scas
dec
stos
arpl
lret
dec
xor
lret
pushf
mov
xchg
xor
out
test
shll
sbbl
jnp
test
addr16
fldenv
test
out
mov
call
outsb
clc
xchg
mov
and
push
push
rcl
or
cmpsl
cwtl
xlat
ja
fwait
cmp
adc
lods
push
push
inc
popa
xlat
idivl
pop
cmp
or
idivb
xor
arpl
and
aad
por
jmp
dec
loop
xor
lods
or
and
add
sub
cmovl
mov
or
test
jge
inc
cltd
push
adc
adc
outsl
cwtl
jae
gs
jno
icebp
mov
cmp
sub
cld
in
int
pop
test
jno
pop
sub
imull
mov
outsb
iret
pop
mov
mull
or
sub
pop
add
mov
mov
jg
negb
sarl
xchg
cmc
mov
stos
pop
cwtl
inc
test
ret
getsec
jle
sbb
arpl
add
mov
sti
and
nop
adc
inc
jle
or
hlt
pop
mov
inc
jg
pop
mov
jbe
xor
and
movsb
xchg
insl
sbb
push
shll
add
int3
lret
scas
sub
test
fnsave
jg
clc
jecxz
sub
stos
repnz
or
add
sbb
mov
outsb
aas
insb
dec
pop
cld
call
dec
cs
or
or
das
out
not
or
popa
ja
sbbl
aaa
or
adc
cmp
clc
inc
push
into
das
mov
jl
sbb
stos
ret
jle
push
xor
std
cmp
xorl
shll
inc
adc
add
inc
addr16
mov
jle
std
outsl
nop
out
mov
pusha
xor
into
shlb
lock
testl
dec
loop
out
and
dec
sarb
dec
jno
adc
dec
sbbl
sbb
rolb
xor
inc
sub
out
incl
sti
shll
ljmp
adc
inc
or
mov
addr16
dec
lods
inc
popa
xor
movl
call
call
push
push
pushf
movl
call
movl
movb
pushf
pushf
mov
lea
jmp
movl
jmp
pusha
test
mov
jmp
pushf
movl
jmp
shr
movb
rcl
add
dec
shr
bsf
and
add
pop
mov
add
inc
mov
shl
shr
bt
xadd
lea
cmc
dec
mov
bts
pushf
mov
bt
jmp
pushf
pusha
jmp
sbb
cmp
cmpb
int
push
lock
rorl
loope
sub
pop
pop
fwait
pop
sahf
jns
enter
call
xchg
pop
mov
or
std
sti
jbe
xchg
dec
pop
fbld
fisttpl
stos
jne
call
repnz
and
stos
dec
inc
sub
mov
cli
cmp
rcll
cmc
sbb
xchg
subb
mov
sahf
sbb
aaa
xchg
ret
lcall
jns
push
pushf
mov
lea
jmp
pushf
pushf
int
daa
pop
popf
and
je
outsl
std
mov
or
arpl
pushf
mov
jp
iret
jle
cli
xor
scas
xor
iret
aad
or
sub
rorb
and
sub
fsubrl
mov
xor
lea
movb
lea
jmp
movb
pusha
movl
movw
push
pushf
pushf
lea
jmp
xchg
mov
pop
neg
shr
shl
lea
add
call
jmp
or
sub
out
sub
leave
aaa
pusha
loope
push
arpl
push
adc
xor
xor
rclb
or
jg
stos
rcrl
loop
sub
pop
mov
loopne
mov
push
mov
pushf
mov
jb
mov
adc
or
arpl
and
jmp
xor
movl
movb
lea
jmp
popa
or
mov
imul
cmp
push
dec
mov
arpl
aaa
lret
push
add
daa
addr16
fdivr
sub
or
cmp
aaa
lret
aas
adc
mov
jg
and
cmp
fsubl
scas
fildl
fdiv
mov
sub
xchg
lods
repnz
adc
es
mov
clc
adc
push
ljmp
push
mov
pop
pop
push
xor
int3
loopne
cmc
lods
lret
jne
inc
xor
pmulhw
push
add
inc
push
iret
xchg
and
jae
stos
js
mov
xor
jl
test
xchg
sub
stos
leave
jmp
arpl
aaa
mov
sub
xor
lret
add
mov
jp
ficoml
jnp
fidivl
inc
das
sbb
aam
shrl
addr16
test
xchg
iret
mov
lahf
es
popl
add
lods
jne
mov
jae
out
scas
inc
rclb
out
push
xlat
movsb
add
jle
fidivl
mov
lret
mov
lret
cmp
stos
mov
js
and
or
jbe
jp
sti
les
add
mov
shlb
test
fwait
xor
jle
mov
popa
call
inc
xchg
dec
pusha
imul
fdivs
fwait
xor
inc
push
fistpl
mov
pop
mov
xor
ds
je
rolb
sarl
mov
add
xor
jne,pn
cld
and
jmp
push
xchg
mov
lret
sub
fwait
in
inc
push
je
sbb
jnp
les
pop
sbb
sahf
add
and
xchg
out
sub
xor
push
and
loope
sbb
sub
push
mov
les
dec
pop
ret
dec
hlt
push
cli
adc
hlt
add
cli
and
mov
ja
mov
pop
cmp
xchg
jmp
xor
adc
mov
xor
or
into
ficompl
pop
xchg
sarl
lock
xor
stos
add
lds
mov
in
pop
mov
jb
and
inc
out
loop
pop
pop
mov
add
adc
push
cld
cld
lds
pop
aas
mov
into
xor
cld
movsl
leave
out
imul
push
pop
adc
sti
push
scas
push
lock
xchg
push
mov
jnp
jle
popf
jnp
xchg
lcall
test
cli
shrb
mov
push
jno
mov
jmp
sub
imul
call
xor
leave
sbb
inc
jno
adc
jecxz
lcall
sub
cmp
dec
jb
mov
inc
inc
pop
jge
inc
lahf
andb
push
and
test
mov
jge
xchg
jb
push
jno
popf
lcall
add
adc
cmpb
lret
fimull
es
and
fldl2e
mov
sbb
and
imul
add
mov
push
movsb
sub
out
lods
or
sbb
jl
sahf
pop
daa
or
xchg
cmp
jle,pn
dec
add
stos
mov
add
outsb
pop
mov
push
fs
pop
push
pop
movsl
xchg
loopne
inc
lcall
push
jle
roll
cmp
mov
sbb
ss
mov
sarl
inc
fbld
cld
insb
pusha
dec
gs
shll
mov
andl
in
stc
hlt
daa
mov
jbe
cli
xchg
push
out
insb
clc
sbb
push
ffree
fbld
outsl
jnp
jns
xor
or
stos
rcrl
shrb
inc
lahf
and
mov
ss
es
pop
mov
dec
in
out
rolb
dec
scas
inc
ja
push
sbb
add
dec
dec
adc
and
xchg
inc
ret
or
pop
mov
xchg
and
arpl
gs
mov
adc
into
rorl
subl
jl
fdivl
and
push
jne
xchg
fwait
outsb
dec
stos
notl
mov
in
push
xor
testb
jae
dec
fwait
xchg
xor
cltd
mov
cmp
outsb
arpl
cmp
jb
sub
xor
sbb
jp
ljmp
jae
lret
inc
xor
loop
pop
sti
jg
cmp
cmc
rol
stc
out
cmpsb
pop
rorl
sub
pop
xor
fcomps
push
addr16
leave
rep
pop
mov
mov
fnstsw
ljmp
js
stos
push
stc
lahf
sbb
cmp
pop
adc
test
mov
add
int3
jb
and
and
in
cmp
xchg
pop
cmpsb
cmpsb
dec
jnp
loopne
mov
aam
mov
lahf
flds
idivb
mov
jge
pop
push
movsl
push
xor
inc
inc
das
dec
or
adc
mov
xor
mov
xor
push
aas
cwtl
test
lahf
mov
pop
xor
mov
jmp
testl
mov
pop
jl
andl
mov
repnz
mov
dec
fistpl
roll
sub
movsl
cwtl
or
out
rcll
xchg
lret
movsl
loope
jo
mov
into
dec
push
fcomps
jg
sbb
inc
xor
xor
jp
lock
adc
dec
push
mov
jae
jb
inc
push
xor
push
lea
jle
and
jmp
pusha
mov
movl
push
pusha
movl
mov
movb
lea
jmp
push
ret
into
aam
jg
insb
movsb
int3
push
inc
bound
inc
lods
fdivl
mov
mov
shrl
adc
sbb
icebp
ss
push
cmpsl
sti
push
add
inc
loopw
or
and
imul
mov
ljmp
mov
shll
inc
popf
ja
xor
and
in
cmpsb
lret
out
shrl
fisttpll
pop
push
push
das
je
test
and
or
out
movl
dec
sahf
mov
push
gs
push
imul
scas
add
push
push
xor
adc
fldt
jns
sub
js
inc
mov
inc
sub
mov
lds
es
cmp
dec
in
push
scas
mov
ja
insl
int3
xor
pop
fisubs
mov
repz
popf
push
add
add
sub
sub
imul
out
popa
xor
sub
iret
pop
jmp
test
pop
xor
addr16
repnz
cltd
movsl
repz
movsl
mov
push
xchg
jl
fucom
xchg
int
push
cli
fcomip
daa
popa
jle
orb
add
cmp
mov
sti
mov
lret
cmp
jge
xor
mov
mov
xchg
sbb
or
faddl
mov
push
xor
and
dec
or
pop
pushf
jmp
movl
pushf
lea
jmp
call
mov
test
clc
test
shr
stc
stc
and
clc
test
clc
push
add
movb
clc
and
test
jmp
movl
mov
jmp
push
jmp
push
pushf
pusha
movl
push
pushl
movl
pushl
mov
pushf
lea
jmp
and
xor
cmp
pop
imul
ret
aam
aaa
mov
and
push
daa
jns
jns
dec
sbb
in
sbb
sub
stos
mov
js
mov
and
jne
pop
icebp
int3
xchg
and
adc
sub
sub
add
jno
mov
fwait
sub
or
cmp
jecxz
push
dec
mov
popa
fs
jl
mov
fwait
sub
arpl
adc
jl
fcoml
and
add
mov
fiadds
jecxz
add
dec
inc
retw
and
dec
cmp
data16
inc
jae
dec
inc
not
ljmp
mov
xchg
push
sbb
arpl
ficoms
xor
pusha
je
jle
add
pusha
sbb
lods
enter
cmp
push
bound
int
cld
push
mov
xor
or
fcoml
int
push
xor
push
and
pushl
mov
xor
sub
sbb
jae
jmp
or
ror
into
aad
dec
xchg
inc
stc
xchg
ljmp
je
xor
xor
xchg
leave
aaa
add
fdivrl
in
add
mov
mov
pushf
cli
fnstsw
push
clc
dec
incl
add
mov
mov
push
hlt
fdivs
push
je
sub
mov
repz
xor
mov
hlt
push
je
pusha
lods
pop
jbe
lods
pop
push
fs
add
push
loopne
loopne
scas
pop
mov
pop
xor
jmp
or
movsb
push
ss
mov
movsl
add
add
add
jae
pusha
movl
jmp
pusha
lea
jl
push
sbb
mov
ror
mov
sub
bswap
push
shl
lea
jmp
jmp
push
lock
std
std
addl
ret
jnp
cmp
and
pushf
mov
pop
sbb
xor
adc
sub
mov
and
aam
push
lret
loopne
sub
test
sbbl
xchg
inc
or
in
xchg
push
imulb
inc
test
les
mov
jmp
sbb
dec
inc
enter
push
punpckhdq
cmp
cwtl
lock
and
rcr
or
dec
sahf
les
sbb
adc
sahf
outsb
push
nop
les
mov
bound
mov
add
sahf
int3
push
sti
dec
mov
adc
xchg
sub
clc
sarl
xchg
dec
push
loop
inc
add
cmpsl
xor
inc
jge
js
cmp
add
call
loopne
cltd
test
ds
fcmovnu
test
ss
pop
push
add
xor
arpl
inc
and
mov
xor
nop
push
inc
in
imul
andl
ds
sub
cmp
out
inc
sub
add
cli
mov
push
insb
ja
jecxz
movsl
test
sub
dec
xchg
sti
pop
xor
cmp
clc
and
loope
enter
pop
fwait
enter
out
mov
xor
out
add
and
fadd
and
sub
outsb
rorb
gs
ret
xchg
add
lcall
sahf
xor
aam
and
mov
data16
sub
movsl
out
scas
xor
fwait
sub
scas
fwait
push
aam
mov
cmpsl
inc
repz
fdivrl
fwait
sub
pop
xor
adc
or
inc
sub
mov
dec
xchg
add
jne
add
push
cmp
xor
movl
movb
push
lea
jmp
repz
in
xlat
mov
or
push
xor
push
cmp
dec
inc
mov
adc
push
popa
cmpsb
mov
adc
scas
xlat
int
cltd
mov
mov
js
lcall
lods
std
pop
mov
or
fadds
test
ja
pop
mov
fstl
aad
shll
jp
dec
ja
out
mov
fdivrs
jle
insb
pop
divb
fwait
daa
cmc
push
push
clc
shr
push
pushf
lea
jmp
call
push
movl
push
movw
jmp
shld
rol
xor
movzbl
movzwl
bswap
ror
rol
cmc
add
and
call
movsb
push
xchg
mov
stc
xor
out
push
das
aad
movsb
repz
pusha
add
xor
cmp
rorl
sahf
int
bnd
lods
sbb
mov
js
clc
fstp
fnsave
fistps
int
push
mov
mov
movsb
aas
out
out
gs
cmp
repnz
pusha
cli
clc
adc
jbe
dec
popf
jmp
mov
inc
jne
xor
out
xor
xcrypt-ofb
cmpsl
lods
arpl
and
lods
mov
mov
mov
js
popa
mov
mov
mov
cmp
mov
adc
pop
push
cmp
ror
outsb
or
or
dec
dec
mov
push
mov
pop
dec
pop
aaa
xor
test
xchg
cmpsl
pop
mov
cmpsl
out
jb
aas
call
sarl
pop
repz
in
adc
adc
inc
inc
cmp
ret
pop
xor
or
icebp
aas
push
das
lea
mov
daa
mov
push
dec
aam
jae
xlat
int
add
cmp
cmp
lock
mov
in
xor
jge
imul
xchg
mov
add
daa
rcr
or
fwait
daa
rorb
and
sub
mov
stc
add
pusha
pusha
pushl
pushl
ret
mov
or
dec
std
xor
fisubrl
inc
shr
rcrl
cli
pusha
loope
loope
and
xor
gs
cmp
mov
xchg
adc
mov
insb
lret
popf
cmp
repnz
test
outsb
xchg
jbe
mov
adc
popa
daa
xchg
aam
add
mov
ret
cmp
pop
adc
cmp
sbb
outsb
mov
jno
xchg
imul
mov
cmp
fimull
mov
push
shll
mov
stc
js
lds
push
xor
jnp
stos
mov
mov
inc
fstl
frstor
adc
subb
icebp
jmp
cli
repnz
xor
movl
mov
movl
movb
lea
jmp
call
sub
stos
fdiv
xchg
and
inc
cmp
daa
and
xor
xchg
in
mov
mov
daa
cli
idivl
jbe
mov
movsl
popa
fadd
xchg
jae
fstpl
and
cmp
aas
insb
dec
cwtl
push
mov
mov
or
fcompp
sbb
cmpsl
mov
jb
mov
insb
sbb
lea
popa
inc
enter
inc
mov
inc
insl
xlat
lods
inc
mov
andl
push
flds
xor
leave
mov
inc
jecxz
pop
in
lret
inc
dec
xor
dec
jb
std
sbb
lcall
add
scas
jmp
out
and
loop
jp
mov
or
mov
jl
mov
mov
pop
mov
pop
dec
cmp
pop
pop
push
lock
add
imul
shll
scas
xor
cld
jbe
push
pop
push
out
jg
jo
xchg
cmpsb
test
inc
jmp
notb
pop
lods
mov
jle
adc
sub
jle
dec
enter
mov
test
aas
insl
shll
out
push
int3
cmp
or
sahf
inc
les
ljmp
dec
jne
outsb
ja
adc
adc
xchg
sti
fdivl
or
or
fstpt
or
in
add
adc
repnz
pushf
mov
int3
rorl
call
cmp
push
xor
fwait
and
int
mov
jmp
or
push
movsb
xchg
adc
addr16
push
notb
cwtl
mov
cld
dec
inc
jbe
adcb
cmp
dec
and
ljmp
cmp
imul
xchg
mov
pop
mov
hlt
push
arpl
fs
pop
movsb
sar
pop
xor
mov
fcmovb
mov
aad
fwait
and
push
sub
push
dec
fs
xchg
in
sbb
or
jl
xor
mov
sub
sub
addb
cmp
sti
add
sahf
cwtl
cs
out
sub
sub
add
adcl
ljmp
xor
xchg
cmp
pop
fcomps
idivb
cmp
xor
push
out
add
sbbb
push
ret
sbb
out
inc
jle
adc
out
dec
aad
pop
inc
mov
xor
lret
mov
xor
push
aam
mov
aad
arpl
cltd
jecxz
rorl
repz
or
adcb
lock
push
sub
jo
dec
cli
out
dec
je
add
jns
mov
test
xchg
mov
movsb
mov
in
inc
mov
pushl
cmp
jo
loop
fisubs
cmp
std
dec
shlb
ljmp
mov
out
push
fwait
cmp
or
xor
and
cmp
rcr
jmp
rcll
inc
jl
add
add
jb
mov
adc
lcall
pop
or
das
rclb
fbstp
fs
sahf
adc
inc
jno
push
add
jp
fbstp
xor
jnp
inc
mov
jle
sbb
mov
inc
aas
fdivs
call
lock
cmp
pop
and
stos
dec
pop
jbe
in
lock
and
mov
int3
insb
loope
push
jg
lock
sahf
repnz
icebp
cmp
pop
xchg
push
movsl
mov
dec
call
call
push
jb
je
add
pop
inc
mov
xor
jbe
mov
mov
jb
mov
adc
ss
push
imulb
mov
pop
std
xor
push
call
mov
sub
sub
ja
pusha
pusha
xor
movb
bt
jmp
xchg
outsl
lret
mov
pusha
lds
fsubrl
int
jb
mov
push
sub
jne
les
push
in
and
ficoms
cltd
cmp
fdivl
cltd
dec
dec
xchg
in
rorl
into
fisttpll
cmpsb
pop
testb
sub
mov
inc
inc
sbb
mov
lea
imul
jnp
mov
jecxz
adc
in
xchg
cwtl
xor
xchg
cld
arpl
data16
fildl
cmp
xorb
xor
xor
mov
sbb
hlt
jne
xor
push
arpl
mov
push
xor
and
fwait
push
aad
cmpsb
stc
pop
cwtl
xor
jmp
into
xchg
add
subl
orl
jno
jg
and
or
fwait
and
jp
popf
fwait
ret
fisttpl
xor
nop
into
cwtl
inc
and
pop
hlt
jge
pushf
clc
add
pushl
movb
dec
clc
clc
jmp
pusha
mov
call
scas
mov
inc
sbb
xlat
fldl
pop
inc
push
sar
lods
bound
jg
or
daa
popa
mov
jp
cmpsl
or
in
shl
stos
add
enter
or
cltd
or
xchg
repnz
or
push
clc
cmpsl
xchg
loope
mov
jg
repnz
sub
stos
sbb
out
dec
jae
dec
imul
mov
lods
jbe
cld
rcrb
fnstcw
adc
sub
pushf
roll
cmp
jl
pop
sti
pop
jmp
sahf
aaa
jmp
imulb
cmp
cmpb
movsb
mov
ljmp
lret
das
out
mov
mov
push
andb
cli
in
mov
fidivrl
xor
sub
pop
daa
inc
xor
dec
in
jl
test
imull
outsb
lds
inc
fldl
inc
lods
and
and
mov
push
sub
idivb
xchg
sub
push
xchg
and
sub
xchg
in
repz
cltd
ss
mov
mov
pop
shll
cmp
test
fwait
cltd
imul
dec
cltd
mov
mov
ret
popa
ficoml
outsb
adcb
subb
xor
call
and
testl
push
mov
xor
pop
mov
popf
arpl
repnz
mov
or
bound
inc
ja
popw
mov
jbe
adc
mov
sub
cmc
cmp
orl
testb
xchg
fstpt
out
cmpsl
pop
xchg
jb
movb
ret
adc
sub
xchg
push
pop
adc
popa
jne
and
loopne
jp
sti
cltd
test
xchg
stos
or
xor
shlb
dec
push
shll
aaa
int
pop
lock
sub
mov
sub
ficompl
and
sbb
daa
xchg
push
es
sti
rcrb
hlt
sbb
sbb
fnsave
testl
push
xor
add
mov
movsb
jmp
sub
stos
add
lret
jge
cwtl
jb
dec
stos
fisubrs
mov
or
or
fidivrl
and
out
pop
jno
inc
push
lcall
outsb
stos
xor
or
jns
jne
sub
faddp
in
adc
and
add
dec
sub
cmc
and
mov
sbb
repz
scas
lret
pop
lretw
test
lods
push
xor
mov
in
sbb
adcb
sbb
bound
cmp
arpl
fwait
sbb
movb
movl
jmp
xchg
popa
cmpl
lret
dec
push
nop
mov
dec
push
sub
mov
push
mov
xorl
outsl
add
sub
or
pop
aad
sbb
insl
cmp
sbb
ret
ret
aam
js
jno
clc
nop
js
outsl
mov
or
test
cld
xor
mov
sbbl
dec
adc
sub
lcall
enter
sub
cmpsl
in
call
sbb
inc
enter
loopne
lds
cld
aas
test
xor
mov
aas
mov
out
add
bnd
xor
movl
jg
push
push
mov
movl
pushf
lea
jmp
pusha
movl
movb
push
pushf
pushf
lea
jmp
pushf
pushf
movl
pushf
movl
pushf
pushf
push
lea
jmp
add
dec
pop
dec
xlat
cltd
pop
insb
cld
and
loope
push
cmp
fstps
cmpsl
mov
xchg
xor
xlat
or
mov
push
fstpl
fs
adcb
loope
sahf
pop
ds
rolb
xchg
incl
xchg
fcoms
or
pop
hlt
aaa
adc
call
add
mov
mov
mul
mov
hlt
jp
cmp
jecxz
insb
int
add
xor
inc
ja
inc
push
out
fistps
and
pop
cmp
popa
outsb
out
lcall
fwait
jg
inc
mov
xchg
mov
xorb
out
or
scas
rclb
add
xchg
jnp
fdivr
push
mov
sbb
mov
dec
loope
cmp
jmp
sbb
jp
aaa
dec
roll
rcrb
mov
out
shrb
jl
xlat
inc
sarb
push
sbb
and
inc
ds
xchg
cmp
faddl
out
mov
pop
ljmp
xchg
addr16
imul
loope
fwait
jo
out
xchg
insb
push
mov
dec
es
inc
push
loopne
jno,pn
bound
pushl
sbb
jnp
lcall
fistpl
test
adc
negb
jle
and
add
cmp
pushf
pop
gs
repnz
pop
fbstp
mov
cltd
jbe
or
stos
or
imulb
jnp
mov
popa
mov
mov
xlat
adc
call
cmc
repnz
mov
inc
sbb
xor
andl
idiv
cmp
shll
mov
cmp
sti
call
out
push
cmp
lods
xor
and
xchg
aaa
int3
mov
call
out
imul
and
mov
push
in
push
or
inc
dec
into
fs
push
sahf
add
clc
xor
fildll
mov
pop
lea
cmp
push
pop
lea
imul
mov
cmp
cmp
sub
scas
cli
xchg
xchg
std
push
pop
push
dec
js
push
ret
xchg
call
shlb
sbb
dec
out
repnz
cwtl
lock
mov
jecxz
inc
jb
inc
adc
out
mov
ret
popf
push
jge
shlb
ljmp
xor
sub
mov
fists
adc
fwait
sbb
out
pusha
ljmp
and
jno,pt
scas
lods
mov
mov
subl
sbb
sbb
jl
loopne
je
lock
shlb
arpl
pavgw
filds
lock
adc
mov
cmpb
leave
mov
dec
pop
stc
xchg
das
adc
mov
arpl
fwait
sbb
into
imul
incl
imul
pop
sub
sbb
sub
bound
jecxz
pop
movsl
ja
movsb
int3
std
lret
rorl
out
add
pop
ds
negb
cwtl
dec
repz
out
sub
push
add
mov
sar
xor
xchg
nop
sbb
repz
pop
mov
movsl
adc
rcr
mov
jle
subb
inc
xor
fwait
sbb
pop
adc
inc
shrb
xlat
cs
lods
movsl
lds
aas
jne
push
fs
push
cmp
stos
pop
es
mov
jbe
addb
cmp
sbb
js
push
sbb
jge
faddl
mov
repnz
js
arpl
scas
jae
push
xchg
lock
mov
arpl
and
or
dec
xchg
adc
lret
add
xlat
pushf
cmp
xchg
dec
scas
or
std
stos
mov
xorb
dec
mov
cmc
cmp
stos
or
das
mov
and
xor
ficomps
sub
aad
aam
out
cmp
sub
loopne
xlat
push
leave
es
jno
push
push
out
mov
xor
es
mov
outsb
cmp
shlb
shlb
fwait
sbb
xchg
and
icebp
dec
pushl
pop
jle
inc
mov
fwait
sbb
fwait
mov
outsb
push
int
xchg
imul
jnp
bound
xchg
shlb
fwait
sbb
adc
out
add
das
in
or
mov
out
int3
lret
outsl
es
int
lret
mov
push
pusha
mov
pop
xchg
orl
xlat
mov
inc
daa
inc
fwait
stc
mov
mov
mov
scas
or
pop
or
inc
push
repz
add
pop
shll
out
sbb
in
loop
adc
sbb
fwait
sbb
inc
outsb
shrb
dec
push
icebp
test
arpl
arpl
xor
pushf
jmp
movl
pushl
mov
mov
lea
jmp
or
leave
daa
ds
inc
pop
jbe
aaa
bound
sbb
pop
sbb
sti
adc
pop
stos
cmp
mov
sub
aas
xor
ret
lahf
ss
in
call
sub
stos
fstpt
mov
loope
push
mov
stos
call
outsb
mov
outsl
or
dec
adc
pop
addr16
push
mov
addr16
sbb
adc
mov
pop
adc
fisubrl
push
inc
sub
dec
dec
ja
inc
adc
stc
pop
cmpsl
test
ret
cmpsl
not
mov
mov
loop
dec
adc
adc
rcll
dec
jne
cmp
mov
aad
mov
xorb
cld
jmp
aas
addr16
in
daa
jb
inc
cmp
out
jp
pop
hlt
cmp
add
icebp
jae
inc
fdivs
ret
int
enter
inc
add
shr
lods
jne
push
movsb
iret
lods
enter
xchg
notl
ficompl
fs
or
fwait
push
jb
lods
pushf
movl
pushf
pushf
lea
jmp
ret
xlat
fs
jp
jecxz
loope
inc
xchg
inc
shll
test
add
jo
int
enter
dec
fidivs
js
jne
dec
pop
je
and
aam
dec
dec
stos
inc
fnsave
ret
and
stc
add
xor
and
aas
ss
lods
jle
mov
mov
jb
int
pop
aaa
push
sbb
sbb
mov
add
cmp
adc
cli
xchg
sub
test
sub
mov
jg
loopne
fwait
adc
lret
rcrl
incl
insb
xlat
pop
mov
xor
jmp
std
and
ja
lock
pop
dec
rcr
js
jbe
cld
and
les
mov
fistpl
mov
hlt
sub
sub
mov
dec
jp
xchg
jmp
shrb
or
adc
iret
mov
inc
cmp
ret
ret
fcoml
in
cmpsl
aam
or
push
test
shl
rclb
jg
xorl
dec
arpl
cli
xchg
cmc
mov
ss
adc
fwait
push
mov
je
cwtl
fucomp
xor
arpl
idivl
xor
push
jp
push
mov
jl
mov
jl
sar
pop
or
xor
adc
or
mov
fcompl
or
fsubrl
aam
mov
or
dec
xor
sub
pop
fucom
sti
out
ret
mov
cwtl
ret
xor
movl
pushf
movb
lea
jmp
aam
out
or
xchg
outsb
cmp
outsl
sbb
sbb
sbb
es
pop
inc
daa
les
mov
shrb
pop
lret
ficomps
cmp
inc
scas
je
xchg
inc
mov
xlat
sub
icebp
add
enter
or
or
sbb
adc
dec
std
lahf
int3
insb
pop
outsl
sub
frstor
cmp
dec
jb
scas
push
insb
mov
movsl
and
mov
in
pop
mov
mov
andb
das
push
xor
add
mov
dec
xchg
sti
movsb
scas
inc
lock
mov
lds
sahf
cmp
cmc
jg
sbb
fwait
adc
rolb
scas
icebp
and
cwtl
imul
int
adc
mov
fwait
adc
loop
mov
loope
push
adc
or
test
repnz
lds
aas
xlat
inc
scas
icebp
and
scas
adc
test
xor
jmp
xor
stc
dec
nop
enter
clc
xchg
decb
pop
ljmp
mov
or
jge
fs
fwait
adc
mov
mov
movl
push
lea
jmp
lahf
or
imul
aaa
frstor
filds
arpl
mov
dec
cmp
jbe
dec
or
sbb
mull
xor
sti
push
shlb
dec
das
in
xor
jecxz
test
sub
adc
and
mov
xchg
ja
daa
xchg
int3
push
mulb
pop
ret
jge
pop
jb
jle
xchg
mov
dec
inc
dec
sub
das
imul
loope
sbbl
mov
xor
addr16
aas
icebp
add
in
movsb
movsb
inc
mov
push
xchg
and
in
out
or
push
ds
ficompl
cltd
or
iret
pop
push
mov
les
lds
fimull
push
mov
mov
loope
push
add
ljmp
add
mov
xchg
xor
arpl
xor
in
dec
outsl
push
test
rcl
outsl
sbb
and
or
cmp
repz
mov
cmp
pop
jle
inc
sub
mov
mov
psubw
int3
scas
pusha
add
mov
pop
and
xchg
data16
jne
xor
push
push
je
adc
adc
loope
mov
jp
mov
in
nop
mov
mov
adc
push
mov
addr16
das
inc
add
mov
lcall
mov
xchg
or
and
clc
xor
and
arpl
lods
lock
sub
add
fwait
adc
jmp
jmp
sub
cmp
dec
pop
or
xor
cmpsl
hlt
sahf
sbb
outsb
or
sbb
xor
fistpll
mov
mov
sub
push
and
cld
jg
mov
cli
cld
clc
and
mov
lods
leave
repnz
fwait
adc
aad
jae
ds
sub
leave
xchg
xor
ret
or
dec
test
jbe
mov
sbb
in
repz
stc
cmc
clc
stc
mov
clc
mov
bt
cmp
push
lea
jb
pusha
bt
sub
cmp
pusha
jmp
movl
pushf
mov
pushl
push
lea
jmp
call
mov
lret
jmp
and
in
push
fdivl
cmp
pop
and
loop
inc
push
pop
jg
daa
dec
push
movsb
jbe
imul
decb
loope
gs
sub
movsb
jne
imul
mov
jmp
mov
push
out
sar
popf
movsl
dec
mov
or
lret
sub
inc
mov
lods
and
out
rorl
mov
push
push
pop
out
popa
bound
push
hlt
lods
push
imul
fstps
loope
ljmp
lret
xlat
fidivl
sbb
and
add
int3
cmp
mov
repnz
loop
testb
loop
in
loopne
push
fistpll
inc
dec
sub
push
popf
popf
xor
das
aam
xorb
sbb
jnp
mov
or
mov
mov
imul
add
ret
jmp
test
pop
aam
mov
push
mov
jns
mov
jnp
xchg
mov
mov
ret
jns
mov
mov
insl
std
int3
mov
push
andb
imul
cmp
outsb
jns
insb
mov
mov
sbb
mov
dec
push
out
dec
mov
ficompl
mov
in
ja
cmp
test
mov
mov
mov
mov
mov
loop
push
movsb
in
enter
mov
enter
int
or
repz
mov
adc
sti
xor
mov
es
xchg
jnp
ficompl
or
or
clc
pop
cli
test
lods
or
fmul
cli
xchg
lret
or
sbb
mov
jle
aaa
dec
dec
jno
push
ds
adc
dec
ret
sbb
xchg
xor
push
add
shrd
mov
stc
bsf
shl
add
cmc
bts
xor
inc
bsr
sbb
add
btc
movzbw
shl
bt
movzbw
shrd
shl
xadd
test
movzwl
pop
mov
sar
shr
btc
adc
add
cmp
test
shrd
btr
and
test
rcl
call
jl
pusha
iret
inc
xchg
jae
cmp
cmp
pop
sti
xor
cmp
loop
push
sub
xor
cmp
adc
adc
mov
xor
sbb
mov
sub
add
fdivrl
or
xchg
adc
push
mov
popf
in
movsl
adc
sub
dec
paddsb
or
mov
push
mov
push
ss
dec
sbb
pop
dec
int3
jns
xor
enter
ljmp
sbb
mov
fwait
or
fs
jbe
dec
dec
sar
mov
btr
bsr
clc
shld
mov
jmp
push
jmp
call
pushf
jmp
push
push
jmp
jmp
arpl
xchg
imul
cmpsl
add
push
lahf
ja
add
addr16
jo
add
add
outsb
mov
dec
pushf
xorb
cld
cs
lds
mov
addr16
into
lds
pop
icebp
sub
subl
fwait
or
adc
incl
sbb
add
sahf
shr
stc
add
bswap
rcr
bswap
movzbw
sbb
add
bswap
rol
btr
and
shr
btc
add
btr
mov
movb
push
pushf
cmc
shr
test
bt
cmp
add
rol
bsr
bt
shl
adc
test
adc
add
movsbw
xor
btr
movsbw
shld
add
bts
bswap
xor
rcl
movzbw
pushf
cmp
cmc
or
mov
cmc
cmp
call
movl
call
pusha
mov
movl
call
xchg
clc
mov
lea
add
loopne
fists
xchg
xorl
or
mov
and
movsl
mov
hlt
dec
sub
or
pop
jmp
pushf
jmp
movl
push
mov
lea
jmp
call
clc
add
shrd
call
call
jmp
bt
bt
shr
cmc
bt
bt
sub
jmp
pop
jmp
xchg
dec
mov
pop
jle
jae
lods
sub
sbb
in
hlt
adc
jne
adc
push
push
shll
es
mov
xchg
insl
mov
dec
fidivrl
add
fs
notb
movl
fistl
daa
leave
pop
insb
insl
adc
or
xchg
loop
mov
lods
jne
aaa
xchg
sub
mov
pop
ss
cmp
dec
xor
mov
pusha
push
aad
xchg
fwait
or
mov
shll
stos
adc
aam
jno
lea
cmp
fidivl
fwait
or
inc
mov
pusha
mov
inc
mov
enter
mov
or
adc
cs
jl
scas
loope
insl
mov
cmp
xchg
add
into
pop
jmp
pop
add
cld
repnz
shrb
add
fdivr
ds
aas
and
or
into
movsb
jmp
gs
jbe
mov
mov
xor
gs
push
data16
dec
pop
push
inc
shll
repz
adc
jnp
and
adc
pop
mov
xor
push
cs
push
inc
push
pop
xchg
ret
sahf
aad
mov
or
movsl
xor
sbb
pop
xor
dec
outsb
loop
loopne
aam
in
cmp
jo
cmp
das
lea
sub
lret
cltd
int
popf
or
lret
sub
in
mov
xchg
mov
or
cmp
imul
xor
cmp
xor
push
sbb
dec
ljmp
into
cwtl
mov
push
or
mov
lcall
scas
mov
shlb
cmpsl
pop
or
pop
and
out
das
mov
mov
or
aad
aaa
mov
shrb
out
stc
xchg
scas
sbb
call
or
das
cmp
lea
mov
adc
nop
and
adc
mov
shl
jmp
gs
push
fsubrl
dec
inc
mov
mov
roll
stc
out
mov
subb
push
insb
hlt
rcrl
cmpb
addb
stos
bound
jmp
lods
jb
xchg
sub
jl
mov
stc
mov
cs
cmpsl
adc
pop
mov
loope
or
pop
imul
lods
or
mov
or
and
pop
ret
or
xchg
stc
xchg
pop
fdivr
adc
aaa
daa
xor
lahf
sbb
jp
repnz
leave
mov
mov
mov
imul
mov
test
pop
jg
int3
jecxz
jmp
sub
xor
mov
pop
mov
loop
jp
mov
jp
lahf
push
test
ror
cmpsl
sbb
pop
in
aam
push
xchg
jb
cmp
and
mov
push
sbb
clc
inc
shrb
cmp
cmpsl
pop
fbld
cmp
push
ja
cmp
sub
jl
xchg
std
jae
inc
xor
mov
xor
mov
les
jg
xchg
stc
push
inc
mov
fildll
add
cmp
lret
daa
pop
sbb
push
xchg
les
imul
imul
roll
imul
stc
mov
into
sbb
or
mov
sbb
loopne
mov
lods
icebp
outsl
lods
test
imul
arpl
and
xor
push
imul
pop
aas
popa
inc
add
or
jmp
fwait
add
add
filds
jg
pop
shll
xor
movb
adc
inc
ja
iret
stc
mov
out
enter
outsb
sbb
xchg
sub
add
and
cmpb
jb
or
mov
mov
test
jmp
jae
pusha
mov
lds
mov
or
fmul
xchg
pop
pusha
pop
rorl
sbb
test
mov
sub
decb
mov
test
test
std
jno
push
xor
dec
testl
test
sub
movsb
insl
or
mov
dec
jecxz
push
lret
cli
inc
cmpsb
push
push
mov
push
inc
jb
mov
xor
adc
adc
sbb
cli
xlat
iret
sbb
pop
pop
insl
cli
test
or
mov
or
add
fwait
ret
jg
adc
inc
jns
cmp
insl
aad
xchg
insl
lret
hlt
iret
jle
jae
push
mov
xor
fdivl
mov
adc
notl
push
cwtl
adcl
jl
out
jbe
fsubrs
cmp
fwait
pop
loop
imul
inc
mov
xchg
incl
xor
testb
stos
sbb
adc
xlat
sub
shrl
or
mov
ficoms
loopne
xchg
jns
dec
ret
ss
push
cli
xor
enter
adc
or
pop
adc
sub
jne
jg
imul
imul
cld
push
mov
jge
ds
pusha
jno
leave
cmpsb
dec
stos
or
sbb
iret
inc
subl
and
lret
popa
inc
ret
inc
dec
push
pop
bswap
fists
outsb
data16
into
xchg
loop
pop
lods
in
insl
xor
in
popa
add
sbb
jp
xchg
push
es
mov
push
cwtl
loopne
out
outsl
mov
sub
and
adc
pop
imul
sbb
mov
or
mov
or
popa
rcll
inc
leave
mov
stc
fwait
dec
jp
and
int3
jp
jp
outsl
xor
jg
dec
clc
cwtl
jecxz
inc
xchg
fdiv
dec
inc
fsubrl
push
stos
push
insb
shrl
mov
cmpsb
ds
sub
jecxz
jmp
lods
popf
popf
xor
jne
repz
xchg
jns
mov
xlat
jno
adc
sub
imul
fstl
sbb
lahf
orb
xlat
stc
insl
or
aaa
sbb
xchg
sahf
rorb
hlt
lods
jno
sbb
cmp
adc
xchg
mov
out
rcrl
dec
xchg
inc
add
inc
mov
inc
mov
fwait
dec
push
rcll
fdivrs
and
sub
cs
loopne
mov
inc
add
movsl
dec
push
data16
arpl
div
dec
pop
add
loope
mov
cwtl
lret
sahf
sub
add
filds
jb
sahf
lods
xlat
mov
cmp
mov
lahf
xor
fnsave
lcall
mov
notl
mov
or
sti
das
lret
outsl
sti
jnp
inc
out
call
sti
fcmovnb
out
dec
pop
mov
sahf
dec
insl
stos
repnz
dec
scas
in
movsb
das
dec
mov
jb
mov
push
cmpsb
loope
fwait
jae
clc
aas
push
js
cmc
aas
pop
or
paddd
and
add
cmp
xlat
xor
iret
pop
pop
sbb
add
inc
stos
movb
arpl
mov
loope
lods
xchg
aad
adc
sbb
jg
fistps
std
rcrb
cltd
fdivs
sub
mov
call
push
das
cmp
xor
je
shlb
rolb
sbb
cwtl
lock
mov
sahf
mov
in
xchg
inc
push
pusha
adc
popf
fwait
mov
je
mov
cmp
movsb
inc
dec
loopne
jl
adc
xchg
jmp
outsl
adc
in
dec
aas
mov
je
lds
daa
jne
push
push
ss
shrb
fistpll
push
adc
mov
mov
mov
mov
shr
pop
shl
jmp
das
leave
jae
inc
cmp
or
mov
jmp
fdivs
jae
mov
sbb
pop
or
mov
xchg
shrd
scas
scas
js
outsl
icebp
dec
loope
add
pop
add
test
push
inc
jg
icebp
dec
scas
and
scas
xor
fs
push
movsb
or
jg
pop
jg
push
jo
and
inc
sahf
clc
adc
add
push
dec
lds
jnp
cld
mov
mov
inc
mov
dec
inc
add
mov
mov
or
rorl
movsl
pop
sahf
xchg
add
sub
and
xor
cs
and
mov
in
les
jg
mov
lods
sbb
lods
sub
repnz
in
adc
push
ja
call
push
xor
inc
xchg
or
jp
jecxz
pop
lret
test
loopne
jge
sub
mov
and
ret
inc
mov
daa
mov
or
les
mov
outsl
mov
xor
lods
mov
mov
mov
xchg
addb
xorl
sub
jmp
inc
ljmp
inc
jle
fstl
in
and
dec
pop
cmp
out
popf
mov
je
push
mov
push
or
bound
stos
cmp
cmp
xchg
lds
xchg
adc
cld
inc
jne
sbb
xchg
jb
inc
movsb
pop
push
or
or
adc
dec
add
xchg
jmp
not
pop
sub
adc
xlat
sbb
mov
dec
ljmp
dec
enter
imul
jecxz
inc
and
dec
jp
cmpsl
xor
lods
cs
stc
adc
mov
jbe
adc
xchg
dec
pop
sti
adc
notl
cmp
mov
sub
arpl
add
jecxz
dec
sub
repz
or
popf
pop
and
and
inc
and
out
sub
mov
push
pop
out
fidivl
push
xor
fcmovu
scas
add
outsb
ja
outsb
or
std
fnstsw
hlt
inc
mov
pop
mov
push
cld
push
les
das
mov
fisttpll
jecxz
das
test
repz
sub
mov
cmp
fimuls
icebp
insl
into
xor
adc
fs
in
add
test
or
sub
adc
clc
jno
out
push
fprem
jo
mov
pop
mov
sarb
data16
rorb
test
jle
ds
pop
mov
sbb
push
je
xor
fldcw
cmc
rclb
lahf
xchg
mov
mov
mov
hlt
sub
mov
xor
fs
in
call
mov
mov
fs
pop
add
xor
lret
je
ss
mov
imul
pop
add
leave
lahf
adcl
insb
inc
pop
mov
int
adc
mov
in
and
mov
mov
loope
cmp
ret
dec
test
cmp
lahf
dec
in
sti
andb
jl
adc
ss
outsb
ret
or
hlt
outsl
sti
cmc
adc
pop
fistl
ret
mov
ja
sbb
mov
mov
xor
xchg
xlat
fisubrs
jb
adcb
push
pushf
shlb
add
pop
xor
jbe
cmp
dec
sub
push
dec
les
sub
imul
imul
xchg
sub
xor
jne
mov
outsl
das
clc
cwtl
jo
cwtl
jle
dec
xor
lcall
mov
mov
push
ds
pop
incl
addr16
lcall
xor
xchg
fs
add
jp
icebp
loopne
mov
xor
xor
jl
fs
shrl
mov
int
adc
mov
and
ds
aas
adc
mov
fiaddl
sbb
xchg
mov
inc
insl
xchg
push
dec
mov
mov
and
xor
leave
test
movsl
lcall
pushf
dec
add
push
sbb
jne
sbb
popf
fsubrs
loopne
mov
xchg
xchg
js
lods
cmpsb
call
imul
cld
shrb
std
jae
xchg
jle
fwait
xor
mov
sub
mov
loop
mov
sbb
cmp
pusha
jmp
std
xchg
andl
push
xchg
and
push
rolb
int
cld
jmp
and
and
movl
out
out
fsubs
mov
mov
cmp
dec
and
push
mov
fcomip
add
mov
pop
push
or
sbb
outsl
adc
pop
mov
mov
dec
stc
imul
push
add
or
pop
jns
int
lcall
ds
sbb
aas
daa
adc
push
xor
and
or
jnp
sahf
clc
xchg
iret
test
lret
add
addr16
mov
data16
into
in
mov
cmpsb
pop
pop
cld
cmp
mov
es
arpl
or
into
dec
sub
enter
cld
and
cmpsb
shr
fdivs
aaa
in
dec
xor
fsub
ret
push
pushl
mov
lcall
cmpsb
shlb
stc
mov
daa
fwait
jnp
cmp
jl
jnp
sbb
mov
xor
sti
xchg
xor
sbbb
sarb
pop
scas
mov
xlat
aam
leave
jae
lea
cld
jbe
leave
int
cld
lret
cmpsl
addr16
aas
sbb
dec
pushf
cmp
out
iret
test
cmp
outsl
mov
lret
aad
mov
xlat
sub
scas
xlat
jle
icebp
hlt
dec
lods
sub
cli
push
das
jp
sbb
addr16
jnp
cmpsb
rorl
cmp
std
out
xor
push
movl
push
call
movl
push
movl
mov
pusha
pushf
lea
jmp
add
pushf
insl
or
lret
mov
inc
es
cmpsb
lcall
sahf
cmc
roll
outsl
and
mul
dec
jp
gs
sbb
mov
stos
mov
ror
push
sbbl
rcrl
fdivs
ss
in
mov
das
mov
rolb
fistps
or
xchg
mov
cs
mov
aas
or
fstps
inc
inc
das
add
imul
negb
pop
rcrl
stos
arpl
adc
cmp
and
dec
aas
clc
push
int3
xor
int3
test
add
xorb
sub
movsb
movl
jmp
pusha
movb
lea
jne
push
pushf
pusha
lea
jmp
cmp
icebp
cmp
push
or
mov
adc
pushl
sbb
mov
xorl
xor
xor
mov
mov
mov
loop
nop
scas
fwait
push
sub
das
sbb
xor
out
sbb
cli
lahf
es
loop
cmp
sub
push
jle
xor
add
pop
sub
cli
push
scas
test
aaa
test
jnp
xchg
jnp
fistpl
xor
mulb
aam
pop
jle
or
add
cli
mov
mov
outsb
sti
call
and
xor
out
pop
mov
cmc
sub
call
notb
jge
add
push
popf
or
inc
hlt
and
mov
sbb
xchg
adc
mov
dec
sbb
std
mov
addr16
xlat
mov
xor
dec
cmp
jns
jmp
ss
movsb
cmpsl
adc
xor
mov
test
push
mov
xor
pop
sbb
mov
sahf
fcmovnu
jge
sub
xchg
sbb
fnsave
lcall
inc
scas
jb
imul
fcmovbe
jno
iret
cs
das
enter
xchg
das
xor
js
popa
sarb
stos
adc
jecxz
adc
loope
xchg
push
xchg
cmp
aaa
xor
jns
test
popa
aas
xor
test
imul
inc
jge
xor
or
arpl
sub
pop
inc
movsl
sbb
push
sub
xor
les
std
ljmp
dec
pop
popf
dec
jo
lcall
cmp
add
movl
mov
jmp
movb
pusha
pushf
movl
pushl
pushf
mov
lea
jmp
call
xlat
std
push
test
mov
das
out
push
inc
js
mov
mov
inc
dec
psubd
fisubrl
mov
test
xor
std
das
inc
dec
push
push
das
lea
mov
add
push
inc
cld
jne
add
xchg
orb
jp
jbe
filds
mov
dec
popf
mov
xor
jns
out
and
jnp
sub
js
mov
cs
sbb
cmpl
ficoms
xor
std
push
pop
ja
xor
cwtl
repnz
push
sti
stc
cmp
insb
enterw
lcall
inc
and
push
ss
pushf
movw
push
lea
jmp
lock
or
xchg
or
inc
mov
test
push
xor
loopne
push
movsl
cmp
daa
cmp
lds
mov
xor
mov
push
mov
inc
xor
je
cld
add
cmp
fsubrl
pusha
dec
je
repz
cwtl
sub
aaa
push
and
out
xor
or
dec
js
adc
xor
idivl
pusha
pushf
pushf
movl
movb
lea
jmp
pop
sahf
iret
je
jle
cmc
push
xchg
int
mov
aas
dec
scas
jg
mov
adc
mulb
outsl
cmp
mov
add
xchg
xor
test
stc
nop
fiaddl
pop
lds
xor
mov
push
insb
mov
push
iret
adc
rolb
dec
adc
das
add
dec
sarb
jle
fimull
imul
sbb
ja
adc
das
xor
mov
jno
jno
jg
sub
ss
dec
test
xor
leave
and
out
es
lret
cmc
xor
test
gs
jle
out
cmc
aad
xor
in
ljmp
xchg
cmp
ret
sub
cmp
cs
push
xchg
lcall
inc
in
mov
dec
pop
mov
lds
mov
jne
and
in
xor
inc
pop
movsb
cmp
jp
add
cwtl
mov
std
cmc
xchg
in
xor
sbb
out
insb
xchg
add
testl
add
test
mov
mov
stc
shlb
int
xor
push
fstps
sub
jecxz
insl
dec
mov
rcrl
cld
inc
fwait
insb
adc
stc
lahf
sbb
movsl
mov
lea
cltd
push
push
lods
sub
loop
jae
and
xor
cmp
das
adc
popa
cmp
popa
mov
out
jecxz
pop
fucomp
dec
rol
mov
cmp
cmp
fisttps
push
push
dec
cmp
push
cmpsb
adc
xchg
push
mov
inc
es
xor
mov
fcomp
cmp
pop
ljmp
sti
cmp
scas
dec
xor
push
pushl
call
xchg
jb
loopne
dec
xor
pop
cld
inc
fisttpl
jae
mov
add
dec
test
das
shrb
dec
fidivrs
icebp
mov
inc
subb
inc
int3
imul
sub
pop
dec
push
add
mov
inc
inc
or
mov
pop
jge
push
mov
mov
dec
out
inc
mov
cmp
lcall
adc
sub
add
fsubrl
mov
mov
ja
iret
mov
scas
mov
jecxz
and
insl
add
mov
mov
das
pop
scas
xchg
mov
repz
popf
sub
cmpsl
imul
fcomps
sub
shll
incl
mov
out
add
pop
leave
mov
cmp
xchg
imul
xchg
push
and
rcrl
imul
loopne
xor
or
xchg
in
jnp
jne
les
or
or
insb
push
add
aam
mov
in
mov
jbe
mov
gs
add
jge
xchg
insl
insl
add
jle
pop
arpl
jg
cli
shrl
dec
lea
insl
fwait
pop
inc
das
xchg
xorb
mov
nop
inc
jle
sbb
lret
test
pop
sub
mov
cmpsl
xchg
add
ljmp
hlt
notl
in
xchg
mov
addr16
test
ret
cmp
jo
dec
fmull
jo
jecxz
outsl
jns
iret
int3
jns
jp
je
notb
xchg
pushf
cwtl
ja
in
dec
stos
out
roll
cmp
sbb
cmp
daa
shll
lcall
mov
stc
sbb
mov
mov
push
scas
xor
movsbl
inc
mov
and
lea
shl
lea
add
test
pusha
mov
bt
pushf
adc
mov
stc
cmp
stc
clc
shr
call
rcl
inc
add
add
bts
movzbw
btc
mov
shl
adc
bsf
bts
movzbw
pusha
cmc
mov
push
xor
bt
pushf
cmc
movb
shl
stc
cmp
call
orb
jo
fs
sbb
push
dec
into
add
scas
sarl
jne
nop
pop
lods
xchg
rcrl
lds
call
sti
adc
aas
sarl
mov
jmp
div
andl
push
jb
outsl
mov
popf
push
jnp
icebp
shll
mov
jae
mov
add
and
cmp
push
test
jae
insb
xor
lods
sbb
movsl
lcall
loopne
inc
mov
jno
push
imul
push
sub
lret
movsl
mov
shll
imul
adc
push
add
dec
ljmp
jl
ret
inc
inc
sub
xchg
xor
dec
nop
out
pop
je
xchg
or
add
popf
repnz
repz
pop
std
cmpsl
ret
daa
andl
dec
inc
loope
sbb
inc
sub
push
or
xchg
outsb
pusha
cwtl
clc
enter
xchg
loope
push
cltd
flds
test
cmp
lcall
insl
mov
xchg
pop
push
adc
insb
js
xor
aas
lcall
shrb
push
cmp
push
lea
call
xor
addr16
dec
ss
loope
xor
std
loopne
mov
lcall
and
pushf
call
movl
movl
pushf
lea
jmp
pusha
pusha
movl
push
movl
pushf
pushf
lea
jmp
das
test
sti
push
pop
das
pusha
jge
xor
lret
adc
test
inc
out
ss
les
shl
dec
sbb
push
pop
insl
pop
insb
rcr
nop
jae
imul
ljmp
add
jne,pt
out
lcall
dec
sbb
insb
push
mov
fwait
lods
jne
bound
das
cmc
xchg
into
mov
mov
cmpsl
into
pushl
ds
adc
rorl
fbld
outsb
push
rorb
out
lods
mov
ret
inc
xchg
mov
into
daa
movsl
pushl
cmp
xor
hlt
sub
pop
fldcw
sbbb
xchg
sub
xchg
insl
dec
aad
lods
mov
mov
xchg
fdivp
push
cmc
shrl
mov
xor
xor
lods
and
mov
mov
inc
xchg
push
push
mov
xchg
fisttpl
xor
ret
roll
inc
imul
inc
sbb
add
cli
and
stos
mov
dec
xor
loop
cmp
lods
jge
sbbl
mov
mov
mov
sub
rorb
xor
push
inc
int
std
xchg
mov
mov
xor
pmulhuw
fists
sbb
inc
sbb
movsl
test
sbb
sub
adcb
and
add
es
mov
into
mov
xchg
pop
and
scas
sbb
cmc
dec
div
call
push
dec
dec
out
and
mov
stc
nop
mov
movsb
shrb
sbb
shrl
dec
jno
xlat
fdivrs
lods
ja
xchg
mov
sbb
lret
jecxz
cmpsb
mov
scas
gs
mov
inc
sbb
ljmp
sub
je
xchg
stc
add
clc
fsubr
mov
sarb
in
scas
sbb
mov
jp
hlt
sbb
sbb
pop
sbb
xor
pop
cli
inc
aas
cmp
mov
jne
dec
dec
push
xor
jg
dec
xchg
aas
lea
movsl
dec
mov
aad
lock
aas
imul
xchg
ds
pushf
xor
pushf
cmp
jmp
movsb
push
es
insl
sub
xchg
push
rcll
xlat
ja
fnsave
test
imul
out
mov
jp
dec
jg
icebp
push
or
xchg
addr16
or
pop
ljmp
int
and
movsl
xchg
stos
loop
or
fists
xchg
mov
mov
push
xor
xor
and
dec
lods
or
push
out
or
mov
inc
pop
cmp
mulb
and
cwtl
sbb
lds
xlat
mov
sub
pushf
lcall
pop
cmpsb
or
pop
lds
dec
loop
inc
mov
inc
mov
ds
addl
js
or
pushf
insb
xchg
outsb
lret
sbb
stos
push
fbstp
and
cwtl
mov
stc
push
xor
adc
push
jne
cltd
repnz
and
push
push
aaa
mov
lea
movsl
mov
shl
sub
mov
js
das
out
ret
stos
rdpmc
ret
dec
or
sahf
lahf
xchg
out
adc
mov
inc
xchg
cltd
fcomps
mov
stos
sbb
xchg
ja
out
sub
out
push
xchg
movsl
add
mov
out
jno
mov
xor
and
loope
sub
or
mov
sub
fimuls
xchg
xor
push
push
pop
push
ret
xchg
lea
sahf
xor
xchg
cmp
pop
mov
aaa
sbb
je
shrb
sub
sbb
std
push
mov
pop
mov
pop
jmp
test
fistl
pop
sbb
and
and
lods
mov
dec
jae
mov
or
dec
dec
mov
mov
lcall
cs
ss
cmp
push
dec
push
mov
add
adc
sub
sub
fcmovne
mov
sub
ja
int
mov
inc
and
mov
test
test
repz
aam
das
sahf
sbb
call
iret
push
sbb
les
sti
jmp
bound
mov
adc
lret
push
imul
add
inc
test
add
mov
cmp
or
mov
rcll
adc
mov
out
dec
imul
out
in
gs
std
sbb
into
sub
sub
adc
push
pushf
pushl
lea
jmp
inc
xchg
int
push
frstor
jge
xchg
mov
jbe
fmulp
cmp
mov
fcomps
cmpsl
jns
mov
fcmove
cltd
lds
and
fsubp
cmp
fdivrs
dec
notb
sbb
js
mov
jge
xor
in
frstor
pop
les
aaa
cmpsl
xchg
push
outsl
pushf
push
xorb
mov
mov
mov
sarl
cmp
ficoml
repnz
gs
add
push
sbb
repz
ret
repz
sbb
pusha
les
add
cli
leave
repz
cmp
nop
mov
leave
data16
jae
sbb
xchg
cmp
fiaddl
fcmovbe
or
sbb
cld
arpl
icebp
sbb
adc
sub
cmp
std
sbb
int
adc
inc
rorb
jp
fsubl
xor
mov
add
or
lds
xor
cs
fnstsw
dec
jnp
iret
mov
xlat
push
jl
gs
insb
icebp
cmpsl
sub
scas
mov
mov
push
scas
add
fbstp
adc
in
mov
je
mov
pop
das
pop
scas
sbb
jae
sarl
mov
incl
jo
sub
jbe
clc
xchg
and
xchg
shll
pop
test
mov
xchg
mov
add
andl
mov
andb
sbb
lods
outsb
dec
mov
sahf
stc
xlat
test
inc
sbb
int
push
movb
push
jl
or
int3
pop
and
cld
xchg
and
dec
leave
dec
inc
cmp
fldt
push
das
fwait
test
outsl
std
sahf
add
in
das
movsl
adc
sbb
sbb
xor
shll
test
or
pop
xlat
insl
sub
mov
sbb
push
pusha
jl
repnz
loop
repnz
in
lret
mov
inc
lcall
cmpsb
popf
rcr
mov
jo
mov
dec
cli
sub
jnp
ljmp
mov
je
mov
fidivl
pushf
fdivrl
sti
loopne
repz
lods
or
jae
outsl
notl
jl
pusha
or
pop
cmpl
sbb
jae
aad
mov
adc
les
fnstenv
fistpll
mov
sbb
std
sub
fs
std
jbe
clc
sub
fwait
popf
cli
cwtl
fidivl
outsl
sub
sti
sbb
arpl
imul
mov
mov
aas
cmpsb
jnp
dec
dec
pop
leave
arpl
and
sub
imul
sahf
stc
mov
leave
es
stos
or
pop
jno
jb
pop
shll
mov
mov
jbe
push
pop
scas
push
mov
fidivrl
addr16
mov
in
ja
jge
jecxz
outsb
push
es
sub
and
xchg
jmp
popa
mov
js
out
aas
loop
test
sub
in
ljmp
aas
sub
xchg
xor
and
sbb
jnp
sbb
or
lcall
stc
mov
mov
pop
adc
outsl
xor
mov
sbb
cs
mov
js
sbb
mov
lcall
divl
add
ret
dec
shll
xor
pop
lods
imull
jb
xchg
dec
xchg
inc
or
jbe
frstor
pop
sub
sbb
stc
pop
jns
or
fld1
mov
add
insb
fistl
jge
fldt
pop
divl
rcpps
test
inc
pop
pop
jecxz
pop
fwait
adc
ss
and
cmp
mov
mov
push
stos
inc
inc
loopne
addr16
pause
in
dec
data16
outsl
jo
jmp
out
negb
mov
pusha
jmp
movsl
clc
jl
xor
in
xchg
lods
nop
pushl
addl
mov
adc
sbb
xchg
lret
push
inc
pop
mov
shr
xchg
outsb
or
sbb
push
xor
push
popf
push
pop
sbb
xor
push
sbb
dec
shl
pop
cmpsb
fldcw
movsl
dec
mov
sub
out
mov
testl
fs
out
push
inc
and
xor
dec
mov
daa
jle
shrb
mov
loope
ja
cmpsb
jae
test
mov
stos
xchg
and
dec
insb
rcrl
mov
hlt
jo
lods
add
lret
push
data16
int
mov
or
std
pop
fidivrl
mov
xchg
andb
clc
loope
iret
into
mov
add
imul
stos
ljmp
fidivrs
das
jbe
add
das
int
leave
sbb
les
push
lds
mov
lock
xor
iret
out
js
shr
push
test
pop
jmp
jge
mov
stos
push
stc
data16
mov
push
sbb
push
iret
int3
mov
cld
push
push
jb
jp
cmp
mov
sub
cmp
shrl
xchg
and
inc
push
test
dec
lods
mov
lret
int
lock
xchg
mov
ss
mov
mov
jg
aaa
arpl
aad
pusha
popf
je
cmp
xor
sarb
mov
mov
inc
sub
mov
inc
ljmp
pop
enter
loop
xor
mov
test
sub
jg
inc
in
repnz
xchg
xchg
fs
rcrb
pop
lea
sub
lea
sbb
jg
out
mov
movsb
lds
push
xor
sahf
fsubrl
fdiv
mov
prefetch
or
stos
out
roll
or
imul
aas
ret
es
inc
aas
lock
cmp
push
jl
stos
repnz
leave
xchg
test
cmp
jp
mov
mov
sub
insb
filds
add
cmpsl
sbb
cmp
push
mov
test
scas
imul
jo
imul
cli
ja
xlat
rolb
xor
daa
xchg
enter
jne
jb
ret
sub
in
out
xor
mov
stos
shr
inc
xchg
mov
xor
xor
push
jnp
adc
mov
je
ret
hlt
std
mov
jno
fs
inc
xchg
mov
jns
stos
popf
in
sbb
sbb
outsb
mov
and
push
faddp
pop
mov
push
mov
movsb
pop
push
clc
pop
les
push
pop
xor
pop
sbb
ljmp
inc
xor
lock
mov
jle
jbe
cmp
add
jmp
xor
inc
stc
adc
jnp
popf
imul
cwtl
sahf
xor
lock
add
imul
mov
pop
xor
lret
mov
and
xor
les
stos
xor
sub
fs
mov
dec
addr16
call
mov
rolb
lds
lcall
insb
inc
mov
adc
nop
scas
fnsave
or
push
out
in
ret
cli
mov
push
dec
cmpsb
int
scas
push
add
xchg
fimuls
push
pop
mov
mov
sahf
rolb
mov
pop
adc
ss
repnz
rorb
push
mov
insl
arpl
inc
aam
xchg
mov
enter
das
xchg
jmp
lods
mov
and
sti
pop
jecxz
cli
mov
sbb
shrl
add
loope
aaa
mov
mov
jbe
aam
sub
add
nop
xchg
pop
xor
adc
push
out
push
imul
xor
push
imul
push
mov
pop
daa
cmp
mov
or
ret
jmp
popf
push
lds
stc
adc
lcall
into
shrb
push
dec
test
cmp
xchg
xor
data16
sbb
jg
mov
pushf
push
lea
jne
ret
popa
pop
lret
mov
add
push
xor
idivb
bound
lock
mov
pushf
dec
xchg
add
dec
mov
aaa
cmp
inc
loope
adc
in
dec
push
xlat
adc
dec
fistpll
popa
loop
std
aaa
cmp
mov
push
xchg
loopne
cmc
imul
xor
mov
imul
scas
dec
mov
sbb
ret
xor
sbb
shrb
adc
in
insb
bound
sub
mov
lods
jg
jno
and
ror
jmp
mov
mov
popf
and
or
repnz
adc
mov
cli
mov
lret
mov
push
into
insb
shr
iret
add
dec
mov
popf
push
mov
sarl
test
rorl
inc
movsb
outsb
nop
xor
imull
fucom
jl
sbb
adc
cltd
ss
lcall
sbb
push
pop
pop
into
int3
stc
sub
loop
adcb
mov
cmp
cmp
mov
and
adc
push
jmp
mov
fildll
inc
dec
clc
xchg
jo
subl
xchg
sbbb
loope
and
push
movl
call
addl
dec
aam
xor
mov
insb
repz
mov
idivl
jp
out
mov
mov
add
out
mov
call
idivl
jp
daa
testl
push
repz
mov
rcrb
xor
or
fisttpl
jo
add
xchg
das
imul
xchg
push
cltd
dec
push
notb
icebp
inc
out
pop
xor
icebp
xchg
add
jmp
shr
loop
imul
xchg
lods
addl
dec
sub
in
xor
in
in
pushf
sub
arpl
pop
sub
pop
js
ret
in
shll
sbb
push
mov
lcall
lods
mov
or
sbb
jnp
sub
loopne
leave
scas
jbe
dec
xor
mov
cld
push
mov
lcall
mov
ds
out
adc
addr16
sbb
in
mov
loopne
mov
call
lds
push
pop
outsb
mov
sbb
aad
fldt
fldl
ja
or
in
aaa
aad
jl
negb
jnp
out
fidivrs
sub
add
stos
xchg
pop
fildl
sbb
mov
mov
sub
cmp
imul
mov
aas
or
ja
jg
adc
sub
push
out
enter
dec
inc
test
clc
mov
jmp
nop
fwait
popf
mov
repnz
mov
cwtl
cs
popf
iret
inc
push
in
xor
sbb
jns
mov
pop
out
push
loope
jmp
adc
pusha
xor
ret
inc
sub
lcall
lods
mov
stos
mov
test
sti
adc
xchg
push
call
push
sbb
lock
clc
inc
jb
imul
sti
dec
fwait
sub
outsl
leave
test
dec
negb
add
pop
lcall
sahf
cltd
popa
shrl
mov
push
pop
bound
lahf
adc
pusha
push
jg
jg
inc
or
lods
jno
mov
cs
xchg
ret
push
jge
sbb
push
mov
imul
cmp
add
incb
loopne
and
or
mov
shrb
test
test
rorb
shlb
adc
jo
cmp
scas
or
jge
or
mov
mov
ret
jo
cwtl
xor
addr16
cld
popa
dec
inc
divb
pop
enter
jecxz
bound
pop
add
cmpb
jae
addr16
pop
mov
pop
mov
push
movsb
jo
lcall
adc
bound
sub
jle
aas
test
jle
call
xor
mov
sub
es
jbe
sub
sub
mov
bound
or
aam
mov
pop
adc
mov
pop
das
rorb
mov
std
test
sbbl
fdivrs
dec
or
mov
cmp
sub
cmpsb
add
shlb
jb
enter
call
push
mov
jbe
mov
or
xor
jle
out
mov
shlb
pusha
add
jae
and
mov
jb
inc
xchg
and
mov
jl
pop
jl
push
xchg
outsb
sbb
mov
test
fs
add
inc
fdivr
outsl
pushf
call
push
movl
pushf
jmp
movb
mov
movl
mov
pushf
lea
jmp
les
gs
sub
pushl
xor
pushf
mov
das
xchg
lock
stos
lock
sub
or
cltd
loopne
shll
inc
rcrl
clc
add
jp
pop
sub
ret
jo
pop
jbe
cli
or
and
lds
and
ficoms
adc
sbb
sub
adc
mov
ss
int3
call
fdivr
xor
pop
je
xchg
or
repnz
lahf
mov
test
lcall
and
xor
mov
pusha
pusha
call
jmp
cmp
test
xor
test
shr
cmp
call
call
add
inc
inc
jb
subl
push
test
fildll
mov
inc
cmc
ja
cmp
sub
xor
iret
jmp
icebp
mov
test
stos
clc
and
pusha
int
dec
js
into
and
pop
xchg
mov
call
into
cs
imul
jbe
adc
sbbb
and
push
movsb
mov
movsl
or
xchg
mov
dec
push
mov
inc
popl
cltd
cmp
sarb
fmuls
adc
test
in
out
cld
dec
and
jae
pushf
fcmovnbe
cmc
mov
popf
daa
in
stc
dec
popa
mov
fiadds
cmp
inc
add
dec
mov
mov
jae
movsl
jecxz
cmp
jbe
mov
mov
mov
mov
pop
push
mov
mov
jbe
arpl
xor
inc
adc
inc
pop
scas
or
lret
adc
lods
pop
test
nop
imul
sbb
aas
dec
cld
mov
push
push
mov
repnz
xchg
dec
jns
dec
sti
aas
add
sub
ret
adc
jmp
mov
and
inc
lret
ja
lret
mov
test
in
dec
adc
or
loope
roll
test
test
popf
test
mov
xor
mov
test
jns
cmpsb
sbb
dec
adc
loopne
pop
cli
jo
mov
xchg
mov
jp
testl
pop
lods
std
aas
fs
lcall
dec
dec
in
mov
jle
in
andb
xchg
xor
scas
sti
std
imulb
popw
xor
and
in
sub
cld
xchg
sbb
add
lcall
adc
jns
dec
lahf
lds
lcall
sbb
fistpll
jno
mov
jecxz
lock
call
andb
stc
popf
scas
pushf
adc
and
fistpll
mov
pop
lahf
sub
fnstcw
mov
mov
enter
daa
subb
jmp
into
mov
mov
add
dec
bound
push
xor
loope
movsl
insb
xchg
add
in
fwait
movsl
fstp
jb
cmpsb
sub
mov
adc
lock
or
cmc
dec
lret
ss
lret
popa
xchg
cmp
mov
cmp
mov
scas
les
xchg
sub
lcall
ljmp
jl
sti
xor
dec
xchg
xor
fwait
push
xor
xlat
mov
leave
or
pop
cmp
mov
pop
imul
fsubrs
int
inc
test
push
xor
das
xchg
mov
insl
popa
mov
enter
lds
lahf
mov
cmp
mov
push
cld
insb
add
inc
cwtl
aas
ret
test
sub
and
andb
xor
jo
fdivrl
mov
aas
mov
lahf
test
or
aad
fmul
xor
rcrl
stc
pop
daa
jnp
sahf
lcall
fadd
rcl
daa
add
lcall
xor
lret
fnstenv
inc
inc
outsb
out
jecxz
out
push
dec
call
pop
daa
test
jbe
push
pop
enter
outsb
mov
arpl
xor
xor
das
out
jp
test
ss
cltd
movb
mov
sahf
jne
fs
or
pop
andl
rcl
fnstenv
lcall
push
mov
xor
xor
dec
movsb
iret
mov
ss
loop,pt
xor
jmp
movl
pusha
movl
pusha
pushf
lea
jmp
push
fiaddl
pop
mov
push
cmp
pushf
cwtl
push
mov
inc
sarb
mov
sub
in
movsb
inc
clc
popa
imul
int3
xchg
fld
fwait
in
adc
mov
pop
sub
lock
adc
in
aaa
lret
cmp
mov
out
data16
dec
in
imul
and
sbbb
ss
pop
pop
test
fisttpl
mov
mov
push
push
fimull
add
sbb
incb
mov
sbb
les
lds
shl
test
push
aaa
aam
shlb
int3
and
and
mov
lods
mov
sub
stos
push
mov
lcall
and
cmpsb
jbe
push
pushf
mov
pushl
lea
jmp
fistpl
clc
xchg
fcompl
pop
aad
xchg
js
je
bswap
repnz
add
shlb
or
addr16
push
ret
xor
or
push
out
pop
sub
lcall
push
add
pusha
movl
pusha
mov
pushf
mov
lea
jmp
movl
pusha
pushf
pushf
pushf
lea
jmp
jno
mov
and
add
mov
fimull
cmpsb
std
sti
lock
int
and
stc
pop
roll
mov
xchg
stos
xchg
mov
cmc
or
mov
inc
clc
and
adc
add
arpl
jb
rcrb
cltd
inc
jb
imul
jae
pushf
or
in
ja
aam
or
ja
inc
jp
daa
lret
shrb
pushl
aam
sbbb
cli
gs
xor
icebp
mov
mov
pop
push
sbb
cmc
movsb
xchg
das
jl
data16
fwait
es
sbb
lock
pop
xor
sbb
jnp
call
dec
fwait
sbb
jbe
and
push
cmp
mov
lret
sub
lret
imul
pop
or
jge
test
in
push
mov
aaa
jnp
in
or
xor
jmp
movl
mov
pushf
pushl
pushf
lea
jmp
jmp
repnz
scas
ror
pop
fwait
cmp
jb
push
lods
int
dec
or
inc
cmpsb
jmp
cld
inc
inc
out
mov
loope
lcall
adc
inc
dec
cld
xchg
fs
pusha
stos
xchg
outsb
add
cmc
scas
push
or
insl
xchg
cmp
mov
fcmovnb
or
js
xor
mov
or
adc
xor
push
sub
mov
popl
outsb
iret
xor
test
shr
cmp
sub
btc
mov
xor
test
btr
mov
add
jns
call
xchg
push
inc
sbb
adc
fsubs
int
je
fcoml
dec
cmc
xchg
addr16
clc
dec
in
ljmp
and
cli
cwtl
aad
loope
addr16
inc
ficoms
mov
subl
inc
test
jns
mov
xor
std
ljmp
aaa
add
jle
je
nop
cmp
fcomps
xor
addr16
cs
mov
mov
xor
lea
inc
mov
cld
pop
pop
or
arpl
cmpsl
xor
jmp
pop
jmp
add
jmp
aas
hlt
addr16
xchg
ficoml
jae
arpl
clc
mov
sbb
daa
lods
repz
lods
mov
bound
movsl
fwait
cmp
push
jne
jnp
push
enter
add
mov
cmovno
mov
mov
cmpsl
out
aad
dec
jo
inc
insb
cmpsl
ret
lods
xor
ret
lods
xchg
jl
push
inc
cmp
jg
lods
or
ret
repnz
test
ds
mov
lret
pop
lcall
sti
pop
fistpll
das
mov
pop
cmp
lret
repz
flds
test
mov
lods
push
das
loope
xchg
aas
pusha
xchg
fsubrl
aad
mov
ja
sub
inc
and
mov
in
cs
jbe
fsubrl
mov
sahf
xchg
addr16
scas
xchg
lods
xor
inc
mov
dec
out
dec
shll
and
es
mov
loopne
lock
out
sub
mov
fidivs
aam
add
add
cmp
cmp
mov
hlt
or
insl
jl
pop
or
pop
out
test
pushf
jno
arpl
mov
fprem1
pusha
inc
mov
sbb
hlt
xor
and
shl
aam
jno
xlat
jne
hlt
cmpl
test
inc
stos
cmp
lods
dec
inc
shlb
lret
mov
test
mov
or
xor
lock
add
sub
sub
sub
cmp
lods
call
repz
sbbb
xchg
adc
stc
fsincos
pop
outsb
loope
push
sub
clc
sub
mov
mov
add
fldl
mov
xchg
enter
mov
pop
outsl
addb
cld
outsl
aad
aas
cltd
iret
ret
icebp
aaa
inc
cs
test
lcall
cld
push
lahf
add
jnp
adc
ja
vpcomud
rclb
mov
aas
xchg
pop
aam
mov
ret
sub
add
seto
mov
jmp
add
jmp
dec
je
data16
and
data16
ret
iret
or
mov
dec
jp
cmp
lcall
fsts
cwtl
pop
test
xor
imul
outsl
call
inc
shr
jecxz
xlat
je
add
mov
mov
movsl
and
stos
je
incb
jnp
shr
nop
sub
xchg
addl
cmpsb
rolb
or
xor
nop
pop
sub
pop
and
xchg
lods
inc
pop
xor
jmp
mov
ret
stc
xlat
shl
popa
dec
mov
xor
icebp
jae
mov
jecxz
xchg
sti
push
pop
loopne
jb
push
ss
lret
pop
cmp
pop
mov
and
fwait
inc
push
data16
shl
cwtl
cli
xchg
test
xor
xor
cmc
cmp
fimull
adc
outsl
mov
cmpsl
push
add
mov
xor
cmc
andl
mov
sbb
sub
and
imul
lea
or
push
repz
pop
cs
sub
dec
shll
and
data16
pushf
sub
iret
add
mov
outsb
mov
xor
fbstp
fnstsw
mov
jne
adc
adc
push
movsl
xor
insl
jmp
cmp
or
mov
xor
adc
xchg
fcoms
pusha
adc
cmp
xorb
cs
jg
and
repz
or
movsl
and
or
fcoms
sub
dec
add
loop
das
cli
or
adc
inc
andb
xor
movsb
sahf
mov
jns
mov
dec
sarb
xor
repnz
rcl
xchg
in
pop
ret
mov
xor
int3
mov
xchg
xor
pop
cmpsl
xchg
dec
sub
clc
fldt
mov
sbb
mov
mov
sub
mov
sub
test
pushf
cmp
xchg
fisttpl
repnz
shll
push
xchg
pop
mov
and
add
adc
sarl
adc
dec
mov
lcall
mov
dec
call
mov
lcall
inc
cld
mov
loop
xchg
pusha
mov
int
les
insb
cmp
xor
sahf
addl
loopne
ret
and
and
pop
outsb
adcl
add
loope
in
hlt
out
mov
sahf
addl
mov
rcrl
mov
shrb
sbbl
into
das
mov
push
arpl
movsl
sti
push
mov
jno
lcall
dec
aam
fwait
mov
cmp
jg
mov
pop
lret
xchg
add
rcrb
outsl
push
xchg
ja
inc
mov
jnp
ljmp
jno
fcmovu
mov
pop
xorb
into
mov
cli
mov
sub
push
test
subl
ljmp
hlt
pusha
cmpsl
in
mov
icebp
idivl
cmp
cmp
xor
test
test
xchg
frstor
repz
push
bound
or
jge
icebp
dec
ss
mov
xor
jg
jge
mov
xlat
frstor
aad
sbb
lcall
adc
mov
dec
in
imul
jnp
mov
add
addr16
insl
adc
lcall
clc
ucomiss
adc
add
inc
mov
dec
sti
xor
les
pushf
jnp
in
xor
xorl
das
inc
inc
inc
xor
aam
jmp
mov
xchg
mov
add
and
jo
sub
cli
into
xor
cmp
lds
or
andb
ss
cmpsl
mov
mov
mov
lret
mov
roll
sbb
pop
pop
scas
cs
xor
sub
cmc
cltd
imul
xchg
xchg
sbb
pusha
leave
mov
hlt
aad
jecxz
cmp
xchg
adc
mov
xchg
mov
mov
decl
repnz
push
cmpsb
adc
or
sbb
addr16
xor
ret
dec
insb
aad
mov
pop
mov
rcl
xchg
or
ds
fcomps
sub
and
cwtl
cmp
inc
and
inc
add
les
insl
push
test
ficoms
stos
insb
gs
int
jno
outsl
fstps
jmp
lcall
add
push
fildll
dec
xlat
inc
loop
adc
lcall
scas
push
xor
pushf
add
mov
daa
mov
jp
cltd
jmp
add
adc
dec
add
adc
insb
enter
inc
add
sub
or
dec
sbb
add
add
das
inc
mov
ret
mov
mov
bnd
sbb
arpl
push
push
popa
daa
pop
ja
xor
xchg
dec
push
dec
stos
push
outsl
mov
lcall
clc
cmc
movb
mov
lea
jno
movsbw
and
cmp
add
shrd
test
not
xor
sar
add
mov
pushf
setno
shrd
shr
sub
or
bsr
add
add
dec
stc
and
shld
setl
mov
push
shr
pushf
clc
add
not
ror
mov
bts
shrd
bsf
add
shrd
stc
rcl
xor
movzbw
bsf
add
call
jmp
ss
xchg
xchg
arpl
or
enter
jp
jg
pop
dec
adc
sbb
jle
in
lcall
ja
push
cmp
push
mov
subb
xor
xchg
mov
filds
mov
inc
pop
stos
xchg
and
lock
add
orb
jns
xor
xor
ss
pop
testb
push
jo
cltd
out
je
xlat
ja
cmpsb
js
mull
stc
jno
push
sub
cmpsb
rolb
aad
mov
add
sbb
imul
pop
jnp
sbb
fucomip
out
fwait
out
leave
loop
push
adcb
mov
rolw
xor
aam
cmp
dec
icebp
cmp
add
sub
andb
mov
lret
mov
and
push
pusha
pushf
push
lea
jmp
pusha
pusha
movl
movl
movl
pushf
pushf
lea
jmp
mov
pop
iret
fdivrl
jo
loope
jge
push
sub
repnz
push
int
lea
ret
inc
xor
adc
rorl
and
push
dec
in
lea
pop
xchg
ret
mov
repnz
insb
xor
sbbl
lret
inc
pusha
movl
pusha
lea
jmp
mov
ljmp
push
xorl
dec
xor
fiadds
mov
lret
shll
out
hlt
push
movsl
fs
dec
js
adc
pop
je
lods
insl
xor
mov
aaa
aaa
sbb
dec
clc
push
movsl
arpl
inc
mov
xor
ljmp
push
xor
cmpsl
and
xor
out
ss
popf
mov
movsl
repnz
push
insl
mov
push
bound
mov
inc
mov
mov
lods
iret
movsl
jae
sbb
adc
mov
shll
scas
repnz
mov
xor
je
out
fcoml
adc
sub
js
push
pop
mov
mov
inc
loop
lcall
popa
push
dec
popf
fldl
and
js
inc
out
lcall
ds
xchg
push
push
movl
pushf
pushf
push
movl
pushf
pusha
pushf
mov
lea
jmp
xadd
mov
rcl
adc
call
jmp
test
movw
lea
jbe
push
lea
jge
pushf
das
mov
or
ror
bswap
bts
mov
jmp
jmp
xor
add
sub
cmp
mov
mov
aam
leave
push
xor
push
loop
gs
jbe
and
adcb
dec
xor
pushf
pushl
jmp
jmp
pusha
movl
pusha
lea
jmp
aad
in
nop
adc
ret
sahf
cmp
push
cld
jge
loop
call
stos
xor
lods
mov
andl
in
sti
out
sub
leave
stos
test
lods
cmp
test
pusha
int3
lods
mov
inc
mov
xor
fptan
test
jno
jb
imul
sbb
dec
sbb
in
test
fnstcw
lds
int3
aad
andl
xor
lock
test
ret
pop
clc
xor
xor
mov
push
xchg
mov
jge
jbe
in
mov
sbbb
add
pop
sbb
mov
mov
insb
and
jns
movsb
jp
lcall
push
inc
sahf
popa
ja
popa
clc
outsb
sbb
loope
mov
push
int3
mov
mov
daa
cwtl
out
mov
pop
mov
nop
inc
lds
out
pop
fstps
xor
inc
movsb
das
or
pop
and
mov
adc
or
frstor
xchg
xchg
dec
push
cmp
mov
xchg
mov
hlt
pop
sbb
push
insb
pop
imul
jb
insb
pop
sarb
maskmovq
imull
js
dec
lods
mov
cltd
jns
lock
divb
or
rclb
cmc
pop
adc
sbb
rcll
test
hlt
lret
repz
lret
and
test
xchg
adc
jo
scas
push
push
push
fisubs
test
jmp
or
sbb
cmp
mov
loop
mov
or
fidivl
push
fnstenv
mov
mov
dec
jmp
cld
cwtl
enter
cmp
or
adc
push
push
push
inc
dec
insb
shll
xchg
xchg
pop
cs
and
jg
or
or
ret
mov
dec
jno
mov
push
lret
xchg
cld
mov
pop
arpl
out
in
jb
sub
adc
pop
aaa
mov
or
lds
bound
push
fdivrs
push
popf
jle
lock
hlt
xchg
mov
out
ja
pop
mov
stos
mov
in
leave
icebp
loopne
pusha
mov
int
inc
push
push
lock
sbb
and
lods
mov
aaa
xor
in
sub
out
ljmp
pop
xchg
das
mov
int
repnz
orl
pop
mov
push
pop
cltd
sub
xchg
rcll
out
xchg
addb
rcr
je
dec
cmp
data16
pop
stc
sub
in
mov
bound
popa
std
jle
arpl
adc
jecxz
shr
mov
jbe
jns
cmp
mov
mov
or
sbb
pop
xor
pop
cmp
jnp
test
sub
outsl
outsb
push
aad
mov
and
mov
lods
or
adc
mov
outsl
dec
mov
jmpw
pop
js
cmpsb
inc
cmc
xor
int3
xchg
xor
mov
push
shl
out
aaa
xlat
in
push
and
xor
imul
xor
icebp
sti
fadds
xor
in
mov
cld
push
das
add
rol
mov
icebp
push
jno
push
scas
out
xor
jecxz
mov
mov
adc
mov
stos
add
xor
dec
mov
or
leave
mov
add
in
sub
mov
mov
scas
cmp
push
add
mov
mov
aad
jmp
mov
mov
or
pop
dec
inc
in
mov
adc
cmp
jbe
in
jmp
xor
inc
orl
movsb
mov
leave
bound
je
pop
or
add
out
xor
pop
imul
xchg
add
neg
push
add
push
pop
add
bound
shl
mov
lods
sbb
mov
cmp
test
xor
dec
outsl
or
jbe
mov
sub
xorl
xor
in
gs
in
in
push
scas
lock
mov
movsb
xchg
mov
sub
or
or
dec
ss
sub
insb
ss
cli
movsl
fs
mov
testl
jbe
shrb
adc
mov
rorl
and
bnd
ljmp
jmp
pop
add
rol
shl
movzbw
rcr
shl
call
pushf
pushf
jmp
repz
aad
jecxz
sti
fistpl
sbb
scas
mov
push
outsl
int
sub
push
jg
mov
push
in
cmpsb
inc
or
xchg
lods
xchg
cmc
mov
jnp
popa
mov
in
push
sbb
mov
dec
adc
sbb
sub
je
sahf
sub
iret
pop
sub
push
insb
mov
sub
stc
in
lds
addl
inc
push
outsl
push
xchg
and
icebp
xchg
dec
mov
inc
cld
jne
lds
aam
push
add
mov
jno
clc
sub
icebp
lret
mov
popf
aad
dec
jae
enter
pop
push
jge
pop
mov
fnsave
ljmp
xor
mov
jno
push
outsb
add
test
mov
daa
sbb
jb
daa
js
jb
xor
dec
in
ljmp
xchg
negl
xchg
push
sub
pushfw
mov
push
push
daa
inc
fbld
adc
movsb
pusha
out
mov
shll
jle
fpatan
nop
loope
movsb
pusha
or
inc
popa
and
imul
in
arpl
insb
and
mov
dec
cwtl
mov
add
dec
push
insl
adc
imul
test
cmp
push
xchg
stos
mov
xor
cmp
fnstenv
div
adc
loopne
jmp
pop
movsb
sub
xor
sbb
loop
stos
fsubrp
js
leave
sbb
sbb
loop
adcl
hlt
or
cmp
inc
dec
mov
sbb
sbb
jns
jne
fsub
cmp
cmp
das
sarl
popa
iret
xor
repz
push
inc
sub
push
out
dec
cli
int
mov
cmp
sub
cmc
mov
cmp
call
shr
clc
cmc
add
shl
test
mov
jmp
pushf
pushf
pushf
movl
movl
push
push
jmp
pusha
pusha
movl
movb
mov
movl
pushf
lea
jmp
pushf
movl
dec
cmc
stc
sub
push
pushf
mov
stc
cmc
mov
movb
test
stc
test
push
push
pushf
push
lea
jge
xadd
movzbl
movsbw
mov
shrd
mov
cmc
pusha
mov
cmp
pusha
lea
je
sar
btr
mov
cmp
test
movl
pusha
mov
jmp
shr
cs
imul
pop
fdivrs
lods
enterw
or
stos
loope
js
add
movsb
pop
inc
jb
jns
movsl
mov
int
sarb
add
jmp
je
out
push
or
xchg
dec
shrl
loopne
shrl
jmp
out
push
and
pushf
pop
inc
insl
sbb
insl
pusha
pusha
mov
push
or
cmp
or
lahf
sub
movsl
mov
push
sbb
xor
dec
cmpsb
int3
loopne
or
pop
aaa
ret
sbb
jge
mov
fsub
sbb
popl
loopne
mov
push
or
inc
arpl
stc
sub
iret
ret
mov
ret
loop
lock
push
add
xchg
mov
cmp
xchg
leave
sbb
jo
popf
int3
ficompl
loop
xor
cmc
mov
mov
inc
into
stc
or
mov
or
lods
mov
das
fcmovu
mov
bound
jb
imul
and
push
xchg
and
inc
xor
xor
pop
mov
mov
push
shll
push
push
out
xchg
sub
adc
mov
test
scas
sbb
adc
push
adc
fcompl
ja
rclb
mov
sub
addr16
cltd
and
push
push
jmp
int3
repnz
xorb
outsb
mov
pop
mov
xchg
sbb
movsb
out
push
push
xor
add
pop
ja
inc
xor
push
jle
cmp
in
sub
or
mov
or
in
jo
pop
add
sbb
or
cmpb
mov
jmp
mov
pushf
mov
ss
push
mov
mov
test
mov
aas
adc
xor
and
cs
dec
pushf
mov
test
fld
inc
cli
cmpl
add
mov
adc
xor
icebp
mov
jmp
push
push
icebp
mov
mov
mov
movsb
xor
mov
push
sbb
fildll
jbe
mov
andb
push
addr16
pushl
pop
pop
ret
das
xor
shlb
sbb
mov
test
hlt
adc
loop
mov
lcall
jo
cmpsb
cmp
fwait
mov
add
and
adc
inc
jle
sub
and
xchg
test
cmp
add
lcall
mov
dec
sbb
mov
cmp
or
lcall
call
pushf
jmp
jmp
das
int
or
dec
ja
or
mov
and
lods
cs
out
lea
dec
add
sub
mov
push
mov
test
loope
test
lret
lea
xor
scas
dec
out
lret
stos
xor
movsl
fstpl
in
xor
mov
mov
sarl
jno
rcr
jecxz
loope
mov
mov
stos
sub
pop
scas
mov
dec
pop
sub
ror
jecxz
clc
mov
add
jbe
mov
mov
cltd
xor
or
jl
cld
mov
xchg
jae
sbb
mov
mov
mov
movsl
push
sti
sbb
sbb
xchg
xchg
dec
push
push
jl
dec
and
hlt
repz
adc
push
popa
xchg
je
dec
cmc
leave
in
xor
jecxz
push
lcall
mov
push
fcoml
pop
lods
outsl
mov
or
or
jno
loop
imul
jge
in
mov
daa
sub
add
fcom
outsl
jmp
in
rol
bound
aam
cmp
lcall
mov
sahf
xor
test
dec
lret
lret
inc
inc
ret
jmp
jnp
mov
out
enter
adc
mov
insb
cmp
cmp
add
sub
or
in
push
test
inc
jl
push
stos
push
and
mov
xor
mov
test
cld
shll
lods
outsb
xchg
mov
call
scas
movsb
mov
mov
mov
into
cmpsb
sarl
clc
pop
mov
jge
sub
mov
jge
xor
ljmp
loopne
andl
pop
sti
std
inc
xchg
pop
loopne
dec
cmpsl
push
insb
push
adc
repz
imul
push
cs
and
hlt
sub
cs
xor
fistl
bound
sbb
mov
addr16
out
lret
mov
push
push
sub
jne
cltd
dec
jp
mov
sbb
xor
sbb
xchg
mov
mov
loope
xor
fs
fistpll
push
in
jecxz
xchg
adc
sub
aas
jmp
sub
mov
lods
sub
add
sbb
push
cmp
dec
sub
mov
inc
sbb
es
cmpsl
xor
or
jmp
pushl
mov
and
lcall
dec
sub
mov
scas
add
mov
mov
cmc
mov
sbb
mov
jmp
fnstenv
and
adc
fsubs
inc
aad
in
xchg
dec
mov
aam
cmpsl
inc
or
or
mov
pop
jecxz
divb
stc
and
arpl
sub
jg
and
mov
cltd
adc
call
mov
mov
push
loopne
mov
leave
sbb
or
fistps
ss
sub
xor
in
push
mov
popa
popa
clc
out
popa
mov
sub
jge
je
rcrb
stos
lds
out
int
push
jp
hlt
push
faddl
movsl
pop
mov
dec
out
stos
out
mov
mov
fildl
ret
sbb
or
aas
jge
inc
xchg
xchg
sub
xchg
push
push
dec
testl
mov
inc
pop
mov
sbb
pop
xchg
in
dec
stc
xchg
aad
dec
add
divb
mov
pop
pop
outsb
push
fmul
xlat
out
jno
push
in
aam
pop
push
inc
dec
repz
repnz
inc
scas
idivb
test
and
cs
mov
lret
lods
adc
xor
dec
sub
jnp
mov
lahf
mov
clc
movsl
popf
jbe
ret
movsl
in
enter
cltd
dec
sub
mov
stos
rcl
nop
dec
daa
ret
rdtsc
or
and
sahf
clc
fisubrl
test
jmp
repz
addr16
cmp
andl
and
pop
lea
cmpsl
add
or
mov
mov
in
loopne
and
imul
bound
xor
xor
mov
inc
cld
jl
loopne
and
das
xor
pushf
movl
call
pushf
movl
push
pusha
movl
pusha
mov
pushf
lea
jmp
lds
xor
pop
mov
shrl
cmpsl
sub
mov
cmpsl
push
sbb
xchg
leave
in
ja
shrl
mov
orl
adc
ret
arpl
fs
pop
push
jo
sbb
inc
xor
fdivrl
js
mov
pop
inc
mov
fbstp
lcall
pop
xchg
jbe
aas
inc
and
pusha
xor
mov
js
pushf
dec
call
idivl
js
sbb
sbbb
lods
adc
lret
push
subl
insb
and
jne
dec
dec
mov
aam
arpl
fwait
loop
test
das
jbe
sahf
mov
fistps
ja
dec
mov
or
aam
fidivrs
lock
cmp
pop
add
cmp
and
sti
mov
mov
outsb
xor
hlt
dec
lock
adc
mov
inc
cmpsb
or
dec
jp
push
pop
fbld
inc
mov
pop
add
xchg
test
stos
push
cli
adc
lds
xor
cmp
in
in
xor
mov
inc
mov
out
aad
test
cltd
aas
lea
je
test
mov
test
clc
movl
stc
stc
mov
test
cmp
test
pusha
jmp
mov
cmpsb
mov
fwait
ja
iret
fildll
mov
jo
movsl
inc
aas
mov
sbb
push
in
inc
arpl
mov
mov
in
lret
pushf
gs
pop
sub
mov
out
imul
sbb
in
inc
push
sub
pop
clc
pushf
dec
jo
inc
in
xlat
cli
dec
aaa
outsl
adc
lock
push
outsl
shr
sbb
test
xor
dec
fidivl
xchg
xor
outsb
pop
sti
mov
dec
sub
mov
or
mov
mov
mov
sbb
push
arpl
loope
pop
ficomps
popa
adc
test
inc
jno
sarl
pop
pop
inc
dec
adc
pop
xor
add
loopne
sub
push
mov
mov
xchg
dec
add
data16
dec
xor
ja
xor
xor
xlat
test
xchg
out
shll
xchg
dec
pop
sub
hlt
xor
call
jmp
call
inc
lcall
aad
pop
notl
mov
jmp
jg,pn
out
cmp
in
push
das
cmp
js
and
dec
lea
ja
mov
cs
sbb
or
incb
push
enter
push
cwtl
aad
les
aas
push
inc
call
mov
sub
push
ficompl
int3
test
int
pop
decb
loope,pn
dec
pop
jbe
sbb
xchg
mov
mov
pop
jecxz
test
xchg
pop
and
fwait
and
jge
std
aaa
in
adc
les
jne
in
pop
mov
sub
stos
cmp
cmp
mov
push
fwait
mov
movsb
ljmp
xchg
and
mov
loope
loopne
in
jne
cmp
cmp
or
xlat
xor
and
jns
xor
pop
mov
pop
in
fisubrl
in
pushf
ds
outsl
adc
pop
stos
jge
add
loope
sbb
fidivrs
sbb
xor
gs
lcall
notb
lods
adc
iret
arpl
les
mov
in
mov
mov
jecxz
aas
pop
aaa
jmp
shrl
jp
jg
inc
cmpsb
outsb
xlat
popa
dec
loope
push
mov
xor
jnp
add
dec
das
xchg
sub
jg
int3
mov
inc
scas
daa
cmp
cmpsl
lcall
bound
fistpl
cmp
aas
xchg
push
jmp
pop
add
fucomi
jns
xlat
icebp
mov
popf
xor
int
lret
push
sbb
mov
sahf
addr16
xchg
fdivrl
sub
sub
jg
sbb
add
cmp
or
mov
mov
and
sub
es
sub
sub
cmc
push
in
adc
pop
shrl
divl
pop
addl
rcrl
int
fistpll
push
inc
es
lret
mov
jns
push
and
out
jg
push
mov
or
and
and
cli
push
or
push
mov
bound
cmp
add
cmp
stos
or
pop
adc
xchg
rcl
mov
fidivrl
push
jb
jne
jmp
pop
jmp
gs
cld
iret
dec
call
sub
incb
idivb
mov
pop
mov
aad
cmp
outsb
shlb
pop
mov
jmp
adc
push
push
cmpsl
scas
inc
lcall
add
outsb
int3
into
sub
lcall
pop
jns
ficoml
mov
lret
test
xor
push
xchg
data16
data16
rorl
je
xchg
add
lcall
fsubrs
cmp
imul
lcall
lcall
js
cmp
inc
jae
outsb
shlb
push
ret
or
outsb
mov
xor
adc
stos
das
sbb
inc
dec
dec
sbb
lret
test
aas
adc
add
int
in
jle
cmp
lods
loopne
dec
and
inc
movsl
jge
pop
push
sub
ds
cmp
or
pop
and
aas
adc
dec
and
scas
push
movsl
imul
mov
out
dec
sub
icebp
xchg
mov
out
mov
js
loopne
ret
leave
daa
push
cmpsb
jl
jge
aam
or
mov
call
mov
mov
jp
sub
mov
and
into
cld
sub
int
jle
orl
adc
push
inc
jb
push
bound
xchg
adc
sbb
lret
pop
div
icebp
fcmovb
hlt
inc
scas
xchg
fisttpl
and
mov
sarb
ret
xor
cmpsl
mov
lcall
cmpb
ret
popa
hlt
pop
mov
mov
xor
mov
loopne
lret
imulb
outsl
daa
fs
sbb
ret
dec
pop
les
cli
adc
jno
mov
xor
jnp
dec
push
addr16
adc
pop
insb
lret
jae
ret
jb
sub
adc
jno
jns
es
mov
lock
ljmp
icebp
shrb
mov
inc
outsb
sub
adc
imul
out
rorl
fsubr
mov
lods
dec
call
loop
push
pop
aaa
dec
fucomi
loope
sahf
sbb
cmp
xor
in
and
cs
push
sarb
push
mov
pop
and
out
rcll
ljmp
inc
andb
test
push
or
icebp
stos
inc
inc
add
out
dec
fidivrs
xor
out
or
add
sti
fmul
pusha
mov
cmp
jmp
jge
lea
cld
lods
out
mov
pop
popf
jg
outsl
push
push
add
mov
dec
mov
cmp
aad
add
push
sub
cs
cli
out
mov
jnp
mov
adc
das
movsb
jl
test
jnp
inc
pop
lods
roll
mov
add
jl
dec
jno
add
hlt
enter
cli
shr
dec
pop
js
lahf
popa
mov
lahf
sbb
jg
clc
shll
xor
arpl
jmp
xor
dec
sbb
arpl
rcrl
cmpsb
adc
add
dec
adc
jmp
jbe
andl
lret
ret
in
pusha
jl
cmp
mov
mov
decb
popl
mov
daa
push
popf
cli
ficoms
xchg
jmp
pop
das
push
jp
cmp
cli
jo
icebp
test
popf
mov
or
pushf
add
xchg
jmp
or
lret
cmc
dec
out
xlat
sub
sub
cmc
mov
scas
jle
xor
mov
xor
mov
lcall
lahf
mov
loope
dec
arpl
mov
add
xor
jo
stos
mov
pop
mov
in
mov
inc
mov
cmp
icebp
inc
negl
mov
cmc
xor
xchg
xor
xor
add
and
pop
pop
pop
inc
jae
psrlw
lret
std
fnstcw
dec
insb
js
shlb
lcall
jno
into
ret
ss
mov
mov
and
imul
fwait
xor
into
sti
idivl
mov
adc
pop
scas
adc
dec
dec
add
xor
and
ljmp
xor
xchg
sbb
jmp
xchg
ljmp
ljmp
xchg
in
jg
push
pushf
adc
int3
inc
test
testl
cwtl
aas
mov
js
lret
fistpll
xchg
mov
cmp
mov
lret
bound
dec
fldenv
lcall
cwtl
lods
mov
ficomps
outsb
cli
cs
insb
pop
js
insb
mov
dec
in
movsb
xchg
push
dec
dec
lods
pop
sub
pop
stos
mov
mov
xorl
pop
repnz
sarl
lds
mov
arpl
xchg
sub
push
std
loope
xchg
cmpsl
movsl
push
cmp
push
nop
icebp
mov
push
xor
xchg
mov
ret
or
shl
jle
enter
imul
sti
jp
push
clc
and
jns
sub
sahf
sbb
xor
pushf
mov
movl
mov
mov
pushf
push
lea
jmp
lcall
adc
sub
add
push
insl
xor
and
fidivl
loope
inc
pop
in
lcall
jno
andb
sub
adc
or
fildl
xchg
popf
or
push
gs
shrb
jp
dec
cltd
icebp
add
mov
inc
aam
push
push
cmp
cld
lahf
cmp
dec
cmp
popf
lods
mov
sahf
test
sahf
clc
movsb
jmp
jno
xor
adc
mov
push
xor
fwait
add
loopne
addr16
cmc
jmp
test
add
push
and
cmpsb
shl
pop
mov
push
mov
call
mov
nop
arpl
outsb
or
in
rorb
test
add
loope
mov
or
fcmovbe
rep
ljmp
or
xchg
mov
stos
lcall
pop
cld
dec
nop
pop
sub
iret
jp
dec
jp
push
vcmpss
call
xor
pop
cmp
xchg
js
cmp
mov
xor
sbb
fcoms
roll
mov
cmp
mov
in
adc
mov
jle
fmull
sti
mov
or
lods
aaa
repnz
jmp
sub
jne
mov
jl
push
out
orl
sub
xor
idiv
addr16
dec
xchg
pop
mov
shlb
adc
out
cmp
sub
mov
mov
fildll
outsb
mov
and
add
jp
out
mov
or
jecxz
mov
inc
xor
cmp
xchg
loopne
add
dec
and
jae
je
dec
and
dec
and
sub
adc
mov
leave
mov
movq
fiadds
pusha
mov
out
js
mov
test
scas
in
lcall
outsb
push
and
sbb
or
mov
scas
or
inc
jne
add
repnz
and
mov
dec
sbb
push
out
dec
adc
dec
dec
mov
loope
fwait
pop
pop
lock
cmp
xchg
sbb
gs
xchg
pop
ds
fadds
shrb
mov
ret
or
cltd
dec
js
dec
sub
mov
movsl
cmp
ror
and
mov
inc
xor
mov
pop
push
popa
fmul
jns
mov
inc
xchg
adc
xchg
dec
out
mov
out
cmpsl
adc
scas
inc
dec
sbb
sbb
jo
mov
and
jle
jne
cli
iret
leave
push
aad
push
rcrb
daa
es
lock
ljmp
mov
jno
mov
sbbl
cmpsb
xchg
mov
js
dec
nop
jb
out
jne
cmp
or
sbbb
dec
mov
arpl
sbb
insl
es
mov
in
mov
cmp
xchg
ja
es
xchg
sub
js
adc
outsb
cld
sbb
mov
aam
je
dec
fs
dec
scas
orb
call
ja
cmp
jb
mov
ret
shlb
aam
pop
sti
outsl
nop
out
or
or
pop
in
imul
dec
pushf
movntps
sub
mov
add
or
daa
mov
push
sub
scas
adc
lcall
dec
dec
dec
mov
movl
pushl
mov
movl
pushl
push
pushf
mov
lea
jmp
push
lea
jmp
sub
imul
lds
xchg
and
das
scas
mov
js
addr16
popf
sarb
xor
sbb
dec
mov
and
out
subb
lea
mov
das
mov
cmp
popf
sarb
daa
pusha
sahf
push
fdiv
lock
add
inc
pop
por
ret
mov
add
sub
mov
inc
shlb
sub
inc
dec
mov
mov
cmp
cmp
sub
cld
or
pop
lods
shl
cmpsb
xchg
push
sub
xlat
sbb
add
iret
pop
sbbl
adc
jno
insb
pushf
outsl
jge
std
iret
sahf
data16
mov
or
cmc
sahf
sbb
test
aaa
add
pop
and
out
in
jb
sbb
in
sub
mov
xor
push
into
mov
stc
imul
test
push
pushl
dec
pop
pop
lret
stos
adc
lcall
into
mov
imul
test
pop
ss
das
and
lcall
push
sub
lods
cmpsb
inc
fidivrl
xlat
xor
movsb
test
mov
dec
push
push
xchg
mov
and
je
cmc
dec
mov
sti
subl
pop
ja
out
setl
mov
sbb
decl
adc
cld
scas
inc
int
aaa
test
jmp
cmpsb
test
mov
mov
add
mov
or
outsl
stos
xchg
lcall
fiadds
lret
add
addr16
test
xorb
sarb
add
ret
fldl
or
adc
or
dec
ret
jnp
lods
jmp
pop
mov
or
pop
push
aad
add
pop
sub
insl
movsl
popf
icebp
cmp
repz
mov
push
iret
cmp
add
lods
cmp
out
mov
push
loope
into
push
add
adc
mov
cmc
popa
test
insb
addl
imul
cmp
xor
lcall
adc
pop
push
mov
cld
iret
addr16
adc
pop
lret
and
lcall
loop
call
push
xchg
cli
add
xchg
out
mov
sbb
add
aam
push
cmp
aad
dec
popf
lods
xlat
pop
sub
out
mov
dec
jecxz
insl
rcrb
add
lods
shll
or
jb
shlb
mov
xchg
mov
sbb
movaps
push
stos
mov
out
push
mov
das
arpl
in
dec
push
fadd
inc
and
cmpl
jg
mov
mov
dec
clc
push
repnz
lcall
cmp
cmpl
je
mov
sarl
sahf
addl
xor
add
call
lea
jge
push
movl
push
lea
jmp
mov
iret
mov
je
enter
pop
or
sbb
clc
js
add
adc
loopne
jns
lods
add
roll
sbb
jg
sahf
mov
pushf
mov
mov
clc
mov
gs
mov
out
dec
cwtl
out
idiv
in
hlt
loopne
dec
xor
mov
lds
cmc
mov
lds
pop
stc
dec
stos
test
js
lcall
lret
dec
bound
push
add
jl
adc
mov
sub
ret
jns
mov
out
aaa
xchg
mov
ja
sub
add
fmull
das
xchg
addl
lock
mov
aaa
adc
adc
jp
pop
adc
push
cs
loope
jmp
fnstenv
xor
ret
insb
lods
xor
xchg
cmp
push
pop
jb
lcall
ret
jne
ficoml
cld
mov
jl
lcall
imul
test
xor
xchg
call
mov
dec
stos
and
movsb
sub
je
stc
mov
das
icebp
nop
sub
push
stos
and
std
stos
outsl
xchg
jo
xor
js
cs
sahf
xchg
xchg
mov
cmp
cld
sbb
mov
mov
mov
andl
fsubs
sub
repnz
mov
xchg
xor
les
xchg
insb
pop
xchg
and
cltd
into
cmp
xor
pop
jae
dec
dec
jb
bound
xchg
aam
lcall
fnsave
out
dec
test
lahf
push
xchg
pop
and
pop
cli
lcall
xchg
outsb
imull
xchg
test
or
dec
inc
adc
mov
cli
or
xchg
jbe
sahf
xor
xor
sub
xchg
push
test
fsubrs
and
xor
jae
xor
bound
hlt
adc
leave
sbb
fldl
std
bound
negb
test
pop
addl
mov
adc
xchg
inc
out
jge
mov
xchg
jbe
mov
push
mov
mov
syscall
and
repnz
and
lods
mov
scas
push
movsl
hlt
lcall
inc
outsb
stos
pop
sbb
cld
xchg
mov
push
cltd
cld
out
fldt
add
lcall
jg
pop
pop
add
or
or
xor
test
cmp
movzbw
call
cmc
clc
xor
pop
inc
mov
mov
call
jmp
mov
add
stos
shl
mov
sbb
iret
pop
jo
movsl
addl
mov
mov
push
sahf
leave
int
push
out
dec
dec
xor
pop
mov
icebp
insb
shrb
add
push
mov
ss
mov
aas
inc
cmpb
cmpsl
or
les
mov
or
adc
xor
and
jno
imul
fyl2xp1
cs
jp
xchg
and
clc
pop
cmp
clc
sbb
push
or
xchg
ror
pop
je
popf
aad
and
bound
xchg
pusha
xchg
movsb
xor
aad
push
fidivs
xchg
cmp
push
mov
aad
push
rcl
leave
xor
ret
stos
shrb
call
dec
and
dec
ja
cmp
mov
jb
add
or
lret
push
lock
mov
mov
adc
mov
incb
cmp
mov
repz
rcll
push
sarb
sbb
mov
andl
mov
daa
ljmp
sbb
negb
or
mov
mov
inc
and
cltd
outsb
mov
pop
lcall
out
inc
mov
addr16
fadds
push
cmp
rcrb
int3
hlt
cli
dec
outsl
fistpll
dec
pop
clc
sbb
dec
jle
sti
fisubrl
or
ret
inc
data16
aaa
inc
mov
push
mov
pop
jno
pop
hlt
push
push
xor
out
lock
jg
lds
cmp
xchg
mov
movsl
dec
mov
or
decb
sbb
inc
inc
and
cmp
mov
mov
xchg
lahf
insb
inc
lcall
cwtl
sub
testl
mov
cs
test
adc
push
test
lcall
pop
add
xchg
xorb
frstor
push
inc
sbb
hlt
mov
ljmp
orb
mov
sub
push
inc
dec
daa
and
je
xchg
out
jnp
xchg
mov
ss
mov
or
sub
ja
xchg
jle
cltd
clc
je
aad
xor
cmp
push
and
mov
jecxz
xchg
test
jns
sbb
mov
inc
and
cmpsl
shlb
mov
pushf
mov
mov
mov
scas
loopne
jae
lods
scas
xor
sbb
sbb
decl
mov
faddp
push
cmpsb
add
xor
pop
das
lahf
mov
std
rolb
push
scas
mov
stos
xchg
stos
xchg
push
lea
xor
shr
dec
mov
xchg
xor
jl
movsl
or
or
icebp
lds
aad
push
mov
icebp
xor
or
and
push
cwtl
and
jecxz
cmp
push
inc
repz
pop
xor
inc
cwtl
in
jge
enter
lea
ficomps
and
and
adc
pusha
insb
xchg
popf
and
int3
cmp
je
dec
ja
cmp
mov
cmp
ret
sahf
cld
jge
fs
lret
lret
dec
sbb
sub
dec
jnp
push
insl
jo
imul
movsb
adc
and
int
fdiv
pop
movsb
adc
push
out
push
test
xlat
fstpt
mov
sub
gs
mov
inc
mov
in
lahf
imul
inc
xchg
cmp
adc
jne
out
pop
inc
jno
les
and
jle
jnp
clc
adc
in
or
jo
aas
data16
xchg
pop
push
into
in
adc
jecxz
or
sbbb
mov
jl
js
out
icebp
push
sbb
jg
pop
jp
dec
jmp
xor
adc
inc
popf
mov
jne
divb
stos
add
dec
out
cmp
iret
push
int
add
int3
jp
cs
dec
stos
insb
adc
jne
pop
stos
push
cmpsl
call
cmc
into
dec
cmpsb
adcl
push
inc
mov
lods
lahf
fisubrs
or
jmp
in
mov
jl
arpl
cld
lods
rcll
int
jp
test
pushf
arpl
enter
aaa
test
cmp
jmp
aaa
lods
push
repz
xchg
xor
incl
xchg
adc
dec
fs
cmp
shlb
lods
and
dec
jo
or
fistpll
jg
pop
divb
mov
cmp
xor
xchg
pop
test
das
or
add
les
sbb
mov
incb
iret
imul
or
inc
aaa
add
xor
sti
xor
lods
stc
or
daa
mov
pusha
xor
scas
fists
rcr
mov
push
push
or
jecxz
mov
and
push
pop
movsl
loopne
or
lret
xlat
jne
add
popa
aam
jp
shl
pop
out
mov
and
add
and
pop
subl
pop
or
xchg
pusha
dec
das
lods
int3
adc
loope
pusha
pop
je
cmp
add
lret
sub
cmp
les
jl
xchg
scas
aad
movsl
orb
and
mov
cmp
punpckhwd
loopne
mov
sub
mov
rcrl
xorb
lds
iret
out
aaa
iret
dec
push
sub
jle
xchg
jmp
pop
fwait
sub
jmp
out
imul
imul
or
inc
mov
or
mov
or
sbb
cmpsb
xchg
out
out
addr16
push
mov
lods
clc
sti
xlat
les
pop
jl
ret
sub
and
sub
mov
or
push
jo
nop
ss
testb
pop
xchg
lea
pop
nop
call
sbbb
lcall
rcrl
xor
mov
xchg
mov
arpl
and
pusha
mov
jbe
fsubrl
dec
and
lcall
and
jge
bt
mov
pusha
neg
mov
mov
sub
cwtl
lea
mov
xor
inc
lea
clc
jmp
scas
subb
rcrl
jno
push
adc
xor
push
clc
jb
ss
test
test
out
es
inc
or
cli
fimull
sub
push
inc
inc
lahf
repz
pop
dec
add
test
cltd
cmp
cltd
negb
mov
icebp
popf
mov
adc
loop
cmp
arpl
or
add
stos
sbb
cld
mov
dec
adc
stos
mov
sarb
jp
mov
inc
popf
inc
sbb
movsb
mov
push
sub
sbb
lahf
cmp
pop
lret
out
xor
lret
sub
test
mov
fcmovbe
mov
out
lcall
dec
xor
sbb
fdivrp
ret
insl
repz
lcall
cmc
notl
mov
jg
idivl
shlb
jnp
lcall
fdivl
lret
movsl
xor
cmp
ret
in
sti
sar
lcall
push
in
push
jmp
mov
xchg
push
pop
xchg
fucomip
mov
xor
out
push
ret
push
mov
mov
jb
or
repz
sbb
popf
cltd
cltd
mov
cmp
push
repz
or
and
lret
imul
lahf
scas
push
xor
out
and
cmpsl
iret
fwait
push
clc
movsl
sbbb
sbb
cltd
sub
cmp
fidivrs
inc
cmp
jno
std
xchg
shll
pop
ret
jg
jo
push
inc
cmp
ja
jbe
xor
pop
mov
mov
cmp
loope
test
decb
enter
mov
jle
xor
or
and
or
cwtl
xchg
ja
cmp
lcall
fisubs
hlt
cltd
sub
addr16
pop
stc
or
mov
adc
pop
push
rorb
out
or
jmp
btr
xor
dec
sbb
lret
insb
add
enter
xor
scas
imulb
ss
aad
inc
jg
jmp
gs
es
pop
push
jmp
push
or
lods
xchg
jo
out
dec
or
jg
adc
scas
xchg
lods
cmp
pop
loopne
cmc
rcrb
lock
in
mov
xchg
enter
std
add
dec
inc
hlt
mov
push
push
lds
adc
sbb
push
pop
jmp
adc
pusha
fcmovnbe
cmp
sbb
stos
fidivs
mov
mov
in
fsubs
push
or
jnp
repz
jp
aad
mov
js
sbb
lcall
push
into
jmp
cltd
adc
rcrl
push
rorb
add
rcrb
xchg
ljmp
or
push
es
mov
pop
fistpll
ficoml
out
jecxz
lret
push
les
sbb
mov
lret
pop
je
mov
test
rorl
pop
push
mov
das
cmc
mov
lods
jno
ds
mov
or
popa
jo
mov
dec
mov
sub
arpl
jge
lods
sub
lods
jnp
mov
in
adc
repnz
cmp
fistpll
and
fiaddl
in
ret
xor
popa
fdivrl
andb
cmp
or
fstpt
cmp
push
mov
aas
dec
outsb
mov
or
push
ljmp
push
cmpsb
aas
pushf
fidivrs
in
dec
outsl
sbbb
cmp
mov
mov
mov
xor
sbb
cltd
dec
push
ficompl
jbe
cmp
inc
push
jne
inc
bound
dec
jbe
ljmp
popf
fwait
inc
in
mov
in
mov
lods
xlat
fnstcw
std
lods
lcall
or
jg
mov
push
or
mov
xor
xor
not
jne
sub
pop
jge
adc
dec
xor
stos
cwtl
mov
scas
repnz
or
fdivrl
ret
xor
mov
aam
mov
cwtl
lahf
mov
and
dec
mov
mov
mov
lcall
loope
push
movsb
rcrl
fstpt
xchg
mov
sti
or
dec
sub
mov
inc
cmpsb
xchg
inc
xchg
je
sbb
dec
jmp
enter
das
movsl
mov
jg
cpuid
ret
cmp
pop
push
pop
mov
pop
xor
imul
xor
mov
pop
add
clc
inc
xor
out
ljmp
or
into
insl
xchg
inc
and
pop
mov
pop
jl
rclb
add
xlat
push
lods
in
push
loope
repnz
inc
bound
dec
sbb
cltd
repz
push
outsl
jbe
inc
add
or
inc
loopne
dec
out
aad
pusha
lea
movsl
or
sbb
xor
popa
sub
add
aam
sub
jg
dec
shrb
inc
fistps
ss
push
pop
dec
mov
jp
sbb
or
cmp
sbb
cld
add
pop
inc
test
frstor
ja
mov
sbb
int
inc
cmp
cmp
fwait
insl
loopne
inc
out
pop
lret
fs
fdivr
out
add
pop
pusha
jl
mov
mov
mov
dec
pusha
divb
je
add
and
imul
pop
data16
or
adc
mov
loop
icebp
xlat
xchg
nop
sub
out
adc
adc
push
mov
jno
pop
scas
movsl
push
xlat
jb
adc
dec
lock
repz
sub
dec
adc
cltd
pop
and
movsb
inc
push
int3
xor
adc
pop
dec
outsl
pop
leave
lret
cwtl
fmulp
nop
add
push
insl
adc
adc
loopne
xor
enter
imull
cmpsb
shr
cmpl
adc
pop
dec
adc
outsb
inc
int
sub
or
lock
xchg
test
xchg
push
sbb
jnp
adc
in
jb
pushf
outsl
cltd
sbb
mov
sbb
cmpsb
and
push
cmp
pop
std
cmp
pusha
lock
mov
js
mov
jg
int3
fisubrs
loope
dec
in
xor
lods
pop
int3
pop
jno
nop
xlat
sub
ret
pop
cwtl
xchg
outsl
mov
aad
add
inc
jne
xor
lea
xchg
xor
push
leave
and
fdivrl
ret
push
ja
xorb
push
fstpl
es
movsb
inc
pop
sahf
mov
ljmp
js
orl
ljmp
jmp
lods
and
xchg
push
push
cmp
enter
aam
push
jl
adc
jno
push
adc
int3
stos
xor
jns
sbb
repz
out
popa
aas
dec
pop
inc
xor
and
fimuls
sub
mov
sub
fiadds
push
outsb
out
stc
sub
inc
lock
and
sbb
dec
inc
lcall
dec
in
insb
aad
imul
or
data16
repz
data16
lcall
xor
xchg
xchg
pop
int
mov
mov
cmp
lock
loope
add
and
cmpsb
sahf
movntps
js
xor
dec
out
aam
bound
int
scas
jp
test
xchg
adc
repnz
or
sbb
sbb
or
in
pop
loopne
insb
popa
add
xor
push
sbb
test
lret
in
jecxz
lock
ja
fstpt
push
jecxz
movsb
xor
decl
sbb
shrl
testl
gs
xor
test
or
add
in
sbb
jne
cmpsl
cmc
inc
shll
pop
pop
cmp
pop
sbb
lea
jno
pop
pop
sbb
scas
xchg
movsl
jge
push
push
xchg
mov
sub
sahf
cltd
bound
jo
cmp
es
xchg
cmp
in
dec
or
and
lcall
lods
fbstp
aas
ret
in
add
dec
xor
pusha
movl
call
outsb
inc
roll
pop
jo
imul
iret
mov
in
and
fnstcw
add
cmp
add
add
adc
out
fwait
stc
ret
in
jl
dec
fwait
or
lret
lea
pop
jge
rcrl
lahf
loopne
add
iret
loopne
cld
adc
cmp
mov
adc
mov
push
push
and
cwtl
mov
and
mov
jecxz
bound
or
fs
jmp
nop
push
jae
les
jae
int3
loop,pt
daa
mov
xor
aas
leave
mov
and
pop
fsubs
xchg
out
shrb
lret
sub
mov
stc
add
pusha
stc
fidivrl
mov
cld
nop
clc
mov
hlt
cmc
sbb
repz
movsl
add
mov
fimull
data16
mov
fstpt
fnstenv
addr16
ror
xchg
aad
lret
leave
es
sbbl
fmuls
lock
aad
fldcw
out
adc
call
iret
cmpsl
pop
les
adc
into
sub
mov
dec
sahf
cmp
cmpsl
test
lods
inc
adc
xchg
sbb
hlt
sarb
cltd
andl
icebp
mov
stc
xchg
lret
push
loopne
fdivr
test
push
dec
jle
aam
xor
or
inc
inc
inc
ret
sbb
xor
jae
xchg
aad
jbe
xchg
mov
fnstsw
rcll
jns
mov
es
cmc
inc
sub
xor
arpl
int3
dec
ret
push
shrl
jp
movsl
jmp
sbb
movl
sbb
mov
cmp
sub
or
rol
cli
or
mov
mov
ret
out
call
lock
je
jp
jp
xor
stc
xchg
push
mov
cmp
repz
in
xlat
or
pop
jle
pop
pop
add
add
add
pop
xchg
or
push
pop
cmp
add
pop
pop
dec
cld
cmpsb
loop
pop
jmp
fbld
arpl
sub
push
mov
pop
sti
add
jg
loopne
lds
jg
mov
lret
rolb
fistpll
testb
sub
adc
xchg
in
adc
pop
push
test
mov
push
xor
push
and
stc
in
fs
bound
xor
xor
jbe
xor
sub
pusha
mov
test
cmc
pushf
stc
mov
bt
pushl
bt
pushf
xchg
rcr
rcr
dec
shl
mov
cmp
clc
pusha
clc
add
jmp
nop
cmpb
jns
ljmp
or
adc
add
pop
loope
adc
jnp
aam
mov
mov
pop
mov
nop
lret
shrb
adc
stc
call
pushf
ja
dec
jg
shufps
nop
push
xchg
xor
sbb
fdivrp
sbb
mov
cmp
imul
iret
mov
addr16
xlat
ja
adc
movsl
movsl
push
or
fldenv
stos
mov
mov
mov
jg
mov
daa
jbe
inc
xchg
fstpt
jmp
push
mov
push
mov
lcall
sbb
mov
mov
inc
in
sub
ljmp
nop
xor
xor
addr16
xchg
lea
or
addr16
adcb
adc
lea
decl
lods
outsb
aaa
or
hlt
cmp
ficompl
mov
push
sti
and
xor
fisubl
dec
and
fldt
aam
cmp
inc
xlat
mov
aam
pop
cmp
xor
test
shll
dec
mov
cwtl
cmp
xchg
sbbb
lcall
cmp
stc
xchg
xchg
sbb
pop
dec
xor
imul
je
call
jno
fdivrs
lcall
lods
mov
push
nop
mov
cmp
jg
dec
push
mov
popa
fstpt
push
pusha
aas
pop
jns
jno
cvtps2pi
pop
dec
add
clc
jmp
test
inc
not
or
mov
pop
xor
arpl
mov
adc
and
xor
stc
push
movsl
cmp
lcall
xor
mov
jb
sahf
test
loop
int
pushf
mov
cmp
ret
cmp
scas
stc
sub
xchg
cmp
mov
test
mov
leave
fprem1
scas
ja
pop
add
gs
arpl
sub
dec
movsl
shl
hlt
jae
shll
cmpsb
xchg
mov
xchg
hlt
push
test
sub
cmc
test
inc
dec
xchg
test
or
jnp
andl
scas
inc
and
subl
cmp
loope
stc
cmova
xchg
push
pop
imul
test
repnz
mov
push
sarb
xor
movl
pushf
movb
movl
push
pushl
movw
push
lea
jmp
movl
movb
push
movl
pusha
lea
jmp
aad
sahf
stos
int3
rolb
pop
mov
mov
cmc
andb
leave
iret
xlat
mov
dec
sahf
adc
out
ja
outsl
test
mov
pop
xchg
push
ja
decl
sti
jl
push
ljmp
xor
scas
loope
ror
clc
adc
adc
xor
xchg
mov
pop
insl
aaa
push
cs
mov
sub
add
mov
sub
sbb
mov
leave
cs
subb
nop
rcll
movsb
inc
push
test
xchg
adc
aad
lret
dec
es
pop
sbb
ss
push
pop
jg
lahf
repz
or
pop
push
xchg
testl
mov
dec
les
xor
cwtl
xor
inc
mov
rcrl
jmp
jbe
sbb
jae
daa
mov
lcall
and
adc
cli
jmp
lret
inc
inc
and
rcr
cli
pop
pushl
pushf
movl
push
movb
pushf
lea
jmp
movsl
adc
imul
iret
jo
popf
cmp
stc
punpcklbw
xor
inc
cltd
inc
pusha
sbb
fnsave
pushf
in
movsb
mov
mov
call
cmp
mov
push
and
data16
int
push
scas
sahf
je
daa
jo
add
testl
add
xchg
aam
call
outsb
iret
jecxz
into
add
out
push
js
les
mov
sub
scas
push
and
mov
movsl
mov
dec
pop
in
mov
lds
adc
pop
mov
call
inc
sbb
push
pop
cld
cs
test
adc
mov
and
mov
push
add
mov
popf
out
mov
xlat
mov
lret
mov
push
and
mov
mov
subl
inc
add
push
mov
mov
lret
mov
cs
sbb
xor
cli
dec
mov
add
repnz
test
bound
cmc
xchg
xchg
pop
repnz
sbb
stos
add
pop
sahf
xor
outsl
aam
loop
and
sub
jne,pn
jl
dec
aaa
lods
shlb
movsb
jno
pop
lret
mov
xchg
std
or
stos
inc
mov
test
iret
les
lods
in
in
imul
test
xor
push
leave
and
scas
fbstp
or
rol
ja
or
sub
pop
orl
orb
mov
push
shrl
mov
add
lcall
sub
hlt
cmpsl
ret
andb
cli
pop
adc
sub
lods
dec
cs
and
inc
mov
xchg
xchg
xor
insb
jmp
into
mov
insl
loopne
ja
addr16
mov
aas
xor
fbld
xor
cmpl
jno
sbb
add
xchg
jl
inc
sbb
pop
fmul
and
insb
aad
push
jle
jle
fidivl
cmp
push
add
lret
insb
dec
outsl
xchg
jnp
cmp
insb
imul
imul
lods
mov
mov
sbb
mov
dec
push
mov
mov
jns
aas
fwait
dec
pop
mov
and
inc
xlat
insl
mov
and
ljmp
mov
ror
pop
fldenv
and
sub
aaa
push
add
inc
icebp
test
repnz
and
pop
mov
lds
or
pop
mov
inc
fdivs
lods
outsb
lds
ret
cmp
fistl
out
cmp
lcall
popf
mov
and
adc
clc
out
cmpsl
add
cmp
cmp
std
fistpll
mov
or
or
mov
je
jl
stos
or
out
xchg
jecxz
mov
stos
fstps
jo
out
mov
fcmovbe
aaa
dec
xlat
adc
hlt
jns
iret
dec
in
dec
movsl
or
sahf
test
adcl
rol
xchg
int3
loope
push
scas
cmp
repnz
and
xlat
cmp
dec
das
fidivrs
pushw
mov
cmp
mov
std
add
sub
add
xchg
mov
imul
add
xorl
xor
xor
and
mov
dec
dec
lret
adc
push
jp
and
iret
sahf
cmp
sub
cmc
add
push
add
sarl
add
inc
and
mov
sahf
insb
fcoms
inc
xchg
fsubrs
inc
ret
cwtl
push
sub
fnstsw
repnz
pop
in
out
into
or
test
gs
push
and
dec
cmp
test
cmp
jns
cld
dec
js
xchg
xchg
aam
dec
orl
pop
enter
stos
shr
pop
mov
adc
push
data16
jp
jmp
bound
test
es
aam
lahf
pop
daa
add
mov
or
cmp
out
pop
mov
or
js
cmp
pusha
arpl
rorb
sbb
and
in
jle
cmpsb
add
cmp
or
push
or
mov
sub
ja
mulb
sti
mov
fimuls
scas
mov
imul
fbstp
xor
adc
xchg
pop
mov
insb
insb
mulb
jnp
xchg
or
int
lods
pop
sub
xchg
mov
es
or
repnz
sub
sub
mov
and
pop
xchg
les
test
dec
jo
push
lods
ret
jnp
mov
rclb
pop
rclb
ss
mov
in
and
adc
push
test
cmp
pop
mov
xorb
and
shll
cmp
movsl
icebp
add
xlat
bound
test
xchg
test
mov
mov
rorl
mov
clc
fisttpll
xchg
lods
jle
sbb
test
and
fs
daa
lahf
aad
incb
and
adcl
mov
mov
xchg
mov
mov
mov
in
insb
rorl
sbb
mov
adc
add
das
sub
xchg
in
mov
mov
pop
mov
mov
dec
call
stos
sbb
and
push
cmp
inc
ret
push
movl
lea
jmp
movsbw
movzbl
movsbw
lea
movzbw
pop
sets
mov
lea
jl
lea
mov
pushf
lea
jmp
cmp
pushl
add
pushf
push
pushf
lea
jmp
lea
ja
push
push
lea
jmp
lds
int
xbegin
mov
xor
inc
out
fstl
pop
std
sub
pop
xor
add
icebp
cmp
testb
xchg
scas
in
aad
mov
aad
add
and
mov
push
adc
ret
cmp
sub
and
dec
jae
mov
adc
fisubs
pop
and
sbb
sbb
je
jns
test
test
out
into
bnd
test
xor
and
icebp
cli
aas
pusha
movl
pushl
pushf
pusha
pushf
lea
jmp
shr
jmp
mov
pop
and
or
mov
sti
int3
sbb
out
xchg
dec
xchg
pop
dec
xor
leave
jle
inc
rorl
cmp
popa
not
sub
addr16
mov
or
ljmp
popa
push
les
fbstp
leave
mov
in
lret
jne
hlt
jae
inc
pop
or
shl
ss
pop
out
jge
roll
pop
je
in
cs
pop
inc
and
cmp
ret
jnp
sbb
lret
mov
inc
dec
out
pop
cmp
xor
mov
out
mov
mov
dec
cmp
and
xchg
outsl
jge
push
scas
add
and
jne
inc
add
fisttps
ret
aam
push
cmpsb
lahf
sti
in
out
push
in
lds
test
leave
mov
dec
and
fwait
and
ja
inc
sahf
sbb
nop
add
and
loop
les
dec
xlat
out
pop
aaa
sbb
xchg
movsl
add
jl
je
adc
hlt
cmpsb
pop
mov
faddp
sbb
push
inc
push
clc
jl
push
cmp
sub
enter
sub
cmpsl
pop
jl
cmpsl
in
loop
pop
movsb
stos
std
mov
popf
fisubrl
sahf
dec
or
pop
push
pop
mov
mov
fs
jne
sbb
fdivrs
or
lret
jne
add
cmp
les
stc
or
xchg
into
xor
das
xchg
mov
scas
fdivs
jbe
and
jl
ja
xor
addr16
divl
test
mov
daa
mov
fnstcw
fwait
cmp
mov
test
push
ret
mov
rorl
lahf
imul
push
lcall
adc
je
dec
aas
xorl
js
aaa
loop
xor
mov
mov
dec
mov
stos
out
push
ror
mov
mov
cld
daa
arpl
rolb
adc
or
incb
lock
loop
outsl
icebp
mov
stos
add
inc
loop
mov
or
cwtl
popa
jmp
or
inc
jb
cmpsb
shlb
jp
shll
imul
ss
js
mov
subps
or
sbb
sub
outsb
cltd
add
add
loop
xchg
and
mov
pushf
imull
int
xor
adc
or
adc
xor
xor
bound
mov
or
lea
leave
sbb
xor
lret
dec
ljmp
mov
mov
out
lcall
fldcw
popa
mov
xchg
rcl
out
test
divb
lcall
sbb
mov
adc
jnp
lods
scas
mov
or
aaa
push
mov
fnsave
jge
dec
dec
icebp
shrb
sbb
jle
cmp
addr16
sub
imul
mov
pop
xor
and
mov
push
fmul
or
scas
popf
xor
fcomp
sub
dec
cmp
ret
psubb
stc
xor
xor
mov
hlt
repz
ja
fimuls
gs
lods
leave
xchg
push
jp
and
push
fisubl
ss
push
andl
cli
bound
enter
inc
adcb
xor
outsb
loope
xor
or
adc
ds
hlt
cmp
dec
gs
ljmp
push
ret
push
sub
aam
push
out
in
mov
jle
cmpsb
imul
pop
inc
or
push
ficoml
jne
sbb
push
xor
cs
sbb
push
cmp
dec
js
pop
inc
mov
mov
aas
sbbl
mov
add
cltd
mov
dec
cmp
xchg
sub
pop
rcr
pop
repnz
cmp
dec
fnstcw
xor
sbb
xchg
out
dec
imul
pop
mov
mov
test
cmp
adc
fs
dec
lock
popf
mov
jnp
in
or
push
cld
outsl
scas
jo
adc
jecxz
movsl
mov
adc
and
pusha
or
pushf
arpl
lds
adc
jbe
rclb
cltd
aas
cmp
jge
shll
jo
mov
lret
inc
je
pop
dec
sbb
sarl
fstpt
mov
cmc
idiv
movsl
xchg
bound
shr
mov
adc
mov
arpl
mov
stos
dec
cwtl
aaa
ror
sub
js
rcrb
jle
js
xor
cmp
pop
or
and
es
rcr
popf
mov
jae
jb
push
cmp
push
add
sub
pusha
mov
push
mov
divl
cmp
jg
push
loope
lea
mov
sbb
fs
mov
pusha
pusha
inc
mov
push
roll
and
lcall
int
hlt
ret
jno
repz
mov
hlt
mov
jp
jecxz
add
rolb
inc
jnp
push
sbb
sbb
push
xchg
ret
push
mov
imul
lcall
rcrb
push
xchg
lea
testb
sub
add
or
icebp
jle
inc
enter
adc
sub
xor
aad
mov
test
xor
mov
mov
add
insb
xchg
orb
ja
in
in
icebp
test
jecxz
mov
test
shll
leave
iret
mov
xchg
fdivrl
fchs
scas
push
bound
imul
xrstor
jmp
sub
mov
lods
adc
and
mov
mov
popa
push
fidivrs
cmp
fdivs
mov
adc
outsb
lds
neg
gs
dec
cmp
insl
jae
or
lea
repz
insl
mov
les
pusha
jge
testb
or
jle
int3
adc
xor
adc
in
mov
divl
inc
clc
push
or
push
je
adc
idiv
jbe
push
call
je
sub
lods
mov
mov
lea
push
mov
push
cwtl
cld
test
push
xor
aam
push
xchg
aas
dec
mov
mov
aam
and
js
sbb
dec
lods
out
subl
xor
gs
daa
pop
push
dec
xor
add
and
in
test
fnstcw
jmp
xor
inc
push
adc
test
adc
jmp
xchg
jmp
imul
bound
dec
jl
adc
shrb
pop
dec
push
xor
xchg
popf
push
push
push
std
fbld
sti
dec
sub
mov
repz
repnz
inc
and
xorb
outsb
repnz
inc
sbb
mov
dec
negl
jbe
pop
or
loopne
inc
pop
xchg
mov
cmp
dec
fsts
hlt
jle
mov
int
sub
sub
dec
lret
xchg
shll
or
or
and
std
or
inc
and
inc
dec
xor
mov
popa
or
lods
mov
mov
popa
dec
int
lret
insb
outsl
mov
jnp
nop
stos
pop
inc
push
sub
inc
dec
data16
add
jl
push
mov
aad
std
iret
cli
das
jl
or
popa
addr16
mov
pop
cli
xchg
out
and
dec
scas
and
push
test
test
adc
pop
jge
push
jae
fmuls
fucomi
jge
jns
pusha
or
je
inc
test
clc
sbb
in
xchg
fiaddl
dec
in
fwait
push
aam
jb
pop
and
clc
mov
cmp
leave
bound
sub
pop
scas
add
imul
stos
bnd
cmc
leave
jecxz
pop
cmc
push
ljmp
sbb
adc
sub
dec
aas
sub
lahf
dec
fs
call
dec
clc
sub
jo
cli
sub
insl
aam
jg
fs
test
mov
data16
in
jp
xchg
aaa
jns
cmp
or
ret
push
add
sub
push
mov
lcall
cmp
add
mov
push
shl
pusha
and
btr
lea
call
call
jmp
mov
movl
pusha
jmp
mov
shl
mov
pusha
push
add
push
pushf
pushl
ret
mov
fnstenv
jmp
test
test
mov
mov
outsb
lcall
in
add
repnz
cmpsl
cwtl
cs
sbb
sub
sbb
and
push
jo
xlat
repz
cld
cwtl
sarb
xchg
or
js
dec
rorb
ret
cmp
inc
divl
lcall
outsb
mov
arpl
pusha
sub
xor
xchg
mov
cld
xor
pushf
pushl
movl
movb
pushf
pushf
push
lea
jmp
push
movl
call
push
pushf
movl
pusha
movl
pusha
push
pushl
pushl
lea
jmp
lea
je
movzbl
test
setne
mov
cmp
pusha
push
stc
movl
test
stc
cmc
cmp
mov
test
bt
test
pushf
jmp
movl
call
pushl
movl
pushf
mov
jmp
movl
pushf
movl
pushf
pusha
pushl
lea
jmp
pushf
adc
cmpsb
out
fcoml
in
fidivrs
xor
pop
cmp
sbb
pop
adc
push
or
mov
dec
clc
jmp
jl
mov
test
add
cs
dec
jbe
mov
jle
fsts
stos
jmp
hlt
pop
es
insl
xchg
xorl
or
loope
fs
xchg
push
fwait
mov
jne
push
lods
leave
xchg
push
jbe
in
xchg
push
xchg
xchg
jnp
lcall
pushf
pop
test
test
pop
pop
xchg
pop
in
xchg
or
movsb
add
cli
mov
in
lcall
jb
cmp
mov
dec
dec
pusha
mov
scas
or
sbbl
fs
xchg
out
out
cmp
stos
int
pop
bound
ds
ss
jbe
jmp
movsl
stos
sbb
xor
jmp
jnp
xchg
pop
mov
push
jmp
fnsave
mov
mov
jg
stc
and
add
repnz
shll
mov
nop
imul
scas
add
daa
mov
push
mov
jbe
stc
dec
pop
aad
jg
sbb
stc
stc
in
call
insb
push
jmp
dec
pop
sti
push
movsl
scas
movsb
imul
add
and
cld
addr16
fisubl
sub
pop
mov
movsb
mov
loop
movsl
add
call
sub
aas
jge
lret
ss
add
fnstcw
add
or
lahf
inc
sub
leavew
repz
les
lods
or
sub
inc
xchg
jne
sub
sub
mov
and
pop
ret
int
sub
sub
jbe
addr16
nop
call
pop
xor
rcl
out
mov
lahf
loope
ljmp
rol
adc
xor
cld
sub
stos
mov
lret
out
push
jecxz
sbb
push
push
bound
rorb
push
loop
xor
jg
imul
aad
push
decb
sbb
or
lcall
sbb
mov
sar
bswap
add
dec
xor
cmp
rol
sub
add
cmp
movzbw
add
shl
xchg
adc
cmp
xchg
movzwl
rol
xor
rol
xor
mov
bsf
shr
pushf
lea
add
sbb
and
cmp
shl
neg
shr
mov
clc
pushl
bt
shr
cmc
bt
add
bts
xor
sub
add
shld
or
shrd
rcl
xor
bsf
bsf
cmc
not
add
call
loop
pop
sub
test
daa
sbb
dec
xor
inc
fisubrl
in
dec
adc
movsb
cmp
icebp
rcl
je
cmc
mov
push
inc
xchg
test
ja
adc
xor
cmpb
cmp
cmp
jg
inc
mov
stc
push
sbbl
mov
push
dec
xchg
shll
leave
jg
es
jnp
lea
pusha
push
jb
test
ds
jno
jl
sbb
inc
inc
push
mov
sbb
adc
cmp
je
sub
or
push
sbb
mov
inc
dec
mov
popf
sub
test
pop
sahf
dec
nop
add
cmp
imul
cmp
add
pop
cmp
xor
jbe
add
mov
cmp
mov
dec
adc
xchg
mov
add
fiaddl
xchg
sahf
push
pop
frstor
sbb
mov
dec
outsb
aad
mov
pop
push
dec
lods
pop
xchg
sub
lcall
jmp
outsb
pop
divl
pop
or
clc
aaa
xlat
and
xor
jg
mov
roll
clc
sbb
or
or
cmpsl
test
dec
ss
inc
shrl
mov
aaa
mov
std
pop
ljmp
popf
fwait
dec
ss
sbb
mov
cmpsl
pop
add
stc
and
stos
aad
daa
fistps
pop
adc
int
shl
arpl
cmc
adc
dec
lods
iret
sub
sarl
mov
and
iret
sbb
stos
ljmp
dec
sbb
jb
mov
int
jnp
mov
inc
movsb
aas
jp
cli
cmpsb
outsl
push
repz
pop
fstp
cmpsl
jp
xchg
sub
sbb
aas
call
iret
popa
rcrb
lcall
add
push
jg
jne
push
popf
mov
ret
shrb
mov
in
in
cmp
lods
mov
mov
loopne
je
jne
mov
incl
mov
clc
andl
inc
bound
mov
dec
adc
int
mov
lods
bound
mov
or
daa
outsb
fidivrs
rsm
leave
out
and
xor
scas
out
pop
and
lret
movsb
das
cmp
enter
nop
sbb
fldl
mov
pushf
and
cmpsb
add
push
jno
mov
lock
lods
test
movsl
loop
adc
xchg
loop
xchg
js
push
push
push
inc
xchg
mov
pop
inc
movsl
es
mov
hlt
adc
mov
pop
das
mov
adc
ficoml
cmp
sbb
ss
enter
xchg
add
pop
in
sub
lods
sbb
fs
pop
mov
push
out
das
pop
push
test
scas
dec
and
sbb
movsl
ljmp
call
xor
outsl
cmp
and
lea
ficoms
sbb
sbb
aaa
aad
or
outsl
ret
popa
jg
sbb
movl
adc
test
mov
nop
arpl
out
imul
xlat
mov
push
dec
mov
imul
xor
lahf
mov
sar
cmp
xchg
dec
push
aam
mov
xor
jmp
push
outsl
faddl
push
stos
insl
jbe
adc
pop
push
xor
and
push
or
xchg
fildll
pop
xchg
mov
jns
int3
mov
xchg
test
sbb
xor
push
inc
call
sbb
fs
es
test
and
scas
mov
call
ficomps
shll
imulb
cltd
push
dec
mov
sub
add
xchg
add
xchg
movsb
mov
out
pop
mov
and
movsb
jp
sub
jns
repz
sbb
adcb
push
xchg
popf
push
mov
das
sbb
sub
dec
xor
jl
dec
repnz
or
mov
sti
fcomip
loop
ror
leave
jae
sub
cmp
xchg
cld
test
outsl
fs
cmp
arpl
test
jo
add
mov
out
addr16
nop
adcb
mov
push
inc
xor
ficompl
mov
inc
icebp
jb
sbb
or
adc
dec
rorl
push
rcrl
fstps
jl
xchg
hlt
push
lods
leave
xor
mov
pop
sahf
cmpsb
hlt
aas
mov
mov
push
cmp
jbe
mov
push
push
frstor
loop
mov
dec
lods
nop
jno
adc
push
popa
pop
std
shlb
and
mull
cli
lahf
sti
popf
sti
in
pop
sahf
push
je
subl
xor
leave
in
sub
or
inc
sbb
aam
gs
cld
ja
jns
lahf
push
sbb
and
sti
nop
popa
cmp
lcall
inc
mov
scas
in
ret
xor
lahf
addr16
in
sub
daa
or
lcall
pop
add
cli
push
mov
sar
cmp
loope
nop
dec
out
lds
push
pop
ffreep
test
aad
daa
jge
xlat
mov
lret
in
into
xlat
lret
aas
enter
sti
rcr
lahf
ja
ss
sbb
imul
or
int3
inc
jnp
test
or
arpl
sbb
fcoms
jnp
lcall
mov
ja
bound
jmp
mov
xor
jbe
lcall
out
sbb
dec
or
mov
xor
lea
jnp
push
pusha
pusha
lea
jmp
clc
clc
cmp
add
rcr
or
mov
push
call
cmp
add
clc
shr
bt
jmp
jmp
jmp
push
ds
sub
vdivsd
adc
or
enter
int3
xchg
xor
leave
push
shlb
mov
mov
pop
mov
jae
mov
mov
inc
pushf
push
jmp
outsb
pushf
call
shlb
jl
loopne
dec
loope
pop
xor
test
mov
out
sbb
clc
push
and
inc
lds
adc
sbb
stc
mov
sbb
xor
xor
xor
or
fnstenv
mov
aaa
sbb
cwtl
dec
paddsw
ljmp
enter
cmp
jo
push
les
pop
ret
je
push
mov
jnp
and
cld
es
orb
pop
fsubs
push
lock
pop
jae
xchg
outsl
aad
movl
fnstenv
xor
int3
and
sahf
jae
popf
dec
cld
ja
and
popa
cmpsl
push
movsb
fiadds
fidivrl
aas
movsl
cld
mov
fdivp
out
xchg
push
dec
inc
insb
std
or
fdivs
xor
movsb
adc
push
es
xor
cmp
aam
and
andl
mov
mov
mov
mov
sub
orl
pop
std
in
scas
data16
out
cmpsb
andl
popa
jnp
adc
loop
hlt
xchg
cmp
hlt
push
push
testb
iret
sbb
mov
add
sub
into
push
xchg
lock
cld
cltd
fsubrs
addr16
sub
jae
enter
andl
rcrl
enter
cmpsl
cmp
jbe
inc
loop
sbb
inc
xor
sub
cmp
xor
push
cmpsb
push
repz
in
lods
sbb
int3
fadds
cli
sbb
lcall
insb
adc
out
es
mov
jb
insb
xor
cltd
out
inc
jnp
cmp
rcr
setb
jl
rolb
push
lods
or
fists
mov
xor
cli
cmc
mov
push
mov
movsb
push
and
push
and
push
fbstp
out
sbb
sbb
xchg
out
sbb
push
pop
jle
rcrl
js
sbb
xor
jnp
jb
sarl
das
cmp
xchg
adc
dec
pop
push
out
jg
fwait
add
lods
rcrb
jle
pop
repnz
xor
pop
and
enter
mov
out
mulb
lods
sub
ljmp
jno
sahf
adc
and
cmpsl
aas
sbb
or
lea
leave
add
sbb
mov
dec
in
adc
jns
fnstenv
in
pushf
lea
sbb
sbb
pop
cmpsl
jae
push
fsubrp
lea
xlat
out
imul
mov
test
xor
stos
aad
mov
inc
shrb
mov
pop
push
and
outsb
sarl
out
mov
in
stos
push
jp
mov
push
fs
jbe
stos
loop
idivl
adc
xlat
jno
out
push
stos
mov
daa
sbb
add
push
mov
push
lds
cmp
inc
cltd
aas
adc
ret
fsubrl
je
push
adc
nop
push
or
push
or
mov
jmp
ljmp
das
iret
out
push
repnz
jns
cmp
xchg
mov
sub
stos
vcvtdq2pd
xor
daa
ja
xor
lcall
ss
sub
mov
xor
sahf
lret
scas
or
adc
dec
jne
lcall
ds
stos
adc
icebp
cmp
aaa
adc
dec
pop
cmp
lcall
inc
loop
inc
lahf
fisttpll
mov
sub
std
xchg
ljmp
test
addb
in
scas
xchg
test
stos
adc
mov
loop
pop
pop
dec
add
insl
or
mov
and
in
iret
mov
insb
mov
ret
push
ret
adc
xor
leave
pop
jle
cli
test
je
add
shlb
xor
in
frstor
inc
jo
les
xor
mov
ficoml
shlb
cltd
mov
out
sahf
lcall
sbb
rorb
inc
call
mov
fcomi
mov
fidivs
lcall
movl
jbe
lea
insb
or
add
idivb
into
xor
jge
sub
movsb
push
push
scas
mov
gs
movsb
lret
test
cwtl
add
jbe
add
mov
xor
test
pop
stos
scas
mov
cmp
scas
or
insl
lret
lcall
push
mull
pushf
les
push
scas
out
pop
inc
psubsb
pop
xchg
push
pop
sub
mov
aas
sahf
add
jp
in
mov
in
int
mov
ljmp
mov
aad
push
push
add
lret
xor
aaa
sub
cld
push
je
test
inc
adcb
lcall
inc
and
jne
cli
mov
inc
and
sbbb
cs
lea
jmp
pusha
movl
pushf
pushf
movl
pushf
pushf
movw
pushf
lea
jmp
movw
movl
pushf
movl
mov
pushl
pusha
mov
lea
jmp
movl
pushf
push
pushf
pusha
lea
jmp
push
movl
pusha
movw
call
shr
pushl
bt
stc
mov
test
lea
shl
lea
aas
and
bts
add
or
rcr
das
xchg
mov
sbb
adc
setne
mov
xor
jmp
push
pushl
push
pushf
movl
call
mov
bt
sub
movb
jmp
pusha
movl
mov
pushl
push
pushf
lea
jmp
stc
mov
cmc
clc
mov
jmp
movl
pushf
movl
pushf
lea
jmp
call
add
adc
mov
std
iret
pop
and
pop
movsb
jnp
mov
dec
jg
or
pushf
ret
cwtl
in
mov
dec
jo
lods
inc
imul
icebp
push
jo
cmpsl
enter
pop
adc
mov
mov
fwait
incb
dec
inc
enter
fwait
ja
popa
mov
les
in
test
je
cmp
cmp
ret
adc
into
add
sbb
sbb
push
pop
push
movsl
test
pop
sbb
clc
mov
rcrl
xchg
cmp
mov
lcall
jmp
and
loopne
lds
dec
data16
mov
jno
push
loop
int3
cwtl
in
loop
faddl
mov
fcmovnbe
sbbl
jo
fs
cli
shlb
mov
jl
add
pop
jmp
ljmp
push
and
push
jge
xlat
cmp
push
pop
mov
push
xchg
pop
daa
dec
pop
jo
mov
ds
mov
cmc
xor
repnz
jmp
pop
mov
test
or
mov
mov
sarl
in
mov
push
adc
xlat
movb
push
pop
mov
lret
mov
add
lock
mov
dec
shll
mov
cltd
adc
fnstsw
popa
mov
cs
mov
lea
mov
pop
js
inc
cltd
test
call
jmp
scas
jmp
lea
repnz
sbb
mov
pop
inc
and
lcall
fs
mov
int3
lcall
jae
jbe
test
sub
adc
dec
lock
push
test
cmp
mov
jae
aaa
xor
cmc
adc
aad
pop
int3
ljmp
pop
dec
xchg
cs
add
dec
cmpsb
pop
insb
or
push
leave
iret
xchg
and
jl
push
fwait
iret
sahf
mov
mov
and
in
xor
xor
rclb
inc
pop
lods
dec
fsubrl
add
mov
pop
das
daa
aad
mov
inc
pop
shll
sahf
addr16
ja
lcall
pop
xor
add
jae
in
inc
cli
mov
pop
cmp
and
sub
out
cmp
xor
xor
mov
and
sti
into
mov
dec
ss
dec
or
cmp
mov
popf
aam
iret
pusha
pushf
pushf
jmp
and
sbb
aam
cmp
cli
outsb
daa
std
mov
push
mov
iret
jne
add
int
fs
ret
in
cmp
popa
rcll
sub
mov
ret
int3
push
add
cli
icebp
push
add
imul
shrb
dec
or
divb
clc
mov
sbb
xor
ret
loopne
or
add
jmp
push
ljmp
aaa
xlat
pop
stos
mov
sbb
dec
dec
mov
imul
mov
xlat
pop
call
repnz
or
arpl
xor
jmp
push
sbb
push
aaa
jnp
mov
pmuludq
dec
or
cmpsb
mov
push
aaa
and
outsl
add
xchg
xor
out
xchg
pop
push
mov
ja
mov
fldcw
pop
xchg
std
mov
add
mov
mov
xchg
ret
xchg
adc
sahf
movsl
jne
lret
mov
mov
mov
popa
mov
test
push
sarb
pop
mov
out
mov
jns
xchg
mov
sbb
stos
mov
inc
adc
xchg
cmc
mov
mov
dec
ds
fisubrl
insb
push
adc
mov
cmp
icebp
sub
push
sub
adc
sub
std
mov
sahf
jg
hlt
addr16
repnz
out
sti
xchg
or
orl
or
push
sbb
ss
sub
fadd
aam
adc
outsl
pop
testb
mov
dec
or
jbe
dec
jle
mov
out
pop
inc
xchg
jb
xchg
jmp
or
mov
out
adc
fnstsw
inc
mov
cmp
and
out
lret
xlat
mov
fildl
movsl
dec
sub
mov
pop
frstor
or
insl
icebp
or
push
outsl
repz
or
add
xor
fmulp
sti
dec
test
push
xor
icebp
and
popf
int
iret
mov
into
sbb
mov
xor
ficoml
mov
push
jnp
cwtl
jge
fwait
mov
data16
mov
xorl
dec
aad
xchg
lock
push
pop
ss
adc
lods
scas
lahf
sti
dec
mov
jmp
cmp
ret
cmpsl
xor
and
dec
jne
inc
jecxz
adc
iret
es
mov
jecxz
push
mov
adc
fwait
xor
push
xchg
jo
sahf
push
jmp
mov
inc
pop
repz
out
call
push
int
or
sahf
push
inc
icebp
dec
nop
pop
and
mov
add
mov
shlb
call
pop
pop
iret
and
lods
jne
push
mov
push
sub
mov
ljmp
hlt
mov
lahf
dec
pusha
or
ljmp
hlt
dec
pop
sub
jne
sbb
mov
add
mov
xchg
out
pusha
jbe
loop
out
pop
repnz
xor
aad
inc
nop
in
jle
test
mov
les
xchg
pusha
cmp
loopne
mov
clc
cmp
jle
in
ret
movsb
jb
mov
pop
xor
jmp
sti
dec
mov
fisttpl
loope
and
scas
dec
loopne
movsb
sbb
mov
pop
cld
jg
pop
sti
aam
out
fdiv
adc
inc
out
shll
movsl
mov
sbb
and
cmp
cmpsb
xchg
mov
jge
hlt
pop
in
mov
xor
dec
lods
movsb
iret
cmpsl
sub
push
fdivrs
xchg
aam
punpckldq
dec
sti
clc
sub
dec
dec
sti
call
xor
jbe
inc
out
sti
daa
test
insl
add
insl
push
xor
pop
jb
jg
sbb
aaa
mov
mov
outsl
fdivr
ret
and
nop
test
mov
test
dec
sub
push
movsb
ret
loop
std
xor
ds
into
xchg
add
loop
cmp
sub
clc
cltd
lcall
adc
cmc
xor
mov
mov
sub
pop
or
sub
mov
mov
adc
repz
sub
cmp
jmp
add
mov
dec
xor
mov
sub
adc
mov
scas
ret
cmpsb
movsb
mov
and
pop
mov
iret
pop
adc
inc
test
jbe
int3
call
inc
jns
sahf
jbe
add
cli
lahf
pusha
jmp
cmp
jnp
andl
sbb
mov
mov
pushf
cmp
pushf
jnp
jo
push
xor
lret
sub
test
inc
mov
mov
xor
mov
inc
fst
cmp
inc
pop
sti
ljmp
sub
ficompl
adc
xor
push
gs
xchg
sub
leave
gs
push
daa
gs
mov
push
sarl
sub
xor
jecxz
mov
fistpll
pop
mov
adc
jnp
xchg
pusha
cld
inc
and
pusha
scas
outsb
pop
and
std
inc
arpl
push
enter
ss
dec
loopne
hlt
sarl
aas
push
sbb
gs
insl
xor
mov
sahf
xchg
fists
mov
in
mov
cmpsl
adc
mov
sarl
or
iret
in
or
push
lods
sub
push
orl
subl
sub
mov
or
shlb
mov
ret
lds
movb
and
movsl
lods
sub
xor
and
bound
movsl
out
push
mov
inc
cmp
push
xorb
and
xor
pop
enter
inc
add
int
push
sub
sub
dec
cmpsb
jae
mov
dec
cmpsb
lds
mov
int3
pop
lret
lret
les
dec
les
call
push
and
push
inc
inc
push
mov
mov
or
cld
sbb
test
jp
mov
inc
in
and
or
loope
mov
push
add
pop
xchg
jnp
jnp
sti
mov
inc
repz
test
mov
xchg
add
lcall
cmc
repz
ret
gs
xchg
fs
aaa
jbe
or
or
sub
sbb
push
popa
arpl
and
scas
stos
adc
lret
lcall
sub
daa
out
dec
nop
mov
xchg
adc
push
in
add
repnz
sub
cmp
out
pop
insl
xchg
dec
nop
insb
mov
xchg
popf
jne
and
int3
insb
negb
cs
loopne
data16
add
sbb
xor
lea
inc
mov
cs
dec
inc
ss
add
pop
mov
dec
mov
lahf
decl
add
out
into
push
fcoml
rcr
mov
aaa
xchg
popa
cld
or
mov
movsl
popf
arpl
adc
int3
add
repnz
mov
in
sahf
jbe
pop
xor
xchg
xor
xor
fldcw
aam
int3
movsb
mov
pusha
cmc
bound
adc
pop
cltd
in
mov
mov
clc
in
and
lock
pop
ds
xor
dec
mov
in
sbb
iret
rorl
sub
out
fwait
mov
hlt
rorl
call
stos
dec
cwtl
cmp
xor
mov
jae
add
mov
stos
xchg
jb
movsl
cmpsl
add
mov
push
or
sub
dec
cmpsb
cmp
divl
mov
push
add
push
popa
inc
push
mov
jbe
and
out
dec
fld
pop
gs
stc
ficoml
mov
insb
notl
xchg
jmp
out
mov
dec
ja
cmp
sub
push
add
cmp
mov
aas
adc
pop
ret
mov
lcall
jns
xor
das
addw
mov
lcall
int
ljmp
xchg
inc
addr16
push
stos
xor
mov
adc
cmpb
movsl
pop
pushf
mov
lcall
mov
lcall
sti
adc
lock
adc
icebp
mov
xchg
rorl
in
rcrl
xor
call
outsl
jmp
mov
inc
mov
idiv
lds
pop
pop
out
cmpsl
adc
xor
add
mov
adc
push
adc
jp
mov
xor
movl
push
pushl
lea
jmp
jmp
jmp
pusha
jmp
push
pushf
pusha
movl
movl
pusha
pushf
movl
pushf
mov
mov
push
lea
jmp
pusha
mov
movl
pusha
mov
push
movl
push
lea
jmp
mov
and
inc
fsts
adc
imull
inc
movsl
mov
dec
push
inc
push
sbb
lahf
ss
out
mov
fistpll
inc
ss
pop
in
sub
push
les
sub
xorl
sbb
loopne
pop
or
inc
push
fwait
xorl
cmp
mov
adc
stc
mov
cmp
add
mov
cs
out
repnz
sbb
inc
pop
cmp
push
insl
push
arpl
pop
aaa
out
mulb
popf
sbb
lea
mov
cmp
mov
mov
insl
sbb
sub
sub
sub
stc
xchg
push
leave
mov
cmp
and
mov
push
jmp
mov
sahf
dec
and
and
daa
jmp
mov
test
mov
xchg
rolb
and
dec
aam
popa
inc
pop
repz
jne
push
frstor
adc
test
xor
daa
not
arpl
lret
andb
jne
push
fnstenv
mov
sbb
sub
stos
xchg
subb
int3
pop
cmp
inc
fisttpll
adc
jno
pop
mov
cmp
addl
lods
sbb
test
daa
fstps
movsl
das
dec
xchg
out
jmp
stos
pop
cmp
fmull
mov
xor
xorb
xor
sti
and
push
in
jmp
jg
loopne
shl
sub
sarb
fisubrl
out
fsubl
mov
sbb
mov
pop
pop
loope
mov
test
push
loope
sbb
stos
outsb
daa
pop
out
jns
mov
or
adc
int
cs
sub
into
sub
outsb
loop
xlat
and
xor
dec
pop
sub
xchg
pop
add
ja
jg
mov
inc
shlb
and
je
std
cmp
scas
add
sub
inc
fsubrl
dec
cld
inc
sbb
pop
cmp
jb
xor
bound
int
outsb
stos
hlt
sti
imul
mov
mov
lcall
cmp
scas
mov
scas
shrb
pushf
xchg
push
repnz
and
sbb
xor
mov
adc
pop
mov
mov
lcall
inc
push
fyl2x
int
test
pop
xor
xchg
lret
test
lret
dec
inc
dec
mov
lods
jne,pn
xor
inc
pop
sub
ja
aad
cli
push
test
lcall
fldcw
scas
mov
dec
mov
xor
addl
fnstcw
aas
dec
pushf
pop
and
mov
add
dec
cld
pop
cmc
xor
xor
mov
adcb
je
sbb
fadds
outsb
and
out
lcall
sub
popa
ret
push
rep
stc
xor
xor
push
cmpsl
xor
fnstsw
aaa
cmp
mov
xchg
cmp
lcall
xor
mov
push
call
pop
aad
shlb
xchg
push
xchg
xor
popf
stc
sub
pop
cmp
mov
sub
cs
adc
in
dec
adc
mov
jnp
push
into
lock
xchg
adc
popf
test
cmc
dec
lods
mov
adc
cmp
push
push
stc
sbb
xchg
mov
sbb
sub
jbe
aad
xchg
jge
push
xor
cld
out
out
mov
dec
mov
mov
sti
pop
inc
ficomps
icebp
mov
inc
push
add
int3
xchg
sahf
enter
sub
cmp
sub
dec
pop
fcmove
imul
and
lea
iret
int
addl
out
stos
mov
jge
sar
je
inc
sbb
jae
out
in
lcall
leave
cmp
sahf
enter
push
pop
ror
cmp
inc
sti
mov
inc
aas
popa
inc
test
mov
rcll
call
into
fucomip
dec
int
testb
pop
in
jl
push
push
rcrl
xcrypt-cfb
cmpsl
arpl
sti
push
js
ret
adc
mov
xchg
loopne
loop
bnd
adc
cmp
aam
loopne
jnp
push
xchg
aaa
insl
icebp
movsl
les
push
call
loope
mov
loope
in
das
pop
mov
stos
popa
inc
sub
data16
cmc
in
outsb
cmp
adc
pushf
fwait
mov
fwait
jne
dec
jae
xor
daa
mov
inc
outsl
dec
mov
or
add
pop
xchg
ret
sbb
and
outsb
shll
out
in
popa
ss
jmp
lret
repz
xor
sbb
insl
call
push
pop
notl
into
pop
xchg
fcoms
ret
add
mov
or
or
sub
jne
aad
jp
insl
in
in
sbb
adc
addr16
jecxz
pop
dec
adc
ret
popf
lahf
test
jnp
jb
out
lret
xor
pop
addl
adc
xlat
jb
loopne
popa
pusha
in
jl
popa
cmp
sbb
adc
fwait
xchg
lcall
pop
aas
loop
ljmp
rolb
and
fists
mov
sbb
dec
dec
cmp
jo
dec
mov
or
dec
test
data16
lea
addr16
mov
scas
shl
pop
ja
add
lock
mov
ja
mov
shlb
addr16
sbb
push
pop
fcom
repnz
push
aas
movsb
rcrb
leave
cmc
ljmp
dec
in
dec
xchg
mov
xchg
fnsave
add
mov
dec
out
mov
dec
push
ljmp
inc
pop
shrb
fcoml
pushl
cmc
xchg
mov
xor
dec
pop
cmp
cmc
mov
test
addr16
mov
test
aaa
sub
aaa
or
mov
fwait
mov
fimull
inc
aas
push
adcb
ret
outsb
test
mov
adc
xor
adc
inc
xor
adc
aaa
pushf
sbb
in
loopne
test
jecxz
xor
test
xchg
dec
out
jg
pop
nop
jbe
or
sub
and
mov
inc
pop
inc
dec
and
inc
test
and
dec
add
pop
int3
leave
popa
sbb
cmp
cmpsl
jmp
fwait
dec
cmp
jmp
sub
xchg
add
sub
xor
xchg
xchg
or
xchg
addr16
adc
mov
pop
jle
xchg
repnz
inc
and
inc
cld
adc
pusha
das
push
clc
jmp
sub
jecxz
pop
mov
in
aas
lahf
push
and
add
cltd
push
push
rolb
xchg
mov
pop
push
add
jno
fildl
rorb
add
imul
xchg
fildll
adc
dec
jp
shll
imul
jmp
fbld
add
push
inc
shrl
inc
mov
or
mov
mov
mov
cmp
scas
inc
stos
fbld
loop
pop
je
or
jne
pop
rorl
ret
dec
ds
clc
cmc
dec
mov
mov
pop
xchg
repnz
push
test
mov
push
lds
pop
test
sar
inc
mov
push
sbb
adc
jmp
adc
inc
cmpsb
gs
push
cmp
shlb
icebp
cmp
xor
cltd
add
clc
call
sbb
mov
cmp
lcall
mov
xor
iret
icebp
mov
shlb
push
add
cmpsb
dec
pusha
jns
ljmp
cmp
xlat
add
mov
daa
mov
sub
xor
out
loope
inc
jne
popa
or
in
pop
inc
adc
and
daa
mov
sbb
xor
lds
imul
inc
push
sahf
sub
sbb
test
xor
dec
dec
mov
inc
movsl
enter
or
xor
imul
jno
sub
lods
mov
add
and
lods
or
movl
push
lea
jmp
xchg
jmp
xor
sbb
adc
sbb
xchg
mov
es
xlat
jecxz
inc
lea
ljmp
sub
add
dec
or
mov
and
aad
adc
scas
sbbb
nop
jp
xor
clc
add
movb
bt
mov
cmc
shld
mov
mov
pushf
clc
shr
clc
test
stc
mov
add
jmp
movl
pusha
lea
jmp
adc
mov
and
test
je
xchg
testb
and
jne
fcmovnu
enter
shrb
lock
and
inc
cmpsb
push
sub
or
subb
not
xchg
psadbw
push
xchg
ss
pop
jbe
lods
mov
or
jnp
pusha
loope
out
sbb
sbb
insl
jb
sbb
and
fdivs
cs
mov
std
xchg
jmp
addr16
cmp
pop
lods
xchg
cmpl
das
cmovl
pop
jns
out
cmp
scas
ljmp
lret
sub
lcall
xor
inc
scas
cmp
hlt
dec
out
dec
icebp
xchg
sub
cli
test
sub
dec
fadd
pop
cwtl
rorb
xchg
imul
ljmp
sbb
jecxz
lcall
and
lods
cli
pusha
push
movb
movl
pushf
pushf
push
push
lea
jmp
inc
xor
pop
pop
push
push
pop
xchg
cmp
push
lods
lea
and
pop
jae
push
push
movsl
jbe
xor
sub
push
jns
cmpsb
imul
nop
stos
mov
mov
xchg
sbb
aad
hlt
pop
mov
repz
popf
jg
das
xchg
idiv
xor
xor
outsb
xchg
mov
out
test
out
push
push
out
imul
cmc
aaa
rcrb
mov
add
addl
fs
and
push
daa
insl
adc
dec
mov
and
dec
fdiv
insl
and
in
add
nop
aad
int3
mov
clc
cmp
lahf
neg
sahf
cmp
xor
push
pop
je
jo
jae
aaa
add
cmpsl
inc
sub
addr16
xchg
adc
jecxz
xchg
pusha
mov
shrb
loope
xlat
lret
push
hlt
sub
outsb
cmp
jnp
imul
sub
sbb
inc
imul
mov
mull
pop
sub
movsb
imul
sbb
inc
mov
sub
xor
mov
cmp
xchg
push
dec
data16
push
andb
pop
repnz
stc
in
loop
jno
sub
add
push
decb
fucom
push
int3
insl
addl
out
dec
cltd
add
cmp
lret
pop
fxtract
fildl
shll
das
dec
test
push
xchg
xchg
into
push
pop
fiadds
pop
arpl
jle
jne
insl
dec
into
rcrl
sbb
in
cmp
dec
add
enter
fisttpll
add
pop
jbe
or
lcall
xor
gs
fsubrl
lcall
adc
std
incl
xchg
and
add
add
mov
sti
pushl
inc
aad
into
push
push
in
test
mov
repz
std
add
xchg
mov
and
push
daa
mov
inc
xchg
jg
mov
pop
push
xlat
pusha
xchg
jle
notb
mov
dec
mov
and
mov
jmp
aad
jp
into
sub
movsb
not
daa
mov
fnstsw
movsb
mov
lods
mov
into
ljmp
lret
cmp
sahf
push
sbb
repz
mov
pusha
add
aad
jb,pt
cmp
ds
push
insb
es
sub
pop
out
jnp
insl
loope
popa
xchg
hlt
jns
xchg
add
lcall
enter
adc
subl
jno
lcall
movl
pushf
pusha
pushf
lea
jmp
bt
stc
test
add
call
push
call
sbb
cld
in
repnz
adc
add
mov
lcall
mov
push
mov
xchg
mov
jnp
sbb
sbb
enter
pop
in
adc
sarl
cld
fwait
imul
sbbl
in
mov
inc
call
gs
insl
sub
outsb
and
mov
addr16
pusha
jle
inc
sahf
stc
push
mov
inc
xor
mov
mov
pop
ds
lahf
cli
adc
movsl
fs
sbb
mov
xchg
dec
xor
fnstenv
cmp
cmp
repnz
imul
pushf
xor
add
mov
sub
pop
jne
xchg
lret
mov
and
dec
shrl
mov
mov
xlat
sub
stos
lods
or
cmp
dec
loopne
icebp
dec
je
ss
popa
repnz
pop
xlat
sub
bound
stc
out
xor
cmpsb
mov
cmpsl
cld
pushf
jg
add
cmp
mov
xchg
sbb
mov
xor
add
xchg
xchg
jl
and
or
pop
test
iret
test
stc
jge
xchg
cli
cmpsl
mov
inc
addl
pop
mov
pop
out
loop
pushf
sahf
ret
jns
cli
xor
icebp
inc
sbb
sbb
mov
sub
sub
sbb
ljmp
cmp
lret
aaa
or
pop
inc
push
add
mov
stc
xor
lret
movsl
fwait
inc
in
jne
and
or
and
or
lahf
mov
sti
es
popa
and
or
lcall
pop
push
aam
ret
mov
das
add
inc
and
dec
fst
mov
add
jle
mov
sbb
enter
insb
and
pushf
xchg
xchg
xchg
aad
push
cltd
loop
cltd
mov
scas
jmp
icebp
lahf
sub
insl
and
cmp
in
ficoml
inc
je
mov
inc
jb
and
cwtl
in
or
jb
movsb
lods
sub
and
cmc
xchg
repz
jns
pop
add
fnstcw
pop
stos
nop
lahf
stc
daa
dec
jae
xchg
adc
insl
mov
cwtl
and
aas
in
mov
stos
jg
ficomps
push
mov
dec
jmp
out
adc
testl
sbb
fnstsw
ljmp
sub
mov
adc
loop
mov
scas
aaa
add
mov
data16
mov
adc
adc
gs
repz
pop
xorb
in
sti
pop
mov
movsl
adc
sub
add
xchg
fstp
push
push
daa
jle
out
push
sub
hlt
inc
pop
shll
xchg
push
jnp
jle
sub
add
test
mov
ret
movsb
add
inc
jle
inc
inc
pop
call
mov
rorl
jge
xor
cwtl
mov
dec
adc
add
ss
pop
and
push
sti
ss
mov
out
xor
mov
dec
jle
or
scas
cmpsb
adc
jae
xlat
out
jmp
lcall
ss
pop
loop
mov
test
in
mov
loopne
xor
xor
xchg
mov
test
xchg
in
cmp
das
jno
in
mov
sbb
fisubrs
jno
in
fdiv
adc
pop
lret
jbe
lret
sbb
jmp
test
fxch
das
pop
jmp
pop
xchg
rep
jo
pop
fwait
cmpsl
stos
mov
cmp
pop
adc
ja
mov
call
cmp
mov
jbe
mov
push
push
cli
xchg
cmc
nop
test
pop
idivl
sub
or
cwtl
push
sti
adc
es
rolb
mov
mov
jae
xchg
mov
test
ret
jg
sub
xchg
pop
mov
notl
out
inc
hlt
inc
sbb
add
dec
mov
notl
and
stos
sti
and
cwtl
sbb
loop
push
jle
push
or
and
adc
out
in
cmc
pop
out
flds
cs
dec
mov
cmovl
movsl
shrl
mov
outsb
scas
fwait
mov
outsl
loop
jecxz
mov
or
bound
lods
dec
add
sub
lods
das
rcrl
mov
subl
test
inc
jnp
jo,pt
and
arpl
mov
mov
sarb
and
xor
and
inc
pop
sbbl
repz
test
xlat
xor
rol
add
bt
movzbw
not
add
shl
dec
call
pushf
movl
jmp
movl
push
pusha
lea
jmp
pusha
pusha
pushl
movl
pushf
mov
pushf
call
dec
fs
imul
fbstp
adc
addr16
push
sbb
sbb
mov
std
lods
rorl
push
stos
out
decb
jno
je
cmp
popa
mov
loop
inc
movsl
or
inc
movsl
inc
mov
push
clc
into
mov
outsb
jp
inc
pop
and
out
std
sahf
mov
adc
loop
push
fs
sub
mov
jno
popa
mov
mov
sbb
mov
lods
xchg
add
int
iret
sub
mov
xor
jmp
repnz
add
popf
dec
mov
fiadds
and
pop
pop
push
adcb
roll
idivl
bound
lock
lret
sub
popa
xlat
into
push
aam
mov
in
int
push
andb
rolb
xchg
jecxz
add
push
inc
scas
in
push
icebp
addr16
xor
addl
mov
mov
jl
mov
inc
test
movsb
repnz
cmp
adc
pop
stos
jle
sbb
cmpsl
jle
cmp
push
mov
into
mov
mov
sub
fiadds
inc
mov
mov
jl
test
pop
jns
inc
cmpsl
addr16
testb
sub
loope
loopne
loopne
push
icebp
inc
and
out
jbe
inc
ret
out
lret
test
jecxz
and
jbe
mov
scas
mov
decb
fisubl
mov
gs
fdivrs
mull
mov
push
xchg
fdivs
aas
mov
das
mov
push
shlb
jecxz
scas
js
mov
cmp
js
imul
ds
test
popf
loop
cmp
mov
enter
inc
pop
sub
inc
das
mov
pushf
cmp
and
mov
vmread
enter
popf
jo
leave
pop
outsb
mov
cmp
push
push
int
xor
push
pop
mov
jae
pop
pop
fstpt
es
insb
mov
iret
aas
cs
test
gs
ret
iret
sub
cmp
mov
lods
cmpl
jo,pt
mov
adc
repnz
rorl
lds
xor
stos
aas
mov
push
mov
mov
dec
lea
cld
add
mov
mov
pushf
inc
pop
rclb
ljmp
sarl
xchg
push
sub
dec
and
push
dec
movsb
lea
sbb
or
cld
push
mov
lea
jb
pusha
sub
mov
sub
out
sti
inc
jecxz
xor
popa
push
dec
aaa
cmpsb
jnp
mov
xchg
popf
push
jnp
lods
fsubp
ret
adc
ret
hlt
rolb
rcl
fidivl
leave
ss
test
mov
inc
out
mov
xlat
inc
sub
ret
cmp
popa
outsb
outsb
call
adc
sbb
dec
mov
add
sub
insb
in
data16
das
pop
cmp
jmp
test
dec
push
in
dec
gs
push
xchg
inc
and
std
xchg
insl
fxch
clc
insb
cmp
insl
cmp
aaa
je
jo
or
les
push
insb
pop
sub
insb
dec
dec
sub
pusha
jg
movb
or
cwtl
ljmp
push
idivl
cmc
jbe
inc
sti
push
mov
inc
mov
test
pop
das
clc
sarb
xchg
mov
ret
xchg
jbe
mov
dec
loopne
int
inc
outsb
gs
sbb
jl
andl
lcall
lahf
das
test
sti
mov
jmp
fidivs
into
cmpsb
add
mov
sbb
inc
xor
and
mov
push
stos
inc
lcall
xor
cmp
dec
lcall
ja
adc
loopne
adc
xor
jecxz
in
jge
sub
push
das
test
mov
shll
fcmovnbe
mov
adc
push
dec
mov
push
xchg
jge
fcomps
cltd
cld
add
int
ljmp
adc
dec
pop
in
orb
xor
leave
dec
xor
out
mov
sub
xor
adc
cmp
cmp
daa
mov
jecxz
daa
repz
push
out
dec
sbb
push
dec
lods
xor
dec
dec
pop
jae
stos
or
cmp
arpl
movsl
stos
pushf
jae
dec
andb
call
jae
inc
mov
mov
fnstcw
sub
divb
movsl
jle
cmp
cltd
and
jmp
div
push
mov
fwait
cmp
pop
ss
out
data16
and
sub
cmp
pop
push
dec
push
sarb
es
and
inc
jp
mov
nop
add
cltd
rsm
push
lcall
and
je
and
push
adc
inc
adc
jle
ds
adc
out
shl
pop
push
jmp
mov
and
adc
or
mov
push
pop
cmp
lds
push
sub
add
loopne
mov
dec
out
ss
xor
repnz
cmp
add
or
es
jne
sub
sub
inc
sbb
enter
push
cmp
lcall
aaa
dec
jmp
fstpl
mov
fcoml
mov
lcall
mov
mov
cs
dec
xchg
int
movsl
jl
jecxz
mov
dec
lahf
hlt
sbb
mov
or
cmc
mov
add
pop
pop
and
cmp
lds
inc
jle
inc
and
negl
test
or
cmpsl
sub
mov
push
adc
mov
lods
les
inc
sbb
movsl
hlt
inc
insb
pop
sub
or
dec
xchg
push
cmp
pop
mov
sub
call
mov
mov
mov
mov
sub
push
adc
dec
sahf
outsl
xchg
lcall
loopne
jl
pop
inc
adc
mov
adc
imul
repnz
sbb
rcll
scas
enter
add
fmull
pop
icebp
shl
mov
or
cmp
mov
pop
push
stos
dec
sar
gs
and
aad
add
push
lock
cmp
ret
jmp
push
inc
cs
jmp
add
subb
xchg
rcrl
shlb
repz
insb
adc
pop
adc
js
inc
adc
jbe
push
add
ficomps
popa
push
sub
std
lahf
inc
aam
push
adc
or
push
jge
js
scas
or
sbb
hlt
imul
mov
stos
adc
daa
outsb
fiadds
push
push
or
ds
insl
out
lds
jns
fdiv
stc
dec
pop
adc
out
fimuls
sbb
pop
sub
fisttpl
jno
mov
jl
xor
mov
inc
mov
pop
add
push
jmp
push
and
sbb
cmp
adc
push
push
test
andl
fiadds
lods
andnps
stos
xchg
xchg
jg
dec
data16
push
int3
out
das
push
xchg
mov
popa
roll
fistpl
jecxz
inc
pushf
fldt
addb
adc
int
in
jg
xchg
xor
out
aad
movsb
je
in
hlt
or
cmp
cmp
cmp
shll
pop
xchg
xor
mov
xchg
jle
leave
adc
lcall
enter
pop
sbb
mov
jne
loopne
xor
mov
into
push
dec
cmpsb
out
mov
xor
in
shr
repnz
in
es
xchg
rcll
repz
cmp
cmp
pop
dec
pop
and
fdiv
dec
cmpsl
popf
xchg
dec
jge
lcall
es
or
int3
std
pop
lds
sarb
cmpsl
shl
inc
out
nop
inc
in
mov
lds
add
ljmp
mov
or
out
addr16
bound
inc
mov
ret
popf
ret
mov
jge
cmp
jg
mov
cmpsl
xorb
mov
mov
std
push
dec
push
ret
jg
call
mov
or
xlat
jmp
jnp
dec
adc
mov
sbb
cmc
cmp
call
mov
in
xor
jo
imul
sbb
mov
inc
ret
andb
decb
and
dec
lds
pop
mov
adc
dec
mov
je
cli
pop
xor
insl
mov
and
movsl
aaa
jns
cli
xchg
pop
mov
nop
push
cmp
and
fwait
mov
cmp
and
pop
mov
inc
sub
mov
adc
outsl
ficompl
les
jo
js
pop
mov
out
mov
out
bound
jmp
test
jmp
je
push
xor
mov
push
lahf
in
cmp
xor
and
inc
out
cmp
xor
jge
scas
sbb
sar
mov
fldt
int
inc
call
repnz
fucomi
adc
fcomp
aas
popa
push
aad
sbb
inc
adcb
in
or
mov
cmpsb
ds
push
pop
loopne
and
pop
xchg
mov
add
mov
xchg
loope
or
inc
push
jle
lods
icebp
sbb
jnp
inc
push
mov
push
adc
mov
jbe
adc
lea
and
fistl
jns
push
mov
cwtl
pop
sub
pusha
dec
in
pop
repnz
mov
in
scas
lret
shrl
ja
test
lods
pop
cmp
xor
dec
xor
sub
dec
ljmp
lods
pop
shrl
pop
xchg
xchg
xor
xorb
adc
jno
mov
mov
pop
pop
leave
lods
into
push
cmpsl
push
test
sub
push
mov
loopne
andb
pop
and
lret
sub
jbe
add
xor
lock
xchg
adc
imul
mov
jbe
stc
mov
int
test
pop
hlt
sbb
sbbl
mov
sub
out
pop
test
and
dec
jmp
xchg
call
lds
cmp
ret
push
notl
xor
jo
cmp
pop
mov
loope
sahf
cmc
data16
jno
push
sbb
sub
push
push
cmp
pop
fmull
cltd
add
and
aas
cld
lret
and
ror
dec
inc
cmp
and
xor
sub
scas
dec
mov
sub
cmp
xchg
and
xchg
cld
jb
mov
xor
shr
mov
mov
xor
push
jge
pop
push
add
mov
xchg
and
pop
fidivrl
pop
cmc
jns
cmp
subl
fsubrl
lods
enter
fs
or
add
sbb
hlt
lds
jge
jp
and
jmp
fstl
jp
xchg
pusha
mov
sbb
and
sarl
ljmp
cmp
dec
clc
lahf
pop
inc
fisubl
cmc
in
int3
insl
or
insl
mov
lret
pop
xchg
dec
in
sti
dec
sub
lods
pop
test
in
and
cmpxchg
inc
sub
loope
mov
loopne
jl
shl
shl
mov
mov
add
mov
mov
mov
adcl
hlt
xchg
add
xchg
mov
inc
lcall
mov
and
scas
sub
incb
cmp
push
pop
add
call
jno
adc
ret
sarl
xchg
inc
shrb
sub
addr16
nop
pop
pop
fdivr
cmp
and
pop
jmp
lds
and
cmp
call
lcall
sub
into
sbbb
jae
push
xlat
ret
nop
mov
adc
xor
lcall
les
lods
and
scas
xchg
loop
jb
rolb
and
in
sbb
xchg
pop
add
fsubl
mov
pop
adc
ficoms
inc
rclb
xor
push
outsl
inc
iret
icebp
jo
and
mov
xor
jp
out
ror
add
mov
xor
jl
add
out
sti
sti
mov
lcall
shll
int3
jecxz
mov
sbb
test
out
cmp
lcall
test
jmp
call
push
jmp
or
ljmp
jns
fninit
pop
jmp
xor
mov
xor
jmp
or
mov
enter
rep
jbe
sub
xor
push
jne
jg
cmpsb
jmp
aaa
dec
shr
mov
pushf
daa
lcall
fnstsw
or
sbb
xor
rdtsc
loop
jb
test
shr
pop
rcrl
aas
adc
and
loope
loopne
out
test
jecxz
dec
imul
dec
lds
inc
xchg
loope
jp
ds
daa
sbb
ljmp
pop
icebp
push
cmp
cmp
je
ds
push
lods
je
imul
icebp
arpl
lcall
mov
jge
cmp
mov
add
nop
insb
mov
ss
loope
mov
andl
jo
sub
push
test
pop
fs
pop
cwtl
xor
add
shl
bt
test
pusha
pushf
or
clc
cmp
pushf
movb
lea
jbe
inc
pusha
movb
not
incl
lea
dec
call
pusha
sub
add
mov
movb
not
setg
not
jmp
dec
fidivrs
adc
and
or
mov
jp
cmpsb
add
dec
adc
xchg
loopne
test
sbb
imul
adc
xchg
js
sbb
inc
lock
sbbb
mov
cmp
lahf
rclb
cmp
lock
addr16
xor
sahf
sahf
lret
stos
in
insl
pop
sub
xchg
movsl
cs
push
loop
aas
ljmp
cmp
jb
cmp
mov
btc
rcr
mov
cmc
shr
call
movl
pushf
movl
movb
lea
jmp
pushl
pushf
movl
push
lea
jmp
pusha
movl
pusha
movl
pushf
pushf
mov
lea
jmp
push
movsl
mov
divl
xor
mov
lds
out
sbb
lret
dec
shll
scas
js
subl
fldcw
popa
sbb
stos
jle
jecxz
stos
int
push
int3
daa
jle
add
andps
mov
mov
mov
or
movsl
outsb
xchg
andb
fsubl
sbb
adc
and
fstpt
cmp
xor
mov
mov
sub
aas
adc
sub
xor
test
movw
mov
lea
jl
shld
bsf
add
shrd
shld
das
movzbl
mov
rcl
inc
call
jmp
test
pushf
and
stc
shr
cmc
cmc
cmp
add
neg
shrd
movzbl
sub
push
add
cmp
mov
bts
add
shld
xor
inc
xor
btr
add
add
xor
mov
pop
bts
ror
add
btc
shr
jmp
mov
adc
mov
lods
gs
lahf
cld
mov
jb
jns,pt
mov
data16
fs
test
ret
fisubrs
lcall
movsb
xchg
cmp
cmp
dec
dec
lret
fsincos
xchg
pop
cmp
loopne
imull
lahf
popf
fs
mov
add
lahf
lret
dec
fcmovnbe
dec
cltd
lock
dec
fcompl
inc
adc
sbb
add
or
js
outsb
or
or
cltd
dec
adc
mov
ret
pop
jp
addr16
xchg
in
cmp
pop
jecxz
dec
ljmp
rclb
cmp
lock
mov
mov
movsl
inc
jg
pusha
and
fsub
and
push
adc
les
aad
cmpsl
mov
mov
mov
push
sbb
imul
push
inc
shrl
xchg
adc
add
xchg
cmp
leave
in
sbb
sbb
aaa
out
rol
in
pushf
lahf
cs
xor
mov
and
xchg
push
sub
xor
fmul
dec
mov
mov
int
pop
mov
xor
add
cmp
xchg
mov
shl
es
xor
adc
mov
push
pop
fs
jp
mov
ret
shrl
xorb
test
fcoms
xchg
mov
js
and
ja
in
add
inc
xorl
dec
sub
mov
mov
xchg
xor
in
mov
inc
dec
pop
jg
jb
mov
xor
inc
in
addb
and
xor
lods
jle
aad
rep
pop
and
test
fsts
push
jp
mov
movl
call
push
pushf
movl
movb
movl
call
call
jl
mov
add
stos
jecxz
mov
into
xchg
es
dec
daa
jmp
mov
adc
icebp
rorl
out
testl
sahf
mov
push
lock
jb
dec
shrl
mov
scas
xchg
fdivr
daa
jmp
cwtl
xchg
sbb
xor
movsl
in
mov
mov
loopne
adc
push
gs
rorl
and
push
insb
or
adc
popa
dec
out
scas
xor
bt
test
mov
jmp
lea
je
cmp
jmp
jmp
pushf
movl
pushf
movw
movb
lea
jmp
push
movl
mov
pusha
push
push
lea
jmp
push
pushf
pushf
push
movb
lea
jmp
mov
movl
pushf
movb
pusha
movw
movl
pushf
lea
jmp
jmp
or
leave
xchg
outsl
mov
test
outsl
add
inc
mov
out
push
push
jbe
add
test
dec
cmc
jne
push
sub
cwtl
in
aam
enter
outsl
iret
nop
pusha
jl
push
sarb
pop
mov
lds
mov
sub
imul
enter
pusha
scas
pusha
pop
mov
das
pop
jnp
mov
sub
out
mov
mov
mov
sub
add
xor
je
cmpsl
ret
pop
int
push
and
add
pusha
add
call
mov
dec
and
sub
repnz
in
xor
sbb
mov
add
or
cmpsb
stos
cmp
imul
or
pushf
push
icebp
lods
inc
icebp
xor
int
xor
add
xor
cli
and
fs
js
inc
or
inc
xor
insl
lock
or
call
push
xchg
cmp
adc
loop
jno
movsl
lcall
shll
mov
adc
incb
xor
mov
mov
xor
mov
int
dec
icebp
icebp
idivb
out
mov
cmpsl
pop
repz
xor
pusha
jmp
push
jmp
pushf
movb
movl
pusha
lea
jle
pushf
movl
push
pusha
movb
movb
lea
jmp
pop
adc
cwtl
rorl
sbb
mov
dec
jmp
in
and
dec
jle
stos
mov
dec
xor
push
mov
jo
ja
jnp
xor
cmp
andl
xor
test
adc
cmp
push
scas
mov
pop
in
lret
jns
xchg
pop
push
inc
outsb
xor
leave
push
or
pushf
mov
divl
xchg
mov
ret
xor
adc
add
jge
push
inc
outsb
xor
pop
push
iret
jnp
cmp
call
mov
mov
jl
lods
inc
je
dec
mov
dec
iret
int
rcrl
jno
pop
cli
pop
xchg
scas
adc
les
rolb
xor
push
ds
sub
mov
mul
mov
dec
mov
mov
mov
xor
loopne
int
push
bound
add
outsl
std
enter
dec
jmp
ljmp
cli
adc
sbbl
gs
gs
out
jb
es
cmpsl
xchg
sbb
push
pusha
mov
jmp
cltd
xchg
notb
xchg
aam
movsl
rcrb
lea
mov
sub
cmp
ja
not
mov
xchg
or
insl
in
mov
test
stc
jle
hlt
test
stc
shlb
sub
add
adc
adc
push
test
cld
mov
xor
addr16
xchg
xlat
jb
out
pop
arpl
add
add
dec
imul
imul
xchg
movsl
mov
lahf
xchg
repz
adc
cli
jmp
jg
sbb
push
mov
add
decl
dec
loopne
cltd
test
mov
test
push
push
push
cmp
adc
mov
stc
xor
jns
xchg
lcall
sub
xchg
les
push
aas
jecxz
add
xor
out
sbb
mov
hlt
xorl
cltd
lea
and
fstpt
cmp
xor
mov
lock
in
pop
idiv
fcoml
pop
or
inc
clc
stos
push
jbe
and
sti
xor
lret
adc
xchg
mov
jns
xor
add
aaa
aam
ret
sbb
jp
xchg
and
xchg
out
mov
push
repz
inc
ja
repnz
pop
lret
mov
std
mov
mov
ljmp
popf
push
clc
cmp
mov
mov
pop
cmp
sbb
and
or
cmp
jbe
mov
cwtl
cmp
cmp
sbb
xor
rcll
mov
andl
sahf
add
out
loope
jge
sub
push
and
inc
lcall
mov
mov
adc
xor
test
or
ficoms
cmp
mov
push
xor
xor
cmpb
jbe
pusha
dec
leave
xor
sub
fld
pop
adc
sub
xor
ljmp
je
add
cmp
pop
scas
cmp
cs
out
mov
or
enter
dec
in
dec
out
ret
lcall
aas
sbb
rclb
sarb
ret
and
jge
mov
push
push
fimuls
std
clc
pop
mov
dec
cmp
fiadds
inc
dec
adc
pop
loop
jle
mov
and
pop
xchg
lods
jnp
push
jmp
movsb
pop
xor
call
js
push
mov
xchg
xchg
aas
and
sub
outsb
fsubrp
int
push
popa
iret
dec
lcall
clc
into
les
cmp
cltd
cmp
lahf
call
push
mov
jbe
roll
add
mov
xor
xchg
fcoms
or
bound
adc
adc
jb
pop
sub
or
lcall
xchg
lods
insl
cwtl
repnz
jle
jne
out
outsl
or
pop
imul
add
inc
jae
daa
dec
mov
mov
sti
pop
xchg
scas
fnstenv
or
mov
flds
fnsave
adc
ss
ss
and
xchg
ud1
int3
in
ss
int
popa
icebp
enter
pop
sbbb
sbb
xor
in
sbb
xor
pushf
sbb
xor
repnz
adc
push
sub
rolb
adc
cmpsl
repnz
adc
xchg
aas
pop
inc
popa
mov
and
xor
aam
dec
loopne
sbbb
ss
cmp
jae
mov
sub
jle
or
lcall
add
mov
pcmpgtw
stos
fs
jo
push
mov
xor
repz
mov
adc
sahf
aad
shlb
and
fwait
in
adc
mov
stos
cld
std
push
inc
lods
shll
xor
xrelease
mov
out
fs
adc
or
lret
mov
jns
adc
sti
mov
lret
push
jno
or
lods
mov
sbb
int
jl
hlt
dec
pop
jle
jg
push
xchg
jbe
imul
ds
hlt
loopne
push
in
mov
rcrb
rol
pusha
xchg
xchg
ret
mov
cmp
mov
xchg
sbb
movhps
or
dec
mov
fwait
popa
test
imul
adc
addl
popf
pop
adcl
in
out
les
or
psrlq
xlat
push
xor
ficoml
out
scas
ja
mov
or
mov
xor
lcall
and
push
ds
push
push
inc
lds
clc
cwtl
mov
add
pop
arpl
shll
mulb
fnsave
xor
adc
call
push
xchg
gs
mov
push
pop
mov
push
add
jle
add
xchg
fisttpll
addr16
xor
fwait
mov
out
dec
inc
mov
nop
popf
mov
in
imull
push
pop
addr16
ret
ficoml
lods
add
mov
cld
rorl
add
testb
aas
mov
decb
mov
and
push
sbb
mov
add
push
cmp
cli
lock
sbb
jns
jb
iret
int3
jge
xor
cmc
cli
inc
xchg
push
adc
dec
mov
addr16
dec
pop
testb
cwtl
dec
adc
inc
in
mov
add
mul
mov
jne
xlat
lds
fnstsw
add
fcmovnb
call
mov
mov
mov
lret
fcompl
data16
bound
and
popf
and
movsl
lret
mov
adc
mov
lods
out
fstl
imulb
push
push
lods
fs
or
mov
inc
arpl
enter
lods
sbb
stos
out
sbb
sub
pop
mov
jb
insb
aad
adcl
ss
cmp
sti
test
lret
cmp
stos
gs
lods
inc
cwtl
je
popa
adc
jbe
mov
int
ss
cmp
sub
ds
ds
xchg
fnstsw
testb
js
int
push
sbb
jg
xorb
je
fs
imull
ss
mov
xchg
imul
push
das
push
cld
repnz
xor
lods
into
imul
addr16
xor
cs
rcrl
xor
adc
xchg
ss
cld
pop
scas
pop
aaa
sbb
xchg
lret
pop
call
xchg
icebp
and
and
sbb
fimuls
pop
inc
fdivrs
pop
jmp
xor
loopne
mov
fs
xchg
or
stos
outsb
inc
sub
outsb
adc
adc
out
enter
mov
cld
loope
inc
notb
pop
test
push
rorl
aam
adc
mov
xchg
arpl
add
xor
xchg
adc
or
mov
sar
xlat
in
pop
mov
add
pop
pop
mov
in
pop
arpl
cmpsl
jae
lret
jbe
ret
xchg
lahf
mov
mov
or
xchg
mov
in
loopne
into
in
sub
sub
push
mov
aam
ds
fsubl
insb
jl
mov
std
sbb
sbb
xchg
mov
add
les
mov
popa
leave
in
dec
sub
xchg
add
fdivp
jp
dec
push
push
neg
push
jns
mov
xor
and
and
dec
cmpsl
jmp
dec
aam
jle
stos
pop
jecxz
jnp
roll
aam
mov
loopne
add
aas
movsb
imul
test
sarb
ds
hlt
dec
push
fstl
or
hlt
mov
sbb
xor
por
xor
lea
or
push
mov
xlat
lods
xor
aad
sbb
pop
mov
lods
push
inc
shrl
test
xchg
outsb
jp
cli
insl
or
jnp
orl
sbb
jo
shl
cld
ret
sbb
sbb
inc
xchg
psubusb
mov
jne
cmp
xchg
xor
hlt
cmp
add
ret
pop
xor
out
shll
cld
nop
add
lods
lea
mov
dec
jmp
jo
stos
in
sub
decl
jo
mov
mov
outsl
and
sub
test
and
fnstenv
jo
inc
test
cmp
pop
dec
roll
mov
xor
xchg
dec
jno
movsl
cmp
xor
std
pop
ds
and
pop
sbb
insl
fdivs
add
mov
sub
fs
pop
pop
sub
and
mov
cmp
cmpsb
adc
out
ret
loop
sbb
cmp
sbb
js
mov
ljmp
fcompp
pop
mov
test
and
or
xorl
adc
test
xchg
mov
arpl
out
inc
xchg
cmp
add
addr16
in
into
ds
push
add
aas
sahf
movsl
ja
imul
add
addr16
push
dec
push
dec
push
in
jge
mov
subl
cwtl
jno
dec
pop
je
lods
push
sub
mov
xor
mov
lea
xchg
repz
sub
jp
es
int3
call
adcl
fsubrl
add
jge
pusha
movl
call
call
add
mov
lcall
sub
or
jb
sbb
sbb
shr
sar
imul
mov
rolb
xchg
pop
cmp
dec
cmp
sbb
add
xchg
sarl
sahf
ficompl
add
cmp
mov
xchg
dec
add
call
pop
movsb
jge
out
ret
xor
insl
cmp
push
mov
sub
xor
mov
ret
cmpsb
sbbb
and
mov
lock
aam
cmp
mov
jnp
xchg
dec
pop
adc
cmp
mov
push
xchg
xchg
mov
leave
or
xor
push
dec
adc
inc
les
dec
push
test
or
xchg
push
mov
mov
orb
inc
sub
cmp
xor
cs
adc
adc
mov
xchg
wrmsr
rorb
lcall
xchg
outsl
inc
insl
mov
aad
cmp
faddl
cmpsl
xlat
mov
pop
inc
adc
pop
jne
imul
es
mov
adc
testl
xor
dec
cmp
movb
sub
movw
mov
bt
push
mov
cmc
jmp
pushl
movl
pusha
movb
jmp
cmp
clc
cmc
shr
jmp
jne
push
movl
push
movl
pushf
pusha
mov
movb
lea
jmp
daa
push
setp
cmc
in
jno
jmp
mov
and
clc
cli
inc
xchg
pop
xchg
inc
pop
xor
ja
ja
ret
iret
sub
cli
inc
test
out
dec
clc
mov
add
xchg
daa
cld
aam
popa
sub
js
js
hlt
dec
adc
test
lds
clc
sbb
mov
shll
push
jbe,pn
jle
cmpb
cwtl
xchg
xchg
repz
pop
daa
dec
cmpsl
cmp
xchg
jl
push
addr16
loopne
xchg
fadd
in
mov
je
dec
into
fstpt
pushf
push
lahf
shll
push
sbb
or
int
sub
pop
movb
mov
xor
inc
cmp
push
insl
xchg
xchg
xor
pushf
cmc
clc
shr
push
test
jmp
inc
movsb
arpl
inc
adc
iret
cmpsl
fists
enter
push
xor
imul
pop
cmp
inc
mov
or
mov
mov
dec
sbb
jae
mov
out
push
pop
mov
cmp
add
popa
lds
pop
popf
fs
hlt
add
push
loopne
jo
xchg
insb
jle
sbb
loopne
test
sbb
dec
call
cmp
cmp
hlt
inc
hlt
in
sbb
push
dec
ljmp
xor
mov
lock
pop
bound
mov
mov
dec
psubusb
inc
sbb
xchg
enter
fmulp
jmp
sub
lret
sub
aas
lcall
mov
mov
call
adc
mov
es
into
jp
cmpsb
in
stos
ret
fidivs
lcall
add
decl
and
jge
rol
mov
stc
aaa
lahf
cwtl
mov
sub
lea
call
pushf
movl
pushf
movl
push
pushf
pusha
lea
jmp
movl
pusha
pusha
movl
push
mov
lea
jmp
movl
pushf
push
lea
jmp
shld
rol
add
bsr
test
btc
and
mov
mov
shl
neg
shr
inc
add
pop
rcr
movsbw
and
not
push
inc
btr
add
bsr
shl
mov
sbb
bsf
lea
pushf
sar
mov
rol
mov
pushf
pushf
test
shr
clc
call
clc
call
cmp
and
pushf
clc
cmc
mov
stc
stc
call
pusha
movl
jmp
call
seto
add
btc
neg
shr
btc
movsbw
xor
movzbw
xchg
dec
lea
mov
dec
xchg
mov
setge
pop
inc
inc
shl
seto
xadd
mov
shl
btc
shl
shr
mov
add
rcl
and
mov
lea
rcl
mov
cmc
mov
mov
pushf
shr
jmp
pusha
push
pushf
movl
jmp
mov
xchg
dec
cmp
jmp
cs
sahf
inc
inc
or
xor
sub
daa
pop
ds
xchg
ds
into
cmp
xor
daa
pop
mov
imulb
jp
fs
mov
les
pop
xor
orl
mov
in
inc
xchg
packuswb
lret
btc
bnd
cmp
push
mov
orl
nop
in
je
inc
sti
loope
jmp
out
xchg
fcmovnu
cmpsl
xor
push
xchg
pop
mov
je
adc
lcall
lcall
mov
push
add
pop
cmp
lcall
and
or
std
or
add
inc
sar
xor
pushf
lea
jmp
jmp
push
call
add
ret
and
fisubrl
xchg
inc
les
hlt
add
xchg
bswap
sahf
movsb
or
into
test
lcall
push
jle
pop
sub
push
cmp
lock
out
jb
mov
push
push
or
sbb
rcll
xchg
push
and
lahf
or
xor
lcall
stc
loop
jmp
movl
movw
push
lea
jmp
cs
nop
dec
push
lret
jno
jo
jg
aad
subb
mov
xor
add
scas
test
mov
mov
sbb
aas
pop
adc
jnp
xor
jp
inc
ret
cltd
sub
push
mov
mov
insb
xor
or
iret
pop
mov
xchg
in
jno
jb
test
xor
cmc
inc
subl
data16
les
hlt
mov
nop
jno
lcall
add
bt
stc
cmp
test
movb
mov
call
cld
shrl
xchg
sbb
cld
out
test
aad
xor
sahf
fsubl
push
fs
imull
jle
orl
inc
sub
mov
xor
push
jmp
and
shrb
inc
mov
dec
push
lret
es
out
dec
sbb
inc
add
sbb
inc
lcall
sbb
cmp
out
loop
add
or
inc
ret
jmp
jne
push
push
pusha
movl
mov
push
lea
jmp
imul
adc
adc
pop
popf
repz
aas
sbb
sub
cmp
mov
aas
mov
leave
lret
adc
sti
or
popf
in
pop
dec
adc
dec
sub
adc
std
jns
pop
mov
subb
das
int
je
fisttpl
cmp
pop
xor
xchg
fcmovnu
mulb
fdivl
jp
and
loope
lahf
inc
jb
mov
ret
jo
mov
or
cmp
rolb
mov
dec
mov
aaa
or
xchg
mov
sbb
xchg
pop
xor
pop
xor
push
movw
lea
jmp
mov
mov
mov
not
mov
jmp
push
pushf
movl
movb
movl
pusha
push
pusha
push
lea
jmp
jge
je
sub
mov
data16
or
mov
push
sti
mov
mov
std
lcall
xor
inc
fildl
outsb
jecxz
pop
int
push
jle
or
test
cltd
adc
or
lods
mov
pop
and
sub
mov
imul
cmp
cmp
cli
xchg
out
or
sbb
or
or
and
lret
mov
jmp
cmpsl
shl
xor
call
call
in
xor
pop
cmc
lods
aaa
or
push
std
sbb
xlat
fisubrs
pop
and
cmpsl
in
dec
adc
mov
in
cmp
mov
dec
push
pop
stos
add
pop
jg
dec
dec
jge
das
pop
and
adc
push
int3
xlat
ja
sti
adc
dec
test
xlat
lret
mov
loop
pop
mov
xor
jmp
cmp
jno
ss
mov
cld
or
cmp
fdivs
inc
aam
mov
ds
jge
add
inc
cmpsb
mulb
xor
push
mov
jo
int
test
data16
sbb
xor
out
mov
orl
cmp
sbb
xor
mov
adc
pop
bound
cmp
cmp
shll
dec
mov
add
cmp
add
cwtl
sbb
lcall
movl
adc
pop
ret
idivl
imul
mov
inc
faddl
mov
fwait
adc
shl
push
cmp
stos
fs
jno
icebp
gs
shrl
mov
outsl
push
mov
dec
or
jl
xlat
in
stc
cltd
fs
ss
dec
mov
in
xchg
inc
js
cmp
out
mov
mov
push
xchg
adc
int
mov
sbb
les
ret
clc
shr
cmp
bt
and
clc
cmc
call
rcr
add
btr
xor
xadd
mov
dec
bswap
push
bswap
shr
ror
bt
movsbw
add
test
pushf
bt
btc
and
pushf
add
movb
pushf
mov
bt
clc
pushf
shr
cmc
add
pushf
mov
btr
add
or
cmc
bts
stc
xor
adc
sub
cmp
push
add
shl
ror
mov
cmp
btr
shrd
shl
movzbw
xor
xchg
lea
and
jmp
lahf
xchg
imul
mov
movsl
pop
adc
repnz
outsb
pop
mov
rcrl
iret
cmp
je
aaa
dec
sub
mov
insl
mov
nop
fnstcw
dec
ss
inc
cmp
aaa
cmpsb
jnp
movsb
cmp
aaa
fwait
dec
dec
stos
push
inc
add
jmp
notl
sbb
sub
push
sub
mov
xlat
icebp
dec
cld
stos
aaa
sbb
leave
in
dec
sub
adc
xor
push
mov
cwtl
sub
ss
popl
jg
and
push
xchg
cwtl
inc
lods
push
xchg
add
mov
dec
jno
xor
popf
inc
and
scas
jne
sahf
addr16
ljmp
xor
rorl
popa
or
pushf
mov
xor
dec
cld
add
js
push
test
ds
fimull
incl
movsl
test
lcall
or
movb
lea
jmp
jne
lcall
orb
xchg
pop
jns
testl
pop
inc
sarl
push
aam
cltd
test
pop
lret
pop
jo
arpl
dec
push
or
clc
sbb
push
sti
push
fists
popf
sbb
cmp
jle
push
and
push
rclb
leave
sahf
aad
lea
fnstsw
inc
cmp
mov
adc
shr
aas
sete
maxps
div
sbb
clc
rcrl
and
mov
xor
rcrb
jb
push
ret
dec
insl
inc
scas
jno
adc
sub
and
and
imulb
mov
imulb
aad
xorps
sub
inc
mov
shrl
sub
scas
lret
movsb
mov
lds
pop
xchg
das
dec
adc
mov
add
hlt
rcll
inc
divl
imul
xchg
jo
sub
pop
mov
adc
daa
ds
or
mov
mov
mov
dec
adc
dec
mov
xor
fisttpl
jnp
add
loop
jp
adc
mov
pop
xor
push
xchg
jo
jbe
mov
mov
fildll
cwtl
add
aam
or
icebp
inc
add
jecxz
dec
sub
push
ret
add
jmp
push
movsb
das
jno
sub
or
mov
push
and
push
movsb
in
je
lcall
mov
aam
and
mov
mov
mov
sbb
dec
std
rorb
ret
outsb
pop
cltd
mov
sub
insl
add
cmp
ficompl
cltd
adc
xchg
imul
lret
je
mov
dec
pop
sti
sbb
js
jbe
push
repz
lcall
out
sub
xor
cmpsl
out
pop
shl
out
push
sbb
xchg
xor
jbe
jae
enter
adc
xor
mov
sub
and
xchg
cmpsl
mov
push
stos
arpl
cs
addl
lret
stos
sbb
add
and
xor
cmpb
idivl
lcall
xor
jge
xor
mov
inc
fidivs
mov
test
pop
orb
cmp
lock
xorl
pop
sbb
fistps
syscall
mov
jb
mov
mov
add
xor
pusha
movl
pushf
push
jmp
fldt
into
mov
cld
pusha
popa
out
in
leave
dec
jg
pop
out
stos
adc
mov
out
push
addr16
mov
call
fstp
outsl
dec
mov
dec
pop
int
push
mov
lds
jle
mov
add
add
jnp
xor
push
push
xchg
in
out
je
xor
and
sbb
dec
pusha
fstl
push
mov
cmp
xchg
cmp
aam
mov
lcall
repnz
cmp
pusha
lcall
add
xor
cld
out
lods
dec
stos
pop
push
mov
enter
and
jns
fcoms
bound
sbb
xor
icebp
xchg
pop
mov
in
pop
xor
xchg
adc
mov
cmpsl
sbb
jo
cld
pop
dec
leave
mov
adc
xorl
mov
or
int
fsubrs
scas
pop
mov
mov
add
cmp
lock
int
push
mov
or
adc
fwait
icebp
pop
mov
lock
test
out
lret
and
add
out
cmp
mov
pop
fwait
mov
dec
mov
ret
in
inc
pop
push
cli
inc
mov
pop
cmpsb
fs
adc
pop
and
mov
or
aas
pop
jae
cld
push
jl
pop
lret
xchg
inc
ljmp
fdivl
xor
add
cmp
mov
inc
inc
jecxz
es
andl
addr16
xor
iret
out
cwtl
sahf
shll
push
icebp
out
mov
popa
inc
push
rcr
jns
push
dec
jmp
outsb
xchg
jp
leave
xor
xor
iret
loop
xchg
enter
or
or
inc
std
mov
repnz
ljmp
pop
and
loopne
or
xchg
dec
stos
sub
je
xlat
mov
adc
ja
mov
ror
sbb
sbb
and
inc
xchg
cld
xchg
mov
pop
jne
out
xor
or
jp
sbb
das
jbe
push
ret
pop
mov
xor
add
xchg
or
cli
adc
pop
clc
fs
xor
dec
push
pop
jp
xchg
idiv
fdivl
pop
cmp
push
add
mov
cmp
sbb
xor
push
inc
inc
loope
push
daa
sbb
lock
in
ds
inc
lods
adcl
loop
ret
jae
xorb
mov
lcall
add
dec
popf
mov
sbb
and
jmp
and
movl
pushf
lea
jmp
jmp
cs
lret
in
repz
pusha
xchg
iret
out
push
fstpl
pop
pop
mov
add
inc
cmc
push
sbb
cmp
jg
mov
xor
in
ja
jp
add
push
add
cmove
les
sbb
xor
insl
dec
popf
scas
adc
push
dec
bound
lds
xcrypt-cfb
cmpsl
mov
repnz
sahf
inc
lods
mov
mov
fidivl
lcall
pop
loope
xchg
out
aad
adc
cld
lcall
adc
int3
repz
rorb
cmp
add
cmp
jmp
mov
jge
fwait
dec
lcall
int3
lock
mov
jae
movsl
dec
repz
xor
andnps
push
movsb
jmp
enter
xor
jmp
fxch
call
jecxz
ljmp
xor
mov
pop
mov
imul
aam
jnp
or
aam
fdivrl
data16
mov
loopne
inc
mov
jno
mov
pop
fstpt
ds
add
les
shll
jge
lcall
push
int3
sbb
xchg
add
call
push
xor
lea
lods
lods
and
lock
js
in
lds
xor
add
xchg
enter
xchg
sub
stos
xor
mov
jns
test
les
add
inc
ficoms
sbbl
in
jne
mov
rcrb
addr16
xchg
adc
aam
lock
mov
pop
pop
mov
inc
dec
dec
mov
ret
es
sub
testl
cltd
fdivrp
fiaddl
faddl
xor
jo
push
cmpsb
jmp
pop
pop
or
nop
addr16
inc
imul
jmp
jge
xchg
jecxz
cs
xchg
xor
add
imul
inc
pop
xchg
dec
push
push
ja
fs
imul
sub
out
test
xor
movl
xor
mov
mov
xlat
and
sbb
xor
mulb
pop
mov
mov
sub
adc
push
cmp
xor
aad
call
add
adc
loope
enter
inc
mov
cmp
xchg
mov
adc
ret
shrb
test
popf
jmp
adc
cmp
sahf
mov
inc
bound
sub
add
stc
lea
push
pushf
mov
movzbw
pushf
bswap
pop
shr
xor
add
shr
rcr
mov
pusha
stc
movb
push
shr
stc
cmc
stc
and
test
clc
stc
add
call
dec
bt
movb
stc
cmp
shr
call
movb
pushf
movl
mov
jmp
movl
pushl
call
dec
arpl
jnp
sbb
cwtl
mov
stos
mov
test
add
pop
clc
mov
popa
mul
shll
pushf
or
sbb
add
ja
sub
xlat
hlt
es
cli
clc
add
popa
dec
mov
push
mov
outsl
std
inc
clc
outsl
mov
clc
fwait
mov
dec
dec
add
js
fwait
mov
pop
pushf
sub
out
sub
ret
xchg
jno
or
or
push
test
pop
clc
sbb
fs
jecxz
lret
pop
inc
mov
sbb
bound
push
mov
cmpl
add
and
inc
inc
rcrl
cli
aaa
adc
jg
push
add
push
or
lret
xchg
stc
xor
mov
leave
add
cmp
adc
pop
lret
es
test
mov
dec
dec
in
adc
pop
into
jnp
xor
sub
jae
ljmp
leave
or
sub
gs
in
adc
shr
outsl
imul
pop
cli
cld
loop
popa
call
jb
sarl
mov
lcall
jge
rcrb
js
rcrb
daa
cmp
in
lcall
in
adc
sbb
out
shlb
lcall
push
add
sbb
jge
sbb
xor
shlb
or
xor
out
ja
out
sub
inc
xor
mov
pop
insl
ret
cld
enter
mov
ljmp
loopne
adc
lahf
insl
xor
insb
aad
push
cmp
dec
fs
les
shr
and
scas
inc
lcall
lcall
add
lahf
rorb
jno
in
cmc
imul
jle
lret
cmp
addl
mov
cmpsl
jmp
cmp
sub
sbb
ja
add
aad
add
dec
lea
xor
clc
dec
daa
mov
or
popa
jg
test
inc
push
jg
cmpl
pop
dec
int3
clc
mov
fistpll
push
loope
jno
aaa
xchg
movsl
rcrl
popf
xchg
out
popf
mov
jp
lods
adcl
xchg
subb
adc
xchg
add
call
pop
mov
jno
lods
dec
lahf
ret
test
push
jne,pn
mov
lods
arpl
sbb
pop
push
sub
mov
mov
les
int
and
lret
cmpl
jo
in
loope
sub
mov
jmp
adc
icebp
ret
sub
js
daa
fsub
in
add
fnstenv
mov
sbb
fisubrs
mov
adc
push
sar
sbb
clc
push
jno
jo
insb
or
push
or
jb
mov
add
pusha
lods
cli
iret
push
call
shr
bt
test
jmp
mov
add
push
out
pop
sub
clc
mov
jle
out
imul
mov
sub
jo
pop
fcompl
cmp
add
out
dec
test
xor
xorl
lahf
stos
sbb
sbb
inc
lock
test
sub
adc
cmp
inc
sbb
test
or
xor
ret
icebp
int
aam
pop
stos
jecxz
jp
stos
imul
mov
sahf
jle
cmp
outsb
into
jp
insl
or
add
pop
lret
xchg
clc
sub
jecxz
aad
fdivs
mov
jb
push
cltd
add
inc
pushf
sbb
xor
sub
jb
push
cmp
xchg
repnz
xor
pop
shr
ljmp
enter
mov
push
xor
push
mov
mov
cmp
rcll
xchg
xor
mov
xor
fimuls
mov
popf
pop
cmp
or
test
cld
incl
jmp
call
push
movl
pushf
movl
pusha
lea
jmp
call
icebp
pop
mov
mov
stc
jno
scas
mov
push
mov
sti
jbe
pcmpeqd
ds
mov
adc
xor
fs
add
fbstp
xchg
cmpsb
mov
lret
in
dec
mov
sub
sub
xchg
out
lds
sbb
stos
fidivl
push
std
sbb
and
dec
jmp
popf
sbb
movb
pop
push
sbb
mov
or
xor
ret
data16
cmp
lcall
sbb
dec
addl
xor
andb
dec
or
push
nop
outsl
pop
mov
xchg
push
ljmp
push
inc
xor
cmc
faddl
in
iret
sub
jmp
cmpsl
mov
sub
stos
pop
std
mov
mov
cmpb
mov
test
xlat
pop
mov
divb
std
pop
lods
or
lods
pop
sahf
mov
inc
aam
mov
lcall
data16
mov
xor
test
mov
nop
outsl
push
pop
push
in
push
imul
cli
xor
dec
and
inc
mov
cmp
xor
pop
add
push
pop
dec
dec
push
popl
test
add
lds
mov
mov
lret
mov
fdivrl
inc
lods
cmp
inc
dec
mov
scas
push
push
jnp
mov
js
je
mov
push
idivl
push
sahf
jno
bound
imul
in
in
scas
or
pop
shlb
add
leave
push
push
popa
mov
xchg
imul
fistpl
outsl
and
xor
xlat
stos
sub
loopne
lea
add
push
lret
jg
iret
out
pop
dec
mov
pop
or
jp
xor
cld
lcall
in
cmp
test
xor
les
into
imul
push
cmp
mov
icebp
dec
xor
adc
dec
gs
sbb
or
inc
sub
inc
sbbl
push
or
in
enter
lea
shl
stc
sar
rcll
int
stc
cmp
xor
push
repnz
scas
mov
xor
test
or
and
pushfw
xchg
mov
sub
js
and
pop
fstp
pop
push
cmp
inc
shrb
pop
in
lret
arpl
test
repnz
inc
and
inc
sub
mov
cmp
into
cmp
dec
jecxz
pop
es
ja
push
bound
filds
xchg
insl
into
xor
pop
pop
inc
xchg
mov
or
out
inc
es
out
into
xchg
dec
xor
sub
imul
leave
mov
stos
mov
mov
cmp
and
lea
lcall
cmpsl
enter
jae
inc
push
push
ret
fsubrl
cltd
les
imul
add
inc
and
int3
in
cmp
lea
jmp
pusha
movb
pushl
jmp
movl
pusha
push
pushf
pushf
lea
jmp
add
pusha
stc
cmp
pusha
push
lea
je
push
lea
jbe
movsbw
dec
mov
dec
shl
inc
mov
movzbw
mov
test
clc
movl
test
mov
call
push
pusha
movl
push
movl
mov
pusha
pushf
lea
jmp
sahf
inc
mov
mov
xchg
ja
xor
mov
jmp
mov
movsl
mov
fmuls
xchg
cmp
imul
arpl
js
push
pop
or
mov
in
xchg
cmp
outsl
loope
ljmp
test
lret
mov
adc
jecxz
idivl
add
in
adc
xchg
testb
lods
inc
bound
xor
inc
and
inc
imul
lds
push
add
aad
mov
out
lcall
int
ja
mov
test
sub
xor
push
push
pusha
mov
lea
jmp
movl
pusha
pushf
mov
push
lea
jmp
push
pushl
movb
movl
pushf
mov
movb
mov
movl
pushf
pushl
lea
jmp
into
add
inc
mov
fsubrl
fstpt
push
in
sub
push
cli
inc
fcomps
jmp
mov
test
clc
cld
pop
shlb
xor
or
int3
add
adc
arpl
push
ret
jecxz
stos
pop
inc
cmp
push
jbe
out
ret
cmp
mov
jb
repnz
loop
pop
cld
dec
xlat
push
fidivl
mov
addr16
or
cmp
scas
sbbb
pop
mov
mov
cmp
int3
call
rolb
inc
dec
rclb
aas
or
push
movsl
mov
lahf
in
mov
or
dec
in
cmp
or
xchg
push
push
mov
fwait
sbb
out
xor
clc
movsl
hlt
psubd
xor
sahf
stos
xchg
or
clc
shll
fdivl
bound
rorl
bt
call
push
test
or
subb
sub
xchg
cmp
xor
or
mov
sub
repnz
cwtl
fisubs
cltd
pushf
inc
movsb
stos
sbb
fnstsw
pop
sbb
mov
and
mov
fucomip
ljmp
rcrl
bound
movl
push
pop
ds
adc
lcall
movsb
xchg
dec
fiadds
out
xchg
or
lcall
xor
out
xor
sbbb
test
push
outsb
or
not
sbb
jb
out
out
push
pushf
inc
pop
xor
push
push
fbstp
ljmp
jb
push
test
jb
clc
cmpsb
fwait
cli
dec
jmp
movsb
push
adc
movsb
pushf
sub
push
call
cld
ljmp
or
js
enter
add
xor
stos
push
mov
into
xor
sbb
dec
xorb
prefetch
push
sub
push
adc
and
and
fmuls
int
clc
xor
inc
jae
lret
clc
incb
jo
adc
dec
in
aaa
sbb
test
sub
fwait
xor
or
mov
outsl
sub
cmp
add
adc
jb
mov
xor
mov
clc
and
lcall
movsb
push
jne
lret
add
pop
pmullw
sarb
mov
and
or
insl
add
pop
sbb
adc
mov
push
loopne
cli
cmpsb
mov
or
sub
sbb
inc
cltd
push
ljmp
cmp
jb
jmp
aas
inc
test
xor
cmp
push
sbb
push
mov
mov
nop
xor
dec
fidivl
inc
and
scas
mov
ljmp
outsb
xchg
in
inc
sub
in
adc
mov
dec
jnp
jbe,pt
mov
sar
mov
push
mov
mov
push
push
or
push
dec
mov
xor
pop
lods
aad
icebp
dec
bndldx
mov
sbb
js
icebp
fidivl
ljmp
push
enter
addr16
nop
xchg
push
adc
inc
and
sbb
lret
xlat
jne
jbe
mov
push
pushf
stos
iret
pop
dec
insb
fistpll
daa
xchg
in
fnstcw
jecxz
add
cmpl
aad
std
xchg
cmp
enter
scas
mov
inc
movsb
jo
jp
jne
push
stos
les
sub
pop
lods
mov
or
sti
mov
xchg
and
inc
mov
shrb
add
test
push
lock
sbb
cmp
dec
mov
add
dec
test
nop
pushf
das
xchg
mov
dec
or
cltd
lods
dec
clc
insl
shll
decb
xor
cmpb
testb
popa
fsubrl
out
dec
mov
jno
xor
pop
dec
inc
inc
int
pusha
test
dec
out
cmp
inc
mov
add
or
mov
lea
dec
jge
in
imul
dec
push
std
std
xchg
push
xchg
jg
mov
push
lahf
outsl
cltd
arpl
add
mov
into
fwait
cmp
mov
push
daa
mov
mov
movsl
test
icebp
dec
orl
xlat
das
sahf
inc
in
jne
lods
sahf
xchg
cmpsl
aas
cmc
adc
fwait
add
and
mov
push
push
ds
push
rclb
xchg
icebp
inc
into
push
iret
dec
imul
fs
test
aas
pop
sarl
jmp
xchg
xor
mov
insb
lret
inc
mov
movsb
inc
pusha
fstpt
arpl
jo
and
cmp
les
mov
sub
pop
ss
push
test
repz
push
std
test
xchg
popf
int3
test
imul
cmpsb
pop
ds
mov
daa
adc
inc
loop
daa
inc
push
pop
and
mov
clc
xchg
addr16
xchg
aaa
mov
sub
sub
pusha
mov
sti
sub
dec
cmpsb
ret
cmp
daa
inc
dec
sub
add
ja
mov
add
inc
lock
dec
and
add
dec
pop
or
sti
insl
adc
dec
rclb
add
mov
clc
mov
pusha
out
sbb
xor
movsb
dec
movsl
mov
scas
pop
lret
add
shr
xor
lcall
xor
fwait
xor
mov
in
daa
add
and
cwtl
je
shll
std
into
xor
into
lahf
jge
dec
das
sahf
jp
mov
add
mov
rcr
idiv
sub
movsl
mov
adc
xchg
arpl
shrl
call
mov
je
outsl
mov
xor
out
jno
stos
mov
sbb
jg
or
jbe
xor
pushf
pusha
lea
je
inc
inc
mov
push
movl
mov
mov
test
push
pushf
test
test
pushl
pushf
lea
jl
jmp
pusha
movl
push
movl
mov
mov
push
lea
jmp
pusha
pushl
dec
jmp
pusha
movl
pusha
lea
jmp
lret
scas
pop
inc
push
dec
or
mov
mov
inc
pop
test
pop
cmc
xor
sbb
jbe
lock
jns
repz
jbe
cmpsb
loopne
cli
cs
dec
out
ss
sub
fwait
add
fmul
in
lea
fnstcw
and
sub
xor
mov
jecxz
mov
popa
mov
sub
in
lcall
lea
jo
mov
mov
add
popl
int3
enter
push
dec
pop
jge
adc
cmp
and
clc
mov
or
test
arpl
mov
jbe
jns
in
leave
vmaxpd
sti
ret
pop
or
leave
mov
lret
xor
loopne
inc
fdivs
push
mov
jne
adc
pop
lret
out
popa
add
mov
jnp
mov
sbb
cmp
cmpsl
cmp
lds
mov
pop
and
aad
inc
bts
sub
les
shlb
mov
add
sub
lock
xor
jno
stos
add
dec
jbe
xchg
and
mov
dec
xlat
inc
es
or
mov
stos
mov
add
push
mov
ljmp
notb
out
or
out
incl
aaa
out
test
imul
and
ret
ret
cmp
je
fldcw
jl
xchg
cli
mov
dec
mov
stos
call
or
lcall
fnstsw
jg
stc
push
cmc
pop
mov
pop
stos
cmc
mov
add
out
xchg
mov
daa
adc
jno
or
nop
rcrl
xor
flds
inc
mov
mov
lcall
cltd
ljmp
test
scas
pop
xchg
int
negl
mov
xor
leave
mov
lcall
hlt
mov
sbb
jp
outsb
push
scas
pop
mov
in
loope
lcall
nop
jbe
or
shlb
mov
call
jmp
into
adc
mov
sbb
and
pop
pop
or
push
out
pop
rol
cltd
call
cmp
insb
or
enter
shlb
pop
xor
popf
daa
cmp
jae
and
fstpl
adc
pop
stc
idivl
push
cmp
add
add
push
daa
test
stc
push
fdivs
cltd
fiaddl
in
push
fimuls
stos
and
cwtl
push
cmp
sbb
repz
in
cmp
sub
push
xchg
fisttps
lods
movsb
fistps
sbb
dec
loop
iret
mov
pop
jg
scas
push
rcl
loopne
mov
repnz
test
lret
sbb
xlat
xor
sbb
adc
jecxz
hlt
push
lcall
mov
jno
mov
shlb
or
or
jns
mov
js
add
dec
jo
loope
and
fldenv
mov
fs
and
ret
xchg
fldl
mov
pusha
mov
ret
cmp
adc
mov
mov
cmp
imul
cmp
pop
das
sub
shll
push
push
mov
lea
mov
mov
mov
mov
jnp
repz
pusha
mov
fistl
inc
loop
fistpl
aaa
sbb
inc
aad
out
stos
cmp
mov
xor
mov
sbb
cltd
std
imul
and
lcall
xor
cmpsb
in
jnp
xor
push
adc
pop
addr16
xchg
in
push
inc
popa
cmp
lret
lds
dec
inc
xor
pop
test
inc
js
test
or
sbb
mov
rcrl
cmpsb
jns
cmp
loop
or
or
xchg
xchg
inc
cld
pop
fstps
inc
xor
test
cmc
add
cmp
mov
pop
or
rcrb
adc
xor
pusha
jnp
lret
lds
cltd
cld
push
push
cmc
mov
jmp
mov
mov
push
jbe
ja
nop
mov
push
lret
int3
movsb
bound
int3
or
je
imul
and
jmp
nop
pop
or
push
push
fdivrl
add
mov
sbb
xchg
sub
icebp
out
mov
clc
jecxz
xchg
stc
and
loopne
enter
pop
stc
mov
dec
cmc
movsb
xchg
sub
ss
fidivl
cmc
test
mov
xor
or
test
and
or
sub
pusha
inc
fs
imul
aam
dec
dec
lock
and
jmp
xor
mov
lcall
loopne
xor
xor
mov
call
jge
xlat
es
jl
sahf
jns
pop
ja
in
xor
shlb
stos
popa
nop
lods
pop
adc
jne
aad
cmp
mov
imul
push
dec
rcr
and
stos
xor
out
jbe
dec
or
adc
out
gs
lcall
mov
pop
mov
pop
dec
pop
xchg
ja
orl
ljmp
int3
dec
cmp
gs
cld
pop
insb
or
icebp
add
mov
xchg
inc
sbb
xchg
add
dec
cmp
rolb
push
ret
jle
pop
xchg
xor
xchg
push
andb
aam
adc
mov
push
pop
aam
outsl
daa
shlb
cmc
cmp
xor
sub
stos
cltd
mov
ss
lcall
test
dec
jge
sbb
cmp
rcpps
mov
ljmp
test
repz
fs
data16
and
dec
pop
dec
mov
push
push
mov
jl
xchg
xchg
imul
cli
push
or
js
xchg
jbe
xchg
mov
xchg
mov
je
and
xchg
pop
mov
cs
add
cli
adc
and
dec
aas
mov
movsb
add
into
sti
xor
shrb
pop
stos
inc
in
sub
push
fstpt
mov
rorl
sub
lret
push
mov
aas
call
addr16
jne
shll
mov
gs
xchg
push
das
pop
decb
ret
test
mov
adc
push
mov
sub
adc
lahf
aam
int
jle
cld
cs
dec
jmp
cmp
inc
pop
xchg
xlat
in
xor
outsl
leave
out
sbb
cwtl
sbb
sbb
cs
lret
add
push
and
or
lds
cltd
stc
les
out
inc
and
mov
js
push
pushf
movl
lea
jmp
mov
xchg
cmp
in
pusha
dec
push
inc
cmpsb
negb
cwtl
jle
or
mov
lret
sub
xchg
add
movsb
inc
mov
rorl
ljmp
movsb
cmp
pushf
outsl
jo
fiaddl
lods
icebp
ret
lcall
add
cmp
ja
jl
mov
adc
cs
adc
xchg
lahf
inc
lret
cmpsl
push
adcb
or
dec
mov
dec
in
cld
bound
xorb
data16
and
fbld
clc
fiadds
xchg
or
sbb
aaa
sbb
add
mov
shrl
mov
jmp
lret
push
sub
jmp
dec
sub
xchg
lret
and
adc
push
mov
int
clc
sub
fdivrl
loopne
fs
jge
mov
test
or
lahf
xchg
pop
adc
adcl
fistpl
pusha
ljmp
aam
xchg
lahf
adc
ret
xor
mov
cs
mov
lea
mov
fsubl
cmp
push
mov
cltd
clc
sbb
push
movl
movb
lea
jmp
mov
movl
push
mov
pushf
lea
jmp
push
call
addr16
testb
mov
lock
inc
sbb
mov
inc
add
fildl
sahf
bound
cmp
mov
inc
mov
push
and
add
aas
inc
ljmp
in
inc
jo
fldt
imul
in
or
std
in
jecxz
dec
add
pop
jp
loop
loop
fstps
jecxz
fidivrs
gs
ljmp
loop
sbb
stc
or
or
dec
or
movsb
scas
fwait
or
mov
or
push
stos
mov
sbb
lcall
add
xchg
mov
xor
lock
pop
mov
lcall
ret
pop
or
in
aad
lods
ss
inc
ret
pop
mov
dec
dec
int3
andb
stc
ret
rolb
xor
adc
jp
les
mov
test
xchg
add
out
in
pop
inc
mov
push
pop
enter
pop
cmp
mov
sbbl
mov
aaa
mov
daa
xor
cli
add
cmp
stos
ds
mov
sbb
cltd
hlt
jge
in
push
nop
pop
jge
test
iret
mov
aam
cli
push
or
pop
and
cwtl
cli
jmp
lock
mov
inc
fs
cltd
sub
cltd
outsb
lret
push
data16
fnstsw
ss
sub
push
ss
dec
jmp
dec
imul
sti
in
xchg
aad
leave
cld
cmp
pusha
and
shrb
movsl
sub
movsb
leave
xchg
test
xchg
jbe
xor
std
or
pop
or
stos
cmpsb
pop
shr
mov
mov
cmpsl
inc
icebp
and
xchg
cmpsl
xchg
sub
loop
or
pop
hlt
sub
jp
adc
addr16
rcll
jnp
outsb
lret
insl
leave
rorb
popf
mov
dec
push
lods
dec
out
mov
add
sub
pop
and
inc
sub
sahf
lcall
lret
xor
sbb
push
xor
cmp
jbe
cltd
cmc
fisttpll
out
mov
push
lods
pop
mov
adc
mov
inc
adc
addr16
xor
xchg
pop
repz
stos
mov
inc
scas
cltd
lock
sub
das
fimuls
test
jnp
je
cmp
adc
in
aas
mov
pop
mov
jns
jge
cltd
xchg
scas
mov
int3
dec
or
stc
movsl
push
inc
xor
mov
in
sub
mov
and
push
sub
cltd
xor
call
pushf
movl
call
or
jle
mov
mov
xchg
xchg
rol
std
push
add
xor
repnz
shlb
outsb
mov
les
stc
nop
or
sbb
aam
daa
and
in
sbb
pop
ret
inc
mov
imul
xchg
inc
lret
sbb
out
and
pop
push
arpl
cmp
and
mov
pop
mov
imul
daa
std
mov
andb
pop
jbe
cltd
mov
movsb
rcrb
es
clc
into
mov
xchg
adc
loope
les
mov
dec
pushf
jl
xchg
lret
mov
aad
jb
ret
outsl
pop
mov
cmp
lcall
push
mov
shrl
adc
lahf
cmpsb
clc
jmp
jmp
and
hlt
inc
cld
and
adc
mov
or
lea
hlt
popf
sub
pushl
sub
jb
push
sub
movsl
loop
lahf
sub
sbb
mov
dec
out
jecxz
jne
inc
rep
test
sahf
lds
jne
loope
ja
fimuls
ffreep
pop
adc
enter
cmp
and
pusha
inc
hlt
mov
fisubl
mov
pop
fisubs
push
xor
mov
inc
mov
sbbl
dec
sbb
in
cwtl
mov
aas
jle
shlb
mov
mov
xor
insb
add
lcall
test
jb
mov
dec
jle
pop
icebp
push
mov
lahf
lret
adc
shlb
in
mov
mov
cmc
and
das
add
sbbl
aaa
in
dec
inc
sahf
mov
xor
in
mov
lcall
shl
fmuls
leave
mov
add
stc
test
inc
fnstcw
rcll
pop
inc
sub
and
add
cmc
push
ds
test
sbb
jmp
pop
sbb
xchg
and
ja
or
push
lret
fstpl
les
push
add
mov
pop
fnstcw
cmp
mov
adc
or
xorl
sub
pop
or
adc
sub
xor
ja
cmp
xchg
mov
mov
pop
jbe
cmp
gs
jne
xor
fcoml
daa
arpl
pop
cmpsl
pushf
daa
mov
inc
xchg
pop
test
incb
adc
ret
out
loope
popf
icebp
hlt
xchg
or
inc
leave
adc
xchg
test
xor
fs
push
sbb
pop
leave
mov
inc
pop
mov
sub
mov
jl
dec
and
movsl
add
popa
pushf
daa
mov
dec
xor
shlb
and
std
inc
and
sub
outsl
cmpsl
jne
pop
repz
xchg
mov
outsb
enter
adcb
jecxz
shll
adc
pop
fsubrs
in
xchg
cmp
es
and
sarl
fcoms
pop
sarl
jb
push
dec
orl
inc
sar
push
movsl
and
movsl
out
filds
fdivs
cli
int
mov
fistpll
pop
out
ffreep
inc
loopne
xor
dec
adc
lcall
sub
out
push
xor
adc
jl
out
dec
pusha
stc
pop
pop
xchg
xor
cltd
icebp
das
sub
push
adc
shll
mov
push
sub
and
xor
inc
and
and
sub
loopne
stos
adc
adc
cmp
shll
es
jb
stos
test
repz
pop
pop
push
add
mov
jns
enter
bound
leave
xchg
out
mov
mov
xorb
cwtl
push
xchg
jae
idivl
add
flds
and
negb
clc
iret
divl
int
add
fucom
mov
mov
jp
jno
push
gs
mov
iret
arpl
lds
into
sub
sahf
ja
shll
cmpsb
mov
sbb
fcompl
dec
out
push
sbb
pop
cmpsb
lret
loopne
addr16
sub
loopne
ja
mov
jecxz
xchg
ss
sahf
roll
int3
push
addr16
loop
notb
pop
clc
int
fs
mov
movsb
ljmp
fistps
shlb
les
popa
sub
dec
lahf
push
fdiv
test
sub
cmp
fmuls
mov
into
ja
or
pop
push
out
xchg
hlt
lods
por
jle
into
ret
xchg
add
jle
fcomp
pop
mov
xor
invd
fcomps
test
mov
aaa
xor
lods
lcall
pop
or
fwait
sbb
mov
xorl
inc
push
pop
cmp
push
addr16
sbb
pop
mov
stos
adc
addb
pop
out
mov
das
mov
insb
ja
or
mov
push
push
icebp
xchg
inc
fdivrs
lds
in
push
mov
loopne
imul
and
push
inc
adcl
int3
lea
fldenv
imul
cmpsb
fcomps
jp
ljmp
pmaxub
cmp
mov
mov
lock
jmp
inc
int3
imul
jbe
fimuls
insb
fldl
mov
sub
push
mov
sbb
mov
jno
mov
xor
inc
das
mov
loop
or
shrl
push
jge
test
out
cmc
ss
repnz
aas
fs
stc
cwtd
adc
fistpll
test
sti
imul
sar
inc
push
jle
and
adc
cltd
mov
repnz
ds
repz
pop
adc
pusha
pop
notl
shll
pop
cmpsl
or
sti
and
roll
rclb
sbb
cwtl
nop
mov
xchg
or
jmp
out
sbb
lods
dec
sbb
sarb
aas
and
gs
scas
sbb
xchg
stc
ja
jp
cmp
repnz
mov
mov
adc
sbb
xchg
arpl
stos
push
js
mov
faddl
fcmovnbe
xchg
cmpsl
scas
das
mov
inc
add
cld
cltd
cmp
push
cld
pusha
aad
sbb
push
imul
inc
adc
inc
jle
add
scas
or
lock
fld
mov
jo
or
adc
sbb
mov
or
mov
push
and
cmpsb
inc
inc
or
outsl
cmp
pmulhuw
xor
hlt
arpl
shll
mov
mov
lods
int
mov
ret
cwtl
hlt
repnz
or
and
cmp
jne
jnp
adc
push
aaa
dec
push
push
fdiv
icebp
mov
dec
repz
xchg
loop
mov
adc
and
mov
cmp
lea
lods
gs
cmp
sub
orb
aas
jns
sub
les
testb
mov
je
inc
xchg
fistpll
inc
or
push
insl
into
sub
sbb
sub
adc
mov
dec
cltd
xchg
xor
xlat
mov
sbb
sub
add
jae
sub
mov
sub
repnz
mov
sbb
mov
mov
cwtl
daa
pop
adc
xchg
stos
aam
mov
jb
xchg
jp
pushw
jp
js
iret
add
in
into
es
repz
and
mov
pop
inc
negl
test
lahf
shrl
test
and
nop
jbe
pop
les
lea
sub
frstor
and
arpl
jl
dec
xor
shl
inc
cmpsb
mov
push
mull
and
push
adc
xor
dec
das
int3
inc
dec
lea
mov
cmpsb
pop
fistpl
jne
mov
and
dec
js
inc
push
call
mov
loop
mov
out
cmp
xchg
scas
mov
test
ficompl
out
call
jmp
mov
pop
mov
outsl
mov
add
mov
jge
xchg
pusha
mov
jno
mov
pop
cli
sbb
xchg
fcmovnbe
sub
daa
sbb
dec
cmc
scas
xor
mov
adc
jle
nop
dec
push
cli
cmp
pop
push
lret
xchg
aad
out
rorb
shr
cmp
imul
decl
lcall
gs
outsb
sbb
xchg
xchg
add
aam
stos
int3
sub
aad
sub
scas
mov
popa
mov
enter
fcoml
aas
jle
cmp
into
jl
repz
mov
sub
adc
sub
cltd
jmp
int3
icebp
repz
pop
stc
out
imul
shrl
sbb
sbb
ds
js
xor
jbe
push
or
fwait
pop
xlat
jl
mov
inc
iret
stc
ljmp
xor
addb
popa
xchg
and
pop
jo
test
cli
movl
dec
test
push
push
cmp
cmp
popa
jge
and
mov
push
loop
inc
gs
jae
addb
movsl
pop
mov
mov
xchg
jae
cmp
outsb
xchg
xchg
jb
and
fs
out
movsl
out
xor
movsl
rclb
jne
mov
xchg
mov
sub
bound
mov
or
xlat
inc
xchg
lcall
daa
js
xchg
repnz
jns
pop
shrb
or
pushl
movl
pusha
mov
pushf
pushf
lea
jmp
xor
cmp
test
stc
add
pushf
add
shrd
clc
cmc
movzbl
cmc
push
clc
xor
or
shld
ror
mov
cmp
cmc
cmp
rcl
xor
jmp
pushf
mov
movl
pushf
movl
push
pushf
lea
jmp
push
pushl
lea
jno
push
jne
pushf
movl
pushf
mov
movw
lea
jmp
call
mov
xadd
bt
pop
inc
mov
shl
not
and
jmp
cmp
repz
rorl
mov
mov
inc
push
test
and
pop
inc
add
es
cmp
bound
add
and
and
and
mov
popf
shlb
jecxz
pop
shlb
lahf
cmpsb
xor
dec
jnp
sub
repnz
jb
push
jne
xor
lcall
fnstcw
dec
rcll
sbb
pop
mov
lods
sub
mov
jns
sbb
out
mov
je
jb
inc
push
and
mov
call
push
gs
jmp
pop
lods
jecxz
loopne
xor
jl
inc
adcl
add
insl
xchg
pop
mov
ljmp
xor
add
loopne
stc
mulb
loop
mov
mov
mov
dec
mov
push
jg
inc
mov
xor
dec
mov
daa
loopne
movsl
mov
push
mov
jno
fstl
pop
stos
cmp
imul
rep
push
ljmp
inc
adc
outsb
pop
out
add
mov
iret
nop
pop
sub
sti
aam
and
mov
xlat
xor
xchg
jo
dec
jg
sub
inc
pop
add
mov
nop
in
lcall
lahf
jns
add
lahf
outsl
add
push
or
ror
mov
inc
push
je
push
mov
jb
sbb
int3
sbb
ja
jbe
je
sbb
addl
xchg
scas
xchg
ja
jge
movsl
mov
inc
int3
pop
int3
lods
pop
inc
sar
cmp
shr
and
inc
es
dec
and
mov
es
cmpsl
jp
cltd
ret
cmp
xor
mov
push
adc
call
jl
and
testl
dec
out
mov
cmp
sarl
incb
aad
icebp
dec
aam
push
rcr
sub
push
xchg
mov
lcall
daa
enter
or
mov
inc
sbb
adc
xchg
faddp
cli
lods
and
pop
sbb
in
sahf
push
repnz
sbb
xchg
push
outsb
leave
stos
js
push
inc
andl
in
or
pop
push
fsts
push
mov
pop
cmc
bound
clc
push
pop
mov
mov
pop
lret
insl
lret
mov
mov
inc
pop
push
je
push
push
and
push
das
mov
xor
add
ret
enter
lcall
add
xor
lods
out
inc
aas
loop
lcall
or
out
inc
sti
fdivrl
adc
movsl
push
xchg
xor
ds
inc
aas
or
jae
adc
or
bound
lods
aam
xor
xor
shll
stos
cs
mov
int3
or
jecxz
xor
lcall
outsl
in
or
mov
aaa
xchg
pop
xor
jmp
shr
push
mov
add
pushf
bt
push
cmp
and
pusha
test
jmp
add
cmc
movb
cmc
jmp
pusha
movl
pushf
pusha
movl
pushl
movb
lea
jmp
call
sub
je
pusha
add
cmc
clc
mov
bt
clc
call
push
pushf
push
push
lea
jmp
push
push
pushl
movl
movl
movl
pusha
lea
jmp
test
btr
movsbw
movzbl
test
shr
or
shrd
shrd
pusha
mov
rcr
pushf
and
btc
mov
sub
test
bsr
shrd
shr
shrd
dec
jmp
mov
mov
inc
aam
mov
add
cld
pop
imul
sbb
js
insl
or
or
pop
or
adc
cli
xchg
xor
mov
jmp
pushf
pusha
pushf
mov
movl
pushf
jmp
shll
adc
pop
repnz
pop
imull
dec
outsl
aad
movsl
lcall
push
stos
ret
xor
pop
pop
ret
adc
fs
in
cmpsb
incb
addr16
xchg
lea
cwtl
jae
loopne
xchg
cmp
cmp
lea
lahf
leave
cmp
pop
cmp
cmc
ja
add
stc
pop
pop
inc
clc
clc
cmp
or
jo
push
xor
stc
mov
mov
pop
ja
outsb
fnsave
mov
mov
mov
aas
mov
lret
stc
ds
xor
outsl
mov
arpl
add
test
push
xchg
popa
sarl
loop
loopne
mov
xlat
xchg
test
js
inc
inc
hlt
iret
ja
mov
cmpsb
test
fwait
xor
shll
in
ljmp
cmp
lea
inc
fdivrl
inc
hlt
iret
dec
popf
test
jmp
les
mov
aam
push
xor
xor
dec
mov
inc
incl
cmp
outsl
scas
push
adc
jecxz
pop
call
lret
sbb
push
xor
movsb
add
gs
sbb
sub
mov
sub
ret
into
cmp
das
jo
dec
je
sub
movsl
in
pop
hlt
xlat
mov
or
or
cmp
xchg
lods
pop
dec
das
les
inc
es
mov
ficompl
mov
jge
shl
fldt
sub
xchg
fstpt
add
shll
sub
mov
inc
adc
pop
push
js
test
adc
mov
push
push
xlat
inc
stos
jbe
call
sarl
arpl
inc
arpl
arpl
sbb
mov
pushw
ja
inc
and
in
inc
jne
ja
insb
data16
mov
add
stos
pop
loopne
aas
mov
fs
fildl
inc
inc
and
or
pushf
pushf
lea
jmp
fcoms
xorl
loop
jnp
test
sbb
xlat
sub
xchg
sbb
or
jge
xor
push
sbb
sub
jnp
dec
push
inc
sti
pop
xor
call
jle
cpuid
les
mov
xor
pop
sbb
cs
cmp
bound
and
sub
jne
aaa
outsl
or
or
adc
or
sti
bound
cli
mov
add
fidivrs
sbb
ja
and
cld
add
ja
pusha
jns
add
mov
ljmp
jg
lds
cmp
push
fs
xor
pop
xor
in
inc
pop
out
lds
into
imul
adc
std
daa
icebp
adc
fistl
push
mov
push
aam
sub
mov
stos
inc
jmp
ss
add
out
fimull
lret
pusha
shr
push
adc
iret
lds
sbb
push
pop
sbb
mov
push
mov
push
push
xor
test
or
mov
add
loopne
push
sub
jns
jnp
xchg
sbb
and
sub
cltd
loope
mov
cmp
scas
cmp
aad
inc
lds
cltd
loope
mov
jnp
mov
xchg
xchg
popf
lods
sti
jmp
cmp
lock
xor
dec
decl
frstor
int
pop
mov
in
pushf
mov
aam
pushl
shlb
push
pop
mov
imul
cmp
fimull
xor
add
dec
loope
mov
pop
ret
mov
xor
faddl
jns
jp
pop
test
int
stc
imul
add
movl
push
lea
jmp
pushf
pusha
movl
pushf
movl
push
pushf
mov
lea
jmp
mov
cmp
sub
shr
shl
lea
bt
mov
bsr
rcr
shrd
btr
mov
bt
mov
call
xchg
stos
cmp
sub
mov
push
ror
inc
pop
inc
push
lods
mov
sbb
cmp
pop
fdivs
fwait
cltd
inc
cwtl
addl
cs
push
call
sbbb
xor
jg
pop
sub
cli
mov
test
and
sahf
shr
insl
sbb
jns
inc
mov
inc
add
cmc
xchg
testl
insl
mov
and
jb
jno
jmp
push
aaa
pop
adc
scas
mov
sti
scas
aam
pop
mov
int
pop
aam
fsin
in
xchg
sbb
test
je
jge
pop
testl
mov
stos
cwtl
mov
or
push
pop
fsubrl
les
mov
push
xchg
dec
insb
insb
push
in
scas
inc
rol
jbe
mov
inc
sahf
mov
jmp
mov
pop
fiadds
leave
shll
incb
adc
push
dec
fstps
mov
enter
or
mov
cmc
xor
cmc
imul
les
jno
sbb
push
fstpt
fdivr
cltd
pop
mov
push
xchg
xor
sbb
ficomps
sub
daa
int
shll
jle
dec
add
loopne
cmp
xor
arpl
xchg
xor
push
xchg
mov
hlt
mov
outsl
lock
call
call
imul
add
das
mov
test
sbb
xchg
ljmp
mov
fisttpll
cmpsb
pop
shl
pop
scas
fsts
dec
pop
subb
orl
test
jle
lret
inc
jno
into
lret
xchg
ror
lea
xchg
jmp
dec
xchg
xchg
mov
xchg
push
jo
adc
std
xchg
mov
push
dec
stos
cmp
outsb
das
bound
sar
test
jle
cmp
adc
adcl
mov
add
pop
mov
push
xlat
mov
xchg
pop
adc
fmuls
push
sub
jl
or
xor
add
stos
jle
cwtl
pop
xor
out
pusha
add
popf
stc
push
xor
add
add
pop
ss
add
fdivrl
cwtl
movsb
mov
jl
shlb
sti
mov
stos
test
mov
xchg
jmp
push
jmp
orb
nop
cmp
rcrl
xchg
in
dec
xchg
jae
stos
stos
add
sub
test
adcb
pushw
or
addb
sub
mov
mov
fwait
cmp
push
adc
push
shl
lods
out
shlb
mov
in
movsl
sarb
add
cwtl
mov
xor
mov
xor
std
pop
jge
sbb
fwait
adc
xchg
or
and
xor
push
fst
adc
pop
outsb
orl
xchg
jae
fucomip
enter
and
sahf
and
lahf
imul
cmp
negl
push
aam
imul
add
dec
mov
clc
lds
sub
fmul
sub
ljmp
push
cmp
and
xor
inc
dec
mov
lahf
fwait
cmpl
xor
fisubl
mov
fdivl
xor
enter
dec
sub
inc
ret
and
cmp
loop
push
outsb
and
mov
lock
mov
fnstenv
cltd
fsubrl
dec
mov
push
lcall
xor
subb
or
sbb
shrl
stos
imul
es
push
cmp
ja
lock
out
push
iret
fcompp
mov
mull
shlb
or
jae
test
js
mov
inc
les
fiaddl
pop
xor
repnz
jl
outsl
sbb
sbb
jnp
dec
jmp
dec
xchg
retw
fisubs
repz
xor
sub
push
cmp
inc
xchg
xchg
test
sbb
or
adc
dec
or
outsl
xor
cmpsb
sub
nop
push
hlt
jp
cltd
fisttpl
cmpsl
xchg
sbb
mov
xchg
scas
sub
dec
mov
bt
mov
cmp
jmp
leave
add
add
popf
xchg
mov
and
adc
or
xchg
cmp
xor
push
mov
sub
xchg
shlb
cli
je
pop
out
sub
call
sbb
adc
scas
pop
add
jecxz
mov
popf
pop
mov
shlb
testb
subl
aas
sub
inc
ret
sbb
push
xchg
xor
push
loopne
sub
adcb
and
inc
aam
sub
lea
adc
cli
sub
adc
mov
push
pop
iret
cltd
add
and
bound
fdiv
push
loope
xchg
push
mov
inc
mov
imul
jge
sub
xchg
nop
mov
shll
jge
mov
imul
mov
xor
data16
mov
jmp
mov
fdecstp
aad
imul
in
inc
mov
inc
bound
shll
fcmove
and
fidivl
xor
gs
jge
stos
push
mov
xor
cld
cld
outsl
cmp
lret
push
mov
cld
add
fbld
aaa
js
or
cltd
fimull
imul
movsb
sub
mov
cltd
xor
insb
out
popf
xor
mov
or
pop
adc
pusha
push
imul
sti
dec
std
add
pushf
sbb
mov
arpl
mov
gs
ja
mov
add
je
lea
and
hlt
clc
push
int3
in
push
mov
dec
ret
je
and
mov
mov
pop
outsb
rcrb
pop
rcrb
dec
pop
in
fsubrp
inc
lods
enter
mov
es
in
enter
mov
mov
ss
frstor
pop
pop
sti
fwait
mov
cmp
out
push
imul
add
xchg
mov
lcall
pop
or
cmp
add
inc
push
sbb
add
rcrb
sti
push
test
push
adc
popf
call
test
shr
sub
push
mov
pop
xor
or
popf
jns
sbb
xor
jne
and
sti
lcall
or
xor
xor
xchg
int3
stos
adc
mov
mov
xchg
xor
mov
adc
int3
clc
mov
int3
stos
adc
cli
addr16
lods
les
push
gs
jnp
add
inc
xchg
mov
int3
loop
bswap
loope
lcall
nop
out
pop
repnz
jmp
test
xlat
inc
mov
mov
fs
pop
test
adc
push
lret
mov
push
stc
int3
add
fcmovnb
ss
and
jg
lea
jl
addr16
lods
stos
repz
outsl
addps
stos
push
xchg
cld
push
outsb
in
add
lods
xor
std
mov
add
movsl
ficompl
or
fmul
movsb
jne
jae
loope
cltd
fmuls
out
mov
jmp
stc
and
xorb
or
mov
or
loop
lcall
fidivrs
cmpsb
add
mov
jae
pop
xlat
dec
mov
ret
xchg
out
loopne
pushf
jo
bound
sub
sbb
imul
nop
ss
not
aam
int
xchg
push
mov
pushl
push
aaa
push
cmp
cli
sbb
aam
imul
cmp
inc
bound
mov
sub
push
test
and
aam
in
leave
arpl
mov
rcrb
sbb
add
jns
daa
inc
mov
in
icebp
dec
xchg
test
mov
cli
xchg
aam
lret
xchg
idivl
pop
pop
mov
jecxz
pop
ljmp
sbb
xor
cld
push
in
add
push
out
adc
mov
lea
mov
dec
pop
xchg
inc
jnp
sbbb
push
pop
pop
jg
cmpsl
ja
lcall
inc
ret
pop
outsl
lods
and
jns
out
and
out
loope
loop
cmp
mov
pop
xchg
pusha
sbb
and
sub
out
pop
cmpsl
stos
add
add
data16
dec
or
xchg
loop
sar
lods
fdiv
xchg
test
adc
mov
idivb
aas
sbb
aas
shr
aas
lret
in
loope
fcomp
mov
sahf
sub
imul
lods
mov
mov
sub
cmp
sub
sub
xor
int
mov
jb
imul
pop
cmp
mov
inc
scas
fwait
in
sbb
push
mov
pop
mov
pop
es
push
sub
pop
jmp
bound
pop
cmp
mov
lcall
jecxz
cmp
xchg
loope
or
push
shll
pop
pop
dec
xor
cmp
sub
mov
popf
push
or
xlat
mov
push
mov
cmp
xchg
sarl
cmpsl
mov
inc
js
mov
jnp
jne
popa
push
sbb
sub
test
pushf
push
and
adc
std
push
push
fstp
push
cmp
fs
jl
cmpl
push
sub
in
mov
ret
cs
movsb
les
rol
push
or
outsb
or
pop
add
cs
pusha
pop
in
push
scas
iret
jmp
dec
movsb
ror
add
jnp
shlb
sbb
jle
or
rcll
int3
es
loop
test
add
out
enter
cmpsb
rclb
jl
inc
dec
mov
xchg
xchg
sub
int
test
scas
push
jmp
jmp
push
out
mov
xor
les
dec
mov
pop
mov
and
push
push
jae
mov
popw
cmp
push
add
xor
fisttps
ret
das
ja
mov
int
xor
popf
push
aam
adc
fucom
into
pop
outsb
in
push
mov
fiadds
mov
mov
inc
les
repnz
popl
jne
inc
daa
push
mov
cmp
out
pop
arpl
mov
push
int3
pop
cld
push
cmpsb
in
push
mov
cmp
jb
out
enter
xor
pop
scas
bound
mov
loopne
mov
cmp
icebp
bound
mov
je
pop
fcompp
ficompl
mov
sarb
popf
add
push
je
js
mov
jl
sbb
mov
loope
mov
dec
pavgb
or
out
arpl
mov
jns
add
ljmp
push
jl
stc
cli
push
lods
xchg
fs
rclb
jle
dec
adc
mov
scas
imul
inc
inc
sbb
adc
fistps
jecxz
cld
int
jge
sahf
rorb
mov
or
add
popa
pop
or
mov
push
push
aas
xor
mov
sbb
inc
push
jo
adc
ss
iret
xchg
sbb
mov
jne
push
repz
xor
rep
pushf
push
cli
fnstenv
push
jmp
mov
xchg
and
sub
aam
jnp
out
out
sbb
lcall
aaa
gs
push
sub
pop
bnd
xchg
sti
iret
loope
xor
sbb
dec
negb
sahf
inc
lods
in
push
xor
les
adc
je
imul
push
sub
roll
aad
jbe
scas
sub
repz
cltd
rcrb
adc
adc
subb
xor
fwait
pop
mov
adc
or
xor
xor
out
push
xchg
mov
xor
mov
fsts
fs
jnp
sub
aas
call
xor
in
jbe
lods
loopne
enter
cmp
loopne
test
and
mov
mov
test
sub
shrl
outsb
pop
inc
push
pop
negl
repz
jae
ljmp
sub
sti
and
incb
sar
arpl
sbb
push
add
xchg
adc
lock
gs
sub
sbb
test
das
js
test
cmpsb
sbb
mov
add
repnz
add
orb
push
jle
push
ret
sbbb
aaa
jle
into
jno
jno
inc
lods
inc
add
out
adc
inc
inc
lret
std
sub
mov
je
clc
push
data16
rcr
call
adc
je
sub
int
xchg
sti
adc
shll
cmp
ss
xorb
sarb
sub
loop
add
jo
push
mov
movl
pusha
jmp
pusha
mov
push
mov
pushf
pushf
cmc
call
xor
dec
xchg
dec
or
pusha
jbe
pushf
sub
sub
shrb
stc
push
xchg
pop
push
out
mov
cmp
out
outsl
scas
cwtl
hlt
mov
pop
sbb
push
mov
hlt
jecxz
push
or
inc
sub
inc
push
hlt
ljmp
push
jmp
repnz
hlt
fwait
pop
dec
mov
sbb
or
call
lds
mov
in
out
or
lret
out
jne
int
lea
inc
fnstenv
js
leave
mov
call
push
mov
dec
add
sub
or
and
adc
mov
call
jmp
stos
mov
js
cwtl
mov
into
dec
int
jecxz
sbb
dec
jo
in
pop
inc
mov
xchg
pop
shll
push
push
inc
mov
push
push
sub
adcb
ljmp
gs
es
leave
pop
dec
push
shrb
sub
lods
bound
jo
jg
cmp
shll
xor
pop
ret
dec
cmp
dec
es
sarb
test
imul
dec
ret
jns
iret
test
dec
sahf
sub
sub
adc
cmpsb
push
ja
inc
arpl
jns
lret
jae
or
lods
adc
cmp
cmp
js
fbld
xor
mov
and
adc
gs
xchg
inc
mov
push
sbb
mov
into
sbb
popa
sahf
imul
fstps
dec
outsb
inc
ljmp
ljmp
xor
and
xor
jns
inc
mov
pcmpeqw
mov
fcomi
cli
mov
sub
sbb
jle
xor
jmp
xchg
xchg
mov
push
pushf
mov
jmp
call
xor
fidivl
pop
mov
scas
aad
xchg
imul
mov
cli
xor
and
pop
push
mov
in
rclb
stc
dec
cltd
inc
add
sahf
jns
inc
push
stc
inc
cmpsl
bound
sti
out
loop
repz
pop
mov
push
xor
jbe
aad
lods
pushf
sub
jecxz
xchg
pop
repnz
hlt
lcall
insl
sub
jmp
int3
in
dec
test
pushf
pop
push
daa
dec
pushf
test
lea
insb
xor
sub
add
stos
dec
mov
mov
aas
lret
fiaddl
dec
mov
mov
pop
xor
aaa
mov
inc
inc
shrb
incb
bound
pop
xchg
add
add
in
sub
cwtl
xor
jecxz
shrl
push
sub
xor
push
daa
std
cmpsb
add
lcall
cmc
aas
push
pusha
sbbl
sbb
xlat
cmp
sbb
inc
loope
test
sbb
cltd
into
jmp
dec
movl
pushf
mov
movl
movb
pushl
pusha
lea
jmp
movl
mov
pusha
pushf
lea
jmp
subl
inc
sahf
add
cmp
mov
adc
push
lds
add
push
leave
jecxz
int
xor
pushf
push
dec
mov
icebp
add
mov
inc
inc
outsb
imul
mov
or
pop
jl
inc
sahf
std
mov
mov
inc
xchg
xchg
xchg
pop
or
jb
aad
fldenv
and
fcmovnb
pusha
push
mov
divl
hlt
andb
iret
test
push
enter
notl
mov
outsb
sub
sub
psadbw
xchg
cmpsb
jecxz
adc
bound
enter
sbb
sti
repz
fldcw
inc
inc
es
push
insl
push
jl
call
rcrb
fisubs
decl
dec
fnstcw
lods
pop
adc
loop
shlb
aaa
sbb
mov
clc
push
adc
pushf
insl
xor
pop
cli
fwait
in
addr16
pop
jno
pushf
push
jecxz
pop
add
mov
cmp
pop
sub
stos
or
sbb
mov
je
xorl
sti
ret
lea
popa
add
push
push
hlt
push
pusha
ret
xchg
ds
shrb
or
imul
mov
fstpl
stos
sti
int
mov
ja
loopne
mov
inc
sub
cmp
cmp
mov
mov
call
sbbb
insb
inc
pop
mov
push
sahf
xlat
mov
ror
mov
popf
mov
pop
push
enter
aad
test
adc
pop
add
ret
loop
shll
cmp
stc
adc
cmp
sbb
out
pop
push
xchg
mov
imul
dec
jmp
adc
push
pusha
test
cmp
int
loop
filds
sahf
inc
arpl
jne
inc
scas
xor
sub
or
sarl
dec
das
fs
sahf
lods
xchg
repnz
cmp
xchg
mov
pop
pop
loope
mov
jbe
loop
sbb
cli
fsts
shll
stos
das
mov
inc
cld
and
and
cmp
scas
mov
cmp
cmp
cmp
int3
lahf
lods
mov
inc
push
icebp
push
repz
ja
xchg
jbe
inc
mov
scas
in
lds
cwtl
jl
ret
outsb
inc
roll
frstor
xor
sti
xchg
je
mov
add
popa
sbb
stc
rclb
sub
xchg
inc
adc
or
pop
out
mov
cmc
mov
adc
cmpsl
into
imul
mov
xchg
adc
es
in
pop
xchg
out
aaa
adc
loop
enter
daa
dec
add
cs
adc
adc
dec
inc
jae
dec
pusha
pop
neg
js
dec
cmpsb
add
dec
je
dec
dec
lea
je
leave
out
pushl
jae
cld
push
dec
adc
movsb
mov
push
pushf
push
movsb
fnstcw
mov
or
stos
or
dec
add
test
jge
fwait
push
push
pusha
fistl
std
mov
push
adc
push
mov
pushf
bound
repz
js
out
popa
xor
cmp
pop
adc
insl
fbld
push
test
jge
cld
push
clc
cmpsl
push
cs
jle
push
cmpb
lcall
insl
pop
lret
mov
movsl
or
xor
movl
pusha
pushf
pushl
lea
jmp
call
shl
and
jmp
pushf
movl
pusha
movl
pusha
pushf
pushf
mov
lea
jmp
jmp
pusha
push
movl
jmp
push
movl
call
lret
outsb
shrb
xor
cmp
add
imull
push
mov
push
bound
push
inc
or
js
cmp
add
push
push
rcr
out
cmc
jmp
push
rorl
frstor
fs
int
inc
inc
sbb
mov
rolb
or
fdivrs
arpl
inc
push
aaa
push
sbb
pusha
mov
mov
sub
aam
outsb
out
cwtl
test
inc
ja
xchg
stc
gs
enter
cmp
jno
inc
or
jnp
imulb
push
pop
mov
mov
xchg
arpl
lock
sbb
jo
ljmp
xor
push
add
adc
fwait
ret
inc
scas
iret
or
push
outsl
int
xchg
and
jg
idivl
and
xlat
mov
pop
fwait
xor
inc
xchg
aad
xchg
popf
dec
push
pop
js
stc
mov
jp
and
jno
shll
inc
repz
adcb
int3
std
adc
scas
sbb
xor
pusha
pusha
movl
jmp
call
movl
jmp
mov
jmp
mov
jmp
mov
stc
cmp
pushf
cmp
shr
push
cmp
mov
clc
mov
sbb
ror
mov
cmc
clc
push
jmp
jmp
pusha
mov
bsr
lea
xchg
ror
lea
jbe
clc
mov
cmp
or
shr
push
add
shl
seta
shr
btr
sub
rcr
mov
neg
add
push
mov
bswap
shr
pop
add
sub
bts
not
and
bsr
test
test
mov
or
cmc
shr
shr
movzbw
add
btc
jmp
movzbw
sub
jae
ror
or
movsbl
movzbl
sar
adc
inc
mov
shl
ror
mov
rcr
jmp
js
imul
cld
jecxz
cmpsl
setge
mov
xchg
cld
and
gs
movsl
xor
push
mov
dec
add
loopne
mov
cld
aad
das
scas
adc
adc
inc
cld
and
push
iret
cld
jae
add
incl
int
addr16
inc
dec
adc
repz
sbb
xchg
lret
in
push
mulb
cmp
or
sbb
mov
andb
sbbb
mov
fnstcw
dec
pop
xchg
stc
fcomi
shr
ficomps
mov
push
repz
push
sbb
push
lds
jmp
scas
xor
setp
push
mov
call
sub
stc
mov
pusha
mov
pushf
test
bt
test
call
mov
jmp
pushf
movl
pusha
movl
pusha
movl
push
lea
jmp
xadd
mov
stc
bsf
bsr
add
seta
movsbl
neg
shld
mov
xor
sete
setno
shl
bsf
lea
mov
pusha
movzbl
mov
and
mov
shr
cmp
xor
mov
mov
sbb
inc
mov
lea
shr
btc
xor
add
call
cmp
iret
xor
xor
mov
mov
popf
mov
rcll
lock
xor
imul
test
xor
inc
mov
cmp
mov
pop
outsl
jl
fsts
or
mov
xchg
add
cld
cmp
dec
popa
or
sub
popa
push
dec
scas
aas
xor
lret
jno
out
lods
int
jo
dec
or
mov
in
jecxz
adc
negl
xor
sbb
jmp
mov
daa
sbb
ja
cli
cmp
lret
inc
insl
dec
adc
jecxz
js
xor
mov
sbb
push
scas
in
jle
mov
mov
or
adc
add
pop
push
add
lds
xchg
xor
leave
mov
rcrl
xchg
jge
fbld
sti
cli
imul
pop
xchg
ja
xchg
rclb
pop
and
inc
es
fnsave
pop
jne
add
fdivl
xchg
inc
ret
push
add
mov
push
test
repz
addl
pop
test
lods
inc
xchg
aas
sbb
push
cmc
jns
test
std
scas
int3
call
fs
movsb
lret
push
out
jp
cmp
cmp
pop
sub
cmp
sbb
xchg
lea
pop
cmpsl
or
cmc
inc
xchg
fisttpll
shl
lods
cld
lret
dec
xchg
movb
cmp
repz
push
lret
add
jo
and
out
add
dec
pop
test
fs
inc
pop
mov
dec
adc
jbe
jo
mov
jns
mov
xchg
cmp
cmpsb
mov
jno,pt
mov
cld
pop
dec
lretw
leave
xchg
int
xchg
int3
sbb
call
or
mov
jnp
dec
push
mov
dec
lcall
cmp
lea
loopne
movsb
push
add
or
orb
cmp
push
dec
jge
push
and
cmp
push
pop
mov
sahf
lcall
sub
int
lods
xchg
test
lds
xor
dec
mov
cmpsl
push
jns
mov
xor
call
aas
movsl
jecxz
push
mov
push
and
dec
mov
push
add
aas
ljmp
scas
or
ficoms
jne
icebp
dec
or
and
in
xchg
mov
andl
dec
repnz
es
adc
cmp
sub
hlt
jecxz
jmp
je
sub
pop
ds
xor
fs
pop
aas
stos
mov
test
add
fidivrs
xor
sub
mov
lods
xchg
mov
mov
dec
xchg
adcb
sti
inc
and
sbb
cmpsl
fbstp
out
xor
mov
pop
shr
sarl
adc
cltd
in
jp
fistpll
pop
test
imul
lcall
in
sub
adc
lcall
and
or
clc
cs
loop
mov
and
or
stos
outsl
xchg
sbb
add
cmp
jp
lds
or
js
adc
jmp
lcall
mov
nop
std
jbe
fwait
push
inc
mov
shr
cli
and
daa
xchg
push
pop
int3
mov
xchg
pop
decl
fs
repz
test
push
shrb
mov
pop
jae
mov
mov
xchg
xchg
xchg
inc
lea
ljmp
xchg
cmc
mov
jb
movsb
inc
and
sub
test
lea
ss
movsl
lea
movsb
dec
and
iret
imul
mov
call
sbb
xor
addl
mov
dec
push
fildll
icebp
lock
into
int3
or
sub
add
stos
jle
imul
mov
mov
lahf
inc
divl
cltd
ret
lock
mov
movw
pushl
movl
pusha
jmp
jb
push
data16
test
add
enter
mov
or
rcrl
loope
and
mov
movsl
cmp
fldl2t
lahf
sub
cwtl
ljmp
fldl
lods
mov
sub
pop
psraw
call
orps
sbb
jae
sub
adc
cltd
shll
push
jns
or
xlat
dec
pop
pop
cmp
sub
mov
testl
movsl
int3
sub
add
push
dec
pushf
xor
lcall
dec
mov
frstor
jbe
call
scas
mov
enter
repnz
xor
aad
enter
repz
fadd
and
hlt
and
call
cltd
rcll
mov
push
xchg
imul
cltd
roll
pop
jmp
movl
pushf
call
movzbw
pusha
mov
lea
movsbl
lea
jg
mov
call
jmp
push
movl
jne
pushf
pusha
push
movl
push
movb
mov
pushf
lea
jmp
movl
pushl
pusha
movl
pushf
mov
push
lea
jmp
pushf
movl
lea
jno
push
mov
push
movl
pusha
push
lea
jmp
pushf
mov
pushf
movl
movb
call
movl
pusha
push
movw
movw
lea
jmp
neg
add
bsr
movzwl
xchg
cmp
bsr
not
movzbl
setg
or
inc
cmc
mov
bsr
not
bt
pusha
shl
bt
pushf
or
bsr
xor
ror
jmp
int
je
dec
and
xor
jns
fptan
lcall
xor
fildll
add
push
std
mov
test
jne
js
jno
cmpb
add
mov
push
lock
push
vpmacswd
inc
xchg
roll
or
lds
lret
fcompl
lahf
push
sub
xchg
cmpsl
int
jbe
mov
or
repnz
arpl
push
rorb
dec
add
inc
push
aas
imul
stos
test
lock
ljmp
pop
dec
lods
push
jp
push
sahf
cmc
fisubrs
hlt
test
mov
mov
shll
stc
rcl
pop
js
adc
xlat
clc
ds
cs
mov
lret
aam
adc
push
cltd
mov
or
cld
dec
jmp
pop
jmp
cli
out
jnp
bound
int
lret
insl
stc
test
cmpsb
add
xor
wbinvd
or
data16
xor
adc
imul
mov
sti
adc
or
and
pop
jp
jle
xchg
insl
pop
ja
mov
scas
jno
out
fildl
jno
pop
pop
mov
dec
pop
popa
movsl
push
stos
xchg
dec
mov
mov
ret
sbb
gs
decl
pusha
shrl
xor
xor
cmp
into
int
mov
jecxz
adc
cltd
mov
cmp
sbb
jo
cmc
and
arpl
mov
xor
xor
xor
xor
pop
idivl
mov
incb
mov
xchg
jbe
mov
or
test
imulb
xor
pop
cmp
sbb
jmp
cltd
mov
aam
sbb
mov
cmpsl
xor
mov
mov
in
inc
lock
jno
lods
dec
andl
cwtl
cmp
pop
xchg
jge
xor
dec
jle
cmc
fcmovnbe
mov
js
int3
lret
cwtl
lcall
mov
jb
int
pop
in
sbb
adc
cmp
push
les
xor
icebp
frstor
sub
lock
sub
gs
xor
cltd
mov
add
bt
pushl
clc
and
stc
cmp
clc
stc
add
pusha
shl
add
adc
inc
xor
shl
add
bsr
sar
shld
cmc
movzbw
neg
cwtl
movzbw
xor
shl
aaa
or
movzwl
movsbw
rdtsc
shr
mov
ror
dec
pushf
shr
dec
lea
add
sub
mov
rcl
bswap
and
aad
btr
mov
jmp
mov
pusha
lea
call
call
push
mov
movl
push
movb
jmp
jmp
setle
call
xor
cmc
adc
cmc
movzbw
add
neg
add
movzbw
aad
shl
shrd
btr
movzwl
btc
mov
lea
pop
cmc
shr
aad
call
call
adc
pop
sbbl
add
mov
cmp
sub
push
fnstcw
lret
test
mov
pop
xlat
ja
movsl
or
dec
ds
push
pop
or
in
xchg
push
es
hlt
imul
aad
add
cmpsb
addr16
repz
lea
xchg
pop
cmp
ds
cmp
cld
cmp
fcoms
add
push
adc
push
mov
jb
push
shl
xor
add
jp
or
mov
jg
push
or
cltd
mov
movsb
add
and
fdivrs
rcll
testb
outsb
leave
das
sub
shl
mov
xchg
xchg
jo
push
movsl
js
faddl
xor
xor
lret
and
fprem1
js
loopne
mov
iret
pop
jg
jns
push
lretw
ds
in
aaa
sbb
pop
lods
lds
mov
mov
push
xor
ds
or
into
mov
pusha
or
push
mov
pop
frstor
shl
push
shrw
xor
inc
adc
clc
pop
and
jno
xchg
jg
sbb
mov
leave
fcoml
mov
das
movsl
into
data16
cmpsl
je
mov
cltd
add
cmp
inc
std
push
mov
xchg
pop
aas
cmpsb
push
std
lcall
testb
pop
ljmp
inc
push
push
and
ljmp
sbb
sahf
stos
hlt
jae
lods
mov
sbb
mov
and
and
cltd
mov
jp
add
pop
fistpl
lret
adc
jle
insl
mov
cltd
mov
jno
out
pop
mov
out
call
mov
scas
or
cmp
mov
add
push
pop
xchg
lret
add
push
inc
xor
pusha
dec
sub
jmp
lock
mov
adc
jo
lcall
adc
mov
inc
scas
adc
cmp
inc
test
pop
jg
jle
jnp
and
cltd
mov
jnp
std
lcall
xchg
je
adc
aas
inc
dec
loope
out
add
mov
xor
add
daa
shrl
cli
mov
out
inc
dec
iret
xor
push
pop
inc
arpl
bndldx
jbe
cltd
mov
das
cmpsl
add
jmp
movl
pushf
movl
pusha
pushf
pushl
lea
jmp
jmp
jmp
jmp
sub
btc
mov
cmc
dec
add
or
mov
xor
sbb
inc
ror
lea
bt
shr
jmp
fstps
sbb
dec
idivl
mov
sub
push
aaa
mov
gs
in
or
bound
and
sahf
push
pop
icebp
dec
sub
inc
lea
sub
dec
cmpsb
jle
sub
bound
arpl
jns
mov
je
cs
iret
out
into
inc
mov
and
rol
mov
pushf
or
movsb
out
xor
nop
lcall
ret
sbb
xlat
nop
out
push
ds
pop
xchg
inc
mov
adc
scas
movsl
stc
mov
insb
cmpsb
dec
jb
andb
sbb
and
inc
outsl
dec
add
nop
cmpsb
pop
adc
jmp
loop
shrl
cmovno
std
ret
push
mov
pop
and
mov
das
test
push
stc
test
add
imull
in
xor
xor
fnstsw
push
xchg
pop
inc
sbb
mov
pop
dec
ja
jp
test
and
add
js
pop
sti
repz
adc
addl
sub
cmp
pop
imul
or
jg
jp
in
into
xbegin
sbb
aaa
dec
inc
pusha
sarl
shlb
stc
xor
cmpsl
test
inc
jns
movsl
sub
sbb
mov
iret
dec
pop
adc
scas
out
cmp
cs
int
into
adc
add
xchg
push
shll
add
sbb
in
and
and
jg
xchg
xor
inc
cld
add
aas
jo
mov
xor
movsl
int
jne
dec
ljmp
into
mov
scas
aas
cmp
jno
add
mov
loop
cmp
jg
out
inc
adc
mov
roll
aas
mov
and
or
push
pusha
pushf
lea
jmp
popaw
pusha
inc
in
push
sbb
repz
shrb
flds
in
sbb
mov
addl
test
shrl
push
mov
mov
adc
xchg
ja
addl
push
sbb
or
lods
mov
call
aaa
xchg
ficomps
out
or
es
pop
aas
popf
dec
imul
sbb
arpl
icebp
and
in
dec
push
adc
sahf
dec
cmpsb
inc
jbe
out
ljmp
insb
shlb
aaa
stos
dec
leave
insl
mov
or
pop
push
sub
sti
into
mov
pop
int3
jb
mov
sub
pop
mov
jbe
fnsave
into
mov
add
pop
dec
jb
aas
shl
inc
packuswb
xor
xchg
mov
inc
rolb
mov
aam
into
hlt
lock
mov
inc
in
lcall
mov
push
push
pop
sahf
adc
cmp
sbb
pop
mov
scas
cmpsl
lahf
test
mov
adc
mov
cmovo
jbe
add
mov
fcoml
lcall
aas
sbb
cs
jbe
mov
je
mov
movsl
test
into
fs
scas
arpl
outsl
jns
adc
fisttpll
pushaw
pop
jns
stos
push
dec
das
lock
mulb
xor
pop
iret
add
stos
popf
xor
test
popf
add
fiadds
shll
lods
data16
push
in
outsl
xor
mov
cli
ljmp
mov
jbe
jae
add
jb
insl
mov
adc
adc
incl
adc
aam
aas
sub
sbb
repnz
aas
jge
repnz
cmp
mov
adc
scas
rcrb
xchg
push
and
adcl
sbb
lcall
cwtl
xchg
jb
mov
sub
push
mov
jl
adc
mov
cmpsl
inc
pushl
push
jns
aad
loopne
in
jbe
inc
push
jp
shr
and
insl
ret
inc
outsl
xor
sahf
jmp
dec
push
lock
cmc
fcmovnb
xor
test
pusha
dec
loopne
addb
pop
cld
in
test
fsubl
sub
pop
addr16
adcb
lds
mov
pop
push
aad
int
xchg
pop
dec
mov
movsb
in
enterw
mov
cmp
cltd
lret
push
and
cmpsl
pop
push
cltd
mov
inc
aad
sub
into
push
xchg
pop
sti
or
and
imul
mov
pop
les
movsb
mov
mov
inc
mov
and
sahf
mov
aas
xchg
in
push
xor
xor
test
popa
dec
mov
ficoml
std
sbb
mov
icebp
xchg
icebp
stos
add
jno
dec
or
ret
out
adc
inc
mov
nop
mov
ror
icebp
jb
jecxz
pop
movsl
test
mov
shr
mov
gs
pop
xorb
jne
cmpb
inc
mov
aam
xor
repnz
or
lahf
push
pop
leave
mov
es
test
cltd
mov
adc
and
push
xchg
adc
das
loopne
fisubrl
add
sub
xor
jmp
neg
cmc
push
xor
mov
push
cmc
bt
mov
mov
clc
movb
bt
cmp
movw
movb
mov
lea
jne
clc
bt
clc
pushf
sub
push
push
pushf
pusha
lea
jmp
das
mov
test
push
cmp
jmp
pop
jg
or
xchg
into
jno
xchg
add
js
and
dec
jmp
rorl
stc
std
xor
enter
pop
lret
and
and
sbb
adcl
push
mov
cld
cs
push
jbe
inc
xor
mov
adc
iret
push
adc
add
sub
inc
add
cld
testb
shlb
repz
pop
adc
inc
lahf
adc
iret
icebp
dec
pop
negb
fists
mov
sbb
dec
sub
fildl
daa
fmuls
or
incb
mov
ret
xor
cmp
lcall
in
push
pop
and
mov
sub
loopne
icebp
cwtl
inc
in
and
out
add
and
mov
inc
cmp
fwait
sub
cmp
fdivrl
shlb
decl
les
xorl
xorb
jl
add
fidivl
mov
test
fidivrs
add
adc
jbe
lock
shl
and
inc
mov
mov
test
add
cmpsb
jmp
add
enter
mov
adcb
in
test
jge
or
out
jb
mov
fnstsw
mov
mov
data16
int
jbe
mov
mov
lock
and
arpl
or
mov
in
in
rcll
inc
xlat
mov
fdivrs
in
pop
icebp
aam
push
in
scas
push
outsl
push
add
jne
cli
into
jle
shrb
mov
mov
sbb
in
cs
mov
stos
or
iret
pop
cltd
in
scas
or
adc
or
mov
jp
cltd
mov
stos
xor
nop
filds
mov
andb
jmp
xor
jg
mov
cltd
jns
lods
ss
aam
out
xor
fisubrl
in
roll
test
mov
xor
inc
xor
and
outsb
adc
or
jnp
jge
movb
jmp
std
mov
fldenv
jb
add
xorb
fnsave
cltd
mov
jbe
imul
in
push
xlat
mov
inc
fwait
fwait
cmpsl
jo
inc
dec
in
fsub
jno
mov
aaa
mov
add
push
loope
nop
or
mov
mov
shl
push
xor
jno
mov
mov
or
scas
mov
js
xchg
cli
sbb
mov
mov
jne
outsl
outsb
stc
fldt
and
aad
jne
test
push
ja
sub
push
imull
hlt
iret
imul
xor
sbb
mov
cmp
in
jp
mov
lock
sbb
ja
iret
int3
and
push
sbb
loop
inc
out
adc
jmp
into
cli
mov
je
call
or
lea
pop
icebp
xor
dec
in
or
xor
xchg
jo
out
loopne
outsl
out
cmp
mov
xor
scas
mov
fistpll
repz
in
sbb
out
xchg
cltd
scas
out
and
cmp
movzbl
stc
pusha
add
cmp
pushf
clc
add
clc
xor
test
call
stc
cmp
mov
clc
stc
mov
push
movw
test
test
pusha
call
jmp
jmp
pusha
movw
movl
push
call
jmp
jmp
movl
push
pushf
lea
jmp
movl
pusha
pusha
pushl
movl
pushf
movb
movl
pushf
lea
jmp
add
pusha
pushf
pushf
bt
mov
sete
movzbw
cmc
neg
movzbw
bt
mov
bt
push
shl
jmp
lds
jmp
fcompl
mov
sub
fbstp
cli
insb
movl
fs
sub
lcall
inc
subb
dec
rolb
cmp
movl
push
lds
sub
inc
loopne
add
sarb
mov
mov
repz
push
adc
sbb
aaa
dec
inc
sbb
cmp
cld
in
pop
cmp
sub
cmp
mov
sbb
sbb
sbb
xchg
jns
or
inc
andl
cwtl
dec
mov
bnd
xor
je
stos
mov
sub
mov
lret
imul
mov
cmp
cmp
lods
insb
mov
and
mov
lcall
mov
stc
mov
icebp
loope
das
jo
out
jnp
mov
mov
test
enter
inc
mov
divps
jle
cmp
lock
sub
cmp
or
nop
sbb
jae
outsl
or
fisubrl
or
inc
arpl
xor
fiadds
mov
xor
mov
pop
mov
xchg
push
jl
jmp
push
leave
fdivrs
push
int
xor
mov
adc
mov
cmp
outsb
sbb
in
mov
ret
sub
scas
cmp
stc
add
setbe
mov
call
add
adc
movsb
fsub
lret
mov
xchg
push
lds
movsl
incl
es
jbe
xchg
test
icebp
les
je
mov
cmpsb
dec
ficomps
sahf
ds
mov
notb
adc
pusha
mov
stos
and
pop
stc
xchg
push
mov
sub
call
fs
fdivrl
add
xchg
mov
jle
cmp
aas
mov
sbb
cmp
sbb
cmp
lds
lahf
fistps
insl
xchg
push
sub
mov
mov
into
je
push
movq
jno
aad
mov
lcall
aad
pop
mov
dec
stos
loope
jge
in
pop
mov
xchg
add
mov
dec
jg
or
fcomps
jne
pop
cmp
lret
mov
fwait
cmp
push
les
sbb
cmp
dec
and
sub
xchg
out
push
loope
lods
dec
xor
ucomiss
add
test
pop
ja
push
sahf
cld
in
mov
jmp
or
cld
pop
aad
ss
inc
pop
jns
sub
and
leave
and
adc
push
sbb
mov
push
add
pop
or
push
push
mov
xorb
cmpsb
inc
push
or
adc
sbbb
mov
cmpsb
or
cld
or
cmp
shrb
push
imul
ffreep
imul
das
hlt
jbe
lcall
stos
jnp
out
aam
lcall
xor
or
lds
dec
insb
aaa
adc
cltd
stos
jns
repnz
lea
je
mov
push
lea
mov
cmc
clc
pusha
cmp
movl
jmp
push
call
call
movl
call
mov
push
call
cmp
sbb
out
std
push
inc
or
xchg
shlb
movsl
rol
lock
mov
ficoml
repnz
fs
orb
jmp
mov
repz
dec
mov
jo
ficomps
orl
imul
push
hlt
jae
push
mov
dec
xchg
stc
mov
jno
shlb
cld
stos
outsl
sub
or
fwait
lods
jmp
ret
insl
enter
das
mov
lds
and
inc
clc
out
jns
es
push
mull
xor
add
mov
daa
pop
jmp
sar
dec
mov
test
in
inc
repnz
sub
and
stos
adc
test
pop
loop
ja
mov
adc
sub
adc
jle
mov
pop
fnsave
loop
jmp
xor
sbb
iret
stos
jge
sub
inc
fdivl
das
push
scas
addr16
add
ss
add
mov
xor
add
push
ffreep
bound
jbe
lea
cmp
pop
gs
movl
push
pushf
mov
push
movl
pushf
pushf
mov
mov
lea
jmp
jg
repnz
movsl
cmpsb
cld
fucomi
inc
xor
loopne
xor
ljmp
pop
mov
cmpsb
xchg
cwtl
xor
pop
sub
mov
add
into
jmp
dec
add
cwtl
fnstenv
mov
inc
xor
lea
jne
jmp
arpl
subps
out
dec
sub
mov
inc
aam
xor
xor
xchg
xor
std
push
dec
pop
test
add
mov
add
sti
stos
subl
adc
out
aas
sub
aad
je
sub
pop
movb
js
push
arpl
fucomp
int3
pop
pop
std
jae
mov
push
test
loop
outsb
add
cltd
add
imul
test
push
pop
lea
jbe
pusha
movl
jmp
call
lods
mov
notb
or
jns
addr16
jne
jge
jo
ljmp
or
inc
clc
fs
imul
aad
xchg
inc
or
sbb
fwait
mov
jp
sbb
or
add
mov
push
xor
sbb
pop
xor
in
dec
hlt
and
popf
loop
sub
push
outsb
aad
xchg
mov
or
inc
leave
pushf
jl
add
gs
mov
xor
mov
loope
sbb
stos
mov
ljmp
lcall
dec
push
xor
xchg
mov
fidivrs
xor
pop
sar
mov
stc
sti
cmp
enter
cmpsb
jne
mov
fdivr
push
pop
mov
data16
mov
test
ffree
out
or
xchg
push
mov
cld
daa
dec
push
add
push
push
push
or
sbb
mov
loopne
xchg
mov
andb
lret
sbb
xchg
add
insb
outsl
xchg
inc
in
test
mov
cmp
jo
lcall
pushf
pop
in
test
into
insb
aaa
pop
sbb
mov
iret
call
push
pop
xchg
pop
dec
inc
cwtl
sub
stos
sbb
push
adc
jmp
inc
dec
add
shll
cmp
scas
nop
sbb
cwtl
and
clc
sti
sbb
and
lods
inc
popf
sbb
adc
pop
sbb
loope
sti
sbb
xor
jecxz
xchg
xchg
sahf
or
mov
mov
add
or
scas
xor
inc
subl
sbb
inc
ror
call
pop
lods
popf
push
adc
ja
lods
dec
or
inc
add
cli
dec
jmp
out
outsl
mov
pushf
jb
add
jmp
xor
mov
cmp
pusha
cmpb
in
jae
ja
loopne
sub
imul
rorl
fnsave
andb
mov
xchg
jo
mul
pop
bound
mov
icebp
dec
test
push
fcmovnb
jo
xchg
ret
sti
fildl
lds
or
sub
loopne
jae
movsb
push
adc
pop
insb
or
subb
cmp
or
mov
vmaxps
pusha
imul
mov
mov
jle
mov
jns
inc
adc
js
scas
sbb
fstpt
stc
mov
cwtl
icebp
add
sbb
sub
scas
mov
xchg
mov
sub
cld
decl
lods
ljmp
cli
lcall
dec
mov
jg
test
cmp
inc
xchg
data16
mov
xchg
xchg
mov
cmpb
mov
sbb
mov
xchg
jecxz
outsl
inc
jns
or
lods
sbb
lahf
rcrb
and
fildl
jnp
jne
stos
push
push
push
sbb
ja
xor
ss
lea
cmp
pop
push
xchg
cmp
cltd
movsl
aam
add
xchg
cmp
sub
inc
add
mov
lea
int3
fdiv
jbe
xor
test
pop
pop
cld
inc
mov
arpl
xor
and
dec
arpl
xchg
jbe
xor
je
push
cmp
std
icebp
push
fimuls
in
mov
je
xor
and
xor
jno
lcall
or
rcrb
cmpsb
cmp
es
pop
mov
loope
ss
out
jns
imul
mov
dec
push
mov
adc
push
or
mov
cltd
movsb
rorb
out
sbb
sbb
push
jp
sbb
cmp
repnz
cltd
movsb
push
addl
adc
clc
xor
je
int
mov
pop
xchg
cmp
fwait
out
mov
imul
lea
movsb
inc
movsl
sar
addr16
xor
jl
sbbb
add
cltd
movsb
add
call
jmp
movl
jmp
add
sti
mov
sbb
push
lods
adc
adc
loop
sbb
and
js
fisttpl
fidivs
aas
pop
test
lret
pop
fwait
add
ret
or
xor
ss
into
lods
jae
shufps
mov
add
add
cmc
cs
hlt
popf
outsb
cmc
jl
aas
cltd
xor
int
dec
push
aam
push
dec
mov
test
sti
jl
fisttpl
dec
xor
mov
inc
pop
dec
clc
jns
out
repnz
aaa
sub
in
push
add
mov
push
inc
jae
mov
mov
add
icebp
test
imul
xor
lahf
inc
and
pop
mov
xor
sbb
ficoms
pause
iret
rcrl
jb
mov
xor
cmpsl
movsb
movsl
sub
xor
loop
cmpsl
test
xchg
lcall
mov
pusha
movl
jmp
add
add
movl
pusha
movb
movb
mov
movl
pushl
mov
pushf
lea
jmp
jmp
push
movl
jmp
push
movw
push
call
call
pushf
pushf
mov
pushf
xchg
setl
mov
jmp
movl
call
pop
xchg
aas
enter
fistl
dec
mov
adc
loope
repz
insl
test
xchg
fldl
mov
fucomp
cmp
adc
mov
dec
sbb
mov
and
add
add
ret
orb
jae
or
ljmp
mov
inc
jmp
scas
push
orl
repnz
or
push
jne
mov
push
mov
repnz
mov
negb
ret
lods
insb
xor
jmp
mov
and
ja
leave
xchg
aaa
in
push
sbb
cltd
shrl
call
lret
filds
pop
pushf
sbb
pop
stos
dec
hlt
hlt
fs
sub
lret
jmp
fisttpll
xor
jge
push
xor
jle
pop
add
pop
mov
test
cmpsl
shrb
xchg
push
ret
repz
sbb
xchg
cltd
bound
cmp
les
mov
aas
jb
decb
jno
ljmp
fadds
adc
rcl
xor
sub
adc
and
leave
cmp
or
push
lods
xor
movl
movl
lea
jmp
mov
sbb
punpckhdq
or
xchg
jle
ds
or
cltd
pop
lret
sahf
les
imul
dec
push
mov
inc
es
xlat
pushf
pusha
inc
cmpsb
inc
fwait
test
xchg
jmp
imul
test
insb
dec
push
xchg
pusha
dec
mov
push
shrl
repz
push
inc
adc
xor
pusha
out
test
repnz
cld
pop
cmp
call
in
add
shrl
jp
sti
inc
movsb
jge
outsb
xchg
cmp
mov
mov
outsl
jno
and
movsb
subl
in
and
cmpsl
jge
push
fwait
out
sbb
mov
movd
test
shr
enter
loope
movsl
cmp
inc
in
xor
xchg
movsb
in
std
leave
arpl
testl
cmp
cltd
mov
jp
sbb
scas
cli
mov
add
outsl
xor
sub
or
sbb
imul
inc
popa
add
cltd
mov
ja
pop
shll
jne
push
mov
lret
sub
hlt
xchg
ror
jns
and
xor
cmpsb
mov
les
inc
lods
adc
push
pusha
cmp
mul
push
cmp
mov
movsb
in
cmp
jae,pn
addb
and
mov
ljmp
jmp
and
push
movb
movb
movw
lea
jmp
test
add
dec
test
xor
mov
mov
cmp
in
lahf
outsl
loope
pop
add
xchg
mov
xor
sbb
jp
in
mov
jmp
sahf
and
add
and
ret
in
cmp
xchg
jmp
or
arpl
and
into
or
lods
int
into
pop
add
out
repz
and
cwtl
pop
cmp
sarl
jge
in
xor
enter
lret
fs
fsts
push
scas
and
es
inc
mov
bound
jno
pop
push
mov
mov
or
mov
mul
sub
shrb
or
ret
insb
ret
sti
lods
xor
outsl
sub
mov
out
shll
hlt
xor
mov
les
pop
push
loopne
lret
loopne
aam
movsl
dec
sarb
xor
mov
lahf
and
das
sbb
sbb
adc
xchg
inc
sbb
jecxz
cltd
sahf
dec
cmpsb
mov
mov
inc
and
rorb
fs
jmp
jmp
pushf
pushf
call
push
call
jge
aaa
or
ljmp
in
xor
dec
out
mov
in
dec
out
mov
xor
dec
sub
das
lret
stc
mov
adc
sub
mov
push
repz
sub
pop
dec
bound
scas
xor
clc
sub
pushf
jmp
jbe
sbb
jbe
fsubr
xlat
scas
aam
cmp
aad
repz
mov
out
lcall
pop
and
push
scas
dec
mov
pop
lret
jns
cmc
insl
cld
pop
and
mov
jecxz
out
lcall
xor
daa
mull
f2xm1
push
fmul
icebp
adc
pop
iret
jns
dec
rolb
lcall
or
mov
mov
notb
add
add
cltd
adc
fs
aas
inc
xchg
data16
fld
leave
or
fcmovnb
inc
xor
out
inc
or
insb
js
pop
pusha
push
jb
jp
xor
shlb
or
xor
jnp
loopnew
fistpll
xor
jg
sbb
dec
push
cmp
test
pusha
jle
fists
dec
mov
or
dec
out
rorb
push
and
or
lret
leave
test
arpl
imul
xor
lea
mov
aad
in
add
jl
ljmp
lea
pop
popf
scas
adc
push
jle
shll
adc
sub
ret
lock
inc
lods
cltd
mov
pop
mov
mov
mov
iret
out
pop
xchg
in
movsl
xchg
fs
dec
push
and
dec
rolb
jmp
loop
push
test
mov
dec
xlat
xchg
xor
mov
jge
mov
pop
push
push
pop
out
mov
popf
jle
insl
dec
xor
movl
pushf
push
jmp
movl
movb
movl
pusha
pushf
push
lea
jmp
es
inc
lods
lea
lahf
or
repz
jo
xchg
je
les
push
testb
sub
mov
adc
mov
jmp
addr16
leave
cmp
and
jecxz
in
dec
jo,pt
pop
aam
insl
jns
icebp
cmc
ds
aas
pop
cmpsb
test
cmp
inc
sub
cltd
pushf
pop
lahf
mov
push
inc
xchg
icebp
xlat
in
xor
or
pop
inc
stos
push
ret
dec
fnsave
cltd
pushf
adc
in
jmp
call
jno
dec
movsl
movsl
jns
dec
out
adc
inc
out
es
cmp
scas
or
mov
shlb
push
pushf
or
mov
decl
xor
test
mov
xchg
cmp
jns
mov
repnz
dec
loop
je
pop
loopne
dec
das
mov
cmpsb
add
mov
mov
sub
daa
ljmp
cmp
aam
imul
aad
inc
stos
sti
cmc
xchg
scas
jae
imulb
arpl
cwtl
imul
pop
sbb
popf
pop
cltd
adc
out
enter
inc
and
ret
mov
scas
test
mov
mov
xorb
leave
push
stos
add
mov
push
jg
ds
test
pop
mov
shl
sbb
or
push
out
int
stos
mov
movsl
push
fistpll
xchg
ds
movsb
test
es
leave
inc
cmp
int3
bound
or
dec
out
mov
inc
pop
add
bound
mov
push
push
imul
mov
add
inc
clc
sbb
mov
enter
mov
es
dec
mov
test
rcr
outsb
shl
lahf
mov
push
fists
mov
push
outsb
xchg
das
nop
out
pop
out
pushf
mov
mov
mov
inc
in
or
pop
ret
pop
lcall
sbbb
mov
daa
sub
inc
mov
ret
dec
xchg
jae
aam
push
aaa
sbb
sub
fbstp
out
inc
adc
mov
and
jno
xchg
cmp
jg
or
popf
mov
xor
lcall
dec
jge
call
push
dec
in
and
jle
mov
cmp
adc
into
mov
push
nop
mov
or
sbb
bound
sbb
lret
adc
sti
pop
mov
cmp
sahf
shlb
lods
cmp
dec
test
push
test
mov
xor
in
add
jbe
jbe
sub
sbb
push
xor
pushf
push
stos
pop
pop
lds
pop
mov
cmpsl
out
inc
dec
mov
dec
incl
movsl
in
pop
fsubrs
test
ss
xchg
les
xchg
mov
jle
push
js
shll
inc
pop
scas
dec
push
jae
enter
add
ret
sub
cmp
mov
xchg
or
sub
xchg
xchg
call
mov
mov
lods
out
xor
mov
mov
adcl
mov
pop
outsl
pusha
jbe
lahf
xor
es
mov
adc
add
ret
in
rcrl
aaa
adc
dec
int3
fsubrs
rolb
hlt
sub
xorb
je
jp
add
cmp
xchg
xchg
ja
pop
in
popf
int3
lock
jge
daa
mov
lods
or
or
dec
les
mov
out
mov
daa
int3
insb
dec
xchg
sub
loope
mov
adc
test
cmc
aad
icebp
mov
inc
jo
popf
clc
cmp
lods
addb
inc
lock
mov
add
bound
lcall
shll
out
push
pop
jns
subl
popw
idivb
dec
jle
sbb
dec
cs
mov
xchg
fimull
pop
xlat
ret
push
mov
sub
lea
out
pop
ljmp
cs
mov
sbbb
in
jecxz
jne
fnstenv
test
scas
jne
std
test
ret
push
and
bound
leave
push
sti
mov
insb
pop
dec
and
mov
xor
xchg
ret
movsl
and
enter
xor
sub
xor
cld
pop
xor
je
push
shlb
icebp
push
mov
dec
xchg
push
jecxz
jno
pop
lea
imul
outsb
dec
fisubs
notb
jbe
aad
sti
mov
test
mov
popf
push
ss
xchg
fisubs
popf
cmp
push
or
mov
push
movsb
xchg
and
adc
inc
lahf
xchg
add
out
outsb
sbb
nop
in
mov
loope
mov
adc
decl
movl
or
ss
add
mov
int3
add
push
pop
mov
dec
sbb
pop
pop
loope
adc
jae
cltd
xchg
lret
cwtl
roll
fiaddl
jl
jns
mov
ds
dec
dec
out
xor
std
xchg
xchg
fisubrs
add
loop
inc
jg
les
adc
lret
in
jmp
pop
jecxz
xchg
in
lods
cmc
psubd
jns
pop
leave
jno
cmp
dec
cwtl
pop
jecxz
sub
xor
out
and
sub
jecxz
jne
sub
xchg
or
add
scas
push
fsubl
xchg
scas
fdivs
test
inc
inc
sbb
xchg
mov
mov
mov
and
ljmp
cmpsb
jecxz
xlat
out
rorb
and
mov
adc
jbe
mov
lahf
mov
ret
and
push
inc
ret
and
jne
jo
push
adc
add
adc
push
insb
xchg
mov
pop
push
imul
rcl
dec
ja
inc
je
xchg
sbb
leave
pop
out
aam
cli
pop
xor
insl
pop
lock
movsb
hlt
cmp
bnd
sub
out
lret
xor
lea
jge
shrd
bsf
sar
pop
shrd
add
sub
pop
adc
btr
adc
pop
xor
xor
cmp
cmp
pop
jmp
add
adc
fldenv
mov
cmp
lea
push
or
inc
fcomps
dec
mov
ja
inc
scas
cmp
xchg
mov
xchg
jb
iret
xor
sbb
mov
les
fs
push
rclb
enter
cltd
xchg
cmp
pushf
movl
call
lahf
stc
adc
or
ret
mov
jne
jp
cmc
xchg
ds
into
push
sbb
xor
rcrb
xorl
add
ds
pop
andl
mov
xor
daa
adc
cli
inc
popw
cmpsl
mov
aaa
out
daa
test
jne
cwtl
inc
push
lea
ret
xchg
inc
jp
jb
xor
rolb
push
sub
dec
int3
jns
dec
jne
cld
push
or
pop
testl
xor
test
stc
mov
sub
pop
out
loope
mov
xor
cmp
scas
out
mov
bound
leave
xor
push
jge
pusha
xor
stc
pop
lea
aaa
or
nop
jo
xor
mov
mov
mov
lcall
das
sbb
sbb
dec
insl
ja
or
stc
sahf
or
sub
loope
and
mov
lret
shl
aas
cmpsl
loopne,pt
jbe
xchg
xor
sti
push
push
lods
dec
leave
in
incb
out
add
aas
dec
call
pushf
fiaddl
mov
loop
jmp
push
mov
push
jo
jg
loopne
and
hlt
rcrb
dec
mov
fimull
sbb
loope
pop
xchg
mov
fwait
dec
xor
push
addr16
cwtl
and
sub
add
mov
sbbl
loop
cld
es
ds
fnstenv
cltd
xchg
fdivs
jp
push
jmp
test
add
pushf
setb
mov
test
stc
sub
mov
pushf
xor
inc
lea
mov
neg
adc
mov
stc
push
movzbl
movzbl
btc
add
xor
call
mov
movl
pushf
pushl
pushf
lea
jmp
push
jmp
movl
pushl
mov
pushf
lea
jmp
pusha
movl
call
scas
out
fwait
scas
inc
pop
push
mov
mov
aam
pop
xchg
ds
or
mov
and
mov
push
xor
jp
mov
aad
mov
pop
sub
outsb
mov
lock
lea
cltd
dec
inc
roll
or
xor
adcl
andl
cli
jnp
fistps
jge
dec
fildll
lods
xor
das
movsb
outsl
or
fsubrl
mov
lret
lret
and
cli
fisubs
fwait
inc
fistl
hlt
mov
lcall
rol
push
sbb
scas
pop
push
cmpb
mov
mov
sbb
movsb
xor
mov
adc
xor
xor
xchg
inc
adc
inc
mov
xchg
cmp
cltd
xchg
aam
mov
sbb
sbb
inc
adc
xchg
inc
or
cltd
xchg
xchg
dec
subb
pusha
movsl
test
mov
movsl
mov
mov
test
or
xor
jmp
icebp
int3
rcr
xchg
int
pushf
outsl
lret
or
sbb
inc
cmp
and
xor
cmp
mov
inc
jne
adc
dec
repnz
mov
xchg
jo
mov
push
mov
jmp
mov
shld
jmp
or
mov
xadd
shl
shr
adc
add
movzbw
dec
movsbw
and
ror
shl
mov
cmc
shrd
inc
shr
call
pusha
movl
pushf
movl
pushf
pusha
push
pushf
lea
jmp
pushf
movl
jmp
pusha
movl
pusha
push
call
cmp
imul
sahf
shll
dec
jne
mov
rcr
inc
shrl
sahf
push
loopne
jle,pn
xchg
shr
lods
dec
dec
or
mov
sahf
filds
in
fists
loop
test
call
pop
test
or
pop
ljmp
sub
insl
or
ret
cmpsb
add
pop
sbb
pop
and
dec
and
add
sbb
in
hlt
or
mov
arpl
je
aaa
fildll
jbe
shrl
pusha
repnz
int
xor
dec
adc
or
gs
aaa
xor
ds
and
xchg
lds
add
cmpsb
add
cltd
popl
pop
add
and
std
jge
mov
je
add
pushf
lea
jmp
xor
call
xchg
js
xor
jl
int
bound
xor
and
push
xchg
jmp
in
mov
and
adc
cmp
rcrb
add
and
imul
mov
jg
jge
mov
xlat
push
mov
scas
popf
cmp
pop
dec
pop
push
fsubs
pop
sahf
cmp
push
js
jo
shlb
ror
cld
loope
rclb
test
cmpsl
je
clc
add
std
inc
cs
popa
pop
scas
dec
ficomps
bound
inc
aaa
mov
xchg
shrb
scas
mov
pusha
push
lea
inc
jg
pop
hlt
xor
imul
push
shrb
in
sbb
jnp
cmp
inc
sarb
inc
in
push
jne
sub
mov
insl
imul
and
pop
mov
and
push
pushf
push
lea
jmp
call
push
movl
movw
pushf
pushl
pushf
lea
jmp
xchg
mov
jbe
and
ds
mov
je
jb
mov
and
xchg
std
fadds
nop
rclb
and
xor
std
xor
sub
mov
adc
cmp
test
es
int3
lahf
leave
insl
add
mov
adc
in
xor
call
dec
loop
lret
rcr
icebp
fcoms
repnz
cmp
fsubp
popf
daa
out
add
xchg
mov
xchg
insl
cmp
add
int3
lahf
pop
mov
xchg
int
add
cmovno
mov
popf
sti
std
lea
pop
shr
jge
insl
ss
push
push
scas
rolb
stos
imul
pop
add
or
in
lahf
mov
xabort
mov
cmpsl
jb
xor
inc
add
mov
mov
lea
ja
mov
cli
mov
dec
jbe
or
and
xorb
out
pop
movl
movb
push
pushl
lea
jmp
mov
jmp
icebp
inc
cmp
icebp
push
and
and
clc
ss
add
in
popa
rclb
aad
jb
outsl
dec
mov
xor
pop
inc
xor
dec
in
lods
fucomi
xchg
dec
scas
sub
int3
subb
nop
enter
sarb
addr16
lahf
xchg
sbb
mov
xchg
outsb
sub
dec
and
jmp
and
xor
mov
fdivrs
or
sub
sbb
inc
test
pop
sti
call
into
fiaddl
outsb
stc
in
pushf
aaa
fsubs
jae
jg
jle
imull
stos
inc
inc
and
sub
outsl
mov
bound
dec
pop
sbb
bound
push
aaa
xorl
imul
xlat
xor
pop
xchg
xor
sti
data16
lock
pop
jo
lods
ja
int
bound
mov
push
js
xchg
into
icebp
sub
pop
add
adc
jecxz
mov
mov
xor
push
clc
arpl
nop
sub
xor
cmp
iret
in
push
imul
gs
in
mov
lods
mov
sbb
and
xchg
orb
inc
movsl
fldl2e
in
leave
repz
incb
aam
sub
popf
xchg
ss
cltd
lds
xor
dec
js
push
pop
inc
ljmp
xor
xor
jne
shll
sbb
cltd
leave
movsl
repnz
lret
in
int
cltd
mov
decb
ljmp
jg
xchg
mov
in
pop
arpl
xor
hlt
loopne
and
sbb
push
inc
int3
divb
xor
xor
dec
mov
xor
jg
ret
aaa
imul
xchg
push
xor
cmp
pop
jmp
inc
push
push
mov
addr16
cmpsb
mov
xchg
xchg
fs
ja
cmpsl
push
scas
dec
xor
xor
fwait
pop
popa
xor
lea
push
scas
adc
cli
jecxz
and
mov
mov
lahf
cmc
push
jmp
imul
push
mov
mov
jno
popa
jno
ljmp
cld
imul
nop
mov
mov
cmp
in
cltd
mov
addr16
popa
xlat
daa
rolb
aad
out
adc
outsb
xor
mov
scas
in
arpl
cltd
mov
addr16
sbb
mov
xchg
cmp
and
mov
cltd
mov
popa
xchg
xor
add
aam
mov
sbb
addl
mov
pop
iret
inc
shll
mov
xor
xor
sub
sub
adc
fiadds
sub
cmpsb
or
push
jp
xor
out
mov
mov
lret
aam
repnz
or
imul
mov
sbb
stos
int
ret
cmp
cs
sbb
pushf
cmp
mov
bound
dec
sbb
and
movsl
mov
in
pop
arpl
je
stos
xchg
add
neg
fidivrs
sbb
cmp
cltd
mov
repz
in
jg
xor
fldt
mov
bound
scas
jo
in
sbb
pop
ret
fcoml
rorl
fnstenv
inc
push
push
pop
adc
test
insb
enter
ss
sbb
mov
sbb
int
cmp
loopne
or
or
stc
dec
dec
lods
sub
enter
call
add
add
js
gs
mov
fistl
add
out
sbb
cltd
mov
or
test
addr16
inc
mov
or
or
and
xor
push
lahf
sbb
xlat
sbb
mov
cwtl
sahf
add
push
inc
and
mov
or
out
push
or
mov
and
mov
push
mov
inc
push
aaa
ljmp
lods
inc
data16
arpl
sub
push
shl
and
mov
test
jne
mov
xchg
loop
inc
shlb
or
pop
xchg
mov
cli
cmp
jecxz
xchg
inc
cmp
neg
loopne
adc
sub
in
add
add
push
lea
inc
lret
sbb
cwtl
sbb
cmpsl
cli
sub
jl
out
cmp
lds
das
pop
leave
mov
add
jmp
sbb
adcl
mov
or
mov
add
ja
mov
or
ds
xorl
dec
scas
aaa
jle
push
fwait
jp
stc
pusha
lock
test
inc
icebp
push
aaa
int
xchg
sub
loop
push
sub
ljmp
inc
add
jg
cli
add
add
popf
push
rorl
jne
xor
dec
js
test
jne,pn
mov
dec
je
repz
push
and
cltd
xchg
fsubrl
scas
loope
test
imul
xor
or
jne,pn
cmp
push
xchg
pop
or
outsl
in
fnsave
xor
xor
shll
and
sbbl
xchg
mov
dec
into
ret
pusha
adcl
push
mov
pop
xlat
fidivl
pushf
mov
shrl
scas
scas
test
sub
cmp
ljmp
notl
xor
outsb
stos
out
rcrb
mov
in
out
or
sbb
push
in
cmpsl
jo
xchg
js
mov
push
cmc
push
inc
ror
push
or
xlat
mov
sbb
sbb
inc
cmp
push
fbld
scas
fstpt
aam
mov
outsb
into
xchg
cld
repz
xchg
adc
inc
jbe
sub
mov
mov
cmp
mov
leave
cli
or
test
dec
cmpsl
adc
into
mov
movsb
adc
ss
pop
push
sbb
cs
insl
xor
adc
cld
and
les
je
and
mov
bound
rcll
or
sbb
shl
xchg
int
je
int3
xchg
in
ret
mov
xor
push
sbb
sbb
sbb
mov
fcmovbe
mov
loop
test
fistpll
lods
xchg
dec
call
out
mov
hlt
js
cmpsb
sbb
movsl
dec
lds
or
dec
inc
in
lea
and
mov
push
cmpsb
subb
add
mov
xchg
clc
sub
popf
std
lret
dec
adc
mov
cmpb
or
dec
repz
outsl
or
sub
aad
pop
xor
ror
jae,pn
insb
mov
mov
inc
cmp
xor
mov
adc
push
outsl
aad
sbb
pop
add
in
lahf
out
adc
or
iret
push
mov
xorl
insl
rclb
into
arpl
aaa
sbb
fmul
shlb
push
repz
push
push
sbb
lahf
xorl
lret
negb
ljmp
mov
dec
dec
imul
mov
or
movsl
popf
xchg
or
add
out
push
xchg
shrb
jns
roll
loopne
adc
mov
rolb
and
out
sbb
movsb
fucomi
pop
add
or
jg
mov
outsb
loopne
std
nop
pop
test
fsubrs
mov
in
pop
mov
fiadds
sti
js
inc
fcmove
jmp
jecxz
inc
popf
aaa
test
test
cmp
arpl
mov
xchg
cmp
adc
ror
xorb
inc
fcmovnbe
mov
dec
aad
or
or
jns
lods
jp
cmp
in
lret
adc
stc
cmp
insb
call
xchg
sbb
je
xchg
packssdw
xchg
scas
mov
mov
mov
aam
mov
jg
sub
clc
dec
scas
push
cwtl
mov
push
xor
pop
push
xor
pushf
and
nop
jae
rcrl
iret
idivl
shrl
fucomi
pop
repnz
es
cmpsl
hlt
rcrl
repz
push
imul
sub
pop
loopne
xchg
jge
cltd
jp
xchg
dec
jmp
orb
mov
test
nop
repnz
es
mov
lret
inc
lcall
cltd
orl
pop
movsl
roll
and
cmp
pop
rcrl
xorl
sub
imul
scas
fstl
dec
push
sub
std
inc
fcmovu
xor
push
xchg
movsl
roll
scas
leave
xchg
out
out
xchg
mov
mov
sbb
xorl
fstpl
xor
cltd
add
and
inc
mov
mov
sub
js
test
xor
and
mov
scas
fstl
js
adc
in
cmpsb
arpl
mov
mov
xor
mov
add
or
pop
xchg
pop
fnstenv
cltd
xorl
hlt
mov
sub
and
inc
repz
jl
loop
jmp
sbb
imul
xchg
cmpsb
and
cmpsb
nop
rcr
fldpi
pop
pop
cwtl
cwtl
cmc
jmp
add
mov
out
pop
inc
cmp
pushl
cmp
icebp
lcall
daa
or
jle
or
push
inc
xchg
adc
xchg
xor
inc
mov
push
xchg
pop
mov
push
mov
xor
sbb
jbe
popf
xchg
mov
mov
popf
ret
mov
imul
jp
or
popa
hlt
seto
stc
sub
fmull
sahf
xor
rcl
dec
movsl
add
mov
iret
xorl
fdivrl
pop
jecxz
fcoml
jae
and
xchg
push
push
mov
and
pushf
inc
cs
test
and
xchg
jmp
jg
ljmp
and
pop
pop
pop
dec
push
ds
cltd
addl
pop
pop
fucomip
loope
jbe
mov
mov
xchg
xchg
in
xor
pushf
mov
movl
pushf
movl
push
push
movb
lea
jmp
pop
dec
js
insb
js
jnp
or
rcrb
test
adc
mov
inc
gs
adc
mov
push
fisubs
push
jne
or
in
gs
xor
pop
mov
cmp
mov
inc
fidivrs
pop
imul
sub
cltd
pop
in
fcmovne
jl
xor
push
int3
scas
iret
xor
test
jo
setno
push
les
nop
inc
xchg
push
mov
pop
jno
movsl
add
pop
mov
jge
mov
push
xor
out
lret
sarl
cmpb
mov
dec
mov
dec
es
test
pop
mov
jg
movl
pusha
push
pushf
movb
movl
pushf
lea
jmp
call
lea
jno
push
push
push
lea
jmp
pop
lds
leave
ret
mov
and
push
xor
insl
dec
dec
sbbl
jb
fwait
sbb
fs
int3
xchg
loope
lea
mov
ret
xchg
dec
xor
ret
xchg
popf
mov
cmp
cmpsb
ljmp
out
jo
arpl
inc
push
jp
ljmp
flds
subb
xlat
add
cmpsb
nop
loopne
shl
add
cmp
je
stos
call
inc
and
xchg
loopne
push
push
pushf
lea
jmp
test
sbb
add
popa
add
pop
sbbb
lahf
std
or
or
mov
rcrb
inc
lds
mov
sbb
dec
lock
ret
pop
dec
pop
ret
js
dec
jb
ret
mov
xor
orl
mov
daa
call
mov
push
jae
rolb
loop
outsb
push
aas
in
ja
adc
push
cmp
addr16
and
mov
add
outsb
mov
inc
fs
pop
mov
scas
xlat
sub
jmp
push
jmp
enter
in
dec
jp
or
mov
mov
mov
xlat
cmp
dec
pop
jmp
test
push
int3
icebp
mov
fcomi
insl
cmp
cmp
adc
xor
icebp
cmp
lret
xchg
sbb
es
mov
xor
fcompl
cmp
ss
mov
pop
pop
cmp
ret
outsb
pushf
lds
lods
imull
or
cmp
xor
dec
fisubrs
fistl
cmp
mov
lock
dec
or
sbb
jo
and
ror
and
cmp
orl
mov
in
cmp
push
cld
and
test
mov
out
das
add
mov
jb
cmp
popf
mov
jns
or
icebp
stos
push
pusha
into
dec
testb
fwait
test
xor
rcll
add
in
imul
jg
insl
jns
jno
stos
sbb
ficoms
lret
out
aas
or
xor
xchg
xor
stos
push
jbe
je
sbb
scas
pop
pop
or
mov
xor
push
push
lea
jmp
movl
push
pusha
pushl
mov
lea
jmp
popf
xor
aad
adc
sahf
mov
lret
stos
jle
icebp
inc
ret
test
and
add
clc
pop
cmp
dec
fwait
lea
fisubrs
scas
clc
aaa
dec
and
xor
mov
pop
or
scas
out
jg
jne
rcll
mov
cmpsb
aas
xor
cmp
scas
mov
cmp
mov
rcl
cmc
rclb
mov
ljmp
mov
rcr
ja
jecxz
sub
es
orl
jo
pop
mov
enter
sahf
out
fldl2e
int3
fildll
shr
stos
loope
sub
imull
fisttps
inc
test
mov
add
jg
xor
jg
sub
mov
sub
popa
mov
cld
lret
lock
dec
mov
mov
add
sub
add
push
add
mov
xchg
hlt
or
inc
pop
or
scas
in
sub
jge
adc
adc
inc
repz
sbb
mov
movsl
test
stos
pop
pop
ja
sti
ror
push
leave
pop
jne
inc
lahf
and
mov
dec
adc
sub
jb
mov
and
and
xor
repnz
sub
fisubl
lock
jl
mov
dec
in
xor
dec
test
bt
sub
bt
clc
movb
pushf
mov
cmc
mov
bt
test
call
cmp
mov
js
ss
mov
sbb
jg
outsl
faddp
or
arpl
and
mov
addr16
insb
fsubr
mov
lcall
inc
and
outsb
int
mov
ja
push
mov
repz
pop
pusha
push
mov
push
addr16
shll
cmpsl
mov
nop
dec
cmp
pusha
lcall
inc
js
rol
lea
rcr
bsf
adc
mov
jmp
bt
mov
movzbw
lea
inc
bsf
stc
adc
mov
bsf
lea
adc
rol
inc
add
mov
shld
bts
xor
shr
pushf
add
shr
shr
shr
dec
mov
cmc
rol
mov
stc
bts
add
shr
dec
movzbl
and
add
stc
not
and
not
movsbl
shr
mov
mov
sete
bts
shl
shr
lea
neg
movsbw
add
shl
shr
and
rol
and
stc
and
add
and
adc
btc
mov
bts
sub
lea
pop
ror
mov
dec
neg
ror
mov
stc
pusha
shr
pushf
mov
pusha
lea
jmp
call
movl
movb
movl
pushf
lea
jmp
jmp
aam
mov
inc
xchg
push
aaa
sar
lods
leave
jmp
mov
aam
add
add
pusha
lcall
adc
push
int
cmp
into
lods
dec
lods
mov
adc
adc
jge
or
xor
jae
cmp
adc
mov
daa
dec
push
push
mov
mov
shr
in
push
add
sub
test
fnstcw
call
mov
adc
or
fucom
xchg
int
shlb
xchg
sub
sub
and
xchg
clc
loop
mov
xor
outsb
mov
imul
and
out
fbld
dec
mov
mov
and
inc
xchg
xchg
daa
jg
xchg
adc
jns
sub
or
das
rorl
shll
fisttpll
enter
das
je
mov
jge
dec
insb
xor
shr
adc
bound
mov
dec
xor
fadd
xor
outsl
gs
lods
cltd
test
xor
pop
inc
lahf
mov
ret
xlat
add
fidivrl
ret
xor
out
pusha
mov
pop
into
pop
xor
xchg
fldl
cmc
pop
jbe
xor
in
add
mov
insl
rcll
xlat
fnsave
ljmp
bnd
sub
aam
sbb
imul
xor
clc
push
push
mov
jp
scas
lret
and
in
cmp
fcomps
call
mov
add
fwait
inc
outsb
mov
scas
add
add
in
mov
adc
mov
imul
je
fnstcw
jbe
aad
push
push
xor
pop
fwait
mov
push
sbb
jp
iret
aam
sar
xor
jbe
jo
js
sub
ja
inc
jbe
pop
mov
or
push
imulb
adc
roll
adc
sbb
push
fidivrs
sbb
adc
pop
adc
jo
xor
xlat
xor
jo
xor
bound
outsb
leave
ret
mov
leave
and
test
sub
xchg
repnz
gs
popa
mov
xor
into
lods
pop
lret
xchg
xchg
fstpl
pusha
or
mov
repz
or
ja
add
lcall
mov
scas
xor
lods
popa
mov
dec
popa
and
js
mov
add
cltd
js
movsl
imul
mov
sahf
xor
std
lds
dec
jns
jo
and
cmp
lea
mov
imul
nop
sbb
iret
pop
jmp
jle
int
lret
out
daa
mov
out
pop
or
faddl
mov
iret
jl
pop
mov
enter
push
repnz
cwtl
push
xor
xchg
push
push
xor
and
je
lcall
daa
cmpl
ljmp
into
mov
adc
outsl
or
mov
sub
mov
xor
sub
lcall
pop
mov
jb
cmpsl
inc
pushf
jne
mov
jo
jbe
pop
lods
repz
sbb
insl
daa
lods
icebp
pushf
cmpsb
xchg
lahf
xor
test
and
adc
arpl
outsl
loope
xor
call
xor
or
fistps
stc
sbb
mov
in
jmp
jno
push
jp
mov
int3
mov
cmpsl
add
mov
imul
shlb
push
leave
ljmp
jl
push
xchg
pop
cmpsb
outsl
inc
jp
cli
push
lret
push
ja
shrb
sahf
mov
mov
pop
mov
sti
xchg
pop
imul
std
add
test
test
in
cltd
mov
adc
pushf
popa
or
dec
incl
sub
addl
mov
test
cmp
sub
xor
mov
fsubs
sbb
sbb
jb
pop
ljmp
stos
pop
sbb
add
adc
mov
cmc
or
cli
fwait
movsb
add
jb
jnp
and
es
dec
imul
xchg
lret
fstenv
and
dec
scas
push
aas
test
scas
cmpsb
jge
fdiv
jl
lock
lods
dec
inc
lahf
outsl
sbb
push
inc
pop
sbb
out
popa
and
mov
jp
aam
push
pop
outsl
pop
aam
cmpsl
jnp
cwtl
xor
jge
cmpsl
loopne
inc
sbb
outsl
lahf
dec
dec
push
add
stc
lret
aas
jae
std
test
ss
and
lahf
mov
inc
mov
mov
icebp
dec
inc
bound
and
xlat
or
pop
jnp
clc
fs
xor
fcmovbe
mov
cmpsb
movsb
lea
lret
and
or
repnz
insl
xor
movsb
fistpll
cmp
stos
jge
out
xchg
jnp
movsl
cs
adc
fdivl
test
xor
cmp
mov
test
mov
mov
adc
adc
cltd
jne
or
or
inc
insl
cld
fildl
xor
mov
mov
pop
lret
mov
mov
cltd
jne
adc
add
seta
setp
movzbl
movb
movl
mov
lea
jmp
icebp
push
mov
mov
ss
dec
xor
les
xor
sarl
mov
inc
dec
jge
fs
jecxz
push
imul
or
and
mov
rcl
out
xor
iret
fisubrl
dec
push
fiadds
cld
lods
shlb
jecxz
out
test
mov
sti
adc
jns
ss
push
negb
in
and
in
sbb
cld
cmp
pusha
xor
lock
lods
hlt
mov
and
cltd
je
sbb
outsl
and
and
pop
pop
insb
and
mov
lock
inc
and
mov
cli
lahf
pusha
pushf
mov
push
movl
pushl
push
pushf
pushf
lea
jmp
pushf
pushf
pusha
pushf
movl
push
pushf
movl
movl
pushf
push
pushf
lea
jmp
call
pop
arpl
lret
cs
jns
xchg
lods
xor
sub
mov
pusha
push
std
mov
fistps
aaa
aam
adc
clc
mov
push
pop
stc
add
pop
dec
mov
xchg
pop
jmp
arpl
iret
scas
xor
and
push
mov
loope
std
rcrb
xchg
add
cmc
repz
cmp
testb
bound
fiadds
andb
test
andb
sub
in
xor
and
mov
xor
sbb
push
pushf
das
dec
test
data16
jle
dec
daa
and
add
int3
notb
call
jae
add
daa
mov
pop
pop
sbb
or
adc
xor
movb
lea
movzbl
mov
pop
rdtsc
bswap
lea
pushf
pushf
bswap
mov
movsbw
bswap
pushf
movl
pushf
lea
lea
mov
call
inc
add
xchg
and
xor
jecxz
xchg
fistpll
je,pt
out
cltd
xchg
add
ds
stos
mov
int
ljmp
sarb
insl
test
sarb
cld
push
push
fsts
fisttps
sbb
sar
or
push
mov
insl
lret
mov
pushf
in
add
test
xchg
scas
pop
xorl
out
shlb
xor
int3
ja
lret
inc
fdivrl
xchg
inc
mov
lahf
in
pushf
jecxz
pop
sahf
mov
xchg
sbb
es
jnp
adc
and
jnp
scas
lods
shll
shlb
mov
push
pop
jne
xor
fdivl
int3
inc
or
xor
inc
ss
sbb
in
arpl
insb
pusha
out
repnz
mov
mov
xchg
nop
divl
cltd
jno
mov
sahf
fidivs
subl
or
add
inc
pushf
jnp
mov
pushf
movl
pushf
jmp
test
call
push
movl
pushf
pusha
movl
pushf
movb
lea
jmp
jmp
jae
sbb
popa
cltd
xor
cmpsl
aas
aam
cltd
push
pusha
dec
int3
mov
repnz
sbb
pop
xor
lret
dec
inc
lods
jo
mov
adc
or
into
in
mov
sub
clc
fimull
add
ficompl
fidivrs
and
je
out
push
pop
imul
dec
test
mov
mov
divl
inc
or
fs
dec
insb
jno
fdivrs
add
cld
xchg
in
sub
gs
push
loopne
fsubrp
orl
daa
pop
add
fldt
movsl
mov
add
fists
insl
test
cmp
out
aad
dec
mov
cmpsl
pop
push
cmp
cs
loopne
aam
std
imul
imul
mov
imul
ret
and
shlb
pop
lods
and
jmp
hlt
aas
cwtl
fsubrl
jb
inc
lods
adc
mov
pop
xor
and
xorb
cmpsl
mov
out
add
mov
test
dec
push
hlt
push
mov
push
je
xor
outsb
lahf
adc
stos
and
xor
sub
cltd
incb
xorb
push
daa
bound
pop
int
or
xchg
dec
out
int3
jnp
int
dec
fisubl
add
hlt
mov
inc
cmpsl
push
fstl
repnz
jns
mov
scas
test
les
int3
mov
sub
repz
mov
and
jl
and
xor
cmpsl
jno
mov
das
sbb
mov
lahf
xchg
jge
push
clc
mov
lahf
sub
subl
cmpsl
outsl
adc
andl
add
dec
loopne
cmc
shll
jns
cltd
out
mov
hlt
mov
in
cwtl
and
push
xchg
sub
dec
pop
mov
xchg
inc
lahf
sub
inc
push
dec
fsubrl
and
xchg
xchg
insl
sub
or
pop
add
es
ret
mov
repz
ljmp
hlt
mov
xor
jbe
ficompl
data16
push
and
jle
enter
cs
cmpsb
out
mov
test
ret
inc
std
xchg
das
out
pop
or
inc
add
cmpsb
xor
xchg
pxor
dec
cmp
mov
inc
mov
aad
enter
xchg
cmpsl
fucomi
mov
push
adc
mov
mov
sub
xchg
hlt
sbb
xchg
sub
aaa
lcall
xchg
test
push
add
adc
or
xchg
push
mov
adc
rolb
mov
mov
aaa
call
jns
stc
mov
and
and
push
xor
or
mov
fsubrl
test
test
cmp
in
imul
dec
inc
mov
jns
mov
dec
cmp
mov
jno
cltd
mov
dec
repz
push
cmp
sbbb
jns
mov
js
adc
mov
dec
mov
je
fnstsw
mov
xor
add
jmp
in
mov
mov
ret
mov
loope
shlb
sub
inc
rcll
push
scas
loop
cmpsb
push
outsb
xor
mov
mov
xor
jmp
xor
pop
fs
inc
sub
stc
push
xor
mov
xor
out
xlat
push
xor
mov
sub
push
inc
les
into
icebp
jecxz
and
jl
fxch
push
sub
cltd
insb
pop
jno
xor
add
lret
push
sub
neg
sbb
mov
or
push
jns
cmpsl
add
jbe
fwait
push
lods
xchg
aaa
mov
jge
adc
sub
mov
mov
idiv
xor
lods
jae
shrl
add
mov
and
xor
call
scas
outsb
jl
and
insl
test
cld
test
jne
clc
scas
test
xchg
lods
bound
cltd
outsb
cli
mov
inc
jecxz
sbb
cwtl
outsb
xchg
ja
xor
fwait
mov
aam
dec
cmp
leave
fcoms
xor
pop
mov
mov
mov
mov
jmp
xchg
ljmp
vmread
inc
loopne
fistl
ret
and
xchg
out
ss
adc
cmp
lret
sub
xchg
add
test
jne
sti
cmpsb
jg
cltd
insb
ret
ljmp
sbb
jecxz
push
scas
inc
inc
xor
cmp
ss
dec
mov
mov
cmp
cltd
insl
ss
xor
add
xor
inc
jecxz
cltd
insb
dec
jl
scas
insl
lea
insl
pusha
shlb
js
dec
ss
mov
jl
cmc
and
xor
int3
scas
mov
fwait
insl
mov
pop
sub
dec
in
movsl
rcr
mov
xor
dec
data16
and
frstor
loop,pt
mov
aaa
cld
inc
xchg
or
lods
lahf
cmc
daa
inc
loopne
addl
sub
mov
subl
xorl
push
push
sbb
imul
add
fiadds
sub
xchg
cmpsb
lods
loopne
lahf
scas
inc
mov
incl
scas
mov
movb
pop
push
mov
or
lahf
in
jmp
mov
fildl
mov
dec
test
mov
jp
push
jno
aad
arpl
loop
mov
and
xor
inc
or
repnz
mov
xchg
hlt
je
adc
loop
pop
or
and
icebp
fcoml
or
lock
xor
scas
mov
in
fsubl
fdiv
sahf
or
jle
pop
xchg
add
cltd
jmp
out
mov
and
ja
push
jecxz
cmp
cmp
xchg
push
dec
dec
icebp
sbb
sbb
ja
mov
cmp
scas
rcll
add
jne
inc
movsl
adc
icebp
dec
daa
cmp
mov
clc
insl
jp
sar
inc
mov
jbe
je
stos
mov
vminsd
test
mov
xchg
dec
xor
dec
dec
movsb
add
and
xor
or
imul
sarl
test
fnstenv
inc
xchg
push
push
movsl
lods
addr16
or
cmp
jle
addr16
leave
stos
push
vmovupd
mov
mov
int
sub
push
ret
mov
xor
adc
push
shr
rclb
negl
push
or
inc
mov
add
xchg
outsb
shl
std
and
cmp
sahf
xchg
ret
dec
pop
xor
push
inc
sbb
pop
sbb
addl
cmp
and
dec
mov
ror
mov
mov
mov
test
pushf
fstps
lea
or
push
push
std
shll
ds
add
jb
sbb
test
xor
int3
mov
and
mov
push
jns
jbe
lret
and
roll
sti
pop
xlat
jmp
dec
aam
hlt
inc
mov
das
or
movsb
push
inc
and
in
shll
xchg
adc
es
xor
mov
nop
cmp
mov
pop
jb
ja
adc
jg
cmc
stc
push
dec
push
inc
mov
mov
xor
mov
icebp
arpl
sar
xchg
decl
cmp
gs
or
arpl
test
pushf
iret
or
out
push
fidivl
das
and
stc
enter
out
xchg
shrb
sub
lock
icebp
ljmp
push
push
lahf
push
cmp
sub
cmpb
dec
and
iret
imul
js
mov
inc
lcall
sub
and
sbb
jae
mov
add
hlt
push
pop
sbbl
add
pop
push
or
nop
mov
andl
inc
int3
nop
cld
pushf
xor
mov
xor
sbb
adc
or
xchg
lods
in
add
movsb
fcom
enter
cmp
fdivs
fidivl
das
daa
andl
sbb
pop
mov
inc
or
bound
movsl
mov
ljmp
mov
cltd
aaa
cwtl
push
rclb
add
scas
pop
adc
ja
mov
push
or
mov
into
sub
adc
je
fdivr
add
dec
popf
mov
xchg
mov
cwtl
shl
jbe
jmp
cli
inc
xchg
xor
push
push
movl
mov
inc
push
out
dec
test
jg
test
or
rcl
mov
cltd
ss
xor
pop
jns
xchg
movsl
pop
mov
out
in
stc
jne
sub
pop
pavgb
push
jb
mov
jge
cmp
xor
mov
sub
add
mov
mov
mov
jge
lcall
cmp
add
fildll
mov
inc
flds
sub
sbb
push
mov
sub
loopne
xchg
cmp
pop
xor
out
imul
xchg
cmp
xor
or
loope
xchg
aaa
inc
add
lret
push
add
push
adc
iret
mov
int
pop
push
push
arpl
and
mov
push
mov
pop
mov
divb
movsl
mov
mov
loop
mov
inc
iret
movl
pusha
movl
movb
movb
pusha
push
lea
jmp
bt
clc
pushl
add
stc
push
mov
cmp
sub
movw
clc
cmp
cmp
add
call
pusha
call
call
movw
movl
movb
pusha
movw
jmp
test
add
jne
push
and
jmp
clc
sub
stc
cmc
bt
add
stc
xor
call
push
pushf
movl
pusha
lea
jmp
jmp
testl
xchg
out
out
or
in
lock
inc
sti
cmpb
cmp
xor
loop
sbb
cmp
ja
pop
or
add
lock
cmp
cmp
fsubrs
xchg
fsubrs
cmovs
les
or
add
mov
hlt
push
pop
jge
dec
aam
pop
mov
clc
stos
outsl
mov
repz
pop
js
jp
dec
fwait
fs
vprotw
push
xchg
call
dec
ret
dec
out
inc
stc
mov
notb
jp
rclb
mov
pop
lcall
das
fld
pop
cmp
mov
aaa
fadds
loop
sbb
les
add
test
pandn
xchg
dec
jecxz
sbb
out
jne
cmp
test
inc
sar
jnp
mov
or
out
sub
mov
sub
push
push
or
and
sub
sbb
push
xor
inc
sbbl
pop
sbb
out
loopne
out
scas
mov
ficomps
cmp
out
pop
outsl
inc
mov
pop
xchg
xchg
aad
jb
out
xchg
pushf
sbb
outsl
call
xchg
mov
loop
clc
xlat
outsl
loop
pop
sbb
mov
mov
dec
mov
cmp
scas
mov
sbb
pop
mov
mov
mov
rcll
sub
sbb
inc
mov
out
mov
aas
test
daa
mov
and
mov
jbe
jecxz
aaa
push
or
mov
repnz
inc
xchg
faddp
pop
jo
jae,pn
pop
xchg
inc
inc
subb
sbb
mov
jmp
xchg
in
push
shrb
push
lahf
inc
xor
xchg
pop
xor
inc
lcall
cmp
test
push
lods
les
cltd
sub
mov
sbb
rcl
mov
cmc
jmp
call
movl
movb
lea
jmp
mov
inc
and
imul
sub
jp
fcmovne
out
lods
or
addb
loop
jle
fsubl
std
xor
jmp
mov
jne
adc
fcoml
popf
adc
int
hlt
push
and
pop
das
push
push
int3
lods
addr16
rorl
mov
dec
sbb
pop
adc
je
sbb
cltd
arpl
shll
xchg
mov
jecxz
in
jne
push
add
cs
stos
faddl
lock
mov
pusha
inc
mov
pop
push
pop
fcmovbe
out
out
dec
jae
fucomip
mov
test
dec
add
shlb
sbb
push
mov
mov
dec
int3
cltd
call
pop
push
in
adc
pushf
inc
mov
push
inc
add
and
and
subb
mov
xor
adc
pop
dec
pop
int
es
jns
and
mov
inc
and
xchg
data16
enter
jbe
sub
lret
cmpsb
fcoms
lahf
or
fsubrs
dec
mov
lods
or
cmc
cli
leave
repnz
mov
test
cmpsb
les
dec
and
out
dec
sub
and
push
mov
inc
scas
iret
mov
add
and
mov
insl
dec
adc
insl
mov
out
or
and
adc
xor
inc
sarb
mov
dec
adc
dec
es
add
mov
in
outsl
xor
mov
stc
or
ds
cmpsl
sbb
push
outsb
test
jo
testl
nop
cmc
sbb
fstpt
pop
add
add
data16
fmull
sub
cwtl
mov
lahf
add
fmuls
push
sbb
sub
jg
xchg
cmp
mov
int3
dec
cmp
je
fstpt
push
pop
sti
icebp
mov
in
push
cmpsl
dec
pop
jl
call
xor
aaa
jb,pn
pop
aaa
jl
int
inc
mov
or
push
pop
int
adc
and
sti
clc
mov
clc
cmc
push
cmpl
lods
push
jns
push
out
fildll
xor
cld
xchg
out
movsl
add
das
mov
lea
icebp
add
push
jmp
fisttps
inc
dec
and
out
in
sub
push
mov
jg
cmp
dec
cmp
pop
inc
inc
repz
hlt
push
std
push
scas
inc
lock
movsb
push
inc
mov
sbb
fstpl
nop
fidivl
sub
arpl
jb
negb
fmuls
mov
mulb
push
jbe
lock
adc
push
mov
push
test
ljmp
and
mov
push
add
ds
aas
push
test
dec
pop
mov
and
add
and
cmp
pop
jmp
and
jnp
or
cmpsl
push
mov
cmpsl
stos
cmp
arpl
mov
inc
add
pop
inc
sbb
ljmp
je
sbb
add
fcomps
cs
dec
xor
inc
jg
neg
or
xor
inc
lret
and
push
sbb
out
fdivr
pop
cmc
jge
rcrb
sbb
jg
out
pop
mov
shlb
jle
push
pop
cmpb
mov
daa
mov
stos
sti
dec
sub
enter
loope
hlt
inc
or
inc
imul
in
mov
loop
xor
adc
or
addb
dec
sbb
fists
not
test
cmp
scas
push
and
jbe
scas
xlat
mov
jg,pn
loop
xor
test
fsubrl
or
adc
sbb
xchg
pop
xlat
addr16
insl
lret
mov
sub
pop
and
in
pop
je
mov
inc
mov
loop
mov
push
push
xorl
cld
add
les
push
jmp
pop
adc
push
jmp
stos
shrb
jge
inc
xchg
imul
mov
bnd
mov
ret
xor
jns
cmc
cmpsl
dec
enter
repnz
loopne
repz
imul
xor
adcl
repnz
mov
inc
sbb
jbe
cmc
sbbl
sub
pop
mov
pmaddwd
xchg
xorb
cmc
inc
xchg
jnp
out
mov
xchg
out
cmp
fwait
dec
enter
dec
xor
fisttpll
mov
cmp
jmp
xor
out
jo
dec
int3
cmp
mov
cmp
mov
inc
xchg
inc
dec
imul
rcll
xorb
xor
mov
je
cwtl
xor
push
mov
les
shrl
dec
or
fbld
inc
add
fucomi
xchg
xchg
insl
xchg
aam
mov
sbb
stos
xchg
xchg
xchg
jnp
jg
mov
pop
push
jl
das
into
push
int3
ss
leave
inc
js
sub
pop
or
imul
imul
loopne
jo
arpl
pop
outsb
push
arpl
negb
push
or
imul
loopne
lods
lock
fmull
nop
ret
es
into
dec
mov
shl
pop
mov
fneni(8087
jbe
mov
loopne
and
mov
sub
cmp
das
sub
lods
and
sbb
push
mov
imull
jge
int
das
into
pop
jb
es
pop
jge
mov
mov
mov
mov
dec
notl
testl
daa
imull
cmp
ljmp
push
stos
xchg
lahf
or
fndisi(8087
add
insl
sbb
lea
dec
stos
xor
scas
adc
jae
jle
stc
cli
jp
inc
cltd
adc
es
int3
sbb
scas
lret
cltd
sti
dec
lahf
inc
mov
mov
pop
and
call
or
mov
pop
sbb
push
xor
pop
repz
xor
inc
xor
xchg
push
cld
outsl
shlb
mov
test
arpl
ljmp
imul
mov
ret
loopne
adc
jns
insl
leave
or
inc
adc
add
and
lds
mov
cwtl
das
loopne
mov
mull
fisubrs
mov
push
faddl
add
shll
enter
jo
mov
out
adc
in
xchg
notb
nop
clc
jmp
push
mov
dec
mov
push
jp
mov
cmp
hlt
push
mov
xchg
mov
xor
xchg
push
lret
out
sahf
pusha
imul
push
aas
stos
xor
and
dec
outsb
jno
and
fiaddl
dec
xchg
jecxz
fdiv
sub
idivl
sbb
or
cmp
mov
adc
rol
mov
shll
cs
xchg
jge
es
adc
rcr
mov
and
xchg
add
or
xlat
inc
lods
cmp
cwtl
pushf
popa
out
and
push
adc
imul
outsb
orl
mov
push
pop
lret
enter
or
add
out
push
pop
and
lods
push
ficompl
inc
lahf
out
cmpsb
das
movsb
mov
sub
or
fisubs
mov
xor
outsb
mov
sub
jmp
test
and
cwtl
negb
cltd
sbb
in
mov
pop
lret
sub
test
push
rcrb
mov
mov
push
stc
cmc
mov
mov
jle
shrb
xchg
xchg
pusha
jo
or
int
adc
call
dec
mov
sti
mov
imul
jbe
inc
rcl
or
test
rcrl
lret
push
sub
add
addr16
add
mov
mov
xchg
push
mov
push
clc
stos
dec
stos
push
jbe
dec
mov
fsubl
adc
xor
mov
jg
mov
mov
push
testb
inc
jg
mov
jmp
stos
cltd
jne
jo
mov
ja
arpl
test
fidivrs
xchg
xor
ja
frstor
stos
xchg
mov
insl
mov
push
push
xchg
movsb
call
stc
daa
inc
clc
in
adc
and
out
mov
clc
shr
dec
pop
ja
sub
fnstsw
mov
jbe
mov
mov
mov
nop
pop
repnz
xorl
cltd
mov
sbb
cmpsb
ss
pop
or
add
xchg
mov
dec
in
enter
mov
mov
or
sbb
xchg
icebp
jo
cmp
inc
addl
arpl
divl
xchg
lea
cld
rolb
mov
outsl
push
cli
cmp
jb
xor
shll
shlb
dec
ljmp
loopne
or
movsb
adc
jbe
out
bound
shl
iret
test
dec
jge
adc
shrb
xor
fdivrl
mov
addr16
sbb
dec
and
and
test
negl
aas
xor
aaa
shl
es
cmp
adc
inc
mov
bound
cmpsb
jmp
repz
pop
iret
mov
mov
mov
adc
or
les
test
adc
or
dec
ret
add
dec
shlb
cwtl
sub
mov
fidivrs
cwtl
inc
fistpll
ud1
jnp
iret
mov
sub
stos
rcr
or
dec
pop
decl
lret
or
lret
aas
xor
scas
daa
fbstp
mov
lods
or
out
aas
clc
add
xchg
push
and
lahf
add
or
adc
jmp
push
outsl
or
or
mov
data16
push
mov
movsb
xor
out
xor
xchg
aas
into
and
xchg
fidivrl
jecxz
aas
push
jecxz
push
jl
gs
push
jae
xchg
xor
xor
iret
sbb
int
fwait
xor
imul
enter
jae
cmpsb
fcomps
add
test
push
addr16
sub
aad
jne
adc
or
sti
ror
adc
pop
insb
adc
xchg
test
sub
sub
jl
movl
test
mov
fnstenv
out
pop
xor
insl
fld
shld
and
adc
mov
into
daa
aas
int
inc
scas
and
and
inc
pop
pop
mov
mov
shl
pop
or
and
xor
subb
sub
gs
pop
pop
cld
jl
push
or
cli
dec
pop
xchg
lods
ljmp
int3
dec
inc
sub
cltd
pop
scas
fldt
js
mov
xor
push
inc
fimull
outsl
movsl
add
sub
cwtl
sbb
sti
inc
mov
push
xor
mov
paddq
test
cltd
jmp
mov
call
lret
xchg
stc
ljmp
negb
cmp
scas
fidivl
les
in
out
cli
in
mov
shlb
mov
adc
push
lret
pushf
xor
fadds
lds
mov
sbb
les
add
in
and
mov
in
movsl
push
jb
mov
xor
push
xor
insb
xor
pushf
sub
xor
imul
fmull
es
shlb
and
loop
pop
inc
lcall
leave
cmpsl
xchg
hlt
push
lds
inc
push
or
and
lcall
mov
mov
pop
xchg
mov
dec
jmp
lods
dec
shrl
aas
stos
es
push
shll
mov
add
std
and
dec
test
add
push
pop
mul
or
out
sub
sub
inc
scas
aas
cmp
ljmp
and
cmp
fistl
aad
out
jnp
fisttpl
ja
sti
adc
jle
xor
pushf
jmp
pusha
movl
push
pusha
movl
push
pushl
push
mov
lea
jmp
mov
popa
leave
loope
mov
pop
push
pusha
and
inc
adc
xchg
mov
addr16
in
jmp
mov
xlat
pusha
cs
xor
fs
jecxz
mov
dec
std
imul
sub
sub
incb
pop
sub
das
push
jmp
movsl
imul
add
das
imul
inc
fisttpl
or
outsl
pop
hlt
inc
inc
out
nop
pop
mov
xchg
push
insl
sahf
mov
test
cli
sub
movsl
shlb
mov
and
out
inc
cmpl
jp
mov
add
gs
pusha
aas
mov
jl
jb
cmc
loop
jae
repz
js
jge
and
mov
loopne
dec
add
imul
stos
inc
out
adc
inc
pop
dec
fs
dec
loop
adc
push
stos
sub
sub
pop
xor
ss
pusha
arpl
jo
arpl
movsl
pop
or
push
cmc
lea
dec
cmc
mov
dec
sti
jp
push
out
xchg
jo
cmp
or
add
sbb
pop
and
data16
jg
in
xchg
jno
xchg
sbb
lea
out
arpl
push
mov
mov
mov
fistps
jg
or
cmpsl
test
mov
int
mov
mov
adc
adc
int3
and
pop
jno
cmp
or
sar
add
add
or
int3
mov
add
shll
adc
ja
mov
outsb
je
stc
mov
pop
pusha
mov
cs
sub
icebp
cwtl
shll
hlt
mov
dec
adc
pop
sub
shll
mov
int3
pop
add
cltd
push
pop
sbb
sbb
out
push
cld
jmp
push
mov
jbe
cltd
push
test
ljmp
pop
inc
ljmp
xor
pop
add
pop
inc
stc
adc
popa
push
mov
pushf
inc
mov
lea
push
mov
pop
sub
dec
mov
lods
sub
ljmp
pushl
ja
icebp
mov
mov
xchg
mov
pop
mov
fsts
xor
inc
aad
mov
js
fcomip
faddl
cmpl
xor
pushf
movl
pusha
push
movl
pushf
movl
pushf
lea
jmp
movb
dec
bt
test
jmp
addr16
push
mov
pop
add
add
mov
adc
sbb
mov
xchg
lds
cmovb
lret
cmpsl
leave
repnz
jns
lods
or
outsb
xchg
out
call
xchg
xor
pushf
sbb
and
stc
xor
and
sti
test
dec
stos
mov
mov
pop
or
push
jbe
add
inc
sbb
fldt
push
pushf
xor
push
mov
sbbb
sbb
and
pop
mov
test
and
inc
cli
add
inc
mov
cli
push
mov
adc
movsb
mov
push
cmp
inc
add
out
pop
fisubl
and
pop
imul
call
cmp
mov
mov
xor
aad
outsb
sbb
lret
rcll
repz
mov
daa
shr
add
xchg
add
retw
outsl
lahf
aas
mov
jbe
into
and
and
lods
repz
adc
dec
addr16
pop
or
out
int3
push
ja
jge
lds
pop
dec
sub
dec
xor
rcrb
jo
decl
jecxz
xor
popa
shll
ds
pop
ret
jmp
ret
bound
repnz
adc
push
cmpsl
inc
loope
jge
lcall
inc
mov
es
shll
push
jg
mov
cmp
pop
sub
lock
sub
stc
mov
and
adc
and
test
pusha
xchg
imul
pop
or
in
jns
imul
dec
inc
and
outsb
data16
dec
add
dec
in
add
mov
movsb
orb
adc
outsl
out
iret
and
mull
notrack
int
rolb
faddl
xchg
jge
mov
mov
mov
cld
sub
es
mov
sub
sub
into
scas
or
dec
jo
in
fldt
xor
inc
sti
std
aam
dec
xor
aas
lahf
icebp
int
js
inc
call
lea
inc
mov
insl
outsb
loope
int
insl
mov
jg
mov
in
enter
bound
xor
mov
push
xor
dec
test
ret
cmp
pushl
sarb
dec
cli
fcoms
test
xchg
push
xchg
in
out
adc
roll
dec
xor
lods
cmp
mov
imul
adc
jo,pt
jge
mov
inc
outsb
mov
push
rorb
push
sub
fwait
mov
sbb
hlt
mov
in
mov
add
and
cltd
push
mov
shll
mov
mov
movl
push
jmp
fistpll
sub
jl
insl
stos
mov
out
mov
pop
mov
mov
and
xchg
das
inc
mov
je
decl
jp
lods
insb
dec
gs
push
les
fidivrs
pop
pop
out
mov
pop
dec
add
adc
lds
push
mov
and
das
pop
fbld
ss
add
sbb
shrl
out
sub
jg
ss
sbb
mov
outsl
jne
adc
les
cmpsb
dec
cmp
sub
cmpsb
jecxz
mov
call
aam
bound
clc
xchg
stos
leave
notl
lahf
pop
popf
push
adc
into
xor
mov
cmp
sub
cli
test
cld
in
push
xor
push
xchg
push
repnz
stc
pop
std
and
push
icebp
pusha
repnz
test
dec
loop
xchg
jne
cs
jo
fisubs
dec
test
adc
rorb
test
scas
dec
xorl
lret
inc
enter
mov
or
mov
pop
fisttpll
push
call
andl
loope
mov
fucomp
mov
sarl
and
in
test
icebp
xlat
sbb
xchg
lds
into
mov
sbb
pop
scas
mov
lods
lock
xchg
out
enter
jae
lahf
cli
pop
push
decb
push
ss
in
fidivs
xor
pop
pop
mov
adc
add
loop
jle
mov
jns
add
push
rol
dec
outsb
mov
in
xlat
ss
sbb
jbe
mov
jp
fldt
add
cmp
scas
insl
pop
sarb
cltd
inc
jecxz
out
or
jmp
gs
mov
daa
inc
pop
mov
mov
or
jbe
scas
pop
inc
lret
popa
out
leave
out
pop
pop
mov
popa
mov
cmpsb
jb
inc
jg
loope
and
lods
or
orl
sbb
jnp
mov
xor
rorb
cmp
or
shlb
popa
stos
or
fisttpll
mov
lret
je
add
add
jae
sbb
push
mov
dec
scas
sbb
jmp
test
dec
sbb
repz
pop
add
insl
or
inc
or
lods
pop
notb
aad
xchg
dec
test
clc
push
mov
popf
xor
pop
adc
mov
es
clc
pop
inc
stos
mov
std
sbb
or
ret
jo
push
mov
jecxz
jg
cmc
in
sbb
mov
cmp
mov
lret
das
or
cwtl
inc
sti
addl
cmp
xor
out
lret
dec
es
xchg
sbb
inc
mov
stc
jb
pop
sti
and
test
and
outsl
dec
push
cld
inc
movsl
outsb
int
mov
sbb
mov
lret
add
push
inc
arpl
clc
mov
adc
stc
pop
hlt
mov
mov
jecxz
sti
les
fadds
loopne
insl
xchg
xor
mov
fsubr
shll
mov
jmp
dec
aaa
inc
es
dec
test
jne
jmp
cmp
leave
mov
xor
cwtl
or
cwtl
pop
int3
push
shr
jnp
pop
aad
aam
and
xor
adc
add
into
mov
dec
ret
mov
sbb
inc
test
out
add
icebp
jno
lds
mov
leave
push
mov
pop
stos
loop
nop
and
add
lods
xor
jg
or
sub
pop
push
rcrb
dec
dec
jg
pusha
pusha
pushf
movl
pushf
jmp
movl
push
push
movl
movl
pusha
pushf
movw
pushl
lea
jmp
jmp
and
leave
ljmp
adc
adc
mov
sub
lods
lods
es
lods
out
aaa
mov
fcoms
sub
roll
faddl
push
das
lret
xchg
enter
adc
push
sub
push
pop
repnz
or
into
lock
mov
or
icebp
xchg
mov
scas
js
mov
sarl
and
mov
push
xchg
std
vmwrite
jnp
add
xchg
cmp
subb
fidivrl
jno
scas
cmp
ficoms
ret
jno
mov
add
jge
ficoml
shll
jbe
dec
pop
jmp
xor
adc
xchg
xor
es
xor
mov
sub
add
pop
mov
daa
popa
pop
xlat
cmp
sahf
mov
or
mov
pop
ja
lret
ja
stos
cli
cmc
add
mov
ja
ror
xchg
xlat
cmp
loop
mov
outsb
ret
ja
out
jmp
cwtl
es
ret
addr16
iret
mov
lahf
js
jbe
dec
fs
bound
loop
and
js
or
mov
out
aaa
jl
imul
push
ja
out
fs
cli
jl
mov
cli
pop
sbb
fisubl
inc
jns
cmp
push
xchg
out
mov
sbb
and
or
cmp
sub
rcll
jp
and
push
xchg
mov
xor
nop
scas
sub
fdiv
jns
sub
or
add
or
mov
punpcklwd
loop
insb
push
jmp
sub
xor
xor
adc
push
lcall
xor
sbb
fldt
jp
ret
xchg
scas
andl
pop
xor
cltd
push
push
and
sbb
nop
add
pop
sbb
push
pushf
mov
cltd
dec
daa
pop
mov
test
and
sar
cmc
mov
call
test
pusha
cmp
shr
cmc
clc
mov
add
pushl
shr
pusha
call
shr
shl
and
xor
sub
cmp
bt
movzwl
test
shl
shr
bswap
add
movzbw
add
mov
movzbl
mov
mov
movsbw
mov
call
jmp
fwait
out
stc
sbb
aas
adc
aas
out
ds
cmc
lea
jno
aam
int
fs
sbb
mov
out
add
mov
push
pop
das
mov
inc
mov
fcmovnb
xor
sub
jle
mov
lahf
push
cmp
dec
sub
and
daa
icebp
loop
xor
je
and
insb
mov
sbb
xchg
inc
in
pop
fdivs
mov
mov
mull
add
xor
outsb
jle
mov
loopne
mov
andb
out
xor
icebp
lret
bound
and
mov
pop
adc
pusha
out
xchg
test
pop
push
mov
stos
inc
xor
mov
pop
mov
dec
dec
hlt
leave
testb
pop
clc
int
mov
pop
lahf
jnp
jg
cltd
inc
xchg
addr16
jp
fdivr
mov
jo
mul
adc
xlat
cmp
dec
jns
mov
sub
outsb
mov
and
xor
test
mov
lcall
outsb
iret
xlat
cmp
jmp
dec
push
xor
and
imul
sub
addr16
fsub
cmp
push
lcall
and
sub
test
outsl
popa
jmp
mov
in
xor
pop
dec
xor
dec
pop
loop
pop
mov
and
daa
out
in
jecxz
jo
cltd
inc
xlat
pusha
adc
dec
es
in
cmp
mov
pop
sub
loope
mov
xchg
into
cmp
jp
sahf
push
and
in
fisubs
dec
xchg
in
call
or
adc
jg
sbbb
mov
arpl
jb
adc
hlt
out
push
push
loopne
fdivs
jmp
cltd
out
lret
cmpsl
or
loopne
aad
push
stos
test
mov
mov
rcr
jnp
je
mov
icebp
mov
cmpsb
add
cmp
pop
mov
mov
imul
out
sub
es
paddd
test
movsl
clc
js
mov
xor
scas
push
fdiv
cmpsb
ljmp
pushf
ffreep
sub
add
out
dec
ja
ret
jo
stc
xor
into
repnz
cltd
and
xor
in
sub
pop
imul
fucomi
mov
pop
mov
loope
leave
aaa
mov
insb
pop
xor
f2xm1
fdivl
btc
push
jbe
xlat
scas
or
mov
push
out
inc
xor
mov
cltd
inc
cmpb
in
leave
sub
and
es
xor
and
jae
pop
xor
push
inc
loope
dec
in
add
lahf
filds
inc
enter
dec
push
cld
push
in
inc
dec
shll
pop
mov
inc
sub
std
jmp
in
sbb
mov
mov
mov
push
in
inc
jae
pop
cmp
xor
aaa
mov
ljmp
push
pop
gs
add
call
dec
mov
pcmpgtd
jae
dec
gs
cmpsl
dec
inc
repz
rorl
adcb
stos
jnp
stos
and
pop
add
clc
jbe
out
pop
adc
lret
negb
jp
shlb
icebp
mov
push
daa
std
fstpl
or
rcrb
lret
cmpsb
aad
jmp
call
mov
xor
mov
arpl
sub
mov
cmp
cltd
inc
dec
ror
aas
mov
leave
lock
or
and
inc
dec
inc
in
sbb
and
adc
xchg
rcrb
loope
jno
repz
jae
not
jnp
lods
xchg
out
mov
jmp
push
pop
and
cmp
jno
jno
dec
ds
jno
inc
jbe
cmp
xchg
dec
cli
push
icebp
adc
je
mov
push
cmp
cmp
pop
imul
scas
ja
mov
cmc
dec
iret
std
adc
ljmp
add
lds
addr16
mov
sbb
push
or
cmp
je
inc
fldl2t
cmp
cmp
jmp
xor
aad
arpl
sub
cli
mov
or
inc
std
lods
pop
or
pop
jo
hlt
out
push
cmp
xchg
jb
lods
arpl
add
sbb
insl
rcrl
sub
in
in
test
fsubrs
adc
jp
enter
shll
setg
jnp
dec
cmp
outsb
shlb
push
lea
add
fwait
jnp
shrl
jge
mov
ficomps
lock
lcall
std
add
push
jnp
push
jne
loope
push
adc
and
adc
outsb
mov
dec
jl
mull
jl
in
lcall
ret
jns
sahf
push
insl
loope
or
pop
movsl
pop
cmp
or
vmovmskps
mov
test
cltd
psubusw
xchg
icebp
stos
add
mov
push
les
adc
mov
cmpsl
inc
cltd
mov
sarl
iret
repz
sub
mov
stos
push
sbbb
jmp
mov
movl
jmp
mov
bt
shr
add
lea
js
lea
or
clc
bsf
btr
mov
btr
rcr
neg
rcl
lea
movsbw
bsf
btc
pusha
mov
sub
shr
bsf
shr
mov
sub
add
seto
lea
shr
pop
sbb
mov
clc
btc
mov
bt
movsbw
shr
cmp
bsf
add
bts
bsf
and
rcr
setne
jmp
push
movl
pushf
movb
lea
jmp
test
and
bt
lea
jns
pushf
add
bt
and
add
shrd
jmp
mov
dec
mov
arpl
hlt
popa
adc
addr16
add
leave
scas
addr16
jl
jae
push
mull
xor
pop
mov
cld
movsb
mov
movsl
rolb
sbb
pop
mov
into
sub
mul
addr16
jl
pop
scas
dec
dec
push
clc
inc
jle
pop
or
js
or
and
cmpsl
imull
call
bound
mov
jg
js
jle
mov
aad
jno
cmp
inc
ljmp
add
aad
loop
fistl
cmp
arpl
inc
dec
jmp
or
mov
mov
mov
aad
cmp
push
and
xlat
xor
xorb
loop
in
in
dec
add
out
int
mov
pop
and
push
push
jns
pop
stos
imul
pop
js
gs
bound
inc
div
scas
dec
or
shl
push
das
jbe
es
xchg
xchg
es
fldenv
hlt
fimull
add
fdivr
xor
push
mov
arpl
xchg
lods
mov
sub
inc
mov
push
stos
adc
es
xchg
mov
insb
add
jae
daa
test
mov
cltd
inc
test
sbb
scas
in
mov
cmp
pop
addl
lret
cmp
imul
fcmovnbe
arpl
pushf
push
pushf
mov
dec
fsubr
and
and
add
stos
xchg
push
scas
or
imul
repnz
mov
call
cld
fdivs
mov
lret
lods
in
mov
out
lret
stos
sbb
les
pop
sbb
les
aas
pop
add
daa
and
pop
or
mov
jb
sbb
fs
lods
and
sbb
dec
imul
jg
pop
adc
icebp
mov
and
mov
push
inc
aaa
mov
sub
xchg
test
sbb
push
adc
call
push
add
arpl
pushf
push
mov
je
pop
xor
lds
xchg
dec
cmpsb
lds
ljmpw
mov
arpl
inc
add
xor
add
rcll
mov
jne
xchg
int3
push
ret
aad
pop
bound
jb
sub
push
loope
aam
inc
xor
dec
cmpsl
mul
push
fisubrl
in
sub
sub
ret
stc
rcll
mov
gs
popf
sbb
sub
lret
sub
jbe
cmpsl
cli
imul
pmulhw
sahf
or
movsl
xchg
adc
add
mov
insl
mov
mov
sbb
xor
mov
scas
cltd
ja
add
hlt
or
xor
jle
in
push
adc
dec
dec
test
ljmp
xor
jmp
fdivl
out
or
test
cmp
jecxz
xor
fstpl
mov
jge
adc
incl
push
pop
sbb
ljmp
lret
nop
aam
fsubs
mov
out
lret
lcall
inc
xchg
push
hlt
out
or
mov
sub
mov
mov
mov
jle
arpl
fcmove
jo
mov
cmp
mov
cltd
aas
xor
stc
test
push
bt
add
cmp
and
stc
cmp
cmc
jmp
jmp
popf
loope
cmp
cmp
aas
push
push
gs
leave
xchg
fdiv
push
mov
loop
xor
imul
xor
mov
into
loop
xor
pop
push
in
adc
sub
mov
inc
enter
or
call
or
movsl
scas
fwait
push
xor
repnz
mov
ret
aam
mov
pop
test
xor
push
pushl
movl
movl
call
push
add
cmp
and
call
js
pushf
pusha
movl
pusha
push
movl
pushf
lea
jmp
cmp
enter
clc
push
and
cmp
sub
jae
bound
adc
in
cwtl
lret
into
loope
push
lods
lock
je
arpl
jecxz
flds
xchg
xor
inc
enter
cld
xlat
jno
cwtl
jl
xchg
loope
in
popa
out
xor
hlt
cmpl
pushf
adc
xchg
xor
jl
or
cltd
cmp
or
enter
adc
xor
xor
adc
mov
scas
xchg
jecxz
xchg
bound
aad
out
pop
xorl
jae
cmpsl
gs
pop
int
xchg
jle
ss
loope
fsubs
mov
ret
and
xor
xor
mov
int
icebp
pop
pop
addr16
imul
mov
cltd
jl
jg
jl
dec
hlt
ja
adc
jge
lret
scas
pop
push
sbb
cmp
cltd
cmp
popf
gs
jecxz
mov
xor
call
pushf
dec
jmp
lods
aam
in
mov
or
ds
mov
xor
sub
test
repz
jo
jne
pop
popf
lds
repz
fisubrl
outsb
xchg
outsb
dec
mov
sub
cld
cmp
jecxz
faddl
pusha
jge
repz
incl
jg
daa
push
ds
add
sbb
mov
cmp
fmull
and
shl
cmp
enter
jmp
sbb
dec
xchg
out
jmp
mov
dec
test
mov
adc
xor
xor
sbb
testl
negb
scas
jg
dec
add
fstl
push
xor
and
mov
sub
add
xlat
sub
cmpsl
rcrb
pop
movl
repz
mov
outsb
mov
arpl
loopne
lret
inc
xor
and
jp
pop
lcall
ljmp
xchg
xor
xor
call
or
mov
cmp
jnp
and
jge
mov
shlb
rorl
mov
and
in
push
fldcw
mov
xchg
pushf
gs
pop
aas
outsl
cmpsl
and
add
ja
int3
imul
jecxz
aad
mov
or
imul
fnstenv
fpatan
test
sbb
inc
push
push
rorl
fidivl
or
pop
adc
pop
jmp
push
in
push
xchg
jbe
mov
aaa
or
cmpsb
and
xchg
add
adc
in
push
xor
push
push
and
cmp
pop
mov
or
pop
pop
inc
mov
xor
cmp
shlb
push
ljmp
and
sti
mov
cmp
clc
out
into
push
add
fwait
and
mov
pop
test
test
pop
xor
xor
mov
push
jg
pop
stc
mov
fs
cmp
mov
lods
pushf
or
jns
mov
and
pop
pop
or
xor
or
push
iret
scas
ret
jmp
popf
pop
mov
clc
xchg
dec
xchg
mov
cltd
cmp
bt
clc
and
pushl
pushf
add
clc
btr
rcr
add
not
pop
sbb
shr
xor
ror
shr
or
movsbl
add
cmp
rcl
sub
shld
movzbw
lea
stc
shl
shl
bts
sbb
sar
movzwl
sub
btr
mov
shld
call
jmp
movl
movw
lea
jmp
movb
pushl
call
mov
cmp
push
adc
loopne
sbb
popa
ficoml
cld
imul
in
hlt
stos
insb
pushf
shlb
or
pop
loope
out
mov
adcb
dec
fnstsw
and
out
cmpsb
pop
cltd
and
lret
dec
je
repz
test
sub
outsl
or
fadd
or
mov
out
jns
gs
push
sbb
fimull
sbb
jno
xor
call
mov
fstpt
fsqrt
out
cmpsb
lods
jg
out
mov
sbb
lret
xchg
cwtl
lret
or
int3
aam
xor
add
outsb
mov
shrb
sub
lods
fildll
int3
xorl
out
inc
inc
das
js
xchg
into
das
leave
adcl
outsb
lret
fldenv
stos
call
mov
cltd
cmp
icebp
or
js
jne
inc
sub
add
xor
jmp
rorl
ror
mov
fldl
pusha
lock
inc
mov
mov
and
cli
cmpl
cmc
enter
das
inc
xor
mov
adc
jle
inc
xchg
adc
jg
cmp
add
inc
or
pop
lock
pop
inc
lret
sbb
repz
cmp
int3
shll
out
fs
sub
std
fadd
cmc
and
jmp
icebp
dec
fs
bswap
mov
bswap
not
lea
lahf
xchg
rdtsc
lea
not
xchg
xchg
lahf
xchg
movsbw
lea
movzbw
mov
bswap
lea
cltd
jmp
sbb
scas
imul
lahf
sbb
adc
xchg
jns
add
sbb
pushf
pop
adc
fsubrs
cmc
fdivs
ja
xor
cli
nop
lods
subl
add
frstor
sub
lahf
and
sbb
int
pop
add
and
mov
jmp
movsb
lcall
xchg
dec
pop
in
clc
sbb
push
cmp
or
clc
sub
push
aaa
adc
push
lock
mov
aam
push
subb
lds
aaa
jns
das
add
mov
fcompp
sbb
aad
and
in
xor
popa
leave
in
es
inc
sub
daa
pop
leave
outsb
subl
cmc
xor
jne
mov
mov
pop
jge
inc
jg
mov
incb
insb
jno
pop
dec
sbbb
and
push
sahf
xor
sub
xchg
inc
cmp
lds
add
push
int3
je
xor
lods
popa
mov
or
xchg
repz
inc
xor
sub
lock
jb
pop
lea
sub
cltd
les
cmp
xor
lret
add
fwait
sahf
inc
dec
aas
xor
jo
jp
dec
xchg
pop
inc
aaa
mov
fildl
cmp
mov
jp
mov
lods
in
ret
ljmp
xchg
fcoml
or
dec
call
sub
stos
ret
incl
jg
xchg
das
int3
addr16
punpckhdq
jne
in
pop
xor
jbe
je
mov
and
add
fs
fs
lods
mov
lock
or
dec
cmp
push
or
pop
lret
cmp
je
subl
lods
or
cmp
bound
lret
add
dec
out
aaa
or
jge
lods
dec
ljmp
movb
push
mov
lea
mov
not
mov
pushf
call
divl
and
inc
dec
cltd
jno
push
jge
mov
mov
ljmp
mov
shrb
xor
and
lcall
mov
test
jmp
add
popf
xchg
add
pop
push
inc
or
fldt
push
stos
insb
outsl
xor
loop
sub
cli
mov
mov
pop
xchg
cmp
xchg
sarl
or
xchg
cmp
cmp
ret
pop
mov
push
add
into
out
aas
fwait
stc
mov
faddl
nop
out
add
mov
add
aas
lds
lock
cmc
je
pushf
mov
jo
andl
jno
rorl
ret
jns
lods
and
mov
add
mov
mov
std
inc
dec
mov
stos
dec
jl
and
pop
sbb
xchg
jl
stos
inc
std
jecxz
push
pop
lock
pop
mov
push
dec
fsubrs
add
mov
xor
popf
fisubl
in
jp
jmp
pusha
imul
mov
movsl
popa
addr16
inc
jae
push
mull
add
test
in
dec
ret
in
adcl
sbb
mov
jb
push
mov
inc
jge
shlb
out
mov
jle
in
mov
in
out
add
adc
push
call
mov
icebp
mov
jo
fsubrs
inc
add
pusha
add
xor
xlat
loope
pop
jmp
lods
and
stos
jle
inc
sbb
jmp
xchg
xor
lcall
mov
jbe
add
lcall
cmpsb
bound
mov
xchg
inc
xorl
in
push
mov
or
mov
inc
push
lahf
fwait
cli
push
loop
arpl
inc
outsb
sahf
ds
outsb
daa
or
test
shlb
mov
and
test
xor
rcrb
sbb
sbb
add
push
jo
lds
push
mov
xchg
in
sbb
aas
fidivrs
stos
dec
sbb
xlat
mov
scas
cld
mov
lcall
loopne
cmc
dec
stos
mov
add
pusha
mov
pop
or
lds
js
data16
mov
test
xlat
in
insb
jmp
mov
daa
cs
notl
push
test
enter
cld
cmp
pushl
dec
mov
push
scas
mov
js
mov
fnsave
sub
xchg
insl
adc
aam
push
sbbl
push
enter
and
in
jl
gs
mov
jo
push
xor
inc
in
cmpsb
lods
popa
or
or
or
out
lea
push
mov
adc
adc
push
jge
xlat
cli
cmp
mov
shrl
call
jg
mov
fmuls
test
cmc
add
inc
xlat
push
cld
mov
loop
mov
pop
hlt
inc
dec
sub
mov
pop
testb
jae
pop
adc
jmp
mov
jnp
mov
sub
or
or
fsts
sbb
int
xchg
xor
adc
mov
iret
sbb
jnp
lods
pusha
pop
xor
dec
mov
inc
int3
addr16
push
inc
cltd
add
das
jo
or
popf
inc
jmp
inc
outsl
pop
xor
inc
imul
dec
jno
add
lahf
gs
pop
rcrl
imul
ds
sahf
inc
ds
mov
out
xchg
ret
cmp
out
fstpl
enter
aad
adc
push
sub
sub
into
mov
aam
and
xor
pop
popf
jns
dec
insb
bound
push
push
sbb
loop
cli
mov
xor
xor
ljmp
aam
inc
inc
jno
repz
xor
cltd
jns
dec
push
mov
push
out
sub
adc
sbb
rorl
fmuls
dec
cmp
arpl
xor
rolb
cmpb
mov
push
or
sub
cltd
xor
loop
hlt
fldcw
fmull
out
and
mov
and
ret
fdiv
aas
loop
dec
adc
push
and
gs
test
cmovg
cmp
mov
adc
xor
jo
inc
cld
mov
movsl
or
js
or
lret
fisubs
pushl
mov
mov
jle
add
rorl
je
inc
sahf
adc
sub
sub
and
and
mov
icebp
cmp
cmp
or
mov
lea
popf
stc
add
cmp
frstor
add
xchg
cmp
call
xchg
insb
sub
pusha
aad
sbb
aaa
jg
mov
push
in
ja
push
mov
daa
push
loop
aas
pop
and
xchg
icebp
pop
sub
ss
xor
cmpb
xchg
push
imul
mov
or
pop
jp
rorb
or
xor
jl
rcrl
lret
and
out
lret
je
push
sub
pushf
and
arpl
loop
jp
xor
xchg
mul
jg
imul
xchg
xchg
loop
push
jp
cmp
adc
push
jg
dec
fadd
sti
push
scas
out
xlat
out
inc
jp
call
sbb
and
mov
sub
xor
xchg
jns
cmp
ret
negb
cmp
inc
xchg
fldenv
mov
rcll
jnp
ljmp
pop
inc
jl
jle
inc
lret
shlb
cmp
jmp
ds
dec
fcoms
lods
jne
fimull
sub
mov
dec
in
pop
jle
imul
repnz
inc
xor
fs
mov
mov
cmc
out
mov
or
je
cwtl
push
cld
sbb
adc
popa
cmp
cmpsl
test
aas
decl
mov
and
or
dec
adc
xlat
fstpl
jle
movsb
mov
inc
push
xchg
dec
lret
dec
mov
lea
lds
fdivrp
xchg
scas
dec
lds
mov
xchg
mov
out
orb
mov
ja
aas
sbb
pop
fsubrs
scas
sbbl
pop
mov
push
and
lret
aas
adc
or
shlb
pop
jecxz
or
push
sub
clc
pop
jp
push
xchg
aam
fcoms
stos
adc
dec
ficomps
add
cwtl
hlt
ret
in
out
lahf
lds
aas
clc
mov
cmpl
lcall
or
imul
mov
xadd
pop
mov
cmp
out
fucomip
movsb
je
loopne
adc
cmp
pop
mov
in
out
cld
flds
inc
gs
loope
mov
in
ret
enter
cmc
cmp
les
in
movsl
mov
and
stos
cld
mov
bound
sbb
popa
and
cmp
jns
rolb
daa
sub
sub
sub
std
loopne
or
or
iret
xor
mov
add
inc
mov
les
pop
dec
negl
aas
sbbb
movsb
lcall
dec
jae
cld
fdivs
cmp
mov
out
mov
sbb
adc
or
orl
xor
movl
pusha
lea
jmp
arpl
mov
int
loop
sbb
loope
test
je
dec
cltd
idivl
jg
push
js
jae
sarl
or
adc
jp
ret
jp
mov
jb
mov
js
mov
push
dec
loope
call
mov
fs
mov
mov
sbb
jns
cltd
sub
daa
aam
clc
imulb
mov
mov
cmp
push
cltd
sub
inc
push
movsb
sarl
lcall
push
prefetch
movsl
xor
jmp
dec
push
or
xchg
jle
test
in
adcl
test
std
xlat
fwait
repz
xor
imulb
push
inc
movsb
xor
int
test
xor
sbb
sub
or
std
fndisi(8087
add
push
fsubr
into
fnstsw
cmp
cltd
hlt
negb
xor
add
imul
clc
xor
pop
push
adc
icebp
xchg
pop
roll
faddl
add
insl
xchg
les
mov
mov
dec
xchg
and
or
jmp
add
add
aaa
fisubs
mov
dec
push
fcoms
push
add
nop
out
sbb
sub
jecxz
mov
adc
push
out
dec
pop
hlt
push
xor
and
push
rcrb
dec
mov
adc
push
jbe
dec
scas
or
fwait
and
outsl
jne
pop
in
pop
and
mov
clc
mov
or
gs
sub
xor
adc
adc
mov
adc
sub
add
push
jp
std
sbb
mov
popa
push
dec
push
int
insb
fincstp
shr
pause
and
cmp
ret
lret
lods
and
cmp
cmp
xchg
dec
fwait
and
repz
push
sub
xor
imul
adc
mov
mov
mov
lods
inc
loope
mov
fistps
dec
jge
neg
dec
jecxz
mov
add
and
ss
inc
cmp
jecxz
data16
xchg
or
adc
and
repnz
loop
pop
insb
mov
popf
adc
movsb
addr16
std
clc
mov
lods
es
xor
cmpsb
gs
jmp
mov
lock
xor
push
stos
xor
jecxz
jle
out
and
mov
mov
fmuls
pop
add
xor
add
add
cli
or
push
push
xor
cltd
sub
jl
inc
std
into
cmpsl
xor
in
sti
xchg
sti
adc
lock
outsb
jecxz
hlt
push
cs
pop
and
xor
xor
add
addr16
add
jns
push
loop
push
das
pop
cmpl
shlb
add
call
stc
or
jo
xchg
mov
pop
sti
ja
or
mov
into
push
loope
dec
mov
sbb
xchg
lahf
mov
iret
loopne
jp
popf
shl
jae
fsubl
dec
mov
inc
jmp
push
insb
in
int3
or
xchg
jns
cltd
nop
adc
je
es
cmpsl
cli
imul
ret
push
sbb
adc
add
stos
adc
adc
imul
adcl
je
stos
pop
mov
shll
fisttps
mov
ja
or
push
jle
xor
push
insb
pop
pop
jnp
stos
lea
push
and
je
mov
adc
or
cmp
test
jecxz
mov
ret
fbstp
mov
xor
cmp
inc
jg
xchg
lahf
xor
dec
ljmp
je
xchg
int
jno
push
cmp
and
pop
jne
rcrb
adc
push
jecxz
push
mov
xchg
shr
lret
insl
bound
mov
fld
test
push
outsl
cltd
aam
mov
insb
and
inc
loope
mov
std
xor
xchg
sub
inc
leave
push
fsubs
or
movsl
pop
popf
sahf
shll
mov
mov
cmp
sbb
es
lcall
int
push
push
mov
push
insl
insl
sbbb
movsl
mov
dec
cmp
insb
push
lahf
cmc
cltd
sub
jo
pop
test
xchg
scas
lea
sub
lcall
cwtl
test
inc
mov
inc
mov
sti
pop
aas
das
test
js
mov
ss
repnz
dec
xchg
jae
notl
stc
push
shlb
inc
pop
insl
decl
jle
xchg
push
sub
jg
xchg
outsb
xchg
mov
and
cwtl
push
pop
pop
push
ss
push
fdivrs
or
push
mov
fucomi
mov
cmp
cli
fsubrl
shll
add
insb
push
addr16
rorl
dec
mov
scas
clc
jno
jns
enter
cmp
adc
cltd
sar
fwait
xor
rorl
xor
repz
pusha
mov
adc
pushf
add
or
cmp
push
mov
sub
out
movsb
mov
repz
push
or
in
sub
push
mov
fdivrs
pop
sti
or
repnz
xor
mov
aaa
addr16
inc
pusha
push
add
repz
jg
add
fs
popf
int3
push
icebp
test
cli
inc
xchg
scas
or
cli
iret
test
cmp
inc
xchg
loop
enter
iret
inc
sub
sub
in
xchg
mov
xlat
fsubrs
sub
and
insl
push
xchg
pop
mov
sub
mov
mov
add
icebp
xor
and
pop
xor
pop
hlt
mov
gs
xchg
push
ret
dec
adc
aad
cmp
insl
adc
mov
or
add
and
sub
mov
pusha
mov
outsb
or
sbb
lcall
ret
outsb
push
jno
int3
ret
dec
sbb
daa
ja
mov
jns
lods
ds
lcall
pushf
cs
add
sbb
mov
outsb
bound
stc
xchg
outsb
mov
sub
fbld
xchg
mov
jmp
mov
push
cmpsl
inc
xchg
jle
sbb
push
and
inc
pop
mov
aaa
push
mov
jp
xchg
push
fisttps
incb
pusha
push
cmp
shlb
insb
cli
cmp
lock
int3
scas
nop
xchg
push
xor
cs
subb
into
mov
fdivs
add
mov
lret
pop
inc
xor
test
or
jmp
mov
mov
pop
fldenv
add
dec
adc
das
sarb
mov
jg
mov
ss
cmp
or
jmp
ret
sub
sub
and
sub
rorb
rcrw
pop
or
pop
sbb
push
iret
pop
or
or
xchg
stc
bound
out
mov
cltd
es
lods
jl
and
push
jno
mov
pop
insl
hlt
mov
mov
push
jnp
add
push
mov
sbb
xorb
ds
daa
and
ds
push
mov
mov
dec
mov
fucomi
adc
test
stc
orl
imul
mov
in
sbb
movb
mov
fsubrp
int3
sbbl
lahf
sub
mov
out
dec
testb
mov
iret
jne
push
je
sbb
lahf
cli
in
movsb
ss
adcb
call
push
imul
fs
xchg
pushf
ss
xor
loope
cs
jb
in
mov
lods
imul
add
sbb
push
mov
loope
mov
pop
adc
in
shrb
and
sub
mov
and
add
xor
mov
pop
xor
cmp
subb
mov
xchg
cltd
and
xchg
adc
lret
int
xchg
push
ljmp
and
xor
ror
movzbl
add
lea
shrd
movzbw
setne
shl
and
ror
movzbl
neg
clc
shl
mov
shl
bts
movsbw
shr
mov
bswap
rol
mov
shl
bswap
not
mov
inc
shl
cmp
shr
sbb
xor
mov
movzwl
pushf
add
cmc
pushf
and
movzbl
sar
test
neg
clc
mov
test
pushl
or
add
add
stc
pushf
mov
stc
pushf
stc
clc
add
pushf
mov
cmc
cmc
sub
test
call
call
stos
popf
cmp
sti
xor
filds
aaa
fisttpl
in
inc
push
sub
roll
imul
lock
mov
ljmp
insb
ret
and
test
and
loopne
adc
xchg
push
mov
mov
jmp
clc
mov
pop
jl
sub
call
shll
and
pop
stc
call
jbe
jg
pop
jp
inc
sub
lock
mov
jl
ljmp
lods
mov
shll
mov
or
clc
mov
add
lods
mov
lods
out
test
les
aas
loopne
notl
sbb
mov
jb
push
outsl
or
loopne
insl
push
clc
pop
imul
cmp
prefetch
pop
pushf
dec
fwait
jb
je
adc
sbb
jnp
lahf
mov
ret
push
push
lret
addr16
lds
fbld
jae
and
sub
sbb
into
les
out
adc
lahf
in
lret
mull
ficoms
js
dec
add
dec
movsl
xchg
lock
dec
pop
sbb
sub
mov
lods
inc
sahf
sbb
mov
sub
add
add
lret
mov
xorb
sbb
dec
clc
jmp
jp
xchg
jecxz
mov
xor
add
cwtl
jg
rorb
iret
outsl
mov
xor
cmp
jl
popa
mov
inc
repnz
enter
subl
and
jb
push
xchg
inc
loope
cmp
insb
cmp
cltd
and
repnz
push
out
ror
dec
mov
sbb
ss
in
sbb
out
pop
xchg
scas
add
xor
push
aad
xor
imul
gs
fadds
loopne
mov
movsb
push
xor
sub
cmp
mov
bound
mov
xlat
mov
hlt
shrl
lods
pop
sbb
pop
jno
sahf
les
aam
or
mov
gs
cltd
pop
dec
int3
pop
lret
pop
fwait
insl
mov
cmp
lahf
clc
rcrl
cmp
into
and
and
gs
mov
mov
cmp
or
ds
add
cmpb
mov
in
add
out
ret
leave
pop
lock
mov
pop
call
lcall
ds
xchg
fstps
cmp
iret
sbb
into
outsl
call
xchg
aad
push
in
sbb
cmc
and
mov
mov
cld
jmp
adc
test
ret
movsb
in
rorl
and
mov
adc
outsb
adc
sbb
mov
subb
inc
inc
and
mov
pop
jb
cmp
loopne
mov
faddp
xchg
popa
out
pop
dec
and
cmp
or
movsl
cmp
insb
jnp
cmp
jmp
sub
adc
sbb
inc
dec
jmp
das
rcr
push
stos
pop
pop
bnd
cmpsb
lods
or
outsl
jb
and
fidivrl
pop
jecxz
out
stos
mov
lds
inc
repnz
mov
popf
js
mov
sub
aad
or
andb
fidivl
in
jne
pop
or
lcall
xor
mov
add
jecxz
loope
into
mov
andl
dec
push
shrl
pop
mov
sbb
xlat
lahf
xchg
pop
repz
out
xchg
sub
and
test
daa
out
idiv
out
and
lcall
aaa
shrl
out
mov
pop
lret
out
mov
sub
xor
jle
push
scas
push
popf
or
or
repz
jp
mov
pop
popa
push
mov
adc
or
ss
aas
pop
mov
mov
sub
push
mov
arpl
into
lods
mov
or
pop
cli
jno
pop
outsb
inc
push
jp
stc
es
push
jmp
jge
xchg
inc
lahf
aad
xor
or
mov
pop
addb
push
inc
xchg
mov
in
xchg
rclb
inc
incl
pop
xor
call
jmp
jle
pushf
push
movl
pushf
pushf
pusha
jmp
add
addr16
mov
cmpsl
in
sbb
xchg
inc
bound
stc
into
dec
add
pop
pop
ds
xor
xchg
xchg
add
jae
cmpsl
push
mov
lods
andb
dec
add
mov
cmpsl
daa
notl
int3
ja,pn
xchg
xchg
stos
es
fidivrs
sarb
int3
mov
scas
push
jmp
hlt
mov
int3
mov
xchg
incb
pushf
cmpsl
cmp
in
mov
mov
jge
cmp
fwait
in
cmc
fs
in
inc
mov
cld
fldt
sbb
aas
sbb
mov
movsl
inc
mov
lock
mul
xchg
xor
xor
in
jg
fnstcw
mov
pusha
stc
roll
cmp
mov
mov
add
scas
je
nop
sti
xor
sbb
lods
cmpb
in
cmpl
mov
jns
outsl
push
adc
mov
mov
stos
rol
imul
jnp
in
popf
ret
push
xor
sub
lds
mov
in
xor
mov
push
inc
or
scas
mov
xchg
stos
jmp
xchg
hlt
mov
mov
nop
cli
sub
pop
stos
or
mov
int3
test
add
js
mov
inc
dec
push
xchg
xor
cmp
jbe
xchg
and
lahf
outsb
cmp
adc
les
adc
ret
xor
mov
cmpsl
add
lods
push
or
int3
jne
inc
ss
or
sub
cmc
js
jne
clc
mov
xor
shll
mov
cltd
fnstenv
lret
int
cmp
push
xor
outsl
mov
sub
cltd
jae
data16
scas
inc
sub
imul
xor
lret
push
push
out
jle
add
cltd
divl
mov
or
jmp
pop
mov
push
push
js,pt
pushl
xchg
divl
and
jo
jnp
ret
notl
sbbb
mov
movsb
or
ds
fsubrs
loop
mov
cwtl
jle
dec
add
pop
fs
and
dec
xlat
rcrb
and
adc
out
push
sbb
arpl
push
andl
aam
dec
mov
push
mov
cmp
gs
negl
add
fisttps
sarl
cmpsl
testb
sub
inc
movaps
pop
into
es
vunpcklps
loop
jmp
outsb
mov
mov
sub
sahf
dec
int3
cmpsl
mov
cmp
subb
inc
int3
getsec
sub
mov
movsb
shll
push
movsb
jbe
mov
shrl
mov
stc
push
ret
mov
inc
movsl
mov
gs
out
add
and
cs
fwait
adc
push
idivb
push
add
pop
fyl2xp1
in
aam
dec
imul
stos
jmp
add
ja
and
adc
inc
cs
enter
sbb
movsb
mov
sbb
inc
daa
int3
mov
add
mov
out
mov
test
dec
bound
cmpsl
mov
pop
incb
lds
push
jae
add
jb
sarb
faddl
dec
sub
or
lahf
ds
cwtl
mov
pop
cmp
movsb
push
cmpsl
cmp
jle
daa
dec
outsb
jb
cmpsl
mov
cmc
mov
mov
mov
lea
sbb
ljmp
std
lahf
jecxz
sub
sub
xor
ja
pusha
movl
pushf
pushl
pushl
mov
movl
pushl
mov
lea
jmp
push
movl
pusha
movl
movb
pusha
lea
jmp
pusha
push
movl
pusha
pushf
call
into
stos
lods
xsave
hlt
sub
out
dec
mov
push
daa
push
aam
fs
mov
adc
push
mov
in
mov
push
movsl
inc
in
mov
adc
xchg
lock
pop
sahf
out
adc
push
inc
fcoms
lahf
xchg
mov
jb
mov
dec
fstpt
dec
push
jp
mov
mov
arpl
nop
insl
sbb
push
and
ja
subb
adcb
popf
push
test
pop
mov
test
jns
and
dec
cmp
push
jle
movsl
push
mov
int
pop
test
inc
mov
pop
and
jns
push
leave
shl
xchg
sbb
push
lods
push
or
ret
inc
mov
test
jmp
and
sbb
addb
aam
arpl
test
lret
dec
in
stc
and
inc
adc
pusha
mov
sub
jmp
nop
sub
sub
test
in
push
pop
dec
and
ficoms
lret
fisubs
ljmp
in
dec
dec
in
dec
fwait
stos
mov
insl
shl
idiv
int3
xchg
lret
sbb
inc
dec
sbb
mov
sbbl
fadds
lock
popf
pop
mov
push
xchg
xchg
data16
jg
ja
mov
mov
xchg
aad
xor
xor
mov
xor
and
cmp
pop
out
push
xchg
roll
fs
sub
icebp
sub
pop
jo
stos
loopne
xchg
gs
repz
add
cltd
pshufw
cmpsl
sbb
imul
pop
mov
adc
add
std
or
adc
movsl
sbb
cmp
jecxz
outsl
lret
sub
fsubs
mov
mov
xor
ljmp
push
imul
add
notl
sbb
push
rcrb
xor
pop
cmp
sbb
cltd
sbb
sbb
sub
adc
out
lock
xchg
sub
outsl
xchg
lods
rcr
arpl
int
xchg
jb
xor
movsl
dec
mov
lcall
jmp
xchg
icebp
leave
and
sub
jmp
sbb
nop
mov
lock
sub
je
stos
lods
add
sub
mov
add
mov
push
xor
or
add
in
xor
xchg
xor
dec
xchg
lcall
out
dec
shl
mov
std
fs
dec
adc
or
cwtl
fldt
push
aaa
cmpsl
adc
and
ja
dec
out
jmp
out
sub
push
cli
pop
xor
adc
lds
mov
adc
cmc
rcr
mov
sbb
push
sbb
scas
popf
jp
inc
in
sub
jle
daa
inc
dec
mov
pop
xor
fimuls
ljmp
and
ja
ret
lods
mov
jge
inc
sbb
xor
jmp
mov
int
cmp
sbb
sbb
sarb
bnd
fcoms
ret
movsb
sbb
xchg
sti
cmpsl
push
iret
and
sbbb
xchg
mov
orb
insl
or
mov
fimull
scas
lahf
stos
xchg
sbb
sub
xchg
ficomps
dec
jl
mov
cmpsl
mov
stc
loopne
or
sahf
dec
leave
pop
add
leave
mov
add
sbb
sbb
dec
shr
jb
sbb
rol
mov
sbb
fdivr
mov
aam
movsb
cmp
out
cs
jl
int
and
mov
xchg
pop
stos
add
lahf
out
or
movsl
add
and
ja
dec
mov
jbe
sbb
cmp
fcmovnbe
rcrb
repz
je
out
sbb
mov
pusha
nop
jecxz
lods
jbe
xchg
sbb
xchg
jnp
mov
dec
inc
ret
fwait
out
lea
fisubrl
push
sbb
aaa
push
loope
jmp
gs
pushf
mov
pushf
lock
xor
inc
loop
push
insb
mov
dec
shll
mov
sbb
jbe
mov
sbb
xor
cltd
push
add
add
sub
mov
pop
xor
lea
call
pushf
pusha
add
push
pushf
pusha
mov
lea
jmp
setnp
test
add
bswap
test
dec
mov
xor
shl
adc
add
rcr
aaa
clc
movzbl
setp
or
add
neg
cmc
push
bsr
mov
lahf
sbb
xor
shr
lea
test
bt
mov
btc
lea
bt
clc
mov
movsbl
mov
sbb
shl
pushl
adc
shr
btc
rcr
add
btc
shrd
jmp
mov
jmp
jmp
adc
pushf
mov
inc
pop
inc
push
jo
jo
mov
stos
push
aaa
xor
jo
xor
add
cmpsl
xor
mov
test
push
cmc
sbbb
push
push
add
push
sub
sub
loopne
iret
jns
orb
adc
scas
mov
stos
sub
roll
ss
xchg
mov
mov
std
mov
jno
dec
push
xor
mov
mov
loop
imul
int
mov
call
xchg
push
inc
jnp
sub
inc
mov
lea
cs
out
or
lods
jnp
xor
jae
sbb
cmp
sbb
cli
js
cmc
dec
add
xchg
inc
test
mov
adc
sbb
mov
notl
xor
pop
in
stos
scas
jo
aam
bound
xor
dec
imul
mov
inc
xor
cmc
pop
and
adc
fbld
pop
imul
or
pop
pop
loope
lock
adc
stc
pop
mov
dec
scas
jmp
and
xor
push
mov
scas
mov
mov
pop
xor
dec
jl
adc
pop
mov
dec
dec
jbe
test
inc
lds
jns
adc
test
loopne,pt
lds
jns
dec
inc
pop
dec
cmp
bnd
out
enter
movl
mov
mov
aad
sub
test
inc
and
cltd
dec
sub
sbb
imul
pop
add
ss
mov
idivl
pushl
movl
pop
outsl
mov
push
in
mov
xor
pop
insb
stos
xor
and
push
inc
sub
or
push
lcall
arpl
lcall
sbb
adc
pop
jp
stc
fldt
das
test
sub
xor
mov
andb
xor
rcll
sbb
insl
fidivl
jl
lock
les
xor
lcall
movsb
add
mov
inc
iret
mov
cltd
adc
adc
cld
das
insb
test
xchg
add
jmp
jb
jb
or
jo
mov
jmp
mov
sub
arpl
push
xchg
test
pop
ret
ret
dec
insl
mov
pop
mov
inc
jno
je
lea
inc
es
out
inc
push
data16
fldt
sub
jnp
push
testb
pusha
add
jno
addr16
fiadds
mov
jecxz
jp
xlat
stos
pop
and
mov
inc
je
scas
loop
xchg
mov
dec
lods
enter
and
jmp
jp
pushf
movl
push
mov
pusha
movl
movl
movw
mov
pusha
lea
jmp
movl
movb
movb
mov
lea
jmp
shr
cmc
add
neg
sar
shr
cmc
movzbl
bts
neg
shl
add
rcr
pushf
ror
inc
add
not
pushf
shrd
xor
sbb
btc
add
movsbw
movzbw
xor
jmp
add
btr
movzbw
sub
test
shld
btr
sar
push
add
stc
push
xchg
sbb
clc
mov
stc
rcr
push
cmp
rol
btr
mov
movzbw
cmc
btc
inc
push
stc
mov
call
inc
push
jmp
movb
movl
jmp
pusha
pusha
movl
jmp
add
push
movsb
int3
fdivl
jl
in
xor
stc
xlat
gs
test
test
lock
popf
xchg
imul
in
xor
cmpsl
sbb
sbb
sbb
cld
pop
sub
gs
ffree
fs
add
lret
loope
ret
pop
cs
pop
xchg
movsl
jae
shll
sub
in
inc
sbb
sbb
jge
dec
pusha
jmp
mov
clc
aam
cmc
movsbw
mov
pushf
jmp
cmc
clc
add
stc
movzbw
rol
add
sbb
inc
sub
shld
xor
pushf
jmp
pop
test
jns
ds
data16
mov
pop
loope
or
jp
sbb
jo
or
in
ret
dec
xchg
pop
jo
inc
push
outsl
sub
jle
pop
adc
je
xchg
and
int
push
mov
jg
lret
mov
mov
or
das
fwait
xor
repnz
sub
flds
fwait
outsb
xchg
adc
and
jns
cltd
adc
cmp
jno
pusha
push
movl
pushf
pushf
call
movl
pushf
call
pusha
movb
call
movl
pushf
movb
pushf
pushl
lea
jmp
pushf
movl
pushf
movb
pusha
call
push
push
push
movb
pusha
movl
push
push
mov
lea
jmp
push
inc
or
orb
mov
out
mov
js
mov
imul
mov
leave
cld
cmp
fbld
outsb
daa
icebp
xorl
dec
out
out
cs
push
imull
jo
add
lods
sbb
scas
push
movl
push
lea
jmp
movl
pusha
pushl
movb
lea
jmp
lea
jge
call
pusha
pushf
movl
pushl
pushf
pushl
movb
lea
jmp
pushl
movl
pushf
pushf
lea
jmp
jmp
pushf
lea
mov
mov
mov
mov
lea
jmp
lea
bt
push
shr
test
push
jmp
lods
push
cmpl
fs
enter
stc
and
outsb
mov
stos
fldl
fbstp
xor
dec
and
inc
outsl
aaa
mov
inc
mov
repnz
or
and
fdivrp
out
sub
inc
add
les
ja
pop
jnp
out
mov
les
inc
pop
adc
adc
dec
pop
jbe
ljmp
stos
mov
pop
dec
outsl
dec
stos
or
dec
bound
sbb
test
movb
cmp
jae
out
nop
jmp
aad
ja
push
push
pusha
or
inc
mov
adc
mov
jmp
scas
popf
inc
and
arpl
cs
jae
lcall
mov
mov
mov
dec
lret
out
outsb
in
rorl
or
loop
jg
hlt
cmp
pop
repz
dec
insl
inc
imul
fmull
dec
cmpsb
aad
dec
mov
lods
and
mov
pop
idivb
out
mov
push
out
pop
adc
test
push
cmpb
sub
mov
je
imul
mov
cmpsl
loop
and
inc
mov
popa
sbb
sbb
lret
testl
dec
shlb
mov
adc
mov
lret
data16
mov
les
test
jns
shrl
push
pop
aaa
repnz
push
test
jb
inc
and
dec
cmc
mov
scas
adc
test
aad
outsb
bswap
jp
movsl
jp
rcll
sti
adc
scas
mov
and
pop
and
out
ret
pop
pushf
repz
negb
push
cmp
inc
fdivrs
out
inc
mov
mov
nop
and
sahf
stc
sti
dec
add
ja,pn
dec
dec
mov
adc
pusha
mov
xchg
cmc
gs
xor
or
inc
cld
movaps
dec
xchg
es
xchg
cwtl
mov
ljmp
js
add
stos
push
xor
or
cmp
mov
inc
push
hlt
jne
ss
dec
stos
cmp
dec
addl
fwait
or
andl
imul
xor
dec
sbb
cmpsl
cmp
cmp
pushf
rcrb
test
add
mov
bts
into
add
rcr
add
or
push
add
loopne
rcl
stc
and
adc
xor
fidivrl
inc
jbe
ljmp
imul
lods
pop
hlt
ljmp
inc
mov
sub
movsl
popa
out
dec
mov
lret
add
inc
nop
inc
dec
sub
jno
add
adc
xchg
rep
add
jns
fdivr
ljmp
int
add
rolb
jle
cs
hlt
in
mov
cmpsl
jbe
mov
mov
icebp
rorl
popf
mov
cmpb
xor
dec
inc
movsb
rcrb
jl
pushf
clc
mov
dec
mov
jge
pop
push
stos
inc
loop
es
lahf
nop
pop
mov
xchg
mov
add
mov
add
jae
add
lock
adc
arpl
in
jns
inc
insl
pmulhw
popa
inc
fildll
cmp
lock
sub
ss
call
jae
jne
xlat
in
call
into
xchg
push
and
movsb
shrl
out
jae
add
mov
outsb
stos
fs
clc
jno
inc
loopne
xchg
fstps
adc
cmpb
shlb
dec
and
stc
dec
and
sbbb
inc
xchg
adc
sbb
push
sbb
xor
adc
add
push
mov
xchg
xchg
pop
push
test
sub
mov
leave
push
lods
adc
sbb
dec
add
int
jmp
ljmp
fwait
sbb
mov
jle
int3
xor
cwtl
dec
call
jae
lret
jae
pusha
hlt
in
sbb
clc
fcoms
cltd
mov
sbb
mov
jae
out
pop
and
rcrl
ja
aas
call
jbe
je
movsl
jb
scas
dec
inc
shlb
js
fwait
pusha
xchg
popa
leave
leave
movsb
xor
sbb
pop
and
fmuls
and
sub
fldt
mov
cmpsb
jp
stos
test
cmpl
outsl
sbb
mov
test
push
gs
dec
dec
mov
push
popa
or
fdivr
adc
mov
jae
mov
test
push
add
cmp
add
mov
fistps
xor
xchg
lods
sub
out
dec
xchg
lock
fdivrl
cmp
push
mov
nop
loopne
popf
sbb
loop
aas
bound
orb
cltd
fs
xor
jae
pushf
pushl
movl
mov
lea
jl
pushf
movl
pushf
pushl
lea
jmp
lock
sbb
cwtl
divb
push
adc
pop
outsl
cmp
leave
xchg
movsl
xor
sbbl
mov
add
mov
push
js
xchg
xchg
add
dec
pushf
sti
cmp
cwtl
inc
sbbl
xor
mov
push
mov
xchg
pop
dec
ljmp
repz
stos
adc
inc
inc
mov
ss
scas
adc
dec
movsl
mov
cmpsb
pop
arpl
gs
push
icebp
in
inc
repnz
push
pop
mov
ss
dec
in
jo
mov
mov
lcall
mov
lock
imul
js,pt
cmp
popf
jmp
outsl
push
jno
inc
test
sahf
push
cwtl
imul
int3
or
mov
xor
mov
push
and
adc
and
jle
incb
cmp
addl
lock
cmpsl
out
jae
daa
ss
xor
push
add
sti
cwtl
xchg
dec
pop
out
repz
dec
fwait
arpl
xor
imul
es
jmp
pusha
dec
jl
push
adc
pop
hlt
sub
nop
sub
jge
cmp
iret
mov
sarl
cmp
fistps
xchg
js
cmp
lahf
and
adc
mov
loopne
jle
and
xchg
ss
sub
jne
lods
push
mov
ret
repnz
sub
mov
enter
scas
jecxz
dec
push
scas
xor
xchg
adc
lods
fidivrl
cmp
push
inc
xchg
mov
push
inc
loop
sbb
xchg
insl
add
les
sbb
pop
jne
jnp
popf
test
mov
add
imul
insb
aas
into
fnstsw
lcall
test
and
pop
or
and
mov
movsb
mov
repnz
push
loop
sub
data16
jnp
loopne
pop
xor
in
mov
adc
pusha
addl
push
dec
mov
jae
push
lods
and
sub
test
cmpsl
cmp
dec
xlat
fwait
out
movsb
add
add
pop
call
sbbb
xor
xchg
xchg
loope
call
or
jge
sbb
jne
adcb
pop
sbb
popf
jne
xchg
pushf
jmp
mov
jae
popa
or
dec
dec
jnp
xor
xlat
les
inc
jae
jbe
inc
adc
or
adc
stc
cmp
ljmp
insb
leave
call
jns
xchg
cltd
push
fldl
enter
xchg
and
mov
add
xor
xor
scas
cli
xor
and
sub
fisubrl
add
repnz
push
sbb
jae
inc
xchg
lahf
mov
testl
cltd
push
xor
sbb
cltd
jmp
adc
into
iret
in
mov
in
cltd
push
sub
insb
fldcw
jle
je
and
xor
pop
repnz
aam
push
and
fldt
mov
bnd
add
add
adc
lods
or
popa
mov
sbb
push
and
mov
or
push
xorb
add
cmc
adc
sub
add
insl
setno
jbe
push
xchg
xchg
pop
pop
out
dec
inc
imul
jmp
rcrb
cmp
into
and
cmp
mov
push
lret
pop
fbstp
cld
mov
adcl
adc
inc
mov
adc
shlb
loop
jge
and
icebp
mov
ja
sub
and
and
enter
popf
enter
mov
add
les
fidivl
sbb
cwtl
sub
mov
addr16
mov
mov
aam
ljmp
dec
dec
add
out
dec
pusha
shrl
testb
subb
mov
push
add
iret
sbb
lcall
push
dec
lds
out
push
popf
mov
mov
pusha
outsl
aad
xor
or
in
mov
mov
shlb
pop
inc
xchg
jno
inc
mov
jns
orb
cmovl
test
int3
arpl
mov
lahf
cmp
jg
in
cmp
fisttpll
jecxz
movhps
xchg
popf
int3
into
mov
scas
cmp
scas
push
std
cmp
cmp
sbb
mov
adc
mov
xchg
cli
sbb
outsl
xor
mov
sbb
cld
imul
das
cmp
imul
cmp
repz
sbb
mov
fmull
mov
cmpsb
cmp
and
sub
sub
push
lcall
lcall
movsb
mov
scas
or
lea
leave
mov
and
inc
scas
iret
sub
pusha
jecxz
das
inc
daa
xchg
in
repnz
adc
cltd
xchg
and
not
test
arpl
jb
inc
mov
sub
jne
call
cmpsl
bound
les
aam
and
xor
adc
add
int
cs
push
lods
sub
mov
popf
repz
add
into
data16
std
pop
inc
xchg
or
xchg
pop
and
data16
out
or
jp
mov
sub
sbb
xchg
lahf
xchg
jno
gs
into
imull
cmp
jne
mov
xor
adc
adc
jg
addb
mov
push
sbb
rcl
nop
jmp
clc
pop
fnstsw
mov
add
popa
bound
mov
pop
pop
adc
lds
dec
pop
cli
add
cmp
sub
jb
rclb
leave
xchg
arpl
aad
faddp
rcrl
outsb
int3
aas
sbb
add
scas
add
leave
xor
push
jecxz
mov
xchg
dec
pop
jbe
or
pop
dec
mov
movsb
rol
mov
sahf
movsl
sbb
xchg
lcall
xor
add
rcrl
adc
pop
inc
and
lea
jg
notl
push
inc
jae
fimull
sub
notl
mul
addr16
and
push
add
mov
outsl
insb
mov
pop
int3
popf
call
push
loopne
cwtl
sub
jns
add
dec
inc
out
cltd
add
out
jmp
jmp
jmp
jmp
pushl
movl
push
pushf
pushl
lea
jmp
movl
jmp
and
mov
add
outsl
sub
cmpsl
adc
shrl
mov
repnz
and
es
xor
add
or
cmp
cmp
scas
sahf
in
leave
arpl
es
jbe
stos
fstl
xchg
dec
mov
ficoms
test
lock
dec
cmp
pop
push
adc
sub
sub
mov
ret
add
jle
dec
into
mov
and
pusha
loop
mov
cmpsl
je
adc
mov
inc
xor
and
cmp
pop
push
ret
stos
cwtl
cmpsl
lcall
xor
push
dec
push
ljmp
pop
out
adc
inc
aad
cs
mov
cltd
add
fiadds
ja
cmp
stos
and
ret
into
mov
mov
incl
mov
in
push
jge
cld
or
arpl
call
cmp
aaa
mov
repz
xor
arpl
push
push
jge
mov
add
mov
ss
push
push
insl
lret
mov
sbb
xor
test
ja
mov
aas
adc
arpl
in
test
scas
cwtl
mov
cltd
add
jnp
test
bt
sub
jmp
cmp
xchg
ljmp
mov
push
fildll
dec
or
lcall
mov
add
add
mov
rclb
out
sbb
dec
loop
mov
outsb
das
xor
lea
sbb
sub
sub
inc
jge
mov
jae
push
xchg
dec
mov
and
pushf
notb
pop
daa
push
popf
fdivr
daa
lahf
int
sbb
xchg
xchg
jns
jnp
loopne
sub
and
inc
cli
rcll
push
cmc
push
adc
pop
inc
nop
insb
pop
pop
pop
call
or
mov
push
sti
push
movsb
adcb
jg
decl
in
repnz
jl
lcall
aas
repnz
inc
adc
dec
faddl
add
test
mov
in
lret
mov
in
push
pushl
inc
hlt
shl
jns,pt
cmp
sub
les
test
js
push
xchg
lret
xor
xor
dec
add
in
int3
or
cwtl
jmp
in
scas
pop
dec
andl
out
aas
xor
lods
jae
dec
jecxz
cmp
sub
ljmp
fisttps
or
sub
leave
xor
dec
cmp
in
pop
sbbl
jmp
mov
mov
mov
test
stos
add
std
xor
jmp
inc
ret
out
aad
xchg
ret
imul
xchg
fwait
mov
sub
xchg
test
sbb
popa
adc
rclb
daa
or
pop
dec
rcrb
mov
andb
adc
repz
int3
test
lahf
js
fidivrs
ja
decb
out
call
add
bound
jns
pusha
pop
lock
clc
repz
test
xchg
dec
addl
shll
out
sarb
xor
pushf
pushf
movl
jmp
inc
add
shrd
add
cmc
movzbw
test
rcr
shl
lea
movsbw
movzwl
setns
inc
mov
call
shr
push
add
stc
jmp
pushf
jmp
movl
pusha
movl
mov
lea
jmp
call
jmp
call
out
or
push
cld
sbb
cmp
test
mov
dec
xor
js
jl
aaa
les
mov
fidivs
mov
xlat
loope
fucomi
outsl
loope
mov
out
ds
sbb
call
xor
xor
clc
shll
push
mov
test
shlb
sti
dec
push
scas
sarb
rol
cli
stos
push
aaa
adc
mov
stc
and
lds
std
xor
hlt
stos
mov
inc
jo
call
arpl
ljmp
cmpb
jl
push
xchg
adc
xor
inc
orb
ret
jecxz
push
and
xchg
xchg
lods
loop
dec
scas
sub
test
out
insb
shll
int
and
xchg
fwait
ja
leave
test
pushf
cmp
pop
and
outsb
jno
and
inc
out
push
push
jne
insb
iret
in
mov
and
aaa
mov
mov
insb
hlt
pop
lahf
fwait
push
aas
inc
push
mov
in
pop
cmovnp
pop
in
push
es
lods
movsb
mov
lahf
repnz
jo
xchg
je
cmpb
call
addb
or
es
jno
cmp
push
das
mov
xchg
jle
bound
adc
push
pusha
mov
test
icebp
adcb
je
xchg
imul
add
xchg
dec
mov
xchg
cmpsb
popf
inc
aam
hlt
fs
icebp
add
jmp
push
push
sbb
push
dec
adc
out
and
addb
xor
std
mov
sbb
js
es
sbb
imul
imul
cwtl
cld
imul
and
adc
outsb
pop
adc
pop
add
sub
int3
xor
aaa
xchg
psraw
sub
xchg
movsb
out
push
xor
mov
insl
movsl
insl
data16
cmp
push
push
imul
test
inc
dec
mov
out
lods
out
idiv
nop
in
xchg
fnstsw
stos
fdiv
enter
pusha
movsl
or
xchg
subl
cld
stos
stc
xchg
popa
out
mov
or
movaps
or
popa
adc
push
push
xor
mov
icebp
push
xchg
add
cmpsb
icebp
cmpsl
or
cmp
inc
sub
neg
cmp
xchg
inc
mov
repnz
adc
xor
xchg
lcall
jb
dec
ljmp
mov
push
aad
lret
inc
rcrb
mov
push
dec
mov
cmp
dec
aaa
jae
out
aaa
shll
cmp
fildl
imul
es
nop
mov
movsl
adc
fwait
ljmp
pop
sub
xor
imul
sub
inc
ds
lahf
jnp
mov
or
loope
lods
divb
dec
out
lahf
lcall
jbe
je
or
pop
dec
andl
xor
out
lds
repnz
jae
xchg
pop
cmpb
xchg
lods
add
mull
or
sahf
lcall
sti
jno
inc
mov
sbb
mov
pop
xor
fdivs
cwtl
cli
je
in
sub
sarb
mov
mov
stos
aaa
pop
jp
pop
ja
jecxz
dec
jne
jecxz
pop
insl
pop
sbb
lods
dec
jne
ret
fidivrs
rcr
jmp
sbb
jle
cmp
lahf
popf
call
sahf
xor
aaa
jle
sbb
test
sahf
cmp
xchg
inc
loope
xchg
xlat
aam
pop
and
xchg
test
or
mov
xchg
fisubl
adc
fistps
pop
jle
add
sbb
rcrl
cmp
inc
jle
imul
pop
hlt
xchg
xchg
or
frstor
iret
imul
test
test
jb
lret
stos
lret
dec
inc
inc
adc
mov
lods
or
mov
lret
xchg
dec
push
pop
mov
or
xchg
mov
adc
push
mov
icebp
xlat
addl
sub
dec
xchg
mov
and
loop
dec
shll
scas
dec
mov
sbb
push
cmp
fnstsw
bound
pop
cmp
aad
pop
sbb
fwait
imul
jo
mov
in
sub
jns
pop
push
xor
sbb
outsb
dec
xchg
add
mov
dec
pop
pop
test
dec
lods
sub
jb
and
push
js
sbb
mov
jo
clc
sbb
leave
imul
std
test
fbld
mov
jp
subb
in
daa
addr16
push
ja
and
insb
fucom
and
pop
and
pop
movsb
dec
jns
mov
pop
add
inc
pop
or
cwtl
clc
inc
test
jnp
xchg
xor
sub
pop
sbb
fdivs
jbe
repnz
add
mov
and
ds
movsl
xchg
scas
scas
adc
jle
adc
jge
adc
in
cmpsb
add
cwtl
clc
push
dec
xchg
adc
daa
lcall
lcall
adc
xchg
rclb
mov
sbb
xor
int3
jne
std
cmovg
pop
jbe
adc
inc
push
lock
push
jno
dec
and
adc
out
push
in
push
imul
mov
subb
jae
add
xor
stos
and
push
jo
jns
xchg
es
aaa
lock
les
stos
aad
inc
xor
xchg
scas
jno
xor
add
pop
mov
or
sub
adc
inc
and
sbb
data16
add
pop
xchg
lret
cmp
in
mov
stc
xchg
imul
mov
and
scas
scas
mov
pop
jnp
push
jno
mov
mov
xchg
cmp
rcrb
fs
inc
out
pop
cld
repnz
addr16
mov
scas
lahf
int3
push
mov
cld
mov
xchg
enter
cli
xchg
push
and
outsl
lock
push
xchg
repnz
cwtl
jno
sbb
push
insb
mov
sbb
adc
loopne
and
clc
xorl
insb
dec
push
lods
dec
xchg
sub
ljmp
xor
mov
ficoms
aas
outsb
add
rorl
xchg
cli
mov
sbbb
in
push
xor
push
jne
mov
insl
mov
xor
push
insb
xchg
xor
adc
sbbb
push
mov
inc
loop
dec
adc
adc
xchg
pop
dec
jo
add
call
outsl
mov
dec
subb
cwtl
xchg
scas
jmp
stos
inc
insb
negb
mov
jo
les
pop
sbb
aaa
xor
dec
mov
mov
adcl
mov
mov
test
xchg
mov
std
xchg
std
and
add
jne
xchg
xlat
jle
cmp
je
and
xor
mov
enter
imulb
inc
je
sub
js
jge
sbb
sbb
loop
xor
movl
pushf
movl
movw
pushf
pusha
lea
jmp
adc
xchg
shll
bound
in
shrb
add
xor
ja
insb
lods
dec
divb
into
push
sub
roll
scas
ja
cmp
mov
add
scas
sub
add
dec
leave
xorb
rolb
iret
jmp
hlt
jecxz
int
mov
aas
mov
cmp
lock
cwtl
hlt
repnz
mov
add
in
in
rclb
add
cmpsb
cmc
adc
imul
lds
outsb
lahf
adc
movsl
in
pop
pusha
sub
mov
push
add
mov
mov
enter
dec
push
inc
xchg
fwait
lods
mov
pop
push
roll
subb
pop
sub
rol
sbb
cwtl
cmc
pop
popa
les
sub
inc
les
int3
xchg
mov
iret
pop
mov
jno
rorb
mov
mov
sbb
rcr
jne
and
pop
ljmp
pcmpgtd
push
add
mov
push
test
cwtl
cmc
sbb
popa
out
dec
sub
inc
ret
mov
mov
lea
es
movsb
mov
fwait
cmp
push
mov
sahf
ret
dec
mov
adc
jae
pop
rclb
jno
jae
sbb
bound
testl
mov
inc
jmp
cltd
insb
lret
sbb
dec
sbb
mov
inc
and
inc
lock
push
fs
sti
repnz
fnstsw
sti
sbb
adc
add
movsl
lret
in
inc
int
xor
jg
or
ds
add
lahf
int
pushl
aas
jbe
pop
adc
fsubp
pop
mov
cld
cmc
add
dec
mov
xor
in
push
mov
add
mov
in
rdmsr
cwtl
hlt
loopne
scas
xchg
xchg
xchg
jne
xor
push
sub
dec
mov
jo
aas
xchg
in
cwtl
repz
int3
xchg
aas
pop
sub
jbe
loopne
leave
pop
stc
repz
mov
fwait
aam
xor
ljmp
stos
iret
ja
xor
pop
testl
cmp
mov
sti
push
xor
push
jl
pop
lahf
push
mov
xchg
lret
aam
cld
out
cmpsb
cmp
fdivrs
movsb
sbb
mov
out
in
repnz
call
or
neg
ss
and
lcall
dec
adc
out
xchg
or
jle
xchg
cltd
icebp
jbe
cmp
flds
adc
js
xor
jmp
bound
add
pop
mov
xor
sti
mov
je
jne
bound
movsb
mov
test
stos
push
js
push
rcrb
ret
mov
cmp
xor
push
lcall
mov
movntps
or
add
jo
xor
cmp
repnz
ret
in
testl
icebp
dec
lock
sbb
mov
loope
neg
jl
xrelease
test
divl
and
adc
inc
inc
add
popf
ss
push
add
lahf
fimull
and
add
clc
dec
mov
xor
adc
in
mov
pop
shll
pop
clc
nop
decl
cmp
jbe
jns
adcl
push
enter
inc
adc
je
dec
sub
rorl
leave
mov
pop
adc
bound
movsl
add
jno
leave
mov
hlt
push
pushf
mov
imul
loopne
rol
loopne
fdivl
mov
cmpsb
scas
cmp
sbb
add
xchg
sub
cmc
test
cmc
inc
in
mov
xor
jmp
rorb
push
mov
cmp
stc
pop
xor
imul
fdivrl
fwait
or
aam
dec
and
adc
int3
clc
lcall
xor
dec
dec
test
cmp
jmp
test
sbb
dec
clc
fwait
nop
jge
dec
push
mov
jg
sbb
hlt
pop
sbb
ss
ds
inc
bound
mov
push
mov
loop
je
adc
ja
xorl
das
adc
pop
subl
cs
mov
insb
jnp
notl
loope
stos
inc
filds
pop
mov
cmpl
bound
dec
scas
mov
cmp
inc
or
sarl
push
mov
in
pusha
mov
sub
add
jbe
lahf
sti
arpl
fs
arpl
inc
out
cmc
and
mov
xchg
xchg
xchg
iret
aam
mov
mov
cld
out
jnp
lods
ret
cmp
imul
out
ja
xchg
rolw
bound
jmp
dec
fs
enter
lods
adc
pop
inc
mov
enter
pop
jecxz
inc
and
decb
test
and
dec
mov
ror
dec
iret
shl
mov
jmp
out
shrl
cmp
ja
arpl
sbb
inc
inc
sub
push
sarl
test
cwtl
out
sahf
sub
fwait
lock
fcomps
push
nop
add
repz
or
roll
xchg
add
ret
xor
imul
inc
pop
and
xor
aad
add
arpl
pop
hlt
add
ret
sub
rcrb
mov
mov
imul
jmp
sbb
inc
push
sbb
push
jmp
movsl
push
mov
cmp
xchg
cmp
ja
push
mov
fisttpll
push
pop
xor
dec
mov
add
dec
jbe
xor
lods
fcmovb
mov
imul
push
sbb
faddp
add
inc
pusha
pop
fwait
inc
cmp
jae
js
repz
inc
jg
mov
adc
shr
push
xchg
jle
xchg
mov
mov
cmpsl
pop
shrl
sti
xor
or
out
mov
call
or
lcall
fistps
rorl
decb
jp
pop
fidivrl
aas
mov
jge
fmuls
iret
outsl
jae
stc
dec
dec
lds
add
mov
movsl
mov
sahf
dec
out
shll
xchg
mov
test
sarl
push
mov
iret
push
loopne
mov
pop
xchg
pop
repz
shlb
notb
xor
insb
daa
add
xchg
lock
xor
lahf
int3
ficompl
ret
in
loop
dec
mov
pop
xor
sbb
mov
dec
lock
mov
mov
enter
and
sub
stos
inc
outsl
in
hlt
cmp
fstp
dec
popa
imul
cmp
mov
shll
retw
push
rcrl
loope
add
sub
jnp
dec
iret
or
in
pushf
test
mov
jmp
ljmp
les
mov
in
out
in
or
inc
stc
inc
add
loop
xor
dec
ja
aaa
cwtl
xor
jmp
pop
je
aas
mov
ktestw
sahf
int3
push
bound
pop
xchg
sub
imul
cld
scas
mov
xor
daa
loopne
adc
cli
rdmsr
cmp
mov
mov
movsb
ds
in
int
test
lret
cmp
cvtps2pd
std
pop
stc
es
xor
adc
insl
push
es
xor
mov
add
adc
dec
in
cwtl
dec
in
cltd
adc
jns
or
push
pop
mov
dec
loop
aam
or
adc
lods
push
push
lock
xor
nop
sub
into
sahf
mov
adc
loop
lcall
adc
mov
adc
mov
adcb
ret
cmp
inc
cwtl
cmp
rcr
jmp
cmp
rcrl
jp
add
xchg
jno
call
mov
shr
cmpsb
pop
fstl
shlb
xor
adc
xor
pop
div
mov
nop
pop
dec
das
or
fstpt
or
les
sub
jae
gs
pushf
xchg
shrl
xchg
and
jg
xchg
jmp
inc
andl
shrd
lds
dec
test
loope
dec
pop
or
out
outsb
xor
push
mov
fistl
fstpt
sub
insl
aam
sarb
addb
imul
call
les
sub
in
ret
mov
ja
idivl
sahf
sub
jae
inc
std
jae
inc
rdtsc
add
add
repnz
mov
rcrb
dec
into
lock
sub
inc
sub
sbbl
sahf
sti
sar
pop
iret
sbb
or
cwtl
addr16
jb
push
jno
cmpsl
filds
or
shlb
pop
mov
bound
popf
incb
push
rcll
push
in
pop
jle
push
mov
push
or
sbb
xchg
adc
sbb
lcall
movntq
xchg
push
fcomi
xor
push
sub
scas
out
add
fisubs
lods
pop
adc
out
gs
es
mov
fildll
xchg
mov
test
pushf
adc
xor
les
adcb
mov
lret
sub
shl
ljmp
shrl
rcrl
pop
sub
xchg
dec
mov
icebp
mov
fmull
popa
cmp
idivl
lods
jbe
sub
pop
xchg
inc
scas
sub
inc
aad
xchg
jmp
push
mov
pop
xor
jnp
std
xchg
repz
pushl
dec
dec
mov
add
aad
adc
jne
push
mov
mov
mov
lret
into
ret
ja
aam
stc
xor
mov
enter
leave
cmpsl
sbb
pop
std
dec
pop
inc
xor
imul
mov
aaa
xchg
jge
jecxz
or
imul
sbb
arpl
dec
and
loop
repz
xchg
adc
inc
jle
xlat
xchg
xchg
jo
inc
add
and
sarl
repz
mov
scas
popa
scas
out
sub
cmp
cs
push
and
repnz
outsb
aaa
fadd
lcall
mov
sub
pushf
cli
jnp
inc
repnz
push
lea
orl
aas
out
imul
inc
cmp
pop
sub
idivl
push
lods
sbb
sub
ss
or
dec
sub
xor
pop
jl
ds
jnp
xor
xor
scas
inc
gs
repz
jl
and
cwtl
ljmp
test
mov
inc
dec
outsl
and
scas
push
std
sub
cltd
testl
ljmp
rolb
cmp
lcall
jle
adcb
jecxz
pop
sbb
lahf
shll
ja
roll
pop
mov
movsb
xchg
stos
ret
add
popf
stc
out
sub
mov
mov
mov
mov
out
ret
mov
fstps
xor
inc
lods
or
jg
jle
aad
movsl
push
pop
loope
jmp
mov
jle
sub
xor
cs
negl
jg
ljmp
mov
inc
or
insl
loope
cmp
cli
insl
xor
call
pop
jne
imul
push
and
jnp
cmc
add
shlb
mov
sti
inc
xor
xor
jne
pop
pop
stc
sahf
cli
mov
push
pop
jbe
or
ja
mulb
xor
mov
andb
js
or
imull
jno
out
jns
pushf
cmpsb
fnsave
push
push
add
shl
repz
sub
dec
iret
in
in
adc
out
mov
jae
or
sbb
cwtl
call
cmp
imul
pop
xchg
cmovl
adc
cmp
sub
sub
scas
inc
ret
ret
adc
js
jmp
xlat
lahf
xchg
mov
orps
xor
xor
outsb
sub
cwtl
call
jmp
inc
ljmp
shrl
movsl
xor
test
xchg
dec
push
loopne
movsl
test
push
aas
shl
sbb
cmp
mov
cwtl
call
inc
and
sub
aaa
ret
lea
jmp
pushf
push
push
movl
pusha
pushf
jmp
lea
js
je
daa
mov
pushf
stc
test
movl
call
jmp
pop
or
inc
jmp
nop
enter
aas
adc
inc
cmpsl
push
add
js
imul
jge
jge
std
mov
es
iret
push
leave
lahf
addr16
cmp
imul
sbb
push
jae
bound
sti
push
mov
xchg
in
cmpsb
xchg
mov
xchg
xchg
sbb
cmp
mov
pop
cmp
pop
mov
xor
test
imul
iret
imul
xor
pop
nop
aaa
pop
mov
test
dec
adc
and
mov
test
aas
rolb
fstl
jbe
jae
adc
mov
nop
xchg
xor
fstps
movmskps
or
lea
gs
imul
cwtl
out
gs
jg
scas
inc
out
out
xchg
in
mulb
jg
out
xor
mov
jmp
jb
xor
add
sub
xor
xor
jnp
jno
shrb
sbb
cli
adc
fnsave
in
mov
shll
enter
movl
sub
aas
mov
xchg
unpcklps
and
xlat
cmc
clc
or
loope
pop
ds
xor
repz
inc
cmpps
scas
arpl
xor
out
xor
test
push
movw
lea
jge
neg
sbb
mov
pop
bts
add
lea
pop
btr
cmp
pop
btr
stc
pop
push
pushl
jmp
push
jmp
pushf
cmc
cmc
mov
sar
shr
movsbw
setle
movzbw
clc
clc
cmp
shl
pushl
or
clc
pusha
call
lods
ret
push
movups
mov
rcl
outsl
lods
aaa
into
das
aad
sub
mov
repz
outsl
mov
inc
imul
cmp
aas
push
xor
nop
mov
push
scas
dec
clc
sbb
and
in
fnstenv
jb
push
mov
push
xchg
into
ja
or
sub
insl
lret
adc
sbb
mov
xlat
push
in
pushf
xor
jb
and
loop
mov
iret
push
rorb
cmp
jp
rclb
and
das
mov
mov
cmp
rcrb
aam
mov
stos
sub
or
push
mov
int3
lods
or
jb
mov
aam
inc
insl
ret
das
ds
lahf
fwait
neg
fwait
pop
mulb
mov
loop
and
cmp
lock
popa
push
cmpsb
fidivl
gs
shll
sub
xor
dec
outsl
mov
sub
and
xor
cmp
arpl
pop
mov
das
outsl
dec
repz
and
aaa
js
out
push
push
out
mov
mov
fwait
lea
jae
xor
enter
push
bound
mov
rol
cmpsl
push
daa
cmc
mov
js
push
xor
mov
mov
out
adc
sub
shrl
lret
daa
and
jg
jne
mov
sbb
repnz
xor
movb
mov
ja
imul
in
into
xor
inc
add
stos
imul
stc
fucomp
xor
mov
jno
cwtl
in
dec
stos
push
std
cmc
dec
mov
xchg
addb
in
mov
xchg
mov
scas
ds
cmp
addr16
sbb
lds
cwtl
in
insb
mov
std
cmc
push
inc
je,pt
in
push
sahf
stc
add
lea
cld
cli
cmc
xor
dec
ret
dec
and
testl
mov
cmp
mov
push
jp
xor
movsl
or
aam
jo
pcmpeqd
mov
ret
clc
mov
adc
jo
insl
repz
sbb
jle
jo
or
movsl
xor
add
cltd
lcall
data16
mov
outsb
inc
push
outsb
and
outsb
xchg
xchg
mov
into
or
movsl
lods
xchg
jnp
xor
push
dec
pushf
sub
mov
adc
cwtl
jecxz
mov
rol
bswap
and
shrd
das
not
mov
test
shr
test
jmp
mov
dec
bt
bt
cmc
cmc
add
cmp
jmp
pushf
movl
pushf
mov
pushf
movl
pusha
pusha
lea
jmp
push
pushf
jmp
mov
push
cwtl
inc
std
fnstcw
sub
cmp
aas
shlb
fwait
mov
add
xor
cli
jl
stos
jmp
fildll
adc
xchg
lret
lods
xchg
cmpsl
or
mov
or
jge
stos
mov
sbb
cmp
inc
imulb
imul
xchg
daa
pop
jg
test
pop
mov
sarb
andps
inc
and
js
push
mov
cmp
jae
or
insb
sbbb
ret
out
jbe
inc
ret
jne
jmp
cmp
gs
adc
cmp
cmp
je
call
jg
imul
cmp
push
jno
outsb
jp
pop
push
popa
inc
cwtl
ret
xchg
lods
push
fisubs
adc
and
inc
in
adc
inc
xor
repnz
rcr
shlb
dec
push
inc
jl
out
mov
out
inc
sub
add
cmp
inc
enter
in
sbb
imul
adc
inc
adc
mov
cmp
jne
pop
cmp
adc
inc
pusha
in
sahf
mov
jne
adc
xchg
inc
lods
cmp
mov
jmp
dec
sti
sub
repz
lods
dec
or
xchg
lds
fdivrl
inc
push
sub
lods
inc
xchg
push
test
into
pop
std
pop
xor
xchg
addr16
int
fisubl
and
mov
cli
and
dec
es
outsb
inc
aaa
fldcw
dec
mov
mov
push
cmp
movsl
fnstsw
push
orl
mov
xor
pushaw
popl
pushf
mov
jne
jp
xlat
adc
sbb
push
pushf
call
jge
daa
nop
cmp
jno
push
icebp
dec
rcr
stos
add
add
inc
add
xor
add
push
hlt
mov
into
cmpsb
test
stc
cmpsb
xorw
add
sub
add
out
cmp
fbld
arpl
cmp
paddb
and
push
push
cmp
roll
add
pop
mov
shlb
mov
jne
push
jnp
pop
mov
add
xor
sarb
adc
cvtps2pi
enter
sub
jge
cmp
arpl
mov
scas
adc
sbb
cmp
push
cmp
aas
fsubs
out
jns
pusha
push
or
std
popf
xchg
inc
fs
mov
xchg
hlt
jp
orb
fistpll
xchg
aam
loopne
lea
imul
repz
outsb
repnz
sub
das
ss
or
jge
xchg
mov
adcl
dec
adc
test
jnp
popf
ja
inc
xchg
cmp
sub
lock
sahf
out
sbb
out
sbb
push
jne
ja
push
ret
decb
arpl
lret
popf
cmp
js
sbb
mov
js
mov
dec
repnz
xor
adc
pop
add
mov
mov
mov
push
rep
adc
xchg
mov
in
sahf
sbb
ljmp
push
imul
adc
movsl
ljmp
xor
and
xchg
add
dec
pop
fcmovnbe
rorb
xor
xor
and
aad
xchg
or
je
loopne
ds
adc
jg
xacquire
mov
lods
xchg
ljmp
int
cwtl
fidivs
cmpsl
jle
pop
xor
mov
mov
into
push
mov
out
mov
pop
std
push
test
pushf
pop
shl
or
cmp
fisubs
mov
inc
pushf
aad
lock
jmp
xor
int
test
into
les
stos
push
push
imul
aaa
addr16
jl
pop
jo
dec
rolb
jmp
sti
shl
push
data16
pusha
out
xor
mov
sbbb
push
lcall
je
ret
mov
dec
mov
cmpsl
xor
outsl
mov
rol
pop
or
insb
jle
sbb
cmp
mov
daa
sbb
add
cltd
lret
pop
js
mov
shlb
pop
mov
cmp
rcrb
cmp
and
push
mov
cmp
cltd
mov
jg
inc
push
dec
outsb
xor
dec
sarl
imul
xor
lcall
fsubr
push
push
std
movsl
dec
leave
call
pushf
and
test
imul
outsb
xor
adc
dec
cmp
idivb
roll
mov
inc
push
test
cwtl
fstpl
pop
mov
mov
xor
and
mov
adc
adc
or
sub
push
mov
mov
sub
jbe
sti
fisubrs
lock
stc
cmc
xchg
cli
aas
mov
add
outsl
dec
mov
hlt
std
push
push
loopne
jbe
xchg
loopne
outsb
lret
cltd
mov
cmp
test
xchg
mov
ljmp
out
insb
pusha
sti
mov
gs
cmp
lods
dec
lcall
mov
std
lcall
push
adc
jp
mov
mov
sarb
pusha
jbe
lcall
jnp
cld
jle
out
movsl
mov
out
xor
adc
adc
pushf
jne
jne
xor
jns
xor
arpl
add
in
insb
push
cmp
cmp
sub
loop
and
rol
fstps
mov
ret
int3
loop
insl
jno
xor
test
pop
insl
mov
scas
addb
iret
clc
mov
andb
int
xchg
arpl
jecxz
cwtl
push
dec
lahf
cmp
inc
loope
and
out
loop
and
jne
pop
shll
mov
xor
dec
and
popa
fs
mov
or
add
out
outsb
int
push
popa
shrb
dec
and
xor
pushf
push
jo
loop
pusha
and
pop
in
mov
pop
mov
cmp
jle
divb
add
ret
shrb
adc
fdivl
inc
mov
mov
lret
sub
push
sbb
adcl
push
and
jno
mov
mov
pushf
cli
daa
push
dec
pushaw
pop
or
cmp
rcll
adc
cwtl
fildl
cmp
scas
test
cmpsl
dec
jl
inc
push
das
sub
xor
push
mov
shlb
add
xchg
outsl
pcmpgtd
repz
outsl
fisttps
daa
ja
js
jg
cmp
mov
inc
xor
xor
insl
dec
cmpsl
out
inc
sarb
rorl
jae
movsl
pop
add
add
aaa
adc
not
xchg
rcll
push
sub
pop
push
mov
adc
popa
cmp
fwait
cltd
int3
add
pop
pop
lcall
test
jns
sbb
inc
or
sub
xor
mov
xor
ljmp
fadd
sahf
lret
lock
imul
lcall
cld
cld
je
add
ret
mov
adc
mov
sahf
sub
sahf
in
mov
aaa
pop
shlb
mov
out
popf
jne
ret
mov
mov
lret
adc
sbb
je
cld
cmpsb
push
pop
mov
nop
mov
mov
cmp
sbb
adc
pop
cmp
add
adc
test
pop
rcrl
cltd
cld
cmpsl
std
dec
out
jecxz
sbb
mov
mov
jae
outsl
sbb
mov
sub
mov
hlt
jg
sbbl
dec
adc
movsl
and
and
test
mov
sbb
push
pushf
jl
aaa
or
mov
aam
mov
sbb
hlt
adc
inc
insb
xor
pop
std
mov
sub
jbe
gs
xchg
in
insb
lds
inc
rcl
repz
push
inc
pop
outsl
popf
and
aad
inc
lods
cmp
cmp
lock
xchg
les
cwtl
fldcw
popf
cs
push
stos
and
test
jp
mov
jb
xor
fs
cs
or
lods
pop
je
mov
lahf
mov
insl
bound
jle
ss
mov
push
dec
xchg
movsl
sbb
and
mov
mov
dec
sbb
mov
out
xor
push
jne
cltd
sub
jge
das
push
addr16
dec
inc
xchg
and
adc
mov
gs
xor
mov
add
mov
inc
mov
mov
cmp
xor
inc
int3
cmpsl
mov
imul
jo
dec
call
bound
testb
dec
cmc
aam
daa
jae
jg
push
or
out
pop
pusha
shrl
push
popa
jno
into
stos
test
imul
sub
mov
pusha
movl
pushf
pushf
movl
pushf
pushf
pushf
movb
lea
jmp
add
jmp
or
sub
lods
sub
push
int
jp
mov
sbb
pop
dec
xchg
fs
sbb
and
jno
mov
mov
push
mov
push
outsb
adc
insb
test
fs
dec
fcoms
aaa
andl
jne
cmp
outsl
rclb
push
jecxz
lods
and
xchg
jns
push
movsl
xchg
scas
cmp
pusha
xchg
mov
push
mov
and
in
mov
sahf
ja
jmp
dec
hlt
in
outsb
push
mov
out
dec
jae
mov
mov
mov
mov
xor
adc
jbe
jp
pop
insb
mov
gs
sbb
fistl
sbb
jbe
fnsave
mov
or
xor
out
pop
fucom
sbb
fisubs
jmp
fcomps
inc
push
bound
cltd
add
mov
stos
das
movsl
shl
in
icebp
jge
and
jbe
mov
pop
cltd
cmp
shlb
lods
rcrl
xchg
ja
lods
lcall
pop
ss
xchg
pop
test
lret
pop
sbb
fiaddl
push
or
jo
movb
xlat
push
sbb
inc
mov
push
sub
clc
sti
dec
xor
dec
and
and
lock
adc
cwtl
xlat
loopne
jae
jge
imul
repz
jmp
scas
ret
jnp
push
outsl
mov
jno
syscall
and
xor
xor
mov
and
lods
mov
sbb
inc
jne
divl
std
mov
xchg
dec
xlat
add
lahf
xor
movsb
mov
sbb
inc
mov
xor
icebp
dec
subl
sub
cli
mov
in
and
adcl
aaa
into
fdivl
sti
mov
xchg
mov
popl
and
push
je
sub
mov
inc
sub
sti
push
imul
leave
cwtl
cmp
cwtl
mov
ret
sub
pusha
ja
leave
sarb
lock
xchg
pop
repz
mov
sti
ja
inc
fisubrl
push
hlt
and
decl
pop
repz
cmp
pop
inc
fmuls
push
stos
jne
adc
iret
jmp
cmp
js
aaa
out
cmp
inc
jae
add
repnz
cmc
or
sub
cwtl
aad
xchg
dec
sub
and
dec
and
jl
adc
mov
cwtl
aad
ja
mov
scas
das
dec
andl
fmul
mov
xor
imulb
mulb
sub
mov
dec
cs
pop
inc
mov
pop
test
jne
cwtl
aad
and
jmp
xchg
and
or
push
pop
outsb
jmp
mov
in
and
push
test
xchg
pushf
imul
jl
aam
out
xor
pusha
pushl
movl
call
push
pushf
push
out
push
cmp
cmp
sub
out
jecxz
cltd
dec
loopne
cs
test
adc
xlat
xor
loope
push
xor
adc
test
sub
into
jg
clc
adc
adcb
in
push
jae
das
es
ja
adc
sub
repnz
repz
add
adc
cmp
aaa
jns
mov
js
rcrl
mov
stos
int
cmpsl
imulb
jl
dec
mov
push
mov
roll
sub
leave
jbe
fwait
add
popf
ljmp
lock
push
cmp
push
mov
sti
popa
test
lds
iret
pop
sti
test
pop
push
addb
jae
push
add
fnstenv
mov
push
xor
adc
imul
push
push
jle
mov
mov
sbb
roll
push
imul
mov
adc
push
subb
xchg
adcl
xchg
fidivrl
clc
jbe
fcmove
idiv
repnz
ljmp
mov
xchg
sub
fadds
push
sbb
test
xor
inc
xchg
jnp
scas
hlt
jnp
lock
pop
movsl
test
nop
cmp
inc
xor
dec
push
icebp
hlt
aad
ds
jnp
daa
lahf
jno
jne
adc
pop
mov
cmp
arpl
andps
test
push
mov
leave
dec
mov
fdivrs
scas
ds
xor
inc
aad
mov
das
lea
rcr
cmpsb
sub
jge
fnstsw
mov
inc
shlb
mov
and
pop
cli
imul
inc
pop
sub
negb
lret
into
adc
mov
lock
cltd
push
mov
jno
push
fisubrs
jle
jge
pop
ret
std
push
xor
in
fwait
add
paddd
push
das
and
cmp
or
aaa
fs
sbb
das
cmp
xchg
cmp
leave
movsb
jb
test
dec
sub
dec
movsl
fwait
jecxz
mov
or
jns
mov
ret
shlb
sbb
lahf
fisttpl
cld
xchg
jbe
ret
add
out
jl
cmpsb
lea
dec
xchg
sub
fdivrs
icebp
push
jle
jno
jecxz
stc
leave
sub
sub
jno
gs
xor
ds
and
push
fs
push
push
cltd
movsb
or
jmp
mov
sarl
int3
out
xor
inc
and
shl
cltd
jae
cmp
dec
adc
adc
mov
mov
loopne
es
mov
jmp
mull
cld
nop
pop
pop
arpl
jno
test
dec
aas
push
mov
mov
mov
cmp
mov
test
ret
inc
out
pop
sahf
cld
pop
fs
and
int
jb
xchg
xorb
lcall
lahf
shlb
bound
cmp
xor
push
pop
sub
xor
jp
cmp
push
adcb
rcrl
and
in
mov
movsl
add
pop
xchg
aaa
arpl
test
pushf
or
jae
jno
cwtl
inc
xchg
sub
enter
das
mov
pushf
scas
cmp
in
sub
jecxz
mov
and
inc
or
test
xor
fbld
pusha
jge
popf
mov
inc
adc
mov
and
or
or
je
ljmp
mov
or
stc
sahf
inc
in
inc
xor
and
jg
out
xor
call
clc
mov
cwtl
sub
aas
pop
sub
cli
pop
sub
out
repnz
js
iret
outsl
inc
shl
pushf
and
jle
adc
cmpsb
dec
dec
sub
cmp
into
cmp
cmpsl
enter
shll
pop
xor
imul
cmp
ja
icebp
and
inc
dec
xor
popf
pcmpgtd
cmp
mov
push
jne
add
fistl
stc
lret
sub
cs
xchg
ja
pop
mov
dec
mull
pop
push
jg
mov
inc
cmp
mov
inc
aad
insb
push
ficoms
jle
sbb
pop
outsb
and
jb
jmp
jecxz
fistps
out
ds
mov
mov
dec
js
scas
pop
cmovnp
xchg
inc
mov
icebp
mov
pop
xor
dec
sbb
iret
xor
cmp
cli
pop
rcr
popa
pop
xor
and
aaa
repnz
sti
icebp
fs
mov
cmp
ret
lods
test
xor
mov
lods
fsubrs
iret
psubusb
xor
inc
pop
fwait
cmp
inc
xor
out
lret
ljmp
jl
das
sbb
int
out
and
rcl
ljmp
adc
mov
aam
mov
jne
mov
cwtl
rcrb
xor
push
dec
and
pop
jns
repz
push
mov
jns
dec
in
or
mov
pop
pop
mov
orl
push
nop
jecxz
cwtl
iret
xor
scas
cmp
in
imul
daa
adc
push
dec
out
xor
movb
movl
pusha
jmp
daa
xchg
jmp
sub
js
jl
jge
mov
lods
dec
and
inc
out
xchg
cmp
push
dec
outsl
adc
and
cmc
loope
cwtl
adc
xlat
ss
ljmp
jno
inc
push
cmpsl
imul
mov
stos
repz
mov
stc
mov
xor
adc
cli
gs
fxch
dec
and
fcomps
mov
adc
jp
xor
cmpsb
insl
xor
dec
pop
cld
sub
and
sub
sti
mov
sti
je
sbb
and
or
lret
popf
push
pop
lods
lds
rcrl
pop
outsb
push
cmpsl
into
xor
lea
push
rcrl
sub
out
bound
cwtl
into
popa
pop
nop
mov
call
dec
test
xchg
or
outsl
cmpsl
sbb
ljmp
mov
shlw
arpl
sbb
in
test
xor
ds
jbe
div
or
and
mov
out
sub
pop
dec
sub
xchg
mov
and
and
mov
push
fisttpl
sub
ds
push
lods
lds
stc
push
cmp
nop
push
rolb
in
mov
rclb
shrb
frstor
hlt
sub
insb
sub
pusha
fsubrs
insb
roll
mov
call
pop
lret
sub
in
scas
mov
sub
jp
out
push
mov
pop
pop
dec
dec
push
jno
pop
lcall
mov
jbe
clc
mov
mov
insl
arpl
pop
xchg
inc
jp
fistl
inc
fs
mov
jecxz
jmp
jmp
push
inc
and
inc
sub
or
cmpsl
dec
jle
shrl
pop
aas
rorb
mov
lods
rclb
loopne
lods
clc
adc
shrl
fcoml
dec
xchg
cmp
out
sti
loope
lcall
dec
adc
and
hlt
dec
adc
inc
stos
cmpsl
outsl
int3
lock
inc
lret
mov
inc
mov
imul
lods
mov
outsb
inc
scas
popa
mov
out
in
pop
out
pop
sub
xlat
xor
xchg
mov
inc
push
loop
fiaddl
cmc
mov
xchg
mov
addl
xchg
aaa
rcrb
adc
jnp
fs
aas
xor
or
pop
cmp
sbb
icebp
sbb
outsl
or
push
sbb
aam
scas
ljmp
repz
mov
xchg
outsb
sub
xor
push
icebp
sahf
repnz
movsb
fimull
pop
jne
and
and
lahf
pop
add
sub
pop
push
mov
push
popf
inc
mov
bnd
lock
sub
ret
sahf
addr16
add
adc
test
shrb
scas
les
les
outsl
or
cmpsl
or
xchg
out
xchg
xchg
ss
jbe
shll
mov
cmpsb
fsubrs
or
jno
cmp
sbbb
xorl
aaa
mov
mov
std
pop
dec
lret
fisttpl
test
int3
dec
stos
push
lds
adc
nopl
cmp
and
mov
in
sbb
ljmp
xchg
add
aaa
repz
imul
xchg
pop
into
test
mov
or
das
mov
in
jae
dec
loopne
dec
lret
mov
mov
push
xor
stc
int3
nop
fcmovne
sbb
sub
sbb
jg
cmpb
fldl
pop
push
adc
imul
push
popf
lods
mov
cmc
jbe
mov
mov
inc
pop
ds
shlb
test
mov
rclb
jg
psadbw
push
push
dec
xor
cmp
mov
aas
lods
adc
push
lods
bound
in
mov
hlt
nop
mov
xchg
in
add
ss
push
inc
jecxz
pop
arpl
mov
dec
adc
jle
sbb
in
cltd
scas
dec
adc
sub
les
imul
pushf
stc
int3
jo
imul
jno
mov
inc
arpl
fs
sbb
fsubrs
aam
mov
bound
insb
sti
sub
sub
push
adc
mov
cmp
pop
adc
sub
or
rorl
jle
sbb
and
cmp
sub
push
push
cmp
jle
hlt
sub
xorl
jge
inc
sub
test
jb
outsb
and
test
pop
pushf
inc
mov
cwtl
sub
inc
jecxz
mov
mov
shrb
mov
jns
sub
push
sarl
mov
lea
xchg
dec
xor
xor
pop
lods
mov
ret
dec
ljmp
push
and
sub
jmp
lds
mov
into
shrb
mov
and
mov
inc
movsb
mulb
mov
lret
jg
lret
pop
fcompl
loop
repnz
addr16
lret
pusha
mov
outsl
jecxz
mov
std
mov
jb
add
mov
jge
test
loop
mov
pop
xchg
sub
sub
shlb
adc
test
sbb
imul
subl
pop
lea
sarb
dec
popf
mov
js
pop
push
mov
push
incl
jne
push
pop
mov
inc
push
decl
pop
ret
jo
cli
cmp
pop
rcll
imul
xlat
and
pop
mov
mov
negl
jge
movl
push
arpl
sub
and
xchg
xchg
out
mov
xor
push
mov
dec
pop
lods
fwait
cmpsl
pushf
sbb
pop
push
mov
repz
cwtl
sub
or
btrl
enter
xor
pop
sub
fisttpll
test
xor
mov
sbb
scas
and
add
sub
cwtl
enter
rcr
dec
pop
sub
incl
mov
add
cwtl
in
push
mov
sbb
xor
mov
jmp
mov
push
or
aam
lret
mov
push
fnstsw
jo
fnsave
jo
dec
sub
inc
or
testb
inc
sub
cwtl
enter
subl
pusha
inc
pop
add
and
cwtl
enter
xor
lahf
in
mov
std
mov
icebp
test
inc
add
or
pop
lcall
mov
movq
xor
shl
subl
iret
sub
ret
out
insl
pop
in
xor
popf
or
mov
cmp
lea
jo
lods
cmp
in
int3
cmp
push
jg
adc
pop
mov
lods
or
aam
inc
and
or
ljmp
jns
add
pop
inc
adcb
add
xor
ret
xchg
mov
cmc
jnp
fmull
cwtl
loop
mov
pop
inc
fsubrl
stos
xor
gs
mov
add
lods
cmp
int3
dec
pop
divb
sub
inc
sbb
das
xor
push
nopl
fisubrs
xchg
sbb
adc
cs
movb
movl
pushf
pusha
movl
pushf
lea
jmp
shr
jmp
aam
mov
xor
setno
out
add
call
lahf
sbb
fistpll
adc
inc
lea
xchg
cmc
inc
lcall
mov
mov
jb
cs
jae
test
imull
or
mov
dec
movsl
sbb
and
xor
mul
inc
fmull
xchg
push
sar
imul
ljmp
sub
fistpll
popf
dec
test
mov
mov
hlt
scas
lock
push
jnp
hlt
push
and
sarl
push
imul
mov
js
aam
or
add
insb
movsl
jne
call
mov
movsl
arpl
loope
roll
outsb
test
movsl
fistpl
movsl
call
push
js
lret
xor
mov
int3
mov
push
inc
loope
pop
mov
jbe
sbb
and
add
mov
push
sub
pop
scas
lcall
mov
sub
in
jmp
mov
pop
and
lods
call
lock
mov
iret
add
dec
inc
pop
sbb
pop
adc
xchg
mov
inc
pop
or
push
mov
aaa
lea
xor
xchg
ss
and
fdivs
pusha
cli
mov
push
aaa
add
mov
mov
cmpsb
js
mov
mov
lods
mov
divl
mov
out
mov
arpl
xchg
dec
jecxz
mov
and
ljmp
ljmp
and
xchg
jb
out
or
pop
jno
fmuls
mov
mov
push
in
adc
mov
xor
xchg
iret
sbb
push
outsl
mov
lcall
inc
xor
or
dec
int
adc
xor
out
fiadds
mov
jle
jmp
push
cmp
xor
jmp
push
pushf
movl
mov
movl
push
push
lea
jmp
clc
clc
add
sub
clc
ror
sar
mov
sar
rcl
test
add
rcl
bt
mov
adc
pushf
mov
jmp
movl
pusha
push
push
lea
jmp
cltd
mov
daa
mov
jle
repnz
jmp
pop
sbb
in
dec
subb
or
mov
jl
les
cmp
rcll
mov
jb
and
and
jle
stos
js
mov
add
es
movl
mov
std
and
jb
inc
aaa
jb
out
xor
mov
and
movq
mov
into
pop
daa
adc
decb
daa
mov
into
push
fnsave
out
adc
shll
addr16
test
xor
adc
inc
sub
push
inc
pusha
stos
inc
call
fadds
xor
push
mov
pop
jo
je
faddl
mov
jl
push
jae
mov
add
xchg
dec
jmp
adc
jbe
cmpsb
js
in
loopne
mov
mov
leave
sbb
dec
lcall
adc
and
loope
enter
pop
cld
lea
or
cmc
cltd
mov
mov
test
rorb
not
in
out
lds
stc
scas
rorl
cli
dec
data16
dec
mov
dec
ljmp
inc
js
out
xchg
jmp
or
lahf
ret
imul
mov
jno
mov
fdivr
xor
daa
lock
clc
sti
xchg
cmpsl
jae
dec
lahf
sbb
pop
imul
xchg
push
fcomp
sub
jns
ja
dec
mov
mov
ja
add
mov
or
stc
arpl
test
mov
mov
dec
cmpsl
rclb
loop
dec
clc
jg
add
jnp
push
mov
cltd
rcr
cwtl
sub
shll
loop
scas
and
fcmovu
mov
or
xor
ret
adc
divl
hlt
xor
push
std
jno
push
xor
call
fmuls
fs
cmc
sbb
jge
mov
outsl
sub
test
nop
or
dec
jmp
sarb
cmp
sbb
pop
cmp
jg
adc
js
pushf
ds
inc
dec
aaa
addr16
and
mov
mov
pop
das
repnz
addr16
add
mov
and
mov
cmp
mov
add
in
mov
shlb
pop
in
cmpsb
mov
mov
push
mov
jle
and
sbb
pop
adcl
sub
mov
cld
mov
dec
cmpsl
ds
xchg
jge
adc
fadds
add
int3
out
iret
les
or
iret
sub
nop
sbb
push
test
cltd
mov
or
loopne
aad
andb
aam
adc
into
movsl
xor
pop
je
lcall
addr16
sbb
or
ljmp
lods
push
idivb
add
jns
mov
xor
loope
movsb
lcall
jae
inc
test
mov
pop
mov
mov
lods
icebp
and
add
cmp
das
xor
std
dec
sub
lock
or
scas
sbbl
dec
cmpsb
das
fwait
and
out
fmulp
sub
int
movsl
and
jne
add
or
jnp
pop
test
jo
aam
mov
sub
mov
test
mov
pop
hlt
jb
shlb
xchg
inc
imul
shll
pop
iret
and
xchg
inc
mov
out
inc
movsl
and
dec
sbb
sub
add
xchg
dec
and
push
lahf
cmp
jg
jmp
jl
fwait
bound
pop
mov
lahf
repnz
mov
jae
repnz
in
cmp
fsubrs
jo
mov
mov
pop
or
cld
xchg
cmpsb
or
adc
mov
xchg
mov
in
iret
stc
pop
jp
pop
iret
rolb
jno
ds
rcrb
xor
jnp
insl
movsl
int3
lcall
iret
mov
insl
icebp
repnz
das
mov
xchg
adc
mov
clc
dec
outsb
cmp
aas
cmc
xor
pusha
xchg
sbb
clc
outsb
mov
cli
pop
mov
orl
pop
cmp
jecxz
mov
outsb
aad
rolb
adc
pop
rolb
aas
sbb
jae
or
outsl
lods
test
test
fisttpll
ret
and
sub
inc
pusha
xor
addb
jne
std
fdivs
mov
mov
ret
fidivrs
push
sbb
mov
xchg
and
enter
je
and
adc
pop
icebp
sbb
mov
mov
bound
sub
in
push
out
jmp
dec
test
or
je
out
lret
mov
dec
int
dec
mov
mov
outsl
mov
cmp
or
add
stos
fldl
cmpsb
hlt
insb
dec
mov
imul
pop
repz
stos
pop
fildll
test
test
stos
mov
shlb
cwtl
mov
or
ljmp
out
stos
mov
subl
cli
out
fildll
jge
pop
enter
ljmp
xor
jmp
ss
in
cli
fildl
mov
mov
add
and
stos
in
sbbb
cli
sub
jg
ja
or
lods
add
cli
pop
xor
movl
mov
lea
jmp
pushf
mov
call
stos
dec
pop
movsl
jle
inc
inc
cmp
sub
and
sbb
int
mov
sti
cmpsb
jmp
jecxz
cwtl
adc
movsl
and
fs
sub
xchg
idiv
mov
ret
dec
inc
outsl
fisubrs
jns
adc
jecxz
xorl
mov
sub
push
sub
push
repnz
push
pushf
xchg
sbbl
lcall
bound
sbb
push
repnz
ja
and
adc
jo
ljmp
ja
inc
test
push
repnz
pop
cmpb
push
mov
push
pushf
fisttpll
mov
jg
iret
fldl
out
cmp
mov
call
movsl
sub
jno
jg
mov
shlb
cwtl
mov
cmp
in
test
orl
push
xor
push
jmp
mov
jmp
xchg
inc
pop
add
outsl
lret
les
sbb
aam
subl
mov
xchg
fsubr
pop
mov
into
sahf
fs
sbb
aaa
imul
xchg
lea
mov
mov
es
add
aam
sbb
mov
mov
hlt
add
les
data16
out
sbb
inc
xchg
daa
lock
mov
mov
cmp
shlb
jmp
fwait
inc
mov
sahf
test
mov
jnp
add
dec
cmp
jle
push
xchg
mov
xor
call
cmc
adc
outsb
or
xor
push
sti
aad
dec
xor
pop
jne
xchg
lret
ja
inc
adc
cmpsl
imul
mov
imul
jnp
lret
lret
dec
pop
clc
xor
je
icebp
insb
inc
push
loop
inc
js
cli
js
fisttps
stc
xorl
mov
or
cmpsl
push
cwtl
fstpl
cmp
shrb
push
loop
pop
ret
cmc
pop
call
xor
or
cmpsb
inc
orl
ja
xor
pop
jo
cmp
push
hlt
pushf
inc
ja
pop
call
inc
lahf
aaa
pusha
cmp
xchg
jmp
jmp
dec
popf
push
mov
jno
dec
js
jno
fildll
push
sub
mov
imul
repnz
mov
mov
aaa
ja
sbb
cmpsl
add
adc
sub
lds
jbe
jo
lods
stos
stos
sub
add
sbb
pop
xor
xchg
ds
xchg
xchg
cld
insb
inc
les
test
rcll
xor
test
mov
xchg
pop
bound
mov
cwtl
mov
out
cli
lcall
and
dec
sti
jg
jmp
insb
sbb
in
mov
rorl
daa
out
sbb
pop
jge
cmp
fcomps
fs
pause
jnp
mov
adc
adc
push
sub
dec
push
xor
cmc
roll
fcomps
sti
mov
jge
dec
in
repnz
push
cmp
andb
or
xor
ret
xor
mulb
mov
mov
loope
outsb
jle
xor
jne
les
loope
or
or
cmc
jne
jae
loop
arpl
loope
iret
mov
in
imul
fisubl
sub
rcr
mov
mov
push
lret
aas
testl
xor
dec
add
sbb
arpl
stos
and
outsb
test
xchg
test
xor
push
cmc
push
scas
jmp
and
inc
xchg
jle
push
icebp
shrl
add
out
jmp
lock
fstpt
icebp
dec
sarl
pop
adc
in
cmp
sbb
dec
sbb
shrl
inc
cltd
popf
inc
xchg
jns
or
mov
insb
shr
xchg
add
jno
xchg
xor
cld
cltd
sbb
mov
data16
outsl
mov
mov
cwtl
mov
fs
call
push
stc
add
pusha
lea
jmp
das
hlt
adc
or
pop
jne
xor
or
ja
pushf
mov
pop
rcrb
push
leave
call
pop
les
cmp
cmp
push
push
mov
push
div
and
out
add
xor
jb
dec
push
leave
xchg
gs
mov
add
add
add
mov
mov
std
xor
mov
scas
mov
cmpsb
loope
rol
inc
cld
cmp
test
jle
int3
push
test
inc
mov
sbb
pop
xor
mov
insl
into
imul
push
sbb
rolb
jno
xor
pop
jge
mov
xor
adcl
cmpsl
rol
gs
jl
repz
pop
cmp
aaa
lret
and
enter
gs
adc
jmp
mov
fldcw
add
imul
xor
das
cmp
jle
xchg
fs
jmp
jnp
xchg
imul
les
jp
xchg
dec
inc
fcoms
loopne
adc
popf
pusha
sub
cld
into
cmp
stos
dec
movsb
inc
mov
aaa
stc
dec
pop
lret
ret
jl
ret
insl
and
cmpsb
add
js
jge
int3
pop
mov
inc
push
imul
mov
cmpsb
les
push
popa
cmpsl
push
bound
dec
mov
lcall
mov
push
icebp
cmc
lods
sbb
jae
sub
clc
xchg
mov
sbbb
and
scas
push
scas
mov
push
lds
jge
dec
and
jbe
dec
es
pop
pop
pop
daa
fiadds
xchg
ds
repnz
cmpsl
adc
mov
nop
insl
rclb
dec
jmp
add
mov
in
xor
xchg
dec
punpckhdq
mov
mov
inc
sahf
jae
or
fisttpll
pop
out
fs
aam
cmp
xchg
or
mov
pop
insl
out
mov
int3
mov
rcrb
jnp
fsubl
mov
xor
cmp
cmc
pop
cmp
push
mov
scas
std
mov
fsubs
and
pop
or
lahf
sub
push
pop
pop
push
ss
popf
sbb
popa
mov
divl
cwtl
mov
mov
lock
nop
test
or
jae
ljmp
ffree
xchg
sbb
dec
jne
sbb
fdivrp
push
jb
push
xor
sbb
shlb
idivb
in
xor
out
es
pop
mov
ret
fimull
aas
sbb
or
das
test
and
mov
gs
jg
inc
cmp
cmp
out
xorl
push
clc
mov
std
jmp
inc
mov
push
out
add
add
add
mov
clc
in
lock
add
pop
xchg
cwtl
mov
rclb
aad
dec
jge
aas
or
adc
pop
mov
cmpb
mov
mov
xor
scas
pop
push
lea
cli
add
data16
imul
inc
push
out
cmp
jecxz
ja
pshufw
out
iret
mov
push
jno
iret
fisttps
adc
negb
div
inc
dec
jo
jae
sbb
repz
lret
loope
sbb
jno
pop
jns
addr16
jne
ds
push
adc
mov
fstps
mov
add
mov
mov
mov
aas
adc
cli
add
cmp
pop
add
sti
jg
mov
call
and
and
stos
cmp
pop
js
sub
xor
mov
clc
sub
mov
mov
add
mov
push
stos
adc
shll
scas
mov
and
rcrl
mov
addr16
xchg
adc
push
pop
test
nop
sub
mul
pop
sub
or
les
sar
adc
adc
dec
mov
jb
movsb
movsb
popa
pop
xchg
adc
cmp
xchg
cmp
cmc
out
and
stc
ja
pop
lock
and
lcall
sub
mov
sub
jnp
movsb
jg
inc
lds
mov
add
pop
sub
hlt
or
dec
mov
sbb
adc
lret
ljmp
call
mov
adc
and
bswap
jp
ret
fdivl
xchg
xchg
or
or
jne
fisubrl
jp
inc
cmp
pop
lcall
insl
jmp
aad
xchg
mov
shll
stc
or
dec
mov
sahf
negb
push
out
mov
cld
or
pushf
cld
lock
xchg
repnz
fsubrl
mov
inc
cmpsb
mov
test
ss
mov
mov
cli
sar
xchg
fdivl
das
iret
outsb
ss
mov
dec
mov
jmp
bound
outsb
fnsave
fadd
cwtl
fldl
lods
or
and
jle
popa
jmp
mov
lock
shll
mov
js
cwtl
mov
loopne
push
mov
dec
jmp
xor
mov
or
sbb
push
sub
cwtl
mov
dec
insl
xchg
and
or
mov
pop
jge
sbb
mov
mov
imul
xchg
in
jbe
inc
jecxz
out
sahf
cmp
int
xor
outsl
cmp
and
push
insl
push
lret
or
bound
and
inc
sub
sbb
mov
mov
stos
and
cmpl
cmp
inc
jbe
or
xor
call
pop
rolb
insl
or
pop
lods
or
or
aaa
lret
cmc
adc
inc
or
aam
xchg
scas
std
adc
inc
loop
xchg
out
ljmp
lds
push
cltd
clc
adc
sbb
scas
jne
popf
push
sti
scas
mov
jmp
dec
popa
sahf
xchg
mov
xchg
icebp
sbb
mov
nop
mov
in
xor
inc
and
lahf
inc
add
aaa
mov
and
mov
push
cli
lahf
jbe
test
mov
xchg
popf
or
jmp
lcall
mov
mov
xchg
add
das
enter
jb
lret
rorb
filds
fsubrp
lret
subl
sub
cmp
xor
push
mov
and
rolb
mov
push
fbld
mov
push
aad
and
stos
add
enter
or
adc
ds
xchg
mov
test
or
dec
sbb
sub
fldenv
dec
in
es
push
ss
icebp
sub
and
or
adc
es
jb,pt
xchg
in
dec
sbb
shrl
mov
int
sub
test
lret
sbb
test
scas
sub
or
or
adc
loopne
lret
sub
jo
and
mov
and
cmc
mov
mov
ret
or
jo
hlt
inc
sub
inc
shlb
hlt
push
pop
loop
mov
movsb
loop
jbe
mov
daa
mov
add
loop
sub
cmpsb
loope
jge
add
outsl
cmp
and
jo
xor
pushf
mov
adc
gs
scas
insb
mov
mov
jb
push
cmc
test
flds
add
mov
jo
rcrl
mov
adc
loopne
icebp
or
adc
adc
sbb
and
fsqrt
pop
add
dec
push
add
sbb
and
cmp
mov
dec
mov
nop
jmp
mov
popa
sbb
or
shll
cltd
addr16
jmp
pop
sahf
shlb
jmp
sub
ja
cmpl
and
pop
or
inc
movsb
test
push
lods
movsb
stc
mov
fildl
fidivrs
adc
and
xchg
fs
cmpsl
xor
cmp
ret
aaa
push
xor
leave
jb
pop
jo
adc
jmp
int3
sub
aam
xchg
or
sti
mov
jp
push
arpl
lods
sahf
xor
popa
mov
stc
push
jbe
jle
jmp
out
pop
jecxz
leave
pop
jno
in
sub
je
sti
jns
jmp
xchg
inc
xor
jae
addr16
in
icebp
roll
mov
fisttps
out
cwtl
mov
jg
rcr
shl
pushf
neg
rcr
neg
or
dec
adc
mov
or
and
sub
sub
dec
clc
cmc
bt
movzwl
or
inc
mov
jmp
pop
test
popf
cmc
sub
and
adc
sbb
aam
or
pop
xor
sub
out
pusha
sub
fisubs
fmuls
xchg
outsl
add
xor
or
inc
jg
mov
dec
cmpsb
pop
dec
dec
ror
cmpsl
push
adcb
pop
mov
push
daa
mov
mov
out
push
adc
push
out
xchg
push
lods
pop
into
leave
adc
lcall
divl
stos
mov
scas
out
jo
fwait
cmc
jno
mov
pop
sti
stos
out
bound
jp
jnp
into
cmp
xchg
insl
lret
test
and
xchg
xchg
or
mov
sub
xchg
inc
es
jecxz
inc
jb
out
add
testl
jne
in
mov
cld
dec
imul
and
push
push
sub
sub
and
outsl
xchg
data16
dec
nop
xchg
fbstp
jns
dec
in
mov
scas
repnz
fs
xchg
jae
adc
ss
sub
idiv
mov
xchg
sbb
mov
sub
adc
adcb
inc
aaa
xor
mov
lcall
sub
inc
hlt
mov
add
xor
stos
test
mov
stc
cmp
or
dec
fnstsw
in
loopne
pop
div
xchg
imull
jl
xlat
sub
mov
mov
stos
popf
jge
dec
outsl
je
dec
and
daa
cmp
mov
jnp
sub
outsl
lds
les
pop
repnz
dec
jo
repz
ss
push
das
int
ss
mov
pop
cs
jl
idivl
and
or
ja
loopne
cwtl
scas
scas
inc
outsb
mov
push
lock
stos
sbb
pop
push
mov
cwtl
scas
sbb
lcall
ja
aas
imul
sbb
das
pop
sub
sub
inc
fwait
or
jno
mov
fs
loopne
out
subb
scas
cmc
xor
xor
sub
js
pop
cmp
jno
jl
es
shrb
lcall
dec
fistpll
stos
add
mov
jl
shr
push
xor
lea
bswap
xchg
lahf
lea
mov
setl
push
mov
lea
cwtl
bswap
lea
push
pop
setge
push
cwtl
movzbw
cwtl
pusha
lea
not
setl
mov
movsbw
lea
movsbw
pushf
jmp
pusha
call
jmp
inc
in
mov
xchg
jl
inc
add
jl
adc
addl
adc
cmpsl
mov
out
les
sbb
in
add
test
cmp
mov
jl
repz
rcrl
movsl
push
pop
fadds
push
push
pop
pop
add
xchg
push
stc
xchg
data16
arpl
sbbb
out
and
mov
jbe
cld
cmpsl
repnz
notb
pavgw
aas
pop
jle
in
mov
ret
nop
xor
xchg
or
add
mov
sub
pop
mov
cmp
lret
mov
lret
sbb
dec
imul
mov
in
aaa
sti
xor
xchg
xor
xor
hlt
cmp
pop
sahf
dec
inc
mov
mov
addr16
xor
adc
cwtl
lock
and
push
roll
xchg
adc
movsl
sbb
loope
xor
cwtl
lods
jp
repz
ljmp
mov
int3
clc
add
xor
jge
cwtl
lock
inc
dec
adc
xchg
mov
out
jo
inc
mov
pop
stc
xor
inc
cmp
sub
push
dec
fwait
cld
popa
or
mov
or
and
sbbb
mov
cwtl
stos
push
dec
cmp
fwait
push
mov
cwtl
pop
pusha
dec
sbb
outsl
xor
pushf
call
jb
les
inc
outsb
jle
test
std
jbe
add
roll
mov
sbbl
adc
push
rcrb
lcall
pop
add
sub
std
insb
pop
add
add
sti
sbbb
pop
cmc
add
lret
jmp
out
cmpsl
cwtl
test
cmp
stc
push
mov
mov
push
or
sbb
shlb
aam
push
mov
cmp
jg
test
incb
sahf
loopne
mov
ret
inc
pop
jge
daa
dec
mov
mov
cld
jmp
push
dec
jno
sbb
outsb
out
shll
fcoml
pop
jge
push
add
mov
sub
mov
imul
sbb
sbb
jmp
jbe
add
sbb
xchg
sbb
adc
ret
mov
sub
mov
or
dec
push
mov
cmpsl
push
cmp
imul
inc
shll
cwtl
xchg
xor
filds
outsl
cmpsb
icebp
cmpsl
or
cmp
fimull
sarb
shrb
aas
sahf
imul
fisubrs
mov
push
fcmovnu
push
cmp
std
lcall
push
pop
pop
cmp
mov
mov
es
icebp
mov
fnsave
repz
and
nop
inc
jl
xchg
jns
sub
bound
dec
sbb
jns
fisttpll
cmp
lods
out
test
dec
add
movsb
out
and
leave
scas
cmp
into
mov
adc
cmp
stos
add
sarl
and
push
iret
addr16
jbe
pop
pushf
cvtpi2ps
xor
andl
mov
xor
or
xchg
jae
xchg
lret
in
pop
cmp
imul
jp
mov
pop
clc
daa
add
aam
push
ret
addl
mov
xor
inc
bound
adc
movsb
inc
icebp
push
mov
and
fsubrl
mov
mov
cmp
mov
xor
mov
hlt
mov
pop
jne
xor
pop
mov
fiaddl
pushf
inc
cld
das
inc
xchg
xlat
inc
insb
inc
insl
or
andl
test
sbb
xchg
mov
xor
fisubrs
sti
adc
shrl
mov
fwait
cmpsl
cmp
imul
push
sub
sub
jno
cwtl
test
cmpsl
or
xor
push
mov
and
int
cwtl
test
nop
cmpsl
mov
movl
pusha
movw
pushf
lea
jmp
push
aam
push
sahf
mov
jge
dec
push
pusha
mov
int3
mov
and
sub
jmp
pop
jbe
dec
in
push
sbb
in
mov
sub
jge
mov
push
and
xchg
adc
xchg
push
loop
pop
mov
nop
out
pop
jae
int3
lahf
sbb
loope
or
mov
bound
pop
jns
insl
setae
xchg
mov
in
pop
icebp
push
imul
adc
popf
jns
std
mov
cmpsl
inc
scas
xor
xor
mov
mov
push
and
nop
mov
pop
push
lea
or
dec
leave
ret
pop
cli
lods
dec
push
js
jne
mov
cld
sub
jns
mov
std
inc
ficomps
or
mov
xchg
scas
fsubs
adc
dec
fwait
push
out
cmp
xchg
in
mov
lods
sbb
adc
jp
mov
int3
dec
lods
sub
sub
into
jmp
sbb
jns
test
sbb
fldl
cli
jae
insb
iret
jnp
arpl
sarl
or
inc
arpl
push
mov
fisubrl
shll
mov
cmp
cmp
repz
xor
insb
leave
jnp
movsl
mov
sbb
adc
rcr
jne
xchg
dec
and
mov
mov
mov
mov
in
mov
jmp
add
inc
fwait
iret
lods
pop
jnp
push
inc
loop
inc
mov
nop
cs
aad
mov
adc
mov
jmp
out
jmp
jmp
je
pop
mov
sbb
adc
mov
inc
mov
mov
jmp
jg
hlt
rcrb
cmpxchg
not
sbb
add
in
mov
lahf
test
in
iret
mov
and
push
sbb
xchg
or
adc
sbb
mov
cwtl
cmpsb
pop
xchg
adc
add
mov
add
rcrb
cmpsb
sbb
ljmp
push
push
cmpsb
cld
push
and
jg
or
dec
mov
cmc
cmp
idivl
xchg
mov
mov
jl
lcall
out
or
lea
adc
adc
divl
jbe
mov
andb
jns
ja
push
sub
inc
inc
sahf
or
out
cwtl
cmpsb
mov
or
push
xchg
stc
ljmp
xor
sub
out
jp
stc
xchg
and
mov
mov
stos
rclb
jbe
lcall
jecxz
dec
in
xor
rclb
and
es
and
cli
mov
dec
pop
addl
fsubl
cmp
or
ret
cmc
mov
ret
lret
cmp
jb
cmp
shl
sbb
pop
xchg
mov
inc
pushf
jmp
into
outsb
add
sbb
add
mov
adc
loopne
push
imul
cmp
adc
int3
sbb
jl
cmp
into
and
fwait
stc
sti
pop
and
or
xor
sbb
xchg
jbe
inc
pop
lods
pushf
xchg
sub
cli
push
xor
pushf
movl
pusha
push
call
pushl
movl
movb
pusha
pushf
mov
lea
jmp
mov
movb
dec
bt
test
call
push
xor
lret
xor
pop
or
sub
adc
mov
push
sub
in
rcrb
rorl
xor
xchg
and
ret
popf
pop
jp
cmc
ret
out
repz
loopne
push
cmc
scas
mov
addr16
out
pop
jbe
xchg
sbb
push
into
popa
add
add
adc
dec
ja
adc
cld
dec
sarb
mov
xrstor
mov
sub
dec
push
xor
fimull
add
cmpb
mov
and
test
dec
and
test
xor
inc
push
push
xchg
repz
mov
pusha
mov
subb
inc
out
adc
repz
test
daa
fnsave
xchg
pop
jecxz
and
or
aam
xor
jmp
and
cmp
pop
call
shr
sub
adc
push
gs
pop
and
sbb
subl
aaa
shlb
mov
and
popa
ds
jne
icebp
fstl
test
push
aaa
xchg
sub
outsb
xor
std
sahf
cmp
stc
lea
xor
mov
mul
sti
popf
xchg
sub
inc
pop
mov
add
push
mov
and
out
mov
shlb
sub
enter
inc
je
xor
ja
mov
mov
iret
shlb
jae
cli
xchg
jbe
dec
lods
fstpl
arpl
jns
movsl
or
test
out
stos
mull
cmpsb
repnz
mov
mov
clc
inc
jbe
push
pop
shl
pop
pop
les
sbb
cwtl
mov
mov
push
fs
stos
lret
into
addb
test
cwtl
mov
xchg
ret
movzbl
pushf
mov
pushl
pushf
pushf
push
lea
jmp
movl
call
jo
or
pusha
ljmp
data16
mov
les
fimull
pusha
mov
cvtpi2ps
stos
out
jle
inc
jae
mov
push
fimull
mov
dec
ficompl
test
add
xchg
lahf
push
jp
shlb
ja
int3
or
jmp
cltd
jp
mov
stos
push
xchg
stc
inc
mov
pop
jo
lock
popa
mov
ds
add
xchg
movsl
inc
mov
aad
jecxz
pop
xchg
mov
mov
fcoml
les
ret
popa
add
adc
ljmp
dec
pop
dec
add
lock
lcall
xorb
pop
out
mov
in
xchg
sub
out
ret
xor
adc
test
shrb
insb
inc
mov
dec
mov
adc
shll
or
ret
icebp
scas
imul
adc
add
xor
sbb
test
jnp
cmp
insb
or
int3
rcrb
std
ret
or
push
xor
push
out
xchg
out
sbb
lea
mov
cmpsl
pop
pop
and
and
cmpsl
jge
in
mov
mov
pop
lock
pop
pop
dec
movsl
jle
fmuls
cwtl
mov
pop
aam
cmpsl
jne
bound
dec
dec
xor
inc
aad
dec
mov
cld
add
in
adc
call
aas
cmpb
shrl
push
mov
pushf
rorl
mov
ss
not
sub
pop
add
adc
shrl
sti
mov
push
cli
mov
or
hlt
in
xchg
mov
or
out
pushf
mov
aas
mov
xor
fidivrs
in
sub
dec
stos
and
lcall
mov
pop
and
jne
leave
and
mov
bound
sbb
insb
pushf
jae
xchg
sbb
adc
sbbl
ds
xchg
imul
pop
gs
pop
pop
xchg
add
push
imul
icebp
aas
cmp
fldcw
mov
jo
xor
xor
sbbl
dec
pop
add
push
adc
jge
and
dec
mov
fadds
push
bound
fs
stos
xchg
js
aaa
stos
or
pop
popf
mov
jecxz
movsl
dec
mov
fiaddl
mov
cwtl
mov
dec
cld
inc
flds
and
mov
sti
in
xor
call
jmp
push
pushl
movl
pushf
lea
jmp
sbb
xlat
lret
daa
mov
test
rcl
jg
jge
mov
adc
push
xor
fdivs
pop
cmpsl
or
paddusw
jmp
pusha
adc
dec
enter
flds
cmp
fsts
aaa
cmp
mov
cmp
xorl
adc
dec
and
pushf
mov
pop
into
or
mov
add
jmp
scas
popa
clc
clc
mov
inc
fildll
lock
int
stos
insb
xor
xchg
test
jge
jbe
mov
pop
mov
hlt
test
xchg
cmpsb
push
xor
hlt
lods
mov
cmp
push
fimuls
test
nop
pop
add
sub
and
mov
mov
js
pop
inc
or
sarl
fsubrs
inc
orl
cwtl
sahf
popa
mov
in
sub
lods
xchg
rcrl
pop
std
add
mov
pop
xorl
cmpsl
pop
jb
ljmp
test
test
xor
xor
shr
dec
enter
sbb
inc
fs
fs
sahf
icebp
lock
popa
xor
into
movsb
and
xchg
xor
mov
sbb
clc
or
icebp
lret
lret
cmc
loopne
std
xor
std
dec
data16
gs
sti
cld
loope
xchg
std
aad
lock
xor
in
and
popa
add
inc
xchg
pop
fwait
sbb
loop
fdivrs
xor
jle
dec
pop
test
lahf
int
cmc
adc
mov
adc
in
fdiv
xor
inc
stc
fs
popa
cmp
ltr
das
sub
das
jle
fildll
subb
cmp
pushf
lcall
cltd
cmp
xchg
out
mov
xor
cli
adc
jge
inc
xor
and
add
and
xchg
pop
ja
jcxz
fistl
ljmp
in
xchg
insl
ds
pop
and
in
cmp
adc
push
xor
ret
loope
lods
int3
pusha
xchg
and
mov
push
add
jge
enter
dec
jg
jno
push
cmp
imul
repnz
sub
repz
lcall
sahf
inc
out
xchg
jno
popf
xchg
pusha
adc
addb
or
xchg
out
popa
lret
cmp
gs
ja
insb
mov
fwait
jge
xor
rcrl
xchg
xor
mov
adc
jnp
pop
push
jl
hlt
in
in
stc
pusha
nop
arpl
es
mov
inc
adc
mov
mov
ds
jne
stc
sub
imul
lcall
stos
inc
sbb
insb
je
adc
sbb
sub
shll
and
bndldx
jecxz
xchg
ja
inc
xchg
xor
into
add
mov
push
fisubrl
sbb
cwtl
pushf
adc
leave
jmp
loope
xchg
cmpl
xor
add
pushf
pushl
ret
shl
jae
imul
jle
sti
xor
idiv
das
xor
pop
ficoml
ljmp
pop
xchg
sub
xor
sbb
jl
dec
aad
cmpsb
enter
ret
in
stc
sarb
sbb
je
clc
pushf
xchg
mov
mov
mov
jl
test
sarb
xor
cli
pop
jp
dec
jmp
das
das
out
popf
add
jg
jbe
movsl
push
cwtl
aad
aam
adc
inc
shl
nop
insb
ret
outsl
mov
into
sub
rorb
out
sub
inc
mov
imulb
sub
lret
pop
imul
stc
pop
js
out
in
cltd
lods
mov
cmp
cmpsb
jns
or
call
pop
lcall
lods
outsb
pop
mov
and
adc
addb
mov
mov
mov
ret
test
xor
subl
jns
and
pusha
mov
jne
cwtl
push
xor
cltd
fimuls
subb
in
pop
pop
shl
mov
xor
xor
gs
dec
into
pop
mov
mov
clc
aas
pop
bnd
stos
pop
or
cmpsb
sub
push
cwtl
jbe
xchg
push
sub
dec
xchg
call
mov
sub
cmp
xor
cmp
stc
pushf
test
shr
jmp
add
movzbw
movzbl
pushf
lea
jmp
pusha
movl
pusha
movb
mov
lea
jmp
or
pop
push
mov
lret
xorl
fmull
push
rclb
pop
cwtl
sub
jnp
mov
sbb
leave
lds
inc
loope
shl
mov
aam
arpl
sbb
addl
jns
daa
fcomp
jns
sub
pushf
in
shlb
and
jb
int
mov
mov
fildl
push
jbe
push
outsb
push
cmp
lahf
jne
repz
or
push
add
rcrl
lcall
and
fs
call
call
pushl
mov
sub
jo
xchg
movsl
mov
test
repz
sti
fisubs
rcrb
shl
push
xor
mov
andl
and
adc
cmp
cmp
and
mov
cmc
mov
mov
mov
dec
push
cmc
cmp
push
clc
hlt
inc
in
fs
loope
repz
stc
fcomi
shll
and
lret
add
pop
inc
lods
add
cmp
jne
xchg
mov
insl
aas
sub
mov
cwtl
cltd
mov
xor
add
movsbw
ror
mov
bsr
ror
sub
stc
rcr
lea
mov
pushf
sub
call
call
push
push
movl
push
pushf
jmp
sub
call
setbe
cmp
lea
jmp
mov
fwait
mov
inc
cmp
popa
andb
xor
jge
xor
rcl
xchg
hlt
add
dec
xor
xchg
or
adc
add
or
pushl
cwtl
xchg
push
adc
pop
in
icebp
out
cmpsl
dec
pusha
shlb
xchg
ja
mov
cwtl
xchg
repnz
test
test
lea
sbb
mov
jb
repz
imul
dec
mov
cmp
push
sti
loopne
xor
or
filds
movl
and
sbb
ds
jae
imul
cltd
cmp
jns
cmp
clc
cs
jmp
es
xor
sbb
cmp
sub
and
pop
lahf
push
xor
push
mov
cmp
mov
add
stos
test
call
repz
push
mov
cltd
scas
pop
add
repnz
movsb
mov
mov
push
dec
out
push
movsl
sbbb
adc
imul
outsb
pop
mov
lret
xchg
adc
les
lods
xor
call
pushf
movl
call
jge
xlat
mov
sbb
sub
loope
mov
mov
cmpsb
dec
hlt
xchg
mov
test
mov
pop
jns
movsb
jmp
jg
ret
or
xor
popa
cmp
ret
mov
test
cmp
insl
xor
rolb
and
sti
aam
out
aas
cmpsl
aas
dec
mov
fdivs
or
scas
and
popa
jbe
cmpsl
enter
or
inc
pop
inc
fwait
lods
adc
mov
mov
or
shll
frstor
cmp
cld
stos
dec
sub
pusha
inc
xorl
inc
imulb
lds
testl
and
jo
in
fisubrs
push
aaa
stos
dec
int3
cmpsl
add
xor
mov
jne
lods
xorl
enter
dec
lea
insl
mov
or
cmp
or
fstpl
dec
mov
outsb
inc
insb
jmp
jne
loop
xchg
stc
push
mov
cmp
cmp
aaa
cmp
aas
outsb
push
aad
lods
adc
mov
xor
scas
dec
sbb
lret
or
pop
mov
sub
imul
shlb
pop
iret
insb
fs
mov
std
dec
mov
cld
decl
xchg
shll
loop
mov
and
mov
add
push
adc
ret
sbb
pop
add
jbe
xor
into
push
hlt
test
inc
aas
in
out
cli
hlt
inc
jmp
mov
in
sub
clc
test
push
mov
ja
push
or
lock
sbb
xchg
jno
mov
cmpl
aad
outsb
sub
shl
mov
aad
test
daa
inc
xchg
nop
xchg
pop
pop
outsl
mov
std
cmp
xchg
out
insb
movl
adc
or
jmp
sarb
mov
jp
jmp
ret
mov
mov
mov
cmp
gs
cltd
sti
sarb
adc
inc
rcr
add
jle
jecxz
sub
dec
mov
outsb
jecxz
xor
in
mov
sbb
mov
lods
cmp
cs
xchg
xor
ss
cmc
aaa
inc
lds
sub
adc
push
mov
jno
pop
ljmp
jbe
push
nop
xor
call
pop
push
jle
xchg
mov
adc
test
js
enter
pusha
push
call
dec
xor
aas
cltd
sti
ljmp
and
incl
xchg
xor
inc
mov
test
pushf
gs
sub
cli
shll
cwtl
xchg
rclb
xor
jnp
xor
mov
scas
cmp
pop
jecxz
loope
inc
lahf
test
mov
lods
mov
fs
dec
imul
rcl
int
nop
sahf
pushf
nop
in
insl
ss
lods
dec
inc
data16
adc
cwtl
xchg
pop
push
jl
push
mov
xchg
adc
lea
pop
xor
cmpsb
sub
cmp
mov
and
cs
nop
js
sbb
dec
xor
ret
push
sti
int
push
mov
dec
iret
scas
in
loop
xchg
dec
push
push
mov
xor
sub
dec
or
jmp
xchg
in
test
cmp
push
sbb
sub
adc
popa
mov
loope
cmpsb
cltd
repnz
or
mov
pop
cld
test
pop
movsl
adcb
int
jmp
mov
std
cmpsb
mov
add
out
lock
mov
jg
sub
dec
push
popf
and
push
loope
cmpsl
mov
rcrb
aam
dec
inc
mov
sbb
in
dec
fsub
in
xchg
fldcw
cmp
add
adc
cli
adc
sbb
xchg
xchg
call
cli
dec
jae
push
pop
nop
arpl
sub
in
rdtsc
inc
popf
aaa
sbb
lahf
aaa
out
scas
dec
stos
pop
lds
jmp
scas
inc
in
pop
popf
dec
arpl
xor
das
cmc
or
cmc
cmp
inc
mov
and
in
mov
packssdw
cmpsl
dec
sub
mov
mov
out
jne
cwtl
xchg
inc
fwait
in
pop
add
ja
push
sbb
xchg
mov
daa
push
fidivl
cwtl
xchg
or
roll
nop
fsubrs
enter
scas
or
add
ret
out
xor
mov
xor
xlat
ret
lahf
pop
push
sbb
test
hlt
push
xor
fs
dec
ret
adc
dec
pop
mov
les
jbe
mov
std
jae
mov
ret
imul
rcr
frstor
pop
loope
and
xchg
inc
nop
dec
ljmp
andb
ss
aad
pop
bts
test
sub
jg
aam
ret
aam
adcb
lret
add
mov
fstps
jbe
cmpsl
xor
and
adc
mov
or
adc
sbb
adc
add
cmc
lods
fisubl
xchg
add
bound
sub
stos
mov
movsb
movsl
stos
enter
xor
push
arpl
or
mov
cwtl
xor
dec
scas
cmp
mov
mov
sbb
push
mulb
add
xor
insl
sub
push
pop
movsb
mov
insl
cmp
adc
arpl
or
dec
pop
stos
test
jge
mov
jb
into
imul
std
dec
pop
adc
cmpb
aad
mov
jmp
dec
jns
sarl
enter
mov
xor
pop
cmp
mov
mov
pop
push
mov
mov
jae
jbe
aam
jae
repnz
aad
jae
repz
cltd
cli
rol
jecxz
mov
loopne
inc
jl
or
lret
dec
jecxz
test
cmp
ja
insl
sbb
cmp
lock
inc
mov
ljmp
sbb
popa
cmp
jb
mov
in
inc
push
sub
and
inc
inc
add
pusha
loope
xor
xor
dec
stos
repnz
scas
inc
mov
xchg
ljmp
adc
dec
orw
subb
pop
test
mov
mov
push
jge
xchg
push
dec
xor
add
ss
testl
mov
push
dec
inc
xor
push
cwtl
mov
xor
je
dec
subb
add
push
fmul
cmc
push
add
fstps
xchg
mov
icebp
xlat
std
add
push
mov
push
in
in
mov
pop
sub
fsubr
add
aaa
xchg
or
aaa
push
mov
cld
std
mov
add
repnz
and
in
rclb
inc
jae
or
into
add
xor
in
pop
adc
mov
jnp
cld
mov
ror
scas
adc
aad
adc
test
rcrb
jno
xlat
adc
sub
xor
nop
mov
inc
jp
in
cli
xchg
mov
xchg
int
sub
rcrb
ja
inc
loopne
cmovno
call
mov
pop
repz
mov
imul
mov
es
cmp
ljmp
inc
in
xchg
mov
ljmp
and
sub
and
inc
jns
cwtl
push
imul
jbe
scas
jl
in
lahf
andb
aam
and
xchg
mov
sub
xchg
ret
pushf
jle
xchg
push
jmp
movsb
jp
pop
xor
adc
stos
dec
mov
das
pop
lea
clc
sahf
jns
sbb
mov
sbb
leave
xor
jae
pushf
pushf
movl
jmp
gs
jp
pop
push
push
xchg
jno
inc
push
inc
syscall
fs
loope
popf
faddl
call
sti
paddd
add
mov
cltd
popf
stc
add
test
int
lds
test
cs
push
mov
lds
mov
push
lcall
flds
loope
imul
cld
pushf
test
test
outsl
adc
ds
test
mov
lcall
dec
xchg
or
faddl
js
mov
aad
and
gs
dec
mov
popa
fnstsw
int3
subl
xchg
dec
sbb
dec
mov
mov
add
inc
push
bound
ds
dec
dec
xor
or
cld
jge
xor
pop
cltd
sub
add
dec
inc
or
call
xor
mov
imul
inc
jge
fisubrs
pop
cmp
outsl
or
jne
pop
popf
xchg
push
pop
jne
test
ss
fs
cmpb
inc
jecxz
dec
lahf
hlt
jecxz
mov
out
stos
push
cmp
mov
mov
inc
add
or
jns
xor
aas
mov
mov
jb
jno
sahf
je
movsl
shl
xchg
push
cltd
out
aad
lcall
or
xor
cmpsb
ret
adc
fidivrs
xchg
enter
cmp
clc
push
std
pop
repnz
pop
cmpsl
dec
aas
jo
cmpsl
mov
xchg
movsb
rcl
mov
pop
orl
xchg
orl
inc
sbb
or
xor
jmp
push
and
pop
shrl
mov
cmp
pop
push
cmp
bound
cmc
xchg
rcrb
push
das
fld
js
clc
ret
mov
mov
out
or
arpl
loop
in
or
inc
inc
xor
sbb
dec
cmc
in
out
add
push
mov
fistpll
fstpt
test
mov
sti
or
aas
adc
inc
cmp
mov
fcomps
filds
and
lcall
mov
jae
cs
inc
fs
cltd
jle
sahf
push
insl
ja
dec
stos
dec
call
mov
addr16
mov
cmp
xor
gs
sbb
out
push
dec
cmpsl
jg
inc
inc
pop
xchg
adc
outsl
xchg
gs
sub
mov
outsl
mov
add
std
mov
dec
xor
dec
push
inc
or
pop
orb
and
xor
mov
sbb
sub
sub
cmp
xchg
mov
pop
hlt
adc
jne
mov
sarb
mov
adc
cs
shr
adc
cmpsb
fisubl
mov
push
adc
mov
call
mov
mov
cmp
push
inc
jge
sarl
mov
push
shrb
mov
lret
xchg
inc
xchg
rcrl
hlt
inc
insb
fistpll
cwtl
cmpps
sub
inc
pop
in
rclb
add
cmp
add
scas
xchg
pop
inc
fidivl
int3
into
je
mov
mov
data16
int3
sbb
lret
jbe
push
jne
insl
mov
pop
jp
jns
inc
pop
or
jns
gs
sub
fldenv
and
lea
sub
roll
dec
sub
push
push
xor
and
xchg
shrb
inc
clc
jnp
ss
adc
es
jle
sbb
outsb
push
sbb
push
cmp
mov
dec
dec
hlt
in
xchg
cltd
push
jmp
xchg
flds
cmp
pop
shll
mov
aaa
testb
js
dec
idivb
push
cmp
inc
aaa
int
push
test
fnstenv
adc
cmp
stos
rcll
cmp
hlt
cmc
mov
pop
mov
testb
xchg
and
mov
jo
rcrb
daa
enter
aad
leave
aaa
xor
mov
ret
aaa
sub
test
sar
adcb
cwtl
push
ljmp
enter
subl
mov
fnstenv
fs
push
and
aam
sbb
and
aam
mov
in
icebp
jno
cmpsl
push
and
fld
mov
test
cmp
movl
out
pop
inc
cltd
inc
mov
dec
add
fistpll
sahf
ss
xor
ret
sub
xchg
jnp
into
xchg
aaa
jp
mov
sahf
fdivp
adc
and
push
inc
jmp
repnz
fisubrs
sub
xor
push
adc
mov
jp
loop
xor
leave
popa
ret
imul
sub
loope
mov
scas
fcomi
pop
mov
sbb
push
mov
adc
or
cmp
xchg
gs
dec
sub
sub
leave
sbb
movsl
sbb
add
xor
jbe
addr16
lock
dec
scas
dec
lods
ja
pop
lahf
shll
adc
lods
mov
mov
cs
pop
mov
fldt
mov
adc
jp
xor
hlt
and
jae
imul
dec
lods
jne
fistpll
icebp
mov
in
xor
iret
jmp
aam
pop
cmp
dec
test
lods
aam
ljmp
dec
hlt
push
outsl
fldenv
sub
ja
cwtl
mov
cmp
imul
and
jg
pushf
push
lea
jmp
add
call
call
mov
push
sbb
es
lea
xchg
cwtl
add
mov
popa
mov
mov
repz
inc
pop
popa
xchg
orb
jp
out
mov
ja
sub
jg
mov
mov
dec
bound
loope
cmp
lods
dec
xor
sbb
cwtl
movsb
push
test
orb
mov
cmpb
cltd
dec
or
lcall
adc
test
push
pop
shrb
outsl
pushf
sbb
lret
xchg
shrl
ljmp
pop
pop
sub
scas
pushl
mov
pop
cmp
xor
cs
shl
out
andl
jecxz
inc
test
xchg
pushf
sahf
std
imul
mov
js
sahf
mov
mov
fdivrl
jl
jbe
fimull
fistl
shlb
in
lea
xor
push
pop
xlat
bound
inc
xchg
das
xor
adc
cltd
loopne
cld
iret
push
cs
xchg
call
mov
mov
movl
push
movl
push
lea
jmp
shl
lea
movzbl
jmp
lods
dec
jmp
mov
push
mov
inc
cmp
fisttpl
mov
inc
cwtl
les
rcrl
push
rorb
enter
xchg
lret
mov
cmp
xchg
aas
xchg
test
lahf
push
pop
pop
shr
pop
add
stos
mov
sbb
inc
xor
pop
mov
sbb
sarb
movsb
sbb
icebp
cs
pop
fimull
add
pop
sub
sbb
out
jbe
jns
nop
adc
xchg
xchg
shrl
push
out
mov
aaa
cltd
clc
jo
adc
add
scas
test
jns
sbb
mov
mov
xor
dec
or
aas
pop
int3
es
mov
lods
dec
imul
jmp
sbb
pop
sub
or
sbb
divl
add
lret
stos
dec
mov
fldl
int3
xchg
fldl
scas
xor
mov
loopne
mov
jmp
jg
xchg
sti
cli
or
jbe
adc
push
jns
lret
stc
push
in
inc
push
cmp
mov
cli
sub
push
pop
out
clc
outsb
jnp
push
adc
bnd
or
push
jo
iret
outsb
mov
push
shr
ficomps
outsb
incl
inc
lods
or
sub
push
xchg
dec
movsl
jecxz
jl
cmp
mov
push
or
in
in
cmpsb
dec
push
mov
add
sbb
rorb
sarl
mov
push
and
jp
mov
je
dec
cmpl
data16
test
xchg
das
insl
jp
in
repz
push
fdivrl
mov
cmp
lret
ja
or
xor
pop
inc
jg
jp
xlat
add
cmc
dec
out
inc
outsl
mov
addr16
mov
cld
inc
repz
leave
int
fidivrl
dec
sbb
adc
lds
or
jnp
inc
xor
mov
adc
inc
repz
mov
adc
pop
fnstsw
pop
xor
pop
push
xor
sub
xor
frstor
js
cmp
test
lahf
mov
cmp
adc
cmp
stos
dec
clc
cld
stos
adc
xchg
enter
mov
mov
stos
inc
pop
into
sbb
es
lret
pop
mov
cld
repnz
add
xchg
gs
jno
xorl
sub
mov
fs
push
sbb
sub
xchg
fsubrl
cwtl
test
sub
ljmp
sarl
adc
xchg
lods
xor
dec
push
pushf
andl
rcll
adc
mov
jg
in
xor
cwtl
test
lret
xor
or
ret
jg
push
sub
cmp
dec
xchg
adc
push
dec
xchg
jge
mov
aad
xor
inc
mov
jle
outsb
adc
sbb
adc
jmp
sub
cmp
push
in
lret
imul
sbb
cmc
out
and
and
shrl
mov
adc
in
aad
cmpsb
mov
mov
nop
in
stos
mov
mov
jns
mov
adc
inc
mov
imul
lahf
cmp
rorl
cmovae
jl
sti
dec
popa
xchg
in
lods
jbe
push
xchg
pushf
jl
mov
stos
xor
dec
mov
xor
out
mov
push
jb
add
int3
sbb
sbb
pushf
push
push
iret
lods
xor
mov
push
jns
into
inc
movsb
dec
fwait
pop
push
repz
mov
add
xlat
inc
mov
mov
pop
mov
push
loope
cwtl
xor
jae
cwtl
xor
call
lock
xor
cmc
mov
dec
imull
jp
pop
mov
cmp
and
es
shll
jecxz
out
xor
bt
cmp
mov
mov
mov
jmp
adc
icebp
xchg
sbb
xor
xor
scas
jns
pop
or
add
dec
mov
ds
sub
loop
or
xor
xor
mov
jg
mov
pop
pop
enter
push
imul
mov
sbb
mov
fsubrl
outsw
lahf
insl
cmpsl
rcl
xor
das
xor
pop
xor
push
pop
adc
ret
jno
pop
or
aam
mov
xor
sub
rcrl
iret
mov
pop
std
or
pop
out
add
xor
movl
push
lea
jmp
jmp
and
cmpl
xlat
pop
push
adc
adc
loop
mov
cmovg
pop
fwait
inc
mov
mov
pinsrw
lods
arpl
insb
bound
push
lcall
mov
ljmp
sub
orb
ret
or
cld
fisubrs
mov
mov
hlt
xor
ljmp
mov
jo
mov
movsb
nop
xlat
sub
cmp
repnz
lods
nop
pop
loopne
add
cmpsl
out
pop
mov
xchg
dec
rorl
fdivrs
xchg
push
inc
lock
sbb
daa
cmpsl
xchg
hlt
imul
and
imul
stc
sub
xchg
xor
call
aas
or
cwtl
sbbl
cwtl
roll
or
and
dec
lret
jecxz
fnsave
cmp
push
xor
movl
mov
lea
jmp
in
insl
filds
push
cmp
adc
stc
fdivr
sub
mov
cltd
inc
insl
jl
jnp
sub
jl
mov
out
jge
adc
cmp
add
dec
jg
ds
call
push
jb
lret
in
xchg
test
and
cmp
fbld
icebp
negb
mov
pop
cmp
cwtl
lds
imul
and
xor
and
add
push
xchg
cmp
cmpsb
testl
cs
xchg
mov
in
faddl
xor
leave
ljmp
orb
and
push
sahf
pushf
arpl
jnp
jp
scas
lahf
imul
sti
rcrl
aas
int
fnstsw
in
mov
repnz
test
imul
jl
pop
clc
xor
negl
mov
rorl
insb
xor
xorb
sbbb
inc
out
jo
nop
aaa
mov
dec
add
hlt
inc
dec
cmpsl
xor
cmp
dec
ljmp
fidivl
ret
cmc
shr
xor
sbb
movsl
dec
icebp
cmp
pop
mov
push
dec
xor
xor
pop
mov
addl
and
in
dec
sar
dec
dec
fwait
push
sbb
repnz
mov
fisttps
mov
jle
cmp
test
lods
arpl
inc
or
ret
push
jne
cmp
xor
or
jo
out
data16
insl
inc
and
notl
ss
xchg
arpl
mov
jo
xor
jae
ret
ret
mov
rolb
dec
aad
adc
xor
push
mov
pushf
lea
jmp
adc
gs
push
outsl
pop
leave
mov
add
cmpsl
dec
cmp
andl
and
ffreep
mov
in
cld
fidivrs
mov
call
bnd
addr16
ret
or
jns
and
pop
cwtl
aaa
or
jl
faddl
push
int
inc
fcom
into
jb
adc
pop
mov
enter
mov
pushf
pop
jge
pop
lods
pusha
jl
or
cwtl
jle
pop
icebp
sbb
insb
mov
adc
sbb
xor
movl
pushf
lea
jmp
add
clc
cmc
sub
pushf
add
pushf
cmc
xor
dec
movzbw
pushf
jmp
call
test
outsb
and
sbb
xlat
mov
jge
sub
rorl
js
and
pop
data16
xchg
or
jae
xor
lahf
mov
idivb
mov
outsl
inc
adc
and
lods
rcrb
and
cli
ds
outsl
mov
dec
sbb
xchg
out
jg
push
cmp
inc
ror
popa
fbld
dec
xor
test
inc
sbbl
xor
subl
cwtl
jle
aas
and
xchg
ljmp
int
push
insl
mov
bound
ss
lds
mov
xchg
push
dec
aas
xor
jp
dec
xor
xor
lret
jp
pushf
and
pop
mov
cmp
or
push
popa
mov
fnstenv
inc
adc
mov
imul
jecxz
and
cmpsl
sub
cwtl
jl
pop
stos
call
lods
mov
jg
push
pop
cld
rcrl
scas
inc
sbb
xor
imull
inc
xchg
cmp
inc
pop
fdivrl
pushf
loop
in
push
dec
fildll
and
cmc
pop
repnz
std
and
adc
stc
movb
call
cmp
cmp
mov
call
xlat
mov
addl
mov
jp
xor
shll
add
cmp
icebp
xor
add
stos
fcomps
mov
repz
lds
cwtl
jge
mov
pushf
jmp
ret
jle
imul
mov
lea
adc
push
mov
jnp
xchg
fldl
cltd
jnp
cmpsl
add
aam
jb
jle
imul
pop
sahf
add
ficomps
fsubrl
insb
jae
ret
mov
loop
cld
in
or
aam
ja
cmp
xlat
or
daa
cwtl
clc
dec
sub
scas
cli
and
sub
ja
fsubl
push
insl
push
mov
in
adc
testb
loopne
sahf
inc
mov
cmp
cmp
cmpsb
mov
iret
mov
loop
testl
bound
sti
loope
pop
outsb
and
loopne
shlb
mov
addr16
mov
mov
xor
outsl
sub
movb
testl
push
clc
mov
pop
sbb
mov
aaa
popa
jae
cwtl
pop
sbb
adc
and
lea
test
aad
test
push
movsl
cwtl
mov
mov
ljmp
lahf
mov
notb
cwtl
in
scas
jns
xchg
dec
std
add
popf
adc
jp
xchg
xor
cltd
cmp
mov
inc
bound
pop
divl
jge
test
xchg
push
inc
add
jle
dec
pop
ret
call
pop
cs
dec
xchg
std
jns
xchg
jb
fiaddl
aad
and
lcall
xor
mov
dec
fisubl
aaa
lahf
jnp
fstpt
pop
dec
push
aaa
scas
test
add
addr16
mov
sub
rcrl
pop
pusha
in
jbe
xchg
jg
mov
inc
fnstenv
mov
inc
jbe
pop
mov
pushf
outsl
sbb
jno
out
adc
cwtl
jnp
lods
hlt
pusha
pushf
inc
pushl
clc
cmp
jmp
push
pushf
lea
je
push
pusha
movl
pushf
pushf
pushf
pushf
lea
jmp
shl
movb
movw
lea
jmp
add
mov
sub
inc
imul
int
inc
sti
push
ljmp
xor
push
mov
fwait
mov
shr
popl
fs
enter
push
mov
testb
das
push
pop
fidivrl
cmp
add
or
push
xor
pop
push
inc
adc
mov
aad
mov
mov
cs
scas
mov
iret
cmpsb
mov
cwtl
jp
mov
out
dec
mov
jmp
jmp
mov
call
insb
mov
test
adc
adcb
add
pop
cmp
sar
fsts
pop
adc
shrb
inc
pusha
jnp
enter
mov
inc
arpl
or
mov
pop
rcl
jmp
inc
mov
mov
nop
lcall
or
inc
sahf
sub
push
ljmp
je
lds
stos
or
cltd
jbe
dec
enter
pop
cs
add
sbb
movsb
inc
mov
mov
mov
mull
movsl
bswap
frstpm(287
dec
push
das
inc
in
push
aaa
inc
repnz
movsl
adc
or
ljmp
and
xor
das
imul
gs
or
fwait
mov
inc
mov
cwtl
jns
push
out
arpl
rcl
cmpsb
and
sub
xor
pop
imul
dec
cmp
aam
sarl
shlb
cwtl
jns
mov
or
test
and
jp
inc
jecxz
jno
dec
push
cmp
xor
and
cmp
testl
cwtl
js
pusha
test
sub
cmc
pop
in
in
stos
adc
mov
mov
pop
pop
ret
add
push
sbb
out
inc
inc
dec
dec
cs
ficoms
add
iret
popf
dec
mov
into
cli
xchg
adc
enter
mov
std
or
mov
stc
xor
lock
imul
test
nop
xchg
pop
cli
or
repnz
lock
xor
movl
jmp
jl
test
add
sbb
xchg
inc
sbb
js
push
repnz
ja
ds
fs
fnsave
loop
dec
xchg
pop
mov
add
sub
pop
adc
push
call
ret
pop
addr16
repnz
sbb
das
jbe
mov
test
add
divl
rorl
push
mov
rcrb
and
outsl
sahf
cmp
xorl
pop
sub
mov
cmp
jmp
les
mov
aad
pop
xor
jmp
mov
int3
arpl
and
pop
aaa
xchg
out
pop
jns
push
shrl
inc
cwtl
testb
cmp
cmovnp
inc
and
xor
vmaxpd
push
cmc
andb
out
dec
push
cli
adc
aaa
stos
inc
jp
push
jns
and
je
lcall
bound
mov
add
arpl
pop
cmpsl
std
dec
ss
cld
xor
fisubrs
sbb
loope
mov
out
out
mov
pop
icebp
ret
es
pop
ret
rol
xor
rorl
sub
test
mov
test
dec
xchg
jno
dec
std
adc
insl
cmc
cmp
jg
or
daa
pop
out
pop
jg
dec
fstpt
xor
add
pop
repz
rcll
jmp
pop
mov
mov
ret
scas
push
rolb
or
daa
les
xchg
xchg
or
pop
sub
pop
lcall
dec
in
testl
sbb
aam
and
pop
fwait
je
iret
mov
and
add
repnz
mov
scas
mov
xor
imul
lahf
and
leave
jmp
jb
or
cld
cmp
cmc
cmp
repnz
or
pop
cmpsb
divb
dec
movsb
add
push
or
xchg
add
test
or
mov
fisubs
cmp
mov
xor
xorb
jbe
loop
call
shll
in
push
xor
testl
shll
or
jp
rcrb
mov
inc
rol
cmp
loop
jno,pn
mov
inc
in
or
pop
sbb
sub
push
pushf
jecxz
inc
jle
popf
aaa
movsb
sbb
fiaddl
jge
sub
ror
loopne
lods
xchg
into
xchg
call
clc
loope
ret
push
pop
test
add
pop
iret
add
imul
into
inc
adc
lods
iret
xlat
sarb
push
fcoms
jnp
insl
jns
daa
xchg
movsl
ds
jmp
pop
lock
mov
je
xchg
mov
aas
or
inc
pop
js
fisttpll
add
jmp
call
mov
ljmp
pop
cmc
sbb
iret
pop
xchg
pop
mov
sub
mov
or
inc
incb
push
dec
das
xor
pop
inc
mov
add
iret
jle
mov
rcrl
ss
mov
cltd
xchg
aas
mov
push
shrl
push
lahf
mov
ljmp
add
out
call
insl
in
inc
jmp
inc
or
mov
xor
mov
push
adc
enter
movsb
sbb
shr
lea
insb
pop
sub
ficomps
test
mov
in
xor
xchg
xor
pusha
decb
imul
ret
ja
pop
mov
or
in
cmpl
mov
mov
push
sub
pop
adc
xor
cmp
fdivrl
fwait
imul
push
mov
loope
xor
arpl
shll
pop
pushf
adc
cmc
cmp
xchg
adc
pop
xor
mov
imulb
jge
fldcw
xor
push
stos
push
dec
mov
pop
call
daa
mov
and
add
sub
xchg
movsb
stc
loop
xlat
add
jno
scas
push
cmpsl
push
aaa
lock
mov
std
inc
cld
lods
jge
push
daa
fs
cli
test
pop
call
xchg
xchg
cmpb
push
icebp
dec
xor
dec
shrb
mov
jp
mov
and
push
notb
adc
scas
mov
jp
xlat
fisubs
repnz
daa
pop
pop
scas
inc
js
and
mov
popf
or
sub
out
stos
dec
aad
mov
xor
mov
or
sbb
or
test
inc
add
aaa
and
ds
leave
pop
push
outsl
mov
repz
repz
cmpl
fbld
add
fwait
mov
adc
daa
and
pop
push
mov
cli
test
sbb
mov
dec
push
and
sti
cmp
sub
rol
xchg
and
add
loope
in
mov
push
push
mov
mov
jp
and
shlb
add
sahf
add
add
shll
xor
test
cmpsb
pop
cltd
loopne
shrb
xor
xchg
push
cmp
out
xchg
and
repnz
ljmp
test
mov
pop
xlat
cmp
xor
mov
cs
jecxz
xchg
mov
adc
shlb
xchg
push
push
in
dec
jecxz
jb
mov
sub
lods
or
ret
jl
mov
int3
xor
sar
insb
xchg
jmp
adc
nop
shrb
mov
lret
mov
repnz
mov
mov
cwtl
push
lcall
std
mov
mov
adc
shr
stos
lcall
sub
pop
pop
in
test
dec
stos
lcall
std
xchg
lock
mov
out
sbb
cmp
ss
arpl
int3
cmc
xchg
pusha
pop
push
xor
cmp
aaa
inc
push
rcrl
movsl
imul
pop
cmp
out
push
push
mov
mov
push
scas
push
mov
enter
js
fdivs
into
cmpsl
add
imul
pop
lods
cmpsb
or
push
lods
add
adc
xchg
sbb
push
aam
cmp
notl
pop
adc
mov
inc
mov
rep
mov
sbb
movsl
imul
pushf
outsl
shll
sub
or
loope
mov
push
movsl
adc
out
xor
call
push
add
arpl
aaa
std
fs
sti
xchg
push
mov
test
and
mov
in
cmpsb
dec
sub
data16
xor
stos
add
lods
cltd
fiadds
sbb
add
popf
call
scas
sbb
mov
mov
fsubl
push
dec
pop
jbe
dec
and
outsb
push
or
daa
js
mov
cli
dec
int3
lods
sbb
in
push
or
cmpsl
add
jmp
push
sbb
xchg
dec
insb
movb
jge
dec
jp
ljmp
mov
testb
push
pop
int3
pop
sysret
pop
ds
inc
in
xor
cld
sahf
dec
sbbl
clc
pop
mov
fisubl
mov
movsl
sbb
cmp
and
aas
ljmp
cmp
ret
xor
mov
stos
repnz
mov
jo
xor
mov
pop
push
cltd
rcr
test
dec
mov
out
xchg
fs
inc
jbe
pop
daa
sbb
xchg
push
adc
and
jb
mov
jg
push
pushf
ds
lahf
or
aaa
mov
mov
or
bound
push
add
ss
addr16
adc
test
hlt
shl
outsb
pop
iret
push
hlt
mov
adc
movsb
cmp
sbb
loope
movsb
inc
adc
repnz
into
mov
andl
out
outsb
or
test
ja
jge
insl
lret
adc
sbb
insb
add
movsb
jno
ja
xchg
divb
cwtl
outsl
pop
out
cwtl
out
mov
mov
mov
cli
cmp
repnz
jo
out
mov
sbb
stos
push
xchg
add
or
sub
scas
xor
iret
iret
adc
out
sbb
jb
mov
push
xchg
pop
push
inc
enter
dec
es
pop
mov
or
cltd
mov
int3
daa
jae
xchg
sub
mov
dec
jge
jns
and
loope
pop
and
jo
and
pop
cmpsb
pop
in
cmp
imulb
in
int3
and
aam
jae
jns
ss
bound
call
insl
daa
xchg
fisttpl
mov
sahf
icebp
or
mov
ljmp
jmp
sbb
pop
dec
or
out
cwtl
outsb
cmp
sub
sub
stos
popf
cs
mov
add
sahf
fisubl
bnd
inc
pop
xor
mov
fs
xor
lcall
bound
ljmp
dec
mov
fidivrl
fisttpl
lcall
and
lea
and
mov
arpl
lahf
shlb
mov
mov
and
outsb
inc
push
cld
adc
lods
jno
sahf
and
es
cmpsl
std
rclb
enter
and
and
fucomp
fs
xchg
push
fsubl
cs
pop
inc
cld
mov
pop
test
inc
push
jg
xchg
ret
in
ds
or
lahf
ljmp
fcomps
mov
movsb
lea
out
int
ret
dec
sub
push
addb
pop
adc
add
jbe
mov
jbe
out
mov
mov
shll
push
idivb
and
pusha
sbb
jg
aam
xor
movsl
movsl
imulb
pop
loop
mov
das
and
jl
rcrb
sub
cmp
repnz
orl
int3
jbe
pop
loopne
das
int3
dec
xor
adc
dec
xor
jge
ja
xor
ss
out
cmpb
cmpl
jns
sbb
js
imul
ret
push
nop
fwait
mov
push
cmp
scas
lret
adc
popf
stos
fstpl
addr16
dec
add
addr16
pop
xor
dec
dec
mov
inc
push
sub
add
push
fsubrs
xchg
loopne
xchg
pop
mov
xor
movsb
mov
je
movsl
lret
fcoms
test
stos
je
inc
sahf
jb
jp
out
outsb
mov
dec
repnz
inc
sub
leave
pop
inc
inc
jl
rorb
pop
mov
jmp
pop
testb
cmc
push
ds
pop
icebp
or
icebp
and
divb
jnp
aam
ret
pop
mov
push
gs
jmp
lret
leave
adc
add
push
push
js
in
fwait
jbe
out
xor
dec
sub
aaa
pop
movsl
in
jmp
ds
mov
push
xor
push
mov
xchg
cwtl
push
mov
cwtl
cmpsb
sahf
mov
sbb
ror
lods
and
jo
lahf
icebp
and
dec
jb
ja
cmpsl
enter
jns
mov
jmp
push
outsl
mov
lea
adc
sbb
enter
jae
int3
and
cli
out
ja
jg
xchg
btc
mov
xor
loope,pt
xchg
jp
dec
and
mov
ljmp
and
jp
out
xor
push
sub
out
cmp
and
adc
push
cmp
subl
clc
lret
mov
mov
out
sub
push
push
and
jmp
xor
cmpsl
xor
mov
adc
and
push
faddl
ret
mov
xchg
add
scas
inc
stos
int
pop
mov
lods
dec
stos
test
cltd
add
cmc
xchg
mov
jb
loope
ljmp
lahf
addb
or
sbb
xlat
xchg
stos
mov
jmp
mov
ljmp
icebp
cmpsb
dec
mov
add
dec
test
rol
stos
mov
clc
into
aaa
pop
xor
sub
and
sbb
cmpsb
rcl
das
or
repz
out
or
andb
scas
mov
xchg
mov
and
cmp
mov
mov
je
aam
mov
dec
jge
cmp
je
imul
dec
pop
inc
mov
in
jb
jbe
ficoms
push
in
pop
cmp
test
push
andl
xchg
out
repz
imul
or
int
out
xchg
subl
in
or
notl
ds
and
out
stc
movntq
push
or
jno
jns
movsb
cmp
pop
jnp
daa
test
cmp
push
jno
sbb
inc
push
jmp
aad
add
les
in
sbb
or
push
pop
push
subl
arpl
insl
mov
pop
cmpsb
sbb
fsubs
movsb
int
xor
push
xchg
pop
jge
pop
push
sbbl
pop
outsb
jb
ret
mov
arpl
mov
adc
popa
adc
popf
outsl
or
pop
stos
jge
adc
adc
xchg
mov
les
push
xchg
push
movsl
cmp
ss
inc
lods
xchg
cmp
adc
push
ds
out
xchg
adcl
imul
jae
and
pop
movsb
jmp
out
out
fildll
repz
jns
lods
repz
out
ja
dec
cmp
jbe
cmp
jne
icebp
imul
jo
adc
mov
or
mov
or
std
jle
imul
std
ret
mov
rcll
shl
cmp
jae
push
xchg
dec
xor
push
xor
cwtl
push
dec
ret
aas
or
mov
mov
inc
push
jg
jbe
or
add
pop
push
inc
in
jae
ljmp
shrl
int
cmpsl
xchg
dec
mov
aaa
pop
adc
aas
or
push
inc
clc
pop
dec
out
mov
lock
xor
ljmp
adcl
mov
cld
jmp
insl
call
insb
into
mov
fdivrl
add
push
pop
fwait
mov
inc
add
jmp
fistpll
xor
xor
jmp
and
dec
stos
dec
mov
pop
xchg
xor
ljmp
xor
adc
add
lods
hlt
fs
mov
xor
pushf
pusha
movl
pushl
movl
pusha
lea
jmp
movl
mov
lea
jmp
cmp
call
and
sbb
scas
dec
sbb
sub
or
and
icebp
dec
xchg
pop
stc
cmp
xor
leave
adc
sbb
shlb
mov
hlt
stos
out
or
data16
testl
dec
addl
mov
sub
les
jbe
aaa
iret
movsl
push
mov
mov
test
mov
mov
iret
dec
add
daa
mov
pop
pop
test
gs
cs
clc
mov
dec
subb
test
adc
jecxz
add
mov
mov
test
test
lret
mov
cli
pop
cmp
mov
scas
loope
pop
mov
mov
push
sub
cli
pop
aaa
mov
jnp
sub
dec
test
aam
mov
inc
cmp
add
adc
jns
sbb
imul
in
jns
loop
hlt
dec
js
fidivrl
mov
push
pop
hlt
xchg
sbb
dec
push
add
ljmp
xchg
lcall
pop
xchg
mov
in
sub
das
pop
cmc
or
xlat
mov
xchg
in
in
cmc
jnp
cmpsl
xor
mov
sub
test
jl
cmc
stc
push
cmp
mov
and
xor
fnstsw
push
frstor
cs
sbb
push
xchg
adc
repz
push
sub
movsb
xor
add
addr16
jbe
pusha
mov
push
jg
cmpsb
mov
iret
pushf
in
xchg
nop
cmp
sub
adc
xchg
and
lods
cwtl
xor
imul
dec
cmc
mov
inc
adc
mov
sti
je
mov
mov
inc
fsubp
popa
movb
xchg
daa
pop
stos
xchg
and
pop
xor
adc
sbb
std
or
sub
gs
movsl
mov
ljmp
push
das
jbe
push
xor
stos
pop
rcr
lahf
mov
icebp
hlt
and
nop
sub
les
rorb
out
lods
rorl
je
popa
hlt
xchg
and
pop
dec
imul
cmpsb
xor
add
sub
shrl
cmp
lods
imul
clc
sbb
pusha
fisubrs
push
xchg
cmp
ret
push
xchg
cltd
js
jmp
ret
lods
sub
cwtl
gs
iret
jne
adc
sub
add
inc
xor
pop
jns
pop
outsb
lock
mov
inc
mov
frstor
pop
mov
mov
mov
daa
cmp
inc
mov
mov
enter
inc
into
push
lcall
inc
xlat
xchg
clc
in
mov
sub
std
pop
push
and
jl
push
lea
mov
mov
add
mov
fimuls
clc
xor
out
mov
adcb
pop
inc
adc
movsb
test
nop
push
pop
sub
mov
pop
fs
pop
rorb
pop
clc
gs
push
adc
dec
cmp
xor
and
pop
ljmp
fnsave
stc
sti
mov
setbe
cwtl
stos
nop
cmp
lret
aam
repz
cltd
dec
and
push
ret
lret
pop
out
xchg
lret
imul
mov
pop
cmp
mov
sti
dec
pop
into
mov
dec
daa
lret
lods
repz
es
xchg
sbb
xchg
mov
sub
ds
out
daa
sbb
test
sub
into
int3
jo
cmp
out
and
xchg
xor
inc
hlt
sub
jge
xor
mov
cli
sahf
stos
push
push
shl
sub
int
cmpsl
andb
pop
add
add
pop
fildll
cs
pop
pop
in
cs
pusha
inc
xchg
push
les
xchg
lret
std
sbb
mov
sbbl
pop
inc
pusha
inc
out
dec
ljmp
xchg
and
aas
mov
out
es
sub
or
test
cmp
addr16
fnstcw
repz
sahf
int3
cli
lcall
push
dec
push
inc
and
in
fs
fldcw
mov
dec
sbb
outsl
shlb
mov
mov
nop
push
dec
push
jg
nop
mov
push
push
inc
stos
out
push
mov
cmp
mov
cmp
xor
int3
xchg
test
cmp
sbb
xchg
js
dec
inc
push
jno
push
cmp
rclb
data16
pop
jne
dec
push
cmc
leave
lds
cmp
mov
lcall
mov
push
cmp
aas
scas
lret
dec
daa
test
sub
xchg
push
cmpsl
sbb
rcrb
xor
dec
sti
cmpsb
sbb
or
fstps
mov
sub
mov
push
pop
imul
and
ja
or
and
ljmp
push
jne
ss
xchg
outsl
mov
mov
loopne
idiv
adc
pusha
cwtl
les
pop
and
sub
xchg
gs
scas
mov
icebp
test
adc
inc
and
mov
dec
push
add
imulb
cmp
sar
mov
inc
iret
push
inc
test
lret
in
sbb
fadds
sub
scas
fisttpll
ja
sub
and
outsl
dec
cli
ret
jp
out
lea
jmp
add
mov
pop
cld
and
repnz
add
aaa
flds
bound
jae
and
out
cmp
add
jp
push
jg
add
test
mov
mov
fdivrl
inc
inc
loopne
mov
xchg
clc
loope
adc
adc
add
fistpll
outsb
add
jp
lea
lcall
add
xchg
and
pop
dec
xor
lret
and
and
scas
stos
fimuls
xor
sbbl
mov
mov
pop
ljmp
xchg
sbb
jb
xchg
outsb
xchg
hlt
pop
stos
sub
xchg
ja
lcall
ror
push
cltd
cmp
xor
push
pop
sti
adc
sub
or
sbb
xor
cwtl
popa
xchg
repz
xlat
mov
sti
mov
sub
sarb
test
and
adc
cmp
pushf
add
xchg
pop
lds
popf
sti
xor
mov
leave
sub
push
sub
jp
pusha
xchg
loope
ja
adc
leave
pop
js
sub
jae
inc
icebp
mov
insb
mov
mov
sub
adc
cwtl
jne
inc
dec
je
out
rclb
sbb
sbb
or
mov
shr
pop
repz
xchg
bnd
scas
dec
test
sbb
dec
jo
inc
jge
push
sbb
jne
nop
jae
shl
es
fisubrs
inc
sbb
mov
test
cwtl
jns
imul
enter
sarl
push
sub
jmp
sub
pop
mov
and
mov
mov
dec
xor
fidivs
cwtl
pusha
inc
mov
ljmp
es
sub
xorl
or
xchg
arpl
or
setl
cmp
sbb
lret
stos
shr
add
or
mov
or
ljmp
add
mov
fisubl
jne
cmp
nop
sub
inc
dec
sti
adc
xchg
mov
fstpt
in
push
mov
loop
cmc
xor
or
adc
sub
shr
cmp
cmc
cmp
out
inc
mov
push
std
ret
mov
ret
jae
jl
test
jl
ret
sbb
jae
xor
mov
rol
out
mov
movsb
inc
cli
pushf
cli
movsl
rcrb
push
sub
inc
sbb
sbbb
mov
push
loop
jae
push
mov
cli
and
mov
pushf
or
inc
sti
int
js
pop
inc
dec
das
dec
imul
cmp
xchg
in
xlat
cld
shlb
mov
jge
xor
jmp
mov
mov
jmp
and
cmc
test
jmp
jmp
sub
out
mov
gs
mov
xor
sbb
clc
sbb
daa
pop
clc
sbb
jl
push
rcrl
aas
fsubl
test
inc
repnz
repz
in
aas
stos
jle
sahf
nop
dec
aas
cmp
cmp
xchg
dec
test
pop
adc
push
outsl
js
sub
add
fmuls
into
hlt
mov
inc
out
push
in
arpl
mov
xchg
repnz
int3
cmpsl
fisubrs
pop
pop
push
decl
ss
jo
icebp
xor
inc
sbb
test
sbb
mov
test
testl
jmp
lahf
imulb
or
mov
lods
pop
and
lods
sbb
fistpll
sbbb
stos
cmpsb
push
jle
aad
mov
dec
jb
insb
js
ljmp
std
stc
push
sub
cmp
jne
incl
leave
sti
xor
outsl
mov
mov
jge
and
adc
fimull
and
adc
int
loope
dec
jns
insb
lods
ret
push
decb
jmp
jns
insl
rorb
fldenv
fisttpll
or
or
outsl
cmp
shll
cwtl
pop
mov
inc
repz
les
rcrl
and
pushf
mov
cwtl
pop
mov
cmp
add
test
stc
jmp
sub
mov
lds
rcrb
mov
sub
and
sub
ss
add
mov
imul
aad
lods
dec
aas
and
rcl
popa
push
pop
shll
sbb
lret
adc
cs
mov
mov
test
cltd
subb
xlat
add
repnz
dec
mov
repz
movsl
sarb
dec
ret
sti
or
pop
lahf
les
das
cs
cmpsl
movsl
jns
pop
mov
pop
fcomps
popf
int
jbe
jae
jg
push
fwait
mov
es
sbb
pop
ret
loope
pop
xor
xchg
xchg
pushf
es
fisttps
loopne
sbb
test
ficomps
notb
daa
fwait
out
sarb
fisubl
pop
mov
sub
arpl
mov
and
ds
iret
adc
fs
inc
mov
andl
addb
insb
jno
fs
mov
mov
jnp
out
pop
dec
sub
jp
adc
aad
jbe
dec
popa
notb
insb
lret
or
dec
in
xor
not
incl
pushl
setp
sete
xchg
mov
inc
pushf
pushf
inc
inc
pusha
add
sub
jo
sar
movzbw
mov
bt
shl
push
stc
bt
rcl
or
mov
add
neg
bswap
mov
inc
sub
add
and
clc
setne
movzwl
shr
bt
mov
pusha
clc
sub
cmc
stc
xor
clc
pushf
cmp
mov
shr
jmp
push
outsb
scas
jecxz
int
jno
push
adc
add
call
xor
pop
xchg
pop
imul
jmp
sbb
ja
mov
add
pop
xlat
ljmp
les
xchg
lret
xchg
mov
or
sbb
rcrb
out
xor
add
dec
nop
xchg
aam
mov
xchg
dec
imul
cwtl
pop
dec
dec
sbb
inc
sub
inc
rcll
inc
pop
test
popf
fmull
test
cld
add
call
imul
fiaddl
inc
pop
shlb
mov
or
fiaddl
dec
aam
xchg
pop
inc
sub
jl
insl
ficompl
inc
mov
inc
decb
mov
loopne
fs
cmp
or
ja
sbb
mulb
adc
jne
std
or
out
ja
bound
hlt
ljmp
mov
inc
add
dec
sub
add
jae
sub
and
movsl
loop
mov
mov
jl
add
push
rcrb
mov
push
inc
jns
rcrb
insb
dec
mov
and
std
jecxz
aaa
pop
sub
cmpsl
adc
cli
into
mov
inc
cmp
adc
daa
push
or
je
insl
out
adc
outsb
xor
jae
mov
loope
cmp
dec
fimuls
mov
dec
sub
cwtl
pop
sub
lods
mov
fildl
lahf
fwait
mov
pop
jbe
cmp
popa
mov
cld
inc
xchg
incb
adc
pop
test
xor
xor
and
imul
mov
imul
sub
cld
add
fisttpl
sti
pop
lods
xor
gs
cwtl
pop
mov
add
jmp
in
and
xor
mov
push
movzbl
call
jmp
dec
jns
pushf
push
mov
push
pusha
inc
mov
ss
enter
or
sub
xlat
ljmp
lea
jp
mov
push
jl
dec
shrl
push
out
jae
dec
push
sbb
mov
aad
repnz
and
fnstcw
cmpsb
int
in
jle
jmp
mov
inc
and
pop
mov
xchg
mov
ds
and
test
out
into
and
adc
and
sub
mov
or
push
or
dec
mov
lcall
xchg
out
xchg
mov
mov
les
mov
pushf
fwait
adc
clc
push
sub
rol
js
sub
sbb
fisubrs
push
and
imul
sbb
fstpt
test
int
xor
sbb
roll
fsubrl
add
mov
cs
add
jbe
lods
adc
inc
adc
mov
lcall
cvtps2pi
xchg
xchg
jae
push
inc
push
test
jae
or
xchg
push
adc
out
xor
push
out
loopne
outsl
stc
lahf
in
add
sbb
pop
mov
mov
clc
adc
and
hlt
jp
cmp
pop
negl
imul
and
mov
fldt
loopne
loopne
mov
pop
std
xor
adc
std
sbb
jae
adc
sbb
cmp
xor
jecxz
xor
cld
test
cltd
dec
lds
cltd
mov
mov
adc
in
out
cmp
xor
push
ficompl
push
mov
mov
mov
cwtl
adc
mov
cwtl
push
mov
ja
jecxz
sti
cmp
sbb
mov
mov
jmp
xor
lea
ficomps
icebp
adc
push
and
icebp
lds
pop
inc
ja
jg
cmpsl
paddq
push
mov
or
aam
lahf
inc
push
cmpsb
test
and
inc
push
add
mov
jp
sbb
inc
dec
jmp
aaa
ss
popf
push
clc
sub
xor
fbstp
inc
jmp
dec
mov
in
repnz
lods
jle
xchg
cmp
push
xor
pushf
shrb
aas
xor
scas
mov
gs
popa
push
sbbb
add
xor
fldl
push
add
mov
jp
cltd
leave
push
mov
push
or
stos
lods
pushf
subb
xchg
jmp
jecxz
xlat
fildll
shl
lock
cltd
loopne
jno
int
jno
dec
lods
jmp
aad
jnp
frstor
pop
nop
fidivs
xchg
or
out
and
xor
add
insl
mov
inc
xchg
jns
xor
lea
mov
mov
dec
movsb
mov
mov
testl
xor
cs
in
testb
cmp
jo
sti
cld
xchg
mov
ret
xor
out
push
arpl
aas
adc
mov
lcall
ss
xor
mov
test
mov
aam
fsub
iret
into
iret
lods
out
jg
mov
sbb
sbb
add
or
xchg
scas
xor
pushf
stos
loope
adc
jno,pn
outsl
inc
mov
sbb
cltd
cmp
test
in
jo
inc
xor
adc
mov
loope
xor
jmp
xor
xor
sub
mov
xchg
loopne
ror
xchg
and
push
aas
add
xor
cmpsb
jge
push
pop
cli
pop
xchg
xor
outsl
pop
fwait
add
mov
xchg
repnz
lahf
sti
mov
sahf
jp
push
in
out
lcall
add
movb
lret
xchg
out
add
inc
sbb
push
xor
cmc
xlat
test
fnstsw
jbe
ffree
sub
popa
or
fs
add
jmp
xchg
sbb
aaa
xor
cmp
jmp
pushf
movl
jmp
mov
popf
fwait
xlat
xor
push
ljmp
shlb
enter
inc
int
jge
inc
data16
xor
cwtl
fwait
xchg
lods
jmp
js
xor
int
push
pop
cmp
mov
pop
bound
push
mov
notb
ja
pop
inc
lcall
cli
push
insl
shr
test
or
int
push
pop
xor
xchg
sahf
fisttps
shrb
mov
inc
je
push
mov
pusha
mov
test
js
cmp
rol
xchg
aaa
adc
cmp
out
int
cmp
ret
inc
dec
jle
xor
add
lret
pushf
std
in
and
aaa
js
pop
mov
clc
pop
jae
lret
cmpsl
or
test
xchg
imul
mov
dec
add
adc
pop
int3
lahf
adc
in
jns
xor
inc
push
push
sbb
das
xor
mov
adc
scas
add
ret
sub
inc
mov
and
sub
dec
sbb
xor
jnp
sbb
mov
lea
and
sahf
cmp
imul
xlat
stos
inc
sbb
xor
and
popf
inc
cmpsb
add
lret
cs
das
lcall
jge
sub
push
into
fldenv
mov
cltd
jl
sbb
js
pop
mov
xchg
out
lret
add
pop
xor
lret
pop
push
lret
xor
imul
push
mov
call
out
push
and
enter
fdivrp
lods
adc
lea
jnp
pop
lods
push
mov
mov
daa
sub
and
sub
ret
aad
xor
inc
pushf
fisubs
mov
fidivs
ds
or
push
cwtl
xor
sbbb
push
repnz
es
push
jge
lret
test
cli
push
pop
movsl
mov
je
jae
push
bsr
leave
cs
dec
mov
pusha
ret
fwait
jl
clc
push
mov
sbb
ja
les
cltd
hlt
cmpsb
cli
xor
mov
jl
adc
aaa
loope
jno
cmp
test
lret
out
subb
xchg
cwtl
push
out
and
mov
lods
lods
rcr
mov
mov
dec
inc
xor
gs
scas
xor
aam
in
xor
imulb
out
fsubr
in
jnp
cwtl
push
jp
sbb
in
push
mov
bound
xchg
mov
inc
sub
push
enter
push
sbb
add
rcrl
ror
pop
push
or
inc
xorl
lock
xchg
out
fidivs
pop
hlt
ljmp
imul
loope
push
push
loopne
sbb
addr16
imull
mov
jbe
insl
mov
or
dec
push
nop
mov
and
outsb
int3
xor
xchg
mov
pop
sub
mov
imul
arpl
pop
sub
ja
xor
aaa
ds
les
mov
ja
jl
xor
add
dec
ljmp
lret
in
lahf
xor
popf
push
les
cld
mov
pushl
popf
pop
mov
ret
xor
xor
and
ds
adc
in
inc
adc
push
shr
sub
inc
dec
aad
les
push
loope
jge
mov
shlb
fwait
jl
and
push
jl
shrl
out
popf
dec
push
roll
adc
rol
dec
stos
xor
out
mov
js
push
mov
mov
mov
mov
mov
pop
repz
add
cmc
adc
push
or
iret
sbb
dec
push
or
sub
xor
xchg
push
sbb
aad
aas
sub
cmc
pop
dec
jg
into
ljmp
jnp
pop
inc
and
pop
stos
add
sbb
pop
sub
mov
ret
sahf
xchg
jnp
sub
mov
imul
push
fsubr
and
or
rorb
aas
ljmp
mov
xor
movzbl
btr
add
rol
shl
not
mov
movb
jmp
movl
push
pushf
push
lea
jmp
jmp
call
sbb
mov
pusha
aad
or
inc
cmovne
or
iret
xor
ja
xchg
repnz
scas
xor
cs
mov
or
inc
or
cs
stos
xor
fcmovnb
ficomps
sbb
dec
mov
lret
into
in
gs
inc
arpl
pop
push
outsb
xor
mov
lret
push
xor
scas
pop
loop
mov
push
aam
pop
or
push
in
out
and
addr16
push
data16
sbb
out
icebp
sbb
or
jl
std
sbb
iret
dec
adc
pushl
or
loope
or
fldl
or
inc
xchg
daa
rorb
arpl
adc
xchg
pop
cmp
mov
lods
daa
icebp
inc
and
dec
nop
cmp
or
filds
jecxz
pop
mov
das
popa
in
or
dec
adc
fildll
push
mov
and
test
mov
mov
adc
inc
repnz
mov
aaa
cltd
hlt
dec
xor
imul
xor
xor
and
mov
imul
fldenv
and
test
inc
mov
add
sub
inc
mov
push
jecxz
lret
add
or
inc
add
dec
cli
rcl
lcall
inc
and
fisttps
mov
push
xor
call
inc
out
sub
nop
ficomps
adcb
xor
bound
or
imul
sar
jle
jnp
test
out
ret
add
or
mov
out
push
repnz
adc
ficoml
les
ds
mov
aam
push
jp
and
fwait
cli
xchg
add
mov
fisubs
adc
xchg
inc
pusha
ret
ja
xchg
cmp
lea
icebp
insb
leave
stos
scas
dec
in
inc
shlb
jmp
xor
inc
jmp
mov
arpl
popf
dec
loope
jmp
pop
cmp
add
xor
cltd
cltd
xorl
jne
dec
scas
push
cltd
xor
or
jp
stc
movsb
vmovdqa
mov
cltd
adc
ficoms
dec
or
into
push
adc
data16
sub
and
andl
out
data16
mov
cmpsb
xchg
dec
push
push
jecxz
jg
adc
dec
inc
dec
or
cwtl
mov
lea
mov
call
push
cld
and
mov
mov
iret
lret
mov
mov
mov
loopne
mov
jne
loopne
scas
icebp
and
push
cmc
mov
or
out
jg
jge
leave
dec
aam
jnp
cwtl
dec
mov
ret
xchg
ss
inc
xor
push
std
xchg
xadd
mov
cld
xor
lcall
movsl
out
fs
test
inc
jg
daa
xchg
pop
xor
stos
sub
mov
enter
fs
xor
or
xor
in
push
loope
add
mov
mov
push
bnd
mov
cmp
lock
mov
fsubp
xchg
mov
mov
mov
inc
ljmp
test
sub
cwtl
dec
mov
cltd
push
call
enter
stc
cli
and
aad
push
sub
mov
mov
pop
cmp
ds
hlt
shlb
pop
xor
cmp
jno
inc
cmp
inc
aad
loopne
jbe
je
movsl
mov
adc
mov
std
or
ljmp
mov
mov
movsb
iret
mov
push
lahf
mov
imul
fs
repz
cs
daa
setae
icebp
dec
clc
sti
inc
mov
fs
add
and
rorb
dec
stos
mov
push
mov
clc
sbb
je
mov
jo
mov
push
clc
pop
es
icebp
cli
clc
lahf
push
mov
cmp
add
jmp
jmp
pushf
clc
into
pop
adc
jmp
jnp
repnz
nop
lods
decb
loopne
jmp
jmp
lock
ret
imul
pop
dec
mov
lcall
ficompl
stos
or
cmp
pop
sbb
pop
xor
aad
jle
shrb
imul
es
inc
ss
dec
mov
mov
cmpsb
jle
mov
adc
lods
inc
clc
fadd
pop
add
fs
pop
and
and
mov
nop
and
or
add
out
jle
out
fistpll
cmpsl
insb
pop
sub
add
sbb
into
movl
add
xchg
sbb
xchg
xor
rcrl
mov
adc
out
int
lds
out
pop
xchg
xchg
mov
shll
cli
jg
sub
jne
xchg
dec
call
xchg
das
imul
dec
insl
ficoml
and
roll
pop
xor
sbb
aas
lea
shll
insl
in
cmp
cwtl
dec
mov
adc
lods
movsb
js
xchg
xchg
ja
add
mov
inc
xor
sub
adc
popa
xchg
ljmp
add
mov
jecxz
xor
xor
mov
cmp
ret
xor
cld
add
cmpsl
lret
cltd
or
jnp
stos
mov
sahf
jp
lret
push
aas
lret
jae
push
jne
sbbl
add
rcrb
outsl
dec
jae
outsb
leave
sub
cltd
jnp
inc
cmp
adc
les
cwtl
dec
notl
push
lock
std
std
cmpsl
xchg
addr16
out
pop
mov
ror
jge
outsl
rcrl
pop
inc
ss
scas
fucomip
std
jge
sbb
icebp
pop
dec
inc
mov
sub
push
pop
ret
jmp
xchg
movb
shl
rolb
js
inc
push
mov
in
xchg
push
push
movsb
fs
add
inc
enter
fisttpl
inc
and
xor
and
jne
jmp
movl
pushf
pushf
lea
jmp
pusha
movl
push
pusha
pushf
movl
mov
pushf
lea
jmp
out
loopne
sbbl
lcall
or
mov
or
aad
or
ds
loopne
adc
addr16
sub
adc
and
xor
cli
mov
int
loope
mov
into
sub
ret
inc
jle
jne
xchg
or
jle
cwtl
inc
outsl
fimuls
mov
in
aam
stc
or
and
ljmp
mov
sbb
bound
bound
arpl
in
mov
jmp
lret
pop
jmp
mov
dec
push
xchg
mov
test
repnz
or
mov
or
inc
xchg
ds
mov
addr16
sbbb
push
and
adc
sahf
adc
jge
add
mov
bound
jmp
mov
stos
sub
jle
movsb
adc
mov
jmp
incl
and
dec
popf
ds
jno
movsl
das
xchg
pop
mov
jnp
dec
jb
lret
popf
mov
xor
adc
mov
fsubs
xchg
mov
mov
xor
pop
add
jo
mov
lcall
cmp
int3
mov
subl
sti
inc
and
test
or
xor
ss
test
out
int3
cwtl
outsl
jne
lds
dec
subl
fsub
xor
mov
mov
lea
not
mov
lea
jnp
dec
pushf
bt
push
shr
movl
cmc
clc
pusha
sub
pushf
push
lea
jmp
movl
call
nop
std
in
mov
popa
xabort
jg
mov
ds
in
sub
sub
nop
pushf
sub
xlat
mov
or
fs
mov
sbb
cmp
cmc
and
fisubrl
inc
std
sbb
push
mov
inc
fidivs
call
push
push
outsb
int3
sti
xor
pusha
int
inc
jb
dec
lods
or
movl
adc
xor
pop
cmp
mov
sub
out
dec
jecxz
inc
mov
mov
xchg
test
lahf
arpl
and
xchg
and
mov
cmp
push
cmp
sub
jb
sub
mov
in
fdivrs
into
aas
xchg
sub
call
int3
xchg
sub
mov
xor
adc
fdivrl
loope
pop
loope
sbb
mov
xor
movsl
gs
adc
cltd
scas
inc
mov
xor
lds
xchg
and
inc
icebp
repnz
call
inc
hlt
sti
dec
mov
adc
dec
scas
daa
sbb
outsb
and
xor
xor
xchg
iret
jo
mov
sub
push
fcmove
sub
sub
adc
arpl
int
jl
and
and
push
push
fnstenv
ficoml
mov
test
ss
scas
xchg
inc
cli
insl
je
inc
dec
out
xor
les
push
scas
outsl
icebp
roll
jo
mov
fnstenv
mov
push
xchg
clc
add
add
out
xchg
xchg
push
jae
sub
cmp
and
dec
mov
cltd
ljmp
sbb
lcall
and
sbb
sbb
sub
jecxz
push
rcll
push
xchg
fcomps
pop
xor
or
popa
xchg
sbb
std
insl
daa
xchg
sub
cwtl
inc
xchg
out
xchg
mov
int3
adc
lods
lahf
ljmp
xor
mull
je
xlat
inc
mov
sbb
inc
ret
jne
in
or
out
xor
or
mov
std
jno
popa
ret
aas
sbb
aas
jno
sahf
fmull
sbb
mov
into
outsb
out
cli
into
mov
adc
stos
jne
jecxz
shl
dec
stos
and
shll
aad
jbe
bnd
test
push
in
jg
in
or
inc
in
and
xor
push
or
je
movsl
imulb
cltd
push
ljmp
rcl
repz
into
jmp
hlt
mov
repz
add
outsl
dec
mov
and
xor
sub
adc
add
adc
inc
dec
xor
sbb
roll
add
inc
push
mov
arpl
adc
inc
mov
lds
and
pop
popf
dec
xor
call
xchg
loop
cmpsb
jle
and
sbb
mov
xor
into
cltd
mov
cltd
pop
xorl
cmp
pop
sarb
shrb
arpl
imul
adc
jl
pop
bound
cmp
mov
sub
negl
xor
ds
pop
mov
push
cld
cli
or
or
fsubs
std
dec
inc
jb
sub
cmp
lret
inc
cmp
add
push
cvtps2pd
mov
or
movsl
pop
add
sub
js
xor
pop
ds
aaa
cmpsb
push
mov
pop
pop
xchg
mov
jno
xor
mov
ficoms
xchg
shll
nop
add
add
mov
adc
je
inc
dec
test
sbb
sbbb
dec
sub
cmpsb
fsubs
add
fwait
jnp
add
xor
pop
or
mov
jmp
inc
addr16
push
xchg
add
out
aam
mov
cltd
inc
mov
call
lock
cmc
mov
dec
pop
pop
cmp
aam
pop
lods
inc
xchg
or
pusha
les
ret
sub
lret
or
inc
or
or
and
mov
sbb
and
fidivrs
ficoms
fcomi
pop
cmp
out
ret
imul
push
hlt
pop
mov
jns
xor
push
ja
push
fnstenv
pop
cwtl
std
rcll
idivb
loopne
dec
hlt
sub
ljmp
sub
inc
out
out
dec
adc
dec
ljmp
dec
and
insl
sbb
cwtl
inc
dec
cmpsl
mov
mov
mov
and
out
in
popa
push
mov
mov
inc
outsb
dec
mov
xor
jmp
das
scas
mov
jl
pop
pop
mov
sahf
cmp
hlt
sub
mov
push
mov
cwtl
inc
das
mov
adc
mov
adc
fists
and
out
fcoml
or
fnsave
lods
movsl
jmp
xchg
jbe
shr
rol
lds
hlt
fmull
xchg
jno
dec
cs
out
es
cmp
cmp
lahf
fnstsw
sub
and
push
inc
ljmp
inc
push
xchg
and
cmp
out
push
sbb
cmc
inc
insb
xlat
sub
dec
nop
cmp
sahf
mov
pop
jl
dec
push
sbb
dec
mov
mov
push
xchg
je
mov
fisttpl
divb
and
lret
push
inc
mov
mov
inc
jle
cmp
sub
or
pop
mov
pop
popa
cwtl
fxch
jno
sub
xlat
cli
je
and
bound
cwtl
inc
shl
fimuls
mov
push
mov
fimuls
pop
sbb
scas
dec
movsl
xor
add
jmp
pushf
lea
jle
push
pusha
movl
pushf
movl
movw
push
pusha
mov
lea
jmp
push
pusha
movl
pushf
pushf
lea
jmp
or
mov
mov
lahf
lret
cmpsb
add
sti
mov
insb
xchg
jo
mov
outsl
mov
in
xchg
mov
xorw
push
aad
clc
or
sub
and
lret
popa
xchg
out
sahf
sbb
out
in
sub
rclb
lods
inc
mov
mov
adc
clc
adc
mov
repz
les
cmpsb
int
push
ficoml
aaa
dec
adc
xchg
hlt
xor
xlat
cmp
shl
xchg
ror
push
mov
xchg
mov
and
movsb
nop
icebp
dec
out
in
orb
scas
test
pop
inc
mov
out
xchg
fwait
ret
or
adc
shlb
in
pop
sbb
cwtl
loop
push
js
scas
jbe
fisubrs
in
adc
popa
mov
mov
pop
cmp
inc
mov
and
lcall
divl
jo
mov
lods
pusha
std
lcall
test
js
jns
sub
jge
shld
cmp
outsl
stc
adc
push
add
jo
add
lock
mov
pop
in
insb
iret
leave
inc
mov
in
mov
into
popa
call
mov
cmp
dec
call
sub
cmp
stc
and
in
clc
add
mov
add
enter
shl
andl
cmp
dec
mov
ret
dec
push
mov
xor
push
push
pop
ret
xchg
adc
pop
cmpl
stc
inc
mov
in
test
test
mov
mov
shlb
int
mov
and
cmpsb
dec
sub
inc
dec
out
add
test
insb
add
cwtl
add
pushf
pushf
mov
movl
pushl
push
jmp
push
pushf
movl
mov
push
push
lea
jmp
call
cmc
push
mov
pushf
clc
clc
test
pusha
jmp
push
jmp
push
pusha
movl
pusha
pushl
lea
jmp
clc
stc
shr
pushf
clc
clc
pushf
sub
jmp
mov
push
lea
js
mov
dec
dec
pusha
lea
lahf
mov
bswap
pushl
movzwl
pushf
movzwl
push
movw
dec
test
bt
stc
mov
lea
jbe
pushf
mov
movb
cmc
stc
pushf
mov
sub
cmc
pusha
stc
test
test
jmp
call
movl
pushf
push
lea
jmp
jmp
dec
mov
leave
mov
je
pop
aas
faddl
bound
adc
mov
out
pop
sub
jnp
imul
nop
sbb
sub
shr
pop
sub
call
outsb
daa
sbbl
xchg
movsl
add
aaa
popa
push
mov
push
loopne
fwait
inc
lahf
cmp
test
adc
iret
pop
adc
shlb
sbb
jmp
and
and
jecxz
mov
mov
xor
pop
into
ret
add
fsubrp
xchg
ret
jb
inc
movsb
dec
and
sbb
lock
js
inc
mov
sarb
xor
pushf
movl
movb
push
push
pusha
lea
jmp
pushf
pushl
movl
jmp
pusha
call
jp
xchg
dec
gs
jo
int3
mov
mov
sbb
sahf
test
pop
or
addr16
cli
and
sbb
imul
push
add
pusha
mov
pop
or
sub
push
or
rclb
push
pop
pop
mov
call
xchg
pop
les
push
test
fmull
js
das
lea
inc
roll
stos
adc
push
mov
sub
gs
clc
mov
xor
leave
enter
mov
mov
sbb
mov
cltd
sub
ja
cmpsb
insb
cli
sarb
rcr
add
and
insl
inc
mov
dec
inc
cwtl
fwait
mov
sub
jl
mov
cmpsl
enter
xorb
mov
xchg
decb
sahf
enter
mov
notb
xor
ret
xchg
pop
pusha
xor
add
aad
sbb
xchg
adc
pop
ret
jl
pop
stos
rcll
dec
rorl
lret
pop
dec
nop
into
xorb
insl
or
adc
je
stos
rorb
pop
cwtl
dec
cmpsl
movsl
shrb
inc
xchg
dec
mov
pop
and
dec
lcall
ds
cltd
outsl
mov
scas
or
std
insb
xor
mov
subl
aam
push
jne
inc
aam
xchg
xlat
push
jmp
xchg
or
hlt
loopne
aaa
mov
add
dec
add
cmp
push
xchg
xchg
adc
lods
scas
shl
mov
call
sbb
test
xlat
jb
insl
add
add
aad
out
pop
adc
push
popa
mov
adc
xchg
xor
pushl
cmc
shr
cmp
cmc
mov
add
pop
add
sar
xor
lea
stc
lea
add
call
cmc
mov
sti
iret
xor
je
and
ja
in
sbbl
nop
cmp
je
jns
cmp
testl
fmull
into
aam
jbe
mov
fildl
or
xlat
movsb
inc
cmpsb
sub
push
clc
movsl
pushf
das
addb
std
stc
xchg
sub
xchg
out
movsb
pop
data16
test
stos
sub
stc
stos
sub
or
mov
paddusb
mov
movsb
cwtl
cli
jg
cmp
repz
cwtl
cmp
stos
xchg
ds
das
sbb
out
xor
mov
mov
test
jmp
cmp
mov
push
test
and
movsb
jne
push
popa
lds
incb
ret
ficomps
jnp
xchg
loopne
fwait
mov
lret
ret
sbb
inc
xchg
jg
lods
nop
mov
enter
mov
pusha
popf
mov
dec
das
pop
add
jge
test
mov
mov
mov
jns
or
pushl
fdivrs
fnstenv
mov
pop
and
inc
push
jl
inc
pushf
and
jae
jae
add
stos
push
leave
xchg
adc
or
or
loope
pop
cltd
test
movsl
xor
pusha
pushf
jmp
sbb
push
mov
shrd
bsf
and
xor
ror
shld
cmc
mov
stc
bt
jmp
ficompl
lcall
fcmove
add
pop
push
dec
jmp
insb
lods
cmp
xor
add
xor
test
out
lahf
stos
inc
xchg
jp
jae
js
gs
mov
sbb
push
mov
sbb
cmp
xor
std
test
repz
mov
mov
aas
sbb
shlb
pop
fstps
lahf
jle
push
lcall
xchg
mov
mov
int
xor
add
inc
out
mov
cmp
cmp
mov
mov
int3
mov
add
mov
fcomip
call
loop
and
out
jp
outsl
push
adc
inc
and
insb
notb
ret
and
jb,pt
dec
aam
sbb
sbb
xor
jge
xor
inc
push
out
sub
xlat
iret
jp
iret
and
mov
test
dec
or
sbb
dec
sub
xchg
pusha
outsb
mov
jmp
enter
icebp
ljmp
cmp
cmp
mov
mov
dec
jle
mov
xor
mov
pop
add
aaa
fucom
repnz
jb
mov
sbb
test
call
push
and
pop
pop
ljmp
xor
xor
les
dec
push
out
stos
call
mov
mov
fdivrl
xchg
aaa
lahf
jbe
adc
pop
xor
scas
dec
leave
jge
loop
dec
adc
mov
cld
mov
push
push
push
shl
or
ljmp
push
lea
xor
jmp
call
stc
add
test
bt
cmc
xor
bswap
bswap
pushl
inc
mov
pushf
movl
pushf
jmp
adc
cmp
pop
add
cwtl
mov
mov
fsubrs
lea
or
in
jne
sti
push
mov
sbb
push
mov
stc
shll
pop
fistpl
lods
mov
aad
cmp
cwtl
mov
pop
sti
call
xchg
hlt
fisubrl
outsb
mov
pushf
xor
cmpsl
popa
out
inc
sarl
and
das
pop
adc
xchg
xchg
idivl
negl
pop
outsb
mov
sub
sbb
or
xchg
lea
add
mov
push
lret
push
xor
cmpsl
jno
in
pop
inc
sbb
cmc
fiaddl
xor
mov
negl
mov
xlat
mov
ss
fdivr
lods
nop
push
push
push
inc
insl
xchg
or
mov
jecxz
push
fs
and
nop
mov
jmp
mov
or
shll
xor
aam
lock
or
je
add
sub
int
xor
movl
push
push
movl
movb
movb
pushf
lea
jmp
sbb
mov
pmaddwd
lea
adc
dec
dec
stc
cmp
inc
cli
fwait
sbb
cmp
inc
ret
pop
enter
sahf
iret
stos
das
ja
stc
xor
pop
fidivs
xchg
jl
cli
fwait
jmp
cmp
cmp
mov
and
sbb
xor
ds
lods
dec
xor
sub
cwtl
xor
dec
dec
call
adc
mov
mov
mov
cwtl
xor
mov
inc
shrl
add
push
jg
dec
mov
cwtl
xor
jae
jmp
mov
aaa
fisubrl
movsb
js,pt
push
rorb
daa
xchg
xchg
sub
mov
xor
fsts
std
pop
jmp
add
pop
adc
iret
ret
movsl
xchg
push
repnz
out
dec
call
sub
cs
push
xorb
js
sub
mov
je
test
dec
bound
cli
aad
and
test
mov
or
and
in
push
xchg
and
vminps
fadds
stos
cld
pop
push
filds
shl
imul
pop
lods
mov
push
sbb
setb
aad
lock
fwait
popf
rorl
lahf
push
push
repz
mov
enter
aaa
jg
mov
xchg
adc
xchg
daa
mov
and
pop
mov
mov
push
roll
repnz
push
adc
push
fwait
jmp
test
cmpsl
add
mov
mov
stos
fdivs
bnd
jge
imul
add
sub
repz
dec
ja
pop
dec
and
and
pop
out
jp
pop
out
repz
les
pop
lret
pushf
mov
push
add
and
mov
movsb
data16
mov
fadd
andl
add
adc
jle
add
push
inc
sahf
insb
loopne
in
rcrl
inc
hlt
inc
cmp
dec
hlt
xchg
push
testb
lds
bound
rcrb
shlb
dec
por
mov
int3
jge
mov
clc
icebp
aam
pop
pushf
push
inc
mov
ret
popl
jne
fnstsw
lahf
rorl
lods
in
and
xchg
jb
cmp
out
mov
xor
stc
add
bswap
mov
jp
stc
cmp
xor
pushf
pusha
test
movl
pushf
mov
cmp
cmc
test
jmp
push
or
push
pusha
insl
push
xchg
mov
fcomip
pop
cmp
cwtl
jmp
jmp
add
movsb
std
fistps
loopne
sbb
pop
ret
ds
faddl
inc
das
aaa
sbb
xchg
scas
leave
in
push
pop
jmp
out
fmull
inc
and
inc
sbbl
je
pop
xchg
cmpsl
dec
lds
jnp
ljmp
lods
pop
lea
repz
jl
lods
mov
outsb
add
sub
mov
pop
out
movsl
ret
in
xchg
xchg
dec
scas
test
outsb
dec
push
jo
lods
or
adc
stc
push
out
add
ljmp
jbe
pop
f2xm1
outsb
roll
mov
loope
pushf
jmp
icebp
shlb
or
push
cmpsl
mov
mov
pop
xchg
loope
dec
popa
dec
insb
mov
lret
push
mov
pop
rol
cmp
lods
mov
sbbb
cld
cmp
inc
dec
stos
mov
adc
xor
mov
stc
stos
sub
flds
test
adc
push
jl
inc
cltd
jp
subl
imul
iret
and
push
das
aad
lret
cmp
xorl
xchg
bound
scas
rcll
sbbb
mov
xorl
push
or
ja
pop
lret
adc
lcall
cltd
mov
pop
mov
jne
out
adc
inc
insb
dec
cmpsl
jmp
call
ss
mov
loope
test
dec
or
repz
mov
lret
popf
pop
jne
inc
popf
push
inc
test
sarb
out
andb
xor
dec
outsl
pusha
movl
movb
call
jmp
movl
mov
pusha
movb
movb
movl
mov
mov
movl
movb
lea
jmp
rcl
add
shl
shrd
mov
push
test
mov
jmp
lea
js
push
pushf
pusha
mov
lea
jmp
add
clc
clc
movzbl
cmp
clc
cmp
or
mov
movl
movb
lea
jmp
cli
xchg
mov
fists
mov
pop
loop
and
sub
leave
push
repnz
or
ds
inc
in
pop
add
outsl
ret
test
push
enter
lds
repnz
or
dec
repnz
inc
lea
jnp
jle
xlat
imul
pop
or
mov
add
and
enter
add
lock
pop
jmp
cmp
enter
mov
int3
jle
xchg
and
xchg
xlat
ss
mov
or
lret
mov
xchg
iret
rclb
dec
insl
lret
jbe
push
ss
out
test
icebp
or
add
aas
in
jnp
xchg
xor
shr
pushf
pushf
clc
pusha
sub
movb
push
lea
jmp
fwait
js
mov
or
rcr
ret
jo
in
lcall
loopne
test
shll
push
sahf
repnz
lret
cmc
adc
sbb
mov
test
push
mov
adc
jecxz
movsb
aam
fistl
inc
gs
xchg
add
adc
pop
pusha
cmpsl
and
or
repnz
int
out
sbb
fmuls
test
jle
inc
xor
jmp
fnstenv
hlt
jb
mov
scas
insl
ds
imul
mov
mov
in
pop
fsub
inc
jnp
pop
pop
fnstenv
aad
jl
and
jp
movsl
mov
bound
jb
fistpl
push
mov
or
sbb
adc
adc
out
inc
or
repnz
xchg
and
ss
add
dec
sub
push
rcrl
push
sti
lock
lea
lds
sbb
mov
adc
push
jo
and
std
mov
or
clc
call
lcall
sub
loopne
xor
sub
jge
add
out
divb
dec
pop
and
shlb
cwtl
sub
fwait
mov
mov
xchg
loope
jmp
lods
stc
sbb
cwtl
sub
inc
xor
call
pusha
jmp
mov
xorl
adc
outsb
xchg
lock
xor
xor
or
cmp
xor
rolb
out
mov
pop
dec
jb
mov
sub
movsb
xchg
dec
pop
je
movsl
sub
imul
jmp
pop
ds
xchg
cmp
push
push
cltd
jne
roll
shrb
arpl
addr16
repz
xor
fimuls
cld
jae
push
shlb
pushf
pop
mov
imul
push
push
jg
lret
imul
pop
adc
jl
pusha
negb
test
insl
mov
xchg
sub
rcll
ss
imul
sub
jle
inc
mov
xchg
push
rclb
fldt
xchg
xchg
push
push
cwtl
sub
sub
repz
add
mov
sub
mov
addr16
flds
aaa
pop
mov
hlt
mov
sub
mov
sub
jb
xor
cwtl
jp
lods
cld
push
mov
pop
mov
xchg
aaa
stos
stc
xchg
out
fildl
inc
or
fidivrs
pop
lods
mulb
push
and
mov
lods
std
mov
push
ds
mov
aas
pop
mov
ljmp
xor
cli
jo
xchg
inc
lods
mov
movd
lods
into
inc
out
imul
fnstcw
outsl
es
adc
jae
shll
arpl
movd
jecxz
lahf
mov
or
pusha
ja
mov
sbb
pop
sti
jmp
ss
sub
sub
cmpsl
jns
xor
mov
dec
sahf
cmp
mov
dec
adc
push
aam
adc
sub
jl
movw
pushf
mov
pushf
push
lea
movl
mov
push
lea
jmp
jmp
pop
jae
push
fidivrs
and
push
pop
sbb
or
push
inc
es
mov
or
iret
dec
push
test
mov
jb
xor
scas
xchg
push
lahf
fidivrs
jbe
aas
xor
fldcw
popa
push
int
dec
xchg
daa
shr
mov
and
stos
cmp
rorb
mov
xchg
flds
outsl
or
xlat
fwait
push
out
inc
inc
fwait
mov
repnz
pop
cmp
pushf
fisubl
pinsrw
iret
sub
mov
shrb
repz
dec
test
xor
ret
xchg
mov
aam
movsb
inc
daa
and
rdtsc
popl
arpl
and
jmp
lcall
repnz
ret
lahf
mov
cs
fdiv
cli
ret
xchg
push
and
cmp
outsl
inc
push
jno
inc
sbb
sub
lret
jle
adc
xchg
lahf
jb
dec
iret
jne
fisubs
pop
shlb
pop
xlat
stos
xor
mov
cmp
sub
roll
stc
stos
xchg
rcll
out
pop
cmp
ret
jg
loopne
jae
pop
ret
lret
pop
dec
shll
push
sbb
ss
jmp
subl
fidivrl
mov
sub
inc
imul
jl
mov
pop
push
cs
fnsave
lahf
repnz
out
sbb
xlat
and
mov
add
mov
inc
or
test
call
mov
lea
sbb
and
fldcw
mov
je
mov
push
xor
outsb
into
les
sub
cmpsl
or
dec
inc
ja
adc
and
push
subb
loopne
mov
popf
pop
out
orb
dec
dec
stos
or
push
push
aad
pop
mov
mov
ja
mov
push
sbb
outsl
je
jne
outsl
ret
jno
test
or
stc
out
mov
mov
pop
movsl
inc
lods
std
scas
jne
cld
inc
mov
push
idivb
sub
inc
and
jne
std
fildl
jle
push
push
icebp
lahf
nop
out
cli
cmc
lahf
in
dec
xchg
mov
mov
add
and
addb
or
mov
outsl
bswap
bound
xchg
iret
sahf
mov
xchg
pop
ja
aad
es
adc
les
xchg
les
testl
test
xchg
sub
js
xor
movsb
movsb
cs
arpl
dec
cmp
xor
icebp
subl
sbb
inc
popa
cmp
fdivl
out
enter
xor
test
sub
and
push
xor
push
jmp
incb
mov
sbb
mov
insl
filds
test
test
mov
idiv
xchg
push
out
push
test
push
cli
jbe
leave
repnz
xchg
mov
ds
js
pop
loope
mov
push
test
stos
inc
xor
xor
or
ss
sbb
clc
negl
sbb
popa
std
loope
sbb
jae
xchg
fnsave
fists
pop
mov
mov
loopne
pop
xchg
ja
xchg
data16
outsl
pop
add
test
aad
les
into
sub
ljmp
out
jo
jle
jmp
movsb
cld
xchg
pop
xchg
mov
sar
insb
idivb
testl
shll
cmp
repz
dec
dec
mov
adc
mov
pop
loope
mov
addr16
fildll
push
sbb
fnstenv
loopne
add
subl
cmp
cmp
in
cmp
add
pop
ja
repnz
test
mov
cmp
pop
test
sub
mov
outsb
jle
pushf
fwait
mov
and
cmpsl
mov
sbb
ds
sub
call
dec
jl
mov
outsb
int
loopne
dec
je
scas
or
xor
mov
xchg
into
mov
mov
cmp
sub
mov
jns
scas
dec
rcrb
sbbb
add
fs
je,pn
int
mov
cs
fdiv
dec
cmp
fildll
shl
cld
dec
rcrb
sbb
jg
aad
jl
xchg
ret
cs
push
add
jo
hlt
xor
mov
mov
push
imul
outsl
arpl
cld
or
fdivrl
xor
jmp
cmp
shr
cmc
movw
add
movzbl
mov
cmc
cmp
movzbl
cmp
bt
pushf
add
bt
stc
pusha
add
cmc
pushf
call
pusha
movl
pusha
lea
jnp
push
movl
pusha
push
pusha
pushf
lea
jmp
mov
add
ret
cmpsb
jae
inc
mov
push
and
fistpl
cltd
cs
test
dec
xchg
mov
lods
inc
lret
pop
push
sbbb
andb
inc
lock
shlb
sbb
jae
into
fs
fcmovnbe
jl
and
dec
lock
loope
sbb
xor
clc
mov
xchg
loope
hlt
jne
cmp
cmp
jnp
iret
in
mov
movsl
mull
xchg
xchg
cmp
sbb
adc
and
add
int
rcrb
loop
and
dec
jno
cmp
and
mov
je
fbstp
sub
imul
sub
movb
pop
stos
mov
sub
xchg
mov
flds
ss
xchg
mov
js
repnz
mov
daa
imul
inc
cmpsb
sbb
mov
shl
stc
mov
lcall
mov
add
mov
jo
mov
imul
xchg
js
fstpl
mov
inc
inc
aam
cld
sub
insb
outsl
test
mov
mov
pop
into
scas
or
mov
ja
out
pusha
jle
aad
sahf
iret
in
inc
lock
add
adc
insl
add
inc
xor
cli
pop
inc
andb
loopne
lds
inc
mov
fimuls
call
addl
inc
mov
aas
in
xchg
jle
mov
ss
bnd
fisubs
popl
and
mov
jbe
xchg
mov
fs
inc
adc
and
and
aam
fwait
pop
jbe
push
jmp
arpl
mov
mov
add
lea
cwtl
bswap
mov
bswap
movzbw
lea
not
mov
lea
pop
seto
cwtl
movl
pusha
mov
movw
movb
call
pushf
cmp
andb
std
mov
sub
cmc
push
mov
inc
daa
or
cmp
cli
insl
and
cmp
dec
cltd
aad
loop
xchg
adc
daa
aam
dec
cmpsb
insl
jl
cmp
imul
outsl
dec
out
les
mov
lock
add
cmp
sub
sub
mov
incl
out
mov
push
lods
xchg
fwait
mov
jmp
lret
lret
xlat
jp
fmuls
repnz
xlat
jnp
pop
xchg
lret
xchg
sbb
sub
push
in
adc
pop
or
sbbl
or
or
sbb
icebp
push
cwtl
ret
leave
pop
test
pop
movhps
mov
movsb
mov
or
mov
pusha
fidivrs
push
das
out
call
or
popf
sub
loopne
sbbl
jns
decb
ja
fmul
shrl
cwtl
out
add
xor
andb
and
pop
shl
jnp
jnp
xchg
cmp
jle
ja
fbstp
js
or
js
mov
or
data16
aam
iret
sbb
and
lock
push
adc
xor
mov
pop
int
mov
out
sub
bound
lods
mov
lcall
mov
sbb
push
ret
dec
es
popf
loope
mov
bnd
pop
adc
cmc
pop
aas
xor
push
mov
ss
pop
jp
daa
pop
pop
jne
cmp
mov
scas
leave
mov
dec
jecxz
mov
daa
xchg
sbb
jbe,pn
loop
out
dec
js
push
enter
pop
fbstp
sti
xor
pushf
movl
mov
lea
jmp
gs
mov
push
pop
pusha
push
cwtl
xchg
and
mov
inc
add
into
or
les
adcb
dec
push
dec
popf
inc
mov
out
push
test
sub
or
fstps
loope
lcall
in
ret
xor
mov
dec
es
fwait
outsl
lods
or
enter
mov
aas
lahf
jmp
xor
pop
adc
pop
testb
dec
jecxz
cli
rclb
sbb
and
bound
roll
jp
pop
mov
sub
sub
mov
xchg
mov
jbe
dec
push
je
sti
addr16
mov
sbb
pop
adc
xchg
fbld
jne
lods
pushl
pop
rcrb
mov
xor
jmp
rorb
push
mov
xor
push
pushf
jmp
and
mov
jl
mov
xor
xchg
mov
mov
cwtl
js
xor
pop
and
push
cltd
pop
xchg
mov
pop
pushf
cmc
dec
jb
out
cmp
push
or
adc
pop
and
out
scas
dec
jle
jb
into
outsb
test
push
mov
pusha
test
dec
sahf
dec
fisttps
fs
or
push
add
aad
sbb
sahf
mov
lahf
or
xor
fcmovne
cs
push
andl
mov
jne
inc
and
xchg
pop
dec
xchg
xchg
enter
pop
jnp
mov
jb
call
adc
lahf
out
pusha
sub
call
popa
sub
or
dec
mov
imul
pop
add
sbb
push
jle
and
cmp
sub
xor
call
call
movl
pusha
pusha
push
lea
jmp
sbb
imul
xchg
lret
cmpb
out
or
sbb
test
loopne
popf
fstpt
adcl
adcl
jmp
push
lret
xorl
scas
push
xor
inc
ficoml
popf
fstpt
push
stc
out
jbe
sub
pop
cmpsb
int3
daa
adc
sbb
xor
jmp
mov
ficoml
and
rcll
std
xchg
xchg
nop
cmpb
push
enter
mov
xor
popa
push
jnp
arpl
sbb
cmpb
push
pop
add
test
incl
adc
mov
das
cwtl
btc
shl
mov
shl
shl
lea
lea
sub
movzbw
rol
bsf
btc
mov
setg
clc
and
lea
jl
mov
rol
shl
mov
bswap
dec
lea
jmp
cli
add
mov
mov
inc
mov
dec
scas
sbb
in
pop
jo
movsb
jns
int3
gs
xor
jecxz
mov
add
adc
xchg
imul
fbld
add
push
scas
fstps
fstps
xor
arpl
insb
sub
cltd
inc
lods
fdivrl
loopne
mov
cmp
test
cwtl
push
xorl
push
pushf
call
pusha
not
call
sub
or
mov
mov
push
stc
popa
jge
iret
cmpsb
cmpsb
jo
push
xor
int
jl
lret
sub
dec
out
mov
repz
int
std
ret
mov
lods
mov
lret
mov
aad
mov
mov
mov
lods
push
push
loopne
sbb
inc
ja
pusha
lods
in
ja
jb
mov
cmp
mov
shlb
popl
push
dec
dec
in
inc
bound
pop
push
aad
adc
dec
out
sub
in
mov
loop
dec
pop
push
sub
mov
push
shl
mov
add
aas
loop
xlat
scas
gs
ja
mov
subb
movsb
lcall
mov
insb
sti
mov
sbb
push
in
sub
and
mov
mov
cmp
lret
scas
and
pop
xchg
push
sub
inc
mov
sarl
gs
and
insl
mov
push
inc
jecxz
out
xor
test
imulb
test
mov
stos
xchg
jmp
jle
test
sub
cmp
in
jb
inc
test
mov
ljmp
xor
push
sub
mov
cmp
pop
inc
imul
sbb
pop
das
mov
mov
adc
and
scas
iret
shll
push
xor
call
shlb
cmp
push
nop
les
cs
mov
test
pop
and
sarl
scas
repnz
movsl
xor
pop
fistpl
inc
ja
xor
shll
jp
cwtl
sbb
cmp
test
and
inc
jae
mov
add
add
mov
out
cli
mov
mov
mov
xchg
pop
stos
cld
call
cmpsb
shr
jnp
in
push
dec
pop
mov
aas
mov
pusha
int
adc
andl
adc
stos
repnz
sbb
pop
call
lahf
jmp
lahf
cmpl
xor
add
cmp
stos
lds
and
pop
jne
sbb
shl
add
rcrb
leave
lret
pop
add
clc
mov
inc
add
push
pop
sub
push
jl
test
or
cmp
pop
mov
pop
movsl
mov
fstl
and
adc
adc
or
rcl
sub
mov
and
cmpsl
ret
adc
xorl
sti
pop
or
xchg
test
push
cmp
sbb
jp
pop
mov
and
inc
push
cmp
insb
lods
or
imul
sbb
adc
aaa
push
jge
jbe
scas
xchg
adcl
cwtl
sbb
mov
filds
sbb
das
mov
cwtl
sbb
shll
push
fcompl
xor
add
jp
fbstp
adc
in
jle
push
je
cwtl
sbb
inc
cmp
in
iret
aam
insl
dec
test
adc
sbbl
iret
push
jecxz
cmpsl
test
ja
mov
ss
out
fsubl
jo
aad
jge
jnp
ljmp
in
int
mov
adc
dec
xor
xchg
jge
repz
xor
mov
out
lret
cltd
xor
outsl
outsl
shll
add
sub
ret
cwtl
sbb
movl
pusha
pushf
movb
pushf
movl
mov
pushf
pushf
lea
jmp
call
movb
movl
pushf
jmp
lea
jl
dec
mov
add
mov
bt
push
lea
pusha
test
add
pusha
jmp
jmp
push
nop
sub
sti
clc
icebp
lcall
aaa
xchg
shr
push
outsl
int
cltd
jg
adc
fwait
jge
test
adc
inc
inc
rcr
pop
mov
adc
lret
lods
in
in
cmp
push
icebp
sbb
cs
pop
inc
or
imul
pusha
shlb
pop
jne
shll
sbb
inc
sbb
pusha
mov
sbb
mov
xor
scas
adc
inc
push
cltd
mov
sar
imul
rolb
loopne
out
lcall
test
pop
pushf
out
add
pushf
sbb
fsubs
dec
imul
dec
addr16
sbb
pop
and
sbb
imul
ljmp
fidivrs
lahf
test
push
cmp
push
inc
out
or
sub
cmp
dec
sub
lcall
push
dec
jbe
cmc
cmp
dec
imul
cli
sbb
in
dec
dec
cmp
icebp
dec
jo
mov
push
cmp
dec
out
push
adc
movsl
push
sbb
push
or
xor
imul
loope
jmp
sbb
fistl
mov
pusha
add
fisubrs
xchg
sbb
mov
mov
jns
cld
bound
jl
jne
cmp
in
ret
notb
push
cmpsb
enter
int
loope
movsl
cmp
cmp
jle
mov
adc
cli
inc
adc
inc
int
and
fcoms
scas
jne
mov
cli
hlt
icebp
sbb
adc
xor
jae
cli
loopne
adc
sti
xor
mov
sub
scas
scas
push
dec
xor
mov
data16
add
rorl
push
rcrl
jno
inc
ljmp
fstps
sbb
mov
push
sbb
aam
popf
sub
popf
in
out
pop
bound
xorl
jle
xchg
movsb
jns
or
and
filds
mov
sub
cmp
pop
hlt
mov
add
stos
pop
mov
cmp
pop
sub
test
cwtl
pop
clc
pop
inc
inc
inc
pop
hlt
test
mov
enter
jp
mov
daa
pop
jl
cwtl
pop
jecxz
mov
inc
cmc
jge
stos
adc
xor
pop
data16
mov
cmp
pusha
daa
daa
push
xchg
aaa
mov
mov
xchg
add
incb
cmp
push
mov
mov
mov
cld
xchg
lock
cmc
xor
shl
rcr
inc
lcall
or
cwtl
pop
xlat
fidivs
orl
or
push
orps
mov
outsl
int3
cld
lret
cwtl
pop
gs
jmp
movl
jmp
call
xor
cli
shlb
popa
or
loopne
pop
test
mov
jecxz
push
mov
pop
push
mov
or
or
inc
sub
ret
loop
adc
inc
fldcw
sub
jb
add
and
push
fstp
push
push
loopne
mov
insl
aaa
push
fisubrs
fiadds
outsb
stos
cmp
rolb
dec
call
shrl
dec
push
jae
loop
xchg
outsb
pop
and
sbb
cli
sbb
dec
stos
or
ljmp
pop
inc
inc
jno
sub
cmpsl
stos
je
push
shlb
mov
mov
lods
dec
stos
adc
inc
mov
xor
out
cwtl
test
mov
outsb
xchg
and
sub
bound
mov
jno
les
shll
fidivrl
adc
mov
sub
mov
jp
ja
add
leave
mov
add
jmp
nop
and
jp
and
xchg
sahf
push
push
or
adc
lods
movsb
out
stc
cmp
test
ret
loope
xchg
ss
sbb
notb
arpl
mov
outsb
js
mov
pushf
push
mov
push
jnp
jmp
stc
mov
cwtl
repz
mull
lea
pop
cmp
pop
push
push
cwtl
fildl
scas
or
push
and
f2xm1
mov
lds
pop
aaa
and
sahf
fwait
test
sbb
repz
jno
outsl
sti
pop
imul
stos
jae
push
fwait
ds
jp
xchg
or
and
sbbl
add
aad
leave
sbbb
jb
nop
or
fdiv
xlat
adc
das
rolb
rorb
sub
xchg
push
and
sub
cltd
mov
inc
sbb
pop
sbb
pushf
xchg
and
jmp
pusha
rorl
mov
push
out
incl
dec
pop
insb
adc
movsl
insb
pusha
xor
push
sbb
jp
sbb
loopne
sub
lods
ret
into
pop
rol
mov
inc
call
cltd
xor
faddl
stos
cltd
xchg
gs
fs
push
cmp
jle
daa
mov
in
pop
mov
jl
jp
popa
loope
push
xor
and
sub
into
std
dec
pusha
outsl
ror
jbe
andl
fistps
and
xchg
jb
cltd
inc
lahf
add
stc
mov
mov
push
mov
in
mov
sbb
in
and
ds
sub
add
fldenv
cmp
inc
cmpsb
or
call
lds
add
test
adc
das
repz
pop
mov
adc
out
xchg
push
pop
je
push
scas
lret
and
lods
xor
cmpsl
lods
cld
sbb
sbb
or
bound
pop
movsb
pop
jno
xor
rolb
inc
inc
mov
add
or
jae
dec
pop
pop
xor
arpl
divb
loopne
pop
rcrb
mov
icebp
mov
cwtl
adc
stos
cmp
pusha
mov
jp
jne
fs
pusha
push
int
outsl
mov
aad
xchg
mov
ret
push
jmp
mov
lds
stc
in
sarl
sarl
and
mov
fildll
xchg
fisttps
inc
mov
scas
ror
mov
cmpsl
mov
cmp
cmpsl
insb
aas
mov
test
mov
out
out
cmp
jns
or
inc
mov
or
jl
jmp
adc
mov
push
call
jmp
aam
and
gs
sahf
xor
sub
inc
out
stc
pop
push
mov
scas
ret
xchg
dec
xchg
imul
lcall
xchg
xor
push
lds
iret
and
push
cmp
test
and
sbb
and
outsl
jo
inc
cmp
sbb
inc
jle
jmp
ret
xor
mov
mov
pusha
jno
incb
rol
pop
test
sbb
scas
shl
adc
js
inc
int3
notl
je
dec
pop
test
bound
sub
cmp
imul
por
inc
outsl
aad
adc
out
mov
adc
loope
iret
pop
jns
sbb
mov
jno
fnstenv
stos
pop
pop
lods
dec
xchg
outsb
fwait
dec
or
dec
bound
jl
mov
pop
dec
pop
mov
inc
dec
lods
sarb
mov
lods
out
int
fs
sbb
add
sub
imul
pop
in
push
call
push
lods
scas
loop
fnstcw
push
test
mov
mov
repz
dec
insl
mov
shlb
jne
mov
mov
lock
mov
hlt
popa
fimull
stos
shlb
cwtl
adc
sti
xchg
out
add
ret
ffree
xor
stc
xor
xchg
shrb
mov
sub
rcll
adc
arpl
mov
outsl
in
inc
add
sbb
adc
cwtl
adc
negl
push
cltd
adc
push
insl
fidivs
shll
push
js
xchg
adc
leave
mov
mov
aam
jbe
out
andb
mov
addl
cmpsl
xor
cwtl
adc
or
test
int3
and
lods
jg
test
lahf
or
data16
in
jo
jmp
fwait
imul
stos
push
adc
inc
push
daa
mov
ljmp
cld
jge
lret
test
sub
daa
xor
aam
cmp
push
loope
mov
sbb
and
jmp
hlt
pop
add
roll
jmp
add
dec
enter
mov
inc
mov
and
stc
lea
pop
pusha
mov
jne
fmull
mov
and
les
lret
sbb
shll
jnp
popa
inc
mov
xchg
aaa
fcomip
jmp
int3
in
xchg
in
inc
mov
xchg
clc
jg
mov
lods
push
xchg
adc
shrb
in
mov
add
pop
arpl
jecxz
repnz
jg
fcmove
lock
jb
test
movsb
es
and
mov
mov
and
pushf
xor
hlt
das
sub
movsb
push
jae
mov
jnp
mov
jns
mov
je
jae
aad
jp
mov
orb
add
andb
mov
adc
cwtl
or
or
stos
leave
and
push
fnstenv
dec
lods
jle
lret
popa
and
sti
ds
cld
mov
jns
test
test
push
cmpsb
xchg
sbb
gs
or
sbb
and
inc
xchg
push
ss
and
jl
movsb
arpl
je
inc
mov
or
push
insb
mov
in
aaa
pop
cmp
push
push
and
shlb
jecxz
popf
push
pop
push
or
sbb
in
sbb
fimull
mov
push
mov
rclb
hlt
int
xchg
rorl
pop
cmpsb
shr
cmp
inc
xchg
ss
testb
and
out
iret
sub
movl
and
dec
rorl
or
cmp
sbb
aam
stos
pop
in
arpl
orb
sti
push
pop
pop
or
push
lods
pushf
mov
imul
out
push
inc
clc
iret
push
inc
push
icebp
aaa
idiv
xchg
pop
cld
cmp
xchg
shll
imull
cmpsb
mov
xchg
dec
or
movsl
imul
pop
jp
bound
pushf
icebp
mov
negl
out
aam
mov
jmp
mov
out
insb
and
repz
dec
add
add
arpl
nop
in
xor
arpl
in
jmp
push
jo
jnp
shll
dec
insl
je
pushf
dec
mov
test
sbb
ja
shll
xor
dec
les
pop
aad
pop
movsl
addr16
inc
push
fwait
jge
xchg
out
mov
mov
popf
ja
push
inc
je
test
or
cmp
in
out
or
mov
inc
inc
mov
fnsave
and
inc
out
insl
out
xchg
stos
notl
cmp
push
in
shl
xor
sbb
sbb
lahf
mov
test
js
xchg
mov
andb
aaa
inc
jae
repz
pusha
add
mov
jne
in
mov
sub
enter
notb
and
pop
mov
stc
xchg
mov
test
mov
push
add
pop
lea
js
jge
pushf
pushl
shrd
aas
mov
sbb
pushf
and
movsbw
mov
test
clc
test
cmc
cmp
pushl
call
lea
je
push
jmp
lret
jne
mov
fsts
jb
pusha
xchg
mov
and
aam
repz
in
das
call
push
hlt
pop
or
dec
jg
popa
inc
jbe
xor
mov
or
test
sbb
add
movsb
sbb
mov
mov
cli
add
stos
jo
inc
push
out
inc
mov
mov
repz
movsl
add
mov
jmp
push
or
add
decl
pop
mov
cmc
xchg
les
in
or
adc
cld
push
and
lret
and
loop
mov
add
and
rcl
les
shll
rep
sbb
push
icebp
lods
fucomip
mov
sbb
cmpl
inc
dec
and
xchg
js
sub
dec
lahf
movl
mov
clc
addr16
scas
mov
fld
mov
xchg
sti
push
ret
xchg
fisubs
push
xor
inc
add
inc
pop
mov
mov
and
mov
sub
inc
icebp
in
lock
stos
jo
xchg
icebp
sub
out
mov
call
mov
xchg
rcll
sarl
sahf
test
xchg
popa
ret
fnstsw
push
call
insb
dec
pushf
push
mov
scas
je
sbb
shll
repz
pop
mov
or
xchg
xchg
mov
aas
xor
mov
dec
cmc
clc
xor
mov
pop
jmp
add
clc
test
call
push
mov
cmc
jmp
jo
push
inc
fwait
inc
push
jg
loop
jp
daa
cmp
cmp
push
popf
bound
push
sbb
mov
ret
mulb
mov
pop
add
mov
mov
or
inc
repz
xor
jns
or
fwait
movsl
jo
clc
sbb
movsb
jp
push
mov
push
scas
sarl
fsubr
rorb
rcrl
daa
ja
mov
xchg
pop
test
cmp
arpl
and
dec
xchg
pop
adc
jg
aam
cmp
icebp
sarl
mov
in
and
aad
add
cmp
jo
add
xchg
fidivrl
das
and
xlat
lcall
fcomi
sbb
push
shlb
pop
add
dec
mov
std
ficomps
jne
nop
add
aas
lods
mov
sub
pop
pop
mov
xor
xchg
fcompl
or
inc
add
dec
mov
in
aad
inc
sub
mov
iret
imull
lods
cltd
xchg
sub
mov
or
or
clc
mov
mov
out
mov
imul
test
sti
mov
imul
jno
push
stc
push
js
imull
dec
stos
scas
sub
popf
mov
int3
lods
inc
test
xor
scas
mov
aad
pop
es
loopne
cmp
int3
pop
xor
mov
loopne
add
push
sti
dec
call
jmp
ret
xchg
fisubrs
xor
sbb
hlt
mov
mov
test
rcrb
xor
out
dec
inc
lcall
out
jbe
pop
xor
sahf
pop
and
mov
pusha
push
popa
dec
loop
outsb
mov
popf
repz
push
repnz
jae
callw
test
and
popf
lret
addr16
pop
out
pop
jg
fwait
xor
iret
push
and
pop
sub
dec
jae
mov
pop
push
inc
jnp
mov
inc
lahf
fnstenv
sub
jp
sbb
adc
pusha
test
mov
mov
sbbl
dec
pop
sbb
dec
jb
mov
push
mov
inc
loope
movsl
xor
out
ret
js
cwtl
mov
xor
lea
sbb
in
dec
cmovno
jl
inc
ret
into
sbb
sar
cmp
mov
xor
jbe
mov
xchg
fwait
jbe
arpl
fstl
test
mov
ret
mov
and
mov
jmp
or
andb
jl
mov
sub
push
idivl
xor
mov
and
push
into
test
dec
dec
sbb
cmpsl
add
dec
push
scas
divl
outsl
dec
insb
or
mov
mov
push
adc
mov
inc
mov
or
xchg
sbb
iret
or
mov
inc
int3
sub
fstpt
repz
test
cld
scas
or
xchg
leave
loop
dec
fcmovnu
xor
int3
cmpsl
aaa
cmp
add
pop
stc
repz
in
ljmp
inc
pop
mov
mov
pop
push
xchg
rcrl
fs
andl
xchg
aas
xchg
mov
pushf
movsb
mov
inc
mov
ds
pusha
sub
pop
jl
insl
ja
xor
pop
fistps
dec
jnp
add
mov
add
push
inc
mov
clc
mov
jge
push
pop
push
dec
mov
arpl
loop
jae
sbb
out
and
mov
xchg
ret
ret
mov
and
and
and
xlat
dec
mov
rorb
lock
sub
addl
das
pop
shrb
dec
mov
pushf
mov
int
call
adc
sbb
mov
lods
or
fstpt
xor
neg
mov
ja
sub
out
add
sarl
inc
xor
inc
jae
movsb
xor
loop
xor
jae
adc
cwtl
push
jg
add
xchg
bt
cmp
add
push
lea
jmp
pushf
movl
pushl
lea
jmp
test
fnstenv
fimull
jg
inc
in
repnz
mov
in
or
negl
sbbb
leave
subl
clc
push
ss
jmp
jge
cmpsb
or
xor
in
sub
xor
aaa
adc
push
iret
pusha
fsts
stc
mov
add
test
push
jmp
lods
push
imul
popf
repnz
clc
mov
dec
movhps
call
addr16
hlt
cmp
mov
pusha
jg
mov
test
sbb
inc
pop
push
cmp
cmp
out
or
jg
jge
sbb
push
push
and
outsb
inc
sbb
fiaddl
shll
loopne
popf
lock
sbb
loop
test
lahf
enter
xor
sbb
jmp
mov
sarl
movsb
test
call
ja
add
in
out
sbb
pop
inc
push
xor
and
popa
or
shll
xor
movb
bt
push
add
stc
stc
call
pushf
cmp
sub
jg
popa
push
ds
adc
loopne
sub
lock
jnp
or
push
ja
pop
push
hlt
cmp
adc
or
mov
sbb
mov
ja
mov
sahf
sbb
enter
sbbb
and
aaa
push
cmp
call
in
das
test
xchg
pop
fcom
and
push
push
cmp
pop
xchg
sarl
fistpll
jne
jge
xor
and
out
xor
adc
je
add
sbb
pop
mov
in
lcall
add
xchg
pop
repz
pop
fs
mov
xor
pushf
pushf
push
movl
push
lea
ja
push
pushf
lea
jmp
jmp
loop
rolb
sub
ficomps
push
pavgw
test
dec
negb
jp
sti
sbb
push
adc
test
pushf
mov
add
mov
ss
mov
jmp
adc
xchg
popa
mov
and
inc
cmp
xchg
int3
jbe
jecxz
dec
and
mov
rclb
inc
fildl
sub
shlb
cmp
adc
push
mov
cwtl
adc
scas
or
test
inc
popf
add
push
gs
pop
js
inc
mov
jmp
xor
fadds
or
dec
stos
jne
add
adc
pop
add
imul
add
xlat
mov
xchg
repz
mov
mov
lea
xchg
add
xor
cwtl
jns
loope
loopne
pop
fisttps
push
adc
fmull
sub
cmp
sbb
pusha
xchg
jp
and
jns
mov
or
cmp
fmuls
lds
mov
xchg
les
scas
dec
pop
jbe
adc
push
in
sbb
lods
jne
push
xor
mov
lcall
mov
and
mov
push
stc
fidivl
or
or
clc
pop
dec
push
and
or
pop
into
sub
cmp
pop
cli
hlt
js
popa
cltd
push
or
cld
movsb
pop
das
adc
push
out
mov
xchg
dec
cmpsl
mov
xor
mov
popa
sub
push
xor
outsb
pop
cwtl
mov
jno
inc
mov
inc
hlt
in
or
mov
mov
pop
xor
lea
pushf
mov
push
pushf
pushl
mov
mov
inc
mov
dec
mov
jmp
pusha
lea
push
movzbw
lea
push
xchg
not
lahf
mov
lea
mov
lea
mov
not
pusha
lahf
lea
cwtl
movzbw
setle
mov
rdtsc
xchg
pop
lea
lahf
setbe
pop
jmp
lea
jl
mov
xor
mov
and
mov
not
lea
not
add
shl
shrd
xadd
mov
stc
dec
lea
not
test
pusha
cmp
mov
inc
lea
stc
test
rol
mov
sub
inc
shr
pushf
rcl
add
sbb
shr
inc
movzbl
movzbw
mov
shrd
lea
jl
mov
btr
shr
adc
btr
shl
movsbl
add
shld
movsbw
and
xadd
cmc
mov
clc
shr
rcr
add
push
xchg
cmp
and
rol
xchg
add
bt
sbb
sub
sub
mov
sar
lea
movzbw
stc
mov
bsr
inc
rcr
pusha
mov
add
cmc
clc
stc
pusha
shr
add
bt
shr
stc
add
pusha
pusha
clc
and
test
call
pusha
push
movb
pushf
movl
mov
lea
jmp
daa
add
add
notl
jne
popf
movsb
mov
pushf
and
mov
jnp
xchg
repz
cmc
pop
pop
test
add
cltd
bound
sti
mov
sub
jbe
mov
int3
mov
movsl
sbb
imul
sbb
mov
dec
pop
mov
scas
movsl
xchg
cli
xchg
fldt
imul
int3
ljmp
or
push
xchg
scas
jbe
loopne
cmp
pop
test
add
ror
je
in
sbb
xchg
aam
push
aad
ja
push
sahf
rclb
nop
push
addb
cli
es
pusha
popa
inc
fidivrs
cmpsb
jnp
push
aaa
cld
popf
add
xor
lahf
cmp
jo
cli
mov
leave
stos
testb
outsb
add
test
xchg
sub
mov
mov
out
or
jnp
daa
popa
xchg
push
callw
mov
cltd
xor
ret
sarb
cwtl
mov
testl
fwait
adc
iret
or
sub
imull
xor
adc
push
popf
jmp
mov
sbb
sbb
icebp
movb
repnz
push
in
into
mov
movsl
daa
dec
imul
nop
mov
ljmp
inc
ficoml
inc
sbb
mov
push
leave
lods
into
ret
fmull
xchg
stc
xchg
push
mov
mov
dec
mov
xchg
lcall
dec
adc
mov
imul
mov
sub
xor
jp
mov
xchg
push
ja
call
lcall
aam
mov
push
mov
inc
test
movsl
and
sahf
es
cmpb
js
lcall
lock
movsb
loopne
sbb
sub
das
lods
push
ret
xorb
push
repz
jns
xchg
shr
inc
rolb
pop
jp
and
insb
rol
jle
sarl
orb
xlat
xchg
adc
in
add
popa
cmp
enter
mov
fs
out
xchg
cmp
or
call
std
fdivrl
out
or
aad
xor
test
add
jbe
sbb
jmp
add
loop,pt
mov
stos
dec
sbb
lahf
push
adc
xor
dec
aad
lcall
psrad
sub
xor
shr
clc
mov
pushl
call
inc
mov
or
xor
test
insb
jl
and
cmp
xlat
fwait
jmp
ja
outsb
out
pop
aam
inc
scas
ficoms
sahf
repnz
test
sub
fdivl
jle
stos
pop
xchg
je
dec
sub
xchg
outsl
es
jae
jge
stos
sar
loopne,pn
mov
mov
pop
repnz
mov
popf
faddl
lret
push
jecxz
push
add
cmp
out
ret
xor
inc
jmp
xchg
adc
adc
mov
add
cmpsb
mov
push
repnz
add
push
lds
add
dec
sbb
jb
shrl
shrb
shrb
je
addr16
xchg
sahf
fstps
and
ja
jns
cmp
mov
xchg
int3
movb
lcall
lret
stos
fnstsw
je
sub
in
cld
aas
lcall
mov
arpl
xor
outsl
aad
addr16
mov
lahf
inc
repnz
and
bound
bound
xchg
mov
lcall
sub
aam
pop
xchg
mov
ret
enter
dec
xor
mov
mov
fwait
ret
bnd
test
rcl
and
inc
lahf
popf
insl
dec
ljmp
je
cmp
push
push
sbb
adc
cld
imul
sqrtps
std
cs
sahf
jo
xchg
xchg
out
mov
popf
cmp
rcr
dec
ds
daa
aam
xor
fnstsw
mov
pop
hlt
stos
subl
add
shlb
push
iret
outsl
push
pop
push
rcll
hlt
push
cmp
pop
dec
mov
pop
outsb
lahf
jp
leave
in
hlt
cmpsl
add
hlt
stc
jns
outsl
jb
xor
push
stos
add
ljmp
stos
int
or
jp
add
lret
lcall
push
fprem
mov
ss
lcall
lods
mov
cmpsl
dec
xchg
lea
lods
scas
movsw
imul
dec
in
mov
jmp
lds
inc
test
mov
or
inc
inc
cld
lock
leave
jae
ret
xchg
mov
mov
or
ja
push
jl
and
cmp
loop
fwait
cltd
mov
lock
mov
imul
stos
int3
mov
push
xor
mov
and
sub
js
push
mov
mov
sbb
fdivrp
push
int3
test
dec
scas
mov
es
pop
fldenv
push
out
insl
stos
lcall
cmp
mov
je
pop
stos
out
mov
push
fsts
push
lea
mov
repz
out
mov
xor
scas
in
mov
sbb
sarl
rcr
fs
das
push
pop
lock
push
jbe
sub
mov
fimull
pop
pusha
inc
sarl
negb
pop
add
imul
cmpsl
lods
jns
and
out
push
movsl
loopne
js
sbb
mov
jmp
std
or
sbb
decb
dec
xchg
dec
in
fbld
shlb
jne
sub
ret
xchg
cmp
push
mov
pop
ljmp
inc
jle
cmp
xor
loopne
jbe
sarb
mov
js
pop
or
and
icebp
frstor
lcall
inc
push
cmpsb
dec
mov
mov
mov
push
je
cs
clc
pop
test
dec
and
or
add
inc
aam
nop
or
sub
inc
mov
mov
push
dec
xor
mov
es
addl
cmp
sub
xchg
cli
sub
sub
addr16
js
and
mov
dec
call
inc
xor
fimuls
mov
mov
sub
mov
mov
ss
hlt
repz
sub
inc
xor
cmpsl
mov
xor
ds
testl
pop
lahf
push
dec
add
dec
mov
cltd
adc
push
or
in
lret
sahf
pop
add
ljmp
repnz
call
lret
sbb
xor
push
fwait
or
lock
addr16
pop
ds
addb
lcall
adc
xchg
mov
cli
aad
lds
js
push
cmp
pop
cmp
roll
push
mov
aad
xchg
and
add
lcall
dec
inc
xor
out
gs
in
dec
adc
adc
insl
push
mov
insl
out
xor
arpl
std
aam
cltd
pop
mov
lret
jle
shlb
xchg
stc
cmp
es
fcmovnbe
ljmp
jge
mov
push
xchg
stc
mov
xchg
push
mov
out
push
icebp
sbb
and
mov
push
and
xchg
stc
in
or
add
mov
push
push
out
movsb
into
ret
in
iret
add
insb
loop
jmp
jmp
inc
bound
push
adc
dec
xor
lock
xchg
clc
lds
xchg
std
adc
inc
in
das
or
pop
pop
jl
jo
imul
or
push
mov
jmp
dec
into
mov
sahf
popa
lock
pop
xor
fs
sbb
cs
imul
xchg
or
popa
or
movsl
dec
mov
mov
jge
jle
xor
std
xchg
imulb
scas
pop
jnp
inc
sub
jp
das
sahf
aas
popf
lods
ja
popa
inc
leave
rcll
mov
inc
sar
js
xchg
mov
push
int3
cmp
or
les
adc
or
inc
iret
jge
jno
inc
sbb
jg
pusha
jge
jno
lds
jge
test
jno
rclb
ret
jnp
dec
in
dec
movsl
ret
imul
adc
repz
rcl
add
inc
nop
cmp
mov
xor
pushf
pusha
movl
movb
push
lea
jmp
cmc
shr
pushf
clc
clc
cmp
sub
push
pushl
dec
cmc
stc
jmp
pushf
call
call
movl
push
lea
jmp
movl
pusha
pushf
movl
push
push
lea
jmp
jmp
rcl
add
addr16
mov
gs
sbb
mov
popa
rclb
mov
addb
aas
adc
xor
bndldx
loope
lea
dec
mov
add
cmova
repz
push
ljmp
data16
enter
mov
movsl
jae
in
pop
movsl
lds
inc
das
das
clc
lret
jo
je
notl
push
ret
lcall
add
cmp
stos
dec
mov
std
mov
jmp
sbb
dec
inc
fimuls
mov
cltd
or
ja
int
movsb
icebp
or
and
jno
lahf
fmull
call
xor
outsl
mov
pop
push
test
push
dec
movsb
das
xor
cs
fdivl
sbb
xor
std
cmp
lcall
jbe
fs
cld
es
repnz
inc
pop
jo
mov
ja
fiaddl
testl
rclb
ds
add
pop
mov
mov
push
movsb
or
fisubrl
shrl
cltd
daa
aam
and
or
sub
xchg
mov
xchg
testb
in
adc
rclb
xlat
xor
cmpsl
js
sub
pop
add
repnz
sbb
sub
scas
xor
test
loop
sub
dec
xor
call
and
xor
pop
scas
jns
inc
sub
int
xor
mov
mov
mov
cltd
xchg
mov
lahf
lea
mov
call
addr16
sbb
in
ja
xchg
add
popa
nop
jne
jb
fdivrs
dec
sbb
insb
push
pop
push
xchg
inc
in
fwait
popa
into
shll
lea
mov
jle
out
mov
je
rcll
adc
lea
mov
aad
ret
jae
loopne
sbb
add
mov
adc
fdivrl
out
cld
incl
pop
pusha
clc
iret
lds
iret
jo
movsl
daa
mov
inc
add
jle
fimuls
out
outsb
shlb
pop
mov
xor
sbb
add
jle
pop
mov
add
stos
cwtl
imul
mov
sub
dec
int3
sub
xchg
repz
pop
and
ret
mov
mov
sub
nop
ret
popa
pop
and
xchg
hlt
push
dec
pop
aam
jle
ljmp
xchg
dec
pop
shll
pop
xor
pop
mov
xchg
hlt
mov
lock
ret
push
push
icebp
inc
les
pop
test
add
xchg
cmc
add
push
jmp
jl
cmp
rcrl
loop
inc
sub
leave
call
fldt
das
daa
out
movb
fmull
add
mov
das
dec
imul
sbb
and
cmc
imul
ret
out
pop
iret
fdivs
inc
jecxz
add
mov
aas
out
pop
nop
cmp
lock
das
leave
xor
mov
outsl
sbb
lods
scas
mov
xor
aaa
test
xchg
repz
xchg
mov
ds
dec
dec
div
adc
data16
mov
fldl
dec
das
fnstcw
xchg
push
inc
imul
nop
bound
xor
mov
add
jge
mov
imulb
sbb
insb
icebp
jno
jp
outsl
inc
popa
lds
mov
adc
andl
mov
in
push
mov
js
or
loopne
sarl
push
xor
ret
inc
jg
and
popa
mov
adc
pop
and
sbb
lods
push
pop
cs
lret
xchg
xor
pop
inc
les
jge
andb
or
jecxz
shlb
adc
pop
notl
in
out
xchg
lcall
inc
out
adc
sarl
divb
ljmp
and
lret
test
mov
xchg
repnz
enter
ljmp
fwait
jmp
push
pop
dec
adc
inc
dec
add
shll
shrl
xchg
dec
jns
sbb
fildll
xchg
repnz
in
xor
lods
pusha
mov
pop
add
jo
sqrtps
ret
pushf
pushf
mov
dec
fcmovb
push
repnz
push
shll
fbstp
lock
mov
jg
push
xor
repz
and
out
sahf
mov
arpl
jns
mov
dec
inc
and
pop
clc
mov
mov
int3
mov
call
xchg
insl
adc
jmp
sbb
inc
and
xchg
out
pop
addr16
aas
popl
and
js
mov
jne
loopne
cmp
fsubrs
out
cmpsb
cmp
cmpsl
mov
shll
pushf
imul
lcall
shlb
inc
xchg
lods
mov
leave
mov
dec
and
xchg
push
and
push
aad
mov
xchg
jecxz
pop
xchg
das
and
ret
sub
push
xor
lret
fldl
repz
or
test
sbb
mov
pop
or
into
gs
es
cmpsb
jo
cld
mov
lea
popf
mov
mov
jle
add
iret
mov
sub
stos
outsl
movsl
movsb
add
pop
mov
jp
add
mov
ficomps
daa
dec
inc
jle
jne
sbb
mov
ds
les
jmp
test
mov
or
enter
jo
jmp
scas
mov
add
jae
lock
sahf
in
sar
jno
stc
sbb
jp
mov
push
add
inc
sub
mov
mov
jno
push
pop
adc
inc
mov
rolb
xlat
lret
imul
std
pop
and
scas
daa
pop
inc
pop
int3
jno
stos
pop
test
dec
mov
stos
iret
xor
cwtl
mov
rep
push
add
leave
imul
dec
add
mov
dec
aaa
jnp
add
adc
jle
inc
xchg
xor
andb
jg
movsl
push
xchg
mov
insl
fsubp
fisubrl
lock
scas
fnstcw
psubq
outsb
xchg
inc
scas
shr
lock
in
ja
jno
mov
cmpsb
fadd
dec
lcall
push
out
cmc
pop
fmull
out
sub
add
ss
xchg
mov
cmp
ljmp
jbe
aaa
add
mov
mov
arpl
xor
std
imull
sub
pop
std
std
test
xchg
insl
shlb
inc
call
int
insb
xor
pop
xchg
ss
rorb
in
sub
cmp
mov
push
pop
les
in
sub
push
test
cmp
xor
jbe
adc
xchg
push
data16
adc
mov
fadds
push
ror
jmp
adc
inc
push
push
mov
call
pop
adc
idivb
popa
mov
fimuls
shlb
add
movsl
add
inc
mov
jae
pop
add
adc
lea
movsl
cmp
movsl
xchg
testl
stc
mov
das
cmp
das
jg
xchg
push
sbb
mov
jb
dec
inc
inc
pop
pop
adc
inc
popa
daa
sbb
pop
loop
or
imul
mov
in
jb
inc
scas
dec
inc
xchg
es
mov
push
sub
sbb
sub
dec
sarl
jge
jno
cmp
aaa
out
mov
cwtl
dec
inc
test
or
cmp
int3
stos
scas
mov
int
inc
cmp
rorl
in
into
pop
leave
hlt
adc
popa
lcall
jg
idiv
jns
imul
sub
lret
icebp
mov
xchg
or
loopne
push
push
popa
jl
or
cmpsl
repnz
mov
xor
ret
enter
in
jmp
imul
xchg
or
inc
push
pusha
data16
sub
sub
or
or
iret
jb
fisubrs
repz
fildll
jbe
mov
adc
and
cmp
leave
xchg
in
xchg
std
add
or
stos
jl
push
es
stos
sub
mov
sar
xor
and
and
lods
sub
push
test
imul
rorb
ficoms
bound
adc
loop
mov
jnp
negl
lods
mov
xchg
and
pop
lcall
shlb
mov
sbb
filds
and
push
out
hlt
cld
inc
aaa
push
jo
or
mov
dec
fimull
sbb
jne
or
or
std
fadd
inc
sub
or
pop
mov
jb
fildll
xor
out
sub
inc
je
stos
push
sub
xchg
in
sub
fs
in
ljmp
loop
mov
xor
insl
xor
jmp
mov
lcall
cmp
xor
xchg
in
mov
or
or
push
roll
roll
adc
std
xor
and
jp
repz
or
sbb
xor
std
pop
test
adc
flds
in
in
shrb
es
jno
mov
ret
push
mov
in
shlb
inc
pop
add
jns
add
es
push
and
and
mov
aas
inc
push
rcll
inc
movsb
lret
xor
jo
sbb
lret
fsubrl
fstps
cmp
xor
test
loop
or
xor
mov
fnstenv
xchg
mov
mov
adc
sub
cmp
dec
lds
out
dec
sub
fldl
mov
xor
xchg
add
add
adc
int
jno
adc
notl
inc
mov
out
out
xchg
sub
aas
sub
sti
in
fsubrl
sub
imul
std
int3
imul
mov
push
stos
fnsave
xor
out
shr
cmp
test
int
mov
cltd
mov
xchg
insb
outsl
mov
mov
mov
js
mov
dec
mov
loope
repz
pusha
mov
shrl
mov
stos
fwait
xchg
jmp
push
into
mov
ljmp
subb
out
das
or
xor
sub
cmp
in
mov
out
lcall
mov
push
call
pop
sub
dec
mov
mov
pop
mov
decb
outsl
dec
jne
les
xor
xor
popf
pop
mov
test
call
dec
or
pop
fbstp
xchg
icebp
sbb
ljmp
jmp
movsb
pop
cmp
cmp
xchg
or
divl
ror
mov
mov
mov
lods
ret
out
xchg
add
rcrb
stos
cmc
mov
imul
mov
pop
out
cli
cvtps2pi
mov
shrl
ss
stc
jbe
lret
mov
dec
push
or
outsl
adc
addr16
push
and
dec
sbb
dec
imull
movsl
sub
mov
idivb
or
mov
mov
mov
fs
dec
call
xchg
ljmp
lahf
mov
sar
test
add
test
pusha
pushf
mov
mov
cmp
test
cmp
pushf
pushf
mov
lea
jbe
bt
jmp
iret
in
xor
rcll
dec
add
add
jle
hlt
pop
sub
ret
pop
inc
repnz
fstpl
insb
jnp
jb
test
pop
mov
add
cli
loop
fsubl
std
fisttpll
repz
mov
sti
imul
jnp
std
lahf
fst
fstpt
xor
push
inc
movsb
add
shrl
into
sub
dec
sub
mov
aam
mov
sub
loopne
repz
in
xor
mov
sbb
dec
push
out
push
cltd
and
sahf
xchg
inc
fcompl
pushf
mov
addr16
movsl
mov
lods
and
cs
xchg
aaa
pop
dec
cli
ja
rorb
adc
std
arpl
cmpsb
ljmp
xchg
stc
dec
push
imul
add
xor
nop
mov
ret
jle
aad
dec
js
jb
mov
xchg
jmp
sbb
lods
inc
fwait
jo
stos
idivb
jmp
mov
mov
mov
shll
imul
or
xchg
jmp
in
ljmp
mov
inc
out
or
mov
push
sub
sub
loopne
test
jo
cs
out
xor
jle
mov
lods
sub
dec
jnp
adc
pop
cmp
mov
add
xor
mov
pusha
xor
clc
mov
cmc
cmc
lea
bt
add
pushf
mov
pusha
mov
call
xchg
leave
xor
stos
pop
jl
in
and
push
test
ds
rclb
mov
add
or
jl
add
mov
shll
xchg
mov
adc
adc
cltd
jbe
xchg
add
fs
outsb
test
ljmp
int
outsb
jne
mov
std
arpl
sbb
xor
arpl
mov
lcall
in
jae
pop
push
xchg
push
push
insl
out
mov
mov
or
add
inc
sub
call
in
fadds
and
dec
ljmp
mov
bound
call
lods
inc
cltd
sub
xchg
lds
ret
pushf
xchg
jo,pt
sbb
adc
mov
jmp
jg
out
adc
ret
addr16
mov
add
imul
jg
outsb
cld
and
pusha
insl
xor
sbb
rcl
call
fmull
sub
out
cmp
xor
out
jp
pop
ljmp
add
sbb
stos
xor
daa
aam
rcl
or
out
adc
fbld
jle
jl
test
sub
xchg
out
adc
cmp
sub
pop
xchg
jne
add
xchg
leave
pop
dec
pop
sbb
js
xchg
mov
scas
lahf
push
cmp
push
jnp
push
clc
dec
xor
inc
or
jo
movsl
push
cli
or
xchg
cmp
lret
sbb
test
xchg
and
out
jb
int
loop
add
rclb
divb
mov
loop
popa
mov
lods
xor
pushl
popl
pushf
pushf
push
pushl
ret
jg
sub
es
cmp
jecxz
xor
pop
sahf
cmc
pop
iret
sbb
mov
lods
rcll
inc
pop
and
xchg
pop
or
cmp
orb
or
add
rol
pushf
ss
pop
in
xlat
push
pop
lods
cmp
sub
mov
cmp
mov
cmpsl
push
jmp
ficompl
ss
mov
xchg
in
in
into
dec
outsb
les
out
into
and
pop
mov
xor
loop
mov
lods
aas
pop
aas
jb
frstor
xchg
in
or
cmp
jecxz,pn
es
inc
aad
sub
and
xchg
in
aas
xchg
xor
sub
xchg
loopne
inc
nop
es
repnz
stos
dec
je
and
push
and
outsl
pop
data16
iret
jno
sub
es
cmp
sub
mov
pop
mov
lahf
out
leave
imul
mov
push
add
jmp
cmpsb
js
repnz
dec
sti
popf
dec
out
sub
push
pop
jecxz
in
or
dec
test
loop
dec
lods
popf
mov
xchg
adc
enter
repnz
rclb
or
dec
cmp
divl
mov
mov
and
test
mov
lret
inc
or
and
test
outsl
mov
mov
jo
arpl
sub
out
xchg
mov
mov
outsl
cs
jno
mov
nop
add
pop
cmp
popa
loopne
pop
repz
mov
andl
inc
push
ja
out
sub
sub
sti
xor
ds
mov
push
pop
jae
mov
push
jmp
cmp
fistpl
adc
mov
push
lahf
or
push
xor
or
or
jo
inc
lods
cmp
dec
ja
adc
dec
fnstcw
sub
inc
notl
cmp
stc
inc
cmp
jnp
xchg
ss
dec
xchg
sbb
mov
icebp
inc
mov
sbb
mov
xchg
sub
lahf
lock
iret
out
and
jae
jge
pop
fwait
push
mov
orl
xor
adc
mov
ds
and
mov
jecxz
iret
sub
xchg
in
mov
call
stos
mov
loopne
xor
mov
lea
push
fwait
or
sbb
and
xor
mov
out
add
jg
aaa
mov
jge
or
or
aaa
stos
imul
jb
push
cmp
jno
xchg
mov
mov
outsl
xchg
repnz
dec
mov
mov
inc
inc
mov
je
mov
sbb
inc
hlt
xchg
gs
cli
pop
jmp
into
ljmp
sbb
inc
or
pop
cmp
sbb
jne
in
pop
dec
dec
mov
mov
jbe
sar
movsb
outsb
xor
jne
outsb
subb
and
gs
jo
push
adc
push
xor
mov
lock
sub
dec
and
dec
sbb
mov
pop
jnp
orl
movsb
cmc
sub
or
xchg
sbb
cmpl
xor
and
popa
mov
pop
push
mov
in
stos
xchg
xchg
push
call
cwtl
test
dec
push
inc
out
and
add
inc
push
int
leave
xor
pop
dec
movsl
roll
js
mov
push
mov
test
dec
lea
jmp
aam
insb
lea
push
mov
cli
add
addr16
pop
mov
adc
sub
jb
xchg
jp
push
test
cli
push
icebp
mov
and
push
xchg
mov
aaa
xchg
in
iret
sub
outsl
rcl
or
repz
in
and
xor
out
mov
add
mov
out
int
aas
xor
or
test
dec
xor
pop
iret
adc
mov
add
test
test
mov
pushf
ja
inc
pop
sub
ss
push
xchg
mov
mov
pop
lods
or
push
popf
sbb
and
arpl
xchg
inc
cmpsl
pushf
push
dec
shrl
dec
xor
push
lcall
outsb
pop
jmp
xchg
cmp
mov
mov
imul
rcrl
dec
and
stos
sbb
and
mov
inc
test
je
mov
sbb
push
inc
mov
sar
repz
mov
popa
into
push
into
lahf
cli
cmp
addb
pop
xor
lods
leave
mov
mov
jno
and
push
jne
mov
orb
sbb
jl
mov
mov
or
dec
enter
adc
lea
lcall
imul
pop
scas
adc
in
push
insb
ss
adc
lods
adc
jge
movsb
pop
lret
ljmp
mov
jbe
repnz
sbb
mov
adc
in
xchg
push
dec
mull
fistpl
sbb
repnz
mov
sahf
push
sub
js
inc
inc
lds
aas
shlb
fwait
cs
imul
roll
mov
out
aam
xlat
mov
fwait
nop
test
loope
xor
mov
in
test
mov
lock
sub
imul
or
adc
iret
push
inc
scas
dec
inc
aam
sub
sub
decl
aad
mov
push
push
test
push
test
mov
sub
mov
add
and
das
in
ficompl
das
jp
dec
in
sub
adc
ja
rorl
addl
add
pop
add
pop
mov
cmpsb
jle
adc
push
jmp
mov
ret
mov
or
fsubs
loope
ss
cs
and
and
xchg
and
xor
cmp
push
mov
mov
shl
jmp
lret
outsl
int
in
mov
jb
popf
xchg
jae
imul
sub
clc
lcall
iret
lret
sbb
xor
pop
cmpsb
repnz
loop
pushf
pop
in
pop
mov
filds
or
jno
xchg
in
dec
pop
jbe
test
fisttpll
sub
sub
call
xor
sub
push
rclb
gs
insl
stos
sbbb
pop
add
jo
adc
bound
cmc
pop
xchg
icebp
push
jmp
into
insl
lahf
data16
sbb
sub
push
outsl
gs
andl
or
mov
add
hlt
adc
inc
aaa
adc
mov
cmpb
cltd
jbe
bound
jg
add
push
jle
arpl
add
sub
js
cld
out
xchg
ffree
xchg
cmp
shrl
xor
jnp
and
dec
sub
xor
add
dec
rcrl
mov
and
imul
mov
mov
and
in
sub
mov
or
outsb
jge
jne
mov
xchg
push
outsb
push
push
aaa
scas
dec
cmp
fwait
sub
dec
insl
stc
stos
push
stos
push
add
shrl
cltd
push
in
sarl
dec
or
std
pop
stos
aad
insb
fldl
ja
ja
outsb
imul
inc
mov
inc
mull
add
push
push
in
mov
and
or
mov
out
cmpsb
popa
leave
dec
mov
inc
dec
cmp
or
dec
adc
ret
and
xorb
inc
in
outsb
pop
hlt
mulb
adc
call
cmp
filds
ja
push
aaa
xchg
adc
cmp
lea
mov
daa
sbbb
cwtl
test
nop
xlat
pop
mov
sub
daa
rep
inc
mov
or
dec
negl
movsb
add
dec
or
dec
pop
mov
int3
data16
daa
xor
out
inc
xor
xor
mov
negl
mov
imul
popa
aaa
stc
imul
mov
jmp
sbb
mov
jnp
rol
jb
adc
mov
in
ret
and
cmc
push
in
gs
in
mov
jmp
pusha
mov
mov
fcoms
lods
fs
push
and
fistpll
cmp
and
repz
adc
jl
das
inc
cmp
dec
stos
inc
insl
les
xorb
ret
xchg
xor
xchg
imul
vmovq
sbb
in
rep
pop
jae
cmp
pop
jae
in
int
insl
shrl
mov
js
and
and
sbbb
pushf
adc
push
out
rolb
mov
cli
lea
cmpl
cld
cld
xor
ja
push
lcall
fistpll
sub
dec
cmpsb
cwtl
popf
sub
xlat
repz
xor
jle
insl
jl
mov
fistps
scas
mov
into
test
fsubs
gs
adc
push
add
pop
mov
mov
addr16
push
sub
xorl
pop
sub
sbb
mov
lcall
test
pop
mov
cmpsl
pushf
ds
push
cmpsl
ljmp
ja
mov
jmp
cmp
stos
push
inc
test
dec
adc
fsts
push
sub
sub
and
mov
stc
push
iret
and
mov
int
ljmp
cltd
in
jmp
icebp
imul
xor
dec
ljmp
push
sub
dec
inc
test
stc
add
cmp
jg
lahf
cli
sub
dec
insb
clc
dec
shll
std
push
mov
std
out
inc
fdivrs
lret
sub
sti
std
popa
daa
out
mov
mov
addb
jle
mov
daa
and
rorl
and
sti
push
and
stos
and
jecxz
adc
xor
pop
push
sbb
in
adc
mov
sub
je
lret
mov
mov
lahf
lahf
inc
jne,pn
test
push
push
mull
addr16
jp
push
fiadds
add
sub
mov
icebp
mov
xchg
pushf
and
pushf
pop
add
repz
clc
ds
add
hlt
mov
inc
xchg
pop
push
push
fldcw
shrl
enter
push
mov
push
clc
or
push
pop
push
inc
dec
lock
cmp
xchg
repz
xchg
or
adc
xchg
pop
ret
adc
lret
inc
cmpb
xchg
jae
sub
lds
hlt
or
loope
xchg
pop
add
pcmpgtd
aas
add
mov
dec
inc
subl
add
scas
xor
and
jg
mov
popf
sub
out
ret
loopne
mov
rorb
js
mov
fisubrl
hlt
gs
dec
movsb
xor
test
fmuls
cmp
xor
mov
xor
les
xchg
lods
pop
aam
inc
js
mov
mov
pop
dec
sbb
sbb
mov
jmp
nop
icebp
stc
add
incb
xlat
adc
mov
dec
sub
lods
out
cmp
mov
sti
fwait
out
push
test
loope
mov
push
jne
cmp
inc
push
mov
int
pusha
nop
arpl
loop
sub
mov
mov
int
in
dec
adc
fwait
daa
mov
xor
aas
mov
js
inc
and
cmpsl
sub
outsl
lods
test
xchg
test
mov
repz
icebp
xor
sub
push
and
mov
jl
xchg
xchg
aam
pop
cmpsl
jnp
mov
mov
cmp
xchg
arpl
cli
aad
pushf
sub
jge
testb
and
leave
cld
hlt
mov
inc
imul
mov
xchg
sbb
mov
mov
or
pusha
xchg
testb
outsl
inc
mov
loop
sub
or
adc
mov
or
xchg
fdivrs
fstp
in
and
inc
add
imul
xchg
aam
rorb
xlat
cld
pop
or
ljmp
popa
inc
out
xchg
fcomps
mov
pop
xor
mov
xchg
jbe
push
add
int
int
inc
insb
xor
ljmp
rorl
pusha
out
sbb
mov
in
gs
mov
pop
adc
ret
jmp
loopne
adc
xor
movsl
mov
mov
outsl
int3
dec
sub
pop
push
enter
push
mov
xor
shr
cmp
pusha
clc
add
movsbw
test
movzbw
pushl
shrd
add
adc
clc
call
push
add
pushf
pushl
ret
dec
popf
sahf
daa
ret
test
mov
in
inc
inc
loop
nop
orb
inc
or
int
rolb
loope
ljmp
push
popa
aam
popf
sub
int
mov
fnstsw
pop
daa
hlt
cs
pop
push
arpl
cmp
xor
cli
je
inc
jno
or
xor
and
pop
out
pop
repz
setg
xchg
xlat
ror
pushf
js
push
testl
insb
dec
cmp
cmp
rol
xchg
mov
pop
pusha
clc
pop
pop
jb
mov
mov
jle
pop
mov
push
jne
push
pop
push
gs
mov
push
cmp
inc
dec
sub
sub
or
mov
push
test
sub
cmp
sbbb
jmp
xor
xchg
daa
outsb
mov
neg
in
lock
and
fadds
daa
inc
mov
push
nop
sbbl
pop
leave
xchg
add
loop
mov
inc
pop
shlb
call
xchg
pop
dec
fmulp
pop
jno
das
pop
movsl
cmpsb
ret
push
sub
bound
adc
add
std
mov
ss
je
add
xor
pushl
jmp
movl
pusha
push
movb
lea
jmp
mov
call
pushf
movl
movb
pushl
pushl
pushf
lea
jmp
ljmp
dec
add
dec
xchg
and
jne
mov
aam
xchg
fistpll
xor
mov
and
out
into
cmp
cltd
inc
mov
jnp
dec
or
xchg
cmpb
stos
out
sahf
aas
mov
es
repnz
aam
mov
inc
inc
sbb
cld
xchg
inc
xchg
dec
cmpsb
cmc
inc
loop
mov
mov
mov
push
sahf
bound
dec
jno
insb
lret
adc
add
inc
lahf
cmpsl
xchg
xchg
aad
sub
in
sar
aas
lods
in
push
mov
pop
sbb
test
aad
push
daa
rcrl
ret
sub
filds
mov
sbb
xor
cltd
shrl
test
insl
mov
sahf
rclb
and
xorl
mov
rorl
jb
mov
and
fsts
int3
mov
and
xchg
aad
mov
fwait
cli
xor
lods
push
jg
xchg
mov
push
ret
mov
cmpsb
outsb
imul
mov
or
jb
cmp
and
mov
mov
movsb
mov
mov
loope
repz
js
jmp
in
jl
sbb
mov
pushf
loop
pop
pusha
es
aaa
adc
sub
sub
mov
std
push
push
pop
inc
movsb
mov
shll
inc
pop
ror
push
int3
mov
sbb
mov
inc
xchg
dec
loope
ret
wrmsr
or
lods
divb
mov
cmc
bound
and
jmp
lds
fisubl
push
popa
jno
into
sbb
lret
imul
mov
insb
cmc
jmp
call
pusha
jmp
movl
push
mov
lea
jmp
lea
pushf
mov
pusha
not
lea
pop
mov
mov
mov
movw
lea
jmp
pushf
call
jmp
movl
pushf
lea
jmp
movl
pusha
movl
push
push
lea
jmp
cmp
test
scas
in
push
mov
jp
repz
mov
lock
pop
pop
jecxz
jb
arpl
mov
inc
sub
lret
inc
test
xchg
daa
push
ret
cmp
cmp
int
lock
cmp
xor
out
les
fistps
out
es
fidivrs
xor
hlt
ds
pop
mov
lods
sbb
xchg
xor
dec
mov
ljmp
outsb
pop
repz
ljmp
sub
mov
and
test
jae
nop
mov
roll
popf
mov
lods
incl
lods
outsb
leave
pop
shrl
xor
ss
push
daa
xor
jg
inc
mov
jge
out
mov
jns
pop
arpl
mov
mov
stc
xchg
js
fdivrl
icebp
stos
push
inc
mov
mov
lock
out
dec
and
xchg
fildll
xor
cwtl
stc
dec
fcoml
frstor
leave
popa
mov
push
xchg
nop
cmp
jmp
and
mov
bound
int
jle
lret
into
pop
fiadds
lret
call
call
out
inc
sub
inc
adc
sbb
xchg
shr
repz
fisubs
mov
out
ret
movsb
add
xchg
rolb
pop
pop
out
xor
ja
lods
sub
inc
shll
ret
add
jp
mov
fsubl
dec
mov
xchg
scas
jns
or
cmp
mov
jmp
fst
push
jbe
addb
dec
jecxz
lea
data16
dec
jecxz
mov
outsb
add
xor
sahf
inc
mov
data16
idivl
mov
ds
pop
pop
stc
xor
push
jmp
lea
jle
push
pusha
lea
jmp
pop
add
mov
push
test
into
push
xchg
pop
xor
addr16
outsb
sub
pop
mov
fidivs
je
pop
mov
ret
cmp
and
adc
sub
lds
or
mov
sbb
sarl
xchg
cmp
insl
call
pop
mov
mov
jns
lahf
stos
je
jb
shlb
and
leave
hlt
nop
popa
je
jmp
xchg
rclb
and
sarb
xor
arpl
sbb
sarb
xor
add
int
insl
mov
xor
jp
sahf
ja
ljmp
cltd
xor
sub
lods
rcrl
mov
fadds
loopne
gs
dec
inc
cltd
sbb
dec
add
in
lret
dec
aam
adc
sarb
dec
cmc
shrl
xchg
xchg
test
xor
pop
in
hlt
test
int3
scas
cmpsb
cmpsb
fsts
xor
gs
in
mov
add
scas
fistpl
mov
inc
popa
cmpsl
dec
lods
enter
mov
dec
mov
sahf
cmp
stos
sub
test
fisttps
jle
ja
jg
jg
jnp
xor
loope
test
mov
xor
fxch
mov
add
jle
and
mov
mov
cmp
mov
pop
sub
dec
cmp
push
mov
sub
rcrl
ljmp
mov
mov
call
clc
sub
adc
add
test
ljmp
in
loop
dec
cs
jb
aad
fstp
mov
les
mov
shrb
sbb
ss
into
sub
fdivp
cld
das
or
xchg
imul
xchg
popa
or
imul
cwtl
ss
jp
xor
test
shr
fistpll
int
jle
sbb
fs
xor
insl
push
ret
cmpsb
jle
pop
mov
in
push
jge
movsl
push
ret
stos
lds
xchg
iret
sub
fidivrs
lods
sub
push
cmc
jle
fimull
mov
sbb
xor
in
xchg
stc
add
mov
lds
rdtsc
xchg
into
fidivrs
nop
ds
cltd
nop
mov
pop
test
and
jecxz
xchg
iret
push
pmullw
mov
out
cmpsb
push
xchg
mov
mov
scas
xor
pop
adc
ficoms
fwait
and
pushf
cmp
dec
sub
mov
ss
scas
gs
cmp
mov
adc
cmp
into
scas
mov
adc
or
ret
xor
xchg
iret
cs
call
inc
sbb
inc
out
cld
pop
mov
ja
lods
cmp
mov
pop
fs
in
xchg
fists
negl
jle
fwait
sub
inc
push
pushl
inc
adc
stc
adc
push
andb
jmp
or
lock
jns
cli
xchg
jno
mov
and
mov
mov
add
jmp
pop
mov
addb
ss
pushf
or
ficoml
pop
ja
aas
mov
fisubl
or
in
mov
mov
jge
mov
in
adc
push
inc
nop
mov
aad
and
repz
pop
or
mov
cmp
inc
mov
pusha
fwait
mov
fidivs
jmp
div
add
subl
add
lods
lcall
mov
aas
add
or
into
xor
xchg
into
pop
push
outsb
sbb
lods
sub
rcr
push
dec
adc
pop
fisttpl
fwait
pop
js
sbb
xor
mov
push
and
mov
ja
sti
and
xchg
into
xlat
inc
xor
or
jl
inc
xchg
add
xchg
ret
sub
push
pop
and
stos
or
and
mov
jmp
push
divb
jo
cld
xchg
sti
rorl
dec
cwtl
out
popf
mov
pop
pop
stc
pop
test
subb
mov
arpl
enter
adc
xchg
dec
push
mov
test
and
xchg
divb
xchg
int
out
pushf
movl
pusha
push
jmp
sub
mov
sub
cmp
stc
mov
jmp
jmp
xchg
fisubs
xchg
ja
xchg
icebp
aam
sbb
hlt
enter
mov
adc
inc
int3
int
sub
aaa
sbb
jl
scas
fcom
shl
push
add
sbb
mov
inc
jg
stc
jmp
jae
xchg
cltd
sti
ffree
sub
enter
mov
gs
ffreep
and
pop
jne
filds
jle
push
jle
icebp
pop
or
sub
or
loope
jle
mov
test
lret
and
loope
cmp
dec
push
loope
aas
lds
out
dec
dec
stos
mov
stc
add
daa
movsb
lret
lahf
aas
cltd
imul
iret
sub
stc
sub
mov
loope
sub
insl
xchg
lcall
sub
adc
ja
xor
cwtl
mov
or
xlat
xchg
jae
mov
xor
outsb
movsb
adc
dec
xor
aaa
sub
repz
test
ja
push
mov
das
pop
mov
sbb
push
dec
jle
sbb
dec
dec
fst
mov
and
icebp
scas
les
in
icebp
into
lea
sarl
int3
and
cltd
scas
shrb
pop
insl
dec
lea
mov
dec
fwait
ja
insb
mov
es
aas
icebp
pushf
in
les
dec
lds
push
add
mov
jecxz
mov
mov
scas
sbb
dec
mov
jno
ficoml
imul
test
sbb
xchg
in
sub
pop
push
or
push
cltd
or
cmpsl
insb
outsl
or
shlb
pop
dec
mov
in
sbb
dec
dec
fldl
aaa
inc
xor
jbe
sbb
xor
cmp
cld
sbb
adc
ret
adc
xchg
lret
inc
ja
pushl
movl
pusha
pusha
movb
jmp
dec
push
int
dec
mov
inc
mov
ss
jne
jbe
dec
jmp
xor
rolb
rcll
lret
into
cltd
in
dec
push
jnp
jns
repnz
adc
sub
xor
pusha
mov
insb
sbb
mov
aaa
shrl
jno
jb
xchg
cld
sub
mov
pop
addr16
mov
xor
dec
movsl
add
movsb
es
add
pushf
loopne
fidivrl
and
dec
sbb
fsubrp
fisubl
sub
mov
call
pop
daa
inc
imul
push
push
adc
jecxz
ja
xchg
loope
xchg
fsubrs
subb
int
mov
mov
mull
mov
jle
and
inc
mov
mov
movsb
mov
loopne
leave
dec
shlb
xchg
lret
js
lock
pop
pop
movsb
jmp
xorb
in
hlt
in
xor
cltd
xor
ret
dec
mov
ss
xchg
mov
loop
mov
inc
aaa
and
adc
and
nop
mov
add
insb
mov
je
addr16
pop
sti
pop
test
or
fisubs
jge
and
jl
popf
jne
pop
xor
sbb
out
cli
cwtl
arpl
or
rcrl
ljmp
lods
jle
pop
repnz
lods
mov
in
fcomip
push
mov
mov
adc
lea
cmc
jg
popf
iret
jns
or
sbb
aas
cmp
add
lods
clc
into
xlat
jmp
push
mov
xor
xor
lahf
jb
inc
lods
or
out
xchg
mov
sti
daa
mov
pop
jbe
xchg
leave
jne
popf
jb
fs
lret
mov
decl
mov
test
cmp
mov
sub
jl
daa
sub
xor
gs
xchg
xchg
mov
add
test
mov
add
sub
fidivl
xchg
cmp
xchg
inc
mov
outsb
inc
mov
fistpll
or
stos
call
cmpsb
pop
add
mov
or
push
popa
cwtl
xor
scas
add
ss
icebp
push
mov
pop
ss
sbb
test
sub
ficoml
and
pop
sbb
pop
sbbl
xchg
inc
or
add
jae
das
fistl
push
push
rcll
fs
adc
xor
stos
cmp
jae
lods
jo
in
sti
or
add
lret
addr16
adc
xlat
ja
mov
add
mov
dec
pop
sti
and
out
aaa
ljmp
jecxz
fs
sbb
mov
adc
out
pop
adc
pop
shufps
push
mov
xchg
cmc
and
push
insl
or
test
or
xchg
mov
outsb
mov
daa
push
rclb
adc
push
pop
and
push
jbe
mov
int
add
sbb
ret
in
into
sub
add
and
stos
xor
xorb
stc
into
imul
out
out
jmp
lcall
lcall
mov
sub
ret
ret
add
cld
adc
nop
rclb
mov
daa
filds
xor
xor
cmpsl
mov
or
sub
mov
popf
xchg
aaa
sbbb
arpl
add
or
arpl
add
xlat
mov
add
std
xchg
inc
dec
xchg
test
xor
aas
fidivl
mov
aam
mov
or
popa
pushf
cmp
iret
mov
fsubrs
pop
lret
filds
xchg
fcomps
outsl
fsin
loopne
xchg
movl
and
stc
outsb
adc
and
cs
add
add
rolb
sbb
mov
mov
stc
jmp
push
jbe
push
pushf
pushf
pusha
lea
jmp
pushf
mov
movl
pushf
lea
jmp
pusha
pushf
pushf
movl
pushl
movl
pusha
pushl
push
pushf
lea
jmp
add
test
push
push
sub
cmp
stc
add
pushf
cmp
xor
bswap
inc
mov
pushl
mov
inc
movzbw
mov
pushf
mov
jmp
sbb
and
sub
out
arpl
and
cmp
ss
add
lds
dec
mov
out
mov
jns
inc
jne
mov
repz
jae
cmp
jbe
adc
ret
or
sub
mov
xchg
add
sub
cmp
dec
jo
and
pop
mov
cmpsb
std
das
mov
jle
out
std
pop
sub
push
in
xchg
cmp
rol
cwtl
out
sub
cmpsl
jge
inc
mov
inc
cmc
repz
xlat
pusha
sbb
int3
cmpsl
lods
dec
mov
sub
daa
shll
xchg
cmp
ficomps
filds
cmc
enter
pop
xor
xchg
lahf
jmp
jmp
movl
pusha
pusha
pushf
call
push
movl
call
push
mov
test
leave
xchg
xor
push
jp
in
jae
outsb
ja
sbb
popf
in
loopne
imul
mov
lock
sbb
lds
test
clc
lods
push
movsb
cmp
mov
fldl
dec
into
sub
repz
mov
cmc
incb
pop
mov
lret
push
loope
push
jge
sub
loope
neg
xchg
das
cmp
pop
ret
mov
xchg
cmpsl
cmp
fdivs
xchg
les
jno
dec
mov
push
hlt
call
sub
push
fidivrs
push
pusha
imul
test
int
ficoml
xor
stos
sbb
shlb
mov
in
inc
movsl
and
jl
call
call
jbe
call
les
adc
imul
aaa
mov
movsl
mov
loopne
les
in
dec
lret
loope
mov
inc
or
jmp
mov
sub
adc
popa
fsub
adc
push
insb
jg
mov
js
aam
fldenv
push
mov
xor
xor
sbb
jo
fldenv
lret
test
adc
mov
cld
xlat
dec
mov
das
sbb
fwait
cmp
sbb
inc
jo
xor
mov
mov
pop
nop
imul
pop
dec
shll
cmc
inc
not
repz
imul
lahf
loope
xchg
shll
cmpsb
xchg
andb
jmp
loopne
jle
das
in
fisubl
xchg
repnz
std
jmp
sbb
mov
cld
or
push
push
ret
jb
inc
imul
int
add
scas
push
movsb
arpl
lea
xchg
fdiv
popa
lods
dec
jmp
push
adc
push
sub
scas
lock
adcb
xchg
pop
push
imul
rcl
push
mov
or
cmpsl
ljmp
push
loopne
and
insb
dec
sub
out
xchg
add
xlat
fdivr
out
fbstp
adc
push
mov
add
mov
jns
mov
repz
out
mov
mov
sub
xor
imul
insb
repnz
scas
movsb
shrl
je
pop
xchg
jnp
lret
pop
icebp
mov
arpl
xchg
ret
mov
inc
and
ds
cmpsl
js
pushl
lea
jmp
fsub
pop
mov
outsb
ljmp
call
es
insb
or
inc
mov
xchg
scas
inc
ret
loope
pop
repnz
mov
call
in
push
sbb
xchg
icebp
mov
xor
or
je
push
mov
in
and
fbstp
cmp
mov
fcompl
push
cmp
test
jmp
loopne
or
inc
mov
adc
adc
mov
hlt
mov
adc
pusha
mov
xchg
mov
cli
pop
sbb
adc
dec
jle
push
aaa
cmp
daa
jnp
rolb
push
cld
rolb
mov
lods
decl
ja
mov
pop
out
mov
mov
push
mov
int
inc
ficoms
popa
mov
cmp
add
dec
adcb
add
dec
pop
pop
mov
addr16
out
cltd
dec
xchg
dec
inc
arpl
xor
push
cs
xchg
lret
sub
inc
pusha
xor
imul
inc
add
jmp
push
dec
push
push
out
cmpsb
pop
sbb
lret
ss
into
rclb
mov
fldt
aad
popa
dec
cmp
sti
jb
mull
orl
add
pusha
je
cmc
out
and
cmp
ret
cmpsb
icebp
and
sbb
pop
clc
int
push
mov
data16
jmp
loopne
and
push
xor
leave
data16
add
jge
jle
lds
int3
loop
pop
es
fcoms
fsub
arpl
fsubrs
push
xor
cwtl
cwtl
push
pusha
mov
rol
dec
mov
movsb
jge
mov
pop
mov
xor
ljmp
adc
jb
mov
xor
fiaddl
push
pusha
mov
push
mov
gs
jecxz
mov
shlb
push
jge
xchg
xor
pop
add
or
mov
sahf
and
pop
push
dec
js
adc
movsb
aam
mov
add
xchg
out
mov
ds
repz
cld
push
test
mov
testl
xchg
cmpsl
pop
mov
and
adc
xchg
jmp
push
mov
sub
js
push
pusha
mov
mov
cs
cmp
inc
pop
xor
mov
jmp
shr
adc
rcrl
cltd
pop
mov
adc
fwait
sbb
add
xchg
and
hlt
test
xchg
jmp
and
xchg
insl
sbbb
xchg
fdecstp
xchg
mov
add
cltd
pop
repnz
mov
nop
int
loopne,pn
loopne
adc
sub
push
test
jp
call
ret
add
cmp
jecxz
mov
mov
popf
ss
mov
lahf
mov
enter
int
inc
jae
sub
inc
pop
mov
sar
ret
std
mov
pop
lods
outsb
mov
push
stos
push
sbb
jge
jne
lods
test
xchg
dec
inc
ss
pusha
push
cltd
mov
mov
push
mov
popf
push
and
rorb
lods
lds
pop
mov
jne
xchg
sub
sbb
mov
in
jb
int3
sbb
dec
rolb
cmpl
sbb
mov
imul
in
in
and
movsb
cmp
push
jge
cmpsl
jb
or
mov
outsb
adc
mov
loop
add
fiadds
xor
movsl
inc
cmp
data16
call
push
push
int3
sbb
jg
push
pop
out
jge
sub
inc
push
int3
lret
lret
mov
aaa
push
mov
pop
push
xchg
cs
push
inc
daa
fcompl
mov
imul
mov
and
pop
pop
mov
test
les
loopne
out
jne
out
dec
fs
jno
push
mov
insb
shrl
iret
sub
push
fcmovnu
ja
push
movsb
mov
sbbl
repz
mov
push
ljmp
and
dec
leave
pop
lea
leave
pop
lea
and
fdivl
mov
imul
repnz
pusha
push
sbbb
je
stc
idivb
mov
push
aad
fists
inc
insb
pop
add
pop
pop
aam
pop
lcall
imul
fwait
ret
in
jb
addl
jg
xor
xchg
int3
pop
lcall
ficompl
dec
add
add
add
xchg
mov
mov
xchg
adc
shll
es
xchg
rol
test
ret
aad
pop
jb
jle
pop
orl
xchg
int
mov
repnz
icebp
dec
xchg
je
loop
iret
fimull
push
adc
adc
mov
arpl
or
jne
sbb
push
mov
ret
nop
inc
mov
cmpsb
cmp
mov
adc
and
int3
insb
inc
or
ret
adc
add
mov
mov
aam
out
mov
fnstsw
repnz
dec
push
pop
jo
push
push
outsl
out
jns
pop
lods
and
cmpsb
jns
pop
sub
pop
push
fsubs
mov
inc
mov
repz
cld
mov
push
mov
scas
mov
jbe
ja
dec
fdivrl
jle
imul
inc
xchg
movsb
add
ds
cmp
pop
adc
int3
jb
out
cmp
cmp
es
stc
xchg
pop
pop
rcrb
call
sbbb
lds
hlt
xchg
repnz
mov
aas
pop
cmp
or
fdivrs
clc
fldcw
inc
or
jb
rcrb
cmp
push
inc
jb
nop
cld
xor
jmp
cmpsb
pop
into
and
mov
pop
testl
xchg
mov
loop
ret
push
sbb
push
test
mov
out
xor
lahf
and
jmp
outsl
enter
arpl
outsl
pmaddwd
xchg
xchg
mov
out
shlb
jno
dec
pop
xchg
sub
insb
scas
pop
lahf
xor
mov
jae
in
or
xor
xchg
mov
daa
jo
mov
mov
pop
xchg
push
adc
gs
and
pop
movsl
iret
pushf
add
loope
in
in
rcrl
sbb
jmp
iret
pushf
add
or
in
cmp
les
ds
dec
jb
cwtl
mov
scas
lock
mov
decl
out
adc
adc
in
jg
int
add
xor
add
push
mov
xor
and
add
ja
mov
inc
std
ret
mov
sbb
dec
out
mov
jg
xor
sbb
cltd
pop
int3
cld
iret
movsl
enter
cli
push
xor
cld
out
xchg
mov
arpl
lahf
jno
ss
xor
iret
ss
xchg
dec
jecxz
lea
and
fwait
mov
std
lret
dec
jecxz
xchg
lahf
xchg
aad
sub
fidivs
mov
mov
scas
jnp
mov
and
or
int
lds
lret
gs
sub
add
jp
inc
xor
pop
sbb
sysexit
incb
int
dec
inc
daa
pop
into
push
cs
adc
xor
mov
not
pushf
movzbw
movsbw
movl
call
mov
jmp
jbe
xor
mov
and
add
lahf
sahf
je
and
mov
mov
sub
pop
repnz
jno
rorb
mov
adc
sub
in
mov
xorb
and
fsubs
cmp
xchg
lods
inc
sti
mov
movsb
clc
xchg
jo
cmp
jle
aad
mov
nop
xchg
icebp
rcr
shr
xor
sar
enter
sub
sbb
test
loope
add
inc
ja
mov
inc
fwait
iret
sbb
shll
incl
mov
leave
xor
add
addb
mov
pop
cs
cmpb
repnz
xor
call
sbb
scas
mov
test
push
fwait
stos
inc
sbb
jno
movsl
das
testb
jle
or
sbb
lcall
dec
mov
mov
out
cs
loope
jle
pop
mov
testl
cmp
sub
pop
adc
add
sub
subl
test
pop
mov
out
mov
mov
add
iret
push
push
push
pop
push
xchg
lods
push
jb
adc
push
lods
das
ljmp
testb
inc
fistps
push
test
xchg
call
jae
ljmp
outsl
das
inc
gs
xlat
mov
addl
push
jge
iret
adc
out
adc
mov
mov
loop
dec
movsl
mov
xchg
mov
stc
data16
sti
cmpsl
sub
test
int
addr16
aam
add
adc
stos
mov
ljmp
imul
cmpsl
xor
jns
data16
cs
mov
push
ret
xchg
add
or
xor
jecxz
mov
xchg
xchg
lods
repnz
mov
subl
stos
pop
ret
inc
add
mov
mov
stc
data16
lcall
pop
pop
cltd
int
adcl
mov
std
call
jmp
cmp
cmp
pushl
movl
pushf
movb
lea
je
rcr
aad
movsbl
mov
cmc
movl
cmc
pusha
pusha
bt
mov
push
test
pushl
call
dec
mov
pop
and
fs
jmp
cmp
pop
loopne
and
inc
inc
inc
pop
cwtl
dec
lret
push
roll
mov
jl
mov
cwtl
sbb
test
ret
jl
test
outsb
dec
mov
mov
xchg
dec
xchg
mov
aaa
js
mov
or
test
stos
aam
jge
shrb
inc
xchg
pop
inc
inc
popa
mov
adc
xor
xchg
adc
jb
pusha
cmp
hlt
pop
pusha
rorb
in
in
sub
repnz
xor
push
cmp
fbstp
rorl
push
xor
sbb
gs
scas
mov
mov
xor
mov
in
jl
imul
aaa
push
mov
sub
js
stc
mov
add
jg
cltd
sbb
pop
mov
fcompl
mov
pop
iret
jmp
pop
jne
imul
mov
shl
inc
popa
push
subl
inc
mov
sub
stc
pop
push
mov
dec
xor
push
or
je
xor
das
insl
fisubrs
notl
cmpsb
jp
xchg
shl
jecxz
mov
mov
movsb
mov
inc
movsb
loop
inc
sbb
cmc
arpl
inc
arpl
bound
test
shll
cmp
test
jne
sbb
xchg
xchg
loop
xchg
les
xor
cli
std
out
pop
cmp
insl
push
insb
cmpsl
dec
lods
push
clc
lahf
incb
sbb
test
mov
jae
orb
nop
aaa
in
gs
pop
dec
sbb
xor
dec
cltd
and
add
out
push
negb
dec
sbb
pusha
jnp
addl
push
test
dec
or
scas
fisttpl
rcrl
and
lock
ds
repnz
cmc
adc
dec
mov
mov
stos
push
mov
int3
sbb
dec
popf
call
cld
popa
sbb
pop
mov
push
call
inc
mov
movsl
push
imul
mov
outsl
loop
pop
movsb
subb
inc
push
lahf
jg
std
xchg
mov
push
jae
xchg
mov
sub
sub
sbb
test
and
xchg
out
sbb
cmpsl
iret
sub
jl
sbb
push
aaa
fiaddl
sbb
call
lock
lcall
mov
fdivrl
xor
nop
push
outsl
and
cli
loopne
iret
lds
inc
lds
jp
mov
and
cmp
stc
fisubs
sub
xlat
push
adc
rcll
mov
mov
adc
adc
jns
inc
aam
movsb
jnp
cmp
inc
fildl
mov
insl
ss
mov
sbb
int3
loop
pop
mov
ror
enter
cmp
xchg
push
outsl
insb
cmpsl
inc
sbb
lret
pop
mov
cmp
mov
push
add
lods
leave
push
loopne
xor
imulb
inc
jno
or
mov
jae
bound
cmp
fldcw
mov
xchg
cmpsl
pop
cmp
arpl
jmp
addr16
add
lahf
outsb
push
stos
cmovg
js
insb
movsb
test
or
fisubs
out
test
inc
shll
cmp
pop
ficompl
jmp
ss
mov
xor
sbb
test
sbb
in
int
jne
sti
lods
dec
sub
xor
or
aaa
out
nop
shll
mov
mov
push
dec
jmp
mov
ljmp
stos
ss
lcall
add
xchg
shrb
pop
mulb
pop
mov
dec
in
push
mov
int3
cmp
into
add
xchg
out
adc
xchg
in
stos
daa
mov
jno
loopne
mov
andb
fstps
scas
pop
aad
pop
movsb
les
dec
or
ret
push
push
mov
jle
sbb
dec
or
sub
sub
add
mov
jle
sahf
fdivr
cld
test
mov
mov
shll
hlt
push
adc
insl
cwtl
sbb
outsb
pop
sbb
pop
insb
int3
push
lock
das
js
cmp
incl
test
push
loopne
fldcw
xor
and
add
pop
aad
out
xchg
mov
cld
sub
sbb
sbb
ret
mov
test
dec
jp
mov
add
mov
mov
popf
sub
ljmp
push
lahf
add
mov
push
or
movsl
ja
or
cmp
mov
lret
loopne
xchg
add
jae
movsb
dec
inc
xchg
repnz
cmp
and
and
lock
dec
sub
scas
add
mov
cld
inc
mov
push
cld
cltd
ljmp
es
push
xchg
cmp
inc
clc
bound
push
sbb
loope
popf
mov
adc
inc
dec
out
out
adc
cld
js
mov
ljmp
psrad
adc
jno
xor
movsb
out
mov
out
lret
and
jecxz
mov
outsl
jg
dec
popf
sti
loopne
cmp
push
mov
fisubs
jecxz
xor
std
popf
sti
out
push
mov
mov
rol
and
push
push
sub
dec
scas
add
shlb
jmp
sub
sub
lcall
scas
loope
fldl
pop
clc
xchg
or
scas
arpl
mov
adc
jl
xor
fwait
neg
add
mov
push
pusha
mov
sbb
repnz
xchg
or
inc
cli
xor
and
popa
rclb
fistpl
sti
imul
or
pop
adc
mov
sarl
in
fldl
jge
xchg
or
and
inc
rcll
out
xchg
dec
xchg
push
imul
ss
nop
push
ret
pop
dec
lcall
ss
ljmp
xchg
les
aas
testl
loopne
insl
es
mov
icebp
fs
mov
mov
push
ja
int
enter
loop
push
daa
push
mov
jne
ss
rcrb
xchg
jnp
dec
rcrl
into
jb
or
mov
in
or
cmp
into
iret
and
cmpsb
pushf
sbb
pusha
mov
pop
jg
data16
jg
stc
push
outsl
aam
jecxz
and
lock
test
movsb
add
repnz
call
inc
and
mov
pushf
and
or
ja
push
adc
xchg
mov
pop
nop
push
fistpl
cltd
pop
jle
stos
pop
inc
insl
inc
and
xor
dec
xchg
jb
lods
or
jge
das
inc
pop
xor
sbb
fistpl
cltd
jb
add
push
cs
movb
sub
ret
jno
in
scas
mov
inc
scas
dec
sarb
inc
fsubrl
xlat
icebp
adcb
mov
loopne
fnstcw
fsub
into
and
adc
adc
js
push
add
pusha
cli
xor
mov
aam
cmpsl
les
leave
or
lcall
gs
gs
hlt
dec
loop
repz
rorl
sbb
adc
pop
sbb
sbb
inc
je
xchg
ret
jmp
shr
fiadds
lds
int3
sbb
jmp
mov
xor
jge
ss
stos
mov
dec
xchg
ljmp
movsl
js
jne
xor
jp
add
jno
into
paddw
jle
mov
xorb
xchg
notl
add
out
push
pop
shr
mov
fnstenv
ucomiss
icebp
lea
pop
sti
fmuls
loop
ljmp
cs
mov
lret
imul
mov
fdivs
xor
repz
aaa
push
lods
out
pop
sti
jne
loope
cmp
xchg
scas
sub
aaa
and
fdivrl
mov
cmp
mov
xchg
lods
hlt
or
out
call
add
push
adc
sbb
push
pop
dec
stc
cmc
aad
sbb
rorb
out
movsb
xor
sbb
sub
adcl
xchg
mov
jne
dec
jns
xor
xchg
dec
ljmp
sub
lods
xor
mov
repnz
push
jne
adc
nop
xor
dec
dec
push
inc
clc
data16
push
fsts
cld
sbb
rcrl
rcr
pop
mov
adc
pop
test
bound
cld
sub
aam
jnp
sub
push
xlat
mov
ret
fcoml
adc
push
lock
xchg
lods
inc
in
dec
ret
mov
sbb
xchg
sti
in
jns
push
mov
and
jbe
adc
xchg
lods
addr16
aam
test
fisttps
push
dec
mov
xchg
xor
pushf
pushf
movl
pushf
push
pusha
lea
jmp
insl
sub
sub
jecxz
jg
test
xor
xchg
pop
stos
stos
negl
add
mov
lods
push
push
sbb
cltd
mov
and
pop
pop
repz
lods
inc
mov
adc
pop
mov
pop
pop
mov
xlat
fisubs
and
jno
mov
mov
ljmp
sbb
mov
mov
stos
mov
inc
ffree
test
cmp
pop
gs
das
pop
fdivrl
sub
jb
push
out
mov
push
call
adc
inc
xchg
sbb
mov
ds
adc
sbb
ljmp
jl
mov
push
jge
sub
push
fistpll
js
push
jmp
repnz
sub
dec
inc
loop
scas
push
nop
loopne
jg
outsl
cli
sbb
lahf
faddl
out
xchg
fnstsw
int
xor
jnp
sbb
push
add
imul
out
pop
or
hlt
inc
cmpsl
and
ret
call
pop
out
in
fnstenv
nop
jg
add
push
add
pop
inc
aaa
pop
sbb
mov
ljmp
cmp
xchg
push
dec
sbb
sub
cli
push
xchg
pop
mov
inc
sbb
loope
inc
clc
xchg
lods
inc
outsl
dec
mov
arpl
mov
or
add
cmpb
inc
js
out
mov
notb
or
test
mov
sbb
sub
repnz
push
ja
mov
mov
insb
mov
jb
insl
out
test
cmpsb
enter
xorb
jnp
push
cwtl
sahf
pusha
dec
xor
cmc
jl
dec
cmp
push
ds
sahf
cltd
dec
or
xor
pushf
movl
pusha
call
movl
push
push
mov
lea
jmp
jg
pusha
movl
pusha
jmp
jmp
pop
repz
adc
mov
arpl
pop
dec
stos
inc
cmpsb
inc
sbb
push
and
push
adc
je
mov
pop
dec
xlat
repnz
cmp
lret
inc
mov
pushf
pop
push
mov
fwait
xchg
out
into
out
repnz
xor
or
ja
sbb
hlt
lcall
jl
lods
test
fs
subl
test
stc
pop
inc
mov
mov
cmpsb
imul
in
xor
add
push
mov
pop
mov
enter
inc
xchg
or
repz
sahf
in
insb
mov
xchg
scas
mov
das
lcall
cli
jo
fdiv
mov
sbb
cmp
out
out
adc
xlat
scas
js
sbb
inc
mov
inc
ror
into
xchg
push
aas
sqrtps
aas
cmp
ja
mov
stc
cmp
cmp
push
daa
add
or
mov
mov
and
rclb
xor
mov
fisubrs
loopne
aas
mov
sub
aam
lcall
mov
leave
dec
gs
mov
cmpb
push
into
mov
xchg
inc
fnstenv
test
aam
xchg
jnp
push
shll
fbstp
jo
mov
add
shl
inc
fisubl
mov
loop
or
xor
out
shrb
inc
lods
int
test
mov
hlt
mov
add
mov
adc
add
pop
repz
nop
mov
idivb
and
dec
mov
into
cmpsb
cli
dec
xchg
and
sub
xchg
mov
cmp
cmp
cwtl
cld
ljmp
jnp
pop
shrl
insb
add
ret
in
or
bound
stos
pop
outsl
gs
fistl
in
ss
add
test
pusha
mov
cmc
pop
mov
pushf
hlt
int3
repz
loop
sub
and
and
es
scas
push
jno
push
scas
bound
dec
fidivrs
stc
cwtl
inc
or
adc
mov
xor
pop
or
lds
xchg
int3
mov
call
test
ret
mov
in
ret
test
mov
xor
inc
and
clc
adc
arpl
int3
xchg
mov
leave
cmpsl
lcall
or
cltd
lret
ret
out
lds
ljmp
push
insb
or
out
mov
les
lret
jmp
in
add
xor
in
push
imul
push
xor
test
fildll
aas
mov
movsl
cmp
sbb
rclb
insl
push
scas
lods
lock
or
movsl
push
or
or
pop
das
or
lods
dec
mov
movsb
mov
scas
jg
pop
push
cld
sbb
aam
pop
sub
dec
sub
pop
dec
dec
sahf
push
in
inc
scas
dec
jmp
jg
fcompl
xchg
sahf
and
dec
mov
jae
int
inc
or
lahf
scas
dec
cli
dec
mov
adc
dec
insl
push
aam
jb
push
cmp
jmp
xchg
test
adc
pop
push
add
mov
pop
and
push
insb
xor
cwtl
imul
jecxz
xchg
arpl
push
in
ret
sbb
rcll
lods
leave
dec
das
inc
fwait
pushf
sbb
imul
lret
outsb
int3
aas
dec
stos
leave
dec
das
andb
cmpsl
inc
cld
xchg
daa
pop
repnz
or
testb
xor
rep
les
jge
mov
mov
pmaddwd
inc
or
jbe
push
xchg
jb
sub
jg
inc
call
sub
jmp
imul
add
clc
out
mov
in
push
cs
and
or
ss
push
mov
pop
dec
xchg
out
insb
test
xchg
cmpsl
lret
daa
ja
ljmp
sub
iret
rcl
out
jmp
sbb
daa
dec
inc
test
repnz
lahf
sbb
pushf
ret
mov
xchg
or
add
push
scas
cmp
mov
pop
std
pop
dec
loop
repnz
mov
shrl
in
mov
xchg
aas
add
ss
cli
lea
stc
mov
lea
lock
mov
xchg
fsubrp
mov
push
shrl
prefetch
lods
pop
hlt
adc
aaa
add
sub
or
inc
stc
mov
sub
mov
or
test
pop
push
sbb
rol
xchg
call
sub
xchg
loop
xchg
xor
mov
jne
loope
call
dec
jne
aam
mov
lock
addb
mov
inc
into
jg
sub
stos
mov
je
fwait
popa
fiaddl
xor
movsl
sub
sti
fcmovnbe
jl
push
repnz
mov
sbb
xchg
cmpsb
inc
lahf
jecxz
dec
and
pushf
call
fwait
cmpsb
pop
inc
fimuls
sub
mov
fmul
in
pusha
cli
xor
call
jae
jo
dec
test
mov
mov
cmp
sub
stos
fbld
sbb
xchg
ds
adc
andb
mov
mov
mov
sbb
fwait
hlt
sbb
mov
idivl
filds
in
or
or
fisubs
inc
pop
in
mov
or
dec
js
fs
mov
and
add
xchg
lds
lahf
lret
xor
xlat
inc
pop
fadds
fidivrl
lret
js
cmc
lods
or
jmp
dec
jmp
or
push
icebp
xchg
xorl
repnz
stos
dec
outsb
jae
mov
mov
jp
out
sub
and
cmp
or
jne
testb
adc
aas
sub
and
pushf
pop
dec
push
pop
or
addr16
push
add
movsl
xor
adc
ret
mov
dec
stos
popa
sahf
lock
pop
and
shr
jge
add
fldl
or
sbb
out
outsl
shr
jnp
xor
dec
mov
ds
sbb
sti
and
or
mov
push
pop
pop
cli
filds
xchg
std
cld
pop
repnz
jnp
pop
pop
dec
mov
mov
push
xchg
push
fsubl
clc
mov
popf
out
mov
stos
mov
sbb
stc
rcrl
push
in
and
or
cmp
adc
jp
outsl
ror
and
jp
into
sub
sub
mov
cmc
or
jmp
lods
jns
int3
es
push
pop
jno
pop
push
pop
int
pop
dec
fmull
pop
mov
xor
ret
dec
mov
data16
pop
mov
jae
xor
testb
out
lahf
xor
mov
aas
loopne
pusha
mov
cmpsl
xchg
out
cmpsb
mov
cli
cmpsb
mov
fsubs
jmp
pop
xchg
and
pop
mov
in
mov
aas
fwait
stc
shrl
hlt
into
clc
icebp
hlt
cmpsb
enter
push
outsb
leave
fidivl
icebp
cmpsb
jge
or
xor
in
lods
add
push
daa
pop
adc
ja
popf
adc
ja
cmp
sbb
outsb
and
pushf
lds
sbb
dec
ja
cmp
sbb
sar
jp
cld
or
mov
ja
add
cmpsl
lahf
mov
mov
lods
repz
js
dec
aaa
xor
stos
std
shl
data16
jmp
inc
add
jl
inc
es
stos
pop
fsubrl
jo
fldl
call
stc
jmp
stc
stos
fs
cltd
cmpsl
leave
mov
push
insb
sub
mov
mov
fstps
mov
sarb
adc
add
sub
lock
jns
mov
std
outsb
or
shl
mov
xchg
sub
inc
add
cmp
push
mov
arpl
nop
cs
fldl
inc
dec
sbb
inc
sub
pop
sti
adc
xor
pop
sub
pop
sub
and
inc
dec
xlat
stos
movsb
outsb
xchg
or
loop
mov
mov
popl
fsubrl
adc
in
loope
test
lret
cmp
mov
ficomps
xchg
pop
jg
outsl
cmp
jns
sub
sti
outsl
nop
sub
mov
push
cmp
push
sarb
add
pop
and
rcll
and
in
mov
inc
loop
int
mov
cltd
xchg
repz
push
cmp
cmp
sbbb
fisttpll
js
mov
xchg
hlt
mov
mov
jno
or
data16
loop
push
and
les
imul
push
mov
mov
xor
mov
pop
fwait
out
lret
jbe
sub
cwtl
sbb
xchg
mov
adc
mov
mov
add
add
mov
outsb
shlb
rorl
mov
xchg
mov
fcmovnb
cmp
movl
jg
stos
fadd
adc
ljmp
dec
call
dec
and
jnp
dec
mov
lea
lock
stos
and
fildl
stc
lods
xor
insl
in
bound
stos
jle
pop
call
arpl
mov
imul
push
imul
std
ljmp
shr
jle
inc
fisubs
sub
xor
adc
jmp
incb
pop
gs
push
inc
jmp
adc
adc
nop
aad
and
inc
cltd
mov
movsb
ret
pop
into
sub
rol
jne
xchg
das
mov
sti
cmp
mov
shlb
adc
sbbb
xchg
imul
ror
cmp
rcrl
scas
or
ds
arpl
jg
fwait
stc
fsubrl
xchg
inc
cltd
std
push
xchg
nop
adcl
xchg
dec
pop
into
jo
std
sbb
popf
loop
shrb
fisttpll
cmp
inc
aaa
sahf
xor
out
jl
jns
lret
shlb
push
jbe
jns
inc
cmpb
neg
lret
mov
test
mov
or
or
ret
adc
xchg
jg
jne
cs
pop
imul
pop
sub
insb
inc
add
sbb
mov
mov
mov
mov
dec
pop
cmc
or
insl
subl
jae
mov
or
filds
add
addr16
or
jecxz
aam
push
xchg
push
daa
test
mov
mov
imul
dec
jae
in
mov
test
cld
fs
or
add
stc
ss
jb
arpl
call
inc
insl
fcomps
stos
int
jae
xor
mov
sti
test
cmpsl
cmp
jae
inc
jmp
int3
shl
push
test
dec
in
cmp
cld
xchg
and
sbb
push
leave
or
fcomps
sbb
sbb
xchg
inc
sbb
mov
repnz
jb
sbb
cmc
dec
adc
inc
inc
arpl
add
xchg
test
scas
scas
or
mov
adcl
pop
int
pop
sub
sarb
lcall
jg
movsl
push
aaa
std
movups
ss
xchg
popf
and
fldt
add
test
pop
mov
flds
sub
mov
movsb
or
cmpb
sub
inc
lcall
fs
call
pop
xchg
xor
orl
xchg
cmc
fdivl
inc
xchg
ret
mov
pop
arpl
pop
add
or
mov
in
mov
mov
mov
cld
repz
mov
inc
outsb
mov
pop
repnz
push
pop
testl
mov
cli
and
pop
pminsw
loop
int3
or
je
int3
pop
test
ss
lretw
jne
lock
mov
inc
gs
dec
fsubs
out
popa
cmp
call
jmp
pop
inc
fisttps
icebp
or
fildll
sub
sub
add
xchg
imul
and
mov
jnp
sbb
push
nop
sbbl
sti
fistl
repz
mov
sub
ret
mov
bound
aaa
and
scas
jne
xchg
aad
sub
insb
mov
lret
sbb
mov
cs
add
lods
add
dec
pop
xor
or
inc
adc
in
rolb
or
lret
mov
enter
enter
jle
inc
jbe
add
fcomps
lcall
dec
stos
lahf
je
dec
xchg
daa
int3
fs
movsl
cld
stos
call
jae
sbb
lds
jb
addr16
dec
mov
sbb
and
sbb
or
sahf
popa
addr16
jb
popf
std
lds
dec
and
mov
test
mov
in
mov
jno
xor
mov
mov
test
jno
mov
fnstenv
dec
xchg
sub
rclb
xchg
mov
inc
mov
and
outsl
cmp
jae
sahf
test
mov
jne
adc
popa
pop
push
sbb
loop
leave
psubusb
mov
pusha
mov
mov
aad
and
push
mov
mov
fs
sub
shll
movsl
sub
int3
call
psubsw
mov
ret
insl
xor
or
mov
fdivs
xchg
pushf
das
mov
bound
test
dec
add
leave
mov
xor
clc
sub
cmc
mov
call
shll
cli
ret
or
test
dec
sahf
or
in
inc
jo
push
or
push
add
or
sbbb
cli
shl
lret
outsb
ret
mov
sub
fdivrp
pop
or
ja
insl
ds
xchg
por
pop
mov
aad
mov
xchg
fsubl
jecxz
sti
mov
mov
adc
xchg
call
xchg
and
inc
sti
insb
das
shlb
ljmp
int3
int
add
xor
mov
push
test
stos
mov
imul
test
sbbb
xor
call
in
xor
nop
fdivs
in
out
scas
test
mov
or
sahf
std
dec
into
xor
xor
and
inc
pop
xchg
popa
adcb
xchg
or
sar
js
ret
testb
nop
push
ljmp
int
mov
lret
xchg
fwait
sub
push
test
xlat
inc
outsb
cltd
cmp
arpl
xor
mov
mov
movl
pushf
pushl
popl
pushf
pushf
pushl
ret
bt
shl
stc
mov
call
add
sub
sub
icebp
imul
mov
cmp
inc
adc
outsl
icebp
stc
jg
adc
dec
bound
movsl
ljmp
into
ja
or
sti
fsts
aas
xchg
inc
adc
xchg
dec
cmc
inc
addr16
bound
shll
repnz
imul
stos
aam
sbbb
mov
aam
sub
hlt
in
fbstp
outsb
out
arpl
out
es
push
mov
les
add
dec
in
xlat
and
mov
and
insb
jge
lods
sbb
cmc
sbb
in
sbb
sbb
mov
mov
mov
andb
dec
into
sbb
icebp
dec
xor
mov
movl
pusha
pushf
call
xchg
int3
mov
pop
jmp
add
jp
jae
add
jge
xor
mov
add
jae
xchg
fistps
pop
mov
fidivrl
lds
mov
test
mov
imul
mov
in
or
xchg
lods
mov
add
sbb
inc
mov
and
mov
out
xchg
or
or
mov
dec
push
cwtl
xor
pop
out
inc
mov
cmp
clc
add
in
iret
mov
test
lcall
fnstenv
mov
cmc
stc
mov
ja,pn
xchg
dec
sbb
int
sub
xchg
sbb
pop
lret
sub
jg
lea
and
stos
rol
out
nopl
mov
jl
cmc
sbb
xchg
imul
xchg
cltd
push
outsl
pop
loopne
lahf
xor
dec
push
xor
jl
mov
cwtl
in
mov
xor
ja
cld
ljmp
jno
mov
cltd
mov
xlat
xorl
jl
dec
es
fldcw
loopne
push
lret
stos
movsl
xor
mov
xor
mov
cs
idiv
cld
repz
fistps
cwtl
pop
mov
cmpsb
xor
push
fimuls
icebp
inc
subb
cwtl
lods
or
ljmp
shr
add
and
or
pushf
lea
jmp
call
call
pop
aad
jno
lock
sbb
js
mov
outsb
les
mov
inc
pop
popl
jmp
call
aad
ret
out
mov
data16
sbb
sti
ss
pop
popl
jmp
and
xor
push
sub
mov
push
or
sbb
pop
mov
adcb
sub
std
pop
mov
in
jbe
bound
xor
popl
xor
jmp
or
cwtl
rcll
imul
pop
cmc
rcrl
cltd
das
and
imul
mov
lock
adc
xchg
jge
rorl
rclb
cmp
cmp
int3
xchg
jns
test
dec
jne
clc
mov
mov
or
sbbl
sbb
push
enter
decl
fstl
aad
pop
cmpsl
outsl
test
andl
sub
imul
mov
sbb
jo
bound
jmp
cmp
inc
rol
stc
aad
inc
pop
mov
popf
mov
and
insb
or
shlb
icebp
jno
das
andb
sbb
es
test
outsb
fs
dec
add
adc
jno
popf
xchg
fs
adc
outsb
je
test
test
in
jb
imul
mov
push
or
and
cmpsl
in
imulb
pop
cmp
enter
dec
insb
mov
pushf
xchg
jp
or
je
cltd
popf
in
fisttpll
bnd
ret
push
sbb
mov
inc
and
das
and
lds
pop
cld
sub
pop
imul
roll
out
cmp
pop
cmp
loope
repnz
jae
push
nop
inc
leave
rcll
and
xor
std
pop
icebp
jnp
jnp
test
fnstsw
and
dec
cmpsl
movb
fisubl
outsl
xor
cmp
inc
aad
decl
mov
es
dec
pop
ja
mov
add
adc
jle
iret
jmp
icebp
or
lret
pop
mov
mov
cmpsb
cmpsl
imull
ja
cmp
jmp
xor
cltd
cmp
cmp
or
insl
dec
subl
call
scas
in
jmp
cmp
push
rcll
repz
adc
dec
mov
xor
lods
xor
rol
xchg
lods
sub
repnz
mov
pop
pop
sti
icebp
sub
mov
popa
xor
sbb
sub
movsl
inc
pop
dec
insb
mov
pop
js
popf
test
stos
sbb
pop
push
ficomps
jp
jp
mov
mov
mov
or
add
mov
in
pop
ds
xor
ds
mov
lret
idivl
leave
das
enter
icebp
inc
aas
adc
jl
cmc
fstp
loope
in
mov
fsubl
mov
sub
enter
inc
insl
cmp
lods
enter
sbb
ficomps
shr
pop
out
sbb
ficomps
fsubp
aas
or
xchg
jne
pop
mov
mov
mov
jbe
sbb
sbb
repz
call
fidivrs
testb
pop
out
or
and
mov
aad
ljmp
popa
pop
xor
mov
cmpsb
hlt
sbb
lods
inc
xchg
jge
inc
sub
mov
lea
mov
test
jnp
sub
xchg
outsb
pop
push
xchg
lods
arpl
inc
cmp
rcll
dec
sarl
cmp
notb
mov
cld
clc
cwtl
sbb
cmp
js
dec
lret
cmp
stos
mov
out
arpl
in
or
push
stc
and
bound
shr
in
mov
lret
ss
pop
enter
out
jae
aas
in
arpl
adc
cmp
sub
push
or
jo
or
and
mov
imul
shrb
mov
jmp
ret
adc
or
fnsave
inc
and
cmpsl
orb
sub
cwtl
repz
setp
outsl
jmp
pop
sbb
repz
fcomi
sbb
xor
enter
cmc
sub
enter
pop
dec
pop
dec
mov
add
cmpsl
ret
push
fimuls
imul
push
scas
xor
popf
cld
push
xchg
fisubrs
cltd
mov
mov
lret
push
xchg
xor
push
inc
cmc
cmpsb
mov
fucomp
ret
test
stos
movsl
cmpsl
and
shrb
or
xor
and
scas
cli
outsl
pusha
movb
pusha
push
movl
mov
pushl
pushf
lea
jmp
lea
jbe
jmp
aad
jno
or
xor
mov
jecxz
fidivs
inc
jbe
push
out
sarl
xor
iret
out
mov
bound
dec
and
out
test
decb
xchg
adc
mov
popf
repz
sbb
sbb
pushf
jecxz
mov
insl
iret
repz
divb
repnz
hlt
inc
cld
push
push
addb
or
and
and
mov
mov
add
sbb
add
ret
mov
sub
outsb
imul
inc
in
rcrb
dec
adc
jb
outsb
pop
bound
cmpsb
sub
xor
push
int
mov
mov
daa
xchg
sahf
mov
loope
sub
rclb
sbb
lds
pop
pop
movsb
jecxz
shlb
lret
in
cmp
lret
fidivrl
or
shl
mov
into
sbb
jne
lods
ret
aad
jge
cmp
popa
mov
push
fwait
mov
je
mov
jns
adc
xlat
pop
lods
push
cmp
inc
jp
mov
push
or
sbb
xchg
shll
mov
pop
jo
add
inc
shl
add
dec
in
adc
mov
fadd
jb
outsl
std
insl
adc
mov
jge
mov
push
mov
mov
les
mov
xlat
iret
dec
in
inc
gs
rorb
mov
sbb
lock
push
iret
gs
fldcw
xchg
rolb
nop
insl
out
push
push
and
adc
out
pushf
ja
jl
ljmp
mov
ss
loop
fs
das
rcrb
jecxz
mov
xchg
push
add
mov
clc
mov
lock
mov
movsl
and
xchg
push
fsubs
cli
sub
inc
daa
jae
pop
mov
push
inc
cmp
sub
or
jno
cli
push
xor
call
push
lea
jnp
push
movl
call
leave
pusha
mov
aaa
lret
add
jns
cld
xchg
xor
jb
movsl
movsb
or
repz
inc
mov
pop
ret
imul
jb
pusha
movsb
aaa
mov
arpl
jnp
and
fdivl
repnz
dec
pop
fs
sbb
cltd
pop
mov
add
mov
inc
insb
adc
add
push
arpl
pop
sbb
cld
mov
fdivrs
lods
pop
jo
pop
cmc
sub
scas
mov
pushf
add
push
nop
add
and
mov
lods
stos
xor
jg
int
xor
inc
cmp
scas
jbe
inc
mov
aad
lds
push
xor
test
faddl
cmp
je
sub
mov
mov
xor
cmc
mov
pop
jns
cmp
cmp
jae
sbb
xor
add
push
pop
loop
pop
lcall
push
lods
std
pop
pop
jp
lods
jmp
mov
jp
hlt
jle
mov
jo
mov
gs
push
jb
loopne
adc
test
int3
and
xor
mov
mov
jmp
outsw
and
sub
xchg
jnp
repz
pop
inc
push
mov
mov
lods
cs
call
stos
xor
push
pusha
movl
push
push
pushf
lea
jmp
adc
mov
or
test
xchg
or
adc
push
jl
pushf
daa
mov
nop
sbb
pusha
movsb
lret
adc
sub
xor
jno
sub
xor
ss
and
jnp
sarl
push
jge
jmp
fcomps
xchg
imul
aad
pushf
jl
out
divb
imul
xchg
lds
lret
lods
test
incb
push
xchg
stos
mov
and
fildll
test
mov
add
jle
jge
jb
data16
fcmovne
mov
rcrb
push
movsb
aam
push
imul
jmp
dec
jmp
lea
inc
fldenv
mov
jmp
movsl
sbb
out
aaa
call
test
sub
pop
xchg
jecxz
xor
push
loop
cmpsl
leave
hlt
push
test
xchg
in
xchg
mov
push
fistpl
call
push
ss
lea
ljmp
push
pop
jae
mov
xchg
cwtl
xor
push
cs
add
sti
jne
inc
shl
xchg
hlt
inc
mov
xchg
fcos
stos
mov
enter
adc
adc
xorb
jb
push
mov
repz
or
pop
mov
push
nop
test
fistpll
outsl
lds
mov
stos
lahf
sub
imul
mov
or
sbb
loopne
cs
dec
mov
pushf
inc
push
sub
subb
sbb
pop
push
out
or
arpl
lahf
jl
sbb
adc
sbb
and
sub
pushf
and
das
xchg
sbb
insb
jp
call
movsl
movsb
out
into
aaa
test
mov
mov
push
int3
jmp
add
out
inc
sbb
jle
adc
cmpb
arpl
cwtl
lahf
mov
aas
aas
out
pop
rorl
xchg
addb
sbb
mov
pop
xor
rcll
xor
popa
pop
das
xchg
aas
cmp
dec
nop
int
jno
sbb
stc
push
popa
push
arpl
pop
out
pop
mov
xor
mov
push
cltd
mov
mov
out
mov
xor
aam
ja
sbb
xchg
lcall
mov
scas
xor
pushf
movl
pusha
movl
pushl
mov
push
push
lea
jmp
lea
je
mov
push
movl
lea
lea
pusha
mov
bswap
mov
push
pushf
mov
jmp
popa
out
mov
outsb
out
filds
fmull
jecxz
push
cli
mov
add
mov
adc
xchg
in
mov
adc
popl
sar
enter
rolb
add
or
sub
sarl
cmc
sbb
inc
out
cmpsb
cli
pusha
loop
repnz
dec
jb
es
scas
dec
mov
mov
rclb
push
out
fwait
dec
push
sub
ret
jmp
mov
mov
adc
mov
xor
adc
lock
lods
inc
sbb
push
jb
xchg
xchg
rclb
pusha
and
and
push
pop
mull
push
and
in
inc
lods
jb
xor
and
jg
and
xor
fwait
mov
jg
shrl
lret
cmp
cwtl
cmp
mov
push
mov
or
das
sti
push
cmpsb
aaa
sub
cwtl
xor
pop
jecxz
movsl
mov
dec
or
insb
xor
jg
sti
fucom
inc
jmp
jnp
inc
mov
sti
aam
pop
mov
int3
aad
pop
inc
or
nop
push
arpl
jne
mov
cmp
insl
jbe
stos
gs
jae
nop
aaa
popf
mov
jo
inc
call
push
enter
ja
cmp
inc
out
adc
dec
jb
or
cmp
sbb
xor
sti
out
xchg
mov
loop
xlat
pop
repz
nop
or
insl
dec
movsl
test
mov
pusha
pop
pop
add
cltd
into
addr16
fucomip
es
imul
loope
sbb
dec
push
je
pusha
sahf
xchg
push
icebp
sahf
jb
leave
push
rep
jge
dec
aas
fwait
cmp
es
dec
cltd
pusha
popf
scas
in
mov
push
ljmpw
jnp
dec
adc
and
sub
lret
in
jmp
in
xor
push
jp
pop
ljmp
or
lea
jne
das
mov
sub
dec
into
iret
outsb
sbb
pop
lea
in
pop
push
repz
pop
mov
adc
in
xlat
int
int
js
mov
test
mov
mov
loop
mov
pop
xor
insl
xlat
or
xor
xchg
popa
jl
xor
add
xor
inc
adc
daa
adc
jo
push
jnp
inc
subl
mov
push
xlat
pop
out
ljmp
adcb
sub
mov
add
add
cmp
or
sub
sbbb
or
push
loopne
xchg
mov
les
push
jge
insl
stos
sbb
cld
and
push
in
int3
clc
push
and
pop
int3
mov
pop
int
cmp
xor
mov
push
push
cmc
mov
hlt
fiadds
xor
jno
pop
jo
mov
push
repz
sbb
adc
or
in
cmp
xlat
add
adc
and
mov
xor
inc
sub
push
popa
cmp
stos
pop
add
ja
push
icebp
adc
jmp
jle
dec
sbb
addr16
in
mov
in
pop
lods
inc
mov
mov
fcomps
daa
lods
pop
repz
push
jne
hlt
sbb
lret
xor
jb
lods
jmp
mov
mov
mov
mov
cmp
les
mov
lods
mov
test
test
ljmp
mov
mov
inc
pop
icebp
fiadds
ja
jo
pop
dec
jae
jae
pop
jmp
xor
xchg
mov
xor
or
mov
jge
and
push
xchg
xlat
jns
ljmp
inc
in
xor
adc
cwtl
mov
js
jbe
pop
lret
stos
add
test
cwtl
cli
pop
xor
in
jl
fists
leave
cmp
jl
mov
or
xchg
sub
or
arpl
sbb
mov
sub
inc
mov
lcall
pop
add
mov
add
aaa
addr16
or
aas
mov
mov
cmp
xchg
xchg
in
out
pop
pop
sbb
and
repnz
fiadds
add
mov
popf
xchg
enter
lcall
popa
sub
or
sarb
std
imul
jmp
mov
or
jnp
outsl
fs
pop
xor
dec
in
pop
cmp
dec
fs
dec
sbb
jp
push
les
sbb
or
pushf
jmp
mov
mov
shr
cmp
iret
leave
push
lret
cmc
adc
mov
das
aas
arpl
stos
mov
xchg
mov
lahf
loope
mov
dec
test
add
mov
loop
push
xchg
sbb
inc
out
js
mov
xor
mov
pop
jb
nop
mov
mov
fdivs
xchg
xchg
xlat
andl
inc
mov
mov
outsl
jns
xchg
xchg
stc
add
rcr
mov
shr
shr
not
mov
clc
cmp
movzbl
neg
lea
add
add
mov
cmp
cmc
call
fs
cs
sub
mov
bound
push
xchg
jecxz
and
test
or
push
ficoms
dec
sbb
mov
jmp
stc
shr
insb
and
mov
sub
mov
adc
fwait
jns
pusha
inc
and
cs
and
call
sbbl
addr16
scas
shll
loope
loop
xchg
int
adc
sbbb
cmp
rcrb
push
sti
sbb
rol
cmp
jmp
lds
fsubs
push
popa
jno
into
jp
leave
imul
pop
or
mov
pusha
cwtl
clc
dec
mov
pop
mov
test
jle
push
repz
sahf
repnz
mov
cmp
push
cld
push
mov
gs
out
jg
repnz
rcrl
js
pop
rcrb
repz
inc
shrl
fsubs
in
ds
add
mov
jge
add
cmp
jecxz
nop
inc
es
xchg
xor
test
xchg
std
js
cltd
xor
pop
inc
push
nop
out
fisubl
mov
xor
rolb
xor
lea
jge
daa
not
mov
setg
mov
and
bt
lea
rcl
sar
lea
rcl
shl
btc
pusha
mov
not
sbb
mov
cmc
pusha
jmp
popf
icebp
imul
xor
sbb
cmpsb
cld
cs
adc
push
or
pop
in
or
ret
add
sbb
sbb
insb
aam
in
lods
xor
les
xorb
or
cmpb
push
xchg
cwtl
push
mov
xor
ds
shrl
in
lcall
lock
pop
xchg
shll
jp
into
int
push
fistps
add
nop
or
cmpsb
jb
pop
mov
mov
cmc
in
sbb
mov
inc
mov
insl
jo
dec
jae
mov
push
pop
call
cld
push
mov
add
dec
push
cmp
ljmp
stc
or
je
shll
xchg
adc
sbb
sub
shlb
rorl
jne
mov
loop
out
add
push
outsl
movsb
sub
add
out
push
jo
mov
mov
int3
jne
xor
mov
idivb
std
inc
lock
insl
push
into
inc
cli
push
inc
lea
mov
pop
lock
pop
mov
mov
jle
sbb
das
test
cld
sbb
sbb
das
mov
lret
aaa
cmc
cld
mov
iret
push
add
mov
xchg
mov
fldt
outsl
cmp
xchg
int3
in
in
leave
add
mov
bound
cmpsb
inc
xchg
in
aam
inc
out
sbb
fwait
rorl
in
push
mov
xchg
mov
std
pop
or
fistps
enter
xchg
add
mov
xchg
dec
mov
in
fcoms
out
dec
outsb
adc
jge
push
pop
inc
xor
outsb
add
mov
mov
push
mov
mov
inc
pop
add
lds
scas
outsb
pop
xor
xchg
dec
stc
add
bt
test
xor
not
jmp
pushf
lea
call
cmp
bt
add
pushf
pushf
pusha
lea
jmp
leave
dec
scas
add
jns
rcr
mov
mov
movsl
loope
pusha
adc
jl
lcall
mov
shlb
cmp
outsb
mov
pushf
divb
inc
sbb
jg
mov
js
push
aas
fsubr
hlt
fdivrl
ret
sub
rol
and
arpl
dec
pop
nop
lret
mov
ret
or
pop
outsl
xlat
jb
imul
sbbb
outsb
mov
mov
hlt
lahf
xor
fs
popf
int3
xor
inc
push
push
sbb
and
sub
dec
imul
testl
notl
cs
cwtl
mov
js
ss
mov
shlb
fs
ljmp
cmp
jnp
xor
movsb
movsl
add
jge
or
ret
add
idiv
dec
stos
dec
xor
sbb
jns
test
ljmp
mov
inc
ds
ret
jmp
lods
in
cwtl
fcmove
push
into
loop
dec
jae
bound
notl
aad
sub
jge
pop
add
shrl
fisubl
xor
lods
pop
mov
cs
loopne
cmp
inc
sub
cmp
into
stos
jge
mov
ret
movsl
and
mov
adc
mov
or
iret
sub
and
or
aam
outsb
or
xorb
mov
ss
test
and
jb
push
ret
pop
icebp
stos
jge
push
add
mov
popa
cmp
adc
push
or
xchg
addb
push
ds
lea
sub
xor
js
sub
cld
rorb
cmp
out
in
movsb
cld
sbbl
ss
or
out
mov
jno
mov
leave
cmp
jns
mov
dec
and
pop
arpl
out
mov
pop
pop
int
imul
fldenv
sub
enter
out
inc
cmp
pop
out
inc
out
pop
jl
mov
mov
pop
pop
movsl
push
add
sarb
cmpsl
shlb
cmp
and
decl
test
dec
adc
mov
push
cmp
cmp
adc
and
sti
cltd
imul
inc
aam
sti
jp
sti
cmp
sub
adc
jnp
loope
sub
jg
xor
inc
adc
jb
adcb
ds
pusha
mov
pop
sbb
xor
sub
inc
clc
push
lcall
out
push
scas
hlt
or
jmp
push
jmp
rolb
pop
stos
negl
inc
cmp
pop
mov
jae
pop
push
sub
in
cld
push
and
aaa
in
out
ds
outsb
shrb
push
lods
adc
or
jmp
sub
jl
call
repnz
jnp
inc
stc
xor
xor
icebp
pop
fcomi
in
sub
jae
mov
dec
out
push
outsb
sbb
out
pop
pop
imul
cmpsl
mov
adc
jno
pop
les
cmp
and
fwait
scas
pop
ja
repnz
mov
lret
jg
jmp
insb
cmp
pusha
jbe
xchg
sub
mov
mov
mov
iret
loopne
fmuls
cmpl
add
fnstsw
xchg
xor
lea
pop
pop
xchg
mov
seto
lea
lea
lea
lea
bswap
pushf
mov
pushf
mov
push
lea
jmp
movl
push
push
lea
ja
push
pushf
pushf
lea
jmp
jmp
mov
out
xor
fsubr
and
stc
cmp
xchg
ret
int
popa
lock
jl
xor
sbb
adc
adc
ret
sbb
testb
gs
insb
mov
lret
in
pop
cmpsl
decb
jle
insb
push
icebp
adcb
mov
shll
add
adc
and
mov
sub
sbb
adc
mov
movsl
pusha
cmp
je
out
add
js
add
es
fnsave
inc
mov
mov
das
mov
adc
gs
jle
or
add
mov
test
fnsave
mov
rolb
scas
adc
and
push
scas
paddsb
xor
ss
pop
ljmp
add
push
xchg
xchg
fmuls
xor
ljmp
inc
ja
sahf
cmpsl
pop
and
stc
adc
stc
push
xor
and
mov
sbb
push
movsl
cltd
in
movsl
lahf
movsl
call
or
stc
xchg
aad
lds
inc
push
in
fdivrl
leave
iret
push
clc
jle
add
or
sub
adc
pop
repz
lods
and
mov
es
lock
jge
mov
cmp
es
js
pop
adc
mov
das
jg
push
aam
cmp
in
lods
test
lds
push
into
nop
ljmpw
and
icebp
jns
fdivrl
cltd
nop
mov
das
push
lds
notl
lods
cmp
push
xor
jmp
aaa
push
xchg
mov
mov
scas
pop
cwtl
mov
mov
lods
icebp
sbb
lods
pop
mov
cmc
rclb
xor
dec
mov
cmc
push
dec
jnp
mov
jmp
cwtl
jmp
inc
and
mov
nop
cmp
in
sbb
std
mov
and
sahf
sub
jae
movsl
push
mov
pop
arpl
gs
xorl
xor
roll
subl
out
or
jl
enter
je
fdivrl
inc
or
cwtl
pushf
inc
data16
test
popf
sbb
or
inc
lret
stos
sbb
add
ror
addb
add
cmpsl
fisubs
int3
shr
and
mov
add
aam
std
repnz
int
fsubrp
inc
cmp
outsb
fwait
mov
mov
sbb
sub
xchg
rcr
jbe
cli
ret
add
add
pop
push
push
or
pop
inc
sbb
jmp
adc
cmp
ds
mov
fdiv
and
dec
add
add
adc
jae
jno
lcall
mov
icebp
dec
sahf
lret
rcll
xor
xchg
jl
push
lcall
inc
pop
clc
inc
push
adc
and
xor
outsl
loope
in
lods
cld
cmpsl
out
sub
mov
add
in
jmp
jns
dec
cmp
lret
lcall
cmp
add
call
mov
movl
pusha
lea
jmp
mov
mov
movb
pushf
pushf
lea
jle
push
clc
bsf
shr
mov
setg
test
bsf
shl
mov
dec
shld
cmp
mov
shl
movsbw
mov
cmc
pusha
clc
add
push
pushf
pusha
pushl
ret
je
out
pop
ljmp
mov
cmp
sub
jmp
movsb
mov
pop
std
add
sbb
xchg
adc
xor
sti
push
fldl
push
repnz
cs
jmp
adc
cli
inc
mov
jmp
shll
and
dec
push
pushf
push
cli
call
jmp
imul
dec
ds
xlat
lcall
out
sbb
dec
or
loope
je
popf
es
lahf
shl
insb
xchg
push
cld
notb
push
hlt
and
insl
mov
adc
sbb
dec
lcall
insb
mov
inc
cld
mov
cmp
shrl
adcl
and
push
sub
xor
xchg
inc
or
popa
jb
loopne
mov
xchg
pop
mov
lock
or
lock
push
sbb
mov
mov
pop
sbb
sub
adc
sub
xlat
xchg
lods
out
aas
pop
call
call
mov
pop
xchg
dec
mov
dec
js
push
pop
out
mov
lods
outsl
lret
or
xor
cld
cmpsl
fdivrp
out
or
lods
mov
pop
js
pop
orb
in
ds
leave
jg
imulb
scas
jl
in
and
mov
insb
dec
lret
sti
mov
push
pop
bound
test
out
adc
add
mov
insl
pop
pop
xchg
inc
push
push
push
inc
into
fildll
jne
mov
mov
inc
or
mov
clc
dec
daa
mov
shll
dec
mov
mov
dec
jecxz
mov
pop
leave
into
push
lds
lret
scas
fsubrl
leave
cmp
aas
rcrb
mov
xor
add
push
adc
scas
pusha
xor
xchg
js
mov
add
jne
cld
call
dec
xlat
xchg
or
aam
pusha
fldenv
sub
sbb
ret
xor
jmp
iret
pop
je
xorl
cmp
mov
push
roll
paddusb
aas
cltd
jge
sti
xchg
leave
cmp
xchg
add
sarb
inc
inc
pop
int
ret
sub
push
ljmp
add
and
xor
iret
add
adc
scas
xchg
leavew
push
push
cmp
add
imul
not
pop
push
sbb
jecxz
jbe
bound
ror
sub
cmp
pop
insl
mov
ja
movsb
adc
les
cmc
daa
cltd
test
fistpl
dec
pop
cli
mov
stos
pop
add
out
xor
dec
adc
lcall
or
push
mulb
mov
mov
cmp
clc
shr
jmp
movl
jmp
clc
call
push
pushf
movl
movl
lea
jmp
call
sbb
or
push
pop
xchg
aaa
push
arpl
mov
lods
mov
jmp
xchg
jnp
imul
popa
fimull
jp
addr16
push
cltd
or
inc
leave
adc
adc
lahf
inc
or
das
xchg
jnp
imul
mov
mov
rolb
inc
icebp
fisttpll
repnz
pop
pop
dec
sbb
fstp
jle
jnp
xchg
xchg
xor
leave
and
sbb
or
pop
mov
xor
lret
sbb
add
adc
mov
pop
cmp
xchg
jbe
ret
pop
out
inc
cld
std
stos
mov
addr16
out
scas
add
add
adcb
xchg
jne
mov
dec
aaa
hlt
scas
lock
repnz
das
xchg
jbe
inc
push
ds
jg
fs
imul
cwtl
pop
aad
cmp
pop
mov
mov
test
cmp
insb
sbb
test
pushf
iret
or
or
out
cmpsb
fs
je
xchg
adc
sbb
aad
les
sahf
cmp
pop
add
test
fsubrl
enter
aaa
push
loope
dec
cmp
imul
aam
inc
out
iret
mov
negb
testl
jmp
or
popf
cs
lods
test
enter
mov
cwtl
pop
push
xlat
cmp
cwtl
cmpsl
scas
mull
popf
and
test
add
cmp
sub
pusha
int3
xchg
popa
mov
call
das
imul
xchg
push
cmp
cmp
adc
adc
mov
pop
insb
outsb
xchg
inc
ja
lea
loope
mov
xchg
jne
mov
inc
cmpb
mov
push
pop
mov
pusha
ljmp
call
pusha
push
mov
push
movl
movw
movb
jmp
mov
movl
pushl
pushf
mov
lea
jmp
bt
add
push
pusha
pushl
ret
shl
xor
movzbl
and
dec
shl
not
or
add
clc
mov
clc
xor
sub
jns
rol
cmp
add
shl
sar
bswap
movzbw
clc
shl
rcl
movsbw
rcl
movzwl
setne
shrd
bts
mov
push
ror
mov
rcr
add
btr
or
mov
clc
pushf
jmp
shrb
les
push
dec
push
mov
mov
dec
aas
xchg
mov
adc
adcl
push
mov
cmpsl
aaa
add
sbb
enter
sahf
loop
in
xor
test
mov
push
jo
push
lcall
add
mov
add
inc
mov
or
sbb
cmpsl
sub
popf
jg
icebp
imul
push
jo
mov
shll
xchg
sahf
stos
dec
inc
pushf
sub
imul
les
sub
sbb
insl
out
jl
or
adc
ja
frstor
call
call
sahf
fs
imull
aad
sub
mov
shlb
xorl
popa
sub
aaa
sbb
les
rorb
cmpl
lret
sarb
roll
push
sbb
out
fxch
push
pop
mov
sbb
lcall
mov
pop
andb
sbb
xorb
jb
cltd
cld
and
roll
in
add
std
sbb
ficoms
aam
roll
lahf
jb
push
or
xor
je
in
es
fwait
cmpl
pop
js
xor
sahf
fprem
jle
and
jge
sbb
pop
je
nop
arpl
fidivrs
sub
stos
mov
sub
add
mov
inc
int
into
das
lret
add
fidivl
clc
out
mov
std
mov
in
mov
ljmp
lds
jmp
xchg
cmc
mov
call
inc
insb
adc
sbb
xor
inc
xor
in
inc
repnz
mov
sbb
pop
cwtl
cli
adc
sahf
add
sbb
jb
cmp
test
push
add
clc
push
call
pop
mov
fsts
fadds
jl
mov
sbb
xor
ret
stc
and
mov
aas
inc
dec
xchg
dec
shrb
cld
push
inc
in
cmc
popa
mov
lock
ret
stc
into
mov
enter
and
es
mov
xchg
push
sub
mov
sbb
xchg
adc
imul
or
mul
or
fisubl
orps
imul
aam
mov
cmpsl
int
mov
jle
inc
shrb
adc
inc
int3
lods
iret
cld
in
loopne
test
and
add
test
out
mov
mov
lods
or
push
inc
cmpsb
test
cli
inc
popf
lret
xchg
test
or
addr16
inc
sub
xor
mov
es
mov
jb
push
dec
mov
mov
jbe
lds
cltd
out
imul
inc
hlt
xchg
cmc
push
daa
jae
rolb
daa
je
in
jmp
xchg
mov
fldl
mov
js
es
jnp
or
jo
je
adc
int
loope
push
cmp
pop
cmp
sbb
popa
pop
and
lods
lret
sbb
xor
xchg
jo
fisubrs
int
adcb
xchg
je
lock
pop
mov
dec
fnstenv
out
sbb
inc
mov
inc
lahf
xchg
dec
and
or
pop
pop
fucomip
mov
es
adc
sub
lret
out
mov
dec
orb
repz
xor
add
xchg
je
shlb
jo
and
pushf
push
pushl
movl
pusha
pushf
mov
pushf
lea
jmp
movsbw
dec
mov
cmc
bt
add
shr
mov
mov
cmc
sub
cmc
jmp
bt
bswap
mov
pushf
test
shr
mov
push
lea
jmp
sub
clc
stc
mov
mov
bt
bt
call
sub
rol
in
inc
jno
imul
mov
lods
sub
je
cwtl
sbb
stos
mov
push
pop
outsl
jb
ljmp
add
dec
jne
cmpsb
ret
je
cwtl
sbb
dec
ja
and
je
sbb
pusha
sbb
rcr
das
add
lds
int
aaa
inc
lahf
cmp
stc
out
aam
test
shlb
xchg
pop
jecxz
pop
mov
stos
mov
iret
and
das
jne
test
shll
xchg
dec
inc
loopne
mov
hlt
mov
lea
testl
aam
inc
push
pop
pop
cltd
xorb
fs
mov
in
dec
imul
xchg
outsb
mov
fcomps
add
popf
and
es
outsb
adc
sub
decl
insl
dec
xchg
clc
jle
shrb
je
mov
lahf
call
iret
jl
sahf
cmpsl
loope
xchg
mov
xchg
ljmp
cmp
pop
mov
jno
dec
jl
sahf
mov
adc
sub
xchg
mov
std
push
data16
cmp
or
jno
mov
push
enter
xor
or
loop
add
mov
sub
adc
sbb
inc
mov
cs
out
mov
ret
scas
mov
and
sahf
mov
dec
mov
xchg
xor
mov
or
test
lea
leave
stos
and
sub
cmp
loope
jg
push
adc
mov
ret
test
aas
dec
xchg
pusha
loop
scas
out
fwait
addr16
jge
cmpsb
push
mov
std
xchg
cs
jmp
mov
sbb
inc
scas
xchg
pop
int
push
rorl
ret
mov
xor
mov
mov
push
pop
xlat
inc
sub
sub
xor
mov
mov
pop
xchg
and
scas
stos
pop
xor
dec
jbe
cmp
dec
icebp
andb
push
mov
mov
mov
xchg
insb
mov
jge
sbb
sbb
xor
xlat
mov
lret
push
popa
into
shrb
cmp
and
xor
ffree
and
nop
in
out
std
fisubl
push
cltd
test
imul
mov
in
jge
xor
bound
hlt
test
scas
pop
popa
mov
ds
dec
add
add
movsb
add
xchg
sbb
fadds
add
dec
hlt
and
sub
iret
fld
lret
fs
xor
imul
imul
out
subl
rorb
add
adc
fldt
jae
lds
cld
in
inc
leave
fistpl
inc
aas
xor
into
mov
mov
inc
dec
rcrb
cmpsb
es
mov
mov
xor
repnz
sti
pop
mov
arpl
push
stos
outsl
or
xchg
jl
and
fcoms
mov
mov
inc
icebp
mov
mov
xor
in
mov
and
sti
cli
xchg
ss
jp
lods
dec
stos
orl
popf
daa
xor
or
mov
cs
ljmp
jnp
mov
mov
bound
stos
sub
iret
sub
and
push
pop
dec
mov
fucomip
mov
cmp
fwait
jp
pop
cmc
pop
scas
lret
inc
lahf
lods
lret
cld
pushf
dec
inc
sbb
dec
sti
and
xor
fwait
jle
jecxz
lock
popa
aam
sti
fistpll
test
aaa
in
es
jne
nop
fisubs
rolb
push
test
shll
in
fdivrs
fucom
stos
and
test
jge
cmpsb
inc
lahf
adc
test
push
add
les
push
push
movl
pusha
lea
call
cmc
cmp
add
clc
pusha
mov
sub
pusha
bt
bt
stc
cmp
call
mov
sbb
mul
jae
dec
xchg
mov
mov
mov
loope
sarl
add
sbb
add
xchg
das
lea
orl
and
adc
lret
xor
or
test
cmpsb
aaa
inc
cmp
sbbb
sbbl
ret
in
or
inc
adc
cli
and
jmp
dec
ss
pop
fldl
cltd
xor
fsubl
jbe
dec
jb
sahf
insb
test
stos
xor
push
out
and
loop
adc
push
ds
inc
push
cmp
cmpsb
jl
cwtl
imulb
enter
aad
mov
sub
sub
push
adc
lahf
movsl
pop
sahf
pushf
add
ja
nop
data16
dec
and
mov
inc
mov
xchg
in
dec
adc
enter
lahf
dec
enter
mov
scas
int3
aaa
push
fs
pop
mov
jle
cltd
mov
push
cs
in
clc
loope
ljmp
xchg
repz
sbb
fcmovu
repz
inc
adc
jle
push
add
xchg
push
lcall
add
jno
dec
push
lods
fsub
aam
xor
ret
rolb
mov
inc
or
jnp
shrd
inc
stos
in
pop
js
lahf
popf
mov
test
stos
js
imul
enter
popf
mov
cmp
xchg
xor
aam
push
adc
mov
push
mov
frstor
ja
jo
xchg
imul
push
lods
adc
mov
stc
insl
cmp
dec
mov
pop
xchg
cmc
cmp
and
mov
insl
pop
dec
sbb
mov
jo
sahf
aam
ret
popa
leave
sub
out
adc
cli
lock
and
shrb
mov
inc
leave
sub
mov
in
lock
imul
mov
cmovp
mov
adc
pop
into
aam
cltd
push
insl
addr16
dec
in
ret
or
bound
sbb
lods
cmc
bnd
sub
push
or
out
lds
aam
sahf
mov
popa
jno
into
ljmp
pushf
movl
jmp
mov
dec
fisttps
stc
aaa
hlt
pop
cmp
xchg
pop
jge
cltd
xor
push
filds
jne
mov
daa
mov
adc
mov
ss
and
sti
cmpsb
enter
jne
dec
xor
ja
cltd
iret
push
mov
inc
bound
pop
aas
and
stos
ljmp
mov
mov
xchg
andl
ret
mov
sub
mov
test
shlb
mov
jb
rolb
mov
mov
sbb
mov
mov
fimuls
jo
into
lcall
mov
lea
mov
nop
mov
mov
nop
loope
push
fsub
lods
int
lcall
in
mov
pop
mov
inc
cwtl
mov
mov
mov
daa
sbb
xchg
mov
fcomps
jnp
lahf
pop
stc
stos
icebp
scas
add
loop
cmpsl
mov
push
in
sbb
lret
inc
pop
repz
test
adc
test
mov
movsl
inc
sub
mov
rcr
out
lea
gs
adc
fwait
pop
jbe
out
imul
xchg
sub
mov
popa
ds
out
cmp
mov
nop
out
inc
xchg
or
jp
pop
nop
xor
jbe,pn
subl
inc
in
sub
xor
dec
ret
push
xchg
pop
mov
sub
neg
int
mov
sahf
xchg
cmp
in
cmp
out
add
loopne
xor
xlat
or
add
sub
stos
mov
nop
mov
inc
sahf
adc
ss
mov
test
inc
mov
xor
imul
outsl
ljmp
shrb
in
int
xchg
pushfw
mov
aam
jnp
fisttps
push
test
mov
ret
xor
out
mov
jae
dec
xor
pop
xchg
xor
jle
call
out
sti
xchg
xor
push
mov
lahf
inc
push
pop
xchg
sarb
sub
stos
outsl
shrb
jo
pop
pop
cmpsl
xchg
cli
mov
xchg
cs
nop
fdivl
scas
jb
sub
or
insb
sbb
jle
add
scas
xchg
and
popf
xchg
xchg
scas
add
pop
ffreep
pop
mov
sbb
cmpsl
shrl
inc
filds
cltd
repz
or
lret
push
cmc
daa
int
push
cwtl
inc
sbb
dec
pop
pusha
icebp
test
sub
inc
pushf
rol
or
arpl
stc
adc
xchg
popf
inc
sbb
and
sbb
jge
mov
inc
mov
icebp
mov
incb
xor
mov
loopne
nop
inc
stos
cmp
fisubl
lret
xchg
lcall
or
loope
aaa
mov
hlt
push
je
mov
outsb
out
dec
dec
icebp
mov
mov
int
lahf
xchg
jge
sbb
std
inc
dec
xchg
stc
push
into
push
xor
insb
adc
cmp
test
lds
cmp
and
stc
and
sub
and
sub
call
les
mov
mov
inc
pop
or
repz
dec
xor
sub
lcall
test
fdivrl
mov
pop
fidivs
and
dec
mov
in
loopne
das
jg
xor
cs
sub
cmpsl
xor
divl
aam
aam
das
mov
inc
jae
icebp
sti
xor
pusha
cmc
cmp
add
call
cmpsl
ljmp
lea
lods
sub
inc
loopne
sbb
aaa
rolb
add
add
pop
inc
fnsave
dec
inc
pop
std
xor
xor
or
sub
mov
sahf
sub
inc
out
jnp
push
push
xor
xor
sahf
mov
mov
and
sub
inc
fmull
cltd
push
xor
xchg
fs
xor
xor
mov
and
add
sub
push
bound
lret
in
outsb
fstl
je
mov
and
out
add
mov
push
loop
test
mov
insb
sbb
adc
ret
mov
shrl
imul
dec
test
push
and
push
push
mov
insl
testl
arpl
pusha
mov
lds
cli
lret
fwait
icebp
imul
pop
je,pn
rcll
ret
cld
adc
lock
cmp
scas
xchg
inc
rcrl
pop
lock
stos
mov
sbb
test
andl
stc
fdivs
jno
dec
adc
jbe
cmc
mov
jbe
lret
test
lret
and
or
mov
sub
inc
pop
xchg
sbb
clc
pop
cmpl
mov
lea
xor
aam
mov
xor
sar
enter
mov
xor
enter
lea
xchg
mov
mov
addr16
mov
dec
jecxz
mov
ret
mov
or
push
pop
dec
pop
jne
sbb
push
push
jg
sbb
and
mov
mov
iret
add
add
cs
out
xor
sbb
xor
and
cmp
mov
xchg
bound
dec
in
movsbw
cmc
rcr
mov
xadd
test
setae
jae
mov
mov
lea
mov
sbb
pushf
xor
lea
add
xor
bt
cmc
mov
not
test
shrd
mov
clc
bt
jmp
clc
mov
bt
lea
jae
mov
pushf
jmp
mov
orb
mov
xor
jmp
out
out
in
ja
sbb
add
aaa
cmpsb
stc
and
lods
sbb
flds
mov
movsl
fdivs
xor
dec
test
jbe
insl
ret
jecxz
pop
and
jmp
fnstsw
out
fidivrs
mov
mov
mov
or
push
fs
insb
mov
inc
scas
jno
pop
xor
mov
lahf
cmp
cmc
dec
int
mov
mov
sub
mov
divb
dec
js
stc
and
arpl
jp
stc
xor
stc
mov
or
mov
xchg
hlt
xor
repz
mov
push
inc
jno
xor
adc
fimuls
arpl
call
arpl
cmp
loopne
push
popa
notb
xchg
popa
mov
and
call
push
jmp
adc
jae
mov
push
fs
divb
jae
inc
sbb
xor
and
cld
insl
and
or
aas
dec
out
add
or
loopne
push
mov
insl
and
adc
mov
xchg
fldenv
jae
rcr
not
push
ret
insl
jg
ret
fidivrs
sub
outsb
hlt
push
mov
inc
mov
lds
mov
pop
xor
xor
pushf
stc
xor
push
pusha
clc
shr
stc
call
mov
cmc
call
pusha
pushf
call
out
mov
clc
and
lods
insb
les
fstp
xor
inc
data16
jne
xchg
cwtl
cwtl
mov
and
adc
testl
aam
ljmp
data16
mov
nop
cwtl
aam
mov
lret
pop
cmpsl
repz
xchg
and
scas
inc
xchg
mov
mov
and
daa
shl
clc
push
jnp
cli
lret
or
ljmp
dec
gs
jae
sbb
fisubrl
push
or
mov
mov
stos
cmpsl
ret
mov
cmp
fnstcw
jae
test
cmp
mov
xchg
push
xor
fs
imul
and
sub
scas
mov
xor
and
xchg
adc
mov
sbb
enter
pop
aas
xor
call
add
rcr
clc
bsr
stc
mov
pushf
shr
sar
shl
add
xor
rcr
cmp
or
xor
sbb
shl
movsbl
test
test
add
movzbl
lea
movzwl
add
movzbl
shl
or
xor
bts
mov
shl
add
not
shl
shl
rol
sar
or
shrd
movzbl
sub
cmc
rcl
div
pushl
jmp
mov
mov
cmpsb
je
and
mov
xchg
inc
and
in
dec
mov
sbb
sbb
imul
push
in
dec
push
ss
mov
jge
stc
ljmp
or
cmp
mov
mov
fs
lds
je
and
xchg
test
pop
inc
icebp
sarl
sub
sbb
and
je
and
xchg
pop
xlat
or
push
call
clc
movb
and
test
clc
cmc
jmp
movl
pushl
mov
movl
push
pushf
lea
jmp
movzbw
call
mov
and
sbb
fnstsw
pop
jb
inc
decl
mov
iret
adc
test
in
inc
pop
add
cmp
insb
fsin
dec
int
mov
push
lods
std
iret
cwtl
xor
adc
ja
or
push
filds
fcompl
fisttps
in
int
daa
push
xor
leave
idivl
mov
adc
clc
cmp
xor
std
pop
inc
dec
ficoms
mov
jae
jo
cmp
pop
repnz
xchg
fnstsw
cltd
jae
mov
dec
or
ljmp
negl
sti
insl
sbb
imul
lret
lea
in
daa
int3
loop
pop
sub
in
shll
int
push
mov
arpl
inc
movsl
dec
cmpsb
pushf
jg
dec
jne
lods
xchg
mov
mov
sti
add
adc
adc
mov
xchg
add
cli
nop
xchg
imul
push
dec
sub
inc
and
out
test
mov
cmpb
mov
push
outsb
xlat
sub
xlat
jl
addb
or
fidivrl
mov
adc
sahf
imul
pop
cmc
ficompl
inc
xor
xor
push
test
xchg
jl
or
stos
es
cmp
pop
sub
mov
hlt
mov
xor
mov
xchg
xchg
dec
mov
sbb
mov
xor
movl
pushf
pusha
mov
pusha
lea
jmp
movl
push
movb
lea
jmp
rcl
xchg
aaa
mov
arpl
or
sbb
pop
cli
test
mov
or
rclb
push
dec
mov
and
in
mov
mov
mov
or
daa
clc
mov
gs
add
jo
insl
or
clc
xchg
sbb
mov
out
inc
mov
lahf
inc
aad
mov
scas
jg
and
push
mov
test
out
std
pop
aad
std
into
std
imul
arpl
cmc
mov
dec
fstpt
add
xor
add
adc
cmpsb
sbb
stos
imul
pop
cmp
lret
sub
cmpsb
add
pop
cmp
xchg
pop
mov
inc
sar
mov
cmp
subb
data16
xchg
pop
mov
and
pop
daa
cli
xchg
popf
icebp
mov
aam
jns
les
cmp
xor
xchg
pop
dec
dec
xor
lea
sub
pusha
sti
pop
fbld
mov
lcall
pop
dec
bound
mov
out
andb
xchg
cld
test
pop
inc
std
xchg
test
stos
pop
lahf
cmp
fmull
lret
xchg
aam
leave
movsb
xchg
hlt
cld
in
sbb
outsl
mov
sbb
or
test
and
mov
jnp
ds
jle
xor
mov
outsb
jge
pop
test
push
sbb
adcb
dec
mov
sub
add
int3
xchg
pushf
cmp
data16
inc
int
mov
lret
orl
and
xor
orb
loopne
jns
gs
sbb
jl
imul
sub
inc
sub
nop
idivl
leave
mov
sub
imul
mov
shll
push
jl
lods
inc
mov
cmc
sub
cmp
aas
cmp
iret
orb
mov
and
cmp
jge
and
xor
push
jl
xchg
xor
adc
inc
repz
and
mov
jge
std
xchg
lds
cwtl
bound
fsubl
insb
pop
imul
js
pop
scas
mov
xor
push
push
test
xor
je
ja
in
sar
cmp
lret
xor
in
cltd
stos
inc
into
roll
mov
and
push
or
pop
jge
jp
lret
jl
add
sbb
fwait
dec
sub
subb
out
es
in
inc
sbb
push
insl
pop
push
jo
or
cli
js
mov
xor
stos
push
mov
jbe
jae
mov
mov
mov
sbb
add
add
push
stos
nop
mov
mov
and
clc
cmp
or
lret
rol
into
pop
imul
jg
or
into
dec
out
lds
inc
fs
outsb
int3
push
mov
gs
pop
or
push
mov
addr16
movsl
adc
push
mov
xor
mov
pop
xor
shl
mov
dec
cmpsl
pusha
ret
and
dec
sti
das
and
movsb
mov
and
pop
das
repz
fstpt
or
dec
inc
xor
scas
inc
pop
clc
fmull
pop
cmp
sti
xchg
popf
jge
pop
pusha
adc
dec
mov
pop
pusha
inc
fcompl
test
inc
jmp
cs
sbbl
std
stc
mov
xlat
je
adc
add
adc
cltd
aam
lret
adc
mov
nop
addr16
mov
fnstenv
push
jle
xor
testb
mov
stos
sub
mov
push
lcall
mov
mov
dec
cmpsb
fsubrs
mov
pop
inc
push
dec
pop
push
inc
data16
jne
mov
incl
xchg
int3
ret
add
hlt
cmp
repz
scas
or
enter
pop
fisttpl
adc
mov
push
insb
dec
sub
test
inc
push
fiadds
mov
and
rorb
idivb
inc
leave
je
jb
arpl
xor
fcmovnb
or
sub
lea
dec
adc
inc
cwtl
aaa
sub
jmp
xor
mov
inc
stos
push
ja
mov
lds
jae
and
push
clc
aam
addps
xorb
jbe
mov
xchg
mov
repnz
data16
ret
dec
cmp
xchg
inc
pop
fdivrl
gs
xor
or
pushf
movl
pusha
movw
lea
jns
pushf
movl
push
pusha
pusha
lea
jmp
add
pusha
pushf
pushf
jmp
insb
inc
ss
lahf
into
dec
adc
push
inc
clc
iret
xchg
repz
sbb
mov
mov
loopne
ret
pop
push
data16
js
lret
lods
cmc
mov
mov
ret
rclb
inc
adc
inc
push
mov
mov
je
lret
push
dec
shlb
dec
movsb
lahf
push
xchg
mov
cs
or
sbb
mov
or
push
pop
sub
in
jne
dec
pop
push
adc
adc
xor
cmp
sahf
push
loopne
aas
push
mov
cmpsb
loopne
idivb
jbe
lods
jl
test
push
stc
stc
imul
aaa
int3
repnz
adc
dec
add
push
arpl
inc
lods
mov
mov
lret
cwtl
rolb
les
pop
jp
addb
pusha
inc
sti
add
ret
jno
loope
out
out
inc
out
in
popa
or
adc
push
in
xor
adc
pop
andb
cmp
sub
and
and
sub
mov
jb
xchg
jb
into
lret
pushf
in
adc
xchg
mov
movsb
mov
jbe
mov
outsb
mov
cmp
pop
cld
inc
fwait
lea
and
int3
or
xor
jmp
mov
pop
jge
pop
dec
jno
jl
adc
sbb
and
sub
jns
popf
mov
mov
out
sub
add
sbb
cmp
xor
adc
inc
bound
fwait
mov
push
mov
cmpb
les
pop
xor
pop
xor
cld
fdivs
add
mov
xor
add
xchg
mov
mov
dec
push
pop
and
cmp
mov
jecxz
xchg
cltd
popa
push
xlat
imul
shrl
mov
adc
jno
std
pop
imul
add
jb
fmull
jmp
jmp
jmp
and
jecxz
stc
xor
hlt
es
and
push
into
out
in
cmpsl
mov
mov
push
jle
scas
xor
xor
sub
mov
inc
insl
adc
mul
xor
das
cmpsl
mov
js
and
test
add
sub
loopne
xchg
push
dec
xor
mov
inc
xchg
xchg
fmuls
mul
lcall
push
inc
addr16
push
fbld
push
inc
push
test
ret
notl
imul
cld
sbb
or
add
mov
jle
pop
or
mov
and
pop
inc
daa
daa
mov
jbe
lds
call
dec
in
mov
pop
jb
dec
fimull
aas
lds
std
xchg
mov
sub
out
cmp
cmp
roll
outsl
repz
or
aaa
or
and
lods
push
lahf
data16
loop
fxch
xor
xchg
mov
ss
mov
sbb
aas
adc
imul
imul
cmc
push
jbe
inc
and
xchg
movb
pushf
lea
jmp
adc
dec
add
or
xchg
shr
btc
movzbw
bt
clc
lea
ror
shl
pusha
movzwl
bsr
mov
pushf
stc
pushf
pushl
mov
stc
add
dec
mov
clc
push
stc
add
cmp
jmp
shrd
shl
inc
movzbl
sar
dec
call
call
call
pusha
call
xor
add
jge
shr
jmp
add
add
movl
pusha
movl
pusha
mov
lea
jmp
pushf
jmp
jbe
into
repz
cmp
dec
enter
pop
xor
pop
cmc
xchg
in
repz
or
test
lods
and
pop
xchg
inc
loope
or
mov
dec
outsl
pop
mov
mov
sub
fsubrl
imul
mov
in
push
push
jb
fs
shl
and
fdivl
test
scas
xor
loope
sub
sbb
ljmp
imul
fstpl
pop
ret
or
jle
fwait
and
sub
sub
out
loopne
sbb
fiadds
cmpl
pop
cltd
add
daa
ljmp
mov
mov
xor
cmp
mov
pop
cli
jp
inc
aam
fidivl
xchg
push
inc
jae
mov
call
stos
xchg
aad
aad
cmp
int3
dec
adc
test
inc
xchg
xchg
mov
xor
mov
loopne
test
scas
cmc
int3
rcrb
mov
sub
mov
pushf
data16
adc
fs
jne
arpl
xchg
push
cltd
cmp
repnz
ret
xchg
or
mov
mov
xchg
add
xchg
ret
adc
push
outsl
pop
sahf
xor
pushf
pusha
pusha
movl
call
pusha
movl
pusha
lea
jmp
movl
mov
pushl
jmp
push
pusha
pusha
movl
pushf
movb
pushf
lea
jmp
movl
pusha
lea
jmp
movl
pusha
mov
pushl
lea
jmp
call
jmp
call
lahf
jl
clc
lcall
cli
and
fmuls
and
out
in
pop
cmp
mov
cltd
je
out
mov
call
test
xchg
je
cld
fnstcw
pop
mov
sbb
ds
xchg
clc
and
fcoml
sub
movsb
in
cmp
sbb
mov
sbbb
iret
pusha
movl
mov
call
call
pop
popa
iret
cltd
xor
xchg
add
mov
fisttpll
sbb
jae
dec
lock
dec
in
mov
mov
sbb
aam
sbb
jne
push
inc
sub
out
dec
out
lock
pmaxsw
sub
push
das
pop
mov
xchg
jp
pop
aad
aam
add
add
jg
push
push
ret
cmpb
mov
xchg
std
ret
outsb
pop
sub
ja
testl
in
in
sbb
stc
fbld
pop
cld
xchg
mov
ficoms
idivl
xchg
rorb
pusha
or
ja
ss
dec
pop
mov
lcall
mov
gs
and
aad
xchg
inc
mov
leave
push
adc
sti
xor
push
mov
jns
imul
adc
std
xchg
push
mov
rolb
jmp
test
add
jge
cmp
push
mov
in
dec
add
xchg
bnd
movsb
inc
vlddqu
pop
mov
rcrb
cmp
adc
pop
xor
push
mov
adc
pop
push
mov
cmp
gs
dec
cmp
and
or
mov
cs
gs
xchg
popf
mov
aam
jmp
cmpsl
loopne
pop
out
lret
cmpsl
mov
mov
xchg
xchg
aad
mov
nop
jae
xor
and
jbe
sub
xchg
icebp
xchg
aad
sarb
pop
out
scas
push
add
or
lahf
sbb
inc
jb
ds
lock
popf
data16
movsb
insl
subl
cmc
movsb
cmpsb
mov
xor
aam
out
sahf
adc
movsl
cmpsb
aad
sub
stos
idivb
orl
in
out
fxch
sbb
shrl
pop
inc
sarb
sbb
rcr
lcall
jo
xor
out
jle
aaa
repnz
mov
cld
mov
sbb
mov
sbb
ljmp
int
out
jno
out
in
inc
and
xchg
vunpckhps
xor
jae
adc
mov
dec
outsl
test
das
into
mov
mov
out
lret
movsb
pop
out
js
or
jge
orb
pop
xchg
cs
sbb
cmp
push
pop
lods
adc
fdiv
je
out
pop
mov
gs
and
push
pop
pop
clc
xchg
push
pop
popf
dec
pop
fcmovbe
pop
lcall
shr
arpl
out
jb
dec
push
xor
sarb
lcall
bound
add
and
push
push
pop
mov
xchg
add
daa
mov
test
cmp
push
lret
jne
jno
pop
ficoml
test
mov
xor
sti
mov
xchg
jne
fcmovbe
jp
pop
ljmp
add
cmpb
mov
sti
jns
das
ds
xlat
add
shl
xchg
std
inc
mov
cmc
cs
jnp
aas
popf
jmp
push
jno
scas
adc
roll
jg
mov
out
inc
push
aad
dec
cs
ss
dec
pop
mov
sub
sub
xchg
dec
mov
cli
imul
sbb
cmpsb
test
xchg
xchg
dec
dec
stos
sbb
lods
cmpsl
adc
mov
cmp
pop
push
sar
ds
pushfw
cli
clc
mov
sub
pop
rolb
sub
xchg
dec
out
xchg
pusha
sbb
pop
aas
leave
sbb
dec
jo
lock
fwait
adc
or
cmc
rcrb
xchg
dec
jae
xor
loope
xor
mov
inc
push
imul
dec
jg
and
ljmp
jb
fsubrl
enter
lahf
in
scas
push
pop
mov
push
jb
inc
add
mov
pop
add
test
mov
hlt
and
aam
stc
mov
arpl
jmp
xchg
addr16
adc
xchg
inc
and
nop
sub
push
leave
es
cmpsl
test
add
mov
inc
test
mov
lods
cmp
popa
shll
cmp
ja
je
fidivl
mov
dec
in
ret
add
shrb
push
ljmp
jne
and
or
jle
pop
imul
pop
or
push
into
mov
jmp
push
cs
mov
mov
adc
add
scas
ljmp
pop
test
divps
and
mov
lds
dec
sbb
mov
ret
aam
nop
xchg
leave
das
gs
pop
xchg
lock
and
loopne
mov
xor
xchg
iret
and
testb
mov
inc
mov
dec
roll
adc
inc
int3
and
push
mov
lahf
dec
call
or
mov
sbb
cmp
cmpb
jmp
lds
fildll
push
popa
jno
into
mov
jmp
pushf
movl
push
pushf
mov
lea
jmp
pusha
pusha
jmp
dec
je
mov
sub
cmpsb
push
outsb
add
mov
cmpl
jne
xor
mov
xor
and
xchg
in
inc
add
add
add
xchg
rorb
js
jbe,pt
sbbl
sub
arpl
cmp
jmp
addb
stos
std
sarb
mov
jmp
nop
cmpsl
cmp
sbb
sahf
cmp
aam
orb
mov
push
gs
imul
nop
jns
pop
mov
divb
sarb
sbb
leave
jb
xchg
js
testl
dec
in
rorb
and
push
mov
and
cs
mov
stos
movsl
out
add
sahf
dec
in
lock
inc
jae
imul
mov
cmp
sahf
ficompl
jecxz
inc
and
xchg
call
shlb
mov
push
mov
or
sbb
xor
jge
int3
faddp
lret
sub
mov
rorb
pushf
cmp
ja
sbb
sub
int
jmp
pop
pop
mov
mov
cmpsl
sub
or
cmp
mov
push
or
dec
mov
js
mov
and
aas
dec
sti
jl
jl
ds
ja
add
js
lahf
stos
loopne
inc
mov
adcb
hlt
dec
xchg
and
bound
fcompl
test
mov
xchg
jo
push
sub
push
pop
sub
push
mov
lds
mov
mov
fisttpll
jecxz
cmp
sbb
jg
data16
mov
stc
push
xchg
aad
mov
xor
sti
sub
sub
mov
jmp
xchg
dec
push
test
call
and
mov
mov
daa
addr16
jne
imul
shll
adc
pusha
insb
add
dec
dec
insl
xchg
mov
lcall
stos
stos
pop
jae
mov
pop
cld
fstl
xchg
and
aaa
testl
xchg
das
dec
data16
ret
das
jle
xchg
ljmp
xor
je
fwait
pop
sub
add
mov
inc
in
call
fwait
lods
xchg
cs
out
stc
jecxz
sub
xchg
push
loop
lcall
inc
mov
jecxz
xchg
mov
mov
fidivrl
inc
mov
imul
lea
push
inc
movsl
jbe
bound
inc
imul
aas
and
ret
adc
xchg
lret
dec
sbb
push
xchg
leave
and
or
adc
dec
lahf
mov
in
xor
sub
lods
mov
in
das
sub
add
fistpl
xor
dec
push
in
xchg
leave
and
sbbb
ret
in
xor
xor
jecxz
adc
repz
add
rcll
shl
mov
xor
into
jo
aas
mov
xor
cltd
xor
arpl
mov
xchg
repz
imul
jecxz
mov
xor
stc
cli
sub
xchg
leave
mov
cli
sub
ja
es
jb
mov
xor
sbb
xchg
cmp
bound
mov
insb
push
insb
gs
pusha
stos
ja
mov
insb
or
out
mov
popa
cmp
cmp
mov
jp
pop
fwait
insb
mov
aas
cmp
insb
bound
std
hlt
push
jg
shl
popf
popf
jge
inc
loop
out
sahf
mov
sbb
push
mov
loopne
adc
add
dec
cli
dec
sub
lods
dec
sbb
mov
aaa
pop
ret
in
js
into
cltd
fldl
es
ja
sti
mov
add
mov
xor
cmp
ret
mov
or
mov
clc
cmpsb
pop
jb
mov
scas
jmp
inc
scas
aaa
mov
mov
cld
mov
mov
adc
aam
sub
adc
jae
adc
sbb
cld
jo
out
jmp
ja
sti
lock
stos
rorl
aas
and
fdivrl
data16
inc
scas
int
add
cmp
fsubrs
mov
mov
push
loopne
mov
xor
mov
pop
into
ret
outsl
mov
test
jns
popf
cmpsb
iret
and
test
mov
adc
or
shl
dec
jmp
iret
jno
daa
or
sbb
fs
or
jg
cmpl
jnp
mov
or
scas
jecxz
add
xchg
outsl
inc
aam
imul
dec
shl
les
dec
in
fbstp
mov
stc
sahf
mov
outsl
movsl
lahf
inc
lock
jns
leave
shlb
fdivl
adc
inc
fwait
xchg
add
sbb
lds
repnz
out
ret
scas
adc
jae
cmp
lds
mov
xchg
scas
xor
xor
mov
fs
sbb
sub
xchg
mov
xchg
inc
leave
lret
mov
push
xchg
mov
shll
cld
xor
inc
adc
xchg
inc
inc
mov
decl
fwait
shlb
lret
mov
xchg
lea
pushf
mov
not
movsbw
mov
mov
pop
cwtl
rdtsc
mov
lea
movzbw
mov
sets
not
movzbw
rdtsc
lea
xchg
pushf
not
mov
pop
movb
mov
lea
not
jmp
test
sub
stc
call
and
adc
cmp
fstpt
xchg
or
rclb
das
clc
je
shrb
mov
xchg
pop
das
cmp
xor
inc
inc
or
sub
cmp
push
mov
lock
pop
inc
or
add
mov
loopne
lahf
xchg
fnstsw
enter
pop
xchg
mov
mov
cmpb
mov
jmp
mov
mov
dec
push
enter
mov
sbb
inc
inc
sub
sbbb
es
or
or
shll
lock
cmp
xor
adc
fwait
xor
mov
cwtl
push
mov
adc
mov
xchg
inc
cld
pop
inc
pusha
movl
push
pushf
jmp
movl
pushf
pushf
movl
pushf
pusha
mov
push
lea
jmp
leave
pop
lds
mov
or
xchg
mov
add
jl
sub
in
insl
lods
movsb
scas
cmp
pop
fwait
mov
mov
mov
xchg
nop
jmp
add
mov
xor
pop
fwait
lods
movsb
scas
in
lods
lods
divb
adc
das
iret
push
cmpsb
ss
movsl
xchg
mov
movsb
pop
jnp
test
jecxz
hlt
cmpsb
fcoms
cmp
movsb
das
sub
pushf
loop
daa
insl
cmp
sub
pop
ret
or
push
push
push
xor
push
or
mov
xor
icebp
sub
outsb
lret
push
cmpsl
loopne
mov
jge
cmp
xchg
data16
fists
call
cmp
fwait
loopne
jns
xor
shlb
js
jns
dec
into
dec
lds
addr16
sti
push
mov
test
xchg
xor
sub
lock
xor
aad
xor
out
or
pop
mov
aaa
dec
lcall
jp
mov
inc
xlat
mov
mov
adc
cmp
loopne
adc
and
fsts
scas
dec
mov
mov
cmp
dec
sub
jecxz
enter
movsb
cld
or
adcb
mov
sbb
xor
jnp
push
push
inc
or
push
js
es
loopne
lea
ret
out
notl
imul
jl
jmp
pop
pop
jge
loopne
or
mov
loopne
and
ljmp
das
xor
push
in
or
or
pop
mov
mov
pop
mov
into
jmp
pop
cmp
test
inc
add
xchg
loope
pop
jns
inc
shlb
leave
lea
hlt
out
pop
cmp
cwtl
xchg
subl
xchg
fs
leave
mov
add
add
mov
push
inc
dec
sub
sbb
adc
pop
stos
pop
aad
sbb
shr
xchg
sub
xchg
shll
cmp
push
add
dec
and
jnp
int3
roll
imul
loop
pop
call
das
je
and
add
and
les
fstpl
ret
pop
cmp
mov
jne
and
mov
repnz
daa
pop
pop
xor
adc
int3
outsb
push
data16
in
fstl
iret
data16
xchg
mov
and
leave
mov
dec
test
cmpsb
subb
jne
lret
mov
push
adc
lcall
call
add
cmp
movsl
aaa
cmpsb
gs
add
mov
mov
das
xor
outsl
fwait
jecxz
xchg
int3
mov
add
cmp
push
mov
xor
jmp
pop
jo
sbb
or
lods
data16
adc
je
mov
xchg
stc
movsl
mov
loopne
or
in
xchg
cmp
ret
xchg
fsubr
adc
iret
xchg
aas
loopne
sub
inc
das
int
sbb
add
notl
jecxz
mov
aad
rorl
mov
leave
xor
xor
dec
adc
fidivs
xchg
inc
lods
cmpsl
in
pop
and
add
andl
xchg
add
pop
repz
xchg
inc
jne
jle
inc
and
xchg
mov
outsl
movb
call
fucom
les
cmova
push
dec
xchg
or
jo
pop
pop
push
cld
jmp
mov
out
clc
lods
sbb
aaa
and
mov
pop
push
adc
or
addl
mov
push
cmp
push
xor
mov
add
xchg
decl
in
sub
fildll
xchg
adc
add
ds
jmp
adc
icebp
frstor
mov
xchg
data16
subl
loopne
mov
mov
inc
push
add
inc
push
push
jecxz
inc
dec
stos
adc
inc
mov
rorb
aas
mov
xor
movl
pushf
pusha
lea
jmp
imul
xor
cmp
leave
push
push
push
stos
xchg
jp
adcl
push
fcomps
test
inc
lahf
loop
push
loopne
or
sub
pop
cmpsb
push
ja
fmuls
push
in
lret
push
and
pop
xchg
js
cmpsb
push
dec
cmpsb
xor
push
lret
xchg
cmc
push
loope
inc
xchg
inc
sbb
dec
sub
and
and
and
mov
push
call
xor
pop
cmp
mov
push
ja
adc
dec
push
sub
aam
dec
mov
or
xor
add
ret
pusha
mov
xchg
pshufw
repz
jge
ss
sbb
inc
push
sbb
popa
cmp
rclb
and
cmp
aad
and
iret
mov
cmp
mov
shlb
inc
push
xor
pop
and
push
jns
sarb
add
xchg
ds
add
sbb
mov
pop
dec
call
js,pt
and
adc
movsb
ljmp
adc
xor
and
mov
inc
mov
or
xchg
xchg
lcall
jnp
cld
xor
inc
xchg
sub
adc
cwtl
jae
sarl
lret
sub
ljmp
popf
or
xor
add
jbe
xor
aaa
fiadds
out
fsubs
pop
lods
pop
fwait
test
fmuls
loope
cmp
pusha
pushl
bt
cmp
movb
mov
pushf
mov
lea
jle
xchg
pop
push
clc
shr
mov
clc
neg
sub
call
int
pop
adc
jmp
shr
es
iret
xor
push
mov
std
cmc
push
insb
fcoms
xor
pushf
jbe
sub
sbb
adc
jnp
les
mov
xchg
sbbb
push
or
inc
fcmovnbe
outsb
inc
push
loopne
mov
dec
inc
sub
pushf
dec
inc
jnp
sbb
test
stos
inc
sub
in
pop
add
cmp
cmp
lret
test
xor
push
std
jle
rolb
dec
sbb
in
je
dec
cmp
mov
out
pop
xor
bnd
xchg
ret
mov
pop
adc
std
xor
xchg
cmp
negb
mov
insl
mov
lods
xchg
loop
movsb
dec
inc
sahf
xchg
out
lea
xchg
cmp
inc
mov
in
jl
xchg
mov
nop
inc
dec
xchg
mov
sbb
xchg
cmp
mov
xor
daa
call
int3
cmpsb
dec
jae
rorb
scas
shl
or
adc
mov
aaa
sti
fsubrl
filds
dec
dec
dec
in
jae
leave
in
jle
adc
mov
cmp
push
sub
stos
push
xchg
lds
scas
dec
mov
lods
inc
fimull
es
xchg
cmp
pop
mov
xchg
enter
push
or
adc
int3
ja
mov
jl
sub
push
lahf
aam
sahf
adc
sbb
stos
insb
cmp
xchg
cmp
or
add
fs
xlat
adc
mov
pop
cld
popf
xor
call
cmc
sub
bt
shl
jmp
push
push
pushl
movl
pusha
pushl
pushf
movb
lea
jmp
movl
pushf
pushf
movb
lea
jmp
call
xor
shr
inc
and
sub
or
andl
aam
mov
push
lds
test
andl
lret
pcmpeqb
mov
inc
pop
adc
xchg
sbb
arpl
pop
sbb
cmpsb
es
int3
and
cmp
dec
add
adc
push
lret
adc
add
add
iret
sub
add
pop
xchg
jbe
mov
inc
aaa
lock
in
xor
test
add
jo
inc
xchg
mov
sbb
xlat
fimull
mov
cli
xor
jp
lcall
pop
cmp
jae
mov
mov
xchg
out
adc
into
loope
push
fdivrl
imul
pop
clc
pop
scas
outsb
rorb
mov
in
and
fnstenv
jle
test
data16
hlt
push
and
mov
mov
loop
dec
frstor
inc
add
test
jo
xchg
cmp
push
pop
test
or
push
lret
adc
inc
lea
or
mov
adc
xchg
cmp
dec
loop
in
into
je
stos
xor
loopne
jp
pop
sub
or
xchg
mov
inc
push
mov
hlt
ret
in
and
pop
jecxz
xchg
inc
inc
sub
push
push
subb
inc
push
dec
sub
mov
xor
mov
sbb
push
js
adc
fucomip
movsb
jle
lcall
xchg
or
int3
rcrb
push
test
addr16
stos
test
cmc
inc
loop
in
outsb
les
mov
int3
xchg
dec
in
pop
push
push
inc
in
popa
aas
cmp
mov
inc
in
mov
add
sbb
lret
test
imul
aas
hlt
ficoml
stos
dec
inc
aaa
ret
xor
inc
inc
aaa
sub
xor
xor
jno
inc
mov
jns
loop
loopne
ret
pop
jle
in
jp
pop
pop
jns
fcmovu
fisubrl
int
add
test
negl
aad
into
adc
in
cli
sbb
sub
mov
xchg
push
dec
dec
pop
mov
jbe
rolb
jge
adc
mov
scas
lods
in
sahf
jbe
aad
add
push
or
sub
jne
cld
push
dec
sbb
push
pop
push
dec
outsl
andb
into
outsl
or
or
fsubs
popf
mov
dec
push
mov
and
stc
xor
lock
cmc
fsubl
xchg
cmp
cs
jle
loop
jns
xor
lahf
add
test
cmpsb
out
pop
sub
xor
push
cli
in
xchg
dec
mov
inc
xlat
xor
cmp
test
out
sub
sub
loop
out
xor
call
iret
mov
dec
insl
lcall
sbb
arpl
lret
es
into
mov
push
stos
aad
in
pop
dec
sbb
sub
jp
jl
jle
push
mov
mov
or
or
popf
cmp
adcb
ror
push
bound
lods
xchg
jle
cmp
cmp
test
xchg
idivb
nop
dec
ret
lea
push
push
push
icebp
push
jge
sahf
cmpsb
jle
or
iret
loopne
in
iret
dec
xor
stos
jno
in
push
inc
out
stc
ds
mov
cmp
fs
mov
aaa
mov
sub
mov
pop
insl
adc
test
push
cmp
call
data16
adc
pop
js
cli
loopne
jl
mov
and
icebp
movsl
add
push
mov
cmp
cli
loopne
xor
xchg
dec
push
push
mov
mov
std
mov
fwait
sbb
xchg
push
mov
shll
mov
mov
xchg
stc
push
and
sub
sbb
sub
push
jne
fstpt
daa
cs
and
cmc
adc
and
adc
mov
push
imulb
sarl
and
xchg
fs
xchg
jno
push
or
xor
enter
lds
lock
dec
push
cwtl
dec
insl
sub
mov
fdivl
xchg
aaa
adc
cmp
inc
mov
mov
xor
sub
cmp
sub
clc
mov
xor
mov
test
cmp
mov
mov
bt
call
pushf
movl
movb
push
push
pusha
lea
jmp
add
add
jmp
xchg
ds
es
testb
cmpsb
xchg
mov
cltd
lret
pushf
gs
inc
and
mov
daa
inc
push
pop
xor
mov
and
pusha
push
imul
pop
mov
es
and
add
sbb
pushf
pop
ja
mov
add
stos
inc
mov
push
imul
insb
sbbl
fs
dec
push
roll
loop,pt
adc
jmp
and
mov
pop
push
and
mull
das
or
inc
mov
daa
aas
jl
add
pusha
imul
sbb
dec
les
cmp
pop
add
fwait
jmp
js
ficoms
jo
mov
sub
pop
daa
dec
add
mov
mov
jmp
mov
mov
fwait
movsb
pop
mov
fs
or
std
fwait
test
icebp
inc
pusha
push
dec
ljmp
mov
data16
in
push
insl
xor
xchg
pushf
das
xchg
mov
lcall
fsubs
push
dec
pop
xchg
jno
clc
dec
lcall
jp
iret
and
mov
in
xchg
pushf
cmp
lcall
inc
sbb
mov
sbb
lock
push
loope
mov
pushf
fwait
sub
sub
fwait
jp
add
fnstcw
inc
push
mov
cmp
cmp
hlt
insl
or
jecxz
loopne
addr16
adc
test
stos
jecxz
movsb
insl
xchg
shlb
adc
pop
push
mov
lock
and
mov
jmp
out
aam
aaa
fs
enter
jae,pt
push
es
xchg
into
or
mov
ds
fildll
mov
mov
stos
mov
imul
xor
mov
mov
pushl
movl
pusha
pushf
movb
movl
pusha
movb
movw
lea
jmp
movl
pushf
pusha
lea
jmp
repz
cmp
aaa
rclb
sub
mov
push
adcl
outsb
imulb
jns
gs
lds
pop
fldenv
repz
movsl
mov
popa
cmp
jb
fldl
loop
and
outsb
inc
dec
adc
add
movl
iret
mov
enter
icebp
sub
push
xor
insb
cmp
push
in
mov
aas
xor
imul
xchg
jno
mov
shr
frstor
dec
push
shrb
mov
dec
sub
sbb
ljmp
push
shll
sbb
push
push
cli
mov
and
mov
pop
add
addr16
imul
push
jle
cmp
inc
add
add
and
jbe
loop
or
sbb
out
push
mov
scas
inc
pushf
mov
les
xor
jmp
ret
inc
daa
rorb
mov
dec
fisubrs
enter
ljmp
hlt
es
mov
or
push
stc
mov
out
jns
mov
jge
dec
lods
mov
inc
mov
mov
jl
inc
daa
sahf
add
xchg
cmp
mov
or
pop
mov
mov
sub
fadds
fstpl
scas
or
lahf
xor
nop
jae
ret
jg
pop
add
add
mov
js
pop
and
cvtdq2ps
sbb
hlt
mov
inc
xor
popa
adc
fistpll
js
out
or
popf
call
sbb
cmc
pop
fldl
cmc
stos
fidivrs
test
fldcw
je
fbld
inc
adc
jecxz,pn
adc
faddl
jg
add
mov
ds
cmp
sbb
movsb
pop
iret
and
pop
ret
jmp
hlt
outsl
sar
outsl
inc
es
cmc
mov
loop
pop
ss
ds
sti
mov
idiv
cld
test
sbb
mov
maxps
nop
mov
or
faddp
mov
lahf
pusha
and
jb
jmp
cwtl
arpl
adc
adc
add
xor
scas
inc
push
push
push
scas
lahf
mov
cs
in
nop
outsb
out
fwait
adc
xchg
fdivr
mov
sub
inc
push
inc
inc
sarb
jge
or
rcrb
push
push
je
in
sbb
or
add
xchg
aas
push
push
movmskps
ds
test
inc
mov
sub
push
dec
mov
inc
out
and
scas
inc
mov
add
test
adc
dec
sub
mov
dec
dec
push
sahf
test
push
sbb
mov
pop
push
dec
stc
add
lret
mov
sahf
push
dec
jbe
sahf
fildl
adc
daa
inc
shlb
adc
loop
je
movsb
push
mov
aam
pop
rcrb
and
pop
scas
bound
or
add
xchg
ljmp
push
ss
insb
ror
lods
pop
sub
sub
or
push
mov
dec
xchg
out
push
lcall
or
not
fnstcw
push
sbb
call
xor
gs
and
and
jnp
push
stos
push
inc
xchg
adc
pop
shlb
add
insl
xor
adc
mov
cmc
aaa
adc
shrl
lcall
sub
lcall
outsb
lds
inc
pop
push
adc
sub
rcrl
sub
dec
leave
xchg
sbb
adc
fists
xor
cmp
jnp
js
js
xchg
and
adc
add
mov
cmp
mov
lahf
je
xchg
cmp
mov
mov
lret
stos
mov
pop
or
xchg
jo
jb
inc
rclb
xor
jns
push
inc
ret
mov
int3
lock
mov
xchg
or
mov
adc
stos
cmpsb
sub
mov
repz
or
xor
ss
es
dec
mov
push
mov
jl
leave
repz
std
daa
push
int3
lods
sbb
xchg
sbbb
xchg
imul
scas
inc
cmpsb
mov
mov
xor
xchg
cwtl
add
dec
insb
jge
test
lods
push
push
out
addr16
test
and
xchg
pusha
imulb
addr16
or
xchg
fdivs
add
popa
mov
lock
mov
push
fadds
insb
es
jg
sub
cmp
push
icebp
fcom
jecxz
ret
daa
jmp
orb
or
loope
cmp
daa
lea
or
adc
cmc
add
ror
cmpsb
jb
jecxz
push
mov
mov
mov
inc
cmpsl
loop
shl
push
mov
xrelease
or
les
cmp
push
push
imul
and
xlat
addr16
jae
cli
jno
enter
test
inc
xor
ret
scas
rcll
xchg
sub
ljmp
pop
push
push
inc
xchg
rolb
into
cld
xlat
frstor
cmp
ljmp
cmpsb
pop
adc
push
pop
xor
mov
or
push
in
or
dec
sub
mov
jl
jo
dec
imul
andl
fisubl
lds
lods
sbb
stc
lods
xchg
enter
sbb
or
cmpsl
lret
xchg
popf
xor
fimull
sahf
cld
ds
arpl
rorl
sub
push
sbb
pop
cmp
fidivrs
fs
dec
jge
cli
and
and
xor
inc
sbb
jg
add
sbb
icebp
cmp
adc
pop
adc
xor
out
hlt
loopne
hlt
xor
bound
mov
jb
jns
cmp
insb
loop
or
cli
push
mov
lds
nop
loop
adc
cmp
sub
inc
jno
dec
inc
mov
shll
sub
pop
sub
mov
jo
xchg
xchg
jnp
test
es
ljmp
dec
mov
pop
rorb
inc
pushf
xchg
dec
push
xlat
cmp
add
imul
xor
push
jnp
xlat
jp
mov
xchg
xor
pusha
movl
movw
pusha
movw
pushf
movl
mov
lea
jmp
call
adc
jnp
add
js
adc
fstl
sbb
and
stos
mov
aaa
xor
jb
xor
gs
mov
decb
xchg
shrb
fsqrt
xchg
loop
popa
out
cwtl
and
nop
fmul
leave
xchg
gs
jo
rclb
cwtl
mov
fcomi
push
lret
lea
or
pop
sub
movsl
cmp
cwtl
dec
mov
test
fidivl
in
sbb
mov
lods
dec
pop
mov
or
or
mov
cmp
or
xbegin
clc
mov
cli
or
out
cmp
push
stos
pand
daa
rclb
sbb
xchg
or
je
push
sub
pop
bound
les
sbbb
leave
pop
scas
mov
cli
lods
aas
push
cmp
sbbl
scas
pop
jno
data16
jae
or
push
mov
int
sbb
iret
clc
es
mov
fbstp
mov
pmuludq
sub
xlat
gs
cmp
shll
imul
bound
movsb
mov
rcr
lock
test
in
sarl
pop
mov
pop
sbb
push
cmp
cmc
push
pop
xlat
das
insb
and
out
stos
fcomps
mov
movsb
cmp
addr16
jae
sbb
sbb
ds
xchg
insb
fldenv
ror
mov
dec
out
pop
std
test
scas
iret
mov
sub
scas
and
in
cmp
sqrtps
adc
mov
mov
pop
push
lcall
scas
push
ret
out
sbbl
clc
mov
jle
xor
sbb
mov
shll
inc
mov
popf
cmp
pushl
mov
lods
mov
insl
sbb
addr16
dec
iret
ljmp
add
es
jbe
nop
mov
add
fcoms
xorl
iret
or
push
xchg
imul
mov
repnz
push
cmp
test
jns
sti
inc
and
lahf
aam
adc
mov
inc
out
xchg
cltd
aas
fidivrl
dec
stc
sub
lds
cmpsb
adc
pop
push
sbb
or
stc
fldcw
jb
mov
enter
jmp
push
leave
stos
xorl
adc
xlat
out
xchg
push
mov
aas
outsb
vhaddpd
dec
jne
adc
adc
pop
fstl
push
repz
mov
inc
mov
mov
dec
clc
mov
xchg
xchg
je
and
ds
aas
fidivrs
inc
xchg
pushf
arpl
xchg
ret
adc
add
mov
lahf
gs
lds
lods
rcl
dec
xchg
push
sbb
or
push
sub
repnz
sub
inc
test
mov
call
push
pushf
movl
pushf
movb
lea
jmp
push
push
xor
or
ficompl
fdivl
xchg
and
inc
scas
jns
aam
ret
int
push
stos
mov
mov
faddl
stos
mov
lods
adc
adc
inc
jl
test
bound
jle
or
inc
and
inc
stos
adc
and
leave
scas
add
jns
scas
pop
je
pop
mov
dec
out
dec
popf
push
test
cmp
sbb
sbb
push
lods
sbb
stos
sbb
mov
int
pop
rcll
xor
in
std
or
mov
lods
call
flds
into
ljmp
dec
lea
inc
popf
mov
or
mov
sbb
sbb
jae
loope
pop
mov
fdiv
ljmp
leave
loop
aad
je
pop
mov
cmp
test
xorb
inc
inc
mov
and
cmpsb
cmp
jbe
sti
repz
mov
cmc
shlb
xor
push
push
cltd
adc
sbb
xlat
test
pushf
cmp
mov
test
cmc
ljmp
dec
mov
pop
mov
add
test
adc
mov
std
cmpsl
inc
cmp
push
clc
or
fisubs
movsb
mull
fwait
aas
lret
and
and
dec
inc
sbb
lock
hlt
mov
arpl
lods
in
cmpsl
aam
fucompp
adc
aad
mov
or
lock
sbb
ret
adc
pusha
inc
pop
or
test
pop
xor
push
fisttps
xchg
adc
sar
add
cmpsb
push
pop
mov
adc
mov
lds
xor
mov
push
ljmp
or
sbb
xchg
adc
scas
pop
stos
ss
es
mov
dec
daa
inc
xor
ljmp
dec
push
add
inc
xor
mov
outsl
mov
push
xchg
cmp
jb
insl
out
leave
nop
ret
in
jne
sub
pop
sbb
jo
ret
cmc
sub
jns
and
jmp
or
dec
mov
dec
and
shrb
and
inc
xor
mov
and
jecxz
push
mov
lods
bound
inc
lods
mov
mov
nop
lret
test
and
iret
outsl
jns
sbb
sbb
stc
jbe
mov
psadbw
shrl
aad
shlb
adc
out
jb
sahf
xor
inc
pushf
add
andl
mov
scas
sbb
xchg
dec
and
cmc
outsl
and
inc
push
xchg
in
jae
es
outsb
cwtl
jo
mov
mov
fcompp
leave
dec
adc
sub
stos
sub
xchg
push
sbbl
adc
lock
pop
ret
mov
jmp
pop
out
cmpsl
sbb
fnsave
loop
test
aaa
stos
roll
aam
pop
rolb
dec
and
imul
xchg
scas
mov
ret
dec
out
je
loop
mov
pop
mov
and
xchg
rorb
push
imul
mov
jge
and
xlat
fldenv
sarl
lods
add
add
mov
push
test
xor
outsl
inc
fwait
cli
xchg
stos
ss
mov
mov
sbb
push
mov
xor
sub
imul
ret
mov
pshufw
loope
ret
cmp
adc
mov
enter
iret
push
mov
mov
mov
jmp
sbb
xchg
sub
call
call
pop
and
call
cld
push
mov
and
mov
inc
es
imul
cmp
jmp
push
xor
popf
jb
and
das
ja
imul
int
xor
mov
push
movsb
jp
pusha
rorb
adc
psubusb
sbb
adc
mov
int
test
mov
movsb
clc
pop
js
lods
or
jae
adc
pop
sub
test
xor
pop
insl
inc
push
cmpsl
mov
mov
stos
jnp
sbb
cmp
cmp
mov
mov
cmpl
add
bound
xchg
push
jmp
js
push
mov
in
in
add
ljmp
shlb
daa
ljmp
sbbl
lods
inc
outsl
dec
push
mov
rcrl
fst
out
mov
enter
stos
jbe
ret
shrl
jns
cltd
js
jp
xor
cwtl
outsl
das
cmpsb
cmp
sti
push
out
pop
popf
push
stc
and
test
mov
adc
std
pop
jge
test
aam
fdivr
push
popa
bound
test
inc
jg
sub
sti
push
and
sti
mov
xchg
mov
push
jae
inc
and
mov
fisttps
jbe
inc
cltd
pshufw
mov
push
mov
fs
adc
lret
sbb
push
or
cmc
fnstcw
pop
cmp
fwait
pushf
jl
sub
fidivl
cli
mov
push
and
dec
mov
imul
fwait
adc
jecxz
test
mov
test
pop
iret
lock
ss
enter
int
loop
and
xor
lahf
cmc
in
jno
and
or
add
push
cmpsl
sub
int
add
popf
or
mov
sbb
sbb
popa
jb
push
leave
lcall
add
cmp
outsb
dec
xchg
push
xor
mov
gs
leave
mov
je
sti
xor
and
jle
adc
aas
xor
aaa
and
xor
ss
push
test
icebp
mov
and
cmp
lea
stc
movsb
repnz
xor
or
adc
adc
shrb
pusha
xchg
xor
in
lds
inc
jp
push
xchg
call
fidivrs
adc
push
xlat
mov
lcall
aam
lods
inc
negl
dec
add
hlt
imul
dec
mov
mov
cmpsb
lods
sub
or
ja
push
imul
lea
cli
push
lock
movsb
ret
mov
sbb
cmpsl
dec
stos
lods
sarb
jno
popf
or
or
push
mov
jns
xor
cwtl
pop
add
add
lahf
mov
mov
mov
sti
push
sarl
aaa
sahf
sub
mov
movsb
orb
jbe
mov
cli
adc
pop
jp
mov
xchg
adc
xlat
arpl
enter
and
repz
call
lock
ret
or
mov
fmulp
xor
push
cmp
mov
add
clc
test
lahf
xor
enter
inc
push
xor
mov
call
cmp
sbb
or
jge
out
xchg
clc
or
test
cmp
mov
xchg
cmpl
aad
cmp
jae
in
dec
inc
jb
testl
imul
ss
fdivs
dec
imul
outsb
insb
adc
ret
adc
movsb
add
sahf
cli
sbb
add
pop
or
cmp
sbb
fsubl
inc
aad
mov
jb
pop
rcr
pop
add
adc
cmp
inc
push
adc
aad
and
and
lods
clc
sub
or
jmp
out
xor
test
mov
gs
aam
fnsave
hlt
xchg
lahf
add
rcrb
sbbl
push
mov
popf
stc
popa
inc
stos
pusha
sbb
and
fs
stos
inc
cmp
ja
cmp
jnp
les
lds
andl
sub
test
push
sub
jnp
dec
sub
pop
arpl
repnz
iret
and
je
dec
add
sahf
add
add
outsl
cmp
dec
mov
and
dec
xchg
in
xchg
dec
fisttps
push
mov
test
addl
shll
sbb
sbb
loope
int3
add
mov
sub
add
mov
dec
lods
and
mull
ds
mov
imull
ss
test
aad
fdivrs
fs
mov
mov
add
cmpsb
movsb
sarl
or
sub
push
inc
pop
test
popf
adc
inc
stos
push
ret
movsl
inc
testl
popa
sub
jp
cmp
adc
pop
out
push
shrl
sub
fdivrs
subb
xchg
mov
push
lea
adc
jmp
dec
adc
lods
mov
xor
inc
xchg
sarb
cltd
push
xchg
and
or
mov
imul
push
mov
ja
aad
sub
xchg
pop
aam
outsb
push
aas
or
in
icebp
sbb
decb
dec
add
jns
out
les
xchg
pop
ret
dec
sbb
les
jb
or
add
bsr
shl
rol
btc
mov
clc
push
movb
add
cmc
cmp
xor
bt
cmc
push
bt
add
btr
movzbl
btc
mov
pushl
clc
test
test
or
not
btc
ror
ror
imul
stc
shld
movzbl
inc
add
sub
bsf
btr
lea
pop
add
rcr
xor
sub
lea
movzbw
rcr
xor
add
call
sarl
or
das
aas
pop
jnp
in
fidivrs
or
pop
mov
dec
or
cmc
or
call
pop
pop
mov
and
mov
outsb
lods
mov
cmpsb
inc
lret
repnz
test
mov
push
aaa
adc
inc
add
mov
int3
arpl
inc
push
mov
add
pop
faddp
dec
jne
inc
cltd
inc
inc
out
lods
cmp
sar
xchg
fnsave
and
std
xor
mov
or
mov
cmp
lock
and
ror
push
sbb
int3
cmpsb
adc
loop
push
push
and
shrl
xchg
stos
sub
sub
scas
jb
push
neg
scas
adcl
adc
pop
leave
out
stos
call
stos
addb
es
cmpsl
cld
mov
jns
mov
push
outsl
or
sbb
jl
bound
test
push
dec
jmp
enter
dec
xchg
pop
mov
ret
out
loopne
or
test
push
in
je
cmpsl
or
xchg
mov
jecxz
mov
adc
mov
subl
sbb
push
push
xor
mov
pop
sbb
clc
fbstp
imul
mov
push
dec
pop
add
adc
enter
cs
xchg
xor
sub
sbb
out
push
call
aaa
dec
arpl
adc
fidivs
sbb
pop
xchg
sbb
pop
into
ss
mov
and
imul
outsb
adc
sub
xor
mov
outsl
mov
lods
ja
adc
aam
push
mov
mov
xchg
sbb
xchg
ret
lock
es
lret
add
mov
sbb
loope
cmpsl
mov
sbb
sub
in
outsl
dec
push
shlb
call
push
push
add
xchg
inc
push
cmc
adc
ds
aaa
add
imul
push
dec
imul
mov
and
inc
imul
pop
lahf
shlb
push
mov
xor
cltd
jp
test
scas
mov
stos
xorb
push
test
mov
or
mov
xchg
or
sar
popa
add
cmpl
jns
mov
jl
mov
aam
jl
popf
pop
flds
sbb
xor
push
adc
xor
fstp
sti
sbb
xchg
fwait
test
out
or
sbb
outsb
push
test
inc
loope
push
xor
sti
push
pop
movsb
ds
rcrl
jg
push
out
mov
clc
ljmp
in
push
jae
shr
dec
out
dec
and
mov
dec
out
mov
jl
fcoml
in
pusha
rcrl
xchg
outsl
push
dec
pop
adcb
mulb
jg
mov
xor
add
jnp
inc
inc
in
or
jmp
push
int3
adc
fstl
negl
ljmp
bound
loop
add
inc
pop
mov
pop
push
sub
xor
lds
sbbb
mov
insl
loope
mov
adc
test
fstl
in
dec
loop
xchg
pmulhw
and
fsub
lea
pop
pop
cmp
scas
iret
insb
cmp
sarl
cmp
mov
in
loopne
dec
mov
lahf
push
sub
or
popf
dec
inc
inc
ja
xor
cmpsb
or
stos
mov
jle
cmp
and
xchg
xor
leave
mov
out
xchg
out
les
ror
scas
fiadds
pop
push
push
in
mov
ret
sub
ret
or
stc
xchg
or
into
mov
in
push
cmp
cmp
imul
inc
negb
fwait
popf
mov
push
adc
xchg
adc
mov
shrl
or
or
mov
and
pop
pop
xor
mov
imul
lahf
xor
pushf
mov
clc
test
shr
cmc
bt
push
add
bsr
movzbw
bts
add
rol
mov
stc
cmc
shr
test
and
pushf
add
test
mov
push
shl
bt
stc
add
pushf
cmc
cmc
xor
clc
cmc
stc
clc
add
aad
bsr
shl
bswap
movzbw
test
cmp
cmc
add
jno
or
pushf
pushf
movzwl
pusha
lea
jmp
dec
dec
ret
fidivrl
enter
cmp
fwait
cmp
mov
stc
dec
xor
das
mov
xchg
sbb
xlat
sbb
cltd
cmpsb
lret
and
test
test
xor
add
mov
inc
aas
dec
dec
cs
pop
jmp
adc
mov
adc
in
data16
mov
imul
or
push
decl
pushf
jge
enter
lods
or
stos
popa
in
call
mov
cld
pop
pop
mov
sbb
push
iret
xor
sbb
and
sbb
jmp
loope
jo
mov
dec
or
jmp
mov
clc
and
mov
adc
scas
ficoml
sub
mov
sub
dec
push
scas
sbb
jno
dec
jp
aaa
cmp
xchg
inc
daa
push
push
add
and
inc
add
sbbb
aam
mov
ss
les
rclb
or
mov
cmp
test
jae
mov
in
aad
aad
addl
push
push
mov
xchg
sbb
cwtl
incb
and
lahf
out
sub
stos
in
addb
mov
shrl
hlt
jnp
lret
decb
fdivl
mov
or
pop
add
xorb
sub
sbb
inc
outsl
stos
test
fsubrl
fisubrs
xchg
sbb
jecxz
out
insl
clc
mov
lds
mov
addr16
lods
bnd
lahf
jecxz
push
fldl
gs
repnz
mov
sub
pop
jae
lock
movsl
sbbl
mov
sbb
shrd
and
jmp
cli
pop
mov
call
xchg
jg
adc
jns
cmpsl
iret
rclb
mov
cmp
sbb
push
filds
lods
mov
leave
dec
sbb
nop
jl
je
xchg
and
cwtl
dec
scas
imul
jne
dec
xor
mov
leave
rclb
adcb
sbb
int3
xor
xor
cltd
shll
push
loop,pt
pop
pusha
mov
push
in
mov
mov
pop
daa
orl
mov
cs
inc
xor
pusha
movl
jmp
mov
lods
inc
imul
and
add
xor
pop
xor
inc
jle
mov
pop
mul
mov
inc
rorb
test
lea
mov
movsb
pop
and
xor
call
and
mov
pop
dec
and
andb
lret
clc
mov
lahf
cmp
test
xchg
mov
stos
dec
cld
pushf
cmc
jae
cmpsb
adc
fiaddl
sub
push
mov
mov
xlat
inc
fwait
dec
dec
and
jge
pop
je
nop
pop
out
out
xor
push
cld
jae
xor
xor
aad
pop
or
xchg
pop
aas
mov
inc
sub
inc
or
movsl
cs
adc
popa
add
xor
push
mov
pushl
lea
jmp
cmc
xor
movzbw
movsbw
pushf
mov
push
pushl
mov
movb
movsbw
movzbw
lahf
mov
movb
pushl
bswap
mov
push
pushl
pushl
call
pushf
jmp
movl
push
lea
jmp
shr
test
clc
clc
bt
and
cmc
add
mov
lea
pop
mov
movb
lea
jmp
cld
dec
ljmp
dec
je
test
push
mov
pushf
inc
and
popf
out
adc
jbe
mov
mov
push
call
jmp
shl
push
or
movsl
popa
shll
xchg
mov
xor
sti
jno
dec
fisttps
dec
stos
or
jne
push
jnp
jae
adc
dec
sbb
rol
xor
push
lea
nop
arpl
shrb
xor
pusha
jmp
push
lock
std
std
xchg
xchg
imul
iret
xorb
push
int
sub
mov
pop
dec
ss
inc
pushf
in
jge
jmp
inc
pop
and
aam
pop
ret
add
jecxz
and
test
sarl
mov
inc
inc
ds
in
xchg
push
out
adc
in
or
enter
loopne
jmp
pop
rorb
mov
movl
jmp
movl
pushl
pushl
lea
jmp
push
jmp
and
subl
jmp
outsb
or
add
xor
xor
mov
lcall
adc
into
mov
mov
ret
and
xchg
mov
push
sub
xchg
sub
adc
mov
fsubl
xchg
mov
adc
push
nop
cmpsl
vorpd
and
int3
dec
push
inc
lahf
add
mov
and
call
sub
pop
pop
out
or
or
jge
adc
mov
mov
nop
mov
jge
pop
xor
add
leave
xor
xor
insb
add
xchg
sti
dec
fstps
in
jns
cld
push
mov
xor
xchg
lea
shl
or
mov
adc
jne
daa
xchg
inc
rsm
sub
mov
or
xor
jp
xchg
cmp
paddw
in
shll
pop
dec
adc
ds
sub
mov
into
or
mov
ds
leave
jp
lods
idivl
icebp
stos
adc
xlat
push
or
mov
sub
ss
aas
sbb
loopne
js
imul
inc
jo
mov
push
in
push
dec
imul
test
stc
sbb
or
add
pop
dec
push
sbb
inc
cmp
and
fwait
mov
adc
fs
addr16
xor
sbbb
movzbl
xchg
fistpl
push
int3
je
shrb
adc
mov
jnp
jmp
mov
leave
lods
mov
leave
loope
rol
dec
sub
mov
aaa
rorb
repnz
lea
fmulp
dec
adc
jle
inc
xor
sub
jo
sub
repnz
std
shl
xchg
mov
xchg
adc
push
xor
sbbl
lods
insb
push
repz
cs
shll
scas
repz
jne
sub
sub
and
pop
std
add
lea
xor
les
xor
ret
int3
rcr
cmp
jg
int
sub
xchg
fwait
mov
and
fistpll
ds
frstor
lea
bound
shrb
jecxz
into
jg
push
xor
test
add
btr
xchg
add
lea
rcl
movzbw
add
add
shld
cmc
xor
cmp
add
aam
sub
movzbl
not
jmp
push
pushl
movl
mov
pusha
pushl
lea
jmp
lea
jl
shrd
mov
neg
shl
sar
mov
cmp
test
lea
test
cmc
test
add
push
push
lea
mov
call
push
pusha
movl
pusha
pushl
movw
lea
jmp
andl
xor
pop
xor
xchg
jns
cld
iret
loopne
or
leave
dec
xor
dec
gs
lds
jle
popa
ljmp
mov
xchg
sahf
insb
add
sub
loope
iret
or
sub
xor
jmp
lea
jne
pusha
mov
sete
dec
and
inc
bsr
mov
cmc
pushf
cmc
mov
pushf
bt
movw
cmp
mov
clc
test
jmp
clc
cmp
sub
push
stc
xor
pushf
movb
call
adc
psubsb
add
in
in
or
adc
roll
loop
ds
add
int
es
test
fadds
inc
jmp
inc
fisttpl
add
lock
shll
cmpsl
dec
mov
adc
mov
sub
rol
sbb
imul
outsb
cmp
xor
mov
inc
cmp
and
movsl
dec
sbbb
adc
add
sub
xchg
mov
sbb
pop
mov
rolb
adc
or
movsb
pop
pop
mov
sbb
out
lret
sahf
xchg
inc
jne
mov
repnz
popf
add
sarb
or
outsl
lods
pop
add
imulb
aaa
dec
inc
mov
dec
add
add
sbb
pop
mov
xchg
dec
dec
jae
xchg
sub
iret
out
xor
adc
call
sbb
push
pop
imul
repz
outsb
dec
adc
dec
mov
push
pop
mull
ljmp
pushf
mov
pusha
xor
xchg
mov
push
adcl
push
ds
push
psrlq
out
scas
jmp
ret
push
pop
mov
jne
je
xchg
rsm
add
mov
subb
xchg
ds
bound
fs
push
xor
mov
jl
xchg
jae
nop
mov
ficomps
xchg
cmpb
pop
and
into
fnstcw
sbb
mov
test
add
push
mov
das
cmp
mov
dec
mov
mov
pusha
mov
adc
mov
lods
fnstsw
mov
aaa
je
jns
pushf
xor
mov
jae
out
sbb
test
fistpll
inc
sub
in
push
std
sbb
repnz
sub
sub
in
call
cli
stos
rolb
inc
sti
push
mov
mov
jge
mov
outsb
jo
add
pop
icebp
inc
cmpsb
or
dec
pop
pop
xchg
push
pushf
jae
lret
test
cwtl
packuswb
cmp
les
sbb
in
dec
addr16
and
andl
push
leave
iret
lock
adc
jbe
outsl
jo
sub
or
xor
and
lret
in
sub
sbb
stos
cltd
mov
mov
lret
test
push
lods
sub
sahf
inc
dec
sub
mov
mov
rcll
mov
xchg
push
sbb
sub
jmp
mov
cmc
movl
push
clc
shr
test
add
pushf
mov
pushf
call
mov
iret
rcr
or
adc
fstl
or
in
ljmp
mov
mov
popa
into
jb
test
insb
stos
jmp
enter
xor
or
ljmp
pop
and
mov
xchg
or
call
pop
mov
xchg
or
pop
test
mov
sub
xchg
xchg
daa
and
pusha
movl
movb
movl
pusha
pushl
lea
jmp
jb
shlb
or
jg
jp
pop
inc
fs
nop
sbb
ret
stos
out
cmc
xchg
loopne
xor
inc
xchg
aas
xchg
mov
pop
dec
scas
xchg
rclb
cmp
shrb
hlt
dec
out
cmc
xchg
dec
mov
inc
mov
xor
shr
jne
jb
insb
aas
push
and
imul
xchg
clc
jbe
jl
stos
out
or
cli
pop
addb
ret
loop
sbb
idivb
ret
pop
lahf
repz
dec
in
scas
aad
sub
or
sti
loopne
stos
dec
cld
sub
stos
mov
xlat
mov
mov
cmp
adc
mov
pop
mov
pop
mov
dec
insb
mov
cli
add
aam
xchg
or
repnz
jmp
lock
xchg
out
test
and
int3
jns
add
dec
out
cmp
xchg
cmp
jo
aaa
sub
xorb
popf
xlat
jle
dec
add
mov
dec
jmp
ss
cli
pop
cmp
and
fildll
repz
rcr
sahf
testb
scas
xor
push
lock
jmp
test
mov
inc
std
xchg
out
iret
inc
or
inc
sbb
jp
movsl
aas
pop
clc
movsl
xchg
mov
jge
xchg
pop
jle
aas
out
andb
cltd
inc
xchg
jmp
nop
lahf
int3
dec
sahf
rolb
popf
int3
sahf
or
xchg
cwtl
popa
xor
or
gs
popf
push
pop
lret
add
lea
call
rorl
imul
inc
mov
movsl
pop
ljmp
ljmp
mov
pop
gs
lahf
faddl
xchg
xchg
imulb
push
pop
dec
xlat
mov
inc
jno
add
mov
jecxz
mov
in
jecxz
mov
push
jl
fidivrs
jp
jmp
mov
negb
xor
sub
ficomps
mov
aaa
sbbl
pop
xchg
ret
lret
hlt
fldl2e
push
mov
jmp
lret
shll
je
movsl
add
dec
pop
nop
cld
nop
icebp
pop
jl
inc
fnsave
sub
out
jbe
mov
mov
sub
push
add
cmp
lahf
fwait
mov
pushf
or
out
leave
mov
or
mov
add
popa
xchg
jo
fnstenv
popf
xor
jg
mov
aam
adc
sub
ficomps
xor
aad
sbb
stos
mov
popa
mov
pop
pop
adcl
stos
jns
arpl
std
dec
jns
andb
adc
pushf
and
pop
in
cmp
xchg
and
pop
xor
lcall
mov
cltd
ret
fwait
movsl
mov
insl
mov
popf
lock
or
fistps
fildll
int3
or
aad
rcll
out
jle
mov
and
dec
mov
xor
movsb
in
pop
mov
push
push
push
cmpsl
scas
ja
out
loop
pop
in
dec
lds
and
sti
pop
ss
clc
arpl
jecxz
sub
cmpsl
jp
add
xlat
xor
and
pushw
fsubs
sub
lods
inc
sbb
sbb
hlt
ficomps
imul
jmp
xlat
std
and
sub
jl
push
int
mov
test
test
push
and
mov
leave
lcall
outsl
xor
stc
pop
enter
xor
sub
mov
jae
aas
sub
jns
mov
mov
aas
sti
mov
faddp
adc
jbe
mov
adc
lret
xchg
sub
popl
fsubrp
push
das
scas
in
cmp
fsub
push
and
ds
fsubs
add
mov
adc
inc
jb
pop
scas
repz
jb
dec
pop
pop
test
fwait
push
mov
inc
mov
nop
pop
mov
es
loop
inc
mov
dec
mov
outsb
mov
es
andps
leave
imul
sub
sub
and
jmp
jl
jb
es
mov
cmpsb
mov
mov
pop
fisubl
bound
mov
stc
push
addr16
movsl
push
adc
pop
repnz
xor
pop
and
jno
aas
jns
gs
jp
xchg
aaa
loopne
jo
xchg
cmp
mov
insl
push
xor
xor
xchg
or
stc
loope
imul
add
inc
add
shll
cmpsb
pop
add
dec
dec
mov
sub
scas
out
minps
dec
mov
addr16
mov
imul
and
jge
xchg
out
mov
jl
xor
push
adc
sbb
xchg
sti
pop
js
stc
xchg
xchg
mov
pop
sbb
cmpsl
popf
mov
push
bound
adc
jp
and
pop
sub
jecxz
nop
sbb
dec
ret
mov
pusha
cmp
xchg
cltd
int3
inc
inc
mov
ror
xlat
mov
and
sub
scas
dec
call
xchg
push
sbb
cmpsl
xlat
int3
fdivrl
cmp
inc
push
out
arpl
mov
or
xor
ss
jno
insb
mov
mov
jb
sub
sbb
aad
fs
arpl
es
movsl
push
mov
bound
or
repz
mov
out
mov
lods
aas
cmpsl
mov
mov
in
push
loope
add
xchg
add
movsl
ljmp
movsb
mov
mov
inc
loopne
lcall
or
adc
rclb
sbb
sub
fsub
test
out
push
lret
fwait
lret
push
icebp
lods
inc
lret
movsb
dec
cmpl
insl
or
or
mov
xchg
subl
out
repnz
loope
cs
jg
mov
nop
outsb
xlat
or
loope
ja
pop
push
js
sub
test
cmc
push
fsts
cmp
shrl
int3
jecxz
jne
inc
add
and
movsl
outsl
repnz
and
scas
leave
xchg
pop
inc
add
fidivs
lods
aas
stos
sahf
fwait
test
dec
mov
jge
push
arpl
cmovs
clc
out
sub
int3
and
mov
imul
lds
xor
sbb
cmpsl
scas
les
pop
inc
sarb
aaa
int3
orb
sbb
adc
adc
stos
std
shrl
cwtl
push
inc
sbb
mov
lcall
xor
cwtl
mov
or
cmp
cmp
sahf
xchg
mov
jg
jp
and
int
lcall
pusha
test
xorl
jno
int
jle
shll
popf
mull
add
cmp
scas
mov
sahf
or
dec
movsb
cmp
cmp
jle
sahf
das
std
mull
mov
sbb
dec
sbb
xor
sub
inc
shll
inc
or
sbb
jne
jnp
jecxz
jle
push
jo
pushf
inc
and
sar
xchg
lret
scas
push
outsb
shrl
sub
inc
popa
sbb
js
mov
xlat
aas
loope
shrl
or
popf
pop
jl
inc
mov
cwtl
or
mov
pop
enter
shrl
movsb
jnp
fimull
fsubr
popf
jecxz
test
xchg
sub
cmpsl
add
push
adc
xor
je
or
sbb
jg
push
lret
mov
into
lods
or
lahf
loopne
lret
insl
das
pusha
iret
mov
adc
int3
inc
movsl
in
clc
mov
xlat
mov
dec
int3
xchg
adc
lods
and
mov
movsl
cmp
in
jle
jge
sbb
nop
cld
cld
mov
sahf
repnz
cmp
cmpsb
xchg
add
mov
xchg
push
ja
push
sti
arpl
inc
mov
mov
nop
ret
test
sbb
push
sub
mov
add
shlb
pop
add
gs
icebp
xlat
lock
test
ja
mov
mov
in
add
negb
sub
test
mov
aam
arpl
aad
nop
andl
pop
push
leave
scas
call
add
ret
repz
jge
mov
leave
stos
pop
mov
pop
repnz
unpcklps
movl
sahf
inc
imul
mov
adc
push
ss
outsb
or
mov
xchg
sub
mov
insb
test
jae
js
nop
in
mov
inc
in
inc
mov
dec
enter
fldcw
jle
fcmovu
cmp
pop
xchg
lahf
loopne
call
xchg
das
clc
lret
in
push
dec
imul
decl
jno
jno
subb
and
icebp
inc
or
ret
xchg
sar
push
into
xchg
dec
add
outsl
movsl
sbb
nop
rclb
dec
cmovo
mov
lds
sbb
sbb
in
xchg
imul
in
divl
sbb
or
or
sti
mov
mov
xchg
enter
xchg
xchg
sbb
movsb
xchg
scas
das
cmp
sti
pop
inc
jecxz
fldl
pop
jg
jle
xchg
shr
mov
into
inc
mov
push
mov
fcmovnu
cli
pop
xchg
mov
sbb
int3
insl
pinsrw
mov
movsl
push
imul
add
or
and
mov
sbb
repnz
cs
mov
sbb
sbb
adc
add
je
xchg
sbb
or
out
icebp
push
sarb
mov
incb
mov
cmp
dec
xchg
sbb
xor
popa
dec
lods
xchg
stc
push
cmp
xchg
add
xchg
inc
ret
lcall
sahf
je
cli
inc
sahf
ret
xchg
mov
sbb
xchg
jp
or
xchg
xor
cmp
inc
adc
mov
xlat
xor
loop
jbe
xor
pusha
inc
xlat
in
push
pop
fwait
sub
or
outsb
jmp
cwtl
fwait
cmp
js
cmp
mov
sbb
push
mov
addl
cli
adcl
add
xor
jb
loop
cmpl
xor
jge
pop
push
leave
lds
mov
scas
popa
push
push
jno
and
rclb
rclb
das
dec
je
pop
sbb
push
push
lahf
std
ljmp
add
mov
push
dec
fdivrl
fistpl
push
pop
xor
pushf
mov
push
mov
inc
lcall
cmp
push
rorl
pop
sub
mov
aas
jle
fiadds
or
test
in
loope
loopne
xchg
jne
sbb
pop
lahf
add
je
das
dec
push
cld
mov
test
fstpt
leave
pop
orb
xchg
js
das
fnstcw
loope
addr16
test
out
jecxz
pop
inc
dec
mov
cmp
add
or
inc
mov
repnz
push
insb
inc
or
loopne
push
scas
dec
add
pop
ja
jns
ljmp
xchg
push
mov
sbb
pop
sbb
pop
jle
sbb
push
pop
repz
and
pushf
in
dec
and
imull
adc
pop
xor
aas
dec
dec
roll
cmpb
sbb
lret
mov
xchg
sar
in
aaa
adc
fiaddl
shlb
lahf
aaa
push
hlt
xchg
cld
push
daa
mov
xor
mov
jge
into
dec
adc
cs
repnz
outsb
xlat
push
movsb
push
call
xchg
loop
out
sbb
loope
push
imulb
add
inc
sbb
gs
xor
inc
dec
cmpl
clc
dec
repz
jbe
sbb
popl
or
ljmp
std
mov
addb
xor
pop
cmpl
fucomp
mov
iret
outsl
and
inc
leave
xor
test
out
xor
xor
out
jg
repnz
mov
lods
dec
inc
jmp
clc
and
clc
jbe
iret
pusha
sub
mov
push
test
aam
ja
negl
pop
push
jnp
cmpsl
cmp
shl
jg
dec
pop
push
inc
ret
loop
push
and
daa
shll
xchg
and
mov
movq
mov
mov
xrelease
loop
add
loop
aam
mov
outsb
and
jg
imul
cmp
push
dec
iret
mov
leave
in
cli
xchg
dec
and
popa
mov
mov
mov
shlb
sbbb
xlat
jae
push
imul
sbb
xor
and
inc
push
jno
mov
lods
lock
out
push
jb
add
inc
xchg
mov
cmp
adc
or
fidivrs
icebp
mov
and
popa
popa
call
inc
dec
stc
mov
stc
repnz
adc
sub
insl
xchg
xchg
jg
sbb
outsb
pop
and
sbb
cmp
outsb
sbb
es
rcr
push
cwtl
pop
fsubl
bound
testb
enter
inc
dec
jg
sub
xchg
pop
cli
sub
adc
ss
xorb
cmp
stos
lret
arpl
adc
movsl
cli
dec
sbb
repnz
sbb
mov
pop
jl
test
into
xchg
sbb
mov
push
xor
xor
addr16
scas
loope
rclb
xor
and
fildll
push
and
hlt
dec
daa
mov
pop
test
jnp
fidivrl
inc
sarl
sbb
fsubrl
ds
fdivrl
xchg
pop
repnz
dec
movsl
adc
in
lahf
fidivrl
sar
sbb
xchg
push
fwait
add
inc
jo
inc
push
sbb
lods
mov
test
test
nop
mov
mov
ret
lcall
sub
iret
aas
ret
mov
fcomip
pop
adc
aaa
popf
push
or
mov
add
cmp
add
cmp
test
sbbb
mov
imul
test
ja
pop
adc
aam
imul
sbb
mov
call
cs
xchg
test
iret
in
shll
and
in
dec
pusha
mov
inc
adc
ret
pop
clc
fidivrs
sub
test
call
cmp
mov
idiv
leave
in
adc
inc
mov
test
out
mov
mov
xchg
adc
test
inc
fisttps
push
sbb
ja
jecxz
rcrb
aam
xchg
inc
fisttps
sbb
push
enter
push
popf
aas
out
inc
pop
jp
inc
aam
mov
xchg
pop
repnz
movsl
xor
iret
xor
adc
sbbl
jb
sub
mov
rorl
out
or
push
scas
lods
mov
in
cmp
sbb
dec
out
add
dec
fdivs
test
sbb
lods
push
js
pop
movsb
mov
icebp
stc
xor
mov
scas
das
lret
call
cmp
out
rclb
inc
pop
stos
pop
cmp
sub
mov
xor
addr16
inc
mov
les
xchg
sti
push
inc
inc
xchg
loop
xor
jb
fdivrs
inc
jl
and
pop
stos
adc
or
cmp
iret
xor
pop
lret
orl
jns
movsb
mov
adc
cmp
fbld
arpl
sub
or
cld
mov
mov
mov
pop
js
popa
mov
mov
inc
out
mov
stos
inc
scas
clc
adc
fimuls
out
mov
jo
ds
inc
pop
fisubrl
pushf
loopne
xchg
cs
xchg
out
in
movsl
pop
dec
and
pop
lcall
xlat
inc
enter
sbb
pop
mov
ja
fistl
repnz
pop
data16
push
fstps
push
xchg
or
adc
outsl
int
jge
sbb
cmp
je
out
movsl
scas
out
xchg
adc
addr16
xchg
sti
xchg
leave
dec
cmc
ss
pop
sub
mov
sub
out
into
xor
pushf
shr
stc
sub
clc
xor
jmp
and
clc
clc
movb
add
movzbw
sub
clc
add
mov
cmc
cmc
add
cmc
bt
xor
mov
mov
shr
mov
add
bsr
cbtw
shr
not
movzbw
and
neg
lea
rol
add
clc
pushf
sub
mov
mov
call
stc
mov
jmp
push
lock
std
std
xchg
xchg
imul
in
loopne
dec
dec
daa
lret
sub
mov
pop
cmc
ss
sbb
dec
in
jge
mov
dec
inc
and
aam
pop
lret
add
out
sub
test
mov
xchg
xor
scas
sbb
inc
inc
repz
xchg
push
xchg
lods
aam
aas
out
dec
outsb
mov
clc
xor
adc
jmp
adc
inc
cmc
add
movw
mov
movb
mov
lea
jmp
rol
movzbl
and
mov
stc
lea
movsbl
mov
movzbw
movzbw
rcr
mov
mov
movsbl
shl
movsbw
mov
shrd
sub
jmp
inc
je
or
adc
pop
movsl
or
outsl
push
mov
ja
test
lahf
xchg
lock
pop
jmp
push
popf
js
es
hlt
xchg
mov
jge
push
mov
inc
lahf
xchg
aas
mov
cmp
and
cmpsl
dec
test
mov
popa
das
sbb
fucomi
std
pop
jg
cmpsl
leave
and
mov
aaa
jl
add
jl
fstpt
stos
push
aas
sub
aaa
jmp
mov
lahf
ficomps
sub
in
or
add
dec
loop
fwait
shll
call
std
sti
ret
mov
arpl
dec
mov
push
add
xlat
mov
movsl
xor
fbld
out
mov
lock
pop
jl
xor
mov
cmp
add
add
neg
ror
stc
add
mov
rcl
add
shl
jmp
call
adc
cmp
push
call
ret
push
lock
std
xchg
popf
roll
cmp
cmp
or
mov
pusha
inc
or
cmpsl
xchg
adc
daa
andl
negb
test
es
stc
cmc
sbbb
int
shr
int3
dec
jb
ja
add
inc
xlat
iret
jno
and
fcoms
mov
je
dec
fldcw
loop
cmc
cmp
jo
cltd
cmp
pop
inc
movsb
jae
mov
stc
mov
fisubs
jecxz
xor
or
lahf
cmp
lret
adc
cmp
push
mov
mov
stc
mov
div
in
push
lahf
push
add
xor
cmp
ficoml
nop
lret
dec
pop
add
lret
stc
add
rorl
fsubrs
fdivrs
arpl
cmp
repz
sbb
add
out
jno
and
add
push
xchg
negl
and
inc
lcall
lea
jmp
sbb
mov
or
mov
adc
mov
stos
ret
jmp
push
rcll
xor
xchg
mov
icebp
or
mov
test
shufps
sbb
adcl
jp
clc
in
sbbb
push
jge
gs
dec
lret
ja
xor
adc
ljmp
cmp
xor
pushf
call
mov
sbb
or
cld
int
repnz
lahf
push
jne
mov
stos
or
ljmp
daa
arpl
fimuls
fs
mov
shll
sbb
inc
pop
push
out
adc
mov
mov
fstpl
arpl
mov
and
dec
and
xor
cmpsb
inc
fidivrs
icebp
out
mov
cmpl
cmpsl
xor
in
adc
inc
jp
sub
jbe
sti
std
popa
cld
mov
or
cmp
inc
adc
jge
pusha
cld
inc
sahf
aaa
jg
cmp
cmp
mov
cld
or
ja
cld
hlt
or
sbb
repnz
or
xor
or
sbb
stos
sub
icebp
lds
ja
adc
add
ds
fadd
pusha
mov
cmpsb
mov
lret
sbb
jmp
xor
add
pop
fldl
push
pop
sbb
mov
jb
or
or
iret
xor
mov
leave
decl
mov
push
icebp
sub
lods
mulb
je
fs
jb
push
inc
xchg
xor
pop
cmp
aad
cmpsl
mov
lret
xor
add
xchg
or
jno
popf
jp
add
mov
mov
incl
aad
stc
mov
add
xor
scas
pop
dec
push
mov
aaa
cwtl
movsb
push
push
lods
jns
mov
mov
mov
in
push
sti
or
xchg
dec
fisubs
divl
ss
mov
fistpl
cltd
nop
mov
js
mov
inc
popf
dec
mov
mov
nop
mov
fdiv
je
jns
lret
movsl
mov
xchg
or
sub
mov
gs
mov
hlt
lret
dec
push
jl
xlat
mov
in
sahf
jmp
in
fwait
loop
inc
movsb
cmp
rcrb
call
pop
cmp
ror
out
nop
out
popa
ret
cmp
cmc
adc
cmpb
fcomp
aaa
jle
gs
mov
rcrb
addr16
or
sti
xchg
adc
hlt
inc
test
xor
xor
inc
mov
mov
sbb
pop
shrl
xchg
hlt
cmpb
dec
and
bt
test
shr
cmc
jmp
add
cmp
adc
lret
xor
jecxz
or
fiadds
loop
xchg
xchg
arpl
push
cld
lret
cs
daa
je
filds
pop
cmp
stc
roll
frstor
push
sub
cmp
call
sysexit
jne
sbb
cwtl
mov
ss
lods
mov
popf
or
sub
loopne
jg
xchg
dec
test
dec
cmp
cwtl
cmp
stos
movsl
xchg
ja
mov
out
and
mov
pop
jae
cmpsl
xchg
xchg
sub
popa
fldcw
push
push
pop
ret
mov
int
push
xchg
imul
lock
mov
rolb
bound
arpl
dec
sub
lods
call
lods
sub
cmpsl
cwtl
hlt
ret
aas
lcall
stc
aam
inc
lahf
pop
bound
data16
je
rcll
jae
mov
cmpsl
das
jle
stos
xchg
adc
inc
jo
shll
cltd
adc
sbb
adc
lcall
out
cmc
fcomps
pop
sbb
outsb
or
mov
xchg
or
cmp
aad
pop
ljmp
add
mov
cmp
fldln2
sbb
jne
notl
cs
repnz
mov
mov
dec
es
adc
lret
fwait
lret
inc
mov
sbb
or
shlb
mov
test
fs
test
out
sbb
inc
or
aas
in
mov
and
pop
scas
pop
push
test
les
mov
cltd
js
stc
ljmp
repnz
dec
lods
or
xchg
das
in
hlt
insl
dec
xor
das
mov
lahf
cmp
sbb
outsb
lret
sbb
outsb
dec
shll
fs
jmp
clc
les
xor
mov
shlb
xor
mov
clc
ss
das
call
add
pop
nop
pop
adc
dec
in
lret
jne
ret
fildl
lds
sbb
add
scas
dec
inc
pusha
sti
jmp
pop
hlt
push
xchg
dec
dec
jl
sub
adc
xor
outsl
lahf
mov
mov
std
lret
lods
sub
mov
sub
in
cmp
jae
popf
scas
icebp
iret
jne
mov
mov
nop
std
jb
lods
xor
sbb
sbb
aas
pop
or
push
movsl
pop
cmpsl
xor
outsl
sub
aaa
leave
or
cmovge
pop
nop
or
lcall
sbb
push
test
mov
or
xchg
insl
xor
add
btr
xadd
mov
lea
cmp
shl
lea
sub
add
sbb
shrd
xor
sub
cmp
shl
jmp
movl
call
cltd
movsb
mov
adc
cwtl
jle
fucomip
fs
jecxz
cli
movsb
scas
fisubs
xchg
jno
mov
call
push
lods
push
jnp
jbe
enter
out
inc
loopne
pop
in
inc
sub
mov
lret
in
push
mov
lock
test
jmp
pusha
pop
imul
negl
sbb
adc
jmp
ficompl
stc
push
cs
lea
movsb
xchg
xor
inc
pushl
xchg
cmp
ljmp
cmc
push
daa
mov
pop
mov
add
in
adcl
popa
ret
inc
mov
in
test
pop
scas
mov
ds
mov
out
fcomi
inc
inc
pop
inc
jns
adc
jns
pop
je
jg
loop
sub
add
addr16
jg
add
xor
cltd
and
imul
cltd
xor
lcall
call
adc
sub
xchg
lock
je
mov
out
ljmp
rcll
jge
xor
inc
jo
call
popl
push
aaa
or
movsb
mov
xchg
icebp
sbb
xorl
ret
mov
inc
in
push
xor
jne
mov
inc
je
lock
fwait
mov
je
xchg
mov
aad
mov
or
fisubrs
idivl
jno
xor
cs
sub
inc
ret
xchg
aad
inc
xchg
cmp
mov
ss
xor
arpl
xor
push
ret
jne
jne
mov
mov
outsl
ret
pop
add
mov
sbb
jbe
mov
add
loop
ja
adc
xor
xchg
or
xchg
out
inc
push
push
xor
dec
insb
xor
movsb
push
cmc
xor
inc
gs
mov
pusha
pushf
push
aam
cli
lcall
mov
in
sbb
fiadds
mov
push
or
jbe
xor
nop
xor
lods
test
dec
out
add
xor
pop
js
int3
inc
sub
outsl
lret
mov
mov
lods
xor
rcll
fnsave
jbe
xor
mov
imul
dec
ss
sbb
inc
push
movsb
add
lahf
inc
insb
and
sub
inc
xchg
push
cmp
cmp
fdivrl
repz
insl
sbb
and
mov
sbb
repz
hlt
adc
cmp
ja
fldl
ss
lea
mov
fnstcw
add
test
inc
loop
ljmp
pop
push
ljmp
push
xchg
filds
movlhps
mov
roll
and
xor
mov
inc
pop
jno
stos
jno
jp
cs
mov
fxrstor
imul
sarl
dec
inc
out
fwait
cmp
hlt
mov
ret
push
dec
mov
mov
bound
rep
in
mov
cmp
jo
lcall
jne
sbb
stos
in
push
loope
mov
js
push
notl
inc
xchg
ret
mov
dec
scas
dec
push
sub
sbb
ja
test
testl
inc
mov
inc
xchg
xor
push
push
fisttpl
add
int
clc
push
rcrb
sub
xchg
lods
or
sbb
jno
shl
inc
in
and
hlt
ljmp
cmp
sbb
or
lcall
xor
mov
pop
aas
pop
jb
lcall
pushf
sub
ljmp
jne
mov
call
call
push
xor
dec
or
cmp
pop
into
fldenv
test
xor
lea
jl
bts
xchg
mov
shr
mov
add
mov
call
shl
push
push
push
roll
xor
xor
adc
stos
pushf
pushf
inc
jno
push
stos
arpl
push
aas
aad
and
hlt
jmp
stc
xor
cmp
lods
cmp
mov
mov
stos
xor
push
mov
jae
jae
dec
cmp
repnz
mov
inc
inc
mov
pop
jbe
add
out
dec
dec
sub
in
lahf
jne
sub
jmp
or
push
movsl
jge
fs
sbb
jmp
inc
std
mov
push
xchg
outsl
out
cwtl
lret
pop
add
push
fdivl
sbb
and
in
xchg
xor
pop
rolb
mov
rcrl
pop
pop
aad
imul
and
mov
mov
pop
pop
jb
imul
mov
mov
xchg
inc
ret
stos
pushf
lret
nop
dec
mov
pop
adc
pop
fs
decl
int
sbb
xor
in
out
je
dec
inc
imull
repz
out
inc
or
xchg
in
push
fucomp
push
test
incl
and
or
movl
cmp
mov
mov
lea
jbe
push
not
not
not
incl
inc
mov
call
mov
popf
outsb
data16
in
xor
push
es
dec
iret
pop
or
jmp
nop
pop
ret
and
rorb
jge
lock
mov
mov
dec
iret
pop
or
xlat
inc
rorl
xchg
xchg
mov
in
mov
and
sub
xchg
sub
out
xor
test
ljmp
xchg
pushf
xor
lret
repz
push
aam
pop
xchg
cmp
and
das
mov
rcrl
or
stos
pusha
push
test
adc
popa
jp
pop
pop
int
ret
xor
loopne
dec
jbe
fdivs
insb
cmp
xchg
cli
xor
sbb
adc
lahf
lcall
outsb
jp
lds
dec
cli
ds
sbb
scas
pop
cwtl
mov
ljmp
cld
push
sub
fnstcw
sub
or
clc
jmp
jae
xchg
mov
add
test
pop
sbb
xchg
lret
or
jg
js
pop
pop
out
fcmovbe
ret
push
int
push
cmpl
pop
testl
fmuls
scas
inc
popa
sahf
fxtract
mov
jbe
jmp
mov
sub
scas
cmc
sub
xchg
ljmp
pop
aas
fdivl
push
mov
sbb
adc
and
inc
push
pusha
jmp
push
pushf
mov
jmp
push
push
pusha
movl
pusha
lea
jmp
repz
xor
or
pop
adc
arpl
add
out
int
popa
enter
inc
fnsave
insb
add
cwtl
pop
fisubl
ret
push
cmp
into
mov
push
enter
cmp
int3
in
dec
and
push
pop
cmp
cs
push
das
inc
xor
xchg
push
dec
xchg
lock
mov
sbb
and
inc
subl
lret
cmp
and
rcrl
pushf
std
xor
xor
adc
cmpsb
inc
je
mov
repz
sub
add
shrl
aaa
fs
mov
pusha
popa
inc
xchg
ret
nop
or
pusha
xor
mov
fsubs
cmc
pop
pop
pop
dec
mov
jnp
jp
adc
and
testl
sar
outsb
push
pop
pop
dec
lods
jnp
or
jp
add
out
scas
xchg
dec
lock
mov
cwtl
mov
dec
mov
shll
jg
mov
int
outsb
sub
mov
jg
hlt
jno
dec
cmpxchg8b
mov
mov
and
js
cmp
mov
pop
fs
or
outsl
jno
clc
mov
test
cmpsb
test
test
pop
aad
cmpsb
or
int
pop
mov
fidivrs
xchg
cs
xor
fldcw
insb
mov
mov
dec
xchg
jo
jnp
xlat
push
pop
cmpsb
lret
outsb
ljmp
xchg
jecxz
push
xchg
fidivl
xchg
call
pop
xchg
push
mov
inc
push
cmp
inc
mov
xor
ss
adc
dec
sti
bound
xchg
jb
hlt
lcall
pop
inc
cmp
out
sub
xor
in
nop
push
pop
mov
inc
hlt
mov
dec
and
cld
mov
iret
testb
cmpsl
push
jmp
xchg
xchg
xor
incl
jae
inc
aad
mov
scas
sbb
daa
shrb
cld
lahf
call
ja
cmp
movb
movb
or
add
not
mov
add
sub
inc
jg
add
not
rcr
mov
pushf
cmc
pushl
push
sub
pusha
cmp
stc
cmp
xor
bt
pop
shl
stc
mov
shld
adc
shl
adc
mov
jmp
mov
aam
call
out
iret
xor
xor
mul
ret
mov
shrl
lds
mov
icebp
pop
xor
mov
mov
add
sahf
xor
adc
fisttps
cmpb
mov
lcall
mov
test
push
in
dec
mov
out
cs
add
loope
jae
aam
addr16
push
mov
mov
sub
xchg
sub
ja
test
cli
and
repz
jle
cld
or
mov
fistpll
aam
pop
mov
add
xor
add
imul
or
fdivr
sub
sbb
fs
add
addl
mov
cli
sub
sarb
mov
push
iret
xor
xor
fistpll
sbb
roll
lods
jbe
sub
xor
dec
sub
xchg
cli
inc
ss
sub
mov
and
mov
outsb
pop
insb
sbb
int
es
rclb
xchg
lret
js
jg
mov
xchg
pop
xchg
stos
out
adc
mov
or
mov
jge
stc
in
fldl
inc
movsl
cmpsl
mov
mov
xlat
aas
xorl
sub
push
lret
fwait
inc
cmpsb
jmp
jmp
pop
pop
jmp
dec
adc
add
fwait
in
int
clc
sbbl
int3
int
add
cltd
mov
pop
fsubrl
pusha
rcrl
je
dec
sub
fildll
test
repnz
outsl
sbb
lahf
inc
cmp
pop
inc
pop
dec
cmpsb
lods
outsb
pop
jbe
int
shll
or
push
inc
sbb
cld
mov
or
lahf
sbb
and
xor
push
fistpl
mov
int3
inc
leave
cmp
cmp
in
push
push
inc
repnz
and
xor
dec
mov
call
scas
adc
loope
pop
xor
scas
scas
mov
ss
mov
pop
adc
or
jl
pop
mov
out
lcall
ljmp
clc
pop
push
adc
test
cmp
loope
loope
adc
in
cs
pop
jg
sbb
rcrb
or
push
push
popf
rorl
mov
pop
subb
enter
gs
mov
dec
push
and
test
movsb
jmp
jnp
clc
pop
push
clc
mov
fxtract
pusha
pop
or
addb
pop
rol
mov
adc
repnz
jnp
das
notb
adc
xor
cmpsb
xchg
dec
mov
or
sub
xor
cmc
mov
sub
xor
xchg
and
ret
std
lcall
cld
in
or
pushf
jg
mov
movlhps
data16
testb
lret
orl
jg
xor
sahf
nop
jl
dec
sahf
ficomps
mov
movsb
leave
pop
jge
lods
leave
out
stos
xchg
lret
dec
outsl
ja
data16
imul
mov
cwtl
xchg
add
jp
negb
in
push
cld
cmp
loope
sbb
sub
xor
or
inc
std
push
xchg
insb
jb
repz
sub
inc
push
jb
jbe
fnstenv
jae
lret
aad
pusha
dec
int3
lods
push
icebp
sub
xchg
push
outsl
pop
imul
loope
ret
loopne
lds
test
mov
mov
xor
mov
pushf
movl
pushf
pusha
pushf
push
lea
jmp
push
call
xchg
in
mov
imul
pop
cmpsb
inc
jg
mov
mov
dec
add
mov
sub
sti
in
test
gs
in
out
negl
inc
cmc
jno
addl
bound
and
mov
jbe
xor
pop
lods
mov
leave
in
dec
jo
lock
mov
inc
les
jmp
ljmp
mov
mov
or
add
scas
cmp
push
mov
lock
mov
scas
test
fcomps
mov
inc
xorl
test
push
xor
xchg
out
int
data16
adc
ret
push
icebp
les
loop
push
mov
adc
imul
mov
shll
add
test
std
in
cmpsb
sbb
lret
inc
fsubr
dec
clc
xchg
pop
adc
insb
xor
inc
sub
pusha
jl
mov
mov
mov
xchg
loop
es
dec
mov
call
mov
stc
clc
movsbl
lea
lea
rcl
mov
adc
shld
setno
push
mov
jmp
pop
cs
dec
mov
aaa
inc
add
and
mov
pop
in
cs
data16
sbb
and
ja
ss
in
outsb
pop
inc
divb
adc
inc
stos
xabort
mov
sbb
xchg
outsb
lea
push
mov
rcl
fdiv
cmp
sub
push
pop
adc
or
fwait
mov
or
mov
mov
cvtps2pd
xor
xor
pop
inc
dec
mov
jnp
or
push
ss
xor
mov
cmp
sub
jmp
xor
outsb
dec
mov
movsb
sub
jle
loop
mov
shlb
insl
lock
loope
decl
outsb
loopne
cmpsl
lods
jbe
push
mov
mov
jae
xlat
shl
loope
inc
and
ja
mov
xchg
loope
ljmp
ret
mov
mov
test
push
jecxz
xchg
loope
jb
pushf
mov
pushf
pusha
mov
pushf
inc
cmc
ror
add
rcr
clc
and
movzbw
and
sub
shl
ror
or
dec
pushl
test
mov
rcl
and
sub
test
movzwl
neg
mov
cmc
jmp
push
call
lock
add
loopne
fstl
lods
push
imul
popf
insb
faddl
adc
ja
shrb
hlt
cli
xchg
fwait
mov
xor
jo
mov
call
scas
lahf
mov
and
add
xchg
loopne
or
push
lock
std
std
mov
insl
arpl
dec
push
cmp
int
sbb
mov
pop
add
xor
sbb
dec
lods
jge
imul
sbb
push
iret
add
in
sub
test
popf
cwtl
inc
xchg
mov
inc
ss
in
xchg
push
cmpsl
hlt
in
fucom
mov
lret
jb
push
enter
fimull
and
scas
ja
cmp
mov
iret
mov
add
outsl
inc
pop
cltd
add
pop
and
mov
xchg
lods
pop
push
xor
xchg
outsl
loopne
mov
inc
inc
xor
push
jae
xchg
pop
adcl
pop
and
pop
pusha
mov
dec
pop
mov
nop
fstpt
jge
int
sarb
ljmp
mov
mov
pusha
or
cmpsb
aaa
push
push
cmp
stos
and
jge
xchg
addr16
or
pushf
orb
sub
pushf
movl
pushf
lea
jmp
jnp
push
call
movl
pushf
lea
jmp
mov
popa
pop
or
and
xor
in
out
jle
xor
inc
and
mov
xchg
add
mov
popa
subl
loope
fsub
mov
sub
mov
lret
cmp
jg
fwait
xor
pushf
sub
inc
cmp
push
mov
test
mov
test
mov
mov
jmp
pusha
push
call
pop
pop
pusha
aad
jb
dec
addr16
jl
test
dec
aam
enter
push
jns
push
push
xchg
sbb
dec
loop
pusha
push
cmpsb
pusha
jg
lahf
cs
cmp
popa
dec
mov
mov
xor
mov
movsb
inc
lahf
int
movsb
mov
inc
adc
das
iret
and
mov
mov
jns
pop
lods
cwtl
ret
lret
mov
xor
jno
mov
mov
or
aam
imul
mov
xlat
inc
pop
andl
xor
leave
fstpt
insl
aas
inc
aam
je
sahf
xchg
or
mov
mov
adc
inc
and
into
das
call
jcxz
insb
insb
lods
mov
sub
jo
and
inc
jecxz
xchg
aaa
sbb
sar
sub
fwait
notl
push
scas
push
aaa
mov
notl
pop
std
out
aaa
sub
das
and
sbb
sbb
adc
add
lret
push
dec
push
scas
sbb
or
mov
mov
jo
xchg
push
clc
sbb
pop
push
jbe
sbb
loop
jge
iret
sbb
sub
push
shl
sbb
das
cmp
mov
mov
push
lahf
out
pop
lret
cmp
adc
adc
xchg
add
das
sbb
pop
jb
push
fdivrs
jle
stos
in
cwtl
dec
fiadds
insl
aam
dec
jns
add
push
notl
in
in
pop
mov
fstpt
in
in
repnz
stos
ret
adc
adc
in
nop
cmp
xor
sub
add
fsubrs
mov
clc
fcmovnbe
mov
jno
pop
in
sbb
pop
push
cmc
loop
mov
mov
push
add
cmp
xchg
fstpt
es
loope
stos
jno
jge
out
mov
xor
imul
ss
xchg
xchg
faddl
test
sub
mov
stos
push
cmp
mov
adc
in
xchg
fdivrl
out
pop
add
test
jo
and
push
push
stos
dec
push
cmp
ljmp
into
icebp
ret
in
out
mov
cmp
ror
enter
cmp
jmp
shrb
sub
aam
adcb
xchg
mov
pop
xor
add
outsl
movsl
xchg
je
sub
sbb
inc
scas
clc
cltd
ds
add
cmp
or
outsb
mov
and
xor
das
xor
frstor
mov
mov
lock
add
and
out
dec
jne
sub
lret
sub
mov
insl
ret
stos
inc
imul
inc
push
inc
push
cmp
dec
aas
jl
pushf
repnz
mov
das
dec
or
adc
pop
cmpsb
test
shlb
xchg
mov
je
dec
out
leave
iret
mov
inc
xlat
mov
cmp
mov
test
or
xchg
mov
adc
sub
iret
sbb
in
imul
rorl
pop
add
imul
jo
iret
xor
sub
test
mov
sbb
outsl
ficomps
nop
test
les
mov
add
add
xor
pop
addr16
xor
adc
and
nop
and
adc
mov
mov
xchg
inc
mov
add
stos
ljmp
mov
scas
mov
cltd
inc
repnz
nop
sub
jge
cmp
xchg
ds
xor
pop
loopne
rcl
sub
fcoms
ss
test
push
push
lods
xor
pushf
call
jl
fildl
leave
add
bound
mov
loopne
mov
xor
sub
xchg
sbbl
pop
mov
fdivr
or
sub
subl
out
fistpll
insl
nop
bound
insl
jecxz
stos
imul
mov
arpl
je
stos
and
test
out
add
jle
xor
hlt
push
mov
mov
or
loope
push
fbstp
xchg
ficoml
outsb
jp
mov
pushf
movl
jmp
rcrb
or
out
cs
xchg
mov
pusha
mov
sub
ret
cmp
lea
clc
and
filds
sahf
xchg
xchg
js
inc
lods
pop
es
inc
decb
cmp
or
and
jmp
ret
mov
mov
out
sahf
mov
shl
inc
adc
mov
test
cltd
adc
mov
or
in
fdivrl
jae
in
daa
ds
push
mov
adc
pop
and
jg
das
loopnew
js
sbb
xchg
in
les
push
adc
push
lcall
xchg
scas
cwtl
int3
push
pop
or
mov
out
dec
inc
mov
movsb
push
push
jl
insl
movsb
xchg
idivl
popa
pop
call
out
shrl
lods
idivl
jmp
popa
andl
add
sub
mov
shlb
pop
cwtl
arpl
mov
shlb
ret
pop
cmp
fs
push
in
movsb
xor
sarb
mov
xor
lds
cmp
adcl
jle
pop
fmul
push
or
imul
lret
shlb
imul
sbb
and
pop
fcomps
movsb
sbb
cmpsb
jnp
cli
rol
or
sub
xorl
mov
repnz
hlt
jl
mov
mov
pop
sub
fwait
sub
push
jne
testb
and
xchg
fistpll
clc
fnstsw
notb
testb
adc
std
aam
sahf
xchg
rcrl
xchg
push
in
sub
pusha
mov
aad
dec
add
shrl
sbbl
and
call
xchg
dec
rorb
mov
xor
mov
aaa
pop
scas
add
shll
xchg
fdivrs
xchg
icebp
mov
lea
jp
movzbw
mov
xchg
lea
lea
lea
mov
movsbw
jmp
jmp
mov
repnz
xchg
mov
fidivs
popf
xor
add
cmpsl
xor
mov
je
pop
rorb
xchg
ret
clc
aam
ja
popf
or
pop
and
ljmp
imul
pop
push
leave
push
push
leave
rcll
mov
outsb
cmp
lret
cmp
in
sub
ret
mov
loopne
dec
push
aad
jle
add
bnd
aam
and
daa
jnp
in
mov
popf
popf
idiv
leave
xor
xor
incb
enter
sarb
sbb
adc
cld
call
fs
dec
adc
and
and
je
adc
pop
pop
sarl
ret
push
outsl
fidivs
pop
xor
xor
cmp
and
add
jl
ss
inc
pop
or
mov
xchg
jne
out
sbb
test
sbbl
in
jno
cmp
inc
push
sbb
push
popa
xchg
in
jmp
ds
andb
out
repz
test
sbb
pop
ret
pop
add
repnz
adc
ret
in
and
ficoml
adc
cmp
adcb
mov
mov
sub
mov
xor
xchg
xor
leave
aam
lock
mov
rclw
ljmp
sbb
aad
shrl
lret
mov
adc
jp
add
add
popl
popf
ljmp
movsb
push
leave
stc
nop
popl
js
out
cmp
push
ret
je
push
aaa
pop
idiv
cmp
shll
dec
inc
adc
stos
nop
add
push
xor
cmpps
ficompl
sbb
nop
push
jb
xlat
jae
mov
stc
xchg
out
fadd
jle
lea
hlt
nop
push
adc
adcb
sarl
jne
in
mov
notl
cmpsl
mov
mov
hlt
test
push
jmp
in
xchg
pop
dec
mov
test
les
add
or
scas
cwtl
and
mov
mov
movsl
outsb
fsubrl
jnp
outsl
sub
test
cmp
xor
mov
mov
and
lods
mov
cmp
jecxz
lret
fmulp
xor
push
or
lahf
pusha
pop
icebp
cmp
cltd
jne
adc
repz
mov
mov
ret
mov
divl
xchg
aad
nop
adc
inc
and
pop
lods
cli
punpcklbw
imul
test
dec
loopne
sbb
outsb
out
arpl
loope
inc
mov
mov
add
sub
in
cmpsb
pop
repnz
loop
stos
jle
pop
or
out
add
push
cwtl
add
xlat
fistl
mov
insb
in
out
dec
scas
in
or
ljmp
imul
pushf
dec
test
sub
out
inc
stc
rclb
mov
or
xchg
aam
xor
jo
std
call
mov
adc
enter
sbb
jbe
ficoml
and
rol
ficoml
xchg
xchg
jne
push
dec
sub
cmp
hlt
scas
or
cmpsb
mov
push
push
mov
mov
dec
imul
jmp
or
mov
mov
fwait
arpl
mov
icebp
xchg
cmp
movsb
nop
cmp
das
dec
nop
into
clc
mov
daa
nop
mov
or
in
into
or
fsub
fs
insl
xor
or
xchg
sbbl
dec
cmp
aad
iret
add
xchg
repnz
xor
xchg
mov
lock
test
int
packuswb
and
sbb
or
jmp
xor
push
mov
lcall
out
cmp
inc
cmc
push
xchg
mov
pop
aad
scas
pop
cmp
cs
dec
mov
sbb
mov
adc
loopne
cmc
add
test
mov
adc
pushf
push
push
repz
cwtl
imul
fdivrs
inc
sub
dec
out
sahf
lcall
push
mov
mov
dec
scas
sbb
adc
push
in
rolb
xchg
mov
in
clc
scas
imul
insl
nop
stos
aad
push
pop
mov
xor
push
lods
push
or
or
out
imul
call
or
aam
add
or
inc
cs
mov
dec
dec
sub
inc
add
mov
pop
and
jb
add
xor
lahf
sbb
mov
push
arpl
ds
popa
adc
icebp
sbb
fists
fs
push
pop
lret
inc
and
movsb
imull
xchg
sarb
inc
mov
push
jnp
cli
xor
inc
pop
pop
xchg
and
or
jne
bound
or
xchg
dec
jo
jns
movsb
call
or
aaa
arpl
add
xchg
or
ds
pop
aas
iret
fsts
outsl
xor
push
repz
sbb
pop
daa
cmp
jns
icebp
or
por
mov
jl
inc
sub
lret
movsb
hlt
add
insl
lret
add
add
adc
sbb
cmpsb
nop
pop
imul
inc
mov
and
cltd
fisubs
ficoms
fidivrs
push
mov
scas
inc
dec
cmp
insl
outsb
aaa
or
pop
stos
and
mov
out
sub
roll
dec
mov
push
lea
jmp
xor
dec
into
mov
lods
adc
in
push
sub
fsubrs
nop
jge
imul
mov
data16
bound
inc
mov
jae
repz
xlat
xchg
inc
pop
cmp
shll
ds
pop
mov
pop
xchg
adc
dec
call
and
int
mov
shl
clc
mov
and
sti
cmp
ljmp
loopne
xlat
mov
movsl
xchg
in
xlat
pand
dec
out
cmc
test
push
lea
jl
test
dec
test
mov
pusha
mov
btc
ror
bsr
lea
btr
shr
add
neg
add
mov
pop
sbb
btr
bsr
lea
sbb
pusha
xchg
test
mov
add
lea
inc
xor
xchg
mov
clc
btc
setbe
or
shr
shrd
dec
add
movsbw
not
shr
shr
shl
dec
add
mov
clc
mov
bt
inc
ror
shl
shr
shrd
xor
shrd
add
shr
pop
clc
push
and
bsf
mov
test
cmc
shr
pushl
add
shrd
rcr
adc
and
bsr
adc
add
xor
shrd
mov
mov
add
neg
shr
sub
lea
rol
stc
movzbw
neg
mov
rol
jmp
pusha
push
movl
pusha
movl
mov
lea
jmp
push
movl
push
jmp
call
jmp
pushf
jmp
pop
out
mov
add
mov
mov
inc
aad
dec
sub
into
or
dec
test
xchg
pop
and
lcall
lret
fdivrs
in
loop
testb
dec
mov
les
sbbl
ds
mov
ss
adc
xchg
pop
idiv
insl
int
mov
sti
xchg
testb
sub
orl
inc
xchg
push
sub
mov
jg
xchg
cmp
sbb
sbb
pop
inc
test
pop
rcll
ss
mov
in
or
push
imul
ret
test
pop
xchg
sub
dec
and
mov
cmp
insl
inc
pop
jne
gs
pop
inc
jbe
ljmp
fstpt
pop
sbb
push
outsb
pop
shrb
add
scas
mov
xchg
scas
add
int
movsb
adc
push
jbe
out
mov
xor
add
jbe
int3
mov
jae
in
aas
add
stos
xchg
lret
loop
mov
pusha
dec
push
add
rdtsc
adc
pop
imull
dec
in
and
jno
stc
mov
loope
dec
xchg
cmp
insl
sub
lds
lret
add
add
mov
pop
notl
jge
iret
mov
add
dec
cli
xlat
loop
and
cmp
xchg
inc
cmp
lea
push
jno
inc
ficompl
aas
push
decl
loop
dec
lcall
leave
jecxz
hlt
fstl
push
add
jg
insb
jne
jne
pop
lock
in
and
and
in
cmpsb
add
sub
lds
lods
into
and
push
mov
xor
test
cmpsl
mov
dec
call
and
dec
in
xchg
int
sti
adc
hlt
or
insl
mov
mov
and
pushf
das
outsl
add
hlt
repnz
call
pusha
movl
jmp
call
sub
inc
pop
sbb
push
sarl
shl
inc
inc
inc
pop
pop
or
mov
dec
ret
xchg
pop
inc
gs
jns
dec
dec
sub
in
lds
mov
insl
in
ja
wrmsr
cs
pop
push
stc
fidivrl
jae
push
xor
sub
lret
stc
adc
out
push
adc
into
mov
or
stc
dec
divb
mov
call
inc
inc
jge
xchg
push
fxch
cmp
shlb
xor
jmp
movl
pusha
mov
lea
jmp
push
pushl
push
pushl
movl
pusha
push
mov
lea
jmp
ljmp
test
mov
in
mov
add
and
mov
inc
mov
nop
mov
dec
sarl
cs
movsb
ja
pop
push
pop
push
jno
nop
mov
sbb
dec
push
bound
sub
jl
imul
dec
mov
push
sete
mov
and
xlat
fistps
jno
movsb
fbstp
pop
xchg
test
mull
sbb
shl
jl
jne
mov
mov
adc
mov
test
and
adcl
sbb
stos
jbe
repnz
iret
fst
fimuls
push
pop
cltd
test
inc
and
dec
sbb
mov
lret
and
xor
pushf
lea
jbe
setbe
pushf
call
pusha
movl
pusha
pushf
pushf
jmp
cmp
enter
push
mov
jmp
hlt
pop
mov
or
inc
mov
popf
push
rcrl
jno
ss
push
mov
out
adc
jp
pop
out
shrd
fsub
inc
add
jb
notb
cmpsb
pop
inc
mov
lea
xor
jmp
jb
mov
jecxz
dec
int
xor
leave
andl
scas
stos
test
xchg
xchg
clc
xchg
aam
push
inc
andl
mov
fs
jno
shlb
bound
cmc
mov
xchg
lret
loopne
jo
mov
xchg
pop
fs
adc
ficomps
retw
xor
push
pushf
pusha
call
mov
pushf
movl
push
call
and
cmp
jmp
pushf
pusha
movl
call
scas
xorb
xlat
push
sbb
mov
push
ret
add
xchg
xchg
jge
sub
outsb
mov
test
sahf
sbb
rcrb
xor
lds
faddl
aam
mov
mov
xorl
cwtl
sub
mov
pushl
movl
jmp
sub
es
std
and
mov
inc
fwait
je
sub
mov
dec
xchg
cmp
or
jb
jb
mov
pop
pop
imul
cmc
lock
lods
lahf
sub
or
jl
arpl
das
or
sub
sbb
pop
inc
mov
sarl
mov
mov
mov
pop
xor
mov
jl
in
adc
sbb
mov
cmp
add
sbb
ljmp
test
les
stos
inc
dec
or
andb
dec
sahf
push
popa
mov
cmc
imul
jne
cmp
xchg
jl
ds
xor
rolb
sarb
mov
add
xchg
andl
incl
jmp
fidivrl
xor
cmpb
fstl
lahf
mov
leave
pop
stos
ljmp
cmp
in
rcrl
mov
lods
ja
inc
jle
and
sub
cwtl
sbb
dec
sbb
popf
mov
xchg
sub
xchg
cmp
pushf
repnz
lock
push
out
sub
ror
or
or
lret
dec
in
lahf
pop
loope
jnp
fdivs
adc
les
adc
or
pop
ret
cmp
mov
out
adc
movsl
jnp
dec
movsb
adc
movsb
dec
fidivl
lahf
stos
pop
popf
mov
or
out
cmp
mov
or
mov
notl
aam
lahf
std
pop
mov
nop
sbb
imul
loop
call
fsts
adc
int3
js
sbb
mov
and
es
lcall
stc
xchg
mov
jecxz
movsl
mov
push
int
mov
into
cwtl
push
fldl
shr
or
daa
sbb
mov
insl
or
ret
mov
mov
sbb
jg
jne
sub
movsb
push
fdivrp
icebp
mov
and
lds
fstpl
mov
out
dec
lods
ja
lahf
shlb
jo
call
nop
ljmp
pop
ret
mov
dec
xchg
xor
cmp
xchg
mov
outsb
sub
insb
xchg
movsl
stos
xchg
fstpl
jo
or
dec
push
fildll
mov
in
and
or
ret
pop
lds
sub
mov
jne
pusha
xor
dec
jl
xor
mov
jo
mov
cltd
push
jecxz
xor
xor
in
pusha
jo
pop
stos
mov
dec
sbb
or
xchg
mov
adc
leave
iret
xor
addr16
mov
mov
xchg
dec
out
push
fs
mov
shlb
test
lcall
pop
ret
cmp
lret
xor
add
sbb
repz
dec
insl
xor
loope
ret
sbb
insb
sarl
push
in
inc
jno
fsubrl
pop
fwait
imul
in
movd
xchg
je
dec
push
pop
test
out
std
les
sbb
sti
xchg
pushf
into
std
xor
into
mov
add
mov
sbb
loop
lods
aam
cmpsl
lods
push
fs
das
add
cs
inc
jbe
cmp
lret
leave
fs
nop
out
pop
repnz
scas
fcompl
lret
push
bound
ret
inc
jns
dec
dec
pusha
mov
pushf
mov
mov
cwtl
pushf
sbb
jbe
hlt
jne
test
sbb
xor
and
xor
sarw
scas
mov
lret
sub
inc
insl
sbb
xchg
and
fsubrl
das
cmp
mov
mov
shll
mov
mov
les
push
pop
adc
mov
mov
xchg
jno
shrb
in
repz
aaa
adc
mov
pop
lret
in
shlb
jp
les
adc
repnz
mov
xchg
add
cltd
icebp
movsb
xchg
jae
push
outsl
repz
jne
adc
dec
push
sub
loope
pop
xor
fsubrl
fmul
lahf
jmp
cwtl
adc
push
push
out
popf
orl
into
cmp
clc
push
cs
xchg
scas
push
mov
cmp
xchg
lds
pop
xchg
sbb
ljmp
mov
subb
fiaddl
adc
and
push
icebp
int3
lcall
adc
jns
add
test
lahf
test
cmp
cltd
mov
stc
cltd
test
inc
out
pop
push
in
lea
pop
popf
stc
imul
mov
fs
xchg
das
ljmp
mov
pop
mov
sbb
out
and
dec
mov
add
mov
xor
scas
pop
sti
shrb
add
jecxz
std
pop
mov
lock
fwait
lret
sub
in
pop
cld
cmp
jl
shll
push
fwait
jge
cmpsb
inc
icebp
lods
inc
push
leave
sbb
cmpsl
jno
sub
enter
pop
daa
lods
mov
xchg
das
cltd
or
sbb
xchg
lock
push
and
xchg
xor
testb
xor
sub
out
jae
insb
rorb
loop
popa
jl
in
push
out
dec
jmp
outsb
shl
aaa
pusha
dec
push
and
xchg
hlt
sahf
push
mov
or
sbb
call
daa
xor
arpl
adc
sbb
in
push
shll
cltd
jne
jl
fildl
bound
sbb
dec
push
lock
sahf
cli
inc
data16
mov
jmp
cld
jmp
scas
xor
iret
xchg
push
xchg
and
test
mov
mov
mov
dec
push
cld
ljmp
call
dec
int3
sub
xor
adc
daa
inc
sahf
sbb
fidivrl
xor
xor
pushf
pushf
movl
push
call
mov
notb
push
fidivs
adc
sarl
add
stos
push
inc
or
cli
cli
xlat
push
ret
push
icebp
and
repnz
dec
xchg
rcrl
and
pusha
dec
in
push
out
add
jno
sbbb
les
dec
jl
mov
xchg
push
mov
cmc
push
add
out
mov
jo
outsl
decl
lret
jo
cmpl
jnp
scas
lret
imul
aaa
jo
add
jmp
in
sbb
and
pop
sti
add
mov
pop
or
xchg
and
cmc
outsb
leave
arpl
sarb
jnp
movsb
sbb
imul
lretw
push
fidivrs
jae
ret
shll
push
insb
or
orl
xchg
lret
gs
jo
push
sub
addl
mov
add
pusha
mov
push
pop
mov
inc
aas
addb
xor
call
pusha
pushf
call
jmp
pushf
push
pusha
movl
jmp
jmp
setnp
mov
test
mov
cmc
shr
call
sbb
jns
jno
add
jle
loopne
repnz
jae
aad
ret
or
pop
or
or
jmp
inc
mov
and
add
add
les
push
imul
paddb
cmp
stc
sub
lret
dec
popa
pop
bound
adc
nop
xor
bnd
sbbb
or
leave
and
adc
add
adc
mov
ficoms
popa
dec
dec
xchg
rcrl
cmp
sbb
outsl
inc
jle
xchg
xor
mov
lods
sbb
or
js
sub
mov
or
cmp
loopne
xor
out
aam
loopne
fbstp
mov
xchg
xor
scas
mov
or
test
or
push
pop
cs
std
cmp
xchg
rcll
sbb
mov
ljmp
mov
dec
mov
loope
sub
adc
out
addr16
imul
nop
xor
test
sti
or
arpl
ret
jne
sub
idiv
lds
xchg
int
lods
push
adc
or
test
adc
cmc
mov
mov
in
xor
sbb
aam
mov
push
mov
inc
sahf
pop
pop
fs
mov
ss
jle
into
sbb
cmp
out
out
sub
xlat
xor
push
loop
into
mov
xchg
add
imul
cmp
push
add
ficoml
out
out
sbb
mov
jge
mov
jbe
adc
or
mov
addr16
outsl
jne
iret
inc
push
das
int
in
sub
daa
dec
insl
pop
out
test
sbb
movsb
jbe
push
push
sarb
movsl
jne
rcl
dec
sbb
int
adc
pop
popa
xor
test
jbe
mov
addl
dec
mov
ds
inc
mov
xor
push
inc
xor
mov
xor
pop
ret
movsl
cs
mov
mov
ret
arpl
xor
xor
pop
add
jo
pop
adc
ds
sub
cli
jb
arpl
dec
xchg
in
fmull
and
call
gs
leave
xchg
std
jmp
daa
pop
inc
das
shlb
das
sbb
push
push
in
xchg
lret
add
scas
xchg
jns
incl
push
push
insl
pusha
push
sub
xor
adc
imul
out
xor
shlb
lahf
pop
mov
jne
inc
sbb
xor
scas
jle
xchg
and
xchg
fucomi
mov
inc
sub
cmp
push
aam
cmp
fidivrl
mov
mov
out
nop
mov
xchg
stos
pop
mov
jbe
lods
pop
test
sbb
cmp
adc
test
pop
in
dec
xchg
jno
cmp
sbb
sbb
push
sbb
mov
cltd
call
add
pop
stos
and
push
dec
xchg
insl
movsb
adc
int3
sub
sub
imul
neg
test
xchg
xor
std
push
inc
cmp
imul
imul
mov
stc
inc
lcall
xor
mov
mov
sub
xchg
leave
sahf
addl
or
mov
loop
mov
push
hlt
ja
adc
and
and
scas
sahf
shr
movb
clc
pop
addb
aam
clc
adc
xchg
pop
sti
mov
enter
clc
fs
lods
das
clc
mov
jb
and
add
es
xlat
inc
icebp
fisubs
mov
cmc
aaa
popf
jno
lea
ds
mov
mov
test
pop
xchg
xlat
add
lods
and
lods
jno
push
sti
jmp
cmp
mov
cld
push
jl
inc
xor
jb
loopne
imul
sub
adc
sti
push
mov
cmp
lret
pushf
push
mov
xchg
mov
imul
or
insl
nop
arpl
inc
in
xchg
mov
xchg
dec
int
xlat
and
scas
adcl
int3
and
out
xor
into
jns
push
inc
arpl
call
xor
adc
dec
aam
or
xor
in
addr16
mov
pop
lods
push
xchg
mov
fdivp
xchg
add
in
popf
adc
mov
sbb
leave
pop
pop
popf
mov
int
push
sub
clc
push
mov
inc
mov
test
mov
cli
sti
dec
scas
or
xchg
inc
xchg
sub
in
call
sbb
pop
cmp
pop
push
pop
push
in
fiadds
add
sbb
inc
pop
mov
mov
lods
or
sbb
push
cs
in
in
xchg
scas
inc
inc
mov
loope
aam
xor
cld
push
enter
add
xchg
xor
shr
clc
bt
jmp
lea
jge
pusha
pop
jmp
call
push
pushf
movb
movl
pusha
lea
jmp
push
call
call
testl
cmpsb
mov
mov
push
mov
fwait
pop
dec
mov
xchg
mov
and
loopne
cld
mov
clc
dec
adc
bound
xchg
mov
inc
fdivl
adc
pop
inc
inc
and
xor
xchg
cmp
mov
rol
cmc
cmpxchg
push
mov
testl
lcall
jne
sahf
lret
popf
leave
lds
jne
mov
clc
and
in
sbb
mov
sbb
popa
iret
aam
pop
mov
aas
jmp
lods
sbb
push
add
stos
test
dec
mov
sub
fildl
mov
fbld
test
test
aam
push
mov
test
leave
fwait
dec
add
jno
lock
lret
pop
mov
sub
push
das
int3
push
mov
fsubrs
sti
fs
push
int3
inc
gs
inc
ja
mov
mov
mov
imul
cltd
push
push
imul
sti
push
repz
out
or
jle
dec
jae
aam
lret
inc
cltd
repnz
push
xor
mov
xor
add
imulb
js
xor
enter
ljmp
pop
sub
jo
xchg
pushl
xchg
mov
adc
test
adc
mov
mov
cmp
mov
mov
or
je
shlb
xchg
hlt
xchg
iret
mov
mov
mov
push
mov
mov
adc
pop
hlt
js
scas
dec
inc
xchg
inc
xchg
ljmp
fimuls
cltd
int3
pushf
jno
push
mov
sarl
cwtl
add
push
jo
jl
xchg
mov
sub
adc
cmp
mov
mov
cmp
jmp
cmp
arpl
sub
add
pusha
lods
mov
sbb
xor
hlt
or
lock
inc
add
push
pop
daa
cli
jbe
in
fistpll
jnp
sbb
mov
xor
mov
mov
xchg
and
cmp
stc
sub
mov
lret
pop
xchg
mov
add
jecxz
or
fs
mov
pop
int3
lahf
leave
and
or
mov
fimull
xor
pushf
lea
jmp
push
inc
jo
out
push
sbb
decl
fiaddl
jno
test
sahf
xchg
aam
iret
sti
jle
xor
add
ljmp
xorl
mov
xchg
push
in
xchg
sbb
repnz
dec
std
les
movsl
fisttpl
es
adc
cs
popa
shrd
mov
repnz
insb
add
pop
fdivrs
aam
or
cmp
dec
imul
mov
cmc
or
cs
xchg
stos
sub
jae
mov
mov
stos
lea
pop
cltd
andb
pop
in
xor
xchg
pop
popf
cmp
icebp
sbb
lcall
or
imul
dec
fwait
xlat
xor
test
cmp
or
xchg
cmp
shlb
xchg
cmp
imul
ds
jo
xor
repnz
dec
stos
lods
mov
mov
mov
pop
cmpsb
lret
in
sbbb
in
movsb
mov
or
movsl
add
sub
enter
inc
jecxz
or
add
xchg
das
pop
sti
pop
xchg
jecxz
fnsave
pop
adc
pop
mov
dec
outsl
adc
in
mov
mov
jb
inc
adc
call
stos
out
pop
cmp
test
aaa
adc
inc
outsb
mov
sbb
leave
stc
shrl
dec
pop
inc
popa
or
xor
int
adc
mov
mov
push
arpl
xchg
sbb
push
adc
mov
push
mov
fdivr
or
cmc
fwait
sub
and
fisubrl
das
jb
xlat
cmp
jl
pop
mov
xor
or
mov
fidivs
ss
stc
out
mov
into
pop
and
hlt
sub
sar
mov
cmc
add
add
outsl
insl
and
in
out
shr
sbb
cmpsl
test
mov
pop
push
inc
inc
xor
xchg
ljmp
pop
aas
iret
cmc
push
adc
adc
les
push
cmpsb
jno
xor
imul
cld
jns
roll
xchg
pop
jecxz
jo
xchg
sbb
movsl
dec
mov
pop
popf
pop
jg
xchg
shl
or
jp
addb
iret
scas
mov
or
mov
mov
sub
push
lods
cmp
loopne
or
jne
sbb
add
ja
push
mov
lahf
les
scas
dec
test
cmovae
int
test
cmp
ds
pop
mov
mov
mov
lods
es
push
notb
lret
lods
dec
iret
enter
loopne,pt
out
mov
xchg
inc
push
pop
nop
push
icebp
inc
insb
mov
cmpl
stos
out
sbb
inc
cmp
in
iret
ljmp
dec
pushf
clc
test
in
inc
xchg
movsl
loopne
or
inc
mov
addr16
pmulhw
pop
enter
hlt
rolb
mov
es
pop
lds
pop
fwait
sbb
xchg
ljmp
sub
jo
into
es
xchg
loop
xor
pop
fstpt
lret
sub
and
pop
push
movsl
inc
iret
xor
push
inc
sub
test
stc
sub
xchg
mov
mov
aas
mov
in
into
dec
xchg
push
xor
aam
leave
fldenv
sub
fisttps
stc
arpl
xor
push
mov
adc
mov
jmp
xchg
mov
pushf
insl
ja
mov
fsts
nop
jnp
int3
pushf
icebp
daa
nop
add
xchg
mov
xchg
mov
out
pop
dec
loope
pop
imul
mov
neg
push
fcomip
in
pop
add
stc
dec
bt
imul
mov
xor
xchg
sti
and
sbb
incl
les
xchg
mov
clc
adc
insb
pushf
mov
movl
pushf
pusha
jmp
pushf
pushf
not
inc
cmc
add
or
add
dec
movzbw
sub
not
neg
shl
cmp
shl
cmc
ror
or
bswap
btr
shld
shl
mov
test
rcr
lea
jo
sub
neg
clc
not
movzwl
sbb
xor
shl
mov
pushf
clc
test
call
push
call
jae
cmp
pcmpeqw
mov
cmp
inc
push
cmpsb
aam
stos
jmp
inc
inc
add
sbb
sti
dec
negb
out
sar
jns
push
fs
or
sub
adc
inc
mov
sbb
stc
dec
add
inc
movl
cmpb
cwtl
cmp
ljmp
loope
lcall
jnp
ret
pop
mov
xor
loopne
loope
fnstenv
jmp
or
cmpsb
push
sbb
scas
cmpsb
lahf
aad
sahf
mov
and
fs
daa
ret
mov
rcll
insb
repz
imul
mov
xchg
jae
mov
call
or
aas
dec
negb
arpl
mov
jecxz
pop
imul
or
dec
mov
testl
into
stos
adc
adc
shlb
push
inc
out
movsb
push
xor
pushf
pusha
movl
pushf
lea
jo
pusha
movl
pushf
pushf
push
lea
jmp
imul
bound
mov
sar
jmp
nop
rcrl
add
mov
lret
sub
in
jno
inc
loope
add
mov
adcb
mov
hlt
fimull
lcall
mov
pop
jne
pop
lods
xchg
mov
dec
ret
mov
or
sub
test
add
or
cmp
mov
pop
add
mov
cltd
inc
leave
jb
das
cmovl
cmpsl
mov
inc
jl
xlat
leave
push
inc
int3
adc
push
xchg
ffreep
mov
mov
adc
and
mov
aam
xor
fstpl
outsb
cmp
movsb
into
dec
gs
mov
in
xor
fldl
add
incl
cmp
jno
lret
xor
test
xchg
mov
sbb
ret
das
stos
xchg
xorb
lret
test
mov
movsb
adc
lods
or
xor
das
pop
jb
loop
sbb
xchg
mov
daa
or
fs
out
cltd
leave
imul
rcrb
push
cmp
xchg
pop
xor
out
rol
lahf
mov
push
lock
xor
leave
ds
aad
lret
js
lahf
cmp
and
dec
mov
sbb
xor
scas
mov
fstpt
jnp
scas
jmp
jb
mov
mov
sub
pushf
movl
pusha
movl
pushl
lea
jmp
andb
push
xchg
mov
pushw
fistl
lcall
outsb
les
push
mov
lret
das
clc
scas
mov
enter
fdivrl
sbbl
jno
cltd
setns
dec
mov
adcl
std
sub
sbb
ds
mov
or
les
shrb
rclb
sarb
popa
cld
idivb
mov
ljmp
loope
in
jno
mov
pop
lcall
push
imul
sti
adcl
mov
push
hlt
pop
js
lods
inc
ss
mov
int3
inc
xchg
lods
loope
scas
adc
mov
inc
aaa
push
movsl
xor
mov
mov
inc
adc
out
jb
jmp
sub
test
arpl
repz
out
lret
xor
xchg
push
and
ljmp
push
jbe
xchg
mov
outsl
sbb
addr16
mov
shll
dec
sahf
mov
push
mov
xor
sbb
rclb
cmp
cmpsl
jle
xchg
mov
push
call
jmp
aas
sbb
out
rcrl
in
mov
mov
adc
in
pushl
pop
push
pop
mov
sahf
in
xor
adcb
das
xchg
inc
xor
call
cmpl
decl
in
sbb
popa
mov
jo
movsl
add
xorl
mov
lock
out
push
hlt
mov
idivb
call
mov
loope
push
dec
fistpll
adc
jmp
lahf
aas
adc
loop
pop
cmpsb
pop
shrl
pop
jae
rorl
push
add
rcrl
sti
pop
adc
int3
sbb
mov
xchg
jmp
and
outsb
adc
fs
mov
mov
imul
mov
and
cs
jnp
mov
or
push
or
movsl
and
fmull
cmpsl
add
jae
push
gs
fcmovnu
aas
outsl
es
jge
xor
pop
jnp
clc
mov
dec
iret
ds
out
mov
mov
pop
cmp
sbb
mov
xchg
jb
mov
pop
xchg
cmp
mov
stos
scas
push
adc
mov
movsl
adc
fnstsw
or
lahf
rcrl
xor
xchg
add
mov
js
xor
or
int
outsl
stos
xchg
push
dec
mov
push
pop
data16
adc
insl
jbe
cmp
shll
or
dec
sub
sbb
lock
pop
bound
pop
and
xchg
inc
test
aam
pop
fildll
lea
sbb
jle
or
dec
jle
push
nop
add
push
sub
sub
cmp
push
adcl
xchg
pop
cwtl
push
cmp
pop
and
call
cmp
and
push
dec
xchg
lods
mov
int3
xchg
sti
into
aas
fstl
push
sti
mov
mov
pop
loopne
cmp
mov
fwait
stos
gs
xchg
mov
into
outsb
repz
or
push
stos
add
xchg
in
shrb
lods
cmp
js
mov
dec
lret
sub
push
xor
mov
mov
test
shl
pop
popa
and
daa
cs
cs
out
popl
std
cmp
addr16
sbb
addl
mov
or
adc
dec
cwtl
jle
outsb
aaa
or
mov
ljmp
inc
fisttps
daa
add
imul
cwtl
lcall
push
sbb
xchg
scas
jmp
out
inc
xchg
outsl
aad
stos
mov
in
sbb
add
xchg
scas
imul
mov
inc
ljmp
popf
lods
push
lea
mov
frstor
scas
out
inc
xchg
jge
sbb
fiaddl
mov
or
xchg
scas
jo
mov
in
loopne
jmp
jp
cmpsb
jno
addr16
fidivrl
push
mov
lods
in
lahf
mov
leave
rol
out
ljmp
inc
movsb
push
mov
hlt
test
jecxz
push
pop
sbb
int
xchg
lods
sahf
cltd
jo
lea
and
jb
inc
sbb
inc
mov
xor
repnz
outsl
adc
xchg
mov
pop
cld
pop
jbe
repz
stc
jge
pop
repz
je
insb
xor
adc
lahf
scas
adc
test
stos
in
push
incl
and
jb
clc
xchg
loopne
cwtl
jae
dec
mov
lret
mov
mov
iret
adc
stos
jmp
sbb
adc
xor
scas
and
or
in
stos
xchg
loope
mov
add
repnz
xchg
cmp
mov
or
inc
loopne
lock
xchg
jae
sub
cmc
adc
mov
push
scas
outsl
fnstenv
push
xor
jg
icebp
ret
mov
outsl
push
xor
inc
jg
js
ret
or
xchg
sbb
jno
lock
mov
lods
ja
xchg
mov
jbe
pop
push
mov
xor
push
stc
incl
rclb
mov
dec
push
out
mov
xor
adc
dec
loopne
xchg
icebp
fistps
inc
add
fisttpll
mov
stos
dec
jg
sti
sub
cs
push
xor
pop
fwait
dec
hlt
out
test
andl
sbb
pop
pop
pop
jns
fsubrs
xchg
jne
mov
add
inc
ja
push
pop
popf
adc
inc
jmp
push
adc
xor
enter
pop
fistpll
xor
jns
arpl
adc
mov
push
cli
lods
cmp
push
mov
lahf
add
push
jne
test
inc
sbb
inc
loopne
and
cmpsb
inc
out
mov
cmpsb
fwait
in
pushf
lods
stos
dec
jae
cmpsl
xlat
out
outsl
mov
ss
les
push
sbb
das
outsb
sbb
movsl
repz
test
pop
jg
pop
push
push
mov
mov
stos
gs
in
xchg
stos
sbb
sbb
ljmp
fstpt
sbb
push
xor
movsl
pop
sar
push
cmp
push
ds
pop
jae
push
xor
xor
out
mov
icebp
in
jmp
adc
mov
mov
aam
jae
dec
out
icebp
sub
xor
mov
repz
jecxz
xor
fadds
lea
test
and
adc
push
das
shlb
xchg
stos
aaa
shlb
and
lret
sahf
sub
mov
mov
mov
ja
xor
pushf
xor
stos
daa
enter
das
push
imul
or
outsb
pop
inc
or
xchg
stos
add
pusha
jmp
pushf
movl
push
jmp
jmp
or
lret
popf
mov
jnp
cli
in
movsb
popf
lock
repnz
mov
push
jae
negb
out
aas
mov
pop
ss
jg
add
dec
cmp
shr
pop
sbb
sub
push
scas
iret
flds
jmp
mov
aaa
mov
mov
out
and
jmp
leave
imul
out
mov
movq
je
les
cld
jmp
test
cmp
in
mov
cltd
stos
mov
loopne
or
cmp
mov
test
mov
test
mov
aad
cmp
pop
fstpt
dec
fidivl
ret
push
ljmp
or
pop
or
js
test
jge
xchg
xchg
mov
mov
out
push
icebp
dec
insb
or
cld
or
cmc
dec
aas
cld
pop
xchg
aaa
out
mov
mov
ret
movsb
xchg
jp
or
push
int
sub
cmc
and
push
fcompl
ds
shll
xorl
mov
fnstcw
imul
out
addl
js
inc
jns
jo
xchg
adc
test
sbb
int3
xchg
test
adc
sbb
jl
lea
rcll
pop
fdivrs
fsub
jge
jnp
roll
das
adc
and
sub
gs
or
add
nop
mov
out
out
push
mov
or
xchg
sub
insl
leave
jg
add
pusha
or
inc
xor
push
das
lahf
lock
jmp
int
mov
std
jecxz
push
out
cmp
add
ja
imul
sub
outsb
ds
cmp
cmpsb
mov
insl
push
loope
pop
lret
push
mov
inc
dec
cmpsb
mov
jbe
ret
in
cmpb
and
xor
call
jmp
movl
pushf
pusha
pushf
lea
jmp
cmp
mov
bsf
shr
mov
stc
shr
sub
jmp
mov
push
push
out
or
test
jl
jecxz
shl
lods
loopne
movsl
test
xchg
mov
dec
jecxz
cwtl
aas
inc
and
cmp
cwtl
cmp
mov
sbb
das
movl
push
mov
lds
jo
dec
nop
xchg
sbb
jb
aaa
ss
sahf
pop
pop
femms
das
fsubl
pusha
je
pop
xchg
adc
xor
xor
push
jnp
out
insb
outsl
pusha
pop
push
aam
ret
add
cli
xor
jge
dec
sub
cmp
incb
inc
scas
testb
enter
decb
popa
fucom
xor
aas
sbb
fdivrl
inc
add
rol
push
leave
repnz
xor
outsl
dec
xchg
jge
inc
outsl
fwait
sub
jno
adc
insb
addl
push
cmp
xchg
sbb
lcall
pop
add
jno
cmpsb
sbb
dec
in
inc
test
xor
test
repz
pop
dec
sahf
adc
arpl
fs
out
mov
or
sub
inc
sbb
fs
stc
mov
mov
fisubs
lahf
pop
xor
sub
clc
bound
pop
cwtd
bound
mov
shrb
mov
int3
fmulp
stos
aas
sbb
xor
jl
test
movsl
mov
dec
jo
mov
fsubr
repz
cmpsb
std
fwait
loopne
xor
sub
or
jmp
ljmp
mov
push
icebp
xchg
and
dec
dec
cmp
or
mov
xchg
shr
sub
inc
out
push
sub
ret
or
scas
sbb
ss
int
frstor
mov
pop
and
inc
insb
and
jns
ret
mov
loope
pop
fisttps
or
test
sub
jp
xchg
cmpsb
push
in
cmp
jae
in
mov
adc
stos
or
add
in
mov
sti
mov
data16
lds
rcr
dec
and
dec
push
jg
jae
xchg
pop
sbb
jmp
jg
mov
nop
in
insl
inc
xchg
mov
push
push
in
test
in
sti
adc
sbb
cmp
push
lds
pop
or
pushf
rcll
roll
ss
sbb
or
xchg
arpl
jle
adc
das
sbb
jmp
loop
fldcw
test
xchg
adc
inc
dec
pushf
inc
dec
sub
fimuls
icebp
movsb
mov
xor
pusha
movl
jmp
lcall
mov
fsubrs
imul
xor
negl
rcrl
popf
sub
mov
into
mov
rorb
mov
sub
jo
mov
dec
cmpsb
fdiv
xchg
mov
fwait
stos
xchg
add
add
xchg
xor
stos
cmp
stos
insl
ds
pusha
cli
arpl
insb
lret
mov
pop
cmp
mov
sarl
xchg
out
movsb
cltd
fisttpll
loopne
fcompl
ja
ja
jge
jae
inc
jbe
scas
cmpsl
loop
jbe
add
sub
sti
xlat
xor
test
xor
aad
jnp
add
and
je
pushf
loope
jge
fdivs
hlt
inc
loop
push
iret
mov
fsts
stos
mov
mov
jge
xor
mov
sub
add
push
jnp
dec
xor
xor
mov
arpl
mov
mov
in
gs
leave
call
adc
out
out
nop
pusha
out
shlb
les
lods
add
sbb
add
jmp
pushf
inc
and
jae
ljmp
imul
lret
bound
xchg
pop
stos
mov
mov
xchg
js
cmp
into
xor
jge
stc
adc
stos
cmp
add
cmp
je
adc
jne
sub
movsl
sub
int
or
icebp
lret
mov
sbb
add
clc
mov
out
stos
negl
andl
dec
mov
test
adc
inc
adcl
mov
dec
adc
xor
popf
cli
xchg
sub
pop
imul
repnz
mov
jl
cmp
mov
bound
mov
jo
xor
adc
xor
lds
fsubr
pop
mov
sub
cmp
stc
mov
push
lods
jge
mov
xchg
lcall
test
jle
rol
push
push
test
cwtl
cli
repnz
repnz
and
cmpsb
aad
mov
cmpsl
lds
repnz
mov
rorb
adc
mov
add
push
inc
out
clc
xor
bound
pushf
pop
inc
or
or
addr16
insb
pop
mov
fildll
outsl
dec
imul
xchg
sbb
jecxz
pop
imul
subl
dec
xchg
dec
sbb
arpl
jns
lret
scas
xchg
and
testb
sarb
cmp
movsb
js
inc
adc
sbb
mov
loop
push
xchg
nop
mov
pop
mov
fistl
mov
xor
mov
daa
rolb
xlat
jl
push
jae
xchg
fstpl
sub
aam
inc
int
pop
mov
xchg
es
pop
lods
imul
imul
pop
and
test
push
insb
jnp
pop
mov
sbb
rcrb
in
shrb
pop
inc
adc
fs
mov
push
jbe
rcll
jp
add
dec
insl
fnstenv
sbb
inc
adc
pop
sahf
imul
dec
push
mov
in
fadds
pop
scas
add
rcll
hlt
xchg
movsb
mov
inc
sub
mov
xchg
mov
pop
std
mov
inc
cwtl
sti
rcl
mov
dec
mov
sub
sbb
and
mov
mov
shll
cmp
mov
test
cwtl
cmp
fucomi
and
lock
sbb
add
xchg
and
add
push
out
das
lods
mov
xchg
je
popf
push
shl
fisubrl
test
fidivrl
jns
fldenv
inc
sbbb
add
imul
ljmp
cmpsl
leave
or
xor
shlb
ljmp
filds
into
and
mov
clc
jge
dec
jae
add
xchg
jmp
sub
pushf
test
js
xchg
inc
mulb
loopne
pop
dec
mov
andb
adc
inc
sub
inc
dec
lahf
jecxz
xlat
sahf
mov
jecxz
repnz
mov
test
mov
roll
arpl
mov
xchg
scas
fstpl
add
sub
nop
push
cmp
test
mov
pop
out
xchg
mov
test
repnz
jp
inc
dec
lods
bound
sbb
call
pop
out
lea
xor
pop
add
or
rorb
cmp
lock
sar
gs
popf
push
mov
out
mov
jo
mov
mov
cli
loopne
js
jp
fcoml
movsl
inc
daa
adcl
in
dec
xlat
push
js
mov
ljmp
dec
fidivs
cmp
addr16
sahf
ror
int3
mov
lret
xchg
pop
call
aam
push
iret
lods
aam
scas
jle
clc
imul
mov
test
mov
jnp
scas
daa
jp
insb
dec
mov
loopne
test
mov
or
mov
repz
xchg
jge
rcrl
int3
cld
lret
fdivrp
sbb
js
mov
out
cmp
mov
sub
in
dec
lods
scas
xchg
cs
or
repnz
ds
sbb
clc
mov
repz
and
sbb
dec
call
mov
push
movsb
leave
lods
or
xchg
push
cld
test
xchg
sarl
fwait
lea
sub
repz
or
daa
inc
push
repnz
enter
mov
movsb
popf
in
aam
int3
xor
and
mov
rcrb
stc
sub
dec
movsb
and
push
sbb
sahf
test
xchg
sub
movsl
dec
sbb
lock
ficompl
pushf
testb
sbb
das
xchg
arpl
pusha
fists
jl
sbb
push
pop
sbb
mov
xchg
jp
sub
loope
mov
shll
nop
fdivs
xchg
testl
lcall
repnz
mov
mov
bound
cmp
enter
out
mov
mov
scas
vzeroupper
rclb
inc
push
adc
movsb
pushf
mov
in
fdivs
sbb
xchg
xchg
sbb
push
or
out
add
push
and
jl
lret
lods
mov
cmp
sub
jmp
cltd
testl
mov
scas
push
fistpll
mov
push
popa
sbb
mov
fistps
add
jne
pop
jl
rorl
sarl
and
jmp
mov
pusha
popa
and
mov
call
jecxz
rep
dec
jecxz
insl
or
push
sbb
inc
lret
cs
xor
mov
xor
sbb
mov
and
or
sbb
aad
xor
outsl
cmpsb
lea
insb
cmc
xorb
aam
int3
std
in
adc
test
int
aam
sti
fwait
mov
xchg
std
lds
stos
push
mov
andl
stc
add
mov
cmp
or
xor
sbb
js
push
inc
test
jbe
iret
shlb
stos
loop
xchg
daa
xor
pushf
mov
shr
clc
pusha
pushl
add
pushl
mov
pushf
jmp
movl
pushf
mov
mov
movb
lea
jmp
pusha
pusha
pushl
pushf
movl
pushf
movb
push
movl
movl
lea
jmp
pusha
jmp
pusha
mov
in
mov
movsl
daa
add
je
test
aam
loope
and
sub
dec
mov
xchg
cmp
shrl
sub
lret
jl
push
xor
mov
xor
dec
sub
pushf
jae
dec
imul
pop
mov
inc
lock
inc
out
pop
xchg
adc
pop
aaa
inc
loopne
scas
adc
inc
cmc
pop
mov
bound
outsl
cmp
pop
and
jle
mov
mov
lret
mov
push
push
mov
aam
dec
sbb
lods
loopne
int
enter
add
xlat
mov
or
push
push
not
hlt
adc
or
sub
xlat
add
push
sub
pmaddwd
inc
jecxz
or
loopne
fistpll
pop
xchg
fstpt
mov
push
in
cld
mov
add
das
clc
jmp
pushf
loop
push
ficomps
mov
nop
push
xor
and
mov
mov
in
call
pop
pop
dec
fdivrl
push
lret
jge
fcompl
push
data16
lock
or
and
inc
add
repz
xor
push
imulb
adc
cmpsb
out
lret
dec
je
xor
ss
dec
sub
stos
es
cmp
jg
jp
push
push
push
nop
jmp
xchg
mov
ret
sbb
push
lods
loopne
mov
imulb
mov
push
jno
or
pushf
pop
mov
dec
xor
dec
jge
mov
outsl
push
and
inc
daa
jl
std
ret
cld
cmp
test
shrb
dec
pop
add
fidivl
xchg
lcall
repnz
sbb
ret
mov
xchg
fwait
mov
sub
cmp
inc
and
add
lea
jmp
insb
in
vunpcklps
and
movsl
mov
movsl
lret
dec
inc
ds
in
xchg
mov
cli
rcrl
cmove
fildl
daa
mov
sbb
popa
sub
in
jecxz
notl
gs
stc
sbb
pop
cmove
pop
pop
adc
loop
sbb
ret
movsl
popf
xchg
pop
push
arpl
int
pop
shll
xchg
pop
aaa
rorl
out
xchg
sub
and
jne
fsubs
or
jnp
loop
in
sbb
jo
xchg
cmpl
dec
xchg
jbe
push
lock
add
outsl
cmp
push
xor
push
inc
jne
jmp
mov
sub
xor
imul
xchg
in
mov
ljmp
pusha
and
pushf
cli
jmp
jg
mov
loopne
and
out
aam
mov
ljmp
ja
sub
lret
out
mov
insl
dec
mov
out
ret
mov
dec
imul
mov
sbb
pop
js
fstps
out
mov
pop
shlb
pop
inc
push
cltd
in
xchg
scas
stos
jg
adc
subb
xor
divb
shrb
mov
adc
test
std
sbb
and
jne
call
cmp
shlb
jb
movsl
lsl
add
or
mov
or
or
xchg
dec
fs
shlb
xchg
sub
push
sub
fldt
lahf
dec
or
pop
jae
lcall
lret
fidivs
mov
or
add
mov
insl
push
add
in
sub
aam
mov
jecxz
sbb
xchg
sub
cld
adc
ds
leave
and
and
push
pop
insl
cltd
lods
daa
xor
dec
loop
test
push
push
push
ds
jl
data16
xor
in
push
or
sahf
je
out
adc
mov
sbb
push
add
test
sbb
outsl
xor
mov
dec
mov
xchg
jge
jecxz
ljmp
jecxz
or
cmp
in
sub
jae
jno
outsb
or
orl
xor
ljmp
test
das
or
inc
enter
lcall
inc
movsl
inc
out
popf
and
mov
mov
or
popa
sub
fwait
imul
and
cs
sarl
fnstsw
sub
push
mov
jo
into
sub
adc
push
test
xchg
shll
inc
test
mov
pop
lahf
jbe
lock
movsb
sahf
sbb
outsl
cmp
leave
mov
sbb
sub
iret
lock
lea
data16
shr
or
stc
ss
in
jle
psllq
sahf
pushf
divb
pop
fsubrs
testb
pop
aam
sahf
and
shlb
sbb
ja
inc
jae
pop
jle
cmp
aad
outsl
xchg
mov
pop
adc
mov
mov
sarl
call
add
xchg
xlat
mov
push
jns
mov
aad
ret
and
dec
lahf
xor
loop
icebp
rep
push
sbb
sbb
xor
movb
mov
pusha
pushf
stc
pushf
shr
clc
call
pusha
movl
pusha
pushl
push
lea
jmp
movl
push
lea
jmp
call
push
dec
stos
lahf
add
add
arpl
sbb
nop
arpl
mov
mov
jge
or
jb
cld
outsl
jno
jl
jg
mov
cmp
popa
mov
xor
imul
js
mov
mov
inc
ds
mov
lret
mov
push
aam
jno
fiaddl
pop
scas
lret
and
pushf
xchg
mov
pop
dec
mov
inc
lods
stc
or
xor
and
mov
xchg
xchg
sbb
or
xchg
scas
push
fs
mov
or
test
rol
ds
gs
in
mov
xchg
imul
pop
imul
push
ja
out
mov
add
bnd
cmpl
add
in
repz
or
lds
rcrl
sbb
mov
add
nop
notb
sahf
sbb
sbb
xlat
cli
jne
sub
aaa
mov
xor
bound
pop
pop
add
bound
stc
push
cmc
lods
cmp
pop
jno
lods
jge
adc
mov
jg
es
dec
test
pop
loope
movsb
push
adc
loop
jno
mov
inc
popa
xchg
xchg
outsb
nop
jge
in
pushf
call
cltd
test
jae
xchg
xchg
test
cmp
add
adc
sarb
xor
pushf
call
add
stc
jmp
push
movl
pushf
push
lea
jmp
pushf
movl
jle
push
push
lea
jmp
stc
movzwl
setg
or
mov
stc
shr
movzbw
sub
or
add
bswap
call
movl
pusha
pushl
lea
jmp
pushf
movl
pushf
pushf
pusha
pushf
lea
jmp
jmp
inc
fmul
inc
or
ja
mov
outsb
loop
loopne
push
js
popf
jnp
sbb
dec
int
mov
pop
jp
xchg
rcrb
hlt
lret
fisttpl
das
push
scas
push
lret
call
push
repnz
or
fwait
inc
lret
je
mov
pop
push
jns
jnp
push
lds
in
imul
dec
xor
or
pushf
sti
adc
xchg
xchg
cwtl
in
enter
lret
scas
dec
into
sub
fwait
int
lcall
sbb
scas
xchg
adc
push
pop
xor
inc
mov
mov
cltd
mov
data16
pop
arpl
pop
fwait
cmp
pop
mov
insb
cmp
pusha
and
shlb
adc
dec
lcall
leave
stos
aas
and
pop
ja
pushf
jmp
mov
pushf
punpckldq
fdivrs
xor
mov
jecxz
sbb
sbb
pop
outsl
or
lods
push
sub
xchg
cmc
xchg
inc
cld
and
or
mov
cmp
add
pop
mov
dec
sti
int3
inc
lds
add
cmovns
mov
xchg
inc
loop
xor
pop
jbe
push
les
ret
add
xlat
sub
add
pop
ret
lds
sti
lods
movl
add
adc
pop
cli
cmpsb
stc
push
cltd
sbb
scas
subl
inc
icebp
in
jp
jg
or
inc
imul
lock
xchg
scas
fadds
lock
jb
pusha
or
xor
xchg
and
xchg
call
mov
mov
pusha
gs
xorl
and
push
aam
stos
in
lods
addl
add
out
xor
pop
jnp
and
or
outsl
mov
mov
and
xchg
xchg
cli
push
xor
stos
leave
sub
mov
int3
sub
test
daa
out
push
test
mov
ds
popf
cli
lock
xchg
stc
xor
and
into
inc
filds
xor
push
jns
cltd
pop
or
mov
pushf
mov
mov
lock
or
das
and
sub
sbb
dec
call
ds
rcrb
je
sbb
les
and
int3
adc
pop
pop
mov
ja
mov
xor
test
xor
pop
fs
sarl
add
fdiv
addl
xlat
orl
sbb
sub
push
jnp
sbb
mov
int3
xor
sahf
ss
mov
movsb
push
dec
fsubrl
rcrl
jge
ficompl
or
shr
sub
sub
add
bound
fdivrs
mov
pushf
ja
scas
add
sub
pop
or
and
push
test
in
or
inc
out
popa
and
mov
inc
fdivrs
out
hlt
std
movsl
cmp
mov
in
cmp
mov
jns
sub
jge
or
add
xor
jb
lea
repnz
lods
add
rol
negb
xchg
jns
ljmp
mov
jmp
jg
lret
repnz
pop
lret
sbb
sarb
pop
andl
adc
btc
dec
rcr
mov
cmc
shr
call
pushf
pushf
movl
lea
jns
push
pusha
pusha
pushf
lea
jmp
add
clc
cmp
call
call
movb
mov
lea
jl
bts
mov
shrd
not
clc
test
mov
stc
pusha
cmp
lea
stc
test
add
movzbw
lea
not
mov
pusha
movzbw
jmp
or
or
bnd
hlt
sbb
stos
jmp
outsl
push
das
add
cmp
cwtl
ja
test
popf
ret
adc
test
or
fisubrs
sbb
scas
xlat
cmpsl
ds
mov
fcoms
sub
add
mov
jp
push
jmp
jge
push
adc
jo
imul
aad
into
dec
gs
imul
xchg
and
popa
addr16
push
sub
cmpsb
mov
pushf
movsl
push
stc
fcomps
das
shll
pop
xlat
push
dec
out
add
push
daa
xor
cmpsb
cmp
not
hlt
fldcw
sbb
jmp
push
xchg
call
or
jae
scas
das
pop
inc
cmp
nop
xchg
testb
cs
lock
sbbb
lcall
mov
add
or
sub
cmp
shlb
xchg
jmp
sub
es
das
sbb
pop
sbb
xchg
pop
xor
test
push
icebp
sbb
mov
in
jne
jbe
into
in
vmaxss
push
push
mul
inc
adcb
ss
icebp
xor
mov
xchg
xor
push
call
jl
mov
sti
push
std
outsb
sbb
xchg
xor
aaa
pop
xchg
mov
adc
sti
push
xor
mov
jmp
jle
popf
ljmp
pushf
scas
jg
push
push
pop
or
sub
ds
test
out
sub
fimull
lds
cmp
test
pop
cmp
daa
jae
push
xchg
xchg
mov
and
mov
push
std
pop
cmp
mov
dec
xchg
mulb
dec
pop
ja
popa
dec
sahf
popa
movsl
jl
jbe
push
xchg
lret
mov
push
outsb
xchg
sbb
push
mov
lcall
negl
jnp
iret
xrelease
sbb
jno
xor
sbb
dec
xchg
sbb
pushl
cltd
std
in
push
sti
mov
dec
inc
dec
int3
lock
lcall
les
popa
mov
mov
lret
shll
lret
mul
mov
inc
mov
dec
out
aad
popa
ljmp
jb
cmp
add
push
nop
jp
pop
addb
popa
mov
pop
and
or
xchg
sub
sub
stos
dec
add
mov
adc
iret
fildl
rolb
cmc
fdiv
mov
cld
adc
dec
dec
test
sbb
jno
jmp
add
mov
mov
inc
adc
sbb
ljmp
shlb
mov
lods
xlat
and
pushf
mov
lcall
in
repz
cld
fmuls
or
dec
out
popf
push
daa
jg
pop
xor
and
add
jmp
dec
sbb
and
popa
mov
sbb
cwtl
mov
arpl
in
notb
or
cltd
pop
daa
add
enter
xor
out
dec
jbe
jnp
out
cltd
cmpsl
gs
pop
mov
pop
nop
dec
jae
in
mov
push
dec
fucomip
mov
cmpsl
mov
aas
xchg
outsb
mov
imul
hlt
fiaddl
sbb
inc
pop
stos
mov
mov
hlt
stc
iret
add
push
shll
mov
pop
mov
adc
cmp
ja
pusha
cwtl
jnp
dec
ja
call
stos
mov
ffree
sbb
out
mov
xor
lcallw
das
pushf
xorb
popf
shll
mov
pop
gs
xchg
pop
xor
cli
xor
sub
test
dec
push
xchg
shll
int3
inc
pop
pop
lea
es
shll
mov
lods
mov
mov
inc
mov
es
pop
nop
lea
mov
jecxz
popf
push
mov
ret
inc
test
cmpsb
ljmp
imulb
lcall
cmp
les
popa
dec
add
dec
sub
xchg
mov
and
pushf
jmp
mov
push
cmp
test
pop
add
insl
cmpsl
out
nop
out
dec
sub
fs
sub
sarl
test
xor
sti
push
and
xchg
filds
outsb
outsb
fisttpll
outsb
mov
mov
add
hlt
das
adc
dec
shl
and
jecxz
dec
dec
mov
push
fstps
xlat
jae
adc
xchg
xchg
ror
subb
or
pop
jo,pn
pop
push
xchg
loopne
popf
out
add
addr16
mov
inc
mov
jno
cli
push
movsb
ret
lahf
bound
dec
mov
imul
inc
mov
inc
pop
call
jbe
xchg
iret
inc
jbe
mov
xor
inc
or
push
cs
jno
sbb
lods
jno
enter
loopne
lods
das
daa
fildl
sbb
stc
jb
mov
dec
ror
push
push
dec
mov
push
or
jb
iret
out
movsb
mulb
ds
sub
out
jae
add
nop
cmp
shrl
cltd
dec
mov
inc
jae
fistpl
test
popf
inc
aas
rcll
test
jae
nop
cmpsl
push
jp
gs
inc
sub
and
or
dec
inc
cmp
fldl
or
popa
xchg
orb
sub
js
pop
and
mov
cwtl
sbb
push
out
dec
push
icebp
outsb
sub
inc
adc
stc
dec
cmc
push
add
push
mov
ds
add
cmp
jg
add
cmp
xchg
add
xlat
xchg
jae
out
imul
or
aam
iret
pop
imul
or
push
hlt
fidivrs
popf
mov
out
add
out
pop
xchg
in
int3
mov
dec
pop
inc
test
arpl
mov
xor
mov
aad
pop
cmc
sbb
insl
pop
pushf
pop
inc
jns
stos
lea
add
push
pusha
push
lea
jmp
call
movl
jmp
call
punpckhbw
lock
mov
xchg
mov
xlat
test
mov
ficomps
jl
jecxz
test
xor
nop
push
push
mov
jb
iret
iret
repnz
lret
lea
inc
push
frstor
inc
movsl
gs
sub
nop
mov
pop
adc
sti
cmp
lock
outsb
add
in
imulb
jb
and
imul
mov
push
xchg
scas
arpl
mov
popf
or
cwtl
les
pop
or
mov
lods
enter
sub
jmp
jnp
stos
shll
adc
clc
es
mov
pop
sbb
popf
and
mov
mov
add
push
push
mov
push
test
nop
xchg
stos
or
xchg
mov
mov
ljmp
test
adc
mov
fsubs
mov
clc
xchg
aam
sbb
loopne
out
xor
ja
shr
cmp
out
xor
push
in
sbb
inc
test
rorl
sbb
loop
aam
rcr
mov
dec
mul
mov
arpl
jmp
xchg
mov
orb
inc
ja
jp
mov
cld
jno
xor
cmp
mov
cmp
inc
and
or
pushl
movw
push
lea
jmp
jmp
call
pushf
pusha
pushf
movl
jmp
jmp
movb
pushf
lea
jl
cmc
mov
bswap
ror
xor
mov
rcl
add
lea
pushf
lea
push
push
sub
call
call
mov
movsbl
call
jmp
clc
pushf
movl
bt
mov
jmp
pusha
movb
pushf
jmp
sbb
je
mov
dec
and
push
jb
inc
popf
sub
fwait
sarl
notl
das
mov
pop
jbe
sti
in
std
daa
lcall
cmp
fmulp
sarl
mov
jle,pn
mov
subl
mov
stc
adc
cmp
je
mov
mov
inc
imul
xchg
add
mov
ds
xor
jmp
lea
sbbl
sbb
and
lods
fsub
iret
fld
sbb
mov
push
sarl
orb
cmp
icebp
jae
jne
cmp
cwtl
sbb
xchg
outsb
outsl
pop
xchg
ret
cmp
mov
xchg
sbb
push
pop
mov
jne
mov
inc
xor
jmp
int
xor
cmp
lret
sahf
sarl
inc
leave
in
cmp
lcall
adc
lods
cmp
les
divb
xchg
or
stos
mov
jmp
pop
std
fidivrs
jl
sarl
jecxz
add
sbb
xchg
loope
mov
cmpsb
and
xchg
adc
movl
lods
jle
mov
sub
push
or
and
mov
sub
sbb
cltd
jns
sub
out
add
jg
xchg
imul
xchg
cmp
mov
ss
mov
inc
jmp
fnstenv
mov
icebp
or
loop
ds
daa
hlt
mov
and
inc
popw
stc
cmp
xchg
fsts
mov
xor
pop
inc
xor
les
or
or
push
scas
loopne
or
add
fnstcw
dec
aam
rol
pop
mov
mov
jbe
notl
add
pusha
jnp
pop
xchg
arpl
mov
mov
scas
mov
inc
jl
xchg
test
mov
and
insl
test
sub
sbb
stos
fildll
cmp
js
inc
into
sbb
add
lds
cltd
inc
cld
imull
xchg
sahf
in
inc
jle
out
xlat
outsb
push
xor
out
js
movsb
inc
pop
lock
test
inc
imul
lahf
sub
adc
inc
mov
jmp
pop
lret
and
inc
clc
sbb
bound
fdivrs
sbb
adc
push
shr
leave
jns
inc
icebp
xor
mov
daa
imulb
push
mov
and
xchg
lds
repnz
cli
jge
enter
out
pop
push
roll
aad
popa
sti
pop
mul
scas
into
pop
xor
out
inc
jbe
or
xchg
fs
xor
mov
inc
mull
add
roll
xchg
test
mov
xchg
inc
arpl
movsb
mov
cmp
xor
movl
push
call
movl
pushf
lea
jmp
lcall
in
or
adc
inc
aad
adc
push
inc
lahf
xchg
fnstsw
xchg
test
sarb
jo
adc
scas
mov
jns
jno
adc
loopne
aas
ss
int3
jle
jle
stos
xchg
lcall
aas
xor
sarl
push
out
or
or
addr16
fwait
stos
jmp
insl
stos
add
pop
mov
sahf
repnz
sub
or
push
jno
mov
dec
xor
sub
sub
pushf
push
cld
push
mov
cmpsl
imul
mov
mov
clc
dec
cmpl
xorl
add
pop
movsl
inc
ficoml
mov
cwtl
pop
lahf
scas
jmp
aas
loope
cwtl
sbb
add
push
out
mov
scas
lret
pop
ficomps
cwtl
mov
mov
lret
fiadds
jb
pop
lahf
out
cltd
pop
sbb
xchg
mov
sarb
gs
ja
adc
into
insb
aaa
rorl
push
shlb
xor
sti
adc
xchg
in
je
or
mov
mov
lret
fdiv
hlt
xor
iret
ljmp
enter
dec
mov
out
fsubr
adc
fstpt
jge
xchg
cld
in
arpl
push
loopne
rclb
push
push
outsl
cmovp
or
orb
sbb
sub
fnstcw
ss
fwait
inc
adc
mov
jbe
test
mov
aad
jge
push
pop
push
arpl
movb
pop
and
mov
test
cmp
in
jbe
ficoml
xchg
addb
loopne
mov
adc
inc
jecxz
imul
popa
inc
imul
dec
pusha
and
out
jge
jnp
cmpsl
mov
clc
lea
pusha
sti
pushf
sbb
lea
loopne
or
rcr
imulb
bound
or
cmpb
mov
jge
or
sub
cs
leave
jne
leave
xor
popa
inc
sub
ljmp
cld
inc
mov
dec
in
mov
mov
cmpsb
xor
lea
jp
pusha
pusha
movl
pushl
lea
jmp
push
jns
cmc
orb
jne
sbb
mov
ret
incb
xor
into
shll
sbbl
push
fcoms
and
cmp
mov
in
mov
mov
ds
pop
repz
push
jecxz
imul
dec
add
pop
out
repnz
mov
cs
fnstsw
dec
mov
xchg
pop
lcall
push
sti
or
mov
inc
lods
dec
sbb
xchg
adc
mov
dec
pop
cmp
stos
jns
je
jge
and
bound
xchg
sbbl
and
into
xchg
aaa
add
insl
pop
prefetch
add
xor
jmp
adc
jg
shrl
out
fwait
xor
and
xchg
jmp
ss
mov
push
xchg
inc
dec
leave
pop
dec
ret
pop
fidivrl
inc
dec
sub
xchg
xorl
movl
pushl
lea
jmp
and
cmp
popf
stos
mov
jl
aam
or
xor
inc
fcomps
dec
mov
xchg
insl
xor
pop
xor
sbb
push
mov
xchg
addl
movl
jmp
add
sar
shr
movzbl
bswap
shl
das
mov
bt
bt
test
bt
or
not
imul
rol
movzbl
and
bsr
add
sub
shl
lea
push
stc
add
cmp
bt
cmc
xor
pusha
mov
lea
jmp
movb
mov
mov
mov
lea
jge
pusha
push
pushf
dec
test
cmp
clc
mov
stc
cmc
jmp
cmc
enter
xchg
xchg
dec
pop
or
bnd
xor
fwait
cmp
xor
dec
mov
sti
aad
dec
adc
push
andnps
je
cmpsb
ja
movb
or
adcb
lcall
leave
cmp
xor
add
mov
icebp
add
and
xor
xchg
inc
cmp
lret
xchg
jne
cmpsl
or
adc
push
lock
jp
rcrb
inc
jnp
lret
cmpsl
fbstp
add
mov
fcomip
sti
test
and
sub
adc
call
sbb
jae
push
xor
sti
lret
out
mov
or
pop
jno
push
lods
lods
into
cwtl
adc
lcall
mov
outsb
push
inc
sub
int
stc
sbbb
out
inc
rcll
xchg
inc
adc
push
mov
mov
stos
cmpl
and
push
xor
stos
xchg
and
lock
imul
gs
insl
repnz
cwtl
pop
insl
mov
lock
lcall
xchg
ret
stc
dec
jmp
inc
xchg
mull
mov
or
test
xorb
jno
jecxz
jb
icebp
test
xor
iret
inc
xlat
fsubrl
mov
fmuls
icebp
sti
test
stos
lods
and
xchg
imul
out
movsl
es
repnz
mov
mov
in
pushf
push
mov
or
mov
xor
mov
andb
sub
shll
fs
mov
push
in
sbb
push
sub
ds
loopne
mov
jno
mov
in
inc
in
push
popa
jne
mov
bound
adc
dec
inc
lret
mov
xchg
mov
shrb
xor
in
imul
sbb
fs
popa
push
cli
pop
sbb
or
std
pop
cld
mov
push
sub
push
xor
int
shrl
aas
inc
mov
xchg
mov
inc
pop
jb
or
cmp
enter
or
jle
into
jbe
pop
lods
loope
fwait
icebp
out
roll
add
xchg
fiadds
mov
and
push
js
inc
pop
jmp
jp
jge
mov
sub
xchg
mov
sub
pop
pop
fwait
jns
test
arpl
imul
imul
xor
pop
add
aam
lods
jg
lcall
fiaddl
pop
leave
push
dec
stos
adc
out
cmpsl
repz
cmp
jp
cltd
jmp
xlat
lret
popl
out
popf
bound
mov
enter
and
or
adc
adc
jge
ja
loopne
mov
ja
jl
sub
dec
pop
int3
cmpsl
pusha
ret
frstor
sub
cwtl
scas
or
cltd
fnstcw
in
call
scas
mov
lcall
or
cs
jno
xorl
loop
mov
jbe
sub
add
and
mov
shrb
popl
in
punpcklwd
add
cmp
dec
and
fidivrs
loop
or
pop
mov
and
test
xchg
cmp
cltd
pop
mov
push
or
arpl
push
mov
pusha
stos
xchg
push
stos
imul
sub
xchg
sahf
sarb
movsl
pop
xor
divps
pop
xor
adc
outsl
sbb
rcll
push
insb
aaa
mov
js
fidivrs
pushl
call
lds
mov
pop
loope
push
aas
xchg
lret
xchg
push
aaa
mov
stos
aad
jmp
shlb
mov
or
setbe
call
dec
enter
dec
xor
xchg
jae
lea
hlt
ja
inc
ret
cmpsb
pop
int
ja
repnz
outsb
cmpsb
addr16
xchg
xor
jg
mov
jo
inc
jecxz
test
addr16
not
xor
mov
xor
shr
lea
mov
btc
bsf
sar
ror
mov
cmp
call
mov
movl
mov
pushl
push
jmp
push
jmp
mov
inc
shlb
cmp
cmova
popf
xor
daa
bound
push
adc
es
fists
cmp
in
lret
mull
cli
fcmovnb
cltd
push
repz
outsl
ficoml
cli
mov
sub
sub
lret
jbe
mov
in
insl
dec
ds
jo
sbb
push
dec
mov
out
and
sbb
xchg
push
hlt
xchg
iret
or
andl
clc
lret
fstpl
push
testb
xor
jmp
dec
add
aam
or
xlat
repz
loopne
xor
fisubs
stos
cmp
test
clc
mov
sbb
xor
pusha
mov
call
adc
mov
sub
out
ss
shrb
mov
mov
out
mov
inc
mov
xor
call
add
iret
mov
cs
xchg
aaa
lock
imul
cltd
sbb
push
or
sub
or
push
or
cmp
shr
jp
mov
xor
pop
mov
mov
out
jns
sub
pop
dec
dec
sub
push
daa
pushf
jle
xor
fiadds
out
dec
xchg
xchg
push
push
out
subl
orb
adc
mov
inc
xor
mov
ret
and
dec
das
cmp
gs
push
inc
popa
stos
mov
inc
jbe
push
push
mov
xor
sbb
rcrb
dec
xchg
ss
arpl
cltd
inc
fsub
dec
sbb
pop
mov
sub
pusha
ljmpw
inc
dec
pop
mov
mov
mov
orl
decb
jge
leave
adc
jne
xor
loope
jmp
pop
mov
fwait
cld
call
push
dec
cs
mov
jo
loope
mov
inc
std
jl
and
jae
outsl
inc
out
imull
pop
fwait
xchg
mov
js
mov
dec
mov
or
push
or
mov
scas
addr16
mov
or
xchg
jle
or
ds
fnsave
gs
hlt
cli
push
sub
pop
mov
stos
mov
into
test
xchg
mov
xor
inc
mov
xlat
cld
mov
fnstcw
dec
or
sbb
add
mov
imull
xchg
js
adc
mov
mov
addr16
test
add
mov
jge
push
pushf
pushl
lea
jmp
lea
js
push
pusha
movl
movl
pushl
lea
jmp
add
stc
call
shr
dec
bts
add
or
rcl
adc
mov
rol
sub
shr
add
rcr
not
mov
rol
ror
xor
xadd
mov
sete
pushf
shl
and
shr
rcr
clc
and
xor
rcr
cmp
mov
clc
jmp
clc
mov
bswap
push
sbb
adc
mov
movb
stc
shr
pushf
pushf
jmp
imul
fstl
xchg
out
and
repz
jns
test
mov
sbb
int
jmp
roll
sub
push
jmp
roll
sub
sbb
shlb
pop
add
jbe
imul
fnsave
sub
jg
cmpb
mov
jne
xor
sbb
pushf
adc
stos
shrl
pop
mov
and
xchg
ja
out
xchg
pushf
rcll
imul
mov
and
add
xor
inc
or
addr16
pop
sbb
inc
mov
mov
pop
mov
mov
mov
pop
push
mov
jnp
jp
outsl
mov
out
scas
sbb
aaa
xchg
xchg
or
jle
inc
mov
out
repnz
lods
test
lcall
sbb
fnstcw
lcall
aaa
daa
ja
push
xchg
sbb
aad
sbb
outsl
lods
scas
test
mov
or
rorl
sbb
sbb
test
ljmp
test
lds
push
imulb
dec
cltd
sarb
lcall
les
imul
mov
stos
inc
jbe
push
stos
cmovs
push
inc
mov
xchg
jbe
inc
push
xor
lods
jg
adc
rorl
and
das
roll
adc
cmp
xchg
sub
mov
mov
lcall
call
insb
xchg
dec
fcoml
fdivp
dec
dec
and
push
cltd
mov
or
mov
fwait
or
mov
push
push
lods
dec
lcall
sub
xchg
loop
xchg
lds
sbbl
stos
shl
enter
push
inc
fstpl
outsb
imul
dec
jp
pop
loopne
imul
fistps
or
cmp
xor
int
mov
inc
aam
jb
xlat
js
test
fucomip
adc
bound
sbbl
cwtl
loop
mov
push
mov
jp
jmp
jae
aas
sub
mov
sub
or
pop
mov
daa
xchg
call
dec
adc
adc
fidivl
xchg
jne
cmp
mov
es
hlt
shll
push
js
adc
or
xchg
jne
mov
sub
fcomip
loop
inc
and
mov
xor
xor
jne
sahf
je
pop
fcom
je
je
adc
sub
pushf
cs
pop
mov
or
mov
xchg
jne
shlb
out
nop
pop
stc
mov
pop
add
imul
or
push
aas
sub
xor
sbb
push
popf
add
mov
dec
fdivr
out
inc
pop
clc
and
ret
in
ret
dec
mov
mov
push
jb
xchg
mov
mov
adc
dec
dec
lahf
mov
push
xor
xchg
xor
jecxz
test
int
addr16
stc
jge
test
out
and
jp
fcomp
push
dec
mov
ret
add
pusha
rorb
adc
fcos
pusha
leave
ds
mov
mov
cmp
in
dec
xor
jg
ror
xor
mov
addb
inc
mov
icebp
push
nop
repnz
fcoms
mov
addb
push
push
repz
dec
pop
mov
pop
xchg
in
pop
lret
push
pusha
ret
cltd
aas
xor
sbb
lcall
enter
inc
and
push
out
push
pushf
push
cmp
sbbl
push
iret
jg
jb
stos
sbb
sbb
jo
push
xor
mov
sbb
or
pop
inc
outsl
inc
pop
inc
inc
dec
push
xor
sti
insb
inc
jbe
call
mov
out
sub
js
das
mov
jecxz
add
sbb
jl
imul
xchg
out
mov
aas
and
aam
cmp
xchg
imul
std
arpl
aas
mov
adc
pop
fisubrl
aaa
aad
insb
fcmovbe
movsl
imul
push
addl
outsb
lret
mov
sub
mov
push
push
in
mov
adc
or
push
fcmovne
mov
scas
out
add
sub
aad
aad
xor
popa
push
lcall
outsb
jle
mov
dec
jp
mov
stos
adc
fwait
dec
jg
mov
mov
and
xor
std
insl
fimull
sbb
testl
pop
push
mov
test
adc
addr16
jmp
pop
xchg
loopne
ret
cs
lret
imul
push
and
mov
pop
sahf
rclb
int
xchg
jb
sub
jno
decl
int
inc
add
je
les
pusha
pushf
mov
lea
jmp
add
add
pushl
pushl
pushl
movl
lea
jae
push
push
pushl
mov
pushf
lea
jmp
movl
call
push
pusha
push
pushl
movl
call
das
pushf
int
jb
fs
pop
xor
into
push
xlat
popf
cld
mov
fiaddl
xor
and
mov
sub
xor
ljmp
mov
ret
lds
adc
je
ss
incl
xchg
mov
jp
sub
int
pushf
js
fs
ja
popf
mov
icebp
mov
lret
stos
sbb
movsb
test
and
or
xor
lock
sub
or
hlt
cmpsl
or
scas
add
cld
pop
out
push
fcomps
add
mov
cmc
pop
cmp
sub
dec
es
sub
mov
pop
mov
xor
mov
repnz
sahf
mov
pop
fwait
push
inc
int
ss
fstpl
cld
mov
cwtl
test
pushf
cmp
dec
jb
andb
dec
ds
jns
mov
aaa
popa
add
aaa
dec
lds
inc
pop
jp
daa
cltd
adc
fs
pushf
mov
push
hlt
and
lods
mov
pop
lcall
shll
dec
ret
repnz
shlb
dec
incl
rcll
sbb
dec
in
xor
lds
lds
sub
aaa
shlb
mov
gs
push
std
dec
dec
mov
or
push
cmp
pop
scas
idivl
xor
adc
lds
adc
or
dec
stos
pop
cmp
fwait
xlat
jp
fidivrl
loope
sbb
leave
lret
jle
pop
mov
aad
mov
idivl
xor
outsb
clc
ss
push
aad
call
stos
add
mov
xchg
and
inc
cli
or
stos
inc
mov
jmp
ret
lds
inc
push
and
mov
xchg
fwait
popa
dec
cmc
sub
movsb
dec
add
data16
in
dec
or
xor
rolb
pop
adc
and
fistps
mov
push
mov
sub
push
bound
xchg
dec
or
addr16
sub
roll
scas
imul
mov
jae
push
add
push
mov
mov
adc
out
lret
and
add
lahf
and
sti
fidivrs
pop
adcl
lods
or
add
pop
fnstsw
jmp
notl
mov
push
xor
cmp
cmp
xchg
sbb
jae
jge
subl
lods
jg
movsb
pop
fmul
mov
dec
adc
iret
pop
mov
pop
ret
lods
sbb
mov
sub
loopne
mov
sbb
sub
mov
rcll
push
movsb
mov
mov
ss
or
and
dec
or
ret
out
in
or
sbb
or
adc
pop
outsl
loopne
adc
outsb
js
js
sahf
mov
imul
push
pop
into
mov
push
scas
outsl
out
pushf
lock
xor
adc
jmp
stos
hlt
flds
imul
js
xlat
sbbb
in
inc
dec
popf
test
inc
mov
lahf
jg
outsb
adc
test
stos
pop
inc
jbe
lds
mov
jae
stc
mov
pushf
xor
xorl
inc
test
mov
test
sub
arpl
mov
and
mov
jmp
sbb
mov
mov
and
xchg
xchg
add
testb
ljmp
jbe
mov
or
adc
aaa
lods
fcoms
iret
hlt
scas
sub
sbb
jb
ficomps
xor
cli
scas
in
xchg
pop
xlat
ja
push
jmp
loop
push
jl
and
aam
push
mov
jbe
push
inc
pop
inc
adc
lods
dec
aam
lret
jecxz
aam
and
cld
adc
mov
rcl
lcall
les
sbb
call
test
xchg
fisubrl
bound
mov
out
aam
and
adcl
in
or
jns
rcrb
mov
cli
sbb
test
sti
adc
xor
lahf
xor
movsl
mov
sub
xchg
insl
cmp
push
fimull
hlt
xchg
mov
xorb
insl
out
or
lock
in
clc
mov
push
adc
pop
add
fwait
leave
cmp
mov
jecxz
mov
addl
jmp
pop
push
adc
and
dec
inc
fwait
cmp
in
scas
and
jmp
das
leave
add
lahf
push
push
sbb
aas
push
gs
cmpb
cmp
lds
sub
js
cld
sub
das
loope
ret
xchg
insl
fdivrs
pop
nop
sbb
shr
scas
add
insl
jnp
jle
rdtsc
ljmp
rcrl
dec
push
mov
xchg
insl
orl
sbb
aaa
jp
pop
inc
push
lahf
outsb
sti
sbb
pshufw
outsb
mov
add
loop
in
mov
or
sub
pop
popf
sub
out
out
xor
push
and
mov
push
in
dec
scas
dec
fwait
cld
sarb
arpl
loop
shlb
or
push
aas
hlt
mov
xor
aaa
cmp
push
mov
dec
lcall
cmpsb
jecxz
push
xchg
insb
roll
mov
iret
jg
sub
arpl
or
je
mov
mov
ds
lods
or
cli
adcl
and
iret
inc
add
push
lahf
out
sbb
push
mov
sbb
in
movsb
push
push
outsb
pop
dec
popf
js
jmp
xchg
insb
out
mov
mov
and
jnp
xor
cmp
jl
jecxz
xor
int3
fwait
sub
test
push
inc
pop
pop
ds
push
push
jnp
xchg
dec
lea
cltd
mov
push
pop
mov
call
in
bound
cwtl
cmp
loopw
mov
add
xchg
xor
shr
dec
scas
push
jl
dec
add
mov
mov
xor
cmp
cltd
std
sub
lret
scas
push
or
gs
into
stos
divb
mov
mov
insl
push
jl
and
stos
pop
or
mov
pop
push
loope
cmp
sub
out
sub
lret
xchg
movsb
pop
pusha
inc
mov
or
fldenv
push
repnz
repz
mov
or
inc
xor
cmp
and
jge
jge
xchg
int3
inc
jmp
sbb
sbb
dec
sahf
or
sub
xchg
push
cli
pushw
inc
out
scas
jp
cltd
inc
mov
js
cmp
imul
push
cmp
and
mov
lods
cli
call
hlt
ret
push
test
les
mov
mov
push
mov
inc
dec
decb
pop
jns
repz
fcmovnbe
fwait
mov
arpl
sub
jp
out
sbb
fdivs
cmp
xor
pop
subb
dec
popa
out
addr16
and
test
adc
fbstp
xchg
test
adc
mov
fistpll
dec
int3
and
mov
xchg
int3
les
jp
daa
into
xor
ret
dec
inc
and
mov
icebp
clc
mov
xchg
cmpsl
xor
push
adc
testl
orb
mov
not
hlt
lea
adc
fidivs
sbb
sub
pop
pop
mov
ja
jle
dec
push
es
lcall
push
rcrl
repnz
insb
rcll
push
inc
pushf
stc
xor
push
repz
popf
scas
xchg
push
data16
pop
neg
aad
mov
push
push
and
repnz
ljmp
sbb
push
stos
or
mov
cmc
shlb
push
fnstenv
push
inc
andl
enter
pop
or
sub
adc
pop
outsb
rol
dec
insl
shrl
frstor
inc
out
jge
push
inc
roll
cld
repz
sti
pop
inc
aas
leave
mov
pusha
jle
xor
jnp
and
dec
adc
cmpsb
fdivs
inc
lret
sub
test
cld
shl
in
or
cmpsl
xchg
dec
push
and
stos
int3
mov
int3
pop
fstps
push
mov
jecxz
hlt
mov
in
mov
inc
fcomi
adc
inc
rcll
mov
fmulp
mov
and
sub
cmpl
shll
lea
pushf
nop
sbb
inc
lret
out
xor
adc
push
pop
dec
aam
dec
add
cltd
sbbl
movsb
xor
movl
mov
pusha
movb
lea
jmp
cmc
bt
test
pushf
lea
jl
mov
sub
mov
bts
sub
rol
bt
mov
call
pusha
movb
movl
movw
movl
jmp
call
cmp
pop
xor
dec
rorl
cmpxchg
repnz
xor
push
pop
imul
out
lea
cmpsb
or
dec
push
pop
xor
jbe
mov
aam
push
pop
cmp
loop
push
jp
mov
mov
cmp
xchg
jg
in
enter
ja
jmp
add
ja
mov
pop
fcomip
cwtl
lahf
dec
hlt
lock
xchg
fidivrl
jle
icebp
jb
nop
movaps
addr16
nop
bound
sub
mov
xor
adc
out
faddl
jle
push
xchg
ja
inc
sub
les
sti
scas
es
or
add
xchg
push
ss
add
push
push
fisubl
cmp
test
jo
insb
dec
cmpsb
jle
pop
sbb
ret
sbb
fwait
mov
xor
jns
cmpsb
or
bts
hlt
lock
mov
push
dec
cs
add
stc
sub
xchg
hlt
faddp
jecxz
fsubs
out
cld
subl
xchg
addr16
add
push
gs
mov
push
push
addr16
fsts
ljmp
daa
mov
and
xchg
cmp
push
iret
add
bound
xchg
fcompl
dec
jp
in
dec
out
mov
in
and
addr16
gs
call
and
test
out
cltd
mov
inc
xor
nop
mov
push
pop
cld
xchg
je
lcall
and
xchg
xor
dec
sti
adc
jg
mov
jne
mov
xchg
data16
push
mov
mov
pushf
cmp
jge
mov
mov
out
mov
fs
pop
imul
imul
jl
xchg
pop
stc
mov
or
cmp
sub
les
jmp
lcall
lret
decl
mov
stc
fdivrl
scas
inc
mov
jnp
cwtl
jge
js
xchg
sub
lcall
and
cs
jge
rol
mov
xchg
xor
ja
pop
mov
in
sti
ret
fbld
repnz
sub
enter
cmpsb
and
repnz
adc
insl
sarl
xchg
insb
push
negl
enter
inc
outsb
xor
sbb
pop
mov
insl
shll
je
pusha
xor
int
pop
ss
js
fidivrs
xchg
gs
ret
inc
mov
out
and
pop
ds
imul
xchg
fildll
pop
cs
sti
lea
mov
cli
or
xor
push
ljmp
test
or
inc
lock
cltd
lds
insb
or
sbb
push
lods
sbb
in
clc
pop
loope
ret
scas
cmp
or
inc
pop
and
cld
xchg
lock
jnp
in
cmpsb
pop
jl
sahf
pop
out
fs
imul
mov
sbb
lcall
push
outsb
xlat
pushf
push
cli
into
fsubs
mov
and
adc
inc
push
push
shlb
sbb
ja
pushf
push
stc
fistps
sub
ret
movsl
stc
repnz
movzwl
adc
mov
test
mov
rorl
popa
out
test
jecxz
pop
cwtl
scas
stos
mov
pop
stos
push
ja
jns
push
pop
push
lds
jo
jo
adc
roll
sub
mov
cli
idivl
mov
dec
test
mov
loope
adc
mov
mov
or
jg
add
mov
lahf
mov
add
ljmp
xchg
es
xor
jle
scas
cmp
ret
dec
icebp
cmpsl
sbb
jl
inc
or
mov
js
leave
arpl
cmp
mov
and
mov
mov
mov
daa
imul
add
mov
mov
dec
or
mov
in
mov
mov
push
clc
inc
roll
stos
mov
hlt
xor
push
mov
lods
stos
inc
adc
ret
int
or
insl
ja
mov
in
sti
or
sub
or
push
lcall
mov
push
movsb
jne
test
xchg
bound
adc
sub
gs
loopne
xchg
arpl
adc
mov
movl
push
pusha
movl
push
push
lea
jmp
inc
shll
or
add
add
cmp
inc
dec
rcll
mov
jecxz
pop
je
add
dec
fists
loop
int
mov
imul
fsubl
dec
jae
adc
inc
loope
fcomp
dec
fs
stc
xor
je
pusha
inc
xor
dec
hlt
shl
fdivrl
mov
mov
movsl
das
idiv
xor
cmpb
fcompl
mov
and
xor
jmp
stos
mov
add
pop
xor
addb
push
dec
rorb
sbb
dec
lock
fistl
arpl
pop
andb
adc
pop
mov
insl
test
sbb
jno
jnp
push
loope
movsl
adc
and
mov
clc
iret
xchg
ret
popf
out
inc
jae
test
call
inc
xlat
popf
or
bnd
lods
jns
sbb
sbb
push
dec
fdivr
sub
int
cs
cmp
movsl
popf
rcrl
cmp
stos
dec
enter
jbe
sub
idivb
push
xor
push
inc
jno
int
jnp
sub
fwait
decl
xor
cwtl
mov
addl
test
cmpl
nop
push
cmpsl
xchg
lds
sbb
hlt
sti
cmpb
movsb
xor
jae
dec
cmp
inc
into
or
sub
and
and
pop
es
xchg
ljmp
lret
gs
push
ds
inc
cltd
fiadds
imul
iret
mov
mov
sub
inc
mov
xlat
lds
es
popf
pop
xor
pop
and
dec
lret
mov
shl
mov
xor
or
inc
mov
mov
mov
xor
mov
aaa
jle
fwait
xor
jecxz
jg
stc
inc
mov
pop
jbe
push
add
xchg
mov
negb
sbb
shlb
or
ret
int
xchg
in
pusha
addr16
pusha
fiadds
in
lret
mov
stc
arpl
ja
fwait
mov
jnp
dec
sbb
pop
and
cmp
arpl
mov
lods
jbe
addr16
repnz
dec
jb
shlb
add
mov
shrl
cmp
shrl
data16
add
xor
in
jmp
pop
stc
jmp
out
add
push
pop
jg
xor
pop
movsl
or
test
sub
pop
jge
mov
bound
js
scas
xor
test
into
rcll
mov
mov
xchg
popa
add
repnz
out
pop
mov
push
ljmp
mov
jbe
xor
inc
icebp
mov
pop
add
cli
scas
call
xor
xchg
pusha
push
inc
sub
jle
imul
jmp
xchg
imul
xor
inc
int3
in
hlt
emms
pusha
mov
sbb
addl
xchg
pusha
jae
pop
add
push
sub
cmc
nop
xchg
into
xchg
lret
bound
mov
mov
push
test
jnp
jne
incl
fsubrp
sbb
cld
jbe
mov
pop
dec
or
push
pop
inc
mov
in
jbe
or
stos
push
fdivrs
sbb
push
fucomi
push
fdivrs
jle
cmp
or
cltd
call
pop
lods
addr16
frstor
fnstsw
fwait
cmp
inc
sub
jmp
cltd
insb
push
inc
out
aas
inc
sarb
cmp
out
in
add
int
ja
sbbl
add
jno
mov
movsb
dec
imul
sub
in
pop
pusha
ja
insb
stos
js
cld
mov
sbb
scas
push
mov
cwtl
push
xchg
xchg
stos
cmp
adc
gs
out
lcall
stos
pusha
data16
jl
sarl
mov
sti
repz
push
lock
xchg
mov
jno
pop
mov
jge
enter
mov
sub
inc
lods
sub
sarb
push
ja
jp
sar
sub
mov
pop
xor
xchg
or
xchg
pop
sbb
das
sbb
movsb
insl
inc
in
shrl
stos
cmp
xor
pop
div
aad
pop
mov
adc
cli
lea
xchg
pop
popa
mov
mov
add
clc
test
cmpsb
shll
pop
push
jne
mov
jmp
xchg
call
fstpl
pop
ljmp
movsl
nop
ja
pushl
lods
loop
enter
sbb
and
xchg
pop
aam
xlat
adc
aam
push
inc
sbb
aas
gs
jne
shrl
sub
xlat
mov
mov
pop
ret
shl
push
cmc
addr16
cli
insb
shll
jns
in
sub
sub
adcl
out
imul
mov
inc
addr16
loop
rcl
rcll
pop
out
rcrb
out
sti
mov
mov
repz
out
jge
sub
test
clc
push
lds
lds
lds
xor
dec
sti
cli
push
mov
sti
and
popa
xor
scas
lret
imul
popa
inc
jle
mov
push
adc
and
in
xchg
push
sub
jbe
cwtl
fisttps
shlb
pop
pop
cwtl
test
adc
inc
adc
lret
outsb
hlt
lcall
dec
add
pop
adcl
enter
imul
inc
and
jbe
pop
adc
inc
and
sahf
movl
lea
jmp
mov
and
fldl
push
fstp
cwtl
jb
fdivrp
aas
cli
loope
or
les
movq
imul
call
movsb
ja
push
lods
jmp
xor
pop
fistps
adc
movdqu
es
sub
shll
sub
jno
fs
enter
insl
and
outsb
repnz
dec
cmp
inc
stos
frstor
push
div
cltd
test
xor
xchg
lcall
push
ret
mov
xchg
popa
fcomip
or
xor
pop
pop
or
stc
andb
add
dec
jbe
and
and
jne
jle
mov
sbb
test
xor
xor
jns
divb
or
out
out
out
xor
stos
adc
xchg
cs
mov
push
mov
pop
outsb
cmp
jo
stos
mov
jns
mov
sub
lret
xchg
pop
cwtl
pop
pop
in
repnz
ja
mov
push
push
test
fwait
out
xor
xor
lock
pusha
xchg
ret
cmp
idivl
int
pop
mov
stos
mov
or
push
pop
repnz
mov
rorl
test
xor
add
pusha
seta
bswap
mov
jmp
mov
scas
and
push
imul
xchg
shll
inc
add
or
mov
movsb
iret
es
nop
rorb
xchg
cs
and
outsb
xchg
into
inc
popl
ds
aaa
popa
inc
and
mov
cmp
loop
dec
mov
pop
add
mov
inc
mov
insb
push
loope
fisubs
cmpsl
ds
out
xor
addr16
sarl
jmp
mov
sysret
jmp
jl
push
cltd
out
push
addr16
movsb
cs
es
pop
dec
movsb
lock
xor
cli
jnp
sub
add
mov
push
push
stc
clc
mov
lods
movsb
loope
in
push
push
mov
call
inc
movsb
sub
push
cmp
push
mov
les
loop
popa
sbb
andb
push
xchg
notb
pop
cmp
inc
mov
fists
push
dec
mov
jae
fdivl
inc
lret
and
lea
mov
and
arpl
and
clc
xor
insb
xchg
inc
mov
dec
neg
lea
fucomp
pop
shll
inc
xor
scas
fnstcw
popa
out
cs
dec
adc
test
and
rcrl
and
loopne
fimuls
ret
mov
pop
mov
insl
xor
cmp
or
pushl
inc
daa
add
cmc
outsl
repz
pusha
jbe
mov
jns
call
js
cmpl
and
movsb
jb
jne
xchg
cmp
sbb
cld
push
cltd
arpl
insl
xchg
mov
add
stos
in
pop
mov
inc
xor
sbb
xor
popf
shll
push
shl
xchg
push
mov
pushf
lcall
xor
cltd
mov
scas
jg
push
dec
pop
xchg
jp
hlt
xor
loop
cld
push
or
and
jmp
cwtl
xor
aad
pushf
cmp
cmp
mov
mov
shll
xchg
das
inc
aam
ss
xchg
into
loop
cmovs
xor
xchg
mov
sbb
dec
sub
xchg
shr
rolb
je
repz
dec
js
inc
inc
scas
cwtl
mov
out
or
inc
dec
insl
add
jecxz
insl
dec
xor
and
jle
mov
xchg
jne
ss
stc
bnd
adc
sub
fs
jmp
loope,pt
jmp
lahf
call
jmp
sbb
and
sub
inc
pop
mov
arpl
daa
cmp
ret
mov
fcomip
push
jmp
jne
nop
jae
into
or
push
xor
rol
shll
dec
xchg
addr16
jmp
jns
enter
sub
mov
pop
push
mov
jmp
xchg
out
cltd
add
and
push
xchg
sub
loope
insl
push
adc
sahf
push
ss
dec
add
ss
dec
test
insl
enter
fmull
mov
push
mov
fwait
mov
dec
pop
ja
xchg
inc
mov
rolb
dec
push
fcoms
inc
add
xchg
inc
in
in
mov
and
mov
out
mov
pushf
stos
or
mov
xor
ret
pop
sbb
imul
fcoml
mov
ret
or
es
popf
scas
lcall
fwait
dec
xor
xchg
push
ret
sbb
jb
jns
movsl
push
pop
xchg
clc
adc
xchg
push
adc
jmp
movl
pushf
push
lea
call
clc
add
pusha
mov
jmp
pushf
mov
push
movl
mov
pusha
push
lea
jmp
dec
fcomps
js
mov
ret
fimuls
stos
or
and
cltd
or
and
push
popa
in
and
test
and
movsb
xchg
sub
sub
and
mov
cltd
aaa
je
xor
and
aam
cld
cli
dec
cmc
cmp
ret
in
sub
ss
cmp
popf
test
sbb
pop
fcmovnbe
push
je
or
addr16
pop
in
data16
fcomps
mov
test
cld
imul
jae
pop
leave
pop
or
ret
mov
dec
inc
mov
popa
call
sti
cmp
and
je
bound
shll
jg
sbbl
mov
inc
push
jp
sbb
push
mov
jb
xchg
mov
and
movsb
ljmp
nop
insl
arpl
pop
or
xor
mov
into
clc
rorb
stos
jg
cltd
addr16
xchg
and
push
cmp
add
and
shrl
cwtl
mov
cmpsb
ficomps
negl
pop
inc
mov
xchg
int3
jp
incl
jmp
outsb
push
popf
mov
int3
adc
shl
mov
and
sub
test
add
jb
outsb
xor
cmpb
rcrb
adc
add
add
add
push
dec
sub
or
jl
add
sbb
ss
jmp
sbb
push
shlb
js
mov
mov
int
int3
lahf
mov
cmp
icebp
adc
aad
fsubl
sbb
pop
sbbl
cmpxchg
insl
dec
dec
bound
and
scas
dec
in
or
mov
push
or
dec
push
mov
mov
bound
and
and
xor
rol
mov
stc
mov
push
cmc
movzbl
and
bts
add
xor
mov
cmc
mov
pusha
stc
pushf
push
shr
cmc
call
xchg
rcrb
adc
fcomps
and
inc
shr
mov
lock
jne
dec
aas
mov
ret
loop
add
test
loope
jmp
pop
pop
out
or
adc
bound
fwait
addr16
adc
mov
lahf
sub
std
pop
add
push
push
mov
jbe
lock
pop
sub
xchg
inc
popf
fs
mov
mov
jb
add
loopne
bound
mov
cltd
mov
mov
cwtl
fmuls
imul
mov
rorb
icebp
test
lret
mov
daa
cmp
sub
popf
lock
mov
xchg
and
adcl
popa
test
or
adc
cmp
ss
jecxz
xchg
fwait
jbe
mov
mov
or
bound
ljmp
dec
xor
lds
fs
lock
xchg
push
jecxz
xor
push
movl
call
cmpsb
sub
mov
jne
clc
xor
out
out
lret
imul
aas
lds
cmpsl
adc
jl
inc
cmp
enter
mov
repz
iret
xchg
out
cmpsl
enter
repz
aaa
les
or
dec
dec
xor
enter
ss
dec
data16
inc
movsl
rcr
test
add
mov
loope
jmp
cmp
push
mov
and
cli
out
sbb
imul
push
xor
outsl
mov
rcrb
test
inc
stc
and
jle
add
xchg
dec
sti
push
movsb
or
repnz
push
sbb
rcll
iret
jnp
xchg
and
and
repz
leave
stos
inc
push
add
adcb
lods
sub
adc
scas
or
bound
fst
nop
leave
scas
jbe
loope
mov
xlat
test
cmp
cmp
call
xor
iret
inc
adc
out
sahf
ret
jecxz
stc
jb
lods
les
mov
jb
pushf
jbe
sub
lock
mov
lods
push
call
mov
inc
mov
pop
or
xor
jg
nop
pop
or
gs
test
pop
insl
and
push
inc
mov
inc
ds
xchg
sbb
sbb
cmp
imul
or
and
das
cmc
mov
ljmp
pop
xor
inc
adc
stc
aam
mov
push
and
fsub
cmc
icebp
jmp
cltd
xor
or
sbb
pop
push
cmp
xchg
jo
pop
push
mov
mov
scas
jle
lods
in
push
sahf
arpl
icebp
jmp
xor
mov
in
or
test
mov
in
testb
dec
jns
data16
or
movsl
dec
sub
mov
inc
ret
inc
insl
inc
sbb
cli
test
cmp
adc
jo
mov
sti
scas
push
jl
sti
aam
cmp
into
lods
addl
scas
push
adc
sahf
shl
mov
mov
lahf
out
cmp
mov
shrl
pop
add
aas
inc
ret
xlat
adc
bound
push
mov
in
ss
dec
pushf
rclb
adc
in
inc
jbe
mov
pushf
cmp
out
push
sub
cld
aas
cwtl
mov
add
mov
ss
ljmp
in
ret
inc
inc
data16
aad
jne
jne
fsubrl
ds
aam
mov
dec
xchg
daa
ss
mov
mov
or
mov
pusha
fnsave
xlat
push
rcrl
lret
sbb
scas
pop
mov
mov
jno
push
xor
daa
push
jae
fwait
cmp
sar
xchg
pop
rorl
popf
sub
jno
push
outsb
dec
movsb
outsb
nop
test
mov
adc
and
mov
and
mov
inc
call
jns
push
cmp
add
mov
movsl
inc
mov
lock
push
push
or
out
cmp
ss
mov
or
cld
mov
inc
shrb
jmp
int
cmp
sub
faddl
loop
stos
subl
push
push
shlb
and
cli
xchg
push
fisttpll
push
movsl
mov
ret
inc
pop
push
nop
mov
pop
mov
add
ret
pop
xchg
dec
pop
add
cmp
and
cltd
adc
cmp
cmp
sub
jno
filds
pushf
aad
ja
and
adc
cmp
xor
iret
or
stos
gs
pop
mov
movsb
cmp
push
mov
jge
fs
outsb
xlat
pop
jp
mov
mov
cmp
out
movsl
into
xor
push
add
jl
mov
sub
jmp
leave
inc
icebp
pop
fucomp
push
cmp
dec
je
cmp
ljmp
sar
cli
inc
sbb
push
xchg
cli
fistl
or
mov
add
pop
pop
pop
negb
cli
lcall
and
mov
std
inc
loop
sub
pop
add
flds
cmp
or
pop
mov
xchg
clc
cltd
mov
pushl
push
push
xchg
addl
push
push
daa
lock
jg
sub
mov
mov
jne
xor
mov
xlat
sbb
in
pushf
fnstenv
and
add
shll
mov
ss
cmp
jne
cmp
loopne
fucom
call
out
add
into
inc
in
iret
hlt
mov
loop
mov
icebp
sbbl
pop
stos
daa
jbe
pop
mov
mov
sbb
push
dec
lahf
fnstenv
mov
testb
mov
loope
pusha
adc
jmp
sbb
cmp
arpl
push
ficomps
xchg
in
mov
int3
cmp
sbb
push
mov
inc
xchg
andb
inc
loope
lahf
fisttps
dec
cmpsb
fdivrs
popf
mov
dec
lret
out
aas
lret
xchg
push
mov
dec
pop
and
fldenv
cs
push
mov
in
push
int
movsl
and
jo
xchg
dec
outsl
lret
add
mov
outsl
lods
mov
push
add
adc
stc
test
mov
shr
in
cli
aas
xor
outsb
frstor
loopne
mov
sub
or
cltd
xor
scas
mov
ja
in
stc
jns
popf
in
mov
mov
mov
mov
adc
sbb
sbb
out
xchg
das
lea
push
push
mov
add
idivb
in
mov
mov
mov
cmpsl
pop
pop
ret
pop
add
iret
xchg
adc
and
icebp
rcrl
pop
inc
faddl
test
into
xlat
add
jl
mov
jns
leave
jo
lahf
cli
xchg
nop
xor
ja
fdivr
sarb
add
dec
loop
lret
pop
sbb
cmp
or
mov
fnstcw
xchg
je
cld
outsl
mov
cmp
jne
imul
out
sbb
sbb
mov
nop
jae
and
jb
xor
xchg
mov
jp
mov
and
sbb
int3
xor
jae
idiv
stos
cmpsl
sub
arpl
xor
cmp
xor
scas
mov
jp
add
xchg
jle
cmp
sub
mov
dec
inc
lcall
repz
es
in
xchg
xor
outsl
out
mov
in
adc
test
test
push
mov
outsb
push
fidivl
xchg
mov
xchg
test
cmp
xchg
push
mov
mov
cmpsl
inc
mov
xchg
mov
cltd
jmp
jne
pop
repnz
test
xchg
cmp
repz
or
cmp
mov
clc
push
inc
insb
clc
mov
mov
ret
inc
lea
daa
mov
fwait
mov
push
js
xchg
xor
imul
shll
mov
leave
lahf
cld
mov
ljmp
in
das
add
loopne
mov
push
aad
sub
and
xchg
dec
jae
sysexit
mov
movsb
nop
jecxz
mov
test
push
xor
enter
ljmp
popa
sbb
ljmp
pop
aad
loopne
das
je
iret
int
sub
repnz
or
xchg
sub
add
xchg
dec
aaa
jp
xor
mov
movaps
dec
adc
xor
call
lret
mov
push
xor
or
iret
mov
imul
ja
mov
das
or
sbb
test
test
xchg
or
pop
movsl
push
popf
sub
rcrl
xchg
dec
or
xor
scas
shrb
sub
and
push
into
cmp
lcall
outsl
jne
pop
sub
push
ja
iret
sub
mov
xchg
and
xacquire
xchg
push
ret
dec
xor
in
lods
mov
sbb
mov
hlt
push
loope
xchg
dec
dec
jp
add
je
jmp
mov
bound
ds
cmp
aas
mov
inc
add
aam
cmp
outsb
jp
clc
sub
aas
dec
insb
push
pop
push
mov
out
repnz
dec
mov
lahf
push
sub
cs
push
cmpsb
clc
inc
cmpsl
xchg
les
jge
aaa
push
repz
xchg
mov
sub
sub
jmp
inc
cmp
dec
push
xchg
or
iret
cmp
scas
test
test
fisubrs
sub
xchg
mov
mov
repnz
xor
addr16
cs
test
dec
mov
jg
ss
or
arpl
in
mov
mov
notb
mov
add
sbb
or
mov
push
in
into
xchg
or
and
add
mov
adc
and
sub
pop
or
fcmove
pop
into
inc
sub
xor
mov
loop
adc
test
lods
pop
int
or
mov
inc
inc
adc
mov
mov
dec
daa
or
cmp
cmp
aad
cmp
sti
fisttpll
or
pop
fwait
pop
xchg
orl
test
xor
xchg
and
sarb
jne
xor
and
sub
das
mov
or
mov
mov
inc
pop
xchg
mov
jmp
add
or
jne
repz
dec
and
cld
mov
inc
loop
movsl
call
and
mov
mov
mov
xchg
dec
sub
lret
test
push
notl
cmp
xchg
inc
cwtl
sbb
test
lcall
icebp
mov
mov
sub
or
inc
mov
icebp
pop
std
sbb
push
mov
sub
daa
outsb
fidivrs
and
push
insb
push
push
pop
imul
cmp
mov
sbb
imul
insb
push
sub
shrl
and
repnz
movsl
dec
pop
les
jmp
push
and
push
push
aam
jp
adc
aam
shll
xchg
dec
or
jle
cs
shrd
xor
cmp
mov
xor
mov
xor
ret
xchg
out
ljmp
and
sub
adc
shll
enter
cmp
jle
or
fcmovnu
shll
test
idivb
xor
xor
push
jecxz
mov
outsl
lock
icebp
dec
lods
mov
lcall
xchg
icebp
cmp
decl
shlb
xor
adc
sbb
xor
mov
repz
or
ja
scas
push
xchg
dec
inc
jbe
movl
push
push
push
lea
jmp
pusha
pushl
pushf
movl
pushf
call
and
stos
enter
test
jp
jo
jno
inc
cwtl
shll
in
push
adc
jle
loope
xor
mov
in
int3
ret
popf
sahf
in
lcall
bound
addr16
sbb
mov
shll
into
mov
mov
movl
outsl
push
pop
mov
jnp
cld
xchg
shlb
cli
cmpsl
xlat
mov
inc
popa
jo
mov
push
arpl
fnstenv
jnp
adc
inc
test
loopne
test
jnp
test
gs
inc
mov
xchg
cmc
out
popf
sbb
adc
popf
fs
fmuls
ljmp
mov
push
fidivrl
mov
bound
inc
xchg
xchg
inc
mov
jo
outsl
imul
testb
icebp
repnz
push
aaa
ret
inc
cmp
cmpsl
jge
inc
pop
jmp
sbbb
cmc
inc
mov
mov
mov
enter
adc
cmpsb
iret
std
mov
aaa
add
xor
rorb
adc
data16
add
pusha
xor
je
lods
xchg
or
imul
lods
test
jo
dec
and
pop
clc
into
je
cltd
in
pop
push
and
mov
iret
jge
mov
mov
nop
lea
adc
inc
cmp
inc
mov
mov
xor
dec
and
lret
inc
or
adc
stc
mov
or
jne
pop
xor
xchg
sub
outsl
push
leave
mov
loopne
pop
mov
enter
loop
cltd
mov
push
mov
inc
test
mov
inc
pop
mov
jb
je
pop
or
jp
and
dec
mov
xchg
inc
sbb
fwait
icebp
jo
stos
mov
das
fdivrp
jb
sub
xchg
leave
mov
mov
jno
test
and
cmp
leave
cmc
jae
xchg
mov
inc
loopne
fdivs
out
ljmp
mov
and
add
fwait
mov
clc
cltd
mull
sti
gs
mov
and
push
push
lds
sub
mov
xor
sbb
mov
and
add
loopne
push
pusha
pusha
movl
jmp
jmp
push
push
movl
pusha
pushl
mov
lea
jmp
call
fnstenv
in
mov
add
or
mov
push
test
push
mov
or
int
cld
inc
push
into
dec
inc
push
or
es
xchg
or
cmpsl
jbe
or
mov
and
repz
aad
mov
mov
fwait
inc
inc
decl
fnstcw
scas
or
mov
pop
push
xchg
xor
add
push
sbb
mov
dec
jno
icebp
mov
sub
cld
pop
stc
adc
out
into
pop
mov
xor
xchg
sbb
pop
or
imul
pop
xchg
ja
sbb
jae
sub
xchg
sbbl
lret
shlb
and
pushf
dec
sub
les
gs
out
les
xchg
gs
add
fcompl
js
out
jb
xor
adc
out
lods
dec
push
dec
cs
jns
inc
push
push
int
cmc
pop
mov
push
outsb
dec
jns
jne
push
into
mov
cli
mov
cmpsl
in
outsb
cmp
sub
mov
fldenv
fwait
dec
dec
lods
mov
ja
push
cmp
ljmp
cwtl
insb
inc
cs
outsl
push
jg
aad
dec
jae
jp
cmc
xor
jp
xor
daa
sub
mov
mov
outsl
in
shll
mov
xchg
clc
add
pop
mov
aad
in
pusha
add
sbb
xlat
nop
mov
mull
or
ret
mov
cmp
idivb
xchg
imul
ret
loope
sub
and
jno
add
xchg
sbb
lret
dec
push
mov
adc
leave
lods
xchg
or
xchg
inc
loopne
dec
clc
mov
and
pop
mov
sar
sub
mov
and
and
or
xchg
inc
jb
int3
pusha
pusha
call
pushf
movl
jmp
xchg
sbbl
xchg
mov
gs
xchg
int3
mov
inc
xor
andb
fdivrl
and
insl
mov
push
push
cmp
std
pop
or
cmp
xchg
inc
pop
jae
call
call
aaa
arpl
sbb
out
add
pop
xor
pop
cltd
sub
into
cmp
adc
dec
adc
add
sub
call
dec
and
mov
add
sbb
sbb
add
jecxz
loopne
pusha
push
cs
lcall
sbb
pop
cwtl
push
xchg
pushf
pop
call
addr16
pusha
push
call
or
pop
dec
mov
lret
xor
adc
jnp
mov
jne
or
je
rorl
cli
and
inc
clc
inc
jp
into
xor
xchg
dec
imul
push
sub
lret
imul
push
adc
push
push
js
cltd
int3
lea
daa
icebp
dec
xor
mov
add
or
in
xor
xor
xor
or
testl
push
movsb
inc
adc
jecxz
decb
pop
nop
leave
cltd
dec
jne
dec
addr16
aaa
push
xor
sbb
mov
sbb
dec
lods
adc
xchg
or
cmc
mov
push
mov
mov
mov
cmp
push
push
std
arpl
loope
add
adc
ret
ficompl
aaa
push
and
xchg
push
fstpl
dec
mov
dec
or
cmp
arpl
sub
jle
inc
cmp
gs
mov
jg
sbb
add
int
clc
push
pop
cmp
adcb
inc
fst
iret
sbb
adc
pop
push
xchg
and
cmpsb
and
inc
mov
xchg
inc
pop
adc
movsl
aaa
adc
and
jnp
push
sti
push
mov
inc
push
mov
movl
push
lea
jmp
jmp
push
movl
pusha
pusha
movb
call
movl
movb
jmp
sbb
insl
test
push
or
xchg
xchg
lods
fwait
lret
mov
ficompl
cmp
fisubl
aaa
std
pop
xchg
sub
mov
jno
icebp
cmp
icebp
mov
divb
mov
and
add
xor
aad
lock
dec
xchg
iret
jge
lods
xor
or
in
mov
jecxz
arpl
fsts
imul
inc
fildl
daa
dec
sbb
pusha
daa
xchg
sub
std
jecxz
in
and
sbb
lret
sbbl
push
mov
mov
sbb
insl
adc
push
pusha
xchg
lahf
sub
sti
pop
push
inc
push
add
pusha
frstor
mov
pusha
lcall
sbb
add
jno
jnp
movsl
pop
fisttpl
lods
repnz
mov
ret
cmp
mov
je
loop
in
dec
fcoms
fildll
in
adc
cmp
sub
arpl
xor
xchg
adcl
xor
mov
int
push
adc
int
lea
or
jp
or
adc
push
les
shrb
pushf
sbb
sti
lret
daa
adc
std
xor
aaa
scas
mov
mov
mov
lock
iret
adc
insl
cs
lret
xchg
xchg
icebp
adc
cwtl
pop
lds
mov
ss
and
lods
mov
leave
cmpsb
negl
xchg
adc
aad
sahf
adc
dec
fwait
das
mov
punpckhwd
mov
push
loopne
pop
xor
nop
pop
in
jmp
popa
mov
shrl
push
xlat
std
mov
mov
cmp
std
mov
dec
mov
test
andb
stc
mov
scas
jecxz
jb
movsb
dec
sub
dec
xchg
sub
mov
mov
and
js
inc
xor
lret
mov
xor
fisubrs
mov
push
push
xchg
ds
arpl
in
sbb
mov
sbb
cmpl
sub
xchg
cmp
xor
ss
imul
cs
and
jno
mov
dec
scas
movsb
pop
inc
or
sbb
jnp
mov
rclb
xchg
ds
popf
sbb
xor
call
jno
nop
mov
xchg
in
mov
out
mov
adc
shll
or
jb
nop
sbb
sbb
cmpsl
jp
pop
cmp
xchg
dec
aam
out
stos
jmp
inc
adc
bnd
adc
adc
inc
inc
pop
and
xor
cmp
xlat
mov
adc
in
mov
ret
pop
je
xchg
cmp
add
bt
stc
cmp
cmc
mov
ror
xor
bts
btr
mov
jmp
mov
lret
test
ret
push
xor
cmp
and
mov
pop
ret
pusha
fidivl
and
pop
dec
mov
sub
push
fidivl
add
push
andb
jne
jmp
lret
adc
sub
mov
pop
push
shlb
xchg
cmp
sub
pop
js
pop
adc
push
les
movsb
lock
or
xchg
cmp
lret
add
fs
jne
bt
mov
rcr
pushf
not
push
mov
movzbl
not
pusha
imul
bt
mov
pushf
cmp
shl
pushf
cmp
add
pushf
clc
mov
mov
cmp
pushl
lea
jbe
pusha
add
call
pushf
movb
movl
call
push
lock
std
std
mov
enter
jns
mov
lret
std
cs
rcrl
and
xor
mov
sub
jge
pop
in
push
in
pop
pop
leave
add
out
sub
test
dec
lahf
loope
out
aad
inc
mov
inc
xchg
xor
in
xchg
push
mov
adc
dec
cmpsb
add
xchg
add
enter
fldl
add
pushf
movl
pusha
push
movw
movb
lea
jmp
call
mov
movw
jmp
mov
pushl
bt
cmc
stc
test
push
call
scas
loop
sti
xchg
outsb
pusha
pop
std
or
cltd
pop
cmpsl
cmpsl
lcall
cwtl
pop
mov
ret
mov
adc
out
insb
cltd
xchg
inc
leave
xor
xor
jg
adc
jns
dec
add
shll
cltd
bound
mov
int3
or
mov
push
xchg
mov
aas
out
pop
push
cmpsb
mov
mov
jmp
lods
add
pop
icebp
sub
push
mov
mov
lahf
in
sub
dec
mov
arpl
fldl
xchg
outsb
nop
mov
shl
push
fs
sahf
lods
sbb
xchg
ds
fidivrl
or
shlb
xchg
add
and
and
aaa
daa
scas
mov
xchg
add
pushf
outsl
push
cltd
ds
out
xchg
dec
test
addb
lds
xchg
cmp
mov
pop
and
test
jo
fs
inc
or
push
sub
or
sub
add
xor
pop
mov
jno
push
in
push
mov
adc
dec
fwait
lds
mov
mov
cmp
insl
sbb
call
dec
int
ficoml
or
push
jl
mov
sub
inc
testl
adc
adc
push
lods
sarb
xor
pop
push
outsl
or
inc
loope
fdivs
movsb
jg
inc
fsubp
xchg
rclb
ja
jne
test
sbb
lods
inc
decl
decl
mov
xchg
xchg
pop
imul
jo
ret
stos
jg
inc
sahf
xchg
ja
mov
inc
pop
loope
add
cltd
jnp
cmp
push
adc
pop
ljmp
pop
clc
ret
scas
lock
out
xlat
push
mov
cmp
push
xor
dec
mov
or
or
cmp
rcll
std
aad
cmp
inc
jmp
jecxz
cld
js
repnz
xor
inc
cltd
mov
cmpsl
cmc
mov
aaa
mov
scas
in
inc
icebp
ret
iret
shlb
push
mov
push
ret
cs
xor
ds
sar
fists
sub
inc
jecxz
fadds
mov
push
or
lret
rorb
adc
pushf
ljmp
dec
jge
add
inc
xchg
and
mov
mov
out
xchg
and
ja
addr16
cmpsl
sti
loope
movsl
scas
adc
clc
fistps
fs
pop
pop
lcallw
cli
packssdw
add
stc
xlat
fdivrp
pusha
je
fsubrs
incb
cli
lods
jno
mov
mov
pop
push
sub
add
adc
push
dec
add
jne
dec
xchg
jno
mov
lret
inc
popa
mov
sbb
xor
daa
stc
pop
ss
mov
out
xabort
out
je
movl
cltd
push
mov
mov
xchg
xor
lret
out
scas
mov
mov
mov
decb
pop
mov
push
or
out
adc
ss
and
xlat
mov
or
imul
xchg
int
jg,pn
cmp
add
inc
fnsave
xor
inc
xchg
pop
cmp
add
lret
in
fsubs
in
data16
outsl
cli
mov
mov
shlb
nop
and
jno
stos
jne
jle
fwait
xchg
adc
mov
cmpsl
jno
pop
mov
adc
js
outsl
cwtl
cmpsb
sub
mov
cmp
inc
fsubrl
mov
pop
aaa
adc
sub
out
nop
inc
cld
bound
aad
dec
call
jne
inc
movsb
mov
xchg
cmc
mov
mov
fdivs
pop
jle
dec
rcr
mov
dec
outsl
push
test
mov
nop
test
cmpsb
rorl
outsl
ret
or
pop
xor
xor
ljmp
jbe
insb
enter
add
xor
ja
inc
cmpsl
cltd
leave
dec
ljmp
push
nop
mov
dec
dec
in
int3
xor
popf
add
and
and
lahf
sarb
push
jno
ja
xor
push
call
ja
jbe
in
movsb
push
daa
sti
or
insb
repz
pop
push
out
out
pushf
dec
int
xchg
pushf
div
xor
movb
pushf
dec
into
sbb
mov
in
cmc
outsl
enter
mov
adcb
lahf
lds
pop
insl
mov
cmp
cmc
push
rol
push
mov
inc
outsl
clc
dec
xchg
shll
pop
stos
adc
cmp
jecxz
in
inc
xlat
loopne
push
mov
xor
hlt
xor
popf
cli
push
lret
or
mov
test
sub
xlat
mov
xchg
push
aaa
fsubs
inc
enter
lret
mov
dec
mov
lcall
and
je
and
and
fwait
repnz
or
arpl
loope
ffree
pop
add
sub
xor
pop
xchg
xor
jns
dec
dec
cmpsl
jb
xor
push
cmp
pusha
sbb
jb
stos
out
pop
cltd
add
lahf
push
cltd
push
push
dec
jmp
mov
jle
mov
sub
int
ljmp
outsl
cmc
fistl
outsl
or
fidivrs
sbb
adc
inc
inc
popa
gs
lea
fldl
xchg
pushl
push
cmc
sub
lds
jge
fists
xor
jo
push
movl
jmp
pushf
movl
call
pushf
add
call
mov
mov
movl
pushf
lea
jmp
adc
sub
ret
mov
cli
pop
xchg
xor
sub
iret
cltd
not
into
xchg
or
das
push
data16
mov
ret
xchg
pop
sub
inc
mov
pop
clc
sti
rcrl
nop
adc
loope
pop
ja
mov
aas
popf
orb
lcall
ja
pop
add
cwtl
pushf
sub
add
ret
xchg
aam
ret
pop
lcall
jbe
es
imul
enter
das
or
cmp
cmc
fstpl
mov
loopne
loopne
icebp
int3
and
je
lea
cmpsl
inc
xor
es
mov
addr16
loopne
add
out
adc
idivl
push
dec
sbb
aas
aaa
lret
test
insb
dec
mov
sbb
dec
and
mov
and
out
adc
jp
das
leave
in
xchg
inc
mov
sbb
or
in
mov
xchg
mov
xor
sbb
idivl
aad
loopne
int
icebp
push
xlat
mov
xor
rorl
cmpsb
jae
mov
adc
mov
fdivl
mov
mov
xchg
pop
adc
jbe
add
outsl
cmp
jecxz
cltd
lcall
adc
xchg
sahf
fdivl
jae
cmp
ret
jo
inc
imul
xchg
in
sbb
aaa
insl
ss
fsubs
xor
ret
pop
sbb
popa
test
orb
push
push
es
mov
sbb
add
jo
sbb
scas
add
cmpsb
ret
push
jno
mov
outsb
push
xchg
js
dec
jmp
cmp
fdivrs
mov
sbb
jns
into
pop
mov
fisubrs
adc
mov
inc
ret
xchg
xor
inc
sarl
dec
std
mov
mov
or
xor
inc
popf
lea
movzbw
mov
mov
mov
movb
pushf
lea
call
push
add
push
pusha
pushf
movl
lea
jmp
movl
pushf
lea
js
push
push
movl
pusha
lea
jmp
jmp
mov
lods
daa
in
lahf
xlat
outsl
mov
and
mov
cmp
mov
sub
adc
fsub
push
les
inc
inc
and
adc
fsubrl
or
xchg
xor
add
sahf
and
ficompl
shl
push
shll
xor
call
call
sub
push
dec
jmp
pushl
mov
mov
call
movl
push
push
push
lea
jmp
bt
add
jmp
pusha
movl
mov
pushf
lea
jmp
aam
lcall
cltd
add
mov
bound
pop
add
aas
or
cmp
xor
outsb
jle
dec
aaa
cmpsb
stc
insb
mov
or
cld
cmp
scas
or
push
pop
mov
jg
mov
pop
popa
and
mov
out
pushf
or
jb
and
outsl
mov
loope
iret
mov
jne
je
xchg
xor
nop
inc
jmp
push
sbb
cltd
sahf
cmpsb
push
lahf
insb
lock
xor
inc
cmp
fdiv
push
cmp
aam
test
xor
cmp
xorb
inc
imul
nop
push
mov
ja
adc
add
xchg
test
inc
mov
imul
cmpsb
clc
imul
adc
mov
xor
push
sub
adc
mov
push
inc
mov
test
leave
fs
jmp
bound
jl
xlat
adc
adc
mov
mov
cmp
mov
das
or
jp
add
jecxz
clc
xor
nop
sarl
outsb
out
jg
ss
jbe
sarb
jecxz
dec
cmp
mov
pop
cmp
ja
dec
mov
mov
mov
lcall
add
push
sbb
push
pop
outsb
mov
leave
or
stos
xor
cs
inc
out
and
inc
cmp
leave
pop
sub
xor
cli
out
ljmp
addr16
les
data16
dec
adc
xchg
xor
sbb
lret
arpl
ljmp
pop
ret
int3
movsb
xor
xor
fs
push
fcmovb
cltd
mov
clc
fildl
lahf
push
xchg
insl
lret
or
fidivrl
aaa
jl
jae
xchg
xor
test
mov
int3
cs
xabort
sbb
mov
rol
in
add
dec
lahf
sbb
mov
data16
adc
jnp
mov
lret
dec
or
add
sbb
stc
cmp
or
push
push
ja
mov
fisttps
sub
jnp
mov
xlat
and
mov
lock
ss
pop
sbb
outsb
insl
call
test
sbb
in
sbb
cld
mov
mov
adc
xchg
mov
pop
test
mov
mov
pop
scas
mov
mov
enter
jg
test
cmp
jbe
and
mov
lea
adc
jmp
rcl
add
ficoms
lcall
cmp
loope
jl
mov
adc
movsb
push
jb
sub
xor
add
cltd
jns
sub
jecxz
pop
mov
xor
cmp
leave
pop
jb
pushf
mov
xchg
imul
xor
stc
push
ljmp
jecxz
repz
cmp
xchg
das
inc
jo
push
sbb
leave
pop
jmp
lret
dec
or
std
fwait
add
mov
xor
in
movsl
cwtl
ds
mov
cmp
mov
out
lcall
aas
or
xor
pushf
pusha
pushl
lea
jl
xor
dec
push
bsr
mov
rcl
adc
xadd
mov
movsbl
lea
cmp
btr
add
call
pop
repz
insl
pop
aaa
aaa
shll
mov
xchg
xlat
outsb
test
loope
dec
icebp
test
inc
ret
mov
arpl
ret
rcrb
pop
jns
sbb
dec
mov
jl
jno
fsubs
or
sahf
test
clc
mov
je
or
and
rol
mov
inc
mov
xchg
and
inc
mov
dec
fmull
imul
repz
mov
pop
mov
add
or
nop
in
insl
ss
push
jg
subb
loope
hlt
scas
or
push
add
or
mov
das
packsswb
je
fwait
loop
test
or
xchg
push
dec
mov
push
scas
flds
pop
and
push
fists
aam
jecxz
jl
cmc
adc
xchg
std
xchg
cmc
fs
cmpsl
adc
rcll
insl
repz
fs
inc
mov
add
fistpll
pusha
arpl
xchg
adc
adc
lret
cmp
mov
imul
pop
inc
jecxz
pop
into
or
jae
sarl
or
hlt
je
clc
sbb
dec
test
jns
sbb
mov
mov
pushf
jl
sub
pop
leave
sub
mov
int
addr16
pusha
xor
push
sbb
pop
pop
lret
daa
mov
adc
add
js
shr
inc
mulb
adc
lahf
cltd
test
or
and
das
mov
or
pop
jbe
mov
loopne
lret
xor
stos
in
add
sbb
mov
call
call
pusha
out
xlat
popf
xchg
out
dec
mov
jnp
cmpsb
inc
pop
scas
jl
mov
jecxz
lock
and
sbb
not
sub
pop
imull
pop
jo
inc
or
dec
es
and
push
test
jge
aam
rcrb
pop
jp
mov
add
jo
fisttps
cld
pop
pop
push
push
ret
xor
iret
sahf
mov
bound
inc
int3
outsl
cmc
mov
cmc
rolb
pop
add
mov
cwtl
adc
out
and
push
out
add
enter
xorb
pop
add
fwait
loopne
inc
inc
add
lcall
outsl
ja
pop
lock
mov
sub
stc
pop
lret
dec
out
mov
cmp
xor
push
movl
jmp
out
adc
negl
mov
push
add
aaa
aaa
sarl
push
mov
shll
arpl
lcall
sub
xchg
sub
pop
stos
test
sbb
jp
dec
sarb
xchg
sub
mov
push
jp
out
test
pop
scas
das
xor
mov
add
clc
adc
in
jge
xor
mov
jmp
add
jno
mov
nop
movsl
jbe
subl
out
xor
test
xor
lods
mov
outsb
cltd
mov
pushf
and
jle
and
mov
xor
les
mov
xor
test
jp
ss
imul
mov
and
sbb
imul
shrl
subl
cs
sbb
pop
cmpsl
mov
push
jge
push
or
add
cmpsb
cld
stos
inc
filds
jecxz
or
loope
xlat
add
inc
dec
addr16
enter
dec
inc
jge
dec
fs
ficoml
mov
inc
and
pushf
adc
push
sub
xor
sbb
dec
and
lcall
aam
adc
insb
mov
aaa
aad
stos
xor
jl
xchg
je
jne
lcall
into
sub
mov
mov
mov
fs
int
or
or
xor
mov
pop
cmp
mov
mov
xchg
xor
push
and
sar
xor
dec
fwait
mov
xlat
xor
loope
sub
shrb
test
mov
adc
aaa
inc
jo
incl
ja
or
push
push
mov
pop
dec
test
arpl
test
and
jbe
iret
int3
insb
mov
pop
into
add
andb
jge
and
add
fucomip
mov
adc
add
xchg
mov
or
cmp
push
push
test
insb
cmpxchg
cmpsb
xorl
jbe
push
lock
fidivs
rcrb
nop
mov
sbb
or
xor
sahf
xchg
inc
shll
fsubp
add
cmpsb
lods
mov
jne
or
push
lds
inc
push
jno
loopne
jge
jg
lods
repz
inc
mov
pop
stc
cli
cs
cmp
lret
lods
or
lret
loop
xchg
xlat
mov
cwtl
push
jmp
gs
or
aaa
sub
dec
push
cs
push
jb
mov
add
jns
fnstsw
shl
inc
inc
test
or
or
dec
jle
push
mov
inc
sbb
pop
jnp
xor
cmp
icebp
dec
in
out
cmp
outsb
ja
js
es
xchg
inc
xchg
mov
popf
clc
movntps
in
fidivl
sbb
xchg
jno
data16
bound
xchg
or
lret
fwait
jmp
clc
xchg
jo
add
jns
insl
lret
imul
xor
fstps
pop
je
jmp
popf
cmp
imul
lds
inc
pop
stc
idiv
sbb
fidivl
in
push
gs
mov
rcll
aaa
pusha
jmp
aaa
xchg
test
adc
xlat
and
cmp
fidivs
fwait
cmp
aaa
xchg
sub
sub
fidivrs
mov
jecxz
jb
rcrb
hlt
mov
fldenv
dec
dec
pop
cmp
xor
dec
ljmp
pop
cmpsb
mov
mov
adc
dec
mov
imulb
xchg
fiadds
add
mov
jae
push
icebp
clc
xchg
ja
bnd
imul
les
outsl
push
inc
sub
dec
mov
pop
nop
stos
dec
arpl
mov
pop
pusha
xlat
nop
call
lcall
mov
es
inc
les
test
jg
in
loop
jecxz
call
insl
push
inc
sahf
cld
sbb
ljmp
clc
js
xchg
mov
out
jbe
adc
adc
dec
inc
pop
mov
adc
adc
push
cwtl
jae
xchg
xor
hlt
jle
jo
je
xor
jno
push
cltd
jl
pop
ljmp
dec
fadd
lret
add
xchg
pop
cs
or
sbb
outsl
mov
jo
popf
fldl
mov
xlat
sub
cmc
xchg
add
inc
pop
test
gs
data16
or
pop
adc
or
cmp
cmp
jmp
and
sub
push
rorl
in
sub
sti
mov
cs
mov
loopne
push
jno
push
dec
mov
xchg
ja
push
and
adc
mov
outsb
adc
in
loope
inc
popf
sti
mov
cmp
sub
xchg
jb
lods
add
cld
sbb
sar
push
mov
ljmp
fistl
dec
xchg
stos
mov
add
inc
and
push
out
test
daa
jae
xchg
mov
sbb
aas
sbb
aaa
cmp
outsl
int
gs
push
pop
ja
mov
cwtl
idivb
xchg
inc
jecxz
mov
inc
fdivrs
cmpsl
ret
mov
sbb
fnstsw
sbbl
mov
aad
xor
sub
jo
jecxz
mov
bound
repz
cltd
cmp
and
or
mov
mov
aaa
fisttpll
jecxz
stc
jle
push
pop
je
stos
mov
sahf
mov
pop
fwait
movsl
add
testl
inc
cmp
lea
std
cmpsb
jle
xor
arpl
lds
pop
dec
mov
ljmp
adcb
test
xchg
push
inc
pop
adc
dec
dec
stos
pop
clc
xchg
loopne
pop
pop
add
fdivrs
ret
in
mov
jp
negb
sbb
ret
dec
xor
ret
rorl
test
in
outsb
push
cmp
aam
push
dec
out
in
or
pop
inc
mov
xor
dec
out
xchg
cwtl
mov
aad
pop
repnz
xchg
mov
aad
dec
push
jb
jecxz
sub
jmp
movsl
fistpll
jge
mov
addl
dec
outsl
int
mov
jg
mov
pop
jecxz
shrb
dec
imul
or
jmp
cmp
fistpll
xor
push
pop
clc
cltd
xor
call
xor
xchg
test
jg
xchg
push
je
int
faddp
mov
sub
bnd
data16
int3
or
lea
mov
add
loopne
sbb
sbb
mov
add
sub
mov
and
jecxz
sbb
pop
jb
out
mov
cli
push
or
dec
add
test
jae
mov
ds
xor
xor
push
cmp
push
icebp
cs
jns
pop
adc
cmp
addl
sbb
scas
pop
std
fwait
idivl
repnz
cmpsl
add
inc
mov
mov
sbbb
imul
rcr
xor
jl
nop
cmp
jo
aas
adc
xchg
xchg
jne
fwait
cmp
pop
or
clc
pop
pop
mov
mov
lahf
cmpsb
inc
push
or
fildl
loope
shll
dec
addr16
mov
dec
adc
jmp
jmp
add
je
push
fs
test
adc
shl
or
sbbb
dec
imul
inc
mov
fldenv
movsl
mov
fcmovbe
jae
js
ja
stos
std
xchg
xchg
lods
data16
mov
stc
mov
stos
adc
out
push
and
fnstcw
or
push
ret
or
sub
stos
xchg
ja
icebp
xchg
mov
shrl
sub
subl
xchg
aaa
push
pop
jnp
xor
xchg
pop
cli
xchg
das
inc
in
jl
mov
lcall
xchg
ss
insb
sbb
fdiv
sub
xor
xor
lods
leave
jne
xor
pop
cmp
cs
gs
in
xchg
cltd
dec
or
pop
push
into
jmp
mov
out
push
cmp
xchg
scas
push
rclb
pop
mov
cmp
sub
mov
out
sub
jecxz
and
or
dec
mov
cmp
jns
imul
jb
sub
test
adc
cwtl
mov
outsl
mov
xor
std
sbb
mov
ja
fadds
retw
cmc
xlat
xor
andb
xor
ja
int3
in
adc
mov
ficoms
xchg
and
xchg
call
movl
pushf
movw
lea
jmp
call
cmp
test
movb
mov
lea
jl
aas
aas
mov
shl
mov
cmc
pushf
push
lea
call
pushf
movl
push
lea
jmp
movl
pushf
pusha
mov
pushf
lea
jmp
add
xor
sar
setp
ror
bts
add
btr
xor
shr
xadd
movzbw
shl
shl
bts
sbb
shl
cmp
clc
movzwl
pushf
mov
sar
pusha
rcl
ror
shr
bsf
ror
cmp
add
rcr
adc
and
or
mov
jmp
movl
pushf
pushf
pushf
movl
pusha
movl
pushf
pushf
lea
jmp
or
outsl
xor
push
outsb
mov
into
jmp
enter
movd
pop
repnz
mov
pusha
incl
adc
jmp
cmp
add
in
lods
scas
sahf
fisubrl
cmpsl
sbb
fisttpl
dec
stc
pop
pop
cs
mov
psllw
sbb
jb
subb
sub
xchg
add
ret
pusha
lock
jb
enter
sbb
push
or
adc
aas
aad
mov
dec
faddl
pop
data16
jmp
test
sbb
and
sbb
cli
imul
addr16
push
aas
fcompl
int
jl
sub
ret
push
loope
scas
push
add
data16
sbb
popa
inc
pop
pop
mov
adc
int3
inc
scas
jmp
out
pop
call
mov
insb
aad
cmp
insb
insl
and
sbb
ljmp
dec
push
xor
cmp
daa
mov
pop
imul
fnsave
xor
repz
mov
dec
pop
adc
out
pop
movb
popa
ret
jne
je
push
test
add
loopne
call
addr16
push
test
inc
and
inc
xchg
sub
in
mov
inc
out
inc
shrl
sarl
scas
inc
in
sub
xor
rorl
add
ror
push
call
fistps
popf
or
negl
adc
and
into
xor
pop
push
push
sbb
inc
mov
jns
gs
mov
push
jo
xchg
pop
xlat
or
jmp
add
clc
dec
pusha
movl
pusha
jmp
aad
mov
xor
data16
pop
dec
pop
insl
inc
mov
xor
in
ror
fmull
outsb
insb
jg
xchg
pop
pop
aas
imul
pop
mov
cmpsb
jmp
in
rcrb
mov
out
inc
lcall
and
fs
pop
push
scas
jmp
sub
mov
and
inc
sbb
and
adc
and
movsb
mov
ja
and
cmp
cmp
es
das
dec
jmp
repz
or
push
ss
adc
test
lods
jg
pop
pop
pop
stos
xor
movw
jmp
movl
pushl
mov
lea
jmp
setae
mov
call
movl
push
lea
jmp
pusha
movw
movl
jmp
pushf
push
movb
call
fwait
or
or
sub
pushf
je
jg
shrb
jnp
xchg
xchg
pop
inc
insb
aas
xor
xor
dec
mov
bound
dec
mov
mov
xor
out
movsb
dec
sbbl
pop
aas
jg
xchg
shlb
xor
pop
ja
dec
cmp
imul
cs
out
shll
mov
out
mov
fimull
sub
shll
fwait
sub
imul
cmp
or
mov
adc
lahf
cmpsl
jmp
inc
shll
subl
sbb
jle
lret
stc
sahf
lret
movb
add
adcl
cmp
cmp
inc
add
inc
clc
fbld
dec
in
xor
nop
repz
inc
aad
xor
out
and
pusha
xor
cwtl
pop
mov
pop
ljmp
push
movsb
pop
shrl
inc
and
movsl
xor
pushf
pushl
call
pusha
jmp
xchg
inc
push
jp
cmpsl
lcall
idivb
int3
cli
jne
popa
pop
pusha
mov
int3
xlat
lods
jae
andnps
or
and
xlat
ret
shrb
xchg
dec
hlt
pushf
mov
jb
int3
xlat
lods
push
loope
int
lods
jae
pusha
sbb
and
stos
mov
mov
and
aad
mov
movsb
hlt
mov
in
push
pop
cmp
add
lock
movl
sbb
mov
xchg
sbb
add
xor
xor
pop
push
shrl
ficomps
push
and
je
adc
mov
movsb
mov
fldt
scas
push
cmp
add
mov
mov
sbb
xor
jo
xor
jae
pop
out
jns
cmpsl
sahf
in
roll
pop
test
xchg
pop
inc
or
adc
mov
pop
cmpsl
sbb
loop
or
mov
jne
jne
ret
out
adc
adc
xchg
xlat
cmp
push
xchg
test
pop
lahf
in
cmp
jbe
loope
and
adc
jge
xchg
in
and
mov
xor
sbbl
sbb
pop
xlat
cmp
push
sub
mov
jmp
pop
mov
add
and
divb
xchg
sbb
mov
xchg
fistpll
jnp
scas
push
cmpsl
cmp
jno
xchg
sbb
js
stos
jne
fldl
xchg
xor
dec
je
fistpll
adc
lods
jle
insl
ror
sub
xor
out
and
ror
je
cmpsl
add
mov
rorb
addb
ret
sarb
sbb
cld
mov
or
xor
stos
xchg
sub
pop
mov
arpl
jo
xchg
sbb
mov
inc
popf
jge
pushf
lea
jmp
pop
add
ror
mov
repz
test
or
in
jbe
mov
mov
push
movsl
dec
adc
outsl
sbb
xor
inc
int3
movsb
aaa
sahf
cli
adc
mov
insb
ret
add
and
loopne
mov
jmp
roll
pop
cmp
loopne
mov
sbb
loope
scas
jnp
in
ficompl
ret
aaa
xlat
nop
dec
and
xchg
and
dec
adc
dec
pop
pop
mov
jge
add
mov
test
mov
mov
add
sbb
ja
xor
dec
cltd
ja
adc
adc
retw
js
imul
leave
dec
andl
sbb
mov
int
pop
imul
adc
xlat
cmc
adc
dec
mov
jge
sub
outsb
xchg
sub
jae
test
out
ds
lods
mov
adc
icebp
adc
icebp
loope
dec
aaa
pop
cs
sub
fisubrs
insb
fs
jno
push
mov
rorl
inc
pop
mov
cltd
mov
mov
popa
enter
insb
dec
xchg
insl
cltd
std
adc
inc
mov
jge
sbb
inc
jecxz
rcrb
inc
test
flds
jg
mov
xchg
ljmp
cli
cmp
lcall
xlat
push
ror
movsl
inc
xor
inc
lods
mov
jecxz
leave
pextrw
dec
sbb
ljmp
xor
mov
mov
lea
rolb
jbe
and
or
stos
stc
push
lret
jmp
push
daa
xchg
js
subl
xor
jmp
repnz
and
and
xor
jg
lret
fld
cmpsb
jecxz
jp
pop
stc
push
xor
xor
mov
mov
out
inc
and
xchg
sbb
cmp
inc
and
sbb
cli
pop
mov
push
call
call
movl
push
jmp
imul
or
push
dec
sbb
ret
fwait
jb
xor
mov
test
or
add
js
adc
lds
das
rcrb
les
sbb
mov
cmp
addb
mov
sbb
adc
fdivl
cwtl
mov
xor
cmp
xchg
inc
test
xchg
mov
leave
mov
fdivp
or
leave
es
jb
sub
xor
xor
or
jno
dec
and
mov
push
dec
cs
lods
or
lods
cmp
mov
push
nop
sub
sahf
add
jg
fcoml
movb
adc
push
jns
and
adc
mov
insl
out
or
xchg
add
cmpsl
repnz
aad
aas
loopne
lcall
hlt
sahf
add
or
in
mov
aas
cwtl
inc
fcomip
mov
jb
mov
test
push
out
repnz
inc
cwtl
push
push
in
std
adc
dec
jmp
add
pop
adc
lret
and
adc
pop
es
sub
cld
aaa
cmp
cmp
stos
test
cld
gs
pop
jle
test
insl
lods
divl
add
and
loope
dec
xchg
scas
mov
and
pop
popf
fidivrs
and
scas
loope
jns
into
loope
xchg
adc
dec
roll
outsb
clc
xchg
cmp
cmp
cli
popa
xor
lret
cmp
ds
mov
adc
and
mov
xor
aam
xlat
call
mov
stc
ss
push
imul
in
fldenv
je
sub
je
sub
cld
aaa
adc
lds
jmp
adc
push
lock
xor
int3
cmp
sti
call
inc
leave
stos
xor
rcl
rcr
mov
lea
cmc
ror
mov
ror
pushf
movb
imul
movzbw
bsr
mov
clc
pushf
test
shl
pushf
cmc
test
add
jmp
movl
push
push
lea
jmp
jmp
int3
scas
in
jecxz
sub
dec
adc
lock
pop
pop
sbb
sbb
cmp
stos
push
mov
mov
rcrb
subl
lds
cltd
loopne
mov
inc
pop
loope
stos
mov
sarl
cmp
inc
mov
fistpl
push
xchg
inc
sub
add
pop
fldt
outsl
ret
fstpt
cmp
adc
popf
xor
cmpsl
aam
sub
pop
and
fisttpll
mov
daa
mov
push
movsb
imul
pop
shr
cmp
bnd
out
sti
sbb
call
out
adc
stos
jne
jmp
xor
jne
lock
data16
adc
jbe
adc
loope
jnp
push
movsl
fstpt
add
popf
inc
repnz
insb
sarl
push
sbb
imul
lods
in
test
sub
fcomps
dec
and
jg
mov
gs
movsb
stos
xor
dec
sub
mov
outsb
mov
push
mov
cmpsl
pop
clc
xchg
pop
lret
fwait
push
or
xor
lahf
loop
push
pop
rcl
jmp
xor
inc
fnstsw
xor
sbb
pusha
andl
pop
lahf
repz
mov
call
sub
lods
cwtl
pop
dec
mov
pop
dec
out
adc
icebp
mov
out
arpl
jmp
jns
fmuls
imul
xor
mov
add
leave
clc
inc
pop
jns
jne
xchg
shlb
repz
arpl
mov
sbbb
and
lea
lret
aad
imul
repnz
pop
in
shr
popf
push
icebp
test
push
es
cmp
fsubl
xchg
pop
sbb
dec
pop
pop
test
xchg
dec
inc
out
fadds
sbb
dec
mov
push
adc
sbbb
dec
mov
adc
pop
and
sub
ret
sbb
mov
xchg
andb
inc
movsb
lods
push
divl
sbb
andl
sub
test
or
test
add
mov
icebp
test
jecxz
mov
cmc
mov
mov
jae
scas
in
cli
jno
daa
and
faddl
rorl
add
add
xor
and
push
jl
iret
rclb
xorb
andb
adc
aam
jns
pusha
nop
arpl
sbb
and
push
sub
ja
xor
imul
push
shl
xlat
pop
nop
notb
icebp
aas
and
lcall
mov
dec
mov
xor
div
cmp
and
repz
loopne
adc
xchg
adc
inc
push
add
jp
lea
lahf
jg
je
bound
sbb
add
je
fstp
pop
pop
pushl
xchg
adc
xor
in
lods
mov
xor
mov
inc
push
inc
flds
ds
cmpsb
cmp
mov
int3
jb
dec
lahf
mov
xchg
cmp
dec
mov
data16
inc
push
mov
jge
les
rorl
ljmp
lea
dec
in
push
aam
xor
mov
mov
push
aam
mov
aam
addr16
push
icebp
dec
shrb
dec
stos
rclb
xchg
rorl
sbb
sub
mov
and
jge
jmp
outsl
sbb
mov
xchg
rolb
and
into
add
clc
and
test
jle
inc
xchg
xchg
out
and
adc
cmp
jg
xor
push
push
adcb
cmc
hlt
xlat
into
mov
sarb
out
int3
xor
adc
sar
stos
insb
push
gs
int3
jnp
pop
pop
js
xor
jns
adcb
xlat
ja
out
sub
sub
adc
cld
xlat
jno
push
pop
xor
jmp
push
mov
xor
out
dec
ljmp
repnz
dec
pop
mov
mov
in
sub
repz
jmp
shll
xchg
adc
rclb
xchg
shlb
sub
push
rclb
cmp
xchg
adc
mov
loop
mov
rcrb
jmp
lret
stos
nop
outsb
mov
lret
shrb
gs
xchg
data16
pop
mov
aad
mov
popf
data16
enter
push
int3
xchg
xchg
jecxz
cmpsb
inc
int3
es
shrl
jl
decb
add
mov
jae
call
pop
xor
fdivs
pcmpeqw
stos
imul
adc
or
mov
xchg
adc
lods
cmp
out
movaps
mov
add
loop
xor
mov
in
xchg
cltd
xchg
je
sbb
pop
scas
mov
test
adc
dec
bsf
add
bts
mov
jle
pusha
add
test
test
movb
cmc
xor
test
cmc
stc
add
sar
clc
dec
pusha
movzbl
dec
clc
cwtl
bts
mov
test
push
or
not
imul
bswap
movzbl
shl
add
bts
movzbw
adc
ror
lea
bsr
movw
ror
clc
add
rcr
xor
adc
pushl
movw
add
call
bt
add
jmp
movl
push
movl
pushl
lea
jmp
call
jmp
lea
jae
movsbw
push
cwtl
rdtsc
mov
not
push
mov
not
setne
bswap
mov
pusha
jmp
jmp
insl
dec
fidivrs
mov
sub
dec
or
sbb
dec
shlb
jg
std
cmp
out
and
lods
push
shl
jp
fdivs
mov
adc
or
in
jae
jno
add
sub
inc
lea
and
scas
loopne
cld
pushf
sahf
xor
dec
push
xor
enter
rcrl
xchg
mov
sub
mov
aam
and
and
leave
stos
xchg
ss
xorl
jno
testb
add
sub
jne
pop
push
mov
in
or
xchg
dec
test
adc
lea
clc
roll
cmpsb
lret
jo
jb
ret
xor
jl
dec
jo
inc
jl
or
std
mov
ss
push
xor
pushf
pusha
mov
call
or
rcl
add
ror
not
sub
and
mov
bt
add
sub
mov
pushl
pusha
sub
cmp
xor
shl
mov
clc
bts
cmc
rcr
mov
cmc
bt
movw
movzbl
call
cmp
or
xlat
xor
jno
adc
xchg
shrl
in
xor
data16
pop
pop
mov
int
fs
mov
push
mov
and
outsb
mov
sub
imul
les
addr16
fildl
stc
mov
jb
imul
popa
loope
jg
push
mov
imul
aas
out
insb
and
xor
gs
ss
cmpsb
stos
or
test
hlt
inc
push
das
mov
xor
psllw
imul
cmc
jmp
fists
and
insl
icebp
push
insl
xor
xchg
fldenv
mov
cmc
jne
cmc
sti
jg
dec
je
dec
mov
jg
adc
mov
xor
ja
loope
ss
in
dec
test
mov
iret
and
cmp
enter
jmp
cmc
jne
xor
mulb
jne
dec
jle
add
loopne
xchg
or
push
mov
jmp
push
movl
pushl
lea
jmp
push
push
movl
movw
pusha
pusha
lea
jmp
jbe
dec
lret
test
pop
add
in
lcall
xor
add
lahf
cmp
idivb
in
sub
push
sub
imul
sbb
push
or
mov
cwtl
and
lock
sub
pop
out
fwait
push
cwtl
mov
dec
or
repz
cmpsb
xor
add
mov
push
out
out
icebp
mov
jmp
rcrl
xor
or
div
dec
xchg
pop
add
aas
dec
imul
cmpsl
stc
icebp
lcall
push
pushf
or
aad
ja
adc
cmp
sub
and
std
rcrl
push
rsqrtps
nop
push
pop
popl
dec
mov
insl
icebp
in
dec
cmpsb
pop
push
mov
or
inc
popa
xlat
cltd
fdivrs
test
xor
fs
hlt
push
stc
stc
xor
sub
mov
mov
and
mov
fs
push
xchg
mov
cmpsb
adc
push
adc
adc
aaa
fs
sbb
and
push
jno
cltd
mov
sbb
mov
xor
mov
imul
movsl
push
inc
movsb
imul
outsb
nop
sub
push
lds
push
pushf
push
inc
inc
cmp
mov
sbb
xor
mov
push
sbb
dec
ja
inc
add
sub
sub
xchg
or
ja
repnz
ljmp
mov
je
or
xchg
or
jle
movsb
nop
mov
jns
xchg
mov
and
xchg
or
pop
fdivrl
cmp
std
mov
sbb
lock
push
inc
and
jecxz
push
call
jecxz
lcall
sbb
ss
pop
push
xchg
popa
ret
fstpt
je
push
inc
pop
add
movsb
stos
xor
pop
int
pop
hlt
pushf
rcrb
pop
in
jge
jmp
xchg
or
cli
rol
and
inc
hlt
cli
jmp
mov
scas
je
pop
mov
lcall
inc
aad
adc
bound
popf
popf
in
shll
jmp
ss
jmp
pop
add
xchg
or
dec
aas
fnstcw
cltd
loopne
into
fnstcw
xor
out
and
stos
gs
filds
jge
xchg
or
inc
imul
ss
in
shl
lcall
xchg
or
xlat
adc
mov
repz
test
push
and
stos
mov
xlat
sti
bound
dec
adc
mov
decb
dec
cld
push
or
xor
cltd
push
test
xor
mov
push
pusha
lea
jmp
lea
jge
movsbw
shrd
mov
lea
sbb
add
mov
pushf
test
cmp
mov
call
pusha
call
push
pusha
lea
jmp
pushf
pushl
movl
lea
jne
push
pushf
movl
push
pusha
lea
jmp
jmp
push
xor
and
outsb
cmpsb
mov
adc
or
or
das
mov
sbb
gs
int3
cltd
cmp
mov
push
push
rcll
pop
repnz
fadds
xor
lret
and
cltd
data16
and
movsl
int3
and
jmp
jns
push
mov
icebp
into
insl
inc
dec
imul
hlt
outsl
loopne
or
push
sbb
dec
or
sub
xchg
jae
setg
mov
mov
into
test
pop
fisttpll
fsubrs
lods
mov
neg
push
arpl
jb
loope
rol
loope
je
aam
out
sub
out
insl
fdivl
mov
dec
xor
popa
mov
fbld
jbe
testl
loopne
push
testl
fstpt
cltd
leave
xor
or
pop
mov
pop
test
loopne
cli
inc
adc
leave
out
gs
loope
jo
stos
arpl
add
mov
mov
ret
dec
lods
add
pushf
gs
in
or
xchg
fwait
cmp
jge
adc
stc
inc
jnp
cltd
test
or
sbb
cmp
pop
add
pushf
pop
in
dec
or
ja
int
and
insb
push
pop
fidivrs
mov
ret
add
rcl
repnz
ret
mov
negb
xor
dec
fistpll
push
lea
inc
rcrl
or
sub
imul
enter
inc
aaa
or
xchg
div
adc
add
xchg
popa
andl
xor
xlat
mov
jg
bound
pop
loopne
sub
lock
xchg
jb
push
mov
ret
dec
in
dec
jae
cmp
cmp
addb
cmp
cmpl
hlt
pushf
scas
fcmovb
inc
ljmp
xor
cwtl
std
clc
push
or
out
imul
mov
adc
in
ljmp
in
cld
out
jnp
ds
or
loop
jnp
std
addr16
add
cmp
xchg
pop
jo
cmp
pop
jo
cmp
sti
jno
dec
shlb
xchg
pop
add
and
hlt
cmpsb
idiv
sub
pusha
pushl
movb
pushf
lea
jmp
call
pushf
push
lea
jbe
not
pusha
pop
dec
sub
shrd
shrd
mov
sar
mov
clc
stc
movl
bt
cmp
mov
push
mov
cmp
jmp
push
movl
pushf
pusha
movl
push
push
push
lea
jmp
push
lea
jl
sub
btc
mov
bts
shld
mov
xchg
shl
btc
lea
rcr
add
rcl
dec
mov
ror
rol
shr
bsf
lea
shl
inc
mov
xadd
lea
bts
xor
mov
shld
shr
cmc
not
shr
adc
test
clc
add
setnp
xor
lea
shr
mov
pushf
bswap
lea
mov
and
sbb
adc
setns
mov
bswap
or
shr
rcl
seta
add
jmp
mov
push
jns
jnp
inc
adcb
xchg
dec
je
jmp
add
xchg
shlb
je
lods
ss
xchg
lods
adc
in
push
push
mov
cld
clc
adc
lods
ss
sbb
cltd
in
jbe
inc
outsl
mov
add
push
adc
and
stos
cmp
dec
or
pusha
lods
or
fwait
xchg
xchg
lock
mov
negb
clc
pop
jno
push
add
jnp
push
insb
sub
xchg
add
enter
lret
pop
outsb
sbbb
sbb
repnz
jne
xor
movl
push
lea
jmp
repnz
es
std
jns
cs
cld
xchg
aam
or
adc
popf
rcll
stos
add
push
dec
mov
jne
pop
jmp
push
and
call
cmp
js
insl
or
or
aaa
loope
fiadds
fxch
inc
sbb
push
dec
out
xor
stc
xchg
mulb
pop
mov
mov
or
dec
xor
push
or
out
lret
test
subl
ret
clc
dec
jge
jmp
dec
add
das
xlat
push
mov
jge
and
fadds
push
sub
or
pop
hlt
push
pop
fildll
movsl
xchg
or
stos
lods
pop
xchg
scas
neg
xor
aas
inc
cmp
imul
lock
xor
push
call
lods
addb
fmuls
imul
es
aam
int3
xor
aad
mov
lret
pop
inc
pop
adc
shr
push
add
xchg
notb
sub
iret
mov
inc
xchg
mov
ret
mov
out
or
ret
jecxz
cltd
fistpl
lcall
mov
test
jne
fwait
pop
int3
adc
xchg
icebp
jbe
ljmp
and
sbb
inc
mov
std
pop
out
push
pop
and
rcrl
add
iret
stos
mov
inc
inc
jle
shlb
push
xor
xchg
shl
pop
xor
movsl
fcmovnbe
xor
dec
sti
stos
xchg
adc
jle
or
shl
mov
js
push
push
and
sbb
sbb
adc
repz
xor
sub
inc
scas
mulb
fdivl
in
dec
arpl
xchg
add
jnp
jnp
nop
jbe
pop
or
cmp
sahf
sbbb
bound
in
sahf
scas
sub
xor
and
sbb
fisubrl
shll
movsl
jge
sub
into
incl
push
mov
out
out
pop
push
out
pop
cmc
arpl
sbb
mov
das
and
cwtl
cwtl
lret
dec
jp
mov
pushf
sbb
mov
push
push
mov
movsb
mov
pushf
les
push
and
imul
lahf
iret
cmpsb
pushf
sbb
mov
mov
mov
xchg
je
cmp
push
adcl
jne
sbbl
pop
mov
into
jmp
jg
inc
pop
dec
in
mov
ja
xor
gs
sub
dec
and
jns
pop
sarb
mov
add
dec
cwtl
mov
fiaddl
imul
and
pop
imul
mov
push
mov
xor
test
jge
and
rcl
mov
push
mov
xor
stc
ljmp
mov
xor
dec
into
cmp
xchg
fnstsw
xor
mov
stos
rorl
divl
cmp
sbb
cmc
mov
add
test
sti
mov
pop
rorb
push
sbb
gs
sub
leave
repz
push
out
and
dec
and
cmc
push
or
movsl
shll
std
mov
push
sub
inc
add
jl
ret
popf
leave
xchg
jle
jo
xor
aam
js
cmp
xchg
xor
stos
in
sbb
lcall
or
pop
xor
bt
shr
sub
add
bswap
movsbw
or
mov
stc
call
dec
push
cmc
mov
call
adc
cmpsl
xor
add
sub
push
sbb
mov
sbb
xchg
cmp
out
or
adc
les
imull
popf
mov
pop
sbb
mov
cli
in
leave
pop
out
lea
test
dec
mov
shl
push
das
xchg
pop
xchg
rolb
and
loope
lods
loopne
ficompl
test
ds
xor
nop
add
int
and
test
and
and
push
test
cmp
pushf
scas
enter
insl
jae
call
mov
fidivrl
push
notl
int3
fimull
sbb
jg
xchg
lds
xchg
jne
insl
icebp
add
jle
aad
sbb
fimull
jmp
rclb
xor
lret
ljmp
addb
xchg
xorl
add
cmpsb
movsb
gs
fimull
loop
sub
lcall
jmp
xchg
add
cltd
shll
fistl
mov
pop
jae
fxch
mov
repnz
test
and
push
inc
jl
or
int
das
mov
stos
mov
push
popa
rcrl
xor
arpl
or
rcll
pop
stos
add
mov
cmp
imul
sbb
fmul
add
push
mov
lcall
inc
adc
add
dec
out
scas
xchg
out
xchg
and
xor
shll
rcrl
enter
add
adc
hlt
jne
stos
hlt
nop
je
int
push
ret
je
mul
sbb
icebp
rorl
movb
aaa
nop
leave
int
sub
lds
lcall
mov
fwait
das
push
xchg
inc
fwait
jle
mov
repnz
inc
cmp
sbb
out
popf
sub
ret
sahf
popl
iret
repz
cmp
push
insl
xor
insb
shll
cs
or
and
xor
sbb
insb
sbb
dec
adc
or
adc
mov
inc
xor
bt
movb
xor
shl
rol
mov
bts
rol
mov
movw
movzbl
cmp
add
stc
mov
test
pusha
push
shrl
test
clc
pushl
cmc
shr
jmp
xchg
mov
call
call
pushf
pushf
movl
jmp
jmp
push
pushf
push
movl
jmp
add
shrd
lea
add
or
rcr
not
xor
dec
sub
test
shrd
add
add
bsr
movzbw
rcl
lea
shrd
sub
shl
shr
xor
sar
movzwl
btr
lea
cmp
test
mov
jmp
movl
pusha
pushl
lea
jmp
js
pop
mov
and
jle
out
outsl
ljmp
lea
pop
pusha
mov
push
pop
popf
push
adc
add
stos
dec
pushf
je
xchg
jno
in
pop
xor
mov
dec
out
mov
test
jns
mov
and
cmc
mov
loopne
stc
rcrl
aas
testb
push
ljmp
leave
rol
dec
fs
inc
int3
in
shl
mov
xor
or
mov
mov
and
dec
jbe
mov
push
scas
movsb
xchg
in
mov
mov
out
jmp
lahf
pop
sub
bound
aad
or
adc
gs
mov
in
pop
mov
les
jg
sub
mov
into
insl
pusha
jl
aaa
imul
push
testb
cli
sbb
or
inc
addl
xor
push
push
hlt
lock
leave
or
leave
sbbb
xor
adc
stos
push
addr16
bound
out
xchg
std
mov
stos
mov
and
lods
and
out
repz
fsincos
mov
jns
xor
in
jbe
xor
nop
in
jg
int
pop
cli
mov
cs
adc
sub
stos
pop
push
ja
mov
push
mov
dec
xor
shr
add
std
inc
pop
or
xchg
cld
inc
in
push
sbb
out
out
lods
mov
and
out
ljmp
sub
bt
adc
mov
cmp
push
clc
or
inc
pop
add
sbb
bsf
movzbl
mov
mov
stc
jmp
cmpsl
stos
mov
es
fimull
addr16
icebp
into
les
jecxz
or
mov
dec
or
aas
fildll
xchg
cmc
rcrl
dec
dec
mov
push
arpl
add
push
pop
xchg
icebp
popf
daa
xchg
ljmp
sbb
and
sub
jmp
outsl
dec
in
mov
xchg
and
add
pop
mov
out
inc
sub
test
out
xchg
bound
stos
icebp
mov
test
add
fucomi
out
in
cli
in
xchg
sub
mov
mov
cmp
lods
jnp
mov
stos
call
fwait
inc
ljmp
add
dec
dec
sub
pop
mov
out
inc
test
in
dec
and
dec
xchg
inc
mov
daa
aas
xor
cwtl
mov
mov
mov
imul
sahf
pop
cmp
dec
mov
loope
in
xchg
pop
jbe
sti
xor
dec
cmp
mov
stos
mov
xchg
xchg
inc
xor
cmpsl
shrb
adcb
jbe
add
push
or
pop
adc
mov
pop
test
fbld
mov
out
sbb
cld
out
out
sub
sub
aad
movsl
xor
test
rcrl
push
lods
xchg
push
ja
and
dec
push
dec
xchg
mov
lock
adcb
adc
push
adc
cmp
aad
mov
push
daa
fcom
sub
shlb
xor
mov
es
shl
lret
jns
pop
mov
shr
jnp,pt
bound
and
push
fsubp
int3
pop
inc
and
sbb
pop
aaa
sub
popf
adc
repnz
push
mov
mov
xor
dec
out
xor
add
jp
arpl
test
dec
mov
ss
idiv
sub
sbb
iret
lock
insl
jecxz
sbb
cmp
push
mov
cld
lret
xlat
cld
mov
popa
pushf
std
pop
test
ret
mov
jg
aam
cmp
sti
mov
sti
cmpsb
pop
jae
jl
loop
clc
lock
mov
imul
cli
xor
or
mov
shlb
xchg
cli
es
xchg
pop
outsl
aad
pusha
cwtl
nop
adcb
mov
jecxz
leave
mov
scas
cmp
lret
iret
mov
push
xor
stc
and
movsb
mov
fadds
cld
sub
sahf
xchg
pop
push
lret
dec
xor
cwtl
stc
gs
push
adc
jbe
dec
lahf
in
test
xchg
icebp
repnz
mov
and
pop
aad
lcall
lret
push
sub
pop
imul
repz
push
icebp
jns
fdivrs
mov
stc
push
and
xchg
cmpsl
adc
scas
pop
scas
das
push
mov
hlt
dec
sbb
ret
int3
mov
add
movsb
push
adc
add
push
cmp
les
xchg
stc
inc
and
lret
fbld
xchg
push
pop
leave
loop
adc
adc
stc
jg
adc
xor
add
adc
sbb
jmp
pushl
pushf
movl
mov
movb
pushf
push
lea
jmp
jmp
movl
mov
movl
pushf
pushf
lea
jmp
shlb
cmp
fisttps
mov
std
jmp
es
jno
push
test
mov
insb
lea
cmp
mov
sbb
in
mov
daa
mov
sub
jbe
jmp
mov
dec
sub
sub
push
daa
inc
xor
add
mov
jns
mov
test
mov
call
imul
icebp
inc
push
xor
les
and
xchg
jno
aas
mov
fadds
scas
mov
shll
stc
dec
loop
lahf
ror
xor
repz
or
sub
filds
cmp
adc
lods
pop
in
js
pop
dec
call
add
add
imul
addr16
sbb
sub
ja
sahf
push
loope
hlt
mov
cltd
hlt
push
jecxz
pop
add
cmp
int3
jbe
mov
pop
sti
cmp
outsl
lcall
jge
lods
ja
sbb
inc
xchg
jns
jae
inc
jmp
mov
mov
mov
or
mov
push
sub
inc
mov
cmc
stc
mov
mov
shll
in
lcall
xchg
scas
xor
xor
or
movsl
mov
pusha
mov
es
push
loopne
pop
dec
fdivrl
sahf
lret
add
xor
arpl
xchg
xor
das
push
pushf
sbb
or
dec
cwtl
and
jno
push
enter
pop
xlat
loopne
inc
jmp
es
push
shr
mov
jb
and
cmp
fisubs
aad
test
outsl
pop
dec
out
adc
xchg
les
ds
fidivrs
jge
jp
pop
ror
lock
sub
adc
adc
scas
dec
dec
adc
rcll
xchg
and
and
rcrl
push
pop
lock
and
dec
aad
jno
movsb
pushf
int3
arpl
out
bound
mov
mov
mov
jb
adc
mov
into
adc
inc
dec
frstor
mov
push
insb
and
jae
in
out
aas
inc
push
inc
mov
test
fnsave
fsubrs
and
clc
mov
mov
clc
sbb
xchg
sbb
movsl
ret
rol
out
xchg
jmp
sub
lea
pop
in
cmp
imul
enter
mov
sbb
mov
mov
notb
sbb
sub
xor
sub
adc
cmp
jne
hlt
jmp
and
or
loop
je
mov
call
imul
inc
cmp
test
sbb
xor
cmpsb
outsl
and
call
push
nop
lret
out
or
pop
inc
mov
jns
loop
daa
jb
mov
aam
push
jecxz
aam
sub
and
data16
sub
sbb
pop
xor
mov
adc
ja
sbb
mov
dec
jbe
loope,pn
sahf
xchg
pop
pop
cmp
jecxz
xor
sbb
cmpsl
jp
push
rclb
aam
add
arpl
fwait
dec
sbb
dec
jbe
xor
adc
aas
cs
fsubrl
adc
cli
negb
push
adc
xchg
cmc
push
cmpsl
dec
movsl
sbb
ljmp
or
xlat
cmc
test
mov
xor
imul
cmp
test
xchg
mov
or
cmp
xchg
cmc
adc
xor
ret
xor
inc
in
mov
ss
dec
mov
xor
orl
popa
lret
jp
add
hlt
in
icebp
ljmp
ficomps
sbb
jno
cmpsb
daa
add
mov
loope
sub
cwtl
faddl
jno
loope
xchg
int
add
mov
ret
fisubrs
inc
pop
jp
aad
jne
or
xor
mov
or
push
lea
jp
int
push
dec
out
jo
jbe
insb
fisubrs
xchg
loope
js
lret
es
cwtl
pop
jmp
or
stc
mov
test
stos
repnz
cld
xchg
js
sub
imul
movsl
mov
pop
inc
inc
scas
into
inc
in
ret
xchg
mov
aad
add
daa
les
insl
leave
jecxz
sub
nop
and
in
push
sti
jp
aas
xor
mov
fldenv
xchg
bound
or
cld
enter
mov
fisubl
into
repnz
push
push
inc
setle
jmp
push
lcall
nop
ja
call
or
push
dec
cmpsl
jne
xchg
sbbb
inc
fcompl
scas
imul
repz
mov
pusha
add
bswap
setbe
call
neg
mov
call
movl
pusha
movl
push
pushf
pushf
push
lea
jmp
jmp
or
inc
mov
arpl
mov
mov
sbbb
xor
test
in
repz
adc
xor
ret
insl
pusha
int3
movsl
cwtl
sbb
jo
cmpsl
call
repz
shrb
std
sub
fimull
sbb
xchg
repz
push
pop
xor
cmp
dec
inc
sub
lcall
sbb
out
or
mov
or
repz
mov
out
repz
lcall
cmpsb
fstps
inc
mov
out
test
inc
and
adc
fs
xor
enter
mov
sub
xchg
shlb
lds
mov
insb
lcall
add
loopne
out
gs
es
shrl
in
or
scas
cmc
loope
mov
cmpsl
add
testl
cmp
lret
scas
jmp
push
sbb
repz
popf
sti
or
fdivrs
inc
xchg
repnz
pop
pop
arpl
cld
push
bswap
inc
adc
fucomip
imul
mov
and
btr
inc
xor
iret
push
out
mov
add
fs
cli
out
sbb
cmp
adc
jbe
mov
cmp
in
imul
fildll
add
mov
fisubl
popa
out
lret
enter
and
int
xchg
fistl
jp
pop
cmp
lcall
pop
loopne
ja
insl
outsb
dec
mov
sub
jg
inc
ret
xor
inc
bound
and
ja
mov
xor
pop
cmp
mov
inc
addl
xor
sub
stos
dec
mov
pop
fildl
jmp
jae
and
add
js
icebp
outsl
movsb
int
cli
leave
jmp
mov
movb
lahf
dec
enter
jge
call
iret
xor
push
pop
dec
xor
fcompl
sbb
fnstenv
pop
divl
xchg
icebp
pop
mov
ror
bsr
lea
or
shl
stc
setge
or
mov
clc
rol
mov
sub
xor
shrd
sbb
shr
pop
add
add
and
or
mov
rcl
cmc
shr
push
stc
add
bsf
rol
btc
test
mov
shl
add
bsf
neg
rcl
sub
pushl
xor
push
mov
pushl
mov
movzbw
pushf
pushl
lea
inc
bsf
mov
bts
shr
lea
bswap
pop
ror
add
sbb
shld
and
shl
call
push
clc
push
dec
and
jecxz
insl
and
and
jmp
and
lock
push
add
sub
dec
jp
mov
subb
adc
mov
adc
test
clc
sahf
jo
and
dec
xor
sub
ljmp
and
int3
jno
mov
inc
loop
xor
and
xchg
sub
pop
out
into
out
dec
rcrb
inc
in
pusha
and
cltd
lret
mov
mov
xor
mov
mov
nop
xor
out
loopne
mov
lret
add
fidivl
pop
loopne
xchg
js
lret
lret
fwait
sbb
ret
icebp
mov
lea
mov
sub
pushw
mov
push
jns
fwait
insb
roll
test
dec
pusha
aas
enter
sti
inc
add
ret
mov
ret
jbe
fisubrs
movl
mov
stc
inc
pop
fidivs
stos
inc
mov
xchg
mov
in
xor
mov
mov
push
sub
inc
mov
or
pop
lcall
pusha
cmc
call
xchg
adc
cmp
xchg
lea
xor
imul
inc
xchg
pop
mov
pop
out
lret
sbb
lcall
fnstenv
mov
mov
mov
icebp
jo
jp
rclb
mov
into
push
sub
jg
add
pop
ljmp
sub
mov
ficompl
pushf
pusha
mov
cmp
std
and
push
es
into
imul
pushf
lods
adc
gs
idivb
sbb
cltd
push
js
ss
ret
bound
jg
iret
fistps
fistl
clc
mov
stos
mov
ss
imul
in
push
lcall
lcall
insb
sub
in
adc
mov
sarl
popf
mov
and
mov
mov
jo
pop
jns
xor
cmc
jns
cmp
sub
pop
data16
lea
mov
cmpsl
add
mov
mov
fdivs
ret
xor
push
cmp
lods
mov
push
dec
dec
xchg
lea
pop
jns
add
lret
sbb
fs
dec
sub
jp
scas
arpl
ret
popf
arpl
push
xor
mov
stos
pop
sbb
cltd
pop
inc
cmp
sub
sbb
sbb
cmp
out
in
fs
or
xor
addr16
andb
idiv
test
test
add
push
fildl
dec
scas
mov
imul
pop
clc
xchg
push
outsb
xchg
out
mov
mov
cmp
ljmp
test
mov
rolb
pusha
xchg
in
mov
push
adc
or
jns
adc
push
cltd
cmc
xor
jmp
pusha
pushf
push
movl
pushf
pushf
jmp
lock
gs
dec
pop
jg
mov
dec
frstor
mov
out
test
gs
fbld
or
xor
pop
inc
and
xchg
mov
shrb
sahf
repnz
sbb
xlat
dec
sub
ds
jmp
and
pop
scas
adc
outsb
mov
push
and
pop
mov
ss
dec
out
inc
dec
in
shll
test
dec
and
cmp
es
cwtl
inc
inc
inc
xchg
xchg
lcall
fdivrs
test
sub
in
inc
inc
sbb
movsl
mov
lret
pop
adc
fsubl
inc
sbb
pop
push
daa
dec
push
and
popa
mov
mov
adc
adc
das
ja
xor
push
xor
sahf
jns
retw
cltd
xor
icebp
fisttpl
xlat
xor
push
sbb
adc
adc
jg
pop
fildll
inc
aam
xor
dec
sbb
xor
xchg
mov
inc
cmp
mov
int
sub
loop
ja
les
fldcw
push
and
xor
repnz
out
and
pushw
jp
orl
icebp
add
inc
or
jg
fdiv
dec
aam
ret
cmp
rorl
in
repnz
test
push
pop
les
sbb
mov
and
ja
sub
fwait
add
mov
iret
sbb
int3
pop
addr16
cltd
and
sub
daa
or
int
gs
inc
in
xor
inc
fldcw
loop
lds
jbe
push
outsl
push
mov
int3
xor
or
xchg
sub
je
lret
lods
inc
adc
cmp
aaa
sahf
dec
sub
inc
sbb
and
lret
dec
or
fmuls
shr
and
andb
jecxz
imul
or
lret
je
push
rorl
pop
mov
lahf
test
cmp
idivl
mov
ror
sbb
ret
pop
test
leave
std
pop
xor
push
movl
pushf
movw
pushf
lea
jmp
movsl
adc
jno
pop
stc
cmpsb
aad
or
ret
sub
fsts
test
es
sbb
sbb
inc
loopne
pop
repz
push
or
jnp
shrb
nop
test
lods
stos
stos
ret
mov
mov
jecxz
xchg
adc
add
cli
jne
mov
pop
xor
cltd
fisubs
leave
dec
lcall
and
push
mov
out
cmpsl
jle
jne
jge
push
test
xor
mov
jnp
adc
or
inc
sbb
pop
or
mov
xchg
fcomps
out
ss
les
mov
popa
add
mov
push
xchg
sbb
mov
aaa
fidivs
lcall
inc
mov
jo
arpl
fistpll
sub
lret
xchg
stos
mov
pop
test
popl
mov
sbb
cmpsl
bnd
shrb
lea
in
dec
cmpb
xchg
scas
sbb
push
lods
subb
xchg
jmp
pusha
pusha
movl
jmp
iret
js
xchg
sub
mov
shl
aaa
in
call
inc
jl
stos
push
int3
fimull
lea
jecxz
dec
jmp
xor
js
mov
pop
add
fstpt
jle
sbb
fimull
sub
sub
fucompp
scas
sbb
add
fldenv
xchg
insb
inc
lcall
sbb
movsb
sub
dec
je
cli
or
pop
mov
inc
popa
xchg
and
sub
mov
push
jle
xchg
mov
lock
xchg
clc
mov
inc
mov
mov
in
fmuls
add
in
or
aam
fcomps
sub
adc
push
roll
mov
sub
dec
sbb
push
insl
out
pop
mov
mov
stos
stos
adc
adc
stos
pop
mov
sbb
dec
and
mov
stc
push
mov
lods
or
lea
leave
inc
jo
fidivl
sbb
mov
fadds
adc
push
loopne
cmp
pop
sti
jb
mov
fwait
std
lcall
mov
mov
xor
je
mov
inc
repnz
scas
mov
fildl
sbb
jmp
or
repz
into
or
fbld
mov
test
adc
sub
push
je
ljmp
pop
mov
out
lock
neg
push
loope
adc
cld
inc
and
cltd
stos
push
stos
dec
cs
and
cwtl
lods
inc
jmp
ja
xchg
push
inc
clc
jo
add
and
mov
js
das
lea
mov
stos
xchg
push
movsb
into
shrl
mov
sbb
pop
mov
gs
ds
pop
xchg
stos
outsb
add
xchg
loope
dec
clc
inc
xor
jmp
jmp
push
xchg
jg
rorl
in
fstp
inc
push
je,pt
jmp
and
stos
scas
jle
sbb
fildl
out
jo
mov
fidivrl
jbe
addr16
shll
push
jecxz
stos
scas
mov
ss
mov
xchg
jno
mov
imul
stc
stos
push
mov
dec
cwtl
scas
add
sbbb
jae
xchg
fs
pop
test
icebp
pop
sub
hlt
inc
sbb
cmp
adc
stos
or
ret
push
lock
aaa
dec
lcall
jno,pn
les
imul
mov
mov
insl
add
mov
rorl
dec
adc
jo
pop
mov
repnz
iret
jp
ja
jmp
jno
pop
test
and
cmovno
add
addl
sbbb
xor
pop
fnstcw
cltd
mov
lods
repnz
das
inc
dec
nop
sub
mov
jbe
les
int3
test
sub
cmpsl
mov
stc
jp
push
add
sbb
test
movsl
adcl
and
nop
inc
add
push
mov
les
xchg
out
sbb
mov
cld
xchg
scas
xor
xchg
leave
jae
popa
ror
inc
jecxz
xor
into
mov
sbb
int3
into
xchg
sti
pop
mov
jb
int
je
in
inc
fisubs
and
fistl
ret
iret
sub
testb
dec
hlt
ffreep
loopne
cmc
xor
imul
add
push
adc
dec
cmp
fwait
xor
dec
lret
jnp
mov
or
mov
jns
xor
mov
sbb
pop
fucomip
dec
ret
jb
icebp
xchg
popa
add
dec
or
xor
popa
roll
enter
pop
movsb
inc
movsl
add
dec
or
pop
jno
pop
in
cmp
dec
sub
jl
jmp
addr16
cmp
xchg
mov
xor
es
adc
hlt
dec
cmp
dec
out
cmp
les
adc
bound
adc
xchg
pop
dec
cmpsl
pop
mov
aas
adc
insb
fucomip
cmp
aad
jp
pushaw
or
push
push
inc
shrl
push
ja
inc
sub
xor
and
fisttpll
int
xchg
iret
jp
cmc
pop
sbb
push
test
sarl
cmp
xchg
lret
mov
pusha
fwait
inc
xlat
in
out
in
xchg
ljmp
xchg
cmp
into
xchg
sbb
mov
shrl
pop
leave
xor
xor
mov
outsl
or
cmp
ret
lock
js
xchg
in
test
pop
ljmp
inc
xor
cs
xchg
in
cmp
outsb
cmpsb
out
dec
call
adc
popa
in
push
outsb
xor
xor
adc
push
imulb
imul
pop
cwtl
je
in
mov
test
repz
mov
loopne
push
sub
pop
fwait
das
mov
adc
xchg
loop
ja
ret
mov
and
or
scas
xor
cwtl
push
pop
dec
cs
popa
xchg
mov
ret
push
lea
sub
xchg
inc
pop
test
cltd
xor
sbb
int3
dec
sbb
notl
add
adc
mov
sbb
xchg
xchg
mov
in
cmp
popl
mov
cmp
hlt
ljmp
dec
lods
in
cmp
outsb
pop
out
ucomiss
mov
pop
cmp
das
imul
inc
decl
cmp
jle
mov
add
dec
bound
push
dec
mov
mov
mov
pop
inc
inc
xchg
popa
xchg
enter
pushf
test
push
aad
push
ds
lret
ret
xchg
testl
out
sub
in
cld
sti
push
jb
or
xchg
jmp
out
hlt
insl
insl
dec
mov
sub
pop
test
fcmovb
pop
fdivs
jle
pop
cmp
and
sti
clc
lret
cmp
mov
dec
shll
dec
out
iret
popf
test
cmp
xor
ds
bound
push
stc
cmpsl
cmpsl
or
int
fsub
roll
and
pop
out
out
out
int
adc
stos
nop
xchg
nop
stos
sbb
in
lret
out
jbe
bound
shr
bound
leave
in
inc
cmpsl
aaa
ror
out
xor
jmp
sub
icebp
clc
ud1
cwtl
mov
pxor
cltd
das
dec
insb
in
popf
mov
jno
les
push
adc
icebp
inc
jae
mov
inc
pop
inc
mov
mov
mov
pop
jae
adc
lods
or
inc
or
push
inc
pop
das
dec
test
or
add
sti
pushf
xchg
xchg
in
inc
dec
mov
das
sub
mov
sbb
lea
jmp
jmp
dec
add
and
cmp
icebp
xchg
xor
insb
movsl
popa
jecxz
lahf
cmp
mov
jl
mov
sub
jnp
lock
stc
or
push
pop
and
mov
push
push
or
pusha
jnp
jne
push
loop
push
push
pusha
mov
ds
xchg
adc
adc
mov
xchg
fisttpl
xor
les
jle
jb
out
push
inc
mov
sbb
xchg
orl
push
das
dec
mov
lods
jmp
sbb
jmp
fwait
insb
or
mov
pop
arpl
lods
add
cmp
pop
push
add
pop
jb
lods
sbb
lds
dec
lret
lahf
addr16
out
sarb
mov
xchg
dec
add
inc
push
mov
ficoml
out
xchg
rclb
add
and
cmp
stos
mov
push
test
push
mov
fistps
pop
call
lret
push
add
xchg
icebp
jne
jp
pop
out
int3
clc
pushf
or
lret
rclb
sbb
dec
stc
dec
dec
lcallw
add
pop
push
lods
xchg
sbb
insb
sar
sahf
mov
push
lea
inc
sahf
jbe
cmc
cmp
adc
jp
mov
jecxz
jmp
shlb
cmp
sti
notb
movl
sbb
imul
mov
je
sbb
jo
mov
sbb
pop
push
push
xor
pop
ja
jo
leave
dec
jb
push
add
xlat
and
and
shll
loopne
test
sbb
lds
negb
mov
add
stc
fistpll
xor
mov
push
dec
inc
mov
xchg
orb
push
mov
fisubs
or
mov
xor
aaa
out
testl
mov
hlt
inc
sub
mov
push
dec
call
xchg
out
or
mov
aas
or
xor
cld
mov
in
xchg
aam
jno
cmp
gs
mov
into
add
cmp
aas
lcall
test
das
ret
push
mov
sub
ljmp
pushw
sbb
jl
out
mov
mov
jnp
mov
mov
push
sbb
add
add
shrb
or
xchg
inc
rcrb
adc
bound
xlat
add
mull
dec
inc
xchg
or
jmp
mov
xchg
lock
inc
outsb
or
push
filds
jae
lea
lock
stos
fwait
jmp
xchg
pop
inc
mov
sub
xchg
jo
cld
ret
sahf
call
popf
call
ret
ss
and
int
aad
pop
int
and
notl
mov
negb
test
ret
mov
outsl
jecxz
ret
jg
les
orl
test
shlb
repz
or
mov
inc
js
ret
insl
js
xorl
jp
dec
outsl
nop
fists
add
xorl
adcb
cmp
jge
ret
mov
dec
jecxz
or
test
and
adc
cltd
cltd
test
scas
cwtl
xor
xor
jo
test
add
push
shlb
lret
sbb
fiadds
xor
ljmp
arpl
pusha
jge
jp
test
fidivs
test
icebp
mov
cli
dec
inc
js
lcall
xchg
filds
sub
fistps
es
xor
inc
adc
pop
pop
pop
ljmp
aas
test
cmp
sti
cmp
jge
and
divb
xchg
xor
dec
stc
sti
cmpsl
sub
inc
int3
mov
xor
movl
pusha
call
mov
jae
inc
jg
push
xchg
xlat
jae
aas
loopne
outsb
popa
inc
mov
mov
cmp
scas
inc
in
stos
dec
inc
js
test
add
addb
mov
sub
in
cltd
adcb
int3
out
mulb
push
xor
mov
movsl
xchg
movsl
dec
dec
push
shlb
imul
xchg
fnsave
mov
cmc
xchg
lahf
push
sbb
shlb
mov
fwait
lcall
imul
leave
pop
lods
repnz
jnp
int
fwait
mov
xchg
mov
aam
pop
lret
mov
loop
mov
dec
fidivrl
fbld
data16
ja
jl
mov
stos
mov
sti
mov
sub
gs
add
mov
or
pop
pop
mov
pusha
shll
rep
ficoms
movsb
test
xor
call
nop
mov
mov
in
ljmp
fmuls
addb
cmpsl
jge
xchg
jo
pop
sti
aad
data16
xchg
mov
adc
mov
leave
add
mov
mov
push
jo
cmp
cmpl
mov
xchg
mov
jb
cmp
mov
lret
subb
dec
lds
push
scas
jmp
adc
xchg
fdivrl
cli
and
test
lea
jne
jl
mov
fs
test
cmovb
mov
cmp
mov
lahf
mov
mov
inc
sub
jecxz
lret
faddp
push
pop
lods
int3
add
add
push
mov
sti
xchg
add
add
or
mov
mulb
lahf
push
into
das
mov
test
outsl
cmp
pop
test
test
out
test
sbb
subb
fcompl
outsb
cmc
lock
pushf
sub
fs
je
lods
jo
int
pop
add
out
fildl
push
andl
dec
jge
fdivl
xor
fcmovb
inc
mov
sub
filds
notl
stc
ljmp
adc
mov
sbb
mov
inc
mov
lea
mov
mov
inc
adc
call
cmpsl
and
or
test
sub
add
loopne
sub
leave
add
sub
jp
jno
and
aad
lret
in
int3
pop
fnstcw
flds
xchg
ficomps
lea
arpl
jo
add
bswap
jb
jp
loopne
aaa
lret
in
xor
adc
rorl
mov
or
popf
hlt
dec
enter
lds
add
cmp
push
adc
inc
mov
out
xchg
dec
jecxz
or
mov
movsb
cmp
mov
rcrb
stc
out
fcomps
fidivrs
fisubrl
adc
imul
xchg
cmp
adc
aas
lret
add
jmp
xor
xor
or
sbb
daa
push
popf
or
cli
imul
add
arpl
push
xor
sub
adc
xchg
xlat
xchg
outsb
and
aam
mov
inc
jl
cli
push
mov
and
cltd
xor
cwtl
cmp
push
sbb
ja,pn
mov
icebp
jmp
sbb
dec
jecxz
mov
adc
fsubrl
stos
stc
pop
and
xchg
fidivrl
push
xor
sbb
loopne
fsts
iret
mov
movnti
sbb
adc
lret
jne
xor
nop
in
mov
pop
or
xchg
fldenv
fimuls
and
aad
aaa
outsl
cli
xchg
aaa
test
test
dec
and
push
jnp
cltd
pop
enter
pusha
sbb
jp
cmpsb
lea
mov
aam
subb
scas
push
out
sub
and
rclb
xchg
mov
or
fcoml
or
das
xchg
push
push
pop
movsl
or
xchg
mov
and
cwtl
aam
push
aaa
mov
and
xchg
dec
outsb
fsubl
popa
cmc
or
adc
aam
daa
int
test
add
xchg
mov
aad
cmc
sub
adc
inc
cmp
ds
jl
aaa
mov
jg
movsl
mov
pop
sarl
fwait
mov
rolb
shlb
cs
add
js
je
sbbl
pop
aaa
je
repz
mov
stc
stc
sbb
pop
insb
mov
xchg
push
inc
movsb
cmp
pop
jno
ljmp
decb
inc
xor
mov
cli
je
xchg
xor
rol
jo
test
or
mov
nop
pop
xor
addr16
in
xor
inc
xchg
insb
lahf
ret
mov
ficomps
cld
lret
test
dec
pushf
jo
mov
mov
push
movb
or
lret
mov
mov
shll
add
push
daa
cmp
mov
fbstp
xchg
fadds
cmpsb
cmp
fs
inc
imulb
jne
push
and
mov
loopne
sub
cltd
ret
sub
in
inc
mov
lret
mov
outsb
xchg
outsl
sbb
pop
sub
fcomps
add
or
xlat
pop
jle
aam
repz
mov
fs
jnp
lcall
adc
jnp
pop
xor
ds
mov
push
jb
aad
jno
lds
adcb
fdivs
rorl
pop
orb
and
pop
cmp
xlat
sbb
dec
jge
movsb
imul
cmp
in
mov
outsb
dec
mov
jg
xchg
icebp
jae
xor
lds
fadds
cmpsl
bound
xchg
push
push
add
out
scas
xchg
fidivl
xchg
xlat
repnz
or
sub
mov
pop
cmpsb
cli
incl
ret
xor
insb
in
inc
sar
xor
aaa
shrb
xor
sahf
jb
sub
out
ret
xor
inc
fldcw
popa
jecxz
insb
and
xlat
sub
inc
pop
cs
popf
fistl
loopne
lea
and
pop
jp
push
lcall
sti
insl
jg
lret
popf
sti
std
fcompl
sub
sub
sub
loopne
and
dec
aam
lock
inc
add
and
aas
jb
sub
loope
cmpsl
cmp
into
mov
xchg
mov
push
mov
int3
sbb
pop
dec
popf
add
lock
inc
cs
int
hlt
lahf
inc
xchg
in
push
in
sub
ja
test
lods
scas
iret
rcll
fidivs
inc
pop
jne
out
out
in
std
les
daa
pop
cmp
js
popa
pop
xor
xlat
js
ss
imul
insl
fistpll
xchg
xlat
int
test
sub
cmpsl
cmc
sbb
mov
hlt
pshufw
sbb
push
lods
arpl
repz
add
or
push
push
mov
test
mov
adc
inc
xor
xor
jns
aad
imul
jo
xor
pop
and
jl
or
sti
pop
or
and
xlat
dec
push
jae
js
sub
sub
adc
data16
cmp
cmp
sbb
jae
notl
xor
jle
shlb
jns
pop
ficomps
inc
stc
mov
leave
sbb
imul
xor
sub
mov
jmp
andb
std
push
je
push
stos
jae
aad
pop
pop
in
pusha
out
in
pop
push
cmp
mov
loop
in
or
in
ret
pop
jmp
lds
mov
jp
mov
int3
push
test
cwtl
aas
cmpxchg
mov
jns
sbb
call
sub
les
cmp
mov
xchg
dec
cmp
cmc
mov
mov
pop
rcrl
scas
imul
inc
or
ljmp
sahf
cmpsb
sbb
out
push
pop
arpl
adc
stos
daa
fldt
in
bound
cmpsb
mov
mov
xchg
xchg
dec
pop
adc
call
xchg
mov
cs
out
mov
cli
inc
popa
adc
fnstenv
cwtl
cmp
fwait
sub
mov
pmaddwd
jno
insb
sbbb
cwtl
imul
aam
stc
pop
push
daa
mov
mov
jmp
dec
mov
test
loopne
jecxz
xchg
jne
sbb
pushf
in
ja
jg
mov
aam
loopne
jecxz
inc
cltd
xchg
xor
popf
stos
pop
ret
xor
sbb
adc
rcrl
flds
cli
gs
movsl
jmp
aas
inc
popf
shll
sar
ja
dec
xor
repz
cmp
inc
mov
mov
popa
inc
fwait
pop
repnz
pushf
mov
xchg
xchg
adc
xchg
shr
cmp
pop
jae
dec
xchg
lahf
pop
mov
and
add
xchg
sar
pop
jb
les
ljmp
fidivrs
imul
mov
xor
cmp
dec
pop
dec
xchg
sbb
andl
push
jle
mov
xchg
hlt
inc
xor
xor
sbb
cmp
adc
mov
loope
insl
xchg
mov
jle
xchg
add
sahf
cli
lock
rcrl
leave
in
pop
shl
pop
add
add
adc
mov
shl
add
add
mov
pop
shlb
add
inc
sub
adc
xchg
shll
mov
ds
xchg
mov
and
mov
lods
add
clc
outsl
mov
in
cltd
push
jo
iret
push
xchg
or
bound
negl
test
sbb
xchg
xor
xor
mov
sub
xor
je
ret
frstor
icebp
mov
sahf
xchg
mov
fsubrl
cmp
test
mov
bound
lock
xchg
or
cmp
xchg
xlat
push
notl
xor
jbe
insl
fmull
push
pop
clc
dec
negb
push
fsubs
mov
loop
fwait
fs
jnp
adc
nop
jo
mov
fs
cmp
lret
push
loopne
add
flds
shr
pop
clc
mov
outsb
push
xor
and
addr16
sbb
adc
mov
into
xor
mov
cmp
add
int3
insb
loopne
rcrl
pushl
faddl
outsb
js
push
jg
mov
cmp
daa
xor
jmp
add
out
and
test
arpl
push
xor
push
sbb
xchg
inc
cmpsl
lock
aaa
insb
shrb
aaa
sarl
outsl
hlt
mov
roll
pop
ja
lahf
add
fcmovu
jns
sbb
xchg
xor
xchg
fs
out
add
addr16
mov
xor
inc
mov
rcl
push
fmul
mov
aaa
test
ss
mov
shll
jns
pop
aaa
leave
or
ret
pop
push
dec
ret
jb
sbb
insl
add
pop
fwait
inc
insl
push
jnp
mov
mov
add
xchg
inc
mov
or
call
fdivrl
sbbb
mov
call
fwait
jmp
mov
adc
jbe
pop
adc
in
xchg
xchg
add
mov
out
sub
pop
fwait
or
mov
loope
pop
mov
or
adc
mov
daa
sarb
sub
in
jge
scas
sub
jp
scas
lret
ljmp
nop
lds
mov
mov
aad
and
cmp
push
push
aad
pop
mov
mov
ds
xorb
mov
flds
sub
xchg
lea
xor
bts
clc
mov
jmp
sub
jp
adc
ret
mov
vaddsubps
dec
cmpsl
ret
add
xchg
stos
arpl
mov
call
cmpsl
dec
bound
xchg
ljmp
cwtl
shrb
test
mov
pop
nop
pusha
and
mov
inc
inc
push
add
pop
scas
pusha
push
add
sub
shrb
push
push
test
sub
fiaddl
fbstp
adc
les
pop
push
lds
jmp
xchg
mov
fisttpl
sbb
xor
jno
ja
jo
pop
dec
pushw
or
fs
cmpsb
mov
push
mov
mov
repz
mov
nop
aad
push
add
pop
out
inc
loope
scas
xchg
and
into
inc
gs
mov
and
jmp
sahf
pop
jmp
adc
sbb
add
or
add
sbb
mov
divl
cwtl
adc
stos
cwtl
add
mov
jnp
in
jle
aad
mov
mov
push
cmp
jp
push
xor
mov
xlat
xchg
cmp
mov
fucomip
sbb
sub
sub
repnz
add
xor
pop
fstps
cmp
xchg
dec
sbb
inc
jle
mov
dec
lods
inc
jbe
cmp
imul
popa
jo
xchg
jne
xchg
popf
call
lcall
cltd
mov
dec
push
test
mov
or
inc
cmpsb
mov
test
adc
inc
loop
les
xor
sbb
jae
xchg
mov
mov
cltd
add
mov
pusha
mov
cmp
out
and
xor
cmp
xchg
pop
mov
movsl
ficomps
add
sbb
pusha
cmp
xchg
pop
inc
scas
cmp
ror
inc
add
xchg
and
ss
stos
repz
scas
xchg
push
lods
int
into
int3
pop
lret
fistps
and
sbb
hlt
in
inc
fs
loope
mov
jns
mov
lea
cmpsl
sahf
push
divl
enter
sbbb
subl
loop
imulb
icebp
mov
pop
dec
imul
inc
sarb
test
mov
xchg
lret
in
xor
jecxz
pop
adc
pop
shrl
xor
push
movsb
inc
fisubrl
sub
and
test
dec
fisubrs
mov
or
xchg
lret
repnz
sub
das
jg
pop
sarb
mov
push
scas
notl
shrb
push
icebp
mov
loopne
add
xchg
aam
inc
pusha
pushf
lock
scas
test
fistpl
xchg
scas
jl
ds
lret
pop
push
mov
sub
fsts
push
arpl
push
dec
jb
leave
pop
daa
mov
sbb
leave
push
dec
pop
jb
sbb
out
add
inc
jns
sbb
jl
mov
lahf
jp
nop
hlt
dec
mov
addr16
ljmp
push
add
dec
lods
jecxz
scas
pushf
insl
daa
test
js
data16
sub
cwtl
scas
fistpll
or
insb
mov
iret
push
sbb
push
fstpt
xor
loopne
mov
pop
cmp
mov
jns
outsb
inc
ljmp
pushf
inc
inc
push
adc
push
mov
leave
dec
xchg
or
lret
xor
test
push
or
pop
out
add
adc
lods
jbe
loop
inc
bound
aam
loopne
pop
data16
std
shrb
cmp
sub
ret
jl
mull
jmp
cmp
xchg
mov
rcl
jns
pop
outsb
pop
rorl
scas
or
fdivs
mov
jbe
fucomp
loopne
lea
pop
add
mov
mov
adc
xchg
insb
enter
das
nop
or
ss
dec
sbb
ja
enter
mov
jno
xor
inc
out
adc
adc
mov
loope
dec
push
push
loope
xchg
aam
mov
fdivrl
pop
imul
test
test
sub
xor
stc
orl
ja
stc
xchg
int
adc
lock
cmpsl
imul
fildl
and
stos
sbb
mov
mov
je
mov
inc
mov
loop
add
aad
xor
push
vmwrite
xor
stos
sti
and
fstl
push
out
daa
xchg
add
insl
pop
adcb
xchg
mov
xchg
pop
sub
dec
and
xlat
iret
mov
call
scas
xchg
cmp
scas
movsb
mov
dec
jl
push
adc
outsl
stos
dec
clc
pop
test
imul
mov
pop
fisubrs
mov
adc
stos
dec
sbb
dec
mov
lock
addr16
mov
clc
leave
or
sbb
out
mov
iret
clc
test
dec
mov
sub
mov
mov
mov
jecxz
outsl
test
xchg
sbbb
xchg
cwtl
fwait
mov
test
cmpsl
adc
mov
ret
enter
repnz
fwait
inc
cmp
lea
addr16
cmpsl
ljmp
insb
pop
movsb
clc
loopne
mov
stc
xor
dec
in
mov
subl
xchg
lret
sub
mov
add
pop
dec
jecxz
outsl
xor
movl
pusha
pushf
movl
movb
pusha
push
lea
jmp
sbb
jns
push
fcom
sahf
insl
fwait
sub
fwait
cmp
sub
xchg
xor
mov
stc
in
aas
loopne
imul
mov
mov
pop
mov
mov
sub
rorb
scas
pop
adc
cmp
push
enter
inc
leave
and
inc
sbb
mov
jl
add
push
stc
push
sub
add
push
gs
mov
stos
xlat
mov
jle
push
test
cmp
cmp
jg
push
cli
jb
psubw
dec
lods
mov
sarb
jmp
roll
mov
xorl
out
lods
inc
xchg
aas
sbb
imul
push
fstpt
fiadds
mov
mov
cmp
sub
push
jg
and
push
test
jl
and
test
cmpsb
imul
cmpsb
pushf
inc
sub
xchg
movsb
test
loop
aam
lahf
cld
sahf
inc
push
jmp
ror
mov
inc
dec
jl
negb
gs
add
mov
jns
jp
inc
mov
sti
leave
adc
mov
ficompl
mov
add
lret
bound
mov
ret
outsl
mov
add
jmp
mov
rorl
out
std
dec
inc
pushf
add
fwait
in
test
or
cmp
push
cmp
and
lahf
xor
and
stos
or
ljmp
pushf
cmc
lods
cltd
ret
add
push
jg
cs
push
test
cmp
mov
mov
scas
mov
je
mov
int
das
inc
lcall
mov
je
aaa
divl
xchg
enter
sbb
push
loope
dec
icebp
pop
fcmovnu
out
or
inc
movsl
inc
xor
pop
dec
inc
dec
xchg
popf
jne
test
add
mov
pop
bound
xchg
jl
sbb
lahf
pusha
xor
cmpsl
lods
sub
mov
or
int3
stos
pop
or
lods
sub
cli
xor
push
jb
adc
add
es
dec
mov
sub
mov
xchg
out
lods
or
cmc
cmp
inc
movsl
or
ret
pop
ss
lds
and
cmp
mov
subl
jb
rcll
repz
lahf
xor
out
mov
mov
jl
mov
xchg
dec
dec
and
sbb
push
sbb
cmpb
fmul
aas
jne
fldenv
sbb
aam
jge
xchg
jp
loope
pop
pop
add
xor
mov
mov
or
add
jo
popa
xor
xchg
jb
ljmp
stc
lret
pop
mov
pop
dec
in
xchg
loopne
mov
lds
jle
mov
neg
push
lods
xor
pop
push
enter
popa
mov
shlb
add
or
mov
nop
decw
xor
pusha
xor
andb
add
jbe
filds
pop
mov
jo
cmp
arpl
enter
and
or
out
call
inc
in
idivb
jp
jecxz
int3
cmp
ss
test
mov
mov
xchg
lods
mov
lods
sub
sub
pop
leave
add
sahf
pusha
xlat
xor
jnp
cltd
jo
lods
mov
or
scas
adc
inc
je
add
scas
jl
xchg
add
iret
xchg
nop
xchg
pop
sub
lret
push
xchg
sbb
clc
in
movsb
jg
or
scas
mov
or
out
dec
and
lahf
dec
mov
testb
fstpt
cmc
xchg
xchg
int
cmp
repz
je
loop
mov
mov
notl
ss
mov
dec
xor
call
and
inc
das
test
in
fincstp
fnstenv
push
jae
xor
push
pop
dec
das
aam
pop
xchg
dec
push
fldl
jnp
repnz
mov
xor
dec
jle
mov
cmp
jle
lahf
out
adc
les
mov
pop
sub
mov
mov
sbb
push
stc
push
mov
and
push
and
jne
inc
or
test
loopne
xchg
jnp
sbb
inc
ja
push
cwtl
xor
or
fisttps
mov
shlb
xchg
jo
or
ret
stc
movsl
ror
decl
stos
fs
add
adc
push
push
std
inc
mov
sbbl
adc
clc
ja
lds
mov
mov
mov
imul
in
ljmp
daa
pop
pop
xchg
xchg
hlt
leave
push
fs
jae
pop
xchg
pop
cmpsl
inc
or
and
sub
cwtl
nop
ds
dec
add
adc
or
push
roll
lret
bound
add
or
adc
cmc
lds
add
fwait
mov
dec
adcb
add
popa
xorb
out
arpl
rcrl
cmp
mov
and
jno
and
shl
fdivl
mov
je
sbbl
xchg
add
xor
rorl
xchg
jle
fiaddl
xchg
jne
push
mov
inc
inc
in
test
sub
mov
cmp
adc
xorl
sub
mov
test
lods
push
xor
je
inc
xor
cmp
jl
aaa
cwtl
scas
or
add
mov
xor
es
pop
inc
cmp
loopne
jns
out
xchg
push
and
int
dec
xor
addb
or
sub
sub
jae
adc
ret
push
aad
jle
sub
mov
mov
in
jg
rorb
dec
and
dec
aas
xchg
test
aad
add
xchg
ja
loopne
mov
xchg
add
hlt
aam
mov
and
cli
enter
out
mov
jl
cmpsb
lret
adc
cmc
sub
out
push
sbb
int
jbe
fs
adc
fcmovbe
loopne
je
mov
pop
push
je
leave
mov
mov
inc
sahf
scas
js
jnp
stos
ja
enter
xchg
mov
repz
stos
dec
xchg
pop
pop
mov
adc
test
mov
push
les
or
push
pop
call
inc
jnp
adc
mov
push
push
dec
cmp
test
addl
ret
mov
ret
inc
jecxz
cwtl
xor
shl
xchg
aaa
push
arpl
imul
pop
push
aam
sub
xlat
dec
mov
test
lret
sti
into
aaa
dec
adc
cmp
fsqrt
loope
pop
bound
fs
mov
inc
mov
mov
xor
mov
xor
push
push
cmp
test
push
mov
jae
xchg
pusha
fwait
mov
adc
data16
or
adc
je
mov
and
fidivrs
xchg
lret
sahf
cmp
mov
sbb
cltd
inc
mov
in
imul
sbb
ja
push
pop
xchg
pop
and
cmc
popf
mov
cmp
mov
es
pop
add
xchg
dec
mov
adc
dec
in
jae
nop
sti
repnz
jl
loopne
pop
movsb
xchg
adc
aam
pushf
xor
jae
dec
add
mov
je
les
shlb
mov
mulb
push
mov
les
aad
jl,pn
mov
mov
fs
ljmp
push
mov
mov
mov
xchg
outsb
sarl
push
mov
inc
iret
and
add
adcl
jmp
aaa
sti
test
mov
or
jae
fldl
clc
and
outsl
dec
xor
pop
leave
scas
test
push
lret
xchg
dec
jecxz
or
push
xor
fwait
ret
sbb
sub
ret
mov
add
nop
lahf
sub
repnz
adc
insb
shll
testb
add
xor
shr
es
pop
sbb
das
sub
inc
pop
xor
loopne
loop
and
jns
imul
mov
cld
mov
xor
push
jmp
mov
stos
or
scas
dec
lahf
aas
popf
addr16
aas
xor
sbb
leave
sbb
bound
cmpsb
inc
sbb
sbb
mov
jbe
rolb
je
mov
xor
pop
sbbl
shrl
sbb
fst
xchg
cwtl
fdivl
je
movsb
sarb
adc
vmovd
js
call
push
data16
lds
jge
stos
daa
dec
add
mov
pop
adc
mov
test
popa
add
jmp
xor
test
fs
repnz
push
sub
dec
pushf
mov
or
pop
aaa
pop
div
xcrypt-ctr
cmpsl
cwtl
mov
out
push
sbb
dec
cmp
cmpsl
imul
pmaxub
push
mov
and
ret
popa
gs
rolb
xchg
mov
mov
mov
mov
mov
pop
clc
push
pop
lret
outsl
sub
xor
out
xchg
je
stos
sbb
mov
ljmp
loope
xchg
rclb
jp
cld
das
mov
mov
sbb
mov
ss
add
xchg
shrb
xor
dec
mov
popf
je
scas
xchg
int3
stos
and
popa
aaa
cmp
je
or
dec
lods
ljmp
mov
xor
add
nop
arpl
mov
inc
inc
or
jl
and
insb
dec
lods
jo
rcrl
mov
mov
xchg
cmp
sub
dec
or
sub
in
outsl
imul
inc
inc
cmp
mov
in
call
loopne
xor
or
arpl
ljmp
insb
dec
jns
out
xchg
xchg
mov
rcrb
cld
inc
jb
mov
insb
mov
lods
mov
add
mov
gs
mov
scas
sbb
andl
inc
mov
pop
enter
mov
adc
lock
in
sub
ret
dec
out
inc
lcall
cmpl
xchg
push
nop
bound
xor
push
cld
mov
aad
mov
mov
xchg
mov
or
stc
xchg
lcall
data16
add
hlt
push
push
stos
fs
bound
rorb
loopne
cmp
scas
movl
ret
fnstenv
sub
fdivrl
sbb
jl
or
mov
dec
jecxz
push
popf
lret
adc
leave
shrb
pushf
hlt
mov
add
push
filds
in
filds
push
fdivs
fists
fwait
add
fsubs
hlt
stos
inc
and
stc
jl
leave
pop
pushf
jno
fldenv
sub
push
or
lcall
in
add
inc
and
lock
arpl
lahf
cs
xchg
scas
xchg
lcall
xor
push
pop
stc
movsb
cmpsb
lahf
pusha
jbe
xchg
xor
sub
mov
repnz
cmpsl
pushf
push
mov
test
loope
mov
mov
pusha
icebp
push
pop
xor
in
adc
cmc
push
in
mov
cmc
push
iret
test
cmp
imul
shl
sub
nop
and
dec
sbb
xchg
xchg
inc
xchg
pop
fwait
adc
test
pop
stc
out
inc
lahf
rolb
push
or
jb
loope
and
sub
imul
aam
mov
insl
mov
cmp
adc
int
xor
outsb
fsub
lea
jecxz
inc
push
outsl
push
jbe
adc
jp
xor
sar
jp
rorl
std
xor
mov
adc
ds
gs
or
aam
push
xor
ljmp
loopne
xchg
jo
mov
xlat
sbb
mov
mov
mov
fnsave
sbb
mov
inc
pop
mov
addr16
mov
pop
stc
fstpt
test
mov
and
dec
outsb
xchg
test
xchg
mov
iret
push
dec
xchg
add
lea
fidivs
cltd
mov
gs
and
loopne
xor
jmp
jmp
xor
sbb
dec
jge
and
lret
daa
sbb
mov
and
cld
jb
cld
clc
dec
jg
int3
testl
mov
xchg
test
mov
mov
test
out
push
or
in
test
add
out
test
jge
out
hlt
sbb
mov
add
cmpb
lds
lds
int
xor
fisttpll
mov
lea
xlat
dec
push
or
dec
pop
nop
pushf
fimuls
out
fsincos
lock
in
adc
ja
cmpb
mov
ret
push
shll
aaa
add
insl
test
insb
and
test
jge
lock
jae
ret
xchg
loopne
mov
push
or
fs
lods
cmpl
xchg
sub
push
fstl
pop
fwait
mull
lret
xor
add
js
ljmp
jnp
loop
xor
push
xchg
mov
movsl
pop
xor
mov
dec
or
stc
push
inc
xor
iret
les
sbb
xchg
sbb
fidivs
mov
xor
imul
xor
xor
hlt
pusha
stos
dec
movsb
rorb
lods
push
xor
push
mov
fucomip
repnz
popa
xor
mov
lret
cmp
adc
dec
jmp
add
jne
or
popa
mov
mov
cmp
stos
in
cld
fmul
pop
sub
decl
mov
sbb
pop
fldl
fistps
jno
xchg
push
pop
mov
adc
xchg
sub
dec
inc
mov
iret
push
cmc
daa
imul
sub
adc
mov
push
dec
inc
sbb
jl
out
dec
xor
sbb
or
xchg
push
stc
xor
inc
push
cmpsl
jne
adc
sub
xor
ret
das
cmc
jnp
addr16
mov
imul
popf
ficomps
mov
jb
xor
cmpl
push
and
xchg
test
divl
xchg
mov
loope
ljmp
jp
inc
add
xor
movsl
sarl
xor
cmpsb
cwtl
dec
add
jne
adc
xor
xor
imul
mov
xchg
clc
sti
xchg
lea
subl
sbb
or
movsl
in
dec
mov
movsb
push
add
ss
adc
jecxz
lock
dec
shrl
cmpsb
mov
sbb
pop
std
cmc
pop
cmp
in
xor
js
arpl
mov
jecxz
cld
mov
in
dec
mov
in
js
push
add
or
xor
sub
xchg
mov
pop
dec
mov
inc
scas
xchg
in
movups
xchg
xor
pop
mov
popa
jp
xor
cmovs
sbb
cwtl
lret
push
stos
lock
inc
stos
or
xor
xor
nop
cmp
popf
icebp
pop
fwait
cmpsb
and
xor
jmp
movl
call
inc
cltd
inc
syscall
arpl
push
mov
or
push
mov
fmulp
out
stos
xor
int
test
add
mov
imul
test
addr16
imulb
jno
inc
les
push
in
xor
lea
std
dec
push
mov
mov
pop
push
fsubr
lret
sub
pop
rcr
push
pop
or
jl
fstpl
pop
pop
and
add
push
push
inc
sahf
insb
mov
fistpl
inc
pop
jae
stos
lret
test
mov
ficompl
lcall
adc
int3
das
cwtl
xchg
andl
jnp
popa
mov
jle
mov
in
pop
stc
jge
mov
shlb
ret
cmp
jne
lock
shr
pop
mov
sub
popf
and
pop
shrb
popl
sbb
push
pushf
and
mov
pop
or
call
iret
call
aam
and
xor
pop
ss
xor
xor
cmp
pop
sbb
mov
in
push
cmpb
aaa
push
cmpsl
je
inc
mov
movsb
push
repnz
lcall
push
int3
cmp
inc
and
cwtl
cld
out
cmp
and
mov
push
sbb
insl
xchg
xor
or
mov
add
push
add
cmc
or
mov
daa
mov
xor
mov
or
add
dec
xor
mov
xor
out
les
add
mov
sbb
shlb
test
jne
adc
mov
cmp
mov
sbb
imul
sti
mov
das
inc
fists
xor
pusha
movb
pushl
test
pushf
lea
jl
inc
test
inc
rol
mov
not
add
mov
jmp
pusha
sbb
dec
and
sbb
aas
popf
jne
xor
pop
push
ljmp
lock
clc
mov
pop
jne
aaa
mov
in
inc
pop
aad
fadds
jo
popf
mov
fdiv
push
cld
test
mov
jl
incl
aas
enter
pop
bound
push
test
shrb
inc
loope
dec
xchg
xchg
addr16
mov
addr16
dec
push
fldcw
dec
das
mov
insl
sbb
mov
jle
push
xor
sbbl
xor
jne
adc
rdtsc
lea
hlt
sbbl
add
scas
xchg
addl
fnsetpm(287
cltd
ja
pop
fnstcw
movsb
cli
dec
xor
and
cltd
mov
cltd
sti
dec
mov
cli
iret
inc
in
pop
inc
dec
or
das
add
dec
jnp
mov
mov
push
jmp
cmpsl
iret
sahf
push
test
jg
iret
aam
je
push
stc
scas
inc
jbe
xor
xchg
mov
iret
and
enter
mov
movsl
andb
xchg
daa
xchg
insb
fisubs
mov
bound
subb
int
mov
std
mov
dec
sbb
or
das
mov
sub
popa
int3
cmpl
out
sbb
pop
jmp
xor
mov
fdiv
add
jle
scas
sub
popf
adc
adc
clc
push
push
mov
mov
inc
mov
inc
loopne
pop
and
repnz
adc
and
loopne
xor
insl
dec
mov
sub
shll
xchg
mov
jno
fwait
sbb
push
aad
repnz
mov
xchg
mov
pop
shr
sbb
jmp
mov
push
movl
movb
lea
jle
push
pusha
pushl
pushf
lea
jmp
mov
mov
lods
pop
cmp
xor
out
adc
call
xchg
cmp
xchg
mov
cwtl
scas
sub
push
mov
dec
enter
or
rorl
xchg
mov
ds
out
dec
rolb
xchg
inc
inc
add
in
fdivs
xchg
mov
cmp
scas
and
test
iret
adc
xchg
mov
inc
cmpsl
xchg
mov
rdtsc
mov
lea
xchg
jmp
sub
xor
cmp
aaa
call
add
or
cli
xor
mov
xor
les
fs
adc
jo
sub
and
cli
mov
rcrb
push
xlat
stos
cltd
dec
cmp
jbe
push
faddl
fldenv
pop
jne
mov
adc
out
xchg
mov
icebp
leave
pop
shll
push
sub
pusha
inc
test
mov
leave
scas
clc
mov
lods
ficompl
jb
jne
popf
popf
xchg
push
popa
cmp
stos
xorl
xchg
mov
popa
int
fsts
mov
aaa
or
cmp
bound
jg
cli
bound
and
sub
push
negl
adc
add
sub
mov
cs
aad
mov
popa
lods
into
and
push
dec
roll
inc
lock
mov
les
mov
jb
movsl
fstps
push
jae
and
imul
mov
es
push
lea
mov
push
mov
fimuls
cmp
mov
pop
mov
dec
movq
cs
mov
in
jb
rcll
jle
and
and
loop
outsb
fldl2e
mov
repnz
lock
out
dec
lcall
xchg
dec
insl
js
cmp
xchg
mov
or
pusha
int3
xor
cld
in
leave
xchg
dec
pop
sahf
repnz
clc
sub
mov
inc
pusha
xor
rolb
test
clc
movsl
in
pop
stc
enter
in
push
mov
cmp
mov
mov
add
aas
xchg
inc
dec
insl
push
out
mov
pop
push
xchg
and
pop
pop
or
dec
int3
loop
xor
loope
mov
lret
movsb
inc
stc
shr
sub
mov
cmp
call
xor
cld
push
jne
and
popa
sti
sub
dec
gs
in
mov
inc
xchg
das
cmp
adc
adc
leave
or
cmpb
mov
decb
cmc
dec
ljmp
pop
pop
add
pop
sbbl
addr16
adcl
icebp
icebp
roll
insl
aad
jbe
popf
dec
faddl
movsb
shlb
rorl
xchg
scas
sbb
fimuls
cwtl
inc
daa
insb
cmc
out
aaa
cmp
adc
jmp
push
rolb
xor
mov
push
pop
mov
lea
pushf
jmp
mov
and
add
rol
push
mov
mov
and
jecxz
mov
ja
inc
inc
pop
mulb
push
repz
mov
mov
add
repnz
cmp
or
pop
sbb
adc
xlat
mov
xchg
mov
push
push
ja
ds
pushf
jle
cmpsl
fsts
xor
jns
mov
inc
cld
outsl
dec
cmp
and
dec
dec
mov
push
pop
jne
es
add
es
out
daa
icebp
adc
test
stos
pop
or
enter
mov
sub
mov
xlat
add
push
add
das
dec
sub
xchg
mov
pushf
inc
push
adc
mov
sub
mov
mov
push
fwait
xor
xchg
sbb
scas
inc
cli
scas
add
inc
test
xchg
fnsave
inc
xor
push
dec
test
outsl
xor
mov
js
jb
stos
cmp
subb
lds
loopne
sub
call
ss
stc
sbb
lds
sbb
xor
pushl
shr
cmc
jmp
jne
mov
sbb
fsubrl
pop
jle
inc
inc
dec
mov
fstp
in
ljmp
push
adc
mov
fdiv
cmpsl
stos
mov
scas
stc
aad
jmp
adc
xor
adc
ljmp
fwait
cmp
push
popa
aaa
jle
inc
test
or
into
leave
outsb
mov
out
xchg
xor
addr16
jb
push
leave
mov
ds
xlat
jb
idivl
cs
pushf
movl
pusha
movl
push
pushf
lea
jmp
movl
push
jmp
jl
std
sub
mov
dec
ds
xor
mov
out
adc
lods
data16
xor
ss
and
sbb
and
aas
pop
pop
push
lds
call
push
xchg
jmp
cmc
adcl
cmp
add
mov
push
enter
movsb
inc
andb
in
pop
mov
inc
pop
adcb
loopne
pop
jp
ret
fs
stc
sahf
mov
sub
mov
std
dec
inc
scas
sarl
in
sahf
xor
shrb
xor
mov
sar
or
je
imul
xchg
scas
xchg
or
inc
hlt
pop
inc
mov
ljmp
push
sub
mull
pushf
pop
mov
jl
push
movsl
and
xchg
scas
ficoms
cmc
jmp
shr
cmc
mov
movb
shr
cmc
pushf
stc
cmc
add
pusha
bt
mov
pushf
mov
sar
aaa
mov
clc
pushf
cmp
movb
shr
stc
call
mov
push
imul
arpl
out
out
fwait
mov
push
lods
bound
xchg
inc
xor
jns
mov
stos
into
push
dec
add
int
sarb
test
scas
fmuls
aam
fwait
cld
inc
push
ljmp
data16
inc
inc
push
add
mov
stos
rcrl
cmp
daa
daa
pop
inc
push
mov
xchg
out
cmp
cmp
into
lds
xchg
call
fnstcw
rolb
sub
call
push
sbb
orl
xlat
xlat
mov
adc
mov
andl
insw
and
mov
cmp
xchg
mov
mov
mov
dec
mov
xchg
lods
inc
les
mov
subb
mov
xchg
mov
xchg
lods
js
fdivs
ljmp
xor
pusha
cwtl
pop
xor
into
xor
cmpsb
mov
push
dec
mov
test
cli
jecxz
ret
mov
sbb
xchg
lods
sbb
sbbl
repnz
dec
add
xchg
sbb
mov
ret
cmp
jno
out
pop
out
and
pop
mov
lods
imulb
jg
xchg
push
push
push
lods
out
idivb
loopne
movsl
xor
movl
movb
push
push
pushf
lea
jmp
mov
sbb
dec
pop
or
pop
aad
sti
adc
das
inc
sti
pop
stos
xchg
xor
cs
jl
mov
pop
dec
dec
dec
stc
mov
fmull
add
in
inc
and
shll
daa
aam
pop
jge
cmp
mov
push
mov
mov
pop
aam
xchg
ja
stos
popa
jge
adc
popf
sbb
int3
pushf
sbb
pop
sub
lcall
jae
push
shrb
addb
pop
fs
roll
aad
sub
out
fmull
imul
fdivrl
ror
imul
movsl
mov
test
les
out
and
out
lds
outsl
dec
test
push
cmc
inc
mov
cmpsl
xchg
test
andb
es
ja
daa
sbb
xor
jge
pop
addr16
scas
cli
jl
aam
and
fs
movsl
movl
pushf
pusha
mov
push
lea
jmp
movl
pusha
pushl
lea
jmp
pop
jnp
xchg
imul
mov
sbb
scas
push
sub
ds
filds
fwait
mov
call
sbb
jge
fdiv
fidivl
popa
in
xor
mov
int3
pushf
push
jge
mov
rclb
mov
fnstcw
mov
cmp
nop
dec
jecxz
jg
in
shrb
xor
add
jecxz
std
xor
fcoms
push
mov
or
test
adc
add
inc
in
adc
icebp
shrb
fdivrs
jg
rcrb
mov
sub
lcall
push
sub
movsb
clc
xor
push
mov
call
mov
popf
nop
ss
or
repnz
outsb
push
push
xor
ja
arpl
enter
imul
clc
jo
mov
pop
fsubrs
push
adc
fisttpll
shlb
dec
aas
pop
jo
push
ret
mov
imul
xor
aas
popf
jne
ss
pop
xchg
fs
test
xor
rorb
xor
mov
jmp
mov
jb
inc
popf
push
and
xchg
stos
movsl
xlat
sub
push
out
fwait
ljmp
mov
lret
inc
cs
insb
cltd
xor
or
push
cmpsl
cmp
jmp
cwtl
xor
xor
inc
daa
push
push
jnp
not
xor
ja
push
cltd
das
aad
push
jmp
sbb
jp
mov
fcoml
push
mov
xchg
stos
push
or
jp
jl
xlat
push
mov
sbb
data16
insb
ret
xor
pushf
pushl
movl
pusha
call
sbb
roll
sbb
lds
int3
or
daa
push
adc
insl
in
adc
gs
push
imul
push
mov
inc
loop
mov
repnz
dec
daa
xchg
pop
outsb
lods
out
pop
rcll
rcr
mov
clc
mov
outsb
test
rcl
mov
xchg
xor
js
aad
orl
clc
sub
pop
fildll
out
cwtl
outsb
repnz
ja
loope
pop
in
dec
cmp
xor
ficoms
cltd
outsl
aas
into
jmp
and
adc
mov
push
or
lods
jnp
dec
and
mov
sbb
push
push
std
notl
dec
mov
subl
insl
jbe
push
xchg
xchg
lcall
cmp
jbe
xor
roll
mov
sub
push
aaa
pop
idivb
dec
pop
aas
lds
and
mov
stc
movsl
pop
repz
test
repnz
in
shrl
aaa
push
nop
mov
sti
mov
inc
negl
inc
xchg
loopne
cs
or
and
xchg
imul
test
pop
pop
mov
leave
int3
jmp
jno
push
add
sub
inc
js
pop
ljmp
lds
cmp
add
js
mov
mov
fimuls
andl
xor
repz
movsb
dec
cmpsb
hlt
subb
xor
cmp
pop
sub
adc
in
sbb
sbb
pusha
xor
bound
mov
push
aas
pop
fwait
enter
or
pop
out
sbb
xor
sti
ret
sti
aam
addl
lahf
stos
scas
pop
aam
shll
test
div
xchg
xchg
icebp
daa
mov
test
jg
sbb
cwtl
call
clc
add
mov
lret
cmpsl
es
imul
and
das
arpl
enter
jae
js
cld
push
test
pop
jne
cld
sbb
sti
pop
cwtl
sbb
sub
fisttps
mov
aad
loopne
out
jbe
xor
add
cmpsl
cli
sub
aam
mov
xchg
fs
movsb
sbb
pop
inc
inc
jne
xor
pusha
pushf
movl
pushl
push
pushf
lea
jmp
adcb
pop
mov
negl
pop
cmpsb
xchg
jp
dec
orb
mov
popf
adc
push
repz
sbbl
std
xor
fildll
pop
pusha
clc
push
mov
xchg
push
popf
adc
gs
les
add
cmpsl
xor
pop
cmp
ljmp
insb
lret
mov
add
jae
inc
int3
xchg
hlt
mov
adc
pop
clc
inc
push
jmp
mov
inc
pop
jbe
test
cli
dec
push
loope
scas
leave
addw
lret
sub
cltd
and
push
adc
scas
aad
int3
rcrb
in
xorb
test
and
ds
or
aaa
sti
fcompl
into
mov
mov
in
pop
mov
scas
jo
mov
in
mov
pushf
cmp
mov
jo
xchg
pusha
int
test
sub
xor
cwtl
mov
or
xchg
cmpsb
jno
dec
movl
call
repnz
jno
cwtl
in
out
or
pop
mov
in
push
jmp
push
notb
mov
dec
mov
iret
xchg
aad
jecxz
dec
push
mov
rcrl
cmp
pop
and
jne
ljmp
vunpckhps
aas
inc
jmp
xchg
movsl
inc
mov
mov
daa
into
aam
lcall
xor
xchg
movsl
loopne
orb
and
test
and
pusha
pushf
pushf
pushl
lea
jmp
push
mov
movl
jmp
fldcw
mov
das
add
shrb
sub
into
add
mov
fsubl
pop
mov
shrb
mov
inc
imul
aam
and
mov
add
inc
movsb
add
xchg
std
push
mov
xchg
push
clc
mov
inc
nop
cmp
retw
xor
push
and
add
int
test
xor
scas
ficomps
mov
icebp
xor
lcall
or
lea
sti
jmp
stos
adc
fdivrl
mov
lock
xor
pusha
sbb
push
les
shrb
mov
test
inc
cmpsl
or
and
pop
out
shll
out
xchg
mov
mov
inc
jns
cmc
dec
cli
adc
pusha
mov
mov
sub
pop
outsb
sahf
jo
sub
mov
push
fdivr
cwtl
xchg
xor
testl
jbe
ret
inc
pusha
loopne
cmp
lods
pop
daa
les
in
and
or
out
push
mov
push
inc
jne
addl
cmpsb
leave
cmovb
aas
mov
imul
cmp
cmp
mov
jnp
scas
lret
xor
mov
xchg
mov
iret
push
data16
xor
sub
mov
aam
jle
cmp
addr16
jmp
sbb
lcall
mov
pop
pop
lods
mov
jle
push
pop
aam
das
scas
pop
test
xchg
mov
sub
ret
pop
inc
push
dec
int
mov
or
jae
mov
scas
mov
or
out
add
mov
lds
sub
es
aad
xchg
das
push
cmp
cmpsl
out
mov
cmp
out
sarl
mov
push
add
pop
repnz
faddl
mov
pop
mov
cmp
fimull
fs
lds
rorb
add
popf
idivl
test
adc
push
adc
pushf
enter
add
mov
dec
inc
inc
outsb
xor
popa
mov
sub
jbe
mov
push
jg
pop
or
enter
sbb
insl
test
push
mov
and
sti
and
sahf
jg
xorb
popf
scas
push
jg
jae
aad
fiaddl
cli
push
es
push
daa
out
pop
call
push
xchg
pop
andb
je
test
and
add
popl
leave
inc
std
into
inc
mov
fisubl
daa
xor
cmc
cmp
lea
mov
push
pop
lret
test
out
push
mov
mov
push
mov
mov
push
out
mov
and
test
pop
arpl
lcall
pushf
dec
xor
inc
dec
dec
mov
mov
rorl
rclb
insb
and
adc
sbb
adc
xchg
mov
fimuls
cwtl
jne
dec
adc
movzwl
pop
popf
jle
int
xchg
fs
orl
jmp
clc
push
mov
out
cmp
xchg
sbb
mov
inc
test
mov
aad
jnp
sub
cld
ljmp
xchg
das
xchg
mov
push
cmp
mov
add
in
cmp
mov
insl
cmp
jge
stos
cmp
mov
mov
jo
bound
ret
loope
push
ret
outsl
jl
mov
imul
loope
sub
dec
leave
mov
xchg
jo
rcrb
pushf
loop
jle
pop
mov
outsb
push
int
ret
jmp
popa
fs
dec
fstl
loop
out
dec
in
push
popl
in
or
shl
sahf
test
lods
sbb
push
hlt
addb
stos
je
xchg
push
dec
cmp
add
or
outsl
mov
mov
sub
je
pop
je
out
test
add
imul
lret
into
cmpsl
ret
gs
lds
and
loope
mov
add
sahf
add
sbb
push
js
sub
push
fdivl
xor
add
pushf
jno
jae
xor
movsl
pop
add
xchg
dec
pushf
scas
fistpll
mov
xor
pop
xor
pusha
popf
adc
xchg
push
popf
imul
subb
mov
outsl
into
jge
xor
sarb
rcrb
in
pop
gs
push
push
test
ret
movsl
ds
lcall
lahf
dec
or
rol
mov
mov
in
incb
mov
cmpsb
mov
xlat
mov
ljmp
cmpsl
pop
jnp
lret
jp
ds
add
jno
inc
sahf
repz
push
dec
jne
repz
push
pop
inc
or
repnz
outsb
sti
mov
sbbl
add
or
shll
xchg
add
pop
add
pop
mov
sbb
dec
scas
jb
lods
wbinvd
cmpsb
xchg
xchg
pop
das
sub
pushf
mov
daa
jge
sub
icebp
jmp
fists
test
pusha
adc
xor
mov
inc
and
pop
jecxz
cmc
lcall
xor
jecxz
into
lea
sub
loope
movsb
jecxz
mov
arpl
ja
adc
repnz
xchg
imul
cmp
imul
and
jbe
stos
jne
shrb
inc
out
xchg
lahf
and
dec
ljmp
lret
push
xchg
adc
sub
filds
mov
add
arpl
int3
bound
in
mov
ret
int
ret
orl
and
mov
mov
jp
lcall
ljmp
or
mov
aam
iret
xlat
xor
fcmove
test
sahf
sub
dec
stos
jge
sbb
inc
fwait
pop
repnz
cmc
call
mov
outsb
jno
stos
ss
inc
xchg
fcomps
scas
mov
mov
in
push
mov
mov
dec
sub
xchg
sahf
and
gs
inc
cmc
jge
fldl
fwait
shll
add
jnp
xchg
mov
xor
jle
jecxz
mov
dec
repz
aaa
dec
xor
jae
stc
ljmp
sub
lret
pop
mov
xchg
sahf
dec
sbb
or
outsb
shll
push
xor
int3
xor
jo
rcll
adc
sti
cmp
xor
xchg
sahf
retw
cmpb
loopne
dec
mov
sbb
aaa
fisttpll
sub
mov
jae
or
pop
xor
nop
shrl
out
popa
dec
sub
repnz
fcmove
stc
add
push
mov
test
fs
mov
xor
sbbb
mov
das
out
mov
fdivrl
push
jb
jmp
mov
push
jbe
xchg
cmpsl
jb
cmpsb
pop
stc
jb
imul
adc
xlat
divl
and
dec
jle
mov
mov
mov
pop
lods
enter
mov
inc
mov
and
push
cmpsb
cmp
mov
cmpsb
nop
inc
pop
xor
xchg
ds
sub
out
mov
repz
mov
je
jmp
pop
icebp
mov
pop
cmc
lahf
outsl
mov
xchg
mov
pushf
movsb
pop
cmpsl
in
sbb
jae
push
pop
decl
mov
cmp
adc
test
xchg
pushf
outsb
mov
pop
stos
dec
xchg
cmp
fsubr
jae
gs
xchg
pop
inc
push
data16
inc
incb
push
addr16
repz
mov
fmul
cmpsl
adc
push
aad
imul
popf
push
aaa
xchg
xor
mov
iret
scas
pop
sti
into
dec
mov
cli
sbb
and
xor
ljmp
mov
les
xchg
pushf
adc
ret
xchg
ret
test
imul
jb
cmp
xor
loope
xlat
outsl
mov
push
out
lea
divl
int
adc
test
mov
push
sbb
jns
xchg
pushf
js
cmpsl
movl
pushf
movw
pushf
lea
jmp
pusha
movl
movl
pushf
pusha
movl
pushf
pushf
lea
jmp
push
movl
pushf
lea
jl
pushf
movl
push
pusha
lea
jmp
or
jge
pushfw
jbe
je
rcrl
test
xor
adc
push
add
les
mov
ljmp
xor
jae
push
xchg
cmp
test
sbb
dec
movsl
out
ds
in
pusha
push
mov
outsb
mov
add
and
popf
in
sub
jb
imul
push
xor
clc
je
inc
gs
cmp
or
pushf
or
mov
xchg
fwait
sahf
lds
mov
jno
mov
or
int
mov
mov
xchg
fwait
mov
ret
mov
add
mov
fs
jmp
jmp
lods
in
dec
out
lret
or
test
push
int
push
in
sbb
or
xchg
jg
arpl
mov
lock
ljmp
xchg
xorb
data16
clc
sbb
inc
std
inc
fwait
shlb
push
scas
dec
push
xor
movd
push
mov
sub
in
mov
xor
sbb
push
mov
test
push
sbb
inc
ret
in
fcomps
out
mov
cmc
cs
cld
inc
subb
outsb
imull
inc
fs
xchg
xor
or
mov
jmp
call
pop
cmpsl
push
sbb
std
inc
xor
push
sbb
popa
xchg
mov
mov
arpl
xorl
cmpsb
dec
jb
xor
cmp
xor
repnz
subl
pop
ds
mov
lahf
rclb
mov
xor
xchg
inc
xor
jmp
fidivs
sub
cld
fldl
sarl
lret
out
xchg
lcall
ljmp
mov
mov
push
xor
xor
scas
mov
jmp
jns
cmpsb
pop
loopne
dec
ljmpw
or
jmp
mov
fldl2e
adc
or
loope
jl
sub
sub
or
jg
push
xor
pop
std
jmp
xchg
movsl
lret
cmpsl
imul
fwait
add
sbb
xchg
cltd
cmpl
sbb
push
sbb
btr
mov
cmc
pushl
cmc
shr
bt
call
xor
mov
notb
inc
aaa
nopl
push
ja
mov
notb
lea
outsl
or
movsl
daa
mov
pop
mov
mov
adc
loope
cli
pop
xor
aam
movsl
arpl
aam
pop
in
pushf
test
jb
pop
out
jo
stos
cmp
mov
rcrb
imull
mov
test
mov
jl
inc
dec
test
dec
enter
fsts
imul
and
je
sti
pop
mov
sti
xchg
subb
sub
jnp
js
fisubl
fstpt
cmp
and
iret
or
dec
stos
inc
mov
xchg
push
jb
cs
xchg
push
dec
jb
icebp
dec
imul
push
mov
pop
enter
es
enter
enter
loope
or
xchg
push
push
mov
gs
add
sbb
xchg
cmp
sbb
jo
shrl
sbb
enter
xor
enter
pop
push
or
pop
sub
cld
jne
ljmp
fdivrl
movsb
xlat
fildl
notb
or
das
pop
cltd
aaa
jae
cmp
scas
jp
sbb
cmp
jge
add
or
into
sub
mov
add
sub
mov
sub
cmp
ss
xlat
xor
in
in
lcall
and
push
insb
adc
push
repz
sbb
jb
push
sti
idivb
mov
stos
inc
adc
or
dec
dec
int3
push
mov
call
dec
pushf
shr
ret
mov
adc
pop
jns
jp
stos
daa
inc
jp
dec
jnp
xchg
xor
subb
xchg
imul
push
test
mov
and
mov
sbb
jge
pusha
jmp
movl
pushf
lea
jmp
lcall
sbb
pop
or
cmp
aad
pop
sbb
mov
xor
xchg
adc
int
sbb
mov
or
clc
stos
dec
push
xor
sahf
or
pop
lods
and
loope
insb
inc
cmp
sub
out
pop
mov
mov
lods
pop
mov
leave
mov
mov
or
in
aam
push
and
je
and
xor
push
mov
xor
jae
test
dec
pop
mov
cmovl
lcall
xchg
inc
mov
jp
add
loopne
ss
fxch
daa
or
and
push
pop
jge
xchg
shr
dec
mov
mov
mov
cwtl
mov
adc
xlat
fimuls
scas
jmp
cltd
js
mov
stos
imul
lcall
jecxz
mov
push
mov
aad
ja
and
mov
xchg
mov
push
popf
pop
fldcw
push
rclb
dec
imul
sub
daa
jle
xor
add
push
adc
or
mov
cli
and
mov
negb
enter
mov
rcll
out
bound
pop
repnz
out
jo
push
shll
push
mov
push
cmp
and
lcall
icebp
or
cwtl
sbb
jnp
movsb
xchg
push
mov
out
iret
and
jae
mov
mov
xchg
xchg
sbb
and
stos
pushf
setbe
pop
mov
pushf
pushf
jmp
movb
call
sbbb
adcb
push
xor
fisttps
stos
out
cmp
shlb
push
lret
xor
mov
and
jb
sub
mov
jns
mov
add
shlb
popa
cld
jecxz
test
jp
add
ss
adc
mov
jne
inc
cs
shll
lds
add
into
filds
je
jb
fistps
fucomip
push
mov
adc
or
fistpl
fstpt
cltd
dec
out
insb
js
fimull
xor
imul
mov
cltd
dec
fstp
jnp
lahf
pop
in
in
mov
mov
pop
jbe
js
add
dec
addr16
bound
test
add
nop
arpl
je
jbe
aas
xchg
and
dec
jmp
test
mov
and
jge
or
cmp
and
adc
add
fnstcw
jne
out
movsb
jno
or
add
aaa
dec
xchg
mov
push
cmp
xchg
mov
stos
sbb
loop
add
repz
fdivrl
pop
mov
and
push
jp
jae
scas
mov
cmp
xchg
mov
sbb
popa
adc
mov
rcll
sub
jl
repz
lods
adc
xor
cmp
cwtl
inc
outsb
ja
test
cmpsl
cmp
mov
pop
and
cmp
and
scas
aaa
sub
pop
jge
sbb
push
xor
imul
add
dec
xchg
into
or
sub
insb
and
outsb
lods
outsb
mov
xchg
xor
imul
mov
adc
mov
xchg
scas
loope
pop
xlat
pop
adc
outsb
dec
pop
addr16
add
in
int3
fists
push
popa
arpl
sub
push
scas
pop
xchg
notb
or
mov
or
std
or
cmpl
xchg
xchg
add
add
stc
jl
pushf
pushf
lea
jmp
pushf
movl
push
push
mov
lea
jmp
dec
pushf
add
push
xor
bswap
dec
inc
mov
movb
push
pushl
push
mov
movsbw
not
mov
call
adc
fcoml
inc
sbb
ret
and
sub
push
xchg
out
push
jge
mov
xor
inc
dec
add
jl
out
stc
aad
dec
in
push
jge
xor
mov
rorb
bound
mov
je
rorl
jecxz
add
in
dec
pop
aad
and
lcall
sbb
bound
aaa
imul
outsl
aam
or
mov
mov
pop
jle
xchg
xchg
in
in
popf
pop
xor
ljmp
adc
and
adc
pop
xor
out
adc
imul
pop
lret
xchg
imul
pop
shlb
xchg
daa
push
dec
xor
loope
xchg
pop
iret
iret
xchg
jae
out
into
dec
dec
mov
adc
fwait
sbb
jo
xlat
sub
push
lea
add
xchg
or
cmp
mov
loope
stos
jle
push
mov
xor
es
popa
inc
xor
mov
sbb
and
push
jbe
push
je
shl
inc
shrb
dec
mov
addb
sub
fcompl
pop
mov
icebp
lret
insb
fdiv
das
adc
add
aad
mov
lahf
es
jecxz
lret
push
es
adc
push
pop
lds
outsb
call
into
out
mov
call
push
ds
lods
sbb
xchg
rcrb
jecxz
xchg
xchg
loop
imul
jmp
pop
sbb
inc
hlt
sub
xchg
xchg
cmp
shr
sbb
add
movsb
loope
push
lods
jnp
xchg
nop
mov
mov
mov
ret
jnp
int3
das
daa
xor
loopne
xor
test
xlat
popf
cmp
mov
repnz
xchg
into
sub
inc
and
pop
es
in
pushf
pushf
lea
jmp
xor
pusha
rol
mov
add
movzbw
mov
movsbw
lea
xadd
bsf
mov
mov
shl
shl
shrd
mov
pusha
pushl
shr
call
movl
movb
pushf
pushf
mov
movl
pushf
pusha
pushl
push
lea
jmp
pusha
movl
push
pusha
lea
jmp
pushf
movl
pushf
movb
pushf
mov
lea
jmp
movl
call
push
movl
mov
movl
pushl
pushl
lea
jmp
movl
pushl
pushl
pushf
push
lea
jmp
xor
lcall
movsl
jp
push
mov
pop
mov
fnstenv
inc
inc
sub
xor
cli
pop
cmp
add
jbe
sub
stos
jge
adc
repnz
pop
mov
add
nop
inc
mov
push
ret
scas
psubw
mov
xchg
nop
cmp
pop
repnz
lods
xchg
into
and
nop
adc
les
test
add
adc
and
sbb
sub
pop
adc
sbb
orb
mov
or
jbe
sbbb
lock
sbb
subb
mov
push
mov
out
mov
jle
push
xchg
xchg
push
gs
imul
add
testl
inc
in
lahf
pushf
lds
xor
ret
pop
call
fchs
ljmp
inc
mov
jnp
inc
mov
add
jge
cmp
dec
mov
call
out
pop
in
dec
and
fiadds
and
pop
add
and
mov
dec
add
pop
cmp
imul
ficoms
inc
out
jne
enter
lret
inc
add
push
push
jle
or
mov
mov
test
cmp
jbe
cwtl
in
adc
mov
test
rcll
les
mov
insb
cmp
mov
jecxz
sub
adc
cli
fstpl
dec
lret
cmp
pop
dec
inc
loopne
pop
icebp
es
add
movsl
ljmp
lret
push
cmpl
les
cmc
fbld
fisttpl
neg
out
das
cld
sahf
cmp
std
and
jno
pop
mov
sbb
push
sahf
inc
add
sahf
xchg
or
mov
push
cmp
sti
mov
ljmp
idivl
adc
or
and
pop
jg
leave
ljmp
in
and
outsl
xchg
xor
sub
jno
and
lock
fdivs
push
sub
mov
fbstp
enter
mov
cmp
pop
mov
and
or
mov
push
iret
loopne
leave
mov
aas
push
cmp
inc
loope
xorl
mov
cmp
mov
mov
lcall
pop
or
push
inc
scas
pushf
sbb
add
scas
mov
leave
inc
test
sbbl
and
and
dec
xor
and
fisttps
dec
cltd
pop
mov
movsb
cmp
inc
inc
cmp
mov
sbb
cltd
mov
add
push
imul
mov
or
ret
test
xchg
outsb
daa
lcall
cltd
xchg
fstps
jno
movsl
nop
xor
enter
dec
dec
aad
ss
sbb
pushf
inc
mov
insb
mov
aas
imul
inc
ret
sub
lret
gs
out
imul
mov
addb
dec
into
imul
jle
aam
daa
mov
aam
mov
sbb
adc
movsl
fs
stc
xchg
ja
xor
push
out
sahf
mov
jmp
inc
sbb
rorl
retw
std
push
add
dec
push
mov
pop
arpl
stos
and
sahf
imul
cltd
mov
mov
shlb
fiadds
jne
data16
arpl
bnd
ficoms
out
mov
into
or
stc
leave
sbb
sbb
push
or
pushf
decl
rorb
fildll
test
mov
dec
sti
aas
jle
jge
mov
popa
ss
ljmp
sbb
lods
out
and
ret
cld
pop
cmp
outsl
les
leave
sbb
xchg
in
cmp
xchg
pop
cmc
sub
aaa
movsl
subl
inc
jmp
call
cmc
js
and
jb
addr16
pop
les
cmc
leave
adc
dec
mov
pop
mov
push
mov
jae
push
jmp
cld
ret
dec
xchg
movsl
icebp
fisttpll
mov
jne
les
dec
imul
das
push
lds
insl
pop
stc
add
mov
jecxz
in
loop
mov
mov
filds
or
into
rol
push
push
fdivr
ficoms
std
fnstsw
rclb
stos
sbb
fimuls
mov
ss
inc
and
shll
or
sub
cwtl
imul
pop
jp
xchg
sbb
sub
sub
jnp
and
icebp
stos
or
jne
iret
orb
and
xor
dec
test
movd
dec
test
fdivs
dec
int
push
adc
jg
in
ret
push
in
pop
cs
les
pop
push
ficoms
sub
call
mov
lods
or
inc
jle
aad
ja
and
scas
sub
pop
mov
clc
pop
orb
outsb
xchg
sub
shrb
fcomps
or
mov
aaa
push
jg,pn
jno
jns
out
ss
inc
test
mov
cwtl
xor
cmp
mov
insb
jmp
push
inc
pusha
mov
pop
push
sub
fcoms
pop
jmp
int3
or
mov
sti
or
aad
sbb
ret
mov
mov
xor
arpl
jmp
dec
jns
sahf
sbb
jmp
inc
arpl
xor
psrlq
push
hlt
mov
cmp
and
arpl
aas
fcompl
jecxz
mov
mov
jnp
mov
mov
inc
out
pop
divb
cmpsb
push
scas
out
mov
testl
sub
pop
xorl
sbb
pop
pop
into
jbe
sarl
movsb
pop
test
adc
push
jbe
dec
mov
rcr
sbb
xchg
cmpsl
orl
faddl
mov
adc
adc
and
mov
in
scas
push
mov
mov
add
stos
sbb
and
xchg
cmc
sbb
js
inc
pop
out
jecxz
das
pushf
ret
cmc
xchg
loopne
and
adc
enter
lods
adc
cmp
adc
arpl
jne
test
fadd
rcrb
insl
jge
xchg
out
jns
fidivl
xchg
popa
add
mov
push
xor
hlt
mov
mov
cmc
pop
lret
xchg
mov
repz
xchg
add
sbb
lcall
test
inc
loopne
rep
mov
ds
scas
int3
push
dec
jg
popa
fcmovu
dec
xor
mov
xor
test
xchg
filds
lock
xor
or
dec
enter
or
call
xor
jbe
loope
je
addr16
mov
cmc
insb
hlt
outsl
pop
cmp
cmp
lahf
movsb
dec
stc
hlt
dec
mov
xor
call
push
pusha
mov
inc
clc
sar
movzbw
movw
shl
cmc
stc
pusha
or
jmp
call
pushl
jmp
outsl
xchg
mov
jnp
ljmp
popf
arpl
jae
xor
xorb
and
xor
sub
sub
pop
leave
jecxz
fdivrs
shll
fdivl
xchg
mov
or
ljmp
scas
pusha
xchg
mov
xchg
mov
mov
mov
xor
ret
xor
mov
dec
lret
mov
xor
call
push
movl
movl
pusha
pusha
push
movb
movl
mov
pushl
pushf
pushl
lea
jmp
mov
mov
clc
stc
add
call
inc
jmp
cmc
add
or
stc
rcl
and
mov
bt
add
jmp
jmp
movl
pushf
pushl
pushl
lea
jmp
push
pushf
movl
push
pushf
mov
lea
jmp
mov
scas
sbbw
push
int
stc
inc
pusha
nop
popl
repz
mov
sub
push
mov
adc
cmp
jp
roll
xor
jl
adc
xchg
rcrb
inc
mov
cmpb
cmp
ds
xchg
jmp
pushf
aaa
fdivs
es
nop
mov
nop
xchg
inc
shll
mov
jbe
mov
ss
int3
sbb
out
xor
mov
stos
adc
mov
mov
push
mov
int3
sub
aas
sub
dec
adc
in
iret
cmpl
out
into
and
pop
sub
or
xchg
lea
mov
test
pop
leave
aad
fndisi(8087
fmull
sub
mov
shlb
add
xchg
xchg
pop
scas
add
shrd
clc
adc
movzbl
sub
rcl
mov
neg
btr
or
shr
btr
shrd
movzbw
lea
call
pushf
lea
jle
bts
btc
pop
cmc
shld
pop
xadd
movsbw
cmp
ror
pop
shl
bswap
adc
pop
test
jmp
adc
outsl
lods
int
xor
mov
mov
pop
das
dec
leave
cmp
inc
pop
mov
pop
mov
mov
mov
adc
cmp
cmpsb
adcl
inc
lods
rolb
sti
push
lock
mov
adc
and
jmp
jle
push
push
sbb
aaa
add
fdivs
adc
and
push
or
scas
jno
jnp
repz
and
shrb
adc
dec
fists
xorb
fwait
push
jge
inc
mov
rcrb
icebp
insl
xor
push
mov
notb
adc
add
push
add
inc
out
mov
cmp
jmp
sub
aas
mov
nop
cmpsb
fiaddl
and
sbb
cld
aam
stc
push
xor
repnz
pop
lods
repnz
mov
clc
mov
bound
inc
sarl
stc
jmp
pop
fnsave
movsl
pmuludq
cs
add
or
mov
xor
js
mov
in
dec
movsl
xor
pop
lock
pop
jo
or
mov
ljmp
ret
or
mov
mov
mov
scas
stos
sahf
sub
mov
jne
sbb
mov
loope
arpl
mov
lahf
mov
mov
hlt
xchg
sbb
xchg
sbb
fldl2t
add
ret
cmpsl
dec
xchg
std
or
push
ror
in
adc
push
in
adc
jbe
in
fstpl
dec
push
addr16
adc
aaa
pop
fnstenv
mov
or
adc
xor
pop
imul
or
mov
cmp
fwait
imul
push
pop
sbb
pop
cmp
push
sahf
xchg
scas
push
imul
sti
push
ljmp
jl
cmp
push
inc
dec
nop
jae
jmp
lock
xchg
and
aaa
es
mov
cmp
and
fildl
xor
mov
xchg
test
fiaddl
push
aaa
jmp
ljmp
lods
jg
test
sarb
incl
stos
stos
mov
test
jb
mov
pop
jecxz
loope
mov
xchg
shll
out
push
and
push
sarb
xor
pushf
or
imul
in
in
adc
stos
mov
movsl
rcll
fnstenv
or
stc
shll
cltd
popa
mov
ret
insl
jne
mov
in
sub
sahf
jle
jmp
push
cmp
push
daa
and
icebp
xor
lret
test
mov
sbb
imul
ret
inc
cmp
dec
cmpsl
jno
stc
xchg
cli
mov
stc
xlat
roll
pop
cmpsl
jge
sub
push
mov
cmpsl
push
mov
inc
pop
push
outsl
pcmpeqb
stos
lds
mov
xchg
daa
jmp
outsb
and
inc
xchg
mov
sarb
loop
jp
loope
push
lods
aaa
insb
pop
xchg
or
cli
and
mov
push
dec
icebp
push
jl
popf
push
push
jne
xchg
scas
dec
das
mov
lock
sti
movsb
xor
xchg
sti
stc
xor
repz
cmp
stc
mov
jns
adc
pop
arpl
or
adc
inc
cmp
aad
movsb
cld
cmp
shr
push
jns
jge
push
sub
ljmp
aam
test
pop
loope
sub
bound
and
popl
dec
inc
adc
sbb
leave
cltd
test
arpl
pop
jo
ficomps
xchg
jo
sbb
xchg
mov
enter
xor
call
testb
adc
les
icebp
int
rorb
mov
xchg
loopne
adc
aas
dec
xor
sarl
sub
ret
imul
sub
rcrl
mov
insl
adc
test
inc
inc
out
test
mov
in
addl
sub
cmp
fs
fcomps
daa
jle
cmpsb
pop
xlat
cmp
insb
scas
inc
jns
push
sbb
and
cs
pushf
pop
cmp
lods
push
scas
pushf
inc
fistpll
call
rcrb
rcl
mov
nop
inc
push
sbb
mov
pop
jmp
xchg
int3
out
movsl
bnd
ss
adc
push
adc
and
push
or
aad
mov
sub
into
push
movsb
dec
clts
ret
push
test
xchg
repz
adc
pop
dec
jbe
push
xor
out
adc
movsl
outsb
dec
adc
adc
mov
repz
xorb
and
fdivrp
stos
fcmovnu
jmp
popf
mov
jecxz
or
xor
out
lea
mov
mov
jb
lret
or
shrb
ja
js
xor
in
lods
xchg
push
data16
stos
and
loopne
sbb
adc
xchg
adcb
cmp
push
mov
jne
add
pop
mov
xchg
xorb
cld
xchg
icebp
push
cwtl
ss
movsl
inc
lds
or
or
lret
and
ds
int
gs
ds
mov
jo
stos
lds
cmp
pop
imul
test
xor
out
xchg
push
xor
pop
mov
jl
sbb
movsb
jecxz
xchg
lcall
push
icebp
dec
mov
add
add
sahf
out
sbb
inc
pop
dec
pusha
xchg
xorl
add
cmp
in
jmp
mov
mov
xchg
sbbb
fs
mov
jmp
cmp
xor
cmc
stc
pushf
shr
call
sbb
filds
mov
xor
cmp
lahf
mov
and
mov
pusha
or
in
inc
pop
subl
jge
or
rol
neg
ds
mov
sti
cwtl
mov
jmp
add
mov
mov
pop
sub
mov
movb
test
adc
mov
pop
ss
ds
int3
push
fmuls
stc
cmpsb
adc
or
pop
lock
xor
pop
cmp
jne
fcomps
mov
sbb
fbld
lds
test
imul
push
sub
push
push
outsl
or
nop
cs
pop
mov
fwait
jbe
pushl
lcall
pop
dec
xchg
fcomps
cmc
push
lods
adc
scas
ja
lock
addr16
jo
cmpsl
pop
and
cmc
and
add
cs
adc
shlb
jne
stos
xor
cmp
movsb
stos
mov
cmp
ret
sbb
dec
out
std
sti
pop
xor
xchg
sub
jo
loopne
add
dec
popf
or
clc
and
push
mov
cmp
dec
stos
inc
xor
mov
jl
xlat
outsl
mov
and
pop
out
or
bound
inc
jo
sub
or
xchg
fs
mov
out
push
daa
out
mov
in
adc
hlt
adc
loop
das
insb
pop
xor
stos
adc
out
add
mov
test
adc
jl
mov
jmp
jge
cmp
mov
sub
push
mov
sbbl
pop
push
data16
sbb
gs
lcall
testl
xchg
ret
les
enter
fwait
lret
lret
repnz
rcll
cmc
pop
scas
inc
out
scas
inc
nop
xlat
or
mov
or
sbb
mov
push
mov
gs
push
add
xor
add
movsl
loop
das
add
mov
mov
jnp
dec
cwtl
iret
bound
xchg
jo
jge
inc
push
inc
mov
filds
mov
xchg
sub
shlb
inc
push
and
or
jg
pop
aaa
xchg
out
or
scas
mov
lret
lahf
jns
aas
not
cld
sbb
ror
jo
or
pop
dec
pop
or
and
xchg
lds
jns
adc
inc
sub
add
add
cmp
adcl
mov
jg
mov
push
daa
jb
cmp
or
mov
fdivl
or
frstor
pop
jl
mov
inc
fdivl
dec
jmp
scas
icebp
dec
cmpxchg
imul
dec
mov
sti
jbe
enter
pop
cmp
sbb
jg
xor
addr16
mov
adc
mov
xor
outsb
shll
fnstsw
xchg
sbb
cli
pop
or
cmp
jl
cltd
push
or
or
sahf
andl
push
mov
sbb
out
mov
inc
sbb
xchg
out
int3
scas
mov
sti
push
sub
in
and
sbbl
xchg
jle
sbb
test
sti
mov
push
pop
jecxz
lods
shl
and
sbb
inc
inc
adc
fsub
iret
mov
lock
iret
push
mov
xchg
jl
pushf
in
xchg
mov
mov
mov
jecxz
xchg
jl
cmpsb
movsb
pushf
movsl
mov
add
addr16
ljmp
jle
mov
or
mov
xor
inc
sub
xchg
jnp
fwait
mov
in
and
sbbb
adc
rorl
jge
push
psrld
and
and
loopne
lea
adc
in
ficomps
shrb
inc
cmpsl
rorl
xchg
jnp
xchg
mov
push
sti
push
cmp
roll
mov
jne
fldenv
xor
setg
incl
jmp
cmpsl
xchg
cmp
sub
jg
add
lret
push
das
leave
bound
ret
loopne
sarl
std
lods
cmp
mov
je
rcll
addr16
imul
imul
inc
cmp
inc
cwtl
mov
das
dec
and
add
scas
in
cwtl
jg
fidivrs
and
and
xlat
jo
lods
daa
dec
inc
rcrl
icebp
mov
mov
inc
roll
imul
xchg
pusha
repz
fnstsw
roll
imul
repnz
aaa
jne
and
int
sbb
outsb
stos
ja
ja
fs
and
movsl
addr16
fildl
mov
xor
fistpl
addw
ret
loope
mov
push
xor
mov
pop
je
pop
aad
outsl
dec
cmpsl
in
repnz
xor
stos
addr16
icebp
stos
in
mov
mov
repnz
js
insl
int3
fidivrl
das
lea
stos
add
mov
repnz
push
test
fidivrl
repnz
int
lahf
ret
xor
fs
pop
leave
mov
repz
or
stos
fsts
aad
push
or
pop
movsb
std
or
mov
and
sbb
xchg
insb
repz
shr
cmp
pop
cmp
cmp
subb
jae
repz
daa
ds
cmc
mov
gs
mov
int
xor
adc
rolb
xor
jge
repnz
addb
outsl
filds
dec
xchg
dec
inc
popa
lahf
aad
mov
iret
pop
aaa
les
lock
mov
push
dec
push
cmp
sub
xor
lret
scas
ds
notl
jp
dec
imul
xor
out
pushf
xchg
ds
adc
icebp
inc
sub
xchg
into
or
dec
add
roll
cmp
in
inc
mov
xchg
js
imul
pushf
xchg
cmp
addr16
fmulp
scas
fisubl
rcll
xchg
xor
xor
jbe
lds
sbbb
mov
ds
and
hlt
push
jno
scas
mov
dec
mov
nop
xor
ljmp
test
sub
shrb
shl
push
jl
mov
addr16
mov
adc
jg
loope
push
xorb
xor
sub
inc
xor
imul
jns
cmp
push
push
jmp
adc
mov
test
lods
fiaddl
pop
repnz
js
cmp
cmp
add
mov
add
and
inc
fstpl
out
rorb
cli
insb
cmp
fnstenv
shrl
mov
push
daa
add
pop
rorb
out
cld
or
pop
xor
or
xchg
jno
sub
in
cs
inc
orl
mov
pop
popf
and
aam
mov
add
sbb
scas
mov
or
sub
ret
xor
xchg
gs
or
cmp
fsubrl
sbbb
ja
subl
cwtl
test
pop
jl
jno
inc
push
mov
arpl
loop
rorl
and
in
pop
add
add
fwait
xchg
imul
sbb
dec
sub
mov
gs
dec
rcll
ss
stc
aam
xchg
in
sub
sub
sub
push
andl
lret
dec
jg
mov
jge
rcll
push
aam
push
cmp
push
nop
repnz
mov
fildl
xchg
jecxz
mov
dec
sbb
stos
sub
mov
mov
and
cmp
or
mov
mov
adc
dec
mov
push
adc
int
fsubr
mov
jmp
popf
xor
insl
pop
pop
add
fwait
insl
test
pop
push
sub
andl
add
mov
call
fmuls
inc
out
xor
mov
insb
sub
imul
paddsw
adc
out
addr16
imul
jl
sbb
pusha
pusha
insl
outsl
mov
mov
sti
push
and
jbe
cmp
inc
enter
shl
sahf
pop
jl
mov
inc
push
fstpl
adc
fwait
pop
sbbb
outsb
or
mov
push
scas
idiv
inc
lds
mov
nop
loopne
add
fwait
cmp
pop
pop
mov
rcll
pop
cmp
pop
jp
pop
mov
mov
fcoml
mov
push
push
push
mov
and
inc
cmpsb
sbb
cs
jl
pop
xor
push
cmpsb
mov
pop
dec
jo
pop
lret
jmp
lods
mov
jb
cmpsb
jecxz
bound
shlb
cli
sbb
leavew
xchg
je
push
and
inc
sub
in
jae
les
pop
push
fdivl
push
jae
mov
xchg
ret
divl
xchg
je
pop
cltd
faddp
adc
loope
das
or
stc
jp
arpl
sbb
xor
int3
inc
push
ljmp
testl
adc
repz
jge
lds
xchg
pop
insb
in
pop
mov
les
mov
sub
xchg
jne
bound
out
aad
inc
imul
pop
dec
mov
add
xchg
mov
das
fldenv
mov
mov
or
or
insb
jg
fisttpl
sub
jae
push
xor
jmp
mov
cmp
cmc
bt
pushf
shr
cmp
jmp
lods
fwait
pushf
inc
mov
flds
call
sub
pop
adc
jnp
in
je
sbb
movsl
loope
pop
add
lds
cmc
adc
sub
and
fsubl
das
xchg
std
loopne
adc
inc
lahf
nop
sub
xchg
jbe
push
sti
fcomps
dec
addr16
insl
mov
xchg
clc
fsubr
xchg
dec
push
or
jae
gs
loop
and
out
scas
inc
inc
fisttpll
lcall
inc
addr16
xorb
inc
mov
jae
ds
xchg
pop
mov
out
mov
push
clc
hlt
jg
fmull
cmp
ret
xchg
repnz
mov
xchg
jae
and
stos
into
inc
jge
pop
or
js
ds
inc
loop
bound
xorb
je
fidivs
out
and
xchg
out
pop
push
lock
sub
xchg
jae
outsl
jo
jecxz
xor
rorl
sahf
js
pusha
sub
dec
cli
inc
and
xchg
je
in
out
mov
mov
rep
je
pushf
idiv
sbb
pushf
push
js
stos
subl
pop
jno
and
mov
lahf
sbb
sahf
xchg
sbb
mov
cmpb
push
xchg
lahf
pusha
pop
insb
cli
lahf
lods
popa
cmp
stos
sub
out
cltd
jnp
aam
xchg
jnp
xchg
gs
lds
pop
ret
notb
insl
dec
xchg
pop
outsb
lret
cli
cli
pop
fbstp
outsl
dec
ficoms
sub
mov
in
ja
iret
dec
aam
and
divb
shlb
sub
xchg
testl
dec
mov
test
test
cltd
adc
lret
aaa
in
leave
or
fwait
insl
inc
imul
movsl
inc
xor
and
push
mov
outsl
add
rcl
movsl
std
ret
jo
adc
mov
pop
rcl
mov
push
pop
xor
mov
xchg
push
sti
push
mov
lcall
sbb
lahf
outsb
pop
insb
pop
movsb
add
pop
dec
inc
std
stos
cmp
test
push
jp
addr16
mov
or
dec
mov
mov
mov
gs
cld
orl
add
mov
rcrb
mov
cld
iret
pop
inc
das
lret
std
and
mov
out
icebp
push
outsl
ret
jle
inc
add
mov
cmp
loope
mov
out
add
sbb
pop
xor
jmp
pop
push
inc
or
movsb
mov
in
xchg
sub
mov
ret
adc
xchg
sub
out
jmp
out
mov
and
mov
xor
aas
fwait
es
cli
outsb
inc
es
cmp
xor
lret
and
push
add
or
enter
das
int
sbb
xchg
jb
int
pushl
xor
clc
mov
sub
mov
movb
stc
add
call
movl
pusha
movw
movw
lea
jmp
in
mov
cld
jmp
inc
jne
imul
mov
loopne
xchg
fldl
cwtl
or
mov
shlb
dec
les
in
pop
lock
xchg
lock
scas
stos
pop
ja
out
aam
outsl
cltd
cmp
popf
mov
clc
dec
sub
iret
aas
ja
add
sub
inc
mov
xorl
xor
jne
xor
ret
sarb
dec
imul
loopne
adcl
xor
sub
pop
mov
or
data16
fnstsw
lcall
jns
cmpsl
ret
jl
mov
testl
psubsb
jle
pushf
cmp
fincstp
orl
xchg
mov
sub
dec
mov
clc
inc
pop
rorb
sub
dec
shlb
adc
gs
mov
stos
xchg
icebp
mov
out
pop
std
mov
mov
cmp
xchg
sti
pop
inc
pusha
pop
xchg
jge
xchg
xor
adc
push
jns
push
aaa
loop
int3
mov
xchg
cmp
pop
data16
mov
push
pop
rclb
mov
shll
mov
sarl
scas
or
mov
xchg
and
jp,pn
cmp
jno
loopne
mov
xchg
pop
iret
imul
and
fdivl
stos
dec
out
mov
jl
insb
or
mov
cli
icebp
xor
and
cmpsb
and
mov
imul
lds
inc
lds
mov
sahf
add
add
xor
lods
xlat
xor
ret
pop
sub
je
sbb
test
lock
xchg
mov
subl
sarb
dec
insl
cmp
cmc
mov
je
dec
testb
inc
out
adc
rcr
mov
rorl
cmp
push
stc
inc
mov
adc
test
cmpl
fs
pop
mov
arpl
sar
push
pop
sahf
lods
stos
jbe
sahf
ljmp
mov
adc
xor
jmp
inc
movsl
jmp
ss
inc
xchg
push
lods
and
push
or
xchg
imul
adc
aam
ljmp
out
pop
je
lcall
testl
negl
int
xor
push
inc
and
push
imul
xchg
addr16
push
mov
pop
fucomip
push
xchg
das
xchg
test
dec
mov
sub
insb
jno
push
xchg
jo
or
bound
leave
rcl
es
push
lret
xchg
outsl
dec
test
ljmp
sti
repz
and
xchg
outsl
dec
pop
cmp
inc
jle
pushf
ja
sbb
adc
xorb
and
cmpsb
xor
inc
mov
stos
mov
insb
cmp
stos
pop
dec
fsubs
push
mulb
fnstsw
lahf
xor
ret
cltd
jl
pop
dec
sahf
xor
pop
iret
dec
andl
std
repz
jae
repnz
xchg
outsb
lea
fs
ror
or
mov
sbb
mov
inc
neg
shr
setb
btr
btr
movzbw
add
movsbl
btr
jnp
daa
mov
btc
xor
pusha
and
add
shld
xor
neg
xor
mov
push
shr
jmp
adc
sub
pop
pop
pop
xor
jl
jecxz
pop
push
add
pop
mov
push
cmp
ret
mov
rcrl
imul
test
out
stc
movsb
lds
add
xor
or
sub
outsb
xlat
ja
ss
push
jp
imul
add
mov
jbe
mov
sbb
pop
mov
xor
add
out
int3
cmp
inc
mov
movsl
add
lcall
lds
ret
mov
mov
test
xor
add
cmp
test
jg
dec
inc
sar
jnp
inc
adc
in
or
or
sub
out
daa
shlb
jnp
adc
lret
loop
inc
ljmp
sahf
inc
xor
shlb
dec
mov
in
inc
rep
popf
push
imul
dec
xor
adc
mov
push
lcall
mov
xchg
insl
ret
subl
dec
lahf
iret
scas
fisubrl
mov
mov
mov
mov
push
mov
jecxz
std
lret
orb
lock
xor
mov
fsubr
test
or
add
daa
inc
cmp
sub
aaa
dec
xchg
mov
mov
das
mov
pop
pop
aas
xchg
cwtl
ss
jno
jbe
cmp
adcb
aaa
adc
inc
icebp
or
push
xor
nop
pop
and
pop
insl
lret
lret
outsl
and
iret
sub
rclb
xchg
int3
mov
mov
xchg
aad
insb
mov
cmc
aaa
inc
pop
sbb
sbb
in
xchg
hlt
aaa
sbb
push
in
push
shlb
jmp
push
in
push
filds
cs
mov
add
shrl
mov
mov
xor
add
add
ficomps
and
cld
inc
sub
ror
in
xor
lods
pop
pop
or
mov
push
dec
cmpsl
xor
cmp
xor
xchg
mov
xchg
rcl
xchg
scas
pushf
adc
add
sahf
push
mov
push
sub
inc
and
movb
lahf
pushl
call
call
cmc
mov
or
sar
add
jmp
jmp
mov
mov
dec
cmc
movb
clc
mov
bt
bt
sub
sub
jge
pusha
sub
test
bt
pusha
call
mov
pop
mov
inc
jl
outsb
cmc
es
jge
scas
push
ret
sub
jmp
xor
dec
push
cwtl
into
or
sub
out
arpl
or
std
add
jl
xor
aaa
out
jp
int
pop
pop
mov
movsb
mov
pop
repnz
xchg
push
xchg
mov
movl
pusha
lea
jp
pushf
movl
pusha
pushf
lea
jmp
sti
ljmp
jne
dec
jl
repz
loope
sbb
sbb
jp
aaa
pushf
inc
int3
ret
popa
aad
inc
xchg
inc
pop
dec
push
ret
mov
or
mov
lock
iret
cmp
xor
loope
and
mov
xchg
xchg
mov
adc
adc
ret
push
mov
bound
cwtl
aas
xorb
les
xor
out
push
fs
push
out
cs
mov
inc
int3
inc
cmp
mov
in
push
insb
mov
push
cs
andl
jmp
fnsave
pop
cmp
jmp
mulb
mov
ljmp
test
inc
loopne
cli
or
add
sub
mov
dec
mov
ss
jb
enter
lea
or
or
cmpsb
out
push
insl
mov
cs
outsb
sbb
inc
or
sbb
xor
lods
ljmp
orl
std
outsb
in
addr16
inc
mov
in
cld
es
cli
sub
xor
in
push
nop
dec
sub
or
jbe
cmpsb
jl
scas
nop
xchg
mov
fcomps
cltd
or
sub
loope
fwait
movsl
and
pop
fwait
lcall
or
daa
add
inc
pushf
ret
dec
dec
filds
movsb
jp
xchg
lea
push
dec
cld
mov
pop
and
push
lret
loope
cmp
repz
adc
xchg
outsb
mov
adc
mov
xchg
fstl
or
stc
roll
test
insl
mov
inc
sbb
cwtl
add
jo
out
orl
mov
mov
loope
xlat
cmp
push
pop
xor
loop
mov
fldl
enter
loop
mov
test
pop
jp
dec
daa
test
test
add
rolb
imul
fldt
sub
cmp
jp
outsl
shll
stos
cmp
imul
push
je
cmp
xor
mov
in
xchg
push
xchg
push
pushf
inc
inc
jno
push
ret
arpl
sub
xchg
push
cmp
ljmp
jns
sti
std
inc
out
xor
aad
push
movsb
and
icebp
mov
and
push
lahf
bt
out
add
xchg
push
ljmp
popf
cs
in
cmp
xchg
jge
jp
xchg
sar
or
and
push
push
outsl
mov
mov
testb
popl
fs
dec
xchg
movb
cmp
clc
popf
enter
addr16
gs
jo
xchg
mov
addr16
pushf
loope
clc
mull
or
clc
out
cmp
dec
and
pop
loop
or
icebp
pop
shl
popf
lea
mov
es
loop
or
push
fwait
outsl
out
nop
mov
jns
mov
loopne
pop
cmp
aaa
push
push
test
sahf
xchg
popa
adcb
popa
jmp
sub
movsb
sbb
cmp
jp
mov
xchg
ss
aas
adc
jns
push
inc
adc
mov
iret
and
fbld
and
inc
push
mov
andl
fdivrl
shrb
mov
pop
sti
push
sub
test
stos
nop
lahf
sub
mov
pop
and
mov
xchg
mov
and
imul
xor
cmpsl
or
out
repnz
pop
loope
pop
aad
inc
dec
sti
shll
add
negl
jbe
mov
adc
arpl
adc
repnz
sub
jle
sbb
fimull
cmpsl
dec
jbe
inc
sbb
mov
int
mov
mov
sbb
scas
dec
push
sub
insb
mov
lods
subl
popf
push
add
fwait
js
mov
sbb
aas
or
mov
adc
adc
das
scas
xor
shll
xor
mov
xchg
shll
dec
fimull
sbb
repz
mov
xchg
cmp
xchg
jmp
jmp
jb
cli
sub
fildl
inc
mov
push
inc
test
ficomps
in
dec
stos
inc
jle
fsubrp
cmp
neg
dec
sub
push
xor
fstpl
mov
mov
and
push
push
dec
lret
fcmovnbe
sahf
cmp
sbb
repnz
add
cmp
jmp
and
jp
pop
adc
mov
es
daa
shll
xchg
addr16
out
xchg
mov
mov
push
lds
lret
sub
outsl
cmp
outsl
nop
inc
fdivrl
aad
cltd
in
jae
mov
push
lcall
scas
add
inc
push
xor
xchg
je
fs
xlat
ja
pop
jne
cmc
in
cli
bound
xlat
pushf
jb
imul
push
jae
pop
mov
and
inc
fistps
xor
push
imul
adc
movsb
sub
inc
sbb
adcb
nop
jecxz
xchg
gs
pop
repz
push
insl
stc
dec
xchg
test
stos
ljmp
pop
push
outsb
pop
lahf
icebp
cmp
xor
lods
jb
lods
data16
or
mov
xor
test
jae
inc
xor
inc
lcall
repz
add
xor
add
xor
insl
xchg
clc
xor
js
pop
sub
pop
jg
mov
cld
out
fiaddl
mov
pop
insl
adc
or
cmp
jle
addb
gs
mov
out
dec
fsubrl
or
adc
icebp
sub
pop
lahf
mov
lret
movsb
mov
cmp
stos
xchg
lea
out
jbe
fldcw
mov
mov
fs
in
ret
mov
xchg
insb
pop
jns
repz
add
jno
mov
jb
in
dec
mov
mov
scas
and
fs
cmp
adc
inc
test
jns
test
mov
jnp
jmp
and
sarl
js
hlt
inc
xchg
add
inc
insb
insb
outsl
arpl
clc
clc
add
pushl
jmp
add
inc
js
je
imul
js
movb
pushf
push
lea
jbe
or
clc
not
mov
sar
shl
shld
add
shld
sub
bswap
mov
bsf
shl
add
rcl
movl
adc
movzbw
sbb
bt
mov
pushf
jmp
add
push
gs
imul
outsb
addr16
add
xchg
lods
in
in
les
sbb
data16
mov
push
add
or
popf
in
xor
dec
cld
add
in
mov
lods
frstor
shrl
mov
sar
hlt
mov
loope
xchg
push
cmp
dec
aad
dec
stos
movsb
or
push
or
loopne
scas
xor
add
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
ja
jo
imul
add
ja
gs
inc
add
add
fs
imul
cmp
add
cmp
adc
outsb
test
adc
fs
adc
leave
pop
adc
dec
jne
add
adc
fistpll
adc
cmpsb
popa
adc
fistpl
adc
fnstcw
adc
sbbb
adc
adc
fildll
adc
pop
xchg
adc
gs
adc
sahf
jne
add
adc
lds
add
mov
add
adc
imulb
add
adc
or
add
mov
adc
fmuls
add
sahf
adc
pop
pop
adc
fidivl
add
adc
mov
add
adc
mov
adc
jns
adc
push
adc
ljmp
add
pop
adc
insl
mov
add
adc
or
add
lods
adc
mov
adc
test
adc
ss
add
pop
adc
mov
adc
lea
adc
and
lea
add
adc
mov
mov
adc
insl
xchg
adc
xchg
add
mov
add
movsl
adc
inc
lea
add
pop
adc
hlt
jne
add
mov
add
adc
test
adc
jp
adc
add
add
nop
adc
popf
mov
add
adc
mov
add
lods
adc
mov
adc
xchg
pop
adc
bound
add
test
adc
fistpl
add
outsl
adc
mov
adc
aas
pop
adc
push
push
adc
lds
add
test
adc
mov
add
pop
adc
in
adc
push
xchg
add
adc
mov
add
pop
adc
xor
adc
jge
adc
mov
add
pop
adc
jmp
adc
cltd
pop
adc
cmp
adc
jnp
adc
lods
jne
add
arpl
add
adc
imul
adc
dec
push
adc
mov
mov
adc
fcomps
add
add
add
push
add
push
adc
movb
add
pop
adc
or
add
adc
xor
adc
iret
cmpsb
adc
sbb
mov
add
mov
adc
lea
add
imul
add
nop
adc
mov
adc
ret
add
mov
adc
inc
pop
adc
pop
adc
mov
cwtl
adc
xchg
adc
fldenv
add
mov
add
adc
xchg
add
lea
add
adc
mov
test
adc
mov
lods
adc
dec
adcb
sub
add
adc
dec
pop
adc
adc
adc
or
adc
sub
insl
adc
popf
insb
adc
movsl
adc
dec
mov
add
push
adc
xor
adc
stc
jo
add
mov
adc
leave
adcl
add
lahf
adc
mulb
add
nop
adc
gs
add
mov
add
mov
add
jne
add
popa
adc
add
push
adc
jbe,pn
add
adc
out
adc
cwtl
xchg
adc
out
adc
repz
adc
jo
adc
xchg
add
imul
add
adc
dec
mov
adc
xchg
mov
add
outsl
adc
push
push
adc
les
add
adc
cmpsb
xchg
adc
adc
leave
pop
adc
daa
xchg
add
adc
cmpsb
pushf
adc
and
mov
add
cltd
adc
pop
movsl
adc
daa
xchg
adc
sbb
add
xchg
add
ja
add
adc
mov
adc
int
adc
add
add
aaa
jne
add
lea
add
adc
xchg
pushf
adc
fsubl
add
adc
mov
adc
test
adc
lahf
jo
add
adc
daa
pop
adc
cmp
adc
daa
adcb
les
adc
or
add
adc
sahf
pop
adc
sbb
mov
add
add
add
cmpsl
adc
jae
adc
add
add
mov
push
adc
jo
adc
add
add
xchg
pop
adc
pop
js
add
adc
pop
mov
add
arpl
add
add
add
add
addb
add
in
xchg
adc
cmc
outsb
adc
rcrl
je
adc
pop
je
add
adc
and
adc
xchg
sahf
adc
xor
add
push
add
sbb
add
add
add
adc
add
add
cmp
add
add
mov
add
mov
add
xchg
adc
fcomps
add
insb
adc
and
add
insb
adc
jp
adc
mov
adc
test
adc
aad
adc
dec
pop
adc
or
adc
sti
pop
adc
fnstcw
adc
cmpsb
popa
adc
mov
add
stos
adc
cltd
pop
adc
pop
jne
add
mov
add
pop
adc
popf
adc
mov
movsb
adc
add
add
mov
add
lods
adc
shrl
add
pop
adc
outsl
insb
adc
imul
adc
fildll
adc
test
adc
or
add
adc
mov
adc
and
add
mov
add
adc
jmp
adc
lods
bound
add
adc
push
mov
add
pop
adc
pop
xchg
adc
sahf
jne
add
bound
add
adc
jno
adc
lret
add
adc
dec
jne
add
adc
add
add
popa
adc
add
add
dec
pop
adc
jp
adc
add
add
mov
add
sahf
adc
add
imul
outsl
jne
arpl
add
dec
insl
popa
addr16
imul
je
outsl
jns
add
inc
fs
jae
push
outsl
imul
jb
jbe
insb
gs
add
inc
jb
popa
je
push
outsl
outsl
insb
push
xor
popa
jo
push
add
je
jne
jae
jb
outsl
jae
mov
out
lret
xor
lds
lods
lods
inc
jp
jb
inc
cmp
sub
fildl
fldcw
flds
loop
mov
std
mov
jbe
pop
jg
jo
sbb
std
je
push
fnstenv
or
sbb
or
cmpsl
jae
fisubrl
and
jnp
push
or
mov
outsl
repz
xor
jp
pop
movsb
sbb
xchg
clc
sub
push
jo
int
cmp
movb
test
xchg
xor
shrl
mov
out
dec
stos
in
jmp
testb
loope
jo
xchg
dec
outsl
mov
sub
pop
push
add
push
add
add
dec
outsl
arpl
inc
jb
add
add
je
insb
imul
add
je
imul
js
dec
outsb
addr16
inc
add
jmp
cmp
dec
mov
jb
adc
jo
cs
pop
sub
sbb
clc
scas
mov
push
ja
or
shll
shrb
test
hlt
sub
pop
cltd
std
addb
pushf
mov
mov
mov
lret
push
cmp
inc
or
loopne
scas
and
subb
imul
insb
mov
dec
mov
xchg
dec
cmpsl
add
add
inc
jb
popa
je
push
push
add
add
arpl
outsb
jne
je
insl
add
inc
and
divl
fs
jne
pushf
mov
lea
jmp
add
inc
insb
outsl
bound
push
gs
insb
insb
outsl
arpl
add
inc
insb
outsl
bound
dec
outsl
arpl
add
dec
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
inc
dec
inc
push
add
inc
and
lea
add
je
add
inc
and
pushf
pushl
pushl
ret
add
push
jb
je
inc
imul
pusha
pusha
pushf
lea
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
cmp
fidivrl
jge
rclb
push
ret
mov
xor
stos
cmp
push
ss
call
imul
dec
cmp
rolb
int3
xlat
pop
ret
in
call
repz
sub
xchg
dec
scas
test
mov
dec
mov
mov
cmp
mov
and
bt
test
jmp
pushf
pushf
pushf
mov
pusha
mov
push
pushf
lea
jmp
btr
mov
adc
add
not
lea
jmp
add
dec
outsb
je
jb
gs
jne
jb
dec
jo
imul
inc
gs
imul
je
add
inc
fs
jae
push
imul
arpl
add
into
clc
clc
test
movb
lea
jp
je
movzbw
or
mov
test
call
add
push
gs
arpl
push
arpl
bsr
rcr
pushf
pusha
mov
clc
pushf
call
add
push
outsb
push
imul
outsl
outsl
imul
in
shlb
pop
clc
lds
jle
or
and
xchg
xor
and
sub
xor
xor
or
cs
push
arpl
scas
out
movsb
add
push
fstpt
xor
popf
sub
ret
xchg
adc
mov
mov
dec
pop
mov
inc
jno
sti
iret
push
push
fcomps
dec
xchg
xor
adc
inc
mov
or
mov
xchg
sbb
outsl
clc
setne
sbb
or
dec
jle
arpl
fwait
aas
xchg
jae
mov
aas
sarb
or
leave
pop
lret
stc
or
cmp
xchg
dec
sbb
scas
in
pop
jbe
std
push
sub
lods
fmul
jb
xchg
cwtl
sbb
flds
sub
nop
pop
movb
scas
aam
xor
jbe
test
inc
sti
push
jmp
sbb
and
xor
push
mov
daa
xchg
push
insb
xor
ds
pop
jae
adc
scas
sbb
push
or
mov
xchg
sbb
test
repnz
inc
arpl
mov
in
push
cmp
pop
mov
xchg
inc
xchg
out
xor
loope
stc
or
leave
jns
dec
cmp
cli
add
xor
std
int
cwtl
int3
push
sbb
adc
mov
pop
push
scas
xor
or
arpl
ljmp
or
sbb
push
pop
jae
xchg
dec
dec
push
shlb
dec
shl
into
rcr
sbb
lcall
xor
clc
imul
xor
lock
lcall
rclb
jmp
xchg
xor
into
mov
movsl
ljmp
les
xchg
aaa
repnz
xor
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
fdiv
lds
clc
jmp
add
insb
jae
jb
jo
outsb
inc
add
add
je
popa
jbe
inc
imul
add
add
jae
gs
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
add
adc
test
pusha
pusha
mov
jmp
or
xor
jo
xchg
push
sub
inc
ret
push
imul
pop
xor
scas
cmp
mov
lret
mov
out
pop
jl
cmpsl
into
fstps
cltd
xor
xor
jo
movb
mov
push
inc
pop
fsubs
mov
mov
mov
ss
fs
xor
gs
pop
stos
stc
push
mov
icebp
mov
je
or
xor
int
out
add
cwtl
or
scas
out
xor
clc
je
add
jb
jne
insb
inc
insb
insb
outsl
arpl
xchg
pusha
jmp
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
add
popa
jo
jb
add
add
jb
imul
popa
jae
inc
add
out
sub
push
gs
jb
outsl
jb
outsl
fs
add
je
outsl
jb
addr16
jne
fs
imul
add
jp
outsl
push
gs
jne
arpl
add
inc
gs
bt
add
jmp
inc
dec
dec
inc
push
dec
xor
cs
insb
add
add
je
jne
jb
outsb
je
push
dec
add
icebp
pop
xchg
mov
sub
fiaddl
xor
sbb
push
shlb
and
lahf
insb
cmp
test
pop
pop
out
push
xchg
mov
push
push
inc
in
or
int
push
and
dec
and
sahf
mov
push
xchg
mov
in
pusha
mov
dec
movsb
aad
leave
push
mov
es
adc
cmp
in
add
xor
shl
jno
dec
jae
mov
mov
jle
js
imul
inc
decb
xor
pop
inc
sbb
adc
fmull
xchg
inc
cltd
lret
adc
adc
add
stos
lahf
fistl
sahf
adc
push
and
inc
cmpsl
cmpsb
cmpsl
xchg
xor
cld
scas
xorb
div
jecxz
movsl
adc
inc
xor
pop
push
jno
hlt
jmp
xor
sub
inc
repnz
jnp
and
test
add
mov
xchg
inc
pop
jae
call
repnz
pusha
lea
jne
lea
bswap
movb
movzbw
not
lahf
push
lea
pushf
not
pusha
lea
mov
mov
call
pushf
mov
test
cmp
stc
pushl
sub
test
xor
cmp
cmc
clc
pusha
neg
bt
add
cmc
cmp
mov
call
add
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
imul
jo
imul
add
add
dec
jo
outsb
push
jb
arpl
jae
outsl
imul
jmp
add
push
gs
jae
addr16
add
push
push
add
pusha
lea
jne
dec
mov
call
add
dec
gs
popa
addr16
outsl
js
add
and
sub
stc
neg
cmp
xor
jmp
add
dec
gs
jo
jb
popa
je
add
add
insb
je
inc
jns
gs
outsl
push
imul
push
lea
jae
pusha
lea
jmp
add
push
imul
outsb
outsl
ja
gs
popa
addr16
add
add
je
jb
gs
jo
outsb
push
jb
inc
add
add
je
popa
jae
inc
jb
outsl
jb
not
movb
not
mov
movb
jmp
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
sub
and
xchg
cmpsl
cli
aas
pusha
pusha
movl
pushf
movw
pushf
pushf
lea
jmp
push
pushf
add
test
cmc
movzwl
inc
jmp
add
push
imul
outsl
insl
push
outsl
imul
and
cwtl
jmp
add
push
jb
je
push
jb
arpl
jae
gs
outsl
jb
add
add
popa
jb
jo
gs
add
mov
mov
dec
outsb
imul
jae
gs
push
push
ja
inc
add
add
je
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
add
je
outsb
jne
je
insl
dec
inc
add
inc
inc
jecxz
stos
popf
sub
sbb
pop
jne
dec
fildl
shll
inc
nop
arpl
xchg
inc
dec
sub
iret
nop
sub
aaa
jp
movsb
add
dec
add
xor
add
inc
gs
outsl
jb
addr16
jne
fs
imul
sbb
imul
push
test
cmc
test
add
pushf
pushf
lea
jmp
and
scas
mov
adc
in
inc
cld
push
push
das
dec
ret
or
arpl
imul
fsubs
jle
mov
ret
push
cmp
jne
or
push
sahf
cwtl
cmp
jmp
mov
pushf
xor
pop
inc
cmp
jl
outsl
ret
out
jns
fnsave
inc
xchg
add
inc
outsl
insl
jo
jb
push
je
imul
inc
insb
outsl
bound
inc
insb
popa
addr16
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
jb
bt
test
test
cmp
pushf
lea
jae
btr
mov
xchg
mov
bt
mov
push
sub
pushl
push
clc
repnz
jmp
add
push
push
jb
outsl
jb
add
push
jb
je
push
jb
jbe
je
push
jb
imul
imul
inc
gs
jb
jo
add
add
je
insb
imul
je
clc
jmp
add
push
imul
jb
je
arpl
add
inc
popa
fs
gs
fs
je
add
add
popa
fs
jb
arpl
jae
gs
outsl
jb
add
xchg
adc
add
sub
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
add
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
popa
insb
inc
insb
insb
outsl
arpl
push
dec
dec
dec
dec
inc
push
cs
insb
add
add
je
inc
imul
jae
add
dec
cld
rcl
shr
bts
pushf
call
pusha
pusha
jmp
movl
call
add
push
imul
jne
jb
add
les
ret
mov
clc
pusha
test
mov
pushf
lea
je
pusha
add
cmp
pushl
cmp
call
add
inc
gs
gs
popa
addr16
outsl
jae
jmp
add
inc
gs
insb
popa
jae
dec
outsb
outsw
inc
add
add
insb
outsl
arpl
imul
outsl
ja
imul
add
je
jb
jbe
push
jns
gs
add
add
je
arpl
gs
imul
cli
popa
jmp
push
aaa
jnp
and
lret
int3
and
xchg
mov
loope
cmp
and
fwait
or
nopl
sub
fists
cmp
outsl
sbb
les
in
mov
pop
lret
add
mov
mov
jbe
int
sub
idivl
or
inc
dec
fwait
sahf
gs
cltd
push
fldenv
add
movsl
mov
mov
movsb
icebp
int3
push
ljmp
jp
fwait
mov
popf
cli
loopne
inc
cmp
fisttpll
into
cli
int
lret
xchg
cmpsb
add
clc
xor
pusha
test
call
add
dec
jae
popa
insb
imul
add
scas
popf
pop
jmp
add
inc
jb
popa
je
inc
imul
imul
jb
insl
inc
add
add
insb
gs
jae
inc
popa
jo
jne
add
add
popa
bound
imul
add
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
je
imul
add
inc
gs
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
jb
gs
gs
fs
imul
add
add
je
gs
imul
gs
gs
imul
add
push
imul
add
add
jae
popa
addr16
outsl
js
add
add
je
popa
jo
jne
add
mov
les
pushf
pushf
mov
pushl
ret
add
push
arpl
gs
imul
je
js
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
je
jns
je
insl
inc
imul
jns
add
add
data16
popa
je
push
arpl
add
je
jb
gs
gs
popa
jae
push
gs
outsl
outsb
jae
dec
outsb
outsw
inc
add
mov
call
add
dec
inc
dec
popa
jo
je
imul
dec
outsl
popa
fs
je
imul
inc
outsb
fs
imul
mov
mov
shrd
shl
cmc
mov
or
add
not
rol
mov
pusha
test
call
mov
inc
mov
jmp
or
mov
call
inc
jns
dec
ja
lret
cmp
lahf
push
idiv
cmc
hlt
xlat
jns
dec
int
inc
cltd
inc
lret
addr16
test
test
inc
out
mov
cmpsl
das
les
cmp
mov
adc
cwtl
and
fwait
imul
mov
pushf
lret
adc
lahf
xor
fistpl
jecxz
loope
hlt
xor
pusha
mov
call
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
push
imul
popa
jae
inc
add
lea
jne
movsbw
jmp
movb
pusha
lea
ja
not
inc
clc
sub
sar
shr
add
bsr
sub
mov
ror
mov
jmp
mov
pushf
pushl
push
pushl
ret
shr
shr
mov
cmp
push
cmpb
mov
pusha
pushf
lea
jne
pusha
push
pushf
lea
jmp
add
inc
gs
outsb
jne
adc
std
adc
cmc
sub
push
jb
mov
push
pop
jg
aas
mov
cli
aam
or
loop
mov
xchg
jbe
outsl
push
cli
aam
or
in
cmp
jns
jg
xor
xchg
xor
cld
push
repnz
xchg
cmc
insl
hlt
pop
mov
scas
clc
gs
add
push
jp
jecxz
and
push
lret
or
pop
clc
and
out
add
jo
mov
mov
bound
fiaddl
mov
pop
cld
cld
add
mov
mov
xchg
cmp
push
xchg
in
insb
mov
sub
add
arpl
mov
mov
rorl
adc
jno
mov
mov
ljmp
add
adc
sub
in
adc
adc
popf
rcrb
mov
mov
das
and
sbb
lea
pop
ret
mov
hlt
cld
js
jp
and
lahf
mov
cs
pushf
aaa
loop
daa
repnz
loope
xor
pop
icebp
jl
mov
jmp
jp
fstps
lret
aam
rorl
xor
pop
inc
pop
std
sub
adc
push
mov
xchg
pop
jecxz
cmp
gs
push
dec
mov
xor
fnstcw
into
mov
stc
pop
fwait
cmpsb
add
mov
and
fistpll
add
add
inc
imul
jne
arpl
add
add
je
je
dec
popa
outsb
fs
add
add
outsl
jae
dec
popa
outsb
fs
add
mov
lcall
add
push
gs
imul
outsl
outsl
imul
add
add
insl
jo
jb
push
je
imul
inc
gs
jb
jns
outsb
jne
add
inc
gs
outsl
fs
gs
imul
add
add
je
jne
jb
outsb
je
jb
arpl
jae
mov
mov
lods
movl
clc
call
pushf
bt
stc
sub
pushf
cmp
call
add
push
popa
insb
imul
je
push
dec
dec
dec
dec
cs
insb
add
in
pop
pop
lea
pushl
movb
call
add
lret
adc
enter
pop
sub
daa
push
repz
cmp
cld
cmp
pop
push
push
les
outsb
and
sbb
mov
ljmp
jno
mov
lret
jo
dec
lea
lret
xlat
push
out
aas
fbstp
xchg
lods
insb
test
imul
sub
arpl
add
jl
xor
sbb
mov
loopne
inc
adc
fwait
jmp
arpl
int3
loopne
xchg
out
jnp
adc
mov
xchg
jg
into
sbbb
leave
cmc
inc
cld
inc
rol
adc
pop
push
or
xor
pop
mov
or
pop
sti
mov
ficoms
and
pop
cli
cmp
mov
loope
imulb
incb
mov
mov
mov
xchg
cmp
cmpsl
dec
scas
add
pop
inc
popa
fdivs
repnz
jl
xor
lea
ljmp
push
sbb
sub
xchg
aaa
sbb
fisubl
dec
scas
jp
jge
in
jnp
mov
and
pushw
lods
push
cmp
xor
push
scas
or
xor
aas
fbstp
dec
cmp
jp
shll
xchg
aaa
mov
out
add
mov
cmp
shrb
xor
jmp
add
push
jb
arpl
jae
xor
jb
je
add
dec
outsb
je
jb
gs
popa
outsb
outsl
outsb
imul
push
jb
inc
add
add
je
insb
imul
inc
popa
je
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
jbe
je
push
jb
imul
imul
pop
jns
add
adc
cmp
adc
sub
add
mov
add
adc
pop
jge
add
lods
adc
cmp
adc
imul
movsb
adcl
mov
jge
add
lods
adc
mov
adc
mov
add
push
adc
scas
jge
add
pop
adc
in
adc
mov
add
add
add
add
adc
lock
adc
out
jge
add
adc
and
adc
idivl
add
xchg
adc
sub
adc
jge
add
insl
adc
xor
adc
pop
jle
add
adc
cmp
adc
pop
jg
add
mov
add
add
jg
add
adc
push
pop
adc
add
add
je
jb
outsl
arpl
fs
js
push
add
add
je
imul
dec
jb
inc
js
jmp
add
push
arpl
jae
bound
add
inc
gs
imul
bound
gs
add
add
inc
popa
fs
jb
je
push
je
add
add
popa
insb
push
gs
insb
insb
outsl
arpl
add
push
gs
imul
jae
add
push
gs
imul
outsl
jb
cmpb
call
add
inc
gs
je
arpl
bound
arpl
jg
call
cmpsl
and
test
icebp
daa
nop
out
sahf
movsb
lods
jle
jno
repz
adc
dec
push
push
scas
jbe
add
mov
aas
clc
dec
mov
dec
outsl
add
add
lods
jle
testb
mov
lret
call
sub
push
subb
imul
xlat
adc
mov
push
mov
inc
xor
addr16
repz
adc
sub
adc
pop
mov
xor
xchg
rcrl
lds
dec
push
movl
add
leave
orb
pop
mov
adc
in
xor
pop
mov
xchg
sahf
jg
loop
add
mov
jae
incl
mov
mov
lods
jle
mov
nop
jo
loop
test
in
mov
adcl
xor
std
repz
xchg
ljmp
mov
xor
inc
rorl
ljmp
mov
sbb
add
xchg
xor
test
repz
xor
lcall
ret
xor
ljmp
std
rcrb
je
pushf
aam
xor
cmp
aaa
fst
mov
out
test
test
xchg
scas
cmpl
or
push
stos
sbb
nop
adc
std
repnz
loope
xor
shll
adc
push
sbb
xchg
pusha
add
mov
stos
push
fisttps
jb
negl
jne
mov
lea
out
ds
dec
mov
call
inc
adcb
xor
push
lock
std
std
mov
xchg
sub
inc
cmp
shrl
insb
icebp
pushf
mov
pop
pop
ss
mov
fsubrl
adc
dec
inc
lret
aam
pop
enter
sub
test
out
lods
lcall
stc
fs
push
cmp
stos
movsb
mov
fnsave
pop
call
enter
rorl
rol
incl
lea
mov
push
pushf
mov
lea
jnp
bswap
pusha
lea
lea
pusha
jmp
pushf
movw
lea
je
cmc
rol
add
mov
rcl
bswap
add
pusha
pushf
pushf
shld
mov
call
pushl
cmp
pushf
pusha
movb
lea
jb
cmc
jmp
clc
fsts
movsb
pause
enter
xchg
pushf
inc
push
push
cmpsl
adc
out
cltd
mov
test
stos
ret
xor
cltd
out
insb
pop
mov
ret
adc
out
xchg
xor
jb
repnz
ds
mov
fidivrl
xchg
xor
add
dec
outsb
je
jb
gs
insb
outsl
jae
dec
popa
outsb
fs
add
les
pushf
lea
jne
sar
and
mov
push
pushf
stc
add
mov
movb
clc
movzwl
ror
mov
stc
cmc
add
call
jmp
jne
les
shlb
mov
push
jnp
and
in
xor
lcall
test
inc
dec
xor
jmp
iret
jmp
push
pop
mov
dec
sbbb
shll
adc
ja
sub
js
fwait
loop
push
popa
lods
jmp
mov
sub
je
imul
inc
and
andl
add
je
imul
je
js
cmp
jmp
add
push
je
push
outsb
ja
outsb
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
inc
gs
imul
outsb
addr16
add
add
jo
push
arpl
add
fs
xor
inc
imul
dec
inc
dec
popa
jo
je
imul
push
imul
jb
je
arpl
add
lret
sbb
dec
cld
pushf
call
add
push
gs
outsb
jne
je
insl
inc
imul
inc
and
pop
xchg
push
add
pop
sub
add
in
incl
add
insb
gs
imul
arpl
inc
imul
btr
add
dec
or
mov
clc
cmc
mov
test
call
call
add
push
outsl
jae
push
push
dec
gs
popa
addr16
add
add
insb
insb
push
imul
outsl
arpl
clc
add
cmp
bt
clc
cmp
not
pushl
cwtl
pushf
lea
call
jle
aam
leave
pop
xchg
aad
pop
xchg
fdivs
rcrb
dec
inc
ret
js
jp
rol
mov
jg
jnp
xchg
pushf
outsl
mov
loop
xor
mov
add
mov
mov
cmp
sub
and
loop
mov
sub
xlat
mov
call
ss
mov
fidivrl
hlt
scas
cmp
shrl
and
xor
and
cmp
stos
test
pop
repz
icebp
shrl
popa
xchg
aad
jb
popa
ret
sbb
andb
js
mov
xor
call
xor
test
popa
fwait
adc
jmp
sbbb
leave
pop
jo
lcall
cmpb
lea
jp
les
cmp
xchg
sub
out
clc
xchg
jbe
sbb
fisttpl
cmpsl
les
xor
stos
mov
push
mov
mov
es
lock
xchg
add
xchg
cs
xor
pushf
out
stc
shlb
pop
adc
xor
das
add
sbb
jmp
repz
clc
inc
mov
aas
out
in
cs
enter
pop
xor
jno
test
inc
leave
incl
dec
ss
cmpb
sbb
jns
add
inc
gs
imul
jb
popa
fs
jb
arpl
jae
add
add
je
je
dec
popa
outsb
fs
add
add
insl
imul
outsl
arpl
jae
add
push
gs
imul
gs
lea
je
pushf
cmc
jmp
add
dec
outsl
outsl
imul
jb
jbe
insb
gs
popa
insb
jne
inc
add
add
je
popa
jo
outsl
fs
cmpb
xchg
add
jbe
add
cmp
push
movsb
sbbl
out
xchg
or
sub
enter
in
lret
add
shl
mov
pop
jb
lea
fs
enter
jge
jmp
mov
sub
je
ja
or
jle
fsubl
test
test
imul
dec
cmp
push
push
mov
mov
js
xchg
sub
cmp
xchg
add
test
adc
fs
adc
leave
pop
adc
dec
jne
add
adc
fistpll
adc
cmpsb
popa
adc
fistpl
adc
fnstcw
adc
sbbb
adc
adc
fildll
adc
pop
xchg
adc
gs
adc
sahf
jne
add
adc
lds
add
mov
add
adc
imulb
add
adc
or
add
mov
adc
fmuls
add
sahf
adc
pop
pop
adc
fidivl
add
adc
mov
add
adc
mov
adc
jns
adc
push
adc
ljmp
add
pop
adc
insl
mov
add
adc
or
add
lods
adc
mov
adc
test
adc
ss
add
pop
adc
mov
adc
lea
adc
and
lea
add
adc
mov
mov
adc
insl
xchg
adc
xchg
add
mov
add
movsl
adc
inc
lea
add
pop
adc
hlt
jne
add
mov
add
adc
test
adc
jp
adc
add
add
nop
adc
popf
mov
add
adc
mov
add
lods
adc
mov
adc
xchg
pop
adc
bound
add
test
adc
fistpl
add
outsl
adc
mov
adc
aas
pop
adc
push
push
adc
lds
add
test
adc
mov
add
pop
adc
in
adc
push
xchg
add
adc
mov
add
pop
adc
xor
adc
jge
adc
mov
add
pop
adc
jmp
adc
cltd
pop
adc
cmp
adc
jnp
adc
lods
jne
add
arpl
add
adc
imul
adc
dec
push
adc
mov
mov
adc
fcomps
add
add
add
push
add
push
adc
movb
add
pop
adc
or
add
adc
xor
adc
iret
cmpsb
adc
sbb
mov
add
mov
adc
lea
add
imul
add
nop
adc
mov
adc
ret
add
mov
adc
inc
pop
adc
pop
adc
mov
cwtl
adc
xchg
adc
fldenv
add
mov
add
adc
xchg
add
lea
add
adc
mov
test
adc
mov
lods
adc
dec
adcb
sub
add
adc
dec
pop
adc
adc
adc
or
adc
sub
insl
adc
popf
insb
adc
movsl
adc
dec
mov
add
push
adc
xor
adc
stc
jo
add
mov
adc
leave
adcl
add
lahf
adc
mulb
add
nop
adc
gs
add
mov
add
mov
add
jne
add
popa
adc
add
push
adc
jbe,pn
add
adc
out
adc
cwtl
xchg
adc
out
adc
repz
adc
jo
adc
xchg
add
imul
add
adc
dec
mov
adc
xchg
mov
add
outsl
adc
push
push
adc
les
add
adc
cmpsb
xchg
adc
adc
leave
pop
adc
daa
xchg
add
adc
cmpsb
pushf
adc
and
mov
add
cltd
adc
pop
movsl
adc
daa
xchg
adc
sbb
add
xchg
add
ja
add
adc
mov
adc
int
adc
add
add
aaa
jne
add
lea
add
adc
xchg
pushf
adc
fsubl
add
adc
mov
adc
test
adc
lahf
jo
add
adc
daa
pop
adc
cmp
adc
daa
adcb
les
adc
or
add
adc
sahf
pop
adc
sbb
mov
add
add
add
cmpsl
adc
jae
adc
add
add
mov
push
adc
jo
adc
add
add
xchg
pop
adc
pop
js
add
adc
pop
mov
add
arpl
add
add
add
add
addb
add
in
xchg
adc
cmc
outsb
adc
rcrl
je
adc
pop
je
add
adc
and
adc
xchg
sahf
adc
xor
add
push
add
sbb
add
add
add
adc
add
add
cmp
add
add
mov
add
mov
add
xchg
adc
fcomps
add
insb
adc
and
add
insb
adc
jp
adc
mov
adc
test
adc
aad
adc
dec
pop
adc
or
adc
sti
pop
adc
fnstcw
adc
cmpsb
popa
adc
mov
add
stos
adc
cltd
pop
adc
pop
jne
add
mov
add
pop
adc
popf
adc
mov
movsb
adc
add
add
mov
add
lods
adc
shrl
add
pop
adc
outsl
insb
adc
imul
adc
fildll
adc
test
adc
or
add
adc
mov
adc
and
add
mov
add
adc
jmp
adc
lods
bound
add
adc
push
mov
add
pop
adc
pop
xchg
adc
sahf
jne
add
bound
add
adc
jno
adc
lret
add
adc
dec
jne
add
adc
add
add
popa
adc
add
add
dec
pop
adc
jp
adc
add
add
mov
add
sahf
adc
add
add
add
ret
divb
cmp
cli
xchg
shlb
outsl
in
push
dec
imul
loopne
outsl
push
icebp
xchg
fcmovnb
daa
fisubrl
pop
int3
xlat
pop
iret
and
insb
lods
outsl
fdivr
or
adc
mov
sbb
gs
roll
loopne
sbb
mov
mov
inc
dec
lcall
in
xchg
insl
call
ja
cmp
cmc
xor
push
jmp
sbb
push
test
aad
bt
mov
or
bt
aas
sub
neg
bt
not
push
bsr
shrd
cmp
xor
push
pushf
shl
pushf
mov
bsf
btc
shr
lahf
mov
shld
sar
mov
call
add
dec
jo
outsb
inc
insb
imul
add
test
sub
add
add
add
fs
gs
jne
arpl
mov
inc
inc
sbb
dec
mov
je
jle
filds
push
cmp
xor
and
push
inc
xchg
cltd
hlt
movsb
addr16
stos
shlb
xor
lods
rcr
jae
sub
pop
jb
xchg
push
clc
xor
in
or
sbb
cld
pop
pushf
lods
loopne
vpslld
cmp
xor
xor
ss
xchg
pop
xor
daa
dec
jbe
inc
pop
loope
jge
mov
sbb
xor
xor
dec
mov
sub
dec
ret
sbb
jg
push
clc
xor
lahf
dec
adc
mov
fmull
jnp
nop
xchg
inc
int
sbb
jae
sbb
pop
lds
sbb
je
scas
clc
xor
in
cmp
xor
cmc
and
and
xchg
and
or
dec
je
xorl
mov
adc
fnsave
xchg
and
cmp
fdivrs
jo
jg
mul
fidivl
xchg
and
outsb
mov
pop
dec
jne
adc
mov
jmp
jmp
xor
sub
mov
inc
adc
clc
dec
ljmp
int3
popfw
cmp
loopew
pop
jecxz
xchg
cli
xchg
mov
xchg
and
cld
mov
pop
xor
daa
cmp
aaa
and
mov
jmp
idivl
add
push
gs
imul
js
inc
add
clc
test
pusha
cmc
movb
cmp
call
mov
jmp
push
ja
not
not
pusha
lods
pusha
stc
sub
cmc
mov
movw
cmp
neg
pushf
pushf
cmc
test
xor
stc
jmp
add
push
popa
jbe
inc
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
mov
push
jmp
add
inc
gs
outsb
jne
push
popa
jb
inc
imul
outsb
jae
pushf
lea
jne
mov
pusha
pushf
pushl
push
lea
jmp
mov
shl
fcoms
sbb
mov
out
jge
sbb
xor
ja
push
andl
dec
push
jg
popa
enter
xchg
fidivrs
lds
xchg
fs
insl
dec
mov
rorl
imul
push
test
roll
enter
and
adc
mov
ds
push
xchg
cmovg
sbb
adc
mov
jle
dec
push
ss
jns
outsb
aad
sbb
xchg
and
imul
mov
mov
mov
add
cmc
push
ljmp
mull
mov
andb
lods
xor
stos
push
imul
ja
lea
jne
xor
out
daa
or
or
xor
inc
insl
inc
jge
mov
and
cmp
inc
adcl
xchg
and
mov
addr16
gs
popa
insb
jne
inc
js
add
insl
fs
xor
cs
insb
add
mov
incl
add
popa
fs
imul
add
add
je
outsl
jo
imul
sub
mov
add
popf
xchg
loope
jb
into
lods
and
loop
xor
in
push
or
mov
adc
aas
mov
pop
push
cmp
sbb
fisttpll
fnstcw
push
mov
add
xchg
inc
jne
aad
sbb
xchg
mov
fnstcw
mov
cmovl
cltd
insb
movsb
xchg
jp
dec
icebp
mov
test
or
stc
ret
call
frstor
jbe
repz
xchg
icebp
js
lret
cmc
push
xchg
cmp
rorb
jle
and
xchg
pop
stc
pop
jge
and
mov
adc
cmp
add
rcl
mov
scas
data16
jge
jne
jbe
xor
es
cmp
jle
xor
push
and
adc
xor
mov
xchg
jbe
add
pop
fsubrl
pop
sub
cltd
sub
cld
sub
loope
decb
jae
xlat
decb
push
inc
adc
mov
cmp
sbbl
push
orl
mov
jp
or
fbld
mov
lahf
and
push
dec
pushf
pop
pop
incl
mov
push
sbb
decl
dec
adc
xchg
cli
adcl
shrb
movsb
or
xor
aas
xchg
cs
insb
js
mov
push
sahf
pop
dec
xor
sub
or
rclb
pop
sbb
or
outsl
fmull
and
ret
push
pop
sbb
ja
mov
aam
or
xchg
stc
jb
fdivrl
cltd
or
mov
mov
push
pusha
cmpsb
lock
loopne
cltd
lods
test
add
xor
push
xchg
push
xchg
or
ret
popf
cmp
inc
sub
int3
mov
push
xchg
mov
out
pop
dec
inc
dec
sub
mov
fwait
add
mov
push
xor
arpl
jmp
sub
comiss
inc
mov
fnstcw
mov
jmp
cmp
incl
jno
inc
or
xchg
sbb
iret
dec
scas
out
inc
push
push
mulb
cmpsb
jns
push
xchg
insl
mov
xchg
push
out
dec
test
add
imul
arpl
outsb
add
add
je
imul
lea
call
pushf
jmp
add
push
jb
arpl
jae
xor
js
add
add
imul
insb
gs
bound
arpl
in
mov
imul
pop
jbe
jns
shrl
jmp
and
sub
xchg
lds
out
nop
cmpb
or
test
outsl
lret
jp
push
insb
xchg
insl
shlb
insl
xor
push
lea
jne
rol
mov
mov
or
sub
sbb
mov
cmp
sub
test
bt
pushl
test
bt
push
cmp
call
lea
call
push
lock
std
std
andl
adc
shlb
cmpsl
into
sarb
and
pushf
mov
pop
adc
xor
aam
cmp
jge
test
inc
xor
push
aam
pop
lds
jmp
daa
adc
test
je
xchg
addl
push
inc
mov
jae
xchg
push
out
mov
mov
sub
mov
in
sbb
jmp
lret
cltd
and
xchg
pop
dec
stc
mov
sub
cmp
adc
adc
aaa
outsb
ret
out
out
mov
pop
fistpll
adc
lcall
aaa
lods
hlt
xor
dec
jb
cltd
mov
or
push
jb
add
inc
imul
outsl
ja
js
add
add
pushf
jmp
stc
stc
add
stc
cmc
movb
cmc
cmp
pushl
pop
lea
jmp
movw
jmp
add
push
gs
outsl
arpl
add
add
gs
je
inc
imul
push
jns
je
insl
push
imul
insb
gs
imul
incl
add
addr16
jb
popa
je
dec
gs
js
add
add
inc
jb
add
push
dec
inc
dec
xor
cs
insb
add
xchg
add
add
sar
shlb
adcb
sub
bswap
add
stc
mov
or
not
mov
test
cmc
repnz
call
add
inc
outsl
jb
popa
je
gs
popa
addr16
add
add
data16
je
imul
dec
jb
inc
js
add
inc
gs
imul
pop
push
push
stos
mov
enter
sbb
mov
mov
dec
sarb
fists
pop
dec
jns
popl
pop
inc
pop
jmp
mov
mov
mov
pop
fwait
inc
xor
pop
mov
add
loope
cltd
adc
xor
add
push
outsl
jae
push
jne
je
gs
popa
add
or
test
pop
add
shrd
mov
mov
pusha
sub
bsr
lea
lea
stc
clc
sub
test
cmp
cmc
cmp
pushl
cmp
pusha
test
cmp
pusha
jmp
stc
jmp
jl
jge
shrb
push
aad
mov
mov
mov
adc
lock
fwait
inc
icebp
ja
bound
pop
jge
ficomps
mov
jge
jg
popa
test
insb
push
fdiv
ja
leave
pop
sbb
cmp
xchg
lcall
ljmp
enter
movsb
test
popa
mov
cmpb
leave
jg
mov
jnp
idivl
xchg
push
or
and
sbb
or
jo
pop
jmp
aaa
bound
and
mov
scas
xor
pushl
call
jmp
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
add
inc
gs
outsl
fs
gs
imul
add
add
addr16
jo
outsb
dec
gs
js
add
xor
mov
movsbw
pop
pushf
pushf
pushl
ret
pushl
movzwl
add
btc
mov
jmp
add
inc
insb
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
add
je
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
outsl
arpl
push
imul
gs
inc
push
add
outsl
jmp
mov
xchg
lcall
lret
or
jp
inc
xchg
repz
xor
hlt
fsub
or
je
pop
scas
xchg
test
xchg
js
inc
fistps
xchg
sbb
or
sbb
dec
ret
mov
mov
push
adc
xchg
push
xor
subl
fidivrs
jle
scas
jl
xchg
sbb
mov
ret
push
xor
cmc
ja
jg
icebp
repz
mov
pusha
or
je
pusha
or
mov
popf
int
mov
inc
rep
or
cltd
movsb
inc
pop
mov
jne
pop
js
call
dec
jae
cmp
inc
pop
cli
inc
addr16
cmp
ret
jg
xor
test
loop
sub
lcall
adc
loope
push
push
push
pop
and
xor
add
inc
gs
jne
insb
push
popa
je
dec
popa
insl
gs
add
sub
jmp
fs
je
push
call
add
inc
insb
outsl
bound
inc
gs
gs
inc
je
insl
add
add
addr16
insb
outsl
jae
dec
gs
add
inc
gs
outsl
arpl
add
fs
jne
jb
shld
movzbl
xor
inc
mov
neg
stc
pushf
add
shl
sub
mov
movb
bt
test
pushf
pushf
call
add
insb
jae
jb
insl
jo
add
add
push
imul
outsl
arpl
add
inc
gs
jb
arpl
fs
jae
add
inc
push
xor
cs
insb
add
add
jb
jne
insb
inc
jb
gs
inc
and
jl
cli
lcall
mov
mov
movl
pushf
movb
pushf
lea
jmp
setbe
not
lods
push
test
sub
pusha
push
mov
neg
jmp
add
dec
jae
arpl
imul
outsb
fs
insb
outsl
jae
add
add
je
jne
jb
outsb
je
push
add
and
jmp
jmp
jmp
add
inc
gs
imul
js
inc
add
inc
and
pop
or
pop
pop
add
mov
push
call
jmp
add
inc
gs
gs
dec
bound
arpl
add
push
imul
popa
bound
add
add
outsl
jae
push
jb
outsb
je
jb
movb
lea
jb
push
push
pusha
lea
jmp
rcl
mov
jmp
pushf
mov
call
lea
lea
jp
pushf
movl
push
mov
pushf
push
pushl
ret
add
dec
outsl
imul
inc
add
ror
mov
jmp
add
dec
imul
add
xchg
jmp
fs
jb
cmc
stc
bt
cmc
cmpb
jmp
movl
pushf
movw
lea
jmp
cld
fmuls
fistpll
xor
push
push
imul
cmp
leave
adc
push
lds
xchg
jge
add
sub
add
pop
cmpsl
shrl
add
popf
clc
adc
ret
sub
cmp
call
jl
mov
inc
cltd
les
in
ja
sub
jmp
lock
and
imul
push
mov
mov
outsl
ret
pop
xor
jmp
lods
movsl
and
jl
push
cwtl
jecxz
mov
fdivl
adc
pusha
int
lea
ds
push
mov
scas
xor
jnp
push
adc
call
add
lcall
mov
fdivs
hlt
fcompl
push
sub
lds
fcom
bound
jmp
adc
and
dec
adc
inc
jns
out
jge
mov
xchg
push
inc
popf
test
stos
jo
xor
pop
push
or
cmpsb
or
aaa
test
jae
mov
cmp
sbb
mov
sahf
xor
fwait
pop
push
xor
and
clc
inc
xor
xor
les
daa
in
outsb
pop
stos
xchg
mov
xchg
mov
xchg
push
cs
sub
xrelease
aad
xchg
ja
xchg
adc
add
je
bound
arpl
add
inc
gs
popa
jb
outsb
je
test
push
clc
add
call
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
add
push
arpl
gs
imul
inc
js
inc
js
bsr
pusha
rcr
bts
sub
lea
not
push
pusha
mov
pushl
pushf
bswap
movsbw
mov
call
add
insb
jae
jb
jo
inc
add
add
inc
bound
addr16
jb
jae
outsb
je
add
push
gs
outsl
jbe
push
jb
jo
add
mov
shrd
mov
pusha
test
cmp
call
add
dec
data16
je
arpl
mov
incl
add
fs
jne
jae
jb
add
jnp
iret
or
mov
cmc
clc
test
cmpb
pusha
lea
jmp
add
inc
insb
outsl
bound
inc
imul
inc
add
add
popa
jo
insb
insb
outsl
arpl
lea
je
push
bt
sub
call
bt
add
mov
pusha
bt
mov
cmp
bt
call
movl
pusha
pusha
movl
push
push
lea
jmp
inc
cmpsb
mov
les
clc
scas
jbe
mov
adc
mov
push
roll
ficompl
rcl
xchg
lret
adc
leave
xchg
leave
dec
mov
sub
dec
clc
jmp
dec
add
add
rclb
fidivl
sbb
xchg
pop
mov
stos
icebp
leave
xchg
push
testl
js
iret
into
jns
or
jne
test
jl
cmpsb
push
test
xchg
adc
daa
mull
into
mov
pop
sahf
lods
jae
jae
jle
shlb
out
xor
test
les
jl
dec
xlat
out
pushf
outsb
movsb
and
adc
and
sbb
stos
and
push
lret
lret
pop
jb
mov
test
mov
rorl
cmp
loope
addr16
pop
scas
test
inc
sbb
inc
or
imul
xchg
pop
jne
rcrb
pop
sbb
insl
and
dec
xor
mov
into
mov
lcall
xchg
ljmp
xlat
xor
add
add
stos
insl
xor
repz
add
fiaddl
xor
pop
fcmovne
mov
stos
sbb
mov
xor
sub
daa
and
sbb
ret
jp
aas
mov
pop
sahf
dec
enter
scas
jmp
xor
xchg
pop
sbb
popa
data16
leave
pushf
or
in
shlb
adc
andl
imul
fs
gs
outsb
je
nop
cwtl
sub
lds
mov
push
inc
mov
xchg
movsb
mov
loope
pop
or
fsubs
ds
xchg
ljmp
jp
sub
cwtl
push
test
js
outsb
movsb
mov
stos
pop
jmp
test
adc
pop
lcall
incl
add
xor
xchg
dec
push
addl
notl
icebp
cmpsb
or
jae
xchg
aad
mov
lcall
xor
sbb
mov
imul
hlt
shlb
xchg
adc
imul
cs
insb
add
lock
pusha
mov
lea
jae
xadd
mov
and
shld
cmc
mov
bsr
shl
or
mov
pushf
bt
xor
stc
repnz
call
add
inc
outsl
insl
jo
jb
inc
imul
call
add
dec
popa
jo
imul
imul
incl
pushf
pusha
mov
pushf
lea
jne
shl
or
rcl
shrd
mov
pushf
pushl
add
test
movzwl
sub
mov
push
jmp
add
push
insb
jae
gs
popa
insb
jne
add
repz
inc
jge
push
mov
fstl
loope
pop
es
movsb
mov
push
cmp
and
aas
scas
mov
rcl
clc
cmp
cmp
pop
ret
and
adc
cmp
fwait
mov
xlat
cmpl
notl
xchg
adc
inc
bound
add
je
jb
gs
jb
arpl
jb
inc
add
xorb
cmp
jmp
lea
jbe
xchg
or
adc
sub
dec
mov
shld
rcl
mov
btr
add
lea
sar
shr
shrd
mov
pushf
shl
pusha
add
movzbw
mov
lea
jne
jmp
add
dec
jae
popa
fs
outsl
fs
je
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
stc
test
movb
lea
je
push
add
mov
pushf
call
add
inc
gs
jns
je
insl
dec
gs
imul
repnz
xchg
cld
test
in
sub
cmc
adc
pusha
cmpsb
popf
sbb
xchg
cs
mov
mov
push
xor
xor
mov
or
or
jmp
jle
mov
adc
and
pop
xor
call
jmp
xlat
shl
aam
pop
les
or
adc
push
mov
repnz
int3
jnp
cmpsb
hlt
call
filds
pop
and
xor
jg
xor
dec
mov
cmpsb
test
xchg
xor
clc
lods
jecxz
inc
ss
cld
test
mov
dec
outsb
imul
adc
adc
sbb
sbb
mov
inc
insb
mov
insb
sbbl
mov
mov
out
roll
rcrb
nop
sub
repnz
mov
out
xor
fisubl
cmpsl
nop
int3
jg
push
push
stos
lds
mov
xchg
jnp
xor
testl
and
lret
xor
jno
dec
xchg
ljmp
stc
leave
lock
out
outsb
xor
cmp
adc
mov
sub
fwait
bound
xchg
vmwrite
ds
xchg
and
adc
clc
xor
inc
frstor
ret
mov
mov
ret
repnz
dec
push
xor
dec
mov
out
cmp
push
or
data16
add
sbb
push
mov
and
inc
and
jmp
add
dec
gs
jo
gs
insb
insb
outsl
arpl
add
inc
insb
outsl
bound
inc
jb
add
add
je
jne
inc
add
add
je
imul
inc
js
inc
js
add
inc
gs
gs
popa
addr16
add
add
je
popa
jo
jne
add
add
jbe
push
imul
comiss
adc
stc
adc
pop
rorb
push
in
fcmovnu
cld
add
scas
xchg
mov
cmp
sub
insb
test
mov
dec
pop
lods
sbb
xchg
push
jmp
inc
xchg
std
xchg
adc
scas
sub
xor
das
cwtl
lret
pusha
aaa
out
mov
add
sbb
fdivs
xchg
or
cltd
aad
jnp
aam
adc
sbb
inc
mov
pop
jo
movsb
into
aam
lock
stc
xor
add
inc
gs
imul
popa
arpl
outsb
je
clc
cmp
add
push
stc
jmp
add
inc
gs
gs
popa
addr16
imul
insb
outsl
bound
inc
insb
insb
outsl
arpl
aas
data16
adc
les
sub
lea
and
out
sbb
scas
sbb
mov
push
mov
cmp
lock
ds
mulb
icebp
and
mov
push
or
cmp
sarl
pop
test
adc
jle
sbb
test
shll
shr
mov
jne
push
pop
xchg
push
or
and
xchg
scas
mov
pop
outsl
add
sbb
in
out
sti
inc
aaa
jge
fsubrl
xor
mov
jae
sbb
jmp
push
dec
add
jo
std
mov
xor
mov
inc
ljmp
jge
arpl
mov
sarb
pop
xor
mov
outsl
fiadds
sbb
or
xchg
or
jp
pop
xor
xchg
or
data16
arpl
push
mov
mov
mov
mov
mov
lods
mov
xor
das
outsb
dec
cmpsb
gs
mov
mov
xor
pushf
lea
ja
stc
imul
stc
add
push
push
lea
jmp
add
dec
popa
jo
imul
gs
add
add
outsb
jae
popa
je
dec
gs
popa
add
cmpsb
dec
ljmp
mov
pop
insl
mov
push
rclb
and
mov
inc
pop
lahf
mov
fists
mov
neg
or
cwtl
lock
out
cli
cmp
dec
imulb
sbb
xchg
jbe
xor
cmp
aas
fisttpll
push
lahf
xchg
jl
leave
fists
cli
cltd
lret
jae
addr16
cmc
sbb
push
mov
imul
in
or
adc
movsb
and
push
subl
or
dec
je
and
lret
in
mov
pop
xor
ss
jecxz
adc
cmp
mov
xor
sbb
jnp
add
or
inc
and
xor
mov
imul
clc
and
inc
popa
mov
adc
or
sbb
leave
dec
sub
imul
inc
stc
dec
and
fnsave
outsb
movsb
fiaddl
push
out
or
jg
inc
lea
xchg
or
ret
ja
push
mov
xchg
pop
adc
dec
push
out
xchg
or
jne
and
in
stos
fs
cli
adc
xor
and
fwait
cli
dec
cmc
cmp
jmp
gs
imul
jmp
push
cmp
cmc
cmpsl
leave
data16
xor
pop
cmp
add
and
sub
outsl
test
lahf
xor
jp
mov
or
jo,pt
jnp
pop
add
xor
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
fwait
ljmp
ret
mov
jmp
ss
dec
mov
loope
or
test
and
mov
or
dec
sbb
mov
pop
adc
mov
mov
daa
add
cmpsl
and
jo
mov
rol
sub
mov
int
push
stos
inc
mov
or
shll
adc
iret
xchg
adc
and
dec
jmp
ret
pop
aaa
jmp
lods
test
hlt
sbb
dec
cmc
inc
clc
xor
lods
ja
jnp
pop
or
jecxz
pop
push
or
push
popa
jno
into
cli
out
imul
adc
js
inc
mov
lea
mov
data16
mov
call
xchg
or
fwait
dec
mov
js
jnp
mov
sub
inc
adc
push
xor
xchg
or
inc
gs
gs
arpl
popa
jo
add
add
je
jne
jae
jb
outsl
jae
cmpsb
int
insl
add
loope
lea
sbb
and
dec
daa
jecxz
sub
inc
inc
sar
adc
data16
mov
xchg
aad
adc
daa
mov
push
add
das
sbb
xor
lret
mov
xchg
xor
cmp
xchg
adc
dec
mov
add
je
popf
lock
mov
orb
add
fisubrl
fnstenv
xchg
pop
js
and
aas
dec
icebp
mov
cmp
xchg
jge
xor
fabs
dec
inc
fs
loope
xchg
lret
stos
test
dec
movsl
in
scas
jg
aam
adc
cmc
fsubl
mov
cmp
mov
imull
cmp
cmpsb
cmp
les
gs
adc
xchg
sub
mov
sti
aam
sub
divl
xchg
or
fucom
sarb
mov
test
das
add
jge
xor
pop
jmp
ljmp
pop
arpl
fsubrl
fwait
xor
mov
sarb
mov
cli
push
dec
dec
dec
test
std
sub
xor
xchg
or
dec
enter
sbb
pusha
xor
sub
add
aas
mov
xchg
xchg
push
addr16
mov
pop
push
shll
mov
mov
sbb
out
or
xor
add
push
je
outsb
push
arpl
sub
incl
add
fs
je
push
imul
adc
pushf
movl
pushf
mov
pushf
pushf
pushl
ret
push
dec
dec
push
inc
push
dec
cs
insb
add
mov
lds
add
arpl
add
add
dec
outsb
je
jb
gs
jb
je
inc
imul
jne
cwtl
mov
movb
lea
setge
push
mov
lahf
pushf
jmp
add
inc
gs
je
imul
push
add
add
imul
jae
lea
jge
push
mov
lea
jne
xadd
neg
cmp
mov
rcr
cmp
sub
shl
shld
ror
rcr
mov
cmc
call
sub
pusha
bt
pushf
pushl
popl
clc
stc
cmp
movb
pushf
lea
ja
bt
sub
bts
add
lea
stc
mov
inc
mov
cmp
test
jmp
add
dec
outsb
je
jb
gs
jo
outsb
inc
add
add
insb
inc
imul
jo
imul
outsb
fs
add
add
stos
pusha
sub
bound
mov
cmp
aas
test
in
and
xor
cmp
sub
fidivrl
jl
lret
or
loopne
xor
add
dec
jae
imul
jae
popa
addr16
add
add
jo
je
push
popa
addr16
add
call
add
inc
outsb
popa
bound
outsb
jne
je
insl
add
add
je
jb
gs
gs
je
je
jae
popa
insb
insb
bound
imul
add
popa
jns
outsl
jne
fs
add
add
outsl
bound
inc
fs
je
insl
inc
add
dec
sar
push
xor
stc
pushf
add
bt
test
cmp
lea
lahf
pusha
lea
call
add
dec
gs
jo
gs
jb
jns
add
dec
jo
outsb
push
jb
arpl
jae
fistpll
lcall
push
daa
test
js
pop
imul
ficomps
mov
sub
cld
das
mov
neg
cmpsb
sub
push
jp
jb
and
add
ret
add
jg
jecxz
jo
ja
ficomps
sbb
loopne
dec
addr16
out
or
jns
jp
int
fcmovne
adc
mov
dec
jae
push
push
imul
xor
repz
ret
add
icebp
jmp
ret
xor
sbb
lahf
clc
pop
lods
jb
ror
out
push
cmc
push
aad
xor
pusha
xchg
jns
pop
dec
ja
ficomps
in
rcll
mov
xchg
divl
rclb
push
and
jge
stos
data16
test
clc
push
dec
jecxz
in
scas
mov
pop
inc
bnd
stc
and
sbb
cmp
fnsave
xchg
add
sbb
inc
mov
rclb
js
mov
add
add
das
into
outsb
fwait
ljmp
sub
orl
xchg
add
mov
nop
pop
mov
lahf
repz
sbb
shlb
xchg
add
jo
sbb
xor
sub
mov
bound
adc
adc
sbb
push
loope
xor
sub
push
cli
loope
cmp
xlat
clc
sti
dec
loop
jg
ficomps
sub
add
inc
imul
je
imul
incl
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jae
dec
gs
popa
addr16
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
imul
add
adc
jmp
not
mov
mov
pusha
call
pop
or
sbb
shlb
dec
or
pop
pop
push
hlt
or
xor
aam
push
sbb
aas
loopne
into
fdivs
jmp
xor
cmp
inc
xchg
mov
cmp
xor
sub
mov
pop
fnsave
or
xchg
add
pop
adc
aad
dec
pushf
pop
loope
cmp
xor
xor
add
inc
js
push
gs
dec
jne
inc
add
inc
and
jp
fs
jne
pushf
lea
jmp
ror
mov
pushf
pusha
movb
cmpb
lea
jmp
fiadds
repnz
mov
insb
aad
push
fwait
inc
fldenv
inc
imul
loope
stc
and
ret
or
sbb
divb
roll
push
dec
out
repnz
and
cmp
ds
loopne
and
ret
stos
in
mov
or
daa
cmp
fucom
xor
sbbl
add
lret
xor
inc
xor
mov
cld
test
xchg
push
ss
cmp
fs
incl
das
xor
or
lock
sub
sub
mov
xchg
jl
pusha
imul
lock
mov
cmp
cmc
xchg
jo
pushf
ret
test
lods
push
jmp
scas
pop
jne
pop
lods
insl
mov
mov
and
pop
and
mov
cld
adc
and
pop
call
sub
adc
xor
sub
cmp
and
scas
push
pop
into
cmp
stc
xchg
repz
int3
testl
daa
sbb
xchg
add
mov
adc
push
lahf
out
xor
or
xor
add
inc
imul
outsl
push
jns
je
insl
push
imul
insb
jae
gs
popa
insb
jne
add
add
je
jb
gs
jne
jb
inc
popa
je
inc
jbe
imul
add
push
imul
lea
jbe
shl
sub
stc
rcr
or
shl
mov
stc
sar
mov
rcl
call
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
push
outsb
fs
gs
popa
addr16
add
add
je
jne
jae
jb
add
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
jb
insl
jo
inc
add
add
je
insb
addr16
je
insl
add
inc
notb
fists
out
and
mov
stc
cmp
inc
je
movl
lret
aaa
or
pop
mov
test
movb
je
aam
sbb
pushf
sub
test
cmp
xchg
jnp
xor
push
lahf
cmc
xchg
or
cmpsl
xor
stc
jl
lcall
or
ud0
or
mov
mov
xchg
inc
mov
es
lahf
cmc
inc
in
or
bound
push
mov
xchg
decl
push
xor
inc
sub
mov
mov
js
mov
add
xchg
add
lods
push
cmp
cmp
pop
and
shlb
mov
scas
loope
add
push
gs
gs
inc
outsl
insb
outsl
jb
add
dec
outsl
fs
xor
dec
gs
add
add
outsl
bound
push
outsb
insb
outsl
arpl
add
push
gs
jb
jo
add
add
je
jns
inc
outsl
insb
outsl
jb
jb
jae
add
add
gs
inc
inc
add
add
je
inc
add
add
outsb
fs
gs
inc
imul
push
add
test
pusha
bt
cmpb
push
lea
jne
and
shr
sbb
mov
pushf
cmc
add
pushf
call
add
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
insb
insb
dec
gs
dec
outsl
outsl
imul
cmp
pushf
pushf
lea
ja
clc
jmp
add
inc
gs
jo
outsb
inc
imul
add
add
arpl
add
add
insb
gs
jae
inc
inc
add
add
fs
imul
add
inc
adc
and
lock
mov
push
pop
push
dec
icebp
mov
xchg
jl
fstpt
addb
sbb
mov
cmpsb
dec
xchg
add
jmp
insb
pop
popa
push
push
fnstenv
roll
mov
jge
ss
mov
stos
inc
movl
lock
xchg
adc
cmp
jmp
cmp
stos
adc
or
push
pop
scas
in
mov
loop
jns
out
adc
icebp
sbb
cmp
adc
pop
xchg
inc
and
inc
xlat
inc
xor
xor
jg
jge
mov
push
aad
cs
mov
jne
les
xor
jle
test
stos
push
cmp
cmpsl
lds
lea
pushf
ficoml
sub
jge
in
and
xchg
std
insl
mov
pop
insb
sbb
pop
and
xor
cmpb
cmp
into
test
and
sub
xor
scas
dec
ljmp
das
add
cmp
mov
nop
xor
mov
and
sub
sbb
das
pop
inc
xor
mov
push
jg
push
jl
cmp
xor
call
mov
mov
mov
js
xchg
cld
mov
inc
jb
popa
je
inc
imul
xchg
jae
cld
dec
scas
loopne
rcll
mov
daa
pushf
push
insl
fnstenv
movsl
fwait
mov
xor
jl
mov
movsl
fwait
mov
cmpsb
xlat
fsubr
mov
iret
jae
push
xorb
xchg
sti
int
mov
clc
mov
cmp
mov
and
xchg
cld
push
pusha
add
inc
gs
jne
jb
outsb
je
imul
jns
add
add
gs
imul
add
push
arpl
outsb
push
outsl
inc
insb
imul
insb
jae
jb
outsb
inc
add
add
je
arpl
gs
imul
add
je
outsb
push
gs
js
gs
imul
gs
add
inc
gs
imul
repnz
fistps
xor
pop
inc
xchg
test
mov
xor
push
hlt
push
lret
mov
mov
xchg
lret
pop
mov
jmp
pop
xor
dec
dec
test
and
jecxz
daa
push
xchg
lds
mov
mov
xchg
sti
sbb
add
mov
cmp
or
cmp
inc
or
jns
xchg
sti
lods
fisubrs
add
je
push
dec
outsb
outsw
add
add
outsb
push
jb
outsb
je
jb
add
xchg
fnstcw
adc
lret
arpl
lock
xchg
dec
lds
xor
ds
mov
jmp
movsb
adc
in
out
in
dec
fs
outsb
and
lret
xor
inc
rcl
sbb
ret
jmp
xor
mov
cmp
aaa
sub
lret
ljmp
or
inc
pop
dec
xor
cltd
test
jmp
xor
xor
scas
out
sub
popf
jl
fsubrs
sbb
shlb
xchg
cli
cmp
stos
or
jg
js
pop
out
sti
leave
mov
aaa
jnp
sub
gs
xor
cmc
fdivl
sub
movsl
adc
sub
dec
inc
loop
jmp
mov
dec
fld
and
jmp
ja
test
lahf
inc
and
outsl
out
xor
subb
sbb
imul
punpcklqdq
xchg
cli
imul
ljmp
adc
sti
xlat
xorb
cli
mov
scas
out
sub
fs
popa
dec
and
xor
shll
jne
clc
sbb
xchg
insb
xor
mov
xor
fstps
mov
fbstp
popf
mov
lods
pusha
xlat
xor
es
xor
add
je
jns
inc
outsl
insb
outsl
jb
call
add
ja
jae
jb
outsb
je
inc
add
add
push
gs
js
gs
imul
gs
add
dec
gs
imul
sbb
rcrb
sbbb
clc
cmp
pushf
pushf
movw
mov
lea
jae
pusha
clc
shl
mov
and
movsbw
shrd
test
mov
not
movzbw
mov
bt
call
cmp
add
call
add
dec
outsl
popa
fs
imul
add
add
je
jb
arpl
jae
gs
imul
gs
popa
jae
inc
jb
outsl
jb
add
inc
gs
jb
jns
imul
lods
mov
sub
jmp
shl
mov
jmp
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
dec
xor
cs
insb
add
mov
lret
xor
jb
jb
addr16
notb
sti
std
and
in
shrb
lock
xor
cmpsl
into
shll
aas
stos
pop
and
fsubs
int
scas
mov
out
lock
inc
jl
hlt
or
mov
or
aaa
mov
xchg
sub
les
mov
mov
push
aam
sub
in
inc
add
xchg
jo
aas
dec
xor
cmp
mov
fs
faddl
inc
idivb
xor
add
je
jne
dec
outsb
jne
add
push
gs
outsb
fs
inc
imul
adc
out
ds
orb
mov
stos
sarl
pop
outsl
out
fcomps
in
push
insl
or
and
mov
lcall
fnstenv
jge
repnz
inc
sub
mov
shr
jecxz
or
cmp
call
or
push
test
pop
lahf
mov
rcll
sub
inc
inc
inc
loope
ret
shrb
arpl
inc
repz
imul
pop
jg
push
push
mov
out
push
loopne
mov
sbb
jge,pn
push
dec
es
and
jne
and
hlt
pusha
aam
jae
scas
dec
ret
clc
xchg
adc
test
sbb
xchg
imul
les
mov
dec
cld
test
and
sub
xchg
jbe
xor
jge
ljmp
call
lcall
idivl
in
insb
insb
dec
cld
stos
cmp
mov
lods
lods
int
mov
dec
ret
mov
lds
pop
lock
xor
shll
mov
inc
cmp
mov
xor
xor
lea
je
inc
add
cmc
bts
btc
mov
cmc
add
cmp
jmp
add
dec
outsb
je
jb
gs
gs
imul
gs
add
dec
jae
imul
jae
bound
add
dec
gs
jo
imul
mov
push
cmp
call
jmp
sub
in
leave
je
das
testb
xchg
and
cmp
jno
push
repnz
mov
stos
in
xchg
jecxz
repz
sbb
add
cltd
aaa
jle
das
testb
enter
ret
pushf
ja
cs
jno
shll
push
pop
mov
popa
and
or
call
adc
xchg
cmc
push
mov
xchg
mov
adc
push
lcall
fimull
and
push
inc
cmpsl
decb
lock
inc
jns
mov
sbb
cmp
aas
and
fwait
das
notb
inc
mov
daa
invd
sub
lret
int3
inc
pop
and
out
hlt
push
mov
rorb
inc
pop
aaa
out
xchg
or
das
notb
popf
sub
xlat
jmp
and
cmp
das
xchg
push
in
and
out
or
xchg
cmc
jno
mov
stos
dec
or
loopne
pop
dec
adc
jno
xchg
hlt
inc
mov
fisubs
ja
and
das
and
inc
push
pusha
push
xor
xor
cmc
mov
clc
sbb
xchg
xor
aas
popf
leave
jl
fistpll
or
add
icebp
jae
nop
nop
push
aas
xor
mov
ja
jmp
iret
cmpsl
das
lahf
leave
jp
mov
jl
mov
repnz
pushf
lea
jne
cmc
btr
mov
lea
shr
ror
ror
sub
rcr
or
not
mov
clc
push
sub
movb
pushl
popl
push
cmc
cmp
mov
lea
ja
xor
sub
shr
push
pushf
add
add
movsbw
bsf
call
movw
mov
lea
ja
pushf
lea
jb
push
pusha
cmc
cmpb
call
add
inc
gs
imul
inc
add
xor
movsb
add
lea
stos
je
xchg
daa
mov
movsl
fcmovnbe
out
cmp
jne
cmc
shlb
add
test
push
sbbl
sub
mov
mov
hlt
es
mov
jecxz
jnp
out
cmp
pop
add
mov
mov
test
jnp
and
in
ds
shrb
sub
jno
push
adc
cmp
in
pop
sbb
dec
jp
and
mov
pop
xor
int
jge
dec
movsb
add
adc
insl
fs
jne
push
decl
aad
ds
scas
mov
jne
test
mov
and
mov
icebp
loope
mov
out
pmulhw
mov
out
ds
xor
jmp
ja
push
cwtl
xor
rcrl
lret
mov
fcmove
les
push
xor
imul
stos
dec
jb
les
fstpl
xchg
repz
or
xchg
pop
sbb
popa
xchg
aam
stc
dec
cli
sub
dec
xor
out
mov
es
push
mov
xor
sbb
sub
arpl
mov
mov
or
es
pushf
and
xor
sarb
lahf
inc
cmpsb
xchg
out
movsl
js
mov
xchg
repnz
stc
mov
inc
and
pushf
pusha
mov
mov
pushl
ret
add
inc
gs
gs
je
je
add
mov
dec
not
mov
cmc
cmp
jmp
lcall
cs
out
inc
ja
je
add
push
mov
jae,pn
sbb
cmp
mov
jo
fs
popa
push
mov
and
sbb
in
in
inc
lods
and
adc
cmp
and
out
ds
ficomps
cmp
mov
xor
movsb
sti
popa
mov
mov
sub
popa
mov
jecxz
clc
xor
adc
cmp
cmp
rep
in
xchg
xor
add
pop
sub
popa
in
rcll
pop
sub
xchg
icebp
jns
aam
adc
test
outsb
xchg
pop
ret
xor
push
lea
sub
pop
jne
xchg
repnz
sub
jo
sbb
pop
mov
dec
cmpsb
pop
mov
cltd
xor
add
je
je
imul
inc
add
aas
cmp
push
and
mov
jecxz
leave
andb
jp
jno
fbstp
das
aad
jmp
loopne
dec
jne
mov
or
into
mov
fcoms
js
mov
push
jno
filds
aas
or
fcmovb
pop
ja
scas
cmc
dec
adc
aad
imul
or
lcall
mov
aaa
cmp
data16
lods
call
dec
dec
xlat
lahf
add
sbb
ds
push
fbstp
adc
arpl
inc
sbb
imul
push
popa
bound
fs
gs
dec
jne
inc
add
or
jmp
lea
jbe
sar
stc
mov
bt
bt
setg
add
add
add
mov
pushf
add
dec
movl
shr
rcr
stc
clc
mov
sub
bt
cmp
call
add
inc
insl
jo
jns
insb
imul
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
test
cmc
sbb
sbb
add
sbb
cmp
mov
stc
test
jmp
fs
cs
stos
add
lods
push
jae
loop
test
mov
popa
ss
xchg
or
xchg
adc
mov
jg
dec
sbb
mov
cli
repnz
push
jnp
or
pusha
pop
mov
pop
div
xchg
and
lock
mov
push
ret
mov
dec
mov
mov
scas
xchg
shll
jbe
add
out
add
clc
mov
repz
rclb
xor
push
pop
xor
mulb
mov
cmc
add
jo
pop
or
dec
lds
shrb
push
popa
jno
into
cmp
add
dec
jae
imul
or
xlat
xchg
pop
call
dec
jnp
cmp
arpl
imul
xor
xor
cmp
fimull
jae
cwtl
add
fiadds
or
xchg
out
ds
jmp
mov
icebp
fists
pop
adc
addr16
test
or
mull
sub
loop
and
leave
ret
std
mov
lret
scas
add
fdivrp
js
and
imull
xchg
scas
xchg
lret
sahf
or
pop
in
cmc
pop
inc
cwtl
pop
cmp
push
xchg
scas
xor
mov
loope
outsb
out
movsl
sbb
std
aas
fbstp
dec
ja
int
mov
and
gs
xchg
out
bound
test
mov
cltd
inc
in
xchg
xor
push
out
ljmp
push
data16
xchg
out
mov
inc
faddl
cmp
cmp
push
xchg
pop
xor
cmp
nop
enter
pushf
inc
dec
cwtl
xor
jbe
setno
ffreep
sbb
in
lods
mov
xchg
out
ret
cmp
mov
push
xor
adc
xor
movb
inc
mov
call
sub
es
pop
mov
dec
push
inc
out
mov
cs
sub
imul
out
pop
dec
add
sub
pop
fdivrl
lea
sti
xor
sub
testb
xor
add
fs
arpl
inc
add
add
jae
outsl
jb
inc
inc
add
add
je
imul
arpl
lea
ja
jmp
jge
mov
push
out
pop
push
in
push
outsl
mov
pop
mov
sbb
sub
jnp
fisttps
cmp
adc
call
jecxz
roll
mov
and
enter
and
adc
pop
jbe
pop
pop
jnp,pt
inc
scas
xchg
or
jmp
loope
inc
adc
pop
xchg
enter
mov
and
aam
pop
mov
lods
xchg
pop
or
add
inc
pop
cld
cmpsl
cmpsb
and
fstl
out
dec
inc
and
xor
sbb
ljmp
shll
int3
jge
xor
fbld
mov
mov
push
js
ds
adc
xor
stos
add
add
fwait
xor
jmp
into
push
and
cs
sbb
ret
push
incl
xor
add
outsl
jae
inc
insb
imul
add
add
add
cmc
add
bt
stc
call
btr
sub
mov
pusha
push
cmp
call
add
inc
insb
outsl
bound
dec
popa
outsb
fs
add
add
je
jb
jbe
je
push
jb
imul
inc
add
inc
incl
add
je
insb
addr16
je
insb
dec
inc
add
add
je
jns
je
insl
push
imul
insb
jne
push
inc
jne
data16
add
mov
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
xor
sub
test
push
test
push
cmp
jmp
mov
pushf
bt
not
ror
mov
test
repnz
mov
pushf
pusha
pushf
lea
jne
pushf
movw
movb
movzbw
push
lea
pushf
mov
lahf
movzbw
movsbl
lea
pushf
call
add
push
imul
outsl
dec
jne
je
inc
jns
add
add
jb
popa
je
add
add
gs
je
push
imul
inc
add
add
je
outsb
jne
je
je
add
add
popa
jns
je
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
lea
jmp
mov
jmp
jmp
pushl
pusha
mov
call
jmp
pushl
popl
pusha
lea
jmp
pushl
popl
pushf
movb
lea
jmp
jmp
mov
pushf
mov
push
mov
lea
jmp
rol
bt
neg
movb
call
mov
shl
pop
clc
mov
jmp
push
mov
call
call
pushl
mov
sub
pusha
jmp
bswap
jmp
pusha
pusha
jmp
call
jmp
cwtl
bswap
mov
pusha
call
lea
jnp
pushf
pushf
popl
pusha
pushl
popl
push
lea
jmp
push
push
mov
pusha
mov
jmp
lea
jb
push
pushl
mov
pusha
pushf
mov
push
lea
jmp
sub
test
add
pusha
jmp
aas
and
dec
movzww
clc
pushf
clc
pusha
xchg
movb
movb
sub
lea
jns
clc
bt
clc
not
pushf
lea
jne
rol
call
pusha
lea
jb
mov
pusha
mov
pushf
call
mov
call
cmc
aad
mov
sub
aas
cbtw
movsbw
mov
not
or
bsf
mov
stc
sub
pusha
div
call
jmp
push
mov
jmp
mov
mov
pushf
lea
jmp
lea
jne
clc
xor
jmp
sar
cmp
rol
mov
cmc
call
aaa
mov
pushf
sbb
rcl
shl
mov
ror
test
mov
bt
call
bt
mov
shr
mov
sub
mov
call
movw
clc
pushf
cwtl
cmc
bt
sub
jmp
movl
pushf
pushl
popl
movb
mov
mov
mov
lea
jmp
pushf
movb
mov
call
pushf
pushl
popl
movw
push
lea
jmp
jmp
push
sub
push
test
cwtl
push
jmp
shr
and
pusha
mov
cmc
call
mov
pusha
mov
pushl
lea
jmp
push
pushf
push
pushf
call
mov
mov
pushf
call
mov
pushf
pushf
pushf
mov
pushl
call
mov
movb
mov
jmp
aad
mov
setnp
rcr
rol
btr
mov
btc
std
setbe
bt
mov
bsr
mov
std
neg
pushl
popf
lea
jle
movzbl
pushf
not
mov
pushl
mov
pushf
mov
not
bswap
bswap
pop
mov
pushf
mov
pusha
push
mov
movb
pushl
ret
call
lea
jge
pushf
cbtw
pusha
pushf
mov
mov
cwtl
call
pushl
popl
push
push
lea
jmp
not
lahf
aaa
setge
mov
ror
sub
rcl
mov
test
add
push
pusha
pushf
mov
pushf
lea
jmp
aad
not
notl
bsr
movzbw
mov
call
mov
bt
or
cmp
clc
call
pusha
push
add
add
jae
push
clc
shrd
movb
call
push
pusha
mov
pushl
pushf
pushf
lea
jmp
pushf
pusha
mov
pusha
push
mov
mov
push
movb
push
mov
pushf
push
push
mov
mov
jmp
imul
jmp
mov
mov
push
mov
push
lea
pushf
pusha
jmp
mov
pushf
pushf
mov
movb
pushl
ret
pushl
call
pusha
mov
push
pushf
pushf
movl
lea
jmp
jmp
push
dec
movl
sub
movb
add
cmc
sub
jmp
neg
add
call
mov
pushf
lea
jmp
pusha
mov
pushf
mov
pushf
mov
call
mov
pushf
popl
pushf
jmp
xor
call
call
xchg
jmp
sub
pusha
movw
mov
lea
jmp
sub
test
pusha
pushf
mov
bt
call
test
jmp
jmp
call
mov
lea
ja
push
mov
pushf
pushf
popl
mov
movb
pushf
mov
jmp
pushf
popl
jmp
rcl
bt
mov
or
shrd
bswap
add
cmc
shld
sub
call
shl
bswap
movzbl
xor
add
not
add
bswap
not
setns
rol
stc
sub
jmp
shr
daa
seta
btc
mov
cmp
test
cmp
stc
bswap
cmc
test
stc
lea
clc
cmc
push
add
pusha
push
push
pushf
inc
test
neg
jmp
pushf
pushf
mov
movl
mov
jmp
pushl
popl
pushf
pushf
movb
lea
jmp
pushf
mov
pushf
push
pusha
lea
jmp
call
mov
jmp
stc
pushf
call
setno
daa
mov
cmp
mov
mov
test
jmp
mov
call
mov
movb
pusha
mov
jmp
pusha
not
not
mov
movsbw
jmp
push
jmp
movb
jmp
mov
push
pusha
lea
jmp
cmc
adc
aaa
mov
pusha
shl
neg
mov
clc
sub
cmp
shl
jmp
push
mov
mov
call
mov
mov
push
divl
pusha
mov
call
call
add
pop
stc
movzbl
btc
movb
bswap
movsbl
mov
mov
pushl
pusha
clc
rol
clc
add
call
mov
pushf
mov
lea
je
pusha
mov
movb
jmp
mov
pushf
lea
jmp
cmc
pushl
stc
stc
push
pusha
add
pushf
std
pushf
cmc
pushl
popf
movb
lea
jmp
jmp
and
mov
call
jmp
pushf
popl
pushf
pushf
pushl
popl
pushf
pushf
pushl
push
lea
jmp
call
mov
pushf
pushf
pusha
pushf
lea
jmp
mov
jmp
pushf
pushf
call
push
jmp
mov
jmp
push
cmp
add
movb
mov
jmp
pushf
call
stc
shl
pushf
shr
jmp
xor
movw
pushf
jmp
decl
jmp
pushf
mov
movb
movb
mov
movw
mov
pusha
jmp
rep
shrd
stc
mov
add
test
shrd
test
mov
cmp
test
pushl
popf
mov
pushl
pushf
lea
jmp
pushf
jmp
jmp
xchg
call
mov
movl
movb
lea
jmp
sub
pusha
test
bt
add
mov
mov
jmp
jmp
mov
pushf
mov
call
push
movb
push
mov
movw
lea
jmp
mov
call
pushf
mov
pusha
mov
mov
call
push
pusha
pushf
popl
push
mov
pushf
pushl
lea
jo
pusha
mov
pusha
pushl
mov
push
movb
pushl
lea
jmp
pushf
mov
call
mov
call
call
lea
jge
push
push
pushf
mov
movb
call
jmp
pushf
mov
mov
mov
call
call
jmp
mov
movb
add
jmp
pushl
popl
pushf
movw
movb
lea
jmp
jmp
bsr
mov
neg
sub
js
push
add
pusha
sete
jmp
push
pushf
popl
push
jmp
call
mov
movb
lea
jmp
pusha
mov
pushf
lea
jmp
cmp
mov
clc
push
add
call
pushf
mov
pusha
movw
mov
mov
lea
jmp
mov
mov
jmp
dec
cmc
clc
sub
pushf
mov
movl
movw
lea
jmp
jmp
shld
pusha
not
clc
mov
push
movb
pusha
test
add
push
push
pushl
lea
jmp
pushf
jmp
push
pushf
pushf
popl
push
pushl
pushf
jmp
push
pushf
not
push
bt
rol
mov
pushf
jmp
pushf
pushf
pushf
popl
jmp
push
call
call
pusha
pusha
mov
call
call
mov
jmp
mov
mov
push
mov
jmp
mov
lea
jo
pusha
mov
pushf
jmp
pushf
jmp
mov
jmp
pushl
popl
movb
lea
jmp
jmp
mov
jmp
call
pusha
pushl
pushl
popl
movw
pushf
pushf
lea
jmp
mov
setg
bswap
movb
mov
pushf
pushl
mov
pushl
ret
push
mov
jno
push
pusha
pushf
mov
pusha
mov
movb
pushf
mov
call
jmp
pushf
popl
jmp
call
mov
pusha
mov
mov
lea
jmp
call
jmp
mov
movb
jmp
pushf
pushf
push
mov
pushf
pushf
popl
jmp
pushf
popl
pushf
pushl
popl
mov
push
mov
lea
jmp
cbtw
pusha
pushf
jmp
jmp
mov
decl
pushf
call
pushf
mov
push
call
mov
movb
lea
jmp
mov
jmp
call
push
jmp
mov
pushf
pushf
popl
lea
jns
pushf
pushf
pusha
mov
movb
push
jmp
call
movb
mov
pushf
pushf
lea
jmp
mov
mov
lea
jmp
call
mov
pushf
popl
call
sub
pushl
push
mov
pushl
mov
movl
lea
jmp
mov
shr
stc
sbb
mov
cmp
xchg
call
jmp
pushf
mov
pusha
lea
jmp
pushf
mov
bt
clc
pushf
mov
add
push
movl
lea
jmp
jmp
jmp
mov
mov
call
mov
push
pushf
push
pushf
popl
call
bsr
sar
mov
rol
add
jmp
pusha
call
lea
je
push
mov
push
pushf
popl
call
shrd
jmp
stc
sub
pushf
push
pushf
pushf
lea
jmp
mov
bswap
mov
push
idivl
pusha
pushf
movb
movb
mov
mov
movb
mov
push
mov
pushf
popl
call
movb
mov
push
mov
lea
jmp
movl
mov
mov
call
jmp
movw
movl
mov
mov
pushf
pushf
push
pushl
ret
call
cmc
pusha
bt
sub
test
cmc
bt
pusha
cmpl
pushf
pushf
mov
call
pushf
mov
pushf
jmp
movzbw
pusha
lea
mov
movsbw
movzbw
movzbl
movsbw
mov
pushl
mov
pushl
jmp
pushf
popl
call
push
jmp
cmp
call
rcr
mov
clc
shrd
pop
bt
aam
call
push
cbtw
push
cwtl
mov
jmp
inc
lea
add
pushf
mov
rcr
setl
add
not
jmp
sub
pusha
call
mov
call
mov
jmp
mov
movb
call
mov
pushf
call
sub
ja
mov
cmc
or
jmp
pusha
pushl
popl
pusha
pushf
pushf
movb
lea
jmp
bt
pushf
cmp
mov
stc
pushf
or
call
test
mov
jmp
xchg
sar
aaa
rcr
mov
pusha
and
clc
pushf
mov
pushl
cmc
push
cmp
sub
bt
bt
shr
push
mov
push
pushf
popl
jmp
pushl
jmp
mov
bswap
setg
jnp
mov
jmp
jmp
pusha
mov
mov
push
pushf
lea
je
pushf
jmp
cmp
test
shl
cmp
shr
movw
clc
clc
pushf
or
stc
pusha
xor
jmp
movb
jmp
pushf
call
add
mov
bt
lea
push
call
jmp
adc
daa
bsf
sar
mov
clc
call
pusha
mov
movb
call
stc
sub
call
pusha
mov
jmp
push
pushf
call
pushl
popl
pushf
pushf
movl
lea
jmp
mov
pushl
lea
jmp
pushf
pusha
mov
movb
pushf
push
mov
push
mov
jmp
push
call
mov
movw
mov
pushf
mov
movb
lea
jmp
btr
rcl
mov
pusha
mov
call
sub
call
call
pusha
mov
movb
jmp
sete
lea
aas
push
mov
sar
pushf
mov
cmc
pusha
push
add
pushf
pushf
pushf
mov
pushf
lea
jmp
jmp
mov
pushf
popl
jmp
call
mov
mov
push
pushl
pushl
mov
pushf
jmp
push
call
pushf
pusha
test
sub
movb
jmp
mov
stc
jmp
mov
pusha
mov
jmp
push
call
mov
mov
pusha
pushl
pushl
call
mov
clc
movzbw
bt
mov
sbb
sar
and
mov
clc
add
push
cmp
cmc
pushf
shld
push
pushl
pushf
movl
mov
jmp
mov
pushl
pusha
mov
call
pushf
push
mov
call
bsr
or
add
add
not
test
adc
inc
bswap
add
setb
rcl
clc
movzbl
btc
mov
pushf
rol
call
movb
dec
cmp
clc
sub
call
mov
movb
mov
mov
call
pushf
popl
push
movb
push
mov
mov
pushf
pushl
mov
mov
jmp
pushl
popl
mov
mov
mov
push
lea
jmp
shl
movzbl
push
pushf
pushf
test
add
pushl
add
pushf
bt
movb
jmp
add
sub
fprem1
sub
dec
out
add
jmp
sub
add
sub
fprem1
sub
xchg
in
and
sub
lahf
out
sub
shr
sub
jg
sub
xor
sub
fprem1
sub
push
loope
orb
sub
mov
sub
insb
loop
add
cmc
sub
or
sub
insb
hlt
sub
shr
sub
pop
hlt
sub
xchg
out
sub
fprem1
sub
pop
hlt
sub
es
add
jmp
sub
insb
hlt
sub
jmp
cmc
sub
mov
in
subb
shr
sub
insb
loop
orb
sub
fprem1
sub
add
sub
shr
sub
mov
sub
pop
out
add
cmc
sub
pop
out
xorb
add
jmp
sub
dec
out
add
cmc
sub
lret
subb
sub
shr
sub
jecxz
sub
es
add
cmc
sub
inc
repnz
xchg
fildll
add
jmp
sub
cld
loopne
add
cmc
sub
es
and
sub
jecxz
sub
shr
sub
insb
hlt
sub
push
loope
add
cmc
sub
mov
sub
shr
sub
xor
sub
inc
lock
fprem1
sub
and
sub
push
sub
shr
sub
and
sub
pop
in
sub
fprem1
sub
mov
sub
shr
sub
stc
in
xorb
xorb
add
jmp
sub
pop
in
sub
fprem1
sub
sub
sub
or
sub
add
sub
cld
loopne
addb
add
repz
mov
sub
mov
sub
jg
sub
jecxz
sub
enter
stc
in
add
sub
lret
sbbb
sub
jnp
sub
mov
sub
dec
out
add
loopne
add
sub
jecxz
sub
xchg
in
add
sub
lret
and
sub
es
subb
sub
mov
sub
mov
sub
insb
hlt
sub
xor
sub
mov
sub
jecxz
sub
mov
sub
jecxz
sub
pop
fisubrs
addb
add
add
loopne
adcb
sub
push
loope
add
icebp
sub
jnp
sub
add
sub
insb
loop
add
add
sub
push
loope
xorb
xorb
sub
xchg
in
sub
mov
sub
in
sub
xchg
fildll
xorb
add
ljmp
scas
out
sub
push
sub
jecxz
sub
xor
icebp
sub
xchg
out
sub
push
loope
xorb
sub
jmp
in
adcb
add
add
fisubrs
sbbb
sub
insb
hlt
sub
ds
add
sub
jecxz
sub
inc
repnz
mov
sub
mov
sub
lahf
out
sub
pop
out
xorb
sub
push
loope
cmpb
sub
lahf
out
sub
xchg
in
sub
mov
sub
insb
loop
adcb
add
jmp
pushl
popl
pushf
movb
pushf
movb
lea
jmp
rcr
adc
movsbw
mov
test
pushf
add
not
dec
rol
xor
mov
not
setb
bswap
inc
push
ror
shl
rcr
pusha
bsr
add
bt
rcr
adc
mov
mov
test
cmc
add
movw
call
push
mov
pushf
jmp
movb
pushf
pushf
popl
call
pushf
popl
pushf
pushl
jmp
push
mov
movw
pushl
movb
push
lea
jmp
mov
mov
jmp
mov
movb
push
lea
jmp
mov
mov
jmp
pushf
shrd
bsr
bts
not
pushf
bts
cmc
shl
neg
bt
jmp
mov
pushf
movb
movb
movb
lea
jmp
bt
not
stc
not
bt
bt
clc
test
sub
pushf
and
pushf
pushf
call
call
call
push
mov
pusha
pusha
call
add
push
pushf
popl
pushf
jmp
movb
pushl
inc
stc
ror
mov
clc
push
add
stc
pushl
cmc
call
pushl
mov
mov
pushf
popl
pushf
pushf
mov
pushf
jmp
push
pushf
popl
pushl
jmp
mov
push
call
jmp
mov
pushf
mov
lea
jmp
pushf
pushf
mov
pushf
pushf
pushf
lea
jmp
pushf
popl
pushf
call
pushf
pushf
popl
push
pushl
mov
call
mov
mov
pushl
pushf
call
mov
mov
lea
jmp
sar
cmp
movzbl
push
cmc
cmp
add
clc
pusha
test
cmc
add
clc
clc
rol
cmp
cmp
pushf
sub
cmp
add
bt
cmc
push
mov
cmc
pushl
cmc
mov
add
clc
movb
sub
push
pushl
pushf
push
mov
mov
lea
jmp
mov
call
mov
call
push
mov
pushf
pusha
call
pusha
mov
mov
pushf
lea
jmp
pusha
pushf
pushl
popl
push
lea
jmp
call
stc
mov
add
pushf
pushf
movw
mov
pushf
push
movb
pushl
ret
shl
mov
cmc
shl
mov
pushf
add
pushf
pushf
mov
mov
movw
lea
jmp
add
neg
cmp
add
mov
shl
shl
mov
push
cmp
sub
cmc
shr
pushf
push
pushf
mov
pushf
pushf
pusha
movb
pushf
popl
lea
jge
popl
push
pushf
lea
jmp
inc
lea
cmp
pushf
clc
cmp
call
sbb
push
call
cld
pushl
rep
call
rcr
pusha
mov
pushf
call
xchg
push
lea
jle
pusha
mov
not
bswap
pusha
call
movb
pushf
popl
push
pushf
mov
push
mov
pushl
jmp
pushf
popl
mov
call
mov
call
pushl
popl
pusha
movw
pushf
lea
jmp
mov
pushl
jmp
jmp
mov
push
jmp
mov
pusha
movb
lea
jmp
pushf
mov
pushf
pushf
lea
jmp
mov
pushf
popl
push
call
btc
ror
sar
btc
call
mov
pushf
lea
jmp
pusha
rcr
rcr
bsr
mov
stc
clc
test
add
call
xchg
jne
not
push
mov
pop
rcr
lea
dec
add
not
call
movl
call
movb
pushf
pushl
mov
jmp
cwtl
jmp
mov
mov
pushf
mov
push
pushf
call
add
add
pushf
popl
push
jmp
pushf
mov
pushf
pushl
movw
pushf
mov
push
pushf
call
pusha
jmp
mov
call
mov
call
ror
pusha
mov
bt
mov
cmp
sub
pusha
clc
shl
call
shld
add
aad
mov
btc
mov
jo
test
push
bt
sub
cmc
imul
pushf
call
mov
jmp
pusha
mov
call
lea
je
pushf
call
jmp
lea
cld
mov
pushl
mov
cld
jmp
pusha
jmp
mov
pusha
movw
pushf
mov
push
mov
mov
mov
jmp
mov
movb
mov
movb
lea
jmp
clc
sub
jmp
jmp
call
pusha
jmp
not
mov
pushf
jmp
call
pushl
mov
jmp
push
mov
pushf
pushf
pushl
mov
lea
jmp
pushl
pushf
xor
clc
xchg
call
movb
push
mov
movw
call
mov
pusha
pushf
push
lea
jmp
mov
pushf
mov
pushf
push
pushf
lea
jmp
mov
pushf
call
pushl
popl
push
push
push
pusha
lea
jmp
jmp
pushl
popl
pusha
pushf
push
lea
jmp
not
add
neg
sbb
sar
mov
cmp
stc
add
push
clc
jmp
test
stc
cmp
sub
call
mov
mov
push
mov
pushf
lea
jmp
movb
mov
pushl
movb
call
dec
mov
btc
pushf
call
mov
pusha
movl
mov
mov
jmp
pusha
mov
pushf
pusha
lea
jb
push
push
call
push
lea
jne
call
jmp
pushl
call
mov
pushf
pushf
pushf
lea
jmp
stc
shl
mov
push
push
mov
mov
call
sub
pushf
mov
lea
bswap
pushf
lea
pushf
call
pushf
movb
mov
call
jmp
lea
jne
setg
dec
add
xorb
pushf
sete
setl
mov
mov
push
lea
jmp
pushf
dec
lea
js
push
sub
jmp
sub
rdtsc
stc
sub
jns
pushf
push
mov
mov
pusha
mov
push
lea
jmp
mov
movb
movw
jmp
pusha
pusha
mov
movzbw
bswap
setno
movsbw
mov
xchg
push
seto
mov
not
movzbw
pop
mov
setae
setle
mov
xchg
push
movzbl
pushf
popl
push
clc
bswap
movzbw
mov
pushf
mov
rol
setb
btr
mov
lea
cmc
cmc
pushl
not
mov
pushf
pop
push
not
mov
btr
mov
rol
pusha
rcr
not
pusha
bts
xchg
lea
jbe
rol
sub
cmc
call
pushf
lea
jne
jle
pusha
push
mov
mov
movb
pusha
lea
jmp
push
pusha
jmp
movw
call
rcl
ror
push
movzbl
pusha
ror
setno
add
btc
shrd
adc
clc
add
movzbw
dec
pop
rol
sete
rol
shl
movb
neg
neg
add
cmp
add
lea
push
movzbl
bt
jmp
push
mov
pusha
pushf
lea
jmp
jmp
call
pushf
pushf
mov
mov
jmp
mov
pushf
pusha
mov
pushl
mov
pushf
lea
jmp
pushf
mov
pushl
mov
pushl
push
lea
mov
push
pusha
mov
pushf
movl
push
lea
jmp
pushf
pushf
jmp
mov
pushf
mov
mov
lea
jmp
rcl
mov
bswap
movsbl
sub
pushf
mov
mov
clc
test
add
jmp
pushf
mov
mov
pushf
mov
pushf
push
push
pushf
popl
pushl
lea
jg
push
push
mov
push
mov
push
lea
jmp
pushl
pusha
lea
cld
push
pushl
std
mov
movzbl
pushf
mov
pushf
cld
movb
pushf
movb
call
xchg
rdtsc
push
cltd
mov
mov
call
mov
mov
call
pushf
popl
pushf
call
jmp
cbtw
cmc
mov
push
cmc
push
jmp
push
pushf
popl
jmp
lea
ja
shl
cmp
cmc
mov
daa
neg
lea
shrd
sub
shr
daa
push
lea
shrd
sub
and
not
jmp
lea
jne
call
pushf
mov
call
mov
jmp
jmp
inc
jmp
call
pusha
cmc
bswap
rol
not
sar
inc
lea
shld
sar
stc
sar
sub
xadd
shrd
pusha
shl
lea
push
btc
shr
movsbw
mov
shrd
add
btr
mov
cmc
stc
add
ror
movsbl
rol
not
ror
add
bt
jmp
call
mov
jmp
pushl
inc
movl
mov
jmp
pusha
pusha
call
lea
inc
call
cwtl
mov
push
movw
call
je
cmc
clc
sub
cmc
xchg
cmp
cmp
push
push
cmc
clc
sub
pusha
call
test
rcl
jae
mov
pusha
stc
mov
add
movw
mov
jmp
mov
jmp
cmp
pushf
add
clc
cmp
pusha
cmc
add
movw
rol
test
pusha
cmp
neg
clc
stc
add
pushf
call
setb
mov
call
mov
call
not
push
not
bt
cmc
stc
and
movw
call
mov
pushf
call
pushf
mov
push
mov
pushf
pushf
popl
call
pushf
mov
jmp
pushf
pushf
mov
call
pushl
popl
movb
push
pushf
lea
jmp
mov
pushf
pusha
mov
mov
mov
mov
push
lea
jmp
pushf
call
stc
rol
push
mov
call
pusha
call
pushf
popl
mov
mov
pushf
jmp
daa
dec
btc
shl
mov
ror
cmc
add
sbb
mov
pusha
movw
mov
pusha
sub
stc
cmc
stc
pushf
mul
call
call
pushf
popl
call
mov
call
call
jmp
pushl
cmp
xor
add
setae
call
pushl
mov
pushf
pushl
popl
pushl
push
movb
lea
jmp
pushf
mov
call
pushf
push
movw
mov
movb
pushl
pushf
popl
jmp
cmc
mul
call
mov
cmp
sub
jmp
clc
sub
call
jmp
pushf
pushf
mov
mov
pushf
popl
push
jmp
mov
pushf
movb
movl
movb
lea
jmp
lea
jne
shr
setl
lea
bt
mov
pushf
cmp
test
bt
and
bt
call
setae
not
not
call
pushl
pushl
pushf
popl
push
pushl
popl
pushf
push
movw
lea
jmp
call
inc
push
pushl
add
pushf
bt
clc
sub
jmp
mov
pushf
call
pushl
popl
mov
push
mov
lea
jmp
pushf
popl
movb
pushf
call
pushf
jmp
mov
pushf
jmp
call
pusha
cmp
add
cmp
mov
sub
stc
add
call
mov
jmp
mov
push
pushf
jmp
pushf
pushf
mov
mov
movb
pusha
mov
lea
js
push
pusha
pusha
mov
pushf
mov
push
mov
movw
pushf
mov
jmp
not
neg
ror
add
mov
stc
call
pushf
pushf
mov
mov
pushf
pusha
lea
jmp
mov
push
pushf
mov
pushl
jmp
mov
push
pushf
push
lea
jmp
pusha
mov
pushl
movb
mov
movw
pushf
push
mov
pushf
lea
jmp
pushl
pushl
mov
call
pushl
mov
mov
pusha
pushl
pushf
lea
jmp
pushf
call
mov
call
call
mov
movsbw
stc
cmp
mov
ror
test
mov
cmp
pushf
sub
test
call
push
pushl
popl
push
pushl
lea
jmp
shr
push
pushf
push
pushf
mov
pushf
pushf
popl
pushf
pushl
popl
push
mov
movb
lea
jmp
pusha
mov
mov
pusha
lea
jmp
movw
call
movl
mov
pushf
mov
mov
pushf
popl
jmp
pushf
stc
rol
test
mov
cmc
neg
pusha
call
pushl
mov
mov
jmp
mov
push
call
mov
movw
mov
pushl
mov
lea
jmp
cwtl
movzbw
push
mov
jmp
pushf
call
cmc
add
jp
add
cmc
cmc
bt
add
call
pushf
call
push
mov
push
movb
pushl
pushf
lea
jmp
pushl
pusha
jmp
pushf
mov
push
pushf
jmp
jmp
call
call
call
jmp
pusha
push
mov
push
push
pushf
movw
mov
jmp
mov
push
mov
jmp
mov
call
push
mov
pushf
popl
movl
pushf
movl
mov
pushf
jmp
pushf
pusha
call
dec
cmc
sub
jmp
pushf
mov
pushf
pushl
jmp
call
jmp
call
sbb
bts
aaa
mov
cmp
bts
mov
push
stc
add
pushl
pusha
mov
movl
mov
pushl
pushf
lea
jmp
call
call
mov
call
jmp
mov
push
pushl
mov
lea
jmp
clc
sub
mov
push
pushf
pushf
mov
mov
movw
push
lea
jmp
movzbw
mov
add
mov
stc
bt
clc
clc
sub
jmp
mov
movb
movl
lea
jmp
mov
pushf
lea
jmp
jmp
mov
mov
push
pushl
lea
jmp
push
pusha
pushl
mov
mov
pusha
mov
pushl
movb
jmp
mov
call
call
mov
mov
pusha
push
lea
jmp
call
test
add
pushf
pusha
movb
pushf
mov
pushf
call
rcl
shrd
and
mov
pushf
add
call
mov
pusha
jmp
call
call
mov
jmp
mov
mov
movb
pushf
mov
mov
pushf
mov
mov
push
mov
movw
push
mov
push
pushf
call
jmp
jmp
mov
pushf
pusha
pushf
popl
pushf
mov
mov
pushf
pushf
call
call
sub
mov
shr
mov
pusha
stc
mov
add
lea
jae
push
pusha
pusha
mov
pushl
lea
jmp
call
lea
js
pushf
mov
push
pushf
pushf
push
mov
pusha
call
mov
pushf
pushf
pushf
movb
mov
pushf
pushf
lea
jmp
lea
jno
push
jmp
call
push
pushf
push
pushf
popl
call
mov
push
movl
push
push
pushl
ret
call
mov
pusha
call
mov
call
pushf
mov
jmp
mov
jmp
pushl
popl
push
pushf
lea
jmp
sub
neg
mov
sbb
mov
btr
bt
bsf
add
xadd
mov
push
neg
shrd
add
push
movb
rol
sub
rcr
add
inc
add
or
bswap
not
rcl
push
or
call
shld
xor
daa
mov
setb
rcr
sets
mov
push
add
call
cmp
movzbw
call
lea
call
pusha
pushf
popl
pushf
pushl
jmp
jmp
mov
mov
mov
mov
pushf
mov
mov
call
call
movw
pushf
dec
push
pushl
pushf
call
cmp
bt
pushl
popf
mov
mov
lea
jmp
jmp
pushf
popl
mov
mov
pusha
push
pushl
popl
push
push
movb
lea
jmp
movw
pushf
popl
jmp
jmp
mov
push
movb
mov
jmp
pushf
movb
mov
push
pushl
mov
lea
jmp
push
call
lea
je
pushf
pushf
pushf
jmp
call
aad
btc
aaa
daa
mov
xor
mov
cmc
stc
add
jmp
mov
call
movw
call
stc
add
bt
test
stc
xor
call
call
mov
push
call
mov
mov
push
lea
jmp
pushf
push
mov
jmp
dec
test
clc
sub
test
clc
pushf
add
cmp
pusha
sub
jg
cmp
sub
call
lea
cpuid
jmp
movl
push
pushf
popl
push
jmp
mov
call
cmc
test
add
pushf
bt
sub
movw
jmp
mov
mov
pushf
pushf
lea
jmp
jmp
mov
push
mov
pusha
lea
jmp
mov
movb
mov
jmp
pushl
pushf
mov
pushf
mov
movw
lea
je
pusha
pushf
pushf
popl
call
jmp
pushf
pushf
popl
push
mov
lea
jnp
pushf
mov
pushf
pusha
mov
pusha
lea
jmp
call
cltd
mov
cwtl
clc
pushf
aaa
mov
clc
sub
clc
pushf
pusha
imul
push
call
jmp
movw
pushl
popl
mov
lea
jmp
mov
pushf
pusha
lea
jmp
pushf
add
bsr
pop
not
shl
neg
movzbw
ror
btc
and
dec
jo
test
mov
pusha
add
call
mov
mov
call
push
mov
pushf
lea
jmp
call
mov
pushf
pusha
mov
mov
mov
pushf
push
call
jmp
rcl
test
mov
pusha
bt
sub
lea
jp
push
mov
pushf
mov
lea
jmp
movb
pushl
mov
jmp
not
stc
pusha
push
cmc
rol
push
call
