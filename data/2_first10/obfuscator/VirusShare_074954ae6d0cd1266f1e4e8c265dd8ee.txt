out
mov
in
add
sub
add
mov
mov
sub
outsl
fstpt
imul
cmp
or
movb
and
add
add
std
out
fistpl
mov
ret
cld
and
cli
or
sbb
in
in
add
or
imul
add
sub
sub
sbb
sub
fbstp
sub
cmp
mov
rclb
cmp
imul
dec
xchg
lods
std
repnz
scas
icebp
or
inc
push
add
out
mov
sbb
enter
mov
dec
sbb
jbe
cmp
or
pop
clc
mov
pop
mov
add
sarb
rorb
add
jbe
outsl
imul
sub
sub
mov
test
pop
shlb
or
ja
daa
sub
add
outsb
out
mov
pop
xchg
add
sbb
fstl
add
ljmp
or
fcmovbe
sbb
movzbl
fcomps
pop
sbb
rcll
or
push
mov
out
mov
inc
decb
mov
add
mov
test
imul
ret
jbe
fstl
mov
push
add
sbb
std
lods
shlb
mov
mov
jge
mov
mov
cmp
push
cmp
fcmove
adc
pminsw
mov
mov
mulb
cld
mov
rclb
cli
movups
mov
js
mov
push
mov
sbb
ret
imul
div
jb
add
mov
sub
imul
add
add
and
lock
xor
or
in
imul
mov
mov
out
mov
into
shl
outsb
testb
shr
in
sub
cwtl
lret
adc
or
push
adcb
push
imul
call
out
rorb
fmulp
insl
fildl
cmp
pop
mov
fcomps
sub
add
stc
cld
sub
mov
push
mov
jne
push
mov
lods
adc
push
call
mov
sbb
lods
push
inc
dec
incb
mov
andb
cmp
icebp
mov
testb
sbb
lret
imul
adc
and
push
inc
mov
sub
shr
mov
test
and
adc
mov
imul
or
mov
and
jbe
outsl
lahf
jle
imul
mov
cmp
ss
lea
ffreep
mov
clc
movzwl
or
mov
ljmp
add
sbb
mov
imul
adc
ret
rorb
adc
jbe
mov
aam
lea
lock
mov
adc
mov
int
dec
shr
pop
sbb
and
pushf
push
add
call
test
jns
adc
add
cwtl
add
and
shlb
cmp
jns
lcall
ss
pop
inc
pop
pop
test
mov
cld
dec
cmpsl
scas
insl
movsl
adc
rclb
gs
or
jecxz
add
in
or
inc
push
sbb
inc
clc
push
cmp
repnz
mov
adc
sub
mov
or
and
fmull
fsubl
mov
xchg
or
jmp
mov
pop
mov
lret
icebp
mov
adc
jecxz
addr16
push
cli
or
add
or
sbb
jecxz
push
mov
aad
inc
sub
or
fidivl
add
ret
xchg
and
in
ror
ret
data16
adc
push
fidivrl
jnp
clc
loope
jmp
imul
dec
ljmp
fiaddl
clc
shlb
loopne
mov
adc
sbb
addr16
out
or
push
shrl
clc
adc
enter
cmp
inc
lock
adc
cmp
mov
push
push
jmp
xor
sbb
and
xor
push
xchg
lock
imul
insb
outsl
scas
inc
pop
sbb
or
push
add
xchg
or
or
push
sub
sub
scas
mov
sbb
ret
sbb
fidivs
mov
pop
clc
lea
js
sub
add
sbb
mov
nop
jno
and
xor
imul
cmp
insb
inc
incb
cs
mov
adc
sarl
mov
or
rcr
inc
adc
lock
or
sbb
push
ds
mov
mov
or
add
or
and
jo
pop
sub
mov
or
pop
rcl
lret
or
or
cmp
xor
inc
or
idivb
push
js
std
das
sbb
push
subl
jmp
mov
rorb
dec
push
pop
or
adc
daa
adc
mov
bnd
add
loop
or
pop
scas
mul
outsb
pop
ret
div
les
aaa
fwait
mov
mov
sbb
cli
add
adc
inc
fcmovnb
lods
adc
jb
fwait
lret
inc
iret
dec
mov
in
pop
adc
push
add
or
icebp
test
icebp
clc
add
outsb
loop
jmp
arpl
push
out
adc
mov
sbb
loopne
add
lcall
repnz
pop
daa
or
mov
cs
stos
loop
or
int
pop
jge
jmp
data16
inc
scas
push
sub
mov
inc
sub
cmp
push
or
push
and
rorb
adc
mov
scas
cmp
push
mov
scas
pusha
or
leave
mov
cmp
data16
xchg
inc
jle
popa
clc
pusha
sbb
xor
push
cmc
mov
dec
dec
mov
jne
cmp
rol
mov
lcall
movb
shl
cmp
push
sbb
orl
cmp
out
or
push
xlat
data16
xchg
fisubs
jmp
cmpsb
scas
mov
fidivrl
cmp
and
cmp
inc
pop
lret
das
add
push
insb
into
insl
add
or
xlat
std
push
mov
arpl
xlat
les
push
shrb
add
pop
xchg
sbb
fildll
loopne
mov
inc
cli
mov
pop
out
mov
mov
mov
out
mov
adc
sbb
frstor
mov
add
cmpsl
rsqrtps
push
inc
clc
mov
clc
shl
pop
pop
mov
outsb
insb
sbb
sbb
fnsave
push
add
add
mov
leave
lret
sbb
sbbl
dec
sbb
push
insl
add
sarl
jo
or
into
mov
lcall
cmp
mov
add
ffree
xor
call
data16
mov
pop
jp
stc
lock
shll
call
xor
cmp
into
or
push
adc
roll
aas
leave
mov
pinsrw
xor
or
jge
out
imulb
test
rclb
or
inc
sub
inc
add
dec
ss
sbb
or
iret
inc
hlt
outsb
cmp
repnz
pop
dec
or
daa
sub
mov
dec
mov
jmp
jmp
cld
inc
leave
sbb
dec
mov
xor
rcrl
adc
push
and
stc
es
mov
pop
mov
int
insl
lret
nop
sti
aam
fwait
jo
or
loopne
add
data16
xor
rcrl
scas
xor
push
fidivrs
push
in
out
xor
inc
sbb
mov
jb
rclb
mov
daa
pop
or
add
movzwl
xor
or
push
sbb
test
or
push
or
and
xchg
sbb
insl
pushf
inc
lret
in
pusha
and
sbb
mov
push
pop
pop
xor
cwtl
fs
sarb
mov
cmp
push
mov
iret
push
add
test
ljmp
or
pop
jp
test
mov
mov
js
clc
jecxz
call
add
repnz
into
pop
cs
adcl
fwait
add
pop
or
add
pop
imul
sbb
sbb
roll
push
mov
outsb
xlat
pop
push
inc
fs
repnz
and
or
xor
mov
push
sti
call
ret
lods
mov
pop
cmp
push
mov
int
test
or
mov
xor
cmp
and
add
pop
in
icebp
inc
std
mov
xor
stc
push
fnsave
or
sub
adc
stc
push
jecxz
sbb
push
xor
jne
scas
decb
jmp
xor
fadd
pop
pop
sub
add
sbb
data16
stos
pop
call
xor
ret
in
mov
sbb
add
lea
popf
add
test
fcomps
add
lret
xor
mov
push
sbb
inc
mov
enter
sbb
mov
stos
mov
pop
rolb
add
mov
xchg
test
mov
jbe
sbb
and
pop
cmp
add
push
or
cld
xor
sarb
nop
mov
incl
mov
mov
jmp
pop
js
call
out
inc
sub
inc
push
or
dec
pusha
pushf
sub
and
psubsw
sbb
inc
sbb
sub
out
adc
cltd
cmp
pop
jmp
cli
bound
mov
das
outsb
sub
movsl
fimuls
jg
in
and
mov
cmp
adc
roll
decl
insl
or
push
mov
or
dec
adc
jo
mov
in
mov
pop
rorb
xor
out
pop
ds
int3
out
push
push
in
pop
icebp
loope
loopne
stos
leave
sbb
pusha
lret
repz
sub
mov
sbb
imul
jb
js
dec
mov
or
sarb
test
jg
and
push
and
fdivrp
subl
sbb
das
push
xchg
push
mov
inc
or
scas
out
psadbw
and
idivb
adcl
push
fwait
test
inc
xchg
rorb
push
mov
inc
jmp
mov
dec
fldt
loopne
add
in
mov
je
nop
rolb
pop
mov
mov
dec
mov
rol
pop
mov
xchg
arpl
or
inc
aaa
jb
iret
pop
leave
mov
inc
lea
or
bound
push
cmc
lahf
mov
bound
push
push
adc
inc
rorb
cwtl
je
sub
inc
push
data16
rorl
mov
ret
enter
adc
dec
test
adc
lret
mov
fwait
mov
imul
xor
scas
push
test
idivb
sub
mov
sti
push
push
mov
iret
fildll
push
pop
push
sbb
addr16
aad
lods
sbb
paddusw
inc
and
cwtl
out
sbb
dec
inc
lret
xchg
xchg
pop
or
into
jge
dec
cmp
push
push
push
push
or
or
lods
mov
jnp
adc
pop
mov
xor
repz
inc
add
push
loop
ss
cli
sub
push
push
fwait
subl
pop
or
sbb
sbb
orb
adc
fsubs
adc
mov
fadds
mov
push
adcb
icebp
test
jp
imul
das
adc
kmovb
lds
pop
mov
repnz
sub
mov
test
sub
or
out
cwtl
push
jb
lods
mov
loope
mov
adc
popw
call
popa
mov
rolb
mov
jp
enter
or
mov
in
push
xor
dec
mov
daa
mov
dec
movb
lea
mov
mov
mov
rcrb
cmpsl
push
sub
aam
push
xchg
push
and
not
sub
enter
pop
xchg
mov
and
jo
mov
or
lods
pop
fdivrs
ss
test
daa
pop
adc
mov
leave
add
xchg
rol
sub
or
clc
jo
mov
mov
rep
push
rolb
sub
cmc
add
sub
pop
add
inc
add
cs
cmp
cmp
stos
xchg
pop
je
adc
inc
out
mov
inc
inc
scas
or
and
or
mov
sub
call
cmp
xchg
lret
pop
out
add
icebp
addl
popa
sbb
ret
jb
sub
xor
mov
cmp
or
mov
push
mov
ret
add
jp
inc
daa
rcl
jecxz
push
roll
loopne
mov
es
sub
mov
mov
mov
or
clc
imul
mov
inc
shll
hlt
push
loop
mov
ss
cmp
jb
pop
icebp
ja
rcrb
pop
je
lret
push
mov
push
pop
scas
xor
lock
mov
mov
lcall
enter
sbb
cmpsb
shll
movl
sbb
adc
into
pop
lds
jecxz
aad
add
jl
cmp
test
dec
adc
mov
sub
or
cmp
sti
imul
iret
sahf
int3
dec
or
inc
lret
xor
inc
out
imul
add
sbb
push
je
jmp
add
movsl
pop
and
or
push
jmp
mov
cmp
cmpsb
mov
push
scas
loopne
mov
sbb
lods
ret
out
rcll
cli
or
push
pop
icebp
pusha
mov
xchg
mov
lret
xchg
iret
push
imulb
sbb
fdivrs
pop
scas
ljmp
sbb
pushf
sbb
push
ret
push
mov
repz
cmp
lods
or
or
fsubrs
sub
mov
leave
lahf
ljmp
loop
push
add
xchg
mov
push
les
inc
lea
in
out
jnp
adc
or
js
or
sub
sub
inc
push
jb
jecxz
dec
xchg
imul
imul
decb
xchg
stos
cmp
or
inc
fcomps
cmp
and
push
lret
sub
xor
mov
orb
dec
mov
sbb
leave
jo
mov
push
es
add
and
lods
jge
ret
popa
mov
int
mov
mov
adc
sbb
push
jb
mov
pop
and
cmp
add
adc
mov
or
sub
pop
popf
adc
and
push
ret
inc
cmp
xorb
mov
push
lea
sub
arpl
or
repnz
pop
cmp
jae
dec
or
jnp
add
inc
mov
mov
das
sbb
test
cmp
sbb
movsl
subl
int3
ja
adcb
xor
pop
inc
repnz
call
std
rolb
push
test
sbb
iret
inc
fdiv
jg
push
or
sub
push
push
push
repnz
adc
sbb
or
jg
pop
mov
push
adc
or
das
add
fs
pop
adc
push
xlat
or
movsl
in
and
add
rcrl
add
cmpsb
nop
lret
push
jae
lcall
push
or
xchg
test
mov
cmp
out
mov
fisubs
rcll
pop
mov
fs
sub
cmp
mov
incb
out
mov
xchg
cmp
inc
add
mov
jp
and
sbb
enter
dec
popf
lea
xchg
pusha
inc
dec
adc
inc
scas
mov
pop
je
mov
jg
inc
aaa
and
and
sarl
add
mov
push
dec
jo
push
out
jo
lea
movsl
sub
shlb
xchg
jmp
sbb
mov
mov
mov
push
sbb
aam
and
cmpsb
jecxz
or
mov
popa
loop
stos
adc
xor
push
lcall
aas
nop
sbb
pop
jns
push
pushf
push
je
ret
push
or
gs
add
xchg
call
rclb
mov
es
lods
add
icebp
push
sbb
imul
mov
fcomip
shrl
pusha
lcall
mov
dec
xchg
mov
lret
jmp
mov
add
shrl
cld
addl
shll
and
or
sbb
dec
adc
jmp
xchg
jae
aas
pop
mov
jp
jo
scas
hlt
pusha
pusha
xchg
adc
clc
insb
es
or
addb
popa
mov
inc
mov
mov
cli
stos
test
push
mov
mov
dec
sbb
in
loope
cltd
and
pop
pop
and
aam
ret
push
mov
adc
pop
inc
push
sub
xchg
jecxz
inc
stos
shl
mov
call
xor
pop
dec
loop
inc
mov
sbb
adc
jecxz
push
in
int3
pop
add
fimull
scas
enter
rcrl
sub
pop
jb
push
cmp
push
subl
jl
cmpsl
mov
or
inc
mov
sbb
imul
mov
push
or
mov
push
cs
jnp
mov
pop
lods
sbb
loope
test
push
jae
gs
push
sub
test
xchg
mov
push
xchg
cmp
inc
call
pop
push
call
cmc
roll
and
addr16
inc
or
lds
xor
mov
sbb
bound
mov
sbb
fcoml
mov
loope
pop
add
push
cmp
arpl
rorb
add
scas
lret
or
pop
pop
repz
shl
inc
push
ror
add
adc
rol
xor
push
xor
add
les
pop
xchg
jb
or
push
lds
mov
xor
lea
push
mov
jno
jne
testb
outsl
xchg
pop
cmp
mov
out
repnz
loop
jae
cmp
or
rcll
push
add
inc
xor
push
movsl
jb
or
sub
imul
xchg
in
push
ficoml
shrl
decb
sub
ret
or
sbb
shlb
bound
stos
sbbl
bound
sbb
sbb
pop
je
add
lret
or
add
nop
incb
fs
enter
pushf
mov
ret
dec
fwait
jno
sub
lret
push
pop
sbb
aam
popf
rcl
adc
mov
push
or
test
sub
pop
icebp
adc
int
add
popa
ret
or
pop
pusha
mov
and
adc
add
clc
or
cld
into
mov
mov
mov
push
xchg
sub
and
enter
inc
or
leave
aaa
dec
inc
test
or
adc
sbb
setno
test
pop
inc
fnstcw
fcomps
ja
dec
mov
fcomps
sub
dec
jne
jbe
stos
pop
xor
in
test
lods
xchg
mov
push
jmp
mov
inc
sub
rolb
sub
js
out
mov
jo
daa
xchg
sbb
es
inc
fadds
mov
push
mov
jmp
rcrb
popa
xchg
dec
xchg
or
adc
push
xor
or
in
sbb
pop
dec
jecxz
fldenv
rcl
add
pop
mov
loope
jb
aad
insb
call
faddl
push
int
mov
or
sbb
out
push
inc
in
and
test
sub
inc
jo
notb
xchg
popa
mov
push
repnz
nop
mov
outsl
ret
pop
push
inc
mov
sar
cli
mov
push
or
rcl
out
inc
jmp
mov
mov
dec
and
cmc
aaa
sbb
mov
or
sbb
aaa
clc
cmp
sub
or
dec
push
jp
mov
add
cmp
sub
jno
ljmp
mov
inc
and
jno
shlb
pop
cmp
or
imul
jmp
or
clc
adc
pop
aaa
inc
xchg
cltd
lret
adc
cltd
push
pop
sbb
in
and
jo
aad
subl
adc
mov
lods
movsl
adc
xchg
ror
test
jecxz
push
xchg
push
push
cmp
ror
mov
insb
xor
out
lret
cmp
bound
lds
jne
add
mov
sahf
aaa
popf
xchg
mov
rorl
push
enter
mov
adc
stc
icebp
add
mov
add
sbb
adc
dec
xlat
jl
std
popa
pop
orl
add
sbb
pop
andb
pop
sbb
in
or
rorl
les
es
mov
lea
push
mov
daa
xor
shrb
aaa
loopne
mov
adc
or
inc
pop
jo
aam
lods
or
xchg
icebp
pop
mov
adc
mov
add
fsubrl
fcoml
mov
cwtl
jmp
repnz
loope
loope
sub
dec
jbe
xchg
or
add
pop
aad
repz
adcb
push
add
or
dec
sarb
out
and
cmpsb
insb
jo
xor
push
cmc
mov
fsubrl
push
mov
icebp
nop
dec
and
enter
fisttps
test
and
cli
sub
or
jno
inc
outsl
xlat
mov
pop
sbb
jl
mov
xor
or
mov
addr16
pop
mov
ror
les
in
and
push
mov
pushf
push
push
imul
lret
cmp
or
mov
xchg
and
ljmp
push
push
add
inc
sub
es
sub
fstl
mov
jns
add
inc
cmpsl
mov
adc
mov
or
xor
cmp
movsl
lret
cmc
loopne
mov
push
adc
shrb
cmp
aas
push
push
pusha
bound
xor
xorl
in
mov
movsb
adc
xor
rcrb
leave
in
js
or
mov
cmp
xchg
push
lock
jbe
sbb
je
pop
xchg
dec
add
loop
xor
dec
dec
jecxz
jnp
lods
pop
sub
inc
push
jecxz
mov
rcl
insl
jno
int
pop
clc
mov
pusha
clc
xor
xchg
mov
mov
les
and
cwtl
xor
add
enter
push
imul
mov
popa
je
lret
xor
cmp
mov
mov
fimull
dec
or
into
pop
dec
in
xor
inc
ss
sbb
test
add
sti
rorb
push
adc
scas
sbb
push
dec
push
sbb
push
cmp
imul
mov
mov
loopne
sub
pop
mov
inc
addb
xor
subl
pop
mov
icebp
mov
lret
mov
inc
popl
popa
sbb
and
jmp
mov
inc
sub
sub
loope
fbld
adc
mov
test
aam
or
sbb
push
data16
cli
add
xchg
mov
outsb
jmp
out
add
popa
or
imul
bound
mov
xor
sbb
or
mov
mov
or
insl
jmp
fiaddl
cld
es
mov
jl
push
mov
pop
ret
sbb
push
mov
test
clc
cmovb
lds
cmp
mov
stc
pop
call
sub
cmp
repz
ljmp
inc
pop
popf
xlat
pop
adc
inc
stos
adc
or
popf
inc
cwtl
sbb
sbb
into
and
and
subb
sbb
sbb
mov
je
bound
and
inc
jnp
inc
sbb
pop
jecxz
adc
mov
rol
xchg
mov
not
addl
mov
xorb
test
jg
pop
or
int
repnz
pop
lods
xor
jo
test
leave
lahf
adc
or
or
rcrl
stos
inc
push
push
sub
aaa
loopne
add
sub
adc
mov
ret
push
rolb
mov
mov
add
push
in
sub
jnp
roll
mov
inc
call
push
push
and
push
jb
add
or
test
adcb
and
xlat
shlb
push
dec
or
push
and
ljmp
sub
fcomps
or
mov
mov
dec
or
sbb
and
inc
icebp
inc
adc
insl
or
sbb
dec
push
add
mov
xchg
push
mov
ret
insb
push
sahf
sub
sub
ljmp
push
push
adc
in
xchg
push
dec
jbe
push
sbb
inc
repnz
adc
inc
stos
mov
adc
pop
test
into
adc
adc
and
adc
rolb
jp
shrb
repnz
dec
test
subl
and
sbb
rcl
inc
imul
xor
xlat
roll
test
xchg
push
mov
in
inc
push
cli
or
cwtl
and
je
leave
inc
out
fisubs
sbb
aam
push
jo
sub
cmp
and
out
dec
fwait
push
push
icebp
sbb
push
inc
sbb
sub
mov
xor
xchg
loopne
xlat
add
into
aas
add
call
lds
adc
sbb
sbb
pop
gs
xchg
mov
inc
sub
aad
mov
push
icebp
jp
ret
mov
add
loop
pop
popa
ss
sbb
test
sarl
adc
jnp
inc
or
mov
mov
or
pop
adc
push
roll
int3
lret
sub
sbb
xchg
rclb
ljmp
test
add
orb
or
or
pop
popf
and
fs
into
cwtl
dec
aad
add
leave
movl
rolb
jmp
andb
cmp
loope
sbb
and
push
andl
sti
dec
icebp
cmp
dec
add
jbe
arpl
push
push
or
sti
and
pop
adc
adc
int
mov
fwait
pop
xor
xlat
adc
lods
or
movsb
push
and
popl
add
mov
jae
cmc
leave
roll
cmc
rcrl
push
insl
sarb
push
mov
adc
add
js
rorl
sbb
out
adc
sbb
mov
or
loopne
shlb
fisubl
rcll
or
inc
inc
add
ret
and
push
scas
push
daa
mov
dec
sarl
xor
outsl
ss
fwait
sub
test
lock
and
in
mov
hlt
imul
jns
repnz
push
ret
push
mov
push
sbbl
pop
cmp
dec
loop
dec
inc
mov
ret
mov
jno,pn
dec
add
insl
push
adc
js
lock
and
lea
sbb
roll
ror
push
int3
push
cs
ret
divb
pushf
inc
out
push
mov
push
push
sub
push
pop
inc
mov
test
mov
sti
pushw
and
psrlq
call
ret
sbb
push
repnz
jg
mov
pop
shl
adc
and
sbb
std
pushf
adcb
pop
lds
adc
push
lret
shlb
arpl
ficoms
pop
popf
sti
nop
cmp
and
scas
scas
sbb
mov
inc
pop
adc
sbb
jne
and
and
insl
outsl
mov
adc
rclb
or
push
push
cmpsl
addr16
add
lret
ret
shlb
sub
movsl
int
mov
repz
mulb
daa
sub
dec
sbb
out
add
imul
push
test
mov
sbb
mov
or
inc
ja,pn
incb
mov
aad
or
dec
jecxz
push
movsl
xchg
add
addr16
and
gs
fcomps
test
int3
in
mov
cli
shlb
stos
cmpsb
sbb
push
ljmp
popa
or
xor
mov
inc
push
adc
jb
in
shlb
cmpsl
imul
xor
test
ret
sahf
dec
push
in
lret
addr16
cld
scas
cli
into
ret
pop
cmp
mov
mov
cmpsb
mov
lcall
push
orb
shll
pop
rcll
call
aas
adc
int3
jnp
orb
xchg
sbb
xchg
cmp
ret
idiv
adc
addl
add
rorb
leave
jge
adc
push
cs
outsl
mov
or
enter
inc
push
stc
test
ljmp
adc
xor
sbb
shlb
adc
gs
push
testb
mov
pop
sbb
popa
outsl
adc
push
add
sete
sbb
xorb
addl
or
xchg
mov
or
xlat
ret
or
mov
jno
imul
push
sbb
dec
add
out
mov
in
and
cmpsb
cmpsl
mov
cli
or
sbb
aam
mov
rolb
lcall
sbb
mov
adc
shlb
jb
add
mov
inc
cmp
pusha
dec
jnp
into
mov
rol
lock
add
rcl
imul
mov
inc
add
add
mov
pop
adc
dec
push
inc
pusha
rolb
add
sub
add
cld
push
push
push
out
addr16
push
add
or
inc
mov
sti
push
mov
sbb
mov
sbb
inc
cmpsb
nop
aaa
inc
jnp
xchg
loop
sub
inc
adc
loop
xchg
cmp
pop
in
push
ret
or
ret
pusha
loop
or
mov
pop
jg
mov
push
mov
sbb
or
xchg
dec
push
xchg
imul
mov
cmp
push
pop
xor
inc
bound
repz
mov
pusha
or
xor
push
dec
int3
pop
sbbl
push
push
outsb
leave
fwait
popf
dec
push
sbb
int
js
test
inc
add
rorl
inc
push
sahf
pop
push
out
mov
out
mov
jns
mov
inc
add
lret
dec
adc
adc
cmpsb
outsb
mov
push
pop
xor
inc
iret
adc
rolb
mov
sarl
repz
xchg
loope
and
test
outsb
or
inc
loope
or
sahf
cmp
mov
mov
lds
sbb
insl
jo
add
xor
pop
dec
into
mov
xchg
aam
sbb
adc
push
call
push
push
mov
and
inc
jge
adc
add
jo
inc
jnp
cmp
insb
lcall
ret
in
mov
rcrb
sub
rcrl
adc
jo
sub
xor
cmp
xlat
push
and
push
sbb
stc
push
add
mov
ljmp
out
and
mov
ret
adc
or
call
push
shl
mov
jae
cli
mov
dec
pop
imul
pop
pop
ror
rolb
ret
push
adc
sub
inc
or
ss
jb
jo
jnp
jle
mov
cli
movsb
fwait
jl
push
mov
or
cmc
or
shlb
add
scas
rcrl
loopne
push
xchg
lret
or
test
or
and
push
dec
push
inc
rclb
insb
mov
jno
jmp
les
pop
lea
inc
xor
jg
mov
sbb
push
mov
lea
jle
sbb
popf
mov
pop
cmp
in
and
push
lret
call
addl
loopne
int3
jp
mov
gs
xor
mov
notb
mov
imul
call
leave
mov
xlat
push
aas
faddl
stc
or
inc
or
mov
jo
movsb
push
mov
dec
es
push
shl
mov
lret
inc
sub
mov
cmpsb
stc
xlat
add
nop
xor
pop
test
sub
cmp
loopne
sbb
popf
cmp
sub
xchg
out
ds
mov
xchg
mov
mov
and
das
push
btr
dec
push
jp
addr16
inc
or
cltd
je
mov
dec
les
test
xchg
clc
pop
scas
in
xchg
notb
xchg
add
lds
or
test
jbe
cmp
ret
xor
dec
and
jo
cmp
cmp
cwtl
rolb
mov
lods
call
fcomps
shlb
push
adc
mov
and
or
sub
popf
mov
sbb
mov
je
add
mov
jp
pop
mov
push
pop
pushw
mov
xchg
xor
cmp
pop
or
mov
and
push
and
mov
push
push
sub
loope
jne
ret
pop
push
adc
bound
adc
test
rorl
notb
or
fwait
out
add
test
add
ja
pop
popa
push
mov
stos
jb
arpl
push
push
xor
xorb
bound
push
clc
fstpt
data16
push
add
fldcw
add
xor
mov
stos
adc
dec
cwtl
jo
mov
jnp
cmpsb
sahf
sarb
ljmp
and
or
cmpsb
push
add
add
inc
repnz
rol
sub
test
sbb
inc
imul
outsb
fcoml
adc
adc
and
mov
stos
pop
iret
jne
call
cmp
xchg
cmpsb
ror
mov
mov
jb
lret
roll
movaps
fistpll
add
into
inc
jp
andb
pop
mov
sbb
push
shr
mov
xor
rclb
adc
mov
sbb
add
int3
scas
mov
inc
cli
adc
mov
mov
cmpsb
or
pop
mov
adc
mov
pop
cmp
add
rclb
popf
lds
dec
xchg
clc
add
aad
inc
inc
jl
call
fwait
jne
pop
mov
push
push
xchg
repnz
imul
adc
js
xchg
outsl
cs
mov
scas
daa
lea
sbb
add
in
xorl
pop
xlat
loop
rclb
iret
push
push
lock
lea
inc
scas
cmpsb
ja
add
sarl
add
in
in
adcl
add
mov
jbe
xor
xor
jno
or
lds
notb
jae
outsl
add
mov
sarb
insb
adc
mov
cltd
mov
cmovge
xchg
jo
fimull
js
push
shll
mov
lret
pop
push
mov
pop
sbb
add
push
xor
and
add
fwait
sbb
add
pop
jo
inc
andl
fisubrl
add
and
ret
std
idivb
sahf
add
or
int
outsb
test
leave
pop
call
xchg
sub
mov
mov
test
cmpsl
lcall
stos
xor
adc
pop
and
mov
push
das
imul
sbb
or
rcr
insb
jo
or
add
in
aad
icebp
sbb
js
pushf
sbb
dec
jo,pn
adc
mov
roll
roll
mov
stos
rcrb
popa
fnsave
inc
sbb
mov
inc
sbb
cld
adc
or
inc
pop
sti
ret
xor
lds
push
mov
push
jo
sbb
gs
xchg
js
repnz
xor
inc
repnz
iret
jp
add
icebp
sub
or
loope
mov
nop
into
inc
mov
shll
repnz
js
xor
js
push
cmp
push
pop
add
shll
pop
mov
dec
mov
mov
push
test
push
cs
insl
mov
xchg
mov
pop
jge
pop
fdivrl
add
fiaddl
stc
test
push
push
push
scas
push
fs
int3
jle
movsb
cmp
imul
shlb
inc
cmp
mov
andb
jl
adc
xor
pop
inc
notb
enter
mov
es
add
in
lock
and
andb
jae
loop
mov
push
sbb
das
push
jno
int3
cmp
mov
inc
xor
sarb
insb
push
lcall
jb
es
wbinvd
enter
mov
and
add
mov
incb
lret
jmp
add
test
adc
pop
mov
in
testl
cld
pop
lret
test
subb
add
mov
sub
sbb
mov
adc
and
and
cwtl
aam
push
and
push
xor
sub
jp
dec
je
pop
ljmp
in
mov
aam
stos
ljmp
scas
fisubs
mov
popl
stc
add
push
mov
adc
repnz
dec
mov
sbb
es
push
sbb
push
out
xchg
es
fnstenv
call
sbb
sbb
pop
sub
sbb
movsl
lret
sub
inc
push
add
mov
jo
addr16
push
cmp
xorl
dec
add
or
lcall
inc
imul
xor
inc
sub
push
push
jp
mov
dec
add
stos
push
les
mov
rol
sbb
mulb
or
push
scas
inc
sahf
add
popa
or
cmpsl
js
mov
jb
test
xchg
mov
cs
lods
adc
dec
loope
inc
ds
daa
fimull
aaa
inc
push
movsb
out
ret
push
pusha
pop
lods
sub
insl
push
insl
sub
ret
inc
sub
mov
pusha
out
and
ret
xchg
xor
mov
pop
xor
mov
aas
mov
test
pop
or
push
call
mov
push
cmpsl
pop
push
jo
sub
or
add
out
mov
int3
adc
inc
and
test
cmp
aaa
mov
cmpsb
sbb
jp
fidivrl
cs
cwtl
repnz
or
movsb
bound
adc
pop
xchg
out
or
adc
mov
lock
mov
adc
mov
push
jns
add
outsl
mov
shl
mov
sbb
lea
inc
imul
in
or
mov
or
sbbl
mov
les
cmp
adc
pop
loope
or
je
sub
test
adc
adcb
inc
sbb
lret
push
icebp
mov
mov
iret
mov
pop
add
and
mov
mov
cmp
push
lods
or
xchg
pop
js
add
loope
mov
add
push
int
rcrl
mov
iret
and
shl
add
sub
and
xor
mov
enter
sub
adc
ljmp
ret
sub
or
rcrb
jp
mov
arpl
or
inc
or
adc
bnd
pop
adcl
or
sbbl
ret
dec
inc
std
insl
addb
adc
das
cs
add
add
pop
sbb
xchg
push
pop
xchg
mov
je
xlat
or
int3
cmp
mov
clc
sbb
incb
test
cmp
push
ret
xlat
jmp
pop
fwait
sarl
mov
movsl
push
xchg
pop
inc
loopne
pushf
sbb
cmp
mov
inc
loop
sbb
stos
aam
push
sbb
sbbb
je
roll
es
xor
mov
cmp
inc
pop
cs
lock
out
in
add
or
sub
or
outsl
push
jmp
mov
or
loope
or
nop
push
xor
packssdw
lds
mov
add
mov
clc
lcall
fistpl
xlat
adc
dec
sub
subb
stos
and
mov
push
adc
xchg
push
push
push
cmp
mov
call
mov
add
adc
mov
jno
xor
dec
push
fadd
clc
push
scas
lret
pop
stc
or
ud2
adc
jecxz
mov
mov
sub
xchg
shll
mov
and
sub
negl
es
addb
scas
fimull
lret
dec
xchg
lock
xchg
test
jno
pushf
adc
test
sbb
movb
inc
es
sbb
stos
adc
sub
xchg
mov
jl
div
cmp
inc
xchg
inc
leave
ljmp
inc
data16
stos
arpl
pop
pop
ret
push
test
xor
jle
loopne
ja
popf
add
adc
adc
mov
cmp
sub
fcompl
movsl
cmc
mov
add
dec
fmul
add
fidivl
push
push
leave
and
cli
add
rorl
sub
dec
mov
gs
inc
aad
xchg
test
xchg
push
push
popa
sbb
push
xchg
sbbl
mov
jbe
ds
aam
pop
pop
push
push
sub
shlb
pop
xor
push
mov
sub
adc
or
faddl
aad
or
clc
leave
adc
imul
int3
mov
roll
out
push
test
jne
orl
cmp
sub
push
xor
sbb
adc
push
clc
pop
mov
aad
pop
stos
xchg
scas
push
movsb
push
xchg
hlt
or
add
push
xor
mov
mov
push
cs
mov
push
mov
push
push
in
inc
adc
sub
enter
pop
or
adc
int
imul
jmp
dec
ret
mov
cmp
sub
sub
movsb
dec
sarb
push
add
pop
inc
shlb
adc
and
into
sar
ret
adc
mov
add
imul
ja
lds
add
lahf
insl
andb
dec
inc
hlt
add
add
add
adc
ret
mov
loope
pushf
cmc
mov
mov
or
pop
mov
mov
push
in
mov
pop
lret
or
inc
hlt
sub
xor
xchg
cmpsb
add
sbb
or
xchg
pop
aaa
ret
mov
loopne
mov
cmp
out
outsb
fmuls
insb
xor
inc
fcmove
adc
sbb
scas
and
test
inc
add
test
xor
aad
and
adc
lcall
inc
mov
pop
popa
mov
icebp
adc
jp
mov
stos
inc
cmp
push
lahf
sbb
push
sub
out
dec
dec
mov
orb
pop
adc
mov
call
aam
mov
sbb
sbb
cwtl
aas
pop
bound
adc
add
pop
inc
cli
lret
and
pop
lret
sbb
scas
rclb
push
rclb
int3
sbbl
test
add
inc
inc
test
and
cmpsl
loop
xchg
push
les
xchg
jae
add
adc
roll
cltd
jo
adc
out
mov
es
jmp
and
insb
jno
rcrl
xor
inc
push
sub
daa
call
xchg
pop
add
scas
clc
shl
xchg
fcmovb
jmp
loop
loope
scas
cmp
adc
into
shlb
sbb
push
popa
ret
lahf
or
push
and
pop
or
sarl
add
adc
push
jbe
or
sub
rcrb
inc
mov
push
cmp
inc
and
fs
loope
add
mov
enter
add
in
scas
pop
sbb
pushf
rclb
jge
aas
jo
inc
ljmp
adc
ljmp
fwait
in
or
inc
loopne
in
stos
xor
lahf
cmp
push
out
fcoml
push
pusha
stc
aas
adc
cmp
or
or
push
add
xor
out
and
je
or
call
mov
lcall
pop
add
push
or
push
cmp
add
cmp
testb
cs
leave
lds
rolb
xchg
hlt
pop
cltd
dec
stos
insl
into
cmp
and
push
jno
test
sbb
jnp
jl
rclb
mov
and
js
mov
imul
xor
roll
mov
xchg
or
fsubrl
into
xchg
mov
sbb
adc
push
xchg
enter
lods
mov
mov
push
jecxz
dec
xchg
push
xchg
pushf
test
adc
add
mov
mov
pusha
adc
mov
adc
sub
stos
inc
pop
shll
push
or
pop
loopne
inc
mov
rorb
andl
and
and
inc
imul
test
jb
je
add
mov
je
gs
mov
adc
cltd
adc
aaa
cwtl
cmp
jg
push
push
inc
lds
shl
orb
mov
inc
pop
cmp
push
xchg
sbb
or
mov
icebp
sub
add
mov
push
or
daa
pusha
jae
mov
arpl
test
dec
push
adc
and
push
dec
pop
adc
sbb
stc
push
or
out
add
sti
loopne
ficoms
add
lret
jle
shll
pop
pop
push
sarb
sbb
inc
sbb
add
sysenter
adc
push
adc
push
out
adc
xchg
clc
or
push
jmp
jmp
lcall
dec
inc
stos
loope
adc
sbb
or
jmp
and
ret
shll
loopne
sub
or
inc
shll
push
les
add
js
or
push
add
and
ja
sbb
sub
push
push
and
shrl
js
inc
movsb
or
jecxz
add
or
call
mov
jp
cmp
leave
ret
adc
mov
jp
or
clc
or
mov
mov
push
mov
push
sub
mov
mov
push
leave
test
lods
push
sub
jge
and
sbb
aad
pop
jge
shlb
js
xor
es
test
lods
pop
addl
lret
add
ja
lret
ret
jo
adc
add
add
mov
pop
bound
adc
cmp
test
inc
mov
das
ljmp
out
lds
mov
or
in
or
adc
cmp
mov
xor
jno
xor
inc
and
jno
jmp
sub
sbb
xchg
movhps
xchg
test
test
sbb
mov
inc
test
mov
inc
mov
cmpsb
cmpsb
jbe
push
xor
add
ljmp
aam
lea
mov
in
rolb
lret
push
cmp
pop
push
push
nop
icebp
test
add
jb
xor
sub
pop
mov
pop
adc
or
push
pusha
adc
mov
pusha
and
pop
cmp
jl
icebp
icebp
sbb
xchg
addl
xor
pop
xchg
jo
fwait
add
xchg
jae
adc
addb
cmp
sbb
pop
stos
sbb
pop
movsl
loop
arpl
lret
jo
ret
stc
jno
mov
mov
or
cs
adc
pop
loop
loop
mov
add
aad
xor
adc
rcr
push
adc
sbb
mov
pop
cmp
pushf
adc
mov
mov
subb
icebp
subb
into
adc
faddl
leave
es
rcll
mov
add
dec
dec
push
mov
inc
or
adc
mov
ret
sub
test
adc
jb
roll
push
xchg
cmp
add
mov
loop
push
or
xor
fidivrs
or
aad
adc
cmp
push
and
mov
clc
cmpsb
dec
lock
aas
test
or
sub
pop
mov
cmpsb
popa
dec
push
cwtl
adcl
mov
fs
add
jo
jl
jae
inc
mov
push
lea
mov
fmull
push
jl
or
jo
lea
add
jg
mov
or
sub
push
mov
xchg
test
mov
dec
iret
or
mov
jecxz
sbb
adc
lock
push
jnp
mov
jb
mov
lock
aam
ret
adc
and
inc
xchg
testl
adc
mov
shlb
pusha
pop
aam
mov
roll
inc
pop
aas
push
sub
adc
shrb
stos
push
push
cs
adc
add
adc
mov
or
in
jne
movb
aas
or
mov
pushf
xchg
out
loope
popf
js
sbb
aaa
imul
in
lahf
ljmp
arpl
mov
mov
pop
sub
or
js
xor
test
rcll
ficompl
sbb
arpl
cmp
imul
stos
add
out
push
cltd
test
movsl
push
push
jae
add
xchg
ret
je
js
js
push
push
push
push
dec
lcall
cmp
test
push
xor
sbb
push
jo
shrl
push
icebp
sbb
hlt
push
pop
adc
inc
aaa
jbe
fadds
xstore-rng
cmpsl
subb
add
or
fsts
das
jns,pn
stos
push
or
call
test
pusha
sbb
push
popf
add
inc
inc
push
mov
roll
out
add
cmp
mov
or
xor
ret
lcall
pop
call
sti
je
andl
ds
subb
pop
shrb
cmp
mov
repz
andb
sub
cmp
jnp
xor
add
mov
push
mov
call
sbb
dec
mov
stos
cmpsb
and
rolb
sub
add
lods
sarl
jmp
mov
daa
xor
rcll
mov
jo
movsl
xorb
test
mov
into
push
dec
fsts
shll
shlb
add
add
push
adc
movsl
lods
dec
insl
jb
xchg
loope
sub
into
add
lcall
imul
add
pop
sbb
adc
xor
add
mov
push
mov
cwtl
inc
mov
flds
add
lret
js
and
mov
cmp
sbb
lock
fdivrl
sbb
lret
addb
and
mov
addr16
stc
adc
or
cmp
pop
test
push
fsubrs
adc
stos
inc
push
or
inc
test
mov
mov
push
nop
loopne
or
mov
scas
enter
sbbl
jo
add
outsl
mov
jle
pop
adc
sbb
cmc
pop
dec
cmp
adc
pop
aas
push
push
leave
leave
push
cmp
stc
sbb
add
jecxz
push
xorl
andb
test
and
mov
jo
inc
pusha
mov
or
rcll
push
inc
mov
push
mov
cmp
mov
aad
cmp
inc
test
mov
imul
jbe
lea
mov
jp
push
push
sbb
adc
mov
das
push
loopne
push
xor
mov
sub
and
lods
add
mov
and
cltd
lods
sarl
sub
cmp
xchg
sbb
push
inc
inc
jnp
or
icebp
sbb
add
loope
xchg
add
inc
add
call
adc
nop
test
mov
adc
adc
test
sub
loope
mov
js
int
cmpsb
push
sbb
icebp
aam
inc
mov
rorl
push
imul
adc
orb
xchg
lds
mov
adc
bound
dec
push
push
mul
mov
add
ficomps
push
xchg
sahf
insl
and
rorl
xchg
push
xor
adc
cmpsb
lods
enter
and
les
call
lret
lahf
mov
in
mov
call
or
mov
test
cmp
mov
rorl
inc
dec
cltd
mov
adc
pop
notl
or
ds
dec
sbbb
xchg
pushf
subl
std
mov
leave
dec
adc
cmp
adc
icebp
aam
pop
into
pushf
movb
and
adc
mov
sbb
and
pop
jmp
or
push
dec
xchg
icebp
push
inc
add
cmpsb
mov
push
icebp
jae
mov
pop
gs
shl
dec
out
inc
cmp
push
push
stos
pop
pop
push
or
adc
add
pop
mov
es
mov
mov
pop
bound
or
sar
rorb
shl
mov
testb
stc
mov
rcr
test
in
mov
les
in
inc
xchg
mov
pop
xor
loope
add
test
adc
enter
pcmpeqw
mov
sbb
push
mov
sub
jbe
xor
ret
or
add
xor
pop
xchg
add
stc
shlb
push
xchg
lret
sbb
and
or
loopne
popa
push
lds
push
pop
aaa
rol
aam
add
rol
add
in
out
fldcw
inc
or
es
je
daa
ret
out
fists
fs
xor
add
xor
inc
adc
jbe
push
ret
or
push
fdivr
out
or
sub
cmc
bound
aas
cmc
loope
mov
sub
and
subb
add
mov
sbb
iret
clc
push
mov
push
mov
jne
lods
sbb
popf
loopne
std
push
jns
push
icebp
clc
sbb
ljmp
xor
shrb
jno
rorl
xlat
jp
or
adc
adc
or
adc
xor
push
adc
rolb
add
xchg
dec
ss
mov
jge
les
leave
aad
adc
jmp
shr
mov
push
mov
mov
ficompl
pop
sarb
fs
cwtl
add
adc
loope
push
loopne
lods
mov
test
rclb
icebp
test
push
test
and
jbe
daa
rcrl
add
or
repz
xor
sbb
jb
and
mov
sub
orb
int3
sbb
lret
lahf
adcl
sbb
add
sbb
mov
imulb
xor
push
mov
sbb
dec
mov
mov
adc
sbb
jo
cmp
and
test
push
scas
or
je
dec
inc
js
mov
xchg
rorb
mov
test
cwtl
xchg
jbe
inc
inc
push
ret
stc
fwait
push
addl
or
add
enter
push
inc
rclb
ret
mov
repz
ss
mov
lret
stos
fs
nop
jnp
cmp
push
in
mov
dec
pop
shll
sbb
movsb
push
insl
lret
ljmp
rol
adc
or
inc
mov
cmp
jne
adc
pop
test
or
ret
sub
bound
sub
ret
push
inc
mov
rcll
sbb
push
loopne
and
mov
add
cmp
sbbb
stos
add
lret
movsb
or
das
pop
xchg
xor
push
pop
mov
xchg
add
adc
ss
jbe
mov
and
lock
imul
jo
add
repnz
mov
lcall
or
ljmp
ror
xor
cli
push
mov
arpl
jnp
or
inc
adc
out
rclb
add
imul
shr
or
add
sbb
aaa
pop
mov
adc
jo
divb
test
insb
adc
enter
aaa
inc
fwait
inc
xor
cmpsb
leave
sub
shr
adc
test
pop
mov
mov
pop
push
add
inc
cs
mov
lret
push
mov
adc
imul
roll
mov
pop
xor
jne
add
mov
andl
icebp
cmp
loope
xor
lods
xor
insb
xchg
add
rcrb
or
xor
leave
adc
int
mov
pop
clc
into
jno
sbb
iret
mov
mov
je
aam
je
mov
mov
or
adc
scas
lea
xor
add
testb
lds
push
test
inc
adc
xchg
inc
outsl
push
push
xlat
mov
mov
addl
shll
inc
xchg
mov
xor
ja
call
sbb
jns
push
aam
iret
inc
jo
into
or
xorl
mov
lahf
daa
lcall
pop
inc
inc
ljmp
adc
adc
xor
lret
out
int
jae
mov
aam
cmp
lea
pop
scas
jmp
sbb
push
mov
sub
and
add
mov
fistpll
int
mov
mov
testb
test
or
sbb
add
xchg
out
push
bound
shl
insb
cmp
jae
repz
out
xor
mov
shll
popa
push
add
add
xor
loopne
mov
scas
sar
cmp
or
pop
ds
inc
cmp
shlb
call
orl
test
add
addb
inc
dec
or
fwait
adc
add
fbld
add
orb
clc
dec
mov
mov
pop
inc
push
mov
jae
test
bound
sbb
or
mov
add
daa
rol
mov
xor
lods
mov
les
xor
test
dec
loopne
andb
push
add
call
inc
jl
inc
loopne
adc
push
mov
xchg
outsb
xchg
lret
aad
pop
cli
rclb
push
xor
cmpsl
stos
ret
xor
inc
sub
push
aam
adc
test
jno
pop
push
xchg
dec
jbe
mov
push
call
inc
cmpsb
dec
or
pop
or
jbe
aam
bswap
cmp
rorb
mov
bound
addl
pusha
loop
cmp
popa
cwtl
fnstenv
shrb
sub
sbb
dec
inc
jo
pop
push
lcall
in
mov
sbb
shrl
mov
imul
or
adc
push
mov
test
push
mov
loopne
pop
xchg
leave
dec
lds
sub
rolb
mov
pop
sbb
xchg
mov
mov
lods
mov
adc
push
xchg
ret
nop
mov
cmc
inc
call
sbbl
sbb
mov
push
xchg
loop
jne
xor
dec
mov
cmovp
or
sub
adc
xor
popf
rcrb
sbb
int
loope
mov
dec
stos
xor
dec
push
jno
xor
jmp
addr16
jmp
pop
add
into
inc
pop
mov
pop
fwait
sti
push
fwait
pop
les
add
xor
pop
adc
mov
shl
loope
and
push
sbb
push
adc
cs
into
jecxz
adc
pop
cmpsl
sbb
and
and
mov
inc
inc
pusha
mov
imul
lds
adc
lahf
add
or
dec
ljmp
push
or
bnd
mov
cmp
push
rcl
and
add
push
push
xchg
and
add
mov
cmc
push
rcr
inc
push
jnp
dec
stos
iret
nop
aad
sub
mov
fisubrs
sub
jb
adc
add
cmpsb
mov
mov
pop
in
int3
push
mov
js
jl
adc
sbb
shl
sub
push
bound
inc
sahf
xchg
inc
fs
rclb
and
add
add
les
fs
mov
mov
and
sbb
mov
mov
push
pusha
or
cwtl
mov
xor
pop
ret
add
and
clc
or
rolb
jbe
sbb
xor
mov
xorl
sbb
pop
stos
cmp
inc
xchg
mov
dec
bound
roll
les
test
aad
xor
repz
and
nop
mov
adc
stos
stos
add
or
lret
call
andl
xchg
push
push
dec
adc
addr16
lahf
out
adc
stc
adc
sbb
push
mov
or
adc
pusha
sub
loopne
aas
cmpb
and
sbb
incl
jle
sbb
cli
sbb
rorl
jnp
add
push
fs
rclb
jo
push
mov
sub
arpl
les
mov
popf
push
aam
mov
bound
in
jl
nop
insb
sub
pop
cmp
jne
push
adc
adc
leave
test
mov
add
and
adc
push
cmp
pop
inc
fnsave
add
mov
inc
ljmp
sti
jp
clc
paddusw
xchg
xchg
aam
dec
ret
mov
arpl
sbb
xchg
or
aaa
push
pop
add
pop
adcl
or
es
pop
pop
enter
fmuls
jp
mov
rolb
or
pop
mov
adc
and
cli
pop
movsb
add
mov
jns
addb
test
test
inc
jb
mov
xchg
call
xor
cmp
pop
cmp
sbb
aad
rcrl
dec
in
sub
ljmp
cmp
add
aam
push
mov
nop/reserved
enter
or
push
dec
stc
push
sbb
adc
jne
push
lods
je
cmp
inc
sbb
lret
cmpsl
ljmp
and
js
addb
jecxz
ret
add
ds
mov
in
pushf
mov
negb
mov
inc
sbb
dec
push
dec
add
push
or
popa
push
jno
and
adc
ret
in
pop
sub
rolb
jnp
xor
add
or
test
addr16
push
and
add
pop
sbb
ljmp
cmp
push
dec
mov
mov
in
gs
bound
pop
mov
aad
mov
ret
insw
cs
inc
stos
mov
popf
inc
adc
loope
loope
cmpsb
cmp
mov
aas
mov
inc
sub
jne
jp
sbbb
das
or
ret
je
push
push
xor
ds
push
in
add
inc
je
or
inc
icebp
addr16
push
cli
mov
and
test
adc
xchg
jae
add
in
pop
popf
pop
shlb
mov
push
pop
lock
pop
mov
std
inc
adc
mov
pop
cmp
sbb
xor
or
mov
xchg
dec
mov
movb
mov
fs
gs
js
push
in
insb
sbb
or
aas
mov
arpl
xor
cmp
and
pop
adc
push
xchg
adc
mov
mov
leave
sbb
into
mov
andl
mov
orl
stos
cmp
add
data16
cs
cmp
out
stos
fxch
adc
mov
sbb
or
or
sub
xor
lahf
test
push
dec
mov
push
mov
mov
minps
fs
adc
nop
push
std
lods
xor
jno
mov
sub
rol
or
add
cli
sub
ljmp
sub
adc
aad
js
adc
subb
cwtl
sub
mov
frstor
rcrl
adc
dec
dec
add
andl
clc
int3
mov
push
add
add
mov
sub
and
into
adc
push
lcall
pushf
dec
pop
xchg
sbb
xor
stos
pop
fcmovu
sbb
or
and
aam
and
push
push
xor
xchg
mov
sbb
sub
arpl
and
lret
or
leave
sub
mov
mov
es
push
add
aaa
mov
adc
rorl
lds
test
loopne
hlt
xorb
lea
inc
cmpsl
push
int
outsl
gs
lock
pop
stos
sub
sub
call
adc
push
cmp
cmpsb
test
sahf
push
mov
ljmp
cltd
push
test
adc
push
xor
push
or
xor
out
lock
mov
cmp
clc
decl
out
out
test
aaa
lock
fiaddl
mov
push
not
push
imul
sbb
mov
das
add
mov
or
cmpsl
incb
lcall
inc
mov
and
add
jno
out
scas
aas
arpl
xchg
jno
xor
ljmp
fisubl
mov
adc
orl
movsb
test
pop
out
repnz
add
cmp
dec
sbb
push
xor
add
add
inc
cmp
les
cmpsb
mov
pop
loopne
mov
mov
nop
pop
ret
in
pop
adc
mov
or
cmpb
adc
sbb
push
push
jo
test
jns
call
cmp
and
fcomps
clc
adc
stc
add
mov
sbb
push
sbb
test
cmp
sub
push
rclb
sarl
loope
hlt
fdivrs
push
sbb
cmc
xlat
mov
dec
ficompl
notl
xor
sbb
add
sub
lods
lret
xchg
pop
lcall
or
xchg
roll
push
repnz
push
call
xor
jnp
fstl
add
arpl
mov
mov
jmp
add
push
icebp
call
fs
lret
adc
push
shl
loope
cmpsl
andb
pop
jns
xor
lcall
in
aam
adcb
jb
popf
add
into
add
or
in
pop
outsb
sub
mov
push
adc
mov
imul
and
pusha
clc
adc
fistpl
rorb
or
rorb
jo
repnz
push
out
sbb
inc
in
xor
orb
nop
stc
mov
xchg
daa
mov
sbb
shll
cmpsb
mov
stos
push
hlt
push
popa
sub
push
fmull
adc
les
test
pop
mov
sub
add
enter
xchg
test
push
jns
leave
or
sbb
pop
sbb
xchg
fwait
and
pop
sahf
clc
inc
mov
mov
or
jo
sub
lds
pop
in
sub
xchg
xor
adc
fsubrl
push
add
subl
pop
mov
sbb
sub
jl
rolb
or
xor
adc
aas
lret
push
push
jb
and
pusha
push
scas
dec
cmp
jnp
inc
mov
lahf
clc
adc
cmpsl
add
push
fstl
arpl
xchg
loopne
sbb
movsl
pop
push
mov
sub
fcompl
stos
fs
push
adc
lahf
les
mov
dec
push
push
cli
loop
xor
add
push
jecxz
ljmp
cmpsb
inc
push
push
std
sub
or
sub
dec
bnd
bound
addb
stos
int3
xor
push
pusha
and
cmp
cmpsb
loopne
call
scas
fcoms
cmc
xchg
and
dec
lcall
inc
les
aas
loopne
stos
inc
jb
xor
cmp
or
add
add
lret
test
rolb
stos
adc
movb
push
insl
rep
xor
mov
push
lret
inc
loop
jae
or
add
fmuls
loopne
push
and
mov
add
dec
and
add
inc
and
jle
sbb
dec
cmpsb
test
pop
rolb
or
adc
add
cltd
or
or
mov
jecxz
shlb
cs
ret
adc
jne
pop
mov
cmc
lret
pop
div
scas
popf
sub
xchg
ficoml
mov
fidivl
mov
decb
imul
pop
sbb
roll
jg
lret
adc
pushf
inc
fwait
nop
std
test
fwait
stos
adc
add
stos
scas
addb
shlb
adc
scas
sub
adc
xor
push
xor
dec
enter
out
test
cltd
jo
cmc
inc
or
dec
pushf
mov
mov
imul
hlt
aad
sub
add
adc
and
stc
cmp
lods
sub
add
cmpsb
testb
outsl
or
in
cmp
add
push
push
mov
push
xor
push
xchg
shll
mov
icebp
push
pop
rolb
push
add
stos
sbb
fadds
and
shl
imul
add
mov
push
pop
loopne
push
faddl
mov
sbb
js
push
sbb
mov
inc
xor
mov
jne
mov
mov
test
cmp
ss
cwtl
hlt
test
or
lods
lcall
orb
test
pop
jmp
cmpl
jmp
stos
pminub
sbb
and
in
cmp
pop
inc
cmpsl
and
push
mov
es
pop
lds
xor
add
shl
adc
adc
pusha
mov
sbb
adc
rclb
add
adc
aad
inc
jl
xchg
mov
push
andl
dec
test
add
sbb
mov
mov
shl
lret
xchg
inc
mov
mov
cmp
js
and
leave
popa
rolb
stos
cmp
je
pop
push
inc
fisttps
mov
jo
and
sub
push
lret
or
dec
testl
push
or
pushl
mov
sbb
sub
xchg
mov
adc
stos
dec
xchg
and
sub
test
in
xchg
sub
adc
call
jp,pn
and
int
jno
mov
mov
adc
jnp
stc
mov
bound
add
or
or
sbb
mov
enter
pop
mov
call
sbb
dec
push
lods
cltd
xchg
push
popf
sub
sbb
adc
hlt
cmp
popf
push
fwait
push
sub
mov
or
subl
pop
push
out
enter
lea
insl
popf
ret
jo
add
jle
push
ret
inc
cmc
mov
cmpsl
jge
mov
js
cmp
orl
stos
pop
incb
test
in
push
bound
jl
jo
popf
jo
roll
inc
mov
ret
adc
iret
add
xchg
loop
xor
and
mov
push
cs
lcall
cmp
cltd
stos
mov
lods
xor
inc
inc
mov
push
mov
cmp
jp
jmp
sub
test
xor
push
add
or
jl
pop
and
jbe
adc
cmp
scas
inc
xchg
sbb
shlb
push
xor
mov
and
cmp
test
test
icebp
adc
mov
inc
loope
jns
lods
xor
enter
roll
cmc
inc
push
ljmp
add
mov
es
sbb
roll
sub
fiadds
xor
add
jmp
cmp
jo
rorw
pushf
sub
negl
fs
pop
and
mov
fsubrs
push
in
dec
cmpsb
sbb
movsl
xchg
mov
mov
gs
push
arpl
shlb
and
mov
inc
push
add
test
fcoml
sub
icebp
test
or
xorl
pop
add
sbb
jo
divl
adc
pop
and
icebp
dec
jp
inc
pop
jl
test
pop
rclb
push
xchg
add
inc
push
stos
adc
push
enter
inc
push
js
std
ret
dec
or
mov
ret
sbb
adc
adc
cmpb
push
int
pushf
push
dec
repnz
lock
or
sbb
inc
mov
adc
mov
inc
rol
std
mov
sub
hlt
and
fs
adc
xor
mov
jno
inc
pop
pusha
and
or
adc
or
jns
push
xchg
mov
push
rorl
jle
pusha
pop
push
inc
xchg
sahf
adc
mov
jl
in
scas
test
into
mov
add
mov
test
xchg
leave
push
and
push
push
scas
dec
rclb
aam
push
outsb
int
pop
cmp
xchg
data16
rorb
or
ret
pop
adc
ljmp
push
mov
cli
rcrb
pushf
mov
sbb
push
mov
jg
adc
iret
mov
cwtl
pop
mov
sub
nop
daa
adc
add
pusha
fcomip
push
add
push
inc
lods
add
sbb
inc
loopne
sub
fdivrl
pop
stos
inc
addl
or
mov
add
cmp
xchg
ret
shlb
ret
bound
sbb
dec
push
cmpxchg
outsl
movsb
cltd
xor
push
insb
std
jo
and
pop
cmpsb
mov
push
push
test
je
cmc
fs
push
test
jmp
int3
stos
incl
push
push
push
push
adc
into
pop
scas
mov
sbb
sbb
or
out
cmpsl
xchg
push
xchg
test
popf
int
xor
pop
add
bound
sub
scas
xorb
insl
inc
enter
lods
sbb
rclb
pop
add
sub
jecxz
sbb
or
mov
pop
adc
mov
shlb
add
addr16
add
or
mov
lods
sbb
rolb
lock
sbb
jne
out
adc
push
sar
pop
adc
stos
sub
jnp
mov
inc
orl
add
movsb
arpl
fwait
mov
adc
or
add
sarb
xchg
ja
pop
dec
add
ret
push
mov
inc
mov
cli
mov
in
mov
subl
push
sbb
mov
ds
call
xchg
mov
aas
test
pusha
sbbb
add
inc
adc
sbbl
jmp
lods
lcall
inc
xor
loopne
adc
push
repnz
cmp
sub
cmp
mov
adc
mov
stos
sbb
scas
sub
add
loopne
add
add
movsl
sbb
mov
test
imull
add
push
adc
inc
xor
adc
lahf
push
aad
negb
ja
xor
xor
or
unpckhps
push
jnp
or
ret
rcrb
push
push
mov
jo
inc
lea
cli
dec
aaa
fists
imul
mov
and
lock
xchg
cmpsb
adcb
repnz
xor
pop
loope
pop
daa
shll
or
mov
repnz
sbb
sub
and
into
gs
gs
cmp
inc
cli
hlt
and
add
lret
in
push
inc
adc
sbb
mov
sbb
jg
push
pushf
adc
sub
or
xor
add
sub
rolb
dec
jb
add
sbb
sbb
test
pop
adc
mov
pop
aad
adc
xor
icebp
xchg
mov
add
roll
sbb
cmc
dec
mov
add
push
mov
adc
es
cs
dec
or
cld
xchg
test
sub
scas
sbb
je
mov
out
inc
xor
push
push
mov
push
push
jmp
call
pusha
andb
inc
or
orl
int
jae
and
pushf
hlt
xor
fadd
lods
rorl
ret
jp
jmp
push
daa
enter
or
sub
push
pop
jg
cwtl
lcall
pop
jp
je
jno
add
je
push
popf
rclb
shrb
fsubs
push
inc
iret
ret
sub
jns
idivl
stos
dec
popa
ret
mov
xor
cmp
lock
lea
cmp
push
loope
addr16
ret
jmp
and
imul
js
xchg
xchg
leave
inc
adc
sbb
lcall
push
cltd
push
inc
test
cwtl
push
shrb
popa
scas
andl
fimull
cmc
cli
sbb
mov
push
or
jo
inc
sub
btc
lods
test
mov
arpl
inc
or
adc
in
int
addr16
and
mov
cli
test
adc
jnp
push
push
jb
arpl
inc
pushf
cmc
loop
or
addb
dec
adcl
rorb
mov
jbe
fimull
or
push
mov
out
ljmp
dec
push
es
jp
xor
scas
cmp
adc
xor
imul
mov
lcall
lcall
addl
lahf
rorb
xchg
jno
push
push
call
movups
cmp
push
lods
mov
loopne
push
ret
mov
cmp
adc
nop
mov
loope
cmp
rolb
stos
xchg
sbb
mov
mov
push
adc
icebp
adc
mov
inc
push
xor
ret
adcb
push
mov
push
gs
mov
pop
in
dec
push
dec
mov
lret
or
xor
add
fistpl
fisubl
shr
fsub
adc
les
mov
pop
lods
fldt
out
ljmp
or
sahf
adc
adc
sahf
mov
jb
xchg
add
push
daa
sbb
sbb
adc
fdivl
mov
scas
ds
push
test
cmpsl
insl
jmp
and
pusha
loopne
mov
inc
inc
clc
add
jbe
and
sub
adc
pushf
aad
movsb
mov
sbbb
mov
stos
push
pop
adc
sub
sar
or
loopne
out
pop
add
loopne
or
inc
sub
das
or
add
bound
adc
or
lea
adc
cld
and
push
push
push
scas
lcall
aad
push
dec
mov
test
or
pop
add
sbb
mov
mov
or
sbb
inc
mov
mov
add
es
adc
and
or
pop
cmp
dec
lret
pop
push
cmpsl
mov
inc
inc
repz
fisttpl
lock
cmp
aam
ret
mov
and
lods
out
aad
adc
jb
pop
sbb
adc
or
jb
sbb
jo
scas
dec
add
or
inc
or
bound
icebp
sarb
cmpsb
test
dec
ja
sub
push
adc
xlat
mov
cmp
and
jnp
add
sub
ds
mov
inc
pop
xor
or
xor
std
inc
pop
inc
xchg
rcrl
cmpsl
push
mov
sub
add
mov
xchg
and
adc
xlat
ficompl
out
rclb
pop
cmpsb
sbb
sbb
rorb
and
sbb
cmp
push
test
mov
call
sbb
lcall
inc
add
rol
sub
cmc
ret
inc
pop
and
in
dec
push
sub
les
movsl
mov
push
mov
test
stos
rolb
cmpsl
stos
and
adc
adc
or
loopne
test
mov
add
add
inc
ljmp
xchg
sub
xor
inc
push
mov
jecxz
inc
cmpsb
xchg
enter
mov
rcll
push
xchg
inc
mov
sbb
enter
shrb
jb
pop
test
shlb
rclb
add
and
push
sub
sarl
test
jne
or
stos
dec
mov
add
or
push
xor
sbb
or
mov
scas
adc
adc
push
dec
loop
inc
push
inc
out
leave
xor
or
adc
xor
stos
dec
jl
leave
cmp
adcb
iret
push
sub
adc
mov
mov
push
cmp
sub
enter
or
fwait
dec
push
xchg
or
jb
push
in
push
test
dec
adc
cld
add
push
or
xchg
lret
cmc
mov
cmpsl
and
dec
call
push
or
icebp
add
sbb
pop
mov
popa
push
roll
sbb
sub
or
jo
cmp
mov
ljmp
cs
hlt
les
dec
inc
dec
sbb
loop
sub
ds
lcall
jo
mov
adc
inc
test
test
je
mov
jb
adc
mov
loop
sbbl
add
dec
dec
test
pop
xor
pop
add
or
inc
stos
pop
push
std
outsb
subb
adc
push
cmpsl
lret
push
adc
cmp
and
cmpsb
sub
mov
add
inc
mov
jo
pop
das
arpl
js
mov
dec
orl
add
jo
push
xchg
mov
les
fadd
jle
in
or
and
daa
fdivs
ret
xor
es
or
shll
push
rclb
popa
leave
push
xchg
clc
mov
nop
mov
fwait
sbb
xor
shl
adc
mov
add
mov
loope
push
fidivl
push
aaa
inc
and
push
sbb
pop
cmp
push
lret
xor
lcall
sbb
andb
sarb
jmp
or
jl
ljmp
gs
and
pop
xchg
ret
add
test
push
add
test
adc
sub
jns
mov
adc
jae
mov
in
inc
add
out
ljmp
popa
or
loope
jbe
pop
add
pop
adc
mov
jb
out
sti
push
andb
in
jl
and
adc
fs
lock
inc
ret
push
sbb
cwtl
js
es
nop
jne
push
shll
mov
ret
cwtl
xor
test
aam
fsts
call
xchg
or
xorb
daa
mov
mov
push
pop
sbb
mov
mov
shlb
jge
push
adc
adc
adc
add
or
std
leave
push
shrl
pop
xchg
mov
imul
mov
rolb
enter
inc
aaa
mov
mov
cmp
gs
dec
jns
aad
sarl
js
loop
mov
cmp
xchg
cmp
daa
add
and
ficompl
nop
mov
dec
cmc
dec
push
mov
jecxz
sbb
add
adc
xchg
sub
stc
mov
push
adc
xchg
sbb
xchg
or
leave
idivb
cwtl
repnz
jmp
stos
or
insb
mov
rcll
xor
test
push
ss
adc
mov
inc
and
pop
fistl
cmp
and
in
add
sub
adc
jge
mov
push
xor
add
loop
call
jne
pop
addr16
mov
cmp
mov
inc
xchg
mov
and
pop
push
ljmp
ja
lock
stos
sbb
out
or
jg
push
cmp
fsubrl
cltd
ljmp
jns
push
js
jo
sbb
loope
add
xor
ficomps
je
push
icebp
pop
mov
push
mov
mov
pop
les
or
call
jo
or
imul
rclb
and
mov
stos
push
lods
push
push
dec
adc
mov
dec
or
push
mov
xchg
in
incl
hlt
push
in
loope
je
add
loopne
pushl
and
test
mov
add
pop
or
mov
or
inc
mov
fcmovu
sbb
into
cwtl
sbb
andb
dec
dec
push
sub
cmp
sub
adc
das
jns
adc
orl
xchg
jo
push
shl
adc
ficoml
ss
xchg
jne
add
popa
add
ret
add
icebp
add
lods
inc
ret
or
adc
jo
add
or
pop
insl
mov
cld
orb
pop
in
push
sbb
and
divb
push
xchg
rolb
mov
push
sub
subb
push
repnz
mov
mov
rcll
lods
jl
sbb
adc
nop
ror
adc
popf
mov
cmpsl
push
dec
mov
mov
push
dec
cli
adc
mov
jbe
sub
push
lcall
lea
loop
add
push
cltd
sbb
lds
add
jae
les
mov
std
cmp
push
sbb
enter
add
mov
ret
push
mov
mov
mov
ret
mov
stos
dec
mov
xor
xchg
fisttps
jl
out
xor
adc
lea
addb
add
fildl
push
test
inc
and
stos
push
adc
rolb
pop
mov
sub
add
leave
int3
xor
rorb
cmp
sub
cmpb
push
ret
xorb
nop
cmp
push
icebp
adcb
inc
test
sbbl
jne
push
dec
aad
xchg
mov
or
push
sarb
out
sbb
push
adc
sbb
add
mov
mov
xchg
stos
jo
dec
out
out
scas
and
popf
into
aam
mov
cmp
mov
mul
adc
fidivs
sbb
sub
xchg
test
js
rcll
in
add
sarb
es
and
jo
push
jmp
add
ror
sub
stos
cld
jge
add
mov
rcl
sbb
push
sub
lret
add
push
jmp
notb
ret
and
xor
adc
push
xchg
call
and
jbe
insb
dec
push
xchg
imul
jbe
xor
or
push
stos
pop
xchg
mov
push
push
andl
jne
out
icebp
sbb
mov
sbb
inc
add
sub
test
xor
cmp
push
out
incb
mov
pop
push
pop
adc
pop
or
test
mov
in
mov
jo
dec
and
pop
movsl
push
test
xchg
add
hlt
or
icebp
sub
or
xor
clc
inc
push
cmp
or
ss
neg
sub
add
cmp
mov
mov
in
repz
cmp
test
or
pusha
test
ljmp
jmp
loop
pop
adcb
lods
inc
cmpsl
cmpsl
sub
mov
or
in
adc
sbb
pop
data16
ds
lret
rcll
data16
mov
fildl
shll
cmp
add
enter
lods
jo
repz
call
mov
es
out
or
ret
test
repz
orl
in
repz
add
push
xlat
xorb
pop
push
rcrb
or
sub
add
add
fiadds
subb
daa
add
mov
mov
sbb
mov
xor
jns
add
mov
and
icebp
cmp
mov
cwtl
mov
loope
sub
out
sbb
pop
pop
adc
int3
xor
push
fs
inc
daa
mov
push
and
inc
test
add
ret
mov
cmc
bound
shrb
loopne
and
lds
adc
sti
sbb
adc
push
xorb
and
cmp
lock
insl
pop
push
dec
add
sbb
sub
xchg
add
pop
cs
sbb
mov
mov
pop
icebp
push
jns
jns
stos
jp
sub
ret
inc
pop
stos
cmpl
xchg
loopne
push
adc
push
mov
enter
adc
sbb
adcb
adc
dec
dec
aam
les
xchg
sbb
loopne
shlb
cmp
mov
outsb
push
cmp
int
or
cmp
jge
into
inc
inc
push
cmp
mov
mov
ror
add
mov
and
adc
or
jne
push
ljmp
xchg
fs
subl
push
dec
outsb
icebp
dec
shrb
jmp
shrl
and
int
push
push
ror
jo
stos
jp
add
nop
mov
gs
sbb
add
jae
stos
sahf
clc
jg
adc
mov
shll
fimuls
outsb
leave
sub
or
adc
shll
ljmp
push
xor
pop
sub
sub
push
xchg
sbb
cmp
fsubr
sbb
add
push
push
nop
sub
add
rorl
inc
xor
xchg
insb
or
cmp
add
in
adc
xchg
pop
or
dec
sub
bound
iret
jle
and
out
pop
push
fmuls
push
scas
pop
push
xor
sub
jo
rclb
push
and
je
sbb
sbb
stos
xor
jl
or
mov
push
mov
xchg
in
imul
sub
rcll
push
lcall
movsl
mov
jo
mov
push
jp
sbb
and
adc
or
and
pop
in
inc
sbb
ret
mov
outsl
xchg
leave
or
push
lods
cmp
sub
mov
in
sar
out
inc
ret
int3
rclb
test
add
jle
inc
push
add
adc
sbb
or
and
push
fists
andb
gs
orb
inc
xor
jmp
int
sub
sti
pop
inc
aad
push
adc
push
dec
subl
and
push
or
add
or
push
and
push
and
pushf
fcomip
push
cmc
jbe
push
push
dec
pushf
hlt
push
fs
pop
push
mov
inc
inc
addl
insl
and
in
clc
push
jl
dec
and
enter
push
xchg
data16
nop
sti
or
ret
or
dec
xor
insl
and
and
lds
adcb
insb
xor
negl
jle
mov
cli
inc
ret
call
jnp
mov
cmc
or
dec
clc
push
sub
into
sbb
pusha
jbe
sub
dec
lret
sub
mov
movsl
xor
cmp
mov
sbb
popf
push
and
adc
mov
shll
cli
jae
enter
test
mov
sub
pop
mov
mov
lcall
imul
mov
cmp
repnz
add
push
jl
jo
cmp
cmpb
push
popf
enter
fs
fnstsw
lret
push
cmp
sbb
mov
aas
insb
mov
add
sti
pop
das
sub
mov
xchg
push
les
mov
adc
ret
or
push
pop
adc
aam
enter
test
push
xor
lock
jp
in
imul
cmp
xor
lcall
add
pop
inc
xor
out
test
mov
shlb
push
push
lret
sbb
stos
in
notb
into
jno
adc
or
hlt
push
orb
sbb
mov
adc
xchg
mov
fwait
mov
pop
negl
push
or
dec
add
fdivs
fcoms
icebp
mov
nop
rcl
ljmp
pushl
inc
scas
out
ret
sbb
lret
jmp
adc
sbb
xchg
cmc
adc
or
in
mov
sbb
adc
add
pop
insl
mov
push
pop
adc
add
into
das
call
packuswb
push
inc
cmp
and
push
cwtl
mov
adc
inc
insb
pushf
dec
cmpl
and
outsl
punpckhbw
jo
and
or
inc
sarl
mov
fwait
repz
xor
sbb
lea
loopne
jo
es
push
adc
dec
pusha
and
mov
or
or
adc
inc
push
es
inc
jmp
int
sub
sub
aaa
and
mov
sub
call
shlb
add
sbb
inc
int
data16
adc
call
lock
adc
or
mov
xchg
cmp
push
scas
call
add
dec
xchg
add
push
pop
xor
jne
xchg
jb
test
vmovss
adc
sbb
xor
sbb
push
add
jp
or
roll
sbb
mov
and
inc
and
shll
js
mov
mov
ss
stc
fwait
lret
xchg
pop
stos
cmp
push
pop
jecxz
out
sbb
lret
sbb
mov
shll
stos
push
mov
into
mov
sub
movl
sti
pop
cmp
pop
xor
iret
lahf
aas
test
lds
xlat
add
stc
repz
cmpsb
aam
popa
xorb
scas
fidivs
and
sub
daa
shlb
cmc
pop
in
push
scas
scas
stc
jl
stc
repz
xchg
addl
push
lcall
mov
repz
xchg
push
cld
fcomp
xchg
xor
iret
pusha
adc
xchg
loopne
cs
or
xchg
mov
dec
lea
insl
sti
push
mov
repz
lahf
adcl
repz
and
jno
in
stc
jg
cld
stc
fidivs
shr
add
jmp
push
adc
aas
pop
out
add
imul
cld
stc
repz
jb
sub
add
sti
push
mov
lahf
aas
jg
jae
push
test
xchg
adc
mov
stc
repz
aam
sub
dec
lods
and
aas
insb
inc
and
outsl
std
pop
psllq
iret
lahf
and
cs
or
sbb
stos
jg
cld
stc
rorb
adc
push
add
iret
lahf
aas
sarb
add
cmc
out
test
stc
repz
pop
cmp
in
ljmp
inc
iret
lahf
aas
jg
movsl
and
and
cmp
inc
xor
enter
inc
xor
fnstsw
jg
cld
or
mov
ja
sbb
dec
jne
pop
repz
lahf
push
clc
stos
fisubl
fs
sub
jg
cld
stc
pop
js
stos
test
aas
mov
aam
mov
lahf
aas
mov
scas
push
jecxz
das
xlat
or
stc
repz
call
jbe
and
iret
lahf
aas
jg
cmp
push
scas
mov
adc
dec
stc
repz
sar
lds
aad
dec
pushf
sub
jbe
ja
lahf
aas
jg
sbb
and
or
stc
repz
fistpll
movsb
sti
jge
dec
mov
enter
aas
jg
cld
mov
mov
push
hlt
add
cmp
xchg
test
or
mov
lahf
mov
stos
sbb
push
push
pop
mov
iret
leave
call
adc
sbb
int
push
inc
fs
repz
sbb
pop
pop
test
aad
lret
or
cld
stc
mov
mov
inc
jl
in
cmp
jl
jp
iret
lahf
aas
mov
xor
cmp
inc
cld
outsl
imul
mov
in
mov
inc
xchg
int
pusha
decb
xchg
jns
iret
lahf
aas
jg
mov
lock
lods
cmpsb
push
or
repz
std
add
jmp
iret
mov
push
movsl
inc
jle
adc
enter
mov
lahf
xlat
mov
xchg
xor
ss
push
popa
popf
nop
mov
push
and
out
or
push
dec
jbe
out
int3
int3
sbb
or
out
mov
push
repnz
dec
fs
cld
stc
cs
rcrl
mov
out
popf
jmp
out
lahf
aas
ret
sub
mov
sub
push
pusha
lret
push
daa
xchg
cld
stc
jecxz
cmpsb
lahf
bound
das
sub
and
sub
out
lahf
aas
pop
inc
and
mov
push
cld
stc
repz
jl
add
pushf
rcrb
jg
movsb
inc
jmp
insl
in
pop
cld
stc
repz
adc
mov
sub
rorb
inc
or
xlat
xor
scas
push
clc
pop
out
xchg
movl
or
es
adc
repz
andl
mov
xorb
inc
insl
lret
xor
push
out
lahf
aas
jg
dec
out
mov
out
lret
sub
add
aaa
test
repz
add
aam
mov
lret
cltd
push
es
aas
jg
cld
cld
fcomps
mov
sub
jge
out
lahf
sub
sbb
mov
jo
xchg
cld
stc
imul
cmp
sarl
inc
lret
pop
out
lahf
aas
push
mov
sub
xor
cld
stc
repz
jge
pop
sti
test
fisttpll
iret
mov
rcr
lods
sti
pop
repz
inc
fidivrl
inc
lods
inc
jp
xchg
add
fisttpl
jmp
lea
cltd
or
ds
repz
stc
mov
jmp
pop
cld
xor
fldenv
jg
aas
jg
cld
jns
sub
xchg
jno
or
bound
lahf
mov
shrb
jmp
xor
stc
fisubrl
lods
bound
dec
daa
mov
iret
lahf
aas
adc
out
mov
cld
stc
repz
xchg
repz
push
iret
lahf
aas
jg
leave
mov
xchg
pop
subl
out
gs
cltd
out
aad
cltd
jnp
mov
ljmp
gs
paddq
sbb
or
lahf
sbb
shrb
and
cld
stc
loop
mov
enter
imul
out
xor
pop
xchg
lahf
aas
sti
iret
fists
mov
cld
stc
repz
cmpsl
mov
xchg
arpl
mov
cltd
pushf
mov
nop
js
dec
add
and
shlb
jmp
shll
sbb
addr16
jbe
sub
outsb
roll
out
xchg
xor
push
cmp
imul
fsubrs
repz
lahf
xchg
ds
mov
popa
dec
iret
enter
sbb
rcrl
hlt
adc
lahf
sub
cmp
jo
dec
xlat
mov
cld
stc
mov
and
out
mov
adc
cmp
mov
sbb
popa
push
jo
cld
stc
repz
es
mov
ss
xor
test
iret
lahf
aas
jg
adc
int3
sbb
xchg
dec
mov
stc
repz
mov
dec
inc
loope
pop
aad
lret
pop
dec
lock
bound
inc
jg
imul
lahf
aas
pop
lds
xor
sub
int3
cld
stc
repz
mulb
test
orb
cmp
sbb
lahf
aas
jg
enter
add
sbb
cld
stc
repz
in
ljmp
stc
add
dec
inc
movsb
lahf
aas
jg
sub
dec
aaa
fisttpll
repz
cmp
jae
pop
mov
jo
movsl
push
das
cld
stc
inc
ja
add
dec
dec
mov
sbb
lahf
aas
jg
lret
test
push
mov
repz
das
jbe
cs
adc
int3
sbb
inc
adc
mov
xchg
movb
mov
iret
rorl
incl
in
jg
cld
stos
cmp
xor
testb
div
out
lahf
out
insl
or
popf
aad
fwait
push
idivb
stc
negl
fdivrs
mov
daa
ror
ds
lahf
aas
and
jb
and
iret
aas
fnstsw
repz
dec
bound
jne
cmpsb
js
pop
sbb
aas
inc
out
xchg
in
movb
push
inc
cld
stc
repz
mov
push
and
pop
mov
aas
jg
fisubs
mov
das
jle
test
arpl
jbe
cld
stc
repz
rcrl
adc
and
lahf
aas
jg
jne
out
ss
in
decl
sub
popf
xor
repz
in
xor
fdivrl
mov
loopne
mov
cld
mov
int
jne
mov
stc
mov
mov
enter
xor
sbb
add
jg
cld
stc
js
insb
or
mov
inc
flds
pop
iret
lahf
aas
jg
inc
mov
mov
pop
xlat
mov
jg
in
stos
cmp
fdivrl
dec
call
lahf
addr16
cmp
mov
and
cld
stc
mov
xchg
inc
js
shl
test
ja
clc
out
lahf
aas
mov
adc
xchg
ljmp
xchg
daa
mov
mov
xchg
add
jg
out
aaa
cmp
mov
stc
stc
repz
cmp
stc
mov
out
lds
mov
es
mov
mov
jg
cld
pop
mov
add
scas
pop
push
mov
jecxz
iret
lahf
pop
scas
iret
adc
insl
push
pop
fiaddl
addr16
push
push
push
lcall
and
cld
mov
pop
or
jnp
mov
stc
repz
inc
xlat
in
mov
imul
adc
push
sub
movsl
cmpsl
or
repnz
dec
or
out
lahf
xor
nop
jp
cmp
xor
and
stc
in
mov
cli
je
test
aas
jg
mov
or
les
and
ds
ret
repz
lahf
add
shl
sub
push
jle
cld
stc
xlat
je
fcmovb
pop
mov
loopne
test
aas
enter
mov
jg
cld
mov
test
mov
xor
sbb
lahf
aas
daa
cwtl
sarl
icebp
dec
sbb
inc
stos
pop
shrd
or
push
jg
repnz
sti
fcomi
lock
mov
lret
aas
ljmp
lahf
js
outsl
dec
mov
int3
inc
out
stc
repz
hlt
pop
adc
dec
lahf
adc
jnp
add
jg
cld
jo
sub
cld
cmp
pop
es
cmp
repz
lahf
xchg
pop
into
jg
jbe
mov
or
out
cld
stc
push
push
jnp
mov
lcall
out
lahf
aas
and
cwtl
sbbl
stc
repz
xor
mov
inc
stos
push
stc
out
dec
lock
cld
arpl
push
outsb
gs
mov
into
sar
and
sarl
aaa
enter
stc
repz
aas
push
inc
pop
mov
rolb
aas
jg
push
stos
std
mov
outsb
shll
out
ret
jmp
out
in
rol
pop
lret
lahf
aas
jg
add
or
out
iret
jno
cmp
repz
cmc
lods
push
jmp
dec
ljmp
sub
jg
cld
sbb
lea
cmpsb
mov
jns
sub
mov
aam
insb
in
cmp
jge
jg
cld
stc
xchg
sub
push
inc
mov
cs
push
cmp
jae
iret
lahf
aas
lcall
jp
mov
stc
repz
insl
or
push
fdivrp
mov
mov
mov
adc
out
sub
stc
repz
sarb
mov
js
out
sbb
jmp
and
or
scas
mov
iret
lahf
aas
and
hlt
rcrl
cmp
in
sbb
pop
out
xchg
fs
cld
stc
repz
lea
mov
out
mov
sub
push
or
aas
jg
jge
movsb
mov
rcrl
das
lahf
es
repz
add
jp
inc
dec
pop
and
xchg
aas
jg
cld
mov
inc
pop
imul
lahf
cmp
add
movsb
add
sub
jg
cld
stc
shrl
or
nop
mov
sub
mov
inc
out
lahf
aas
jnp
fchs
pusha
movsb
mov
cld
stc
repz
aas
pop
push
xchg
or
stos
xchg
inc
jle
mov
lds
stc
repz
lods
jecxz
fdivl
scas
je
lret
cmp
lahf
aas
jg
mov
hlt
lret
addr16
arpl
stc
repz
pop
pusha
mov
mov
lea
aas
jg
add
mov
into
sbb
stc
repz
bound
fstpt
stc
mov
inc
aas
jg
cld
jecxz
and
test
fisubrl
sub
ljmp
jg
xlat
in
cmp
jae
xlat
pop
stc
xlat
inc
in
cmp
xchg
dec
shr
cmp
jg,pt
cld
mov
xor
xchg
repnz
dec
icebp
in
fisubs
cld
stc
push
xchg
push
adc
rorb
aas
icebp
idivl
add
inc
sub
sahf
hlt
sbb
incb
loope
ljmp
mov
aas
cld
inc
lcall
imul
xor
out
fldcw
cmp
icebp
xor
jns
je
jg
cld
mov
jp
jge
mov
cmp
loop
repz
lahf
mov
sub
push
jne
imul
test
or
add
insl
sahf
aas
jg
insl
mov
pop
mov
inc
inc
push
std
repz
lahf
cmp
insl
mov
mov
fsubrs
dec
das
sbb
fidivrs
scas
outsl
inc
not
mov
loope
movsb
push
aad
fwait
aaa
outsl
mov
je
nop
cmp
in
lahf
aas
jg
inc
ret
bound
out
adc
add
icebp
cwtl
loope
out
pop
ja
add
push
inc
and
jg
cld
sbb
inc
in
adc
cmpb
push
fdiv
out
lahf
mov
jmp
mov
mov
ss
push
jl
pop
rcrb
and
lahf
aas
or
xor
cltd
clc
cld
stc
repz
aam
push
int3
cmp
dec
sbb
xchg
aas
jg
inc
cmp
pop
jbe
jo
aaa
out
add
or
fimuls
jg
shlb
and
aas
jg
mov
pop
cwtl
pusha
or
mov
es
adc
dec
int
aaa
outsl
test
nop
dec
sub
mov
jns
out
dec
xchg
xor
int
movsl
gs
ljmp
mov
inc
sub
dec
cmp
xor
dec
fnstsw
iret
pop
cli
xchg
decl
sub
stos
xor
lea
xchg
aaa
cld
stc
repz
test
mov
popf
dec
leave
test
ret
inc
iret
lahf
aas
jg
inc
test
dec
sub
shlb
pushf
lds
sbb
pop
bound
pop
lahf
aas
jg
jg
mov
fadds
outsb
mov
sub
popf
mov
movsb
pop
jo
push
test
mov
ret
aas
jg
cld
jae
or
or
jo
lods
adc
hlt
fcoml
fs
pop
test
iret
lahf
ja
add
mov
sbb
push
jg
cld
stc
xchg
or
add
pop
fisttpl
ss
loopne
jmp
sbbb
test
mov
and
cld
stc
repz
jno
xor
shlb
stos
test
mov
jg
and
mov
stos
lahf
aas
ljmp
ljmp
or
adc
stc
repz
shlb
data16
mov
pop
mov
jg
cld
outsb
popa
inc
rclb
dec
dec
in
xchg
outsb
adcl
out
lahf
mov
inc
lahf
mov
push
push
and
inc
test
test
mov
out
sbb
xchg
fdivl
xchg
push
inc
xorb
pop
cld
stc
repz
dec
js
and
or
sub
iret
lahf
aas
jg
testl
in
and
xor
stc
repz
icebp
roll
push
xor
stos
insb
cmc
xchg
lcall
outsl
mov
jl
es
inc
addl
repz
testb
dec
gs
cmc
or
cld
cmpsb
pop
pop
rcrl
out
cli
stc
repz
fwait
cmp
add
out
aas
jg
cld
inc
dec
push
in
pop
inc
mov
psllq
iret
lahf
mov
adc
lods
sbb
push
cmpb
stc
jbe
divl
lds
pop
dec
dec
and
iret
lahf
aas
push
jp
icebp
or
adc
stc
repz
test
adc
call
gs
jns
cmpsb
push
cli
xchg
push
jle
mov
xor
daa
dec
cwtl
adc
mov
push
out
fwait
aaa
jl
inc
and
pop
lods
int3
fcompl
pop
fidivrs
gs
mov
mov
outsl
xchg
lock
clc
hlt
or
cmpsb
lahf
jns
out
add
xchg
sarl
icebp
or
leave
aad
aaa
outsl
fidivrs
inc
add
add
jg
out
fwait
mov
loopne
xor
outsl
fidivrs
and
addr16
adcl
int
aaa
ss
inc
js
cwtl
pop
shlb
pop
xor
mov
xchg
addr16
in
pop
fisttps
iret
pop
jle
sub
fiadds
lods
push
xchg
mov
rorb
add
jno
inc
mov
sahf
mov
jg
shrl
leave
in
mov
push
out
lahf
aas
rcl
mov
inc
push
mov
repz
fsubl
pushf
jnp
lahf
clc
mov
sti
or
lahf
aas
jg
add
faddl
enter
out
jmp
std
sbb
addl
cld
stc
rep
xor
jns
cmp
inc
bnd
pop
iret
lahf
aas
jg
fidivrl
les
and
repz
push
dec
cmpsb
stos
cmpsl
ss
lods
clc
sahf
movsl
ds
aas
jg
xchg
xchg
xor
sub
jmp
imul
out
mov
cli
ret
sub
mov
es
xor
ret
push
cli
and
pop
mov
or
jg
cld
stc
aaa
xchg
mov
ss
iret
lahf
aas
aad
ja
mov
imul
repz
push
daa
leave
push
dec
dec
imul
es
jle
dec
cltd
rolb
pop
sub
adc
into
sbb
stc
inc
jns
in
pop
in
lods
outsb
std
sbb
out
lahf
aas
dec
sbb
pop
ficompl
jp
sbb
repz
pop
pop
call
int3
cmpsb
iret
lahf
aas
jg
or
dec
dec
jmp
lds
xor
lea
mov
xor
outsb
out
cmc
xchg
iret
mov
dec
inc
popa
jnp
and
out
scas
call
mov
pop
leave
insl
in
jecxz
aaa
outsl
fidivs
sub
sbb
sti
aam
int
aaa
shrb
das
jnp
jb
jge
sub
push
cmp
out
insb
repnz
pop
fdivrl
push
stos
mov
outsb
out
outsl
iret
lahf
jg
xor
mov
xchg
and
lahf
aas
hlt
leave
push
jb
stc
mov
ds
jecxz
jmp
sti
in
iret
push
or
jmp
daa
and
outsl
je
push
aas
stc
cld
fisttpll
cmp
outsl
jbe
add
or
xchg
std
mov
repz
cmp
lcall
pusha
or
mov
cmpsb
xchg
cli
mov
outsl
xlat
inc
cmp
repz
mov
push
std
push
or
call
jg
cld
add
mov
inc
mov
jge
ljmp
cmp
loop
inc
sahf
call
js
cmpsb
arpl
fwait
ja
lods
jge
push
pop
add
movq
out
loope
outsl
cwtl
mov
lahf
sbb
or
iret
lahf
aas
jmp
rcr
aad
add
cld
stc
repz
inc
sub
and
cli
iret
lahf
aas
jg
out
xor
iret
xchg
xor
repz
stos
sbb
xchg
icebp
or
inc
and
adc
flds
fsubp
sbb
daa
bsr
add
call
out
xor
mov
sub
int3
jbe
rorb
outsl
fidivrs
enter
adc
dec
imul
and
loope,pn
popa
xchg
sbb
fidivrs
int
call
int3
lods
inc
sbb
out
fwait
aaa
mov
adc
and
call
repz
mov
stc
dec
leave
sti
and
cmpsb
in
lret
subb
cmp
es
lea
jle
sbb
jge
out
aas
iret
dec
shlb
pusha
jmp
testl
cs
mov
xchg
sub
inc
imul
sub
lahf
aas
adc
aaa
push
test
xchg
out
lahf
aas
jg
out
add
sub
xchg
test
cld
stc
xrelease
in
sub
loopne
iret
lahf
aas
jg
sbb
push
rclb
data16
cld
stc
repz
pushf
loopne
icebp
hlt
lock
ja
out
rorb
aas
jg
jno
insl
sbb
adc
mov
xchg
xor
xlat
push
cld
stc
repz
je
mov
in
xlat
inc
test
mov
adc
and
xchg
imul
inc
fstps
fstpl
jl
dec
enter
jge
aas
gs
jg
cld
mov
cmp
stos
fwait
mov
jp
out
lahf
adc
and
ret
jg
cld
stc
xor
leave
adc
xor
int
jle
adc
mov
aad
ds
push
mov
cli
or
lahf
aas
jg
divl
cmp
scas
testb
mov
mov
dec
leave
pop
aaa
outsl
fidivrs
mov
inc
mov
int
cmp
push
jae
sub
in
jg
cld
stc
lock
xchg
aad
stos
jns
bswap
stos
or
inc
or
aas
mov
adc
stc
mov
jne
and
rcll
lahf
sarl
or
shrl
jo
out
jno
ficomps
mov
sbb
mov
pop
in
xor
pop
mov
in
iret
bound
mov
jno
std
adc
mov
pop
shll
add
icebp
divb
out
mov
popa
int
stos
lahf
jp
mov
jg
cld
xlat
mov
je
dec
pop
cmp
fcompl
sub
out
lahf
repz
outsb
or
adc
jle
cld
stc
gs
sub
add
cltd
jle
xor
cld
jge
fucomip
xor
imul
int
jmp
fidivrl
xor
stc
sbb
andb
inc
outsl
call
jle
and
mov
rcll
add
int
aaa
xchg
dec
cmp
xchg
push
insb
movsb
fidivrs
jmp
xchg
fwait
enter
mov
les
int
fwait
aaa
outsl
loopne
imul
and
and
jecxz
xor
dec
push
dec
mov
mov
nopl
and
pop
inc
pop
push
in
outsl
ficoms
cmp
stos
addr16
pop
andl
and
popf
lret
cli
xlat
test
aas
jg
cld
xchg
outsb
push
scas
pop
jne
inc
pop
jae
testl
jp
es
sahf
sub
cld
stc
push
cmpsb
xor
push
and
in
in
iret
lahf
aas
or
fistps
or
mov
cld
stc
repz
gs
mov
pop
adc
pop
or
inc
jns
aas
sbb
lock
lahf
xchg
dec
cmp
fadds
sbb
cld
stc
xchg
lock
int3
sahf
push
out
dec
and
shl
iret
lahf
aas
pop
jb
xchg
fdivs
cld
stc
repz
outsb
div
pop
icebp
push
adc
push
mov
lahf
aas
jg
les
out
sbb
adc
cld
stc
repz
stos
xchg
and
jb
sbb
mov
insb
or
push
sub
sbb
repz
mov
mov
push
int
fldl2e
stos
aas
jg
cld
orl
ret
stos
mov
lahf
nop
loope
addb
fs
cld
stc
push
loope
mov
repz
imul
sbb
repnz
lahf
aas
cli
dec
stos
outsb
inc
mov
push
adc
repz
xchg
push
mov
add
jecxz
adc
scas
iret
lahf
aas
jg
fs
iret
dec
mov
fsubs
scas
xor
loopne
test
jae
lahf
aas
jg
icebp
sbb
or
inc
popf
inc
adc
pop
push
out
xchg
orl
mov
pop
cld
mov
jg
cld
into
fs
or
popa
clc
xchg
loope
pop
test
repz
lahf
and
lcall
test
cld
stc
pop
or
push
call
push
inc
testb
iret
lahf
aas
out
pop
mov
cld
subb
stc
repz
xchg
cmpsw
mov
and
out
lahf
aas
cltd
add
aam
rcrb
cli
sub
and
inc
das
aas
in
scas
jge
iret
lahf
sbb
push
jno
xchg
stc
enter
repz
inc
xorb
lock
inc
iret
lahf
aas
jg
add
outsb
mov
adc
mov
pusha
mov
enter
addr16
or
stos
rorl
mov
scas
loope
mov
xlat
aaa
outsl
fidivrs
ja
jo
xor
orl
fwait
outsb
outsb
adc
inc
cltd
or
cmpsb
jb
ja
outsl
fidivrs
xor
shrl
outsl
fs
fwait
aaa
adc
stos
jge
in
clc
cltd
pause
fidivrs
jnp
ret
outsb
push
mov
mov
fwait
aaa
outsl
inc
ljmp
xor
mov
fldcw
fwait
add
jle
cltd
jns
fwait
aaa
outsl
fsubrp
hlt
or
inc
mov
jns
out
iret
sbb
call
in
xchg
fidivrs
pop
jmp
inc
jns
sub
int
aaa
mull
sbb
leave
mov
repz
in
push
into
ljmp
sbb
outsl
lds
cmpsl
dec
sub
repz
push
jae
jne
clc
addr16
sbb
test
cmp
outsl
fidivrs
jbe
addr16
iret
mov
jnp
repz
fwait
dec
call
out
sahf
dec
loopne
pop
push
lahf
aas
jl
pop
enter
gs
jmp
out
stc
repz
bound
test
leave
jmp
aas
jg
cld
cmp
ss
jnp
adc
iret
lahf
ds
insl
and
inc
cmp
out
or
in
int
xor
adc
iret
adc
mov
jns
mov
test
pop
jge
call
mov
xchg
jle
sbb
add
cld
stc
repz
mov
fists
aas
leave
dec
fsubl
inc
xor
and
pop
fistps
fnsetpm(287
out
mov
leave
sbb
cltd
mov
inc
fmull
stos
adc
push
jns
out
mov
cmp
repz
in
inc
popa
cwtl
mov
jb
aam
pop
ss
fcompp
mov
ds
or
jns
inc
or
test
test
sahf
xchg
das
mov
int
aaa
sbb
aaa
orb
mov
sbb
ret
inc
mov
loop
mov
aaa
out
add
pshufw
mov
int
lods
sub
into
aas
into
lds
and
test
mov
int
aaa
out
xchg
imul
pushl
mov
jg
mov
hlt
int3
push
xchg
adc
data16
lahf
mov
mov
repnz
mov
dec
outsl
repnz
dec
jns
out
imul
add
mov
mov
xchg
fwait
aaa
outsl
ficomps
inc
jecxz
pcmpeqw
aas
jg
xchg
arpl
mov
outsl
mov
and
ret
repz
lahf
dec
push
mov
fwait
in
mov
rorb
imul
test
out
mov
enter
push
jg
out
xor
out
fwait
mov
ljmp
outsl
fidivrs
jbe
movsl
adc
aad
lods
outsl
or
aaa
test
and
out
xor
jns
fs
inc
dec
int
mov
sbb
insl
xchg
dec
mov
test
aas
sbb
in
in
xchg
fwait
cld
stc
repz
mov
xor
mov
jb
insl
test
lahf
aas
jg
loop
fidivl
incb
jne
add
pusha
sub
enter
push
cwtl
lock
lahf
aas
dec
aaa
dec
fninit
xchg
jo
mov
adc
repz
jae
scas
mov
jmp
xchg
fwait
ss
aas
jg
push
dec
adc
cltd
push
pop
in
out
inc
stc
repz
mov
in
xor
cmpsl
sub
cld
shlb
mov
dec
dec
mov
mov
lahf
fsubl
iret
les
jg
cld
stc
sub
popf
ljmp
adcb
or
leave
lahf
aas
ror
test
cmp
fwait
ja
push
cmp
adc
loope
mov
dec
dec
push
rclb
push
rcrl
adc
out
pop
fldl2t
mov
arpl
pop
aaa
sbb
cld
stc
repz
xchg
fldcw
sbb
sahf
xor
lahf
aas
mov
dec
stos
pop
mov
mov
out
mov
daa
stos
mov
mov
jg
cld
loop
sahf
or
adc
cld
imul
mov
mov
filds
outsl
ljmp
mov
cs
ds
ficoml
dec
stos
stos
xchg
gs
lahf
aas
jg
mov
pop
out
xchg
or
repz
push
stos
js
push
adc
int3
jns
jmp
xorb
roll
add
xchg
shlb
in
or
into
ret
pop
in
push
shrb
ds
adc
add
and
pushf
ret
out
fwait
loop
test
pop
xor
fidivrs
into
adc
dec
pop
stc
mov
test
popf
out
int
aaa
outsl
jp
push
jp
pop
jbe
sarb
outsb
fistpll
or
ljmp
xlat
jbe
aaa
outsl
fmulp
xor
push
int3
mov
js
out
xchg
mov
shr
fwait
ljmp
aas
call
xor
sub
sahf
or
dec
xor
ja
ret
cltd
push
jg
loope
and
lahf
inc
cmp
cmc
pop
adc
repz
cmp
cld
stc
repz
jg
and
pusha
mov
sub
add
pushl
daa
jg
mov
xor
or
lods
jle
cld
stc
in
mov
mov
outsb
mov
push
clc
jmp
cmp
outsl
pop
jnp
push
loopne
jns
out
repz
clc
enter
repz
sub
nop
dec
fistpl
or
dec
flds
inc
jp
out
loopne
int3
insl
cmpl
mov
add
das
ror
rclb
addr16
inc
imul
jb
aam
pop
cmp
jecxz
lods
into
or
xchg
ret
ret
daa
lahf
aas
jg
xchg
mov
adc
xchg
inc
cld
lret
xor
repz
sbb
pop
repnz
or
hlt
and
insb
xchg
cli
pop
sbb
mov
fwait
aaa
outsl
fisubs
jp
nopl
sub
push
sbb
sbb
les
cmpb
imul
push
jg
repz
fwait
divb
repnz
jnp
test
inc
outsl
fidivrs
push
pop
outsb
or
dec
xor
pop
fisubrl
aaa
sarl
jp
repnz
push
mov
pop
rorl
cld
pop
mov
aaa
outsl
ficoms
loop
loop
or
add
in
int
or
into
insl
jmp
outsl
fidivrs
aas
push
mov
pusha
xor
mov
aaa
lcall
arpl
shlb
sub
mov
stos
jnp
sti
shll
fs
sbbb
fwait
aaa
outsl
xchg
pop
xor
sbb
lock
int3
imul
mov
icebp
or
inc
jmp
vmwrite
cmp
mov
sti
pop
ds
or
inc
aaa
outsl
fidivrs
sahf
xchg
and
jae
lock
incb
xchg
mov
imul
jns
out
ret
sbb
add
aas
mov
xchg
lds
outsl
aaa
outsl
push
lods
stos
jae
lods
jns
out
xchg
mov
mov
popa
stc
adc
mov
or
outsl
fidivrs
jl
imul
xchg
or
fidivs
sub
lea
cwtl
cmpsb
pop
fnstsw
push
dec
pop
jg
fidivrs
pop
inc
ss
jo
mov
or
push
lahf
mov
lahf
call
push
repnz
out
fwait
aaa
pusha
cltd
mov
jno
fidivl
pop
fidivrs
fwait
or
stc
lds
shrl
pop
in
mov
int
aaa
outsl
adc
test
inc
jle
jns
out
sahf
inc
mov
dec
test
mov
mov
inc
fwait
aaa
outsl
fidivs
sub
popa
inc
and
adc
out
xor
xchg
mov
jl
adc
jns
xchg
cwtl
in
test
cmc
scas
dec
fwait
aaa
outsl
fmulp
scas
push
popf
int
adc
pop
inc
fstpt
out
fbstp
pushf
and
pop
cmp
outsl
fidivrs
insb
fists
cld
test
dec
adc
sub
out
fwait
lock
adc
lret
ds
outsl
fidivrs
mov
mov
pushf
out
fwait
aaa
jp
bound
sub
dec
cmp
mov
jge
fsubr
xchg
data16
into
int
aaa
outsl
ds
pop
jne
lret
test
out
cs
add
jae
fiaddl
mov
pop
inc
aas
aaa
outsl
fsubrp
xchg
inc
les
imul
mov
in
xchg
int
mov
jnp
lds
jb
scas
mov
jno
int3
cmp
shll
dec
lahf
aas
jg
insb
mov
int
xchg
mov
cld
stc
repz
mov
inc
out
enter
push
mov
aas
jg
jecxz
stos
std
push
loop
cmp
fadds
std
and
stc
repz
and
inc
ja
les
sub
or
sub
aad
and
or
adc
mov
push
stc
repz
lahf
cmpsl
jbe
es
test
repnz
push
insb
xor
fiadds
fwait
aaa
outsl
fimuls
lret
fists
dec
mov
stc
fidivrl
sarl
insb
jns
out
xor
mov
mov
sbb
outsl
fidivrs
fmull
lods
out
cmp
xchg
rcrb
inc
rcl
aas
dec
xchg
ja
lahf
xchg
pop
fistps
and
repz
mov
dec
mov
outsl
fidivrs
mov
imul
clc
repz
fwait
ret
push
ss
idivl
repz
mov
push
xor
xchg
pop
dec
aaa
outsl
ficoms
out
dec
jae
mov
fisttpll
jl
repz
fwait
stos
shlb
das
out
xor
sti
mov
cmp
dec
iret
fwait
xchg
stc
repz
das
or
sbb
leave
mov
nop
lods
lahf
aas
jg
and
in
inc
sbbl
testl
fmulp
fwait
aaa
outsl
jo
jnp
sti
negb
call
mov
aam
add
scas
sub
fs
fwait
aaa
outsl
fmulp
adc
jb
jg
push
cmp
inc
push
lret
jns
out
jmp
inc
mov
sarb
sub
dec
sbb
outsl
fidivrs
inc
std
loopne
imul
daa
out
repz
fwait
ss
mov
pop
mov
dec
bound
sub
jne
fidivrs
push
fldl
dec
outsb
sub
mov
sti
xchg
int
aaa
aad
adc
sub
dec
hlt
xor
shll
repz
aas
jg
ljmp
pusha
pusha
popa
cmc
push
adc
punpckhdq
cld
mov
test
fldl
cwtl
lahf
aas
jg
int
out
mov
fildll
adcl
lods
xor
repz
xor
imul
call
stc
imul
xchg
int
clc
sub
into
repnz
mov
iret
lahf
test
inc
inc
pop
mov
shll
jg
cld
stc
mov
xchg
add
leave
stc
jns
lock
aas
adc
mov
add
pop
push
cld
stc
repz
popf
je
js
dec
xchg
lods
or
sub
jg
push
jae
dec
or
lock
jns
lock
cltd
out
into
aaa
and
push
mov
lret
adc
xor
jne
sbb
cmpsl
push
sbb
js
dec
icebp
xchg
popf
rcrb
imul
jns
out
js
jns
cmp
push
repnz
fwait
aaa
outsl
ficomps
dec
inc
clc
xor
not
or
out
test
test
jmp
jo
dec
adc
jmp
in
sbb
int
ja
push
jecxz
push
xor
sub
fidivrs
in
jge
insl
gs
dec
ljmp
fwait
aaa
outsl
adc
and
aam
mov
mov
jnp
les
xchg
notl
inc
xchg
aaa
outsl
fiadds
jmp
das
mov
dec
pusha
in
and
int3
cli
jle
sbb
scas
push
mov
mov
mov
adc
out
aas
out
sbb
movsl
fbstp
sub
cld
stc
fsubrs
sub
addr16
fwait
dec
push
test
out
lahf
aas
xor
cmp
dec
xchg
cld
stc
repz
and
cs
ljmp
add
jb
xchg
aas
jg
push
push
adc
mov
cmpsb
fwait
sbb
outsl
ficoms
cltd
mov
xor
call
fstps
dec
lret
aas
jg
lret
sbb
pop
jl
push
test
stc
repz
add
inc
mov
dec
mov
aas
jg
fwait
push
lock
int3
ret
int3
add
imul
dec
cmp
pop
jb
outsb
jg
cmp
jg
cld
decb
outsb
lods
pop
out
and
pop
test
lahf
je
loope
xchg
jne
xor
xor
dec
jg
cld
stc
mov
cmovg
push
aaa
into
incl
lahf
aas
adc
ljmp
jbe
aad
cld
pop
shrb
cmp
repz
enter
out
call
nop
mov
fwait
aaa
outsl
fsubp
jbe
and
fmulp
push
repz
insl
push
mov
icebp
fistps
jno
mov
out
aaa
outsl
fidivrs
push
insl
pop
sub
pop
sub
int
stos
inc
push
xchg
fs
lahf
outsl
fidivrs
or
xor
lahf
mov
jl
int
aaa
nop
inc
lret
cmc
cmp
das
lahf
xchg
mov
in
insl
push
dec
mov
jle
nop
mov
dec
mov
call
or
sub
push
pop
aam
pop
stos
mov
stc
in
pop
std
cmp
int
ja
mov
icebp
fsubrp
adc
addb
jns
out
js
mov
or
out
fstl
aaa
adc
in
add
pop
xor
fwait
in
jbe
ljmp
lahf
aas
jg
pop
push
push
mov
adc
test
enter
xchg
adc
add
outsl
ficomps
imul
lea
int
xchg
out
push
loope
push
std
iret
mov
jmp
out
inc
jecxz
imul
push
mov
mov
aaa
outsl
ficoms
or
int3
and
repz
fwait
rolb
fadds
imul
mov
sub
xor
or
daa
iret
sarl
fldl2e
xchg
fwait
aaa
add
pandn
mov
iret
js
inc
jge
pop
test
add
nop
fwait
aaa
outsl
fimuls
or
sub
arpl
jp
repz
push
ja
loopne
popa
inc
cmc
jl
push
outsl
fidivrs
bound
movq
xor
out
fwait
mov
mov
jle
ljmp
mov
push
jl
cmc
or
rcr
lcall
jnp
mov
inc
call
xchg
int
aaa
xchg
js
sub
lret
std
xchg
into
mov
mov
mov
or
out
mov
dec
lahf
ror
fwait
aaa
outsl
push
insb
and
bound
repz
jae
inc
push
xchg
mov
fwait
aaa
outsl
fidivs
adc
jnp
aas
pusha
dec
movsl
mov
xchg
mov
sbb
shl
fdivrl
icebp
aad
decb
push
call
stc
push
dec
pusha
pop
sti
pop
out
inc
mov
mov
iret
lahf
aas
jg
xor
push
xchg
and
mov
sbb
stc
repz
cmpsl
int
lahf
sub
mov
push
les
daa
jg
aam
add
icebp
aaa
aas
jg
cld
hlt
pop
mov
mov
ret
out
lahf
fxsave
mov
stos
inc
jo
orb
int
ja
aam
inc
mov
xchg
mov
rcll
jecxz
fbstp
lahf
aas
jg
push
xor
pop
push
push
imul
jg
leave
out
lock
jg
xlat
sub
pusha
out
lahf
aas
mov
pop
sbb
inc
jle
stc
repz
insb
leave
mov
aaa
das
mov
mov
mov
int
ja
xchg
aaa
mov
push
fiadds
push
repz
fwait
pop
sbb
pop
sbb
in
lret
or
mov
repnz
insl
aad
and
mov
or
fwait
aaa
pop
scas
or
inc
int
push
adc
lahf
push
fidivrs
cwtl
icebp
adc
cmpsl
add
adc
fwait
aaa
outsl
mov
mov
popa
adc
sbb
lahf
aas
lock
out
dec
mov
stc
repz
jnp
and
inc
in
ljmp
mov
sbb
add
repnz
cmp
call
xor
and
push
cmp
leave
ret
pop
jge
in
aaa
outsl
fidivrs
and
imul
adc
enter
popl
fbstp
fidivrs
sbb
cltd
adc
push
sbb
int
aaa
outsl
repz
dec
clc
sub
mov
out
mov
imul
mov
int
aaa
outsl
fmulp
icebp
sbb
and
rcll
push
mov
ficomps
ss
aaa
rorb
adc
push
jo
repz
in
and
in
test
xor
xor
in
aaa
outsl
fidivrs
fs
inc
adc
shlb
fwait
sub
pop
mov
repz
pusha
enter
or
out
sub
outsl
fidivrs
pop
stos
xor
cmp
mov
out
fwait
insb
jle
lods
sub
inc
pop
arpl
fdivrl
jg
mov
sub
jp
add
iret
lahf
jg
pop
and
ljmp
pusha
and
loope
inc
xchg
movsl
jecxz
scas
jp
out
insl
xor
dec
jp
cld
loope
repnz
inc
cltd
push
inc
dec
shll
adc
jg
movsl
fisubrs
cmp
inc
fistpl
das
mov
inc
enter
out
xchg
fstpl
test
je
ja
jg
cld
sub
arpl
or
test
fs
mov
out
lahf
fmul
jne
test
push
orl
ljmp
ds
jg
cmp
lods
jg
mov
and
sub
dec
cmp
jbe
out
xchg
scas
test
jg
cld
scas
orl
jnp
inc
inc
repz
lahf
sahf
push
xabort
call
mov
xor
jg
repnz
push
cmp
ret
mov
push
repz
fwait
jno
push
mov
ds
dec
cmp
lea
data16
xchg
aas
enter
push
fwait
aaa
outsl
fsubp
push
es
cmp
lods
imul
repz
xchg
subb
daa
mov
dec
adc
stc
rcll
pop
jae
fwait
addl
cmc
mov
jge
addr16
xor
cld
loope
jne
cmpl
jns
fwait
xor
and
jg
jp
mov
stc
repz
sbb
mov
mov
add
jg
cld
lock
push
inc
inc
mov
xchg
jb
arpl
mov
sahf
xor
aaa
outsl
fidivrs
adc
hlt
jbe
in
dec
lret
hlt
enter
out
incl
push
stos
fidivrs
mov
mov
js
xchg
int
aaa
outsl
sbb
sbb
hlt
mov
jb
loopne
sbb
jns
out
loop
int
das
fbstp
push
xchg
icebp
mov
dec
inc
adc
inc
les
data16
lahf
jns
out
aad
xchg
lds
mov
je
aaa
outsl
fidivrs
lock
inc
pop
cwtl
push
bound
adc
mov
daa
mov
es
lcall
dec
stos
jns
add
ss
push
imul
pop
xor
divl
dec
mov
add
out
and
mov
inc
dec
cmp
xor
popa
push
stc
add
outsl
fidivrs
add
cmp
sbb
ss
repz
fwait
int
popf
dec
cmp
es
mov
sbb
dec
sbb
aad
sub
xchg
mov
orl
push
pop
or
into
rcl
in
sbb
std
sbb
xchg
int
pushf
sbb
lock
pop
mov
fs
cmp
xor
fidivrs
orl
and
js
push
int
aaa
outsl
aaa
or
test
inc
push
in
pop
dec
insl
and
fidivrs
pop
stos
adc
repnz
or
dec
pop
and
dec
bound
mov
cwtl
inc
stc
repz
addr16
daa
aas
sarl
or
aas
jg
cld
pop
lds
push
fisubl
mov
add
xchg
jb
negb
repz
dec
imul
imul
sbb
insl
daa
or
int
dec
aaa
xchg
push
pushf
add
mov
or
idivl
out
fwait
aas
jg
lock
fnstenv
add
mov
ret
cmp
xor
and
loope
inc
or
lods
jae
es
push
mov
sbb
adc
and
data16
and
mov
fcmovne
xor
cmpsb
push
pusha
jns
xchg
aas
fidivrs
sub
popf
or
adc
subb
or
loopne
sahf
pop
add
pop
out
fwait
ja
pusha
jge
and
sti
vmovlpd
mov
and
sbb
jne
movsb
fwait
aaa
out
add
xchg
sbb
into
outsl
push
jns
out
test
into
stos
inc
mov
push
lock
js
insb
fidivrs
jbe
xchg
loop
hlt
loopne
out
mov
and
sbb
fidivrs
xchg
imul
sub
cmpsl
ret
dec
mov
fwait
aaa
outsl
push
repz
xor
jmp
adc
jnp
mov
fdivrs
pop
fwait
aaa
outsl
fisubs
fiaddl
icebp
jae
jns
out
in
pusha
fwait
aad
push
repnz
clc
loop
stos
ds
adc
pop
and
xor
jbe
dec
cli
xor
mov
in
mov
aaa
sub
aam
jg
jmp
sbb
hlt
repz
fwait
jmp
imul
cmp
fidivrs
je
mov
mov
int
mov
js
lahf
push
movsb
dec
xchg
fnstcw
hlt
xchg
inc
push
push
popa
mov
and
xor
mov
lahf
aas
jnp
inc
xchg
cld
add
mov
stc
repz
call
inc
xlat
xchg
sahf
outsb
fstps
pop
xchg
lahf
aas
jg
decb
andb
in
dec
push
bound
outsb
jne
add
mov
repz
mov
add
nop
std
dec
ret
imulb
add
lret
fcompl
lds
xchg
movsl
xor
mov
pop
mov
add
xchg
iret
xor
dec
dec
and
stos
jno
ljmp
loopne
repz
shl
aaa
movsl
pop
cmpsl
mov
ss
add
fdivrl
mov
mov
mov
pop
call
aaa
outsl
int3
ret
daa
push
loope
pop
cwtl
mov
loop
test
mov
push
aam
aaa
outsl
ficomps
shll
in
adc
cli
and
addr16
repz
lds
jnp
jbe
cmp
stos
iret
lahf
mov
push
cmpsl
aas
mov
stc
repz
add
popa
or
aad
lock
loope
or
sub
rcr
mov
aas
jmp
and
out
push
imul
and
mov
dec
das
xor
jns
out
rcll
cmp
mov
out
shl
outsl
fiadds
push
leave
ja
loop
pop
cmp
and
rclb
scas
lea
mov
repz
test
mov
xor
in
mov
inc
pushf
daa
stos
scas
inc
and
gs
insb
cmpl
loopne
imul
and
jns
xchg
pop
push
fiaddl
popa
in
mov
push
int
mov
and
bsf
out
mov
mov
sbb
adc
or
int3
or
jno
hlt
pop
in
xchg
xchg
jns
out
or
imul
dec
sub
fstpt
cmp
push
push
stc
idivl
repz
lods
sti
dec
pusha
repz
fwait
sti
cmp
out
mov
sub
mov
hlt
aam
in
pop
pop
fdecstp
f2xm1
lret
daa
fwait
aaa
cli
xor
insl
pop
jns
jne
movl
jl
cmp
jg
mov
lods
push
mov
xchg
int
mov
sub
jge
sbb
xor
jg
xor
fwait
loopne
roll
or
movsl
jns
out
test
add
enter
jecxz
and
aaa
outsl
fidivrs
jno
jnp
adcb
xchg
fwait
aad
mov
cmpsl
lahf
insb
fidivrs
lods
inc
and
dec
pusha
nop
inc
dec
pop
flds
mov
mov
repz
jne
into
push
outsl
leave
xor
fldenv
enter
in
mov
cmp
push
ds
add
repnz
data16
stos
imul
or
pop
add
ds
in
adc
aam
sub
imul
repz
or
icebp
pusha
into
pusha
das
cmp
scas
mov
aas
jg
cld
add
leave
and
inc
add
enter
daa
xchg
dec
jg
xchg
lahf
enter
push
adc
iret
sub
in
test
iret
lahf
aas
lods
sahf
mov
aam
mov
jp
cld
stc
repz
sub
or
dec
gs
iret
lahf
aas
jg
jmp
jmp
movsb
jp
or
fidivs
shlb
jns
jne
mov
fwait
ja
pop
call
xchg
arpl
out
in
imul
pop
sub
fidivrs
shrb
mov
mov
jae
in
int
out
fwait
aaa
shlb
test
or
xchg
es
cli
repz
test
mov
cwtl
scas
into
out
push
ret
cmp
jo
into
add
aas
jg
rclb
xchg
pop
roll
mov
repz
lahf
and
mov
mov
leave
and
stc
sbb
mov
lcall
inc
call
mov
sbbl
pop
dec
dec
or
or
push
int3
push
jg
and
repz
into
sbb
daa
xlat
cmp
sub
inc
cmpb
cld
daa
shl
jbe
mov
lret
mov
repz
lahf
aas
sbb
xor
gs
mov
xor
cld
stc
push
mov
stos
in
ja
cmp
iret
lahf
aas
lret
push
mov
bound
adc
xchg
add
outsl
fisubrs
jnp
inc
mov
cwtl
cltd
loop
repz
rorb
mov
mov
jns
push
pop
mov
shlb
movsb
iret
cmpsl
mov
int
aaa
iret
xchg
and
jae
pop
fs
repz
test
xchg
shlb
lods
repz
aas
inc
hlt
mov
dec
lcall
aam
cwtl
cld
cld
stc
adc
mov
movb
lods
mov
push
mov
cld
pop
push
stos
ret
pop
fdivrs
jg
cld
stc
push
add
jo
divb
jge
or
lahf
aas
mov
imul
push
stc
repz
orl
in
popa
in
or
aas
jg
add
xchg
popa
pop
gs
in
cmp
cld
stc
repz
cmp
dec
fcomip
scas
mov
mov
fstl
sbb
ss
cmp
ficompl
stc
repz
mov
adc
or
cmp
aas
jg
bound
inc
jnp
jne
adc
pop
les
ss
mov
mov
mov
and
mov
movsl
std
sbb
dec
xor
je
in
int
iret
aad
jle
mov
sarl
push
bt
cmp
es
pusha
fwait
aaa
outsl
ficomps
mov
insl
adc
test
lock
nop
leave
jmp
mov
jns
testl
loopne
jbe
push
adc
cld
test
mov
loopne
and
lahf
aas
jg
cs
add
loop
fadds
loope
cld
stc
repz
jnp
into
xlat
push
stc
xchg
push
mov
outsl
mov
aas
add
mov
and
loopne
stos
xchg
fsubl
arpl
fistpll
aas
cltd
push
jge
repz
hlt
lea
aaa
into
cmpsl
rdtsc
scas
out
mov
add
fs
call
jno
fdivp
out
fwait
aaa
inc
add
inc
cmp
sub
pop
add
mov
mov
mov
fs
test
outsl
or
subl
mov
lds
push
das
sub
pop
outsl
push
cmp
jg
cld
stc
xor
pop
aaa
pop
mov
imul
pop
cmpsl
inc
shlb
xor
sahf
xor
xchg
repz
aad
pop
outsl
pop
xlat
aas
xchg
xchg
mov
outsl
fidivrs
incb
pop
mov
xor
fsub
int
aaa
lock
fcomi
fnstenv
xor
mov
mov
mov
sbb
mov
int
aaa
outsl
outsb
dec
mov
jae
jae
stos
int
call
cwtl
das
lock
repz
fdivrs
rclb
jecxz
mov
aaa
outsl
fisubrs
push
inc
jle
fcompl
fdivl
lds
mov
mov
aaa
outsl
fidivrs
xchg
xchg
cmpsb
into
cmpsl
or
push
xchg
insl
xor
in
in
int
lds
inc
dec
jp
sbb
sbb
rolb
jns
lock
mov
daa
and
in
sub
aaa
outsl
fidivrs
test
lods
mov
push
jb
out
fwait
push
xchg
mov
xchg
mov
mov
mov
mov
repz
or
cmp
mov
add
pop
lahf
xlat
dec
mov
std
xrelease
ficompl
shr
out
mov
mov
ret
pusha
dec
jg
std
pop
mov
pop
out
push
sub
jg
repz
shr
jne
sbb
call
sub
mov
shll
dec
cmpsl
mov
es
out
dec
cld
or
and
lret
and
jg
fidivrs
xchg
bound
sub
pop
popa
adc
repz
lahf
mov
cs
xor
xorb
stc
stc
gs
pop
in
xchg
pop
mov
repz
lahf
mov
into
jb
mov
adcb
cmpb
stc
or
imul
fwait
aaa
out
xchg
adc
and
popa
mov
jns
out
es
mov
sub
jb
inc
sbb
les
cmova
inc
push
mov
ss
stc
repz
aam
mov
mov
outsl
lcall
pop
aas
loope
add
shrl
ja
dec
sbb
jo
je
outsl
fidivrs
movsl
pop
xchg
xor
mov
aaa
lock
sbb
jae
xorl
enter
sub
out
fwait
ja
adcl
mov
rcll
aas
fidivrs
lahf
xor
add
das
int
aaa
outsl
and
push
dec
and
aad
sbb
repz
or
data16
sbb
jle
outsl
ficoms
dec
push
lret
mov
inc
xchg
inc
adc
mov
and
lods
sub
xorb
or
outsl
ficoms
xchg
adc
fdivs
jbe
mov
xchg
push
fidivl
sbb
mov
daa
or
mov
ficomps
mov
sub
pusha
mov
jns
out
ss
add
jl
cmpsb
mov
ret
fidivrs
mov
push
lea
int
dec
mov
in
shll
fidivrs
sbb
lret
imul
dec
sbb
pop
cli
jmp
int
pop
movsb
test
push
into
and
pop
push
inc
fidivrs
mov
xorb
adc
fxch
mov
push
jg
dec
xchg
popa
outsl
addb
push
sbb
xchg
xchg
lock
mov
out
fwait
aaa
or
out
popa
dec
dec
cwtl
popf
dec
and
or
sarb
xor
sbb
push
fadds
adc
cmp
jge
inc
bound
daa
dec
mov
sub
mov
xchg
cmp
fbstp
mov
sub
lret
repz
cwtl
popa
pop
push
inc
push
subl
mov
or
and
jb
cmpsb
pop
ss
add
out
sub
lret
repz
lahf
jmp
aad
mov
and
cld
stc
xor
jb
loop
sbb
mov
ret
adc
nop
rclb
mov
rclb
jmp
mov
push
cmp
mov
psraw
mov
fstpt
or
or
xchg
shl
add
fadds
jne
lret
mov
loop
push
add
or
add
mov
add
leave
rorb
cltd
pop
fstpt
scas
in
mov
call
inc
popf
stos
push
push
rorl
sub
push
mov
push
xor
not
dec
push
je
xchg
jp
std
inc
ror
jo
sub
push
jne
jne
add
jbe
mov
sub
sub
add
push
rorb
mov
and
or
inc
cmpsl
rcll
sub
push
add
sub
inc
mov
ffree
mov
jns
push
push
or
add
jmp
or
or
adc
lock
roll
into
fildl
push
fdivrs
and
addr16
inc
rcll
call
cltd
insl
cmp
add
fisttpll
adc
stos
adc
ds
out
jmp
pop
fmuls
sbb
add
rcrl
pop
movsb
add
and
dec
mov
add
orb
movsl
rorl
pop
mulb
push
and
mov
mov
mov
push
and
add
scas
ret
adc
xor
mov
adc
cmp
and
push
mov
ret
and
arpl
push
mov
sbb
add
xor
xor
or
aad
add
data16
sub
shrl
or
shll
movsb
ljmp
pop
aaa
or
pop
mov
lds
pop
fistps
push
sub
sti
daa
add
inc
aad
or
mov
jecxz
fwait
into
mov
mov
fwait
lods
loopne
pushf
outsb
cli
push
push
dec
adc
mov
mov
add
mov
aam
xor
aad
pop
inc
in
inc
mov
sbb
pop
adc
sbb
outsl
inc
jne
add
mov
sbb
adc
mov
sbb
or
add
add
push
fimull
int
mov
iret
stos
mov
sbb
push
test
push
jne
sahf
divb
sbb
mov
pop
sbb
repnz
pop
mov
andb
xchg
cmp
or
push
popa
fstps
adc
cli
dec
push
cmp
xlat
push
dec
test
shl
adc
imul
push
lods
test
add
popf
jo
xor
or
cmp
sub
sub
adc
mov
ljmp
adc
int
xchg
jecxz
andl
adc
orb
add
orl
fnsave
fwait
aaa
mov
sbb
and
movsb
pop
add
push
sub
inc
or
fldl
sbb
cli
push
shrb
add
push
adc
mulb
mov
data16
pop
mov
dec
shrb
cwtl
mov
call
call
xchg
sbb
roll
ljmp
mov
sub
aad
stos
xchg
adc
roll
scas
ja
push
adc
push
xchg
nop
subb
inc
inc
jne
add
shlb
pop
or
add
in
mov
push
inc
cmpsb
stos
scas
out
mov
inc
jmp
enter
ljmp
and
repz
sub
cmp
insl
ret
adc
ljmp
stos
andb
push
je
jno
inc
add
sub
daa
mov
and
mov
loope
mov
adc
mov
push
rcll
pop
call
jl
leave
es
mov
or
dec
cmp
or
inc
or
or
and
std
or
add
insb
fildl
push
arpl
add
pop
adc
jnp
add
xlat
rolb
loopne
add
push
stos
pop
imul
sbb
insl
loope
push
push
fcomps
aad
pop
cmp
jecxz
push
pop
add
push
stc
pop
push
adc
loope
shlb
ret
adc
test
rcr
push
lret
test
xor
pop
sbb
adc
add
outsl
jnp
jle
add
mov
adc
mov
insb
sbb
pop
push
push
push
mov
mov
shrb
pusha
mov
inc
pop
repnz
and
les
dec
mov
icebp
test
add
stos
and
add
fcomi
stos
aad
dec
push
or
or
or
push
popf
push
sub
rorl
inc
fsubrs
jno
lds
xchg
mov
cmp
adc
adc
add
mov
je
pop
rorl
mov
call
cmp
or
push
testl
dec
add
add
add
pop
stc
sbb
test
dec
add
mov
push
mov
je
cwtl
sbb
mov
data16
roll
mov
mov
pop
or
and
adc
or
add
adc
add
insl
pop
les
lods
bound
jne
into
push
push
pop
pop
adc
lods
push
imul
mov
mov
hlt
xchg
andb
or
xor
aam
add
add
sarb
pop
mov
rcl
hlt
mov
add
jo
mov
bound
mov
addb
adc
jns
add
xchg
pop
pop
xlat
bound
xor
das
sbb
insb
inc
sbb
fs
repz
je
rcl
js
xor
push
or
into
lods
mov
mov
sub
and
adc
add
add
push
add
int
pop
fs
insb
add
mov
lods
and
sbb
aad
push
add
jecxz
in
mov
or
out
mov
jmp
adc
add
inc
scas
add
mov
and
dec
sti
mov
fwait
mov
inc
sbb
xchg
mov
ficoms
add
outsb
rolb
xor
add
or
mov
mov
shr
mov
sub
lcall
push
xor
or
mov
loop
adc
lret
dec
shrb
inc
push
inc
cmp
lea
inc
xor
push
or
mov
dec
shrb
sbb
push
lea
or
inc
push
daa
pop
ret
mov
adc
shlb
mov
xchg
mov
lahf
pushf
test
inc
dec
out
add
pop
cmp
rolb
enter
lret
jp
ljmp
cmp
push
inc
push
dec
cmpsb
test
cmpsb
mov
std
aaa
inc
inc
push
sbb
pop
add
sbb
lcall
add
fwait
add
inc
lods
cli
in
testb
push
mov
jg
movsb
pop
and
or
lds
jmp
jb
and
sub
adc
sub
sbb
mov
xor
leave
lods
or
or
mov
and
and
enter
inc
stos
dec
adc
testb
or
adc
aad
call
outsl
shrb
ror
test
and
sub
mov
in
loop
and
stos
inc
mov
inc
ret
xor
add
push
or
in
testl
jp
sbb
and
stos
push
mov
adc
sarb
shr
adc
mov
lods
push
lret
mov
pop
std
mov
call
ret
jbe
add
in
loop
shll
dec
add
add
popf
sub
leave
cmove
dec
arpl
push
push
mov
sbb
or
mov
popf
dec
lods
stos
adcb
in
or
sbb
rorl
movsb
xor
rcll
shlb
nop
inc
aam
mov
int3
ret
subb
adc
cmp
cmp
or
loope
sbb
adc
stos
loopne
stos
clc
pop
mov
lret
xchg
es
cmp
sti
add
outsb
rclb
inc
adc
sti
enter
roll
adc
movsb
jbe
mov
xor
int
jnp
and
add
add
ret
hlt
jl
das
cwtl
mov
push
fdivrp
js
push
out
mov
jl
mov
mov
add
ret
fists
insl
or
mov
adc
mov
sub
lock
add
xor
stos
and
sbb
aaa
sarb
mov
inc
push
ss
test
xchg
dec
iret
push
aam
into
add
adc
xor
mov
push
subl
mov
adc
sub
adcl
or
mov
pop
push
test
je
pop
stos
mov
pop
ret
out
add
mov
add
xchg
pop
inc
add
mov
push
add
push
adc
sbb
adc
insb
sbb
out
mov
jp
rorb
sub
cmpsl
mov
adc
sub
pop
jle
push
cmc
push
lods
cmp
push
mov
movsb
das
and
add
enter
push
add
jb
or
mov
push
add
jge
ret
cmp
adc
dec
adc
jecxz
xor
push
test
pop
mov
dec
arpl
mov
push
push
sbb
adc
push
mov
cmc
lret
loop
add
push
mov
pop
push
into
decb
sub
pusha
push
xor
pop
hlt
imul
in
out
pop
xor
push
cmp
fiaddl
outsb
push
cltd
stos
leave
mov
ljmp
add
xchg
adc
add
mov
mov
sbb
sbb
inc
xchg
mov
push
imul
imul
sbbl
jo
push
cmpsl
mov
inc
xor
int3
enter
pop
test
fdivs
cmp
push
and
enter
mov
cmpsb
cmp
scas
into
inc
mov
or
sarl
je
cmp
ret
sbb
loope
subb
fidivl
lods
push
adc
sub
jnp
sahf
adc
test
dec
rcrb
jo
aam
ret
mov
xlat
icebp
sbb
xor
stc
adc
adcb
cmp
mov
xor
in
pop
add
cs
sti
cli
outsl
mov
or
mov
add
ret
mov
pop
adc
add
inc
mov
dec
std
call
cmp
or
nop
sbb
mov
ret
dec
lds
add
dec
test
sub
mov
cmp
je
pop
xor
add
adc
data16
jae
dec
rorl
shlb
out
mov
rorl
test
shl
out
arpl
pusha
sbbb
sbb
adc
mov
or
adcb
or
mov
or
sbb
push
or
lcall
pop
add
xor
in
or
or
test
test
ds
test
sbb
or
and
or
jecxz
inc
adc
push
lods
cmp
cmp
jo
sarb
ret
pushf
push
add
adc
push
lcall
sub
sbb
es
sub
ret
ss
test
test
or
popa
enter
pop
roll
addb
and
inc
inc
xchg
ret
push
mov
cmpb
cmp
push
sbb
adc
mov
lods
push
ret
xchg
push
and
push
dec
push
inc
ja
mov
stos
mov
rorl
sbb
and
inc
adc
stc
sahf
rorb
cmpsl
clc
or
add
or
cld
xchg
push
les
pop
jmp
call
sbb
or
sub
adc
xor
adc
enter
mov
aad
and
sub
pop
ret
push
sub
pop
addl
inc
add
js
pushf
test
sarb
inc
rcrl
jo
xchg
out
loop
push
fwait
hlt
add
outsb
insb
push
xchg
adc
pusha
rclb
lds
pop
inc
adc
push
lea
push
fstpt
inc
xor
inc
call
fldenv
sbb
push
nop
mov
popfw
sub
lret
mulb
adc
push
jge
push
mov
cmp
dec
adc
pop
sbb
inc
inc
push
add
mov
in
sub
inc
xor
sbb
outsl
dec
icebp
xchg
and
cli
xor
int3
rolb
cmp
sahf
mov
rcl
jmp
sbb
sbb
sub
enter
add
daa
push
cmpl
test
inc
add
xchg
sub
cmc
inc
in
add
pop
mov
cld
dec
dec
or
ljmp
daa
leave
inc
or
jae
push
into
test
imul
mov
or
enter
insl
push
inc
push
xor
shl
xor
adc
add
pop
cwtl
or
call
rolb
xlat
out
cltd
mov
icebp
mov
add
cwtl
fidivrl
mov
pop
sub
scas
sbb
pop
mov
push
mov
ret
or
cmpsl
cs
xchg
mov
lock
cmp
inc
rolb
inc
nop
or
push
fiaddl
sub
aas
mov
ds
out
in
cmp
lea
rorb
scas
cmp
jmp
xchg
xchg
xorb
test
push
pop
loopne
push
cwtl
icebp
insl
aaa
jp
cwtl
lcall
rolb
test
mov
repz
fmull
push
pop
sbb
xor
and
push
lea
push
cmp
sub
xchg
add
push
aam
add
lcall
xor
sub
fsubrl
push
and
decl
xchg
inc
popa
sub
mov
js
pop
push
je
add
add
subl
roll
int
sub
loop
mov
into
add
mov
cs
push
and
xchg
leave
push
ret
sbb
ja
orb
lds
pop
inc
mov
pop
outsb
mov
push
add
pop
cltd
add
push
sti
shlb
cmp
out
leave
lret
cmp
lcall
loopne
sarl
ret
jmp
int
cmc
add
adc
xor
sub
or
or
mov
jae
jnp
subb
ret
adc
and
insl
add
sbb
pop
sub
sbb
xlat
or
icebp
add
ror
les
mov
cmp
mov
and
cmp
push
sbb
add
pusha
adc
test
pop
push
cwtl
xor
and
mov
jne
ret
cmpl
in
mov
push
enter
cmp
mov
sub
push
call
inc
mov
jne
mov
or
and
les
pop
ret
pop
cwtl
or
push
push
ret
loop,pn
cmp
mov
cmp
lock
stos
dec
sbb
cmpsl
nop
mov
in
push
adc
xor
jo
addb
rorl
jecxz
ret
and
mov
popa
arpl
out
push
inc
mov
stc
add
stos
pusha
stos
test
adcb
sub
inc
adc
fisubrl
add
push
cltd
push
loope
lcall
mov
adc
sub
jno
or
addb
rorb
ljmp
into
and
repnz
sub
fadd
xchg
cli
xor
push
xchg
mov
adc
xor
add
push
pextrw
ds
lcall
mov
and
ljmp
push
in
adc
pop
adc
rorl
inc
scas
movsl
out
in
pop
mov
xchg
sbb
mov
mov
aam
icebp
sub
push
adc
mov
sbb
js
and
mov
pop
sub
cltd
adc
call
or
dec
andb
push
push
fisttpll
xchg
leave
adc
adc
jnp
xchg
sbb
xchg
into
jg
fistl
mov
mov
mov
ss
xchg
les
add
push
mov
jo
stc
mov
cs
pop
pop
jp
shr
push
addr16
lds
outsl
sbb
ljmp
and
jg
icebp
arpl
call
pop
inc
add
push
adc
mov
adc
in
stos
ficoms
cmpsl
dec
outsb
pushf
add
inc
inc
andl
and
mov
xlat
pop
aam
cmp
or
or
push
aam
and
and
or
adc
cs
mov
addr16
addb
sub
out
jnp
mov
sub
push
and
xor
daa
stos
pusha
stos
inc
add
mov
add
enter
mov
pop
je
rcrb
mov
xlat
or
xchg
ljmp
add
xor
dec
xor
mov
mov
mov
mov
ljmp
xchg
inc
or
adc
jo
sub
int
lods
into
inc
hlt
push
mov
or
adc
mov
cli
add
aaa
jo
push
add
adcl
dec
movsl
add
lods
jne
dec
js
add
rolb
push
mov
dec
call
inc
popf
lcall
sbb
ret
sub
sbb
sbb
mov
test
jno
rcl
or
pop
inc
xchg
dec
icebp
and
inc
jo
mov
dec
mov
cli
sbb
in
lock
or
mov
push
and
jle
aam
push
push
fs
cwtl
lea
push
add
es
cwtl
mov
mov
lock
pusha
mov
adc
jo
daa
iret
jno
shlb
aam
les
pop
cmp
cmpsl
filds
add
clc
inc
xchg
pop
push
test
orl
pop
adc
mov
lock
shl
add
or
add
sub
sbb
adc
sbbl
adc
inc
fidivl
test
test
or
and
add
fwait
push
sti
ljmp
xchg
jo
sbb
or
lret
loopne
stos
adc
inc
inc
sub
repnz
mov
cmp
mov
stos
mov
inc
inc
sub
push
mov
add
roll
inc
std
sub
dec
fsubr
mov
pop
and
test
add
sub
jle
dec
daa
pusha
pusha
fiaddl
sub
pusha
rolb
mov
or
mov
rcl
add
mov
fwait
xor
pop
stos
cli
add
cmp
xchg
fwait
and
push
shl
mov
cs
mov
and
push
push
hlt
pop
add
ret
or
jns
lea
sub
cltd
pop
add
push
cmp
push
std
sbb
cli
js
mov
fucomi
rorb
push
pop
stc
mov
movsb
jae
dec
out
xchg
loop
lods
xor
pusha
xchg
jecxz
sbb
sarb
adc
adc
orb
cld
aas
or
fsubrs
xchg
add
dec
or
inc
sbb
movsl
pop
push
std
or
outsb
repnz
mov
lds
pop
add
movsb
push
loope
sub
dec
mulb
add
out
jnp
jo
sub
call
or
in
xor
lods
inc
xchg
jnp
sbb
adc
dec
fcmovbe
stc
mov
inc
pop
js
jo
test
cmp
inc
mov
or
pop
test
les
inc
aaa
test
in
adc
mov
sub
stc
push
outsl
enter
std
pop
aas
sub
or
lahf
roll
mov
roll
adc
xor
cmpb
and
les
push
lock
mov
xor
pop
pop
mov
push
bsr
and
inc
push
rep
mov
fs
nop
pop
inc
and
push
stc
push
rclb
dec
dec
scas
and
xchg
push
leave
fstpt
jbe
loopne
sbb
add
add
sbb
mov
mov
cmpsb
adc
mov
gs
xor
aad
mov
adc
jo
mov
or
jl
add
push
mov
daa
add
inc
pop
ds
int
push
pusha
pop
or
and
mov
cmp
xorb
inc
pop
negb
test
in
push
push
add
cld
mov
jge
rcrl
sbb
fwait
sbb
bound
dec
lods
mov
adc
aaa
mov
inc
or
mov
inc
scas
fistpll
fs
or
pop
mov
mov
ror
cmpsl
ret
enter
inc
adc
test
pop
nop
sbb
cmp
add
movsb
nop
push
xchg
mov
loop
sbb
push
mov
je
int3
or
sub
xor
jae
jne
shrb
mov
xchg
adcl
cltd
shll
xor
or
jns
mov
push
and
or
sub
stos
mov
loope
inc
sbb
inc
mov
jmp
stos
jmp
lock
add
inc
subb
sub
mov
cli
loopne
nop
loopne
push
inc
lock
inc
inc
arpl
and
push
or
insl
test
sbb
mov
inc
jnp
pop
cmp
popf
sbb
or
notb
ret
lods
xchg
shlb
sbb
and
call
mov
lds
xor
or
rcl
dec
test
dec
shll
push
sub
jp
and
dec
and
loope
push
dec
inc
stos
cli
or
inc
push
loope
imul
movsl
test
xor
pop
mov
jbe
lods
js
xorl
ljmp
mov
push
mov
les
mov
pop
push
cmp
and
xor
shl
or
inc
push
popl
cwtl
push
pop
sub
mov
push
sarl
push
aam
mov
add
ljmp
shlb
ret
int3
test
movsl
adc
lea
xor
adc
stos
jge
xor
or
xchg
roll
pop
pop
hlt
and
sub
add
push
adc
fnstenv
inc
popf
push
imul
cmp
rcll
sbb
mov
inc
mov
popf
orl
addb
and
xchg
or
call
outsl
inc
and
pop
push
sub
or
adc
test
push
sub
test
push
rolb
andl
test
cmpl
sbb
jge
arpl
mov
rcrb
push
lea
push
into
xchg
leave
push
push
mov
dec
jnp
iret
add
sub
push
or
outsl
or
inc
and
inc
outsb
aas
push
call
push
and
cli
loop
cmp
rol
adc
icebp
add
aam
out
xchg
sub
xchg
jg
adc
add
push
adc
mov
add
add
adc
mov
popf
cwtl
xchg
addl
lcall
xchg
push
push
add
and
or
inc
call
loop
sub
mov
sub
push
roll
mov
aam
push
mov
add
inc
sbb
mov
jno
std
and
push
xlat
arpl
stc
stos
mov
loop
fs
and
addl
inc
shrb
add
mov
je
and
mov
xchg
call
push
fstl
aad
stos
cltd
and
pop
xor
insb
add
shrb
cs
adc
sbb
lret
clc
add
imull
xchg
adc
sbb
in
mov
pop
adc
mov
shl
xchg
xchg
jne
xchg
adc
push
sub
imul
xor
lret
and
scas
or
call
mov
adc
js
push
lret
sub
lcall
mov
push
cmp
cmp
mov
adc
lret
inc
mov
mov
nop
or
mov
pop
icebp
mov
or
jb
pop
push
sub
push
jo
mov
sub
dec
jmp
and
aaa
movsb
sbb
add
dec
test
adc
ret
sub
scas
or
xchg
repz
test
xor
or
jns
ficoml
inc
ret
ficompl
test
mov
xchg
shll
hlt
notb
rorb
push
pop
psrlw
push
pop
pop
in
adc
fadds
sub
sbb
add
pop
jl
mov
ljmp
addr16
mov
xor
into
mov
xor
cmp
mov
pop
arpl
jns
addr16
push
dec
xchg
mov
push
adc
mov
add
mov
jle
je
sub
mov
and
pop
jbe
add
cltd
lret
push
lock
sub
unpcklps
adc
in
aam
es
sbb
sbb
inc
mov
in
adc
stos
pusha
pop
adc
push
mov
adc
in
push
sbb
cli
or
paddq
mov
sbbb
mov
adc
sbb
dec
push
pop
xchg
addl
mov
repnz
xchg
fcompp
push
jle
add
adc
push
cwtl
jo
scas
imul
add
mov
mov
ret
push
lret
pop
dec
xchg
push
pop
cmpsb
push
fsubr
mov
shll
and
cmpsl
or
add
sbb
push
xchg
push
lods
ljmp
push
jbe
and
mov
cwtl
hlt
jne
push
cmp
xor
je
fwait
pop
cld
or
push
jl
xchg
sub
push
scas
dec
jno,pt
xor
push
add
es
pop
adc
mov
mov
push
sbbl
inc
int
inc
sbb
sbb
mov
inc
add
jp
std
aad
sub
xchg
mov
inc
subl
push
mov
sbbl
shll
imull
test
or
sbbb
push
add
pop
push
sbb
add
fldl
inc
rclb
add
push
pop
inc
scas
or
fwait
aas
adc
aad
push
sub
shr
add
psubd
or
fisttpll
mov
pusha
sub
or
mov
loopne
mov
adc
je
dec
cmp
lcall
aas
add
mov
test
aam
mov
cmp
test
cmp
lods
ret
or
or
hlt
mov
idivb
pop
inc
mov
ljmp
pop
add
jbe
mov
push
add
pop
xor
sarb
xchg
and
ror
inc
push
xor
lds
loopne
adcl
cmp
test
xchg
mov
lods
sub
mov
push
in
into
push
int
and
inc
mov
mov
mov
orb
clc
testb
jnp
xchg
addl
add
andb
inc
mov
test
icebp
add
shll
lea
sub
insl
je
push
fnsave
call
jge
adc
ds
mov
std
jb
xchg
push
adc
test
in
mov
inc
std
mov
lock
les
andl
add
addr16
loope
lcall
dec
mov
pop
or
adc
scas
pusha
sub
sbb
loope
aad
insl
out
cmovno
xor
inc
shl
in
inc
add
sbb
les
cs
js
xor
lock
loopne
orl
adc
xor
add
pop
icebp
xor
into
popa
ljmp
inc
add
nop
and
loope
pop
push
add
sbb
out
les
jne
add
mov
dec
leave
jne
push
rorl
jecxz
cmp
test
mov
push
adc
dec
roll
in
pop
inc
push
enter
xor
push
mov
adc
incl
loopne
xor
inc
insl
test
shrl
into
decl
test
test
xor
adc
inc
mov
in
mov
or
push
mov
sarl
mov
mov
inc
add
sbb
into
sti
mov
or
sbb
nop
imul
aad
add
jnp
nop
jmp
jne
test
cs
es
sub
mov
jmp
mov
and
push
arpl
add
xor
test
sahf
pop
stc
add
pop
inc
imul
push
sbb
sbb
fs
mov
lock
add
add
es
sbb
call
and
add
ficompl
add
mov
or
sbb
cltd
mov
sbb
in
add
sbb
shrb
jb
sbb
or
stos
jo
lret
xchg
mov
pop
fsubr
mov
vorps
out
or
shll
je
push
mov
dec
pusha
loope
out
mov
loope
mov
dec
shlb
in
add
mov
and
add
mov
push
ret
add
imul
push
loopne
adc
xchg
xor
push
sub
adc
add
add
push
inc
loopne
push
push
cmp
sbb
push
lds
push
fcmove
push
loopne
pushf
and
aas
mov
xorl
dec
mov
aad
ljmp
lret
lods
sub
cmp
xchg
pop
jp
and
cmpb
jl
mov
les
outsb
arpl
adc
mov
add
push
push
jae
sbb
sbb
adc
add
add
and
lock
js
cmp
mov
push
adc
popa
dec
mov
mov
jo
cli
mov
lods
push
add
or
xchg
cmp
inc
mov
sbb
mov
loope
add
or
or
mov
js
mov
inc
fstl
adc
jno
repnz
dec
or
sarb
enter
push
jo
sbbl
ja
inc
inc
or
jne
enter
leave
cld
push
sbb
loope
arpl
rolb
ja
dec
ljmp
ret
stc
or
rorl
bound
sub
outsb
call
xchg
outsb
mov
lds
sahf
push
mov
leave
fistpl
andl
and
xchg
adc
or
sub
push
cld
jo
adc
push
dec
xor
call
adc
add
adc
mov
out
push
sub
aad
push
pop
or
push
xchg
testb
push
mov
test
fistl
sarb
pop
cli
sbb
xchg
cmp
add
test
movsl
jo
adcl
jge
or
adc
inc
in
or
push
jno
and
add
jno
enter
dec
cmpsb
cwtl
add
dec
add
aas
std
shl
add
jb
adc
int3
arpl
mov
push
sub
push
add
adc
inc
pop
sbb
shrl
xchg
or
xor
pop
stc
pop
cwtl
push
ret
or
jge
ds
mov
jmp
pop
xchg
andb
and
add
shll
jae
adc
cwtl
mov
adc
pop
add
mov
pop
add
dec
ret
rorl
loope
add
outsl
mov
mov
xchg
pop
nop
in
daa
inc
xchg
bound
jns
push
movsl
inc
sub
jb
push
xchg
dec
and
push
cmp
sub
clc
cmpsb
inc
inc
orb
jne
cmp
orl
sbb
test
rolb
and
add
adc
mov
lret
dec
mov
jge
add
adc
movsb
push
adc
mov
in
mov
mov
or
mov
and
xchg
or
cld
add
orb
or
add
or
or
adc
push
jae
cmp
add
dec
push
mov
std
test
rcrl
adc
sub
fistl
mov
pshufw
subb
roll
addl
lods
or
adc
adc
push
dec
test
nop
aas
outsl
dec
pop
and
mov
adc
enter
mov
cmp
and
sarb
dec
adc
das
or
or
shrb
push
mov
or
clc
and
std
adc
adc
lret
xchg
mov
xchg
xchg
sub
pop
adc
inc
scas
cmp
cwtl
xlat
sbb
or
push
push
stos
in
add
cmp
and
mov
in
idivb
js
sahf
push
or
or
cmp
inc
enter
push
outsb
inc
imul
gs
inc
sbb
jb
mov
jp
cltd
pop
sbb
hlt
insl
insb
push
or
or
cmp
test
adc
pushf
push
push
loopne
cmp
outsl
rol
push
stos
mov
movsl
pop
lea
fistl
inc
add
inc
mov
or
jo
xchg
inc
rcll
mov
xchg
or
xchg
mov
out
push
stos
sbb
sub
and
popl
push
mov
jl
pusha
and
pop
mov
push
cwtl
sahf
jnp
inc
inc
mov
adc
cmp
mov
cmpsb
xor
lea
and
jmp
outsl
test
xor
jle
jne
mov
sbb
dec
xor
push
and
inc
adc
xor
inc
or
add
inc
pop
fs
cmp
aam
ret
xchg
xor
push
and
inc
adc
in
sbb
mov
push
cmpsb
bound
xchg
insb
lods
pop
pop
out
stc
xchg
and
adc
mov
xor
xor
push
bound
mov
add
push
pop
scas
rcl
notb
or
insb
pop
push
mov
les
or
ss
mov
pop
mov
push
push
lods
test
dec
lds
or
adc
inc
inc
jae
shl
xchg
push
into
adc
fwait
mov
pop
or
and
jge
loop
jl
ljmp
cltd
leave
addb
or
inc
int
test
jae
push
adc
mov
adcb
sbb
pop
lret
mov
mov
adc
les
and
mov
cs
adc
lods
sbb
ret
movsl
repz
push
test
mov
leave
sub
push
cmp
movsl
cmpb
xor
push
test
pop
lds
roll
and
inc
adc
mov
adc
cmpsb
inc
ds
push
adcb
pop
or
ret
xchg
dec
cmpsb
mov
arpl
sub
pop
lods
shrb
inc
in
inc
adc
call
mov
gs
in
addr16
mov
repz
mov
sarb
sbb
cwtl
jo
mov
or
cwtl
into
or
repnz
rolb
xor
xor
test
mov
and
in
xor
aam
lods
push
loope
cmp
dec
mulb
mov
jmp
mov
outsl
les
and
loopne
cmpb
loopne
inc
cmpsl
xchg
add
cmp
sarb
inc
imul
push
adc
sbb
das
scas
sbb
lock
adcl
rclb
sbb
sub
mov
sbb
into
and
push
je
inc
push
and
in
movlps
clc
gs
int3
lcall
mov
adc
mov
dec
or
adc
fimull
push
cltd
mov
rorb
inc
sti
cmp
shrb
shrl
inc
pop
sbb
outsb
sbb
xlat
lahf
jno
nop
into
das
push
push
jl
add
xor
test
mov
push
add
sbb
pushf
inc
push
jle
and
pop
jne
mov
jge
xchg
pop
xor
push
dec
into
cmp
xor
and
xor
add
pop
gs
sbb
or
add
popa
add
arpl
cld
mov
inc
es
cli
cs
jl
orl
aad
push
cmp
cmp
scas
subl
add
adc
adc
dec
pushf
test
dec
aam
mov
xor
jno
add
push
sbb
dec
inc
insl
and
sbb
push
stos
adc
test
mov
ds
cmp
inc
pop
out
aad
out
pop
std
les
push
les
pcmpeqb
sbb
pusha
repz
pusha
mov
add
sbb
add
add
adc
xor
sarw
aam
jmp
push
mov
mov
stos
retw
and
mov
inc
imul
xchg
pushf
loopne
gs
fwait
into
mov
rolb
xchg
jmp
repz
stos
mov
xchg
pusha
sub
repnz
dec
inc
push
mov
mov
or
and
jbe
jp
popa
js
mov
adc
pop
bound
dec
shll
sub
push
adc
and
jecxz
rolb
je
mov
inc
mov
loope
addb
andb
add
and
cmc
lock
push
cltd
rclb
out
xchg
mov
shrl
hlt
mov
jo
pop
add
mov
push
xor
lcall
movsb
pop
push
add
push
cmp
push
xchg
jge
sbb
dec
sarb
add
bound
ljmp
ficoml
mov
xor
leave
pop
inc
scas
push
sub
or
aas
shlb
mov
mov
mov
push
mov
call
rorb
js
jnp
lds
or
or
outsb
lea
adc
pop
orb
pop
test
jne
lahf
mov
mov
push
adc
xor
mov
mov
jne
or
pop
sbb
stos
clc
packuswb
mov
mov
inc
orb
jnp
fs
sub
lea
movsb
push
sub
push
push
inc
pushf
testb
je
aam
add
pop
sbb
and
and
fucomip
mov
push
decl
or
sti
fstl
adc
pop
pop
ret
mov
jne
or
mov
jne
or
and
or
cwtl
sti
mov
das
and
loop
sti
fs
hlt
in
add
sahf
out
jnp
mov
or
push
add
xlat
mov
inc
add
ret
call
filds
push
or
sbb
outsb
adc
cmp
jne
sbb
add
dec
or
cmpl
fwait
out
out
out
and
mov
enter
les
mov
and
or
jno
nop
jb
push
pushf
stc
ss
jae
pop
cltd
sbb
stc
pop
in
jmp
mov
pop
je
or
pop
ret
subl
repnz
sbb
pop
or
push
mov
enter
movb
mov
jo
push
sbb
nop
pushl
or
fs
mov
js
je
outsb
mov
or
add
sti
add
or
pop
jmp
lods
sub
add
loop
dec
push
int
mov
or
in
dec
or
or
mov
pop
scas
enter
xchg
push
sahf
add
daa
lea
movsb
xchg
jle
aas
and
or
and
loope
insl
sti
cmp
jl
mov
pop
jle
cmp
mov
pop
shr
pop
cmp
enter
cmp
xchg
aas
xchg
sbb
cs
xor
iret
and
mov
jbe
iret
rcrl
js
pop
std
fbstp
jmp
call
mov
or
jmp
decl
sbb
mov
pop
leave
mov
push
pop
loopne
popa
cmp
push
jnp
adc
mov
add
cmp
jne
test
out
adc
or
dec
jmp
call
sti
jmp
push
cmp
jne
mov
inc
pop
je
test
sti
sbb
mov
das
outsl
mov
jmp
cmpb
scas
mov
or
jbe
inc
or
ja
xor
jp
mov
add
jmp
fstpt
sbb
sub
mov
hlt
xchg
cmp
je
cmp
je
inc
out
jne
pop
lea
add
aaa
mov
adc
pop
cmp
mov
lods
mov
pop
sbb
mov
cmp
cmp
jo
test
mov
pop
inc
cmpb
and
cmp
sbb
push
cs
pushl
or
bound
pop
in
fildl
std
aaa
jne
pop
incl
aam
clc
or
test
ja
arpl
mov
add
push
push
ja
dec
clc
mov
xchg
cmp
dec
mov
mov
push
add
push
push
push
lahf
data16
ja
imul
mov
popa
ja
fsubrs
daa
and
push
push
xor
cld
daa
adc
pop
movsb
pushf
hlt
mov
jecxz
dec
sbb
subl
outsl
ret
adc
jge
movl
test
aaa
jg
shlb
fwait
inc
mov
inc
andb
test
mov
and
test
pop
push
xor
mov
mov
inc
inc
or
jmp
or
andb
inc
inc
fistl
sbb
add
jae
outsl
leave
testb
and
lret
pop
or
or
jne
dec
mov
int3
shl
shlb
cmpsl
sbb
dec
add
xlat
inc
sub
pop
enter
int3
mov
add
rcl
test
pop
jne
inc
inc
jmp
xchg
sub
ret
inc
inc
lea
or
jecxz
sbb
aaa
or
pop
xor
xchg
ret
shll
ja
jmp
rorl
xchg
push
inc
mov
inc
mov
push
repz
mov
aas
je
minps
sbb
popa
ret
push
pop
sbb
jbe
outsb
inc
inc
add
add
in
ficoml
xor
push
data16
jno
push
adc
pop
sti
pop
ret
call
and
sub
adcl
ffree
test
jle
sbb
add
fpatan
dec
jnp
aam
sbb
jmp
pop
inc
inc
cmp
pop
mov
sbb
loop
movsl
cmp
pop
xchg
aas
daa
ret
xchg
outsb
cmp
jae
inc
inc
or
jne
push
ja
inc
xor
clc
cli
push
pop
add
movsb
das
xchg
imul
adc
imul
adc
push
push
shll
lea
or
daa
pop
or
cld
dec
mov
mov
jmp
enter
in
jne
movsl
test
pop
pusha
mov
je
inc
cmp
add
movl
push
into
stos
sti
jmp
arpl
push
xchg
mov
push
cmp
insl
mov
dec
in
xlat
or
push
xchg
cmpsb
ret
sbb
test
loopne
loopne
lea
gs
push
outsl
add
andl
inc
push
mov
mov
pop
jmp
and
mov
rcl
lahf
lods
lea
in
in
or
cmp
mov
jmp
add
push
clc
jl
pusha
pop
divl
addr16
mov
pop
mov
push
ret
lea
stc
shll
pusha
or
mov
jnp
in
add
mov
mov
push
mov
adc
jle
mov
mov
test
xor
mov
xor
stos
push
and
insb
adc
das
loopne
fcomi
cs
or
shll
jae
cs
mov
mov
inc
add
inc
cmp
jl
mov
pop
and
cmpl
lea
jne
fildll
adc
push
das
enter
jmp
insb
lds
ret
dec
neg
sbb
xchg
cmp
pop
push
jo
and
sbb
in
orb
or
mov
jns
jne
or
add
addb
jl
jle
ss
pop
test
outsl
sbb
pusha
xor
mov
mov
cmc
jns
int
jnp
sub
sbb
sbb
adc
adc
or
pop
pop
lea
or
xor
inc
adc
insl
insb
insb
add
xor
fwait
popf
mov
adc
data16
insb
inc
mov
or
push
jb
inc
es
push
pop
adc
subl
add
imul
adc
inc
push
xlat
test
sub
popa
xchg
jo
ret
nop
mov
cs
mov
mov
mov
pop
aad
ffree
mov
testl
or
add
lds
mov
add
jle
adc
push
push
inc
in
add
sbb
push
mov
cmpsb
or
mov
sub
mov
pop
mov
dec
test
jl
insl
xchg
jae
adc
sub
call
mov
popl
pusha
jmp
jno
ljmp
push
or
push
test
sbb
pop
jecxz
add
or
dec
push
or
lods
imul
ret
int3
push
inc
xor
pop
loopne
sbb
inc
xor
mov
or
fmuls
in
adcb
cwtl
ss
inc
adc
and
jnp
shll
mov
call
inc
push
push
lea
test
pop
pop
inc
or
call
cmp
push
mov
mov
sbb
push
or
add
ss
fimuls
mov
push
or
or
sbb
sbb
jmp
mov
jmp
pop
inc
mov
xlat
aas
pop
push
xchg
mov
outsl
push
mov
push
add
push
and
adcl
insl
jge
mov
mov
pusha
push
sbb
out
ss
xchg
pandn
adc
into
sub
xor
mov
push
pop
call
test
icebp
jb
shl
cmp
push
es
insb
xchg
call
jo
adc
test
jne
test
or
sti
test
xchg
jmp
stos
adc
push
xor
pop
mov
push
add
sbb
outsl
mov
popf
mov
sbb
clc
or
andl
add
clc
inc
call
cmp
dec
adc
or
sbb
lods
jge
jmp
sbb
adc
and
mov
pop
inc
sub
test
adc
fcmove
push
hlt
movsl
jmp
sbbb
nop
test
orl
fmul
and
lret
subl
test
xor
jne
push
push
aaa
imul
mov
add
in
outsb
xchg
sub
test
add
mov
xchg
sbb
scas
pusha
call
mov
cmp
mov
outsl
int3
jle
fcmovnbe
cmp
mov
mov
sbb
filds
cltd
outsl
push
movzwl
pop
or
mov
cmp
bound
sbb
jecxz
stos
mov
xchg
cmpsl
cwtl
pop
add
sub
jmp
mov
fmull
push
cld
push
ss
fistps
jo
sbb
inc
mov
mov
jnp
cmp
mov
push
andl
fnstsw
call
pop
jbe
addl
out
mov
mov
or
call
mov
xchg
and
cmp
out
out
push
dec
fnsave
lret
add
lea
ljmp
je
mov
mov
add
xchg
mov
jmp
push
outsb
std
in
inc
adc
inc
inc
cmpb
aam
add
sbb
shll
adc
cmpsl
lods
lods
push
mov
fisttpll
jo
mov
shll
rcl
jns
jno
gs
aas
jge
inc
cmp
cmp
outsl
cmp
pop
dec
push
jmp
or
add
dec
stos
add
push
jo
inc
xchg
xchg
jp
in
jb,pn
add
jmp
adc
pop
repz
inc
sub
fstpt
adc
jmp
pop
cmpsb
xchg
cld
mov
push
mov
into
mov
icebp
or
inc
pop
push
mov
pop
inc
add
sbbb
lock
jno
shrb
lods
in
pop
xchg
sub
out
lea
clc
pop
arpl
cwtl
adc
pop
xor
stos
mov
in
decl
pop
sub
movb
lea
repz
ja
frstor
xchg
lea
mov
shrl
fucompp
add
stos
inc
inc
mov
xor
rcrb
scas
popa
rcrl
lock
cli
mov
mov
xchg
fnstenv
and
sbb
pop
leave
enter
dec
add
aad
pop
daa
jb
mov
lea
mov
test
push
add
mov
xchg
add
adc
push
mov
adc
pop
ret
fbld
add
arpl
sbb
mov
bnd
enter
mov
sbb
push
push
and
and
dec
and
mov
icebp
adc
inc
std
pop
ret
pop
add
mov
dec
cmp
mov
mov
adc
or
sbb
imul
pop
push
imul
insl
mov
aaa
pop
cld
mov
movsb
and
ljmp
test
pop
data16
inc
lret
cmp
jne
mov
mov
jle
lock
out
ss
leave
test
call
test
je
jb
ret
sbb
add
int
xchg
xchg
mov
pop
jmp
add
jmp
std
jmp
cld
fwait
mov
jmp
or
sbb
inc
loop
mov
out
jmp
mov
fldenv
or
pop
outsb
imul
test
daa
test
insb
jecxz
sbb
cmp
xchg
lods
lock
or
and
js
aad
mov
jl
loopne
and
add
jo
ret
push
jne
lret
xor
hlt
sbb
jb
pop
xchg
jbe
clc
xorl
add
jb
mov
xor
add
inc
js
dec
addl
xchg
inc
cmp
dec
mov
nop
inc
js
mov
and
inc
xchg
dec
mov
lds
rol
std
pop
rcll
fs
jle
jmp
aad
xchg
mov
lret
test
jbe
clc
fidivl
jecxz
cmpb
mov
and
sti
sbb
movsl
jmp
inc
sbb
mov
lret
mov
loopne
enter
mov
sahf
insl
cwtl
nop
pop
sbb
adc
jnp
incb
and
mov
mov
sub
inc
add
imul
mov
int3
sbb
lea
and
dec
sahf
add
inc
xlat
jne
stc
aas
mov
jg
insb
pop
dec
shll
inc
cmp
shll
mov
mov
call
dec
shll
lock
hlt
clc
pop
and
cld
jge
push
popa
sub
push
or
sbb
add
mov
mov
popf
or
and
mov
or
mov
je
addr16
cld
jg
insb
jnp
and
std
jecxz
ja
and
rcrl
rorb
stc
scas
cmp
sub
sub
or
imul
add
outsl
add
stc
mov
mov
pop
xchg
mov
add
cmpb
daa
and
xchg
sub
scas
inc
jmp
pushaw
pop
test
aam
scas
imul
imul
xchg
sbb
sbb
adc
adc
or
lcall
add
jmp
and
add
pop
adc
mov
and
xchg
xchg
adcl
xor
pop
or
aad
add
shrb
loopne
fidivs
ljmp
push
lods
inc
jg
cld
daa
mov
add
push
jne
push
or
and
jp
pop
or
jmp
push
add
out
fildl
setl
jmp
mov
xchg
sbb
jne
pop
test
xchg
and
mov
push
nop
and
jae
mov
push
sub
push
incb
lods
aad
test
pop
push
or
and
jb
sarb
sbb
sub
add
das
mov
adc
jno
pop
jp
cld
push
outsb
loop
loopne
out
vmwrite
imul
jge
sbb
inc
cltd
jge
dec
mov
or
test
or
jne
rcrl
outsl
mov
or
iret
jbe
ret
dec
adc
add
mov
movsb
dec
xchg
incl
call
sbb
sub
out
lea
xlat
and
decb
fadds
and
jmp
shl
cmp
pusha
cs
adc
xchg
sbb
jl
mov
add
add
or
sar
insl
insl
imul
aas
jnp
pop
das
mov
rcll
bound
mov
pop
cmp
cmpsb
jbe
fistpl
xchg
repz
sti
inc
cmp
fcmovnb
cli
jbe
cli
mov
push
and
add
ljmp
push
adc
mov
shlb
xchg
dec
push
xchg
in
fstpt
add
loop
inc
lods
adc
cmp
push
sbb
lea
lods
mov
mov
push
add
or
add
movsl
jbe
inc
jg
paddd
mov
jae
scas
fs
push
mov
jmp
or
or
lea
sbb
sub
lea
sbb
loopne
and
test
ret
cmp
mov
sub
lret
cli
dec
mov
ljmp
mov
test
shl
add
imul
or
andb
xlat
fadds
sbb
push
or
outsb
idivb
cmp
andl
call
or
jns
adc
shlb
dec
jne
sub
jo
pop
sub
mov
adc
adc
popa
xchg
add
xchg
mov
enter
adc
push
lea
xchg
jmp
push
test
cmp
into
out
jmp
xchg
mov
lods
mov
out
xchg
mov
adc
sub
inc
xchg
dec
pop
jbe
pop
push
xor
pop
out
push
push
sub
out
sub
mov
jmp
and
pop
lret
xor
shr
push
or
loopne
pop
dec
fdivrs
jae
pop
std
in
ret
loope
and
and
or
jne
clc
adc
out
jbe
cmp
jne
mov
cmp
es
add
pop
and
jbe
loope
push
jnp
xor
adc
jmp
jae
push
jns
or
fiaddl
jnp
add
scas
test
orl
orl
mov
adc
dec
xchg
mov
jbe
mov
mov
mov
jo
push
fistl
sbb
fisttpll
push
inc
or
mov
jne
xor
add
xchg
bswap
lcall
and
or
je
mov
add
ja
mov
into
jne
pushw
fs
test
jne
jbe
jl
shl
inc
jmp
mov
push
stc
inc
or
jg
aam
xorl
cwtl
aas
jle
pop
cmp
fsubrl
fwait
or
and
insl
and
adc
ja
pop
pushf
shl
in
and
mov
decb
jne
ss
mov
or
xor
sub
sbb
sbb
mov
sbbb
insb
jb
sarb
add
scas
jp
nop
test
test
jl
inc
or
and
xchg
outsb
xchg
gs
decb
jge
les
jae
cltd
or
mov
bound
mov
jbe
cmp
jmp
sub
dec
add
jnp
jmp
divb
out
or
push
sub
or
mov
jle
add
adc
cld
mov
mov
and
jne
movsb
scas
aad
pop
mov
add
adc
in
inc
add
add
subb
mov
lcall
xor
push
inc
cmp
cwtl
jb
xchg
push
xchg
push
xor
jl
cmp
je
pushf
shlb
mov
les
mov
stos
xor
mov
inc
adc
adc
push
sbb
sbb
sbb
jbe
fs
jl
aam
mov
jle
incl
orl
or
enter
fcmovnb
lea
dec
loopne
ret
aaa
imul
pop
sti
xor
fiaddl
add
dec
push
lahf
in
lods
sti
test
out
jns
mov
addb
mov
sbb
inc
lea
orb
ja
repnz
out
lea
cld
lock
push
out
jmp
dec
add
sub
adc
push
sub
stos
cs
dec
or
clc
mov
fsubs
mov
xchg
lods
or
inc
mov
jecxz
mov
test
mov
sub
mov
mov
push
jle
fsubrs
cmpsl
inc
inc
jno
sahf
loop
test
scas
test
inc
movsb
mov
sub
popa
inc
je
adc
sti
mov
addr16
add
adc
or
dec
mov
call
cmp
ret
push
loopne
add
add
dec
ror
out
call
push
xchg
jp
push
mov
stos
mov
push
test
adc
jne
jmp
inc
mov
pop
push
inc
inc
dec
je
adc
pop
aaa
sti
pop
jnp
jmp
sbb
je
and
das
aad
pop
lds
dec
push
pop
je
cmp
inc
adc
out
insb
sbb
cli
sub
and
notb
daa
lret
jb
push
add
sub
or
ret
jne
cmp
sbb
testb
push
add
rclb
insb
idivl
mov
pop
jne
mov
test
pop
xchg
dec
pop
adc
pop
lock
jo
inc
push
push
or
xor
popa
cmp
sbb
in
and
inc
sbb
movsl
and
cmpsl
jo
js
xor
cmp
test
pop
pop
push
arpl
call
push
loope
data16
sbb
push
sti
mov
lods
sub
roll
inc
sbb
sbb
mov
and
loopne
inc
push
or
and
js
insl
test
mov
cld
add
mov
mov
adc
jmp
out
mov
in
add
sub
add
mov
mov
sub
outsl
fstpt
imul
cmp
or
movb
and
add
add
std
out
fistpl
mov
ret
cld
and
cli
or
sbb
in
in
add
or
imul
add
sub
sub
sbb
sub
fbstp
sub
cmp
mov
rclb
cmp
imul
dec
xchg
lods
std
repnz
scas
icebp
or
inc
push
add
out
mov
sbb
enter
mov
dec
sbb
jbe
cmp
or
pop
clc
mov
pop
mov
add
sarb
rorb
add
jbe
outsl
imul
sub
sub
mov
test
pop
shlb
or
ja
daa
sub
add
outsb
out
mov
pop
xchg
add
sbb
fstl
add
ljmp
or
fcmovbe
sbb
movzbl
fcomps
pop
sbb
rcll
or
push
mov
out
mov
inc
decb
mov
add
mov
test
imul
ret
jbe
fstl
mov
push
add
sbb
std
lods
shlb
mov
mov
jge
mov
mov
cmp
push
cmp
fcmove
adc
pminsw
mov
mov
mulb
cld
mov
rclb
cli
movups
mov
js
mov
push
mov
sbb
ret
imul
div
jb
add
mov
sub
imul
add
add
and
lock
xor
or
in
imul
mov
mov
out
mov
into
shl
outsb
testb
shr
in
sub
cwtl
lret
adc
or
push
adcb
push
imul
call
out
rorb
fmulp
insl
fildl
cmp
pop
mov
fcomps
sub
add
stc
cld
sub
mov
push
mov
jne
push
mov
lods
adc
push
call
mov
sbb
lods
push
inc
dec
incb
mov
andb
cmp
icebp
mov
testb
sbb
lret
imul
adc
and
push
inc
mov
sub
shr
mov
test
and
adc
mov
imul
or
mov
and
jbe
outsl
lahf
jle
imul
mov
cmp
ss
lea
ffreep
mov
clc
movzwl
or
mov
ljmp
add
sbb
mov
imul
adc
ret
rorb
adc
jbe
mov
aam
lea
lock
mov
adc
mov
int
dec
shr
pop
sbb
and
pushf
push
add
call
test
jns
adc
add
cwtl
add
and
shlb
cmp
jns
lcall
ss
pop
inc
pop
pop
test
mov
cld
dec
cmpsl
scas
insl
movsl
adc
rclb
gs
or
jecxz
add
in
or
inc
push
sbb
inc
clc
push
cmp
repnz
mov
adc
sub
mov
or
and
fmull
fsubl
mov
xchg
or
jmp
mov
pop
mov
lret
icebp
mov
adc
jecxz
addr16
push
cli
or
add
or
sbb
jecxz
push
mov
aad
inc
sub
or
fidivl
add
ret
xchg
and
in
ror
ret
data16
adc
push
fidivrl
jnp
clc
loope
jmp
imul
dec
ljmp
fiaddl
clc
shlb
loopne
mov
adc
sbb
addr16
out
or
push
shrl
clc
adc
enter
cmp
inc
lock
adc
cmp
mov
push
push
jmp
xor
sbb
and
xor
push
xchg
lock
imul
insb
outsl
scas
inc
pop
sbb
or
push
add
xchg
or
or
push
sub
sub
scas
mov
sbb
ret
sbb
fidivs
mov
pop
clc
lea
js
sub
add
sbb
mov
nop
jno
and
xor
imul
cmp
insb
inc
incb
cs
mov
adc
sarl
mov
or
rcr
inc
adc
lock
or
sbb
push
ds
mov
mov
or
add
or
and
jo
pop
sub
mov
or
pop
rcl
lret
or
or
cmp
xor
inc
or
idivb
push
js
std
das
sbb
push
subl
jmp
mov
rorb
dec
push
pop
or
adc
daa
adc
mov
bnd
add
loop
or
pop
scas
mul
outsb
pop
ret
div
les
aaa
fwait
mov
mov
sbb
cli
add
adc
inc
fcmovnb
lods
adc
jb
fwait
lret
inc
iret
dec
mov
in
pop
adc
push
add
or
icebp
test
icebp
clc
add
outsb
loop
jmp
arpl
push
out
adc
mov
sbb
loopne
add
lcall
repnz
pop
daa
or
mov
cs
stos
loop
or
int
pop
jge
jmp
data16
inc
scas
push
sub
mov
inc
sub
cmp
push
or
push
and
rorb
adc
mov
scas
cmp
push
mov
scas
pusha
or
leave
mov
cmp
data16
xchg
inc
jle
popa
clc
pusha
sbb
xor
push
cmc
mov
dec
dec
mov
jne
cmp
rol
mov
lcall
movb
shl
cmp
push
sbb
orl
cmp
out
or
push
xlat
data16
xchg
fisubs
jmp
cmpsb
scas
mov
fidivrl
cmp
and
cmp
inc
pop
lret
das
add
push
insb
into
insl
add
or
xlat
std
push
mov
arpl
xlat
les
push
shrb
add
pop
xchg
sbb
fildll
loopne
mov
inc
cli
mov
pop
out
mov
mov
mov
out
mov
adc
sbb
frstor
mov
add
cmpsl
rsqrtps
push
inc
clc
mov
clc
shl
pop
pop
mov
outsb
insb
sbb
sbb
fnsave
push
add
add
mov
leave
lret
sbb
sbbl
dec
sbb
push
insl
add
sarl
jo
or
into
mov
lcall
cmp
mov
add
ffree
xor
call
data16
mov
pop
jp
stc
lock
shll
call
xor
cmp
into
or
push
adc
roll
aas
leave
mov
pinsrw
xor
or
jge
out
imulb
test
rclb
or
inc
sub
inc
add
dec
ss
sbb
or
iret
inc
hlt
outsb
cmp
repnz
pop
dec
or
daa
sub
mov
dec
mov
jmp
jmp
cld
inc
leave
sbb
dec
mov
xor
rcrl
adc
push
and
stc
es
mov
pop
mov
int
insl
lret
nop
sti
aam
fwait
jo
or
loopne
add
data16
xor
rcrl
scas
xor
push
fidivrs
push
in
out
xor
inc
sbb
mov
jb
rclb
mov
daa
pop
or
add
movzwl
xor
or
push
sbb
test
or
push
or
and
xchg
sbb
insl
pushf
inc
lret
in
pusha
and
sbb
mov
push
pop
pop
xor
cwtl
fs
sarb
mov
cmp
push
mov
iret
push
add
test
ljmp
or
pop
jp
test
mov
mov
js
clc
jecxz
call
add
repnz
into
pop
cs
adcl
fwait
add
pop
or
add
pop
imul
sbb
sbb
roll
push
mov
outsb
xlat
pop
push
inc
fs
repnz
and
or
xor
mov
push
sti
call
ret
lods
mov
pop
cmp
push
mov
int
test
or
mov
xor
cmp
and
add
pop
in
icebp
inc
std
mov
xor
stc
push
fnsave
or
sub
adc
stc
push
jecxz
sbb
push
xor
jne
scas
decb
jmp
xor
fadd
pop
pop
sub
add
sbb
data16
stos
pop
call
xor
ret
in
mov
sbb
add
lea
popf
add
test
fcomps
add
lret
xor
mov
push
sbb
inc
mov
enter
sbb
mov
stos
mov
pop
rolb
add
mov
xchg
test
mov
jbe
sbb
and
pop
cmp
add
push
or
cld
xor
sarb
nop
mov
incl
mov
mov
jmp
pop
js
call
out
inc
sub
inc
push
or
dec
pusha
pushf
sub
and
psubsw
sbb
inc
sbb
sub
out
adc
cltd
cmp
pop
jmp
cli
bound
mov
das
outsb
sub
movsl
fimuls
jg
in
and
mov
cmp
adc
roll
decl
insl
or
push
mov
or
dec
adc
jo
mov
in
mov
pop
rorb
xor
out
pop
ds
int3
out
push
push
in
pop
icebp
loope
loopne
stos
leave
sbb
pusha
lret
repz
sub
mov
sbb
imul
jb
js
dec
mov
or
sarb
test
jg
and
push
and
fdivrp
subl
sbb
das
push
xchg
push
mov
inc
or
scas
out
psadbw
and
idivb
adcl
push
fwait
test
inc
xchg
rorb
push
mov
inc
jmp
mov
dec
fldt
loopne
add
in
mov
je
nop
rolb
pop
mov
mov
dec
mov
rol
pop
mov
xchg
arpl
or
inc
aaa
jb
iret
pop
leave
mov
inc
lea
or
bound
push
cmc
lahf
mov
bound
push
push
adc
inc
rorb
cwtl
je
sub
inc
push
data16
rorl
mov
ret
enter
adc
dec
test
adc
lret
mov
fwait
mov
imul
xor
scas
push
test
idivb
sub
mov
sti
push
push
mov
iret
fildll
push
pop
push
sbb
addr16
aad
lods
sbb
paddusw
inc
and
cwtl
out
sbb
dec
inc
lret
xchg
xchg
pop
or
into
jge
dec
cmp
push
push
push
push
or
or
lods
mov
jnp
adc
pop
mov
xor
repz
inc
add
push
loop
ss
cli
sub
push
push
fwait
subl
pop
or
sbb
sbb
orb
adc
fsubs
adc
mov
fadds
mov
push
adcb
icebp
test
jp
imul
das
adc
kmovb
lds
pop
mov
repnz
sub
mov
test
sub
or
out
cwtl
push
jb
lods
mov
loope
mov
adc
popw
call
popa
mov
rolb
mov
jp
enter
or
mov
in
push
xor
dec
mov
daa
mov
dec
movb
lea
mov
mov
mov
rcrb
cmpsl
push
sub
aam
push
xchg
push
and
not
sub
enter
pop
xchg
mov
and
jo
mov
or
lods
pop
fdivrs
ss
test
daa
pop
adc
mov
leave
add
xchg
rol
sub
or
clc
jo
mov
mov
rep
push
rolb
sub
cmc
add
sub
pop
add
inc
add
cs
cmp
cmp
stos
xchg
pop
je
adc
inc
out
mov
inc
inc
scas
or
and
or
mov
sub
call
cmp
xchg
lret
pop
out
add
icebp
addl
popa
sbb
ret
jb
sub
xor
mov
cmp
or
mov
push
mov
ret
add
jp
inc
daa
rcl
jecxz
push
roll
loopne
mov
es
sub
mov
mov
mov
or
clc
imul
mov
inc
shll
hlt
push
loop
mov
ss
cmp
jb
pop
icebp
ja
rcrb
pop
je
lret
push
mov
push
pop
scas
xor
lock
mov
mov
lcall
enter
sbb
cmpsb
shll
movl
sbb
adc
into
pop
lds
jecxz
aad
add
jl
cmp
test
dec
adc
mov
sub
or
cmp
sti
imul
iret
sahf
int3
dec
or
inc
lret
xor
inc
out
imul
add
sbb
push
je
jmp
add
movsl
pop
and
or
push
jmp
mov
cmp
cmpsb
mov
push
scas
loopne
mov
sbb
lods
ret
out
rcll
cli
or
push
pop
icebp
pusha
mov
xchg
mov
lret
xchg
iret
push
imulb
sbb
fdivrs
pop
scas
ljmp
sbb
pushf
sbb
push
ret
push
mov
repz
cmp
lods
or
or
fsubrs
sub
mov
leave
lahf
ljmp
loop
push
add
xchg
mov
push
les
inc
lea
in
out
jnp
adc
or
js
or
sub
sub
inc
push
jb
jecxz
dec
xchg
imul
imul
decb
xchg
stos
cmp
or
inc
fcomps
cmp
and
push
lret
sub
xor
mov
orb
dec
mov
sbb
leave
jo
mov
push
es
add
and
lods
jge
ret
popa
mov
int
mov
mov
adc
sbb
push
jb
mov
pop
and
cmp
add
adc
mov
or
sub
pop
popf
adc
and
push
ret
inc
cmp
xorb
mov
push
lea
sub
arpl
or
repnz
pop
cmp
jae
dec
or
jnp
add
inc
mov
mov
das
sbb
test
cmp
sbb
movsl
subl
int3
ja
adcb
xor
pop
inc
repnz
call
std
rolb
push
test
sbb
iret
inc
fdiv
jg
push
or
sub
push
push
push
repnz
adc
sbb
or
jg
pop
mov
push
adc
or
das
add
fs
pop
adc
push
xlat
or
movsl
in
and
add
rcrl
add
cmpsb
nop
lret
push
jae
lcall
push
or
xchg
test
mov
cmp
out
mov
fisubs
rcll
pop
mov
fs
sub
cmp
mov
incb
out
mov
xchg
cmp
inc
add
mov
jp
and
sbb
enter
dec
popf
lea
xchg
pusha
inc
dec
adc
inc
scas
mov
pop
je
mov
jg
inc
aaa
and
and
sarl
add
mov
push
dec
jo
push
out
jo
lea
movsl
sub
shlb
xchg
jmp
sbb
mov
mov
mov
push
sbb
aam
and
cmpsb
jecxz
or
mov
popa
loop
stos
adc
xor
push
lcall
aas
nop
sbb
pop
jns
push
pushf
push
je
ret
push
or
gs
add
xchg
call
rclb
mov
es
lods
add
icebp
push
sbb
imul
mov
fcomip
shrl
pusha
lcall
mov
dec
xchg
mov
lret
jmp
mov
add
shrl
cld
addl
shll
and
or
sbb
dec
adc
jmp
xchg
jae
aas
pop
mov
jp
jo
scas
hlt
pusha
pusha
xchg
adc
clc
insb
es
or
addb
popa
mov
inc
mov
mov
cli
stos
test
push
mov
mov
dec
sbb
in
loope
cltd
and
pop
pop
and
aam
ret
push
mov
adc
pop
inc
push
sub
xchg
jecxz
inc
stos
shl
mov
call
xor
pop
dec
loop
inc
mov
sbb
adc
jecxz
push
in
int3
pop
add
fimull
scas
enter
rcrl
sub
pop
jb
push
cmp
push
subl
jl
cmpsl
mov
or
inc
mov
sbb
imul
mov
push
or
mov
push
cs
jnp
mov
pop
lods
sbb
loope
test
push
jae
gs
push
sub
test
xchg
mov
push
xchg
cmp
inc
call
pop
push
call
cmc
roll
and
addr16
inc
or
lds
xor
mov
sbb
bound
mov
sbb
fcoml
mov
loope
pop
add
push
cmp
arpl
rorb
add
scas
lret
or
pop
pop
repz
shl
inc
push
ror
add
adc
rol
xor
push
xor
add
les
pop
xchg
jb
or
push
lds
mov
xor
lea
push
mov
jno
jne
testb
outsl
xchg
pop
cmp
mov
out
repnz
loop
jae
cmp
or
rcll
push
add
inc
xor
push
movsl
jb
or
sub
imul
xchg
in
push
ficoml
shrl
decb
sub
ret
or
sbb
shlb
bound
stos
sbbl
bound
sbb
sbb
pop
je
add
lret
or
add
nop
incb
fs
enter
pushf
mov
ret
dec
fwait
jno
sub
lret
push
pop
sbb
aam
popf
rcl
adc
mov
push
or
test
sub
pop
icebp
adc
int
add
popa
ret
or
pop
pusha
mov
and
adc
add
clc
or
cld
into
mov
mov
mov
push
xchg
sub
and
enter
inc
or
leave
aaa
dec
inc
test
or
adc
sbb
setno
test
pop
inc
fnstcw
fcomps
ja
dec
mov
fcomps
sub
dec
jne
jbe
stos
pop
xor
in
test
lods
xchg
mov
push
jmp
mov
inc
sub
rolb
sub
js
out
mov
jo
daa
xchg
sbb
es
inc
fadds
mov
push
mov
jmp
rcrb
popa
xchg
dec
xchg
or
adc
push
xor
or
in
sbb
pop
dec
jecxz
fldenv
rcl
add
pop
mov
loope
jb
aad
insb
call
faddl
push
int
mov
or
sbb
out
push
inc
in
and
test
sub
inc
jo
notb
xchg
popa
mov
push
repnz
nop
mov
outsl
ret
pop
push
inc
mov
sar
cli
mov
push
or
rcl
out
inc
jmp
mov
mov
dec
and
cmc
aaa
sbb
mov
or
sbb
aaa
clc
cmp
sub
or
dec
push
jp
mov
add
cmp
sub
jno
ljmp
mov
inc
and
jno
shlb
pop
cmp
or
imul
jmp
or
clc
adc
pop
aaa
inc
xchg
cltd
lret
adc
cltd
push
pop
sbb
in
and
jo
aad
subl
adc
mov
lods
movsl
adc
xchg
ror
test
jecxz
push
xchg
push
push
cmp
ror
mov
insb
xor
out
lret
cmp
bound
lds
jne
add
mov
sahf
aaa
popf
xchg
mov
rorl
push
enter
mov
adc
stc
icebp
add
mov
add
sbb
adc
dec
xlat
jl
std
popa
pop
orl
add
sbb
pop
andb
pop
sbb
in
or
rorl
les
es
mov
lea
push
mov
daa
xor
shrb
aaa
loopne
mov
adc
or
inc
pop
jo
aam
lods
or
xchg
icebp
pop
mov
adc
mov
add
fsubrl
fcoml
mov
cwtl
jmp
repnz
loope
loope
sub
dec
jbe
xchg
or
add
pop
aad
repz
adcb
push
add
or
dec
sarb
out
and
cmpsb
insb
jo
xor
push
cmc
mov
fsubrl
push
mov
icebp
nop
dec
and
enter
fisttps
test
and
cli
sub
or
jno
inc
outsl
xlat
mov
pop
sbb
jl
mov
xor
or
mov
addr16
pop
mov
ror
les
in
and
push
mov
pushf
push
push
imul
lret
cmp
or
mov
xchg
and
ljmp
push
push
add
inc
sub
es
sub
fstl
mov
jns
add
inc
cmpsl
mov
adc
mov
or
xor
cmp
movsl
lret
cmc
loopne
mov
push
adc
shrb
cmp
aas
push
push
pusha
bound
xor
xorl
in
mov
movsb
adc
xor
rcrb
leave
in
js
or
mov
cmp
xchg
push
lock
jbe
sbb
je
pop
xchg
dec
add
loop
xor
dec
dec
jecxz
jnp
lods
pop
sub
inc
push
jecxz
mov
rcl
insl
jno
int
pop
clc
mov
pusha
clc
xor
xchg
mov
mov
les
and
cwtl
xor
add
enter
push
imul
mov
popa
je
lret
xor
cmp
mov
mov
fimull
dec
or
into
pop
dec
in
xor
inc
ss
sbb
test
add
sti
rorb
push
adc
scas
sbb
push
dec
push
sbb
push
cmp
imul
mov
mov
loopne
sub
pop
mov
inc
addb
xor
subl
pop
mov
icebp
mov
lret
mov
inc
popl
popa
sbb
and
jmp
mov
inc
sub
sub
loope
fbld
adc
mov
test
aam
or
sbb
push
data16
cli
add
xchg
mov
outsb
jmp
out
add
popa
or
imul
bound
mov
xor
sbb
or
mov
mov
or
insl
jmp
fiaddl
cld
es
mov
jl
push
mov
pop
ret
sbb
push
mov
test
clc
cmovb
lds
cmp
mov
stc
pop
call
sub
cmp
repz
ljmp
inc
pop
popf
xlat
pop
adc
inc
stos
adc
or
popf
inc
cwtl
sbb
sbb
into
and
and
subb
sbb
sbb
mov
je
bound
and
inc
jnp
inc
sbb
pop
jecxz
adc
mov
rol
xchg
mov
not
addl
mov
xorb
test
jg
pop
or
int
repnz
pop
lods
xor
jo
test
leave
lahf
adc
or
or
rcrl
stos
inc
push
push
sub
aaa
loopne
add
sub
adc
mov
ret
push
rolb
mov
mov
add
push
in
sub
jnp
roll
mov
inc
call
push
push
and
push
jb
add
or
test
adcb
and
xlat
shlb
push
dec
or
push
and
ljmp
sub
fcomps
or
mov
mov
dec
or
sbb
and
inc
icebp
inc
adc
insl
or
sbb
dec
push
add
mov
xchg
push
mov
ret
insb
push
sahf
sub
sub
ljmp
push
push
adc
in
xchg
push
dec
jbe
push
sbb
inc
repnz
adc
inc
stos
mov
adc
pop
test
into
adc
adc
and
adc
rolb
jp
shrb
repnz
dec
test
subl
and
sbb
rcl
inc
imul
xor
xlat
roll
test
xchg
push
mov
in
inc
push
cli
or
cwtl
and
je
leave
inc
out
fisubs
sbb
aam
push
jo
sub
cmp
and
out
dec
fwait
push
push
icebp
sbb
push
inc
sbb
sub
mov
xor
xchg
loopne
xlat
add
into
aas
add
call
lds
adc
sbb
sbb
pop
gs
xchg
mov
inc
sub
aad
mov
push
icebp
jp
ret
mov
add
loop
pop
popa
ss
sbb
test
sarl
adc
jnp
inc
or
mov
mov
or
pop
adc
push
roll
int3
lret
sub
sbb
xchg
rclb
ljmp
test
add
orb
or
or
pop
popf
and
fs
into
cwtl
dec
aad
add
leave
movl
rolb
jmp
andb
cmp
loope
sbb
and
push
andl
sti
dec
icebp
cmp
dec
add
jbe
arpl
push
push
or
sti
and
pop
adc
adc
int
mov
fwait
pop
xor
xlat
adc
lods
or
movsb
push
and
popl
add
mov
jae
cmc
leave
roll
cmc
rcrl
push
insl
sarb
push
mov
adc
add
js
rorl
sbb
out
adc
sbb
mov
or
loopne
shlb
fisubl
rcll
or
inc
inc
add
ret
and
push
scas
push
daa
mov
dec
sarl
xor
outsl
ss
fwait
sub
test
lock
and
in
mov
hlt
imul
jns
repnz
push
ret
push
mov
push
sbbl
pop
cmp
dec
loop
dec
inc
mov
ret
mov
jno,pn
dec
add
insl
push
adc
js
lock
and
lea
sbb
roll
ror
push
int3
push
cs
ret
divb
pushf
inc
out
push
mov
push
push
sub
push
pop
inc
mov
test
mov
sti
pushw
and
psrlq
call
ret
sbb
push
repnz
jg
mov
pop
shl
adc
and
sbb
std
pushf
adcb
pop
lds
adc
push
lret
shlb
arpl
ficoms
pop
popf
sti
nop
cmp
and
scas
scas
sbb
mov
inc
pop
adc
sbb
jne
and
and
insl
outsl
mov
adc
rclb
or
push
push
cmpsl
addr16
add
lret
ret
shlb
sub
movsl
int
mov
repz
mulb
daa
sub
dec
sbb
out
add
imul
push
test
mov
sbb
mov
or
inc
ja,pn
incb
mov
aad
or
dec
jecxz
push
movsl
xchg
add
addr16
and
gs
fcomps
test
int3
in
mov
cli
shlb
stos
cmpsb
sbb
push
ljmp
popa
or
xor
mov
inc
push
adc
jb
in
shlb
cmpsl
imul
xor
test
ret
sahf
dec
push
in
lret
addr16
cld
scas
cli
into
ret
pop
cmp
mov
mov
cmpsb
mov
lcall
push
orb
shll
pop
rcll
call
aas
adc
int3
jnp
orb
xchg
sbb
xchg
cmp
ret
idiv
adc
addl
add
rorb
leave
jge
adc
push
cs
outsl
mov
or
enter
inc
push
stc
test
ljmp
adc
xor
sbb
shlb
adc
gs
push
testb
mov
pop
sbb
popa
outsl
adc
push
add
sete
sbb
xorb
addl
or
xchg
mov
or
xlat
ret
or
mov
jno
imul
push
sbb
dec
add
out
mov
in
and
cmpsb
cmpsl
mov
cli
or
sbb
aam
mov
rolb
lcall
sbb
mov
adc
shlb
jb
add
mov
inc
cmp
pusha
dec
jnp
into
mov
rol
lock
add
rcl
imul
mov
inc
add
add
mov
pop
adc
dec
push
inc
pusha
rolb
add
sub
add
cld
push
push
push
out
addr16
push
add
or
inc
mov
sti
push
mov
sbb
mov
sbb
inc
cmpsb
nop
aaa
inc
jnp
xchg
loop
sub
inc
adc
loop
xchg
cmp
pop
in
push
ret
or
ret
pusha
loop
or
mov
pop
jg
mov
push
mov
sbb
or
xchg
dec
push
xchg
imul
mov
cmp
push
pop
xor
inc
bound
repz
mov
pusha
or
xor
push
dec
int3
pop
sbbl
push
push
outsb
leave
fwait
popf
dec
push
sbb
int
js
test
inc
add
rorl
inc
push
sahf
pop
push
out
mov
out
mov
jns
mov
inc
add
lret
dec
adc
adc
cmpsb
outsb
mov
push
pop
xor
inc
iret
adc
rolb
mov
sarl
repz
xchg
loope
and
test
outsb
or
inc
loope
or
sahf
cmp
mov
mov
lds
sbb
insl
jo
add
xor
pop
dec
into
mov
xchg
aam
sbb
adc
push
call
push
push
mov
and
inc
jge
adc
add
jo
inc
jnp
cmp
insb
lcall
ret
in
mov
rcrb
sub
rcrl
adc
jo
sub
xor
cmp
xlat
push
and
push
sbb
stc
push
add
mov
ljmp
out
and
mov
ret
adc
or
call
push
shl
mov
jae
cli
mov
dec
pop
imul
pop
pop
ror
rolb
ret
push
adc
sub
inc
or
ss
jb
jo
jnp
jle
mov
cli
movsb
fwait
jl
push
mov
or
cmc
or
shlb
add
scas
rcrl
loopne
push
xchg
lret
or
test
or
and
push
dec
push
inc
rclb
insb
mov
jno
jmp
les
pop
lea
inc
xor
jg
mov
sbb
push
mov
lea
jle
sbb
popf
mov
pop
cmp
in
and
push
lret
call
addl
loopne
int3
jp
mov
gs
xor
mov
notb
mov
imul
call
leave
mov
xlat
push
aas
faddl
stc
or
inc
or
mov
jo
movsb
push
mov
dec
es
push
shl
mov
lret
inc
sub
mov
cmpsb
stc
xlat
add
nop
xor
pop
test
sub
cmp
loopne
sbb
popf
cmp
sub
xchg
out
ds
mov
xchg
mov
mov
and
das
push
btr
dec
push
jp
addr16
inc
or
cltd
je
mov
dec
les
test
xchg
clc
pop
scas
in
xchg
notb
xchg
add
lds
or
test
jbe
cmp
ret
xor
dec
and
jo
cmp
cmp
cwtl
rolb
mov
lods
call
fcomps
shlb
push
adc
mov
and
or
sub
popf
mov
sbb
mov
je
add
mov
jp
pop
mov
push
pop
pushw
mov
xchg
xor
cmp
pop
or
mov
and
push
and
mov
push
push
sub
loope
jne
ret
pop
push
adc
bound
adc
test
rorl
notb
or
fwait
out
add
test
add
ja
pop
popa
push
mov
stos
jb
arpl
push
push
xor
xorb
bound
push
clc
fstpt
data16
push
add
fldcw
add
xor
mov
stos
adc
dec
cwtl
jo
mov
jnp
cmpsb
sahf
sarb
ljmp
and
or
cmpsb
push
add
add
inc
repnz
rol
sub
test
sbb
inc
imul
outsb
fcoml
adc
adc
and
mov
stos
pop
iret
jne
call
cmp
xchg
cmpsb
ror
mov
mov
jb
lret
roll
movaps
fistpll
add
into
inc
jp
andb
pop
mov
sbb
push
shr
mov
xor
rclb
adc
mov
sbb
add
int3
scas
mov
inc
cli
adc
mov
mov
cmpsb
or
pop
mov
adc
mov
pop
cmp
add
rclb
popf
lds
dec
xchg
clc
add
aad
inc
inc
jl
call
fwait
jne
pop
mov
push
push
xchg
repnz
imul
adc
js
xchg
outsl
cs
mov
scas
daa
lea
sbb
add
in
xorl
pop
xlat
loop
rclb
iret
push
push
lock
lea
inc
scas
cmpsb
ja
add
sarl
add
in
in
adcl
add
mov
jbe
xor
xor
jno
or
lds
notb
jae
outsl
add
mov
sarb
insb
adc
mov
cltd
mov
cmovge
xchg
jo
fimull
js
push
shll
mov
lret
pop
push
mov
pop
sbb
add
push
xor
and
add
fwait
sbb
add
pop
jo
inc
andl
fisubrl
add
and
ret
std
idivb
sahf
add
or
int
outsb
test
leave
pop
call
xchg
sub
mov
mov
test
cmpsl
lcall
stos
xor
adc
pop
and
mov
push
das
imul
sbb
or
rcr
insb
jo
or
add
in
aad
icebp
sbb
js
pushf
sbb
dec
jo,pn
adc
mov
roll
roll
mov
stos
rcrb
popa
fnsave
inc
sbb
mov
inc
sbb
cld
adc
or
inc
pop
sti
ret
xor
lds
push
mov
push
jo
sbb
gs
xchg
js
repnz
xor
inc
repnz
iret
jp
add
icebp
sub
or
loope
mov
nop
into
inc
mov
shll
repnz
js
xor
js
push
cmp
push
pop
add
shll
pop
mov
dec
mov
mov
push
test
push
cs
insl
mov
xchg
mov
pop
jge
pop
fdivrl
add
fiaddl
stc
test
push
push
push
scas
push
fs
int3
jle
movsb
cmp
imul
shlb
inc
cmp
mov
andb
jl
adc
xor
pop
inc
notb
enter
mov
es
add
in
lock
and
andb
jae
loop
mov
push
sbb
das
push
jno
int3
cmp
mov
inc
xor
sarb
insb
push
lcall
jb
es
wbinvd
enter
mov
and
add
mov
incb
lret
jmp
add
test
adc
pop
mov
in
testl
cld
pop
lret
test
subb
add
mov
sub
sbb
mov
adc
and
and
cwtl
aam
push
and
push
xor
sub
jp
dec
je
pop
ljmp
in
mov
aam
stos
ljmp
scas
fisubs
mov
popl
stc
add
push
mov
adc
repnz
dec
mov
sbb
es
push
sbb
push
out
xchg
es
fnstenv
call
sbb
sbb
pop
sub
sbb
movsl
lret
sub
inc
push
add
mov
jo
addr16
push
cmp
xorl
dec
add
or
lcall
inc
imul
xor
inc
sub
push
push
jp
mov
dec
add
stos
push
les
mov
rol
sbb
mulb
or
push
scas
inc
sahf
add
popa
or
cmpsl
js
mov
jb
test
xchg
mov
cs
lods
adc
dec
loope
inc
ds
daa
fimull
aaa
inc
push
movsb
out
ret
push
pusha
pop
lods
sub
insl
push
insl
sub
ret
inc
sub
mov
pusha
out
and
ret
xchg
xor
mov
pop
xor
mov
aas
mov
test
pop
or
push
call
mov
push
cmpsl
pop
push
jo
sub
or
add
out
mov
int3
adc
inc
and
test
cmp
aaa
mov
cmpsb
sbb
jp
fidivrl
cs
cwtl
repnz
or
movsb
bound
adc
pop
xchg
out
or
adc
mov
lock
mov
adc
mov
push
jns
add
outsl
mov
shl
mov
sbb
lea
inc
imul
in
or
mov
or
sbbl
mov
les
cmp
adc
pop
loope
or
je
sub
test
adc
adcb
inc
sbb
lret
push
icebp
mov
mov
iret
mov
pop
add
and
mov
mov
cmp
push
lods
or
xchg
pop
js
add
loope
mov
add
push
int
rcrl
mov
iret
and
shl
add
sub
and
xor
mov
enter
sub
adc
ljmp
ret
sub
or
rcrb
jp
mov
arpl
or
inc
or
adc
bnd
pop
adcl
or
sbbl
ret
dec
inc
std
insl
addb
adc
das
cs
add
add
pop
sbb
xchg
push
pop
xchg
mov
je
xlat
or
int3
cmp
mov
clc
sbb
incb
test
cmp
push
ret
xlat
jmp
pop
fwait
sarl
mov
movsl
push
xchg
pop
inc
loopne
pushf
sbb
cmp
mov
inc
loop
sbb
stos
aam
push
sbb
sbbb
je
roll
es
xor
mov
cmp
inc
pop
cs
lock
out
in
add
or
sub
or
outsl
push
jmp
mov
or
loope
or
nop
push
xor
packssdw
lds
mov
add
mov
clc
lcall
fistpl
xlat
adc
dec
sub
subb
stos
and
mov
push
adc
xchg
push
push
push
cmp
mov
call
mov
add
adc
mov
jno
xor
dec
push
fadd
clc
push
scas
lret
pop
stc
or
ud2
adc
jecxz
mov
mov
sub
xchg
shll
mov
and
sub
negl
es
addb
scas
fimull
lret
dec
xchg
lock
xchg
test
jno
pushf
adc
test
sbb
movb
inc
es
sbb
stos
adc
sub
xchg
mov
jl
div
cmp
inc
xchg
inc
leave
ljmp
inc
data16
stos
arpl
pop
pop
ret
push
test
xor
jle
loopne
ja
popf
add
adc
adc
mov
cmp
sub
fcompl
movsl
cmc
mov
add
dec
fmul
add
fidivl
push
push
leave
and
cli
add
rorl
sub
dec
mov
gs
inc
aad
xchg
test
xchg
push
push
popa
sbb
push
xchg
sbbl
mov
jbe
ds
aam
pop
pop
push
push
sub
shlb
pop
xor
push
mov
sub
adc
or
faddl
aad
or
clc
leave
adc
imul
int3
mov
roll
out
push
test
jne
orl
cmp
sub
push
xor
sbb
adc
push
clc
pop
mov
aad
pop
stos
xchg
scas
push
movsb
push
xchg
hlt
or
add
push
xor
mov
mov
push
cs
mov
push
mov
push
push
in
inc
adc
sub
enter
pop
or
adc
int
imul
jmp
dec
ret
mov
cmp
sub
sub
movsb
dec
sarb
push
add
pop
inc
shlb
adc
and
into
sar
ret
adc
mov
add
imul
ja
lds
add
lahf
insl
andb
dec
inc
hlt
add
add
add
adc
ret
mov
loope
pushf
cmc
mov
mov
or
pop
mov
mov
push
in
mov
pop
lret
or
inc
hlt
sub
xor
xchg
cmpsb
add
sbb
or
xchg
pop
aaa
ret
mov
loopne
mov
cmp
out
outsb
fmuls
insb
xor
inc
fcmove
adc
sbb
scas
and
test
inc
add
test
xor
aad
and
adc
lcall
inc
mov
pop
popa
mov
icebp
adc
jp
mov
stos
inc
cmp
push
lahf
sbb
push
sub
out
dec
dec
mov
orb
pop
adc
mov
call
aam
mov
sbb
sbb
cwtl
aas
pop
bound
adc
add
pop
inc
cli
lret
and
pop
lret
sbb
scas
rclb
push
rclb
int3
sbbl
test
add
inc
inc
test
and
cmpsl
loop
xchg
push
les
xchg
jae
add
adc
roll
cltd
jo
adc
out
mov
es
jmp
and
insb
jno
rcrl
xor
inc
push
sub
daa
call
xchg
pop
add
scas
clc
shl
xchg
fcmovb
jmp
loop
loope
scas
cmp
adc
into
shlb
sbb
push
popa
ret
lahf
or
push
and
pop
or
sarl
add
adc
push
jbe
or
sub
rcrb
inc
mov
push
cmp
inc
and
fs
loope
add
mov
enter
add
in
scas
pop
sbb
pushf
rclb
jge
aas
jo
inc
ljmp
adc
ljmp
fwait
in
or
inc
loopne
in
stos
xor
lahf
cmp
push
out
fcoml
push
pusha
stc
aas
adc
cmp
or
or
push
add
xor
out
and
je
or
call
mov
lcall
pop
add
push
or
push
cmp
add
cmp
testb
cs
leave
lds
rolb
xchg
hlt
pop
cltd
dec
stos
insl
into
cmp
and
push
jno
test
sbb
jnp
jl
rclb
mov
and
js
mov
imul
xor
roll
mov
xchg
or
fsubrl
into
xchg
mov
sbb
adc
push
xchg
enter
lods
mov
mov
push
jecxz
dec
xchg
push
xchg
pushf
test
adc
add
mov
mov
pusha
adc
mov
adc
sub
stos
inc
pop
shll
push
or
pop
loopne
inc
mov
rorb
andl
and
and
inc
imul
test
jb
je
add
mov
je
gs
mov
adc
cltd
adc
aaa
cwtl
cmp
jg
push
push
inc
lds
shl
orb
mov
inc
pop
cmp
push
xchg
sbb
or
mov
icebp
sub
add
mov
push
or
daa
pusha
jae
mov
arpl
test
dec
push
adc
and
push
dec
pop
adc
sbb
stc
push
or
out
add
sti
loopne
ficoms
add
lret
jle
shll
pop
pop
push
sarb
sbb
inc
sbb
add
sysenter
adc
push
adc
push
out
adc
xchg
clc
or
push
jmp
jmp
lcall
dec
inc
stos
loope
adc
sbb
or
jmp
and
ret
shll
loopne
sub
or
inc
shll
push
les
add
js
or
push
add
and
ja
sbb
sub
push
push
and
shrl
js
inc
movsb
or
jecxz
add
or
call
mov
jp
cmp
leave
ret
adc
mov
jp
or
clc
or
mov
mov
push
mov
push
sub
mov
mov
push
leave
test
lods
push
sub
jge
and
sbb
aad
pop
jge
shlb
js
xor
es
test
lods
pop
addl
lret
add
ja
lret
ret
jo
adc
add
add
mov
pop
bound
adc
cmp
test
inc
mov
das
ljmp
out
lds
mov
or
in
or
adc
cmp
mov
xor
jno
xor
inc
and
jno
jmp
sub
sbb
xchg
movhps
xchg
test
test
sbb
mov
inc
test
mov
inc
mov
cmpsb
cmpsb
jbe
push
xor
add
ljmp
aam
lea
mov
in
rolb
lret
push
cmp
pop
push
push
nop
icebp
test
add
jb
xor
sub
pop
mov
pop
adc
or
push
pusha
adc
mov
pusha
and
pop
cmp
jl
icebp
icebp
sbb
xchg
addl
xor
pop
xchg
jo
fwait
add
xchg
jae
adc
addb
cmp
sbb
pop
stos
sbb
pop
movsl
loop
arpl
lret
jo
ret
stc
jno
mov
mov
or
cs
adc
pop
loop
loop
mov
add
aad
xor
adc
rcr
push
adc
sbb
mov
pop
cmp
pushf
adc
mov
mov
subb
icebp
subb
into
adc
faddl
leave
es
rcll
mov
add
dec
dec
push
mov
inc
or
adc
mov
ret
sub
test
adc
jb
roll
push
xchg
cmp
add
mov
loop
push
or
xor
fidivrs
or
aad
adc
cmp
push
and
mov
clc
cmpsb
dec
lock
aas
test
or
sub
pop
mov
cmpsb
popa
dec
push
cwtl
adcl
mov
fs
add
jo
jl
jae
inc
mov
push
lea
mov
fmull
push
jl
or
jo
lea
add
jg
mov
or
sub
push
mov
xchg
test
mov
dec
iret
or
mov
jecxz
sbb
adc
lock
push
jnp
mov
jb
mov
lock
aam
ret
adc
and
inc
xchg
testl
adc
mov
shlb
pusha
pop
aam
mov
roll
inc
pop
aas
push
sub
adc
shrb
stos
push
push
cs
adc
add
adc
mov
or
in
jne
movb
aas
or
mov
pushf
xchg
out
loope
popf
js
sbb
aaa
imul
in
lahf
ljmp
arpl
mov
mov
pop
sub
or
js
xor
test
rcll
ficompl
sbb
arpl
cmp
imul
stos
add
out
push
cltd
test
movsl
push
push
jae
add
xchg
ret
je
js
js
push
push
push
push
dec
lcall
cmp
test
push
xor
sbb
push
jo
shrl
push
icebp
sbb
hlt
push
pop
adc
inc
aaa
jbe
fadds
xstore-rng
cmpsl
subb
add
or
fsts
das
jns,pn
stos
push
or
call
test
pusha
sbb
push
popf
add
inc
inc
push
mov
roll
out
add
cmp
mov
or
xor
ret
lcall
pop
call
sti
je
andl
ds
subb
pop
shrb
cmp
mov
repz
andb
sub
cmp
jnp
xor
add
mov
push
mov
call
sbb
dec
mov
stos
cmpsb
and
rolb
sub
add
lods
sarl
jmp
mov
daa
xor
rcll
mov
jo
movsl
xorb
test
mov
into
push
dec
fsts
shll
shlb
add
add
push
adc
movsl
lods
dec
insl
jb
xchg
loope
sub
into
add
lcall
imul
add
pop
sbb
adc
xor
add
mov
push
mov
cwtl
inc
mov
flds
add
lret
js
and
mov
cmp
sbb
lock
fdivrl
sbb
lret
addb
and
mov
addr16
stc
adc
or
cmp
pop
test
push
fsubrs
adc
stos
inc
push
or
inc
test
mov
mov
push
nop
loopne
or
mov
scas
enter
sbbl
jo
add
outsl
mov
jle
pop
adc
sbb
cmc
pop
dec
cmp
adc
pop
aas
push
push
leave
leave
push
cmp
stc
sbb
add
jecxz
push
xorl
andb
test
and
mov
jo
inc
pusha
mov
or
rcll
push
inc
mov
push
mov
cmp
mov
aad
cmp
inc
test
mov
imul
jbe
lea
mov
jp
push
push
sbb
adc
mov
das
push
loopne
push
xor
mov
sub
and
lods
add
mov
and
cltd
lods
sarl
sub
cmp
xchg
sbb
push
inc
inc
jnp
or
icebp
sbb
add
loope
xchg
add
inc
add
call
adc
nop
test
mov
adc
adc
test
sub
loope
mov
js
int
cmpsb
push
sbb
icebp
aam
inc
mov
rorl
push
imul
adc
orb
xchg
lds
mov
adc
bound
dec
push
push
mul
mov
add
ficomps
push
xchg
sahf
insl
and
rorl
xchg
push
xor
adc
cmpsb
lods
enter
and
les
call
lret
lahf
mov
in
mov
call
or
mov
test
cmp
mov
rorl
inc
dec
cltd
mov
adc
pop
notl
or
ds
dec
sbbb
xchg
pushf
subl
std
mov
leave
dec
adc
cmp
adc
icebp
aam
pop
into
pushf
movb
and
adc
mov
sbb
and
pop
jmp
or
push
dec
xchg
icebp
push
inc
add
cmpsb
mov
push
icebp
jae
mov
pop
gs
shl
dec
out
inc
cmp
push
push
stos
pop
pop
push
or
adc
add
pop
mov
es
mov
mov
pop
bound
or
sar
rorb
shl
mov
testb
stc
mov
rcr
test
in
mov
les
in
inc
xchg
mov
pop
xor
loope
add
test
adc
enter
pcmpeqw
mov
sbb
push
mov
sub
jbe
xor
ret
or
add
xor
pop
xchg
add
stc
shlb
push
xchg
lret
sbb
and
or
loopne
popa
push
lds
push
pop
aaa
rol
aam
add
rol
add
in
out
fldcw
inc
or
es
je
daa
ret
out
fists
fs
xor
add
xor
inc
adc
jbe
push
ret
or
push
fdivr
out
or
sub
cmc
bound
aas
cmc
loope
mov
sub
and
subb
add
mov
sbb
iret
clc
push
mov
push
mov
jne
lods
sbb
popf
loopne
std
push
jns
push
icebp
clc
sbb
ljmp
xor
shrb
jno
rorl
xlat
jp
or
adc
adc
or
adc
xor
push
adc
rolb
add
xchg
dec
ss
mov
jge
les
leave
aad
adc
jmp
shr
mov
push
mov
mov
ficompl
pop
sarb
fs
cwtl
add
adc
loope
push
loopne
lods
mov
test
rclb
icebp
test
push
test
and
jbe
daa
rcrl
add
or
repz
xor
sbb
jb
and
mov
sub
orb
int3
sbb
lret
lahf
adcl
sbb
add
sbb
mov
imulb
xor
push
mov
sbb
dec
mov
mov
adc
sbb
jo
cmp
and
test
push
scas
or
je
dec
inc
js
mov
xchg
rorb
mov
test
cwtl
xchg
jbe
inc
inc
push
ret
stc
fwait
push
addl
or
add
enter
push
inc
rclb
ret
mov
repz
ss
mov
lret
stos
fs
nop
jnp
cmp
push
in
mov
dec
pop
shll
sbb
movsb
push
insl
lret
ljmp
rol
adc
or
inc
mov
cmp
jne
adc
pop
test
or
ret
sub
bound
sub
ret
push
inc
mov
rcll
sbb
push
loopne
and
mov
add
cmp
sbbb
stos
add
lret
movsb
or
das
pop
xchg
xor
push
pop
mov
xchg
add
adc
ss
jbe
mov
and
lock
imul
jo
add
repnz
mov
lcall
or
ljmp
ror
xor
cli
push
mov
arpl
jnp
or
inc
adc
out
rclb
add
imul
shr
or
add
sbb
aaa
pop
mov
adc
jo
divb
test
insb
adc
enter
aaa
inc
fwait
inc
xor
cmpsb
leave
sub
shr
adc
test
pop
mov
mov
pop
push
add
inc
cs
mov
lret
push
mov
adc
imul
roll
mov
pop
xor
jne
add
mov
andl
icebp
cmp
loope
xor
lods
xor
insb
xchg
add
rcrb
or
xor
leave
adc
int
mov
pop
clc
into
jno
sbb
iret
mov
mov
je
aam
je
mov
mov
or
adc
scas
lea
xor
add
testb
lds
push
test
inc
adc
xchg
inc
outsl
push
push
xlat
mov
mov
addl
shll
inc
xchg
mov
xor
ja
call
sbb
jns
push
aam
iret
inc
jo
into
or
xorl
mov
lahf
daa
lcall
pop
inc
inc
ljmp
adc
adc
xor
lret
out
int
jae
mov
aam
cmp
lea
pop
scas
jmp
sbb
push
mov
sub
and
add
mov
fistpll
int
mov
mov
testb
test
or
sbb
add
xchg
out
push
bound
shl
insb
cmp
jae
repz
out
xor
mov
shll
popa
push
add
add
xor
loopne
mov
scas
sar
cmp
or
pop
ds
inc
cmp
shlb
call
orl
test
add
addb
inc
dec
or
fwait
adc
add
fbld
add
orb
clc
dec
mov
mov
pop
inc
push
mov
jae
test
bound
sbb
or
mov
add
daa
rol
mov
xor
lods
mov
les
xor
test
dec
loopne
andb
push
add
call
inc
jl
inc
loopne
adc
push
mov
xchg
outsb
xchg
lret
aad
pop
cli
rclb
push
xor
cmpsl
stos
ret
xor
inc
sub
push
aam
adc
test
jno
pop
push
xchg
dec
jbe
mov
push
call
inc
cmpsb
dec
or
pop
or
jbe
aam
bswap
cmp
rorb
mov
bound
addl
pusha
loop
cmp
popa
cwtl
fnstenv
shrb
sub
sbb
dec
inc
jo
pop
push
lcall
in
mov
sbb
shrl
mov
imul
or
adc
push
mov
test
push
mov
loopne
pop
xchg
leave
dec
lds
sub
rolb
mov
pop
sbb
xchg
mov
mov
lods
mov
adc
push
xchg
ret
nop
mov
cmc
inc
call
sbbl
sbb
mov
push
xchg
loop
jne
xor
dec
mov
cmovp
or
sub
adc
xor
popf
rcrb
sbb
int
loope
mov
dec
stos
xor
dec
push
jno
xor
jmp
addr16
jmp
pop
add
into
inc
pop
mov
pop
fwait
sti
push
fwait
pop
les
add
xor
pop
adc
mov
shl
loope
and
push
sbb
push
adc
cs
into
jecxz
adc
pop
cmpsl
sbb
and
and
mov
inc
inc
pusha
mov
imul
lds
adc
lahf
add
or
dec
ljmp
push
or
bnd
mov
cmp
push
rcl
and
add
push
push
xchg
and
add
mov
cmc
push
rcr
inc
push
jnp
dec
stos
iret
nop
aad
sub
mov
fisubrs
sub
jb
adc
add
cmpsb
mov
mov
pop
in
int3
push
mov
js
jl
adc
sbb
shl
sub
push
bound
inc
sahf
xchg
inc
fs
rclb
and
add
add
les
fs
mov
mov
and
sbb
mov
mov
push
pusha
or
cwtl
mov
xor
pop
ret
add
and
clc
or
rolb
jbe
sbb
xor
mov
xorl
sbb
pop
stos
cmp
inc
xchg
mov
dec
bound
roll
les
test
aad
xor
repz
and
nop
mov
adc
stos
stos
add
or
lret
call
andl
xchg
push
push
dec
adc
addr16
lahf
out
adc
stc
adc
sbb
push
mov
or
adc
pusha
sub
loopne
aas
cmpb
and
sbb
incl
jle
sbb
cli
sbb
rorl
jnp
add
push
fs
rclb
jo
push
mov
sub
arpl
les
mov
popf
push
aam
mov
bound
in
jl
nop
insb
sub
pop
cmp
jne
push
adc
adc
leave
test
mov
add
and
adc
push
cmp
pop
inc
fnsave
add
mov
inc
ljmp
sti
jp
clc
paddusw
xchg
xchg
aam
dec
ret
mov
arpl
sbb
xchg
or
aaa
push
pop
add
pop
adcl
or
es
pop
pop
enter
fmuls
jp
mov
rolb
or
pop
mov
adc
and
cli
pop
movsb
add
mov
jns
addb
test
test
inc
jb
mov
xchg
call
xor
cmp
pop
cmp
sbb
aad
rcrl
dec
in
sub
ljmp
cmp
add
aam
push
mov
nop/reserved
enter
or
push
dec
stc
push
sbb
adc
jne
push
lods
je
cmp
inc
sbb
lret
cmpsl
ljmp
and
js
addb
jecxz
ret
add
ds
mov
in
pushf
mov
negb
mov
inc
sbb
dec
push
dec
add
push
or
popa
push
jno
and
adc
ret
in
pop
sub
rolb
jnp
xor
add
or
test
addr16
push
and
add
pop
sbb
ljmp
cmp
push
dec
mov
mov
in
gs
bound
pop
mov
aad
mov
ret
insw
cs
inc
stos
mov
popf
inc
adc
loope
loope
cmpsb
cmp
mov
aas
mov
inc
sub
jne
jp
sbbb
das
or
ret
je
push
push
xor
ds
push
in
add
inc
je
or
inc
icebp
addr16
push
cli
mov
and
test
adc
xchg
jae
add
in
pop
popf
pop
shlb
mov
push
pop
lock
pop
mov
std
inc
adc
mov
pop
cmp
sbb
xor
or
mov
xchg
dec
mov
movb
mov
fs
gs
js
push
in
insb
sbb
or
aas
mov
arpl
xor
cmp
and
pop
adc
push
xchg
adc
mov
mov
leave
sbb
into
mov
andl
mov
orl
stos
cmp
add
data16
cs
cmp
out
stos
fxch
adc
mov
sbb
or
or
sub
xor
lahf
test
push
dec
mov
push
mov
mov
minps
fs
adc
nop
push
std
lods
xor
jno
mov
sub
rol
or
add
cli
sub
ljmp
sub
adc
aad
js
adc
subb
cwtl
sub
mov
frstor
rcrl
adc
dec
dec
add
andl
clc
int3
mov
push
add
add
mov
sub
and
into
adc
push
lcall
pushf
dec
pop
xchg
sbb
xor
stos
pop
fcmovu
sbb
or
and
aam
and
push
push
xor
xchg
mov
sbb
sub
arpl
and
lret
or
leave
sub
mov
mov
es
push
add
aaa
mov
adc
rorl
lds
test
loopne
hlt
xorb
lea
inc
cmpsl
push
int
outsl
gs
lock
pop
stos
sub
sub
call
adc
push
cmp
cmpsb
test
sahf
push
mov
ljmp
cltd
push
test
adc
push
xor
push
or
xor
out
lock
mov
cmp
clc
decl
out
out
test
aaa
lock
fiaddl
mov
push
not
push
imul
sbb
mov
das
add
mov
or
cmpsl
incb
lcall
inc
mov
and
add
jno
out
scas
aas
arpl
xchg
jno
xor
ljmp
fisubl
mov
adc
orl
movsb
test
pop
out
repnz
add
cmp
dec
sbb
push
xor
add
add
inc
cmp
les
cmpsb
mov
pop
loopne
mov
mov
nop
pop
ret
in
pop
adc
mov
or
cmpb
adc
sbb
push
push
jo
test
jns
call
cmp
and
fcomps
clc
adc
stc
add
mov
sbb
push
sbb
test
cmp
sub
push
rclb
sarl
loope
hlt
fdivrs
push
sbb
cmc
xlat
mov
dec
ficompl
notl
xor
sbb
add
sub
lods
lret
xchg
pop
lcall
or
xchg
roll
push
repnz
push
call
xor
jnp
fstl
add
arpl
mov
mov
jmp
add
push
icebp
call
fs
lret
adc
push
shl
loope
cmpsl
andb
pop
jns
xor
lcall
in
aam
adcb
jb
popf
add
into
add
or
in
pop
outsb
sub
mov
push
adc
mov
imul
and
pusha
clc
adc
fistpl
rorb
or
rorb
jo
repnz
push
out
sbb
inc
in
xor
orb
nop
stc
mov
xchg
daa
mov
sbb
shll
cmpsb
mov
stos
push
hlt
push
popa
sub
push
fmull
adc
les
test
pop
mov
sub
add
enter
xchg
test
push
jns
leave
or
sbb
pop
sbb
xchg
fwait
and
pop
sahf
clc
inc
mov
mov
or
jo
sub
lds
pop
in
sub
xchg
xor
adc
fsubrl
push
add
subl
pop
mov
sbb
sub
jl
rolb
or
xor
adc
aas
lret
push
push
jb
and
pusha
push
scas
dec
cmp
jnp
inc
mov
lahf
clc
adc
cmpsl
add
push
fstl
arpl
xchg
loopne
sbb
movsl
pop
push
mov
sub
fcompl
stos
fs
push
adc
lahf
les
mov
dec
push
push
cli
loop
xor
add
push
jecxz
ljmp
cmpsb
inc
push
push
std
sub
or
sub
dec
bnd
bound
addb
stos
int3
xor
push
pusha
and
cmp
cmpsb
loopne
call
scas
fcoms
cmc
xchg
and
dec
lcall
inc
les
aas
loopne
stos
inc
jb
xor
cmp
or
add
add
lret
test
rolb
stos
adc
movb
push
insl
rep
xor
mov
push
lret
inc
loop
jae
or
add
fmuls
loopne
push
and
mov
add
dec
and
add
inc
and
jle
sbb
dec
cmpsb
test
pop
rolb
or
adc
add
cltd
or
or
mov
jecxz
shlb
cs
ret
adc
jne
pop
mov
cmc
lret
pop
div
scas
popf
sub
xchg
ficoml
mov
fidivl
mov
decb
imul
pop
sbb
roll
jg
lret
adc
pushf
inc
fwait
nop
std
test
fwait
stos
adc
add
stos
scas
addb
shlb
adc
scas
sub
adc
xor
push
xor
dec
enter
out
test
cltd
jo
cmc
inc
or
dec
pushf
mov
mov
imul
hlt
aad
sub
add
adc
and
stc
cmp
lods
sub
add
cmpsb
testb
outsl
or
in
cmp
add
push
push
mov
push
xor
push
xchg
shll
mov
icebp
push
pop
rolb
push
add
stos
sbb
fadds
and
shl
imul
add
mov
push
pop
loopne
push
faddl
mov
sbb
js
push
sbb
mov
inc
xor
mov
jne
mov
mov
test
cmp
ss
cwtl
hlt
test
or
lods
lcall
orb
test
pop
jmp
cmpl
jmp
stos
pminub
sbb
and
in
cmp
pop
inc
cmpsl
and
push
mov
es
pop
lds
xor
add
shl
adc
adc
pusha
mov
sbb
adc
rclb
add
adc
aad
inc
jl
xchg
mov
push
andl
dec
test
add
sbb
mov
mov
shl
lret
xchg
inc
mov
mov
cmp
js
and
leave
popa
rolb
stos
cmp
je
pop
push
inc
fisttps
mov
jo
and
sub
push
lret
or
dec
testl
push
or
pushl
mov
sbb
sub
xchg
mov
adc
stos
dec
xchg
and
sub
test
in
xchg
sub
adc
call
jp,pn
and
int
jno
mov
mov
adc
jnp
stc
mov
bound
add
or
or
sbb
mov
enter
pop
mov
call
sbb
dec
push
lods
cltd
xchg
push
popf
sub
sbb
adc
hlt
cmp
popf
push
fwait
push
sub
mov
or
subl
pop
push
out
enter
lea
insl
popf
ret
jo
add
jle
push
ret
inc
cmc
mov
cmpsl
jge
mov
js
cmp
orl
stos
pop
incb
test
in
push
bound
jl
jo
popf
jo
roll
inc
mov
ret
adc
iret
add
xchg
loop
xor
and
mov
push
cs
lcall
cmp
cltd
stos
mov
lods
xor
inc
inc
mov
push
mov
cmp
jp
jmp
sub
test
xor
push
add
or
jl
pop
and
jbe
adc
cmp
scas
inc
xchg
sbb
shlb
push
xor
mov
and
cmp
test
test
icebp
adc
mov
inc
loope
jns
lods
xor
enter
roll
cmc
inc
push
ljmp
add
mov
es
sbb
roll
sub
fiadds
xor
add
jmp
cmp
jo
rorw
pushf
sub
negl
fs
pop
and
mov
fsubrs
push
in
dec
cmpsb
sbb
movsl
xchg
mov
mov
gs
push
arpl
shlb
and
mov
inc
push
add
test
fcoml
sub
icebp
test
or
xorl
pop
add
sbb
jo
divl
adc
pop
and
icebp
dec
jp
inc
pop
jl
test
pop
rclb
push
xchg
add
inc
push
stos
adc
push
enter
inc
push
js
std
ret
dec
or
mov
ret
sbb
adc
adc
cmpb
push
int
pushf
push
dec
repnz
lock
or
sbb
inc
mov
adc
mov
inc
rol
std
mov
sub
hlt
and
fs
adc
xor
mov
jno
inc
pop
pusha
and
or
adc
or
jns
push
xchg
mov
push
rorl
jle
pusha
pop
push
inc
xchg
sahf
adc
mov
jl
in
scas
test
into
mov
add
mov
test
xchg
leave
push
and
push
push
scas
dec
rclb
aam
push
outsb
int
pop
cmp
xchg
data16
rorb
or
ret
pop
adc
ljmp
push
mov
cli
rcrb
pushf
mov
sbb
push
mov
jg
adc
iret
mov
cwtl
pop
mov
sub
nop
daa
adc
add
pusha
fcomip
push
add
push
inc
lods
add
sbb
inc
loopne
sub
fdivrl
pop
stos
inc
addl
or
mov
add
cmp
xchg
ret
shlb
ret
bound
sbb
dec
push
cmpxchg
outsl
movsb
cltd
xor
push
insb
std
jo
and
pop
cmpsb
mov
push
push
test
je
cmc
fs
push
test
jmp
int3
stos
incl
push
push
push
push
adc
into
pop
scas
mov
sbb
sbb
or
out
cmpsl
xchg
push
xchg
test
popf
int
xor
pop
add
bound
sub
scas
xorb
insl
inc
enter
lods
sbb
rclb
pop
add
sub
jecxz
sbb
or
mov
pop
adc
mov
shlb
add
addr16
add
or
mov
lods
sbb
rolb
lock
sbb
jne
out
adc
push
sar
pop
adc
stos
sub
jnp
mov
inc
orl
add
movsb
arpl
fwait
mov
adc
or
add
sarb
xchg
ja
pop
dec
add
ret
push
mov
inc
mov
cli
mov
in
mov
subl
push
sbb
mov
ds
call
xchg
mov
aas
test
pusha
sbbb
add
inc
adc
sbbl
jmp
lods
lcall
inc
xor
loopne
adc
push
repnz
cmp
sub
cmp
mov
adc
mov
stos
sbb
scas
sub
add
loopne
add
add
movsl
sbb
mov
test
imull
add
push
adc
inc
xor
adc
lahf
push
aad
negb
ja
xor
xor
or
unpckhps
push
jnp
or
ret
rcrb
push
push
mov
jo
inc
lea
cli
dec
aaa
fists
imul
mov
and
lock
xchg
cmpsb
adcb
repnz
xor
pop
loope
pop
daa
shll
or
mov
repnz
sbb
sub
and
into
gs
gs
cmp
inc
cli
hlt
and
add
lret
in
push
inc
adc
sbb
mov
sbb
jg
push
pushf
adc
sub
or
xor
add
sub
rolb
dec
jb
add
sbb
sbb
test
pop
adc
mov
pop
aad
adc
xor
icebp
xchg
mov
add
roll
sbb
cmc
dec
mov
add
push
mov
adc
es
cs
dec
or
cld
xchg
test
sub
scas
sbb
je
mov
out
inc
xor
push
push
mov
push
push
jmp
call
pusha
andb
inc
or
orl
int
jae
and
pushf
hlt
xor
fadd
lods
rorl
ret
jp
jmp
push
daa
enter
or
sub
push
pop
jg
cwtl
lcall
pop
jp
je
jno
add
je
push
popf
rclb
shrb
fsubs
push
inc
iret
ret
sub
jns
idivl
stos
dec
popa
ret
mov
xor
cmp
lock
lea
cmp
push
loope
addr16
ret
jmp
and
imul
js
xchg
xchg
leave
inc
adc
sbb
lcall
push
cltd
push
inc
test
cwtl
push
shrb
popa
scas
andl
fimull
cmc
cli
sbb
mov
push
or
jo
inc
sub
btc
lods
test
mov
arpl
inc
or
adc
in
int
addr16
and
mov
cli
test
adc
jnp
push
push
jb
arpl
inc
pushf
cmc
loop
or
addb
dec
adcl
rorb
mov
jbe
fimull
or
push
mov
out
ljmp
dec
push
es
jp
xor
scas
cmp
adc
xor
imul
mov
lcall
lcall
addl
lahf
rorb
xchg
jno
push
push
call
movups
cmp
push
lods
mov
loopne
push
ret
mov
cmp
adc
nop
mov
loope
cmp
rolb
stos
xchg
sbb
mov
mov
push
adc
icebp
adc
mov
inc
push
xor
ret
adcb
push
mov
push
gs
mov
pop
in
dec
push
dec
mov
lret
or
xor
add
fistpl
fisubl
shr
fsub
adc
les
mov
pop
lods
fldt
out
ljmp
or
sahf
adc
adc
sahf
mov
jb
xchg
add
push
daa
sbb
sbb
adc
fdivl
mov
scas
ds
push
test
cmpsl
insl
jmp
and
pusha
loopne
mov
inc
inc
clc
add
jbe
and
sub
adc
pushf
aad
movsb
mov
sbbb
mov
stos
push
pop
adc
sub
sar
or
loopne
out
pop
add
loopne
or
inc
sub
das
or
add
bound
adc
or
lea
adc
cld
and
push
push
push
scas
lcall
aad
push
dec
mov
test
or
pop
add
sbb
mov
mov
or
sbb
inc
mov
mov
add
es
adc
and
or
pop
cmp
dec
lret
pop
push
cmpsl
mov
inc
inc
repz
fisttpl
lock
cmp
aam
ret
mov
and
lods
out
aad
adc
jb
pop
sbb
adc
or
jb
sbb
jo
scas
dec
add
or
inc
or
bound
icebp
sarb
cmpsb
test
dec
ja
sub
push
adc
xlat
mov
cmp
and
jnp
add
sub
ds
mov
inc
pop
xor
or
xor
std
inc
pop
inc
xchg
rcrl
cmpsl
push
mov
sub
add
mov
xchg
and
adc
xlat
ficompl
out
rclb
pop
cmpsb
sbb
sbb
rorb
and
sbb
cmp
push
test
mov
call
sbb
lcall
inc
add
rol
sub
cmc
ret
inc
pop
and
in
dec
push
sub
les
movsl
mov
push
mov
test
stos
rolb
cmpsl
stos
and
adc
adc
or
loopne
test
mov
add
add
inc
ljmp
xchg
sub
xor
inc
push
mov
jecxz
inc
cmpsb
xchg
enter
mov
rcll
push
xchg
inc
mov
sbb
enter
shrb
jb
pop
test
shlb
rclb
add
and
push
sub
sarl
test
jne
or
stos
dec
mov
add
or
push
xor
sbb
or
mov
scas
adc
adc
push
dec
loop
inc
push
inc
out
leave
xor
or
adc
xor
stos
dec
jl
leave
cmp
adcb
iret
push
sub
adc
mov
mov
push
cmp
sub
enter
or
fwait
dec
push
xchg
or
jb
push
in
push
test
dec
adc
cld
add
push
or
xchg
lret
cmc
mov
cmpsl
and
dec
call
push
or
icebp
add
sbb
pop
mov
popa
push
roll
sbb
sub
or
jo
cmp
mov
ljmp
cs
hlt
les
dec
inc
dec
sbb
loop
sub
ds
lcall
jo
mov
adc
inc
test
test
je
mov
jb
adc
mov
loop
sbbl
add
dec
dec
test
pop
xor
pop
add
or
inc
stos
pop
push
std
outsb
subb
adc
push
cmpsl
lret
push
adc
cmp
and
cmpsb
sub
mov
add
inc
mov
jo
pop
das
arpl
js
mov
dec
orl
add
jo
push
xchg
mov
les
fadd
jle
in
or
and
daa
fdivs
ret
xor
es
or
shll
push
rclb
popa
leave
push
xchg
clc
mov
nop
mov
fwait
sbb
xor
shl
adc
mov
add
mov
loope
push
fidivl
push
aaa
inc
and
push
sbb
pop
cmp
push
lret
xor
lcall
sbb
andb
sarb
jmp
or
jl
ljmp
gs
and
pop
xchg
ret
add
test
push
add
test
adc
sub
jns
mov
adc
jae
mov
in
inc
add
out
ljmp
popa
or
loope
jbe
pop
add
pop
adc
mov
jb
out
sti
push
andb
in
jl
and
adc
fs
lock
inc
ret
push
sbb
cwtl
js
es
nop
jne
push
shll
mov
ret
cwtl
xor
test
aam
fsts
call
xchg
or
xorb
daa
mov
mov
push
pop
sbb
mov
mov
shlb
jge
push
adc
adc
adc
add
or
std
leave
push
shrl
pop
xchg
mov
imul
mov
rolb
enter
inc
aaa
mov
mov
cmp
gs
dec
jns
aad
sarl
js
loop
mov
cmp
xchg
cmp
daa
add
and
ficompl
nop
mov
dec
cmc
dec
push
mov
jecxz
sbb
add
adc
xchg
sub
stc
mov
push
adc
xchg
sbb
xchg
or
leave
idivb
cwtl
repnz
jmp
stos
or
insb
mov
rcll
xor
test
push
ss
adc
mov
inc
and
pop
fistl
cmp
and
in
add
sub
adc
jge
mov
push
xor
add
loop
call
jne
pop
addr16
mov
cmp
mov
inc
xchg
mov
and
pop
push
ljmp
ja
lock
stos
sbb
out
or
jg
push
cmp
fsubrl
cltd
ljmp
jns
push
js
jo
sbb
loope
add
xor
ficomps
je
push
icebp
pop
mov
push
mov
mov
pop
les
or
call
jo
or
imul
rclb
and
mov
stos
push
lods
push
push
dec
adc
mov
dec
or
push
mov
xchg
in
incl
hlt
push
in
loope
je
add
loopne
pushl
and
test
mov
add
pop
or
mov
or
inc
mov
fcmovu
sbb
into
cwtl
sbb
andb
dec
dec
push
sub
cmp
sub
adc
das
jns
adc
orl
xchg
jo
push
shl
adc
ficoml
ss
xchg
jne
add
popa
add
ret
add
icebp
add
lods
inc
ret
or
adc
jo
add
or
pop
insl
mov
cld
orb
pop
in
push
sbb
and
divb
push
xchg
rolb
mov
push
sub
subb
push
repnz
mov
mov
rcll
lods
jl
sbb
adc
nop
ror
adc
popf
mov
cmpsl
push
dec
mov
mov
push
dec
cli
adc
mov
jbe
sub
push
lcall
lea
loop
add
push
cltd
sbb
lds
add
jae
les
mov
std
cmp
push
sbb
enter
add
mov
ret
push
mov
mov
mov
ret
mov
stos
dec
mov
xor
xchg
fisttps
jl
out
xor
adc
lea
addb
add
fildl
push
test
inc
and
stos
push
adc
rolb
pop
mov
sub
add
leave
int3
xor
rorb
cmp
sub
cmpb
push
ret
xorb
nop
cmp
push
icebp
adcb
inc
test
sbbl
jne
push
dec
aad
xchg
mov
or
push
sarb
out
sbb
push
adc
sbb
add
mov
mov
xchg
stos
jo
dec
out
out
scas
and
popf
into
aam
mov
cmp
mov
mul
adc
fidivs
sbb
sub
xchg
test
js
rcll
in
add
sarb
es
and
jo
push
jmp
add
ror
sub
stos
cld
jge
add
mov
rcl
sbb
push
sub
lret
add
push
jmp
notb
ret
and
xor
adc
push
xchg
call
and
jbe
insb
dec
push
xchg
imul
jbe
xor
or
push
stos
pop
xchg
mov
push
push
andl
jne
out
icebp
sbb
mov
sbb
inc
add
sub
test
xor
cmp
push
out
incb
mov
pop
push
pop
adc
pop
or
test
mov
in
mov
jo
dec
and
pop
movsl
push
test
xchg
add
hlt
or
icebp
sub
or
xor
clc
inc
push
cmp
or
ss
neg
sub
add
cmp
mov
mov
in
repz
cmp
test
or
pusha
test
ljmp
jmp
loop
pop
adcb
lods
inc
cmpsl
cmpsl
sub
mov
or
in
adc
sbb
pop
data16
ds
lret
rcll
data16
mov
fildl
shll
cmp
add
enter
lods
jo
repz
call
mov
es
out
or
ret
test
repz
orl
in
repz
add
push
xlat
xorb
pop
push
rcrb
or
sub
add
add
fiadds
subb
daa
add
mov
mov
sbb
mov
xor
jns
add
mov
and
icebp
cmp
mov
cwtl
mov
loope
sub
out
sbb
pop
pop
adc
int3
xor
push
fs
inc
daa
mov
push
and
inc
test
add
ret
mov
cmc
bound
shrb
loopne
and
lds
adc
sti
sbb
adc
push
xorb
and
cmp
lock
insl
pop
push
dec
add
sbb
sub
xchg
add
pop
cs
sbb
mov
mov
pop
icebp
push
jns
jns
stos
jp
sub
ret
inc
pop
stos
cmpl
xchg
loopne
push
adc
push
mov
enter
adc
sbb
adcb
adc
dec
dec
aam
les
xchg
sbb
loopne
shlb
cmp
mov
outsb
push
cmp
int
or
cmp
jge
into
inc
inc
push
cmp
mov
mov
ror
add
mov
and
adc
or
jne
push
ljmp
xchg
fs
subl
push
dec
outsb
icebp
dec
shrb
jmp
shrl
and
int
push
push
ror
jo
stos
jp
add
nop
mov
gs
sbb
add
jae
stos
sahf
clc
jg
adc
mov
shll
fimuls
outsb
leave
sub
or
adc
shll
ljmp
push
xor
pop
sub
sub
push
xchg
sbb
cmp
fsubr
sbb
add
push
push
nop
sub
add
rorl
inc
xor
xchg
insb
or
cmp
add
in
adc
xchg
pop
or
dec
sub
bound
iret
jle
and
out
pop
push
fmuls
push
scas
pop
push
xor
sub
jo
rclb
push
and
je
sbb
sbb
stos
xor
jl
or
mov
push
mov
xchg
in
imul
sub
rcll
push
lcall
movsl
mov
jo
mov
push
jp
sbb
and
adc
or
and
pop
in
inc
sbb
ret
mov
outsl
xchg
leave
or
push
lods
cmp
sub
mov
in
sar
out
inc
ret
int3
rclb
test
add
jle
inc
push
add
adc
sbb
or
and
push
fists
andb
gs
orb
inc
xor
jmp
int
sub
sti
pop
inc
aad
push
adc
push
dec
subl
and
push
or
add
or
push
and
push
and
pushf
fcomip
push
cmc
jbe
push
push
dec
pushf
hlt
push
fs
pop
push
mov
inc
inc
addl
insl
and
in
clc
push
jl
dec
and
enter
push
xchg
data16
nop
sti
or
ret
or
dec
xor
insl
and
and
lds
adcb
insb
xor
negl
jle
mov
cli
inc
ret
call
jnp
mov
cmc
or
dec
clc
push
sub
into
sbb
pusha
jbe
sub
dec
lret
sub
mov
movsl
xor
cmp
mov
sbb
popf
push
and
adc
mov
shll
cli
jae
enter
test
mov
sub
pop
mov
mov
lcall
imul
mov
cmp
repnz
add
push
jl
jo
cmp
cmpb
push
popf
enter
fs
fnstsw
lret
push
cmp
sbb
mov
aas
insb
mov
add
sti
pop
das
sub
mov
xchg
push
les
mov
adc
ret
or
push
pop
adc
aam
enter
test
push
xor
lock
jp
in
imul
cmp
xor
lcall
add
pop
inc
xor
out
test
mov
shlb
push
push
lret
sbb
stos
in
notb
into
jno
adc
or
hlt
push
orb
sbb
mov
adc
xchg
mov
fwait
mov
pop
negl
push
or
dec
add
fdivs
fcoms
icebp
mov
nop
rcl
ljmp
pushl
inc
scas
out
ret
sbb
lret
jmp
adc
sbb
xchg
cmc
adc
or
in
mov
sbb
adc
add
pop
insl
mov
push
pop
adc
add
into
das
call
packuswb
push
inc
cmp
and
push
cwtl
mov
adc
inc
insb
pushf
dec
cmpl
and
outsl
punpckhbw
jo
and
or
inc
sarl
mov
fwait
repz
xor
sbb
lea
loopne
jo
es
push
adc
dec
pusha
and
mov
or
or
adc
inc
push
es
inc
jmp
int
sub
sub
aaa
and
mov
sub
call
shlb
add
sbb
inc
int
data16
adc
call
lock
adc
or
mov
xchg
cmp
push
scas
call
add
dec
xchg
add
push
pop
xor
jne
xchg
jb
test
vmovss
adc
sbb
xor
sbb
push
add
jp
or
roll
sbb
mov
and
inc
and
shll
js
mov
mov
ss
stc
fwait
lret
xchg
pop
stos
cmp
push
pop
jecxz
out
sbb
lret
sbb
mov
shll
stos
push
mov
into
mov
sub
movl
sti
pop
cmp
pop
xor
iret
lahf
aas
test
lds
xlat
add
stc
repz
cmpsb
aam
popa
xorb
scas
fidivs
and
sub
daa
shlb
cmc
pop
in
push
scas
scas
stc
jl
stc
repz
xchg
addl
push
lcall
mov
repz
xchg
push
cld
fcomp
xchg
xor
iret
pusha
adc
xchg
loopne
cs
or
xchg
mov
dec
lea
insl
sti
push
mov
repz
lahf
adcl
repz
and
jno
in
stc
jg
cld
stc
fidivs
shr
add
jmp
push
adc
aas
pop
out
add
imul
cld
stc
repz
jb
sub
add
sti
push
mov
lahf
aas
jg
jae
push
test
xchg
adc
mov
stc
repz
aam
sub
dec
lods
and
aas
insb
inc
and
outsl
std
pop
psllq
iret
lahf
and
cs
or
sbb
stos
jg
cld
stc
rorb
adc
push
add
iret
lahf
aas
sarb
add
cmc
out
test
stc
repz
pop
cmp
in
ljmp
inc
iret
lahf
aas
jg
movsl
and
and
cmp
inc
xor
enter
inc
xor
fnstsw
jg
cld
or
mov
ja
sbb
dec
jne
pop
repz
lahf
push
clc
stos
fisubl
fs
sub
jg
cld
stc
pop
js
stos
test
aas
mov
aam
mov
lahf
aas
mov
scas
push
jecxz
das
xlat
or
stc
repz
call
jbe
and
iret
lahf
aas
jg
cmp
push
scas
mov
adc
dec
stc
repz
sar
lds
aad
dec
pushf
sub
jbe
ja
lahf
aas
jg
sbb
and
or
stc
repz
fistpll
movsb
sti
jge
dec
mov
enter
aas
jg
cld
mov
mov
push
hlt
add
cmp
xchg
test
or
mov
lahf
mov
stos
sbb
push
push
pop
mov
iret
leave
call
adc
sbb
int
push
inc
fs
repz
sbb
pop
pop
test
aad
lret
or
cld
stc
mov
mov
inc
jl
in
cmp
jl
jp
iret
lahf
aas
mov
xor
cmp
inc
cld
outsl
imul
mov
in
mov
inc
xchg
int
pusha
decb
xchg
jns
iret
lahf
aas
jg
mov
lock
lods
cmpsb
push
or
repz
std
add
jmp
iret
mov
push
movsl
inc
jle
adc
enter
mov
lahf
xlat
mov
xchg
xor
ss
push
popa
popf
nop
mov
push
and
out
or
push
dec
jbe
out
int3
int3
sbb
or
out
mov
push
repnz
dec
fs
cld
stc
cs
rcrl
mov
out
popf
jmp
out
lahf
aas
ret
sub
mov
sub
push
pusha
lret
push
daa
xchg
cld
stc
jecxz
cmpsb
lahf
bound
das
sub
and
sub
out
lahf
aas
pop
inc
and
mov
push
cld
stc
repz
jl
add
pushf
rcrb
jg
movsb
inc
jmp
insl
in
pop
cld
stc
repz
adc
mov
sub
rorb
inc
or
xlat
xor
scas
push
clc
pop
out
xchg
movl
or
es
adc
repz
andl
mov
xorb
inc
insl
lret
xor
push
out
lahf
aas
jg
dec
out
mov
out
lret
sub
add
aaa
test
repz
add
aam
mov
lret
cltd
push
es
aas
jg
cld
cld
fcomps
mov
sub
jge
out
lahf
sub
sbb
mov
jo
xchg
cld
stc
imul
cmp
sarl
inc
lret
pop
out
lahf
aas
push
mov
sub
xor
cld
stc
repz
jge
pop
sti
test
fisttpll
iret
mov
rcr
lods
sti
pop
repz
inc
fidivrl
inc
lods
inc
jp
xchg
add
fisttpl
jmp
lea
cltd
or
ds
repz
stc
mov
jmp
pop
cld
xor
fldenv
jg
aas
jg
cld
jns
sub
xchg
jno
or
bound
lahf
mov
shrb
jmp
xor
stc
fisubrl
lods
bound
dec
daa
mov
iret
lahf
aas
adc
out
mov
cld
stc
repz
xchg
repz
push
iret
lahf
aas
jg
leave
mov
xchg
pop
subl
out
gs
cltd
out
aad
cltd
jnp
mov
ljmp
gs
paddq
sbb
or
lahf
sbb
shrb
and
cld
stc
loop
mov
enter
imul
out
xor
pop
xchg
lahf
aas
sti
iret
fists
mov
cld
stc
repz
cmpsl
mov
xchg
arpl
mov
cltd
pushf
mov
nop
js
dec
add
and
shlb
jmp
shll
sbb
addr16
jbe
sub
outsb
roll
out
xchg
xor
push
cmp
imul
fsubrs
repz
lahf
xchg
ds
mov
popa
dec
iret
enter
sbb
rcrl
hlt
adc
lahf
sub
cmp
jo
dec
xlat
mov
cld
stc
mov
and
out
mov
adc
cmp
mov
sbb
popa
push
jo
cld
stc
repz
es
mov
ss
xor
test
iret
lahf
aas
jg
adc
int3
sbb
xchg
dec
mov
stc
repz
mov
dec
inc
loope
pop
aad
lret
pop
dec
lock
bound
inc
jg
imul
lahf
aas
pop
lds
xor
sub
int3
cld
stc
repz
mulb
test
orb
cmp
sbb
lahf
aas
jg
enter
add
sbb
cld
stc
repz
in
ljmp
stc
add
dec
inc
movsb
lahf
aas
jg
sub
dec
aaa
fisttpll
repz
cmp
jae
pop
mov
jo
movsl
push
das
cld
stc
inc
ja
add
dec
dec
mov
sbb
lahf
aas
jg
lret
test
push
mov
repz
das
jbe
cs
adc
int3
sbb
inc
adc
mov
xchg
movb
mov
iret
rorl
incl
in
jg
cld
stos
cmp
xor
testb
div
out
lahf
out
insl
or
popf
aad
fwait
push
idivb
stc
negl
fdivrs
mov
daa
ror
ds
lahf
aas
and
jb
and
iret
aas
fnstsw
repz
dec
bound
jne
cmpsb
js
pop
sbb
aas
inc
out
xchg
in
movb
push
inc
cld
stc
repz
mov
push
and
pop
mov
aas
jg
fisubs
mov
das
jle
test
arpl
jbe
cld
stc
repz
rcrl
adc
and
lahf
aas
jg
jne
out
ss
in
decl
sub
popf
xor
repz
in
xor
fdivrl
mov
loopne
mov
cld
mov
int
jne
mov
stc
mov
mov
enter
xor
sbb
add
jg
cld
stc
js
insb
or
mov
inc
flds
pop
iret
lahf
aas
jg
inc
mov
mov
pop
xlat
mov
jg
in
stos
cmp
fdivrl
dec
call
lahf
addr16
cmp
mov
and
cld
stc
mov
xchg
inc
js
shl
test
ja
clc
out
lahf
aas
mov
adc
xchg
ljmp
xchg
daa
mov
mov
xchg
add
jg
out
aaa
cmp
mov
stc
stc
repz
cmp
stc
mov
out
lds
mov
es
mov
mov
jg
cld
pop
mov
add
scas
pop
push
mov
jecxz
iret
lahf
pop
scas
iret
adc
insl
push
pop
fiaddl
addr16
push
push
push
lcall
and
cld
mov
pop
or
jnp
mov
stc
repz
inc
xlat
in
mov
imul
adc
push
sub
movsl
cmpsl
or
repnz
dec
or
out
lahf
xor
nop
jp
cmp
xor
and
stc
in
mov
cli
je
test
aas
jg
mov
or
les
and
ds
ret
repz
lahf
add
shl
sub
push
jle
cld
stc
xlat
je
fcmovb
pop
mov
loopne
test
aas
enter
mov
jg
cld
mov
test
mov
xor
sbb
lahf
aas
daa
cwtl
sarl
icebp
dec
sbb
inc
stos
pop
shrd
or
push
jg
repnz
sti
fcomi
lock
mov
lret
aas
ljmp
lahf
js
outsl
dec
mov
int3
inc
out
stc
repz
hlt
pop
adc
dec
lahf
adc
jnp
add
jg
cld
jo
sub
cld
cmp
pop
es
cmp
repz
lahf
xchg
pop
into
jg
jbe
mov
or
out
cld
stc
push
push
jnp
mov
lcall
out
lahf
aas
and
cwtl
sbbl
stc
repz
xor
mov
inc
stos
push
stc
out
dec
lock
cld
arpl
push
outsb
gs
mov
into
sar
and
sarl
aaa
enter
stc
repz
aas
push
inc
pop
mov
rolb
aas
jg
push
stos
std
mov
outsb
shll
out
ret
jmp
out
in
rol
pop
lret
lahf
aas
jg
add
or
out
iret
jno
cmp
repz
cmc
lods
push
jmp
dec
ljmp
sub
jg
cld
sbb
lea
cmpsb
mov
jns
sub
mov
aam
insb
in
cmp
jge
jg
cld
stc
xchg
sub
push
inc
mov
cs
push
cmp
jae
iret
lahf
aas
lcall
jp
mov
stc
repz
insl
or
push
fdivrp
mov
mov
mov
adc
out
sub
stc
repz
sarb
mov
js
out
sbb
jmp
and
or
scas
mov
iret
lahf
aas
and
hlt
rcrl
cmp
in
sbb
pop
out
xchg
fs
cld
stc
repz
lea
mov
out
mov
sub
push
or
aas
jg
jge
movsb
mov
rcrl
das
lahf
es
repz
add
jp
inc
dec
pop
and
xchg
aas
jg
cld
mov
inc
pop
imul
lahf
cmp
add
movsb
add
sub
jg
cld
stc
shrl
or
nop
mov
sub
mov
inc
out
lahf
aas
jnp
fchs
pusha
movsb
mov
cld
stc
repz
aas
pop
push
xchg
or
stos
xchg
inc
jle
mov
lds
stc
repz
lods
jecxz
fdivl
scas
je
lret
cmp
lahf
aas
jg
mov
hlt
lret
addr16
arpl
stc
repz
pop
pusha
mov
mov
lea
aas
jg
add
mov
into
sbb
stc
repz
bound
fstpt
stc
mov
inc
aas
jg
cld
jecxz
and
test
fisubrl
sub
ljmp
jg
xlat
in
cmp
jae
xlat
pop
stc
xlat
inc
in
cmp
xchg
dec
shr
cmp
jg,pt
cld
mov
xor
xchg
repnz
dec
icebp
in
fisubs
cld
stc
push
xchg
push
adc
rorb
aas
icebp
idivl
add
inc
sub
sahf
hlt
sbb
incb
loope
ljmp
mov
aas
cld
inc
lcall
imul
xor
out
fldcw
cmp
icebp
xor
jns
je
jg
cld
mov
jp
jge
mov
cmp
loop
repz
lahf
mov
sub
push
jne
imul
test
or
add
insl
sahf
aas
jg
insl
mov
pop
mov
inc
inc
push
std
repz
lahf
cmp
insl
mov
mov
fsubrs
dec
das
sbb
fidivrs
scas
outsl
inc
not
mov
loope
movsb
push
aad
fwait
aaa
outsl
mov
je
nop
cmp
in
lahf
aas
jg
inc
ret
bound
out
adc
add
icebp
cwtl
loope
out
pop
ja
add
push
inc
and
jg
cld
sbb
inc
in
adc
cmpb
push
fdiv
out
lahf
mov
jmp
mov
mov
ss
push
jl
pop
rcrb
and
lahf
aas
or
xor
cltd
clc
cld
stc
repz
aam
push
int3
cmp
dec
sbb
xchg
aas
jg
inc
cmp
pop
jbe
jo
aaa
out
add
or
fimuls
jg
shlb
and
aas
jg
mov
pop
cwtl
pusha
or
mov
es
adc
dec
int
aaa
outsl
test
nop
dec
sub
mov
jns
out
dec
xchg
xor
int
movsl
gs
ljmp
mov
inc
sub
dec
cmp
xor
dec
fnstsw
iret
pop
cli
xchg
decl
sub
stos
xor
lea
xchg
aaa
cld
stc
repz
test
mov
popf
dec
leave
test
ret
inc
iret
lahf
aas
jg
inc
test
dec
sub
shlb
pushf
lds
sbb
pop
bound
pop
lahf
aas
jg
jg
mov
fadds
outsb
mov
sub
popf
mov
movsb
pop
jo
push
test
mov
ret
aas
jg
cld
jae
or
or
jo
lods
adc
hlt
fcoml
fs
pop
test
iret
lahf
ja
add
mov
sbb
push
jg
cld
stc
xchg
or
add
pop
fisttpl
ss
loopne
jmp
sbbb
test
mov
and
cld
stc
repz
jno
xor
shlb
stos
test
mov
jg
and
mov
stos
lahf
aas
ljmp
ljmp
or
adc
stc
repz
shlb
data16
mov
pop
mov
jg
cld
outsb
popa
inc
rclb
dec
dec
in
xchg
outsb
adcl
out
lahf
mov
inc
lahf
mov
push
push
and
inc
test
test
mov
out
sbb
xchg
fdivl
xchg
push
inc
xorb
pop
cld
stc
repz
dec
js
and
or
sub
iret
lahf
aas
jg
testl
in
and
xor
stc
repz
icebp
roll
push
xor
stos
insb
cmc
xchg
lcall
outsl
mov
jl
es
inc
addl
repz
testb
dec
gs
cmc
or
cld
cmpsb
pop
pop
rcrl
out
cli
stc
repz
fwait
cmp
add
out
aas
jg
cld
inc
dec
push
in
pop
inc
mov
psllq
iret
lahf
mov
adc
lods
sbb
push
cmpb
stc
jbe
divl
lds
pop
dec
dec
and
iret
lahf
aas
push
jp
icebp
or
adc
stc
repz
test
adc
call
gs
jns
cmpsb
push
cli
xchg
push
jle
mov
xor
daa
dec
cwtl
adc
mov
push
out
fwait
aaa
jl
inc
and
pop
lods
int3
fcompl
pop
fidivrs
gs
mov
mov
outsl
xchg
lock
clc
hlt
or
cmpsb
lahf
jns
out
add
xchg
sarl
icebp
or
leave
aad
aaa
outsl
fidivrs
inc
add
add
jg
out
fwait
mov
loopne
xor
outsl
fidivrs
and
addr16
adcl
int
aaa
ss
inc
js
cwtl
pop
shlb
pop
xor
mov
xchg
addr16
in
pop
fisttps
iret
pop
jle
sub
fiadds
lods
push
xchg
mov
rorb
add
jno
inc
mov
sahf
mov
jg
shrl
leave
in
mov
push
out
lahf
aas
rcl
mov
inc
push
mov
repz
fsubl
pushf
jnp
lahf
clc
mov
sti
or
lahf
aas
jg
add
faddl
enter
out
jmp
std
sbb
addl
cld
stc
rep
xor
jns
cmp
inc
bnd
pop
iret
lahf
aas
jg
fidivrl
les
and
repz
push
dec
cmpsb
stos
cmpsl
ss
lods
clc
sahf
movsl
ds
aas
jg
xchg
xchg
xor
sub
jmp
imul
out
mov
cli
ret
sub
mov
es
xor
ret
push
cli
and
pop
mov
or
jg
cld
stc
aaa
xchg
mov
ss
iret
lahf
aas
aad
ja
mov
imul
repz
push
daa
leave
push
dec
dec
imul
es
jle
dec
cltd
rolb
pop
sub
adc
into
sbb
stc
inc
jns
in
pop
in
lods
outsb
std
sbb
out
lahf
aas
dec
sbb
pop
ficompl
jp
sbb
repz
pop
pop
call
int3
cmpsb
iret
lahf
aas
jg
or
dec
dec
jmp
lds
xor
lea
mov
xor
outsb
out
cmc
xchg
iret
mov
dec
inc
popa
jnp
and
out
scas
call
mov
pop
leave
insl
in
jecxz
aaa
outsl
fidivs
sub
sbb
sti
aam
int
aaa
shrb
das
jnp
jb
jge
sub
push
cmp
out
insb
repnz
pop
fdivrl
push
stos
mov
outsb
out
outsl
iret
lahf
jg
xor
mov
xchg
and
lahf
aas
hlt
leave
push
jb
stc
mov
ds
jecxz
jmp
sti
in
iret
push
or
jmp
daa
and
outsl
je
push
aas
stc
cld
fisttpll
cmp
outsl
jbe
add
or
xchg
std
mov
repz
cmp
lcall
pusha
or
mov
cmpsb
xchg
cli
mov
outsl
xlat
inc
cmp
repz
mov
push
std
push
or
call
jg
cld
add
mov
inc
mov
jge
ljmp
cmp
loop
inc
sahf
call
js
cmpsb
arpl
fwait
ja
lods
jge
push
pop
add
movq
out
loope
outsl
cwtl
mov
lahf
sbb
or
iret
lahf
aas
jmp
rcr
aad
add
cld
stc
repz
inc
sub
and
cli
iret
lahf
aas
jg
out
xor
iret
xchg
xor
repz
stos
sbb
xchg
icebp
or
inc
and
adc
flds
fsubp
sbb
daa
bsr
add
call
out
xor
mov
sub
int3
jbe
rorb
outsl
fidivrs
enter
adc
dec
imul
and
loope,pn
popa
xchg
sbb
fidivrs
int
call
int3
lods
inc
sbb
out
fwait
aaa
mov
adc
and
call
repz
mov
stc
dec
leave
sti
and
cmpsb
in
lret
subb
cmp
es
lea
jle
sbb
jge
out
aas
iret
dec
shlb
pusha
jmp
testl
cs
mov
xchg
sub
inc
imul
sub
lahf
aas
adc
aaa
push
test
xchg
out
lahf
aas
jg
out
add
sub
xchg
test
cld
stc
xrelease
in
sub
loopne
iret
lahf
aas
jg
sbb
push
rclb
data16
cld
stc
repz
pushf
loopne
icebp
hlt
lock
ja
out
rorb
aas
jg
jno
insl
sbb
adc
mov
xchg
xor
xlat
push
cld
stc
repz
je
mov
in
xlat
inc
test
mov
adc
and
xchg
imul
inc
fstps
fstpl
jl
dec
enter
jge
aas
gs
jg
cld
mov
cmp
stos
fwait
mov
jp
out
lahf
adc
and
ret
jg
cld
stc
xor
leave
adc
xor
int
jle
adc
mov
aad
ds
push
mov
cli
or
lahf
aas
jg
divl
cmp
scas
testb
mov
mov
dec
leave
pop
aaa
outsl
fidivrs
mov
inc
mov
int
cmp
push
jae
sub
in
jg
cld
stc
lock
xchg
aad
stos
jns
bswap
stos
or
inc
or
aas
mov
adc
stc
mov
jne
and
rcll
lahf
sarl
or
shrl
jo
out
jno
ficomps
mov
sbb
mov
pop
in
xor
pop
mov
in
iret
bound
mov
jno
std
adc
mov
pop
shll
add
icebp
divb
out
mov
popa
int
stos
lahf
jp
mov
jg
cld
xlat
mov
je
dec
pop
cmp
fcompl
sub
out
lahf
repz
outsb
or
adc
jle
cld
stc
gs
sub
add
cltd
jle
xor
cld
jge
fucomip
xor
imul
int
jmp
fidivrl
xor
stc
sbb
andb
inc
outsl
call
jle
and
mov
rcll
add
int
aaa
xchg
dec
cmp
xchg
push
insb
movsb
fidivrs
jmp
xchg
fwait
enter
mov
les
int
fwait
aaa
outsl
loopne
imul
and
and
jecxz
xor
dec
push
dec
mov
mov
nopl
and
pop
inc
pop
push
in
outsl
ficoms
cmp
stos
addr16
pop
andl
and
popf
lret
cli
xlat
test
aas
jg
cld
xchg
outsb
push
scas
pop
jne
inc
pop
jae
testl
jp
es
sahf
sub
cld
stc
push
cmpsb
xor
push
and
in
in
iret
lahf
aas
or
fistps
or
mov
cld
stc
repz
gs
mov
pop
adc
pop
or
inc
jns
aas
sbb
lock
lahf
xchg
dec
cmp
fadds
sbb
cld
stc
xchg
lock
int3
sahf
push
out
dec
and
shl
iret
lahf
aas
pop
jb
xchg
fdivs
cld
stc
repz
outsb
div
pop
icebp
push
adc
push
mov
lahf
aas
jg
les
out
sbb
adc
cld
stc
repz
stos
xchg
and
jb
sbb
mov
insb
or
push
sub
sbb
repz
mov
mov
push
int
fldl2e
stos
aas
jg
cld
orl
ret
stos
mov
lahf
nop
loope
addb
fs
cld
stc
push
loope
mov
repz
imul
sbb
repnz
lahf
aas
cli
dec
stos
outsb
inc
mov
push
adc
repz
xchg
push
mov
add
jecxz
adc
scas
iret
lahf
aas
jg
fs
iret
dec
mov
fsubs
scas
xor
loopne
test
jae
lahf
aas
jg
icebp
sbb
or
inc
popf
inc
adc
pop
push
out
xchg
orl
mov
pop
cld
mov
jg
cld
into
fs
or
popa
clc
xchg
loope
pop
test
repz
lahf
and
lcall
test
cld
stc
pop
or
push
call
push
inc
testb
iret
lahf
aas
out
pop
mov
cld
subb
stc
repz
xchg
cmpsw
mov
and
out
lahf
aas
cltd
add
aam
rcrb
cli
sub
and
inc
das
aas
in
scas
jge
iret
lahf
sbb
push
jno
xchg
stc
enter
repz
inc
xorb
lock
inc
iret
lahf
aas
jg
add
outsb
mov
adc
mov
pusha
mov
enter
addr16
or
stos
rorl
mov
scas
loope
mov
xlat
aaa
outsl
fidivrs
ja
jo
xor
orl
fwait
outsb
outsb
adc
inc
cltd
or
cmpsb
jb
ja
outsl
fidivrs
xor
shrl
outsl
fs
fwait
aaa
adc
stos
jge
in
clc
cltd
pause
fidivrs
jnp
ret
outsb
push
mov
mov
fwait
aaa
outsl
inc
ljmp
xor
mov
fldcw
fwait
add
jle
cltd
jns
fwait
aaa
outsl
fsubrp
hlt
or
inc
mov
jns
out
iret
sbb
call
in
xchg
fidivrs
pop
jmp
inc
jns
sub
int
aaa
mull
sbb
leave
mov
repz
in
push
into
ljmp
sbb
outsl
lds
cmpsl
dec
sub
repz
push
jae
jne
clc
addr16
sbb
test
cmp
outsl
fidivrs
jbe
addr16
iret
mov
jnp
repz
fwait
dec
call
out
sahf
dec
loopne
pop
push
lahf
aas
jl
pop
enter
gs
jmp
out
stc
repz
bound
test
leave
jmp
aas
jg
cld
cmp
ss
jnp
adc
iret
lahf
ds
insl
and
inc
cmp
out
or
in
int
xor
adc
iret
adc
mov
jns
mov
test
pop
jge
call
mov
xchg
jle
sbb
add
cld
stc
repz
mov
fists
aas
leave
dec
fsubl
inc
xor
and
pop
fistps
fnsetpm(287
out
mov
leave
sbb
cltd
mov
inc
fmull
stos
adc
push
jns
out
mov
cmp
repz
in
inc
popa
cwtl
mov
jb
aam
pop
ss
fcompp
mov
ds
or
jns
inc
or
test
test
sahf
xchg
das
mov
int
aaa
sbb
aaa
orb
mov
sbb
ret
inc
mov
loop
mov
aaa
out
add
pshufw
mov
int
lods
sub
into
aas
into
lds
and
test
mov
int
aaa
out
xchg
imul
pushl
mov
jg
mov
hlt
int3
push
xchg
adc
data16
lahf
mov
mov
repnz
mov
dec
outsl
repnz
dec
jns
out
imul
add
mov
mov
xchg
fwait
aaa
outsl
ficomps
inc
jecxz
pcmpeqw
aas
jg
xchg
arpl
mov
outsl
mov
and
ret
repz
lahf
dec
push
mov
fwait
in
mov
rorb
imul
test
out
mov
enter
push
jg
out
xor
out
fwait
mov
ljmp
outsl
fidivrs
jbe
movsl
adc
aad
lods
outsl
or
aaa
test
and
out
xor
jns
fs
inc
dec
int
mov
sbb
insl
xchg
dec
mov
test
aas
sbb
in
in
xchg
fwait
cld
stc
repz
mov
xor
mov
jb
insl
test
lahf
aas
jg
loop
fidivl
incb
jne
add
pusha
sub
enter
push
cwtl
lock
lahf
aas
dec
aaa
dec
fninit
xchg
jo
mov
adc
repz
jae
scas
mov
jmp
xchg
fwait
ss
aas
jg
push
dec
adc
cltd
push
pop
in
out
inc
stc
repz
mov
in
xor
cmpsl
sub
cld
shlb
mov
dec
dec
mov
mov
lahf
fsubl
iret
les
jg
cld
stc
sub
popf
ljmp
adcb
or
leave
lahf
aas
ror
test
cmp
fwait
ja
push
cmp
adc
loope
mov
dec
dec
push
rclb
push
rcrl
adc
out
pop
fldl2t
mov
arpl
pop
aaa
sbb
cld
stc
repz
xchg
fldcw
sbb
sahf
xor
lahf
aas
mov
dec
stos
pop
mov
mov
out
mov
daa
stos
mov
mov
jg
cld
loop
sahf
or
adc
cld
imul
mov
mov
filds
outsl
ljmp
mov
cs
ds
ficoml
dec
stos
stos
xchg
gs
lahf
aas
jg
mov
pop
out
xchg
or
repz
push
stos
js
push
adc
int3
jns
jmp
xorb
roll
add
xchg
shlb
in
or
into
ret
pop
in
push
shrb
ds
adc
add
and
pushf
ret
out
fwait
loop
test
pop
xor
fidivrs
into
adc
dec
pop
stc
mov
test
popf
out
int
aaa
outsl
jp
push
jp
pop
jbe
sarb
outsb
fistpll
or
ljmp
xlat
jbe
aaa
outsl
fmulp
xor
push
int3
mov
js
out
xchg
mov
shr
fwait
ljmp
aas
call
xor
sub
sahf
or
dec
xor
ja
ret
cltd
push
jg
loope
and
lahf
inc
cmp
cmc
pop
adc
repz
cmp
cld
stc
repz
jg
and
pusha
mov
sub
add
pushl
daa
jg
mov
xor
or
lods
jle
cld
stc
in
mov
mov
outsb
mov
push
clc
jmp
cmp
outsl
pop
jnp
push
loopne
jns
out
repz
clc
enter
repz
sub
nop
dec
fistpl
or
dec
flds
inc
jp
out
loopne
int3
insl
cmpl
mov
add
das
ror
rclb
addr16
inc
imul
jb
aam
pop
cmp
jecxz
lods
into
or
xchg
ret
ret
daa
lahf
aas
jg
xchg
mov
adc
xchg
inc
cld
lret
xor
repz
sbb
pop
repnz
or
hlt
and
insb
xchg
cli
pop
sbb
mov
fwait
aaa
outsl
fisubs
jp
nopl
sub
push
sbb
sbb
les
cmpb
imul
push
jg
repz
fwait
divb
repnz
jnp
test
inc
outsl
fidivrs
push
pop
outsb
or
dec
xor
pop
fisubrl
aaa
sarl
jp
repnz
push
mov
pop
rorl
cld
pop
mov
aaa
outsl
ficoms
loop
loop
or
add
in
int
or
into
insl
jmp
outsl
fidivrs
aas
push
mov
pusha
xor
mov
aaa
lcall
arpl
shlb
sub
mov
stos
jnp
sti
shll
fs
sbbb
fwait
aaa
outsl
xchg
pop
xor
sbb
lock
int3
imul
mov
icebp
or
inc
jmp
vmwrite
cmp
mov
sti
pop
ds
or
inc
aaa
outsl
fidivrs
sahf
xchg
and
jae
lock
incb
xchg
mov
imul
jns
out
ret
sbb
add
aas
mov
xchg
lds
outsl
aaa
outsl
push
lods
stos
jae
lods
jns
out
xchg
mov
mov
popa
stc
adc
mov
or
outsl
fidivrs
jl
imul
xchg
or
fidivs
sub
lea
cwtl
cmpsb
pop
fnstsw
push
dec
pop
jg
fidivrs
pop
inc
ss
jo
mov
or
push
lahf
mov
lahf
call
push
repnz
out
fwait
aaa
pusha
cltd
mov
jno
fidivl
pop
fidivrs
fwait
or
stc
lds
shrl
pop
in
mov
int
aaa
outsl
adc
test
inc
jle
jns
out
sahf
inc
mov
dec
test
mov
mov
inc
fwait
aaa
outsl
fidivs
sub
popa
inc
and
adc
out
xor
xchg
mov
jl
adc
jns
xchg
cwtl
in
test
cmc
scas
dec
fwait
aaa
outsl
fmulp
scas
push
popf
int
adc
pop
inc
fstpt
out
fbstp
pushf
and
pop
cmp
outsl
fidivrs
insb
fists
cld
test
dec
adc
sub
out
fwait
lock
adc
lret
ds
outsl
fidivrs
mov
mov
pushf
out
fwait
aaa
jp
bound
sub
dec
cmp
mov
jge
fsubr
xchg
data16
into
int
aaa
outsl
ds
pop
jne
lret
test
out
cs
add
jae
fiaddl
mov
pop
inc
aas
aaa
outsl
fsubrp
xchg
inc
les
imul
mov
in
xchg
int
mov
jnp
lds
jb
scas
mov
jno
int3
cmp
shll
dec
lahf
aas
jg
insb
mov
int
xchg
mov
cld
stc
repz
mov
inc
out
enter
push
mov
aas
jg
jecxz
stos
std
push
loop
cmp
fadds
std
and
stc
repz
and
inc
ja
les
sub
or
sub
aad
and
or
adc
mov
push
stc
repz
lahf
cmpsl
jbe
es
test
repnz
push
insb
xor
fiadds
fwait
aaa
outsl
fimuls
lret
fists
dec
mov
stc
fidivrl
sarl
insb
jns
out
xor
mov
mov
sbb
outsl
fidivrs
fmull
lods
out
cmp
xchg
rcrb
inc
rcl
aas
dec
xchg
ja
lahf
xchg
pop
fistps
and
repz
mov
dec
mov
outsl
fidivrs
mov
imul
clc
repz
fwait
ret
push
ss
idivl
repz
mov
push
xor
xchg
pop
dec
aaa
outsl
ficoms
out
dec
jae
mov
fisttpll
jl
repz
fwait
stos
shlb
das
out
xor
sti
mov
cmp
dec
iret
fwait
xchg
stc
repz
das
or
sbb
leave
mov
nop
lods
lahf
aas
jg
and
in
inc
sbbl
testl
fmulp
fwait
aaa
outsl
jo
jnp
sti
negb
call
mov
aam
add
scas
sub
fs
fwait
aaa
outsl
fmulp
adc
jb
jg
push
cmp
inc
push
lret
jns
out
jmp
inc
mov
sarb
sub
dec
sbb
outsl
fidivrs
inc
std
loopne
imul
daa
out
repz
fwait
ss
mov
pop
mov
dec
bound
sub
jne
fidivrs
push
fldl
dec
outsb
sub
mov
sti
xchg
int
aaa
aad
adc
sub
dec
hlt
xor
shll
repz
aas
jg
ljmp
pusha
pusha
popa
cmc
push
adc
punpckhdq
cld
mov
test
fldl
cwtl
lahf
aas
jg
int
out
mov
fildll
adcl
lods
xor
repz
xor
imul
call
stc
imul
xchg
int
clc
sub
into
repnz
mov
iret
lahf
test
inc
inc
pop
mov
shll
jg
cld
stc
mov
xchg
add
leave
stc
jns
lock
aas
adc
mov
add
pop
push
cld
stc
repz
popf
je
js
dec
xchg
lods
or
sub
jg
push
jae
dec
or
lock
jns
lock
cltd
out
into
aaa
and
push
mov
lret
adc
xor
jne
sbb
cmpsl
push
sbb
js
dec
icebp
xchg
popf
rcrb
imul
jns
out
js
jns
cmp
push
repnz
fwait
aaa
outsl
ficomps
dec
inc
clc
xor
not
or
out
test
test
jmp
jo
dec
adc
jmp
in
sbb
int
ja
push
jecxz
push
xor
sub
fidivrs
in
jge
insl
gs
dec
ljmp
fwait
aaa
outsl
adc
and
aam
mov
mov
jnp
les
xchg
notl
inc
xchg
aaa
outsl
fiadds
jmp
das
mov
dec
pusha
in
and
int3
cli
jle
sbb
scas
push
mov
mov
mov
adc
out
aas
out
sbb
movsl
fbstp
sub
cld
stc
fsubrs
sub
addr16
fwait
dec
push
test
out
lahf
aas
xor
cmp
dec
xchg
cld
stc
repz
and
cs
ljmp
add
jb
xchg
aas
jg
push
push
adc
mov
cmpsb
fwait
sbb
outsl
ficoms
cltd
mov
xor
call
fstps
dec
lret
aas
jg
lret
sbb
pop
jl
push
test
stc
repz
add
inc
mov
dec
mov
aas
jg
fwait
push
lock
int3
ret
int3
add
imul
dec
cmp
pop
jb
outsb
jg
cmp
jg
cld
decb
outsb
lods
pop
out
and
pop
test
lahf
je
loope
xchg
jne
xor
xor
dec
jg
cld
stc
mov
cmovg
push
aaa
into
incl
lahf
aas
adc
ljmp
jbe
aad
cld
pop
shrb
cmp
repz
enter
out
call
nop
mov
fwait
aaa
outsl
fsubp
jbe
and
fmulp
push
repz
insl
push
mov
icebp
fistps
jno
mov
out
aaa
outsl
fidivrs
push
insl
pop
sub
pop
sub
int
stos
inc
push
xchg
fs
lahf
outsl
fidivrs
or
xor
lahf
mov
jl
int
aaa
nop
inc
lret
cmc
cmp
das
lahf
xchg
mov
in
insl
push
dec
mov
jle
nop
mov
dec
mov
call
or
sub
push
pop
aam
pop
stos
mov
stc
in
pop
std
cmp
int
ja
mov
icebp
fsubrp
adc
addb
jns
out
js
mov
or
out
fstl
aaa
adc
in
add
pop
xor
fwait
in
jbe
ljmp
lahf
aas
jg
pop
push
push
mov
adc
test
enter
xchg
adc
add
outsl
ficomps
imul
lea
int
xchg
out
push
loope
push
std
iret
mov
jmp
out
inc
jecxz
imul
push
mov
mov
aaa
outsl
ficoms
or
int3
and
repz
fwait
rolb
fadds
imul
mov
sub
xor
or
daa
iret
sarl
fldl2e
xchg
fwait
aaa
add
pandn
mov
iret
js
inc
jge
pop
test
add
nop
fwait
aaa
outsl
fimuls
or
sub
arpl
jp
repz
push
ja
loopne
popa
inc
cmc
jl
push
outsl
fidivrs
bound
movq
xor
out
fwait
mov
mov
jle
ljmp
mov
push
jl
cmc
or
rcr
lcall
jnp
mov
inc
call
xchg
int
aaa
xchg
js
sub
lret
std
xchg
into
mov
mov
mov
or
out
mov
dec
lahf
ror
fwait
aaa
outsl
push
insb
and
bound
repz
jae
inc
push
xchg
mov
fwait
aaa
outsl
fidivs
adc
jnp
aas
pusha
dec
movsl
mov
xchg
mov
sbb
shl
fdivrl
icebp
aad
decb
push
call
stc
push
dec
pusha
pop
sti
pop
out
inc
mov
mov
iret
lahf
aas
jg
xor
push
xchg
and
mov
sbb
stc
repz
cmpsl
int
lahf
sub
mov
push
les
daa
jg
aam
add
icebp
aaa
aas
jg
cld
hlt
pop
mov
mov
ret
out
lahf
fxsave
mov
stos
inc
jo
orb
int
ja
aam
inc
mov
xchg
mov
rcll
jecxz
fbstp
lahf
aas
jg
push
xor
pop
push
push
imul
jg
leave
out
lock
jg
xlat
sub
pusha
out
lahf
aas
mov
pop
sbb
inc
jle
stc
repz
insb
leave
mov
aaa
das
mov
mov
mov
int
ja
xchg
aaa
mov
push
fiadds
push
repz
fwait
pop
sbb
pop
sbb
in
lret
or
mov
repnz
insl
aad
and
mov
or
fwait
aaa
pop
scas
or
inc
int
push
adc
lahf
push
fidivrs
cwtl
icebp
adc
cmpsl
add
adc
fwait
aaa
outsl
mov
mov
popa
adc
sbb
lahf
aas
lock
out
dec
mov
stc
repz
jnp
and
inc
in
ljmp
mov
sbb
add
repnz
cmp
call
xor
and
push
cmp
leave
ret
pop
jge
in
aaa
outsl
fidivrs
and
imul
adc
enter
popl
fbstp
fidivrs
sbb
cltd
adc
push
sbb
int
aaa
outsl
repz
dec
clc
sub
mov
out
mov
imul
mov
int
aaa
outsl
fmulp
icebp
sbb
and
rcll
push
mov
ficomps
ss
aaa
rorb
adc
push
jo
repz
in
and
in
test
xor
xor
in
aaa
outsl
fidivrs
fs
inc
adc
shlb
fwait
sub
pop
mov
repz
pusha
enter
or
out
sub
outsl
fidivrs
pop
stos
xor
cmp
mov
out
fwait
insb
jle
lods
sub
inc
pop
arpl
fdivrl
jg
mov
sub
jp
add
iret
lahf
jg
pop
and
ljmp
pusha
and
loope
inc
xchg
movsl
jecxz
scas
jp
out
insl
xor
dec
jp
cld
loope
repnz
inc
cltd
push
inc
dec
shll
adc
jg
movsl
fisubrs
cmp
inc
fistpl
das
mov
inc
enter
out
xchg
fstpl
test
je
ja
jg
cld
sub
arpl
or
test
fs
mov
out
lahf
fmul
jne
test
push
orl
ljmp
ds
jg
cmp
lods
jg
mov
and
sub
dec
cmp
jbe
out
xchg
scas
test
jg
cld
scas
orl
jnp
inc
inc
repz
lahf
sahf
push
xabort
call
mov
xor
jg
repnz
push
cmp
ret
mov
push
repz
fwait
jno
push
mov
ds
dec
cmp
lea
data16
xchg
aas
enter
push
fwait
aaa
outsl
fsubp
push
es
cmp
lods
imul
repz
xchg
subb
daa
mov
dec
adc
stc
rcll
pop
jae
fwait
addl
cmc
mov
jge
addr16
xor
cld
loope
jne
cmpl
jns
fwait
xor
and
jg
jp
mov
stc
repz
sbb
mov
mov
add
jg
cld
lock
push
inc
inc
mov
xchg
jb
arpl
mov
sahf
xor
aaa
outsl
fidivrs
adc
hlt
jbe
in
dec
lret
hlt
enter
out
incl
push
stos
fidivrs
mov
mov
js
xchg
int
aaa
outsl
sbb
sbb
hlt
mov
jb
loopne
sbb
jns
out
loop
int
das
fbstp
push
xchg
icebp
mov
dec
inc
adc
inc
les
data16
lahf
jns
out
aad
xchg
lds
mov
je
aaa
outsl
fidivrs
lock
inc
pop
cwtl
push
bound
adc
mov
daa
mov
es
lcall
dec
stos
jns
add
ss
push
imul
pop
xor
divl
dec
mov
add
out
and
mov
inc
dec
cmp
xor
popa
push
stc
add
outsl
fidivrs
add
cmp
sbb
ss
repz
fwait
int
popf
dec
cmp
es
mov
sbb
dec
sbb
aad
sub
xchg
mov
orl
push
pop
or
into
rcl
in
sbb
std
sbb
xchg
int
pushf
sbb
lock
pop
mov
fs
cmp
xor
fidivrs
orl
and
js
push
int
aaa
outsl
aaa
or
test
inc
push
in
pop
dec
insl
and
fidivrs
pop
stos
adc
repnz
or
dec
pop
and
dec
bound
mov
cwtl
inc
stc
repz
addr16
daa
aas
sarl
or
aas
jg
cld
pop
lds
push
fisubl
mov
add
xchg
jb
negb
repz
dec
imul
imul
sbb
insl
daa
or
int
dec
aaa
xchg
push
pushf
add
mov
or
idivl
out
fwait
aas
jg
lock
fnstenv
add
mov
ret
cmp
xor
and
loope
inc
or
lods
jae
es
push
mov
sbb
adc
and
data16
and
mov
fcmovne
xor
cmpsb
push
pusha
jns
xchg
aas
fidivrs
sub
popf
or
adc
subb
or
loopne
sahf
pop
add
pop
out
fwait
ja
pusha
jge
and
sti
vmovlpd
mov
and
sbb
jne
movsb
fwait
aaa
out
add
xchg
sbb
into
outsl
push
jns
out
test
into
stos
inc
mov
push
lock
js
insb
fidivrs
jbe
xchg
loop
hlt
loopne
out
mov
and
sbb
fidivrs
xchg
imul
sub
cmpsl
ret
dec
mov
fwait
aaa
outsl
push
repz
xor
jmp
adc
jnp
mov
fdivrs
pop
fwait
aaa
outsl
fisubs
fiaddl
icebp
jae
jns
out
in
pusha
fwait
aad
push
repnz
clc
loop
stos
ds
adc
pop
and
xor
jbe
dec
cli
xor
mov
in
mov
aaa
sub
aam
jg
jmp
sbb
hlt
repz
fwait
jmp
imul
cmp
fidivrs
je
mov
mov
int
mov
js
lahf
push
movsb
dec
xchg
fnstcw
hlt
xchg
inc
push
push
popa
mov
and
xor
mov
lahf
aas
jnp
inc
xchg
cld
add
mov
stc
repz
call
inc
xlat
xchg
sahf
outsb
fstps
pop
xchg
lahf
aas
jg
decb
andb
in
dec
push
bound
outsb
jne
add
mov
repz
mov
add
nop
std
dec
ret
imulb
add
lret
fcompl
lds
xchg
movsl
xor
mov
pop
mov
add
xchg
iret
xor
dec
dec
and
stos
jno
ljmp
loopne
repz
shl
aaa
movsl
pop
cmpsl
mov
ss
add
fdivrl
mov
mov
mov
pop
call
aaa
outsl
int3
ret
daa
push
loope
pop
cwtl
mov
loop
test
mov
push
aam
aaa
outsl
ficomps
shll
in
adc
cli
and
addr16
repz
lds
jnp
jbe
cmp
stos
iret
lahf
mov
push
cmpsl
aas
mov
stc
repz
add
popa
or
aad
lock
loope
or
sub
rcr
mov
aas
jmp
and
out
push
imul
and
mov
dec
das
xor
jns
out
rcll
cmp
mov
out
shl
outsl
fiadds
push
leave
ja
loop
pop
cmp
and
rclb
scas
lea
mov
repz
test
mov
xor
in
mov
inc
pushf
daa
stos
scas
inc
and
gs
insb
cmpl
loopne
imul
and
jns
xchg
pop
push
fiaddl
popa
in
mov
push
int
mov
and
bsf
out
mov
mov
sbb
adc
or
int3
or
jno
hlt
pop
in
xchg
xchg
jns
out
or
imul
dec
sub
fstpt
cmp
push
push
stc
idivl
repz
lods
sti
dec
pusha
repz
fwait
sti
cmp
out
mov
sub
mov
hlt
aam
in
pop
pop
fdecstp
f2xm1
lret
daa
fwait
aaa
cli
xor
insl
pop
jns
jne
movl
jl
cmp
jg
mov
lods
push
mov
xchg
int
mov
sub
jge
sbb
xor
jg
xor
fwait
loopne
roll
or
movsl
jns
out
test
add
enter
jecxz
and
aaa
outsl
fidivrs
jno
jnp
adcb
xchg
fwait
aad
mov
cmpsl
lahf
insb
fidivrs
lods
inc
and
dec
pusha
nop
inc
dec
pop
flds
mov
mov
repz
jne
into
push
outsl
leave
xor
fldenv
enter
in
mov
cmp
push
ds
add
repnz
data16
stos
imul
or
pop
add
ds
in
adc
aam
sub
imul
repz
or
icebp
pusha
into
pusha
das
cmp
scas
mov
aas
jg
cld
add
leave
and
inc
add
enter
daa
xchg
dec
jg
xchg
lahf
enter
push
adc
iret
sub
in
test
iret
lahf
aas
lods
sahf
mov
aam
mov
jp
cld
stc
repz
sub
or
dec
gs
iret
lahf
aas
jg
jmp
jmp
movsb
jp
or
fidivs
shlb
jns
jne
mov
fwait
ja
pop
call
xchg
arpl
out
in
imul
pop
sub
fidivrs
shrb
mov
mov
jae
in
int
out
fwait
aaa
shlb
test
or
xchg
es
cli
repz
test
mov
cwtl
scas
into
out
push
ret
cmp
jo
into
add
aas
jg
rclb
xchg
pop
roll
mov
repz
lahf
and
mov
mov
leave
and
stc
sbb
mov
lcall
inc
call
mov
sbbl
pop
dec
dec
or
or
push
int3
push
jg
and
repz
into
sbb
daa
xlat
cmp
sub
inc
cmpb
cld
daa
shl
jbe
mov
lret
mov
repz
lahf
aas
sbb
xor
gs
mov
xor
cld
stc
push
mov
stos
in
ja
cmp
iret
lahf
aas
lret
push
mov
bound
adc
xchg
add
outsl
fisubrs
jnp
inc
mov
cwtl
cltd
loop
repz
rorb
mov
mov
jns
push
pop
mov
shlb
movsb
iret
cmpsl
mov
int
aaa
iret
xchg
and
jae
pop
fs
repz
test
xchg
shlb
lods
repz
aas
inc
hlt
mov
dec
lcall
aam
cwtl
cld
cld
stc
adc
mov
movb
lods
mov
push
mov
cld
pop
push
stos
ret
pop
fdivrs
jg
cld
stc
push
add
jo
divb
jge
or
lahf
aas
mov
imul
push
stc
repz
orl
in
popa
in
or
aas
jg
add
xchg
popa
pop
gs
in
cmp
cld
stc
repz
cmp
dec
fcomip
scas
mov
mov
fstl
sbb
ss
cmp
ficompl
stc
repz
mov
adc
or
cmp
aas
jg
bound
inc
jnp
jne
adc
pop
les
ss
mov
mov
mov
and
mov
movsl
std
sbb
dec
xor
je
in
int
iret
aad
jle
mov
sarl
push
bt
cmp
es
pusha
fwait
aaa
outsl
ficomps
mov
insl
adc
test
lock
nop
leave
jmp
mov
jns
testl
loopne
jbe
push
adc
cld
test
mov
loopne
and
lahf
aas
jg
cs
add
loop
fadds
loope
cld
stc
repz
jnp
into
xlat
push
stc
xchg
push
mov
outsl
mov
aas
add
mov
and
loopne
stos
xchg
fsubl
arpl
fistpll
aas
cltd
push
jge
repz
hlt
lea
aaa
into
cmpsl
rdtsc
scas
out
mov
add
fs
call
jno
fdivp
out
fwait
aaa
inc
add
inc
cmp
sub
pop
add
mov
mov
mov
fs
test
outsl
or
subl
mov
lds
push
das
sub
pop
outsl
push
cmp
jg
cld
stc
xor
pop
aaa
pop
mov
imul
pop
cmpsl
inc
shlb
xor
sahf
xor
xchg
repz
aad
pop
outsl
pop
xlat
aas
xchg
xchg
mov
outsl
fidivrs
incb
pop
mov
xor
fsub
int
aaa
lock
fcomi
fnstenv
xor
mov
mov
mov
sbb
mov
int
aaa
outsl
outsb
dec
mov
jae
jae
stos
int
call
cwtl
das
lock
repz
fdivrs
rclb
jecxz
mov
aaa
outsl
fisubrs
push
inc
jle
fcompl
fdivl
lds
mov
mov
aaa
outsl
fidivrs
xchg
xchg
cmpsb
into
cmpsl
or
push
xchg
insl
xor
in
in
int
lds
inc
dec
jp
sbb
sbb
rolb
jns
lock
mov
daa
and
in
sub
aaa
outsl
fidivrs
test
lods
mov
push
jb
out
fwait
push
xchg
mov
xchg
mov
mov
mov
mov
repz
or
cmp
mov
add
pop
lahf
xlat
dec
mov
std
xrelease
ficompl
shr
out
mov
mov
ret
pusha
dec
jg
std
pop
mov
pop
out
push
sub
jg
repz
shr
jne
sbb
call
sub
mov
shll
dec
cmpsl
mov
es
out
dec
cld
or
and
lret
and
jg
fidivrs
xchg
bound
sub
pop
popa
adc
repz
lahf
mov
cs
xor
xorb
stc
stc
gs
pop
in
xchg
pop
mov
repz
lahf
mov
into
jb
mov
adcb
cmpb
stc
or
imul
fwait
aaa
out
xchg
adc
and
popa
mov
jns
out
es
mov
sub
jb
inc
sbb
les
cmova
inc
push
mov
ss
stc
repz
aam
mov
mov
outsl
lcall
pop
aas
loope
add
shrl
ja
dec
sbb
jo
je
outsl
fidivrs
movsl
pop
xchg
xor
mov
aaa
lock
sbb
jae
xorl
enter
sub
out
fwait
ja
adcl
mov
rcll
aas
fidivrs
lahf
xor
add
das
int
aaa
outsl
and
push
dec
and
aad
sbb
repz
or
data16
sbb
jle
outsl
ficoms
dec
push
lret
mov
inc
xchg
inc
adc
mov
and
lods
sub
xorb
or
outsl
ficoms
xchg
adc
fdivs
jbe
mov
xchg
push
fidivl
sbb
mov
daa
or
mov
ficomps
mov
sub
pusha
mov
jns
out
ss
add
jl
cmpsb
mov
ret
fidivrs
mov
push
lea
int
dec
mov
in
shll
fidivrs
sbb
lret
imul
dec
sbb
pop
cli
jmp
int
pop
movsb
test
push
into
and
pop
push
inc
fidivrs
mov
xorb
adc
fxch
mov
push
jg
dec
xchg
popa
outsl
addb
push
sbb
xchg
xchg
lock
mov
out
fwait
aaa
or
out
popa
dec
dec
cwtl
popf
dec
and
or
sarb
xor
sbb
push
fadds
adc
cmp
jge
inc
bound
daa
dec
mov
sub
mov
xchg
cmp
fbstp
mov
sub
lret
repz
cwtl
popa
pop
push
inc
push
subl
mov
or
and
jb
cmpsb
pop
ss
add
out
sub
lret
repz
lahf
jmp
aad
mov
and
cld
stc
xor
jb
loop
sbb
mov
ret
adc
nop
rclb
mov
rclb
jmp
mov
push
cmp
mov
psraw
mov
fstpt
or
or
xchg
shl
add
fadds
jne
lret
mov
loop
push
add
or
add
mov
add
leave
rorb
cltd
pop
fstpt
scas
in
mov
call
inc
popf
stos
push
push
rorl
sub
push
mov
push
xor
not
dec
push
je
xchg
jp
std
inc
ror
jo
sub
push
jne
jne
add
jbe
mov
sub
sub
add
push
rorb
mov
and
or
inc
cmpsl
rcll
sub
push
add
sub
inc
mov
ffree
mov
jns
push
push
or
add
jmp
or
or
adc
lock
roll
into
fildl
push
fdivrs
and
addr16
inc
rcll
call
cltd
insl
cmp
add
fisttpll
adc
stos
adc
ds
out
jmp
pop
fmuls
sbb
add
rcrl
pop
movsb
add
and
dec
mov
add
orb
movsl
rorl
pop
mulb
push
and
mov
mov
mov
push
and
add
scas
ret
adc
xor
mov
adc
cmp
and
push
mov
ret
and
arpl
push
mov
sbb
add
xor
xor
or
aad
add
data16
sub
shrl
or
shll
movsb
ljmp
pop
aaa
or
pop
mov
lds
pop
fistps
push
sub
sti
daa
add
inc
aad
or
mov
jecxz
fwait
into
mov
mov
fwait
lods
loopne
pushf
outsb
cli
push
push
dec
adc
mov
mov
add
mov
aam
xor
aad
pop
inc
in
inc
mov
sbb
pop
adc
sbb
outsl
inc
jne
add
mov
sbb
adc
mov
sbb
or
add
add
push
fimull
int
mov
iret
stos
mov
sbb
push
test
push
jne
sahf
divb
sbb
mov
pop
sbb
repnz
pop
mov
andb
xchg
cmp
or
push
popa
fstps
adc
cli
dec
push
cmp
xlat
push
dec
test
shl
adc
imul
push
lods
test
add
popf
jo
xor
or
cmp
sub
sub
adc
mov
ljmp
adc
int
xchg
jecxz
andl
adc
orb
add
orl
fnsave
fwait
aaa
mov
sbb
and
movsb
pop
add
push
sub
inc
or
fldl
sbb
cli
push
shrb
add
push
adc
mulb
mov
data16
pop
mov
dec
shrb
cwtl
mov
call
call
xchg
sbb
roll
ljmp
mov
sub
aad
stos
xchg
adc
roll
scas
ja
push
adc
push
xchg
nop
subb
inc
inc
jne
add
shlb
pop
or
add
in
mov
push
inc
cmpsb
stos
scas
out
mov
inc
jmp
enter
ljmp
and
repz
sub
cmp
insl
ret
adc
ljmp
stos
andb
push
je
jno
inc
add
sub
daa
mov
and
mov
loope
mov
adc
mov
push
rcll
pop
call
jl
leave
es
mov
or
dec
cmp
or
inc
or
or
and
std
or
add
insb
fildl
push
arpl
add
pop
adc
jnp
add
xlat
rolb
loopne
add
push
stos
pop
imul
sbb
insl
loope
push
push
fcomps
aad
pop
cmp
jecxz
push
pop
add
push
stc
pop
push
adc
loope
shlb
ret
adc
test
rcr
push
lret
test
xor
pop
sbb
adc
add
outsl
jnp
jle
add
mov
adc
mov
insb
sbb
pop
push
push
push
mov
mov
shrb
pusha
mov
inc
pop
repnz
and
les
dec
mov
icebp
test
add
stos
and
add
fcomi
stos
aad
dec
push
or
or
or
push
popf
push
sub
rorl
inc
fsubrs
jno
lds
xchg
mov
cmp
adc
adc
add
mov
je
pop
rorl
mov
call
cmp
or
push
testl
dec
add
add
add
pop
stc
sbb
test
dec
add
mov
push
mov
je
cwtl
sbb
mov
data16
roll
mov
mov
pop
or
and
adc
or
add
adc
add
insl
pop
les
lods
bound
jne
into
push
push
pop
pop
adc
lods
push
imul
mov
mov
hlt
xchg
andb
or
xor
aam
add
add
sarb
pop
mov
rcl
hlt
mov
add
jo
mov
bound
mov
addb
adc
jns
add
xchg
pop
pop
xlat
bound
xor
das
sbb
insb
inc
sbb
fs
repz
je
rcl
js
xor
push
or
into
lods
mov
mov
sub
and
adc
add
add
push
add
int
pop
fs
insb
add
mov
lods
and
sbb
aad
push
add
jecxz
in
mov
or
out
mov
jmp
adc
add
inc
scas
add
mov
and
dec
sti
mov
fwait
mov
inc
sbb
xchg
mov
ficoms
add
outsb
rolb
xor
add
or
mov
mov
shr
mov
sub
lcall
push
xor
or
mov
loop
adc
lret
dec
shrb
inc
push
inc
cmp
lea
inc
xor
push
or
mov
dec
shrb
sbb
push
lea
or
inc
push
daa
pop
ret
mov
adc
shlb
mov
xchg
mov
lahf
pushf
test
inc
dec
out
add
pop
cmp
rolb
enter
lret
jp
ljmp
cmp
push
inc
push
dec
cmpsb
test
cmpsb
mov
std
aaa
inc
inc
push
sbb
pop
add
sbb
lcall
add
fwait
add
inc
lods
cli
in
testb
push
mov
jg
movsb
pop
and
or
lds
jmp
jb
and
sub
adc
sub
sbb
mov
xor
leave
lods
or
or
mov
and
and
enter
inc
stos
dec
adc
testb
or
adc
aad
call
outsl
shrb
ror
test
and
sub
mov
in
loop
and
stos
inc
mov
inc
ret
xor
add
push
or
in
testl
jp
sbb
and
stos
push
mov
adc
sarb
shr
adc
mov
lods
push
lret
mov
pop
std
mov
call
ret
jbe
add
in
loop
shll
dec
add
add
popf
sub
leave
cmove
dec
arpl
push
push
mov
sbb
or
mov
popf
dec
lods
stos
adcb
in
or
sbb
rorl
movsb
xor
rcll
shlb
nop
inc
aam
mov
int3
ret
subb
adc
cmp
cmp
or
loope
sbb
adc
stos
loopne
stos
clc
pop
mov
lret
xchg
es
cmp
sti
add
outsb
rclb
inc
adc
sti
enter
roll
adc
movsb
jbe
mov
xor
int
jnp
and
add
add
ret
hlt
jl
das
cwtl
mov
push
fdivrp
js
push
out
mov
jl
mov
mov
add
ret
fists
insl
or
mov
adc
mov
sub
lock
add
xor
stos
and
sbb
aaa
sarb
mov
inc
push
ss
test
xchg
dec
iret
push
aam
into
add
adc
xor
mov
push
subl
mov
adc
sub
adcl
or
mov
pop
push
test
je
pop
stos
mov
pop
ret
out
add
mov
add
xchg
pop
inc
add
mov
push
add
push
adc
sbb
adc
insb
sbb
out
mov
jp
rorb
sub
cmpsl
mov
adc
sub
pop
jle
push
cmc
push
lods
cmp
push
mov
movsb
das
and
add
enter
push
add
jb
or
mov
push
add
jge
ret
cmp
adc
dec
adc
jecxz
xor
push
test
pop
mov
dec
arpl
mov
push
push
sbb
adc
push
mov
cmc
lret
loop
add
push
mov
pop
push
into
decb
sub
pusha
push
xor
pop
hlt
imul
in
out
pop
xor
push
cmp
fiaddl
outsb
push
cltd
stos
leave
mov
ljmp
add
xchg
adc
add
mov
mov
sbb
sbb
inc
xchg
mov
push
imul
imul
sbbl
jo
push
cmpsl
mov
inc
xor
int3
enter
pop
test
fdivs
cmp
push
and
enter
mov
cmpsb
cmp
scas
into
inc
mov
or
sarl
je
cmp
ret
sbb
loope
subb
fidivl
lods
push
adc
sub
jnp
sahf
adc
test
dec
rcrb
jo
aam
ret
mov
xlat
icebp
sbb
xor
stc
adc
adcb
cmp
mov
xor
in
pop
add
cs
sti
cli
outsl
mov
or
mov
add
ret
mov
pop
adc
add
inc
mov
dec
std
call
cmp
or
nop
sbb
mov
ret
dec
lds
add
dec
test
sub
mov
cmp
je
pop
xor
add
adc
data16
jae
dec
rorl
shlb
out
mov
rorl
test
shl
out
arpl
pusha
sbbb
sbb
adc
mov
or
adcb
or
mov
or
sbb
push
or
lcall
pop
add
xor
in
or
or
test
test
ds
test
sbb
or
and
or
jecxz
inc
adc
push
lods
cmp
cmp
jo
sarb
ret
pushf
push
add
adc
push
lcall
sub
sbb
es
sub
ret
ss
test
test
or
popa
enter
pop
roll
addb
and
inc
inc
xchg
ret
push
mov
cmpb
cmp
push
sbb
adc
mov
lods
push
ret
xchg
push
and
push
dec
push
inc
ja
mov
stos
mov
rorl
sbb
and
inc
adc
stc
sahf
rorb
cmpsl
clc
or
add
or
cld
xchg
push
les
pop
jmp
call
sbb
or
sub
adc
xor
adc
enter
mov
aad
and
sub
pop
ret
push
sub
pop
addl
inc
add
js
pushf
test
sarb
inc
rcrl
jo
xchg
out
loop
push
fwait
hlt
add
outsb
insb
push
xchg
adc
pusha
rclb
lds
pop
inc
adc
push
lea
push
fstpt
inc
xor
inc
call
fldenv
sbb
push
nop
mov
popfw
sub
lret
mulb
adc
push
jge
push
mov
cmp
dec
adc
pop
sbb
inc
inc
push
add
mov
in
sub
inc
xor
sbb
outsl
dec
icebp
xchg
and
cli
xor
int3
rolb
cmp
sahf
mov
rcl
jmp
sbb
sbb
sub
enter
add
daa
push
cmpl
test
inc
add
xchg
sub
cmc
inc
in
add
pop
mov
cld
dec
dec
or
ljmp
daa
leave
inc
or
jae
push
into
test
imul
mov
or
enter
insl
push
inc
push
xor
shl
xor
adc
add
pop
cwtl
or
call
rolb
xlat
out
cltd
mov
icebp
mov
add
cwtl
fidivrl
mov
pop
sub
scas
sbb
pop
mov
push
mov
ret
or
cmpsl
cs
xchg
mov
lock
cmp
inc
rolb
inc
nop
or
push
fiaddl
sub
aas
mov
ds
out
in
cmp
lea
rorb
scas
cmp
jmp
xchg
xchg
xorb
test
push
pop
loopne
push
cwtl
icebp
insl
aaa
jp
cwtl
lcall
rolb
test
mov
repz
fmull
push
pop
sbb
xor
and
push
lea
push
cmp
sub
xchg
add
push
aam
add
lcall
xor
sub
fsubrl
push
and
decl
xchg
inc
popa
sub
mov
js
pop
push
je
add
add
subl
roll
int
sub
loop
mov
into
add
mov
cs
push
and
xchg
leave
push
ret
sbb
ja
orb
lds
pop
inc
mov
pop
outsb
mov
push
add
pop
cltd
add
push
sti
shlb
cmp
out
leave
lret
cmp
lcall
loopne
sarl
ret
jmp
int
cmc
add
adc
xor
sub
or
or
mov
jae
jnp
subb
ret
adc
and
insl
add
sbb
pop
sub
sbb
xlat
or
icebp
add
ror
les
mov
cmp
mov
and
cmp
push
sbb
add
pusha
adc
test
pop
push
cwtl
xor
and
mov
jne
ret
cmpl
in
mov
push
enter
cmp
mov
sub
push
call
inc
mov
jne
mov
or
and
les
pop
ret
pop
cwtl
or
push
push
ret
loop,pn
cmp
mov
cmp
lock
stos
dec
sbb
cmpsl
nop
mov
in
push
adc
xor
jo
addb
rorl
jecxz
ret
and
mov
popa
arpl
out
push
inc
mov
stc
add
stos
pusha
stos
test
adcb
sub
inc
adc
fisubrl
add
push
cltd
push
loope
lcall
mov
adc
sub
jno
or
addb
rorb
ljmp
into
and
repnz
sub
fadd
xchg
cli
xor
push
xchg
mov
adc
xor
add
push
pextrw
ds
lcall
mov
and
ljmp
push
in
adc
pop
adc
rorl
inc
scas
movsl
out
in
pop
mov
xchg
sbb
mov
mov
aam
icebp
sub
push
adc
mov
sbb
js
and
mov
pop
sub
cltd
adc
call
or
dec
andb
push
push
fisttpll
xchg
leave
adc
adc
jnp
xchg
sbb
xchg
into
jg
fistl
mov
mov
mov
ss
xchg
les
add
push
mov
jo
stc
mov
cs
pop
pop
jp
shr
push
addr16
lds
outsl
sbb
ljmp
and
jg
icebp
arpl
call
pop
inc
add
push
adc
mov
adc
in
stos
ficoms
cmpsl
dec
outsb
pushf
add
inc
inc
andl
and
mov
xlat
pop
aam
cmp
or
or
push
aam
and
and
or
adc
cs
mov
addr16
addb
sub
out
jnp
mov
sub
push
and
xor
daa
stos
pusha
stos
inc
add
mov
add
enter
mov
pop
je
rcrb
mov
xlat
or
xchg
ljmp
add
xor
dec
xor
mov
mov
mov
mov
ljmp
xchg
inc
or
adc
jo
sub
int
lods
into
inc
hlt
push
mov
or
adc
mov
cli
add
aaa
jo
push
add
adcl
dec
movsl
add
lods
jne
dec
js
add
rolb
push
mov
dec
call
inc
popf
lcall
sbb
ret
sub
sbb
sbb
mov
test
jno
rcl
or
pop
inc
xchg
dec
icebp
and
inc
jo
mov
dec
mov
cli
sbb
in
lock
or
mov
push
and
jle
aam
push
push
fs
cwtl
lea
push
add
es
cwtl
mov
mov
lock
pusha
mov
adc
jo
daa
iret
jno
shlb
aam
les
pop
cmp
cmpsl
filds
add
clc
inc
xchg
pop
push
test
orl
pop
adc
mov
lock
shl
add
or
add
sub
sbb
adc
sbbl
adc
inc
fidivl
test
test
or
and
add
fwait
push
sti
ljmp
xchg
jo
sbb
or
lret
loopne
stos
adc
inc
inc
sub
repnz
mov
cmp
mov
stos
mov
inc
inc
sub
push
mov
add
roll
inc
std
sub
dec
fsubr
mov
pop
and
test
add
sub
jle
dec
daa
pusha
pusha
fiaddl
sub
pusha
rolb
mov
or
mov
rcl
add
mov
fwait
xor
pop
stos
cli
add
cmp
xchg
fwait
and
push
shl
mov
cs
mov
and
push
push
hlt
pop
add
ret
or
jns
lea
sub
cltd
pop
add
push
cmp
push
std
sbb
cli
js
mov
fucomi
rorb
push
pop
stc
mov
movsb
jae
dec
out
xchg
loop
lods
xor
pusha
xchg
jecxz
sbb
sarb
adc
adc
orb
cld
aas
or
fsubrs
xchg
add
dec
or
inc
sbb
movsl
pop
push
std
or
outsb
repnz
mov
lds
pop
add
movsb
push
loope
sub
dec
mulb
add
out
jnp
jo
sub
call
or
in
xor
lods
inc
xchg
jnp
sbb
adc
dec
fcmovbe
stc
mov
inc
pop
js
jo
test
cmp
inc
mov
or
pop
test
les
inc
aaa
test
in
adc
mov
sub
stc
push
outsl
enter
std
pop
aas
sub
or
lahf
roll
mov
roll
adc
xor
cmpb
and
les
push
lock
mov
xor
pop
pop
mov
push
bsr
and
inc
push
rep
mov
fs
nop
pop
inc
and
push
stc
push
rclb
dec
dec
scas
and
xchg
push
leave
fstpt
jbe
loopne
sbb
add
add
sbb
mov
mov
cmpsb
adc
mov
gs
xor
aad
mov
adc
jo
mov
or
jl
add
push
mov
daa
add
inc
pop
ds
int
push
pusha
pop
or
and
mov
cmp
xorb
inc
pop
negb
test
in
push
push
add
cld
mov
jge
rcrl
sbb
fwait
sbb
bound
dec
lods
mov
adc
aaa
mov
inc
or
mov
inc
scas
fistpll
fs
or
pop
mov
mov
ror
cmpsl
ret
enter
inc
adc
test
pop
nop
sbb
cmp
add
movsb
nop
push
xchg
mov
loop
sbb
push
mov
je
int3
or
sub
xor
jae
jne
shrb
mov
xchg
adcl
cltd
shll
xor
or
jns
mov
push
and
or
sub
stos
mov
loope
inc
sbb
inc
mov
jmp
stos
jmp
lock
add
inc
subb
sub
mov
cli
loopne
nop
loopne
push
inc
lock
inc
inc
arpl
and
push
or
insl
test
sbb
mov
inc
jnp
pop
cmp
popf
sbb
or
notb
ret
lods
xchg
shlb
sbb
and
call
mov
lds
xor
or
rcl
dec
test
dec
shll
push
sub
jp
and
dec
and
loope
push
dec
inc
stos
cli
or
inc
push
loope
imul
movsl
test
xor
pop
mov
jbe
lods
js
xorl
ljmp
mov
push
mov
les
mov
pop
push
cmp
and
xor
shl
or
inc
push
popl
cwtl
push
pop
sub
mov
push
sarl
push
aam
mov
add
ljmp
shlb
ret
int3
test
movsl
adc
lea
xor
adc
stos
jge
xor
or
xchg
roll
pop
pop
hlt
and
sub
add
push
adc
fnstenv
inc
popf
push
imul
cmp
rcll
sbb
mov
inc
mov
popf
orl
addb
and
xchg
or
call
outsl
inc
and
pop
push
sub
or
adc
test
push
sub
test
push
rolb
andl
test
cmpl
sbb
jge
arpl
mov
rcrb
push
lea
push
into
xchg
leave
push
push
mov
dec
jnp
iret
add
sub
push
or
outsl
or
inc
and
inc
outsb
aas
push
call
push
and
cli
loop
cmp
rol
adc
icebp
add
aam
out
xchg
sub
xchg
jg
adc
add
push
adc
mov
add
add
adc
mov
popf
cwtl
xchg
addl
lcall
xchg
push
push
add
and
or
inc
call
loop
sub
mov
sub
push
roll
mov
aam
push
mov
add
inc
sbb
mov
jno
std
and
push
xlat
arpl
stc
stos
mov
loop
fs
and
addl
inc
shrb
add
mov
je
and
mov
xchg
call
push
fstl
aad
stos
cltd
and
pop
xor
insb
add
shrb
cs
adc
sbb
lret
clc
add
imull
xchg
adc
sbb
in
mov
pop
adc
mov
shl
xchg
xchg
jne
xchg
adc
push
sub
imul
xor
lret
and
scas
or
call
mov
adc
js
push
lret
sub
lcall
mov
push
cmp
cmp
mov
adc
lret
inc
mov
mov
nop
or
mov
pop
icebp
mov
or
jb
pop
push
sub
push
jo
mov
sub
dec
jmp
and
aaa
movsb
sbb
add
dec
test
adc
ret
sub
scas
or
xchg
repz
test
xor
or
jns
ficoml
inc
ret
ficompl
test
mov
xchg
shll
hlt
notb
rorb
push
pop
psrlw
push
pop
pop
in
adc
fadds
sub
sbb
add
pop
jl
mov
ljmp
addr16
mov
xor
into
mov
xor
cmp
mov
pop
arpl
jns
addr16
push
dec
xchg
mov
push
adc
mov
add
mov
jle
je
sub
mov
and
pop
jbe
add
cltd
lret
push
lock
sub
unpcklps
adc
in
aam
es
sbb
sbb
inc
mov
in
adc
stos
pusha
pop
adc
push
mov
adc
in
push
sbb
cli
or
paddq
mov
sbbb
mov
adc
sbb
dec
push
pop
xchg
addl
mov
repnz
xchg
fcompp
push
jle
add
adc
push
cwtl
jo
scas
imul
add
mov
mov
ret
push
lret
pop
dec
xchg
push
pop
cmpsb
push
fsubr
mov
shll
and
cmpsl
or
add
sbb
push
xchg
push
lods
ljmp
push
jbe
and
mov
cwtl
hlt
jne
push
cmp
xor
je
fwait
pop
cld
or
push
jl
xchg
sub
push
scas
dec
jno,pt
xor
push
add
es
pop
adc
mov
mov
push
sbbl
inc
int
inc
sbb
sbb
mov
inc
add
jp
std
aad
sub
xchg
mov
inc
subl
push
mov
sbbl
shll
imull
test
or
sbbb
push
add
pop
push
sbb
add
fldl
inc
rclb
add
push
pop
inc
scas
or
fwait
aas
adc
aad
push
sub
shr
add
psubd
or
fisttpll
mov
pusha
sub
or
mov
loopne
mov
adc
je
dec
cmp
lcall
aas
add
mov
test
aam
mov
cmp
test
cmp
lods
ret
or
or
hlt
mov
idivb
pop
inc
mov
ljmp
pop
add
jbe
mov
push
add
pop
xor
sarb
xchg
and
ror
inc
push
xor
lds
loopne
adcl
cmp
test
xchg
mov
lods
sub
mov
push
in
into
push
int
and
inc
mov
mov
mov
orb
clc
testb
jnp
xchg
addl
add
andb
inc
mov
test
icebp
add
shll
lea
sub
insl
je
push
fnsave
call
jge
adc
ds
mov
std
jb
xchg
push
adc
test
in
mov
inc
std
mov
lock
les
andl
add
addr16
loope
lcall
dec
mov
pop
or
adc
scas
pusha
sub
sbb
loope
aad
insl
out
cmovno
xor
inc
shl
in
inc
add
sbb
les
cs
js
xor
lock
loopne
orl
adc
xor
add
pop
icebp
xor
into
popa
ljmp
inc
add
nop
and
loope
pop
push
add
sbb
out
les
jne
add
mov
dec
leave
jne
push
rorl
jecxz
cmp
test
mov
push
adc
dec
roll
in
pop
inc
push
enter
xor
push
mov
adc
incl
loopne
xor
inc
insl
test
shrl
into
decl
test
test
xor
adc
inc
mov
in
mov
or
push
mov
sarl
mov
mov
inc
add
sbb
into
sti
mov
or
sbb
nop
imul
aad
add
jnp
nop
jmp
jne
test
cs
es
sub
mov
jmp
mov
and
push
arpl
add
xor
test
sahf
pop
stc
add
pop
inc
imul
push
sbb
sbb
fs
mov
lock
add
add
es
sbb
call
and
add
ficompl
add
mov
or
sbb
cltd
mov
sbb
in
add
sbb
shrb
jb
sbb
or
stos
jo
lret
xchg
mov
pop
fsubr
mov
vorps
out
or
shll
je
push
mov
dec
pusha
loope
out
mov
loope
mov
dec
shlb
in
add
mov
and
add
mov
push
ret
add
imul
push
loopne
adc
xchg
xor
push
sub
adc
add
add
push
inc
loopne
push
push
cmp
sbb
push
lds
push
fcmove
push
loopne
pushf
and
aas
mov
xorl
dec
mov
aad
ljmp
lret
lods
sub
cmp
xchg
pop
jp
and
cmpb
jl
mov
les
outsb
arpl
adc
mov
add
push
push
jae
sbb
sbb
adc
add
add
and
lock
js
cmp
mov
push
adc
popa
dec
mov
mov
jo
cli
mov
lods
push
add
or
xchg
cmp
inc
mov
sbb
mov
loope
add
or
or
mov
js
mov
inc
fstl
adc
jno
repnz
dec
or
sarb
enter
push
jo
sbbl
ja
inc
inc
or
jne
enter
leave
cld
push
sbb
loope
arpl
rolb
ja
dec
ljmp
ret
stc
or
rorl
bound
sub
outsb
call
xchg
outsb
mov
lds
sahf
push
mov
leave
fistpl
andl
and
xchg
adc
or
sub
push
cld
jo
adc
push
dec
xor
call
adc
add
adc
mov
out
push
sub
aad
push
pop
or
push
xchg
testb
push
mov
test
fistl
sarb
pop
cli
sbb
xchg
cmp
add
test
movsl
jo
adcl
jge
or
adc
inc
in
or
push
jno
and
add
jno
enter
dec
cmpsb
cwtl
add
dec
add
aas
std
shl
add
jb
adc
int3
arpl
mov
push
sub
push
add
adc
inc
pop
sbb
shrl
xchg
or
xor
pop
stc
pop
cwtl
push
ret
or
jge
ds
mov
jmp
pop
xchg
andb
and
add
shll
jae
adc
cwtl
mov
adc
pop
add
mov
pop
add
dec
ret
rorl
loope
add
outsl
mov
mov
xchg
pop
nop
in
daa
inc
xchg
bound
jns
push
movsl
inc
sub
jb
push
xchg
dec
and
push
cmp
sub
clc
cmpsb
inc
inc
orb
jne
cmp
orl
sbb
test
rolb
and
add
adc
mov
lret
dec
mov
jge
add
adc
movsb
push
adc
mov
in
mov
mov
or
mov
and
xchg
or
cld
add
orb
or
add
or
or
adc
push
jae
cmp
add
dec
push
mov
std
test
rcrl
adc
sub
fistl
mov
pshufw
subb
roll
addl
lods
or
adc
adc
push
dec
test
nop
aas
outsl
dec
pop
and
mov
adc
enter
mov
cmp
and
sarb
dec
adc
das
or
or
shrb
push
mov
or
clc
and
std
adc
adc
lret
xchg
mov
xchg
xchg
sub
pop
adc
inc
scas
cmp
cwtl
xlat
sbb
or
push
push
stos
in
add
cmp
and
mov
in
idivb
js
sahf
push
or
or
cmp
inc
enter
push
outsb
inc
imul
gs
inc
sbb
jb
mov
jp
cltd
pop
sbb
hlt
insl
insb
push
or
or
cmp
test
adc
pushf
push
push
loopne
cmp
outsl
rol
push
stos
mov
movsl
pop
lea
fistl
inc
add
inc
mov
or
jo
xchg
inc
rcll
mov
xchg
or
xchg
mov
out
push
stos
sbb
sub
and
popl
push
mov
jl
pusha
and
pop
mov
push
cwtl
sahf
jnp
inc
inc
mov
adc
cmp
mov
cmpsb
xor
lea
and
jmp
outsl
test
xor
jle
jne
mov
sbb
dec
xor
push
and
inc
adc
xor
inc
or
add
inc
pop
fs
cmp
aam
ret
xchg
xor
push
and
inc
adc
in
sbb
mov
push
cmpsb
bound
xchg
insb
lods
pop
pop
out
stc
xchg
and
adc
mov
xor
xor
push
bound
mov
add
push
pop
scas
rcl
notb
or
insb
pop
push
mov
les
or
ss
mov
pop
mov
push
push
lods
test
dec
lds
or
adc
inc
inc
jae
shl
xchg
push
into
adc
fwait
mov
pop
or
and
jge
loop
jl
ljmp
cltd
leave
addb
or
inc
int
test
jae
push
adc
mov
adcb
sbb
pop
lret
mov
mov
adc
les
and
mov
cs
adc
lods
sbb
ret
movsl
repz
push
test
mov
leave
sub
push
cmp
movsl
cmpb
xor
push
test
pop
lds
roll
and
inc
adc
mov
adc
cmpsb
inc
ds
push
adcb
pop
or
ret
xchg
dec
cmpsb
mov
arpl
sub
pop
lods
shrb
inc
in
inc
adc
call
mov
gs
in
addr16
mov
repz
mov
sarb
sbb
cwtl
jo
mov
or
cwtl
into
or
repnz
rolb
xor
xor
test
mov
and
in
xor
aam
lods
push
loope
cmp
dec
mulb
mov
jmp
mov
outsl
les
and
loopne
cmpb
loopne
inc
cmpsl
xchg
add
cmp
sarb
inc
imul
push
adc
sbb
das
scas
sbb
lock
adcl
rclb
sbb
sub
mov
sbb
into
and
push
je
inc
push
and
in
movlps
clc
gs
int3
lcall
mov
adc
mov
dec
or
adc
fimull
push
cltd
mov
rorb
inc
sti
cmp
shrb
shrl
inc
pop
sbb
outsb
sbb
xlat
lahf
jno
nop
into
das
push
push
jl
add
xor
test
mov
push
add
sbb
pushf
inc
push
jle
and
pop
jne
mov
jge
xchg
pop
xor
push
dec
into
cmp
xor
and
xor
add
pop
gs
sbb
or
add
popa
add
arpl
cld
mov
inc
es
cli
cs
jl
orl
aad
push
cmp
cmp
scas
subl
add
adc
adc
dec
pushf
test
dec
aam
mov
xor
jno
add
push
sbb
dec
inc
insl
and
sbb
push
stos
adc
test
mov
ds
cmp
inc
pop
out
aad
out
pop
std
les
push
les
pcmpeqb
sbb
pusha
repz
pusha
mov
add
sbb
add
add
adc
xor
sarw
aam
jmp
push
mov
mov
stos
retw
and
mov
inc
imul
xchg
pushf
loopne
gs
fwait
into
mov
rolb
xchg
jmp
repz
stos
mov
xchg
pusha
sub
repnz
dec
inc
push
mov
mov
or
and
jbe
jp
popa
js
mov
adc
pop
bound
dec
shll
sub
push
adc
and
jecxz
rolb
je
mov
inc
mov
loope
addb
andb
add
and
cmc
lock
push
cltd
rclb
out
xchg
mov
shrl
hlt
mov
jo
pop
add
mov
push
xor
lcall
movsb
pop
push
add
push
cmp
push
xchg
jge
sbb
dec
sarb
add
bound
ljmp
ficoml
mov
xor
leave
pop
inc
scas
push
sub
or
aas
shlb
mov
mov
mov
push
mov
call
rorb
js
jnp
lds
or
or
outsb
lea
adc
pop
orb
pop
test
jne
lahf
mov
mov
push
adc
xor
mov
mov
jne
or
pop
sbb
stos
clc
packuswb
mov
mov
inc
orb
jnp
fs
sub
lea
movsb
push
sub
push
push
inc
pushf
testb
je
aam
add
pop
sbb
and
and
fucomip
mov
push
decl
or
sti
fstl
adc
pop
pop
ret
mov
jne
or
mov
jne
or
and
or
cwtl
sti
mov
das
and
loop
sti
fs
hlt
in
add
sahf
out
jnp
mov
or
push
add
xlat
mov
inc
add
ret
call
filds
push
or
sbb
outsb
adc
cmp
jne
sbb
add
dec
or
cmpl
fwait
out
out
out
and
mov
enter
les
mov
and
or
jno
nop
jb
push
pushf
stc
ss
jae
pop
cltd
sbb
stc
pop
in
jmp
mov
pop
je
or
pop
ret
subl
repnz
sbb
pop
or
push
mov
enter
movb
mov
jo
push
sbb
nop
pushl
or
fs
mov
js
je
outsb
mov
or
add
sti
add
or
pop
jmp
lods
sub
add
loop
dec
push
int
mov
or
in
dec
or
or
mov
pop
scas
enter
xchg
push
sahf
add
daa
lea
movsb
xchg
jle
aas
and
or
and
loope
insl
sti
cmp
jl
mov
pop
jle
cmp
mov
pop
shr
pop
cmp
enter
cmp
xchg
aas
xchg
sbb
cs
xor
iret
and
mov
jbe
iret
rcrl
js
pop
std
fbstp
jmp
call
mov
or
jmp
decl
sbb
mov
pop
leave
mov
push
pop
loopne
popa
cmp
push
jnp
adc
mov
add
cmp
jne
test
out
adc
or
dec
jmp
call
sti
jmp
push
cmp
jne
mov
inc
pop
je
test
sti
sbb
mov
das
outsl
mov
jmp
cmpb
scas
mov
or
jbe
inc
or
ja
xor
jp
mov
add
jmp
fstpt
sbb
sub
mov
hlt
xchg
cmp
je
cmp
je
inc
out
jne
pop
lea
add
aaa
mov
adc
pop
cmp
mov
lods
mov
pop
sbb
mov
cmp
cmp
jo
test
mov
pop
inc
cmpb
and
cmp
sbb
push
cs
pushl
or
bound
pop
in
fildl
std
aaa
jne
pop
incl
aam
clc
or
test
ja
arpl
mov
add
push
push
ja
dec
clc
mov
xchg
cmp
dec
mov
mov
push
add
push
push
push
lahf
data16
ja
imul
mov
popa
ja
fsubrs
daa
and
push
push
xor
cld
daa
adc
pop
movsb
pushf
hlt
mov
jecxz
dec
sbb
subl
outsl
ret
adc
jge
movl
test
aaa
jg
shlb
fwait
inc
mov
inc
andb
test
mov
and
test
pop
push
xor
mov
mov
inc
inc
or
jmp
or
andb
inc
inc
fistl
sbb
add
jae
outsl
leave
testb
and
lret
pop
or
or
jne
dec
mov
int3
shl
shlb
cmpsl
sbb
dec
add
xlat
inc
sub
pop
enter
int3
mov
add
rcl
test
pop
jne
inc
inc
jmp
xchg
sub
ret
inc
inc
lea
or
jecxz
sbb
aaa
or
pop
xor
xchg
ret
shll
ja
jmp
rorl
xchg
push
inc
mov
inc
mov
push
repz
mov
aas
je
minps
sbb
popa
ret
push
pop
sbb
jbe
outsb
inc
inc
add
add
in
ficoml
xor
push
data16
jno
push
adc
pop
sti
pop
ret
call
and
sub
adcl
ffree
test
jle
sbb
add
fpatan
dec
jnp
aam
sbb
jmp
pop
inc
inc
cmp
pop
mov
sbb
loop
movsl
cmp
pop
xchg
aas
daa
ret
xchg
outsb
cmp
jae
inc
inc
or
jne
push
ja
inc
xor
clc
cli
push
pop
add
movsb
das
xchg
imul
adc
imul
adc
push
push
shll
lea
or
daa
pop
or
cld
dec
mov
mov
jmp
enter
in
jne
movsl
test
pop
pusha
mov
je
inc
cmp
add
movl
push
into
stos
sti
jmp
arpl
push
xchg
mov
push
cmp
insl
mov
dec
in
xlat
or
push
xchg
cmpsb
ret
sbb
test
loopne
loopne
lea
gs
push
outsl
add
andl
inc
push
mov
mov
pop
jmp
and
mov
rcl
lahf
lods
lea
in
in
or
cmp
mov
jmp
add
push
clc
jl
pusha
pop
divl
addr16
mov
pop
mov
push
ret
lea
stc
shll
pusha
or
mov
jnp
in
add
mov
mov
push
mov
adc
jle
mov
mov
test
xor
mov
xor
stos
push
and
insb
adc
das
loopne
fcomi
cs
or
shll
jae
cs
mov
mov
inc
add
inc
cmp
jl
mov
pop
and
cmpl
lea
jne
fildll
adc
push
das
enter
jmp
insb
lds
ret
dec
neg
sbb
xchg
cmp
pop
push
jo
and
sbb
in
orb
or
mov
jns
jne
or
add
addb
jl
jle
ss
pop
test
outsl
sbb
pusha
xor
mov
mov
cmc
jns
int
jnp
sub
sbb
sbb
adc
adc
or
pop
pop
lea
or
xor
inc
adc
insl
insb
insb
add
xor
fwait
popf
mov
adc
data16
insb
inc
mov
or
push
jb
inc
es
push
pop
adc
subl
add
imul
adc
inc
push
xlat
test
sub
popa
xchg
jo
ret
nop
mov
cs
mov
mov
mov
pop
aad
ffree
mov
testl
or
add
lds
mov
add
jle
adc
push
push
inc
in
add
sbb
push
mov
cmpsb
or
mov
sub
mov
pop
mov
dec
test
jl
insl
xchg
jae
adc
sub
call
mov
popl
pusha
jmp
jno
ljmp
push
or
push
test
sbb
pop
jecxz
add
or
dec
push
or
lods
imul
ret
int3
push
inc
xor
pop
loopne
sbb
inc
xor
mov
or
fmuls
in
adcb
cwtl
ss
inc
adc
and
jnp
shll
mov
call
inc
push
push
lea
test
pop
pop
inc
or
call
cmp
push
mov
mov
sbb
push
or
add
ss
fimuls
mov
push
or
or
sbb
sbb
jmp
mov
jmp
pop
inc
mov
xlat
aas
pop
push
xchg
mov
outsl
push
mov
push
add
push
and
adcl
insl
jge
mov
mov
pusha
push
sbb
out
ss
xchg
pandn
adc
into
sub
xor
mov
push
pop
call
test
icebp
jb
shl
cmp
push
es
insb
xchg
call
jo
adc
test
jne
test
or
sti
test
xchg
jmp
stos
adc
push
xor
pop
mov
push
add
sbb
outsl
mov
popf
mov
sbb
clc
or
andl
add
clc
inc
call
cmp
dec
adc
or
sbb
lods
jge
jmp
sbb
adc
and
mov
pop
inc
sub
test
adc
fcmove
push
hlt
movsl
jmp
sbbb
nop
test
orl
fmul
and
lret
subl
test
xor
jne
push
push
aaa
imul
mov
add
in
outsb
xchg
sub
test
add
mov
xchg
sbb
scas
pusha
call
mov
cmp
mov
outsl
int3
jle
fcmovnbe
cmp
mov
mov
sbb
filds
cltd
outsl
push
movzwl
pop
or
mov
cmp
bound
sbb
jecxz
stos
mov
xchg
cmpsl
cwtl
pop
add
sub
jmp
mov
fmull
push
cld
push
ss
fistps
jo
sbb
inc
mov
mov
jnp
cmp
mov
push
andl
fnstsw
call
pop
jbe
addl
out
mov
mov
or
call
mov
xchg
and
cmp
out
out
push
dec
fnsave
lret
add
lea
ljmp
je
mov
mov
add
xchg
mov
jmp
push
outsb
std
in
inc
adc
inc
inc
cmpb
aam
add
sbb
shll
adc
cmpsl
lods
lods
push
mov
fisttpll
jo
mov
shll
rcl
jns
jno
gs
aas
jge
inc
cmp
cmp
outsl
cmp
pop
dec
push
jmp
or
add
dec
stos
add
push
jo
inc
xchg
xchg
jp
in
jb,pn
add
jmp
adc
pop
repz
inc
sub
fstpt
adc
jmp
pop
cmpsb
xchg
cld
mov
push
mov
into
mov
icebp
or
inc
pop
push
mov
pop
inc
add
sbbb
lock
jno
shrb
lods
in
pop
xchg
sub
out
lea
clc
pop
arpl
cwtl
adc
pop
xor
stos
mov
in
decl
pop
sub
movb
lea
repz
ja
frstor
xchg
lea
mov
shrl
fucompp
add
stos
inc
inc
mov
xor
rcrb
scas
popa
rcrl
lock
cli
mov
mov
xchg
fnstenv
and
sbb
pop
leave
enter
dec
add
aad
pop
daa
jb
mov
lea
mov
test
push
add
mov
xchg
add
adc
push
mov
adc
pop
ret
fbld
add
arpl
sbb
mov
bnd
enter
mov
sbb
push
push
and
and
dec
and
mov
icebp
adc
inc
std
pop
ret
pop
add
mov
dec
cmp
mov
mov
adc
or
sbb
imul
pop
push
imul
insl
mov
aaa
pop
cld
mov
movsb
and
ljmp
test
pop
data16
inc
lret
cmp
jne
mov
mov
jle
lock
out
ss
leave
test
call
test
je
jb
ret
sbb
add
int
xchg
xchg
mov
pop
jmp
add
jmp
std
jmp
cld
fwait
mov
jmp
or
sbb
inc
loop
mov
out
jmp
mov
fldenv
or
pop
outsb
imul
test
daa
test
insb
jecxz
sbb
cmp
xchg
lods
lock
or
and
js
aad
mov
jl
loopne
and
add
jo
ret
push
jne
lret
xor
hlt
sbb
jb
pop
xchg
jbe
clc
xorl
add
jb
mov
xor
add
inc
js
dec
addl
xchg
inc
cmp
dec
mov
nop
inc
js
mov
and
inc
xchg
dec
mov
lds
rol
std
pop
rcll
fs
jle
jmp
aad
xchg
mov
lret
test
jbe
clc
fidivl
jecxz
cmpb
mov
and
sti
sbb
movsl
jmp
inc
sbb
mov
lret
mov
loopne
enter
mov
sahf
insl
cwtl
nop
pop
sbb
adc
jnp
incb
and
mov
mov
sub
inc
add
imul
mov
int3
sbb
lea
and
dec
sahf
add
inc
xlat
jne
stc
aas
mov
jg
insb
pop
dec
shll
inc
cmp
shll
mov
mov
call
dec
shll
lock
hlt
clc
pop
and
cld
jge
push
popa
sub
push
or
sbb
add
mov
mov
popf
or
and
mov
or
mov
je
addr16
cld
jg
insb
jnp
and
std
jecxz
ja
and
rcrl
rorb
stc
scas
cmp
sub
sub
or
imul
add
outsl
add
stc
mov
mov
pop
xchg
mov
add
cmpb
daa
and
xchg
sub
scas
inc
jmp
pushaw
pop
test
aam
scas
imul
imul
xchg
sbb
sbb
adc
adc
or
lcall
add
jmp
and
add
pop
adc
mov
and
xchg
xchg
adcl
xor
pop
or
aad
add
shrb
loopne
fidivs
ljmp
push
lods
inc
jg
cld
daa
mov
add
push
jne
push
or
and
jp
pop
or
jmp
push
add
out
fildl
setl
jmp
mov
xchg
sbb
jne
pop
test
xchg
and
mov
push
nop
and
jae
mov
push
sub
push
incb
lods
aad
test
pop
push
or
and
jb
sarb
sbb
sub
add
das
mov
adc
jno
pop
jp
cld
push
outsb
loop
loopne
out
vmwrite
imul
jge
sbb
inc
cltd
jge
dec
mov
or
test
or
jne
rcrl
outsl
mov
or
iret
jbe
ret
dec
adc
add
mov
movsb
dec
xchg
incl
call
sbb
sub
out
lea
xlat
and
decb
fadds
and
jmp
shl
cmp
pusha
cs
adc
xchg
sbb
jl
mov
add
add
or
sar
insl
insl
imul
aas
jnp
pop
das
mov
rcll
bound
mov
pop
cmp
cmpsb
jbe
fistpl
xchg
repz
sti
inc
cmp
fcmovnb
cli
jbe
cli
mov
push
and
add
ljmp
push
adc
mov
shlb
xchg
dec
push
xchg
in
fstpt
add
loop
inc
lods
adc
cmp
push
sbb
lea
lods
mov
mov
push
add
or
add
movsl
jbe
inc
jg
paddd
mov
jae
scas
fs
push
mov
jmp
or
or
lea
sbb
sub
lea
sbb
loopne
and
test
ret
cmp
mov
sub
lret
cli
dec
mov
ljmp
mov
test
shl
add
imul
or
andb
xlat
fadds
sbb
push
or
outsb
idivb
cmp
andl
call
or
jns
adc
shlb
dec
jne
sub
jo
pop
sub
mov
adc
adc
popa
xchg
add
xchg
mov
enter
adc
push
lea
xchg
jmp
push
test
cmp
into
out
jmp
xchg
mov
lods
mov
out
xchg
mov
adc
sub
inc
xchg
dec
pop
jbe
pop
push
xor
pop
out
push
push
sub
out
sub
mov
jmp
and
pop
lret
xor
shr
push
or
loopne
pop
dec
fdivrs
jae
pop
std
in
ret
loope
and
and
or
jne
clc
adc
out
jbe
cmp
jne
mov
cmp
es
add
pop
and
jbe
loope
push
jnp
xor
adc
jmp
jae
push
jns
or
fiaddl
jnp
add
scas
test
orl
orl
mov
adc
dec
xchg
mov
jbe
mov
mov
mov
jo
push
fistl
sbb
fisttpll
push
inc
or
mov
jne
xor
add
xchg
bswap
lcall
and
or
je
mov
add
ja
mov
into
jne
pushw
fs
test
jne
jbe
jl
shl
inc
jmp
mov
push
stc
inc
or
jg
aam
xorl
cwtl
aas
jle
pop
cmp
fsubrl
fwait
or
and
insl
and
adc
ja
pop
pushf
shl
in
and
mov
decb
jne
ss
mov
or
xor
sub
sbb
sbb
mov
sbbb
insb
jb
sarb
add
scas
jp
nop
test
test
jl
inc
or
and
xchg
outsb
xchg
gs
decb
jge
les
jae
cltd
or
mov
bound
mov
jbe
cmp
jmp
sub
dec
add
jnp
jmp
divb
out
or
push
sub
or
mov
jle
add
adc
cld
mov
mov
and
jne
movsb
scas
aad
pop
mov
add
adc
in
inc
add
add
subb
mov
lcall
xor
push
inc
cmp
cwtl
jb
xchg
push
xchg
push
xor
jl
cmp
je
pushf
shlb
mov
les
mov
stos
xor
mov
inc
adc
adc
push
sbb
sbb
sbb
jbe
fs
jl
aam
mov
jle
incl
orl
or
enter
fcmovnb
lea
dec
loopne
ret
aaa
imul
pop
sti
xor
fiaddl
add
dec
push
lahf
in
lods
sti
test
out
jns
mov
addb
mov
sbb
inc
lea
orb
ja
repnz
out
lea
cld
lock
push
out
jmp
dec
add
sub
adc
push
sub
stos
cs
dec
or
clc
mov
fsubs
mov
xchg
lods
or
inc
mov
jecxz
mov
test
mov
sub
mov
mov
push
jle
fsubrs
cmpsl
inc
inc
jno
sahf
loop
test
scas
test
inc
movsb
mov
sub
popa
inc
je
adc
sti
mov
addr16
add
adc
or
dec
mov
call
cmp
ret
push
loopne
add
add
dec
ror
out
call
push
xchg
jp
push
mov
stos
mov
push
test
adc
jne
jmp
inc
mov
pop
push
inc
inc
dec
je
adc
pop
aaa
sti
pop
jnp
jmp
sbb
je
and
das
aad
pop
lds
dec
push
pop
je
cmp
inc
adc
out
insb
sbb
cli
sub
and
notb
daa
lret
jb
push
add
sub
or
ret
jne
cmp
sbb
testb
push
add
rclb
insb
idivl
mov
pop
jne
mov
test
pop
xchg
dec
pop
adc
pop
lock
jo
inc
push
push
or
xor
popa
cmp
sbb
in
and
inc
sbb
movsl
and
cmpsl
jo
js
xor
cmp
test
pop
pop
push
arpl
call
push
loope
data16
sbb
push
sti
mov
lods
sub
roll
inc
sbb
sbb
mov
and
loopne
inc
push
or
and
js
insl
test
mov
cld
add
mov
mov
adc
jmp
lock
imulb
mov
fdivl
push
dec
jmp
mov
fsubl
push
hlt
dec
in
mov
lret
sahf
sbb
shlb
xor
inc
or
sbb
mov
fisttpll
xor
rorb
jmp
or
add
add
das
fmull
fnstsw
je
push
fs
data16
cmp
mov
add
jmp
mov
push
xor
sub
xchg
aad
mov
mov
jp
push
int
test
push
ljmp
adc
es
dec
mov
repz
lret
sub
dec
and
pusha
sbb
inc
jnp
mov
lods
jbe
sbb
mov
push
push
pop
push
push
movsl
mov
add
sbb
daa
sahf
xchg
push
mov
mov
pop
sub
add
flds
xchg
pop
xchg
iret
xchg
pop
sbb
inc
ss
sbb
loopne
insb
adc
push
je
gs
push
or
push
inc
cmp
ror
sub
or
testb
loopne
pop
cmp
push
push
clc
xchg
xchg
mov
add
int3
jb
ret
pop
mov
add
lahf
add
and
int3
add
sti
popf
je
sbb
or
sub
sub
xchg
scas
shll
add
add
ja
mov
in
test
and
push
and
in
mov
mov
cmp
mov
nop
adcb
xlat
add
add
pop
mov
dec
xor
pop
or
push
aas
add
shll
or
mov
scas
and
mov
inc
shll
insb
cmpb
loopne
nop
pop
xlat
cmp
loopne
or
or
add
jns
adc
test
loopne
push
dec
shll
lods
mov
add
shll
xlat
mov
pop
add
or
add
mov
adc
lret
loop
out
sti
jb
sub
add
jae
sub
movsl
fadd
or
loope
into
push
aad
out
cmp
inc
inc
shrb
inc
inc
inc
inc
cld
clc
hlt
in
inc
inc
inc
in
call
inc
inc
add
fcomp
add
inc
add
add
clc
fldl
xorb
je
insl
and
jb
jb
xchg
test
adc
push
push
dec
dec
dec
pop
in
pop
adc
add
dec
inc
add
gs
dec
dec
inc
adc
push
xor
cmp
sub
jg
popa
bound
and
imul
push
fldenv
aaa
daa
aaa
outsb
outsl
je
add
insl
pop
ljmp
arpl
data16
outsl
ja
jb
insl
sarb
push
outsl
outsb
aaa
ss
inc
repnz
je
xor
sub
jb
jne
xor
mov
and
insb
sub
in
mov
ss
sub
pop
das
pop
push
fdivrl
daa
jnp
pop
xor
imull
shlb
outsl
pcmpgtb
arpl
loope
fisubl
and
gs
adcl
insl
jne
lods
je
mov
arpl
pop
and
lcall
and
add
imulb
popa
insl
and
ss
or
das
xor
dec
adc
sub
xor
loope
adc
sub
popa
jb
jne
jae
fldt
shrw
subb
mov
je
adc
dec
lock
or
push
imul
inc
sub
and
dec
imul
ret
popa
out
or
adc
fstps
addr16
ret
add
loopne
sub
insb
ja
sbb
gs
popa
xor
jbe
push
scas
mov
fdivs
adc
push
xchg
fs
call
popa
addr16
outsl
js
lea
xor
cs
leave
xchg
sbb
aas
test
add
or
xchg
add
adc
add
jae
jle
cli
push
xor
add
gs
and
pop
add
add
xor
rorb
sbb
xor
lea
mov
and
xor
and
xchg
xchg
add
pop
js
or
repnz
pop
fs
and
sbb
add
jg
add
add
sahf
cmp
in
or
mov
dec
jl
push
sbb
sbb
lock
js
xchg
daa
dec
dec
jns
jp
cld
and
repnz
call
cmpsb
loopne
mov
cmpsl
adc
sub
pop
pop
add
add
das
movsb
add
in
mov
and
cmp
jle
lahf
loopne
inc
jle
cld
test
mov
into
push
popa
push
cmp
and
pop
out
in
iret
mov
in
call
push
repnz
push
add
pop
pop
fisubrl
xor
xchg
lock
fcomp
loopne
cmp
jle
add
fs
mov
sub
add
es
or
aas
adc
sbbb
call
add
or
adcl
adc
inc
insb
decl
sub
sti
dec
outsl
fs
gs
popa
outsb
or
add
popa
sub
aas
sti
jo
outsb
outsw
adc
insl
insl
pop
dec
imul
push
gs
aaa
or
mov
push
adc
jbe
rcl
or
push
gs
lret
decb
jne
jb
outsb
and
outsb
push
insl
cmp
jo
inc
inc
imul
add
gs
popa
insl
imul
inc
fnsave
jb
addr16
std
xor
fs
bound
outsl
dec
push
imul
cmp
pop
pop
sub
pop
ret
inc
push
pop
push
mov
jne
adc
mov
adc
gs
loope
rclb
pop
insb
jae
addb
push
popa
insb
jne
or
push
test
inc
add
mov
test
out
inc
xor
inc
add
or
push
mov
lock
out
sbb
push
je
dec
ja
inc
ja
pop
lock
xor
push
jbe
or
jae
xor
arpl
dec
push
jbe
rcll
in
cmp
or
dec
inc
dec
or
rcll
xor
pop
out
fs
dec
shll
mov
jbe
sub
mov
test
or
btr
imul
fwait
add
inc
inc
xchg
adc
addb
sub
push
mov
imul
mov
mov
sbbb
int
push
int3
mov
mov
sbb
gs
int
insb
fwait
aam
cwtl
add
insl
mov
cmp
add
fcmovu
int
xor
je
push
imul
packssdw
inc
jne
loope
push
ja
mov
sbb
jne
cmp
dec
insl
addr16
syscall
lock
add
mov
add
ss
adc
lock
push
fldl
cwtl
ds
add
insb
cvtps2pd
add
add
dec
add
pop
mov
push
movb
loopne
inc
add
in
mov
dec
dec
add
mov
sbb
add
sarb
lock
add
cmp
push
add
add
imul
cmp
fiaddl
jns
movsb
inc
aas
add
mov
cmp
xchg
rolb
add
jbe
outsl
lcall
add
sti
jmp
outsb
push
cld
add
inc
lock
add
mov
jbe
add
xor
mov
sub
inc
stos
cmp
or
mov
jmp
dec
rolb
lods
ljmp
faddl
xchg
test
push
add
add
lock
cmp
add
add
mov
clc
inc
add
je
adcb
inc
addb
push
or
add
push
or
dec
mov
mov
mov
mov
add
mov
mov
cmpsl
or
add
xchg
jl
add
inc
lock
lock
into
lods
dec
stos
xor
push
xchg
mov
inc
outsb
jne
cltd
add
and
aaa
mov
xchg
or
into
popa
lock
arpl
jnp
outsb
jnp
add
sub
lock
mov
ss
test
mov
pushf
imul
lock
pop
inc
push
or
pop
mov
xchg
ret
add
mov
xchg
fistpll
push
add
stos
outsb
mov
mov
jo
dec
pop
xor
lods
mov
mov
cmp
lock
ret
lock
xchg
jp
cwtl
add
lock
mov
mov
cmp
outsl
lock
add
add
xor
cmp
fnsave
fildl
add
popf
mov
jg
loope
sub
int
sub
or
xor
xor
or
pop
push
adc
pop
or
or
push
push
push
ljmp
rdmsr
adc
or
or
dec
inc
jecxz
xor
aas
push
adc
xor
push
and
pop
adc
and
push
xor
adc
add
inc
testb
pop
sbb
adc
pop
inc
imul
es
call
daa
cmovb
or
adc
adc
sub
mov
sbb
or
adc
and
and
mov
pop
adc
fisttpl
je,pn
or
inc
cwtl
add
push
outsl
mov
adc
or
push
movups
jl
cmp
ret
sbb
mov
add
sub
sbb
add
dec
push
add
or
pop
mov
test
push
sbb
push
or
jecxz
xor
pushl
mov
or
push
push
sbb
adc
or
fisubrs
mov
or
inc
cmpsb
lock
add
adc
fidivl
sbb
or
int3
adc
or
daa
cmp
sbb
sbb
pop
mov
mov
sbb
pop
push
xor
ficompl
pop
daa
ret
adc
rcrl
fs
xor
aas
gs
add
movsb
or
fmuls
add
adc
lock
add
push
inc
repz
add
dec
loopne
push
mov
or
or
out
test
adc
jnp
ljmp
mov
push
inc
subl
add
push
das
insb
movsb
push
repnz
add
enter
outsb
adc
or
sbb
cs
je
fmull
jmp
and
xorb
or
or
add
or
inc
imul
push
cmp
shrb
jae
arpl
or
add
mov
adc
js
test
cld
outsl
dec
inc
sbb
movsl
add
mov
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
