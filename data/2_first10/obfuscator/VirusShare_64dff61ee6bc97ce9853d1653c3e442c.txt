push
mov
push
mov
push
mov
mov
mov
movl
movl
cmp
movl
jne
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
mov
cltd
mov
mov
out
xchg
dec
ficompl
jle
jg
jle
out
mov
hlt
mov
mov
cld
cmc
shlb
mov
xchg
ret
loop
dec
jmp
lcall
div
shlb
sub
lret
jmp
sub
ljmp
daa
ss
and
leave
ss
ss
add
add
fidivs
and
daa
cmp
xor
adc
fisttpl
adc
or
adc
addr16
aas
add
cmp
or
sub
insl
adc
xor
push
jle
jbe
adc
jb
jne
cmp
adc
jl
pop
dec
inc
sbb
push
dec
jl
inc
push
dec
inc
adc
push
mov
dec
imul
jb
cmpsl
dec
scas
lods
mov
movsl
ja
mov
jns
jne
push
mov
dec
mov
dec
mov
dec
mov
push
stos
mov
xchg
mov
pop
mov
mov
mov
and
jmp
lods
testb
idivl
pushf
loopne
addb
sti
mov
stc
out
sahf
adcl
lret
repnz
in
shl
jecxz
rcrl
cmc
fistpl
and
out
ret
ljmp
repz
xor
ss
iret
aaa
into
cmp
rol
xor
and
daa
shrl
xlat
pop
int3
cmp
sbb
aaa
and
sub
xor
aas
xor
xor
sbb
arpl
and
add
cmp
arpl
sbb
xor
pusha
jp
data16
bound
bound
pop
inc
dec
or
jo
dec
gs
pop
push
dec
je
arpl
jle
gs
dec
test
dec
stos
pop
jge
dec
test
mov
push
inc
mov
mov
cmpl
mov
mov
push
push
jg
jle
jg
jle
pop
mov
inc
pop
mov
test
mov
test
stos
stos
mov
out
mov
mov
mov
movsl
in
in
lahf
xchg
mov
nop
mov
xchg
in
push
xchg
mov
xacquire
out
lock
in
in
icebp
mov
out
loopne
testl
popf
in
xchg
repz
out
lret
leave
repz
loopne
xlat
and
daa
jmp
lret
call
cmp
ss
xor
hlt
iret
and
and
cmp
fsubl
and
or
das
aas
pop
xor
bound
adc
bound
add
cmp
or
cmp
imul
push
pop
insl
or
add
sbb
insl
insl
arpl
push
jae
sbb
imul
pop
jp
mov
push
cmpsl
inc
mov
dec
outsl
push
pop
jbe
dec
inc
mov
dec
mov
mov
mov
mov
mov
addb
mov
mov
xchg
xorl
mov
pushf
and
in
loop
mov
cmc
ret
xchg
mov
jmp
mov
xchg
cli
negl
loopne
mov
ljmp
pushf
mov
cld
std
sti
fwait
loopne
leave
les
lahf
and
cmc
cld
clc
es
in
fisubrl
rcr
sub
and
fcmovu
call
aas
leave
call
ss
xor
sub
and
aas
cmp
daa
leave
filds
adc
shrb
aam
xor
push
fistpl
adc
xor
popa
push
xor
add
pop
sbb
push
adc
mov
push
xchg
jmp
xchg
jge,pt
jle
jg
jle
jns
sbb
or
ja
insl
je
adc
sbb
dec
dec
movq
gs
jae
insl
ja
outsl
adc
pop
jbe
inc
data16
mov
push
push
jno
push
inc
jnp
pop
stos
pop
pop
mov
push
mov
cmpsb
inc
test
mov
mov
mov
pop
pushf
xchg
mov
mov
xchg
mov
mov
cmpsl
mov
mov
negb
cmc
lcall
repz
xchg
sti
push
imul
mul
cmc
testb
clc
pushf
pop
out
in
mov
test
in
sar
into
out
lcall
fst
daa
imull
cmc
and
leave
out
jmp
lret
icebp
aaa
xor
aad
ss
sub
rcl
aas
add
fcomp
add
shll
and
lret
push
cmp
or
aam
aas
aas
fisubrs
fldenv
bound
adc
cmp
and
outsb
xor
push
xor
sbb
cmp
jne
insb
adc
add
jns
or
push
dec
push
or
jnp
push
dec
insl
jno
jno
jnp
stos
js
jp
dec
inc
movsl
dec
lods
pop
inc
push
pop
inc
push
push
push
mov
jnp
mov
push
test
dec
mov
mov
mov
test
pop
dec
xchg
dec
cmpsl
push
cmpsb
mov
mov
pop
mov
xchg
xchg
mov
test
out
mov
cwtl
in
repnz
mov
xchg
xchg
mov
mov
lahf
loopne
cld
in
ret
xchg
cltd
call
in
repz
xlat
in
lret
lret
out
out
std
repz
repz
aam
and
out
mov
mov
xchg
mov
orb
inc
jle
aaa
jg
jle
and
sub
ss
sub
fldt
faddl
aam
fdivrp
sub
faddl
or
daa
add
aaa
or
add
ss
push
adc
arpl
aas
add
cmp
or
add
insl
sub
adc
punpcklbw
jnp
gs
insl
sbb
jno
adc
dec
adc
jo
imul
jns
pop
jne
push
inc
dec
mov
mov
inc
mov
jne
push
jle
mov
dec
xchg
movsl
pop
xchg
mov
dec
andl
xchg
xchg
push
scas
mov
pop
pop
pop
lcall
nop
mov
mov
mov
xchg
in
mov
jmp
mov
and
mov
hlt
add
loop
ret
loope
or
leave
mov
mov
shl
repnz
in
xchg
in
aam
stc
loop
repnz
and
sub
xor
sub
int
imull
cmc
das
xor
das
int3
fsubrs
stc
aas
shrl
cli
and
enter
add
enter
shrb
add
push
daa
sub
add
sbb
adc
xor
add
sub
insb
sub
jb
xor
inc
push
bound
jg
dec
pusha
add
sbb
cmova
jo
push
push
jl
sbb
jne
jg
push
jg
inc
push
outsb
jnp
inc
cmpsl
push
dec
jae
pop
mov
movsl
dec
mov
mov
pop
mov
mov
movsl
mov
inc
xchg
push
mov
sub
mov
push
and
push
mov
add
mov
mov
orl
xor
lea
orl
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
or
mov
xor
addl
push
subl
lea
imul
cmp
movl
mov
movl
je
imul
andl
xor
mov
mov
lea
movl
mov
jmp
imul
mov
adc
mov
mov
mov
sub
mov
xor
mov
movl
not
movl
mov
or
movl
mov
andl
addl
cmp
movl
jne
cmpl
jne
cmp
jne
mov
imul
mov
mov
mov
mov
mov
mov
add
xor
lea
xor
cmp
jne
mov
xor
lea
xor
mov
cmp
jne
mov
xor
lea
xor
mov
cmp
jne
pop
pop
pop
leave
ret
vpmacsdql
dec
push
xchg
mov
sbb
jg
jle
mov
lcall
sbbb
xchg
test
cmpsl
mov
jmp
jmp
lea
stc
fwait
cwtl
stc
loopne
xchg
xchg
mov
xorb
xchg
lock
xchg
lock
out
in
mov
stc
mov
lock
out
xchg
fsubr
iret
cltd
int
lahf
clc
in
loope
out
and
test
leave
into
and
ss
hlt
fdivrs
das
xlat
fnsave
xlat
sub
fimuls
aam
add
xor
fcoml
cmp
pop
push
pop
or
adc
push
pop
ds
aas
es
cmp
push
or
add
jne
sbb
cmp
inc
jbe
sbb
pusha
arpl
push
jg
push
push
sbb
dec
pop
jno
outsb
push
adc
inc
adc
push
dec
inc
sbb
push
pop
addr16
jle
mov
dec
pop
outsb
mov
insb
insb
dec
movsb
mov
mov
mov
inc
pop
inc
push
mov
push
mov
mov
movsl
push
mov
scas
mov
xchg
mov
mov
mov
mov
jecxz
in
test
jecxz
call
sti
lcall
repz
lds
xchg
mov
mov
mov
icebp
xchg
jmp
cmc
out
xchg
test
jmp
mov
cld
rcl
nop
stc
enter
out
into
lahf
clc
loopne
and
pushf
jecxz
test
iret
lret
sub
iret
sar
cmp
cmp
add
cld
cld
shll
aas
sub
add
push
sarl
pop
sysret
int
ss
cmp
or
cmp
add
ds
xor
add
pusha
femms
push
push
pop
pop
jle
outsb
cmp
js
inc
pop
sbb
sbb
jle
mov
xchg
or
lock
popl
mov
fnsave
jg
jle
sbb
dec
adc
add
inc
gs
pop
dec
jo
inc
jno
je
jle
addr16
inc
lods
jns
dec
mov
push
inc
push
push
jb
mov
mov
insl
dec
pop
stos
push
pop
mov
xchg
jge
sbbb
mov
xchg
mov
mov
cwtl
mov
mov
mov
jecxz
out
in
in
xchg
test
mov
xchg
cmc
ret
mov
loopne
loop
jmp
xchg
loope
hlt
mov
mov
and
out
out
sti
test
test
leave
pushf
mov
in
in
loope
ljmp
in
sti
xlat
idiv
cltd
int
rcl
fucomip
cld
mov
jmp
iret
shl
in
xor
xor
idivl
cmc
cmp
shll
xlat
aas
lret
and
sub
push
cmp
sub
add
sub
and
sub
add
daa
add
pusha
sub
sub
sub
push
jae
jae
aas
jne
inc
inc
cmp
jle
sbb
inc
popa
jae
movhps
push
popa
dec
push
push
push
jne
push
jnp
push
mov
lods
jg
jle
inc
push
outsb
movsb
push
push
dec
jne
mov
mov
inc
push
jle
mov
inc
pop
push
mov
mov
pop
scas
stos
push
adcl
cmpsb
mov
mov
mov
mov
in
mov
in
mov
stc
test
std
lahf
xchg
out
mov
mov
pushf
pushf
mov
cli
in
lock
stc
jecxz
mov
jmp
call
lret
rcl
jmp
lock
cld
and
and
sub
ffree
int
es
fisubrs
std
cmp
aam
mov
lcall
jmp
popf
mov
pop
push
sub
jle
push
jg
jle
xor
push
or
cmp
enter
xor
xor
add
and
bound
and
adc
bound
aaa
imul
popa
aas
fs
sbb
pop
pop
jae
push
cmp
sbb
pop
jnp
or
inc
dec
inc
or
dec
jae
or
je
dec
jnp
push
imul
pop
jbe
cmpsl
pop
pop
stos
pop
addr16
test
mov
push
scas
movsb
insl
stos
stos
cmpsl
lods
mov
push
push
lods
mov
push
mov
mov
pop
dec
mov
test
push
pop
mov
mov
push
loop
mov
mov
xchg
mov
xchg
mov
stc
lock
rcrl
lea
popf
mov
xchg
rcrl
out
in
rol
clc
mov
call
shl
xchg
not
out
into
sar
sahf
ror
shlb
and
les
test
sub
xor
ds
cmp
aad
and
or
fisttps
add
shrl
rcll
add
sbb
aad
adc
push
das
cmp
sbb
xor
sub
or
imul
fs
pusha
aaa
or
jle
push
pop
ja
cmovs
sbb
dec
dec
ja
or
push
jnp
mov
inc
jp
push
movsb
push
stos
test
pop
lods
pop
stos
inc
mov
test
push
mov
pop
jns
mov
mov
jns
inc
movsb
mov
addb
mov
xchg
xchg
mov
pop
sahf
loope
lahf
xchg
lcall
jmp
cltd
mov
out
jmp
cltd
repnz
lahf
ljmp
negl
xchg
mov
cli
jmp
xchg
xchg
mov
fcmovu
mov
loop
mov
ja
jle
push
jg
jle
mov
xchg
ret
xchg
cmc
call
test
shl
out
jmp
ljmp
xchg
fcomp
fdecstp
aad
out
lret
and
fucomp
es
xor
and
icebp
xor
cmp
std
xor
xor
rcr
cmp
cmp
or
push
pop
push
shrb
add
push
fcomp
push
or
aam
fnsave
or
arpl
punpcklbw
pop
arpl
bndldx
pop
or
add
jp
bound
inc
add
jl
popa
push
pusha
outsb
bound
inc
push
inc
sbb
adc
sbb
jnp
push
dec
jno
addr16
pop
pusha
jae
dec
mov
pop
mov
inc
push
inc
push
mov
lods
inc
jp
pop
mov
pop
push
test
mov
stos
mov
mov
cmpsb
xchg
mov
pop
mov
popf
xchg
xchg
loopne
mov
cwtl
mov
in
xchg
xchg
mov
xchg
lea
std
shl
nop
xor
mov
cwtl
out
xchg
repnz
nop
cmc
mov
in
negb
clc
cld
lret
fwait
mov
mul
out
mov
call
clc
cld
cli
cld
xchg
loope
repz
cli
fadd
iret
iret
jmp
sub
repnz
shlb
xor
fldcw
sub
push
add
fld
cmp
add
or
cmp
cmp
or
aam
rcrb
sbb
and
xor
add
sbb
xor
sbb
aas
cmp
push
jnp
outsl
cmp
sbb
insl
jbe
sbb
addr16
inc
dec
or
bound
popa
push
dec
pop
insl
push
dec
jl
dec
outsl
sbb
addr16
jle
push
inc
push
inc
dec
pop
dec
mov
inc
push
insl
dec
mov
pop
jno
inc
pop
push
jnp
mov
inc
pop
pop
mov
inc
xchg
cltd
xchg
cmp
jp
repz
add
jle
popf
jle
jle
inc
mov
dec
mov
test
xchg
dec
push
stos
mov
mov
scas
lcall
popf
mov
lahf
mov
mov
cld
repz
mov
in
div
popf
mov
icebp
jmp
xchg
xchg
negl
jmp
in
lahf
addb
mov
xchg
leave
push
mov
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
movl
subl
movl
add
mov
adcl
push
movzwl
xor
xor
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jb
add
mov
xorl
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
xorl
push
andl
push
subl
test
je
mov
mov
and
imul
or
mov
inc
add
mov
mov
xorl
xchg
xorl
sub
movzwl
sbb
mov
push
call
mov
add
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
or
mov
mov
xor
subl
add
movl
cmp
movl
jne
xor
or
xor
mov
xor
sbbl
add
movl
jmp
xchg
mov
cwtl
mov
mov
mov
call
mov
jle
jle
jle
adc
add
pop
insl
imul
jns
arpl
pusha
adc
inc
dec
add
pop
push
imul
movl
pushl
push
call
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
movl
cmp
movl
je
or
mov
xorl
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
add
mov
mov
sbbl
mov
xorl
add
addl
xor
mov
mov
mov
movl
cmp
movl
jbe
and
mov
mov
add
mov
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
add
mov
mov
test
je
movl
mov
mov
inc
inc
sub
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
xor
xor
lea
mov
add
imul
cmp
je
mov
mov
mov
xor
mov
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
xor
add
imul
cmp
jne
mov
mov
jmp
mov
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
mov
mov
inc
inc
sub
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
xchg
test
out
test
mov
mov
push
jg
jle
mov
cli
rcrb
std
fucomip
cli
icebp
icebp
and
fsubrl
iret
call
xor
xor
into
sub
fisubrl
sub
ret
ss
xor
fxch
sub
cmp
xor
aad
xor
fisttpl
push
and
sbb
push
cmp
fisttpll
push
das
and
sub
add
pop
pusha
insl
cmp
xor
jae
inc
push
pusha
add
or
jp
js
inc
jb
or
jne
jns
inc
jbe
push
jp
insl
imul
push
addr16
outsl
mov
scas
inc
movsb
ja
inc
cmpsb
mov
pop
mov
push
addb
movsl
orb
dec
adcb
scas
xchg
xchg
lea
pop
pushf
nop
and
mov
cmpsl
mov
cltd
loope
addb
in
mov
clc
lock
lock
cmc
mov
cli
in
lahf
xchg
test
ljmp
aad
testb
fwait
rcrb
aad
ljmp
sar
not
shrb
sub
cmp
das
repz
aas
xor
les
mov
add
add
xor
pop
iret
adc
cmp
fnstenv
adc
add
cmp
cmp
sbb
data16
imul
pop
add
gs
aaa
outsb
add
adc
sbb
jnp
inc
push
imul
inc
push
jne
push
sbb
dec
jne
mov
data16
pop
inc
pop
jns
mov
pop
test
mov
inc
movsl
mov
stos
adcb
dec
mov
mov
pop
test
xchg
mov
test
mov
jecxz
test
mov
jecxz
out
mov
fwait
pop
dec
jle
push
jg
jle
popf
in
stos
loope
mov
test
xchg
fwait
lock
sub
in
repz
loopne
mov
lahf
cld
cld
stc
mov
loop
pushf
lahf
loope
xchg
enter
mov
mov
in
jecxz
icebp
hlt
shl
stc
ficoml
rcr
and
std
call
ror
repnz
lret
lock
es
fbld
cli
xor
aas
and
and
ret
aas
lret
shll
add
sub
add
shll
adc
or
and
adc
or
push
sbb
sub
add
or
cmp
imul
inc
bound
push
or
or
inc
andnps
data16
insl
dec
push
mov
jp
push
dec
movsl
js
pop
test
mov
push
inc
ja
jnp
dec
push
jge
mov
pop
push
mov
pop
mov
push
push
mov
test
mov
pop
mov
mov
xchg
xchg
xchg
in
cmc
xchg
scas
mov
jecxz
in
mov
fwait
loop
xorb
mov
loope
fwait
mov
lds
pushf
into
rcll
jecxz
lret
fsts
icebp
sar
pushf
ret
in
hlt
fcmove
aad
stc
frstor
and
and
out
xor
leave
xor
sub
sub
fldl
cmp
aad
xor
add
or
add
xor
or
pop
cmp
fldt
or
sbb
or
pop
and
push
xor
sub
gs
jb
aaa
adc
cmp
cmp
sbb
jle
inc
dec
or
add
jge
jo
dec
ja
xchg
fwait
test
popf
lods
out
xchg
xchg
jmp
cs
movsl
jp
jle
push
jg
jle
pop
dec
imul
inc
addr16
mov
dec
pop
pop
pop
jb
movsl
pop
inc
test
mov
sbbb
mov
inc
sbbl
mov
test
xchg
lcall
popf
pop
in
mov
stos
lahf
mov
cltd
out
call
mov
jmp
out
xchg
lock
mov
xchg
hlt
loop
mov
notl
rclb
test
in
std
repz
loop
idiv
xchg
sti
xchg
hlt
neg
repnz
in
loop
and
std
out
icebp
shl
fsin
shr
es
leave
xor
and
fdivr
xor
sub
iret
int
sub
add
or
cmp
and
fcomp
fdivl
sbb
cmp
push
xor
ds
and
or
cmp
jb
push
jno
js
adc
adc
aas
inc
inc
adc
dec
bound
sbb
gs
imul
dec
jge
dec
jo
jg
outsb
jne
inc
jge
push
mov
movsl
arpl
pop
dec
lods
pop
imul
insb
mov
cmpsb
stos
scas
mov
mov
jg
push
push
dec
mov
mov
pop
mov
adcb
push
mov
mov
lea
xchg
mov
lcall
test
test
lcall
bnd
lock
add
and
mov
xchg
xchg
icebp
xchg
cmc
cld
xchg
loopne
xchg
xchg
out
pushf
shr
call
in
int
iret
xchg
repz
cltd
in
fdivrp
hlt
sti
lock
std
es
and
daa
xor
xlat
xor
rcl
aad
sub
cmp
into
shll
ror
rcr
sub
or
fisttpl
fisubrs
test
pushf
xor
jmp
jecxz
push
sbb
jle
jg
jle
xor
add
adc
adc
fimuls
sbb
sub
push
or
sbb
jb
jbe
cmp
sub
arpl
jae
adc
adc
adc
jle
jge
inc
pop
jno
push
add
jno
inc
adc
jbe
mov
dec
pusha
push
js
jns
js
imul
inc
dec
outsl
jno
mov
push
js
scas
dec
mov
mov
mov
pop
mov
jl
orb
movsl
mov
test
scas
xchg
xchg
mov
mov
xor
test
nop
jmp
in
mov
in
and
xchg
movsl
out
repz
test
xchg
mov
repnz
out
lret
out
rol
pushf
jmp
nop
int3
clc
icebp
ret
leave
cmc
fwait
and
in
lret
leave
cld
jmp
sub
sub
int3
and
sti
xlat
sub
cmp
xor
fadd
es
xlat
cmp
add
fiadds
or
leave
aaa
sub
or
nopl
pop
sbb
arpl
add
and
pusha
cmp
adc
arpl
push
cmp
pop
pop
or
je
add
ds
add
or
push
dec
inc
dec
adc
jo
inc
insb
jo
gs
pop
jns
jl
ja
jl
dec
jle
pop
pop
cmpsl
inc
test
dec
jge
insl
jo
mov
movsb
cmpsl
stos
push
push
pop
pop
js
xchg
test
pop
pop
adcb
adcl
mov
lods
pop
mov
mov
stos
xorl
xchg
icebp
adcb
in
testb
ret
in
nop
xchg
loop
mov
scas
stc
lahf
mov
in
push
adc
mov
push
mov
movl
mov
or
xor
mov
mov
adc
mov
add
mov
xor
mov
adcl
xor
add
subl
mov
dec
mov
andl
mov
adc
mov
mov
sbb
mov
mov
mov
movzwl
adc
mov
xor
add
pop
leave
ret
push
mov
mov
imul
mov
sub
xor
mov
pop
ret
nop
orb
out
xor
jecxz
jmp
xchg
mul
stos
push
movsb
sub
jle
jg
jle
jmp
repz
popf
std
sti
jmp
jmp
cwtl
ret
nop
xchg
leave
loop
repnz
icebp
div
lcall
jecxz
cli
ret
sub
and
out
std
jmp
leave
cli
imull
cs
fmul
cli
sub
int
mov
lret
lds
int
sub
or
or
rclb
or
fidivl
adc
das
pusha
aas
fdivl
pop
pop
push
push
fsubrl
push
push
and
imul
jp
adc
outsb
jl
sbb
jl
dec
fs
dec
addr16
jp
dec
inc
insb
jg
or
pop
imul
ja
push
cmpsl
insl
pop
sbb
pop
pusha
gs
dec
jge
inc
scas
mov
inc
cmpsb
lods
dec
inc
mov
jae
mov
mov
adcb
push
mov
andl
lods
lods
push
xchg
xchg
xchg
mov
jecxz
mov
in
out
scas
call
lock
cmc
in
sti
lcall
std
mov
xchg
test
stc
out
nop
stc
jmp
mov
cwtl
stc
mov
incb
loopne
fwait
xchg
shr
out
sti
into
rcr
popf
es
xchg
ffreep
sub
aam
into
sub
ljmp
and
shrb
xor
stc
into
xlat
clc
fidivrs
fiaddl
and
and
fildl
fnstenv
ud2
xor
aaa
aam
sbb
or
das
fistl
and
or
cmp
popa
or
push
or
sub
xor
adc
aaa
data16
jne
sbb
add
arpl
jns
inc
inc
insl
sbb
pop
dec
outsl
inc
sbb
insl
jnp
jp
imul
inc
inc
ja
pop
lods
stos
pop
pop
stos
jge
insb
stos
mov
scas
inc
mov
inc
mov
dec
mov
sbbl
mov
push
pop
mov
in
repz
in
xchg
jl
cmpsb
mov
push
jg
jle
dec
dec
dec
mov
mov
push
mov
xchg
dec
mov
test
mov
xchg
jecxz
subl
cltd
mov
cltd
cltd
xchg
cld
xchg
mov
out
fwait
popf
incb
mov
xchg
stc
lahf
add
repnz
xbegin
leave
std
clc
out
ret
xchg
in
in
cwtl
xchg
sar
repnz
fwait
int3
and
shl
fxch
and
enter
fsubr
and
sub
and
lret
fisubrl
rcr
and
sub
xor
pop
sub
or
fisubrs
or
fidivl
adc
fadds
daa
cmp
cmp
cmp
sub
add
add
jbe
or
js
gs
js
pushw
inc
push
jae
push
inc
push
addr16
outsb
jg
adc
mov
inc
jl
inc
movsl
dec
test
imul
push
dec
mov
lods
push
pop
mov
cmpsl
test
stos
mov
mov
mov
mov
mov
in
mov
mov
mov
icebp
mov
cli
notl
sahf
nop
mov
xchg
sti
lcall
xor
loopne
in
lds
jmp
ret
in
into
enter
fcmove
xchg
rclb
repnz
in
aam
repnz
std
std
and
sub
shrb
and
sub
leave
ss
xor
sarb
sub
aaa
cmp
fcmovnu
xor
fisttpl
pop
lret
and
and
add
add
fistl
aam
sub
and
sbb
cmp
add
add
adc
xor
outsb
jo
adc
adc
xchg
xchg
mov
mov
jp
hlt
in
adcb
mov
push
jg
jle
imul
pop
jp
or
data16
adc
adc
jae
sbb
je
jle
popa
sbb
pop
inc
dec
pop
jns
jo
mov
outsb
mov
inc
lods
stos
mov
mov
push
mov
pop
pop
pop
test
subb
test
mov
mov
scas
xchg
mov
mov
mov
in
addl
call
mov
icebp
div
xchg
hlt
in
jmp
ljmp
cli
lcall
call
ljmp
fucomi
cltd
lret
dec
pushf
fadd
repz
cmc
rcr
idiv
pushf
and
and
in
and
sarl
sar
sub
xor
add
sar
aaa
rol
xlat
or
or
or
pop
sub
or
push
shlb
or
adc
xor
add
pmaxub
adc
data16
outsb
or
imul
jns
imul
sbb
add
sbb
push
or
dec
jle
push
add
outsl
nopl
outsl
inc
jno
inc
mov
pop
mov
addr16
jle
dec
dec
inc
push
inc
push
jae
mov
jns
pop
inc
mov
mov
dec
orb
mov
mov
pop
xchg
movsb
pop
stos
mov
mov
popf
mov
call
out
mov
mov
lock
sahf
lea
mov
in
out
xchg
in
xchg
xchg
cwtl
lea
jmp
loop
test
cmc
cwtl
ror
loope
in
repz
loope
les
leave
fsubp
repz
popf
inc
cli
jmp
xor
jmp
ret
repz
rclb
fwait
xchg
mov
jmp
jmp
jmp
mov
jle
jg
jle
xor
inc
int
ds
add
cmp
push
movb
and
pop
daa
sub
adc
xor
sub
or
fistpl
xor
adc
arpl
push
adc
push
fs
push
xor
sub
add
xor
or
jae
or
add
push
js
inc
inc
dec
add
insl
jg
push
data16
push
push
push
pop
push
pop
jl
push
dec
dec
jg
pop
jle
js
pop
arpl
mov
jge
jge
inc
insl
mov
js
pop
mov
pop
mov
mov
orl
pop
mov
mov
test
xchg
jecxz
cmpl
mov
test
mov
xchg
mov
orl
xchg
xchg
adcb
out
mov
in
out
xchg
notl
xchg
cmc
mov
lcall
decl
xchg
cli
xchg
out
cmc
sahf
fcomip
shl
loop
in
fsubrs
sar
rcr
fmulp
and
and
enter
and
clc
add
sti
fbld
aaa
movl
shrb
push
sub
adc
push
adc
xor
adc
xor
sub
pop
add
or
push
popa
sbb
jb
cmp
push
cmp
jg
add
sbb
insb
adc
push
imul
dec
jae
jbe
pop
push
mov
inc
push
jno
sbb
inc
jae
imul
jno
lods
pop
mov
pop
mov
push
cmpsl
orl
mov
mov
push
loopne
lods
xchg
mov
cmpsl
in
mov
scas
sahf
test
out
mov
div
mov
addl
cltd
mov
lahf
sbb
out
repnz
xchg
pop
jle
jle
jle
ret
xchg
test
stc
cld
mov
mov
leave
mov
loopne
jmp
in
rcrb
lret
jmp
idiv
fpatan
lahf
rcr
and
pushf
rcl
rol
in
fisubrs
xor
in
shl
icebp
sub
cmp
shrb
cli
dec
add
fcomp
shlb
lret
into
daa
fcmovu
fmulp
sub
or
adc
xor
sbb
sbb
popa
pop
and
sbb
sbb
imul
mov
sub
push
mov
sub
mov
xor
addl
mov
movzbl
xor
xor
sub
mov
mov
mov
xor
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
xor
push
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
movzwl
or
mov
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movzwl
adc
mov
mov
sbbl
xor
subl
movl
movl
add
movl
jmp
mov
cltd
cltd
pop
aas
xchg
pmaxsw
xchg
lock
mov
jae
jle
lods
jle
jle
dec
adc
dec
arpl
inc
inc
js
push
pop
cmpsl
imul
dec
inc
imul
mov
scas
jg
pop
push
addb
pop
inc
mov
pop
movl
cmp
movl
jne
mov
movl
mov
movl
mov
mov
mov
mov
movl
jmp
test
test
test
sub
in
out
adc
mov
jle
jle
jle
mov
mov
push
mov
xchg
adcb
sbbb
test
mov
imul
cmp
jne
sub
mov
andl
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
push
pushl
push
push
push
pushl
push
call
cmpl
jb
mov
add
mov
adc
movl
movl
or
mov
mov
and
mov
mov
xor
mov
movl
movl
xorl
mov
xor
xor
xor
xor
mov
mov
sub
neg
add
mov
mov
mov
movl
cmp
je
add
mov
mov
orl
xor
xor
addl
lea
sbb
mov
subl
xor
adcl
div
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
mov
xor
add
add
ror
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
pushl
pushl
call
jmp
xchg
adcb
popa
cmc
movsb
mov
xchg
call
call
xchg
leave
jle
lods
jle
jle
nop
in
xchg
xchg
cld
xor
lods
mov
lock
cltd
xchg
lock
sbbl
lcall
lahf
stc
mov
lock
mov
cmp
jne
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
xchg
or
cmpb
pushf
call
push
jg
jle
push
push
xor
jns
or
jg
jge
cmp
cmp
jl
inc
or
inc
dec
sbb
pop
jg
pop
adc
push
push
jno
push
jne
dec
pusha
js
mov
stos
dec
jg
push
mov
inc
inc
mov
dec
mov
dec
jnp
mov
mov
mov
pop
mov
xchg
mov
push
fwait
mov
mov
mov
sbbl
loop
mov
out
mov
cli
lahf
lahf
ret
repz
decb
mov
mov
cli
out
cltd
cli
ljmp
enter
rolb
icebp
mul
clc
clc
in
cld
and
aad
ffree
and
stc
shr
lret
fsubr
cmp
divl
out
aad
sub
lret
std
xor
xor
iret
fimuls
and
lret
add
sub
cmp
adc
aaa
popa
or
add
sub
sub
jno
aaa
add
push
insb
cmp
jge
pusha
push
inc
inc
dec
push
adc
push
jbe
adc
push
jb
dec
push
mov
inc
dec
pop
jp
js
jge
pop
imul
push
stos
dec
jo
jp
pop
pop
jns
xorl
mov
cmpsl
adcl
mov
push
movsb
xchg
pop
mov
sbbl
mov
push
cwtl
mov
in
cld
mov
xchg
xor
rolb
repnz
jecxz
cmc
mov
jmp
sti
xchg
int3
into
cwtl
lret
fstl
and
loope
sarb
test
jecxz
in
repnz
cmp
jle
jg
jle
out
es
sub
call
es
not
sarl
sub
fisubrl
cmp
fcomp
ds
xor
ds
add
or
or
es
int
int3
iret
xor
and
xor
pop
add
pop
daa
sub
adc
aas
cmp
or
or
pop
add
jnp
jne
arpl
jnp
inc
jbe
add
pop
add
or
inc
push
inc
push
fs
sbb
pop
ja
push
pop
je
pop
sbb
mov
stos
inc
imul
inc
mov
push
dec
inc
mov
mov
mov
mov
mov
mov
lods
push
mov
lods
push
cltd
push
mov
mov
cmpsb
mov
mov
mov
popf
in
mov
mov
pushf
lahf
jecxz
repnz
test
mov
in
jmp
mov
in
mov
xchg
out
sahf
mov
int
mov
ret
lret
lret
lret
out
cli
fcmovne
cld
in
in
stc
neg
test
leave
aad
ljmp
repz
aam
xor
int3
and
add
push
cmp
add
or
enter
push
xor
sub
and
fstpl
cmp
cmp
cmp
pop
cmp
add
sbb
cs
insb
pop
outsb
outsb
or
jae
imul
add
cmp
cmp
add
sbb
push
ja
or
dec
imul
jl
push
popa
sbb
dec
jl
popa
scas
lods
dec
inc
jle
lods
mov
mov
inc
jno
dec
scas
pop
pop
je
jnp
mov
stos
mov
mov
movsl
mov
xchg
mov
mov
cmpb
ljmp
mov
cltd
xchg
xchg
in
div
in
je
fwait
out
pop
jle
push
jg
jle
mov
lock
xchg
jmp
jmp
stc
lahf
div
mov
call
jmp
fwait
cmc
loop
jmp
mov
cltd
iret
mov
sti
into
enter
xchg
leave
int3
notb
ror
out
clc
iret
and
out
std
lock
cs
shll
das
xor
cmp
sub
sub
sub
push
sub
int
iret
or
leave
add
add
or
push
or
and
sbb
or
pop
fsubl
or
cmp
aaa
adc
insl
jle
insl
sbb
or
adc
cmp
dec
gs
sbb
inc
or
push
sbb
dec
pop
sbb
push
jge
jno
inc
pop
jg
inc
jne
je
jns
inc
jge
movsb
inc
cmpsl
movsl
push
dec
push
push
lods
lods
test
dec
lods
inc
mov
mov
inc
push
test
push
pop
pop
movsb
dec
mov
scas
push
movsl
mov
xchg
mov
mov
addb
scas
xchg
mov
ljmp
repz
decl
nop
out
nop
cwtl
mov
rclb
out
popf
iret
repnz
jmp
xchg
lret
leave
xchg
sahf
icebp
cmc
repnz
stc
fdiv
rcr
idiv
ljmp
cs
repnz
sub
ss
rcr
neg
daa
cmp
sub
and
lds
and
fdivrl
pop
aaa
xor
add
and
adc
add
fldcw
and
arpl
sub
adc
or
xor
adc
jp
sbb
add
or
push
adc
arpl
jo
sbb
push
pop
sbb
inc
inc
pop
push
jnp
je
xchg
mov
xchg
lock
loop
icebp
mov
or
jle
and
jle
inc
mov
mov
dec
cmpsl
jnp
jnp
js
mov
push
pop
jl
pop
mov
orb
mov
mov
mov
mov
fwait
mov
test
lods
jmp
in
mov
loopne
mov
repnz
cmc
xchg
ljmp
out
xchg
test
test
repnz
xchg
mov
mov
jmp
lret
sti
cltd
xchg
cli
lahf
and
popf
shl
shl
loope
sub
ret
fildll
and
test
enter
cmp
and
or
or
adc
adc
xlat
das
adc
daa
shlb
das
sub
adc
sbb
sbb
and
cmp
sbb
insb
cmp
xor
sub
add
outsl
push
adc
jb
dec
sbb
jns
arpl
bound
inc
or
jns
push
pop
jo
push
push
sbb
jbe
jbe
push
pusha
test
jb
outsb
inc
push
scas
mov
push
dec
mov
xorl
inc
push
orb
dec
inc
mov
xchg
scas
cmpsb
xchg
lods
dec
lcall
mov
xchg
jecxz
mov
out
mov
mov
out
orl
mov
mov
in
out
hlt
xchg
cld
std
mov
mul
cwtl
xchg
mov
cld
test
rcrb
ret
lret
ror
rcl
int3
dec
repnz
fdivr
fcmovne
out
aad
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
movzbl
sbb
movl
and
movl
movl
mov
mov
add
lea
mov
xor
mov
or
mov
push
mov
or
lea
xor
add
add
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
movzbl
add
mov
mov
notl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
xor
mov
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
mov
add
mov
mov
cmp
je
mov
xor
add
mov
mov
mov
xor
add
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
xchg
jl
out
rorl
mov
vmovd
jle
jle
xchg
lahf
clc
enter
rcr
hlt
aad
imul
rol
in
ret
out
int3
enter
in
ss
xor
call
jp
add
test
inc
lock
jmp
mov
xchg
cltd
pop
mov
jecxz
lahf
notl
popa
sub
jle
mov
fxch
add
pop
pop
sti
and
cmp
sub
or
cmp
lret
add
and
adc
aaa
cmp
fmull
je
mov
jmp
test
xchg
pop
add
popf
lock
jae
imul
jle
jle
ss
cmp
add
push
push
movaps
add
add
inc
jo
add
adc
xchg
mov
lock
jo
ss
mov
jle
les
frstor
daa
and
hlt
sub
enter
ror
int
cmp
ret
aaa
cmp
das
aam
add
or
add
int
fcmovnu
ficompl
sbb
fnstsw
sub
fnstenv
adc
popw
add
sub
jae,pn
jbe
je
insb
jns
pop
cmp
jl
sbb
sbb
dec
data16
add
jne
push
jae
pop
jbe
adc
dec
jbe
pop
push
push
inc
mov
scas
dec
pop
imul
push
mov
dec
pop
adcl
pop
dec
mov
mov
mov
mov
mov
mov
xchg
mov
lcall
cmpsb
test
jmp
scas
xchg
mov
test
mov
roll
in
mov
mov
mov
mov
loop
mov
jmp
ror
div
icebp
enter
icebp
jmp
cli
pushf
xlat
and
aam
rcr
daa
jmp
and
inc
iret
out
aad
das
aad
cmp
int3
cmc
fbstp
ds
add
fcmovnbe
std
add
int3
int
pop
or
xor
fstps
fsubs
cvtps2pi
xor
adc
bound
arpl
cmp
add
insl
outsb
sbb
insl
sbb
jnp
add
outsl
add
cmp
inc
bound
dec
jne
imul
inc
pop
push
pop
jg
dec
push
pop
inc
push
sbb
inc
jae
cmpsl
data16
mov
inc
lods
inc
outsb
mov
mov
inc
pop
pop
dec
inc
dec
mov
inc
test
mov
sbbb
xchg
xchg
mov
mov
test
cltd
out
mov
mov
addl
adcl
xchg
mov
or
jg
jle
out
xrelease
xchg
xchg
xchg
xchg
lahf
mov
adcl
sahf
idivb
std
xchg
xchg
clc
mul
lret
call
les
rol
iret
ljmp
pushf
ljmp
and
shrb
int3
shll
in
cmp
repnz
sub
sub
sub
add
rcl
and
aam
sub
enter
and
and
pop
sbb
aas
pop
sbb
bound
add
cmp
jo
add
adc
jae
cmp
aas
xor
jb
push
insl
adc
add
sbb
cmp
jns
arpl
insb
jno
push
jbe
outsl
pop
jbe
insb
mov
jle
jge
bound
inc
fs
imul
inc
pop
push
jle
pop
inc
pop
jg
test
xchg
dec
stos
test
scas
cmpb
pop
popf
mov
mov
andb
test
xor
xchg
jmp
mov
repnz
call
loope
mov
stc
jecxz
cwtl
sahf
test
lret
lret
mov
leave
in
xchg
repz
in
rcll
fndisi(8087
jmp
popf
in
cmc
jmp
out
mov
and
repnz
cmp
fcmovu
sub
xor
fidivrs
and
xor
shll
or
sub
lret
sub
add
add
or
add
sbb
sub
sub
pop
add
and
add
add
cmp
add
sub
cmp
pusha
sub
adc
xor
or
jle
inc
insl
addr16
arpl
or
inc
sbb
adc
adc
push
dec
jge
push
adc
outsl
push
push
push
pop
mov
mov
outsb
jp
addl
adcl
pop
and
sub
jg
jle
cmpsb
inc
mov
ja
jne
jne
jno
mov
js
push
mov
mov
mov
mov
mov
xchg
test
jecxz
xchg
andl
call
mov
stc
cmc
popf
std
xchg
stc
xchg
cld
cmc
imul
lds
mov
lcall
sti
mov
addb
repz
jmp
rcl
clc
rcrl
lret
in
int
test
sub
sti
fldenv
out
in
lds
and
in
iret
xlat
daa
xor
shl
cmc
cmc
lret
cmc
xor
xor
fidivs
sarl
rol
cmp
push
daa
int3
sub
cmp
aaa
adc
aas
aaa
pusha
xor
aaa
xor
xor
sub
aas
xor
or
sub
jno
xor
adc
push
inc
pusha
js
jge
inc
imul
inc
dec
push
push
inc
inc
ja
dec
jns
sbb
dec
dec
jp
jb
arpl
jno
inc
test
push
dec
stos
mov
inc
push
dec
js
test
dec
mov
stos
sbbb
inc
dec
dec
dec
nop
push
dec
mov
mov
xchg
mov
lcall
ljmp
subb
xchg
mov
xchg
mov
cld
sti
mov
imul
mov
cwtl
popf
loop
xchg
xchg
mov
xchg
div
repnz
std
mul
xchg
xchg
into
hlt
lret
std
pushf
out
lahf
loop
loop
iret
out
fistpl
call
jecxz
stc
lds
ljmp
sub
aad
ds
aam
cmp
int3
fnstenv
lret
fcmovu
sub
fnstsw
enter
lds
sub
adc
sub
bound
fiadds
pop
and
sub
mov
or
out
repnz
mov
jle
jg
jle
and
cmp
imul
outsl
insl
push
insb
push
aas
push
jo
pop
fs
pop
jne
inc
push
sbb
sbb
jae
push
outsl
insb
ja
jle
jp
push
pop
jb
pop
je
inc
push
movsl
jge
scas
push
dec
dec
mov
dec
mov
scas
jno
push
dec
movsl
inc
test
test
mov
cmpl
movsb
pop
dec
push
movsb
mov
test
pushf
mov
mov
test
jmp
out
test
cli
in
xchg
mov
popf
fwait
mov
cli
lods
mov
mov
repnz
xchg
out
clc
pushf
xchg
cmp
mov
cwtl
xchg
ret
jmp
int3
lret
xchg
xchg
xchg
out
repz
cltd
fdiv
lock
and
lret
aad
ljmp
ror
std
xor
xlat
test
sub
aam
roll
pop
shll
ss
sub
push
fbld
and
iret
lds
pop
adc
ss
add
adc
cmp
xor
sbb
xor
outsl
cmp
cmp
insb
push
pop
bound
ja
js
cmp
add
sbb
add
inc
sbb
adc
push
insl
dec
arpl
dec
dec
push
sbb
sbb
arpl
inc
jne
mov
dec
insl
push
pop
mov
insb
inc
jbe
inc
mov
scas
inc
scas
sbbb
mov
scas
mov
mov
lea
orl
mov
popf
out
mov
push
movl
cmpl
je
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
call
xor
or
dec
mov
jmp
pushl
neg
mov
adcl
pushl
andl
mov
addl
pushl
call
jmp
xchg
xchg
xchg
mov
int
aam
mov
mov
leave
jle
scas
jle
jle
pop
jg
add
push
js
sbb
inc
or
inc
sbb
pop
jbe
bound
addr16
sbb
pop
test
stos
lods
jb
dec
mov
stos
mov
mov
push
movl
movl
notl
movl
mov
mov
mov
mov
push
mov
movl
cmp
mov
mov
je
orl
mov
xorl
xor
xor
movl
lea
xor
cmp
jne
jmp
lea
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
mov
add
push
pushl
push
pushl
call
mov
mov
pop
pop
leave
ret
mov
mov
xchg
loop
xchg
test
popf
mov
stos
jle
push
jg
jle
loope
out
lods
mov
mov
xchg
icebp
repnz
mov
cwtl
rcll
sub
xchg
xchg
mov
std
mov
out
ret
mov
sahf
out
orl
sahf
clc
xlat
fwait
leave
jmp
hlt
fadd
lock
ret
xlat
out
into
inc
rol
xor
out
lds
sar
lret
cli
xor
sub
das
ds
aas
xor
cmp
cs
fimull
add
push
or
cmp
sub
push
xlat
cmp
and
xor
bound
cmp
add
jbe
adc
add
adc
adc
aas
jne
add
outsl
sbb
jle
aas
arpl
jne
gs
inc
pcmpgtd
insb
pop
dec
jb
adc
push
push
pop
cmpsl
inc
pop
pusha
push
imul
inc
push
insl
jo
push
dec
push
ja
jns
mov
subb
mov
mov
mov
mov
cwtl
mov
mov
xchg
mov
mov
cwtl
scas
mov
mov
ljmp
mov
out
repz
out
mov
xchg
test
test
mov
icebp
mov
xchg
mov
sahf
in
into
repnz
out
repnz
shl
in
cli
lcall
cmc
iret
daa
clc
fadd
sub
aad
xor
inc
ss
and
and
hlt
xor
aam
fnstenv
sub
fdivrs
add
and
fnsave
adc
fisubrl
das
aad
xor
aam
and
sbb
fdivl
cmp
and
push
cmp
xor
push
cmp
pop
sub
or
or
jp
push
imul
jge
fs
jne
sbb
or
je
sbb
sbb
pop
push
dec
jb
inc
pop
sbb
mov
sub
mov
andb
mov
push
jg
jle
inc
addr16
arpl
push
addr16
jb
inc
je
dec
stos
push
jo
movsb
pop
pop
pop
mov
push
push
mov
stos
jl
dec
dec
adcl
mov
mov
mov
sahf
loopne
jmp
xchg
test
mov
mov
mov
jmp
pushf
loope
ljmp
mov
in
xchg
lock
test
xchg
ror
mov
std
mov
jmp
fcmovnu
xchg
and
hlt
and
and
stc
cld
lock
into
shl
sub
xor
aaa
xor
push
pop
fldl
sub
fbld
add
xor
adc
es
cmp
sbb
arpl
fbstp
adc
sbb
adc
jb
or
imul
cmp
xor
jo
add
jl
sbb
cmove
inc
popa
push
dec
ja
bound
push
pop
js
je
adc
sbb
mov
push
pop
inc
push
inc
dec
dec
mov
mov
mov
mov
mov
inc
pop
inc
push
push
pop
mov
xchg
xchg
scas
xchg
xchg
mov
mov
jecxz
mov
pushf
jmp
test
mov
in
xchg
xchg
jmp
mov
sahf
cwtl
mov
xchg
mov
out
cmc
clc
std
stc
out
mov
xchg
ror
mov
loope
xchg
jmp
out
cmc
xchg
cli
sti
in
loop
loope
pushf
icebp
jecxz
cli
aad
leave
fldt
das
lock
divb
lock
cli
icebp
xor
fnstenv
flds
rcr
rcl
fcmovnb
ffree
sub
xor
sub
or
xor
mov
mov
xchg
adcl
scas
jle
push
jg
jle
xor
or
aad
xor
pop
xor
pusha
xor
sub
sbb
or
sub
sbb
outsl
fs
js
sbb
or
or
adc
dec
jg
sbb
push
push
imul
bound
adc
sbb
dec
sbb
pop
pop
push
mov
pop
jnp
test
inc
mov
inc
lods
push
inc
dec
push
dec
dec
jg
stos
dec
pop
inc
mov
mov
mov
mov
fwait
mov
mov
test
mov
popf
in
out
out
call
jmp
test
mov
mov
nop
jecxz
xchg
in
in
mov
xchg
xchg
mov
pushf
test
loope
xchg
aam
mul
xchg
ljmp
fcomp
aad
lcall
fsubr
lret
in
fldcw
iret
xor
fidivl
xor
xor
sub
aaa
ret
add
aaa
xor
add
pop
adc
int3
pop
adc
push
sbb
adc
or
aas
fdivrs
wbinvd
push
sub
or
jb
sbb
adc
or
or
inc
jle
jg
or
dec
push
push
jb
dec
pop
adc
pop
jp
imul
mov
dec
test
push
jle
inc
jbe
jo
push
mov
mov
mov
mov
mov
pop
push
vpmacssww
mov
mov
in
mov
jecxz
mov
loopne
testb
mov
repz
repz
mov
repz
in
mov
mov
xchg
mov
lcall
xchg
lret
out
mov
cltd
cltd
xchg
sarb
pushf
repz
icebp
or
lods
jle
jg
jle
call
out
nop
in
clc
rcr
cltd
cmc
es
and
lock
in
into
cmc
sub
enter
sub
xor
xor
xlat
enter
sub
rcl
pop
cmp
es
or
cmp
push
es
fidivrl
das
or
fdivrl
add
cmp
push
or
sbb
sub
push
adc
push
pop
or
cmp
insl
inc
cmp
inc
sbb
jge
insb
dec
pusha
dec
dec
push
adc
sbb
dec
pop
js
imul
dec
push
movsl
mov
jbe
mov
mov
cmpsb
inc
pop
inc
mov
pop
stos
mov
orb
stos
xchg
xchg
scas
pop
mov
mov
mov
out
mov
mov
lahf
loopne
lea
hlt
repnz
nop
and
xchg
in
mov
mov
clc
mov
stc
popf
lock
std
mov
jecxz
enter
rcl
repz
clc
leave
repz
stc
xchg
and
cld
lcall
out
fcmovu
cli
and
xor
sub
clc
cld
cmc
xor
add
xlat
and
cmp
add
add
or
pop
sub
rcr
aas
fldcw
cmp
add
es
or
push
sub
or
outsl
push
cmp
sub
push
subl
movl
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
add
dec
mov
jmp
neg
mov
push
mov
mov
sub
mov
mov
xor
sub
push
mov
add
mov
movzbl
sub
mov
xor
add
movl
mov
movl
mov
movl
cmp
jae
movl
jmp
mov
mov
or
mov
mov
movzwl
sbb
mov
adcl
xor
add
sbbl
push
mov
movl
call
incl
movl
cmp
movl
jb
movl
mov
subl
xor
add
mov
movl
cmp
movl
jae
jmp
movzwl
add
mov
mov
subl
mov
movl
lea
adcl
addl
mov
mov
xor
mov
subl
sub
orl
add
movl
mov
movl
cmp
jae
jmp
xor
add
or
mov
mov
or
mov
mov
mov
andl
imul
shr
andl
xor
lea
addl
orl
andl
mov
subl
add
and
mov
cmp
jae
mov
and
mov
mov
xorl
mov
xor
add
push
mov
xor
add
push
mov
add
push
mov
pushl
call
mov
mov
add
mov
xor
lea
cmp
jb
mov
mov
mov
add
mov
mov
xor
lea
mov
cmp
jb
mov
mov
mov
add
mov
xor
lea
mov
cmp
jb
mov
xor
add
pop
pop
mov
mov
pop
leave
ret
xchg
mov
cltd
xchg
pmulhw
jmp
call
jo
mov
jle
jg
jle
add
inc
ds
cmp
addr16
js
dec
insl
pop
push
outsb
jle
outsl
or
imul
je
pop
dec
push
pop
pop
sbb
js
push
pop
pop
dec
push
dec
inc
pop
push
stos
cmpsl
jb
inc
mov
mov
mov
mov
test
dec
dec
mov
pop
mov
xchg
cwtl
xchg
xchg
scas
scas
push
mov
mov
lcall
jmp
mov
mov
fwait
lea
lcall
mov
xchg
in
lcall
and
sub
notb
jmp
int3
popf
div
mov
xchg
xchg
aad
popf
shr
repnz
pushf
and
ret
aad
and
shr
cld
ret
in
sub
xlat
test
daa
pop
faddl
or
xor
xor
lret
leave
fnstcw
rcl
xlat
daa
and
adc
aad
cmp
add
pop
sbb
aas
add
sub
jns
or
jns
cmp
add
js
inc
sbb
insl
arpl
addr16
dec
bound
push
popa
jne
adc
pop
js
adc
push
pusha
cmpsb
pop
jle
mov
push
dec
pop
mov
inc
mov
scas
inc
dec
stos
jo
push
jle
push
lods
push
addl
addb
movsl
test
scas
dec
xchg
test
and
cmpsl
ljmp
scas
mov
loope
mov
mov
test
out
loope
nop
xchg
decl
loope
in
mov
mov
shl
out
add
cmc
les
enter
int
out
xchg
in
cld
lahf
neg
inc
fnsetpm(287
sti
ret
ret
jmp
in
enter
xor
xchg
mov
add
icebp
adcl
jl
push
movsl
mov
jle
jg
jle
cli
sub
fdivp
aaa
xor
and
fbld
aam
xor
lret
add
fcmove
filds
add
and
sub
cs
sub
or
xor
insw
sub
jb
jbe
pop
adc
xor
ja
jg
jno
dec
push
sbb
push
inc
addr16
sbb
js
sbb
or
push
push
pop
push
inc
dec
push
push
insl
jnp
inc
jno
dec
push
pop
sbb
cmpsl
inc
mov
push
dec
cmpsb
mov
dec
mov
inc
pop
adcl
push
push
push
push
mov
mov
mov
mov
xchg
xchg
push
fwait
mov
test
cwtl
mov
mov
stos
mov
xchg
repz
mov
test
icebp
cmp
mov
jmp
fwait
in
xchg
mov
xchg
loop
nop
loop
cli
mov
jecxz
sahf
int
call
ror
iret
cli
lcall
std
out
hlt
cltd
shl
call
repnz
in
mull
cmp
in
fisubrl
into
cld
stc
sti
std
aad
add
std
fdivrs
fistpll
cmp
and
fbstp
or
add
adc
push
aaa
arpl
add
cmp
push
sub
add
pop
sbb
cmp
jne
outsb
jg
jae
inc
jo
js
jns
add
dec
inc
add
dec
sbb
popa
sbb
push
je
push
adc
inc
insl
inc
jb
jp
inc
dec
mov
push
inc
jno
movsb
jae
dec
push
dec
jo
mov
dec
jns
mov
cmpsl
mov
mov
cmpsl
push
mov
stos
push
test
andb
test
movsl
mov
mov
xchg
repz
lcall
mov
xchg
lea
jmp
mov
xor
jo
mov
jg
jle
mov
xchg
mov
out
mov
mov
lahf
stc
icebp
rol
lock
fwait
loope
ret
xchg
cld
loope
enter
iret
jmp
sti
lcall
leave
popf
out
int3
out
cli
and
sub
sub
out
fmulp
ret
jmp
aad
ds
and
and
fisubl
ret
ret
fimull
add
add
sub
add
femms
and
ficoms
add
add
ds
cmp
or
xor
outsl
push
sbb
aas
sbb
adc
push
pusha
jnp
jl
popa
add
push
jle
inc
push
pusha
adc
pop
ja
jl
jns
sbb
jns
pop
jns
inc
addr16
inc
jae
mov
jno
lods
mov
mov
mov
stos
mov
pop
mov
stos
mov
dec
pop
cmpsl
dec
mov
xchg
orl
pop
pop
mov
mov
in
test
sbbl
hlt
lock
out
xchg
mov
mov
lea
pushf
xchg
loopne
hlt
mov
xchg
mov
test
test
stc
std
out
neg
icebp
icebp
cmc
clc
call
aam
ffreep
shl
es
ljmp
lret
iret
xor
shlb
cs
rcr
sub
clc
xor
cmp
lds
leave
and
sub
or
faddl
sub
pop
sub
add
bound
and
push
data16
popa
pop
insl
push
sbb
xor
adc
pop
js
sbb
adc
bound
insb
adc
sbb
cmp
or
arpl
jne
insb
dec
push
sbb
push
jg
inc
sbb
bound
addr16
inc
dec
mov
inc
mov
jns
mov
mov
notl
pop
mov
jle
push
jg
jle
push
dec
dec
inc
addb
mov
push
xorl
xchg
scas
movsb
popl
lods
movsb
test
sahf
mov
popf
movsl
mov
mov
out
hlt
mov
mov
sti
test
cld
out
xchg
xchg
mul
xchg
test
xchg
test
and
ret
ret
ljmp
cld
in
mov
jmp
loope
jmp
loop
faddp
fdiv
inc
and
ror
out
and
repnz
in
ss
lret
xor
cmp
fisubl
ret
ror
rorl
cmp
push
fiadds
or
rolb
and
xor
xor
sub
sub
cmp
add
xor
sub
or
ja
push
jbe
jne
inc
sbb
cmp
or
or
dec
inc
pop
jo
inc
jl
or
adc
sbb
push
movsb
js
addr16
dec
js
lods
outsl
pop
mov
lods
inc
jne
dec
jo
js
jl
mov
inc
inc
inc
mov
mov
orl
xchg
xchg
mov
sahf
mov
xchg
movsl
xchg
loope
mov
stos
mov
mov
mov
repz
fwait
mov
addl
xchg
mov
mov
std
std
jmp
cwtl
cwtl
repz
in
loop
in
lds
lret
fisubs
iret
sti
xlat
test
hlt
ljmp
lock
rol
fidivs
xor
sub
and
add
aaa
add
movb
fadds
das
daa
movlps
xor
adc
sarl
pop
push
aaa
cmp
add
cmp
pusha
ss
data16
push
push
gs
sbbb
insl
mov
xchg
repnz
jle
dec
jle
jle
arpl
jp
add
outsl
adc
push
outsl
jbe
sbb
js
mov
sub
adcl
movl
not
movl
adc
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
xor
mov
mov
xorl
xor
mov
xorl
add
andl
mov
mov
push
movzwl
add
mov
xor
sub
movzbl
xor
mov
mov
push
mov
mov
adc
mov
xor
adcl
sub
lea
cmp
movl
ja
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
push
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
xor
add
imul
add
mov
mov
mov
xor
sub
mov
mov
xor
sub
lea
cmp
jbe
pop
mov
xor
mov
pop
lea
pop
leave
ret
test
xchg
mov
ljmp
ret
dec
sbb
jle
adc
sbb
inc
sbb
jns
jb
inc
inc
insl
pop
ja
push
insb
jo
jbe
jle
pop
sbb
push
mov
inc
dec
inc
imul
pop
dec
mov
mov
push
test
test
inc
lods
xchg
sbbl
xchg
test
mov
loop
mov
mov
jmp
in
mov
loope
jmp
in
xchg
mov
xchg
testb
sbbl
xchg
mov
adcl
in
dec
in
pushf
lret
call
leave
stc
hlt
fistps
sti
fcomip
mull
xbegin
iret
les
ss
xor
enter
iret
fdivl
aaa
xor
aam
aas
add
cmp
add
roll
aam
adc
or
das
xor
adc
pop
push
pop
adc
add
add
sbb
addr16
or
jg
jbe
js
sbb
add
or
or
push
jg
push
jl
adc
sbb
push
imul
arpl
inc
cmpsb
pop
movsl
pop
lods
inc
arpl
jae
jb
jo
mov
dec
js
stos
test
lods
jle
inc
mov
mov
mov
mov
adcb
push
mov
lea
fwait
jmp
sahf
test
scas
icebp
mov
xchg
out
in
mov
repnz
xchg
popf
mov
hlt
mov
xor
cld
pushf
sahf
mov
ror
inc
repz
cmc
call
hlt
repnz
lock
and
xlat
cwtl
fdivp
and
sub
ret
ret
sti
das
daa
sub
mov
xchg
fwait
xchg
and
and
icebp
jmp
mov
cmc
mov
cmpsl
cmp
jle
sub
sub
es
and
sub
fidivs
or
into
int3
int3
and
adc
pop
adc
adc
data16
sbb
pop
pop
cmp
sbb
je
popa
add
popa
add
ja
jae
addr16
jg
push
dec
inc
js
push
insl
cmovb
outsb
pop
js
dec
imul
push
ja
sbb
stos
jle
scas
scas
pop
lods
scas
inc
push
outsl
stos
mov
inc
jno
mov
dec
push
mov
push
mov
pop
mov
pop
scas
sbbl
pop
pop
push
dec
mov
mov
xchg
pop
mov
out
stos
mov
movsl
mov
mov
cli
xchg
fwait
xchg
sti
xchg
xchg
clc
cmpb
in
in
mov
nop
out
cli
jmp
xchg
popf
sahf
mov
jmp
repnz
shr
xlat
ret
fcmovu
aad
lahf
lcall
and
fcmove
ret
and
rcl
in
ret
ss
hlt
and
sub
into
xor
fnstenv
sub
add
cmp
or
add
sub
prefetch
adc
fiaddl
sbb
popa
add
add
aaa
imul
pusha
sub
push
pop
cmp
xor
insl
cmp
bound
jae
jbe
push
jne
add
or
or
jnp
imul
push
or
adc
js
ja
push
pop
pop
mov
pop
arpl
mov
lods
inc
inc
inc
inc
push
push
push
pop
inc
jae
mov
pop
dec
lods
mov
inc
mov
stos
subl
mov
mov
sahf
pop
pop
mov
mov
xchg
and
sahf
xchg
ljmp
notb
xchg
clc
lea
std
xchg
lds
xchg
xchg
lcall
es
mov
popf
test
in
inc
add
mov
jle
xchg
out
idiv
sti
imul
out
nop
cmc
jmp
xchg
xchg
ret
in
hlt
fwait
int3
dec
std
ret
sti
xchg
les
pushf
and
div
int
int
out
loopne
std
and
stc
jmp
aam
sub
clc
lret
cmp
sar
ret
ret
rcr
or
xor
lds
push
and
and
fmuls
pop
cmp
pop
cmp
jbe
adc
push
gs
jl
adc
jne
pop
jge
aas
inc
or
outsb
jge
adc
jae
bound
inc
ja
inc
push
sbb
dec
jp
je
mov
inc
data16
mov
inc
scas
test
dec
mov
dec
push
dec
cmpsl
jno
push
inc
dec
jle
jg
cmpb
push
inc
dec
movsl
cmpl
stos
mov
stos
pop
stos
lea
xchg
mov
mov
call
mov
mov
fwait
testl
xchg
mov
xchg
mov
jecxz
lea
out
clc
jmp
lds
leave
cltd
mov
in
xlat
lret
notb
xlat
cli
and
and
and
es
and
sub
enter
sub
cli
int3
sub
int3
cmp
xor
aaa
aas
add
enter
or
leave
push
cmp
xor
or
adc
or
xor
arpl
pop
xor
adc
push
and
popa
fs
cmp
outsl
or
or
jno
sbb
sbb
insb
ds
inc
inc
jne
add
or
inc
jge
pcmpgtw
ja
jnp
outsb
jae
dec
insl
jns
imul
push
sbb
jge
dec
lods
push
inc
push
inc
insb
mov
push
pop
push
mov
xchg
lea
inc
repz
pushf
test
ljmp
sub
push
jg
jle
push
mov
inc
test
mov
stos
nop
scas
lea
sbbb
mov
mov
loope
mov
loop
loope
in
xchg
icebp
lcall
xchg
pushf
out
out
stc
jecxz
xchg
icebp
mov
mov
xchg
mov
hlt
ljmp
loop
nop
xchg
cld
repnz
shl
enter
fst
out
hlt
and
ffreep
cmc
leave
fsubrl
fucomi
fisubrs
in
xor
das
int
and
sub
aad
and
xor
add
cmp
sub
lds
sub
fimuls
sub
leave
adc
sbb
xor
pusha
sbb
and
and
sub
imul
or
jp
push
ds
je
jp
add
js
add
ja
dec
inc
push
inc
push
dec
inc
dec
jnp
jne
jo
pop
push
dec
adc
inc
push
bound
inc
push
outsl
jne
inc
jle
fs
inc
je
mov
stos
dec
ja
mov
mov
push
pop
push
inc
pop
mov
push
mov
mov
push
dec
mov
mov
mov
mov
test
mov
mov
cli
out
mov
cmc
clc
mov
clc
cltd
mov
sti
repnz
call
out
lock
xchg
cli
hlt
xchg
xchg
mov
vpminsw
out
std
xchg
leave
lock
into
clc
lret
icebp
popf
popf
in
mulb
rcl
enter
std
shrb
in
das
std
ret
das
rol
and
aad
aam
iret
std
aam
aad
cmp
fsubl
cmp
aas
cmp
sub
add
add
pop
cmp
push
sub
push
sbb
and
arpl
sbb
push
or
add
xchg
xchg
mov
in
out
pushf
div
xchg
mov
aam
push
fwait
mov
jle
pushw
xor
or
imul
push
push
jp
fs
sbb
bound
fs
je
adc
dec
imul
in
sub
sbb
push
movzbl
add
movl
movl
addl
andl
push
sbbl
pop
xor
lea
subl
rep
adcl
call
mov
movl
movl
andl
cmpl
andl
je
movzwl
or
push
movl
mov
orl
xor
addl
add
push
andl
mov
add
orl
push
mov
pushl
movl
call
add
push
andl
mov
sbbl
xor
xorl
add
push
or
mov
movl
add
sbbl
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
pushl
call
mov
xor
dec
xor
mov
cmpl
je
movl
push
mov
xor
add
push
mov
add
push
mov
pushl
call
pushl
call
mov
push
mov
xor
add
push
mov
add
push
mov
pushl
call
jmp
mov
cwtl
cltd
out
pop
jmp
jmp
cli
jbe
add
jle
jle
imul
jl
lods
mov
pop
mov
mov
mov
scas
xchg
mov
xchg
loop
mov
push
or
push
pop
leave
ret
mov
lea
mov
sbbl
jle
push
jg
jle
push
sbb
mov
arpl
pop
inc
stos
stos
dec
dec
cmpsl
inc
inc
jge
push
jno
inc
js
mov
stos
pop
jge
mov
mov
inc
push
sbbl
movsl
inc
xchg
mov
fwait
push
xchg
scas
mov
mov
mov
subl
mov
hlt
mov
mov
loop
mov
loopne
movsl
call
clc
cmc
lahf
mov
nop
sahf
xchg
stc
lock
in
call
notb
jmp
shr
rcrl
rol
and
lret
and
iret
in
mov
and
xor
faddp
fcomp
add
add
int3
pop
aad
clc
push
fbld
cmp
add
pop
and
xor
adc
adc
add
sbb
sub
sbb
fistps
sub
cmp
outsl
jo
push
xor
pop
pop
push
sysexit
pop
data16
ds
push
inc
pcmpgtb
dec
adc
dec
mov
data16
stos
jne
push
jge
scas
mov
push
mov
push
inc
inc
push
jno
je
subb
jl
pop
mov
pop
test
xchg
xchg
xchg
xchg
scas
pop
lea
cmpsb
pop
loope
out
call
fwait
ljmp
mov
mov
mov
mov
xchg
mov
xchg
fwait
cld
out
repnz
cwtl
shl
xchg
xchg
mov
int3
iret
loope
out
ljmp
rclb
ret
es
mov
out
in
in
and
std
lret
aaa
sub
xor
rcr
fdivrl
cmp
aam
ret
sub
xor
add
sub
xor
cwtl
xchg
sbbl
ljmp
gs
cmpl
jg
jle
add
add
cmp
xlat
xor
cmp
push
and
and
cmp
push
cmp
cmp
outsl
sub
jno
pusha
imul
jne
sbb
or
or
push
ja
sbb
or
push
arpl
inc
bound
push
pop
sbb
push
inc
inc
inc
inc
gs
mov
pop
js
mov
mov
dec
lods
lods
inc
dec
mov
dec
scas
pop
mov
inc
mov
mov
mov
mov
pop
pop
test
mov
pushf
cmpsb
xchg
out
movsb
movsl
xchg
cltd
movsb
icebp
ljmp
cmc
mov
out
mov
addb
mov
clc
ret
xchg
pop
mov
loope
cltd
in
std
repz
out
jmp
rcrb
lahf
fdivp
jecxz
and
out
test
sub
in
jmp
leave
icebp
shlb
sub
das
shll
stc
ffreep
fdivs
shlb
cmp
fldcw
xor
cmp
push
and
add
xlat
or
aam
adc
or
aam
adc
and
sbb
add
add
push
das
imul
insb
jo
xor
sbb
xor
jnp
pop
push
adc
ja
or
dec
inc
ja
push
dec
adc
outsl
push
inc
jo
inc
push
insb
inc
movsb
cmpsb
dec
sbb
lods
inc
test
lods
scas
jno
dec
mov
push
jl
jg
jl
xchg
cmpb
xchg
mov
xchg
push
mov
mov
mov
nop
movsl
xchg
mov
in
mov
xchg
sahf
lock
pushf
call
cltd
xor
in
out
mov
mov
out
lcall
xchg
fwait
xchg
xchg
mov
mov
inc
mov
popl
mov
mov
jg
jle
sub
shl
shl
mov
xchg
lock
icebp
cld
lahf
into
icebp
cltd
shl
daa
sub
pushf
sub
es
and
fnsave
iret
lret
shl
div
int3
fsubrl
int
ss
rorb
fcmovu
leave
lret
cmp
cmp
aad
sub
fstps
and
xor
xor
adc
or
add
push
arpl
outsl
adc
push
sbb
lar
pop
add
push
add
inc
push
insb
inc
or
dec
jno
pop
adc
jne
data16
cmpsl
addr16
pop
movsb
mov
jle
pop
inc
dec
jae
dec
test
mov
push
jle
mov
pop
pop
mov
mov
orb
scas
mov
xchg
mov
xchg
xchg
xchg
pop
mov
loop
mov
subl
loope
mov
loopne
sti
mov
lock
in
shl
jmp
mov
xchg
xchg
mov
popf
add
rolb
call
in
cli
out
ljmp
fucomip
cld
fcmovb
and
mov
sub
ret
daa
call
int3
and
xor
enter
and
add
xor
xor
fildl
push
or
add
add
sysexit
and
adc
or
cmp
xor
add
and
add
sub
jbe
arpl
xor
jo
jg
inc
jp
inc
or
inc
or
sbb
jge
jg
push
push
dec
jo
sbb
push
popa
jns
bound
lods
inc
jp
inc
cmpsl
mov
scas
push
stos
inc
jne
pop
pop
mov
mov
mov
test
pop
scas
push
mov
cmpsl
stos
mov
addb
cltd
pop
ret
js
xchg
loope
out
xchg
mov
sub
jle
add
jle
pop
mov
lods
test
popf
mov
xchg
lods
mov
movsl
sub
addl
ljmp
jecxz
loopne
in
xchg
call
xchg
stc
cltd
out
mov
negl
call
loope
sar
repz
int3
xchg
jmp
in
sti
out
aam
repnz
loope
hlt
enter
cmc
sub
ljmp
enter
stc
ret
xor
cmp
lret
cmp
or
es
and
and
add
or
cmp
cmp
add
sbb
xor
or
sbb
cmp
adc
data16
outsl
add
jno
add
jo
gs
push
js
jg
or
or
outsb
jne
adc
outsl
pop
pusha
inc
ja
pop
mov
jns
insb
fs
mov
push
test
mov
jp
jge
inc
test
mov
dec
dec
scas
stos
mov
movsb
mov
push
lods
xchg
push
cwtl
mov
lcall
mov
lods
in
cli
in
mov
lock
ret
xchg
xchg
sahf
testb
mov
stc
mov
cmc
jmp
in
cwtl
int
ror
xchg
sti
notb
lahf
jmp
popf
fdiv
stc
sub
sub
repnz
lret
and
shl
sub
lret
fsubs
fnstenv
fisubl
daa
sub
push
cmp
or
cmp
pop
shlb
and
and
add
add
aaa
sbb
cmp
or
xor
xor
data16
xor
arpl
in
sub
sbbl
mov
adcl
mov
mov
and
mov
mov
mov
mov
sub
movl
movl
sbb
mov
push
push
mov
sub
push
mov
addl
xor
mov
add
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
movzwl
and
movl
movl
sbb
movl
movzwl
and
mov
xor
andl
add
movl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
xorl
movl
or
movb
mov
xor
subl
add
xorl
mov
mov
and
mov
mov
xor
add
subl
push
mov
addl
xor
sbbl
add
push
mov
xor
mov
mov
xor
movl
add
push
movl
lea
notl
push
orl
pushl
pushl
notl
call
subl
test
je
lea
andl
push
mov
sbbl
xor
subl
add
sbbl
push
mov
add
push
mov
mov
pushl
call
mov
jmp
mov
lea
mov
test
je
lea
push
mov
xor
add
push
mov
xor
add
push
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
mov
sub
add
mov
pushl
xor
mov
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
call
mov
mov
add
pop
pop
pop
leave
ret
mov
test
jp
xchg
nop
mov
sarb
test
push
jg
jle
add
jne
jg
imul
jp
sbb
or
push
insb
jge
push
dec
pop
js
adc
ja
jle
bound
bound
jne
pop
imul
mov
push
mov
jne
dec
mov
addl
pop
mov
scas
nop
cmpsb
pop
test
xchg
loopne
test
mov
xchg
test
in
lea
in
in
nop
cwtl
jmp
out
call
jmp
xchg
loope
mov
xchg
cld
cltd
mov
sahf
xchg
nop
nop
ljmp
ret
in
icebp
pushf
enter
cmc
cmc
repnz
xlat
lahf
in
lret
mulb
shlb
sti
cld
out
fsubr
cld
fadd
ret
shlb
lret
xor
ss
daa
icebp
clc
fdivrl
cmc
and
cmp
shll
and
lret
mov
sub
ss
add
xor
ss
das
sbb
cmp
push
push
push
push
add
sysenter
add
adc
or
imul
adc
sbb
pusha
outsb
or
push
adc
outsl
sbb
dec
adc
inc
jge
jno
sbb
mov
movsb
test
dec
movsb
pop
dec
push
inc
dec
pop
dec
mov
push
mov
pop
stos
mov
pop
addb
mov
mov
cmpsl
lods
scas
xchg
push
pop
pop
mov
cltd
push
mov
cmpsb
stos
mov
in
stos
mov
popf
xchg
sti
in
mov
cwtl
mov
lock
clc
nop
sub
and
mov
hlt
hlt
mov
loop
cwtl
out
loopne
mov
lock
cmc
repz
dec
out
lock
repnz
in
rcl
ljmp
mov
mov
xchg
ljmp
leave
add
jle
push
jg
jle
and
cld
and
sub
icebp
sub
cli
aas
cmp
aas
ret
xor
sub
and
sub
cmp
adc
sub
xlat
cmp
fnstcw
sbb
add
pop
pushaw
addr16
sub
cmp
add
popa
cmp
jbe
popa
pusha
popa
je
push
jl
inc
adc
ds
jo
dec
inc
push
inc
sbb
push
inc
dec
dec
insl
push
push
adc
insb
pop
jb
dec
jbe
push
jl
pop
push
pop
push
sbb
test
pop
insl
insl
je
mov
dec
push
dec
jne
pop
scas
pop
jp
pop
mov
mov
inc
pop
xchg
dec
lods
xorl
mov
scas
mov
sahf
lcall
mov
mov
loop
nop
lock
stc
xchg
cmp
fwait
add
loope
xchg
mov
mov
fwait
mov
cwtl
rcrl
mov
lahf
imul
leave
in
xchg
rcl
hlt
rcrl
out
ljmp
fcmovnu
and
aad
sar
iret
fcmove
clc
into
and
cmp
aad
cmp
add
daa
fxch
cvtps2pi
or
iret
cs
xor
int3
xor
cmp
xor
aaa
add
sbb
fnstcw
adc
xor
punpcklbw
or
adc
xor
js,pt
imul
sbb
fs
inc
adc
jne
pusha
inc
inc
jno
jae
adc
popa
pop
fs
outsl
push
pop
jno
je
pop
cmpsb
push
pop
jnp
test
stos
dec
pop
test
mov
mov
test
mov
jns
dec
pop
dec
mov
inc
inc
push
push
mov
pop
pop
pop
dec
movsl
mov
scas
push
mov
pop
scas
lahf
pop
mov
mov
mov
mov
xchg
out
out
jecxz
loop
testb
lea
xchg
lds
and
out
pushf
lock
in
lds
jle
jg
jle
cltd
out
mov
lock
mov
nop
in
xchg
xchg
mov
fwait
xchg
mov
pushf
sti
loope
clc
lcall
in
repz
rcr
xchg
icebp
int
xchg
sahf
icebp
jmp
xlat
loop
aam
fmul
cmc
xlat
and
leave
fldenv
sub
rol
lock
int
int
cmp
xlat
cld
xor
xor
and
ss
xor
cmp
and
pop
xor
ds
aaa
sub
adc
sbb
or
add
add
imul
inc
jo
sbb
push
dec
bound
imul
insl
inc
insl
adc
push
push
push
dec
push
pop
push
jb
movsl
pop
pop
test
pop
outsb
lods
outsl
mov
inc
inc
mov
mov
pop
xchg
mov
xchg
nop
stos
test
mov
pop
pop
mov
cmpsl
mov
xchg
cwtl
mov
in
xchg
in
jmp
xchg
mov
xchg
xchg
mov
loop
out
lea
repz
out
mov
stc
hlt
lock
ret
and
hlt
popf
loop
cltd
xchg
jmp
in
loop
ror
leave
lds
nop
fstps
loopne
and
out
out
out
and
ss
out
and
lret
int
ds
fldenv
xor
xor
iret
cmp
cmp
and
or
fbstp
sbb
sbb
sbb
sbb
add
or
jbe
imul
imul
je
inc
jne
outsl
sbb
adc
push
adc
sbb
pop
push
jae
dec
sbb
jbe
mov
mov
inc
push
movsl
mov
fwait
cwtl
inc
push
xchg
xchg
ljmp
mov
push
jg
jle
inc
jo
mov
mov
dec
mov
lods
js
pop
pop
mov
inc
pop
mov
pop
pop
movsb
addb
pop
mov
lahf
lcall
nop
xchg
mov
cmpsl
loop
mov
xchg
lods
mov
mov
xchg
mov
adcl
loope
adcb
in
mov
cmc
mov
ret
ret
jmp
jmp
in
xchg
mov
rcl
out
lcall
loopne
rol
inc
fucomp
popf
lret
and
shr
xlat
sub
xor
hlt
ss
cli
xlat
fnstcw
fldt
fld
xor
fcmovne
enter
es
ss
and
xor
pop
push
pop
sbb
cmp
adc
arpl
and
xor
or
add
or
xor
jno
sbb
imul
imul
inc
pop
push
pusha
inc
dec
pusha
outsl
push
outsb
imul
dec
insl
jbe
bound
push
jl
jne
pusha
dec
jne
mov
dec
dec
stos
push
mov
mov
mov
mov
inc
mov
cmpsl
dec
test
dec
scas
cmpsl
mov
subl
mov
mov
mov
scas
mov
xor
idiv
mov
in
hlt
xchg
lahf
loope
sar
inc
xchg
mov
mov
repnz
mov
ret
cwtl
test
cmc
into
shr
repnz
repnz
rcll
repz
rol
repnz
repz
and
out
and
std
loope
inc
sub
sub
lock
int3
cmp
and
fisubrl
push
das
or
int3
xor
int
adc
cmp
das
adc
sbb
sbb
or
xchg
cltd
cltd
dec
mov
lock
nop
loopne
jb
mov
pop
jle
jle
push
add
jo
push
jb
add
cmp
push
jnp
jns
adc
sbb
fs
push
mov
sub
or
mov
xor
xor
sub
mov
mov
mov
neg
mov
andl
push
movl
push
xor
xor
mov
and
mov
neg
xor
push
mov
xor
or
adc
mov
add
xor
or
and
mov
lea
mov
sub
mov
mov
mov
mov
sub
mov
movzbl
adc
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
add
xor
add
movzbl
or
mov
movl
mov
adc
lea
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
addl
xor
mov
sbb
add
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
mov
andl
mov
mov
movzwl
adcl
add
and
movl
xorl
mov
mov
movzwl
and
mov
subl
xor
add
movl
cmp
jne
mov
mov
xor
xorl
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
test
xchg
cwtl
fdivrl
repz
xchg
into
jle
scas
jle
jle
sbbl
mov
jmp
popf
call
mov
cld
ret
push
nop
test
in
in
in
xchg
hlt
stc
xchg
cli
mov
inc
or
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
xchg
xchg
test
hlt
xchg
in
call
push
out
rorb
bound
jne
inc
or
arpl
push
dec
inc
pop
push
jb
jns
push
ja
jp
fs
push
cmpsb
pop
scas
jbe
outsb
scas
inc
inc
mov
insb
mov
inc
dec
cmpsb
push
dec
lods
mov
push
mov
mov
pop
mov
adcl
xchg
mov
xchg
xchg
push
cltd
xchg
loop
pop
mov
mov
movsl
call
lods
mov
mov
out
fwait
mov
testb
cltd
loope
ljmp
xchg
sti
ljmp
popf
mov
xchg
rorb
shl
ror
out
enter
lahf
jmp
cld
shl
fsubrs
ljmp
shr
cli
daa
enter
rol
sub
clc
sub
add
clc
ret
xor
cmp
xor
ret
and
sub
adc
sub
movaps
sbb
ds
xor
pusha
adc
xor
cs
push
sbb
insb
xor
sbb
xor
or
jae
add
cmp
inc
dec
jg
insl
gs
dec
dec
jno
outsb
dec
adc
pop
ja
jae
push
jb
jl
push
fs
dec
popa
inc
jns
inc
pop
push
test
mov
jbe
push
mov
mov
dec
inc
mov
mov
andl
lods
mov
xchg
lods
xchg
cmpsl
mov
sahf
popf
call
lods
loopne
repz
out
mov
mov
xchg
notl
scas
mov
cmc
cwtl
mov
sbbb
std
clc
int3
mov
loop
repz
test
sti
sahf
shl
div
idiv
aam
ffreep
fisubs
stc
sub
frstor
sub
fucomp
sub
xor
leave
idiv
sub
cs
sub
xchg
xchg
mov
mov
call
mov
xchg
jle
push
jg
jle
fidivl
xlat
jmp
push
int3
int3
add
rclb
sub
aaa
aam
adc
xor
aam
fstpt
cmp
cmp
adc
sub
pusha
bound
sbb
ja,pt
add
pop
imul
je
inc
je
jp
add
arpl
pushw
outsb
inc
popa
pusha
dec
outsb
or
jns
push
push
imul
sbb
imul
imul
jns
push
dec
mov
dec
mov
mov
inc
stos
stos
pop
mov
xchg
mov
push
nop
xchg
test
mov
mov
and
call
stos
ljmp
sti
xchg
xchg
mov
mov
notb
lods
cltd
xchg
xchg
cmc
mov
jmp
jecxz
cltd
pushf
cltd
xchg
mov
out
enter
mov
shr
in
ljmp
int3
lret
int
icebp
cli
cli
fcomps
and
out
sub
sub
and
iret
fdiv
enter
aaa
xlat
lret
clc
and
add
ds
and
pop
xlat
cld
xlat
push
rolb
or
daa
cmp
sbb
or
and
fists
add
sub
sub
add
or
je
or
sbb
adc
cmp
jno
aas
sbb
dec
jnp
dec
jnp
fs
bound
dec
inc
jb
sbb
jnp
push
jae
pop
jp
sbb
jle
pusha
pop
insl
mov
push
dec
inc
jp
mov
jnp
je
jle
jge
dec
inc
mov
dec
dec
mov
cmpsl
movsb
cmpsl
push
push
lcall
xchg
nop
stos
mov
subl
lea
sub
mov
mov
mov
hlt
out
sti
ret
lds
in
mov
cwtl
xchg
cmp
loop
in
mov
xchg
adcb
jle
mov
call
loop
loopne
cld
xchg
out
int3
loop
call
loopne
int3
icebp
shl
popf
jmp
xchg
aad
neg
aad
in
fisubs
lret
xor
and
rol
and
lock
ds
xor
aas
fdivrl
fdivs
ret
flds
xor
sub
sub
filds
fmull
aam
add
sbb
xor
sub
cmp
ds
and
gs
fs
cmp
xor
cmp
adc
jno
adc
add
sbb
push
jge
sbb
gs
pop
pcmpgtw
sbb
pop
pop
dec
jo
insb
sbb
jl
push
inc
stos
jp
inc
cmpsb
inc
test
insl
test
inc
dec
dec
mov
dec
push
jp
js
mov
mov
mov
mov
xchg
mov
dec
xchg
mov
lahf
xchg
mov
lcall
mov
sahf
lock
out
mov
cwtl
icebp
ret
lock
in
cmc
lods
cli
cwtl
in
mov
lcall
xor
out
mov
shl
mov
shl
out
jmp
xchg
not
sar
int
clc
repnz
rcr
stc
xlat
into
inc
fsubs
repz
icebp
into
lds
icebp
lret
xor
stc
fcmovnu
and
xor
fcmovu
push
add
and
or
or
adc
or
iret
xor
sub
or
xor
shlb
sub
add
xor
ds
insb
popa
add
cmp
or
xor
or
inc
jle
jle
sbb
jp
add
bound
dec
jge
or
jae
dec
jp
pop
dec
push
pop
dec
jge
pop
cmpsb
dec
insb
inc
pop
bound
js
cmpsb
imul
cmpsl
mov
cmpsb
mov
push
je
mov
pop
mov
orb
sub
ljmp
mov
xchg
jle
aas
jg
jle
cmpsb
pop
dec
mov
test
test
mov
mov
lahf
mov
mov
fwait
repz
jecxz
mov
cmpl
mov
ret
mov
testb
xchg
cltd
out
cmp
or
in
lret
ror
lret
jecxz
jmp
into
fwait
cltd
in
hlt
loopne
lock
ret
fsubp
ret
call
and
xor
sub
repz
aas
cmc
sub
aaa
cld
and
or
or
cmp
lret
sub
rolb
add
or
aam
or
adc
popa
xor
sbb
add
es
sbb
adc
push
push
cmp
ja
adc
sbb
addr16
dec
sbb
gs
jb
popa
inc
adc
or
dec
sbb
dec
sbb
pop
inc
popa
cmpsl
jbe
push
pusha
inc
lods
lods
jns
pop
push
movsl
jbe
mov
pop
push
pop
push
dec
dec
scas
push
mov
mov
stos
sbbb
mov
mov
mov
out
cltd
sahf
mov
mov
mov
loopne
xchg
xorb
hlt
addl
mov
cld
xchg
jmp
xchg
mov
ret
ret
shl
lock
fwait
in
ret
in
out
xchg
lret
cwtl
int3
xchg
negl
loopne
ret
fcomi
fcmovnb
iret
cs
rol
icebp
xor
call
into
lret
xlat
aaa
sub
fnstenv
shlb
cld
clc
daa
flds
lret
add
cs
cmp
adc
rclb
adc
cmp
cmp
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
push
push
push
sbb
mov
add
mov
xor
xor
or
mov
xor
xor
mov
sub
add
sbb
movzwl
mov
movb
or
lea
mov
mov
orl
mov
sbb
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
call
jmp
sub
xor
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
movl
movl
mov
and
mov
xor
mov
adcl
add
movl
jmp
mov
movl
mov
movl
inc
movl
cmp
jb
mov
xor
add
jmp
mov
xor
mov
add
movzwl
mov
movzwl
xor
add
mov
mov
inc
mov
cmp
jne
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
inc
jmp
mov
xor
add
mov
pop
pop
pop
leave
ret
lea
lea
mov
jmp
out
imul
xchg
jle
push
jg
jle
rcrl
cmp
adc
cmp
sub
adc
or
sub
or
or
push
cmp
dec
inc
jno
dec
jge
jg
outsb
jb
push
sbb
dec
dec
dec
imul
jns
pop
outsl
dec
dec
push
inc
pop
jno
mov
jne
push
dec
dec
inc
je
inc
dec
mov
push
push
mov
jnp
mov
inc
mov
scas
mov
nop
dec
mov
nop
xchg
test
lods
cltd
cwtl
mov
mov
mov
mov
loop
mov
mov
mov
xchg
cwtl
loopne
out
xchg
jmp
imul
nop
in
mov
sti
mov
jmp
in
stc
popf
lahf
ljmp
xchg
lcall
fcomp
xchg
and
sub
in
fsubl
sub
sub
cmp
xor
fidivl
ss
fcmovnb
or
sub
or
sub
iret
and
cmp
xor
sub
pop
sub
add
push
add
cmp
add
push
push
jns
imul
bound
adc
sbb
add
arpl
pop
push
fs
adc
push
inc
pop
pop
jne
inc
mov
mov
dec
fs
mov
mov
dec
insb
inc
push
ja
pop
mov
push
pop
pop
mov
xchg
mov
mov
stos
xchg
push
xchg
mov
movsb
mov
lcall
loope
orl
loop
mov
out
mov
xchg
mov
mov
sahf
loope
sti
std
loopne
scas
ljmp
sti
mov
pushf
mov
ret
ret
les
jmp
mov
iret
popf
cmpl
xorl
in
notb
xor
jge
xchg
jle
push
jg
jle
repz
hlt
enter
fbld
std
cmc
out
aad
popf
loop
sub
sub
sub
and
and
sub
xor
das
and
add
ret
fcmovne
or
cmp
or
and
adc
and
xor
adc
or
or
push
adc
add
add
jae
push
sub
adc
adc
adc
adc
inc
adc
jl
sbb
imul
pop
dec
addr16
je
outsb
js
push
pop
jle
pop
push
insl
pop
jae
jae
inc
jno
push
dec
push
dec
jl
inc
push
outsl
inc
stos
cmpsl
inc
dec
ja
lods
jns
mov
inc
pop
mov
mov
cmpl
cltd
mov
stos
mov
xchg
mov
test
mov
xchg
call
repnz
xchg
ret
lcall
cmc
xchg
jmp
xchg
test
clc
cwtl
repz
mov
loopne
cwtl
sahf
in
add
xchg
cmc
repnz
loopne
shl
out
test
aam
fcom
hlt
shl
shlb
es
repz
ret
loopne
and
lret
sub
sub
lret
cs
aaa
mov
xor
sti
aad
sub
movl
sub
adc
and
int
fimull
fdivrs
fcomps
xor
sbb
aas
adc
adc
or
sub
jb
imul
adc
sbb
sbb
add
bound
arpl
jae
dec
push
dec
dec
je
imul
js
insl
push
outsl
ja
jge
mov
jle
push
dec
dec
jle
insb
mov
dec
dec
mov
jnp
mov
pop
mov
andl
lods
stos
mov
push
mov
mov
scas
mov
lea
loop
adcl
and
jle
mov
subb
call
test
mov
mov
xchg
jmp
test
cmc
repz
popf
mov
mov
cld
std
mov
clc
into
out
xchg
cli
xchg
cli
lcall
int
shll
shl
in
fisubl
out
xlat
cli
fsubr
ret
fdivl
lret
int
vpmullw
ss
int3
fxch
ss
xlat
std
rcr
enter
into
and
sub
add
pop
or
adc
adc
sub
add
cmp
cmp
sub
sub
pop
jno
insl
xor
aaa
jg
jg
jge
jle
adc
push
jg
jnp
adc
pusha
or
jno
dec
jo
push
push
sbb
push
sbb
jp
dec
push
popa
jbe
je
imul
test
mov
pop
mov
ja
push
mov
movsb
stos
mov
mov
push
xchg
pop
movsb
xchg
test
lahf
mov
jecxz
cltd
cmpl
orl
mov
call
cmc
popf
sahf
loopne
lods
mov
bnd
sti
xchg
fwait
mov
pushf
lock
int
std
xchg
in
xlat
in
iret
lahf
fwait
lret
icebp
loopne
in
clc
aad
jmp
fsubs
in
and
xor
repz
fcomi
cs
das
sar
rolb
push
cmp
xor
aaa
xor
add
cmp
xor
iret
sbb
adc
adc
pop
fidivrs
sbb
or
push
push
daa
sbb
sub
push
sub
adc
or
cmp
cmp
sbb
js
gs
sbb
sbb
dec
sbb
inc
inc
fs
xchg
test
jecxz
mov
out
in
icebp
repz
jle
adc
jle
dec
push
inc
push
adc
je
inc
pop
inc
inc
inc
jne
push
test
mov
scas
lods
inc
cmpsb
jae
scas
stos
mov
jg
mov
dec
inc
mov
mov
mov
mov
mov
mov
xchg
mov
fwait
popf
cltd
mov
loopne
mov
mul
test
lcall
out
test
jecxz
mov
cli
mov
mov
test
xchg
ror
in
in
rolb
out
out
div
cmc
fsubr
rcr
repnz
aad
hlt
clc
imull
fisubs
ljmp
std
ret
aad
shrb
out
cmp
ret
rcr
and
add
fstpt
and
enter
xor
aas
push
cmp
cmp
add
add
push
sbb
popa
pop
adc
xor
adc
sbb
jle
sbb
cmp
pop
jnp
jg
inc
dec
cmovnp
outsb
push
sbb
jae
dec
push
inc
je
inc
cmpsl
jl
dec
stos
jns
dec
pop
push
dec
push
push
mov
jno
push
jl
mov
mov
xchg
mov
mov
test
nop
fwait
mov
mov
lea
pop
pop
mov
in
in
mov
xchg
ljmp
cltd
ret
fwait
out
fwait
popf
lahf
in
scas
xchg
cwtl
out
mov
icebp
xchg
xor
leave
sti
lret
repz
std
lock
in
ljmp
cmc
loop
sar
lret
and
cld
in
xor
and
and
sti
fmulp
lret
add
shll
leave
and
mov
mov
sub
mov
xorl
add
push
mov
sub
orl
push
movl
push
movl
pushl
sbbl
call
push
push
subl
push
xorl
lea
orl
call
movl
mov
movl
cmp
movl
je
xor
inc
jmp
mov
cwtl
xchg
clc
mov
repz
orl
into
jle
mov
jle
lock
rolb
mov
call
ret
stc
xchg
popf
repnz
sub
sti
and
sub
shlb
push
lds
shlb
sub
aas
mov
push
movl
push
orl
push
orl
call
cmp
jne
pushl
call
movl
mov
movl
cmp
je
xorl
lea
andl
push
notl
push
call
xor
movl
jmp
nop
mov
mov
cmp
orb
mov
and
ds
jle
mov
jle
sub
fadds
xor
aad
xor
sub
and
fildll
rolb
lret
xor
xor
xor
sbb
das
sbb
push
arpl
pop
bound
xor
add
jmp
xor
push
mov
call
cmp
je
push
andl
push
andl
call
jmp
lea
movzwl
mov
add
mov
mov
mov
adc
lea
sbb
mov
xor
mov
or
mov
mov
adc
mov
mov
adcl
push
adcl
mov
xor
sbbl
push
orl
mov
addl
add
mov
not
mov
movl
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
orl
xor
add
sbbl
mov
mov
test
movl
je
mov
mov
adc
mov
orl
xor
sbbl
add
orl
imul
mov
subl
xor
xor
add
xorl
add
imul
movl
cmp
movl
jne
andl
pushl
orl
pushl
movl
call
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
or
mov
mov
mov
mov
movl
mov
neg
mov
mov
mov
mov
xor
inc
push
mov
lea
push
push
call
mov
add
cmp
jb
xor
inc
push
mov
lea
push
push
call
mov
add
cmp
jb
xor
inc
push
mov
lea
push
push
call
mov
add
cmp
jb
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
pop
pop
cmp
je
mov
mov
xor
add
imul
mov
jmp
call
lea
mov
mov
mov
mov
lea
push
pushl
pushl
pushl
call
mov
mov
pop
leave
ret
test
cwtl
cltd
mov
pop
xor
repnz
lahf
lock
jae
sub
lahf
lahf
jle
push
jg
jle
cs
rcr
add
adc
enter
xor
pop
add
fldcw
addr16
outsb
pop
fs
jno
xor
aaa
sbb
push
ds
sbb
inc
jg
outsl
insl
adc
jge
dec
jg
push
ja
push
push
push
sbb
mov
inc
gs
dec
inc
dec
movsb
jns
push
insb
push
scas
test
mov
mov
mov
pop
mov
mov
inc
lods
stos
mov
mov
dec
mov
xchg
mov
fwait
mov
mov
sbbl
mov
call
mov
out
in
mov
in
in
out
cld
repnz
mov
loope
mov
test
xchg
les
lcall
xlat
lret
ljmp
ror
and
cld
shl
std
popf
lock
sub
int
and
ret
xor
int3
fcmovne
sub
faddp
aam
xor
and
add
sub
enter
sub
cmp
xor
adc
das
push
sub
popa
or
and
cmp
aas
pop
sub
addr16
sub
popa
or
jae
or
sbb
js
sbb
pop
add
or
sbb
adc
or
dec
adc
popa
dec
push
fs
jno
jbe
jge
bound
pop
pop
js
lods
pop
pop
jb
movsl
dec
ja
mov
mov
jne
push
scas
push
jnp
inc
push
push
pop
mov
movsb
mov
popl
mov
push
mov
xchg
mov
mov
loope
fwait
scas
loopne
fwait
mov
mov
lea
mov
mov
push
ljmp
lock
cwtl
mov
imul
testl
xchg
xchg
mov
xchg
xchg
jecxz
hlt
mov
mov
jg
jle
addb
mov
mov
in
shl
fdiv
aad
fadd
faddp
sahf
int
es
and
sub
ret
fcmovb
cs
ffree
sub
cmp
aam
xor
leave
add
int3
cmp
and
add
push
aas
flds
or
rolb
shll
adc
or
ficoml
add
mov
push
sbb
add
sbb
insb
or
add
add
imul
je
jno
jl
jno
pop
pop
push
outsl
or
pusha
adc
inc
outsb
outsl
push
pop
pop
je
push
dec
dec
sbb
js
pop
inc
dec
imul
test
push
jne
pop
jne
mov
pop
lods
push
jl
lods
cmpsb
mov
inc
scas
mov
mov
mov
mov
mov
push
lods
scas
xchg
xchg
xchg
stos
mov
jecxz
test
test
lahf
xchg
test
cwtl
loop
mov
cmc
mov
mov
mov
mov
mov
mov
sti
enter
ret
mov
ret
lock
xchg
call
fdivr
ret
in
faddp
fcomi
hlt
test
jmp
stc
call
cmp
sar
lds
hlt
fdivl
stc
cmp
std
rol
shlb
into
shll
push
or
sub
add
cmp
fldt
aaa
adc
and
es
and
cmp
imul
add
adc
adc
sbb
dec
arpl
jns
add
inc
pop
gs
adc
inc
push
dec
push
push
outsl
pop
pop
push
push
mov
pop
pop
test
jle
jae
jno
movsl
push
pop
mov
inc
scas
jne
mov
jnp
dec
cmpsl
mov
xorb
mov
mov
sar
xchg
ss
xchg
shlb
int
pop
jecxz
jle
jg
jle
lods
lods
test
cmpsb
mov
stos
pushf
sahf
adcb
loopne
adcb
in
out
adcl
cli
xchg
pushf
xchg
jmp
mov
in
ljmp
mov
sar
xchg
std
loop
inc
test
ljmp
iret
lret
xchg
out
into
sahf
cwtl
fwait
ljmp
cld
sar
cltd
sub
fcmovu
sub
out
and
ror
cld
int
xor
xor
ds
xor
rol
and
and
and
xor
int3
int3
xlat
adc
ds
or
sub
adc
sbb
arpl
daa
or
sub
or
pushw
or
imul
inc
jg
jge
jns
dec
add
or
adc
dec
fs
ja
jo
push
sbb
push
mov
addr16
cmpsb
jl
mov
push
pop
push
mov
pop
jne
mov
push
dec
push
mov
mov
inc
mov
pop
mov
test
mov
push
test
lods
pop
mov
mov
pop
nop
ljmp
repz
mov
loope
mov
test
div
sub
cmc
sahf
jecxz
lea
mov
test
cwtl
in
out
popf
std
mov
cld
into
iret
rol
xchg
sti
sti
in
sti
std
fcmove
jecxz
clc
sahf
and
enter
lret
out
call
cmc
int3
iret
and
neg
aaa
sarl
sar
fstp
ss
sub
cmp
lds
xor
and
xor
sbb
xor
adc
adc
cmp
sbb
insb
pop
popa
arpl
push
or
push
pcmpeqb
jle
xor
ds
jle
cmp
mov
mov
jmp
jg
jg
jle
push
jg
jle
arpl
punpckldq
pusha
pusha
dec
or
inc
dec
push
inc
inc
dec
sbb
adc
dec
push
arpl
sbb
pop
push
movsb
jge
push
scas
inc
mov
dec
mov
inc
pop
inc
inc
pop
stos
addl
pop
mov
mov
fwait
lea
mov
popf
in
mov
mov
mov
in
out
out
sahf
mov
jecxz
out
lret
lock
call
lods
mov
sahf
mov
cltd
ret
xchg
mov
stc
jmp
fwait
in
out
cltd
call
std
ret
shr
fcomp
in
and
es
and
in
int3
lret
xor
das
aaa
lret
sub
fisubrs
fxch
add
faddl
cmp
aad
movl
add
cmp
rorl
adc
sub
and
sbb
push
sbb
sub
sub
add
arpl
cmp
or
adc
inc
push
insl
add
adc
push
jnp
inc
inc
or
push
jae
inc
jbe
dec
dec
push
imul
pop
push
pop
push
sbb
inc
inc
inc
inc
pop
push
inc
je
test
test
inc
mov
lods
push
scas
dec
mov
mov
test
mov
mov
xchg
lods
stos
mov
popf
pop
xchg
mov
and
loope
in
stos
mov
in
test
mov
in
out
hlt
mov
mov
mov
repnz
mov
mov
xorl
stc
mov
mov
mov
in
std
imul
leave
leave
out
xchg
mov
cwtl
hlt
aam
cli
and
sub
icebp
cli
fildll
aad
leave
fucomi
daa
les
sub
xlat
fcmovnbe
xor
sub
mov
xchg
test
dec
mov
out
xchg
out
cmpb
jge
out
jle
jle
jle
xor
stc
fimull
bswap
sub
adc
add
xor
sub
or
cmp
sbb
or
bound
or
jp
insl
jle
js
cmp
cmp
or
dec
push
bound
popa
push
jbe
inc
jnp
ja
sbb
jge
pop
push
push
pop
jbe
cmpsb
pop
movsb
inc
gs
jo
inc
push
inc
inc
mov
push
inc
mov
mov
pop
push
pop
adcl
push
mov
cmpsl
scas
mov
in
push
push
notl
push
mov
mov
push
movl
mov
mov
mov
movl
mov
movl
cmp
je
mov
adcl
xor
add
movl
cmp
movl
je
add
mov
xor
andl
add
push
sbbl
pushl
addl
pushl
pushl
subl
call
mov
mov
movl
mov
mov
mov
jmp
mov
xor
add
cmp
movl
jne
and
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
xchg
xchg
mov
push
mov
repnz
hlt
jecxz
xchg
call
insl
out
out
jle
jg
jle
scas
mov
lea
mov
xchg
cltd
mov
movsb
cmpsb
xchg
lcall
jmp
lods
in
divl
xchg
xchg
cltd
jmp
loop
lahf
and
mov
mov
nop
nop
mov
cltd
out
in
xchg
xchg
rorl
in
lock
call
in
in
in
and
fxtract
sti
clc
and
shl
aam
fsubr
in
and
iret
xor
shl
das
cmc
cmp
cld
aaa
clc
ret
cmp
sar
fstpt
ss
xor
sub
sub
and
sbb
push
push
add
xor
push
and
insl
outsb
arpl
sub
add
add
xor
nopl
outsb
jbe
inc
jg
pop
or
push
push
inc
addr16
dec
or
push
push
fs
push
dec
dec
inc
push
outsl
sbb
jae
jno
push
test
imul
jnp
js
mov
dec
outsl
dec
dec
mov
mov
mov
inc
mov
pop
dec
mov
mov
test
pop
mov
pop
mov
xchg
mov
ljmp
mov
xchg
loopne
xchg
mov
sahf
out
mov
sti
xchg
xchg
call
mov
lcall
sbbb
in
clc
mov
out
loopne
shl
xlat
ljmp
pushf
repnz
out
stc
hlt
rol
and
daa
leave
sub
int
ret
and
lds
icebp
shr
fdecstp
and
cld
fnstsw
aaa
cmp
ds
add
sub
sub
sub
xor
rcl
sub
add
fnsave
pusha
adc
daa
xor
add
push
gs
insl
cmp
jbe
or
adc
add
push
inc
mov
mov
mov
repz
std
lea
jno
in
jle
jg
jle
push
or
inc
pop
jns
dec
add
dec
or
adc
dec
pop
pop
push
jae
outsb
sbb
inc
push
imul
dec
cmpsl
scas
scas
jbe
mov
mov
pop
jle
mov
inc
mov
movsl
dec
push
mov
dec
mov
push
xchg
pop
pop
push
pushf
out
mov
lcall
lods
xchg
lock
xchg
jmp
mov
mov
out
cltd
xchg
test
mov
out
mov
call
mov
std
sahf
in
cwtl
test
icebp
lds
xchg
xchg
xchg
cli
in
in
imul
jecxz
icebp
neg
fildll
into
sub
in
ret
shr
shrb
fnstenv
sub
sub
ret
xlat
add
ss
or
fcmovne
xor
das
das
aaa
sub
sbb
sbb
sub
adc
fcmovu
cmp
xor
imul
or
or
jae
jno
popa
imul
imul
jp
adc
pop
inc
push
sbb
or
or
dec
inc
outsb
or
dec
inc
push
je
push
dec
dec
pop
inc
inc
popa
mov
jnp
inc
inc
mov
stos
cmpsl
inc
je
push
movsl
dec
pop
inc
push
js
jg
pop
inc
scas
jns
pop
inc
xchg
xchg
test
xorl
loopne
mov
addl
loope
popf
call
mov
in
mov
jmp
lahf
std
ret
mov
and
out
xchg
mov
mov
fwait
loope
lahf
mov
jmp
jecxz
out
jmp
ret
fcomps
lock
popf
icebp
cld
fcomi
jmp
in
and
repz
and
out
sub
xor
mov
mov
loope
xchg
out
in
in
sub
jl
jmp
jle
jg
jle
mull
and
xor
sub
enter
aas
cmp
rolb
add
adc
sbb
and
cmp
aas
sbb
sbb
pop
imul
add
or
adc
cmp
inc
sbb
pop
push
add
dec
inc
js
push
inc
push
push
or
jl
sbb
push
mov
push
jge
inc
bound
push
lods
jb
cmpsl
dec
inc
scas
dec
dec
push
dec
pop
mov
mov
dec
xchg
mov
pop
mov
test
mov
mov
mov
xchg
pop
mov
lcall
jecxz
xchg
mov
mov
out
mov
jecxz
sti
inc
cld
scas
loop
icebp
mov
mov
mov
in
xchg
cmc
xchg
add
lcall
out
loop
notl
aam
shr
lahf
sahf
jecxz
and
jmp
dec
loope
sar
xor
shlb
cmc
cli
sub
incb
das
das
cmp
and
aam
sub
cmp
fdivrs
fnstenv
int
add
and
sub
xlat
int
ficoml
fisttps
cmp
or
sbb
and
adc
adc
arpl
pusha
jp
popa
adc
or
pusha
addr16
dec
inc
ja
dec
jns
outsb
jl
fs
bound
jo
dec
adc
dec
mov
stos
jle
jns
js
jnp
pop
inc
jle
inc
stos
imul
mov
jge
jge
push
test
dec
mov
mov
test
mov
mov
mov
adcl
mov
lods
mov
lods
mov
mov
mov
hlt
mov
out
out
out
out
addl
and
mov
mov
rcrl
sbb
mov
xchg
testl
jmp
xchg
lret
pushf
int3
jmp
test
rcrb
shl
int
neg
lahf
out
loope
hlt
rcr
and
and
stc
call
iret
hlt
fdiv
shrb
ds
ds
push
and
add
aam
push
into
and
xor
or
push
add
cmp
sub
adc
adc
pop
fistpl
and
pop
sbb
and
aas
jae
sub
xor
popa
arpl
push
je
pusha
or
jle
or
dec
imul
sbb
inc
push
inc
adc
or
jno
je
pop
insb
push
jl
jl
bound
push
scas
test
jno
inc
mov
je
inc
jg
jge
jle
mov
mov
movsl
pop
test
dec
mov
push
mov
test
sbbl
jmp
test
imul
mov
mov
popf
repz
mov
loopne
mov
mov
mov
mov
jecxz
test
in
loope
rorb
in
lret
shll
into
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
adc
movl
movl
movzwl
xor
mov
push
movzwl
sbb
mov
push
movzbl
sbb
mov
xor
orl
push
movl
mov
orl
add
sbbl
mov
andl
mov
xor
add
adcl
mov
xor
movl
mov
xor
movl
add
movl
cmp
je
movl
jmp
xchg
fwait
cltd
dec
inc
mov
mov
adc
push
into
jle
mov
jle
or
push
sbb
xor
jnp
sbb
jl
jg
sbb
sbb
push
or
data16
push
pop
or
pop
pop
imul
jns
inc
push
push
dec
jg
mov
inc
add
hlt
and
xor
orl
mov
add
sub
movl
cmp
jb
movl
cmpl
je
cmpl
jne
call
xor
or
dec
mov
jmp
mov
mov
sub
mov
mov
adc
xor
xor
adc
lea
mov
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
sbbl
add
imul
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
mov
sub
mov
sub
cmp
movl
jae
mov
mov
add
mov
mov
orl
mov
xor
sbbl
add
movl
jmp
xchg
xchg
mov
sbb
orb
and
hlt
sbb
jle
jle
lods
jg
insb
stos
jo
inc
insl
push
push
mov
jno
mov
pop
pop
dec
mov
inc
cmpsb
inc
popl
xchg
mov
cmpsb
lcall
loop
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
xor
xor
lea
mov
xor
add
imul
mov
mov
sub
cmp
mov
mov
jae
xor
xor
lea
jmp
adcb
xchg
pop
iret
pop
mov
xchg
loop
out
in
test
in
sarb
iret
jle
mov
jle
push
xchg
lods
pop
out
cmpl
mov
in
hlt
mov
cwtl
mov
mov
mov
cwtl
fwait
mov
cmc
mov
sti
xor
xor
lea
mov
xor
add
imul
mov
mov
sub
cmp
mov
mov
jae
xor
xor
lea
jmp
xor
xor
lea
mov
xor
add
imul
mov
mov
sub
cmp
mov
mov
jae
xor
xor
lea
jmp
xor
xor
lea
mov
xor
add
imul
mov
mov
sub
cmp
mov
mov
jae
xor
xor
lea
jmp
xor
xor
lea
mov
xor
add
imul
mov
pushl
mov
add
push
call
add
mov
mov
xor
mov
sub
mov
mov
xor
add
imul
sub
cmp
jbe
pop
pop
pop
leave
ret
mov
xchg
adcl
in
pushf
repnz
add
mov
mov
jle
push
jg
jle
popf
es
fisubrl
ret
sub
xor
and
aad
int3
cmp
xor
aam
fisubl
std
cld
cmp
xor
and
add
cs
sub
sub
aaa
adc
sbb
or
or
cmp
xor
xor
pushw
sbb
add
adc
ja
or
or
or
cmp
add
inc
cmp
jne
jge
pop
inc
imul
push
ja
pop
imul
inc
mov
mov
inc
jnp
inc
pop
lods
mov
dec
jae
push
pop
test
jl
dec
pop
mov
push
push
push
mov
sbbl
pop
orb
push
movsl
xchg
test
mov
fwait
push
loop
lea
mov
repz
out
mov
lock
sti
mov
bnd
popf
mov
call
mov
std
hlt
loop
nop
cltd
loopne
xchg
mov
jmp
sar
loope
sti
call
leave
fsubl
es
and
mov
lret
repnz
and
aaa
xlat
cmc
fbstp
cmc
aad
and
enter
lmsw
push
adc
adc
sbb
and
cmp
xor
cmp
popa
cmp
add
cmp
or
adc
cmp
jb
jp
or
inc
sbb
ja
dec
bound
inc
inc
femms
push
addr16
arpl
dec
gs
adc
push
inc
cmpsl
movsb
inc
push
inc
dec
inc
mov
dec
test
scas
jne
push
mov
jae
inc
pop
cmpsb
inc
push
inc
mov
push
xchg
mov
mov
xchg
push
lcall
pop
mov
loopne
mov
xchg
mov
mov
pop
mov
popf
addb
test
jle
push
jg
jle
addb
cmpl
lcall
in
inc
lock
xchg
xchg
in
xchg
mov
mov
cltd
sti
mov
xchg
test
in
in
ret
mov
ror
xchg
ljmp
jmp
out
test
es
jmp
cli
daa
int3
aam
and
cmp
pushl
shll
rol
aam
shlb
add
or
sbb
pop
sbb
sbb
arpl
pusha
adc
xor
jno
sbb
xor
insb
or
insb
or
cmp
jge
inc
insl
inc
inc
inc
pusha
add
imul
push
addr16
ud2
or
inc
jp
push
outsl
push
jo
insb
push
push
jne
addr16
mov
mov
push
mov
mov
insl
dec
xorb
addl
stos
mov
cmpsb
pop
mov
fwait
nop
push
xchg
push
mov
mov
jecxz
mov
out
lahf
pop
subb
in
in
xchg
xorl
std
hlt
addl
test
loope
repz
sti
in
lcall
in
ret
loop
cwtl
lret
out
loopne
inc
lret
repz
ror
fcomps
lahf
loop
out
repz
daa
icebp
sar
stc
cmc
ljmp
sub
not
sub
int
fidivrs
sar
clc
cmp
ds
aam
rol
and
adc
xor
sub
rcrl
add
or
pop
pop
cmp
arpl
insl
sub
pop
or
pusha
adc
add
xor
cmp
adc
add
dec
jnp
or
inc
add
push
push
outsl
inc
pop
sbb
dec
push
pop
pop
bound
xchg
mov
cltd
xor
lock
test
add
push
jg
jle
bound
jne
inc
dec
jne
inc
movsl
pop
mov
mov
mov
pop
mov
mov
inc
mov
mov
push
mov
test
mov
mov
mov
xchg
xchg
loope
pop
mov
addb
xchg
in
xchg
cmp
icebp
xchg
fwait
ljmp
sahf
test
mov
xchg
out
xchg
xchg
stc
in
sar
nop
in
push
rorl
xchg
shl
out
sti
neg
cmc
leave
rcrb
fyl2x
fadd
out
and
xor
sub
ss
lock
sub
es
ss
rol
sarb
or
fcmovnbe
add
fisttps
int3
iret
push
xor
adc
add
xor
and
pop
xor
cmp
pusha
and
pop
xor
outsl
push
or
imul
js
cmp
outsl
sbb
inc
inc
or
push
insb
gs
dec
sbb
sbb
ja
pop
dec
dec
pop
jne
pop
pop
push
jbe
jno
pop
push
imul
mov
push
jne
pop
inc
mov
mov
mov
mov
mov
mov
pop
stos
push
nop
subb
test
mov
mov
mov
in
mov
mov
stos
mov
mov
repnz
repz
mov
cli
xchg
cli
xchg
xchg
incb
out
cld
orb
ret
leave
in
repnz
into
out
int3
out
sahf
pushf
cmc
ret
out
lock
shl
jecxz
sub
leave
das
sub
sub
fcmove
fadd
stc
xor
into
cld
cmc
cmp
lds
xlat
cmp
daa
and
es
adc
es
xor
push
das
xor
mov
sbb
insl
test
out
test
push
jg
jle
sbb
cmp
or
add
or
jb
add
cmp
imul
adc
sbb
jp
dec
imul
dec
jb
adc
dec
jo
pop
inc
push
dec
adc
sbb
push
push
pop
cmpsb
push
insl
inc
jae
push
mov
movsl
insl
inc
push
cmpsl
stos
push
test
scas
movsb
pop
dec
push
lods
jg
mov
mov
lea
scas
mov
mov
push
pop
cwtl
scas
mov
pushf
loop
mov
test
mov
mov
lock
xchg
mov
xor
cli
mov
mov
mov
mov
ret
negl
ljmp
mov
xlat
cmc
cli
out
sti
out
out
and
loopne
fst
int
and
fcmovb
ljmp
fadd
in
ss
repnz
and
sub
hlt
xor
xor
sub
or
fldt
or
es
das
add
push
sbb
sub
xor
pop
adc
xor
push
gs
cmp
push
sub
sub
adc
outsb
inc
sbb
popa
push
je
add
imul
insl
popa
inc
or
push
inc
gs
adc
dec
sbb
dec
cmpsl
pop
push
dec
movsl
jle
jp
inc
dec
inc
mov
jg
dec
insl
mov
jnp
lods
pop
ja
dec
test
js
pop
mov
mov
mov
cmpsb
mov
popf
mov
addb
xchg
out
movsl
mov
out
cltd
mov
hlt
xorb
xchg
mov
mov
lea
mov
call
mov
addl
out
ljmp
nop
cmpl
call
loopne
cmp
enter
jle
mov
leave
jmp
out
rcr
shr
enter
in
fsubp
ret
icebp
hlt
sahf
cmc
es
fadd
sub
es
ss
sarl
leave
cmp
cmp
ror
ret
push
pop
and
and
add
lds
ds
xor
xor
push
mov
push
not
mov
or
push
mov
xor
xor
and
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adc
mov
and
movl
xorl
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
pop
test
pop
jne
mov
xor
add
leave
ret
xchg
mov
cltd
and
mov
xchg
mov
mov
push
jg
jle
fisubrl
fcmovnbe
cmp
fcomp
push
pusha
packsswb
add
push
popa
push
sub
aas
insb
add
cs
or
or
je
xor
or
addr16
jnp
add
add
sbb
sbb
dec
push
push
inc
outsb
push
gs
dec
dec
jb
jae
push
ja
mov
inc
jnp
outsb
mov
jl
push
scas
mov
pop
push
mov
jl
mov
pop
inc
push
mov
pop
mov
pop
cmpsl
cmpsl
mov
lea
pop
mov
lcall
mov
orb
sub
out
mov
mov
out
mov
out
sti
cmc
loopne
mov
loope
repnz
sti
repnz
xchg
ljmp
xchg
mov
mov
pushf
xchg
lret
loopne
ror
sti
lcall
ffree
fsubs
sti
loope
sti
std
daa
inc
enter
sub
mulb
shrl
cmp
aaa
lret
xor
ds
and
pop
add
sub
and
and
add
sub
sub
ds
sub
cmp
pop
or
imul
or
adc
jns
jb
adc
jno
jp
adc
inc
add
jno
add
sbb
jae
dec
or
jne
pop
sbb
push
jo
pusha
jno
push
pop
push
push
jp
dec
pop
mov
push
mov
inc
inc
cmpsl
mov
js
push
mov
mov
push
push
pop
mov
lods
mov
mov
xchg
scas
mov
mov
mov
test
jmp
cwtl
repnz
clc
in
popl
in
test
out
jecxz
clc
icebp
ljmp
xchg
add
lds
mov
xchg
nop
inc
xor
insl
xchg
xchg
mov
mov
test
push
mov
push
jle
push
jg
jle
lret
call
in
in
ret
out
xlat
icebp
rcl
stc
cli
fxch
and
hlt
stc
idiv
shrl
es
in
es
and
and
sub
iret
leave
fisubrl
sub
xor
into
ds
fnstsw
cmp
and
cmp
lret
xlat
or
or
fisubs
or
es
gs
sbb
or
pop
pusha
add
xor
push
add
cs
or
jg
inc
pop
jl
pop
arpl
sbb
adc
dec
dec
gs
dec
adc
adc
sbb
pop
pop
inc
sbb
jp
adc
inc
addr16
jnp
mov
pop
lods
pop
cmpsl
pop
push
mov
insl
mov
mov
mov
inc
test
cmpb
pop
test
test
xchg
xchg
xchg
push
mov
mov
mov
in
adcb
xchg
jecxz
sti
cwtl
repz
mov
xchg
ljmp
xchg
sbbl
test
xchg
popf
in
iret
ret
decl
call
ror
and
aad
fsubr
fcmovnb
out
sahf
stc
cld
ret
loope
int
xlat
mull
fyl2xp1
lret
aam
and
add
rcl
enter
pop
sub
int3
das
xor
rcl
xor
pop
fsubs
pusha
sub
push
cmp
or
fs
insl
push
pusha
xor
or
outsl
arpl
push
jnp
js
add
je
pushw
or
adc
insl
arpl
pop
gs
adc
push
jns
inc
inc
mov
pop
pop
pop
pop
jo
dec
mov
mov
lods
push
dec
pop
mov
dec
jns
pop
push
dec
pop
mov
mov
mov
push
mov
mov
call
ljmp
mov
jle
jg
jle
mov
movsl
mov
adcb
cmpsb
pushf
popf
cmpl
in
loope
xchg
sti
sahf
sub
ret
ret
out
xchg
adcb
repnz
jmp
icebp
cwtl
loope
sahf
cmc
addl
iret
xchg
out
repz
stc
repz
int
cld
and
ret
in
jecxz
std
jmp
rol
aad
es
cs
rolb
shll
and
add
adc
add
add
adc
or
adc
cmp
das
aad
push
cmp
cmp
xor
xor
pop
pop
pop
or
add
aas
add
sbb
push
gs
or
cmp
js
inc
pusha
add
jne
or
push
inc
adc
push
adc
jne
outsb
jo
sbb
sbb
cmpsb
jb
inc
test
lods
test
inc
jno
jno
stos
dec
mov
scas
pop
dec
andl
mov
orb
mov
adcb
mov
xchg
xchg
mov
mov
call
cltd
xchg
out
loopne
jecxz
jecxz
mov
mov
std
cltd
pushf
cmpb
cmc
mov
xchg
xchg
testb
in
dec
sti
xchg
pushf
mov
fcmovbe
shr
sahf
xchg
int
shl
shl
cld
daa
loopne
test
and
cs
das
hlt
cmp
hlt
cmp
ds
add
add
fildl
rcl
sub
pinsrw
or
daa
das
add
sub
and
push
aam
aad
sbb
xor
cmp
gs
imul
sbb
push
push
outsl
or
insl
or
cmp
jns
ja
inc
outsl
jge
inc
sbb
sbb
mov
cltd
xchg
out
into
enter
test
mov
jle
jg
jle
or
push
jo
dec
addr16
adc
jle
dec
sbb
jb
ja
jl
inc
jp
movsb
inc
mov
mov
dec
ja
pop
mov
mov
mov
andb
orl
movsb
scas
lcall
pop
mov
jecxz
mov
mov
test
mov
hlt
mov
in
icebp
jmp
out
out
lahf
roll
mov
xchg
ljmp
bnd
test
cld
out
mov
popf
lret
aam
xchg
repnz
clc
xchg
int
aad
pushf
out
shl
out
jmp
shlb
sub
lret
and
sub
shlb
cld
cmp
add
les
aad
fisttpl
int3
rcr
cmp
pop
and
adc
rdmsr
aaa
xor
xor
sbb
sub
add
xor
add
xor
add
sbb
add
or
push
data16
cmp
inc
fs
pusha
outsl
or
outsb
dec
push
inc
or
push
je
dec
push
jle
arpl
outsl
dec
mov
dec
inc
pop
dec
js
dec
push
dec
push
movsl
jo
dec
outsb
pop
dec
push
jnp
push
mov
mov
pop
inc
andl
addl
scas
push
mov
test
xchg
jmp
pushf
xrelease
mov
mov
call
xchg
lds
xchg
fwait
xchg
mov
repnz
jecxz
loop
pushf
sti
lret
lret
enter
mov
xchg
pushf
xchg
int3
icebp
rcrl
call
aad
cmc
ror
in
mov
push
xor
mov
mov
notl
add
xor
movl
movl
movl
cmp
jne
sbb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
mov
xchg
mov
outsl
shl
in
out
and
push
sub
call
jg
jle
out
and
and
div
sti
sub
aad
xor
ror
xor
add
es
roll
adc
roll
xor
cmp
fdivrs
sbb
cmp
sbb
bound
add
jno
ss
je
cmp
or
cmp
add
inc
cmp
inc
fs
outsb
dec
arpl
dec
popa
dec
cmovns
dec
adc
inc
sbb
push
pop
jnp
sbb
jo
js
mov
inc
dec
dec
mov
jl
dec
push
inc
jno
scas
lods
mov
dec
mov
test
pop
inc
mov
inc
push
mov
pop
cmpl
push
xchg
popf
sahf
lea
mov
jecxz
jmp
xchg
lock
mov
loop
mov
repz
fwait
lock
nop
xchg
in
mov
in
ljmp
cld
sti
call
idiv
xchg
negl
out
mov
call
rol
clc
xlat
ret
enter
and
imul
leave
leave
ror
clc
and
xor
std
leave
lret
cmp
leave
lret
rcr
ss
rcr
es
add
xor
cmp
add
aam
and
xlat
push
shlb
cmp
fsts
push
arpl
add
imul
imul
sbb
xor
jg
imul
sbb
pop
push
outsb
push
arpl
push
adc
sbb
push
jnp
pop
push
inc
pop
jg
inc
dec
inc
imul
cmpsb
inc
cmpsb
mov
mov
mov
lods
mov
mov
mov
mov
cmpsl
xorl
mov
stos
mov
mov
sub
lods
popf
jmp
lea
lea
out
xchg
xchg
mov
loopne
stos
xor
jle
push
jg
jle
test
out
icebp
icebp
call
mov
lret
mov
cwtl
mov
lock
lcall
icebp
test
out
call
enter
hlt
sti
les
and
ret
jecxz
pushf
sar
icebp
and
and
and
int3
fnsave
cs
xor
sub
sar
or
cmp
or
add
and
adc
adc
add
xlat
rorl
sbb
cmp
cmp
adc
gs
sbb
or
jo
imul
sub
fs
jno
arpl
popa
or
jg
bound
popa
push
dec
jg
push
jae
push
pusha
dec
ja
dec
push
push
insl
jl
push
inc
jne
mov
jge
jl
cmpsl
dec
outsb
jae
jle
inc
cmpsb
inc
inc
scas
mov
mov
mov
xchg
push
xorl
xchg
xchg
mov
mov
mov
mov
jecxz
mov
pop
lcall
xchg
mov
xchg
mov
mov
mov
mov
hlt
mov
mov
lea
cmp
ret
in
stc
ljmp
clc
xabort
aad
xlat
and
into
out
neg
out
sub
in
aad
and
jmp
cld
imul
fcmovne
into
xor
ds
stc
cmp
xor
aad
cmp
or
cmp
cmp
xor
int3
xlat
sub
or
sub
xor
sbb
sbb
imul
adc
xor
gs
je
adc
ja
sbb
outsb
arpl
ja,pt
jle
je
add
or
imul
dec
imul
jle
pop
jb
pop
jo
jbe
push
pop
push
jo
push
ja
jnp
xchg
mov
cltd
daa
fldcw
in
in
in
out
aaa
leave
jmp
test
jle
push
jg
jle
pop
imul
gs
jge
inc
inc
dec
push
push
pop
movsl
mov
mov
mov
mov
mov
mov
test
mov
fwait
push
xchg
pushf
push
mov
scas
pop
lods
pop
test
cltd
scas
mov
cli
repz
in
mov
clc
ret
xor
xorb
cli
hlt
stc
icebp
jmp
popf
popf
hlt
lock
icebp
cld
popf
out
std
in
fwait
mov
out
jmp
xchg
neg
in
shl
and
and
jecxz
leave
iret
aad
into
jmp
shlb
jmp
hlt
ror
fisubs
lret
ret
xor
rolb
fisttps
enter
and
movups
cmp
aaa
push
or
sub
add
cmp
cmp
pop
sbb
imul
or
push
sbb
jge
popa
adc
jae
adc
push
or
dec
sbb
dec
inc
inc
outsl
dec
inc
dec
ja
outsb
push
sbb
pop
insl
push
dec
inc
pop
pop
inc
push
inc
jge
pop
jge
test
jge
push
mov
insb
dec
test
push
test
mov
pop
inc
push
mov
pop
dec
mov
movsb
test
addb
lahf
mov
lods
test
xchg
in
mov
lock
orl
cli
cli
mov
ret
repnz
repz
lahf
test
in
jecxz
hlt
nop
clc
cli
jecxz
hlt
popf
mov
int
lret
in
in
rol
pushf
cld
call
sar
and
cld
out
std
in
lock
icebp
lock
and
cmp
fxch
fdivrs
fdivrp
aas
and
shlb
xor
sarb
lds
and
adc
ror
pop
int
xor
xlat
push
sub
and
mov
lea
and
out
popf
jmp
hlt
in
pop
ljmp
jg
jle
fstpl
sbb
cmp
cmp
outsl
gs
add
sbb
jo
jns
or
jl
sbb
add
or
jg
dec
dec
jnp
or
dec
jb
pop
push
adc
outsb
push
push
mov
jbe
popa
inc
inc
inc
mov
inc
dec
insb
ja
jp
test
mov
push
pop
push
mov
push
orb
pop
movsl
pop
test
stos
push
cmpsb
nop
scas
mov
fwait
mov
xorl
mov
out
in
ljmp
ljmp
loopne
repz
out
mul
in
test
cwtl
mov
fwait
popf
div
clc
idivb
sar
std
call
mov
loope
xchg
xchg
in
stc
hlt
in
lcall
daa
cmc
rol
fcmovu
ret
cs
xlat
xor
clc
hlt
aam
fidivrs
ret
xor
or
or
add
sub
cmp
cmp
cs
adc
pusha
add
pusha
cmp
add
add
jne
insl
xor
adc
outsl
adc
jp
inc
bound
inc
add
gs
dec
dec
push
pcmpgtd
pop
adc
outsl
bound
jg
mov
push
inc
lods
dec
dec
jle
push
dec
dec
scas
jae
push
test
js
orb
inc
mov
lods
push
mov
stos
xchg
mov
xchg
mov
mov
mov
cmpsl
sub
in
mov
xchg
xchg
cmc
mov
out
mov
pushf
xchg
testb
adcb
std
mov
sub
xchg
loopne
mul
roll
repnz
aad
test
xchg
xchg
mov
mov
mov
cmp
push
jle
jle
cltd
lock
and
sti
xlat
popf
out
in
sub
daa
es
divl
cs
xor
std
iret
fsubs
aad
std
and
ror
sub
das
and
or
push
or
push
pop
das
adc
das
or
xor
xor
add
add
sbb
adc
addr16
adc
ja
add
sbb
adc
pop
ds
aas
jl
inc
arpl
dec
bound
jae
push
dec
dec
dec
dec
dec
inc
push
jns
pop
jg
jb
inc
pop
bound
addr16
cmpsb
push
test
stos
imul
sbb
push
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
mov
or
push
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
adcl
xlat
orl
testl
jg
jle
dec
mov
mov
dec
dec
inc
mov
push
mov
cmpl
xorl
pop
stos
fwait
scas
movsb
pop
pop
lahf
pop
mov
cmpsb
out
xchg
ljmp
addl
jmp
cwtl
lock
mov
mov
cld
jmp
pushf
std
clc
mov
cltd
clc
in
cli
mov
in
lock
lret
loope
fsincos
into
call
nop
pushf
clc
fsqrt
icebp
std
stc
ljmp
ljmp
shll
and
cli
ror
xor
iret
ret
pushl
daa
and
movlps
aas
or
or
sub
ss
adc
sbb
pushaw
imul
and
pop
pop
das
cmp
and
push
jnp
jl
sbb
popaw
inc
insl
inc
js
bound
push
jle
push
pop
jl
push
pop
inc
inc
sbb
ja
insl
pop
pop
pop
pop
push
pop
jb
movsb
jno
jae
pop
scas
inc
bound
lods
dec
cmpsl
scas
mov
insb
jp
inc
jo
mov
push
pop
inc
test
pop
dec
pop
test
test
mov
mov
pop
lea
lea
pop
xchg
adcl
addl
mov
repz
mov
jecxz
out
lods
stos
mov
mov
jmp
mov
mov
test
call
mov
out
jecxz
lcall
lret
rcl
aam
lahf
std
cli
cltd
cli
sub
fucomi
fstp
sub
lock
lret
shll
das
and
frstor
rol
xor
xor
daa
cmp
add
sub
add
add
add
sbb
fbstp
aas
push
cmp
or
filds
push
add
xchg
adcl
notb
xchg
jno
repz
jle
push
jg
jle
cmp
push
or
aaa
jno
or
jg
push
cmp
jbe
inc
add
add
push
jne
jg
insl
pusha
popa
push
inc
jo
dec
sbb
fs
jbe
pop
insl
dec
cmpsl
data16
jns
ja
dec
jne
pop
test
jno
inc
push
lods
mov
mov
mov
mov
pop
mov
sbbl
pop
mov
cmpsl
test
test
scas
mov
lcall
stos
test
stos
addb
nop
xchg
ljmp
in
sti
cld
xchg
in
ret
xor
sti
hlt
lock
cltd
jmp
fwait
out
nop
repz
call
mov
jmp
fcmove
xchg
iret
fcom
in
fsubp
int3
rcrb
jecxz
sub
jmp
and
out
lret
lret
sub
cli
lock
cmp
fstp
pop
xor
aad
lret
or
push
aam
add
paddusb
xor
adc
sub
xor
fisubl
xor
push
push
arpl
popa
sub
adc
add
ss
push
push
xor
cmp
inc
jg
arpl
add
pusha
dec
dec
adc
outsb
inc
sbb
jbe
sbb
adc
movsb
pop
popa
jno
jge
stos
lods
pop
insl
inc
dec
mov
dec
insb
mov
dec
dec
jbe
dec
mov
jl
pop
jnp
mov
inc
inc
xchg
mov
mov
push
movsl
push
push
subb
mov
scas
mov
cwtl
xorl
mov
mov
in
xchg
popf
mov
loopne
loop
jecxz
out
in
in
out
mov
xchg
hlt
xchg
out
popf
les
lcall
in
jecxz
ror
in
into
cwtl
rcr
repnz
cli
icebp
aad
mov
inc
mov
repnz
jle
push
jg
jle
pushf
das
in
fdivrp
into
fsubl
and
and
shll
sub
ror
leave
sub
fdivr
add
fsubl
cmp
xor
add
or
xor
cmp
or
add
pop
fistl
sbb
cmp
push
add
sub
pusha
outsb
push
insb
adc
pusha
or
jno
insb
inc
imul
sbb
pop
or
popa
imul
packssdw
inc
push
sbb
dec
js
jl
mov
mov
inc
mov
outsl
insb
stos
test
mov
mov
mov
stos
mov
push
test
mov
push
dec
mov
mov
test
lcall
xchg
loop
mov
mov
xchg
xchg
xchg
out
in
cwtl
lea
xchg
ljmp
repnz
nop
lcall
sti
xchg
cli
and
mov
sti
xchg
cwtl
out
loope
into
clc
shr
enter
out
f2xm1
aam
fprem
iret
clc
call
sub
and
in
ret
cmc
hlt
lock
cmp
iret
cli
sub
add
fidivl
xor
or
les
add
push
adc
or
or
cmp
add
adc
and
sbb
insb
arpl
pop
pop
or
pop
ja
push
adc
jnp
cmp
jl
cmp
outsl
jle
push
jl
pusha
or
sbb
pop
sbb
dec
dec
push
inc
sbb
push
push
inc
inc
jne
inc
imul
pop
push
movsl
inc
dec
mov
dec
cmpsl
pop
jle
mov
orb
mov
pop
mov
mov
movsl
push
cwtl
stos
mov
lods
mov
pop
pop
in
mov
lock
in
mov
fwait
test
nop
loopne
out
popf
xchg
cmc
add
jg
jle
test
xchg
lcall
in
pushf
add
pushf
loop
popl
mov
std
and
mov
mov
ret
int
call
fst
fmul
and
shl
fsub
int3
es
cs
shlb
ss
fldcw
int
aaa
rcl
xlat
xor
sub
add
and
adc
int
rcrl
sbb
cmp
adc
es
and
add
popa
add
sbb
or
or
data16
adc
outsl
adc
adc
push
add
jp
add
inc
jnp
jl
inc
push
ja
jne
pop
adc
dec
je
push
inc
jg
sbb
dec
inc
jbe
movsb
lods
pop
jb
inc
mov
dec
mov
stos
push
mov
jle
push
push
jg
cmpb
mov
adcb
push
pop
push
test
and
sub
cmpsl
orl
imulb
test
call
sahf
fwait
xchg
repz
xchg
adcl
in
in
xchg
cli
cld
rol
std
xchg
sahf
hlt
cmp
fwait
out
into
out
out
lahf
out
loope
lea
lcall
aad
loopne
sti
and
iret
fxch
out
es
repnz
shrl
xlat
fcmovne
daa
enter
cmc
cmp
and
aas
sub
roll
shrb
or
push
or
push
sbb
xor
and
es
aaa
xor
sbb
push
cmp
pop
lds
jle
add
add
jbe
addl
push
fcmovb
jbe
orl
popl
inc
ss
push
jge
mov
lods
push
jge
mov
lds
jge
xchg
ficompl
xchg
jbe
mov
in
xchg
lcall
addl
jbe
jle
jle
cmpl
jle
lds
push
jbe
mov
lods
jb
add
cmp
jns
jns
xor
jns
jns
pushf
data16
add
sbbl
jle
lds
bnd
add
mov
std
jle
cmp
loop
push
fistpll
jle
cmpl
mov
addl
mov
fidivrs
add
jp
mov
jg
jle
add
jp
mov
jg
jle
add
jp
movsl
jle
ds
ret
pop
jle
add
jp
jle
lds
inc
jp
inc
jg
jle
jle
mov
mov
lds
jle
xchg
lret
mov
xchg
lret
jg
jle
dec
into
jle
in
jns
lret
jle
jle
jns
pop
jp
sti
jp
into
lds
jle
addl
push
insb
imul
or
add
push
cmp
addl
xor
imul
subl
cmp
pusha
add
andl
sbb
cmp
data16
cmpsl
ss
mov
lds
jle
lds
inc
mov
ret
mov
jp
sti
lds
jle
add
jp
into
jle
data16
les
jns
inc
nop
ds
pop
repz
jp
sti
lds
jle
add
jp
into
jle
data16
out
jle
mov
add
jp
sti
add
jp
into
jle
data16
mov
mov
lds
jle
lds
inc
mov
fcmovb
jle
jle
jg
xor
lds
ss
lret
jle
xchg
xchg
data16
mov
jle
jns
jns
inc
xchg
ds
pop
repnz
jp
repz
jle
xchg
lret
pushw
cmpsl
scas
jle
lds
jg
jle
scas
jns
jns
inc
jb
xchg
lds
bnd
push
jge
mov
repnz
lret
gs
movsl
rolb
xchg
repz
lret
repnz
lods
in
jle
xchg
xchg
jbe
or
lods
lods
in
jle
xchg
xchg
lds
outsl
jge
outsb
repz
lds
cmp
mov
nop
jle
lds
repz
lret
pushw
add
jle
xor
repnz
lods
jbe
ret
cmpb
mov
push
ret
jle
adcl
lods
push
aaa
jle
jno
lds
adcl
mov
mov
push
data16
add
push
or
adc
jle
in
out
scas
jle
jle
mov
jle
orl
ds
mov
repz
repz
jae
jle
lds
cmp
jg
jle
jle
jle
in
jns
push
outsb
xor
push
andl
cmp
bnd
lods
xorl
dec
outsl
pop
lcall
mov
push
push
addl
adc
cmpl
jle
add
gs
lds
sti
add
scas
outsb
lds
jns
xor
inc
cmp
push
ret
dec
jg
jle
mov
lods
push
lret
add
jle
jbe
in
inc
lds
inc
addl
cmpl
daa
data16
add
add
jbe
add
jbe
orl
lds
jle
lods
jle
add
lods
jb
add
lods
push
jge
push
jb
add
jp
mov
lds
jle
add
mov
push
mov
jns
jbe
add
lds
fwait
add
outsb
dec
adc
ret
jle
ds
jle
mov
jbe
add
jge
mov
lret
mov
mov
jns
dec
fsubp
std
jle
jecxz
jle
orl
jle
jle
nop
addw
jle
in
lea
jns
push
jp
mov
lods
mov
xchg
push
jns
push
outsb
addl
sti
push
dec
gs
outsb
push
popl
jle
jle
lds
subl
jg
jle
or
fiaddl
jle
jns
lds
jg
jle
scas
jns
lds
push
xchg
push
daa
jle
sti
lds
cmp
jle
jle
ret
dec
repnz
jp
jle
nop
jle
in
xchg
push
mov
cmp
mov
jbe
mov
nop
jp
cmp
jbe
dec
jbe
outsl
mov
cwtl
add
mov
add
inc
mov
loopne
mov
sbb
cmp
or
jbe
add
jp
mov
inc
lds
rep
mov
cwtl
add
mov
add
inc
mov
add
mov
push
popl
add
jp
mov
inc
dec
movl
mov
cwtl
add
loopne
mov
sarb
pop
lds
jbe
add
jp
xchg
mov
rorl
lds
push
mov
repz
inc
inc
mov
add
mov
nop
jle
lds
data16
lds
adc
or
into
data16
lds
or
adc
outsw
jns
jns
add
addb
inc
dec
data16
add
cmpb
push
add
mov
repz
pop
repz
les
jns
push
mov
or
push
std
or
push
add
js
push
movsl
dec
mov
mov
nop
jns
jle
jle
or
jle
ss
jle
jle
insl
inc
in
xchg
jl
jle
ja
mov
mov
jp
cmp
pop
mov
jle
or
jl
jle
ret
jle
les
mov
pop
or
addr16
jo
or
mov
popa
inc
mov
dec
ljmp
jle
mov
cs
sti
lds
dec
lds
or
jno
or
lret
jle
fisubl
jl
jle
push
inc
push
cmp
jle
jle
repz
jmp
data16
jle
lds
mov
in
std
xchg
inc
je
lds
je
das
inc
in
jge
jl
inc
mov
xchg
test
jl
jle
push
xchg
cltd
xchg
xchg
jns
mov
xor
inc
das
jle
jle
jmp
jle
stos
rep
cs
data16
repz
lea
inc
jl,pn
inc
lds
mov
mov
movd
sub
addr16
enter
ja,pn
jle
lds
repz
repnz
imul
lds
repz
repnz
adc
push
mov
mov
repz
xchg
xor
inc
out
jle
das
adc
mov
aas
les
inc
lds
jle
repz
push
cmp
aas
or
pop
movsl
inc
in
cwtl
cmp
or
add
data16
fstpt
push
repz
data16
push
aas
in
xchg
inc
inc
in
cwtl
cmpl
dec
gs
cmp
jge
or
dec
in
xchg
jg
jle
mov
movsl
bound
data16
lds
push
in
or
bound
std
dec
jle
jle
cmp
add
ja
in
jge
lds
movsl
inc
mov
cwtl
mov
jge
jle
imul
lds
push
in
or
insl
mov
ja
in
outsl
jg
push
sbb
mov
push
in
sub
jle
movsl
jle
aas
or
sbb
cmpl
jge
push
addl
inc
push
movd
gs
fwait
mov
push
jns
sbb
data16
inc
jge
push
addl
in
cwtl
inc
jns
lds
xor
jle
jle
jg
jge
sti
popa
psllq
sbb
jl
sti
movsl
add
sbb
test
lds
cmpsb
mov
in
je
jge
repz
dec
jp
xor
mov
cmpsb
jmp
jns
movsb
jle
movsl
ljmp
pop
jbe
rep
push
lds
jp
sti
mov
xchg
pop
cltd
cwtl
pop
cmp
jle
xchg
mov
jle
jg
jg
aas
cmp
jbe
repz
pop
lds
sbbl
sub
mov
cwtl
mov
dec
add
xor
aas
jge
cmpw
inc
xor
add
sub
jle
ds
jle
jne
jle
jg
pop
mov
loop
pop
mov
dec
les
aas
movb
lds
add
inc
sub
add
mov
pop
lds
pop
inc
jle
jle
movsl
addr16
loopne
mov
jle
mov
aas
cmpsl
inc
mov
pop
xchg
cmpsl
jge
std
jg,pt
ljmp
rol
jle
nop
jle
kxnorb
mov
scas
rol
jle
lds
inc
into
sub
jg
jle
dec
sar
jle
lds
inc
mov
add
jp
and
jbe
xorl
push
xchg
inc
in
bnd
ret
cwtl
repnz
lds
cld
jle
add
jle
ret
pop
jbe
cmp
jle
lds
pushl
push
inc
lea
nop
add
pop
mov
loop
jle
loopne
ret
jle
out
lret
lds
sbb
jle
std
jle
ds
loopne
ret
jle
or
jp
pusha
mov
cs
loopne
ret
jle
or
jbe
mov
xor
ret
jle
or
outsl
ret
mov
xor
aas
mov
jle
std
loopne
ret
mov
loopne
ret
mov
push
loopne
lret
jle
aas
std
lds
jo
jle
loopne
lret
mov
or
loopne
sarb
jle
ret
xor
adc
jle
je
jle
lret
jle
mov
loopne
lret
jle
aas
std
loopne
lret
mov
sbb
jle
loopne
sarb
jle
repnz
insb
loopne
rol
js
jle
lret
jle
mov
loopne
lret
jle
aas
std
lret
test
loopne
lret
jle
loopne
sarb
jle
cmp
lret
cmp
mov
loopne
lret
jle
aas
std
loopne
rol
inc
mov
ret
mov
loopne
lret
mov
inc
les
loopne
sarb
jle
or
loopne
ret
jle
repz
xchg
lds
cmp
push
mov
ret
mov
jecxz
jle
aas
mov
jle
ss
lds
push
fcmovb
pop
mov
loopne
fcmovb
mov
jle
cmp
ret
es
loopne
fidivrl
jle
sbb
loopne
fidivrl
jle
cmp
stos
mov
jp
loopne
fidivrl
jle
cmp
scas
mov
jbe
loopne
fidivrl
jle
cmp
mov
jle
add
ret
jle
inc
les
mov
popa
jecxz
jae
cwtl
loopne
fidivrl
jle
cmp
mov
jle
lret
jle
cwtl
loopne
fidivrl
jle
sbb
loopne
fidivrl
jle
cmp
mov
jle
add
movl
xchg
loop
and
addb
mov
lods
mov
jle
xor
addb
mov
jecxz
addb
mov
lods
cmpsb
addb
mov
jle
addb
mov
out
addb
mov
icebp
lea
lahf
mov
add
cmpb
lret
repnz
mov
mov
mov
add
dec
jg
lret
mov
inc
mov
ret
dec
jge
jle
loop
push
mov
jbe
mov
mov
mov
xchg
lds
lods
in
jge
add
mov
sbb
xlat
ret
jle
lds
xchg
lods
mov
add
lcall
aas
lods
in
jge
mov
dec
add
std
jle
jle
mov
scas
mov
ja
bnd
dec
mov
lret
jle
mov
mov
jle
lret
mulb
mov
push
mov
add
mov
lds
jle
add
ret
jle
jle
jle
scas
jns
jns
inc
mov
mov
mov
jle
lret
mulb
mov
push
mov
jns
mov
add
jle
add
ret
jle
jle
jle
scas
jns
jns
inc
mov
bnd
mov
pop
mov
lods
mov
dec
push
lods
ret
std
jns
cli
jle
ret
jle,pt
addb
mov
add
mov
jno
std
outsl
jg
mov
ret
mov
mov
jle
lret
mulb
add
mov
lods
in
mov
add
mov
jle
lret
jle
ret
jle
ljmp
jl
mov
dec
jl
jle
popf
in
xchg
loopne
ret
mov
lcall
sub
jle
xchg
lds
xor
pushf
in
loopne
lret
jle
push
mov
jle
xchg
loopne
lret
mov
loopne
lret
mov
lahf
in
loopne
lret
jle
in
loopne
lret
mov
out
loopne
lret
jle
in
loopne
lret
mov
mov
loopne
lret
jle
loopne
lret
mov
lds
or
loopne
lret
jle
mul
push
mov
jle
xchg
lret
mov
in
loopne
lret
mov
loopne
loopne
ret
jle
loopne
ret
mov
xchg
out
loopne
ret
jle
ljmp
mov
xchg
jecxz
loopne
lret
jle
loopne
ret
jle
jmp
jle
push
lret
mov
loopne
lret
mov
imul
aas
std
loopne
lret
mov
je
ds
loopne
ret
mov
lret
mov
mov
jle
xor
loopne
ret
mov
cmpb
loopne
ret
jle
mov
sahf
mov
cmpl
loopne
ret
jle
add
loopne
ret
jle
mov
loopne
jle
ss
aad
jle
loopne
ret
jle
aam
jle
loopne
ret
mov
test
jg
jle
ret
mov
mov
jle
lret
sub
mov
jle
lret
add
mov
jle
lret
xchg
add
mov
lods
in
mov
lret
xchg
mov
bnd
mov
jle
inc
jle
jle
jle
ret
jle
jle
jle
ret
mov
jle
jns
inc
xchg
std
loopne
cmp
jle
lcall
std
mov
and
jle
jle
ret
jle
ret
mov
add
mov
lods
in
mov
lret
scas
mov
mov
jle
jle
jns
mov
mov
subb
inc
ret
jle
cmp
mov
dec
jbe
ret
jns
lds
add
lret
jg
jle
repz
push
mov
jle
jle
jg
mov
dec
inc
jle
jle
jg
out
jle
loopne
add
loopne
add
mov
loopne
add
mov
add
mov
loopne
add
mov
add
mov
mov
xor
loopne
xorb
jle
loopne
xorb
jmp
jle
loopne
xorb
adc
jle
loopne
cmp
sbb
loopne
xorb
mov
loopne
xorb
addb
xorb
mov
jle
in
loopne
ret
jle
addb
mov
addb
mov
addb
mov
or
mov
pop
outsl
addr16
lcall
mov
ret
jle
ret
mov
add
mov
lods
in
mov
lds
ds
mov
add
mov
jle
ret
mov
jle
jns
jns
inc
xchg
add
mov
mov
imul
out
loope
jle
lds
aas
ret
mov
inc
ds
mov
jle
vcvtsd2ss
loopne
sarb
jle
cmp
loopne
rol
les
arpl
jle
jle
cmp
lds
or
enter
loopne
lret
mov
mov
loopne
sarb
jle
push
lds
fisubs
jnp
loopne
ret
jle
lods
loopne
ret
jle
loopne
ret
jle
loopne
sarb
jle
ret
mov
mov
jle
add
mov
loope
add
jle
mov
mov
ret
mov
orl
add
ret
jle
jle
jle
ret
mov
push
jp
jle
mov
mov
jle
mov
cmp
add
mov
jns
mov
mov
jle
lret
ret
jle
jle
ret
jle
aaa
data16
jle
ret
jle
ret
mov
add
mov
lret
mov
jns
mov
mov
add
fiaddl
addr16
addb
mov
addb
mov
addb
mov
add
mov
jle
add
mov
mov
dec
mov
jle
inc
jg
jle
dec
lds
ret
dec
repz
push
mov
arpl
add
mov
mov
dec
mov
pop
lds
gs
jns
lds
inc
jg
jle
jle
cmp
lds
push
repz
dec
mov
jle
scas
jns
lds
jle
mov
cmpsb
jge
jle
inc
jg
jle
inc
lds
inc
jge
jle
dec
lds
ret
ret
dec
jge
jle
cli
std
dec
mov
lds
inc
mov
ret
add
andb
fcmovb
std
jbe
lret
jle
std
jns
lret
jle
lods
jns
mov
jle
into
mov
mov
jle
lret
mulb
add
mov
lret
mov
jle
mov
jle
lret
jle
lret
jle
lret
mov
mov
jle
add
mov
jle
jle
lret
jle
scas
jns
jns
inc
mov
subb
inc
ret
jle
cmp
mov
dec
jbe
ret
jns
lds
add
mov
jle
lds
subb
mov
jle
lds
and
add
cmp
push
mov
mov
jle
mov
cmp
push
mov
mov
lds
inc
jg
jle
ret
mov
jle
jns
jns
inc
xchg
mov
pop
mov
add
mov
dec
mov
cli
mov
jg
add
jg
jle
subb
mov
jle
lret
lcall
jg
jle
ret
jle
lds
jge
mov
add
mov
mov
lds
inc
jg
jle
ret
mov
jle
jns
jns
inc
xchg
ds
cmpsb
repnz
dec
mov
lock
pop
mov
mov
push
cmpb
dec
xchg
lds
mov
mov
push
mov
lds
test
jle
jle
je
add
xchg
movsl
mov
mov
addb
mov
xlat
addr16
std
jle
cmp
setb
pop
mov
movl
xchg
pop
mov
xchg
dec
mov
xor
out
mov
jns
jle
jle
xchg
lds
jle
fs
decl
cmp
lret
lods
jns
or
repz
movsb
mov
xchg
push
mov
dec
jle
dec
repnz
lds
mov
inc
lds
mov
scas
mov
cmpb
pop
mov
pop
mov
xchg
lds
and
push
in
mov
mov
mov
mov
scas
dec
or
ret
jns
lds
mov
mov
jle
jle
jle
lret
mov
mov
jle
lds
subb
mov
jle
lret
lcall
jg
jle
ret
jle
lds
jge
mov
add
mov
mov
lds
inc
jg
jle
scas
jns
jns
inc
mov
jle
jge
mov
mov
push
repz
movl
jle
lds
jle
repnz
orb
jns
lds
cmpb
add
mov
add
mov
jle
add
mov
jle
scas
lds
scas
lds
lods
lds
mov
lds
in
scas
lds
dec
lds
movsl
dec
cwtl
cltd
lds
xchg
jle
lds
nop
pop
outsb
jg
jle
mov
dec
jle
ret
ret
jle
or
ret
ret
jle
jo
ret
lds
sarb
jle
ds
ret
std
jle
cmp
dec
jle
dec
jle
jle
nop
mov
mov
ret
lds
das
jle
std
jle
jecxz
jle
add
dec
dec
cmp
xor
dec
bound
add
ret
sub
xchg
lea
cmp
jns
jns
xchg
repnz
vpaddw
jecxz
jle
adc
hlt
xor
xchg
xor
bnd
out
test
scas
lds
pop
jle
or
divl
dec
dec
xchg
xor
bnd
movsl
push
idiv
mov
lds
inc
repnz
lds
inc
pop
xor
divl
dec
dec
xchg
cmpl
jp
jge
mov
jbe
adc
hlt
xor
xchg
mov
jns
jb
aas
std
jge
jne
mov
mov
jb
fisubs
xor
mov
dec
dec
testb
adc
mov
outsb
xchg
cld
dec
jns
jns
xchg
cltd
lods
gs
cmp
push
jle
std
jle
push
lea
push
ret
ret
lds
cmpl
repz
gs
addl
out
push
testb
repz
mov
icebp
jno
jge
sti
jns
sti
mov
jp
or
divb
mov
gs
lds
das
pop
lods
lds
mov
inc
js
sti
jbe
dec
lock
kaddb
stc
jbe
sti
mov
jbe
js
jge
sti
jns
dec
repnz
sti
lds
jb
sti
xor
shll
cwtl
cltd
pop
xchg
inc
cmp
jle
lds
xor
ret
daa
jbe
xchg
movl
es
add
jp
mov
mov
mov
lea
cmp
addl
outsb
mov
jge
mov
lds
jle
cmp
or
or
mov
dec
inc
cmc
ret
lds
fwait
mov
lods
dec
jge
mov
dec
pop
out
jle
lds
fwait
mov
sbb
ret
mov
mov
inc
adc
sbb
mov
mov
repnz
vmovd
or
lods
push
jge
mov
inc
pop
push
repz
vmovd
or
lods
push
jge
mov
inc
lcall
lds
sbbl
ds
push
lds
dec
xchg
sbb
mov
lds
xchg
or
mov
lds
jge
jge
mov
repnz
inc
inc
mov
mov
lods
xchg
dec
inc
add
bnd
in
jle
addl
lds
xor
lds
jle
jns
lds
mov
lods
or
mov
repz
lds
repz
dec
adc
jle
jns
dec
mov
sbbl
loopne
add
jbe
addl
add
mov
jb
pop
jbe
mov
lods
push
lods
add
or
in
bnd
add
dec
adc
jle
jge
dec
or
mov
add
repz
push
jge
mov
dec
push
hlt
sarb
jns
addl
add
mov
jb
push
jbe
mov
lods
lretw
add
in
bnd
add
data16
jle
addl
push
pop
add
subl
lods
jp
sbb
jle
jle
add
jp
add
add
add
jp
add
add
mov
lds
orl
or
mov
repnz
push
add
inc
add
dec
jp
mov
lods
push
add
cmpsl
jp
mov
lods
push
add
add
aas
mov
repnz
lds
cmp
jg
jle
xor
pop
repz
jb
mov
add
dec
inc
orl
jle
std
jle
jns,pt
jb
jns
inc
dec
addl
add
add
jbe
dec
mov
lods
ret
jg
in
jle
orl
lds
add
sub
inc
add
jbe
add
in
bnd
add
jp
mov
lods
add
mov
xlat
movsl
ret
jns
lds
xchg
mov
lds
andw
jle
adc
lds
mov
lods
or
mov
lds
cmpl
lds
add
dec
lds
push
ret
pop
dec
ds
ret
xchg
jle
lds
lds
sarl
ret
jle
or
ret
jge
movsl
push
mov
add
bound
ret
lds
test
jle
jle
add
jbe
mov
ret
push
pop
and
jle
lea
popl
inc
xchg
lret
pcmpeqd
gs
lock
in
fwait
dec
outsb
dec
xor
decl
jle
mov
lds
fwait
inc
lds
in
bnd
pop
jge
dec
aas
dec
dec
addr16
lods
fwait
mov
mov
lods
lret
push
lods
in
jle
mov
fwait
push
lods
aas
in
bnd
pop
mov
repz
lds
fwait
push
lods
aas
in
bnd
pop
mov
repz
lds
fwait
push
jg
std
jns
outsb
mov
repz
jg
jp
repz
jle
jle
dec
lds
inc
test
pop
jecxz
jns
cwtl
jns
xchg
mov
cmp
jle
lds
add
jbe
addl
adc
ret
lds
cmpl
inc
mov
cmp
add
mov
lods
add
mov
lds
addl
lds
orl
jb
cmp
jb
ret
lds
orl
outsb
addl
lds
orl
inc
mov
addl
jge
jle
xchg
mov
dec
lock
mov
push
xchg
ret
jmp
jle
decb
loop
jle
jle
testl
lds
cmpl
push
orl
jle
add
add
jbe
add
push
jge
movl
lds
std
jle
lds
inc
mov
lds
jle
jle
add
dec
jbe
ret
in
xchg
call
ds
loopne
add
cmp
loopne
sub
loopne
add
add
ds
loopne
addl
jle
jle
movl
mov
sub
call
bnd
xorb
jmp
loop
jecxz
add
cmp
lds
lds
lret
jle
xchg
mov
mov
jg
jle
scas
lds
sbb
add
dec
lds
sbb
lds
mov
lds
jle
dec
mov
repz
lds
lds
mov
repz
lds
xchg
vmovdqa
jle
mov
jge
dec
pop
mov
or
jg
jle
jl
add
dec
repz
lret
jle
xchg
lds
jge
mov
dec
pop
mov
xchg
aas
dec
mov
inc
lds
add
jg
jle
jg
mov
jns
xchg
out
repz
inc
and
jle
lds
mov
aas
xchg
lret
push
jg
push
bound
mov
lods
inc
jge
or
ret
es
mov
lods
jp
or
or
mov
xor
movzwl
push
xchg
rorl
jle
xchg
vpunpckldq
xchg
gs
lds
xchg
mov
xchg
jl
aas
jno
pop
aas
or
cmpl
data16
lds
xchg
add
bound
adc
push
repnz
lds
mov
data16
jle
add
bound
mov
or
lods
in
lds
xchg
add
bound
xorl
inc
mov
lods
push
movsl
add
push
adc
mov
lds
int
jg
jle
or
or
mov
mov
repz
lds
lret
jle
xchg
lds
jge
mov
in
jns
xchg
mov
pop
dec
ds
jle
lds
orl
jbe
jns
ds
ret
cmp
jle
jns
push
jns
dec
repz
jns
ret
jns
ds
jle
lds
adcl
jo
jns
ds
ret
jle
repz
dec
jne
jns
ds
ret
jle
std
lds
jle
xchg
lds
push
adc
jle
lret
jle
mov
push
repz
jns
xchg
out
jns
pop
mov
std
jle
lds
jle
add
add
mov
mov
repz
inc
fisubl
lds
repz
dec
mov
jle
add
loopne
out
inc
jge
mov
jns
add
jle
ret
es
inc
gs
push
cmpsb
mov
mov
pop
push
addl
inc
cmpl
jle
std
jle
inc
repz
jle
add
dec
lods
jl
ds
cwtl
push
cmp
jle
lds
dec
inc
xor
mov
or
inc
or
pop
repnz
lret
dec
scas
pop
fwait
mov
inc
lds
xchg
pop
jge
jge
mov
inc
std
inc
cmpsb
ds
in
je
pop
cltd
ds
xchg
inc
cmp
jle
lds
add
jbe
addl
fcmovb
add
add
jbe
cwtl
ss
loopne
add
jb
ds
loopne
cmpl
add
jbe
ds
loopne
addl
add
dec
addw
popl
inc
nop
aas
repz
in
bnd
cmp
mov
dec
outsb
jbe
jle
lds
xor
lods
data16
mov
dec
outsb
pusha
ret
lds
cmpl
cmp
add
push
outsb
cmpl
cmp
add
sbb
xor
sti
xor
jb
jnp
jle
loopne
outsb
jnp
jle
loopne
jne
cmp
jge
loopne
jbe
js
loopne
sti
repz
push
mov
loopne
repz
data16
mov
loopne
repz
addr16
inc
jle
sti
fwait
mov
jle
js
mov
dec
jg
jle
sti
vmovd
ja
je
sbb
fwait
ret
lret
jle
mov
dec
sbb
ret
loopne
sti
lds
jle
loopne
jne
jbe
mov
in
sbb
mov
jnp
jle
loopne
jne
jbe
mov
icebp
sbb
sti
xor
fwait
xor
loopne
sti
loopne
sti
lds
jle
loopne
jne
jbe
mov
in
sbb
mov
jnp
jle
loopne
jne
jbe
mov
icebp
sbb
sti
xor
fwait
xor
loopne
sti
loopne
sti
fwait
sbb
jle
sti
push
ja
cmp
repnz
lods
in
jle
sti
sti
data16
ja
cmp
repnz
lods
in
jle
sti
sti
push
mov
sti
data16
mov
sti
fwait
mov
jle
js
mov
dec
js
jns
repz
mov
dec
outsl
outsb
repz
gs
lds
mov
lret
repnz
lods
in
jle
mov
repz
xor
jnp
jle
loopne
insb
mov
jle
mov
rep
lds
repz
mov
loopne
outsb
movsl
lods
loopne
insb
outsl
mov
rep
dec
gs
gs
aas
lods
cmp
cwtl
cltd
pop
xchg
dec
cmp
jle
inc
lds
nop
mov
jle
movsl
loopne
or
jnp
jle
loopne
or
add
jp
ret
xor
ret
daa
jbe
mov
repnz
xor
cmp
lret
cmp
mov
jle
loopne
add
lret
jp
xchg
adc
lret
jle
cmp
add
loopne
add
mov
jle
mov
repz
cltd
jp
xchg
sub
ret
bnd
inc
lret
or
loop
cwtl
xchg
cmp
add
jbe
daa
cmp
ret
data16
xchg
jns
jbe
inc
les
mov
lret
lret
aaa
jns
mov
jle
cmp
cmp
loopne
cmp
mov
jle
mov
repz
lret
jp
in
outsl
lods
adc
shrd
lret
xchg
loop
les
push
lcall
jne
repz
jp
mov
lods
dec
lods
aas
loopne
lret
and
add
cwtl
xchg
cmp
addl
jp
ret
cmp
daa
jbe
or
jns
loopne
inc
lds
xor
mov
jle
movsl
jnp
jle
loopne
add
cmp
mov
jle
mov
repnz
lea
dec
xor
lret
lret
mov
inc
mov
jle
mov
repz
in
lret
lods
jg
jno
adc
adc
lds
loop
xor
jle
loopne
add
lods
loopne
add
mov
repz
ret
sub
xchg
cltd
inc
repnz
gs
cmp
push
lds
inc
xor
nop
mov
jns
jnp
jle
xchg
cmp
mov
jle
xchg
loopne
add
movsl
inc
cmp
cmpl
inc
cmp
dec
jl
xor
dec
decl
mov
jns
js
cmp
mov
repz
sbb
jl
addl
inc
cmp
jle
lds
add
add
jbe
addl
data16
lds
andl
in
bnd
add
jbe
add
jbe
addl
jb
ret
add
add
jbe
add
push
mov
lret
jbe
ret
jle
mov
jmp
outsl
popl
inc
repnz
lods
in
lds
xchg
sub
cmovns
std
jle
lds
orl
outsb
mov
inc
mov
in
bnd
aas
mov
lock
inc
jbe
mov
jge
jbe
dec
lds
xchg
movl
outsb
inc
mov
lret
jbe
ret
jle
add
jbe
fstpt
add
dec
jbe
aas
movsl
mov
pushl
outsl
popl
inc
repnz
lods
in
mov
lock
lds
lds
mov
inc
lds
andl
jbe
ret
jg
in
jle
adcl
jbe
aas
movsl
mov
jp
outsl
popl
inc
repnz
lods
in
mov
lock
lds
lds
mov
lds
andl
jbe
ret
jg
in
jle
adcl
lds
jbe
mov
jge
jbe
inc
les
add
jbe
addr16
bound
cmp
jle
lds
jp
ret
daa
jbe
addl
jbe
ret
lods
jbe
ds
jp
mov
lods
in
mov
dec
cmpl
add
jbe
mov
lods
in
lds
mov
movsl
mov
lds
andl
in
bnd
mov
jge
dec
mov
xor
inc
lds
jle
nop
jle
lds
ret
add
add
jbe
jo
inc
rep
shlb
jle
jle
ds
jae
lret
jns
jns
mov
lea
mov
xchg
outsb
mov
inc
cmp
or
pushw
dec
jns
add
push
addw
gs
jp
add
jb
cmpl
jns
add
push
repz
lds
jnp
jns
sti
std
jle
inc
repz
jbe
xchg
add
push
jge
mov
repz
bound
mov
jns
mov
mov
repnz
jp
jle
addl
lods
fstpl
pop
add
jb
mov
lds
subl
dec
inc
sti
lea
nop
ret
sub
ds
ret
and
xor
mov
lods
outsb
pop
or
xchg
jnp
jle
lods
jle
push
cmp
jle
jle
mov
std
jle
pop
lods
cli
in
cltd
mov
mov
jns
outsb
mov
lds
fwait
dec
lret
loopne
out
mov
jl
mov
xor
cmp
loopne
or
dec
inc
je
mov
repnz
lds
je
dec
loopne
cmp
jle
loopne
jne
lods
mov
repnz
dec
cltd
clc
cmpl
mov
loopne
mov
jns
jbe
stc
in
cltd
inc
repz
add
mov
jns
dec
clc
icebp
ret
jns
lods
jns
ds
cwtl
cmp
jle
mov
pushl
aas
jns
loopne
push
lods
lods
mov
outsb
mov
dec
gs
sbb
lds
xchg
mov
rol
es
mov
repz
inc
addr16
jle
stos
in
jns
inc
jnp
jns
rol
jg
jle
or
or
or
ror
jle
add
ds
jle
jle
add
jle
jle
add
push
push
jle
add
jg
jle
add
push
lods
sarl
jle
add
jg
jle
sti
mov
data16
lds
leave
jle
lds
inc
jnp
jns
add
outsb
dec
ds
jle
lds
xchg
jg
jge
pop
mov
cwtl
jbe
sti
mov
jge
jge
mov
mov
icebp
jne
jge
fwait
adc
data16
call
vpunpckldq
sti
xor
mov
mov
push
clc
xchg
in
pop
vpaddq
mov
xchg
xchg
lret
jge
jge
movsl
jbe
xchg
addl
push
jle
jle
xchg
xchg
jle
push
repz
sbb
lea
jns
mov
ret
jb
lds
xorl
jp
jns
push
adc
fwait
lds
data16
shr
xchg
cwtl
pop
cltd
inc
cmp
jle
jns
adc
cs
jg
jle
fisubs
js
jns
dec
lds
inc
mov
cwtl
inc
rorl
aas
cmp
jle
lea
jle
inc
jle
loopne
jg
aas
std
std
jl
cmp
dec
xor
jle
loopne
cmp
jg
rol
jle
cmp
jle
inc
gs
mov
stos
jg
mov
mov
lds
sarb
jle
xchg
ljmp
push
inc
nop
jle
in
cwtl
xchg
ds
lds
aas
jo
jg
inc
jmp
outsl
ss
imul
mov
repz
ret
jns
mov
jg
jle
pop
jns
dec
cltd
inc
xor
lods
pop
jle
jle
data16
lods
inc
lret
ret
jns
mov
cwtl
xchg
cmp
ljmp
jb
addl
push
fcmovb
lds
addl
inc
jg
jle
mov
lds
jle
jle
lds
inc
mov
mov
cmp
add
bnd
aas
jge
mov
lods
aas
jge
mov
dec
add
sbb
mov
xchg
ret
xchg
jbe
push
mov
xchg
vpcmpeqd
push
lds
jbe
mov
cmp
jge
mov
jb
add
lds
addl
aas
jge
mov
lds
aas
lds
xchg
lds
std
jle
gs
inc
in
bnd
add
push
jge
aas
push
addl
add
outsb
outsb
repz
jbe
pusha
data16
jns
addl
lret
mov
pop
data16
lds
cmpl
xchg
inc
in
jns
jb
andl
in
jns
add
outsb
push
add
push
mov
movsl
add
push
orl
mov
mov
mov
in
add
jb
mov
inc
mov
addr16
inc
mov
nop
cwtl
repz
outsb
xor
jns
add
xor
ds
repnz
add
xor
ds
loopne
cmpl
cltd
repnz
xor
mov
lods
mov
inc
xor
push
cmpl
test
add
xor
mov
lods
mov
inc
xor
push
aaa
cmpl
mov
add
xor
mov
lods
mov
inc
xor
push
xor
aas
mov
repz
xor
mov
lods
mov
inc
xor
push
xor
repz
lret
data16
jns
mov
mov
repnz
add
cmpl
jle
add
jle
lds
cmpl
ret
dec
jg
jle
sbbl
adc
addl
push
fcmovb
jbe
fwait
or
xor
addl
push
fcmovb
jbe
addl
cmp
lret
add
push
lds
movsl
or
bound
lds
orl
lret
or
bound
loop
lds
outsl
push
mov
lods
push
lods
add
push
lds
lds
mov
pop
ret
inc
repz
mov
stos
push
gs
adc
movsb
mov
decb
mov
decb
lds
jb
mov
lds
mov
bnd
push
movsl
or
mov
lds
xchg
or
push
movsl
or
jns
jns
add
push
lds
movsl
or
jb
mov
lds
cmpl
jns
addl
push
jle
les
cmpl
repnz
xor
ds
jmp
cmpl
loopne
add
xor
les
lods
xor
aas
xor
mov
repz
les
lods
xor
aas
xor
mov
repz
les
lods
xor
aas
xor
mov
repz
les
orl
xor
mov
repz
lret
dec
xor
lds
mov
mov
repnz
push
jle
lds
cmpl
inc
repz
jl
jle
addl
data16
gs
inc
lret
lret
pop
in
jns
outsb
rolb
jns
add
dec
ds
jle
std
jle
jecxz
jle
add
jbe
addl
adc
ret
jbe
fwait
or
rclb
ret
es
addl
push
jle
jle
addl
lds
addl
or
push
movsl
mov
push
jle
jle
add
push
push
mov
lods
or
loop
lds
orl
push
mov
lods
or
mov
add
jb
orl
repz
mov
stos
pop
gs
sub
movsb
lret
adc
cmp
aas
push
or
lds
bound
lds
xchg
repnz
in
movsl
jle
push
mov
repz
push
push
xchg
lds
adc
or
out
jns
lds
addl
or
push
movsl
mov
jb
mov
cmp
lds
cmpl
pop
push
xor
jns
push
repz
sub
data16
jns
add
dec
ds
jle
and
jle
add
bound
addl
ret
into
jbe
addl
push
fcmovb
jbe
fwait
addl
push
fcmovb
jbe
addl
lds
addl
or
push
movsl
mov
bound
jle
add
push
push
mov
lods
or
loop
lds
orl
push
mov
lods
or
mov
add
jb
orl
repz
mov
stos
pop
gs
sub
movsb
lret
push
mov
jl
cmp
aas
push
or
lds
push
mov
mov
lds
xchg
repnz
in
movsl
jle
push
mov
repz
push
push
xchg
lds
adc
or
out
jns
lds
addl
or
push
movsl
mov
jb
mov
cmp
lds
orl
addl
add
jp
mov
mov
dec
jne
jns
add
inc
xchg
cwtl
cmp
jle
lds
addl
jbe
ret
add
add
jbe
xchg
lds
jbe
mov
repnz
in
jge
push
jp
repz
lods
push
jge
into
jle
xchg
jle
lds
jle
lds
inc
jp
inc
jg
jle
jle
mov
mov
lds
jle
xchg
in
out
scas
jle
jle
jns
mov
dec
jns
std
psrad
jle
addl
nop
dec
or
jb
xchg
jp
push
data16
jns
addl
lds
cmpl
lds
xchg
ljmp
push
jle
jle
lods
addl
cmp
cmp
cld
ds
sar
add
add
ret
push
add
enter
leave
or
lret
push
or
ror
addl
adc
rolb
ficoml
sbbl
sbb
popa
pusha
add
andl
addl
bound
add
subl
addl
push
jo
jb
subl
sub
addl
jb
sub
xor
daa
and
lods
xor
mov
cmp
jle
jle
mov
les
mov
dec
movb
ret
jns
std
mov
pop
lods
repz
inc
daa
sarb
jle
les
inc
gs
inc
xor
dec
inc
ret
jns
les
repz
gs
dec
or
xor
sarb
jns
xchg
mov
push
mov
lods
inc
xor
or
xor
jns
push
mov
lods
inc
xor
or
xor
jns
push
cmpl
push
aas
jge
aas
add
cmp
repz
dec
lds
fs
dec
mov
repz
in
push
lds
inc
mov
repz
in
adc
inc
movb
xchg
cld
jns
cltd
jns
cwtl
dec
cmp
jle
or
cli
mov
mov
jg
aas
mov
movsl
jge
.byte
