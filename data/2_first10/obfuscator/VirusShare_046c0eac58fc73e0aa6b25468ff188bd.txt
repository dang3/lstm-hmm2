push
call
ret
ret
adc
addb
fiadds
pop
loop
into
bound
push
dec
lock
jbe
andb
orps
outsl
cmpb
cli
pop
out
clc
ljmp
std
mov
dec
aas
mov
mov
dec
sub
mov
mov
clc
dec
enter
aaa
arpl
outsb
cwtl
lds
imul
mov
out
jge
inc
scas
fs
jle
fdivrs
cmp
inc
sahf
mov
std
lods
mov
xchg
mov
sub
xchg
and
and
imul
outsl
enter
and
fimull
add
sbb
insb
cltd
stos
mov
sbb
jne
mov
cmc
scas
or
je
jle
iret
sti
lods
pop
dec
mov
aad
in
mov
jmp
push
orb
mov
push
pop
aas
gs
lret
ret
push
out
insb
xor
push
lock
sbb
pop
int3
mov
popa
mov
add
jle
repz
sbb
dec
sti
lcall
mov
scas
dec
pop
inc
pop
pop
gs
flds
xchg
into
lods
mov
movsl
std
int3
xchg
cmp
add
push
pop
xor
jp
add
fsubrl
test
sbb
movsl
sbb
loop
mov
pop
xchg
push
inc
and
outsl
push
ds
lret
lods
and
ds
pop
movsb
jp
arpl
lcall
call
push
dec
mov
jl
ss
cmp
adc
arpl
dec
push
out
mov
outsl
leave
scas
pop
or
int3
push
inc
inc
movsbl
fbld
in
int
cwtl
xchg
and
push
mov
push
dec
test
mov
daa
inc
pop
adc
out
sub
xchg
incl
jmp
popa
add
mov
inc
in
pop
out
or
lret
icebp
xor
or
loopne
orl
je
lock
fucom
outsb
pop
dec
shrb
sbb
adc
in
insb
push
test
imul
mov
int
mov
in
fisttps
jmp
push
mov
call
push
rcrb
cmpsb
bound
les
xor
ds
push
mov
xor
adc
sahf
and
test
adc
scas
inc
clc
enter
pusha
nop
movsl
jmp
push
data16
xor
xor
mov
push
xor
sub
xor
pop
cld
and
push
inc
aas
es
ds
jns
jecxz
inc
loopne
stc
or
lahf
cmp
std
lea
mov
imul
ret
pop
addl
and
sbb
imul
aaa
adc
push
es
jecxz
mov
cmp
ja
adcb
pop
and
scas
loopne
incb
roll
mov
add
pop
adc
or
pop
and
pop
int3
movsb
sbb
dec
das
jl
sahf
xchg
mov
addr16
add
sub
cmp
jg
cmp
jnp
outsl
lcall
jge,pn
add
rorl
lret
sub
mov
rolb
out
dec
imul
sbb
pusha
add
ror
enter
push
inc
addr16
aam
mov
rcll
add
es
leave
movsb
adc
int
fsub
push
sub
pop
add
fldenv
int
or
sti
fstpl
shlb
cmpsb
mov
push
or
loopne
pop
mov
adc
insb
inc
into
ja
scas
nop
stos
inc
mov
pusha
pop
xchg
lock
nop
je
lret
inc
mov
shll
xchg
xchg
mov
es
jg
mov
scas
fisubrl
sti
or
pop
mov
insl
mov
bound
shr
iret
or
push
and
cmp
inc
and
inc
mov
jmp
mov
dec
jl
mov
ret
adc
repz
or
jle
in
into
and
mov
pushf
and
notl
sub
lret
repnz
data16
in
cltd
xor
pushf
jb
jmp
shll
mov
adc
pop
push
inc
mov
rcrl
sub
data16
xchg
xor
test
ds
gs
je
fstps
jo
test
dec
vzeroall
pop
sbb
sti
lods
dec
jnp
dec
arpl
add
jo
pop
sub
xchg
cli
jecxz
xchg
das
pop
xor
jbe
xor
mov
dec
cltd
stos
adc
fldl
data16
dec
into
lret
jno
pop
aaa
add
movsb
adc
mov
shl
lcall
mov
loopne
clc
popa
rorb
jl
dec
xchg
jge
popf
icebp
stc
dec
mov
out
pop
mull
sub
outsb
mov
push
push
push
aam
adcb
fisttpl
popa
clc
dec
sbb
jno
sbb
adc
ficompl
ljmp
rcrb
out
jns
add
ljmp
xchg
xchg
stos
addr16
xor
addr16
cmpsl
test
dec
dec
into
imul
lods
adc
call
into
adc
repz
je
cli
cmp
in
fwait
pop
fistps
and
and
mov
push
mul
ret
js
xchg
loop
xchg
cmpsb
mov
shll
inc
adc
dec
xchg
add
iret
mov
imul
xor
dec
rcll
sbb
mov
jg,pn
xchg
mov
xchg
mov
and
fistl
jne
mov
inc
rolb
fmuls
cmc
jle
int
iret
add
loop
test
js
and
pop
dec
or
mov
insb
push
sbbl
push
mov
daa
adc
jb
jp
js
mov
xor
or
adc
insb
jne
xchg
shll
pusha
popf
iret
stc
mov
int
out
inc
inc
pop
and
es
cmp
jge
cmp
mov
mov
add
mov
inc
jbe
out
in
ss
fs
mov
ret
mov
or
lcall
mov
fstl
lods
sub
sbb
jp
punpckldq
add
sub
xchg
sub
cs
nop
adc
pushf
adc
pop
test
fidivrl
lods
outsl
fsub
add
sbb
pop
dec
fnstenv
mov
loope
push
lret
inc
pop
or
sti
mov
sbb
jmp
decl
mov
mull
int3
gs
std
shlb
ret
sbbb
mov
addr16
jb
cmp
scas
mov
and
jg
xchg
jl
push
cmp
stos
in
and
pop
imul
inc
xchg
mov
mov
in
lret
or
cmp
jne
and
add
pop
rclb
pop
cmpsb
or
adc
add
mov
xchg
mov
or
sbbb
and
cmp
push
call
ret
and
add
aam
insb
sub
jo
clc
dec
fdivrs
les
push
jae
adc
cmp
sub
sbb
mov
ret
mov
ret
push
test
je
lds
cltd
ljmp
mov
mov
rcr
push
lahf
mov
inc
sbb
adc
xchg
mov
or
mov
fldcw
jbe
jne
cmpsl
ret
leave
add
popa
insl
scas
inc
jne
out
imul
pop
outsb
mov
mov
lret
jne
xor
loopne
or
and
jbe
ss
jnp
pusha
je
cwtl
xor
fstpl
add
xchg
aam
cmp
push
sbb
in
mov
mov
mov
sbb
mov
out
cs
out
daa
mov
inc
sub
or
pop
and
aam
cmp
les
ds
xor
aas
lds
movhps
stos
jo
pop
stos
jae
addr16
push
stc
pop
in
lea
test
cld
mov
jne
stos
sahf
repnz
into
adc
test
jns
js
jecxz
ja
dec
dec
scas
leave
xchg
pop
imull
rorl
push
xchg
inc
pop
inc
aaa
or
pusha
sub
stc
jp
out
or
xlat
sub
jl
in
lcall
jae
adc
mov
inc
pusha
adc
ss
dec
fcoms
jae
sub
and
xchg
cwtl
cmp
mov
add
inc
cmpl
mov
add
aas
mov
xchg
lock
jl
daa
imul
clc
xchg
outsb
cmp
dec
fsubs
pushf
stos
mov
dec
or
cmpsb
sbbb
lcall
add
imul
loopne
mov
xchg
es
test
mov
divl
ret
and
out
btc
sub
push
aad
aas
or
testl
pop
sub
movsb
pop
insb
dec
push
push
in
or
outsl
idiv
popf
popa
push
jge
xchg
pop
psubsw
jle
fnstenv
in
jge
insl
lea
ja
sahf
aam
jmp
xor
push
sub
js
mov
inc
in
and
orb
push
sub
cli
bound
sahf
fsubr
cmp
pop
xlat
xlat
or
jns
into
hlt
mov
cmp
scas
movswl
fucom
push
addb
clc
and
orl
mov
mov
lcall
inc
xchg
xchg
xchg
pop
filds
popa
push
mov
dec
adc
gs
mov
data16
inc
movsl
or
dec
jmp
sub
popa
xor
adc
arpl
mov
adc
push
nop
div
pop
mov
mov
fs
cmp
addr16
sbb
dec
pop
fs
aaa
pushf
dec
mov
add
mov
inc
inc
dec
shr
ficoms
int
mov
inc
fwait
sti
xchg
sarl
je
pop
push
dec
mov
fildl
inc
sahf
into
scas
push
inc
movsl
inc
jl
call
pop
cwtl
data16
icebp
loopne
std
sub
stos
orl
mov
inc
ja
into
outsl
inc
xchg
ljmp
mov
fucomp
xchg
testb
fs
aas
mov
in
test
push
es
jnp
scas
repz
xor
xlat
fbld
add
incl
jge
arpl
push
outsl
jno
cmp
sti
sub
adcl
outsl
inc
adc
cmp
add
adc
xorb
sti
cmp
push
xchg
ss
fwait
inc
xchg
in
or
xlat
mov
das
repz
in
mov
lret
add
or
stos
int3
mov
icebp
idivb
imul
cmp
into
mov
xor
mov
dec
cs
add
dec
fists
sub
in
jp
jnp,pn
test
arpl
stos
fsubl
sbb
cmp
rcrb
cltd
sahf
mov
push
push
out
fsubr
sub
jnp
movsl
stos
or
sti
pop
xchg
mov
sub
add
xor
add
cmp
fisubrl
xor
lret
test
dec
aas
shlb
cltd
arpl
cs
fstl
repz
push
dec
loopne
sub
add
jmp
pop
dec
push
lahf
mov
adc
dec
add
add
stos
push
mov
pop
mov
add
repz
xlat
jmp
push
iret
test
mov
aaa
clc
push
xor
addr16
insl
or
ljmp
in
sbb
cmc
bnd
jo
pop
pop
pop
adc
scas
mov
or
ret
dec
xor
dec
jp
adc
aam
jmp
outsb
stos
add
cltd
inc
movsb
rcrb
jle
adc
arpl
push
or
cltd
lahf
cmp
sub
xor
mov
ss
cmc
mov
sbb
xchg
cmpsb
pop
aas
inc
sub
sbbl
inc
roll
insl
call
sub
inc
outsb
pop
lcall
push
xchg
push
jne
jl
pusha
popf
frstor
mov
aam
xacquire
and
shrb
cmp
push
outsl
ds
push
mov
lea
into
mov
pop
and
shl
sub
sbb
pop
adc
pop
mov
inc
bound
fisubrs
out
arpl
popa
pushf
call
xor
int3
mov
push
cmp
xchg
dec
xchg
mov
sub
nop
iret
push
cli
ds
xchg
out
add
mov
cmpsl
fcoms
xor
ficoms
in
and
outsb
test
cli
loopne
shll
add
fld
loope
das
push
dec
cmp
cmp
xor
pop
jno
mov
dec
repnz
hlt
ss
push
cmpsb
mov
imul
mov
jno
xchg
sub
push
pop
adc
lahf
fwait
jl
jo
cmp
mov
fs
jge
jbe
jecxz
insl
and
jmp
xor
out
pop
cld
test
mov
adc
cmpb
test
mov
icebp
out
cmp
sbb
jns
arpl
ss
out
pop
mov
test
lcall
jo
cmp
pop
cld
add
imul
pusha
xor
or
cmpsb
fcmovne
fstl
les
sub
mov
aas
enter
mov
fistpl
push
inc
mov
insl
mov
jecxz
scas
outsb
add
mov
jo
xchg
pushf
enter
test
xchg
or
aas
dec
xchg
fcoms
sbb
lock
out
mov
cmpsl
add
jl
xchg
xor
push
and
and
sbb
mov
mov
cmp
add
jecxz
pushf
xor
mov
mov
fidivs
repz
pop
insb
je
out
cmp
dec
ret
dec
dec
mov
sahf
mov
add
mov
addr16
mov
push
out
add
mov
rol
or
cs
scas
mov
jns
jp
pushf
push
fcomp
pop
pushf
sub
lcall
inc
popa
rclb
aam
loope
dec
sti
dec
pop
fidivrs
out
pop
jnp
test
dec
add
adcl
bound
push
mov
inc
stos
or
push
adc
lcall
je
cmp
aas
je
mov
repz
push
test
cmp
pop
cltd
inc
add
loopne
jne
pop
cltd
adc
ret
add
icebp
xchg
icebp
push
mov
push
add
add
pop
mov
out
int3
jae
add
ret
add
adc
mov
push
cmp
sbbl
fwait
cpuid
dec
aam
and
adc
dec
fwait
mov
push
push
sbb
rclb
rorl
cli
std
mov
pop
scas
add
push
sbb
mov
js
inc
pop
sbb
cli
stos
and
sub
aaa
push
fdivl
sub
mov
add
ds
out
rolb
mov
stc
add
fbstp
mov
xor
mov
push
lret
lds
mov
xchg
imul
cmp
xor
add
scas
sti
dec
xchg
in
popf
add
xchg
push
mov
or
stos
fsubs
shl
int
sahf
xchg
and
enter
pop
adcb
in
loope
and
pushf
sub
shrl
pop
add
inc
jbe
mov
aam
movsb
sti
jae
clc
out
lods
dec
fists
call
pop
mov
mov
xor
mov
xchg
sub
push
daa
mov
enter
add
xchg
mov
or
dec
jnp
pop
stos
sbb
cmp
add
data16
aad
push
sub
out
pop
add
jl
leave
sbb
leave
jp
sub
or
icebp
cmpsl
add
xor
cmp
xchg
add
loopne
pop
rcrb
jo
mov
sti
mov
pop
mov
push
test
loop
mov
sub
inc
sbb
jo
adcb
dec
push
pop
sti
mov
jbe
popf
cld
push
inc
movsl
je
cltd
loop
jbe
xor
push
aad
push
jo
adc
out
stos
addr16
fcmovnb
pop
cmp
sbb
pop
sub
insl
fs
insb
cmp
xor
cld
cmp
pushl
mov
pop
inc
or
dec
sub
mov
mov
into
rcrb
stc
inc
shrb
sub
stc
add
xchg
cli
repnz
neg
cmp
lock
aad
ds
mov
sub
pop
push
xchg
or
or
leave
mov
push
enter
inc
dec
mov
sub
std
add
jbe
out
jne
arpl
arpl
roll
pop
decb
sbb
dec
fmul
out
lock
scas
cmp
mov
sbb
jmp
into
sub
enter
push
cmp
hlt
stos
mov
sub
inc
mov
pop
aad
mov
xor
fsts
push
mov
ret
jmp
mov
or
ss
inc
clc
sar
and
cltd
xlat
pop
clc
add
pop
test
xchg
xor
outsb
add
adc
lock
cmp
in
jb
insl
stos
mov
fsubr
in
cmc
cmpb
mov
pop
hlt
stos
mov
mov
aas
add
push
aam
lahf
push
in
test
test
outsb
jmp
mov
xor
in
xchg
adc
in
test
out
add
fistl
flds
xor
outsb
leave
dec
xchg
inc
out
mov
lahf
dec
add
cwtl
jne
movsl
hlt
push
add
out
mov
fs
in
int
dec
scas
sbb
cmp
or
mov
fwait
insb
das
jne
enter
popa
mov
test
into
mov
inc
js
sbb
mov
mov
repz
fisubrs
mov
pusha
in
gs
clc
punpckhbw
adc
test
inc
mov
loope
popf
test
dec
jno
dec
add
mov
fs
jb
adc
jl
sti
pop
jno
sarl
test
xor
adc
lock
xchg
and
insl
test
jae
mov
lods
push
adc
sbb
mov
mov
rorl
iret
pop
sbb
pop
sub
mov
dec
aad
int3
dec
fnsave
sbb
inc
imulb
pop
mov
aad
fisubrl
mov
mov
sub
nop
mov
jbe
cld
jo
cmc
js
std
pop
lcall
loop
add
push
out
sbb
pop
mov
add
int
loop
mov
jmp
shll
xchg
and
lods
adc
stos
mov
stos
xor
shll
mov
jns
cmpsl
mov
inc
xor
adc
int3
dec
pushf
xchg
mov
aas
dec
sar
outsb
lds
cmp
mov
cmpsl
fisttpll
lods
das
sbb
push
fiadds
add
xchg
fimull
adc
mov
aam
sbb
mov
xor
lods
fldcw
repz
icebp
in
cmp
outsb
mov
aas
mov
fiadds
mov
push
imul
repnz
loop
in
jg
je
popa
mov
std
loope
pop
jmp
mov
mov
sahf
neg
sti
es
movsl
xchg
or
mov
sbb
mov
stos
pop
mov
fwait
xchg
shrb
xchg
sub
nop
push
mov
cli
outsl
jecxz
pop
movsb
mov
sub
cs
aad
icebp
inc
add
mov
inc
fsubrl
xchg
push
scas
and
lods
cmp
test
mov
leave
lods
jae
mov
xor
add
push
fidivs
mov
add
divl
cwtl
and
mov
inc
shll
inc
cmove
mulb
sub
lret
aaa
sub
std
or
add
inc
mov
inc
fwait
in
icebp
jno
cli
cmpsb
add
negb
jp
push
mov
jmp
stos
mov
ds
mov
mov
mov
push
mov
ja
in
pop
aaa
je
test
in
mov
inc
sub
push
subb
mov
inc
cwtl
jmp
cwtl
mov
in
jg
in
test
cmp
dec
cltd
ret
jl
sbb
mov
pop
fsubrs
cwtl
mov
sar
cmpb
xchg
out
movsb
jg
ret
es
ds
jl
fwait
xor
push
in
in
jno
jmp
loop
inc
xchg
sbb
lahf
out
mov
fisubrl
jecxz
adc
jle
aam
lds
add
cwtl
std
xor
cmp
fbld
popa
xor
cld
xchg
fdivr
jl
xchg
pop
ret
dec
in
jbe
addr16
cmp
mov
xor
movsl
xchg
mov
jne
sahf
mov
mov
add
jne
dec
pop
shll
sbb
pop
testb
js
xor
sub
add
test
dec
and
shll
shl
leave
idiv
or
jle
push
rorb
mov
fwait
push
test
sahf
xor
dec
push
push
js
xchg
loop
testb
pop
leave
push
fisubrl
xchg
cmp
pop
push
and
sarb
pop
subps
cmp
pop
cmpsb
lds
movsb
fwait
dec
pop
scas
inc
ljmp
inc
lea
shll
adc
or
fs
out
jae
xchg
xchg
clc
orb
mov
or
mov
jns
repz
fcmovb
orl
rcll
adc
insb
xor
ljmp
cmc
xorb
cld
push
push
out
mov
loopne,pt
mov
stc
cmp
insb
xor
stos
pop
mov
cmp
and
pop
add
mov
or
cmpsl
div
movb
lods
xchg
push
bound
aad
loopne
adc
outsl
jb
or
outsl
mov
pushf
and
mov
push
push
cltd
mov
add
dec
int3
and
test
cld
sbb
xchg
outsb
cltd
mov
in
pushf
mov
pop
bnd
jecxz
sahf
mov
cmpsl
aaa
adc
dec
mov
pop
push
popa
mov
in
add
repnz
shrb
jecxz
call
je
cmp
mov
xor
xchg
mov
ret
lods
int3
dec
push
push
iret
lods
popa
cmp
xor
xchg
xchg
mov
test
xor
mov
cmp
and
mov
lods
adc
iret
mov
mov
shl
xchg
out
inc
stos
push
xchg
ja
roll
lcall
repz
std
es
push
push
sbb
cmp
jne
mov
pop
jge
mov
jecxz
loopne
push
jb
sub
cs
and
or
setg
push
xchg
and
push
sub
ja
iret
js
mov
out
dec
lret
jno
fists
idiv
lret
push
push
test
test
xor
leave
adcb
shlb
pop
lahf
push
mov
or
out
push
hlt
push
movsb
sbb
and
adc
push
test
push
jp
hlt
popa
lock
pop
ficompl
and
into
ljmp
cli
cwtl
mov
nop
scas
push
je
jl
mov
pop
icebp
imull
jle
scas
lods
jo
pop
xchg
lds
adcb
pop
ficompl
sbb
lods
fidivrl
xchg
jle
jl
or
sub
push
mov
xchg
push
pushf
wrmsr
out
imul
xchg
xor
inc
jl
or
nop
out
arpl
insl
movsb
ss
cmpsb
sbb
test
sub
push
outsl
fmull
and
mov
push
mov
inc
mov
and
inc
push
nop
cs
dec
sbb
in
inc
rclb
push
mov
jmp
inc
cmpsl
dec
out
xor
sub
mov
test
fcompl
mov
cmp
negl
xchg
pop
cld
lret
repnz
dec
push
lods
xchg
mov
xor
push
jne
cmp
mov
pop
fcoms
xchg
jne
lea
call
dec
idivl
mov
cmp
lcall
inc
testl
dec
xor
sub
dec
adc
dec
stos
xchg
fcmovnu
or
cs
ret
ss
mov
jmp
int3
mov
popa
push
xlat
dec
cmp
fcmovb
cmp
inc
dec
fcoms
mov
iret
mov
jg
inc
sti
xorl
mov
inc
outsl
add
imul
repz
jae
es
mov
test
iret
fs
sub
xor
mov
mov
dec
cmp
adc
out
jnp
xlat
mov
idivb
clc
jnp
fcmovb
push
push
pop
int3
lret
rorl
jb
inc
or
xchg
jae
sub
ret
pusha
mov
mov
push
jecxz
push
xor
imul
push
mov
jo
push
mov
cmpsb
xor
xlat
jl
pushf
push
mov
test
mov
mov
enter
push
test
inc
push
sub
mov
push
jle
xchg
push
shlb
mov
mov
mov
add
cmp
or
icebp
lcall
les
add
leave
or
inc
aaa
clc
xchg
loope
clc
pop
daa
inc
or
cmpsb
js
and
fs
cli
cltd
pop
fisubrs
das
cmp
inc
dec
cmp
xchg
into
inc
stc
pop
out
rcll
jp
pop
dec
inc
or
imul
cmp
sub
sub
adc
in
std
out
out
dec
push
or
jmp
addr16
outsb
sbb
loop
mov
mov
movhps
fcoms
inc
aas
push
imul
sub
clc
mov
mov
or
inc
sub
adcl
outsb
cwtl
sbb
in
sarb
and
push
ss
push
push
movsl
outsb
rorl
sub
dec
sysexit
jmp
and
or
orb
pop
int
sarb
lret
mov
mov
rcl
dec
inc
sbb
mov
mov
add
xor
or
cmc
test
in
mov
in
mov
dec
pop
fistps
scas
icebp
insb
fdivrs
mov
pop
adc
cmpsb
jns
nop
xchg
sarl
jbe
jmp
daa
fdivs
scas
into
enter
fcmovbe
dec
cmp
into
cmp
ljmp
xlat
iret
and
hlt
js
ficomps
xlat
scas
ret
sub
sub
repz
sub
mov
jnp
cmp
and
xchg
stos
adc
push
leave
pusha
test
cmpb
clc
ret
and
js
xchg
nop
and
clc
in
and
lock
lods
mov
rorb
je
mull
fadds
adc
xchg
and
dec
je
iret
stos
out
lret
jp
cmp
xchg
int
dec
fbld
inc
dec
arpl
test
jb
jmp
int
sbb
cmp
icebp
xchg
pushl
mov
roll
or
jbe
adc
insl
scas
mov
adcb
pop
popa
es
mov
ljmp
shl
xor
mov
mov
int3
lcall
outsb
andb
es
out
xchg
inc
lret
xchg
repz
sti
cmp
mov
mov
mov
inc
cmpl
xor
out
fxam
jnp
cmp
sub
cmc
aas
inc
outsl
sub
xchg
adc
lock
sub
std
xchg
pop
xor
push
adc
je
adc
into
jne
mov
xlat
cld
cwtl
popa
add
aaa
pop
ss
shll
push
fstpl
sahf
rcr
stc
cwtl
mov
mov
mov
xlat
test
xchg
sti
ficompl
pop
inc
inc
mov
mov
lods
mov
mov
aam
push
pushf
pop
orb
aam
jl
add
xchg
adc
sbb
xchg
ds
jle
xor
orb
dec
packuswb
jp
out
inc
ds
lds
mov
lea
aas
mov
and
mov
imul
mov
pop
out
cmc
inc
cmp
test
insb
iret
pushf
shr
jo
xor
and
and
les
popf
aas
fldenv
pop
add
push
filds
insl
cmc
jmp
nop
dec
pushl
negb
and
cmp
roll
push
xor
int3
mov
scas
int
mov
pop
pop
sub
and
and
xchg
movsb
and
mov
jne
loope
sbb
test
push
clc
leave
popf
clc
xchg
push
aas
cmp
fistps
or
int
mov
ss
daa
cmp
xchg
mov
stos
lock
movsl
sbb
std
dec
dec
xchg
sbb
sub
dec
ljmp
fmulp
dec
int
cmp
adc
mov
subl
sti
inc
loope
push
scas
lds
xor
mov
das
leave
mov
add
cmp
fstp
mov
xchg
in
int
mov
iret
aad
adc
push
pop
mov
push
negl
insl
les
mov
movsb
lea
adc
and
subb
xchg
fnstcw
inc
mov
push
jecxz
aas
jl
add
mov
pop
out
xchg
inc
sub
fisttps
daa
pop
ja
mov
das
xchg
pop
push
inc
sbb
insb
xor
leave
adc
xchg
loopne
mov
std
mov
or
bswap
jb
jnp
jno
mov
repz
sbb
test
xchg
cmp
push
push
aaa
lods
loop
sti
pop
xor
adc
pop
in
add
dec
cltd
xor
aad
imul
cmc
es
lds
imul
push
pop
cmp
fidivl
jg
jmp
and
hlt
xchg
in
andb
xchg
rol
mov
arpl
mov
dec
loop
mov
lock
and
fdiv
aaa
jge
ljmp
push
mov
sub
lds
mov
fimull
mov
inc
cmp
mov
fldt
or
inc
outsl
inc
sahf
pop
adc
pop
aad
outsl
cmp
clc
or
jle
jl
push
jecxz
insb
mov
dec
mov
jmp
jecxz
icebp
inc
mov
xor
mov
jnp
outsb
mulb
dec
or
mov
orb
cmp
push
mov
inc
mov
xchg
mov
shl
or
out
push
mov
into
int
fnsetpm(287
mov
pop
ja
roll
sub
ljmp
icebp
cwtl
sti
jns
insb
cld
scas
fcomp
cmp
mov
andb
jp
jns
mov
ret
mov
repz
add
xchg
out
or
das
push
push
push
adc
sub
outsl
cmp
nop
nop
add
je
hlt
bound
cmp
pop
lret
cmp
popf
jnp
sbb
and
cmc
cmp
sbb
js
in
test
jno
or
adc
or
int
mov
sahf
push
lds
cltd
mov
aas
or
stc
repz
jo
inc
daa
sbb
sub
test
xchg
adc
insb
es
or
aad
and
movsb
shrb
in
mov
test
inc
dec
aaa
xor
cvtps2pd
xchg
insb
sbb
ret
mov
fildl
push
pop
add
cmp
jg
lock
jae
sbb
mov
mov
adc
arpl
mov
out
mov
clc
xor
mov
mov
push
hlt
cmp
int3
push
lret
lods
out
das
loopne
lahf
aaa
xchg
or
fisttps
mov
pop
movsb
aam
push
sub
jbe
jmp
xchg
xchg
int
push
xchg
lods
adc
imul
sti
xlat
inc
xlat
mov
fstps
arpl
adcb
push
rcr
mov
push
addr16
jae
pop
cs
push
pop
imul
aaa
mov
inc
mov
dec
fidivl
out
mov
int
out
push
xchg
leave
fcmovb
daa
arpl
and
imull
add
sub
clc
dec
pop
mov
ds
ss
outsb
bound
in
in
add
xor
push
fs
dec
jmp
aaa
pfcmpeq
popa
cmc
inc
in
mov
and
xchg
jp
add
mov
xor
push
add
div
lods
push
fidivs
mov
push
pop
cli
divb
dec
dec
cmp
xchg
iret
pop
sahf
dec
sbb
fld
adc
xchg
cmp
mov
movsb
inc
pop
mov
push
add
test
jb
sub
pop
cmc
out
cld
popl
mov
daa
out
xchg
inc
dec
outsb
add
scas
fstpl
insb
rorl
xchg
mov
dec
push
leave
cmp
es
xchg
lcall
mulb
aas
repz
sub
jl
enter
and
cwtl
pushf
arpl
out
push
popa
or
jg
ret
push
fbstp
jnp
lock
enter
pop
push
ret
push
insl
out
int3
rolb
test
fcmovu
aam
inc
dec
xor
mov
jo
mov
scas
push
sahf
and
ret
addr16
lds
fwait
and
ret
cli
dec
pop
mov
add
test
iret
test
adc
sub
mov
mov
stos
aam
mov
mov
imul
inc
mov
add
mov
in
xor
sub
sbb
jae
loope
repnz
sbb
test
or
jmp
pop
pop
mov
dec
cmp
dec
jg
push
xchg
xchg
in
pop
pop
ret
jp
inc
push
inc
lahf
call
push
sub
add
inc
imulb
push
mov
xchg
and
sti
pop
outsl
fsubs
mov
hlt
pop
and
in
sbbl
stos
mov
jno
adc
iret
jno
add
ficoms
xchg
cmp
and
mov
cld
mov
inc
call
dec
ret
mov
jbe
cwtl
mov
sbbl
and
cmp
push
lret
or
adc
or
jmp
mov
inc
cmp
repnz
test
or
subb
xor
inc
xchg
repnz
xchg
cmc
pop
dec
popl
and
jnp
ret
pusha
bound
gs
xchg
cmp
mov
loope
xchg
or
enter
xor
mov
repnz
stos
loope
pop
or
xorb
push
leave
pop
in
mov
aad
mov
gs
pusha
mov
adc
aas
dec
push
js
sub
push
movsb
or
fildll
notl
out
pop
xor
aad
push
arpl
inc
xchg
inc
out
add
xor
outsb
cmp
fildll
mov
incl
jae
sub
adc
push
and
mov
addr16
test
mov
subb
cmpsb
lods
bound
in
pop
jns
jge
mov
fcmove
xchg
lods
mov
insl
aam
insl
aam
push
ficomps
in
and
enter
orl
call
je
lock
lea
std
mov
mov
jg
or
xchg
repz
xchg
push
lret
ret
or
aaa
xor
sub
inc
pop
sbb
cmc
pop
sarl
xchg
push
imul
cs
sbb
repz
add
or
mov
xchg
xchg
jg
sbb
jns
test
pop
gs
lahf
push
mov
push
add
ja
inc
scas
dec
push
pop
add
ret
rcrb
pop
gs
out
dec
cmp
mov
mov
jae
pop
jne
ret
loope
and
sbb
test
adc
fcomps
adc
sub
incl
lret
out
data16
fstl
arpl
inc
or
daa
sbb
sub
mov
cltd
and
out
popf
sbb
mov
pop
jge
mov
adc
pop
loope
and
in
jae
flds
xchg
mov
sub
in
sbb
inc
ds
sub
add
in
addl
add
push
mov
xor
loop
sub
out
sub
inc
dec
mov
mov
addr16
std
stos
pop
dec
add
cwtl
sti
lret
fcmovnu
mov
adcb
sub
pop
xchg
rclb
lret
in
mov
mov
sub
push
or
clc
in
fnstenv
sahf
pop
jl
sbb
pop
or
sub
test
and
jp
icebp
xchg
jge
push
in
mov
ja
cwtl
subl
add
roll
cmpsb
mov
lods
in
push
mov
incb
rol
not
pop
jno
jecxz
aam
xchg
lods
or
jne
fidivs
cld
loop
cwtl
pop
jno
xor
sub
aam
rcrl
push
dec
jb
fs
xchg
xor
iret
nop
fcmovnbe
sti
mov
jl
fisubrl
sub
dec
js
add
or
int3
mov
add
push
inc
mull
sbb
out
pop
imul
bound
push
mov
sub
call
and
inc
xchg
movsl
shlb
scas
mov
jl
out
push
mov
mov
mov
mov
out
xchg
rcll
jge
inc
xlat
mov
imul
insb
stc
fstpl
inc
fimuls
push
cmp
bswap
aaa
lret
inc
das
cmpsl
push
mov
cwtl
fcomi
test
push
sbb
xchg
dec
or
inc
in
mov
ret
popa
ss
add
jae
adc
pushf
add
mov
and
mov
repnz
jne
xor
push
push
xchg
cvtps2pd
adc
sbb
cmc
inc
pop
lret
adc
push
inc
jb
outsl
pop
scas
and
mov
pop
dec
sbb
imul
adc
rol
iret
xchg
pusha
scas
inc
out
jae
stos
add
lds
ret
cltd
cmc
or
adc
jg
inc
dec
and
xlat
dec
push
xor
adc
icebp
pushf
mov
aaa
push
push
sbb
das
pop
mov
test
mov
xchg
cwtl
push
adc
out
pop
dec
adc
and
hlt
mov
int3
xchg
pop
mov
dec
jne
in
pop
xor
stos
jb
sub
movsb
and
lods
inc
or
inc
repz
in
add
stos
loopne
daa
cmp
or
mov
rclb
jle
or
rorl
add
rcr
adc
pop
in
iret
mov
push
ja
fld
pop
in
mov
aad
jnp
mov
mov
sbb
and
lods
cmp
adc
mov
mov
adc
xchg
xchg
jmp
mov
mov
mov
fdiv
dec
push
inc
adc
stos
shll
mov
aad
sbb
push
inc
popf
dec
pop
fidivrs
add
mov
js
cmp
jo
imul
push
mov
mov
and
in
in
xchg
fs
cmp
addr16
mov
pop
mov
add
adc
mov
movsb
pop
cmpsb
inc
ror
xchg
sub
mov
mov
shlb
cld
test
sbb
cli
aas
mov
dec
mov
ds
into
fwait
cs
mov
adc
dec
bound
mov
popa
mov
add
fdivrl
stos
and
add
jne
mull
inc
daa
jmp
inc
les
jmp
leave
lds
inc
lcall
lret
pop
and
fs
push
mov
jb
mov
dec
ficoms
rclb
add
cltd
xor
lods
xor
dec
in
push
lds
and
cmp
mov
jp
sbb
mov
mov
jne
mov
add
fwait
push
pusha
mov
push
fucomp
dec
pop
in
push
rcll
cmpsl
jb
ja
push
lea
xor
out
fsubrs
inc
mov
call
mov
sub
sbb
dec
jo
sub
or
adc
dec
push
fsubrs
push
movsb
gs
clc
mov
xchg
push
inc
and
or
push
push
jbe
bnd
lcall
filds
pop
repz
call
inc
cs
outsb
das
mov
mov
rol
out
out
icebp
fwait
xchg
jbe
andnps
dec
mov
das
xor
xor
rorl
js
mov
out
pusha
cwtl
jno
sub
dec
jmp
je
lahf
push
push
dec
inc
std
jl
push
loop
shll
ret
xor
mov
xor
enter
add
lea
decl
pop
lcall
inc
mov
or
cmpsl
sahf
jae
pushf
js
shlb
gs
repz
cmpsb
lock
pop
cltd
xchg
mov
inc
ret
inc
jae
and
lret
fisttpll
bound
push
mov
test
add
mov
fcoml
inc
loop
dec
fsubrl
loope
arpl
out
xor
data16
jns
mov
ja
pop
xchg
insl
add
jp
sub
les
in
test
js
add
pop
mov
jo
push
mov
jp
loopne
aas
jbe
test
int3
pop
adc
int3
stc
test
pop
cwtl
ficoms
lods
mov
lret
cwtl
cli
ja
mov
mov
xchg
movsl
dec
push
mov
push
mov
xor
mov
sub
adc
cmp
mov
mov
ret
sub
rcr
lods
stos
int3
add
addr16
mov
jp
fwait
mov
add
pushf
sub
iret
pop
out
cmp
mov
xor
cmc
push
mov
cmp
into
movsl
pop
rcrb
jecxz
sti
icebp
rcrb
push
jne
imul
pop
shll
sub
stc
pop
jge
cmp
mov
out
mov
inc
cwtd
cld
pushl
add
xchg
imul
sbb
lahf
mov
popa
cmp
xchg
test
gs
mov
adc
das
in
xchg
dec
xlat
add
dec
fwait
mov
pop
mov
cmp
int3
push
orb
lret
push
aam
addl
test
inc
mov
mov
xchg
jg
sarb
decl
loopne
xor
pop
or
mov
into
aaa
mov
or
add
pushf
lods
pop
arpl
mov
jae
call
add
or
adc
fs
or
push
dec
xchg
lea
jle
mov
or
push
xchg
jbe
imulb
cltd
xchg
hlt
lds
pop
lcall
cmp
adc
inc
cmpsl
xor
push
add
int
shlb
mov
stos
jne
xor
addl
nop
mov
mov
xchg
fdiv
popa
enter
aas
lcall
and
stos
icebp
sub
fcmovbe
dec
mov
ficoml
xor
fidivs
pop
push
orb
mov
sbb
or
sub
xor
add
pop
cwtl
and
fmul
leave
stos
test
sbb
sti
push
pop
xor
fnsave
xchg
jmp
mov
mov
cld
cmp
ret
sbb
add
or
cmp
xor
mov
pop
mov
jnp
inc
or
roll
inc
cmp
inc
xor
call
fiaddl
mov
jns
jg
xor
jnp
in
inc
outsb
cmp
cltd
imul
sbb
mov
data16
mov
push
sbb
dec
lret
pop
jmp
imul
cmp
outsl
or
mov
mov
test
pop
adc
rorb
clc
jns
adc
shlb
xor
or
pop
xchg
mov
xor
sub
push
pop
mov
cmp
aas
movsl
sub
dec
in
sar
int3
jb
jae
mov
jge
push
aaa
xor
fiadds
mov
adc
lods
es
popf
mov
mov
int3
mov
jno
mov
jbe
mov
nop
jns
pop
mov
sar
add
pop
test
lret
into
sti
xor
xor
push
push
pusha
sub
xchg
jmp
or
daa
testl
lods
out
mov
and
negl
test
ljmp
cmp
push
mulb
or
jb
imul
dec
cmpsb
push
xor
mov
push
fwait
aad
and
pop
and
adc
lea
push
cmc
mov
call
xchg
sbb
stos
dec
cmpsl
sub
and
inc
shll
pushf
out
and
xchg
sahf
dec
adc
mov
in
out
xor
mov
adc
xor
adc
lock
out
shrb
or
pop
imul
dec
adc
cmpsb
push
aaa
xor
jle
sub
cs
out
mov
add
mov
aad
or
xchg
or
jb
enter
mov
lods
fcomps
jp
out
stos
inc
cmp
xchg
xchg
push
mov
mov
imul
call
into
les
addb
xchg
cwtl
mov
out
jg
mov
cmp
sahf
into
cmp
imul
or
and
push
sbb
enter
jg
js
andb
test
ss
add
dec
pop
cmc
lret
incb
into
sub
popa
adcl
lea
outsb
leave
ja
xchg
mov
jbe
mov
lret
mov
mov
shll
lea
test
and
mov
aaa
lret
imul
mov
jmp
lret
push
sub
mov
ret
cltd
nop
out
int3
sub
dec
sub
push
push
sbb
xchg
mov
push
dec
enter
xchg
inc
lea
dec
cld
ds
or
jno
and
popf
mov
mov
aad
imull
inc
nop
dec
add
sbb
ffree
cmp
repnz
mov
sar
mov
lret
loope
orl
jns
ret
jle
clc
das
and
sbb
adc
repz
jb
fnstcw
loopne
out
push
insb
fs
imul
push
loopne
adc
loopne
or
shrl
xor
scas
mov
data16
mov
inc
les
fisttpl
sub
cmp
jg
mov
mov
xor
add
out
jmp
loopne
push
out
fcompl
pop
jno
xchg
sbb
and
inc
ss
or
cmp
mov
mov
je
push
cs
push
cmp
mov
sarl
jg
test
ret
xor
jmp
sahf
insl
xor
ja
jmp
inc
lret
inc
aaa
inc
or
mov
cmp
xchg
aaa
movzbl
stos
xchg
lods
mov
jae
push
shr
cmp
call
es
or
insb
imul
push
xchg
inc
stc
xor
aas
push
fidivrs
clc
jecxz
rcl
das
dec
add
jns
and
jmp
jl
inc
aas
fnstcw
fildll
xchg
adc
repnz
jecxz
pusha
ret
mov
mov
pop
je
test
and
rcr
or
addl
pop
pop
pop
fsubr
sbb
lods
fwait
lea
or
scas
dec
dec
into
push
clc
pop
sub
pushf
inc
cmpsl
add
pop
mov
inc
cmpsb
sbb
xchg
iret
repnz
stos
fcompl
inc
add
fsts
sbbl
cmpsb
icebp
cli
xor
lock
movsb
mov
xchg
cmp
das
jp,pt
fsts
mov
stos
sbb
test
ficoms
xchg
insb
inc
in
pop
lret
sets
sbb
add
aam
rcl
dec
popf
and
cmp
xchg
mov
add
mov
pop
aaa
fadds
mov
push
test
push
scas
dec
sub
mov
std
ror
or
loop
loop
data16
mov
dec
in
xor
out
rolb
xor
sub
push
jecxz
test
push
dec
mov
jp
shrl
hlt
test
stc
mov
ss
sbb
leave
mov
jmp
frstpm(287
pop
pop
mov
loope
cmpsb
mov
adc
xchg
mov
scas
movsl
test
leave
ret
dec
inc
call
ror
sbb
xchg
jp
pop
sub
xchg
mov
fdivrs
pop
mov
and
push
fdivrp
adc
in
iret
xor
xchg
out
add
mov
mov
or
fisttpll
cmpl
adc
icebp
je
and
out
repz
rolb
fistl
xor
add
lret
cmc
sbb
sbb
push
scas
mov
push
rol
xor
and
ljmp
aaa
imul
fnsave
pop
add
sub
test
and
insl
xchg
pop
or
cld
aas
data16
xor
ret
mov
cmp
jae
out
test
xchg
mov
fdivl
sbb
pop
loop
push
xor
push
jnp
mov
cwtl
dec
add
ficomps
pushl
mov
jmp
shll
xor
mov
mov
clc
stos
fcom
fmull
adc
dec
jns
mov
add
mov
std
sbb
add
inc
faddl
sub
mov
test
rclb
pop
cmp
inc
sbb
mov
adc
and
imulb
pop
jmp
lods
gs
insl
or
outsb
ret
push
cld
or
dec
les
xchg
add
push
cmp
insb
cmpl
imul
bound
mov
jb
in
fbld
dec
mov
out
in
or
pushf
mov
jne
xchg
int
mov
push
cs
inc
insl
push
addr16
shrb
std
loope
int
cmp
jo
int3
shrl
lahf
inc
fbstp
out
ds
and
push
add
pop
sub
in
bound
xorb
daa
pop
mov
addr16
les
lretw
jae
cmc
or
shlb
test
cld
in
xlat
dec
imul
jo
xor
sub
pop
fisubrl
scas
pop
movl
lds
push
jnp
call
mov
dec
xchg
popa
adc
cmpsb
pop
jp
testw
scas
adcb
jns
shrb
xchg
jne
insl
push
pop
push
cmp
dec
inc
inc
outsb
test
pop
dec
lahf
xlat
mov
inc
mov
mov
push
adc
xor
test
mov
mov
sub
mov
mov
sbb
scas
sbb
jbe
push
imul
push
sub
jns
loope
idiv
inc
cmpsb
adc
ljmp
outsl
outsl
pop
xor
mov
jne
outsl
add
arpl
mov
out
mov
pop
cld
loope
jmp
fstl
cmpsb
movhlps
fdivl
xor
jns
xchg
adc
rorb
pop
pop
cmc
cs
cltd
insb
pusha
movsl
lods
rclb
adc
xchg
call
pop
mov
cs
neg
mov
pop
pop
sub
dec
jbe
stc
aaa
add
xorl
in
or
and
daa
mov
addr16
dec
add
es
sbb
test
sub
sti
enter
cmc
js
sub
arpl
push
scas
int3
add
in
inc
mov
sahf
dec
inc
cmp
dec
jge
test
inc
movsl
pop
pop
je
mov
sub
mov
movsb
incb
ret
sbbb
ret
fidivl
xor
xor
clc
sbb
mov
bound
rcl
and
jbe,pn
add
xlat
or
and
cmp
div
and
cmpsl
imull
and
and
fdivr
int
adc
xor
sub
popf
adc
mov
and
sub
fnstenv
sub
lahf
sbb
mov
mov
insl
insb
dec
sti
xor
enter
cmp
sbb
mov
loope
into
add
push
mov
fwait
mov
cmpsl
dec
add
fs
mov
and
movsl
or
dec
cmp
lret
jo
adc
sbb
stc
jmp
push
loope
mov
inc
push
pop
mov
pop
xchg
test
push
jle
xchg
dec
cltd
in
imul
nop
iret
xor
ret
mov
fisttps
jns
sub
sub
stos
lret
or
jmp
mov
ss
ret
popa
in
std
jp
shr
mov
dec
pop
cmp
mov
add
inc
lds
imulb
lock
or
xor
jecxz
xor
ja
pop
ret
push
lret
fdivrs
rorb
add
leave
mov
jg
sub
mov
fyl2xp1
insl
adc
push
xor
mov
push
xor
mov
cltd
orl
xchg
mov
scas
mov
pop
rorb
lods
movsl
sbb
out
rcrl
sub
test
and
insl
ficomps
jmp
push
daa
mov
add
jp
in
stos
shr
fucom
lret
jl
mov
cli
mov
shll
adc
push
jg
or
aaa
inc
pop
xchg
or
pop
cmp
ja
test
lds
xchg
data16
insb
inc
lret
mov
xchg
pop
mov
xchg
dec
mov
dec
fisubl
dec
dec
in
in
jne
push
dec
fistps
clc
jb
or
pushf
mov
loope
bound
xor
sarl
pusha
dec
mov
pop
nop
es
stc
inc
cmpsl
xchg
insb
inc
ds
sbb
aam
test
jno
cwtl
jae
add
ja
push
pop
xchg
enter
fistps
fdivrs
mov
aaa
inc
mov
sti
add
fildll
add
rcrb
call
lock
push
pop
stos
mov
xor
inc
mov
dec
inc
dec
jne
push
mov
sbb
xchg
xchg
jecxz
add
shll
adc
dec
cmp
mov
push
test
test
jne
mov
jecxz
inc
jno
pop
lods
fs
jg
imul
xchg
sub
jne
mulb
insb
adc
adc
sub
inc
lods
ret
adc
std
push
push
popa
push
pop
mov
in
rclb
xorl
roll
mov
push
mov
inc
vphaddwq
iret
insl
push
or
xor
mov
or
cli
and
mov
jmp
movsb
mov
pop
icebp
sbb
cmp
fwait
cmp
cli
push
fistpll
jl
push
add
in
loope
add
call
mov
negb
dec
mov
stc
ja
int3
bound
pop
cwtl
mov
adc
mov
mov
cmp
icebp
fsubl
mov
stos
les
mov
adc
jge
outsb
js
cs
lcall
jmp
mov
sti
insl
push
es
mov
and
std
push
push
loop
shlb
push
cwtl
lret
pop
aaa
lods
mov
jno
inc
adc
jmp
sbb
xlat
rcrl
lock
dec
mull
and
add
mov
mov
imul
test
xchg
out
jae
sbb
jb
dec
push
add
decl
aaa
xor
xor
test
dec
pop
lcall
mov
pop
mov
mov
push
mov
xchg
cmp
cmp
sbb
nop
pop
in
xor
movsl
pop
mov
stos
lds
test
clc
push
and
pop
arpl
and
outsb
push
fs
mov
enter
pop
and
or
jae
mov
jg,pt
sub
roll
inc
sarl
adc
rorb
mov
idivl
in
in
fsqrt
sarl
xchg
push
popa
gs
scas
jo
arpl
cmc
xor
daa
or
out
inc
or
inc
sub
jno
jne
adc
mov
mov
iret
ret
mov
cmp
cmpsb
xchg
mov
push
cmp
inc
mov
xor
and
or
adc
and
dec
adc
push
shll
fldt
adc
sahf
and
pop
or
push
mov
aaa
xor
inc
sbb
js
pop
jge
lds
js
scas
add
dec
pop
mov
in
lret
mov
xchg
sub
into
out
adc
mov
ret
add
mov
ss
subb
ds
cmc
add
fs
add
cmp
call
xor
push
aam
or
sub
enter
stos
cmpsl
sub
dec
xor
dec
pop
adc
push
pop
xor
and
fidivs
adc
ud0
adc
repz
or
mov
pop
sti
add
jno,pt
jle
mov
dec
sahf
xchg
pop
aam
insl
in
xchg
shl
mov
inc
xchg
mov
add
pop
mov
dec
xor
or
cmp
xorb
je
scas
mov
add
jbe
or
fdivs
cs
sahf
bnd
lahf
stos
icebp
sti
loopne
jle
addr16
adc
adc
pop
adc
shl
out
mov
enter
sub
mov
push
add
push
push
jae
xchg
sbb
enter
sub
push
or
push
test
and
daa
pop
clc
push
xchg
xchg
sahf
dec
mov
mov
and
inc
dec
insb
lret
fldt
into
mov
adc
daa
mov
fbld
gs
adc
jne
jbe
add
cmc
sub
arpl
xchg
cmc
mov
into
mov
in
je
or
sbb
mov
jno
int
movsb
mov
add
ja
mov
ds
xor
xchg
stc
test
xchg
xchg
sbb
push
mov
mov
test
mov
pop
clc
pi2fw
aas
jno
or
pop
hlt
xchg
push
imul
out
stos
fidivs
inc
xchg
mov
lods
mov
xchg
movsl
dec
pusha
adcl
std
mov
mov
stc
fidivrl
push
icebp
mov
xchg
movb
and
dec
scas
dec
ja
push
and
and
in
mov
sub
in
push
jns
test
les
mov
sbb
pop
mov
fldlg2
lcall
xchg
test
out
stos
loope
loop
imul
dec
add
sbb
mov
fstl
test
add
pop
fists
ljmp
dec
shl
jns
call
test
insb
in
and
sbb
cmpsl
int
nop
mov
lods
ficoms
out
inc
aaa
insb
idiv
or
call
xor
mov
adc
push
jp
push
inc
push
les
cltd
fadds
stc
add
jnp
addb
mov
and
sub
dec
into
outsl
jne
xlat
fcoms
rolb
dec
inc
mov
sub
pop
push
mov
test
mov
ror
jecxz
fsubr
push
or
add
lock
subb
in
les
ret
stos
dec
jo
test
inc
movsb
mov
mov
jmp
std
testb
add
mov
gs
or
xchg
jno
and
loopne
mov
out
adc
mov
fs
call
aad
rclb
inc
push
mov
cmp
xchg
mov
push
or
and
cmc
mov
clc
aad
mov
inc
and
mov
int3
dec
test
dec
fiadds
inc
insl
add
mov
jns
mov
cwtl
adc
rcl
add
out
push
xchg
jl
add
xchg
jle
xchg
inc
into
push
ljmp
sarb
jns
je
inc
dec
outsb
mov
and
pop
push
in
cld
sbb
mov
or
movsb
xchg
test
xchg
inc
scas
dec
std
lret
xor
insb
mov
or
scas
cmpsl
jl
push
mov
mov
shll
pop
mov
stos
fwait
mov
mov
outsl
jl
mov
sbb
cwtl
sub
xlat
pop
daa
lea
stos
jp
add
test
mov
inc
mov
test
rep
cmp
mov
mov
xchg
push
mov
into
push
ficoms
push
inc
faddp
dec
lret
cmp
dec
in
lret
add
pop
movsl
add
cmp
movsl
sub
addr16
insl
testb
inc
lea
xor
cmpsl
dec
decb
adc
push
mov
lahf
outsl
add
into
push
mov
shrb
sub
popf
ss
bound
or
mov
in
pop
es
in
jmp
scas
lds
dec
push
lock
pop
insl
xor
push
add
sub
sub
sahf
sub
add
adc
add
inc
pop
xor
jbe
xchg
fst
popf
repz
push
mov
jg
dec
inc
fldenv
and
mov
dec
ljmp
pop
test
jno
mov
jns
inc
pop
andl
icebp
je
mov
inc
mov
shl
jb
inc
pop
cmp
push
jl
inc
mov
insl
jmp
scas
xor
ss
loop
xor
mov
pushf
and
icebp
inc
std
sub
aaa
jge
pop
test
mov
xchg
dec
mov
dec
cltd
inc
pop
shll
dec
std
or
dec
mov
sub
movsl
ret
mov
fidivrs
lods
test
pop
sub
je
xchg
imul
push
outsb
popf
xor
sub
sahf
and
int
ret
subb
push
ds
sbb
rcll
cmpsl
or
mov
in
or
sarb
test
inc
test
mov
aas
adc
pop
xlat
incl
ss
ret
gs
mov
adc
adc
leave
mov
lods
push
enter
or
mov
out
decb
mov
xchg
mov
inc
sub
fdivrs
pop
fwait
test
pop
mov
or
daa
cmp
iret
lds
push
xor
addb
mov
jno
or
sahf
imul
out
gs
addb
lret
ljmp
or
jl
subl
xor
mov
jnp
insb
test
dec
xchg
dec
xchg
mov
push
xchg
roll
aam
rcrb
jb
mov
push
adc
fcomp
in
outsl
aad
mov
cmp
fidivrl
repnz
popa
mov
into
fwait
jp
jl
sbb
pop
push
lock
mov
and
pop
hlt
das
add
ss
and
xchg
pushl
mov
sbb
movsl
pop
ret
std
dec
pusha
xchg
nop
adc
scas
lret
mov
aas
cwtl
adcb
daa
in
fs
cld
fmull
cmpsb
insb
mov
cs
mov
xor
aaa
push
insl
sub
jns
mov
pop
xchg
jnp
cmp
push
int3
data16
int
sbb
ss
repz
adc
int
and
repnz
gs
sbb
jp
mov
in
in
xchg
jbe
inc
push
sbbl
cltd
cmp
ret
je
fistpl
jge
sbb
push
repnz
mov
cmp
movsb
outsb
pop
jmp
push
sbb
popf
fisttpll
inc
in
pop
mov
xor
jo
push
sub
ljmp
inc
cmp
xchg
or
scas
insb
adc
or
or
sub
dec
or
dec
int
inc
push
inc
icebp
icebp
mov
loopne
add
aam
dec
xchg
jo
bound
inc
dec
movsb
fdivrs
lods
shl
ljmp
jle
loopne,pt
sub
or
jnp
cmpsl
inc
adc
je
jl
les
mov
stos
test
adc
cli
dec
imul
dec
sar
jmp
xchg
pop
xchg
test
add
cmpsl
dec
xchg
faddl
adcb
cmp
mov
xor
pop
lahf
mov
ret
and
sub
adc
popf
imull
cmp
mov
in
movsb
dec
push
cmp
ss
sbb
mov
push
mov
inc
arpl
adc
fdivrl
mov
adcb
mov
xor
in
or
mov
mov
mov
xchg
in
fists
out
push
int
shl
popa
fsubp
or
clc
daa
push
xor
mov
insb
lcall
cltd
clc
int
sbb
mov
xchg
jbe
inc
fsubrs
pop
scas
insb
fsubr
dec
insb
icebp
inc
sub
and
push
pushf
scas
out
movsl
jmp
sbb
popa
popa
lret
loopne
sub
inc
push
mov
add
ret
fcomps
mov
add
adc
xor
aad
push
int3
leave
scas
pop
faddl
cmp
out
sub
sub
popa
addb
lods
or
cmp
enter
lcall
loop
mov
in
lret
jle
push
mov
or
add
mov
in
test
cld
or
or
pop
cmp
sbb
pop
mov
xor
arpl
jge
lahf
jnp
jecxz
into
mov
sti
hlt
mov
adcb
or
je
xchg
pushf
adc
adc
mov
adc
xor
int3
ret
sub
loop
jne
lds
lods
fadds
sbb
or
popf
aas
fdivrl
test
ficompl
push
jae,pt
jne
and
cmp
cltd
jp
mov
cli
aas
stos
inc
lcall
sub
repz
jno
cli
stc
dec
pop
stos
inc
out
jle
xchg
mov
xchg
int3
jmp
dec
or
subl
jnp
xchg
jae
jp
inc
xchg
ds
outsb
ja
pop
inc
bound
jmp
pop
push
dec
loope
int
test
mov
lds
pop
mov
je
dec
jae
push
jae
and
insl
sti
mov
lds
pop
addr16
add
sub
ret
push
lret
rol
sahf
aas
xor
adc
inc
les
adc
je
jmp
test
dec
fadd
xchg
fprem1
inc
sub
stc
xchg
cmpsb
xchg
cmp
lcall
inc
jle
and
fdivr
jge
loope
cmp
aad
add
xor
mov
decl
aam
adc
lock
cld
cmp
xchg
xchg
lea
out
pop
inc
mov
bnd
pushf
leave
and
jle
xor
in
lods
aas
jne
dec
std
xchg
ljmp
adc
push
test
shll
cs
std
js
ret
and
xor
std
xchg
pop
sbb
xchg
mov
mov
test
in
jnp
jecxz
mov
mov
retw
push
shlb
das
int3
scas
mov
mov
icebp
fwait
pop
mov
repnz
mov
icebp
sub
pop
jle
sarl
int
pop
not
push
dec
sub
add
mov
mov
addr16
pop
aam
jge
sub
call
inc
out
push
jge
ljmp
bts
jmp
or
cltd
bound
xor
addr16
sbb
lock
cmpsl
sub
mov
mov
std
sbb
lahf
insb
pop
add
mov
outsb
shl
imul
test
sub
add
sub
inc
xchg
aas
push
inc
mov
cmpsb
pop
and
daa
and
sti
andl
push
in
popf
shl
mov
outsb
sub
inc
push
adc
call
icebp
and
bound
ljmp
cmpsl
je
adc
ret
mov
xor
cltd
insb
pop
dec
lods
arpl
inc
pop
aad
ljmp
push
cmp
bsr
mov
jnp
pusha
jge
adc
lret
jbe
mov
imul
imul
dec
jmp
jl
mov
mov
add
inc
sbb
dec
pop
dec
call
xchg
sub
sub
jno
orb
xchg
or
add
sbb
loopne
mov
xchg
xchg
xchg
jl
jmp
and
sti
jne
pop
xor
test
xor
outsl
js
out
int
lahf
fisubs
popf
dec
pusha
cmp
scas
test
add
hlt
bound
mov
bound
sbb
cmp
pop
or
xlat
jl
cmpsl
in
adc
push
pop
outsb
lds
xor
testb
mov
xorl
in
pop
imul
outsl
insb
in
push
out
insb
inc
stos
and
je
fs
int
adc
les
cld
mov
aam
mov
mov
nop
pop
shlb
test
mov
xor
cmpl
xchg
jae
jae
adc
test
mov
mov
cli
divb
dec
aaa
dec
and
cld
jb
je
fucomp
out
mov
adc
leave
pop
out
xchg
xchg
mov
add
dec
scas
orl
les
mov
pop
lds
les
fadds
adc
insb
daa
add
mov
push
add
inc
cmpsb
fcomp
pushf
mov
mov
ja
fdivrl
add
or
enter
push
mov
es
xchg
dec
cli
mov
xor
std
cli
sbb
jo
mov
cli
movsl
pop
ljmp
inc
push
xchg
gs
ja
lock
in
mov
leave
and
add
inc
lea
fdivrs
mov
sub
mov
inc
clc
mov
pushf
loope
and
sub
fs
mull
lret
jmp
dec
dec
pop
test
dec
xchg
push
push
cmp
add
cmp
scas
mov
mov
aas
and
test
mov
fwait
jbe
jle
lcall
frstor
sar
and
xchg
pop
and
lods
sub
insb
leave
fcmovnu
cmc
push
loope
xchg
in
dec
dec
test
sbb
mov
sbb
mov
sbb
ss
mov
push
outsl
das
popf
mov
mov
pop
jns
roll
xor
addr16
fbstp
icebp
arpl
adc
jbe
leave
xchg
in
jbe
fstl
fsubrs
insl
mov
jp
sbb
cmpsb
cmp
lea
andb
mov
push
cmp
push
sub
xor
push
mov
jp
cmp
xor
sbb
leave
addb
aas
repnz
mov
jl
sbb
pop
jns
xchg
shll
mov
ds
pmullw
imul
ret
mov
push
arpl
pop
mov
sahf
rorb
xlat
xchg
lret
dec
xchg
sub
and
lods
and
dec
loop
test
bound
test
mov
fucom
cmpsl
xor
jmp
mov
adc
mov
lods
es
fdivl
sub
in
cmpsl
std
adc
pushf
adc
sbb
pop
in
int
dec
out
sahf
mov
shlb
shlb
or
sbb
lret
inc
imul
aaa
inc
mov
or
jo
sub
rol
popf
cld
jp
inc
mov
lcall
mov
fs
in
nop
mov
aam
loop,pt
mov
sbb
and
pop
jle
call
cmp
aad
clc
bound
mov
mov
fwait
xor
mov
sbb
sub
mov
dec
fmull
cld
enter
bound
mov
cmpsb
outsb
inc
mov
pop
int
into
sahf
mov
dec
mov
out
mov
cmp
es
push
sub
mov
xchg
push
pop
jp
outsb
leave
fisttpll
inc
mov
sbb
push
jge
je
sbb
mov
mov
cwtl
xor
int
push
mov
push
mov
or
int3
xor
inc
test
int
push
or
ljmp
mov
push
pop
fcompl
jecxz
sub
mov
cmp
and
lods
dec
mov
shr
sub
jb
dec
dec
jae
lret
jge
add
cltd
jne
cmc
sti
sbb
scas
shl
dec
lcall
jo
cmc
les
jecxz
arpl
rclb
sbb
xchg
jo
pop
es
dec
cmp
inc
add
and
jmp
or
pop
fmulp
pop
xchg
insb
in
pop
jo
insb
test
lcall
adc
sbb
mov
cmp
pop
test
mov
xchg
jmp
popl
insl
adc
inc
pushf
sub
lcall
cwtl
jle
sub
aad
out
int3
insb
sti
or
test
pop
and
mov
loop
out
insl
adc
leave
out
divl
mov
nop
lahf
mov
or
pop
mov
xchg
test
adc
jb
dec
mov
inc
inc
and
jns
test
mov
xor
mov
lock
rolb
mov
arpl
push
adc
push
jg
cltd
popf
aad
lret
inc
push
cli
int
mov
sarl
xchg
or
jno
aad
jg
dec
addr16
in
lea
xchg
lcall
jns
data16
in
lock
push
xchg
inc
in
jl
cmp
loope
lock
call
mov
frstor
xchg
and
repnz
shll
push
in
cmp
hlt
test
inc
adcb
mov
in
xchg
aam
inc
pop
cld
dec
aas
mov
out
out
pop
add
push
shll
adc
data16
mov
pop
mov
lret
mov
movsl
sbb
or
xchg
idiv
push
sbb
jno
out
jns
insl
jecxz
xchg
stos
push
dec
push
and
cmp
mov
push
fwait
sbb
inc
cmp
dec
jmp
jbe
cmpsb
mov
ficoms
dec
xor
bound
jns
cmp
int
outsb
call
popf
dec
jb
rol
dec
xchg
cmp
scas
stos
aad
add
cmp
jo
cmp
imul
mov
inc
xlat
mov
pop
fimull
add
cltd
data16
jp
push
imul
and
or
ss
lods
xchg
jbe
sub
and
dec
or
es
aam
cmp
xlat
jne
hlt
out
push
scas
jb
test
xor
shrl
lret
fs
lahf
add
adc
xchg
movsl
lods
stc
mov
mov
mov
mov
pop
inc
test
shll
leave
xor
fdiv
cmp
outsl
pusha
in
jae
addr16
int3
shll
movsl
mov
mov
je
cmp
sbb
call
inc
or
outsb
aad
js
mov
mov
in
not
rolb
xchg
rorl
test
imul
in
pop
lds
pushf
inc
mov
dec
shll
sub
jl
push
ss
test
push
jns
fs
movsl
arpl
and
sub
add
popf
insb
push
jo
sti
lea
jb
and
pop
xchg
jns
call
jnp
xchg
sbb
push
or
shl
or
fistpl
adc
jge
mov
lock
lret
or
jl,pt
jge
or
loope
scas
lret
out
test
push
cmp
jns
adc
cmp
cld
subb
aaa
jae
insb
lea
test
mov
pop
mov
jns
loope
cmp
cmp
cmc
push
cmc
push
pop
test
lcall
nop
pop
or
push
lcall
mov
popa
sub
inc
mov
xchg
into
ds
pop
lret
out
iret
sub
push
jmp
mov
lret
ss
movsl
ljmp
inc
fwait
or
iret
.byte
outsl
nop
adc
mov
nop
add
add
popa
adc
adc
inc
lds
jmp
stos
cmpsb
fsubr
es
sub
jnp
rcll
scas
je
cmp
add
mov
dec
bound
js
adc
dec
lods
jbe
pop
shl
and
pop
clc
inc
scas
vmwrite
movsl
mov
pusha
cmc
test
nop
pop
addb
xchg
aad
js
push
and
loopne
xchg
add
cmpsb
data16
cmp
pusha
into
cmp
mov
rcrl
addr16
repnz
ret
addl
lods
test
imul
orb
insb
gs
push
push
and
inc
es
xlat
pop
cli
xchg
das
pop
and
bnd
push
push
int3
ljmp
fidivl
cmp
xlat
mov
mov
cwtl
mov
orl
stos
mov
mov
cmp
out
inc
clc
xchg
xchg
fsubl
gs
pusha
mov
pop
mov
mov
jecxz
xor
sbb
sahf
jmp
cld
loop
pop
xchg
xor
cmp
inc
data16
cmp
in
or
cld
cmp
jo
test
sub
mov
clc
mov
sti
mov
xchg
insl
inc
mov
movsb
je
inc
cli
inc
repnz
sbb
test
inc
int3
push
mov
call
jne
xchg
lds
xchg
fstpt
and
jl
xchg
jo
iret
xchg
inc
fs
lahf
fwait
ljmp
sub
inc
icebp
and
ror
and
jg
lods
mov
addr16
data16
cmp
lods
popa
in
and
xlat
repz
push
mov
inc
or
fwait
pushf
repnz
outsl
and
push
adc
mov
jmp
je
sbb
pop
sub
pop
mov
lds
aad
cmp
mov
pop
add
.byte
stos
in
add
add
add
add
add
add
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
addb
add
loopne
add
add
add
add
add
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
add
add
add
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
add
add
fadds
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
js
add
mov
add
in
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
stc
add
pushf
add
add
add
add
add
add
add
adc
add
in
add
add
add
js
add
or
add
in
add
add
add
cmp
add
add
add
add
add
add
incb
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
in
add
add
add
loopne
add
mov
add
add
add
add
add
in
add
add
add
xor
add
sbb
add
in
add
add
add
push
pop
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
or
add
add
add
add
add
add
add
add
jbe
add
in
add
add
add
rol
add
add
in
add
add
add
vpshufb
add
in
add
add
add
call
add
add
add
add
add
add
ret
pop
add
add
add
add
add
add
ret
add
add
in
add
add
add
cld
ret
pop
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
fldl
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
add
xor
rorb
xchg
aaa
leave
pop
adc
ja
scas
gs
inc
jbe
push
arpl
cmpb
xor
lock
xchg
lock
sbb
fcompl
or
cmpsl
fs
ds
or
jo
pop
movsl
and
jmp
mov
mov
push
and
lcall
int
dec
cltd
pop
mov
push
pop
loope
mov
sbb
ja
and
test
xchg
mov
clc
sub
psubsb
sbb
mov
adc
mov
adc
push
filds
outsb
popf
les
xor
fisttpll
and
push
push
dec
add
sub
adc
insb
ja
xor
arpl
push
popf
cld
bound
leave
outsb
insl
inc
cwtd
ja
ljmp
movsb
xor
icebp
sub
xchg
adc
xchg
fsubrl
mov
ja
pavgb
push
mov
cwtl
gs
pop
sub
and
loopne
mov
fistpll
mov
and
jle
mov
cmp
jle
inc
jecxz
mov
cltd
loope
clc
popf
ja
and
or
mov
in
inc
cld
adc
xchg
orl
leave
repz
dec
in
mov
cli
insb
test
sbb
loop
xchg
add
sbb
mov
test
sub
stos
lods
mov
rclb
cli
int
setbe
pop
xchg
pop
pop
out
adc
es
xchg
es
pop
es
and
lods
movsl
jo
xlat
addl
insl
inc
mov
xchg
stos
cwtl
shr
xor
xor
fldl
push
sub
loop
pop
mov
orl
mov
mov
jl
lea
xlat
pushf
pop
negb
loop
fstpt
cmp
cmp
dec
jns
iret
rcl
or
repz
push
movsb
sti
jae
sbb
mov
xor
scas
xlat
cmc
jae
jl
add
xchg
push
push
sbb
aaa
ror
jl
jbe
xchg
lcall
fnstsw
out
pop
fsubrl
mov
or
xchg
inc
push
cltd
mov
jb
stc
nop
subb
cmp
sub
jno
aas
int
daa
insb
cld
incb
or
pop
out
out
or
mov
lods
pop
adc
add
jns
lds
cmp
hlt
leave
out
stos
push
pop
gs
dec
mov
sbb
mov
fistpll
mov
inc
sbbl
loopne
mov
push
call
and
xchg
pop
cmp
xchg
mov
cli
mov
xlat
sub
push
mov
jp
shl
into
test
cs
sti
enter
inc
scas
lds
out
aaa
loope
mov
not
out
in
pop
mov
push
jbe
popa
in
iret
ret
or
aam
stos
mov
popf
dec
jecxz
mov
add
xlat
insb
popa
popl
sub
mov
push
unpcklps
iret
ret
sbb
pusha
lods
adc
in
dec
xchg
movsb
or
daa
enter
or
ret
icebp
push
push
dec
into
push
dec
xor
in
cld
push
lahf
vmwrite
pop
mov
aam
je
outsb
and
leave
push
mov
leave
test
adc
mov
pop
lret
pop
mov
cmp
jo
jmp
into
fdivrp
imul
mov
mov
xchg
les
lret
jo
out
adc
stos
xchg
in
cmp
jmp
das
sub
rcrl
and
mov
cmp
add
mov
mov
add
sti
jmp
mov
pop
incl
push
jl
lds
aam
mov
mov
or
sub
push
mov
enter
dec
add
add
aad
or
mov
xlat
inc
sti
pushf
popa
inc
lcall
imul
cmp
pop
xchg
pop
nop
insb
jns
xchg
and
jb
mov
icebp
inc
mov
push
iret
scas
in
testl
popa
add
nop
in
mov
daa
jecxz
les
dec
lret
add
in
in
cld
pop
dec
adcl
mov
lds
xchg
cli
inc
pop
in
jg
mov
jge
loope
arpl
fisubrs
jg
fmul
cmc
adc
std
or
pusha
inc
xor
sbb
scas
repz
sub
imul
sbb
mov
fisubl
addr16
in
xor
sub
std
lds
or
or
lds
adc
les
nop
add
mov
pop
push
cmc
mov
cmp
aad
outsl
mov
inc
loop
fstl
xchg
cmp
or
pusha
sbb
sub
jecxz
in
jae
inc
jnp
jbe
fisubrs
mov
push
jae
pop
mov
dec
js
jo
movsb
lahf
movb
jl
jns
es
jae
mov
jb
or
pop
push
pop
faddl
sub
cltd
outsb
sub
out
inc
or
pop
fs
pop
lea
mov
dec
dec
aaa
dec
or
test
xorb
push
lods
mov
not
push
inc
mov
sahf
icebp
mov
in
ss
ficompl
mov
mov
insl
push
inc
cld
adc
push
scas
jns
adc
xor
stos
jecxz
sub
js
fnstcw
and
or
in
xor
or
inc
fstpt
pop
mov
add
inc
lods
bnd
mov
js
push
mov
sub
lds
xor
adc
sub
cltd
lret
loope
cmp
sbb
or
push
insl
es
dec
pushf
pop
jo
fcmovne
lock
rcrb
push
xor
test
ljmp
or
mov
mov
loopne
mov
sub
xchg
xor
jne
pop
pop
xor
sbb
lahf
stc
xchg
lcall
mov
out
add
fwait
pushf
je
aam
imul
xor
lock
mov
popf
in
aaa
aad
aad
lcall
mov
into
push
iret
scas
div
cmp
icebp
or
and
xor
or
outsl
mov
aad
rol
dec
mov
mov
stc
testb
pop
data16
and
jns
in
sbb
js
out
nop
mov
inc
lods
sbb
jns
popa
bound
adcl
rol
cli
adc
enter
lea
das
sbb
jge
cs
inc
jno
sbb
imul
repz
filds
sub
iret
or
mov
jb
sbb
ffree
out
mov
jns
stc
dec
imull
xchg
popa
adc
popa
sub
jne
jne
popa
cltd
addr16
lds
sub
mov
lret
and
mov
sub
sub
cmp
dec
fildl
inc
xor
xchg
pop
or
out
inc
pop
add
arpl
lea
lods
in
mov
push
jae
cmpb
or
aaa
xchg
pop
lret
sbb
jge
outsb
nop
mov
or
lds
jno
adc
xchg
add
out
or
js
inc
pop
and
lcall
jg
dec
mov
xchg
xchg
addl
sbbl
jae
inc
je
xchg
xchg
and
mov
fdivl
movl
and
lods
aad
push
jl
mov
stc
subl
movsl
repz
and
inc
sub
iret
jo
roll
mov
shrb
insl
leave
sete
sbb
cmc
mov
or
sub
mov
mov
je
jne
cmp
xchg
pop
lea
ja
loop
dec
xchg
test
dec
mov
push
mov
inc
push
pop
imul
out
outsb
push
lock
ret
push
mov
xchg
lods
ret
adc
xchg
xor
popa
pop
pop
insb
cmp
lret
pushf
pop
into
adc
stos
sti
fs
stos
or
push
test
xor
not
add
inc
cli
or
fsubl
pop
je
mov
mov
inc
xchg
sbb
inc
aaa
subb
shrb
pop
push
or
sub
and
orb
pop
cmp
je
add
push
fists
push
popf
mov
sbb
or
out
mov
les
sub
inc
mov
fistps
xchg
mov
fcmove
jp
dec
loopne
pop
xchg
jge
insb
orl
into
mov
xchg
movsb
mov
jb
stos
aaa
cltd
dec
loope
test
push
je
push
ret
add
gs
jge
insl
push
push
sbb
in
add
push
fldenv
sub
dec
pop
mov
loope
inc
mov
jne
pop
je
movsl
leave
sub
loope
repnz
mov
mov
xchg
es
mov
xor
ds
push
xchg
scas
sub
pop
xchg
fistpll
push
xchg
jmp
jg
mov
aas
lret
mov
mov
pop
adc
sub
sbb
test
sbb
leave
sbbb
das
add
push
inc
jnp
fdivl
xchg
jl
and
adc
fadd
inc
imul
shl
inc
push
xchg
ja
insl
sub
lcall
inc
xchg
in
dec
fxch
jb
js
in
pop
fmulp
xchg
jbe
stos
dec
fneni(8087
push
cmp
fstpt
aam
cmp
lret
pop
mov
arpl
cmp
stc
and
aas
pushf
int3
inc
mov
sbb
ds
test
mov
es
mov
daa
movsb
inc
mov
lds
clc
int3
test
pop
mov
sub
adc
aaa
sub
inc
xor
fnsave
nop
mov
in
push
pop
push
jp
aad
dec
jo
ss
lock
sub
scas
ret
rorl
dec
cmp
adc
or
sub
les
adc
inc
add
ret
cmp
cmp
and
jmp
insb
mov
imul
ja
pop
push
addr16
les
mov
sub
add
stos
sub
xor
sbb
fs
sbb
fwait
mulb
mull
dec
cwtl
sub
cmp
mov
cmc
jo
add
repz
hlt
mov
jg
in
xchg
push
or
bound
inc
fs
mov
js
inc
cs
add
xchg
sub
pushf
lods
mov
dec
jbe
iret
inc
outsl
sbb
stc
xor
inc
leave
sbb
stos
popa
enter
insl
add
stos
sub
jns
loop
shrl
pop
mov
movsb
jne
loopne
adc
xor
jbe
in
xchg
xor
aas
xor
pusha
sbb
jb
and
call
call
rcll
adc
lahf
and
mov
jmp
jmp
pop
sub
push
frstor
leave
inc
jno
aam
add
and
outsb
xchg
mov
icebp
and
lret
cmp
cmpsb
aaa
shll
and
sbb
pop
add
pop
or
adc
pushf
rcl
mov
ljmp
xchg
and
fs
lcall
add
in
inc
cmpb
or
dec
in
pop
orb
and
das
xchg
mov
loop
add
and
cltd
shrl
insb
inc
push
jp
xchg
clc
jg
sti
inc
and
sub
sarb
pop
jbe
fcmovnu
adc
cwtl
cmp
jb
cmc
lock
pop
inc
jle
or
sbb
test
stos
xor
fs
sub
jnp
push
cmp
sahf
in
mov
mov
test
subl
in
imul
in
sbb
jno
fs
fnstsw
scas
add
inc
cmpsl
lds
imul
pop
add
out
paddsb
sub
sub
test
gs
jnp
outsl
sbb
test
xor
lock
pushf
cmp
push
popf
popf
fdivrs
popf
je
adc
cli
sbb
pop
inc
data16
mov
mov
nop
mov
sbb
push
outsl
inc
xchg
mov
imul
lods
mov
in
aaa
mov
sbb
xchg
fdivrs
fistpll
jecxz
les
push
gs
add
icebp
out
iret
push
pop
adcl
pop
movsl
inc
mov
test
out
jne
mov
or
mov
xchg
movsl
hlt
adc
daa
jg
push
outsb
mov
pop
leave
pop
inc
mov
mov
mov
adc
xchg
xor
push
or
mov
dec
repnz
mov
inc
push
or
ja
inc
int3
lods
rorb
jmp
push
sub
loopne
mov
xlat
or
ljmp
movsl
add
mov
sub
and
mov
cmpsb
repnz
lret
orl
inc
je
jbe
push
inc
adcl
dec
push
lods
rclb
fdivr
and
mov
test
dec
icebp
mov
outsl
mov
stc
adc
les
xlat
mov
repz
lret
push
jae
add
mov
inc
adc
mov
mov
movsl
cmp
mov
cmp
adc
dec
scas
inc
ror
into
pop
jecxz
jmp
mov
int3
push
pushaw
xchg
or
inc
mov
pop
jno
and
mov
xor
mov
pop
mov
push
push
adc
push
dec
pop
les
push
cmp
sahf
mov
add
clc
mov
adc
xchg
mov
lods
pushf
subl
in
mov
es
insb
ror
dec
xor
pop
or
cmpsl
inc
repz
scas
mov
pop
ret
movsb
pop
stc
jle
dec
dec
bound
pop
push
fnsave
dec
insb
mov
das
scas
adc
imul
fdivl
leave
push
outsb
es
jne
out
jg
jnp
add
lea
lahf
aaa
jnp
mov
xchg
cmp
pop
mov
test
cmpsb
or
jno
pop
daa
imul
popa
jnp
outsl
imul
push
push
push
cmp
and
or
cmc
test
jecxz
add
outsb
inc
jg
lret
adc
data16
inc
ficoml
add
imul
xor
insb
and
in
sub
mov
jg
inc
cwtl
jge
xchg
mov
inc
mov
loopne
imul
add
inc
iret
jmp
cmpsl
xchg
mov
dec
xchg
pop
aaa
rcr
push
adcl
push
jmp
xor
aam
or
adc
imul
cmp
xor
push
or
dec
lds
xchg
shrl
inc
imul
xlat
jns
jns
ret
push
out
ja
and
rolb
mov
adc
add
xchg
fucomp
mov
and
fs
fwait
imul
ret
insl
aam
jo
pop
stc
sub
les
sbbb
test
adc
enter
shrb
xchg
mov
pushf
lahf
cltd
imul
sahf
sbb
xchg
mov
cmp
jae
subb
call
in
arpl
in
jns
add
sub
adc
sti
cwtl
sub
lods
pusha
dec
ret
fnstsw
add
fbld
xchg
lods
jns
xchg
sbb
enter
je
dec
movsb
fidivs
push
sub
jae
xchg
gs
addr16
jns
sbb
fidivs
cld
xor
dec
dec
rol
mov
and
out
fstpl
jecxz
sahf
int3
loope
mulb
daa
popf
flds
das
mov
inc
mov
and
push
pop
push
jne
add
adc
aaa
push
imul
pop
sbb
lods
xor
sub
fldl
out
dec
xchg
test
lret
ljmp
test
mov
pop
adc
test
jne
dec
ret
xchg
mov
add
dec
cli
lods
cmp
mov
cli
mov
push
inc
mov
insl
icebp
xor
mov
mov
hlt
inc
stos
sub
cs
iret
sbb
sti
xor
inc
pushf
push
subb
cmp
rolb
pop
mov
add
imul
je
xchg
sbb
add
pop
sti
sbb
sbb
lea
ret
ret
sub
xor
and
fcomps
subl
mov
and
aam
negb
push
testb
inc
addr16
cmp
cmpl
pop
scas
imul
int
subb
xor
ficompl
jmp
add
testb
rcrl
inc
sbb
sub
cmpsb
xchg
daa
pop
scas
rol
jp
mov
in
inc
negb
and
in
jo
aam
daa
cmp
lods
rolb
sbb
outsb
push
cwtl
add
testl
mov
cmc
cld
xlat
movsb
mov
fadd
add
fsubrs
cmp
dec
cmc
call
jle
push
and
jmp
mov
movsb
fdivr
push
leave
mov
inc
cltd
clc
mov
cli
dec
es
mov
sub
repnz
cltd
icebp
cmp
test
mov
lea
adc
xor
jle
sti
imul
test
in
xchg
imul
andb
test
or
popa
inc
ja
or
inc
adc
push
mov
shrd
mov
jns
out
cmp
dec
mov
sar
lret
push
rcr
inc
cmc
add
cli
cmp
mov
loopne
cwtl
dec
stos
jns
jbe
xor
mov
jae
rolb
repz
and
fstps
hlt
cli
xchg
icebp
rcr
push
inc
jne
mov
out
dec
sub
outsl
call
pushf
xchg
push
cmc
arpl
jnp
jecxz
daa
test
rcrl
lock
jecxz
or
inc
inc
shll
mov
pop
roll
jb
movsl
pop
pop
adc
and
loope
mov
test
or
adc
stos
xor
xor
rclb
rcll
add
and
or
repz
loopne
mov
clc
scas
xchg
xor
je
pop
popf
mov
addr16
test
add
fdiv
enter
leave
xor
fwait
cmp
addr16
out
xlat
jecxz
test
mov
fistl
aaa
mov
dec
aam
jmp
xor
fsubl
pop
pop
ret
fsubr
push
inc
inc
pop
dec
lret
or
add
cmp
xor
dec
test
push
in
dec
mov
outsb
test
les
pop
mov
gs
mov
mov
pop
lcall
xlat
xor
out
and
stc
sbb
insb
out
add
pop
loopne
push
inc
das
lret
sbb
inc
in
push
ror
push
daa
mov
int
rcrb
fadds
out
jge
imul
enter
pop
xchg
std
xchg
adc
ret
inc
pop
ja
jecxz
nop
daa
andb
push
inc
iret
lods
xchg
xchg
cld
xor
mov
dec
ja
or
mov
dec
imul
inc
xchg
mov
arpl
shlb
pop
mov
mov
pop
sub
ret
outsb
test
sarl
vpmuludq
test
les
adc
jmp
jns
mov
adc
std
mov
dec
jne
and
sar
mov
pop
sqrtps
mov
outsl
shrl
idivl
insl
outsb
xchg
adc
jbe
movsl
pop
pop
push
scas
jmp
out
idivb
cmp
mov
jp
cmp
popa
fsubs
fsts
cs
in
arpl
pusha
arpl
dec
sbb
inc
mov
imul
mov
dec
cltd
movsl
mov
jnp
jmp
pop
pop
xor
mov
enter
jge
outsb
cmp
push
xchg
js
or
sub
mov
lods
pop
adc
push
jb
and
lahf
mov
enter
xchg
mov
sub
in
addb
inc
les
adcl
jne
or
cmp
in
mov
loop
nop
cmp
mov
sub
adc
cmp
or
outsb
jae
mov
fldl
jnp
in
xor
addr16
cmpl
jbe
fadd
pop
xor
insl
inc
cwtl
adc
into
inc
popa
jl
sub
icebp
inc
cmp
stc
in
jbe
jo
das
daa
xor
sub
mov
insl
jg
data16
sbb
fmul
call
in
imul
inc
xchg
xor
and
xchg
movsl
jmp
mov
dec
je
push
push
jmp
addr16
jp
lds
push
iret
jmp
mov
mov
imul
inc
dec
iret
jmp
test
mov
push
xchg
fisubs
in
loop
inc
sarl
mov
hlt
imul
add
mov
dec
fldl
inc
stc
inc
cltd
arpl
subl
jno
mov
jl
push
push
or
mov
inc
stos
push
inc
shr
xchg
popa
or
add
addl
aam
ja
push
testb
sub
stos
cmpsl
cmc
testb
mov
adc
fistps
test
xchg
or
xchg
or
pop
or
mov
cmp
xlat
icebp
das
fldenv
icebp
lret
sbb
outsl
push
fldcw
adc
subl
outsb
test
and
les
pop
int
xchg
ljmp
jbe
push
cs
xor
push
sahf
jp
sbb
cltd
hlt
ljmp
or
jo
or
lock
xchg
lods
ds
loopne
test
sahf
xor
mov
loope
add
mov
hlt
insb
xlat
lods
orl
jnp
fstps
ret
xchg
dec
pop
mov
insb
movsb
xlat
jp
je
adc
in
in
fsubrs
and
fbstp
dec
out
mov
push
push
sub
and
and
sub
arpl
sub
fcompl
sti
jmp
pcmpeqw
rcr
pop
dec
int3
subl
push
cs
cmp
int3
out
aad
push
pop
jo
push
pop
rcrb
ret
inc
dec
out
sub
and
ficoml
cs
pop
xor
adc
sub
divl
and
dec
dec
outsl
pop
jne
leave
jge
sub
push
jb
xchg
xchg
sub
imul
dec
fidivl
iret
pop
jae
xchg
jnp
and
call
test
cmp
adc
and
add
sahf
clc
mov
mov
fldl2e
mov
pop
test
xor
inc
stc
loopne
rcll
and
or
in
xlat
xlat
repz
mov
dec
sub
mov
push
xor
loopne
sub
test
aaa
push
xchg
adc
in
aaa
mov
rorl
test
nop
inc
mov
iret
pop
mov
call
and
ret
adc
mov
jae
movsl
or
mov
pop
xchg
sbb
lea
sub
aaa
ljmp
dec
fsubl
lcall
sub
push
mov
mov
push
mov
daa
xchg
dec
imul
mov
mov
in
repnz
das
mov
sub
out
adc
push
push
ss
pop
fdivl
xchg
idivb
out
popa
enter
ljmp
mov
or
movsl
cmp
sahf
lahf
stos
jno
push
test
jecxz
sbb
jge
aam
mov
or
gs
les
dec
imul
jo
sbb
pop
bound
push
or
lods
shr
jbe
mov
sbb
dec
jmp
xchg
mov
xchg
incb
ret
dec
jns
add
out
push
mov
push
mov
clc
dec
outsb
scas
inc
mov
int
xchg
sbb
jp
out
scas
pop
add
adc
mov
test
pop
std
fiaddl
xchg
inc
movsl
aaa
orb
outsl
movsl
daa
add
aas
sbb
insb
ss
or
fsts
loope
lret
call
sbb
mov
jmp
mov
sbb
imul
rorl
or
add
jns
inc
cltd
push
shrb
pop
pop
mov
fwait
cmp
inc
sti
cmp
out
loope
xchg
std
inc
mov
inc
sbb
mov
lock
and
add
dec
cld
sub
or
shrl
push
mov
in
jle
stos
lds
mov
push
fcomp
ret
pop
dec
negb
out
test
pusha
testb
insl
sti
repz
jle,pt
add
dec
inc
imul
scas
jne
bound
sub
mov
je
mov
sub
mov
xorb
mov
mov
mov
sbb
lret
sbb
ljmp
push
fsub
pop
mov
std
aad
ret
or
xor
out
xlat
sub
scas
popf
inc
add
xor
pop
cmc
outsl
mov
aad
lods
repnz
xchg
mov
dec
pushf
out
push
fmuls
push
shl
mov
cmp
leave
mov
ljmp
dec
inc
nop
aas
stos
daa
int
mov
rorl
enter
add
int3
jo
data16
insl
add
xchg
sub
fnstcw
outsl
icebp
cld
sub
mov
mov
inc
daa
dec
sbb
iret
fwait
or
xchg
insl
mov
xlat
fstl
xor
push
jne
aas
xor
xchg
add
stos
inc
add
jbe
ljmp
daa
lea
decl
rorl
sbb
sbb
push
mov
cmp
sbb
stos
imulb
test
sbb
arpl
mov
and
jns
jmp
clc
bound
pop
xchg
movsl
loopne
mov
cmp
fisttpl
repnz
movsb
sub
inc
mov
enter
xchg
aas
jb
pshufw
mov
jecxz
jp
push
jnp
fwait
pop
inc
xchg
push
jnp
popa
mov
jecxz
xchg
inc
adc
and
jb
insl
inc
mov
fs
xchg
and
dec
mov
imul
push
in
and
push
push
lret
shrl
or
fstps
jnp
sub
push
into
sbb
stc
or
cld
pop
test
aam
xor
sbbb
mov
and
cmpsb
inc
inc
and
daa
cltd
sbb
bound
popa
jecxz
lcall
dec
xor
sti
lcall
mov
cmp
sbb
iret
mov
xchg
call
inc
fcompl
and
shrl
out
ret
movsl
sbb
nop
push
pop
loop
lcallw
fsts
movsl
insl
cltd
mov
cli
xor
cmp
in
cld
mov
pop
lret
and
sbb
jmp
mov
pop
mov
sub
aas
xor
loopne
and
aaa
or
das
or
jno
iret
ja
ja
dec
mov
mov
mov
ret
jne
jge
sub
xor
fiadds
icebp
inc
mov
rorb
or
negb
dec
fidivs
aas
mov
je
mov
mov
add
mov
adc
mov
fidivs
jnp
hlt
aas
xchg
aam
mov
mov
ds
jb
jne
pop
enter
js
rcrb
push
idivb
stos
mov
rcrl
xchg
shrl
sbb
mov
inc
mov
popf
pop
mov
nop
lcall
cmpsl
dec
aad
popf
ds
leave
and
loope
mov
pop
ficomps
adc
jb
bound
fldcw
loopne
adc
lcall
mov
popa
jo
push
cs
cmpsb
jnp
mov
insl
xor
dec
ret
das
mov
adc
loope
loope
jno
push
jge
mov
mov
mov
xchg
mov
add
jg
cmp
and
popf
xor
mov
imul
xor
or
imul
jge
filds
stos
jl
sbb
mov
xchg
stc
rcrb
out
or
data16
mov
lock
xchg
repnz
and
sub
mov
adc
or
mov
xor
pop
xor
cmp
push
sbb
add
pop
pop
dec
dec
lcall
das
stc
test
stos
jmp
cmp
addr16
ret
adc
or
dec
push
xchg
xor
sub
cltd
inc
pop
pop
sub
scas
aam
cld
push
xor
leave
mov
xchg
jg
mov
orb
mov
shl
stos
jo
mov
lcall
xchg
inc
fsubrs
push
leave
lods
ret
jp
adc
pop
out
xchg
cltd
xor
adc
popa
pop
in
fwait
push
arpl
jnp
clc
sub
push
leave
test
es
testl
sahf
xor
rclb
jae
les
jle
push
cwtl
mov
popa
lcall
cli
and
jmp
cmp
jmp
pop
cld
scas
adc
and
dec
xchg
test
sahf
or
test
idivb
cli
insb
jg,pt
fdivrl
das
ret
push
fsts
xchg
out
mov
inc
icebp
cmp
jno
jne
push
add
mov
lret
mov
imul
xchg
popa
test
mov
mov
inc
adc
fiaddl
sti
mov
cmp
adc
jecxz
inc
rorb
add
xchg
jns
cmp
mov
dec
enter
shlb
clc
js
pop
mov
pop
int3
iret
push
mov
or
insb
je
add
lcall
adcb
cmpsb
xchg
xor
or
jo
adc
fucomp
jns
xchg
push
in
push
fs
or
xchg
cmp
repz
jae
inc
test
push
xor
pop
out
mov
je
lds
mov
or
in
das
test
daa
icebp
test
jmp
cmpsb
or
pop
push
sti
ds
cmpl
push
pop
sub
lods
push
scas
ja
repz
out
cs
js
aas
movl
add
mov
loop
stc
imul
les
adc
fnstenv
outsl
ljmp
cmp
insl
mov
push
pop
lret
std
sti
fldt
jnp
xor
mov
enter
dec
ret
ss
add
and
xchg
pop
out
pop
mov
mov
push
sub
adc
or
fldenv
jle
repz
pop
xchg
test
fcompl
call
jno
test
or
js
add
mov
testl
mov
jae
sahf
push
out
or
bound
dec
jmp
ret
or
jb
fadds
cmp
and
std
stos
xchg
imull
std
aam
fwait
pop
add
fsubr
mov
mov
mov
push
cltd
sbb
inc
jle
dec
cmpsb
and
scas
mov
xorl
aas
insb
jg
jl
lock
nopl
and
loopne
xchg
and
or
cmc
mov
inc
sbb
push
ds
jle
pushf
aam
aaa
jns
stc
sbb
lahf
gs
inc
sbb
xor
mov
sbb
cmc
lcall
mov
mov
dec
insb
call
cld
add
sub
std
add
lea
sti
pop
pop
negb
mov
ret
popf
adc
int3
stos
sbbb
dec
push
mov
clc
loop
mov
adc
rolb
jge
jo
repz
sarl
jl
clc
les
jnp
mov
mov
js
movsb
fimuls
mov
test
in
stc
lea
inc
mov
mov
xor
jp
lods
insb
mov
and
push
add
push
jg
pusha
lret
ss
loopne
shrb
lock
stos
mov
stc
xor
lahf
mov
lahf
mov
in
fsubs
xor
inc
xchg
pop
xchg
lods
xor
xchg
mov
inc
ret
dec
sbb
rcll
or
mov
pop
xor
icebp
push
fldl
jno
push
call
push
lret
mov
or
and
push
push
adc
sti
mov
dec
xchg
dec
stos
shr
and
lahf
pusha
inc
rolb
or
or
rcl
inc
mov
mov
popf
int
out
repz
int
lods
es
ja
fcoms
or
or
out
enter
push
push
test
inc
inc
dec
dec
imul
mov
ret
movsb
stc
scas
repz
lahf
out
std
mov
xlat
push
sub
sti
inc
push
dec
dec
insl
inc
jo
cmc
inc
xchg
jp
add
jmp
cli
dec
into
mov
sbb
clc
sahf
movsb
sbb
cmp
movsb
jg
mov
ret
in
xchg
xor
push
out
ficomps
ljmp
and
loope
lahf
mov
add
jl
cmp
in
imul
mov
aam
outsl
aaa
cmp
push
jb
aas
notb
imul
xor
mov
jns
icebp
jo
mov
jle
iret
outsl
int
aaa
js
xchg
sbb
dec
addr16
push
mov
jmp
push
je
xchg
lret
popa
notl
adc
fs
lcall
cs
sbb
int
push
les
push
das
mov
inc
lret
add
sub
iret
dec
out
aas
xor
and
mov
pusha
mov
push
mov
adc
or
or
mov
mov
enter
dec
stos
cmp
cmpsb
js
in
int3
xorb
loopne
mov
mov
xchg
mov
sar
scas
xchg
sub
fwait
and
movsl
test
pop
arpl
sub
mov
cmp
enter
mov
jbe
pop
loopne
aas
rorb
pop
shll
out
lret
int
mov
jns
or
rcrl
sarl
cwtl
sub
orl
insl
or
ret
add
and
add
int
cmp
cmp
add
loopne
or
je
cltd
inc
pop
imul
test
fs
jns
pop
dec
cmp
push
and
lods
xor
and
stos
push
mov
mov
sbb
push
dec
mov
cwtl
stc
jmp
or
jo
jne
loop
push
dec
add
jno
inc
dec
jae
in
sub
xchg
mov
gs
pop
stos
fidivrs
into
mov
adc
pop
xor
aaa
or
sti
pop
mov
mov
xor
nop
sbb
out
or
pusha
orb
std
jecxz
mov
in
xor
faddl
mov
hlt
sbb
push
out
orb
call
sbb
sahf
push
enter
movsl
lea
fildll
push
sbb
sub
pushf
ljmp
add
push
lret
sahf
adc
pop
movsb
adc
sbb
adc
lret
xchg
cmp
ljmp
test
adc
and
jp
inc
dec
xor
jbe
xlat
push
into
or
daa
aaa
scas
les
sbb
loop
ret
inc
shll
movsb
push
test
inc
sbb
out
mov
subb
cmpl
pop
push
mov
jns
mov
pop
imulb
mov
sub
xchg
int
inc
jp
out
pop
jnp
out
pop
push
xchg
iret
xchg
push
mov
xchg
jl
xor
cltd
xchg
pop
mov
negl
lret
mov
xor
bound
std
pop
pop
shll
cmp
test
in
mov
repnz
cmp
or
and
jp
inc
sbb
xchg
cmp
in
cs
sbb
inc
fcmovbe
sub
dec
inc
mov
adc
enter
jne
jp
sbb
cmpl
sbb
inc
subl
jo
daa
mov
js
jnp
lock
jbe
aas
fcoms
das
jb
lock
sub
loop
ret
and
dec
push
mov
push
bound
ficoml
idivl
push
bound
repnz
aaa
cmp
and
push
push
ss
lea
or
aaa
add
test
lahf
es
add
sbb
xor
or
pop
insb
les
cmp
pop
mull
addr16
dec
push
cmp
movsb
orb
inc
sub
mov
pop
in
dec
fwait
pop
inc
mov
and
mov
pop
orb
mov
jno
push
lods
jnp
xor
and
xchg
xchg
jae
out
pop
mov
bound
xchg
popa
sub
or
cmpsl
push
mov
out
out
imulb
mov
in
fiaddl
ret
jne
jno
ja
rcll
repnz
insb
fucomip
clc
test
test
mov
cmpsb
push
xlat
cmpsb
repnz
lcall
rorb
mov
mov
in
push
movsb
jge
mov
sbb
xchg
stos
js
sub
in
xchg
dec
mov
jnp
sbb
sbb
fisubl
dec
out
push
mov
std
arpl
cmp
jb
test
and
sbbb
es
xor
gs
fsts
pop
xor
popa
or
jae
lds
popf
mov
xor
adc
or
hlt
mov
mov
xchg
ljmp
add
mov
popa
movsl
jbe
ds
cmpsl
xchg
mov
sbb
add
lahf
jno
je
pop
lods
jg
rolb
and
mov
sub
mov
imull
sbbb
or
ret
mov
leave
fbld
push
mov
jnp
inc
dec
dec
mov
xor
lods
xchg
dec
xor
mov
jecxz
push
mov
and
and
call
and
das
lret
mov
pop
fcmovnb
cmp
mov
mov
iret
aad
cmpsl
mov
shl
out
adc
pop
addr16
mov
lds
leave
fs
fimull
sarl
vfmadd231pd
pop
test
adc
and
mov
pop
lock
cli
jns
insb
sbb
and
sarl
ret
das
mov
cs
mov
or
pop
insl
scas
jno
add
pop
das
loopne
enter
stc
iret
mov
cmc
aam
mov
popa
in
and
xchg
push
repz
and
imulb
pop
or
dec
adc
adc
mov
mov
in
mov
or
inc
sbb
mov
and
mov
ljmp
fadds
rclb
push
xor
xchg
rcrb
loopne
adcb
inc
daa
in
dec
lods
imul
js
sarl
imul
into
lahf
mov
sub
in
dec
movsl
fmuls
cli
out
icebp
lock
pushf
ljmp
sub
pop
add
fdivs
sbb
xor
jo
es
adc
ficoml
mov
pop
lock
pusha
ja
push
push
test
das
mov
mov
inc
pushf
insl
and
push
pushf
push
dec
inc
fldenv
mov
push
loop
je
xchg
ds
add
aas
dec
mov
sub
movsl
insb
lahf
mov
rclb
xchg
faddl
sahf
addr16
orl
jns
ds
mov
mov
jae
pop
aad
rolb
dec
xorb
xchg
or
push
sbb
xchg
test
loope
repnz
xor
mov
inc
insb
aam
mov
xchg
add
push
arpl
dec
inc
xchg
pop
aas
ja
mov
mov
scas
mov
sbb
fmull
push
mov
fisttps
orl
test
and
sbb
cmc
mov
xchg
cmpsl
mov
mov
insb
mov
divl
test
arpl
push
lods
mov
xchg
dec
daa
ljmp
push
dec
ret
cmp
mov
cmp
pop
add
fldcw
xchg
push
add
mov
adc
cmp
das
pop
add
cmpsl
leave
push
add
pop
sub
fst
dec
jecxz
mov
leave
ljmp
add
xchg
pop
js
xchg
das
bound
scas
mov
cmpsl
jmp
sbb
push
test
inc
js
cmp
inc
sbb
xchg
in
jbe
mov
mov
dec
fs
add
ljmp
adcl
sbb
leave
cld
cmp
or
cmp
and
push
das
out
mov
push
andl
inc
jae
xchg
push
in
outsb
jp
aam
ss
cmp
les
iret
ljmp
jecxz
inc
dec
inc
mov
cmpb
xor
fisubrl
pop
scas
sbb
data16
insl
add
insb
xor
stc
fldenv
scas
mov
jg
lahf
std
push
cs
add
push
mov
mov
rorb
mov
cmp
mov
mov
leave
scas
pop
pop
xor
into
pop
dec
or
shll
test
dec
and
pop
sarl
jp
adc
out
aaa
sub
pusha
add
lret
adc
data16
adc
stos
xorl
je
and
xor
lahf
jb
pop
inc
cmpsb
push
in
icebp
lret
mov
in
pop
subb
js
mov
adc
inc
lds
pop
and
push
outsb
sub
and
cmpsb
enter
repz
pop
out
push
xor
pop
mov
mov
sbb
fs
jns
adc
and
pop
lahf
mov
push
inc
sbb
xor
lea
insb
jno
xor
test
mov
and
les
jae
inc
cwtl
incl
xlat
nop
xor
rol
sub
pop
pusha
or
xor
lret
bound
inc
jno
into
mov
or
xchg
jne
inc
out
sbb
pop
jmp
lahf
push
sarl
icebp
pop
xchg
stos
test
dec
andl
inc
cmp
inc
cli
pop
cmp
mov
add
movsb
pop
es
adc
mov
sarl
inc
pop
cmc
fisttpll
jae
popf
mov
dec
dec
jmp
push
xchg
xchg
add
ficoml
sbb
xchg
mov
xorl
push
call
lods
int3
jb
xor
test
push
popa
xchg
cmp
out
adc
ja
mov
sub
xor
dec
jnp
les
fst
pop
cmp
nop
into
mov
add
mov
loopne
pop
mov
outsl
jl
dec
in
lea
and
lahf
fsts
cmp
cmp
mov
imul
out
xchg
sub
aas
stos
fldenv
das
mov
lret
pop
mov
cmpsl
sarb
loop
in
jbe
ja
or
and
mov
out
insb
jl
movsl
loope
jne
dec
and
fucomp
pushf
in
cmp
int
out
or
sub
add
xor
xchg
jecxz
in
outsb
rep
jb
adcb
mov
outsb
repnz
mov
lea
cmpsl
lock
andb
sar
mov
jmp
jl,pt
jae
sbbl
pop
cmp
push
fcomp
dec
das
in
push
cmp
mov
jle
icebp
push
nop
ret
shlb
jne
inc
in
std
xchg
pop
fbstp
repnz
mulb
insb
mov
push
aam
and
mov
in
cmc
cmp
scas
mov
and
add
sub
fs
ljmp
int3
jo
and
inc
mov
mov
popa
ljmp
and
inc
sub
dec
push
mov
movsb
rorl
scas
pop
stos
xchg
adc
popaw
mov
test
enter
mov
or
cmp
xchg
cmp
lods
lret
jno
or
xchg
stos
jne
sub
jns
add
fdivrl
fiaddl
testb
jbe
daa
out
pop
shrb
pop
sub
pop
pop
xor
in
data16
bound
das
and
and
jecxz
mov
ja
inc
ficompl
sbb
inc
jl
adc
popf
and
aaa
divb
jbe
addr16
in
mov
sbb
mov
mov
pop
jns
fstps
rcrb
xor
and
and
sahf
js
and
cmp
mov
inc
adc
adc
cmc
xor
jg
or
mov
cmp
ds
jo
loopne
ljmp
mov
push
gs
sub
jge
pop
cmp
sub
std
xor
push
cwtl
data16
jno
ss
dec
sbb
div
rorb
out
insl
rolb
dec
lds
testb
sbb
xchg
mov
pop
mov
mov
mov
jbe
lcall
fdivrl
daa
arpl
divl
jmp
out
sub
fidivrs
mov
das
xor
xor
enter
sub
sub
push
mov
nop
stos
push
sbb
jbe
jns
jecxz
stos
adc
mov
ds
rcr
shlb
stos
xor
inc
xchg
rcrl
add
out
jnp
ja
into
test
push
lahf
jge
stc
mov
ds
fwait
test
shlb
adc
sbb
or
inc
sahf
cwtl
mov
icebp
inc
out
pop
sub
cld
push
mov
js
adc
xor
cmp
jl
adc
jmp
dec
dec
adc
fisttpll
lods
cs
mov
or
mov
xor
xor
imul
lret
xchg
xchg
push
add
xchg
or
fdivrs
dec
and
dec
jle
insb
int3
rolb
jecxz
inc
fdiv
stc
pop
dec
jns
test
push
cmp
fldl
mov
cwtl
cmpsb
mov
mov
xor
insb
or
pop
stc
mov
dec
push
mov
js
int3
mov
cmp
push
fnstcw
sbb
fidivrl
sbb
and
add
mov
je
lock
mov
or
divl
jp
lcall
xchg
int3
iret
lods
out
mov
xchg
popf
mov
les
pop
ja
lret
aas
sub
xor
jmp
popa
test
test
fs
pop
data16
xchg
xchg
imul
xchg
scas
jns
pop
dec
lcall
pop
pop
lcall
pop
xchg
popa
pop
lcall
or
xor
push
or
xorb
fisubs
addr16
pop
push
sbb
arpl
add
cmpsl
les
rcl
jge
xor
mov
xor
push
imul
push
xchg
mov
stos
xor
dec
add
and
inc
lods
aas
jno
jge
xor
pop
xchg
test
sub
xor
loope
and
dec
bound
mov
bound
and
loopne
rolb
fdivr
sarl
add
iret
lcall
in
mov
jae
js
adc
mov
fadds
idiv
dec
push
lret
mov
cli
fists
sbb
lret
std
pop
iret
mov
xor
aaa
shrl
add
sbb
mov
clc
imul
lea
push
mov
shlb
int3
pushf
xchg
sbb
subl
xor
aas
jmp
jg
call
imul
adc
mov
sbb
mov
or
push
adc
push
cmovp
je
jne
fmul
jae
jmp
xor
das
cmpl
lock
jle
mov
subb
jae
iret
out
sub
pop
in
or
fidivl
mov
mov
jg
sbb
test
mov
rcrl
or
jae
shl
loopne
or
mov
fisubrs
testl
or
xchg
dec
jns
pop
aad
movsb
mov
in
mov
xchg
mov
ficompl
sbb
cmp
xchg
xlat
ffree
cmpsl
xlat
inc
insl
sahf
jbe
repnz
sub
imul
mov
sarb
and
inc
mov
add
fs
loop
gs
lods
inc
test
and
xchg
in
les
mov
jp
mov
jl
dec
cld
mov
jecxz
arpl
adc
test
xlat
daa
aam
loope
sub
addr16
sbb
adc
mov
cwtl
jnp,pt
adc
mov
shrl
int
mov
stc
inc
movsb
pop
pop
mov
adc
push
add
popa
dec
and
mov
repnz
xchg
mov
enter
jae
cmpsb
xchg
mov
push
push
sub
or
jge
aaa
mov
fisttpl
add
cmc
push
loopne
xchg
mov
sub
push
dec
stc
jge
jne
sbb
dec
push
in
pop
mov
or
jns
and
pop
sub
mov
pop
mov
in
push
pop
sub
hlt
or
pop
xor
lea
jecxz
roll
fcmovnb
sahf
loop
mov
push
outsb
aam
and
hlt
jge
mov
call
in
int3
xchg
or
push
push
fiadds
push
movsb
mov
hlt
sub
xorb
shlb
dec
cmc
loopne
imul
xor
push
pop
outsb
add
shll
out
push
pop
xchg
xor
sti
adc
mov
js
xor
pop
cmp
push
lret
popa
jmp
xorb
or
enter
daa
scas
sbb
pop
lret
loop
test
push
add
sub
sti
pop
inc
push
cmp
clc
xorb
sarb
sub
mov
sub
outsb
inc
sbbl
inc
iret
icebp
daa
add
pop
jecxz
movl
shrb
out
pop
jp
mov
xchg
sahf
cli
fs
in
repnz
inc
insl
es
stos
stc
xor
test
aam
mov
xchg
imulb
lcall
fidivrs
cmp
push
lods
jge
adc
movsl
outsl
sti
ljmp
mov
ljmp
sbb
mov
sbb
adc
push
push
push
or
and
adc
lea
inc
jmp
in
fs
lret
inc
dec
xchg
stc
or
push
pop
mov
and
inc
lods
sbb
fcomps
shll
hlt
ds
icebp
inc
rcl
push
popa
scas
stc
das
mov
and
lods
mov
int
subb
add
xchg
inc
adc
pop
push
add
jg
mov
jp
mov
pop
dec
loope
fcoml
xor
add
push
ret
lds
dec
xchg
arpl
xchg
mov
out
inc
gs
push
out
cmc
cmp
loopne
mov
push
lods
jmp
mov
or
or
hlt
loop
push
sbb
add
rclb
and
jecxz
pop
icebp
mov
push
mov
mov
addr16
leave
lcall
or
mov
mov
or
cmpsl
fsts
lods
scas
cmpl
cmpsl
xchg
std
or
addr16
push
push
dec
jne
ljmp
js
xor
and
ljmp
dec
push
xchg
xor
aam
and
cmp
fisubrl
jno
enter
test
xor
std
mov
stos
pop
hlt
popa
inc
dec
push
movsl
ficompl
jbe
roll
push
ja
jae
cs
out
test
jge
cmpsl
dec
mov
rolb
leave
fcomi
mov
pop
sbb
pop
das
cli
fs
sub
fisttpl
movsb
push
repz
xchg
test
pop
leave
sub
cs
test
fld
add
ret
push
out
stos
jbe
repnz
out
rorb
insb
test
inc
push
cmp
mov
pop
and
adc
aas
lcall
out
pop
cld
stos
es
sbb
lahf
mov
test
ljmp
xchg
mov
es
xchg
sbb
mov
mov
loope
jmp
shll
inc
xchg
adc
xor
pop
fistpl
sbb
mov
outsb
les
hlt
jnp
into
mov
fisubrs
aad
sbb
decb
fsubrs
fcomip
cmp
cmc
pop
and
mov
shlb
std
pop
add
sbb
mov
popa
cwtl
nop
xor
push
dec
jmp
push
std
sub
jo
jbe
aaa
cli
xchg
cmp
or
sub
dec
imul
jb
lock
add
pop
fucomp
nop
les
dec
movsl
cmp
and
cmpsb
dec
orl
jb
leave
mov
push
divb
aas
mov
ret
movsb
inc
decb
jnp
andl
sbbl
dec
loop
lds
testb
mov
jb
int
fnstcw
or
outsb
les
mov
jb
dec
add
xchg
std
adc
push
loope
or
push
mov
mov
lds
sub
push
add
stos
push
jmp
data16
sub
in
cmp
fsubs
shrl
imul
or
cmpsb
mov
movsl
out
inc
enter
jae
cmp
jno
jo
sbb
jae
in
jnp
adc
mov
dec
mov
repnz
mov
fs
iret
cmp
dec
and
xor
adc
test
js
lds
or
fs
pop
jns
stos
sbb
mov
js
xchg
push
jns
cmp
andb
into
cmpsb
jge
inc
cmp
int3
fdivl
mov
push
cmp
stc
test
jecxz
pop
lret
dec
jmp
or
mov
lds
sbb
enter
jae
inc
xor
addr16
mov
jl
je
jecxz
xor
fsubp
popa
clc
rcrl
jno
popa
lret
dec
std
cmp
cltd
sub
movsb
add
sbb
hlt
fs
sub
cld
add
std
inc
out
out
cld
mov
sbb
adc
mov
lahf
test
sbb
dec
xor
mov
scas
outsl
cmp
add
jbe
pop
negb
rcrb
push
lahf
lret
jne
inc
push
push
fbld
cmc
ffreep
mov
add
test
loop
push
rcll
sbb
jbe
adc
iret
outsl
pop
lret
lret
mulb
xchg
out
inc
xchg
fisttps
add
jae
imul
jmp
and
cli
mov
ss
je
cltd
test
jb
pop
cmp
sub
adc
and
arpl
test
pop
jae
sahf
out
cli
adc
jle
es
and
rorb
stos
fsubr
jp
mov
pop
test
sub
xor
sub
and
push
cmp
mov
and
sbb
popf
mov
ss
imul
imul
repz
lock
push
stc
leave
out
xor
inc
mov
push
sbb
push
rorb
fnstsw
adc
ret
lret
push
repz
fisubl
and
es
lret
jp
ds
popf
ret
ds
inc
cld
xor
cwtl
sbb
js
sub
cmp
xlat
mov
icebp
or
nop
jbe
in
aam
int
mov
js
inc
outsb
lods
enter
mov
cmp
push
cld
test
stos
jmp
into
fisubs
bswap
sahf
and
inc
push
clc
rorb
shll
add
pop
sbb
cmc
dec
std
jno
scas
pushw
cli
out
jnp
xchg
imul
mov
lods
adc
mov
shrb
inc
xchg
mov
mov
mov
sub
ss
cmp
inc
cmp
test
stc
imul
sahf
jmp
mov
lcall
filds
cmp
outsl
imul
sub
and
and
sbb
cmp
mov
adc
sbb
xchg
mov
ja
lahf
push
xchg
xchg
and
loope
std
scas
subl
sub
adc
test
outsb
pop
outsl
gs
rcr
pop
rcrl
add
mov
rcl
sub
mov
sahf
cmp
mov
in
xchg
frstor
add
nop
scas
fisubrs
imul
push
stos
inc
cmp
xor
faddl
out
cwtl
stos
scas
scas
add
enter
dec
adc
jo
repz
cmp
inc
sub
aam
outsb
cld
pop
gs
mov
mov
jnp
scas
pop
add
push
rclb
ret
imul
mov
xchg
inc
stc
repz
mov
cmp
push
adc
jle
cmp
cmc
lret
dec
xchg
cmp
cmp
pop
dec
das
xchg
mov
push
xor
mov
sahf
fwait
lods
rcrb
pop
popf
mov
jne
rcll
in
adc
pop
rcl
lock
lock
sub
fsubs
repnz
push
mov
lea
cmp
lods
jno
gs
fiadds
adc
or
daa
adc
fstpt
cmp
push
pop
or
js
test
aad
inc
insb
pop
add
or
jge
sbb
push
pop
jno
mov
in
xchg
ret
int
xchg
movsl
std
test
and
and
aam
out
int
jl
add
xor
mov
mov
pushf
notl
push
test
ror
scas
cld
adc
pop
dec
mov
dec
rorb
inc
std
push
mov
loope
jmp
xchg
cmc
aad
fwait
shlb
lods
lea
mov
and
sbb
rorb
repz
sbb
adc
xlat
pop
dec
xor
shl
div
mov
mov
mov
sub
xorb
add
or
xchg
aas
inc
pushf
dec
add
loope
fstps
repnz
or
inc
adc
mov
push
js
outsl
add
or
pop
and
jmp
sub
icebp
adc
mov
movsl
adc
int
fldl
je
inc
int
cmpsb
cmp
sbb
nop
rorl
clc
repnz
notl
jle
leave
pop
inc
test
push
dec
add
sbb
shll
or
sbb
xor
dec
sub
mov
push
and
outsl
rcrl
cmp
sbb
hlt
retw
fs
mov
add
inc
mov
lcall
sahf
fwait
jbe
mov
and
out
pop
mov
shlb
xchg
sub
stc
dec
xor
lds
dec
test
or
mov
pop
add
clc
xchg
pusha
std
imul
out
push
test
jns
popf
mov
mov
js
mov
das
out
cmp
dec
lods
movsl
push
jne
adc
adc
dec
jno
roll
in
pop
cmp
in
mov
in
shll
shrl
dec
out
in
xor
lds
fsubr
mov
cld
bound
sub
mov
jp
mov
push
call
aas
negl
push
adc
pop
lock
cwtl
imul
and
pop
fistps
mov
xchg
cmc
push
aaa
sti
fwait
out
roll
push
sub
push
mov
nop
jno
mov
jl
dec
fimull
mov
or
xor
ret
mov
add
mov
out
inc
dec
mov
std
gs
ret
dec
and
into
push
test
iret
leave
scas
pop
fcompl
pushf
cmp
pop
and
dec
fisttpll
cmp
stos
and
fwait
sub
outsb
jbe
xor
in
out
jb
nop
movsb
imul
push
push
sbb
test
rorb
icebp
pop
outsl
test
sub
mov
mov
inc
in
in
lcall
dec
pop
loopne
push
mov
jbe
add
movb
cs
jnp
test
decl
movsb
mov
or
out
mov
pop
inc
iret
xchg
pop
fiadds
outsl
mov
push
lods
popf
lea
cld
push
dec
insl
cli
pop
mov
mov
or
cmp
push
outsl
jnp
nop
call
push
sbbl
sub
inc
stos
shl
sub
or
fiaddl
and
ror
idivb
jno
loop
movsl
inc
lods
sbb
sbb
mov
rorb
xor
call
sbb
add
pop
js
cld
inc
jge
movsb
sbb
into
mov
mov
mov
addl
and
sar
pop
rol
push
add
aad
mov
and
jbe
sub
pop
subl
or
and
enter
adc
add
dec
pop
adc
fbld
push
or
jmp
lret
in
int
bound
mov
leavew
dec
imul
pushf
test
sbb
xchg
sbb
dec
inc
jae
popf
or
sub
in
sbb
lea
pop
xor
insb
xchg
dec
scas
cmpsl
fimull
data16
mov
jle
dec
cs
aam
xchg
lcall
xchg
mov
add
cmpsb
aaa
mov
arpl
and
or
popf
popa
ja
dec
loope
pop
std
sbb
inc
ret
daa
popf
or
imul
test
ret
icebp
mov
ror
fwait
repz
jle
movsl
or
ds
das
movsb
xor
cmp
subl
jns
push
pop
test
int3
pop
pop
sub
or
sbb
mul
in
in
push
adc
add
add
pushf
jns
dec
cmpsl
in
dec
mov
ja
out
out
xchg
xchg
mov
mov
stc
fcomps
lds
cmp
dec
fdivl
jmp
mov
cmp
sbb
je
movsl
scas
test
inc
dec
push
pop
imul
pop
pop
repz
add
in
cmp
cmp
jb
pop
fstpt
jnp
xor
fcomp
sbb
iret
pop
xchg
cmpsb
imul
sbb
lds
or
fcompl
jge
push
dec
loop
xchg
push
and
subl
or
cmp
push
dec
imul
or
loope
mov
cwtl
push
data16
test
jl
sub
mov
sub
xor
into
aaa
pop
int3
cmp
cmp
stos
fnstenv
add
mov
mov
subb
testl
movsl
or
iret
cmp
mov
and
sbb
out
sub
out
cmpsl
mov
ja
xchg
cmp
jecxz
out
xlat
push
mov
fs
shll
and
add
into
hlt
jae
imul
stc
push
mov
jns
push
sti
dec
outsb
aad
push
inc
jmp
push
sbb
push
push
add
ss
addb
xor
data16
mov
inc
pop
lock
imul
inc
imul
repz
fadds
push
sti
mov
or
sub
add
mov
nop
ret
inc
pop
pop
ds
ja
fst
sub
iret
mov
daa
aaa
ss
cs
aas
cmp
es
roll
inc
xchg
dec
loop
cmovne
xor
push
mov
test
mov
in
mov
dec
popa
nop
push
mov
push
shlb
jecxz
mov
dec
sbb
cmp
ljmp
xlat
sbb
or
pusha
cld
mov
stos
paddw
cmp
xor
js
rorb
inc
testb
nop
shl
pushf
cld
xchg
imul
adcl
test
or
dec
lret
decl
mov
sbb
push
insl
add
in
mov
sbb
fdivs
andb
pcmpgtb
shll
jp
jge
cmpsb
ficomps
jmp
or
and
lds
pushf
adc
adc
xchg
inc
and
inc
adc
push
out
xor
jl
pop
pop
dec
inc
mov
mov
mov
mov
pop
pusha
push
cmp
sahf
dec
mov
fldcw
sar
insl
adc
fldt
mov
fstp
out
gs
out
popf
adc
js
pop
movsb
popa
test
mov
lret
mov
ja
pop
cmpsb
movsl
shl
cmp
stos
andb
jae
loope
xchg
stos
jecxz
loope
fdivs
jl
adc
cwtl
jnp
stc
mov
and
addb
mov
ljmp
push
pop
stos
adc
sub
mov
jo
xchg
fsubrl
push
cmp
cmp
adc
push
iret
mov
and
push
cmp
sub
nop
stc
inc
inc
loope
jl
mul
lcall
int3
adc
scas
mov
enter
cmpl
sbb
cmp
xchg
push
enter
cmp
ja
push
jl
test
push
push
outsb
mov
pushf
add
fsubs
xchg
outsl
xlat
lods
mov
sahf
pushf
sub
cmp
ret
push
mov
inc
orl
mov
aas
jbe
ficomps
add
xor
fbstp
jge
push
stos
push
push
es
or
dec
inc
mov
stos
mov
adc
psllw
cmc
fcomps
sbb
lret
add
jl
addr16
pop
cmpsb
sbb
add
mov
movsb
push
cmp
cmp
lods
leave
out
sbbb
or
xor
adc
std
nop
adc
in
std
stos
mov
mov
add
pop
gs
insb
stos
in
dec
jg
lea
hlt
dec
jp
out
sbb
xchg
clc
popa
add
and
scas
cmp
in
in
gs
leave
or
cltd
adc
sti
adcb
push
and
fistpl
jmp
mov
mov
in
adc
mov
cld
pop
mov
ljmp
cmpsl
aam
jno
push
push
hlt
xchg
jns
sub
cs
or
adc
xchg
inc
fcoms
test
push
and
fnsave
insb
aad
mov
lahf
movsb
adc
and
leave
push
bound
inc
lds
mov
test
es
in
test
test
mov
in
outsl
mov
cmp
outsl
add
popa
sbb
xchg
sub
mov
inc
fidivrl
xor
lret
idivb
or
cmp
xorl
icebp
cmpl
mov
dec
sub
enter
xchg
in
stos
xor
dec
cmp
shll
sub
cmp
xor
hlt
jge
xor
mov
dec
pmullw
lock
sbb
mov
mov
es
movsl
dec
sub
sbb
call
shlb
mov
xchg
lret
ficomps
popf
adc
mov
push
iret
dec
lahf
dec
sahf
aad
fmulp
xchg
ror
scas
out
jl
jecxz
movsb
repnz
xor
dec
xchg
test
push
cwtl
pusha
iret
mov
bndstx
mov
or
sub
sub
jmp
sbb
xchg
orb
xor
push
lock
in
imulb
jmp
jo
jp
paddusw
jae
adc
testl
mulb
rorl
push
inc
scas
cmp
sub
popa
int
aas
add
inc
sub
push
cmp
fisubs
dec
outsl
pop
mov
fs
sti
nop
mov
lds
pop
add
and
xchg
and
and
adc
out
clc
mov
cmp
mov
sub
fwait
mov
stos
pop
inc
jge
sbbb
push
lcall
ja
dec
inc
test
and
into
mov
pop
pop
sbb
sahf
loop
mov
push
add
dec
jl
hlt
je
mov
ret
scas
mov
mov
sub
fldl
or
orl
jg
ret
mov
cwtl
mov
xor
ljmp
cmp
mov
ret
mov
aam
mov
adc
sbbl
jecxz
and
aad
in
and
or
mov
cmp
inc
hlt
jecxz
sbb
push
loopne
xchg
ss
leave
xlat
and
popf
rcrl
and
or
outsl
mov
fdivrl
mov
mov
fadds
mov
ret
in
shll
iret
pop
rcr
add
cmp
sub
xor
mov
add
sti
loopne
mov
cmpsl
jp
xor
imul
ret
lcall
mov
repz
loopne
pop
xchg
out
std
push
lock
int3
cmpsl
inc
mov
mov
aas
push
jbe
xor
xchg
lods
lods
inc
icebp
pop
test
mov
call
jnp
mov
xchg
lock
sub
mov
ficomps
cmp
mov
out
jl
mov
lahf
cmp
pusha
inc
pop
sub
shr
fldt
jp
shl
loope
lret
mov
xor
ret
mov
ret
cwtl
mov
imul
jmp
add
clc
xor
and
mov
and
lods
pushf
outsl
dec
push
jo
add
mov
in
sbb
decb
inc
or
and
push
push
pop
fwait
mov
mov
adc
int3
rorb
je
clc
pop
push
outsb
popa
jecxz
xor
ljmp
cmp
xchg
sub
pop
and
mov
fbld
or
sub
mov
sbb
mov
jmp
push
dec
cs
push
and
lds
mov
pop
and
in
fldl2e
xor
push
pop
rolb
xchg
rcrb
aad
aas
lahf
movsl
andb
out
stos
mov
daa
mov
xor
testl
inc
js
out
cmp
adc
fwait
sub
cltd
adc
jecxz
adc
dec
jb
inc
sbb
ret
out
jl
xor
lea
xchg
jl
jae
xlat
and
shl
sahf
clc
jle
sbb
push
cmc
loop
mov
lds
lret
push
aaa
sbb
lret
inc
inc
mov
dec
loopne
jge
out
mov
and
pop
xchg
or
in
dec
push
and
ret
inc
hlt
mov
sbb
xor
stos
dec
rol
and
push
js
dec
push
xor
jns
mov
push
and
jg
test
test
mov
and
std
mov
xchg
rcr
xchg
xchg
mov
sbb
mov
dec
mov
mov
mov
cmp
scas
push
icebp
dec
jno
aam
push
jnp
jmp
stos
sbbl
mov
xchg
or
push
fdivrl
aas
out
sbb
sarl
fstpt
sub
loopne
jge
movsb
inc
xchg
mov
mov
fimuls
repz
cmpsb
jne
dec
adc
in
cltd
gs
cld
lcall
lods
jecxz
cmpsl
push
outsb
jl
sbb
out
jle
test
scas
mov
cmpsb
dec
iret
jmp
cmp
nop
add
daa
movq
pop
xor
std
pop
loope
repz
jbe
stos
jnp
cmpsb
lods
xchg
xchg
jnp
cs
popa
and
fstps
lods
or
pop
push
insb
sub
stos
mov
movsb
inc
fcompl
sti
xorl
shl
js
xchg
add
rcrl
add
inc
adc
xchg
ret
movsb
stos
and
hlt
sbb
sahf
cmc
leave
pop
ficoml
popf
in
out
mov
nop
pop
mov
add
ljmp
mov
adc
leave
sbb
adc
xor
mov
sti
fbstp
test
out
lahf
push
lret
adc
jp
inc
pushl
push
mov
ret
and
ret
scas
sbb
jo
rclb
mov
lcall
inc
xchg
fs
sbb
clc
lret
xchg
pusha
insb
jns
movsb
push
dec
or
or
rclb
adc
inc
data16
add
into
pop
sub
xor
mov
jae
andl
fisubrs
mov
ljmp
push
inc
pop
xor
cmp
mov
mov
scas
pop
aas
hlt
enter
xor
cmp
gs
xchg
xchg
fstpl
sub
adc
and
xlat
jg
pushf
mov
sti
mov
arpl
xor
and
fsts
pop
lcall
stc
xor
mov
mulb
adcl
jo
cmc
fidivl
push
mov
rorb
mov
jno
jg
test
inc
mov
jne
leave
pavgw
ljmp
cwtl
imul
jbe
int3
mov
cs
ret
loop
push
mov
je
movsb
mov
adc
push
cltd
lds
out
pop
push
cmp
je
jb
stc
or
lea
push
stos
incl
lods
inc
jg
push
and
aad
ja
cs
sbb
in
mov
add
imul
cmpsl
divb
shlb
xor
sbb
or
cld
lods
cmpsl
cmp
test
cmpsb
shll
test
cmp
push
arpl
pop
stos
aad
mov
fsubrp
mov
pop
sub
adcb
sbb
pop
in
push
jg
sbb
repnz
scas
loopne
pop
mov
lretw
sahf
add
imulb
cli
test
mov
mov
add
mov
and
shrl
iret
rorb
xchg
aam
addr16
mov
mov
call
mov
xchg
inc
fisubrs
jb
inc
push
dec
ds
mov
out
lods
mov
and
in
sub
cmpsl
pop
test
cmp
mov
mov
cmc
sbb
adc
sbb
jmp
orl
into
imul
pusha
fwait
out
or
xlat
add
es
inc
jp
pop
mov
mov
mov
sbb
sahf
mov
lahf
repnz
into
loopne
loopnew
icebp
subl
cmp
adc
cmpsb
insl
dec
sbb
pop
xor
or
rsqrtps
filds
in
inc
push
fsqrt
repz
and
mov
push
out
and
cmp
flds
aam
sbb
fstl
xor
ss
push
push
ret
xchg
mov
push
cmp
dec
ljmp
jne
jmp
cmp
or
repnz
xchg
xchg
jns
pop
mov
mov
jecxz
out
or
push
outsb
xchg
or
pop
loop
sbbl
push
sub
in
add
pop
mov
loope
xchg
push
xor
and
loop
into
mov
scas
xchg
xor
in
sub
fs
enter
ficomps
xor
ficompl
mov
lret
jno
aad
iret
sub
sbb
rcll
or
lock
pushf
pushf
mov
mov
push
outsl
shrl
inc
mov
mov
in
adc
push
pushf
jb
jo
mov
scas
jge
in
pop
cld
push
and
adc
adc
mov
dec
out
shlb
xchg
jno
mov
inc
aas
jne
add
ret
pop
mov
outsb
sub
mov
jns
outsb
mov
mov
cmpb
add
mov
das
rcll
pop
mov
ds
pop
mov
sahf
mov
cli
cmpb
jb
mov
arpl
out
jnp
jnp
or
repz
inc
lods
subb
into
inc
testl
aas
dec
repz
mov
mull
pusha
xor
ret
adc
scas
xchg
inc
das
xor
add
in
pop
adcb
in
sbb
pop
mov
lods
jbe
jg
mov
and
fadds
jmp
mov
fdiv
jmp
inc
aaa
lahf
js
push
shlb
insl
inc
daa
mov
gs
jg
mov
aas
scas
cmpsl
xor
dec
insb
pushf
arpl
fmul
lods
fcomp
mov
cmp
xchg
jno
inc
dec
test
xor
mov
leave
mov
jl
mov
mov
xchg
dec
pop
adc
cltd
fwait
test
lds
xchg
gs
and
mov
popf
dec
shl
push
lods
mov
in
dec
rcll
dec
pop
xorl
pushf
movsl
pop
shll
bound
inc
dec
out
push
jbe
push
roll
mov
dec
lret
ret
mov
jne
adc
mov
pop
paddsw
cmp
pop
cltd
mov
ja
call
and
dec
sub
dec
lods
vcvtsi2sd
fiadds
aaa
lahf
shrl
dec
adc
cmp
mov
xchg
xchg
cwtl
adc
das
adc
adc
jle
dec
sub
ds
and
cmp
mov
sbb
out
sub
aaa
or
pop
push
ret
data16
jbe
sahf
sysret
mov
add
or
popa
ljmp
test
pop
lahf
rcrb
push
jae
xchg
jecxz
rcrl
test
push
pop
pop
loop
bound
scas
xor
push
or
jb
lds
je
mov
mov
push
jbe
mov
inc
adc
rol
mov
adc
adc
xor
cmp
and
dec
sbb
dec
jle
rcrb
jb
fs
jae
mov
mov
and
test
cli
dec
adc
mov
mov
call
in
mov
push
sbb
jle
sub
xchg
das
jl
lcall
imul
add
inc
test
mov
xchg
cmc
push
sbb
sbb
jge
push
adc
stos
loop
xor
popa
inc
scas
hlt
jo
fidivrs
icebp
es
fisubrs
jne
xor
xchg
push
in
push
mov
xchg
push
call
xlat
aam
cld
push
adc
popa
xchg
fdivs
loope
jle
inc
pop
push
imul
sbb
leave
add
dec
insl
add
mov
mov
dec
stos
mov
jmp
push
sbb
xchg
xchg
loopne
xchg
xor
or
iret
pop
icebp
jno
rcrl
out
mov
sbb
daa
xchg
arpl
imul
jp
outsl
push
fidivs
popa
inc
insl
ret
sub
popa
pushl
jl
pushf
daa
out
jle
addl
jl
push
je
aad
xor
scas
in
xor
xchg
mov
mov
cwtl
out
data16
nop
loopne
or
add
dec
adc
xlat
das
or
lods
adc
aam
dec
pop
subl
inc
inc
fnstsw
add
loopne
push
daa
hlt
jae
test
push
jno
loopne
adc
jl
mov
in
cmpsl
jmp
idivb
rcll
into
mov
andl
dec
pop
outsl
fiaddl
das
jb
mov
pop
push
shrb
stc
add
pop
mov
pop
sub
mov
sub
and
aas
cltd
lds
mov
js
push
mov
scas
into
push
dec
inc
jo
outsb
lds
cmpb
out
xor
dec
arpl
push
push
ja
dec
dec
jno
cmp
imulb
test
lahf
xchg
repz
xchg
xor
mov
xor
faddl
sub
int
mov
negl
das
inc
dec
mov
test
mov
dec
mov
push
sbb
icebp
cmpsb
and
movsl
pusha
repnz
shrb
frstor
jmp
andl
cli
shll
into
sub
dec
xor
fists
lock
stos
xchg
mov
out
mov
and
repnz
mov
std
sub
mov
jbe
into
lds
gs
push
je
cmp
je
test
jo
xchg
cmp
stos
jge
xchg
scas
outsb
pushf
and
push
sbb
arpl
imul
rorb
push
hlt
lods
mov
lock
push
mov
jnp
dec
stos
dec
mov
jb
sub
fiaddl
mov
sahf
mov
das
shll
popf
pop
pop
mov
scas
icebp
adc
scas
dec
inc
push
xor
in
jb
aas
pop
sub
lock
call
push
sub
adc
xor
cld
loop
out
pusha
xchg
fisttps
addr16
js
repnz
xor
xlat
xor
ds
mov
inc
jecxz
dec
jne
cltd
call
xor
push
cmp
das
stos
pop
call
jmp
xchg
xor
outsb
or
adc
dec
inc
xchg
movsb
je
cmpsl
sub
repnz
inc
push
in
aas
test
push
rolb
in
xor
add
fisubrs
mov
mov
and
push
adc
orl
xlat
test
adc
or
pop
jp
and
loop
popa
adc
lods
mov
cmp
cmp
jge
mov
mov
clc
xchg
aad
adc
outsb
out
or
mov
pop
in
pop
mov
sub
hlt
leave
cmp
lret
dec
filds
xor
ss
xor
jbe
hlt
xchg
stos
aas
scas
fisubs
jb
cli
or
addl
lret
mov
jo
icebp
inc
mov
je
mov
loop
loop
sbb
cmpsl
shll
and
sahf
fst
mov
and
lret
xor
inc
dec
loope
push
out
xchg
xchg
cmpsl
ss
movsb
push
fisubrs
add
cmc
shrb
jae
mov
loope
stos
mov
arpl
mov
sbb
mov
mov
mov
adc
out
mov
mov
push
daa
std
pop
ljmp
fidivrs
nop
movsb
into
mov
lods
scas
hlt
cmp
xor
shrb
inc
and
xor
cmp
movsl
ljmp
inc
lock
or
sbb
push
mov
lret
mov
and
stos
cltd
scas
jmp
inc
sub
pusha
popf
dec
lret
push
in
xchg
lret
outsl
jnp
xchg
inc
in
mov
inc
movsb
lods
inc
sub
and
mov
or
push
sub
mov
push
adc
and
fdivs
popf
push
mov
lret
push
jle
shll
popa
dec
jnp
lret
ljmp
and
loopne
test
xchg
pop
ficoml
ret
mov
dec
jns
mov
or
adc
push
pop
adc
rcr
scas
jne
mov
lock
push
and
call
mov
fs
jg
inc
jb
cli
xor
jne
rorl
fiaddl
js
mov
shrl
lcall
les
add
add
mov
jl
pusha
in
xor
add
aad
or
ret
rcrb
sub
cmpsb
mov
xchg
sub
pop
ja
xor
sub
sub
add
xor
shll
cmp
cmc
mov
popa
pop
clc
mov
add
outsl
push
jbe
cmp
aaa
push
jmp
jbe
cmpsb
jo
inc
cwtl
and
xor
sti
aaa
arpl
fsub
in
xor
aam
jmp
push
adc
adc
jo
push
mov
inc
mov
push
xchg
or
sub
repnz
and
imul
iret
jne
mov
lahf
test
cmpsl
loop
jp
or
popf
imul
rcrb
out
push
adc
xor
daa
sarl
cmpsb
jnp
mov
inc
enter
xchg
into
and
jmp
adc
mov
jmp
lock
push
mov
xchg
loope
test
negb
jle
jno
mov
inc
lock
jno
inc
push
cmpsl
into
nop
cmpsb
lods
mov
in
sbb
enter
ret
jge
mov
add
nop
subl
lods
jle
mov
idivl
mov
hlt
cld
lds
pop
xor
xor
test
in
jnp
add
orl
in
cmpsl
daa
jb
enter
iret
xchg
rcll
push
test
out
rcrb
xchg
cmpsb
fstpl
push
mov
imul
jge
hlt
bndldx
sahf
lahf
xor
sub
cmpsl
ljmp
fsubrl
sub
sub
push
pop
push
push
push
data16
jg
aas
push
pop
inc
stos
leave
adc
mov
mov
mov
mov
pop
lcall
roll
pop
ja
or
jno
mov
xchg
xor
sub
mov
roll
xchg
lock
sub
xchg
sbb
xchg
sbb
ret
lds
neg
add
cli
mov
xchg
pop
mov
das
fwait
adcb
test
jns
add
push
pop
inc
adc
rolb
mov
and
push
xchg
cmp
bound
insl
loop
lock
and
out
outsb
test
pop
movsl
mov
scas
pop
out
add
push
ss
pop
lret
nop
int3
cmp
and
cld
sahf
mov
jmp
cli
lock
lods
sbb
popl
push
dec
sub
mov
mov
stos
mov
and
mov
stos
ss
push
imul
jge
mov
bound
xchg
jo
test
out
pop
lret
cld
cmp
cmp
pop
adc
lods
cmpsb
cmp
lret
popf
adc
enter
std
mov
ds
cltd
add
ret
das
cli
lcall
addr16
in
push
push
mov
xor
enter
mov
dec
sub
repnz
shll
movl
jb
xchg
mov
xor
test
outsb
xor
add
cs
push
and
loopne
pop
lret
dec
push
out
cmpsb
testl
xor
loop
xchg
sub
call
es
jg
xor
jp
loop
cwtl
andb
movsb
dec
cmpsb
mov
call
or
push
add
repz
and
addl
xchg
xor
inc
push
xchg
fsubr
rorb
ljmp
leave
inc
int3
andl
out
ja
sarl
add
or
mov
mov
into
mov
sbb
call
push
out
and
lods
maskmovq
notl
hlt
rcll
sub
loope
dec
jnp
add
sub
pop
imull
mov
lahf
notb
or
mov
iret
popa
daa
mov
push
add
xchg
pop
enter
movsl
cmp
call
pop
and
jp
ja
andb
sub
loope
inc
adc
icebp
fstpt
imul
call
jmp
jbe
mov
pop
and
cmp
sbb
jo
add
xchg
sbbl
and
in
pushf
mov
cmp
fsubrs
mov
arpl
outsl
daa
sub
xor
sub
or
cs
sub
push
ret
loope
bound
in
cmp
jns
push
test
sub
std
addb
jae
dec
dec
stos
mov
xchg
sbbl
dec
sbb
sahf
cmp
int
push
ja
push
dec
out
xor
push
add
lock
fbstp
test
jg
rclb
lahf
jp
push
pop
push
popa
xlat
mov
xor
or
addl
pushf
inc
ret
inc
or
push
sbb
data16
sti
or
scas
mov
loope
inc
pop
push
jns
test
dec
push
push
and
fcompl
loope
pop
and
jnp
add
movsl
icebp
leave
xchg
xor
sbb
cmp
mov
add
pop
xor
fildll
jbe
mov
mov
ss
mov
adc
sbb
dec
push
enter
sahf
adc
jnp
mov
ret
mov
add
mov
sbb
mov
inc
mov
inc
inc
sbb
cli
push
rorb
out
ret
loopne
xchg
cmp
loopne
pop
cmp
shl
pop
jmp
lret
in
pop
sbb
rep
fst
pop
cmp
movq
add
or
inc
roll
push
out
adc
js
vmovntpd
adc
std
dec
test
lods
mov
adc
out
pusha
mov
sbb
test
pop
jbe
adc
faddl
push
pop
imul
push
scas
xor
jmp
xchg
mov
dec
mov
inc
mov
stos
rorl
into
mov
or
cmp
jno
fcomps
dec
add
or
out
pop
inc
mov
repz
jae
push
orl
dec
in
lcall
mov
movsb
aaa
loop
pusha
test
mov
js
cmpsl
imul
out
jp
sbb
hlt
mov
jo
scas
or
icebp
xchg
cs
xchg
xchg
cmp
mov
test
dec
pop
inc
adc
repnz
cmp
mov
sbb
clc
adc
add
lahf
pushf
xlat
mov
cwtl
es
jno
cmpsb
add
and
and
popa
inc
rcrl
pop
cmp
cmp
repz
je
pop
mov
mov
inc
lock
xchg
imulb
in
loopnew
scas
push
cmp
cmp
pusha
lcall
or
vorps
dec
pushf
dec
ret
jo
in
imull
sub
xor
sbb
shrl
mov
in
and
ja
jae
or
arpl
aaa
lds
mov
xor
arpl
or
mov
pop
cmpsb
mov
in
xchg
jecxz
test
mov
bnd
sbb
loop
sti
stos
mov
in
stos
inc
leave
jns,pt
inc
or
shrb
add
lods
inc
stos
call
or
out
dec
pop
ja
out
sub
lods
cwtl
sbb
xor
mov
je
fstps
sti
xor
mov
push
or
mov
xorb
mov
dec
inc
xchg
sub
sub
adc
or
mov
push
jae
sub
ret
push
cltd
cmc
jae
mov
mov
inc
cmpsl
sub
jle
data16
in
test
out
and
gs
ja
out
pop
addr16
loopne
xor
test
test
ja
mov
mov
sub
mov
dec
mov
imul
sbb
and
add
in
das
insl
arpl
sbb
mov
loopne
jp
imul
adc
push
out
ret
nop
int
push
inc
rcrl
dec
mov
in
cmp
lret
sbb
mov
push
add
jne
in
and
repnz
push
cmpb
aad
sbb
xchg
xor
sub
lods
aad
xchg
divb
js
jo
push
cmp
in
aas
std
out
into
sbb
push
push
inc
mov
imul
sub
mov
out
dec
and
mov
lea
mov
je
adc
les
mov
shlb
pop
rcr
aam
jnp
add
jmp
shrl
sub
xchg
mov
add
rolb
out
repnz
mov
sbb
rcll
add
mov
loop
gs
dec
pop
test
xor
notl
into
sbb
cmpsb
push
mov
stos
fisubl
pop
sbb
push
gs
ds
adc
add
jecxz
and
push
data16
cmp
out
dec
mov
dec
ja
clc
and
jne
cld
aaa
arpl
cmp
push
sti
dec
xor
imull
das
jp
xchg
and
in
sub
push
adc
adc
hlt
cmc
pop
aas
cmc
lods
dec
xchg
xor
js
mov
mov
rcrb
sub
loop
in
dec
call
cmc
test
xchg
cmp
cwtl
das
test
cwtl
lahf
pusha
cmp
mov
push
movsb
mov
in
popf
mov
notb
xchg
movsl
cmp
out
xchg
cltd
into
fistpll
lea
mov
lods
fldcw
mov
push
mov
and
jle
xchg
daa
daa
inc
cmp
sahf
push
push
pop
int
push
push
push
sub
or
mov
aaa
inc
je
jne
mov
mov
inc
std
ror
pop
and
push
shrb
or
pop
xchg
mov
addr16
lods
insb
xchg
jmp
jge
lret
mov
push
cmpsb
or
sub
cltd
out
pusha
iret
ja
arpl
jbe
aaa
test
push
faddl
jp
push
mov
mov
xchg
hlt
jo
popf
xchg
jne
xor
dec
rcl
xchg
mov
pop
and
sahf
ds
jb
movsl
dec
dec
stos
xor
test
stos
test
insl
movsb
xchg
cmp
popf
cmc
mov
out
sub
add
repz
adc
call
cmc
or
test
pop
loopne
insb
pushl
fnop
arpl
cmpl
xchg
push
subl
bound
push
push
iret
jo
stc
jae
and
das
in
repz
es
pop
pop
adc
dec
fdivr
jne
inc
mov
xor
inc
out
xor
mov
pop
jae
inc
outsb
test
xor
adc
lods
push
cmp
inc
lock
daa
rcll
mov
loopne
or
push
fs
xchg
ret
movsl
sbb
mov
mov
mov
or
pop
adc
lods
ret
shll
fsubrl
xchg
pop
add
enter
pop
xchg
sub
repnz
jmp
xor
cwtl
push
push
jae
sub
lds
add
mov
loope
inc
push
cli
pusha
inc
clc
lds
into
mov
sbb
imul
pushf
mov
push
or
inc
in
gs
mov
sbb
test
lock
mov
cmp
mulb
flds
push
xor
fnstcw
mov
jne
or
test
je
pop
inc
sub
cwtl
in
sbb
test
lods
pop
inc
and
sub
je
cmp
dec
and
and
das
hlt
lahf
outsl
and
insl
mov
shrb
and
and
mov
ret
cmp
out
data16
and
int3
push
sar
adc
out
out
jle
cmpsl
lods
mov
mov
pop
mov
pop
mov
pop
aas
mov
pop
clc
mov
arpl
pop
fcmovnu
test
jns
lret
xchg
jno
cmp
xchg
xchg
flds
adc
ljmp
adc
out
jecxz
jmp
in
mov
loopne
lcall
inc
push
shrb
lds
mov
ja
xor
fstp
lds
jmp
add
xchg
jne
call
enter
addl
in
mov
mull
or
int
adc
inc
sti
inc
adc
xlat
xchg
outsl
or
sub
or
divl
js
jle
arpl
sbb
mov
mov
shr
jmp
clc
adc
fwait
sarl
fs
paddusb
bound
xchg
popa
xor
xchg
dec
flds
push
in
push
dec
push
gs
mov
push
leave
or
testb
je
fstps
rolb
outsb
mov
sbb
loopne
cmp
push
sub
out
mov
out
ficoms
mov
xor
mov
pop
cmc
fs
sbb
popa
push
sub
arpl
push
and
cmp
repnz
push
stc
xchg
cmc
inc
or
mov
rclb
sti
push
out
dec
shrl
push
fwait
lcall
xchg
clc
int
pop
movsl
cmp
cld
mov
mov
fsts
lcall
sbb
mov
into
rcrb
insb
xchg
pop
cmc
ja
lods
mov
xor
xchg
sbb
int
nop
aam
nop
mulb
cltd
icebp
test
xor
pop
inc
daa
sub
lret
adc
test
dec
push
frstor
mov
jmp
mov
nop
les
jae
dec
call
mov
and
cmp
adc
jp
fnstsw
adc
mov
adc
scas
push
shr
lods
adc
pushf
shll
stos
mov
jp
jno
mov
into
into
mov
xor
adc
fadd
xchg
repz
pop
fimull
cmp
dec
ds
mov
cwtl
sub
mov
fcoms
mov
inc
mov
js
jne
adc
adc
inc
dec
xchg
sbb
cmpsl
cmpsb
adc
mov
stos
and
mov
mov
inc
fbstp
int3
jl
mov
movsl
sub
lahf
lret
cltd
arpl
fisttpll
inc
lods
push
mov
js
add
jbe
or
in
in
pop
or
int3
fsubrl
sbb
sbb
imul
popl
push
daa
lret
hlt
mov
adcl
cmp
jp
mov
jg
roll
inc
and
insl
faddl
fildl
mov
outsb
pusha
stos
out
mov
and
fidivs
mov
cwtl
in
rorb
enter
jg
xchg
in
push
mov
std
dec
lret
xor
cmp
inc
idivb
mov
pop
lea
push
xor
scas
mov
xor
aad
inc
cwtl
mov
das
push
push
mov
fwait
sub
adc
jo
fldcw
clc
das
push
aam
and
mov
inc
pop
mov
movsb
mov
imul
dec
pop
cli
mov
lcall
cmp
mov
pop
dec
aaa
push
adc
cli
ficoms
xchg
dec
jmp
pusha
das
mov
and
xchg
lret
movsl
pop
int
mov
adcb
xor
lock
or
cmc
in
mov
adc
arpl
in
rcrb
in
or
ret
inc
je
and
mov
into
cmp
lret
mov
leave
cs
sbb
rol
enter
dec
inc
mov
movsb
les
mov
pop
mov
stos
xchg
imul
icebp
je
pop
out
sub
mov
add
testl
jns
fwait
jns
adcl
push
jne
xlat
hlt
inc
or
out
push
mov
dec
mov
fcmovbe
adc
mov
inc
pop
inc
fiaddl
divb
loop
sahf
fisttpl
test
add
aad
mov
push
out
out
jbe
push
mov
push
jbe
in
jae
call
test
and
sub
stc
fistpl
adc
cmp
xchg
jge
je
call
jmp
in
mov
cmpsb
jle
jmp
rcr
or
std
sub
das
cmp
mov
outsb
sbb
std
adc
rcr
mov
fisubl
roll
icebp
pop
fcoms
test
mov
push
push
push
add
outsl
lret
dec
adc
lret
test
ja
mov
fwait
lods
inc
jl
loope
ficoms
jecxz
xchg
insl
add
lahf
adc
fidivrs
cmp
add
in
jb
mov
fwait
cmc
jge
cmc
jno
cmp
push
or
mov
loopne
mov
shrl
push
jp
lods
sbb
nop
vmovntpd
mov
pop
ds
int
dec
or
ja
push
ss
push
jae
scas
cltd
outsb
dec
mov
mov
je
xor
cmpsb
mov
mov
cmp
psrlw
jp
jecxz
lcall
push
movsb
xchg
dec
popf
sbb
arpl
xchg
jle,pn
shrb
xor
loop
fstpt
adc
mov
mov
test
cmp
xchg
iret
add
or
clc
or
push
in
pop
xchg
sub
test
out
xchg
test
stos
push
ljmp
sti
cmpl
xchg
hlt
sbb
sbb
mov
and
gs
xchg
and
pop
inc
decb
rep
jmp
push
xchg
daa
push
cld
int3
js
orl
in
sub
push
xor
xchg
xlat
out
nop
adc
fsubs
insl
xorb
in
sub
xor
fdivl
jns
inc
jbe,pt
xchg
es
mov
dec
jb
cwtl
dec
out
pop
sbb
aaa
rcrl
ds
mov
add
in
loope
repz
push
xlat
cmp
dec
cmpb
pop
inc
and
mov
xor
cmc
mov
lea
push
div
jnp
popf
enter
lea
push
mov
push
push
push
mov
fst
jno
fcompl
xchg
stos
jbe
mov
dec
and
xchg
in
xor
lcall
lods
repnz
xor
std
enter
jl
mov
xchg
cli
and
add
push
cwtl
in
push
in
cmp
and
orb
jecxz
clc
enter
dec
notl
sbb
sub
inc
adc
fldt
add
aaa
and
outsl
aad
mov
call
pop
sti
sub
mov
adc
push
push
or
lods
xorb
fcmovb
mov
xchg
dec
push
fsubrs
jns
sti
scas
rorl
adc
inc
xchg
cld
js
cmpsb
std
fsubrp
jl
nop
mov
fstpl
mov
jnp
repz
insb
out
call
sahf
stc
cmp
dec
xor
or
dec
jo
dec
pop
bnd
pop
or
out
in
pop
sub
stos
xor
pusha
sbb
push
loop
xor
out
movsb
mov
fstps
mov
arpl
outsl
pop
in
js
imul
fmuls
inc
into
jge
dec
stc
jnp
push
lea
daa
pop
sub
js
or
pop
inc
add
pop
push
push
loop
mov
arpl
mov
mov
inc
xor
into
jbe
mov
sbb
and
add
xchg
jns
loop
ficoms
cmp
and
addr16
dec
aaa
outsl
ror
pushf
jb
mov
jecxz
sub
jae
mov
inc
fidivl
sbb
push
mov
mov
mov
xchg
sub
scas
lret
push
mov
pop
and
mov
popa
push
inc
sub
mov
rclb
cld
jmp
add
jbe
punpckhdq
andb
shrb
adc
jmp
dec
cwtl
cli
mov
outsl
andl
idivl
sbb
popa
mov
clc
and
imul
mov
inc
lret
sbb
inc
mov
ret
mov
xchg
rolb
js
cmp
std
sub
mov
pop
mov
cmp
push
lahf
out
icebp
sbb
and
mov
mov
mov
dec
out
outsl
enter
lods
movsb
push
jg
aam
dec
pop
jp
mov
or
sbbl
add
mov
inc
inc
xor
insl
fnstsw
sbb
xchg
fs
popf
loope
push
test
and
mov
jmp
pop
cmpb
jnp
add
or
imul
xchg
mov
scas
jb
mov
pusha
jb
cmp
frstor
repnz
fisttpl
or
loopne
cmpb
sbb
decb
jbe
dec
pop
fists
lds
mov
sub
out
hlt
sbb
pop
xor
outsb
push
sbb
cmp
adc
ja
test
xchg
out
cmc
stc
dec
fcomps
fwait
and
adc
dec
xchg
std
repz
enter
and
xor
add
icebp
fbld
inc
das
or
ret
sbb
adc
xor
mov
push
es
dec
mov
movsl
mov
stos
sbb
lds
dec
inc
in
inc
imul
jecxz
out
rorb
jb
mov
or
test
push
xchg
mov
mov
sbb
cmovns
mov
lcall
push
pop
sbb
mov
adc
sti
xor
pop
les
loopne
cmp
push
xor
mov
push
sbb
repnz
pop
popf
mov
repnz
cmc
pop
jno
fxtract
rorl
sbb
mov
push
loope
jb
xchg
shlb
sbb
add
cltd
daa
dec
xchg
jne
pop
loope
mov
xchg
add
adc
cmpsl
xchg
pop
cmp
pop
lret
pop
inc
jne
lock
jle
cld
xorb
mov
inc
js
cld
into
add
add
lds
mov
and
inc
sub
jbe
sub
mov
pop
dec
sub
fldl
leave
mov
xchg
testb
cltd
xchg
cld
sbb
add
shlb
mov
mov
mov
and
arpl
lret
loopne
bound
fstpl
mov
jo
lgs
in
mov
jbe
in
dec
adc
sbb
mov
aad
mov
push
mov
scas
stc
or
dec
xlat
cmp
pop
sbb
mov
adc
movsl
stos
xor
iret
inc
jecxz
lods
rcrb
pop
sub
fmuls
arpl
adc
iret
inc
aaa
sub
or
arpl
movsb
inc
data16
inc
fldl2e
stc
jo
in
xchg
mov
cld
jle
mov
pop
lret
cli
ret
test
mov
outsb
cmc
mov
mov
test
pusha
pop
inc
jne
faddl
push
orl
pushf
inc
pop
enter
inc
mov
ficoml
cmp
les
add
xchg
add
es
mov
cmp
rcrl
loope
enter
mov
repnz
lods
mov
mov
cmp
repnz
mov
enter
rcll
mull
fcomps
repnz
push
fildll
cmp
pushf
arpl
cmpsl
jge
lret
jae
xor
cmp
pop
jg
enter
mov
cmp
mov
out
or
in
xchg
or
cmp
jo
gs
push
xchg
hlt
lock
inc
and
jbe
aam
rcr
cmc
sub
xchg
popf
mov
push
mov
or
dec
fldl
aam
jae
and
add
cmc
jge
std
rorb
ret
sahf
arpl
xchg
int
dec
icebp
int3
dec
pop
add
dec
push
shlb
and
jb
fmull
pop
mov
pop
inc
arpl
mov
inc
js
popf
inc
fnstcw
rolb
inc
frstor
fiadds
popa
xchg
mov
fisttpl
out
and
and
je
pop
orb
mov
enter
enter
push
pop
jnp
mov
inc
xchg
cs
mov
pop
xchg
cmp
mov
hlt
dec
clc
mov
stos
cmpsl
inc
cmp
fists
int
stos
mov
and
and
push
cli
or
mov
dec
cmp
jno
popa
cmp
mov
sahf
and
aaa
lods
repnz
mov
sti
adc
mov
lret
cld
jp
mov
mov
addr16
out
icebp
mov
mov
mov
dec
dec
mov
mov
mov
bound
sbbb
or
inc
jo
jbe
or
repz
or
pop
sub
aad
add
sbb
repnz
and
mov
pusha
fstps
mulb
fadds
imulb
fdivs
pusha
jecxz
push
and
fisubs
dec
insb
lret
pushw
jne
adc
loope
inc
sti
dec
shrl
cmp
mov
jno
mov
pop
jno
adc
mov
rolb
les
jns
mov
or
pop
stc
int
je
pop
xor
ror
int
adc
test
mov
and
repz
add
mulps
fisubl
aas
mov
arpl
and
scas
inc
test
out
mov
and
out
scas
push
loop
arpl
das
push
fcmovu
cmp
out
or
sub
or
sarl
aas
add
inc
stos
fs
test
inc
sbb
xchg
push
shrb
addr16
or
movb
lods
or
std
jmp
xor
dec
mov
mov
cmpsb
mov
sbb
jno
inc
mov
or
stos
divb
push
cmp
pop
jmp
or
mov
jl
pop
inc
loope
add
pop
mov
lds
pop
loop
ljmp
lds
std
shl
jle
mov
jnp
xchg
mov
das
pop
insb
das
sbb
pop
and
pop
insl
out
rcrb
mov
sbb
inc
sti
jmp
ret
in
repz
ja
negb
lcall
insb
mov
push
ss
pop
mov
sti
mov
mov
test
jge
jb
or
test
mov
jne
ret
xor
popf
or
out
clc
push
daa
outsb
mov
aam
inc
sbb
dec
sbb
push
iret
out
push
dec
push
rcrl
xchg
jb
mov
mov
out
inc
add
call
mov
roll
lds
and
lock
cli
aam
lret
mov
push
push
nop
cmp
subb
mov
addb
ljmp
fadds
int3
jmp
or
jl
or
jbe
out
jl
pop
add
daa
sbb
fstps
jmp
and
clc
adc
into
push
lea
add
adc
mov
sub
mov
cld
mov
dec
sbbl
clc
daa
cmp
mov
imul
scas
push
rcll
xor
fisubrs
orb
inc
mov
add
stos
insl
iret
mov
jecxz
push
jne
xchg
pop
mov
gs
push
pop
xchg
add
flds
xor
mov
adc
xchg
xor
or
fcoms
nop
mov
mov
xchg
xlat
jl
js
jbe
jmp
jmp
call
test
mov
int
adc
ljmp
mov
jge
xchg
xor
movsl
inc
xor
mov
inc
inc
scas
jp
loope
mov
lock
cmp
leave
sbb
mov
fst
fcmove
rcrb
dec
lds
mov
xor
insb
outsb
lods
sub
bound
or
icebp
in
enter
rol
dec
jnp
inc
adc
xchg
cld
popf
imul
lock
pop
fisubrs
sbb
push
insl
int
sbb
mov
mov
mov
push
inc
fs
adcb
sbb
mov
mov
lret
sub
lahf
lahf
xchg
xor
out
pop
repnz
div
lds
lea
in
push
jl
lahf
in
into
divl
push
or
aas
stc
jo
lods
and
popa
gs
xor
out
push
inc
scas
sub
cltd
int3
into
xchg
pop
sbb
popf
cwtl
lcall
ret
repnz
pop
xchg
test
mov
fs
and
sti
dec
cmpsl
sub
ret
mov
lock
aaa
and
and
decb
xchg
je
mov
cmp
rcll
je
aas
pop
add
dec
pop
outsb
push
aas
fcompp
repz
mov
dec
mov
andl
adc
into
ret
push
pop
pop
cld
jnp
in
stos
cmp
jp
imul
mov
cwtl
imul
adc
jbe
xchg
std
or
in
scas
xchg
lods
daa
sub
push
hlt
fs
mov
hlt
jp
test
cmc
fnstsw
pop
call
repnz
mov
push
and
imul
or
xchg
daa
xchg
and
leave
sub
stos
dec
push
out
mov
push
shl
ret
lds
and
cld
in
mov
lea
loop
or
mov
adc
and
or
data16
fidivrl
test
cmc
popa
sbbb
sbb
dec
int
pop
mov
adc
cs
cmpsb
add
dec
fstpl
add
sub
jbe
mov
pop
loopne
sarb
jne
lods
inc
or
gs
aaa
or
mov
cli
fwait
mov
mov
scas
and
or
xor
fsubr
popf
fwait
or
mov
mov
out
dec
xchg
cltd
push
idivb
mov
ljmp
mov
sbb
inc
mov
leave
and
xchg
sti
cs
in
scas
pop
shlb
xor
insl
sbb
bound
cmp
repnz
sub
sub
dec
pop
lds
enter
and
jno
pop
xor
lods
enter
shlb
je
cmp
outsl
out
cmp
aad
inc
call
add
and
scas
ret
mov
ret
cmp
subl
push
mov
cltd
loop
mov
fisubs
and
dec
mov
fwait
add
inc
sahf
loop
sub
ss
xchg
inc
dec
mov
push
jg
aas
data16
xor
or
mov
adc
or
xor
adc
mov
pop
dec
lods
adc
std
fnstsw
or
les
jno
xchg
out
fidivrl
mov
daa
push
cmp
add
push
sbb
incl
enter
inc
outsb
popa
ds
aas
cmp
add
push
stos
fs
in
pusha
aaa
rolb
movsl
pop
enter
pop
pushf
inc
decb
into
test
arpl
es
mov
xor
sbb
jns
negb
xor
add
or
lcall
out
ret
dec
or
xchg
test
lea
repnz
je
mov
or
push
fistl
adc
push
sub
adc
out
push
jge
pop
hlt
lock
mov
lret
cmp
ja
call
push
xchg
or
dec
add
sbb
outsl
in
mov
push
sarl
dec
pop
push
and
ja
pop
mov
dec
dec
icebp
mov
scas
out
sub
lcall
or
add
inc
pop
xchg
adc
jns
lret
movsl
jb
pop
sub
push
repnz
cs
or
xor
jecxz
clc
push
jbe
inc
orl
or
cmp
iret
adc
int3
out
popa
into
repnz
sbb
aas
cmp
popf
xlat
pop
mov
enter
dec
out
sub
cmp
loopne
mov
jle
stc
das
xchg
aad
mov
arpl
mov
jecxz
and
sti
push
in
cli
xchg
popf
data16
dec
jge
mov
mov
pop
stc
inc
or
add
cli
repnz
lea
dec
pop
sbb
in
inc
dec
push
sbb
jo
lock
xlat
arpl
jle
es
test
push
and
in
hlt
mov
sbb
inc
outsb
lds
lea
decl
pusha
jb
fsub
test
pop
xchg
sti
sub
in
movsl
mov
and
jmp
xor
rcrl
cltd
xor
leave
adc
rdpmc
cld
rcl
daa
mov
inc
inc
sbb
cmp
call
xchg
mov
or
push
jl
lods
adc
je
xchg
add
repnz
repz
cltd
adc
in
jb
adc
cmp
add
aaa
add
bound
jne
jbe
push
xor
iret
add
push
repz
jbe
arpl
mov
insb
aaa
cmp
pushf
insl
js
pop
inc
addr16
mov
cmp
push
ja
or
mov
push
ds
lea
ja
mov
mov
adc
xchg
lcall
mov
les
js
rolb
lods
xlat
xchg
leave
cmp
pop
outsb
sbbb
xor
es
sbb
add
sti
pop
loopne
adc
and
std
lcall
cmp
push
lahf
sbb
mov
ret
mov
mov
mov
int3
inc
and
cltd
adc
leave
pushf
fwait
pop
sahf
pop
sub
push
js
push
imul
notl
sbb
sbb
sbb
repnz
loop
jnp
pop
xor
fstps
adc
dec
mov
adc
test
out
icebp
push
xor
loopne
jno
jbe
or
dec
popa
xchg
pusha
xchg
fdivr
push
pop
outsb
loope
in
icebp
mov
fldenv
dec
fwait
jbe
cmc
mov
or
notb
ljmp
push
les
jecxz
xchg
mov
add
aaa
popf
push
dec
lcall
jns
sti
fists
not
xchg
inc
xchg
jl
sub
in
sbb
faddp
data16
loope
test
jne
dec
cmp
dec
sbb
inc
mov
adc
pop
fstpt
movsl
xor
movsl
xchg
in
out
mov
mov
loop
mov
and
lock
imul
push
mov
in
int
aas
mov
sub
mov
xorb
mov
cmc
cmp
jmp
push
cmp
pop
or
out
add
out
jb
cwtl
jmp
xchg
jge
ds
andnps
dec
std
fidivl
jno
mov
popf
decl
or
cltd
xchg
fmul
sbbb
loop
mov
rcrl
fcompl
movsl
dec
add
inc
loop
push
jne
sub
mulb
sarb
inc
cmpxchg
or
jbe
pop
jae
xor
fcomps
jg
jnp
or
dec
loope
ja
test
cmp
rolb
sbb
fucomp
cwtl
dec
out
repnz
mov
lahf
clc
int3
mov
cmp
bound
daa
jge
aam
jmp
push
mov
adc
int
mov
idivl
push
push
shll
bound
push
mov
test
jle
cmpsl
pop
ds
js
push
stos
into
sbb
inc
mov
lea
push
add
fwait
popf
or
addr16
leave
icebp
pop
xor
mov
and
fsubl
inc
jne
push
fmul
inc
fs
andb
cmp
cwtl
xchg
pop
jg,pt
sub
inc
mov
jle
out
imul
or
mov
ret
xor
mov
cmp
mov
out
inc
fisttpl
push
fdivrp
push
inc
fdivs
cmp
in
sub
addr16
in
scas
leave
sbb
mov
sbb
stos
push
mov
pop
add
pushf
pop
cltd
sbb
mov
stc
mov
data16
pop
ret
add
push
repnz
xor
aad
adc
loope
aam
push
jecxz
shl
sbb
push
xchg
bound
jns
mov
sbbb
pop
push
inc
push
and
dec
add
int
and
xchg
or
loop
push
push
popa
pop
pusha
xor
iret
outsl
xchg
ror
adc
cmc
popa
add
sbb
inc
daa
xchg
dec
push
cwtl
mov
mov
pop
push
jo
bound
pop
lret
xor
lods
xor
outsb
daa
jbe
cmp
lea
lea
add
cmp
dec
mov
sahf
mov
mov
sbbl
test
sbb
mov
outsl
mov
mov
sbb
jnp
je
jbe
xor
aad
aam
fisubs
vhaddpd
fdivs
int
xor
cmc
jg
xchg
ljmp
mov
fadd
fsts
popf
jbe
pop
lds
xor
lret
adc
push
movb
jle
dec
mov
dec
loopne
pop
sbb
popf
cmp
push
xor
shufps
and
imul
lahf
sub
xchg
mov
mov
jge
fs
aas
push
sub
jecxz
and
gs
xchg
rdtsc
sub
lret
jb
mov
lea
dec
adc
mov
into
shlb
xchg
mov
fisubl
sub
cwtl
cmpl
stos
push
gs
and
std
fiaddl
push
xlat
mov
pusha
outsl
sbb
mov
cs
pop
and
push
jle
add
push
jnp
mov
push
inc
mov
sahf
mov
popa
adcl
fistpl
push
int
pop
dec
lds
xchg
sub
xchg
push
imul
xchg
pop
adc
movsb
sti
push
sub
test
mov
mov
or
stos
push
nop
pop
sub
test
mov
jae
fs
mov
rorl
inc
mov
and
inc
daa
xor
sub
mov
push
xchg
inc
leave
in
pop
pop
inc
jle
int3
dec
sti
insb
bound
aas
push
xchg
in
test
xor
into
call
icebp
jnp
fidivrs
test
and
repnz
xchg
insb
jae
mov
fsubp
inc
jns
or
inc
adc
jae
mov
mov
pop
leave
sahf
pop
mov
cmc
and
push
mov
faddp
push
push
jae
and
push
sub
icebp
xchg
fstps
xor
loopne
arpl
imul
das
and
aad
dec
cld
scas
fstl
movsb
pop
dec
pop
xchg
or
jae
aaa
pop
repz
xor
dec
xor
inc
setp
es
mov
cmc
fnstenv
adc
jns
std
cmp
cmp
nop
xorb
jbe
inc
cmp
and
mov
test
xchg
mov
add
jbe
sbb
jo
rcrl
jae
dec
ljmp
cltd
push
pop
pop
loope
pop
mov
mov
cmp
sarb
mov
xor
pop
sub
and
sti
test
outsb
xchg
push
xor
xor
or
in
loop
xchg
jecxz
aad
sub
push
rolb
and
test
xchg
neg
loopne
pop
bound
loopne
mov
mov
lahf
pop
xchg
movsl
in
and
pop
imul
fisttps
xchg
xchg
aas
and
cmp
outsb
dec
enter
mov
stos
sbb
es
adc
jb
mov
adc
outsl
xchg
xor
iret
push
add
dec
mov
sbb
lds
mov
jecxz
push
in
xor
je
fwait
push
mov
xor
outsl
or
push
jo
test
aam
into
xor
sub
fwait
cmp
pop
adc
data16
pop
jecxz
call
add
pushf
stos
pop
insl
test
cmc
popf
loop
add
add
pop
int3
scas
dec
adc
ret
mov
push
cmp
ja
aad
dec
fiadds
xchg
jl
in
xor
mov
and
jne
dec
int
fcoms
pop
loopne
inc
insl
xlat
adc
and
sub
inc
pop
sub
adc
inc
lock
jmp
icebp
xchg
cmp
mov
xor
jle
lcall
cmpsl
pop
fldcw
xchg
mov
std
mov
imul
addr16
mov
jnp
insl
cs
mov
push
cmp
jnp
dec
xor
loopne
shll
clc
fcompl
pop
ret
data16
sbb
pop
inc
sbb
stc
lods
outsb
scas
call
loope
push
push
inc
icebp
cmc
xor
mov
mov
or
shll
sub
mov
aas
sub
fdivrp
inc
or
jl
in
fcoml
pop
imul
scas
sti
je
dec
and
std
popa
movb
xor
bound
clc
xchg
in
or
mov
jl
pop
xor
cmpsb
lods
ret
dec
push
xor
jmp
je
fsubrs
imul
inc
add
insl
pop
out
dec
lds
fwait
outsl
imul
cmp
jo
mov
sbb
orb
jns
mov
ret
xor
sbb
hlt
dec
test
mov
arpl
pusha
inc
push
leave
sbb
mov
nop
adc
xchg
sbb
fwait
movsl
dec
scas
xor
xor
xchg
lock
sub
test
or
stos
jmp
ljmp
mov
cmpsl
mov
jp
push
dec
gs
sub
push
xor
dec
shll
adc
mov
aam
lret
adc
mov
dec
mov
and
mov
push
lahf
decb
loop
outsl
add
lret
cli
pop
dec
fildl
sbb
fidivs
sub
fistl
mov
lock
es
mov
push
xor
mov
pop
dec
outsl
shrl
sub
and
call
mov
cwtl
lods
loope
and
inc
icebp
sub
mov
inc
xor
mov
notb
popf
jne
clc
ret
mov
nop
dec
clc
fs
call
jge
pop
sbb
pop
into
fstpt
inc
lret
sarl
mov
leave
cmp
mov
lods
test
push
cli
stc
push
mov
pop
dec
or
out
push
nop
in
mov
sub
push
gs
mov
pop
dec
imul
insb
cmp
jl
mov
pop
sarb
xorl
sbb
push
mov
mov
in
ljmp
lock
ret
outsl
ret
std
mov
add
fbstp
or
jmp
sub
jns
frstor
dec
xor
inc
imul
jg
jb
arpl
cmpsl
cmpsb
push
arpl
sbb
xchg
pop
xlat
lods
push
addr16
dec
mov
xor
incl
mov
mov
pop
cmp
and
enter
test
sub
aas
popf
gs
mov
push
sub
daa
sbb
adc
sub
mov
stc
push
lods
out
mov
repz
xor
hlt
sbb
or
push
or
sub
mov
in
sbb
cmp
cmpl
jle
xor
xor
mov
hlt
fs
pop
aam
dec
shl
pop
mov
cmp
insb
sbb
push
add
dec
loop
lret
jno
test
mov
dec
fstpt
mov
lahf
shl
sahf
bound
test
std
outsl
mov
popf
add
icebp
inc
lods
xlat
xor
mov
stos
cwtl
mov
or
leave
inc
and
sti
pop
push
lret
cmpl
lret
inc
push
in
mov
je
repz
stos
push
insb
popf
sahf
stc
cmp
jns
pand
xor
aas
and
rorb
fs
push
jne
lahf
cmpsb
iret
aam
mov
push
fiaddl
mov
mov
pop
push
add
pop
jmp
jne
or
or
inc
stos
sub
jecxz
push
shll
pushf
push
popf
xchg
fdivs
inc
mov
and
xor
mov
dec
ja
cmp
pop
sub
dec
push
xchg
int3
iret
mov
xor
inc
lcall
iret
push
xchg
cmp
or
inc
loopne
ficoml
cmp
and
mov
arpl
xor
jg
xor
test
clc
sbb
push
scas
xor
mov
sarl
and
addr16
xlat
jle
cmpsb
xchg
or
bound
push
pop
mov
lret
outsl
cli
pop
xchg
lahf
dec
jb
int3
xor
inc
cmpsl
inc
imul
adc
cmp
pop
jl
inc
or
cmp
repz
icebp
push
and
and
test
daa
cli
std
inc
sbb
jg
outsl
mov
and
int
adc
lods
dec
xor
loopne
xchg
shl
cs
mov
dec
push
out
les
jo
insl
adc
ds
push
sbbl
notb
enter
call
sub
shlw
cltd
movsb
or
pop
sub
mov
cmp
sbb
or
cli
es
jmp
push
push
ficoml
jp
out
js
adc
in
int
outsb
fcompl
xor
ror
das
dec
add
hlt
je
shlb
mov
dec
fwait
push
div
mov
shrl
xor
jne
sub
push
inc
push
pop
xlat
jo
es
andl
xchg
jle
cld
mov
push
cmp
cmc
pop
sbb
out
sbb
in
mov
xchg
clc
mov
dec
insl
inc
inc
sbb
pushf
mov
jg
outsb
adc
aam
stos
movsb
lods
adc
outsb
aam
mov
dec
push
xchg
sbb
popf
stos
mov
pop
decl
jo,pn
sti
nop
pop
jno
cmp
add
je
inc
insl
or
test
cmp
inc
xchg
in
adc
xor
mov
movsl
ret
add
bound
adc
mov
daa
mov
daa
sti
aam
fnstenv
mov
mov
stos
movsb
fisttps
and
mov
stc
jmp
push
push
pop
sbb
dec
int
add
ja
cmpsb
jb
dec
xchg
imul
push
call
subb
adc
aaa
movsl
scas
inc
mov
loop
push
inc
pop
push
stc
cmp
popl
test
sbb
push
mov
xchg
pop
mov
insb
pop
mov
scas
hlt
sbb
hlt
mov
or
cmp
loopne
icebp
ss
pop
xor
lahf
fdivp
outsb
mov
decl
pop
fdivr
xchg
and
ret
jle
xchg
arpl
daa
bt
imul
popf
mov
xchg
mov
int3
mov
sbb
addr16
lock
nop
scas
andl
cmp
cs
cmpsl
cmp
add
xor
push
mov
push
mov
in
pop
scas
repz
ja
pop
xchg
fdivrl
lret
jns
loop
sbb
lea
lods
dec
int
shl
loope
dec
mov
in
inc
out
loope
ret
xchg
xchg
jo
sbb
inc
push
fs
inc
jmp
cmpb
adc
adc
jmp
outsl
aam
inc
leave
loope
adcb
push
mov
xor
or
inc
inc
inc
mov
insl
int3
mov
negl
mov
pop
sbb
cmp
jle
push
and
mov
int
jp
jno
pop
jp
bound
sub
std
mov
cmc
dec
cwtl
mov
xchg
dec
add
popf
jmp
or
jge
pop
push
loopne
mov
mov
out
pop
inc
pop
enter
mov
pop
inc
les
pop
jmp
xchg
lahf
fildl
jmp
sbbb
in
dec
cld
jmp
jbe
mov
sahf
dec
repz
lods
lret
daa
mov
jae
push
mov
ret
push
push
push
or
movsl
in
test
shlb
and
cld
push
out
lds
or
mov
popf
jmp
addr16
in
mov
cld
out
cli
push
mov
xchg
movl
adc
push
mov
jne
push
mov
xor
addr16
xor
pop
sub
cmp
jp
ja
pop
cmp
and
nop
das
lods
ret
push
cwtl
add
xor
ss
cli
or
je
dec
sub
sbb
pushf
shll
or
pop
pushf
and
mov
push
jle
data16
sbb
lret
add
push
cmp
aad
testb
cwtl
and
push
aaa
cmp
inc
enter
cwtl
and
push
mov
push
and
addl
dec
pushf
out
lods
fildl
cmp
repz
fmull
nopl
dec
fcomps
lret
push
data16
pusha
mov
xchg
stc
xchg
in
push
or
mov
dec
xchg
inc
enter
jb
js
xor
xchg
push
adc
fiadds
xchg
sti
jne
scas
clc
mov
ljmp
cmp
sti
push
pop
idivb
pop
scas
mov
pop
stos
inc
push
int
add
fnstenv
cmp
call
bound
adc
ret
sbb
je
shlb
dec
xor
dec
jmp
adc
cmc
mov
inc
sub
pop
pop
sbb
mov
int3
mov
mov
mov
push
mov
or
insb
dec
xchg
sbb
hlt
sbb
ret
jmp
or
fcom
or
mov
cmp
fldenv
jl
push
mov
lret
jp
and
sbb
adc
mov
test
push
addr16
jae
add
mov
es
xchg
cwtl
and
test
aaa
stc
testb
es
jmp
daa
pusha
jno
in
imul
push
les
xchg
lods
jbe
je
cmp
push
mov
fsubp
sbb
mov
into
inc
pusha
jne
jg
rcr
fincstp
mov
xor
inc
sti
xchg
repz
into
push
adc
sbb
fisubrl
mov
shrb
rorl
adcb
call
add
xor
shlb
xor
cs
je
inc
aad
mov
ja
movsb
add
out
das
push
mov
lods
fistpl
pop
xchg
out
xor
sbb
arpl
pop
test
dec
pop
push
jbe
mov
mov
push
xchg
push
sbb
rcll
popf
jno
popf
and
divl
push
or
cwtl
sbbb
sbb
cld
aad
stc
ret
mov
dec
imul
imul
and
in
jmp
lret
jg
or
add
jns
mov
inc
add
mov
xchg
mov
daa
inc
stos
mov
cld
shll
push
sub
xchg
pusha
cmp
xor
cwtl
inc
inc
pop
mov
leave
cmp
insl
jne
mov
shl
in
xchg
test
pop
clc
lret
and
aad
xchg
mov
mov
or
cmp
push
addr16
xor
mov
cwtl
sub
mov
adc
xchg
lods
xchg
stos
and
rcll
paddusw
fcmovb
jmp
fldl
outsl
test
iret
jle
mov
or
cmp
insl
mov
jp
cwtl
pop
imul
pop
mov
push
inc
movsb
lret
cld
or
inc
jp
mov
ja
cmpsl
cmp
push
shl
lods
fwait
dec
in
xor
lahf
mov
inc
mov
sub
das
or
push
int
add
sub
fdivrs
fdivl
daa
jne
pop
or
ret
pop
fists
and
cmp
insl
movsb
aad
xor
aaa
idiv
mov
and
adc
stos
fmul
push
push
adc
sbb
daa
int
int3
pushf
pushf
mov
repz
inc
hlt
sti
inc
scas
push
addr16
sbb
and
adc
cmp
add
inc
jne
insb
sbb
cli
cmp
arpl
call
stc
dec
adc
jp
sub
movsl
dec
adc
fnsave
imul
mov
repnz
cmp
cmp
push
pop
push
pop
loope
sbb
pop
mov
clc
les
adc
repnz
dec
das
or
fsubs
sbb
loopne
lock
inc
test
mov
inc
adc
mov
dec
call
inc
loopne
xchg
pop
loope
nop
sbb
adc
cwtl
sbb
xor
call
stos
sub
movsl
mov
pop
popa
fs
dec
clc
testb
and
repz
stos
sbb
push
mov
enter
dec
divb
outsb
and
dec
cld
mov
std
aaa
enter
mov
in
inc
addl
dec
xor
lods
loop
push
mov
das
mov
dec
lea
or
cmpsl
push
mov
mov
repz
test
xchg
cmp
xor
jno
lea
and
cmp
mov
aas
dec
popa
fidivs
pop
xor
push
aam
das
adc
cmp
cmp
iret
xchg
dec
dec
mov
dec
and
imul
xchg
cmc
xorl
cmp
cmpsl
fsubrp
mov
jl
fs
std
add
add
imul
inc
sub
icebp
xor
mov
adc
std
ss
dec
and
pop
fmul
loope
cmp
xor
cmp
mov
add
loop
sahf
xchg
jp
fistpll
out
nop
push
int
dec
cmpsl
nop
or
and
inc
and
adc
das
subl
cld
into
ret
and
sbb
scas
insb
jo
movsl
mov
mov
push
pop
jle
inc
xor
mov
test
pop
inc
push
adc
adc
inc
jmp
ljmp
pop
clc
pushf
mov
xchg
fmuls
jns
mov
test
inc
add
dec
pop
popf
fldcw
dec
movsb
rcrl
and
imul
shlb
cmc
pop
bound
or
xchg
mov
or
outsb
adc
jmp
adc
xor
jge
push
pop
xor
pop
mov
jae
imul
xchg
cmovns
mov
adc
movsb
insl
int
and
xchg
mov
mov
test
sahf
imul
lods
hlt
imul
mov
test
push
or
dec
shll
adc
test
mov
sbb
test
or
jbe
in
incb
scas
rcrl
sub
in
inc
mov
mov
ud2
mov
cli
push
xor
rolb
rclb
cmp
or
stos
pusha
sub
mov
popf
mov
cmp
popf
xlat
lock
mov
inc
pop
jbe
shrb
inc
aad
cmpsl
test
xchg
cmp
cmp
mov
cmp
mov
dec
lahf
stos
or
call
mov
orl
orb
cli
lods
aam
fstpl
mov
out
aam
pop
inc
xor
add
mov
pop
repnz
mov
xor
fwait
scas
arpl
cmp
or
test
and
outsl
adc
in
mov
cmpsl
and
adc
rolb
out
jl
inc
pop
mov
push
scas
in
shrb
xchg
xor
mov
add
mov
sbb
clc
adc
sub
mov
xchg
stos
movsl
dec
rep
add
dec
pop
xchg
nop
jnp
adcb
push
out
insl
lods
jmp
xor
or
mov
icebp
out
xor
test
je
xor
dec
setbe
mov
inc
dec
pop
sbb
push
hlt
cltd
sbb
mov
xor
xchg
fisubrl
dec
lret
aad
loope
aas
dec
lahf
insb
int
dec
shll
idivb
aas
and
jno
xchg
out
xchg
test
sub
mov
cs
pop
xchg
jae
cltd
push
loope
adc
add
inc
xchg
shrb
fstps
or
cs
xchg
push
xlat
les
inc
or
cmpsb
dec
nop
dec
jge
inc
inc
flds
pop
sbb
loope
arpl
cmp
fildll
push
mov
jbe
xor
pop
test
loope
sahf
xchg
fisttpl
xchg
das
and
testb
dec
add
popf
xchg
mov
lea
mov
fiadds
cmpl
push
mov
arpl
aad
imul
jno
ffree
dec
out
jp
std
jg
imul
mov
out
aam
xor
stos
cmpsl
and
ljmp
bound
in
ret
inc
adc
stos
in
cmp
out
lcall
aad
int3
je
in
call
adc
fcoms
mov
jnp
cld
adc
dec
push
mov
rcrb
fsts
cmp
mov
lret
pop
dec
out
inc
dec
fcmovnbe
fwait
dec
into
movsb
in
fstpt
lahf
mov
or
mov
push
faddl
bound
mov
ljmp
push
mov
nop
adc
mov
sub
shll
mov
push
jns
jp
adc
push
sahf
loopne
out
push
aam
dec
pop
je
add
lock
adc
loope
sti
std
out
rcrl
push
fwait
addl
mov
dec
pop
push
in
fnstcw
push
inc
push
cli
jge
mov
mov
lahf
mov
add
outsb
rcll
and
lahf
push
xchg
aas
push
fisubrl
sub
inc
dec
dec
out
mov
jne
push
cmc
jbe
movsl
pop
aas
gs
pminsw
js
sub
in
sub
cmp
ss
bound
or
or
aaa
mov
loopnew
jle,pt
fstl
jo
mov
dec
sti
adc
aas
jp
jb
mov
sub
mov
fdivl
test
js
add
call
stos
rol
or
add
xor
bswap
stc
out
sbb
loop
xor
cld
push
pop
inc
or
mov
loope
test
or
in
xchg
sbb
or
add
jp
jne
sti
mov
shll
and
cmp
sbbb
sti
jp
cmp
xor
mov
shrb
inc
fst
aas
mov
mov
in
sarl
mov
out
mov
rorl
es
xchg
inc
pop
pop
mov
inc
adc
shl
dec
jg
push
mov
leave
mov
scas
pushf
out
nop
xchg
xchg
pop
push
nop
mov
ror
sbb
mov
stos
mov
push
inc
adc
repnz
adc
inc
fldpi
ljmpw
filds
sbbb
aad
pop
xor
adc
push
sub
loopne
adc
jbe
mov
mov
cmp
fiadds
roll
test
sub
test
loopne
out
sti
aaa
dec
enter
stos
jle
insl
mov
or
xor
fnstcw
inc
cmpsl
imul
or
add
pop
push
push
ficoml
mov
push
mov
stos
scas
mov
add
in
jo
mov
jle
fistpl
mov
out
cmp
push
aad
jnp
sub
insb
jo
cmp
pop
cmp
cmp
pop
test
xchg
sahf
mov
mov
aaa
mov
jb
xchg
les
sub
call
xchg
rclb
sbb
shrb
pop
subl
test
insb
clc
movsl
jp
mov
cmc
mov
xchg
enter
push
outsl
xchg
jo
pop
jle
out
sbb
adcb
jge
mov
mov
xor
std
stos
cld
inc
lock
mov
movsb
lock
sub
xor
and
fwait
mov
vcvttsd2si
or
and
div
adc
in
stos
pop
add
fstpt
dec
enter
xor
lcall
fcmovnu
loop
inc
fidivrs
lcall
out
sbb
xchg
enter
mov
dec
adc
jo
ss
pop
cwtl
mov
femms
sub
ljmp
aaa
lcall
sbb
xchg
insl
jo
imul
mov
jge
and
mov
xor
add
pop
test
mov
jo
cwtl
rcr
jnp
fisubs
jmp
sbb
adc
sbb
ja
adc
jge
fucomip
int
push
ds
pop
nop
lret
xbegin
mov
js
lods
xchg
data16
mov
jns
addl
cmp
and
insb
dec
sbb
scas
hlt
flds
xchg
shl
popa
xchg
stc
bound
jb
jbe
or
mov
jge
rorl
paddd
js
addl
js
adcl
inc
mov
imul
icebp
fildll
rcrl
jae
rorl
add
mov
fsub
inc
sbb
mov
gs
movsb
rcrl
movsl
cld
jmp
ljmp
xor
sbb
push
mov
sarb
ja
lahf
icebp
cmp
push
rol
lods
mulb
jecxz
sub
cmp
in
mov
add
leave
lret
shll
pushl
cmpsl
mov
jo
push
loop
test
push
inc
push
test
int3
int
shlb
push
loope
inc
clc
xorl
loopne
cmp
loop
xchg
sub
dec
ja
mov
adc
dec
enter
fistpll
js
cmp
out
jnp
push
loop
pop
cli
add
mov
cs
cli
es
pusha
pushf
sub
adc
mov
std
inc
push
push
mov
into
cmpsl
ja
xchg
inc
cmpsb
sarb
into
lahf
roll
add
cwtl
add
adc
dec
sub
pop
pop
sbb
les
mov
loope
popf
push
mov
mov
xchg
jmp
loopne
call
psllw
sub
imul
xchg
push
repnz
jo
mov
fwait
xchg
xchg
jge
test
add
enter
xor
fs
dec
xchg
je
ror
clc
fsubrs
loop
cmp
bound
pop
int3
dec
rcrb
push
imull
mov
fwait
push
leave
push
jp
cmp
mov
jle
cmovp
fdivp
pop
test
cmpsb
lret
ret
idivb
out
sbb
filds
fldcw
add
cld
xchg
cwtl
dec
push
ds
mov
lea
lahf
cmp
mov
subb
xchg
sub
cld
in
mov
sbb
xor
mov
test
and
out
loopne
fdivl
push
xchg
pop
pusha
jg
lods
clc
pushl
in
ja
rorb
sbb
cltd
xor
mov
jg
aam
fscale
fists
imul
mov
pop
jb
popf
jns
jle
iret
test
dec
aaa
adc
out
dec
dec
arpl
std
add
call
pop
ret
pop
dec
addr16
adc
fistl
fstpt
fwait
add
adc
push
sub
xchg
pop
cmpsb
enterw
movsb
push
cld
inc
cs
cmp
das
mov
sub
loop
mov
xorb
mov
push
jge
or
xchg
clc
test
sbb
popa
mov
out
and
lret
clc
sbb
test
out
in
jg
popf
dec
stos
fists
push
add
or
scas
icebp
mov
push
mov
mov
mov
test
jno
es
adc
sbb
ja
sbb
fstpl
xchg
cwtl
adc
pop
jle
aam
imul
loope
out
dec
int3
rcl
lds
movsl
or
fistl
cwtl
movb
fidivl
push
pop
sbb
mov
jbe
scas
xlat
inc
lock
push
mov
jb
sahf
xchg
fcomps
lret
or
xchg
push
lock
cld
aam
mov
inc
ret
mov
mov
stc
or
sub
and
dec
add
pusha
xor
mov
cli
je
sti
mov
inc
outsl
jns
mov
sti
test
daa
ret
sub
imul
rorl
orb
or
xorl
cli
cmc
clc
pop
sbb
pushf
test
pusha
xchg
dec
add
jge
imul
cmc
out
popf
int3
cld
inc
test
nop
test
testl
sahf
mov
mov
stos
out
sbb
in
cmp
hlt
adc
imul
jns
jns
jns
pop
ss
sbb
jp
arpl
stc
sbb
fmul
es
pop
pop
jle
sbb
inc
es
out
mov
gs
mov
dec
andb
aad
subb
mov
lods
je
inc
inc
lock
std
fldt
sbb
dec
insb
les
fistl
das
movsb
out
int3
jp
addr16
and
xchg
aad
push
clc
jne
or
xchg
jo
sub
ljmp
pop
xlat
call
or
and
xchg
pusha
int3
sbb
sbb
pop
push
daa
ror
sbb
fdivrl
leave
dec
popf
out
dec
push
xor
shrl
test
test
xor
push
push
ss
repnz
sbb
in
adc
inc
xor
adc
imul
lock
xor
push
and
inc
inc
jg
js
dec
fcmovb
aaa
ret
inc
xchg
std
push
xchg
jge
loop
mov
mov
outsl
adc
xor
add
jge
in
mov
out
popf
sbbb
pop
inc
adc
int
test
inc
inc
repz
sete
mov
push
mov
pop
in
cmp
popa
xor
je
mov
shlb
into
mov
test
sub
roll
pop
mov
sarl
mov
leave
xor
and
sbb
mov
icebp
out
xor
pushf
les
pop
scas
fdivl
rcll
decl
mov
rcrl
dec
rcl
notl
mov
movsb
lock
inc
les
xchg
sti
jecxz
jns
cmp
dec
push
xor
lret
push
sub
jle
pop
ljmp
or
bnd
shlb
mov
push
ds
xchg
in
push
lds
mov
repnz
mov
adc
mov
pop
pop
or
iret
push
in
out
mov
jbe
pop
xchg
push
popf
int3
cmc
cld
inc
imul
adc
js
mov
stos
jae
lods
add
call
cmp
and
mov
call
mov
fcomps
adc
xchg
rclb
push
jb
mov
pop
mov
fwait
outsl
inc
jecxz
jmp
cmp
je
xchg
sahf
and
cmp
sbb
mov
psubw
mov
mov
movsb
mov
pushw
mov
jmp
mov
dec
imul
lahf
arpl
call
cld
jb
ds
div
testl
push
iret
add
sub
gs
popf
pop
inc
dec
push
loop
xchg
sub
xor
xchg
or
dec
mov
cmc
sbb
mov
cmp
or
adc
orl
jle
sub
ss
hlt
mov
fwait
mov
inc
or
notb
into
sub
dec
cmp
jmp
mov
dec
ficoms
pop
pushf
sub
inc
insb
and
dec
iret
jp
jo
mov
sub
cmp
and
xchg
cltd
mov
jge
das
fdivrl
sbb
sub
sti
push
jno
add
fcoml
cmc
lahf
hlt
add
and
scas
lods
cli
and
test
jbe
inc
test
push
adc
push
add
inc
adc
clc
cmpb
je
xor
movsl
xchg
loope
ret
jno
or
inc
insb
fucomi
rolb
adc
sbb
sbb
fisubrl
and
repnz
movsl
add
rorb
cmp
xchg
jp
repz
xchg
stc
dec
push
mov
cmp
stos
popl
rorl
mov
push
push
jg
je
fldcw
fwait
mov
loopne
inc
aaa
push
out
mov
out
and
dec
mov
inc
addl
xor
sub
mov
fwait
pop
inc
out
jns
in
popa
push
lcall
or
xchg
lea
test
fadd
mov
cmp
inc
in
adcb
fcomps
or
and
test
stc
xchg
vphadddq
pushf
pop
outsb
sbb
arpl
pop
fdivrp
std
xchg
xchg
inc
pushf
aaa
mov
mov
sti
adc
xchg
mov
inc
jmp
dec
iret
xchg
inc
pop
jge
cmp
cmp
daa
out
jmp
mov
dec
inc
jg
add
in
jg
ja
inc
imul
testl
jecxz
xchg
divb
movl
or
xchg
push
lods
hlt
inc
das
cmp
push
and
push
lahf
aam
and
pusha
int3
push
scas
movsl
adcl
cmpb
subb
ret
mov
adc
jmp
jle
pop
shll
fcoms
jno
and
je
test
push
cmpsb
in
sbb
xchg
mov
mov
or
or
cbtw
jnp
cld
enter
add
dec
mov
gs
jmpw
jl
push
jae
fstpt
into
or
mov
mov
dec
arpl
js
sbb
jp
pop
cmovs
aaa
gs
jb
jl
jne
mov
ljmp
psrad
imul
lock
pop
cwtl
das
jnp
mov
push
idivl
push
test
pop
ret
xchg
jmp
repnz
jge
mov
test
insl
mov
sub
xor
loope
cld
push
sub
adc
or
gs
mov
sub
xchg
xor
loop
int3
add
push
jns
aas
mov
data16
push
xchg
sub
cltd
jg
out
sbb
push
xor
xorl
or
mov
xlat
cmp
cmpb
mov
jno
repnz
rorl
lahf
es
rolb
rcrb
and
je
out
mov
dec
mov
dec
adc
jae
aad
xlat
mov
mov
pop
test
rorb
mov
add
cmpsb
jb
out
lcall
scas
adc
jge
or
lcall
es
std
add
insb
mov
popf
mov
in
inc
jmp
lret
fstps
sbb
jmp
daa
gs
int3
xchg
movsb
push
and
aad
test
or
dec
jno
inc
aam
sub
push
das
icebp
sub
bound
and
stc
aam
out
ss
or
loope
pusha
jecxz
mov
xchg
aas
out
adc
outsl
xor
and
fwait
aad
fisttpll
xor
mov
cmc
daa
addl
push
cmpsl
pop
dec
jmp
push
cli
inc
sbb
sub
stc
hlt
leave
push
push
pop
and
fidivl
fstpt
jnp
push
pushf
cmp
inc
ret
dec
jp
jg
loop
jae
iret
pop
hlt
cmpw
cli
pop
jno
pop
lea
and
pop
inc
arpl
jmp
mov
xchg
out
adc
mov
jle
shrb
sbb
jns
or
jg
jnp
test
adc
adcl
sbb
iret
xchg
mov
adc
inc
cli
sub
out
lret
jmp
jbe
nop
ljmp
data16
xchg
loope
ds
fimull
xchg
leave
js
aaa
push
inc
push
sahf
pop
jae
mov
adc
add
repz
xchg
dec
add
test
cltd
out
shl
pop
ret
das
cmc
jns
arpl
lods
mov
cld
mov
push
xchg
xor
dec
mov
flds
lds
inc
jb
jg,pt
lea
loopne
mov
jg
adc
and
int
shll
inc
cmpl
cld
gs
add
mov
stos
fdivrs
xor
sarl
mov
cwtl
aad
sahf
fisubl
aas
adcl
outsl
push
lahf
bound
xchg
bound
lods
aaa
sar
scas
and
in
push
inc
jp
mov
xor
jns
mov
cmp
cld
or
loop
jae
push
fucom
decb
xchg
cmc
mov
jae
mov
inc
adc
loope
bound
cs
ljmp
pop
test
jb
xchg
xchg
push
add
lret
jb
jns
das
push
lcall
inc
cmp
push
fxam
sub
sar
or
and
pop
push
sub
mov
aad
es
add
into
pop
aas
sub
ret
outsl
sarb
add
movsl
out
push
aaa
cltd
jle
enter
jbe
mov
push
fs
adc
pop
mov
xchg
mov
xchg
mov
mov
jecxz
jne
daa
fstpl
xchg
xor
xchg
leave
add
addb
mov
sub
jecxz
inc
mov
add
inc
xchg
sbb
mov
divb
push
roll
jb
stc
push
lea
int
mov
mov
mov
jae
mov
dec
xchg
cmp
adc
mov
pop
jl
repz
xor
in
or
mov
mov
into
fistps
dec
add
faddl
rclb
dec
sbb
aas
mov
inc
and
sarb
cmc
loope
fwait
push
dec
cli
jg
cmp
push
xor
rclb
mov
dec
add
pop
bound
loopne
std
outsb
fwait
mov
popa
xchg
push
addr16
and
mov
inc
call
cmp
scas
cmpl
and
pop
pop
mov
push
xor
mov
mov
cmp
cmp
int
mov
mov
sbb
xor
adcb
cmpsb
push
inc
rorb
mov
pop
push
mov
mov
mov
adc
mulb
mov
cmpl
and
lds
sahf
out
hlt
int3
pop
fcmovnb
pop
int
cmp
dec
lret
test
and
sub
jl
xchg
cmp
into
out
push
pop
push
das
cmp
lret
push
xchg
movsl
loope
int
cmc
inc
jle
lret
mov
push
fcmovnb
dec
push
mov
in
push
inc
jl
fistps
ds
in
sub
clc
data16
int
jge
ljmp
test
push
jmp
push
sub
or
sar
out
jp
roll
fistps
xchg
pop
nop
mov
sub
mov
pop
movsl
or
movl
repz
daa
mov
lahf
popf
or
jle
daa
jb
imul
dec
cmc
mov
es
xchg
int
lret
hlt
sub
ss
sahf
mov
inc
and
xchg
inc
fcmovnu
inc
cmp
call
add
addr16
sub
mov
pusha
mov
test
outsl
pop
cmp
xchg
xorl
jno
popf
aad
mov
jnp,pn
add
jmp
jmp
mov
es
nop
std
cld
lret
fisttps
push
adc
adc
pop
and
arpl
ss
mov
sub
stc
pop
outsb
xchg
stos
and
or
loopne
adc
xor
aas
xor
inc
in
test
sub
and
mov
inc
inc
jns
cs
mov
inc
fildll
dec
fisttpll
cld
ds
cwtl
adc
add
mov
testb
push
fmul
xor
xchg
pop
inc
dec
in
out
inc
test
sub
les
int3
adc
dec
mov
cmpb
jnp
sahf
cmp
mov
out
jb
mov
fiaddl
nop
pop
ret
mov
mov
repz
mov
jno
lcall
nop
push
push
iret
lcall
mov
lds
and
push
jnp
lahf
mov
je
lcall
pop
or
fsubr
pop
sbb
inc
sub
inc
sarb
les
cwtl
pop
pop
xor
jbe
sti
cmp
and
in
inc
and
gs
pop
loope
push
and
repnz
and
cmp
cmp
mov
cmp
test
movsl
fstps
clc
out
lock
jo
dec
loop
dec
inc
roll
push
adc
arpl
mov
xor
xchg
scas
add
test
lods
dec
mov
sbbl
mov
sbb
xchg
lock
sbb
lea
mov
aas
cmp
and
pop
in
or
mov
jne
std
and
into
pop
inc
mov
sub
xlat
dec
imul
gs
xchg
cmpb
dec
das
sub
adc
dec
arpl
into
push
mov
sbb
hlt
jg
cmp
sbb
es
rcr
cmc
add
xor
and
sbb
adc
sbb
mov
xchg
xchg
mov
subb
cmp
loop
leave
jg
xchg
mov
inc
push
movsb
mov
lds
inc
mov
mov
mov
sub
pop
sub
mov
out
xor
das
lock
in
sbb
sti
aam
cmpsl
dec
sub
mov
xor
lods
lcall
cmpsb
adc
movb
popa
mov
jg
aad
movsl
add
aaa
xchg
xchg
xchg
pushf
push
xchg
and
add
dec
mov
aaa
or
loopne
fstp
pop
cmp
mov
nop
inc
xchg
pusha
push
mov
dec
mov
lret
pop
sub
les
leave
push
dec
repnz
mov
ljmp
mov
sub
fcomi
bound
jae
mov
fldl
dec
jo
fisubrs
and
inc
xchg
orb
fwait
gs
mov
fldenv
xchg
pop
aam
inc
sub
dec
push
xchg
mov
mov
sbb
insl
sbb
lret
or
pop
out
rorb
sbb
add
push
mov
jns
pop
ficompl
fidivrs
lock
add
jno
or
jg
pop
ljmp
push
popf
sub
mov
stc
loop
dec
ret
cltd
mov
xchg
bswap
and
popf
push
shl
in
pop
jo
nop
ja
add
xlat
and
movsl
jecxz
mov
js
cmpsb
in
push
mov
jl
pop
and
dec
scas
sub
xor
test
je
cmp
gs
mov
sub
int3
adc
adc
mov
add
dec
jnp
xor
test
xrelease
push
sti
fwait
pop
or
lahf
push
sub
enter
mov
dec
sbbl
pop
inc
push
addr16
rclb
into
lock
xor
mov
in
and
or
sub
cmp
cmp
fs
jge
std
test
jecxz
pop
push
notb
push
pop
adc
clc
leave
into
imul
in
aam
jne
jno
lahf
and
sarb
push
or
xchg
and
stos
or
andb
cld
or
inc
pushf
add
jns
movb
and
dec
ds
insb
insb
mov
fdivrl
mov
cwtl
cli
dec
mov
sarb
jnp
out
inc
jne
outsl
decb
and
andl
mov
sbb
mov
in
cmpsb
loop
lds
stc
inc
sbb
fcmovnb
xor
or
insl
mov
jbe
dec
scas
movb
xor
int3
pop
push
dec
int
out
xor
push
pop
rolb
push
or
outsb
orl
mov
lret
and
call
mov
das
js
sahf
hlt
xchg
mov
lods
mov
les
lret
adc
out
sti
incl
call
iret
jns
cmp
adc
in
sbb
testb
leave
iret
aam
lcall
outsl
loopne
mov
hlt
jnp
in
mov
mov
mov
ret
outsb
cmp
sbb
loopne
nop
pop
cmp
lahf
jmp
push
daa
cwtl
inc
push
push
sbb
out
sbb
inc
ja
pop
ja
push
xchg
sti
xor
xchg
clc
mov
add
testb
jae
jnp
out
aaa
cwtl
or
mov
outsl
je
decl
icebp
fldt
mov
and
dec
ja
mov
or
in
fwait
sub
int3
xor
bound
mov
dec
push
popa
pop
sti
fidivl
and
lea
movsl
jne
push
xor
inc
icebp
test
daa
movsb
push
leave
pop
aam
out
cmp
test
je
jg
cmp
test
nop
pop
inc
insb
add
mov
jae
jg
mov
sub
dec
cld
js
ret
mov
insb
mov
sbb
xchg
int
jne
mov
mov
jb
jnp
inc
aam
cmp
cltd
and
movsl
sub
and
ja
pop
push
pop
jns
outsl
cmp
pop
lea
sub
adc
cmpsb
outsl
daa
mov
aad
sbb
stos
outsb
xchg
ljmp
leave
jo
das
orl
js,pn
dec
pop
pop
push
fsubrl
in
stc
adc
inc
mov
sbb
inc
rol
shrb
divb
imul
dec
and
and
call
mov
pusha
push
loopne
and
rcrl
fidivl
mov
lret
enter
and
movsb
das
sub
jg
push
jnp
xor
mov
sub
mov
fsubr
loope
jle
mov
out
test
sarb
daa
xlat
xchg
pushf
addr16
fbstp
lahf
shrl
arpl
pop
outsb
inc
pop
fadd
sub
sub
popl
adc
dec
out
lret
aaa
pop
lret
mov
movsl
hlt
mov
insl
enter
or
clc
je
mov
cltd
adc
cmc
mov
dec
mov
sub
lods
shll
jae
pop
and
mov
fmuls
icebp
cmp
xchg
add
cmp
pop
and
sub
bnd
loope
enter
push
lock
insb
or
cli
jmp
loope
mov
cmp
bound
loope
bound
sbb
stos
cmp
movsl
sbb
jl
mov
imul
lods
insb
jae
addr16
xchg
xlat
aad
pop
jg
push
in
push
fsubrs
loop
xchg
and
mov
int
mov
jbe
aam
dec
imul
lret
ss
pop
pop
std
rol
mov
mov
push
pop
test
xchg
popa
addl
cmc
fstpl
mov
jns
jo
and
loop
and
mov
dec
lahf
movsb
into
movsl
adc
push
andb
jl
popf
fs
js
mov
xor
ds
pop
mov
inc
mov
fs
xchg
or
or
leave
rorl
leave
mov
jne
inc
add
push
negl
jne
es
jb
andb
xchg
mov
test
push
or
ljmp
push
ljmp
push
ljmp
cmc
das
inc
jae
mov
mov
loopne
out
cltd
or
cli
out
and
push
iret
aas
mov
push
cmp
pusha
stos
mov
stos
jbe
mov
test
sarb
push
jnp
imul
sub
cmp
mov
cmp
adc
and
leave
data16
dec
iret
mov
enter
pop
jp
scas
and
je
push
and
pusha
xchg
ljmp
xchg
cmp
and
into
decb
add
jmp
gs
or
divl
dec
insl
aaa
mov
stos
js
clc
xchg
xchg
dec
xor
repnz
insl
mov
xor
xorl
pop
pop
std
mov
sub
out
and
inc
cmp
or
out
dec
test
sub
jecxz
mov
out
push
loope
cmp
cmc
jmp
xor
out
lahf
xorl
fbstp
je
fistps
fcmovne
inc
add
lret
xorl
jne
jb
seto
xchg
add
pop
in
or
push
and
test
fsubl
cmc
add
or
push
inc
out
xor
test
mov
out
js
int
mov
movsb
sub
aam
pop
mov
mov
cmc
shll
mov
mov
or
mov
add
jo
outsb
imul
inc
and
clc
scas
xor
dec
fimuls
jecxz
adc
jmp
out
cmpsb
or
adc
mov
jle
repnz
xor
pop
dec
int
add
xor
js
fs
mov
pop
scas
stos
cmp
push
dec
and
jle
cmp
jmp
mov
pop
or
pop
addr16
add
notb
mov
mov
xor
xor
mov
push
dec
clc
jge
mov
mov
in
mov
mov
lods
aas
mov
push
rorb
mov
bound
fwait
cmp
ret
push
push
pop
push
pop
dec
popf
mov
sub
push
push
js
outsb
and
cmp
pop
mov
jmp
pop
or
insl
mov
cmpsb
enter
je
sub
dec
ret
jne
daa
loopne
sbb
pop
mov
nop
inc
cmpsb
mov
mov
stc
pop
cld
and
mov
imul
orl
cmc
mov
cld
test
fucom
imul
lahf
jbe
je
pop
adc
stos
aaa
ljmp
aas
add
repnz
sbb
lret
jns
stos
jecxz
pop
mov
push
sub
enter
fwait
shlb
roll
stc
sub
cmp
xchg
leave
mov
rcr
jge
or
nop
mov
aaa
or
pushf
adc
push
lcall
orb
repz
pop
jns
sbb
dec
mov
pop
lods
mov
sub
jecxz
popf
adc
shll
cli
xor
mov
inc
mov
sbb
adc
sub
push
pop
or
pop
test
add
mov
add
push
in
push
jg
push
cs
push
sbb
test
lds
xor
sbb
jns
stos
aam
insl
rolb
stc
push
mov
xchg
xchg
stos
jno
mov
xor
jno
pop
fdivrp
sub
test
mov
push
xchg
out
fdivl
cli
mov
fists
xchg
lahf
xorl
ret
scas
mov
cmp
mov
and
pop
outsb
cltd
or
aam
jno
clc
dec
lds
or
add
pop
mov
fucom
loop
loope
push
js
sbb
xchg
inc
orl
lret
dec
cli
pop
mov
add
or
loope
aad
cmp
mov
mov
test
outsb
out
adc
add
xchg
pop
rcrl
dec
insb
cld
stos
and
dec
inc
pop
loope
xor
jb
dec
mov
sub
ss
testl
nop
in
jl
jmp
xchg
mov
xchg
popa
ds
lret
push
xor
or
hlt
std
pop
jns
aas
mov
pop
dec
dec
fwait
mov
cmpsl
mov
xlat
and
cld
shl
fisubrs
insb
and
imulb
inc
ret
into
cmp
pop
ds
xor
lods
sar
or
pop
push
add
cmpsl
js
cli
mov
popf
stc
fcmovu
dec
and
popa
aaa
fadd
sahf
and
xchg
lods
cltd
in
int
push
xchg
jnp
inc
out
cmpsl
sub
push
in
cmp
mov
mov
cwtl
daa
out
xchg
lea
repz
aam
push
sub
ret
lea
xchg
xchg
cmp
pop
fcomps
fwait
dec
ljmp
int
call
inc
jne
jp
mov
sbb
ljmp
pop
fimull
xchg
push
fidivs
mov
mov
mov
cmpsb
lret
push
cmp
push
pop
repz
cmp
cwtl
aam
mov
adc
iret
test
popl
cmp
out
lret
pop
cli
mov
dec
sahf
jle
ja
call
adcb
gs
pushl
hlt
jl
sbb
sbb
inc
leave
std
cmp
mov
out
cltd
xor
ret
lock
mov
jp
inc
imul
shrb
dec
mov
cmpsl
iret
in
shr
pushf
mov
dec
aaa
ficoms
jle
ja
and
enter
mov
cmc
sub
mov
ss
aas
pushf
imul
popa
jae
xchg
sbb
ja
add
xor
pop
hlt
ljmp
lods
es
push
xchg
clc
insb
int3
inc
rol
jae
jbe
push
dec
xor
inc
sbb
cmp
das
mov
sub
xchg
xor
dec
push
add
arpl
lds
push
insb
decl
iret
sbb
pushf
push
or
gs
pusha
addb
inc
and
dec
xor
ss
xchg
gs
push
jo
fists
insb
cs
lock
pop
add
popf
mov
jmp
pop
add
fmull
mov
mov
lds
jo
mov
push
push
pop
xchg
mov
jl
lahf
repnz
arpl
aaa
daa
leave
and
inc
stc
push
jmp
sub
rcrl
mov
mov
cmp
inc
xchg
scas
repnz
push
mov
xor
jb
outsb
aaa
clc
outsl
sub
aaa
sub
mov
call
sbb
fucom
ret
imul
es
mov
mov
mov
mov
xor
fld
call
inc
adc
inc
sahf
mov
or
test
les
dec
cli
ret
mov
das
push
xchg
outsl
loopne
add
push
rorl
lods
pop
mov
aas
xlat
ficomps
out
rcll
mov
into
cmp
xor
sahf
lea
mov
adc
dec
lods
loop
adc
xchg
fdivrl
mov
std
inc
jae
stos
jb
xor
mov
and
in
jbe
or
stos
into
mov
adc
push
fsubrl
push
cmpsb
rorl
push
mov
inc
test
not
leave
fidivl
xlat
mov
test
in
jecxz
fcomp
fsubl
mov
mov
jmp
into
sub
hlt
sub
mov
arpl
cld
inc
mov
sbb
jge
dec
pop
xor
int
mov
mov
icebp
pop
add
mov
lret
das
aam
std
js
in
jl
push
xor
sbb
jl
stos
ljmp
out
sub
sbb
push
and
cmc
sahf
scas
pop
les
sub
ja
lds
mov
mov
enter
cmc
movsb
dec
push
sbb
mov
jp
sub
xor
insb
jae
or
test
lea
inc
adc
sub
sidtl
cmp
ficomps
mov
adc
and
sub
in
adc
stos
sbb
pop
jns
sti
in
mov
int3
mov
lret
in
jb
dec
inc
ret
xchg
push
sbb
jbe
nop
push
adc
fiaddl
ret
ss
pop
ret
pop
lock
push
je
adc
faddp
mov
or
es
repnz
ret
int3
rclb
sbb
fisttpll
sbb
in
ficoms
scas
cld
sbb
out
xor
lahf
push
dec
into
imul
push
addr16
mov
in
pop
int3
roll
inc
jmp
adc
movhps
aas
xchg
inc
push
mov
out
fidivs
sub
aas
outsl
sbb
pop
in
mov
push
jb
icebp
adc
lret
je
xchg
push
mov
loope
inc
loope
outsb
jae
fisubs
sbb
mov
inc
xor
sub
in
je
mov
mov
xchg
or
push
gs
mov
shll
and
mov
stc
xlat
pop
add
out
adc
pop
adc
xor
daa
lret
clc
and
lret
inc
in
das
daa
cmp
fdivrs
pop
push
mov
lds
repz
jmp
inc
jae
push
ret
shll
jbe
pop
mov
xchg
aas
addr16
or
mov
stos
fcmovne
dec
test
aaa
xor
xchg
or
mov
and
insl
jb
pop
sar
mov
aas
imull
pop
lret
push
or
sti
popa
fwait
shll
or
cmp
cmp
mov
sbb
mov
inc
fdivp
add
lea
pop
in
or
pop
mov
jp
dec
push
daa
mov
cmp
or
and
hlt
xor
jl
test
pushf
mov
add
sbb
xor
push
pop
mov
jnp
aas
sbb
mov
movsb
loopne
sub
add
addr16
push
fcmovu
movsl
mov
lcall
je
adc
repz
iret
jl
loopne
dec
shlb
lock
movl
add
fldl
mov
and
inc
lock
shll
lods
inc
notb
cmp
arpl
dec
cltd
in
mov
inc
andb
xchg
ljmp
out
cli
loope
repz
bound
jns
adc
mov
les
icebp
xor
mov
xchg
fidivl
roll
movsb
and
popf
into
push
cmp
out
aas
sbb
fimuls
adcb
mov
gs
jmp
dec
mov
cmpsl
cmp
enter
nop
lods
out
stos
imul
ret
mov
test
popf
push
push
aad
fcomps
jmp
add
mov
mov
lcall
xchg
sbb
arpl
push
pop
jns
cmp
add
rorl
or
outsl
cltd
add
int
xchg
xor
in
ljmp
in
jg
out
sti
and
fadds
lahf
pop
mov
jp
les
jle
pop
push
loope
inc
and
scas
xor
mov
fcomps
movsl
adc
movsb
or
and
pop
xor
data16
nop
or
fisttpll
cmp
mov
push
jnp
mov
ror
xchg
or
out
mov
imull
sub
subb
test
imul
pop
xchg
mov
inc
scas
stos
repz
mov
xor
imul
mov
out
push
data16
and
fidivrs
rclb
lods
mov
bound
mov
mov
sbb
inc
jns
fcmove
jmp
pop
les
cs
clc
loopne
jns
sti
fcoms
in
push
xchg
xlat
call
stc
fldz
arpl
dec
adc
push
cmp
mov
cs
or
dec
mov
push
xlat
sbb
in
mov
jb
fdivrl
mov
addr16
and
fidivl
cmp
sub
push
inc
sahf
mov
push
inc
cmp
fwait
push
and
or
fnstsw
popf
adc
pusha
push
sbb
test
cmc
sub
inc
ds
pop
stos
mov
cwtl
jo
push
scas
jl
and
cmp
push
cmp
ret
ljmp
xor
adc
and
imul
push
xchg
and
cmpsb
sbb
dec
loop
mov
mov
and
jp
fcoml
fcoms
pop
leave
and
jb
and
and
daa
pop
aam
cmp
and
les
inc
cmp
mov
jb
xor
loop
fbstp
leave
shll
push
lods
stos
lcall
mov
xchg
clc
in
push
mov
imul
mov
push
fisubrl
fnstcw
push
into
xor
scas
pop
push
pop
sbb
rorl
and
adc
repnz
xchg
rorl
out
jge
add
scas
dec
cmpsl
mov
mov
jnp
aaa
xchg
insb
add
fmuls
xor
mov
add
sub
and
ss
insl
dec
jge
outsl
dec
insb
push
dec
add
push
sub
outsl
sbbl
jecxz
inc
and
addl
mov
jae
add
or
loope
adc
clc
int3
adc
shl
cmpsl
sbbb
gs
mov
ss
nop
lea
pushf
mov
or
push
jle
sub
mov
sub
adc
sbb
push
imul
fstpt
or
pop
mov
inc
jg
jg
out
jp
mov
call
inc
lcall
mov
imul
jmp
sbb
jmp
push
inc
jno
jge
fcomi
jle
xor
mov
seto
dec
mov
sub
in
mov
cmpsl
popf
lret
in
jo
inc
jmp
int3
lret
clc
pop
sub
sub
pop
and
psubw
or
sahf
and
xor
shl
cmp
xor
ja
js
lock
inc
mov
xchg
push
stos
ret
loop
out
mov
and
insb
sbb
in
lret
icebp
js
or
enter
jle
jo
jnp
repz
pop
dec
mov
or
cmp
push
dec
out
inc
or
dec
out
pop
mov
fsts
jno
in
mov
jnp
sbb
hlt
lds
and
hlt
sub
mov
mov
imul
into
add
inc
add
lods
mov
adc
in
lea
out
mov
pop
adc
ficoml
add
fldenv
jle
rcr
xor
dec
call
push
loope
stos
push
sbb
rclb
test
cmp
jp
adc
repz
rclb
lcall
pop
fwait
inc
jae
ds
sub
adc
inc
icebp
jns
sahf
cmp
pop
cli
ja
inc
cmp
outsl
mov
sti
iret
insl
mov
inc
loopne
sbb
push
loopne
in
dec
jbe
ss
ret
inc
rcr
mov
rol
lea
lds
cmp
fwait
mov
mov
cmpsl
aam
into
out
pop
js
push
dec
sbb
andb
divb
adc
sub
testb
cmp
sahf
push
pop
mov
xor
negb
inc
inc
call
lret
shl
call
sahf
into
in
int3
daa
ja
mov
xchg
andb
arpl
andl
dec
push
sbb
pop
push
fcomp
push
in
cs
or
frstor
sub
push
adc
fcomi
fiaddl
or
dec
je
ss
lcall
inc
loop
fsubrs
mov
add
pushw
pop
cmp
cli
push
mov
cmp
xor
lret
or
jmp
in
pop
ret
lcall
bound
mov
cltd
gs
rol
mov
repz
inc
adc
adc
stos
mov
outsb
inc
jb
jae
cltd
pushaw
or
je
pop
mov
les
pushf
dec
addb
rol
xchg
stos
and
and
insl
std
je
pop
xchg
cmpsb
pop
mov
dec
bound
ja
dec
mov
ret
cs
cmp
lret
pop
sbb
push
inc
xchg
cmp
sbb
dec
push
lea
into
shll
stos
push
adc
push
sub
mov
mov
jnp
addr16
dec
inc
jge
repz
add
cmpsl
loopne
aas
pop
cwtl
call
adc
or
notb
pop
add
scas
imul
inc
push
sbb
jb
fisubrs
push
mov
cld
dec
mul
fildll
xor
stos
mov
fiaddl
lcall
cmp
xchg
cmp
xchg
add
popf
mov
into
aaa
cmp
jo
scas
push
jp
pop
scas
or
push
cmc
je
add
enter
xor
sbb
inc
inc
xchg
cmovo
xor
ss
adc
call
out
push
faddl
add
and
scas
ss
mov
xchg
pop
ljmp
mov
inc
movsb
dec
loope
enter
dec
push
push
lds
ljmp
inc
cmp
mov
sti
popf
adc
jge
subl
cld
add
inc
loope
jbe
rcll
jmp
jbe
fst
out
leave
push
mov
ds
cmp
sub
inc
cltd
pop
mov
ja
mov
scas
pop
stos
xchg
shufps
adc
add
dec
or
cmpsb
int3
into
cmp
jle
or
lret
cs
lcall
and
ljmp
jl
in
fisubrl
jmp
xchg
pop
fcomps
xchg
mov
push
cmp
test
icebp
ret
adc
and
mov
addr16
repz
js
mov
xor
sti
or
pop
mov
jo
testb
testl
sub
dec
mov
movsw
out
stos
cwtl
jle
xchg
add
jbe
mov
xchg
cmpsl
test
cs
testl
mov
mov
test
mov
mov
jne
je
jecxz
jae
pop
pop
sarb
xor
dec
cmc
cmp
cli
mov
lret
push
aas
lret
pop
xorb
pop
add
rcll
mov
sub
mov
push
ja
stos
imul
xor
xchg
adc
sub
shlb
mov
bound
push
add
add
pusha
and
push
dec
mov
jp
rcll
mov
lds
dec
sahf
test
enter
lret
dec
lea
jbe
sbb
into
fcomps
cltd
and
jb
sbb
adc
or
mov
inc
les
mov
push
daa
inc
lods
or
add
dec
iret
or
mov
mov
loop
ljmp
xchg
inc
arpl
xorl
mov
xchg
mov
push
sbb
or
jae
pop
in
push
jno
shll
add
cmp
lahf
pushf
cmpsb
in
or
in
cmpsl
sarb
add
bound
xchg
test
xor
jno
jl
add
cli
arpl
inc
imul
push
inc
bound
rolb
mov
push
mov
test
and
jmp
mov
add
pop
xchg
insb
push
sub
movsb
mov
add
jl
lods
ja
mov
dec
xor
sahf
lret
lahf
cmp
mov
fisubl
mov
mov
pop
sbb
loope
out
sub
out
stc
or
test
add
push
rorb
sbb
sub
pop
lods
mov
sub
jbe
jmp
inc
movsb
lods
mov
aas
test
mov
movsl
pop
addr16
adc
stos
lods
xor
fcmovnu
daa
cmpl
jb
pop
dec
sarl
ret
sbb
jp
dec
dec
jp
lahf
cmc
faddl
testl
data16
sub
in
clc
out
jmp
stos
inc
fwait
jno
lock
mov
and
pushf
pop
mov
stc
sbb
jge
test
jp
mov
das
inc
out
dec
js
fs
ret
xchg
sbb
stos
mov
outsl
dec
jmp
add
mov
loope
inc
aaa
mov
ja
sti
pushf
std
sbb
xchg
dec
imul
cmp
insl
stos
pop
push
mov
inc
fwait
xchg
adc
out
mov
sbb
dec
mov
test
insb
pop
add
dec
cmpl
std
dec
and
pop
sti
imulb
cmp
push
adc
mov
fisubrs
lcall
dec
cwtl
lds
lock
inc
test
pop
fstl
add
cwtl
shlb
or
cld
jecxz
outsb
add
lcall
out
outsl
cmp
cmp
xchg
and
mov
xchg
leave
cmp
adcl
mov
repnz
mov
cmp
adc
icebp
loope
mov
sub
rclb
sbb
or
rcr
std
es
xor
pop
mov
cld
ss
shll
ret
fwait
scas
gs
mov
stos
mov
fmulp
int
push
je
movsb
mov
xchg
inc
dec
fldenv
stos
loop
mov
in
test
or
movsb
aaa
jnp
aam
mov
mov
fimull
jbe
mov
cmpsl
enter
sub
sub
ljmp
pop
or
push
lods
sbb
xor
xlat
mov
insl
daa
popf
push
lcall
pop
outsl
call
outsl
jmp
fsub
xchg
add
or
in
sbb
decb
pop
dec
ficoml
or
movsb
data16
rcll
aas
mov
xor
call
cmp
jmp
xor
mov
rolb
jne
imul
jmp
mov
and
add
inc
jb
jmp
mov
cs
bnd
jnp
das
aas
xor
jne
push
inc
enter
test
ret
and
shlb
in
divl
xchg
add
jns
arpl
inc
xchg
dec
xchg
mov
xor
fstpl
rclb
jo
popf
or
jg
mov
rolb
ljmp
arpl
add
xchg
mov
leave
nop
mov
or
out
pop
jl
push
daa
js
cs
rcrl
jb
pop
pop
mov
pop
inc
push
outsl
pop
mov
scas
insl
enter
push
stc
mov
test
dec
pop
gs
sub
cli
mov
xchg
xor
and
inc
push
pop
pop
ret
xchg
fwait
xchg
enter
dec
push
push
into
je
and
test
test
jg
insb
mov
and
xchg
scas
nop
adc
cltd
xor
icebp
cmp
mov
jg
and
lret
lret
outsb
insl
sbb
shl
jae
loope
sbb
dec
mov
pop
xor
ja
stc
scas
fadd
push
cld
aaa
inc
add
and
sbb
mov
inc
inc
stc
mov
stos
sub
testb
sbb
das
pop
xchg
call
jg
lahf
jbe
jecxz
jo
lret
sub
int
cmp
mov
sub
enter
out
dec
in
insl
repz
shlb
movsb
mov
pop
jmp
into
rolb
sbb
test
lahf
cs
push
cmp
push
push
cmpsb
mov
jp
adc
inc
sbb
add
add
mov
dec
mov
xor
decb
out
cmp
xor
mov
inc
sub
insb
out
and
dec
or
mov
adcl
dec
insl
xor
xchg
sbb
aaa
add
ljmp
cmp
lods
lods
and
add
int
xchg
test
inc
jl
cmp
or
test
lods
into
adc
rcll
cmp
mov
imul
or
pop
insb
mov
scas
push
or
jle
and
lret
adc
ret
pop
or
addr16
jl
or
ljmp
scas
loope
repnz
test
pop
test
icebp
in
popa
cld
sub
xor
shr
cmp
xor
ss
daa
aad
mov
cmpsb
jmp
mov
inc
add
sarb
addl
sbb
mov
push
adc
and
jl
pop
cltd
dec
add
inc
outsb
bnd
push
xchg
mov
aaa
adc
cmpsl
push
aam
push
and
adc
adc
push
dec
js
jmp
and
daa
enter
push
je
or
lods
cltd
and
loope
daa
mov
jmp
ret
mov
enter
pop
sahf
mov
cs
movsl
mov
movsl
repnz
test
add
mov
insl
xchg
sub
mov
sub
repz
aas
stos
addr16
pop
dec
push
cmp
fcoms
mov
mov
push
lcall
mov
loop
pop
add
mov
inc
inc
enter
pop
sbb
add
test
xlat
jne
xchg
dec
add
push
sti
xchg
mov
xlat
shrb
cs
shl
mov
popl
xor
jl
hlt
jg
mov
das
incl
inc
in
inc
jo
fstl
xor
mov
xchg
mov
stos
push
xchg
xchg
in
fistps
or
cld
mov
cmp
mov
je
call
in
lahf
inc
sub
fsts
rcrl
aaa
adc
into
jae
fistpll
imul
sets
push
push
pop
mov
add
mov
clc
add
inc
jg
imul
jg
out
mov
jnp
mov
aas
push
cltd
cmp
loope
sbb
add
outsl
addr16
loopne
lods
lret
cmp
aas
into
outsb
test
das
stos
or
bound
pop
sub
dec
cmp
sbb
addb
cli
push
lret
add
in
out
or
popa
push
inc
push
pop
adc
jmp
jecxz
data16
add
mov
inc
shll
lcall
enter
and
dec
std
gs
mov
add
iret
test
stos
pop
ret
pop
lods
lret
xchg
sbb
mov
pop
jl
lods
push
jl
xchg
in
in
leave
int3
xor
lahf
movsb
add
subb
std
xchg
cmp
xor
repz
wbinvd
addr16
fs
xchg
rolb
pop
in
into
mov
fisubs
push
test
mov
inc
add
cmp
jmp
jnp
dec
dec
sub
rorl
call
sub
xor
aam
sbb
mov
mov
cmpsl
bound
or
ret
sub
add
and
out
dec
xchg
push
add
or
fnstcw
xor
loopne
scas
roll
push
inc
and
or
lods
rolb
sbb
mov
push
mov
ss
gs
lcall
ret
jne
clc
push
scas
adc
je
push
jns
xor
push
pop
and
divl
mov
std
cmp
je
pop
mov
cmp
fiadds
lods
aam
fisttpl
mov
adc
dec
jle
je
mov
data16
jge
aam
mov
add
call
decl
mov
cli
cmpb
out
xorl
add
hlt
ja
dec
loop
sti
adc
sbb
jo
pushf
mov
in
pusha
cmp
jae
nop
xor
xchg
mov
aad
inc
mov
divl
add
cmc
cmc
xchg
add
cwtl
into
fsubrs
mov
sti
push
mov
shll
cwtl
call
test
imul
cwtl
mov
orl
fldt
daa
jge
rcl
mov
xchg
icebp
cmpl
mov
inc
mov
out
std
jne
movsb
ret
dec
dec
add
push
adc
mull
xchg
xchg
hlt
xor
mov
out
dec
xchg
pusha
mov
popf
mov
jno
push
mulb
pop
popa
ret
xchg
pop
sbb
in
cmp
mov
jno
sahf
repz
mov
ljmp
push
dec
outsl
sbb
inc
ret
lret
dec
and
les
lds
insl
mov
adc
cli
jp
xor
stc
sbb
js
mov
ret
mov
inc
enter
das
add
lds
push
test
mov
push
and
adc
xchg
xchg
pop
fldcw
dec
xchg
stos
jns
or
inc
loope
lahf
push
dec
loopne
mull
xchg
pop
mov
pop
dec
rol
test
outsb
mov
shrl
xchg
mov
mov
xor
movsb
inc
mov
aam
shl
dec
stos
xchg
dec
insb
pop
xor
push
cmp
mov
mov
lahf
mov
mov
scas
sub
cmp
pop
mov
adc
call
dec
lods
mov
pop
decb
faddl
inc
icebp
mov
aad
pop
fldcw
mov
daa
mov
fwait
mov
stc
rcll
jbe
sub
adcl
hlt
xchg
es
scas
aad
cmp
mov
inc
xchg
in
mov
mov
popa
xor
adc
sbb
pop
lds
mov
cli
fstps
jno
push
sub
fdivs
adc
repz
jl
sbb
xlat
movsl
arpl
dec
cld
leave
sbb
lret
js
mov
xchg
std
imul
jae
xchg
or
cmp
push
mov
xchg
and
cltd
iret
push
jg
cmpb
movsl
sbb
lret
out
and
mov
jb
push
jl
xor
jb
jb
mov
jb
mov
arpl
xchg
aam
or
inc
xchg
cmpsl
xchg
les
loope
stos
mov
test
sahf
push
sbb
lahf
test
mov
pop
cmp
loop
ret
dec
xchg
nop
dec
mov
pop
fisttps
mov
in
test
out
adc
push
adc
dec
jmp
pop
or
dec
stos
test
into
out
jle
xor
clc
stos
icebp
push
inc
adc
outsl
xchg
push
stc
dec
arpl
inc
and
sub
xchg
or
adc
push
push
or
mov
scas
test
cmp
pop
jecxz
add
movsb
cmpsl
outsl
sar
or
dec
fwait
in
and
xchg
jo
add
jb
jnp
xor
aam
mov
lock
mov
dec
fistpll
cmp
pop
add
inc
xlat
jns
cmp
mov
xchg
mov
std
inc
pop
aas
pushf
hlt
push
movsb
and
movl
hlt
daa
cmp
mov
clc
sbb
pop
fwait
adc
es
push
mov
popa
mov
aas
out
test
outsl
inc
lea
popf
popf
mov
in
pop
cmp
testb
ja
inc
and
decb
addr16
xchg
or
pop
xchg
cli
push
jo
sub
aaa
lret
imul
jmp
in
ljmp
cltd
xchg
pop
and
xchg
pop
pop
mov
inc
in
xor
subl
outsb
outsl
adc
imul
sbbb
ret
cmpsl
stos
mov
fstpt
add
mov
push
mov
push
ja
pop
mov
dec
xchg
mov
dec
inc
jno
sti
jp
es
dec
mov
inc
xchg
push
leave
mov
mov
mov
adc
or
xchg
jno
xchg
ljmp
movsl
mov
lret
mov
cmpsb
inc
or
imul
in
or
push
xor
fwait
leave
negb
les
insl
and
stos
pop
cmp
add
inc
mov
push
xor
bound
cmpsb
xchg
sti
ret
dec
adc
aaa
loopne
int3
scas
add
sbb
mov
fcoml
pop
inc
sbb
mov
lahf
cmc
outsb
mov
sub
orl
stos
mov
sbb
not
mov
pop
movsl
sub
ljmp
lds
or
dec
outsl
cmpl
xchg
in
scas
jmp
out
es
push
out
scas
lret
xchg
cmpl
dec
mov
lods
sbb
rorl
mov
push
mov
jp
movsb
or
jne
pushf
cli
or
xor
fs
es
xor
sbbb
sbb
xor
cmp
mov
push
sub
sbb
pop
gs
sbb
xor
lods
outsb
ja
and
add
dec
lcall
push
mov
fsubs
daa
gs
dec
and
lods
dec
ror
out
push
pushf
roll
inc
cmpsl
mov
dec
or
mov
inc
fnstenv
ja
rcrl
jl
and
mov
subb
jo
and
popf
lods
cmp
sub
mov
inc
mov
push
movsl
subl
test
pop
ret
mov
mov
and
inc
xchg
or
push
inc
js
mov
lret
sbb
mov
sti
mov
adc
dec
test
lret
jl
popf
fadds
sub
imul
popa
adc
cmp
testl
je
testl
xchg
xor
pop
cwtl
lds
dec
jp
lea
into
mov
jns
arpl
ljmp
jmp
pop
dec
cli
in
jge
pop
cmp
imul
push
jge
cmp
out
rcrl
add
jmp
mov
mov
lods
push
push
xchg
fdiv
repnz
iret
jnp
fwait
repnz
xor
sub
and
jnp
inc
push
movsl
dec
lahf
mov
aam
lods
push
addr16
sub
loope
and
mov
dec
push
mov
scas
xor
dec
mov
and
in
xchg
sti
adc
xchg
jp
jnp
inc
and
pop
divl
sub
sbb
pop
mov
bound
add
shll
mov
jmp
icebp
xchg
and
or
xor
ret
xchg
es
adc
in
xchg
mov
mov
pop
mov
loope
add
mov
sbb
stos
lock
sbb
push
xor
lcall
inc
jb
es
add
insl
adc
in
fisubl
mov
adcb
fisubs
pop
add
lods
dec
cli
aas
xchg
adc
adc
mov
pop
mov
sbb
push
sub
sub
sub
sub
xlat
clc
pop
cli
sarl
and
push
inc
popf
adc
or
sub
insl
adc
movb
mov
and
out
in
xor
mov
adc
sbb
inc
mov
cmpsl
sub
push
fcomps
sarl
out
inc
scas
out
sahf
call
scas
mov
add
inc
nop
and
addr16
sub
xor
push
fs
inc
mov
pop
sti
movsb
fstpl
fidivrl
mov
ljmp
xlat
xchg
push
push
lahf
sbb
jl
iret
testb
mov
pop
pop
aam
mov
lock
shll
movsb
lods
hlt
or
cmp
gs
cmp
add
loope
and
mov
addl
sti
and
ret
xchg
cmp
orl
out
movsl
movsl
ss
nop
jne
jmp
adc
sub
mov
xor
dec
imull
dec
sub
cs
mov
xchg
adc
xchg
lcall
js
pop
mov
push
cmc
mov
stc
mov
cmp
daa
test
push
or
push
xor
mov
push
int3
or
stos
das
adc
mov
add
jg
fmuls
imul
scas
adc
je
imul
sti
sub
aad
add
jecxz
lea
pushf
xor
fbstp
xor
cmp
sahf
inc
std
sbb
mov
mov
mov
in
int3
jne
rorl
jb
shlb
and
stc
mov
popf
mov
sti
jb
sub
outsl
sbb
mov
test
gs
out
fsub
fistpll
das
jne
add
jl
mov
test
xlat
add
fbstp
and
jg
mov
mov
fildl
mov
pop
out
pushf
jb
cmpsl
add
or
pop
dec
xchg
int
and
outsl
into
mov
xchg
sub
pop
push
push
mov
js
pop
out
jns
in
add
push
mov
xchg
adc
cld
pushf
outsb
stc
cmp
mov
push
mov
in
and
test
stos
movsb
fs
jecxz
addb
sub
movsb
lcall
popf
push
fisubl
outsb
inc
in
xchg
loopne
xlat
xchg
in
xchg
sbb
rcr
push
sbb
enter
mov
dec
sbb
inc
mov
ret
jg
mov
inc
mov
stc
iret
push
cmp
xchg
inc
jne
and
scas
mov
adc
xlat
push
in
stos
add
dec
pop
mov
inc
fmuls
xor
cmp
xchg
dec
loope
sti
dec
cmp
jae
adcl
mov
stos
and
adc
sub
and
push
add
lods
pop
mov
ss
repz
cmp
push
inc
xor
xlat
sub
stos
rolb
mov
je
fsubr
mov
pop
andb
outsl
adc
stos
jne
roll
test
lahf
in
movsb
add
outsl
nop
aam
imul
pop
or
fcompl
sbb
inc
into
notl
mov
mov
popa
inc
ds
sarl
or
adc
fmulp
adc
adc
ss
inc
cwtl
xchg
jecxz
test
and
lcall
scas
or
add
push
imul
dec
xor
cmpsl
arpl
inc
add
std
gs
jp
test
add
jae
outsb
clc
xor
scas
idivl
movsl
stos
subb
in
mov
xlat
jmp
aad
orl
inc
pusha
mov
jg
push
cmp
cmp
shl
or
xor
inc
daa
fmull
dec
adc
cmpb
sbb
mov
or
dec
aas
call
jo
sub
jb
push
adc
pop
les
push
or
ja
insl
dec
dec
fimull
mov
push
xchg
mov
sub
jbe
call
add
push
push
mov
xchg
add
rcll
add
pop
stos
lea
test
rol
push
adc
daa
rcrb
lds
adcb
fldt
add
push
sti
xchg
adc
jl
insb
and
push
pop
cmp
cs
in
aas
mov
je
push
leave
ds
jle
sarb
enter
jmp
cmp
addr16
je
lret
xchg
or
shrl
movsb
into
push
aad
mov
push
pop
cmp
mov
out
or
pop
jmp
mov
cltd
sbb
call
adc
push
add
xchg
dec
jmp
sahf
jg
pop
hlt
mov
mov
cmpsb
sbb
negb
out
pop
int
lret
xchg
push
cld
sti
pop
xor
dec
jl
filds
xor
mov
repnz
fwait
inc
mov
loope
xchg
cmp
sbb
cld
push
test
xor
jno
ss
into
movsb
inc
in
mov
fld
cli
push
mov
insb
mov
sub
scas
incl
pop
adc
bound
dec
imul
inc
das
fwait
xchg
xor
mov
sub
jg
or
inc
inc
clc
std
jb
inc
inc
sub
mov
pop
out
pop
sbb
mov
bound
cmc
sbb
sbb
ds
inc
xchg
rorb
bnd
sub
mov
out
outsb
lret
add
ljmp
push
outsl
sbbl
loopne
fcomps
fsub
push
cltd
data16
push
and
pop
sub
pop
lahf
or
imul
pop
inc
cmp
in
push
call
mov
adc
push
rclb
sbb
fsts
push
jae
icebp
add
scas
out
inc
mov
jae
mov
jbe
ret
and
les
mov
fsubrs
mov
adc
leave
les
inc
xchg
lods
jmp
cwtl
rcrb
cltd
jb
loop
lcall
mov
ja
in
mov
bound
push
outsl
push
js
mov
std
movsb
insl
jo
ljmp
dec
push
push
sub
cmp
adc
fnsave
incb
test
sti
test
adc
outsb
subps
jge
mov
pop
js
fwait
mov
mov
std
pop
dec
sub
mov
jae
jne
mov
sbb
lock
icebp
fldt
jnp
push
sbb
pop
dec
dec
push
roll
sbb
pop
jp
shrl
ja
ret
mov
insb
rorl
lods
mov
rolb
mov
mov
push
inc
enter
ds
sti
xchg
mov
jno
arpl
cltd
jle
imul
xchg
rcrl
daa
xlat
mov
xor
repnz
and
gs
and
es
rclb
test
adc
int
mov
and
out
and
push
mov
notb
inc
int3
movsl
addb
addb
ljmp
or
sahf
fwait
imul
dec
adc
daa
shlb
cmpsl
hlt
adc
loope
pop
add
ds
xor
sahf
dec
dec
push
dec
xchg
push
ja
lods
adc
push
jecxz
test
ret
jmp
sbb
mov
das
pusha
mov
imul
nop
xchg
pop
push
mov
cmp
xor
imul
repz
fcmove
push
loopne
add
cmp
mov
in
pop
add
dec
xchg
vmovsd
and
movsb
inc
or
bound
test
mov
jp
sahf
add
dec
mov
mov
mov
mov
add
stc
call
sti
jns
mov
lods
xchg
jae
nop
loope
adc
xchg
aam
push
fsubrp
scas
ret
mov
pop
shlb
inc
mov
movsbl
push
mov
jle
and
jle
xchg
inc
imul
scas
cld
fdivl
in
mov
adc
mov
mov
mov
push
ss
outsl
adc
jecxz
dec
in
sbb
pushf
fstps
jbe
sbb
fbstp
in
push
call
andl
xchg
push
push
xchg
addb
push
imul
xor
jmp
sbb
push
fldenv
icebp
jne
outsl
mov
pop
shlb
lret
nop
out
mov
in
mov
add
rclb
mov
ljmp
stos
add
mov
sbb
add
dec
jo
test
jmp
push
sbb
sbb
mov
or
adc
test
in
and
dec
data16
repz
pop
dec
xchg
cmp
cmc
je
inc
and
jmp
out
mov
ret
insl
aam
xchg
dec
mov
cmpsb
adc
cli
adc
lret
insb
jbe
jae
xor
jg
inc
test
inc
lods
in
adc
and
xchg
and
sub
pop
ret
sub
fmuls
arpl
or
pop
cs
adc
dec
dec
pop
and
rcrl
inc
fs
or
cld
movsb
cwtl
out
arpl
clc
outsb
mov
sbb
push
mov
mov
push
pop
cs
xor
mov
leave
cli
fcoml
clc
popa
data16
pop
in
mov
movsb
jecxz
xlat
int3
mov
dec
pop
call
pop
neg
jo
icebp
dec
mov
scas
jno
or
or
dec
sbb
pop
fdivp
lahf
or
outsb
lock
jecxz
les
aam
dec
js
leave
mov
inc
or
enter
jge
mov
fstpl
repnz
mov
push
sub
andl
fidivs
pusha
ret
scas
lods
test
flds
pop
shll
aam
adc
aas
and
sbb
mov
mov
push
mov
lods
outsl
scas
pop
jnp
push
jl
jp
or
popf
sub
push
xor
inc
bound
enter
out
ljmp
call
mov
add
mov
mov
dec
lahf
fildll
pop
stc
xchg
mov
mov
jae
dec
sarb
or
push
push
sub
xchg
and
cmp
cmpsl
shr
push
mov
adcl
mov
es
stc
ljmp
sub
lret
test
sbb
mov
adc
loop
in
arpl
xchg
inc
jg
jecxz
or
pop
and
push
xchg
xor
xorl
inc
inc
jae
and
cmpsl
or
push
xor
or
loopne
jp
sbb
cld
or
mov
mov
mov
mov
outsl
sbb
dec
aad
sub
xor
jl
jno
push
xor
ret
imul
push
fsubp
mov
or
std
xchg
lock
pop
dec
fmull
pop
dec
in
pop
ja
xor
push
jo
jns
ds
js
sbb
adc
adcb
ds
push
cmp
lods
mov
test
sbb
inc
mov
scas
test
test
in
push
insw
ds
xor
ret
push
enter
stc
adc
fdivrs
pushf
jns
clc
lcall
push
dec
sbb
pop
mov
cmp
add
loope
rorl
lcall
movsl
rcrl
inc
sbb
xor
lods
mov
mov
sbb
or
test
mov
push
jl
loope
inc
std
sti
adc
dec
imull
testb
jns
lds
and
xchg
and
lret
pop
adc
sub
cmp
add
test
mov
movsb
push
xchg
and
xchg
cmp
push
add
mov
fnstenv
push
scas
dec
rcrb
inc
cmc
scas
and
lods
sub
sbb
pop
ja
pop
xor
fisttpll
arpl
xchg
fstpt
sbb
push
in
and
sti
adc
mov
mov
mov
cmp
scas
loopne
pop
outsb
test
xor
lods
cmp
and
mov
imul
test
mov
jecxz
mov
pop
mov
ret
dec
dec
or
sub
fstpt
enter
or
in
fcoms
enter
push
pop
cmp
or
leave
pop
adc
das
orb
cmp
loopne
xchg
mov
in
sub
in
loopne
cmp
jb
or
xor
fistps
out
and
arpl
fs
mov
das
sub
push
pop
aad
shlb
xor
and
dec
xor
lahf
lret
imul
cld
cwtl
fsubs
cmp
out
imul
xlat
push
mov
xchg
iret
xor
inc
dec
adc
add
and
dec
xchg
in
add
stos
fidivs
or
and
cmp
xor
lods
out
insb
adc
jecxz
loop
fsubrs
imul
inc
ja
cmc
out
test
inc
push
push
adc
add
mov
pop
add
rorl
lock
mov
sub
and
xlat
nop
mov
push
pop
in
adc
pop
hlt
or
or
pop
sub
mov
pushf
mov
fisubl
inc
mov
popf
lods
shrb
daa
lock
cwtl
js
jnp
cmpsl
scas
fcomps
mov
mov
in
and
call
mov
dec
repnz
arpl
std
cmpsl
inc
testb
xrelease
mov
insl
xchg
push
adc
out
or
mov
inc
pusha
cltd
mov
nop
adc
dec
out
xchg
in
adc
xor
pop
add
pop
inc
jmp
inc
movsb
fbld
ret
sbb
cmp
lcall
popf
dec
std
in
jnp
xor
mov
sbb
push
adc
push
aam
push
insb
dec
add
mov
aaa
jmp
cli
stos
mov
lcall
fs
add
and
mov
cmp
in
aad
cmp
addb
or
outsb
inc
and
mov
xor
addr16
dec
scas
jecxz
mov
popf
mov
jge
jl
jecxz
cld
adc
icebp
in
aaa
test
cmp
xchg
push
dec
sbb
mov
jo
lahf
inc
and
and
xchg
into
rep
sub
pop
mov
jg
cmp
and
test
sbb
mov
push
nop
ret
in
dec
pusha
inc
orb
or
inc
std
and
das
dec
in
movsl
mov
nop
cli
inc
call
and
ja
scas
addr16
mov
orl
jns
mov
cmpsl
pushf
mov
add
dec
jno
jne
cltd
aam
mov
jae
bts
xchg
mov
jmp
inc
jecxz
pop
add
mov
and
cwtl
mov
ja
sub
into
out
cmp
cwtl
adc
dec
jle
ret
stos
frstor
push
sub
popf
jecxz
shrb
push
ret
stos
stc
mov
cltd
leave
xchg
or
shrb
inc
mov
xchg
daa
in
movsb
cmp
xor
dec
shll
dec
add
push
inc
mov
jb
mov
jl
icebp
mov
dec
or
sbb
jns
rol
mov
inc
fldz
je
dec
popa
in
inc
leave
inc
bsr
cltd
inc
jb
iret
neg
mov
out
sub
xchg
int
adc
iret
shlb
xor
call
sub
ret
filds
mov
cmp
mov
leave
stos
xor
mov
test
sbb
scas
adc
in
ret
testl
outsb
sti
adc
das
push
pop
std
and
cmp
dec
insb
inc
xchg
adc
lret
sbb
leave
or
ljmp
xor
jo
popa
fsubs
in
xor
test
into
repnz
fwait
cwtl
fildll
fisubrs
stc
cwtl
in
add
imul
dec
push
xchg
rclb
js
dec
inc
in
xchg
aaa
dec
mov
xchg
jb
and
enter
xchg
in
mov
dec
pop
xor
cmc
push
pop
aam
cmc
sub
push
dec
gs
mov
push
iret
in
and
idiv
add
gs
cwtl
cmp
pushf
jp
pop
push
pop
sub
pop
cmp
in
jg
jbe
jo
cltd
lcall
inc
lret
mov
xchg
lock
or
mov
jno
xchg
jg
sub
hlt
in
gs
adc
sbb
push
enter
fsubs
shll
cvttps2pi
test
loope
adcb
jns
sub
lock
out
jmp
sbb
mov
imul
fs
xchg
pop
adc
int
repz
out
leave
rcrl
mov
mov
add
cmp
jne
fildl
pop
jnp
pop
xor
add
xchg
mov
cmpsb
mov
or
mov
cmpsb
xchg
mov
xchg
cmp
xor
adc
push
jmp
mov
mov
jno
test
pop
insl
adc
cmp
repnz
fmuls
cwtl
mov
push
std
ja
mov
jo
pop
pop
test
nop
in
aam
mov
sub
sub
pop
aas
xchg
cmp
scas
fisttpl
cmp
sub
call
into
pop
push
in
fidivrs
arpl
mov
cwtl
clc
rol
add
push
sbb
pop
xor
lret
imul
mov
pop
push
fldt
mov
test
gs
xchg
pop
out
and
jae
stos
inc
in
ja
fmull
xor
jecxz
aad
dec
loope
aas
sub
push
insb
lods
or
mov
mov
outsl
pusha
in
inc
xor
shlb
jle
mov
int
fcompl
and
sbb
dec
mov
in
lods
or
xor
sbb
add
aaa
cmp
pop
lahf
jg
leave
or
jo
xor
fs
and
in
sub
jle
gs
hlt
xchg
lods
cmp
imul
icebp
add
in
aaa
std
inc
shrb
mov
push
adc
outsb
cli
fildl
fidivrl
xchg
in
into
mov
pop
idivb
jecxz
adc
push
dec
cli
xchg
addl
pushf
inc
pop
int3
jl
jl
adc
mov
xor
push
push
cmp
cmp
lcall
int3
pop
lods
das
dec
enter
or
jge
mov
cmp
stos
add
aam
xchg
loop
cmp
sti
mov
lcall
lret
push
lcall
pop
dec
pusha
pop
cmpsb
clc
mov
xor
leave
cwtl
cmp
push
or
push
add
push
pop
adc
jbe
mov
test
sub
jne
cmpsl
dec
lods
xchg
push
or
pop
faddl
jge
iret
inc
outsl
mov
dec
mov
jmp
fisubl
fldl
into
xor
fnstenv
leave
mov
or
cmp
int
or
inc
loope
aad
cmp
xor
add
sbb
and
xor
int3
mov
es
negl
sbb
pop
jecxz
jae
xchg
enter
xchg
add
in
aaa
clc
sub
add
lds
enter
loop
and
in
mov
inc
scas
dec
sbb
out
jmp
pop
pop
mov
aas
cltd
or
jbe
push
sbb
dec
sub
inc
inc
rclb
push
insb
fs
mov
xchg
neg
popf
orl
or
inc
test
inc
and
mov
or
xor
jp
or
push
xor
arpl
dec
mov
out
inc
popa
mov
jbe
ja
xchg
lock
mov
mov
enter
dec
shrl
fwait
insl
inc
push
pop
jnp
decb
clc
sub
pop
imul
lds
int3
push
sbb
inc
or
xorb
dec
dec
arpl
out
imul
ds
fcoml
movsb
sub
xor
push
xor
flds
cmp
jge
xorl
call
or
mov
cmpsb
mov
pop
rorb
ja
inc
xor
aas
test
jmp
dec
fucomi
fidivl
push
call
xchg
and
push
insb
xchg
sbb
mov
and
cwtl
jge
daa
cmpsl
xchg
call
in
sahf
cld
les
lcall
into
and
dec
and
jp
add
sti
das
mov
out
sub
int3
push
add
or
popf
sbb
xchg
cmp
pushf
inc
push
fisubrl
fisttps
iret
jle
pusha
xchg
rclb
jo
stc
icebp
xor
xchg
stos
cmc
mov
xor
adc
ja
cld
mov
int
add
mov
push
sbb
mov
adc
leave
sub
push
lret
mulb
arpl
enter
dec
mov
xchg
jb
pushf
pop
inc
mov
aad
mov
inc
les
mov
pop
dec
fsubl
sub
sarl
into
aas
adc
sbb
insl
or
cmp
fsubl
repnz
xchg
imul
out
fstp
les
add
and
pop
addr16
test
fmull
sub
mov
mov
sbb
sbb
add
pop
inc
mov
jbe
mov
mov
ds
xchg
dec
icebp
jp
jmp
sti
jg
ja
cmp
and
add
cmc
fildl
lock
mov
sub
mov
mov
mov
mov
adc
pop
test
movsl
sub
lods
imul
xor
dec
out
or
fisubrl
jbe
pop
shll
push
push
mov
mov
xchg
insl
dec
mov
cs
adc
lcall
and
test
iret
xchg
je
sbb
rcl
fsubrl
sub
jno
pop
xchg
stc
lahf
and
je
jp
sbb
test
dec
xchg
mov
and
cld
imul
and
adc
cmp
push
push
fisubrl
mov
and
jmp
and
adc
lods
xlat
aad
jns
xchg
sbb
add
ret
fwait
sub
mov
or
roll
inc
insb
or
stc
addr16
sbbl
and
inc
movl
in
push
inc
jbe
or
dec
andl
jle
mov
fisttps
inc
jg
adc
rcll
mov
xchg
adc
sbb
jae
jecxz
inc
leave
cmpsb
in
shlb
cltd
inc
arpl
hlt
xchg
out
jae
data16
mov
xchg
jnp
lret
sub
sbb
rcl
push
cmpsb
jne
popf
mov
xchg
out
xor
ss
add
stos
cwtl
push
insl
inc
cmp
jl
aad
cmp
cmp
push
adc
fldcw
push
out
pop
or
jo
call
in
imul
addl
ret
outsb
daa
into
mov
test
jecxz
mov
cli
mov
inc
daa
push
jmp
aas
sbb
movsb
aad
shll
and
inc
xor
mov
inc
push
sbb
and
jecxz
pop
sbb
cmpsb
cmp
pop
stos
testb
pop
xchg
xchg
inc
sbb
add
stos
outsl
js
test
sahf
mov
je
lods
adc
dec
cmpsb
pop
xchg
mov
xor
add
mov
repz
movsl
and
fmulp
test
adc
push
out
inc
push
test
in
push
shr
loope
inc
adc
stos
lds
xchg
jle
rcrb
adc
iret
add
jae
aad
out
ds
xchg
mov
pop
in
or
push
push
push
repz
fisttpl
pusha
daa
jne
add
aaa
jo
popl
push
out
xchg
ja
mov
rcll
aad
adc
leave
daa
pop
sbb
xchg
mov
inc
insb
cmpsl
adc
sbb
int
sbb
mov
mov
scas
jg
pop
into
sbb
orl
lret
gs
es
cld
mov
sbb
sub
mov
xchg
xchg
call
daa
in
lahf
mov
std
jl
fs
sub
sbb
cmp
pop
cmp
aad
xor
je
es
mov
sarl
xor
movsb
xor
mov
add
push
xor
insl
add
ja
mov
sub
or
xchg
or
pop
std
cli
pop
xor
mov
lret
inc
data16
xchg
out
insl
enter
in
push
mov
lcall
cmpl
push
add
out
push
imul
cmp
insb
mov
and
xlat
icebp
aam
push
lret
xor
inc
xchg
insl
push
cmp
push
mov
out
mov
bound
push
push
pop
mov
sbb
push
fsub
dec
push
jne
or
loope
inc
rol
add
cwtl
imul
mov
push
sbb
add
sti
mov
iret
and
test
sub
inc
or
fcoml
jge
jne
push
test
add
std
jecxz
shlb
adc
into
aaa
les
cmp
into
sbb
mov
push
mov
jp
mov
mov
xlat
mov
dec
or
jl
inc
jmp
jp
out
push
scas
gs
aam
cmp
fbstp
sub
scas
scas
ret
test
pop
or
and
push
adc
adc
frstor
cmpsl
inc
push
pop
xor
lret
pop
repz
cmc
jno
adc
js
jo
xchg
mov
jo
lret
jecxz
loope
popa
inc
jmp
scas
movsb
jp
jnp
pop
je
bound
xor
lcall
lock
sbb
sub
pop
add
or
test
pop
out
iret
icebp
xchg
fs
add
imul
jge
or
mov
enter
jecxz
aaa
test
cmp
addl
push
je
test
mov
rcrb
movsl
arpl
sti
adc
cld
jmp
adc
out
clc
jae
cli
stos
xchg
pop
mov
inc
ret
ret
rcrb
mov
mov
jge
mov
loopne
into
sub
xor
dec
jne
aad
sub
std
mov
in
inc
mov
pusha
xlat
or
push
mov
cmc
mov
add
push
add
outsb
and
sbb
jecxz
sub
aaa
arpl
andb
cli
jl
pop
adc
push
sbb
mov
sub
dec
adc
jnp
mov
add
mov
test
js
mov
inc
scas
mov
ret
add
mov
mov
push
adc
bound
mov
or
test
rcrb
fcmovnb
and
push
pushf
mov
fildl
jns
aad
sbb
pop
xchg
or
ss
mov
icebp
inc
pop
repz
icebp
imul
xor
call
lcall
xchg
lcall
jne
outsb
outsl
cmpl
fdivrl
out
orl
or
dec
adc
ja
push
sbb
out
repz
add
adc
mov
dec
movsb
sbb
inc
adc
shll
out
iret
scas
fiadds
test
loop,pn
scas
sbb
loopne
fs
push
iret
into
mov
sbb
icebp
lods
movsl
negb
sbb
pop
xor
and
std
in
xchg
sub
stos
arpl
and
gs
in
inc
sbb
leave
mov
fisubs
adc
xchg
pop
jmp
mov
push
push
dec
mov
insb
cmp
push
mov
ljmp
sub
sub
cmpl
out
insb
adc
popa
mov
test
lea
les
pop
inc
xchg
ret
outsl
ja
add
mov
daa
adc
pop
sub
adc
mov
add
idivb
in
push
inc
mov
xchg
sbb
inc
aam
outsb
sub
mov
enter
mov
subb
mov
xchg
and
lcall
adc
test
cmp
or
and
mov
ja
adc
es
mov
add
mov
jg
test
add
lods
mov
dec
mov
mov
adc
pop
leave
outsb
jp
pusha
mov
inc
sub
loopne
jmp
idivl
sub
stos
into
add
add
pop
stos
sti
add
stc
lret
cli
fnstsw
sti
scas
adc
les
jae
xlat
lds
push
lahf
aaa
sub
loopne
mov
pushf
add
or
flds
jne
scas
iret
push
hlt
stc
and
fwait
push
dec
mov
gs
cmp
lds
sub
xor
inc
cmp
xor
in
mov
push
mov
lods
or
in
cmp
in
notl
and
mov
stc
mov
lods
lods
sub
push
ljmp
xchg
loopne
xchg
cmp
sub
or
and
xchg
xchg
add
std
subl
xchg
arpl
cltd
ret
sub
cwtl
pop
lahf
and
sbb
push
shll
add
sti
push
mov
dec
sbb
or
scas
pop
or
mov
inc
add
or
pop
xchg
daa
or
dec
mov
mov
cli
mov
jmp
or
leave
jge
sub
sbbb
sbbb
pop
cmp
cmc
in
js
lds
mov
fldl
je
int
jmp
jne
sub
adc
leave
test
jp
loopne
mov
add
adc
xor
push
xor
adc
stos
pusha
cmc
mov
push
in
scas
mov
pop
pop
mov
shll
pop
and
mov
shrb
and
out
leave
fisubl
cmp
imul
adc
mov
ret
cmpsl
pushf
push
mov
jmp
adc
subb
mov
and
push
js
push
lock
or
daa
and
mov
add
sub
push
test
repnz
pop
loop
mov
cmp
adc
mov
movb
mov
sub
xchg
into
cmp
daa
add
imul
test
sbb
orl
data16
shlb
sarl
sub
icebp
imul
xchg
mov
mov
repnz
negl
mov
sbbb
test
pop
test
mov
pop
jne
loope
pop
clc
ss
lahf
outsb
push
out
push
shll
cmp
push
adcl
rcrl
mov
std
cmp
mov
cmpsl
scas
lock
rcrl
inc
rcl
subb
cmp
test
dec
repz
outsl
aad
push
jnp
jae
push
push
je
sbb
stos
repz
mov
ret
stos
jnp
aas
cmpsb
hlt
jp
push
mov
mov
call
xchg
popa
inc
or
icebp
adc
mov
inc
fcomp
nop
push
adc
fs
rclb
pushf
xchg
popf
mov
fsubrs
adc
call
add
add
shl
lock
sbb
fdivrs
jg
add
sub
push
lea
inc
pop
push
arpl
iret
nop
xchg
adc
jp
push
shrb
cli
aaa
push
loope
mov
dec
adc
subb
fcmovu
inc
loope
xchg
leave
mov
in
xor
rcrl
and
frstor
and
dec
push
fucom
jle
push
add
enter
rol
xor
xor
pop
test
jne
jmp
adcl
mov
aam
jne
cltd
inc
scas
in
stos
lcall
pop
adc
sti
test
pop
jle
movsl
push
cmp
popa
movb
test
arpl
xlat
xchg
nop
mov
inc
sub
ret
and
outsb
inc
ffree
dec
jl
mov
int
push
mov
xchg
dec
out
lcall
jg
iret
or
mov
jg
ljmp
cmp
add
add
dec
loope
mov
xor
add
fcmovnu
test
cs
sub
jl
shl
mov
mov
movsb
aam
jne
adc
jns
jne
xchg
loope
pusha
jo
inc
push
call
int
jnp
inc
ja
enter
scas
cmp
jnp
or
inc
push
or
out
loope
sti
lcall
mov
mov
xlat
adc
ljmp
fnstenv
dec
push
mov
ret
or
jns
xchg
lods
pop
hlt
loop
push
insb
pop
loop
loop
jg
push
rcl
addr16
loop
push
daa
fcmovnb
push
mov
mov
pop
xor
xor
pop
iret
xchg
xor
lds
and
jnp
shll
mov
je
scas
lds
call
jbe
mov
sbb
fnsave
ja
lods
fiadds
dec
dec
pusha
dec
sbb
sub
shrl
rol
repnz
arpl
push
leave
enter
push
testb
enter
arpl
fstpl
inc
xacquire
int3
mov
push
xor
add
mov
jl
pop
mov
jne
das
adc
insl
leave
stos
add
jle
mov
xlat
xor
mov
aas
adc
insl
scas
in
mov
mov
rclb
ss
popa
movsb
frstor
xchg
lret
pop
mov
or
aas
add
int3
sbb
in
push
mov
out
sub
sub
cmpsb
fdivp
lahf
pop
ja
scas
mov
ret
ds
stos
in
add
xchg
ja
stos
fmulp
pop
gs
xor
in
add
lcall
aaa
mov
add
and
xlat
sti
insl
sbb
sbb
iret
into
push
dec
mov
xchg
pushf
sbb
loop
fiadds
cltd
bound
adc
push
add
dec
push
lods
lock
push
fimuls
push
frstor
push
bound
dec
loopne
cmc
clc
pop
push
lea
test
sbb
pusha
lods
sub
jecxz
mov
cmp
xorb
add
and
gs
aaa
outsb
repz
out
repz
daa
cmc
or
inc
icebp
je
push
pop
mov
arpl
mov
xlat
push
aas
xchg
jnp
xchg
push
je
sbb
mov
arpl
adc
adc
sub
xchg
adc
mov
or
roll
in
dec
mov
in
loop
xchg
sbb
xchg
sub
pop
mov
pop
call
mov
and
jbe
inc
inc
dec
add
cmp
iret
jge
inc
in
adc
data16
xchg
in
mov
aas
mov
leave
sub
cmc
or
dec
mov
shl
cmp
ja
add
xorl
imul
jo
lcall
pushf
aas
dec
stos
arpl
adc
push
cmp
scas
mov
sbb
and
pop
ffreep
sbb
jne
pop
dec
inc
push
repnz
dec
mov
pop
mov
jnp
inc
shll
mov
es
mov
daa
jb
adc
mov
sbb
mov
std
add
in
addr16
fistpll
sbb
pusha
mov
mov
ja
scas
xchg
scas
and
mov
jb
ja
ss
mov
dec
push
xor
mov
in
xlat
aas
or
mov
loope
jmp
adcb
xchg
xor
loop
imul
addr16
sub
pushf
mov
fisttpl
das
cwtl
popf
out
addr16
mov
aas
out
cmc
mov
addr16
add
scas
je
add
stos
inc
repz
ja
xchg
adc
cmp
sarl
mov
pusha
lea
je
jecxz
dec
insb
jnp
mov
loopne
and
add
hlt
js
stc
inc
push
sbb
pop
pushl
fwait
cltd
mov
in
sti
pop
cli
fstps
mov
insb
cld
lock
lods
or
pop
pop
and
daa
leave
mov
mov
and
sbb
adc
adc
inc
push
or
xchg
cmp
inc
sbb
adc
dec
mov
dec
out
jae
add
in
pop
jne
lahf
fucomi
jo
out
pusha
icebp
mov
cmp
pop
push
sbb
lods
movq
xor
mov
rclb
adc
jo
mov
insb
imul
outsb
pusha
int
sbb
les
mov
lock
pop
and
lock
mov
ss
in
push
xor
std
jl
outsb
pop
mov
inc
lea
jmp
push
push
sbbb
and
std
sub
lods
jae
ljmp
sub
in
insl
daa
mov
push
pop
fisubrl
ja
ljmp
mov
cwtl
push
in
xchg
and
xor
fdivs
mov
sbb
jae
sub
xchg
sub
loopne
stc
sub
push
fwait
mov
jecxz
inc
das
mov
sahf
sub
data16
dec
mov
imul
dec
int
inc
ret
mov
orb
test
mov
push
sbb
cmpsl
imul
gs
mov
out
ret
or
cmp
sbb
clc
sub
adc
out
dec
dec
xor
push
movsl
fldcw
push
sbb
cmp
inc
mov
push
mov
insl
call
je
add
loop
xchg
dec
adc
xor
mov
mov
lret
rorb
jmp
das
dec
mov
mov
cmpsl
jmp
xor
outsl
dec
jbe
aas
push
push
loope
movsl
aaa
push
mov
imul
and
daa
xchg
jg
mov
loopne
sbb
dec
not
inc
out
test
and
jmp
ds
xor
pop
dec
cltd
adcl
or
cmp
xor
repz
fsubrl
insl
iret
popa
inc
fsubl
sarb
mov
sub
repnz
addr16
aas
xchg
movsl
push
dec
test
pop
fmull
lock
jae,pt
xchg
notl
and
out
inc
data16
xchg
inc
sub
jp
cwtl
fdiv
fcmovbe
lods
jo
cmp
mov
lods
mov
ds
in
xchg
sub
enter
cmp
jne
xchg
je
dec
mov
pmaxsw
fwait
mov
mov
lcall
xchg
inc
shll
sub
ret
stos
push
sub
fcmovnb
fsubs
pop
mov
xchg
lods
rolb
hlt
inc
xchg
std
outsl
movsl
rolb
mov
inc
rorl
mov
aam
dec
mov
lcall
cmp
testb
sbb
stos
jle
xor
pop
cmp
ficoms
xor
sub
aaa
fistps
cmp
pushf
repz
xor
pcmpgtw
and
js
imul
outsb
or
push
out
movsl
andb
add
and
cmc
insb
stos
iret
repnz
xor
in
aad
lcall
cmpsb
add
mov
in
daa
enter
inc
adc
push
push
push
xor
mov
pop
dec
fisubl
test
pop
imul
and
mov
add
das
jge
mov
adc
mov
cmpsb
fnsave
jnp
push
imul
or
mov
push
xchg
mov
imul
push
dec
dec
mov
and
mov
out
add
loopne
mov
pop
icebp
add
loopne
mov
mov
loopne
jo
add
stos
pop
fdivrs
xacquire
inc
daa
dec
adc
xchg
daa
scas
popa
aam
int
jmp
stos
sbb
out
out
mov
fldl
pop
push
sub
es
pusha
out
sub
ljmp
fistl
mov
dec
shlb
xchg
or
push
jno
std
into
xor
imul
cs
insl
cmp
mov
mov
das
xor
mov
jg
scas
mov
movsb
out
popa
xchg
xor
cmc
stos
daa
xchg
xor
test
pop
test
and
out
je
jmp
dec
pcmpeqb
leave
lock
mov
stos
aam
jns
add
xchg
mov
and
jecxz
push
lret
and
in
sbb
pop
jg
cmc
ret
pop
mov
or
cmp
outsl
inc
fisubs
sub
jecxz
int
xchg
nop
sub
rorl
lods
add
cmp
subb
lcall
rorl
ja
aaa
or
stos
push
push
push
pop
dec
push
scas
sbb
xchg
xlat
xlat
in
add
sbb
outsb
sbb
shll
adc
movd
mov
faddp
cmc
int3
and
call
cltd
sti
mov
test
sbb
aas
in
test
lret
cmp
inc
pushf
pop
mov
and
sbb
fiadds
cmp
loop
test
cwtl
mov
cwtl
xchg
xchg
cmp
mov
push
rcrb
shll
outsl
mov
sbb
fnstcw
les
inc
mov
cmp
add
and
dec
sbb
loopne
les
jle
sbb
pop
outsb
sub
shr
inc
js
sub
sub
dec
pop
fisttps
gs
dec
into
lock
pushf
icebp
test
pushf
mov
mov
mov
xchg
fdivr
int
xchg
jbe
test
xchg
mov
pop
sbb
out
xchg
add
adc
inc
and
stc
pop
and
ret
hlt
mov
mul
fildl
fldl2e
cmp
fs
ret
in
xchg
and
stos
dec
xor
or
inc
mov
and
or
imul
adc
out
mov
xor
imul
scas
loope
push
inc
push
add
repnz
jne
xlat
mov
mov
int
leave
sbbl
dec
dec
mov
xchg
mov
stos
fidivl
mov
cmp
ret
rorb
pop
mov
push
mov
mov
jle
add
pop
mov
fcoml
jbe
inc
dec
fwait
jmp
mov
into
push
aad
xlat
pop
mov
jge
rorb
push
xor
pop
xchg
call
fcomps
jnp
arpl
push
outsl
xchg
repnz
fs
aad
mov
mov
mov
sub
push
repnz
sbb
rclb
fistpl
cli
scas
pop
pop
sti
push
dec
lock
sbb
dec
imul
lret
cmpb
push
mov
out
fdivs
mov
pop
enter
mov
jecxz
outsl
test
dec
cmc
lds
inc
fildll
xor
dec
fmuls
xchg
sti
jmp
cmp
fstl
cmp
mov
pop
mov
push
out
cmp
fidivl
jmp
xor
inc
jb
xlat
dec
mov
add
subl
mov
push
in
adc
ficompl
imul
mov
fisubrs
imul
xchg
pusha
outsl
hlt
inc
sahf
mov
sahf
dec
xchg
mov
sbb
lret
scas
xchg
mov
cli
jmp
enter
xor
shrb
aas
out
aad
inc
sbb
movsl
inc
cwtl
sbb
jg
test
lods
movsl
push
push
fdivrl
add
inc
xchg
enter
cmc
stos
inc
cmp
cmp
sub
mov
sub
add
in
decb
and
or
movsb
xchg
mov
pop
push
in
mov
in
mov
push
pop
repz
into
add
shlb
pop
sbb
and
mov
cmc
loopne
das
xchg
aad
cltd
jno
mov
mov
add
sub
mov
pushf
inc
pop
movsb
adc
jp
gs
imul
mov
aaa
into
mov
into
xor
fidivs
aad
jge
aad
loope
divl
stos
icebp
or
adc
pop
push
mov
mov
xor
outsb
ficompl
sbb
cwtl
loop
dec
daa
into
fwait
xchg
stc
jnp
add
add
push
jne
negb
push
jae
call
jmp
cs
jbe
popf
dec
push
push
dec
leave
add
into
ret
cmp
mov
jb
xchg
xchg
xor
and
xor
push
mov
push
push
dec
loope
pushf
cmpsb
enter
ss
out
push
pushf
aas
mov
fs
jmp
dec
roll
in
test
jno
mov
arpl
xchg
test
popa
sub
sahf
lock
mov
inc
mov
ss
push
fwait
sub
das
je,pt
cmp
les
test
mov
enter
fists
pop
jg
mov
dec
push
pop
push
inc
jno
int
bound
jp
movsb
popf
mov
lcall
pop
pop
mov
cmpsb
loope
sbb
inc
or
and
inc
or
das
add
jle
adc
cmp
xchg
mov
cmc
cli
hlt
stos
lods
and
mov
scas
and
pop
lods
aaa
out
ss
inc
test
push
or
or
scas
test
adc
out
scas
dec
push
xor
mov
dec
imul
xchg
adc
mov
test
enter
xchg
scas
imul
cmp
push
sbb
aas
imul
sbb
xor
xchg
sub
test
fcmovb
push
in
push
into
mov
xorl
clc
popf
sbb
insl
jmp
sub
mov
mov
loopne
lds
in
rcrl
mov
call
ja
imul
imul
inc
lock
dec
dec
add
rorb
cmp
insl
mov
mov
adc
pusha
xchg
pop
and
clc
add
push
sbb
idivb
ret
insb
daa
popa
and
out
jae
pop
xor
in
mov
push
imul
jno
fistl
fs
lret
dec
push
imul
insl
pusha
xchg
and
pop
push
pusha
in
cmp
pop
mov
sbb
sub
jmp
inc
or
es
xchg
xchg
fsub
je
add
inc
xchg
xchg
push
enter
mov
ret
push
pop
mov
add
jle
leave
jle
inc
nop
xchg
mov
mov
sarb
call
les
xor
dec
push
int
dec
pop
lret
mov
aas
sub
mov
inc
aas
ret
test
add
xchg
pusha
ret
fdivrl
sub
push
sbb
and
pop
mov
cmp
adc
in
repnz
jb
mov
aam
mov
and
divl
push
les
or
xor
in
sbb
icebp
pop
out
push
cmp
repnz
push
xor
lds
clc
mov
orl
adc
mov
shld
push
xchg
pop
jo
in
jmp
hlt
out
dec
sub
dec
int
cmp
ret
fdivrs
or
mov
or
xchg
loop
xchg
jno
shll
jle
inc
jge
fisttps
dec
pop
inc
sbbb
das
mov
mov
or
mov
sahf
fisubs
jo
andl
or
ljmp
in
cmp
shl
jne
mov
xor
fs
repnz
out
mov
sbb
imul
dec
cli
cmpsb
mov
sbb
les
rcrb
test
sub
or
adc
adc
cmp
xor
je
and
sbb
fcomps
sub
inc
dec
mov
sti
jge
testb
pushf
sbb
dec
imul
pusha
fs
mov
dec
pop
add
ja
push
mov
lea
add
test
inc
mov
push
mov
mov
inc
daa
mov
lods
inc
sub
rcrb
scas
scas
lcall
adc
rorl
sbb
test
outsb
mov
aad
addl
unpckhps
insb
xor
sub
cmp
cmp
es
cmpsl
sub
pop
push
adc
xchg
ret
mov
icebp
lcall
pop
jne
jo
leave
negl
shll
movsl
adc
ret
daa
jne
in
jae
mov
mov
in
cmc
clc
adc
inc
sarb
adc
outsl
inc
pop
outsl
xchg
xor
push
cwtl
cld
xchg
repnz
stos
lods
xor
xorb
push
adc
jbe
int
call
lods
outsb
push
es
sub
cmpsl
mov
shlb
mov
add
dec
cmpsl
rcll
mov
mov
outsb
fimuls
fcompl
jno
fs
in
cmpsl
push
add
xchg
xor
dec
jmp
bound
in
data16
aas
stos
sbb
lret
out
movsl
xor
aas
rcr
and
movsl
add
iret
outsl
xchg
ljmp
or
and
push
push
xchg
shrl
es
mov
mov
outsb
pushf
mov
movsl
hlt
orl
adc
mov
push
daa
inc
push
and
pop
es
flds
xor
rcr
add
and
cmpsb
popa
cmp
sub
out
push
jae
mov
shlb
mov
dec
dec
js
mov
mov
cltd
pop
insb
push
mov
lret
adc
xchg
or
pop
sbb
test
out
insb
mov
jb
cmova
int
fildll
xchg
inc
gs
adc
pop
mov
movsl
mov
add
jmp
mov
xor
cli
out
inc
cmpsl
nop
or
and
sub
and
imul
lock
push
push
movsb
mov
fcoml
outsb
push
lret
mov
leave
shrl
add
sbbl
mov
jge
adc
jle
repnz
jp
cltd
and
push
lret
mov
in
ja
inc
inc
lock
and
sahf
outsl
xchg
loopne
fbld
xlat
popa
jae
cmp
lret
cwtl
sbbl
lcall
fwait
or
je
mov
out
enter
inc
push
mov
jns
pop
sub
in
in
imul
jns
mov
insl
push
rorb
fidivrl
sub
test
popa
jno
cld
dec
mov
cmp
scas
mov
mov
and
jae
ror
jae
cmp
cltd
inc
pop
push
loop
icebp
adc
ret
and
adc
xor
call
fildl
cmp
call
pusha
jno
fdivl
aaa
test
loope
lret
add
mov
push
inc
pop
jo
mov
sti
lret
mov
pop
rclb
test
cmpsb
jp
repnz
mov
scas
cmpsb
jle
aas
xor
mov
icebp
mov
les
mov
jne
shll
mov
iret
daa
lret
sti
or
mov
cwtl
lahf
out
daa
fldcw
pop
shl
imul
pop
mov
insl
and
test
cmpsb
mov
test
add
aad
jnp
fimull
out
sti
inc
mov
les
es
mov
mov
push
xor
aad
fimuls
or
mov
sarb
or
xchg
push
out
adc
inc
mov
mov
inc
push
push
add
xchg
and
fisttps
jecxz
push
stos
outsl
stos
enter
out
dec
mov
cmp
adc
fisttps
cmp
cwtl
outsb
lcall
in
mov
cld
orl
mov
jbe
mov
pop
add
lret
sahf
inc
iret
cmp
movsb
mov
rcrb
fists
les
out
shl
push
insl
cmp
loopnew
pop
mov
popa
add
or
xor
test
jl
add
push
shll
arpl
xchg
or
mov
int3
sbbl
push
divl
stc
add
push
fdivrs
adc
inc
or
or
mov
insl
ljmp
cmpsl
in
jge
dec
inc
push
dec
icebp
shrb
ds
lahf
or
adc
pop
out
and
out
fwait
adc
out
fs
push
cwtl
mov
jno
fdivrl
add
outsl
out
jne
or
push
and
add
scas
sbb
daa
pop
int3
dec
enter
push
mov
push
sub
bound
cmpsb
cmp
inc
cmp
sahf
xchg
jecxz
jmp
fsubr
lods
and
push
mov
inc
push
ljmp
nop
inc
lcall
out
loope
rorl
in
ss
and
and
insl
lret
dec
rolb
or
ret
or
testl
push
mov
orb
pop
sarl
cmc
mov
stos
sarb
jmp
xor
jl
jg
jmp
jo
xor
jecxz
lea
ficoml
mov
xor
daa
js
cmp
imul
push
xlat
loope
jns
inc
das
mov
test
repnz
rcll
cli
xchg
bound
out
std
hlt
fistpl
sub
addr16
jecxz
push
or
in
xlat
add
jnp
jle
or
xchg
testl
jmp
mov
movsl
xchg
iret
dec
push
xlat
xchg
cmp
mov
push
ret
inc
int3
sub
dec
ds
and
into
jo
adc
test
mov
stc
test
and
test
leave
xor
test
dec
xchg
out
sti
int3
mov
fwait
dec
sub
pop
adc
mov
pusha
loop
scas
add
mov
push
or
sub
in
push
sbb
push
xchg
cmp
shrb
lds
cmpsb
addb
dec
js
cmpl
sbb
jo
and
adc
in
mov
mov
add
mov
xchg
test
mov
mov
aas
xchg
flds
popa
add
sub
push
mov
setbe
arpl
push
push
inc
sub
inc
pusha
fwait
cli
bsf
pop
mov
push
adc
dec
sub
int
xor
ljmp
rorl
mov
sarl
cmpsb
mov
shlb
jmp
outsb
fcompl
repz
cmpsb
mov
adc
dec
movsb
inc
inc
jmp
test
dec
andl
cmp
insb
pop
sub
xor
sbb
lea
mov
mov
cwtl
pop
stc
xor
jns
test
subl
ret
sub
dec
lods
jns
pop
mov
adc
cmp
cmc
push
xor
push
cmp
add
inc
fstpl
mov
jmp
inc
adc
pop
cmp
dec
lea
or
xchg
lret
in
lret
rol
mov
mov
inc
shrb
xor
hlt
adc
sahf
add
fcoms
lret
sub
js
and
outsl
jmp
push
mov
cmpsl
xor
ds
jnp
cld
fcompl
in
cmp
je
jl
mov
mov
lahf
xor
inc
iret
stos
in
xorl
cmpsb
inc
lock
faddl
add
insb
fsts
fisubl
jmp
jnp
sahf
testl
mov
lret
mov
inc
lahf
test
cmp
outsl
mov
into
mov
out
sbb
ret
xlat
pop
or
ret
xchg
out
cwtl
std
ret
pop
add
jo
push
dec
aad
mov
mov
xchg
out
dec
dec
imul
je,pt
addr16
dec
bound
xchg
xchg
xor
int3
mov
lds
in
mov
sbb
loop
push
sub
mov
lea
js
ret
sti
push
push
adc
jp
fimull
xchg
mov
movsl
xchg
mov
pushf
decl
push
sbb
xor
insl
or
add
in
fcomip
dec
stc
push
imul
push
test
ror
xchg
inc
or
adc
inc
out
push
push
mov
orb
sbb
pop
inc
jnp
mov
adc
mov
sbb
cmp
loope
mov
lret
int
lcall
sub
or
pop
lds
jae
jne
adc
adc
imull
or
xchg
cmp
inc
hlt
sub
jbe
cmp
pop
and
pop
ds
insl
mov
add
cld
mov
push
hlt
insb
and
or
imul
fucomip
or
adc
test
xor
hlt
mov
call
lret
or
mov
push
push
mov
mov
pusha
outsb
cmp
jns
mov
aas
std
testl
jmp
bound
call
inc
sbb
inc
pushf
insl
cltd
inc
outsb
xor
sbb
push
enter
sub
inc
or
prefetch
or
push
push
jmp
add
add
jae
pop
lods
pop
mov
lea
icebp
jmp
imul
jecxz
insl
and
out
out
outsl
ja
add
xchg
jo
xchg
xchg
into
sbb
movsl
adc
insl
push
pop
xchg
push
mov
dec
fs
cmp
fisubrs
shl
mov
cmp
mov
or
dec
mov
repnz
sbb
cltd
and
sub
mov
in
mov
test
adc
cli
lcall
aas
aad
shll
add
xor
xchg
mov
jno
push
shll
fwait
sub
xlat
mov
or
xchg
bound
imul
sub
gs
cmp
jl
lds
stos
mov
jbe
xorb
frstor
push
lods
mov
hlt
xchg
mov
nop
add
pop
cmp
sbb
jb
adc
inc
dec
addr16
dec
and
ds
xor
pop
out
mov
push
scas
das
push
dec
and
es
ljmp
imul
inc
or
pop
out
mov
int3
mov
lds
vmwrite
loope
pop
jne
sub
push
out
pop
filds
cmp
adc
movsb
and
js
js
or
xchg
mov
push
xlat
and
dec
inc
jge
enter
lds
push
cld
sbb
or
cwtl
sbb
xor
stc
push
sti
test
shr
out
xlat
inc
mov
xor
push
loop
in
cs
out
pop
rcrb
jp
in
mov
xor
leave
das
ficoms
popf
pop
outsl
add
enter
sbbl
je
dec
pop
xchg
iret
and
jg
movsb
pop
xor
out
mov
sbb
sbb
pop
adc
xor
sub
lcall
stos
xor
les
cmpl
leave
xor
out
mov
jmp
cmpsb
fists
push
mov
outsb
dec
mov
hlt
out
clc
mov
out
xor
push
mov
pop
lret
lret
sub
movsb
or
add
adc
xchg
cmc
push
ja
enter
test
or
int3
je
out
sbb
fadd
push
popf
fidivl
cwtl
cmp
lcall
scas
or
into
stos
pop
inc
fildl
push
pushf
lahf
jno
ficompl
fadds
rcrb
fnstcw
mov
out
xor
mov
ret
mov
cmp
xchg
imul
bound
mov
cmpb
jecxz
pushl
nop
mov
popl
add
loopne
lds
inc
dec
mulb
test
jne
mov
lahf
outsb
outsl
flds
jae
dec
and
cmc
fs
and
cmp
clc
mov
jno
std
mov
mov
pop
dec
insl
mov
push
xchg
sub
in
ja
mov
or
and
pop
or
sbb
lcall
cmp
jmp
lret
loop
or
loope
mov
inc
sbb
lock
data16
inc
mov
ljmp
mov
icebp
and
and
pop
adc
into
add
jnp
xor
loopne,pn
loope
and
cmpsl
push
inc
shlb
movsb
aad
xor
pop
pop
int3
hlt
mov
lahf
cmp
mov
popf
adc
jle
movsl
xchg
roll
orl
call
ss
inc
jo
xchg
mov
test
push
in
pop
ret
lret
xlat
push
mov
cmc
cmp
push
cmp
add
mov
ficoms
les
and
daa
arpl
les
into
cmp
or
cmpsl
mov
dec
fnsave
mov
je
xor
cmp
leave
leave
or
aam
pop
cmp
cs
fmulp
mov
sub
add
xor
idivb
dec
in
test
or
cmc
ljmp
xchg
outsl
inc
repnz
push
enter
loope
cltd
add
lea
jle
std
and
icebp
inc
paddusw
add
push
xlat
bound
in
sub
cs
cmp
or
pop
mov
insl
add
or
and
pop
outsb
xor
cmp
es
push
sti
fwait
ret
sub
test
or
scas
pop
mov
push
add
mov
das
pop
bnd
imul
xchg
inc
sbbl
or
xchg
pop
lock
pavgw
pop
push
fildll
and
aad
xor
sub
mov
push
enter
cmp
jae
aad
and
in
aad
sub
ffree
adc
mov
fsubr
cmp
or
ficoms
lret
mov
sar
leave
out
in
call
gs
inc
xchg
orl
xor
or
sub
pop
subl
das
add
repz
stos
js
add
loopne
pushf
jp
or
lret
and
push
not
add
push
dec
xchg
xor
loopne
sub
rolw
pop
in
rcll
je
mov
jae
cmp
sbb
jl
mov
sub
jg
xlat
mov
adc
add
mov
sub
ljmp
cmpsl
data16
loop
mov
stos
pop
loope
inc
jne
adc
inc
mov
cwtl
stos
mov
fstpl
stos
xchg
lcall
in
and
mov
in
dec
into
fwait
push
and
lcall
repnz
lock
mov
loope
xchg
ljmp
fisubs
jae
fstps
or
mov
notb
mov
dec
mov
push
lock
jns
and
lods
fldl
iret
cmp
xor
int
mov
xor
mov
pop
shll
pop
into
insb
inc
pop
and
or
pop
mov
mov
clc
inc
repz
cmp
jge
lds
leave
mov
pop
jns
push
xor
ret
hlt
pusha
xor
enter
dec
xor
xchg
cld
dec
shrl
loopne,pn
adc
adc
adc
mov
sbb
jne
sbb
aam
lods
out
lock
jecxz
or
addl
or
loope
sbb
hlt
adc
jecxz
pop
pop
sbb
orb
mov
inc
in
or
add
push
gs
out
jmp
jecxz
cmp
ret
jne
fimull
sarl
pop
les
push
cmpsb
xchg
lds
mov
mov
xchg
flds
daa
push
jle
cmpsb
mov
or
push
scas
lds
add
aam
dec
dec
fwait
push
addr16
xor
sar
or
and
xchg
push
pop
cwtl
repz
imul
jno
lods
jbe
or
push
out
cld
lret
icebp
jp
push
push
shl
out
and
lock
sub
inc
mov
rcr
or
jmp
es
ja
mov
cltd
lds
xchg
bound
mov
mov
xchg
es
push
sbb
subb
add
test
bound
das
das
out
xor
inc
jl
add
jae
sbb
and
cwtl
mov
adc
cmp
jecxz
in
cmp
push
loop
bound
test
push
mov
pop
cmp
xchg
test
jl
sbb
js
push
in
loopne
mov
jge
addr16
add
and
push
imul
andb
jo
mov
mov
xchg
add
and
mov
stc
cmc
les
lods
pop
arpl
adc
pop
jnp
mov
mov
fisttpl
sti
push
rclb
add
push
add
xchg
aad
out
mov
out
leave
jmp
add
mov
sbb
mov
cmp
cmp
std
inc
out
mov
repz
or
sbbb
repnz
out
jmp
jae
rorb
sbb
jl
mov
mov
xor
sub
add
adcb
xchg
pop
dec
push
mov
xlat
push
xchg
mov
clc
sbb
subb
cmp
cmp
jnp
clc
andb
mov
and
orb
cmp
push
xor
call
addr16
or
mov
add
xor
mov
push
lcall
jg
push
jnp
dec
insl
inc
add
lret
cwtl
repz
inc
sub
ret
fisttpll
rcrb
push
cmp
fstl
inc
jl
add
fnstcw
jb
pop
iret
mov
adc
inc
or
pop
or
lret
xchg
das
add
ja
xchg
cmp
arpl
push
test
add
scas
es
jb
xchg
sbb
mov
lds
outsl
addl
lcall
xlat
pop
scas
popf
and
and
mov
cwtl
repz
push
arpl
shll
adc
pop
inc
sbb
push
insb
loope
add
dec
dec
stc
test
mov
in
outsb
xchg
imul
inc
push
cmp
rcrl
xchg
loopne
inc
dec
and
jb
cmp
cltd
in
pop
xchg
dec
leave
jbe
cs
inc
sahf
push
inc
shrl
out
or
push
jle
cmp
ret
xchg
xor
mov
ss
popa
daa
loop
mov
cmp
xor
xchg
repz
xor
fbld
incl
aas
pushf
into
xor
fidivrl
pop
mov
mov
shll
add
ljmp
out
adc
imul
or
mov
mov
inc
push
inc
mov
fwait
enter
or
rcrb
pop
addr16
mov
adc
unpckhps
das
jmp
icebp
sub
cmpsl
fwait
inc
sbb
mov
adc
adc
push
mov
sti
add
cmp
push
xchg
cli
repz
add
pusha
add
sub
mov
jae
gs
dec
mov
dec
iret
mov
jge
ljmp
sbb
movsb
in
inc
aaa
adc
sbb
sub
mov
stos
xchg
push
mov
push
push
sarb
xchg
fisttpll
int3
push
add
mov
sbb
leave
xchg
imul
lahf
push
add
ficompl
xchg
jecxz
sbb
lods
sub
mov
cmpsb
std
rorl
push
les
pop
mov
jge
ret
inc
and
mov
sub
add
jge
inc
pop
add
add
loop
mov
and
in
lods
nop
xchg
jg
stos
notl
push
jle
xchg
sub
mov
gs
fisubs
cld
aam
jb
fistpll
add
pop
pop
test
mov
repz
sbb
dec
mov
adcl
pop
out
mov
mov
bnd
and
xlat
mov
imull
outsl
mov
add
xchg
insl
iret
loope
push
or
pop
xchg
bound
hlt
and
pushf
sti
ret
pop
pop
sbb
lcall
and
sub
in
mov
cmp
and
ja
adc
jmp
lcall
out
stos
jo
scas
jae
ror
lods
orl
ret
lea
es
mov
jecxz
sahf
add
adc
leave
push
call
enter
pop
xchg
mov
xchg
fcmovbe
cmp
and
stos
xlat
adc
mov
repz
mov
xchg
popf
ljmp
enter
inc
pop
scas
sub
cmpsl
pop
mov
ja
xchg
cltd
scas
movsl
cmpsb
aaa
mov
push
push
or
call
inc
sbb
sub
cltd
push
xor
xchg
pop
cmp
xchg
movsb
nop
inc
push
mov
jno
ja
jno
lods
vpshufhw
push
mov
or
cli
lea
rcrl
out
flds
lret
aad
mov
push
ds
sbb
mov
xchg
mov
jmp
xor
add
inc
pop
and
icebp
xchg
cmpsl
sbb
in
repnz
fwait
mov
push
loop
mov
mov
pop
jmpw
xor
pop
pop
fnop
push
dec
dec
jl
inc
xor
idiv
dec
aam
shll
sub
jbe
test
call
mov
negl
sbb
inc
push
cli
rorl
in
stos
mov
jbe
addl
add
movsb
xchg
pop
mov
inc
xor
fld1
flds
shlb
pop
add
sbb
jmp
pusha
jp
xchg
push
cmp
leave
inc
aaa
into
adc
xchg
xchg
lret
inc
repnz
add
lahf
jb
data16
pop
data16
rcll
xchg
ja
adc
push
repz
xor
fnsave
add
and
mov
push
and
into
cli
clc
fldcw
inc
sub
fsts
pop
das
lods
rorb
jg
insl
cmp
test
sbb
hlt
cmp
inc
scas
scas
ret
es
sti
sti
mov
pushf
sub
inc
jmp
jmp
push
ffree
fsubrp
lret
mov
sub
clc
out
test
xchg
cmpsl
cmp
or
into
movsl
arpl
and
and
sub
cmp
insl
mov
ret
hlt
icebp
cmp
lahf
in
subl
je
roll
in
and
lret
fisubs
popa
mov
push
cmp
jb
dec
nop
add
adc
mov
cmp
hlt
into
inc
mov
adc
dec
je
or
push
iret
or
div
sub
xlat
test
add
jmp
jg
add
cwtl
sub
in
jbe
push
addl
scas
into
pop
and
std
adc
sti
xchg
ret
rcl
dec
sahf
leave
es
and
push
dec
lahf
dec
xchg
sub
in
mov
es
sbb
sub
notb
inc
mov
inc
cmp
sbb
in
or
andb
lock
cli
push
into
pusha
sub
dec
dec
scas
je
call
jbe
mov
fsts
es
xchg
addb
decl
xchg
sahf
or
out
lahf
cld
adc
cmp
movsb
jp
stos
sbb
or
pop
sets
adc
out
pushf
jl
test
ljmp
or
lds
add
jmp
jecxz
and
sub
mov
inc
lret
and
and
dec
sahf
or
dec
rcrb
insb
inc
ffree
push
lds
scas
xor
or
jecxz
loopne
test
in
lret
sbb
dec
mov
les
icebp
inc
push
inc
xor
test
shlb
insl
lcall
mov
push
jnp
jge
fiaddl
sub
je
cmp
xchg
mov
mov
fwait
and
mov
adc
adc
insl
lret
jmp
or
imul
or
icebp
mov
dec
xor
lods
sub
sar
insl
mov
pop
in
sti
sub
dec
jbe
mov
sti
inc
loope
inc
mov
pop
mov
lcall
out
xchg
rorb
dec
leave
push
test
clc
mov
movsl
or
sbb
adcl
add
in
xor
add
mov
inc
sti
scas
and
mov
mov
inc
mov
jecxz
sub
dec
dec
and
mov
icebp
ljmp
stos
rclb
out
pop
loope
stc
dec
repz
out
rclb
mov
dec
xchg
sbbb
icebp
jo
imul
mov
test
movsb
fdivs
addr16
stos
or
out
xchg
push
mov
mov
outsb
sub
cmc
and
int3
sub
repnz
repnz
mov
add
jge
or
mov
lock
orl
add
xchg
outsl
and
mov
or
dec
push
or
add
idivl
inc
ljmp
out
outsb
sbb
jecxz
dec
pop
dec
xor
fsubs
mov
pop
ret
jne
test
adc
push
test
and
jecxz
dec
sahf
into
inc
data16
cwtl
cld
cmp
cmpsb
cwtl
jo
push
insb
mov
cmc
jge
sbb
cmpb
pop
dec
cmpsl
leave
sbb
lods
jb
inc
push
xchg
dec
jp
mov
fsts
sub
fcomps
ret
and
in
mov
add
stos
leave
mov
xchg
inc
pop
push
je
out
sbb
clc
aad
test
sub
clc
add
add
or
inc
mov
loopne
dec
xchg
ret
dec
out
mov
mov
dec
xchg
mov
mov
mov
sub
aas
sti
std
xor
push
mov
sub
sahf
adc
stos
test
xor
push
pop
and
mov
pop
test
or
xchg
mov
testb
inc
scas
xor
aas
stc
into
movsb
enter
ja
into
test
mov
push
vhaddpd
fstps
fsub
xchg
mov
je
mov
add
mov
and
or
hlt
orl
out
dec
sub
or
hlt
test
jne
xchg
inc
xor
and
gs
mov
pop
movsb
cmp
and
and
outsl
mov
dec
les
jge
pop
pop
ss
sarb
mov
mov
mov
add
jle
dec
lret
fadds
inc
pop
test
movsl
xchg
cmp
xlat
cmp
stos
jge
imul
or
sub
nop
insb
cmp
dec
push
imul
xchg
imull
scas
dec
repnz
int
sahf
lss
sbb
push
pop
adcb
lcall
jg
add
cmp
mov
subl
inc
xor
pushf
inc
into
lahf
xor
dec
mov
mov
and
pop
dec
cmp
movsl
mov
into
and
popf
fldenv
sbb
sarl
pop
cmp
lock
out
add
xor
xor
mov
add
movsl
loopne
rorl
aas
add
fsubl
push
faddl
xlat
xchg
fistps
out
mov
aas
mov
enter
xchg
fadd
inc
mov
sar
orl
sub
das
cld
mov
mov
mov
gs
mov
sub
push
adc
dec
xor
jp
sbb
imul
vmread
es
mov
movsb
inc
jbe
inc
fadd
and
aam
and
push
and
push
lahf
int
sbbb
mov
xchg
dec
jb
push
mov
fwait
mov
cwtl
rorb
aas
pushf
ss
jmp
add
push
cmp
out
dec
int
xor
jo
push
mov
lock
cmc
add
jge
add
dec
push
or
scas
xchg
in
cmp
cli
andl
mov
mov
cmp
test
mov
pop
jp
test
pop
jo
stos
clc
or
xchg
mov
into
mov
add
add
sbb
ds
cltd
push
lcall
cmpsl
pop
add
sbb
xor
sbb
sub
pop
push
loope
pushf
dec
aas
xchg
xor
adcl
jmp
adc
sarb
sub
int3
jb
sbb
lea
jge
mov
add
adc
dec
jbe
ljmp
or
js
xchg
dec
int3
add
cmp
data16
scas
cwtl
mov
scas
outsb
lea
cwtl
rcrl
xchg
xchg
out
pop
sahf
mov
fsubs
mov
fdivs
sbbl
call
sti
dec
pop
cmpsl
sub
imul
cmp
jmp
or
loopne
pop
adc
xor
lret
adc
inc
stos
dec
mov
call
fimuls
add
into
sahf
outsl
fldcw
lds
hlt
and
xchg
add
aam
adc
jo
shl
pop
ja
test
int3
add
xor
mov
enter
std
je
bound
test
adc
push
mov
lcall
in
loop
sarl
pop
scas
bound
movsl
xchg
or
inc
inc
leave
or
push
push
imul
push
lret
ret
mov
push
xchg
daa
insb
sbb
jne
and
lret
andb
in
mov
arpl
xchg
cmc
nop
or
mov
js
fnstenv
jb
or
lods
cld
sbbb
ficoms
adc
adc
out
je
xor
fidivl
testb
sbb
pop
fidivs
and
pop
stos
mov
dec
pop
inc
subl
mov
push
pop
adc
xchg
call
das
repz
mov
adc
es
idivb
or
jnp
or
push
push
scas
jg
jnp
pop
dec
mov
imul
repz
loop
push
fcomi
inc
xchg
cwtl
cmp
sub
adcl
call
pop
loope
in
mov
mov
push
nop
and
je
nop
push
ja
or
jnp
pop
ja
cs
mov
and
add
push
mov
or
xchg
fistps
sti
jmp
dec
fstps
dec
jmp
mov
add
out
mov
orl
jle
mov
xchg
sbb
loope
mov
or
jbe
aas
xor
cmpsb
das
xchg
and
shl
fcmovnu
sub
aad
call
xchg
xchg
rclb
imul
cmp
push
sub
fldcw
mov
aad
mov
les
cmp
in
shlb
iret
push
push
daa
cmpsl
add
pop
jb
sub
xlat
sub
bound
ret
adc
lcall
inc
push
lds
ds
sub
xor
sti
xchg
jp
or
lods
pushw
dec
sbb
mov
sbb
adc
jo
ja
pop
orb
and
imul
icebp
fisubs
cmp
imul
jns
outsl
or
mov
clc
push
loopne
pushl
scas
rcl
sub
cld
jno
xor
or
pushf
gs
mov
fdivrp
mov
insb
mov
ja
fstl
and
pushf
dec
jle
shlb
mov
mov
push
cltd
inc
xor
js
push
adc
movsl
adc
sbb
sbb
es
cmp
subl
sbb
ljmp
cld
loope
mov
jno
outsb
test
test
loop
aam
jnp
scas
push
adc
cmp
dec
ss
add
inc
sub
add
sbbl
mov
mov
jnp
cmp
test
pushf
scas
pop
or
add
gs
or
cmp
js
add
mov
and
in
and
xchg
in
outsl
int
inc
inc
cltd
mov
mov
xchg
add
xchg
dec
loopne
cltd
cld
inc
mov
xchg
jmp
fcoms
cmpsb
fisubl
lods
mov
push
adc
mov
popl
into
cmp
xchg
jg
push
fistpl
inc
pop
jb
push
jae
mov
pop
mov
lods
inc
xchg
adc
jg
fwait
imul
insb
ret
cmp
sub
mov
fdivrs
cli
lahf
gs
add
adc
sbb
movsb
in
push
jnp
and
sub
inc
xor
insl
sbb
mov
xchg
mov
repnz
js
shrl
bound
jnp
outsb
xor
cmp
inc
or
mov
mov
testb
add
cmp
mov
mov
mov
xchg
and
les
outsl
rcrb
lods
sub
inc
mov
loop
or
std
xor
cltd
mov
popf
xchg
das
mov
sub
xchg
aad
sbb
add
outsl
lret
push
stc
test
mov
xor
push
rorb
iret
mov
cmpsb
test
es
sahf
mov
mov
test
xchg
jnp
int
jno
orl
cli
cmp
cli
mov
xor
jmp
push
dec
dec
jmp
inc
movsb
unpcklps
add
ret
sti
sbb
dec
sahf
adc
ss
dec
jns
nop
fisubrl
scas
xor
das
lcall
insb
jp
mov
fdivs
cmpsb
push
push
and
ret
lds
jb
call
test
or
ret
push
or
movsl
cli
dec
add
inc
fsub
std
arpl
repnz
into
movsb
pusha
mov
loopne
pop
mov
ljmp
in
inc
jb
mov
push
pop
out
repnz
inc
sub
ficomps
pop
subl
jbe
mov
clc
dec
lea
in
push
jg
fistpll
fldenv
aas
add
jmp
jg
cld
mov
add
cmp
jo
xchg
call
jge
jnp
cs
adc
inc
pop
jle
sbb
ja
test
repnz
orb
fcomps
sbb
cs
nop
stos
sbb
add
jp
sahf
out
int
sbbb
sbb
and
pop
ret
adc
pop
ljmp
adc
lea
das
aam
test
adc
inc
dec
fisttpll
push
lret
pusha
xchg
xchg
popa
icebp
sbb
loope
and
push
pop
cmp
sub
dec
xchg
rclb
test
mov
mov
push
test
pop
cmp
cld
psllw
lret
adc
imul
push
dec
jnp
mov
cmovs
dec
push
js
cmp
pushf
inc
sti
js
in
xchg
mov
int3
popf
mov
xchg
cmp
insl
add
pop
sub
push
js
fldcw
mov
mov
loopne
testb
shlb
jmp
nop
mov
das
es
inc
mov
inc
ljmp
in
out
push
dec
xor
dec
jae
xor
je
jp
or
scas
cmc
cmpl
or
setne
cmc
or
pop
jae
xchg
jmp
repnz
cltd
push
movsl
lods
std
enter
mulb
jl
pop
jo
inc
sbb
int3
hlt
clc
stos
dec
outsb
clc
pushf
out
js
enter
mov
adc
outsb
out
xor
sub
cwtl
test
and
int
imul
and
jg
push
mov
sbb
icebp
aas
inc
jp
inc
jae
push
leave
xor
test
cmp
addr16
mov
mov
call
pop
pushf
jmp
inc
push
testb
mov
out
xchg
xchg
adc
rcrl
add
jecxz
and
pop
push
or
cs
mov
xor
clc
xchg
and
xor
incl
pop
sbb
insb
out
or
mov
int3
inc
mov
sti
xchg
and
xor
sbb
ss
outsl
pop
inc
insb
dec
jmp
loope
fldt
pusha
mov
loope
cmp
sbb
push
sbb
sub
nop
mov
mov
scas
jns
fsts
jecxz
into
sbb
mov
ds
test
sbb
gs
push
ja
jecxz
mov
repz
lcall
outsb
mov
enter
shrb
xor
jg
add
stc
xchg
jno
ss
add
push
lods
mov
pop
sub
dec
lcall
jno
call
cmp
cmc
sub
insb
add
cmpsl
mov
inc
pop
sarl
test
cmc
cmpsw
pop
sbb
fimuls
cld
pop
lcall
mov
mov
sbb
xchg
jo
sub
testb
inc
xchg
mov
fimuls
mov
cmp
dec
rclb
scas
movsb
jge
out
and
jg
push
inc
js
jnp
fcomps
mov
adc
adc
or
adc
inc
gs
lods
ljmp
push
mov
dec
popf
sub
mov
bound
test
je
outsb
mov
xchg
mov
dec
out
test
iret
pop
cwtl
sets
jno
push
push
mov
cmp
jb
cmc
push
cmp
ret
jae
mov
loope
nop
inc
inc
movl
jle
mov
daa
cmp
inc
lar
jbe
sbb
push
aad
insl
mov
pop
loope
pop
and
loop
xchg
jnp
mov
imul
movsb
jb
mov
popa
pushw
outsl
xor
adc
add
fs
push
iret
pop
dec
shl
xchg
inc
lret
insl
mov
rorl
arpl
or
cmc
jb
ds
inc
inc
pop
mov
mov
call
out
push
or
inc
mov
ret
push
add
ret
and
sbb
movsbl
mov
adc
or
js
shl
lcall
pusha
add
xchg
scas
scas
stos
xchg
xchg
mov
xchg
jns
repnz
xor
pop
jmp
dec
and
fs
cwtl
fs
test
mov
dec
mov
and
jl
out
test
sbb
pop
dec
neg
inc
out
ficomps
dec
dec
lret
mov
fidivl
cmpsb
mov
xor
inc
jbe
and
pop
mov
data16
push
jp
aaa
pushf
mov
es
xor
add
icebp
adc
inc
push
addr16
sbb
cmpsl
cmp
repz
push
dec
cmc
addr16
cmc
insl
mov
sub
mov
sub
and
mov
inc
pop
add
adc
xchg
ret
adc
inc
mov
stc
dec
jp
inc
out
fsubs
sub
push
pusha
bnd
lods
jmp
xchg
lcall
jno
push
cwtl
xor
pushf
cmpsb
xorb
xlat
lds
mov
roll
lea
adc
push
insb
popf
lcall
test
add
cmp
or
popf
or
arpl
shl
adc
das
jmp
cs
js
push
mov
dec
test
xchg
cmp
lock
add
imul
je
inc
pop
inc
dec
xlat
jmp
mov
into
add
stos
xchg
int3
clc
jle
or
pusha
les
movsb
dec
mov
ret
stos
repnz
inc
int
or
icebp
dec
mov
fsubs
addr16
scas
dec
xchg
or
xchg
and
pop
hlt
sbb
push
aad
add
mov
dec
mov
std
push
repnz
out
xchg
xor
dec
lret
xor
cmpsb
aas
cmp
jnp
or
popf
jl
sbb
or
add
arpl
int3
leave
inc
dec
sub
call
and
mov
mov
aam
push
and
xor
ficompl
inc
push
test
dec
les
les
jo
push
les
mov
push
jecxz
lods
pop
insl
fimuls
jbe
test
or
out
decb
out
push
arpl
les
fwait
cmpb
bound
mov
jg
call
fcoms
call
les
jp
mov
jge
push
xlat
inc
aas
xchg
push
inc
test
mov
lock
rcrb
fwait
imul
jbe
push
fdivl
xchg
add
pop
scas
cmp
xchg
xor
inc
push
test
lods
push
faddl
inc
and
gs
je
push
das
add
xchg
scas
aad
daa
stc
or
in
mov
pop
adc
push
call
flds
mov
stc
lret
sub
push
fimull
mov
mov
test
shlb
inc
jns
sbb
test
xor
dec
jae
fisttpll
xchg
fwait
scas
mov
adcb
cmp
pop
mov
xchg
imul
sbb
mov
push
gs
inc
dec
data16
mov
adc
mov
dec
ljmp
inc
jae
adc
push
jae
andl
leave
in
cli
push
clc
and
xchg
inc
inc
xor
jne
mov
stc
xchg
aad
in
ds
lods
adc
out
jmp
add
stos
loopne
pop
and
mov
mov
jo
decl
rcll
or
jge
out
lret
imull
lret
mov
fsubl
aas
cld
in
push
mov
inc
xlat
shr
cmp
xor
test
inc
js
push
lds
push
or
jns
mov
stc
or
pop
test
mov
xchg
xor
aas
outsb
adc
mov
lahf
mov
and
mov
add
subl
cmp
mov
cmovae
xchg
loope
int3
or
adc
ss
or
aaa
js
aad
je
sub
sbb
dec
loop
dec
popa
xchg
mov
mov
push
push
xchg
inc
sub
xor
cmp
in
ja
sbb
xchg
mov
or
xchg
enter
mov
lret
notb
das
add
outsb
mov
icebp
cltd
test
hlt
in
mov
aam
xor
fidivrl
aam
fwait
push
cld
lods
enter
inc
negb
mov
lods
xor
and
jno
into
std
dec
jnp
out
or
inc
popl
testl
push
inc
jecxz
ja
adc
fldcw
lods
sbb
leave
mov
xchg
sbb
dec
inc
into
cmp
jo
xchg
fsubrs
fadds
push
jb
add
rcll
dec
dec
popa
imul
pop
out
int3
push
fstpt
cmp
mov
or
aas
pop
ds
stos
jne
dec
aam
dec
into
je
xchg
and
pop
je
imul
xchg
stos
leave
and
add
pop
popa
jno
test
jle
iret
dec
imul
test
mov
push
imul
jle
ds
jae
mov
out
sti
xchg
fs
push
scas
icebp
jo
clc
jle
jne
ja
jo
pop
aaa
movsl
test
pop
mov
push
add
arpl
inc
jecxz
xchg
clc
aas
nop
mov
cmpb
push
sbb
adc
and
mov
sahf
lcall
xor
xchg
enter
in
imul
adc
xor
scas
dec
fwait
icebp
pop
mov
mov
xor
add
push
in
shr
lds
ret
xor
sbb
roll
fadd
jae
mov
lds
lods
sub
fwait
outsb
outsb
icebp
adc
stc
sub
loope
lea
jno
mov
dec
sbb
mov
sbb
jnp
xor
in
test
xlat
je
pusha
mov
lcall
sti
xchg
outsb
mov
mov
mov
mov
in
nop
je
xor
mov
xchg
adc
sti
aad
leave
lea
pop
mov
xchg
cmp
repnz
and
stc
pop
xor
ja
xor
jle
shlb
cmc
add
sti
lock
test
cmpsl
bound
pushf
jmp
cmpsb
arpl
sbb
xor
pop
lcall
push
xorl
and
pop
lret
fcomps
insb
daa
dec
dec
mov
pop
jbe
jae
xchg
cli
je
loop
inc
pop
loope
in
inc
dec
faddl
sbbb
jae
jmp
je
popf
jae
xchg
inc
ja
lret
stc
int3
jo
dec
or
sti
push
push
outsl
cmpsb
cmp
mov
into
hlt
adc
insb
shr
pop
xchg
cmc
mov
mov
fidivs
push
stos
push
pop
dec
setbe
cli
ss
inc
data16
pop
sbbb
bound
in
cmpsl
xlat
rcr
arpl
test
jle
aaa
out
xor
xor
mov
add
fwait
test
pop
jne
lods
and
mov
sbb
fidivrs
jbe
cmc
cld
scas
shlb
popf
insb
mov
push
jmp
js
jb
xor
cs
sub
in
mov
leave
popl
imul
stc
sbb
and
iret
mov
dec
inc
adc
roll
push
dec
push
mov
jmp
xor
cltd
push
mov
std
mov
cli
push
iret
push
pop
rorl
out
test
addb
pop
into
mov
ret
and
push
cmp
fisttpl
rolb
insb
dec
xchg
cld
and
test
xor
cwtl
sub
add
mov
xchg
cmp
inc
pop
pop
mov
sub
dec
popa
pop
and
testl
in
xchg
scas
adc
xor
fdivp
std
and
insb
in
mov
sub
adc
xchg
frstor
push
mov
cmp
gs
andb
mov
inc
ret
out
adc
or
and
and
mov
or
adc
sbb
push
ljmp
fs
jp
flds
jne
dec
inc
inc
loopne
sbb
outsb
js
or
push
les
dec
pop
aad
ds
pop
xchg
dec
jns
mov
cmp
addr16
je
das
scas
mov
addr16
pusha
adc
inc
aad
aas
aad
cmpsl
pop
pop
lret
mov
mov
in
inc
xor
cli
repnz
and
sub
dec
leave
bound
cmp
pop
arpl
mov
jnp
cmp
andl
adc
fstps
push
outsb
ss
adc
loope
jae
shrl
rcl
jmp
or
sahf
fmul
dec
jb
jnp
sub
xor
sbb
icebp
mov
int
or
outsl
mov
xchg
adc
out
stos
rol
aam
dec
lret
call
cmpsl
mov
lock
mov
imulb
jne
dec
adcb
push
das
inc
and
jbe
mov
push
and
lret
out
call
out
addr16
ja
clc
mov
pop
fcomps
lds
cmp
lods
js
pop
sahf
cli
jnp
pop
jecxz
pop
sub
subl
mov
frstor
fwait
movsl
mov
inc
popa
mov
mov
hlt
pop
fwait
inc
loop
dec
cmp
hlt
imul
pushf
stos
dec
das
ficompl
movsb
in
mov
lea
ds
mov
cmp
je
imul
mov
pop
or
xchg
inc
dec
nop
mov
cli
and
outsw
mov
jnp
and
xchg
outsl
jae
xor
mov
cmp
xor
rcrl
sti
mov
divb
push
lret
mov
mov
fisubl
and
in
sbb
test
lcall
sub
jl
cmp
call
mov
and
into
cmp
clc
mov
scas
xchg
push
mov
pop
or
xchg
cmp
cmp
ret
xchg
and
shlb
pop
dec
popf
mov
cmp
lahf
mov
lar
stos
jl
stc
pop
adc
fiadds
dec
add
rcrb
ret
push
negb
int3
lds
sub
pop
mov
cli
icebp
ljmp
pop
adc
pop
xchg
mov
jge
jmp
add
ret
mov
cmp
xor
daa
repnz
sub
fdivr
sbb
sub
push
mov
xlat
jle
and
cs
add
lahf
cmp
pop
or
psadbw
add
fimuls
outsl
les
rorb
cltd
test
fistpll
inc
mov
xor
jge,pt
sbb
inc
movsl
and
repz
pop
mov
shlb
xchg
movsl
xchg
test
add
movsl
fists
pop
mov
mov
mov
xchg
shl
lret
enter
in
push
sub
sub
xlat
out
lret
sub
cmc
in
ds
ret
jo
lods
fs
or
or
stc
push
and
aad
jg
dec
movsb
leave
rclb
rorl
dec
cmpsb
repnz
movsb
fisubs
ficomps
hlt
push
push
mov
cli
lds
movsb
mov
stos
or
mov
jns
sbb
add
push
adc
jno
movsl
fcomi
ljmp
lahf
lcall
ljmp
sti
dec
scas
xchg
push
imul
test
sbb
inc
fisubl
loopne
push
jne
mov
in
xlat
sub
lret
inc
shlb
xor
add
arpl
mov
adc
jmp
into
push
adc
outsb
or
scas
arpl
out
int
je
push
mov
fstpl
lahf
xor
pop
cs
add
test
icebp
enter
sub
pop
sti
pop
mov
add
maskmovq
notl
add
loopne
pop
pop
in
or
adc
bound
add
into
xchg
sub
jbe
aaa
mov
les
lcall
movsb
subb
stos
add
sub
lods
std
push
add
jne
bnd
pusha
pop
stc
mov
sahf
sti
mov
push
out
mov
fsubrl
popf
sbb
cmpsb
mov
js
aam
cs
pop
fucomip
push
orb
dec
mov
pop
add
xchg
mov
mov
jbe
or
mov
stc
cmp
int3
push
sub
arpl
lret
adcl
mov
or
fmuls
loop
cltd
mov
mov
sbb
in
btc
add
scas
pop
div
xlat
bnd
sbb
fdiv
mov
fstpt
push
mov
mov
adc
sar
cmovns
movl
mov
inc
mov
aam
jne
scas
movsl
pop
cmp
pop
push
mov
xor
pop
js
adc
or
mov
cltd
and
pop
shl
pop
popa
adc
hlt
adc
insb
stc
inc
int
rcll
js
ljmp
icebp
lcall
daa
mov
outsb
leave
mov
and
push
scas
dec
clc
push
push
shlb
xchg
and
and
loop
clc
data16
mov
aas
jl
push
mov
mov
outsb
cmpsl
shl
frstor
shlb
int
mov
ret
cmp
xor
push
mov
inc
stos
mov
cltd
mov
sub
and
xor
cmp
cld
mov
scas
inc
cltd
jns
jo
dec
testl
cmp
mov
add
cmc
jle
mov
jns
adc
stc
cmpsl
jne
outsl
pusha
ljmp
cwtl
shll
xchg
jge
fdiv
and
mov
scas
push
enter
jmp
int
or
xchg
jp
mov
cmp
mov
xchg
cmpsb
push
addb
push
lods
jecxz
push
adc
cmpsl
jnp
int
dec
sbb
dec
add
dec
test
fnstsw
pop
fidivl
loope,pt
sbb
nop
pop
pop
mov
call
push
sub
xchg
push
jne
xorl
insb
xchg
dec
push
fcmovnbe
xor
mov
popa
and
jno
sbb
lret
sbb
imul
xchg
mov
push
push
imul
push
pop
movsl
sub
cmp
xchg
ja
jmp
mov
xor
xor
test
and
in
lods
roll
jbe
inc
call
outsb
pop
xor
mov
or
jg
push
xchg
dec
inc
pusha
push
cwtl
push
jb
push
mov
push
mov
cld
pop
add
cltd
sub
xor
sbb
mull
dec
ljmp
shrb
faddp
lds
fsubs
xchg
dec
andb
dec
lret
jno
pop
jo
mov
and
fstpt
jae
nop
lret
int3
xor
fadd
cld
mov
pushf
test
dec
xchg
and
repz
mov
dec
gs
fnsave
popf
out
jge
add
sub
adc
xchg
jne
push
aam
cwtl
jno
sbb
retw
add
jg
les
test
cmp
mov
inc
lea
insb
add
inc
mov
fmull
js
sti
ljmp
push
dec
sub
sub
jnp
adc
mov
aam
in
imul
stos
push
dec
popf
adc
mov
and
sub
and
mov
mov
cmp
pop
outsl
test
outsl
ss
mov
inc
fwait
sti
mov
mov
dec
push
popa
or
mov
xor
xorl
adc
xchg
scas
mov
imul
flds
add
pop
mov
cld
nop
mov
sub
loopne
aam
cld
ror
and
in
jge
and
xor
aas
xchg
inc
ds
pop
lret
in
fs
push
dec
or
sti
mull
pop
and
fwait
lods
mov
xor
cmp
xchg
cmp
aaa
stc
sub
and
xchg
and
dec
ret
xchg
jge
push
push
inc
int
xor
adc
pop
xchg
push
xchg
mov
mov
lock
xor
pop
xor
mov
jmp
pop
imul
stos
pop
xorb
cmp
add
or
xor
repz
mov
add
push
cs
cmp
xor
andb
repnz
mov
pop
iret
mov
add
mov
jmp
sub
cwtl
call
movsb
mov
xchg
sbb
icebp
sbb
insb
mov
adc
and
pusha
adc
ja
and
xor
stos
fwait
xchg
add
scas
adc
insb
add
scas
push
or
push
ja
pop
and
or
pop
movsl
insl
enter
test
jnp
sbb
adc
pusha
testb
in
xor
add
enter
or
dec
jg
add
gs
in
stos
dec
cmp
in
sbb
mov
sub
inc
shlb
adc
xor
cld
push
or
xchg
inc
std
pop
movsw
call
dec
adc
dec
es
std
lods
data16
pusha
push
movhps
rol
cmp
mov
in
dec
loopne
push
cmp
lahf
int
dec
iret
clc
and
int
mulb
in
jns
xorb
mov
aas
jbe
mov
adc
sub
mov
and
std
das
push
jecxz
repz
cmc
push
adc
push
insl
or
clc
xlat
out
out
pop
mov
daa
out
xlat
mov
bound
into
movsl
insb
ja
fstpl
iret
jne
frstor
pop
push
xor
stc
cmc
iret
cmpsl
rorl
add
lcall
popa
and
adc
fildll
mov
faddp
enter
int
lret
lret
out
mov
cltd
outsl
push
ret
or
aad
out
jno
adc
popa
xor
sub
lret
pop
or
sbb
cwtl
jge
lock
enter
je
notb
jmp
xchg
data16
jmp
or
lods
sub
push
pop
nop
inc
lods
ja
dec
ret
mov
or
xchg
lods
push
mov
push
mov
imul
jg
pop
cmpsb
in
xorb
push
int3
sbb
jp
daa
dec
daa
stos
dec
push
jno
mov
push
mov
lock
jecxz
dec
or
push
es
arpl
xchg
scas
mov
leave
in
icebp
jp
gs
iret
ds
stos
insl
adc
cmpsl
push
shll
movsb
cmp
push
lret
aam
xchg
mov
pop
cmp
rorb
ret
fmull
enter
and
gs
imul
call
push
lret
lock
test
out
enter
outsl
repz
or
outsb
out
mov
movsl
out
sbb
xchg
sbb
and
mov
orb
jnp
xor
and
cmpsb
iret
push
js
aaa
mov
call
sub
outsl
jns
mov
mov
cmp
dec
mov
inc
int
fnstsw
popa
rcl
cld
out
outsl
cmp
dec
aaa
test
fsubrl
xchg
and
mov
push
js
les
pop
stc
into
mov
push
das
mov
pushf
aad
fidivl
sbb
xor
dec
cmp
jmp
adc
adc
jne
mov
cmp
jno
dec
test
cs
lret
loop
mov
aad
xchg
mov
fildll
popf
jnp
das
cmp
push
inc
gs
cli
add
mov
cwtl
js
adc
push
and
sti
push
push
lahf
and
std
mov
adc
mov
hlt
fnsave
adc
xchg
cwtl
sub
mov
or
xchg
sbb
push
mov
arpl
adc
cld
out
lods
push
cmp
or
inc
push
cmp
sbb
and
jmp
out
inc
pop
inc
and
enter
imul
leave
fimull
sbb
cld
jae
jge
iretw
mov
sub
es
sbb
mov
int3
dec
sbb
pop
lea
mov
in
outsl
xchg
pop
dec
cmc
mov
pop
out
ret
and
push
test
hlt
enter
les
in
mov
inc
stc
push
and
xchg
push
scas
dec
sti
imul
pop
mov
mov
ljmp
lods
cs
jbe
lcall
xchg
imul
inc
xor
xchg
loop
popl
xchg
push
mov
cmpsb
imul
popa
inc
mov
sub
ret
jbe
xor
mov
jmp
sub
cmp
bound
imul
sti
pop
pop
sub
mov
jno
push
sub
fdivs
cltd
pop
push
lea
push
cmc
xor
aad
dec
cmp
cwtl
std
es
cmp
aam
sub
or
cmp
cmpsl
and
imul
in
xchg
xchg
and
adc
jbe
push
ja
xchg
int
adc
sbb
mov
js,pn
in
fstps
mov
scas
data16
or
jecxz
adc
pop
out
cmp
lock
add
outsl
popa
pop
adc
pop
inc
jl
sbb
hlt
add
or
inc
jmp
andl
lret
mov
adc
xor
fdivl
lret
xor
cmp
xchg
sbbl
or
es
movl
popf
mov
xor
into
xchg
daa
jns
inc
push
add
mov
dec
push
add
int3
adc
jo
std
stc
inc
enter
jge
xchg
dec
xchg
jmp
jb
inc
mov
jno
outsl
ss
mov
and
and
or
xchg
call
jp
ret
out
add
pop
mov
loopne
xchg
cmc
stc
adc
and
lds
sbb
xchg
gs
cmp
mov
dec
sbb
std
jp
add
dec
lahf
pop
hlt
dec
jg
mov
aas
fwait
leave
jmp
and
or
sub
icebp
sub
xor
outsb
push
sbb
lea
push
push
jnp
sahf
xor
sbb
adc
push
sub
jne
cmc
inc
mov
mov
sbb
movsb
sbb
add
add
stos
rcr
shlb
mov
add
mov
mov
adc
add
ljmp
clc
aam
xor
arpl
mov
pop
mov
push
push
ss
dec
cld
lock
std
mov
inc
je
roll
mov
add
in
dec
lcall
lret
jecxz
shrl
jle
jae
mov
xchg
mov
mov
and
dec
jp
xlat
insl
sub
sub
cmp
pop
lcall
add
inc
cmp
mov
push
and
xor
inc
xchg
fwait
jnp
lods
scas
shld
pop
push
aaa
xor
test
in
dec
or
pushl
pop
mov
dec
push
xchg
cmpb
jb
cltd
xchg
cmp
sbb
ds
mov
mov
sub
add
pop
jg
xor
lret
dec
fstl
mull
mov
xchg
pop
xor
lods
inc
ja
push
cmp
mov
sub
push
and
dec
jl
cmp
dec
jmp
mov
test
clc
cmp
jbe
jle
sbb
cltd
imul
mov
fnop
cmp
sbb
push
into
cmc
cmp
lcall
mov
lret
mov
xchg
cmp
sbb
pop
inc
int
int3
dec
clc
lret
aaa
add
stos
xor
jne
cmp
cmp
into
sbb
faddp
sub
rcrl
stos
adc
fs
lds
xor
mov
pop
int
insb
pusha
pop
jbe
les
not
js
inc
bound
repnz
enter
inc
adc
data16
stc
pop
jne
aaa
int
jnp
sbb
cmp
in
jae
mov
insb
dec
ss
outsb
adc
mov
push
pop
stc
inc
sub
sbb
fldl
ljmp
arpl
clc
cmpsb
mov
sub
mov
mov
sub
int3
fdivl
dec
xchg
add
and
mov
mov
xchg
cmc
push
mov
dec
sub
out
sbb
mov
sub
in
adc
or
std
das
icebp
or
not
mov
lcall
jge
loop
inc
out
jp
jl
data16
sub
dec
mov
dec
push
sahf
add
xchg
test
das
test
outsb
sbb
mov
inc
repnz
cs
loopne
out
push
push
aas
mov
lods
dec
and
cltd
pop
cmp
xorl
cmp
cmp
inc
push
jo
mov
fiadds
pop
push
fisubrs
ret
jns
mov
adc
adc
push
daa
mov
out
add
jae
dec
imul
int3
popa
push
les
or
push
sarb
cmp
lcall
test
clc
push
mov
push
addb
scas
jno
iret
jmp
rcll
mov
jae
push
or
jbe
cmp
scas
fisttps
or
dec
lods
lret
sub
push
sbb
orb
xor
cwtl
cmova
sarl
pop
xchg
lds
popf
xchg
sub
xor
dec
or
and
pop
test
sbb
cmpsb
mov
jo
mov
sbb
push
jle
decb
aas
dec
inc
mov
in
push
cltd
repnz
xlat
push
push
and
or
xor
xlat
mov
test
fisubs
lods
outsb
fnstsw
adc
stos
mov
cmc
mov
add
add
mov
mov
pop
cmp
pop
lods
cmp
jmp
sub
jo
ret
sbb
push
mov
movsl
mov
js
iret
push
sbb
insl
and
aad
rcr
sahf
mov
and
lahf
add
daa
or
and
call
mov
movsb
hlt
sti
lds
push
adc
lcall
test
std
pop
pop
call
fsubrs
inc
aaa
cmc
and
push
mull
and
add
or
jg
adc
scas
mov
cmpsb
add
dec
cmp
or
ds
and
test
mov
insb
popf
repz
mov
mov
dec
adc
mov
outsb
jbe
sbb
mov
movsb
jb
mov
rcrb
rcrl
ret
data16
xchg
mov
test
iret
lea
scas
and
lds
fldenv
jae
fcoml
push
and
push
sbb
negl
mov
jmp
pop
push
jmp
xchg
in
cs
rcl
cmp
inc
fisttps
xchg
adc
mov
adc
xchg
testl
mov
imul
decb
cmpsl
fistps
xchg
cwtl
data16
mov
sbb
inc
sarl
sbb
data16
and
movsb
aad
sahf
imul
xor
mov
dec
xchg
add
rorl
mov
mov
bound
test
add
cmpsl
cmpb
notb
popf
cs
addb
dec
aad
pop
jl
lcall
fmul
call
sub
cmc
xor
js
mov
cli
cmc
jmp
push
jnp
mov
pop
rorl
sub
xor
pop
testb
je
mov
outsl
insb
mov
inc
insl
inc
push
mov
idiv
mov
pop
inc
clc
sub
aas
stos
int3
sub
adcl
sbb
add
subb
stos
repnz
divl
movsb
mov
ret
repz
push
lods
cltd
clc
cwtl
inc
test
pusha
dec
push
push
es
leave
xor
sbbb
pop
repnz
shl
movsb
add
imul
jns
in
push
adcl
mov
dec
leave
mov
sub
inc
cmpsb
adcb
push
or
ret
addb
out
push
cltd
bound
fcmove
jge
call
and
fcomps
lods
and
or
xor
or
bound
mov
pop
pop
inc
pop
daa
scas
fisttpl
sbb
and
aaa
das
fisubrl
or
lret
ss
push
inc
daa
sub
cltd
icebp
dec
xor
cmp
sub
push
push
push
sbb
loop
and
push
dec
jecxz
adc
pop
dec
add
jnp
js
inc
cmp
xchg
push
fnstsw
lea
xchg
loop
adc
sbb
pop
nop
clc
cmp
adc
fiaddl
stc
lret
mov
cld
xchg
fwait
push
shlb
loopne
dec
in
jno
add
sbb
fidivs
hlt
pop
push
into
xchg
mov
cld
sahf
cmp
roll
addr16
dec
or
sahf
jge
xchg
pop
cmc
mov
in
add
jle
cmp
addl
jo
sti
xchg
out
cs
adc
push
xor
push
sti
dec
push
cmp
jo
mov
and
inc
xchg
inc
cmp
xchg
mov
out
inc
cmpsb
das
or
rolb
stc
jp
dec
xor
jo
pop
dec
insb
or
test
and
jle
addr16
popf
int
aaa
mov
cld
jle
insb
sahf
jle
cmp
test
sbb
fs
cmpsl
push
cmp
dec
adc
cmpsb
pop
lahf
sub
mov
mov
pop
sub
mov
fldt
mov
addb
cltd
test
int
mov
mov
xchg
mov
jp
int3
shlb
dec
fdivr
jecxz
push
sbb
push
fwait
xor
dec
stc
ror
ljmp
jecxz
in
jge
sub
fldt
lock
insb
xor
sbb
jnp
call
int
xchg
jbe
mov
daa
mov
cmpsb
jge
sbb
xor
stc
hlt
or
jbe
or
cmp
dec
jp
cmp
fs
cwtl
enter
pop
push
repz
dec
jp
mov
jmp
mov
push
mov
and
sub
dec
mov
out
cmp
push
sbb
stos
int
sbb
arpl
es
and
adc
or
mov
xor
jno
int
mov
pop
push
aas
repnz
int
xor
cltd
ds
and
and
out
mov
mov
jl
mov
orb
sub
mov
scas
mov
dec
adc
jno
or
jne
and
aaa
xchg
xor
mov
xlat
or
shrb
ds
add
ret
repnz
in
mov
add
movsl
pushf
bound
jl
loopne
jae
aas
pop
hlt
movsb
mov
inc
stos
les
cli
inc
fsubl
fldenv
adc
xorl
jb
shlb
jmp
or
fucomi
fsubrs
mov
test
les
daa
lods
mov
repnz
jae
adc
mov
xchg
mov
fidivrl
add
push
ljmp
xor
jecxz
jle
imul
jmp
scas
jbe
add
leave
or
fistpl
out
shlb
inc
pop
push
popf
cmp
popf
insl
xchg
dec
loop
pop
sti
inc
ret
incl
pop
pop
pop
mov
icebp
push
aad
stos
scas
outsb
jg
stc
into
cmp
mov
jg
or
add
mov
scas
add
movzwl
shlb
inc
xchg
hlt
jo
xchg
sub
xor
inc
jle
in
mov
sbb
push
leave
sbb
xchg
daa
in
cwtl
test
int
leave
add
mov
sub
sub
rcr
add
and
push
push
mov
stos
daa
jae
ficomps
and
jmp
or
xor
sub
sbb
sub
scas
mov
adc
ja
sahf
xchg
mov
cmp
lock
shll
sub
sub
or
inc
loop
das
in
pop
mov
adc
mov
inc
in
mov
ret
push
or
pop
pop
xchg
mov
test
cmp
mov
mov
pop
xchg
jbe
push
ret
rcrb
inc
lret
mov
pusha
adc
xor
iret
insl
fsub
and
je
sbb
or
adc
pop
or
xchg
jae
xchg
idiv
xchg
bound
xor
inc
fsts
xor
stos
nop
cmp
xchg
inc
js
shr
jmp
push
out
fisubl
icebp
dec
test
dec
dec
add
pusha
stos
leave
push
xchg
xchg
or
sub
sbb
mov
pushf
imul
cld
cmp
cmpsl
add
das
insb
cli
sub
into
cmpsl
and
or
dec
sbbb
xchg
imul
std
test
jmp
test
pop
or
or
push
imul
lods
push
cmp
js
in
in
jecxz
jecxz
divb
mov
movsl
insl
mov
mov
ljmp
orl
lret
mov
mov
movl
shl
fdivrl
or
cs
cs
repz
lret
or
imul
rcrl
xchg
mov
sub
dec
xchg
dec
test
xor
into
inc
sub
aam
jg
out
push
pop
adc
jge
pushf
dec
add
mov
and
dec
mov
loope
loop
shl
push
cmc
hlt
jg
mov
jge
fcoml
mov
xor
pop
cld
and
les
add
sbb
pop
push
addr16
or
dec
loop
jp
scas
fiaddl
pop
sbb
xchg
sahf
pop
pop
outsl
int3
mov
inc
push
sub
scas
mov
es
fwait
pop
es
dec
pop
fdivrs
insb
adc
xor
into
repnz
imulb
or
int3
xchg
cs
clc
frstor
lahf
out
adc
sbb
jne
add
xchg
shrd
scas
jge
xor
mov
xchg
push
shr
out
andb
adc
mov
aaa
xchg
inc
call
mov
xor
fistpll
mov
fnstenv
xor
xchg
sub
inc
lods
sti
sub
sub
mov
sub
repnz
stc
cld
dec
addr16
fidivs
idiv
je
imul
and
lcall
inc
push
mov
lock
sub
popf
lret
shlb
pop
sub
mov
push
jg
repnz
cmpb
sbb
mov
lahf
negl
pop
push
cmp
repz
sbb
in
movsb
adc
xchg
dec
dec
pop
icebp
cltd
pop
add
dec
mov
cmp
popf
clc
xchg
xchg
lods
jecxz
in
fcomip
sub
mov
sbb
loopne
push
les
ret
or
hlt
int
sub
push
notl
cmp
cwtl
xchg
jne
aas
test
into
scas
pushf
sub
adcb
sbb
mov
adc
mov
mov
and
daa
cmp
imul
mov
adc
test
repnz
pop
and
mov
fwait
jmp
or
xchg
xchg
dec
rclb
xchg
pop
jle
fwait
cmp
inc
add
inc
lods
sti
xchg
sub
mov
dec
push
enter
cltd
push
lods
and
stc
repnz
cmovae
mov
fwait
sub
mov
and
push
sahf
pmaxsw
ret
nop
jp
xor
push
mov
cmp
mov
movb
insl
cmp
lahf
mov
ljmp
pop
lds
sbb
push
jno
lds
sbb
pop
cmp
cmp
scas
jecxz
stc
cmp
sbb
sbb
mov
repz
dec
hlt
outsl
call
add
clc
cltd
cmp
jle
popa
cmc
adc
arpl
aas
push
icebp
pop
repnz
lret
cmp
and
jns
sbb
push
outsb
pusha
xchg
lahf
iret
nop
mov
gs
in
les
cld
add
loope
lcall
enter
iret
pop
scas
enter
push
pop
sbb
jbe
mov
mov
add
jmp
jno
inc
add
sbb
iret
daa
xchg
jg
pop
vpmuludq
movsl
in
fs
lahf
rcll
ret
mov
jno
into
shrl
mov
ds
iret
xor
mov
mov
jns
xchg
sbb
inc
jle
xchg
adc
je
sti
sbb
push
out
lahf
cld
pop
loop
mov
jno
filds
addb
flds
mov
pushl
inc
aad
fisttpll
xchg
int
shll
adc
leave
int3
outsl
push
sbb
les
push
dec
inc
mov
cmp
inc
leave
mov
xor
sbb
in
out
loop
mov
mov
notb
pushf
adc
pop
or
mov
add
loopne
insl
mov
jle
push
xchg
inc
add
lcall
fsubrp
sbb
mov
out
mov
incl
xchg
mov
jno
idivl
loopne
insl
mov
nop
cmpsb
movsb
mov
movsl
cmp
push
aad
pop
cmp
subl
add
mov
xchg
ja
addr16
xchg
into
mov
jne
repz
filds
mov
dec
xlat
aas
stc
cs
outsb
inc
inc
mov
cli
push
ds
aad
cmc
jno
dec
movsl
xchg
repnz
mov
hlt
lret
loop
cld
movsl
jo
xchg
sbb
xlat
xor
test
ret
or
jnp
data16
out
imulb
and
mov
sub
loop
icebp
lods
mov
ljmp
mov
cmpxchg
sub
out
jns
sub
out
sbb
loopne
or
inc
mov
xchg
addb
sub
out
jge
outsb
jecxz
jno
hlt
push
aaa
out
adc
movsl
or
addr16
sub
and
cmp
xchg
loope
arpl
sub
lahf
adc
sbb
mov
das
pop
jp
nop
mov
add
fs
fwait
int3
inc
std
pushl
cmp
arpl
sbbl
cmpsl
arpl
mov
fsubl
pop
mov
stc
dec
shl
shlb
mov
and
jnp
pop
jmp
roll
ret
sub
sbb
mov
pop
lret
fwait
aaa
fisttpll
popa
xor
popa
mov
sbb
or
sub
adc
aam
lret
xchg
push
lock
xor
in
ret
test
jge
ds
xor
nop
rcrl
in
imul
negb
add
btc
xchg
mov
adc
enter
push
addb
sub
jmp
lret
pop
call
mov
fidivrl
stc
je
add
xlat
adc
cmp
mov
add
ds
push
dec
add
mov
out
push
mov
pop
aad
fnsave
jo
scas
pop
out
add
mov
clc
shl
pop
bound
mov
pop
fists
cmp
andb
add
jb
mov
lods
sub
lret
mov
cli
xchg
pusha
jnp
cmc
xchg
pushf
sahf
jne
xor
sbb
mov
lret
insb
es
movsb
xor
out
sarl
loope
push
fwait
push
hlt
lret
mov
pop
dec
adc
dec
test
call
scas
lds
cli
shll
and
sahf
fidivrs
mov
je
insl
xor
cmc
adc
out
jnp
sub
shll
xchg
cwtl
mov
mov
mov
rcrb
and
cmpsl
in
jmp
sub
dec
jg
fbstp
fisttpl
in
mov
out
shlb
ja
mov
push
stos
mov
dec
dec
cmpl
test
xchg
pop
sahf
pop
jp
inc
mov
push
jecxz
enter
gs
jge
daa
dec
lea
pop
pushf
cmp
std
das
inc
jmp
sub
add
daa
stos
aam
pushf
push
mov
gs
sbb
mov
sub
xchg
out
xchg
dec
fcmovnu
adc
mov
mov
in
dec
mov
pop
mov
sbb
jmp
sub
jg
dec
xchg
mov
fwait
in
fistl
lret
mov
cmp
mov
shrl
push
icebp
sub
jge
je
inc
xor
xor
nop
scas
jb
lods
les
mov
mov
aaa
jne
mov
addl
xbegin
fcmovnbe
lret
push
pop
xchg
add
test
je
mov
enter
adc
subl
mov
mov
xchg
mov
inc
cmp
or
inc
lret
std
jmp
sbb
hlt
mov
adc
clc
jle
ret
repz
mov
pop
xor
imul
aaa
lods
xchg
push
xchg
call
add
mov
inc
dec
das
pop
inc
sahf
inc
jb
pusha
jnp
inc
test
out
jmp
add
inc
std
add
pop
lret
push
cli
mov
pop
dec
out
mov
or
insb
cmc
inc
mov
xor
add
in
xchg
cmpsl
rol
inc
addr16
gs
subb
les
mov
add
pop
pushf
adc
pop
test
adc
pushf
mov
mov
out
mov
pop
xchg
mov
xchg
js
or
in
or
jmp
xchg
push
int
and
xor
pusha
dec
pop
xor
push
loopne
push
in
int
xor
inc
lret
ret
js
cs
in
mov
xchg
pop
mov
push
div
add
lock
sti
cltd
dec
sbb
or
adc
and
and
js
aas
jbe
shrl
or
loopne
and
in
out
cmp
loop
pop
es
mov
out
subb
call
sbb
aas
dec
xor
outsb
mov
fbld
adc
data16
mov
cltd
in
enter
cmc
shlb
sbb
pop
mov
pop
in
jbe
xor
pushf
inc
pop
add
es
jo
addr16
pop
in
mov
popa
fs
mov
lret
adc
add
adc
add
cli
outsb
cli
adc
arpl
out
xor
inc
mov
pusha
arpl
shlb
fmul
std
addr16
in
mov
cmp
insl
dec
stc
and
nop
fiadds
mov
insl
mov
xchg
aad
icebp
mov
sbb
xor
pushf
out
or
dec
ret
and
ds
and
frstor
cmc
inc
sub
ficompl
leave
push
fdivr
cld
lds
mov
rcrl
out
mov
mov
in
outsb
iret
lods
or
push
out
xchg
inc
fcoml
mov
insb
out
cld
push
popf
cmp
add
rol
or
pusha
or
mov
ss
pop
std
shlb
xchg
shlb
ds
pop
rolb
loop
mov
lods
sarb
and
rcll
out
dec
movsl
fiadds
scas
out
adc
jno
bound
adc
mov
cmp
sbb
rcll
xor
std
popa
cmc
and
roll
dec
jnp
and
stos
pop
xchg
pop
fs
fdiv
xchg
andl
inc
inc
pop
insb
adc
jp
pop
call
sbb
mov
ss
sub
xor
repz
inc
pop
cs
xchg
repz
testl
mov
mov
inc
push
in
mov
sbb
inc
sub
orb
outsl
sbb
and
pusha
aas
xchg
mov
pop
push
xchg
int
mov
xor
test
jbe
jno
lcall
add
sub
jl
jg
inc
dec
test
mov
xor
insl
adc
mov
add
sbb
dec
in
das
jg
jnp
inc
pop
xor
cmp
xlat
mov
inc
fildl
aaa
pusha
fucom
ljmp
adc
in
out
lock
enter
ficompl
adc
insl
pop
or
push
push
lds
mov
and
cmpsb
sbb
jmp
sbbb
les
aad
and
adc
gs
aad
inc
enter
hlt
dec
test
push
outsl
lret
cmpsl
and
inc
cld
adc
xchg
mov
int
sub
imul
jo
rol
divl
jmp
icebp
adc
cmc
xchg
fsubrs
fstpl
loope
lods
fdivrp
in
mov
xchg
in
push
insb
sbb
push
sbb
loope
popa
xchg
cs
cld
in
data16
pushf
mov
mov
pop
sbb
cmp
sub
cmp
loopne
mov
cmp
mov
inc
dec
and
inc
xor
dec
xchg
mov
cld
and
rorb
es
adcb
jo
push
mov
xchg
mov
ds
jnp
dec
or
push
int3
push
mov
call
out
sbb
shr
and
mov
nop
lret
cmp
mov
sarb
rorb
sti
loopne
cmp
xor
in
cwtl
mov
sbb
and
out
or
and
movsb
push
outsl
pusha
mov
scas
in
aaa
out
or
out
adc
mov
or
mov
add
jbe
adc
sbb
jae
imulb
jb
xor
cmp
les
mov
out
sbb
lcall
mov
loop
sub
les
mov
mov
ja
notb
mov
sub
pop
push
ficoml
sub
or
mov
test
movsb
fdivp
inc
lods
mov
xchg
sub
sub
add
mov
mov
cli
pop
call
sti
test
sbb
push
movsb
jg
push
xchg
add
mov
cli
mov
lock
pop
or
mov
mov
mov
push
or
hlt
mov
ljmp
add
fcoms
pop
icebp
loopne
jbe
jl
sbb
sub
mov
mov
add
add
xor
arpl
dec
and
imul
cwtl
mov
add
mov
in
shl
adc
cmp
mov
jnp
fmuls
cmp
stc
rorl
cs
loopne
movsb
dec
fcomps
roll
cmp
cli
xor
iret
push
xlat
lahf
pop
cltd
xor
push
pop
movsl
addr16
fwait
sbb
sbb
mov
push
mov
aas
in
jb
xchg
mov
lahf
adc
sbb
xchg
pop
inc
xlat
and
in
enter
xor
stos
aas
aam
jnp
loope
test
mov
mov
rorb
out
push
outsb
push
sbb
sbb
adc
xor
xchg
xlat
jl
sbb
jno
jo
push
testb
loopne
lods
pusha
adc
faddp
xchg
cli
inc
aad
outsb
xchg
cmpsl
out
das
cmpsb
loop
xchg
shll
mov
out
jmp
in
cmp
rorl
int3
outsb
inc
je
or
xor
xchg
mov
xchg
icebp
ss
and
aaa
fdivp
mov
test
sbb
or
cmp
ljmp
and
xor
test
lret
pop
and
pop
std
pop
jle
arpl
sub
xchg
inc
orb
dec
aas
out
popa
jge
push
or
or
fcompl
xchg
repnz
sbb
daa
hlt
xchg
mov
js
sbbb
jo
xchg
cmp
fmull
mov
push
arpl
sub
insb
rcrl
rorb
dec
jb
push
push
rclb
std
dec
pop
mov
xchg
inc
cmp
pop
sbb
add
popa
jl
call
mov
xor
ljmp
out
loope
hlt
int
shll
cmp
fsubl
jo
fstl
repz
cmpb
pop
mov
adc
adc
mov
movsl
ret
mov
pop
das
xchg
cs
cmp
int3
mov
xor
notb
dec
test
out
rol
push
push
scas
dec
jb
test
add
pop
lret
sti
sar
or
lcall
jb
sub
test
cs
jo
call
stc
lahf
and
inc
xor
jmp
sub
push
dec
mov
pop
add
inc
cmpsl
jg
mov
orl
jnp
sbb
dec
ds
lods
adc
lcall
push
repz
repnz
push
sub
xor
ret
outsl
push
mov
outsl
pop
pop
loope
lods
std
inc
outsb
fwait
cmp
in
push
adc
jb
xor
xor
dec
jae
or
mov
in
fidivrl
lods
pop
push
stos
sub
sbb
xor
dec
call
sbb
aaa
pop
rcrl
pop
adcb
std
roll
lret
rcll
bound
rorb
push
inc
and
repz
pop
out
sub
sub
ror
xchg
cmp
jae
lahf
cmc
loop
xchg
es
jmp
xor
stc
and
ds
inc
mov
scas
icebp
ret
mov
inc
push
sub
jb
jnp
gs
pop
push
push
stc
iret
adc
shl
mov
repz
push
adc
mov
sub
jb
adc
sahf
mov
rol
sub
out
arpl
ret
mov
std
mov
in
adcl
hlt
fisubrl
ljmp
and
cmpsb
inc
and
shrb
mov
dec
addr16
cli
not
pusha
pop
cmp
out
xchg
mov
mov
das
dec
stos
loop
js
cmpsb
or
lea
sbb
inc
roll
gs
cwtl
stc
cmc
sub
lds
xor
movsl
cmp
insb
push
es
decl
mov
add
inc
pop
mov
sbb
or
jle
mulb
in
dec
mov
mov
jb
aad
mov
xor
xor
pop
lahf
inc
pop
xchg
lea
cmp
or
mov
adc
sti
pop
push
mov
repz
pop
pop
sbb
aas
fmul
jl
es
mov
and
stos
mov
cmp
jmp
cmp
std
adc
insb
ficoml
pop
pusha
jp
dec
sub
in
xchg
movsl
add
sbb
dec
mov
or
lret
in
test
jnp
loop
mov
inc
mov
pop
aad
adc
adc
sbb
mov
mov
out
daa
ret
fldl
dec
sbb
lds
mov
pop
mov
jb
movsl
jge
mov
add
dec
lea
mov
data16
adc
std
mov
push
xchg
iret
pop
inc
sbb
push
ljmp
jecxz
and
stos
and
nop
xchg
add
push
je
test
scas
cmpsb
ret
cld
mov
or
insl
push
xchg
leave
sarb
cmp
in
repz
dec
sub
jns
test
lcall
and
cld
hlt
mov
das
or
mov
rclb
sub
pop
pop
cmpsl
sub
mov
ret
addr16
repnz
mov
dec
inc
dec
pop
fstpt
or
pusha
int3
jno
negl
nop
pop
jne
cmp
inc
cmp
lea
js
daa
nop
jns
lods
int
push
xor
orb
mov
sub
test
xor
shl
sbb
or
std
sbb
and
pop
and
jns
rorb
dec
loopne
sbb
test
lock
sahf
or
bound
icebp
stos
out
add
mov
fnsave
dec
or
push
sub
imul
adc
mov
and
in
cmpsb
adc
sub
mov
std
std
mov
jg
lock
and
mov
cmp
aas
loopne
xchg
adc
lea
push
fildl
imul
test
outsb
xchg
mov
cwtl
fucomp
fs
mov
push
add
rolb
jg
fimull
push
push
insl
insb
arpl
fstpl
xor
pop
and
ret
fwait
ret
xor
movsb
push
popa
rcrb
stos
jno
pop
fnstenv
mov
jne
negl
cmp
fld1
inc
imul
out
jbe
and
add
jge
cwtl
cli
add
xchg
movsb
mov
lahf
out
adc
dec
popf
sbb
pop
pop
jnp
pop
mov
xchg
inc
dec
push
xor
cwtl
inc
cmpb
roll
ret
inc
stos
jl
scas
push
or
sti
dec
cmpsl
lret
mov
inc
shrl
jo
push
xchg
popf
mov
imul
push
clc
es
subb
movsl
push
inc
call
or
inc
mov
jl
inc
cmpsl
cmp
subl
mov
mov
mov
mov
adc
scas
cwtl
push
mov
testl
inc
stc
pop
popa
jg
inc
dec
frstpm(287
push
lret
imul
push
int
mov
movsl
adc
dec
xchg
repnz
mov
js
lcall
imull
inc
loopne
cmc
push
xchg
je
push
sbb
sub
daa
and
sub
sub
cmp
cs
mov
pop
pop
insb
push
loope
aam
call
aaa
aas
xchg
mov
adc
int3
mov
shrb
push
push
jns
iret
push
inc
es
push
nop
pushf
rcll
fidivs
pop
aad
jbe
sbb
pop
ret
arpl
pop
in
or
cltd
sbb
stos
lods
cmpsb
push
or
sub
adc
popa
xchg
jnp
out
test
push
dec
and
lcall
mov
rolb
adc
unpckhps
mov
and
arpl
jbe
push
shll
mov
outsl
pop
fsubr
push
xor
xor
xor
sub
rclb
mov
sbb
xor
loopne
jnp
dec
cmc
ss
leave
xchg
push
pop
fmuls
repz
cli
xchg
addr16
cmp
push
cmp
cmp
push
movl
dec
addr16
test
or
cli
mov
push
mov
fisttpll
or
repz
bound
jno
aas
loop
xchg
out
idiv
push
jge
cmp
hlt
pop
bound
addr16
adc
lret
push
adcb
pop
or
negb
cltd
shl
int3
jg
sbb
sbb
dec
lcall
or
push
xor
pop
pop
pop
popa
out
xchg
or
fs
xchg
repz
dec
sbb
inc
mov
and
rcrb
push
adc
out
addb
mov
stos
fisttps
push
ss
subl
setp
dec
out
test
add
pop
ss
and
shll
in
xchg
inc
sbb
xor
aad
xor
mov
and
addr16
scas
xchg
adc
cmp
pop
call
push
inc
jle
jge
cmp
add
cli
shll
mov
mov
xorl
test
add
pop
pop
xor
nop
lcall
mov
adc
cmp
int
bound
mov
and
lret
fs
xor
push
call
sub
adc
mov
sbbb
test
cwtl
pop
mov
adc
insl
add
mov
jae
jb
dec
mov
mov
jne
shrl
mov
jmp
adc
sbb
mov
mov
loop
or
in
in
push
out
fistpl
lret
ficompl
test
adc
xor
cli
addl
pop
or
or
data16
stc
int3
jle
repz
inc
rclb
mov
xlat
cmc
addl
push
lds
insb
sub
outsl
mov
icebp
pop
adc
loope
insb
mov
mov
inc
inc
and
pop
shlb
js
sub
ror
fsubrl
xchg
fcoms
into
mov
push
repz
or
test
cmc
mov
cmpsb
mov
seta
xor
xor
fcoml
ss
cmp
rcr
scas
repnz
cmp
pop
mov
out
leave
sbb
xor
imul
cwtl
js
faddl
mov
jg
stos
ljmp
mov
pop
pop
xchg
clc
imul
fsts
and
jb
test
mov
or
and
jo
mov
xor
test
stos
xchg
rorl
mov
xchg
clc
or
mov
push
popf
fsubrs
fbld
mov
sbb
mov
loop
test
inc
adc
lods
fdivs
mov
ss
loop
sbb
inc
pusha
rorl
shr
filds
dec
lcall
dec
aam
in
call
mov
dec
fwait
sub
xchg
jmp
outsl
rorb
rclb
iret
insl
push
jne
add
push
pop
xor
or
mov
std
push
sub
fs
xchg
shufps
jo
adc
ret
rcl
leave
mov
jb
enter
mov
xor
sbb
adc
insl
idivb
fcompl
leave
xchg
popa
test
jp
push
adc
fmul
xor
and
or
jns
outsb
push
and
out
cmp
push
je
add
dec
test
adc
andb
jecxz
andl
movsl
jp
int3
lahf
mov
sbb
insl
push
fnstcw
je
inc
pop
lret
xchg
testb
jb
ffree
cltd
data16
jae
sarl
and
imul
sub
sub
lea
je
inc
adc
fdivrs
shrb
mov
add
std
orl
sub
adc
pop
sbb
inc
repz
loop
fadds
bswap
insl
js
gs
push
jecxz
adc
dec
std
push
xchg
jo
js
cmp
fsubs
scas
addr16
scas
lock
sub
pop
xchg
cs
lods
pushf
add
pushf
mov
pushf
data16
sti
pop
xchg
pop
mov
idivb
jp
and
loopne
cltd
xor
ror
lret
xchg
dec
pop
dec
ret
push
jg
cmp
popf
das
xor
xor
lahf
out
stos
or
int3
je
fisubs
arpl
jp
xor
pop
mov
add
adc
out
sub
and
int
pop
jno
shlb
xchg
jno
repnz
imul
std
aaa
cmp
cs
lods
shll
imul
scas
jo
add
push
lds
repnz
jns
push
test
pop
movsl
shl
scas
das
frstor
das
cli
push
push
fisttpl
sbb
jl
sarl
movsb
call
pop
jbe
lock
ja
jno
nop
and
sub
mov
mov
in
outsb
mov
je
lcall
dec
sti
dec
pop
jne
or
int
or
xchg
jns
cmpsl
lods
mov
push
loop
outsl
lret
or
rclb
mov
mov
push
movsb
push
subl
call
cmc
bound
movsb
nopl
test
push
insl
lcall
ja
pop
arpl
ds
jle
mov
add
imul
popl
ss
push
fs
fwait
and
aas
cltd
mov
mov
push
xchg
popa
jmp
and
push
cmp
lock
aam
cmp
pop
in
jo
sbbl
mov
cltd
pushf
scas
repz
add
sbb
pop
jmp
adc
mov
mov
mov
sahf
iret
mov
bound
xchg
cmp
jnp
jle
aaa
and
cli
roll
inc
fsubs
pushf
fcmovb
pop
js
aad
stos
shl
daa
enter
xchg
dec
jb
adc
ljmp
gs
add
mov
add
cs
mov
jecxz
pop
int3
aam
test
fstpt
les
hlt
addb
loope
insl
add
insb
inc
mov
xor
cmp
inc
mov
sti
lahf
cmp
lcall
inc
xchg
cmp
fs
sub
in
mov
jge
push
lock
push
lock
xorl
fs
adc
lods
mov
push
add
out
pop
pop
leave
inc
ret
push
fmuls
cmpl
imul
clc
sub
dec
shlb
cli
sbb
or
cs
add
and
push
mov
xor
inc
inc
jmp
shrl
and
inc
lea
in
inc
sub
lea
sub
in
pop
dec
and
out
push
lods
imul
stos
shrl
pop
ss
push
add
inc
les
jo
add
dec
push
mov
xchg
adc
and
test
out
movsl
jno
push
dec
jmp
xor
daa
std
dec
orl
xchg
add
movl
movsb
ss
cmp
jmp
test
jae,pt
cmp
mov
jp
aaa
lds
lahf
test
aam
mov
mov
pop
fisubl
clc
and
push
push
xchg
push
dec
mov
xchg
divl
loop
mov
adc
pop
mov
or
mov
mov
cwtl
and
jnp
mov
loop
imul
mov
sub
outsb
mov
negb
idivb
dec
sbb
xchg
loopne
mov
aaa
rclb
es
orb
stos
sub
js
orl
xchg
rcl
push
sub
add
adc
pop
daa
adc
cmp
cmp
inc
inc
jnp
sub
push
inc
arpl
inc
inc
insb
pop
and
aas
enter
xchg
or
rclb
idivl
xor
dec
rcll
cmp
mov
cs
into
dec
icebp
lea
mov
ret
test
xor
shlb
push
cli
pop
in
mov
mov
mov
cmp
lea
cmc
sub
out
cmp
push
xchg
xlat
xor
mov
push
aas
and
push
cmp
cld
xchg
fsts
fs
add
dec
enter
sub
mov
pushl
jle
add
sbb
mov
add
jno
es
jo
adc
in
ds
push
scas
sub
xor
and
mov
lcall
xchg
mov
cltd
and
lds
nop
fsubp
cmp
pop
pop
movsb
andl
repnz
lret
cwtl
test
mov
cmp
popf
scas
mov
jmp
dec
pop
aad
imul
mov
mov
or
pop
rcrb
cmp
inc
das
cmp
std
sbb
pushf
lret
mov
loopne
push
dec
pusha
xchg
fimull
or
sti
frstor
adc
mov
mov
mov
test
popf
or
mov
cmp
fbld
and
jl
push
cmp
cli
gs
xor
popf
mov
push
out
sub
rol
jg
aad
jb
test
push
fisubl
sub
cmp
mov
push
repz
gs
aaa
push
sub
lcall
xchg
leave
es
repz
inc
mov
leave
lods
and
or
or
mov
mov
or
jmp
cmp
xchg
mov
sub
cmp
inc
daa
push
pop
xor
xchg
je
in
mov
imul
outsl
mov
test
enter
add
shrl
ret
loopne
mov
push
or
stos
scas
pushf
mov
test
cltd
mov
fmuls
push
sub
mov
xchg
mov
dec
lahf
pushf
inc
gs
fsubs
rorb
adc
mov
pop
fwait
shr
jmp
cmp
insl
dec
jnp
orb
pusha
or
sbb
ds
mov
fcmovnbe
ljmp
insl
sbb
fs
lock
test
inc
jge
bound
movsb
fs
repz
dec
cmpsb
mov
and
test
mov
es
inc
data16
cmpsl
lods
imul
jnp
sti
sbb
jns
inc
testb
ffreep
jle
dec
insb
xor
mov
pushf
fsubl
mov
imul
outsl
inc
aaa
sti
sbb
mov
jge
iret
rolb
mov
xor
jmpw
call
enter
shll
xor
iret
add
psrad
enter
lods
scas
daa
das
cld
stos
leave
shlb
stos
mov
cmc
aam
jle
mov
xchg
lea
ret
andb
sbb
jg
fidivrl
mov
lahf
sahf
icebp
dec
clc
xor
or
dec
lds
lahf
sub
or
test
push
pop
cwtl
lahf
fiaddl
add
repnz
pop
push
push
inc
rcll
outsl
cmp
pusha
cmp
adc
push
test
xchg
adc
mov
cmp
cmc
iret
sbb
mov
pop
clc
movsb
out
dec
addr16
mov
xchg
push
xchg
inc
adc
inc
ficompl
repnz
clc
leave
cmp
outsb
imul
sbb
mov
xor
movsb
jo
in
inc
mov
xchg
pop
les
aad
insb
test
js
les
pop
in
adcl
cmp
fs
and
addr16
aam
ffree
dec
adc
in
mov
scas
cmp
ret
int
pop
cli
sub
mov
nop
addr16
mov
mov
jl
mov
sti
push
addl
push
push
jns
imulb
in
fstps
fistps
mov
or
aaa
fisttpll
dec
vcvtpd2ps
pop
jge
adc
popa
xor
pop
js
mov
mov
push
jp
jp
jle
in
cmp
ja
popf
movsl
call
jae
sbb
les
mov
xchg
cmpsb
xchg
int
cmp
sahf
data16
shlb
arpl
cmpsl
data16
jge
dec
cmp
dec
adc
or
mov
stc
clc
inc
daa
cmpsb
xchg
xlat
jnp
loop
cmpsl
sub
adc
add
sbb
xor
mov
sbb
pop
sub
lea
or
push
mov
sub
addr16
je
jo
imul
icebp
out
ja,pn
cltd
fwait
sub
test
sub
xchg
clc
xchg
mov
or
xlat
sti
mov
jecxz
and
aad
mov
es
jl
push
pop
mov
lcall
dec
dec
ficompl
pop
pop
out
dec
push
push
jns
jmp
loope
or
pusha
jge
and
jae
jecxz
mov
xor
jnp
call
aam
jl
add
dec
loop
daa
xchg
mov
push
push
push
pop
test
push
popl
nop
stos
push
movsb
adc
sub
add
ds
cli
mov
jecxz
mov
adcb
cmpsb
out
push
or
rcl
adc
sub
ja
and
pop
aad
ret
xchg
jnp
push
pop
sti
or
jg
push
testl
inc
and
imul
stc
inc
dec
push
sbb
loopne
jle
mov
sarl
loop
add
jnp
xchg
pusha
ljmp
bound
add
mov
ljmp
xor
insb
lret
aam
jl
pop
sti
mov
push
inc
pop
in
cmp
pop
ret
loop
mov
cmp
xlat
add
xor
lods
idivb
jno
jbe
inc
jg
imul
jle
mov
jge
jb
sbb
dec
pop
push
stc
or
push
xchg
sbb
test
sbb
xlat
add
mov
lahf
jg
xchg
xchg
jmp
nop
lock
pushf
mov
js
imul
inc
ljmp
push
push
test
pushf
fwait
dec
ljmp
mov
popa
aam
jae
addr16
lods
outsl
sbb
jne
or
mov
mov
test
and
mov
adc
xor
mov
ljmp
push
push
aad
sbb
adc
dec
in
scas
ret
lock
sbbb
out
pop
ss
push
xor
fidivrl
ret
insb
leave
pop
jns
out
aam
outsb
mov
push
popf
jmp
and
ror
lds
ds
es
adc
inc
pushf
outsb
insl
je
jno
sbb
or
add
cmp
out
mov
pop
les
push
call
adc
mov
bound
stos
mov
inc
mov
push
sarb
fmull
mov
cmc
cmp
push
mov
mov
incb
out
adc
mov
addr16
repz
addr16
daa
push
sbb
inc
aaa
lods
icebp
sti
sub
fisubrs
mov
aaa
jmp
adc
mov
imull
aas
pop
dec
push
lods
lods
sub
adc
les
sbb
outsb
jmp
pop
cs
aam
call
je
xchg
pop
cmpsb
mov
fnsetpm(287
sbb
jne
ljmp
lock
inc
and
or
scas
push
sub
jl
ss
sub
mov
outsl
movsl
fs
jmp
test
sbb
mov
adc
xchg
add
fsubp
jmp
xlat
pop
out
jge
lret
mov
popa
in
repnz
sub
pop
arpl
cmp
mov
xchg
out
pop
push
inc
mov
jl
bound
xchg
add
dec
mov
popa
imul
mov
fistl
and
jae
sub
sub
add
jle
jl
outsb
inc
cmp
push
pop
shll
pop
stos
mov
sbb
adc
in
xor
pop
hlt
daa
inc
jmp
rep
mov
fcom
insl
fsub
add
ljmp
pop
repnz
mov
mov
mov
mov
ret
mov
pop
adc
xchg
mov
hlt
xchg
rorl
cmpsb
loop
xchg
adc
enter
mov
movsb
in
ds
sti
mov
or
mov
sbb
mov
call
rclb
fsts
orb
test
xor
popf
push
jne
call
push
lcall
xor
adc
xor
push
xor
rclb
leave
cwtl
ret
jmp
inc
icebp
fadds
outsl
pop
test
scas
dec
jb
xor
ss
insb
lds
or
and
aad
push
push
sbb
cltd
jb
push
rol
and
mov
hlt
dec
lret
dec
push
iret
sti
test
scas
gs
pop
test
outsb
into
xor
mov
adc
pop
ja
adc
test
xor
add
icebp
xchg
xlat
cli
scas
jl
imul
pushf
inc
xchg
xor
adc
inc
pop
cld
shl
ljmp
mov
sbb
lock
sahf
out
cmp
mov
fidivrs
loope
stc
movsl
sbb
out
flds
lods
jne
cmpsb
adc
adc
or
loop
enter
mov
adc
adcb
lret
sar
in
dec
insl
sub
ret
das
fcoms
push
inc
ss
xchg
adc
call
jl
or
popa
aad
test
shll
and
pop
je
sub
sti
js
outsl
xchg
int
dec
jb
insl
mov
and
cld
daa
popf
in
sub
daa
mov
mov
mov
hlt
adc
sbb
out
mov
push
cmp
xor
loop
xor
sbbb
lods
sbbl
cwtl
repnz
test
inc
cmp
pop
fcmovnbe
sub
scas
push
jbe
xor
mov
test
add
and
xchg
or
pusha
push
ficompl
clc
mov
clc
data16
sahf
inc
lret
test
cli
dec
sahf
pop
adc
inc
imul
adc
sbb
dec
dec
mov
pop
movsl
rclb
jle
testl
mov
add
dec
or
and
scas
cmp
mov
cmp
icebp
std
or
clc
inc
std
je
push
sub
inc
xchg
mov
adc
in
pop
jbe
bnd
mov
and
cwtl
jae
stos
repnz
addr16
push
popf
ja
fdiv
fimull
jno
std
or
dec
and
in
mov
subl
pop
lcall
inc
int
inc
sahf
adc
jge
xchg
xor
cmp
fsubp
scas
sarl
jae
ret
push
jne
fcoml
add
inc
mov
insl
jo
sbb
xchg
inc
sarb
cwtl
cmp
ja
mov
mov
aas
add
aaa
fistpll
xchg
les
sbb
mov
stos
scas
testl
adc
inc
jb
test
cmp
jno
popa
cltd
shrl
jb
mov
in
mov
lahf
mov
push
jae
fsubr
test
icebp
add
mov
push
push
mov
in
push
jb
aas
daa
mov
addr16
icebp
fs
icebp
lcall
bts
andb
stos
cmp
sti
jl
or
add
movsb
mov
dec
push
or
lahf
in
xor
scas
mov
nop
lods
adc
aas
std
mov
mov
jae
or
outsb
cld
mov
mov
dec
and
stos
mov
into
push
ljmp
repz
cmp
push
lret
aad
sti
daa
dec
jbe
jne
lret
mov
aad
aad
iret
into
stc
imul
cmp
mov
sbb
into
lds
pop
pop
mov
sbb
xor
cmpb
inc
imulb
outsl
aaa
negb
add
fs
rorl
mov
fnstenv
into
xchg
aas
inc
test
cs
jmp
iret
push
inc
jmp
push
cmpsl
adc
push
cmp
das
cmp
mov
dec
adc
xlat
pushl
push
jmp
jno
or
inc
popa
popf
lret
rep
cmp
cld
andb
sub
sbbb
insb
adc
push
cwtl
je
mov
insb
cwtl
loope
inc
scas
cs
stc
into
aaa
xor
lea
adc
add
cli
add
repnz
push
fcmove
pop
fucomi
dec
popl
lods
loopne
inc
inc
xchg
stos
repnz
mov
inc
test
xlat
fsubr
mov
addl
vcvtss2sd
jmp
popf
mov
in
pop
cmp
mov
jne
sbb
mov
mov
or
test
cmp
test
jp
push
mov
and
inc
shl
and
cld
and
mov
cltd
imul
xorb
jnp
pop
add
int
das
jecxz
adc
dec
pop
repnz
and
cwtl
cmp
cwtl
sahf
mov
xchg
in
push
cltd
jae
jmp
aam
ret
fdivr
aad
out
das
push
lret
cmp
xchg
mov
cmp
rclb
mov
in
mov
aas
xor
mov
push
cmpsb
sub
push
icebp
loop
sub
push
xor
mov
cmpb
mov
pop
mov
cmp
add
out
int3
jno
and
lock
mov
sbb
jmp
loope
jmp
inc
outsl
fcomps
cmpsl
fsubs
push
lods
mov
insb
inc
cs
repz
adc
and
inc
addr16
sub
mov
and
scas
pop
xlat
or
cli
stos
mov
pusha
cld
repz
mov
in
xchg
hlt
mov
and
and
dec
std
ds
out
xor
or
in
nop
cmp
ljmp
xor
add
xchg
clc
jb
ret
cmpsb
rol
cmp
clc
iret
pop
jmp
rcrb
xchg
adc
pop
loope
pop
lahf
sbb
pop
ljmp
in
ret
fimuls
ret
int
jo
lahf
rorl
adcb
sbb
or
add
addl
push
imul
outsb
push
rcrb
add
push
ja
mov
mov
data16
cli
pop
and
cs
pop
add
jns
idiv
jne
movsb
mov
jae
mov
test
popf
cld
or
insb
es
mov
jle
and
inc
sub
shlb
fiadds
mov
imul
inc
xor
xor
jns
ja
outsl
jg
xchg
insb
dec
or
jbe
mov
jne
std
loopne
pop
xchg
in
ja
inc
cmc
montmul
cmpsb
inc
mov
lds
xor
lahf
fs
xor
call
mov
sbb
fcompl
aaa
inc
xchg
add
sbb
push
faddp
add
lahf
lret
inc
push
imul
xor
pop
adc
or
jae
je
cli
popf
movb
xorl
jp
sbb
push
push
jl
mov
or
insl
adc
sbb
push
push
inc
sbb
push
dec
adc
add
jae
jnp
mov
mov
mov
mov
out
xlat
and
pop
insl
mov
jg
shll
mov
dec
and
clc
arpl
inc
xchg
adc
push
cmpb
ret
scas
in
mov
jb
add
dec
daa
fdiv
es
mov
mov
or
pushl
roll
push
push
mov
js
rcl
out
cmp
movb
jmp
repnz
sub
subl
pusha
cs
dec
mov
xchg
ret
add
sar
test
outsb
sub
cli
jne
sbb
and
jg
loope
or
stos
pop
push
xchg
das
mov
mov
sbb
mov
movsl
imul
xor
stc
fisubrl
testb
and
enter
sbb
leave
and
ljmp
out
andb
lret
dec
sbb
lret
jb
out
add
int
mov
loope
clc
js
out
dec
popa
push
and
repz
ljmp
stc
xchg
fadd
cmp
xchg
mov
cmp
lea
out
jl
ficompl
aas
jp
and
jb
les
aam
xor
int3
lcall
sbb
cs
in
push
pop
dec
test
pop
pop
cld
mov
les
cmp
add
mov
add
sub
data16
adc
sbb
sbb
xor
push
push
movsb
fisttpl
in
pusha
and
jbe
push
gs
repnz
mov
or
lret
add
insl
in
jecxz
mov
jae
inc
leave
add
outsb
sub
jb
push
sub
or
mov
fstpl
cmovnp
add
xor
sub
sbb
jmp
add
jle
imul
and
lock
push
dec
lahf
cmp
mov
stos
mov
add
gs
and
push
sub
mov
mov
subb
push
mov
inc
fs
mov
sahf
cld
pop
pop
lcall
sbb
and
sub
mov
mov
ljmp
jne
es
in
das
lret
lret
subl
cmp
lea
adc
lcall
dec
add
xchg
fsubrl
mov
adc
clc
lret
mov
pop
inc
jb
je
jno
add
decl
out
jns
inc
cmp
sbb
inc
sub
aam
out
xchg
gs
push
stos
mov
lcall
sti
push
imul
inc
arpl
ljmp
test
into
lret
mov
fisubs
je
xchg
ljmp
cmp
stos
mov
xor
lcall
jnp
cwtl
mov
popf
add
das
push
sbb
iret
xor
add
icebp
ret
sub
in
mov
pop
jge
mov
mov
mov
popf
in
push
iret
out
movb
mov
notl
adc
jle
lods
loop
xchg
notl
lods
add
sub
jo
adc
das
lods
std
dec
inc
outsb
dec
cmp
or
xchg
daa
sbb
mov
mov
mov
cmpsl
mov
pop
adc
push
jg
mov
imul
or
pop
mov
xor
aam
jno
ss
daa
add
inc
pop
add
cmp
cmp
xchg
jae
mov
xlat
imull
and
push
ret
xchg
jge
xchg
jae
inc
repz
sub
insl
clc
push
sub
sub
inc
pushf
push
sub
daa
adc
std
mov
inc
arpl
mov
push
mov
xchg
pop
cwtl
pop
stos
xor
jnp
inc
aaa
cmpsl
rcl
ljmp
xlat
mov
xlat
mov
cmpsl
insl
mov
mov
push
mov
jg
popf
dec
shll
dec
and
cmpsl
xor
pop
es
dec
mov
filds
pop
mov
xchg
in
xchg
aas
add
mov
out
dec
test
push
addr16
mov
or
ss
data16
cmp
xchg
icebp
lds
lret
mov
pop
jmp
and
or
imulb
imul
mov
jmp
fildll
sbb
ds
rcrb
dec
dec
lahf
mov
jge
sbb
pop
mov
insb
push
imul
imul
sub
fwait
mov
adc
mov
sbb
xchg
outsb
or
xor
jmp
mov
ror
cmp
dec
cltd
pop
lcall
mov
das
add
lods
into
mov
pop
mov
cmpl
cmp
jge
mul
cmp
scas
jge
inc
outsb
lret
mov
fcoml
cld
out
hlt
xchg
lea
into
loop
ja
mov
mov
imul
sub
inc
loopne
loope
sub
bound
popf
ds
sarl
in
xor
outsb
pop
xor
icebp
outsb
inc
mov
sbb
scas
inc
std
iret
or
pop
inc
and
push
outsb
scas
shlb
icebp
scas
adc
cli
push
lock
push
jle
and
inc
mov
sbb
jae
movl
push
xchg
mov
and
pop
data16
pop
notl
push
out
out
lock
mov
cld
lods
out
xor
ffree
frstpm(287
cmpb
dec
hlt
es
push
sbb
mov
adc
icebp
sbb
aad
inc
sub
inc
sti
outsb
shlb
test
sbb
fldenv
data16
mov
mov
incl
inc
out
inc
imul
jb
inc
push
aas
adcb
cmp
xor
bound
mov
lock
sub
and
ret
xor
icebp
mov
cmp
aam
push
xchg
ffree
fidivs
icebp
inc
scas
call
mov
cmp
in
cmp
sahf
shrb
xor
sti
mov
inc
pop
sbb
shl
fcompl
mov
insl
fsubrl
mov
push
cmp
in
mov
mov
lret
outsb
aas
dec
jge
mov
scas
jae
rcr
jno
jbe
push
add
out
cmpsl
mov
cmc
inc
cmp
je
mov
stc
sbb
mov
xchg
cmp
or
ficoml
lret
sbbl
outsl
inc
stos
rorb
jg
inc
lcall
inc
lret
pop
xor
sub
adc
div
lock
mov
aas
mov
push
bnd
sbb
mov
xor
add
dec
jge
ds
xlat
into
jo
insl
mov
sub
adc
xlat
orb
out
in
hlt
jg
das
test
ss
lcall
ret
dec
pop
cltd
mov
mov
fwait
das
push
add
into
or
test
sti
push
mov
push
test
inc
pop
xchg
ret
fnstenv
add
pop
mov
push
jno
mov
movsl
or
pop
pop
fsubs
call
daa
and
xchg
cwtl
jmp
mov
and
lret
iret
scas
lahf
into
ss
in
inc
pop
mov
sub
out
fnstenv
fisubl
in
fcompl
ja
in
aaa
push
lret
cmpsb
out
xchg
and
shl
sub
inc
adc
rorl
pop
mov
loop
cld
out
pop
or
aas
int
xchg
xor
pop
and
rcrb
nop
pop
cmp
shrl
popf
inc
dec
out
mov
icebp
sub
xchg
push
das
adc
dec
xchg
sbbb
jns
pop
fdivs
cmpsl
inc
mov
aad
pop
and
hlt
sbb
jge
mov
das
hlt
gs
jbe
mov
cmp
imulb
ja
and
rorb
xchg
jo
and
sub
mov
sbb
push
loopne
inc
dec
scas
mov
mov
in
sub
xor
mov
and
pop
adc
frstor
and
and
test
jp
nop
dec
mov
add
push
jl
nop
mov
shll
sbb
aam
test
movb
push
movsl
xchg
and
pop
jo
add
dec
js
ja
sub
pop
test
inc
dec
lds
movsl
pop
loope
push
push
adc
ljmp
cmp
stc
jp
push
cld
dec
push
jp
cltd
test
pusha
repnz
adc
mov
pop
fsts
dec
loope
mov
xchg
iret
sbb
adc
lock
les
les
adc
decb
cmpsl
cmpsb
mov
es
repz
pop
gs
pop
gs
outsb
sbb
rcrb
in
imul
adc
mov
icebp
push
xor
mov
pop
pop
clc
or
xor
bnd
xor
fwait
or
xchg
int3
cmp
test
data16
bound
adc
fnstenv
jno
lock
jno
add
stos
pop
mov
mov
arpl
pop
stos
dec
jb
fs
cmp
ljmp
inc
ret
jle
adc
dec
ficompl
mov
ja
repnz
pop
dec
xchg
adc
sub
mov
mov
mov
and
cmp
adc
xchg
nop
mov
ss
call
push
loope
or
xchg
inc
push
xor
das
push
adc
add
jno
and
mov
mov
ljmp
outsb
mov
and
insl
xlat
lods
testb
fcmovnbe
scas
call
daa
and
leave
mov
mov
and
lea
dec
stos
cmpb
add
aaa
or
jp
jns
imul
in
mov
fidivrl
mov
aas
jmp
xchg
push
xlat
cltd
inc
mov
push
in
xchg
mov
addr16
or
dec
aad
cwtl
insl
inc
fldpi
pop
lds
popa
mov
sub
cmc
not
xchg
dec
and
dec
lock
xor
inc
rcrl
add
mov
pop
roll
or
ficoml
lods
push
ljmp
or
mov
mov
sbb
mov
xchg
pop
mov
repnz
in
cld
cltd
loopne
and
sbb
mov
adc
dec
add
jo
push
int
lahf
cwtl
std
sub
xor
pop
cltd
jnp
inc
stos
bound
xor
xor
hlt
push
out
push
jb
cmp
sbb
sar
mov
in
mov
mov
inc
mov
pop
xor
sar
inc
mov
lock
push
xchg
jns
ret
sub
or
mov
pop
sbbb
mov
xchg
dec
ss
popa
ljmp
sub
sbb
pop
mov
xchg
add
aas
jbe
mov
addr16
pop
rorb
and
mov
and
cmpsl
clc
popf
pop
push
aam
jmp
mov
jmp
sbb
mov
jbe
add
cmp
loop
mov
aaa
dec
pop
xchg
sub
test
push
aad
jle
enter
daa
les
stc
or
sbb
leave
sub
std
jge
imul
xchg
mov
out
add
scas
mov
aad
mov
sub
add
movsb
lods
ja
add
push
mov
add
inc
pop
mov
jle
adc
push
fisttpl
push
loop
dec
xchg
xor
mov
les
lret
fmuls
mov
pop
push
mov
mov
fmull
mov
cld
into
inc
int
mov
push
jle
ror
sbb
xor
mov
je
xchg
mov
mov
movsl
fists
xor
cmp
in
or
push
call
cmpsl
iret
sar
ss
icebp
xor
mov
fcoms
mov
cmp
add
ret
lret
and
jmp
adc
stos
and
adc
sbb
fdivl
jnp
jb
jbe
outsl
js
mov
mov
cwtl
xchg
call
mov
lds
dec
mov
test
push
xchg
lahf
cmpsl
cmpsl
push
je
jecxz
iret
and
mov
jne
mov
lods
aam
mov
int3
or
and
push
scas
jbe
out
and
leave
ret
outsb
iret
mov
aas
jbe
fsubr
or
push
dec
fwait
jg
mov
das
mov
lock
mov
and
push
fistps
or
cltd
adcl
xor
jg
mov
mov
adc
pusha
xchg
jle
or
add
imul
sub
jmp
dec
xor
cmpsb
into
imul
add
test
cmp
cmp
xor
hlt
int
push
sbb
sysenter
sub
daa
jg
sar
stos
imul
xchg
bnd
cwtl
mov
fs
mov
sbb
cltd
iret
pop
jo
pop
add
call
mov
xchg
push
cwtl
testl
pop
popf
mov
test
jb
xchg
ljmp
daa
movsb
movsl
and
push
cmp
in
je
daa
jae
sti
xchg
xchg
fstl
das
or
lds
shrb
xor
jge
in
outsb
cmp
test
xchg
add
movsb
shrl
push
push
cmp
jae
inc
cmpsl
in
mov
or
insl
imul
dec
cli
push
or
mov
pop
mov
int3
add
subl
test
push
outsl
enter
push
cmpsb
sub
push
fwait
jno
sub
ljmp
xor
dec
sub
xor
and
jl
aad
das
pop
add
mov
mov
dec
mov
bound
add
aas
ja
jp
pusha
jecxz
pop
out
test
mov
xchg
les
mov
or
cmp
cmpsl
repnz
call
mov
dec
icebp
outsl
lret
mov
cli
sbb
mov
out
inc
idiv
sub
pop
js
fs
fnstsw
sbb
xchg
movsb
subl
std
cltd
push
leave
sub
and
push
ljmp
fdivs
fsubs
mov
sub
and
add
pusha
xchg
hlt
jns
mov
ficoml
aas
js
leave
repz
das
into
rolb
adc
pop
xchg
shrb
mov
sub
ret
jae
ror
add
rorl
daa
addr16
pop
jne
mov
pop
xchg
das
scas
cs
repnz
sti
shrl
jge
loop
inc
rep
andb
inc
sbb
inc
ror
test
jb
les
mov
mov
xchg
aad
cmp
clc
sarl
mov
decb
fbld
outsl
bound
pop
fwait
aam
add
ds
stos
mov
or
or
into
out
imul
fsubrs
xchg
dec
cli
out
pop
cmp
mov
mov
pop
lcall
bound
xor
add
loopne
cmpsb
aam
test
jb
stos
adc
aam
inc
pop
and
cld
adc
popa
orl
pop
mov
xchg
int3
adc
or
repz
fdivs
jmp
push
ficompl
adc
sub
mov
repz
test
pop
movb
inc
cmc
in
cmc
inc
mov
arpl
add
nop
and
ret
cmpsb
rcll
sarl
or
and
sbb
hlt
jmp
adc
lret
mov
dec
cmove
ss
and
jg
push
or
add
stos
pop
gs
cmpsl
arpl
mov
pusha
pusha
fsubrp
mov
xchg
sub
inc
std
inc
mov
sbb
adc
adc
fmul
hlt
xor
mov
sub
xchg
jge
xchg
lcall
insb
push
cltd
xchg
mov
xor
mov
add
mov
movd
std
movsb
mov
fcomip
or
mov
jbe
lea
xor
lds
stos
pop
mov
mov
test
fs
pop
adc
pop
and
fiaddl
jbe
jg
dec
mov
lcall
in
add
repz
ficoms
jbe
push
jne
mov
sti
es
pop
and
outsl
and
cmp
mov
pop
mov
xor
lods
xchg
insb
xchg
jno
das
imul
or
aam
push
int
and
xor
add
push
aas
pusha
insb
int3
enter
jge
fdivl
js
in
scas
scas
leave
fwait
std
mov
pusha
jo
add
inc
andb
xchg
cmp
pop
lret
imul
sub
jb
repnz
and
pop
push
pop
hlt
icebp
push
add
push
mov
mov
add
xor
rcrl
orl
fimull
sbb
test
sub
mov
mov
pop
sub
mov
popa
adc
popf
out
inc
aas
or
aas
aaa
sub
out
loopne
push
jns
in
lahf
xchg
lahf
imul
jge
fwait
movsl
enter
jns
in
fdiv
push
push
fcmovne
and
adc
dec
daa
mov
add
or
add
ss
cmp
neg
and
pushf
lahf
andb
jl
jb
xchg
pop
icebp
fistps
out
and
and
lds
or
xchg
je
mov
cmp
inc
push
ljmp
les
mov
addr16
fs
movsb
xchg
out
adc
cmp
pop
or
inc
cs
fs
pop
push
xchg
arpl
addl
fnsetpm(287
inc
adc
sarb
repnz
lods
es
insl
stos
sub
sarb
inc
fbstp
jo
aad
cli
sbb
adc
rol
filds
adc
clc
push
pushf
sbb
int3
sub
ror
cmp
xor
mov
sbb
push
das
mov
je
leave
pusha
call
jmp
jae
xor
sub
int
rolb
lea
ret
or
pop
or
out
adc
in
mov
bound
int3
pop
fists
nop
pop
in
loope
fisttpll
repnz
jno
pop
addr16
mov
outsl
adc
mov
loop
cwtl
js
and
fadds
mov
xchg
and
push
in
cld
xchg
cmp
adcb
pusha
cmp
add
dec
js
jae
mov
mov
dec
mov
out
popa
inc
push
pop
imul
mov
es
js
mov
rorb
test
push
mov
inc
mov
shll
subl
push
in
lods
and
aas
xchg
and
cmp
es
pop
mov
xchg
loopne
xchg
mov
sub
call
andl
or
aaa
pop
sbb
jae
stc
outsl
xchg
and
inc
add
push
lods
mov
leave
shrb
and
cmp
cltd
in
adc
in
sbb
lock
fs
xchg
loop
out
push
leave
sbb
mov
jnp
insb
ds
arpl
push
ja
xor
lret
add
jns
or
sbb
and
inc
jns
sub
mov
xchg
adc
jp
jbe
out
sbb
jmp
sub
adc
xlat
sahf
pop
divps
push
mov
jne
dec
cs
iret
ds
outsl
lea
adc
push
iret
loop
andl
out
mov
dec
mov
xchg
and
inc
sbbl
stos
mov
dec
lock
pop
adc
mov
cmpsb
clc
or
loopne
scas
dec
and
xchg
icebp
insl
mov
into
bound
ja
jge
push
test
out
jecxz
jo
jb
in
push
push
fcmovnu
adc
sub
into
aas
ljmp
sbb
xorl
loope
pop
mov
add
xorl
mov
mov
jg
and
and
and
lock
repz
inc
dec
push
inc
push
shrb
dec
push
jmp
xor
push
push
psllw
add
jg
cmpsl
lods
push
pop
dec
dec
xor
popa
fstl
cmp
add
mov
xor
mov
and
or
ja
inc
int3
aam
arpl
xor
imul
push
int3
mov
addl
addr16
mov
mov
ret
je
in
cmp
ret
cmp
les
jge
mov
pop
sub
incl
cmc
sysexit
gs
sbb
pushf
aas
cmp
addr16
and
inc
test
mov
push
clc
xchg
mov
decb
lods
pushf
fidivs
jnp
int
aam
mov
push
sub
and
mov
testl
insl
add
sub
lret
out
in
cmova
pop
xor
sbb
sub
jmp
fadds
lods
fwait
lret
ret
mov
and
mov
pop
push
dec
in
dec
sbb
jo
arpl
out
push
mov
mov
sbbw
sub
pop
jb
xor
mov
jp
loope
fs
lcall
jbe
sar
add
mov
enter
fimuls
mov
pop
lods
stc
lock
imul
fnsave
popl
das
pop
mov
add
xor
sbbl
out
addr16
fdivl
cli
mov
int3
xchg
jl
aas
push
xchg
aas
push
pop
jge
jl
xchg
in
in
in
push
loopne
xor
sbb
xchg
arpl
pop
push
aam
or
lcall
clc
push
into
scas
ficoml
daa
lret
lods
inc
or
test
fistl
xor
jecxz
xchg
push
xchg
jmp
popf
mov
xchg
pop
adc
jmp
in
decb
leave
cmp
in
cmp
fistpll
in
mov
push
sub
ficompl
ljmp
cmp
dec
out
or
inc
pop
pop
outsl
std
pop
adc
mov
cltd
sub
inc
jge
lahf
lcall
loopne
mov
subb
scas
gs
adc
ljmp
push
xor
jecxz
cmc
xor
cmp
enter
pop
inc
andl
xor
mov
stc
jecxz
out
loop
inc
in
outsb
fiadds
test
out
adc
dec
cmc
adc
cld
cmp
mov
mov
lea
repnz
enter
mov
mov
cmc
jae
popa
mov
loope
sub
loopne
lret
fimuls
pop
fisttpl
mov
popf
dec
or
les
popf
mov
sub
shr
insl
int3
xor
jnp
push
lret
adc
dec
pop
xchg
loope
or
add
sti
out
cmp
cmp
sub
cwtl
into
pop
clc
adc
ss
jno
fs
insb
scas
pop
cmpsb
xor
mov
lods
outsl
fstpl
push
xchg
clc
sbb
push
aad
mov
sub
push
cmp
pushf
push
lcall
jg
cmpsb
lahf
lahf
jne
push
xchg
jle
ror
adcb
jecxz
push
in
andb
inc
xor
sub
rcl
and
inc
bound
xor
push
mov
xor
cltd
xchg
int
lret
xchg
push
mov
jne
decb
cld
push
inc
mov
gs
sbb
xchg
mov
adc
cltd
ret
loopne
into
fadd
rcrl
dec
sub
sti
lret
int3
push
std
push
adc
sbb
xchg
repz
pop
dec
sbb
jae
bswap
lahf
cmc
daa
dec
or
push
cmc
jbe
imul
mov
aad
push
cli
hlt
dec
ja
loopne
jg
adc
sub
pushf
mulb
bswap
sbb
sarb
push
cmp
sahf
add
mov
adc
add
and
sbb
inc
cmp
sbb
enter
dec
xchg
fisubs
cmp
leave
dec
pop
dec
lods
cmp
push
push
test
push
mov
cmp
mov
andb
into
rclb
out
mov
mov
fs
test
dec
out
bound
sub
gs
pop
aaa
rcrb
mov
out
cmp
cwtl
std
push
or
insb
sub
gs
je
stc
fadds
mov
out
and
sbb
scas
ds
sub
fs
ja
ret
and
cmp
mov
fimuls
sub
ljmp
in
pop
insb
push
xchg
popw
push
adc
dec
xorl
jmp
mov
icebp
jbe
sbb
fs
out
push
push
stos
movsl
adc
sbb
sbb
testl
insl
pop
mov
std
mov
adc
cmp
rcrl
out
scas
jle
rclb
insl
mov
xor
xchg
movsb
mov
loope
and
addr16
mov
and
mov
aas
aam
pusha
push
loopne
jno
jl
lods
rorl
std
or
in
test
and
testl
out
es
je
add
arpl
fwait
negb
mov
das
add
stc
outsb
call
fadd
cmpsb
push
mov
inc
ror
add
clc
ja
dec
mov
mov
les
mov
sahf
mov
inc
mov
mov
popa
sub
push
fdiv
ljmp
push
mov
push
repz
in
pop
add
adc
ds
aad
jmp
into
testl
xchg
jecxz
pop
jmp
je
push
push
sbb
pop
adc
pop
push
xlat
or
lods
and
arpl
fnstsw
repz
cmc
loopne
daa
sub
fld
scas
enter
mov
insl
adc
mov
fidivrs
inc
sub
jecxz
pop
cld
insb
loopne
loope
and
je
popa
add
mov
mov
bound
fs
hlt
sub
jmp
mov
popa
push
mov
or
dec
jb
jecxz
jne
loop
mov
sarl
push
add
cmp
fs
cmpsl
scas
insl
push
pop
stc
mov
pop
push
lock
jle
sub
mov
leave
push
cli
test
movsb
sbb
mov
jg
fs
add
jae
dec
inc
xchg
shlb
add
into
fwait
lea
xlat
repz
add
pop
loop
and
push
mov
cmp
ljmp
mov
iret
mov
pop
nop
push
mov
fwait
cmp
and
inc
xchg
mov
je
mov
pop
push
shl
std
ds
sti
rorb
rcrl
or
inc
ficompl
add
popa
bound
push
js
aam
xlat
leave
sarl
and
shlb
push
cmp
icebp
cmpsl
jae
push
dec
and
lcall
add
sbb
in
cmc
mov
cs
mov
dec
in
push
or
sub
sbb
into
and
ja
and
xor
scas
hlt
scas
mov
adc
sbb
xchg
clc
call
aad
or
mov
out
lret
or
dec
les
inc
jne
dec
loop
and
sub
xchg
pop
mov
add
mov
adc
jns
push
ret
lret
sub
cmc
pusha
idiv
jno
pop
push
pop
adc
push
lds
lods
sub
clc
dec
faddl
mov
adc
fwait
cmp
lods
pop
sti
sbb
mov
pop
lret
adc
pop
stos
add
push
or
add
mov
sbb
subps
mov
mov
fists
in
pop
push
test
or
into
imul
out
dec
ja
push
js
les
lret
inc
cmp
inc
fistpll
fsubr
pop
popf
fdivs
push
dec
xchg
mov
aam
jp
cmpsl
mov
bound
cmc
pusha
testb
iret
inc
aas
and
pop
dec
cmp
xchg
or
cmp
sub
inc
mov
cmpsl
jecxz
mov
cli
push
daa
dec
mov
push
jo
call
mov
mov
arpl
out
push
icebp
mov
nop
jmp
out
call
jmp
stos
fidivrs
mov
push
inc
enter
jl
add
xor
orl
enter
mov
aas
or
xchg
daa
sbb
call
cmp
fs
daa
mov
insb
imul
pusha
push
loopne
cs
add
push
scas
jno
ss
cld
nop
cmpsb
mov
push
shll
int3
push
jne
bound
mov
test
or
dec
mov
bound
add
xlat
out
mov
aad
push
ds
add
cmc
out
lret
and
pop
out
outsl
les
sbb
xchg
or
dec
add
and
xchg
mov
sub
cs
lret
cmpb
mov
dec
shlb
cmp
cli
pop
inc
aad
adc
mov
es
out
xchg
fcmovnb
mov
les
imul
fmull
out
inc
pop
sbb
jl
outsl
stos
out
jae
pushw
stos
add
cs
leave
xor
out
sbb
jae
xor
dec
insl
loop
sbb
ja
shlb
int
and
test
fnstsw
pop
cmp
xlat
pop
cmp
mov
dec
iret
pop
scas
lret
jb
inc
stos
mov
jns
pop
mov
pop
aas
aas
mov
mov
in
add
outsl
outsl
outsl
sbb
and
rol
mov
pop
or
mov
popa
mov
mov
xchg
ja
popa
jmp
inc
les
pop
movswl
xchg
mov
jmp
ror
jl
push
sbb
inc
outsb
mov
popa
inc
cmp
sub
inc
outsb
ret
cmc
leave
mov
dec
mov
pop
es
xchg
sbbb
jl
jns
aaa
mov
jae
sbb
test
dec
ret
jae
inc
mov
fs
sbb
imulb
mov
mov
adc
inc
icebp
push
test
in
cld
sub
mov
sti
jnp
add
lock
xchg
imul
add
fcmovnbe
sbb
cmpsb
in
aam
cs
adc
call
cld
mov
pop
adc
inc
shlb
xchg
xor
stc
inc
test
clc
fidivs
outsl
cmpb
mul
add
es
xor
data16
pushl
mov
fcomps
push
sbb
pop
outsb
push
orb
mov
add
cmp
rcll
add
push
mov
in
and
aaa
ljmp
xor
jno
dec
popa
sahf
pop
int
aaa
adc
mov
rclb
push
cmp
sbb
inc
in
rcrl
ds
test
push
pop
fdivrs
adc
mov
xchg
fnstsw
xchg
faddl
sbb
cmp
dec
into
jg
sub
push
jae
movsb
cmp
jno
movb
shrl
xchg
push
fisubrs
in
shrb
mov
je
gs
bound
mov
clc
adc
dec
js
mov
shlb
jno
iret
xchg
sbb
ss
rcr
into
frstor
or
bound
iret
fwait
movsb
cmpsl
mov
dec
es
nopl
pop
dec
and
jmp
in
ds
test
lahf
imul
cmpsb
shll
pop
xor
popf
pop
cwtl
dec
inc
clc
call
pop
jge
add
jl
add
outsl
pop
and
or
mov
dec
jmp
je
jo
cltd
pusha
leave
or
fbstp
or
inc
jne
dec
in
insl
lea
je
in
fwait
jg
rorb
sub
divl
pop
pop
xchg
jge
lds
or
pop
xor
fdivl
mov
movsl
add
jnp
je
fsubs
out
pop
clc
mov
cli
xor
fisttpl
outsl
sbb
pushf
sti
pop
insb
sbb
fs
and
adc
pop
loopne
sub
pop
mov
pushl
sbb
pushf
outsl
clc
xor
stos
push
mov
pop
test
je
add
ret
fiadds
add
shrl
dec
and
jl
inc
cmp
popa
mov
aaa
jo
cmp
sbb
cmpsl
daa
jo
mov
es
daa
negl
out
fisttpl
fmul
mov
int3
sbb
adc
xor
dec
xor
orl
jne
sbb
std
cld
xor
sub
jne
cmc
jmp
dec
mov
addr16
sahf
clc
and
out
xchg
sub
movsb
imul
jmp
dec
ljmp
ret
push
xchg
sub
shll
and
stos
aam
daa
or
mov
shrb
das
aaa
pop
out
inc
into
shll
mov
outsb
loope
dec
cmp
ljmp
sbb
sbb
jge
add
pop
jmp
inc
push
mov
and
inc
adc
push
mov
into
nop
or
pop
xchg
ljmp
inc
dec
sahf
push
xchg
in
aaa
push
mov
lcall
aas
iret
mov
dec
fsubrs
cld
sbb
lea
inc
loopne
mov
jmp
imul
cmp
insb
insb
enter
xor
xchg
sub
test
lret
sbb
sbb
les
xchg
aad
dec
xlat
divl
push
jp
pop
lods
out
mov
into
mov
jo
movsb
mov
orl
std
data16
leave
push
pusha
or
pop
negl
in
popa
pop
mov
pop
sbb
push
dec
cltd
jb
outsb
insl
lods
jecxz
xchg
faddp
pop
xchg
pop
pop
dec
mov
xchg
movsb
xchg
sahf
js
pop
or
lods
movl
push
push
les
xchg
push
ret
popa
aad
sub
aas
sbb
cmp
mov
loope
je
xchg
sahf
xchg
les
call
enter
out
not
stos
jns
xor
sub
dec
mov
in
orb
xchg
jnp
mov
enter
pop
jge
mov
push
push
add
lock
xchg
mov
fildll
ds
adc
dec
stos
mov
lea
jns
pusha
dec
subb
jmp
lcall
jb
pop
add
loope
pop
or
mov
dec
lods
shrb
arpl
enter
stc
dec
lret
call
cmpl
pop
sbb
bound
mov
jmp
pcmpeqd
cmp
inc
jmp
mov
imul
icebp
xchg
xchg
arpl
sbb
lods
or
rorb
sbb
adc
lret
std
adcl
ljmp
fadds
inc
add
dec
or
ret
pop
xchg
ret
xchg
aam
cmc
and
mov
sar
pop
push
mov
xchg
adcb
fisubrl
loopne
cmpb
cs
xchg
xor
adc
inc
xchg
repnz
loope
lock
aaa
jo
mov
stc
lods
jae
popf
popf
out
out
in
sub
jae
xchg
dec
outsb
fdivrl
mov
mov
js
lret
insb
cmpsl
jbe
addr16
push
iret
fs
sub
movsl
lds
out
pop
mov
xchg
nop
dec
sbb
push
daa
jae
xor
pop
xor
mov
add
xchg
inc
shll
push
leave
jae
cmp
repnz
pop
movsl
xor
add
pop
scas
loopne
cli
data16
inc
or
stc
push
pop
outsb
push
push
adc
int3
fldl
repz
push
insb
mov
mov
cli
fiadds
sub
or
sbb
test
lods
or
dec
sbb
lret
adc
mov
pushf
aaa
inc
fdivl
dec
jmp
in
xchg
push
xor
or
push
adcb
mov
and
lds
add
lret
jno
mov
repnz
dec
enter
mov
addr16
pop
loop
loop
stos
inc
xor
cmpsl
sub
cmp
dec
sti
and
es
int
xchg
jne
mov
sarl
jmp
mov
lds
loop
push
sbb
imul
xor
jne
jnp
sub
dec
scas
insl
jecxz
std
daa
pop
jecxz
jge
xchg
bound
loope
popf
pusha
jnp
pop
jl
and
mov
jmp
addr16
add
add
or
dec
and
cltd
lods
flds
js
sarl
or
pop
mov
cmp
mov
outsb
and
sahf
adc
sub
or
fbstp
sub
xor
adc
sbb
rorl
mov
cld
pop
cmp
movsb
push
add
addr16
push
cwtl
and
icebp
and
sbb
lea
shr
mov
xor
frstor
or
leave
cmpsl
jo
xor
into
fcoml
xchg
aaa
inc
pop
dec
cmp
pop
divb
push
ds
lcall
loop
sbb
sub
jg
xchg
imulb
inc
ucomiss
or
push
sti
std
push
ret
mov
pushf
push
cmpsl
push
std
xor
xor
mov
mov
mov
popf
subb
test
sub
aam
cltd
std
jb
add
or
fwait
dec
cmp
imul
sbb
or
jecxz
jb
scas
int
addr16
inc
sub
pop
push
call
outsb
push
orl
aad
jmp
mov
xor
movsb
sbb
dec
in
out
pushl
sub
add
psllw
clc
pop
scas
pop
pop
add
fldl
mov
adcb
or
add
or
je
out
sbb
inc
jg
sahf
dec
into
sahf
jge
dec
inc
imul
add
push
popa
cmp
loop
mov
mov
jo
and
or
movsb
xchg
imul
jmp
daa
and
mov
subb
outsb
mov
rcll
add
inc
xor
mov
out
jae
idiv
jo
lcall
test
ja
lds
imull
test
jecxz
sbb
jae
cltd
test
pop
scas
mov
in
shll
mov
cmpsl
inc
inc
add
fs
xor
cmc
mov
fstpt
dec
cmp
xchg
push
jl
aas
jecxz
rcrb
repnz
lret
in
shlb
mov
rol
mov
scas
push
rolb
sti
testb
xor
andl
fcomps
inc
orb
stc
or
fs
das
lods
push
out
out
out
jb
sub
xor
push
xchg
cmp
test
enter
out
ljmp
jae
ret
xor
ret
rcll
loopne
sub
sahf
sbb
dec
add
mov
jno
cmp
mov
mov
bnd
xor
pop
push
cmp
cmp
fstl
out
or
cmpl
fidivrs
andl
jg
movl
dec
xchg
sti
pop
cmp
pop
sub
pop
adc
mov
leave
lock
daa
popa
jp
movhps
xorb
pop
inc
aas
jecxz
mov
add
mov
in
cli
cmc
or
mov
sub
jnp
mov
cmp
or
enter
pop
or
or
fildl
xchg
cmp
cs
int
jmp
push
inc
fstpt
xor
into
push
shl
shrl
stos
xchg
fwait
mov
out
cmp
inc
arpl
xor
mov
or
lret
lds
call
adc
or
in
test
dec
sub
mov
loope
mov
add
movsl
xor
test
jge
jmp
int
mov
jl
fcomps
stos
add
rol
push
in
ja
cmp
decl
shll
ficomps
push
ja
rol
mov
fildl
ljmp
loopne
xchg
mov
xor
fiaddl
orl
pmaxsw
adc
mov
lods
dec
iret
ss
std
lock
test
and
addr16
imull
dec
xchg
outsl
loopne
daa
roll
lods
or
in
loop
les
cmp
xlat
adc
xchg
push
les
loopne,pn
aas
jae
add
push
repnz
jno
mov
dec
lea
xor
and
xor
mov
in
pop
push
adc
and
jp,pt
inc
and
jnp
mov
inc
pop
outsb
rorb
push
add
and
sbb
xchg
leave
pushf
outsl
icebp
mov
loopne
cmp
mov
or
adc
fidivrl
sbb
ret
outsl
decb
jnp
adc
xchg
dec
inc
dec
dec
loop
inc
das
fdivs
in
pop
aam
jne
push
ja
mov
enter
pop
pop
and
jecxz
xor
movsb
fs
cmp
lds
cwtl
icebp
jmp
pop
fs
sbb
push
or
lods
enter
mov
cmc
pushf
push
popf
and
addr16
jl
ss
repnz
push
imul
xchg
add
or
mov
add
mov
fists
and
mov
lods
lahf
cmp
jg
or
pop
loope
in
jmp
and
sub
ds
data16
adc
push
call
int
xchg
fcompl
mov
push
xchg
xor
xor
xor
pop
inc
and
inc
aas
cmp
cli
mov
xchg
ljmp
iret
push
icebp
and
in
sahf
mov
sbb
xchg
loope
dec
xchg
dec
sub
jecxz
adc
jp
fimuls
xor
pop
mov
loope
pop
push
push
in
adc
mov
adc
int3
icebp
mov
cmc
int3
sub
call
push
dec
gs
je
push
data16
movsb
and
inc
aaa
cmp
faddl
popf
xchg
lds
push
add
and
jmp
mov
rolb
sbb
push
jl
mov
inc
push
fistpl
aad
lret
es
or
negb
jle
fdivrl
aam
enter
xor
bound
lods
mov
sti
jge
mov
call
ret
jno
pop
cmc
in
fcom
call
push
idiv
cmc
sarl
fdivrl
inc
shlw
add
out
rolb
sub
cmpb
cld
pop
jl
mov
mov
or
leave
jno
scas
lds
or
add
in
imul
mov
js
inc
adc
add
mov
int
das
in
pop
cmp
rolb
loop
shll
cs
xchg
xor
repz
sbb
xchg
jge
jno
test
sbb
inc
cmp
cmp
into
dec
jae
xor
testl
test
aam
jmp
ds
mov
cmp
lret
and
fdivrl
rcrb
call
in
jge
jecxz
push
mov
popf
mov
cmpsb
mov
and
push
push
dec
sahf
shrb
pusha
outsl
cmpb
out
cmpsl
mov
xchg
loop
out
mov
lds
jle
mov
outsb
loope
push
pop
jnp
jno
adc
cmp
in
dec
mov
xchg
test
daa
out
sub
shll
mov
xchg
sbb
es
daa
fs
hlt
stos
sbb
lcall
mov
stos
and
lock
into
dec
mov
shll
cmpsb
stos
push
ljmp
iret
push
sbb
pop
or
pop
aam
push
cmpsl
cmc
mov
adc
in
out
xchg
jmp
gs
mov
jecxz
xor
mov
daa
push
sbb
into
testl
mov
scas
add
sti
test
outsb
aaa
mov
cmpsl
lds
or
push
out
lcall
bound
mov
jg
out
mov
xchg
sub
mov
imul
mov
ret
cmc
imul
add
jp
mov
push
fimull
in
and
pusha
mov
into
dec
inc
add
std
or
pop
mov
dec
insl
and
test
adc
adc
xchg
and
cmp
push
loopne
mov
scas
call
xlat
in
add
fcoml
jle
sbb
test
shlb
xor
mov
adc
sub
cmc
lcall
mov
scas
lcall
loop
mov
and
pop
call
xchg
lds
mov
data16
scas
lret
cmpl
cmpb
insl
dec
and
movsb
pop
in
xlat
cmp
test
or
cmc
jg
push
sub
mov
pop
pop
aaa
insl
add
shld
mov
or
outsl
cmp
push
xlat
daa
imul
cld
add
adc
xchg
jmp
rorb
push
test
pop
pop
mov
cmp
sub
cld
add
or
aam
xchg
push
in
sbb
cwtl
addl
cwtl
orl
jmp
call
lea
fwait
in
sub
xlat
jge
mov
ret
xchg
cs
mov
hlt
and
jge
inc
cmp
xchg
adc
pop
and
mov
in
jae
popf
add
xor
lds
sub
xlat
mov
in
pop
in
loop
mov
imul
pop
addl
mov
cmp
outsl
sahf
cmc
cmp
jl
jge
stc
movsl
out
or
mov
sbbw
aad
xor
popa
pop
fs
fs
dec
xchg
outsl
push
mov
ja
jmp
adc
imul
mov
inc
push
xchg
dec
adc
sub
inc
mov
sbb
lret
xorb
sub
andb
test
arpl
lcall
or
sbb
add
mov
dec
push
sub
mov
out
push
xchg
and
stc
add
mov
jg
mov
mov
cmp
loop
pop
nopl
ds
shr
out
lods
jae
adc
sahf
orl
sti
mov
push
jb
and
mov
pusha
adc
addr16
push
cmp
and
repz
mov
iret
pop
adc
jb
popa
lock
daa
mov
push
mov
ret
mull
mov
frstor
and
cmpsb
jo
sub
push
flds
popl
bound
push
mov
cltd
mov
inc
add
nop
ret
push
icebp
pushf
and
adc
xchg
int
mov
paddusb
lods
xchg
test
icebp
mov
or
scas
inc
add
rolb
adc
fsubp
mov
fisttps
inc
sub
leave
xor
lahf
pop
xor
pop
enter
cltd
repnz
lret
into
mov
pop
mov
nop
insb
cmp
jp
popl
mov
gs
mov
movsb
mov
outsb
loopne
sti
ffreep
cmpsl
sti
xchg
pop
or
pop
imul
sbb
lds
cmpsl
jbe
dec
mov
jnp
imul
inc
add
and
pop
jl
out
push
fchs
and
sub
pop
xchg
adc
push
in
jo
xlat
xor
popa
jae
lahf
cli
cmp
xor
sahf
mov
in
subl
enter
scas
orb
cmp
fidivl
cli
into
adc
shlb
cwtl
lds
ret
cld
sti
mov
sahf
push
push
jno
push
adc
nop
mov
loop
aam
push
and
scas
repz
arpl
lahf
dec
mov
imul
aam
fadds
add
cs
jo
and
push
lahf
addr16
sub
sarl
dec
cmp
into
ret
repnz
in
test
push
lret
jmp
mov
scas
mov
push
into
pusha
push
enter
loopne
cld
iret
cwtl
jo
loope
xchg
lds
jo
shl
xchg
js
shl
pusha
cmp
sbb
or
pop
push
divb
orb
lret
xlat
jmp
xchg
push
add
sbb
test
testl
inc
add
xchg
mov
dec
into
adc
cwtl
loopne
aam
jmp
insl
xchg
les
cwtl
fmuls
cli
stos
add
scas
divl
mov
std
dec
push
or
lcall
dec
and
outsb
inc
sti
out
jl
xor
cmp
iret
sbb
arpl
pop
bswap
add
addl
filds
sti
leave
idivb
sbb
pop
cmc
lds
fcmovbe
std
movsl
and
xor
pop
mov
jns
lret
push
mov
insb
inc
movsl
pusha
rcrb
xchg
push
cmpsl
lods
bound
in
xor
movlps
sti
shr
into
xchg
aaa
js
lods
in
aad
insb
inc
and
aaa
js
adc
sub
inc
shl
and
iret
mov
fwait
push
mov
int3
popa
add
sub
dec
dec
mov
jmp
sbb
cmpl
int3
inc
mov
inc
jo
xchg
loope
mov
scas
jge
xor
cmp
stc
lock
or
sbb
add
pusha
add
push
xor
and
xchg
scas
pop
jge
sub
and
ror
loope
push
cmp
out
xchg
push
mov
xchg
cmp
dec
cmpsl
add
adc
fsts
sbb
dec
scas
loop
jnp
sahf
test
jbe
fisttps
rolb
das
sti
inc
push
add
int3
pop
mov
fsubrl
cmp
jae
or
pop
mov
inc
loopne
jmp
push
jae
lods
movsb
outsb
aas
sub
popf
cs
mov
xchg
sti
cmc
dec
cmp
pushf
popa
mov
sub
je
fwait
adc
fs
addl
sbb
lock
shrb
dec
and
dec
aas
sbb
inc
ljmp
jmp
xor
xor
nop
shll
repnz
idivl
scas
xor
stc
sbb
arpl
gs
xchg
pushf
sbb
adc
or
and
pop
jl
cmp
bound
sbbl
loope
sahf
or
xchg
int3
adc
xor
mov
imul
dec
sbb
int
cs
dec
rcll
cmpb
ljmp
inc
push
or
mov
add
sub
mov
cltd
int
sub
sbb
mov
test
mov
mov
add
lds
xor
push
addr16
inc
pop
pop
popa
or
mov
xlat
xor
mov
leave
xor
push
sub
fsubs
pushf
enter
out
jns
pop
cltd
das
inc
xchg
inc
xor
outsl
call
dec
pop
jl
mov
jecxz
iret
and
inc
mov
or
clc
popa
jg
clc
stos
pusha
out
lret
out
popa
pusha
jnp
pop
or
sbb
pop
mov
shrb
in
sbbl
imul
pushf
data16
out
popa
dec
lret
xchg
lds
ja
scas
jae
adc
xor
jecxz
sahf
scas
pusha
test
jmp
and
mov
sub
mov
jno
sub
mov
clc
pusha
aaa
lahf
clc
pusha
push
push
mov
jge
or
dec
cmp
or
scas
jnp
inc
cmp
fsubrs
sbb
dec
adc
ss
or
dec
outsb
fnstcw
adc
sub
sbb
sbb
adc
mov
inc
and
les
nop
and
pop
jnp
stos
sbb
inc
hlt
or
hlt
aas
sub
xor
sbb
jnp
fistps
fwait
scas
and
loope
xor
cmp
test
sahf
fsts
repnz
xchg
xchg
sub
xchg
mov
cli
push
cld
fimuls
lods
test
es
cltd
push
mov
inc
push
jle
cli
add
xchg
fnstcw
mov
mov
lahf
aaa
dec
cli
sub
hlt
in
and
cmp
cmc
lea
inc
inc
jnp
xchg
sbb
add
and
sub
lea
out
adc
push
test
inc
jns
fldenv
mov
shll
add
mov
mov
adc
shlb
data16
jns
hlt
cltd
mov
je
ret
sub
inc
movsl
call
pop
sub
loop
loope
lret
or
loop
xor
addr16
jge
lret
pop
outsl
lret
cmp
or
push
pop
jecxz
out
xor
cs
push
cmp
gs
mov
adc
sbb
xor
inc
mov
dec
xchg
sti
pop
xor
rcll
int
or
rcll
out
jae
mov
xchg
jle
rcl
mov
pop
shrb
xchg
shlb
pop
lea
jae
inc
repnz
and
and
sub
les
popa
jmp
loopne
sbb
xchg
push
jno
mov
iret
leave
xchg
inc
mov
pop
sahf
push
clc
sahf
pop
xchg
mov
pushf
outsb
add
push
jae
imul
jmp
rep
xchg
sub
hlt
jmp
test
aas
loope
lret
cli
mov
out
int
pusha
xor
inc
repnz
sbb
inc
and
jge
daa
mov
in
popl
mov
aas
shrl
movsl
fwait
cmc
push
dec
stc
jle
repnz
cmpsl
dec
sar
pop
aaa
aam
repz
sub
movsl
mov
and
xchg
testb
sbb
fs
sub
jo
pop
adc
stc
in
xor
rclb
and
pop
pop
sub
fldt
stos
loope
or
movsl
jbe
inc
sbb
adc
hlt
xchg
inc
xchg
jno
outsb
cmp
lcall
inc
mov
mov
cld
in
add
fildll
mov
test
sbb
pop
outsb
lods
sub
mov
call
pop
jl
jb
fwait
push
sbb
mov
mov
pop
cmp
out
in
fbld
out
lahf
shlb
mov
or
cmc
js
aaa
xor
rcrl
pop
cwtl
push
dec
sti
push
test
dec
sub
insb
clc
dec
xor
sbb
inc
xorb
insl
fneni(8087
pop
roll
xor
xchg
bound
inc
push
out
iret
scas
jl
sub
imul
jo
add
mov
aad
and
es
mov
mov
les
rcll
out
fiaddl
cs
jbe
sti
cmp
nop
xchg
mov
frstor
jo
lret
stc
mov
push
cmp
in
test
dec
iret
xchg
dec
cmp
xchg
add
add
or
stos
xor
test
aad
adc
mov
or
pop
push
ret
hlt
out
jbe
sub
clc
inc
aas
sub
xor
sarb
lea
or
arpl
and
cmp
xor
mov
adc
clc
dec
fildll
adc
inc
icebp
or
pop
xchg
iret
sbb
xchg
jl
inc
shrb
in
xchg
sbb
pop
adc
mov
cmc
sub
leave
xchg
cli
jno
xchg
xchg
sbb
inc
mov
aam
sub
sub
cmc
mov
push
push
jbe
jle
js
inc
sarl
jle
sub
shll
push
jb
dec
add
loope
jg
ficomps
aam
cld
xchg
cmpsb
pop
inc
fists
cmp
sbb
mov
jp
cmp
les
insl
push
pop
pop
cmp
add
jbe
mov
push
es
jb
les
rolb
cmp
imul
add
dec
or
push
push
dec
cli
and
xchg
dec
cmpsl
add
jp
mov
xor
and
mov
sarb
sbb
pop
sub
xchg
mov
subb
pop
add
outsl
test
mov
add
enter
pushf
adc
cmp
sub
sbb
adc
push
sti
ja
mov
adc
inc
pop
fidivrs
adc
cmp
insb
inc
xor
ds
xchg
mov
mov
xchg
mov
or
clc
rcl
fisubl
jno
enter
in
xchg
xor
movsl
jle
xchg
pop
pop
sub
test
ficomps
inc
or
out
jo
mov
mov
loopne
scas
and
inc
mov
lcall
aam
fwait
and
or
mov
out
sahf
clc
or
pop
cmp
out
clc
jle
lock
pop
dec
inc
pusha
orb
adc
add
inc
aas
adc
jnp
outsl
add
jle
mov
adc
add
movsl
mov
jne
mov
or
inc
or
les
shll
fildll
cmp
or
das
mov
add
sahf
and
inc
ret
jns
inc
dec
sub
dec
dec
shl
cs
fs
mov
popa
pop
insl
je
mov
inc
dec
jmp
dec
xchg
cmpsl
out
add
jnp
mov
hlt
mov
adc
jo
cmp
pop
cs
pop
mov
jb
jbe
jb
mov
vpand
mov
inc
popf
imul
mov
mov
sub
adc
add
negb
lods
xor
leave
out
shll
sti
sbb
cmp
add
fs
lock
xchg
lea
adc
xchg
jmp
pop
xor
and
test
fisttpl
out
push
jle
dec
sub
mov
xchg
push
xlat
adc
xor
xor
cmp
les
sbb
fcomp
rcll
push
nop
jg
mov
jnp
sbb
lods
xchg
cmp
pushl
push
adc
adc
cmp
test
test
inc
sbb
mov
lock
xor
int3
jp
mov
mov
insl
pusha
test
enter
xor
mov
enter
cmp
inc
fdiv
mov
xlat
cltd
mov
fs
xor
push
sbb
les
out
push
mov
cmp
xor
mov
mov
adc
popf
loopne
incb
int
xorb
and
pop
out
xchg
xchg
push
add
jle
xchg
mov
int
sub
lds
pop
cmovs
sbb
in
iret
out
sub
or
and
pop
push
test
pop
push
push
xor
sub
pop
pop
xchg
bound
fsts
loop
inc
jne
fptan
xchg
cli
add
and
popf
ja
scas
xchg
adc
movsb
jge
cmp
es
cmp
rolb
jbe
adc
ljmp
sbb
call
test
leave
mov
subl
fcom
pop
scas
lea
jl
cli
aam
and
in
aam
loopne
movsl
adc
imul
aad
jecxz
ss
outsb
insb
xchg
sbb
cld
sub
xchg
sub
inc
mov
movsl
cmp
mov
mov
mov
int
adc
fyl2xp1
jecxz
andl
loope
pop
jg
push
sub
fcmovnu
fadds
ret
das
xor
xor
cmpsb
cmpsl
inc
sub
loope
stos
in
insb
push
sub
sti
xchg
call
inc
add
in
push
scas
mov
inc
loopne
jns
cs
test
scas
xor
outsl
xlat
addr16
lods
repz
lcall
ljmp
mov
jp
dec
movsl
xchg
sahf
lds
aaa
mov
mov
mov
int
ja
clc
aam
adc
pop
jne
arpl
pushf
cmp
sub
or
jle
jecxz
fildl
inc
lds
xchg
jg
mov
pop
jo
ss
adc
push
fwait
mov
out
testl
cmp
sahf
in
fistps
ja
push
test
insb
sub
pop
aad
cld
pop
mov
push
daa
hlt
adcb
push
push
jmp
inc
jecxz
incb
sub
sub
or
mov
je
addr16
aad
in
cmp
cltd
ret
into
fcmovb
out
mov
sbb
stc
mov
orb
push
testb
mov
jo
adc
rcl
shl
fs
jb
pop
lahf
lods
mov
xor
gs
add
lds
mov
cmp
sub
loopne
cmpsb
add
xchg
lea
stos
mov
adc
xor
inc
popa
xchg
ret
push
mov
iret
dec
adc
test
push
out
testl
in
adc
int
dec
push
loope
or
int3
ds
pop
push
ljmp
bound
mov
pop
mov
fs
or
in
xor
push
mov
sahf
incl
push
ja
push
mov
inc
pop
mov
add
mov
es
movsb
shrd
nop
aas
shrb
pop
ss
mov
int
or
xchg
dec
or
aas
push
lods
or
sub
mov
test
sbb
gs
mov
or
jb
jb
add
pop
jl
cltd
jecxz
popf
sbbb
and
loop
pop
dec
pop
xchg
daa
push
lahf
push
push
sub
mov
gs
mov
pop
movsb
fdivrl
mov
mov
test
scas
lods
cmp
add
cmp
add
test
jo
mov
std
mov
adc
out
fwait
mov
inc
mov
lods
sahf
sbb
movsl
in
fisttps
cmp
xor
cli
enter
test
dec
add
test
leave
scas
dec
jp
xchg
mov
mov
popa
jnp
dec
repnz
mov
dec
mov
imul
and
adc
arpl
add
mov
push
jp
shl
test
and
cmp
or
daa
dec
test
call
test
jecxz
pop
xchg
xchg
mov
cmp
fiaddl
push
cmpsl
lret
imul
inc
xor
xchg
andb
jb,pt
mov
push
stos
xor
push
cmp
cmc
cli
mov
sub
and
mov
insb
jecxz
pop
test
pop
sbb
sbb
aad
clc
mov
jno
push
fsts
and
data16
mov
mov
notl
adc
mov
jmp
jo
mov
mov
aad
and
cltd
jle
mov
add
jae
stos
inc
gs
pop
push
inc
add
mov
jl
hlt
fsts
ss
mov
pop
ret
mov
aas
cmp
orl
jne
sarb
adcl
loop
lds
adc
mov
hlt
mov
jp
adc
cli
inc
sub
adc
xchg
mov
test
sbb
sahf
test
xor
in
xchg
xchg
mov
push
sarb
outsb
jp
in
cmp
cmp
mov
or
and
jns
dec
jge
pop
xchg
loop
dec
imul
call
ret
add
and
ret
pmaxsw
fcomp
repz
jae
mov
adc
inc
scas
sbb
fmul
xlat
lahf
xor
mov
cmpsb
push
imul
imul
js
vandnps
hlt
gs
sub
cmpsl
pop
xchg
outsb
stos
ror
cmpsl
out
addr16
outsl
addr16
adc
imul
movsl
push
outsb
lret
daa
pop
jecxz
into
inc
inc
neg
negl
outsl
or
inc
push
cmp
sub
jle
push
stos
stos
inc
sub
sub
inc
push
aaa
xor
mov
insl
cmp
adc
icebp
lock
jl
xchg
push
stos
and
fwait
push
stc
neg
fcmovb
mov
je
frstor
call
mov
sbb
and
imul
inc
clc
subl
cwtl
xor
mov
scas
pop
into
repnz
int
push
popf
jge
and
push
hlt
cld
xchg
add
int
adc
push
cmpl
icebp
out
scas
in
test
addr16
jns
mov
sub
cmp
mov
pop
sub
rcrl
cmp
out
mov
push
inc
fwait
les
sub
inc
jecxz
divb
int3
je
shlb
dec
sti
in
mov
pop
add
fmulp
mov
push
mov
mov
lret
std
mov
xchg
leave
pop
pop
sbb
es
xchg
jo
push
test
cmp
or
mov
sti
test
jmp
mov
mov
jmp
pushf
lcall
push
stos
aaa
cwtl
adc
sar
lods
mov
sahf
xchg
cmpsl
cmc
cs
pop
push
mov
inc
dec
mov
shrb
cmp
push
add
push
out
shrl
xor
adc
xor
mov
and
insb
scas
mov
data16
sbb
inc
push
sub
lock
movsb
mov
pop
add
mov
es
inc
in
cmp
jp
cld
hlt
and
xchg
xchg
mov
dec
sbb
pop
aaa
xchg
fsubr
push
xchg
fimuls
les
cli
mov
mov
xor
pop
xor
test
add
jge
ret
sub
add
sbb
sbbl
std
mov
out
in
sbb
push
outsl
adc
jnp
mov
sahf
cwtl
add
mov
pop
sahf
xchg
and
nop
sbb
pusha
push
mov
gs
adc
stc
ljmp
in
call
push
sahf
cmpsb
mov
addr16
mov
int3
call
sbb
adc
hlt
into
repnz
cmpsl
cs
aas
test
arpl
mov
fldcw
and
push
add
jno
pop
dec
insb
lret
xor
mov
dec
jae
movsl
rcrl
fwait
sbb
add
dec
pop
rcr
dec
lea
sub
mov
inc
addb
push
sbb
sub
cs
inc
jp
out
xchg
cltd
movsb
insb
dec
lea
inc
subb
sub
out
xchg
in
push
popf
cmp
mov
and
mov
xor
xchg
or
dec
mov
aad
jbe
add
aaa
jp
test
jp
bound
mov
and
and
outsl
repnz
lret
pop
xorb
push
sbb
xchg
sbb
or
dec
lods
and
jae
in
jne
push
or
pushf
aaa
stos
mov
stos
lret
xchg
mov
ret
xchg
xor
jne
jp
cmp
test
and
pop
test
cmp
sub
mov
das
mov
popf
movsb
push
sar
mov
enter
outsl
shl
iret
loopne
add
pop
leave
adc
loop
mov
iret
out
adc
xchg
out
js
adc
add
fcmovb
fcoms
adc
lods
imull
jmp
divl
in
jbe
ljmp
mov
addr16
jge
movsb
add
out
xor
inc
insl
sub
sahf
cs
std
adc
add
mov
pushf
and
xor
shll
jle
call
out
push
sbb
sbb
js
ret
pop
dec
jl
addb
fwait
mov
in
cmpps
stc
push
fwait
andl
notb
mov
pop
mov
xor
insb
cwtl
cmp
testl
push
aam
pop
popa
neg
je
int3
hlt
jne
add
mov
scas
outsb
mov
add
push
inc
xchg
stc
fldz
xchg
push
mov
jle
mov
pusha
push
test
xchg
stos
xchg
or
das
popa
repnz
adc
nop
movsb
sub
xlat
outsl
pushf
movb
dec
sbb
outsb
dec
sub
push
pop
mov
xor
imull
in
mov
outsb
outsb
sbb
cwtl
sub
jne
xchg
nop
dec
sub
cltd
inc
outsb
mov
and
push
cli
adc
iret
in
sbb
sub
mov
int3
ds
repz
add
inc
and
adc
pop
sarb
xor
nop
push
xchg
and
mov
pop
mov
push
rclb
mov
and
mov
iret
iret
dec
bound
adc
scas
jmp
jmp
push
xor
imul
imul
push
movsl
test
ja
cmp
push
sub
mov
mov
mov
popa
scas
pop
sub
or
inc
nop
mov
sbb
jl
add
lods
xchg
std
pop
std
fidivl
es
andl
fstp
stos
xchg
cld
pushf
xor
stos
mov
push
xor
fs
adc
xor
cld
mov
dec
in
shrb
xchg
mulb
dec
adc
push
sub
fadd
cmp
mov
nop
or
fwait
jl
dec
fildll
xor
xor
fwait
and
cmp
push
cmc
adc
es
in
fsincos
popa
test
mov
jno
dec
xor
lea
adc
lcall
push
sub
inc
inc
leave
push
into
mov
dec
lods
test
leave
dec
jae
sbb
push
lahf
pop
mov
es
mov
pusha
inc
cmp
jmp
lods
adc
and
cvtpi2ps
mov
loope
mov
shll
cmp
inc
mov
in
out
andl
stos
ds
jb
mov
stos
cwtl
out
loope
insl
ljmp
es
pop
dec
inc
mov
in
std
sub
mov
sub
ss
test
test
popa
insl
push
jne
lahf
dec
add
push
dec
fstpl
jno
jno
call
andb
xlat
push
iret
mov
out
cs
shrl
dec
pop
push
sub
lret
mov
mov
bound
rcrb
icebp
pop
pop
adc
cli
cwtl
data16
dec
xor
and
xchg
pop
adc
fimull
arpl
popf
adc
or
in
jbe
out
insl
xchg
iret
enter
stc
cmp
aaa
out
sbb
outsb
hlt
xchg
adc
mov
cmp
cmp
mov
inc
push
insb
insl
imulb
in
ja
mov
std
cmpsb
fisubrl
jle
push
add
ret
jnp
sub
jns
mov
and
enter
int
lods
jl
jae
adc
loope
addl
xor
enter
out
lds
mov
sub
push
adc
adc
adc
mov
xchg
icebp
ds
jne
and
fiadds
roll
rcll
mov
pop
add
push
mov
xchg
lods
sub
xor
cmp
mov
fcompl
fisubrs
nop
pop
adc
sbb
clc
fbld
in
cmp
or
leave
sub
xchg
cli
sar
jns
rclb
movsl
xchg
lahf
pop
xor
iret
in
mov
xchg
ret
out
outsl
mov
fnstcw
xor
adc
pop
mov
fcomps
outsb
jbe
push
fsubs
arpl
shrb
dec
pop
inc
inc
sbb
in
jmp
test
sbb
pop
insl
mov
popf
adc
xchg
fs
setl
sbbb
bound
arpl
stos
xchg
ret
add
pop
inc
push
fadd
ret
arpl
ret
jmp
pop
test
mull
dec
hlt
lret
cs
and
ret
xchg
fldt
in
jno
pushf
loope
mov
jmp
pusha
cltd
fdivrs
adc
test
outsl
imul
aad
lret
cmpsl
loope
inc
mov
cmp
ds
ljmp
jno
shl
push
adc
loopne
pop
adc
insb
pop
mov
mov
xchg
imul
in
cs
clc
dec
xor
addr16
leave
pushf
test
ds
cmp
xlat
pop
in
add
fs
cmp
sbb
pop
jb
add
icebp
notb
or
leave
cmp
sbb
push
test
xor
lods
sets
and
and
fwait
sub
or
push
xor
add
leave
sub
imul
stc
jle
mov
sbb
jp
test
adc
fwait
dec
inc
xchg
scas
andb
sub
mov
ret
andb
test
test
rcl
mov
sarl
add
out
pop
mov
jge
sahf
push
push
xchg
jge
test
fcmovne
icebp
mov
enter
dec
nop
add
lods
dec
repz
xchg
xor
xchg
lahf
outsb
add
xlat
sub
sub
outsb
movsb
or
insl
in
je
mov
pop
inc
push
mov
xchg
xor
mov
cmp
mov
in
aam
ljmp
mov
dec
lcall
dec
jp
cmp
out
xchg
rcrb
sub
insb
dec
jle
xor
push
jnp
add
and
mov
xchg
mov
sbbl
pop
mov
dec
es
sbb
es
mov
enter
adc
je
mov
jns
push
add
or
mov
mov
push
out
call
adc
adc
push
mov
lods
fwait
pop
sbb
insl
or
dec
and
mov
add
test
std
scas
add
adc
pop
cmp
das
adc
adc
inc
mov
mov
mov
out
fwait
rorl
xchg
sbb
movsl
stc
call
push
mov
xchg
nop
push
ret
fbld
fldcw
es
or
sbb
das
mov
out
into
in
lret
mov
mov
int3
inc
pop
js
cwtl
andb
sbb
push
test
push
sub
out
adc
add
lock
and
arpl
and
cmc
cmp
in
daa
mov
stos
jns
jae
mov
repz
cmp
fs
inc
fs
push
xlat
xchg
test
lods
and
adc
sbbl
sbb
or
cmp
pop
cli
pop
mov
in
or
push
pop
loopne
jp
repnz
or
shr
mov
or
addr16
jecxz
ret
cmp
cmp
cli
xchg
popw
js
or
repz
fsubrl
mov
out
cwtl
adc
mov
sbb
fwait
xor
sarb
das
lcall
pop
and
fnsave
icebp
daa
mov
gs
inc
pop
cwtl
addr16
push
es
in
dec
sub
pop
in
out
sbb
shrb
leave
ds
cmpsl
mov
jo
jno
je
jg
loope
ficoms
jae
sbb
sbb
out
mov
jbe
mov
out
add
adc
jle
add
aaa
mov
ljmp
les
gs
gs
xlat
je
push
adc
sbb
push
lahf
jecxz
pop
cltd
xorb
mov
test
push
insl
lret
gs
push
rcll
mov
jo
scas
cltd
xchg
dec
pop
out
ror
insb
and
sub
stc
movsb
inc
or
mov
movsb
xchg
pop
adc
mov
enter
pushf
test
out
sbb
push
sub
divb
pop
jmp
and
leave
xlat
shrb
jnp
arpl
ss
xchg
sti
insl
mov
mov
xchg
repnz
adc
aaa
jae
ss
loope
mov
dec
rcl
test
fnstsw
int3
icebp
adc
cmp
push
cli
adc
inc
sub
sti
test
xchg
test
xor
or
pop
add
imul
imul
pusha
hlt
sahf
xchg
dec
jmp
scas
pushf
mov
mov
int3
sub
adc
scas
cmp
lds
adcl
and
jge
push
cmpsl
jns
or
and
push
or
sub
lahf
lahf
movsl
clc
jmp
cli
in
xchg
bts
mov
mov
sbb
call
fdiv
in
scas
jne
adc
jp
jmp
inc
mov
pop
icebp
cmpsl
jl
lods
adc
ret
ds
inc
cli
popf
push
rcr
insb
negb
lds
cld
in
push
mov
hlt
inc
sarb
jecxz
mov
cmpsb
adc
sbb
in
rcl
xlat
mov
sub
jbe
cmpl
outsb
inc
pop
cmp
cmp
sbbb
iret
jne
sarb
les
addr16
cmpsl
adc
pusha
xchg
data16
add
aas
cmpsl
sbb
jecxz
pop
mov
sub
cmp
pop
add
decl
cwtl
test
xchg
stc
orb
push
and
loopne
movsb
cmp
jb
int
mov
sub
mov
je
imul
fwait
inc
mov
scas
add
scas
mov
cld
add
orb
xchg
jb
call
push
push
call
in
out
push
pusha
roll
cmp
int3
sbb
dec
cld
mov
sub
mov
in
out
imulb
sub
in
fsubrs
insb
test
ret
stos
cli
add
out
js
jmp
sbb
inc
sub
test
mov
int
mov
add
rorb
loope
adc
lret
and
arpl
xchg
xor
push
orb
xchg
pop
dec
lea
cmpsl
sti
data16
sub
xor
imul
and
cmc
fistpll
dec
aaa
xchg
ret
aas
add
inc
sub
jnp
inc
jb
mov
or
mov
sub
sub
jbe
lcall
adc
push
cmp
pushf
sti
xchg
repnz
in
xchg
xor
call
gs
icebp
js
jae
cmpsb
outsl
sahf
or
cmp
push
fs
push
xchg
addr16
cmpsl
in
shrl
pop
mov
push
inc
mov
gs
popf
push
add
pop
jp
xchg
shrb
fbld
push
cmp
push
repnz
cmpsb
mov
arpl
hlt
sbb
cmp
jns
frstor
dec
cmp
insb
inc
pop
test
loopne
addl
mov
sub
and
dec
iret
out
fstpt
daa
pushf
movsb
mov
and
cmpsl
dec
xchg
and
sub
fimuls
psubusb
test
jo
iret
aam
mov
pop
or
mov
mull
cmp
jnp
jae
xchg
ret
lea
popf
pop
js
pop
adc
push
jns
xchg
stc
jl
mov
add
mov
in
sbb
outsb
inc
fmuls
jo
fwait
jmp
xor
mov
pushf
jo
outsl
mov
sub
sub
jmp
inc
pop
push
inc
popa
imul
imul
jle
outsl
pop
cmc
scas
les
sub
out
scas
lret
mull
push
add
cmc
push
arpl
mov
fs
scas
sarl
nop
sahf
xchg
mov
or
or
inc
push
sub
arpl
fisubrs
mov
dec
hlt
mov
sub
pop
pop
cmp
push
add
push
push
adc
sub
in
push
jne
and
sub
mov
shrl
mov
mov
into
push
mov
hlt
push
adc
shlb
aam
cli
cmc
dec
out
mov
push
pusha
leave
int
mov
or
in
mov
lds
jnp
imull
mov
xlat
fistl
in
je
push
pop
inc
lods
fdiv
pop
sbb
inc
push
mov
mov
je
cmpsb
aam
push
into
add
ret
jb
xor
cwtl
sbb
sbb
lret
jge
jno
cs
outsl
mov
push
jge
mov
mov
or
sbb
sub
jecxz
jl
xor
fidivrs
adcb
xor
sub
xchg
or
cli
andl
inc
sub
xor
rcrb
cltd
leave
jp
xor
mov
pop
xor
sub
pop
inc
rcrl
addr16
jp
or
sbb
sbb
pop
fstl
sub
rolb
inc
xchg
icebp
rcr
iret
jmp
movsb
sbb
mov
aam
adc
lahf
inc
mov
jge
outsl
cwtl
dec
loop
sub
inc
jmp
in
push
out
cmc
in
sbb
das
jp
push
pop
and
dec
lcall
xlat
cmp
add
inc
or
mov
ficoms
int
test
xchg
rclb
jg
xchg
es
add
lods
dec
popf
inc
fnstcw
sbbb
pop
jmp
aas
or
or
stos
jns
inc
rorl
inc
sub
xchg
pop
cmp
sbb
xor
pop
and
and
push
and
shl
fidivs
cmp
fisttpll
pop
xchg
dec
aad
aam
mov
lods
add
and
jns
cmp
and
jmp
add
nop
int
cmp
out
popf
lcall
rol
dec
dec
jecxz
hlt
xchg
push
mov
sbb
or
add
mov
push
add
out
repz
gs
sbb
mov
stos
sahf
or
cmp
in
out
push
jne
dec
and
daa
int
push
in
pop
pop
je
push
popf
fildl
inc
and
xchg
inc
stc
leave
mov
out
lods
fldcw
aas
imul
push
insb
or
mov
sbb
jbe
into
rolb
aas
mov
jg
jle
shlb
mov
inc
lods
pushf
out
add
ljmp
popa
mov
je
stc
les
stos
cmp
outsl
add
jae
inc
rorl
xor
pusha
loope
inc
push
push
bound
pop
sbb
mov
aaa
outsl
jns
lea
stos
data16
imul
mov
mov
ljmp
lea
outsb
shlb
mov
sahf
loopne
sbb
or
cmp
cmpsb
aaa
xchg
sub
inc
sbb
jns
xor
xchg
push
pop
ret
mov
xor
cmp
jg
and
mov
jle
mov
mov
xchg
aad
jmp
jbe
fisttpl
or
incl
pop
push
sub
insl
pop
jne
imul
xchg
inc
jbe
mov
dec
das
repz
mov
out
mov
or
mov
syscall
xorl
adc
addr16
xor
cmpsb
pushf
outsb
testl
pop
pop
lock
xlat
and
test
in
fld
outsb
dec
push
or
outsl
inc
and
mov
or
sbb
push
xor
movsl
mov
mov
fnstcw
das
xor
movsb
ds
dec
mov
fstl
into
jle
adc
movsl
subl
sbb
out
gs
mov
loope
inc
mov
lret
xlat
mov
mov
pop
test
xor
ja
push
mov
je
lret
adc
jecxz
push
pop
popf
and
add
push
or
test
cmp
std
int3
clc
and
ds
push
cld
call
inc
repnz
sub
imul
popf
or
int3
sub
popa
cmp
test
pop
aas
xchg
mov
mov
in
repnz
pushf
jo
cmp
call
mov
popa
or
push
sbb
xor
dec
jns
mov
pop
sbb
shrl
or
ss
adc
jle
xor
push
adc
or
add
lods
push
inc
push
lret
sub
jp
or
and
in
or
ret
int3
add
lret
add
loopne
jbe
cmp
cwtl
and
dec
ret
int
iret
dec
pusha
inc
sahf
in
lret
sub
lahf
pop
call
popa
pushf
sti
lods
data16
arpl
sub
fstl
rcrl
insb
inc
call
adc
or
push
shl
cmp
cltd
cltd
adc
pusha
lea
repnz
jo
xchg
inc
xchg
ret
or
xorb
add
jb
mov
in
adc
aam
shld
ret
sub
dec
shlb
les
out
or
mov
push
clc
mov
jo
xlat
pop
cmp
out
cltd
aad
frstor
pop
std
cmpsb
push
or
push
jb
mul
adc
fcmovnb
cmp
lahf
and
xor
lds
push
aas
mov
jno
xchg
int3
add
and
mov
rorl
arpl
scas
dec
and
stc
jg
fs
mov
add
jne
xorl
js
lods
fsubs
inc
in
push
pop
mov
cmp
rolb
mov
testb
inc
sub
stos
sbb
mov
xor
mov
ret
pushf
pop
bound
sbb
adc
test
and
stos
fstpt
ss
fcmovbe
push
lods
inc
cmp
das
rorl
mov
insb
aaa
add
xchg
dec
bound
fistl
mov
xor
cmp
xorl
fwait
jb
and
mov
sub
dec
loop
pushf
xor
addb
pop
xlat
in
sub
pop
cmp
popf
mov
insb
dec
dec
shll
inc
sbb
add
jb
incb
and
xor
fxch
push
push
les
push
pop
mov
inc
shll
pop
scas
jb
sarl
push
ficoml
lcall
rcr
dec
sub
cli
jae
mov
lock
lds
add
mov
hlt
add
push
xchg
fistps
jmp
mov
mov
xor
xchg
es
rcrl
aaa
movsl
enter
je
xor
lahf
push
dec
adc
das
mov
int3
daa
insb
jne
and
cs
out
push
cli
scas
mov
cld
inc
shll
fadds
sahf
cmp
fwait
inc
arpl
inc
and
lea
xchg
jbe
mov
repnz
mov
sub
in
mov
adc
cmp
inc
inc
out
int
lods
lret
adc
ja
mov
call
cli
pushf
das
loope
icebp
or
cmpsl
add
cmp
or
pop
rclb
xor
hlt
or
add
clc
sbb
nop
sub
repz
mov
scas
scas
ret
dec
imul
jmp
xchg
gs
fildl
lcall
add
push
test
shll
lcall
leave
mov
rcll
lods
js
mov
dec
xor
or
push
fs
inc
mov
stos
and
ficomps
and
mov
in
call
jle
jecxz
repz
jg
loope
push
sbb
aaa
cmp
hlt
sub
aam
roll
lea
insl
jmp
fxtract
ja
cmpb
inc
sbb
xchg
out
mov
sub
loop
jno
repz
mov
jo
or
sub
and
shll
clc
ret
insl
sub
in
xchg
inc
mov
mov
cmp
push
inc
cmp
leave
lds
mov
lret
pop
pop
pop
frndint
dec
pop
dec
inc
outsl
mov
xor
mov
gs
ret
adc
ret
into
sub
insb
mov
push
mov
repnz
out
shrb
fldcw
ficoml
leave
inc
mov
add
and
fildl
inc
sbb
inc
aaa
dec
inc
cmp
adcb
sbb
repz
pop
mov
mov
test
adc
mov
and
jmp
aam
xor
push
and
add
sub
inc
pop
negb
mov
cmp
out
cltd
xor
stc
jl
xlat
xlat
in
inc
push
jae
lret
xchg
xor
xchg
jmp
cmp
orl
cmp
mov
xor
lock
js
pop
das
test
out
mov
fwait
insl
push
lahf
test
dec
sbb
out
mov
cmpsb
or
repz
sahf
js
cmp
mov
mov
movsl
lcall
loope
loope
and
mov
push
daa
rclb
loope
or
add
stos
xor
jmp
mov
filds
lock
jo
xchg
inc
pop
xchg
movsb
cmp
out
lock
cmp
xchg
icebp
inc
mov
fadd
cltd
sarl
cmp
std
gs
lds
mov
lret
and
push
jno
push
cltd
pop
pop
pop
xchg
in
mov
xor
cmp
sete
dec
push
mov
cmp
jl
int3
and
orb
scas
test
lret
imul
pop
xor
cli
jecxz
es
lea
dec
jle
nop
or
or
divb
push
lods
push
cld
mov
test
jae
mov
loope
ljmp
pop
or
sbb
pushf
and
mulb
inc
subb
loopne
ret
sarb
push
mov
aaa
mov
popa
stos
lock
andb
jle
xchg
sub
or
adc
shl
mov
pop
or
add
scas
xor
gs
ss
js
aad
pop
push
lods
mov
in
xchg
test
pop
push
je
pop
out
sti
push
in
cmpsb
popa
pop
cmp
cld
clc
inc
aad
in
mov
arpl
or
adc
inc
mov
les
cmp
leave
stos
mov
loop
and
add
cmpsb
mov
or
xchg
jp
adc
ret
int3
mov
icebp
aad
fidivs
sub
shll
ljmp
jb
pop
push
push
xor
sbb
mov
cli
sub
push
jmp
mov
cmpb
in
popf
das
xchg
nop
imul
lock
lret
fsts
cwtl
aaa
mov
lret
sbb
iret
mov
push
test
ds
mov
sti
ljmp
mov
pop
ficoms
daa
lret
or
xor
notb
sar
pop
cmp
aas
or
nop
add
cltd
cmp
jecxz
movsl
jp
scas
loop
inc
cmpb
pop
sub
jmp
loop
xor
mov
adc
jbe
imul
movsl
enter
lahf
outsl
push
pop
or
pop
lods
cld
jg
out
or
adc
mov
sbb
fld
mov
pop
loope
cmp
cmpsb
jle
sti
in
jl
mov
jne
xchg
insb
pop
hlt
sahf
aas
mov
les
stos
gs
loopne
add
call
jge
imul
aaa
das
xchg
mov
adc
mov
lahf
js
mov
pop
push
pop
rcrb
sbb
stc
call
jbe
jecxz
push
dec
jne
or
leave
aam
inc
imul
sub
std
mov
sub
mov
mov
sbb
sbb
dec
shr
repz
add
popf
sbb
and
adc
cltd
and
cmpsl
imul
or
shrb
lds
pop
into
add
dec
sub
xchg
je
and
sub
movsb
inc
rorl
adc
out
xor
jno
lret
cwtl
sub
icebp
push
test
fdivp
je
les
mov
jecxz
mov
into
rep
gs
cmp
pop
rolb
dec
out
or
mov
fdivs
cmpsb
js
out
fistps
push
mov
xor
sub
imul
pop
clc
shll
into
clc
testb
sub
inc
ficomps
lea
inc
repz
ret
pop
bound
mov
fisttpll
and
inc
pop
push
push
shll
bound
clc
and
pop
sub
push
pop
and
add
hlt
rorb
add
leave
or
mov
aam
cmpsl
xchg
cmp
mov
adc
bnd
mov
xchg
cmpsb
int
imul
jge
jg
mov
sub
add
lds
rclb
pop
aad
mov
cmp
sbb
sbb
rcr
or
push
xor
mov
insl
pop
daa
cmp
adc
pusha
popf
and
push
xor
fisttps
cmp
push
addr16
sbbl
movsl
cltd
lock
rcll
call
insl
sub
xchg
aam
mov
jle
insb
fidivl
iret
jp
xchg
dec
in
xor
jle
shrl
jo
rolb
mov
int3
cmpsl
mov
int3
sbbl
into
dec
jge
mov
pop
cld
adc
pop
mov
adc
rcrl
data16
fstpl
jo
hlt
push
push
inc
add
xor
dec
mov
and
lret
xchg
fwait
mov
out
in
lret
ret
or
mov
aam
mov
repz
lahf
or
cmc
repnz
std
fistpl
push
jae
arpl
mov
xchg
inc
xorl
dec
cmp
xchg
push
in
xor
hlt
cmp
pop
lret
jecxz
cmpb
lea
rcll
in
iret
push
sub
inc
scas
push
dec
or
imulb
sbb
in
pop
push
pop
jno
bnd
jg
pop
cs
dec
sub
sti
insb
mov
mov
ret
daa
sbb
mov
mov
xchg
jp
movsl
xor
jg
jns
sbb
inc
mov
dec
mov
das
cmp
xchg
mov
add
cmp
lcall
subb
setge
cmp
xchg
xchg
mov
das
inc
cmp
dec
mov
adc
sub
gs
iret
popl
call
ljmp
pop
adc
jp
rolb
stos
shrl
out
addl
sbb
test
ficomps
popa
das
imul
dec
jmp
lods
int
int3
pop
adc
lds
sbb
cmp
mov
mov
ljmp
out
push
sub
add
test
lock
cmp
int
mov
das
sbb
jg
ds
push
jecxz
cmpsb
pop
and
mov
insb
testb
or
pop
adc
aas
ret
sbb
push
push
out
push
add
xor
or
fsts
mov
subb
hlt
repnz
mov
sub
scas
mov
scas
fwait
sub
call
mov
cmpsb
dec
mov
popl
push
cmp
lahf
push
sarl
test
call
push
mov
mov
inc
out
mov
arpl
aad
imul
orw
adc
add
test
in
push
xchg
adc
clc
roll
call
insb
push
test
xchg
iret
sbb
cmp
lock
xchg
add
dec
pusha
mov
pushf
ret
and
jp
int
mov
jbe
into
cmpsb
cmp
mov
push
dec
je
jbe
xlat
mov
mov
addr16
xorl
gs
or
mov
imul
add
ds
andb
inc
out
and
repz
inc
ja
out
repnz
mov
add
xchg
fs
fsub
lret
xchg
add
lods
cmp
inc
xchg
fldl
pusha
mov
pop
jne
iret
or
xchg
icebp
inc
sbb
jnp
stos
inc
in
mov
inc
fists
sbb
jae
rcrb
add
into
fiadds
sbb
fsubrs
and
pop
js
das
inc
cmp
sub
lahf
xor
icebp
rcrl
pop
in
roll
loopnew
subb
xchg
imul
sub
jg
jbe
mov
pusha
clc
lret
test
sub
sbb
and
sub
ds
lods
mov
aaa
fdivrs
and
dec
add
movsl
iret
enter
sub
xor
cltd
nop
mov
pop
xor
out
insl
mov
test
add
or
test
mov
mov
xchg
inc
pop
scas
stc
scas
inc
stc
sbb
fcompl
clc
inc
sub
pop
push
rcll
adc
out
xchg
push
jne
mov
or
or
or
jmp
sub
lcall
or
icebp
movsb
adc
bnd
mov
addr16
xchg
xchg
push
lods
xchg
cmp
inc
mov
push
pop
stos
insl
outsb
lea
testl
dec
fs
orb
incb
and
xchg
fidivl
arpl
outsb
leave
icebp
fnstenv
clc
mov
xlat
add
xchg
pop
pop
stos
or
punpckldq
sbb
clc
jmp
int3
popf
gs
push
aas
cmp
xlat
cmp
in
out
jbe
mov
in
mov
aam
add
popa
lcall
loope
ret
push
lcall
sbb
add
xchg
scas
out
cld
or
inc
subb
mov
aaa
add
loop
cltd
jno
rcll
ljmp
inc
aas
cld
mov
lea
mov
sti
xchg
jne
arpl
repnz
cli
xor
xor
xchg
loop
orb
fidivl
add
sbb
mov
scas
and
arpl
scas
mov
aam
inc
bnd
push
xchg
sub
cld
lret
jno
fstl
jg
push
bound
jb
cs
fstpl
mov
ss
lods
lods
ja
fisubrl
dec
add
jns
push
mov
xchg
out
aad
icebp
movsl
fldenv
loope
pop
pop
cs
rcrl
cmp
ss
fs
dec
add
adc
jbe
cmc
jecxz
push
jae
push
push
jns
xor
mov
lret
inc
icebp
shl
dec
mov
xchg
jp
sarb
xchg
mov
sti
lret
iret
sub
aam
mov
and
ds
dec
in
outsl
adc
add
cmp
mov
inc
cmp
jmp
sbb
jo
cmp
and
inc
sub
add
test
xor
pop
pop
xor
in
push
pop
shl
inc
in
scas
das
mov
push
xlat
and
bnd
jle
inc
pop
dec
outsl
les
add
lods
pusha
aam
and
jo
xor
add
mov
jo
pop
loop
movsl
sarb
mull
and
test
aaa
aaa
fdivrs
mov
sti
jbe
add
andb
scas
dec
and
mov
pop
movsb
out
dec
xchg
adc
loopne
pop
pop
mov
adc
mov
add
adc
dec
inc
mov
shlb
inc
loop
inc
rorb
rcrl
pop
xchg
mov
fdivrp
push
stos
loope
add
out
lds
iret
mov
lret
sub
cmp
add
jp
mov
pop
sub
sti
mov
adc
jbe
cmpsb
push
xor
ds
inc
push
push
cwtl
push
mov
mov
insl
add
sbb
sub
pop
xor
push
pop
je
cmp
add
icebp
in
cmp
xor
pop
inc
jne
mov
loopne
jo
loop
sub
out
or
push
sbb
or
mov
aam
fcompl
adc
dec
test
in
xadd
inc
ret
mov
or
or
sub
sbb
cmp
addr16
fcoml
in
mov
and
adc
addr16
jecxz
orb
and
cltd
sub
xor
loopne
in
mov
jo
and
clc
cmpsb
rcrl
cmpsl
jecxz
mov
out
cmc
or
arpl
pop
and
je
inc
inc
mov
mov
pop
loope
cmp
jecxz
xchg
sbb
xor
add
dec
mov
int
sub
xchg
imul
add
lods
int3
pop
test
scas
mov
and
and
mov
push
decl
out
aaa
insb
ds
scas
ljmp
testl
test
cli
ljmp
jge
daa
xor
inc
ret
ljmp
xor
add
sub
lea
jl
push
jo
shl
jmp
push
aaa
or
lret
and
pop
jmp
pushf
cmpsl
pop
fnsave
sub
pop
cmpsb
inc
ret
pop
std
jg
clc
mul
lcall
lea
adc
scas
inc
adc
pusha
lcall
push
fimuls
cltd
loopne
jmp
cli
cmp
scas
cmpsb
push
jo
jo
dec
mov
mov
push
jge
cmpsl
push
shlb
xchg
mov
jnp
adc
insb
pop
lds
jae
sub
je
mov
mov
sbb
push
dec
out
in
imul
lods
sbb
jecxz
sahf
add
mov
xchg
sarl
jp
cmp
xchg
lods
sbb
popf
fsubrl
sahf
cmp
xor
xchg
inc
xor
inc
mov
loope
cmp
hlt
sbbb
lret
outsl
xchg
mov
mov
dec
jnp
inc
cmpsb
mov
add
cmp
mov
mov
mov
xor
stc
ljmp
cmc
and
adc
cmp
int3
mov
ss
cwtl
insb
xor
or
cmp
adc
add
mov
loopne
mov
popa
cmp
mov
stos
out
xchg
stos
xchg
or
inc
pop
sbb
mov
in
cwtl
imul
add
sbb
imul
mov
sub
sub
test
cli
inc
xor
or
repnz
cmp
fsubs
call
ljmp
mov
lock
push
fistps
jbe
and
scas
mov
lods
mov
ret
sub
subb
xchg
cmp
mov
and
mov
stos
mov
cs
mov
imul
lahf
mov
mov
sub
cwtl
sub
fimull
test
cli
loope,pt
dec
mov
out
inc
cmp
xchg
push
xor
ds
dec
fisttpll
xorb
mov
jno
arpl
sub
add
outsb
inc
psllw
cmp
xorl
pop
addr16
push
sbb
xchg
ljmp
xor
xchg
and
xor
fcompl
daa
and
and
call
mov
in
out
cmpsl
cmpsl
push
clc
push
and
rcr
inc
mov
data16
out
iret
jg
xchg
out
in
dec
mov
pop
insl
pop
dec
cwtl
push
js
aas
mov
int3
test
cld
push
jne
push
sbb
jmp
jns
mov
push
or
inc
movsb
push
add
lea
xchg
jmp
jle
and
call
mov
and
negb
shll
inc
sub
shr
int3
dec
repnz
movsb
in
nop
dec
jle
mov
negb
mul
inc
in
int3
push
hlt
test
xlat
fcmovbe
popa
shlb
cvtpi2ps
mov
push
mov
push
xor
popa
fidivrs
lret
mov
xchg
rcrb
nop
vpsubw
aaa
enter
sub
out
jbe
out
and
aaa
sbb
mov
mov
mov
jmp
mov
mov
dec
ss
jp
lds
jle
mov
pop
xchg
fists
jns
jecxz
push
ss
pop
rol
mov
cmc
fsubrp
es
jno
jge
dec
pop
mov
cli
mov
outsb
rorb
call
dec
fmuls
std
fldt
movsb
adc
mov
in
es
sbb
inc
jno
xchg
and
aaa
pop
inc
inc
inc
inc
jmp
jg
jne
jnp
push
mov
stc
sbb
pusha
das
adc
cs
data16
inc
popa
mov
sub
xor
sbb
push
sarl
push
xor
or
scas
lret
sahf
cli
outsl
pop
xorb
test
mov
outsb
insb
push
int
mov
mov
pop
testb
mov
pop
push
nop
aaa
xor
sbb
mov
push
lods
adc
iret
dec
cmp
out
adc
pusha
testb
popf
xor
scas
and
sub
push
and
mov
sbb
push
pop
pusha
mov
ret
data16
mov
jmp
dec
jle
cwtl
icebp
data16
mov
test
and
out
int3
aaa
repnz
push
data16
or
mov
fbld
hlt
popa
std
mov
xchg
out
mov
fnsave
sti
pop
lret
mov
pop
sub
jp
and
nop
add
lahf
inc
inc
pop
fsubs
xor
out
xor
mov
std
sbb
or
and
daa
aas
push
out
cli
cld
inc
cmp
adc
ljmp
clc
cmpsb
rcl
cmp
jns
push
cmp
packsswb
cmc
adc
xchg
dec
bound
aam
cmp
ret
stos
int
divb
insl
aaa
rcrl
and
pusha
jb
ficoms
add
test
and
xchg
mov
lock
lods
scas
cmp
lret
jne
movsl
in
cmp
push
or
xor
sbb
stos
rcrb
push
lods
repnz
inc
aam
xlat
mov
cmpsb
ficomps
dec
jno
dec
inc
mov
xlat
ret
ror
sub
pop
sub
sti
inc
lods
rclb
sub
dec
dec
mov
mov
das
out
push
test
sub
adc
leave
mov
roll
add
add
add
jbe
ret
mov
int
les
xlat
outsl
and
mul
stos
jle
repnz
xor
pop
rcrb
dec
push
into
int3
shlb
jp
or
test
xchg
ljmp
movsl
dec
jg
and
cmpsl
out
mov
idivb
mov
mov
out
jmp
jg
into
popf
mov
int3
xchg
in
repnz
aad
in
inc
pop
dec
add
aas
jns
push
mov
jmp
int
js,pt
pop
adc
push
enter
aaa
jae
xchg
xor
pop
ffreep
push
push
popf
fistl
std
push
mov
push
push
cltd
lods
sbb
mov
dec
enter
jmp
mov
stc
adc
jb
or
fwait
hlt
cmpb
pop
dec
add
les
iret
xor
ljmp
add
fs
js
std
mov
loope
movsb
fstpt
mov
mov
inc
fsubl
jns
loop
cli
add
push
jl
subl
xor
shl
xor
push
idivl
sbb
pushf
cmpsb
sbb
sub
push
jl
outsl
add
lods
lcall
mov
and
pop
int3
std
scas
ds
sub
inc
push
ret
sub
cwtl
gs
cmpsl
mov
shrb
bound
out
sbb
cli
js
lret
les
mov
pop
scas
sbb
mov
sbb
mov
jb
loop
and
cmp
sbb
inc
pop
je
mov
cmp
clc
inc
ljmp
adc
cmc
dec
jbe
pop
fistps
mov
pop
cmpsl
pop
insb
cmp
pop
mov
out
insb
cmp
jbe
fstps
add
test
jne
mov
fcomip
xchg
push
and
sub
mov
xchg
fbstp
xchg
out
sbb
aaa
dec
fisubl
and
and
std
ljmp
into
dec
xchg
out
cmp
pop
scas
add
add
stos
cmp
arpl
outsl
xchg
ret
xor
xchg
sahf
fwait
adc
inc
lods
gs
xor
testb
push
xchg
xor
push
fisttpl
mov
les
or
icebp
xor
icebp
jg
ret
dec
ret
sub
xorb
push
leave
pop
push
lret
pop
mov
sbb
add
test
dec
xlat
jp
cli
push
adc
orl
pop
jo
std
mov
imul
pop
out
ja
sub
xchg
dec
sub
jno
jno
mov
shr
test
lds
gs
roll
inc
inc
stos
adc
add
push
lahf
jae
or
xchg
jns
sarb
and
lahf
pop
in
arpl
mov
and
shll
movl
xchg
push
out
pop
outsl
dec
or
movsb
pop
rclb
jne
ret
inc
gs
loope
stos
loopne
or
andps
mov
sub
imul
mov
jo
mov
pop
nop
ja
xchg
stos
aas
xor
jne
loop
sarl
outsb
scas
aaa
xchg
test
bound
adc
inc
test
icebp
ficoms
dec
mov
aas
fsub
or
hlt
in
sbb
or
stc
hlt
imul
inc
wrmsr
js
les
and
and
icebp
add
iret
les
sub
loopne
and
jae
cmpsb
xor
shrl
pop
dec
fucomi
xor
fwait
push
lods
xchg
pop
ss
xor
repnz
fmul
mov
cmpsb
pop
add
mov
pop
out
xchg
add
jne
push
sub
push
jle
mov
popa
mov
sub
outsb
xchg
into
fidivs
push
rclb
inc
add
aas
js
daa
in
jl
pop
ja
inc
ret
or
inc
fstpt
cltd
lret
sbb
or
mov
lahf
jge
or
jmp
loop
test
xorl
adc
testl
loope
in
jp
sbb
shlb
and
loop
repz
dec
int3
call
nop
mov
mov
push
lock
or
adc
push
mov
jecxz
dec
pop
cmp
subb
sti
sarb
popa
fucomp
mov
mov
jl
cmp
cmpsl
adc
push
sarb
cmp
jnp
daa
test
mov
pop
sbb
ret
or
inc
push
xchg
mov
jbe
adc
xchg
sub
ja
mov
push
jp
lods
ja
cmp
arpl
inc
shrl
cli
loop
sti
sbb
add
sahf
iret
mov
dec
jae
lds
inc
cli
sub
pusha
cmp
jno
lock
inc
add
xchg
lea
dec
adc
ret
fbld
shlb
aas
or
loopne
and
xchg
xor
addr16
mov
mov
push
mov
mov
xchg
adc
mov
call
xor
add
dec
inc
je
xor
jnp
sahf
sub
inc
inc
cmp
bound
sbb
pushl
mov
or
cmp
insl
mov
loope
pop
and
inc
dec
push
out
dec
popa
xchg
lahf
pop
cmp
xchg
xchg
repz
jo
addr16
jle
pop
pop
cli
xor
push
popf
jno
idivl
push
je
sbb
xchg
and
mov
js
sub
mov
daa
jp
js
sbb
dec
mov
cli
sbb
cld
sbb
jg
push
jg
sub
push
jno
inc
push
mov
imul
push
mov
mov
jns
movsl
jmp
movsl
xor
out
icebp
sub
push
xor
mov
push
ljmp
sub
push
xchg
pop
scas
jno
pop
cwtl
shlb
fimull
xchg
fwait
mov
insb
dec
lods
jnp
loope
push
and
or
mov
and
mov
cltd
mov
cmp
sub
add
imul
push
dec
fiadds
pop
shr
xor
std
mov
movsl
jns
inc
or
sbb
aaa
push
push
push
lea
stos
iret
rcrb
js
scas
inc
movsb
mov
jle
xchg
mov
pusha
das
ja
sbbb
pop
inc
or
dec
mov
sbb
xor
out
pavgw
mov
leave
je
mov
cwtl
lea
into
push
mov
sub
dec
popf
push
dec
jbe
dec
mov
sar
and
mov
mov
mov
sbbl
rol
ja
outsl
scas
dec
mov
fstl
fcoml
cmp
mov
xchg
sub
cld
sahf
mov
cmp
decl
outsb
in
inc
hlt
pop
nop
mov
fstps
sbb
or
aaa
pop
bound
jnp
xchg
jle
popa
mov
jns
leave
dec
orb
addr16
scas
rorb
movsb
or
shrb
mov
xorl
dec
adc
xor
inc
jg
mov
idivb
jb
nop
pop
aas
dec
xchg
fwait
inc
push
mov
mov
aas
adc
sub
test
icebp
lods
xchg
pusha
cmpsb
xchg
pop
pop
leave
and
sahf
pop
out
cltd
dec
enter
push
xchg
push
ljmp
lods
push
sbb
imul
inc
out
xchg
xchg
xor
xor
call
push
ds
jp
cmp
jb
out
ds
mov
jg
xchg
pop
xor
add
xor
lods
mov
add
movsl
and
repz
daa
xor
mov
cmpsl
fld
mov
and
xlat
test
imul
xor
push
roll
cmp
inc
xchg
lds
push
or
pop
mov
push
inc
ret
fsts
in
mov
bound
dec
xor
push
add
or
pop
iret
jmp
out
dec
stc
popl
pusha
xor
cmp
imul
jle
test
shll
sahf
data16
mov
and
add
xchg
sub
xchg
je
xchg
mov
repz
fnsave
int
pop
fdivp
sub
es
jecxz
mov
sbb
in
out
fistps
push
mov
roll
cmc
adc
xor
fistps
mov
fistpl
cwtl
fcompl
sub
cmpb
xchg
ljmp
mov
pop
sbb
fadds
xchg
imul
enter
add
jbe
cmp
loop
jl
xor
push
mov
mov
fidivl
test
sbb
aas
mov
lahf
pop
cmp
insb
cmp
mov
sub
add
daa
ret
push
add
push
popa
pop
mov
adc
mov
xlat
cltd
xlat
fimull
adc
sub
xchg
pop
test
iret
in
mov
addl
cli
cld
in
adc
add
js
ret
cmp
cmpsb
jecxz
pushf
cmp
inc
mov
movsl
cmpsb
out
mov
cld
loope
mov
les
jmp
ja
lahf
jno
cli
inc
adc
in
mov
rorl
cmp
sub
pop
sbb
imull
pop
sub
lds
hlt
ret
test
scas
mov
ss
fbstp
sbb
push
xor
dec
out
push
pop
popf
xor
dec
js
sbb
sbb
cmp
mov
ds
sbb
sarl
mov
mov
aas
cmpsb
jb
xor
xor
dec
inc
xchg
push
or
inc
pop
clc
dec
sbb
push
jnp
push
jp
pop
or
fsubs
push
jns
scas
mov
or
gs
pop
adc
shrb
sbb
in
or
lret
push
or
push
sahf
cmp
cmp
pushf
push
mov
cs
incb
mov
loop
dec
cmp
test
push
fcompl
jp
stos
add
jno
fs
test
pop
insl
push
push
xchg
inc
cmpsb
xchg
sbb
insb
dec
push
xchg
dec
jae
push
adc
imul
test
sub
popf
sbb
pop
pushf
jmp
push
jo
outsb
sbb
mov
pop
push
in
movsl
push
and
mov
xchg
stos
sbb
ds
mov
jle
push
mov
imul
in
xchg
std
jb
mov
xor
roll
aad
inc
popf
dec
mov
loop
pop
rcll
pop
or
notb
xchg
subb
lods
jnp
fs
sub
icebp
xchg
outsl
jmp
stos
imul
and
fidivl
es
lds
sbb
fs
clc
add
adc
leave
adc
dec
rcl
fsubrl
fsubrs
sub
push
sub
inc
loopne
scas
lds
iret
mov
mov
jno
aas
pop
and
cmp
xchg
add
rolb
mov
cmc
dec
outsb
stc
int3
orb
mov
inc
imul
sub
add
test
ss
xor
fwait
mov
jl
aas
fistps
cmp
mov
test
out
xchg
jbe
clc
cli
sub
inc
jne
and
mov
das
imul
pop
xchg
addr16
je
inc
sub
in
repnz
push
jnp
jmp
cwtl
sub
mov
mov
push
cli
sub
mov
fcoms
jnp
sub
imul
adc
repz
out
or
mov
ljmp
mov
lahf
mov
cmpb
push
adc
mov
xchg
cmpl
fwait
ret
sbb
subl
aaa
mov
cmpsl
xchg
insb
jg
xchg
adc
imul
popf
imul
dec
dec
gs
xchg
in
mov
outsl
add
out
divps
dec
mov
jg
sahf
enter
test
sub
add
ret
xchg
int3
xchg
movsl
pop
cmp
xor
xchg
sbb
mov
pop
jle
loopne
push
das
xorl
jge
jmp
flds
mov
ret
mov
scas
mov
pop
push
mov
lock
js
dec
push
sbb
loop
add
les
jmp
cli
dec
push
sarb
in
rorl
nop
into
mov
dec
insb
sbb
jmp
dec
mull
cmp
gs
mov
in
add
push
rorl
add
fcompl
cmp
inc
aaa
out
test
mov
sahf
fyl2x
push
insb
pop
vmovlps
idivb
out
mov
jp
lcall
mov
xchg
cmp
leave
sbb
out
sbb
sahf
loop
bound
lahf
xlat
testl
and
sbb
and
stos
sub
sub
pop
out
adc
lcall
inc
sub
mov
inc
in
cmp
inc
movsl
pusha
cmpsb
cmovle
out
pop
out
fs
dec
dec
lea
add
shll
jmp
jle
orl
xor
add
cmc
jo
mov
aad
scas
mov
pop
sub
dec
or
push
adc
dec
mov
push
int
push
insl
dec
ja
mov
pop
mov
mov
jo
lds
mov
adc
add
mov
movntps
pop
pushf
xchg
ret
lret
adc
jg
dec
jo
sti
cmpsb
out
adcb
jb
or
aas
mov
ret
mov
ret
stos
and
and
sub
push
jge
cmp
cmp
mov
enter
push
sub
dec
aam
mov
lods
and
ja
pop
fnstsw
pop
lret
fwait
cwtl
xchg
aam
lea
dec
mov
cmp
add
repz
lcall
mov
dec
or
push
idiv
arpl
cli
sahf
inc
neg
jns
into
and
pop
inc
out
adc
xor
insb
mov
hlt
test
out
pop
es
lret
mov
div
jne
outsl
adc
les
xchg
or
sbb
ds
in
and
mov
sahf
or
adc
push
mov
and
xor
pop
insl
mov
cmpsl
sahf
outsb
test
bnd
mov
pop
test
jge
jo
pop
and
aaa
loopne
mov
pushf
mov
daa
cmp
mov
mov
inc
stc
jle
addb
push
mov
adc
jp
lret
xchg
gs
dec
scas
push
add
cmp
and
test
inc
sub
pop
dec
jne
sbb
stos
sbb
lcall
jne
lods
arpl
filds
ret
dec
faddl
fistpl
test
inc
sbb
mov
add
or
lods
fdivrl
xorb
or
cmp
ljmp
mov
mov
mov
lcall
pop
imull
xor
dec
fcmovnu
imul
add
es
mov
pop
test
dec
inc
push
mov
mov
int
mov
fimull
sbb
push
adc
stos
mull
int3
pop
and
pushf
mov
pop
ss
cmp
cmp
pop
xchg
imul
flds
pop
dec
mov
mov
dec
je
adc
je
test
sub
sti
test
cmpsl
xchg
nop
data16
test
imul
jmp
cmp
add
lcall
adc
push
mov
imul
ja
ss
insb
fistl
inc
daa
daa
stos
std
xor
push
or
jp
xchg
jmp
into
inc
int
jmp
or
add
xchg
jb
loopne
or
or
pop
mov
out
rcl
les
icebp
xchg
push
sub
subl
sub
out
adc
data16
iret
into
mov
lock
fisubs
and
mov
into
pusha
daa
ret
movsl
inc
adc
or
sub
arpl
inc
mov
pop
shlb
push
pop
jecxz
jne
xchg
inc
out
fcmovnu
add
xchg
sub
add
xchg
pop
arpl
push
lcallw
fisubs
rolb
subb
inc
cmp
xchg
loop
pop
out
outsb
in
mov
mov
in
rol
loop
push
fnstsw
push
loopne
mov
adc
lret
jecxz
leave
lods
add
dec
repz
pusha
xchg
cmp
shlb
lret
out
rcr
mov
jnp
cmpsb
dec
xchg
aaa
lret
jno
inc
into
aam
cli
dec
add
stos
out
sti
or
daa
sbbl
sar
or
test
out
mov
sbb
mov
in
xor
sub
fndisi(8087
mov
sub
fadd
cltd
lret
sub
daa
inc
inc
fchs
inc
daa
sub
mov
or
iret
fwait
cmpsb
or
ss
shrb
xchg
sbb
mov
mov
mov
push
xchg
xor
aaa
jge
aad
pop
lret
and
push
das
int
call
int3
mov
sub
les
in
mov
xlat
test
frstor
mov
adc
in
and
add
lods
adc
and
daa
sub
or
loopne
imul
scas
cmp
adc
jp
mov
scas
arpl
lds
mov
int3
enter
fnstenv
ljmp
mov
mov
sub
repnz
push
cs
insb
data16
ret
jge
sub
lret
mov
mov
roll
xchg
fldt
dec
loop
pop
xor
jecxz
mov
addr16
out
sbb
cmpsl
mov
repz
ret
pop
pushf
xor
jmp
or
scas
sub
pop
pop
dec
lahf
aad
sub
movsl
scas
jmp
sbb
sbb
out
popa
imul
aaa
mov
sub
dec
sbb
dec
mov
add
xor
je
cli
adc
repz
jno
fbld
mov
arpl
mov
xchg
orb
std
scas
jb
mov
out
jecxz
inc
inc
es
in
mov
je
ret
sub
push
mov
sub
hlt
inc
out
mov
ds
arpl
movb
sahf
dec
test
es
inc
mov
or
daa
xor
ljmp
sarl
dec
call
sub
fisttps
jge
jbe
in
rclb
sti
mov
ss
sub
cli
mov
fimull
clc
scas
mov
ss
lods
push
cltd
cmc
lcall
pop
imul
pop
inc
addr16
out
jno
inc
jl
out
push
in
orb
mov
jns
pop
mov
jge
insb
jle
sbb
and
and
rcll
jmp
stos
test
inc
enter
mov
cli
or
sbb
and
test
inc
stos
in
aaa
scas
cmpsb
xchg
or
cmc
fs
xchg
ds
adc
test
mov
out
out
lret
outsl
sub
jp
decb
stos
js
add
jno
pop
sub
and
xor
sbb
sti
adc
xor
divb
das
dec
into
mov
jge
loopne
aaa
mov
icebp
imul
mov
inc
movsb
and
add
sti
xchg
fisttpl
fistl
sahf
aas
cmp
xchg
fwait
mov
popf
pop
test
je
subl
roll
in
push
cmp
lods
sub
push
push
mov
jp
add
rolb
inc
push
pop
inc
jle
rorl
mov
mov
ficomps
repnz
in
call
mov
pop
mov
and
into
pop
push
sbb
mov
addr16
lret
add
rol
addr16
hlt
mov
aad
cmp
lods
pop
inc
dec
popa
jno
jge
mov
mov
mov
aas
sub
enter
orb
popf
stc
mull
pop
aam
dec
stos
scas
and
cmpb
inc
loopne
into
inc
xor
cmp
mov
rorb
sub
stos
mov
inc
ds
ret
lcall
inc
test
jge
lock
mov
into
cmc
add
fwait
xor
jnp
test
mov
mov
mov
scas
mov
mov
sub
cmp
lds
jecxz
xlat
dec
ret
jb
xchg
mov
pop
sub
jne
loope
or
pushf
lcall
popf
bound
fadd
shlb
lret
dec
lret
jb
fdivrl
xchg
iret
fisubrs
xor
andb
push
mov
mov
sbb
rorb
repz
scas
testl
jbe
pop
xchg
mov
vmread
xor
fildl
mov
mov
mov
lods
push
fildl
sbb
outsl
inc
push
les
lret
outsl
mov
sbb
mov
sarb
adc
jecxz
push
lret
sbb
xlat
scas
cmp
test
sbb
push
add
fsubrs
mov
rcrl
cmpsb
test
xchg
lods
sub
cwtl
and
push
lds
std
dec
sti
add
sub
movsl
test
or
cli
jno
shlb
sub
scas
push
pop
fcmovb
mov
test
or
cmp
dec
adc
xchg
sar
popf
outsb
adc
dec
pop
out
push
mov
or
pop
mov
in
aaa
xchg
ret
jne
xor
cmpsb
mov
pop
js
or
sub
sub
xchg
xchg
cmp
cld
aaa
push
loop
in
aas
lods
mov
sub
and
movsl
and
mov
sbbl
out
cltd
pop
xor
sbb
imul
pop
popa
push
xor
jno
jae
add
orl
cmp
xchg
mov
rcrl
xor
test
xor
addr16
hlt
cwtl
and
xchg
mov
stc
outsl
mov
fs
mov
xlat
xchg
add
adc
je
ret
xchg
cltd
sub
ljmp
lret
repz
mov
stos
sbb
jae
es
jbe
push
in
add
push
mov
cmp
mov
cmp
cmp
rolb
mov
push
inc
jns
cld
enter
add
test
loop
xchg
std
scas
xchg
push
pusha
lods
insb
xor
lcall
pop
aaa
daa
js
call
shrb
addr16
int3
paddsb
mov
repnz
adc
mov
jns
scas
sbb
inc
dec
jle
inc
jecxz
rcrb
stos
sbbl
xor
pop
out
cmp
cli
dec
sahf
or
pop
stc
into
mov
test
fsub
ret
xchg
int
mov
cmp
scas
mov
fstps
push
adc
and
setnp
movsl
sti
jl
stc
adc
or
and
outsl
sub
iret
add
jo
mov
sub
test
outsb
addb
push
mov
add
xor
ret
mov
das
cwtl
push
add
gs
xchg
in
inc
jo
fstpt
push
movsl
faddp
fsubrl
push
loopne
inc
xor
sub
mov
jae
fdiv
clc
into
pop
pop
icebp
sub
push
iret
cmp
mov
push
sub
jnp
je
jbe
jnp
and
sub
iret
aaa
inc
ds
loope
mov
lds
xorl
nop
sub
xlat
ret
sbb
mov
sbb
pop
imul
xor
pop
add
cmp
adc
or
out
and
rorl
xchg
cmp
cmp
jp
icebp
xchg
xor
insb
in
insl
inc
dec
aam
faddl
mov
inc
jne
push
and
in
adc
aad
mov
xchg
mov
mov
mov
add
mov
es
jle
pop
inc
jmp
clc
mov
sbb
cmp
inc
jb
fldl
sbb
jge
mov
cld
xchg
adc
addr16
out
or
push
add
cli
cmp
lods
mov
adc
cli
movsl
int
into
scas
ss
jb
testl
ljmp
and
mov
cmp
nop
jo
jb
pushf
arpl
xor
fisubrs
hlt
je
jmp
cmp
sbb
push
sub
dec
fucomi
xchg
in
add
jle
mov
lcall
jg
sbb
sub
pusha
dec
sahf
imull
cld
into
ret
repz
push
cmp
cmpsl
inc
gs
jns
mov
mov
or
test
sti
fimull
out
add
mov
lods
mov
subb
icebp
rol
das
in
ud0
movsl
dec
xbegin
out
scas
imul
lods
or
mov
rolb
sub
cmp
cmp
inc
mov
jecxz
mov
dec
dec
imul
sbb
lea
push
mov
jne
das
testb
mov
repz
cmpsl
push
sub
sub
sub
adc
pop
inc
sbb
dec
call
pushf
aam
clc
xchg
cltd
in
clc
adc
mov
rorb
xor
bound
sbb
ret
mov
es
sub
cmp
ret
xchg
xchg
lcall
inc
test
loop
hlt
lods
pop
fcmovbe
dec
jl
jl
cmp
or
xchg
or
jnp
imul
lea
imul
jbe
add
adc
xor
xchg
in
push
leave
jge
gs
outsl
scas
cld
ficoms
sbb
adcb
outsl
push
js
sub
push
jg
mov
js
inc
dec
scas
pop
orb
inc
pop
xlat
lds
lcall
jnp
jae
ss
mov
fsts
clc
xor
mov
repnz
jae
xor
adc
out
sub
push
into
loopne
adc
out
addb
push
xchg
dec
add
or
xlat
jns
mov
enter
cld
pushf
loop
xchg
sub
aam
adc
ja
rclb
jecxz
adc
test
movsb
sbb
cmpsl
cwtl
xchg
mov
ret
out
shrb
icebp
orb
in
daa
js
jae
es
add
inc
mov
sahf
cli
sub
add
cmp
fucom
add
movsb
das
sbb
push
xor
cmpsb
sub
push
dec
sti
daa
adc
mov
stos
pop
inc
push
in
sub
mov
dec
outsl
and
jmp
sub
in
ror
xchg
ss
bound
and
testb
enter
insl
sub
push
jnp
shll
push
int3
icebp
ret
sbb
jae
xor
rclb
lods
push
jle
adc
adc
cmp
jle
mov
and
or
andl
shll
xlat
mov
xor
lahf
inc
sub
push
fwait
lret
dec
lret
mov
jb
test
lea
sub
loope
nop
stc
fdivrl
insb
jb
mov
dec
inc
adc
jge
ss
dec
sub
adc
xor
jae
push
test
mov
rolw
mov
jp
idivl
mov
sbb
adc
mov
rcrb
push
stc
add
lret
daa
ss
lcall
pop
cmp
adc
int
roll
out
enter
adcb
mov
mov
add
shrl
cmp
and
shll
mov
dec
lods
xlat
iret
imul
adc
add
ja
xor
sub
lcall
clc
mov
in
dec
mov
cmpsb
stos
push
iret
inc
imulb
xchg
out
iret
je
jns
popl
add
shll
jge
xchg
adc
sbb
jne
add
cmpb
xlat
sub
pop
stos
inc
cmp
repnz
xor
push
inc
sbb
lods
lds
nop
shll
inc
iret
jbe
jg
outsb
cmp
imul
lds
leave
mov
xchg
ja
jg
dec
lods
ja
push
inc
out
push
or
inc
add
scas
loopne
je
cmc
adc
jmp
test
aam
into
pop
daa
lcall
jno
sub
pop
jl
dec
daa
inc
addr16
andb
sub
aaa
jle
icebp
mov
cmp
std
mov
sub
arpl
jbe
and
and
fldcw
je
jno
loopne
xor
aam
test
loop
add
mov
mov
loope
rcrl
and
out
mov
mov
imull
xor
xchg
ss
pop
fcmovnb
bound
pop
sbb
outsb
mov
fdivrl
fnstenv
jmp
lahf
sar
out
jp
inc
fs
iret
cmpsl
cmp
test
lret
pop
adc
jle
mov
mov
mov
lods
addr16
shlb
xchg
sbb
ficoml
dec
int
fcmovnbe
loopne
pop
mov
cs
inc
iret
push
pop
adc
jno
pushf
mov
shlb
fs
jmp
dec
and
inc
xchg
inc
jmp
mov
fisubs
mov
or
outsb
sbb
push
xor
iret
push
or
cmpsb
fdivl
repnz
ja
sub
mov
or
aam
test
dec
and
inc
dec
jle
or
dec
sub
jecxz
sub
jg
mov
aaa
js
daa
in
jg
test
push
mov
inc
push
popa
or
cltd
minps
pop
imul
pop
jp
jecxz
mov
add
pop
out
xor
mov
sub
push
negl
dec
pop
sbb
mov
in
std
pop
call
call
daa
shrb
sbb
pop
aas
mov
jb
cmp
or
mov
lds
cmp
xchg
std
fndisi(8087
adc
adc
test
sbb
sahf
daa
xchg
mov
mov
mov
pop
mov
dec
and
push
lods
xchg
shlb
sbb
add
mov
cmp
out
dec
and
cmp
mov
sub
inc
mov
ret
test
mov
mov
inc
or
bound
adc
flds
xlat
insl
inc
loopne
cmp
jb
cs
js
cmp
jns
aam
jge
es
icebp
clc
mov
rcr
sbb
dec
icebp
xor
in
mov
pop
pop
jbe
ss
fidivl
dec
adc
cmpsb
mov
mov
push
fs
inc
push
sbb
xor
sbb
jb
ja
outsb
inc
cmp
pop
rcrl
mov
repnz
push
pushf
ffreep
xor
xor
lds
pop
mov
pop
mov
add
pop
aam
lcall
push
stos
jbe
xchg
fcmovnb
test
roll
es
cmpsb
mov
inc
push
into
ret
mov
pop
pop
scas
cmc
ret
das
ret
movsb
in
in
cmp
outsb
or
mov
push
insb
pop
std
int3
mov
fwait
xor
repz
das
imul
xor
sti
and
ret
hlt
addb
orl
fsubrl
ljmp
dec
jne
adc
push
movsb
xor
repnz
push
clc
sub
mov
out
int3
outsb
ds
test
out
fcomp
jo
jp
mov
aam
mov
sub
jne
cwtl
pop
paddusw
sti
dec
aam
shll
imul
jle
xchg
xchg
dec
xlat
adc
cmc
jge
insl
dec
xchg
jp
mov
ffree
mov
sub
dec
aam
outsl
add
cltd
aas
clc
in
push
mov
and
mov
add
pop
enter
je
sub
push
xor
enter
xchg
and
xor
mov
mov
bound
jbe
inc
mov
xchg
imul
sub
jg
fdivl
repnz
lea
and
inc
jbe
cmp
fnop
push
pop
dec
loop
adc
insl
xor
cmp
sbb
xchg
rcrb
rclb
inc
movsb
or
test
out
fldt
push
jnp
notl
jno
fldl
dec
push
and
or
shl
aaa
xor
sbb
icebp
sti
iret
xor
dec
mov
dec
cmovb
cmp
adc
xor
mov
push
push
js
dec
lcall
push
pop
cmp
xchg
and
and
int3
xor
mov
orl
mov
pop
mov
test
leave
mov
inc
xor
inc
mov
out
push
cmpsb
fbstp
mov
das
adc
addr16
aam
mov
pusha
je
sbb
cmp
cmpl
insb
setb
inc
xor
aad
fiaddl
mov
bound
mov
push
loopne
mov
jmp
iret
cmp
cs
mov
lock
jbe
dec
in
pop
push
pop
fsubrl
sub
repz
xor
sbb
gs
jg
ret
pop
jns
mov
inc
mov
mov
dec
xlat
lock
jnp
sub
cmpsb
mov
push
mov
les
ljmp
and
xchg
clc
cmp
jnp
push
fs
xchg
mov
mov
lds
js
fiadds
ljmp
ret
rol
inc
jns
out
pop
dec
or
cmp
fisttpl
xchg
and
sbb
mov
add
jbe
andl
and
ljmp
push
imul
int
mov
dec
ja
push
imul
ffree
inc
xlat
repnz
mov
sahf
test
movb
cmp
xchg
push
loop
arpl
push
jbe
repnz
cmp
shlb
sbbb
dec
imul
pop
sub
dec
hlt
xchg
leave
rclb
aad
adcl
int
shrl
mov
jne
pop
cwtl
pop
and
mov
dec
dec
mov
pop
outsl
addl
stos
fs
aaa
sub
or
popa
int3
mov
pusha
jl
mov
push
pop
rclb
jno
je
push
popf
clc
mov
out
movsl
fwait
iret
mov
imul
push
pop
or
or
pop
mov
sbb
stos
mov
mov
sub
mov
and
xor
das
inc
mov
aad
cld
mov
andb
aad
pop
cmc
mov
and
and
pop
lea
push
jne
rcrb
inc
les
sub
frstor
mov
arpl
test
pop
jb
add
sbb
jge
inc
daa
push
fidivl
enter
stos
addl
xchg
imul
jbe
adc
or
iret
daa
push
clc
or
mov
inc
scas
mov
into
jns
stos
inc
arpl
and
test
jmp
add
jecxz
add
xchg
xor
in
ficompl
orb
pop
pushf
lods
in
sbb
cs
ds
xchg
push
xchg
xlat
mov
stos
lea
sbb
fisttpll
out
jl
mov
call
dec
loope
enter
cmp
in
xor
xchg
pusha
adc
in
ljmp
ret
imul
imull
and
sub
sbb
clc
out
fwait
or
mov
testb
in
cwtl
push
or
mov
mov
add
cltd
jmp
xor
cs
mov
pop
inc
inc
jbe,pn
scas
or
fwait
jae
enter
and
test
jmp
into
mov
es
add
daa
xchg
cmp
mov
mov
xchg
data16
mov
push
pusha
leave
mov
jl
inc
xor
xor
repnz
mov
js
ja
push
movsb
imul
jecxz
out
jp
inc
cwtl
aaa
icebp
jns
shlb
sub
out
movsb
cmp
pop
dec
sar
ret
popf
icebp
inc
lea
cs
das
dec
mulb
in
xorl
out
pop
cmp
in
jnp
cmpsb
cli
into
das
and
lcall
in
push
movsl
xor
sti
dec
test
push
cmp
subl
push
ret
test
sbb
push
in
and
lret
test
js
dec
in
int
mov
sub
xchg
dec
mov
and
jecxz
cmp
aad
cmp
inc
or
ret
out
lods
daa
lods
xchg
out
ret
lea
cmp
add
lret
and
push
rcrb
imul
sub
and
mov
adc
ja
je
mov
cmp
int3
adc
xchg
dec
mov
loope
add
lret
lahf
xlat
xor
ficoml
arpl
repnz
xor
rcr
shl
out
scas
loop
cmpsl
arpl
aad
jmp
imul
ss
in
jb
jecxz
adc
cmpb
sub
add
sub
mov
subb
add
push
addr16
fmuls
sti
call
test
rolb
mov
jae
insb
pop
fstpt
mov
loope
jo
adc
in
fsubs
outsl
push
repz
push
mov
cmpsb
gs
scas
or
jbe
mov
mov
pop
loopne
mov
mov
pop
dec
andl
popf
pop
cmp
add
inc
push
in
jp
loop
nop
dec
fnsave
cmp
pop
scas
decb
pop
sbb
stos
pop
mov
testb
lcall
lea
mov
push
test
pop
sub
cmpsb
data16
int
xor
inc
and
or
lock
xchg
icebp
mov
and
call
fs
mov
sbb
mov
mov
fcoml
pop
fldt
cld
cmp
stos
fcom
cmc
int3
cwtl
and
in
addr16
mov
ljmp
cld
mov
stos
movsb
fsubrs
insl
xor
test
mov
scas
mov
rorb
enter
daa
xchg
clc
ds
inc
sub
or
sub
fadds
nop
jecxz
scas
xchg
aas
jecxz
inc
leave
sbb
sub
or
lods
jge
divb
mov
xchg
mov
je
inc
decb
andb
clc
pmulhuw
mov
dec
outsb
push
mov
jb
mov
inc
cmp
mov
inc
fdivs
adc
xchg
xor
ret
mov
mov
shlb
subl
ds
cld
loope
adc
enter
xor
ss
xchg
lock
out
add
lret
jmp
xchg
push
bound
out
add
std
std
push
mov
add
das
push
mov
inc
inc
pop
roll
sbb
jmp
enter
sbb
sub
mov
dec
adc
inc
fadd
push
or
xchg
push
mov
mov
repz
cmp
icebp
mov
jno
push
xor
lods
or
mov
cmp
scas
push
dec
ret
jmp
into
push
subl
es
imul
lods
push
lods
aas
das
mov
mov
imul
add
outsb
int3
mov
xchg
inc
das
div
dec
mov
adc
ds
loope
out
mov
adc
adc
and
and
or
inc
clc
dec
inc
jb
mov
cmpxchg
imul
int
testb
mov
arpl
xchg
fisubs
nop
cwtl
dec
sti
shlb
dec
adc
lret
clc
cli
push
test
mov
mov
or
xchg
iret
outsb
inc
mov
mov
mov
cmpsb
fnstenv
cmc
inc
xchg
stos
out
adc
cmp
mov
enter
push
clc
sbb
pop
stos
pop
xchg
rcl
int
lret
nop
sbb
jno
inc
sbb
mov
ss
out
nop
mov
lret
cld
dec
stos
jecxz
and
stos
pop
dec
movntps
enter
jne
mov
dec
in
dec
ffreep
rorb
sub
jnp
in
insb
lahf
inc
inc
stos
jno
adc
push
or
pop
fisttps
sbb
xchg
xor
int3
push
sbb
lret
daa
sub
outsb
das
lret
cmc
out
rol
pop
ljmp
jno
loopne
dec
add
shlb
inc
les
or
and
mov
imul
mov
fisubrs
mov
pop
jb
sbb
iret
cli
cmc
add
and
mov
xor
cmpsb
xchg
stos
jnp
jl
dec
subl
push
push
out
jo,pt
xchg
pop
cmp
lahf
cmp
test
das
bnd
mov
shr
add
xor
mov
rorb
mov
jl
dec
sub
adc
pop
sbb
add
add
lret
movsb
in
cmp
js
test
xchg
imul
sti
inc
enter
sbb
xchg
adc
add
or
pop
xchg
fcomp
xchg
push
ds
loop
push
fisubrs
fistps
cmp
push
stos
pusha
addl
cmp
sbb
lods
popf
lahf
bound
clc
xchg
sarl
lock
push
add
mov
insl
inc
add
mov
jo
jmp
outsb
in
stos
es
stos
push
fsubrp
xchg
mov
adc
jo
fmulp
cmc
dec
dec
or
fmulp
je
stos
and
xchg
nop
push
mov
repnz
sbb
aad
aaa
mov
jnp
mov
pop
lea
mov
jns
das
inc
fyl2xp1
pushl
sbb
jp
inc
pop
aam
cmp
mov
push
mov
rcrl
push
mov
loope
nop
int
test
rorb
and
movsl
unpckhps
xchg
sarb
test
pop
subb
andb
mov
mov
push
pop
lcall
jl
xor
call
push
fcoml
aam
add
rclb
adc
cld
daa
leave
int3
mov
mov
mov
dec
sub
orl
push
jnp
push
hlt
leave
ss
divl
pop
pop
lcall
xor
jg
fidivs
xor
xchg
fnstsw
cmp
adc
shl
and
mov
mov
insb
push
test
sbb
xor
in
inc
fwait
cltd
inc
mov
sub
or
and
and
aas
push
push
js
inc
add
das
ds
dec
std
push
sub
sub
push
in
xor
push
lret
loop
ljmp
dec
sub
jg
insl
sbb
mov
xchg
xchg
xor
mov
or
cmpsb
int
scas
int
pop
shr
test
jp
lods
ret
inc
in
ret
popa
in
push
xchg
jbe
add
sub
lds
or
btr
cmc
orl
push
out
scas
mov
add
test
fwait
add
jne
dec
loopne
jnp
jbe
enter
stc
cmp
jmp
lock
lds
pop
lahf
std
add
jge
add
jecxz
mov
cmpsl
shlb
cmp
pop
imul
xor
hlt
push
add
mov
out
adc
fwait
jmp
mov
cmp
add
dec
iret
jne
pop
adc
xor
out
add
jmp
inc
scas
das
addb
push
out
scas
xor
repz
inc
and
add
jle
pop
or
ja
push
popa
ss
mov
cwtl
mov
sub
lret
enter
dec
popa
lahf
ret
sub
fnstsw
lds
xor
dec
adc
lret
add
mov
fnsave
sub
xchg
mov
inc
dec
jns
into
or
fnstsw
lret
inc
shlb
or
pop
cmpsb
mov
and
jg
xor
inc
sub
leave
xchg
in
dec
pop
aas
lds
test
jb
sbb
cmp
cmpsb
jne
sub
lods
aaa
icebp
jne
sub
sti
jae
push
insl
nop
out
and
icebp
lods
int
fistpl
xor
popf
mov
push
ret
into
jmp
in
add
cmp
mov
mov
jnp
or
xor
and
dec
pushf
cmp
mov
jo
iret
inc
mov
jbe
mov
mov
cli
mov
fldt
and
in
popf
sbb
xor
inc
mov
pusha
sub
repnz
or
test
dec
jge
ret
adc
insl
push
scas
cwtl
push
outsb
cmp
pop
js
push
mov
inc
jns
add
mov
dec
push
push
adc
pop
out
or
xor
sbb
out
xor
mov
dec
jne
sahf
les
repz
ds
arpl
jb
lods
cmp
arpl
mov
lods
mov
xchg
out
lock
mov
inc
daa
or
out
and
roll
dec
pop
mov
inc
sbb
xor
lods
inc
mov
push
int
cmp
es
jb
loopne
insb
in
sbb
adc
insb
shlb
cmp
push
cmpsl
and
icebp
jae
hlt
les
dec
lahf
xor
mov
or
test
ljmp
push
dec
inc
pushf
je
pop
jb
dec
and
cmpsb
cmp
call
pusha
mov
pop
stos
inc
pusha
sbb
into
cmp
scas
cld
dec
xchg
mov
xchg
jbe
cmp
mov
sbb
popa
push
aad
sbb
ja
movsb
ja
lock
bnd
and
imul
dec
outsl
sub
cmp
mov
push
in
in
pop
cwtl
data16
or
out
jne
imul
dec
jns
iret
ja
add
pop
cmc
jl
movsl
cmpsb
in
xor
out
out
xor
sbb
pop
sub
mov
pop
push
mov
adc
add
loopne
xchg
insb
ljmp
sub
fistpl
cs
sahf
movb
ret
cmp
in
fcmovu
dec
stos
incl
shrb
xchg
cmp
rcl
inc
mov
or
mov
mov
xor
mov
mov
or
add
repz
xor
inc
andb
jp
adc
sar
js
add
jmp
roll
and
push
movsl
jnp
cwtl
mov
std
mov
mov
sub
loop
sbb
jae
and
pushf
pop
sahf
loope
mov
jb
mov
popf
mov
aam
inc
jns
adcb
insl
mov
and
push
aam
push
inc
mov
pop
pop
std
xor
xchg
dec
mov
scas
inc
jp
mov
xchg
shll
mov
sbb
inc
mov
sahf
cmc
jbe
inc
xchg
fwait
xor
pop
inc
cltd
cwtl
aas
lss
jo
iret
aad
and
ret
xchg
in
rcr
rorb
xchg
mov
jb
cwtl
mov
cmp
push
and
adc
jne
push
push
push
fwait
cmp
sbb
mov
in
dec
sub
lcall
imul
push
mov
sub
cmp
shll
roll
push
nop
dec
push
in
mov
jge
stos
or
jno
dec
push
lret
lds
xchg
test
sbb
and
xchg
xchg
insl
negl
movsl
iret
insb
cltd
push
mov
movsl
push
ja
imul
bound
loopne
addb
push
orb
xchg
cli
and
sub
repz
imul
inc
sub
fsubp
mov
pop
sti
mov
and
icebp
movsl
fcomps
lcall
sbbb
std
xor
pop
adc
mov
cmpsl
mov
das
fmuls
inc
imul
sub
dec
out
xchg
dec
xor
sub
mov
or
pop
fcoms
inc
cli
loope
into
sub
sbb
push
push
cli
jne
xchg
ficomps
std
or
js
pusha
xor
in
mov
inc
sbb
xchg
mov
push
pushf
aaa
xor
test
sti
sbb
mov
addr16
mov
test
pusha
in
mov
inc
aad
sarb
jnp
mov
mov
psllq
lcall
xor
shll
mov
xchg
lds
xorb
jle
lret
call
push
jnp
jp
inc
aad
jmp
mov
add
std
xchg
sub
or
dec
mov
add
int
or
pop
mov
sbbl
rorb
outsl
cmp
sub
mov
nop
inc
adc
lret
mov
repz
xor
scas
pop
aad
cli
xchg
push
lods
pop
mov
pop
push
outsl
and
rcr
push
jl
cltd
lods
pop
data16
pop
pop
int
jae
xchg
sbb
fisubs
mov
pop
xor
pop
fxch
mov
testb
lods
shl
xor
mov
jecxz
rorb
idivl
jno
xor
rcrb
and
inc
jecxz
lret
cltd
inc
ret
push
pop
dec
jmp
ss
adc
pop
imull
push
cld
movsb
or
dec
js
dec
mov
movsb
test
adc
orl
ficomps
cmp
scas
imul
xchg
and
fadd
xchg
adc
pushf
jle
popa
ds
inc
add
bound
outsb
inc
push
aaa
add
jno
sub
arpl
mov
dec
lret
movsl
lea
test
frstor
lods
push
sahf
sbb
loopne
or
icebp
xchg
adc
adc
cmpsl
repnz
add
mov
out
imull
pop
jmp
adc
shr
cltd
negl
hlt
stos
adc
mov
pop
rcr
imull
call
stos
mov
jne
jnp
and
ret
jmp
jnp
dec
inc
ret
out
fwait
testb
insb
fdivr
in
sbb
aaa
push
adc
or
lea
lods
and
rorl
movsl
aam
sbb
cmp
ljmp
mov
dec
mov
sub
out
lcall
es
pop
and
sar
out
and
adc
in
or
push
and
push
and
sbb
jns
dec
pop
daa
dec
jmp
pop
sub
into
jmp
lret
add
in
adc
dec
retw
add
jo
push
and
hlt
sub
xchg
push
inc
addl
jnp
notl
jl
fiadds
lods
jb
call
popf
sub
out
and
pop
and
js
nop
mov
out
dec
pop
mov
stos
adcl
mov
pop
das
inc
enter
aas
add
call
out
inc
inc
adc
jmp
push
sub
fadd
dec
imul
lret
inc
test
and
xchg
iret
sub
sbb
mov
sub
andb
jmp
cmc
xor
imul
iret
mov
orl
xchg
xchg
or
add
stos
or
int3
and
xor
push
popa
push
jg
icebp
sbb
dec
pop
imulb
dec
ret
jl
imul
test
adc
je
pop
std
inc
and
mov
mov
das
xor
adc
inc
push
shrl
adc
andl
mov
sbb
out
sarb
pop
mov
cmp
jno
imulb
jecxz
repz
inc
xchg
gs
mov
mov
push
popa
xor
lock
xorl
push
mov
sbb
xor
iret
mov
lcall
cmpb
cmp
jo
mov
mov
xchg
push
jno
loop
mov
je
test
jmp
repz
inc
push
sbb
xchg
or
pop
movsb
fcomi
adc
jno
fiadds
inc
clc
or
xor
or
push
mov
in
int3
imul
stos
adc
pop
movsb
popf
mov
sbbl
dec
filds
jecxz
push
adc
mov
mov
shll
lds
stos
adc
mov
ficoms
stos
push
xor
jo
cmp
mov
fsubr
addr16
and
pop
cmp
cltd
icebp
in
push
outsb
iret
sbb
mov
jle
push
xor
jg
imul
cmpl
adc
mov
hlt
pop
adc
out
fld
hlt
enter
cs
ret
fbstp
repnz
push
insb
rcl
push
mov
loope
fimull
test
outsb
push
jns
rcrl
fisubs
sub
stc
or
mov
push
or
mov
aad
xor
jb
flds
xchg
shll
shll
push
fidivl
inc
push
mov
xor
xchg
pop
out
leave
shr
push
sub
dec
stos
rcll
xor
mov
sbb
std
nop
adc
push
loope
mov
dec
lods
imul
ud0
std
push
sub
xor
xchg
fcoml
js
xchg
outsl
and
test
bound
sbb
outsb
add
mov
loop
xchg
test
adc
or
pop
xor
push
loop
imul
xor
inc
lods
ja
lcall
fisttpll
hlt
sbb
dec
cmpsb
xchg
sahf
and
cmp
dec
roll
sbb
aas
mov
ret
push
add
aaa
insl
dec
loop
test
jns
sub
fucomp
imul
cld
or
insb
inc
idivb
xor
or
mov
pop
xor
aas
scas
and
popf
cmp
ss
in
push
xlat
mov
push
lcall
les
cltd
and
js
int
jbe
ss
lods
cmp
outsl
cmpl
loop
cli
jne
push
mov
fucomp
push
push
mov
stc
jle
mov
dec
xor
testb
outsl
test
inc
dec
push
loopne
popa
mov
rorb
loop
rolb
and
test
test
sbb
jle
in
sarl
inc
movsl
repz
hlt
pop
enter
clc
jnp
rcrb
outsb
pop
lret
pop
sbb
mov
pusha
test
imul
ret
mov
mov
mov
outsl
jge
push
pop
sar
xor
jl
mov
stos
shlb
cli
fnstsw
pop
out
pop
popa
jo
stos
loop
push
cmc
push
cmp
dec
enter
pop
loop
dec
jmp
mov
mov
and
cld
inc
mov
clc
cltd
rorl
sub
scas
lds
mov
dec
jno
loope
xchg
imul
jmp
fcmovnb
test
std
insb
sbb
fld
adc
mov
test
aaa
sub
or
and
xchg
pop
xor
ss
inc
xchg
ror
sub
cmp
cmp
pushf
fildl
test
out
sub
push
jmp
lahf
and
xor
int
loope
mov
negl
lret
push
push
daa
int
insb
jns
negb
hlt
xor
pushf
cmpsb
sub
xor
and
lods
push
push
and
pop
jg
shrb
inc
xor
cwtl
add
lcall
out
jmp
in
jbe
mov
fstpl
add
mov
cs
push
test
repz
idivb
test
cwtl
cmc
cmpl
sti
adc
cmp
ret
pop
or
add
xchg
frndint
je
cwtl
inc
mov
lcall
out
scas
sbb
loop
dec
inc
mov
push
pop
and
mov
sub
lea
gs
adc
rorl
dec
push
jge
scas
adc
sbb
popf
push
push
mov
or
jno
add
xor
imul
mov
js
popa
xchg
xchg
mov
mov
lea
inc
xchg
xor
sbb
xchg
sbb
fs
mov
cld
jl
mov
addr16
ret
mov
ror
addr16
sahf
add
mov
push
gs
repnz
sub
mov
cmp
sub
and
xor
popl
xchg
pop
loop
mov
jns
jnp
popf
push
insl
ret
push
addb
sbb
mov
jl
bndstx
shlb
call
daa
daa
xlat
out
push
arpl
fisttpl
addb
pop
in
pop
jo
push
lea
call
test
mov
pop
inc
mov
std
push
pop
repnz
inc
movsb
icebp
lret
jns
dec
ss
xor
lret
nop
stos
sub
push
push
mov
ret
scas
mov
dec
sbb
mov
and
sbb
cwtl
add
mov
and
mov
mov
xor
jl
fidivs
and
shrb
das
aad
adc
fstps
dec
xlat
mov
and
loope
pop
add
sbb
xchg
mov
aam
adc
ja
jo
sti
ret
xor
mov
inc
ror
test
mov
xlat
aam
stc
pop
out
add
addb
xorb
xchg
cmp
sub
sbb
pusha
mov
or
hlt
cld
cmp
jge
xor
in
jo,pn
push
or
push
mov
mov
jg
pop
mov
dec
testl
divl
lea
cmpsb
pop
xchg
dec
push
fcmovne
hlt
inc
and
fs
cltd
adc
and
ljmp
jle
insl
ljmp
adc
in
out
pop
sub
ja
mov
fbstp
cmp
xor
insb
mov
call
out
jle
dec
lcall
pop
fstpt
rcll
loopne
in
lahf
int
lret
xchg
popf
pop
fwait
jnp
nop
in
sub
stos
pop
popf
or
outsb
cmp
push
out
lahf
pop
push
insl
pop
adc
adc
nop
lods
pop
inc
loop
xchg
leave
sub
add
or
jp
push
or
clc
pop
lahf
cli
addr16
sub
in
mov
mov
lret
or
sbb
jp
adc
orl
pop
jns
mov
ss
lock
out
and
aaa
mov
jae
xor
jle
push
mov
pop
test
into
pop
repz
jnp
mov
shr
pop
mov
pop
fldpi
push
addr16
rep
jns
daa
clc
pop
and
movsb
mov
or
in
icebp
cld
cmp
subl
movsl
adc
aad
mov
sbb
insl
mov
and
pop
ret
jbe
std
pop
adc
ret
pop
arpl
or
dec
dec
mov
lock
icebp
pop
xor
cli
sub
and
adc
mov
jl
add
das
shlb
pop
enter
mov
jl
fdiv
push
das
insl
cmpsb
rcll
test
xchg
sub
movsl
add
jns
pop
mov
jno
mov
inc
mov
jmp
push
jae
sub
sub
push
adcl
sti
mov
pop
rorb
xlat
sti
flds
cmp
add
mov
and
int3
dec
fstps
sub
fisubs
cmpsb
dec
jnp
mov
add
sarl
jb
pop
outsb
push
mov
movb
push
mov
cmp
and
fiaddl
cmpsl
addr16
xor
pop
push
and
pop
mov
pop
sub
insb
pop
jle
insb
jae
dec
push
xchg
lahf
mov
sub
cmp
jbe
scas
jg
fucomi
stc
mov
fisubrs
dec
and
fcoml
test
mov
jbe
sbb
or
ret
mov
loope
fldenv
xchg
fs
sahf
fs
sbb
pop
sub
dec
xchg
ret
pop
enter
pop
sbbb
imul
fwait
movsb
jecxz
lcall
push
add
cli
pop
dec
cmp
push
mov
pop
push
mov
test
mov
xchg
fcomi
out
ljmp
xchg
aam
push
ja
xor
fldcw
movsl
in
push
adc
pop
sub
push
push
sub
push
dec
lods
push
pop
mov
fwait
arpl
mov
dec
fisttpl
out
mov
cmp
addr16
or
push
inc
sti
pop
adc
sbb
sub
hlt
dec
push
jns
ret
in
add
inc
cld
ret
out
popf
pop
imul
addr16
movsl
loopne
jae
cmpsb
dec
and
ret
add
sub
pextrw
xchg
pop
testb
rorl
adcb
xchg
leave
lret
nop
fcmovbe
loop
fptan
xchg
xor
fst
mov
inc
jb
push
test
add
mov
inc
shlb
or
iret
xor
shll
dec
outsb
dec
sbb
imul
fsubrs
std
repz
les
adc
sti
dec
inc
sbb
xchg
lahf
fstps
lcall
push
int
or
mov
sub
mov
sbb
stos
sub
jg
mov
data16
les
mulb
xor
repnz
shlb
dec
inc
cmp
sahf
mov
mov
sub
mov
notl
shlb
inc
push
sbb
push
cmp
sbb
mov
lods
mov
bound
loope
pop
cmp
jmp
fdivrs
fldcw
cs
xor
dec
scas
bound
neg
ror
mov
mov
mov
fisttps
mov
out
js
adc
imul
aad
call
cwtl
fcomp
cmp
cmp
inc
pop
pop
popa
lret
xor
ds
or
jno
sbb
sub
xor
dec
dec
stc
or
add
jbe
loop
mov
repz
or
mov
inc
inc
sub
xchg
add
clc
mov
testl
testb
daa
dec
mov
add
repz
adc
cs
call
inc
outsb
mov
nop
sub
test
les
movsb
mov
mov
sarl
loope
cwtl
push
add
pop
mov
push
xlat
push
jae
decb
xrelease
or
adc
je
pop
test
or
lods
add
mul
lcall
cmc
xor
aaa
minps
mov
pop
inc
cld
cli
xor
and
pop
fisttpl
sahf
cmpsb
fisubrl
mov
jo
sub
pop
lods
dec
sbb
xchg
test
shrb
push
lahf
js
jbe
clc
or
pusha
insb
push
cmc
icebp
adc
loope
scas
jle
pop
push
lods
in
jmp
adc
adc
push
movsb
gs
ljmp
pop
adc
mov
or
mov
dec
repnz
cmpsb
imul
fwait
mov
push
pushf
and
sbb
test
jg
das
jo
dec
daa
mov
mov
sub
out
lahf
lods
mov
xor
push
jns
sbb
rcl
ss
addr16
xor
push
cmc
add
test
xchg
and
jbe
jae
repz
cmpsl
add
mov
in
stc
repz
cs
cmp
stos
int
inc
enter
add
push
push
clc
mov
adc
sbb
cmp
jnp
cwtl
ret
sbb
pop
mov
nop
ret
push
push
movsb
xchg
punpckhbw
popf
cld
movsb
movsl
mov
in
roll
xor
push
cli
jmp
mov
jp
sarb
test
inc
adc
xchg
jmp
push
push
mov
push
mov
shlb
cmp
inc
fistpl
pop
call
mov
outsl
shlb
xchg
fisubrs
fldl
std
push
imull
sarb
std
pop
mov
xor
fs
ret
lcall
mov
mov
cmp
out
pop
jmp
fs
sub
inc
add
shlb
loop
shrb
repz
cmpsl
ja
pop
dec
addl
cmp
push
push
xor
jmp
cmpsl
repnz
adc
pop
rcrb
sbb
scas
sub
mov
insl
and
inc
pusha
repz
fisubl
xchg
xchg
out
lods
inc
loope
push
leave
mov
stc
adc
xor
fcmovnu
sub
jl
mov
test
and
lcall
xchg
aaa
and
cmp
cmp
dec
gs
into
pop
and
ss
addr16
jp
out
scas
stos
xor
cmp
std
repz
bound
sbb
sbb
mov
jno
jecxz
dec
xor
xor
xor
les
ljmp
hlt
into
in
aaa
movsl
imul
add
imull
loope
fistpll
xlat
jle,pn
test
ret
lods
scas
lock
jmp
loopne
imull
shl
inc
loop
adc
adc
repz
insb
les
mov
sbb
sub
sahf
sbbb
mov
add
out
sub
sbb
aam
fisttpl
mov
pop
insb
movsb
inc
inc
in
mov
mov
mov
imul
mov
sub
mov
into
filds
sub
and
xor
cmpsb
inc
mov
jl
xor
inc
test
and
mov
adc
cmp
mov
das
mov
icebp
hlt
dec
ja
cs
jns
cmp
push
push
call
mov
pop
lods
mov
fadds
mov
or
jg
xor
lcall
outsb
dec
test
test
pushf
out
punpckhbw
imul
movsl
movsl
notl
adc
scas
jno
mov
movsb
sub
mov
jle
outsb
repnz
ror
in
mov
mov
mov
mov
mov
enter
adc
inc
loopne
testl
push
lahf
test
loope
push
push
dec
popa
shl
xchg
ret
jnp
icebp
fdiv
pop
push
rol
mov
insl
jno
out
mov
test
mov
dec
subb
pop
mov
mov
call
stos
jo
rcl
push
mov
ror
jle
mov
sbb
stos
int3
inc
sbb
push
out
dec
pushf
mov
jnp
into
in
fisttps
or
testb
das
out
jae
xor
shl
ss
loopne
or
repnz
pop
popf
clc
es
xchg
dec
mov
shll
xchg
scas
mov
lahf
xchg
xchg
push
xor
lret
inc
gs
pop
adc
dec
mov
add
pop
pop
sub
scas
push
loop
xchg
inc
cs
fwait
cmp
mov
push
popf
jle
ffree
xlat
rolb
hlt
lods
push
addr16
out
fsubrl
popa
mov
outsb
jge
ljmp
dec
out
pop
imul
mov
xchg
jbe
cmp
fistpll
lret
cmpb
xchg
cmpsb
daa
das
mov
dec
mov
mov
xor
enter
js
pop
lods
xchg
call
xchg
lock
scas
andb
fists
push
stos
popf
mov
mov
jl
pop
scas
popf
aam
mov
bound
sub
cld
mov
enter
push
shrb
cmpsb
mov
cs
cmpsb
lcall
cmpsl
jno
adcl
pop
insl
push
cmp
mulb
jns
or
popa
xor
pushf
lret
pop
mov
dec
data16
leave
out
sub
mov
orl
in
inc
insb
add
jae
loop
shl
pop
push
and
lret
rolb
dec
je
cmp
je
das
cwtl
xchg
mov
sub
push
cmp
insb
insl
mov
sbb
add
sbb
stos
stc
jb
pushf
mov
subl
and
div
mov
and
out
or
stos
lcall
jle
leave
loopne
dec
dec
mov
jecxz
push
dec
mov
ss
les
push
xchg
add
imul
jae
jge
mov
push
or
js
add
cmp
cmpsb
jmp
mov
jns
loopne
dec
inc
testb
test
sbb
mov
lret
loop
cs
out
int3
jl
mov
lods
scas
jg
mov
cmp
jecxz
add
bound
nop
push
add
xchg
cmp
out
movsl
rcrb
pop
aam
lds
add
jge
dec
xlat
lods
call
aas
adc
sbb
cli
data16
popf
pop
inc
mov
in
inc
fildll
adc
add
push
cs
adc
xor
pop
sbb
lods
test
pop
divb
cmp
pop
movdqa
in
in
in
push
mov
pop
ret
sub
and
xchg
lret
out
addb
popa
pop
test
xor
je
xchg
mov
mov
aam
dec
mov
mov
imul
cmc
adc
fisubl
mov
andl
adc
cld
jl
cltd
cmp
jmp
daa
test
mov
lds
popl
mov
pushf
dec
pusha
es
dec
fs
dec
cmp
push
sbb
std
test
jg
clc
ret
add
inc
or
mov
jno
and
adc
ja
lds
cld
sahf
cli
xchg
sub
rclb
push
incb
mov
in
jle
shl
scas
mov
sub
les
bound
call
std
mov
faddp
push
pop
imul
sbb
imul
xchg
xlat
jno
inc
and
popf
shll
clc
mulb
faddl
out
mov
adc
popa
inc
fdivrl
jge
ret
mov
adc
xchg
or
clc
loope
adc
mov
xchg
mov
std
stos
out
push
jmp
jp
pop
adc
out
sbb
push
popa
je
and
push
cmp
or
cwtl
push
add
inc
lret
or
push
lea
mov
or
rorb
lock
mov
or
adcl
sbb
js
fistps
xor
and
repz
neg
filds
out
stc
xchg
fbstp
or
pop
mov
mov
std
mov
add
cli
in
bndldx
js
subb
lods
cs
mov
ss
repnz
mov
cmpsl
push
sarb
gs
and
xlat
pop
push
test
std
data16
fcmovnb
and
push
frstor
push
addr16
stc
enter
lds
dec
negl
ficompl
shl
repz
rcll
pop
jb
bound
cmp
and
orl
xor
adc
fldl
cmp
mov
jecxz
int
test
cmpsb
mov
mov
mov
cltd
popa
testb
mov
out
mov
bound
cs
mov
adc
jge
sub
mov
mov
mov
scas
lea
jns
mov
lods
jg
lahf
add
repnz
test
addl
addb
andb
inc
push
cwtl
adc
cltd
mov
xor
insb
push
pop
mov
fistps
mov
cmp
cmp
push
pop
mov
popa
fwait
jmp
cli
in
dec
cld
sbb
xor
mov
xor
shl
insl
cmp
in
pushf
insb
or
jecxz
lret
inc
xchg
jne
lea
adc
es
scas
add
mov
pop
pop
fdivr
and
adc
test
sbb
scas
sbb
mov
cmp
in
shr
mov
jmp
dec
inc
sub
add
pop
xor
fnsave
cltd
shrb
aam
fnsave
xor
inc
inc
pop
fdivl
leave
mul
jnp
dec
lds
daa
fldl
daa
mov
fsts
repz
sub
insb
mov
sbb
ret
mov
push
push
or
imul
ret
pop
daa
push
inc
or
add
negl
adc
pop
xchg
pop
mov
popf
push
cmp
mov
jle
rcr
jbe
jl
aas
fs
adc
pusha
repnz
lea
nop
out
push
jbe
outsl
cmp
sahf
ret
loop
stc
cmp
sub
cmp
and
stos
cmp
add
lahf
xor
push
iret
pop
imulb
lcall
add
faddp
push
cmp
sub
xor
out
ljmp
adc
insb
push
outsl
xor
xchg
decl
jb
imul
les
mov
or
or
xchg
jg
mov
mov
pop
cmpsl
cmp
ss
ss
jae
gs
push
xor
mov
and
mov
int
sbb
cmc
fidivs
mov
inc
sbb
xor
inc
push
mov
jbe
stos
daa
mov
shlb
add
sub
dec
sub
sub
or
aam
fs
loopne
lods
xchg
jge
add
sub
jmp
pop
push
push
sub
scas
push
pop
pop
enter
pop
rorl
in
mov
jb
loop
xor
jp
mov
stc
pop
dec
dec
pop
push
popf
cmp
sbb
test
lahf
stos
dec
push
scas
jecxz
sbb
hlt
pop
imul
daa
pop
xchg
popw
mov
pop
inc
call
mov
addl
cs
clc
popf
inc
pop
jp
sahf
inc
lret
mov
push
lods
sbb
sbb
mov
scas
push
cwtl
push
cmp
out
daa
push
fadd
cmpsl
lea
push
icebp
xor
fcoml
sbb
sub
sbb
push
es
lea
ljmp
mov
movsl
cld
stc
les
hlt
mov
das
scas
cmp
push
stc
iret
dec
xor
lcall
inc
pop
inc
push
adc
xor
push
out
rclb
mov
into
dec
pushf
adc
cld
cmpsb
and
dec
loopne
or
aas
stc
inc
insl
in
mov
dec
pop
mov
aas
jecxz
xchg
dec
out
cmp
nop
push
int
sbb
mov
outsl
sub
push
movsb
push
push
fcomi
mov
popf
jb
pop
cmp
or
ds
xchg
xor
xchg
scas
sbb
in
mov
cmp
popa
outsl
fdivrp
pop
int
xor
cwtl
int3
icebp
mov
aaa
pusha
sbb
clc
or
push
xor
mov
jmp
je
fadd
in
icebp
push
add
addr16
mov
fsts
jo
cs
bound
outsl
addr16
inc
jo
push
and
jp
cld
ret
push
mov
fwait
xchg
mov
aas
or
mull
addr16
js
dec
in
mov
pop
test
daa
mov
push
div
push
cmp
cmpsl
sbb
sbb
std
and
aad
iret
ficomps
jnp
std
add
jmp
in
cmp
test
outsl
pop
jae
sbb
ds
shlb
leave
jmp
and
mov
push
cmpsl
fnstcw
stc
ret
sbb
xchg
loope
out
pop
jmp
loopne
cwtl
movsl
lds
or
pop
and
lahf
imul
cmc
ret
jns
xchg
ss
pandn
pop
ds
cmpsb
faddl
inc
xor
pushf
cld
mov
std
dec
mov
mov
cld
inc
stc
lret
cmp
pop
sbb
rep
mov
aam
cmc
insb
pop
sti
int3
jo,pn
mov
or
adc
xor
xor
sub
adc
cli
add
jne
outsb
mov
mov
mov
inc
popf
sbb
cmp
inc
dec
clc
adc
dec
and
adc
into
push
stos
gs
inc
inc
imul
pushf
xchg
xlat
repnz
mov
ss
hlt
mov
stc
push
scas
ja
sahf
pop
out
xchg
test
aad
jl
je
cld
sbb
imul
jmp
mov
popf
and
xchg
imul
cld
cmp
loopne
shlb
gs
xchg
xchg
cmp
xor
outsl
adc
sarl
jecxz
movsl
int
push
aam
insl
mov
arpl
movsb
lods
rcl
insl
and
sahf
cmp
push
ljmp
mov
sahf
xchg
aaa
push
inc
lods
cmpsl
pushl
ret
test
shll
fisttpl
cwtl
adc
and
ja
pop
mov
mov
jnp
imul
adc
cmp
mov
xor
ret
mov
xorl
daa
out
ficoml
stc
add
or
cli
icebp
pop
cmp
mov
fdivl
jbe
pop
aam
arpl
lret
lret
xchg
mov
icebp
fs
mov
pop
jne
jnp
sbb
pushw
test
fadd
ret
and
cmpb
mov
push
xchg
jns
cmpsb
ljmp
fadds
mov
jmp
cwtl
cmc
int
mov
fistl
shlb
mov
cld
dec
lea
fwait
fwait
adc
scas
js
stos
aas
mov
outsb
cmp
out
adc
add
adc
dec
inc
adc
in
out
imull
stos
pop
sbb
gs
mov
iret
push
dec
test
adc
mov
cmp
jl
add
fisttpl
dec
arpl
fsubrs
loopne
adc
test
pusha
sub
pushf
push
loope
push
in
xor
outsb
cmp
mov
mov
insb
adc
and
fwait
mov
std
popa
pop
jnp
clc
fnsave
jge
movb
pop
xor
fs
je
nop
mov
pop
es
xchg
sub
push
cs
out
sbb
mov
daa
bound
cmc
cmp
call
and
hlt
push
adcb
stc
mov
mov
mov
dec
fstl
and
adc
cmpsb
inc
pusha
mov
jmp
dec
mov
fwait
push
shrb
pop
sbb
dec
mov
mov
int
lcall
xor
add
jecxz
cmp
jg
test
test
fisttpl
cmpsb
adc
adc
icebp
jb
xor
lock
scas
mov
fstpl
loop
xor
loope
adc
sub
scas
mov
xchg
lock
notb
mov
dec
jne
push
sbb
sub
ja
xlat
aas
xor
mov
sahf
jne
jae
int
lds
outsl
rcrl
pop
push
pop
fimull
sub
ret
mov
sub
stc
outsb
jnp
xor
xchg
jne
sbb
mov
pushf
mov
inc
jne
fucomip
pop
sub
push
push
rolb
xchg
add
fsts
jle
in
inc
adc
mov
fs
ret
stc
dec
clc
gs
fs
lods
iret
pop
mov
ljmp
lret
or
pop
mov
or
shll
mov
jecxz
fwait
jle
mov
jae
pop
movsb
mov
bound
adcb
sbb
sbb
insl
std
jmp
or
push
cmpsl
sub
sahf
int
cmp
jmp
std
imul
in
call
das
cltd
pop
cmpsb
push
sbb
nop
cmp
mov
lods
add
lods
outsb
aam
cltd
cmpsl
and
mov
jmp
mov
sbb
mov
push
mov
rclb
repz
mov
and
fdivrp
mov
or
xor
dec
popf
pop
or
jb
fsts
out
push
es
nop
lret
repnz
pop
bound
setp
add
test
mov
mov
jge
stc
xlat
outsl
dec
outsb
mov
gs
sbb
arpl
cmp
arpl
clc
pop
mov
xchg
xchg
lds
lret
cmp
sub
lods
mov
stos
mov
lret
sbb
sub
daa
mov
lret
mov
insl
adc
out
pushf
arpl
cmpsb
mov
pushf
sarb
push
sub
sbb
or
adc
or
xor
ds
ret
cli
mov
mov
pop
push
pop
and
add
dec
lahf
fwait
cmpsb
mov
test
es
loop
inc
or
or
outsl
pusha
jp
jae
js
add
psubsw
rcr
movsb
sub
mov
in
sbb
push
loopne
or
xor
repz
mov
in
outsl
in
mov
cmp
xlat
or
out
repz
aam
sbb
sbb
mov
std
in
fs
and
xchg
ss
pop
popa
inc
and
xchg
decb
out
shlb
lret
mov
mov
cld
decb
lret
mov
ss
xchg
cmc
lcall
rorb
pop
movb
sti
push
sarb
in
cmp
mov
push
fnstcw
leave
mov
pop
in
dec
or
mov
cmp
jecxz
call
add
sbb
adc
jle
scas
ret
fsubs
mov
loop
mov
mov
pushf
mov
push
fdivrp
outsl
sub
adc
xor
add
dec
pop
dec
or
aaa
sahf
and
add
loopne
push
imul
sub
fidivl
mov
imul
pop
pusha
in
xchg
inc
loop
cmp
mov
cld
pop
inc
dec
pop
fs
dec
pop
push
in
insb
mov
and
pop
ss
ljmp
adc
es
or
test
lea
fiadds
sbb
gs
pop
adc
jmp
enter
outsl
adc
mov
shlb
mov
cmpsl
push
call
test
cs
sarl
add
jb
sbb
fsub
mov
ja
xor
cs
fbld
mov
and
sti
gs
leave
test
push
testl
fwait
jae
sbb
out
xor
out
cli
inc
lods
je
xchg
jmp
inc
jno
jmp
jg
add
data16
mov
es
cwtl
push
cltd
xchg
mov
push
test
sbb
and
xchg
or
lret
stos
and
dec
das
loopne
mov
mov
and
adc
mov
xchg
gs
out
and
sub
fldl
mov
sub
sbbl
jmp
daa
jnp
out
mov
sbbb
out
pushf
cmc
pusha
xchg
test
ss
loope
sahf
push
inc
add
inc
daa
pop
xor
aad
cwtl
xchg
adc
out
mov
mov
xchg
and
mov
jno
mov
icebp
ret
fisttpll
pop
jno
fistpl
in
sbb
jno
daa
and
scas
fnstcw
push
sbb
jle
xor
and
add
mov
dec
add
aad
xlat
mov
js
bound
out
movsl
cmp
jae
mov
add
pushf
mov
add
and
test
xchg
sbb
mov
mov
and
cmp
mov
add
sub
fdivl
or
fldt
mov
notb
pop
pop
jbe
repz
popa
rol
adc
lea
repz
pop
inc
jb
xor
jnp
adc
push
cmp
pushf
adc
arpl
iret
jnp
test
mov
sbb
in
or
loop
sbb
test
ja
mov
ret
cltd
test
stos
icebp
push
mov
push
sub
sbbl
mov
das
sub
gs
mov
ficompl
cltd
in
test
jae
and
sub
cmp
pop
in
adc
mov
adcb
movsl
mov
negb
sbb
imul
bound
loope
push
das
xchg
lcall
scas
lds
mov
pop
mov
add
enter
sbb
pop
push
mov
fadds
mov
mov
iret
mov
out
out
or
ret
push
mov
and
jge
xchg
mov
mov
imul
in
adc
movsb
push
mov
mov
test
insl
stos
or
mov
decl
cmpsb
adc
jmp
into
out
popf
or
arpl
out
imulb
push
sub
out
nop
jmp
pushf
stc
and
adc
xorl
icebp
xchg
lahf
hlt
inc
mov
insb
test
scas
movsl
inc
push
cmp
sub
in
sub
mov
insb
test
jl
leave
jge
aam
add
lahf
cltd
dec
add
sbb
lcall
xchg
ss
inc
in
lret
xor
subb
cmp
mov
dec
mov
dec
popa
repnz
adc
out
mov
jecxz
sbb
in
sub
and
or
adcb
fldl
add
sbb
pop
xor
jns
movsb
push
call
aad
nop
stc
rorl
mov
jge
inc
loope
jns
aam
mulb
mov
jo
mov
mov
pop
inc
xorb
insl
push
jp
lcall
roll
mov
ja
adc
sub
scas
aas
mov
xchg
hlt
cwtl
lock
mov
fwait
adc
xlat
inc
jle
cmc
faddl
jp
add
jnp
mov
mov
mov
sub
imul
and
cmp
pop
jge
xchg
mov
clc
push
cli
xchg
popa
in
in
inc
and
push
ret
lret
or
scas
mov
ja
das
mov
add
jno
cmp
or
gs
pushf
mov
and
inc
loop
imul
jge
fcomps
syscall
pop
aad
mov
cli
pop
push
aaa
and
pop
xor
and
pop
jmp
xor
inc
jp
pop
pop
in
cmp
xchg
mov
es
xchg
adc
mov
in
test
stos
lcall
popf
xchg
jb
pushf
idiv
insl
fildll
xor
daa
in
lret
test
es
shlb
sub
movsb
in
in
lods
cmp
popf
lods
add
push
mov
aaa
pop
mov
iret
and
arpl
mov
cli
xor
pop
mov
test
loopne
loope
imul
aad
cmpsb
push
in
sbb
cld
aam
sbb
rorl
insb
vprotb
lods
mov
xchg
jp
nop
ret
fsubrs
popa
aaa
lahf
sub
jle
loopne
xchg
gs
or
fs
or
dec
js
push
and
cmp
dec
lea
push
scas
jns
lds
pop
push
push
inc
jnp
lret
pop
jno
andl
rcrb
push
ljmp
and
andl
mov
mov
inc
mov
je
dec
jp
mov
pavgb
sbb
and
test
mov
scas
push
xchg
push
jo
lahf
and
lods
mov
cmp
roll
movb
ret
loope
scas
dec
testb
lahf
jl
stc
mov
in
xchg
inc
push
xor
popf
pop
and
adc
mov
data16
fucomi
dec
gs
call
jecxz
adc
mov
dec
cwtl
out
js
int3
loope
lret
xor
icebp
cmp
or
mov
sbb
push
sbb
mov
mov
addr16
popa
cmp
push
xchg
in
mov
push
sbb
icebp
movsb
arpl
push
insb
int
lock
push
xchg
push
out
movsl
dec
out
inc
es
cs
shr
subl
insl
in
fcmovne
loopne
xchg
leave
data16
aad
sbb
pop
cmp
add
dec
pop
jge
push
movsb
mov
out
out
xchg
or
add
in
add
movsb
call
decl
cmp
mov
popf
lods
or
movsl
mov
push
inc
push
inc
and
mov
scas
dec
cmp
fs
mov
fcoms
cmc
and
jae
mov
and
test
or
sbb
lods
mov
out
xchg
and
je
dec
and
mov
inc
cli
js
pop
mov
mov
xchg
jmp
xchg
aaa
sahf
dec
stos
fst
outsl
fs
sub
xchg
sahf
sbb
mov
mov
repnz
sbb
and
jge
adc
cld
lss
mov
addb
dec
sub
movsl
pop
sub
inc
into
sarb
pop
test
and
and
sbb
xchg
cmp
cli
jae
or
sti
pop
pop
or
cmp
cwtl
mov
cwtl
repz
icebp
ret
xor
jae
ret
mov
mov
sar
icebp
push
ficompl
and
xchg
cmp
cmp
mov
mov
bound
faddl
push
mov
mov
xor
add
icebp
popa
int
sbb
cwtl
inc
aam
icebp
pop
cli
xor
sub
push
pop
and
mov
mov
sar
dec
adc
mov
lret
mov
or
jp
sbb
sbb
mov
int
mov
or
inc
test
cmp
bound
cltd
repnz
in
lods
inc
pop
dec
jg
push
idiv
xchg
mov
mov
aaa
std
xchg
mov
push
add
les
cld
rorl
fadd
mov
and
pop
pop
in
imul
and
pop
sbb
lcall
dec
loop
mov
cmp
cmpsl
jmp
lods
mov
push
add
mov
decb
lret
mov
lods
sub
xchg
and
or
push
mov
ret
mov
and
mov
sbb
enter
cmpl
ss
and
mov
ret
and
repz
push
lcall
lahf
pop
sbb
mov
cld
pop
shll
push
jmp
xor
mov
jae
lcall
inc
sub
xor
sub
mov
outsb
leave
loope
aas
clc
stos
jo
xor
add
mov
test
stos
clc
int3
jno
or
adc
sti
fbld
clc
ror
pop
mov
cmc
dec
ret
call
push
shld
inc
pushf
jae
outsl
push
xor
adc
ljmp
mov
mov
call
mov
mov
scas
iret
in
mov
add
fisttpl
jae
xchg
out
inc
aas
iret
inc
push
lods
mov
testb
xchg
lods
daa
mulb
ljmp
lock
adc
pop
xor
lcall
in
mov
in
push
lods
popa
xchg
outsl
xor
sub
jp
fbld
or
fwait
test
cmp
subb
jmp
int3
mov
test
ljmp
sahf
mov
jg
and
pusha
cltd
int
je
pop
mov
jle
mov
test
push
ret
sub
mov
je
rclb
xlat
ds
xor
dec
mov
xchg
ret
pop
sahf
faddl
push
jmp
scas
cld
inc
mov
push
ffree
cs
stos
int3
xchg
jns
and
add
mov
adc
popa
or
mov
mov
jp
xchg
ret
push
cli
jae
arpl
rcl
push
adc
cmp
xor
and
and
xor
add
cli
mov
cltd
sbb
cltd
bound
sbb
xlat
cltd
insl
lahf
imul
lds
ja
sbb
cli
cmp
les
mov
jnp
push
xor
popf
adc
movsb
dec
int
shr
cmp
scas
in
xor
jecxz
push
scas
push
push
mov
mov
mov
sahf
mov
jmp
imul
mulb
sbb
xchg
out
xchg
xlat
jmp
push
int
or
or
mov
xor
inc
or
loopew
mov
mov
aad
movl
flds
mov
aas
rorb
fimuls
adc
mov
pop
imul
cmp
scas
mov
xor
xorb
pop
stc
mov
mov
je
inc
pop
push
push
and
rol
pop
fnstenv
fwait
push
in
push
movsl
push
inc
mov
mov
je
mov
sbb
mov
out
xchg
xorb
sbb
xchg
or
fldl2t
lock
dec
sub
lods
lret
ret
mov
sbb
stos
xor
enter
pop
adc
xor
je
cmovl
adc
mov
std
stos
fcmovnbe
jae
xchg
jns
int3
add
xor
jb
ljmp
cmc
xchg
fbstp
mov
rcl
loop
lock
sub
fwait
out
push
xor
lds
push
sub
out
js
add
cmp
stos
in
mov
jb
lret
pop
pusha
xlat
push
push
lcall
hlt
mov
cmp
xor
mov
inc
push
lret
xchg
push
or
ficoms
nop
mov
in
testl
cmpb
push
icebp
cmpsl
test
sahf
jge
sbbb
sub
inc
lods
mov
mov
int3
insl
sbb
mov
and
arpl
stc
pop
inc
mov
cmpsl
lret
xchg
sarb
jg
lahf
xor
mov
adc
loope
cmc
push
mov
or
mov
inc
roll
jg
sbb
ret
push
fsubs
lods
jbe
imul
inc
repz
ds
mov
pop
hlt
fucomp
ljmp
jge
inc
jne
movsb
cmp
and
outsl
dec
sahf
daa
cmp
dec
push
sub
into
sarl
sbb
add
inc
add
rcll
mov
test
repnz
clc
jbe
and
pop
sub
inc
adc
loope
cmp
fildl
add
fsts
shlb
or
mov
js
movsl
adc
cmp
mov
jecxz
add
aaa
cmpsb
jno
bnd
sbb
repz
mov
rol
sahf
mov
jae
push
mov
sbb
lds
add
inc
inc
and
mov
mov
xchg
push
shrl
gs
sbb
jge
hlt
cwtl
push
mov
data16
fmul
cmp
movsb
adc
xchg
testb
movsl
fnstcw
dec
jge
xchg
push
sahf
xor
mov
inc
mov
adc
rclb
pusha
ja
xor
fidivrs
mov
popf
push
in
sbb
mov
pushf
xor
scas
xchg
rcrl
fcmovbe
xchg
stc
movsl
mov
ret
mov
jns
out
dec
xchg
mov
and
jnp
adcb
inc
dec
push
sub
test
mov
cli
cmp
jnp
shrl
mov
jecxz
jge
mov
data16
sub
mov
notb
jns
gs
mov
in
sbb
mov
lret
sub
jno
lahf
shll
push
xchg
lret
cmpsb
dec
nop
cmp
lahf
jp
dec
testb
insl
push
push
test
mov
pop
gs
mov
jo
aaa
pop
loop
adc
outsl
aas
lea
pop
push
ret
rolb
js
sub
dec
rolb
call
das
daa
imul
cmp
pop
lahf
push
clc
ss
add
and
stc
ss
jp
sar
xchg
div
xor
cwtl
stc
xchg
xor
sub
pop
es
in
xchg
jp
lea
inc
clc
in
adc
je
add
pusha
cmp
inc
mov
outsl
data16
loope
pop
loopne
aaa
cmp
mov
pop
rcrb
in
test
cmp
sbb
mul
xchg
xchg
sti
movsl
inc
inc
clc
adc
mov
adc
jb
mov
dec
adc
movsb
and
cmp
cwtl
xchg
dec
or
aad
sub
repz
dec
jg
cs
and
fdivs
inc
xchg
fistpll
in
stos
fwait
movsl
es
pop
jno
pop
push
and
mov
sbb
icebp
dec
ret
add
arpl
lods
push
jg
sub
negl
push
dec
ficoml
mov
mov
testb
in
or
pop
das
xor
fs
jle
data16
cltd
xchg
repz
icebp
out
lods
add
or
je
inc
jb
cmpsb
and
scas
mov
insl
xchg
pop
inc
imul
ss
or
cmpl
jo
dec
sub
loope
mov
mov
insb
daa
jmp
imul
mov
and
pop
pop
jbe
sbb
lods
pop
add
pop
inc
mov
sbb
xchg
mov
dec
js
mov
fcomps
sub
jl
int
repnz
fs
mov
xchg
mov
popa
lods
lcall
jp
fstpt
pop
decb
dec
sti
adc
inc
fidivl
mov
push
hlt
xchg
and
xchg
leave
out
pop
repnz
xchg
popf
loopne
xor
jb
int
cmp
push
xchg
dec
or
add
cmp
mov
pop
or
mov
add
idivl
ficoml
inc
fidivl
fninit
sbbl
mov
shr
aad
xchg
mov
outsb
adcl
sarb
cmpsl
add
add
inc
ljmp
or
pop
mov
aas
aaa
outsl
aaa
cld
je
ja
push
jp
lods
rorb
cld
sub
rclb
sub
xor
mov
or
mov
pop
cltd
hlt
mov
sti
push
xor
or
jg
dec
push
mov
xchg
and
mov
adc
add
jae
outsb
adc
out
inc
js
and
scas
out
sub
push
fldenv
les
mov
inc
repnz
lret
mov
inc
cmp
imul
addl
cmp
cmpsl
int
addr16
dec
xor
sub
std
ljmp
fwait
jno
sbb
mov
repnz
aad
pop
sbb
call
xchg
pop
rcrb
inc
mov
jnp
pushl
int
or
cmp
imul
mov
push
lea
incl
inc
hlt
ret
lea
call
shrl
inc
jne
popa
dec
and
mov
cmpl
push
mov
vpcomb
subb
daa
and
lods
arpl
adc
sbb
int
mov
test
icebp
repnz
fisttpll
aaa
cmp
sbb
push
push
cmp
stos
imul
mov
inc
add
add
daa
pop
add
fcomip
sbb
push
pushf
cmp
shll
ds
pop
bound
repnz
cmpsl
push
lcall
movsl
or
das
stc
scas
clc
loopne
ret
xchg
pop
scas
mov
push
lret
push
cmp
jle
xorl
sub
rclb
and
sub
mull
mov
cmpb
mov
inc
mov
xchg
popl
movl
push
xchg
out
sbb
mov
pushf
scas
pop
push
out
adc
xchg
jmp
sbb
add
lcall
ja
call
and
xor
adc
xor
cs
sar
or
sbb
lods
idiv
add
cmp
pushl
xor
ret
int3
insl
fstpl
es
mov
push
call
mov
sub
cmp
or
adc
cmp
addr16
ja
shl
or
xor
in
lret
ds
sbbb
lds
in
ljmp
sbb
push
jno
fimull
bound
push
push
push
pushf
pusha
sub
insb
mov
test
xchg
std
dec
fdivrs
xor
test
aaa
daa
cmpl
xor
test
cmp
inc
cltd
push
cmc
pop
dec
xor
arpl
stc
gs
leave
push
xchg
lahf
jg
cli
cmp
addr16
loope
xlat
arpl
scas
mov
jo
sbb
adc
imul
sbb
idivl
pop
xchg
iret
cld
and
fcmovbe
or
mov
sub
jg
push
push
stc
pop
lods
int
adc
adc
roll
in
in
faddl
jl
into
sbb
jnp
xor
mov
into
jmp
fs
rorl
jl
fiadds
rcll
and
lahf
fistps
or
out
ja
mov
push
and
jle
jns
inc
dec
mov
dec
je
mov
imul
jl
xchg
xlat
mov
xchg
insl
sub
roll
and
arpl
mov
je
sub
mov
cmp
es
dec
inc
hlt
mov
ds
xchg
mov
frstor
popa
push
xor
mov
shlb
push
jnp
mov
xor
add
pusha
nop
adc
adc
adc
movsb
and
mov
inc
pusha
adc
movsl
jae
lods
or
test
stos
push
loop
inc
in
jmp
jge
shll
out
inc
outsb
test
sbb
adc
jo
inc
shrl
lock
mov
xor
sub
addr16
jp
mov
mov
rorb
insl
xchg
rcrb
lea
xlat
xchg
imul
sub
jmp
cmpsl
sub
push
in
dec
mov
jne
pop
adc
mov
push
adcl
pop
dec
stc
movsb
xchg
push
xchg
test
push
idivl
stos
data16
shlb
push
push
mov
xchg
and
nop
ret
pop
pop
cmc
cmpb
cltd
shll
mov
jge
shl
call
sahf
daa
mov
xchg
and
inc
insl
stos
and
jl
push
ret
rcrb
mov
pop
shrl
stos
fisubrl
pop
push
neg
sbb
mov
aas
push
add
mov
rcrl
pop
outsb
and
icebp
out
into
aam
xlat
mov
or
lock
adc
push
mov
outsb
push
ficomps
mov
bound
sar
cmp
mov
std
inc
jle
xchg
and
add
in
out
fists
pop
loopne
lea
js
inc
and
and
ret
lret
or
sub
mov
sub
pop
xor
sbb
scas
pushf
test
add
call
andl
sub
xchg
iret
popa
scas
loope
cs
mov
jne
mov
cmp
push
xchg
mov
les
out
add
jg
and
out
lret
out
test
negb
dec
jae
mov
aaa
cmpsb
sbb
or
adc
xor
pop
push
xor
mov
push
mov
jg
push
lcall
aas
dec
sar
or
sbb
das
sti
sub
daa
mov
es
iret
xor
adc
jb
mov
sub
repnz
xor
fwait
add
sbb
lea
inc
xor
push
cld
xchg
xchg
mul
xchg
inc
and
jecxz
sub
mov
into
repz
lcall
mov
dec
addl
sarb
stc
jl
mov
dec
test
and
mov
jno
mov
dec
adc
imul
mov
pusha
out
rol
aam
pop
mov
xchg
outsb
popa
jno
ds
xor
jne
and
outsl
imul
xchg
movsb
mov
or
movsl
into
push
bound
icebp
add
scas
pop
in
addr16
scas
roll
inc
mov
aas
cmp
pop
rcll
mov
test
popa
ss
out
rorl
jge
popf
dec
cltd
clc
xchg
aad
jae
fs
bound
mov
hlt
push
push
mov
and
pop
mov
int3
mov
movsb
rcll
pop
mov
mov
movsb
das
dec
out
pop
xchg
fwait
stos
sahf
call
push
out
insb
mov
mov
gs
pop
mov
dec
hlt
push
fistps
push
mov
and
mov
ret
xchg
jmp
decl
insl
or
fcompl
xor
dec
fcmovb
jno
xchg
inc
jmp
mov
mov
xor
imul
shll
adc
loop
mov
and
xor
pop
popf
add
add
rcll
dec
mov
cmp
mov
pushf
ljmp
test
inc
test
jbe
mov
xchg
cmp
sbbb
pop
sbb
lret
pop
and
inc
sbb
cmp
jnp
stc
enter
adc
rcrl
fstpl
dec
fcmove
roll
adc
cmp
nop
inc
push
push
push
cmpsb
xlat
fwait
cmp
ja
xchg
movsl
inc
dec
sti
lahf
mov
ret
mov
xchg
mov
jmp
inc
imul
mov
ss
pop
push
fildl
mov
iret
fwait
sahf
jg
mov
shll
popa
add
adc
loope
sub
xchg
jp
dec
in
dec
int3
or
push
aad
pop
js
loope
xchg
pop
or
or
repnz
xchg
imul
lods
mov
mov
popl
jae
push
shl
imul
pop
dec
cmpsb
adc
pop
imul
notl
stos
cmp
fsubr
pushf
sub
xchg
call
movsb
test
mov
popf
addb
ret
aam
sti
test
aad
imul
cmc
jae
std
insb
aas
adc
clc
mov
test
inc
dec
loope
movsb
mov
mov
clc
mov
adc
xchg
cs
nop
mov
subb
inc
test
push
dec
mov
xchg
or
sub
add
lcall
xchg
jecxz
aam
popa
jns
cmpsl
jo
push
nop
outsl
pop
inc
add
xor
adc
rol
in
mov
sbbl
dec
inc
mov
mov
push
mov
xchg
jb
clc
push
sub
inc
fsubl
xchg
xlat
shrl
enter
mov
jp
outsb
shrb
stc
insb
xlat
jge
inc
nop
pop
or
inc
in
call
sub
bound
xchg
int3
xorb
outsb
xchg
or
dec
outsb
and
rcrb
lret
push
xor
dec
cmpsl
inc
jbe
out
sub
ss
aas
pop
cmp
add
dec
sub
les
xor
jge
sbb
shll
push
and
ret
stos
jecxz
mov
mov
mov
mov
sbb
mov
mov
fnstsw
shrb
sub
leave
sbb
jg
mov
pop
lcall
into
dec
and
rcrl
outsl
push
aas
js
cmpsl
clc
aaa
insl
into
aaa
dec
es
pop
jne
idiv
enter
and
pop
icebp
daa
jbe
mov
xchg
add
cmp
daa
orl
mov
ret
push
sub
sbb
sarb
cltd
xor
or
push
daa
popf
ja
stc
bound
enter
jmp
enter
outsb
ds
mov
scas
adc
pop
cld
jle
adcl
mov
mov
inc
adc
push
sbb
or
int3
ficoml
push
mov
lock
mov
bound
scas
adc
sub
loop
fwait
xchg
mov
xchg
or
arpl
xchg
in
in
push
inc
dec
andl
mov
test
mov
rcrl
out
push
xor
xor
daa
out
mov
push
sbb
or
sahf
inc
add
shlb
xor
fcmovb
xor
lret
mov
insl
popa
aad
mov
imul
or
sub
mov
les
repz
mov
cmp
pop
add
aas
mov
pop
pop
sbb
sub
data16
or
push
add
cmpsl
jmp
in
push
inc
das
sbb
je
aaa
add
dec
adc
and
or
mov
xor
pop
pop
int
sbb
and
lret
fmul
sub
lods
pushf
loop
fs
shl
mov
loop
mov
jg
mov
sub
aad
imul
insb
stos
sbb
push
push
sub
fdivl
in
sahf
nop
mov
mov
dec
add
icebp
and
xlat
fmuls
mov
xchg
loop
and
add
in
jmp
dec
in
cmpsl
adc
or
sub
mov
adc
xchg
sti
and
or
arpl
sub
xor
out
add
xor
mov
sub
mov
mov
xchg
iret
mov
lcall
dec
add
loopne
fwait
mov
cmp
loopne
shl
imul
sub
loopnew
mov
sbb
loope
dec
cmp
popf
cmp
sar
mov
daa
sti
insl
push
cmpsb
loop
xor
push
jle
mov
jbe
rcll
sarb
push
or
addl
data16
or
pop
mov
mov
pop
xlat
or
and
mov
sbb
int
repz
lock
movsl
jo
fwait
scas
or
cltd
push
push
mov
mov
xchg
pop
mov
push
fldt
cmp
fistps
out
fsubrs
js
sahf
push
push
add
xor
add
cmp
jno
imul
pop
dec
push
dec
lock
mov
and
xchg
pushf
insb
mov
fdivl
adc
clc
xorl
popa
test
add
cmc
leave
jne
push
and
pop
fxch
loop
adc
sub
fcompl
and
popa
adcl
mulb
mov
mov
aaa
movsb
mov
sub
mov
jne
int3
insb
add
ret
and
push
mov
ds
aam
lea
mov
or
cs
jb
dec
stc
or
shrl
notl
lods
adc
out
xchg
out
ret
rcrl
mov
test
xor
sbb
repnz
imull
mov
xchg
addb
cmc
iret
inc
pop
adc
inc
shrl
jmp
and
adc
sub
std
je
out
sbb
mov
push
jo
cmpsl
and
inc
and
sub
movsb
add
and
inc
test
test
adc
and
shlb
lods
incb
movsl
push
ja
int3
popa
rol
lcall
push
stc
loope
js
loopne
adc
cmp
shll
insb
ljmp
shlb
sub
dec
dec
movsl
mov
lahf
mov
pop
or
xor
jp
mov
and
sub
pop
das
sbb
dec
shrb
rcrl
add
inc
mov
popa
cmp
mov
test
divl
out
adc
scas
fnstcw
cli
bsf
lahf
push
cmpsb
movd
ss
lods
mov
xchg
add
push
inc
jae
adc
les
lods
stos
repz
pop
dec
adc
xlat
in
out
stc
push
xor
lret
ljmp
lods
fcmovbe
popa
cmp
pop
jne
dec
gs
xor
fcomps
inc
mov
jge
xorl
divps
inc
bound
ficoml
sub
leave
add
dec
sbb
loopne
pop
lret
stos
cmc
fstpt
push
mov
mov
jae
add
mov
pop
or
or
shll
adc
popa
inc
xchg
sub
mov
dec
xchg
gs
xor
adc
add
mov
push
loope
aas
jae
xor
cmp
stos
jbe
std
lret
gs
stos
mov
out
test
push
sbb
mov
xor
xchg
gs
mov
add
repz
mov
ffree
jb
lea
loope
shrb
nop
cmp
mov
frstor
xor
std
shll
ret
jbe
pushf
add
xor
rcr
sbb
rorl
pop
xchg
jmp
xor
ljmp
and
roll
daa
lods
mov
push
popf
push
xor
mov
and
inc
jns
inc
sub
out
std
ret
popf
stos
inc
in
flds
stos
xor
xor
dec
inc
mov
cld
test
jb
sbbl
push
cld
repz
or
sub
jmp
loopne
movsl
cmp
jge
test
aas
jg
es
sub
test
dec
and
and
adcb
lea
dec
mov
rcrb
pop
scas
add
push
js
rcl
inc
sub
xor
movsb
into
pushf
mov
pop
lret
mov
fstps
bound
push
mul
mov
dec
jns
mov
inc
stos
mov
data16
ret
jo
xchg
outsl
mov
repnz
cmpsb
dec
xlat
ret
stc
orb
jmp
dec
packssdw
aas
fsub
shll
pop
dec
enter
movsb
mov
cs
cmp
pop
nop
xor
fwait
scas
or
test
and
repnz
sbb
imul
sbb
cwtl
push
mov
adc
fadds
aam
jmp
sbbl
cwtl
mov
add
clc
pop
int3
and
adc
fdiv
loope
fmull
inc
pusha
push
pop
inc
cmp
sahf
mov
into
fiadds
into
sahf
jecxz
jge
imul
cmp
in
cli
sbb
test
xlat
iret
in
nop
out
out
pop
xchg
and
dec
in
mov
jecxz
mov
push
out
arpl
sbb
in
loope
xchg
mov
push
jns
add
fadd
fwait
lret
shrb
shrb
push
sub
je
push
xor
std
fnclex
pop
dec
popa
movl
test
lcall
xor
insl
repnz
pop
adcl
incl
fistps
push
fisubl
inc
jp
mov
sub
test
repz
into
xchg
mov
dec
iret
jno
rolb
cmp
xor
mov
adc
xchg
push
xlat
cld
pop
clc
mov
popf
das
jle
push
loop
inc
std
add
mov
bnd
adc
mov
iret
inc
or
pop
gs
or
and
pop
or
xchg
outsl
push
or
in
mov
lea
or
popl
and
xchg
out
scas
push
dec
inc
or
movsb
mov
cwtl
mov
push
fistl
mov
popf
ret
mov
int
jno
push
inc
lock
xchg
shll
call
add
enter
sub
aaa
mov
jb
nop
mov
addl
xchg
jge
andb
push
jbe
ja
enter
xchg
mov
push
hlt
jmp
and
and
loopne
lds
cld
movsb
cs
test
in
out
sub
pop
pop
bound
pop
or
jl
mov
fs
popa
xchg
gs
andl
repnz
and
das
call
add
hlt
pop
xchg
push
in
mov
jp
mov
inc
arpl
ret
inc
push
repnz
inc
xor
add
std
inc
pop
test
or
and
ret
orl
mov
out
fsubrl
flds
push
add
mov
mov
pop
adc
jno
jno
in
xorb
and
roll
mov
out
orb
inc
cmp
push
inc
leave
sbb
dec
xchg
cmp
fdivl
movl
imul
into
dec
inc
lods
push
jb
ret
push
jecxz
ja
add
xchg
sahf
mov
lahf
aad
cli
std
or
sub
xchg
push
pop
xchg
fimuls
xchg
mov
xor
das
leave
imul
sbbb
mov
out
aad
push
out
ret
ror
sbb
push
xchg
shlb
faddl
ja
xlat
lods
inc
adc
gs
adc
fidivl
mov
test
insb
push
pop
bound
inc
jae
outsb
cmp
push
xchg
mov
sbb
cmp
pop
iret
test
and
jge
fs
sub
pop
push
outsb
inc
ds
jne
inc
xchg
test
dec
pusha
enter
push
cmpb
shll
pop
aas
pop
dec
inc
test
lock
repnz
leave
in
pop
jecxz
lock
pushf
rol
xor
test
movsl
stos
insl
and
push
enter
cmp
push
pop
adc
orb
pop
dec
jp
sarl
pop
jmp
in
xchg
adc
xor
push
andnps
or
insl
mov
jge
mov
fildl
sbb
scas
adc
or
xchg
mov
xor
mov
aaa
out
ds
adc
push
add
xchg
and
test
adc
int
inc
xchg
jl,pt
mov
add
xchg
adc
cld
mov
icebp
inc
and
mov
xorl
sti
xor
movsl
lret
inc
sbb
or
sbb
lea
add
sbb
xchg
push
lret
mov
adc
out
xchg
mov
mov
aam
rcrb
andl
cmp
and
rol
mov
sub
call
ds
ja
jo
lahf
inc
add
stc
mov
dec
push
lods
stos
mov
xor
add
adc
pop
jl
and
pop
mov
lock
mov
cmpsl
fwait
xchg
add
push
xchg
lahf
lods
outsl
jne
mov
lret
js
and
mov
stc
insl
inc
cmp
xchg
out
add
adc
jg
add
push
cmp
ds
xchg
pop
pop
aas
xchg
adc
aaa
stc
or
adc
xchg
inc
push
stc
stos
jae
push
data16
dec
adc
daa
inc
push
mov
adc
call
out
xchg
fiaddl
adc
js,pt
out
hlt
mov
push
sub
iret
mov
mov
xlat
inc
mov
outsl
adc
outsl
mov
pop
imul
fcoms
xchg
ret
movl
mov
scas
xlat
fyl2xp1
cmp
and
rcrb
sbb
inc
lret
jecxz
fisubl
dec
mov
stos
jbe
sub
xor
push
lea
xchg
xchg
fisubs
xchg
adc
cs
cli
push
jmp
mov
and
mov
and
inc
cmp
lret
add
xor
stos
mov
fimull
xor
mov
test
mov
push
out
repz
jge
lret
jnp
cmp
adc
movsb
pop
or
mov
cmp
cwtl
sbb
xor
les
lods
bound
or
in
mov
mov
inc
gs
inc
nop
clc
mov
into
dec
lret
or
iret
sub
pop
mov
into
daa
fiadds
das
push
jb
jl
xchg
daa
ds
pop
cmpsl
push
cwtd
jle
sub
sbb
rolb
mov
adc
pop
js
push
sub
std
es
in
pop
or
jl
imul
jbe
cmpsb
dec
pop
mov
cmc
jecxz
mov
inc
dec
fwait
hlt
fwait
xchg
mov
jmp
sahf
adc
mov
inc
mov
push
mov
fsubrs
pop
xchg
loope
inc
xchg
rcrl
outsl
shlb
mov
mov
or
xor
imul
mov
dec
lret
pop
sub
movsb
mov
jns
cmp
inc
xchg
jne
adc
movsl
ret
pop
addb
gs
movsl
sbb
popa
arpl
jmp
push
int3
cs
fisubrs
pop
pop
mov
cmp
adc
test
out
cmc
push
cmp
mov
push
mov
pop
push
addl
shlb
cmp
xorl
gs
mov
clc
rolb
push
or
xor
jl
pop
mull
xchg
fimull
xchg
inc
sbb
ret
fwait
popf
xchg
into
lret
adc
scas
je
and
sbb
push
jbe
sub
jae
and
idivl
xchg
dec
test
cwtl
daa
stos
in
inc
cs
data16
loop
dec
adc
hlt
jle
shll
xor
or
nop
loopne
outsl
pop
and
and
xchg
addb
rcrb
adc
in
xchg
jmp
and
int
daa
hlt
push
dec
in
mov
aaa
xor
and
or
jp
stos
aad
rolb
pop
in
and
mov
das
int3
rcrl
addr16
mov
rcll
xor
sub
js
shrl
cmp
inc
nop
outsb
sub
mov
mov
adc
mov
fnsave
xor
cmp
and
push
inc
adc
sar
aad
mov
fsubrl
lret
inc
lods
jge
mov
xchg
xor
jne
das
insl
sub
push
outsb
js
xchg
or
arpl
add
push
je
es
pushf
rol
jecxz
pop
mov
jnp
repnz
mov
movq
push
mov
jg
lock
dec
out
jl
flds
testl
out
inc
cmp
imul
arpl
or
lods
jecxz
mov
mov
inc
fwait
jecxz
xchg
in
cmpl
mov
cmpsb
popa
lea
and
fcmove
jo
add
jnp
inc
dec
cmp
mov
xchg
je
cmpsb
mov
cmp
popa
imul
pop
sub
fldenv
mov
mov
mov
out
mov
ret
push
repz
in
clc
mov
jmp
imulb
cmp
mov
pop
gs
mov
mov
xlat
gs
std
pusha
add
mov
xlat
push
add
push
gs
fnstenv
pop
sub
xchg
cmp
dec
inc
mov
roll
mov
in
into
outsb
xor
xor
je
sub
and
shrb
test
push
sahf
mov
imul
xchg
inc
cmp
pop
pusha
cli
gs
xchg
or
xor
push
sarb
aas
lahf
inc
inc
movq
jp
mov
add
sub
add
adc
dec
mov
xor
mov
pop
mov
lock
cmpsb
aad
push
push
jne
addb
push
lahf
aaa
mov
aaa
test
jo
mov
cmc
jmp
movsl
xchg
add
sub
or
xchg
cli
mov
mov
adc
fstps
xchg
mov
mov
rclb
sbb
mov
aam
mov
mov
jge
xor
test
imul
bound
iret
stos
mov
fstl
dec
sub
inc
into
mov
clc
jl
rclb
cmp
inc
js
pop
sbb
xor
pop
pop
or
mov
out
mov
aam
pop
loop
fldl
push
rcl
stos
add
and
jg
mov
mov
cmp
arpl
dec
pop
and
sub
cwtl
mov
rclb
add
jg
cmpsl
ja
inc
ljmp
sub
inc
shrd
ljmp
pop
cld
pop
insb
imul
or
cmp
cmp
xor
loopne
sbb
and
mov
jb
mov
pop
dec
xchg
pop
mov
cmp
ret
jb
xor
mov
repz
movsl
dec
mov
jne
jae
or
sub
xchg
clc
cltd
dec
push
es
or
and
mov
insb
xchg
test
xchg
lods
pop
mov
mov
aaa
inc
out
pop
pop
arpl
fmul
xchg
and
xchg
push
sub
sbb
cmp
mov
mov
fdivrs
subb
insb
lret
shlb
pop
cmp
or
and
shlb
xchg
sbb
sbbb
xor
and
scas
shrl
mov
stos
adc
xorb
sbb
cld
int
test
sub
nop
jns
inc
xor
cwtl
in
push
mov
fidivl
mov
sbb
std
xchg
in
or
and
fwait
push
outsl
je
mov
ljmp
clc
and
sbb
cmp
xchg
jae
push
cli
push
loope
mov
add
call
xor
test
sbb
cmpl
jle
out
stos
mov
or
sahf
loope
cmp
or
pop
call
jae
pop
sbb
and
sub
adc
jae
lods
adc
aad
icebp
adc
and
mov
inc
mov
sub
push
xchg
and
mov
test
aad
mov
arpl
mov
int3
push
out
das
insl
inc
adc
divb
mov
cmp
and
mov
inc
je
xlat
test
mov
sub
mov
out
sub
mov
mov
out
mov
mov
in
mov
aad
xor
sub
add
inc
pop
and
fisubrl
adc
xor
in
iret
mov
dec
test
inc
loop
mov
mov
lea
ja
mov
push
jnp
mov
lret
and
sub
jno
insb
rorl
sub
lret
adc
sbb
test
inc
sahf
pop
sbb
pop
and
cs
in
or
sbbl
lock
mov
mov
push
mov
jmp
xlat
gs
stc
mov
in
mov
xchg
sub
enter
xchg
in
sub
xlat
outsb
xor
xchg
scas
popa
pop
dec
sbb
ret
cmp
cld
cmp
mov
dec
dec
pop
jp
sbb
mov
jo
jnp
ja
icebp
sbbl
push
js
pushf
leave
add
in
cmp
imul
loop
push
cmp
mov
sub
int
or
out
mulb
mov
lahf
ljmp
fidivs
jle
or
adc
je
xchg
xchg
clc
cmp
jnp
mov
mov
imul
mov
add
js
int
addr16
xor
ss
mov
add
rorb
add
cmc
pop
inc
push
outsb
xchg
out
inc
invd
mov
xchg
xor
hlt
lods
cwtd
loopne
and
lahf
cmp
cmc
pop
mov
mov
cmp
adc
stos
in
jbe
jnp
test
jp
pop
outsl
fstpl
add
out
push
ret
in
cltd
in
adc
mov
scas
repnz
jge
popf
cs
pop
inc
sbb
sub
sbb
pop
xchg
les
push
stos
mov
roll
sbb
shll
mov
mov
icebp
fldt
or
adcb
add
push
cmp
and
xor
cmp
pop
shll
lea
lahf
jge
xor
lock
cwtl
pop
or
test
pop
adc
seto
pop
sub
out
mov
out
arpl
lds
dec
insb
outsb
sub
dec
and
jp
arpl
call
aad
mov
bound
fidivl
xor
mov
sub
outsl
lret
mov
addl
in
imul
int
mov
in
in
adc
adc
push
xor
mov
mov
stos
mov
jb
cmp
xchg
add
mov
fsub
or
fcom
xor
xchg
add
dec
loop
outsl
mov
out
xchg
push
out
or
popa
push
repnz
popf
leave
in
imul
xchg
lahf
push
data16
sarb
and
lods
cmp
push
std
ret
cmp
rorl
fsts
adc
and
outsl
dec
repnz
mov
mov
pop
cmp
ret
mov
push
or
dec
add
lods
aad
pushf
or
jle
loop
je
jecxz
jmp
enter
xchg
stos
dec
inc
xor
ss
pushl
lock
sbb
outsl
es
and
lock
dec
pop
xchg
mov
dec
cmp
or
roll
ds
add
sti
mov
pop
ficompl
or
test
xor
xlat
dec
fstpl
mov
xor
sbb
add
into
and
insl
cmp
push
insl
jl
rclb
hlt
loop
xchg
shlb
cmc
sub
cmc
mov
popa
rolb
pusha
or
mov
or
inc
mov
jg
mov
inc
jp
adcb
xor
dec
popf
imul
les
mov
cmp
ljmp
mov
call
scas
xchg
ja
adc
outsl
lea
ret
enter
mov
mov
outsl
les
stos
push
pop
mov
loop
scas
cmp
aas
cmp
xor
xor
hlt
cmc
pop
push
jno
call
sbb
stc
fisttpll
and
cld
sub
mov
push
icebp
push
push
test
fs
jbe
lahf
cltd
push
cmp
sbb
inc
xchg
xor
fwait
lods
pop
push
pushf
inc
lds
mov
out
fcomps
and
push
pop
fstpt
pushf
test
fldt
out
adc
enter
rcll
cs
das
ds
xor
jmp
int
and
push
test
out
cmc
pop
test
mov
and
mov
jo
or
in
cld
mov
push
mov
jge
insb
pop
add
std
xor
js
xchg
stos
movsl
lock
daa
mov
mov
cwtl
sub
jo
xchg
ret
dec
lret
mov
dec
aad
jl
psubusw
insb
ljmp
lret
xor
ja
scas
sub
jmp
repnz
mov
sbb
xchg
daa
push
jno
test
fiadds
pop
insl
add
bound
ret
outsl
dec
je
add
cmc
mov
push
jge
xor
test
jmp
sbb
adc
mov
stos
es
add
cs
xchg
int
mov
ret
lds
lahf
fcoms
add
pusha
pop
cmp
or
xchg
inc
stos
fldt
add
je
out
in
fcoml
dec
xor
pusha
fsubrs
in
xor
or
lods
push
push
jb
push
cmp
and
ret
addr16
adc
mov
jnp
roll
insb
cmp
xchg
scas
mov
jl
fsubrs
cmc
scas
inc
sbb
pop
pusha
or
insl
mov
jle,pt
push
add
push
sbb
es
cmpsl
fwait
lods
push
sub
cwtl
shlb
inc
stos
notl
push
pusha
xchg
je
cmp
jb
mov
mov
aaa
bound
sbb
mov
cmc
sbb
cmp
mov
inc
adc
add
sub
iret
data16
xchg
loope
pop
call
or
sub
sahf
fs
and
pop
adc
and
fimull
cmpsl
int
pop
fldl
sub
lret
sub
mov
test
aaa
mov
lock
cwtl
ss
push
stos
mov
in
dec
test
xchg
cmp
push
mov
lds
dec
jmp
sbb
xchg
mov
fstpt
dec
pop
std
cmp
push
nop
leave
rolb
cmp
out
add
xchg
pushf
cld
testl
icebp
outsb
lret
inc
jg
jnp
and
adc
xchg
fwait
adc
inc
lock
mov
imul
jp
xor
out
mov
rorb
xor
adc
mov
pop
mov
insl
int3
fisubrs
mov
in
mov
xor
add
sub
sarl
lds
hlt
inc
xchg
or
mov
sbb
cmpsb
fisubrs
cmc
and
mov
push
ret
js
das
push
fldcw
push
in
es
decl
scas
dec
les
jo
sbb
divb
dec
inc
icebp
push
lds
mov
cmp
in
or
mov
jp
lds
inc
fwait
xor
mov
and
jmp
into
adc
ja
out
mull
sbb
aam
mov
vcvttps2dq
pushf
pop
imull
lds
jne
mov
mov
sub
adc
ja
adc
adc
mov
cmp
jmp
dec
loop
in
or
mov
imul
cmpsl
cmpsl
les
jge
out
cmp
mov
sbb
loopne
push
mov
jl
push
and
scas
lock
pop
in
mov
repnz
sarb
or
ss
call
jg
and
xor
or
pop
cmpsl
push
adc
cld
stos
sahf
aam
stos
mov
shlb
mov
incb
jmp
inc
arpl
xor
js
cmpsl
mov
and
imul
ret
and
mov
rolb
inc
dec
andb
movsl
sbb
cld
push
mov
push
mov
mov
popa
shl
add
and
mov
inc
jge
add
lahf
cmp
lahf
lea
movsl
jle
nop
lods
popa
cltd
lahf
adc
dec
popf
lret
push
jmp
fbstp
pop
sbbb
and
mov
fmul
or
xchg
sahf
sub
or
push
pop
std
pop
in
fucomp
daa
cmpsl
sbb
outsb
push
xor
ds
or
push
push
popl
fldt
jl
int3
adc
je
es
sub
fsubr
inc
gs
mov
xor
or
xlat
stc
inc
lock
insl
pushf
pop
jge
fbstp
mov
test
add
out
into
stos
push
mov
sti
out
push
cmpsl
dec
add
addl
jmp
cmp
mov
sbb
pusha
in
push
adc
ror
imul
cltd
je
or
sbbb
and
cltd
jae
es
cld
stos
mov
jmp
lods
pusha
andl
sbb
or
and
pop
add
jl
orl
adcl
pushf
xchg
pushf
data16
rcr
xorl
rol
fwait
jmp
clc
stc
enter
sbbl
cmp
roll
jo
aad
ret
adc
shl
inc
sahf
aaa
lods
sub
pusha
pusha
jmp
add
adc
mov
js
push
fnstcw
iret
mov
pushf
adc
js
pop
test
push
aas
cmpsb
dec
sahf
sahf
mov
ss
cwtl
inc
scas
mov
and
and
adc
sbb
aad
mov
cmc
daa
adc
cmp
pusha
cld
adc
daa
mov
adc
mov
and
dec
xchg
jle
scas
cmc
daa
mov
loope
jl
loope
inc
push
add
fs
push
nop
push
dec
xor
enter
pop
sbb
pop
arpl
add
fistps
addb
push
arpl
lods
sub
and
xor
icebp
mov
and
dec
cmpsb
sub
xchg
pop
shll
push
aad
jnp
aad
mov
xchg
sub
aam
and
ds
repnz
dec
fnstenv
lock
orl
call
adc
xlat
int3
mov
lods
mov
xor
pop
movsb
cmp
mov
cli
or
dec
daa
int
cmpsl
pushf
mov
sbb
push
sub
sti
rolb
push
inc
mov
rcll
mov
ds
jge
sarb
push
add
push
mov
sub
dec
into
dec
inc
repz
loop
fsubl
arpl
mov
sbb
clc
inc
enter
ror
cmp
mov
push
xor
xlat
lock
pop
pop
xor
cmc
pop
push
cltd
jns
dec
cmp
mov
nop
inc
add
cmp
and
push
add
adc
push
out
xchg
iret
jle
lea
sub
jl
xor
or
int
ret
lret
lods
ficoms
add
inc
pusha
andb
mov
inc
ret
aaa
pusha
or
mov
mov
and
jno
sub
cmp
int
jne
mov
push
addr16
xchg
cmpsl
das
stc
mov
insb
stc
cli
mov
adc
push
hlt
stos
mov
fwait
mov
icebp
test
mov
in
stos
xchg
lds
jp
sub
cmp
mov
add
and
andb
mov
push
test
stos
ss
mov
add
adc
cld
in
mov
pusha
xor
dec
and
push
xor
dec
jo
inc
ds
ds
xchg
sbb
xchg
shll
or
mov
cmc
adc
popf
mov
sbb
loopne
or
outsb
sbbl
adc
addl
jmp
xchg
orb
push
fsubrs
daa
dec
sahf
mov
cli
add
push
into
je
mov
jp
mov
je
stos
mov
lret
orb
pop
adc
mov
test
cmp
in
mov
repz
lods
fs
or
cs
test
outsl
popa
push
in
push
ds
pop
push
jo
out
loopne
mov
adc
inc
cmc
jg
cmpsl
das
mov
ret
push
mov
enter
jnp
outsb
or
push
test
bound
test
inc
neg
xor
adcl
dec
mov
xor
into
sub
inc
aaa
jmp
mov
cmpsl
inc
fldlg2
adc
andl
cmp
out
in
cs
push
outsb
mov
jnp
es
xor
add
push
cmpsl
sbb
loopne
clc
push
idivl
inc
subb
pop
sub
push
cmp
lds
or
push
mov
outsb
test
ret
push
sti
mov
inc
addr16
jl
repnz
jge
stc
lock
ja
setne
pop
lods
iret
stos
pop
nop
call
dec
mov
mov
fdiv
sbb
jns
or
cmpsl
pop
push
flds
fsubrl
imul
cmpsl
mov
jl
inc
sbb
scas
iret
dec
mov
jne
xor
add
xchg
pop
dec
jl
jp
call
xor
psllq
and
jge
adc
icebp
jle
aas
xchg
popf
bound
mov
test
es
dec
jecxz
ret
out
inc
sbb
arpl
push
aaa
mov
mov
fst
jle
add
stc
aaa
mov
push
push
xchg
cltd
nop
in
dec
in
cmp
in
cmp
mov
outsb
shlb
ret
dec
lods
ds
incb
sub
inc
adc
push
test
std
mov
subl
shl
push
cmp
and
add
stc
loopne
lret
inc
fildl
shll
pop
adc
cmp
pop
sub
into
sbb
xchg
jb
outsb
xchg
enter
mov
insl
cmp
pop
cli
scas
stos
and
push
adc
movsb
mov
push
std
insb
adc
sub
mov
dec
test
jno
pop
mov
jnp
xchg
jne
or
pop
sbb
sub
jbe
es
mov
test
lret
mov
lret
inc
popa
lahf
push
enter
push
movsl
mov
das
or
cmpsb
sub
dec
imul
or
out
scas
notb
or
shl
jmp
fwait
dec
ret
aam
push
or
mov
fidivrs
push
or
sbb
cmp
je
adc
cwtl
bnd
call
cmp
or
test
aam
add
xchg
and
pusha
mov
div
push
adc
mov
cmp
enter
pop
adc
sub
call
and
mov
int3
mov
push
jl
xchg
sti
lods
test
xchg
cmp
push
sub
pusha
dec
int3
fsubs
dec
dec
xor
imul
sub
int
mov
push
mov
outsl
inc
push
test
call
test
cmp
and
pop
inc
shll
outsb
in
in
xchg
mov
imull
xchg
xor
pushf
dec
out
test
dec
pop
popf
iret
pop
lock
mov
push
lcall
mov
icebp
out
lahf
incb
fsubrs
mov
scas
mov
loope
add
popa
jp
ror
add
push
loopne
in
rorl
movsl
shll
lea
pop
xor
loope
icebp
insl
add
test
pop
jmp
imul
fiaddl
mov
xlat
loope
int3
mov
adc
mov
ljmp
pop
lcall
andb
mov
jae
or
lahf
pop
fidivrl
into
xchg
pusha
and
icebp
adc
cltd
lods
pop
pop
in
jbe
mov
mov
cmp
mov
fsubs
and
out
adc
int
imul
cltd
cmp
add
lahf
in
mov
jbe
inc
daa
repz
add
shrl
lock
mov
aaa
leave
cwtl
cmpsl
and
push
inc
movsb
inc
nop
xor
ss
icebp
sar
mov
ja
fs
sbb
fmuls
sbb
lret
dec
or
mov
fadds
out
fistpll
adc
xor
mov
mov
fstl
shlb
push
cmp
or
mov
adc
es
xchg
aaa
clc
adc
cs
sbb
iret
jo
imul
ficompl
loope
rcr
push
xchg
xor
cmc
lret
cmp
lahf
cmp
push
sbb
adc
cld
pushf
push
aad
leave
data16
lret
xor
push
or
ds
adc
sub
dec
rcll
enter
das
xor
lret
enter
movsl
call
in
cmc
lods
add
and
lret
inc
test
mov
xlat
aaa
and
pop
and
inc
insb
cltd
shlb
cmpsb
popf
aas
push
push
les
dec
xchg
dec
sbb
mov
out
lea
cs
shll
add
fmuls
negb
sbb
outsb
cltd
cmpsb
mov
mov
fistps
out
hlt
push
and
adc
xchg
jne
inc
fsts
je
mov
test
sbb
adc
mov
pusha
stos
data16
pop
or
mov
jbe
mov
adc
dec
xchg
stc
rcll
lds
mov
inc
inc
fildll
std
fildll
inc
repnz
sub
mov
aam
mov
ljmp
cltd
cmpsl
sub
xchg
push
fwait
jge
jb
inc
aas
adc
xor
inc
jmp
mov
lock
in
pop
subb
aad
adc
xchg
cmp
dec
xchg
es
inc
mov
imul
adc
jo
jae
fidivrs
and
stc
adc
std
inc
rolb
dec
cmpsb
push
dec
iret
movsl
sub
ja
iret
stos
gs
rorl
addr16
dec
xchg
pop
xchg
adcb
jmp
aam
testl
push
fisubs
cltd
push
pop
hlt
mov
loope
xor
test
pushf
sti
aam
add
pop
xchg
repnz
sbbl
pop
mov
fcomip
sub
or
sbb
pop
adc
mov
fwait
pop
push
xchg
es
sbb
test
jge
negb
sbb
insb
xchg
jne
inc
out
loopne
pusha
stos
fisttpl
mov
lcall
clc
aam
xchg
jbe
ficompl
jmp
inc
mov
aad
jns
xchg
and
lea
push
sub
inc
mov
pop
and
and
insb
mov
je
cmp
mov
clc
pop
jmp
lods
ficompl
in
jmp
adc
inc
scas
mov
sbb
lds
mov
and
mov
mov
add
in
stos
push
and
push
xchg
pop
and
nop
sbb
jae
les
jbe
mov
sub
loope
sbb
test
fnsave
fistpl
xchg
in
ret
subl
inc
rcll
adc
imul
jb
adc
sbb
jmp
and
cmp
das
loop
out
cmc
inc
scas
lret
mov
mov
sub
pop
pusha
lcall
mov
mov
loope
cmp
sub
loopne
mov
xor
je
add
mov
pop
adc
dec
dec
ds
mov
xchg
cmp
mov
sub
pop
mov
mov
fstl
jbe
mov
bound
cwtl
gs
fisttpl
mov
mov
lret
xor
popa
cmp
insb
addb
xor
mov
sub
pop
inc
sub
outsb
mov
jp
and
call
xchg
xchg
test
lea
mov
dec
push
xchg
loop
sbb
or
mov
test
fstl
cli
sub
loope
push
push
mov
xchg
inc
xchg
sub
aad
ja
push
jne
or
lret
sbb
and
sub
dec
loop
iret
xchg
mov
loopne
lret
inc
jnp
mov
fcomip
mov
repnz
or
fmull
mov
lds
repz
sbbb
xor
pop
mov
mov
jge
add
outsb
pop
xor
xchg
xchg
push
outsl
imul
push
mov
in
mov
dec
addr16
fidivl
outsb
in
leave
adc
cmpsl
sub
sub
ljmp
cmp
mov
mov
test
add
mov
dec
cmp
loopne
outsb
mov
sub
jp
xor
mov
stc
test
stos
fstps
movl
jmp
insb
inc
xor
adcb
xchg
cmpsb
test
cmp
xchg
or
xor
cmp
xchg
cmc
subl
lcall
gs
fistpll
mov
jo
out
cmp
jge
pop
nop
in
arpl
adc
test
nop
adc
inc
rolb
sar
xchg
hlt
repz
dec
cmp
mov
not
pop
pop
jno
fwait
sbb
mov
mov
cmp
or
lods
outsb
inc
push
cmpsl
and
cld
jns
inc
inc
mov
mov
stos
ss
icebp
pusha
xlat
pop
pop
push
out
nop
lcall
outsl
xchg
and
ret
pusha
aaa
test
sub
into
je
xchg
mov
outsl
out
push
into
test
bound
cwtl
push
pop
mov
aaa
mov
push
in
iret
icebp
mov
rol
pop
inc
enter
jecxz
mov
adc
adc
cmp
pop
cltd
movq
push
orl
stos
movsb
adc
jae
add
inc
push
or
and
mov
test
es
pop
pop
or
mov
sbb
adc
test
das
je
clc
mov
mov
and
out
inc
pop
insb
test
or
mull
push
stos
dec
daa
data16
cmp
mov
movsb
dec
dec
or
dec
jge
js
notl
lcall
mov
enter
xchg
fs
mov
fadds
mov
aaa
lret
out
imul
or
xchg
xrelease
xor
push
cmp
pop
cli
inc
mov
push
jns
xor
cwtl
jmp
outsb
mov
push
inc
test
adc
mul
xchg
enter
dec
jmp
arpl
lods
aaa
adcl
rcr
fsubl
into
popa
sti
rcll
fstpt
mov
in
inc
mov
pop
mov
push
pop
sub
mov
or
push
repz
mov
aad
out
xchg
jmp
sbb
push
cs
mov
sub
scas
cwtl
nop
test
adc
adc
add
sbb
bound
mov
jp
and
push
test
mov
sbb
xchg
sbbl
cmpsl
movsb
lahf
in
in
fldt
xchg
mov
icebp
out
cwtl
inc
xor
popf
lcall
pop
add
adc
mov
add
movsl
xchg
jne
fst
outsl
subb
mov
xchg
fdivrl
sbb
ja
test
xlat
mov
bound
xor
hlt
jb
popa
pop
int
push
sub
notl
add
cld
xlat
sub
jbe
clc
and
xchg
aaa
mov
daa
clc
jb
insl
cmpsl
xchg
sub
test
push
sti
push
push
mov
adc
sub
xchg
adc
push
sbb
mov
ljmp
rcrb
daa
lock
jae
imul
mov
gs
xor
cli
mov
shll
test
or
inc
adc
loopne
add
cmp
pop
inc
fadd
mov
add
cmp
mov
pop
mov
xor
das
push
inc
pusha
sbb
push
inc
pop
push
test
icebp
arpl
xor
push
and
adc
xchg
jecxz
ret
sub
andb
and
jge
pop
repnz
and
adc
divl
jge
pop
daa
imul
out
lds
rcrl
mov
jo
dec
rcll
ficomps
in
nop
mov
fsub
mov
mov
mov
sahf
add
adcb
inc
cmp
test
ja
jge
lods
sub
and
aaa
notb
mov
dec
pop
sub
lahf
scas
ror
adc
ja
inc
push
fs
jmp
cwtl
imul
or
xlat
cmp
push
xchg
push
imull
dec
jmp
add
inc
ret
arpl
cmp
inc
mov
shlb
mov
xor
adc
in
stos
loope
mov
adc
xchg
pop
jge
push
mov
inc
sub
hlt
mov
adc
shlb
addb
dec
inc
call
xlat
and
leave
dec
sub
arpl
aad
arpl
call
pop
loop
subl
inc
and
call
outsb
int3
ss
jecxz
ds
popf
fs
cmp
rcl
daa
or
ds
movsb
dec
jns
adc
sub
mov
or
jg
shrb
vpsrlq
xchg
push
rcrb
test
stos
adc
or
enter
mov
movsb
sahf
faddl
push
xlat
cmovl
rcl
cmp
xchg
rcr
cmp
fcoms
adc
js
mov
loope
cld
aas
sbb
jmp
push
movsb
push
xor
movsb
roll
inc
sbb
ret
jge
aaa
sbb
mov
xchg
js
mov
xchg
xor
sbb
or
xchg
sub
mov
dec
aas
mov
cwtl
lock
inc
test
add
adcl
jge
pop
jmp
dec
test
stc
jns
xchg
mov
sub
iret
clc
addr16
pop
sbb
xor
mov
sub
sahf
out
push
mov
rorl
packsswb
aam
arpl
push
int3
mov
addl
cmp
dec
hlt
mov
pusha
xchg
mov
es
das
int3
aam
scas
movsb
sub
push
icebp
inc
sbb
adc
push
aas
cmp
inc
pop
lods
push
es
xchg
fldenv
mov
dec
push
mov
mov
das
lds
pop
pop
pop
adcb
fwait
pop
movsb
dec
adc
xor
adc
mov
mov
fnstenv
imul
enter
ret
xor
hlt
and
nop
stos
and
lret
inc
mov
adc
push
xchg
adc
pop
icebp
adc
shll
test
shll
xor
push
in
repnz
rorb
popa
out
and
pushf
icebp
dec
and
pop
inc
fs
inc
or
test
loopne
lods
cmpsl
inc
enter
adc
fiaddl
mov
xlat
jmp
jle
pop
sahf
stos
dec
mov
dec
mov
dec
jp
lea
lds
mov
mov
push
fs
inc
adc
mov
jne
and
inc
iret
or
jp
mov
sbbb
test
aad
jo
pop
or
and
or
add
in
ja
loop
jnp
decb
sub
popf
mov
cwtl
cmp
test
lret
cltd
xor
lods
fwait
ja
dec
insb
cmpsl
mov
mov
and
rclb
aam
cld
push
fistpll
sub
add
add
mov
cwtl
jnp
adc
or
fwait
xchg
pop
cwtl
jnp
pop
jmp
sbb
sub
mov
jmp
ret
iret
in
cwtl
mov
mov
xlat
das
cli
xchg
cmc
mov
nop
outsb
mov
sbb
es
aaa
sub
dec
pop
dec
xor
sbb
add
mov
adc
fsub
pop
fmul
test
xchg
movsl
repz
mov
push
pop
test
cmpsl
mov
js
cmp
inc
mov
fwait
roll
xchg
mov
inc
xchg
pop
mov
and
sub
mov
rorl
shrb
inc
adc
mov
add
pop
in
aad
xchg
xchg
cmpl
mov
adc
aam
mov
stos
std
adc
push
inc
push
sub
and
cld
ljmp
int
jg
pop
aam
lahf
ret
mov
sub
and
dec
in
shlb
lock
test
repz
ret
sarl
cld
je
in
xor
xchg
movsb
mov
lret
leave
xor
sbb
pusha
mov
xchg
jecxz
adcl
push
adc
lfs
xor
loope
test
dec
in
ret
into
popa
jb
pop
mov
ret
repz
xchg
xchg
movsl
jae
mov
scas
lahf
sub
cmp
notb
test
cmp
or
cltd
pop
lods
xchg
sbb
sbb
aad
xchg
leave
inc
or
sub
insl
js
daa
jg
sub
sub
aad
xchg
xor
or
mov
loopne
fmulp
push
mov
loopne
loop
test
aam
loope
outsb
xchg
loopne
fstpl
mov
add
ret
fstpl
ja
fstps
loopne
mov
sbb
sarb
inc
inc
and
test
xor
out
xchg
xorb
jo
push
lret
push
inc
xor
mov
jae
mov
push
or
or
or
sub
lret
inc
mov
cwtl
in
loopne
xchg
inc
pop
cwtl
or
jp
mov
pushf
xor
je
cmp
into
test
test
mov
clc
stc
mov
jne
mov
add
and
aam
mov
jns
out
mov
ret
jp
cs
enter
xchg
jo
inc
mov
fstps
into
sbb
pusha
mov
dec
cmpsl
ret
pop
xchg
popa
inc
xchg
cmpsb
adc
insb
cmp
inc
clc
mov
in
aas
adc
je
push
testl
add
test
shll
mov
aas
lds
lret
adc
arpl
pusha
xlat
inc
sub
mov
and
cmp
iret
pop
adc
int
sbb
mov
mov
leave
ret
add
test
lea
and
or
fldt
std
in
bound
clc
into
sbb
adc
and
in
adc
out
cltd
pop
fsub
imul
mov
jb
loopne
sbb
clc
mov
push
push
dec
cmc
stc
mov
dec
pop
mov
mull
fistps
sbb
in
jge
subl
dec
and
mov
iret
leave
cs
mov
push
mov
cmc
daa
sahf
shll
or
fwait
sub
mov
sti
push
dec
into
push
lret
sbb
jp
lcall
push
ret
jg
inc
sub
dec
cmp
ss
popa
push
dec
movsb
push
and
xor
cmp
push
pop
call
out
dec
roll
dec
outsb
ds
cs
mov
cwtl
push
rcrl
lret
xchg
je
xchg
push
hlt
jae
xor
movsl
arpl
and
ds
dec
pushf
and
lods
outsl
mov
jo
repnz
gs
adc
pop
and
out
clc
lret
lds
mov
pop
mov
sahf
into
or
lock
sbb
les
fs
dec
in
sbb
bound
lret
outsb
mov
add
jmp
xorb
push
xor
popf
adc
cmc
imul
xchg
lcall
sbb
jno
jecxz
mov
std
aas
sub
sub
enter
clc
add
test
cmp
mov
sub
fwait
xchg
scas
stos
mov
mov
inc
flds
or
jmp
xchg
shrb
leave
hlt
adcb
test
test
fnstenv
pushf
out
xchg
mov
insb
stos
int3
mov
mov
adc
mov
pop
repz
rorb
sub
push
inc
test
pop
test
push
std
sub
or
cmc
cmp
push
and
fwait
stos
mov
adc
iret
mov
pop
push
dec
mov
xchg
sbb
cmp
or
mov
jbe
adc
jmp
and
add
push
fbld
lods
test
push
stos
gs
outsb
ret
mov
icebp
push
sub
dec
popa
jb
xchg
push
arpl
jg
dec
pop
out
dec
jecxz
cmp
mov
adc
dec
sahf
sarb
pop
insb
rolb
xor
clc
lret
sub
mov
ret
popf
cli
mov
mulb
adc
enter
jge
adc
jg
and
out
daa
jp
and
push
adc
xor
loope
js
add
jl
or
jno
mov
xchg
push
cmc
jge
imul
sbb
cs
cmpsl
rcll
scas
nop
mov
dec
sub
shr
mov
jbe
and
test
test
cli
shrl
ja
daa
ljmp
popa
adc
jg
aas
int
repnz
mov
pop
stc
adc
test
and
in
lods
ja
faddl
and
sbb
sub
mov
cs
rcrl
cmp
mov
popl
add
push
loopne
or
loope
inc
aad
stc
cmp
mov
and
pop
out
dec
fcoms
mov
mov
out
lret
sub
ss
xchg
mov
cwtl
aaa
and
sbb
out
lea
int3
mov
pop
aaa
push
lea
pop
stos
dec
fsubrl
cld
inc
jecxz
dec
aas
inc
xchg
pop
or
pop
out
pop
jne,pn
out
jno
add
stc
cltd
loope
loope
outsb
push
xor
nop
ret
push
nop
jnp,pn
add
push
outsb
je
fs
hlt
xor
xor
outsb
lds
notb
and
dec
sub
imul
lcall
jne
insb
arpl
jecxz
bound
rorl
jb
xchg
gs
xor
sbb
in
jbe
das
rcrb
push
xchg
pop
aad
ss
push
xchg
loopne
pop
fldt
inc
inc
cmp
cmp
rcrl
jo
sub
jno
ja
cmpsb
fldl
loopne
xchg
test
sar
adc
cmp
notl
xchg
push
call
ljmp
mov
pop
aad
cmp
scas
mov
cmp
jp
icebp
jnp
sarb
pop
lcall
cmp
shlb
enter
add
or
sub
cmp
sub
adc
mov
sbb
jecxz
adc
fstpt
in
push
push
dec
cmp
clc
cmpsb
incl
xchg
add
mov
xchg
cmp
test
dec
xchg
mulb
mov
xor
sahf
loope
jle
cmp
add
ss
and
or
or
stos
lcall
cmc
insb
mov
xor
in
push
mov
xchg
mov
std
jns
mov
mov
pop
subb
mov
xor
loopne
jle
push
out
mov
xchg
jns
cmp
inc
stos
push
pop
adc
sub
inc
fnstcw
push
lcall
push
fidivl
js
cmp
loop
xor
xchg
jp
daa
in
add
dec
xchg
xlat
mov
cli
outsl
adcl
pop
mov
mov
lods
ss
and
std
ja
push
sbb
stos
jno
gs
into
cltd
in
stc
push
sbb
and
cld
hlt
sub
popf
fcoml
cvttps2pi
into
cmc
xchg
outsb
inc
es
push
mov
mov
pop
pop
repz
inc
shlb
add
movsb
xor
movsl
loope
and
lret
gs
mov
std
mov
addr16
mov
add
sub
pop
subb
ficoms
xchg
mov
scas
test
rclb
mov
push
mov
mov
ljmp
movl
push
out
sarb
push
jp
sbb
rcll
ss
jne
rep
jbe
jnp
jge
inc
popa
test
loopne
inc
imul
mov
lcall
pop
mov
mov
mov
push
arpl
nop
fmull
or
inc
sbb
fwait
movsb
jecxz
into
les
fstps
int3
enter
mov
mov
out
xor
idivl
xchg
dec
xchg
and
push
jge
enter
lea
lock
jg
lea
cwtl
sbb
imul
push
rcrl
test
ret
addr16
xchg
cmp
ficoml
test
test
subb
xchg
data16
cli
jmp
outsb
xor
ja
and
mov
ljmp
mov
shr
out
push
pop
mov
rclb
push
push
mov
fdivs
and
das
es
jb
idiv
cs
adcl
push
sub
repz
dec
sub
push
mov
mov
jo
int
inc
fistpll
sbb
xchg
sub
negb
cmpsb
jns
dec
lea
fdivrs
and
sbb
push
stc
in
test
aas
aas
lahf
dec
cmp
ror
cs
xlat
imul
imul
insb
jo
scas
xchg
lahf
mov
or
jae
dec
outsl
sub
cli
shrb
xor
cli
icebp
push
fsubs
add
stc
xchg
push
add
stos
data16
adc
mov
push
sahf
iret
jp
mov
xor
and
sub
movsb
stos
test
push
mov
adc
call
lods
and
xchg
sti
sbb
mov
adc
enter
sbb
mov
cmc
lds
lret
and
lret
ret
pop
addr16
jmp
sub
sbb
jge
fisubl
add
hlt
mov
pusha
jb
or
adc
mov
inc
dec
cld
out
and
je
dec
mov
xor
pop
rcl
stc
or
pop
pop
add
push
and
insl
mov
test
push
imul
sahf
test
mov
mov
sbb
stos
imul
xchg
fdivp
lock
in
insl
out
xchg
rcrb
fisttpl
adc
mov
push
lds
and
in
cld
xchg
mov
lcall
pop
negl
xchg
sbb
cmp
dec
stos
xlat
sub
dec
ja
subb
mov
sub
sub
and
add
lea
xacquire
jne
push
daa
and
pusha
cmp
test
pop
mov
pop
mov
inc
divl
push
ds
jns
test
and
sub
xchg
jecxz
pop
xchg
sbb
sub
add
stos
and
inc
lret
jne
mov
cmp
push
scas
lock
stc
movsl
inc
inc
sbb
or
add
in
or
jge
xor
jno
dec
ficomps
add
xchg
push
int
insl
dec
popl
mov
je
cmp
mov
rolb
aam
imul
push
insb
into
rorl
pop
rorl
jmp
sbb
mov
add
xor
dec
daa
insl
adc
popf
ljmp
sub
cmc
xor
jne
ljmp
in
dec
xchg
or
inc
ret
nop
ficoms
xchg
mov
fstpl
pusha
dec
xchg
jae
jne,pn
cmp
mov
mov
cmpsb
xchg
shll
faddp
xor
xor
sbb
push
enter
mov
orb
pop
push
push
jb
mov
xorb
pop
dec
ror
or
ss
mov
add
mov
scas
scas
cmp
lahf
add
into
mov
sahf
jno
es
add
jmp
loope
cli
stos
idivb
jmp
push
mov
jl
cmpsb
adcl
movsb
insl
and
ja
leave
scas
in
or
loop
fs
not
iret
mov
dec
pop
pop
sbb
sbb
and
xor
vmovupd
push
sti
and
pop
add
sub
divl
dec
gs
lret
and
push
das
rcrl
xor
mov
xchg
enter
faddl
out
cmp
cmpsb
dec
pop
outsl
mov
daa
jg
test
mov
out
sti
and
rolb
js
cmp
loope
push
xor
hlt
push
dec
sbb
pop
ss
sub
mov
xor
adc
push
jnp
insb
fadds
out
cmp
addl
push
insb
adc
ja
ljmp
fs
pop
lock
andl
mov
cmpb
lret
push
lcall
push
cltd
mov
lods
dec
loopne
fs
bound
mov
and
enter
shr
shl
dec
loope
repz
sbb
dec
push
jmp
or
rorb
aad
fs
jns
xchg
inc
cmp
popf
bound
dec
cmp
fwait
pop
mov
andb
in
pop
scas
mov
sarl
pop
adc
cmc
xchg
fs
adc
enter
call
outsl
inc
pop
shrl
aad
mov
and
adc
push
mov
inc
movsb
ds
pop
jl
or
xor
dec
insb
clc
je
clc
adc
adc
cwtl
mov
popf
add
push
lods
imul
push
insb
les
out
sarb
ret
and
jb
push
mov
jb
mov
cld
stos
lods
cmp
loope
bndstx
xchg
les
clc
pop
sbb
ljmp
fstpt
int3
xchg
ja
add
mov
shll
outsb
pop
pushf
push
les
or
push
push
daa
dec
jle
dec
fstps
aas
dec
dec
faddl
cmpsl
es
pop
popf
dec
movsb
cld
jl
add
and
movsl
je
rorl
int3
mov
or
sbb
mov
sbb
scas
mov
pop
mov
and
xchg
nop
fnstenv
inc
fcmove
xchg
cmp
jge
sub
in
adc
pop
mov
btr
hlt
pop
stc
repnz
pushf
lret
sarb
cltd
test
xchg
jp
and
mov
fisubrl
pop
pusha
out
aad
inc
lds
lcall
pop
push
xchg
dec
shl
xchg
sbb
push
and
sub
test
iret
xchg
arpl
popa
fs
and
jb
xchg
dec
jae
mov
mov
es
xor
jmp
inc
mov
loop
aad
in
arpl
out
in
cmp
popf
fwait
mul
cmp
js
leave
out
mov
addb
in
fsts
lret
xchg
mov
xchg
mov
in
add
and
loopne
or
inc
cmpb
jl
xlat
nop
push
aam
iret
imul
testb
dec
jnp
andl
mov
mov
lds
push
adc
sarb
xchg
rclb
mov
sbb
arpl
dec
mov
jb
popf
mov
mov
cmp
test
pop
stc
xor
pusha
mov
fcmovnu
je
dec
jns
mov
mov
push
stos
fwait
pop
mov
dec
lea
fwait
and
push
repnz
ljmp
fnstsw
add
pop
iret
mov
push
testb
aad
mov
fwait
mov
sbb
das
subb
xchg
lahf
mov
add
dec
or
jae
out
or
fwait
int
pop
fnstsw
cmc
mov
mov
mov
int
adc
out
popa
cwtl
xchg
ret
lods
out
out
ss
test
jg
mov
shld
and
mov
push
lods
adcl
adc
add
or
adc
xchg
fwait
mov
dec
mov
cmp
pushl
andb
out
jle
jmp
mov
add
in
mov
sub
push
cwtl
mov
mov
jge
dec
cld
jl
fdiv
mov
mov
pop
inc
ja
xchg
sahf
andl
xchg
icebp
or
stos
dec
inc
popa
mov
pop
outsb
loope
jp
cltd
pusha
sub
mov
add
xor
mov
addl
pushf
xchg
dec
loop
mov
mov
pop
mov
daa
jmp
push
cltd
jnp
popa
cmp
enter
icebp
movsl
jle
push
iret
mov
lahf
ja
dec
sub
in
mov
int3
iret
lods
adc
mov
xor
mov
shrb
push
mov
ljmp
sub
gs
nop
ja
sbb
mov
push
or
pusha
pusha
jnp
in
mov
call
mov
jbe
stos
fisubl
xor
stos
xchg
pop
jbe
and
lahf
add
cmpsl
stc
cmc
into
add
into
sub
insl
dec
dec
jl
test
cmp
and
outsl
fiaddl
mov
in
imul
inc
and
pop
xchg
cltd
xchg
xor
into
dec
mov
sti
xchg
mov
sbb
notb
push
int3
int
lods
jb
imul
jle
scas
add
mov
test
in
call
inc
fidivs
adc
add
jb
faddl
lock
dec
cmpsb
icebp
arpl
gs
popf
adc
mov
pop
mov
xchg
int
or
popl
pcmpgtb
fidivrs
pop
xchg
mov
dec
sysexit
add
ljmp
fisubl
adc
enter
mov
or
es
ja
ja
push
add
adc
mov
dec
jle
aad
cli
add
je
sub
push
lcall
rcrl
push
or
sbb
mov
push
xor
xchg
leave
ficoms
scas
push
inc
test
shl
das
stc
dec
inc
sub
xchg
inc
sub
adc
bound
sbb
fadds
dec
pop
ficoms
test
jp
mov
outsb
iret
jl
pop
fucomp
jae
fwait
inc
fistl
and
int3
decb
xchg
inc
loop
mov
out
mov
sub
jno
iret
or
push
imul
lret
pop
ds
and
push
pop
xlat
push
lret
push
lods
popf
xchg
add
ds
imul
xor
sub
and
out
mov
add
jnp
lds
fidivrl
dec
push
mov
lds
sti
out
or
popf
insb
xchg
inc
jno
loop
jno
cmp
and
in
dec
pushl
or
adc
jb
jle
lcall
xor
jb
sub
mov
sbb
fld
mov
sub
inc
fidivl
jbe
lret
push
insl
cmpsl
push
push
mov
jmp
cmpsb
call
and
insl
ret
sub
pop
pop
sub
iret
jne
lds
mov
rorl
inc
lock
sahf
sbb
xchg
pop
xor
fldlg2
sbb
mov
iret
fs
mov
mull
aam
jp
iret
pop
sub
push
xchg
dec
aas
xchg
mov
dec
push
movsl
jae
repz
mov
test
out
inc
repnz
mov
call
pushf
mov
fcoms
jo
sahf
mov
fidivs
ror
popf
or
stos
test
inc
push
and
mov
mov
notl
mov
inc
push
ja
scas
pop
sub
jbe
outsl
cltd
pop
mov
mov
scas
lret
out
cmp
pop
jge
dec
mov
icebp
sub
adc
pop
ret
adc
xor
in
cmp
xor
popf
aad
dec
cli
dec
mov
xchg
int3
aaa
sbb
int
fidivl
mov
or
xor
pusha
fcoms
shlb
in
sub
je
stos
mov
stos
sbb
jae
mov
push
xchg
or
mov
inc
bound
or
pop
gs
lcall
dec
mov
cmp
divb
lret
jp
popf
lods
loop
and
pop
fisttpll
icebp
adc
enter
or
sahf
sarl
and
sti
pop
inc
mov
and
or
lret
inc
xor
dec
imul
loope
gs
adc
enter
scas
jnp
movsb
pop
push
sbb
imul
xor
xchg
addr16
orl
cmp
push
mov
mov
mov
pop
dec
cmp
pushw
shll
push
xchg
xchg
mov
cmpsb
leave
inc
xor
rclb
daa
imul
adc
xor
pop
pop
push
mov
jno
push
and
movsl
cmp
es
ficoms
lcall
jne
pop
nop
lretw
outsl
mov
js
adc
pop
sub
and
test
xor
in
test
pop
xor
fst
insb
cmpsb
shrb
jle
push
jae
fisubs
repnz
push
clc
pop
cmp
push
pop
frstor
mov
repnz
push
jl
mov
push
xor
loope
leave
pop
nop
hlt
scas
xadd
loop
xchg
cmpb
sahf
xor
jns
jb
dec
in
jnp
push
das
pop
cmp
jb
lea
pop
int3
push
xchg
xorb
or
mov
add
xchg
leave
mov
or
fldenv
pop
jg
xlat
lock
ds
xor
push
or
sbb
lcall
sub
neg
in
pop
movsl
jl
jne
inc
adc
shrb
testl
sbb
ret
test
inc
pop
subb
push
ljmp
ds
cs
cmpsl
movsb
leave
adc
dec
iret
push
dec
out
xlat
ds
aam
mov
ja
xor
push
popf
fcoml
inc
mov
loopne
in
cwtl
inc
xchg
jmp
and
lds
dec
pop
xchg
inc
ret
shld
lret
xor
mov
mov
mov
mov
push
dec
push
pop
daa
inc
popa
mov
push
or
cli
push
repz
ds
mov
xchg
sti
pop
sbb
xchg
cmp
and
dec
pop
sub
stos
fistpll
pusha
or
daa
jge
ret
addr16
jns
mov
cmp
add
lcall
bound
pop
shl
pop
or
xor
mov
cli
icebp
dec
cld
mov
loope
sahf
or
push
and
xor
sbb
mov
cmp
cmp
lods
push
std
mov
fisubrl
dec
mov
jp
push
mov
mov
add
fidivl
cld
mov
xchg
je
fcmovu
bound
mov
arpl
stos
mov
shlb
js
sub
es
xor
fiadds
lods
mov
xchg
inc
jmp
push
dec
sub
mov
lcall
or
mov
jle
pop
mull
je
fisubrs
neg
int
gs
movsb
shrl
call
cmpb
or
lahf
or
jns
or
mov
adc
lock
shll
mul
push
cli
das
lret
fsubs
push
mov
lahf
js
clc
leave
push
jnp
mov
clc
mov
xor
mov
test
out
jne
nop
mov
mov
orl
xor
mov
and
cli
jge
mov
dec
insl
mov
cmc
xchg
sbb
repnz
popa
cmp
stos
inc
jae
add
add
outsb
dec
mov
push
cwtl
push
jbe
adcl
in
loopne
cltd
ljmp
lahf
fwait
push
icebp
dec
or
cmpsl
jne
jg
push
ljmp
arpl
gs
pop
sub
fsubl
pop
dec
jae
aas
shl
xor
pop
js
sti
insb
insl
and
in
lret
lods
ret
lcall
outsl
imull
lods
mov
xor
jmp
jbe
mov
push
fdivrp
ds
mov
pop
cmp
rorl
shrb
imul
push
dec
push
push
or
hlt
fsubs
cmp
jnp
fdivrl
addb
jmp
lret
inc
or
stos
idiv
into
and
push
mov
lea
xor
test
cli
iret
mov
sub
pop
popa
xor
movsl
sahf
lea
fsubr
inc
cmpsl
lea
jne
in
inc
mov
ja
xor
and
mov
movsb
mov
jnp
sub
push
pushf
sub
mov
mov
lods
mov
fdivrl
mov
mov
std
iret
cmpsl
push
aam
xchg
dec
mov
repz
mov
push
ltr
loop
add
call
jge
int
cmp
scas
ds
pop
xor
xchg
add
xor
test
cli
int3
sti
cltd
sbb
pop
je
or
xchg
pushf
push
jg
movl
jo
mov
push
mov
jnp
inc
mov
lret
std
out
xchg
das
dec
cmp
cmp
push
adc
outsb
leave
gs
jo
mov
xor
mov
push
xchg
ror
popf
cmc
xor
jmp
ljmp
pop
pop
out
stc
das
enter
xor
std
and
dec
jge
les
in
in
mov
mov
ss
inc
imul
add
mov
lcall
insb
jns
jecxz
cmpl
sub
lods
dec
inc
sbb
sub
aad
push
adc
scas
call
sbb
fwait
sub
pusha
scas
jb
sub
cmp
dec
lods
fldl
mov
in
dec
rolb
in
je
cli
stc
jne
inc
push
pop
mov
lock
inc
mov
xor
add
push
testl
call
adc
mov
jg
mov
bound
mov
pop
aad
pop
paddusb
popa
cmp
movsb
lret
ds
cmp
push
cmp
cmp
or
mov
add
loopne
xchg
and
pop
mov
arpl
fwait
sbb
add
xorl
fsqrt
jb
fcmovbe
inc
mov
mov
xchg
add
push
sbb
inc
cmp
lret
repnz
push
pop
mov
popf
in
pusha
sub
sbb
sbb
push
in
imul
jmp
jnp
jge
imul
test
and
in
xor
fsubrl
cli
mov
aam
enter
push
and
fisttpll
ljmp
shlb
data16
xchg
loop
stc
dec
pop
sub
mov
aas
xchg
jecxz
data16
dec
sub
sti
test
pop
lods
lret
cmp
xchg
jecxz
adc
loope
push
int
jo
jge
addr16
push
push
ljmp
aad
inc
push
loope
mov
fdivl
pop
aas
stos
movsb
fisubrl
mov
notl
in
fcoms
and
int3
outsl
stos
cld
fldt
pop
repnz
imul
clc
je
mov
pushf
lds
add
or
jge
imulb
nop
std
lcall
mov
xlat
pop
or
faddl
cmp
push
jl
push
int
hlt
rol
shll
call
bound
lea
add
mov
cmp
or
push
push
flds
int3
xlat
lods
hlt
cwtl
cli
gs
test
pop
dec
insb
mov
sahf
or
mov
push
mov
negl
pushf
cmp
lods
lcall
repnz
push
jge
test
xchg
mov
cmp
push
out
push
mov
pavgw
dec
dec
xchg
pop
cld
in
pop
pusha
cli
xor
fwait
push
out
shrb
mov
pushf
enter
adc
lods
mov
cld
pop
mov
xor
mov
mov
xchg
std
mov
mov
inc
data16
mov
jo
mov
mov
jecxz
outsl
xchg
data16
or
pusha
pop
xchg
cmp
pop
adc
jle
hlt
fwait
inc
sbb
insl
sub
push
xchg
sbb
and
xor
dec
adc
jo
add
dec
dec
popf
cmc
ds
imul
push
mov
cmp
sahf
jne
pop
daa
jl
into
fcomps
les
fs
add
in
sti
pop
fcomip
dec
out
mov
sbb
jne
sbb
dec
in
inc
fnsave
mulb
mov
shll
pop
mov
push
xchg
adc
lock
or
dec
icebp
aas
add
adc
int
fsubrl
cmpsl
xor
out
aam
int3
inc
push
sti
int
pop
ret
jl
mov
mov
mov
push
mov
pushf
ja
mov
jg
leave
sbb
cmp
cltd
adc
mov
icebp
mov
iret
mov
xchg
mov
add
jb
imul
mov
xorl
mov
int
mov
lds
into
adcb
push
sbb
mov
cmc
out
jbe
dec
dec
xchg
mov
cli
pushf
roll
xor
cltd
mov
add
sbb
nop
mov
xchg
cmp
mov
cs
sbb
aam
fisttpl
ja
add
sbb
jl
mov
fistl
dec
imul
addr16
xchg
jmp
sub
and
jle
imul
ficoms
push
and
cmpsl
inc
mov
mov
movsb
inc
mov
rclb
jl
jbe
pop
ss
and
clc
les
insl
into
div
cmc
rcrl
scas
pop
cmp
xchg
pop
loope
mov
inc
lret
inc
stc
dec
xchg
pop
ret
faddl
insb
mov
or
mov
stc
shld
inc
pop
adc
daa
cwtl
xor
movsb
cmp
enter
mov
mov
test
push
and
sbb
pop
dec
cmp
insb
cwtl
ret
pop
add
or
ret
das
sub
push
sti
repz
sti
mov
andb
add
adc
sub
out
pop
and
mov
popa
mov
mov
icebp
daa
rcrb
mov
test
xchg
mov
jmp
push
pop
lcall
enter
inc
rcr
ljmp
cli
jl
aas
sbb
pop
inc
push
fiadds
add
fs
shlb
mov
mov
fs
lret
cmp
xor
mov
mov
cmp
test
in
push
ret
push
cmp
mov
mov
and
mov
push
xor
adc
insw
in
mov
ds
outsl
jne
in
mov
loopne
cmp
push
mov
inc
mov
lods
jg
mov
movsb
out
mov
shlb
jg
leave
sub
pop
or
lods
sbb
cwtl
xor
ret
cmp
out
jno
lahf
lods
rclb
xchg
jns
dec
add
dec
cmp
mov
xchg
inc
xchg
idivb
push
jmp
jmp
inc
std
jnp
xchg
pop
sbb
mov
mov
mov
rclb
xlat
int
sbb
mov
xor
cmp
pop
addr16
mov
push
cmp
add
ljmp
idivl
je
jne
out
mov
sti
jnp
ret
in
sar
and
xchg
mov
lret
insb
pop
sub
jmp
add
sub
and
ja
scas
adc
xchg
dec
stc
xor
imul
dec
mov
xchg
ret
ja
pop
jae
sbb
mov
dec
jmp
loop
rorb
xchg
add
xor
xlat
inc
sub
xor
stos
sub
pop
fidivrl
jecxz
pushf
adc
shr
jle
lret
sbb
popa
jno
pop
in
imul
mov
and
mov
or
pop
mov
call
sysexit
aaa
fistpl
js
cmc
pop
into
mov
add
lock
jp
inc
cmc
arpl
fisubs
push
add
aas
xchg
insb
sub
push
lds
inc
mov
gs
add
xchg
push
or
sub
push
jl
cmp
mov
mov
in
cltd
pusha
or
lods
icebp
sahf
roll
mov
repz
cmp
xor
test
mov
xor
jne
jno
or
or
dec
lds
imul
and
cmp
add
scas
push
adc
iret
mov
hlt
popf
scas
push
jle
cwtl
pop
cmp
sub
add
or
test
mov
jge
lret
fbld
test
scas
push
ret
add
iret
mov
sbb
stos
xchg
loope
shl
and
sbb
dec
and
lret
enter
shlb
inc
cmp
call
movsb
ja
stos
inc
dec
daa
xchg
rorb
jge
cld
push
push
cld
jl
cmpb
je
mov
mov
pop
or
cmp
dec
xor
mov
lds
mov
movsl
das
mov
lds
inc
mov
andb
ds
lods
sbb
aam
ljmp
je
or
dec
adc
fisttps
sahf
mov
sarl
push
dec
dec
rclb
stos
sahf
mov
jbe
or
xchg
bound
lcall
cli
or
out
mov
xchg
iret
sti
test
scas
mov
lock
repz
aam
jnp
insb
iret
insl
mov
xchg
test
sub
addr16
fsubl
lds
aam
shll
rcrb
into
les
stos
xchg
dec
mov
ficomps
jp
push
int
or
aad
imul
lods
out
int3
jae
pop
loope
sbb
rclb
lods
jbe
cmp
pop
out
rolb
cs
sti
cmp
sbb
mov
ret
loope
popf
test
push
mov
ret
jb
dec
ret
xchg
lahf
jmp
mov
jmp
and
sub
push
nop
mov
push
xchg
jns
push
filds
icebp
addr16
add
into
and
jl
call
adc
out
adc
lcall
test
add
arpl
mov
flds
adc
std
xor
or
sbb
adc
xchg
fnsave
cmp
cmpb
sarl
roll
inc
or
scas
dec
test
jp
xor
mulb
sub
mov
jnp
bound
cs
sbb
mov
add
or
fsubs
lock
mov
in
in
sti
aaa
sti
cli
jecxz
or
or
addl
xlat
in
pop
aas
sub
std
or
jo
lahf
pop
addr16
push
data16
adc
mov
popf
int
inc
enter
and
cmp
js
mov
fcmovnb
mov
mov
xorb
inc
mov
and
scas
mov
jg
mov
les
cmc
jns
popa
ret
test
lock
adc
mov
ja
mov
mov
outsb
inc
and
aam
pop
mov
jmp
xor
mov
sub
std
adc
outsb
lods
and
loop
jae
outsl
dec
jmp
adc
jne
push
enter
push
or
xchg
inc
nop
jns
nop
sub
fiaddl
scas
movsl
mov
hlt
mov
rcrb
dec
lret
movsl
jae
dec
xor
or
pop
je
ret
std
inc
xchg
pop
xchg
pop
cld
aaa
mov
int
and
in
fistpl
iret
cmpsl
add
ret
inc
lahf
mov
adc
sub
cmp
mov
js
push
mov
mov
inc
cmp
in
cltd
fwait
ds
outsb
inc
js
dec
iret
icebp
adc
mov
ret
stos
jb
inc
add
lea
jl
xchg
jo
pop
and
jb
scas
push
sub
mov
mov
dec
lods
inc
insb
cmpsb
cmp
xchg
loop
insl
scas
dec
divl
inc
ja
cmp
outsb
repnz
xchg
roll
shrb
stos
test
push
push
mov
into
and
test
dec
es
fdivrp
pop
dec
mov
mov
mov
pop
inc
repz
sub
ror
or
xchg
sbb
imul
inc
adc
mov
cwtl
inc
test
stc
or
push
cmp
testl
push
mov
pushf
clc
pop
arpl
cmp
nop
add
dec
jp
bound
insb
imul
mov
js
cli
sub
fwait
or
push
sti
mov
inc
sub
and
popa
or
sub
roll
sub
je
decb
push
push
jb
sbb
xor
out
mov
cwtl
mov
fsub
sbb
xchg
sub
aam
scas
xor
dec
jnp
jne
ret
pop
xor
xorb
popa
sbb
add
inc
lahf
jnp
push
fdivs
pop
or
mov
sti
cmp
jp
mov
pop
or
test
jnp
test
incb
insl
test
mov
loope
nop
jmp
xchg
push
sub
cwtl
jmp
loopne
jae
adc
jns
pop
xor
fs
push
pop
dec
pop
xlat
mov
push
popf
fnstenv
mov
sbb
push
and
ret
mov
xchg
lahf
ss
out
dec
mov
leave
xor
fcoms
add
mov
std
cmp
lcall
rorb
inc
stos
mov
pop
jmp
mov
xlat
inc
movsb
js
out
add
add
sub
dec
dec
std
or
fcmovb
or
adc
push
call
je
addl
mov
dec
inc
mov
cmpsl
mov
je
add
dec
into
ret
test
sbb
xchg
pop
cmp
and
pop
mov
sahf
popf
pop
scas
jp
mov
movsl
xlat
sub
inc
inc
xor
mov
push
int
add
sbb
out
iret
std
pop
and
adc
xchg
popf
jno
xchg
ds
jg
loope
mov
sub
ss
lahf
pop
mov
dec
int
bound
sbbb
lret
into
mov
mov
mov
xchg
xchg
js
fnsave
aam
dec
inc
cmp
cmpsb
mov
cltd
and
hlt
cmp
filds
daa
imul
int3
fisubrl
vmread
xchg
icebp
popf
out
jo
cli
xchg
add
sub
adc
mov
paddd
stos
leave
les
nop
mov
inc
push
out
xchg
or
dec
loop
fisttps
addl
push
sti
mov
subb
push
mov
jb
dec
jnp
test
inc
jo
lds
jecxz
les
gs
and
add
and
push
popf
fldl
sub
and
aam
lcall
leave
mov
sbb
mov
sbb
xchg
jge
add
pop
lods
outsl
push
rcll
mov
int
int3
movsl
sti
cmp
sub
insl
repnz
fcoms
stc
and
test
inc
stos
and
cmp
or
mov
popf
and
dec
lret
cmp
or
hlt
mov
pop
call
iret
inc
test
xchg
pop
out
sbb
pop
ljmp
sub
mov
sub
mov
inc
push
or
mov
testl
sub
push
ficoms
sbb
xlat
add
rol
je
pop
cmp
gs
call
mov
jae
call
dec
bound
loop
pop
inc
cli
dec
jmp
std
xor
hlt
sbb
mov
stos
sbb
pusha
daa
test
inc
adc
jmp
or
dec
hlt
shrl
ret
cmpsb
das
jp
imul
jle
push
adc
cmp
imul
ja
inc
dec
add
pusha
fmuls
outsl
sbb
jmp
std
popl
sbb
testl
sbb
fs
inc
and
cmp
ret
add
clc
ret
fidivs
pop
jb
mov
jg
stos
adc
cmp
mull
popl
scas
and
and
insb
push
sub
ljmp
add
inc
loope
sahf
test
jmp
lds
xchg
mov
in
xor
sahf
xor
mov
mov
bound
nop
mov
js
and
in
inc
pop
inc
sub
add
inc
pop
shrb
add
mov
repnz
push
xchg
test
cld
insl
movsl
mov
xchg
lcall
xchg
inc
mov
sarb
bound
xor
pop
popf
push
mov
sbb
cmp
addr16
and
xchg
cmpsb
xchg
shll
ret
mov
add
pop
cmpl
ret
dec
xlat
jno
push
lds
sbb
jecxz
xor
test
adc
stos
ljmp
jge
popa
jg
inc
push
jmp
mov
inc
daa
jb
mov
dec
push
sbb
es
push
sti
stc
cmovg
pop
hlt
push
cmp
mov
push
in
xchg
cmp
in
jno
sti
aad
pop
or
adc
or
icebp
ret
push
mov
jmp
std
push
mov
ficoms
mov
or
sahf
push
pop
loop
dec
xchg
aaa
ljmp
cwtl
jmp
pop
pop
add
jmp
jg
test
insb
or
imul
call
or
aad
inc
lds
insl
dec
out
mov
idivb
jne
adc
and
pop
jo
mov
ret
push
push
inc
shll
jb
in
mov
add
add
dec
mov
outsb
pop
pushf
mov
jl
push
jnp
mov
mov
mov
fidivrl
mov
mov
sub
or
sub
enter
lods
pop
andb
or
out
inc
fnstcw
mov
fcomp
xor
or
mov
loop
lret
les
icebp
xor
push
cwtl
insl
pop
and
jmp
xchg
push
cmp
cmpsb
into
fcoml
or
cmp
outsb
and
push
jge
lret
gs
xor
out
cmc
test
inc
add
cmp
in
or
dec
lock
and
ss
out
sbb
int
adc
pop
or
sub
sub
and
ret
subb
and
and
jb
aaa
pop
dec
jle
movsl
jmp
jg
negb
ja
in
pop
fsubrl
ja
and
test
in
ret
mov
scas
jno
negl
cmp
inc
cmc
sub
ss
shlb
mov
nop
mov
mov
cmc
xchg
stos
mov
rcrl
stos
push
test
bound
daa
pop
xchg
mov
jb
xchg
ss
fimull
sti
mulps
and
sbb
adc
imul
add
xor
data16
adc
or
popf
mov
jecxz
clc
inc
aaa
ds
mov
std
test
fnstcw
je
mov
in
stc
insb
push
jne
or
nop
xchg
lods
sub
add
mov
mov
mov
daa
cld
pop
pusha
mov
dec
clc
ret
ret
sbb
fisubl
les
loop
push
sbb
idivb
lret
mov
scas
pop
in
or
adc
je
mov
into
iret
aaa
iret
xor
js
fmuls
pop
or
mov
pop
mov
jmp
insb
imul
dec
cmp
lcall
cmp
pop
sarb
jnp
decl
movsb
jae
pop
pop
adc
mov
and
push
mov
jle
mov
mov
vunpckhps
add
fs
xor
daa
pop
pop
pop
mov
bound
in
xchg
mov
add
negb
ret
dec
push
cmpsb
add
lcall
dec
or
cmpsl
insl
ljmp
push
jbe
icebp
int3
add
out
sub
data16
and
stos
outsl
pop
sub
add
ja,pn
cs
add
adc
ret
enter
sub
sub
inc
mov
jmp
test
cmp
jno
sbb
cwtl
mov
pushf
inc
por
jns
add
xchg
sbb
pusha
in
ja
divb
cltd
push
sbb
addr16
cmp
data16
sti
mov
mov
enter
xor
xor
sub
sbb
leave
jb
fisubs
and
push
adc
jmp
push
mov
popf
mov
in
push
dec
mov
ss
dec
jl
inc
out
mov
xor
pop
out
push
fsubrl
fisubrl
rorl
xchg
jno
sbb
jns
add
sub
test
mov
jle
jl
pop
ficompl
ds
mul
in
out
adc
mov
mov
inc
xchg
adc
mov
lcall
or
pop
stos
roll
cltd
bound
dec
push
popa
xchg
mov
aam
mov
sbb
dec
ds
scas
dec
sbb
jo
rep
pop
outsb
sbb
sti
lods
pop
sbb
mov
sbb
ljmp
or
ds
and
mov
nop
int
jo
sub
sub
into
bound
addb
outsb
sub
ret
lods
mov
pop
inc
fistpll
jl,pt
push
lret
iret
rclb
add
xor
cs
test
daa
shll
lret
cmc
or
int
shl
mov
mov
lahf
dec
mov
stos
xor
mov
dec
cmpsl
jno
push
mov
sbb
add
clc
cmp
jns
loopne
adc
imul
add
ds
divl
pop
stos
xchg
cli
ret
jg
push
in
dec
imul
and
or
stc
jnp
filds
scas
loope
xlat
dec
std
pop
jg
sbb
divl
push
sub
daa
sbb
cmp
push
call
mov
sub
jo
cmp
push
xor
dec
adc
mov
xchg
data16
std
xchg
add
jb
clc
sub
push
mov
jo
push
dec
insl
in
add
mov
adc
cmpsl
stc
pop
fs
xor
movsb
dec
mov
imul
shrb
in
icebp
jae
jnp
jo
pop
fnstenv
push
daa
popa
or
and
pop
negb
cmp
loop
push
fbld
and
sbb
arpl
dec
pop
jp,pt
aam
jb
std
mov
mov
jo
jmp
sbbb
sub
pop
popa
pusha
popa
js
sub
xor
clc
or
popl
jecxz
enter
pop
ja
call
fbld
test
ret
add
mov
fimuls
sbb
jp
dec
fcompl
leave
dec
or
ja
cld
cmp
fucomi
jmp
insb
rcr
pushf
lea
orl
in
inc
cwtl
push
jl
push
pop
mov
or
lds
imul
or
lcall
add
xlat
xor
cmp
mov
xor
mov
push
sbb
xchg
mov
test
insb
mov
pop
inc
out
rcr
mov
movsb
test
test
sbb
sbb
jb
mov
inc
pop
push
cmp
fistpll
pop
sbb
adc
mov
clc
ficompl
call
shl
pop
or
mov
sbb
mov
stc
add
int3
xchg
js
pop
scas
adc
push
cmpsb
fwait
ja
dec
jo
sbb
add
cmp
cmpsl
inc
sbb
sti
jge
sahf
lret
pop
std
scas
cmp
xchg
bound
hlt
cmp
inc
fnstcw
jecxz
data16
lods
mov
popa
sbb
adc
frstor
rcll
cmp
push
sbb
insl
dec
push
and
mov
mov
out
jnp
les
into
xor
lret
push
aam
pop
andl
fcompl
into
pop
sti
cmp
adc
and
fiaddl
pushl
push
inc
inc
loop
rcll
mov
iret
gs
jne
imul
icebp
pop
jne
sbb
adc
adc
mov
push
sbb
in
push
xor
or
sbb
mov
idiv
pop
mov
jl
fs
loop
lods
inc
sub
movsl
pop
jp
das
ret
mov
jno
cwtl
mov
mov
out
es
mov
aas
mov
dec
mov
jle
xchg
sbb
fistps
sub
jecxz
jne
lahf
mov
cmp
icebp
ljmp
mov
xchg
ror
adc
mov
mov
xorl
fcomps
inc
push
fldenv
dec
pop
bound
pop
test
push
cmp
adc
mov
pop
adc
adc
aas
clc
jb
sbb
pusha
fnsave
repz
fisubrl
adc
test
addb
pop
mov
arpl
cmp
les
fidivl
test
lcall
inc
jecxz
ficoml
insb
fsubr
inc
mov
mov
cmp
mov
rorb
call
xor
daa
jg
in
scas
inc
pop
xchg
push
insl
mov
push
fmul
sub
out
cmp
pop
xchg
test
cltd
jmp
and
hlt
outsl
sbb
sti
xchg
mov
call
and
lods
push
clc
scas
pushf
imul
jl
push
xchg
push
mov
negb
rcl
dec
shl
lahf
testl
mov
jo
shll
les
jl
daa
jecxz
out
shrl
sahf
xor
pop
pop
mov
rcll
cmp
sbb
cld
pop
sbb
add
rolw
adc
adcb
add
jecxz
ret
lret
mov
mov
xor
push
xor
jp
adc
ja
dec
inc
adc
loop
pop
nop
xor
cwtl
fstpt
pop
push
movsl
sbb
adc
imul
bound
xchg
mov
or
pop
fldcw
cmp
sub
out
scas
gs
pop
mov
pushf
jle
out
addr16
imul
std
push
int3
sbb
push
sub
out
mov
addr16
or
add
mov
adc
and
lds
cmc
enter
adc
jns
mov
jmp
xchg
mov
jmp
inc
and
orl
jne
sahf
test
cmp
pop
in
inc
aaa
pop
mov
mov
fwait
pop
out
shl
dec
adc
cld
xchg
fstl
jl
xchg
pop
push
xchg
sbbb
cmp
shl
add
test
out
xor
sub
mov
loopne
sub
pop
xlat
aas
scas
adc
xor
orb
aas
jle
aas
sub
lock
lret
lret
pop
jns
jnp
loope
push
fiaddl
xor
ja
fildl
pop
jbe
mov
inc
ja
js
pusha
mov
and
push
mov
sub
jmp
lahf
fdivr
push
sbb
das
jnp
out
xor
in
push
jns
js
push
mov
inc
test
pusha
mov
movsl
pop
add
lret
call
hlt
mov
test
mov
aam
cmp
jb
mov
ret
push
out
test
jb
cmp
repz
inc
push
add
mov
xchg
dec
mov
pop
leave
mov
test
les
je
pop
jno
cmp
push
mov
jbe
mov
scas
xchg
repz
test
popf
ds
leave
or
sub
mov
jg
mov
cld
fs
pop
sub
xlat
arpl
jne
aas
loope
cld
lcall
dec
test
repnz
les
xor
ficompl
stc
rcrl
dec
inc
cwtl
mov
inc
loope
lock
mov
mov
shl
shlb
adc
pop
sub
mov
xchg
mov
sub
pop
push
in
mov
and
and
lahf
cltd
pop
test
push
pusha
pop
mov
shll
lds
lods
pop
loop
adc
mov
mov
iret
inc
int
sub
pushf
ficoms
sbb
mov
push
movsb
dec
jne
dec
leave
jo
cmp
dec
std
in
mov
xchg
xchg
lods
sub
pusha
jg
fistl
mov
push
and
mov
sbb
enter
jecxz
jmp
mov
scas
lods
jae
fsubrl
jmp
mov
xchg
add
sub
cwtl
aaa
xor
ret
in
je
imul
mov
xor
cli
jno
popa
inc
mov
loopne
sbb
mulb
ficomps
lret
mov
shrl
fwait
mov
arpl
lcall
xor
and
cmp
mov
fbld
push
and
mov
cmpsb
jnp
dec
mul
dec
je
test
lods
push
inc
ss
dec
push
out
imul
movsl
stos
dec
sti
insl
rol
divb
sbb
cli
subb
fidivs
cmp
push
adc
cli
fwait
mov
pop
mov
xchg
fldenv
cmp
adc
lahf
sbb
leave
into
leave
dec
ljmp
inc
push
lods
shl
xor
imul
rcrb
adc
cli
outsl
jecxz
xchg
les
jmp
mov
push
cmp
push
mov
pop
in
xor
lock
xchg
repz
xchg
xor
pop
insb
and
and
push
sbb
imul
test
mov
inc
adcl
xlat
iret
int
arpl
mov
and
rclb
fdivrs
mov
adc
cmp
repz
and
push
sub
add
sub
mov
mov
addb
pop
hlt
aad
and
mov
imull
pop
sub
jg
int
loopne
jl
jns
mov
or
inc
pop
add
shll
movsl
mov
and
inc
movaps
js
mov
xchg
inc
scas
mov
xor
push
call
add
es
inc
and
adc
int3
icebp
gs
sub
xor
xchg
data16
sbb
jg
xor
push
fbstp
push
mov
jo
jnp
xchg
inc
jle
sbb
xchg
mov
fdivl
inc
stc
scas
out
out
in
add
mov
icebp
movsb
aad
out
stos
lea
lock
xor
xchg
lea
cmp
pop
push
or
lock
addr16
stc
push
loopne
or
aad
pop
sub
out
popf
adc
sub
pop
xor
xlat
add
shrl
xor
push
xchg
mov
and
jns
jecxz
nop
divl
adc
cs
scas
sub
jmp
ret
insb
es
jno
sbb
mov
inc
cmpsb
sti
out
inc
pop
jle
sbb
icebp
mov
jmp
mov
adc
and
xor
fcmovnb
push
jne
fcomi
jg
jns
push
fwait
jp
mov
add
daa
or
cmp
js
cmp
fcmove
add
shrl
mov
inc
leave
out
add
imul
push
pop
dec
sbb
stos
movsb
sti
push
pop
mov
mov
and
xor
jp
jno
jl
add
or
ret
je
lea
pop
lods
ret
subl
xor
add
or
je
push
sbbb
loopne
clc
fiadds
rorb
fisttpll
mov
in
add
pop
sbb
jne
out
lea
in
xchg
or
lret
inc
int3
dec
sub
cmp
pop
sbb
loope
inc
xor
or
into
xchg
mov
out
loopne
sets
fdivs
mov
and
xor
pop
sbb
out
push
pop
jle
push
fisubrl
loop
sub
loope
xchg
jo
dec
push
push
mov
or
fcom
adc
mov
dec
push
pop
and
loopne
xchg
imull
in
add
insb
ret
pusha
push
cwtl
daa
push
loop
lret
mov
dec
nop
xorb
mov
sub
xchg
mov
fnstcw
inc
push
inc
cltd
mov
cltd
fwait
ret
jle
test
adc
dec
rcr
scas
sbb
jae
fdiv
test
stc
jb
lods
lock
cmp
cltd
arpl
insl
jb
sub
insl
adcb
push
mov
inc
repnz
lea
dec
mov
cmp
mov
testl
adc
je
xchg
int
and
dec
push
cli
push
pop
fdivrs
bound
sbb
out
jle
push
test
add
data16
jne
pop
je
sub
outsb
lods
mov
xchg
in
sub
notb
xchg
xchg
loop
jecxz
xlat
mov
xlat
cmpsl
negl
jle
xor
pushf
inc
mov
movsb
fdivs
mov
call
pop
stos
mov
jecxz
mov
ja
jmp
push
bound
and
mov
daa
stos
adc
push
adc
cmp
sub
js
jl
mov
loop
test
out
lret
pop
dec
lea
add
int
inc
loop
aaa
out
shll
mov
cmp
mov
pushf
inc
xor
xor
dec
sub
and
or
mov
sub
cmpsl
mov
je
stc
scas
test
mov
inc
test
or
push
arpl
cmp
ds
xorl
loopne
pushf
nop
insb
lahf
stos
dec
mov
cmp
inc
sub
cmpsl
les
in
jge
pop
xchg
adc
cmp
test
stos
mov
and
jecxz
jmp
arpl
adc
inc
lock
pushf
and
pop
pop
out
add
in
jecxz
mov
out
insl
gs
sub
rol
adc
xlat
inc
cltd
fmuls
push
jbe
mov
ja
sub
xchg
dec
mov
push
ret
mov
xlat
lahf
lahf
rcll
dec
xlat
outsb
mov
cli
dec
pop
cmpsl
cmp
lods
imul
shl
jle
in
push
pop
mov
test
inc
es
sub
push
inc
xchg
xchg
cmp
call
cmpsl
and
sbb
push
mov
jg
xchg
adc
call
hlt
ret
js
push
or
jnp
add
xchg
fildl
xchg
ss
mov
jb
xor
mov
loopne
out
imul
pop
inc
mov
dec
xor
dec
adc
aad
sarb
scas
and
sbb
sub
xor
es
jne
int
xchg
inc
addr16
ljmp
mov
bound
dec
cmp
jbe
mov
pushf
data16
xor
adcl
and
leave
stos
icebp
into
cmpsb
adc
pop
js
xchg
add
pop
adc
mov
inc
or
or
cli
jno
mov
cmpsb
pop
les
leave
dec
add
jecxz
jae
lret
adc
mov
cld
lea
dec
add
cmp
push
pop
fcomps
lcall
loopne
adc
lock
ficoml
sub
jle
imul
jle
xor
adc
cmc
xchg
stc
mov
pop
arpl
xchg
mov
sbb
pop
cmp
cmp
and
or
mov
mov
add
and
mov
jbe
imul
or
aas
sbb
jl
adcl
cmp
pop
pushl
push
repz
int
cmp
mov
pop
pop
adc
call
add
out
hlt
mov
push
xchg
and
rcll
movsb
lahf
sbb
xor
icebp
loop
push
sbb
std
xchg
cltd
pop
push
daa
pop
in
dec
push
mov
insl
pop
in
sub
cs
mov
out
cmpsl
bound
jmp
in
into
icebp
fbld
movsl
jnp
mov
sub
in
and
aad
scas
int
fdiv
test
inc
mov
aas
outsl
ljmp
fwait
pop
mov
push
xor
shrb
ja
xchg
adc
or
clc
push
sub
call
dec
dec
and
mov
sbb
lcallw
out
sahf
pop
jb
imul
mov
cs
push
adcl
jae
jmp
push
add
mov
lods
pusha
nop
jge
xor
or
xchg
cmpsb
subb
xchg
aad
scas
xchg
jnp
hlt
rep
mov
dec
jp
adc
jg
outsl
xchg
mov
dec
gs
mov
jecxz
cmp
lret
xor
adc
xor
jo
pop
out
stos
aaa
sub
rolb
inc
clc
sti
dec
mov
scas
dec
adc
xor
je
in
mov
inc
sub
lret
imul
test
jne
or
jmp
lea
mov
loope
insl
lret
hlt
testw
cmp
lods
mov
mov
mov
inc
das
mov
aad
mov
xlat
pop
mov
fbstp
mov
aaa
sub
in
adc
xchg
cmp
cmpl
imul
dec
jl
stc
push
mov
fsubr
fcmovnb
shlb
adc
mov
aam
pop
mov
in
lahf
addr16
fnsave
ret
mov
dec
pop
bound
addl
ficomps
xchg
call
xor
and
in
nop
sub
xor
push
mov
cli
push
push
lods
xor
imul
mov
pusha
cli
scas
jno
adc
aaa
and
and
xor
sub
add
in
push
cmp
jge
test
insl
dec
cmp
pop
xor
xchg
shlb
aaa
sbb
jp
mov
mov
call
jge
adc
fnstcw
dec
push
dec
xor
jo
rol
int
inc
push
add
cltd
aas
dec
shll
dec
adc
ja
sbb
adc
cmp
mov
out
push
add
dec
mov
push
cmp
imul
stc
xlat
or
adc
sub
or
sub
push
push
fcom
pop
cltd
dec
xchg
xor
into
inc
add
jno
cwtl
inc
fldcw
adc
loop
test
outsb
and
roll
adc
push
add
cld
aas
outsl
jo
push
sahf
popa
dec
fs
or
out
mov
clc
addr16
push
add
cmp
xchg
addr16
dec
xor
and
push
sbb
fdivl
sub
aas
enter
enter
popa
mov
mov
es
push
jo
xor
mov
fidivrl
aam
ljmp
and
fstpt
mov
dec
jl
std
adc
ljmp
test
inc
jl
aaa
fsubrl
lea
pusha
jmp
cmp
mov
xchg
xorl
clc
in
mov
cs
movsb
xor
fcoml
mov
fidivrs
jp
mov
jp
cli
ret
push
mov
dec
xchg
push
add
js
mov
push
outsb
push
popf
dec
adc
mov
ret
js
cwtl
das
push
jb
popa
jmp
jl
mov
add
xchg
mov
cmc
test
jae
jns
ja
and
dec
push
frstor
shrb
mov
lock
xorl
test
enter
jns
and
pop
rcrl
ss
shl
jnp
ficoms
pop
add
lret
cwtl
int
icebp
mov
stos
clc
inc
jmp
cmp
push
mov
or
fcmovbe
repnz
mov
cwtl
adcb
jle
es
fwait
and
test
stc
subl
pushf
and
push
sub
mov
rcrb
hlt
aas
test
in
push
dec
or
adc
mov
xchg
andl
je
loope
dec
xor
adc
cmp
cmp
ljmp
mov
and
mov
cmpsl
sbb
push
sbb
addr16
imul
and
nop
mov
pop
and
pop
xor
int3
inc
fcmovu
mov
es
xor
fxam
sub
cmpsl
jl
rolb
pop
sub
sarl
mov
pop
xchg
xor
fmuls
mov
sarl
je
and
sub
leave
jno
hlt
insb
fiadds
push
lods
add
aaa
popl
bound
pop
dec
stc
int
or
or
cmp
and
insl
mov
gs
sub
sti
faddl
xchg
test
lret
sub
dec
pop
mov
inc
mov
outsb
dec
call
movsl
int3
jecxz
or
mov
clc
lock
popa
aad
sar
mov
filds
lea
insb
fnstenv
ljmp
cltd
nop
dec
imul
pop
stc
jb
fadd
push
pop
rcll
sahf
pop
cli
fdivrp
sbb
xor
mulb
mov
sbb
je
xchg
into
sub
cmp
fwait
leave
ret
mov
and
add
jl
ljmp
inc
pop
shlb
pop
mov
inc
icebp
out
inc
inc
outsb
mov
or
cmp
mov
scas
ss
adc
maxps
js,pt
xlat
dec
jg
cmp
js
in
aam
sub
and
ja
loop
add
add
rcll
mov
xlat
pusha
roll
sub
add
and
scas
push
test
add
repnz
sahf
test
push
fdivs
xchg
mov
and
mov
hlt
scas
inc
ret
repnz
or
add
sbb
rorb
xorl
dec
lock
lods
sti
mov
mov
mov
pop
and
cs
into
mov
jge
sbbl
mov
pop
push
xor
idivb
jae
mov
outsb
jns
jge
xchg
roll
jge
inc
dec
sub
sbb
cmp
out
push
and
mov
lods
lcall
push
dec
dec
cli
jo
dec
add
xor
stc
subb
loopne
and
mov
inc
out
add
nop
incb
sahf
pusha
mov
jecxz
add
cmpsb
negl
int3
sbb
dec
jbe
sbb
xorb
xchg
sub
lds
dec
shll
ljmp
shlb
xchg
sub
sahf
jns
fs
xlat
adc
mov
out
jge
insl
xchg
mov
xor
or
jae
sti
push
push
stc
dec
pop
sti
rorl
lock
shll
xor
inc
lahf
les
stos
sbb
push
xchg
cmpsl
xchg
xor
xor
int3
fs
loope
add
pop
loope
fisubrl
xchg
ds
cmpsb
push
sar
mov
or
add
ret
xchg
repz
cmpsl
loopne
jne
lcall
shlb
jnp
xchg
test
repz
mov
push
pop
sarl
and
mov
cmp
push
xor
dec
push
xchg
lock
scas
jg
push
xchg
mov
cld
mov
xor
es
rcrl
in
adc
pop
testb
test
cmp
inc
push
pop
leave
jae
scas
cmp
out
push
xor
cld
fidivl
push
sub
ffreep
mov
adc
sbb
xor
xchg
out
jl
in
lcall
rcrl
xor
ljmp
imul
lods
adc
sbb
movsl
cmpsl
jae
iret
in
in
xchg
pop
push
dec
cmp
push
js
push
push
cli
push
cmp
mov
outsb
xchg
add
pop
push
pop
movsl
movsl
or
jns
mov
fxch
xlat
pushf
lods
cmp
call
push
adc
imul
push
stos
add
imul
pop
mov
sub
pop
and
loope
push
lods
fstpl
push
add
in
dec
sub
adc
lods
or
mov
movsl
pop
xor
test
lods
mov
push
sub
mov
sbb
xchg
int3
jne
jbe
dec
mov
ja
ja
push
lods
addb
notl
inc
xchg
insb
loopne
fcoms
push
or
sahf
dec
rep
aad
adc
int3
cs
incl
push
xlat
rclb
push
jo
fisubrl
pop
out
scas
outsb
int3
das
xchg
cmpsl
dec
movsl
or
test
mov
inc
cwtl
cmp
mov
sub
pop
inc
inc
cwtl
adcb
cld
sub
mov
orl
out
cmpsl
sub
or
imul
scas
jo
dec
inc
addr16
sahf
mov
lcall
arpl
sahf
jnp
inc
inc
cs
or
fcmovne
xchg
push
add
inc
fsubs
dec
addr16
or
je
dec
subl
inc
mov
pop
pop
mov
xchg
jge
scas
daa
mov
add
adc
xor
and
cld
insl
or
movsb
add
mov
inc
inc
mov
sarl
call
fwait
bound
cmpsl
jae
stos
ljmp
mov
add
out
xor
dec
xchg
in
fisubrs
jbe
paddusw
mov
xor
pushf
ja
mov
adc
xchg
cmp
pop
jge
jmp
push
push
pop
push
rcrb
test
iret
jbe
loope
hlt
xlat
fsts
mov
add
movsb
divb
int
in
cmpsb
pop
mov
or
loope
inc
sub
es
jge
push
or
lock
xchg
jl
cmc
testb
ret
xchg
sbb
cs
cmpsb
inc
int3
lret
inc
fbld
shl
scas
movsl
adc
mov
stc
fidivrs
push
pop
aaa
in
ret
shll
pop
testb
lock
adc
fstl
shl
add
push
stc
sar
aaa
cs
mov
cli
xchg
ret
sub
push
jg
fs
mov
insb
in
mov
and
push
xchg
loopne
push
cs
adc
mov
test
push
dec
sbb
mov
sub
pop
jae
jle
cmp
jae
ljmp
xchg
aad
sti
mov
or
movsb
xchg
mov
add
xchg
fwait
mov
insb
or
fbstp
cmp
dec
ficomps
adc
cmp
enter
jge
jl
addr16
dec
xchg
ss
push
loop
mov
leave
cmpl
negl
call
sbb
cs
sbb
add
testb
adc
mov
push
enter
dec
cmp
adc
imulb
aad
ja
push
clc
loop
jge
dec
inc
aam
lahf
xchg
das
aam
scas
sbb
js
fdivrp
mov
push
mov
jo
xor
jns
jecxz
mov
push
mov
push
push
fdivs
aad
inc
pop
adc
movsl
into
or
xchg
aad
iret
enter
push
lods
int3
cs
sbb
mov
push
or
arpl
rol
mov
dec
fs
stos
add
mov
ss
fisttpl
aas
push
cmp
pop
xchg
dec
shl
jg
inc
sbb
clc
adc
repnz
bound
in
mov
jbe
xor
push
sbb
xchg
mov
leave
adc
jp
lret
mov
xor
arpl
jbe
testb
mov
test
sbbb
sub
sub
out
sbb
and
mov
mov
daa
sbb
inc
adc
das
mov
stc
mov
pop
jb
and
aam
inc
or
aam
jo
xchg
and
dec
mov
cld
into
or
jecxz
cs
in
fs
adc
mov
int
nop
ja
dec
push
repnz
sub
xor
movsb
add
and
idiv
mov
lret
xchg
fcmovu
cmp
outsb
inc
mov
adc
inc
cmp
inc
mov
xchg
inc
mov
push
add
add
mov
arpl
xor
xor
and
jne
xchg
xchg
mov
dec
clc
test
mov
enter
xchg
mov
jns
data16
je
cmpsb
outsb
jle
test
jmp
clc
lret
lock
mov
mov
out
jo
inc
enter
gs
in
push
stc
pop
outsb
push
es
jg
aas
cld
repz
sub
fsubs
mov
jnp
jae
test
stc
rcrl
pop
shrb
inc
ss
adc
pop
subl
scas
repz
pusha
ret
icebp
in
sbb
stos
js
stos
inc
pop
mov
jae
or
pop
mov
lock
mov
xor
inc
pop
test
notb
test
insb
insl
dec
in
or
arpl
add
or
aad
mov
cmpsb
mov
cltd
hlt
scas
pop
negb
or
mov
movsb
jge
push
repnz
sahf
jne
push
pop
pop
push
or
cltd
fidivs
arpl
cmpsb
ds
jmp
mov
mov
push
test
xchg
inc
add
aad
out
out
mov
push
push
adc
dec
inc
outsl
sub
inc
mov
sarb
or
and
pusha
test
mov
adc
and
xlat
ds
adc
les
lahf
je
aas
idiv
repnz
leave
lret
pop
jne
cmp
xchg
and
and
pop
xchg
clc
mov
xor
mov
aaa
repz
dec
hlt
repnz
mov
dec
loop
jecxz
ret
aad
cld
shrb
ljmp
imul
js
or
xor
xlat
mov
and
test
scas
pop
sub
push
xor
mov
jge
push
lods
adc
ljmp
jb
pop
fnsave
inc
rorl
fildll
call
mov
push
cwtl
and
xchg
xor
adc
add
xchg
dec
imul
dec
movsb
jbe
enter
imul
adc
ljmp
str
daa
in
gs
sub
xchg
mov
pusha
in
sarb
into
xchg
mov
addr16
xchg
jl
sub
gs
xchg
push
mov
push
mov
xchg
add
psubsb
mov
push
mov
stc
jo
sub
mov
push
push
fwait
jl
xor
cmc
hlt
sahf
xchg
lea
inc
sarl
aam
fildl
push
int
int
test
pop
add
push
adc
sbb
xchg
mov
inc
inc
or
cmp
and
and
aad
xor
sub
lods
pop
cld
mov
push
out
add
xchg
aad
sbb
adc
sbb
sbb
fbstp
rcll
or
pushf
cmp
clc
mov
pusha
and
adc
xlat
sbb
xlat
rcl
add
cs
xor
pop
mov
and
and
pushf
cmp
pop
repnz
push
into
daa
mov
test
test
sub
or
push
or
push
ret
jne
adc
cmp
dec
int3
test
daa
xor
xchg
out
pop
cld
aas
sub
dec
mov
std
test
mov
mov
mov
xorl
lret
jae
das
jle
fisubrl
dec
mov
xor
adc
sbbl
hlt
jae
push
and
mov
rorb
xchg
fistpl
jl
test
insb
nop
pusha
cltd
lds
sbb
push
mov
adc
push
xchg
sub
mov
mov
js
lock
mov
cld
jmp
pop
int3
rcr
adc
in
shr
push
mov
sub
push
stos
mov
pop
adc
sbb
push
test
sub
in
cmp
aam
pop
out
je
mov
jnp
pusha
stos
xchg
cld
in
sbb
fsubs
fistps
insl
into
xor
orb
daa
outsl
dec
es
scas
mov
lds
aam
out
push
mov
aaa
lds
inc
jbe
add
pop
out
stc
stos
fiadds
fcmovbe
inc
addr16
inc
shlb
rorl
jmp
and
cmp
cli
dec
in
mov
imul
testb
xlat
lret
cmp
push
mov
sub
fwait
add
adc
jns
pushf
flds
sti
inc
push
cmpsb
xchg
lods
in
mov
aad
sbb
inc
add
repnz
pop
outsb
xor
pop
lret
dec
lds
and
das
mov
loope
fdivrs
imul
test
or
fldl
test
adc
ljmp
push
mov
test
fs
xchg
pop
loopne
iret
mov
mov
and
add
jae
nop
outsb
and
adc
push
add
shrl
leave
aas
mov
call
mov
xchg
and
fsin
ficoml
sub
es
sub
xor
jns
cmp
scas
das
add
adc
imul
loop
mov
or
ds
push
aam
add
cmp
cmc
aaa
push
iret
inc
xchg
outsb
push
lds
lock
cmpsl
sub
and
cltd
imul
mov
lcall
lds
mov
popf
daa
in
cmp
mov
jge
mov
mov
jne
outsl
xor
dec
adc
test
dec
mov
std
movsb
dec
lock
lea
shrl
push
loop
pop
add
lret
or
xor
int3
pop
or
and
sbb
xor
pop
mov
adc
js
or
sets
lea
xchg
and
push
jecxz
xlat
pop
xor
push
loop
test
lock
xlat
pop
add
pop
ljmp
mov
xchg
movsb
dec
in
cmp
adc
jb,pt
fidivl
cld
data16
in
fbstp
popfw
mov
dec
scas
leave
in
lods
pushf
test
jg
jmp
fwait
jne
fadds
push
rorb
cmp
test
sub
dec
adc
movsl
aam
push
cwtl
xor
and
inc
lea
push
int3
xlat
les
mov
insl
popf
inc
cmc
arpl
lret
rorb
dec
push
push
xor
popf
add
lret
xorl
jo
stos
les
adc
cwtl
push
jns,pn
add
scas
fstpl
add
mov
jge
cld
imull
fsubrs
flds
sti
cmpxchg
cmp
movsl
push
cld
push
movsb
mov
imul
mov
cmp
movsl
loop
test
call
aad
xchg
xchg
fidivl
and
cltd
cld
lret
out
repnz
add
cmc
xchg
push
sarl
sbb
popf
adc
clc
pop
negl
jmp
push
add
mov
push
inc
sub
and
and
in
xor
mov
and
mov
inc
test
pushf
cld
jecxz
xchg
js
aam
stos
cltd
adc
and
jp
int3
jae
mov
pop
daa
xchg
movsl
ret
mov
jo
fldz
xor
add
and
fwait
mov
in
addr16
adc
jae
imul
repz
jg
loopne
mov
inc
testl
cld
dec
scas
sub
sub
mov
adc
push
and
rcr
sub
mov
jnp
cmp
xor
push
cmp
pop
adc
cmc
mov
xchg
pop
imul
sub
in
scas
nop
mov
cmpsl
arpl
or
push
repz
add
fwait
jbe
cmp
inc
je
xchg
add
icebp
dec
int
les
pop
mov
dec
mov
push
rclb
xor
fimuls
pop
dec
lods
push
adcb
out
and
sub
xchg
jg
push
ja
pop
arpl
ss
push
pop
jge
jl
xchg
popf
icebp
push
pop
sbb
add
loopne
mov
arpl
pop
test
mov
mov
dec
pop
jg
pushf
in
popf
int
pop
imul
pop
and
int
inc
mov
shlb
add
mov
nop
lahf
or
inc
jmp
add
push
lret
cmp
out
mov
cmc
push
outsl
fcoms
and
sub
repnz
lret
fwait
in
xchg
mov
and
jne
ret
mov
faddl
sub
inc
arpl
cli
mov
inc
cmpb
lods
cmp
dec
add
push
add
push
rclb
inc
or
push
jne
pushf
xchg
pushf
stos
push
sbb
stos
out
inc
sub
pop
dec
xchg
sbb
sti
lock
loope
shl
scas
xor
sub
in
jge
lcall
loop
dec
push
and
pusha
mov
insl
mov
jp
popa
push
push
pop
sbb
cmp
xlat
adc
jmp
xchg
mov
fwait
out
lock
mov
jb
lods
jne
pop
mov
mov
fsubr
int3
and
add
fimuls
shrb
xchg
ftst
in
dec
enter
imul
test
stos
jns
dec
mov
mov
test
les
lock
push
ljmp
mov
adc
popf
dec
aas
dec
dec
adc
shl
pmulhuw
ret
xor
fcom
xchg
jg
jne
mov
xor
idiv
add
mov
aas
sub
pop
adc
jge
std
push
jns
pop
adc
daa
push
test
sbb
sbb
xchg
cli
xchg
outsb
leave
in
aas
negb
inc
xor
or
pop
test
pop
cwtl
cmp
push
movsb
push
scas
lea
adc
lret
orl
cmp
call
notl
jp
lea
sub
popl
cwtl
int3
mov
and
push
scas
repz
mov
mov
in
jb
push
es
inc
es
mov
lahf
into
or
je
lcall
pop
pop
enter
std
mov
and
cmp
dec
outsb
rclb
shlb
push
out
nop
fldenv
add
dec
lret
cli
jl
movsb
jbe
out
inc
int
js
add
lock
mov
scas
aad
out
out
mov
mov
cmc
fisubrl
cld
adc
cmp
mov
cmp
pop
dec
inc
xchg
pop
stc
or
addl
cmp
pop
cltd
or
mov
in
das
inc
test
dec
dec
arpl
lahf
fadd
loop
aaa
outsl
in
test
mov
push
push
jl
fidivs
xor
mov
dec
or
lods
push
fmulp
xor
jle
push
mov
xchg
daa
jo
fsubs
pop
insl
lret
inc
fistps
push
aad
sti
add
add
fimuls
dec
roll
xchg
aas
and
ljmp
addl
cltd
ja
nop
sbb
mov
bnd
bound
mov
clc
imul
aas
push
inc
subl
popa
loop
sbb
cmp
rcr
adc
pop
lcall
or
mov
pop
stos
imul
push
cwtl
jns
jle
mov
stos
repnz
mov
pop
ror
pop
cmp
jo
sub
cld
jl
mov
push
inc
scas
mov
adc
out
out
ss
or
test
mov
mov
rcl
fwait
outsl
dec
or
in
ljmp
out
loop
repz
aam
sbb
adc
outsb
dec
inc
ss
lahf
stos
js
push
popa
ret
cwtl
jno
jnp
scas
jno,pn
insb
pushl
hlt
dec
adc
dec
mov
mov
or
rcrb
imul
out
inc
adc
loopne
or
fs
das
in
mov
arpl
sub
lock
xchg
cwtl
movsl
push
jns
fiadds
fabs
sbb
cs
add
hlt
mov
jns
pop
or
pop
push
data16
hlt
ret
les
xchg
vshufps
test
or
jb
push
subb
test
enter
stos
push
push
push
pop
pop
and
dec
push
cwtl
js
inc
sub
dec
pop
scas
dec
dec
adc
add
xlat
call
iret
xchg
aaa
ds
shl
lahf
pop
and
pop
xchg
rcrb
idivb
stos
xor
notl
push
xor
mov
inc
cli
repnz
mov
icebp
int
inc
dec
les
or
in
shr
scas
sbb
stos
mov
pop
outsb
cmc
dec
shrb
stos
adc
push
movsl
sub
dec
js
call
mov
add
outsb
or
fimuls
jle
sbb
pop
push
or
and
fiadds
pop
fs
imul
mov
lds
mov
add
daa
movsl
cmpsl
aaa
fwait
out
out
loop
push
call
and
add
clc
push
add
out
cs
iret
or
cmp
dec
mov
pop
popf
ret
pop
inc
arpl
andb
mov
cmpsb
jge
sub
test
in
sahf
les
jle
push
add
lds
test
repnz
out
sbb
mov
aaa
pop
push
mov
outsb
dec
nop
inc
call
mov
mov
mov
es
shll
aad
pop
jg
fildll
adc
pop
sbb
jno
dec
stc
push
push
xchg
adc
mov
fs
cld
mov
cmp
shrb
pop
xchg
cltd
lods
mov
in
jmp
jp
in
loopne
in
fdivr
bound
int
outsb
sbb
and
jp
out
loopne
ss
cmp
iret
addr16
call
ret
jbe
loop
jbe
imul
loopne
push
xchg
sbb
daa
mov
push
jg
mov
lea
loopne
or
inc
push
jl
loope
lret
jge
lret
sbb
dec
or
in
mov
add
std
js
adc
hlt
mov
jno,pn
add
xchg
mov
jge
into
pushf
mov
pop
mov
mov
jg
int
inc
sbb
lret
sub
sbb
pusha
xchg
dec
inc
cld
inc
mov
les
sub
pop
dec
xor
shll
pop
mov
lahf
inc
cmp
mov
mov
add
cmp
ficoml
jae
mov
scas
dec
inc
je
shrb
mov
std
pop
push
daa
jmp
imul
sahf
loopne
fs
ficompl
cmp
jp
je
xor
mov
mov
jns
sbb
xchg
in
lea
dec
mov
cwtl
push
gs
les
mov
sub
jl
std
insb
mov
sub
dec
mov
mov
pop
mov
lahf
pop
push
rcll
push
mov
xor
and
inc
sub
push
sbb
or
xor
cli
int
enter
pop
out
out
int
and
mov
insb
or
iret
sahf
mov
int
in
adc
push
xchg
xchg
imul
or
add
rorb
inc
test
inc
es
add
mov
aas
ficoml
fwait
dec
test
test
mov
pop
lock
add
xor
sub
flds
data16
jp
or
pusha
inc
outsb
sub
jo
mov
test
push
mov
pop
sub
arpl
aaa
dec
daa
mov
sbb
loopne
jne
adc
mov
iret
xchg
and
lea
xlat
add
push
push
sbb
psrld
movsl
sbb
scas
stos
sub
jne
stos
imul
xlat
mov
xchg
or
je
int3
clc
jb
pop
adc
sahf
into
mov
jbe
mov
sbb
jns
lods
jmp
shrb
mov
mov
sahf
in
inc
movsb
jns
mov
pop
lods
mov
out
sbb
sub
pop
fisubs
out
xchg
stos
xchg
push
je
push
int3
cmp
fimuls
test
lea
imul
push
out
int3
push
or
xchg
xor
mov
outsl
cmp
aam
es
dec
mov
xchg
cltd
scas
movsl
mov
dec
scas
xor
and
mov
mov
loopne
jge
mov
jge
pusha
push
add
and
scas
adc
movsl
pop
xor
icebp
out
mov
test
gs
mov
out
aaa
jno
in
out
sbb
xor
jge
or
mov
clc
or
cmc
mov
test
sahf
imul
mov
cltd
pop
rcr
sarb
mov
daa
orb
push
das
push
xchg
xor
mov
xchg
fldenv
sub
push
test
rcrl
in
cmp
dec
stos
jge
enterw
lds
lods
pop
in
mov
add
js
int
mov
gs
pusha
ds
xchg
adc
das
mov
mov
push
mov
xchg
sbb
sub
push
xor
xchg
push
jae
or
les
in
sub
inc
in
fsubl
xor
lcall
sbb
push
lret
pusha
ret
movsb
dec
push
push
test
dec
mov
out
js
and
xchg
popf
pusha
cmc
mov
rorb
mov
jne
outsl
sbb
inc
and
jle
mov
jle
loope
lret
into
inc
fcmovbe
xor
xchg
mov
ja
aad
add
dec
jl
mov
sbb
cltd
cmp
testl
mov
pushf
jp
imulb
pop
xchg
cmpsl
mov
inc
test
test
pop
or
adc
insl
loope
sub
add
mov
or
movsl
test
mov
jle
repnz
sbb
or
push
add
inc
sub
pop
and
mov
lods
xor
scas
inc
sbb
shl
lods
fs
dec
scas
outsb
test
cli
mul
dec
shll
pop
add
inc
sbb
jle
xor
sub
xchg
xor
lret
sbb
cmp
in
push
mov
out
pop
mov
jbe
mov
sti
or
dec
leave
ret
test
push
jp
lds
icebp
mov
pop
xchg
repnz
filds
test
mov
leave
jne
bound
in
push
addr16
mov
mov
sti
cmp
jae
rorl
aas
test
cmp
rcr
fiadds
inc
xchg
jno
mov
pop
jo
movsb
imul
outsl
cmp
lds
mov
js
xorb
mov
pushf
mov
mov
dec
out
mov
xchg
ljmp
jne
jbe
das
and
fs
cmp
push
add
cmp
int
xchg
repz
gs
repz
add
pop
sub
das
out
xchg
les
movsb
sarl
mov
outsb
test
cmp
jecxz
scas
stc
rclb
push
ret
cltd
xchg
dec
sbbb
add
mov
and
xlat
sbb
stos
add
adc
pushl
sbb
in
jmp
cli
sub
insl
sub
lret
arpl
and
lcall
aaa
sarl
xchg
call
sub
enter
in
pop
lcall
aas
push
fdivrl
sahf
push
xor
lock
sbb
outsb
mov
add
mov
lods
inc
xorb
jmp
xchg
mov
or
jmp
mov
cltd
pop
pusha
xchg
fbstp
xchg
mov
and
ret
shlb
daa
js
adc
fstpl
jne
jmp
icebp
jbe
xchg
mov
lahf
inc
jl
ljmp
xor
mov
imul
aas
rcrl
mov
sub
adc
mov
mov
xchg
repnz
xor
outsl
dec
cmp
ljmp
mov
ljmp
jbe
dec
leave
mov
sahf
sar
push
mov
jb
scas
push
mov
shrb
rcrl
call
dec
mov
jge
or
inc
cmp
outsb
xchg
pop
xchg
mov
mov
or
ss
add
cli
sbb
dec
test
mov
sbb
test
popw
sbb
and
adc
push
ljmp
mov
imul
push
ret
loop
enter
push
cmp
cmpsb
test
mov
sarb
inc
stos
adc
or
push
mov
xor
btr
data16
mov
lret
xchg
and
push
sub
es
mov
js
mov
xchg
mov
into
xchg
pop
loopne
xchg
pusha
insl
adc
dec
aad
mov
sub
insl
xchg
imul
insb
jbe
dec
mov
jb,pt
adc
addr16
xor
inc
mov
xor
jmp
jle
nop
sbb
fildl
mov
push
ret
loope
lcall
cmp
imul
pop
pop
xchg
aas
or
addr16
mov
cmpsb
push
leave
and
adc
xor
mov
cld
mov
aas
sbb
loopne
push
mov
dec
aam
cmp
std
pop
jl
jg
call
push
jecxz
adc
xchg
and
jo
jno
imul
fucomp
and
lds
loop
cmp
dec
out
inc
cmp
jmp
addr16
adc
mov
movsl
sub
fisubrl
fwait
jp
push
std
xor
add
add
sub
insl
ss
push
mov
ret
js
enter
push
mov
imul
inc
fwait
mov
into
jnp
push
pop
loop
dec
sbb
jp
movsb
mov
ljmp
xchg
xchg
lock
pop
es
sbb
pop
push
aam
jecxz
pop
pop
dec
adc
dec
xor
jecxz
fwait
loop
fwait
ret
les
push
add
ficoms
pop
scas
mov
push
mov
bound
subb
out
cmp
pushf
or
or
roll
sub
and
pop
insb
jp
push
inc
adc
jnp
sub
movsb
add
mov
or
push
mov
sbb
inc
or
loope
xchg
sbb
xchg
mov
fwait
cmp
popa
aam
icebp
mov
ficompl
cmp
call
pop
adc
inc
mov
lock
push
dec
fiadds
mov
scas
adc
stos
daa
xchg
push
pusha
mov
cwtl
sbb
mov
fisttps
sti
add
mov
xchg
fwait
xchg
jae
add
inc
pop
imul
fnsave
adc
out
scas
sub
sbb
lea
leave
xorb
in
das
lcall
mov
xchg
xor
push
and
and
or
cmc
mov
mov
loop
add
imul
lock
sub
icebp
aaa
hlt
mov
cmp
cmpsl
cmpsb
xor
lds
int3
test
mov
dec
cmp
cmpsb
in
push
pushl
xchg
mov
stos
lea
xlat
jle
inc
pop
mov
test
mov
shlb
inc
data16
mov
and
scas
xor
insl
pop
loop
hlt
jle
in
andb
pusha
fsubrl
and
or
and
mov
and
sti
xor
or
leave
mov
cmpb
addl
pop
cmp
add
adc
mov
xor
mov
ret
call
cmp
cmp
into
bound
int3
inc
pushl
jns
pop
lret
mov
push
jne
insl
dec
idiv
xor
adc
and
lds
shrl
sub
push
mov
lcall
stos
hlt
lock
movsl
add
inc
cmp
dec
push
xor
rclb
push
mov
xor
adc
mov
or
jp
test
cmp
leave
mov
push
test
out
pop
cmc
lock
jmp
mov
repnz
cmp
lods
loopne
fnstsw
push
xchg
push
gs
mov
aad
sti
call
and
xlat
and
aam
andl
jnp
push
nop
clc
mov
lret
mov
xchg
bnd
int3
xor
sbb
or
push
xchg
icebp
cs
or
xlat
rdmsr
movsl
and
and
dec
imul
ljmp
fld1
xchg
adc
sbb
test
movsl
xlat
jb
mov
outsl
pop
mov
out
subl
cmp
adc
lcall
in
sbb
mov
xchg
adc
inc
loopne
ljmp
pop
sbb
dec
pop
stos
aam
mov
stc
jl
ja
mov
and
rcl
mov
mov
shll
xor
gs
je
insl
fsub
push
pusha
in
cmp
mov
cmp
sub
scas
cld
lret
mov
push
pushf
sbb
lret
std
andps
fisubl
jmp
mov
inc
ficoml
inc
adc
push
and
lcall
dec
test
shl
cld
shlb
inc
cltd
fwait
mov
mov
jnp
mov
adc
pop
mov
pop
mov
sub
sbb
fptan
aad
pop
scas
or
adc
insl
xchg
sbb
cli
cli
sub
sbb
sub
inc
out
iret
lret
add
mov
jmp
rcrb
mov
in
inc
fdivr
rcll
xchg
sub
aad
loop
addb
in
in
sbb
pop
faddl
jmp
popf
adc
pop
add
xor
jg
pop
cmp
andb
sbb
sub
jbe
push
rclb
jns
pop
adc
mov
xor
loopne
or
adc
cmp
push
push
dec
jg
aaa
sbb
ret
lahf
jmp
out
push
mov
inc
and
stos
sub
sub
iret
lcall
ret
into
test
push
cli
loope
fcmovu
sbb
push
scas
insl
int3
aaa
or
mov
mov
xor
push
test
aas
cltd
aas
mov
int
or
mov
and
and
cmp
jno
push
and
sub
jns
out
ss
fs
xchg
adc
ljmp
cltd
xchg
inc
sbb
not
ja
dec
mov
cmp
outsb
cmp
aam
pop
in
add
cmp
or
mov
pop
addl
xor
add
xor
and
stc
jae
shlb
adc
jmp
pop
mov
dec
mov
mov
aad
pop
inc
fdivrp
xchg
fwait
add
test
shrd
xor
ret
insl
inc
fistpl
mov
fwait
cmpsb
push
decl
xchg
stos
xor
and
mov
fs
fs
xchg
aas
roll
push
stos
stc
lea
xchg
xchg
add
data16
mov
cmpsl
cwtl
cmpsl
mov
mov
mov
call
pop
sub
inc
lea
jge
pop
push
xchg
mov
fsub
loope
xchg
das
or
pcmpeqb
scas
push
cli
push
and
push
movsb
inc
pop
popf
stos
xor
out
dec
push
fadd
out
cmp
cmpsl
popa
mov
jne
aam
xorb
and
jno
loopne
or
in
add
jge
cmp
xchg
inc
jne
mov
sub
f2xm1
or
mov
enter
xlat
or
inc
dec
in
leave
cmp
dec
bound
mov
jbe
test
xchg
fisttpll
pop
rcll
iretw
arpl
cmp
and
push
sbb
push
push
mov
dec
lret
xor
dec
sub
mov
outsb
jbe
push
adc
pop
sub
push
cli
test
pop
sbb
and
in
das
push
into
jns
add
out
push
dec
xlat
or
dec
dec
pop
jne
data16
ficompl
out
mov
mov
ret
cwtl
xor
adc
add
pop
mov
fwait
inc
lea
testl
add
in
push
aam
add
fiaddl
sbb
hlt
xchg
mov
das
aad
mov
pop
adc
out
adc
ret
data16
adc
dec
in
sahf
sbb
sbb
insl
sub
hlt
rorb
or
scas
jbe
jbe
mov
test
jnp
sbb
lret
test
unpckhps
fneni(8087
or
lret
aad
and
movsl
dec
xchg
push
subb
push
adc
add
lods
sub
dec
pop
int
cmpsb
lea
test
sub
jl
xlat
stc
cli
pop
or
insb
enter
dec
mov
clc
out
mov
rorb
or
sbb
pop
sub
mov
shlb
xchg
pop
je
jbe
mov
inc
sti
loopne
imulb
daa
sbb
mov
pop
jne
cli
jne
push
xchg
ja
mov
cmp
push
ja
push
jno
cmpsb
sub
movsb
aam
loopne
psubusb
xchg
push
gs
mov
imul
aam
inc
shl
stc
mov
cmp
lods
dec
jg
jmp
mov
mov
sub
adc
or
push
dec
scas
pop
xchg
aas
dec
popa
pop
ljmp
xor
cld
push
aaa
mov
lahf
sbb
push
repz
xchg
repz
xchg
test
jmp
mov
sbb
stos
out
insl
insb
repnz
xor
and
cmc
imul
loopne
stc
xor
es
adc
insl
add
adc
xchg
inc
inc
pop
sbbb
add
insl
lock
and
insb
lds
aad
mov
mov
int3
dec
fistps
gs
cmpsb
inc
jmp
and
mov
cmc
push
jae
pushf
dec
push
cwtl
adc
cs
sbb
popf
push
enter
imul
es
negb
pop
subl
jl
aas
ljmp
aas
dec
aas
loop
mov
enter
pusha
aad
lret
out
lock
pop
pop
int3
nop
imul
xlat
in
in
daa
out
movsb
xchg
mov
jecxz
leave
mov
jno,pt
and
adc
sub
std
dec
nop
arpl
sbb
xchg
jmp
out
or
ja
inc
inc
dec
pop
fld
pop
sbb
rcrl
fbstp
mov
xchg
cmc
inc
loopne
xchg
push
sbbl
leave
add
push
sbb
adc
mov
cmp
xor
cmp
pop
mov
pop
les
cwtl
sbb
cmpsl
add
xchg
ss
jg
lods
push
cmp
xchg
clc
out
jp
jl
mov
dec
aad
or
push
adc
cli
push
mov
in
aam
cmp
dec
ds
sub
cmp
in
cmp
mov
jp
aaa
jne
xchg
pop
iret
mov
ljmp
in
mov
sbb
test
inc
je
enter
outsl
mov
bound
push
mov
aam
xor
xchg
mov
loop
mov
clc
mov
sbb
lock
jl
xor
repz
cmpl
popa
daa
rcrb
fiadds
sarl
jg
notl
jp
dec
popa
sbb
jle
adcl
xor
lea
call
lods
xchg
dec
push
xchg
mov
xchg
stos
in
pop
data16
pop
adc
daa
push
mov
jmp
and
jno
add
cwtl
cmp
rcll
popl
not
or
ja
scas
aam
jae
adc
add
push
inc
xchg
pushf
dec
ret
push
dec
jne
loope,pt
shrb
call
icebp
arpl
mov
push
xchg
in
sarb
sbb
jecxz
xor
mov
leave
jge
push
push
lea
pop
loope
cltd
enter
addl
pop
subb
xlat
in
icebp
and
nop
dec
xchg
jmp
push
xchg
daa
pop
std
stc
into
pop
aad
sbb
xchg
mov
mov
lods
jle
jecxz
mov
or
out
push
mov
jmp
add
in
cmp
dec
inc
pushf
push
push
shlb
ficomps
sahf
sub
cwtl
push
dec
sbb
icebp
mov
pop
popf
push
es
pop
cmp
dec
cli
xlat
clc
dec
add
mov
adc
jp
mov
xchg
jno
pop
enter
scas
jno
mov
cmp
push
add
scas
subl
mov
mov
mov
sub
xchg
mov
js
push
aas
push
push
daa
leave
fstl
int
add
test
ja
push
in
cmp
pop
adc
adc
ljmp
or
mov
push
mov
dec
arpl
loope
add
scas
dec
enter
cmp
jecxz
aad
dec
jae
into
sti
notb
fs
push
popf
push
fcoml
adc
cmpsb
js
std
andb
xchg
pop
add
inc
shll
loop
mov
push
sub
movsl
call
push
out
dec
and
push
cmp
daa
test
mov
jno
fmull
rcrb
dec
lds
clc
lods
mov
mov
mov
xchg
jge
jl
xchg
outsb
dec
js
negl
inc
xchg
imul
cmp
test
stos
stc
cs
inc
sub
mov
jo
pop
mov
mov
jno
jb
cmp
pop
or
push
shll
jns
xchg
pop
nop
gs
hlt
test
aas
jl
and
pop
sbb
pop
andl
mov
pop
stos
nop
pop
jge
std
adc
cld
outsb
aam
inc
inc
rcrl
pop
es
out
repz
mov
sahf
fists
mov
les
cmp
lea
xor
or
stc
int
aad
fcmovb
cmp
inc
xorb
bound
push
jl
or
xor
imul
es
clc
sbb
stc
jl
inc
or
jge
jecxz
push
inc
pop
leave
pop
mov
rcll
mov
addb
orl
in
and
adc
lea
nop
adc
pop
adc
cmp
sub
and
pusha
inc
and
insb
ja
imul
outsl
dec
and
insb
in
dec
loope
push
imul
pushf
loop
add
sub
aam
pushf
cmp
stos
dec
jbe
dec
push
jbe
push
cmp
imul
cmpsb
pop
out
insl
jnp
sub
inc
in
loop
shrb
xlat
sbb
aaa
dec
sub
jg
inc
ds
push
pop
adc
sub
mov
int
ja
and
dec
dec
repnz
push
sub
cltd
mov
addb
stc
mov
add
leave
lahf
popf
mov
dec
pop
clc
das
stos
mov
xor
dec
pop
pop
outsb
mov
ret
gs
lock
cmc
push
mov
jnp
adc
repnz
sarl
sub
stc
xchg
mov
fs
cltd
push
roll
pop
in
or
jno
int
mov
add
dec
inc
push
xor
mov
test
leave
sbb
cmp
pop
bndstx
inc
mov
in
ds
cmp
mov
add
sbb
cli
test
adc
imul
inc
fdiv
aas
fldcw
xchg
push
aas
pop
loop
sbb
mov
dec
push
fildll
bound
aam
mov
xor
mov
inc
and
inc
test
comiss
pop
popf
repnz
adc
ljmp
sar
and
pop
movsl
mov
clc
xchg
push
pusha
std
jnp
push
and
iret
leave
out
push
aad
out
mov
decb
stos
lret
inc
mov
test
mov
call
mov
add
sbb
sub
xchg
adc
test
movsl
sub
pop
pop
and
repz
clc
les
push
pop
arpl
lods
cld
mov
push
cld
cmpsb
leave
fwait
mov
andl
stos
jns
sub
jbe
pop
and
inc
test
outsl
cld
enter
mov
lods
subl
cmp
sbb
mov
fidivl
cld
xchg
imul
jecxz
jne
sbb
push
popf
push
ret
or
xchg
jne
mov
dec
lret
and
xchg
push
xlat
jbe
or
inc
sub
dec
arpl
out
jge
imull
push
test
scas
shll
pop
stos
xchg
out
fistpll
mov
arpl
push
cld
pop
mov
jnp
stos
and
mov
jnp
lcall
pop
mov
aaa
jl
sub
push
add
or
push
pop
inc
inc
add
cmp
daa
xor
sub
adc
repnz
dec
add
das
push
sti
xchg
jecxz
out
push
nop
mov
mov
inc
in
dec
lret
cmp
sahf
push
sbb
in
add
cltd
mov
ss
inc
popa
inc
cwtl
add
xchg
sbb
add
inc
ja
fidivrl
jle
arpl
pop
imul
roll
icebp
mov
mov
xchg
lahf
and
pop
jns
pushf
jo
insb
into
fcoms
inc
loop
or
aaa
andl
es
sarb
jg
subb
hlt
mull
mulb
ret
sub
pop
jg
lods
andb
loope
int
push
mov
and
sahf
sub
mov
jmp
dec
mov
dec
inc
popa
or
pushf
out
js
pop
jp
pop
add
xchg
insb
and
std
sub
das
or
sub
rcrb
jmp
mov
outsb
jmp
stos
frstor
jecxz
xor
lret
jg
mov
fnstsw
mov
cwtl
or
pop
push
mov
cmp
iret
xchg
xchg
cli
les
loop
mov
iret
neg
jno
push
xor
xchg
stos
int
cmp
int
pop
push
push
add
cmp
imul
das
mov
insb
cmp
mov
fcom
out
mov
scas
dec
cs
movsb
fmull
or
push
mov
push
pusha
imul
ljmp
lret
addr16
mov
xchg
lcall
pop
adc
push
mov
pop
xchg
and
lods
stos
jecxz
xor
out
xchg
lea
je
mov
jbe
lods
mov
lea
mov
xchg
add
push
push
out
xchg
pushf
cwtl
mov
pop
and
pop
sbb
and
sar
mov
pop
mov
scas
xchg
lods
push
push
xchg
mov
mov
pop
mov
inc
stos
stos
xor
loope
insb
pop
or
pop
sub
jae
push
cmp
dec
cmp
xor
adc
jns
movsl
push
arpl
inc
sahf
xor
cli
stos
mov
sbb
inc
adc
mov
les
cmp
inc
arpl
push
cmp
jno
mov
popa
jb
adc
xchg
jno
mov
test
mov
jg
adc
mov
aad
test
jg
jae
jg
repnz
nop
sbb
stos
jp
adcb
pop
ljmp
ficoml
cmp
cs
insl
pop
stc
mov
jge
add
sbb
jnp
loop
out
out
sub
xchg
subb
jb
sbb
popf
and
cmp
and
loop
pusha
inc
mov
enter
rcl
push
scas
sbb
out
test
or
mov
jne
out
stos
xlat
mov
jmp
adc
xor
outsl
mov
fidivrl
outsl
insb
ds
pop
call
sbb
sbb
mov
bound
and
ljmp
dec
js
fcoms
hlt
pop
scas
and
mov
stc
popf
push
mov
imul
and
jo
inc
inc
push
sub
nop
sbb
insl
sub
out
insb
or
mov
nop
daa
inc
inc
out
rolb
gs
xchg
xor
mov
and
pop
fnstcw
in
mov
cmp
pushf
or
mov
fisubs
std
gs
rcrl
xor
inc
fildll
outsb
hlt
mov
sub
mov
lcall
stos
adc
leave
push
xchg
dec
rcll
pop
movsl
sbb
xchg
stos
in
adcb
outsl
pushf
xlat
xchg
add
test
jg
in
xlat
setp
mov
add
daa
pop
cmp
push
jb
ss
mov
inc
mov
adc
das
and
push
pop
xor
xor
bound
mov
mov
stos
cwtl
sbb
jle
ja
das
xor
out
dec
outsb
leave
pop
and
xor
push
mov
xor
mov
and
push
pop
jo
lods
dec
inc
xor
adc
insl
sub
pop
mov
imul
xor
mov
push
xorb
out
sbb
ljmp
hlt
ljmp
mov
pop
pop
data16
enter
xchg
cld
cs
aas
xor
jbe
pop
xchg
das
or
xor
rcrb
in
or
out
cwtl
rcrb
dec
fists
pop
movsl
cmp
mov
jns
cmp
sarl
into
dec
lea
jbe
out
pop
jne
dec
out
aam
cli
pop
and
nop
pusha
mov
mov
ret
lea
or
icebp
mov
and
fistl
in
addr16
clc
push
sub
xchg
or
adc
pop
cmpsb
adc
testb
fcoms
mov
ret
cld
mov
int
push
ja
lcall
repnz
inc
xor
mov
scas
test
fldenv
lock
incb
dec
arpl
mov
cwtl
popf
sahf
jno
dec
hlt
sbb
subl
or
xor
negl
sbb
pop
out
push
pushf
int
pop
xor
repz
mov
inc
mov
cmp
fdivs
cmp
call
fadds
xor
in
clc
cmc
loope
loop
adc
int
fsts
cmp
add
gs
pop
dec
shl
test
lret
inc
xlat
pop
sbb
les
cltd
leave
stc
jnp
push
lods
sarb
sub
clc
das
or
dec
mov
fs
adc
pop
out
jmp
inc
or
hlt
or
mov
mov
das
mov
xchg
idivl
flds
push
dec
push
test
orb
push
mov
arpl
mov
std
idivb
cmp
jge
xchg
cmp
orb
stos
cld
scas
adc
mov
and
cwtl
mov
mov
stc
xlat
enter
cmp
test
jge
mov
sub
and
pop
shr
jb
and
fdivs
adc
xchg
sbb
adc
jl
ljmp
lock
add
jmp
xor
xchg
sbb
ds
out
sub
mov
mull
xchg
xor
cli
mov
cmp
sbb
pop
jge
pop
mov
dec
arpl
xchg
hlt
fstps
movsl
lret
fistpl
popa
lahf
icebp
cmp
xchg
out
mov
fwait
inc
int
inc
mov
sub
lahf
fiaddl
test
inc
xchg
cli
inc
xor
mov
or
cmpsb
dec
push
mov
mov
push
pop
fistl
jl
cmp
or
push
pop
mov
mov
scas
fsubl
test
cmp
sarb
add
lret
das
jbe
push
stos
test
xor
mov
pop
popf
rolb
mov
add
cmpsl
lock
jmp
fisubrs
dec
add
mov
call
inc
cs
and
adc
pusha
fcmovu
in
dec
mov
not
pop
push
lahf
fdivs
jne
jbe
inc
xor
xor
cmpsb
jl
pushf
pusha
aaa
scas
add
rcr
xchg
out
loop
ret
xchg
loope
jbe
dec
or
les
pop
sub
xchg
ret
lods
dec
add
insl
out
fwait
add
pop
xchg
adc
jo
mov
cmp
andb
mov
sub
mov
sub
cltd
sbb
leave
scas
push
pop
sbb
or
lock
pop
nop
sbb
fsubrs
xor
sub
ret
leave
xchg
imul
aam
mov
jnp
lahf
pop
lret
jle
jne
movsb
xchg
mov
xor
jns
test
push
xor
and
and
cwtl
or
sub
cld
mov
mov
inc
scas
pushf
inc
ret
out
fistps
sbb
jnp
nop
inc
mov
lock
inc
inc
fnsave
outsl
movsl
xor
and
leave
out
sub
mov
and
inc
and
mov
lock
mov
inc
inc
mov
loop
add
repnz
cs
mov
negl
and
xchg
gs
inc
aas
ret
fsubs
sbb
pop
jmp
es
adc
out
or
sahf
jmp
or
xor
push
add
imul
dec
popf
sbb
out
lods
cltd
mov
sarb
pop
sbb
xchg
inc
xchg
call
daa
out
ja
jb
push
xorl
add
jb
stc
push
aad
inc
pop
push
mov
ss
push
rcll
xorb
sub
push
jbe
mov
add
jg
and
sub
in
cmpsl
add
push
cmp
jb
jle
mov
inc
rolb
and
lods
xchg
cmp
imul
loopne
mov
int3
lock
dec
jae
arpl
stc
ljmp
adc
adc
mov
cwtl
outsb
les
adc
cld
cmp
dec
into
bound
dec
xchg
cmp
xchg
movb
mov
iret
test
imul
jne
out
ret
movsb
adc
cmp
and
jle
js
jl
pop
and
gs
xchg
jg
lds
shr
or
sub
xor
mov
inc
jbe
cwtl
adcb
dec
xchg
mov
iret
in
psrad
push
es
dec
adc
adc
pop
and
mov
lcall
sbb
in
lods
jns
cmp
jb
sub
mov
pop
leave
test
mov
xor
jnp
out
lcall
mov
cmp
fsubl
push
or
jecxz
addl
scas
mov
sbb
pop
imul
fimull
and
test
pop
and
mov
mov
out
xchg
imulb
int
push
subb
test
in
add
jne
push
in
and
cmp
inc
cmp
and
push
inc
jnp
sbb
in
int3
popf
mov
inc
push
xchg
cld
aaa
ret
lret
jno
divl
pop
mov
in
ss
scas
xchg
xchg
popf
push
xchg
out
movsb
cmpsb
add
int
push
cmpsl
cmc
mov
mov
in
adc
inc
call
fs
xlat
sub
mov
xchg
xlat
int
orb
cmp
in
or
lock
movsb
xlat
inc
shrb
movsl
in
sbb
adc
jae
scas
xor
jecxz
sub
mov
arpl
push
iret
out
dec
call
popf
inc
xor
mov
pop
lock
jle
inc
mov
lods
xchg
std
ljmp
cli
int3
in
loope
or
mov
insl
pop
inc
xchg
push
out
mov
jl
push
outsl
nop
mov
and
jae
inc
adc
dec
inc
push
push
add
adc
cmpb
mov
adc
into
aam
push
inc
push
mov
out
inc
jecxz
jb
xor
arpl
loop
jp
add
pop
pop
leave
push
pop
jb
das
orl
test
les
jecxz
cmp
in
scas
sub
dec
shll
push
sbb
outsb
add
dec
fstl
insl
mov
adcl
sub
pop
mov
pop
dec
and
jle
pop
or
ret
sahf
aam
sbb
aad
dec
jg
je
sbb
mov
push
cmp
sub
xor
ret
pop
dec
outsb
or
int
aam
push
pop
int3
add
icebp
mov
xor
cwtl
cmpsb
mov
nop
les
loope
sub
cmpl
arpl
enter
out
adc
mov
mov
or
sbb
add
mov
sub
push
dec
and
stos
notb
lock
sub
lcall
mov
enter
xchg
popf
pop
push
mov
xchg
loope
jnp
inc
daa
pop
aaa
push
in
pop
lcall
movsb
mov
test
popa
adc
pop
xor
and
xchg
mov
insl
add
push
out
jmp
or
in
pop
cltd
cmp
into
pop
sbb
push
jno
mov
push
sub
test
xchg
inc
hlt
cmp
lret
scas
jmp
ljmp
adc
push
dec
pusha
popf
hlt
mov
insl
or
fldt
cld
into
sub
fidivs
mov
emms
pop
leave
fucom
gs
sbb
hlt
loop
shll
jecxz
lret
out
cli
repz
or
mov
mov
add
xlat
mov
into
cmp
sbb
mov
ret
jne
xor
dec
mov
push
jge
dec
fwait
sub
pop
pop
pop
test
xorl
fwait
std
rorb
cmp
mov
xor
inc
imul
pop
movsb
mov
jp
clc
sbb
bound
popfw
pop
mov
add
rolb
test
add
fcomps
xor
out
inc
pop
mov
jmp
cld
mov
scas
jge
orl
push
cltd
inc
repz
std
inc
jbe
xor
stc
repz
push
fmul
mov
xor
add
cmpsl
or
in
pop
dec
out
dec
xor
xor
stos
arpl
out
adc
arpl
push
aas
fsubs
and
lods
xchg
or
je
mov
jo
add
aad
cmp
push
lds
icebp
test
out
cmp
lods
mull
cmpl
xor
je
mov
add
scas
cmpl
stc
push
xor
xor
fwait
out
clc
shlb
add
and
push
dec
divl
and
dec
pop
dec
test
sbb
cmp
adc
stos
stc
mov
push
add
mov
mov
ss
outsl
js
scas
popa
sar
nop
mov
pop
lcall
xor
repz
add
mov
push
mov
fwait
pop
or
mov
push
aaa
icebp
aad
in
lock
push
pop
add
mov
push
push
mov
lea
pop
jmp
loope
loop
jecxz
or
icebp
jnp
movsl
hlt
lods
pushf
xor
sti
ljmp
mov
cmp
xchg
pusha
sbbl
outsl
pop
cmp
cwtl
sub
dec
pop
sub
push
lret
sbb
hlt
icebp
xor
and
stc
test
cli
popa
jae
and
inc
sahf
add
push
test
int3
test
adc
push
add
sbb
mov
and
pop
lcall
lret
xchg
push
or
aas
shlb
insl
pop
cmp
sbb
iret
icebp
into
mov
push
inc
iret
lret
addr16
inc
inc
xor
cs
repnz
negl
push
aaa
rol
sbb
stos
inc
sub
mov
mov
in
push
outsl
mov
call
pop
into
lret
stos
loopne
push
mov
mov
lods
mov
outsl
and
rclb
xchg
or
movsb
or
mov
xor
enter
dec
call
jb
popf
lods
sbb
sahf
mov
imul
sub
arpl
fistl
iret
insb
sti
mov
outsb
mov
sub
dec
pop
or
inc
daa
dec
movsl
push
repz
mov
push
dec
or
mov
dec
ja
subl
pop
repnz
movsb
rolb
mov
and
insb
xor
call
pop
xor
and
mov
sbbb
pushf
lret
sub
xor
adc
jne
push
xor
push
dec
push
fnstsw
jae
incl
les
pop
add
or
lds
out
mov
push
dec
arpl
cltd
ficoms
sbb
scas
mov
mov
std
xchg
and
add
push
jge
sub
sti
or
adc
bound
scas
jge
mov
test
rol
jmp
mov
subl
push
or
sbb
xchg
insl
jp
sbb
add
jmp
fisubrs
mov
sbb
adc
jmp
cwtl
adc
mov
add
iret
dec
gs
xsha1
cmpsb
mov
int3
xchg
cmp
icebp
dec
std
mov
out
mov
mov
cltd
loop
inc
xchg
add
fwait
push
mov
jp
push
add
repnz
cmc
push
mov
jge
int
pop
and
dec
xor
add
cwtl
xor
or
jl
add
outsb
adc
and
dec
je
clc
les
cmc
repnz
mov
popf
out
pop
and
dec
icebp
mov
mov
pop
inc
xor
mov
aam
jg
jl
jle
jmp
loopne
rcl
mov
push
mov
call
inc
mov
mov
mov
dec
xchg
xchg
xchg
fisubs
inc
pop
insl
sahf
xchg
push
inc
xchg
push
cmp
xor
lcall
arpl
dec
test
xchg
adc
shrl
test
es
cld
mov
icebp
sbb
xor
loope
scas
mov
pop
test
es
clc
push
or
inc
idivb
sarl
mov
pushf
sub
lds
jbe
pop
fucom
rcrb
cmp
mov
in
ja
clc
lea
dec
and
out
jnp
sbbb
int3
sbb
cmp
xor
clc
stos
ret
adc
loop
ret
pop
mov
push
int3
hlt
mov
ds
in
xor
out
jae
pop
dec
sub
push
xchg
popf
mov
xchg
lret
aaa
pop
stos
dec
jns
adc
ds
cmpsb
mov
sbb
leave
jo
adc
sub
nop
mov
ret
jg
pop
rclb
mov
xchg
jbe
pop
fcompl
aas
jecxz
cmp
jno
xor
out
sub
ds
adc
mov
scas
dec
leave
fdivl
jg
pop
stc
popa
shr
in
out
inc
sahf
inc
pusha
cmp
push
jns
push
adc
insb
jo
adc
aas
jo
or
std
push
js
sbb
push
xchg
jbe
or
aaa
or
xchg
pop
lcall
or
test
add
adc
mov
xchg
xor
inc
jmp
mov
shrb
pop
cltd
or
mov
les
mov
pop
or
push
loop
pop
cltd
sahf
shll
dec
daa
clc
mov
rcrl
test
aas
ljmp
pop
mov
int3
pop
dec
jnp
sti
fsubl
and
in
rclb
test
pusha
pusha
xchg
aad
xchg
stc
xor
icebp
outsb
pusha
jae
jl
iret
jl
das
mov
or
push
mov
jmp
stos
int
and
jbe,pt
cld
shll
jge
cmp
jmp
cmp
fistl
lret
mov
pop
cs
aad
jnp
add
stc
andb
mov
cli
adc
jne
push
in
xchg
pop
in
fcmovb
fidivl
test
aas
call
inc
lret
enter
sti
dec
dec
jle
pop
stos
xchg
jge
adc
jl
outsl
outsl
inc
and
push
xor
lods
test
nop
movsl
push
ret
pop
jg
inc
shr
aam
call
ljmp
movsl
mov
xlat
xchg
ja
add
jecxz
aam
jb
sub
not
movsb
lahf
clc
mov
push
xorl
lret
sub
insb
jne
cltd
jmp
nop
cwtl
mov
into
negl
in
sbb
jnp
aad
test
adc
nop
xchg
lret
inc
mov
mov
xchg
stos
xor
mov
dec
xor
jo
inc
cltd
test
xchg
sub
push
xchg
xchg
push
jo
not
push
in
lret
dec
decb
jl
in
das
lock
mov
or
scas
hlt
push
pop
adc
in
mov
sbb
dec
movsl
mov
int3
adc
fildl
xchg
outsl
xorb
lods
mov
inc
mov
popf
jae
mov
mov
les
mov
pop
or
push
mov
sub
in
mov
repnz
add
sbb
jp
loopne
mov
je
stc
into
mov
shr
fcmovnbe
push
add
and
mov
rcl
stos
loope
push
aas
iret
push
cwtl
jl
sbb
xchg
bound
std
testl
ja
fistl
lea
jne
mov
test
ret
test
pop
outsl
cmpsb
dec
inc
xchg
addr16
dec
in
mov
fistl
or
push
push
ret
inc
lods
or
outsl
push
jns
in
push
inc
push
xchg
push
fstpt
inc
sbb
iret
outsl
std
push
vmread
adc
push
sahf
sbb
nop
jne
dec
jae
dec
jo
adc
or
jbe
pop
xor
cmpsl
sub
jae
mov
jno
sarl
jno
ds
adc
leave
jae
fldenv
dec
loopne
iret
int
sbb
push
lea
fs
mov
cmpb
mov
sbb
rdmsr
pop
cltd
cmpsl
or
or
jl
jecxz
mov
or
inc
sub
add
push
fimuls
pop
xor
hlt
inc
cwtl
out
fdivs
popf
mov
cmc
movsl
mov
cmpsb
lods
shlb
fwait
adc
out
sbb
stc
xchg
repnz
pop
test
dec
sub
cwtl
rorl
mov
sub
scas
ret
fisubrl
test
stc
rcll
cmp
cmc
lret
call
mov
loopne
pop
scas
inc
mov
fisttpl
mov
movsl
push
jnp
addl
mov
stos
sbb
mov
movsl
and
ljmp
cwtl
ret
aaa
stos
pusha
addb
dec
in
and
cmp
dec
push
sti
mov
xor
fimuls
xor
shl
cli
pop
mov
lods
mov
js
insb
lods
push
dec
jbe
lahf
outsb
and
mov
sub
adc
test
mov
push
mov
adc
push
ficomps
pop
in
or
mov
faddl
add
mov
fdivr
aaa
sbb
pop
or
scas
pop
xlat
iret
xadd
dec
xchg
sbb
inc
sub
popa
jne
out
pop
push
push
and
mov
push
or
jb
rcr
xor
mov
mov
dec
pusha
adc
test
bound
dec
pop
lahf
mov
lock
insl
insb
and
dec
xchg
lret
mov
outsl
ja
cmp
and
xchg
dec
hlt
les
sbb
rcl
add
xor
pop
pop
xorl
inc
cs
push
inc
outsb
xchg
and
sarl
jnp
test
pop
mov
data16
sahf
rcll
lahf
rorb
adc
popf
imul
cld
push
ljmp
sub
ja
mov
pop
outsl
xchg
cmpsb
bound
les
inc
jns
mov
addr16
mov
cwtl
pop
add
sti
loope
popf
and
sbb
jecxz
mov
mov
hlt
cmp
shll
insb
cmp
xor
fwait
test
pop
mov
loopne
dec
dec
aam
add
fidivl
repnz
cmp
fs
sti
cmp
or
dec
push
sarb
push
or
dec
mov
add
pop
adc
jp
mov
mov
xor
lods
loop
ret
mov
inc
imul
jo
fcmovnb
nop
and
xlat
loopnew
lea
jne
push
push
push
pop
add
mov
cmp
mov
arpl
xchg
ret
add
ds
or
rorl
xorl
fstps
add
and
cs
es
sub
jmp
rcl
roll
and
stos
adc
fisubrs
in
pop
lret
std
fistpl
mov
fisubl
adc
lahf
mov
pop
mov
adc
stc
pop
cli
push
xchg
repnz
call
inc
add
das
lds
or
mov
jecxz
xchg
pop
add
xchg
pop
nop
lds
cmp
mov
loopne
push
and
push
mov
or
push
and
imul
fs
scas
inc
inc
inc
dec
cmpsl
mulb
xor
jns
nop
repnz
in
jle
in
insb
aam
adc
nop
test
jmp
add
ret
jbe
inc
movsb
cmp
aas
addl
push
dec
cmp
sbb
jb
addr16
cs
push
jg
scas
push
lea
sbb
mov
sets
popf
inc
sbb
cmp
into
dec
daa
jp
pop
adc
xor
ja
aas
adc
push
lock
jb
mov
cmpsb
ret
je
jl
outsb
pop
into
jo
or
movsb
cwtl
inc
imul
cwtl
jmp
outsl
repz
cltd
scas
sub
loop
mov
sbb
adc
jne
mov
xor
pop
adcl
and
test
movsl
aad
mov
sbb
scas
rcrl
aam
mov
lcall
pop
push
pop
inc
scas
iret
xor
mov
cmc
push
adc
push
loope
xor
mov
add
pop
sbb
lock
rorl
xchg
dec
mov
leave
and
or
and
outsb
pop
mov
inc
subl
jne
ficoml
cmc
int
sub
jmp
xchg
sub
xor
push
sti
sub
mov
cmc
rorl
jecxz
dec
mov
movsb
cmpsb
mov
add
or
and
cmpsl
push
dec
inc
into
ficomps
enter
inc
xor
jnp
shrb
scas
outsl
mov
leave
das
xchg
mov
pushf
cmp
test
std
push
cmp
or
jno
lods
dec
in
pop
aam
or
push
adc
ret
rcrb
push
out
dec
outsb
fistpl
pop
add
and
call
cli
imul
stos
outsl
test
lock
test
test
fwait
xchg
sub
mov
in
sub
inc
ret
push
jmp
lds
sar
cs
jl
cmpl
mov
sub
ss
int3
dec
mov
inc
push
mov
xchg
or
jae
lds
ret
inc
int
push
cmpsl
fldl
sbb
inc
jae
fs
cmp
insl
loop
stc
mov
cli
lds
les
mov
loopne
xchg
fsubrs
sti
lret
sub
mov
out
aam
push
rol
xor
xchg
or
inc
jb
and
scas
mov
push
cmovns
push
in
sub
xchg
jl
test
sub
imul
int3
andl
out
adc
leave
dec
je
fsubp
and
sub
and
adc
data16
dec
jb
sti
adc
pop
aas
popf
imul
shlb
out
jns
cmc
ja
cld
push
das
out
test
sbb
lea
xchg
pop
xor
cmp
fisubrl
adc
push
std
sub
mov
psraw
and
dec
xor
inc
and
sub
add
and
je
add
cmp
in
or
mov
cmc
and
divb
int
sti
mov
pop
bnd
push
into
mov
out
test
jbe
lods
test
inc
cs
lods
test
stc
loop
dec
pop
mov
es
adc
xchg
dec
ja
push
pushf
or
dec
add
jns
cmp
mov
pusha
lcall
pop
lcall
insl
dec
push
scas
sub
add
mov
and
xchg
sti
mov
add
test
xor
adc
add
imul
jbe
outsl
outsb
pop
adc
iret
cs
or
inc
push
call
and
dec
popa
popf
shl
adc
mov
cs
push
pusha
and
mov
fnstcw
cmp
dec
mov
mov
das
cmp
or
add
push
mov
sub
nop
loop
dec
cmp
cld
jbe
scas
jle
icebp
push
adc
test
aam
out
cli
test
rolb
cwtl
das
test
mov
lods
cmp
sar
leave
pop
xlat
les
mov
add
mov
add
push
sub
mov
sbb
jmp
js
and
inc
pop
ffree
mov
xor
mov
mov
push
lea
inc
int
ds
js
shl
pushf
fstl
mov
les
sbb
add
mov
jns
rep
push
pop
inc
or
call
fbld
xchg
fistpl
sub
int
pop
sbb
movsb
nop
loopne
leave
fistps
out
and
lea
add
sub
icebp
and
fdivrp
into
out
cltd
inc
jmp
jne
loopne
sbb
stc
sahf
cmp
jnp
sub
sub
movsl
cltd
out
sub
dec
je
inc
xor
mov
xor
cltd
fnstenv
or
jle
ret
outsl
movsl
subb
and
mov
xor
push
sbb
aad
cmpsl
stc
pop
fidivs
loop
add
pop
jle
sub
sbb
pop
cld
mov
mov
pop
jp
sub
mov
popf
mov
jo
mov
sbb
sub
gs
out
mov
mov
xlat
and
cli
enter
stc
or
sbbb
mov
out
dec
inc
or
jns
icebp
loopne
xlat
sar
movl
fidivs
movsl
and
pop
test
lret
mov
inc
mulb
mov
sbb
lock
jg
xchg
or
aad
insl
sbb
push
sub
test
xchg
sahf
fistpl
popa
mov
jns
imul
stc
aaa
clc
cmp
cmpsb
fisubs
das
movsl
outsb
hlt
jb
in
ss
enter
adc
fisttpl
or
fs
and
mov
fcomi
arpl
push
mov
fstpt
sarl
dec
jecxz
scas
inc
add
cli
ss
sub
out
xor
add
sub
push
andb
rcrl
nop
fistl
lcall
ret
sbb
mov
lock
cli
ret
fiadds
inc
push
andb
xlat
or
xchg
sub
sub
mov
sti
mov
andl
mov
pushf
out
dec
inc
mov
add
insl
inc
rclb
jns
movsb
stc
inc
add
ret
test
ljmp
pop
jmp
xchg
push
cs
or
xchg
sti
dec
sbb
test
outsl
push
and
push
push
fs
das
ret
dec
ljmp
ret
enter
sub
xor
stos
mov
sub
xchg
leave
icebp
cmp
aas
movsb
loop
and
pop
fsts
inc
jl
push
add
subl
dec
xlat
clc
pop
lret
iret
pop
push
pop
mov
sub
xor
lret
shll
ds
repz
xor
aaa
mov
out
fidivl
or
fmul
test
push
cmp
loope
fistpll
out
mov
xchg
pop
hlt
xor
test
loop
xchg
jle
paddd
scas
push
out
les
adc
lods
stc
jle
pop
repnz
mov
fmull
mov
insb
inc
test
popf
lcall
pop
repnz
movsb
popf
data16
fadds
imul
pop
inc
sti
ret
sub
mov
arpl
jecxz
sub
push
in
aas
mul
je
or
sbb
inc
out
js
inc
push
dec
loopne
lea
push
ljmp
mov
out
fldt
dec
lds
rorl
lods
pop
push
inc
mov
int
int
xchg
in
addl
lds
repz
jae
notl
aad
test
addr16
mov
fisttpll
clc
out
cs
jecxz
in
adc
jp
cmp
jnp
adc
jl
mov
mov
outsl
and
add
popa
xchg
pop
ja
fdivrl
dec
jnp
push
xchg
sbbb
xor
mov
les
in
push
pmuludq
sbb
mov
into
add
ljmp
push
xor
mov
je
xchg
or
testb
lods
bound
ja
addr16
inc
outsl
lahf
es
sub
insb
int3
or
jae
fs
aaa
js
lds
add
sub
and
inc
xchg
dec
das
xchg
lcall
in
in
xor
roll
loopne
ja
mov
std
daa
xor
or
xchg
outsl
push
es
stc
xchg
xchg
sbbl
mov
aaa
int
dec
push
cmp
or
insb
or
rcrb
cmp
dec
mov
or
mov
shlb
imul
adc
bound
out
test
fs
cmpsl
frstor
pop
xchg
les
push
cmp
sub
icebp
sub
arpl
xchg
fmuls
push
pushl
mov
gs
cltd
mov
cmp
les
ljmp
lods
lret
xchg
fistps
data16
imull
jmp
mov
jmp
std
mov
push
movsb
fdivrp
les
xchg
sahf
lret
push
mov
je
pop
mov
jge
sti
jo
js
push
mov
int
xchg
adc
jmp
hlt
aaa
pop
das
movsl
pop
push
push
mov
fldcw
aad
arpl
sub
mov
sub
incl
cmpsl
mov
inc
icebp
les
add
rcl
ja
inc
inc
mov
dec
out
stos
jp
mov
cmp
mov
dec
push
scas
pop
imul
sbb
rcrb
push
jo
fdiv
ljmp
cmpb
cltd
dec
push
dec
inc
aas
push
stos
jb
adc
push
data16
push
jle
aad
cwtl
inc
cmp
inc
cmpsb
mov
mov
dec
movsb
in
or
je
mulb
pushf
ljmp
xchg
movsl
and
push
pop
mov
pop
cmp
xor
repz
and
pop
pop
xchg
and
sub
dec
pop
repz
ja
push
insl
in
dec
fsts
jmp
hlt
push
nop
movl
add
cltd
dec
imul
add
popa
loopne
jp
inc
rorb
mov
fisttpl
sub
fimuls
or
xchg
fucom
arpl
lret
jecxz
sahf
lcall
cs
repnz
cmp
sahf
icebp
adc
cli
mov
outsb
cmp
arpl
mov
shrl
xor
pop
hlt
push
mov
out
mov
pop
mov
hlt
in
je
addl
test
adc
aad
orb
lret
xchg
cli
leave
mov
xchg
mov
xor
mov
rolb
sub
jp
std
in
cld
in
sbb
adcl
lods
pop
dec
jo
pop
push
arpl
fldt
scas
jmp
jns
pop
sbb
fwait
pop
mov
mov
mov
dec
ss
sbb
mov
dec
jmp
mov
mov
je
sbb
fmull
ss
repz
lock
dec
pushf
out
jl
fiaddl
mov
mov
push
pop
sub
clc
adc
mov
jns
xor
cltd
mov
mov
mov
loop
jo
fstl
sub
fadd
leave
lea
and
insb
inc
mov
sub
push
aas
or
stc
cmp
dec
leave
pop
lret
in
lds
mov
lock
lods
ljmp
popa
nop
popf
sti
pop
push
xchg
cmp
hlt
test
dec
bound
pop
mov
or
ret
arpl
ret
test
popf
pop
out
jns
int
decl
push
movsl
mov
popf
mov
push
pop
lret
jmp
call
fsub
xchg
jge
dec
inc
xchg
inc
rol
lret
xor
cmpsb
shrb
and
es
in
and
mov
fisubs
dec
cmpsb
sbb
movsb
mov
lea
mov
push
andl
xchg
cmpsb
sub
sbb
sbb
loopne
je
into
jl
xchg
or
sbb
aas
jae
jae
roll
lahf
bound
push
cltd
fidivl
xchg
out
jp
fistl
jb
xorl
mov
dec
scas
pop
fdivr
addr16
and
or
pop
cli
in
hlt
inc
sbb
andb
pop
nop
jb
icebp
pop
repz
lahf
cltd
mov
cli
and
inc
or
inc
scas
out
shrb
jb
loope
inc
loope
pop
push
mov
jne
fucomi
xchg
lcall
push
jge
repz
adc
fs
add
add
jg
mov
mov
sub
or
leave
jmp
shrl
rcl
or
sbb
xchg
es
cwtl
mov
aam
cmpsb
insl
sub
push
xorl
sti
lods
insb
jle
pop
sub
je
repnz
mov
xor
dec
aaa
mov
cmp
sbb
mov
jns
push
mov
aaa
movsb
ja
cli
cmpl
adc
jg
ret
out
cmp
repnz
and
mov
xor
pop
sbb
movsl
jb
cld
out
adc
out
je
or
mov
lods
push
jg
int3
pop
hlt
movsl
xor
test
push
inc
iret
pushf
cmpsb
adc
lds
out
jmp
mov
aas
idivl
ljmp
nop
icebp
cwtl
inc
sbb
jl
push
dec
frstor
sub
mov
cmc
mov
loopne
jo
sti
ljmp
loope
pop
sub
bound
cmp
enter
notb
sbb
xor
dec
jecxz
in
popf
addr16
ficoms
dec
push
cmpsb
test
int3
in
push
out
cld
fiaddl
push
fs
lea
nop
inc
leave
outsl
sub
pusha
jae
lret
sub
mov
je
data16
push
repz
mov
fistpl
insl
movsb
lret
xchg
in
adc
bound
xchg
call
aad
test
push
push
mulb
jbe
adc
stos
sub
daa
rclb
insb
js
fimull
sbb
fsubl
push
jp
inc
rcll
mov
dec
imul
fcmovnb
sub
fsubrl
pop
and
mov
out
ss
and
test
xchg
leave
pop
mov
mov
adc
movsb
sub
dec
arpl
inc
jnp
inc
mov
cmp
jg
out
pop
loope
mov
sbb
jno
cmp
mov
or
sbb
popf
xorl
mov
sbbl
jae
jne
and
aaa
xchg
add
hlt
jl
clc
mov
inc
cmp
sbb
jbe
xor
mov
shrl
lock
hlt
push
push
sub
loop
lds
aas
cmpsl
fistl
jo
add
pop
mov
and
int
xorl
jmp
mov
pop
lods
inc
in
nop
out
pop
movsl
out
cwtl
popf
sub
xchg
xchg
jae
pop
ljmp
aaa
fidivs
xor
shrb
into
xchg
dec
out
aam
push
std
nop
ficoml
je
pop
push
sbb
aaa
xor
jecxz
push
cmpsb
inc
sbbb
sahf
sbb
sub
xor
adc
push
enter
inc
bound
pusha
mov
mov
iretw
mov
pop
jns
sahf
movsb
or
sub
shll
sbb
jmp
pop
sub
lock
fdivr
lret
adc
or
clc
imul
popa
lahf
jl
lock
mov
jns
neg
and
in
roll
or
iret
pop
mov
inc
inc
push
dec
nop
cwtl
outsl
pop
and
jne
mov
rcr
sbb
jo
test
sbb
loope
std
mov
sahf
pop
xchg
out
push
in
aaa
rorb
cmpsb
push
scas
mov
xor
pushf
ja
sbb
mov
lcall
je
and
fdivrs
jmp
inc
jmp
imul
data16
lret
into
cmc
addr16
dec
pop
xor
inc
insb
insb
sub
popf
jmp
jns
adcl
pop
outsb
inc
push
rorb
cmp
pop
sbb
dec
xor
shlb
lcall
jmp
mov
imul
pop
movsb
cmp
inc
lret
mov
test
inc
imul
movsb
imulb
icebp
in
push
popf
adc
in
test
mov
push
dec
imul
decl
xor
insl
sbb
stos
xorl
scas
sbb
popf
pusha
shll
cmp
mov
lds
mov
test
or
js
out
out
js
inc
jae
adc
cmp
pushf
mov
adc
dec
pop
jo
mov
adc
xchg
jb
lods
ds
pop
xor
adc
lods
fcmovu
lock
add
push
and
cmp
xchg
stos
pop
repnz
sbb
or
jecxz
mov
mov
mov
fistps
dec
arpl
fsubrl
enter
lock
lret
lahf
sub
lea
xchg
call
dec
mov
fnstcw
dec
ret
std
mov
adc
push
mov
cmp
fstps
dec
cltd
orb
ss
mov
sbb
add
jp
imul
dec
push
mov
lods
sub
lret
in
fadd
test
push
pop
movl
and
imul
lcall
mov
inc
adc
gs
mov
imul
mov
cmc
jmp
mov
sub
pusha
inc
and
sahf
mov
orb
mov
or
stc
add
pop
mov
fcoml
fisttpll
push
mov
adc
xor
stos
hlt
pop
push
push
int
push
inc
inc
mov
cmc
jmp
std
jnp
fwait
xor
frstor
push
loop
sub
mov
xchg
xchg
movsl
and
inc
push
and
arpl
xchg
icebp
xchg
mov
push
insl
and
testl
jns
cmpsl
mov
iret
jb
ret
cmp
mov
xor
imul
ret
ret
test
cmc
push
stos
mov
adc
lock
adc
test
cltd
les
cmp
nop
enter
adc
or
fld1
xor
loope
xor
add
out
mov
insb
shrl
ds
xor
dec
shlb
mov
adc
sti
mov
add
push
test
imul
jmp
sti
std
sub
data16
xor
cmp
test
adc
pop
mov
push
dec
sub
dec
inc
pop
dec
int3
mov
add
mov
ljmp
fcoms
test
int
cmp
out
insl
or
push
xchg
enter
aad
popf
pop
aas
push
inc
fiaddl
bound
pslld
insb
push
out
push
repnz
ret
loop
adc
pusha
adc
leave
dec
cmp
nop
cwtl
mov
push
mov
xor
imul
out
pop
enter
jo
sbb
insb
aas
or
and
jne
or
repnz
sbb
fwait
cmpsb
popa
dec
xorl
outsl
inc
cld
jge
popa
mov
sbb
and
sbb
aaa
xchg
scas
cmp
dec
pop
sbb
jecxz
je
inc
call
mov
dec
dec
xchg
xor
movsb
ret
push
cmc
sub
or
adc
popa
shrl
mov
popa
sti
xor
xchg
mov
cs
xlat
mov
sub
dec
sub
out
jae
push
icebp
push
es
mov
lea
andb
xchg
mov
orb
xchg
outsb
jmp
bound
test
insl
xchg
sub
imul
ficomps
xorl
xchg
ficomps
cld
and
pop
or
pop
ss
subl
ss
pop
js
jl
fbld
push
xchg
push
sar
les
jne
out
fidivrl
fs
insl
jo
sbb
dec
push
inc
ret
ljmp
icebp
and
ja
pop
cmp
dec
pop
inc
out
xor
xchg
mov
mov
mov
bound
loopne
mov
out
out
shlb
or
add
jnp
push
repnz
add
ja
sbb
sbb
adc
repz
test
xor
callw
push
out
inc
inc
bound
dec
jnp
stos
sub
jbe
rcr
sub
roll
sub
repnz
mov
mov
insl
stos
jge
jbe
arpl
arpl
mov
test
mov
sbb
jl
pop
push
push
pop
sub
rclb
lods
pushl
cwtl
mov
cmpsb
push
ja
cli
int
xor
pop
pop
out
mov
aam
pop
test
out
and
sbb
cmp
push
movsb
or
mov
mov
mov
dec
leave
cltd
cmp
dec
adc
icebp
fsts
dec
mov
jmp
pushf
jae
insb
mov
xor
jg
add
rcrb
inc
mov
loope
xchg
out
jp
lret
icebp
cmpsb
or
scas
pop
xor
int3
push
jecxz
js
aad
cmp
int3
mov
sbb
icebp
adc
inc
pop
sub
dec
jle
loope
test
push
mov
push
sbb
inc
shrb
test
add
aaa
in
negl
out
inc
repnz
xchg
test
nop
call
clc
and
dec
fwait
dec
xchg
shr
bound
xor
inc
or
or
mov
int
mov
in
and
pop
fs
inc
cmp
sub
sub
and
pop
adc
dec
mov
iret
movsl
subl
repz
es
mov
dec
movb
jg
sub
sbb
dec
sti
push
sbb
js
cmp
jo
and
mov
popa
cmpsb
fiadds
mov
sbb
ljmp
repz
xchg
lcall
and
mov
andl
xor
loop
cli
movl
push
test
roll
js
cmpsl
sbb
inc
pusha
cmp
in
popa
clc
sub
dec
sbb
push
out
mov
and
add
and
push
or
lock
jns
or
leave
imull
insl
jnp
add
fistpl
jle
push
pushf
fwait
test
mov
cli
mov
and
test
leave
ret
jno
add
es
push
xchg
lret
cwtl
push
or
lret
push
outsl
pop
mov
xor
pop
sbb
push
rorl
dec
shrb
xchg
lock
fsubrp
outsb
jbe
jecxz
pop
shll
das
xchg
hlt
bnd
push
cmpsb
sahf
in
or
jo
cltd
in
orl
cs
out
pop
xor
mov
cmp
jno
out
or
loopne
dec
mov
fnstcw
xchg
movsl
add
aaa
insb
jp
cwtl
lods
sub
sub
mov
aad
or
insb
lock
call
push
dec
arpl
pop
loope
je
add
repnz
cmpl
xchg
rcrl
pop
aaa
mov
lcall
ds
pop
mov
push
jl
mov
push
cwtl
test
jbe
jnp
shrl
push
pop
test
mov
xor
jp
jecxz
es
and
ss
sbb
sub
jae
in
dec
sbb
data16
popf
int
popa
leave
add
pushl
jle
scas
daa
inc
fcomip
fisubl
mov
outsb
popa
push
stos
ljmp
sbb
ljmp
call
lods
xchg
mov
jle
and
adc
xchg
push
loopne
mov
data16
bound
adc
inc
mov
mov
inc
xchg
sub
add
loopne
int
mov
dec
dec
mov
jl
clc
in
sbb
pop
xor
das
mov
insb
popa
sbb
and
dec
lret
aad
xlat
and
out
mov
push
imul
mov
movsl
es
mov
test
or
sahf
cwtl
add
cli
dec
or
fildll
ds
iret
cmpsl
mov
mov
fld
xchg
out
mov
gs
dec
andl
jp
sub
xchg
mov
std
nop
xchg
mov
stos
inc
inc
jmp
rcrl
out
mov
xchg
mov
mov
imul
fwait
stc
in
ret
das
aam
push
inc
sub
xor
sbbb
out
mov
call
sub
or
ret
fcompp
fldenv
push
xchg
mov
cmp
mov
pop
leave
push
lret
enter
jge
insb
jnp
test
fsub
stos
mov
in
mul
adc
or
fnstenv
cmp
and
lcall
mov
sbb
fdivrl
sar
sub
push
mov
push
mov
sahf
shrb
sub
loope
jmp
loopne
cltd
dec
test
lcall
mov
lcall
out
dec
sbb
fs
arpl
insb
repz
nop
mov
or
sbb
in
ret
push
orl
loop
pushf
insl
mov
inc
ds
inc
xchg
loope
imul
mov
arpl
dec
leave
sub
jl
mov
leave
fidivrl
rclb
jnp
sbb
cltd
mov
sbb
cmp
mov
setbe
jns
fisubl
inc
dec
mov
gs
xor
mov
push
ror
cmp
fwait
jo
pop
sub
jbe
pop
dec
jnp
shrb
lock
stos
and
popa
or
repz
push
and
jl
mov
jne
out
cli
jecxz
sti
ja
jbe
mov
mov
push
sbb
inc
pop
cmp
lock
mov
and
pop
xchg
clc
jnp
sbb
sub
or
adc
dec
aaa
jo
push
fbld
xlat
je
cmp
adc
fidivl
mov
inc
in
in
shlb
cltd
int3
mov
mov
jae
in
add
mov
repz
lret
jae
mov
and
push
pop
stc
add
inc
and
cwtl
or
jle
mov
out
cmpsb
outsl
xor
icebp
adc
mov
leave
mov
sbb
sub
out
sub
and
imul
and
xchg
arpl
xor
and
mov
mov
int3
pop
sti
loope
xchg
cmc
mov
push
mov
movsl
mov
xor
mov
decb
and
fistps
pop
mov
dec
subb
dec
push
cmp
push
mov
push
test
test
push
fmuls
sti
mov
or
inc
add
adc
test
jle
ret
jnp
pop
mov
cmpsl
sub
inc
push
ret
jl
gs
ret
xor
je
stos
xor
adc
xlat
sub
mov
and
mov
xchg
jmp
or
cmp
mov
cmp
in
mov
xchg
inc
push
push
pop
aaa
pushf
cmpsb
imull
xor
jae
bnd
fwait
outsb
aaa
cmp
jbe
jp
jle
jo
mov
cmp
push
test
stos
dec
pop
fcomip
mov
sti
pop
mov
xchg
inc
mov
lds
push
sub
stos
ja
add
cmpsb
jno
leave
adc
stc
or
pusha
push
cwtl
xchg
jg
addb
inc
loopne
inc
mov
xor
and
inc
xchg
aaa
loop
fs
lea
xchg
xchg
fwait
lcall
mov
inc
je
and
addr16
loope
arpl
das
mov
xor
jbe
pop
sub
in
cmp
in
cmp
sub
jecxz
sahf
push
loopne
cmp
pop
push
pop
ret
fs
cltd
dec
aad
add
cmc
std
lret
and
test
xor
jp
imul
out
push
je
sbb
sbb
push
scas
and
call
repz
movsl
aaa
mov
sbb
fs
mov
fstl
push
inc
or
push
mov
jbe
outsb
pop
push
sub
call
inc
fstps
es
arpl
inc
sti
inc
sub
xlat
jecxz
scas
loop
imulb
andb
sub
or
inc
inc
xchg
xchg
je
pop
xor
inc
xor
pushf
jnp
dec
or
outsb
cmp
xchg
lods
xor
cwtl
add
pop
adc
cld
das
mov
sbb
jp
pop
inc
mov
in
aas
jne
les
pop
ret
pop
negl
jmp
rorl
andb
in
je
dec
mov
mov
jne
cli
xor
loopne
inc
pop
out
pop
in
mov
mov
rclb
test
stos
bound
loopne
dec
out
or
ds
lods
pushf
adc
fdivs
aad
adc
xor
xlat
decl
sbb
ljmp
jmp
mov
sbb
test
cmp
jns
test
sub
mov
shrl
leave
pop
jno
addb
mov
inc
mov
loopew
cmpsl
add
aaa
call
dec
mov
lods
or
mov
xor
pop
or
in
dec
mov
sahf
cs
xchg
icebp
jns
idivl
add
aaa
push
sub
or
mov
mov
cli
ret
out
scas
and
xchg
fistpll
fwait
les
mov
pop
mov
push
sti
sbb
push
aas
xor
pop
xor
jg
fdivl
cmpb
push
mov
mov
xchg
stos
scas
call
cmpsl
jle
hlt
cli
lods
mov
adc
cld
mov
lahf
sub
shll
daa
rcrl
push
sbb
sbb
mov
cld
insl
in
inc
pop
out
inc
push
xchg
mov
mov
and
popf
mov
xchg
ljmp
cmp
mov
add
imul
leave
dec
inc
and
lcall
jg
jge
popf
push
mov
sub
inc
repnz
cmp
mov
push
in
sub
push
lock
and
ficoml
out
in
jo
cmp
popf
nop
push
cmp
add
mov
lods
xchg
je
pop
sbb
add
and
dec
push
stos
xor
dec
test
jl
fidivrs
stos
lret
stc
push
inc
int3
mov
cli
dec
lret
dec
push
shll
scas
adc
aas
fsubrs
push
in
xchg
sbb
pop
inc
nop
in
rorl
out
imul
add
inc
sbb
push
loopne
mov
clc
pop
jmp
pop
add
mov
and
aad
add
movsl
lret
sahf
test
repz
add
cmp
outsb
dec
fiaddl
cli
lcall
dec
pop
mov
shll
pop
cmp
shlb
aas
sbb
mov
ret
subb
cwtl
pop
ret
mov
jb
test
adc
ja
ljmp
push
into
lods
sar
xchg
aaa
rcr
cmpsl
repz
jns
cs
arpl
mov
rclb
push
mov
mov
mov
fstps
push
or
xchg
outsb
out
jle
pushf
enter
cli
js
inc
jmp
adc
insb
jecxz
or
cwtl
enter
lret
call
mov
loop
frstpm(287
add
mov
insb
fwait
mov
xorl
lret
cmpsb
aam
cmpsb
outsl
cmpsb
aam
sub
stos
sbbl
bound
jae
push
cmc
pushf
dec
xchg
pop
aad
sub
dec
dec
lret
xchg
test
enter
out
mov
mov
inc
test
test
popf
dec
data16
stos
ljmp
pop
jmp
add
xchg
fdivrp
ss
in
sti
fmuls
rcrb
pop
enter
loopne
add
push
mov
jbe
ret
inc
adc
xor
mov
divl
or
dec
mov
jle
sub
out
mov
dec
sbb
push
fistl
popa
fwait
pop
jmp
and
xor
xchg
mov
push
cltd
imul
cltd
inc
in
fstpl
daa
and
adc
cmpsb
lea
jg
pop
popa
mov
ret
dec
out
dec
push
lahf
dec
add
nop
pop
ss
repz
push
mov
adc
dec
ljmp
cmp
shrb
fildll
mov
mov
cmpsb
ret
or
mov
xor
cmp
out
mov
sbb
mov
mov
lret
dec
rcll
push
cmc
xor
loop
std
cmp
jmp
push
inc
mov
scas
icebp
push
push
pop
mov
loopne
addl
repnz
push
inc
nop
dec
push
xchg
or
or
mov
aas
and
xchg
repz
or
cmp
shlb
lock
ficoml
cmp
adc
push
test
push
dec
negb
gs
adc
cs
push
icebp
mov
and
hlt
stos
imul
addb
jno
dec
call
dec
pop
fcompl
mov
adc
xchg
xchg
adc
mov
sub
inc
add
mov
add
sub
cwtl
adc
adc
clc
sbb
out
and
or
insl
lret
xchg
pop
fistpl
mov
push
pop
xlat
cli
sub
xchg
fiaddl
imul
jne
mov
inc
ret
mov
into
mov
pop
cli
neg
loop
mov
xor
mov
xchg
sbb
js
pusha
mov
sbb
popa
or
in
sbb
or
mov
je
daa
xlat
pop
dec
dec
jecxz
pushf
pop
insl
in
mov
popf
inc
lds
cmc
xor
lods
sbb
sbb
daa
dec
push
push
mulb
inc
aam
ljmp
sub
ds
mov
idivb
ljmp
mov
pop
insb
stc
test
sbb
and
lahf
mov
push
fstpl
inc
pop
icebp
sub
or
mov
ja
xchg
pushf
xor
ljmp
scas
cmp
loop
dec
sahf
xchg
fbld
neg
dec
sbb
add
mov
sub
add
mov
call
sti
pop
xor
or
cmpsl
cmp
sbb
fsubl
inc
mov
xor
dec
mov
lods
xorb
adc
pop
fadds
imul
cmpsb
arpl
fsubs
sbb
movsl
fdivp
add
xchg
ret
cld
sub
adc
bound
xor
dec
arpl
fistpl
and
dec
leave
jne
and
fsubr
iret
cli
xchg
pusha
inc
xor
mov
xchg
add
mov
or
xor
and
setne
cli
xlat
jl
xor
fcomp
repz
sbb
fldl
scas
pop
stos
add
jge
and
call
outsb
push
push
mov
and
popa
lahf
stc
sbb
pop
add
pop
mov
mov
shlb
lret
push
in
mov
push
popf
mov
inc
mov
out
imul
inc
push
mov
stos
mov
mov
lods
das
lret
sub
call
add
or
pop
cmp
rorl
scas
repz
out
gs
scas
loop
jns
pop
js
adc
in
xchg
cs
xchg
jle
repnz
mov
pop
mov
push
fs
inc
pop
lahf
aam
mov
es
gs
repnz
and
jle
out
sbb
cmp
xor
fisttps
sar
lock
xor
dec
adc
adc
dec
mov
fnstenv
ret
add
popf
stos
mov
je
push
cmc
int
pop
in
repz
cmpsb
jbe
pop
insb
mov
enter
pop
repz
and
jmp
call
mov
cmp
push
add
sub
xor
popf
sahf
and
or
jns
pop
jne
add
ss
scas
int3
cld
ret
fcoms
daa
dec
lret
xor
and
gs
sahf
arpl
mov
clc
cmp
xchg
jmp
pushf
repz
cs
leave
mov
pop
sahf
mov
pop
xor
xorl
roll
cld
inc
cmp
push
mov
cmc
stos
test
jb
dec
shr
rcll
shrl
test
pop
cwtl
mov
xor
cmp
mov
jb
xorb
or
lcall
ret
and
add
loopne
outsl
and
push
test
sbb
push
push
push
push
rcrb
mov
dec
mov
pop
imul
mov
xchg
fld
fmuls
mov
adc
test
nop
pop
mov
sbb
jae
enter
pop
adc
mov
pusha
adc
je
mov
jbe
nop
sub
mov
test
add
cmc
gs
aaa
movsl
pusha
jae
je
xchg
ss
mov
ret
mov
ror
test
fldcw
pushf
mov
add
push
je
add
andl
lret
xlat
and
cmpsl
outsb
fildll
sub
fs
xor
sbb
xor
fs
lock
mov
es
shll
inc
sub
adc
add
stos
xchg
jno
inc
sub
jmp
sub
js
dec
jns
les
filds
jb
cltd
repz
jbe
or
in
or
lcall
mov
sbb
das
shrl
int3
jno
cmp
jmp
arpl
jae
adc
or
aam
fildll
movsl
mov
sarl
pushf
pop
xchg
aam
fdiv
ss
adc
in
push
inc
sub
mov
imul
test
cmpsl
int3
inc
orl
ud1
push
mov
mov
fadds
mov
lods
sub
mov
adc
std
dec
in
push
cmp
cmp
fidivl
adc
adc
inc
push
fcoms
xchg
xchg
daa
and
fcoms
lea
repz
stc
pop
pop
lock
sbbb
add
movsl
and
fwait
int3
add
popa
sbbl
dec
and
add
cmp
sti
mov
mov
push
jg
bound
shrl
idiv
cmp
cmp
xchg
je
cmp
pop
mov
pop
mov
sbb
clc
mov
test
hlt
lds
ss
in
in
sahf
test
bound
mov
mov
pop
cmpsl
xchg
xchg
push
lahf
loope
or
mov
lds
lcall
les
minps
dec
and
fcmovnu
iret
mov
hlt
and
lahf
jo
std
jp
cld
into
cmova
ret
insb
popa
xchg
add
shrl
cmp
lret
inc
mov
mov
sarl
loopne
jg
and
cltd
scas
adc
jmp
in
outsl
orb
mov
fwait
xchg
fldenv
fisubrs
mov
in
int3
mov
pop
unpckhps
sub
jg
or
mov
cmp
cmp
mov
pusha
mov
fwait
inc
out
lret
cltd
push
and
jbe
mov
push
jge
sub
fs
push
jne
in
fldcw
or
jb
lock
fs
sbb
adc
jp
mov
push
mov
out
pusha
loop
movsb
fidivs
idivl
hlt
fwait
jg
push
sbb
dec
stc
stc
mov
jmp
std
inc
xor
mov
lret
dec
mov
nop
mov
sub
loope
pop
pop
mov
fsubr
adc
inc
push
push
jg
dec
mov
adc
mov
jo
mov
lds
repnz
pop
jb
lock
fmull
mov
pop
or
imul
sahf
mov
dec
push
mov
cmpsb
mov
sbb
aad
dec
je
cmp
mov
clc
xor
aam
popa
cs
lods
scas
sub
int3
adc
cs
mov
fstps
pop
cmp
sbb
inc
jns
std
aaa
cwtl
sbb
or
or
das
add
cmpsl
add
mov
jo
sbb
arpl
outsl
into
test
hlt
call
mov
mov
cltd
les
sbb
or
leave
nop
jge
jb
mov
mov
cmp
in
push
jb
popa
loope
out
arpl
cmc
and
icebp
scas
inc
dec
mov
mov
fidivs
addb
outsb
xchg
dec
sub
xchg
pop
sti
dec
test
xchg
out
jno
adc
popf
mov
mov
loop
cmp
or
stc
popa
inc
jns
in
mov
imul
sub
nop
ds
icebp
sub
loopne
out
cs
js
sahf
xchg
jne
inc
sahf
in
and
lock
pop
jge
dec
push
inc
dec
sub
sub
call
cmp
scas
leave
xor
adc
inc
pushf
jns
lcall
cmp
sbb
fnstcw
out
cltd
das
rorb
cli
addr16
xchg
daa
pop
inc
mov
cld
bound
lds
add
xchg
andl
cmpsl
and
test
adc
stos
mov
gs
jo
and
pushf
adc
pop
sbb
and
iret
sub
nop
mov
add
and
loopne
sub
jl
pop
xchg
in
popf
xor
xorl
repnz
mov
orl
push
cmpsl
inc
push
push
xchg
jmp
cltd
in
imul
fiaddl
ret
out
movsb
mov
loopne
dec
jno
cld
mov
add
inc
jb
addl
xor
push
nop
lods
lret
rcrb
jnp
cltd
and
hlt
mov
pop
arpl
nop
mov
mov
pop
shrl
xorl
int
adc
jb
sbbl
push
jb
test
ficomps
xor
and
imul
dec
loop
mov
cli
scas
cmpb
mov
mov
test
orl
xchg
push
not
imul
popf
jp
arpl
divl
out
push
jge
adc
push
add
or
es
sub
lock
add
in
pop
cmp
out
or
cs
sub
incb
mov
mov
in
out
sti
and
sarb
xor
jno
stos
into
push
cwtl
dec
add
mov
xor
lret
push
adc
shlb
out
xor
bound
aam
popf
loopne
rorl
cmp
insb
add
pusha
in
xchg
icebp
ficoms
cmc
cltd
loope
lods
cwtl
push
xlat
test
mov
outsb
in
inc
addr16
push
xchg
jg
inc
out
out
iret
cmp
xor
in
lahf
fsubrl
pop
arpl
lods
popf
out
jecxz
cmpsl
xchg
sub
cmp
enter
loopne
inc
jl
fnstcw
or
push
mov
loop
and
jecxz
leave
lods
and
cs
xchg
xor
and
or
push
xchg
mov
sbb
cmc
dec
adcl
pop
fwait
popa
out
mov
or
or
cmp
pop
jp
cmp
push
sub
add
iret
jns
push
dec
out
push
int
cmp
ret
ja
sbb
outsl
ret
pop
stos
leave
xchg
fsubr
cs
jb
mov
cmp
nop
lds
mov
push
in
mov
xchg
cwtl
int
cmp
push
ret
inc
xor
shl
inc
jg
js
dec
push
push
cmc
dec
sbb
mov
data16
and
sbb
cmpl
adc
andl
popa
cmc
xor
rcll
xor
adc
cmc
jns
xor
push
xchg
icebp
out
xor
cmp
push
mov
dec
push
jae
xor
cmp
sub
jge
cmp
push
push
movsl
fcmove
jne
sub
iret
sbb
add
out
xor
push
dec
cld
nopl
xor
dec
lea
es
aad
test
pop
leave
in
add
lods
mov
mov
inc
mov
repnz
push
pop
stc
je
add
test
jmp
cld
lods
test
mov
imul
inc
dec
add
in
out
or
dec
shll
lods
inc
push
xor
fildl
outsl
fists
jnp
cmp
lock
add
xor
jge
pop
mov
cmp
mov
jo
orb
inc
daa
jo
push
inc
movsb
jp
mov
and
roll
jne
ds
int3
and
and
out
data16
lock
xchg
out
xchg
add
hlt
jmp
mov
pusha
xchg
pop
jno
push
imul
ret
jne
cmpsl
outsb
addr16
idivl
mov
stc
loop
adc
or
mov
sbb
bound
pop
jl
jb
outsb
and
shlb
dec
rcll
inc
cmc
mov
push
les
add
mov
xchg
mov
or
or
push
notl
push
pushf
dec
cli
inc
lods
sti
ret
mov
xchg
sbb
test
into
test
push
roll
loop
lret
addr16
stos
mov
dec
fimuls
cmpsb
aas
jne
sub
fstpl
cltd
mov
popa
cmpsb
enter
mov
xchg
push
bound
add
push
ret
daa
dec
dec
jecxz
mov
adc
hlt
add
xchg
call
mov
test
call
in
push
movsb
push
movsl
sub
xor
ss
aad
jns
gs
cmp
cwtl
cmp
jno
pusha
leave
sub
push
and
or
das
aaa
movsb
aas
pop
cld
push
or
orb
adc
inc
dec
pop
push
pop
sub
je
add
js
mov
inc
sbb
aad
inc
dec
cs
jmp
in
loope
xchg
and
rcrl
test
mov
shrb
ret
js
not
sub
xor
cmpsb
out
sub
scas
xchg
xchg
jp
add
stos
pop
cmpl
mov
cmp
jmp
je
rol
ds
adc
into
cmpsl
cmp
add
jg
or
fwait
sti
sbb
push
outsb
loopne
mov
in
popf
test
leave
pop
mov
sub
fdivrl
xchg
daa
mov
or
pop
pop
mov
sub
adc
xchg
dec
xchg
fsts
retw
mov
addr16
xchg
and
out
icebp
mov
lret
inc
repnz
cmp
or
arpl
mov
inc
xor
sbb
mov
sub
dec
mov
orb
lock
popf
lcall
push
fwait
lcall
jne
imul
xor
push
xchg
outsl
rorb
out
daa
in
and
imul
test
call
aam
les
js
cmp
dec
xchg
and
int
cmp
push
sub
inc
dec
sub
orb
insb
mov
pop
sti
sub
and
aaa
sbb
fdivs
cmp
pop
cld
push
sub
lock
fwait
cmp
movsb
mov
test
insb
aaa
int
pop
daa
pusha
mov
push
mov
cld
or
push
cmpsb
dec
push
fildll
sti
cmp
divl
push
mov
je
mov
lock
lods
inc
test
push
mov
adc
dec
cltd
push
or
jbe
hlt
ret
and
xor
cmpsl
jl
shll
pop
dec
dec
push
sub
imul
cmc
jge
mov
or
fidivrs
mov
jb
dec
inc
je
stos
adc
push
sbb
jb
and
or
sbb
push
fstps
dec
loope
clc
sub
addr16
sbb
repz
inc
pop
lcall
jbe
jns
cwtl
sbb
jnp
mov
arpl
mov
and
add
stos
xchg
in
or
and
test
stos
aaa
push
xor
mov
add
cmp
lods
mov
mov
xchg
les
mov
xor
sub
inc
cmpsb
jne
mov
lods
test
xchg
jmp
sbb
lock
xchg
test
or
or
push
data16
or
addr16
shll
int
jnp
pusha
push
or
inc
stos
add
ds
imul
push
cltd
cmp
leave
rorl
adc
mov
gs
sahf
sbb
sbb
insl
pop
repz
cld
xor
cli
xor
loopne
inc
roll
movsl
sbb
insb
adc
hlt
testl
ja
cmp
cwtl
pop
imul
stos
stos
mov
cmp
inc
jae
pop
cld
subb
inc
xchg
cwtl
dec
mov
pop
pop
adc
gs
imul
add
test
mov
adc
and
test
lcall
mov
sbb
mov
jl
dec
jns
loopne
bound
gs
leave
and
testl
cmc
push
mov
cmp
pop
scas
xchg
cmp
fidivl
inc
mov
loope
mov
mov
mov
lods
xor
loopne
cld
rol
call
sarb
mov
adc
sbb
or
jns
xchg
out
and
notl
aad
xchg
jl
and
inc
lock
pop
add
lods
stos
inc
aas
inc
xor
xor
into
add
mov
sbbb
adc
push
into
out
mov
lock
push
jmp
addr16
icebp
cmp
out
push
xor
jns
movsl
test
aas
cmp
incb
inc
xor
mov
jns
lret
pop
inc
and
pop
mov
call
cld
data16
mov
sub
xor
cwtl
push
inc
ljmp
dec
sbb
hlt
les
addr16
test
pop
sbb
xchg
lds
sbb
jnp
int
mov
xchg
add
jno
cmp
jb
adc
pop
adc
int3
sub
es
sbb
mov
mov
lods
shll
ljmp
int
nop
add
ljmp
dec
inc
fstl
pop
out
xchg
mov
sbb
nop
ficoml
pop
fdivrs
sti
push
incl
add
shlb
das
gs
pop
fmull
cmp
jle
cmp
mov
repnz
jecxz
lds
js
inc
mov
dec
std
pop
hlt
stos
fidivl
repnz
rcll
pop
stos
rorl
add
rolb
scas
xchg
and
pop
movsb
push
hlt
insb
inc
cs
push
and
ret
popf
hlt
out
jnp
push
push
jge
es
mov
lock
int
daa
divb
sub
addb
lcall
xor
fstpt
repnz
sub
pushf
pop
or
push
jne
and
push
mov
in
xor
arpl
movsl
cmp
pop
cwtl
inc
mov
jo
jecxz
push
jo
xlat
lret
in
push
insb
cmp
call
mov
out
sbb
ljmp
mov
aas
movsb
xchg
adc
sub
mov
outsl
les
dec
pop
ss
add
inc
push
sbbb
mov
loope
fwait
cmc
popa
lods
add
pop
pop
mov
and
outsl
push
xchg
sbb
cli
cwtl
scas
jl
fwait
roll
or
int
pop
rorb
push
and
xchg
ficompl
imul
test
pop
mov
std
mov
or
sbb
rorb
jo
pop
or
loope
mov
xor
jge
inc
jmp
add
cmp
icebp
in
into
popa
lret
cs
pusha
or
mov
fadd
push
mov
sbb
sbb
nop
pop
dec
fcoms
mov
js
stos
cmp
out
arpl
and
sub
add
or
inc
adcb
in
ret
lods
add
jns
mov
ret
test
cwtl
jl
ret
sti
pop
fneni(8087
cmp
nop
add
cwtl
mov
dec
mov
dec
jle
push
push
and
pusha
cmp
sbb
pop
popf
je
pop
aad
or
mov
leave
pop
lods
call
mov
sub
or
clc
inc
or
xor
test
scas
adc
sub
push
xor
xor
imul
inc
push
jo
sbb
mov
jmp
orb
dec
pop
fimull
sub
insl
ret
add
cli
cmp
rol
pop
adc
jmp
inc
mov
sub
sub
sbb
andl
dec
pop
iret
fcoml
push
mov
cmp
rol
je
or
mov
lods
cmpsb
add
psubsw
pop
push
fs
subl
pop
insb
mov
cld
sub
bound
jp
push
inc
or
inc
aas
or
es
cmp
subb
lods
and
sub
sbb
push
cmp
mov
js
test
xor
inc
mov
mov
pop
push
cmp
dec
xchg
cmp
mov
and
test
dec
push
sahf
push
add
popa
out
pop
pop
lea
nop
jae
aaa
inc
xlat
adc
xchg
push
in
mov
xchg
lods
mov
call
addr16
sbb
fidivrs
ret
rclb
jg
leave
sub
ds
bound
ret
stos
popf
push
frstor
sub
push
test
inc
ds
and
xchg
test
les
push
sub
sbb
jl
loop
mov
mov
lret
cmp
and
and
cwtl
out
and
mov
inc
adcb
dec
iret
and
and
jmp
mov
push
call
mov
mov
sbb
push
fs
mov
bound
xchg
mov
fisubrl
jns
sbb
ds
sub
xchg
jmp
sbb
jge
test
add
pop
jp
dec
int
xchg
xlat
enter
xor
lea
dec
push
in
cld
inc
and
jb
cld
jbe
pop
insl
adc
repnz
in
jne
mov
mov
ja
sar
dec
lods
mov
bound
pop
push
movsl
stc
dec
je
mov
lea
jbe
pop
push
hlt
cmp
fidivs
xchg
outsb
scas
adc
xchg
cli
dec
cmp
jmp
xor
lret
popf
mov
push
xchg
hlt
jmp
mov
imul
or
xor
fdivrs
mov
and
outsb
inc
adcb
push
dec
mov
lcall
lahf
lods
fwait
add
outsb
mov
jb
mov
jg
jmp
jae
or
xchg
mov
dec
and
sub
or
in
cmp
cmp
and
fwait
xor
jmp
mov
cmp
stos
adc
idiv
mov
or
fmuls
rcrb
jb
inc
pop
sub
xor
jno
imul
pop
aad
ret
int
mov
cmp
inc
pop
cmp
jb
mov
or
and
cmpsl
mov
scas
jns
push
mov
int3
dec
adc
jne
cmp
push
xchg
jno
rolb
xchg
ss
sub
cltd
setno
cmp
test
jge
pop
fimull
js
lds
mov
cmp
push
xor
fiaddl
push
mov
dec
lods
loope
add
repnz
test
daa
daa
pop
pop
adc
dec
xchg
pop
repnz
hlt
scas
jp
call
rcr
nop
push
xchg
xchg
xchg
cmp
pop
mov
sbb
pushf
insl
pop
sub
xlat
xor
adcb
daa
dec
mov
cmp
add
pop
mov
xchg
add
sahf
pop
adc
lret
js
loopne
inc
push
inc
outsl
mov
cltd
push
xchg
inc
shlb
adcl
ja
adc
lret
sbbl
cmp
lds
xchg
push
mov
daa
fs
pushf
lock
dec
dec
neg
lods
and
jge
jae
mov
and
jle
mov
in
gs
fcom
dec
cmpsb
xchg
into
sbb
mov
nop
addr16
inc
stos
fdivrs
jns
js
xchg
inc
pop
bound
pop
and
je
cmpsb
mov
int3
nop
push
add
pusha
or
mov
sub
pop
xor
mov
loopne
mov
xchg
mov
test
xlat
and
and
push
mov
pusha
arpl
cmp
inc
mov
test
stc
mov
dec
fdivr
xorl
dec
dec
mov
pop
out
loope
or
cmp
je
outsb
mov
xchg
jae
ret
or
cmp
inc
sahf
mov
cli
rcll
or
xchg
mov
cmp
or
cmpsl
hlt
insl
sbb
iret
mov
fists
scas
xor
sbb
lods
stc
nop
faddl
scas
jp
xchg
lds
idivl
lock
mov
cmp
jge
fildl
aas
mov
add
das
imul
sahf
clc
repnz
dec
test
lods
outsb
scas
icebp
cmp
cld
scas
inc
jg
mov
pop
or
mov
mov
mov
mov
jnp
dec
enter
mov
cmp
sbb
xor
push
push
in
push
cld
pop
mov
insb
mov
jns
cmp
loope
lcall
pop
ret
mov
rorl
push
and
and
sets
jp
mov
mov
or
and
and
test
pop
insl
popf
cmp
imul
push
inc
lock
sub
jbe
adc
and
stos
lds
xchg
fidivs
neg
jge
or
rorl
sub
fsubrl
add
inc
ret
in
push
and
adc
pop
inc
add
push
mov
cwtl
fst
aas
fidivrs
mov
das
jae
arpl
inc
or
adc
mov
leave
gs
shll
fstpt
pop
sub
dec
fwait
adc
pop
pop
int
push
clc
adc
fdivr
fstl
andb
clc
pop
out
outsl
and
mov
jmp
jae
cli
inc
imul
lock
jo
adc
rcll
push
mov
mov
test
les
icebp
pushf
cltd
and
ss
into
lods
pop
popa
cli
pusha
mov
cmp
cmp
add
arpl
roll
lahf
cmc
rcr
imul
mov
inc
push
sarb
inc
sbb
add
into
mov
push
jmp
xchg
orb
xchg
sbb
jg
cmpsl
call
test
add
ret
ret
dec
add
mov
and
mov
dec
fnstsw
sbb
sub
cmpsb
mov
lret
xor
add
xor
dec
jl
iret
pop
sbb
add
pop
inc
xlat
daa
pushf
stc
popf
aaa
dec
loop
add
test
test
adcl
push
imul
out
fptan
add
sub
jle
ljmp
inc
lret
mov
mov
or
loope
dec
fcoml
pop
mov
cwtl
bound
sub
push
enter
stos
push
jns
imul
xor
lods
insl
stc
je
cmpsl
enter
sahf
dec
dec
cmovge
lret
stc
push
sub
jbe
push
mov
inc
iret
dec
hlt
push
and
xchg
cli
mov
sar
int3
jo
mov
cld
fldt
sub
adc
lock
mov
mov
inc
pop
std
jb
inc
pop
ds
lret
mov
hlt
add
pop
push
ss
sbb
or
dec
ret
fimull
iret
test
scas
mov
adc
mov
add
outsb
mov
icebp
xchg
adc
or
xor
sbb
and
inc
or
mov
pop
inc
repz
inc
ja
push
ret
and
mov
mov
stos
xchg
and
ljmp
les
fbld
mov
fwait
push
mov
lds
out
adc
xor
cmpsl
inc
xchg
mov
bound
out
pop
jecxz
lret
adc
mov
into
jb
add
mov
xchg
rcll
mov
and
int3
call
dec
or
jns
sub
dec
in
lcall
sbb
testb
ret
scas
pop
jge
gs
jns
sbb
and
or
inc
mov
mov
add
push
dec
mov
adc
es
mov
ja
mov
pop
dec
push
lret
cltd
jns
rcrl
sbb
nop
sbb
loop
jo
mov
push
jg
mov
ljmp
xlat
sbb
mov
fcom
push
lahf
int3
sub
shl
push
add
add
mov
test
add
pop
jmp
push
jno
mov
sti
clc
cmp
add
sarb
xchg
sub
mov
outsl
clc
sub
loop
cmp
leave
shrl
test
mov
mov
jne
jb
pop
mov
cmpsl
mov
test
jnp
popa
xchg
xor
movsl
int3
incl
xchg
push
out
subl
out
scas
jbe
into
push
push
repz
lods
pop
iret
jae
dec
add
mov
roll
lahf
pushf
js
add
fbstp
iret
loope
push
lret
repz
adc
jl
loop
icebp
mov
outsb
jb
pop
leave
sbb
out
sub
mov
and
arpl
adc
pop
jnp
and
aad
pusha
out
es
into
dec
sahf
xchg
lock
mov
mov
jmp
ret
bound
push
popf
mov
inc
dec
stos
into
adc
sub
hlt
push
or
lahf
shr
aad
dec
or
pop
jae
jg
rolb
js
lods
cmp
xor
push
dec
xor
jle
mov
insl
iret
sbb
movsb
or
mov
mov
ljmp
adc
jmp
add
rcrb
rorl
cmp
test
hlt
dec
dec
mov
sbb
pop
sub
hlt
ljmp
push
xchg
jns
add
mov
cltd
mov
jne
cli
xchg
ret
pop
jp
push
push
jl
fmuls
cwtl
mov
mov
test
fstps
jl
out
ret
loopne
neg
movsb
mov
std
mov
pop
out
sbb
pop
movl
stos
mov
xchg
int
xchg
cmp
mov
jp
and
dec
mov
lods
ret
mov
call
sahf
xchg
arpl
lahf
dec
xchg
adc
inc
ret
mov
sub
imull
insl
call
sbb
or
data16
clc
jbe
lahf
ret
push
and
add
and
push
inc
sbb
addr16
add
mov
test
fs
sbb
inc
daa
ds
jns
dec
js
cwtl
push
pop
cli
mov
lds
bound
stos
xchg
sbb
jl
cld
popa
pop
shrl
push
rcrl
jle
daa
insl
test
mov
lock
cwtl
nop
cmc
mull
popf
sub
cmpl
inc
fwait
cmp
ss
in
sub
and
in
cli
sbb
cmc
movsb
data16
inc
add
mov
lret
rcrl
mov
cld
mov
push
xor
xchg
stos
mov
inc
sub
jns
jp
dec
std
cmp
xchg
cmp
fnstsw
icebp
xlat
mov
xor
inc
fsubs
cmc
fs
cmpsb
psubsw
sbb
pop
es
sub
dec
in
std
scas
dec
movsl
push
es
iret
jno
xchg
adc
fmull
fstps
xorl
jnp
inc
cmpsl
sbb
in
push
jns
stos
popf
cmpsb
in
jmp
js
xchg
jecxz
iret
pop
pop
xor
or
push
jnp
gs
insl
sub
aam
cmp
es
jns
sbb
cmpsb
dec
popf
bound
push
dec
jb
loop
jmp
jno
cltd
mov
fwait
sbb
mov
adc
pop
inc
adc
sbb
mov
call
fldl
in
jg
sub
fnstsw
loop
stos
add
mov
mov
sbb
fimuls
aad
mov
mov
mov
repz
pop
pop
enter
inc
cmpsb
dec
mov
dec
sub
iret
aas
xor
mov
pop
mov
cmpsw
cmp
pop
xchg
pop
pop
out
nop
clc
imul
push
push
pop
aam
mov
lret
dec
and
mov
push
movsb
cmpb
and
push
pusha
sbb
push
pop
xchg
jae
jb
sbb
sub
or
loopne
dec
repz
fadds
fimuls
sbb
jp
sub
pop
add
pop
inc
fstpt
add
jecxz
sub
sti
cmpsb
or
push
faddl
daa
fnsave
pop
movsb
movsl
or
call
inc
fildll
lcall
movsb
nop
mov
into
enter
mov
into
out
shll
aad
jge
sbb
mov
mov
imul
xchg
out
fucomip
call
ret
filds
lock
test
mov
sub
xchg
clc
xor
add
add
xchg
xchg
in
pop
test
xor
mov
pop
notb
mov
sahf
lea
sub
lods
inc
push
mov
mov
sbb
enter
pop
cmc
repnz
adcl
lock
push
hlt
jge
dec
jle
pop
lret
int3
cmp
pop
inc
sbb
mov
andl
cmpsb
mov
int3
push
pop
xor
psubq
movsl
mov
popf
pop
mov
mov
pop
loopne
xor
or
mov
and
xchg
xchg
ss
sbbl
out
daa
mov
shl
pop
cmp
in
mov
push
dec
jp
pop
xchg
mov
cmp
inc
or
in
cmc
in
push
mov
xchg
les
dec
mov
ja
mov
mov
sarl
dec
or
and
push
sbbb
inc
int3
mov
sub
adc
in
or
mov
dec
insl
cs
mov
add
adc
xlat
addr16
cmp
xchg
fistps
adc
out
push
xchg
sti
pushf
insl
insb
add
sub
inc
sbb
xor
enter
lret
fbld
pop
sbb
lea
fstpl
cmpsl
or
inc
std
pop
fcmovb
stos
mov
dec
enter
loop
cmp
stos
ret
cmpsb
jbe
mov
xchg
xor
xchg
imul
jno
call
push
scas
in
jne
pusha
jb
bound
mov
add
adc
xor
pop
mov
xchg
push
repz
xchg
and
inc
mov
fdivl
dec
mov
or
divl
xchg
or
push
jo
enter
jp
mov
pop
int3
mov
and
adc
xor
imul
mov
mov
or
adc
notb
enter
test
xor
out
and
hlt
cli
lret
inc
jne
mov
cmpsb
pop
loopne
pop
rcrb
rcll
cmc
add
adc
dec
lock
xchg
xlat
fs
xchg
std
in
sbb
mov
or
sub
dec
pop
mov
lods
mov
dec
mov
jae
cmpsl
mov
sbb
popa
mov
cltd
outsb
daa
or
pop
or
sahf
inc
sbb
mov
aam
and
lock
mov
cwtl
test
in
mov
aaa
fmull
lcall
cmp
inc
sub
add
ss
stos
jge
loope
push
idivl
lret
sub
repz
mov
xor
out
push
aad
ja
loopne
mov
ret
loopne
adc
mov
leave
iret
push
cmp
push
ret
xchg
lods
and
bound
adc
jmp
fwait
mov
scas
shlb
data16
scas
or
jo
xor
and
cmp
jb
xlat
jl
pop
lret
nop
push
mov
rcrl
sbb
data16
push
ret
fdivrl
dec
mov
pop
dec
add
pop
nop
movsb
jae
sub
sbb
popa
jnp
fs
pop
cwtl
cwtl
or
mov
cld
pop
jns,pt
sti
pop
xor
fsubl
mov
aas
ljmp
cmpsl
jmp
enter
sub
push
stos
pop
xchg
shrb
xor
cmpsl
imul
in
mov
push
cld
dec
mov
cmp
xchg
push
std
pop
out
jbe
mov
push
or
sub
inc
hlt
and
popf
or
sarb
subb
repz
sub
sbb
rclb
aam
sbb
or
imul
ffree
lods
mov
pop
and
std
cwtl
cmp
dec
fidivl
dec
xchg
ret
cmpsl
jne
popf
sti
mov
test
insl
nop
mov
push
pop
xchg
push
inc
sbb
mov
lret
lret
mov
adc
inc
push
ficomps
sub
pop
or
or
shrl
fcmovne
bound
stos
inc
push
addr16
ljmp
les
add
int3
gs
inc
dec
sbb
jle
std
inc
sahf
mov
enter
sbb
push
lods
push
inc
fadds
pop
ficomps
mov
adc
lds
mov
fsubl
mov
or
mov
fidivrs
mov
jp
call
jecxz
jmp
movsb
das
rcll
leave
jge
test
dec
ja
or
je
mov
cld
xchg
mov
push
popa
jb
mov
and
popa
jnp
mov
lds
mov
je
movsl
outsl
pop
lahf
mov
ret
repz
repnz
ret
movsb
sbb
mov
or
adc
or
or
adc
and
fwait
out
iret
mov
adc
flds
in
inc
leave
sahf
icebp
arpl
rcl
jmp
pop
and
sarb
bound
xchg
mov
outsb
cmp
mov
stc
loop
loopne
mov
sub
bound
iret
imul
or
inc
loopne
and
test
fsubs
xchg
xchg
call
or
jo
outsb
repnz
fimull
pop
fidivrl
push
sbb
int
popa
rclb
jle
add
fcoml
lcall
inc
sub
stc
movsb
in
push
and
adc
push
call
hlt
clc
sahf
out
inc
push
pop
xorb
jb
dec
enter
mov
jb
push
push
cs
sbb
repnz
jl
pop
fucom
jne
daa
lea
pop
adc
pcmpeqw
jno
cltd
pop
cmp
ds
sbb
mov
sti
pusha
dec
mov
repz
or
or
rorl
pop
mov
call
dec
or
fisubrs
inc
int
scas
hlt
out
mov
mov
add
notl
pop
insb
or
mov
cmp
sbb
jb
sahf
sub
out
rol
shrl
sti
mov
xor
add
inc
xchg
mov
jbe
test
jo
pop
xor
cmpsb
inc
lret
xor
sub
clc
jnp
xor
pop
jecxz
pop
loop
std
out
rcrb
cmp
adc
push
out
shll
movsl
stos
pop
pop
mov
in
xchg
or
lods
rcrl
in
pushf
lea
xchg
mov
push
or
pop
adc
inc
push
and
cli
add
mov
test
dec
lock
jge
push
jmp
addb
xchg
and
mov
dec
pop
fxch
out
jmp
lret
dec
cmpsb
cmp
add
push
jae
jbe
fists
fld1
outsb
sbb
pop
xchg
jmp
and
paddusb
dec
push
ja
mov
jae
adc
fistpl
mov
dec
shrl
or
cli
jge
jb
sbb
sub
cli
pushf
pop
mov
sbb
cmp
mov
aad
xor
mov
and
xchg
test
loopne
jge
or
dec
xor
faddl
mov
iret
jno
mov
psubw
xor
insb
rolb
out
sub
iret
int
inc
cltd
xchg
aad
mov
xor
imul
push
pop
inc
jae
fwait
aam
gs
xchg
cli
push
mov
ficoml
in
push
and
movsl
jge
adc
dec
or
imul
sub
aaa
mov
je
repnz
and
dec
and
add
push
adc
into
addr16
shll
cmp
jl
mov
push
add
or
not
jle
xlat
sbb
aad
push
nop
mov
mov
sbb
jo
iret
adc
mov
inc
orl
mulb
int
or
das
cli
mov
negl
ds
mov
hlt
lock
imul
xchg
mov
addr16
add
stc
std
movsl
dec
aam
or
fldl
jle
into
cmp
mov
in
push
movsb
add
rcrl
hlt
pop
shl
push
sbbl
lret
arpl
dec
dec
or
sbb
pop
mov
adc
inc
dec
sbb
sub
insb
out
lock
out
cld
sbb
push
rcll
stos
test
mov
xor
and
mov
adc
xchg
pop
mov
filds
lret
imul
nopl
pusha
xlat
cmp
inc
push
scas
jp
jg
xchg
mov
icebp
iret
and
and
and
add
sbb
push
xlat
xchg
sub
add
push
sub
sub
push
add
inc
test
aam
or
stos
push
subl
dec
mov
push
lahf
or
push
les
cs
loope
loope
cmp
scas
and
sbb
shrb
xchg
sub
in
mov
sub
mov
ds
aad
inc
add
hlt
or
and
fcmovb
pop
push
fwait
popa
jbe
cmp
inc
in
and
mov
mov
add
jbe
xchg
mov
imul
push
pop
add
cmp
mov
pusha
mov
jecxz
sbb
xor
cmc
es
xor
push
jl
rcrl
les
dec
scas
dec
pop
addr16
sbb
add
stos
adc
sbb
stos
xchg
lea
in
pop
and
js
mov
mov
fstpt
in
add
adc
and
pop
mov
jae
cmp
rcll
insl
push
cmp
sbb
dec
and
es
pusha
shl
loopne
outsb
sub
les
pop
push
mov
daa
add
add
hlt
leave
dec
or
popf
lods
out
gs
adc
adc
test
rorl
add
inc
xor
mov
push
push
int
icebp
push
dec
mov
out
and
pop
mov
aaa
add
add
adc
std
ret
add
mov
pop
nop
leave
shr
loope
xor
push
xchg
pop
cli
mov
cwtl
in
nop
cmpsb
aad
je
add
out
pop
mov
sub
testb
push
xchg
push
and
or
mov
mov
ljmp
orb
icebp
js
xchg
push
ret
mov
int
faddp
test
cmpsl
and
sbb
divb
push
adc
and
mov
push
out
mov
adc
dec
xchg
cmp
cltd
sub
fimull
cmpsl
lcall
sub
sti
push
dec
dec
imul
mov
sbb
push
jmp
rcl
push
push
sbb
mov
xchg
nop
cmp
js
fldl
adcb
addr16
jl
pop
adcl
int3
out
add
aaa
adc
inc
popa
cs
dec
jecxz
lahf
dec
dec
cwtl
or
int3
aas
sti
daa
nop
or
push
test
insb
mov
xor
stos
rcr
cmpl
mov
psubb
mov
inc
stc
shrb
xchg
push
cli
sbb
sub
into
es
shll
cmp
sbb
cmc
aas
pop
fstpt
inc
or
push
sub
aas
outsl
push
sti
mov
and
cmp
shlb
pushf
in
push
mov
dec
popa
aas
in
pop
outsl
push
cwtl
pop
push
cli
addb
inc
mov
test
jmp
in
adc
addb
add
mov
mov
mov
nop
negl
adc
lods
pop
sub
or
test
lcall
rorb
cmp
test
push
inc
or
dec
das
or
jns
mov
xchg
sbb
sti
push
lret
mov
scas
sbb
sbb
push
cmc
idivl
roll
ret
cmpsl
jmp
pop
leave
es
leave
lret
push
pop
enter
arpl
lret
lock
add
mov
incl
or
fwait
add
pop
pop
pusha
cmpsl
idivl
pusha
aas
popa
push
add
jnp
aas
pop
mov
arpl
inc
jb
adc
push
adc
fsubs
and
adc
dec
and
lea
mov
in
inc
out
out
jnp
ja
jp
xchg
xchg
into
mov
es
mov
loope
and
pop
scas
add
loop
mov
int3
les
cld
mov
std
rcl
movsl
cli
in
int3
and
int
sub
dec
ljmp
xor
jmp
mov
cli
addb
rcll
movsb
xchg
mov
insb
fldt
into
fdiv
mov
addl
mov
pop
push
xchg
shlb
stos
lret
xlat
cmp
jp
outsl
jo
daa
mov
pop
add
insb
ss
nop
adc
jle
fiaddl
lcall
xlat
fsts
or
xchg
jecxz
test
iret
dec
and
pop
and
mov
leave
sub
lods
nop
scas
mov
and
shrb
cltd
repz
push
roll
test
push
sub
not
inc
addr16
xchg
mov
and
pop
xor
fcomps
or
js
cmpsb
jae
shlb
inc
push
cmp
and
ret
imul
nop
push
pop
lcall
jl
stos
icebp
pop
dec
sbb
std
mov
sub
lods
loopne
adc
add
mov
jns,pn
inc
rsm
inc
sbb
cli
repz
push
stc
pop
inc
fwait
repz
cmp
in
aam
stc
out
rolb
xchg
mov
xor
loope
mov
repz
mov
xor
or
cmc
jp
jle
pop
pop
mov
and
ret
int3
mov
dec
cmc
sub
xchg
and
dec
cmp
imul
cmp
push
pop
sub
jns
lret
cli
outsl
xchg
pop
mov
inc
fwait
je
test
cmp
movsb
lods
mov
movsl
xchg
jmp
ja
scas
and
sub
jg
sbb
mov
lfs
mov
pop
mov
xlat
push
pop
and
push
arpl
sahf
aad
insl
ds
faddl
mov
cwtl
test
cmp
pop
sub
pop
iret
test
push
loop
fistpl
ja
movsb
subl
jno
es
cli
mov
mov
add
push
stc
dec
mov
push
dec
mov
leave
mov
pop
lcall
cmp
sbb
adc
xchg
jbe
movsb
fsts
push
inc
add
sarl
arpl
imul
fwait
imul
arpl
pop
lret
adc
stos
aam
pusha
push
stos
jp
pop
fldt
dec
or
iret
jg
adc
out
outsl
cmp
mov
dec
push
cmp
mov
cli
xlat
adc
adcl
ror
divb
arpl
icebp
xor
fsts
and
sarl
xor
cmpl
pop
adc
enter
gs
out
mov
int3
movsl
mov
mov
mov
scas
mov
movsl
mov
mov
or
adc
movsl
mov
and
scas
aas
mov
inc
dec
out
sahf
adc
test
cs
push
mov
nop
and
dec
dec
jecxz
add
xor
fisttps
test
divl
pop
mov
jnp
negb
dec
in
dec
fadds
rcrb
add
add
cmpsl
dec
inc
xor
mov
jno
and
and
gs
xchg
movsl
sbb
mov
fsubs
and
xor
sub
ret
cmp
sbb
and
rcll
lcall
js
rolb
push
cwtl
pop
test
mov
mov
mov
xor
shll
xchg
cs
fsubrs
loopne
test
ja
jg
and
cli
clc
int3
and
stos
inc
pusha
scas
push
scas
ret
in
fildl
rcr
fprem1
shl
mov
add
jl
and
and
addr16
push
jle
push
and
leave
in
out
test
shl
lret
fimuls
mov
fimuls
popa
push
out
lret
incl
or
push
fsubrl
push
sub
sbb
rcl
dec
pop
out
add
cld
add
sbbl
xchg
jns
jge
sbb
cwtl
pop
fistl
movsl
dec
mov
out
push
ret
and
test
cmp
stos
mov
adcl
jmp
mov
jb
mov
cmpsb
js
xor
test
push
shl
shrl
xor
das
fimull
daa
lods
mov
popf
ss
dec
jns
outsl
or
std
inc
cmc
stc
pop
pop
xchg
imul
adc
fld
add
mov
icebp
mov
stos
or
testb
shr
test
movsl
mov
pop
ret
jmp
jno
rorl
sub
push
sbb
xchg
insl
loopne
sbbb
icebp
dec
xchg
push
sub
push
fucomi
sub
mov
sub
fstps
xchg
arpl
or
mov
and
sub
inc
push
aam
or
mov
xor
jg
push
xchg
fadd
or
mov
xlat
out
lods
lock
cmpsl
pop
mov
dec
xor
push
and
stc
xor
mov
mov
jne
pop
jbe
je
add
cld
aaa
div
lret
inc
scas
add
push
loope
ret
dec
push
push
jo
push
and
fstpt
fdivr
into
xchg
insl
or
sub
xchg
xchg
jbe
dec
ret
aaa
pop
arpl
pushf
inc
mov
pop
int
push
jge
mov
addr16
call
test
pusha
pop
sbb
gs
dec
pop
push
sti
inc
xor
fisubs
and
lahf
and
mov
mov
andl
jecxz
clc
push
int
adc
ficompl
in
enter
jp
cmpsb
aam
outsb
jl
repz
imul
mov
adc
mov
jbe
cs
xchg
xchg
push
sarl
cmp
sbb
jmp
outsb
or
fs
cld
add
sbb
pop
pop
xchg
sbb
sub
insb
push
lods
push
mov
mov
add
xchg
addl
push
push
pop
pop
ja
movsb
and
pop
mov
insl
out
dec
aas
stc
cmc
insl
testl
or
int
pop
lahf
popf
inc
mov
xor
xor
jecxz
es
or
cmp
dec
dec
pop
mov
cmpsb
imul
popa
fs
outsl
or
dec
jb
sbb
xchg
out
aaa
daa
and
stos
push
mov
or
icebp
icebp
cmp
push
cmp
loop
pop
bound
outsb
fistpl
jae
fildl
outsb
das
ss
mov
push
cli
adc
in
cmp
push
mov
and
nop
sbb
test
or
sbb
fdivs
movb
mov
jo
std
add
lret
repnz
jle
xor
sub
cmp
jge
dec
cltd
fstpl
pop
inc
cmp
test
lea
or
dec
adc
dec
int3
stos
psrld
ds
out
mov
dec
jl
std
push
imul
pop
push
ds
xchg
xor
mov
fsubrl
jb
leave
fiaddl
scas
pop
inc
fcomip
xor
or
fistpll
mov
dec
mov
mov
dec
mov
dec
xchg
push
fsubl
pop
call
and
shrl
pop
mov
push
mov
lds
xchg
out
addl
in
cmp
int3
adc
shlb
fstl
mov
add
jae
pusha
test
xlat
loopne
arpl
mov
push
adc
xchg
idivb
pop
mov
mov
adc
and
mov
inc
outsb
cmp
imul
lds
call
daa
jne
setg
int3
addr16
jle
int3
mov
lods
sub
test
add
into
pop
fisubrs
testl
hlt
andl
lahf
sub
xchg
fimull
and
fsubs
stc
cs
gs
fidivl
out
xchg
js
mov
movsb
push
insb
mov
jno
loopne
jns
movsl
out
xor
xchg
imul
nop
cltd
or
push
xchg
std
sbb
fdivs
add
adc
sub
inc
xlat
pop
jae
rcll
cmp
xchg
jae
repnz
pop
gs
inc
loop
push
test
cmc
mov
dec
mov
stos
enter
lcall
mov
dec
loope
movsb
mov
mov
mov
lcall
sti
pop
jp
cmpsl
adc
ja
out
call
fldenv
out
aad
fistpll
push
mov
loope
mov
fld
std
add
ret
data16
fistl
xchg
ja
dec
clc
imul
mov
mov
pop
jg
pusha
push
movsb
xchg
cmpsl
out
hlt
pcmpeqw
xchg
mov
shlb
gs
mov
faddl
mov
jb
adc
push
mov
mov
push
clc
popa
or
imul
push
ss
mov
sub
in
mov
rcr
iret
fwait
add
xchg
sbb
sub
inc
adc
fwait
or
rorb
into
dec
movsl
test
jns
out
sub
cwtl
lea
mov
icebp
in
rcll
mov
xorb
inc
cli
scas
jno
adc
sub
js
roll
idivb
cmp
push
call
xor
xor
and
jge
into
cmp
ds
mov
inc
mov
or
repnz
fsubrl
mov
clc
mov
mov
cs
cmp
lea
and
cmp
movsl
lods
mov
and
push
scas
sbbb
and
in
inc
mov
inc
xchg
add
loop
mov
cli
adc
or
in
addr16
pushf
cltd
insl
fcoml
cli
xchg
cmp
hlt
test
dec
pop
jb
xor
or
sbb
enter
mov
sbb
fidivl
sahf
and
jbe
leave
or
out
in
adc
cmpb
fs
inc
pop
cli
stc
push
dec
push
xor
xchg
lcall
and
fcomps
xchg
adc
mov
lea
jbe
xor
xor
fldcw
jo
dec
inc
push
and
cmp
scas
inc
je
inc
jns
cmp
dec
mov
pusha
or
sub
cmpsl
jbe
cmp
and
pushf
lock
dec
mov
int3
orl
pop
pop
xchg
mov
dec
dec
pop
pop
xorb
xchg
pop
icebp
fdivrl
push
scas
adc
xchg
dec
das
xor
fldl
cs
xchg
stos
sub
cs
xor
in
xor
pop
imul
roll
sub
cltd
xor
push
stos
xlat
in
inc
rcr
mov
dec
push
ds
scas
and
fcoms
pop
lods
xchg
sub
mov
jp
mov
sub
and
inc
pop
mov
andl
imull
pop
xchg
mov
fnstcw
sub
push
test
xor
clc
scas
adc
push
das
leave
push
dec
add
dec
mov
inc
mov
sub
or
out
scas
hlt
cmp
lock
pop
cltd
mov
pop
push
out
shl
push
cmpsb
mov
lcall
mov
mov
mull
push
out
aad
sbb
movsl
sub
mov
rcll
aas
cmp
js
ljmp
lcall
in
data16
outsb
call
sbb
imul
push
cmp
scas
xchg
ret
ss
cwtl
push
jle
aad
bound
in
pop
inc
aaa
xor
xor
fisubrl
add
in
or
push
pop
sti
jmp
inc
stos
scas
fst
dec
xchg
or
dec
shrl
mov
ds
jl
jmp
pop
or
sbb
push
ss
sbb
cli
leave
and
jp
jae
xlat
divb
jnp
dec
xor
in
and
ja
lret
incl
mov
adc
arpl
mov
push
mov
repz
mov
sub
les
test
fwait
jmp
mov
ljmp
ficoml
mov
jg
pop
push
push
add
int
mov
pop
test
ror
das
push
popf
inc
jp
push
lock
mov
xor
dec
dec
cltd
subb
cmp
cwtl
and
or
shlb
jl
fsts
mov
jmp
cmp
sbb
lock
cwtl
stc
jg
shlb
adc
jecxz
aas
xchg
aam
cld
cs
inc
out
mov
insl
cld
mov
gs
lret
les
push
lret
insb
dec
fadds
inc
jo
mov
movsb
add
mov
bound
aaa
cmpsb
mulb
jg
ret
iret
jle
mov
loope
outsl
adc
aam
sbb
out
mov
push
xor
fbstp
push
call
aad
fldcw
add
inc
push
and
adc
shll
inc
adc
dec
inc
gs
iret
cmp
cltd
sbb
sub
lret
test
cmc
cmpl
or
lock
mov
std
rorl
xor
adc
pop
push
arpl
seta
dec
sub
repz
in
out
push
mov
bound
mov
in
in
pop
pop
add
xor
inc
push
pop
ljmp
dec
bound
sbb
add
scas
sbb
xchg
jl
test
pop
pushf
mov
inc
cltd
nop
aaa
jno
push
fsubs
outsb
mov
test
inc
inc
inc
mov
repz
jbe
adc
insb
arpl
fldenv
clc
jmp
and
inc
add
stc
sub
adc
lock
mov
cmp
loop
out
pop
lret
cmp
sub
mov
repnz
packuswb
pop
les
xchg
mov
sti
xchg
add
dec
es
xor
out
mov
sahf
mov
sahf
das
pop
arpl
xchg
loopne
fs
pop
enter
sub
dec
jge
ret
imul
mov
loopne
flds
arpl
jp
les
sub
mov
push
lret
cmp
mov
scas
js
jno
and
inc
sbb
mov
dec
inc
push
sub
pop
push
icebp
push
sub
daa
or
scas
jae
sti
outsl
dec
jecxz
ret
xor
es
gs
ret
or
sbb
mov
cs
imul
xchg
call
sub
loope
pop
inc
xor
ficomps
sub
and
sbb
fmul
int
out
stos
scas
xchg
push
aam
mov
out
pop
xor
lods
mov
addr16
shrl
pop
les
push
pushf
or
adc
sahf
push
sbb
int
test
scas
imul
je
stos
mov
xor
scas
sarl
dec
dec
sbb
shrb
inc
mov
test
int
pop
mov
dec
sbb
loopne
inc
subb
mov
cmp
sbb
mov
mov
sub
sbb
sarl
adc
gs
mov
insb
and
hlt
xor
push
cmp
imul
dec
in
ret
popf
int
gs
pushf
test
inc
dec
les
or
mov
sbb
jne
push
inc
out
dec
add
jmp
shl
sbb
sub
fnstcw
pusha
inc
mov
add
bound
jo
lds
lret
popa
dec
in
xor
jge
js
scas
jne
adc
stos
push
scas
stc
xchg
pop
mov
and
adc
inc
pop
cmc
es
xor
in
or
imul
js
rcrb
dec
jmp
orb
jp
insl
jmp
cmp
cmp
jle
fmull
xor
push
inc
push
lods
repnz
movsl
adc
movswl
and
xrelease
lahf
lock
xorl
sub
jp
pop
cmp
out
push
mov
xor
cmpsb
add
subb
push
push
xchg
scas
and
sbbb
cltd
scas
sub
adc
push
sbb
cmp
shll
ficoms
ror
pop
outsb
data16
addr16
xor
or
popf
test
loopne
and
cli
push
mov
or
jno
adc
pushf
jl
and
jno
mov
mov
xchg
dec
sbb
inc
pop
nop
and
pop
out
sub
or
aas
pop
or
mov
inc
mov
fistps
sbb
push
mov
push
inc
or
scas
test
sub
adc
je
sbb
xlat
lret
sub
add
insl
outsb
cmp
movsl
add
xor
inc
pop
jbe
les
xchg
hlt
lods
negb
dec
stos
inc
and
movsb
data16
cmp
mov
in
fs
int
pop
orb
test
mov
sub
outsb
pop
jg
fwait
out
scas
jmp
cmpsb
inc
xchg
sahf
cmpsb
pop
addb
mov
cld
movsb
xlat
xchg
cmp
cmpsb
fdivs
je
scas
pop
adc
pusha
sub
inc
mov
jnp
shll
sbb
cmp
ret
mov
jge
div
adc
xor
cmpsb
outsb
ljmp
and
es
inc
adc
cmpsb
pop
sub
jns
jmp
xor
sbb
fld
xor
je
sarl
xor
add
mov
repz
cmpsb
out
cltd
aad
das
push
mov
adc
pop
jne
aam
xchg
sbb
stc
jge
fldt
rcll
jns
mov
xor
repz
test
into
xchg
icebp
imul
adc
add
fdivr
insl
insl
mov
adc
sub
stc
cmpsl
jns
ljmp
xlat
int
xor
mov
sub
cmp
mov
out
ljmp
mov
sbb
lret
inc
fidivrl
pop
and
inc
in
sahf
add
push
popf
imul
inc
iret
adc
push
and
jl
mov
sbb
pop
sub
cmpsl
dec
inc
push
jle
jg
data16
daa
rolb
lcall
mov
sub
in
mov
xor
cmpsb
pop
mov
dec
sub
lods
xchg
int
je
xor
rolb
in
out
aas
push
imul
sub
test
jle
xchg
pop
mov
out
mov
and
lret
jecxz
cmp
and
enter
inc
loop
lcall
and
insl
jnp
addb
cmp
fstl
mov
fdivs
mov
adc
mov
cld
xor
inc
inc
neg
pop
sbb
jp
sbb
mov
stos
adc
into
rorb
lods
aas
mov
push
push
push
adc
repnz
rolb
lea
daa
adc
scas
or
insb
fcoml
cmp
lea
push
push
pop
adc
xor
sbb
lds
sub
adc
pop
xchg
sub
push
sbb
jno
scas
mov
xor
rcl
notb
mov
push
pop
mov
sub
dec
frstor
roll
inc
push
mov
pop
push
movsl
push
mov
sub
int3
dec
mov
and
mov
dec
repz
bound
lock
std
fstps
nop
popf
add
in
adc
pop
roll
das
inc
daa
aas
or
lret
bound
sub
std
pop
pop
jnp
and
popf
mov
or
jecxz
sub
pop
cmp
gs
imull
inc
cmpsl
inc
fisubs
arpl
sub
adc
mov
scas
ds
sahf
sub
push
test
push
pop
sbb
mov
mov
adc
add
ficompl
xchg
leave
sbb
stos
inc
xchg
inc
jmp
jge
inc
stc
dec
dec
or
repnz
lds
lcall
push
test
xchg
pop
subl
cwtl
sub
pop
mov
fscale
and
stos
sarl
lret
test
lret
dec
jle
dec
xor
daa
shlb
das
push
inc
add
mov
sub
aam
rcll
xor
jnp
fistpl
xorb
inc
test
int3
hlt
push
jl
fidivl
ja
dec
movsl
dec
mov
push
imul
mov
add
test
dec
daa
jo
mov
mov
sub
jnp
sbb
lods
xor
lret
sbb
insl
sbb
xor
adc
popa
lret
daa
sub
mov
ficoml
and
orb
pop
icebp
xorl
fdivrs
adc
inc
mov
aad
cmpsb
cmp
in
subb
or
jbe
add
jg
ret
fcmove
xchg
push
push
jmp
mov
loopne
jno
adc
lret
rcll
sbb
and
into
cmc
mov
je
mov
add
mov
popf
pushf
mov
or
mov
or
jecxz
popa
les
mov
push
push
jo
in
sub
in
dec
sbb
lea
testb
fistpl
cwtl
mov
ret
mov
push
mov
test
mov
xor
fwait
aaa
push
sbb
jno
cwtl
xor
insl
or
and
out
push
sub
push
fnsave
mov
cmp
jne
mov
jg
push
test
adc
xchg
xchg
test
lock
lds
add
imul
pusha
addr16
int3
mov
aad
scas
sbb
pop
sbb
mov
in
or
push
repnz
sti
js
sti
cwtl
push
xor
mov
push
fs
and
xchg
outsl
rcrb
jbe
jle
xchg
into
pusha
mov
shlb
mov
aaa
cs
mov
push
dec
sbb
std
lds
mov
shrl
and
inc
jp
sti
xor
push
push
mov
xchg
lcall
push
daa
nop
sub
lahf
mov
xor
dec
push
dec
ret
sbb
mov
xchg
xchg
mov
mul
scas
lds
repnz
es
popf
adc
xchg
daa
xchg
jecxz
rcrl
into
pop
aam
and
cld
inc
test
cmc
adc
cmovbe
or
mov
xor
sbb
cmp
daa
xor
stos
jg
mov
enter
cmp
sti
dec
and
sti
lods
out
pushf
popf
stos
scas
cmpsb
lcall
in
inc
mov
mov
or
add
enter
insl
dec
loopne
pop
mov
sub
mov
xor
leave
adc
jle
aaa
adc
fildl
jbe
mov
push
sub
sbb
xor
inc
xchg
or
lahf
dec
lds
fs
fdiv
jg
xchg
lods
xchg
cli
xchg
lcall
xor
push
ljmp
mov
and
cltd
in
cmp
mov
minps
xchg
jmp
mov
push
push
jp
jnp
inc
pop
jmp
xchg
adc
stc
adc
cmp
inc
shll
dec
cltd
mov
or
mov
mov
mov
mov
jle
add
mov
mov
sub
cmp
cld
push
ret
push
scas
insl
es
mov
jb
aad
push
fs
scas
cmp
les
dec
dec
push
add
in
fldcw
daa
lods
movsl
nop
add
inc
pop
add
add
push
ficompl
leave
mov
ds
clc
roll
ret
mov
stos
inc
lea
and
aad
jl
in
cmp
dec
sbb
test
das
jmp
mov
stos
out
fsubrl
outsl
shrb
cmc
jecxz
rcl
xchg
add
add
test
and
sbb
xor
test
icebp
in
cmp
pop
pop
adc
mov
mov
outsb
sti
add
repz
pop
cmp
daa
cmp
dec
adc
mov
cwtl
push
ljmp
xlat
inc
scas
cmp
orb
ds
jecxz
pop
mov
cmp
inc
subl
sbb
or
stos
adc
aam
pusha
cmp
mov
mov
andl
cmp
cltd
pop
cmp
ret
push
push
jge
mov
xchg
dec
mov
sub
in
sti
adc
les
popa
mov
out
push
mov
scas
and
nop
inc
jae
fbstp
int3
hlt
loope
out
mov
out
dec
mov
xchg
add
insb
sahf
add
mov
aas
data16
leave
dec
bound
sub
mov
pushf
outsb
inc
mov
ror
adc
int
push
insl
xlat
loop
sub
xchg
ret
test
pop
lret
insb
add
mov
lahf
mov
sub
enter
out
lds
ret
dec
lret
rcpps
lods
popa
mov
sti
xchg
or
xorl
cmp
jbe
outsb
shll
ret
rorl
sub
or
jge
adc
or
pop
ss
xchg
femms
push
jl
mov
xchg
dec
xchg
add
or
out
push
add
movsb
pop
aam
ret
mov
stos
cmpsb
add
or
fisubs
rcrb
and
subb
mov
subb
cmc
lret
jo
shl
cmp
jo
cmc
xor
mov
jecxz
cltd
pop
xchg
jne
push
adcl
pushf
sbb
bswap
subl
ret
mov
in
mov
frstor
pop
or
roll
xor
outsb
out
push
push
std
inc
outsb
inc
repz
push
lea
sbb
pop
pushf
mov
in
dec
adcb
adcb
jle
inc
cs
mov
pop
dec
mov
adc
ljmp
xor
andb
aas
dec
mov
int
cmp
add
in
daa
mov
jmp
shlb
mov
pop
pop
jecxz
mov
ljmp
xchg
push
inc
loop
cmp
in
add
insl
jo
add
jb
sbb
rorl
cmp
xor
into
mov
or
xor
fs
xor
incb
sbbl
push
testl
jmp
inc
mov
daa
pop
cs
mov
cwtl
sub
pop
push
jmp
sbb
jne
dec
rolb
jno
ljmp
cwtl
adc
sbbb
xor
jmp
repz
out
loope
xor
negl
lods
jb
cmpsl
in
pop
inc
and
and
mov
aaa
mov
notl
loope
lahf
lret
sub
xchg
push
jmp
outsb
add
or
insb
push
jne
aaa
push
cmp
xchg
mov
lods
mov
cltd
mov
xlat
cmp
mov
sbb
lock
sbb
mov
sbb
gs
xchg
mov
hlt
sub
ficompl
pusha
xor
ds
nop
mov
stos
mov
mov
lea
xor
jnp
cmp
adc
fidivl
xor
xchg
inc
in
sub
in
es
in
leave
push
adc
shl
mov
scas
nop
jo
ja
loop
mov
shll
and
fsubrs
bound
pop
push
sub
sub
sti
or
aam
ljmp
mov
loop
add
clc
pop
in
js
mov
push
and
ljmp
and
shll
jbe
cmpsl
scas
jle
sub
fwait
test
cmp
js
add
xlat
xor
aas
sbbl
mov
push
popf
stos
mov
aam
loopnew
xor
xchg
aaa
jp
fs
hlt
sbbb
adc
fxam
xor
enter
sahf
add
outsl
cmpsl
mov
jmp
cli
in
xrelease
leave
cmp
jns
pop
mov
push
lds
pop
into
sub
cmp
dec
xchg
js
insb
adc
les
loope
mov
lcall
or
inc
xor
pop
js
stos
loop
aad
fstp
pushf
in
mov
xor
dec
mov
aad
gs
and
out
adc
ds
push
nop
push
mov
jae
mov
xor
cmpsb
fistl
push
in
dec
lcall
or
mov
and
lock
xchg
fsubrs
push
inc
popf
or
pop
adc
xchg
sbb
pushf
out
or
sub
loopne
mov
xor
fisubl
pop
jmp
lret
cmp
mov
add
inc
rorb
outsl
pop
sub
sub
cmp
movsl
pop
outsl
jle
push
popf
cli
pop
mov
sbb
clc
rclb
pusha
dec
jmp
mov
hlt
xor
aas
pop
adc
pop
cmpsl
imul
xor
cmp
add
sbbl
cmpsb
adc
std
jl
int3
shll
inc
and
push
loope
sub
add
imul
cli
sub
int
pop
pushf
test
mov
and
jne
mov
mov
cld
cmp
sub
xchg
cmc
mov
out
sub
mov
mov
or
aam
pop
push
inc
adc
shlb
insl
pop
sbb
xchg
xchg
cld
sbb
xchg
ljmpw
sbb
lret
mov
push
sbbl
aas
loopne
out
xorl
aad
jno
jle
xchg
or
mov
push
mov
jecxz
or
push
popf
dec
push
inc
cltd
dec
or
mov
das
test
lretw
pop
pop
cld
imulb
or
clc
push
addl
inc
dec
clc
add
fstpt
push
or
or
jbe
pop
xchg
adc
xchg
mov
sbb
aaa
inc
cli
and
pop
sbb
pop
xor
inc
xor
es
pusha
out
adc
push
out
imul
pushf
in
xchg
sbb
xchg
outsl
cld
or
sbbl
pop
inc
xchg
mov
cmp
sbb
aaa
add
push
pusha
pop
cmp
mov
push
jno
xchg
fdivrs
daa
add
dec
in
mov
out
mov
add
add
push
cmp
xchg
cmpsb
ss
je
call
daa
in
loopne
mov
dec
pusha
mov
mov
lret
push
cli
out
in
or
inc
ss
clc
ror
insl
inc
daa
push
push
add
mov
les
dec
mov
jp
pop
nop
inc
je
adc
mov
cmp
dec
pushf
jp
sub
int3
push
std
imul
inc
test
rolb
push
inc
sbb
rorl
ret
jecxz
jle
sbb
mov
inc
xchg
aaa
insl
pushf
sti
and
jl
test
jmp
into
xor
nop
and
mov
inc
ud2
sub
or
mov
repz
add
sbb
cmp
cmp
pop
int
out
mov
sbb
dec
cmp
sbb
jb
push
lods
mov
lods
push
roll
sub
push
mov
adc
insl
nop
jmp
cmp
movsl
fucomi
inc
je
mov
ret
shlb
xor
loopne
test
stos
push
sarl
and
or
mov
shlb
lahf
inc
ds
mov
sbb
jo
or
fisubrs
ficompl
xor
jmp
push
lods
inc
dec
cld
sub
popa
lods
mov
sub
mov
fsubp
mov
jmp
push
ja
jecxz
cld
jo
mov
add
mov
push
mov
nop
insb
mov
hlt
fwait
push
and
gs
mov
fwait
incl
iret
xor
xchg
push
dec
push
pop
inc
ss
repnz
fistps
mov
sub
xchg
scas
iret
jp
mov
lea
loop
bound
cmp
xlat
inc
sbb
ds
bound
lcall
xchg
jne
sub
lea
aam
sbb
mov
out
js
or
sbb
xchg
sub
push
sti
sub
ss
or
mov
enter
stos
sub
stos
shr
in
push
xor
mov
aad
xchg
jns
rorb
movsl
sub
pusha
lret
push
mov
ss
jl
dec
imul
enter
jnp
dec
jp
mov
xchg
pop
cmpsb
cs
inc
jecxz
sbb
sub
out
scas
leave
enter
cli
sbb
push
mov
push
stos
cmp
xchg
jb
repnz
dec
mov
adc
sbb
mov
adc
xchg
addr16
aaa
mov
inc
jne
aam
xor
push
fs
xchg
jns
mov
push
mov
mov
ficoms
mov
scas
jg
jmp
fs
jns
scas
mov
addb
pop
and
outsb
mov
ret
pop
jge
loopne
dec
dec
cmc
push
mov
lock
xor
mov
xchg
popf
and
xor
dec
mov
int
dec
div
in
shrl
loope
dec
inc
inc
scas
pop
outsl
xchg
pmulhuw
jg
bound
pop
jle
xor
push
lods
es
lcall
stos
movsb
stos
pop
mov
mov
push
call
adc
inc
addr16
mov
or
sub
push
xor
dec
inc
adc
imul
in
pop
pop
sbb
sub
pop
sub
aad
ljmp
xchg
aaa
test
pushf
hlt
loopne
out
cmpsb
cmp
push
or
inc
pop
push
sbb
sub
je
inc
data16
test
mov
insl
in
mov
mov
xor
sti
ret
insl
dec
jl
dec
test
rcr
and
and
add
lock
xor
adc
enter
shl
inc
mov
jae
idivb
dec
cwtl
cmpsl
cmp
cmpsl
sub
jo
or
leave
sti
xchg
mov
push
nop
and
mov
rol
adc
shrb
jb
sub
pop
sub
repnz
ja
sub
jne
dec
lcall
repnz
or
repnz
xchg
fnstsw
push
xor
loop
xchg
dec
push
inc
adc
push
dec
adcl
and
mov
lods
jns
mov
jbe
push
sub
out
dec
fisubl
mov
sub
loop
iret
aaa
js
pop
jg
push
jne
into
pop
push
or
cmp
mov
pusha
xchg
loopne
ljmp
dec
sub
into
mov
push
and
inc
aaa
xchg
nop
xor
das
jb
sbb
cmp
mov
cmp
inc
mov
dec
add
jle
test
jo
inc
sbb
push
sub
inc
shlb
in
dec
repnz
and
cmpsb
int
and
cld
sbb
lret
mov
clc
fmulp
and
int3
or
pop
in
push
je
ds
and
fcomps
or
inc
loop,pn
fst
mov
rorb
adc
sti
jo
push
mov
fmuls
test
pusha
cs
xchg
test
mov
sahf
les
stos
loop
sbb
mov
cmp
and
es
lods
jns
and
and
sahf
mov
insl
mov
jl
dec
sub
lahf
add
mov
loop
push
mov
jp
addr16
flds
inc
insb
mov
inc
out
mov
inc
loopne
mov
shll
mov
out
xor
xchg
dec
lcall
xchg
lock
cli
andb
sub
shll
mov
jb
sub
pop
sub
mov
in
movsb
jno
or
stc
xor
and
aad
mov
or
sub
cwtl
cmp
scas
daa
jle
stos
sbb
fstpl
cmpsl
inc
outsl
js
sbb
add
mov
sub
in
mov
jnp
in
aaa
cmp
mov
add
pusha
push
sbb
divb
out
add
mov
pop
jns
ljmp
push
mov
mov
cltd
in
aam
xor
or
pop
pop
inc
mov
imul
mov
rcr
cmp
test
push
jo
xchg
je
xchg
hlt
cmp
inc
cmp
clc
mov
rorb
add
xlat
lret
leave
add
das
and
pop
popa
jge
mov
sbb
in
jno
adc
daa
repz
mov
fdivrp
xor
and
sub
insl
mov
addr16
jns
pop
add
enter
push
push
push
je
add
clc
aaa
sar
inc
icebp
das
pop
inc
iret
enter
popa
pop
scas
jnp
adc
sub
xor
pop
loop
xor
jnp
sub
fistpll
mov
cmp
jp
xchg
clc
shlb
add
jns
data16
in
push
pop
xor
inc
ficoml
pop
test
mov
test
aam
into
mov
cltd
sub
ss
sub
mov
pop
add
aad
cmp
or
fcomi
cltd
std
add
dec
rcrl
inc
and
add
sub
pop
jmp
cmp
adc
aas
push
jecxz
cmp
mov
xchg
sbb
inc
push
fisubrl
lcall
js
popa
mov
filds
leave
je
pop
in
pop
les
jp
push
sbb
jbe
imul
sbb
pop
lods
sbb
adc
rcr
cmpsb
aas
hlt
rorb
add
xchg
bswap
or
mov
popa
mov
rcr
and
cld
hlt
sbb
clc
movsb
out
cwtl
aam
data16
or
xor
in
cmpsb
insb
into
jnp
pcmpgtb
jl
aaa
nop
jns
nop
dec
lahf
out
clc
add
mov
mov
sbb
pop
pusha
or
lods
xor
out
mov
lods
mov
sbb
mov
mov
loopne
pop
mov
mov
jg
aas
xchg
push
ret
out
xor
pop
sbb
out
dec
push
sub
gs
fsts
fbstp
inc
sub
adc
push
mov
jo
loope
mov
jo
pusha
stos
or
scas
lods
cmpl
movsl
lret
push
cwtl
mov
in
pop
repz
addr16
mov
lahf
inc
out
pop
sahf
iret
mov
adc
jae
insl
xor
push
mov
jp
test
mov
jg
shrl
pop
sbb
mov
push
jmp
leave
push
or
xchg
pop
cli
aas
aam
pop
pop
aam
rcrb
call
add
mov
xchg
jo
mov
shll
mov
pop
sbb
ja
scas
xor
push
ss
flds
clc
lret
pop
adc
and
outsl
aas
aas
enter
roll
stos
xor
cmp
xchg
sbb
das
in
xchg
lods
test
or
and
jg
sbb
shufps
inc
mov
out
sub
movsl
xor
push
sbb
dec
out
mov
outsb
mov
int3
inc
imul
sbb
adc
call
stos
cs
mov
add
jae
mov
jle
xchg
mov
jb
mov
pushl
insb
xchg
inc
dec
mull
icebp
mov
dec
jo
add
call
and
out
pop
sti
lcall
test
sahf
popf
cmp
and
jg
bound
xchg
loop
movsb
sub
hlt
sbb
insl
push
xor
lret
gs
mov
mov
stc
lcall
mov
adc
pop
jge
xchg
jge
dec
sbb
into
cmp
add
sub
add
add
inc
iret
test
inc
mov
xchg
cmp
dec
xor
test
dec
sti
pop
out
loop
fstp
movsb
psubsb
dec
movsb
in
arpl
aad
inc
jnp
cwtl
arpl
popf
test
mov
xor
inc
mov
add
out
pop
mov
inc
rcll
loopne
mov
and
imul
fldt
popf
mov
mov
repz
repnz
and
jno
loop
jp
stos
push
add
mov
jo
adc
stos
stos
xchg
ja
adc
jl
jmp
and
mov
rclb
jbe
adc
mov
add
or
and
push
stos
repz
rcrl
cmp
push
js
sbb
add
or
stc
mov
jg
mov
mov
cmp
and
mov
cmp
mov
rol
int3
and
mov
inc
cmp
ds
mov
sbb
repz
pusha
aad
stc
jno
ja
fistpll
imul
jns
jg
cld
out
std
jne
mov
insb
jmp
adc
xor
mov
int3
xor
lds
inc
nop
and
scas
cmpsb
pop
movlps
xchg
sbb
mov
jbe
cltd
dec
sub
mov
push
mov
mov
sbb
aam
mov
leave
mov
mov
lea
adc
sub
jo
lahf
sbb
sbb
mov
fbld
cmpb
adc
jo
dec
in
and
mov
mov
cmp
push
out
test
xchg
iret
decl
addr16
mov
cwtl
push
push
add
lret
adc
movsl
mov
insb
cmp
cmp
jl
or
and
jae
mov
mov
sub
and
outsl
push
add
push
arpl
push
lea
add
sbb
sub
xchg
mov
ja
inc
loopne
push
sub
outsb
in
add
mov
rolb
xor
jge
sub
sahf
push
push
loope
ficoms
je
sbb
jb
add
xchg
xchg
add
jg
andl
cmp
insl
dec
adc
jnp
jmp
push
sbb
jae
pop
in
push
xor
ret
mov
in
or
enter
add
jmp
in
xchg
jno
in
sub
sub
jl
adc
iret
dec
mov
cltd
out
jle
lods
rcrb
mov
mov
or
add
lcall
and
orb
push
push
dec
xor
xchg
mov
add
jecxz
int
push
cltd
mov
inc
sbb
rcrl
out
sbb
jl
xchg
add
mov
je
jnp
lea
pop
lds
gs
pop
and
sub
sahf
lods
xor
jne
mov
or
jg
add
scas
jne
push
pop
sahf
aas
pushf
mov
int
sbb
shrb
outsb
push
mov
aad
lahf
mov
jb
xchg
fisubrl
popa
jge
push
icebp
push
or
jno
pop
inc
mov
add
mov
xor
or
ret
pop
and
fs
jp
arpl
inc
pop
std
push
xor
add
push
mov
lods
jb
push
mov
fcmovnbe
mov
mov
popa
dec
sub
sub
xor
mov
sub
stos
mov
pop
xor
sahf
pop
notb
add
and
push
sbb
outsb
mov
icebp
xor
mov
shll
add
mov
idivl
insl
xchg
dec
rolb
outsb
nop
sbb
call
xchg
mov
add
jns
rcrb
mov
imul
pop
aad
movsb
or
jecxz
adc
cmp
scas
cmp
int
sub
pop
imul
jge
pop
inc
inc
dec
xor
xor
je
bound
push
sbb
fcoms
aad
jo
call
sbb
loopne
jbe
xor
aas
movb
mov
sbb
outsl
xchg
dec
jp
popa
out
lahf
or
xor
add
inc
cmp
lret
ja
mov
xchg
xchg
mov
ret
enter
imul
jnp
cli
movsb
pop
pop
rorb
xchg
mov
loopne
lcall
dec
ret
dec
in
jp
cmp
push
push
xor
jecxz
lods
mov
cli
inc
lds
xchg
decb
sub
pop
mov
sub
rol
jae
addr16
mov
jle
enter
sbb
pop
xor
xlat
jecxz
cmc
divl
push
xchg
fmuls
adc
shrl
sti
dec
and
or
cmp
in
push
mov
sbb
outsl
cmpsl
xlat
xchg
mov
xchg
adc
popf
shll
cmpsl
xchg
push
int
cmpsl
mov
cmp
test
push
rcll
cmp
inc
xor
outsl
xor
fwait
notb
imul
push
lock
fmuls
cld
test
cmc
testb
add
pop
inc
popa
lcall
rclb
xchg
sub
popa
dec
cmpl
add
and
je
inc
push
push
jl
inc
hlt
mov
stc
data16
push
xor
sahf
mov
jne
popf
sbb
rcrb
arpl
adc
pop
stc
inc
push
add
imul
xor
mov
jno
aas
cmp
and
aas
je
out
add
ljmp
mov
push
stos
aam
mov
adc
mov
cs
and
sbb
pop
pop
xchg
add
decb
jl
lahf
mov
shr
dec
pop
stos
frstor
inc
jle
cli
mov
sbb
add
push
es
ffree
inc
xor
hlt
mov
stos
dec
jb
add
pop
fsubp
xchg
or
out
repnz
push
add
jae
mov
cs
dec
sbb
sub
inc
mov
add
adc
xor
cmp
mov
mov
sbb
sbb
dec
hlt
packssdw
pop
repz
inc
repnz
aam
arpl
and
push
cltd
cltd
cmpsl
adc
mov
pushf
or
aaa
dec
andb
pop
inc
push
testl
stc
xchg
xlat
or
inc
fmuls
sti
stc
push
fs
imul
push
enter
ss
mov
push
sub
push
mov
inc
xor
aaa
inc
pop
dec
outsl
xchg
sbbb
push
xor
sub
test
stc
and
rol
push
aas
in
divb
mov
pop
ror
inc
inc
enter
data16
movsl
inc
dec
dec
inc
lods
in
add
jbe
jle
mov
daa
jns
mov
push
leave
jno
sbb
cmpsb
ljmp
sub
into
jmp
add
or
sbb
dec
pop
push
testl
push
mov
nop
push
mov
cmp
pop
cltd
or
fisttpll
xor
je,pt
ss
push
loop
sbb
xchg
mov
or
adcl
push
and
adc
pop
mov
push
lods
add
fildl
cmp
int
hlt
push
lahf
fcmovnb
mov
jb
scas
aad
scas
out
jb
test
outsl
ja
shrl
testl
cld
pop
dec
adc
mov
jmp
shll
js
daa
outsb
cmp
jge
jmp
scas
mov
lock
ret
cmp
stc
jle
pop
xor
jbe
notl
mov
mov
dec
test
lods
mov
cmp
adc
dec
adc
fdivl
roll
insb
mov
jns
test
pop
stos
pop
push
ss
adc
out
push
pop
dec
pop
enter
sub
cs
cwtl
pop
or
mov
insb
sarb
or
in
js
insb
and
or
repz
cs
sub
jge
ror
js
shl
int3
into
jle
dec
ret
bound
nop
cmp
out
sbbb
pop
pop
lcall
jge
jle
mov
fdivs
ffreep
ss
les
pushf
in
fcompl
scas
xor
mov
imul
out
xchg
shr
mul
shl
call
repz
xor
lods
stos
outsl
jae
mov
cmp
push
pop
or
jno
fadds
mov
sub
jno
mov
jge
sahf
movsb
daa
push
movb
movsl
pop
and
fildl
jne
inc
hlt
pop
dec
inc
cs
lock
orl
fcoml
sar
or
jmp
cmp
jmp
cmp
ja
mov
aaa
js
repz
add
mov
xchg
int
add
jecxz
in
mov
ret
push
cltd
out
jge
mov
mov
insb
fldenv
mov
and
dec
sbb
inc
pop
or
sbbl
mov
dec
es
mov
or
mov
repz
xchg
scas
inc
aas
rolb
mov
into
repz
stos
stos
push
and
nop
add
pushf
sub
test
stos
add
cmp
lcall
mov
nop
mov
cmp
inc
shr
out
mov
mul
xchg
mov
xlat
int3
cltd
out
jo
inc
movsb
cmpsb
out
or
mov
cmp
test
add
jmp
sub
push
mov
insb
mov
inc
lahf
pop
or
jno
loope
movsb
jae
cmp
mov
mov
adc
insl
cli
gs
xchg
xchg
dec
out
rorb
jno
fsubl
pop
popa
sbb
inc
mov
outsb
addr16
mov
adc
cli
sub
data16
dec
mov
aam
adc
mov
pop
xor
sbb
xorl
inc
in
mov
or
lock
lret
xor
stos
push
ja
dec
std
sub
add
iret
lret
add
mov
mov
mov
pop
mov
sti
movsl
bound
ret
pop
roll
les
test
outsb
js
ljmp
in
xchg
bound
test
or
adc
xchg
or
repz
pop
and
cmp
jae
mov
lods
push
cmp
or
in
lock
jge
push
push
in
cmpsl
sub
daa
jnp
lcall
push
stc
insb
cld
popa
rcr
push
das
sbb
test
push
mov
daa
sub
das
popf
sub
jge
ljmp
cltd
movsb
push
sub
sbb
inc
idivb
sbb
mov
rorl
fdivrs
mov
inc
movsb
rclb
jmp
dec
je
insb
xchg
stc
cmp
mov
xor
adcl
aad
sarl
push
add
ljmp
sub
rorb
test
mov
fldl
daa
push
dec
imul
lods
pop
inc
insl
imul
push
push
lahf
pushf
pushf
sub
jl
gs
dec
adc
std
bound
pop
loop
repnz
ret
mov
jnp
cmp
or
or
push
sarl
rorl
xlat
cmp
es
mov
push
test
dec
fadds
ret
jg
pop
outsl
and
pop
outsb
addr16
cli
and
movsb
mov
cmp
outsl
in
jl
push
into
push
pop
mov
int
jg
xchg
xchg
cmp
ficomps
pop
test
pop
fnsave
cld
dec
mov
inc
sub
in
xor
or
xchg
test
sbb
jl
stos
mov
sub
insb
jg
mov
push
mov
inc
cmp
ret
sbbb
xor
push
pop
arpl
leave
or
sub
cmpsl
adc
shr
pop
jmp
sbb
cmp
lods
fstps
push
xchg
sbb
or
dec
sub
lea
mov
sbb
mov
cmp
dec
sbb
and
insl
repnz
out
xor
add
rcrl
add
insl
pop
push
sub
push
push
test
test
push
flds
mov
imul
lret
loopne
mov
icebp
jmp
in
mov
fisttps
cltd
pop
insb
idivl
adc
adc
imul
pop
sub
pop
das
sbb
jmp
pop
jecxz
mov
pop
mov
xchg
and
nop
sub
dec
xchg
mov
aad
or
hlt
iret
mov
dec
out
jnp
mov
movswl
and
xchg
adc
lock
cmp
pop
insl
sub
pop
and
divl
bound
shlb
fistpl
jno
pop
mov
sbb
inc
adc
cmc
cmc
sbb
mov
pop
fstl
sbb
repnz
cmp
pop
iret
push
dec
lods
test
fsubrs
mov
jg
inc
inc
es
loope
dec
push
aas
fstpl
int3
jmp
sbb
jp
je
xchg
add
xor
imul
jge
xorl
or
out
stos
jmp
dec
pop
mov
jae
inc
stos
rorb
or
mov
stc
mov
ret
xchg
ljmp
jg
repnz
imul
dec
jns
cmp
arpl
mov
sbb
cmp
sub
mov
es
or
movq
aaa
cmp
shll
rcll
mov
and
push
call
int3
pop
repz
testl
jo
xchg
or
out
mov
adc
inc
lret
sub
mov
inc
fisttpl
negl
push
pusha
fcmovne
mov
rcrb
jp
in
inc
imul
cmp
mov
repnz
rorl
adc
mov
mov
in
mov
sub
ss
addr16
int
ds
jo
xchg
mov
fwait
sbb
adc
jl
inc
out
adc
push
repz
mov
mov
pop
aaa
mov
jo
adc
aad
cmpsl
pushl
ds
stc
xor
movsb
push
jnp
inc
cwtl
shll
or
addr16
inc
jno
mov
ljmp
and
pop
jb
stos
mov
jmp
cltd
sbb
repnz
ljmp
test
push
movsl
pop
mov
mov
lret
pop
dec
jno
sub
pop
stos
dec
and
repnz
test
cmp
pop
ffreep
push
inc
sbb
dec
add
cmp
xor
leave
push
je
lea
mov
inc
inc
imul
xchg
pop
pop
icebp
or
in
fisubs
pop
mov
pop
lds
push
inc
inc
imul
stc
iret
jmp
aaa
jbe
roll
add
xchg
xchg
ss
dec
insb
loopne
scas
jb
mov
mov
loope
fcompl
or
push
pushl
jge
pop
jg
arpl
cmpsb
sub
adc
shlb
jo
aam
aad
fwait
cmp
fcmovbe
jecxz
cmp
adc
and
daa
jge
inc
mov
rol
sbb
mov
ret
pop
pop
pop
sahf
test
out
mov
daa
or
sub
imul
pop
push
push
xchg
push
xor
inc
enter
sub
xor
or
fs
test
iret
mov
test
je
ja
loope
jle
test
mov
xchg
call
js
loopne
arpl
sbb
out
fstps
pop
add
cld
mov
imul
daa
bound
setae
sbb
or
push
push
bound
aad
iret
repnz
sbb
iret
mov
or
aam
push
push
jg
xor
push
xchg
mov
test
jno
or
jnp
mov
in
outsl
and
mov
cli
xchg
das
scas
ljmp
pop
xor
push
sub
loope
lcall
jo
outsl
adc
cmp
xor
xor
std
mov
mov
pop
int3
sub
mov
mov
fsubrs
pop
push
ja
ds
pop
pop
cmp
inc
jbe
inc
ljmp
dec
pop
jb
shl
adc
push
ja
in
daa
ljmp
jbe
and
jmp
adc
push
push
mov
mov
mov
mov
jne
bound
xchg
lcall
pop
push
sbb
arpl
mov
mov
xchg
sub
push
inc
je
push
mov
adc
in
dec
push
cs
xor
sub
jg
jl
mov
movsl
push
rolb
mov
repz
add
and
sarb
repz
stc
pop
arpl
xchg
inc
cmpsl
inc
shll
or
jl
divb
adc
lock
add
adc
imul
lcall
or
inc
sti
enter
rorl
jle
pusha
sub
sub
sub
idivb
pop
and
fsubs
dec
inc
pop
addb
jnp
adc
mull
fdivr
lea
mov
and
fmull
lahf
add
ss
sub
fs
roll
inc
ficomps
fcomps
xchg
movsl
outsl
push
jmp
int3
movsl
mov
pushf
push
mov
ds
dec
or
ror
enter
rcll
inc
xor
sub
stc
in
dec
lea
outsl
insl
cmp
pop
std
mov
jno
cmp
test
xor
push
sbb
inc
fnclex
popf
mov
dec
jle
test
fiadds
push
fildll
xchg
dec
insb
xor
iret
inc
and
xchg
mov
dec
ret
sahf
sti
mov
cmp
inc
fwait
sub
mov
call
mov
xlat
fistl
cmpsb
idivb
and
lea
mov
adc
mov
xchg
add
jno
lock
insb
push
and
popf
dec
lock
call
push
cmp
xchg
sahf
dec
cmp
adc
rcrb
mov
loop
cmpsb
or
mov
sahf
jp
fnstenv
pushf
adc
jae
stos
push
jno
adc
adc
iret
push
push
lods
and
pop
fldl
fistps
xorl
xor
out
daa
mov
push
movsl
fistpll
and
mov
adc
pop
rcl
mov
je
and
inc
xchg
and
addl
xlat
jg
das
outsl
add
cmc
adc
push
jo
lcall
ds
cmp
jo
lcall
sahf
push
iret
movsl
movsl
adc
js
outsb
cli
add
lcall
jg
pop
icebp
test
test
add
out
push
mov
push
pop
je
or
or
push
jo
lcall
stos
jl
mov
dec
push
xchg
sub
insl
add
pop
shlb
jo
mov
aam
test
inc
popa
push
imul
sar
rcrb
cmpsl
inc
out
arpl
and
push
ljmp
mov
lret
jno
xchg
push
pop
mov
xor
aam
cmp
mov
int3
pop
rorl
jle
aaa
and
add
addb
hlt
test
or
repnz
or
insl
out
push
je
pop
jmp
scas
stos
std
mov
mov
gs
cltd
jno
lods
cmp
xlat
sub
inc
mov
repnz
cmp
sarl
xchg
lahf
pop
cmp
test
addr16
ds
repz
push
and
out
shrl
scas
sarb
movsb
inc
sbb
mov
in
xchg
test
xor
pop
fmull
dec
subb
loope
fcmovne
sub
clc
jge
pop
inc
cmp
call
fs
fldenv
setg
inc
push
loope
xchg
sahf
mov
dec
imul
cmp
scas
inc
and
iret
push
sbb
stos
jle
ljmp
out
js
insb
cmp
xor
xor
lret
call
leave
sbb
sbb
insb
jae
leave
fiaddl
fists
jmp
or
pop
mov
cmc
test
nop
test
pop
cld
stc
xchg
inc
pop
push
outsl
lds
cmp
sbb
pop
mov
pop
xor
clc
sahf
fisttps
test
jle
imull
inc
lcall
inc
jp
xor
or
jmp
roll
in
push
js
or
imulb
jb
inc
hlt
test
mov
loop
mov
inc
xchg
pop
mov
or
jne
ja
or
cmp
xlat
pop
fwait
lea
jno
adc
jmp
in
clc
mov
aas
fstpt
xchg
pop
xlat
lret
outsl
leave
gs
mov
push
dec
call
leave
lock
sbb
incl
ljmp
cmp
jbe
cwtl
mov
enter
out
xlat
ds
inc
idivb
push
lret
sbb
pop
out
cmp
xor
mov
push
pop
pop
xlat
mov
ret
mov
xchg
dec
push
cltd
fadd
mov
xchg
pop
push
fidivl
enter
leave
loop
in
movsl
add
cmp
lcall
stos
add
push
out
or
mov
movsb
insb
rorb
xchg
xchg
inc
jle
fidivs
cmp
mov
mov
shlb
push
sbb
lods
mov
mov
cltd
lods
mov
jp
int3
int3
decl
dec
sub
fs
dec
push
cmc
push
frstor
int
or
mov
in
or
clc
cmp
mov
pop
fisttps
pop
jbe
inc
pop
xchg
es
in
fbstp
mov
icebp
shll
mov
out
push
xor
mov
in
pop
mov
xchg
jl
xor
sbb
in
addr16
fdiv
imul
mov
jl
inc
xor
dec
jae
fwait
je
and
and
lods
rorb
nop
add
add
mov
fcomi
leave
adc
idiv
sub
stos
xchg
outsb
mov
add
in
xchg
sub
daa
jb
mov
sub
or
mov
mov
jno
clc
push
stos
movsl
scas
in
dec
sbb
cmp
dec
cmp
or
sub
int
xor
addr16
mov
lods
add
mov
jge
imul
jne
cmc
rcrb
xor
and
jae
insb
outsb
push
fwait
lods
inc
xor
shlb
fldcw
test
sub
fs
lods
ljmp
push
push
ffreep
enter
add
sahf
adc
jae
mov
dec
faddl
adc
cli
push
jbe
xor
aam
cmp
ljmp
mov
adc
notb
xor
call
mov
sub
mov
cmp
cmp
mov
and
fs
mov
dec
push
lds
jns
fsub
push
jno
aas
bound
sahf
je
sbb
add
test
and
and
dec
jmp
hlt
daa
jl
dec
push
dec
inc
das
fbld
into
fnstsw
push
gs
pop
rorl
sahf
int
mov
insb
fwait
or
pushf
je
dec
pop
stos
int
loope
loope
pushf
push
in
mov
push
xor
push
lock
adcl
mov
out
inc
movsl
xchg
std
pop
cmp
fdivrs
lods
hlt
xor
mov
push
dec
dec
imul
adc
mov
dec
sbbl
mov
addr16
jmp
lds
push
add
dec
rorb
add
pop
mov
sub
dec
push
rorl
inc
outsl
sub
mov
repz
pushf
jno
aas
int3
call
push
xorb
sub
pushf
xchg
cmp
test
enter
sub
or
loopne
push
rclb
loopne
mov
inc
scas
faddl
stos
sti
add
insl
leave
paddsw
in
fstpl
push
xor
movsb
dec
mov
ljmp
cli
fidivs
mov
pop
dec
sbb
xchg
aad
je
xchg
xchg
push
dec
and
mov
pop
push
mov
mov
and
sub
sbb
fcmovnbe
int
push
dec
rcr
imulb
and
add
lret
mov
cmpsl
addr16
adc
jp
dec
mov
pcmpgtd
jmp
mov
cltd
cmp
hlt
aaa
xchg
push
aas
int3
jge
test
leave
cmp
fsubl
sahf
imul
sar
js
test
adc
sub
pop
and
outsb
test
out
lret
xlat
xchg
mov
lea
cli
lahf
repnz
inc
icebp
fucomp
mov
xorb
ret
ret
mov
sub
xor
mov
xor
sti
xchg
les
dec
js
fs
cmp
mov
inc
sub
in
nop
pop
shl
push
decl
orb
cld
stos
inc
push
pushl
cmp
out
dec
push
test
out
call
xchg
lret
xchg
cli
mov
pop
jne
movsl
push
sub
and
lods
push
pop
xor
popa
xchg
push
icebp
xchg
loop
repz
jae
cmc
out
cltd
repnz
popf
xor
test
fmuls
int
mov
inc
and
aaa
ret
mov
clc
repz
mov
cwtl
int
lahf
push
mov
inc
je
xor
rcr
or
cmp
and
shl
ret
push
pop
pop
js
xchg
movsl
ljmp
sub
push
mov
and
and
sbb
sahf
stos
lods
xchg
mov
mov
push
pusha
les
popa
mov
fs
fwait
inc
icebp
jbe
cmpsb
sarl
add
lahf
scas
mov
dec
inc
subps
mov
mov
pop
mov
push
sarb
cltd
jle
in
arpl
ja
inc
and
test
xorb
jmp
jb
jo
cld
dec
mov
incl
dec
pop
je
add
xchg
in
push
dec
in
inc
mov
jg
jb
inc
testl
hlt
daa
adc
sbb
push
enter
and
js
dec
adc
adc
push
and
cmc
imul
sbb
mov
inc
movl
push
adc
fs
jae
mov
and
or
cmpsb
daa
shl
mov
xor
push
icebp
outsl
adc
mov
mov
lods
adc
addr16
xor
adc
lds
mov
adc
pop
mov
movsl
and
ds
push
sbb
aad
sbbb
lea
jae
adc
rep
call
push
icebp
lds
or
add
repz
sbb
enter
ja
in
sahf
iret
aad
push
fcmovnu
or
mov
lcall
dec
push
stos
rcrb
cmp
inc
into
fdivrl
xchg
rcrb
mov
ja
mov
pushf
test
pushf
pop
je
jecxz
hlt
divl
mov
xchg
pop
xchg
stc
aad
into
pop
cmp
fwait
push
aam
inc
lods
mov
in
adc
and
jns
stos
push
int
pop
jno
cmp
inc
enter
xchg
mov
int3
aad
arpl
pop
add
xchg
std
jl
cmp
mov
adc
jl
iret
mov
inc
xchg
inc
scas
inc
jmp
push
and
dec
xor
add
shr
idivl
pop
cmp
xor
test
xchg
daa
and
in
icebp
cltd
add
dec
xchg
cmp
clc
push
loopne
xlat
fstps
and
xor
jnp
flds
jecxz
inc
shrb
add
je
dec
pop
xor
stos
in
shrb
ret
pushf
arpl
scas
xchg
inc
xor
pop
mov
arpl
imul
mov
push
lahf
mov
xor
xor
popa
pop
pop
jmp
ret
fdivrl
jle
pop
sbb
push
mov
cld
sub
aam
aad
add
xor
mov
popf
lds
and
and
pop
dec
dec
hlt
cmp
scas
push
pop
or
push
lret
or
jle
insb
jne
inc
popa
nop
stos
shrl
pop
jnp
ficoml
xchg
xchg
imul
mov
cli
insl
mov
aaa
jmp
sbb
call
adc
enter
jg
ss
inc
push
xor
mov
xor
sub
leave
jge
or
mov
adc
popf
mov
jle
jmp
cmpsl
call
adc
jne
mov
push
ja
gs
mov
sbb
out
imul
rorl
sub
push
dec
mov
jmp
data16
xor
mov
nop
or
add
orl
xchg
sbbb
mov
inc
sbb
cltd
pop
fidivrs
aad
fimuls
popa
xlat
into
cli
sbb
push
sub
jb
sub
popf
cmc
push
xchg
arpl
jae
fs
inc
push
aad
inc
test
imul
sbb
cld
das
and
xchg
pop
arpl
jl
xchg
xchg
add
into
cmp
insb
mov
cltd
add
mov
nop
faddl
sbb
cmp
or
add
mov
std
jne,pn
push
test
shl
mov
cmpsb
int
cmp
mov
mov
js
aad
in
add
jnp
popf
cli
mov
inc
ficoms
ficompl
sbb
pop
outsb
mov
sub
out
fisttpll
and
xor
cmp
add
mov
in
mov
cltd
jnp
pop
sub
jg
mov
hlt
int
add
dec
push
stc
jg
pushf
pop
call
addr16
test
jmp
stos
punpckhwd
push
and
mov
push
fnclex
iret
or
inc
xchg
and
fnclex
xchg
arpl
repz
insb
repnz
inc
iret
pop
jb
sti
cmc
sbb
popf
cmpsb
adc
popf
pop
push
and
sbb
outsl
inc
pop
fwait
cltd
js
lahf
outsb
leave
or
add
pop
jp
idivb
in
insb
push
xor
popa
int3
rclb
push
cmp
pushf
inc
mov
arpl
imul
mov
jl
sahf
test
jo
pop
xchg
mov
je
bound
pop
lods
aaa
enter
push
and
cmp
sbb
movsl
loop
pop
sbb
mov
fmuls
xlat
shl
cmc
outsb
popa
out
cmpsb
xlat
fadds
cmpsb
pusha
call
push
dec
bound
push
push
mov
mov
sbb
sub
jnp
mov
out
cmc
fldt
pushf
xorl
xchg
pusha
fdivl
inc
dec
iret
pop
or
push
dec
add
add
pop
pop
push
mov
popf
xchg
mov
out
and
mov
fwait
repz
push
push
xchg
add
and
leave
fiaddl
fwait
inc
enter
dec
add
movl
call
cld
mov
fwait
inc
inc
idiv
popa
popl
and
jns
mov
mov
add
xchg
mov
enter
or
loopne
adc
dec
cmp
iret
movsl
test
xchg
mov
jmp
lahf
push
sbb
cmp
mov
orl
repz
or
xor
rcrb
fdivs
dec
or
push
popf
dec
ret
into
adc
das
mov
bts
lcall
lcall
jbe
adc
hlt
add
mov
fldl
ret
mov
test
and
loope
dec
push
notl
int3
iret
pop
pop
xor
sub
xchg
fstpt
xchg
inc
cld
movsl
in
xor
stc
mov
adc
dec
fnstenv
cs
insb
lahf
push
sub
or
pop
mov
jge
lret
fsubrs
imul
fcomip
stc
jo
sbb
cltd
jmp
jge
dec
rcrl
cmp
popf
jnp
inc
push
jp
fcmovb
mov
jge
mov
sub
sub
cmp
ds
jecxz
or
pop
dec
popf
negl
cli
std
test
aam
shlb
dec
inc
aam
jne
aad
ror
test
adc
xchg
and
loopne
mov
push
xchg
fisttpl
and
sub
subl
fstpl
adc
cmp
scas
add
aas
mov
aad
xor
cltd
lret
push
xlat
add
jmp
and
xchg
jnp
jae
mov
mov
addl
scas
dec
cmp
add
data16
rcll
mov
cmp
cwtl
pusha
pop
jb
push
dec
add
inc
push
ret
xchg
sub
push
cli
sbb
adc
push
sbb
lcall
gs
je
test
repz
sbb
fcomps
mov
loope
inc
aas
int3
adc
iret
mov
pop
xor
sub
mov
rcl
push
adc
popa
repz
icebp
enter
jg
adc
popa
sbb
jp
xchg
sub
jg
push
pop
dec
mov
arpl
fwait
adc
rorl
adcl
sbb
push
add
and
test
lods
jmp
cli
rclb
shll
in
and
and
sub
and
dec
xchg
sbb
arpl
mov
std
clc
mov
xor
dec
stc
dec
lea
adc
cmp
outsb
inc
fstl
scas
rcrb
mov
push
je
or
insb
mov
rcrl
jle
nop
fwait
add
pop
xchg
dec
dec
adc
in
nop
aaa
hlt
jp
pop
aad
nop
sub
outsb
jge
cmpsb
out
into
xchg
fwait
jle
xchg
dec
mov
popl
loop
jne
sti
test
jp
into
scas
dec
shll
addr16
iret
mov
add
loop
std
das
pop
dec
mov
dec
jbe
cs
leave
xlat
sub
add
dec
and
or
jecxz
sub
ljmp
mov
fucomi
jecxz
stc
jle
andl
call
js
test
adc
add
inc
cmp
pop
test
xchg
cmp
imul
xor
jae
mov
jmp
dec
divb
sar
lret
jg
mov
xchg
adc
xchg
xchg
hlt
mov
out
add
ja
icebp
fidivs
cmc
sub
mov
or
dec
xor
cmc
aas
or
adcl
imul
ret
lret
and
loope
cli
mov
inc
xor
mov
ja
inc
repz
xor
out
mov
add
loopne
hlt
push
xor
es
sub
jge
aas
xor
fmulp
push
in
aas
jns
mov
movsl
out
mov
adc
lock
ljmp
enter
or
mov
outsl
out
pop
leave
sub
sti
dec
lahf
adc
rorb
andb
in
xchg
negl
in
dec
push
test
jmp
mov
cs
xchg
mov
test
mov
insb
mov
and
push
sbb
inc
scas
add
xlat
push
mov
sbb
js
notl
gs
pop
loopne
xorl
xor
inc
int3
push
call
mov
dec
pminsw
jae
fdivrs
ljmpw
lods
test
jbe
insl
jecxz
int
push
sbb
testb
insb
fisubrl
or
lahf
inc
adc
or
repnz
pop
add
jmp
add
iret
out
int
lret
jae
daa
les
xchg
push
cmp
outsb
sahf
or
sub
pushf
ljmp
iret
push
push
push
mov
jae
lock
pop
aam
xor
inc
fstl
xchg
or
inc
jbe
movsb
mov
lret
mov
scas
out
or
mov
orl
rclb
fmull
mov
pop
push
xchg
cs
es
test
jo
cmp
sarb
push
sbb
out
out
add
cmpsb
ljmp
push
inc
out
xor
cltd
mov
xchg
lcall
push
pop
mov
arpl
cmp
and
int3
test
gs
leave
mov
and
and
mov
test
sarb
fwait
xchg
sub
xor
std
in
arpl
xchg
pop
fs
std
sti
sbb
jno
fstpt
and
in
lret
mov
fisubl
lock
mov
lea
fldt
pop
out
push
lea
push
add
xor
movsb
imul
cmp
mov
movsl
push
mov
nop
insl
roll
mov
fcomip
icebp
lods
aam
mov
jo
sbb
loopne
sub
mov
lods
jle
mov
lret
shll
jns
fs
mov
or
jmp
jns
mov
sub
inc
cmp
enter
test
lea
dec
andl
cmpsl
iret
push
xchg
loop
ret
insb
ret
pop
mov
scas
repz
push
int
std
ja
js
cmp
orl
adc
pop
insb
stos
mov
adc
bound
adc
or
push
xchg
pop
loopne
fs
scas
imul
mov
push
mov
mov
out
inc
push
mov
mov
inc
sub
jnp
mov
jmp
cmpsl
dec
lock
std
jbe
ret
push
mov
ja
sub
repz
dec
stos
dec
es
mov
xor
arpl
sub
cmpsb
pop
lea
xor
cmpsb
xor
pop
xchg
fsubl
je
mov
sar
inc
ja
sub
test
mov
mov
dec
mov
mov
popa
inc
sub
in
xchg
mov
sbb
xchg
jp
xor
in
mov
and
dec
loop
lahf
add
or
push
jmp
pop
fcoms
jecxz
das
out
int
fs
es
push
xchg
push
movsb
jns
cmp
lods
mov
mov
jae
and
stc
sub
jmp
push
pop
and
add
aas
sti
mov
xchg
inc
or
push
xchg
mov
mov
out
xor
fcmovu
push
aam
xor
sbb
or
or
mov
sahf
pop
imul
lcall
imulb
imul
sarl
nop
and
dec
inc
mov
jbe
pop
cmp
outsl
lahf
sbb
inc
sti
mov
addr16
add
in
daa
jmp
in
imul
addb
or
pop
outsb
aas
idiv
cmp
or
js
mov
loopne
jo
pop
in
nop
test
or
xor
mov
and
add
hlt
jne
push
fld
ret
daa
cmpsb
loopne
fs
mov
push
push
test
sbb
loope
jp
imul
sahf
lea
ss
test
cld
and
xchg
mov
xchg
inc
mov
adc
xchg
mov
add
jo
push
jecxz
dec
dec
or
int
jno
mov
sbb
sub
lea
push
pop
inc
hlt
pop
jae
sbb
push
and
xorl
adc
and
gs
cmpsl
outsb
jnp
jmp
inc
sbb
int
xchg
enter
nop
mov
or
sbb
divb
cli
loop
push
sub
mov
push
cwtl
add
jg
pop
aas
sbb
jecxz
divb
mov
rorb
inc
cmp
ds
scas
xchg
ljmp
test
stc
lods
dec
mov
jnp
jg
subb
sti
cmp
call
out
popa
mov
mov
or
mov
and
fcomip
dec
jge
adc
inc
aam
xor
adc
xchg
sarb
jno
sarl
mov
lds
aad
add
xor
aam
jl
jp
pop
push
cmp
lods
data16
movsl
jbe
popf
clc
adc
jmp
sarb
xchg
xchg
mov
testb
push
int
add
jne
out
bnd
push
ss
or
dec
mov
pop
push
sub
imul
mov
shr
out
aas
pop
mov
movsl
or
pop
pop
cmpsb
jg
je
out
lock
loopne
hlt
xor
push
shl
stos
mov
push
pusha
bnd
outsl
sbb
or
jle
sbb
push
xchg
stc
pop
shlb
sti
or
cmp
sub
cmp
insl
adc
pop
fsubrs
cli
fisubrs
nop
push
pop
rolb
stos
mov
inc
je
in
jmp
push
sbb
into
add
mov
insb
jg
mov
jb
jae
or
das
insl
gs
test
int
into
fidivrs
fstpt
mov
dec
hlt
mov
lods
jmp
cmc
pushf
pushl
or
repnz
mov
sbb
pushl
decb
cli
inc
and
js
in
loop
call
sahf
inc
jne
movsl
xor
stc
sub
inc
inc
stos
scas
jge
push
lock
mov
call
push
mov
movl
pop
sarl
cwtl
lahf
imul
inc
idivl
xchg
pop
mov
add
mov
pop
xor
mov
lock
or
push
popf
ljmp
iret
xor
seto
out
test
xchg
xchg
out
fstps
mov
rcl
inc
xchg
mov
pop
pop
sbb
sahf
popa
test
mov
enter
or
scas
ficoml
outsl
xchg
ljmp
xor
not
cmpsb
mov
mov
cld
pusha
insb
jle
int
push
push
aaa
imulb
mov
outsb
xchg
mov
movsb
lcall
dec
fs
fsubl
ficomps
repnz
shr
pop
negb
lods
stc
mull
or
push
inc
or
aam
insb
mov
insl
add
ffreep
fdivrp
pop
test
cmc
bound
test
cld
push
aas
jno
orl
sub
test
dec
inc
add
or
fldenv
int
in
dec
push
sbb
inc
push
enter
mov
int3
das
outsl
outsb
clc
andl
push
aas
xorl
fisttpl
popf
sbb
adc
lret
or
xchg
std
ret
sub
inc
pop
mov
pop
mov
xchg
add
out
xchg
movsl
out
or
ret
adc
inc
dec
or
sbb
out
pusha
xchg
jl
aad
stc
add
mov
pop
mov
xor
fbstp
inc
sbb
andl
arpl
pop
jle
fisttps
sarl
and
pop
inc
xchg
push
outsb
xor
fildl
dec
ljmp
adc
icebp
inc
pop
pop
pop
outsb
sbb
fidivrs
sub
adc
or
fcom
ret
arpl
jnp
cmp
xchg
jp
aad
stos
sub
lock
xchg
xchg
mov
cmp
lods
mov
xorps
outsl
out
cwtl
sub
jne
cmc
jo
mov
mov
imul
sub
xchg
in
mov
je
xchg
or
cmpsl
daa
sbb
pusha
mov
aaa
mov
xor
mov
mov
lea
xor
iret
call
jg
cmp
sub
lret
mov
mov
mov
outsb
out
xchg
jmp
fimuls
mov
push
addb
xlat
pop
dec
push
mov
mov
es
imul
xchg
xchg
and
lock
in
inc
mov
js
inc
fsts
xrelease
adc
andl
adc
cmovne
pop
mov
sbb
inc
loopne
push
repz
rolb
sbb
lds
add
jge
fiaddl
repnz
pop
cli
mov
ja
and
mov
jae
sub
fldenv
iret
push
inc
xor
notb
xor
push
or
xor
xor
mov
mov
cmp
mov
mov
sbb
arpl
and
ljmp
ds
lahf
aam
outsl
push
fcmovnu
mov
xor
jmp
inc
ljmp
addr16
mov
pop
sbb
xchg
out
repz
inc
aam
gs
mov
cmp
add
or
in
mov
filds
and
adc
popa
cmovb
test
sbb
sbb
mulb
into
jle
pop
aas
test
dec
sbb
sbb
gs
xchg
mov
clc
orl
push
fiadds
jmp
dec
mov
icebp
dec
hlt
mov
pusha
iret
mov
cmc
cwtl
inc
repnz
mov
in
jnp
fst
iret
push
popf
pop
push
imul
mov
mov
ret
nop
push
stos
xor
inc
xchg
sub
xlat
lock
fld
rol
scas
stos
inc
push
dec
movb
incb
sarb
xor
adc
jp
push
and
or
popf
cmp
xchg
jge
shl
sub
sub
nop
mov
mov
rorl
stos
arpl
lock
jns
mov
outsb
mov
lock
ret
xchg
or
and
js
push
fcmove
arpl
and
js
xor
dec
pushf
fisttpll
jno
adc
xchg
popf
ret
push
lods
cmc
popf
mov
add
stos
pop
mov
fsubrl
mov
loope
sub
push
and
jmp
inc
loope
sqrtps
dec
lea
jns
ret
pop
jae
lcall
ficomps
in
mov
mov
pushf
adcb
mov
je
ljmp
xchg
push
mov
lods
xor
sbb
pop
xor
loope
addr16
ss
ja
dec
sbb
rcll
stc
mov
lock
lods
push
mov
inc
testl
arpl
and
adc
cmp
arpl
and
dec
and
jmp
cmpsb
rcl
wrmsr
mov
dec
repz
xor
shrl
cmp
push
loop
mov
test
xchg
lds
push
call
push
pop
xchg
fwait
add
repz
fs
outsl
adc
jne
adc
call
sub
stos
inc
ss
sbb
and
ds
out
xor
arpl
push
cmp
inc
inc
in
sbbl
or
adc
enter
jnp
repnz
popf
rcrl
cltd
push
shr
jmp
mov
mov
sub
or
sbb
lahf
and
mov
adc
jae
push
adc
in
out
idivb
pop
push
sbb
iret
outsl
mov
es
inc
sbb
xchg
outsl
int3
out
in
sahf
rorb
and
dec
xchg
sbb
or
sbb
dec
mov
outsb
and
xor
lock
in
xor
mov
mov
mov
add
pop
mov
rclb
shrb
scas
imul
insl
cmp
add
addl
dec
xchg
pop
xlat
adc
inc
xchg
lds
loope
sbb
movsl
mov
mov
sbb
or
jmp
xchg
dec
xchg
cmpsl
mov
mov
gs
or
setge
call
cmpsl
dec
imul
dec
pop
mov
jns
jo
mov
xor
jl
or
jns
xchg
fcmove
jo
cmp
and
push
xchg
pop
push
pop
in
push
push
lret
sub
inc
pushf
sahf
jnp
cmc
xchg
notb
push
sbb
leave
dec
xor
sahf
shll
mov
xchg
inc
gs
xor
jg
sti
popa
roll
and
or
jns
rolb
pop
xor
out
repz
sbb
inc
popf
dec
fdivr
xchg
out
adc
xor
jno
outsl
cmp
dec
fstpl
int3
adc
mov
cli
addl
test
adc
mov
cmpxchg
test
call
adc
xlat
jg
outsb
repz
fsub
cmpsl
push
hlt
fdivp
cltd
adc
fiaddl
outsb
dec
int
inc
jnp
je
xlat
cmp
pop
ficoms
push
sbb
frstor
mov
jecxz
push
gs
mov
adc
inc
add
inc
pusha
jmp
ljmp
pop
fsubrl
fwait
inc
in
cld
or
outsb
das
sbb
jecxz
xchg
pop
fnsetpm(287
cmp
mov
pop
push
popa
cs
dec
in
je
popf
pop
sbb
popa
sub
movsb
shlb
pop
icebp
dec
lea
fidivl
mov
pushf
testl
dec
dec
sti
pop
popf
les
fwait
xor
xchg
ja
fst
je
mov
push
mov
xor
pop
adc
push
testb
xchg
out
mov
or
int
outsl
add
daa
addr16
adc
loopne
xchg
adc
je
testl
sub
aas
mov
pop
cltd
sbb
cmc
fwait
dec
das
movlps
lret
mov
inc
popa
push
pop
loopne
jbe
xor
mov
movsb
lds
clc
sbb
sti
ja
sub
inc
aad
inc
or
into
and
pop
xor
hlt
out
xchg
mov
sbb
nop
movsb
push
int3
shl
sbb
adcl
jp
jno
stos
in
lea
lahf
icebp
stos
in
outsb
or
int3
cld
mov
stos
pop
mov
aas
mov
lock
jbe
adc
decl
jge
in
das
mov
test
jg
popa
or
in
jmp
and
jl
mov
and
aaa
mov
mov
sub
int
inc
pop
push
add
xchg
inc
testl
shr
cli
adc
or
jle
frstpm(287
mov
push
insl
cmp
mov
outsl
lds
cmpsb
sahf
aas
dec
and
and
jle
adc
or
aad
xchg
add
inc
scas
inc
mov
xchg
dec
pop
dec
cli
cmp
es
lret
outsl
sbb
mov
sarb
or
std
mov
add
mov
mov
inc
push
shlb
mov
mov
clc
fsubp
int3
les
push
push
mov
mov
les
cmpsl
and
lret
mov
xor
cmpsb
repnz
cmpsl
int3
dec
cmp
inc
lds
cli
cltd
les
ja
inc
pop
jmp
rolb
test
cwtl
sbb
push
lods
test
xchg
cli
cmp
scas
and
les
pop
mov
std
or
xor
repz
add
aam
loop
adcb
mov
testb
faddl
arpl
xchg
add
lods
lea
cmp
in
mov
mov
inc
xchg
adc
dec
pop
dec
loopne
stos
aad
fbld
scas
fcoml
int3
dec
fmul
in
fldenv
lret
neg
push
xchg
rorb
sbbb
sbb
push
mov
into
imul
and
xchg
xchg
inc
in
jmp
pop
jmp
cmp
xlat
out
stos
inc
adc
ror
mov
xchg
pop
out
mov
insl
testl
sti
add
popf
mov
aaa
clc
xor
cltd
aam
jle
scas
and
pop
xchg
out
sahf
dec
inc
mov
dec
loop
cltd
mov
aas
or
mov
cmovns
mov
add
jecxz
int
pop
sbb
xlat
lahf
lods
rorb
mov
mov
inc
fsts
jo
sbb
fmul
enter
sub
repz
and
int
lahf
sahf
mov
out
int3
scas
lahf
sub
outsb
aam
xor
add
stos
out
fwait
cmpsl
iret
cltd
mov
in
pop
ds
xchg
orb
daa
clc
leave
cltd
adc
pop
loop
mov
aaa
push
pop
out
pop
dec
movntps
sbb
pcmpgtd
js
in
xchg
ret
xor
pop
xchg
fbstp
rolb
push
pushf
mov
xor
cs
jle
add
orl
mov
hlt
imul
insb
adc
iret
adc
mov
outsl
mov
mov
out
fidivrl
sahf
xchg
fsubrs
lahf
sub
xlat
xorb
int3
dec
and
out
xchg
out
movsb
rcrb
pop
lret
or
inc
mov
add
mov
sub
rorb
in
int3
xor
sub
mov
or
fwait
pop
in
enter
inc
daa
or
mov
mov
or
in
jne
mov
mov
in
cs
movsl
addr16
inc
movsb
dec
in
dec
hlt
xchg
or
adc
dec
sarb
sbb
lods
mov
subb
pop
xor
imul
or
cltd
shlb
pop
shll
mov
xor
mov
sbbl
jae
inc
xor
sbb
lret
stc
or
cld
mov
fcoms
or
ret
jle
mov
sti
push
mov
pop
sub
stos
mulb
jnp
jg
pop
lods
jne
gs
jmp
push
loopne
ljmp
cmp
cs
xchg
cmpsl
ret
adc
sub
test
pop
in
in
dec
mov
data16
jmp
out
fsubl
icebp
iret
push
dec
jnp
cltd
and
jne
adc
pop
xchg
mov
sbb
adc
movsb
mov
loope
mov
fistl
xchg
cmc
or
lock
sti
dec
sbb
clc
gs
mov
fidivrs
mov
or
jae
mov
int
cmp
mov
data16
clc
or
lock
cmp
cmpsb
pop
xor
inc
sbb
das
inc
and
cmpsb
lcall
push
inc
pop
movsl
push
lods
sbb
mov
adc
in
jecxz
xchg
stc
and
cli
jbe
adc
es
not
sti
out
ret
pop
repz
shl
je
push
out
mov
movsb
pop
orl
pop
lret
dec
fbld
cmp
mov
pop
mov
repnz
int3
stos
dec
push
ret
sarb
jmp
sub
popf
cli
fnstcw
mov
sbb
je
movsl
add
es
add
pop
imul
aas
xor
xor
les
or
popl
sub
inc
int3
scas
clc
clc
gs
add
inc
and
call
jecxz
cmpsb
push
sub
pop
adc
fwait
pop
rcrl
push
push
pop
lock
dec
lret
push
or
mov
jl
outsb
xchg
mov
push
and
sub
movsb
scas
fnstenv
lret
out
or
aam
push
lret
sub
outsb
inc
adc
sub
sub
out
sbbb
insb
pop
cmc
push
pop
stos
mov
les
mov
sub
fistps
clc
mov
jne
pop
in
mov
mov
sbb
push
out
xchg
lcall
in
jbe
adc
dec
sbb
icebp
nop
push
stc
cmpsl
out
jbe
mov
jno
pop
sar
xor
xlat
cmp
ret
das
mov
mov
xchg
in
jno
jmp
loop
outsl
mov
inc
xlat
mov
fimuls
imul
fdivr
std
mov
ljmp
idivb
int
cli
mov
xchg
pop
lret
fstpt
jg
add
lods
pop
movsb
push
push
mov
push
out
mov
adc
pop
add
mov
jg
subb
cwtl
or
push
mov
pop
test
andl
sub
jnp
lcall
or
jnp
es
ret
jb
std
xchg
mov
push
xor
ret
inc
push
inc
enter
dec
inc
imul
cltd
cld
and
xchg
sbb
adc
xor
lock
xor
sub
insl
fs
xchg
clc
xchg
xor
jle
pop
add
cmp
scas
or
pop
outsb
xchg
ja
rorl
push
lret
jmp
outsl
jle
iret
daa
leave
repnz
stos
adc
repnz
std
ficompl
shl
je
repz
hlt
loopne
lods
ljmp
cmpl
aam
xor
ljmp
cmp
lahf
and
popf
loopne
xchg
je
test
inc
mov
jmp
test
push
mov
mov
jne
fwait
into
sub
outsb
fmuls
mov
push
mov
pop
xor
pop
inc
fistl
jno
jnp
daa
popa
sbb
out
inc
cmp
add
sbb
mov
push
xchg
cmp
mov
cli
push
icebp
and
inc
and
jo
iret
sbb
sub
mov
mov
and
cs
jp
daa
inc
cmp
xchg
scas
ss
sub
enter
repz
je
pop
sub
ret
mov
daa
loop
rcl
mov
adc
cltd
and
add
dec
bound
jl
in
jmp
movsb
je
xchg
andb
loop
leave
pop
mov
mov
loopne
or
xchg
add
pop
in
jp
jnp
and
xchg
or
jmp
or
lods
out
cmp
mov
clc
scas
addr16
insb
mov
xchg
hlt
mov
pushf
inc
dec
les
or
lret
push
orb
stc
fstps
icebp
xchg
out
lahf
mov
add
sbbl
cmc
imulb
xchg
jno
dec
cmpsl
pushf
xchg
push
xchg
pop
fwait
adc
ret
aaa
shlb
outsl
push
push
adc
add
rol
adc
xor
sub
mov
cmpb
xor
das
sahf
xlat
loope
sahf
loopne
out
rorl
pop
pop
repz
mov
ftst
lds
jb
jne
sahf
jmp
dec
mov
pop
divb
clc
pushf
push
cmp
xor
and
repz
lcall
adc
out
or
mov
xchg
mov
inc
add
mov
and
addr16
and
mov
cmpsl
mov
shlb
dec
sub
or
int3
pop
daa
add
xor
daa
repnz
out
mov
stc
pop
shll
in
push
lret
mov
cltd
mov
rorb
adcl
jmp
ljmp
xor
daa
aaa
popf
xor
loope
fsubs
rolb
jae
cmp
jo
shrl
jbe
or
mov
in
jp
outsl
and
and
and
dec
add
test
mov
jl
mov
jnp
inc
inc
cs
jo
dec
and
xchg
aam
test
popa
jnp
and
sub
sbb
call
cmc
and
test
loopne
push
jmp
jbe
cmp
cmp
mov
imul
testl
lock
add
lock
push
data16
mov
xchg
enter
dec
and
rcl
cmc
mov
pop
or
xlat
xchg
sbb
push
mov
jp
add
fwait
jbe
xor
cmp
in
mov
xorb
insb
xlat
or
mov
sbb
mov
fsubs
add
dec
mov
test
jmp
shr
xchg
push
jg
sub
fisubrl
cltd
xchg
nop
dec
or
ss
imul
push
cwtl
sbb
mov
ret
shrl
jbe
push
jmp
adc
shr
out
rcr
pop
negb
sub
incb
aad
and
pop
div
push
cmp
pop
mov
test
add
xor
xor
lods
js
cmp
repz
xchg
add
pop
pop
loope
cmpsl
xor
ljmp
repnz
aad
jae
jle
icebp
jg
xchg
data16
lcall
inc
fwait
sub
ja
iret
outsl
jae
pop
or
rolb
lock
sub
pusha
mov
dec
sbb
mov
add
addr16
mov
jp
imulb
movsb
ficompl
insl
sbb
pusha
push
inc
rclb
or
jbe
jb
daa
ds
sub
dec
adc
push
jmp
xor
sti
les
fwait
ret
dec
dec
pusha
shll
push
and
addr16
mov
bound
test
nop
aam
or
inc
in
lea
scas
ret
insb
insl
cmp
jl
les
repnz
movsl
pop
lods
mov
inc
in
and
pop
mov
xchg
cmp
jp
out
daa
test
jae
rolb
or
movsb
fs
test
sub
add
mov
pminsw
jno
and
inc
mov
rep
jno
clc
dec
popf
mov
cmpsb
pop
stc
movaps
and
iret
imul
and
outsb
cmpsb
insb
push
pop
in
add
bound
add
lcall
inc
data16
dec
lods
fadds
cli
inc
insb
faddl
cmc
xor
outsb
outsl
cmpsb
rcl
movsb
in
addr16
push
in
enter
fidivl
or
dec
push
aam
aaa
or
popf
push
xlat
and
sub
jne
pop
jg
jae
fldenv
jmp
adc
pop
xor
push
gs
out
cmc
outsl
outsl
and
test
or
or
jle
mov
add
icebp
mov
pushf
popf
xchg
inc
push
imul
xchg
popa
andb
push
lea
sarl
inc
jp
test
jle
pop
ja
clc
cmpb
sti
jp
pop
lret
sbb
push
mov
imul
cmp
pop
dec
ficoml
mov
ret
lods
dec
sbb
lea
repnz
rorl
or
mov
mov
outsb
and
fldlg2
adc
xchg
cmp
clc
int
xchg
cmp
outsb
mov
bound
inc
movsl
sahf
mov
mov
add
sti
jecxz
into
inc
testb
out
es
xchg
mov
shl
leave
addr16
ja
in
push
mov
sbb
sahf
les
push
gs
ret
sbb
sub
xchg
rcrb
out
jns
push
fs
jno
add
mov
out
or
mov
into
dec
scas
xchg
arpl
pop
mov
dec
mulb
in
out
inc
or
lcall
in
xchg
scas
lds
jmp
pop
and
dec
push
lahf
mov
xchg
add
mov
xchg
xor
std
mov
cltd
scas
or
cld
fcmove
inc
cmp
loop
jle
or
jne
stos
iret
ljmp
fsubp
push
loope
push
xchg
out
add
clc
push
jmp
or
ficoms
push
sub
or
adc
fistl
jbe
test
out
xor
rorb
xor
jle
ss
jno
scas
cwtl
xor
mov
jae
sub
clc
or
push
lock
je
cmp
add
jecxz
xchg
jae
pop
jb
inc
pop
je
mov
loop
data16
push
push
stc
mov
cmp
mov
push
dec
incb
iret
xchg
cwtl
mov
pop
dec
aad
lods
dec
dec
stos
fnstenv
arpl
bound
mov
test
hlt
dec
rcrb
scas
fcmovnu
iret
jns
jge
test
mov
pop
mov
ret
sbb
stos
out
fcmovb
or
daa
jbe
orb
pop
int
fdivrp
xor
xchg
inc
repnz
ds
fbstp
cmp
loopne
insl
out
push
pop
push
out
ja
aad
shlb
or
rclb
mov
test
test
imul
sbb
cli
repnz
cmc
jo
mov
sbb
dec
ljmp
scas
dec
lahf
xchg
jae
imul
stos
or
sahf
cli
outsl
sbb
mov
mov
cltd
cld
dec
push
ljmp
mov
ret
insb
xchg
fmull
jno
rcl
push
dec
sbb
add
xor
adc
pushf
xorl
push
sbb
dec
in
pop
xchg
dec
mov
mov
in
mov
adc
outsb
lds
adc
lret
ja
loop
in
popa
test
in
xor
dec
dec
mov
jecxz
mov
call
pushf
mov
pop
dec
sahf
add
jle
dec
in
out
xchg
imul
loop
adc
xadd
or
out
sbb
pop
and
pop
lret
push
pop
adc
push
mov
setno
pop
push
and
pop
push
xchg
xor
fstpl
cmpsl
mov
push
cmp
dec
or
pusha
aad
call
fwait
inc
lcall
mov
popa
fisubrs
jp
mov
sub
jno
lods
push
mov
insb
ret
lea
or
fdivp
add
mov
ss
xlat
sti
sub
cmp
dec
cli
js
lret
or
out
cltd
aam
and
sbb
sub
sub
flds
sbb
mov
xchg
dec
ficoms
pushf
in
imul
add
or
scas
inc
inc
adc
cs
repnz
aas
mov
jno
rclb
mov
notl
mov
inc
cld
push
sub
loop,pn
fucomp
hlt
pop
inc
pop
or
or
mov
test
lods
push
inc
jbe
orb
xchg
test
lock
push
jmp
xlat
ret
cmp
fimuls
add
dec
sbb
dec
sub
bound
sbb
xor
ja
repnz
add
mov
pop
and
and
divl
xchg
in
mov
cmpsl
pop
fwait
add
sbb
cli
fists
xor
cmp
hlt
test
push
push
and
pop
lock
mov
and
data16
sub
cmc
sbb
imul
pop
test
cmc
sarb
or
jnp
mov
mov
xor
pop
shl
inc
dec
pop
push
push
or
dec
sub
sti
mov
and
je
les
clc
and
adc
mov
xchg
cmp
push
arpl
or
imul
add
push
pop
cli
mov
out
jae
out
jp
loopne
mov
in
pop
enter
fnstsw
and
and
pop
rolb
testl
xchg
sub
or
sbbl
push
shlb
and
push
cmp
mov
mov
dec
mov
lea
xor
ror
and
into
lea
mov
lret
cs
dec
lcall
pop
stos
adc
mov
nop
mov
pop
mov
push
dec
rcrb
cs
insl
sub
rcrb
arpl
mov
rorb
adcl
lods
push
xlat
ret
pop
xchg
fcompl
fiadds
lds
sbb
cmp
mov
pop
sub
sub
jle
imul
les
jl
mov
dec
aaa
lock
inc
mov
enter
mov
mov
aam
ficoml
and
test
fs
cs
sub
imul
clc
jecxz
jl,pt
into
out
cmpsb
mov
dec
adc
pop
push
ret
test
adc
xchg
imul
and
jae
jecxz
nop
rcrl
loop
dec
xchg
in
lahf
sbb
in
and
mov
dec
pushf
xlat
and
insb
dec
out
lahf
cmp
aaa
jge
dec
cmp
lcall
rorb
sbb
cltd
dec
js
sub
lcall
mov
sbb
jbe
add
call
and
imul
inc
mov
test
fwait
adc
xor
leave
lahf
mov
inc
mov
jne
lods
iret
scas
mov
xor
es
cmp
addr16
lods
imulb
jns
adc
imul
mov
shlb
cld
mov
mov
or
imull
hlt
arpl
push
mov
xor
in
pop
sbb
mov
aam
jg
aas
nop
out
push
dec
and
push
pop
or
mov
xchg
addl
ljmp
jnp
inc
movsl
dec
or
loopne
or
fldcw
mov
mov
mov
sbb
nop
loop
fsts
rol
jl
xchg
shll
pop
or
aas
insl
mov
jnp
xor
in
xchg
aaa
sbb
adc
outsl
fisubrs
test
in
dec
loop
fnstcw
pop
ds
sti
jge
adc
leave
pop
lcall
push
lods
push
xlat
sti
push
xchg
mov
or
fcomip
mov
adc
cmp
cmpsl
cli
and
in
outsl
add
sti
mov
in
push
mov
jns
rcrb
sub
mov
stos
icebp
js
in
sti
nop
xor
jae
dec
cli
cld
fs
aas
and
stc
sub
push
ss
test
mov
adc
jp
or
jp
cmp
xor
loop
fnsave
mov
dec
iret
push
repz
adc
repnz
stos
idiv
insb
jns
scas
xor
push
leave
mov
add
rcll
mov
xchg
pop
cli
pop
enter
js
pop
dec
sbb
push
filds
jnp
mov
jae
mov
ret
scas
lahf
push
push
repnz
or
pop
inc
mov
enter
xchg
ljmp
mov
jae
shrd
jg
filds
leave
mov
movsb
inc
xor
jmp
sarl
or
add
add
outsl
sahf
pop
xor
dec
mov
or
push
ljmp
imul
jo
arpl
aas
mov
adc
mov
das
mov
cmc
addl
sarl
jno
jbe
lahf
sub
in
sbb
arpl
shr
inc
xlat
or
cmp
gs
das
jle
sub
icebp
repz
jmp
cwtl
sub
enter
jmp
lods
or
or
inc
mov
push
cmp
pop
lret
sub
pop
bound
mov
jmp
fdivl
jb
inc
inc
std
popa
fld
insl
cmc
test
cld
cwtl
jne
jb
mov
sti
jb
loopne
outsl
shll
test
mov
push
in
or
sub
jnp
cmp
test
mov
imulb
jno
stc
fsubs
add
sahf
jnp
mov
mov
dec
aas
ds
dec
jp
adc
dec
cwtl
ja
int
push
pop
jmp
in
mov
or
mov
add
jle
xchg
xchg
aam
and
out
cli
mov
fisubs
sbb
loope
adc
jbe
mov
in
pop
adc
adc
test
pusha
sahf
xchg
dec
imul
jmp
sarl
stos
adcb
fmul
sahf
mov
mov
inc
fwait
push
xlat
pop
call
shll
push
rcrl
cli
jge
push
aad
dec
stos
in
mov
xor
sub
sub
inc
out
ss
mov
scas
mov
rcrb
mov
fidivs
jne
inc
arpl
push
mov
lea
loopne
scas
adc
std
lcall
xchg
adc
xchg
sub
cmp
mov
push
dec
scas
bound
stos
lcall
jl
xchg
push
rcll
xchg
cmpl
sahf
mov
sarl
xor
bound
aam
fcmovnu
cmp
cmp
movsb
mov
dec
jbe
mov
push
imul
rorl
iret
xchg
jmp
popf
fucomi
into
or
outsb
xlat
dec
roll
mov
aaa
push
bnd
cmp
sub
adc
push
jecxz
out
clc
xrelease
shll
lahf
inc
cmp
mov
pop
popa
test
jecxz
aam
fidivrs
cld
cli
push
sub
mov
cmp
lret
dec
mov
dec
icebp
pop
lock
jecxz
inc
mov
mov
fsubrs
mov
movsb
flds
aam
imul
inc
adc
clc
xor
int3
and
mov
imul
jmp
ja
icebp
je
pop
lds
jo
sbb
mov
int3
test
fs
inc
jge
in
mov
mov
ja
cmpsl
iret
lea
out
xor
xchg
data16
js
mov
daa
call
cmp
popf
cmpsl
in
mov
insb
pop
int3
or
inc
les
jmp
std
cld
hlt
push
add
enter
push
sbb
ja
andb
mov
jne
ds
push
xor
jno
lret
add
cmp
mov
ja
and
mov
cltd
push
ds
jne
xor
add
xlat
or
sti
jb
dec
sti
in
jbe
jb
xchg
and
outsb
iret
notl
scas
sbb
xchg
cltd
bound
jmp
pop
push
push
stc
mov
jg
dec
push
popf
and
push
mov
inc
lock
ret
jbe
lea
mov
popl
incl
xchg
loop
sub
adc
stc
push
xor
mov
mov
je
sbb
push
mov
pop
loopne
push
out
inc
inc
mov
mov
lcall
sbb
cmp
fistpll
sbb
je
pusha
jb
pop
push
arpl
dec
loopne
sbb
mov
into
scas
fstpl
stos
ss
mov
icebp
sbb
fisttps
sbb
inc
shrb
clc
push
inc
mov
pop
aaa
push
jne
pop
push
loopne
mov
mov
out
popf
add
and
pop
icebp
dec
filds
pop
call
mov
mov
or
xchg
mov
jo
xchg
mov
adc
mov
fxch
fs
sub
inc
loopne
xorb
or
aad
dec
jne
dec
pop
cmp
jno
mov
pop
dec
fwait
sbb
xchg
aad
and
adc
jae
nop
pop
rolb
inc
xor
ss
hlt
cli
push
out
mov
mov
nop/reserved
add
sbb
out
add
shll
test
nop
fcompl
mov
aas
mov
jmp
int
ret
and
mov
call
xchg
adc
inc
xchg
inc
dec
pushf
cwtl
adc
sub
enter
mov
mov
aaa
inc
add
out
jge
repnz
das
repz
lret
sub
fdiv
xor
lret
sbb
stc
mov
jmp
pop
add
xor
pushf
pop
loopne
mov
adc
sub
sub
mov
mov
push
xor
cmpsb
xchg
sbb
popa
hlt
aad
mov
aas
aam
inc
outsl
jno
pextrw
mov
inc
cmpsl
test
hlt
push
cltd
xor
or
pop
pushf
xchg
or
insl
jb
pop
aam
sub
rolb
mov
push
shl
pop
cmp
adc
mov
inc
popa
std
xchg
sarl
call
jecxz
mov
stos
mov
ffree
loop
inc
rcl
test
movsl
dec
jl
cmp
das
push
iret
sub
popf
pop
jl
test
cmp
gs
jl
pop
lret
xor
sbb
scas
xchg
pop
mov
dec
ror
fisubrs
out
or
idivl
sub
jns
insl
inc
inc
in
fwait
mov
inc
add
cmc
push
sbb
test
inc
mov
mov
movsl
cmp
icebp
push
mov
cwtl
add
sbb
ljmp
int
int
adc
leave
mov
scas
push
xor
cli
xchg
mov
pop
pop
lret
adc
mov
ss
mov
jns
cwtl
and
mov
mov
xorl
mov
fsubl
divl
xchg
jg
sbb
mov
sbb
xor
inc
ret
ja
movsl
loope
outsb
mov
popl
popf
inc
sub
xor
mov
inc
mov
aas
and
sub
in
cmpsl
push
and
movsb
mov
dec
ss
cltd
xchg
ss
jle
xor
insb
mov
std
lods
les
cltd
scas
mov
add
sbbb
das
jle
or
imul
pop
fs
sub
or
or
dec
andl
hlt
adc
orl
inc
add
sub
sub
push
mov
ja
adc
mov
dec
sahf
add
int
cltd
jae
fistpll
test
jns
mov
xchg
cltd
xor
pop
xor
call
fprem1
push
js
fdivp
sub
sbb
xor
mov
pop
sub
mov
jnp
mov
outsb
add
mov
pop
sahf
add
or
loopne
xchg
shll
loope
fsubrs
or
dec
xchg
xchg
out
mov
add
loopne
mov
mov
aaa
repz
inc
xchg
xchg
jecxz
mov
out
cmp
into
ja
mov
mov
or
iret
jmp
enter
cmp
cmc
push
daa
scas
push
jle
out
sbb
data16
daa
inc
jnp
xor
sbb
adc
out
mov
insb
mov
addr16
js
add
add
mov
pop
or
clc
cmc
mov
cld
gs
fwait
ja
sbb
xchg
adc
pop
mov
mov
push
test
mov
repnz
int3
out
ret
popf
xlat
iret
sub
and
push
mov
sbb
test
xchg
out
int
hlt
mov
aas
cmpsb
inc
gs
mov
negb
inc
lcall
jl
sarl
sbb
lea
arpl
jbe
les
mov
pxor
pop
data16
add
into
shll
scas
or
fsubl
enter
xchg
mov
int
loop
push
or
sub
add
mov
ja
jno
jnp
nop
leave
and
les
leave
sbb
jns
adcl
dec
push
push
pushf
mov
jmp
out
insb
sbb
ffreep
ret
inc
insb
sub
adc
add
and
push
cmp
adc
adc
xorl
mov
jp
insl
sbb
pop
xlat
inc
add
jnp
aaa
jmp
xorb
mov
sahf
sahf
andb
xchg
enter
dec
stos
xlat
enter
inc
mov
out
cmpsl
insl
imul
ret
popf
jnp
pop
xor
test
adc
and
dec
lret
lret
add
shll
mov
dec
sub
es
movsb
outsb
jl
adc
leave
sahf
mov
mov
je
pop
nop
enter
jae
adc
mov
pusha
aas
pop
mov
dec
rcr
iret
js
xchg
insb
mov
frstor
sarb
ficoms
xlat
xchg
pop
push
pop
jb
lock
iret
jge
xchg
push
sti
lea
fbld
push
add
ret
ja
hlt
shll
pushf
inc
movsb
cwtl
mov
cmp
and
fdivl
add
sub
dec
test
jle
jo
pop
jne
loope
lea
xchg
ret
ljmp
outsl
in
or
push
sbb
push
ret
dec
lods
aaa
mov
xchg
mov
jns
add
sbb
jbe
inc
mov
popf
movsl
push
jle
adc
cmp
mov
jmp
dec
adc
lds
pandn
push
add
sub
nop
add
ja
cmp
push
adc
imul
mov
arpl
cmp
in
shll
test
lahf
mov
or
mov
xor
sub
xor
hlt
imul
lcall
xchg
icebp
outsb
cmpsl
pop
cmpsl
mov
xor
fsts
and
xor
mov
aaa
pop
mov
les
cmpsb
nop
loop
test
push
rolb
pop
xchg
int
and
insl
lret
pop
xchg
xor
inc
movsb
pop
fcmovne
mov
idivl
fs
pusha
rorb
inc
cmp
or
leave
gs
sub
lods
add
lret
std
and
or
xchg
pop
scas
xchg
mov
inc
repnz
sub
mov
daa
pop
cwtl
ja
inc
popf
nop
cmp
inc
movsl
sbb
or
jae
inc
inc
jns
mov
imul
jle
sub
arpl
adc
cld
ja
dec
or
push
dec
loope
enter
cmp
testl
sbb
rclb
dec
cmp
xor
fbstp
jle
movsl
lcall
mov
pop
cli
clc
pusha
xor
stos
stc
push
daa
or
lods
sahf
call
xor
cli
cmp
pushf
and
data16
inc
xchg
in
je
ret
insl
shlb
xor
lea
bound
mov
into
cmp
xchg
push
or
xchg
neg
mov
ljmp
mov
mov
ret
xchg
push
and
in
adc
push
pop
or
xor
ficompl
or
pop
xor
out
lret
mov
fwait
ss
jnp
out
pop
push
loopne
outsb
jno
inc
aad
cmp
xor
push
inc
sbb
mov
scas
cmpxchg
pop
loop
ret
ja
in
shlb
and
xchg
lock
dec
xchg
sahf
xlat
xchg
xchg
jne
lcall
fsubl
clc
push
sbb
sti
xchg
outsl
ja
mov
test
or
mov
insl
sahf
rcll
add
dec
stos
mov
in
inc
mov
push
adc
mov
idivl
pop
push
cmp
ljmp
mov
ds
ret
dec
out
daa
outsl
leave
xor
cwtl
and
cmp
mov
ss
cmc
xor
js
inc
dec
adcl
or
cmc
and
outsb
fs
lock
jns
aas
pop
cs
lods
arpl
inc
dec
sbb
add
fdivrs
jbe
sbb
idivl
jo
daa
ja
sub
xor
push
sbb
adc
jb
sub
outsl
daa
push
sub
xchg
lcall
or
push
test
cmp
cmpl
test
ss
jne
jl
push
mov
mov
mov
aas
add
in
ss
popf
pop
inc
aaa
popa
or
pop
push
sub
cmp
add
mov
out
pop
mov
mov
ret
div
jge
xor
jnp
jbe
xlat
les
add
je
jo
test
data16
and
shrb
pushf
sbb
add
bound
scas
inc
dec
jno
in
sub
jl
pop
int
lret
repnz
je
mov
fiaddl
pop
fdivrl
sub
cmpsl
xor
ds
jb
xor
clc
cmpsb
les
pusha
lret
adc
mov
or
cltd
lds
stos
mov
mov
jo
jbe
add
push
or
sahf
repz
and
mov
daa
std
jo
xchg
fidivl
xor
fs
lcall
decb
leave
ja
popl
std
js
test
xor
inc
imul
adc
jb
xor
imul
and
mov
jmp
ret
pushf
scas
mov
dec
push
mov
pusha
inc
mov
stos
arpl
mov
or
push
cwtl
mov
or
sbb
xchg
inc
rclb
xchg
mov
jp
and
push
andb
pop
fstp
dec
or
xorl
iret
add
fistpll
fists
adc
xor
xlat
xchg
ret
xchg
dec
adc
js
push
pop
in
popa
imul
cmc
pop
aam
sub
int3
ds
stos
and
sub
fcmovu
lahf
les
out
mov
sar
fisubrs
out
push
xchg
outsl
and
add
add
mov
leave
popa
lock
in
jb
imul
pop
cld
adc
popa
add
xchg
out
iret
cld
and
adc
mov
addr16
rcl
scas
test
mov
dec
es
push
add
jb
dec
outsl
popf
lods
mov
or
fcomps
scas
push
stc
jns
sub
mov
push
lods
out
in
je
sub
stos
pushf
mov
jno
jbe
jne
dec
out
sub
mov
out
cmp
xor
movsl
push
ljmp
pusha
lods
gs
push
or
add
pop
fwait
sub
lahf
rclb
mov
push
out
jmp
stos
inc
pushf
dec
and
adc
mov
cmpl
mov
scas
lret
psubb
xchg
mov
stos
xchg
testl
mov
cmp
mov
fwait
scas
mov
push
cmp
andl
push
mov
xor
lret
test
enter
adc
rcll
je
mov
sub
loop
int
adc
add
fdivp
mov
fisubl
test
push
push
insl
in
add
cmp
outsl
loope
mov
fidivl
mov
dec
lods
loopne
addl
test
push
arpl
push
jl
call
mov
xor
push
ret
and
jmp
or
adc
lock
rol
mov
push
xlat
sbb
out
mov
testb
in
mov
mov
clc
mov
add
icebp
add
shrl
add
dec
or
lahf
xlat
hlt
icebp
and
add
out
bound
push
test
dec
pop
fwait
pop
std
lods
ja
daa
cmp
icebp
lds
jb
xor
sar
add
movsb
mov
ret
push
je
jae
cltd
popf
fwait
popf
sub
icebp
add
popf
mov
aad
cmp
cmpsb
mov
pop
mov
sub
movsb
xor
std
insb
scas
xchg
inc
outsb
out
xchg
js
imul
int
cli
sbb
ja
jne
int3
cmpsb
out
gs
mov
leave
out
mov
std
xor
sbb
dec
rcrb
push
cmp
loop
popa
aas
ss
pop
xchg
fs
push
mov
dec
icebp
popa
dec
jge
push
scas
pop
cli
dec
push
ss
inc
add
or
inc
push
push
out
fs
push
cli
cld
sub
iret
ds
andb
std
pop
push
sbb
inc
sub
jp
imul
xor
mov
out
mov
imul
hlt
out
cmpsl
repnz
jbe
or
addr16
pop
cld
cwtl
pcmpeqw
iret
dec
cmovne
leave
and
pushl
int3
lcall
add
push
jecxz
es
lds
arpl
adc
sbb
push
sar
test
push
sahf
sbb
sti
cmpsb
dec
std
jl
test
out
insl
ret
pop
imul
xchg
jno
lahf
sarb
ljmp
popf
add
sbb
out
and
inc
pop
aad
dec
inc
insl
andb
lock
in
cltd
call
jns
pusha
fsubp
mov
imulb
fs
push
jae
pop
aas
cs
jo
popa
pop
add
pop
dec
fistps
mov
jbe
je
mov
ret
scas
gs
out
dec
mov
mov
jp
dec
cmp
stos
notl
fidivrs
pusha
fildl
loop
or
pop
into
pop
fwait
add
decb
jl
cmpsb
rcll
cmp
sub
in
repnz
call
cli
scas
imulb
dec
jle
xchg
jnp
mov
jl
or
sahf
repz
push
loopne
adc
push
movsb
outsb
push
dec
aaa
cltd
dec
add
jg
cmp
dec
inc
cmpsb
mov
jmp
sub
push
fs
pop
xchg
sub
adc
pop
and
xor
aad
adc
hlt
lret
and
pop
adc
lret
xlat
add
pop
xchg
mov
sbb
outsb
mov
orl
sbb
cld
into
dec
fs
or
xorl
jbe
sbbl
sti
orl
pushf
and
mov
mov
out
pop
hlt
sub
xchg
shll
xchg
jb
cmc
sahf
jl
mov
aam
aam
jmp
mov
jnp
mov
lea
dec
sbb
pusha
ljmp
xorb
movsl
ret
jnp
sbb
cmp
stos
and
lock
enter
in
xlat
aam
pop
sub
insb
adc
push
cli
int3
jg
out
xor
lret
aaa
mov
pop
xchg
add
push
gs
fxch
aam
adc
subb
sub
mov
cli
add
xchg
test
add
jns
add
dec
cltd
rcrb
bound
fcmovne
out
xchg
sahf
sub
inc
sbb
dec
sbb
pop
add
subl
mov
lret
shlb
mov
popf
int
out
mov
cld
xor
mov
pushf
lret
stos
arpl
pop
into
push
inc
shr
jno
loop
cli
ja
mov
or
cli
cmp
mov
repz
mov
cmp
ret
push
scas
jae
push
add
loope
aaa
xor
sahf
iret
and
or
or
clc
add
mov
popf
xchg
scas
mov
lret
inc
outsb
pop
daa
inc
dec
fisubrl
mov
push
push
and
mov
xchg
ftst
xor
or
cld
ja
pop
mov
inc
lret
cmpsb
sub
stc
scas
push
pushf
ret
and
mov
pop
push
outsl
push
mov
push
sbb
adc
adc
stc
lahf
aas
aas
adc
mov
mov
mov
inc
sub
mov
pop
outsl
sbb
fs
inc
lcall
xor
es
out
mov
cs
cmp
xchg
shlb
decb
imul
mov
sbb
jne
add
filds
sti
jmp
sbb
dec
data16
pop
push
jb
cli
mov
mov
mov
mov
pop
or
repnz
push
imul
or
stos
std
orl
mov
mov
int3
aam
push
gs
mov
ficoml
mov
cltd
jbe
xchg
movsb
daa
push
push
inc
lock
hlt
add
fs
pop
or
lods
pop
insl
std
outsb
sbb
lcall
in
stos
pop
fidivrs
test
repz
pop
pop
mov
sahf
push
fdivl
fwait
lock
inc
sahf
aad
jnp
push
rorl
shrb
push
iret
inc
loope
mov
aam
xchg
in
test
jne
dec
je
xor
aam
sti
inc
mov
fistpl
aaa
andl
xor
jo
idiv
loop
adc
rolb
pop
insl
movsl
jb
jae
inc
and
add
insb
int3
rcl
fidivl
push
xor
movsb
in
jns
ret
andb
inc
and
pop
stc
dec
push
dec
shrb
push
push
lock
pop
dec
out
adc
fadd
lods
push
xor
mov
pushf
ret
int
push
xlat
ds
movsl
xchg
sub
dec
xchg
fdivrp
sub
mov
jbe
shll
loopne
push
lahf
or
xchg
ds
and
inc
inc
xchg
mov
fstpt
mov
or
gs
sbb
sar
loope
sbb
add
mov
pop
xor
add
lods
mov
ljmp
mov
mov
mov
push
xchg
sahf
lods
shlb
xchg
cmpsl
out
mov
orb
cld
push
cwtl
dec
popf
icebp
xor
les
fstpt
sbb
dec
mov
ja
jnp
mov
mov
ljmp
cmp
popl
or
aad
hlt
dec
mov
cmp
mov
cmp
sub
repnz
imul
mov
sbb
dec
jecxz
shl
jmp
repz
mov
rcrl
lahf
enter
mov
scas
ja
pop
add
xor
ja
jno
mov
outsb
sar
sub
pop
movsb
ja
cwtl
cld
sbb
sbb
push
xchg
mov
fcomps
xchg
lret
hlt
and
and
test
fimull
jno
sarb
sub
dec
pop
test
es
dec
div
add
or
mov
stc
das
test
push
loop
adc
and
sub
and
aaa
pop
bound
dec
or
movsl
jns
inc
inc
jge
mov
add
adc
imul
mov
xlat
lcall
dec
adc
stc
stos
sub
out
xchg
or
mov
faddl
or
lds
jmp
adc
lock
mov
sbb
hlt
mov
lods
pusha
dec
lcall
sub
push
pusha
sub
push
push
cmp
fwait
arpl
sub
and
js
dec
mov
xchg
test
pop
sbb
add
and
jnp
in
pusha
rcl
jns
js
pusha
mov
dec
dec
fildl
cltd
test
dec
mov
dec
mov
gs
loop
mov
std
sub
push
test
ret
xchg
jo
dec
or
dec
mov
jns
roll
test
xor
lret
mov
scas
pop
psadbw
movsl
imul
add
in
xchg
addl
dec
mov
jns
jns
rcr
shlb
xor
xlat
dec
pop
jbe
jbe
stos
inc
shrl
sbb
pop
inc
add
pop
ret
dec
fwait
scas
mov
mov
push
lret
pop
dec
divl
adc
sarb
mov
fdivrs
inc
scas
mov
gs
popa
inc
imul
jp
add
ljmp
mov
lods
adc
call
sbb
mov
frstor
aaa
mov
mov
inc
mov
adc
jbe
xchg
or
shlb
fldcw
fsubs
inc
lds
inc
aas
testl
push
scas
cli
out
insb
pusha
adc
jns
mov
repz
fisubs
inc
pop
sar
or
xor
decb
scas
jns
js
jno
stc
xlat
dec
stos
and
movsb
mov
leave
stos
fsts
ljmp
out
ljmp
mov
sahf
je
mov
pop
sbb
fdivl
pusha
bound
in
xor
es
shl
int3
xor
shrb
imul
push
int3
sub
pusha
pusha
hlt
mov
rol
mull
or
mov
and
addr16
mov
push
dec
shr
inc
rcl
cmp
sub
aas
fisubl
repnz
jae
mov
fstps
shll
mov
mov
cltd
nop
cmp
xor
je
outsb
pop
mov
test
adc
mov
clc
popa
stos
pop
jp
cld
ja
push
enter
lock
insb
push
ljmp
test
xor
std
call
mov
mov
outsb
roll
outsb
out
ss
daa
push
mov
push
xchg
ret
xchg
int3
dec
mov
je
in
test
sbb
pop
jmp
loope
int3
sbb
mov
push
sub
fimuls
bnd
sahf
sub
lcall
add
cmp
mov
jge
das
jl
or
mov
xchg
fistps
sbb
out
scas
lret
sbb
cmp
sbb
faddp
fucomi
ret
stc
mov
andl
sahf
dec
pop
jo
out
add
push
mov
jne
mov
es
push
cmp
xchg
aad
sbbb
in
shl
enter
iret
dec
cli
and
sub
jae
pop
pop
pop
cld
pop
test
push
sub
in
movsl
mov
dec
pop
sbb
pop
mov
aam
aas
cltd
push
push
movsb
dec
sbb
or
and
xor
lret
pushf
cltd
mov
lods
into
fwait
inc
push
jmp
fidivl
mov
lret
add
pop
cmp
and
icebp
xchg
aaa
sbb
push
jle
mov
push
pusha
imul
in
aas
push
push
dec
sbb
or
fsin
mov
sub
xchg
xor
idiv
stos
sub
or
in
popw
pop
int
cmp
outsb
and
fistpl
push
pop
sahf
into
push
push
outsl
imul
pop
inc
xchg
sbb
jae
dec
mov
mov
push
cmp
dec
loope
ret
stos
push
jo
pusha
in
cmp
lret
ss
fmull
cli
cmp
pop
mov
add
imul
dec
dec
pcmpeqd
jns
or
xor
push
movsl
pop
mov
nop
or
dec
sbb
int
fdivl
rcrb
xor
cmp
mov
movsl
pop
das
and
mov
dec
xlat
in
nop
test
fdivrl
into
in
sub
xor
push
imul
adcl
pop
ljmp
fs
mov
fstl
dec
mov
inc
sub
mov
xchg
shrb
cld
push
pop
xor
gs
lret
repnz
ret
aad
mov
mov
lret
dec
xor
scas
call
xchg
test
fsub
pop
movl
ficoml
dec
jo
popa
int3
cmp
sarb
cli
mov
sub
cmp
add
mov
mov
xchg
push
jo
sarl
pop
fs
fwait
and
in
stos
fldenv
jb
dec
lock
mov
inc
test
lods
sbb
mov
mov
xchg
in
mov
adc
jae
and
add
sbb
fwait
xor
jbe
sbbl
das
or
lea
js
lods
lahf
or
rolb
pop
mov
dec
mov
mov
cmp
cwtl
xchg
mull
or
fldcw
repz
mov
enter
push
cld
jecxz
inc
ds
stos
dec
leave
mov
inc
testl
adc
sbb
pop
cmp
fimull
fwait
or
lods
stos
mov
in
dec
cmpsb
adc
movsl
pop
xchg
rcrl
xor
or
sub
dec
pop
fidivl
arpl
or
loopne
xorb
xchg
shr
inc
and
dec
jne
mov
lahf
shl
mov
in
xchg
push
shl
jb
mov
stos
cmp
ret
stos
pop
mov
cli
cmp
in
push
push
cltd
cmpsb
jns
mov
cmp
mov
push
sbb
ja
in
fldlg2
sbb
cmp
pop
mov
pushf
and
mov
jl
rorl
cwtl
dec
sub
xchg
adc
mov
inc
jp
adc
and
jo
mov
or
in
mov
push
fdivrs
pusha
gs
sub
mov
adcb
xchg
aad
jns
stos
cld
mov
xchg
outsl
sbb
xor
fdivrl
in
xchg
faddp
clc
clc
push
pop
inc
jo
or
sahf
sbb
inc
push
xchg
mov
adc
push
das
push
push
fucom
pop
jp
addb
or
out
xchg
jns
bound
push
pop
cmpxchg
pop
sarl
in
ja
outsb
sub
sbb
jle
int3
inc
aad
mov
sub
ss
cwtl
jmp
xchg
sbb
adc
aad
cmpsl
jbe
inc
data16
rorb
cmc
cld
xchg
pop
pop
dec
add
mov
jbe
imul
jp
mov
out
data16
xor
push
fdivs
lret
mov
repz
mov
imul
cmp
push
xchg
fbld
ja
push
das
sub
adc
repz
xchg
sbb
cltd
adc
test
xchg
bound
or
mov
and
jno
jl
fdivr
pusha
mov
lods
int
das
jl
sub
subb
adc
incb
and
arpl
push
jl
jns
sbb
in
mov
fiaddl
jmp
cli
sbb
mov
loopne
add
mov
sbb
es
scas
sti
cmp
cmp
jb
cmpsb
sbb
jo
mov
mov
jb
xchg
push
ja
shr
add
fbld
xlat
dec
xchg
sar
imul
cmpsb
nop
fwait
xchg
push
mov
mov
bnd
ficoml
adc
xchg
mov
inc
dec
and
push
cmpl
imul
mov
jmp
ss
dec
fucom
mov
and
cmp
nop
xchg
pop
aas
xchg
sti
mov
iret
test
lcall
jp
aam
and
clc
pop
sbb
insl
notb
sub
mov
mov
add
cmp
ret
cmp
xor
lods
and
jle
call
stc
inc
or
scas
sub
and
mov
sub
cmp
cli
dec
out
sub
lret
dec
out
mov
clc
bound
jnp
loop
adc
enter
adc
sub
jb
or
cmpsl
sbb
sti
hlt
arpl
das
inc
inc
call
in
mov
push
addr16
mov
sub
push
cmpsl
cmpsl
jg
test
stos
dec
popf
mov
sub
fnstsw
std
push
fdivs
pop
sub
pop
jmp
lods
push
mov
add
nop
mov
and
pop
mov
fsts
fucomip
and
dec
jns
jmp
pop
daa
mov
mov
push
test
int
pop
data16
push
sti
aad
pop
sbb
les
push
mov
dec
inc
or
loopne
xor
sbb
mov
xchg
pop
hlt
addb
cs
or
jbe
and
xor
test
pop
lret
sub
jb
stc
cwtl
bound
jmp
stos
stc
int
push
cmp
jp
mov
xchg
pop
stos
xchg
sar
inc
std
adcl
sub
lods
mov
psllw
jne
mov
lods
fldl
adc
xor
inc
mov
into
aam
adc
jne
sti
mov
sub
fisubrs
adc
test
sbb
pop
add
push
jmp
dec
stos
dec
xor
bound
lods
add
sbb
pop
test
cmp
push
jecxz
xor
add
mov
mov
repnz
inc
ss
subl
cmp
scas
mov
es
mov
imul
add
mov
pop
cld
inc
jle
xor
test
jecxz
lds
push
cli
mov
icebp
cltd
fs
cwtl
cwtl
shl
adc
out
cs
inc
subps
rcll
cmovge
push
daa
dec
xchg
xchg
movsb
pusha
mov
jle
loope
cmpsb
mov
fs
rcll
xchg
aad
loopne
test
sub
push
rorl
inc
or
rcll
xor
rcr
mov
lods
xchg
pop
fistl
into
or
mov
lahf
adc
das
pusha
iret
cmc
call
ss
jo
into
faddl
or
inc
out
or
in
insb
stc
cltd
pushf
addr16
das
out
cwtl
jecxz
adc
test
pop
push
bound
aad
sbb
sti
scas
mov
mov
cmp
add
ljmp
in
clc
in
or
or
cvttps2pi
sbb
fsubrs
icebp
call
mov
sbb
pop
cltd
aaa
adc
push
mov
aas
es
add
loopne
popf
aaa
ficoml
mov
movsl
cmp
adc
mov
xchg
cmpsb
fwait
in
inc
ja
adc
sbb
aaa
inc
dec
cwtl
out
pop
or
out
push
push
and
or
jno
divl
scas
das
mov
cmpsb
rolb
xchg
iret
push
in
add
mov
jg
sbb
mov
lret
movsb
cmc
mov
loop
mov
movsb
nop
cmp
dec
mov
inc
sub
adc
movsl
push
and
sarl
lret
mov
in
roll
xor
lods
aam
retw
inc
dec
movsl
mov
movsl
adc
mov
xor
cmp
inc
xor
or
adc
mov
ljmp
dec
test
dec
das
dec
std
ja
rol
mov
lcall
cmpsb
arpl
xor
popf
inc
push
and
dec
xchg
sbb
fdivrl
push
sub
pop
sub
addr16
sbb
mov
and
mov
cltd
nop
mov
rdmsr
mov
sbb
enter
js
jmp
adc
adc
mov
and
cmpsl
imul
push
inc
mov
es
clc
mov
or
jp
sub
xchg
inc
sarl
in
rcll
adc
mov
rcr
dec
jl
sar
inc
xor
and
add
les
pusha
push
std
test
xor
sub
adc
or
push
cmp
cwtl
mov
mov
fistps
or
lods
hlt
dec
ss
and
push
mov
xchg
jl
xchg
mov
in
lods
jge
mov
repnz
pop
movl
in
mov
mov
cmpsb
xchg
int
cmpsl
fsub
sub
lods
push
pop
ficomps
inc
xchg
inc
test
adc
je
cmp
movsl
addr16
lcall
mov
xchg
mov
pop
pop
push
jmp
xchg
das
push
or
in
scas
outsb
mov
pop
push
inc
adc
cmpsb
movsb
nop
popa
mov
add
inc
aad
leave
mov
hlt
test
jne
sbb
cmc
cmp
adc
outsl
jge
ret
adc
imull
push
pop
inc
mov
xchg
enter
lods
or
pusha
repz
lahf
call
xchg
pop
fsubl
jno
xchg
jb
aad
ljmp
aas
push
or
test
lea
cwtl
pop
cmpsb
pop
mov
xor
ja
and
push
xchg
imul
pop
out
je
adc
test
stos
xchg
cmc
addb
sub
stc
test
mov
fs
xorb
xor
rcrb
pushf
into
jmp
sti
mov
sub
cmpsl
inc
into
add
inc
push
orl
mov
out
out
shlb
in
mov
ljmp
xchg
cmp
mov
adc
jno
xchg
ljmp
call
insl
cmpsb
repz
js
lea
xlat
or
jbe
cmp
arpl
shr
or
jo
mov
xchg
sbb
mov
cmpsl
xchg
cmp
ret
cld
aam
mov
push
and
mov
and
in
add
add
cmc
mov
fisubs
stc
les
imul
pop
or
adc
lret
cmp
and
pop
lods
scas
or
pop
ja
ljmp
push
arpl
jg
pop
fs
out
outsb
fadd
xor
lahf
adc
cmp
mov
pop
stc
mov
add
cmc
lods
add
gs
cmp
mov
xor
mov
call
lea
push
mov
aaa
inc
pushf
hlt
xor
cs
cwtl
pop
imul
dec
mov
subb
lds
mov
xor
mov
movsl
in
fidivl
add
fisubs
xchg
mov
dec
cmp
sbb
mov
cmc
add
daa
popf
in
mov
inc
stos
cmp
in
xor
mov
cltd
jne
dec
fwait
cmc
push
xchg
pop
fldl
jg
pop
pop
mov
push
jbe
cmp
mov
arpl
xchg
cmp
popa
loopne
fcomps
test
sub
mov
scas
lret
je
xchg
pop
cmp
jbe
jne
add
mov
pop
int3
mov
popa
das
pusha
or
sbb
adc
add
pop
xor
jbe
or
fimull
imul
mov
je
jo
and
inc
pop
lahf
enter
cltd
jne
fcoml
inc
jo
jecxz
mov
add
jecxz
cwtl
aas
movsl
cmp
das
fxch
adc
cmp
dec
shll
adc
push
roll
adc
int3
into
push
clc
mov
shlb
sbb
bound
addr16
insl
or
loope
cs
repnz
stos
sub
sti
in
jle
in
pop
push
push
and
cld
cmp
das
mov
or
mov
add
int
data16
cld
and
pop
sub
push
mov
dec
mov
cmp
das
inc
js
fcmovb
pop
aad
nop
pop
mov
popa
dec
xchg
cmp
movsb
and
push
aam
mov
push
jo
cmpsb
lods
ss
cmp
arpl
mov
pop
ret
popa
mov
adc
xchg
push
jne
mov
sti
stos
rcrb
dec
loop
adc
in
or
dec
or
mov
mov
sbb
adc
in
fucom
xchg
pop
outsb
cmp
pop
push
or
shrl
dec
outsl
adc
xchg
xchg
sub
lahf
repnz
jns
and
jns
pop
mov
dec
add
inc
dec
mov
data16
shrl
or
push
rol
and
xor
mov
sbb
or
nop
jle
xor
inc
pop
pop
leave
lods
outsl
jo
xchg
aad
push
aas
jge
movsl
push
push
and
push
rclb
pop
in
xor
jae
fadd
jge
jbe
add
xorb
popa
testb
or
sub
jmp
xor
cltd
rol
popf
xchg
addr16
lcall
inc
jnp
mov
inc
xchg
inc
dec
nop
negl
call
inc
fnstsw
push
cmp
mov
roll
nop
sarl
pop
or
test
adc
add
cmp
dec
out
imull
ja
cwtl
xchg
repz
loopne
daa
clc
adc
push
xchg
inc
jb
sbb
dec
ret
imul
mov
je
out
loopne
notb
std
setg
sub
das
daa
jl
fdivrs
push
aaa
or
lahf
imul
popa
mov
lcall
nop
push
cmpb
dec
imul
pop
mov
and
or
pop
gs
add
sahf
addl
sub
call
jno
pop
dec
repnz
inc
rorb
out
sub
mov
loope
xor
stc
xor
xor
pusha
bnd
lret
ja
iret
sbb
jle
cltd
mov
pop
shlb
xor
jmp
mov
mov
in
out
push
or
xor
xchg
mov
je
imul
or
int3
xchg
xor
push
aas
mov
add
insb
sub
lahf
ljmp
ret
dec
add
js
inc
pop
pop
out
je
sbb
cmpsl
pop
ljmp
stc
mov
dec
push
jecxz
adcb
gs
jp
mov
stos
imul
xchg
jmp
push
rcrl
push
xchg
pop
cmp
sbb
cli
icebp
scas
mov
scas
and
stos
inc
fbstp
adc
xor
daa
push
fmull
mov
mov
addr16
hlt
or
xchg
ficompl
sbb
sub
stos
aad
icebp
movsl
out
je
adc
jmp
or
pop
mov
enter
pop
jecxz
fnstenv
bound
fwait
mov
loop
movsb
iret
mov
jecxz
push
repz
out
fs
mov
push
lods
xlat
repz
in
hlt
popa
fcompl
cmp
cmp
cmp
sbb
in
neg
xor
adc
inc
mov
push
ret
insl
add
ljmp
outsl
ds
dec
sub
lcall
ja
lock
je
or
fldenv
inc
jbe
adc
lcall
dec
jge
push
add
xchg
mov
cs
jnp
mulb
sub
adc
add
hlt
pop
mov
sub
mov
scas
cmp
adc
addb
loope
mov
fisubrs
mov
mov
mov
test
pushf
jecxz
popf
pusha
test
pop
out
mov
hlt
rol
adc
push
fnstsw
xchg
push
pop
xlat
cmp
add
lods
bound
adc
lock
lret
or
mov
mov
incl
and
lea
push
push
xor
lea
into
jl
add
push
subl
iret
push
and
cs
pop
push
bound
imul
sbbb
or
dec
into
xor
add
repz
sarb
sub
pop
xor
out
movsl
jge
add
ljmp
xchg
movsl
testb
cli
lock
jae
and
adc
lods
push
lret
cmp
data16
lret
mov
or
sub
push
mov
ds
loope
sub
fmull
add
xchg
and
push
fcmovnu
xchg
fsubl
stc
fimuls
cmpl
test
xor
sbb
inc
data16
sub
lret
sub
add
mov
and
shrl
cmp
jp
xor
stc
scas
in
or
enter
mov
mov
fcmovu
inc
mov
imul
jae
or
push
sub
or
repz
inc
sub
cmp
mov
sbb
stc
clc
xchg
insb
xlat
enter
sub
mov
xchg
and
mov
mov
mov
adc
sbb
sbb
push
sbb
insb
jle
andb
cmc
notb
rclb
pop
ret
jle
mov
pusha
cwtl
mov
movl
sub
dec
and
int3
dec
mov
inc
xchg
aas
xchg
inc
mov
int
or
and
push
cmp
ds
cmp
jg
cmp
mov
enter
gs
loope
iret
mov
cmp
scas
sub
jl
lock
enter
and
icebp
jnp
adc
out
popa
mov
jmp
add
inc
or
xor
push
test
jo
inc
andl
clc
jnp
cmp
sub
and
test
jns
fimuls
jp
push
jnp
and
sahf
push
push
adc
lea
add
leave
aas
test
hlt
mov
jnp
or
lods
das
mov
stos
and
dec
xor
sbb
adc
sbb
inc
adc
ja
pop
push
dec
jne
popf
jmp
or
pop
cmp
sub
inc
pop
and
sub
iret
and
icebp
outsl
shll
fdivrs
hlt
add
push
sub
xchg
cltd
fs
in
std
rcl
cwtl
data16
mov
mov
or
mov
add
fisubrl
jne
ret
xchg
mov
in
push
cmp
inc
ss
mov
leave
fistps
jb
pop
mov
sti
mov
push
or
dec
mov
cmpsb
in
repz
dec
add
and
icebp
push
lea
mov
mov
loope
and
test
xchg
icebp
add
rcrl
push
push
mov
outsb
and
stc
jbe
cmpps
cld
pop
xor
mov
and
or
adc
mov
xchg
mov
xchg
popa
xchg
dec
push
das
mov
mov
setge
jbe
shll
mov
adcb
addr16
loop
cmp
inc
cltd
std
aas
xor
jne
jne
repnz
cld
pusha
inc
inc
push
jo
inc
jne
daa
fucomip
push
pop
xchg
in
xchg
in
mov
ds
shl
rorb
in
push
xchg
jecxz
repz
jge
mov
aaa
pop
push
add
add
repnz
out
sbb
mov
inc
std
mov
fdiv
je
pop
bound
shl
pop
ds
and
sarl
inc
xor
cmp
adc
fwait
cmp
push
jns
ret
inc
jge
shl
push
test
insl
fldt
add
jne
and
arpl
fldl
pop
adc
mov
push
jmp
dec
enter
ds
js
xchg
pusha
jne
jg
test
imul
adc
mov
jae
rorb
in
cmp
xchg
xor
xor
call
add
rorl
xchg
and
insl
aas
xlat
cmpsl
xchg
jno
fisubs
inc
xchg
push
push
loope
push
cwtl
lock
pop
gs
sti
fbld
scas
sbb
jecxz
in
pop
cmp
adc
jge
mov
iret
lods
mov
or
push
mov
pop
lret
clc
mov
dec
pop
lock
dec
in
push
sub
ficomps
ret
bound
scas
cmp
adc
cmp
add
lds
cmp
or
jge
pushf
out
fs
int
cwtl
test
or
xchg
lret
and
mov
inc
dec
pusha
sbbl
mov
jmp
xor
lods
pop
aaa
pop
mov
ficoms
pusha
push
inc
int
repz
mov
push
movsl
cmpsb
inc
xor
call
jecxz
xlat
adc
push
xlat
fcmovbe
daa
jp
dec
jecxz
aaa
cmc
pop
imul
ss
bound
mov
inc
add
xchg
int
shlb
push
fldenv
rorb
fidivs
mov
out
dec
loope
jno
and
xlat
repnz
bsr
mov
not
mull
inc
pop
orl
xor
leave
mov
and
loop
pop
push
mov
fidivrl
stos
sti
enter
mov
clc
rclb
mov
jns
iret
mov
jno
out
test
pop
push
mov
jnp
mov
ret
test
cmpl
shll
sahf
mov
and
mov
out
jmp
pop
jae
divl
lea
mov
cmp
in
clc
jb
sub
test
lods
shll
aas
jo
cld
rorb
dec
pop
pusha
incl
and
jae
xor
clc
in
jae
imul
out
add
aas
inc
lods
xchg
outsb
cmp
out
jno
imul
je
adc
dec
fs
xor
pop
inc
cmp
jl
cmp
scas
sub
fdivs
mov
scas
jmp
xchg
ds
jmp
addr16
xchg
pop
sub
cli
out
mov
or
mov
pop
aas
call
mov
mov
cmpl
sub
inc
push
imul
cltd
xchg
and
jge
or
adc
push
and
pusha
add
out
cmpsl
int
mov
push
adc
or
loope
je
daa
jne
insl
test
testb
mov
sbb
push
mov
sub
rclb
shlb
cli
cltd
push
js
cmpb
cmp
xor
cmp
out
insl
and
lods
ret
sbb
into
cltd
pop
push
xlat
xchg
stos
stos
push
int
mov
or
insl
test
fs
lret
ss
inc
and
imul
fsubs
sbb
push
in
imul
xlat
pop
jle
repz
mov
lcall
sub
mov
rcrl
dec
enter
cs
sbb
ss
int
int3
dec
push
xor
sti
sbb
pushl
adc
jb
mov
jmp
out
mov
cmp
jb
icebp
inc
ds
jae
push
jmp
xor
sarb
into
push
push
testb
cmp
pop
fld
ret
sbb
enter
movsb
std
scas
jle
cltd
insl
xchg
and
stos
clc
and
push
and
imul
enter
add
pop
cltd
clc
arpl
lcall
jmp
ficoml
add
xchg
jp
cmp
insl
or
les
mov
es
loope
xor
in
fisubs
dec
addb
in
mov
push
mov
ljmp
xchg
fcmovnbe
rclb
mov
sbb
xchg
inc
out
fs
pushl
in
sti
or
inc
jbe
movsb
out
cmp
mov
js
nop
test
rolb
cmpsb
jge
jge
push
jmp
and
cmc
aam
and
aaa
mov
rorb
in
xchg
bound
mov
mov
push
jge
pop
testl
bound
dec
subb
and
and
cs
mov
movsb
dec
mov
pop
xor
pop
adc
inc
push
sub
enter
push
dec
mov
dec
xor
mov
xchg
subb
repz
ret
rolb
int
clc
jle
fcomip
pop
jge
subl
or
jo
movsb
mov
cmpsb
cmovg
adc
mov
xchg
add
inc
mov
std
repz
and
pop
sub
xchg
push
shl
addr16
xchg
sbb
cmpsb
repnz
mov
jg
out
sahf
mov
jecxz
ds
cli
arpl
inc
jno
lds
orb
xor
inc
and
repnz
xchg
es
mov
ds
adc
inc
das
lock
rorb
fistps
stc
push
popf
mov
dec
pushf
out
dec
cmc
bound
test
sub
aad
pop
mov
pushl
and
mov
int3
adc
loope
xchg
mov
cmpsl
ffreep
movsb
xchg
mov
mov
push
sbb
cli
and
xor
sbb
test
cld
sbb
adc
andl
sbb
ljmp
mov
sbb
dec
mov
nop
sbb
pop
cld
sbb
mov
leave
cmp
push
test
pop
sub
push
ds
inc
adc
xor
mov
add
push
dec
jo
movsl
test
out
or
sub
pop
push
std
mov
js
cwtl
call
mov
std
dec
mov
mov
xor
pop
sbb
jge
ret
rclb
dec
mov
push
or
stos
pop
xor
idivl
and
insb
dec
dec
ds
adc
lcall
out
aad
inc
leave
xlat
loope
jae
jnp
sbb
adc
xchg
sub
push
xchg
and
cmp
push
sti
adc
scas
xor
cmp
mov
pop
rcrb
inc
sbb
popf
mov
ret
ret
es
sbb
lea
mov
push
insb
inc
dec
or
inc
icebp
push
addr16
or
mov
cmp
into
mov
and
test
lea
in
sbbl
aaa
fwait
mov
xchg
and
cmp
out
movlps
lret
fcomps
sub
and
push
pop
or
inc
pop
mov
iret
out
aam
mov
jecxz
or
das
pop
mov
arpl
outsl
pop
fidivrl
xorl
js
sbb
jle
or
mov
xchg
loopne
lahf
push
xchg
cmp
lahf
fldt
jmp
aam
sub
mov
sbb
push
ficomps
leave
fnsave
loop
lret
xor
repz
loopne
mov
std
pop
stos
inc
pop
and
clc
ds
push
push
fildll
mov
dec
shl
sarl
pusha
imulb
popa
enter
jno
mov
in
loopne
push
inc
icebp
repz
je
lds
push
shll
cs
lret
adcb
inc
inc
mov
popa
xor
mov
mov
lock
div
lock
pop
into
add
in
shrl
push
lea
filds
mov
fdivrl
shlb
mov
add
jecxz
sbb
push
cltd
dec
sub
push
loop
inc
add
mov
jle
lods
scas
xchg
rclb
pop
bound
out
sti
mov
mov
add
pop
or
mov
cltd
stos
xor
xchg
xchg
xchg
sub
das
mov
hlt
jo
fwait
jns
push
repnz
xchg
xchg
push
cmpsb
pop
xor
and
mov
mov
inc
add
mov
cli
mov
pusha
mov
lahf
sbb
cmp
adc
or
fisttpll
push
dec
mov
ljmp
mov
fsubrs
jnp
cwtl
not
mov
pushf
mov
mov
sti
push
add
dec
lds
jb
mov
sbb
xor
les
das
repz
test
mov
mov
push
or
dec
sti
mov
dec
push
cli
aam
cmp
mov
dec
sbb
pop
sar
sub
adc
mov
pushf
inc
inc
iret
loop
and
sti
push
mov
add
sbb
iret
ret
enter
fs
je
dec
ror
cmp
ds
lret
adc
jg
lret
jne
xchg
rcr
xorb
pop
jmp
cwtl
mov
iret
sbb
pusha
loope
rcrb
scas
lret
add
rolb
cmc
ss
xchg
out
sbb
subl
or
fistps
lret
lods
rcl
xchg
inc
inc
pop
repnz
push
sbb
and
scas
push
rorl
into
popa
lods
stos
es
mov
or
xor
test
push
push
scas
pop
dec
jb
jns
lods
xchg
pop
fiaddl
test
and
or
mov
out
out
inc
scas
dec
repnz
aad
adc
loopne
mov
mov
jbe
lock
lahf
repnz
xchg
dec
xchg
adc
sti
loop
and
hlt
mov
or
mov
fistpll
lea
fmulp
push
push
nop
jnp
cltd
dec
movsl
xlat
loopne
sub
push
mov
inc
mov
es
mov
imul
popl
or
inc
in
xlat
or
aas
ss
lods
fwait
lods
and
stc
loop
jns
jecxz
dec
or
test
sub
movaps
inc
leave
xor
adc
pop
cmpsb
cmc
cmp
jle
mov
ficompl
rolb
ret
ja
mov
push
mov
stos
cmpsl
out
stos
adc
push
mov
fcmovb
push
in
iret
jbe
push
in
xchg
decb
inc
sbb
orb
stc
pusha
mov
test
lods
pop
ret
fs
xchg
and
cmpsb
cmpsl
push
dec
dec
and
shlb
loop
popa
xchg
sub
cmp
divl
ja
clc
jecxz
loopne
sub
test
mov
ljmp
mov
jno
inc
outsb
insl
not
fsubrp
jo
leave
mov
push
push
test
js
stc
adc
dec
shlb
cmc
mov
mov
cmp
push
aad
fdivrs
inc
add
and
sarb
ss
aam
scas
mov
loop
jp
mov
sub
lret
ds
mov
sub
pop
xor
fistpl
mov
ss
inc
into
mov
addr16
roll
mov
pop
iret
push
movsb
jge
cmp
push
sbb
add
push
sub
jg
adc
lahf
es
mov
mov
mov
divl
pop
or
mov
xchg
scas
lret
sub
enter
test
out
pop
mov
pop
and
out
aam
insb
mov
cmp
mov
jcxz
cmp
ds
pop
xor
mov
mov
ljmp
dec
movsl
dec
cld
xor
sbb
repnz
xchg
cli
adc
jecxz
push
xor
inc
sarb
in
lcall
daa
fdivs
pop
bnd
fmulp
add
inc
repz
pop
ja
push
pop
addb
dec
arpl
mov
cmpb
fildl
aam
xor
inc
dec
pop
andb
inc
inc
mov
sub
repnz
mov
push
push
int
sbb
dec
mov
out
and
cmp
clc
mov
xor
and
cltd
add
ja
sub
lret
push
mov
cwtl
xor
sub
pop
mov
pop
outsl
fimull
add
cltd
push
xchg
popa
dec
out
push
loopne
and
mov
negl
std
fwait
cmpsb
adc
cltd
adc
cltd
out
mov
scas
adc
fimuls
dec
mov
iret
dec
js
rcll
sub
test
mov
fdivp
adc
sub
or
in
mulb
aam
xchg
stos
int
andb
jo
fisubrl
ljmp
enter
aad
jmp
ss
or
fcoms
and
xor
out
xor
pop
fistl
fwait
lods
mov
add
mov
dec
add
add
dec
imul
out
stos
inc
xchg
insb
lret
xor
fdivr
jp
popf
sti
mov
negl
sub
adc
dec
mov
sub
ljmp
shlb
aad
scas
loop
and
ljmp
hlt
pop
xchg
mov
dec
sub
fdivp
or
push
pop
push
mov
dec
xor
jl
stos
adc
arpl
inc
pusha
mov
pop
aad
scas
inc
addr16
or
mov
cmp
or
test
orb
pop
ficoml
jle
lret
dec
xchg
leave
movsl
mov
push
rclb
mov
fwait
dec
enter
icebp
ss
rcrl
mov
push
xlat
adc
rcr
push
shrb
push
fdivp
xchg
fdivrs
or
nop
roll
mov
adcb
xchg
stos
pop
in
stos
push
out
lahf
sub
push
jnp
bound
push
dec
mov
lods
js
cmp
pop
adc
shll
push
cli
cs
mov
lret
fmulp
push
clc
fsubs
inc
pop
and
cs
dec
jb
xchg
and
xchg
adcb
sbb
call
mov
stos
push
popf
and
shll
or
adc
xchg
rorb
jl
pop
or
or
inc
push
loop
jle
fs
fnclex
mov
push
xchg
jbe
xchg
or
sub
and
xorb
and
and
ret
cmp
test
insl
movsl
cltd
mov
mov
sbb
repz
pop
lcall
scas
sar
mov
jle
or
inc
or
popa
jno
jne
dec
cli
ja
lcall
jl
and
mov
stc
mov
jne
outsl
test
dec
jg
push
jb
xor
lret
ret
cmovs
jb
and
mov
loopne
mov
stc
js
add
outsb
pop
or
adc
lcall
cmp
lcall
xor
aad
jecxz
pop
gs
adc
sbb
jecxz
xorl
cmpb
nop
fildll
mov
test
mov
adc
mov
add
adc
pop
xchg
sti
jbe
pop
or
xchg
jb
fisttpll
pop
push
xchg
div
mov
push
shlb
mov
or
cmc
xchg
loope
mov
addl
aad
jns
mov
cmp
mov
dec
xor
int3
xchg
dec
or
pusha
rep
cli
shl
ficoms
and
enter
enter
test
ds
xchg
sub
ds
aam
cltd
paddsw
xor
notb
sbb
andl
mov
in
sbb
stos
ss
mov
ljmp
adc
lods
pushf
sub
add
fistps
pushf
jns
rcl
cmp
idivb
aad
jbe
loopne
xchg
das
pop
xor
jno
mov
ret
push
adc
xchg
stos
xor
int
ss
sahf
inc
icebp
lock
aad
rcr
mov
loope
leave
inc
mov
test
pop
add
iret
add
ss
aas
leave
int
ja
pop
push
pop
mov
or
mov
inc
jbe
into
and
cmpsl
jne
inc
scas
or
dec
das
and
add
fiaddl
mov
mov
test
arpl
sahf
push
imul
mov
xor
dec
sub
sub
or
inc
or
sub
inc
jb
push
dec
jno
les
orl
icebp
mov
std
inc
mov
test
sbb
addr16
dec
rcrb
sub
aas
sahf
xor
cmp
xor
rcr
pop
outsb
rol
addr16
push
out
sub
mov
popf
imul
punpckhbw
inc
das
sbb
popf
mov
fisttpl
int3
push
push
cli
call
xor
sub
xor
push
rcll
stos
cld
jp
or
mov
in
or
ss
push
adc
pop
out
jl
icebp
out
pushf
adc
lock
in
mov
inc
fyl2x
pop
mov
lods
pop
xchg
mov
and
sub
and
lods
mov
in
mov
scas
pop
mov
xchg
mov
mov
mov
cmp
std
mov
mov
sub
pop
jae
pushf
xor
mov
lods
es
pop
xchg
daa
add
mov
xchg
sub
cmc
ss
inc
pop
lcall
int3
je
outsl
push
inc
into
aas
mov
aam
movsl
fs
sbb
clc
test
cmp
jnp
mov
imul
jae
cmp
or
mov
dec
mov
in
ror
rcrb
or
mov
mov
pop
leave
dec
pushf
mov
cmp
jmp
lcall
jne
insl
lea
std
into
scas
xor
std
enter
dec
and
or
jb
or
inc
cli
adc
stc
mov
inc
lods
repnz
adc
cmp
xchg
shlb
or
fidivl
cmc
test
hlt
imul
cmpsl
sub
mov
mov
sti
add
ret
jae
pop
jp
pop
test
push
adc
js
je
jp
jb
and
in
sub
imul
jae
sbb
jo
sub
and
xchg
mov
dec
imul
ss
testl
int
jno
and
mov
addl
cmp
cmc
or
dec
mov
imul
shr
movsb
decl
dec
out
lea
lcall
jmp
xchg
sbb
shrb
fs
and
cmp
out
gs
push
xchg
pop
icebp
lcall
jmp
inc
cmp
test
rcr
inc
stos
jae
mov
frstor
mov
cmc
cmp
lods
mov
dec
or
stc
aas
dec
aad
sarb
push
testl
jae
into
adc
lds
adc
and
dec
pop
hlt
and
je
xchg
mov
jle
sahf
insb
pop
sub
mov
mov
push
mov
xchg
lret
add
and
or
mov
sti
movsl
lahf
sub
mov
xchg
mov
xor
popa
out
mov
imul
lods
enter
cmp
dec
push
pop
movsb
push
rorl
inc
adc
leave
cmp
hlt
rcrb
add
mov
pop
jl
xchg
jne
das
add
shl
in
lret
push
arpl
jle
dec
or
in
arpl
mov
xchg
addb
mov
ret
xchg
ja
sti
jg
xchg
lcall
jg
dec
push
ljmp
inc
push
xchg
xor
jns
push
out
mov
mov
push
fnstenv
out
sti
mov
movsb
les
lods
jge
xor
jge
popl
inc
cmc
clc
fstps
int3
negl
jmp
aam
xchg
xchg
pop
and
xor
mov
jp
fwait
movsl
xchg
dec
sbb
cltd
insb
add
inc
movsl
pop
clc
gs
push
mov
jo
xor
rcr
adc
int
outsl
lret
pop
cmp
lret
arpl
cmpsl
jecxz
je
jne
imul
icebp
push
test
or
enter
fs
fnstcw
sti
das
icebp
jl
inc
fwait
rol
loope
inc
mov
mulb
je
dec
movsb
aad
daa
rcll
or
mov
shrl
add
xor
mov
fstp
outsl
aaa
xlat
xor
jns
aas
clc
pop
dec
xchg
dec
dec
cmp
push
outsl
sti
jbe
cmp
fwait
sti
hlt
clc
jae
movsb
push
std
setae
cs
add
dec
xor
add
pop
test
pop
pop
shl
sub
mov
out
jne
inc
xchg
push
fcomps
enter
sbb
sub
cs
movsl
cmp
dec
cmpsb
mov
imul
test
test
daa
insl
rcrb
adcb
mov
and
jmp
into
mov
push
fisttps
test
imul
xchg
push
add
test
leave
or
xlat
jb
aad
jne
xchg
pop
xchg
mov
xor
std
je
js
jecxz
adc
sbb
loop
push
add
movsb
incl
push
mov
jno
mov
push
and
dec
pop
mov
in
cltd
push
imul
mov
mov
or
jge
mov
and
ficomps
insl
filds
stos
pop
aad
mov
push
sub
xchg
mov
mov
pushf
pop
dec
sub
frstor
sbb
aas
adc
addr16
dec
cmp
xor
jbe
rcl
daa
movsl
rclb
or
insb
cltd
aaa
push
icebp
in
or
stc
mov
adc
mov
bound
inc
mov
cmp
ljmp
dec
xor
xchg
push
mov
push
cli
mov
fdivrs
mov
test
add
add
je
sahf
sahf
sbb
pop
jne
or
cwtl
lea
aaa
or
sbb
pushf
mov
pop
xor
pushf
add
in
movl
or
cmp
push
pop
or
out
aam
mov
rorb
out
sub
pop
fcoms
sbb
sbb
stos
shrl
dec
cmc
mov
fimull
popa
jg
cmc
out
inc
pusha
mov
repz
lods
pop
int
into
in
mov
out
and
cs
repnz
ja
cmc
imul
aad
sub
stc
sbb
and
jns
mov
xchg
sub
out
add
add
insb
movsl
stos
sbb
dec
mov
popf
sbb
xor
sub
adc
sub
cmp
data16
jb
js
popf
mov
fdivrl
and
or
pop
mov
mov
filds
mov
pop
cmpsb
jb
ljmp
and
mov
xlat
sarl
in
es
push
or
mov
imul
pop
rolb
pop
mov
lock
xchg
std
sub
and
jnp
int
outsb
in
lock
stos
ret
mov
add
adc
addb
dec
and
ret
shl
cmp
popf
xor
sbb
scas
and
adc
mov
aad
cwtl
mov
in
jecxz
rolb
subb
cli
repnz
pop
or
pop
jmp
and
cmp
fnstenv
insl
pop
dec
sbb
in
lds
inc
imul
scas
sub
ljmp
pushl
inc
gs
test
or
jno
dec
bound
jle
and
data16
je
inc
outsb
mov
movsl
push
repz
arpl
dec
fwait
cmp
push
aas
bound
add
mov
scas
fists
jbe
mov
mov
dec
jae
mov
pop
cmc
ds
mov
xlat
in
push
push
sub
loope
mov
loope
popa
push
and
pop
cmp
mov
mov
mov
outsb
insl
mov
mov
pop
loopne
push
sbbl
cmpsb
jp
xor
mov
xchg
adc
enter
add
loope
jecxz
aaa
mov
frstor
scas
and
sbb
inc
push
or
cwtl
enter
adc
mov
sub
sub
and
in
add
jecxz
pusha
in
in
pop
mov
roll
xor
mov
test
cli
popa
pusha
int
movsb
out
lock
mov
insl
sbb
xchg
out
popf
inc
xorb
pop
xchg
lods
mov
loope
stos
dec
sbb
cwtl
inc
add
push
mov
rorl
jg
mov
outsb
mov
movsl
xor
imul
movsl
pop
adc
mov
movsl
mov
mov
icebp
push
push
loop
aas
test
rcll
je
lcall
ret
aas
cmpl
sub
push
test
fcomps
mov
rcr
mov
cmpsl
repnz
out
xchg
ja
push
mov
sub
mov
jg
add
dec
add
push
pop
push
mov
and
aam
lret
arpl
jo
cmp
and
out
jo
dec
out
inc
pop
out
clc
cmpsb
and
adc
bound
mov
xor
sbb
adc
lfs
dec
loopne
mov
mov
pop
pushf
dec
cmp
sub
out
ds
xor
xchg
jecxz
sbb
or
fdivs
mov
shrb
dec
xor
rcl
mov
jo
out
bound
jo
mov
dec
stos
adc
jp
fs
push
stos
jno
xor
pop
fdiv
vmovss
int
push
xchg
ret
out
std
or
xor
adc
xchg
cwtl
inc
out
scas
push
sub
dec
outsb
mov
pop
push
sub
test
inc
add
les
sub
orl
stos
das
xor
dec
jne
mov
add
cmp
jo
xor
mov
mov
movsb
xor
add
cmpsl
mov
xchg
jnp
sahf
icebp
int
add
jnp
rol
clc
std
inc
lock
mov
iret
push
sbb
je
scas
mov
pop
aad
rcrl
or
sub
mov
lods
es
or
cli
lods
pop
push
xchg
outsb
ds
add
lahf
andb
xor
jmp
mov
jnp
ja
sbb
pop
pusha
cmp
lcall
mov
push
enter
cmp
movsl
xchg
push
jb
xchg
xchg
mov
lods
mov
mov
popa
mov
xchg
mov
das
inc
mov
aaa
je
aas
mov
jmp
int
inc
add
and
mov
sbb
and
cmp
in
out
push
scas
or
scas
in
enter
inc
pop
xor
test
mov
sbb
pop
mov
movhps
cmp
std
lock
add
xchg
pop
movsl
cmp
jmp
test
fistl
xchg
nop
mov
xchg
mov
add
mov
mov
repnz
ja
sub
sub
or
out
xchg
and
jp
rclb
jecxz
cmc
xor
test
arpl
das
cmp
sub
dec
scas
lret
divl
loop
daa
shrb
cmp
lds
jne
or
cli
aas
dec
push
jmp
ret
stos
repnz
push
aam
popa
push
push
jle
cmp
repz
push
mov
cwtl
notl
push
jno
addr16
clc
push
in
sub
scas
sub
xor
sbb
pusha
jae
fsubrs
repz
fcom
not
lret
ror
imul
imul
mov
push
nop
sub
pop
push
mov
hlt
push
add
es
and
jmp
jae
cmp
ss
mov
cmp
in
mov
fwait
stos
and
mov
loopne
mov
aam
or
loope
jle
add
sti
sub
adc
leave
movsl
dec
mov
inc
popf
test
mov
loopne
pmulhw
insb
dec
push
mov
jge
ja
test
lds
mov
push
repnz
int
xor
in
out
push
dec
mov
std
data16
icebp
mov
out
adc
jbe
rcl
cmp
cld
cli
aas
sub
lods
add
hlt
pop
cwtl
or
cmpsl
rcr
outsb
inc
imul
lock
hlt
rclb
leave
pop
add
mov
sub
je
fcomip
push
pusha
je
insb
mov
bound
movsb
rcll
pop
jnp
and
pop
inc
adc
sub
iret
int
js
in
sahf
adc
test
clts
add
dec
ljmp
popf
xchg
les
ds
add
movsb
push
pop
scas
mov
repnz
add
shll
xchg
cmp
mov
scas
cmpsl
lahf
pop
das
sub
and
cmpl
aam
xchg
or
loopne
mov
jno
stos
cmp
scas
xchg
movsl
lock
jle
and
mov
stc
mov
cmp
out
pop
popf
inc
into
adc
andps
cmp
cld
cmpsl
mov
push
or
jge
shll
mov
jno
adc
and
jo
hlt
fistps
fldl
and
lahf
jae
movsb
mov
dec
aam
sub
jmp
xchg
mov
push
repnz
outsl
dec
int
push
fnstsw
cmp
sbb
shl
insl
add
std
loopne
dec
call
mov
adc
ljmp
daa
arpl
cmp
add
insb
xchg
test
int3
sar
xor
jg
dec
pop
sbb
out
add
das
mov
loope
fldl
cmc
xchg
xchg
mov
in
imulb
sbb
inc
in
testb
adc
xor
jecxz
insb
mov
cs
cmp
lcall
mov
mov
cmc
shl
jbe
cmpsb
int3
sub
inc
es
xor
xor
les
jecxz
inc
in
mov
push
ficomps
nop
cmp
add
mov
mov
fbstp
ja
inc
sti
xor
test
adc
pop
add
pop
into
mov
repnz
pop
mov
xchg
sub
mov
pop
scas
movsb
lods
jnp
cmp
mov
scas
imul
mov
ja
or
adc
cmp
sahf
ret
xor
shrb
stc
fisttpl
pop
mov
cmp
jnp
popa
mov
shlb
in
xor
arpl
fmull
sub
fsubs
xchg
or
scas
sub
jns
mov
jmp
insl
decl
xor
mov
mov
gs
or
adc
lods
stos
loopne
stc
jne
lret
add
out
mov
dec
cmp
popf
divb
aas
setl
adc
or
jle
inc
xor
mov
xor
sub
das
aas
xchg
nop
or
and
xor
sbb
xchg
adc
loopne
and
dec
mov
mov
cmc
inc
ret
and
mov
jne
mov
cmpsb
and
inc
push
mov
inc
lods
mov
jg
xchg
xor
inc
mov
mov
lret
or
cmpsb
call
sbb
mov
mov
aas
mov
shll
test
jnp
rcll
jle
daa
mov
add
scas
mov
stos
lea
lea
loop
or
xor
push
dec
jnp
cmp
and
push
dec
int3
sarl
into
ljmp
dec
ror
fisubrl
scas
leave
popa
or
mov
and
push
in
sahf
mov
sub
lret
scas
inc
push
imul
fists
sbb
notb
mov
lock
and
jge
aad
rorb
pop
cmp
rolb
pop
xor
xacquire
addr16
cmp
or
dec
push
stc
fiadds
insb
scas
int
scas
add
xchg
jnp
inc
fnstcw
clc
addr16
jge
pop
cmp
std
hlt
in
jmp
loop
fsubl
imul
fwait
rorl
xor
add
js
inc
lret
out
cmp
pusha
jbe
cld
popf
xchg
xchg
cs
es
je
add
ret
imul
movsl
xor
push
iret
pop
dec
pop
jns
push
ficoml
jecxz
mov
popa
sarl
and
ret
movsb
mov
cltd
test
movhps
sbb
or
inc
pop
fsubrs
subl
lea
ficoms
cmpsl
outsl
jns,pt
push
gs
iret
aad
cmpsb
mov
hlt
xchg
sub
xchg
aad
stc
lock
jo
and
add
xor
fldl
push
cmp
jbe
in
loop
test
cmc
jo
add
add
or
cmp
aad
push
out
pop
push
jno
xor
gs
loop
lea
or
xor
ror
repnz
mov
outsb
push
cwtl
pop
sbb
dec
mov
sbb
jnp
mov
and
cmp
or
xchg
aas
mov
mov
daa
jae
dec
psubb
inc
rol
jbe
sahf
cltd
jp
push
jp
push
sbb
and
cld
insl
out
xor
xchg
testl
xlat
xor
pusha
outsb
push
das
je
hlt
orl
outsl
rclb
jbe
jno
outsl
sub
push
mov
jae
fadd
outsl
jo
jge
pop
or
sub
bnd
lods
cmp
xor
xchg
xor
insb
mov
adc
js
xlat
fwait
loopne
mov
mov
pop
xchg
cmp
inc
mov
pop
sub
fdivl
push
sahf
mov
sub
roll
mulps
adc
xor
out
add
jmp
inc
mov
inc
jp
mov
xchg
mov
pop
cmpsl
sbb
sbb
push
add
mov
lods
cmc
out
pop
iret
or
mov
lcall
imul
mov
std
cmpb
fdiv
sbb
mov
xchg
cmp
rcr
mov
lcall
fdivl
je
adc
adc
loopne
jl
xchg
ja
maxps
mov
dec
addr16
dec
into
xchg
stos
mov
mov
pop
daa
mov
pop
jmp
sub
aam
push
jge
inc
loopne
jae
and
dec
dec
or
iret
scas
inc
cmp
pop
cli
pop
sub
push
lret
push
mulb
mov
mov
test
pop
sub
or
shl
dec
pushl
lods
into
fcoml
cmp
sbb
call
dec
leave
insb
mov
mov
mov
mov
popl
dec
sub
loopne
dec
fwait
jmp
outsl
jl
cmpsb
out
cmp
std
mov
mov
clc
mov
pop
aas
sbb
mov
shll
cmpsl
xchg
lods
and
in
lcall
push
pop
jae
pop
and
or
sub
push
sub
pop
test
mov
das
shll
sbb
push
dec
inc
jp
xor
movl
xchg
sub
cmp
mov
fnstenv
stos
out
enter
jge
scas
aas
xchg
sarb
push
mov
or
jg
pop
xor
lret
ja
cmp
dec
dec
sbb
es
pop
shlb
push
jg
clc
xchg
mov
jmp
pop
cmp
dec
popa
cld
ret
add
sub
sub
dec
xor
sbb
pop
mov
enter
cmp
jge
pop
adc
push
scas
insb
in
in
dec
jbe
int
ja
cmp
dec
insl
ljmp
ljmp
inc
aaa
dec
repnz
pop
xlat
mov
je
mov
mov
scas
popf
pop
mov
loope
cltd
stc
xor
mov
jb
pop
cld
cli
add
aad
push
loope
inc
test
mov
int
add
aas
adc
add
or
out
push
xor
dec
fcmovu
jp
ljmp
adc
cmc
pop
xor
fwait
enter
cmpl
push
dec
sarb
pop
dec
loop
pop
aad
jp
int3
or
adc
inc
sbb
outsl
std
cld
out
in
cwtl
sub
dec
dec
push
movsb
and
mov
ficomps
mov
test
dec
arpl
in
sahf
pusha
xor
negb
enter
rorl
sahf
fisubs
and
add
dec
daa
push
xor
daa
push
out
push
adc
test
pop
popa
mov
das
sti
ret
jle
jp
enter
mov
push
sbb
mov
scas
pop
outsb
sbb
lcall
xchg
dec
imul
mov
pop
cmp
out
cltd
xchg
test
imul
sub
or
out
xor
push
mov
push
test
xchg
mov
xor
adc
daa
in
dec
sub
pop
mov
das
dec
jae
mov
mull
inc
dec
bnd
xchg
sbb
dec
ficomps
cmp
int
xor
ds
inc
xor
sbb
and
repnz
notb
and
repz
sti
scas
movsb
test
je
dec
cmp
or
add
insb
mov
fsubs
scas
fldenv
lods
cmp
xor
push
fildl
mov
dec
shll
cld
adc
mov
push
gs
fisttpll
add
inc
loope
dec
and
imul
pop
mov
jne
xchg
dec
push
addr16
xor
aad
xor
add
push
popa
jns
imul
cld
iret
lahf
push
mov
fdivl
or
inc
mov
jp
dec
or
push
xchg
lahf
mov
stos
inc
loop
sbb
inc
out
xchg
cmpb
lea
cmp
mov
test
aas
imul
jbe
mov
add
xor
cmpsb
sbbl
rclb
aad
lret
popf
loope
xchg
push
in
test
cmp
jb
jl
es
inc
adc
jb
fidivrs
in
inc
add
arpl
and
outsb
inc
dec
je
mov
lock
in
pop
shrl
mov
fcomps
push
xchg
int3
jmp
xchg
push
repz
nop
loop
jo
and
mov
xchg
outsl
data16
js
inc
and
xchg
cmp
bound
cmpsb
add
sbbb
cmp
mov
pop
ss
xlat
mov
jns
fmul
test
mul
mov
or
outsb
pusha
cltd
sbb
add
outsl
fnstenv
arpl
rcrl
cmp
or
out
xor
outsl
movsb
inc
test
or
fidivl
sbb
mov
inc
sub
inc
loopne
or
add
push
push
push
aas
mov
xchg
push
ss
popf
inc
xchg
movsb
mov
cmp
iret
outsl
into
xor
push
jnp
movsb
lods
adc
xlat
mov
jmp
adc
hlt
and
pop
sti
shll
dec
pop
jmp
ret
push
push
and
mov
push
iret
or
addr16
addr16
jg
data16
sbb
mov
xor
mov
add
mov
dec
outsl
stos
add
mov
adc
jl
scas
mov
mov
mov
repnz
loop
cmpsl
pop
sti
push
add
mov
xor
neg
xchg
or
add
dec
fs
shl
jmp
fisubrl
mov
adc
sbb
xor
pop
xchg
jmp
adc
outsb
mov
lret
ja
mov
call
fwait
popf
fwait
lds
fldt
sbb
jae
mov
hlt
xor
out
cwtl
cmc
stos
mov
shlb
or
inc
mov
mov
xchg
xor
mov
push
xchg
cmpsl
daa
pop
pop
stos
scas
movsb
in
adc
push
cltd
sbb
mov
add
mov
pop
outsl
sbb
xor
push
lret
mov
and
adc
mov
les
imul
or
aam
packuswb
xchg
nop
fstl
shr
das
adc
pop
frstor
adc
mov
mov
dec
or
test
movsb
push
dec
call
sub
sbb
pop
sbb
or
or
push
pop
and
dec
mov
pushf
sahf
jmp
fs
pop
pusha
xor
push
test
sub
movsl
dec
fldt
shrl
mov
pop
aam
adc
adc
xor
loope
mov
xor
adc
jl
enter
into
sahf
mov
xchg
xchg
sub
sub
test
add
cli
cmp
test
push
push
scas
pop
adc
xorb
dec
pusha
push
sub
dec
loop
shlb
std
in
dec
sub
xchg
inc
out
arpl
jne
movsl
int
test
pushf
out
int3
lds
sahf
jo
xchg
jge
dec
icebp
movsb
lea
decl
and
rsqrtps
std
push
call
xchg
retw
int
and
mov
shlb
or
push
push
movsb
fs
mov
ret
inc
adc
mov
jmp
aaa
or
das
lret
nop
stos
adc
data16
sbb
scas
mov
xor
mov
imul
sarb
movsb
mull
inc
adc
loop
and
dec
inc
mov
xor
clc
shll
lods
mov
js
add
lods
jmp
ja
cmp
ds
and
mov
pusha
pop
and
fwait
jp
test
fldt
push
or
push
lods
faddl
clc
inc
nop
clc
cmpsl
sbb
aas
push
xor
or
dec
dec
and
mov
fsts
inc
imul
fldenv
es
mov
push
lret
add
cmp
imul
push
in
xchg
ret
jmp
shlb
pop
ja
mov
mov
push
mov
lcall
push
test
add
inc
cmp
push
pop
inc
pop
lret
xchg
mov
scas
imul
mov
xor
jae
adcl
data16
mov
jg
es
outsl
in
aam
sub
daa
loop
mov
test
lock
imul
outsl
add
jno
cli
jnp
or
push
leave
lods
xlat
iret
or
adc
inc
pusha
sub
pop
mov
push
push
and
or
mov
enter
mov
cmp
ja
jle
cwtl
jnp
push
push
dec
sub
add
pop
jbe
jb
dec
mov
flds
add
or
arpl
loop
roll
mov
jl
jo
jg
lds
fmuls
or
aad
jne
jp
fldl
jl
xor
imul
cmc
dec
jno
fidivrl
out
test
sub
mov
dec
sbb
out
decb
mov
out
inc
enter
push
lret
out
xlat
xor
fsubrs
pop
add
pop
and
hlt
xchg
push
fsubl
pushf
int3
popa
scas
and
pop
insb
mov
add
in
mov
lock
fsubr
rcrb
jmp
daa
mov
stos
movsb
ja
in
fisubs
negb
jp
pushf
jns
ljmp
pusha
xchg
xorb
mov
add
repnz
push
inc
fldt
mov
mov
inc
xchg
xorl
push
dec
insl
jp
add
out
jl
cmpsl
roll
in
jb
in
shll
cmp
jl
imulb
jns
movsl
dec
ret
push
cld
ds
sub
aad
mov
push
jo
and
aas
jne
test
call
jl
sarl
or
or
in
test
or
outsb
rcpps
jne
adc
jo
mov
push
cmpsl
push
mov
faddp
mov
lret
or
jae
es
or
cltd
in
mov
mov
jge
out
lods
sbb
mov
rcll
jno
mov
andb
dec
xchg
test
adc
dec
imul
xor
cli
inc
cmpsl
push
jo
mov
mov
fwait
cmpsl
sbb
bound
ds
fnstsw
pop
arpl
data16
aaa
sub
outsb
ja
je
jne
test
aaa
sbb
mov
mov
in
xor
in
mov
push
inc
lock
jle
push
pop
dec
xlat
jp
in
mov
push
dec
xchg
dec
pop
add
movsb
push
push
pusha
pop
mov
pushf
scas
popf
shl
jne
dec
sbb
out
pusha
mov
push
leave
jmp
pop
dec
ret
mov
pop
push
adc
jg
test
jo
out
jmp
xchg
cmp
push
cmp
adc
sbb
daa
adc
cwtl
mov
pusha
or
lds
gs
ficompl
adc
test
dec
stc
push
xchg
call
inc
jecxz
shlb
lds
popa
testb
mov
cmpsb
cmp
enter
adc
pop
adc
lahf
imul
icebp
mov
sbb
xor
scas
mov
jne
jne
xor
testb
sbb
adc
nop
jo
jne
xchg
fmuls
sbb
xchg
dec
jp
push
cmpsb
sub
mov
mov
lock
je
push
jnp
jno
loope
addb
int
ds
and
mov
ficomps
mov
push
andb
sbb
push
fwait
cmp
sbb
mov
sti
pop
into
jmp
mov
sub
or
neg
ret
fsubrl
and
in
lea
insb
sub
lret
in
push
sub
mov
pop
cmpsl
cmp
fists
inc
in
in
xchg
mov
sbbb
dec
sub
dec
dec
ret
adc
cmp
lea
pop
pop
clc
jp
mov
out
jl
push
mov
mov
xor
std
int
cltd
mov
scas
xchg
daa
mov
xchg
push
push
and
out
int
mov
jle
sub
and
mov
mov
sub
std
adc
sub
jl
daa
push
outsb
aas
sarl
inc
adc
mov
xchg
cld
dec
das
cmc
mov
loope
dec
ficoml
pop
test
gs
cld
arpl
clc
nop
pop
and
push
jp
rcll
notl
mov
orb
arpl
fisubrs
push
leave
pop
and
jecxz
jb
insl
call
inc
or
xchg
lods
mov
sub
or
adc
inc
fiaddl
dec
pop
leave
cs
rclb
andl
or
mov
sahf
adc
pop
cmp
into
bound
sub
push
mov
mov
les
out
enter
add
or
adc
test
popf
lcall
jae
push
int3
xchg
sub
sbb
jns
mov
sarb
sbb
push
xchg
in
xchg
jp
jmp
shlb
and
or
cmp
cmpsb
aam
inc
mov
pushf
rcll
pushl
ret
ljmp
sub
mov
xchg
or
cmp
lods
mov
cltd
adc
xor
mov
or
bound
shrl
pushw
add
aaa
mov
xor
out
test
inc
shll
and
push
and
loopne
subb
jb
ja
out
icebp
adcb
push
test
sbb
rcrl
and
mov
popa
cmpsb
mov
pop
sub
pop
inc
jnp
movsb
lods
sarl
pushf
xchg
and
int3
xchg
cmpsb
cmp
xor
dec
xorl
out
insl
pop
sbb
mov
outsb
jl
je
mov
add
push
fisttpll
aas
out
xor
rolb
adc
and
movsb
sarb
push
repz
add
sub
out
pop
cmp
add
not
push
imulb
mov
and
jle
les
movl
les
lcall
xchg
daa
jnp
out
inc
xorb
mov
cli
pop
adc
mov
push
mov
and
rcrl
es
icebp
testb
sahf
xchg
dec
jp
je
dec
sahf
xor
jno
push
mov
clc
stc
testl
dec
sti
aam
pop
jbe
sti
mov
faddl
push
and
imul
scas
pusha
push
pop
out
cli
xlat
mov
cli
out
push
cwtl
xor
jp
rorb
xchg
and
je
inc
pop
xor
mov
mov
fbld
sbb
aad
es
subb
test
fs
call
jb
cmp
mov
ja
add
nop
arpl
pop
mov
test
stos
loopne
adcl
hlt
jle
call
fsubrl
sbb
mov
aam
add
sbb
add
dec
stos
adc
jecxz
imul
pop
push
cwtl
int3
bound
inc
pop
xor
xor
mov
imul
xchg
popf
negl
aaa
adc
xor
jns
hlt
pop
lret
jp
icebp
adc
sti
iret
add
or
aam
in
xchg
cs
stc
testl
inc
adc
ret
push
pop
push
roll
mov
lods
adc
rorl
pop
pusha
jl
jnp
sbb
pop
jne
out
js
les
inc
clc
or
imul
jg
mov
lcall
lahf
mov
push
push
sub
pusha
and
cmp
inc
dec
pop
xchg
lahf
cmp
push
cmpsb
mov
mov
aam
mov
in
sub
lods
mov
setp
je
pop
push
xlat
dec
adc
mov
cmp
pop
mov
popf
sub
mov
es
pop
test
and
inc
add
mov
shlb
fisubrs
dec
loope
add
js
pop
in
pop
ret
mov
dec
dec
arpl
out
or
mov
hlt
push
ss
xorl
xchg
ja
arpl
sub
push
pop
pop
push
pop
xchg
adc
cwtl
test
jmp
dec
push
or
scas
out
jb
sub
mov
xor
push
xchg
fdivrp
ss
andps
popf
stos
cmp
and
mov
enter
pop
cltd
xchg
orb
cld
mov
aaa
lcall
push
ret
mov
sarb
fs
mov
or
pop
ret
cmc
int3
jmp
mov
jecxz
push
jo
ror
adc
xor
xchg
or
clc
dec
cmc
adc
xorl
inc
das
and
mov
movsl
xlat
and
add
push
test
movsb
push
push
in
xor
enter
fldt
and
pop
rcr
xor
int
push
jo
jp
dec
mov
out
popf
adc
lock
sub
aad
and
rcrb
outsl
mov
gs
stos
test
rorl
and
pop
jno
mov
mov
jo
cmp
push
imul
fstl
mov
mov
mov
mov
sub
inc
fldl
out
loopne
cmp
push
rep
es
pop
stos
sbb
push
inc
xor
push
mov
cmpb
lds
fwait
or
mov
rcrb
mov
jae
jmp
push
imull
mov
push
lea
ljmp
push
rol
xchg
in
mov
adc
cltd
mov
sub
dec
xchg
mov
gs
sbb
jp
sti
pop
pusha
cmc
std
gs
shrd
pop
xchg
andl
xchg
xlat
shll
into
fstpt
jbe
rorl
mov
add
aad
jnp
inc
xor
adc
sbb
adc
or
imul
jo
stos
jg
gs
pop
adc
push
ljmp
push
adc
loope
cs
and
mov
loopne
jb
mov
push
movsl
roll
out
or
mov
xor
pop
mul
sbb
push
movsb
je
and
inc
inc
dec
hlt
les
cmpsl
add
dec
leave
movsl
add
ds
mov
cmpsl
and
and
lcall
mulb
ret
or
lds
stc
add
data16
lods
pushf
cld
inc
or
data16
mov
bound
fcmovne
or
inc
out
ret
fcoml
cmp
mov
iret
das
dec
push
push
call
cmp
xor
pop
frstor
orb
cld
mov
and
lods
dec
loope
cmp
push
mov
adc
push
mov
mov
outsb
cmp
jns
lods
and
das
loop
daa
stos
hlt
nop
pop
shlb
mov
lods
cmp
xor
jmp
mov
pop
adc
nop
incl
call
rolb
lock
xor
fcompl
fildll
mov
nop
pop
bound
pop
jo
sbb
mov
and
inc
test
mov
sub
outsl
cmc
add
inc
xor
std
movsb
and
mov
jae
and
mov
pop
mov
popa
xor
and
test
sub
lds
mov
jns
mov
inc
sub
pop
lahf
adc
jae
push
xor
mov
cmc
data16
and
and
sub
out
sahf
push
mov
and
add
adc
xchg
add
jae
mov
insl
roll
inc
lret
invd
xchg
sub
add
adc
je
mov
jmp
cmpb
mov
or
repnz
pop
mov
xchg
jg
push
inc
add
mov
sub
shlb
and
jno
daa
push
xchg
ljmp
ret
js
lds
mov
aas
or
sbb
push
cmpsl
jb
mov
mov
inc
jge,pn
fidivl
sbb
adc
js
fbld
hlt
mov
push
cmp
inc
and
push
push
cs
pushf
cmp
sbb
aad
adc
int
xchg
fisttpl
outsb
add
aas
push
fbstp
movsl
psrld
push
std
and
sub
fimuls
enter
mov
jne
aaa
loope
xlat
ds
mov
mov
std
jno
jp
es
pop
rcl
add
mov
xor
sub
inc
je
dec
inc
arpl
sbb
cs
inc
cs
mov
sbb
leave
sarl
fsubrs
das
xor
and
pushf
out
jle
popl
mov
dec
lret
xor
enter
sbb
push
push
test
mov
mov
aaa
xchg
enter
gs
mov
add
jl
xchg
or
sahf
add
aaa
pop
aad
aaa
dec
popa
dec
sahf
jae
leave
xchg
mov
fwait
cld
jge
cs
jae
inc
roll
cmpsb
out
lea
add
jnp
loopne
daa
xor
lock
dec
mov
add
ret
cmpsl
pop
push
add
insb
jge
scas
ljmp
leave
push
mov
pop
in
push
out
ja
icebp
push
add
cli
or
out
loopne
mov
adc
imul
adc
ds
xor
push
pop
in
sub
push
pop
xlat
stos
in
enter
cwtl
add
cmp
cmpsl
mov
xor
lods
lods
add
or
sbb
notb
outsl
add
leave
js
ds
cmp
imul
cmp
lods
movsl
aam
mov
mov
fsubl
outsb
push
add
pop
mov
xor
adc
inc
scas
pop
jle
imul
clc
outsl
cs
lds
scas
inc
daa
mov
inc
cmpsl
adc
pop
and
or
roll
or
jmp
inc
adc
lods
mov
cltd
push
ret
stos
or
adc
arpl
mov
std
aas
lcall
pop
movsl
dec
mov
arpl
cltd
ja
xchg
or
jno
rcr
popf
movsb
int3
insl
sbb
dec
dec
push
add
imul
push
xor
pop
std
aaa
and
in
mov
inc
cs
pop
push
adc
sub
mov
and
insl
add
sti
pop
cltd
fcoml
cwtl
push
jb
mov
dec
test
dec
xchg
xor
ss
cmc
inc
jmp
push
sti
repnz
loope
or
jns
push
mov
jecxz
dec
pop
subl
cmpl
xlat
or
pop
xor
mov
lea
jo
push
ficompl
outsl
loop
not
pop
imul
xchg
xchg
jb
sub
mov
lret
mov
xchg
in
lea
popf
mov
out
pop
sub
xor
ja
scas
das
mov
sti
lds
dec
cld
loopne
push
aam
or
in
jo
movsb
jnp
sbb
out
scas
and
xor
lods
or
hlt
cmp
hlt
mov
mov
cmp
mov
add
xchg
jge
std
fsubl
mov
aad
call
or
sbb
sbb
jg
push
jbe
xor
test
mov
inc
pusha
imul
cmp
es
mov
bnd
andl
xor
arpl
or
mov
xchg
cld
push
dec
fwait
xor
or
es
bound
push
mov
mov
jno
lret
and
roll
mov
lret
adc
aad
add
push
not
sbb
pop
mov
add
lods
leave
jl
adc
mov
das
mov
notl
lahf
mov
xor
push
mov
scas
adc
enter
mov
mov
stos
mov
sub
mov
cmpsl
and
cmp
ficoms
push
and
mov
ficoms
mov
out
mov
add
sahf
cmp
movsl
sbbb
aas
xchg
xor
dec
icebp
aaa
call
jb
test
mov
addr16
sbb
push
cmp
jnp
jbe
mov
mov
in
and
pop
iret
mov
iret
mov
repz
popa
cltd
pop
ret
jle
test
jno
mov
lcall
adc
out
cs
xchg
xchg
jg
jg
push
jno
sbb
lds
or
addl
pusha
pusha
in
out
gs
jnp
jb
mov
lahf
xor
ror
inc
ror
and
jmp
mov
sub
sub
and
jg
mov
xchg
divl
seta
cltd
add
jae
dec
in
fcom
dec
sbb
jmp
loopne
fiadds
aas
mov
cmp
stc
js
ss
and
movsb
lods
dec
out
arpl
xchg
out
iret
xchg
or
imull
push
mov
mov
xchg
mov
mov
mov
sbb
and
rol
jns
leave
je
jmp
inc
jns
push
pop
ss
mov
aad
icebp
ret
xchg
xorb
leave
sbb
adc
test
cmp
adc
add
mov
mov
pop
int3
pop
cmp
push
xchg
inc
rolb
sahf
jns,pn
fstpt
mov
inc
mov
sbbb
cmp
test
lds
decl
jge
inc
shrl
mov
popa
sbb
mov
lock
enter
cwtl
mov
lret
mov
inc
dec
pop
lcall
lahf
jle
mov
xchg
cmpsb
cmp
scas
mov
cld
or
mov
in
out
inc
dec
sbb
mov
decl
mov
ds
in
and
xchg
sbb
outsl
sub
jno
push
jbe
or
repz
push
cli
mov
dec
xchg
movsb
lahf
jecxz
bound
jle
int
jns
xor
pop
add
or
and
aaa
adc
test
js
rcl
loope
cli
ret
loop
mov
leave
es
mov
pop
aas
jno
popl
and
gs
inc
sub
cltd
xor
repz
adc
jl
adc
xor
dec
jno
or
ljmp
popa
dec
movsb
testb
cmp
cli
fwait
xchg
int3
mov
xchg
lea
xor
movsb
sub
mov
push
xlat
in
adc
lock
adc
jl
mov
enter
data16
push
fcoms
cli
loop
pop
cli
das
and
mov
sub
in
cmp
addb
dec
arpl
mov
xchg
sahf
add
inc
aaa
mov
lods
fucomip
lea
adc
aam
sbb
or
sub
push
in
lret
movb
cmpsl
xor
in
je
test
and
and
add
aad
sub
adcl
xor
xchg
test
repz
cmpsb
cmpb
xchg
aaa
xchg
jne
and
lret
shrb
mov
push
mov
lock
mov
and
jg
push
in
inc
mov
addr16
jbe
vunpcklps
cmp
shrl
inc
and
pop
imulb
jno
dec
ret
jmp
jnp
xor
cmp
push
cmp
mov
addl
dec
das
dec
xchg
xchg
cmp
cmp
jge
notl
lret
jecxz
int
pushf
push
mov
xchg
ret
sub
stos
inc
cmc
xor
insb
jecxz
and
sub
cmp
jp
ds
pop
mov
out
imull
dec
mov
hlt
push
test
jmp
loopne
scas
testb
imul
jmp
push
into
jecxz
loopne,pt
sub
pop
sbb
test
outsl
push
mov
add
push
ret
lock
shrl
add
inc
mov
inc
pop
shlb
bound
mov
mov
dec
sti
sub
shl
pop
adc
clc
xor
out
fcoms
xchg
jmp
push
andl
into
mov
mov
out
gs
mov
add
or
mov
pop
enter
xlat
imul
xor
jg
sbb
or
cli
decb
push
pop
xchg
xchg
insb
cmpsl
mov
add
movsb
add
add
in
inc
or
enter
adc
xchg
lods
mov
pop
push
adc
in
out
cmp
sbb
jecxz
mov
loop
es
jg
inc
dec
shll
in
push
addr16
jo
or
scas
xchg
and
mov
push
jno
mov
popf
mov
push
jecxz
sti
sbb
call
das
mov
in
push
mov
mov
out
inc
incl
inc
inc
fs
add
aad
xchg
mov
or
add
pop
negb
arpl
insl
xorl
cltd
outsl
adc
pop
add
loope
lods
nop
or
jae
popa
mov
jge
and
inc
test
loope
jl
sub
mov
insl
lret
dec
icebp
xor
adc
dec
out
push
aam
inc
cmc
clc
push
std
push
enter
mov
in
sub
adc
xor
fwait
or
mov
fisubl
and
ret
leave
fs
xchg
and
xchg
mov
or
fwait
scas
mov
mov
mov
mov
in
and
sbbb
inc
icebp
lods
test
adc
xchg
leave
stos
cmpl
add
lret
jo
or
cld
mov
mov
jmp
imul
pop
mov
cmpsb
test
clc
ljmp
fsubrs
or
cmpsl
sarl
mov
cmp
sub
and
std
stos
push
pop
leave
repnz
popa
mov
and
adc
imul
adc
push
bnd
xor
stos
mov
pop
fcomps
fwait
jl
into
and
out
or
loope
pop
push
jae
or
and
stos
ss
mov
jmp
repnz
jno
jae
data16
and
xchg
dec
inc
loopne
sub
repnz
out
jecxz
mov
cmp
sub
adc
fwait
into
rol
out
push
js
push
outsl
fmull
not
adc
mov
or
addr16
adc
xor
mov
shrb
data16
sbb
sti
fistpll
and
xor
push
pop
clc
out
divl
mov
xchg
movsb
lods
xorl
mov
icebp
sti
in
je
in
push
cmp
hlt
pop
stc
clc
mov
cmpb
or
xchg
int
shl
mov
push
cmp
pusha
adc
pop
and
mov
cld
cmpsl
ret
fucomi
test
movsb
cltd
push
shlb
fldenv
out
mov
ret
adc
ljmp
inc
adc
test
fs
jae
add
and
mov
int3
sbb
hlt
mov
shrb
popa
jae
pop
pop
cmp
push
jg
stos
fcoms
xlat
sahf
push
sbb
mov
jecxz
mov
add
or
mov
xlat
hlt
aas
xchg
roll
repnz
xchg
loopne
stos
jg
pop
mov
leave
xchg
push
xor
jmp
add
popa
xor
imul
sahf
mov
aas
inc
cmp
xor
cltd
add
aam
jb
fistps
movsl
fmuls
call
jo
mov
jnp
out
dec
or
in
in
les
aas
or
adc
or
xchg
mov
cltd
dec
cmp
xchg
pop
pop
jmp
or
sbb
mov
mov
push
sbb
mov
pop
jo,pn
rcll
push
test
in
cli
inc
in
scas
insb
loopne
nop
cmp
mov
and
pushf
imul
lret
push
mov
movsl
sub
cmp
and
inc
pop
lods
xchg
pop
stos
lret
mov
rclb
xchg
out
pop
sub
jle
xor
jnp
int
cmp
jg
xor
ret
push
sub
test
add
push
push
in
test
jmp
in
lock
inc
lahf
mov
les
dec
in
pop
sbb
add
out
and
stos
aad
push
mov
lods
jbe
and
push
insb
into
cmp
pop
fldl
inc
inc
mov
lcall
call
imul
push
mov
out
xchg
inc
lret
int
pop
cmp
mov
cmp
jmp
mov
lcall
jl
test
andl
mov
cwtl
enter
and
fisttpll
inc
mov
and
in
push
in
cmp
xor
mov
xchg
inc
outsb
inc
mov
out
jnp
aaa
jne
in
pop
xor
ja
fidivl
lahf
pop
jmp
xor
test
int3
scas
dec
dec
mov
pop
paddq
cmp
mov
daa
sbbl
add
dec
into
movsl
sbb
xlat
movsb
push
jmp
jl
push
or
push
push
xchg
mov
inc
mov
push
adc
add
cmp
aad
notl
jns
rcrl
mov
mov
jo
jmp
fwait
test
dec
or
inc
cmp
popa
xor
int3
inc
imul
cmp
fldcw
outsl
mov
pop
je
mov
xchg
dec
dec
or
and
add
fwait
mov
das
pop
cmp
les
add
orl
or
rcll
xor
mov
fldl
out
inc
mov
sub
push
cmp
jmp
xlat
mov
and
sbb
xchg
outsb
test
pop
in
lret
cld
mov
jae
pusha
in
icebp
movsb
shll
xor
popf
dec
out
adc
pop
shl
xchg
sbb
add
and
fiaddl
xchg
and
sbb
dec
fwait
stc
jmp
jns
fists
sub
xlat
cmp
and
stos
lcall
dec
outsl
ret
stos
in
hlt
sbb
mov
popa
jmp
sbb
cmp
xchg
gs
addb
xor
push
fwait
xchg
pop
clc
gs
xchg
jnp
out
dec
pop
scas
jl
add
dec
fucom
inc
mov
cmp
fwait
add
stos
jne
pop
aas
scas
mov
lods
jl
nop
cmp
ja
incl
decb
fwait
fwait
dec
imul
adcb
jno
repz
gs
ljmp
or
push
in
and
sbb
pop
mov
sbb
add
cli
sbbb
adc
popf
lret
lods
insb
jne
dec
mov
and
mov
xchg
stc
mov
mov
mov
and
sbb
push
mov
mov
push
movsl
and
add
cli
inc
xor
iret
xor
sbb
loopne
inc
mov
inc
dec
sub
add
imull
lods
inc
sub
in
test
jo
imul
sbb
ret
adc
fbld
iret
fwait
pushf
aam
dec
jns
lcall
mov
sub
mov
fiadds
push
xor
xchg
cmp
das
jl
test
pop
jo
sbb
and
sub
fistpll
mov
sbb
packssdw
sub
leave
mov
xchg
xor
adc
shlb
push
mov
inc
scas
daa
push
lods
add
mov
cld
mov
cmpsb
popf
loopne
mov
cmp
dec
add
pushf
pop
sub
mov
ret
sub
pop
lcall
div
add
add
or
imul
dec
xchg
loop
ret
mov
mov
cmp
test
sub
pop
sbb
sub
jb
movsl
dec
or
ret
mov
push
fdivrs
std
nop
dec
sbb
xchg
sub
mov
push
aam
mov
outsb
cmp
je
mov
dec
push
pop
mov
push
jne
xchg
inc
or
dec
mov
sbb
test
mov
jae
subb
outsb
scas
mov
dec
or
mov
fldl
push
daa
mov
out
lock
and
dec
jecxz
pop
imul
in
mov
sbbb
cld
cmpsl
insl
jecxz
data16
jmp
mov
fsubs
xor
push
jo
fwait
pop
mov
enter
dec
loopne
fcoml
inc
jae
je
push
xchg
popl
iret
adc
pushf
call
out
in
out
dec
push
push
sub
rcrl
into
cltd
test
adc
sub
cmp
cli
aaa
das
push
scas
iret
or
test
or
cmp
jo
xor
inc
ret
in
mov
inc
out
insb
cmp
fnstenv
shlb
xchg
xchg
outsb
shl
push
out
pop
test
inc
in
repz
sub
adc
pop
cmp
or
cmp
arpl
daa
sbb
fbld
in
xchg
mov
into
addr16
adc
int
cld
bound
cmp
rcrb
sub
sub
jge
fwait
sbb
add
arpl
lods
pop
addb
or
cmp
dec
inc
inc
icebp
xchg
pop
pushf
fs
adc
dec
inc
mov
js
aad
cmp
sbb
add
jge
das
push
xacquire
fldt
neg
cli
jo
rolb
leave
xor
ret
movsb
jge
sub
in
mov
sbb
inc
lods
shrb
mov
popf
and
jne
or
mov
dec
adc
xchg
rep
mov
test
aad
dec
push
sub
push
or
iret
xchg
mov
inc
dec
repz
outsl
sar
enter
push
xchg
push
test
in
int
out
fdivr
mov
mov
fldcw
mov
mov
xor
lock
pop
sahf
push
cmp
outsl
ret
std
sbb
push
xor
stc
jmp
dec
daa
mov
je
stc
add
pushf
cmp
adc
lds
rcrl
fstl
sub
lcall
or
inc
shll
scas
and
adc
inc
or
call
inc
xor
cmp
push
dec
adc
into
cmc
setne
out
adc
xor
push
adc
stos
add
hlt
sbb
imul
lret
adc
adc
cmp
push
mov
imul
push
adc
xorl
leave
add
lds
mov
lock
add
mov
or
int3
stos
xchg
jmp
stc
pop
negl
sbb
sti
int3
xor
mov
jmp
or
lods
sbb
cmc
inc
gs
mov
in
push
out
add
ds
sub
sbb
push
dec
cmp
testl
xchg
inc
mov
mov
mov
pusha
dec
push
inc
sbb
sbb
imul
inc
sahf
jecxz
leave
mov
test
xchg
faddl
push
adc
sbb
push
dec
inc
adc
imul
cmova
fcompl
mov
out
and
rol
add
sbb
pusha
push
fsub
sub
jecxz
nop
sahf
cs
adc
fwait
sub
cmc
inc
push
or
out
in
pop
xchg
pushl
mull
in
hlt
neg
sub
shrl
and
mov
fcompl
sub
sub
loope
xchg
xor
add
and
xor
xor
sub
mov
dec
jp
mov
xchg
jp
aam
mov
jge
dec
push
push
mov
outsl
test
xor
push
loope
and
iret
inc
rol
jne
mov
xchg
std
imul
or
jg
inc
popa
cmc
cltd
imul
cmc
and
stos
cs
ljmp
mov
insl
fnstcw
mov
mov
sub
stos
imul
add
scas
or
test
insb
pop
int3
std
das
arpl
rorb
clc
push
push
out
mov
stos
leave
repnz
pop
repz
jbe
xor
int
mov
js
dec
cltd
cmpsl
in
aam
cwtl
bswap
mov
jne
outsl
and
repz
mov
in
and
int
mov
dec
push
dec
mov
add
sti
jbe
xor
mov
out
push
icebp
or
subl
mov
fldl
dec
mov
xor
je
add
je
ss
push
push
xor
dec
cmpsb
mov
insb
sbb
outsl
push
mov
pushl
pop
sub
dec
mov
fnstenv
dec
je
push
mov
leave
inc
mov
sbb
jl
out
fcmovnbe
daa
add
repnz
ret
xchg
mov
hlt
xor
sti
das
cmpsl
fdivrl
fstps
pusha
cmp
mov
and
aam
jb
fimuls
fs
inc
sbb
loope
cwtl
jmp
dec
add
push
and
jecxz
int3
xchg
insb
fmuls
sub
push
gs
inc
pop
sbb
mov
sub
test
jbe
jmp
cwtl
inc
jmp
cltd
xor
fwait
gs
push
jmp
jecxz
ss
xor
add
in
lcall
xor
pop
cli
mov
scas
cltd
ds
sbb
sbb
test
mov
in
stos
mov
mov
nop
ror
cmp
test
sub
xor
xor
xor
pop
inc
repnz
jo
sub
mov
add
insb
nop
sub
outsl
out
xchg
jg
xchg
outsb
out
sti
mov
mov
pop
add
xlat
or
inc
gs
or
or
xchg
insb
loope
jecxz
iret
int
in
insb
cmp
dec
lds
jle
or
and
jnp
enter
push
dec
in
dec
inc
in
hlt
idivl
add
into
cmp
xor
or
sarl
lret
scas
push
sub
popa
xor
sub
adc
mov
sbb
shlb
pop
adc
div
cmp
push
orl
mov
dec
sbbl
jge
int3
push
fmul
mov
xchg
pop
int3
jp
add
pop
imul
mov
addb
mov
mov
sub
shll
loop
pop
dec
push
or
or
jecxz,pn
loop
pop
mov
mov
xor
push
out
sbb
iret
adcb
pop
cmpsl
cmp
roll
jp
add
shrl
inc
es
jg
fidivs
jmp
fs
fwait
insb
push
iret
ret
jge
inc
loope
jnp
pop
xchg
int3
imul
daa
int
add
xor
xchg
xchg
jmp
cmp
addr16
xor
insb
icebp
loop
xchg
nop
in
jg
add
adc
aad
aad
inc
inc
cmp
and
dec
mov
adc
ss
jbe
mov
jne
or
scas
pop
loope
jo
and
or
cmp
rorb
stos
fcomps
or
test
mov
in
das
mov
and
aas
scas
test
mov
pushf
daa
stos
ret
stc
pop
lcall
loop
xor
dec
add
mov
jae
test
sti
iret
and
imul
sub
xor
add
pushf
in
add
jmp
ds
mov
ret
cmp
js
jo
insl
xor
xchg
cmpsl
test
add
ret
das
jl
cmpsb
ja
in
cwtl
test
out
daa
pop
rorb
es
je
jmp
fistpl
or
mov
dec
xchg
out
sbb
adc
iret
adc
mov
shrl
add
dec
fwait
mov
mov
out
sti
dec
leave
icebp
mov
and
pop
imul
daa
stos
test
and
out
sbbl
mov
mov
add
cmp
dec
adc
addl
add
fistl
or
dec
xor
popa
int3
data16
arpl
repz
pushf
or
and
sub
cmp
mov
cmp
jno
mov
xchg
dec
fs
aam
test
adc
shrb
jae
in
jl
in
inc
lea
and
add
gs
sbb
addr16
shl
add
and
insb
push
stos
jne
pop
enter
ficomps
insl
mov
adc
push
xchg
pop
mov
add
cmp
push
mov
movsl
cwtl
inc
inc
clc
or
sub
leave
xchg
loope
add
call
mov
xchg
push
fsubrp
ljmp
mov
xchg
lock
sbb
add
sti
daa
cmp
push
jg
or
adc
jne
mov
fs
hlt
sub
pop
jge
lcall
sub
pop
call
sti
sub
lods
rcrb
loope
cmpsb
adc
jmp
mov
fs
dec
and
std
in
fsubrp
enter
rorb
and
aam
ret
mov
scas
in
xor
outsl
mov
leave
out
cwtl
inc
dec
test
in
sbb
lods
pop
xor
mov
mov
aaa
js
pushf
mov
sahf
xor
das
pop
jmp
push
mov
cwtl
inc
pop
inc
mov
sarl
test
dec
icebp
lods
out
fsubrs
inc
mov
pushf
shll
and
xlat
int
jmp
jae
popa
jecxz
cmpsl
push
cmp
inc
enter
push
inc
cmp
cld
fwait
or
jle
loop
popa
decl
mov
rorb
add
pop
dec
mov
sub
outsb
inc
cmpsl
andb
adc
and
fwait
mull
insb
mov
aad
dec
in
aaa
dec
enter
je
sub
scas
idivb
push
ss
icebp
das
push
pop
xor
imul
out
xor
inc
inc
mov
popa
fistpl
jl
mov
xchg
test
addr16
hlt
fs
fs
sub
pop
fstl
mov
pop
mov
dec
adc
xlat
es
dec
dec
scas
pop
aaa
jo
jle
sub
out
imul
cwtl
xchg
mov
imul
ret
pop
cmp
scas
and
std
and
stc
out
pop
loopne
sub
or
sub
jge
mov
and
test
and
push
cmpsl
pop
sub
cmp
sub
dec
mov
call
inc
jmp
lds
mov
pop
sbb
inc
loop
adc
mov
repz
sub
aas
iret
rep
mov
into
or
adc
dec
loop
xor
mov
and
stos
sub
es
mov
mov
sbb
xor
aam
or
and
rcll
add
add
in
lcall
jmp
enter
sub
add
push
subb
lret
mov
inc
jb
ss
mov
stc
test
in
push
rcrl
pop
sub
mov
xchg
cmp
inc
ret
xchg
into
inc
mov
inc
les
xor
repnz
scas
cmp
call
mov
cmp
pusha
out
mov
clc
adc
shl
addb
cmp
pop
insl
stos
scas
testb
or
repz
jno
iret
and
aad
xor
bnd
push
pop
push
fisubl
scas
out
xor
or
jne
ja
push
subl
cmpsl
popf
in
adc
mov
xor
jg
sti
pushf
mov
mov
xchg
arpl
repz
and
inc
add
dec
adc
xor
mov
jp
dec
test
push
in
jge
sub
setne
fsts
into
push
pop
inc
movsl
sub
sub
xchg
cld
mov
fcmove
mov
pop
xchg
clc
icebp
pop
pop
adc
mov
movsl
mov
scas
add
adc
mov
mov
stos
fbstp
xorl
mov
mov
mov
cs
adcl
ljmp
wrmsr
jp
pop
adc
cmp
jns
dec
push
inc
add
adc
mov
in
lods
loopne
lahf
insl
xlat
mov
push
add
mov
js
and
jns
or
or
out
mov
mov
imul
inc
cmp
mul
shlb
into
or
daa
ret
sti
cwtl
imul
push
lahf
mov
adcl
int3
sbb
pop
or
in
mov
mov
orl
jmp
outsb
xchg
flds
sahf
inc
mov
addl
xor
or
or
sbb
in
dec
psubb
pop
mov
outsl
inc
pop
push
cmp
arpl
mov
outsl
fcmove
scas
or
out
sub
jp
and
xchg
movsl
in
jne
and
cmp
lock
iret
cmp
pop
pop
icebp
std
mov
mov
xlat
push
and
cmp
mov
mov
xor
mov
ss
push
dec
xchg
jnp
bound
pop
add
outsb
ja
cmpsl
sbbb
mov
push
lret
addr16
dec
out
inc
push
mov
push
aad
push
jne
ja
pop
jmp
pop
adc
movsl
push
jb
imull
fdiv
fmull
push
imul
cmp
push
inc
dec
mov
sub
out
aas
pop
jecxz
mov
xchg
aaa
fnstsw
add
xlat
pop
mov
inc
jb
out
or
orl
ds
or
je
mov
inc
paddb
mov
xchg
insb
jge
and
inc
inc
mov
shrl
jl
ja
ds
adc
push
cmp
add
dec
pop
cmpsl
pop
int
xor
mov
fsts
dec
push
jb
jecxz
sbb
cmp
stos
movsl
std
lock
sbb
es
add
adc
jnp
test
popf
mov
and
movsb
aad
jo
push
sbb
mov
in
push
sbb
movsl
jbe
cmpsb
mov
mov
jmp
js
es
daa
and
mov
xor
fildll
xlat
ja
and
scas
mov
lods
ds
mov
lods
mov
mov
shl
push
fnstsw
out
js
lds
enter
sbb
xchg
sub
sub
sbbl
lods
outsl
jge
mov
dec
popa
jnp
les
daa
xchg
in
pop
mov
mov
mov
lock
xor
push
insl
push
loop
lods
lret
pop
cmpsb
cmp
mov
and
mov
mov
arpl
ja
ja
ja
xchg
icebp
cli
inc
shlb
call
cmp
inc
das
inc
dec
ficompl
push
lods
into
xor
dec
add
gs
and
mov
inc
cmova
sbb
lret
or
popf
test
pop
filds
sub
adc
push
cs
jge
mov
mov
jae
sbb
iret
cmp
arpl
jecxz
or
adc
inc
pop
mov
shll
pop
fsubr
dec
shlb
lahf
mov
sarb
ljmp
adc
lret
loopne
lods
inc
push
sub
jecxz
pop
in
in
mov
insl
adc
adc
pop
cltd
jne
xor
fistpl
inc
add
mov
push
pop
outsb
ds
enter
add
cltd
lret
sahf
lret
sahf
ret
fs
insb
es
pop
mov
xor
out
clc
jb
dec
loopne
sbb
dec
adcl
add
jmp
add
fsubrl
mov
mov
rorb
out
push
addl
mov
sub
movsl
pop
xchg
popf
pushf
or
scas
rcll
pop
in
shll
xchg
xor
iret
loop
aas
adc
repnz
pop
push
rcrb
lock
push
xchg
cmpsl
xor
test
jno
in
push
sbb
push
mov
or
mov
mov
outsb
lods
aam
pop
inc
inc
push
cmp
xchg
sub
loope
fnsave
cmp
cmp
jmp
mov
imul
loopne
mov
rcrb
fdivl
adc
sbb
and
inc
outsl
sub
repz
stos
or
subb
dec
cmp
mov
cmpsl
jno
mov
mov
insl
mov
pop
push
xchg
push
cmpsb
push
shll
inc
ja
pop
leave
push
nop
pushf
cmp
testb
ja
dec
inc
pop
fimull
xorl
mov
push
inc
popf
xlat
addb
sti
inc
out
inc
js
sub
fdivrs
ret
fidivs
aas
jp
in
push
sub
add
and
shl
add
std
popa
je
xchg
arpl
sub
cmp
xchg
cmpsl
leave
aaa
inc
sbb
loopew
sar
repnz
xchg
push
jp
loopne
nop
pop
cwtl
mov
inc
call
dec
fldcw
mov
sub
mov
sbb
pop
jne
mov
outsb
push
mov
shlb
xchg
push
inc
loope
fistps
mov
ss
push
lret
ret
cmp
xor
adc
dec
pushf
dec
add
jl
or
inc
mov
jle
push
clc
lods
adc
fsubrs
sub
sbb
push
insl
pop
fdivrs
addb
into
cwtl
jp
cmp
jge
arpl
sbb
pop
gs
dec
adc
subb
stos
xor
pop
ljmp
subb
test
cld
sti
mov
add
cwtl
or
js,pn
pop
jbe
shrb
in
add
fs
pop
movl
sbbb
cmp
sbb
subl
sub
jno
cmp
sbb
dec
je
popa
cli
divb
aam
shl
push
sahf
adc
inc
out
inc
dec
test
std
mov
inc
popf
fucom
push
pop
cmp
or
jl
sbb
and
shlb
sbb
xlat
ss
push
leave
out
je
popa
call
pmuludq
mov
jnp
sub
fisubrl
bound
inc
pop
push
cmp
popf
jo
xchg
das
sbb
push
faddl
sbb
sbb
cld
push
mov
mov
cs
sub
out
cmp
jg
insb
popa
mov
arpl
in
cs
xchg
mov
fiadds
negl
mov
add
mov
cld
xorb
and
mov
cmpsb
pop
mov
push
rep
push
ds
add
arpl
mov
aad
push
ds
push
sbb
jmp
dec
nop
out
int3
jne
imul
ret
repnz
lea
ds
cld
mov
or
pop
pop
outsl
xadd
pushl
cmp
jecxz
call
cwtl
adc
in
sbb
mov
ret
pop
mov
adc
cmc
push
or
insb
add
lret
sbb
xchg
xor
in
jae
jg
or
jb
sbb
inc
and
sbb
mov
mov
push
fiaddl
mov
add
orl
mov
stos
jae
mov
sub
mov
out
push
adc
inc
repz
mov
movsl
inc
xchg
fmull
dec
call
cs
mov
push
adc
popa
pusha
sub
loopne
mov
add
lahf
adc
jl
int3
pusha
jp
aad
mov
aam
aad
xor
and
bound
jecxz
inc
mov
fisubs
adc
stos
adc
lret
push
pop
out
hlt
mov
xchg
sub
cmc
cltd
and
mov
jb
pushf
cld
test
push
into
pop
lea
sub
cmpsb
ret
jmp
stos
les
test
adc
mov
sub
adcb
ret
test
ja
pop
leave
not
xor
jne
mov
js
stos
not
addr16
and
mov
and
les
adc
test
push
xchg
jae
dec
lods
cmp
pushf
test
mov
nop
dec
aaa
sub
pop
les
mov
cs
pop
and
je
inc
xorb
orb
cmp
push
and
lds
jbe
inc
cmp
pop
jecxz
sarb
mov
push
jmp
pop
imul
add
or
stos
into
stc
push
out
daa
and
loope
xor
div
icebp
mov
sub
cmp
jge
mov
ret
dec
test
pop
xor
bound
cli
lock
or
xor
aas
cwtl
or
sbb
popa
xor
pop
sahf
filds
mov
mov
jp
rcrl
icebp
push
je
xchg
stos
pop
push
and
stos
stos
mov
je
fcmovnbe
sbb
adc
cmp
push
jo
mov
shlb
or
add
mov
adc
stc
ja
nop
notl
data16
and
cmpsb
sbb
arpl
fnsave
je
rcll
mov
dec
test
loope
cwtl
mov
mov
xchg
mov
inc
mov
cmp
mov
std
aas
pushf
ss
call
xchg
jecxz
inc
xor
mov
add
mov
cld
pop
fistpll
or
mov
adc
shll
pop
mov
mov
pop
out
mov
pushf
inc
push
inc
jne
push
xor
or
stos
fdivs
sub
incl
mov
cs
scas
mov
lods
push
lock
xor
adc
orb
pop
fisttpl
rorl
test
popa
push
int3
cltd
jbe
and
push
add
jg
cmc
das
inc
mov
dec
orl
jbe
adc
shrb
ss
pop
aaa
in
jp
enter
hlt
inc
push
stos
imul
add
shlb
dec
cli
push
and
fidivl
or
bound
shll
out
rcrl
dec
xor
aam
and
xchg
aam
int
or
ja
and
xchg
mov
icebp
xchg
mov
imul
jno
stc
or
sbb
or
rcll
cmp
sbb
pop
add
mov
call
add
and
mov
or
lahf
js
shrl
mov
mov
iret
push
cmp
cltd
jp
sbb
mov
xchg
sbb
test
push
test
jnp
mov
sub
lock
lret
mov
clc
pop
xor
aad
xor
mov
mov
xorb
xchg
sahf
in
mov
xor
loop
and
fistl
sub
test
aas
push
in
cmp
addr16
adc
push
sbb
xor
push
mov
lret
fs
add
dec
test
push
gs
fistps
mov
cmp
mov
mov
loope
sbb
lret
xor
clc
dec
mov
pusha
dec
js
in
jne
rorl
xchg
dec
leave
add
xor
test
pop
sti
adc
out
into
adc
cmp
pop
pop
arpl
test
sti
loope
sub
outsb
cld
or
out
push
and
and
mov
shrl
ret
add
in
mov
and
out
pushf
jb
imul
aam
mov
mov
sub
mov
xlat
xchg
mov
and
jbe
inc
add
or
inc
dec
enter
icebp
scas
hlt
mov
test
jl
inc
call
pushl
out
into
daa
out
dec
or
jge
and
call
incl
jge
lods
popl
out
out
addr16
xlat
inc
jp
in
inc
adc
xlat
pop
mov
cmp
hlt
xor
stos
and
stos
lret
mov
pop
daa
or
xchg
stos
and
push
rcl
mov
dec
inc
fdivs
push
mulb
inc
jbe
mov
push
pop
cmovbe
test
cmp
inc
mov
daa
popa
lods
mov
scas
aad
in
aaa
outsl
cmpsl
xor
or
daa
or
icebp
dec
cld
orl
and
push
sbb
push
imul
xchg
or
sbb
cmp
mov
and
adc
orl
int3
nop
push
add
fnstenv
push
aas
adc
cmpsl
aaa
scas
rcrl
js
xor
mov
mov
inc
and
adc
xchg
pop
adc
jne
sub
sub
jns
pop
shr
or
in
xchg
mov
aad
scas
sub
cmp
rorb
js
cmp
divb
imul
dec
jne
and
leave
hlt
sbb
push
jae
arpl
mov
sti
mov
inc
xor
dec
lods
ja
iret
or
mov
insl
push
adc
mov
test
mulb
push
fildl
jge
test
sbb
push
into
or
iret
jmp
xchg
sbb
mov
arpl
ficompl
stos
test
push
mov
out
cltd
pop
int3
aas
addr16
loop
push
jo
cmp
pop
cmpsl
fstpt
jo
cmp
xor
and
inc
in
pop
xor
add
mov
lods
aad
add
sbb
push
cmp
fisttpll
lods
call
mov
lods
test
sub
sahf
xchg
outsb
mov
scas
jbe
push
or
rclb
xchg
test
fsincos
inc
push
in
pop
pop
out
dec
dec
jns
ja
lret
adcb
das
repnz
mov
cs
mov
popf
popl
jmp
lret
add
movsb
dec
out
ficoms
fbld
mull
adc
jo
pusha
je
push
inc
das
pop
push
fbstp
xchg
int
popf
icebp
mov
notl
imul
dec
jp
adc
lds
adc
pop
add
int
jmp
fsqrt
xchg
fdivr
in
iret
and
fisubrs
cmp
andl
es
sbb
and
fmuls
lahf
cmpb
cmp
stc
push
xchg
loopne
insb
or
cs
popa
or
mov
leave
and
int
mov
jnp
es
stc
addr16
mov
aaa
stos
fs
pop
icebp
nop
mov
cmp
mov
lods
xor
adc
inc
jg
xor
dec
sub
xchg
cmpsl
inc
data16
scas
orb
adc
dec
push
mov
inc
mov
imul
xchg
test
out
xchg
sbb
imul
insb
jecxz
cmc
shll
notl
or
push
lock
lahf
popf
fucomp
xor
andb
out
dec
xchg
pop
in
add
push
js
mov
leave
fld
xchg
jns
out
sahf
test
push
xlat
adc
mov
sar
jnp
clc
scas
dec
cli
jnp
popf
popa
and
xchg
cmp
jnp
in
xchg
inc
mov
lods
lret
dec
shlb
cmp
sub
cld
test
mov
dec
icebp
cmp
fdivs
jmp
inc
sbb
gs
aas
daa
lcall
sbb
int
xchg
sbb
repz
lcall
js
or
sbb
ss
js
ret
adc
call
addr16
mov
or
in
das
and
ds
xchg
mov
xor
push
fisubl
iret
add
xchg
and
xchg
mov
nop
sbb
fadds
das
or
dec
mov
ss
movsl
inc
xchg
cmp
push
jge
fmuls
jmp
scas
xchg
sbb
dec
leave
and
sar
pop
jmp
xlat
outsb
sbb
sbb
dec
jmp
lahf
std
cltd
xor
repnz
xchg
insb
leave
lcall
clc
mov
jecxz
inc
icebp
jge
push
cmc
bound
lock
inc
into
inc
and
add
pushf
aas
jge
push
mov
dec
dec
pop
or
sub
ja
xchg
ret
and
aaa
mov
int
push
inc
lret
and
lcall
mov
sub
lret
or
jmp
inc
sbb
aas
pop
out
imul
imul
out
jg
insb
add
in
or
pop
add
addr16
mov
sbb
ret
ljmp
shlb
cmp
fwait
std
loope
aad
aam
aad
iret
sub
movsb
ja,pn
das
loope
jl
ljmp
push
sbb
sbb
add
scas
out
inc
inc
add
xor
out
hlt
xchg
sahf
xchg
gs
xor
testb
jl
pop
int
jae
into
ss
cmp
lds
lahf
js
iret
or
fs
and
and
out
mov
push
mov
fisubs
xlat
pop
jmp
sub
or
jg
xchg
mov
test
ja
imul
out
xchg
fistpl
dec
insl
xlat
pop
idivb
movsl
dec
jae
sahf
imul
mov
and
popf
jp
pop
sbb
dec
scas
sbb
mov
loop
rcll
add
adc
cltd
inc
outsb
and
fsubs
das
iret
outsb
jb
push
jbe
stc
sub
addr16
sub
pop
sub
mov
mov
cld
jge
in
pop
lds
mov
pusha
mov
sarb
adc
int3
and
dec
cmp
lret
mov
sbb
pop
or
sub
jnp
adc
dec
sub
fdiv
jge
push
or
sbb
jo
pop
cmpsl
jne
push
fisubl
cwtl
cltd
test
mov
arpl
sub
gs
add
cmp
loop
or
xor
jl
test
xchg
mov
lret
jne
shll
mov
inc
cld
outsb
ds
ds
shlb
adc
in
mov
jo
mov
push
fadd
dec
cltd
call
and
js
add
pop
adc
out
xchg
jns
aas
outsb
push
pop
sahf
shlb
adc
popf
lret
mov
cmp
dec
je
pop
mov
push
or
jns
dec
sbb
sbb
call
xchg
or
hlt
mulb
leave
jmp
lds
pusha
dec
ss
push
and
into
loop
mov
shll
icebp
int
shlb
int3
or
lahf
ret
sbb
mov
push
roll
test
scas
ret
adc
stc
pop
stos
ja
sbb
lds
mov
sub
stos
imul
mov
xchg
cli
pop
rorl
inc
es
jp
test
and
lods
lds
and
loop
imul
fidivrs
push
adc
scas
mov
and
cmc
jle
daa
in
adc
mov
sub
push
daa
lret
fidivrs
and
cmpb
jno
cmp
dec
das
sbb
leave
out
mov
outsb
mov
repnz
ret
xchg
xor
push
pop
ljmp
mov
sbb
int3
xchg
fdivrs
push
into
nop
ss
push
adcb
lret
dec
and
mov
mov
fstps
or
int3
jecxz
ss
daa
sub
mov
xor
adc
pop
mov
push
div
clc
cmp
adc
mov
mov
fbld
add
divb
in
sub
xlat
sbb
test
jnp
push
loop
jbe
mov
sub
push
lcall
lock
cmp
clc
jg
push
aam
jl
mov
cs
cmp
stc
mov
sbb
mull
push
and
cmp
add
into
dec
fyl2x
dec
xchg
daa
push
adc
std
xchg
sub
and
xchg
adc
bound
sbb
and
or
scas
pushf
pop
and
sub
xchg
aam
fwait
sarl
xchg
rclb
add
outsb
call
lods
lds
fs
lret
es
fimuls
icebp
jb
xchg
mov
mov
outsb
adc
rcll
cmp
xlat
scas
popa
xchg
clc
sbb
popa
add
negb
mov
push
xchg
jge
stos
in
xchg
cs
fwait
jne
test
jb
and
loopnew
jge
push
mov
outsl
xchg
fldlg2
pop
das
jl
aas
es
add
ds
andb
adc
push
subb
push
dec
ret
xor
outsb
call
add
add
xchg
xchg
les
ljmp
and
dec
fs
mov
lock
sub
fdivl
mov
or
mov
test
stc
xor
imul
fildll
sub
xchg
cmpsb
mov
movl
clc
popa
lock
mov
push
xchg
inc
adc
or
adc
jl
mov
leave
imul
xor
popa
std
subl
addr16
add
pop
mov
and
and
pop
add
pop
imul
dec
adc
cmp
lock
ss
jns
jno
add
mov
lock
hlt
pop
xor
xor
dec
push
pop
pop
stos
jp
lods
loope
dec
cmp
ret
or
xchg
mov
pop
push
into
jae
sub
in
dec
adc
or
mov
or
xchg
test
test
push
adc
pop
add
adc
adc
in
fldenv
xchg
push
pop
adc
jle
jns
xor
xchg
inc
enter
mov
insb
xor
pusha
cmp
sahf
lods
jmp
fisubrl
loopne
or
inc
in
push
stc
inc
ljmp
movsb
rcrb
push
lea
dec
xor
sbb
gs
pop
or
xchg
addl
mov
ret
sahf
lods
andl
push
pop
cs
dec
lods
cltd
push
repz
hlt
xchg
loope
push
test
andl
cwtl
mov
add
pusha
scas
dec
in
and
enter
adc
sahf
leave
dec
mov
in
popf
cltd
cmpsb
rcrb
fidivrs
jbe
cmp
pop
sbb
outsl
jl
repz
adc
sub
cli
push
outsb
mov
sbb
mov
sub
pop
dec
sbb
pop
or
inc
mov
cmp
shlb
in
imul
ret
fcomps
clc
xchg
pop
jns
cli
fldl
push
pushf
call
sarl
push
xchg
add
loop
xchg
lds
stos
div
xlat
scas
push
mov
mov
add
outsb
out
in
or
int
add
fisubrs
cmp
pushf
lret
call
shrb
push
push
push
adc
lods
push
idivl
push
mov
adc
cltd
mov
or
xchg
xor
jp
test
lahf
imul
mov
fwait
pop
dec
cmp
add
or
loope
fsubs
orl
cs
lahf
arpl
sahf
cmp
rcl
gs
pop
test
fstpl
cmc
rcr
add
pop
fisubrs
and
cmp
sub
dec
jmp
fwait
jle
cmp
jo
addr16
ds
dec
jmp
cld
stc
add
imul
in
adc
or
mov
mov
popa
dec
je
inc
sub
dec
dec
loope
mov
mov
lahf
lret
adc
xor
cmpsl
mov
idiv
test
lret
bound
add
es
mov
jns
push
mov
adc
mov
call
sbb
xor
mov
icebp
outsb
sbb
insb
jae
filds
inc
insl
fldcw
inc
jge
and
adc
pop
lock
ret
or
pop
dec
lock
push
dec
loop
adcb
jg
fs
xchg
sbb
lcall
cwtl
nop
xor
iret
les
adc
mov
xchg
inc
jb
inc
push
gs
mov
ret
je
scas
aad
and
out
dec
fcompl
in
cmpsb
outsl
mov
sahf
jge
sub
jbe
xchg
fldt
aaa
scas
aas
dec
add
sbb
mov
mov
jns
pop
xor
jnp
fwait
and
dec
pop
lods
clc
jmp
xchg
push
cld
push
sbb
js
shl
out
loop
je
imul
insl
cwtl
iret
mov
movsl
push
test
jb
pop
imul
xchg
pop
rorb
test
mov
push
xor
repz
lods
cli
or
jno
inc
shlb
and
outsb
jne
lcall
addl
lret
mov
jle
cltd
sub
popa
lret
fisubl
movsb
push
mov
jg
cltd
dec
loop
adc
flds
xor
fs
or
cmc
adc
lods
fisubrs
mov
arpl
cmp
mov
rcrl
lods
lahf
cs
xchg
mov
inc
jne
out
mov
mov
mov
mov
pusha
xchg
cld
ja
adc
xor
ficoms
ds
sahf
cmp
and
adc
mov
js
out
out
in
and
add
mov
adc
sbb
jle
dec
lgs
icebp
mov
push
lahf
mov
mov
scas
and
inc
or
aas
sub
mov
sbb
jl
push
xchg
push
jl
movsl
push
inc
or
xor
push
loope
cmp
pop
test
fucomip
bnd
insl
daa
push
and
push
or
addr16
imul
pop
add
adc
scas
out
imul
ds
mov
imul
popa
and
out
in
enter
sti
sub
pop
pop
mov
jge
cs
outsl
jmp
subb
push
inc
push
xchg
mov
mov
int3
das
xor
mov
sbb
rcl
inc
fsubrl
pop
sbb
ds
push
in
xor
jl
lods
push
push
stos
insl
xchg
push
lret
clc
mov
dec
mov
mov
lcall
lret
fmul
pop
imul
jne
dec
mov
or
bound
lret
loope
into
cli
test
mov
test
fwait
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
sbb
call
xchg
sahf
jg
xchg
mov
pop
sub
add
mov
push
and
pop
or
pushl
add
pop
movzwl
sub
add
sub
push
push
jmp
pop
aas
or
push
clc
shll
aaa
movsb
or
xor
push
mov
pop
push
mov
popl
mov
sub
mov
sub
jne
call
setl
inc
pop
xor
shlb
int3
adc
jmp
xchg
ror
into
out
cld
test
mov
add
add
pushl
addl
jle
sub
mov
sbb
xlat
les
lahf
xor
jns
sbb
int3
add
dec
dec
lahf
jns
dec
lahf
xor
sti
and
dec
scas
mov
dec
adc
outsb
stc
test
int3
pop
imul
sbb
into
xchg
fs
insb
test
xchg
dec
enter
dec
stc
test
hlt
shll
dec
je
jg
js
mov
dec
lahf
xor
cmp
scas
insl
lods
lods
inc
imul
cmp
mov
jge
adc
shl
mov
fldl
pop
lds
or
in
lods
cld
cmpsl
mov
bound
cwtl
inc
sub
cmc
pop
imul
add
faddl
pop
lds
jmp
fistpl
xlat
pop
adc
jl
stos
divb
mov
mov
push
pop
cmp
xor
jns
jns
insb
test
inc
inc
jecxz
rolb
test
nop
xor
divl
jno
divb
push
xlat
rcr
xor
pushf
mov
pop
inc
xchg
inc
pop
xor
loopne
aas
xor
cmpsl
daa
jl
idivl
in
sti
mov
pop
inc
jb
or
aaa
inc
xlat
les
push
pop
les
push
sub
xchg
fcomps
rcrb
inc
outsl
addr16
sbb
mov
xchg
icebp
sub
adc
push
pop
fbld
ja
and
repnz
stos
push
jbe
int
stos
outsb
xor
dec
jns
ficoml
mov
lret
pop
into
xchg
jmp
cmp
push
cmpsb
cs
mov
sti
fidivrl
fisubrl
inc
xchg
jbe
xchg
jo
int3
pop
fwait
jmp
fcmovu
in
pop
jl
shlb
or
fcmovu
sti
insl
aad
or
sbb
pop
dec
sub
scas
fbld
and
inc
cli
data16
int
jnp
imul
pop
add
jno
call
cli
push
inc
mov
cmp
fstpt
inc
pop
jae
fcmovu
clc
cmp
ljmp
fidivrl
xor
lods
xchg
cmp
icebp
loop
jnp
rcll
cmp
gs
subb
jns
insb
mov
mov
jp
jecxz
jne
cmpsb
rcrb
jns
cmp
negb
xchg
sub
jmp
jnp
cmp
pop
fidivl
arpl
inc
pop
or
inc
inc
dec
test
jns
push
jns
ret
pop
sub
dec
inc
sub
pushf
les
aad
push
int
jl
xchg
pop
inc
push
data16
shlb
mov
mov
pop
jns
outsb
loope
xlat
xor
stos
ret
xchg
mov
test
jns
cmpsb
test
fstpl
inc
pop
fsubl
cmpsb
bound
inc
push
sbb
sub
jp
lahf
jl
fs
mov
adc
xchg
and
mov
lret
add
rolb
lret
cmp
mov
mov
and
adc
cwtl
xchg
inc
add
out
inc
lret
cmp
inc
into
ljmp
mov
cmp
inc
lret
cmp
enter
mov
mov
add
call
add
vunpckhps
lret
cmp
mov
dec
clc
inc
cmp
xor
xlat
inc
fdivrl
ja
cmp
dec
lret
pusha
stc
or
xlat
or
mov
mov
les
mov
cmp
ds
mov
cmp
mov
mov
cmp
rorb
lret
dec
mov
mov
cmp
lods
mov
cmp
mov
mov
cmp
mov
mov
mov
aam
mov
cmp
lret
cmp
aaa
sbb
cmp
cmp
ret
mov
inc
lret
cmp
cmp
fs
and
rorb
lret
cmp
mov
in
dec
mov
cmc
fwait
cmp
mov
leave
mov
lret
or
mov
mov
rorb
lret
push
push
cmp
fs
and
rorb
push
or
iret
ds
and
rorb
inc
mov
cmp
mov
cmp
sbb
push
xor
push
sbb
mov
cmp
mov
mov
cmp
cmp
lock
ret
mov
movsl
outsl
cmp
sti
inc
nop
push
mov
into
flds
mov
jge
cltd
scas
jns
mov
mov
into
flds
mov
mov
jge
cltd
dec
sti
lea
sti
popa
jnp
jge
jp
and
mov
mov
mov
into
flds
mov
and
rorb
stc
and
mov
mov
mov
into
flds
rcr
mov
cmp
cmp
test
mov
into
flds
lods
cmpb
leave
fs
adc
scas
mov
mov
cmp
mov
jnp
je
jp
and
mov
popa
call
inc
xchg
mov
mov
leave
adc
xlat
leave
fs
mov
outsl
mov
push
dec
lret
pusha
mov
adc
aaa
outsl
sub
popl
cmp
mov
or
pusha
mov
adc
lock
mov
pushf
xchg
dec
les
cmp
cmpsl
inc
pop
mov
sub
mov
fwait
push
jno
ljmp
pop
in
mov
xor
cmp
adc
or
rcl
repz
cmpsb
lret
and
lret
mov
mov
mov
cmp
mov
nop
dec
out
frstor
adc
cmp
stc
and
cmp
lea
enter
bound
in
stc
js
js,pt
lret
pop
lds
lret
mov
mov
insl
rcrl
je
pop
mov
jns
xor
push
pop
push
fmull
jne
pop
arpl
mov
sub
rcll
clc
jae
add
mov
cmp
mov
mov
cmp
mov
mov
cmp
sahf
mov
jle
lret
cmp
mov
mov
cmp
mov
cmp
mov
cmp
cmp
mov
mov
cmp
mov
inc
xor
popf
nop
mov
push
mov
clc
or
popf
mov
xchg
out
jbe
fidivrl
mov
mov
int3
or
jp
cli
and
xchg
cmpsl
outsl
sub
cmp
lea
je
mov
sub
push
cmp
cmp
shlb
enter
xor
sti
adc
loope
pop
xlat
sub
int3
mov
lock
ljmp
cli
cmp
xchg
jb
push
daa
leave
dec
cmpb
arpl
aam
or
rcll
cmp
sbb
jl
lock
mov
inc
jl
aam
ljmp
popa
fcomp
jge
lcall
jb
jb
or
lcall
pushf
dec
stos
repz
ja
ss
ret
sbb
popf
lahf
cmp
push
test
jbe
pop
sbb
les
lock
dec
sbb
jecxz
and
xor
inc
jp
and
icebp
lods
pop
push
iret
data16
fs
mov
mov
cmpsl
jo
test
add
add
xlat
and
xchg
adc
loope
fxch
jmp
inc
test
inc
jno
test
jb
cmp
mov
jae,pt
divb
ljmp
cmp
jae
nop
outsb
push
pop
shr
out
sub
jp
xchg
sbb
aaa
mov
dec
jl
or
shlb
sbb
dec
cltd
notb
pop
jl
das
fdivr
or
or
inc
mov
lcall
mov
lret
pop
ds
scas
mov
test
mov
cmc
jne
mov
push
sbb
pop
insl
push
mov
xor
outsb
aad
push
movsl
xor
xchg
pop
rcll
iret
loop
dec
jl
sti
adc
addl
cli
rcrl
jo
decl
adc
pusha
xor
mov
into
mov
mov
cmp
cmp
gs
and
push
sub
jbe
fisubrs
and
jo
cmp
das
je
out
add
or
inc
fisttpl
loop
lret
loope
ret
andl
mov
iret
into
dec
ss
out
out
pop
in
cmp
xchg
nop
outsb
mov
rclb
xchg
jmp
lods
insl
adc
jecxz
arpl
cs
sti
rcrl
mov
add
movsl
jmp
fisubrs
jnp
dec
cmpb
pop
shll
in
xchg
fisttps
jnp
mov
jge
jmp
jne
stos
mov
pop
scas
popa
pop
roll
fdivr
ljmp
adc
subb
sub
daa
cmp
cmpsl
pop
sbb
fcmovnu
add
test
push
mov
add
and
add
add
add
faddl
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
faddl
add
faddl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
add
add
fldl
add
fldl
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
push
add
push
add
add
push
aas
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
push
add
imul
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
jbe
xor
xor
pop
add
je
insl
add
add
add
add
add
add
add
sub
add
cmp
sub
add
push
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
popf
loopew
push
push
add
add
add
inc
repnz
adc
mov
sbb
cmp
xor
loop
insb
mov
imul
pop
in
cltd
mov
mov
cmc
in
lret
mov
cmpsl
cmp
fcoml
rcr
outsb
mov
cli
add
aam
jns
lods
adc
nop
fisttps
sti
leave
enter
mov
dec
popf
hlt
stos
and
dec
addl
js
xchg
pop
popl
test
popa
jns
push
cmp
xlat
push
outsl
sti
mov
out
imul
in
xchg
mov
dec
push
stos
and
mov
adc
pop
xchg
sbb
jno
or
push
and
insl
jl
divl
jge
int3
pop
mov
push
inc
out
fldl
pop
inc
nop
sub
lcall
out
loopne
cld
rolb
mov
outsb
pushf
jl
inc
dec
leave
mov
and
jl
nop
int
sbb
ret
jne
out
sbb
mov
inc
and
push
mov
pop
dec
mov
sub
xchg
jp
push
not
or
lcall
addr16
lods
and
cmp
xor
cmc
cmp
div
cld
lahf
inc
je
xchg
mov
pop
mov
dec
std
xchg
aas
cmp
lods
sahf
dec
jmp
add
pop
mov
xor
stos
mov
outsb
sub
sub
jle
sbb
out
imul
inc
or
repz
cmpsl
xchg
adc
mov
ror
jge
mov
dec
aaa
scas
pop
inc
mov
jno
std
dec
cs
imul
pushf
std
stos
mov
cmp
cmp
lock
pop
mov
test
jecxz
jns
ret
lods
add
test
push
and
mov
movl
in
sbb
in
mov
cmp
cmpsl
or
push
xchg
into
je
leave
mov
subb
rcrl
push
sbb
dec
es
outsl
push
or
mov
fildl
sub
inc
cwtl
jnp
jecxz
mov
testb
mov
cmpsl
fs
jne
dec
stos
cld
call
negl
sbb
and
stos
js
loope
xchg
outsl
out
lret
jle
xchg
scas
stc
pusha
sub
ja
pop
cmp
ja
mov
sub
arpl
sbb
inc
xchg
dec
adc
fsubs
shlb
dec
sub
repz
cld
xchg
push
push
ret
push
jne
sarl
loopne
cmpsl
dec
and
inc
enter
addr16
cmp
jge
lods
cmp
int3
jns
cli
shll
popa
dec
sub
inc
xchg
inc
xor
ja
fistps
insb
bound
leave
cltd
fstps
or
adc
scas
sbb
inc
scas
divl
push
xchg
mov
test
cmp
test
xor
cli
inc
lahf
icebp
push
mov
in
lods
sarl
and
jns
sub
and
add
inc
mov
or
pop
std
aas
repz
cltd
pushl
stc
das
test
pop
bound
xor
jl
out
fs
in
cmp
xchg
ljmp
xor
mov
mov
push
mov
mov
fmul
imul
out
mov
or
cmp
rolb
or
aam
loope
cmp
adc
stos
adc
mov
fsubrl
cmp
or
out
xchg
imulb
mov
mov
cmp
loope
mov
lret
add
int3
or
je
adc
imul
lret
stos
inc
pop
cmp
insl
jo
jmp
sbb
inc
ljmp
xor
jg
push
adc
inc
add
inc
addb
mov
dec
dec
or
adc
xchg
push
pop
shl
jb
fdiv
out
adc
sub
clc
and
inc
pop
dec
jp
jne
loope
cmp
push
stos
lock
cmp
and
pop
mov
mov
sbb
test
lcall
or
ds
int3
mov
aaa
shrl
loope
cs
ret
sub
paddusb
push
ss
xchg
cmc
inc
or
aad
inc
fcomi
jmp
jno
xor
mov
push
mov
sbb
push
mov
xchg
xor
das
mov
push
ja
pop
jbe
dec
into
mov
xor
jg
push
mov
sahf
jae
inc
dec
mov
or
rcrb
push
mov
inc
or
xchg
inc
mov
sub
cld
dec
mov
sbb
xor
or
sbb
mov
lcall
jb
loope
xchg
xchg
xor
push
adc
mov
pop
fwait
test
push
out
or
xchg
daa
sbbb
xchg
out
xchg
stc
pop
test
add
mov
inc
xchg
sub
jge
push
aad
les
fdiv
cltd
or
lahf
loop
mov
sub
sbb
fs
inc
or
or
test
lahf
and
shrl
ds
loop
call
add
mov
lds
dec
cwtl
out
sbb
jns
cld
pop
jbe
mov
test
and
pop
outsl
sbb
xor
jo
popf
jns
mov
jle
push
xor
inc
fistl
arpl
ljmp
icebp
fistpll
aad
mov
dec
pop
fsubs
cltd
movb
jb
das
push
mov
adcb
sub
std
movsb
enter
xor
dec
ficoms
cmp
sti
xor
movsb
xor
idivl
jno
insb
sub
add
push
rcll
add
push
popf
xchg
mov
call
sub
pop
fstps
jmp
loop
cli
push
lods
cltd
fs
push
lahf
outsl
add
mov
test
xor
xchg
jns
lret
mov
add
movsb
pop
in
addr16
inc
cmp
ja
xor
adc
mov
pusha
das
mov
pop
push
popf
bound
xchg
fdivl
in
sub
mov
inc
mov
test
aas
imul
imul
sti
xchg
jae
in
push
push
std
push
fidivs
in
cmpsb
fildll
shll
pop
test
or
mov
pop
rcrl
or
or
or
sarb
ret
in
and
lds
add
jle
fwait
push
sbb
pop
inc
pop
test
add
jmp
ret
je
jns
je
add
xchg
or
cmpsb
jo
cmp
fsubrs
and
iret
int
sbb
pop
dec
popl
outsb
add
add
orb
mov
sub
test
stos
sbb
xchg
jg
fcoms
popa
mov
xchg
lahf
icebp
mov
loope
sti
add
mov
popf
inc
lret
cmp
cmp
add
and
int3
push
pushf
es
roll
scas
pop
or
lds
jl
xor
push
adc
scas
punpcklbw
add
int3
xchg
dec
xor
push
add
jmp
dec
push
mov
xchg
sbb
cmpsl
fneni(8087
inc
hlt
imull
push
xor
ret
sbbl
jmp
jne
xor
ss
sbb
pop
into
jmp
sub
sbb
jle
cmc
pusha
dec
pop
repnz
movsb
mov
inc
adc
ljmp
ljmp
push
out
xor
cmp
loope
fcoms
imul
scas
inc
jmp
leave
inc
iret
dec
add
xchg
push
jp
mov
mov
in
sbb
gs
cwtl
out
mov
pop
cmp
mov
mov
std
jae
sarl
adc
sbbb
insb
push
cmpb
mov
push
cmpsl
loop
push
cmp
dec
inc
dec
and
push
cmp
mov
imul
mov
mov
fisubs
test
mov
sub
test
add
add
pop
or
mov
sbb
sub
mov
adc
mov
push
pop
in
sub
pop
pop
iret
daa
jnp
dec
mov
aaa
mov
fwait
mov
repnz
fisubrs
shl
je
xchg
xchg
jnp
and
pushf
fisttpl
xor
and
xchg
es
movsl
pop
mov
mov
push
incb
pop
lock
sbb
jg
insb
sbb
pop
jne
xchg
sbb
push
sub
adc
lods
repz
jns
in
ret
into
xlat
jg
inc
fstps
xchg
lods
jecxz
cli
mov
test
cmp
push
in
adc
inc
mov
scas
add
fisttpl
pop
cmp
pop
fmuls
xorl
scas
push
js
adc
int
es
int
cmpsb
test
pushf
ffreep
movsb
xor
stc
ljmp
jmp
mov
xchg
fisttpll
mov
add
lds
and
and
xchg
pushf
aam
and
aam
outsb
push
add
push
arpl
inc
pop
std
movsb
pop
es
xchg
mov
in
test
adc
dec
filds
fisttpll
movsl
sub
mov
add
jle
or
sbb
xchg
add
jb
adc
dec
dec
jg
call
cwtl
push
aad
fcmovnb
dec
es
mov
mov
xchg
sahf
mov
stc
push
out
xchg
sub
test
jae
imul
jmp
and
sbb
mov
ficoms
cmpsb
test
sbb
out
push
faddp
push
lahf
add
loop
adc
addr16
sbb
add
imul
xor
fcmovne
cmp
mov
cmp
add
pusha
cs
and
mov
fwait
cmpsb
pop
xchg
push
xor
add
fstpl
enter
loop
jmp
mov
sub
dec
js
outsb
dec
in
or
jnp
pop
lods
shl
mov
subb
aam
xor
pop
inc
pop
test
inc
outsb
sbb
cwtl
out
dec
jb
std
cmp
xchg
fcmovbe
outsl
ljmp
xchg
fmuls
fwait
dec
lods
xchg
daa
adc
inc
pop
in
gs
iret
imul
jne
sti
push
divb
dec
movsb
or
aad
orl
or
in
xchg
fbstp
inc
xchg
inc
xchg
in
push
ret
ss
fstpt
dec
add
push
cmp
imul
add
jl
and
test
and
roll
les
cmpsb
cltd
add
xor
hlt
adc
inc
sub
mov
mov
and
inc
push
mov
sub
adc
and
ljmp
outsl
mov
xchg
pop
push
xchg
mov
lds
mov
fidivl
fsubl
test
mov
lock
xlat
jmp
dec
xor
inc
dec
divb
mov
and
pop
jae
pop
in
mov
push
lret
cmp
iret
pop
lahf
rorl
pop
sbbl
lds
gs
cmp
cmpsb
sub
push
and
icebp
push
data16
test
push
in
daa
ss
movsl
loop
in
test
sarl
aam
imul
nop
xchg
lea
or
sti
std
cmp
fcomps
pop
out
or
lahf
in
pushf
sbb
in
inc
negb
and
cmp
and
mov
jne
ljmp
aaa
fwait
adc
pushf
dec
cltd
inc
add
mov
cltd
jle
aas
lea
popa
adc
das
jg
mov
fstps
fcompl
lret
fcoms
or
fs
mov
mov
fbstp
inc
mov
pop
xchg
mov
and
adc
pop
mov
lret
sar
popf
sub
fnstcw
adc
frstor
push
push
xchg
cld
or
pop
jne
icebp
cmp
into
add
or
or
push
sub
or
dec
in
imul
out
add
imul
loop
dec
and
lods
mov
rolb
xchg
shrl
loopne
out
mov
mov
das
mov
mov
loop
or
icebp
mov
cmp
cli
sub
push
ficoms
jge
lods
jmp
ljmp
sbb
adc
mov
clc
adc
popa
add
jnp
pop
addr16
lahf
mov
sub
jae
fdivrs
sbb
hlt
ficomps
das
jge
jo
stos
js
add
and
fmuls
int3
shll
sbb
xlat
push
mov
mov
int3
xor
inc
enter
pushl
outsl
jns
pop
inc
push
lock
or
lock
dec
cmpsb
push
mov
mov
and
mov
jecxz
xchg
mov
in
imul
cmp
cmp
stos
shlb
leave
dec
adc
lret
jg
sub
jmp
rorb
incl
stc
icebp
fistpl
pop
add
push
fucomp
mov
pop
out
fwait
sbb
popf
push
lcall
shlb
shlb
fimuls
jne
gs
inc
jg
bound
inc
rcll
sbb
sbb
inc
leave
fldl
sahf
movsb
and
inc
rclb
adc
in
stc
test
lds
inc
imul
aad
inc
mov
mov
fldt
dec
mov
test
call
jl
out
jmp
xlat
out
movmskps
insl
or
fldenv
stos
cld
ljmp
sbb
and
gs
sahf
xchg
lods
pop
test
cmp
push
sbb
leave
xor
pop
fsubrs
mov
dec
pop
mov
sarl
sub
xchg
lock
xor
das
pop
fsubs
enter
sbb
rolb
mov
add
ret
std
lds
jb
pop
xor
cmp
adc
ficoms
add
xor
sub
ss
inc
into
mov
subl
loop
arpl
xchg
push
sub
jmp
addr16
lcall
das
bound
mov
movsl
pop
mov
xchg
xchg
sub
xchg
cmpl
leave
xlat
push
push
jbe
nop
sub
sbb
jl
push
roll
adc
jnp
nop
out
out
mov
imull
sbb
mov
sbb
and
in
jno
and
jge
xor
fwait
xor
mov
cmp
sub
push
idivl
add
imull
mov
pop
jge
push
xchg
sub
lret
push
les
inc
out
sarl
addl
repnz
int
repz
test
cmp
outsb
mov
jne
add
inc
mov
repnz
cs
adc
dec
test
lret
xchg
out
xchg
aaa
mov
loopne
cmp
int3
nop
sub
cmp
add
std
push
dec
adc
lds
jne
cmp
mov
sub
hlt
adc
std
test
sub
aam
inc
fists
push
xlat
aas
mov
xchg
int
sub
jne
movsb
or
or
cmp
shl
fisttpl
popa
mov
and
sbb
push
dec
and
dec
add
mov
dec
mov
inc
pusha
in
nop
ss
out
inc
jae
mov
loope
mov
fldcw
loope
js
fmul
mov
test
xchg
or
aad
or
pop
test
cmp
ss
loop
inc
cs
pop
out
insl
out
sub
into
pop
inc
inc
fbstp
repz
pop
nopl
std
sub
inc
aad
jns
cmpb
sub
sub
and
cmpsb
fidivrl
adc
inc
push
jp
xor
mov
pushf
sub
movsl
fsubs
xchg
call
add
mov
or
and
jns
lret
aad
mov
mov
into
into
addr16
sub
push
popa
sbb
dec
imul
in
xchg
or
movsl
xchg
roll
xor
int3
sub
pop
and
mov
loope
leave
push
ja
xor
jg
cli
inc
push
std
popa
jp
add
cmp
rclb
popa
test
aaa
xor
cmpsb
aam
push
mov
cmp
nop
push
je
pop
mov
movsb
cmpsb
push
jbe
inc
insb
push
xchg
xchg
int
pop
ss
movsl
pop
sub
fprem
lret
aam
ja
das
cmpsl
arpl
das
adc
cld
fucom
loop
les
jle
test
incb
repz
ljmp
lahf
ljmp
lock
mov
test
gs
or
xchg
mov
cmpsl
dec
push
pop
cmp
hlt
adc
sahf
roll
into
lds
ret
dec
lret
adc
mov
icebp
in
mov
xlat
add
clc
pop
les
inc
mov
addr16
xchg
xchg
popf
jmp
lret
cmp
das
pop
scas
mov
insb
inc
sahf
xchg
cwtl
mov
mov
adcl
out
sbb
pop
shll
mov
mov
push
push
inc
or
cmp
jg
mov
insl
cmp
ss
leave
push
inc
movsb
lahf
add
jb
pop
push
cmpsl
cltd
and
mov
cmp
pop
jecxz
mov
push
sub
sbb
adcb
jecxz
enter
insl
pop
cmp
jge
fsubrs
inc
fsubs
or
push
js
aas
sbb
dec
add
mov
pusha
rcrl
push
push
movsb
dec
fldcw
push
rorl
mov
jge
icebp
mov
rorl
jmp
mov
dec
cwtl
sti
orl
jbe
and
lahf
cmc
iret
xchg
fwait
push
sti
adc
or
test
mov
inc
sbb
and
jg
push
push
loopne
sub
pop
xor
push
pop
scas
inc
pop
cmp
es
les
xchg
sahf
test
test
mov
fmull
or
jnp
mov
and
pop
inc
mov
insl
rcrl
in
outsb
stos
inc
in
dec
dec
hlt
cmp
ret
jae
ret
xchg
add
inc
movsl
ret
insl
push
mov
or
test
outsl
lock
shll
loopnew
pop
ss
jnp
sti
and
inc
arpl
fisubrl
adc
cmpsb
lret
sahf
adc
mov
fwait
xor
repnz
dec
mov
popa
cwtl
mov
inc
outsb
lea
lret
inc
fsubr
fs
call
test
rolb
inc
add
add
fwait
push
loopne
inc
dec
adc
mov
mov
data16
pusha
fiaddl
out
leave
xchg
aam
inc
lods
lods
loop
mov
jae
pusha
xor
cmp
cli
pop
outsb
xchg
stos
jae
test
or
sub
fisubs
mov
pop
ss
cmpsl
jmp
push
cwtl
dec
stc
push
cmp
into
sbb
int
pop
cmpsb
outsl
pushf
movsl
jno
call
lahf
mov
mov
aas
jmp
test
mov
in
imul
outsl
cmc
adc
sub
lock
dec
jns
adc
repnz
fisubs
xchg
cld
clc
je
in
data16
dec
arpl
lahf
dec
fsubrl
pushf
push
adcb
dec
insl
mov
sbb
das
jno
mov
addr16
ja
mov
mov
dec
outsb
outsl
sub
inc
nop
push
enter
jne
repnz
xchg
inc
or
adc
dec
jl
pop
mov
arpl
and
mov
and
ret
pop
pop
sub
push
stc
xchg
cmpsb
fisubrl
mov
sbb
jae
rorb
dec
dec
fcoms
outsb
adc
adc
and
add
shrb
push
adc
xor
inc
idivb
sahf
xor
or
loope
js
lock
pop
and
sub
pop
fnstenv
cmp
gs
test
test
lcall
jbe
aam
push
test
xor
cmpsb
mov
inc
roll
insb
mov
cmp
sbb
int3
jmp
cmpsb
lahf
jl
mov
mov
clc
pop
sub
les
das
fwait
idivl
add
jne
gs
jl
orb
inc
stc
iret
loop
call
cltd
into
lods
leave
or
shrb
adc
pushf
xchg
inc
lods
add
lods
push
or
push
cwtl
jne
mov
mov
repz
mov
in
add
xlat
push
sub
mov
and
lods
movsb
xor
movsl
pop
lock
mov
jns
cli
dec
and
adc
xchg
sbbb
fiaddl
cld
stos
pop
sti
cmp
dec
mov
inc
adc
push
sbb
mov
cltd
in
xor
mov
push
mov
ja
pop
mov
jecxz
mov
pop
nop
xchg
fs
loopne
std
jp
mov
lods
xchg
or
sbb
dec
and
iret
cwtl
adcb
mov
inc
sub
push
mov
pop
inc
xor
cld
orl
cmc
adc
jp
mov
cwtl
cmp
sbbl
nop
mov
mov
aas
sbb
push
adc
jge
pop
test
hlt
daa
push
jle
call
mul
inc
jg
xor
stos
push
xchg
mov
push
dec
pop
adc
mov
push
xchg
or
xchg
andl
and
adc
pushf
jb
xchg
mov
mov
cmp
shrl
xchg
leave
mov
stc
mov
outsb
pusha
pop
inc
shll
test
hlt
mov
int3
mov
das
scas
dec
ljmp
insb
dec
lahf
ror
push
mov
xor
jge
sub
mov
adc
stos
dec
cltd
jno
insl
cmp
dec
mov
xor
mov
and
adc
inc
add
and
shll
std
stos
mov
imul
mov
ds
sub
adc
dec
jno
inc
ds
in
bound
and
fmuls
xrelease
pusha
inc
pop
iret
push
xor
mov
nop
or
pop
push
adc
int
jb
in
stos
mov
sub
ss
aad
ljmp
xchg
dec
gs
mov
push
icebp
pop
sbb
rorb
mov
add
mov
les
ret
call
mov
adc
int
sub
mov
leave
pop
std
lret
xor
inc
lahf
ja
ret
adc
scas
sub
pop
sub
ss
pushl
mov
sub
lahf
pop
mov
xchg
mov
cmp
cmpsb
rcr
xchg
jecxz
loop
jmp
mov
sti
adc
push
loopne
sub
outsl
psubusb
fldt
push
hlt
fistl
scas
std
int
cmp
and
ss
dec
test
pop
pcmpeqw
add
xchg
scas
gs
sbb
and
xor
add
dec
in
push
mov
mov
fs
mov
xor
shr
imul
adc
jmp
jle
out
pop
dec
cwtl
or
lds
mov
dec
push
in
into
or
or
jmp
or
cwtl
sbb
push
rcll
adc
xchg
add
mov
int
xor
mov
sbb
idiv
xorl
jecxz
or
xor
dec
imul
adc
adc
cwtl
jecxz
mov
es
scas
mov
dec
cmp
lahf
pusha
cmc
lcall
add
mov
cmc
xor
lahf
aas
dec
ds
lods
sub
mov
out
stos
xchg
addr16
test
push
mov
shr
push
fcomip
in
push
cmc
cmp
sbb
shrl
ud0
push
adc
pop
and
cmpsl
lea
and
in
push
ss
pop
sub
test
xor
or
xchg
and
lods
jae
ss
in
push
pop
mov
addr16
pop
pop
arpl
mov
sbb
or
mov
hlt
std
stos
leave
insb
mov
js
rclb
aad
adc
xchg
dec
lea
jp
push
cs
leave
or
scas
fcmovnbe
sbb
cmp
mov
ret
ljmp
mov
adc
mov
pause
add
nop
pop
push
mov
add
sahf
sbb
or
popl
in
mov
test
sub
xorb
jecxz
aad
js,pn
out
int
mov
cmpsl
xor
lock
mov
daa
or
inc
push
mov
outsb
out
mov
inc
cwtl
dec
std
bound
inc
aad
xor
or
sti
inc
mov
shll
push
sbb
mov
xlat
outsb
lret
sbb
dec
in
or
or
adc
cmp
jge
rcrb
mov
add
jecxz
inc
mov
dec
mov
mov
dec
lock
cmp
test
repnz
dec
jg
movsl
insl
call
xor
clc
or
test
testl
pushf
test
test
cwtl
inc
fdivrp
popf
and
sub
or
stos
testb
stos
aaa
mov
aam
pop
mov
js
les
xchg
roll
arpl
idivb
mov
mov
jmp
and
cld
leavew
sub
or
xlat
mov
cwtl
cmp
ja
xor
push
fisttps
mov
inc
xlat
mov
test
mov
ja
jb
xor
out
out
outsb
jp
fistpll
add
divl
rol
cltd
arpl
mov
and
data16
add
bound
mov
mov
fs
and
mov
call
dec
fwait
icebp
sbb
add
movsb
jae
repz
nop
xchg
pop
lea
and
flds
cmp
add
dec
pop
jge
lea
pop
or
movsl
push
mov
mov
adcb
jp
cmp
xor
xor
cmpsb
shll
lds
sub
stc
das
sub
pop
insb
xchg
add
pushl
in
jl
sbb
repnz
decl
xor
out
pushl
push
xor
bound
lret
mov
push
mov
pushf
es
mov
mov
jbe
sub
inc
pop
pushf
mov
xchg
and
xchg
mov
insb
dec
cmpsb
xchg
popf
enter
mov
xor
or
lcall
arpl
inc
aas
adc
jp
daa
lea
jae
pop
aad
aad
mov
add
xor
jg
dec
ljmp
test
or
aad
add
adc
xchg
fistps
fbstp
pop
sub
scas
dec
xchg
sar
push
stc
mov
xchg
lret
mov
arpl
or
adc
mov
mov
sub
mov
test
call
insb
xlat
roll
xchg
jno
xchg
adcb
mov
icebp
in
test
ret
test
mov
dec
push
cs
lds
iret
aam
loopne
jb
push
dec
jecxz
push
hlt
clc
push
sbb
in
orl
cli
xor
mov
jno
les
dec
add
popf
sub
jb
das
xor
pop
aad
sahf
ds
test
cli
stos
mov
lcall
sbb
ljmp
iret
xchg
mov
push
cmp
loop
inc
push
adc
mov
out
jmp
mov
jbe
mov
rorl
popf
mov
push
add
movsb
mov
mov
jne
xchg
inc
lahf
pop
cmp
add
push
xchg
popf
iret
rcr
scas
cltd
jnp
mov
sub
jp
insl
sub
les
cmp
cmpsl
mov
lcall
lahf
pop
stos
or
add
cld
shlb
cmp
mov
mov
pop
xor
xor
or
ds
iret
inc
insb
jb
cmp
std
aas
out
jg
icebp
pop
icebp
out
cwtl
jmp
pop
int3
sbb
add
add
mov
inc
lock
cmp
xlat
push
in
cs
push
add
pop
sbb
cmp
movsl
and
cmc
fdiv
in
ror
xchg
sbb
xchg
jmp
movsb
push
jmp
push
pop
dec
mov
sbb
sbb
ret
cmc
dec
pop
lcall
fnstcw
adc
jle
jge
inc
cmp
xlat
outsl
sub
mov
mov
mov
sahf
fdivl
sbb
mov
sub
out
rorb
cmp
pop
jb
insl
jns
dec
lahf
xchg
out
inc
jno
mov
in
cs
sub
jb
mov
into
aam
scas
loop
push
or
scas
inc
jo
jae
popf
adc
movsb
ret
jecxz
cmp
add
xlat
stos
xchg
xlat
mov
dec
stos
int3
out
loop
lea
sbb
or
cmp
fwait
inc
scas
shrl
stc
pop
mov
fbstp
push
lock
cmp
lret
sub
cmp
xchg
aad
roll
xor
push
dec
mov
repz
jecxz
das
adc
xor
pop
std
fdiv
fldenv
outsl
inc
sti
test
xor
push
out
clc
mov
call
int3
cs
scas
pop
popf
out
mov
xchg
imul
jb
outsl
fwait
into
sub
and
lods
pop
fwait
insb
lock
dec
lds
adc
hlt
add
lock
loope
or
mov
int
xchg
jge
iret
nop
dec
mov
shll
call
cwtl
jb
xlat
xchg
add
sub
or
sbb
inc
or
loopne
lahf
xor
xchg
test
lods
pop
lock
dec
pop
and
xor
mov
bound
mov
jb
cmp
cmpsb
xor
cmpsb
xor
lcall
dec
mov
jge
pop
dec
cmpb
push
push
std
jmp
std
or
sbb
pushf
push
or
in
cmpsb
xchg
jbe
rcrb
fcoml
dec
xor
pop
push
sbb
data16
ss
outsb
stc
stc
scas
cmp
rcll
test
xor
push
dec
fdivrl
pop
sarw
mov
push
sbb
addr16
shrb
sub
push
leave
cmpsl
or
mov
push
jo
sub
pop
xchg
inc
cs
ljmp
rorb
cmp
mov
or
adc
mov
jae
push
pusha
test
cmp
inc
arpl
popa
addr16
pushf
xor
mov
xor
pop
pusha
popf
sarl
xchg
inc
loope
fldt
call
shll
js
mov
andb
push
outsb
aas
mov
jne
loope
push
lret
mov
test
xchg
cs
xchg
push
sar
sub
stos
sarl
jle
test
mov
mov
adc
out
dec
jg
jmp
stos
or
ret
sti
jge
push
and
adc
fiaddl
scas
ret
xchg
pop
inc
scas
mov
fnsave
sbb
fcompl
xchg
inc
push
push
and
and
imul
rcrb
pushf
or
push
push
fldenv
pop
fldenv
into
inc
push
mov
adc
inc
adc
jge
mov
dec
mov
scas
lret
ret
vphaddbd
jge
mov
dec
fs
je
pop
cmp
loope
jmp
cwtl
dec
mov
sub
scas
xor
ss
mov
scas
aaa
jmp
jb
jae
adcb
jns
mov
mov
xor
cmp
jb
scas
cmc
dec
jno
imull
iret
xchg
stc
mov
pop
popl
icebp
pushw
test
and
mov
pop
and
xchg
mov
jp
push
call
xor
cmc
jno
pop
js
pop
pop
mov
pusha
xor
cltd
scas
cltd
mulps
and
jmp
or
int
jns
mov
pop
or
push
sbb
or
sbb
std
mov
ja
addr16
pop
or
dec
les
xlat
outsl
das
xchg
push
cmp
cwtl
test
ja
dec
shlb
lds
bound
mov
arpl
insb
ss
cli
ret
sbb
jecxz
in
jb
pop
icebp
lcall
enter
jns
rcl
flds
lcall
mov
mov
fadds
push
ljmp
fldenv
ss
imul
mov
das
ja
sub
iret
cmp
cmp
std
cmpb
arpl
bound
shll
fadds
stc
xchg
lods
adc
mov
aam
lds
push
repnz
sahf
lahf
sub
xor
imul
rcrl
xor
ja
loopne
popf
mov
std
pop
sub
rcr
shl
sub
stos
cmpsb
test
lock
push
addr16
or
decl
add
cld
pop
lret
icebp
push
iret
cmp
mov
add
sarl
pop
xchg
notl
sahf
pushf
das
imul
out
pop
xchg
ja
mov
push
jp
scas
jl
dec
push
imul
push
mov
pop
push
jecxz
sti
fsubrl
sbb
add
stc
aaa
cmpsb
dec
jp
lret
pushl
data16
popf
adc
out
sbb
add
pop
mov
sbb
and
vcvtsi2ssl
movl
addl
mov
jno
sub
jb
jns
jns
or
or
sbb
mov
inc
push
fwait
leave
lea
int
shl
xor
dec
jne
xor
lcall
inc
lret
cmpsl
gs
sub
mov
xchg
ror
psubsw
daa
mov
mov
rcl
aam
lret
push
mov
push
outsl
out
jb
xor
xchg
popa
enter
cmp
inc
pop
lret
pop
mov
mov
imul
adc
mov
imul
and
adc
mov
jns
hlt
mov
cld
adc
sub
stc
in
inc
jae
ljmp
push
mov
test
fwait
test
adc
mov
push
xchg
dec
lods
pop
sbb
adc
jg
pop
lcall
fistps
scas
fcomp
out
xor
lock
dec
mov
les
xor
pop
lret
sahf
sub
iret
fdivrl
imul
cs
shrb
push
bswap
es
xor
dec
dec
rcr
jns
lret
dec
dec
jae
das
rorl
xor
fninit
out
cmp
pushf
nop
mov
cltd
test
in
in
and
mov
pop
xor
sbb
jge
dec
cwtl
or
outsb
sub
iret
xor
and
fsubp
jle
fbstp
dec
stos
roll
sub
out
repnz
sahf
or
cmp
fwait
mov
adc
cwtl
sbb
xor
daa
es
push
sub
push
xchg
aaa
pushf
or
icebp
stc
mov
pop
repz
jbe
out
inc
mov
xchg
mov
cs
ret
es
ret
xchg
cmp
pop
in
imull
add
cli
roll
jp
mov
xchg
test
dec
mov
mov
iret
pop
rol
dec
rclb
sbb
cmp
or
jb
add
insb
pop
leave
mov
dec
stos
sub
pop
pop
lds
mov
xchg
repz
dec
and
xchg
popa
xchg
icebp
aas
aaa
inc
pop
mov
mov
dec
rclb
adc
push
xchg
adc
out
addr16
mov
loope
inc
fisubrl
arpl
mov
push
pop
sub
movsb
ds
mov
add
mov
sbb
ret
lret
fneni(8087
cmp
lret
push
icebp
test
mov
pop
mov
loopne
stos
dec
xchg
insl
jno
repnz
and
les
les
hlt
into
xchg
pop
ss
sub
jns
cmp
dec
sub
and
daa
mov
pusha
sbb
cmp
sub
mov
gs
pusha
ds
clc
jno
xor
cs
fistpl
mov
imul
sub
push
fwait
js
ret
adc
std
repz
xor
xor
xlat
mov
cwtl
in
or
std
add
mov
outsl
loop
jmp
out
mov
mov
loopne
out
cmp
adc
sub
jle
pop
outsb
rol
ret
clc
mov
xchg
dec
loopne
fs
in
fldt
push
sti
repz
add
and
dec
mov
cmp
xchg
xchg
xchg
or
mov
pop
sub
pop
push
dec
daa
ds
fisubrs
mov
adc
addr16
mov
leave
xchg
or
push
push
sub
pop
in
dec
xlat
inc
imul
xlat
icebp
fdivr
pop
mov
fidivs
jle
ds
mov
das
mov
stc
sub
pop
inc
inc
jae
push
or
movsb
ret
bound
pushf
adc
outsb
fnstsw
outsb
add
pop
mov
inc
sub
or
cmp
add
pop
nop
xchg
es
aaa
sbb
sub
add
xchg
dec
fs
inc
cs
lods
push
lds
dec
outsl
lcall
lret
pop
cmpsb
cmpsb
scas
adc
in
jge
lock
and
mov
add
xor
adc
or
xchg
lods
fcom
mov
icebp
xor
pop
dec
pop
xor
je
and
mov
push
add
and
outsl
mov
push
scas
add
xchg
addr16
pop
repnz
in
test
and
andb
ljmp
jp
inc
xchg
sbb
mov
cmp
js
dec
pop
pop
jg
call
inc
mov
sub
shlb
mov
cmp
mov
mov
mov
cmp
pop
jb
add
aaa
lds
push
sub
mov
shlb
pop
push
in
movsl
and
lcall
lret
or
mov
fildll
cld
xor
mov
cmp
xlat
rolb
adc
sub
push
and
pushf
xor
mov
pop
sbb
pusha
pop
shll
xor
mov
sub
adc
aaa
inc
add
fwait
movsb
mov
das
imul
call
test
sbb
cmc
push
jbe
add
xchg
dec
and
jmp
int3
cld
xor
shll
mov
mov
pop
mov
inc
mov
dec
scas
sub
jns
lcall
mov
sbb
mov
lods
xor
sahf
cli
bound
add
insb
push
mov
cmp
xchg
aam
jecxz
inc
add
cwtl
pop
dec
mov
inc
sub
mov
sub
fidivrl
in
xchg
in
dec
outsl
lock
mov
repz
mov
add
mov
sub
adc
and
data16
inc
pushf
fwait
popf
movsb
or
add
jne
sti
gs
test
jl
adcl
cmc
gs
das
mov
rcrb
adc
in
mov
lret
mov
lods
je
fisttpl
xor
push
adc
push
ss
in
sub
pop
stos
mov
mov
xor
xchg
sub
movswl
call
insl
jp
shll
insl
test
dec
cltd
ja
cmp
pop
test
rcl
fcoml
icebp
movsb
mov
fisttpll
lret
decl
arpl
mov
xchg
or
lcall
out
mov
inc
inc
or
lock
movsl
push
pop
daa
and
gs
sbb
sub
xchg
dec
xor
inc
nop
push
pop
mul
push
mov
imul
xor
pop
and
mov
sub
xchg
dec
xchg
and
pop
daa
dec
call
jmp
out
mov
es
movsl
and
int
lret
das
dec
dec
icebp
pop
cwtl
test
pop
cmp
ss
stos
jmp
repnz
dec
stc
jmp
or
mov
loope
push
in
pusha
test
je
xchg
or
cmp
daa
repz
imull
fnstcw
cmc
icebp
cs
shll
test
and
lcall
lahf
ss
in
mov
out
inc
shr
jo
inc
sbbb
fsubs
in
movsb
scas
jge
fistl
or
repnz
cmpxchg
jb
pop
test
lahf
and
sarb
out
xor
xor
inc
sub
inc
xchg
lea
aaa
cwtl
mov
in
rcrb
addr16
loope
aam
mov
ja
ss
jno
mov
jmp
xlat
lea
fs
or
mov
or
add
dec
mov
push
aaa
xchg
push
pop
stos
cmp
lods
negb
dec
or
inc
jnp
sbb
shrl
es
dec
or
popf
jecxz
sub
mov
lods
ljmp
daa
fistpll
cmp
sbbl
jo
fcmovnbe
repz
movb
adc
iret
lahf
xor
sub
test
and
mov
sbb
popa
dec
pop
mov
cwtl
inc
pushf
and
insl
xchg
cs
out
call
je
fimuls
add
inc
lea
inc
mov
pop
xchg
aaa
adc
dec
daa
cmc
daa
jne
xor
mov
inc
imul
cmpsl
cmpsb
cmp
jmp
aas
clc
push
das
push
lods
cmp
cltd
push
xchg
xchg
test
mov
dec
into
xorl
inc
scas
flds
jl
mov
out
call
jnp
rolb
and
fisttpll
push
sub
jle
inc
fildl
push
lret
push
or
out
mov
sub
mov
xchg
cmp
ror
pop
aas
mov
insl
lahf
adc
lods
roll
jb
aad
das
jb
xor
dec
mov
adcl
and
shll
pop
into
xchg
push
inc
out
adc
subl
lds
jge
dec
push
push
test
pop
add
ja
adc
rclb
jo
jae
xor
call
mov
mov
inc
aad
mov
xor
clc
add
pusha
pushf
pop
arpl
mov
jl
in
stos
jecxz
xchg
adc
mov
xchg
les
rcll
sbb
lock
mov
xchg
notl
or
push
pop
cmp
ja
or
outsb
push
add
lcall
dec
push
ss
jns
inc
sub
rcl
push
inc
stos
repz
jbe,pn
jae
out
scas
dec
cmp
in
leave
adc
mov
imul
pop
iret
sbb
adc
jns
ljmp
sbb
sbb
jg
fstpl
popf
xor
cwtl
lahf
push
mov
dec
ljmp
mov
int
test
out
add
mov
add
mov
inc
inc
imul
push
pop
mov
mov
loop
loop
dec
adc
jmp
adc
dec
ljmp
imul
cltd
dec
push
ret
pop
orb
addr16
cmpsl
and
cmp
mov
shl
aam
mov
rcrb
cmp
mov
cmp
mov
movsb
xorb
mov
adc
mov
pop
mov
pop
jae
or
out
mov
and
aad
inc
or
sub
test
inc
push
and
or
nop
dec
cwtl
cmp
jecxz
ss
mov
or
sub
fidivrl
cmp
clc
rcll
aam
push
ret
dec
mov
fiaddl
lea
push
inc
insl
add
es
or
test
in
mov
popf
xor
dec
jbe
scas
ret
aad
jo
sbb
mov
js
push
clc
sub
cmp
loopne
cli
ror
dec
or
repz
xor
lds
arpl
push
xchg
das
xor
int3
scas
mov
add
dec
xchg
lcall
pop
xor
int3
or
jno
movsl
aaa
gs
out
adc
addr16
leave
cs
cmp
sub
std
dec
jmp
or
mov
xchg
adc
push
mov
inc
lahf
adc
and
mov
dec
stos
xorl
fldl
jno
dec
jecxz
xor
lods
daa
scas
movsb
push
dec
int3
xchg
insl
insl
mov
push
sub
call
pop
mov
jge
lods
cmp
pop
push
add
jge
cmpsl
out
repnz
packssdw
outsl
xchg
xor
fldenv
sti
push
movhps
adc
mov
loope
and
fisttpl
jne
in
lods
mov
mov
sbb
jne
xchg
sbb
xchg
sbb
or
xchg
daa
add
mov
fs
das
mov
mov
sti
mov
lds
mov
aam
jle
jae
iret
jg
xor
pop
sahf
inc
outsl
mov
jb
xchg
insb
aad
lods
pop
bound
push
fidivs
loop
pushw
jmp
fidivrs
push
adc
pop
ja
lea
sbb
lret
pop
outsb
cmpsl
ja
adc
lret
cmp
lcall
scas
mov
mov
mov
push
xor
push
outsb
ljmp
in
ret
out
outsl
adc
rcrl
popf
ds
pop
push
mov
clc
decl
jns
in
mov
insl
in
hlt
sahf
inc
jmp
stos
leave
lret
mov
hlt
sub
add
call
inc
push
popf
subb
mov
pop
jmp
test
dec
dec
xchg
jns
ljmp
mov
mov
stos
fldt
and
repnz
push
leave
xor
loopne
ss
fs
mov
hlt
leave
js
push
mov
repz
cmpsb
hlt
ljmp
adc
subl
insl
repnz
jb
xchg
imul
dec
pop
repz
lods
or
mov
cld
cmp
mov
ljmp
lret
cmp
cli
jle
sbb
popf
sbb
xchg
es
cmpb
lret
into
xchg
ficoml
out
adc
mov
sub
test
pushf
xor
dec
sub
cmp
or
xchg
std
lods
das
fwait
into
mov
es
shr
lret
or
mov
aas
dec
js
pop
jecxz
and
imul
cltd
inc
div
dec
mov
jle
addl
xchg
pop
mov
mov
dec
imul
adc
subb
inc
dec
inc
test
jnp
cmp
outsl
js
adc
data16
mov
push
fdivrl
outsb
es
outsl
cmp
insl
ss
gs
std
rolb
lcall
scas
mov
test
pop
mov
movsb
adc
inc
mov
in
dec
jno
adc
mov
cmpsl
mov
push
lahf
push
jg
adc
jge
dec
jmp
push
inc
movsb
orl
imul
mov
iret
jbe
and
popf
push
jecxz
aas
pop
fcoms
ret
mov
testl
mov
popa
xor
sub
push
mov
lods
hlt
mov
push
insb
stos
sbb
mov
cmp
out
mov
pop
test
push
popa
push
dec
fld
sbb
stos
in
jo
arpl
lret
leave
mov
stc
pop
sub
ficompl
xchg
aam
pop
inc
lahf
sbb
stc
lods
adc
clc
fcmovu
and
enter
inc
or
pop
mov
aad
jl
shlb
in
orb
jb
fnstsw
jl
ret
test
scas
int
ds
and
dec
cmc
test
dec
sub
adc
sub
and
negl
push
mov
clc
push
imul
sub
sub
insl
xchg
scas
movsb
das
jb
popa
xorb
mov
mov
mov
jns
mov
push
out
or
mov
scas
and
mov
cwtl
jecxz
in
adc
pop
jae
pop
aam
jnp
or
mov
int
inc
fwait
or
jo
or
jns
inc
xchg
push
inc
cmp
cmpsl
mov
add
mov
jp
push
cmpxchg
mov
adc
and
dec
push
pop
inc
xor
rorb
or
mov
ds
push
and
movsb
out
orb
loopne
movsb
pop
add
or
xchg
ficompl
push
adc
adc
and
push
jl
pop
dec
outsl
push
subb
into
fildll
jg
insb
pop
nop
and
arpl
sub
repnz
inc
decb
jg
sub
push
ret
pop
in
jl
test
push
jle
scas
xchg
push
mov
ror
add
cmpsl
cwtl
pop
leave
aas
cmp
popa
xor
fxsave
cmp
jle
cwtl
inc
and
iret
stos
je
out
cmp
pop
arpl
push
adc
push
pop
dec
decb
in
lock
dec
add
xor
push
pop
jmp
add
sub
int3
arpl
arpl
mov
jae
push
fidivs
sub
dec
mov
subb
jge
cmp
mov
push
into
cli
addr16
push
and
adc
iret
lcall
push
mov
pop
jb
xlat
xor
js
lret
and
jmp
dec
mov
xlat
repnz
shrb
dec
shlb
daa
lods
push
push
in
jo
popf
xor
rcrb
mov
pusha
cmp
sti
ror
sub
mov
fisubrl
stos
dec
mov
or
clc
enter
int3
movsb
xor
fcompl
adc
faddp
cs
jno
int
sbb
imul
add
icebp
sub
and
ds
push
in
pop
jg
mov
and
mov
and
mov
clc
jne
jge
sbbb
clc
xchg
jecxz
add
fsubrs
mov
jnp
mov
aad
loopne
jbe
mov
dec
and
dec
adc
cmp
insl
jae
sbb
fs
cmpsb
daa
test
mov
clc
inc
cltd
mov
xchg
mov
into
mov
subl
pop
aas
cli
add
repz
add
dec
jo
pop
adc
xor
dec
sub
push
mov
and
dec
cltd
aaa
in
out
lret
jge
outsl
adc
sub
fisubl
sbb
insl
xor
outsl
pop
popf
push
mov
mov
and
fstl
mov
push
daa
lods
daa
mov
jbe
jne
push
sti
mov
sub
addr16
cld
les
shrb
gs
mov
adc
das
int
inc
sub
test
jnp
loop
in
adc
test
push
pushf
or
pop
sub
adcb
cmp
mov
jg
jo
push
orb
push
mov
xchg
outsl
xor
lahf
fdivl
jle
shll
cltd
jmp
ret
cltd
loope
adc
adc
fwait
test
int3
mov
push
imul
movsl
xchg
lea
cli
xor
push
rcll
icebp
cmp
out
iret
aas
lret
or
das
dec
das
push
sbb
sub
nop
insb
rclb
out
ret
repz
adc
int3
and
test
in
pop
test
fldl
and
sbbb
jbe
add
gs
xor
leave
jle
dec
push
pop
pop
fldenv
pop
aaa
movsb
ljmp
lret
cmp
push
dec
inc
pop
jne
sbb
inc
js
xor
js
push
cld
inc
mov
test
out
dec
adc
gs
cmp
pusha
mov
sub
ja
mov
insl
xchg
fisubrl
fsubs
mov
outsl
aaa
lock
lds
insl
push
movsl
cli
repnz
aad
ljmp
sub
subl
aaa
popf
pusha
repnz
pop
mov
call
push
mov
fiadds
ljmp
cld
stc
clc
jle
lret
jno
cmp
mov
out
andl
ret
popa
jo
int
dec
lods
pop
cmc
pop
out
xor
push
and
andb
jg
xor
sbb
aaa
pop
rolb
mov
xchg
test
ljmp
mov
hlt
mov
sub
testb
xor
iret
xchg
sbb
mov
inc
not
and
arpl
scas
jle
cmc
cwtl
pop
add
mov
test
add
cmpsb
sbb
dec
sbb
mov
loope
iret
fdivp
ja
lds
push
hlt
fisubrl
mov
sbb
jno
shll
sbb
and
sub
mov
sub
cmpsl
shll
add
push
rorl
sub
iret
fs
dec
sub
cmp
inc
fwait
cwtl
aam
loopne
cmc
mov
adcb
push
or
xchg
push
mov
js
inc
push
xor
mov
inc
leave
fdivs
out
fisttpll
jno
ds
jecxz
fstl
pop
xchg
sub
cld
out
ror
pop
mov
sbb
fucomip
iret
adc
pop
push
in
repz
fcoml
mov
movsb
xchg
xor
lds
sub
leave
data16
das
mov
aaa
jae
xchg
orl
or
stos
and
cmp
into
rclw
mov
decl
in
xchg
rclb
dec
and
dec
loopne
sbb
cmp
inc
push
ret
jo
loop
loope
jp
jmp
shlb
push
sti
xor
xor
cld
rcrb
mov
push
lods
cltd
arpl
clc
gs
aas
out
and
sahf
es
orb
jbe
push
mov
addl
lret
mov
or
adc
sub
add
inc
inc
adc
int3
and
cmc
mov
icebp
clc
repz
gs
push
mov
jle
xor
adc
ret
inc
es
cmp
fs
inc
or
push
push
sub
cmp
scas
aas
sub
mov
ja
cld
fnstcw
cmp
mov
push
insb
repnz
cwtl
imul
mov
lock
enter
filds
mov
inc
lds
sub
lods
or
mov
int3
add
lret
jbe
nop
sahf
xchg
jne
fildll
ss
inc
repnz
sub
jge
mov
dec
cmp
enter
iret
movsb
cli
pop
inc
and
inc
sbb
rorb
jno
loope
jp
dec
inc
pop
je
dec
out
mov
and
in
dec
test
call
mul
movsl
pop
loop
cld
mov
scas
clc
fsubl
xchg
pusha
leave
inc
mov
adc
int
nop
aam
std
stc
rcr
clc
cwtl
cmp
xor
aaa
insl
push
mov
rclb
mov
add
icebp
pop
mov
inc
dec
ljmp
jmp
cli
jl
and
push
xchg
xlat
add
push
frstor
fwait
pop
push
inc
repnz
data16
mov
sub
lock
mov
packssdw
int3
xchg
pop
dec
not
and
lods
mov
xchg
cmp
scas
jp
hlt
jge
cmpsb
push
repz
scas
and
push
ret
jne
push
out
push
inc
adc
dec
or
add
jnp
adc
rorb
fisubrl
mov
js
pop
daa
std
pop
fs
filds
pop
out
push
jo
push
cmp
mov
pop
leave
jle
sub
aas
add
adc
out
cmp
test
pop
ss
clc
xchg
int
shrb
popa
lock
jae
adc
add
dec
imul
add
leave
mov
sbb
adc
add
stos
fs
sub
push
mov
jg
sub
pop
and
out
aaa
cmpsb
lcall
xchg
dec
iret
adc
das
movsb
int
pop
inc
or
dec
dec
push
imul
shl
xchg
dec
jnp
cltd
imul
fldenv
xor
add
and
sti
dec
fsubs
sub
mov
jge
xchg
movsb
dec
mov
pusha
mov
repnz
mov
js
aaa
es
fs
popa
xor
mov
cmp
and
js
sub
adc
cmpsl
dec
loopne
mov
jns
adc
push
je
xchg
mov
test
xchg
outsl
sbb
test
shl
mov
push
cmp
dec
sbb
rcl
and
stos
pop
cmp
mov
xor
in
std
jae
mov
repz
vmwrite
lahf
jge
lock
sbb
adc
negl
fwait
ror
int
icebp
out
repnz
sub
pop
outsb
inc
xchg
dec
outsb
test
cmpsb
xlat
rcrl
push
sub
imul
lcall
outsl
out
fstpt
pop
or
sti
mov
add
cltd
into
cmp
sahf
push
dec
aam
xor
mov
push
inc
sbb
and
outsb
mov
mov
xchg
inc
add
jno
cmp
stc
xor
lods
xchg
pop
dec
jle
sbb
std
xchg
fsubrs
fildl
sbb
test
lahf
das
cmpsl
xor
jmp
rclb
mov
lahf
int
push
into
dec
cli
push
aam
in
jb
jl
int3
mov
adc
cmp
lock
inc
ficoms
loop
cmp
stos
and
mov
sub
inc
inc
push
sbb
and
lret
sbb
cmpsl
test
inc
subl
push
mov
and
enter
and
mov
repnz
pusha
cmc
push
pushf
sbb
jbe
xchg
add
rcl
xchg
scas
xchg
shrl
fstpt
in
pop
push
pop
pop
jo
imul
or
mov
add
incb
lods
lea
jb
push
inc
lds
sbb
repz
mov
and
bound
inc
or
cmp
movsb
add
mov
in
loopne
sbb
mov
stos
ds
adc
or
cld
mov
popa
loopne
mov
sub
inc
dec
jg
pushf
fs
mov
pop
aas
push
and
outsl
push
push
cmp
mov
shlb
addb
ds
dec
mov
cmpsl
rolb
xchg
adc
jp
std
push
xchg
std
adc
or
mov
fwait
sbb
loop
or
fistpll
call
cs
push
cmpsl
cmp
jns
xchg
and
cmp
leave
and
mov
gs
inc
fs
in
cmp
rorb
mov
inc
xchg
int3
pusha
and
or
mov
adc
into
mov
jl
hlt
bound
lock
dec
sub
jmp
ds
fwait
inc
mov
and
mov
mov
shll
lods
aam
jno
mov
pop
mov
leave
out
xorl
aaa
xor
imul
leave
jne
jmp
mov
add
movsl
mov
sub
fs
ficoml
inc
out
mov
lcall
pushl
fadds
dec
fldpi
rcrl
hlt
cmpb
mov
gs
sub
ret
inc
rcrb
pop
jae
or
mov
call
out
pop
dec
out
inc
push
enter
push
xchg
add
add
shl
loop
pop
xchg
test
mov
jnp
add
loop
and
pop
jnp
fcoms
mov
mov
and
std
push
pop
jge
xchg
and
movsb
mov
sbb
pushf
jns
loope
mov
sbb
jno
fnstenv
sub
out
pop
ss
push
pop
xchg
add
sbb
loope
roll
xchg
stc
pop
ds
xor
push
addb
cli
pop
xchg
push
mov
cli
outsb
nop
ret
ret
test
jg
imul
ds
arpl
xor
test
jge
cmpsl
outsb
clc
std
lock
sbb
je
pop
inc
push
sub
adc
adc
popa
arpl
xchg
cwtl
xor
fsubrl
jmp
mov
neg
loope
ljmp
pop
dec
nop
jg
addr16
sbb
xchg
lret
dec
cmpsl
jge
test
in
cli
in
pop
pop
pop
stc
mov
addr16
int3
out
cwtl
rcll
push
lock
test
call
pop
inc
aas
sarb
andb
jle
sbb
adcb
inc
mov
sub
sub
inc
xor
jecxz
mov
jg
fwait
lds
dec
test
dec
pop
dec
sub
mov
lods
and
fcomps
sbb
lahf
mov
int3
fs
lock
mov
popf
movsb
xlat
popa
repz
fistps
lds
ss
mov
add
into
xor
pop
jg
lods
enter
sub
lret
mov
scas
pop
sub
xlat
jp
inc
shrl
cmpsb
cli
mov
mov
imul
adcl
cmp
enter
sahf
movsl
sbb
mov
shll
xor
pop
cmp
int
mov
mov
mov
ret
pop
aaa
stc
jo
dec
test
rcrl
sub
fwait
mov
mov
clc
xlat
xor
stos
add
fisttpll
sbb
notb
out
adc
sbb
movsl
jo
rclb
pop
insl
jno
adc
jae
insl
pop
push
rcr
mov
jg
sbb
js
inc
xchg
clc
int
aad
sub
repz
mov
mul
adc
xchg
out
test
rcrb
hlt
imul
in
int
and
push
mov
add
mov
inc
mov
xor
or
fnstenv
stos
jb
cmp
fisttpll
and
adc
sub
out
inc
xchg
mov
in
mov
arpl
stc
test
xchg
es
push
fs
scas
enter
imul
dec
je
pop
movd
repz
xor
pop
dec
hlt
mov
hlt
fs
sarl
lcall
xchg
dec
pusha
je
mov
add
cmp
das
imul
leave
xchg
mov
xchg
cmp
enter
xchg
into
jge
jnp
es
aam
adc
aas
pusha
stos
popa
jb
fdiv
xchg
push
leave
push
in
cmpsb
out
adc
mov
repz
ficompl
lcall
dec
and
leave
and
mov
add
lahf
mov
daa
and
loop
cmp
jbe
jle
mov
popf
mov
lods
xor
mov
rorl
jecxz
adc
outsb
shll
xchg
insl
jne
sbb
lahf
lret
repnz
mov
call
jecxz
push
mov
and
outsl
out
or
jnp
push
in
into
and
xchg
and
xor
mov
jbe
stc
cltd
mov
push
lock
xor
jnp
adc
mov
adc
add
int3
mov
pop
inc
leave
inc
movsb
add
cmp
cmp
mov
jl
shlb
xor
mov
push
push
pop
hlt
pop
ja
pop
int
out
adc
sbb
sub
es
nop
cmp
and
mov
shrl
bound
fsubr
jbe
loop
popa
insl
aam
and
dec
and
mov
je
mov
div
xchg
sub
mov
int
lcall
adc
addr16
jp
sbb
cs
cmpsl
dec
out
popf
mov
inc
pop
hlt
jle
add
movsb
mov
xchg
jg
cmpsl
mov
xorb
je
jp
in
in
jge
shlb
loop
dec
fimull
aam
loopne
push
sub
scas
jbe
fidivrs
scas
jmp
iret
push
and
cwtl
xor
mov
mov
leave
mov
jge
aad
js
aaa
repnz
lret
mov
pop
sarb
rorb
dec
pop
test
sub
adc
fs
mov
pop
jb
rolb
fcoml
mov
sbb
xor
das
adc
inc
lock
dec
ret
and
stc
xrelease
roll
xor
clc
and
ja
ds
sbb
fdivrs
loope
fnstsw
nop
cmp
xchg
lcall
sti
sub
dec
test
fs
jle
adc
and
jae
movsl
xchg
fwait
enter
insb
inc
ret
or
mov
jmp
xchg
ljmp
dec
in
pop
and
scas
push
pop
push
sub
xor
sbb
inc
adc
ret
mov
lcall
jno
out
and
cwtl
popf
in
out
pop
mov
xchg
pusha
or
push
jbe
mov
or
mov
or
mov
and
imul
call
mov
or
daa
insb
rcll
push
je
fmull
into
enter
jle
jns
mov
sbb
roll
adc
stos
movsb
or
pusha
mov
cld
mov
and
fwait
push
ret
fidivrl
xor
int
or
sub
and
pusha
mov
insb
rorb
ds
or
pushf
jg
roll
mov
adc
xor
outsb
sbb
cmp
loopne
inc
adc
mov
int3
xor
sbb
add
jns
ret
pop
xor
or
ss
push
fisubl
xchg
int3
adc
add
repz
cld
mov
sti
xchg
stos
and
mov
pusha
and
lahf
aas
xorb
jg
and
add
jns
in
adc
cltd
jge
xchg
xor
sub
push
adc
mov
mov
push
mov
cmp
jmp
fadd
es
add
mov
movsb
xor
dec
data16
ljmp
xchg
in
enter
lret
sub
mov
jnp
cmpsl
subl
dec
ret
push
push
and
push
mov
dec
test
or
jae
jno
loop
lock
cs
dec
das
push
lret
outsb
lret
imul
and
cmp
xchg
mov
mov
cmp
scas
int3
test
dec
and
fcmovu
push
gs
push
aam
shlb
arpl
sub
stos
jg
enter
movsl
jne
ljmp
sbb
or
pop
jo
test
mov
sar
cmp
cmpsl
mov
push
fistpl
in
jmp
and
mov
jb
lods
stc
rcrb
sarl
dec
add
xor
cmpsb
popa
jae
cmp
rdpmc
push
push
ror
mov
shlb
mov
pop
hlt
jb
movsl
test
popf
lret
push
outsl
shl
push
jmp
adc
std
or
mov
xorl
pop
loopne
push
mov
ret
out
mov
push
std
rcll
mov
mov
cli
pop
xlat
pusha
scas
and
inc
mov
and
mov
sbb
or
xchg
pop
out
ja
add
mov
mov
or
cmpl
xor
daa
mov
mov
xchg
inc
add
daa
xchg
cmp
leave
xor
jns
sbb
stos
jp
pop
inc
lods
leave
data16
pop
lock
jne
jmp
je
dec
add
jnp
shll
loop
out
clc
push
mov
js
inc
inc
mov
dec
mov
ss
cmp
mov
stos
arpl
xchg
cmpl
fisubs
repz
pushf
add
push
mov
ja
cmpsl
mov
inc
rolb
cmpsl
movsb
scas
xor
aad
pop
stos
push
pop
cs
shl
mov
jb
pop
mov
dec
adcl
mov
adc
and
xlat
dec
insl
fcoml
add
rorl
popa
xorb
push
lahf
xacquire
out
arpl
nop
in
js
sub
sti
adcl
jg
adc
stos
add
jb
sbb
xor
ja
clc
cltd
divb
cmpsl
rclb
xchg
clc
stos
in
lds
jo
out
lahf
dec
rclb
mov
mov
movsl
push
pop
push
cs
std
adc
push
movsl
cmpsb
stos
lret
cmp
jl
mov
clc
dec
push
xor
dec
in
ja
into
std
ret
pop
or
jp
or
pop
dec
xor
test
sub
sbb
push
mov
or
xchg
or
cld
mov
lcall
fldl
push
cmp
in
push
push
mov
data16
fwait
repz
arpl
outsl
jp
js
rol
dec
mov
sbbl
mov
push
pop
sub
loope
xchg
mov
sbb
pop
stos
fcoml
or
sub
in
enter
pop
xchg
ret
jae
test
fisttpl
lahf
outsl
roll
jle
mov
and
test
pop
jno
pop
lahf
inc
push
mov
xor
iret
js
sbb
add
dec
fs
mov
mov
addr16
cmp
mov
ja
aad
jbe
gs
nop
rol
dec
rcl
bnd
stos
xor
lcall
mov
das
mov
push
into
aaa
in
test
sub
xchg
outsb
sub
rorl
lahf
mov
nop
dec
addr16
jmp
xor
jns
add
sbb
or
fcoml
mov
jmp
jno
mov
mov
sub
arpl
push
push
adc
movsl
test
popa
les
mov
loop
fnstsw
daa
mov
aaa
das
xchg
push
dec
xchg
cltd
mov
pop
mov
pop
xchg
sbb
loopne
sbb
stos
es
push
sbb
inc
fmull
sbb
jae
movsl
fistps
sbb
test
rcll
adc
pop
push
adc
arpl
add
and
jns
xchg
subb
inc
jmp
push
and
xchg
stos
pop
xchg
mov
pop
stos
xor
pusha
jo
sub
pop
push
fstps
fstpt
pop
xor
aam
adc
mov
mov
call
jnp
jne
adc
jmp
out
push
gs
rorl
subb
jmp
add
pop
popf
add
mov
out
adc
mov
dec
pusha
das
sub
das
and
test
and
xor
es
push
leave
adc
jmp
pusha
sti
lock
adc
pop
daa
mov
clc
dec
xor
lods
pop
push
fsubrl
jmp
xor
ja
mov
das
jg
inc
filds
mov
xchg
and
mov
cmp
xor
jmp
ja
push
jp
jl
iret
sub
pop
rol
mov
pushf
test
orb
mov
cld
xor
fs
dec
xor
pop
pop
dec
mov
insb
loopne
dec
jns
mov
and
out
sub
pop
mov
push
fsubrs
shlb
mov
outsb
pop
insl
lahf
out
xchg
pusha
imul
add
mov
cli
mov
jo
into
cmp
inc
mov
inc
cltd
inc
or
js
test
gs
mov
push
mov
mov
ret
test
lods
or
sub
and
mov
sub
int3
psrlw
jo
mov
fnstsw
push
bound
mov
cmp
fwait
mov
rcr
testl
xchg
mov
push
mov
xor
adcl
sbbb
jl
movsl
lods
pop
lock
pop
imul
add
pop
lcall
fcoms
push
and
stos
insl
push
je
dec
mov
sbb
jg
dec
dec
adc
imul
imul
adc
out
sarb
and
lock
dec
and
jo
sub
pop
mov
scas
repnz
mov
mov
push
inc
je
ss
mov
stc
rorl
pop
dec
mov
pop
lcall
stos
enter
stos
imul
loopne
xchg
mov
jb
ja
push
pushf
add
sbb
int3
inc
mov
pop
mov
sub
adc
pop
mov
cmp
in
test
adc
out
cwtl
mov
sti
subb
into
mov
mov
enter
aad
leave
inc
fcmovu
repnz
repz
ss
es
divl
and
add
test
mov
push
sbb
iret
jbe
inc
repnz
enter
fwait
repnz
mov
jmp
loope
push
xorb
xchg
lahf
mov
xor
or
pop
push
mov
test
cmp
dec
popl
hlt
rorb
imul
mov
test
pop
xor
sbb
subl
mov
call
loope
cmp
call
leave
xchg
je
mov
imul
cld
sub
enter
inc
and
inc
call
movsl
loop
dec
dec
cmp
push
jge
push
sub
xor
lret
sub
popf
lcall
mov
insb
jnp
stc
push
inc
xabort
xor
xor
sub
fisubrl
fildll
push
jns
xchg
shl
cmp
incb
je
pop
jns
addb
adc
cwtl
repz
or
xchg
adc
and
lds
xchg
pop
cmpsb
mov
sub
mov
xchg
mov
std
outsb
push
in
jae
push
add
jle
cli
dec
mov
iret
fs
clc
mov
shrl
int
nop
mov
or
lds
ds
add
out
sbb
sbb
test
add
sub
mov
cmp
lcall
adc
pop
stos
push
fnstsw
roll
xchg
cmp
jno
data16
dec
xchg
inc
repnz
lcall
nop
insl
daa
call
in
lahf
add
mov
and
jb
pop
jo
push
out
push
out
jmp
aad
in
adc
fstl
sub
insb
mov
push
pop
mov
dec
test
out
or
jae
adc
mov
dec
jae
dec
nop
push
ja
cmp
mov
pop
lret
jle
push
fwait
enter
dec
pop
sbb
ss
adc
aad
movl
inc
pop
cmc
cmp
testb
popf
faddp
mov
pusha
and
leave
pop
lahf
cld
xor
lcall
and
adc
frstor
xor
or
cmp
dec
inc
push
call
js
cwtl
cmp
mov
dec
jnp
ds
inc
rorl
adc
jno
pop
push
push
dec
xchg
xchg
adc
shlb
push
je
pop
arpl
je
mov
jle
inc
repz
dec
fstps
ljmp
in
jnp
insb
data16
mov
ds
pushf
add
add
inc
or
scas
dec
rclb
mov
pop
xchg
mulb
inc
js
daa
xor
in
mov
sbb
popa
stc
adc
xchg
xchg
ss
ficoms
test
xchg
aam
cmpsl
xchg
insb
scas
imul
ret
dec
mov
movsl
mov
shr
rolb
imul
jnp
out
and
fldl
test
iret
pusha
stos
pop
xor
or
cmc
int
enter
fcompl
push
add
ljmp
test
add
arpl
ja
lret
mov
nop
movsb
clc
mov
xchg
rcrb
mov
loope
call
jnp
jno
mov
pop
pop
dec
xchg
add
mov
and
cmp
cmp
test
add
xlat
test
jge
sub
cmpsb
ds
mov
dec
and
pop
lret
ret
pop
insb
or
mov
rorb
mov
mov
les
jmp
xor
cmpsb
cwtl
and
popf
or
rcll
aaa
sbb
andl
jp
repz
push
mov
rorb
push
dec
xor
cmp
int
sub
pop
sub
repnz
jnp
mov
mov
push
stos
ljmp
jl
sub
scas
pop
xor
mov
push
stc
loopne
test
adc
ret
ret
mov
cmpsl
movsb
adc
mulb
xor
xchg
int
das
loopne
pop
jbe
andb
ljmp
int
sti
cmp
into
mov
push
mov
dec
lods
dec
dec
stos
movsl
iret
dec
inc
popa
push
push
dec
out
mov
int3
cmpsb
add
pop
pop
sbb
add
jne
and
dec
mov
cmpsb
jmp
add
fwait
data16
add
shr
dec
xor
adc
mov
mov
jno
adc
adc
pop
xchg
leave
pop
shl
xchg
add
and
es
sbb
fnstcw
xor
push
inc
mov
sbb
insl
inc
aad
mov
into
testl
dec
xor
inc
rorb
or
push
jle
mov
pop
enter
stc
dec
repz
aas
not
xchg
movswl
outsb
aas
mov
xor
and
dec
and
inc
fwait
pop
insb
imul
psllq
lea
insl
rclb
fs
mov
mov
jmp
sub
jl
scas
outsb
ret
icebp
aam
fdivrs
mov
sub
push
mov
dec
xchg
pop
aas
enter
inc
nop
sti
fwait
cmp
xchg
jno
mov
shlb
cmpsl
lds
or
pop
cmp
mov
int3
mov
push
lcall
jae
mov
shrb
imul
es
mov
dec
movsb
adc
insb
mov
and
jge
jb
loop
inc
mov
xchg
lahf
cwtl
sbb
fisubl
dec
stos
mov
sub
int
push
enter
cmp
jno
adc
pop
movsb
xor
mov
sbb
mov
pop
mov
insl
cmp
or
inc
mov
and
inc
jle
dec
je
pushf
xchg
mov
test
pop
cmp
das
dec
or
fadds
jae
cmpsl
imul
leave
sbb
idiv
fs
movsl
pop
jb
iret
insb
sub
jle
mov
dec
adc
cmp
mov
push
inc
push
add
mov
inc
push
pop
push
adc
fcmovbe
or
dec
into
pop
das
enter
out
adc
sbb
push
xor
cmpsb
pop
aas
adc
dec
inc
cli
mov
in
das
mov
popl
xlat
inc
xchg
add
xor
xor
mov
pushf
icebp
jns
bound
rorl
loopne
mov
push
mov
test
stc
clc
sbb
imull
cmovp
sbb
and
aad
fsubl
adc
outsb
test
pinsrw
notb
dec
popf
in
fwait
aaa
mov
and
jp
repnz
inc
movsl
add
loop
ret
push
pop
or
adc
lock
cmp
out
leave
pop
cmpsl
lret
test
test
inc
add
xchg
inc
negb
int3
les
cmp
fisttps
push
pop
inc
out
sbb
in
hlt
jo
sbb
xchg
jl
ret
insb
outsb
pop
mov
push
int3
xor
rol
clc
mov
jbe
jge
push
arpl
stos
xchg
loopne
pop
mov
xchg
pop
pusha
into
cld
xor
imull
loop
jno
in
xor
test
sub
mov
sbb
nop
js,pt
push
push
mov
popf
sbb
test
sub
hlt
fwait
mov
sub
ret
lea
inc
pusha
rcrb
mov
sti
fisttpll
scas
mov
out
aas
mov
xchg
es
ja
ja
xchg
push
xchg
and
leave
into
rcll
xchg
fsubrl
cli
sub
inc
enter
movsl
dec
sahf
sub
cmp
into
hlt
push
inc
out
andl
cmp
inc
and
xor
add
mov
dec
adc
leave
ss
jg
repnz
dec
ja
jle
fisttpl
dec
pop
lds
ja
mov
ja
ja
sbb
push
sbb
push
xchg
sbb
pushf
mov
xchg
adc
movsb
outsl
cmpsb
push
push
push
mov
fcom
add
movsb
movsb
insl
shrb
aad
inc
lds
sub
sbb
pop
mov
lea
out
jns
insb
rorl
loopne
nop
xlat
xchg
mov
adc
repz
test
mov
push
xor
push
shlb
fistpl
push
lock
dec
ja
std
cmp
fistps
adc
popf
negb
fs
data16
mov
mov
dec
or
les
pop
out
test
aad
icebp
hlt
pop
mov
mov
imul
and
lcall
out
mov
jg
sbbb
mov
mov
negb
ds
test
add
arpl
lea
mov
pop
cli
fcoms
and
inc
sbb
pop
dec
decb
jecxz
xchg
jle
int3
sub
jns
adc
push
outsl
aad
jbe
hlt
loope
inc
xor
les
mov
adc
xchg
lret
rorb
repz
pushf
fucom
adc
or
cmpsb
out
mov
shrl
sbb
jno
or
popf
inc
repz
imul
add
inc
inc
xor
mov
mov
pop
into
lcall
cmpsl
push
divl
rol
aam
pushf
push
lea
or
jecxz
sub
xlat
cs
pop
adc
lret
xchg
rorb
scas
inc
orb
pop
and
repnz
sbb
cmpsl
cltd
cmpsb
movsb
sahf
sbb
lret
aad
insl
xabort
insb
sub
add
push
cmp
out
inc
int3
jl
scas
adc
decb
mov
es
pop
sub
mov
insl
pusha
lahf
pushl
push
cltd
adc
jp
lret
addr16
sarl
mov
arpl
pop
repnz
shrl
xchg
mov
sbb
mov
xchg
fisttpll
in
or
imul
xchg
or
pop
cmc
cs
testl
popa
dec
adc
fstl
fsubrl
jg
scas
cmpl
add
xor
lods
cmp
mov
sub
push
jp
mov
ds
jae
jae
cmp
jbe
add
clc
sub
jb
mov
xchg
fs
movsl
je
mov
xor
std
cmp
cwtl
movsl
cmp
xchg
out
sbbb
fidivs
imul
mov
mov
cli
sarb
push
cmp
das
cmpsl
pop
test
fnsave
int
test
cld
pop
popf
lret
jbe
xorl
dec
xor
add
shl
das
popa
sbb
pop
cmp
jg
outsb
mov
mov
repz
in
scas
data16
enter
mov
sub
inc
push
hlt
and
mov
mov
mov
shrb
addr16
push
fcompl
repnz
lret
sub
xor
and
int3
push
shr
pop
cmp
leave
mov
stc
lret
xchg
pop
rcrl
xor
rcll
jg
push
and
pop
je
imul
scas
data16
jecxz
in
mov
sbb
cld
and
sahf
cmp
outsl
imul
mul
cmpsl
lcall
sti
mov
push
out
test
inc
dec
int3
jns
dec
xor
shlb
sti
repnz
sbb
cmp
add
pop
aas
pop
pop
outsb
icebp
stos
movsl
mov
dec
test
xor
jbe
mov
inc
mov
xchg
into
mov
arpl
pusha
sbb
xchg
fwait
mov
sbb
xor
jnp
cmp
js
aas
xchg
mov
xchg
xchg
dec
jno
inc
das
or
xchg
xor
dec
jle
mov
push
and
xchg
stos
fs
stos
adc
out
push
add
jbe
push
inc
jecxz
aad
mov
fdivrs
lcall
mov
movsl
rolb
sub
dec
pop
int3
aam
orb
add
orl
roll
fadds
push
mov
jmp
or
imul
pavgw
push
cmpsl
lcall
aad
dec
insb
sub
mov
mov
pop
punpcklbw
aad
insl
cmpb
popa
sub
mov
movsb
into
adc
cmp
mov
pop
add
jge
aad
dec
push
mov
xchg
jbe
lods
xchg
stc
dec
imull
xchg
mov
push
in
mov
or
sub
jne
test
movsb
into
and
out
mov
lret
cld
xor
mov
sahf
add
mov
sbb
fwait
int3
lret
and
pop
cmp
or
cmpsb
adc
fdivrl
inc
aad
cld
inc
call
dec
mov
je
gs
sbb
imul
or
sahf
frstor
pop
out
ds
repz
xlat
xor
sub
loop
jl
outsb
inc
orb
notb
js
shl
jnp
mov
aad
xchg
loopne
xchg
mov
rorb
mov
sub
lret
frstor
cs
fisttpl
inc
fmull
xchg
repz
adc
imul
cmp
mov
fisttpll
rolb
cltd
ljmp
ret
pop
lock
mov
mov
popf
pop
dec
mov
add
xchg
xchg
inc
loop
lret
mov
sub
lea
push
xchg
iret
jecxz
sub
adc
pop
sub
dec
ljmp
mov
xchg
test
xchg
mov
bound
mov
out
enter
leave
dec
add
add
push
sbb
leave
mov
icebp
and
lds
dec
mov
push
js
cmpsl
pop
jb
test
add
pop
sbb
pop
mov
jne
stc
hlt
out
loop
dec
pop
daa
ds
leave
push
rcrl
stos
ret
movsl
les
cmp
les
sbb
adc
mov
cld
ficoms
scas
xor
call
push
jae
jno
sub
jp
test
test
cmp
loop
and
stc
rol
xchg
push
sti
iret
xor
cmove
stc
inc
and
jp
frstor
stos
scas
mov
cld
sub
or
adc
jg
mov
lods
out
lret
dec
sbb
rorb
sbb
or
incl
pop
je
jp
fdivrp
or
fld
lea
xor
add
in
orb
data16
pop
pushf
adc
push
loopne
jge
push
fdivr
xor
mov
movsl
test
int
out
mov
popf
bswap
pop
push
sbbl
sub
fwait
xchg
cmp
sahf
rclb
movsl
sbb
mov
mov
dec
add
mov
sub
cmp
inc
in
jns
cmp
dec
data16
mov
je
inc
out
sbb
lods
inc
fnstsw
mov
pop
stc
call
lods
cld
mov
js
out
ret
sub
dec
sub
mov
sub
or
inc
rcll
cmpsb
mov
sub
ja
fs
lret
push
call
push
scas
and
in
pushl
rcrl
cli
ret
test
xor
inc
inc
aas
xor
and
int3
adc
xlat
dec
xor
jg
jp
movsb
out
mov
loope
mov
dec
aaa
repnz
icebp
cmp
or
and
xor
cli
ja
adc
adc
outsl
jge
pop
ret
mov
push
xchg
and
dec
popa
icebp
adc
pop
push
or
sahf
add
fisubrl
inc
mov
jge
out
loopne
fsubrs
inc
xor
mov
std
and
sub
iret
inc
mov
pop
mov
ja
push
lret
js
mov
popf
xor
stc
adc
cmp
jmp
mov
out
push
pop
lahf
and
pushf
pop
sahf
xor
push
lea
jg
roll
jae
fiadds
ficoms
aam
or
mov
insl
cmp
fstp
pop
push
lahf
call
cli
ss
add
pop
dec
aam
dec
pop
enter
lods
push
jb
shll
fistl
jbe
test
jp
and
mov
mov
repz
hlt
enter
jno
clc
ss
cmpsb
dec
ljmp
pop
aaa
jmp
inc
lds
aam
mov
sbb
mov
dec
cmp
mov
enter
bound
jg
push
les
pop
add
mov
aas
aad
sti
lret
pop
inc
aad
lahf
pop
adc
js
push
mov
sbb
jmp
cmp
jno
shrl
scas
in
out
lcall
clc
dec
es
sub
movsl
in
jae
gs
push
push
push
sbb
add
or
or
nop
cmpsb
out
dec
stc
pop
divb
test
sahf
arpl
inc
xor
dec
sbb
jns
adc
adc
sbb
fcoms
int3
fisubs
cli
clc
jg
push
movl
lock
outsl
xor
push
outsl
in
dec
lret
push
xchg
test
adc
fldt
adc
aas
push
push
push
je
jecxz
jbe
sub
das
std
daa
mov
inc
add
xchg
movb
insl
push
sub
daa
popf
movsb
dec
jmp
pop
shll
or
inc
movsb
roll
in
fldenv
out
xor
ds
dec
lcall
dec
push
sbb
adc
shlb
popf
mov
cwtl
and
and
mov
jnp
sub
jmp
jp
cmp
es
rclb
test
or
idivl
mov
inc
adc
sbb
xchg
subb
enter
mov
imul
sbb
xor
xchg
stc
scas
les
adc
call
jl
cwtl
repz
es
stos
imul
lret
rolb
lds
cltd
sbb
xsha256
cmpsb
xlat
cmp
popa
mov
xchg
mov
adc
sub
stos
enter
push
sahf
rsqrtps
je
pcmpeqb
cmp
adc
xor
pop
xor
in
adc
xlat
movsb
adc
insl
dec
out
fwait
and
mov
fcmovu
xor
mov
mov
dec
and
mov
mov
lahf
sbbb
repz
xchg
jp
ret
es
mov
mov
sub
shll
jae
sahf
sub
xchg
fwait
out
popa
add
add
outsb
dec
push
clc
push
inc
sbb
inc
pop
push
int
mov
arpl
sub
addb
jecxz
xchg
pop
outsb
xchg
pop
cwtl
inc
xlat
lcall
addb
mov
ret
jo
or
jl
push
movsl
shl
xchg
inc
jae
xor
dec
cmc
push
push
ret
pop
push
mov
pop
adc
std
pusha
sarl
pop
rclb
out
movsl
sub
xchg
pop
push
mov
adc
dec
mov
stos
mov
arpl
push
loop
push
and
xor
into
adc
xchg
pop
repz
push
dec
cmpsl
and
scas
xorb
jl
jmp
lcall
xchg
dec
lahf
pop
and
cmp
outsb
addb
popf
xchg
push
je
ret
addr16
mov
jb
movsb
sbb
push
negl
test
out
jg
inc
ljmp
stc
fsubrl
movsl
push
mov
pushf
mov
ret
xor
bswap
inc
aad
mov
enter
testl
int3
or
jl
fs
int3
inc
test
mov
les
repz
int3
pop
je
lahf
inc
int3
mov
addb
ss
xor
or
mov
push
iret
scas
idivl
pushf
cmp
xchg
dec
cli
or
popf
andb
inc
jecxz
in
or
and
jle
sbb
mov
mov
xchg
fildl
xor
xchg
mov
add
and
xchg
adc
outsb
loopne
xor
movsl
or
xor
mov
jge
lods
sub
outsb
cmc
int3
cmp
scas
adc
sbb
inc
scas
pop
in
test
cmp
pop
lahf
and
add
mov
xchg
addr16
cmp
adc
int
es
bound
in
inc
inc
loope
cmp
jae
inc
adc
jne
adc
loopne
or
xchg
lcall
roll
mov
xor
or
adc
push
lods
jl
xchg
pop
gs
dec
mov
xor
leave
stos
popa
xchg
aam
mov
pusha
dec
scas
in
stos
outsb
add
jnp
mov
int
ja
cmp
lahf
sbb
arpl
add
jp
mov
jns
mov
stos
add
sbb
jle
push
mov
add
jae
shll
mov
mov
and
icebp
push
jno
das
fildl
in
xchg
and
push
pop
popa
xchg
push
je
sub
aas
push
pop
jns
xchg
repz
add
adc
clc
adc
cmp
lods
sbb
dec
mov
jb
jns
pop
fmul
push
add
or
dec
outsl
repnz
xor
xor
dec
jo
mov
lock
imul
jp
stc
add
icebp
sub
repnz
mov
sahf
or
jae
les
jne
ffree
imul
or
mov
rorl
es
fsubrs
ss
mov
rcrl
or
gs
fcomps
loop
and
je
jns
jno
or
out
inc
sub
push
xchg
cmc
cmpsb
cmc
mov
mov
push
loopne
or
pop
mov
mov
rcll
jecxz
and
sbb
xchg
xchg
or
xchg
jb
xchg
xlat
jns
sub
xchg
test
add
loopne
test
push
rcll
mov
adc
mov
mov
sar
fnstsw
dec
enter
fwait
xor
loopne
test
pop
jmp
bound
movsb
pusha
shl
xchg
aaa
mov
ds
fwait
out
outsl
adc
jno
test
inc
mov
lret
push
nop
mov
and
push
push
andl
imul
mov
js
pop
xchg
xlat
jl
add
pop
inc
aad
jb
sarl
dec
mov
pop
jae
test
je
bound
add
outsb
push
lret
cmpsb
pushf
xchg
lea
pop
lods
mov
repnz
xor
nop
rol
enter
xchg
inc
stos
scas
shll
gs
sbb
pop
dec
add
mull
aad
sbb
out
and
mov
shrl
mov
test
pop
mov
das
imul
add
mov
jl
imulb
enter
add
adc
dec
fsubl
mov
lods
es
popf
add
cmc
inc
clc
shrb
adc
cmpsl
addr16
or
mov
addr16
jg
mov
stos
inc
rcr
or
cmc
fcompl
arpl
mov
je
arpl
xchg
dec
xchg
mov
mov
cmpb
cld
cmp
rclb
je
sbb
pusha
fstps
sbb
jp
sub
imul
or
sbb
pop
pop
dec
jnp
test
cmp
bound
lock
ds
add
lods
pop
not
negl
pop
icebp
mov
jbe
mov
loope
push
out
rorb
popa
cmp
into
loope
jmp
lods
or
pop
sub
cmp
les
push
jne
sbb
xchg
mov
jo
iret
push
xchg
test
mov
into
jns
push
mov
fsub
mov
pop
shl
jne
lock
rolb
and
lods
repnz
pusha
mov
xchg
aad
jmp
jmp
mov
cmp
js
sub
dec
sub
in
ds
inc
mov
add
adc
pushf
shlb
and
loop
jg
fimuls
dec
test
iret
fmuls
testb
aad
sub
push
jne
mov
xchg
push
fs
dec
jg
xor
jno
gs
add
xchg
mov
jg
nop
ret
push
push
cmp
clc
push
xchg
fsubp
roll
cmp
adc
cltd
inc
icebp
and
fdivrl
mov
add
addl
adc
adc
ror
pop
push
push
pop
xchg
push
inc
in
scas
pusha
mov
divb
mov
loopne
lret
in
ss
xchg
loop
jae
sbb
stos
js
std
aad
mov
ss
mov
mov
push
fdivp
jno
cmp
mov
icebp
gs
incl
pop
sub
fidivs
dec
mov
inc
inc
gs
dec
aaa
fucomp
dec
scas
add
adc
cmc
rcrb
xor
xor
dec
pop
cmp
test
outsl
sbb
cmp
jae
aaa
xchg
dec
sbb
loopne
cmpsb
stos
fimull
cmp
fcomp
xchg
aas
movsb
xlat
movsb
mov
mov
inc
inc
add
dec
mov
ds
mov
pop
adc
or
loop
or
xchg
ja
mov
dec
mov
cmp
push
lea
inc
sbb
push
mov
pop
inc
add
insb
jbe
popf
and
sub
mov
mov
mov
mov
rolb
add
push
and
sbb
mov
mov
gs
test
xchg
jne
fldenv
pop
fidivrl
outsl
inc
aad
xlat
sbb
rcr
lahf
cmp
je
xor
xchg
jo
mov
and
lock
in
mov
mov
call
jnp
push
cli
dec
sbb
mov
nop
mov
test
cmp
xchg
adc
fcoms
jns
add
nop
les
sar
pop
mov
cmpsb
ds
cmpsl
mov
pop
add
inc
ljmp
fs
sbb
adc
sarb
push
xchg
cmpsb
add
and
in
and
push
add
lock
insl
loope
out
mov
and
enter
les
fnsave
inc
push
fwait
aas
jg
xchg
sbb
xor
xchg
popa
xchg
pushf
push
fcoms
xchg
sbb
inc
jns
xor
lret
push
pop
jl
insl
pop
cwtl
je
call
sbb
pop
cs
ret
mov
out
push
cmc
stos
cld
or
mov
add
add
or
inc
cltd
push
stc
dec
mov
lcall
jl
and
push
enter
push
cmp
mov
imul
out
insl
ret
sub
dec
push
dec
xchg
repnz
imul
cmp
arpl
cmp
aas
adc
pop
add
dec
push
out
int3
lds
and
cli
rclb
jnp
adc
ret
or
scas
xor
jne
popf
cmp
pop
or
add
jle
pop
fwait
mov
repnz
lds
loop
mov
clc
aas
fstps
in
jbe
push
mov
push
scas
and
adc
inc
loop
shrl
daa
lcall
or
add
and
pop
rcrl
adc
adc
xor
dec
cmp
adc
stos
mov
daa
mov
mov
std
xor
inc
cwtl
sub
dec
sbb
sbb
adc
cmp
icebp
jmp
jg
push
or
bound
cltd
dec
aam
xchg
fcompl
in
pop
or
fs
jns
test
pop
push
sub
dec
stos
das
faddp
inc
jle
enter
imul
push
mov
jo
cli
loopne
dec
pop
mull
pop
xchg
mov
jmp
dec
sub
mov
in
cmp
rorb
imul
cmp
jbe
nop
push
stos
call
aaa
jecxz
in
mov
and
nop
xchg
mov
sbb
lret
imul
inc
and
adc
mov
xchg
insb
or
add
jg
scas
cwtl
xchg
or
shrl
or
and
xor
mov
push
mov
push
popa
mov
sbb
jge
fcoml
ret
cmp
sbb
push
adc
movsb
ror
les
xor
daa
bound
pop
push
pop
cs
jbe
sbbb
mov
js
sub
mov
daa
fimuls
fwait
sbb
inc
fmull
sti
movsl
mov
pop
fcoml
test
stos
pop
mov
ret
adc
ror
ja
dec
inc
and
jle
stc
sbb
rorb
outsb
adc
push
nop
sbb
pop
inc
jno
xchg
jge
mov
sub
aaa
cmp
push
clc
orl
jp,pn
add
cmpsb
jns
jns
xchg
add
inc
fbld
loopne
arpl
fsubrl
sbb
pop
adc
sub
jo
hlt
lods
nop
mov
sbb
cmova
outsb
mov
pop
call
push
fdivrs
push
les
nop
in
rclb
mov
dec
call
aam
int
or
dec
pop
and
ss
mov
in
jbe
fistpl
shrb
push
mov
sahf
mov
loopne
push
js
bnd
or
sbb
xchg
pop
xor
out
pop
jns
dec
cwtl
inc
enter
jg
rolb
lcall
pop
or
cmp
cmp
and
shlb
mov
mov
pop
push
insl
and
rcrl
cmpsb
btr
sbb
sbb
data16
cmp
jp
test
inc
out
lret
xor
loopne
dec
fisubs
stos
imulb
test
scas
cmc
mov
xchg
and
push
xchg
arpl
xchg
rolb
adc
lfs
sub
fstl
adc
push
enter
push
and
stc
int
or
or
daa
dec
jecxz
xchg
idivb
js
aam
mov
ds
dec
xchg
test
loop
sub
arpl
sub
push
mov
xchg
add
jecxz
cld
fisubs
fcmovne
add
xchg
pop
mov
cmp
ret
out
jo
stos
lahf
cli
and
enter
scas
inc
xor
data16
sbbl
and
pusha
xor
sbb
mov
call
inc
pushl
cmc
mov
cwtl
outsb
aam
repz
imul
dec
jge
add
mov
mov
pop
cmp
lea
xor
fidivrl
jae
hlt
mov
sbb
out
xor
outsb
ljmp
daa
sub
sbb
cmpsl
outsb
sahf
lods
push
out
bound
add
enter
dec
jb
jns
addb
dec
cs
insb
pop
ret
dec
vcvttsd2si
dec
and
stos
lods
hlt
mov
xor
sahf
lock
sar
mov
jmp
inc
sti
xor
adc
movb
add
push
stc
jb
sbb
add
pop
mov
clc
jle
inc
mov
cs
cltd
ret
lea
in
pop
add
sbb
pop
cmp
push
xlat
mov
scas
orb
and
mov
mov
pusha
and
pop
or
cld
lods
add
ljmp
aam
sub
inc
out
adc
push
add
mov
cmovno
cld
test
pop
xchg
xor
enter
dec
cmp
shl
scas
dec
fsubrs
out
push
mov
or
mov
mov
add
mov
arpl
jno
pop
xchg
popa
test
ret
xor
sub
adc
xchg
inc
testl
scas
cmp
je
nop
mov
jne
xor
xor
cmc
add
testb
gs
sbb
push
int3
cmp
in
xchg
jbe
xchg
into
and
aas
inc
dec
inc
pop
mov
xor
loop
inc
cwtl
call
aas
mov
fisubs
in
das
push
cli
pop
cmpsb
xor
mov
test
pushf
loopne
xorb
insl
pop
push
cmc
lea
cmp
mov
call
add
add
xor
ret
shll
jecxz
mov
ss
jb
ds
loopne
push
cmpb
cmp
movsl
mov
dec
pusha
pushf
mov
pop
mov
outsl
stos
cld
icebp
push
into
adc
push
add
mov
popa
push
nop
fwait
sbb
icebp
enter
xor
pop
mov
mov
jbe
push
les
sub
dec
pop
ret
cmp
in
subb
scas
and
mov
sbb
aad
and
add
in
sbb
fprem1
mov
mov
test
jg
mov
mov
icebp
in
sbb
fs
pop
imul
push
outsb
mov
mov
es
mov
or
push
insb
out
sub
xchg
mov
xchg
lock
cli
adc
xchg
sbb
fwait
dec
dec
jecxz
filds
pop
dec
inc
sbb
addl
sbb
and
push
lock
daa
sahf
outsb
sbb
andb
push
mov
sbb
aaa
inc
cmc
scas
test
sbb
hlt
pop
call
dec
leave
cli
xchg
mov
push
dec
mov
push
sub
and
lock
pushf
dec
xlat
xor
inc
cmpsl
popa
scas
cld
shl
adc
pop
adc
xchg
testl
or
pop
or
pop
cmp
mov
mov
xor
cwtl
stos
cmp
xorl
ficoml
mov
data16
push
mov
mov
dec
xor
clc
sti
push
mov
and
sbbl
leave
int
fnstenv
sbb
aad
popl
mov
jmp
popf
test
sub
jl
jl
dec
jae
mov
inc
fstpl
std
sbb
pop
lods
shll
lods
push
mov
fdivrl
pop
mov
xchg
mov
mov
mov
cmpsb
jg
sub
jg
inc
adc
jno
loop
push
popl
inc
push
pop
mov
cwtl
lock
mov
mov
pop
xor
mov
cmpsl
in
pop
adc
jo
cmp
inc
inc
in
shrd
or
mov
aaa
ljmp
cld
aas
pushf
in
decb
cli
pop
insl
les
lret
mov
and
xor
mov
das
ds
pop
sbb
call
nop
sarl
cmp
scas
loopne
jns
dec
loop
int
mov
fdivrl
insl
mov
mov
loop
mov
clc
or
cmp
push
add
sub
push
inc
inc
mov
add
add
adc
xchg
dec
xchg
jl
lret
dec
push
cmp
push
sahf
fcoml
enter
pop
cltd
and
pop
test
lret
icebp
fidivl
arpl
lcall
ja
mov
mov
test
mov
or
aaa
cmovns
push
dec
test
leave
jae
dec
leave
mov
push
icebp
insb
stos
fstpl
shlb
xchg
fstpl
ljmp
push
add
jbe
repz
ds
mull
loop
mov
stos
mov
mov
xor
jl
in
stc
jbe
mov
dec
xor
out
cmp
lds
mov
add
dec
adc
xor
jno
mov
nop
fisttpll
mov
cmp
jbe
inc
push
mov
mov
pop
adc
cli
andl
lcall
loop
push
mov
cmp
mov
adc
xchg
in
or
daa
mov
jo
cmp
or
pop
jmp
inc
push
fmuls
in
popa
jns
inc
cmp
popf
cmp
leave
mov
hlt
mov
mov
test
pusha
iret
aas
mov
xchg
stos
imul
imul
lods
push
mov
xchg
jbe
in
mov
ljmp
dec
or
push
adc
loopne
lret
mov
mov
outsb
incb
divl
leave
xchg
aam
mov
jno
out
mov
xor
icebp
xor
push
call
jns
inc
fwait
icebp
movsb
xor
adc
add
movlhps
and
mov
mov
add
popa
clc
add
add
pop
js
frstor
arpl
sti
xor
mov
pop
mov
sbbb
mov
and
gs
ficoms
repz
inc
dec
pop
push
xchg
mov
add
cmp
iret
xor
test
mov
outsl
enter
xchg
int3
test
in
ret
xchg
pop
gs
mov
ljmp
pop
dec
jns
and
test
cmpsb
int
lods
fcmovnb
push
pushf
cmp
push
lea
sbb
pop
lock
ret
dec
sbb
cmp
arpl
in
stc
subb
pop
mov
add
shrb
stc
push
sub
mov
or
sub
or
jbe
push
pop
or
xchg
xor
into
outsb
push
cltd
pop
ret
mov
mov
lods
or
movl
popa
sub
hlt
je
mov
mov
push
sbb
ret
fsubr
cltd
sbb
and
aad
mov
sub
push
mov
imul
imul
fisttpll
repnz
cmp
ret
pop
sub
xchg
sbb
roll
add
sahf
push
jmp
dec
xchg
leave
loop
movsb
test
pop
dec
and
sub
addr16
xor
pop
aaa
mov
sub
fiadds
cmp
push
mov
inc
bound
fs
loop
add
mov
or
xchg
test
movsl
stc
addl
adc
mov
roll
subb
pop
adc
jl
jl
out
fwait
sbb
inc
hlt
in
pop
lds
fsts
push
les
cmp
lahf
fadds
xor
insl
loope
aaa
xchg
jns
add
cmp
fisubl
mov
mov
mov
xchg
lret
out
cmpl
ret
test
nop
aam
outsl
outsl
rorb
bswap
xchg
and
jae
sti
clc
outsb
dec
lds
test
and
add
xchg
fs
pop
rcll
mov
mov
out
cmp
pop
sbbb
xor
mov
push
dec
jmp
xchg
ret
call
xor
rcr
push
jnp
pop
icebp
xor
rcll
mov
fsubs
mov
aam
pusha
lds
pop
test
mov
icebp
push
je
jle
xchg
outsl
leave
sbb
les
add
pop
inc
lods
push
xlat
sub
xchg
fisttpl
push
in
dec
mov
cltd
mov
sub
fisttpl
fisttpll
cmpb
push
mov
dec
or
cltd
cmp
addr16
pushf
stc
push
mov
adcb
out
adc
aam
jl
aad
add
adc
repnz
mov
fs
lcall
ret
inc
int
add
inc
inc
pushl
into
jg
mov
pop
jnp
pop
out
fwait
gs
iret
add
ss
mov
xor
push
ficompl
out
mov
push
cmp
pop
insb
fs
test
adc
gs
push
push
adc
dec
add
mov
out
mov
xchg
lds
std
call
cmp
inc
xor
sarl
cmp
cmp
ja
movb
adc
dec
out
es
mov
add
out
push
xchg
fimuls
jbe
add
sub
push
icebp
push
jmp
les
fldt
stos
add
sub
jo
inc
push
adc
loop
jno
adc
dec
repnz
test
jl
pop
mov
push
icebp
out
adc
shr
ss
aaa
jae
mov
stos
and
lret
push
mov
add
adc
and
stc
pop
fistpl
jbe
mov
cmp
inc
ret
add
xor
inc
push
xor
cmp
add
jmp
cmp
cmp
push
lea
pop
addl
jb
jnp
jle
mov
fldl
fnstenv
pop
push
rorb
or
pop
cmp
pushf
scas
or
or
inc
mov
mov
imul
sbb
cltd
add
pop
fbstp
lods
jmp
sti
add
ds
fidivl
and
repz
icebp
nop
jno
addr16
dec
dec
mov
push
out
push
or
pop
sbb
loope
ss
inc
jge
insb
enter
cwtl
roll
ffreep
dec
xchg
pop
inc
push
push
jmp
mov
mov
jl
mov
ljmp
in
sub
ret
jl
iret
cltd
mov
iret
jo
aam
xchg
movsb
test
adc
sbb
cmp
movsl
dec
or
enter
lods
ja
adc
je
mov
sbb
test
ljmp
xchg
ds
sbb
add
cmp
jecxz
jmp
ja
dec
mov
lea
xor
cmp
ljmp
mov
mov
cld
cmp
mov
lds
push
push
outsl
pop
push
jle
inc
sub
js
nop
rcl
add
cmpsl
es
add
aas
adc
mov
shl
mov
push
pop
sub
call
ds
push
or
icebp
jns
jns
icebp
cwtl
imul
adc
call
inc
add
or
xor
and
aam
cmpsb
xor
inc
decl
inc
aaa
mov
hlt
ljmp
mov
cmpsl
cmp
js
inc
sub
test
sub
movsl
sti
shl
and
sti
xchg
out
out
incl
rorl
jbe
jmp
fisubs
repnz
add
xorb
cmp
std
in
sahf
jno
cmp
push
cmp
inc
fwait
push
test
pop
in
mov
rol
andb
stc
loopne
movsl
xchg
loopne
mov
dec
jmp
lret
mov
sbb
push
lods
std
das
add
mov
fadd
int3
pop
push
daa
mov
mov
cmp
pop
in
sbb
mov
push
mov
push
in
pop
adc
cs
dec
test
mov
in
pushf
push
mov
shlb
iret
mov
pop
loope
filds
jle
fldcw
pop
out
cmp
jae
mov
push
test
fcoml
inc
xor
outsb
daa
shll
fadd
dec
pop
jnp
hlt
scas
fidivl
dec
cmp
dec
jle
mov
sahf
loop
pop
push
pop
je
popa
out
cmp
adc
cmp
mov
mov
aas
stos
lods
cmpsb
jo
push
xchg
mov
xor
mov
sub
xor
test
hlt
faddl
mov
and
jp
jae
pop
mov
fcmovb
mov
in
cmpsl
std
add
sbb
inc
jg
mov
pop
lahf
sbb
mov
mov
cli
mov
inc
push
fisubs
mov
mov
iret
ret
mov
fcoml
add
inc
lcall
inc
xor
mov
jg
in
xor
mov
xor
imul
xchg
adc
mov
pop
mov
fiadds
fs
cmp
and
std
cmpsl
fdivr
mov
icebp
cmp
hlt
orb
jbe
xor
and
add
cmpsb
dec
mov
and
xor
repz
dec
sbb
clc
insl
xlat
sub
lea
xor
pop
sbb
mov
xchg
add
jmp
nop
dec
pop
fs
gs
idivb
and
nop
outsl
and
scas
jne
mov
xor
cmc
lds
sbb
popf
xor
leave
jb
outsl
mov
dec
or
push
shrb
test
fidivrs
popf
out
xor
sub
cltd
imul
loope
jl
outsb
sbb
push
push
iret
jle
mov
cmp
jg
fnstsw
push
lret
cmp
xchg
in
and
lods
movsl
test
fucomip
scas
cmc
push
adc
mov
inc
insb
push
cmc
adc
mull
int3
fsts
mov
jl
mov
rorb
fcom
cld
nop
cmp
or
cmp
insb
pop
add
insl
jp
pushf
sahf
bound
and
mov
xor
arpl
pop
test
ret
xor
movsb
mov
sbb
push
xchg
mov
outsb
mov
cmp
xor
lcall
aas
jge
icebp
loop
sub
js
or
imul
pop
push
pop
aas
cld
push
lahf
sbb
das
jecxz
fsubrs
xor
int
lahf
jecxz
pusha
lds
data16
in
int
sbb
or
icebp
jb
in
leave
mov
loope
cwtl
or
ljmp
aaa
insb
jb
jmp
and
inc
inc
xorb
dec
dec
or
out
cmp
sub
outsb
stos
pusha
sub
mov
mov
mov
jnp
xor
out
in
incb
rolb
popf
loop
mov
iret
aam
sbbl
sbb
xchg
xor
scas
push
push
jp
adc
mov
adc
push
movsl
dec
inc
xor
mov
mov
cmp
adc
cmp
movsb
out
inc
pop
ja
fistps
iret
in
ret
jg
dec
test
jnp
and
mov
lea
dec
pop
or
xlat
sbb
movsb
cmp
mov
mov
xchg
xor
lcall
loopne
stc
mov
sbb
sbb
xor
mov
or
adc
cmp
sub
adc
mov
sysenter
ret
lahf
clc
jecxz
shll
add
mov
push
test
js
int3
cld
loop
fwait
sarl
nop
loope
xchg
cld
inc
imul
xchg
pop
repz
push
ret
cmp
nop
sbb
push
xor
loop
pop
sub
aas
push
arpl
in
lahf
inc
sbb
and
adc
pop
push
push
mov
push
jmp
and
or
mov
sbb
add
fwait
push
in
repnz
sub
inc
xchg
inc
cmpsl
es
push
xor
leave
gs
mov
faddp
insl
fwait
cld
iret
rorb
rcll
jns
push
mov
pop
jbe
shl
cmc
mov
loopne
add
pop
inc
cmp
int
pop
imul
cmc
mov
lods
addr16
icebp
push
xchg
pop
cli
inc
arpl
in
pop
outsl
data16
or
sbb
daa
out
filds
repz
in
scas
lea
out
ror
adc
push
sbb
xlat
ljmp
jne
aaa
leave
scas
sarb
adc
aad
out
adc
out
scas
dec
xchg
inc
lcall
push
imul
stos
push
cltd
cld
xchg
call
xlat
mov
and
sbb
movsl
mov
mov
and
movsl
jae
das
gs
jmp
xchg
or
push
and
sahf
xchg
and
pop
ja
fldcw
fdivrs
out
cmp
ret
mov
jbe
mov
stos
push
popf
fnstsw
mov
shll
jne
ss
frstor
frndint
adc
popf
xor
add
cmp
stos
ja
inc
dec
stos
fldt
jg
mov
push
ds
repz
out
dec
or
mov
pop
dec
add
repz
cld
sbb
ret
mov
add
xor
aas
inc
push
xchg
adc
insb
fs
xorl
enter
mov
mov
fwait
shll
lods
repnz
fs
cmp
jl
les
sub
pop
inc
movsl
decb
or
movsl
cs
xchg
loopne
and
pop
cld
sbb
nopl
push
mov
inc
ja
cmp
mov
mov
jmp
add
push
push
or
daa
and
jbe
int
and
add
xchg
cmpsb
imul
sbb
xlat
pop
fsubs
add
push
movsb
push
sub
jle
popa
cltd
jnp
cmp
pushf
jge
in
xlat
lahf
lahf
ss
adc
out
sti
aas
popf
sahf
jo
sub
imul
jge
test
or
int
jmp
cmp
fiadds
roll
and
in
cwtl
mov
lea
sbb
xchg
icebp
loop
mov
xchg
outsl
cmpsb
lahf
cmp
jp
fiaddl
pop
pop
push
xchg
fld1
insb
cmp
sub
push
out
arpl
jo
inc
out
out
sub
enter
je
lock
xchg
push
lea
cmp
movb
rorb
inc
roll
mov
pop
jne
sub
adc
sbb
sub
jns
adc
out
xchg
aaa
add
loope
sbb
call
pop
xchg
aad
pop
or
popf
xchg
addb
rorl
sbb
lret
inc
mov
test
jno
jecxz
repnz
dec
mov
ret
fcomi
ret
mov
cltd
sub
in
xchg
icebp
loope
test
cmc
out
popa
jbe
imull
sub
add
nop
sub
subb
fisubs
push
push
or
hlt
fcmovnb
pop
push
jo
and
sub
test
outsb
jmp
sub
add
sbb
nop
testl
aaa
icebp
mov
insl
cs
cli
call
sub
iret
sahf
push
push
cmpsb
add
aas
jle
stos
pushf
nop
push
sbb
dec
cmp
pop
out
xor
jge
add
pop
pusha
push
push
sub
loop
call
xor
movsl
out
cltd
sbb
inc
js
sbb
loop
pop
addr16
icebp
dec
test
es
nop
mov
cmpsb
jl
sbb
out
adc
lret
push
push
pop
fpatan
inc
sarl
lcall
pop
sbb
xchg
test
inc
std
cmp
xchg
outsl
or
add
xor
popf
cmp
stos
lods
mov
scas
lret
lret
add
ror
inc
mov
dec
cmp
fdivrs
fwait
orl
xchg
inc
test
cli
pop
pop
dec
fiaddl
or
and
out
add
cmp
add
cmp
in
aam
stc
sti
push
sti
cmc
insb
into
ljmp
imul
adc
jp
enter
mov
add
in
inc
pop
push
mov
int3
es
out
popf
fmull
push
into
push
push
mov
enter
popf
lods
cltd
loopne
cmc
add
add
mov
xlat
fcomip
rorb
jnp
iret
int3
jmp
pop
lods
call
lret
das
jns
inc
leave
mov
mov
dec
inc
roll
cmp
mov
and
xchg
pop
or
fwait
dec
jg
and
add
inc
out
and
pushf
comiss
flds
mov
jno
test
loopne
dec
int
xor
insb
out
mov
or
lret
lret
push
add
jp
aad
repz
push
mov
jg
jmp
or
adc
adc
xchg
dec
stos
mov
or
into
cwtl
push
cmp
cltd
mov
jmp
jmp
sbbl
xchg
fs
mov
mov
subl
mov
pop
jecxz
lret
ds
or
add
in
mov
sbb
pop
adc
mov
sub
mov
add
into
mov
pushf
sahf
mov
dec
add
les
fwait
xchg
push
iret
dec
mov
push
leave
pushf
adc
dec
xor
add
sub
shl
add
push
icebp
mov
dec
cld
pusha
mov
xchg
and
dec
fisttpll
xchg
adc
cld
aaa
and
cmpsb
sahf
xor
adc
stos
or
sub
cmc
mov
stc
sbb
pop
gs
dec
iret
gs
adc
lret
ret
and
jnp
shlb
or
fndisi(8087
pop
add
add
jmp
in
adc
lret
mov
cwtl
insl
scas
dec
push
movsb
aas
xchg
hlt
fcmovne
sub
pop
cmp
push
add
arpl
mov
push
ror
push
mov
pop
in
out
jnp
xchg
pop
push
std
mov
out
mov
mov
arpl
push
int
iret
bound
aad
adc
lret
stc
inc
mov
jno
cmp
mov
xchg
push
jae
inc
addr16
aad
jo
call
fildll
cmp
pop
adc
xor
stos
fs
mov
lods
jae
add
xchg
mov
push
mov
and
lock
sbb
mov
fsubr
jge
mov
data16
mov
mov
test
imul
pop
jl
xchg
out
mov
enter
sbb
dec
fidivl
pop
leave
in
repz
xchg
std
xor
testb
sub
push
lods
lds
test
sub
out
addr16
sub
jb
xor
jmp
dec
mov
clc
pushl
int3
stc
fdivr
in
cld
jae
sti
mov
push
not
aaa
mov
pop
or
into
shlb
cmp
ret
xor
and
clc
dec
inc
mov
gs
xor
imul
push
sbb
xor
xor
xlat
pop
sbb
lock
sub
push
mov
mov
addr16
mov
pusha
mov
daa
cltd
popa
mov
jns
or
test
mov
fstl
fimuls
lret
psubd
test
mov
mov
mov
ja
cld
inc
push
lods
sub
cmp
leave
icebp
sbb
divb
push
dec
rcr
inc
jg
sub
int3
push
shld
testb
pop
pop
dec
mov
jnp
lods
and
dec
add
rcrl
inc
sti
test
leave
mov
sahf
push
std
mov
push
fnstcw
mov
mull
mov
and
cld
pusha
loop
lods
lock
push
or
data16
pop
dec
dec
push
lods
clc
fstl
add
cmp
inc
int3
and
lret
mov
movsb
pop
add
dec
dec
or
out
push
mov
xor
cld
add
insb
xchg
ds
add
sbb
cmp
inc
jmp
shlb
dec
int3
sub
cmp
fwait
sbb
rep
mov
cld
inc
dec
out
shlb
dec
add
mov
mov
out
mov
mov
scas
daa
mov
adc
jae,pt
and
sub
aas
mov
add
lcall
push
leave
cmpsl
sub
mov
movsb
adc
loop
jb
ret
loopne
adc
jle
in
cli
push
fildl
mov
mov
lret
or
mov
leave
xor
dec
sub
in
dec
stc
sub
je
imul
mov
lahf
lods
ds
adc
test
movl
add
ret
adc
ja
pop
scas
jp
xchg
mov
fldt
inc
outsb
popf
sbb
push
aaa
bound
or
or
cmp
adc
lods
movsb
addr16
adc
stos
jns
fcoml
fistl
and
insb
stos
rol
in
jle
mov
pop
ret
jmp
jb
fcoml
jge
add
mov
mov
add
and
popa
push
arpl
std
mov
mov
adc
adc
stc
dec
mov
sub
xor
push
mov
out
xchg
xorl
outsb
arpl
lock
pop
icebp
jae
xchg
lcall
fyl2xp1
outsb
mov
mov
sub
add
jns
fwait
sarl
pop
outsb
pop
fs
leave
adc
loope
lcall
cwtl
add
xlat
mov
sbb
pop
bound
lock
sub
fs
mov
pusha
imul
nop
xor
fidivrs
adc
push
out
cmp
loop
xchg
es
adc
pop
mov
jne
jge
fidivl
jmp
cld
pusha
mov
imul
cmpsl
inc
fcmovnbe
pop
pop
jecxz
rcrl
and
lea
clc
shll
push
popa
inc
push
lds
nop
lcall
pushf
push
cli
cmp
in
xorb
ss
pushf
jp
push
vunpckhps
pop
jle
mov
in
ror
mov
mov
jg
mov
xchg
stos
in
dec
jp
adc
out
pop
jmp
aam
ds
in
ljmp
push
adc
out
cwtl
inc
add
cmp
lods
aad
inc
pusha
push
cmp
xlat
in
push
cmpb
cmp
xchg
jnp
mov
adcb
in
popf
mov
fwait
dec
adc
lods
stc
shrl
sbb
sub
icebp
sbb
adcl
pusha
jg
sbb
xchg
shll
pushf
clc
outsl
imul
push
jb
sbb
cmp
outsl
push
sti
mov
mov
fcomp
dec
bound
mov
in
call
rorb
loop
push
int
mov
xchg
arpl
pop
mov
test
out
mov
das
pusha
sub
pop
addr16
or
lret
sub
push
ret
into
adc
inc
pop
subb
jns
lcall
sub
adc
push
notb
sub
inc
rorb
movsl
mov
popf
xor
mov
mov
loope
lea
repnz
repnz
push
es
dec
mov
adc
mov
leave
lock
pop
loop
xchg
cmpl
or
call
pop
fists
mov
add
mov
ja
mov
or
mov
enter
adc
add
ja
pop
cmp
loope
mov
pop
or
cmc
sub
push
movsb
mov
dec
lret
mov
les
and
subl
pop
xchg
aad
add
jbe
cmc
adc
push
sub
icebp
repnz
repnz
push
sahf
sbbb
push
xchg
stc
scas
sarl
add
pop
pop
cmp
or
ss
or
mov
mov
jp
xchg
rcrb
andl
sub
mov
sub
mov
pop
jae,pn
pop
pop
int
sbb
inc
mov
rorb
inc
dec
mov
shlb
rorl
mov
sub
lock
jge
repz
js
jmp
addl
dec
mov
mov
movsb
add
pop
sub
inc
push
inc
pop
xchg
inc
in
cld
or
sub
xor
push
imul
out
sbb
sub
dec
push
mov
or
in
pop
ja
cs
dec
jne
test
mov
push
pop
jbe
addr16
and
jmp
and
js
mov
fucomi
outsl
insb
xchg
popa
je
cmp
loope
rorl
pop
dec
push
lods
sbb
bound
ret
sbb
xor
sbb
leave
mov
dec
and
cmp
pop
movsl
pop
jge
ss
xchg
insl
lea
add
xchg
mov
out
popa
xor
push
mov
aaa
ljmp
xchg
icebp
adc
mov
mov
xchg
test
adc
mov
shrb
push
ss
adc
int3
push
cli
push
dec
xor
sub
dec
push
push
aam
mov
loope
in
cmc
add
in
test
jmp
ss
fimuls
cmp
push
ret
stc
sub
push
mulb
cmpsl
push
push
xorl
xchg
in
sbb
fwait
paddsb
aas
lock
repnz
mov
arpl
aas
sub
divb
pop
lret
ror
stos
push
lock
cmp
out
add
add
xchg
repnz
push
mov
aaa
inc
notl
ficomps
sub
cmpsl
mov
in
stc
add
jnp
aaa
pop
cmpsl
stos
dec
xchg
shll
pop
mov
in
cwtl
jbe
push
pusha
mov
leave
inc
push
adcl
test
or
mov
adc
insb
jno
hlt
adc
es
ss
pop
sbb
xchg
mov
sbb
mov
add
aad
push
daa
push
hlt
insl
cmpl
in
jp
cmp
repnz
or
or
jecxz
fs
je
sub
int3
imul
push
xchg
repnz
push
movl
and
pop
sbb
add
mov
and
mov
data16
pop
shl
inc
mov
or
xchg
push
mov
and
and
mov
test
stos
push
dec
aam
popa
inc
leave
xor
adc
cwtl
sub
ljmp
pop
cs
push
mov
hlt
adc
mov
mov
jge
inc
jne
mov
lea
mov
pushf
in
mov
sub
mov
inc
sub
xchg
aam
sti
xchg
std
sbb
mov
daa
sbb
cwtl
mov
rcrb
mov
movsl
vmovapd
push
sti
xor
push
fstpt
aam
test
sub
sbb
mov
repz
sbb
cmp
pushf
test
mul
jns,pt
mov
dec
cmp
lock
or
lcall
neg
add
jnp
in
mov
sub
xchg
push
ss
repz
out
lahf
sub
push
clc
jge
bound
mov
adc
mov
inc
fs
shrl
rcr
add
mov
mov
push
lahf
adcl
jp
sbb
sahf
mov
movl
test
fidivrs
mov
add
das
ficoms
movsl
inc
and
popf
inc
push
mov
jmp
mov
or
in
add
xchg
imul
sarl
jle
mov
jno
in
dec
fstpl
movsb
push
mov
sbb
mov
sti
cmp
fs
or
movsl
das
in
stc
out
lds
jp
loope
pop
repnz
jno
cmp
pop
jmp
and
sbb
cmp
int3
repz
shl
jecxz
jo
shl
mull
leavew
mov
sub
dec
dec
add
es
push
xchg
add
andl
imul
in
in
pop
adc
das
xor
cmp
mov
sbb
lock
fbld
and
into
pusha
mov
cmp
cs
andb
dec
movsl
jns
sub
lods
sbbl
push
add
pop
cmpsl
dec
fidivrl
lock
rcll
sub
fwait
mov
arpl
xchg
or
dec
push
add
mov
sahf
and
pop
jecxz
sub
adc
or
shll
mov
addb
hlt
leave
cmp
xchg
push
fidivs
out
lcall
out
loopne
inc
jo
icebp
insb
fldcw
mov
mov
pop
jp
cmpsb
cmpsb
push
jmp
lret
out
js
adc
mov
fists
ss
inc
dec
mov
test
pop
mov
movsb
fsts
sbb
cmc
out
adc
inc
cs
in
inc
rcrb
push
lahf
sbb
push
hlt
lcall
mov
adc
push
cmp
inc
jae
mov
rorl
scas
leave
sahf
push
pusha
pop
sti
adc
mov
xchg
lods
mull
adc
pop
and
enter
jns
push
push
fnsave
test
pop
clc
test
sahf
leave
les
pop
fdiv
lret
daa
cwtl
pop
jle
daa
imul
mov
jmp
xchg
ret
jae
inc
pusha
lret
lock
test
lahf
adc
jl
insb
mov
or
xchg
xorb
cmpsl
mov
cwtl
insl
scas
mov
mov
arpl
outsb
mov
add
lcall
data16
sarb
mov
jg
in
nop
cmp
int3
mov
sub
and
nop
cmp
das
push
gs
aaa
jg
inc
xchg
dec
bound
mov
xchg
xor
mov
sbb
mov
add
dec
hlt
mov
aad
icebp
nop
test
adc
xchg
clc
outsb
xor
push
adcl
add
and
into
adc
enter
pop
outsb
sub
cwtl
out
xchg
repz
out
xchg
jmp
inc
xor
xchg
pop
test
and
and
pop
pusha
addl
orb
mov
ds
cmpsb
loop
les
or
popa
ret
dec
lds
sbb
dec
fidivs
inc
pusha
adc
or
data16
mov
and
nop
cmp
jle
outsb
std
int
movsb
andl
xchg
dec
int3
mov
test
outsb
add
sbb
divl
in
sub
or
or
sbb
cmp
xchg
xchg
ja
push
xchg
adcl
adc
gs
inc
lahf
sub
stc
mov
out
inc
aaa
pop
cmp
jge
cwtl
pop
pop
fidivrl
aas
inc
popf
push
mov
sbb
or
push
jmp
adc
sub
dec
fsubrl
mov
mov
mov
push
lret
subl
push
ret
xchg
jb
loope
adc
imull
into
and
add
and
clc
pop
fiadds
push
call
dec
cmp
mov
fldcw
stc
outsl
xchg
mov
mov
xor
cs
loope
mov
sti
xchg
cmp
mov
aas
mov
shll
movsl
out
clc
cwtl
dec
push
xchg
sahf
push
and
ret
sbbl
push
gs
data16
outsb
dec
pop
aad
lret
cli
add
dec
in
xor
sub
mov
push
add
add
inc
iret
push
imulb
push
pop
loopne
ss
jne
mov
fisttps
add
push
lods
movsl
cmpsb
stos
and
and
daa
jne
loop
push
adc
mov
and
push
mov
inc
xchg
mov
jb
stc
cmpb
jno
push
fwait
cmpsb
les
mov
cmp
enter
jnp
icebp
xor
cmpsl
es
imul
ds
sub
push
outsb
mov
insb
aad
cmp
or
addl
or
or
icebp
pop
push
test
add
lcall
sub
es
mov
test
sahf
push
test
jae
adc
stos
daa
cmp
jnp
pop
jmp
aaa
inc
mov
mov
cld
jno
cltd
pop
pop
clc
mov
pop
cwtl
jg
test
xchg
pop
push
jge
xor
jecxz
xor
movsl
outsb
shlb
sbb
popa
stos
xor
pop
jns
mov
jle
sub
enter
cs
xchg
xor
pop
inc
jmp
pop
sub
fistl
dec
sub
adc
test
negb
fwait
ret
iret
clc
loop
cmp
cmc
mov
inc
jo
or
xchg
push
in
repnz
add
pop
leave
stos
jno
xchg
dec
faddl
push
pop
xor
insl
mov
cmp
cs
mov
jns
or
call
stos
lahf
jno
pop
push
inc
popl
and
std
pop
sub
in
dec
push
inc
negb
adc
sahf
out
call
xchg
loope
test
stc
push
icebp
or
stos
cld
lret
mov
xchg
mov
out
pop
in
lahf
subb
fwait
call
mov
push
lret
and
addr16
jle
add
pop
and
daa
push
fistl
out
mov
mov
out
inc
inc
daa
xor
dec
ljmp
pop
jbe
inc
subl
add
cli
iret
aaa
pop
push
out
outsb
das
cmp
and
xchg
test
or
push
mov
sarl
mov
bound
mov
xchg
test
fisttps
jbe
imul
into
mov
lods
mov
cmpsb
cmp
loop
jbe
nop
mov
sub
cmp
jg
sub
inc
mov
adc
pop
adc
icebp
mov
jecxz
shlb
pop
cli
sbbb
stc
insl
lahf
add
arpl
mov
lds
push
or
sub
lods
adc
lret
add
pop
mov
andl
dec
pushf
call
lret
pop
add
mov
xor
jge
xchg
cltd
lret
sub
xor
jo
add
insl
add
fmull
or
repz
popf
jbe
mov
xor
aas
sarl
cwtl
and
inc
test
xor
cmc
notl
leave
push
add
lret
mov
stc
call
aas
out
pop
or
push
arpl
mov
sub
leave
push
ficompl
scas
pushf
lahf
scas
dec
cmp
mov
loop
pop
add
dec
int
fmuls
shll
push
jle
sbb
and
jne
jns
iret
add
add
test
sahf
int
mov
enter
push
xchg
jae
pop
xchg
idivl
in
insb
adc
xchg
xchg
frstor
fidivrl
xor
fs
fs
lret
push
and
inc
cmp
push
adc
mov
lret
testl
mov
das
or
add
divb
leave
mov
mov
cmp
test
xchg
cltd
pop
repnz
repnz
dec
xor
or
xchg
push
das
xor
inc
adc
jae
nop
push
add
pop
xor
xchg
pushf
mov
and
push
das
std
sub
outsb
mov
lods
sahf
sahf
sub
scas
cmp
sbb
das
adc
xchg
sbb
mov
adc
mov
push
mov
mov
in
jp
add
add
push
sub
sbb
dec
push
call
fistps
cs
lret
fildll
mov
aam
adc
loop
inc
inc
sahf
sub
das
jbe
leave
add
arpl
push
add
fdiv
xlat
cmp
push
sbb
adc
mov
or
fwait
arpl
xchg
loop
jnp
cmp
dec
sub
add
jne
pusha
sub
mov
inc
nop
inc
test
lea
push
add
mov
mov
pop
sub
test
push
jo
pop
jge
inc
mov
ret
jo
sbb
cltd
imul
mov
call
sub
and
dec
mov
mov
mov
adc
or
adc
ret
dec
mov
mov
pop
cmp
adc
jmp
push
inc
adc
js
sub
and
popa
dec
push
std
loope
dec
sub
mov
add
test
inc
jnp
xor
xchg
dec
mov
push
ja
rorb
xor
xchg
mov
jg
xchg
ffree
cli
pusha
xchg
out
or
test
mov
xchg
pusha
sbb
sbb
jae
dec
add
and
add
ret
hlt
rolb
jo
sub
bound
cld
xchg
pop
int
addr16
jne
mov
mov
cmp
sub
mov
add
mov
ffreep
pusha
ror
int
hlt
inc
icebp
cmp
xor
dec
aad
ja
cwtl
addr16
jp
and
loopne
dec
dec
cmp
mov
adcl
pop
outsl
nop
mov
loope
inc
in
pop
mov
xor
cmp
mov
ja
add
ret
xor
and
jns
lea
dec
add
sub
xor
fwait
lcall
gs
pop
and
bound
and
pop
xchg
ljmp
pop
lds
cmp
popa
mov
fimull
ljmp
dec
in
push
mov
mov
fcomps
lea
jns
fucom
out
std
les
mov
mov
outsb
mov
mov
cmpsb
adc
cmpsl
testl
mov
push
dec
int
adcl
je
enter
mov
lret
cs
mov
jmp
popa
xor
sub
fbld
push
iret
lods
mov
bound
ret
addr16
sub
xchg
mov
out
inc
dec
jne
fwait
adc
addl
and
outsl
jne
adc
testl
stos
pop
imul
aad
xor
mov
xchg
sbb
jl
sub
fnstenv
push
pop
mov
sbbl
jo
and
jnp
loopne
nop
jae
inc
mov
movsb
mov
xor
fisttpll
xchg
adc
fmuls
ss
jmp
je
push
stos
gs
fwait
int3
loope
std
push
addr16
aad
adc
ja
dec
push
mov
pop
in
lods
dec
lret
insb
xchg
jns
shrl
xor
mov
movb
pop
cmp
daa
jge
popf
jg
lcall
xchg
stos
lods
and
stc
mov
mov
add
inc
adc
out
or
ficoms
je
xchg
and
cmp
insb
inc
adc
push
sub
fldcw
inc
and
fldl
inc
leave
jl
iret
in
cld
adc
mov
adc
fistl
imul
outsl
filds
pop
in
sbb
jae
sbbb
xor
jne
cmpsb
lcall
dec
sub
xchg
lods
dec
xchg
xor
dec
sub
sub
mov
enter
lahf
clc
testl
mov
cmp
js
icebp
int3
jge
clc
ds
movsb
sub
xchg
sbb
popl
mov
dec
cmp
mov
adc
mov
push
jge
ljmp
testb
les
pop
xchg
push
jbe
shll
adc
pop
aad
xor
lods
cmp
mov
arpl
aas
in
aas
in
mov
mov
inc
rcll
xor
daa
sub
sub
xchg
mov
fcomip
data16
test
data16
mov
pop
fildll
jp
dec
push
push
add
movb
mov
pop
out
add
push
xchg
mov
mov
xor
jg
test
pop
jns
mov
mov
jnp
push
jbe
jp
jno
shrl
popa
push
and
mov
jbe
cmovbe
pop
pop
add
jnp
cmp
movsb
mov
cmc
pushf
fidivrs
xor
jl
or
sub
jp
lods
cmp
xchg
mov
dec
jno
mov
xor
sub
idiv
pop
popa
mov
cwtl
xchg
test
jp
jle
mov
popf
mov
sti
fcompl
xchg
cmp
sbb
les
fwait
iret
jo
dec
xchg
or
sub
leave
push
and
mov
out
pop
cmpsw
jmp
or
xor
pop
mov
dec
push
sti
sub
ljmp
jge
jo
mov
shrl
mov
jp
jp
shrl
push
pusha
xchg
adc
mov
push
subb
push
push
push
mov
and
fwait
loopne
sbb
and
pop
pushf
loopne
push
cmp
sahf
xor
popa
lret
xor
cmp
mov
ja
pop
dec
xor
pop
xor
fmull
loop
jns
xor
fcmovnbe
xlat
ss
mov
lods
mov
ds
cmpsl
pop
decb
outsl
mov
subb
or
push
pop
test
imul
std
dec
mov
rol
adc
or
lret
les
pushl
mov
dec
clc
in
xor
andl
xchg
dec
jb
pop
inc
mov
jb
jae
pusha
adc
das
adc
loopne
push
mov
es
jae
jecxz
inc
or
sbb
mov
and
lea
inc
mul
mull
dec
mov
dec
movsl
mov
or
mov
jmp
sbb
ss
mov
inc
lcall
fldpi
xlat
and
xor
jb
and
lret
push
and
inc
dec
fcompl
nopl
sbb
pusha
push
pushf
and
loop
repnz
cmp
mov
je
xchg
xor
sub
insb
lahf
call
popf
icebp
fldenv
or
fcmove
adc
jmp
push
sti
outsl
loope
sbb
outsb
popf
sub
add
fiaddl
rcl
je
xchg
add
mov
mov
inc
add
sbb
nop
jne
sub
mov
dec
push
cmp
ror
lret
xor
inc
jg
mov
sbb
push
dec
or
mov
fistpll
in
pop
psrlq
ss
cmpsb
in
push
jle
pop
cmp
cmc
pop
push
xchg
or
adc
and
mov
jle
inc
ficomps
int
inc
cmp
xchg
push
mov
lahf
bound
clc
xor
cmp
jno
cli
sub
pop
cmp
xor
shlb
int3
jne
mov
jmp
adc
dec
push
add
popf
mov
mov
adc
daa
stos
mov
and
pop
pop
pop
outsb
xchg
ficomps
aad
enter
pop
dec
xchg
sbb
clc
outsb
insl
pop
repnz
xor
xor
aam
xchg
clc
aaa
arpl
lds
test
das
cld
cmpsl
xlat
mov
cmp
push
fimuls
js
sbb
shl
jno
out
je
push
arpl
push
jae
sub
lea
dec
jns
jbe
in
stc
sti
inc
outsl
rorl
or
or
mov
fs
add
jle
mov
add
xchg
mov
mulb
jge
mov
sub
sti
push
push
lret
jne
mov
scas
inc
loop
and
int
inc
daa
ds
lods
xor
pop
and
movsb
push
in
popf
fcompl
mov
fsubrs
pop
push
popf
rcrl
popf
xchg
mov
call
mov
daa
pop
cmp
cmpsb
hlt
pop
adc
movl
subl
sub
shlb
and
push
fsubr
scas
sbb
jo
add
gs
and
mov
cmp
or
out
test
add
mov
sub
mov
mov
in
mov
cmpsl
jge
and
sbb
repnz
fimull
fmulp
in
arpl
frstor
insb
mov
jb
cmpsl
push
adc
movsb
push
aas
ss
lods
or
push
jg
mov
lahf
pop
xchg
repz
add
shll
xchg
mov
xchg
jb
int3
daa
xchg
or
mov
jg
mov
pop
jg
jo
push
fimuls
sbb
adc
sbbb
loop
call
fimull
cmp
or
aam
and
sbb
icebp
fnstsw
out
pop
sbb
jge
fcoms
sbb
mov
out
sahf
push
inc
and
mov
jne
sbb
pop
fwait
push
sbb
int
xchg
test
fcoms
inc
ljmp
sub
mov
loop
mov
ja
call
add
cld
xchg
leave
xchg
push
loope
push
push
add
sbbb
jo
inc
cmpsb
adc
inc
add
push
sbb
dec
addr16
js
sbb
int3
movsb
ds
cld
inc
and
mov
gs
xchg
adcb
outsl
push
shlb
rcr
mov
mov
sbbl
add
push
mov
xor
aas
or
jge
out
mov
loop
and
mov
push
jb
and
jl
sti
push
aam
test
adc
daa
dec
dec
pop
test
jae
mov
loope
rcr
mov
mov
push
cmp
cmp
rorl
lock
xor
shll
cld
jno
mov
stos
int
sub
out
mov
push
in
mov
in
loope
xlat
sub
int3
iret
jne
sub
shll
iret
xchg
int
scas
add
enter
dec
std
mov
repz
jno
and
jno
rcrb
insb
xchg
mov
stc
in
int
sub
or
stos
mov
outsb
cmp
stos
sub
add
aaa
or
jns
iret
jae
lods
das
xchg
stos
sbb
dec
xor
lods
mov
xchg
popf
loopne
push
fadd
pop
mov
sub
cmpsl
adc
mov
add
push
push
mov
loopne
dec
cmpsl
aam
ljmp
faddl
jne
mov
mov
dec
aaa
adc
rorl
or
xchg
xchg
rcrl
pop
faddl
or
cmpsl
loop
jo
pop
and
pop
and
inc
es
insb
pop
adc
push
pop
sub
lcall
aam
sbb
sub
test
outsb
loopne
sub
lahf
push
enter
das
xlat
enter
test
inc
jl
mov
insb
les
jae
test
sbb
add
fiadds
inc
mov
aam
dec
xor
adc
js
iret
leave
loop
dec
or
adcb
dec
mov
dec
pop
in
pusha
cli
xchg
lock
and
jl
in
sbb
mov
shr
pop
xor
xor
test
pop
dec
lcall
shl
xor
cmp
inc
jge
in
loope
cld
dec
addr16
jmp
jne
jo
pushf
inc
out
call
mov
stos
ret
hlt
pop
ror
icebp
test
push
adcb
mov
add
xchg
push
mov
dec
nop
mov
push
fidivl
adc
xor
stos
daa
adc
fs
test
push
or
out
lock
nop
mov
jge
scas
hlt
lcall
jecxz
das
mov
add
push
xchg
notb
int
fisubrs
out
stos
sub
test
mov
aad
popa
movsl
and
pop
dec
mov
mov
repnz
insb
lret
enter
cmpsb
lock
dec
xchg
pop
movsb
ror
lahf
pop
pop
imul
mov
mov
xor
mov
xchg
ds
scas
inc
stc
xor
inc
sbb
pop
pop
fwait
sub
scas
push
ljmp
ljmp
xor
push
arpl
push
repnz
cs
or
add
mov
jno
and
jne
xor
int3
out
pushf
nop
mov
stc
daa
insl
dec
sub
xor
adc
jo
jb
call
fdivs
arpl
stc
sub
add
or
xchg
xchg
mov
aam
mov
std
inc
aam
mov
adc
mov
sbb
jo
inc
mov
push
cli
push
das
lods
adc
inc
movsb
mov
pop
imul
cld
push
jns
sbb
rclb
mov
jns
add
jnp
iret
faddl
sti
rcrl
mov
mov
sub
fisubs
cmp
mov
sti
iret
inc
jp
sub
out
xchg
mov
hlt
daa
call
movsl
rcrl
stc
mov
mov
into
push
fistpl
daa
mov
mov
popa
push
xchg
mov
pop
xor
inc
mov
jns
sub
rcr
pop
pop
cmpsl
cltd
fsubrs
aad
push
pop
mov
int
mov
dec
lcall
clc
inc
in
xor
arpl
or
and
push
jnp
and
cli
inc
mov
or
test
add
in
test
out
push
xchg
push
addr16
push
dec
lret
inc
icebp
arpl
flds
xchg
sbb
xchg
mov
mov
gs
pop
ljmp
push
imul
mov
in
pop
inc
fdivrp
movsb
in
fsubl
sbb
cmc
xchg
mov
outsb
cmp
add
rorl
push
cmc
lods
popf
mov
stc
in
cmpl
adc
in
sahf
les
mov
shrb
mov
fcomp
xchg
xchg
dec
jmp
inc
insb
mov
and
add
pop
cs
jle
dec
dec
mov
inc
fdivs
adc
scas
mulb
lcall
or
out
push
xchg
jns
mov
push
mov
ret
xchg
add
xor
or
pushf
pushf
stos
popa
xor
xchg
dec
test
insb
mov
jns
mov
out
and
loope
cwtl
loop
lret
add
aad
in
inc
hlt
in
adc
daa
pop
mov
idivw
int3
iret
out
xchg
jecxz
lret
add
push
jb
cmp
popf
out
aaa
pcmpeqd
subb
xchg
xor
add
ror
jge
adc
jb
inc
cmp
aam
test
into
mov
sub
push
dec
adc
cmp
dec
movsb
pop
dec
xor
mov
fimull
jns
mov
cmc
mov
mov
shl
insl
xor
repnz
out
cld
fsubr
xchg
aad
aaa
push
testb
jmp
imul
int
push
inc
fs
inc
cltd
stos
xchg
cmp
in
or
xchg
fnstcw
enter
add
rolb
gs
mov
and
inc
and
mov
pop
fwait
icebp
test
mov
push
xchg
push
out
xor
out
sub
xor
inc
nop
push
es
push
xor
sti
stos
xor
ss
inc
sub
mov
xor
inc
cmpb
cmp
sub
testl
mov
stc
mov
cwtl
ffree
and
adc
mov
insb
shrb
je
into
daa
xlat
adc
loop
cmp
loopne
xor
scas
mov
shl
mov
imulb
movsl
ss
ss
lock
adc
call
and
dec
sub
sahf
movsl
push
sbb
shrl
jae
loopne
int3
or
das
mov
dec
cmpsl
fmull
rorb
cli
inc
push
mov
loop
lods
in
or
inc
add
sbb
adc
pop
mov
pusha
sbb
sub
dec
xchg
pop
insb
pop
xchg
lret
sbb
out
daa
lods
adc
in
sbb
pop
inc
cmp
add
inc
mov
movsl
shrb
dec
cmp
arpl
clc
push
sub
iret
push
inc
stc
push
cmpsl
imul
jp
mov
or
xor
sbb
clc
lods
sahf
pusha
loop
xchg
inc
in
insl
push
ror
pushl
mov
test
jbe
lds
test
rcrb
lret
shll
lcall
cmpsb
fucompp
sub
mov
adc
xchg
icebp
xlat
and
mov
nop
ret
inc
fs
mov
ret
and
imul
out
mov
add
test
add
data16
pop
pop
scas
jns
imul
out
scas
andb
inc
scas
imul
fcomps
mov
cld
pushf
inc
inc
aas
loope
push
cmc
and
pop
inc
push
sub
test
fnstenv
ds
xchg
cmp
setb
mov
push
inc
test
das
xor
mov
pop
out
sbb
enter
outsb
sbb
push
testb
and
cli
lahf
fwait
mov
xchg
gs
dec
or
and
lret
push
jb
lcall
inc
rorl
push
xor
int3
pop
test
sbb
xchg
lcall
test
aad
dec
leave
fnstenv
or
add
ror
inc
les
push
sbb
cltd
mov
dec
lea
lods
ss
cmpsb
pushf
mov
and
ret
xchg
mov
mov
mov
stc
lods
sub
outsl
sub
xchg
sub
cli
mov
sti
mov
cmpl
cmp
stos
lock
invd
jp
xchg
xor
aad
ds
cmp
xchg
lods
sahf
pop
inc
or
cmp
fcomps
add
push
sub
frstor
scas
push
lret
mov
lahf
xchg
movsl
cmp
adc
dec
cmp
scas
ja
pop
inc
jae
mov
movl
pop
jno,pt
push
lret
inc
cmp
mov
push
jmp
xor
movsb
dec
cmp
les
popf
out
es
sbb
mov
add
pop
push
arpl
pop
cmc
cmp
stos
mul
mov
movsl
dec
out
sub
push
and
xchg
sub
imul
push
add
cwtl
fidivrl
jmp
adc
dec
mov
jge
pop
mov
mov
rcrl
das
xor
mov
fdivl
adc
push
in
iret
popa
fadd
shll
cmp
pop
icebp
test
jl
insb
das
inc
sahf
jp,pn
call
dec
pop
fisubs
loop
sub
add
xchg
push
mov
or
push
jns
inc
popa
mov
jge
or
movq
insb
repz
test
hlt
mov
push
fistps
dec
mov
aaa
pop
popf
xor
dec
cmpsb
cwtl
pushf
mov
xchg
nop
sarl
or
jo
and
js
mov
ror
btr
loope
mov
sub
xor
stos
addr16
mov
rcll
pushf
and
dec
add
outsl
xchg
or
filds
push
xor
fisubrl
scas
xchg
adc
sbb
ret
inc
cltd
or
incl
aaa
cld
cld
insb
testl
push
das
inc
rcll
decl
xchg
jnp
mov
repz
adc
out
pop
lock
sub
cmp
add
lds
into
aam
push
sbb
cmpsl
in
pop
pop
pop
and
ficompl
cwtl
in
jb
jae
add
mov
jne
cli
sbb
mov
or
cmp
jp
je
xor
imul
add
xchg
shlb
jae
sbb
in
add
insb
pop
lahf
sbb
xor
and
add
adc
xchg
lcall
lret
aam
mov
inc
xlat
pop
adc
into
xor
xchg
add
ja
dec
or
cmp
or
lret
cmp
or
pusha
popa
je
cmp
je
loopne
pop
shl
mov
mov
inc
inc
ret
into
xor
scas
loop
adc
mov
icebp
mov
add
and
add
or
jmp
and
dec
xchg
inc
and
jo
pop
inc
es
mov
pop
xor
mov
loope
neg
jle
xor
ficoml
sbb
es
xor
imul
push
xchg
in
xor
jnp
add
jbe
outsb
inc
jp
adc
dec
mov
fcoml
outsb
stos
dec
push
pop
out
jge
popf
push
push
mov
ret
push
pop
push
popf
sub
test
in
inc
xchg
shrl
rcr
pop
inc
fldcw
mov
cmc
aas
inc
or
dec
inc
mov
ja
dec
push
addb
mov
test
sbb
adc
mov
mov
xor
dec
sub
movsb
ror
adc
mov
inc
jle
nop
inc
jmp
cmovb
fdiv
gs
jno
pop
xchg
fidivs
insl
imul
mov
ffreep
mov
jne
mov
ret
cli
dec
mov
in
out
dec
xor
test
cmp
pop
in
mov
lods
std
nop
ds
enter
cmp
scas
dec
scas
mov
outsb
sbb
push
loop
cmp
push
sub
leave
inc
cmp
inc
xor
ss
testl
gs
std
das
fs
push
js
pop
dec
ljmp
jbe
imul
inc
je
sub
pop
mov
jbe
mov
mov
test
pop
dec
data16
aaa
push
and
movsb
cmp
inc
cmc
test
jne
push
push
dec
aam
aad
rol
inc
insb
repnz
inc
jae
shll
mov
insb
inc
movsl
mov
pop
pop
or
fnstcw
push
outsb
mov
cmp
repz
lret
adc
sarl
inc
popf
imul
mov
dec
sbb
loopne
outsb
fcoml
out
sbb
call
out
aas
pop
inc
rclb
xchg
fs
lock
dec
push
divl
popl
adc
dec
test
jb
xor
dec
cmp
mov
and
cmpsb
mov
inc
ja
pushf
pop
xor
std
add
ljmp
addr16
mov
jbe
loopne
push
push
jne
push
inc
hlt
and
add
jb
inc
call
cli
adc
mov
clc
inc
sbb
xchg
sti
push
stc
rcrb
xor
fnstcw
mov
xchg
sub
adc
pop
cld
outsb
daa
push
ss
lret
dec
xchg
dec
lods
sub
sub
mov
mov
cwtl
mov
push
outsb
mov
mov
pusha
xchg
lods
fidivrs
mov
and
repnz
js
sbb
mov
notb
shll
and
lock
ja
icebp
push
push
and
scas
pop
fadds
or
out
imul
sbb
mov
xchg
push
and
fidivrs
pop
test
add
shll
repnz
cwtl
add
sarb
mov
sbb
jmp
sub
mov
push
enter
fs
push
dec
jl
push
mov
xchg
sub
jbe
xchg
test
adc
rcll
pop
flds
insb
jecxz
cld
push
scas
cmp
js
cld
cmp
sbb
dec
push
push
fistps
pushf
dec
xor
popf
cli
into
ds
mov
jl
dec
jae
movsb
sbbb
fcmovne
and
pop
pop
add
mov
ret
add
pop
and
pushf
fcoml
sub
dec
inc
sub
jno
push
sbb
lahf
mov
push
andl
dec
mov
scas
cmp
xor
lret
adc
cmp
mov
lods
ficoms
pop
movsb
mov
into
or
shlb
push
idivl
and
sub
cwtl
icebp
mov
rclb
mov
add
aad
add
mov
xor
and
xchg
inc
jg
out
push
jo
adc
and
jle
add
jg
cmp
dec
rol
jecxz
push
ret
adc
jns
fcoms
cmp
cwtl
sub
lret
movsl
into
popa
into
js
xlat
xchg
ret
call
mov
daa
pop
clc
loope
mov
sub
test
cmp
int
arpl
jmp
jecxz
mov
mov
sbb
push
arpl
and
push
push
sti
add
hlt
movsl
shr
int3
scas
mov
enter
imul
ret
xchg
xchg
ss
mov
cld
insl
xchg
dec
pop
cmc
insl
rcrb
jp
ljmp
sahf
cmpsl
pop
aad
loopne
cmp
jp
loopne
xchg
clc
int3
int3
dec
mov
les
outsb
and
dec
out
outsb
pop
adc
insl
cmp
add
jg
xchg
arpl
bound
mov
call
dec
imul
jns
mov
pop
lea
push
xor
mov
sarl
leave
mov
mov
xor
sbb
dec
jns
xlat
xor
aam
icebp
push
dec
and
adc
pop
inc
jge
stc
std
sub
lahf
mov
dec
test
repz
test
out
and
jbe
call
mov
adc
mov
sbb
mov
mov
mov
pop
jne
insb
cmp
fidivl
out
cld
mov
xchg
rol
insl
dec
xchg
clc
icebp
adc
xchg
sbb
cmpsl
xlat
add
pop
fs
fwait
jnp
loope
fxch
popa
xchg
dec
inc
js
in
roll
push
aad
xchg
mov
loop
cmp
adc
add
dec
fidivrl
dec
popf
sbb
add
or
pop
fidivl
ficoms
mov
lea
xchg
gs
sub
mov
push
and
pop
cs
not
jnp
push
repnz
loopne
cltd
out
add
pop
pop
pop
xchg
adc
xchg
push
or
add
fidivrs
popa
sti
out
idiv
cmp
aam
jbe
xor
mov
sub
movq
xor
sub
arpl
cmc
jmp
pop
nop
cmc
xor
jo
push
cmp
add
sbbl
in
stos
jno
xchg
mov
xchg
sbb
mov
jmp
and
sub
xchg
mov
les
iret
dec
arpl
jo
push
jo
inc
jecxz
jno
adc
mov
sahf
mov
cmp
cmc
mov
movb
adc
add
aaa
in
fnstsw
clc
dec
mov
sub
insb
in
jge
arpl
pop
lahf
fdivs
daa
imul
inc
jne
and
inc
and
push
test
mov
push
sub
push
or
sub
pop
or
push
xchg
fiadds
jl
mov
push
fistl
movsb
lahf
push
xchg
xchg
jl
out
es
lcall
les
jne
loopne
es
in
imul
add
int3
add
cwtl
in
xor
sub
std
push
jp
daa
xchg
push
stos
add
cld
mov
push
call
pop
xor
mov
call
subb
outsb
or
dec
push
push
jne
or
lret
xchg
cmp
push
mov
aaa
inc
ret
mov
arpl
std
add
popf
push
pop
inc
mov
sbb
lds
decl
loop
inc
in
loop
je
dec
sahf
add
arpl
inc
fisubl
push
sbb
ret
pop
outsb
sub
mov
es
ja
xor
jo
jle
add
jmp
outsb
pop
arpl
ret
fbld
fadds
mov
bound
repnz
or
jmp
inc
jecxz
insl
fs
loop,pt
popf
outsl
push
jno
inc
cmc
mov
daa
mov
das
dec
cmp
xchg
push
inc
lcall
repnz
push
test
jle
or
pop
inc
pop
fucomi
add
pop
iret
add
aam
xor
ss
test
mov
inc
les
ljmp
push
shlb
lods
add
lds
out
jmp
cli
jl
pop
push
pop
mov
movsl
mov
jns
inc
xchg
dec
mov
mov
inc
hlt
mov
sbb
jb
outsl
cmp
pop
or
cmp
outsl
loop
jmp
pop
arpl
xchg
test
and
sbb
insb
aas
sub
xchg
mov
mov
push
int3
and
data16
rdtsc
pop
cmp
leave
sbb
pushf
lcall
out
sbb
ljmp
push
rclb
out
xor
hlt
xchg
pusha
xchg
cmpsb
clc
lea
pop
xchg
add
movsl
ds
popa
std
sbb
pop
sahf
push
dec
push
inc
mov
fdivr
inc
inc
xor
cmpsb
in
push
cwtl
xchg
shrb
es
in
test
repz
push
subb
gs
push
and
and
stos
and
mov
mov
bound
and
aad
cmpsb
lods
mov
xor
sbbl
add
add
cld
cmp
cli
sub
fnstenv
fs
and
outsb
push
cwtl
fisttpll
push
std
mov
add
lods
and
cmp
mov
push
cwtl
iret
mov
and
out
mov
pop
jg
dec
mov
das
mov
or
lahf
xlat
inc
mov
push
call
cmpsb
scas
or
das
jmp
jp
lret
ja
lods
pushf
insb
bnd
test
mov
or
and
mov
mov
adc
sub
push
je
xchg
add
arpl
ret
mov
sarb
stos
lods
loopne
dec
jecxz
adc
push
movsl
jmp
mov
add
out
or
insb
jb
push
lahf
popf
mov
jae
flds
and
lahf
in
fcoms
adc
or
mov
les
insb
add
jae,pt
sub
adc
cmp
pop
mov
imul
std
pop
or
sbb
mov
test
dec
enter
mov
jae
nop
psraw
xchg
js
jg
push
add
jg
rcrl
nop
bound
sbbb
or
enter
jo
fmuls
lock
pop
dec
fs
scas
sbb
cltd
aas
push
aas
mov
popa
push
sub
inc
sahf
xchg
inc
xchg
out
and
inc
mov
xchg
shll
adc
mov
cmpb
ret
xor
jge
add
mov
mov
outsb
aam
divl
clc
xor
gs
push
xchg
nop
mov
xchg
jo
push
test
in
nop
ljmp
nop
mov
pop
adc
push
das
mov
jmp
mov
jge
scas
push
out
rclb
mov
out
inc
pushf
jecxz
lret
cmp
push
repnz
mov
xchg
fbstp
movsb
ds
push
sbb
arpl
mov
lahf
jbe
andb
icebp
stos
in
xchg
cmc
or
test
pop
daa
or
loop
in
adc
pop
jge
or
push
pop
js
test
into
jae
dec
and
dec
inc
les
adc
xchg
je
jo
jo
push
push
imulb
dec
mov
cmc
inc
inc
adc
lret
addr16
popf
arpl
movsb
popl
into
gs
sbb
fiaddl
push
and
sub
aas
sbb
push
xchg
sbb
ret
pop
jecxz
push
je
sbb
lods
fwait
jp
sbb
sbb
push
mov
aad
arpl
and
outsl
jl
xchg
push
and
scas
pop
jle
sbbl
jo
mov
xor
into
add
lock
push
fnsave
sahf
stos
scas
jmp
ja
cmpsb
and
mov
lcall
pop
inc
fucomp
and
dec
push
sub
mov
cmc
bound
out
mov
stos
jle
mov
repz
das
cmc
bound
dec
scas
or
imul
sbb
cmp
fxch
mov
enter
push
mov
fisubl
lds
pushf
jmp
fdivs
jb
outsl
or
pusha
sbb
jbe
add
xchg
jecxz
loopne
imul
cld
adc
sbb
loope
dec
daa
pushf
aad
sti
add
pop
inc
test
imul
xchg
mov
imul
jle
push
aaa
adc
and
xchg
jbe
fisubrs
movb
fistpl
mov
mov
loopne
pop
popf
sbb
cli
insl
mov
in
outsb
stos
sbb
add
fs
aad
mov
sub
push
aam
cmp
mov
push
pusha
xorb
cmpsl
dec
lret
cmp
inc
jno
loope
in
fcompl
sub
cmp
push
daa
xor
shrb
repnz
mov
and
stos
mov
inc
inc
nop
loope
aas
ds
ret
cli
out
out
orl
andb
or
loope
jge
lds
lds
pop
mov
addr16
inc
add
or
fdivp
iret
xor
push
jge
stc
mov
inc
shr
adc
daa
add
insl
out
add
dec
cli
mov
inc
pusha
cmovo
imul
andl
xor
movsl
sbb
lea
jbe
dec
cld
xchg
pusha
mov
sub
sbb
mov
xor
pop
mov
dec
das
xor
sbb
sbb
test
fcom
cmp
in
popf
mov
adc
and
add
mov
nop
imul
fmuls
pop
subl
inc
xchg
nop
mov
imul
test
xor
iret
lods
dec
pmullw
scas
lds
loopne
push
loopne
loopne
cmp
into
fwait
in
divl
mov
pop
jle
in
mov
xor
iret
stos
sbb
fcomps
sub
test
jne
add
in
mov
cmp
ret
inc
lcall
stos
or
sbb
xchg
jecxz
adc
js
dec
jle
pusha
push
aas
mov
decl
out
lretw
and
mov
add
jg
pop
xor
xor
cmp
cmp
jle
daa
mov
ljmp
dec
nop
xchg
repz
push
ljmp
inc
adc
add
mov
pushf
and
fistpll
sub
xchg
lds
cld
inc
mul
dec
sub
int
mov
xchg
jle
add
shrb
lahf
xchg
push
mov
fnsave
xchg
jnp
mov
and
mov
push
cmp
fnstenv
xchg
paddw
shl
jg
das
in
data16
mov
cs
mov
outsb
sbb
push
in
dec
ret
out
lret
lods
std
cmp
mov
adc
inc
jecxz
xor
nop
push
into
sahf
mov
mov
mov
push
mov
movsb
jge
ds
fldcw
loop
imul
les
pop
arpl
ss
sbb
outsl
mov
mov
mul
inc
dec
fucom
push
mov
cltd
inc
inc
sbb
movsb
or
mull
jbe
and
xlat
in
push
test
jmp
stos
les
out
jl
loop
fisttpll
int
cmpsl
andb
andb
xchg
xchg
outsl
jmp
sub
outsb
lods
out
xchg
push
rcr
inc
andl
mov
lret
popf
fwait
cmp
cmp
movsl
mov
jl
inc
or
testb
sbb
out
xchg
iret
adc
sti
mov
ds
roll
xchg
push
push
rcll
jle
sbb
movsb
adc
sub
sub
sub
aad
mov
pushf
or
call
test
rclb
aaa
in
ret
mov
movsb
hlt
fs
lds
notb
mov
dec
gs
inc
xchg
aaa
xorb
and
jle
out
xchg
mov
xchg
sbb
jecxz
insb
out
out
cwtl
in
add
adc
xchg
and
stc
mov
leave
pop
add
inc
cmpsl
pop
mov
fistpll
xacquire
cs
adcb
bound
fcomps
call
xchg
movl
inc
orl
jmp
aad
push
or
movsb
fnsave
pop
cmpsb
mov
adc
push
daa
test
fmull
mov
push
pushf
arpl
clc
adc
imul
mov
pop
inc
outsl
fnstsw
mov
popf
pop
mov
loopne
dec
ror
jae
imulb
mov
dec
adc
call
inc
cmpsl
call
cwtl
daa
sbb
mov
adc
xchg
xchg
xlat
adc
jb
movl
xchg
hlt
mov
push
pushl
aad
rcl
pop
popa
push
pushf
rol
push
mov
sub
inc
cli
push
push
and
mov
mov
jb
jne
xor
fistpll
mov
sbb
or
mov
xrelease
cmp
cmc
xchg
mov
inc
xchg
in
mov
jecxz
stos
rcrb
aad
or
je
jae
sub
mov
ret
pop
sbb
shrl
push
mov
je
into
sub
mov
gs
cli
shl
int3
mov
adc
daa
rcrb
std
xor
test
in
mov
negb
cmp
xchg
lods
pop
fnstenv
push
divb
scas
imul
fs
pop
cli
dec
inc
mov
jecxz
inc
loopne
ja
setl
leave
cmp
mov
insb
adc
imul
mov
cmp
imul
xor
dec
lea
pop
loop
stos
pop
inc
cmp
add
or
add
stos
pop
icebp
adc
xor
aam
hlt
sarb
clc
inc
add
dec
cmp
sbb
adc
inc
mov
loop
cmp
xchg
idiv
lods
int
xor
mov
call
nop
in
data16
jne
cmp
int3
call
test
out
shlb
adc
mov
mov
cwtl
negl
xchg
dec
xlat
loope
nop
mov
cld
sbbb
and
aad
in
test
mov
insb
xchg
inc
jmp
iret
aas
es
movsb
mov
add
movb
pop
lret
into
cmp
mov
push
dec
jge
or
cwtl
xor
sub
stos
fistpll
stos
icebp
rol
xor
add
jne
add
jecxz
in
dec
add
mov
adc
push
and
pop
dec
fdivrl
xor
xor
cmpsb
mov
push
push
mov
sbb
sub
lret
xor
xor
insb
mov
movsl
xor
in
push
int
sbb
int
xchg
aaa
loopne
inc
mov
out
push
loopne
push
push
and
fstpt
xchg
ficompl
push
in
add
fwait
cmp
jle
xor
out
movsb
and
inc
xlat
jne
das
sti
shrb
sbb
dec
add
mov
into
xor
movsb
jp
dec
dec
xor
pusha
aas
loopne
sbb
push
pop
adc
rorb
repz
add
ret
adc
pop
xor
test
lea
in
aas
push
xchg
fidivrl
xchg
mov
fstl
loop
cmp
sbb
movsl
cmc
loopne
sbb
stos
std
or
nop
adc
dec
std
idiv
loopne
dec
and
jae
jbe
push
insb
push
dec
cmp
arpl
inc
scas
push
in
jne
jp
int
neg
cltd
outsb
adc
cmpsl
insb
xchg
test
popa
fwait
add
cmp
test
int3
jecxz
inc
movsb
lods
mov
cmc
add
das
inc
inc
mov
outsb
div
pop
mov
inc
or
aas
insl
aaa
dec
imul
and
adc
dec
xchg
arpl
jnp
push
and
out
push
loop
push
inc
bound
popf
pop
dec
movsb
jp
inc
int3
stc
scas
mov
jp
aaa
or
xor
mov
popa
rorb
lods
ds
adc
cs
dec
js
push
lret
xchg
push
adc
mov
fldt
push
adc
adc
add
les
test
ror
inc
js
add
xor
jb
rcl
popa
shrb
shlb
test
enter
sub
adc
lds
cltd
and
mov
out
fwait
mov
pop
ss
mov
lret
mull
and
adc
incb
lcall
xchg
shll
shlb
inc
addr16
mov
inc
pop
mov
xchg
xor
mov
sub
popf
dec
fiadds
pop
imul
repz
inc
sbbl
add
lods
mov
mov
mov
outsb
cmp
fs
mov
lret
popa
sar
push
ja
out
mov
cmp
push
in
dec
sbb
stc
jle
test
pop
and
addr16
iret
mov
rcrl
add
push
fisttpll
data16
orb
cltd
in
inc
pop
cmpsb
cwtl
idivb
xor
lahf
add
cmp
scas
or
mov
jge
inc
fcmovnb
popa
daa
cmp
in
in
aad
sub
cli
jmp
aam
nop
xchg
sarb
jg
jmp
and
bound
fisttps
out
movsb
out
pop
adc
add
out
movsl
xor
xchg
ficomps
mov
cmp
xchg
dec
adc
mov
lock
sbb
aaa
adc
jo
mov
addb
mov
mov
push
inc
hlt
arpl
int
ret
pop
shr
pop
repz
jb
adc
jb
cmpl
jg
xlat
sarl
jns
mov
lea
in
pop
adc
hlt
sar
rol
ds
sub
int3
movsl
cltd
test
rorb
out
mov
mov
mov
iret
pop
xchg
repnz
popf
pop
pop
nop
mov
jmp
std
xor
jne
int
or
test
pop
rcrl
imul
push
cmp
ret
stc
mov
push
xchg
mov
add
mov
pop
inc
push
inc
push
daa
test
and
sub
dec
mov
jp
sub
xchg
pop
sub
enter
adc
fnstcw
inc
imul
nop
dec
xor
sub
mov
cltd
or
inc
mov
adc
jo
or
or
test
bound
enter
mov
sbb
adc
or
hlt
in
gs
mov
lahf
arpl
lret
ss
ret
lods
sbb
les
push
mov
push
xchg
sti
inc
test
push
sub
lds
hlt
cmp
pusha
inc
cwtl
out
mov
or
neg
lret
js
push
push
and
cli
push
imul
fldenv
fsubrs
fs
in
mov
mov
into
rcrb
les
add
and
pop
flds
xorb
push
mov
jmp
inc
pop
cmc
xchg
inc
shll
xchg
sub
dec
jae
and
pmovmskb
mov
cmp
jnp
shll
push
outsl
dec
push
fistl
push
sub
cltd
push
in
dec
xor
jb
jae
notb
inc
lret
sbb
cli
sbb
rorb
inc
xor
pushf
into
push
andb
adcb
xchg
and
sbb
cld
xchg
stos
add
mov
je
cltd
and
xor
sti
repz
push
insl
push
xor
adc
out
or
dec
pop
or
xor
inc
dec
push
mov
jno
sbb
dec
xchg
scas
data16
clc
lcall
adc
out
lea
insl
or
jp
in
pop
loop
lret
jbe
mov
jbe
inc
cmp
sub
mov
icebp
push
loop
inc
cmp
push
xchg
clc
repnz
ss
push
xor
push
add
int3
cltd
and
adc
fstpl
adc
dec
fildll
and
xchg
mov
inc
add
in
jl
cmp
loop
shlb
sbb
fistpl
test
test
sub
jg
push
enter
mov
pop
xor
jns
sbbl
aaa
aad
ror
in
cs
xchg
mov
nop
or
bnd
test
je
into
mov
jge
fdivr
dec
push
mov
testl
lret
loope
sub
or
and
or
inc
mov
mov
or
cmpsl
mov
into
shlb
aad
xchg
mov
sub
lods
nop
pusha
lock
movsb
mov
xor
outsb
lahf
movsb
fistl
jg
nop
in
sbb
out
out
test
adc
sarb
xchg
aas
pop
sub
add
xor
fcomp
cs
mov
out
pop
mov
push
fcmove
mov
outsl
int
sbb
fisttpll
shl
pop
ds
sbb
lods
pop
das
cmp
jne
jno
cmp
sbb
addr16
jge
std
inc
arpl
fsubl
add
movswl
call
sub
push
jmp
nop
ret
xchg
pushf
add
cwtl
and
inc
sub
push
pusha
or
aad
adc
test
sahf
mov
dec
imul
jge
xor
daa
pop
xorl
jbe
ljmp
mov
ffree
push
dec
dec
sbb
and
stc
dec
pop
push
ljmp
dec
test
lret
mov
leave
add
fs
sahf
test
mov
jnp
shlb
add
and
mov
aad
js
sbbb
popa
out
cwtl
data16
or
testb
xlat
lds
movsl
push
pushf
sbb
push
sbb
gs
add
push
jno
cld
outsl
pushf
iret
popa
dec
or
and
add
sub
push
and
fwait
jle
mov
lahf
aaa
adc
inc
pop
pop
inc
inc
push
scas
and
scas
dec
add
into
jl
jns
jp
pop
popa
sbb
cmp
adc
scas
sub
mov
push
out
or
arpl
xor
sub
test
dec
leave
insl
repnz
pop
hlt
pop
repz
leave
icebp
aad
jge
jbe
rorl
in
popa
bound
mov
gs
mov
cmp
shll
and
rorl
int
pop
sti
add
inc
push
push
dec
sub
add
push
daa
stos
and
mov
push
fucomp
nop
jp
or
pop
sbbb
imul
out
pushw
push
ficoms
push
jle
sarl
dec
data16
rcl
mov
xor
clc
sbbb
xchg
and
push
cwtl
clc
mov
fwait
popl
ds
or
mov
fildl
addl
sbb
cwtl
mov
aas
or
jmp
imul
loop
xor
aaa
mov
inc
popf
cs
jge
popf
mov
fbld
xchg
test
aaa
xor
ret
or
xchg
dec
test
sub
xor
popf
jns
mov
aaa
sub
adc
jbe
inc
call
out
stc
jmp
mov
adc
fwait
sqrtps
push
xchg
fs
cmp
loope
cmp
adc
cmp
mov
shll
or
ficoms
outsb
neg
cmpsb
sahf
fsubrp
je
xorl
mov
and
and
mov
jp
mov
xor
cmp
mov
jb
jae
lods
and
inc
scas
out
push
push
add
lret
cmp
fsubs
cltd
fildll
push
scas
lds
sub
ljmp
dec
mov
int3
dec
jno
ss
into
mov
xor
addr16
insb
push
push
movsl
inc
repnz
push
cli
xchg
mov
sub
out
fiaddl
cmpl
dec
test
mov
dec
xor
sub
cmp
dec
add
repz
test
jb
insl
das
push
cmc
sub
pop
rolb
test
pop
lods
push
bound
outsb
insl
dec
sub
pushf
outsb
mov
mov
pop
cmp
sbb
dec
call
sub
lock
out
inc
dec
pop
popl
ffree
repz
xor
mov
inc
je
adc
and
adc
push
sub
pop
ret
lods
adc
stc
mov
lret
xor
mov
fnsave
add
aam
test
xchg
orl
adc
nop
sbb
mov
dec
enter
test
sub
mov
and
pop
movsb
jp
xor
popa
jb
ret
lret
inc
pop
jns
or
mov
xchg
outsb
pop
fimuls
inc
or
int3
in
pop
outsb
adc
sub
imul
cwtl
mov
test
push
out
sbb
cmp
repz
inc
push
sbb
cltd
rcl
xor
lahf
mov
popf
in
cmp
test
inc
cmp
jnp
cmp
test
in
fisttpll
sahf
push
pushf
add
and
scas
sbb
fdiv
lock
cwtl
dec
scas
cs
lea
cld
cmp
ss
cmpsl
mov
xchg
mov
in
pushl
outsb
add
pop
dec
stc
inc
mov
cwtl
lahf
cmp
aaa
sub
fstpt
mov
aam
xchg
stos
cmp
pop
add
lea
fdivr
and
xor
rorl
cmp
mov
sahf
shlb
cmp
jmp
test
push
sub
andb
pop
popa
adcb
repnz
xchg
daa
jno
lock
add
cwtl
push
ds
mov
cmp
jo
fsubs
adc
dec
cmpsl
into
mov
ss
and
cmp
outsl
adc
lret
in
mov
pop
xlat
lock
aad
push
xor
push
sub
dec
jne
mov
lods
ret
push
loop
inc
xor
lahf
das
mov
cmpl
push
jl
mov
jmp
inc
mov
and
hlt
lahf
iret
nop
or
pop
scas
in
mov
popa
mov
hlt
sbb
xchg
rcrl
in
push
dec
inc
sub
cwtl
mov
fucompp
das
shll
pop
cmp
cmp
leave
popf
negl
jae
test
mov
cmpl
add
xchg
xchg
inc
fdivrl
push
inc
push
or
push
push
jg
ljmp
ficompl
cmpsl
cld
cmp
insl
ja
mov
sti
lock
orb
insl
or
cmp
call
jg
sbb
mov
sbb
shrb
sub
imul
hlt
lret
mov
test
push
add
cmc
xchg
sbb
clc
dec
mov
push
sub
gs
sbb
out
repz
sarl
aam
hlt
sub
mov
pushf
xor
push
lahf
xor
les
ljmp
add
jnp
lea
and
aad
push
inc
cmp
rorb
js
int
lret
push
push
js
xchg
rcrl
sahf
stc
sub
lret
int3
inc
dec
cmpsl
push
mov
pushf
mov
std
mov
xor
xor
test
mov
cmp
clc
js
add
push
sbb
dec
fdivl
ficoml
mov
cmp
jo
xchg
dec
inc
fwait
and
lock
push
les
and
mov
and
into
mov
in
add
fldenv
mov
loopne
mov
pop
or
or
adc
or
fwait
sbb
fadds
fistpl
add
xchg
inc
es
std
dec
cmp
stos
popf
andl
or
ss
aas
pop
in
push
cmp
dec
and
jae
fstpl
shrl
jmp
loope
add
popf
dec
add
rolb
mov
pusha
test
mov
inc
adc
cmc
je
and
cmpsl
insl
idivl
cmpb
and
lret
add
gs
xchg
cmp
adc
aas
sub
mov
sbb
and
push
push
hlt
dec
cltd
outsb
repz
shll
lods
ja
push
sbbb
push
mov
mov
xchg
mov
sbb
jmp
pop
loopne
cmp
repz
cmp
push
fsubr
and
cmp
fidivs
push
and
aaa
hlt
add
sub
push
pop
sbb
ss
popf
daa
mov
and
repnz
hlt
mov
jge
or
out
ret
insl
mov
loopne
sbb
jmp
out
mov
shr
sahf
sub
xor
test
leave
fsubl
inc
and
ds
jne
or
push
rcl
call
pop
push
dec
or
push
xchg
out
lods
cmp
fnstenv
lret
stos
adc
xor
push
xchg
fcmovnbe
jge
rcrb
rorl
xor
pusha
fsubrs
xchg
push
shl
les
mov
and
stos
movl
das
xor
sti
cmc
push
shrl
cmpsb
push
and
and
or
js
outsl
lahf
sbb
mov
pop
push
fildl
pop
push
ljmp
dec
sbb
cmp
or
cld
filds
lret
jns
leave
cmpsb
xlat
les
enter
jb
loopne
jle
fmulp
fstl
cltd
xchg
dec
loop
dec
daa
sbb
js
jge
lret
push
lock
jb
fwait
pushf
pop
cs
ret
mov
mov
pushf
dec
jnp
sub
lahf
and
aad
cmpsb
cmp
or
push
push
jo
lea
sub
pop
mov
mov
cmc
inc
andb
imul
outsb
bound
lcall
mov
mov
cmp
mov
mov
pop
dec
or
sbb
inc
movsl
rep
out
ss
dec
pop
xor
or
push
fcomps
xchg
enter
aad
subl
mov
negb
mov
test
fdivrl
dec
negl
addb
xchg
sbb
fldcw
aas
inc
xchg
repnz
xchg
xchg
cmpsl
or
jecxz
shl
add
out
loopne
inc
ret
jp
addr16
lods
xor
jecxz
fsubrl
add
test
addr16
jg
jbe
pusha
dec
in
cmp
fsubs
mov
jo
cmpsl
inc
xchg
mov
sub
add
aad
mov
ret
dec
loope
dec
adc
fldenv
push
pop
ss
cmp
sbb
rcll
out
mov
out
cs
pop
sub
xchg
fcomps
or
mov
aam
fdivrs
shll
imul
addr16
fsub
clc
das
je
cmpb
add
xor
push
jge
mov
xchg
lods
stos
inc
pop
movsl
fucomi
fbld
mov
fs
test
and
imul
lods
inc
mov
cwtl
mov
xchg
jge
lret
imul
ror
imul
mov
xor
adc
cmpb
pop
pop
adc
adc
jb
leave
sbb
int3
sbb
mov
cmp
outsb
and
pop
icebp
or
daa
jmp
test
hlt
pop
mov
sub
or
cltd
pop
jne
jb
xchg
ret
ret
daa
dec
repnz
andl
ds
dec
dec
mov
dec
or
pop
aaa
jne
arpl
enter
xor
cltd
arpl
stos
in
mov
xor
stos
mov
cmp
out
xlat
in
adc
and
stc
inc
cmc
roll
ficoms
push
cmpsb
loope
leave
clc
sbbl
inc
fldenv
xor
aaa
je
and
loopne
sarb
xlat
into
xorb
adc
sbb
fstps
int3
arpl
jae
sarb
lods
cmpsl
imul
inc
dec
mov
mov
imul
loope
and
xor
mov
xor
push
cmpsl
nop
mov
fwait
and
xchg
xor
sbb
xchg
call
sbb
mov
fcomps
mov
mov
shrb
loopne
std
fistl
jp
mov
lds
dec
sbb
pop
or
or
sahf
mov
cmp
push
add
cs
testl
scas
mov
sbb
fstpt
cmp
jl
ljmp
sti
push
jmp
mov
jecxz
clc
out
shlb
ffree
fsubs
pop
cmp
xchg
test
xor
or
pop
aaa
and
pop
int
xchg
decl
sbb
lcall
jnp
add
jb
xchg
sahf
mov
add
mov
ret
testb
into
jecxz
jl
push
cli
mov
int3
sahf
mov
lods
sbb
lea
jo
adc
movsb
sbb
popa
xor
mov
fs
xor
arpl
mov
and
in
lret
mov
bound
mov
sbb
sub
mov
mov
testb
ljmp
insb
sbb
imul
ja
push
or
nop
fildl
pop
loop
ja
push
pop
bound
out
mov
inc
sub
jmp
xchg
stos
jb
js
fdivrp
and
or
jg
ret
and
roll
xchg
iret
popf
dec
pop
push
mov
mov
add
push
cld
imul
mov
dec
inc
ret
hlt
addr16
std
or
arpl
ds
inc
lret
loope
xchg
inc
pop
sub
cmp
movsl
mov
leave
jmp
or
out
and
jg
sbb
sub
mov
mov
mov
xchg
pop
dec
push
push
rcl
xor
sub
dec
pusha
and
push
aaa
in
outsb
sub
aad
push
pusha
xor
fcomps
push
dec
push
jae
adc
mov
das
jmp
repz
xor
ret
xchg
into
orb
addr16
aad
js
jg
push
dec
adcb
cmp
pop
jo
mov
or
test
cltd
sbb
idivl
fimull
sbb
stos
mov
test
mov
jbe
push
push
cltd
push
mov
cmp
movsb
loopne
mov
xchg
fisubrl
and
loopne
adc
in
sub
and
subb
cmpsl
ja
popf
xchg
outsl
stos
popf
pusha
fidivl
xchg
cmpsl
addl
mov
lcall
aaa
int3
cld
daa
shll
rcl
es
mov
mov
mov
and
mov
stos
and
xchg
pop
fisubrs
dec
xor
pop
test
push
data16
insl
xchg
fisubl
push
dec
cmc
hlt
xor
fisubrl
ret
cmp
mov
cmp
dec
insb
in
lahf
test
pop
fsubp
stos
push
ror
repz
jle
lods
mov
pop
sub
dec
push
out
inc
pop
or
jo
stos
adc
sahf
dec
xor
mov
mov
call
inc
jecxz
iret
jp
scas
mov
mov
mov
and
pop
sbb
into
jbe
mov
or
cmp
push
fnsave
inc
jae
mov
xor
dec
int
adc
mov
cmc
push
aam
or
icebp
dec
sbb
xchg
addr16
mov
xchg
out
leave
stc
xlat
and
inc
inc
xor
inc
xor
in
fcmovu
fildll
dec
ret
clc
mov
cmp
repnz
mov
xor
xchg
sub
sub
jne
dec
loopne
pop
lret
gs
inc
cmp
push
arpl
adc
inc
imul
sub
xchg
lds
inc
lock
bnd
arpl
stos
sub
fstps
insb
sub
fstps
cmpsb
dec
ficoml
lahf
pop
cmpsb
sub
jnp
ljmp
mov
pop
cmp
popf
das
pop
sub
pop
mov
push
jbe
sbb
xchg
mov
ljmp
mov
aas
pop
stos
pop
les
arpl
sbb
and
dec
push
mov
stos
add
and
pop
and
int3
xor
out
mov
rcrb
lcall
jp
mov
mov
fbstp
jne
and
in
or
push
cli
inc
xor
leave
aam
push
mov
sti
inc
cmp
faddl
mov
and
xor
pusha
jecxz
sarb
movsl
xor
stos
cmpl
xchg
imul
out
test
jno
mov
pop
mov
pop
xor
inc
cmp
into
xchg
imul
test
dec
jl
mov
xor
hlt
xchg
xchg
adc
js
mov
outsl
dec
xorl
mov
loopne
dec
outsl
leave
push
adc
jmp
imull
inc
into
add
fldz
daa
jo
mov
mov
mov
cmpsb
in
cmpb
xchg
imul
and
inc
stc
jp
xlat
push
daa
mov
or
push
mov
mov
iret
jne
push
lods
negl
mov
jb
in
mov
jle
push
lahf
xchg
xor
test
test
rorl
mov
mov
push
lret
es
ja
aam
mov
cmc
outsb
les
dec
inc
mov
rol
scas
pop
push
dec
pop
cmp
popf
mov
loopne
mov
jecxz
lea
jl
out
cmpb
jbe
mov
test
and
sub
xchg
scas
cmp
jbe
sbb
in
jo
or
data16
pusha
mov
sti
es
test
adc
je
nop
push
push
push
push
or
negl
mov
clc
cmpsb
mov
jns
fwait
or
insb
addr16
mov
mov
pop
pusha
mulb
jle
rol
fs
cmp
inc
stos
cmp
and
fsubs
xor
inc
repz
mov
adc
mov
sub
adcb
push
inc
mov
loopne
stos
add
fsubp
icebp
nop
movsl
mov
mov
mov
es
scas
jb
pushf
movsb
mov
and
movsb
mov
cs
aam
test
push
aad
jns
jecxz
cwtl
das
ljmp
icebp
loope
adc
inc
sbb
and
and
loop
or
decl
movsl
dec
jns
js
leave
sub
adc
or
cwtl
sbb
popf
xor
mov
sbb
popf
in
pop
repz
sbb
fdiv
xor
sahf
sub
pop
fmuls
lret
out
mov
xchg
jl
les
fmuls
imul
js
outsb
and
xchg
icebp
stc
lods
mov
sbb
push
in
push
mul
fwait
or
add
jle
ret
dec
add
ret
call
or
xchg
lret
mov
sub
adc
mov
sahf
hlt
rcrb
pop
sub
daa
sub
jle
call
in
call
scas
bound
xchg
cwtl
pop
mov
adc
mov
jg
mov
add
mov
push
sbb
stc
mulb
ljmp
js
imulb
sbb
jno
pop
dec
dec
adc
movsl
mov
dec
les
xor
mov
jg
jns
mov
push
jbe
xchg
adc
mov
push
mov
cli
out
and
enter
cltd
dec
lahf
jecxz
inc
pop
xchg
sbb
xlat
inc
and
aad
add
je
aas
call
fmuls
sub
lods
aad
cmp
lea
mov
aam
ja
mov
les
inc
std
and
rolb
ja
sbb
stc
js
push
aad
mov
mov
push
push
ret
push
call
mov
mov
pushf
mov
pop
lahf
push
ss
and
das
inc
ds
cli
mov
or
ja
data16
mov
sbb
orl
inc
test
repz
push
rcl
mov
stc
sahf
daa
das
scas
loop
and
cmp
cmpsl
sbb
enter
sbb
inc
sub
aaa
dec
cmp
sbb
and
adc
push
add
adc
outsl
test
xor
push
jne
fiaddl
dec
out
lods
xchg
dec
sub
js
or
mov
cli
add
dec
or
sti
lock
aas
jl
fmuls
inc
lods
cwtl
adc
test
daa
jae
sarb
jecxz
push
test
xchg
jmp
pop
add
push
fs
lock
imul
and
adc
ret
stos
inc
xchg
xor
ss
xor
mov
jns
sbb
stos
cmpb
or
jecxz
notb
icebp
rcll
sti
sub
addr16
out
sbb
iret
lret
ljmp
addr16
mov
fildll
loopne
pushf
push
popa
dec
add
mov
jg
xchg
in
mov
mov
pop
icebp
push
repnz
jo
loop
popf
jge
xchg
jg
mov
popf
out
rorb
push
sub
push
xchg
lds
out
hlt
xor
int
adc
xchg
out
insl
and
sar
sub
lahf
outsb
or
xchg
fildl
out
add
out
pop
out
jnp
jo
or
jg
or
jne
xchg
add
scas
movl
in
test
push
jne
loop
in
cmp
mov
mov
insl
andl
rcl
bound
jbe
outsb
cmpsl
lds
xchg
cmpsb
pop
mull
les
xchg
out
cmp
popa
je
iret
fisubrl
pop
fidivrs
insl
mov
mov
outsb
fxtract
int3
bound
loop
js
neg
clc
sti
xor
push
mov
mov
or
xchg
scas
xchg
adc
xchg
repz
fcompl
mov
xchg
jnp
or
sub
into
scas
andl
pop
jle
in
out
adc
insl
icebp
negb
inc
lods
jb
addb
outsb
rorb
data16
xchg
cmp
mov
ss
loopne
mov
xor
mov
sti
mov
ds
out
addr16
jp
mov
dec
jp
mov
icebp
mov
popf
nop
add
in
push
inc
mov
cwtl
mov
and
int
aas
inc
fbld
sbb
adc
add
cwtl
loopne
and
push
xchg
call
adc
sub
push
in
mov
cmpsl
cmp
js,pt
mov
push
jmp
js
mov
adc
fbstp
faddl
je
int3
in
in
addb
push
mov
inc
mov
push
ret
jl
fisubl
cmp
push
jl
and
inc
repz
cmp
in
pushf
mov
fs
ror
test
rcl
pop
sbb
not
push
jg
mov
mov
pushf
cwtl
test
mov
mov
mov
cmc
mov
mov
ja
call
mov
or
fistpl
inc
in
test
sahf
ficomps
cmc
std
call
rol
lds
add
lret
jbe
push
push
cs
sbb
jo
push
out
mov
xlat
adc
pop
dec
sarl
dec
in
cli
out
mov
inc
bound
inc
dec
stos
les
cmp
inc
adc
jge
test
cld
cwtl
in
insb
sub
andb
imul
xchg
ljmp
push
test
xor
mov
in
movsb
pop
xchg
xor
sbb
js
fsubs
imul
cmpb
int
outsb
lock
add
jnp
popa
cmp
and
pop
dec
xor
leave
pop
sti
dec
cmc
out
pop
call
xchg
ja
out
hlt
lods
mov
leave
lret
mov
xchg
and
and
sbb
shrl
stc
sub
lret
aam
jge
ret
out
fwait
aas
decl
fldcw
fdivl
and
roll
pop
ss
cli
test
push
lods
push
into
jg
sbb
xor
cwtl
in
out
mov
testl
repz
call
test
cld
adc
lahf
hlt
inc
pushf
or
xor
push
ret
xor
rol
call
push
rolb
pop
fimuls
cltd
cwtl
lock
fsts
mov
into
push
mov
test
lahf
fsubrl
sub
stc
push
sti
cmp
jmp
xchg
std
and
or
popa
cmp
jb
mov
adc
daa
xor
stos
or
and
push
adc
rclb
push
sub
inc
push
data16
mov
mov
cltd
das
insl
inc
movsb
cmp
xchg
imul
cmp
test
mov
aad
sbb
mov
lret
imul
sbb
dec
aas
into
xor
add
sahf
mov
imul
sarl
in
jnp
mov
mov
lahf
push
pop
mov
jge
lds
mov
fstps
pop
sbb
loopne
bound
stos
dec
pusha
rclb
mov
mov
dec
out
arpl
jns
ja
pushf
dec
push
adcb
inc
jmp
jg
jg
xchg
sub
pop
xor
dec
lods
mov
or
mov
jo
fwait
dec
jp
test
adc
outsl
sahf
bound
and
dec
mov
in
or
sub
sub
jno
cmc
mov
add
rorb
sub
imul
mov
ds
ljmp
adc
and
sbb
xor
pop
jno
int3
loop
insl
inc
sbb
mov
and
cmp
adc
or
mov
lret
cmpl
std
adc
sub
jbe
inc
push
jno
clc
xlat
cwtl
test
sub
hlt
jp
xor
jo
sbb
in
xor
das
mov
fucompp
mov
add
jle
xchg
outsl
dec
fidivrs
mov
inc
add
popf
out
imull
jecxz
mov
jl
fdivr
mov
inc
mov
repnz
add
movl
push
shlb
loope
push
xchg
adc
lsl
aaa
mov
mov
in
popf
push
jns
dec
mov
xchg
mov
imull
xor
adc
lock
pcmpeqw
repz
or
push
add
jge
mov
inc
mov
mov
mov
fsts
sbb
sti
test
in
mov
sti
and
xor
mov
cmp
cwtl
jle
or
push
pusha
int3
cmpsl
mov
fsubp
in
imul
push
js
pop
je
and
lods
jo
mov
mov
mov
in
iret
and
mov
les
sbb
adc
leave
jbe
jecxz
mov
ret
mov
and
stos
fstl
and
inc
mov
mov
sbb
ja
ja
ljmp
xorb
jl
or
shlb
inc
mov
subl
push
loope
in
bound
cmp
in
cmpsl
je
mov
push
jg
jo
fidivrl
xchg
gs
xchg
ret
cmp
fdecstp
lcall
pop
lret
cmp
mov
shlb
fs
sahf
add
pop
popa
xchg
push
clc
lahf
add
loopne
cmp
rorl
jb
sub
hlt
aas
jmp
pusha
inc
dec
xchg
xchg
int
movsb
inc
push
repnz
push
cltd
sbb
sbb
mov
lods
pop
rcrb
mov
sar
push
loope
push
adc
fistpl
jg
mov
dec
incb
int
push
insl
mov
out
icebp
cmp
add
js
cmp
cmp
insb
ljmp
add
jno
rcr
jecxz
mov
dec
sbb
push
mov
adc
pop
mov
or
mov
ret
adc
jbe
xchg
loopne
xchg
sahf
push
mov
pop
pushf
sbb
jmp
lods
cmp
in
jecxz
mov
lods
pop
notb
shl
aad
add
add
fstp
ss
lcall
bound
mov
shrl
jno
dec
pop
cmp
in
push
push
rolb
jmp
out
call
push
pop
mov
adc
in
xchg
xchg
aam
or
and
rol
inc
in
insb
jns
shr
xor
loop
stc
cmp
into
push
jl
xor
adc
fidivrl
loope
lds
test
shlb
fdivrl
mov
scas
sub
shlb
pusha
bound
jle
and
cmp
lods
je
subb
add
mov
icebp
jnp
fdivr
lods
ss
mov
arpl
xchg
loopne
cmpb
jmp
mov
xorb
sbb
jecxz
addr16
loop
jecxz
std
repz
jmp
mov
add
mov
lcall
lock
shll
and
adc
shll
lret
cmpsl
mov
lods
dec
shlw
jo
jge
mov
subb
mov
add
cwtl
pop
pop
cmp
and
mov
pop
pop
je
add
roll
mov
fistpl
or
xchg
sbb
iret
sbb
fdivrs
nop
pop
sub
test
or
mov
jno
and
rorl
test
mov
and
xlat
mov
pop
imul
cmc
jae
ja
pop
cli
xor
fld
pop
dec
mov
sbb
adc
inc
mov
gs
test
rcrl
mov
addr16
dec
sub
mov
les
insl
divl
cmpsl
ss
dec
outsl
rclb
add
hlt
add
ret
les
pop
jge
add
sbbb
sbb
mov
leave
adc
cmpl
jg
loop
stc
sub
push
cmp
or
hlt
lea
jbe
enter
xchg
testl
sbb
xchg
pop
push
into
jo
pop
and
dec
jnp
inc
or
cld
jae
inc
xchg
imulb
fidivl
or
roll
mov
scas
arpl
arpl
pushf
add
pop
ds
ja
add
ret
cmpsl
lcall
and
in
test
movsb
xor
jns
and
cmp
lods
cli
outsb
movsb
xchg
mov
imul
xchg
scas
mov
mov
mov
cmp
lcall
mov
loopne
jmp
sub
add
or
mov
and
xchg
inc
sbb
sahf
out
xor
in
subb
xchg
test
dec
and
outsl
xor
jecxz
xor
hlt
inc
mov
rorl
mov
mov
push
or
jns
data16
mov
mov
add
pop
in
xchg
pop
cmp
leave
push
cmp
mov
lret
jmp
imul
jbe
xorl
and
lea
and
fimuls
add
cmp
daa
pop
add
xchg
ljmp
and
loopne
mov
sbb
xchg
and
xchg
push
push
popf
dec
imul
je
push
mov
std
rcll
dec
fsubrs
outsb
add
or
or
and
cs
bound
sbb
stos
pop
sbb
aaa
int
pop
mov
out
test
arpl
je
es
sbb
lret
cltd
add
push
or
xchg
dec
xchg
fdivrl
pop
xchg
hlt
insb
jbe
or
jmp
mov
jno
inc
and
pop
push
pop
aad
cmc
mov
or
sbb
popa
dec
ljmp
add
jnp
add
cwtl
repnz
mov
notb
mov
icebp
and
std
lret
jne
test
add
gs
xlat
sub
arpl
aas
push
push
in
aam
stc
sbb
add
adc
js
cmp
test
inc
shlb
stc
pop
cltd
pop
popf
jge
xchg
mov
push
sub
cmc
dec
inc
sbb
insb
imul
and
dec
sbb
fists
sbb
cmp
jns
rcrl
mov
and
push
fldcw
cltd
lea
mov
imulb
pop
lret
inc
xor
push
fisttpl
pop
and
iret
mov
jg
imul
hlt
je
sub
and
mov
sti
fs
mov
jmp
clc
push
out
cmp
mov
cmc
fldenv
mov
inc
mov
push
insb
test
mov
xchg
add
mov
cmp
mov
loop
mov
sti
and
pop
pushf
mov
call
repnz
jo
lcall
cmp
subl
dec
jg
or
mov
pop
rol
lods
cmp
xlat
lret
insl
ss
inc
pop
scas
loop
sbb
cmp
xchg
xchg
adc
mov
je
push
pop
fnstsw
testl
fstp
jl
sub
fidivl
clc
cmp
mov
add
insb
es
jp
or
lahf
jnp
jp
iret
je
std
ss
out
xor
or
fcomi
mov
gs
dec
adc
mov
xor
cmp
xor
cmc
mov
xor
pop
lds
jns
sti
jmp
jg
push
inc
lea
jbe
jl
inc
jns
pusha
cld
dec
in
or
in
mov
addr16
iret
lea
stos
mov
adcl
nop
dec
loope
aam
mov
sbbb
sub
sub
inc
scas
test
hlt
rcl
sahf
jno
icebp
aas
mov
jno
aam
mov
pushf
xchg
std
std
in
lods
mov
and
imul
mov
adc
push
sub
push
cmp
mov
lcall
or
jle
inc
mov
stos
scas
add
es
mov
fnstenv
cmp
fbstp
cmp
aad
fwait
ret
mov
gs
icebp
dec
enter
movsl
and
or
xor
scas
xchg
mov
shlb
cwtl
in
adc
xchg
orl
enter
aaa
xor
sub
aas
iret
pop
and
fdivrl
lods
and
dec
add
mov
jo
cmp
mov
xor
cmp
inc
pop
mov
mov
lahf
push
es
fwait
inc
xlat
daa
pop
gs
mov
cmp
sub
imulb
and
mov
cmp
sub
js
into
in
mov
dec
sbb
ret
cmp
jbe
rcrb
jl
shr
rcrb
mov
push
jecxz
repz
xor
sub
add
dec
scas
fstl
dec
push
aas
xor
mov
cmc
mov
or
sub
ljmp
xchg
xor
inc
stos
cli
pop
testb
or
loopne
and
insl
inc
mov
inc
jae
or
xchg
xor
push
call
scas
xor
jecxz
data16
cwtl
in
in
dec
mov
adc
pusha
test
xor
inc
filds
pop
and
sbb
popf
jl
subl
aas
ja
jae
js
jb
mov
jno
sarl
jns
outsb
or
mov
dec
or
sbb
mov
add
xchg
sti
cmp
mov
pop
mov
pop
mov
pop
sub
dec
mov
cmpsl
fisubrl
lret
jns
call
and
loope
mov
sbb
mov
fildll
mov
jne
xchg
jg
ret
push
xlat
nop
daa
sbb
jns
icebp
and
cmp
xor
sbb
out
cmp
into
rcr
mov
sub
lock
cmpsb
fwait
push
jbe
popa
mov
mov
cwtl
mov
xchg
scas
sub
inc
sbb
push
xor
aas
out
push
mov
ds
sahf
scas
or
popf
aad
sbb
xchg
mov
divb
aaa
repz
sbb
add
rorl
loop
dec
lea
addb
mov
fistpl
lods
stos
fildl
jae
in
adc
stos
mov
push
push
dec
inc
or
int3
scas
or
fistpll
push
mov
add
int3
sub
pop
jo
sbb
cmp
cmpsb
mov
call
imul
sub
icebp
js
fimuls
andl
test
in
pop
outsb
jle
lahf
xchg
cmp
adc
sub
push
shr
shl
ret
iret
sbb
adc
mov
jl
addb
xchg
fisubrl
dec
dec
mov
jg
rclb
retw
and
mov
data16
scas
dec
sbb
fld1
mov
ja
ljmp
sub
lcall
lods
sub
testl
adc
mov
sbb
xor
pop
lret
jge
or
mov
jnp
insb
xor
and
sub
nop
lret
push
outsl
sbb
inc
cmp
fimull
adcb
stc
push
les
sbb
push
in
sub
or
stc
pop
push
imul
pop
cmp
rolb
std
xor
pop
adcl
aas
mov
jbe
inc
mov
std
inc
insl
pop
fs
int3
mov
scas
lea
divb
mov
push
push
mov
push
inc
dec
mov
xlat
je
popa
dec
push
imul
pop
add
lock
loope
cltd
pop
out
mov
push
jo
mov
cmp
sub
xchg
sbb
repz
cmp
ja
xchg
sub
gs
cmp
mov
mov
cli
inc
leave
fists
dec
insb
mov
aaa
shll
push
push
fldt
frstor
ljmp
mov
jne
mov
cs
in
fldcw
sarl
addr16
sbb
pop
fldenv
das
push
add
adc
jge
xchg
in
punpckhbw
aam
pop
hlt
outsb
nop
mov
and
and
popf
jmp
fildl
mov
sbb
jecxz
sub
iret
or
push
ja
jo
mov
clc
mov
mov
push
jb
jae
adc
cmp
pop
cmp
fcomi
mov
loopne
fsubs
and
into
shll
pop
loope
repnz
adc
xchg
mov
inc
push
pop
dec
call
inc
or
dec
push
test
sub
adc
adc
cmpb
cmpsl
sbb
rolb
je
mov
lock
push
stos
test
je
push
mov
sahf
mov
and
mov
mov
xchg
pop
out
stc
pop
or
rorb
pop
lock
push
iret
addb
or
push
mov
inc
es
or
jmp
sbb
test
scas
repnz
das
mov
nop
dec
js
cmpb
and
sbbl
pop
movsl
lods
icebp
stc
mov
sahf
loopne
cmp
mov
lds
pop
xchg
mov
stos
fcomps
push
ret
subb
pop
enter
xchg
int3
or
push
scas
loopne
sbb
fmuls
or
in
pusha
xchg
dec
add
repz
push
mov
and
and
sbb
loopne
sbb
pop
and
or
test
inc
or
sarb
repnz
cmp
xor
dec
xchg
add
aad
inc
jl
adc
or
add
movsb
repz
addr16
and
loopne
iret
scas
into
lcall
xchg
dec
inc
jbe
in
lret
sbb
movsb
loop
iret
inc
sbb
pop
pop
fsubs
jmp
sarb
pop
mov
in
pop
in
xchg
dec
fdivp
lock
repnz
adc
sbb
add
mov
mov
adc
icebp
sub
fimuls
scas
mov
fsubp
xchg
rorb
mov
push
cld
aad
mov
insl
enter
push
pusha
icebp
pop
sbb
or
or
addr16
and
or
sub
push
aas
dec
mov
fwait
inc
cmp
aam
cmp
pop
jae
ds
rclb
cmc
jge
ficoms
push
xor
fists
iret
mov
ficoml
gs
mov
jae
aaa
lds
push
cmc
inc
sub
xchg
jmp
xchg
mov
and
nop
ret
pop
enter
sti
sub
aad
lds
ja
dec
mov
mov
pushf
daa
repz
xchg
mov
hlt
push
stos
leave
sub
xor
pop
or
fwait
mov
sbb
shl
xchg
inc
andl
in
dec
adc
les
lea
xchg
sub
sbb
push
jge
imul
outsb
movsl
inc
loopne
xlat
add
jo
push
or
out
jb
insb
dec
push
xor
and
mov
inc
mov
mov
sahf
sbb
subl
lret
mov
sti
cmpsl
pop
call
lret
mov
inc
jge
xorb
daa
inc
cmc
pop
sbb
cmpsb
pop
or
hlt
fmuls
shll
pop
push
ljmp
cmpsl
mov
loopne
xor
in
xchg
stc
push
xor
cmp
adc
xchg
xor
movsb
or
jb
mov
xchg
inc
cmc
push
push
daa
sahf
stos
and
or
sbb
cli
xchg
xchg
es
cmc
pushf
shl
pushf
xlat
pop
das
imul
sub
dec
mov
add
mov
inc
pushf
je
pop
js
add
adc
fistpll
add
ja
mov
aas
jb
jbe
aad
xor
mov
stos
dec
dec
adc
mov
test
add
pop
rorb
mov
fwait
pusha
xor
sbb
sti
int3
nop
mov
repz
sbb
clc
daa
xor
dec
adc
push
mulb
test
pop
out
push
pushw
insl
sar
mov
sbb
and
mov
adc
divb
clc
aam
mov
jne
sti
call
pop
mov
inc
aas
loopne,pn
insl
jae
adc
clc
mov
sbb
pop
cmp
repnz
arpl
pop
das
data16
inc
push
mov
lcall
xor
popf
icebp
xorb
sbb
adc
insb
mov
xchg
int3
inc
pusha
and
mov
mov
test
arpl
int3
mov
mov
pushfw
inc
out
adc
pop
or
popf
sahf
movsb
fidivrl
in
lock
movsb
mov
cmc
lret
push
mov
add
pop
jl
sahf
fsts
out
adcl
lea
ss
push
call
fbstp
xchg
dec
push
loopne
cmpsl
sbb
dec
mov
mov
cmp
sub
negl
mov
cmp
scas
inc
xor
and
in
fcoml
mov
imulb
dec
xor
dec
adc
arpl
add
and
or
push
sub
mov
lcall
mov
bound
mov
loop
inc
out
add
bound
je
mov
and
jo
aaa
or
cwtl
jbe
push
in
pusha
pop
push
sbb
mov
cmpsb
in
test
mov
test
or
movsb
add
insl
out
push
mov
sbb
xor
adc
and
adc
or
push
and
test
add
push
mov
cmp
and
lret
sbb
add
mov
dec
xor
fstps
push
cltd
jecxz
in
andl
data16
push
jge
xor
cmp
mov
and
pushf
push
push
cltd
outsl
icebp
inc
lea
ror
movsl
inc
jae
mov
call
imul
jbe
xor
or
cmp
xlat
mov
dec
sbb
mov
enter
fsts
jg
out
in
adc
mov
sub
bound
dec
pop
stc
jmp
hlt
fsubrs
xchg
cmpsl
mov
mov
jg
in
cld
sub
inc
adc
add
insb
faddp
shlb
out
in
imulb
cmpsl
adc
filds
sub
test
in
sub
imul
sahf
repz
mov
add
daa
jbe
lret
mov
inc
pop
xchg
mov
repz
std
mov
mov
std
or
push
das
aas
out
out
inc
mov
andb
mov
lds
sbb
fadd
fldl
std
and
roll
push
jl
mov
sarl
out
sbb
push
inc
xchg
jmp
mov
push
aam
cli
push
int
scas
xor
movsl
bnd
sarl
sti
mul
and
sbb
push
xchg
mov
jmp
xor
insb
jp
jno
aad
ljmp
insl
jp
imul
mov
std
push
loopne
mov
mov
xor
addr16
out
sub
push
inc
cmp
push
mov
mov
and
jns
jmp
and
jmp
xor
push
adc
iret
xorb
stos
insl
hlt
inc
fiadds
xchg
loop
lahf
lret
in
fildl
rol
add
mov
insb
inc
iret
stos
jns
movsb
push
push
ljmp
or
push
scas
sti
imul
mov
aaa
mov
mov
jl
mov
addb
push
int
adcb
data16
movsl
das
inc
aad
test
or
repnz
ds
or
adc
stos
sub
sbb
arpl
sbbl
inc
jp
sbb
lea
daa
add
mov
in
jg
je
movsb
ja
ss
inc
imul
mov
push
ret
fnstenv
sub
shrl
int3
sbbb
cmp
lret
lock
pop
testb
mov
gs
jecxz
or
add
adc
mov
lahf
es
repz
or
push
pop
out
cli
xchg
jp,pn
sbb
inc
aam
pop
sub
es
pushf
mov
stos
int3
push
xor
out
int3
ljmp
xor
sbb
and
jl
add
stc
movsl
test
aad
fcoms
out
nop
sbb
imull
repz
xchg
sbb
dec
outsb
cmc
add
cmp
sub
and
stc
xor
arpl
ss
xchg
mov
adcb
sub
mov
cltd
mov
in
xchg
sbb
add
fbld
int
jne
add
pop
pop
call
andb
in
fistps
es
cmp
mov
dec
jecxz
in
and
dec
or
mov
pop
xchg
sahf
mov
mov
insb
inc
in
pop
xchg
sub
dec
inc
push
test
ja
add
cld
mov
mov
movsb
add
filds
call
pop
cmp
sbb
cltd
pusha
insl
or
xor
xchg
call
repz
fidivl
mov
pop
dec
push
aam
push
jae
bound
std
scas
xor
cmp
mov
mov
fldlg2
sahf
or
and
test
shl
push
cmp
sub
cmp
scas
inc
xor
lods
or
loopne
das
sbb
out
cwtl
pop
adc
int3
or
cmp
mov
lahf
inc
dec
or
js
fmuls
push
mov
or
and
or
dec
les
dec
inc
lret
sbb
push
cld
adc
test
sub
pop
imul
or
ja
ss
ret
mov
data16
dec
lret
movsl
cmpsl
mov
push
cltd
or
shlb
mov
add
jae
scas
jb
inc
push
xchg
add
mov
jnp
adc
xor
ret
sbb
jecxz
es
pop
je
xor
fisubs
fisttpl
in
mov
cmp
sbb
push
or
push
cmp
sbb
cltd
adcl
imul
loop
scas
mov
xor
insl
and
icebp
add
ja
hlt
lret
int3
loope
cmp
js
ja
aad
insl
leave
movsb
xchg
push
or
nop
dec
rorl
or
call
jle
ret
push
pop
movsb
mov
hlt
jae
xchg
mov
inc
popa
sub
movsb
jge
scas
ljmp
loopne
xor
icebp
int
lret
icebp
pop
dec
loope
sbb
popf
push
mov
add
ss
cwtl
rcl
pop
cmp
add
lret
sbb
mov
adc
jns
mov
mov
pop
test
dec
aad
nop
mov
jnp
inc
push
cmp
stos
mov
in
rcll
divl
xchg
xor
fldcw
mov
jle
mov
ljmp
push
jne
jl
lcall
lock
std
sahf
xchg
and
mov
stos
jnp
mov
data16
enter
push
mov
loope
lods
and
call
xchg
adc
aam
xlat
setge
add
shll
xchg
push
add
mov
scas
sbb
adc
xchg
push
and
push
sub
xchg
mov
ffreep
mov
jmp
lea
add
push
jl
sub
sbb
mov
gs
in
lcall
xchg
fldcw
clc
mov
jno
or
dec
out
out
xor
lret
xlat
mov
test
test
mov
ficoml
pop
push
mov
mov
sarb
pand
inc
cs
ds
ljmp
int
mull
sbb
rorl
addb
jle
xor
adc
repnz
stos
and
outsl
push
test
dec
lods
shll
push
push
pop
sbb
or
jle
lret
jo
dec
gs
lret
pushf
cmp
popf
jecxz
jae
adc
shll
mov
push
xchg
cmc
clc
out
insl
pop
fsubp
cld
pushf
mov
xchg
or
aad
pop
inc
jge
sub
xchg
mov
mov
loop
jg
rcr
sahf
jb
add
lret
dec
mov
fimull
dec
xchg
mov
mov
testb
jb
repnz
hlt
add
in
pop
fldenv
add
cwtl
and
or
xchg
je
popa
aaa
mov
jbe
and
xchg
xchg
loop
fistl
add
jno
adc
add
or
or
pop
int3
adc
xorb
pop
sub
rclb
inc
mov
mov
aad
pop
fidivrs
insl
mov
or
lods
inc
push
push
sub
jge
sub
lock
or
mov
or
inc
sbbb
mov
cltd
pop
sbb
insb
mov
lods
mov
cmp
into
jp
push
add
push
gs
jno
in
stc
js
mov
lcall
out
out
add
mov
in
or
push
xchg
fiaddl
shrl
push
xor
fisttps
xor
cmp
cltd
mov
xchg
sbb
stos
dec
cwtl
xchg
jg
or
sub
pop
or
movsl
push
mov
cmp
jg
test
out
repz
xor
jnp
jno
ljmp
negb
push
fistl
repz
mov
pop
insb
cmp
lock
mov
imul
out
jne
xchg
jmp
je
mov
cmp
mov
test
imul
aad
daa
or
or
sbb
arpl
hlt
lock
fwait
sub
add
sahf
and
or
lret
mov
popf
inc
jge
sub
add
fs
das
test
lahf
add
outsb
adc
stos
inc
jle
in
inc
cltd
push
cwtl
fistl
pop
mov
bound
xchg
mov
int
mov
push
or
cmpl
pushf
add
test
mov
and
les
pop
or
dec
add
test
movsb
xlat
fcoms
cmpsl
and
push
std
ja
lret
aas
push
mov
ds
shrl
push
cmp
cwtl
scas
mov
jp
pop
inc
or
jb
lea
cwtl
les
testb
ss
int3
or
inc
add
iret
fildll
jae
popa
int
aas
or
mov
mov
leave
call
test
cltd
xor
adc
movsl
jb
push
push
pop
jg
int3
mov
jo
adc
sbb
ret
cld
xchg
push
rcll
sbb
adc
ret
cltd
arpl
repnz
jecxz
in
xchg
mov
dec
mov
loope
sbb
add
test
cmp
mov
push
hlt
hlt
mov
es
bnd
addr16
and
sbb
inc
mov
push
scas
lock
in
push
mov
movsl
sub
add
inc
pop
nop
and
inc
inc
leave
popf
aad
and
cmp
out
mov
loopne
mov
sbb
add
lds
pop
and
fwait
cld
test
lret
popa
in
cmp
inc
pop
ret
lcall
adc
stc
pop
jns
push
fcoml
push
stos
inc
mov
or
pushfw
pop
inc
jnp
pop
cmc
and
es
sahf
inc
cwtl
addb
push
mov
and
sarb
mov
js
in
xchg
dec
das
das
fs
int3
in
ret
js
mov
push
jne
ret
push
sbb
push
lahf
sbb
divb
cmp
je
mov
push
aas
push
push
push
pusha
jg
insl
sar
pop
insl
sbb
test
mov
sub
xor
aaa
xor
insl
popf
push
push
add
or
stos
movsl
fidivs
les
fisubl
jb
cltd
mov
or
mov
jmp
pop
and
enter
mov
cmp
loope
fiadds
add
mov
movb
and
dec
sti
add
jae
adc
jne
les
dec
je
pop
mov
cmpsl
jbe
jp
xchg
jne
sbb
fsubr
xchg
mov
xchg
sbb
pop
adc
jp
mov
stos
jbe
add
daa
sub
sti
in
xor
mov
or
push
and
stos
je
pop
loopne
xor
lods
cld
test
inc
dec
bound
mov
scas
lods
or
arpl
cltd
jp
pop
dec
xchg
push
xchg
cmp
movsl
and
pop
movb
dec
cmc
imul
inc
movsb
cmp
cmc
and
xchg
mov
mov
push
lret
or
pop
jle
incl
insb
mov
xchg
popa
sub
add
inc
inc
sbb
push
inc
clc
xor
daa
cmc
sbb
loop
daa
cli
cmp
jg
lret
push
sub
inc
cmpsl
mov
mov
clc
sub
mov
lea
mov
xlat
dec
push
cs
inc
inc
fbld
inc
or
test
fwait
push
imul
push
cmpsb
sarb
xchg
xor
rcr
pop
and
adc
arpl
inc
lock
orl
xor
or
rcrb
adc
ret
and
pop
sub
hlt
repnz
dec
xchg
mov
sub
xlat
pop
sarb
fisttpl
insb
jb
loope
xchg
inc
pop
mov
stc
inc
mov
xchg
mov
dec
je
cmpsb
push
std
leave
mov
jnp
es
and
pusha
push
push
ret
scas
add
add
test
dec
shll
scas
push
cmp
jns
insl
mov
jno
ja
and
xor
adc
lods
mov
pop
and
sub
pop
push
sbb
or
out
std
sub
aad
mov
das
lods
cs
dec
out
in
pop
mov
daa
and
cmp
rcrl
adc
xchg
add
rcll
push
divl
js
adc
rorl
sbb
mov
pusha
xorl
lea
pop
xchg
mov
cmpsb
add
pop
mov
arpl
fs
hlt
mov
sbbb
lahf
leave
lret
inc
icebp
frstor
mov
mov
loop
and
shll
cwtl
mov
fildll
lds
jns
sbb
outsb
icebp
add
icebp
mov
imul
or
fs
mov
push
push
cmpsl
bound
push
repnz
fcmovnu
ficoms
and
das
clc
mov
test
dec
mov
inc
pop
out
mov
and
in
jns
cltd
pop
mov
mov
out
cli
mov
pop
nop
loope
icebp
sbb
adc
adc
dec
cmpsb
cwtl
je
repnz
lock
xchg
fisttpl
cmp
movl
dec
das
std
cwtl
push
out
scas
pushf
icebp
xchg
sub
mov
stc
in
cmp
les
add
xchg
jns
fsubl
jecxz
imul
dec
sub
sub
movsb
sub
sub
xor
inc
lods
sbb
icebp
xor
inc
nop
test
jl
dec
cmc
mov
out
adc
out
jp
in
out
push
add
pop
out
adc
mov
fs
dec
pop
dec
insl
adc
cmc
push
addr16
mov
pop
movsb
and
outsl
add
ljmp
lahf
mov
sbb
and
pop
sbb
scas
mov
cwtl
pop
std
int3
or
shrb
je
loopne
fwait
pop
pop
xchg
pop
sbb
mov
inc
ret
repnz
xchg
dec
jmp
mov
adcl
xorl
cmp
or
push
push
cld
scas
mov
pop
inc
bound
setae
cmpsb
fwait
mov
test
sti
sbb
in
adc
jecxz
fwait
cli
cwtl
sbb
xchg
or
adc
pop
icebp
nop
mov
push
pop
out
stos
sarb
push
shrl
mov
add
adc
pop
aam
test
pop
and
in
xchg
aaa
dec
daa
repz
ds
sbb
cmp
sub
stc
pop
push
jge
test
sbb
sub
popf
xor
fsts
sbb
cmp
cltd
hlt
out
adc
hlt
mov
cmp
jo
adc
push
aad
in
add
leave
push
push
loopne
das
push
cmp
pusha
sbb
mov
mov
pop
mov
outsb
pop
je
or
imul
adc
nop
or
and
fnstsw
or
or
pop
sub
cmpsb
popf
mov
test
sti
stc
add
mov
cmp
jae
or
ret
jl
jge
cmp
lds
aad
xchg
cwtl
icebp
lahf
or
push
mov
mov
xchg
inc
inc
push
cmp
jae
xchg
pop
lahf
out
pcmpeqw
xor
mov
andl
imul
mov
bound
lods
orl
cmc
sahf
mov
lret
cmp
out
inc
insl
int
jbe
inc
cwtl
clc
adc
sbb
add
xor
xchg
sub
data16
data16
aas
pushf
ret
das
jmp
or
imul
mov
xlat
divl
dec
data16
jb
cmp
sub
mov
idiv
fcompl
push
push
test
xchg
loope
mov
adc
jne
lods
ficoml
or
sub
jg
call
xchg
mov
dec
fsub
dec
hlt
mov
xor
loop
xlat
push
jne
pop
test
xchg
hlt
shl
cltd
adc
popf
adc
mov
bnd
test
andb
xchg
ret
and
enter
xor
mov
or
and
push
enter
push
mov
adc
mov
xchg
pop
stos
cltd
gs
movsb
mov
loopne
jg
repnz
mov
sbb
test
je
rol
adc
scas
jl
push
lea
ja
clc
sbb
outsb
std
xor
imul
xchg
push
jp
mov
cwtl
imul
sarb
cmp
sub
jbe
je
push
cmc
scas
imul
mov
das
sbb
cmp
jmp
xor
rolb
negb
cmpsb
or
xor
iret
cmp
aas
xchg
arpl
add
push
cmp
lock
cmp
int3
jecxz
outsl
shrb
sub
xchg
rorl
ds
push
cmp
cli
add
sbb
fs
pop
stos
mov
loope
cmp
out
lds
pop
sub
call
lahf
pop
sub
js
daa
pop
cltd
jno
data16
adc
jb
clc
inc
out
test
je
dec
pop
mov
push
jae
into
jo
xor
pop
and
insb
mov
jno
mov
jbe
bound
aas
sbb
xor
mov
inc
xchg
aam
xor
mov
rcrl
aaa
adc
lahf
stc
ljmp
sub
flds
cld
fs
into
ret
push
or
imul
in
push
lahf
pop
hlt
sbb
and
dec
sub
ret
add
xorw
cmpsl
aam
pop
and
out
rclb
mov
movsl
jb
lret
or
cmpsb
loopne
xor
mov
cmp
scas
pop
test
inc
sar
ds
cmp
pushf
lret
enter
sbb
testb
mov
lahf
and
jae
jb
mov
adc
lret
dec
stos
mov
dec
sbb
imul
push
outsl
and
dec
sbb
test
pop
mov
lahf
and
add
jb
out
stos
push
into
loop
jnp
pop
lods
sub
shrb
push
es
pop
and
or
rol
aas
jne
sbb
dec
sub
push
mov
sahf
sahf
test
cld
cmp
push
test
dec
js
cmp
jbe
sub
aaa
pop
das
out
into
push
jb
data16
insl
jp
movsl
xchg
mov
pop
mov
fwait
out
add
test
ret
stc
rorl
sbb
or
sbb
lahf
jmp
shlb
mov
pushf
pop
adc
dec
imul
mov
sub
pop
mov
pop
adc
hlt
ret
movsb
fsub
pushf
jge
pusha
dec
xchg
hlt
fcom
in
in
ss
filds
pop
arpl
push
and
test
add
inc
pop
lds
call
push
jl
shll
jp
xchg
inc
imul
adc
in
cmp
xor
lea
mov
pop
add
pop
pop
push
mov
and
cmc
sbb
test
and
add
inc
jl
inc
out
cmp
dec
outsb
jecxz
nop
mov
out
inc
lods
mov
dec
push
inc
lahf
icebp
mov
loop
aaa
fbstp
ret
xor
jb
pop
push
xlat
insl
aas
repz
inc
sub
push
sbb
adc
test
inc
sub
pusha
insb
xor
sub
sub
lds
mov
shll
cmp
adc
push
inc
sbb
jne
ret
pop
popf
stos
jp
sbbb
jle
insl
sub
or
push
scas
mov
or
mov
or
loopne
leave
inc
cmp
gs
daa
pop
dec
xchg
mov
xchg
add
cli
inc
adc
adc
sbb
jge
push
sbb
push
popfw
pop
repnz
mov
bound
cli
sti
lahf
aas
xchg
xor
xchg
int3
cmp
mov
adc
mov
adc
sti
mov
mov
jle
jns
or
stos
shrl
xor
push
cld
adc
and
xor
dec
outsl
dec
sub
push
fwait
outsb
out
sbb
jecxz
repz
cs
ljmp
mov
inc
dec
addr16
outsb
pusha
xchg
xor
xchg
mov
or
nop
fmul
arpl
dec
stc
mov
cmpb
stos
sub
popf
lods
xchg
inc
and
xor
stc
lods
jmp
negb
jmp
inc
sbb
sbb
mul
cld
xchg
push
cmp
mov
xor
arpl
out
push
push
adc
scas
stos
cmp
fld
add
push
xchg
adc
or
ja
xchg
fldt
cltd
mov
mov
pop
in
movsb
ret
jp
mov
push
fs
pusha
or
cmp
adc
les
ret
push
outsl
sub
dec
inc
inc
lret
testb
lock
push
cmp
jl
dec
jbe
mov
movsl
xchg
or
dec
addr16
inc
cmpsw
filds
xor
or
fs
adc
pusha
div
push
dec
add
inc
mov
daa
push
inc
lods
mov
jge
int3
hlt
jmp
adcb
fwait
insl
xchg
jb
pop
ss
sub
mov
inc
scas
fcoms
jmp
scas
mov
mov
inc
xchg
outsb
dec
mov
mov
xchg
test
push
addr16
inc
pop
sahf
nopl
sub
movsb
loopne
int
outsb
lock
mov
jne
call
jmp
add
je
into
test
jl
int3
push
pop
imul
daa
xchg
int
sbb
fstl
jmp
in
push
sbbl
xchg
and
test
jge
jp
repnz
movsb
jnp
movsl
push
movsl
pop
cltd
int3
lcall
outsb
push
mulb
stos
add
push
addr16
mov
or
inc
adc
dec
fbstp
int
or
mov
bound
pop
movsl
jne
jge
bound
movsb
ja
sbb
pop
repnz
or
xor
sbb
mov
adc
insl
dec
aaa
daa
mov
push
push
mov
sbb
fistl
jle
ret
fsub
loope
cmp
inc
add
jecxz
or
rcrb
dec
xchg
cli
inc
lods
stos
ljmp
int3
lret
xor
inc
fisubrs
stc
cmp
data16
nop
das
gs
pop
sub
cmpsb
ss
scas
cld
push
pop
xor
popa
dec
push
sbb
pop
enter
mov
cld
cli
shrl
pop
clc
add
lret
and
mov
jge
stos
stos
mov
aad
pop
jg
xchg
jecxz
shll
imul
repnz
cld
iret
mov
xlat
dec
dec
shr
bound
push
and
inc
lock
or
jge
xor
fisubl
loop
pop
shl
dec
push
inc
std
clc
mov
out
ljmp
adc
mov
loope
cmc
lea
sbb
repz
sahf
out
pusha
cmp
inc
loopne
cs
out
insl
cli
outsb
push
gs
loop
stos
cmp
scas
adc
lea
in
cmp
sub
jb
push
xor
inc
mov
xlat
add
int
pop
cmpsl
test
cmp
mov
push
ss
je
ret
jb
ljmp
imul
subb
mov
movsl
mov
add
sbb
cmpb
sbb
cwtl
imul
cli
imulb
test
hlt
iret
xor
fldl
pop
scas
xchg
inc
xchg
cmp
push
sbb
jo
sub
and
mov
cmp
mov
sub
into
rcl
or
cs
stc
mov
ret
mov
dec
stos
sbb
add
xchg
stos
cmp
pop
shlb
sub
dec
adc
mov
out
push
mov
mov
out
cmp
shl
jbe
lods
mov
push
fwait
cld
fs
in
pushf
push
outsb
mov
sub
cld
mov
xlat
ds
dec
mov
cmpsb
fcomi
and
and
dec
mov
or
jb
mov
out
ss
jo
dec
in
sbb
adc
arpl
inc
pop
xlat
movsl
in
pop
mov
xor
pop
cmpsb
inc
mov
push
gs
neg
mov
ret
pushf
fidivs
xchg
dec
je
pusha
push
cmc
push
or
mov
notb
movl
icebp
lock
push
pop
mov
lea
in
sub
dec
pusha
jbe
jne
insl
push
ret
xchg
scas
mov
mov
add
cmpb
dec
imul
stos
lea
jnp
aam
sub
aaa
andl
add
mov
icebp
outsb
xchg
dec
lret
xchg
push
ljmp
decl
shrb
mov
dec
sbb
pop
mov
pop
fildll
into
test
pop
xor
mov
and
fists
lahf
jae
cmp
cld
dec
fidivrl
adc
add
jbe
xor
sub
arpl
icebp
jno
pop
xchg
jecxz
mulb
loope
and
outsl
lahf
leave
adc
pushl
fdivrp
orl
jle
mov
mov
sub
pop
shrb
and
enter
xchg
or
cmpsl
leave
mov
popa
cmpsl
or
sbb
leave
mov
sbb
mov
adc
mov
in
xchg
xor
xchg
dec
xor
fisubrs
into
in
rolb
xchg
push
roll
pop
mov
add
pop
sar
pushf
lret
pop
add
adc
insb
bound
adc
xchg
fldcw
push
pop
sbb
pushf
add
clc
jl
jns
pop
dec
fsubrs
ds
fcom
dec
mov
test
push
xchg
pop
mov
clc
jae
mov
pushf
fs
xlat
in
aam
add
xchg
mov
nop
jb
orb
fs
push
mov
mov
cmpsb
das
or
pusha
add
ja
inc
mov
leave
jno
or
jle
mov
jecxz
es
xor
sahf
push
repnz
andl
fbstp
adc
push
mov
mov
aaa
aam
sub
loope
jno
dec
dec
ret
mov
cld
popf
push
adc
lahf
push
sub
mov
add
aad
mov
add
je
dec
dec
sub
cltd
sbb
popf
cld
add
dec
ret
xchg
out
cmp
std
ljmp
sub
jno
mov
insb
icebp
push
xchg
in
movsb
mov
ret
ljmp
jno
ljmp
mov
dec
lahf
and
divl
inc
jge
jae
add
jae
fwait
test
aaa
je
aas
lods
pusha
lahf
outsl
fnstcw
push
ret
mov
popf
outsl
loopne
hlt
or
outsb
mov
sub
stos
insb
imul
out
xchg
dec
pop
out
mov
mov
mov
test
mov
jmp
and
loope
xor
inc
mov
lds
ficoml
cltd
push
std
jae
push
in
icebp
or
cmpsb
xchg
imulb
push
stos
add
mov
in
mov
mov
sub
loope
jmp
imul
call
xor
jl
jge
nop
jns
xchg
lret
fbld
lret
mov
mov
lock
call
mov
js
push
rol
jbe
mov
cmp
mov
jecxz
pop
xchg
out
xor
mov
nop
adc
pop
cwtl
std
das
push
mov
xor
subb
add
sub
xchg
push
xor
idiv
jecxz
icebp
ret
inc
lods
repnz
push
sarb
sti
jmp
movsl
push
jo
inc
stos
jb
xor
sub
xor
pop
add
das
sub
and
or
mov
and
insl
repz
fists
call
jcxz
jp
lock
mov
fbstp
push
xchg
cmp
shll
lret
adc
fisttps
xchg
into
outsl
loopne
add
jmp
xchg
dec
sahf
loopne
mov
pop
scas
jbe
xor
out
push
pusha
dec
cmp
scas
gs
mov
popf
mov
mov
sbb
sub
sub
jnp
push
ficompl
push
dec
rcll
or
gs
sahf
xor
lds
or
mov
in
fsubrl
leave
add
insb
fistl
mov
fwait
rorl
ljmp
rorl
iret
cmpsl
test
outsb
lcall
sub
or
dec
xchg
iret
jb
jmp
scas
das
and
std
jg
pop
mov
mov
dec
lock
jae
in
pop
dec
ficomps
test
push
sub
fwait
lcall
shl
int
enter
xchg
add
sbb
add
popf
sti
mov
mov
mov
jle
testl
mov
in
add
loope
and
dec
adc
pop
js
add
insb
imul
lcall
insb
repnz
imul
cmp
adc
adc
mov
rclb
jno
cmp
cmpsb
inc
gs
push
push
jns
lea
enter
sub
mov
xorb
js
jno
sbb
adc
leave
scas
outsl
mov
addl
jnp
gs
sub
leave
inc
mov
out
gs
sub
test
dec
jle
clc
push
fptan
stos
sahf
mov
scas
in
push
push
mov
ss
mov
ret
ja
dec
push
mov
ds
and
aad
xchg
arpl
pop
cwtl
or
sti
xchg
je
mov
iret
pop
mov
mov
in
dec
mov
inc
scas
inc
in
jno
push
sarb
push
enter
js
and
ret
xchg
jno
jne
ds
insb
ja
mov
lcall
je
sub
sti
je
andl
into
loope
sti
jbe
push
jg
lahf
insb
outsb
sub
or
data16
adc
jb
ret
hlt
mov
mov
ret
xor
sbb
ljmp
leave
lcall
in
in
push
pusha
jo
inc
lds
mov
mov
cmp
insb
bound
xchg
dec
adc
ret
xchg
nop
or
jno
hlt
or
jnp
pop
pop
sti
fistl
mov
adc
or
xor
add
dec
jge
jecxz
pop
insl
or
lock
mov
adc
sbb
jae
cwtl
sub
mov
shlb
xlat
xlat
push
dec
xor
jae
mov
popa
cli
inc
lea
mov
pop
and
adc
std
stos
or
cmp
cmpsb
cmpsb
dec
bound
imul
inc
in
add
inc
xor
inc
fisubrl
aam
shlb
incl
jp
sub
and
pop
push
jb
adc
xchg
aas
fwait
mov
push
sarl
pop
lods
aam
or
push
or
scas
mov
lea
dec
xchg
jb
xor
je
and
xchg
aam
pop
sbb
mov
cmpsl
and
dec
sbb
adc
popf
test
stc
not
mov
push
inc
inc
pop
lds
in
inc
sbb
mov
leave
add
insl
loopne
mov
movsl
push
in
mov
jnp
das
jbe
cmp
dec
jmp
mov
aaa
les
les
mov
test
in
adc
mov
movsb
xchg
insl
xchg
dec
clc
es
xor
lds
or
sbb
mov
push
fidivrs
clc
ret
outsb
mov
ja
fsubl
filds
dec
stos
mov
mov
std
mov
ret
in
fcoml
aas
sbb
lcall
pop
and
dec
lcall
push
cmp
rol
mov
pop
jo
in
dec
cmp
adc
lock
cmp
jno
leave
into
xor
lret
cwtl
in
add
xchg
test
pushf
xchg
xor
packsswb
scas
sbb
int
adc
outsb
pop
dec
jnp
orb
push
mov
and
sbb
mov
lcall
int
loop
sub
or
jg
aaa
mov
or
shrl
out
movsl
fldcw
jge
cmp
cli
cmp
cmc
sahf
xor
push
sbb
sbb
push
dec
test
lods
movsb
dec
in
xchg
pop
mov
imul
inc
jbe
popf
cmp
cwtl
aad
push
mov
push
jno
rorl
dec
push
dec
mov
and
hlt
ret
adc
push
fcomip
xchg
mov
lock
cmp
xlat
je
in
sbb
lods
mov
pop
ret
adc
subl
dec
mov
pop
les
mov
adc
push
or
dec
ljmp
dec
ljmp
inc
loopne
nop
or
ret
mov
cmpsl
mov
aaa
pop
adc
clc
divb
xchg
bound
inc
xor
jne
add
movsb
pop
scas
cltd
push
pop
push
mov
mov
add
shlb
or
push
mov
cmpsl
sbb
clc
jl
shl
bound
cmp
push
pop
ret
push
push
pop
popf
cmp
mov
cmp
add
jp
push
jae
lret
pop
pop
jbe
out
push
pop
mov
push
cli
sub
mov
jmp
lea
sbb
push
sti
adc
jnp
jg
cmp
clc
and
shlb
push
shrl
scas
xchg
out
aad
push
add
outsl
adc
inc
daa
mov
lock
popl
scas
pop
in
adcl
jmp
lock
inc
cmp
inc
cld
std
call
fdivrs
cmp
add
les
adc
xchg
test
daa
cltd
stos
out
cmp
xor
sbb
mov
mov
scas
dec
incb
lds
int3
arpl
mov
push
cmp
daa
rorb
pushf
dec
push
mov
das
lea
iret
arpl
pop
or
sub
repnz
out
lahf
decb
aam
loope
or
test
fmuls
cltd
in
pop
icebp
out
xchg
mov
data16
and
sbb
dec
pop
ss
inc
jmp
sub
dec
dec
mov
sub
inc
xor
pop
inc
or
cwtl
and
add
pop
mov
aad
sub
nop
pushf
jnp
inc
xchg
adc
jge
sbb
in
mov
mov
int3
mov
pop
sbb
push
or
lock
cwtl
mov
jno
or
ficoml
int
leave
gs
xchg
sbb
pop
sbb
mov
pop
test
mov
mov
xor
cmpsb
xchg
jnp
add
outsb
mov
popf
iret
out
cmc
jl
ret
lds
rorb
outsl
inc
and
mov
mov
cmp
cmpsb
dec
std
mov
std
cmpsl
inc
fisttpll
fsubrl
push
mov
xorb
jbe
hlt
enter
dec
clc
cmp
icebp
cmp
bound
push
xor
mov
cli
jecxz
pop
data16
add
subb
pop
cmp
mov
inc
jp
inc
icebp
mov
sub
in
imul
in
mov
imul
push
scas
ss
cmc
lock
add
lret
add
sarl
xchg
test
mov
les
adc
or
arpl
scas
cmp
aad
sub
stc
loop
xchg
mov
lds
dec
sahf
shll
lock
std
pushf
jmp
mov
mov
jo
pop
xor
and
xorb
lea
arpl
sarb
aad
int
mov
faddl
push
jp
rorb
mov
jns
bound
push
inc
lock
sbb
xor
xor
mov
and
mov
or
in
mov
pop
daa
popf
xor
repnz
sbb
das
xchg
cltd
push
cmpl
ds
sbb
dec
add
scas
push
mov
adc
lods
test
inc
movsb
dec
test
sti
iret
loopne
shll
out
push
movsb
xchg
cld
lock
in
sub
or
leave
pop
dec
imul
xchg
jbe
mov
shrb
mov
jbe
pop
push
daa
xchg
dec
call
je
push
xchg
aas
sub
sub
cmp
leave
leave
mov
mov
push
cld
mov
mov
mov
lret
cli
mov
in
dec
iret
ja
lods
or
les
cld
xchg
addr16
mov
cmp
test
xchg
dec
shll
and
cmp
testl
stos
adc
push
clc
mov
dec
sbb
xchg
add
push
rcrb
ficoml
in
mov
add
insb
cmpl
push
jg
cmp
mov
pusha
mov
sbb
inc
xchg
cmp
or
in
sub
aaa
clc
mov
lret
testb
gs
jp
mov
pop
push
fdivrp
mov
out
xor
addr16
and
mov
xor
inc
cmp
mov
adc
xchg
dec
jno
fsubl
fidivs
xchg
mov
fninit
add
test
sub
or
loopne
clc
sbb
mov
jmp
xlat
mov
or
mov
data16
jb
outsl
cmpsl
inc
cmpsb
push
shll
cmpsb
jae
dec
lods
dec
adc
mov
xor
xchg
xchg
or
pop
xchg
mov
add
ja
and
aam
pop
ficompl
lea
dec
int
insb
sub
or
fs
jg
push
or
jae
adc
cmpsb
cmp
leave
inc
cmp
lds
mov
jo
popf
pop
stc
jg
adc
testb
cmp
test
inc
jle
sbb
sub
aad
cmp
push
adc
mov
cmpb
into
add
aad
subb
nop
ficoms
movsb
push
ret
ja
imul
xor
stos
jp
outsl
outsl
push
push
add
jb
jg
pop
cmpsb
xchg
mov
repz
daa
fistl
repnz
rorl
jmp
inc
aas
fpatan
or
or
push
mov
inc
or
pop
stos
insb
fiaddl
xor
js
shlb
addr16
inc
jbe
lods
and
inc
cmp
or
push
lock
int
stc
jp
mov
adc
mov
imul
int
mov
out
dec
testl
fcom
rcl
in
sahf
mov
aad
sub
lret
pop
lods
stos
inc
jmp
mov
rcll
push
imul
les
xchg
xchg
dec
idivb
jbe
rcl
adc
lahf
ss
push
xchg
lock
push
mov
sahf
shrb
xchg
shll
fnstcw
jecxz
out
jmp
addr16
mov
jecxz,pt
sbb
cmpl
je
xchg
adc
mov
rcrl
or
repz
rorl
mov
push
adc
in
sbb
rcll
or
imul
inc
push
inc
scas
jo
out
push
loop
or
push
aad
sub
in
call
stos
sub
and
loop
cmpsl
stos
xchg
std
aaa
cmp
sahf
popa
mov
pop
xlat
sub
test
inc
jp
pop
mov
jne
orb
enter
das
push
pop
aaa
mov
stc
pop
fisubs
dec
rcrl
out
fwait
es
jae
mov
stos
int3
push
iret
pop
stos
and
mov
hlt
in
cmp
add
pop
pusha
sub
xor
test
mov
out
fidivrl
xchg
cmp
mov
test
add
test
push
dec
mov
ffreep
cltd
mov
aam
mov
pop
stos
lock
ds
shl
mov
out
pop
dec
lods
cld
adc
sub
aam
push
xchg
push
roll
ss
cmc
push
mov
dec
mov
popa
lods
test
icebp
outsb
cli
xchg
mov
mov
mov
out
sub
mov
push
inc
mov
inc
add
cmp
sub
mov
in
aad
mov
xchg
das
push
stos
sahf
cmpsl
cmpsb
add
pop
icebp
inc
push
je
das
outsb
lahf
pop
ficompl
or
xor
in
pop
insl
idiv
dec
and
movsb
add
sub
std
inc
push
lret
push
movsb
gs
xchg
and
movsl
outsb
or
xchg
pop
dec
scas
in
loope
sbb
jg
hlt
stos
lret
lods
or
or
jns
mov
paddsw
imul
or
lods
fldenv
or
jne
mov
jae
push
inc
mov
push
clc
mov
push
mov
outsb
clc
jmp
out
pop
sub
xchg
cmc
sbb
mov
cmp
test
ja
or
jne
dec
mov
and
out
dec
mov
cltd
pop
xchg
outsb
in
push
in
movsl
lahf
adc
xlat
gs
pop
push
jae
sbb
sbb
xor
int3
sarl
out
mov
dec
push
push
xchg
adc
lahf
out
cmpsl
stos
sbb
push
insl
das
and
mov
jne
mov
pop
int
addr16
jl
add
pop
xor
mov
sbb
pop
sub
fistpll
dec
mov
lahf
out
pop
sti
fs
sub
cmp
mov
sub
sub
sub
fwait
jmp
out
stc
mov
or
lods
pusha
push
sbb
push
dec
data16
jne
adc
add
cwtl
jnp
and
sub
and
inc
xor
inc
icebp
fdivl
or
and
inc
arpl
mov
jae
mov
mov
cmc
mov
cmp
jae
imul
cli
cs
inc
xchg
cmp
lds
jbe
data16
notb
dec
pop
mov
fimull
fldl
and
mov
arpl
mov
dec
es
jae
ja
rol
test
push
xchg
fmuls
mov
and
dec
and
cmp
ds
and
scas
dec
xor
xor
mov
sub
dec
idivb
jl
jo
fldcw
inc
repnz
and
inc
xor
fld
iret
lods
inc
xor
jl
lcall
addr16
jle
pop
dec
inc
cmp
stc
and
movb
pop
dec
jo
popf
mov
popf
mov
xor
out
adc
out
loope
loopne
mov
arpl
xor
dec
xchg
inc
fstpt
mov
ljmp
movsl
dec
jno
cmp
adc
or
pusha
jmp
imul
inc
popa
mov
inc
pop
jbe
repz
sahf
fdivs
cmc
ret
xchg
jecxz
push
lock
in
dec
mov
and
shlb
jecxz
mov
inc
out
inc
jmp
lret
popa
and
js
mov
push
sub
int3
xor
daa
cmp
lock
pop
jp
mov
cmpsl
cld
sbb
add
cmpsl
cwtl
test
shl
sub
repz
not
add
jl
fs
pop
addr16
ljmp
cmp
imul
bnd
mov
loope
and
subb
jbe
aaa
rcl
std
pop
cmpl
mov
sbb
icebp
mov
adcb
xor
fisubrl
mov
outsb
sti
in
and
popf
lods
xor
xchg
push
sbb
lock
cmc
mov
xor
xchg
ds
inc
and
cltd
loopne
push
pop
sbb
jle
mov
adc
mov
aaa
out
sbb
cltd
rolb
cmp
rolb
or
clc
out
or
test
ljmp
loop
pop
dec
adc
sarb
or
xlat
int
cmp
in
push
lret
pop
lret
cltd
dec
in
imul
stos
mov
and
or
jl
fadd
cmc
mov
mov
push
popf
pop
or
pop
lds
cmp
add
add
mov
mov
push
inc
pop
aaa
mov
test
pop
pop
jp
pop
cld
rcll
mov
scas
xchg
arpl
push
rolb
or
adc
xchg
fisubrl
pop
cmp
xor
fs
cmpsb
push
adc
sbb
in
push
cmp
or
out
jb
rclb
mov
push
mov
insb
jl
adc
mov
lock
pop
in
into
jae
idivl
dec
cltd
std
stos
add
sub
pop
addl
adc
add
dec
sub
add
jg
pop
in
leave
push
outsb
jle,pt
cmp
nop
add
mov
sbb
mov
fldt
imul
and
add
xor
mov
push
xchg
xchg
dec
aad
in
aaa
xchg
mov
iret
pop
add
shl
fcompl
or
daa
xchg
lahf
in
xor
aas
or
cmp
test
ds
jb
sub
xor
mov
repz
jge
out
ficoms
inc
push
fs
mov
jbe
jo
mov
das
jno
pop
shrb
jecxz
mov
jne
xchg
aam
push
push
out
mov
mov
lds
push
fidivl
lea
xchg
pop
dec
sbb
push
out
into
dec
cmpsl
movsl
jnp
test
mov
int3
cmc
fistpll
fisttpll
cmp
adc
jae
jns
adc
xchg
sbb
sub
cmc
sub
push
xchg
cmp
jg
jne
scas
out
std
mov
gs
in
push
jo
les
outsb
cmc
xchg
mov
imul
shl
add
in
ss
movb
cli
inc
or
inc
loopne
out
fsts
mov
scas
inc
mull
sub
jb
push
test
movsl
or
mov
ret
lahf
cmp
loop
add
mov
push
push
dec
out
test
test
incb
pusha
mov
das
shrl
nop
pop
jb
add
dec
or
lcall
cld
popa
cmp
mov
fmuls
cmpsb
pusha
or
test
pop
scas
cmp
cmpsb
xor
mov
xchg
mov
shrb
fistpl
fsubl
arpl
dec
repnz
shrb
xchg
fucomip
fbld
xor
lods
xor
loopne
or
ret
mov
lcall
cli
cltd
cli
cmp
push
mov
stc
pop
std
pushf
ss
xor
xchg
lds
mov
sbb
adc
jmp
jmp
loope
cmp
jnp
cmpl
dec
jge
sub
mov
pusha
inc
mov
and
and
mov
fucomi
or
leave
xorl
orl
xchg
imul
lcall
pop
cwtl
test
filds
cmp
mov
xlat
rcrb
mov
movsl
xorb
out
pop
test
mov
ljmp
or
sub
pop
dec
inc
cli
jno
mov
lcall
adc
aaa
stos
dec
or
scas
js
xor
xor
pop
mov
jmp
test
sub
stc
sub
shlb
cltd
out
test
sbb
outsb
cmp
pop
sbb
aas
push
push
mov
icebp
adc
dec
or
outsl
adc
add
test
cmpsb
inc
or
shlb
jle
jns
mov
cmp
pop
sub
inc
dec
mov
fidivrl
pop
cmpsl
push
or
ja
xchg
out
adc
incl
mov
push
dec
adc
fsubp
jmp
dec
mov
sbb
pop
pop
jle
mov
lahf
testl
mov
je
lahf
cmpsl
jecxz
je
cs
cmp
lea
adc
sahf
and
not
test
nop
orb
int3
sbb
dec
inc
mov
or
cmp
cmp
ja
add
push
add
jge
cli
loop
or
popf
mov
inc
cmp
in
pop
adc
mov
icebp
inc
mov
je
test
cmp
shll
jno
mov
pop
push
bound
pop
dec
movsl
cmpsl
loope
push
dec
mov
call
sarb
push
sub
loop
insl
or
mov
xor
outsb
inc
xchg
mov
xchg
fstl
enter
scas
and
arpl
add
in
mov
data16
xchg
cmp
repz
adc
sub
outsl
dec
inc
mulb
push
or
nop
jge
pop
cmp
imul
fldenv
inc
pop
aaa
insl
repz
dec
loope
lods
hlt
cmp
sbb
fisubl
jno
pop
cmpl
cmpsl
stos
movsb
mov
mov
push
xor
test
rclb
dec
xor
mov
shrb
adc
cmp
mov
outsb
mov
dec
mov
in
or
dec
icebp
sbb
push
mov
push
out
movsb
orl
cmpsb
aad
jecxz
or
dec
push
test
xchg
jle
push
mov
mov
or
leave
mov
loope
add
sldt
mov
add
js
and
jne
mov
fcomp
int
jno
scas
test
sub
and
bnd
rclb
sub
lods
add
or
ljmp
push
jge
mov
jbe
mov
in
ret
int3
inc
and
mov
cwtl
outsb
push
negl
fadds
inc
cmp
pop
inc
test
scas
clc
lock
or
add
enter
sbb
jp
je
lcall
mov
or
push
mov
ds
jmp
subl
pop
jp
loop
ljmp
or
fistpll
shlb
test
pop
es
jo
pop
stc
mov
jno
aaa
cltd
pop
out
je
adc
xor
mov
mov
xchg
addl
int3
std
fwait
in
out
fdivrs
pop
or
push
hlt
add
jnp
dec
pop
and
mov
adc
mov
movsb
mov
inc
out
in
into
cld
jno
push
in
pop
fisttps
mov
lock
xor
arpl
xchg
xor
add
sub
xor
sbb
mov
js
stos
jmp
push
sub
mov
push
dec
xchg
jmp
daa
inc
xchg
lahf
clc
sub
ret
xchg
xchg
sbb
sbb
push
stc
jle
aad
fildl
arpl
rcl
dec
mov
xchg
arpl
icebp
dec
std
out
cmc
outsl
jo
and
jmp
ret
imul
test
loopne
test
out
cmp
xchg
out
imul
pop
shrb
xor
pop
inc
mov
lock
sbb
sbb
mov
clc
lcallw
repz
ret
cltd
mov
cmp
scas
pop
sbb
icebp
scas
test
fsubs
or
xor
jae
mov
roll
xor
push
push
mov
mov
pop
or
icebp
incb
push
daa
scas
movzwl
cmp
xchg
and
jnp
pop
cmpsl
popf
and
dec
ja
jmp
mov
sub
data16
testl
or
push
dec
jecxz
dec
adc
dec
cmp
ret
aad
mov
fst
push
inc
cmp
add
loopne
add
test
inc
or
pop
xor
jge
imul
sbb
xchg
xor
inc
sbb
xchg
insb
push
mov
sub
or
pop
scas
jecxz
mov
loope
mov
dec
pushw
mov
bound
mov
icebp
push
mov
test
mov
movsb
int3
popf
mov
aas
inc
stos
pop
mov
pop
ds
lcall
mov
jp
xchg
mov
sbb
jbe
lret
cmpb
cmp
adc
mov
and
lret
out
out
mov
adc
pop
xor
pop
pop
xchg
outsl
xor
jge
outsb
pop
xlat
jmp
xchg
repnz
mov
scas
pop
daa
sahf
push
xchg
cli
sub
test
mov
mov
arpl
ss
xor
push
dec
sub
rcll
fs
sub
mov
nop
jno
xchg
movsb
imul
push
stos
arpl
fucomip
sahf
adc
pushf
fadds
rorl
mov
and
push
shl
jge
cmc
in
rcr
fidivl
mov
mov
or
cmp
dec
mov
xor
dec
iret
mov
jbe
inc
and
xchg
adc
xchg
cmp
out
pop
and
mov
jmp
or
pop
jnp
insb
movsb
mov
sbb
inc
sub
jecxz
sbb
mov
xchg
std
das
out
jp
jb
test
pushf
loop
xchg
in
outsb
inc
xchg
data16
pushf
and
adc
scas
clc
mov
sbb
mov
xor
lods
xchg
jge
rolb
dec
push
mov
inc
jns
arpl
sub
nop
mov
insb
aaa
inc
mov
lock
push
xchg
orl
ss
dec
mov
push
jnp
fnsave
xchg
and
and
and
cmp
mov
and
mov
jo
sti
ss
mov
mov
lds
sbb
jp
movsb
sub
push
les
sub
sbb
stc
test
mov
loop
inc
dec
fidivrl
pop
add
mov
fimuls
fwait
push
adc
dec
inc
jne
ret
jnp
inc
out
mov
fwait
jae
jmp
sub
or
dec
add
test
aaa
int
or
in
pop
sbb
fsub
pop
mov
mov
or
jnp
fidivrl
add
fisubrs
pop
cwtl
adcb
sub
mov
pop
xchg
add
loop
aas
outsb
ffreep
sub
mov
xchg
pop
cmp
test
sbb
inc
popf
xor
jnp
mov
xlat
notl
jnp
add
adc
shl
cwtl
jb
aam
push
outsb
sbb
fsts
or
inc
out
clc
push
aam
cmpsl
insb
ret
push
cmp
push
inc
jp
xor
add
push
mov
mov
jp,pt
insl
xor
dec
adc
sbb
rorl
xor
loope
sbb
add
sub
mov
lock
adc
ds
pop
in
xor
std
inc
adc
cmp
sbb
sub
test
pop
fdivr
test
test
mov
mov
push
cmp
push
lahf
mov
stos
push
outsl
jns
stos
in
icebp
dec
sub
pop
repnz
push
popa
in
fdivrp
insl
add
adc
lods
fbld
and
pop
xchg
gs
imul
movsb
pop
mov
pushf
arpl
lret
add
testb
stos
cltd
ja
xchg
aaa
pop
out
sbb
cs
gs
dec
sub
xor
xchg
shlb
pop
sbb
jns
or
mov
jl
lahf
add
clc
cmpb
je
xchg
push
adc
into
inc
nop
in
mov
sub
ror
fwait
lret
adc
arpl
inc
pop
sub
sbb
in
lret
mov
pop
fs
push
xor
sahf
xchg
ds
leave
aad
dec
stos
jle
push
popf
shlb
mov
aad
shll
pop
jns
mov
jb
leave
pop
ss
xor
stc
aas
push
or
sbb
mov
hlt
sub
mov
in
insl
sbb
and
mov
repz
icebp
incb
fmuls
cmp
lock
xlat
repnz
mov
mov
lods
cli
in
jnp
push
in
push
mov
and
adc
mov
hlt
xor
ret
xchg
lods
adc
push
imul
in
push
dec
into
icebp
add
aaa
test
int
repnz
mov
ljmp
sub
fs
in
sarb
pop
int
aaa
cltd
test
jle
ds
sub
hlt
push
jecxz
out
xchg
xchg
shlb
push
in
test
dec
xchg
jp
xchg
mov
movsb
movsl
imul
sbb
add
or
call
idivb
mov
adc
mov
jns
jae
xchg
lock
inc
push
inc
inc
popa
cli
mov
aas
xchg
test
adc
rorb
jl
cmp
inc
in
pop
icebp
or
pusha
dec
mov
js
in
aas
add
pop
std
movsb
dec
sbb
mov
mov
mov
inc
cld
iret
jle
sbb
xchg
pop
icebp
mov
lret
movsl
into
dec
push
popf
popa
add
or
mov
or
lods
lds
in
inc
and
scas
cli
imul
fmul
push
jno
into
mov
mov
pop
scas
es
fwait
shl
and
cs
mov
mov
push
dec
scas
xchg
stos
popa
and
in
movsb
aad
loopne
dec
push
cmc
sbb
fidivrs
jno
test
pop
and
shlb
sbb
mov
stos
cwtl
inc
mov
mov
pop
xor
push
xor
mov
lock
jb
les
stc
fisttps
push
addr16
push
xchg
sti
dec
dec
fnstenv
pop
orb
cld
aaa
cmp
gs
lret
jnp
cmp
pop
ss
inc
in
mov
dec
push
push
into
loope
repnz
popf
xchg
test
into
inc
mov
pop
push
mov
mov
ret
outsb
dec
jno
stos
ds
enter
fistl
push
iret
sbb
push
add
cmp
int3
mov
inc
ja
push
mov
jb
cmp
mov
loop
push
out
das
jp
cmp
int3
cmp
inc
aam
inc
dec
or
xor
mov
ret
popf
ja
add
xchg
jo
xchg
push
sbb
mov
or
imul
push
inc
icebp
ficomps
jbe
faddl
mov
mov
adc
xlat
stc
inc
push
cmp
orl
jmp
sbb
enter
mov
dec
mov
and
das
or
ljmp
enter
adc
fcmove
adc
mov
xor
pop
test
or
lods
cmp
sahf
mov
cmp
int
push
imul
pusha
scas
out
dec
call
mov
xchg
or
dec
int3
xor
ret
loope
scas
mov
pop
sub
ficoms
sbb
lock
cmpsl
test
sbb
pop
add
test
lods
pop
dec
inc
test
jo
iret
lcall
lahf
mov
cmpsl
stos
test
cmc
les
lahf
and
xchg
stos
int
stos
fisttpl
cmpsb
sbb
or
aad
or
add
dec
dec
out
jl
adc
add
pop
pusha
and
sub
lret
mov
dec
call
cmpsl
adc
sub
push
pushf
sahf
mov
adc
mov
sub
lock
xchg
pop
or
mov
mov
rorl
pushf
cmpl
cmpsl
cmp
pop
mov
fwait
push
ja
push
mov
out
jae
and
out
adc
xchg
rol
sub
mov
loope
xchg
sub
hlt
sub
cmc
mov
dec
mov
sub
mov
mov
sbb
jb
iret
mov
xor
jp
add
mov
ret
stos
pop
push
inc
dec
and
add
and
pop
data16
pop
push
xchg
push
inc
xchg
xchg
push
xor
rorb
je
and
cli
sbb
dec
xlat
jp
xchg
jmp
cld
cmpl
xor
jl
xor
mov
adc
test
jae
cwtl
adc
xor
adc
test
idivl
sub
xchg
shrb
lock
movsb
in
and
fwait
adcb
aas
jnp
enter
push
decb
stc
mov
pop
mov
sub
sbb
pushf
adc
push
sub
cmp
cmc
or
jo
gs
cmpsb
push
ficomps
mov
xor
xchg
enter
dec
divb
cmp
in
mov
dec
aam
cmp
hlt
mov
imul
aas
mov
push
xchg
sub
rcll
cltd
sbb
std
cmc
shll
adc
pop
fistpll
into
add
adc
das
testl
aas
xchg
xor
dec
cmpb
jne,pn
outsl
adc
sahf
or
jns
lea
xchg
mov
sub
cmpb
dec
hlt
inc
pop
sbb
and
mov
mov
call
sbb
lcall
or
inc
and
cmp
mov
inc
dec
xchg
test
fs
xor
inc
cwtl
or
jmp
sbb
les
adc
dec
fimuls
shlb
sub
mov
lret
cwtl
sub
arpl
je
cmp
lahf
mov
push
stc
xchg
and
mov
sub
daa
pop
leave
test
cmpsl
in
cmp
mov
mov
shrl
movsb
jge
mov
fwait
xlat
dec
jb
stos
dec
push
add
lods
setl
xchg
adc
lods
loopne
es
push
cs
mov
sub
xchg
pop
repz
loopne
outsl
pop
pop
pop
scas
movl
cld
xchg
fwait
in
mov
inc
test
inc
pop
jns
mov
jns
cmp
call
sbb
sbb
adc
xor
and
push
or
sub
mov
jbe
stos
dec
xlat
xor
rcrb
push
loop
dec
mov
cmp
push
pop
adc
mov
jle
lods
mov
mov
mov
pop
ficompl
out
push
movsb
lret
xlat
imul
cld
inc
sub
out
gs
js
push
push
inc
insb
in
lods
lods
pushf
add
and
xchg
arpl
sbb
inc
ds
fisubl
adc
and
mov
js
pop
and
test
sub
shll
cwtl
lock
clc
int3
js
xchg
jne
js
rep
sub
loope
repnz
push
out
inc
scas
mov
add
daa
pushf
pop
jl
and
mov
cmp
add
mov
shll
insb
loopne
pop
push
pop
mov
adc
or
scas
lds
lea
xchg
sbb
sar
popa
std
xor
imul
lcall
lds
fnstcw
inc
sbb
xor
adcb
fst
mov
ja
mov
cmc
jns
mov
jno
repz
das
or
mov
into
scas
bswap
icebp
orb
into
or
push
pop
cld
pop
pop
sub
cwtl
cmp
sbb
sbb
mov
mov
lods
push
addl
jne
loop
sarl
pop
mov
jne
or
aam
cmp
xlat
ljmp
cwtl
push
repnz
mov
ret
sbb
imul
repz
cmc
aam
mov
mov
js
sub
cli
cmp
sbb
inc
dec
scas
jnp
stos
scas
dec
add
sub
gs
leave
or
addb
fucom
gs
push
int3
add
jmp
in
imull
stc
aam
mov
or
mov
scas
aad
adc
xlat
jno
ret
jle
xchg
aam
jno
mov
sbb
mov
cmp
jno
push
imul
xor
push
sbb
xchg
mov
fidivrs
push
jl
dec
and
and
inc
loopne
pop
subb
xor
xor
out
jb
test
jne
ret
jne
mov
sub
mov
out
mov
mov
pop
jle
loopne
or
sti
test
rcrl
jno
push
inc
pushf
test
add
je
in
mov
out
arpl
testb
sbb
sub
outsb
fnsave
mov
jae
insb
add
fistpll
inc
enter
mov
icebp
pop
ret
sarl
in
leave
mov
test
imul
dec
sbb
mov
mov
das
ficomps
push
sbb
inc
cwtl
sub
push
xchg
add
imul
outsb
jnp
push
jge
sbb
mov
insb
jns
xchg
movsl
jbe
bound
call
enter
xchg
stos
flds
movsl
and
psrlw
nop
pop
adc
jecxz
aad
cmc
dec
add
push
ja
popf
push
lahf
mov
insl
push
xor
pop
dec
mov
ret
and
inc
or
xor
jle
insl
iret
xchg
sahf
ljmp
outsl
out
cwtl
jle
stc
lds
adc
mov
mov
ds
sub
test
mov
sub
sarb
movsl
push
loopne
addr16
add
enter
jbe
es
int3
cld
cmp
mov
jp
mov
lahf
ss
insb
inc
cmpsb
jecxz
das
add
adc
in
cmp
sbb
jg
scas
in
hlt
nop
es
dec
out
cld
mov
push
and
xchg
scas
cmp
rcrb
xchg
sub
aam
icebp
xchg
sbb
test
and
pop
les
sbbl
sbb
jmp
jnp
popa
push
hlt
push
push
out
shl
movsb
pop
pop
pushl
or
adcb
xor
out
out
les
mov
loopne
mov
pop
mov
pop
inc
sub
xchg
pop
je
jno
dec
push
mov
adc
notb
add
cli
jle
stos
testl
sub
insl
push
imul
jecxz
xor
lock
inc
dec
les
imul
stos
dec
cli
adcb
push
fstps
cmp
cmp
ljmp
lods
jno
loopne
inc
or
out
inc
cmc
cmp
xchg
insl
xchg
inc
fs
xorb
cld
popa
gs
adc
rorb
jmp
sub
and
xor
jg
sbb
mov
daa
cmp
sub
inc
leave
inc
int
sbb
fildll
gs
ljmp
inc
insb
rolb
and
cwtl
icebp
ss
roll
or
jge
jmp
mov
jo
cltd
pop
aas
fstl
aad
mov
mov
shrb
sbb
aam
xor
adc
add
loopne
xchg
cmp
push
rorl
cmp
jge
xor
out
mov
pop
xor
lods
xchg
push
scas
stc
cld
scas
ljmp
mov
movsl
push
movsl
outsl
jl
test
adc
push
sbb
sub
pop
mov
add
push
adc
jae
lcall
ret
xchg
adc
sti
xor
cmp
jb
lahf
or
or
aaa
and
sub
mov
mov
shlb
insb
fisttpll
xchg
clc
orl
addb
mov
sub
repz
lods
inc
xchg
mov
loop
jle
mov
add
push
or
fdivr
push
in
sti
inc
adc
jns
mov
out
pushf
sahf
xchg
and
xor
outsl
out
mov
dec
jecxz
adc
mov
push
push
fbld
jmp
push
cmpsb
inc
jb
adc
mov
xorb
fiaddl
fst
lea
add
lds
mov
dec
or
xchg
dec
mov
xchg
mov
sbb
adc
mov
mov
mov
mov
lds
int
aad
push
pushf
jg
cmp
popa
inc
ljmp
push
push
or
gs
pushf
cmp
cmp
jl
inc
cltd
cmp
in
sbb
js
stc
rorb
int
push
adc
jnp
jno
xchg
movsl
lock
out
mov
rcll
inc
mov
adc
fistpl
cmpsb
cli
lods
xchg
jl
xchg
jl
cli
jb
popf
mov
push
pop
sbb
sub
xchg
stos
add
sub
lcall
rorl
arpl
popl
fstpl
pusha
popf
test
aaa
dec
in
mov
sub
cld
cld
xchg
in
sahf
scas
jo
ret
inc
in
test
packsswb
adc
out
rolb
pop
cltd
js
pusha
popa
lret
or
inc
and
call
mov
pop
mov
dec
scas
lods
daa
adc
pop
lds
loop
cmp
jmp
insb
call
mov
es
cmp
mov
sbb
push
inc
sbb
and
imul
mov
dec
jnp
mov
cmp
mov
loop
sub
sub
pop
cmpb
or
push
ds
mov
inc
in
pop
pcmpeqw
int3
call
push
xor
outsb
jl
jbe
sarb
dec
push
or
mov
pop
sub
insl
aaa
cmp
les
push
dec
push
dec
push
and
push
xchg
int3
or
inc
xor
in
inc
push
sbb
cmp
adc
negl
xor
roll
sbb
cmc
outsb
push
jle
or
adc
dec
cld
mov
add
mov
test
push
push
std
cwtl
mov
jmp
adc
adc
scas
iret
push
test
movsl
adc
imul
pushf
fisubrs
pop
sarl
and
pusha
lds
push
gs
je
lock
bound
hlt
pop
aas
mov
mov
adc
cmc
mov
or
xor
mov
test
mov
shll
push
jmp
ja
mov
mov
sub
loopne
pop
sub
mov
jl
mov
out
rcrb
inc
shrb
cmpb
rclb
mov
mov
outsb
stos
cmp
and
jo
mov
dec
cltd
push
xchg
sbb
jne
repz
stc
push
or
leave
push
int3
mov
pop
ja
mov
xor
aaa
pop
and
iret
fwait
push
jle
adc
push
mov
push
int
outsb
push
mov
in
ret
push
mov
mov
imul
rorb
out
sbb
add
das
xchg
in
jg
aaa
pusha
ror
fistpll
and
sub
jl
out
push
repz
ds
test
jle
mov
inc
xchg
pop
leave
into
sub
cmpsl
subb
addr16
fs
sbb
lret
push
insb
adc
jno
push
arpl
add
jmp
push
push
adc
mov
and
and
fcoml
cmp
sahf
loopne
jno
jecxz
shll
sbb
sbb
dec
in
dec
les
xchg
sti
dec
jle
mov
mov
js
aas
push
fwait
sbbl
mov
xchg
inc
mov
xchg
test
or
pop
cmc
mov
fsubl
sbb
out
mov
xchg
loop
insl
leave
add
mov
add
mov
mov
rorl
movsb
pop
jle
outsl
je
push
lahf
dec
fs
negb
mov
out
scas
push
cmp
hlt
push
xor
lock
mov
sub
hlt
pushf
push
push
mov
mov
idiv
sub
test
bound
mov
out
scas
mov
hlt
fists
sahf
pop
add
idivl
bound
mov
jo
push
fcomip
sahf
push
cli
js
mov
scas
mov
mov
push
cld
mov
pop
xor
js
je
ljmp
sub
sbb
dec
scas
sbbl
rorb
pop
movsb
xchg
jns
push
and
xchg
outsb
je
pop
sahf
push
shr
inc
xchg
or
aam
mov
xchg
shr
divb
pop
inc
les
adc
cmp
data16
mov
push
pop
xchg
mov
pop
sahf
movsb
inc
push
inc
dec
cli
scas
mov
adc
push
xor
dec
cmp
jge
push
inc
test
mov
mov
pop
sub
mov
ds
push
fdivr
into
cmpsb
mov
ja
pop
cwtl
out
das
fisubl
adc
jmp
es
sub
add
cli
cli
ret
jae
cmp
xor
mov
data16
or
daa
aam
xchg
push
daa
hlt
jecxz
adc
test
and
inc
lcall
xchg
or
mov
movsb
pop
lcall
cmp
fiadds
jb
das
cmpsb
addr16
stos
xchg
pusha
outsl
push
movsb
es
test
fbld
adc
movsb
lret
addr16
cmpsl
mov
dec
xchg
shl
fldln2
cmp
push
sti
testl
aad
or
or
xchg
testb
das
imul
pop
pop
leave
data16
add
inc
fidivrl
mov
adc
shrl
adc
lea
sub
test
pop
or
cmp
aad
mov
and
dec
sbb
xchg
imul
mov
cmpsl
leave
lods
add
push
mov
shl
out
fwait
xor
and
cmp
in
lcall
enter
pop
mov
or
ret
adcb
enter
addb
inc
push
inc
popa
ds
or
pop
gs
adc
add
mov
aaa
and
pop
dec
sbb
int
dec
dec
xor
pop
inc
sbb
push
stc
inc
ss
mov
test
add
lahf
xchg
movsb
ficomps
loope
imul
push
fists
scas
xor
movsl
cmpb
divb
jmp
xor
out
mov
fbstp
sarb
lcall
and
dec
stos
push
sub
mov
ja
pop
popa
fs
mov
lods
inc
inc
push
mov
xor
lods
fistpl
sub
out
or
ja
lea
and
ja
pop
inc
mov
sub
pop
jmp
movsb
xor
jmp
sbb
xor
or
mov
xor
push
or
xchg
lods
insl
inc
xchg
xor
or
movsb
inc
out
inc
mov
jg
mov
xchg
daa
mov
mov
pushf
or
in
push
inc
xor
idivl
lret
and
mov
jp
ds
sub
shlb
popa
push
mov
cwtl
jl
in
mov
add
cwtl
inc
xor
xchg
push
sar
mov
arpl
mov
mov
dec
addl
test
mov
or
rorb
in
dec
jns
cmpsl
insl
sti
pushf
xlat
lods
dec
and
cmp
inc
popf
fcomps
les
sub
jecxz
cmpb
sub
pushf
adc
and
imul
jnp
je
push
mov
pop
jbe
xor
sub
jns
fldenv
push
mov
leave
jmp
pop
adc
mov
mov
loope
stc
lret
mov
sub
mov
int
jne
bound
cmovl
jp
mov
jo
lods
lock
mov
mov
ret
lods
fldenv
loopne
push
adc
adc
lea
add
jge
add
dec
ja
loope
loope
xchg
jbe
rorl
lea
stc
test
mov
mov
outsl
xor
push
ss
mov
adc
and
mov
in
loopne
in
xchg
das
xchg
cmp
sbb
pop
jns
fdivp
lds
std
ds
sti
sub
xchg
scas
push
cltd
shll
loope
jmp
adc
mov
enter
pusha
cmc
lods
xchg
dec
in
xchg
push
nop
jge
or
testl
sub
sub
mov
mov
mov
cli
mov
aaa
jo
xchg
into
scas
mov
repnz
dec
ret
inc
stc
push
pop
scas
push
cmc
movsl
cmc
or
adc
mov
gs
pop
jg
frstor
xchg
popa
push
sbb
movsl
sbb
int3
and
cmc
ljmp
cli
mov
pop
imul
cmp
das
xor
in
inc
int
cmpsl
mov
cmp
adc
jne
sub
shrb
mov
popa
gs
lret
std
pop
push
xorb
cmp
ret
dec
add
fldcw
jl
and
out
pop
push
xchg
add
push
stos
push
outsw
mov
push
push
repnz
pop
push
pop
loop
js
lods
xchg
jge
lock
outsl
push
inc
sub
andb
out
scas
hlt
shlb
out
insb
repz
mov
cli
jecxz
ret
cmp
in
sbb
xchg
dec
mov
movsb
sbb
mov
dec
inc
dec
pop
test
pop
in
fs
icebp
mov
lods
imulb
xor
cmp
cmc
adc
iret
add
in
mov
scas
inc
imul
or
push
pusha
out
mov
sub
out
rcrb
repz
inc
push
push
pop
mov
lret
mov
mov
jb
lret
or
cli
jg
aam
mov
or
inc
pushf
rclb
sbbb
xor
adc
sub
adc
loop
int
push
jns
loope
adc
iret
dec
repnz
xchg
sbb
push
fnstenv
sub
xchg
jg
sub
pusha
cltd
rorb
cmpsb
jecxz
mov
loop
jbe
jnp
mov
inc
ret
mov
imul
pop
repz
cld
stc
pop
mov
add
mov
dec
aad
aas
xor
xchg
pop
sbb
mov
cmp
fistps
adc
sbb
sub
in
int3
movsl
xchg
xchg
jmp
mov
outsb
jbe
in
fwait
sbbl
sbb
add
aam
lahf
jno
cli
jno
pop
pop
dec
mov
movsb
sub
jmp
out
ret
sbb
in
add
or
add
jnp
xor
out
adc
pop
or
jb
mov
aad
xor
popa
in
ret
test
insl
jp
fimull
test
fstps
pusha
jg
adc
cmpsl
cmp
fisubs
into
pop
imul
lock
sub
cmp
dec
insb
inc
lret
mov
pop
mov
jp
pop
mov
adc
cmp
aas
mov
push
das
in
aaa
dec
sub
test
ljmp
lock
nop
xor
or
xchg
xchg
add
leave
sbb
pop
cmp
mov
loop
push
sbb
imul
jecxz
stc
idivb
rclb
incl
das
stos
xlat
cmp
lret
mov
lahf
push
adc
mov
mov
mov
sahf
add
pop
or
mov
movsb
pop
sbb
mov
jmp
sub
add
jecxz
inc
imul
stos
mov
jae
xchg
inc
add
mov
lahf
leave
jnp
in
aaa
pop
sub
adc
in
pop
mov
cltd
xchg
jecxz
push
and
push
or
loope
stos
xor
mov
push
cwtl
cmp
jmp
popf
es
sub
loop
push
dec
inc
stos
jge
pop
andl
inc
fistpl
jnp
inc
shlb
popa
cmp
int
push
outsb
push
xor
pusha
sbb
and
ja
cmpsl
add
push
adc
jnp
mov
mov
cmp
mov
cmpsb
es
outsb
icebp
test
in
push
or
and
clc
adc
addb
mov
test
or
out
les
mov
daa
insl
inc
sbb
test
mov
or
nop
dec
lahf
cmp
inc
sbbl
dec
loop
xlat
leave
out
push
cmp
jg
mov
jl
fwait
int3
aad
jns
in
bound
xchg
out
call
popf
cld
adc
sbb
pop
int
and
jnp
outsl
mov
mov
dec
cmpsl
xor
push
push
xchg
imul
jl,pt
jp
clc
movsl
sarb
fldcw
mov
repz
test
in
mov
and
shlb
xchg
mov
fcompl
lahf
mov
adc
pop
pushf
leave
sub
cld
lret
push
jl
shll
cmp
add
movsb
or
jne
js
fisubrs
sub
inc
jb
adc
jecxz
loopne
cmpsb
mov
sbb
inc
add
xchg
ja
inc
jno
aaa
jmp
mov
lahf
leave
jge
push
push
bound
lds
pop
add
jbe
dec
pushl
xor
inc
movsb
stos
xchg
cmp
cmc
cli
les
add
xor
sbb
sbb
add
out
or
addl
jmp
xchg
xchg
rorb
xchg
sub
inc
sbb
int3
mov
inc
pop
lods
lcall
cmpsl
mov
jmp
lret
hlt
gs
add
xor
notb
cmp
fdiv
hlt
in
fadd
pop
mov
mov
mov
shrl
loope
xchg
in
sarl
icebp
jmp
cmpsl
int
adc
int
idivl
xlat
iret
and
add
jo
fldcw
inc
jmp
xor
push
or
add
sub
movsb
mov
pop
and
adc
and
int3
add
mov
sbb
cmp
movsl
cmpsb
cli
mov
jp
inc
int
cmpsb
movsl
inc
mov
ss
adc
dec
mov
pop
dec
fneni(8087
rcrb
testb
bound
cmpsb
mov
push
push
pop
jmp
xchg
push
inc
or
add
sbb
push
mov
or
das
mov
test
imul
xor
fs
shrb
nop
jmp
sbb
push
xchg
rol
fstl
adc
xchg
ret
and
sbb
cmpb
subl
ss
repz
and
movsb
int3
dec
out
ds
ds
test
outsb
out
test
xor
pop
cmp
pop
fs
sbb
inc
pop
xor
pop
leave
push
repnz
sbb
outsl
mov
ja
addr16
loop
pop
jle
andl
dec
jne
mov
inc
sub
aas
pop
mulb
sub
mov
and
and
out
mov
or
jno
cmp
mov
scas
pop
or
and
repz
aaa
xchg
je
sahf
and
popa
mov
sub
lock
xchg
jl
sti
lahf
mov
push
cmp
subb
add
cmp
mov
mov
hlt
pop
out
push
inc
inc
fisttps
add
js
mov
cmpsl
sbb
mov
loope
and
inc
push
pushf
out
sub
fwait
test
or
shlb
mov
popa
cmp
lods
leave
into
lods
xor
and
iret
adc
fnsave
in
test
stos
and
xor
add
dec
ret
jno
sbb
sarl
jmp
mov
movl
jae
dec
pushl
ret
dec
sub
and
fwait
in
loopne
dec
mov
cmp
jg
push
clc
in
repz
je
push
jbe
dec
scas
mov
xor
push
mov
cld
lods
shll
out
jp
xor
mov
adcb
adc
lods
add
mov
inc
jns
arpl
mov
addr16
cs
or
cmp
pop
jb
push
test
pop
push
rcr
pop
stos
mov
push
mov
gs
push
add
loope
bound
lea
xchg
jo
mov
inc
dec
jne
jge
and
mov
push
addr16
addr16
out
testb
mov
loop
xchg
aad
sar
push
jbe
cmc
jg
sbb
cmpl
clc
andl
xor
mov
sahf
rcr
mov
and
pop
hlt
cmp
pop
mov
sbb
out
dec
jge
xchg
fisubrl
rolb
dec
and
mov
dec
jecxz
pushf
mov
mov
daa
xlat
mov
cmp
into
lods
xor
fcoml
jge
mov
mov
cmp
adc
adc
aas
pusha
outsl
add
xchg
sub
mov
cs
or
or
add
add
push
xchg
inc
fs
ret
xor
adc
and
adc
lods
ss
je
jp
pop
popf
xchg
jp
add
daa
mov
aam
test
cli
je
sub
cli
enter
cmpsb
xchg
push
xchg
push
sbb
mov
lea
push
cmp
sub
push
push
push
add
mov
add
mov
nop
mov
daa
xchg
and
mov
cmp
and
arpl
inc
mov
jbe
in
jle
in
mov
in
ja
jge
and
fmuls
hlt
mov
bound
fildll
mov
mov
push
out
ror
inc
push
jp
and
dec
subb
mov
aaa
jno
sbb
push
jb
pop
outsb
out
xor
xorb
sbb
fisubrs
sahf
ret
imul
sbb
jle
cmp
mov
push
xor
lcall
fcom
fsub
jecxz
pushf
add
outsl
jne
dec
in
inc
idivl
enter
clc
insb
popa
mov
in
fsts
jns
lock
in
sub
and
add
fiaddl
mov
sbb
jae
push
ss
fs
sub
stc
icebp
cmp
sub
inc
mov
out
inc
pop
mov
push
sbb
clc
xchg
pop
imul
fimull
int3
lret
or
shlb
xchg
jb
in
mov
and
xchg
es
adc
xor
mov
mov
push
vcvttps2dq
lods
movsl
test
jne
ljmp
inc
lock
shlb
ret
test
scas
shlb
pop
xchg
xor
jb
dec
adc
sbb
divl
mov
jnp
mov
sahf
out
push
sbb
daa
icebp
ja
mov
lea
xor
mov
pop
or
xchg
xor
insb
jne
sarl
sbbl
orl
sub
cmp
in
and
out
sbb
add
add
push
out
stos
mov
stos
jnp
lcall
mov
int
or
in
sahf
sbb
imul
lahf
sbb
mov
test
push
dec
into
or
push
cmp
hlt
movq
cmp
dec
push
orl
jae
movsb
xor
notl
into
lret
addb
popa
adc
hlt
into
cmpsl
add
pop
push
ret
push
pop
mov
push
insb
pop
and
icebp
mov
test
or
mov
jmp
jecxz
jno
js
dec
mov
or
add
xchg
or
out
imul
jmp
pop
lsl
test
dec
mov
nop
xchg
mov
cwtl
sub
subl
or
testb
xor
dec
nop
push
je
xchg
mov
enter
cli
in
fbld
push
mov
gs
dec
shll
lds
out
push
pop
pop
inc
dec
inc
mov
adc
lret
subb
jle
int3
xchg
fwait
int3
fwait
test
mov
sbb
mov
add
jl
mov
pop
loope
es
ja
or
jecxz
inc
jle
adc
sub
sbb
aam
xchg
mov
pop
vmovups
or
mov
inc
sarl
call
leave
xlat
imul
sbb
add
es
sbb
or
push
loope
xchg
andb
xchg
dec
lods
out
leave
lret
sbb
insb
xchg
inc
pop
stos
add
xchg
std
xor
insl
sbb
mov
mov
adc
sbb
mov
lock
jl
add
cs
pop
pop
js
mov
push
fnstsw
mov
mov
jne
mov
sbb
fidivrl
mov
mov
add
fcmovnbe
cmc
inc
rcr
inc
bound
jo
loope
scas
xchg
daa
sbb
jbe
aam
cmp
sbb
and
xchg
xor
dec
ret
imul
push
and
and
xchg
xchg
pop
jns
notb
scas
mov
insl
shrl
pusha
and
nop
fmuls
cmp
add
mov
mov
lcall
pushf
adc
fsubr
outsb
pop
pop
ja
popf
loopne
push
js
inc
or
push
jno
popw
and
fists
mov
je
loopne
xchg
mov
push
mov
xchg
jb
mov
or
add
hlt
inc
mov
int3
mov
arpl
fsubrl
imul
ss
gs
mov
aas
hlt
sti
jle
das
ja
aam
lret
shrb
mov
out
movsl
mov
nop
jnp
jmp
mov
xlat
test
and
nop
jb
sbb
sub
add
pop
jnp
mov
mov
jno
aaa
sti
pop
out
xlat
movsb
notl
cwtl
inc
test
enter
push
and
popf
xor
daa
adc
push
cmp
shr
mov
repnz
mov
mov
xchg
cmp
ret
or
mov
test
mov
add
outsb
mov
and
push
jae
out
jne
mov
outsl
lock
pop
notl
movsl
cmpsb
stos
scas
cmpsl
fidivrs
out
or
and
shrl
mov
cli
das
pop
or
mov
inc
adc
ds
gs
sub
or
jg
stos
mov
dec
jbe
adc
inc
negb
frstor
add
lds
arpl
mov
mov
mov
loope
sar
jae
sub
inc
xchg
sub
mov
scas
add
iret
jl
fcmovnbe
sub
fcompp
mov
jle
test
inc
jl
jns
mov
and
loopne
and
adc
mov
outsl
fisttpll
stos
outsl
jbe
std
in
out
ss
lea
outsb
lcall
jge
xchg
cmpsb
inc
push
and
jbe
popa
dec
fisubl
lods
jns
xchg
adc
fdivl
mov
sub
insl
imul
xor
inc
inc
in
xchg
and
mov
sbb
addb
dec
adc
mov
popf
pcmpgtb
rol
inc
fcomip
jmp
out
xor
and
mov
jne
push
mov
xchg
cli
dec
loope
push
outsb
jmp
mov
cmp
pop
mov
fsubr
lea
and
call
loop
mov
push
btr
mov
shlb
add
ret
fisubs
sbb
stc
clc
lea
test
sub
aam
sbb
push
inc
or
popa
repnz
stos
lret
xor
jb
imul
xchg
pushf
cmpsl
adc
mov
test
push
fcomi
push
shlb
stos
push
mov
push
jl
mov
fwait
in
push
mov
xchg
inc
dec
lcall
iret
jnp
scas
subl
xor
data16
or
cld
pop
aaa
cmp
add
jns
xchg
into
jb
out
jb
jae
pop
ficomps
push
dec
sub
dec
cmpsb
xchg
ljmp
movsb
inc
mov
fs
add
gs
pop
sbb
nop
cmp
faddl
daa
xor
sbb
push
inc
sub
fadds
inc
inc
jb
int
into
imul
ds
or
out
call
test
in
aas
xor
adc
fwait
jecxz
rdmsr
insb
inc
or
add
ret
or
leave
cmp
mov
push
imul
jge
push
gs
dec
icebp
mov
pop
add
ja
arpl
cmp
pop
out
add
test
jl
mov
out
test
loopne
test
into
add
cmp
cwtl
lock
imul
mov
bound
cmovo
test
mov
xchg
scas
mov
ss
cmpsl
pop
pop
fs
aam
pop
daa
ja
sti
insl
aaa
pusha
inc
dec
sub
lahf
ds
xchg
int
lods
lock
push
cwtl
in
lret
enter
dec
sarb
int
scas
pop
out
das
shlb
dec
sub
sub
lcall
out
les
mov
stos
cmpb
push
inc
test
push
in
std
xchg
pop
lds
jmp
fwait
pop
clc
jb
xchg
xchg
stos
push
out
je
mov
dec
dec
or
rcr
js
jns
popf
jl
pop
pop
int3
push
addr16
pushf
xor
fdivs
ret
inc
sbb
mov
mov
imul
int
mov
dec
hlt
add
es
inc
testl
loopne
enter
movsb
inc
test
enter
rcrb
push
push
sbb
fsubrp
test
cwtl
pop
scas
fcoms
mov
push
das
jp
sbb
repz
and
push
in
jae
push
pop
sub
jae
ss
shr
xchg
push
cwtl
sub
push
fisttps
jmp
mov
cmc
pop
fdivs
lock
xchg
rorb
cmpsb
jns
fadds
ljmp
setp
sbb
sbb
ja
popa
xchg
cmp
mov
xor
pop
push
adc
add
inc
int
lahf
ret
push
adc
jo
in
arpl
xlat
jle
addr16
out
sub
insl
sub
sbb
dec
addr16
and
fcmovb
test
pop
iret
or
aam
mov
xchg
les
inc
fidivrl
jo
movsl
and
dec
outsb
mov
inc
dec
xchg
jnp
notl
out
lcall
jb
rcll
imul
pop
cli
xor
mov
add
xchg
lea
fidivl
adc
cwtl
ds
std
movsl
addl
cmpsb
fildll
pop
jl
jge
or
sbb
dec
push
sbb
fcom
and
jns
lock
aad
cli
loope
aad
inc
pop
sbb
shl
dec
pop
fwait
mov
lds
mov
sbb
lcall
gs
and
es
fdivs
adc
mov
movsb
les
dec
jp
jae
loope
test
std
xchg
ja
sub
xchg
loopne
xchg
cltd
xchg
ret
pushf
ja
aaa
pop
or
add
ljmp
fbld
hlt
inc
sbb
fs
test
fildl
bound
jo
mov
lods
mov
xor
dec
mov
jb
adc
xor
repz
and
sub
leave
and
les
adc
sbb
pop
dec
gs
jge
or
xor
pusha
lea
mov
push
leave
and
mov
lret
imul
mov
ja
test
inc
jmp
push
shll
fisubrs
stos
push
inc
ss
arpl
cmp
inc
fldcw
sbb
out
push
outsb
jne
subl
pop
xchg
test
mov
bound
stc
or
out
inc
mov
add
cmpsl
inc
cmp
jmpw
mov
adc
jmp
mov
xor
push
pop
stos
sbb
cmp
cmp
adc
inc
mov
leave
mov
sub
xchg
mov
popa
dec
mov
sub
dec
dec
out
test
clc
mov
mov
xor
sub
dec
adc
mov
xchg
pop
sbb
push
pop
push
lods
lods
dec
pop
repnz
test
jp
xchg
leave
cltd
cmp
xlat
jl
fwait
mov
into
sub
push
mov
mov
mov
imul
sub
in
fimuls
ret
imul
psrad
or
lcall
xchg
stos
fwait
ja
test
je
repnz
mov
in
mov
mov
xchg
je
lret
popf
add
mov
lcall
or
fisttpl
mov
dec
xchg
inc
add
jle
cmp
subb
jo
into
mov
sbb
hlt
mov
int3
pop
fdivr
ficoms
inc
jae
sbbl
popa
out
stos
enter
lret
push
jnp
mov
nop
pop
push
aas
gs
je
mov
xlat
ss
repnz
mov
jp
enter
xchg
jl
mov
idivl
cmp
pop
sti
cltd
mov
lds
out
xchg
dec
pop
daa
xor
lods
insl
xor
call
sahf
xorb
push
adc
aad
mov
cld
xor
imul
stc
pop
pushf
jne
cs
fisubrs
mov
loopne
cltd
xchg
pushl
lock
xchg
aaa
xlat
inc
lcall
into
mov
or
stc
sub
pushf
in
movsl
or
addl
mov
mov
jnp
popf
pushw
enter
xchg
in
adc
pop
and
dec
inc
mov
shr
sub
insl
movsl
dec
xchg
push
imull
mov
ret
sbb
xchg
les
cli
push
jecxz
pushf
ds
mov
pop
add
pop
push
inc
jno
daa
pop
adc
cmp
ret
mov
fwait
loopne
rorl
imull
call
scas
lcall
test
mov
jmp
movzbl
mov
cmp
addr16
sub
outsb
mov
out
and
jnp
ja
insb
ds
xor
adc
enter
pop
lcall
std
inc
test
icebp
dec
pop
das
add
mov
dec
adc
cmp
and
movsb
movsl
mov
mov
lcall
ss
daa
mov
mul
aas
jecxz
inc
add
ret
pushl
je
adc
adc
in
xchg
adc
pop
add
fcomp
inc
xchg
shlb
fidivl
inc
in
mov
pop
xor
mov
sub
adc
inc
mov
stos
or
jmp
sarb
sub
leave
push
xor
fcoml
ffree
fwait
call
loop
jp
xchg
int
in
add
xchg
fwait
dec
pop
push
andb
cltd
out
adc
int
mov
lret
add
stc
dec
jae
push
cmp
sbb
xchg
ret
ret
and
jno
ljmp
jns
jae
pushf
or
mov
call
jne
gs
xchg
sub
or
lock
xchg
jo,pn
mov
sahf
mov
test
dec
mov
into
pop
jae
in
sub
test
out
popf
sbb
fmull
mov
stc
lock
sub
scas
aas
xchg
jb
dec
push
cmpsl
popa
push
jne
dec
inc
movsl
test
movb
pop
test
mov
cmpsb
aas
pop
sbb
fst
mov
jae
xchg
xchg
inc
mov
push
xor
ljmp
add
mov
pop
pop
push
lret
test
lods
dec
or
fwait
jns
scas
dec
in
mov
dec
xor
sti
aad
mov
mulb
jmp
adc
xchg
mov
mov
adcl
fimuls
mov
cmp
ficoml
xor
xlat
sub
iret
sub
js
stos
ret
pop
mov
mov
mov
add
pop
jg
mov
fdivp
xor
ss
dec
xchg
cltd
fidivrs
mov
rorl
jbe
add
push
into
outsl
das
push
and
push
mov
mov
cmp
stc
inc
adc
push
adc
sarb
xor
int
add
mov
xor
cmp
push
mov
lret
ja
adc
lahf
fimuls
mov
inc
shll
insb
mov
dec
xlat
loopne
movsb
mov
pop
cmp
push
pop
je
in
adc
dec
pop
stos
aam
movsl
mov
adc
adc
sub
dec
mov
repz
xchg
adc
js
xchg
pop
add
out
mov
adc
mov
xchg
lods
mov
and
add
clc
mov
ja
mov
repnz
mov
ds
fidivrl
mov
adc
dec
insb
addr16
or
ljmp
iret
cmpsl
fistps
icebp
das
or
dec
pusha
call
sub
movsb
inc
std
sahf
iret
adc
xor
pop
and
movsb
sbb
or
les
jns
test
outsl
clc
cmp
push
mov
hlt
and
roll
aad
clc
mov
cs
push
mov
mov
ss
push
and
daa
xor
sub
xchg
in
or
cmp
xchg
adc
jnp
or
pop
cmc
inc
sub
fwait
mov
mov
fistps
mov
ds
xchg
mov
jne
jnp
and
dec
sbb
in
add
aam
into
sbb
inc
push
in
fs
mov
jne
mov
rcrl
xchg
jecxz
pop
jne
out
jb
and
cmpsl
movsl
mov
stc
ds
aad
push
insb
nop
or
push
lds
and
pop
xchg
push
sub
or
lcall
jl
out
lods
ret
test
or
lds
mov
rorb
mov
pop
jge
into
mov
ftst
mov
divl
fadd
inc
mov
add
js
jp
sti
outsl
sbb
push
cltd
pop
mov
jne
mov
pushl
and
jb
divl
mov
cmp
mov
sbb
stc
cltd
out
sbb
or
insb
arpl
mov
fcmovnu
pop
pop
jg
mov
std
push
mov
adc
mov
lret
xchg
out
test
jnp
inc
jno
xor
rorl
push
mov
add
add
dec
lea
xchg
mov
adc
sub
out
or
mov
pop
jnp
movsl
dec
iret
jecxz
mov
push
jp
divl
push
mov
fdivs
lahf
mov
and
test
xor
xchg
clc
mov
in
sarb
sub
out
aad
popa
jle
xchg
or
daa
loopne
xor
ret
add
mov
xchg
cld
lret
popf
add
call
pop
and
popa
std
aaa
hlt
cmp
cwtl
pop
inc
jns
xorl
imul
jp
push
xor
jp
push
cmpsb
test
or
lahf
lods
inc
imul
outsb
stos
aam
cld
and
pusha
cmpsl
sub
mov
insl
dec
mov
fs
stos
or
jbe
cmpsl
ffree
add
xor
push
push
jmp
in
jne
mov
adc
dec
das
cmp
rorl
shll
leave
mov
cmp
push
fdivrl
add
mov
adc
out
pop
or
std
js
push
dec
xchg
push
pop
out
adc
lea
ds
ret
inc
adc
xchg
dec
sbbb
or
bnd
push
or
adc
xchg
pushf
ds
lret
gs
push
mov
sub
add
mov
pop
clc
jecxz
aaa
push
iret
sub
cmp
es
cwtl
push
scas
sarl
lret
xor
xor
sarb
push
lcall
stos
mov
push
jmp
dec
adc
stos
loope
cmpsl
jge
gs
push
xchg
jo
filds
and
ret
cli
or
mov
in
out
out
cmp
enter
test
sub
and
cmp
or
push
inc
aad
jbe
stos
dec
insl
jae
dec
sahf
push
sbb
ljmp
rolb
sub
inc
fcmovnu
xor
lcall
bound
inc
test
mov
popa
in
mov
bound
xchg
into
mov
rcrl
adc
push
testb
in
push
jecxz
dec
inc
jecxz
mov
testb
fs
scas
cmc
xchg
dec
subb
std
mov
sub
stos
push
rcrl
jmp
pop
cmp
cs
test
cmp
inc
pop
push
lock
inc
jbe
push
sbb
mov
vpsraw
lcall
testb
xor
xchg
sub
adc
popf
mov
xchg
outsb
pop
mov
fdivp
inc
mov
pop
inc
leave
imul
cmp
pop
fbld
in
sbb
enter
mov
push
rcr
jno
sbb
mov
xchg
in
and
aaa
xchg
xor
cmpsl
lds
pop
insl
xchg
or
in
imul
xor
leave
js
push
or
loop
popf
xchg
sarl
add
hlt
mov
push
lret
mov
xor
outsl
cltd
fcmove
jb
data16
hlt
call
push
arpl
insb
jmp
fisttps
int3
dec
xor
jl
jge
insb
and
popa
pop
pop
adc
adc
ret
or
fstl
into
loope
mov
jmp
mov
cmp
ljmp
out
andl
std
rcr
mov
and
call
outsb
shr
in
pusha
sar
sub
insl
and
push
sub
sbb
cmp
xlat
movsl
fsubrl
or
dec
mov
nop
outsl
sti
and
jp
test
repnz
xor
enter
mov
orl
push
lcall
xchg
aas
test
out
decl
xor
js
adc
xor
sbb
test
gs
mov
stos
inc
mov
sar
int
xchg
cmp
lret
mov
jp
stos
xchg
stc
push
inc
adc
push
cwtl
adc
inc
je
in
outsb
cmp
in
mov
cmp
adc
push
in
iret
shrl
lret
mov
jg
pop
scas
inc
into
popa
jecxz
xchg
mov
jmp
or
arpl
les
sub
and
sbb
unpcklps
sbb
loopne
movsl
rclb
daa
push
xchg
mov
add
pop
mov
sbb
shrb
cltd
pop
imul
pop
pushf
and
mov
push
imulb
or
xor
sahf
rcll
frstor
cltd
daa
not
inc
int
cmp
lcall
sub
mov
shlb
loop
or
out
add
mov
ja
sbb
insb
loop
sbbl
sbb
mov
aas
aam
ret
push
sub
and
test
mov
pop
outsb
sub
mov
and
hlt
dec
nop
jnp
and
pop
dec
scas
jmp
bound
dec
mov
and
stos
mov
jmp
loop
leave
fsubr
out
jno
dec
div
sbb
jns
push
ds
scas
mov
movsl
pushl
jae
mov
sbb
ret
cltd
nop
jg
mov
out
out
lahf
inc
or
mov
adc
cltd
cmpsb
and
xor
cmp
in
hlt
xchg
pop
mov
cmp
sbb
and
xchg
mov
cmp
pop
adc
adc
pop
xchg
push
imul
add
push
std
cltd
dec
sub
cmp
aam
sub
sbb
rolb
popf
nop
mov
imul
sar
xor
jmp
xor
je
dec
cmp
jb
mov
jg
dec
sub
out
lret
or
push
cwtl
mov
sub
leave
loope
add
popf
and
dec
xchg
shl
scas
xchg
jae
pusha
das
xchg
xchg
imul
and
xchg
dec
pushf
test
shll
ds
imul
loope
xchg
and
push
push
add
pop
test
xor
dec
or
test
shrl
pushf
scas
mov
loope
pop
popf
xchg
mov
jno
clc
cmp
imul
sbb
pop
pop
or
stos
lea
mov
sahf
in
lahf
testb
adc
add
inc
rorl
mov
ja
nop
xor
sbb
push
jge
sti
clc
and
lahf
cmp
jo
shll
enter
jge
aaa
jne
dec
fwait
sub
roll
mov
push
xor
lods
test
mov
divb
in
fimuls
mov
jp
andb
and
std
inc
leave
pop
add
xor
test
and
cmpsl
std
sbbl
mov
inc
jne
or
pop
ss
or
outsb
arpl
fdivrl
cmp
dec
bound
xor
sbb
push
mov
or
and
pop
pop
aas
sub
push
sub
jae
fmulp
push
pop
in
mov
xchg
rclb
fs
cmp
pop
inc
data16
dec
xor
jo
into
scas
addr16
stos
xor
inc
and
xchg
cmp
and
in
clc
push
loop
lea
jno
mov
mov
jbe
cld
test
aam
dec
and
sbb
adc
negl
jno
inc
out
in
xlat
adc
pop
fsub
mov
inc
outsb
sub
lods
push
filds
mov
pop
jbe
mov
mov
and
arpl
inc
inc
sarb
jg
jae
inc
inc
cld
int3
jge
mov
inc
cmp
cmc
or
lock
push
jb
shlb
fcmovnb
ss
xlat
pushl
or
inc
push
int
xor
cmpsb
lods
add
das
sub
out
mov
lcall
inc
pusha
push
sbb
jmp
idivb
push
inc
xor
add
push
ljmp
repnz
sbb
ret
cwtl
scas
out
adc
inc
imul
jecxz
dec
add
or
fsubs
xchg
clc
dec
sub
out
jne
jl
icebp
movsb
sbb
in
mov
jnp
scas
mov
xor
call
add
xchg
shlb
or
push
cmpsl
mov
lock
sti
push
aad
sub
push
push
mov
lret
dec
xor
cmp
pop
scas
sbb
pop
cmpsl
lods
pop
push
ficomps
push
mov
xor
sub
sub
or
ficoms
cs
push
popf
pop
sub
inc
mov
fnsave
push
test
or
les
xchg
push
and
jb
sub
bound
rcr
mov
mov
xchg
adc
rcrb
mov
fwait
and
cmp
pop
cmpsl
divb
sub
pop
jb
push
pop
add
pop
mov
btc
jg
call
and
movsb
icebp
mov
cltd
fs
aas
aaa
pop
addr16
push
aam
jp
shrl
mov
outsb
fdivrs
jg
cmp
mov
adc
leave
jnp
dec
aam
sub
jge
jge
jmp
inc
pushf
mov
add
mov
xor
nop
inc
inc
sbb
fiadds
dec
mov
mov
cmp
repz
sti
testb
sbb
lock
lea
outsl
mov
lods
pop
jae
push
out
jne
in
hlt
xor
xor
xchg
out
loopne
pusha
sbb
mov
and
in
adc
sub
xchg
ret
mov
invd
cmc
sti
xor
add
outsl
mov
push
xlat
xchg
xchg
jno
fsubrp
mov
test
xchg
pop
or
fmuls
jae
xor
loop
cld
data16
pop
insb
mov
and
xchg
shl
push
dec
xchg
mov
je
pop
adc
movsl
in
into
push
mov
xor
loopne
cli
popa
sbb
adc
cld
fadds
iret
jo
adc
sbb
push
jnp
jmp
js
push
lret
xor
roll
xchg
jmp
mov
cmp
leave
out
mov
test
subl
push
cmc
add
and
dec
pop
mov
xchg
je
pop
pop
popa
xlat
mov
cltd
leave
xchg
fs
lea
dec
andps
fadds
mov
push
fwait
and
push
loop
cmp
add
sub
add
ljmp
gs
xor
jmp
or
or
aas
fisttpll
add
and
gs
cmp
mov
add
add
pushf
xchg
mov
push
ja
bound
imull
xchg
jecxz
mov
cmp
lret
and
fdivrs
and
xor
push
and
and
mov
mov
lds
and
adc
jle
mov
xchg
mov
ret
mov
out
cmp
or
mov
or
out
aas
fidivrs
and
or
xor
pop
mull
add
xchg
cmpl
adc
movsl
mov
out
shlb
andb
fs
test
adc
in
jmp
scas
dec
pop
outsl
xor
popa
mov
cmp
lret
ljmp
inc
repz
pop
cmp
dec
mov
imul
mov
lahf
add
cmp
mov
xchg
je
pop
and
test
stc
xor
enter
pushf
inc
jno
hlt
push
adc
lock
mov
cmpsl
push
mov
lds
test
mov
mov
sbb
andl
sub
sbb
fwait
mov
sti
cmp
cli
adc
ficoml
mov
fmull
nop
xchg
insb
push
je
xchg
mov
cld
not
fstps
or
pusha
dec
imul
sbb
and
loope
loop
xor
mov
and
cld
ss
sub
cmp
pop
lods
test
dec
pop
add
xchg
out
movsl
sti
xchg
mov
in
cmp
jbe
push
mov
cmp
mov
mov
mov
stos
xchg
sub
push
inc
mov
lds
stos
xchg
ss
in
call
push
dec
and
pop
xor
es
inc
shl
adc
idiv
out
aad
xlat
pop
push
lahf
divl
jl
sub
pop
push
out
popf
lret
outsb
push
xor
inc
add
out
mov
add
jmp
out
sarb
add
dec
adcb
mov
mov
jno
mov
enter
push
pop
or
insb
adc
rcrb
test
test
test
fisubrs
and
push
add
push
mov
addb
ja
xchg
bound
stos
stos
scas
testb
ret
stos
negl
dec
pop
in
cmp
mov
add
push
data16
daa
cmc
sbbl
lock
rol
push
mov
xlat
add
pop
sub
lods
dec
std
enter
ja
je
iret
inc
aas
out
das
or
sbb
pop
add
ss
bound
sub
aas
sbbl
mov
fists
add
mov
pop
or
lds
iret
mov
movsb
hlt
sar
xlat
inc
mov
mov
jl
push
inc
adc
aad
aas
loope
dec
cld
rcr
movsl
iret
lahf
push
sub
fs
cld
sti
or
inc
xchg
lds
cmp
push
inc
test
sbbl
rclb
inc
cmp
jo
popf
mov
out
cmp
cmp
adc
sub
repz
or
mov
sbb
in
lret
jne
mov
mov
pop
jo
xor
xchg
orb
fwait
xor
cmp
rcll
into
pop
pop
in
je
push
inc
xor
push
cwtl
mov
stc
movsb
push
xchg
sbb
pop
sarl
mov
mov
add
xchg
push
out
or
rep
pop
jle
push
xor
fcmovne
lods
xchg
cltd
in
cmc
iret
inc
or
mov
or
movb
and
jg
mov
es
xor
les
push
adcb
or
sbb
sub
push
ret
out
ret
add
xor
jmp
clc
push
bound
mov
mov
adcl
push
inc
adc
fwait
inc
and
add
les
add
dec
es
mov
arpl
test
in
xchg
fstp
jp
cmc
push
out
int3
xchg
bound
pop
pop
clc
in
iret
outsl
adc
push
lahf
mov
or
orl
fs
lahf
and
lea
in
jo
push
add
sub
aas
push
out
push
maskmovq
mull
out
rorl
mov
out
xchg
sub
xlat
test
xchg
dec
push
cmc
jge
jns
stc
roll
xchg
in
pushf
push
inc
dec
movsl
xchg
or
xchg
inc
in
sbb
enter
sub
push
add
in
je
scas
shll
nop
sub
rdpmc
jno
xor
sbb
jmp
leave
pushf
and
push
addb
xchg
inc
testb
and
lea
sub
mov
or
inc
js
jle
push
iret
insl
cmp
ja
scas
adcb
pop
cld
mov
pop
addr16
call
xchg
mull
jne
cmp
add
inc
or
add
test
mov
popf
loopne
leave
sub
sub
arpl
cmp
jmp
push
mov
push
fisubrl
fs
xor
iret
outsb
pushf
outsl
repz
addl
dec
cmpl
jns
xor
dec
popa
or
dec
mov
pop
sub
mov
stos
pop
lcall
sbb
mov
adc
and
lret
xor
popf
xor
dec
xor
sbb
xchg
std
scas
jmp
or
lods
cmpl
scas
jmp
loop
lahf
xchg
cmp
pop
pop
mov
mov
xchg
and
ret
loop
sbb
push
lret
and
bound
in
pop
outsb
mov
fwait
or
sub
sarl
lds
mov
add
xchg
rolb
jns
fildll
mov
test
jne
jo
cli
pop
imul
pop
cmpsl
inc
fyl2xp1
lcall
aam
cli
mov
cmp
xchg
mov
mov
test
fdivl
pop
mov
fsts
xor
scas
outsb
lahf
in
insl
add
testl
movsl
push
add
and
push
lods
dec
fmul
pop
mov
cmp
mov
not
mov
sbb
dec
mov
mov
adc
mov
pusha
push
inc
ror
sub
xor
xor
dec
inc
es
cwtl
into
aam
inc
cmp
dec
xchg
bound
mov
lcall
andb
lods
push
cmpl
sbb
mov
xchg
popa
cmpsb
data16
dec
insb
cld
mov
push
imul
sub
fdivl
ljmp
fdivs
inc
sub
xchg
sbb
aad
or
add
loop
pop
shrd
jle
outsb
inc
push
or
push
insl
pop
mov
cmp
rcll
inc
push
out
insb
jg
in
xchg
pop
shrb
sub
aas
jae
xlat
fidivl
xor
fucom
sbb
cld
scas
push
pop
mov
movsb
lock
sahf
inc
leave
lcall
mov
push
aad
push
lods
and
sbb
and
enter
ret
jo
cli
sub
adc
pop
push
pop
push
fdivs
mov
cmpl
inc
and
lds
sub
out
xchg
mov
dec
lds
jmp
lea
lcall
idivb
push
xor
or
push
movsb
sbb
xchg
sar
cli
imul
mov
das
mov
push
dec
imull
adc
rclb
inc
xorl
ds
cmp
cmp
mov
and
sbb
mov
push
or
sbb
outsb
lret
mov
xor
enter
push
shl
add
mov
loope
adc
inc
test
test
push
jo
mov
repz
add
repnz
fs
mov
adc
add
push
dec
sbb
mov
push
movsl
mov
xchg
loope
leave
inc
xor
pop
and
xchg
xlat
mov
pop
xchg
cmp
fimull
ds
xchg
je
push
dec
cmc
sbb
xchg
adc
and
popa
jg
mov
xor
inc
xor
pop
aam
push
pop
dec
shll
pop
loope
push
jle
adc
shrb
pusha
rolb
mov
loop
nop
sar
sarl
rolb
scas
cmp
xor
inc
cmp
and
testb
xchg
jp
mov
xor
es
in
pshufw
cmp
jmp
shrl
movsb
lret
lds
leave
push
push
ret
inc
in
ret
insl
xchg
test
add
adc
push
cwtl
sbb
ds
lcall
into
or
xchg
push
sahf
out
dec
out
call
pop
sub
push
lock
cmp
inc
dec
test
or
jp
inc
in
jg
outsb
adc
add
adc
jmp
out
sbb
and
adc
lods
xchg
std
movups
jbe
mov
iret
rcrl
xorl
pop
clc
daa
cwtl
sub
int
fs
or
movsb
je
test
xchg
push
push
adcb
cmp
ljmp
mov
jmp
push
mov
test
gs
dec
out
fadd
adc
stos
cmc
mov
loope
cmc
sub
fbld
loop
cld
xor
das
repz
fldcw
sti
jp
mov
jecxz
and
add
jmp
into
jo
adc
stos
mov
adc
std
enter
flds
cmp
inc
addl
cmpsb
jns
sbb
data16
push
jl
aas
insb
imul
fcoml
jnp
fwait
cmp
pop
pop
negl
insl
xchg
or
xor
mov
mov
cmpsl
pop
dec
dec
rorl
imulw
xchg
cmpsb
jbe
outsl
int
in
mov
mov
mov
jg
jmp
push
inc
ds
push
push
mov
int
outsl
mov
movsb
jo
cltd
xlat
or
inc
inc
fwait
lret
adc
or
mov
inc
push
mov
and
test
xchg
mov
sbb
xor
pop
mov
fwait
adc
push
mov
pop
push
in
jl
adc
xor
push
add
sub
push
sub
out
rcrb
and
xlat
aam
fwait
push
lcall
or
mov
movsl
add
and
arpl
mov
cwtl
cmp
loope
sbb
outsl
nop
mov
lds
mov
xchg
movsl
outsb
std
jb
sub
lret
mov
sbb
push
pop
test
push
les
sarl
sbb
loope
stos
or
xor
mov
mov
mov
jl
xor
ss
hlt
hlt
push
sahf
lea
fdivr
lcall
adcb
pop
xor
je
pusha
inc
rclb
jge
insb
mov
jmp
or
lea
data16
cs
push
push
mov
mov
or
and
lea
push
lret
into
push
out
cmp
pop
mov
jnp
mov
dec
pop
mov
cmpl
lahf
and
push
iret
fldenv
push
subl
stos
pop
cmpsb
adc
pusha
mov
ret
or
lds
jbe
gs
push
stos
or
pop
arpl
xchg
loope
xchg
jmp
inc
fmul
jg
dec
mov
sbbb
iret
pusha
mov
mov
jmp
sti
inc
push
mov
in
movsb
ds
pop
mov
xchg
pop
jecxz
insb
outsb
inc
loopne
popf
inc
mov
incl
notl
idivl
outsl
data16
xchg
setbe
test
push
jle
loopne
xor
lods
or
mov
fidivrl
sbb
push
in
jl
push
push
out
add
or
andb
push
sbb
int3
mov
clc
subl
xchg
decb
mov
and
and
pusha
lea
jmp
jge
mov
lret
lea
mov
mov
mov
dec
sqrtps
adc
sti
scas
fdivrs
pop
test
cmp
ds
mov
xor
add
movsl
adc
mov
mov
xor
adcl
pop
testl
jne
test
sbb
xchg
incb
incb
jp
repnz
ret
lods
test
in
or
fidivrl
in
sbb
lret
ljmp
imul
out
cmpps
mov
and
enter
mov
sbb
shl
dec
in
fisttpll
cmp
sub
subb
sbbl
add
adc
jns
push
fs
mov
insb
xor
push
sbb
jne
add
pop
outsb
add
enter
mov
xchg
push
push
insl
mov
faddp
push
adc
fldenv
xchg
cmpb
sub
or
cmp
or
fwait
or
pushf
cmpsl
int3
loope
cmpsl
mov
dec
dec
sbb
inc
outsb
mov
xchg
ja
jle
iret
aad
into
sbbl
dec
adc
sbb
into
les
sub
sbb
jbe
adc
fsubr
mov
dec
mov
shrb
loopne
or
stos
lods
xor
jo
xor
jnp
dec
addr16
lea
rcr
push
mov
sbb
pop
mov
pusha
aaa
stc
push
push
xchg
loopne
movsb
pusha
lea
push
mov
pop
jns
gs
inc
lret
vpsubusw
in
cmpsl
inc
mov
ljmp
pop
cltd
push
popa
in
enter
pop
insb
lret
mov
mov
cmp
lret
mov
pusha
add
dec
out
shrb
mov
mov
cmp
outsl
dec
movd
fisubl
adc
or
stos
inc
sti
mov
cmp
repz
lahf
fsubrl
xchg
pop
std
inc
pop
push
rorb
and
out
in
cmp
dec
push
dec
pop
out
mov
add
test
adcb
pop
xadd
add
xor
cmp
insl
imul
sub
mov
lahf
out
sbb
sub
push
adc
and
push
xchg
jne
std
adc
xchg
les
aas
pop
push
shlb
addb
gs
push
mov
xchg
sub
lods
rorl
fimuls
clc
xchg
je
outsb
mov
sub
mov
add
shlb
mov
out
lods
int3
inc
cmp
insl
adc
mov
mov
loope
outsb
rol
xor
mov
pop
mov
nop
lods
sbb
xchg
sub
mov
jne
or
in
bound
cld
push
mov
xchg
cmp
add
and
mov
xchg
rcrb
jno
mov
movsl
jns
imul
test
cwtl
add
clc
or
push
mov
jo
cmpsl
jp
lahf
cmp
ret
xor
mov
out
push
and
push
mov
cmp
loopne
cmpsl
addr16
imul
loop
mov
xchg
nop
lret
sahf
out
shlb
das
jp
push
lods
mov
and
ds
cmc
aad
insb
cmp
aam
and
rorb
push
pop
das
pushf
cltd
dec
cmp
stos
cmp
loope
jnp
in
enter
push
add
in
in
lcall
sbb
sbb
jne
idiv
repnz
push
or
clc
cltd
int
mov
and
push
mov
xlat
inc
adc
mov
aaa
sub
mov
and
lea
xchg
xor
sbb
je
push
xor
xor
or
mov
ljmp
add
in
push
or
push
jecxz
pop
or
fdivrl
fnstsw
test
das
jle
repz
lock
shl
mov
push
cs
push
mov
mov
mov
mov
movsl
add
xor
dec
pop
or
lret
shl
mov
test
inc
jae
xchg
push
mov
adc
mov
ret
adc
dec
add
jle
sbb
push
fsubr
and
sbb
push
mov
xchg
xor
outsl
dec
stos
jnp
daa
pmaxub
xlat
popf
inc
bound
lods
out
dec
mov
or
push
mov
hlt
arpl
push
and
dec
and
out
xchg
ror
js
cmp
cmp
and
loop
das
jecxz
mov
add
loope
sub
insb
mov
lea
mov
popf
ja
nop
sahf
add
fisttpl
xchg
dec
adc
or
insl
lret
adc
pop
scas
fisubrs
repnz
pushf
hlt
sbb
lock
push
lods
push
js
mov
dec
insl
shl
outsl
jnp
mov
xor
xchg
int3
and
aas
mov
mov
xor
je
call
cmp
pop
sahf
xor
out
idivl
push
hlt
enter
sub
cli
xor
inc
rclb
lock
and
jbe
sub
xor
push
mov
les
in
pushf
cmp
sub
int3
insb
sahf
shrl
hlt
mov
add
push
or
std
pop
daa
inc
jmp
dec
sbb
mov
jb
loop
xor
mov
aas
aad
mov
lret
inc
int
addr16
stc
loop
scas
push
nop
into
mov
loope
sahf
sahf
mov
xor
adc
and
popf
std
mov
jp
aaa
and
repz
sahf
and
jnp
adc
jmp
gs
cwtl
push
jo
mov
and
fsubl
outsb
aaa
cmc
lahf
add
mov
sub
out
rorl
shr
addr16
test
cmp
div
mov
cwtl
fsubl
mov
negl
sub
push
leave
fildl
cmovs
packuswb
in
dec
cmpsl
int
daa
push
pop
jno
testb
hlt
adc
jp
add
push
jmp
subb
or
addl
sub
enter
push
js
jle
in
scas
in
xor
sbb
movsl
shr
movsl
cmpsb
outsl
sub
lock
outsb
dec
mov
cs
jbe
jg
dec
sub
sbb
aam
sahf
sub
sub
rcll
xlat
add
outsl
sub
mov
fcmovnb
in
inc
mov
mov
and
negb
notb
mov
repnz
xchg
dec
fwait
mov
cmpsl
lock
mov
pop
cli
and
xor
mov
mov
or
test
mov
xchg
mov
add
jbe
pop
mov
aaa
inc
mov
lahf
adc
push
xchg
jmp
ljmp
dec
pop
fmuls
imul
push
add
mov
mov
mov
les
sub
or
cmp
inc
hlt
jmp
out
out
fildl
imul
lret
ja
pop
cmc
aas
mov
fcompl
lods
mov
cld
es
mov
popa
and
and
xchg
sub
push
ret
out
sahf
inc
xor
inc
sub
outsb
jge
test
in
or
int3
mov
inc
pusha
mov
pop
jmp
xchg
outsl
fs
push
adc
in
push
dec
adc
push
movsl
xlat
cmpsl
sti
mov
pop
adc
pop
imul
xchg
mov
add
mov
or
pop
xchg
dec
bound
add
popa
push
xchg
dec
xchg
dec
ja
jbe
inc
scas
int
into
lods
stos
mov
xchg
mov
pop
incb
mov
mov
sub
push
xchg
inc
or
les
insb
mov
cmpsl
mov
dec
fwait
push
sar
outsl
loop
subl
test
xor
clc
pop
sbb
into
add
pop
in
stos
lods
stos
out
ret
cld
aaa
jmp
subl
lods
pusha
pop
fisubrs
sahf
push
mov
xchg
iret
push
hlt
push
lods
push
jp
pop
jbe
lods
pop
das
mulb
aas
cmpsb
pop
cmp
jmp
lods
andb
dec
pop
movsl
pop
pop
andl
lods
inc
stos
es
ret
mov
popa
mov
in
xchg
adc
in
leave
mov
mov
testb
aaa
aam
sbb
inc
dec
pop
or
xor
and
xor
sub
mov
fdivl
sahf
cli
stos
fs
arpl
mov
mov
outsl
mov
cwtl
iret
stc
sbb
jnp
push
loop
icebp
jb
loopne
pop
mov
mov
dec
loope
cld
sub
andl
jns
icebp
push
sahf
push
fidivl
jbe
into
or
or
int
xor
cmp
imul
adc
shr
inc
aas
pop
scas
rol
fs
dec
xchg
test
jno
call
lock
xchg
sarl
bound
or
mov
cli
sbb
xchg
mov
mov
and
mov
in
es
je
call
aaa
testb
pop
cltd
and
ss
lods
cmpsb
xchg
inc
stos
add
mov
gs
jae
mov
scas
shl
push
mov
dec
js
add
cmpsl
cmp
movsb
fcmovu
lea
sbb
mov
mov
adcb
push
imulb
mov
mov
cmp
mov
pushf
jg
mov
adc
pop
popa
pop
pop
fst
jge
scas
je
xor
cltd
push
xor
cli
and
flds
movsb
add
out
pop
push
cltd
aam
mov
pushf
test
mov
xor
adc
push
xchg
mov
xchg
cwtl
in
nop
in
data16
and
dec
mov
in
mov
out
mov
icebp
sbb
sub
pop
addr16
push
shlb
dec
insb
jne
cli
add
mov
or
dec
test
or
enter
ja
jns
xchg
xchg
orb
cmp
shlb
inc
add
push
aaa
sbb
mov
mov
scas
out
inc
repnz
sbb
mull
out
jle
cmp
daa
sbb
lock
xchg
mov
pop
mov
loopne
into
fcmovnbe
stos
mov
ss
inc
or
popa
es
clc
negb
test
xchg
jne
subl
xchg
das
xor
mov
push
inc
fimuls
daa
sarb
mov
jne
repz
fistpl
mov
jae
mov
mov
loope
aad
aad
mov
int
add
sbb
aad
mov
clc
sub
mov
push
int
mov
jp
add
out
mov
push
xchg
std
lcall
and
cwtl
int
xchg
hlt
or
sub
xchg
add
pop
pop
cmp
xor
fcomps
pop
pop
rcrb
js
mov
mov
push
xor
adc
leave
aas
ds
nop
mov
push
add
adc
jbe
cmp
cmp
test
mov
ficompl
and
xchg
insb
mov
out
stos
push
pop
mov
sbb
sub
aaa
ret
xorl
mov
in
adc
jbe
fists
dec
adc
lret
and
jg
adc
pop
or
mov
jnp
xlat
cmp
stc
xlat
adc
out
mov
out
sarb
rcr
stos
loop
cmp
dec
xchg
mov
xchg
xchg
loope
fwait
inc
xchg
adc
adc
and
negl
pusha
outsl
mov
js
push
mov
cld
js
or
out
movsl
fdivrl
call
iret
or
es
cmc
jnp
enter
pop
stc
xor
mov
iret
and
test
jo
add
loopne
ror
xorl
sub
cwtl
sub
in
or
incb
test
mov
stc
push
inc
fwait
pusha
jne
dec
inc
ud2
xor
das
sbb
add
ror
inc
icebp
fildll
pop
or
xor
xchg
rolb
dec
jbe
xor
mov
add
repz
shrb
xor
add
shlb
cmpsl
out
push
lods
ljmp
popa
jle
ret
shll
imul
arpl
mov
pop
inc
pop
lret
and
vcmpps
incl
fiadds
sbb
test
or
lcall
fidivrl
push
pop
sub
jecxz
outsb
push
lds
aas
sarb
into
sub
pop
jle,pn
iret
xchg
lret
aas
cmpsl
mov
sbb
jmp
sbb
jo
push
mov
mov
mov
sahf
aad
js
mov
test
fidivrs
mov
sbb
out
or
pop
lcall
repnz
ss
push
xchg
or
test
or
addr16
fcomps
or
leave
addr16
push
cmp
and
pop
inc
test
pop
adc
push
xor
jp
pop
jle
mov
cmpb
xchg
pop
loop
pop
jmp
mov
ljmp
cmpsb
jle
sbbb
int3
mov
and
or
stos
sub
xor
mov
popf
leave
ret
mov
sbb
inc
fdivs
mov
int3
test
filds
sub
sub
js
fsubrs
push
inc
push
mov
ljmp
add
inc
or
inc
jg
in
sbb
outsb
xchg
in
push
bound
shr
jo
psubsb
sbb
mov
ss
sub
lods
loopne
aam
rclb
cmp
pop
imul
jbe
fsubl
pop
repnz
rolb
icebp
testl
cmc
jge
dec
ret
int
loopne
fistpll
push
insb
daa
sbb
mov
shll
iret
pusha
jnp
dec
dec
js
js
lret
cltd
inc
pop
les
mov
cmp
push
js
dec
sub
pop
dec
sub
inc
adc
ss
cmpsl
pop
shll
js
in
into
imul
adc
fsts
mov
mov
sbb
pop
lock
push
scas
aam
xor
stos
pop
or
dec
imul
lock
push
js
aam
addl
rcrl
fsub
jnp
cmp
das
jle
popf
insl
push
stc
cli
arpl
out
in
gs
dec
shlb
mov
or
pop
ljmp
mov
rcrl
fildll
sub
sub
imul
ja
sub
inc
and
cmp
roll
jo
subl
sub
cmp
xchg
lahf
and
sahf
cld
cmp
hlt
cld
out
dec
repz
into
xchg
push
fisttpll
sub
ljmp
cs
mov
cs
fcmovbe
not
dec
loopne
jle
and
fistpll
stos
pop
push
pslld
sahf
sbb
stc
arpl
add
mov
sahf
adc
cmpb
or
iret
clc
dec
mov
mov
addr16
dec
push
jle
mov
sbb
add
flds
out
icebp
ja
fbld
mov
repz
jno
imul
xchg
jl
mov
stos
pop
jecxz
adc
xchg
mov
pop
push
imulb
scas
and
rol
push
enter
jge
jne
or
mov
movsl
adc
xor
mov
cmc
pop
out
movsb
mov
dec
shl
jge
pop
mov
sbb
test
faddl
lret
fsubrs
cmc
push
adc
loopne
jle
pop
xor
fcomi
sarl
aam
mov
dec
test
inc
mov
lods
sub
pop
stos
loope
adc
add
push
adc
inc
jbe
outsl
pop
nop/reserved
roll
pusha
mov
mov
addr16
jle
dec
push
mul
push
cmpsb
pop
mov
inc
inc
mov
flds
xchg
add
push
scas
bound
or
and
ljmp
imul
repnz
and
mov
pop
insb
insl
outsb
aaa
mov
push
cltd
das
pop
cmpsb
xor
fs
inc
cmp
imul
push
sub
mov
loope
push
cmp
add
rclb
jge
lock
cld
scas
pop
loopne
cli
inc
push
and
in
or
cmpsb
lea
dec
rolb
mov
xchg
mov
push
xlat
mov
es
push
xor
sub
pusha
push
mov
cmpsl
insl
lahf
sbb
xchg
cmp
push
fld
lods
mov
std
or
and
repnz
test
mov
xchg
xor
iret
lods
push
out
dec
faddl
mov
xchg
pushf
push
sbb
inc
pop
sub
sbb
lret
add
mov
mov
mov
das
insl
insb
lds
push
sahf
fists
and
shlb
adc
int3
rcr
mov
mov
and
iret
frstor
jbe
sub
add
xchg
ret
jg
dec
inc
xchg
cs
inc
mov
xor
lods
xor
andl
and
or
ljmp
add
cmpsb
fisubl
or
les
jg
ret
fcoml
sbb
popa
push
mov
mov
push
xchg
cld
addr16
and
test
scas
ret
mov
out
xor
jnp
push
stos
xchg
xor
cmc
sahf
xchg
or
cmpsb
pop
pop
xor
mov
mov
mov
aad
or
cmpl
adc
cmpsb
add
xor
fnstenv
push
fisubl
inc
xor
add
push
inc
out
or
outsl
mov
movsb
gs
or
mov
iret
push
mov
int
jg
test
xchg
ficoms
loopne
or
out
and
inc
dec
or
andl
inc
ret
lcall
cmpsb
jnp
dec
out
or
mov
or
scas
mov
jns
mov
daa
lret
stc
test
out
test
mov
mov
repz
jb
mov
xchg
push
sub
in
in
jno
jb
jns
xcrypt-cbc
cmpsl
xchg
jno
in
xor
jns
insl
fnsave
lds
fnstenv
test
push
lret
mov
out
push
fiadds
mov
int
jge
clc
mov
call
adc
in
mov
test
in
je
ss
mov
sub
pop
aad
push
sarl
out
cmc
insl
mov
dec
es
pushf
push
icebp
add
sub
arpl
add
lret
ret
movsl
push
push
cltd
xor
filds
inc
mov
push
jl
test
mov
inc
mov
fsubl
add
movsl
popf
loop
sbbb
xor
test
cmp
cmp
outsl
xlat
lret
imul
fs
rsm
adcl
call
mov
xchg
and
aas
push
xchg
hlt
popa
push
rcrb
push
std
pop
push
imul
out
cmpb
lahf
cs
orb
mov
aam
dec
jle
add
mov
sub
call
test
adc
dec
cmpsb
aam
mov
ret
pop
pushf
cld
pusha
fldl
dec
loop
or
sub
test
pop
adc
pop
adc
and
bound
inc
cmp
mov
sahf
pushf
jmp
pop
hlt
in
mov
mov
pop
aam
cmp
cmp
mov
movsb
loopne
faddl
mov
cmp
jle
test
or
mov
out
in
movl
stos
fwait
and
popa
cs
cmpb
mov
jne
out
shl
dec
xchg
adc
jbe
pop
rorl
ret
into
dec
stos
rep
inc
cmp
cmpsb
mov
loopne
inc
jnp
or
sub
push
hlt
lahf
sbbb
arpl
ret
xchg
call
popa
imul
out
outsb
sarl
popa
lds
push
add
std
sub
shrl
jnp
iret
das
push
popf
inc
movsl
xor
movb
inc
bound
aad
es
mov
mov
dec
fmull
lods
stos
pop
adc
ds
cmp
inc
aam
adc
lahf
mov
inc
mov
mov
dec
gs
fmuls
cmp
inc
lahf
push
xchg
dec
hlt
lea
popa
lock
popf
outsb
mov
fs
jae
jae
pop
lods
inc
cmp
icebp
enter
bnd
xor
sbb
fsubp
xchg
aad
and
int3
bound
inc
inc
lods
pop
scas
mov
xor
add
and
xor
popf
add
mov
or
xchg
int3
mov
cmpsl
xor
or
fildl
test
test
adc
daa
ret
imul
jg
pop
dec
icebp
inc
push
sbb
mov
ljmp
push
mov
sub
mov
and
or
aaa
mov
lret
jmp
sbb
mov
bound
lods
out
pushf
repz
rorb
out
imul
jno
jecxz
call
pushf
ja
sti
hlt
inc
adc
repnz
dec
jge
scas
shrl
sbb
xor
push
push
push
testb
lods
movsb
filds
pop
test
mov
ss
sbb
sub
cmp
cmc
lret
lret
jne
jecxz
and
pop
adc
add
js
sbb
push
out
hlt
lcall
xor
test
push
add
shr
push
push
adc
add
pusha
inc
std
inc
jl
les
js
push
js
dec
pop
pop
js
xchg
ljmp
cmc
lret
cmp
and
mov
sub
mov
jmp
dec
and
xor
insb
movsl
or
dec
insl
pop
push
and
dec
rcrl
cmc
adc
jo
dec
dec
imul
pop
mov
je
adc
mov
iret
stos
movsb
lock
mov
fisubrs
ja
mov
dec
adc
mov
pop
mov
daa
jp
adc
cmc
jo
jmp
lahf
mov
push
incb
aaa
repz
hlt
mov
adc
inc
fnstsw
pop
mov
add
loope
sbb
xchg
sahf
sbb
int3
push
dec
xchg
leave
ljmp
out
mov
cmp
sti
cmp
fs
in
std
jae
loop
pop
in
sub
scas
sbbw
inc
js
add
xchg
inc
xchg
jb
xor
push
jbe
sub
loopne
repnz
xchg
pusha
repz
sub
pusha
imul
or
mov
popf
mov
jb
fnstsw
rcrb
out
mov
jbe
mov
incl
jns
mov
xchg
cmp
pop
push
dec
mov
pop
ret
push
xor
mov
push
sbb
js
mov
in
mov
fisubs
std
shlb
jle
dec
iret
ret
jge
push
es
ljmp
mov
orb
je
dec
mov
inc
mov
and
mov
int
or
pop
jo
cs
shrl
sbbl
mov
movsl
nop
stc
js
scas
ss
or
stc
mov
clc
pushf
stos
cmp
push
cmpb
aad
out
push
je
fsubrs
rol
add
dec
pop
push
mov
xchg
or
sar
cs
jecxz
dec
pop
xchg
leave
mov
xor
aad
jp
mov
std
sti
int
pop
lret
ret
pop
mov
mov
rorb
dec
lods
push
push
sti
mov
and
and
out
or
orl
dec
jmp
stc
jae
fdivrs
scas
fsts
jmp
arpl
sarb
rclb
xchg
sarl
pop
mov
dec
sbb
mov
subl
xchg
call
into
stos
lea
push
stc
ss
into
mov
test
das
imul
fadd
push
hlt
pop
and
lcall
and
jno
int
xchg
mov
mov
fs
adc
xchg
insb
jno
xchg
adc
icebp
fiadds
notl
int
mov
pop
clc
push
adcb
jge
rcll
fs
insl
cli
in
scas
add
pusha
outsb
lea
lahf
or
jle
xor
xor
inc
mov
push
adc
scas
mov
icebp
sub
repnz
fs
xchg
insb
jns
subl
sub
lock
xchg
push
xor
and
cld
in
pop
sub
subb
loope
mov
sub
fadd
leave
fistl
inc
xor
push
popl
pop
cli
jae
mov
ja
xchg
icebp
les
arpl
cmp
stos
iret
mov
jle
cmp
js
js
mov
lea
dec
sahf
out
cmc
add
cmp
pusha
push
hlt
in
add
sub
inc
sub
push
inc
cmc
jle
jnp
cld
ret
xchg
lods
clc
bswap
sub
cs
mov
popa
pop
push
loope
addl
sbb
repz
lods
les
push
ret
and
rcrb
inc
mov
dec
sub
fadds
mov
leave
mov
sub
jp
cltd
scas
sbb
lahf
sbb
out
push
stc
adc
stos
push
mov
shlb
adc
sub
imul
xchg
xchg
pop
mov
outsb
clc
sbb
xchg
mov
push
jae
aas
mov
outsb
scas
daa
lahf
mov
inc
mov
xacquire
mov
add
addr16
orb
mov
cmp
xchg
pop
cmp
mov
or
xchg
dec
jo
repnz
inc
pop
pop
call
mov
xchg
jmp
sbb
addr16
aas
loop
mov
sub
mov
mov
mov
dec
fwait
mov
rorb
xchg
sub
inc
xor
jne
adc
nop
lock
jnp
jg
push
aas
pop
std
jo
lret
push
rorb
fsubrs
out
and
popf
xchg
jmp
aam
cld
mov
pop
arpl
rclb
inc
push
pop
xor
or
jg
or
daa
int
fildll
jp
push
divb
fildll
xchg
xchg
add
test
adc
xor
cmpsb
mov
xlat
aam
and
mov
rcrb
cld
sub
stos
test
shrl
outsb
jne
mov
jge
icebp
js
or
add
les
dec
test
fwait
dec
xor
dec
jp
in
sbb
cli
shlb
fimuls
xor
das
in
jbe
xlat
stc
adc
xor
aam
jecxz
jno
lods
lods
and
clc
cmc
xchg
cmc
scas
dec
jne
clc
push
test
insb
lret
xor
paddsb
inc
jecxz
mov
mov
mov
ss
sbb
pop
bound
rcll
push
jne
movl
sbb
mov
sub
jae
xor
loopne
dec
jl
test
cli
int3
dec
ss
mov
aam
test
fadds
scas
mov
jmp
or
push
or
xchg
push
js
popf
pop
subl
add
push
mov
inc
add
lods
jne
rcr
ret
repz
pushf
mov
lock
xor
hlt
ljmp
repnz
das
pushf
mov
cwtl
ss
mov
jge
incb
cltd
inc
bt
mov
iret
hlt
add
je
jne
scas
sub
fldt
out
pushf
das
xchg
imul
rolb
and
mull
shrb
add
jle
insb
stos
js
push
clc
orb
mov
xchg
fistpl
lahf
leave
ds
add
mov
dec
add
clc
out
rcrl
pop
pop
mov
cld
in
dec
jo
adc
mov
inc
stos
mov
and
mov
mov
dec
pop
pop
pop
sahf
icebp
mov
out
xchg
sarl
sub
fbld
mov
ret
and
mov
jnp
rep
into
outsb
cmc
aas
mov
cmpb
jmp
in
iret
inc
roll
or
stc
das
test
mov
lods
push
lahf
gs
jbe
or
or
sub
faddl
lea
movsl
pop
or
pop
xor
inc
xchg
jae
inc
sub
mov
mov
je
mov
push
jmp
movsb
js
xchg
pop
cmp
mov
push
inc
dec
fsub
push
xchg
ss
xor
push
mov
push
test
mov
push
jb
lods
adc
jae
ret
lock
sbb
inc
out
jmp
xor
pop
xchg
inc
jg
fwait
push
scas
adc
fldcw
movsl
insb
pop
or
cwtl
lahf
shlb
sbb
mov
pop
sub
push
setns
xor
aad
fs
idivl
mov
test
xor
xor
xchg
mov
pop
shl
cmc
mov
sub
mov
sub
rcrl
mov
push
and
addr16
sbb
movsb
adc
rep
outsl
cmp
divl
cmp
icebp
xchg
jmp
mov
inc
mov
outsl
rorb
in
les
bound
push
cmp
pusha
int
mov
loop
aaa
cmp
xchg
lcall
xchg
mov
sub
inc
mov
adc
xchg
adc
xor
or
icebp
test
inc
inc
xchg
scas
lds
mov
dec
push
sbb
shlb
and
cmpsl
adc
call
pop
jle
inc
inc
stos
mov
ficoml
shl
loop
mov
pop
js
in
data16
pop
ja
cmpsb
xor
adc
push
xchg
in
ljmp
push
sub
add
xor
dec
jle
je
cmp
stc
push
mov
xchg
arpl
out
lcall
xor
pop
faddp
cmp
lret
xchg
sbb
insl
mov
push
fs
ss
fidivrl
stos
pop
fwait
sub
sub
fstpt
add
scas
sub
imul
mov
paddsb
mov
xor
fistpll
and
sbb
xchg
pushf
adc
push
jb
loope
orb
js
push
add
imul
xchg
mov
mov
lods
xor
test
xchg
sub
daa
inc
dec
jae
push
clc
mov
xor
inc
push
jo
scas
pop
mov
pop
aas
in
push
adc
xlat
out
lret
stos
rcrb
jle
jne
xchg
imul
ja
ds
nop
cli
mov
lret
jle
fnstcw
addr16
fsub
shrb
gs
lret
test
mov
mov
scas
pop
js
sbb
lret
push
xchg
sti
mov
jb
mov
pop
call
fs
outsb
mov
adc
in
call
mov
jecxz
jg
push
xor
adc
insl
xchg
mov
fadds
icebp
or
pushl
cmpsl
divb
xchg
aad
push
push
js
mov
push
std
ss
and
push
jnp
jl
and
dec
lock
mov
push
daa
jmp
pop
xor
mulb
loopne
mov
jg
std
idivl
fisubl
aas
out
xchg
xor
pop
cli
pop
xor
aas
pop
mov
mov
insl
push
out
sub
dec
int3
sbb
cmpsl
data16
mov
jmp
jnp
lods
mov
int
flds
cld
sub
test
inc
adc
lds
push
movsb
jne
add
inc
arpl
fbstp
xchg
lret
pop
push
insl
jno
out
jecxz
mov
mov
aad
jg
sub
inc
mov
pop
out
pop
jp
int
int3
ret
cmpl
mov
pop
js
mov
lods
sahf
scas
dec
js
and
mov
jmp
mov
ds
loopw
aaa
xchg
js
sub
loop
sub
cltd
or
dec
pop
xchg
or
mov
pop
les
ret
jl
mov
mov
test
std
mov
ret
sbb
inc
dec
lods
jmp
mov
push
add
mov
inc
leave
and
and
dec
and
fldl
fcmovnu
cmc
test
inc
addl
cmp
stc
pop
out
xor
test
ds
mov
cs
stos
lea
xchg
push
sbb
or
cmp
jns
fcmove
loopne
push
stos
lds
fmuls
popa
shll
pop
cwtl
inc
lods
out
dec
and
bswap
xlat
lods
jg
mov
push
leave
jne
movsb
les
iret
aaa
mov
sbb
dec
clc
daa
call
pop
dec
pop
dec
lret
movsb
or
scas
fsubp
cltd
push
sbb
sahf
fs
jge
pop
pushf
mov
mov
insb
inc
xchg
sbb
inc
jle
jne
lock
fistpll
sbb
sbb
sub
je
lock
push
adc
xchg
mov
fs
sbb
outsb
push
in
inc
sub
cmp
cmp
xchg
in
popf
pop
or
sbb
imul
mov
dec
xor
out
xor
dec
ret
push
and
mov
dec
sbbl
pop
dec
mov
test
and
ss
mov
push
jbe
xchg
lods
inc
dec
or
inc
lods
adc
jle
test
stos
test
pop
in
data16
mov
add
mov
insl
loopne
dec
jge
xlat
dec
push
xor
add
movsl
loopne
xchg
cli
or
std
mov
lret
jbe
fwait
in
pop
or
inc
sub
imul
testl
jecxz
jge
and
leave
repz
jne
jecxz
or
test
sub
and
push
insb
mov
adc
inc
xchg
lods
add
push
call
leave
and
imul
mov
divl
movsb
in
in
dec
pusha
fwait
sarl
cmpsl
int3
sub
lcall
jl
jle
sahf
push
push
sbb
pop
fwait
mov
outsb
mov
lcall
lahf
fcomps
cld
xchg
rolb
rcr
pushf
mov
repz
jne
adc
and
test
and
push
pop
jecxz
repnz
popa
lods
adc
hlt
adc
xchg
imul
pop
sbb
js
aas
arpl
lock
sub
lods
or
xlat
cltd
mov
cmp
pop
flds
ljmp
test
jecxz
add
xor
add
or
test
scas
push
arpl
dec
cmp
cmp
int
add
ret
divb
xor
fstps
add
mov
sbb
xchg
fwait
pop
sbb
jnp
mov
pop
push
insl
or
mov
popf
xor
sbb
pop
cmp
jne
mov
cmp
movsb
ja
dec
or
jno
pop
stos
and
sub
leave
pop
outsb
stc
pop
dec
cmc
bound
in
outsb
loop
in
fisubrs
mov
pop
movsb
pop
fwait
sbb
push
imul
scas
mov
xchg
test
mov
int
arpl
xor
lret
adc
adc
dec
xchg
fisubs
shll
test
adc
cmpsb
inc
jp
sbb
xchg
leave
jle
push
ds
repnz
inc
ljmp
loope
mov
fcmovb
add
mov
cli
repz
pop
leave
enter
loopne
addl
adc
mov
outsl
dec
notb
jnp
ror
adc
ljmp
mov
loop
aaa
stc
and
cmp
and
or
cmp
pop
pop
inc
inc
mov
adc
test
ja
pop
cwtl
pop
pop
movsb
add
pop
repz
xchg
repnz
addr16
jle
inc
ds
mov
in
mov
add
fsubrl
cli
pushl
test
cmpsb
cs
dec
shrb
xchg
imul
mov
notl
push
jle
pop
cs
lret
sub
sub
out
adc
push
push
xchg
dec
mov
push
xchg
lret
sub
cmp
lea
push
out
jbe
and
add
and
sbb
in
lret
out
xchg
adc
cmpsb
rcrb
sub
cltd
jno
aaa
ret
test
bound
dec
push
push
jl
lds
in
inc
popf
lret
xchg
mov
adc
daa
sti
adc
pop
or
pop
fcmovb
or
out
out
iret
mov
mov
lahf
add
cltd
mov
xchg
jp
shll
pop
int3
add
jbe
mov
jbe
jbe
push
je
mov
int3
lea
lds
jmp
clc
mov
fwait
imull
icebp
sbb
aad
and
leave
inc
fdivrl
loopne
xor
out
add
mov
or
in
nop
pop
pushf
adc
daa
fucomi
bnd
filds
divl
pop
fisubs
push
dec
add
es
inc
movl
sti
push
sub
mov
ficompl
mov
and
inc
lods
sub
or
push
je
xchg
cmp
push
ret
test
inc
sbb
xchg
push
imul
stos
sub
pop
test
cltd
lret
jb
in
ret
mov
xor
xchg
aam
test
imul
dec
scas
iret
xchg
leave
sarl
cwtl
je
xor
push
jecxz
mov
cld
mov
cmc
pop
and
shld
pop
hlt
push
xorb
push
sub
sbb
mov
jne
add
sub
cmp
add
movsl
mov
scas
bswap
pop
sub
aas
adc
movsb
xchg
pop
sub
cmpsb
repnz
xorl
loopne
jno
loop
cmp
aad
adc
push
and
or
roll
mov
cmp
fbld
push
popa
pop
scas
or
stc
jp
leave
xchg
mov
and
mov
mov
mov
sub
ret
imul
out
aam
inc
jge
movsl
lret
sub
xor
mov
ds
xor
pop
adc
xchg
adc
sbb
inc
cld
mov
outsl
dec
mov
icebp
sbb
jns
push
fstl
pop
gs
shl
call
jb
mov
lock
stc
addr16
cmp
mov
jp
cmp
jo
lret
cwtl
loop
xor
dec
inc
mov
in
xor
pusha
ljmp
xor
dec
es
inc
xchg
push
mov
cmp
mov
test
inc
repz
pop
dec
ror
movsl
cmp
and
pop
shlb
mov
hlt
jne
cltd
adc
rcr
mov
push
ret
imul
fsub
out
lock
pop
insb
mov
xor
pop
xchg
xor
xor
pop
jp
dec
or
mov
sub
and
mov
js
hlt
movb
aam
dec
sub
pop
std
xchg
out
inc
rcll
sub
jo
mov
push
enter
int
adc
inc
push
jl
aad
mov
dec
jbe
and
imul
ss
sub
arpl
cmp
sub
jne
imul
es
push
push
mov
cmp
jns
loopne
fs
aad
push
add
pop
or
test
into
lcall
arpl
sbb
sub
ja
scas
lcall
ljmp
jo,pn
ljmp
sbb
xchg
fwait
cmp
nop
shlb
xchg
mov
sarb
jns
pop
xchg
lods
jmp
push
aad
mov
adc
sbb
hlt
xor
scas
xor
jne
shl
or
and
xor
or
insb
cld
into
adc
fidivs
repz
mov
cmc
enter
nop
cs
pop
fsubp
jb
rorb
jnp
pop
xchg
and
imul
sti
out
rcrl
push
sbb
jns
out
or
push
mov
dec
ljmp
mov
ret
cmp
dec
sub
mov
adc
pusha
pop
pop
idivl
repnz
adcl
push
repnz
jae
cwtl
xor
xchg
pusha
shll
in
or
insb
adc
jl
jp
mov
movsl
mov
arpl
inc
add
cmp
jg
mov
push
inc
ficoms
mov
mov
ds
push
sbb
mov
jne
mov
mov
rcl
mov
cli
adc
xchg
loopne
ljmp
sbb
ds
inc
mov
ret
push
imul
xlat
bound
scas
mov
and
push
inc
mov
xor
psubw
sub
mov
lds
fisubs
test
pop
adc
ss
leave
pop
clc
in
ja
ljmp
add
into
cmpsl
out
mov
mov
add
push
sbb
leave
mov
je
arpl
xchg
add
negb
jge
dec
or
mov
jecxz
leave
das
push
inc
push
stos
lock
lcall
cmp
in
sub
pop
mov
outsl
dec
js
hlt
xchg
adc
jle
rcrb
cmp
xchg
scas
sbb
adc
stc
dec
xor
cld
push
lcall
push
and
sbb
dec
sbb
or
mov
addr16
cmp
cmp
mov
lods
add
cmp
push
push
inc
fsub
sarb
and
inc
sarl
xchg
test
out
sub
inc
je
xor
mov
test
mov
inc
in
mov
mov
sub
sbbl
mov
or
and
adc
push
pop
push
scas
xor
sub
push
ret
pop
lods
das
incb
stos
mov
pusha
ss
jns
out
data16
icebp
iret
pop
mov
mov
addr16
dec
data16
ret
cmp
pop
hlt
popa
mov
cwtl
clc
icebp
shr
movb
ja
test
scas
jge
cmpsl
mov
and
aam
adc
data16
dec
jecxz
testb
rcrb
loope
test
push
cli
dec
mov
jne
mov
ficompl
or
mov
add
push
sahf
xchg
xor
int3
cmp
in
adc
xor
mov
pop
arpl
out
sub
mov
popa
movsl
mov
enter
dec
outsb
pop
mov
mov
jl
jns
pop
pop
mov
cltd
sbb
ss
sub
scas
mov
int3
mov
lods
pop
cmp
ret
xor
bound
fdivrs
popf
loope
cltd
inc
clc
scas
cli
adc
aad
out
xor
stos
dec
push
pop
xchg
and
addr16
add
scas
sub
jl
stos
sti
mov
ret
fstpt
cmp
adc
inc
xor
aam
aam
mov
adc
in
or
push
dec
insb
pop
inc
aam
adc
inc
mov
xor
cmpsl
repnz
or
pop
test
enter
dec
inc
ret
ljmp
dec
fdivrs
adc
mov
pmaddwd
scas
jae
mov
arpl
cmp
pusha
fistps
sbb
push
inc
or
or
hlt
test
std
xor
inc
mov
dec
mov
je
mov
cmp
push
push
xor
sbb
xchg
mov
jmp
jl
inc
push
je
cmp
sti
xor
mov
subl
push
inc
stos
imul
aaa
and
addr16
ds
stc
cmp
scas
push
call
jae
scas
push
fs
push
and
mov
insl
test
sbb
mov
notb
dec
mov
outsl
nop
push
push
mov
adcl
bnd
rcll
jae
mov
xlat
int3
mov
out
clc
mov
add
inc
das
push
jnp
divl
sub
clc
jns
xchg
push
adcb
cli
pop
sbb
push
hlt
data16
repnz
mov
cmp
mov
loope
mov
iret
fs
mov
mov
sbb
add
xchg
mov
xor
cmp
xchg
lret
arpl
enter
xchg
adc
xlat
xchg
mov
mov
iret
dec
in
movsl
pop
xor
add
imul
std
sarb
in
sbb
test
test
adc
pop
loopw
xchg
push
push
subb
dec
mov
xchg
sti
cld
pop
xchg
sarl
mov
push
xor
adc
pop
dec
enter
mov
aam
dec
push
or
nop
gs
adc
pop
ja
jmp
xchg
pop
and
sahf
push
subl
push
and
push
daa
scas
dec
mov
call
outsb
mov
insb
stos
dec
test
pop
mov
imul
dec
inc
cmp
mov
mov
gs
cltd
jne
xchg
or
jl
mov
cmovne
pop
cmp
test
jbe
xor
xor
iret
sub
cmpsl
adc
and
sbb
dec
cmp
in
shlb
aaa
adc
inc
cmp
je
repnz
sbb
add
sahf
xchg
and
push
call
fsubl
pop
xchg
mov
insb
insb
ret
jg
pop
mov
jno
in
cmp
add
and
xchg
lret
insl
cmp
es
int
daa
inc
vcvttsd2si
test
and
dec
sub
mov
lods
add
daa
and
mov
addb
test
out
cmc
mov
or
aas
ds
xchg
mov
in
filds
and
jnp
insl
stos
push
shlb
fs
push
ljmp
cmp
add
test
insl
ret
movsl
adc
test
xchg
inc
idivl
dec
fistpl
and
sub
sbb
enter
inc
sbb
andl
adc
push
add
push
ret
out
fwait
mov
add
addr16
loopne
lds
fwait
inc
add
jns
sbb
adc
sbb
or
das
shrb
mov
testb
xor
adc
popf
popf
dec
out
xor
das
pusha
cmp
cmp
jmp
es
jge
fldt
jecxz
std
ja
xchg
cmp
jecxz
jne
adc
pop
inc
aad
jp
add
xor
add
jo
fsubr
sbb
pop
push
shlb
lods
test
outsl
ret
test
sti
mov
lods
dec
fidivrs
push
and
inc
dec
or
xchg
or
inc
aas
mov
fisubrs
cmp
gs
repnz
addr16
mov
xchg
xor
mov
popf
cmpsl
pushf
cmp
cmc
stos
xchg
pop
dec
popa
scas
idivb
jle
lea
pop
xor
test
jge
ret
cltd
aad
and
inc
outsl
inc
jmp
add
cmc
add
arpl
fdivl
fnsave
shlb
xchg
ret
popf
mov
jmp
cmp
insb
xor
mov
pop
xchg
lret
inc
cmpsl
dec
scas
sti
pop
cwtl
lods
and
and
cmc
out
pop
jno
sar
mov
sub
dec
testl
xchg
xchg
outsl
and
adc
cltd
or
fistps
arpl
ret
ret
push
js
insb
sar
mov
dec
scas
popf
and
xchg
mov
cwtl
cmpsl
lret
or
push
loop
js
inc
push
call
lods
inc
sub
mov
sub
lcall
and
pop
out
outsb
fs
int3
scas
xchg
in
lock
scas
int
call
inc
ret
and
ret
pop
sbb
mov
in
xor
pop
mov
iret
ret
lret
xchg
mov
mov
in
aad
inc
sbb
xor
push
aas
or
dec
test
add
loopne
stc
cmpsb
fiaddl
incb
jge
mov
xor
test
lods
pushf
pop
mov
adc
dec
mov
push
jg
cld
arpl
stos
push
and
push
mov
sbb
push
inc
xor
add
adc
ret
mov
jae
cli
mov
jge
dec
adc
adcb
scas
mov
mov
out
xor
scas
adc
mov
adc
in
addr16
out
jmp
test
imul
in
jne
push
out
jns
lret
dec
les
das
push
fscale
adcl
imul
pop
dec
cmp
mov
mov
inc
ljmp
mov
xchg
mov
insl
pop
add
adc
mov
mov
push
out
test
pop
push
pop
pop
gs
jge
jbe
mov
xchg
add
fistps
lea
stos
pop
inc
xchg
out
rorl
mov
data16
out
or
adc
and
jb
cmc
sbb
fistl
ret
ljmp
sbb
ret
xchg
cmpsb
cmc
mov
sbb
out
ljmp
dec
dec
mov
cmpsb
push
shl
inc
lods
and
sub
repz
insb
mov
adc
push
mov
lcall
jne
inc
mov
in
mov
adc
idivb
and
and
or
fadd
mov
and
lods
push
in
ljmp
dec
aaa
cli
dec
mov
out
pop
mov
inc
mov
jb
xor
scas
sbb
mov
ds
or
dec
clc
pop
ret
cltd
outsb
into
xor
popl
rcrl
mov
nop
push
ljmp
test
add
xchg
outsl
add
jae
adc
test
xor
sub
sub
loopne
mov
rcr
lock
xchg
test
insb
cs
arpl
jns
jae
jge
lcall
repnz
in
mov
push
pop
sbb
mov
ljmp
and
pop
mov
loopne
add
xchg
push
mov
fistpl
jbe
mov
sbb
shl
jecxz
add
imul
in
inc
mov
and
lret
jmp
sub
ds
jg
or
ss
cmp
in
rcr
and
xchg
pop
sbb
xchg
fstps
inc
mov
lea
xor
mov
mov
xor
cli
cld
arpl
or
loop
mov
jae
inc
push
fidivrs
vpand
mov
push
or
test
mov
pop
stos
ss
jge
push
xchg
fs
or
int
arpl
jmp
je
mov
test
or
pop
mov
sbb
jnp
sbb
dec
fchs
and
mov
fsubr
push
xchg
jnp
push
mov
add
daa
xlat
push
and
lcall
cmp
mov
mov
inc
mov
std
adc
add
lcall
push
clc
cli
les
push
jle
sub
lods
pop
iret
popa
sbbl
push
das
ret
clc
int3
push
icebp
fstpl
and
mov
icebp
pop
cltd
test
out
jge
movntps
das
call
stc
or
testl
in
dec
bound
mov
hlt
sbbl
cli
inc
stos
adc
ret
enter
arpl
jge
sbb
sbb
ja
pop
into
fs
loopne
and
sbb
add
cmp
xor
cs
jne
and
sarb
repz
aam
inc
dec
xlat
push
dec
fstpt
mov
lds
lret
aam
inc
test
arpl
sub
pusha
mov
jae
jp
cmpsb
mov
in
xchg
stc
mov
out
test
cmp
in
pop
sbb
pushf
pop
sarb
lods
rolb
xor
sub
popa
or
jmp
lea
int3
loope
in
addr16
enter
sub
cmp
leave
mov
sbb
fcoml
shll
aas
push
and
and
aas
shlb
repnz
jo
cmp
mov
push
shrb
or
idivb
mov
pushf
stos
lahf
cmp
jne
mov
test
in
cmpsb
out
es
jle
mov
jmp
cmova
mov
imul
dec
push
pop
fcoms
scas
or
push
push
repnz
sbb
jne
les
and
mov
jne
pop
and
adc
fnstcw
or
insb
pop
adc
aad
rolb
sub
in
push
xchg
mov
mov
lahf
and
mov
test
das
sub
ret
sub
mov
xor
lods
daa
insl
icebp
sub
outsb
or
or
orb
xchg
mov
push
mov
inc
add
push
fdiv
shll
push
outsl
data16
mov
sub
cltd
pop
mov
jecxz
dec
mov
arpl
push
gs
sbb
in
rcll
in
std
movsb
ja
pop
dec
mov
or
imul
shlb
clc
fstpt
dec
xchg
push
gs
pop
mov
cmp
gs
jecxz
mov
rcrb
arpl
add
lods
ret
out
mov
jmp
in
xor
int
xchg
inc
imulb
mov
jno,pt
pop
in
sub
sti
scas
nop
cld
insl
adc
ljmp
jno
in
fld
sarl
aad
sti
rcrl
ret
sahf
pop
cmp
xabort
add
stos
or
data16
sbb
aam
lods
jb
inc
xchg
movaps
dec
adc
dec
loop
mov
pusha
xchg
mov
mov
aaa
mov
jae
push
inc
pop
ljmp
jecxz
mov
cmp
ja
xchg
and
pop
add
jae
in
add
jo
rclb
sub
sub
xor
xor
push
push
cmp
jns
call
test
cmp
mov
mov
pop
mov
jg
fs
cld
jnp
inc
loope
pop
or
mov
and
popa
ret
mov
cwtl
les
imul
mov
and
stos
xchg
or
add
xor
out
into
and
lods
or
inc
pusha
xchg
shrl
fildll
mov
vmovshdup
push
mov
test
aas
in
and
pushf
bound
sbb
dec
sub
jmp
mov
pop
sub
in
aam
cmpsb
cld
and
mov
insb
daa
inc
mov
push
inc
or
dec
mov
mov
xor
jle
movsb
adc
adc
ret
imul
cmpsb
xchg
ja
sbb
mov
out
aas
shl
fnstenv
xchg
mul
mov
divb
fsubrs
sub
and
xor
or
sbb
xchg
dec
loope
or
outsl
imul
cltd
push
int
enter
ljmp
cmp
cwtl
mov
jo
xchg
pop
sub
aam
jo
loopne
clc
push
jbe
and
pop
xchg
scas
mov
mov
cmp
jae
rorl
add
hlt
sub
bound
out
das
iret
add
aas
jae
and
shll
pushf
cltd
int3
cmp
repnz
cmp
add
inc
and
bnd
xchg
mov
arpl
and
jb
data16
pop
lret
aam
fisttps
add
aam
mov
cltd
mov
mov
sub
mov
repz
rcrl
inc
push
mov
repz
mov
adc
iret
test
xor
sbb
rolb
test
xchg
sets
lock
sub
cwtl
icebp
loopne
iret
xchg
call
mov
punpcklbw
mov
lcall
xor
jmp
fidivs
add
lgs
hlt
lods
sbb
inc
xchg
push
push
dec
adc
test
mov
leave
imulb
and
xchg
push
and
mov
push
adc
sub
lea
loop
shlb
outsb
inc
rol
sbb
mov
outsl
mov
shl
push
inc
xchg
test
stos
mov
int3
or
test
movl
or
jne
push
jl
xor
xchg
loopne
jne
push
nop
xor
xchg
inc
loop
ret
pop
sub
or
int
outsl
mov
pop
adc
lods
pop
and
cmp
mov
lret
ud1
pop
inc
sub
sar
addl
dec
mov
dec
dec
loop
mov
xchg
das
pop
adc
xlat
repnz
pop
adc
jp
push
jl
notb
jl
divb
sbb
test
xchg
aad
mov
negb
jae
push
cltd
cs
jae
pop
cmp
je
push
sub
inc
add
les
jmp
aam
popa
dec
sub
movsb
stos
enter
mov
insl
inc
enter
mov
stos
push
mov
std
ljmp
or
push
fcmovnu
adc
and
add
dec
adc
or
fisubl
fdivrl
inc
repnz
inc
cli
mov
xchg
mov
sbb
iret
in
push
sub
or
add
jecxz
shll
dec
cltd
sub
jno
shrl
xchg
mov
xor
ljmp
loop
movsb
jle
loope
nop
mov
mov
mov
fists
loopne
cmp
sar
incb
stos
cmp
mov
adc
cmp
mov
jp
mov
popf
pop
xchg
les
orb
hlt
push
sti
fnsave
xchg
test
cmpsl
xor
sub
push
add
cs
inc
xor
or
mov
cmc
sub
bound
sbb
mov
pop
pop
inc
and
in
xorb
dec
mov
jge
mov
fs
dec
insl
cltd
je
pop
add
daa
inc
call
sbb
mov
pop
loopne
xor
jle
lcall
jae
test
pop
and
sbb
ja
outsb
cmp
ja
sti
xchg
cmc
ror
shl
into
rol
leave
or
or
arpl
mov
ret
test
mull
dec
pop
jne
sub
xor
jb
ret
fildl
lcall
mov
inc
ss
mov
std
test
bound
dec
lcall
fmull
xor
jecxz
test
loope
in
adc
xchg
sub
fdivrl
add
je
bound
inc
or
jg
mov
mov
xchg
or
int
jo
jle
repnz
dec
dec
mov
ret
ficoml
movsl
hlt
jb
xlat
in
xor
jo
and
or
mov
pop
push
dec
push
rcl
les
mov
arpl
mov
or
xor
and
mov
imul
pop
adc
mov
aas
leave
jle
fwait
mov
xchg
inc
stos
push
in
pop
dec
or
jl
jle
jg
cltd
xchg
ljmp
scas
lret
pushw
into
xor
cmpsb
jmp
xor
mov
insb
jne
push
sbb
call
stos
add
out
jl
aad
fadd
arpl
push
test
mov
xor
movsb
push
call
ret
pop
push
rorl
cltd
xor
cli
iret
jb
aas
fs
lcall
cwtl
cmp
mov
mov
push
cmp
jno
pusha
insb
jae
call
mov
lods
and
mov
int3
sbb
mov
loopne
movsb
insl
xor
testl
loope
fstpl
out
mov
test
dec
sbb
cmp
in
adc
notb
pop
repnz
das
ret
jno
jne
pop
push
nop
xchg
mov
sbb
inc
jmp
add
dec
xchg
cmp
in
pop
mov
or
adc
or
push
mov
pop
push
jno
fidivs
dec
es
or
cwtl
jmp
pop
push
push
cmpsb
aaa
jp
sub
jb
in
push
adc
rcll
cmp
cltd
mov
jb
lods
ds
fwait
jg
mov
jl
fisttpl
loop
dec
out
xchg
out
or
enter
lret
lahf
in
cmpsl
adc
aaa
in
sub
lea
xor
pushf
add
les
fisubl
cmp
add
enter
dec
rcrl
sahf
mov
gs
mov
pop
les
mov
ja
repnz
jmp
std
in
mov
mov
aas
pop
sub
jnp
xor
sbb
push
add
add
push
enter
ljmp
jg
popf
sbb
data16
mov
stc
cmpsb
lods
cmp
push
nop
jge
pushf
cmp
test
test
rorl
dec
les
jecxz
pop
fadds
push
and
adc
push
xchg
mov
sbb
inc
mov
xor
cs
cmpsl
sub
pop
push
mov
sahf
repz
imul
out
dec
ss
cld
lcall
mov
lea
mov
addb
ljmp
mov
jne
dec
jne
pop
push
cmp
pop
cmp
faddp
mov
orl
mov
mov
lret
ret
or
add
mov
clc
movsb
imul
out
mul
insl
xchg
mov
xchg
aas
xchg
adc
fadd
icebp
frstor
mov
push
leave
int
add
push
in
int3
mov
out
insl
scas
ja
scas
fwait
cs
mov
test
dec
xchg
movsl
mov
push
in
pop
notl
mov
mov
sbb
fistpll
inc
jmp
pop
fs
pop
adc
push
sub
in
out
enter
dec
push
bound
cld
xchg
sbb
mov
inc
fdivrs
neg
or
stos
lret
mov
xchg
and
loope
or
das
rclb
test
or
push
cmpl
push
jae
cmc
in
mov
xchg
dec
jb
xchg
loopne
mov
lods
adc
add
mov
inc
pop
inc
cmp
out
icebp
fimuls
sub
jo
cwtl
mov
add
aad
and
push
pusha
in
mov
inc
mov
fbstp
nop
loop
pushf
cmpsl
sbb
aas
movsb
clc
jecxz
push
push
jo
je
cmp
test
stc
sub
arpl
shll
inc
dec
ficompl
mov
mulb
outsl
mov
pop
fs
lcall
in
and
out
inc
scas
enter
inc
scas
xchg
mov
test
bound
es
in
insl
and
pop
mov
mov
jne,pt
movsl
mov
jno
orl
jle
inc
lods
out
lcall
imul
sub
push
push
ja
mov
xchg
loope
sub
push
dec
jl
xor
movsl
loop
lret
and
popa
aaa
es
ja
mov
pushf
sub
arpl
shlb
loopne
pusha
push
mov
andl
movsl
call
mov
movsl
xchg
lret
mov
dec
jne
mov
jo
fst
enter
xor
jl
imul
add
incb
out
sbb
dec
xlat
pop
push
jge
addb
into
and
mov
push
lea
mov
shl
test
leave
fpatan
rcll
xor
or
aad
xchg
je
cmpsl
popf
outsl
mov
xchg
aaa
loop
bound
lds
insb
mov
test
out
xor
inc
insl
or
add
jo
xor
fisubrl
clc
sti
incl
xchg
data16
xchg
fdivrs
bound
add
sbb
push
xchg
les
out
dec
push
cltd
mov
pop
xchg
jmp
xchg
mov
bnd
cmp
mov
fistpl
mov
mov
shr
mov
jle
adc
lcall
out
dec
adc
mov
jp
lods
repz
cmp
xor
mov
jno
popa
pop
mov
mov
scas
test
xchg
out
movsl
and
repz
add
jle
lea
les
pop
mov
sub
arpl
fwait
and
test
dec
mov
sbb
xchg
lret
xchg
cmp
dec
imul
popa
sahf
fs
bound
addl
ss
dec
and
push
ret
adc
xor
dec
sar
imul
out
repz
xchg
scas
and
fisttps
ljmp
push
nop
sbb
xchg
or
or
ret
sarl
mov
shll
mov
sarb
push
jmp
jno
movsl
pop
sbb
pop
pop
inc
cmp
rolb
mov
and
pop
fsubrl
pop
or
add
adc
movsl
mov
add
scas
fldcw
ljmp
mov
mov
lret
es
mov
data16
and
xor
in
mov
fs
push
push
fcmovnbe
repnz
bound
out
enter
rol
mov
data16
adc
decl
sbb
pop
repz
test
addr16
jno
shrl
dec
icebp
mov
imull
jmp
xor
test
dec
lahf
faddp
mov
jns
inc
mov
js
sbb
mov
nop
mov
sbb
repz
mov
push
iret
test
xchg
in
es
popa
jne
fistps
subl
adc
clc
dec
pop
push
mov
push
or
insl
cmp
push
push
iret
xchg
adc
nop
and
xchg
ret
adc
inc
jno
mov
xor
rcr
aad
push
icebp
movsl
or
inc
stos
push
loop
pop
cmpsb
std
inc
popf
push
movsb
in
jbe
pop
into
aam
adcb
xchg
ss
in
out
dec
pop
and
ret
cmp
pop
sbb
lcall
lds
fsubs
pop
cmp
jmp
push
dec
lock
rcrl
pop
dec
mov
xchg
jmp
sub
fld
idivl
mov
test
aas
push
cld
inc
imul
lds
rolb
call
mov
mov
cmc
loope
div
mov
pop
mov
xor
jg
call
xor
sub
out
xor
xchg
or
adc
xlat
mov
cmpsl
shll
sub
stc
cmpsb
or
cs
xchg
imul
xor
push
sbb
mov
stos
popf
outsl
pusha
or
xor
cmp
ret
das
xchg
cmc
or
and
pop
push
mov
xchg
inc
add
push
cmp
lods
xlat
sti
xor
jo
add
sbbl
dec
rorl
push
enter
int3
lcall
aas
int3
adc
cli
adc
jb
push
adc
mov
push
mov
push
lds
mov
std
jle
gs
rcl
sub
in
and
les
mov
and
fsincos
ror
data16
shll
push
icebp
shrl
in
in
sub
sbb
pusha
cli
ret
xchg
rolb
fists
dec
into
pop
sahf
jae
xlat
aad
in
add
fisttpll
push
cltd
jno
xor
pop
jecxz
popf
push
test
fsubl
aam
in
pusha
je
xchg
inc
push
mov
repz
push
inc
loope
add
ret
pop
push
sub
lds
ljmp
fnstsw
scas
int
ds
dec
xlat
inc
fnstsw
mov
cld
fnstcw
dec
adc
and
inc
mov
pop
loop
subb
push
xchg
jle
and
pop
xchg
inc
fnstcw
sbb
out
or
push
mov
mov
xor
lods
int
add
jo
xor
pop
adc
or
iret
lock
ret
lahf
lock
jmp
pop
mov
mov
push
fsubl
fbstp
fmull
mov
jg
fsubrs
adc
cmp
cmpsb
sbb
sahf
mov
cwtl
push
cltd
ret
cmp
inc
scas
ss
aas
mov
xchg
inc
push
cmp
clc
push
lret
and
cmpsl
cmp
mov
pop
lock
sub
push
sbbl
dec
daa
xorb
add
aas
test
push
xchg
sub
pop
fbstp
arpl
repz
add
adc
cmc
push
push
mov
dec
sarb
or
xor
mov
iret
pop
shl
and
lods
pop
iret
or
mov
aam
or
adc
jo
fsts
xor
outsl
scas
popa
test
sbb
inc
xor
lcall
dec
and
aam
mov
add
test
push
icebp
jns
aad
push
dec
or
mov
aad
cmp
xlat
jne
loop
pop
jge
dec
jle
jb
jne
mov
imul
out
into
test
inc
mov
out
and
loop
adc
dec
clc
jae
dec
pop
in
test
adc
adc
std
inc
jno
xchg
lds
add
popa
out
repnz
cmp
add
mov
add
dec
jle
gs
add
or
or
fisubs
xor
xchg
xor
daa
mov
xchg
and
pop
lock
mov
popf
fidivl
scas
sbb
ja
mov
inc
inc
insb
sub
mov
or
sub
inc
sahf
negb
arpl
xchg
xchg
mov
dec
dec
push
dec
hlt
into
and
fwait
ss
addr16
outsl
sbb
jecxz
pop
sbb
pop
and
sbb
orb
cwtl
aam
xchg
mov
leave
enter
adc
mov
out
adc
sbb
mov
cmp
shr
in
pop
cmc
hlt
mov
xlat
iret
push
pop
bnd
jle
jnp
dec
cmpsl
in
icebp
add
mov
sub
arpl
lods
add
pop
adc
fsts
mov
fldt
int3
popa
iret
adc
sub
xchg
fistpl
and
pop
lahf
mov
dec
push
faddl
lcall
sar
mov
fdivrs
lods
idivl
adc
clc
inc
push
jmpw
mov
mov
sub
dec
push
sbb
lcall
subl
or
mov
xor
mov
shlb
clc
dec
add
mov
out
push
shrb
pushf
int3
xchg
aaa
pop
jo
stos
xchg
inc
ja
out
push
jle
fsub
fistl
jo
or
scas
popa
daa
xorb
dec
jae
dec
inc
bound
imul
imul
adc
dec
loop
mov
fildll
stc
jecxz
mov
or
lods
cmp
cwtl
xchg
add
pop
add
push
pop
aaa
cs
xor
or
mov
ficompl
insb
aad
andb
pop
ror
xchg
xchg
aam
nop
pop
adc
lds
jnp
jo
sbbb
xor
and
push
imul
sbb
adc
mov
push
sbb
mov
pop
mov
iret
shll
jmp
lds
adc
cwtl
dec
loop
add
in
bound
jo
jnp
mov
test
sub
or
adc
xchg
addr16
cmp
fbstp
sti
mov
pop
in
adc
je
fisubs
je
int3
pusha
dec
push
test
loopne
xchg
sti
fst
inc
mov
fsubrs
xchg
or
cmc
mov
cmc
mov
hlt
aam
icebp
pop
call
inc
push
sub
jmp
mov
sub
ss
jo
lcall
imul
clc
ss
stc
mov
mov
inc
push
mov
insb
mov
push
cmp
xchg
je
jae
sbb
orl
xchg
adc
je
fcmovnb
mov
or
mov
stos
jns
jg
subl
cmp
cmp
and
sub
push
push
mov
mov
xorb
mov
dec
bnd
pop
adc
cmp
jle
add
sarb
or
ds
push
xchg
cmp
pop
inc
push
dec
mov
dec
movsl
xor
adc
pop
add
lods
mov
push
gs
inc
insb
add
rcpps
out
sbb
cmpsl
push
imul
push
shll
jns
repnz
std
lock
xchg
add
adc
mov
fwait
sub
in
dec
xchg
insb
shrl
adcl
xchg
ss
imul
lret
arpl
leave
mov
ljmp
or
and
mov
mov
fwait
add
outsb
mov
sbb
or
das
call
inc
mov
fdivrs
add
dec
in
mov
push
fcmovnu
xchg
pusha
inc
xor
inc
outsl
add
push
int
loopne
insb
xorl
inc
mov
jo
mov
push
sbb
js
xor
push
mov
dec
push
les
test
nop
lcall
xchg
cmp
xchg
jmp
pushf
mov
inc
nop
mov
call
idivb
xor
sub
out
int
adc
jnp
dec
cmp
rclb
jns
call
outsl
mov
jmp
pop
inc
ss
test
ja
mov
jno
fs
xor
mov
fmull
repnz
push
ret
and
scas
mov
push
jecxz
aas
nop
sub
jne
pop
shll
and
jl
popf
bound
jnp
dec
sbbl
sbb
fmuls
jns
incl
pop
lahf
push
mov
aad
sub
push
mov
add
push
sub
push
jle
iret
or
mov
int3
or
subl
ret
pshufw
lahf
insb
ficoml
es
icebp
mov
lock
in
jae
addr16
pop
xor
insl
out
fnsave
psadbw
inc
xor
xor
lcall
das
mov
into
cwtl
inc
iret
sbb
or
pop
mov
aam
xchg
jo
pushf
dec
outsl
mov
int3
inc
sarl
rcrl
andl
sbb
movsb
int
jbe
adc
or
jecxz
or
ss
cmpsb
in
push
ljmp
xor
jb
and
inc
xorl
or
inc
rcrb
and
subb
repz
cmpb
mov
das
pop
in
mov
dec
outsb
add
push
and
cmp
pop
xchg
aaa
mov
adc
data16
sub
daa
popa
add
lods
sbb
lahf
popf
lods
sbb
test
xchg
popa
sub
dec
ret
or
cmpsl
push
loop
in
in
inc
out
sbb
jo
cmp
stos
shl
lret
pop
bound
and
jmp
push
sbb
add
arpl
push
sub
cmpsl
aaa
das
or
inc
sub
sub
push
testl
scas
sub
xchg
mov
jmp
jnp
loope
lcall
in
and
int
test
pop
inc
xor
imul
mov
mov
loopne
inc
negb
stos
mov
sbb
sbb
ret
mov
push
gs
ds
rcrb
mov
and
js
xchg
std
hlt
and
mov
sbb
cli
pop
rcll
insl
in
jmp
loopne
movsl
mov
adc
adc
movsl
movsb
sbb
popa
xor
test
popa
sbb
push
jb
jmp
ds
cmp
shrl
xchg
dec
cmp
jle
sbb
push
popf
addr16
pop
cmp
hlt
jbe
mov
test
andl
jno
lret
xlat
mov
addr16
mov
xor
sbb
mov
psubd
out
jg
popa
cmp
lods
mov
and
cmp
mov
notl
lret
adc
or
push
scas
push
es
sbb
mov
jg
lcall
movsl
inc
test
add
scas
outsl
sub
bswap
push
pop
cli
inc
pop
xor
cmp
aas
mov
imul
ret
pop
jb
ja
pop
jbe
shl
lods
test
sub
into
cmp
pop
xchg
int3
adcl
jb
lea
push
fisubs
add
push
imulb
mov
inc
pop
lods
adc
arpl
in
cmp
push
jle
mov
nop
out
xchg
fistpll
add
xor
or
inc
int3
adc
pop
dec
adc
push
mov
xlat
xor
and
add
pop
jmp
sub
dec
dec
inc
cmp
inc
movsl
pop
inc
insb
jbe
xor
loop
mov
jp
dec
lcall
out
repz
mov
stos
and
xor
hlt
stos
push
sbb
jmp
nop
add
push
mov
les
and
sbb
inc
or
bswap
or
daa
mov
mov
std
cmp
pop
jl
push
sbb
and
sbb
les
adc
popf
xchg
arpl
sub
icebp
jb
stc
adc
into
xchg
rorb
pusha
push
pop
xor
lods
xchg
cwtl
adc
jg
aad
movsb
in
dec
fs
pop
sbb
aad
dec
stos
jl
ret
push
cmpsl
jge
int
jmp
and
fcmove
into
fcmovne
sbb
mov
add
adc
in
jl
push
aas
loopne
aad
ret
pop
rclb
mov
les
jle
in
mov
es
xor
xchg
aad
xchg
lea
insl
mov
sub
jb
mov
es
cmp
add
out
push
in
lea
ja
imull
cmp
stc
xchg
mov
xchg
scas
std
push
pushf
xor
mov
fisttpl
sub
shlb
xor
jne
fcmovnb
outsl
jle
xor
mov
sbb
icebp
lods
push
outsb
pop
sub
addr16
push
test
out
or
ror
call
xor
pusha
jge
pop
jmp
mov
cmpsb
jnp
bound
ret
push
sti
inc
push
out
and
pop
fisubrs
lock
out
sti
mov
dec
jae
pushf
adc
mov
jp
inc
scas
outsb
jo
shrl
leave
jle
das
or
out
lea
shrb
and
ret
adc
xchg
xlat
mov
test
dec
xchg
lret
mov
outsl
jnp
cmp
cmp
and
lods
mov
lods
adc
rcll
mov
mov
mov
in
int3
test
mov
jg
jg
inc
movsl
and
shlb
mov
xor
int3
daa
push
pop
das
mov
rcll
inc
rclb
std
cmp
enter
setnp
add
mov
jp
push
mov
sti
out
push
sbb
xor
dec
cld
rcrl
pop
dec
add
jl
cltd
mov
mov
xchg
add
jb
rcll
ljmp
repz
cld
aas
hlt
mov
clc
repz
xchg
lods
sbb
inc
mov
stos
bound
cmp
xchg
or
xor
iret
jne
xchg
push
xor
pushf
xchg
fdivp
sahf
push
outsl
pop
mov
or
js
stc
shl
xchg
outsb
cmp
mov
jle
push
and
dec
out
mov
lods
test
ss
sbb
stos
pop
out
pop
inc
xchg
addr16
jp
ret
push
dec
leave
sbb
ret
cwtl
add
pop
inc
inc
cmc
cmp
lcall
mov
fisubs
lcall
and
dec
in
fucomi
push
stos
mov
mov
dec
mov
fbld
mov
lock
inc
jnp
cmpsb
fldl
adc
adc
mov
add
mov
mov
ret
add
imul
add
sbb
mov
dec
mov
sahf
dec
ret
xchg
adc
cmp
xchg
in
mov
test
cmc
shrl
ds
cmpps
clc
mov
pop
mov
mov
movsl
mov
je
mov
rcrl
jg
outsl
jns
inc
jmp
xor
sahf
lahf
dec
loope
mov
ja
xchg
fsubs
pop
push
sub
mov
or
cmp
xchg
pop
fdivrs
inc
or
insb
outsb
mov
shrl
fistps
or
pop
adcl
and
and
std
adc
aaa
ja
out
mov
inc
cltd
inc
insb
fwait
aas
cs
js
push
and
roll
in
add
ret
xchg
lock
inc
jmp
add
push
decb
sub
cs
test
pop
xchg
jmp
stos
jno
mov
rclb
pop
dec
pop
mov
repnz
mov
pop
mov
fucomi
popf
mulb
lock
push
pop
inc
ret
pop
sbb
lret
outsb
rcl
cltd
and
inc
dec
sahf
jl
xor
mov
push
fisttps
dec
outsl
shll
ds
pop
das
cmp
loopne
xchg
sti
leave
pminub
daa
mov
xorl
inc
xchg
popa
das
xchg
ret
push
movaps
lcall
push
in
lods
fstpt
enter
sbbb
dec
or
adcl
and
cmpsb
and
add
ret
cmpl
add
jbe
cmp
out
aam
and
add
xchg
sub
inc
les
test
pop
xor
scas
sbb
mov
sahf
mov
mov
cmpsl
out
das
mov
notl
xor
cmp
lock
sub
cmp
cli
je
in
in
add
add
jge
lahf
adc
inc
mov
add
aas
les
pop
mov
push
fnsave
add
and
jle
and
cmpsl
or
pushf
loopne
add
push
pop
or
xor
das
stos
adcb
dec
sbb
sub
test
xchg
cld
xor
xor
sub
decl
xor
outsb
push
bound
fwait
add
xor
mov
in
out
mov
cmp
jns
adc
test
mov
adc
gs
or
out
loope
jg
ss
outsb
ss
subl
jge
xchg
sub
dec
fistl
cli
mov
fstps
mov
std
fldl
movsb
icebp
mov
jmp
hlt
out
jne
mov
and
clc
sub
xchg
push
rcll
rol
outsb
lcall
dec
dec
mov
out
aas
or
in
and
xchg
push
ret
and
mov
xchg
rorb
sbb
aam
push
clc
xor
mov
inc
ficoml
in
and
fnsave
test
pushf
adc
xchg
scas
dec
sub
call
jb
xchg
js
inc
bound
test
shll
and
pop
std
aaa
mov
add
mov
rcr
out
inc
mov
cli
lcall
addr16
jo
cmp
pop
out
test
inc
pushf
jb
stos
xor
pop
inc
mov
mov
fists
in
cmp
sbb
in
mov
mov
adc
push
mov
movsl
xor
and
or
mov
pop
repz
imul
sub
jle
shrl
shlb
mov
rolb
mov
addr16
cmp
add
data16
push
dec
imulb
xchg
xchg
stc
jb
in
cmp
cmp
push
sbb
dec
cmpsl
ss
movsl
hlt
push
mov
addr16
mov
push
xor
add
lahf
notb
jp
sub
in
cli
fcoml
rorl
push
mov
or
lret
cwtl
mov
mov
lret
outsb
imul
fiaddl
cwtl
pop
js
js
inc
repnz
scas
mov
xchg
add
ss
sbb
test
pop
pop
stc
lods
sbb
in
inc
mov
fstl
in
pop
cli
ds
jo
pop
mov
loop
add
jge
jo
repz
cmpsb
inc
fildll
push
xchg
add
and
or
pushf
insb
int
out
add
inc
mov
pop
and
mov
mov
shrl
xchg
fbstp
sub
in
push
adc
arpl
insb
mov
jne
sub
sbb
fdivl
fsubl
adc
call
movsl
and
sahf
jnp
sub
pushf
stos
imul
mov
cmpsl
jle
cmpsl
jg
pop
mov
push
cmp
cmp
orl
mov
jno
dec
loope
cld
push
and
out
or
lcall
addr16
pop
outsl
lahf
rclb
lahf
sub
pop
fistps
xchg
hlt
fnstsw
xchg
mov
outsb
or
mov
insb
mul
aad
mov
inc
mov
add
mov
rcr
in
fcmovne
imul
repz
loop
sar
dec
inc
test
xor
leave
mov
stos
mov
jmp
jnp
xchg
cwtl
icebp
ljmp
ja
and
fiaddl
jne
dec
mov
inc
ss
inc
sbb
enter
nop
outsl
adc
push
adc
in
push
inc
ds
mov
imul
scas
rcr
cld
sahf
faddl
cld
sbb
lock
popf
mov
lods
in
cvtps2pi
adc
je
push
jne
xlat
sub
fimull
or
test
sti
out
push
dec
mov
sbb
popa
or
jecxz
xchg
rolb
sahf
sti
xchg
pop
dec
mov
jnp
xchg
mov
push
jo
or
cli
pop
xchg
xchg
fnstenv
add
or
call
xor
rolb
and
in
cld
mov
fnsave
xchg
and
mov
nop
popf
pop
in
pop
insl
out
scas
adc
dec
sti
push
decl
repz
mov
fsubp
in
add
add
lock
mov
lahf
cmp
fistpl
xor
lock
stos
inc
sub
sbb
dec
lcall
inc
popf
dec
add
ds
idiv
mov
mov
pop
int
testl
or
inc
jne
inc
jno
rclb
shr
jb
cwtl
mov
push
dec
add
or
out
notl
adc
stos
sti
mov
in
loopne
xchg
mov
loopne
sbb
stos
repnz
sbb
sbb
lods
out
add
or
add
loope
cmp
pop
imul
int3
xlat
adc
mov
sub
jns
scas
mov
das
sbb
mov
data16
push
xchg
inc
mov
test
sti
inc
xor
xlat
mov
es
enter
pop
jle
add
adc
jle
pop
push
lret
rcr
pop
arpl
test
sarb
int3
cmpsb
ja
mov
mov
inc
pop
fldt
lds
push
sbb
push
lahf
push
lods
xchg
leave
dec
pop
dec
push
or
adc
ret
repz
insl
xadd
sub
sub
or
xchg
inc
pop
es
hlt
pop
aam
in
mov
cmp
int
sub
or
or
mov
xchg
daa
mov
push
push
pusha
ret
movsb
or
sub
call
sbb
aas
pop
jnp
lret
sahf
xor
int
aas
pop
fistps
cmc
or
shll
and
ret
cmp
pop
popf
push
mov
add
das
lahf
lret
dec
xchg
pop
xor
cmpsl
push
or
inc
push
dec
xchg
mov
arpl
mov
jmp
jg
iret
or
fs
xchg
dec
add
xchg
sub
xchg
jo
fsubrl
mov
les
ds
jae
pushf
sbb
jb
test
repz
mov
jge
or
fs
add
jg
fs
pop
sti
or
ss
push
xchg
mov
sub
lods
imul
xchg
xchg
loopne
lea
ret
cli
sbb
cmp
or
mov
push
dec
jbe
scas
xor
add
jae
cmp
rol
dec
jbe
movsb
ret
mov
adc
adc
inc
fsub
gs
push
out
cmp
pop
push
shlb
dec
cmpsb
outsl
ds
lret
fidivl
xor
xchg
dec
and
inc
lock
sbb
add
cmpsb
loopne
rcll
cmp
pusha
aas
push
add
xor
pop
jmp
xlat
and
rcr
sbb
sbb
inc
jl
repnz
decb
inc
mov
xchg
les
outsl
cmp
nop
xor
subb
cmp
mov
and
cmp
clts
mov
cmpl
mov
and
mov
decl
cmpsl
jne
lret
aad
hlt
pop
sbb
stos
add
xor
or
and
dec
cwtl
int3
lahf
push
shll
or
out
enter
sti
lods
push
js
inc
mov
sub
aaa
mov
loope
sbb
xchg
jmp
pop
xchg
je
xchg
dec
sub
aas
jmp
pop
jge
popa
sbb
mov
cmp
lret
push
xchg
in
in
jecxz
cmp
pop
jecxz
out
test
cmp
sub
xor
ffree
arpl
sub
out
mov
pushf
cmp
push
jno
adc
es
adc
jle
rorl
or
cli
jmp
cwtl
mov
jl
sbbb
js
lret
xor
insb
popa
add
in
mov
push
or
xchg
pop
xchg
shlb
cmpsl
pop
decb
jecxz
push
inc
xor
mov
pop
cmp
and
xchg
inc
pop
pop
pop
push
ret
inc
mov
jge
mov
pop
or
jns
bound
xchg
mov
lcall
ja
repnz
xor
mov
mov
push
xor
scas
mov
push
mov
mov
dec
push
add
inc
cld
jle
scas
jo
jnp
cmc
mov
int3
add
movsl
or
je
test
and
dec
xchg
sarb
popf
std
mov
inc
sbb
mov
test
mov
adc
inc
dec
das
lods
cmc
push
daa
mov
jno
jbe
mov
sahf
not
decl
xchg
sbb
adc
mov
mov
mov
mov
outsl
add
out
aaa
ret
mov
cwtl
adc
cli
ret
add
and
call
pop
xchg
cmp
inc
xchg
into
sbb
fsubrl
lods
clc
ss
and
push
popa
jge,pn
xchg
in
test
loopne
ficomps
or
pushf
addl
adc
cmpsb
push
ss
mov
jmp
pop
andl
dec
mov
daa
xor
icebp
jle
mov
cmpsb
dec
xchg
dec
out
addr16
ret
pusha
sbb
sbb
daa
lods
fildll
xchg
push
inc
repnz
and
jg
jp
add
mov
int
adc
je
mov
lea
mov
sbb
adc
popf
add
imul
jge
mov
ret
in
scas
dec
aas
sbb
outsb
cmc
jge
xchg
testb
lds
loope
or
xor
xchg
mov
mulb
cwtl
xchg
fsincos
incb
pop
aaa
dec
in
mov
cmp
addr16
and
lcall
dec
push
dec
daa
test
ficomps
shr
repz
or
gs
cwtl
imul
sub
ror
pop
xor
sbb
adc
push
aam
shll
push
imul
adc
xchg
in
imul
es
insl
xchg
outsl
or
mov
or
mull
stos
xchg
lock
in
das
adc
push
divb
mov
orl
ja
aas
leave
mov
mov
aam
sbb
int
aad
mov
mov
insl
sbb
cmp
or
shl
jnp
test
jb
cmp
in
mov
push
cmp
and
test
pushf
scas
push
mov
pop
sbb
mull
enter
pop
popa
lahf
and
dec
fsts
and
mov
pop
outsl
jb
jg
arpl
outsb
data16
ja
rcl
xchg
call
xchg
mov
lods
gs
std
adc
xchg
xchg
out
in
incb
push
ret
psraw
cmp
test
add
cld
clc
or
jp
jmp
jnp
jle
cmp
ljmp
mov
sbb
dec
cli
sbb
sbb
dec
jne
mov
pushf
imul
iret
shlb
aam
sbb
mov
arpl
add
dec
test
xlat
mov
mov
adc
sbb
mov
jle
outsb
jmp
adc
int
mov
or
jecxz
inc
mov
in
add
fs
repz
jmp
repz
pop
adc
xchg
mov
push
push
lock
sarb
sub
ja
push
sbb
shlb
fnstcw
std
or
and
bound
mov
jo
jg
dec
data16
lcall
inc
pop
aad
pop
jecxz
sbb
jae
aam
aam
or
xchg
jg
add
subl
jmp
cs
sbb
cmp
insb
push
cmp
xchg
das
bound
adc
and
test
mov
mov
cld
lods
mov
in
fiadds
cmp
or
mov
push
fmulp
xorb
xchg
cli
mov
mov
sbb
ljmp
rcr
iret
repz
mov
mov
or
mov
jecxz
xchg
and
push
cmpsb
mov
xor
or
clc
das
icebp
adc
jecxz
push
mov
nop
sti
and
or
test
pop
push
int3
xchg
iret
inc
mov
and
inc
sahf
daa
fmuls
mov
add
popa
sub
jno
cmp
jle
out
cltd
cmc
mov
divb
mov
cld
fs
cmp
js
cmp
jmp
lods
xchg
cmp
iret
and
fldt
not
loop
adc
rcr
xor
mov
fs
push
jns
jb
jo
push
mov
stos
mov
mov
stos
push
mov
pop
xor
jbe
or
mov
in
push
pop
repz
adc
arpl
or
sti
dec
adc
xor
xchg
sbb
lahf
pushf
pop
pop
cli
or
sub
stc
jnp
mov
aam
mov
push
mov
mov
scas
sbb
hlt
jae
rolb
sbb
xchg
ficoml
push
or
xchg
imul
push
ret
cmpsb
or
scas
into
pop
rclb
push
sbb
call
mov
jmp
mov
inc
pop
cs
data16
lcall
pop
popf
xor
cli
dec
xchg
lods
pop
jno
mov
in
jl
lcall
cs
mov
popa
and
cmove
ja
push
xor
sbb
push
xorl
ljmp
or
xor
jne
sub
std
cmp
sub
ffreep
movb
and
rcrb
jno
lcall
leave
and
pop
ja
jae
nop
icebp
dec
enter
test
sub
lahf
or
or
mov
push
inc
outsb
lcall
pop
out
xor
ss
bound
push
mov
mov
sbb
int3
dec
add
pusha
push
push
jmp
cli
loopne
push
in
mov
fstps
mov
lret
jmp
ret
aam
daa
cwtl
sbb
mov
or
test
pop
movsl
adc
cmp
stos
iret
sub
inc
aad
xor
ss
jo
sub
mov
mov
arpl
movsl
cmp
mov
add
popf
cwtl
test
sub
lcall
push
testb
btc
test
dec
xchg
cmp
dec
and
rclb
mov
mov
in
scas
xchg
xor
xor
jl
push
cwtl
and
fdivrl
push
and
jae
mov
lret
push
sti
dec
pop
fadds
inc
and
psubb
aad
xor
pop
dec
dec
stc
dec
pop
xchg
inc
mov
pop
or
rcrb
arpl
imul
adc
andl
imul
ja
js
mov
dec
cmp
inc
push
mov
push
daa
or
or
cld
fiaddl
mov
add
jne
dec
rcrl
xchg
insl
mov
repnz
call
mulps
mov
pop
ss
lods
or
jne
adc
xchg
mov
ret
mov
add
dec
int
cwtl
insb
lods
pop
sub
mov
mov
fsubrs
mov
nop
xchg
jle
mov
jb
imul
mov
pop
jns
outsb
inc
pop
push
inc
lret
clc
push
or
shrb
mov
and
jne
adc
iret
xor
rcrb
add
mov
xor
jp
scas
fldcw
add
movb
pushf
jns
jge
push
ret
iret
mov
mov
callw
sub
testb
loope
stos
sub
xlat
cmp
pop
add
ret
cmp
or
lds
jmp
push
or
ret
imul
xchg
addr16
scas
loope
pop
sub
cltd
pop
test
negb
popa
test
xlat
int
xor
jb
dec
dec
pop
test
cmp
dec
jp
or
shlb
or
and
mov
dec
and
js
jmp
mov
loope
cmpsb
add
aad
inc
dec
jo
push
repnz
aas
and
pop
fisubrs
adc
sub
ds
pushf
lcall
shrb
es
and
mov
ss
cmp
repnz
pop
dec
stos
mov
enter
add
sub
or
pop
iret
add
clc
ljmp
xchg
inc
mov
or
in
push
add
mov
lods
rorl
jge
stos
xor
xor
and
inc
out
add
dec
jb
push
xchg
out
lret
fimuls
lods
or
mov
das
push
cmpsl
jbe
int
lahf
in
push
pop
lahf
leave
or
mov
dec
out
sbb
stos
aad
cmpsb
mov
add
cltd
loopne
mov
imul
adc
lds
xchg
lds
sub
enter
inc
mov
mov
mov
dec
inc
loopne
dec
mov
mov
or
iret
test
push
lods
jb
dec
in
mov
bound
pop
sbb
push
inc
xchg
pop
test
lcall
orl
push
lods
jbe
mov
pop
mov
fwait
jecxz
pop
aam
test
jle
scas
inc
xchg
sbb
sahf
outsl
push
incl
imul
nop
nop
xchg
sbb
jb
pop
sbb
mov
mov
stos
lods
in
mov
in
jp
out
mov
cmpb
gs
or
in
pop
addl
out
push
daa
mov
mov
xchg
not
add
jbe
pop
xchg
scas
or
xchg
sub
jae
xchg
inc
fdiv
dec
addb
scas
sbb
int
or
push
or
push
negb
dec
jl
insl
inc
mov
mov
jnp
sarl
jne
dec
stc
cltd
sbb
popa
fldpi
scas
xor
add
cld
and
xor
rol
fadd
frstor
out
or
mov
je
incl
mov
push
test
dec
lcall
push
sub
and
enter
cmc
push
mov
shrb
jp
dec
lret
jecxz
xchg
outsl
inc
or
fisubrl
adc
out
out
pop
outsb
outsl
in
imul
mov
lret
xor
fsubs
outsl
jae
ret
mov
push
inc
dec
pop
ret
mov
lods
pop
test
and
push
cli
jns
fucom
pop
mov
mov
fucompp
xchg
cld
insl
pop
es
cltd
addl
clc
and
dec
mov
push
adc
adc
gs
inc
pop
sub
call
aam
rclb
or
fsubs
pop
repnz
jne
inc
dec
inc
push
fisttpl
sub
push
rolb
rol
rcll
test
mov
das
add
push
mov
sub
repnz
out
adc
mov
cmpsb
jb,pt
xchg
mov
pushl
adc
cs
sarb
jg
mov
cmc
mov
mov
cmpsb
out
sbb
and
insb
test
mov
dec
lock
lea
xchg
out
movsl
mov
or
or
outsb
ds
aaa
add
js
xor
inc
xor
jb
pop
pop
arpl
js
pop
push
test
lahf
outsb
xchg
push
add
adc
ret
bound
fwait
rcrl
sbb
jbe
in
dec
rcrb
dec
push
cwtl
sbb
out
stos
cmp
and
jg
xor
cld
sbb
mov
xchg
dec
out
add
pop
shrl
pushf
inc
cmp
shrb
xchg
pop
add
mov
scas
jne
jp
stc
mull
xorl
push
add
ror
aas
cli
pop
xchg
pop
push
ljmp
clc
mov
pop
lods
mov
xor
mov
jp
or
orb
adc
imull
push
jnp
in
stos
mov
cltd
aaa
mov
popf
mov
xchg
fbstp
push
jge
fistpl
xchg
xchg
in
daa
scas
jae
xchg
jp
adc
cmp
mov
lods
pop
dec
hlt
push
pop
fcmovne
inc
and
fldenv
push
arpl
mov
gs
sub
jb
lahf
ret
mov
sub
pop
inc
mov
pop
sub
push
pop
adc
movsl
jb
dec
dec
dec
inc
fimuls
lcall
sub
jl
adcb
mov
pusha
mov
or
mov
push
xchg
jno
push
ja
mov
sub
jmp
push
lods
sbb
push
push
mov
cmp
sub
mov
dec
or
loope
fistps
jp
and
xchg
add
fiaddl
pop
mov
mov
and
cld
lcall
sbb
cmpsl
inc
cmp
idivl
pop
mov
jge
enter
dec
mov
outsl
sub
sbb
xor
and
adc
dec
and
arpl
xor
mov
jle
stos
xor
dec
pop
pop
pushf
cmp
push
push
lahf
pop
leave
insl
cmp
xlat
push
jne
jbe
xor
orl
test
push
cmp
fstpt
inc
push
dec
sbb
movsb
adc
jne
out
nop
pop
mov
sbb
add
dec
inc
movsb
frndint
jp
stc
enter
scas
cld
push
dec
and
xor
pop
mov
jmp
or
inc
leave
xor
push
shll
loopne
jo
push
mov
sar
push
mov
arpl
ss
dec
cmpsl
es
xchg
jle
pop
sti
ror
sbb
pop
repnz
int
mov
pop
dec
jns
loop
mov
adc
mov
aaa
shr
enter
cli
dec
imul
fadds
fsubrs
cmpsb
xchg
or
leave
hlt
lahf
adc
fisttps
repnz
cli
xchg
fildll
mov
dec
xor
pop
add
mov
mov
iret
adc
imul
insb
je
fistps
cmpsl
push
xor
mov
sbb
cwtl
mov
jno
jg
and
pushf
jge
pop
loopne
pop
notb
push
idivl
inc
or
clc
push
pushf
or
fdiv
jl
gs
pop
xchg
int3
lahf
push
jb
jo
mov
ja
scas
cwtl
mov
xor
fdivl
add
add
cmp
scas
jmp
imul
aas
sahf
gs
cs
daa
mov
movsl
push
xor
inc
ja
out
cmp
pop
sub
xchg
or
mov
cltd
add
js
pop
mov
cmp
pop
xchg
sub
jecxz
inc
jg
cmp
js
insl
stos
sub
jbe
ja
out
jl
ficompl
ret
cmpb
test
jl
lret
add
mov
jae
jns
es
and
inc
add
adc
pop
and
xor
jno
rcll
xchg
and
pop
xchg
jne
mov
xchg
rolb
push
sub
stc
into
imul
daa
fildl
mov
fidivrs
sub
jne
iret
into
shl
imul
xchg
data16
mov
mov
cli
xchg
xchg
jg
mov
inc
mov
sbb
shr
das
in
in
mov
and
iret
lea
adc
xor
shlb
arpl
sbb
fcomi
fwait
jmp
shll
call
pop
pop
xchg
arpl
das
jae
sarl
jbe
xchg
jg
add
pop
scas
mov
adc
gs
pop
adc
clc
lret
and
js
hlt
mov
imul
xor
sahf
stos
cs
movsl
imul
mov
mov
mov
jbe
lret
inc
cmp
out
and
mov
stos
xchg
ljmp
adc
insl
push
dec
sub
daa
mov
mov
roll
lret
mov
or
push
loope
ret
add
push
fisttpl
mov
adc
test
je
in
je
sub
lods
dec
or
cld
and
clc
decl
rorl
es
mov
dec
mov
pop
mov
lret
aas
jmp
add
insb
insb
jmp
popf
pushf
fcmovnu
push
cltd
or
rorb
inc
pusha
add
dec
shl
ja
loopne
inc
xchg
icebp
cmpb
or
out
enter
cmp
cmp
push
and
loopne
push
test
pop
ds
add
loop
dec
or
js
jbe
lods
fisttpl
lret
jno
fcomp
cmp
cmpsb
test
addl
cmc
out
nop
push
arpl
dec
lcall
mov
pop
loop
outsl
jmp
rol
mov
adc
lea
scas
adc
clc
pushf
arpl
add
imul
xchg
fstpl
fcom
jl
inc
or
jmp
inc
js
adc
push
jb
in
add
or
inc
into
mov
push
ficoml
cmp
mov
cmpsb
xor
ja
xorps
adc
cmp
jno
ret
sub
rclb
cld
out
in
icebp
int3
sbb
ret
sub
into
stos
xor
mov
ret
lahf
out
aaa
push
or
xor
or
out
sahf
test
and
out
xchg
sbb
mov
fsts
xchg
xchg
loope
je
xchg
repnz
dec
cmp
xchg
mov
pop
push
xor
hlt
addr16
pop
dec
or
or
pop
out
pop
sub
cld
fcompl
xchg
push
cmc
fwait
mov
rolb
and
and
pushf
sub
pop
cmpsl
mov
or
dec
push
imul
cltd
std
cmp
std
mov
lea
xchg
pop
pop
adc
fyl2xp1
pop
fwait
xor
mov
and
add
xor
push
mulb
or
test
call
gs
push
in
pop
sub
pop
in
xchg
inc
cmp
add
dec
or
and
or
cmp
mov
mov
mov
lods
mov
insl
or
xor
xor
test
aad
push
push
loopne
xor
or
popa
inc
adc
loop
ja
dec
rorb
int
push
lds
jmp
jno
cs
arpl
xchg
xchg
dec
jne
adc
gs
pop
fwait
cmp
addb
sbb
repz
push
pop
adc
rolb
adc
push
cld
push
or
adc
and
jp
mov
jp
idiv
loope
adc
scas
mov
add
sbb
sub
in
sbb
jg
rcrb
add
into
js
sbb
mov
fisubrl
jns
dec
lds
iret
push
mov
mov
leave
and
popa
aaa
lea
jl
adcl
lds
imul
inc
notl
pop
push
pop
je,pn
adc
dec
insb
jno
xor
adc
jl
inc
sub
test
push
aas
bound
cwtl
call
add
push
loope
lds
sub
xor
sahf
dec
rclb
ja
insl
insb
imul
ss
ljmp
dec
aaa
sbb
mov
pop
sti
pop
stos
sub
jge
or
sbb
pop
dec
and
pop
imul
in
pop
fs
lods
repnz
sub
sahf
test
add
insl
or
cmpsl
push
setno
test
leave
rcrl
push
in
fsubs
push
dec
mov
shll
xchg
lock
out
int
aaa
test
lret
scas
or
cwtl
add
lret
arpl
add
jl
jb,pt
or
dec
xlat
mov
gs
int3
shl
lahf
or
rcll
sub
ret
ret
pop
popa
cmp
outsl
iret
pop
mov
lret
test
imul
sahf
mov
xchg
and
arpl
cmp
cmc
mov
inc
xchg
in
inc
pop
rcl
cmp
outsl
sub
scas
dec
pushf
push
out
jl
inc
lock
cmp
xor
aaa
aad
loop
xor
sbb
xchg
push
pop
sahf
adcl
js
test
pop
mov
pop
jae
push
lcall
test
mov
inc
and
pop
mov
xor
jmp
insl
xor
xchg
and
outsb
lods
mov
lret
add
push
xchg
enter
cmp
cmpsl
or
add
out
pop
jmp
xorb
lods
xchg
in
dec
pop
pop
imul
mov
sbb
dec
or
adc
dec
repnz
xor
jo
and
addr16
daa
or
std
pop
xchg
cs
ljmp
aas
shrl
mov
sub
mov
daa
and
dec
incb
aam
jle
rcrl
sbbl
in
push
and
add
call
repnz
icebp
cmc
mov
cmp
cmp
mov
ret
insl
pop
mov
inc
int3
push
jle
hlt
popf
mov
push
xor
sbb
push
into
fidivrl
cmp
leave
aam
cmpsb
dec
mov
or
sub
shll
ja
movsl
mov
rorl
lds
or
std
push
inc
loop
movsl
push
mov
inc
test
jecxz
stos
rcl
dec
mov
testb
loop
jmp
popa
adc
mov
mov
iret
mov
sbb
je
cli
xor
repnz
insl
push
sbb
in
push
mov
int3
in
dec
adc
push
dec
shll
lea
dec
lea
push
or
ds
daa
mov
and
dec
addr16
test
cli
adc
jae
insl
stos
test
outsb
fucomi
pop
dec
and
das
mov
cmpsl
test
cwtl
mov
stos
push
bound
mov
fistpll
jge
xor
repz
inc
pop
dec
jne
pop
ret
das
sub
mov
dec
in
pop
jae
fistl
call
into
inc
dec
dec
enter
pusha
js
mov
jmp
lret
shlb
movsb
arpl
cwtl
inc
jno
sbb
decl
adc
push
inc
aam
and
rcrb
xor
mov
mov
sbb
in
xchg
xchg
pop
fcom
jno
sbb
inc
and
sbb
mov
dec
push
jae
js
std
or
dec
add
push
lock
mov
cli
sub
xorb
push
dec
mov
in
jns
insb
sub
mov
cmp
fwait
inc
ret
xchg
jns
lods
in
rol
mov
or
repz
pop
dec
fldenv
xor
rcrb
in
push
in
sub
fldpi
rcll
mov
mov
je
into
jbe
jns
nop
pop
push
add
sub
add
into
cmp
test
pop
jle
xchg
clc
bound
xor
notl
xor
mov
adc
ret
push
xor
into
or
pop
fwait
mov
adc
in
push
jnp
nop
push
cmp
test
or
mov
sub
pop
mov
loope
jae
sti
push
jno
enter
xor
pushf
sbb
mov
dec
lods
xor
shlb
insl
cld
loop
mov
inc
jbe
lds
xlat
mov
sti
jecxz
fidivrl
jge
jae
jmp
loopne
inc
loope
mov
mov
divl
cmp
ss
add
lea
je
insl
xlat
push
in
and
lods
push
fcomps
sub
adc
jp
in
adc
test
jge
push
cmp
sbb
push
nop
add
sub
decl
shll
mov
pop
adc
push
movsl
jp
or
enter
aaa
pusha
iret
lcall
stos
cmpsb
out
ret
cmp
xchg
mov
xor
or
testb
lods
jbe
add
or
jp
jne
in
push
mov
les
ret
and
pop
movsl
mov
jg
hlt
inc
hlt
xchg
mov
data16
adc
leave
iret
inc
in
aad
aam
mov
xor
ss
dec
insl
iret
aam
lods
div
xchg
push
push
inc
cmp
scas
inc
mov
js
hlt
cli
push
add
cmp
xchg
adc
enter
cmpsb
add
sti
mov
pop
pop
pop
inc
mov
rol
mov
pop
iret
int3
adc
adc
pop
ds
xlat
dec
test
jae
cld
xchg
lahf
jno
out
xor
es
push
inc
cmp
test
push
cmpsl
adc
inc
ficoml
dec
or
loop
jecxz
lock
cmp
es
push
adc
orb
xor
sbbb
push
cmp
add
in
out
decb
pop
imul
fidivrs
add
inc
in
test
sub
sbb
adc
mov
call
dec
sti
aad
jb
clc
sub
popa
cld
mov
cwtl
pop
inc
and
xor
lods
sub
pop
stos
stos
es
mov
inc
cmp
lret
outsb
sub
or
leave
sbb
xchg
icebp
loope
test
or
cmpsl
xor
fdivs
pop
xor
sahf
pop
lcall
insb
inc
adc
gs
jne
enter
mov
mov
sbb
icebp
and
sbb
pop
adc
ja
jle
cwtl
and
int
lds
ret
es
sub
adc
sbb
adc
sti
loop
cmp
xor
clc
cmp
popa
clc
pushf
leave
fdiv
aaa
mov
push
out
jl
push
aad
std
jg
clc
and
bound
mov
mov
and
cmp
pop
mov
imul
pop
inc
mov
iret
stos
jns
lock
scas
xchg
mov
cvttps2pi
xchg
lahf
jne
out
lods
sub
popf
nop
pop
aad
mov
pop
pusha
mov
jl
push
adc
pop
push
scas
pop
movsl
mov
enter
cmp
inc
cmc
icebp
fcoml
xor
clc
lods
mov
inc
mov
jl
cltd
fimuls
and
cmp
scas
jg
jmp
inc
ret
lahf
dec
stos
xor
push
push
xchg
lods
loop
mov
sub
jp
dec
jg
int
pop
fnstcw
gs
addr16
jecxz
je
cmpb
out
mov
cmpsl
cmpb
pop
jbe
dec
fs
sbb
lods
ficoml
pop
scas
or
ja
or
cltd
popf
imul
and
mov
das
sbb
xor
nop
sub
push
icebp
lods
cld
adc
out
movsb
ja
mov
imul
and
or
orl
inc
loop
gs
arpl
fidivs
dec
sub
sbb
rclb
add
rcr
lods
out
add
or
repnz
scas
adc
pop
sub
scas
jnp
mov
push
outsb
scas
imul
pop
mov
decb
dec
mov
mov
outsl
testl
pop
sub
int
push
or
jbe
cltd
das
fldt
mov
push
in
lret
and
mov
pop
xchg
sbb
and
pop
mov
lods
enter
scas
push
aas
mov
pop
leave
sbb
into
mov
ret
inc
sub
aas
and
inc
and
movsb
sbb
push
enter
pop
sbb
shrb
xor
bt
and
add
add
mov
cmp
sarb
jle
rorl
mov
xchg
call
xor
vprotd
sbb
lods
mov
in
jne
enter
adcl
pop
and
push
bound
adc
add
je
int3
xlat
lcall
push
lds
mov
sub
jg
lds
xor
imul
or
int
xchg
or
aad
shll
mov
adc
iret
rcl
inc
sbb
fmull
outsl
adc
push
push
xchg
out
out
mov
ret
cmp
or
addr16
lea
mov
sub
movswl
lock
test
push
add
and
in
mov
stc
test
sub
jb
lahf
leave
es
jnp
lret
in
pop
fcoml
xchg
inc
pop
gs
fs
inc
test
out
mov
sbb
repz
cltd
dec
sub
ds
lods
jl
test
hlt
jmp
xchg
or
cmp
jns
dec
sar
icebp
aam
xchg
repz
jae
mov
mov
fxam
or
bound
movsb
sub
and
fwait
jne
sti
jb
pop
stc
or
push
adc
cltd
jecxz
push
negl
sub
jne
popa
gs
push
fsubrs
mov
add
int3
cmp
gs
or
cwtl
leave
testl
filds
xchg
lods
and
sbb
adc
sahf
sbb
add
jg
adc
fistl
lcall
add
out
sbb
cmp
cmp
arpl
loope
call
into
and
add
push
inc
and
push
rcr
mov
pop
xchg
mov
xchg
sub
shlb
pop
nop
insl
in
stc
add
pop
in
testb
sub
inc
sub
jmp
xchg
shrl
imul
mov
push
ror
sub
test
jl
aam
dec
insb
ret
je
dec
and
rol
push
loopne
je
je
sbb
rorl
shr
adc
data16
cmpsb
inc
lods
mov
rorl
aad
icebp
mov
jo
es
daa
xchg
mov
sbb
xor
mov
sub
sub
xchg
aaa
sbb
int
sub
sbb
add
shlb
jbe
push
bnd
sbb
mov
jp
sub
in
mov
loop
pop
dec
dec
inc
or
dec
inc
jae
icebp
sub
xor
sub
jbe
aad
mov
mov
mov
sbb
cmpsl
or
mov
scas
popa
int3
sbb
lds
mov
dec
add
xchg
fwait
or
insb
or
jp
mov
iret
fidivrl
inc
pop
ljmp
sbb
dec
or
leave
pop
dec
int
repz
and
lret
mov
xlat
pop
jp
lahf
ret
aam
daa
data16
add
data16
imul
inc
adc
push
adc
sti
insb
loop
test
dec
call
jno
rcl
xor
push
out
jle
add
std
pop
and
in
ljmp
repz
and
xchg
int3
lret
popa
mov
and
ja
xchg
push
lcall
shrb
repnz
cwtl
daa
pop
nop
or
jbe
fs
pusha
pop
add
data16
mov
sahf
mov
sarb
xor
dec
xor
xchg
lahf
out
sub
jl
jl
pop
cmp
xchg
pop
jns
scas
insl
aam
imul
nop
pop
sub
fmuls
lret
add
jle
cmp
arpl
xor
and
lods
push
pushf
push
daa
lds
or
clc
scas
sub
add
mov
sbb
dec
mov
pop
lahf
sbb
cmp
hlt
popf
xor
int3
and
sar
inc
push
int3
xor
mov
mov
or
jae
lods
or
repnz
inc
xor
dec
mov
adc
insb
cmp
mov
sub
clc
xchg
xor
enter
into
ds
cltd
cmpsb
jae
inc
and
xchg
add
sub
pop
flds
int
dec
dec
add
loopw
sub
scas
mov
push
jb
mov
xor
idivl
mull
jp
push
je
and
imull
cmp
jne
pop
dec
push
test
and
pop
loopne
push
push
mov
incb
mov
inc
inc
sbb
push
fldenv
mov
lret
iret
aam
adc
mov
fwait
rorb
push
int
add
inc
adc
in
inc
cmpb
add
cmp
mov
and
pop
sar
cmpsl
in
adc
addb
mov
mov
int3
jae
or
ljmp
mov
adc
mov
mov
es
adc
mov
daa
add
outsb
jns
test
js
pop
mov
xor
xor
mov
fiaddl
fcoml
fwait
hlt
xor
mov
or
imul
aaa
dec
and
int3
mov
aas
std
push
pop
jl
jle
std
jb
jge
shrl
call
rolb
pop
mov
add
jb
adcb
popa
pushf
lods
shl
xor
cmpb
sbb
mov
dec
sub
ret
pop
push
push
scas
inc
test
shll
push
movsl
or
fwait
pop
pop
clc
jo
push
or
sti
and
cltd
test
pop
mov
mov
xor
mov
mov
mov
decb
add
mov
jae
push
lock
jmp
mov
repz
popf
adc
scas
orl
cmp
xchg
xchg
mov
test
clc
lds
scas
sub
ffree
icebp
fsubrs
xchg
adc
ljmp
ret
movsl
dec
dec
jecxz
ljmp
jge
fwait
inc
inc
jmp
ret
test
loope
dec
mov
out
shrl
mov
inc
jae
imul
into
out
adc
pop
jbe
mov
sbbl
push
pop
cmp
push
push
dec
add
push
cwtl
popf
inc
lods
mov
pusha
xor
sub
mov
cmp
stos
cli
add
push
pop
aad
pop
xchg
pop
rclb
repnz
notb
cld
sbb
lcall
out
test
sub
int3
addr16
mov
mov
dec
out
stos
iret
xor
rcrb
cmp
xorb
mov
push
rcrb
mov
mov
mov
or
mov
in
loopne
dec
mov
fisubs
and
inc
xlat
fstpt
mov
rcll
loope
in
mov
mov
bound
call
xchg
cltd
sub
aas
jmp
imul
mov
jae
jb
cltd
sarb
xor
push
adc
leave
movsb
clc
xchg
lahf
movsl
inc
fmull
sub
push
mov
les
std
test
pop
addr16
into
hlt
sbb
sub
pop
or
js
es
andl
mov
lcall
cwtl
adc
popa
adc
sbb
and
add
not
add
pop
lea
lea
push
mov
daa
mov
jno
dec
adc
push
sbb
pop
ret
xor
pop
pop
xchg
jne
xor
push
fnstcw
scas
and
shlb
nop
fisubrl
hlt
push
pop
outsb
lahf
fsts
jbe
add
lcall
dec
repz
push
mov
lods
xor
dec
dec
into
mull
jg
mov
mov
push
dec
ljmp
int
stc
or
clc
dec
xchg
mov
jmp
or
and
fs
cltd
shrd
cmp
ds
movsb
in
pop
cmpsb
daa
shll
cmp
add
inc
mov
cs
bound
inc
into
std
push
icebp
or
pop
jns
arpl
subb
cld
pushl
in
pop
dec
enter
jno
dec
adc
popa
test
in
ret
pop
adc
pop
jae
aad
in
insb
xchg
sahf
mov
dec
ret
lea
out
shll
das
jmp
mov
lcall
and
imul
mov
cwtl
push
mov
cmpsb
into
sbbl
push
xor
insl
push
push
push
push
dec
add
lea
push
jnp
std
mov
or
stc
movsb
sub
lahf
stos
and
shlb
sub
insl
mov
pop
dec
adc
add
add
xor
or
push
jne
fildll
or
cmp
clc
xchg
lcall
sbb
out
cli
fsubl
lcall
sub
ud0
pop
sub
imul
fwait
insl
sub
jl
dec
les
data16
mov
cmp
outsb
ljmp
repnz
inc
and
icebp
pop
cmpsl
xor
lret
es
mov
out
or
jbe
dec
jp
jp
aas
jbe
sbb
out
fadds
hlt
insb
mov
std
adc
or
pop
push
or
sti
xor
cltd
lcall
bound
in
xor
call
popf
cmp
add
leave
cmp
inc
ret
arpl
jnp
sub
xchg
cld
fisttpl
dec
adc
shrb
decl
stos
inc
mov
xor
test
stc
adc
inc
xchg
rcrb
in
aaa
aas
test
dec
ja
fs
cmp
dec
mov
out
lods
xlat
dec
lods
cmpsb
stc
push
or
cltd
inc
or
adc
hlt
mov
sub
movsl
icebp
ja
les
int3
insl
in
pop
movsl
inc
in
jno
cltd
add
lcall
out
mov
lcall
fisubs
jne
iret
xchg
call
scas
push
pop
bswap
scas
mov
sbb
arpl
lret
jae
mov
push
jns
lcall
repz
fists
test
xchg
pop
xchg
xchg
ret
push
mov
iret
mov
pop
into
icebp
loope
leave
popf
aam
xlat
jno
popf
rcl
xchg
add
test
adc
pop
in
loope
push
outsb
push
cmpl
sbbl
call
pop
sub
test
scas
mov
outsl
adc
jecxz
fidivs
dec
sbb
ss
adc
xchg
lahf
xor
inc
sub
push
inc
mov
and
subl
sbbl
or
xchg
mov
ret
cmp
rorl
dec
mov
jg
pop
xchg
icebp
pop
nop
mov
test
lahf
pop
sbb
in
jne
outsb
xor
adc
lret
lcall
imulb
mov
sbb
loopne
cmp
je
jle
addr16
cmc
aam
inc
xorl
mov
sbb
icebp
stos
jecxz
xchg
sti
and
rorb
mov
rcrl
pop
sbb
and
movsb
sti
dec
push
pop
add
ss
sti
rol
cli
pop
out
sysret
sub
jg
sub
adc
or
daa
xchg
push
jl
les
enter
jb
xchg
mov
adcb
pop
ja
das
or
into
dec
or
ja
fildl
cmp
sti
xchg
clc
imul
stos
or
mov
adcb
cmp
mov
out
mov
xor
int
aam
cmp
pusha
mov
push
les
adc
pop
mov
movsl
pop
out
in
andl
adc
mov
and
jg
cli
jb
test
xchg
popa
or
xorb
mov
inc
je
add
icebp
repz
out
outsl
je
rorl
cltd
mov
subl
sbb
outsl
xchg
test
jae
in
and
scas
inc
pop
lret
or
push
ljmp
mov
sbb
xor
popf
hlt
xor
lcall
mov
add
test
test
add
cmp
jnp
xor
mov
push
xchg
insb
mov
test
ja
cvtpd2ps
jbe
lret
and
js
arpl
loop
dec
mov
jp
xor
jmp
mov
iret
xor
decl
scas
push
stc
das
xchg
xchg
mov
sbb
pop
int3
jle
cs
fsubrl
inc
shrl
clc
sbb
jne
scas
xchg
sub
dec
adc
and
int3
or
mov
dec
shll
cmp
cltd
es
jb
or
sarb
add
pop
stos
xor
std
jae
fwait
mov
add
lea
fadd
fistpll
jge
fdivs
mov
add
push
fdivrl
imul
stos
adc
add
sub
fistps
inc
lahf
shll
inc
cmp
iret
dec
arpl
sub
int
or
enter
jne
fsubrs
mov
ret
subl
push
inc
das
std
mov
push
sahf
sbb
pop
out
and
push
cld
lcall
insb
pop
or
stos
hlt
outsb
les
das
push
bound
dec
xchg
dec
cld
gs
popa
pop
cmp
sub
fnsave
push
loopne
or
jl
stc
ret
push
shlb
add
fidivl
sti
std
mov
xchg
pusha
sbb
jb
or
popa
out
loopne
mov
pop
push
jle
lcall
into
insb
or
push
ret
fs
push
mov
or
lahf
sbb
xchg
js
loop
pop
adc
ja
sbb
xchg
stos
add
jl
sbb
cmp
xor
dec
lahf
cmp
push
orb
imul
lahf
mov
jns
xor
pop
les
mov
rol
mov
stos
hlt
test
adc
rcr
dec
jle
lods
push
loopne
inc
push
push
xor
cwtl
stos
mov
adc
mov
es
cmpsb
jmp
icebp
push
add
aad
sti
jecxz
mov
push
mov
dec
ret
push
pop
movsb
mov
arpl
xchg
and
orb
push
ffreep
scas
fbld
push
jb
ret
mov
push
cmp
jno
push
or
xor
insb
pop
pop
cmp
ss
mov
mov
out
xchg
add
push
repnz
sbb
adc
aas
sbb
push
int3
inc
jno
jns
je
mov
mov
xor
and
mov
repz
xlat
inc
adc
or
loope
push
out
inc
in
shll
push
iret
or
sbb
dec
mov
in
enter
test
call
jb
lret
aad
jae
xchg
out
adc
mov
jl
fisubs
add
xor
aam
repz
and
pop
cwtl
das
enter
push
inc
lods
and
mov
lock
mov
je
push
inc
or
mov
mul
add
mov
mov
adc
push
mov
nop
stc
push
push
sub
pop
aaa
idivl
insl
and
cmpsb
dec
pop
jne
out
jo
pop
add
xchg
lea
adc
sub
mov
pop
push
enter
imul
rcll
scas
xlat
loopne
dec
mov
stos
arpl
jo
jp
jnp
iret
lret
loope
fstps
jmp
rcrb
and
bound
lods
in
push
inc
sahf
jne
pushf
and
xchg
xor
push
leave
pop
mov
test
cmp
iret
movsb
sub
mov
mov
mov
fnstenv
dec
mov
push
push
fwait
rolb
cmp
xor
pop
imul
and
sarl
int3
pop
adc
push
mov
insl
mov
xchg
fld
sub
loope
dec
jne
fidivrs
mov
push
mov
cmp
cmpsl
and
sub
mov
out
sbb
loopne
or
add
mov
andl
inc
and
mov
xchg
mov
xchg
xor
push
fildll
aaa
sarl
sub
mov
dec
loope
jge
mov
and
mov
movsb
mov
adc
dec
mov
mov
xor
sbb
push
or
inc
xchg
xchg
sub
test
ficoms
mov
jnp
mov
sahf
xor
mov
nop
dec
pusha
pop
mov
fwait
lret
lret
cltd
arpl
call
aaa
mov
sbb
cli
push
jg
das
pop
in
lea
pop
pop
in
xor
outsb
xchg
inc
pushl
sub
cld
xor
cli
sahf
data16
mov
mov
inc
scas
divl
sarb
xchg
mov
fidivl
xlat
jbe
cltd
loope
sbb
sarl
fstl
pusha
push
adc
aas
test
stc
add
jle
push
xor
shrl
xchg
outsl
inc
enter
mov
jb
pop
or
pushf
lret
mov
sbb
aad
jns
cltd
int3
dec
stos
mov
shlb
jns
out
cwtl
mov
sub
dec
fwait
scas
xchg
push
pop
ss
push
lods
xchg
push
xor
sub
mov
and
sahf
add
pop
xor
jns
iret
jg
aam
or
rcrl
push
dec
sbb
testl
and
mov
sub
adc
xchg
pop
icebp
pop
cwtl
cmp
inc
pop
into
dec
jp
stos
ret
mov
shlb
dec
inc
lods
cli
push
jno
lds
jb
pusha
inc
xor
popf
sub
mov
jge
inc
pop
cmpsl
xlat
jecxz
insb
pop
enter
jl
nop
cmp
clc
jge
pop
add
out
das
xlat
mov
xchg
jle
mov
push
inc
xchg
je
add
fnclex
push
cmc
xchg
cmp
imul
test
jg
test
jnp
shll
stos
xlat
inc
xlat
and
into
sahf
out
and
cmp
mov
ljmp
adc
lods
sti
mov
mov
nop
mov
mov
cmpsb
xchg
mov
add
ja
shrb
dec
and
hlt
sahf
xchg
fcmovnbe
adc
in
rcl
jbe
mov
mov
decb
sub
pusha
addr16
push
xorl
cmp
sbb
daa
xchg
and
xchg
and
and
mov
mov
faddl
ret
aaa
mov
bound
pop
lcall
cmp
test
sub
jecxz
mov
mov
lods
mov
andb
cmp
jmp
sub
ljmp
leave
push
adc
lret
pop
pop
enter
jns
jecxz
jge
cmp
aas
das
add
cmpsl
pushf
dec
out
jmp
push
xchg
aad
mov
imul
pop
jmp
sub
scas
mov
aaa
push
repz
mov
pusha
int
lahf
cmpsb
aaa
dec
mov
movsb
lcall
insl
cli
pushf
mov
jmp
ror
loopne
sbb
fnsave
adcb
decl
out
sti
xchg
jmp
mov
sbb
pop
and
sbb
in
jl
mov
ret
xchg
rcll
ror
push
lea
popf
jle
pop
mov
mov
inc
negb
sahf
scas
jp
ds
bound
fists
or
or
cmpsb
je
cmc
cmp
xchg
sbb
or
and
mov
xor
push
jecxz
jp
stos
pop
xchg
or
das
push
push
stos
sarl
mov
std
cmp
cmp
shufps
inc
and
and
mov
mov
mov
xor
pop
dec
push
xlat
ja
imul
fcoml
mov
stc
lcall
insl
in
js
jbe
jb
mov
rcrb
int
dec
jno
das
pop
push
cmp
pop
jb
inc
aaa
pop
mov
mov
gs
addl
int
out
push
out
rcr
call
rorb
aam
cmc
pop
jmp
cmp
fsts
ret
pop
adc
mov
inc
ret
outsl
jo
add
pop
imul
xchg
fwait
outsb
pop
mov
inc
sub
out
outsl
mov
dec
insb
cmp
push
pop
mov
out
jns
std
loop
inc
sbb
mov
adc
popa
jecxz
dec
fnstcw
fxch
lods
test
mov
pop
jge
int3
arpl
out
push
dec
out
inc
cmp
mov
mov
cltd
jp
clc
imul
add
loop
mov
sub
xchg
in
sbb
pop
xchg
lcall
push
xlat
and
or
into
imul
adc
jo
inc
mov
dec
faddl
add
xor
stc
mov
mov
jmp
jnp
pusha
mov
push
shrb
push
arpl
mov
addl
or
sti
sub
jge
sub
loope
cmp
mov
push
shll
or
dec
jne
cmp
or
sahf
rorb
sbb
retw
mov
cli
divb
cwtl
inc
js
ljmp
xchg
sub
jns
shlb
jne
jno
push
jl
pop
insb
into
dec
lea
test
in
mov
inc
xor
icebp
test
mulb
imul
push
jmp
shlb
sbbb
push
loop
idivb
and
mov
cmp
xchg
and
out
insb
sub
push
fdivl
sub
jne
xlat
andl
cmc
imul
ret
xor
lds
mov
outsl
out
sub
imul
lods
fcoms
gs
mov
pop
pop
fldl2t
adc
cmpl
jne
je
add
cs
pop
das
and
mov
mov
leave
fisttpll
stos
addl
mov
mov
cld
loopne
fstpt
mov
fsts
lock
xor
aad
jmp
pusha
xchg
rclb
ret
or
mov
sub
lahf
mov
cwtl
insb
xor
imul
and
in
dec
dec
jne
out
jg
addr16
icebp
scas
cld
lret
xor
fdivs
dec
pop
fidivrl
jb
push
inc
and
push
pushw
mov
jecxz
jne
mov
shlb
jge
pushf
xchg
pushl
add
mov
push
xchg
in
pop
popf
sahf
and
incb
mov
shrl
call
sub
cmpsl
ljmp
lock
or
repnz
call
out
or
or
jns
lods
ljmp
test
and
les
test
test
mov
jbe
jmp
xor
cmp
aam
ja
mov
add
mov
and
xlat
or
adc
push
in
roll
aam
push
xchg
dec
sub
fwait
sub
pop
or
push
or
sarb
fnstsw
or
pop
cmp
xchg
or
and
add
data16
mov
xor
fwait
jmp
rcrl
mov
push
xor
push
shll
int3
ret
sbb
pop
sub
mov
jne
sahf
mov
inc
dec
mov
sub
movsl
jmp
rorl
sbb
inc
fs
mov
push
mov
jbe
mov
es
movsb
sbb
repz
and
xchg
dec
mov
jecxz
shl
pop
out
cltd
mov
jp
mov
ja
mov
fs
icebp
mov
data16
xchg
cmpsl
xchg
xchg
ror
push
mov
sbb
jle
sub
push
adc
xor
xchg
addr16
or
psubusb
or
insb
loopne
adc
jp
xchg
lock
jo
daa
mov
add
rolb
pop
push
xor
pushf
mov
data16
pop
clc
jge
stos
jecxz
jg
dec
mov
push
cmpsl
imull
inc
dec
sub
jg
sub
ret
xor
push
xchg
js
lahf
fsubs
mov
xchg
xchg
xor
add
das
sub
push
mov
ret
ret
rolb
inc
or
les
adc
les
shrb
cld
movl
out
hlt
les
cmp
cmp
mov
stos
aaa
and
sar
mov
and
jo
dec
cmc
clc
subb
mov
mov
and
cld
mov
sarb
nop
cld
jo
pop
das
cmp
test
add
popa
cmpsb
cmp
test
or
sub
inc
mov
popa
std
pop
bound
lods
ljmp
cmp
repnz
sbb
rorl
jg
sbb
pushf
and
inc
fdivl
sahf
jne
push
and
dec
pusha
rorb
pop
ret
add
push
cmp
inc
adc
fs
xorb
push
sbb
loop
gs
out
xor
jae
ret
push
pop
dec
in
hlt
cmpsl
push
test
xor
dec
adc
push
les
popf
cmp
gs
js
push
adc
jmp
push
lret
jecxz
mov
pop
xor
lret
mov
daa
jmp
mov
jmp
jp
mov
aaa
lods
je
les
test
pop
mov
fs
movsl
xchg
dec
mov
mov
jge
or
push
fwait
lcall
push
scas
pop
mov
mov
add
sbb
jno
mov
pop
in
filds
mov
addb
cs
mov
xor
cli
mov
dec
std
xchg
push
pop
pop
pop
mov
ljmp
sarb
dec
ja
lcall
popf
js
mov
subl
gs
in
dec
lret
stos
push
ss
push
nop
neg
pop
into
js
cmp
fwait
mov
hlt
or
leave
mov
jle
pop
mov
mov
xchg
repnz
inc
xor
es
sub
repnz
iret
mov
add
clc
gs
lds
leave
cmp
and
cmp
in
sti
out
adc
pop
hlt
jmp
pushf
rcl
jns
adc
and
pop
stos
int3
adc
pop
das
repz
xor
or
arpl
jg
push
pop
push
rcrb
jae
mov
push
fwait
pusha
and
jl
out
pop
rclb
push
mov
xchg
sub
aad
mov
icebp
rcl
std
in
sahf
fidivrl
sbbb
imul
lret
jmp
adc
test
mov
adc
pop
jp
imul
incb
cs
xorb
cmpsl
popf
daa
xchg
lods
int3
fsubs
xor
mov
movsb
sbbl
pusha
repz
lret
lds
insl
dec
push
pusha
shrb
xor
movsb
inc
ljmp
fstpt
loopne
sahf
jne
mov
mov
test
push
sub
xchg
outsb
scas
jnp
data16
nop
mov
rorb
mov
push
adc
leave
movsb
inc
mov
mov
sarl
jae
cmpsl
pop
xor
xchg
or
hlt
hlt
shlb
into
add
inc
and
sub
fwait
pushf
data16
jae
sbb
cmp
insb
fisubl
fsts
jnp
in
xchg
add
in
xchg
jmp
js
sbb
jae
roll
jae
loope
jmp
mov
sub
xchg
xchg
ljmp
jo
test
mov
fsubrl
and
pusha
repz
mov
out
sbb
mov
add
and
dec
repz
pop
mov
movsl
mov
jmp
or
sbb
or
mov
in
pop
scas
jge
lock
or
inc
mov
fadds
insl
pop
jp
mov
ds
pop
pop
cli
call
jl
rcrl
jae
in
jb
jl
jmp
mov
movl
mov
sbb
pop
es
in
sbb
sbb
or
ret
mov
and
ret
scas
pop
int
cmp
imul
mov
push
ror
nop
pop
adc
xor
and
out
repnz
adc
and
xchg
call
loopne
cmp
mov
pop
pop
xor
test
add
inc
roll
jp
mul
dec
dec
sbb
and
push
ljmp
dec
add
mov
sti
ret
mov
jle
hlt
jne
xchg
adc
lods
lahf
inc
rorl
inc
in
inc
dec
xchg
inc
sub
imul
jo
mov
pop
cltd
rcrb
outsl
inc
bound
mov
lods
xchg
jo
sub
sub
lods
outsl
fsubrs
jp
addr16
addr16
jmp
push
mov
xchg
loope
push
push
lret
pop
lock
cmc
sbb
push
in
inc
pop
adcb
xor
jge
jo
sbb
jmp
stos
aam
xchg
jno
lret
mov
insl
fwait
mov
pop
xor
test
fcom
pop
mov
popa
fwait
push
push
ja
leave
mov
fbld
fldenv
shll
lods
or
dec
inc
adcb
lret
mov
in
adc
cltd
ja
mov
out
mov
les
mov
xchg
push
mov
nop
mov
mov
lods
cmp
aam
loopne
and
into
jnp
pushf
inc
sub
hlt
dec
and
loop
fbstp
stos
inc
mov
nop
stos
mov
cmp
dec
cmc
mov
sub
outsb
fstpt
mov
loop
mov
repz
pop
adc
dec
cmp
test
js
clc
mov
out
adc
enter
inc
or
add
rolb
call
jbe
push
xchg
pop
and
pop
call
push
icebp
xor
mov
jecxz
cmpsl
ds
push
insl
testl
sbb
push
int
jno
or
mov
frstor
sub
xchg
fsubr
les
loopne
xchg
and
cmpsl
sub
lahf
in
cbtw
mov
or
xchg
test
jmp
pop
inc
loopne
and
pop
xlat
push
mov
pusha
adc
call
dec
adc
shrl
adc
aam
jae
loope
push
out
or
cmpsl
incl
call
fstps
test
aad
pop
xor
flds
dec
xor
mov
or
test
sar
popa
push
orl
clc
mov
dec
cmc
and
adc
jnp
js
addl
jmp
jae
add
mov
jbe
add
mov
jb
push
stc
cmp
jns
dec
dec
mov
or
mov
and
adc
clc
inc
loopne
add
xchg
jo
mov
insl
aam
sub
push
xchg
mov
call
adc
shrb
addb
out
sub
jb
push
xchg
aam
push
fs
sahf
push
test
sti
sub
xchg
push
addr16
ss
stos
fisubs
push
lcall
jo
lret
mov
mov
push
cmp
mov
sub
cltd
jge
xchg
pop
xorl
lcall
add
pusha
ljmp
adc
insb
loope
xor
ret
push
add
sbb
sbb
repnz
sub
bound
inc
mov
pushf
daa
out
cmpl
push
lea
ds
into
xor
aad
mov
arpl
and
pop
sub
add
cmp
shll
das
mov
je
dec
mov
pop
cmp
mov
mov
sub
mov
fistl
adc
mov
popa
mov
or
lret
cmp
push
lock
xor
dec
inc
add
outsb
sub
sbb
dec
loop
loop
or
imull
lahf
rcl
mov
sub
inc
test
jnp
mov
cmpsb
dec
aad
nop
or
adc
xchg
push
mov
fiaddl
pop
xor
je
mov
dec
or
and
inc
and
mov
sbb
sahf
sbb
in
sub
cmpsl
mov
fstpt
xchg
lods
enter
xchg
repz
les
mov
dec
jmp
lds
std
push
push
pop
xchg
push
jp
in
insb
loopne
or
pop
ret
mov
xchg
call
in
pop
call
cmp
mov
iret
mov
mov
les
cwtl
cmp
test
sub
pushl
pushf
dec
xchg
and
jno
push
xchg
clc
xchg
xchg
pop
pop
or
test
or
popf
movsb
sbb
jle
sti
call
dec
mov
lret
mov
push
test
xchg
pushf
imul
daa
ret
fwait
xchg
sbb
pop
inc
stc
push
ds
sub
pusha
fs
push
mov
loope
push
xlat
repz
pop
push
add
jae
dec
mov
mov
cmc
cmc
negl
out
add
or
nop
xchg
in
nop
adc
jnp
sahf
in
adc
insl
movsb
and
into
adc
dec
out
int3
out
adc
pushf
rcl
out
outsb
mov
test
data16
push
clc
mov
sbb
ss
jmp
ljmp
jae
push
addr16
daa
xchg
je
lahf
in
xchg
mov
push
sub
adc
adc
dec
xchg
mov
shrb
fsub
push
sub
js
test
out
dec
mov
push
sbb
popf
pop
test
pop
pop
pushf
bnd
dec
cld
popf
shr
jne
pop
lock
pop
lret
sbb
cmp
mov
inc
xor
jmp
jg
scas
mov
iret
dec
mov
push
add
stos
inc
mov
loope
pop
std
std
xor
pop
js
mov
out
jl
pusha
pop
sbb
popa
cwtl
cmp
mov
test
stos
pop
mov
test
idivl
sti
nop
scas
mov
mov
inc
mov
sub
cmp
rorl
sub
pop
lea
mov
scas
lret
xorb
inc
andl
mov
and
and
clc
std
fisubrs
xor
dec
cmp
xchg
add
sti
mov
mov
adc
lods
out
dec
fisttps
in
insl
nop
xchg
sti
mov
sbbb
mov
xor
cmp
rol
xorl
add
cld
xchg
andb
jbe
adc
xor
fsubl
pusha
lcall
inc
ficoml
adc
pop
cmp
cmp
xchg
and
push
rclb
inc
sub
repz
xor
cmp
jmp
and
shl
adcl
xchg
int3
pop
jmp
outsl
xor
ret
mov
notb
test
sbb
mov
push
out
sub
jle
jno
test
int
sarb
pop
mov
adc
stos
test
clc
mov
scas
pop
xchg
jne
fimull
lret
fsubrl
xchg
sbb
jo
adc
arpl
mov
ret
je
icebp
nop
push
movsb
inc
scas
mov
and
push
jge
outsl
ficoms
push
pop
jl
stos
xor
and
and
rolb
ds
add
mov
push
add
push
repz
fsts
sub
mov
jmp
in
fabs
adc
xchg
dec
push
push
lcall
stc
ss
daa
push
jb
lret
out
adc
mov
movsl
push
and
mov
and
jg
lcall
pop
xor
xorb
je
mov
jmp
jno
jb
ret
sbb
xor
push
je
xchg
pushf
mov
push
gs
imul
dec
inc
dec
inc
and
push
test
clc
or
adc
sbb
fcoms
test
jmp
dec
in
mov
mov
test
dec
filds
das
mov
lahf
dec
jb
hlt
mov
or
jl
jl
xor
in
xchg
dec
adc
sbb
in
or
jno
imul
sbb
adc
mov
fcompl
es
pusha
jne
pop
dec
je
and
call
shrl
fadds
inc
sub
and
dec
push
mov
daa
mov
movsl
in
dec
inc
inc
shll
xor
dec
dec
fs
sti
fistpll
inc
mov
jl
dec
pop
mov
sbb
lods
dec
mov
sub
pop
cmp
add
jbe
xlat
fstpl
mov
push
mov
xor
mov
mov
push
ljmp
mov
and
lock
inc
mov
mov
cmp
push
xlat
sbb
xchg
insl
jo
cmp
lods
pop
sub
or
fdivs
inc
loop
mov
stos
cmp
es
movl
mov
cmpsb
andb
jae
je
scas
dec
cmpsl
cmp
inc
ja
orl
dec
jle
icebp
jp
and
xchg
push
add
test
and
cltd
call
and
es
push
testl
ret
dec
cld
mov
xchg
sub
rorl
xor
rolb
psubusb
lds
push
dec
push
inc
jne
xor
test
test
out
xchg
mov
pop
pop
or
xchg
xchg
imul
popf
xor
aas
cmp
loopne
push
test
rcrl
popf
in
fprem
xchg
jp
jb
mov
adc
cmp
cmc
shl
jns
mov
xor
std
xchg
push
mov
andl
dec
pop
adc
sub
mov
insb
repnz
in
test
push
ficompl
mov
loop
add
inc
jbe
hlt
loopne
in
push
adc
inc
int
sbb
add
sbb
jnp
add
mov
inc
cmp
sbbb
sub
jg
cwtl
adc
rolb
dec
mov
mov
test
add
pop
xor
inc
fstpl
add
mov
test
cltd
cmp
test
testb
fcomps
jne
inc
mov
jns
and
sub
movsl
adc
sbb
adc
and
adc
xor
out
sbb
jne
push
aam
scas
pop
cmp
adc
jmpw
xor
addb
cmpsb
cmp
and
or
sbb
stc
enter
pop
dec
xchg
jne
dec
rcrb
pop
pop
lcall
imul
iret
addr16
cld
in
xor
add
in
lock
inc
ret
xchg
nop
or
mov
lret
repnz
push
inc
cmp
aam
mov
push
das
cwtl
jnp
xor
push
dec
ja
popa
es
pop
and
subb
xchg
ljmp
cmp
ficoms
mov
dec
dec
push
std
mov
push
dec
push
cmp
outsb
cli
popf
aam
insb
pop
aam
gs
jecxz
jle
mov
add
int3
mov
mov
add
jbe
jo
mov
arpl
or
int
dec
adc
push
popa
dec
imul
ret
flds
sbbb
mov
leave
aaa
in
jle
pcmpeqw
inc
dec
dec
mov
lret
push
scas
in
cmp
shl
bound
stos
ret
popf
call
mov
dec
std
rorb
aad
cmp
mov
jne
ljmp
repz
and
mov
mov
pop
inc
enter
enter
pushfw
movsl
insl
mov
loope
or
aas
loope
mov
pop
cmp
add
imul
outsb
scas
cwtl
cmp
cmpsl
loopne
push
vmwrite
jl
push
outsb
out
inc
icebp
mov
dec
jae
ljmp
pop
rcr
cs
lock
push
push
xor
cmpsb
xchg
sarb
jl
movsb
jbe
loopne
clc
jbe
lods
sbb
into
les
mov
repnz
cli
lock
call
xchg
xor
out
mov
mov
inc
cltd
push
sti
scas
push
mov
mov
xchg
mov
negl
or
fldl
mov
stc
lods
xsavec
jno
lods
pop
test
push
push
pop
addl
xchg
lret
jmp
push
add
loopne
icebp
or
xlat
cltd
adc
xchg
outsl
xchg
and
xor
jns
jae
aad
aas
cmp
xor
jnp
push
in
and
cwtl
xor
and
or
push
mov
scas
addl
xchg
int
jge
int
jmp
test
mov
js
test
xchg
cltd
ss
fnstsw
cmp
mov
ret
into
cltd
aas
cmp
sub
out
mov
pop
inc
cwtl
test
loope
cs
shll
cli
imul
cli
xlat
add
bound
testl
cmp
test
push
mov
push
or
jmp
shl
lcall
mov
sub
imul
clc
aam
arpl
sbbl
mov
ret
push
inc
mov
xchg
mov
call
lods
daa
shrl
jnp
cmpsl
stos
jge
or
jns
inc
mov
xchg
stc
push
cmp
xadd
mov
stos
xor
clc
or
or
test
stos
fsubrs
sub
xor
cmpb
inc
inc
xor
cmp
repz
in
and
pop
mov
or
push
imul
rclb
loope
and
mov
inc
rdmsr
and
lret
jmp
or
sub
fistps
dec
data16
sbb
aas
xchg
sub
adc
push
cltd
push
in
dec
cmp
pusha
test
xor
fucom
int
pop
inc
jnp
das
inc
push
icebp
and
pop
fldt
cmp
inc
cmp
sbb
shll
mov
xchg
pushfw
mov
pushf
sub
xchg
iret
and
repnz
imul
loop
fdivs
stc
rcrl
jecxz
jbe
jmp
pop
lahf
cmp
js
dec
in
mov
insb
push
adc
push
lds
pop
xor
pop
pusha
or
popf
push
fsubp
push
mov
xchg
rolb
jnp
sti
jle
enter
pop
pop
xor
xchg
adc
fldcw
dec
sahf
sub
cmp
movl
idivl
ss
shll
or
fwait
sbb
loop
lcall
add
test
add
loope
popf
sub
test
stos
xchg
fcomps
jb
and
xchg
pop
fildl
iret
push
jbe
xchg
jnp
stc
cmp
cmpsl
adc
and
movsl
cld
mov
cmp
xchg
gs
addr16
out
mov
mov
cmpsb
mov
arpl
inc
lods
push
push
pop
mov
or
test
std
jmp
adc
adc
mov
adc
loopne
pop
cwtl
scas
xor
iret
js
inc
and
test
cld
out
pop
sub
adcb
push
out
inc
daa
xor
dec
push
pop
std
stos
verr
leave
ja
lea
jae
mov
rep
cmp
pop
or
ret
fcomps
out
adc
xlat
xchg
lret
xor
cmpb
dec
jge
enter
add
ret
imul
xchg
sti
mov
aaa
test
mov
mov
xor
mov
iret
xchg
jge
mov
scas
xchg
dec
inc
mov
sbb
mov
lods
mov
xlat
mov
outsl
pop
aad
sahf
out
xchg
lock
add
add
cmpsl
lcall
or
lcall
pop
jecxz
add
sbb
decb
and
pop
js
push
sbb
jmp
dec
dec
mov
ss
push
leave
int3
jb
imul
dec
pusha
inc
xchg
cmp
mov
test
clc
add
mov
push
jecxz
inc
and
mov
out
pop
imul
push
pop
sub
div
imul
xchg
jne
cmp
cmp
out
test
or
mov
aad
sub
cmpsb
mov
mov
dec
cmpsb
push
cmp
and
repnz
pop
loopne
cmpsl
cmp
mov
mov
lret
scas
or
clc
xchg
aad
add
lret
pop
cmpsl
movsl
lods
push
lds
or
aas
xchg
test
hlt
lds
stos
mov
popf
jnp
arpl
adc
dec
xor
test
out
shll
pop
int3
ror
repz
push
jbe
push
in
das
lcall
cmp
dec
sbb
xor
fnsave
repz
mov
popl
xlat
mov
leave
ffreep
xchg
pop
mov
sub
inc
int3
icebp
sbb
cli
ss
fstenv
mov
lods
sub
mov
pushf
mov
fidivl
mov
stos
sub
jo
mov
mov
xchg
mov
mov
rcl
inc
mov
jae
jne
xchg
and
cmpsl
pop
mov
out
ds
dec
mov
cmp
fsubs
inc
cwtl
sub
and
pop
xchg
inc
sub
and
and
leave
aas
adc
repz
sbb
mov
outsb
mov
sbb
pushf
rorb
rclb
xchg
xchg
popa
and
and
sbb
xchg
inc
jne
sbb
setbe
and
sbb
mov
cs
and
xchg
movsb
movsl
call
out
ljmp
cmp
das
inc
add
sbb
clc
scas
sarl
xchg
add
or
pop
adc
fwait
leave
loopne
call
xchg
icebp
cmc
mov
call
stos
adc
fcomps
je
xorb
in
lock
cld
enter
mov
inc
cld
enter
mov
js
inc
andl
pop
imul
lds
insl
adc
sub
in
stos
loopne
out
clc
call
negb
shl
pop
mov
jle
mov
orps
mov
iret
adc
mov
mov
mov
push
jbe
xlat
stc
addr16
int3
mov
cwtl
mov
cmp
push
ror
in
cmp
mov
lcall
test
iret
pusha
rclb
dec
mov
pop
pop
inc
cli
add
in
loope
jge
pop
fmull
js
mov
leave
adc
dec
loop
hlt
and
jb
jg
push
dec
fimuls
cmp
xor
loope
idiv
push
lds
sub
add
jno
sbb
inc
clc
xchg
xor
cmp
insl
in
shrl
and
xchg
jnp
push
fcompl
out
sar
enter
xchg
sbb
lret
lcall
and
dec
roll
mov
jb
mov
ficomps
mov
mov
ret
cwtl
cmp
cmp
insl
cli
cld
jae
pop
gs
aam
in
jns
mov
adc
scas
lds
daa
sbb
mov
cmp
call
dec
sbb
fdivs
sbb
jb
pop
idivl
mov
lcall
aas
add
xor
lock
adc
xchg
loope
jg
rclb
mov
dec
sahf
dec
adc
das
cwtl
out
lret
cmp
mov
notl
adc
push
xor
call
adcb
mov
push
or
stc
lcall
xchg
cmp
mov
pop
sarl
mov
push
or
dec
std
add
dec
fisttpl
sub
xor
loop
sbb
test
or
jl
xchg
or
xorl
add
ss
dec
enter
mov
in
dec
xchg
push
dec
or
mov
jbe
jmp
fimull
aad
push
dec
push
xchg
sbb
loope
ret
cmpsb
popa
js
clc
pop
xchg
jmp
mov
aaa
aas
lock
cmp
inc
xlat
push
icebp
or
pop
sub
fs
xchg
std
and
xchg
test
mov
add
imul
lock
out
popa
xor
jg
out
mov
or
mov
ret
outsb
iret
shll
cmp
stos
movsb
mov
orb
jbe
adc
cmp
mov
mov
loop
jge
js
cmpb
int
iret
inc
push
ror
inc
out
adc
int3
add
dec
insb
pop
cmp
pop
inc
rcrl
fisubs
pop
faddl
mov
mov
ja
insl
cmp
repnz
and
nop
insb
incb
xchg
xor
jne
add
mov
fs
lret
push
adc
jmp
test
bound
lds
lretw
xchg
push
insl
std
fwait
dec
daa
loope
jae
jbe
ss
mov
shlb
pop
inc
cmpsl
dec
pop
sbb
scas
pop
jb
sub
popa
adc
add
push
sub
pop
int3
sbbb
mov
or
and
xor
dec
test
fadd
jge
mov
add
xor
add
popa
xchg
mov
sahf
test
push
stos
int3
in
pop
or
inc
mov
push
and
adc
in
lea
scas
mov
pop
sbb
decl
pop
sub
cltd
add
xorl
fistps
xlat
lret
pop
lret
inc
mov
aas
addl
xor
jle
adc
cwtl
pop
shll
jecxz
es
sbb
cmp
es
pushf
adc
pmulhuw
aas
inc
dec
cmp
push
js
and
addr16
and
js
jae
and
jle
repnz
pop
and
ja
pusha
adc
les
sbb
jno
xchg
jbe
call
les
out
fs
push
jmp
dec
push
mov
movsl
xor
dec
call
pop
pop
xchg
fstps
rcrl
jne
jge
insb
ret
andl
jg
xchg
jp
in
ljmp
jno
push
gs
in
sub
mov
cmc
jne
js
mull
jecxz
jne
mov
jge
lret
adc
jbe
pop
popf
and
or
xchg
and
popa
dec
sbb
out
or
scas
cmp
stos
pop
mov
cmp
and
aas
xor
push
sahf
outsb
fdivs
xor
fprem
jnp
pop
add
jnp
ficoml
pusha
in
aaa
aad
sbb
out
fidivrl
and
test
int3
mov
int3
ret
lea
mov
push
imul
push
das
and
add
fcompl
ja
inc
pop
or
cmp
cld
sbbl
pop
push
push
lock
jp
jno
insl
push
cmc
or
xchg
sbb
insl
push
cmp
mov
dec
lock
daa
pop
insl
cltd
addr16
inc
enter
jbe
push
cmp
push
adc
test
dec
enter
rcl
jp
mov
nop
mov
roll
out
into
jbe
sub
or
xchg
arpl
ja
sub
xchg
outsb
sahf
adc
ljmp
stos
cltd
xchg
pop
hlt
add
stos
mov
xor
ret
push
cltd
shll
rol
fs
sub
fs
sar
mov
xor
push
push
adc
repz
mov
adc
jmp
inc
in
jns
push
pop
pop
loop
mov
or
popf
xchg
add
cltd
in
push
sub
test
call
cmpsb
push
add
mov
mov
int
sahf
sbb
in
test
into
xchg
bound
push
xchg
sbb
pop
arpl
std
jmp
mov
jo
aas
jp
pusha
sarl
mov
cmovne
shrb
or
enter
fwait
mov
mov
es
pop
mov
jne
scas
mov
js
orb
mov
jl
in
or
addl
lret
es
test
test
std
jecxz
adc
inc
and
push
xchg
test
iret
push
push
rolb
jae
imul
mov
test
pop
mov
rcl
rcr
xor
xor
or
loop
jecxz
mov
daa
mov
jbe
or
push
inc
out
sbb
les
sub
imul
sbb
adc
mov
push
fwait
into
outsb
mov
mov
es
leave
sbb
cwtl
inc
jmp
dec
popa
adc
fstps
stos
xchg
or
orb
jg
test
xchg
or
repz
fcoml
movsl
inc
or
call
ss
je
aam
sahf
or
shrb
les
arpl
repnz
in
insb
cmpl
iret
enter
mov
jge
icebp
hlt
xorb
pop
xlat
sbb
push
aas
negl
mov
adc
ljmp
jle
push
ret
inc
jle
inc
repnz
pop
push
loopne
lods
inc
arpl
not
dec
gs
xchg
divl
jns
adc
shlb
or
mov
in
es
iret
xor
cmp
ja
lahf
insl
test
xchg
xchg
mov
fisubrl
insb
aam
mov
or
xchg
jbe
int
mov
dec
je
push
mov
or
lods
cmp
clc
mov
test
sbb
cmp
int
and
xchg
mov
out
sbb
inc
push
or
fmul
fimuls
pop
adc
nop
adc
addl
aam
push
leave
jnp
xor
push
into
iret
cmp
push
xchg
cs
daa
aad
sub
cmpsl
lea
decb
ja
sbbl
and
clc
inc
icebp
and
sahf
fst
mov
mov
inc
and
xor
daa
mov
jp
push
cmpl
lea
mov
sbb
cwtl
xchg
xchg
movsl
icebp
mov
mov
jge
mov
out
jnp
stos
iret
mov
sbb
xlat
push
imul
pop
in
das
jecxz
aaa
add
jp
in
sahf
push
mov
mov
push
cmpsl
icebp
xor
mov
add
popa
jle
mov
mov
inc
rclb
inc
xchg
ret
bound
and
js
xlat
jb
xchg
jo
test
cmp
xor
jge
mov
dec
xor
xchg
aaa
scas
mov
dec
push
repz
test
inc
adc
pop
fbstp
dec
dec
imulb
iret
nop
mov
lahf
sub
mov
xchg
je
cmp
insb
mov
mov
and
sti
push
xchg
jae
jnp
stos
sub
orl
add
pop
mov
mov
jb
mov
out
xchg
push
test
je
push
jmp
loop
mov
mov
adc
cli
and
inc
pop
dec
cmp
jne
ljmp
mov
cwtl
cmp
jle
cwtl
mov
push
cmc
lods
sbb
xorl
and
push
dec
outsl
xchg
sub
imul
lods
mov
jecxz
out
jmp
and
or
add
fists
xchg
insl
aam
inc
sarb
xchg
jp
fbstp
fdivr
popf
sti
daa
ror
sub
ret
lods
or
imul
cld
push
or
and
das
sti
mov
ret
lahf
ja
or
insl
addb
adc
and
fistps
dec
adc
fistps
or
cmp
lcall
pusha
xchg
test
sub
push
rolb
mov
call
call
push
mov
xchg
sti
dec
cmp
inc
in
popf
fcomps
and
bound
ljmp
and
sub
mov
cltd
mov
xor
xchg
cmp
xchg
fsubrl
pop
aam
inc
add
aas
xchg
arpl
mull
xor
test
and
push
cli
cmp
xor
pushf
test
sub
or
ljmp
mov
pushf
mov
insl
data16
std
call
push
cmp
insb
jg
sbb
xchg
push
in
push
std
push
enter
or
push
cwtl
sbb
xor
sub
dec
or
dec
xchg
mov
not
outsl
aam
sti
push
outsl
adc
test
or
pop
add
dec
dec
push
mov
add
fs
mov
mov
sahf
xor
cld
ljmp
push
mov
jo,pn
pop
pop
pop
mov
iret
fbld
and
xchg
dec
js
dec
mov
or
sbb
lret
pop
mov
mov
sub
and
clc
movsb
cmpsl
ja
jb
and
out
push
push
mov
inc
sbb
out
pop
xor
push
setne
fs
ficoml
mov
sti
sbb
mov
jnp
pop
lds
push
outsb
pop
sbb
mov
orl
push
jl
loopne
add
jo
in
je
scas
pop
xlat
pop
push
pop
mov
andb
jo
scas
test
cli
pop
pushf
jle
fs
dec
stos
cmc
icebp
push
dec
hlt
adcl
cld
push
jmp
push
inc
inc
mov
push
sbb
lret
add
adc
mov
sbb
inc
push
insl
lock
fdivs
lock
xor
cmp
and
jmp
pop
call
sub
pop
fidivrl
std
push
les
push
mov
int3
in
xchg
mov
mov
jge
loop
xchg
into
add
add
cmpsl
push
mov
mov
movsb
int
fdivr
in
aam
xor
sbb
and
adc
lret
in
pinsrw
or
ss
movsb
std
xchg
bound
dec
testl
roll
push
ss
cltd
add
xchg
inc
pop
call
dec
add
xor
sbb
xlat
pop
pop
nop
ljmp
pop
add
mov
pop
mov
leave
pop
sbb
andl
cld
push
sub
mov
mov
mov
or
pusha
mov
mov
cmp
cmp
mov
or
rcrl
cltd
cli
arpl
push
sbb
test
dec
lds
mov
mov
push
push
pop
iret
dec
popf
mov
or
cmpsl
aas
and
sbb
mov
cs
pusha
add
dec
or
bound
add
insb
cmp
add
or
adc
stc
pop
jae
adc
inc
mov
mov
aam
add
jae
dec
sbb
test
mov
and
bound
sub
or
mov
pop
mov
loopne
test
mov
cld
push
rcrl
sbbl
xchg
mov
xchg
cwtl
mov
add
lret
test
das
mov
push
pushf
cmp
xchg
jnp,pt
xchg
or
pop
sub
add
loopne
pop
std
jb
scas
in
rol
sub
mov
imul
push
or
mov
stos
cmp
xchg
jb
xor
test
xchg
rcrb
mov
mov
out
loop
outsb
adc
dec
pop
stc
or
jp
jo
push
nop
dec
cli
daa
test
stos
mov
mov
push
xor
xchg
mov
push
pop
add
xor
mov
movsl
jnp
lahf
das
scas
sub
cltd
sbb
sub
mov
dec
les
loop
out
in
rcr
jecxz
dec
xchg
les
jne
push
out
daa
jl
pushf
scas
mov
repz
jo
add
inc
repz
sbb
ljmp
fs
push
nop
mov
dec
loop
jl
pop
lahf
mov
pop
and
addr16
dec
cmp
jl
mov
sbb
fidivl
mov
and
mov
lock
pushf
pop
inc
mov
hlt
stos
lock
je
push
cmp
cwtl
out
or
nop
pop
jge
cmp
leave
ficoms
decb
pusha
insl
fisubl
lahf
mov
mov
inc
jae
adc
shl
jg
fistl
ret
lock
push
cld
ss
outsl
movsl
jbe
mov
cltd
adc
call
xchg
pop
sbb
in
pop
jo
add
ljmp
mov
mov
mov
lods
int3
and
xchg
and
add
sarb
sbb
ja
das
dec
push
lahf
jae
movsb
cwtl
gs
faddl
sbb
mov
add
sti
and
shr
cwtl
pop
movsl
or
rcll
rorl
pop
push
cmpsb
in
cli
test
adc
daa
scas
inc
pop
dec
pop
xor
jnp
aaa
xchg
or
pop
or
inc
jmp
fcompl
pop
mov
pop
lea
jae
push
loop
cmp
dec
adc
rcll
inc
jge
mov
into
xor
push
in
stc
adc
mov
inc
push
inc
jb
addb
xchg
mov
cmp
aad
push
mov
iret
sbbl
dec
bound
cmpsl
rcll
adc
add
push
outsb
add
mov
push
xchg
xchg
aaa
cltd
les
js
lds
xor
add
mov
sbb
loopne
addb
push
cmp
les
jo
jnp
push
cmpsl
divb
cmp
sub
ljmp
pop
lret
popf
add
pop
xchg
cmp
jg
clc
inc
or
ds
je
aas
leave
int3
push
push
nop
push
cltd
cmpsb
in
pushf
and
flds
xor
and
xor
mov
jl
pop
aad
cmp
push
daa
pop
ss
imul
icebp
cli
inc
mov
stc
ret
fidivl
cld
mov
int3
std
cmpsl
add
movsb
fwait
mov
lret
imul
inc
sbb
imul
out
add
rcr
iret
adcb
int3
stos
push
insl
pushf
stos
cmp
jecxz
out
sub
push
stos
lahf
dec
sti
mov
aad
sub
les
por
pop
je
andl
arpl
shl
inc
and
mov
call
addr16
pop
ds
mov
in
in
mov
mov
gs
jecxz
push
push
cmp
mov
insb
lahf
push
and
mov
mov
cmpsb
add
dec
mov
into
push
and
mov
insb
test
loope
and
pop
in
xlat
xor
xor
dec
cwtl
ret
and
pop
out
js
popf
push
loope
jns
jno
cli
xorb
ret
jns
adc
jae
mov
jnp
pop
inc
inc
fcoml
mov
mov
sti
push
push
and
add
dec
lret
xchg
jp
test
std
lret
xchg
cld
lcall
and
or
inc
push
and
sbb
jnp
stos
or
xchg
loope
adc
jg
jle
scas
or
add
addb
add
pushf
pop
xor
pop
nop
xor
lock
testb
stos
inc
fnstenv
cmpsb
andb
sbb
push
rcl
xor
rdmsr
push
mov
fidivrs
cmpsl
lods
gs
sbb
fs
cmp
test
out
dec
les
lods
xchg
lods
mov
std
or
mov
out
aam
ja
movsb
push
push
xchg
xor
into
in
mov
jb
ss
in
push
daa
bound
cmp
pop
cli
mov
lock
adc
movsb
push
ljmp
mov
stos
mov
jae
dec
jp
mov
cwtl
lods
mov
mov
adc
mov
notb
push
inc
push
and
addb
sub
dec
data16
jecxz
mov
mov
jecxz
jno
pop
orb
icebp
push
ds
in
inc
jns
push
into
cwtl
mov
sub
out
adc
hlt
mov
lds
dec
pop
or
jne
stos
int3
iret
and
test
stos
add
adc
and
adc
xchg
cmp
adc
or
cmp
shll
dec
push
and
testl
jmp
cmc
jb
cwtl
test
adc
pop
sub
push
sbb
mov
fstp
xchg
mov
mov
pop
in
ret
fadds
daa
adc
fcmovb
sub
jne
cmp
adc
push
into
dec
sbb
lods
insl
test
pushaw
sbb
out
inc
leave
jecxz
movsl
idivb
mov
ljmp
sahf
insb
pop
cwtl
push
lcall
dec
xor
inc
cmp
dec
mov
xchg
scas
enter
lds
sbb
mov
std
icebp
icebp
inc
xor
arpl
cmc
dec
sbb
xchg
aam
cmp
stc
xchg
les
and
dec
out
sbb
mov
push
repnz
gs
lret
aad
nop
or
rolb
jno
test
insb
jbe
addl
divb
es
mov
cmp
stc
push
dec
push
mov
pop
jae
push
popa
dec
and
rol
pop
imul
in
cwtl
sbb
orl
inc
lret
nop
xor
sbb
out
mulb
inc
lea
adc
or
inc
rolb
jb
popa
pop
jnp
push
lods
adc
mov
dec
or
daa
daa
addr16
pop
inc
pop
pop
sbb
adc
mov
and
adc
cwtl
push
push
jbe
in
or
sbb
imul
jnp
popf
mov
int3
jo
inc
imul
mov
mov
movl
xchg
add
adc
movsb
dec
mov
dec
xacquire
stc
loope
push
push
push
add
outsl
fistpl
dec
and
push
push
sub
add
lcall
mov
cmp
xchg
mov
andl
lret
aas
lock
xchg
loop
jo,pt
test
xlat
ret
les
push
cmp
jp
fdivl
fisttpll
scas
fsubrp
sub
mov
sub
jo
xor
sub
out
and
lahf
and
dec
loop
scas
ret
jl
xor
movsb
sub
mov
push
std
sub
rorl
addr16
jne
mov
add
sbb
jecxz
ss
push
xor
enter
mov
or
cld
lds
out
lcall
mov
das
push
sub
and
push
sub
mov
mov
jge
mov
push
dec
fcoml
push
iret
andb
xor
iret
clc
push
adc
adc
push
pop
aas
fnstcw
daa
call
fistl
rcr
scas
rcll
cmpsl
jne
in
xor
ret
dec
push
pop
ljmp
fwait
cli
inc
adc
scas
testb
in
fs
lret
aad
aas
repz
pusha
outsl
les
mov
inc
add
aam
or
int
or
mov
and
xchg
cltd
cmpb
lret
pop
pop
sub
out
icebp
mov
push
lds
repnz
mov
scas
sbb
xor
jmp
mov
negl
adc
push
and
pop
idivl
mov
clc
xor
outsl
push
lret
fdivp
fidivrl
into
pop
xlat
inc
and
aas
sub
sub
lock
cmc
mov
adc
xchg
pushl
inc
dec
ficompl
fdivrs
push
xchg
mov
sub
mov
and
add
mov
inc
push
cli
xchg
mov
add
test
mov
jo
jnp
adc
imul
adc
sbb
pop
sti
addl
jno
pop
xchg
loop
mov
push
es
pushf
sub
push
pop
pop
popf
dec
loop
sti
push
cmp
enter
int
sbb
adc
sbb
addr16
div
aam
sub
mov
cmpsb
mov
call
nop
xor
sub
cmp
ja
scas
lods
pop
add
jno
xor
sub
fnstsw
cmp
imul
cmc
add
mov
imul
outsl
sub
pop
in
add
fistpll
jae
testl
fdivl
rcrl
call
repz
push
outsb
xor
out
iret
sub
sbb
std
aaa
push
mov
lret
aas
mov
enter
inc
pop
and
data16
mov
cmp
inc
xchg
sbb
hlt
dec
inc
push
in
adc
jnp,pt
jb
pushf
sub
inc
es
clc
pop
push
rcll
out
cmp
sub
in
xchg
mov
mov
out
mov
iret
push
pop
mov
inc
cmp
xor
fwait
cmpsb
in
rorl
push
and
jne
pop
xor
mov
mov
lods
rclb
dec
int3
js
mov
rclb
test
movsl
pop
xchg
cld
pop
mov
xchg
outsb
jle
mov
mov
out
sbb
pushf
mov
loope
scas
add
int
and
add
and
dec
pop
dec
mull
stc
jmp
pop
sub
loope
data16
xchg
enter
nop
push
inc
sub
cltd
dec
aam
push
mov
das
jecxz
jbe
frstor
movsl
imul
push
push
js
fdivrl
dec
sahf
adc
subb
mov
mov
jge
adc
mov
fsubrs
adc
pop
dec
bound
leave
fidivrl
dec
cmp
xchg
pop
mov
notb
or
test
and
scas
lea
lret
xchg
ret
sub
lds
lahf
or
out
dec
cmp
cmc
mov
and
jns
mov
pop
fsubrl
push
das
pushf
push
add
enter
jae
sbb
push
hlt
cmp
test
inc
xor
mov
dec
lods
or
mov
sbb
testl
aad
jge
pop
or
push
pop
jno
or
sbb
xor
mov
aaa
or
int
test
xchg
jns
jl
push
mov
fdivrp
movsb
stos
mov
dec
xor
insb
pop
push
cmp
cld
in
popa
add
push
mov
jbe
shrb
test
stos
push
insb
or
jo
jmp
lea
test
mov
xchg
aaa
stc
aam
scas
popf
and
dec
mov
icebp
out
jmp
test
lea
pop
pusha
ja
fidivrs
clc
pop
xlat
sub
sarl
mov
xchg
cmp
lds
cli
mov
xor
jmp
push
inc
ror
movsb
outsl
arpl
dec
dec
cmp
nop
js
or
shrb
imul
xor
dec
js
push
lods
xchg
pusha
iret
jnp
lcall
jae
lcall
divb
jnp
pop
add
lock
inc
cmp
andb
iret
pop
push
mov
out
loopne
dec
fwait
sub
sub
scas
stos
mov
pop
sahf
sub
jp
into
loopne
mov
iret
int3
das
adc
int
mov
jle
cmp
ret
jae
xor
pop
jnp
inc
insl
jmp
dec
dec
jbe
jmp
mov
add
scas
lcall
mov
outsl
adc
push
andb
add
and
push
leave
cmp
testb
lea
cli
and
add
je
mov
pop
loope
mov
in
in
fwait
xchg
pusha
lret
mov
rolb
lea
aad
mov
xor
or
adc
in
mulb
xchg
ss
leave
bound
cwtl
and
fdiv
and
inc
int3
nop
adc
xor
adc
cmc
cmpsb
scas
fisttps
push
in
adc
fmull
es
xchg
xor
push
pushf
fldt
cmp
inc
bound
fimull
hlt
cs
pushf
out
mov
mov
dec
leave
mov
sub
adc
into
loop
in
shl
sub
or
xor
pop
mov
je
aad
out
adc
xchg
stos
pop
mov
lahf
mov
jbe
je
insb
fbld
cmp
stc
mov
iret
cmpb
push
fcomip
aad
stc
ja
test
or
fimuls
shlb
push
push
mov
int3
sbb
mov
xor
and
pop
mov
ljmp
hlt
inc
sahf
cmp
outsl
mov
das
or
addr16
bswap
fwait
pop
out
push
inc
or
loopne
pop
push
ret
aas
hlt
fwait
sub
add
mov
in
outsl
push
xchg
test
xchg
ja
aam
push
adc
fwait
das
jns
push
mov
jmp
inc
in
ds
cmp
fdivp
fldl
and
mov
jge
and
fstpt
xor
test
sbb
xor
add
mov
mov
js
mov
idivl
jmp
push
lea
outsb
dec
scas
emms
out
cmp
test
push
xor
xchg
movsb
movsl
outsb
push
outsl
adc
push
in
cmc
add
adc
das
fld
xor
ret
push
pop
add
add
add
push
jb
pop
in
insb
fmull
or
cmp
jbe
jp
insb
enter
icebp
jns
pop
lds
jg
jg
jns
inc
inc
fildll
add
jne
mov
push
inc
adc
out
lea
sbb
push
daa
dec
adc
xchg
out
mov
popa
bound
nop
repz
or
popf
or
ss
dec
jne
call
in
jno
movsl
rol
imul
fisubl
push
lret
mov
pop
mov
and
sar
sbb
mov
data16
xchg
jl
enter
inc
scas
cld
pop
arpl
and
adc
outsl
into
adc
dec
fisubrl
rcrl
subb
insl
aad
jbe
xor
shll
sbb
add
rcpps
mov
fs
aas
jmp
xor
mov
dec
dec
cmp
cmpsb
mov
pop
jp
dec
xor
jbe
leave
and
hlt
jmp
shlb
pop
clc
sbb
mov
hlt
push
or
dec
xchg
and
fisubs
jp
inc
sub
sbb
cmp
out
push
adc
cwtl
push
fsub
addr16
vmovss
adc
lods
jp
mov
adc
mov
test
mov
lock
addr16
xchg
inc
dec
ret
imul
sahf
push
dec
xchg
xor
aam
adc
cld
in
cmp
leave
inc
dec
pop
loopne
sbb
mov
mov
pop
frstor
rcll
testl
or
pop
xor
arpl
jp
test
popf
inc
inc
imul
jecxz
dec
outsb
mov
insl
test
push
pusha
xchg
adc
mov
mov
sub
push
xchg
call
adc
es
jecxz
fdivl
jnp
xchg
inc
sub
and
sub
outsl
mov
mov
aaa
iret
xchg
push
jmp
daa
and
shll
and
sbb
scas
cmpsl
mov
mov
pop
cmp
mov
shlb
out
jmp
jo
mov
lcall
fwait
das
into
rorl
and
ss
jb
and
cld
pusha
mov
cmpsl
gs
std
cltd
add
pop
mov
fdivr
jmp
xchg
fwait
xor
push
outsl
cs
lock
jnp
test
call
lea
inc
das
icebp
adc
xchg
mov
sbb
dec
cmp
mov
or
jle,pt
xchg
je
jp
cld
icebp
dec
inc
cwtl
xchg
push
sub
arpl
fmulp
pop
popf
je
testb
pop
fisubs
shrb
cmp
mov
inc
aaa
xchg
cli
test
leave
movsl
xchg
in
inc
cmp
cli
or
mov
mov
imul
mov
test
adc
xchg
rcl
add
and
jmp
lret
movsl
cmp
scas
mov
inc
sbb
scas
jns
fistps
pop
test
jo
mov
push
sbb
add
pop
xlat
pop
jb
inc
or
mov
jp
jnp
ss
xchg
test
outsb
xchg
sub
nop
push
mov
adc
xor
jp
insl
sbb
dec
sub
mov
add
daa
lcall
fdivr
ja
sub
ja
in
popf
dec
rclb
mov
outsb
imul
cmp
fcomp
jne
pop
mov
sbb
mov
pusha
sub
cltd
dec
mov
lret
mov
fs
mov
repz
fadds
adc
shrb
cltd
shlb
int3
mov
cld
rcrb
xor
fmuls
pop
das
adc
test
decb
les
jmp
or
scas
lret
movsb
lds
push
jne
xchg
jae
aam
jl
not
or
scas
mov
jns
fwait
movsl
nop
jns
mov
push
fwait
sbb
cli
jmp
sahf
fidivrs
ss
jecxz
xorl
xor
inc
loope
sbb
push
addl
jo
dec
test
and
leave
lret
ret
sub
pop
in
fldenv
pop
or
addr16
pop
insb
jne
movsl
sub
mov
out
mov
sbb
loopne
mov
xor
fmuls
inc
call
shlb
xorl
loope
pushf
push
cli
repz
jns
jp
cmp
js
xchg
xchg
dec
jmp
scas
je
lods
adc
xor
mov
or
in
data16
push
adc
jle
mov
sbb
test
add
sub
les
fisubrl
pusha
data16
xchg
xor
cltd
fmull
je
or
insl
xchg
push
sub
negb
xor
cltd
outsl
outsl
pop
jp
dec
insl
aas
dec
jbe
pop
aas
mov
adc
sub
fs
divl
push
orb
nop
ret
add
movsb
mov
xor
into
call
and
rorb
shl
push
popf
cli
mov
fwait
into
xchg
cld
mov
inc
add
bound
cs
jno
mov
mov
and
clc
aam
xlat
xchg
in
scas
repz
addr16
and
dec
out
test
cs
mov
adc
lret
pop
cli
lds
sahf
sbb
xchg
push
cltd
int
addr16
jo
pusha
test
push
outsb
jmp
sub
cs
cmpb
fwait
rolb
aaa
or
shlb
mov
imul
xor
push
aaa
or
sub
mov
jo
sbb
ret
popf
bound
lcall
mov
jbe
inc
sub
pop
jb
ret
pushf
dec
mov
hlt
ja
bound
pop
andb
fs
and
push
mov
xchg
sbb
fiaddl
lock
xor
inc
loop
lahf
inc
out
mov
or
scas
push
fidivl
inc
or
mul
insb
sarl
xor
mov
mov
cmp
inc
jo
movsl
mov
inc
xchg
pop
repnz
adc
int
rcl
xchg
cmp
inc
in
rcpps
mov
icebp
lock
rcll
out
jne
xor
push
add
add
andb
bound
sub
cmp
fimuls
je
je
out
in
mov
and
xlat
xlat
mov
adc
fwait
js
mov
pop
sub
stos
mov
out
jne
xchg
pusha
or
into
mov
sahf
ja
lods
in
in
int3
aam
aad
mov
in
push
dec
repz
mov
ret
ja
and
rorl
repz
addr16
idiv
pusha
insb
pop
inc
sub
jp
push
js
js
int3
push
rolb
out
stos
xchg
aad
jnp
cmp
pop
mov
and
jne
dec
xor
mov
and
shl
inc
xchg
mov
mov
repz
pusha
push
mov
xor
idivl
mov
ja
and
jae
fstpt
adc
leave
push
pop
mov
icebp
sub
dec
sbb
pop
sub
lahf
inc
mov
cmovnp
sub
insb
movb
dec
xchg
xor
sbb
sub
sahf
lahf
test
push
ljmp
jge
ret
or
dec
push
jmp
push
xchg
out
cmpsl
and
gs
pop
fwait
xor
xor
int3
jns
out
test
mov
mov
not
or
aam
int3
and
icebp
sub
shll
mov
out
jbe
add
mov
cmp
jmp
stos
test
mov
dec
xorb
add
stos
insl
enter
pop
push
data16
xor
add
jl
and
sub
xchg
and
arpl
std
mov
bound
sbb
outsl
imul
mov
jmp
cli
push
ret
and
mov
push
popaw
and
lret
sbb
std
dec
inc
mov
dec
mov
mov
cmp
add
push
jne
ret
add
sbb
ss
pop
ret
pusha
into
sub
or
lret
sbb
and
pop
test
sbb
jp
pop
test
sub
shr
insl
movsb
repz
ds
fdivl
dec
test
rolb
mov
xchg
sub
test
rcll
leave
adc
jg
dec
mov
sbb
test
cmc
mov
call
adc
jno
xchg
ffreep
outsl
pusha
loope
addb
pop
aam
daa
inc
sbb
add
ret
shl
dec
add
dec
pushf
and
mov
loopne
arpl
fcmovbe
sub
push
push
sub
sbb
movl
shlb
incb
leave
notb
mov
sub
cli
pop
scas
aad
iret
jp
andb
dec
pop
inc
int
or
sbbl
pop
mov
add
ja
call
lods
test
in
into
and
bound
cmp
dec
cmpsl
inc
jbe
div
sarl
jmp
dec
inc
pop
fwait
test
and
jle
pop
pop
rclb
jb
push
dec
stc
or
pop
sub
and
push
cmpb
xorb
jno
mov
dec
mov
lret
adcl
loopne
rol
pop
or
cmpsb
pop
add
or
fbstp
cmp
mov
mov
sbb
rcrb
out
fsubr
xchg
cmp
icebp
inc
ret
mov
xor
adc
xchg
pop
push
and
cmove
je
stc
shlb
mov
cmp
lcall
jle
cmp
sbb
cwtl
lret
lret
inc
cs
mov
ds
arpl
icebp
into
ss
cmpsl
shll
jae
or
pop
xlat
and
lret
jl
push
orl
cmpsl
mov
pop
sahf
jg
out
mov
push
xchg
loope
push
iret
jb
mov
hlt
std
aam
xchg
mov
aam
xchg
mov
inc
cltd
or
mov
movsl
push
sub
mov
or
ficoms
lods
js
js
lcall
push
out
imul
orl
jg
arpl
xchg
out
stc
fdivs
xor
outsb
or
and
iret
jle
or
fidivs
or
push
mov
dec
cmpsl
and
aas
fs
pop
adc
xlat
jp
mov
pop
dec
xlat
clc
inc
test
pop
fadds
push
mov
push
inc
mov
adc
sub
cwtl
jnp
push
clc
call
inc
aaa
jecxz
out
cmp
inc
jmp
sub
add
inc
mov
hlt
ficoms
lock
xor
cmp
adc
pop
xchg
test
mov
mov
sbb
sub
pusha
jnp
push
movsl
negb
enter
lock
xor
dec
in
daa
mov
pop
std
jl
fistl
sahf
scas
dec
jno
or
sbb
stc
xor
sahf
xchg
push
xchg
inc
test
push
inc
popa
mov
cmp
and
into
mov
das
out
jbe
out
cmc
dec
dec
mov
test
inc
loop
add
mov
je
mov
hlt
cmpsb
sbb
cmp
dec
pop
cmp
stc
out
cltd
cmc
int3
mov
daa
popf
inc
and
lahf
jno
mov
pop
or
mov
xchg
add
pop
shrb
in
loop
lret
sub
cmp
or
daa
inc
or
cmpsl
adc
xor
mov
lods
push
add
lret
sbb
bnd
incb
popf
push
shll
mov
test
sti
xor
inc
pop
int
dec
hlt
enter
lcall
sub
add
insb
mov
sub
add
xor
jns
xlat
pop
xor
popa
xor
push
inc
mov
cmp
out
cmp
cmp
pop
push
pop
cltd
loopne
lea
and
push
loope
fwait
mov
negl
xor
hlt
fidivl
add
adc
mov
lahf
xchg
xchg
or
jl
jle
pop
jo
jb
aad
nop
hlt
cli
into
fsubrl
pushf
and
mov
loope
inc
or
mov
arpl
mov
sub
test
call
rcrb
adc
clc
addr16
std
mov
lret
shlb
outsl
movsl
sbb
xor
lahf
nop
or
je
fst
and
mov
repz
xlat
or
lret
jecxz
or
pop
test
lss
lcall
jl
push
inc
push
pop
push
cld
sbb
out
das
pop
mov
dec
adc
sub
sahf
clc
daa
leave
addr16
xor
mov
push
data16
stos
inc
push
xchg
imul
stc
out
mov
sbb
punpckhwd
push
xchg
clc
insl
cmc
loop
enter
or
xchg
push
bound
sbb
std
aas
fdivrs
add
pop
xchg
sti
into
sbb
jns
lahf
xor
out
test
add
sbb
sbb
push
or
jbe
test
and
mov
dec
cmc
test
dec
and
fdivr
orb
stos
mov
pop
sub
inc
mov
stos
xor
inc
push
loope
mov
push
adcb
pop
xchg
ds
pop
push
push
xchg
test
mov
int
in
jnp
sti
leave
add
mov
push
mov
mov
xlat
aaa
adc
icebp
mov
out
mov
pop
add
dec
daa
inc
in
xchg
pop
mov
mov
adc
sbb
subl
data16
adc
inc
test
daa
and
cmpsb
mov
add
xor
mov
mov
xor
enter
inc
movsl
mov
movsb
push
arpl
mov
andl
fs
imulb
inc
pushf
inc
es
lahf
adc
dec
mov
push
sub
negl
or
lcall
subb
insl
aas
repnz
xchg
iret
mov
xor
sti
aaa
push
sbb
test
bnd
or
mov
pop
and
test
test
mov
push
aaa
sub
xor
mov
repz
push
xchg
lock
out
inc
pop
push
mov
and
mov
in
pop
mov
cmp
into
movsl
mov
cmp
cltd
cmp
xor
and
xchg
xor
push
test
outsb
push
push
and
clc
pop
mov
aas
dec
mov
or
mov
mov
lcall
jmp
test
movsl
inc
sub
aam
jl
js
movsb
pop
cli
imul
lcall
popa
and
push
xchg
jne
iret
repz
std
call
roll
adc
add
pop
fsubl
inc
and
nop
inc
popf
xchg
mov
pop
in
nop
xor
mov
or
outsb
xlat
inc
clc
lds
mov
mov
mov
and
mov
sbbb
jo
push
cmp
fsubl
sbb
inc
rorb
hlt
ret
dec
pop
xchg
clc
inc
hlt
cmpsl
push
dec
test
lea
push
ja
inc
adc
fdivrp
leave
int
jg
int
aaa
insl
loopne
dec
inc
cmpsb
mov
gs
aad
pop
and
nop
push
mov
xor
outsb
decl
je
dec
xchg
stc
mov
aas
int3
lods
xchg
sub
sub
xchg
push
push
gs
ret
negl
xor
cli
sbbl
pusha
stc
xchg
int3
mov
mov
fisttps
adc
js
sub
jae
mov
push
pop
push
xchg
sbb
mulb
mov
jb
in
sbbl
pop
insb
sub
pop
shl
xor
loope
sti
mov
mov
je
sbb
popa
and
gs
mov
jnp
in
sub
test
shlb
mov
mov
loope
sbb
repnz
clc
mov
es
sbb
sbb
add
pop
add
sbb
lcall
fdivp
out
or
mov
dec
cmp
call
lods
push
out
push
dec
sahf
xchg
xchg
popa
imul
fiadds
add
dec
xchg
ja
sub
rolb
lcall
xchg
add
jbe
and
fs
test
cmp
mov
and
das
cli
xchg
sbb
jbe
and
or
lds
popa
pop
sbb
xor
inc
aad
xor
cmp
int
xchg
or
aaa
cli
enter
mov
mov
mov
inc
xchg
adc
mov
shlb
sub
push
idivl
mov
ret
push
pop
pop
jg
repz
pop
cmpsl
cs
out
xchg
xchg
pop
add
sbb
gs
sub
dec
xor
ret
adc
cmp
ss
vmwrite
andb
cs
adc
add
mov
out
pop
sarb
popa
mov
or
cmp
outsb
pop
jae
cmp
or
shll
repz
or
adc
jg
add
lcall
mov
aaa
mov
cs
mov
pop
out
pop
lahf
insb
out
fadds
fidivs
repnz
xlat
leave
xchg
lds
call
lods
fisubrl
sahf
push
push
into
test
insb
jecxz
xor
fidivrl
push
pop
fsubrs
pop
ficomps
jg
repz
xchg
dec
shl
mov
inc
rorl
xchg
pop
mov
adc
dec
int3
fst
rol
pusha
fimull
mov
pushw
mov
nop
add
cmpb
fistpl
add
repnz
xchg
adc
xchg
add
xchg
sub
push
aaa
push
mov
gs
sub
loope
lds
pusha
rclb
out
fwait
mov
sbb
lea
pop
inc
sub
dec
fmuls
ds
and
scas
cmp
cmpsl
sbb
mov
scas
arpl
outsb
test
push
loopne
xor
push
in
fisubrl
sbb
and
or
jp
in
pop
or
sub
push
adc
mov
sarl
cmp
bound
or
mov
cmp
test
and
mov
scas
andb
xlat
mov
in
push
mov
pop
cmpsb
and
in
dec
pusha
and
sbb
xchg
xor
sub
add
iret
xchg
xor
inc
push
push
mov
fucom
sar
mov
hlt
mov
pop
test
fs
cmp
cmp
in
lods
fists
ljmp
pop
sub
lock
dec
and
xchg
iret
sbbb
jo
sub
jl
ja
add
rcl
cmp
mov
jne
mov
clc
lcall
ror
test
and
in
add
mov
adc
mov
in
movsl
neg
jae
test
mov
xor
sub
xchg
aas
push
add
pop
mov
je
outsl
xor
sahf
testl
dec
ljmp
cmp
dec
sbb
cmpsl
pop
loopne
cmp
scas
jae
lcall
sarb
mov
push
pop
and
xchg
dec
or
mov
js
pop
shll
stc
in
dec
fdiv
or
ljmp
mov
fdivrp
mov
cld
push
xchg
aas
push
cmp
or
mov
and
popa
filds
pop
inc
xor
jno
pushf
adc
idivl
je
lds
clc
cmpsb
xlat
sub
xor
xchg
jne
rorb
jge
std
adc
movsb
in
into
imul
mov
push
add
sub
ljmp
ret
xchg
outsl
cmpsl
mov
and
std
push
xchg
sbb
and
push
inc
mov
negl
cmp
cmp
or
xchg
js
sub
inc
push
xchg
add
je
mov
mov
rclb
loop
mov
inc
sub
inc
jmp
mov
pop
mov
ret
push
xchg
ret
push
dec
ja
in
fs
jo
test
lods
push
push
xor
dec
mov
sti
lods
push
xor
cmp
outsl
jmp
pop
xchg
xchg
mov
gs
imul
mov
movb
cmp
adc
ja
pusha
jne
cmp
mov
jge
lods
xlat
outsl
shlb
jle
inc
jae
int3
stos
ucomiss
push
pop
inc
cmp
into
adc
dec
inc
lahf
int3
enter
fisubl
xchg
aas
sub
and
in
sub
test
push
shll
fsubl
and
imul
push
lods
out
insb
push
pop
js
cwtl
pushf
aad
insb
inc
cmp
movb
push
stc
sbbb
aaa
add
mov
push
ret
cmc
or
clc
pop
adc
mov
xchg
stos
imul
inc
mov
pop
mov
push
jae
xor
cltd
je
imul
pop
cmp
mov
mov
add
push
jb
adc
mov
jmp
jns
ja
adc
pop
pop
data16
fiaddl
xor
loopne
in
dec
mov
push
insl
sbb
add
pop
fwait
push
mov
dec
lea
sar
jns
or
pop
aad
xchg
mov
or
adc
add
aas
lcall
sbb
movsb
mov
pop
or
cld
daa
es
inc
xchg
mov
enter
pop
scas
pop
popf
or
dec
fcompl
inc
cwtl
mov
fcomi
outsb
js,pn
aad
mov
test
push
mov
arpl
out
push
jnp
iret
mov
repnz
jne
cmp
jle
adcb
test
out
dec
cmpsl
js
out
lods
xor
scas
rolb
ficomps
mov
xchg
or
loop
cmp
enter
push
add
jecxz
and
xchg
xor
adc
sub
mov
cli
cmp
dec
mov
xlat
fstpl
jl
test
std
pop
lret
or
imul
imul
and
rorb
cmp
mov
in
incl
mov
sub
out
push
cmc
inc
cmpsb
add
scas
cld
push
xchg
and
mov
xchg
insb
pusha
adc
mov
xchg
ret
test
jge
lahf
xor
je
popa
aam
xlat
cs
pop
and
add
scas
xor
ja
push
movsb
jbe
mov
xlat
dec
mov
cmpsl
or
adc
xor
fcompl
adc
scas
adc
cmpsb
sub
icebp
lds
imul
mov
movzbl
sbb
fsubrp
das
xchg
dec
cli
popa
repz
aas
mov
mov
test
jns
aas
mov
sub
repz
cmc
cld
jp
xchg
inc
pop
les
rolb
dec
mov
adc
push
push
fildl
add
pop
clc
repnz
xor
loopne
sahf
mov
mov
jg
ss
cmp
aaa
rcrl
shrl
mov
std
pop
xchg
lahf
gs
sbb
ljmp
push
in
jbe
int
jle
lret
ds
fidivs
xchg
ret
mov
mov
or
mov
cmp
mov
pop
sub
xor
push
pop
cmpsl
mov
or
orb
stos
pusha
mov
sub
fstpt
jae
and
jno
push
sahf
aad
ja
or
xchg
or
das
sbb
out
bound
test
lahf
xor
mov
imul
fildl
jmp
popf
push
dec
push
ret
xchg
cli
pop
pop
das
jmp
push
and
pop
jecxz
mov
aam
mov
test
xchg
jbe
jmp
dec
sub
lret
pop
cmp
pop
adc
stc
fucomi
jno
add
into
icebp
insl
mov
xchg
dec
push
mov
mov
pop
mov
filds
cmp
inc
call
sbb
xlat
int3
mov
stos
in
mov
mov
in
test
sbb
popa
sbb
std
sub
dec
adcl
mov
fcomps
insb
in
mov
mov
ss
or
xor
gs
arpl
sbb
jg
xlat
ret
dec
ss
pop
or
or
mov
jecxz
mov
or
add
push
bound
xchg
cmpsl
push
mov
enter
dec
in
jno
fwait
cmp
and
fdivl
adc
sti
in
int3
popa
push
shll
cli
dec
add
xlat
sahf
mov
mov
add
lret
adc
out
xor
fs
shl
cmc
out
test
pop
fsubrs
lahf
fs
shrl
decl
sbb
cli
pop
push
leave
jnp
or
adc
xchg
and
lcall
or
and
insl
or
xlat
lods
test
jne
in
jb
sbb
mov
cmc
jns
cmp
in
icebp
jl
adc
cmpsl
bound
add
inc
push
fwait
mov
call
pop
cli
stc
fldt
push
cmp
adc
out
insl
int
inc
sbb
cmp
inc
or
and
in
adc
or
pop
test
mov
sti
mov
adc
testb
mov
mov
ret
inc
or
stos
inc
out
fmull
fidivl
dec
sub
cld
sahf
and
rcl
pop
push
add
aam
fldt
ss
cs
push
rolb
or
arpl
cmpsl
inc
mov
mov
rorl
mov
cmp
adc
jo
pop
aaa
fs
subl
lds
sbb
rcl
jne,pn
jne
lahf
push
bound
test
adc
adc
jg
sbb
inc
adc
in
sbb
sbb
sub
mov
js
lock
fwait
pop
lods
inc
das
adc
pop
mov
pusha
jb
push
jns
mov
popf
movsb
inc
outsb
add
push
pop
pop
ret
add
std
insl
fstl
jno
xchg
jbe
mov
sbb
inc
xor
and
test
cmp
mov
sbb
jmp
js
jg
mov
xor
cld
das
add
adc
and
insl
fucom
jge
sbb
ret
xlat
mov
nop
loope
jecxz
rorb
lcall
pop
ja
jecxz
test
mov
sbb
add
int
xor
xchg
adc
aaa
jne
mov
les
xchg
dec
pop
lea
lea
out
ds
sbb
mov
jecxz
sbb
dec
fildl
shrb
lret
jae
mov
ja
xchg
mov
add
daa
push
mov
je
adc
insb
xchg
mov
cmpsb
fisubrs
dec
idiv
lret
adc
in
xchg
mov
pop
mov
rcrl
andl
pop
aam
pop
pop
pop
ds
xchg
rorl
dec
stc
mov
iret
xor
aas
jecxz
mov
aad
jp
pop
dec
jno
stc
mov
and
js
imul
mov
push
sbb
xlat
or
mov
mov
jp
lods
mov
pop
mov
scas
dec
out
pop
add
mov
fisubs
loopne
pop
out
clc
push
mov
sti
jecxz
into
jbe
fimull
iret
xchg
jnp
xor
aad
fnstsw
adc
dec
or
sub
sti
adc
out
mov
cmp
jb
ds
mov
cmpsb
mov
mov
mov
movsl
push
jb
scas
mov
fistpl
lahf
jae
and
into
pop
loop
xchg
cmpsb
stos
div
pop
fistps
lret
mov
in
cmp
ret
insb
xor
jge
fnstcw
dec
cmp
fwait
and
cmp
mov
rclb
xchg
fnstenv
and
jae
popa
xchg
xchg
and
adc
mov
mov
les
or
andb
mov
push
xor
incb
inc
jbe
flds
jb
paddw
mov
sbb
mov
mov
cltd
xchg
mov
in
adc
shlb
hlt
lods
push
popa
rorl
mov
inc
mov
leave
sbb
sub
aad
repz
pop
push
inc
inc
cmp
ds
and
push
inc
or
stos
push
cmp
sbb
adc
lods
mov
pop
dec
add
dec
inc
mov
popf
jmp
xchg
mov
es
sbbb
push
xchg
cmp
or
mov
mov
dec
stos
lahf
fmull
insl
mov
in
in
pusha
jae
push
es
insl
xchg
lds
out
aad
lcall
xchg
and
loop
cltd
mov
mov
shll
fcoml
xchg
mov
in
std
int3
sbb
push
cmp
mov
fcmovbe
into
imul
or
cmpsl
pop
leave
push
mov
fldenv
nop
push
push
adc
and
das
loop
mov
inc
clc
jp
insb
je
jmp
scas
sbb
adc
out
clc
dec
xchg
xchg
jno
jmp
cwtl
std
pop
mov
push
mov
mov
and
fsts
or
fadd
add
out
pop
jns
xchg
movsl
addl
xor
cmpsb
mov
out
pop
mov
roll
adc
mov
push
adc
sbb
mov
hlt
sub
mov
cmc
call
push
jo
inc
jnp
pusha
loop
and
stos
enter
je
cs
std
pop
mov
push
sub
sbb
mov
pop
jns
leave
cmc
cli
adc
daa
jecxz
shrb
mov
ja
mov
cmp
mov
jae
outsb
repnz
mov
test
jbe
push
fiadds
sbb
jo
imul
pop
outsb
adc
bound
testb
cmpsl
cmpsl
pop
jno
inc
mov
mov
sti
sti
imul
pop
fbstp
arpl
push
test
add
sub
ret
inc
push
scas
sbb
sarb
std
lods
or
dec
jns
dec
mov
and
push
clc
arpl
inc
cmp
mov
ss
jmp
or
push
ja
jp
scas
roll
ja
fstpt
inc
jae
mov
insb
jnp,pt
push
push
daa
in
and
js
jns
dec
dec
lcall
pop
fimull
js
push
pop
sti
clc
movsl
xchg
stc
lea
xchg
push
out
and
fimull
cs
xchg
stos
mov
pop
popa
mov
push
fs
sub
addl
add
je
push
mov
je
jb
dec
jmp
lds
xor
lret
in
inc
or
fcomps
sub
sbb
sbb
cs
aas
pop
and
test
in
inc
mov
pop
lods
in
in
inc
jl
cmp
or
repz
jbe
in
add
fiaddl
ljmp
push
cmc
rol
lods
test
pusha
mov
mov
data16
or
pop
test
mov
test
jmp
dec
scas
sti
fstpt
sub
pop
or
cltd
fmuls
push
test
shlb
and
fwait
adc
dec
add
clc
add
lock
daa
popa
cltd
jae
inc
int3
in
or
js
push
mov
xchg
mov
xor
adc
xchg
das
dec
or
jle
insb
pop
cmpsb
ja
jl
dec
stos
add
adc
jmp
pop
mov
lahf
inc
mov
xor
cmpps
inc
stos
pushf
add
fwait
in
sub
xchg
inc
insl
arpl
mov
rolb
xor
aas
xor
in
cmp
pop
mov
adc
lcall
pop
outsb
xchg
mov
idivl
leave
or
sub
mov
rorb
mov
mov
fimuls
fdiv
mov
test
popa
adc
fsubr
cmpsl
jnp
aad
lock
loopne
xchg
mov
mov
lds
add
mov
mov
mov
lods
sub
test
ret
out
dec
xchg
aad
mov
rorl
shll
push
imul
shl
xchg
xor
icebp
sub
into
clc
xchg
hlt
xor
cmp
cmp
sahf
pop
sbb
popf
movsb
lret
add
scas
test
adc
add
in
nop
push
add
sub
or
inc
sahf
aaa
cs
ljmp
and
and
xor
int3
in
out
rolb
sub
sar
xor
or
or
addr16
or
cs
scas
inc
inc
add
inc
pop
jl
popa
ljmp
scas
adc
mov
in
imul
shlb
imul
popa
jg
sbb
mov
dec
ja
jmp
sbb
mov
ja
pop
add
push
cmp
or
pop
aad
je
mov
inc
mov
mov
xchg
cmc
xchg
sub
mov
add
inc
mov
mov
inc
xchg
add
mov
mov
dec
loopne
aas
bound
rcrl
bound
pop
test
jo
lahf
fnsave
fdivrl
pop
mov
mov
sbb
mov
push
push
inc
dec
scas
int3
insl
sbbb
aad
lret
mov
fnstcw
or
lock
jl
clc
xchg
sarb
mov
movsb
inc
lods
popf
xchg
loope
jl
jne
mov
dec
and
inc
mov
mov
out
jns
sbb
and
out
leave
cld
leave
imul
adc
mov
sub
insb
mov
fucomi
jb
std
popa
and
pop
adc
imul
pop
les
dec
adc
mov
dec
pop
mov
inc
pop
aas
clc
leave
pop
cmp
cmpsb
cmpsb
and
into
je
in
push
or
aas
push
sub
f2xm1
ja
imul
nop
lcall
dec
fisttpl
jp
or
loop
into
out
jae
cltd
faddp
and
sti
loope
cld
jo
or
dec
out
out
xlat
enter
cmp
add
adc
mov
enter
mov
inc
xchg
jge
jmp
jns
dec
jmp
sbb
push
and
stc
in
xchg
outsb
sub
sbb
inc
sbb
int3
inc
mulb
adc
mov
out
popa
mov
cmp
ja
jge
jnp
mov
scas
xchg
fcoml
enter
xchg
shlb
ljmp
or
es
std
cmp
add
fstpl
push
das
int3
cltd
add
cltd
mov
mov
lock
xor
mov
mov
push
aad
int
insb
rcll
dec
push
and
imul
inc
cli
in
ficoms
xlat
push
inc
xchg
jp
or
and
xchg
or
das
jae
lods
sub
rcr
inc
not
in
mov
push
sub
xlat
xor
mov
push
push
les
cmp
out
or
xchg
mov
xor
jnp
mov
std
out
dec
bound
mov
fstps
mov
fimuls
adc
dec
ret
jns
les
int3
sbb
cmp
daa
jno
inc
movsb
mov
push
pusha
dec
jle
test
xchg
lcall
or
fcmove
xor
ss
cmpsl
adc
and
add
add
xchg
xchg
cmp
lock
lds
fiaddl
into
insl
daa
dec
or
dec
inc
cmpsb
sub
xor
push
adc
push
jmp
int
jmp
sub
push
in
sti
mov
mov
insb
frstor
mov
adc
mov
xor
mov
sti
loopne
rcrl
adc
hlt
xchg
les
lds
mov
adc
arpl
es
mov
sbbl
inc
out
outsb
sbb
fidivrs
mov
imul
insl
push
push
sub
sbb
wbinvd
sub
sbb
movsb
inc
push
inc
inc
pop
lods
xorl
popf
sarl
adc
loop
adc
inc
sbb
popf
inc
das
ror
lcall
mov
mov
adc
xlat
lods
pop
aas
add
pop
iret
add
gs
cmp
mov
sub
movsl
jo
icebp
pop
sub
imul
ljmp
adc
insl
or
rcll
adc
mov
repnz
push
jmp
xchg
add
adc
insb
out
jno
xchg
and
les
mov
insl
jns
dec
xchg
call
aaa
aam
out
xlat
pushf
push
cli
lock
xor
pop
mov
loop
add
mov
pop
ftst
int
mov
jo
add
xchg
pop
je
outsl
dec
test
sbb
pusha
jns
adc
pushw
mov
punpckhdq
add
pop
mov
bound
frstor
into
loopne
pop
jbe
jmp
leave
lds
adc
push
aad
xchg
cmp
fbstp
std
inc
repz
xor
jne
jae
xchg
nop
mov
or
imul
insl
lds
sarb
or
xor
dec
call
inc
hlt
into
adc
test
sbb
mov
mov
ror
mov
adc
sub
cmp
addr16
inc
cwtl
fsin
dec
cltd
shlb
mov
mov
or
inc
insb
cmpsb
mov
insb
sbb
shrb
jne
in
jb
and
call
mov
sbb
decl
fldenv
leave
test
in
pop
jecxz
enter
jb
enter
test
adc
or
inc
movsb
out
movsl
in
push
cwtl
dec
push
jb
push
aam
pop
xchg
repz
sbb
stc
adc
gs
inc
repnz
and
dec
lret
adc
inc
xchg
scas
lock
ja
jl
inc
add
pop
jno
jle
inc
cld
scas
ss
or
in
nop
jl
movsl
aaa
subb
lock
stos
testb
loopne
xchg
jnp
push
push
call
pushf
push
into
ja
addb
jl
dec
in
mov
sub
in
and
mov
xchg
dec
sbb
in
cld
pop
xchg
pop
push
mov
xchg
push
rcrl
push
leave
mov
shll
adc
not
in
cltd
jbe
fprem
hlt
inc
jne
jge
int
fildl
jg
mov
stos
adc
int
shr
loopne
dec
pushf
sbb
adc
ficompl
ret
jmp
in
jbe
sarb
jbe
pop
adc
shll
sahf
aam
xor
jp
inc
push
inc
pop
fbstp
rcr
push
adc
mov
push
repnz
cmc
xor
clc
inc
mov
imul
ret
jns
mov
lret
out
sub
pop
ror
popl
pop
pop
inc
mov
addb
mov
mov
dec
inc
push
mov
sub
jbe
inc
insb
lods
push
enter
imul
mov
mov
in
xchg
jno
xchg
push
adc
out
jae
jp
sbb
movsl
xor
fs
cwtl
xor
mov
jecxz
xor
out
adc
mov
das
xchg
cmp
adc
movsl
sbb
sarb
mov
int
dec
incl
fmuls
decb
xlat
cltd
xchg
jae
sub
cmpsl
lret
fisttps
lahf
jno
popa
nop
mov
out
shll
data16
in
arpl
pop
push
pop
aaa
dec
add
hlt
push
and
mov
and
inc
mov
addl
pusha
cli
xor
xchg
mov
lret
lret
dec
scas
mov
cmp
insb
mov
negl
mov
adc
or
xchg
inc
pop
mov
das
pop
pushf
mov
jl
outsl
mov
inc
loop
adc
std
sub
repz
push
or
jnp
pop
icebp
sub
fiadds
movsb
popl
mov
and
int
ss
fnsave
mov
aam
je
mov
test
push
aad
bound
out
lods
and
push
mov
lret
aad
cmc
mov
jmp
cwtl
stc
repz
stos
or
ss
dec
cmp
xchg
ret
jecxz
lock
cs
mov
outsl
stos
add
cld
jbe
out
dec
jg
inc
std
sub
jb
in
je
xor
aad
out
cli
insl
pop
fs
mov
add
push
lret
scas
fwait
mov
insb
cmc
cmp
push
push
jb
js
insb
sbb
sub
xchg
pop
or
popf
cmp
mov
and
fxch
or
pusha
and
pop
xor
push
cli
sbb
out
ret
jg
sub
incl
pop
cmp
and
sub
test
clc
or
ljmp
inc
sbb
push
push
xor
and
aaa
push
pop
das
orl
jg
je
sti
inc
std
sbb
popf
jge
adc
enter
cmp
enter
rcrb
pop
mov
test
mov
div
and
mov
adc
jne
loope
test
jo
out
jne
inc
subb
cmpsb
iret
lock
adc
cmpl
bnd
in
in
sub
in
push
mov
push
cmp
jl
dec
push
push
sbb
or
dec
jle
dec
outsl
rolb
xor
repnz
popf
add
andb
out
mov
call
jnp
imul
out
add
xchg
test
lcall
sbb
pop
js
cmpl
dec
and
mov
lret
lds
in
int
xchg
sub
pop
mov
add
les
cld
lahf
mov
pop
or
xor
inc
andb
cmp
stos
cli
test
xor
lret
cmp
sub
pop
pop
lods
lock
adc
add
std
mov
mov
sti
sti
int
and
ret
and
mov
and
rcrb
jp
decl
dec
sbb
dec
icebp
mov
scas
ja
or
mov
into
rcr
xchg
popf
pop
inc
sbb
icebp
test
jmp
jp
popf
xor
int
lods
fsubr
inc
pop
imul
call
jp
sti
mov
sbb
mov
jbe
int3
hlt
loop
sarl
in
fistpl
out
in
pop
repz
push
lahf
insb
cmp
test
js
mov
and
dec
or
outsb
outsb
enter
popf
or
adcb
pop
lds
bound
mov
sbb
addr16
outsb
test
mov
std
sahf
in
cmc
lret
or
mov
rolb
mov
imul
xchg
push
pop
pop
and
jae
roll
sahf
std
test
rcr
fistl
lahf
inc
das
mov
dec
repz
xor
out
icebp
sub
jecxz
scas
daa
sub
gs
data16
xchg
push
cmp
jae
bound
xchg
push
daa
stos
fldl
sbb
pop
or
scas
mov
cld
cmp
inc
and
sahf
adc
aam
mov
mov
jmp
pop
inc
xlat
jle
pop
and
sbb
out
add
push
add
clc
push
inc
sahf
xchg
dec
mov
jecxz
test
push
andb
lock
xor
ret
aam
cmp
rorl
pop
ds
mov
test
outsb
mov
mov
mov
ret
xor
cwtl
mov
stos
loope
adc
pop
lods
dec
cmpb
sti
xchg
or
lods
imul
and
push
cli
jo
fildll
rol
je
push
sbb
jg
or
es
cld
stc
mov
leave
push
push
rol
pcmpeqd
loope
mov
je
mov
cmp
insl
or
mov
pop
cs
and
std
xor
inc
or
das
or
mov
push
inc
pop
mov
out
hlt
adcl
in
les
mov
fwait
jns
sbb
mov
push
ja
sti
rcll
leave
pop
mov
ret
pop
ret
fs
lods
or
cltd
mov
lret
add
int3
fucomip
pop
mov
sub
dec
or
movsb
stos
inc
loope
dec
aaa
xchg
pushf
xor
dec
and
xchg
sub
xchg
mov
ja
mov
scas
push
fiadds
call
rcll
in
jmp
call
gs
push
mov
ret
sub
pop
stc
mov
adc
dec
ja
test
jp
lcall
cmp
sub
fmuls
jp
outsl
dec
imul
fsubr
cmc
or
inc
pushf
test
insl
shrl
test
stos
xor
mov
lods
and
xor
jle
lods
mov
sbbb
lahf
mov
cmp
int3
and
mov
lahf
add
pushf
or
int
ds
and
lock
movsl
mov
enter
mov
out
into
scas
add
and
mov
ret
lock
cmp
lret
popf
xor
and
inc
imul
aam
lods
addr16
leave
mov
pop
jbe
xor
pop
cmp
add
ss
mov
push
call
mov
popf
fstps
test
fs
ret
lcall
push
push
sub
dec
add
clc
adc
pop
int3
cmpsl
jo
and
test
rcll
faddl
rclb
or
inc
leave
mov
and
enter
sbb
lcall
repz
nop
popa
popl
xor
lret
mov
je
push
aam
rcrb
enter
nop
push
or
fwait
cmp
push
and
daa
leave
jno
fidivl
pop
xor
cld
jmp
mov
sbb
nop
sub
inc
ja
add
cmpsl
je
or
dec
push
mov
pop
stos
and
pop
cmp
xchg
aad
mov
add
stc
roll
add
push
inc
shlb
xor
sub
in
mov
mov
jae
je
mov
add
rorl
cmp
sub
ds
push
xchg
icebp
pop
sub
aas
add
test
jno
pop
addl
cwtl
cmp
dec
push
repnz
push
lcall
test
push
jecxz
adc
cmp
in
rcr
lahf
sbb
and
dec
jae
lods
mov
jp
aam
sti
cmp
lds
es
cmp
inc
xor
bound
aam
mov
sahf
xor
sbb
test
test
mov
inc
sub
or
rcr
jmp
sahf
jge
inc
popa
mov
rclb
rcpps
ss
mov
nop
nop
les
mov
repz
lds
shl
add
fsubp
test
lea
loope
dec
int
outsb
ljmp
xor
out
mov
inc
jmp
lcall
movsl
decl
ret
pop
sbb
xchg
imul
fs
mov
mov
in
aaa
sahf
out
mov
or
es
nop
dec
fmulp
and
data16
pop
jbe
add
mov
lods
adc
pop
lret
shlb
or
aas
lods
add
pop
mov
dec
inc
push
decb
imul
cmp
call
int3
cmp
outsl
stos
mov
push
xor
xchg
mov
repz
sbb
xchg
ss
jae
push
push
out
push
and
jecxz
mov
jbe
xchg
dec
adc
xchg
int
lods
lcall
mov
shl
pop
mov
cmc
xor
mov
mov
dec
pushf
xchg
add
stc
in
mull
incl
ja
jb
mov
lret
test
or
inc
adc
cmpsb
in
loop
jg
mov
out
out
div
pop
lcall
test
das
xchg
pop
test
sub
aaa
repnz
imul
inc
mov
ret
nop
data16
ds
rorb
fcomip
jle
jae
fwait
cmpsb
mulb
in
inc
jae
and
sub
shlb
xchg
mov
mov
jno
sarl
leave
push
sub
xchg
scas
mov
mov
jle
fnstcw
and
enter
daa
pop
add
or
clc
pusha
push
sbb
sbb
rcl
in
dec
dec
lds
lea
cmc
pop
daa
push
pop
arpl
cmp
movb
data16
inc
insb
xchg
out
notl
and
dec
inc
mov
loop
out
mov
pop
test
dec
sarl
mov
mov
cmp
push
shrb
gs
pushw
inc
in
les
mov
fldcw
jmp
xlat
movsb
mov
or
mov
and
jle
nop
xlat
sub
out
das
push
add
test
lret
dec
int
jp
fsubrl
jbe
push
das
xor
adc
mov
push
pop
test
dec
push
jne
jne
add
cmp
out
jmp
cs
icebp
xchg
fisttpl
hlt
stos
cmp
es
arpl
aas
imul
imull
inc
inc
jle
and
xor
cmp
jns
and
push
mov
dec
in
aad
push
ss
repnz
je
sbb
shll
pop
iret
rclb
sub
dec
sbb
stos
jae
fldcw
or
je
inc
stos
in
cltd
push
adc
inc
popf
push
sbb
push
and
cld
xorb
imul
xchg
sahf
inc
xchg
push
adc
cwtl
xchg
in
pop
adc
cmc
push
jnp
lods
out
adc
cli
int
adc
addl
into
cmp
ficoml
stos
lods
shl
add
xchg
xchg
addps
cld
xor
fnstsw
xchg
pop
pop
adc
arpl
daa
pop
sbb
xor
push
and
ja
mov
and
imul
push
lods
cmp
movsb
call
int
je
xchg
gs
and
dec
jmp
out
lcall
stc
les
std
or
cmpsb
cwtl
fiaddl
jno
or
dec
ljmp
orl
and
add
popl
pop
jmp
jl
pop
inc
dec
rol
xor
les
andb
lcall
rorb
les
movsb
pop
and
aam
clc
inc
ljmp
cli
mov
jl
pop
push
in
cmpl
cmp
jb
cli
dec
fwait
bound
and
dec
add
lea
add
adcb
adc
mov
lret
dec
mov
enter
cmp
add
mov
sub
pushf
mov
jbe
add
xor
faddl
mov
mov
fistps
mov
sbb
fmull
popa
enter
ja
aad
push
shr
icebp
mov
push
pushl
repnz
mul
testl
lret
cmp
mov
cmpsl
jne
mov
mov
ret
or
clc
out
loope
and
repz
repz
pop
jne
into
and
sbb
mov
pop
mov
jg
pusha
out
mov
mov
popa
stc
xor
pop
pop
xor
mov
jp
hlt
stos
xor
add
or
icebp
fcoms
aaa
js
subb
mov
imul
dec
xor
add
push
cwtl
pop
out
andl
inc
rcrb
or
inc
sahf
cmp
icebp
shll
loop
pop
inc
and
adc
inc
dec
ficoml
loopne
or
inc
jmp
jne
cli
js
fiadds
pop
imul
es
cmp
ret
mov
mov
movsl
mov
mov
in
push
je
sub
add
push
rcl
and
rol
xchg
scas
sub
dec
test
out
es
jecxz
mov
jl
inc
add
das
push
data16
data16
jb
or
dec
rcr
into
test
push
add
add
mov
cli
cmpsb
cmc
push
loop
sub
cmpsl
or
aas
adc
adc
int
loopne
loop
mov
jne
cmp
sbb
inc
movsb
scas
notl
push
rcrb
clc
push
push
repz
mov
xchg
repnz
xor
jmp
aam
xchg
cmc
inc
push
dec
pop
inc
andl
subl
mov
add
inc
pushf
rolb
int3
mov
fbstp
mov
inc
sbb
movsb
lods
scas
adc
mov
push
inc
mov
and
inc
or
sub
cltd
dec
cmc
je
leave
das
pop
or
jns
inc
xor
jo
aam
push
lret
mov
sarb
repz
ja
xchg
ss
mov
inc
adc
jnp
fs
roll
imull
pop
std
add
lahf
nop
scas
xchg
mov
xor
mov
lret
aas
xchg
cltd
lcall
fdivl
sub
loopew
mov
and
add
add
push
lock
imul
or
lea
adcb
arpl
push
and
sub
adc
pop
inc
popa
xlat
and
fwait
rolb
adc
mov
outsl
pop
mov
movsl
les
inc
call
mov
lds
inc
sub
adc
cwtl
jno
dec
ds
leave
cmc
xor
or
inc
push
popf
lret
or
jg
push
test
ljmp
outsl
stos
push
cmpsl
aam
pushl
stc
xchg
xchg
nop
mov
or
popl
arpl
fidivrs
pop
mov
sub
xchg
xchg
insl
cmp
lcallw
cld
sbb
jae
or
out
ret
push
in
mov
sbb
ja
test
xchg
push
lea
cmp
xor
jl
gs
ss
push
mov
ficompl
iret
clc
inc
sbb
ss
xchg
clc
nop
loopne
scas
lcall
lds
jmp
cmpsl
cld
and
or
icebp
dec
mov
add
outsl
xor
cmp
add
sti
jo
pop
ret
mov
rclb
push
test
sub
cmp
call
jbe
in
adc
dec
inc
imul
cmpsb
rolb
lea
adc
jae
insl
lret
mov
or
or
cli
mov
jmp
dec
test
push
cmp
ss
das
sbb
sti
mov
jae
jae
insb
out
outsb
sub
aas
popf
sub
mov
mov
add
loope
test
or
push
stc
push
push
fwait
push
xor
ret
lea
out
pop
cmp
out
or
test
mov
inc
addb
loopne
adc
movsl
mov
out
dec
sahf
outsb
xor
pop
dec
andb
mov
scas
xor
mov
fistps
mov
sub
pop
push
lret
mov
repz
mov
rclb
fdivr
inc
in
and
jecxz
cmpsl
addr16
mov
fs
jo
cmp
adc
adc
mov
mov
sbb
mov
and
lock
jnp
jbe
imul
out
in
int3
fistl
sarl
mov
dec
rcll
inc
shll
rcrb
push
mov
dec
xchg
sub
test
xor
mov
test
test
jle
cmp
and
rcl
fnsave
jno
and
cmp
fwait
lret
out
push
xchg
jl
sbb
pusha
jbe
mov
in
adc
pop
aaa
mov
stos
jae
out
clts
decb
fidivrl
inc
add
popa
push
pushf
outsl
mov
mov
pop
lahf
inc
xchg
aaa
lcall
xchg
push
repnz
shll
nop
and
and
arpl
in
mov
je
jge
fs
push
repnz
dec
aas
dec
mov
jnp
pop
lods
dec
dec
pop
dec
pop
std
inc
jge
shll
fists
inc
stos
xor
sbb
or
pusha
pop
xor
enter
sti
dec
jbe
xchg
je
sbb
out
jnp
jp
inc
push
loope
jne
push
aam
pop
stos
movsb
adc
pop
hlt
fdivs
and
lret
adc
nop
notb
ss
jno
shll
inc
mov
and
jge
mov
jg
mov
cmp
pop
es
mov
add
in
clc
mov
cli
add
stc
xchg
aad
sbb
jnp
lds
push
inc
cmpsl
or
jle
repz
or
add
mov
pop
add
jmp
inc
int3
mov
mov
inc
int
out
inc
push
sbb
ljmp
movsl
and
sarl
adc
data16
leave
adc
fists
rcrb
jmp
push
sub
push
lods
movsl
scas
hlt
sarb
cmp
iret
imul
adc
jle
int3
dec
inc
pmaxub
add
mov
mov
cmpsb
xchg
inc
cwtl
and
mov
jbe
jmp
jo
adc
jmp
cmpsb
or
sub
mov
int3
mov
mov
js
mov
cmc
mov
das
daa
repnz
pop
or
xchg
setle
cmp
testl
jge
out
fcoml
setne
pop
inc
movsb
cmp
mov
xchg
xchg
inc
out
or
es
ss
dec
icebp
push
dec
mov
xchg
sbb
in
jb
or
sar
testl
fcmovnbe
xchg
aas
adc
jns
pop
push
rcrb
xchg
inc
fwait
dec
pop
lret
jle
pop
in
cwtl
lahf
lods
jl
adc
scas
jno
pop
dec
mov
or
orl
mov
orb
out
jo
sub
mov
negl
mov
mov
fwait
ja
sub
fldpi
aaa
jmp
das
or
inc
callw
popf
fcompp
std
xor
andl
lea
mov
inc
dec
mov
sub
clc
rorl
inc
push
lret
shll
mov
xor
dec
lods
jbe
aad
push
and
mov
sbb
xchg
adc
lahf
loope
dec
xor
mov
pop
movsl
pop
xchg
ss
aam
dec
jmp
sbb
lahf
jbe
cmp
dec
push
ljmp
cmp
movsb
mov
repnz
dec
add
push
in
and
ds
jnp
inc
orb
push
cmp
fcompl
inc
vpsllq
pop
adc
das
mov
push
in
dec
push
fidivs
fs
add
cmp
sub
mov
in
lcall
cltd
mov
xchg
cld
mov
imul
mov
or
inc
pop
lret
loope
xchg
sbb
insb
stos
cwtl
jns
pop
addl
pop
pop
fs
sub
cmp
repz
andb
sub
insl
push
add
aaa
sbb
shll
insl
pop
dec
loope
jo
xchg
pop
loope
dec
scas
pop
sbb
stos
fwait
mov
sbb
or
xchg
fadds
loopne
clc
mov
in
and
inc
in
and
enter
cmpsl
and
mov
ret
sub
insb
ja
jge
int3
pop
cli
push
imul
das
loope
mov
insb
nop
stos
mov
push
push
mov
xlat
imul
cmpsl
or
jle
fstpt
push
in
inc
fwait
cmp
mov
lret
stc
ja
rcrb
scas
mov
jnp
pop
xchg
push
shrl
fcompl
fsubrp
add
fsubrs
push
decl
xor
sbb
cwtl
lret
insl
dec
sub
dec
test
mov
in
popa
frstor
sbb
outsb
fimuls
xchg
pop
leave
xchg
cltd
aas
cwtl
rcll
dec
mov
test
fwait
leave
in
mov
xchg
jno
popf
xor
in
pop
call
out
daa
iret
lea
pop
and
je
mov
arpl
cmp
out
out
test
cmp
sbb
jle
lret
xorl
jbe
dec
cli
loope
push
ljmp
lret
shlb
xor
cmp
lcall
lret
popa
mov
sti
mov
and
pop
inc
test
inc
xchg
push
cltd
jle
pusha
shlb
or
fsubr
jo
mov
xor
out
sub
test
bound
movl
mov
and
push
pop
and
test
xchg
push
sbb
pop
mov
ret
dec
adc
jbe
mov
mov
xor
lock
lods
js
xchg
clc
jns
sbb
call
scas
jle
and
les
outsb
bound
cwtl
outsl
test
lds
aam
cmp
aas
subb
sbb
add
push
sbb
pop
mov
mov
out
aaa
pop
pop
cmp
frstor
jecxz
lcallw
adc
shl
push
outsb
loopne
ja
jle
inc
xor
ss
sub
jno
mov
pop
jnp
ja
and
xchg
popa
xor
fidivrl
js
and
cwtl
sub
loope
jmp
xor
in
pop
inc
pop
push
icebp
popf
add
fs
out
or
mov
jmp
lods
das
cmpsl
push
jne
mov
inc
popa
pop
lret
adc
aam
inc
out
outsb
fdivrl
test
ss
dec
dec
pop
xor
fcomps
mov
adc
mov
lods
je
int
icebp
mov
cmp
cltd
fwait
cmp
xchg
or
xor
xlat
jl
jbe
and
cmp
dec
imul
mov
add
jnp
and
shlb
cmpsb
repz
mov
inc
and
xor
adc
fldcw
sbb
push
mov
xchg
iret
test
pop
dec
cmp
sub
xor
loopne
loop
aad
aad
xlat
sarb
xchg
test
cmp
cli
repz
lock
add
cwtl
jp
mov
mov
negb
pop
sbb
cltd
mov
dec
ret
jb
rorl
lods
push
je
cs
push
lds
int
mov
aad
leave
test
adc
leave
dec
clc
xor
stos
js
fiadds
and
hlt
loop
cld
fsubp
adc
pop
icebp
test
pop
sbb
insl
mov
inc
mov
sub
jecxz
mov
in
sbb
push
mov
dec
push
pop
cmp
mov
pop
scas
mov
loope
sub
push
sahf
cmp
add
imul
ffree
stos
mov
adc
lret
pop
movsl
call
loopne
in
xchg
push
dec
add
push
jbe
pop
jg
scas
aam
adc
jecxz
sbb
stc
mov
or
into
enter
sub
cwtl
adc
add
pushf
cmp
xor
out
jp
add
adc
test
fadds
xchg
cmp
xchg
clc
push
movsb
sub
outsb
cwtl
inc
push
push
dec
jp
aad
add
fdivp
scas
cmp
lds
mov
mov
call
inc
mov
jae
jg
xor
cmc
jnp
repz
xchg
loop
pop
pop
in
test
push
lods
cli
clc
xchg
notl
dec
mov
jne
or
in
mov
sub
lock
in
repnz
aaa
mov
push
push
sub
inc
outsl
idivb
add
mov
mov
xchg
and
and
push
into
stos
out
dec
xor
cs
out
mov
and
fs
stc
cli
shlb
fldl
sub
and
push
std
inc
xchg
xchg
lahf
repz
lret
xchg
mov
sub
das
push
je
xor
and
inc
pop
cmp
sbb
insl
pop
xchg
loopne
fnstcw
and
in
subb
xchg
faddl
sbb
test
imul
and
adc
jl
movsl
mov
sbb
or
aas
repz
mov
mov
mov
lret
aaa
dec
negl
scas
mov
lock
dec
nop
loope
nop
out
sub
mov
inc
out
xchg
and
scas
rcrb
popa
or
jg
sub
cmp
outsb
int3
cmp
in
inc
ret
lcall
adc
xor
fistps
movsb
dec
insb
jecxz
push
decl
mov
cmp
out
ficomps
pop
imul
aaa
enter
jmp
xchg
lret
cmpsb
pop
cmp
xchg
or
jbe
sarb
mov
je
sbb
adc
mov
stc
pop
sahf
rcpps
mov
out
dec
inc
jo
and
push
jbe
lcall
in
cld
or
fbstp
mov
enter
sti
sti
sub
add
cmc
jo
adc
mov
mov
shr
and
fmull
outsl
dec
dec
bound
or
jne
cltd
ret
addr16
dec
mov
xchg
and
jo
js
frstor
fcmovbe
add
leave
xchg
in
pushf
and
inc
cmp
loop
ret
out
mov
test
test
mov
jecxz
xor
dec
xor
popa
test
aam
jecxz
mov
dec
pop
pusha
xor
inc
incl
jne
ror
jp
jle
stos
or
loopne
inc
mov
test
mov
adc
stos
or
mov
or
sub
enter
dec
jnp
cmpsb
test
test
sub
cmpsb
sbb
inc
outsl
aam
mov
ljmp
mov
dec
inc
push
jle
cmpsl
popf
adc
mov
mov
jg
mov
xlat
lret
jecxz
ljmp
aad
sbb
sub
adc
fstl
lds
add
mov
lea
xchg
cwtl
imul
pusha
inc
sahf
jmp
jp
xchg
shr
cmp
xor
dec
jle
dec
mov
jnp
ja
sbb
ss
dec
jmp
je
aas
fmuls
outsl
jno
push
pop
mov
leave
std
inc
lahf
mov
mov
lret
sti
add
sbb
mov
xchg
nop
or
inc
into
test
pop
lea
pop
imul
jg
fisttps
ljmp
xchg
movsl
sti
push
inc
mov
lcall
loope
fisubl
and
fstl
pop
sbb
or
jl
mov
dec
mov
adc
cwtl
pop
push
cmc
fisttpll
add
shl
push
mov
pop
push
test
jb
vmovaps
fstpl
fwait
shll
sub
lea
xchg
xor
mov
pop
lret
lret
mov
lods
jb
in
ret
insl
mov
push
mov
mov
add
test
lock
stos
pop
cmp
adc
pop
jae
loope
popf
outsb
imul
outsl
arpl
dec
dec
jmp
xrelease
mov
lret
adc
out
adc
test
insl
adc
dec
mov
pop
inc
scas
sarl
add
clc
pusha
test
mov
and
xlat
pop
nop/reserved
int3
out
jb
in
dec
cmp
lods
mov
icebp
adc
and
pushf
dec
lret
pushf
mov
filds
push
test
sub
jg
add
je
popf
aam
xchg
mov
cmp
xchg
fsubrl
icebp
lcall
jl
notl
add
jbe
lcall
mov
push
push
dec
xchg
push
lahf
adc
jle
add
fsubrl
jg
mov
mov
cmp
int3
sub
fadds
sub
in
adc
inc
call
sahf
mov
adc
cmp
inc
stc
mov
jg
add
jne
js
push
lret
mov
sbb
mov
sub
out
adc
negb
mov
push
mov
mov
push
loope
pop
mov
add
aam
or
push
mov
or
xorl
shl
fstl
sub
mov
jle
imul
dec
add
push
cmp
xchg
jmp
div
repz
sub
cmp
xor
stos
in
shr
sbb
jp
jb
cs
xor
jge
mov
stos
repnz
mov
mov
fnsave
out
mov
addr16
sbb
mov
outsl
xor
roll
jo
push
xor
dec
jae
jnp
lods
std
jge
jl
filds
fucomi
jne
das
pop
inc
sbb
dec
in
mov
push
repz
cmp
outsl
adc
cmp
dec
imul
fs
ss
xor
out
mov
mov
mov
jg
xchg
out
xchg
shlb
or
into
shrb
popa
iret
or
je
aam
xchg
leave
jbe
dec
mov
cmp
and
or
outsb
lods
daa
movsl
adcb
xchg
sub
pop
jae
jl
xchg
mov
rolb
sahf
sub
test
mov
xor
pusha
repnz
xor
cmp
mov
and
js
adc
imul
cmc
xor
sub
stos
dec
inc
pop
insl
mov
je
outsl
jle
sbb
dec
das
mov
pusha
hlt
or
and
imul
mov
and
mov
pop
scas
flds
cli
xor
jg
push
lock
inc
mov
les
test
push
sahf
mov
int
inc
and
sub
and
addr16
or
mov
scas
jae
sbb
popf
sahf
pop
fiaddl
xor
dec
mov
add
dec
push
insb
pusha
lds
sti
mov
fxam
pusha
mov
pop
inc
xlat
rcl
in
popf
mov
ror
stos
popf
or
mov
add
cmp
out
stc
aam
inc
push
roll
jbe
mov
mov
jb
and
inc
rcr
call
ja
sbb
adc
cwtl
jno
fs
push
or
mov
pop
cwtl
rol
insb
xchg
movsb
stos
lock
addr16
hlt
mov
ret
out
mov
and
sub
fsubs
hlt
and
and
jb
cld
out
cwtl
add
pop
push
adc
ss
insb
xor
imul
ss
jl
mov
jge
clc
in
mov
stos
je
cmp
in
cmpsl
push
xchg
addl
jns
lock
push
sub
sub
test
es
jnp
adc
mov
pop
mov
mov
sub
std
test
hlt
sub
js
iret
lods
cmp
adc
aas
enter
fs
and
lret
fs
std
add
cwtl
outsb
cmpsl
popa
mov
int3
xor
mov
roll
in
cs
hlt
into
xchg
jge
ss
adc
dec
cmc
adc
jns
cli
stos
and
add
sbb
inc
ficoml
aad
mov
loope
enter
jp
cli
lfs
push
xor
fadd
or
lahf
in
inc
test
ret
int3
cmp
int
stos
xchg
popa
dec
xor
pop
stos
in
mov
cmpsb
mov
xchg
dec
lock
mov
inc
pushf
jns
mov
les
iret
add
fcomps
dec
jmp
mov
xchg
mov
mov
fcoml
adc
addr16
js
jns
rolb
sbb
call
in
push
outsl
pop
in
movsb
xor
and
fsubl
in
push
inc
xor
xchg
mov
das
lea
ljmp
test
sbb
pop
into
sbb
cmp
stc
cmp
sub
cmp
sub
sub
out
pop
sbb
cmc
push
xchg
cmp
pushf
mov
dec
lret
dec
stc
or
sbb
icebp
movsb
out
jmp
jge
out
mov
push
pop
stos
inc
sub
xlat
iret
inc
xlat
cld
rclb
mov
sbb
loop
sbb
cmc
cmc
cmp
pushf
mov
aam
mov
shr
leave
jmp
pop
nop
xchg
int3
shrl
fistps
lea
scas
add
ficomps
xlat
mov
push
xor
scas
xorl
outsb
pusha
sbb
out
add
sub
mov
repz
call
jg
shll
xchg
xor
mov
lock
jle
mov
lcall
push
pop
inc
out
pop
popa
mov
cmpsb
in
adc
jge
daa
out
dec
inc
rcrb
and
sbb
das
dec
idivl
jb
push
pop
xchg
stos
orl
sub
mov
and
pop
jmp
and
imul
mov
mov
js
mov
into
jmp
xor
enter
fidivrs
das
dec
subl
daa
mov
push
repz
xchg
adc
insb
jo
mov
cmpl
dec
xlat
mov
jge
sbb
jnp
ret
or
push
mov
call
iret
and
popf
cltd
pop
daa
movsl
sub
jne
call
xchg
jge
jge
jmp
inc
sub
dec
dec
sub
pop
mov
rcll
jg
fst
push
popf
pop
sub
mov
sub
pop
xor
jp
and
adc
popa
orl
cmc
nop
pop
hlt
loop
call
mov
aam
cmp
cld
pop
xchg
dec
inc
and
jb
jno
sub
jmp
cwtl
fmull
or
jp
pop
add
jecxz
out
arpl
push
inc
push
rclb
jnp
popf
ja
mov
cli
inc
push
xor
cs
loop
imul
cld
test
lods
push
imul
stc
stc
sbbl
std
push
push
sbb
negb
pop
inc
or
dec
inc
sub
in
enter
pop
pusha
cld
add
inc
push
ja
shr
pusha
shlb
pop
mov
xor
xchg
jns
aad
sub
pop
and
fwait
fwait
inc
mov
test
pop
movsb
mov
lret
sahf
shr
stc
inc
push
jl
pop
xchg
xor
mov
push
xlat
sarb
or
dec
fsubr
daa
insl
loope
pop
sbb
mov
mov
fwait
cmp
push
adc
shrl
or
dec
into
clc
js
ds
mov
out
mov
addl
xchg
loopne
push
sbb
push
add
cltd
popf
xchg
push
adc
xchg
cmpsl
adc
xchg
sbb
insl
lcall
push
fdivr
mov
mov
div
addb
adc
in
mov
dec
mov
enter
adc
add
pop
inc
jb
movsl
jae
cwtl
jns
ret
and
dec
imul
jp
stos
in
and
jg
push
adc
test
rcr
in
xchg
or
dec
jmp
adc
mov
popf
js
pop
xchg
sub
ds
cmp
cmpsb
lock
xor
jb
psubd
or
adc
sbb
lret
les
dec
test
stos
leave
and
rcrl
add
xchg
rcll
divl
inc
jns
xchg
gs
enter
xor
dec
aas
or
push
fsubs
popf
cmc
pop
dec
in
mov
clc
jb
jmp
push
call
and
leave
pop
xor
lcall
mov
movsb
fdivrl
inc
loop
push
test
lcall
xchg
adc
xchg
ficompl
dec
rcrl
mov
sub
fldt
dec
mov
pop
sub
xchg
stos
and
sub
jno
dec
dec
stc
divb
xor
stos
jl
mov
in
cwtl
cmp
flds
push
cmp
inc
div
out
loopne
jbe
pusha
adc
ret
ret
xchg
hlt
mov
test
or
iret
sub
dec
bound
fnsave
pop
shr
test
stc
mov
mov
mov
inc
js
fists
push
lcall
mov
pop
xor
add
pop
lahf
pop
or
ja
int3
pop
int3
fcmovnu
in
lds
sbb
es
cmp
push
dec
adc
mov
dec
jbe
cmpsl
dec
mov
pop
and
dec
lock
arpl
idivb
je
sub
mov
stc
sub
pushf
out
in
pusha
mov
sarl
or
inc
aam
jge
mov
pop
adc
sbb
subl
in
add
lds
adc
jnp
xor
mov
rolb
mov
sbb
movsb
out
ret
mov
in
ret
call
pop
nop
jne
ljmp
orb
dec
mov
repnz
scas
repz
aam
dec
and
mov
pop
sbb
clc
sub
sbb
flds
fcoml
adc
inc
push
sub
out
sub
rorb
pop
int3
mov
pop
ficomps
pop
dec
in
cmpl
mov
addb
mov
adc
lods
mov
pop
pop
xchg
push
and
rolb
inc
data16
adc
lcall
cmpsb
jns
out
sub
cld
cwtl
ja
shlb
in
push
mov
push
cltd
jmp
dec
ljmp
mov
push
cmp
inc
push
push
fists
mov
pop
in
mov
mov
dec
xor
or
mov
enter
add
repz
scas
xorl
data16
addr16
mov
xor
adc
aaa
cmp
cmp
and
add
mov
push
out
shr
iret
cmc
dec
push
lods
lcall
cltd
jmp
cmp
lret
out
outsl
imul
xchg
push
scas
xchg
ret
bound
mov
sbb
fistpl
pop
loopne
mov
dec
aad
scas
inc
repnz
xor
xchg
popa
in
dec
jmp
shll
out
pop
leave
imull
cltd
mov
cld
sub
push
daa
das
rorl
loope
fdivs
mov
inc
adc
jg
int
xchg
loop
push
in
movsb
lret
dec
mov
test
icebp
adc
push
fiaddl
sub
mov
int
loope
dec
outsl
xor
mov
ljmp
shlb
ljmp
and
or
sbb
xchg
inc
adc
fidivl
mov
pop
test
scas
ss
int
mov
sub
in
xchg
lods
loop
stc
js
outsl
push
fwait
mov
pusha
inc
inc
inc
inc
dec
mov
pusha
mov
adc
pop
push
or
leave
xchg
popf
and
dec
stos
push
add
jmp
mov
cmpsl
inc
adc
sarb
jae
das
pushf
fiadds
sahf
adc
in
inc
stc
out
jmp
popa
test
dec
inc
push
sub
fcmovne
mov
daa
call
bound
lods
in
push
cmp
push
dec
hlt
faddl
repz
outsl
imul
push
into
jne
mov
pushf
fsub
mov
or
stos
sub
in
rorb
lods
aam
lcall
ss
outsb
sub
or
xchg
sti
insl
mov
outsl
outsb
add
push
lret
data16
mov
stos
fnstsw
or
and
rolb
das
xor
mov
les
stos
daa
mov
or
push
out
aaa
xchg
inc
fsubs
rorb
je
cmp
mov
mov
dec
hlt
in
cmp
outsl
cmp
clc
push
lds
popa
outsl
ret
inc
mov
push
stos
fdivr
mov
in
adc
pop
loope
popa
sbb
push
or
mov
cmp
scas
inc
addl
sub
dec
adc
jbe
lcall
inc
ret
je
gs
sbbb
jecxz
jp
out
cmpl
mov
loop
mov
sbb
loope
jae
faddl
jmp
cmp
jecxz
or
mov
imul
mov
cmp
out
dec
test
adc
pop
call
rorl
mov
push
ret
es
pop
add
push
rclb
bound
scas
mov
cmp
add
cmc
xor
lods
lahf
repnz
dec
xchg
addr16
mov
pop
mov
mov
lret
or
xorb
cs
insl
hlt
sbb
movsl
sub
jns
adc
cs
outsl
andb
mov
and
pop
insb
or
pop
stc
ficompl
notb
nop
or
inc
lahf
out
mov
add
int3
arpl
cmp
xlat
xor
push
imul
sahf
adc
mov
mov
stc
cli
es
in
out
jp
cmovg
out
or
out
out
jb
add
hlt
adc
shlb
aas
push
sub
mov
xchg
mov
fmuls
cmp
test
mov
clc
and
adc
outsb
jecxz
mov
rcrl
xchg
fmull
testb
cmpsb
hlt
sarl
js
mov
mov
push
and
jne
int3
push
xchg
inc
sbb
sub
cmpl
sarl
subb
mov
sbb
sbb
mov
imul
lods
cmp
mov
push
pop
dec
into
dec
das
testb
pop
jle
jo
pop
jecxz,pt
repz
jbe
push
lock
out
add
xor
jbe
stc
dec
sbb
mov
in
mov
mov
mov
push
push
pop
daa
pop
pop
jne
out
fimull
enter
pop
dec
les
add
xchg
push
mov
mov
mov
or
inc
adc
les
stos
jle
scas
out
pop
mov
cmp
iret
pop
add
push
js
add
dec
pop
jbe
adc
sbb
jecxz
lahf
popf
adc
ja
shlb
cs
sbb
mov
mov
xchg
out
cmp
lds
xorl
xlat
mov
dec
sti
cli
insb
sahf
stos
jno
shrl
enter
in
cmp
addr16
push
xlat
hlt
and
in
shlb
ja
push
lods
jp
or
dec
jp
sub
arpl
sub
test
push
fdivl
xor
ret
imulb
xchg
sub
insl
xor
ds
fdivs
mov
scas
pop
test
mov
repz
das
sbb
sbb
push
add
push
and
cmp
enter
dec
mov
jge
xchg
mov
lcall
mov
push
add
loop
mov
data16
sub
or
lret
mov
insl
mov
out
addb
xchg
and
add
inc
ljmp
aad
lods
jns,pt
sbb
and
pop
pop
xorb
jnp
testb
inc
pop
mov
inc
xchg
incb
repnz
sub
dec
adc
inc
ret
xor
rcrb
push
adcb
ss
jb
inc
shrb
js
cmpsb
sarl
pop
cmp
movsl
jmp
push
push
mov
jmp
adc
xor
xchg
nop
hlt
pop
dec
fdivp
jle
mov
cmp
into
in
and
cwtl
jmp
cmp
xchg
xchg
mov
les
shl
and
fadds
fcmovnbe
push
addr16
sub
out
js
enter
popa
push
add
aam
jbe
add
clc
pop
adc
jnp
adc
cmc
add
jle
sbb
ret
mov
xor
.byte
