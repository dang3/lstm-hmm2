add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
add
add
dec
add
add
add
push
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
cmp
xor
xor
xor
xor
bound
xor
add
sbb
add
add
inc
add
insl
add
add
je
jae
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
outsb
add
inc
add
and
popa
add
arpl
push
add
jb
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
inc
add
add
js
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
imul
inc
add
add
js
add
add
add
adc
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
aas
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
outsb
add
inc
add
add
js
add
add
add
add
add
add
jb
imul
je
add
jne
imul
add
inc
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
inc
add
and
popa
add
arpl
push
add
jb
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
and
add
add
push
add
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
inc
sbb
add
nop
add
je
add
add
add
movsl
or
add
add
add
nop
add
add
add
add
add
pop
push
add
add
add
test
add
add
add
push
mov
add
mov
add
add
add
xchg
mov
add
mov
add
add
sub
add
add
add
mov
add
add
add
shll
add
mov
add
add
mov
add
mov
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
insb
add
push
inc
push
push
cs
insb
add
add
gs
je
inc
imul
insb
outsl
jae
dec
popa
outsb
fs
add
add
je
jb
arpl
fs
jae
add
add
imul
add
dec
outsl
popa
fs
imul
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
je
arpl
add
imul
jae
add
push
imul
jb
add
add
je
gs
jo
popa
je
inc
add
add
gs
je
push
gs
imul
jae
jb
outsb
je
add
add
add
add
mov
add
add
add
push
add
add
mov
add
add
add
imull
mov
cmp
jg
sbb
add
dec
mov
int
jp
int
insb
js
dec
push
pushf
sbb
add
dec
ss
sub
subb
js
cmp
sbbb
subb
idivl
mov
lods
cmp
cmpb
js
dec
or
sbb
mov
dec
xchg
int3
dec
movb
dec
mov
es
mov
push
dec
mov
sub
fisttpl
movsb
mov
sbb
dec
mov
addl
mov
push
stos
out
dec
mov
jne
jne
inc
mov
leave
ret
test
shll
inc
ss
mov
mov
mov
std
jns
jge
cwtl
dec
cmpsl
inc
popa
jnp
mov
repz
add
sub
fcmovne
lea
mov
push
ret
xchg
mov
mov
enter
test
repnz
push
xor
sbb
data16
bound
cmp
sbb
mov
pop
mov
pop
aad
mov
mov
shr
int3
cmp
cmpsl
int3
dec
mov
sti
xlat
mov
gs
cld
pop
mov
mov
push
clc
daa
cmpsl
add
mov
ss
push
inc
cmc
cmp
xchg
mov
add
mov
lods
repz
mov
lods
xor
aam
cmpl
add
lds
mov
xor
lods
outsb
or
or
fnstsw
mov
into
out
imull
push
mov
mov
mov
daa
sbb
and
xor
xlat
mov
mov
and
or
xchg
xor
push
movsb
fdivl
add
shrl
rorl
lds
jns
pushf
sub
sub
decb
xchg
sub
lods
movsb
push
inc
in
ret
mov
in
fsubrs
fwait
jg
out
jb
repnz
xchg
sbb
adc
xor
sbb
jno
std
je
add
into
and
sti
and
cmpsb
push
and
xchg
and
mov
filds
or
sub
cmp
lds
cs
pop
inc
aad
push
mov
mov
mov
fnstenv
jae
jbe
jae
iret
mov
mov
mov
jl
fisubrs
jl
cmp
jle
ljmp
scas
mov
mov
fisubs
mov
and
mov
and
sbb
cmp
xchg
lock
pop
lea
fidivs
inc
and
lds
dec
xchg
dec
and
mov
mov
out
adc
rclb
sub
pop
push
pop
lcall
push
jecxz
pop
xchg
mov
dec
mov
jge
mov
add
or
add
or
mov
jp
cmc
mov
insb
mov
stos
mov
mov
movsl
cwtl
cmp
and
lea
dec
out
inc
xor
mov
mov
test
cmp
es
pop
add
out
xchg
inc
push
subl
int3
lret
mov
outsl
xchg
add
les
sub
push
mov
jbe
add
sub
or
call
test
aas
add
mov
in
incb
int3
adcl
pop
sbb
add
xchg
mov
mov
add
add
add
pushf
out
mov
int
sahf
mov
shrb
add
into
add
adc
jno
fidivrl
icebp
lret
loopne
cli
mov
xchg
out
push
xchg
ljmp
mov
test
mov
xchg
cwtl
pop
icebp
jp
mov
stc
mov
pop
outsb
subb
mov
jae
lea
mov
cmp
sbb
cs
mov
out
mov
mov
mov
inc
clc
test
das
hlt
adc
aaa
out
pop
jnp
pusha
sti
xchg
mov
outsb
out
xchg
add
mov
mov
jnp
in
mov
pusha
and
mov
push
dec
cmp
sbb
sub
lds
stos
idivb
loope
mov
out
sub
mov
cld
jmp
pop
pusha
add
or
add
mov
dec
mov
fidivl
push
mov
dec
and
arpl
jmp
mov
pop
sbb
inc
xor
mov
and
out
jae
cli
out
in
inc
rorl
xor
jge
add
imul
mov
mov
mov
out
or
shl
mov
jg,pn
sti
popa
test
add
lods
mov
pushf
xor
or
push
loopne
adc
add
fnsave
call
icebp
xlat
mov
test
inc
cmpsb
jle
push
out
stos
push
mov
push
repz
jl
jg
mov
cmpsl
pop
es
xor
and
ret
lret
out
fs
xor
mov
sbb
jmp
push
lods
mov
xlat
lods
dec
inc
or
adc
mov
pop
inc
nop
repz
in
fwait
sbb
pop
add
loope
pop
fwait
rol
adc
inc
cwtl
cs
sbb
inc
push
fldt
xor
pop
aaa
arpl
pop
inc
mov
xchg
jmp
push
aas
jo
invd
push
or
jl
cs
lret
mov
mov
xor
push
pop
lea
loope
das
insl
sub
into
leave
imul
or
add
dec
loop
aas
in
sbb
cwtl
add
setl
inc
or
ss
cmpsl
fildl
xchg
adc
dec
test
mov
movsb
test
mov
xchg
fstl
outsb
shl
mov
jmp
lods
outsb
xchg
dec
movsb
addr16
mov
ret
push
sbb
push
jg
fdivrl
or
sub
and
rcrl
int
push
xchg
pushf
cmpb
ret
jmp
ret
fimull
push
pop
jg
sub
sub
lds
and
js,pn
push
mov
sti
add
cmp
in
subl
dec
mov
je
loop
ret
mov
lds
ja
dec
std
push
push
adc
mov
jb
pop
and
shlb
enter
daa
mov
je
cmp
enter
inc
test
mov
xchg
pushl
nop
xor
outsb
outsb
mov
push
lea
xchg
cwtl
inc
sbb
xchg
push
push
pop
sti
mov
movsb
inc
and
mov
jl
stos
daa
fldt
mov
aad
xlat
pop
popw
scas
pusha
xchg
jb
hlt
mov
outsl
xchg
fs
dec
dec
fs
scas
pop
fs
push
nop
arpl
js
mov
ja
addr16
pop
and
cmpsl
or
jle
hlt
or
outsl
sbb
xchg
cs
lcall
insl
jae
add
mov
cmpsl
xor
push
lret
and
cs
lahf
inc
out
or
add
sbb
jecxz
xlat
nop
or
and
lods
sbb
sbb
pop
sub
add
lods
sarl
sbb
es
test
add
inc
movsb
and
cmpsb
jb
mov
ja
xchg
xor
mov
push
test
dec
outsl
cmpb
xchg
aaa
adc
in
cmp
cli
push
pop
jecxz
cs
cld
fisubrl
dec
and
adc
rcll
sub
arpl
pop
jb
cmp
push
or
push
cmp
or
popf
jecxz
shll
shlb
cmp
mov
leave
sti
outsb
int
and
loopne
mov
push
sbb
ja
pop
mov
fnstcw
inc
mov
out
loope
movsb
sub
aam
dec
jne
add
and
add
dec
and
mov
popf
ret
cmc
notb
inc
sbb
pop
xlat
mov
sub
sub
xchg
fsubrl
mov
push
jge
scas
fucomip
ds
leave
xor
es
adc
mov
shrb
fisubrl
inc
push
scas
mov
xor
push
sbb
aam
addb
pusha
inc
xor
pop
xchg
ss
push
ret
push
daa
or
jg
in
sub
jle
mov
sbb
sbbb
push
in
lods
je
xchg
adc
or
fnsave
sub
adc
out
and
cwtl
mov
cld
xchg
sahf
jl
inc
pop
mov
inc
inc
push
add
sub
in
ss
pop
cld
pop
lea
or
adc
idivl
gs
popw
add
xchg
lret
lret
loope
cmpsb
mov
add
push
dec
repnz
jnp
popa
stc
adc
jae
bound
and
inc
xchg
insl
cld
out
xchg
and
andb
in
lcall
sbb
shlb
fwait
movsl
sbb
lock
in
jb
icebp
jmp
and
or
in
cmp
repnz
mov
mov
leavew
sbb
lahf
ja
sub
cmp
add
stos
mov
dec
jno
dec
movsl
jg
cmp
enterw
push
js
aam
aaa
call
lods
scas
xchg
popf
imul
mov
pop
aas
or
push
shl
push
movsl
data16
orb
repz
insb
xor
xchg
gs
orl
stc
dec
push
cmp
adc
and
xchg
test
add
mov
aam
in
out
mov
outsl
ss
inc
jb
test
inc
ret
push
xor
xchg
hlt
inc
jl
mov
and
aam
lods
test
push
cmp
call
out
cmp
roll
sbb
sub
or
mov
fsubs
mov
je
scas
data16
insb
dec
pop
leave
nop
data16
out
add
mov
icebp
test
cmpsl
pop
test
pop
mov
xchg
pop
loop
push
jnp
jnp
out
inc
or
xor
sbb
andb
arpl
sbb
test
lcall
sbb
je
inc
mov
xor
adc
cmp
xor
fwait
cmp
jnp
xchg
aas
scas
add
leave
mov
aaa
jle
dec
and
jp
das
push
or
mov
bound
jmp
dec
xchg
mov
add
enter
and
cltd
loope
nop
and
mov
dec
cmc
cmp
xchg
xlat
xchg
and
les
in
adc
out
sub
movsl
das
cmp
test
test
imul
out
popl
or
mov
dec
mov
enter
pop
repnz
clc
sarb
lods
data16
sahf
or
sbb
lods
jnp
addr16
xor
into
call
loopne
cmpsb
or
mov
in
hlt
aas
or
pop
daa
movsl
pusha
insl
cmp
pop
xorb
pop
mov
adc
popf
adc
cmp
pmuludq
pop
sbb
inc
sub
pusha
fs
pusha
jno
jnp
fldl
sub
mul
mov
stos
imul
jecxz
sbb
xor
add
into
mov
push
mov
imul
xor
dec
push
aas
sbb
out
adc
stos
mov
ja
gs
inc
jo
inc
mov
movsb
sub
cmp
mov
push
jb
jecxz
testl
and
ret
cld
pop
popf
or
test
filds
or
fnstenv
xchg
outsl
push
push
lahf
mov
rolb
fisubrs
jbe
outsb
cmp
inc
mov
dec
in
sbb
sbb
orb
out
leave
mov
jbe
fwait
lds
test
out
fmuls
pop
gs
imul
pop
adc
push
sbb
dec
clc
ret
in
rorb
jb
insl
addb
pop
and
and
sahf
dec
mov
cmp
mov
sbb
pop
xor
flds
imul
div
ficoms
mov
lea
scas
dec
inc
rcr
dec
lret
les
test
test
cltd
pop
mov
adc
pop
stc
inc
jl
int
repz
leave
movsb
inc
mov
or
hlt
pop
mov
sarl
mov
jne
ja
sub
scas
mov
nop
loop
sub
sbb
jnp
mov
sub
xchg
imul
fistpl
pop
inc
aad
fmull
cmc
jb
cmp
in
lea
outsb
ss
ds
dec
rorb
repnz
idivb
push
dec
pusha
loopne
inc
cli
xor
push
loop
int3
jo
pop
fstl
push
daa
xlat
add
out
pushfw
hlt
dec
in
cmc
mov
jns
loop
ret
scas
ss
mov
dec
sbb
jae
adc
pop
mov
test
push
movsb
fldlg2
jns
pop
insl
jle
imul
ljmpw
jmp
inc
in
jle
cmovns
sbb
movsl
shll
sub
cli
inc
shl
negb
sbb
push
call
sbb
sbbl
mov
and
push
push
sub
xchg
sub
inc
and
jae
and
arpl
mov
pop
pushf
jmp
mov
jbe
call
icebp
cmp
jg
jl
shl
cmp
stc
cmc
pop
add
addl
out
rorl
pop
mov
adc
scas
xchg
mov
stos
arpl
adc
clc
shrl
out
jl
sbb
dec
mov
cmp
mov
and
shl
pushf
daa
imul
jno
lret
lds
fisttps
push
mov
xchg
xchg
andnps
stos
adc
adc
push
cmp
mov
sbb
imul
icebp
sbb
jae
jg
or
fmul
sbb
push
mov
push
or
or
or
sub
inc
loopne
lea
xor
mov
lahf
scas
repnz
bound
adc
lcall
ret
pop
data16
sub
sub
xchg
cmp
imul
sbb
sub
jbe
or
jns
mov
cmp
cli
popa
aas
fldenv
or
lds
pusha
aam
cmp
pop
jl
or
popf
or
in
mov
cmpsl
xchg
jae
or
or
ss
out
ds
jo
sub
jne
cld
repz
push
insl
bnd
xor
outsl
lds
xchg
mov
sbb
scas
sti
pop
dec
outsb
sub
dec
ja
les
addl
xor
and
cmp
push
in
cmp
out
inc
mov
fisttps
mov
and
mov
dec
jmp
sarb
mov
adc
push
dec
fildl
sbb
mov
sbb
pop
data16
cmp
push
fstpl
push
adc
data16
add
and
sub
mov
pop
xchg
or
jnp
pop
inc
jl
jb
lods
test
sbb
inc
cmc
mov
movsl
inc
push
in
pushf
jne
std
fs
inc
notb
pushf
sti
dec
mov
xchg
outsb
mov
fs
shll
push
add
sub
imul
sarl
pop
pop
xchg
pop
and
loopne
inc
inc
int
call
lods
inc
mov
cmp
pop
loopne
inc
fnstsw
test
xor
pop
mov
push
addl
cld
out
test
inc
fldl
cmp
sub
subl
les
add
mov
fstp
pop
push
push
lds
jns
xchg
mov
or
xchg
add
cld
scas
adc
xchg
sub
or
out
fisubrl
xchg
daa
repz
imul
jg
cmp
mov
sti
xor
sahf
call
out
scas
xor
aad
pop
cmpsl
jb
xor
mov
lods
xchg
ret
or
js
fcmove
jno
push
xchg
push
jmp
cmp
cmp
std
sub
out
xor
mov
loop
and
cmpsl
js
adc
and
dec
push
push
mov
dec
rcl
push
sbb
rorb
loop
dec
sub
ret
nop
sub
aas
shlb
cli
mul
mov
push
push
aam
mov
jmp
dec
fstpl
sbb
inc
rcll
xor
or
test
mov
push
and
dec
imulb
insl
insl
das
mov
push
inc
in
pop
test
shlb
mov
pcmpeqb
cmp
lcall
iret
mov
push
xor
icebp
or
pop
mov
je
cmp
lods
es
or
pop
mov
sbb
add
roll
ja
loope
in
push
out
mov
xchg
mov
xchg
jle
sbb
adc
gs
repnz
sahf
jno
mov
push
xor
stc
pop
enter
adcb
jp
icebp
jbe
xor
outsl
sahf
hlt
fwait
mov
data16
in
push
rcll
data16
outsb
lret
iret
lds
dec
mov
lods
or
push
inc
adcl
sub
inc
xchg
mov
scas
mov
ja
ljmp
jbe
leave
mov
add
shll
test
insl
xchg
stos
lret
and
jg
or
pop
sbb
xchg
dec
into
xchg
jns
mov
xchg
pop
dec
sbb
sbb
les
dec
pushf
push
mov
mov
movsb
lods
push
pop
adcb
test
xchg
pop
mov
mov
or
xchg
push
mov
sbb
dec
cld
inc
jbe
adc
decb
adcl
pop
mov
pop
mov
outsl
push
add
enter
push
in
std
lods
insb
test
cmpsl
add
fmul
pop
pop
or
int3
push
adc
nop
dec
rol
mov
out
fbld
outsb
negl
push
pop
mov
mov
and
sbb
popa
sbb
push
jb
inc
outsl
sbb
outsb
jne
add
xor
xor
fcomps
mov
sbb
lret
sbb
pop
pop
push
xlat
mov
jg
scas
rolb
jl
lods
or
scas
das
jl
in
enter
lea
movb
clc
loope
addr16
inc
dec
pop
cld
loope
fwait
aam
fs
cld
jno
cld
add
mov
dec
jno
je
outsl
mov
mov
cmp
gs
mov
jl
stos
push
mov
adc
int
mov
fwait
dec
or
dec
in
mov
adc
int
ds
ret
cli
lods
ror
cmp
mov
xor
mov
les
mov
enter
dec
dec
mov
hlt
pop
mov
sub
lock
dec
lds
int
mov
in
xchg
add
inc
mov
ret
inc
int3
add
mov
fmull
or
clc
imul
stos
dec
dec
cmp
mov
or
outsb
inc
mov
mov
xor
xchg
dec
mov
je
xchg
shll
mov
jns
mov
and
out
lock
in
mov
nop
pop
dec
mov
es
sub
js
mov
lahf
mov
mov
int3
mov
adcb
dec
inc
rcll
lea
dec
dec
mov
out
and
repnz
std
or
push
enter
xor
pop
pop
loopne
or
rclb
jl
leave
sub
jp
inc
dec
dec
push
mov
sbb
ror
in
enter
mov
and
sarl
dec
cmp
jl
loopne
push
dec
push
pushf
inc
dec
mov
int
mov
adc
int
mov
popa
jle
imul
push
mov
mov
imul
inc
int3
mov
push
mov
pop
pusha
push
xor
pop
call
push
mov
imul
inc
cmp
sti
mov
in
mov
rorl
gs
scas
leave
arpl
mov
jns
addr16
fldl
push
inc
push
int3
enter
movsl
stos
sbb
sarl
pop
push
str
pop
push
jle
jg
jmp
jb
and
xor
xor
xor
ror
rol
sub
push
xor
pop
pop
push
ror
pop
mov
push
fstsw
pop
push
push
fstsw
pop
mov
push
fstsw
pop
sub
push
push
pop
pop
add
push
push
add
xor
pop
pop
pop
je
jne
push
add
sub
push
jmp
mov
pusha
add
nop
mov
popa
sub
push
push
add
add
push
ror
pop
pop
push
ror
pop
push
push
call
call
jmp
jmp
jmp
call
mov
add
sub
sub
verr
cmp
push
mov
pop
pop
pusha
popa
jne
verr
jmp
push
ror
pop
add
je
jne
sub
push
push
add
xor
pop
pop
add
pusha
xor
popa
notl
xchg
xchg
decl
jbe
ja
jmp
push
push
push
add
sub
pop
pop
rorl
push
not
pop
subl
push
push
pop
pop
jmp
pushf
popf
pop
push
ror
pop
lea
jle
jg
call
sti
jnp
jmp
add
pushf
popf
mov
je
jne
push
not
not
call
addr16
lock
data16
fbld
adc
test
mov
outsl
jne
cli
je
mov
push
mov
push
aad
dec
add
push
add
sbb
test
sub
mov
cmpsb
xor
add
push
mov
push
push
cmc
cmp
pop
mov
or
xchg
adc
mov
dec
sbb
ret
cltd
and
sub
push
dec
sbb
sahf
pop
sbb
pop
xchg
insl
sub
lods
ja
loope
sbb
ficoms
mov
inc
sbb
gs
pop
inc
test
sarb
fwait
push
aaa
inc
fs
jle
xchg
mov
push
lea
leave
mov
add
call
call
jmp
push
pop
pop
sub
je
jne
movb
pusha
xor
xor
popa
pop
push
ror
pop
popa
push
push
push
mov
dec
dec
sidtl
pop
pop
pop
push
xor
xor
push
push
inc
pop
push
pusha
popa
push
verr
push
test
je
jne
ret
loopne
push
fists
add
pop
jmp
add
add
or
add
sub
sbb
std
scas
testb
mov
enter
add
cmp
stc
decl
lock
and
xchg
adcb
inc
sub
mov
mul
rcrl
sbb
and
add
cltd
mov
and
cwtl
cmp
imul
outsl
arpl
adc
fidivrl
das
or
sbb
out
addb
ljmp
repnz
cmp
add
icebp
cmp
iret
dec
push
incb
addr16
and
popa
mov
sub
jo
shrb
cmpsl
and
jbe
pop
flds
jmp
rcr
cmpl
ret
ja
cmovno
lret
pop
rclb
fsubrs
mov
mov
xor
and
pop
dec
sub
or
lods
shrl
jns
xor
lret
lret
stos
out
out
sub
icebp
push
ret
cmpsl
decb
xchg
push
cmp
pop
cmpsb
lea
adc
sbb
sub
lahf
or
loope
cwtl
inc
xchg
sbb
jg
mov
xchg
lea
or
repnz
imul
jne
call
stos
cwtl
aaa
cmc
les
sub
mov
sub
xchg
out
dec
mov
push
pop
pop
je
test
pop
hlt
hlt
icebp
adc
lcall
pop
sbb
outsl
lock
in
sbb
lock
and
popf
js
xchg
pop
scas
into
stc
jecxz
pop
lods
jbe
je
sbb
cmp
ljmp
xchg
jp
sub
adc
jp
lds
add
test
cmpsl
sbb
jae
jb
imul
test
xchg
jge
idivb
sub
adc
mov
and
out
mov
adc
fsubrl
cmpsl
loope
xchg
jnp
and
shrl
imul
jecxz
lahf
popf
sbb
lods
cmpsl
and
cs
cmpl
jl
dec
repnz
push
jns
push
and
jl
fstl
lods
xchg
hlt
gs
out
insl
out
sub
jmp
push
mov
adc
test
rcrb
pop
cwtl
frstor
loopne
mov
adc
lods
aam
add
xor
cmp
dec
mov
outsl
sub
cmc
mov
lret
xor
sub
sub
cmp
mov
push
cwtl
inc
jo
loop
sbb
add
xchg
ror
out
cltd
pop
push
hlt
pop
adc
fucom
and
adc
push
push
in
sbb
cmpsl
jle
cmpsb
inc
sub
test
sbb
jno
xchg
enter
jmp
mov
sub
ljmp
or
ss
lcall
mov
arpl
pushl
inc
mov
lds
in
leave
xor
mov
sti
loop
xor
mov
adc
ja
jecxz
loop
repnz
repnz
lods
pop
jns
add
aam
js
sbb
mov
cmpsb
dec
hlt
mov
and
loopne
pop
stc
sbbb
inc
hlt
dec
xor
xchg
imul
pop
ret
shlb
adc
jl
pop
shl
sub
repz
xor
jmp
mov
dec
fsubrl
xchg
pop
into
dec
pop
jne
popl
arpl
enter
pop
xchg
jp
cmp
mov
mov
mov
in
mov
ret
cmp
inc
je
je
jp
xchg
das
jb
lds
mov
pop
pop
in
inc
std
mov
std
or
sahf
xor
roll
out
loop
mov
insb
jb
adcb
jnp
lods
iret
scas
lds
push
xchg
mov
scas
mov
mov
or
outsl
nop
es
fstps
pop
popa
imul
lret
cmp
and
mov
mov
rcrl
xchg
cli
jo
mov
push
popf
lods
xor
push
jo
push
or
fcmove
out
je
loopne
sbb
mov
jmp
call
push
jo
cwtl
sub
mov
aad
fists
inc
lea
mov
mov
add
adcl
sbb
jb
pop
in
jl
scas
sub
mov
push
pop
loope
xchg
or
int
iret
scas
fs
cli
and
sbb
iret
fcoml
xor
push
cltd
inc
lods
xor
das
jp
insb
jne
sahf
dec
call
xchg
jmp
sub
rcl
mov
pop
gs
pop
cltd
add
movsb
stc
sbb
xor
sub
ret
call
and
xchg
cld
hlt
test
fs
lret
cmpl
mov
adc
cmc
xchg
pop
or
mov
mov
ja
mov
dec
int3
dec
lahf
adc
or
xchg
sub
xchg
sub
mov
jle
aas
rolb
insb
sbb
js
mov
dec
jo
fwait
jne
push
cmp
xchg
in
mov
sbb
mov
fidivl
add
jno
test
nop
add
cmp
adc
ljmp
les
clc
cmp
adc
negb
movsb
pop
loop
inc
pop
push
fcom
xor
mov
cmpsl
shl
sbb
mov
hlt
mov
or
cmp
call
sub
sahf
mov
cld
pusha
xor
sahf
mov
jo
stos
inc
mov
mov
jl
mov
pop
rol
stos
inc
outsl
sub
push
lds
aaa
filds
and
cmp
mov
jne
or
outsl
sbb
push
xchg
or
or
sub
xchg
std
sbb
pop
sahf
popl
push
pop
mov
adc
mov
cmpsl
test
mov
mov
insl
push
repz
test
mov
push
decb
mov
mov
lods
out
jp
add
sbb
gs
cmp
popa
and
mov
sbb
es
cmc
bound
dec
scas
cmp
paddd
sbb
insl
pop
rol
andl
push
mov
dec
je
pop
outsl
xchg
rclb
js
jne
loope
insb
push
shrl
inc
lret
pop
cmp
jnp
inc
jle
jecxz
or
mov
sbb
pop
stc
lock
outsl
push
push
cwtl
mov
sbb
jns
in
js
idivb
sub
adc
push
inc
dec
cmc
into
mov
or
xchg
mov
inc
xlat
and
sub
mov
cltd
and
shr
mov
insl
in
call
rclb
ljmp
out
xchg
scas
add
mov
jle
ret
aaa
aas
mov
pop
xchg
mov
lods
mov
dec
xchg
dec
mov
pop
in
nop
lea
push
dec
adcb
xchg
sti
pusha
and
jg
sub
cmp
jno
jno
push
adc
gs
es
fidivs
dec
in
leave
dec
inc
push
add
xor
imul
jg
push
and
pop
push
mov
data16
mov
das
push
into
mov
lds
out
adc
inc
mov
lods
mov
nop
mov
mov
call
jmp
fnsave
dec
pushf
push
test
dec
jne
xchg
push
loope
dec
sub
sbb
jns
dec
movl
rcrl
dec
push
stos
inc
mov
lahf
gs
mov
sbb
jp
push
mov
popa
loope
inc
pop
jo
nop
dec
cmp
mov
jmp
cli
push
cmp
jae
clc
dec
popf
sbb
rcll
jb
aaa
stc
xor
ret
popf
insb
jg
add
xor
add
pop
inc
and
ret
jnp
test
cmpsb
dec
into
and
xchg
loop
mov
cwtl
pop
jle
or
and
xchg
mov
jbe
in
outsl
dec
adc
push
and
das
jecxz
ret
adc
pop
jecxz
dec
test
in
jmp
jo
adc
or
inc
add
fisttps
add
pop
pop
push
lods
lds
mov
aam
jns
xchg
stc
dec
lahf
sub
lock
adc
add
push
lods
cmc
cli
xchg
sub
adc
pop
lret
cmp
arpl
fwait
je
pop
mov
push
daa
movb
aad
inc
lcall
dec
push
repnz
or
std
mov
adc
mov
icebp
sub
aas
dec
sub
push
enter
out
rolb
and
inc
ret
popf
mov
mov
pop
pand
xor
dec
movsl
arpl
roll
push
jbe
stos
xchg
insb
cmpsb
mov
xchg
xchg
testl
push
cmp
out
popf
inc
and
out
adc
jae
aam
jo
test
add
loopne
dec
adc
xchg
aaa
dec
xor
sbb
cmp
push
pop
push
xchg
scas
lret
xor
pop
jecxz
fldz
jae
movsb
push
ss
sbb
xor
or
pop
pop
js
add
adc
xor
cmpsl
mov
lret
or
in
imul
sahf
xorb
stos
lods
fistl
lock
stos
jnp
outsl
and
cmp
test
jge
push
mov
and
ficompl
add
or
xchg
mov
inc
scas
in
lods
ficompl
mov
pushf
in
clc
push
jmp
rcll
jnp
arpl
cltd
fcomps
shlb
jne
sub
insb
cmp
pop
jnp
in
fcompl
lds
dec
sahf
xor
push
push
ficomps
xchg
jnp
dec
and
ret
jl
pushf
push
adc
inc
mov
addl
scas
jmp
cmc
sbb
js
pop
sahf
fs
fwait
jle
and
inc
jecxz
int
loopne
mov
jg
repnz
popf
xor
mov
pop
movsl
les
xor
sub
jp
cmp
idivb
int
sub
das
dec
aam
dec
inc
inc
cld
dec
loopne
adc
repz
sub
add
or
mov
mov
or
push
test
inc
xlat
lret
stos
and
cmp
loopne
mov
or
xor
inc
in
push
jle
mov
das
sub
and
cmp
lods
loopne
mov
daa
mov
jg
outsl
mov
lea
andb
lea
dec
jns
or
sar
mov
dec
push
pop
cmp
jecxz
scas
int3
sahf
dec
sahf
and
data16
mov
out
mov
lret
rcrb
je
imul
ljmp
mov
adc
push
shl
mov
mov
ss
jp
das
movsb
xchg
lea
xchg
sahf
test
xchg
mov
xchg
mov
roll
leave
hlt
pop
xlat
mov
xor
xchg
push
dec
sub
jmp
clc
mov
mov
cmp
inc
pop
push
or
lock
iret
jbe
dec
dec
push
mov
dec
loope
mov
test
lret
or
xor
xor
jg
add
lahf
loopne
pop
test
int
xchg
cmpsb
movsb
inc
movsl
and
jns
jmp
mov
xchg
nop
jmp
or
push
incl
dec
lcall
xorl
mov
push
inc
fisubl
call
je
pop
repnz
ss
enter
popl
cltd
call
out
pop
xchg
add
bound
cmp
sub
lods
mov
lods
xchg
and
push
adc
aas
ljmp
aam
daa
jg
jp
mov
nop
out
push
sub
lock
aam
jns
pop
dec
mov
mov
ljmp
jae
mov
mov
jb
inc
lret
movsl
add
loopne
mov
mov
mov
pop
and
mov
adc
cmp
inc
sbb
mov
mov
mov
es
mov
cmp
out
adc
sub
inc
in
inc
sbb
mov
ficoml
fmuls
jl
xor
in
out
pop
repz
or
addb
jle
into
loopne
lea
shl
push
and
mov
sub
arpl
outsl
mov
out
lcall
add
rolb
mov
fldl
pop
sahf
ror
or
sub
adc
jns
repnz
std
mov
sub
ficoms
aam
mov
cmpsl
lods
fistps
dec
es
and
xor
negl
mov
add
push
adc
fsub
pop
cmpsl
push
fsubs
test
or
jle
cmp
loope
jecxz
cmp
mov
jne
fs
fidivs
and
xor
imull
add
iret
xchg
std
sub
sahf
adcl
push
insb
hlt
jp
jl
or
dec
mov
test
imul
add
pop
or
cmpb
jge
cmp
push
pop
cmp
es
inc
xor
adc
add
fildl
outsb
xor
mov
mov
loopne
lds
jl
jns,pt
jecxz
add
xor
jo
loope
push
hlt
fcmovnb
mov
outsb
push
leave
rcll
int
push
inc
adc
sub
mov
aad
jns
outsb
mov
decl
mov
mov
out
cmp
jg
dec
push
cwtl
or
push
jl
insl
xor
out
cs
xor
sub
push
fisttpll
push
cs
aaa
sahf
out
cmpb
mov
shl
sbb
jo
bound
cmp
and
and
mov
in
subl
outsl
daa
lret
cmpsb
xchg
je
push
jno
pop
push
sub
shll
mov
stos
xchg
push
or
jle
shrb
dec
xor
lret
ds
shll
mov
pop
xlat
mov
test
mov
enter
lods
jecxz
fdiv
sbb
adc
jno
cld
jae
cwtl
stc
xchg
das
lea
or
mov
rclb
xor
inc
mov
push
sti
push
mov
jecxz
push
adc
mov
pop
mov
jno
loop
sbb
dec
fstps
imul
jo
pop
mov
jmp
push
fwait
das
cmp
ret
cwtl
movsl
outsb
mov
in
mov
pop
ret
insl
xlat
xchg
mov
jg
mov
dec
mov
lret
sbb
ljmp
fildl
mov
movsl
rclb
je
mov
icebp
in
inc
mov
ret
pushf
jp
push
or
cmp
es
xchg
and
inc
adc
repnz
sbb
jge
push
and
and
mov
jns
out
sahf
push
data16
in
inc
test
sbb
jge
popf
adc
cmpsb
mov
mov
test
xchg
cmc
xor
mov
pop
aam
or
add
jne
sbb
ret
enter
pushf
dec
mov
dec
lret
fcos
and
jle
inc
sbb
orb
adc
lea
xchg
data16
add
add
push
andl
or
and
iret
jbe
push
cmc
dec
push
lods
sahf
or
mov
mov
add
loope
sub
cmc
cltd
adc
out
stos
pop
in
mov
add
or
mov
cmpl
out
jge
call
stc
xor
cmp
add
xchg
adc
jg
xchg
xor
in
shl
pop
loop
lods
and
or
push
xor
cmpsl
ljmp
inc
and
lret
lea
xor
lods
fwait
mov
in
add
inc
cmp
data16
lret
inc
adc
push
push
mov
xchg
cmp
push
mov
jo
jae
in
sbb
or
lock
dec
cmp
pop
stc
or
je
mov
xchg
hlt
sbb
repz
in
push
inc
shrb
icebp
jne
mov
sub
mov
ret
ss
subb
les
es
ss
imul
lahf
add
out
lahf
and
fcomp
bound
mov
xor
sbb
mov
mov
jns
out
dec
loop
adc
adc
cmp
mov
jmp
ss
rcrl
jnp
jne
jo
test
aas
sbb
dec
cmpsb
stc
cmp
hlt
xchg
dec
xlat
add
mov
xor
clc
pop
and
pop
shll
sbb
movsl
cmp
cmc
pusha
lods
xchg
xchg
push
aaa
xchg
insw
pop
stos
sub
dec
aam
jo
or
push
push
dec
dec
aaa
sbb
je
mov
mov
push
fsubs
sti
sub
fucom
cmp
arpl
jl
outsb
or
and
out
push
movsb
shrb
ret
test
mov
sahf
cltd
push
dec
adc
xor
fistpll
cli
es
cmpsb
mov
sbb
repnz
sbb
mov
insb
mov
sub
in
mov
xchg
push
sub
jp
scas
in
mov
xchg
dec
jne
mov
dec
inc
iret
jmp
and
call
enter
mov
jecxz
vzeroall
mov
inc
pop
jl
mov
lds
imul
popf
xchg
adc
sub
dec
movl
xchg
gs
je
cli
cmp
loop
sbb
lock
daa
dec
pop
xchg
test
push
std
cs
mov
shlb
push
das
clc
xor
xchg
test
adc
daa
inc
sub
adc
fsts
add
adc
adc
mov
xchg
in
outsl
jl
push
or
enter
xchg
mov
mov
jnp
outsl
iret
subb
jb
mov
loope
add
fidivrl
add
iret
cmpsl
lret
dec
pop
push
mov
lahf
mov
loop
or
scas
mov
cmp
mov
jmp
push
les
in
push
and
rcrl
pop
lret
scas
ret
rcll
stos
sbb
add
or
xchg
sbb
push
cmpsl
sti
sub
push
inc
cld
in
xchg
ja
cmp
push
push
loop
incl
lahf
loop
xor
and
jbe
cmp
mov
cmp
mov
int3
out
aaa
jb
adc
sahf
in
cmc
xchg
and
test
clc
shlb
cli
xchg
out
push
aaa
inc
cmp
in
ds
mov
fcmovbe
jmp
or
gs
repnz
shll
adc
mov
je
pop
xor
sub
je
pop
jbe
fildl
sub
shl
pop
into
rol
loopne
shll
dec
sbb
mov
xchg
mov
pop
add
cli
dec
lods
int
fcomps
rclb
and
loopne
fsub
sbb
out
add
fmull
pusha
rorl
lods
mov
scas
movsb
mov
and
inc
mov
lret
sub
mov
in
pop
out
fdivrl
movsl
adc
mov
pushf
sub
leave
jp
add
movsl
out
jno
test
xor
lahf
push
stos
push
inc
mov
out
push
xor
mov
ds
cwtl
mov
hlt
std
pop
fcompl
add
mov
fs
pop
or
out
iret
je
dec
jl
andb
loopne
imul
iret
and
test
add
add
bswap
repz
mov
hlt
sub
inc
rcll
lea
sub
adc
pop
pop
dec
mov
ljmp
aas
xor
xchg
xor
pop
add
int
xor
and
outsb
fidivl
fwait
jae
cmp
fcmovnbe
mov
jecxz
push
xor
and
push
pusha
addr16
pop
or
jl
cmpsl
ret
xor
ja
insl
insl
xchg
adc
rorb
cmp
xor
pushf
gs
out
test
xor
add
in
lds
cmpsb
les
lahf
enter
out
mov
xchg
add
fdivrs
jns
fcomps
cmp
cmpsl
inc
andl
mov
pop
and
lods
xor
xchg
adc
lods
push
jb
adc
mov
sub
lret
ja
or
pop
xor
out
inc
sahf
scas
sub
movsb
sub
inc
sub
dec
xchg
stos
xchg
jno
adc
mov
fs
push
sbb
push
and
adc
test
and
or
jmp
stos
ret
out
push
jg
addl
outsl
divb
aad
scas
es
mov
dec
push
fdiv
je
inc
sbb
enter
je
push
fwait
adc
cmp
sti
in
inc
xchg
loop
std
inc
scas
jno
mov
jne,pn
cmp
test
inc
bound
or
addr16
test
push
jb
jb
add
jno
sub
push
pop
inc
lcall
test
jo
mov
jae
jge
dec
mov
scas
push
mov
js
add
cwtl
ss
loop
mov
fcompl
repnz
jmp
cmp
jo
add
jp
ljmp
div
mov
rcr
sub
jge
mov
cs
ja
sub
sub
lock
sbb
cmpsl
xchg
repnz
inc
adc
jne
data16
mov
cmp
arpl
or
iret
mov
dec
xchg
les
imul
adc
fwait
add
jl
sub
sbb
cli
lock
mov
mov
adc
enter
sub
fldcw
imul
sub
xor
push
iret
xchg
mov
cmpsl
in
jp
jg
mov
push
les
inc
mov
stos
lret
push
lds
je
dec
ror
mov
fwait
imul
ret
pop
repz
and
sub
loope
add
cmp
jmp
scas
adc
scas
icebp
pop
movsl
hlt
xchg
sbb
add
dec
lds
out
cmp
sarb
inc
aad
nop
dec
dec
gs
or
jnp
aam
repnz
loope
cmpsl
cmp
sbb
out
sub
mov
pop
lcall
cs
rorb
aaa
test
xor
sub
in
xor
cmp
pop
rcrb
aas
je
js
and
dec
pushf
add
lds
fstps
push
cmp
sub
out
dec
stos
arpl
or
je
and
push
xchg
imul
mov
mov
std
call
je
lret
mov
and
xchg
cmp
in
insl
pop
jbe
inc
pop
testl
cmp
mov
xor
cld
inc
sub
in
int3
add
adc
sti
out
jns
fwait
add
outsl
jmp
jo
push
adc
push
std
sti
mov
jmp
mov
fldt
pop
xlat
out
jne
push
inc
add
int3
ss
les
and
repnz
scas
jbe
inc
lods
pop
mov
test
loope
sub
stos
mov
xor
sbb
test
inc
mov
mov
mov
clc
mov
and
mov
xor
lret
xor
pop
xor
adc
xor
movsl
aas
xchg
adc
dec
loop
mov
or
mov
xchg
lock
dec
vsqrtsd
push
outsb
adc
cmp
pop
adc
insl
or
or
ljmp
mov
pusha
xchg
ret
mov
push
mov
in
push
mov
cmp
sbb
push
mov
xlat
push
pop
rorl
repnz
mov
jmp
loopne
ret
sub
add
mov
stos
xor
push
shrb
adc
cwtl
cmpsl
mov
adc
dec
dec
jmp
and
mov
enter
into
cmc
ss
xchg
inc
dec
sbb
xchg
inc
ficoml
test
mov
fs
jg
mov
add
in
push
push
jo
pop
hlt
jae
jb
int
xlat
lods
xchg
pop
adc
xor
adc
inc
dec
pop
mov
aam
jecxz
dec
clc
mov
pop
xor
dec
xchg
add
jo
aas
cmp
or
scas
shl
pop
push
and
xchg
xchg
push
and
jge
aaa
cld
andb
sub
adc
mov
xor
test
popa
pop
xor
sbb
adc
pop
xchg
mov
out
fcoms
ss
rorb
xchg
push
dec
adc
aaa
cmp
jns
push
mov
out
or
jbe
xor
loop
ljmp
push
push
xchg
aam
int3
adc
int
cmp
out
insb
push
hlt
cli
into
mov
cmpsl
adc
ds
call
ret
scas
push
xlat
sar
call
shll
rcll
enter
cmp
ss
stos
out
jmp
aas
filds
and
cli
dec
pop
sbb
adc
mov
cmp
cmp
leave
mov
imul
mov
imul
popw
in
cmp
dec
cmc
add
add
pop
dec
insl
test
popf
adc
dec
pmuludq
js
inc
mov
adc
pop
jbe
sarl
cmpsl
or
cmp
enter
cld
dec
mov
push
push
xlat
sbb
push
stos
lock
sarl
xchg
rcl
cmp
call
movsb
xchg
pushf
jl
and
and
pop
fs
push
or
mov
sub
lock
add
sbbb
dec
add
xor
mov
mov
pop
fistps
rep
arpl
insl
dec
outsb
dec
push
cli
sbb
imul
bound
in
mov
dec
pop
jge
enter
fucomp
inc
sbb
push
loope
repz
inc
inc
ljmp
xchg
mov
xor
mov
pusha
int3
stc
lret
pop
xor
ljmp
pop
fidivrl
mov
out
adc
sub
cmp
mov
ficompl
cli
movsb
rorb
in
fwait
shlb
lock
sbb
addr16
leave
fisubl
into
imul
mov
out
mov
sub
icebp
pop
jnp
ss
push
jns
nop
dec
mov
mov
cmp
test
out
stos
xor
jno
inc
xchg
sahf
dec
add
jns
mov
push
movsb
ret
mov
or
out
mov
sti
pop
psllw
aas
dec
sbb
cmp
jl
popf
cmpsb
shrb
mov
inc
test
mov
test
in
mov
in
lods
fwait
jo
imul
push
ret
inc
out
mov
mov
imul
js
pushf
mov
js
inc
push
jb
and
push
mov
jl
adc
jns
xor
scas
adc
in
dec
and
test
add
cmp
push
add
les
pop
xchg
std
out
dec
mov
jbe
adcl
fisubrl
pop
adc
ja
inc
stos
in
lret
ret
jns
loopne
and
pushf
std
fldenv
loope
