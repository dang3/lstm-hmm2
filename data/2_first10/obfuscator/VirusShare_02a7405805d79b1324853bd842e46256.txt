dec
enter
jl
and
sbb
decl
sti
pop
xchg
rorl
pop
addr16
out
lret
xchg
sub
dec
daa
clc
ja
repz
mov
pop
or
xchg
sub
cmp
test
and
lret
sub
lods
cltd
jns
inc
std
adc
sbb
adc
cwtl
xchg
push
and
cmp
or
xchg
ficomps
or
mov
ret
int
mov
inc
mov
pushf
fiadds
lods
mov
jle
cltd
mov
setnp
loope
addr16
aas
movsb
adc
adc
bswap
pop
ret
xchg
mov
sub
push
das
jmp
push
arpl
or
and
sarb
psubd
push
and
test
mov
sahf
ss
push
sarl
cmp
lahf
jmp
xchg
sbb
int
push
scas
add
js
aam
ja
pop
lret
sbb
xchg
rol
sbb
decl
pop
xor
sbb
je
lahf
xchg
jne
nop
loopne
es
dec
mov
test
push
fs
outsl
inc
and
int
cmp
xchg
and
push
xor
jmp
es
fisttpll
pop
mov
jmp
sti
sarb
fbstp
std
xchg
cltd
stc
xchg
push
and
in
dec
call
xor
je
negb
push
push
cmpsl
mov
and
sahf
mov
adcb
and
jg
fildl
aas
movsl
mov
fs
fs
push
cld
or
out
push
inc
sub
adc
pop
adc
xor
roll
pop
pop
sbb
adc
cmpsb
dec
aam
imul
dec
mov
push
pop
add
inc
or
sub
movsl
int
mov
pop
adc
adc
mov
pop
and
inc
mov
push
imul
hlt
inc
hlt
mov
mov
and
jne
add
mov
je
xchg
pop
les
addr16
push
adc
jmp
clc
adc
mov
mov
inc
sub
or
add
rorb
int
sbb
mov
xor
inc
adc
into
mov
ljmp
mov
mov
push
popf
inc
jns
or
cmp
cmc
lds
mov
popa
pop
sub
sub
leave
stc
fnstenv
cmp
pop
xchg
mov
ss
loopne
js
lret
push
dec
xor
jo
scas
mov
lret
pop
xor
adc
push
leave
cmp
cmpsl
testb
xchg
mov
adc
ljmp
xor
in
adc
aas
pop
add
lea
cmpsl
or
mov
add
loopne
lcall
out
arpl
mov
lods
lods
sub
and
icebp
jp
xor
sbb
or
adc
jl
pop
lahf
mov
into
movsb
es
and
imul
lea
sub
mov
nop
repz
imul
sahf
mov
xchg
mov
jge
pop
out
in
jne
out
or
lds
dec
add
aaa
adc
scas
xor
mov
pop
push
outsl
hlt
push
dec
sub
dec
dec
dec
adc
mov
out
icebp
leave
dec
jl
movsb
test
lahf
inc
add
clc
pop
inc
add
cmc
mov
push
mov
xchg
mov
jbe
mov
mov
lods
iret
jecxz
add
adc
or
jl
pop
or
xor
xchg
add
adc
ljmp
and
mov
inc
mov
push
and
fdiv
cmp
ja
push
cwtl
jmp
stos
addr16
lret
std
push
das
adc
das
mov
push
sbb
xchg
xor
cltd
or
ss
and
data16
pop
cwtl
lret
das
xchg
clc
xchg
add
jmp
cwtl
mov
or
pusha
aas
add
arpl
pop
jmp
loop
jp
out
pusha
xchg
cmp
ror
xchg
leave
test
dec
jb
cld
push
out
ret
cs
iret
xor
fisubrs
gs
sbb
repnz
mov
inc
mov
aas
clc
and
sbbl
movsb
addb
xor
sbb
ret
das
sbb
sbb
xchg
rcll
pop
in
cwtl
pmaddwd
mov
repnz
fnstenv
lahf
je
fs
lcall
jne
outsb
xlat
out
adc
mov
cwtl
jns
ja
dec
mov
int
mov
mov
xchg
icebp
jbe
jb
mov
aam
add
push
rcll
in
inc
jnp
sahf
mov
xchg
std
jbe
out
loopne
mov
fcom
test
outsl
jae
push
std
sub
ja
imul
hlt
mov
jne
js
incb
add
imul
pop
mov
push
test
push
xor
into
mov
arpl
cmp
daa
xchg
sbb
je
xchg
es
dec
add
add
pop
mov
and
sub
push
dec
arpl
adc
sbbl
aad
out
stos
push
data16
cwtl
ret
jne
repnz
mov
ret
jno
or
outsl
imul
movsl
dec
fcmove
out
mov
fs
or
and
nop
int
mov
fsts
inc
and
and
js
cmp
inc
les
fists
test
mov
cmp
ljmp
inc
cltd
in
jmp
jge
imul
daa
xchg
aam
insb
pushf
jne
xor
repnz
push
push
rclb
jne
pop
lcall
test
test
out
pusha
test
in
cmp
jg
fidivrl
ret
hlt
xchg
jno
cmp
xor
xor
cmp
mov
pop
cmp
and
ss
push
mov
repz
je
cmpsl
xchg
mov
cli
pop
lret
jo
rcrb
add
adc
inc
cld
clc
cltd
test
in
lret
fwait
cmp
adc
arpl
add
adc
inc
dec
dec
movsb
test
jns
xor
enter
sub
sbb
lea
popa
mov
push
sarl
jmp
jno
pop
add
sbb
mov
movsl
sbb
call
js
or
enter
mov
inc
in
es
decl
in
cwtl
data16
or
xorl
jle
cltd
inc
ds
les
jno
dec
sbb
test
sub
out
in
inc
mov
xchg
add
scas
addr16
mov
fnstsw
mov
rcll
mov
loopne
cmp
lcall
dec
sub
popf
pushf
icebp
mov
and
popf
test
xchg
or
inc
shlb
push
or
pop
adc
pushf
or
sti
clc
pop
jl
and
fbld
rcrl
out
sub
push
enter
mov
push
das
dec
aad
data16
mov
ljmp
mov
loop
outsl
push
cmpsb
outsl
inc
push
aad
jp
hlt
imul
stos
outsl
mov
in
addr16
inc
mov
sbb
mov
mov
fsub
decb
shr
mov
push
pop
adc
and
jle
imul
mov
sahf
push
add
stc
sub
push
out
or
out
sbb
sub
pop
jle
in
nop
jl
dec
dec
jne
pop
push
jmp
out
sbb
jp
sbb
stc
outsl
mov
inc
cld
in
mov
loop
sbb
lds
mov
sub
pop
xchg
pop
and
jae
or
hlt
xchg
xchg
insl
xor
sbb
sbb
call
into
or
fsubrl
mov
adc
dec
arpl
test
shl
adc
fwait
or
cmp
test
mov
leave
jle
mov
cmp
les
mov
jle
imulb
outsl
xor
ja
scas
rcrl
pop
movsl
jecxz
mov
in
lock
imul
or
xchg
push
mov
dec
mov
dec
jo
rorl
rep
or
and
js
imul
jp
cltd
rcll
int
int
ret
pop
xchg
mov
adc
lcall
lods
imul
jl
ficompl
jle
dec
dec
clc
jo
ja
mov
and
pop
xor
mov
in
inc
sbbb
jge
jb
lods
lods
mov
pop
movsl
lds
movsl
fcoms
leave
loopne
mov
lds
sbb
dec
push
adc
int
xchg
shll
loopne
jo
mulb
adcl
lea
mov
fxam
and
push
shll
sahf
sub
add
dec
rorl
jne
push
mov
outsl
enter
mov
sbbb
into
testb
mov
bound
stos
addr16
sbb
mov
ja
lds
insl
sub
or
icebp
jbe
and
jns
xor
jns
insl
mov
xor
dec
rcrl
fmuls
sub
and
cwtl
xchg
bound
notb
scas
xor
insb
mov
cltd
pusha
iret
jl
xor
or
push
test
inc
or
aam
mov
or
sbb
jne
das
jmp
mov
aas
and
and
mov
xchg
jno
mov
mov
adc
hlt
enter
sbb
mov
dec
add
push
and
lahf
mov
outsl
arpl
pushf
push
push
mov
sub
rclb
rcl
and
shl
insl
or
fwait
jl
fiaddl
dec
cmpsb
call
fldcw
jbe
inc
pop
dec
xor
lea
mov
and
lock
sbb
cltd
loope,pn
shll
sub
movsb
test
add
cwtl
in
in
cmpsl
jns
pop
sub
fwait
arpl
sbb
xchg
cmp
ret
xchg
mov
mov
daa
repnz
jb
mov
inc
jbe
push
arpl
push
mov
frstor
lods
jp
inc
iret
xor
lds
lods
push
and
or
js
cld
bound
outsb
dec
cmp
sbb
adc
xor
pop
in
inc
stos
mov
orl
imul
aad
and
or
push
data16
test
loop
cmc
loopne
jl
push
out
daa
in
mov
loope
fcmovu
out
xchg
lea
je
jle
cmp
mov
cmpsl
sahf
xchg
enter
iret
or
pushf
insw
inc
mov
lock
xchg
xor
add
leave
mov
imul
sti
dec
dec
jp
dec
jl
sarb
out
cmp
int
out
mov
inc
xlat
rclb
push
dec
pop
shrb
sbb
shlb
mov
adc
xchg
sarl
into
rol
mov
jno
push
mov
jecxz
pop
ja
sbb
imul
aam
push
hlt
mov
fdivrl
in
lock
push
pop
cwtl
stos
mov
inc
fs
and
and
andb
popa
and
inc
pop
adc
jns
repnz
push
or
stc
push
jl
or
popa
pop
rcrb
fnstcw
and
fmull
and
pop
jno
daa
es
mov
xchg
add
fs
sbb
cmpsb
shrl
dec
mov
ja
or
dec
loop
or
jge
arpl
in
es
mov
ss
adc
lods
clc
jmp
xor
test
or
add
mov
adc
cmp
push
xor
sbb
xchg
cmp
lret
stc
jne
cmp
pop
outsb
pop
mov
add
sub
sub
pop
std
mov
lcall
mov
out
into
mov
jmp
pop
sbb
rorb
ret
or
dec
push
push
movl
lahf
addr16
xor
push
pop
stc
add
inc
daa
mov
jmp
add
push
cmp
das
adcb
sbb
add
mov
sub
cmp
call
lret
sub
mov
loop
ret
loope
xchg
push
mov
or
rol
xchg
int3
sarb
insb
pop
test
and
jae
or
cmpsl
repnz
fidivs
xchg
movsl
fiaddl
out
ds
ljmp
aas
and
mov
xchg
dec
push
xchg
lods
pushf
into
push
mov
arpl
and
push
in
mov
movsl
adc
out
ja
nop
pop
push
inc
cmpsl
lods
repnz
divl
insb
add
cmc
int3
sbb
mov
cltd
push
leave
sub
lahf
int3
or
test
add
cltd
test
aad
add
push
jl
popa
jnp
test
or
cmp
scas
jbe
mov
in
icebp
lahf
stos
jo
int
add
jns
sarb
faddl
adc
sbb
jp
inc
mov
in
out
mov
pop
push
negb
aam
out
and
shlb
adc
aas
or
mov
sub
lret
ja
ss
xchg
cvtps2pd
jg
enter
loop
ss
popf
fs
adc
push
stos
or
push
and
mov
dec
mov
inc
pop
push
add
dec
ud0
xchg
ljmp
mov
xchg
push
icebp
das
sbb
xor
es
nop
shl
jne
mov
idivl
mov
cmp
pusha
les
push
shr
push
pop
popa
mov
jno
cmp
js
int3
jno
into
push
cmp
mov
lahf
fwait
aam
pop
loop
pop
cmc
sub
stc
mov
je
add
push
and
sub
test
stos
jns
jle
test
sbb
pop
in
xchg
mov
dec
adc
scas
sub
add
test
pushf
dec
xorb
sbb
add
sbb
adc
cmp
imul
sti
dec
nop
sbb
scas
ret
int3
cmp
hlt
icebp
jle
in
jns
icebp
mov
sahf
inc
mov
adc
push
mov
pop
imul
pop
mov
repz
dec
pop
rclb
outsb
mov
mov
stc
add
movsb
lock
subb
setne
insl
inc
je
cld
stos
mov
stos
xchg
loop
or
test
pop
pusha
push
out
xor
jmp
jl
mov
and
shr
inc
lret
jb
popf
jl
or
dec
das
mov
data16
jns
sbb
jle
aaa
scas
jne
insl
mov
mov
mov
and
pop
cmp
and
jno
xor
adc
mov
cmp
int3
xchg
pop
push
hlt
test
fistpl
mov
rclb
imulb
jbe
mov
mov
mov
insb
adc
popa
gs
dec
loopne
int
pop
subps
enter
js
leave
sbb
mov
xlat
cmp
jbe
and
xchg
push
cmp
bound
scas
inc
or
adc
out
mov
adc
xchg
in
cmpsb
mulb
bound
into
xchg
stos
xlat
jge
popa
sub
stos
fwait
inc
dec
repz
mov
add
mov
add
pop
sbb
cs
fsubrs
lret
call
stos
scas
add
aas
push
dec
add
xor
sub
adc
jg
jp
imul
mov
xchg
scas
jl
mov
iret
into
cmp
adc
push
jle
dec
std
add
and
inc
push
mov
scas
ja
scas
push
push
xchg
cs
push
dec
cmpsl
testb
enter
jle
in
sbb
fldcw
in
sbb
cli
or
cmpsb
cvtpi2ps
sub
add
or
mov
insb
mov
push
sub
fwait
mov
cmp
sbb
hlt
enter
jae
pop
cmpsl
cli
push
scas
mov
dec
push
fadds
sub
mov
inc
sbb
int
jge
mov
imul
ljmp
add
stos
add
cld
rdtsc
cmp
idivb
imul
js
test
daa
inc
add
ss
cld
mov
inc
inc
sub
xor
cmpsl
repz
dec
cmp
jne
pop
fwait
je
xor
push
cmpsb
fadds
into
push
and
xchg
inc
testb
pop
push
pop
jae
xchg
sbb
xchg
vcvtpd2ps
adc
fisttpll
pop
push
pop
inc
mov
fstpt
sbb
sahf
insb
and
adc
decb
mov
js
mov
inc
ror
out
jg
or
gs
sub
pop
mov
xor
mov
movsl
fadds
xchg
mov
lea
scas
inc
lcall
pop
jne
lret
mov
cli
imul
add
pop
rclb
out
imul
cwtl
sahf
fistpll
cmovbe
insl
pop
ficoml
mov
mov
adc
iret
std
sub
inc
clc
stos
lock
push
xor
jne
jno
xor
mov
mov
lea
xchg
cmpl
arpl
dec
mov
loope
xor
mov
sbb
out
cmp
popa
mov
sub
stc
dec
adcb
les
jno
test
adc
adc
jo
or
ret
jmp
mov
cli
sahf
popa
mov
cmpb
mov
nop
push
lahf
push
mov
sarl
into
in
xchg
int
shll
imul
jge
cmc
call
in
and
sub
stos
mov
sti
sbb
inc
sub
sbb
ret
sti
mov
mov
sub
mov
sub
sbb
mov
mov
sahf
stc
ror
xchg
xor
jae
es
pop
pushf
lock
xor
mov
clc
jns
dec
jl
or
dec
and
pop
iret
mov
xor
mov
outsl
add
inc
push
les
add
cmp
cmpsl
out
mov
xlat
pop
sti
aad
xchg
std
xchg
adc
sahf
mov
lds
xchg
lea
xor
cmp
ljmp
push
cmpsl
insl
pop
int3
xchg
pop
and
push
insb
inc
dec
icebp
mov
call
xchg
jmp
fs
outsb
outsb
pop
aam
adc
dec
mov
cli
das
lds
into
xor
cwtl
push
inc
lcall
pusha
int3
fstpl
popf
mov
shlb
inc
jb
xor
jge
mov
shlb
stos
fbstp
shll
xchg
into
std
js
add
test
cmc
mov
iret
gs
test
mov
pushf
cld
push
lds
or
mov
shlb
int3
pop
ja
out
mov
sbb
jne
mov
cmpsl
ljmp
sbb
icebp
sub
scas
incl
aad
add
pop
jecxz
sbb
cmp
scas
into
sbb
stc
out
jnp
push
or
lods
enter
sub
inc
jg
dec
or
or
dec
jae
stc
jne
ret
shrl
mov
clc
gs
jl
lods
jmp
movsb
pop
adc
mov
stc
or
inc
and
ret
enter
ljmp
inc
ja
push
mov
fcompl
cmc
enter
cmp
jne
cmovs
push
and
mov
inc
addl
sub
enter
insl
cmp
ss
std
div
ljmp
movsl
mov
popf
push
mov
and
movsl
mov
addb
bound
pop
scas
mov
into
inc
push
lea
inc
push
je
js
loop
xchg
mov
sub
outsb
shll
je
lea
mov
mov
pop
cmpsl
pop
cli
push
adc
mov
repz
xchg
and
push
insl
repnz
int3
xchg
pop
ds
sbb
ret
or
mulb
les
push
scas
xchg
popl
scas
mov
jb
mov
aaa
scas
inc
lret
mov
jno
std
jnp
inc
xor
jo
imul
mov
in
sub
lret
cmc
push
hlt
adc
xchg
adc
jmp
sub
lea
cltd
mov
sbb
in
xchg
subl
sub
movsb
push
mov
or
pop
sbb
pusha
xchg
xor
push
jle
inc
cmpsb
lcall
andb
sub
cmp
sub
push
mov
arpl
and
lahf
int3
frstor
cmp
sbb
imul
mov
out
rorb
cwtl
icebp
rol
and
dec
dec
add
cmp
bnd
ss
loop
scas
mov
pop
cmp
imul
mov
dec
int3
xor
xor
imul
xchg
inc
mov
mov
adc
int3
xor
andl
and
lahf
mov
cs
daa
xchg
fistl
lret
xor
movsl
mov
int3
pop
cli
xorl
sbb
rcr
imul
push
sbb
iret
dec
ficompl
loope
stos
push
std
push
cmovne
mov
mov
js
nop
sbb
adc
into
jb
cwtl
mov
push
pop
add
mov
push
and
cmpsb
aad
push
aaa
xchg
sbb
mov
repz
push
pop
mov
cli
xchg
lret
mov
icebp
mov
pop
iret
pop
pop
xchg
xchg
sub
sub
fcmovnu
sub
lods
xchg
adc
sbb
dec
lret
sub
jle
xchg
addb
dec
ds
push
jle
or
clc
in
movsl
xchg
das
stos
cld
or
push
mov
andl
popa
fs
inc
and
mov
xor
xlat
lret
ret
inc
add
out
jle
les
adc
cmp
adc
gs
add
mov
fstpt
fiaddl
sbb
cwtl
adc
jae
in
or
push
inc
pop
in
xor
mov
dec
push
addl
and
imul
ds
cli
mov
xchg
into
and
cmp
jle
mov
push
xor
pop
fidivs
adc
dec
insb
imul
roll
or
lods
sbb
popw
insb
into
sbb
pushf
adc
clc
dec
xchg
push
and
das
clc
adc
pop
xor
outsb
bound
pop
push
pop
mov
lret
shlb
push
imul
mov
fdivp
test
inc
das
sbb
jae
lcall
fldz
loope
aaa
outsl
push
out
in
jge
rcrl
fmul
xchg
adcl
dec
dec
imul
in
repz
iret
or
sub
adc
cmp
pop
adc
in
adc
add
loope
xor
shll
dec
scas
adc
or
fdiv
sbb
js
iret
pop
jle
enter
mov
push
stos
sbb
push
orl
jno
faddl
subb
ret
imul
lods
out
lcallw
pusha
shlb
enter
pop
mov
push
xlat
xor
es
hlt
lds
sub
movsb
inc
aam
adcl
or
or
std
ret
cmp
inc
cmc
out
mov
mov
test
inc
fisubs
or
test
dec
xchg
adc
sub
in
and
xchg
fsubrs
push
mov
hlt
xlat
rorl
repnz
jnp
ret
insb
jle
jne
xchg
xchg
lahf
pop
xchg
lods
ss
repnz
mov
push
add
mov
andb
sub
dec
and
fwait
xchg
lock
call
rolb
jne
cmpsb
push
repz
jle
aaa
push
enter
out
xchg
ret
andl
insb
mov
adc
inc
xchg
sti
stos
add
adc
aas
clc
insb
dec
je
rclb
and
add
fs
mov
ret
test
pop
push
insb
out
cmpsb
mov
out
imulb
outsl
sub
add
lcall
sub
push
xchg
mov
jl
cvtpi2ps
sub
sbb
and
in
or
shr
outsl
fistpl
mov
ret
mov
inc
xor
test
out
mov
lea
mov
fwait
push
ror
mov
lret
fcmovb
aad
mov
repz
pop
rcr
nop
and
in
stos
dec
or
mov
mov
lea
jno
xchg
out
mov
dec
dec
cmp
adc
lcall
mov
jnp
scas
dec
aas
loope
and
ds
fdivp
pusha
jecxz
je
int3
je
sub
cmp
sub
mull
jge
sti
sbb
dec
gs
mov
xor
jo
pop
xchg
fsubrp
jge
sub
or
jne,pt
lcall
or
mov
sti
pusha
cli
push
adc
jo
pop
pusha
call
mov
mov
adc
cmc
sarb
pusha
dec
std
inc
pushf
adc
mov
xor
loopne
inc
dec
push
loop
jns
mov
push
and
cmp
fistl
sub
lds
jecxz
addr16
mov
test
sbb
jmp
jo
mov
and
lds
and
inc
jno
sbb
push
sahf
out
mov
push
mov
das
mov
sub
inc
pop
sub
push
loopne
stc
les
cmp
lods
sbb
jae
or
push
ds
loop
add
fwait
clc
pop
imul
push
inc
lret
ficomps
into
nop
cmpsb
nop
pop
push
pop
xor
push
sub
scas
cmpsl
cs
dec
out
lret
or
stc
es
mov
loop
add
dec
push
leave
pop
addr16
out
sub
rorb
sub
adc
jne
jno
or
mov
cs
cmp
in
ja
sti
or
mov
pop
push
fsub
add
fidivrl
sub
clc
sbb
adc
adc
dec
push
and
call
cmp
xor
out
adc
loope
pop
add
cmp
push
add
outsl
push
out
jbe
cmpsl
push
push
enter
imul
xorl
adc
inc
pop
imul
pop
enter
inc
inc
aad
cwtl
and
sub
mov
in
mov
dec
and
inc
aaa
clc
dec
pop
gs
adc
jmp
jb
add
popf
and
and
mov
adc
std
test
imulb
lods
cmc
or
imul
into
xor
add
outsl
cmp
mov
lret
inc
lock
popa
jle
pushf
adc
mov
fwait
into
push
clc
data16
dec
push
out
pop
jno
in
adc
push
mull
test
and
push
mov
or
stos
cmpsb
mov
or
jmp
sahf
in
clc
lea
jb
jno
outsb
jecxz
testl
jge
push
push
sbb
iret
leave
inc
cmc
inc
jb
ret
test
loopne
jnp
fxch
pop
adc
and
roll
scas
stos
fdivrs
shl
and
inc
mov
fwait
push
mov
push
ljmp
cmp
in
decb
or
cltd
xchg
mov
insb
dec
xor
push
add
inc
push
lahf
test
fildl
mov
mov
mov
insb
mov
leave
jo
sti
mov
es
insl
cmp
loop
pushf
pop
sbb
addr16
and
fs
cli
sti
sub
cmp
jl
cld
jl
nop
jae
ss
dec
mov
add
xor
jae
push
add
out
and
imul
inc
int3
int3
jnp
jnp
xlat
inc
lods
mov
pop
sbb
and
push
test
sbb
lcall
fwait
std
out
stos
cmc
xchg
xchg
shrb
adcl
sbb
jmp
aaa
jle
mov
stos
inc
gs
aad
std
ss
shlb
mov
mov
bnd
out
arpl
mov
adc
xor
sub
loope
fucomip
add
fwait
les
in
add
sbb
sub
pop
dec
movl
cmpsb
and
cmpsl
or
jns
cwtl
push
popa
cld
out
imul
lea
dec
pop
std
push
xchg
mov
mov
jno
cmp
addr16
lahf
sahf
xor
out
daa
bound
jns
dec
sbb
xlat
fisubl
cmp
mov
or
mov
sub
es
aam
jo
pop
jmp
ds
sbb
mov
mov
cmpsl
or
sbb
ret
mov
lret
daa
nop
fisubrl
jo
cmp
jl
test
push
inc
sbb
jne
push
xlat
popl
add
std
outsl
dec
xchg
pop
sbb
pop
fldenv
xor
out
in
jb
js
call
enter
mov
cmpsb
mov
rolb
dec
xchg
scas
int
inc
mov
popf
jo
mov
add
or
lea
or
gs
int3
cltd
pop
lods
shr
push
or
jmp
mov
shll
mov
shl
in
push
cld
or
insl
inc
scas
mov
cld
stc
cmc
sbb
test
addr16
push
dec
in
cmp
dec
pop
mov
or
dec
push
jle
pop
and
sub
loopne
leave
add
mov
adc
outsl
jo
roll
and
jae
cmp
sbb
push
inc
ret
mov
pushf
out
mov
pop
mov
mov
ss
adc
sbb
lret
mov
adc
pop
fsubr
mov
sti
pop
adc
lds
into
test
jge
in
rcll
xor
fldl
dec
aam
mov
cmp
mov
jmp
add
inc
sub
test
mov
rcrl
sti
jno
mov
incb
sub
sub
xor
push
out
mov
xchg
and
jnp
cmpsb
mov
scas
fs
mov
inc
int3
and
pushf
jbe
mov
leave
push
les
movsl
mov
dec
pop
mov
inc
mov
iret
jl
xor
test
and
leave
adc
inc
insb
add
xchg
adc
jb
add
cmc
jl
movsb
fldcw
cltd
in
push
pop
call
push
cmpsb
xchg
adc
rolb
adc
adc
fdivrs
fdivrl
inc
cltd
sub
fadd
stc
and
outsb
dec
inc
lock
arpl
arpl
test
and
mov
rclb
mov
out
xchg
add
sti
and
adc
loop
lds
xchg
mov
sbb
dec
loop
jg
mov
cwtl
xchg
push
add
push
cmp
jns
aaa
jge
xchg
adc
cmpsb
and
je
out
cmc
fcomps
xchg
pop
in
inc
sbb
pop
xor
and
mov
sub
dec
dec
cmc
aam
jne
cwtl
jmp
sbb
pop
xchg
call
push
adc
cmp
push
std
pop
or
jl
fsubrl
testl
jge
dec
mov
and
mov
inc
pop
cmpb
imulb
mov
pusha
test
enter
sub
les
sub
outsb
xchg
leave
xor
dec
inc
fdiv
pop
cmp
int3
mov
mov
lret
jbe
xchg
rcll
lods
or
sub
add
xchg
or
inc
lods
and
dec
and
sub
pop
jnp
jne
sbb
outsb
or
cld
fidivs
insb
nop
pop
pop
pop
fdiv
sbb
pop
in
ds
scas
mov
mov
rcl
mov
mov
imul
pushf
sub
fstps
mov
sbb
lea
mov
xchg
jbe
mov
add
xchg
iret
lods
xchg
sbb
mov
fldcw
arpl
out
jle
scas
adc
adc
xchg
adc
testl
mov
mov
push
repz
xchg
sbb
fucom
adc
out
scas
mov
test
pop
aam
imul
les
lock
rcrb
push
jne
and
pop
xor
add
sub
dec
jp
cmp
lock
jecxz
cvtps2pi
add
rolb
lahf
stos
int
xchg
icebp
cmp
outsl
lods
push
je
fidivl
sub
inc
iret
xchg
stos
jo
add
outsl
fdivrs
push
inc
leave
or
adc
into
dec
testl
fsubrs
arpl
jno
mov
out
adc
push
xor
sub
mov
mov
addr16
adc
push
out
xor
sbb
sub
test
jge
cmc
jle
push
sbb
outsl
xchg
and
jp
inc
fldt
cs
adc
mov
faddl
dec
jbe
pop
hlt
sarl
es
inc
lahf
mov
out
in
push
mov
sysenter
sub
xchg
outsl
std
dec
xor
jne
pop
mov
fisttpl
int3
adc
jp
data16
lods
dec
inc
dec
lea
and
adc
daa
inc
cmp
fistpl
imul
inc
insl
sbb
xor
sbb
inc
ja
int
imul
mov
aad
insl
and
and
inc
pop
pop
jae
outsb
lock
sub
in
roll
xor
dec
xlat
shll
jo
push
push
push
jb
xchg
outsb
in
and
push
loop
mov
and
outsl
nop
jg
mov
mov
mov
push
into
int3
lcall
sub
mov
xor
shll
fidivrl
push
outsb
out
xor
arpl
aas
dec
loope
pop
lret
jge
fs
xor
scas
shlb
gs
add
fistl
dec
imul
cwtl
fisttpl
std
add
adc
cmpsl
popa
sub
mov
scas
jno
push
inc
mov
in
std
pop
mov
cmpl
pop
mov
in
rorl
sub
adc
xchg
inc
mov
sbb
jp
pop
sbb
ds
shlb
lret
jle
sub
iret
jecxz
inc
decb
push
leave
das
jbe
cmp
xchg
mov
insl
stos
mov
and
pop
fisttpll
loop
imul
inc
int3
cmc
cmpb
ds
push
ds
dec
sbb
dec
push
sub
lahf
int
mov
mov
and
gs
repnz
push
xor
call
popf
icebp
dec
jbe
sbb
lret
mov
push
lods
mov
sti
jo
outsl
jb
test
mov
push
in
mov
cmp
sbb
add
lea
mov
push
push
xchg
mov
push
pop
mov
push
add
add
sarb
stc
inc
sbb
sbb
fidivrl
add
scas
popa
pusha
or
dec
inc
xchg
in
dec
push
sub
cld
jmp
hlt
cmp
mov
mov
lcall
xor
in
mov
push
add
jl
stos
lock
rolb
jle
ja
and
mov
inc
mov
pushf
orb
fs
jg
ret
stc
push
dec
push
xor
es
shlb
ret
inc
and
xchg
mov
sub
xor
pop
push
mov
es
adc
out
cltd
cld
pop
xchg
daa
sub
jae
js
push
jnp
popa
push
leave
arpl
push
or
push
and
add
imul
cwtl
arpl
int3
flds
xchg
or
mov
mov
mov
jmp
add
xchg
cmp
int3
and
nop
and
fisubrs
aaa
popa
cltd
xchg
out
lcall
mov
out
fucompp
lods
mov
js
dec
adc
les
imul
push
xor
sahf
or
add
dec
inc
fsubrl
dec
mov
ret
lcall
dec
mov
jae
jbe
cld
pop
loopne
call
movsl
push
xorl
scas
dec
in
adc
cwtl
cs
lahf
mov
dec
jl
xchg
call
push
mov
leave
je
jmp
lea
or
lahf
in
push
sti
lods
inc
and
xchg
cmp
inc
or
cwtl
insl
iret
bound
test
or
mov
ds
ss
or
mov
add
mov
nop
arpl
xor
jmp
mov
xor
repnz
loop
or
shll
arpl
xchg
inc
dec
sub
sahf
pushf
adc
cmp
lret
idiv
mov
mov
sbb
add
popf
adc
xchg
scas
jle
jne
mov
loope
in
sub
sahf
mov
add
mov
xchg
lods
xor
pop
push
jbe
pop
lock
fistl
out
push
mov
filds
lahf
jecxz
mov
test
outsb
xlat
cmp
rol
inc
aaa
nop
mov
insl
std
pop
add
mov
jg
inc
fsubrs
nop
out
adc
add
dec
fldln2
mov
jp
cmc
movsb
nop
or
adcl
xlat
cli
aam
jmp
push
push
out
jmp
cmpsl
or
nop
ret
scas
dec
aad
rep
jbe
stos
mov
ds
cmpsl
or
aas
in
lds
xor
adc
jo
and
hlt
cltd
fnsave
stos
mov
std
adc
movsb
movsb
insb
rorb
inc
addr16
xchg
inc
xchg
push
pop
ret
mov
xor
pop
rclb
mov
cwtl
mov
out
mov
cltd
sbb
push
push
mov
xlat
mov
cmpl
adc
ret
andw
or
fistl
mov
mov
movsb
and
dec
int3
lret
adc
cmp
push
clc
add
jp
or
and
jo
gs
das
dec
loope
push
stos
jmp
stos
xchg
adc
pop
popa
add
ljmp
mov
push
idivb
pusha
divb
outsb
inc
movsl
sbb
lods
mov
jnp
out
outsb
imulb
jecxz
add
enter
bound
out
hlt
mov
push
pop
fldl
lods
popf
cmp
adc
iret
adc
arpl
mov
je
cmp
adc
out
mov
pop
adc
jno
or
cwtl
xor
imul
mov
into
mov
scas
cmp
pop
xchg
mov
hlt
aad
push
cld
stos
mov
xchg
jne
xchg
push
add
push
out
xchg
icebp
into
mov
outsb
mov
ds
lea
push
jecxz
jmp
lea
xchg
mov
and
mov
cwtl
psubw
repnz
lods
mov
mov
push
ja
cmp
or
jmp
ret
mov
imul
lods
xlat
inc
cld
mull
shll
je
das
jnp
and
sbb
pop
stc
jecxz
fistpll
sub
xor
fs
adc
jg
gs
repz
iret
xchg
or
mov
out
cmpl
inc
ja
aad
lea
in
xchg
cmp
cmp
cmp
mov
test
imul
ljmp
cmp
xchg
mov
scas
pop
mov
xor
push
aad
das
jb
lock
pop
or
xor
pop
es
inc
loop
and
lea
cli
sbb
mov
test
xor
dec
stos
mov
adcb
lret
shll
xlat
pop
mov
call
add
jl
or
test
xchg
or
sbb
in
adc
out
push
dec
ja
imul
dec
lock
in
movsl
icebp
lea
jecxz
inc
hlt
cmp
mov
xchg
shll
adc
pop
mov
leave
adc
pop
dec
sbb
loop
lds
sbb
sub
pop
xor
sub
in
lahf
add
in
addb
adc
xorb
cmp
add
cmpsb
js
and
pop
pop
mov
cmpsb
into
ret
arpl
imul
cmp
dec
jne
movsb
and
pop
pop
dec
mov
ja
jo
enter
and
test
insb
fs
mov
fidivrl
add
mov
mov
sbb
lock
sti
mov
int
push
sti
mov
cmc
mov
pushf
inc
loope
adc
icebp
loope
dec
andb
xchg
mov
repz
aas
out
mov
dec
jge
roll
outsl
or
inc
js
in
scas
dec
cltd
add
movsb
xchg
sbb
lcall
fistpll
sahf
mov
sub
aaa
dec
push
rorb
aaa
jg
out
push
xlat
pop
jl
lods
inc
mov
push
cli
arpl
cmpsl
adc
mov
outsl
jp
gs
push
cmpsl
xor
ljmp
jge
test
movsb
subl
add
loopne
sbb
jge
mov
roll
pop
push
fnstenv
lret
and
sbb
jecxz
dec
jmp
adc
jp
std
mov
in
lahf
push
pop
mov
aam
inc
mov
xor
mov
repnz
dec
xor
incb
insl
sbb
or
pop
cmp
inc
clc
ror
cli
xchg
nop
jg
adc
es
or
jo
rolb
stc
jo
adc
fidivs
sahf
filds
xchg
inc
mov
sbb
cmp
xor
js
pop
sbb
data16
cmc
insb
fs
cwtl
cwtl
outsl
in
jnp
rorl
xor
push
cld
and
and
inc
inc
lret
xchg
fnstenv
adc
pop
mov
nop
and
scas
ret
add
dec
lret
inc
dec
imul
sahf
jecxz
addb
in
lods
movsl
cs
bnd
popf
shl
mov
syscall
in
imul
pop
cmpsl
out
ds
aas
jo
push
ja
out
push
scas
sti
add
xchg
cld
xor
or
mov
test
mov
test
mov
int
sub
sub
sar
mov
hlt
fucom
icebp
data16
stos
gs
addr16
mov
into
out
mov
jle
out
ret
cmp
or
hlt
repnz
sbb
rorl
xchg
ret
pop
inc
xchg
inc
ret
inc
dec
repz
aam
fmuls
push
testl
fldenv
out
push
and
and
in
int
xchg
in
shll
inc
pop
or
das
sbb
test
push
fists
jle
enter
jno
jbe
icebp
jo
movsb
push
dec
js
sbb
lock
xchg
shrb
dec
fisubs
jb
shlb
js
ljmp
les
push
imul
in
or
push
sbb
xchg
dec
in
push
out
fistpll
mov
aam
xor
pop
shlb
sbb
leave
pop
mov
ds
add
cmp
cmp
or
jge
sub
lret
xchg
inc
fstps
push
dec
xchg
sub
movsl
xor
dec
stos
outsl
cmp
cltd
outsb
lcall
mov
inc
add
xor
inc
mov
insl
xor
imul
sub
cmp
out
fs
nop
mov
cmp
ss
sahf
dec
xor
scas
xchg
pop
xor
xlat
cmpsb
pop
dec
mov
cltd
push
add
xor
shll
in
and
mov
or
sbb
stc
scas
call
cmpsl
hlt
and
xchg
sbb
scas
dec
mov
sbb
sub
setno
mov
andl
adc
cmp
rorl
daa
and
jae
ficoml
ja
decb
dec
loope
xlat
or
xlat
test
mov
pushf
dec
lret
push
sub
cwtl
test
pop
xchg
xchg
popa
fidivs
push
stc
xchg
push
lret
cmp
push
leave
inc
pop
int3
sbbb
hlt
arpl
inc
sub
inc
jp
push
jno
xchg
mov
stos
popa
push
add
ficomps
int3
push
cmp
or
pop
xchg
vprotw
add
cwtl
movsl
adc
frstor
aad
sub
addr16
insl
push
pop
shll
out
daa
mov
sbb
outsl
or
jno
mov
sti
jecxz
cmpsl
jnp
lds
popf
cmp
mov
push
ja
decl
loope
cmpsl
xor
mov
into
in
dec
int
adc
std
adc
pop
inc
lcall
mov
movsl
or
test
jecxz
xorb
xor
jg
xchg
sub
pop
loope
xchg
xchg
mov
add
loop
scas
repnz
mov
es
std
sbb
insb
xchg
cmp
pushf
addb
pop
movsb
xor
add
ja
xchg
daa
jb
arpl
lods
push
mov
sub
push
push
test
loopne
pop
cld
sub
mov
lods
fisubs
push
mov
ljmp
inc
in
cmp
sub
je
fadd
jnp
dec
int
stc
fs
je
cmpsl
sbb
push
rcl
mov
cmp
inc
addr16
enter
and
aam
add
je
cli
imul
arpl
xor
je
mov
shll
or
ja
xor
ret
scas
push
xchg
mov
ds
int3
push
sbb
dec
adc
pop
pop
shl
xchg
pop
std
pusha
or
xchg
popa
int
addr16
inc
inc
sub
pop
mov
roll
or
sub
pop
add
int3
mov
cli
push
mov
add
sub
jmp
adc
inc
inc
cmp
mov
lock
arpl
lods
adc
mov
sti
dec
push
lds
pusha
pop
nop
and
jb
dec
fcoms
movsb
fwait
les
jns
jne
nop
cmp
out
out
sahf
sub
cmp
push
mov
fdivrs
lret
jp
dec
nop
push
loope
in
xor
out
dec
fldl
sub
jge
sub
out
xchg
ret
scas
jmp
mov
xchg
or
xor
add
fwait
sarl
decl
push
jge
flds
push
bound
daa
push
push
inc
inc
xchg
dec
aaa
shll
or
xchg
je
ficomps
scas
xor
mov
out
cmp
test
aam
jns
push
in
push
add
mov
or
jb
int3
mov
in
sarb
xlat
pop
int
xchg
outsl
insl
hlt
cld
subb
mov
sbb
shlb
mov
add
pop
addr16
push
and
jb
scas
xor
aas
call
dec
int3
addr16
mov
xor
mov
pop
xor
xor
leave
mov
test
push
rolb
xlat
ret
fidivrl
out
in
or
pop
cmp
bound
xchg
adc
fdivl
jecxz
push
cs
and
cmpl
pusha
shrl
sbb
push
fsubr
lret
ret
iret
dec
out
insb
js
daa
leave
sub
and
movsl
cmp
or
mov
out
pusha
and
fucomi
ficompl
cmpsl
pop
push
and
stc
mov
pop
arpl
adc
sub
cmp
call
mov
pop
mov
gs
lret
in
icebp
rcr
clc
enter
mov
lock
aam
data16
jns
pop
sbb
push
std
lret
shrb
dec
jmp
or
mov
push
jne
fcomps
pusha
jb
add
jmp
adc
std
xchg
rorb
cld
icebp
nop
mov
push
pop
jle
cltd
add
xor
mov
fdivs
pop
cmpsb
mov
out
in
bound
inc
inc
xchg
sub
mov
sti
es
shr
pop
popa
add
jle
add
addr16
inc
ds
inc
loopne
das
leave
mov
es
mov
adc
scas
adc
rolb
mov
xlat
xchg
repnz
xor
inc
pop
subb
int
in
pop
jns
cld
and
mov
test
sbb
inc
push
shrl
shll
mov
mov
adc
fmuls
or
mov
pop
cld
dec
cs
pusha
inc
push
cmp
loop
pop
mov
jno
scas
push
and
inc
cmp
jp
inc
call
sub
add
push
arpl
daa
sub
lds
cmpsl
dec
ds
push
in
je
xorl
ja
mov
aaa
jl
mov
jge
sub
and
imul
scas
out
pop
rorl
xchg
push
adc
lret
push
push
and
inc
lock
mov
negb
inc
test
cmp
cmp
outsl
sbb
ja
mov
ja
and
jge
mov
inc
push
pop
nop
cmpsl
clc
sub
jns
ret
test
cmp
lea
dec
cmp
bound
je
jae
out
pop
dec
ds
movsl
shl
or
xlat
daa
outsb
into
shl
cmp
mov
mov
push
dec
mov
out
xor
leave
push
in
xchg
mov
out
mov
fstl
mov
adc
jecxz
or
mov
lods
les
loop
loop
mov
test
dec
js
add
push
mov
iret
daa
xchg
sti
push
cmp
xlat
mov
outsb
in
xor
xor
stos
mov
imul
pop
mov
pop
push
xchg
mov
in
clc
mov
jmp
mov
mov
in
and
int
jge
fcomi
adc
cmp
xor
or
pop
xor
das
cmpsb
lds
sbb
jnp
lods
jp
mov
adc
adc
dec
adc
push
push
xor
mov
push
mov
fists
daa
mov
inc
mov
xchg
mov
inc
test
jo
jmp
jecxz
add
adc
icebp
je
bound
cmpsl
cltd
out
or
adc
outsl
sbb
cmp
popf
sub
out
cmp
mov
popa
or
mov
xchg
in
push
xor
clc
xchg
cltd
mov
cmp
fcmovne
mov
subl
scas
rolb
adc
lods
sub
pop
push
ja
aas
call
push
or
jg
or
mov
shl
mov
test
adc
mov
sbb
mov
xchg
or
lcall
and
addr16
or
push
or
xor
pop
hlt
add
daa
testl
loop
pop
int
test
cmpsb
in
push
ret
call
stos
cwtl
sbb
filds
test
mov
fdivrs
inc
je
fnsave
jp
mov
stos
leave
cmpsl
jne
jns
mov
gs
sarb
ljmp
insl
fildl
nop
js
mov
jo
xor
mov
cmp
fists
insl
rcll
orl
iret
mov
pusha
xor
call
stos
cmp
mov
xor
add
adc
jl,pn
rcrb
dec
jmp
sub
mov
push
cmp
lret
cmp
add
stc
sub
ret
cmp
ret
fucomp
inc
mov
push
sub
and
pop
xor
mov
sub
jmp
pop
in
add
push
add
push
mov
mov
int
mov
and
inc
pop
fadds
or
sub
or
mov
out
sahf
push
xlat
mov
repz
pop
shll
xchg
fnstenv
add
scas
cltd
xchg
aam
leave
cwtl
mov
mov
insl
lods
pop
insl
pop
cmp
mov
mov
cwtl
push
loop
xor
xchg
dec
add
leave
int3
movsl
adc
cmp
mov
mov
jge
or
insb
data16
add
sbb
mov
cld
inc
xor
outsb
push
mov
ror
jno
xchg
dec
test
rcrl
inc
lcall
ficoms
and
sub
and
adc
in
int3
popf
mov
pop
fistpll
jae
mov
hlt
stos
in
mov
push
pop
fldl
xor
sbb
jno
and
dec
pop
aas
push
scas
push
stos
js
dec
stos
ljmp
or
xchg
popa
push
inc
mov
mov
loop
enter
push
in
cmc
scas
jbe
out
push
rcr
cmp
stos
adc
adc
mov
call
adc
out
das
and
pushf
sbb
sbb
and
dec
push
or
jl
dec
push
cs
jo
mov
hlt
xor
scas
inc
cmp
mov
out
jg
sub
js
xchg
sub
and
xor
mov
mov
dec
mov
daa
lods
push
mov
or
leave
jecxz
fwait
dec
enter
cli
jne
das
add
add
lcall
sahf
pusha
sbb
push
add
cli
jmp
xor
cmp
push
mov
mov
xchg
ss
sbb
insl
call
mov
xchg
xchg
movsbl
add
mov
aas
lret
movsb
and
dec
aad
pop
mov
rcl
sbb
cld
mov
or
fldcw
push
es
popf
insl
mov
cmpsb
testb
and
popa
movsl
sbb
mov
add
aam
in
in
xor
or
mov
inc
pop
adc
xor
mov
pop
mov
and
test
in
fdivl
ss
or
jnp
stos
add
pop
enter
jbe
sti
cli
outsl
lds
loop
fwait
adc
test
pop
cli
mov
arpl
push
mov
orb
jge
ja
les
sbb
idivb
pop
jg
out
or
sbb
jmp
bound
or
adc
cmpsl
mov
mov
jb
aaa
shl
repz
dec
push
sbbb
repz
dec
lahf
mov
je
in
xor
xlat
sub
xor
cmp
mov
xchg
mov
sbb
dec
out
mov
ret
lcall
jp
xchg
adc
adc
xor
jae
in
pop
jae
test
and
repnz
xor
bound
inc
sub
fs
das
cwtl
mov
jmp
jp
mov
arpl
fucomi
inc
es
scas
je
push
sub
gs
adc
push
mov
pop
fs
or
dec
scas
add
pushf
je
shlb
jge
out
jno
or
fisubrl
aaa
out
sbb
mov
movsb
enter
mov
out
lds
cmp
cmp
xchg
jns
jb
rolb
add
loopne
sbb
fwait
pop
mov
pop
xor
xor
push
pusha
sub
dec
aam
pusha
dec
cltd
mov
rcrb
icebp
es
add
push
or
sbb
jl
and
das
sarl
sub
xchg
test
pop
ljmp
or
outsb
add
push
test
dec
or
mov
mov
adc
sub
scas
cltd
das
outsb
iret
xchg
and
aas
mov
je
sub
cmp
adc
dec
fistl
popf
fdivl
jbe
iret
shr
xchg
nop
xchg
push
stos
and
and
jmp
cli
or
dec
push
jl
das
cmpsl
and
sahf
insw
fsubs
mov
mov
call
mov
pop
sbb
mov
les
or
adcb
inc
enter
xlat
sarl
xor
add
add
xor
jae
xchg
fsts
mov
and
jge
pop
jmp
push
add
jne
aas
mov
insb
xchg
clc
lret
cltd
mov
jae
dec
or
clc
cmp
test
jo
lods
fsubs
fdivrl
idivl
cmpsb
lea
setge
xchg
add
in
sub
int3
mov
lret
xor
inc
mov
fnstenv
dec
ret
xchg
xchg
xor
dec
xlat
mov
adc
fwait
loope
pusha
mov
xchg
pop
mov
mov
stc
pop
rclb
fabs
cltd
sub
aaa
sbb
cmp
cmpsb
xchg
dec
adc
mov
sub
es
out
arpl
pusha
jmp
repnz
scas
inc
out
cs
cmp
cltd
inc
xchg
mov
pop
cmpsl
sbb
dec
dec
adc
outsl
jnp
lret
and
mov
loopne
adcb
insl
and
push
cli
scas
call
xor
idivb
mov
jns
in
jmp
je
icebp
test
imul
js
mov
sub
xchg
clc
mov
lret
xchg
out
jns
xchg
jl
out
and
mov
xchg
cmpsl
aaa
cmc
je
sub
hlt
addr16
pop
jle
mov
push
decb
xchg
dec
adc
mov
cld
mov
fucomp
das
add
jmp
jge
stos
movsb
sbb
push
test
adc
cmp
sbb
ljmp
mov
push
jo
fsubrs
sbbb
imul
idiv
adc
jae
xor
xor
ja
leave
outsb
ret
cli
loopne
jb
jg
sti
fcmovb
std
cmc
ret
repnz
icebp
pusha
dec
enter
or
rcll
dec
fstpl
rorl
pop
inc
inc
bnd
sbb
jg
cmpsl
lahf
das
mov
pop
push
stos
inc
addl
cwtl
lods
shlb
jle
push
mov
and
shrb
fwait
inc
loop
and
mov
push
lahf
push
inc
pushf
shlb
sub
test
test
gs
rdpmc
mov
loopne
ljmp
lret
jns
mov
pop
fimull
aam
sbb
fisttpl
shl
addr16
sub
aas
rclb
pop
andb
lcall
divl
mov
mov
stos
sub
jge
push
cmp
cwtl
insb
cmpsb
leave
std
mov
cltd
cltd
aam
cmp
imul
popf
fists
xchg
and
out
jge
jp
in
jmp
mov
jne
push
pop
shrl
mov
out
adc
ret
mov
jp
stos
adc
hlt
adc
sub
xchg
out
ret
out
fwait
xchg
je
sbb
xchg
jge
fildll
or
mov
aad
scas
stos
sbb
adc
xchg
aas
sbb
arpl
mov
test
scas
or
sbb
mov
pop
inc
hlt
enter
insb
pop
or
dec
adc
aam
inc
pop
pop
jnp
mov
mov
rcrb
lret
icebp
xchg
sahf
add
outsb
cltd
test
ss
push
pop
push
out
pop
outsl
sub
aas
inc
stos
mov
scas
loopne
iret
push
push
out
ja
adc
in
cmp
add
ret
das
arpl
xchg
sbb
daa
mov
scas
and
outsb
lea
xchg
in
daa
jae
and
pop
insb
xchg
mov
lds
mov
clc
xchg
pusha
sahf
fdivs
divl
jae
push
xchg
add
cmp
pop
mov
xor
adc
cmp
push
add
int3
push
lods
fdiv
sub
scas
pop
insb
fcmovb
xchg
cmp
push
dec
insb
lock
daa
inc
fdiv
mov
adc
pop
sahf
iret
int
cld
mov
xlat
test
fwait
aad
mov
or
js
lea
and
xchg
test
push
ja
inc
or
into
lret
inc
push
and
mov
lea
inc
cli
mov
or
lret
pop
aas
shrb
btc
adc
xchg
cli
inc
cwtl
cltd
sub
or
rcr
mov
jp
cwtl
sub
add
ret
push
and
mull
in
xor
and
out
or
sbb
test
xchg
mov
mov
fnsave
ss
xchg
fstpt
jg
xchg
imul
scas
popa
shl
inc
sub
mov
cwtl
ja
test
cmp
in
jne
jecxz
jae
push
iret
mov
fistps
add
pop
pop
add
sub
popf
dec
sub
jno
lcall
cmp
popf
ljmp
ss
ret
or
adc
jns
jl
aam
xlat
xchg
jbe
lds
push
mov
pop
mov
loopne
xchg
hlt
push
push
insb
jno
cmp
pop
movl
xchg
inc
pop
pushf
add
xchg
test
sub
outsl
add
sbb
or
shrb
xor
mov
inc
xorl
in
daa
and
lcall
sahf
pop
in
idivb
push
mov
and
jnp
push
mov
outsb
adc
mov
cmp
addb
cmp
add
xlat
inc
negl
into
add
jge
xchg
inc
or
adc
or
xlat
pop
or
out
pop
mov
sti
push
es
mov
adc
loop
in
fidivrs
lahf
out
inc
hlt
inc
pop
cmp
xor
push
fstpl
fldenv
test
xchg
ja
adc
jns
into
lret
insb
adc
fldenv
inc
test
out
dec
loopne
rcr
push
pusha
xor
push
cmp
mov
rolb
mov
insb
test
jo
push
xor
outsl
cmp
ficoms
enter
mov
cwtl
cltd
je
sbb
sub
mov
sahf
dec
daa
addr16
shll
addr16
shrl
mov
lret
jg
dec
cmp
mov
je
les
std
shl
inc
pop
scas
fistpll
pusha
inc
push
push
int
adc
or
icebp
sub
xchg
add
mov
push
add
ss
insl
push
fldcw
add
cld
cmp
inc
pop
inc
es
pop
lret
adc
mov
xor
xchg
fs
call
les
outsl
mov
pop
lret
fst
and
shrl
daa
inc
leave
scas
cmp
pusha
mov
rcll
mov
std
loop
mov
fcmovnbe
xor
jno
sbb
mov
loope
lea
add
ss
or
and
mov
ret
jle
push
xor
sbb
ret
push
mov
push
in
or
mov
push
andb
ss
cltd
outsl
ljmp
lock
mov
ficoms
in
shlb
xor
fnstcw
push
in
pushf
cmc
mov
adc
cmpsb
int
js
push
rcl
push
jo
loope
xchg
es
or
pushf
push
mov
cmc
mov
mov
or
dec
fstpt
sbb
lret
inc
mov
jbe
adc
enter
dec
pop
push
add
mov
xor
inc
jno
cmp
mov
das
push
mov
mov
sub
lods
mov
jbe
cltd
repnz
nop
inc
adc
and
jbe
push
mov
shl
sbb
xor
jmp
aad
mov
xorl
sarl
aaa
or
mov
shlb
cltd
or
xor
ret
clc
leave
jne
xor
movsb
addr16
cmp
hlt
mov
mov
repz
add
push
movsl
popf
dec
push
fmull
lahf
pusha
rcll
out
call
xchg
cmpsl
cmp
push
xor
cld
insb
add
lcall
std
in
ljmp
in
inc
inc
inc
push
dec
and
repnz
and
out
sbb
xchg
mov
in
andl
cmp
dec
pop
xor
adc
xchg
push
pop
mov
cmpl
sbb
fsubp
inc
and
mov
popf
mov
lds
gs
icebp
psraw
sti
shll
aad
sub
scas
inc
and
test
imull
cmpsb
into
call
or
fsubrl
mov
ret
xchg
jnp
mov
mov
mov
aad
sub
ss
push
mov
outsl
cltd
pop
lcall
sahf
int3
in
imul
fstl
or
sub
cli
scas
push
jg
les
mov
daa
inc
mov
add
call
dec
or
sar
outsl
add
inc
push
or
xchg
sbb
jg
sahf
lock
enter
jo
jno
mov
pop
xlat
xor
fwait
push
imul
mov
or
scas
mov
movsb
push
scas
shrl
cs
fidivrl
jge
xlat
lahf
jmp
mov
repnz
pop
push
pop
addr16
or
stc
flds
and
into
imul
add
sub
sar
push
sets
notl
in
stos
nop
fisubrl
addb
nop
rdpmc
jnp
outsl
shl
das
add
adcb
and
cli
xchg
das
inc
mov
sarb
mov
insb
fcomps
je
sub
insl
loopne
adc
gs
mov
inc
loop
mov
or
stos
es
sahf
insl
xchg
cli
dec
and
ljmp
filds
call
fldenv
test
lock
sub
int
aad
lea
cmpsb
mov
ds
cmp
pop
out
sub
or
mov
cmpsl
frstor
cmc
addr16
mov
cmp
fs
sbb
sahf
dec
daa
cmp
pop
jae
cmp
ficoml
sbb
fidivl
xorb
repnz
movsl
and
mov
cmpsb
add
into
jmp
inc
repnz
lock
sub
xor
mov
fimuls
inc
inc
mov
rolb
pop
es
sbb
adc
and
jb
mov
jae
pop
xor
jbe
push
inc
rcl
push
mov
in
out
and
int3
inc
add
mov
jp
and
jge
out
pop
push
test
fstps
les
lock
cmp
add
sbb
loope
cmp
ss
xor
ffree
cmp
or
das
xor
out
or
push
test
fldcw
mov
cli
and
or
xchg
and
pop
ret
and
pop
lea
mov
jle
jnp
mov
cli
push
jns
inc
aad
mov
add
pop
rcll
xchg
dec
mov
js
inc
mov
sub
sbb
mov
sub
sbb
xchg
xchg
gs
push
mov
or
es
daa
movb
in
loope
push
mov
div
pop
push
jl
insb
lret
lds
push
jnp
mov
addr16
jmp
jo
aaa
xchg
fisubl
adc
into
mov
insl
aam
mov
out
cmpsb
mov
sub
dec
inc
push
push
cmp
xchg
adc
les
pushf
cmp
roll
mov
adc
in
inc
and
inc
pop
add
pusha
jns
repz
sti
dec
xlat
mov
inc
enter
pop
jecxz
enter
fimull
lahf
movsb
popa
sbb
cmc
insb
sbb
inc
out
jns
pusha
lahf
sbb
adc
repnz
lcall
and
daa
stos
push
jne
lds
repnz
or
lret
mov
lods
in
mov
pop
push
std
idivl
and
mov
lcall
and
adc
sbb
in
adc
xchg
adc
or
push
decl
mov
sbb
pushf
popa
adc
cli
xor
insl
scas
movsb
xor
outsb
pop
scas
dec
pop
jmp
cmp
xor
sub
add
xor
movsb
pop
ret
adc
clc
and
mov
sbb
mov
dec
pop
and
adc
lock
inc
pop
scas
jbe
pop
insl
test
rcl
adc
orl
or
ret
jb
ja
xor
inc
mov
shll
mov
es
and
and
cmp
mov
or
push
lods
fnsave
rcrb
cmp
adc
rcrb
ret
cmc
pop
imul
ja
xchg
jmp
or
jb
insb
push
orl
outsb
push
daa
inc
sarb
call
insb
fisttpl
jmp
enter
sbb
xchg
imulw
cmp
gs
mov
inc
fldt
sahf
loope
into
test
xor
push
mov
jns
mov
mov
movsl
dec
test
out
push
std
imul
test
sbb
aad
pop
bound
leave
push
adc
xchg
in
in
testl
sbb
pop
and
push
cmp
fs
cltd
roll
mov
fistpl
and
mov
xchg
rcrl
and
mov
jmp
inc
xchg
call
sub
gs
inc
fiadds
int
nop
imul
xor
jo
sahf
ja
push
inc
dec
test
xchg
pop
adc
inc
jns
arpl
insl
clc
pop
gs
cwtl
stc
cli
dec
jecxz
bound
pushf
xor
loop
leave
lret
lods
mov
stc
test
xor
in
loope
mov
mov
dec
mov
ja
jb
sub
jb
xchg
xchg
ds
jb
pop
mov
inc
loope
cmp
pop
mov
mov
fisttpll
out
push
mov
js
xchg
movsb
ds
push
cmpsb
pop
and
lret
imul
pop
fbld
cwtl
sub
pop
ljmp
sub
clts
pop
jecxz
mov
mov
in
jb
jp
stos
fbstp
insb
xlat
dec
lret
push
insl
sbb
jecxz
bnd
xchg
mov
cmp
jbe
sbb
xchg
mov
arpl
adc
rcrb
dec
out
jmp
rcrb
lods
jnp
stos
fs
rcr
roll
dec
lds
push
roll
push
pop
ret
ss
pop
out
lods
pop
pop
jae
sub
mov
les
mov
mov
or
mov
into
ss
sbb
sbb
xchg
outsb
call
ret
in
sahf
ljmp
ret
inc
out
out
push
jbe
iret
movsl
push
rcl
adc
xchg
out
or
jecxz
mov
cmc
xlat
leave
rcrl
adc
mov
push
popa
mov
push
cmp
jo
mov
dec
cli
test
mov
pushf
fcomps
loop
test
adc
and
loopne
das
repz
aam
cld
sub
push
add
add
add
pop
dec
aam
and
loope
adc
out
adc
mov
insl
outsl
in
in
subl
push
or
out
into
jge
adc
cmpb
enter
mov
and
xchg
sti
pop
adc
les
sbb
sbb
pushf
xchg
call
xchg
cwtl
sbb
loopne
pop
out
aam
add
sbb
loop
ljmp
in
pop
out
fisubrs
push
push
lahf
xor
and
vmwrite
les
sbb
fidivrs
outsl
mov
inc
sub
push
sub
xor
adc
xor
pop
in
orb
add
mov
aas
lds
dec
test
aaa
shl
push
stos
es
ss
push
xor
dec
cld
and
mov
pop
and
cmp
xchg
lea
mov
and
push
and
fstps
xchg
jge
mov
sti
jb
push
cmp
imulb
sub
in
rcrl
xchg
cmpl
in
aas
ror
adc
aad
dec
xlat
sti
mov
cld
adc
add
push
pushf
or
cmp
sbbl
js
add
sahf
lods
xor
jb
ljmp
loopne
pop
aas
movsl
int3
pop
mov
adc
mov
xlat
movsb
lret
addr16
jg
paddd
pusha
add
xchg
dec
lcall
mov
mov
dec
adc
dec
es
fstpt
movsl
sbb
mov
push
xor
loop
xchg
out
pop
insb
dec
aad
imul
mov
in
push
xchg
push
lret
push
int3
fldenv
loopne
jmp
cmc
push
or
test
je
pop
dec
sub
scas
test
addr16
adc
jnp
test
arpl
jmp
or
sbb
fadd
inc
or
pop
dec
hlt
and
or
out
testl
test
inc
mov
adc
mov
arpl
push
mov
add
lock
and
aad
scas
leave
cmp
negb
jns
icebp
lcall
ret
shrb
stc
sahf
test
sbbl
jae
hlt
aaa
sub
lahf
pop
jecxz,pn
inc
fldz
cmc
dec
sbb
gs
pop
adc
mov
adc
fwait
cmpsl
inc
xchg
push
xchg
push
mov
xchg
push
push
add
stos
jp
inc
gs
mov
xor
add
ficoml
mov
filds
pop
push
jg
shll
in
popf
push
adc
test
enter
mov
in
decb
dec
out
ds
push
movsb
jle
test
lds
ret
jns
jecxz
out
sbb
loop
decl
into
fidivrl
imul
mov
scas
test
xorb
outsb
fnstsw
out
jae
mov
pop
pop
push
pop
pop
in
lds
inc
dec
mov
fnstsw
cltd
lret
test
lahf
jp
mov
imul
pushf
iret
mov
mov
repnz
mov
lea
dec
lods
stos
arpl
imul
pop
cmc
test
mov
stc
mov
mov
out
cmp
push
ret
ds
test
mov
mov
fcoms
fdivl
jb
sub
sahf
arpl
adc
add
ljmp
dec
aam
dec
dec
push
mov
sbb
ror
xor
adc
sti
dec
in
adc
jo
ret
push
xlat
sub
adc
mov
sarl
xchg
cmp
inc
scas
adc
mov
mov
xchg
add
mov
andb
dec
inc
jb
aas
ret
ljmp
dec
nop
mov
lods
shrl
lret
xor
pop
pop
fld
adc
in
ja
sub
int3
and
mov
jle
inc
and
dec
push
out
pop
push
cwtl
jge
cmpsb
movsl
shll
fwait
and
push
outsb
test
sbb
adc
loopne
add
jl
orb
leave
shlb
or
imul
lea
mov
push
pop
daa
ja
lock
mov
adc
dec
sbb
mov
jo
mov
leave
and
sub
scas
lods
or
or
mov
mov
jbe
xor
lods
push
or
dec
cltd
movsl
jb
jo
xor
sub
hlt
js
mov
lcall
out
fwait
cltd
in
sub
xor
loopne
jae
data16
enter
xchg
adc
and
adc
push
cmp
and
and
mov
into
stc
xchg
sbb
jbe
cld
jae
sbb
cmp
nop
aad
mov
mov
pop
jmp
jecxz
add
icebp
sub
out
mov
movl
dec
sub
sbb
pop
mov
das
push
mov
inc
inc
xchg
sahf
test
pop
bnd
setle
push
jge
inc
add
orl
fsubrp
push
incb
lret
shll
cmpsl
jnp
jle
push
data16
cmc
cmp
push
lret
inc
push
xor
cli
add
xchg
mov
fidivs
jbe
mov
jne
adc
mov
jb
inc
xchg
fldcw
cmp
adc
or
test
add
ds
fcmovbe
aam
arpl
insb
jo
xor
or
pop
cmc
jg
out
lods
xchg
dec
or
and
mov
loope
mov
rolb
ljmp
mov
daa
lock
push
in
jae
popf
das
jge
cmp
xor
adc
jns
repnz
add
xor
aaa
ds
mov
sub
popa
add
cmp
inc
sbb
push
pop
repz
fnsave
jmp
shrb
mov
test
mov
frstor
test
jle
test
pop
jne
sbb
dec
fisubrl
jno
aaa
xchg
out
es
mov
int
and
pop
add
jo
rol
cmp
pop
cltd
jge,pn
aad
adc
jg
notb
ja
lock
fisttps
cmpl
add
mov
dec
subb
lahf
jne
arpl
mov
pop
fwait
jae
outsl
pop
outsl
popf
mov
insb
push
push
stos
mov
nopl
mov
xchg
dec
mov
sub
sbb
jne
or
sbb
mov
ret
inc
int
cwtl
jb,pt
popa
pop
pop
push
sbb
pusha
push
xlat
ret
aad
mov
mov
and
jecxz
fadds
shll
mov
xchg
add
sti
adc
out
lods
lret
xchg
mov
dec
pop
mov
fidivrs
adc
mov
fdivrs
subl
pop
out
push
cmp
dec
fst
xor
xchg
rorl
add
mov
cmp
shlb
dec
jae
pop
icebp
enter
mov
push
push
rolb
add
cmp
addr16
adc
out
jb
cmpl
jbe
outsl
divl
ret
gs
add
adc
xor
dec
cmp
jecxz
leave
iret
push
mov
aaa
out
add
int3
push
lock
cmp
std
push
int
scas
js
mov
or
out
dec
sub
fimull
add
imul
inc
jmp
adc
inc
sbb
mov
mov
mov
mov
sti
dec
xchg
jbe
insb
xor
iret
aas
inc
cmp
enter
pop
or
jge
mov
sbb
xchg
push
pop
sbb
mov
dec
inc
das
insl
mov
add
faddl
hlt
fnstsw
sar
rolb
stc
mov
pop
dec
shrb
ss
push
mov
pusha
aam
out
or
in
xchg
mov
xchg
or
pop
mov
lret
cmpsb
and
jg
imul
push
pop
scas
or
je
inc
cwtl
adc
or
inc
loop
jb
fstl
pop
mov
pop
das
jne
repz
jno
jmp
aas
cmp
push
cmc
xor
ret
cmovge
fs
mov
sbb
out
es
cmp
mov
xor
icebp
out
or
jno
or
add
dec
sbb
pop
push
push
mov
test
mov
loopne
cmpsb
add
loop
xchg
push
insb
out
andl
mov
inc
fmull
pop
cmp
sub
mov
insb
das
jno
push
xor
in
cwtl
push
mov
sbb
dec
inc
xlat
cwtl
jne
mov
fs
dec
pop
in
mov
mov
repz
xor
push
mov
pop
xchg
out
mov
mov
pop
sub
stos
xchg
add
xchg
push
out
jge
ficoms
ret
iret
or
mov
cltd
and
scas
push
jge
pop
gs
iret
add
pop
inc
sahf
cli
out
push
rcl
mov
jecxz
aas
roll
push
pop
fldenv
lea
dec
test
imul
mov
es
or
xchg
leave
push
pop
and
movsl
dec
push
inc
data16
fstpl
dec
clc
lds
cli
mov
into
mov
movsl
mov
adc
lret
mov
and
lret
jb
iret
cmp
sbb
aam
in
and
jecxz
xor
sbb
sbb
sbb
xchg
jecxz
jno
ficompl
xchg
sti
clc
stos
cld
aam
ret
and
jp
sbb
mov
xor
mov
jle
mov
xor
pop
stos
pop
push
out
jp
int3
fwait
ss
dec
mov
rep
jns
repz
push
jge
and
adc
gs
hlt
mov
je
sub
nop
add
stos
mov
adc
mov
push
fwait
addr16
pop
rclb
pop
mov
push
jae
sbb
loop
dec
cmpsb
xchg
testb
lea
jle
out
cld
mov
jg
mull
nop
push
mov
nop
test
fnstcw
jp
push
aaa
out
xor
cs
mov
pop
xchg
xchg
and
cmc
fnstcw
mov
and
xor
pusha
int3
nop
lahf
lahf
mov
mov
iret
add
or
mov
cwtl
cmpl
adc
lods
out
sbb
push
and
jge
jmp
hlt
in
and
sub
movsl
pop
xchg
scas
xchg
pop
inc
shlb
push
in
add
adc
xor
int3
test
test
dec
sbb
xchg
repz
out
rclb
pop
lods
std
mov
outsl
adc
fisttps
push
ret
insb
mov
cwtl
loope
sti
jns
jge
testl
mov
shlb
sbb
inc
pop
test
bound
rcl
push
divl
fstpl
or
clc
mov
xor
subb
cltd
loopne
cltd
dec
dec
rolb
lods
subl
aaa
stos
jns
mov
ret
pop
adc
push
out
jne
push
push
push
mov
xor
jne
idiv
cltd
jp
jle
and
jmp
test
call
std
adc
popf
sbb
jle
mov
dec
shrl
mov
dec
mov
xchg
mov
lock
or
mov
shlb
mov
mov
jno
mov
dec
and
add
popf
loope
repz
bound
iret
es
add
lcall
es
sar
sti
in
jmp
adc
jns
cmpsl
or
aaa
daa
sub
out
mov
push
repz
dec
fiaddl
mov
mov
adc
int
or
rcll
fisubrl
xor
push
pop
outsb
or
sub
mov
loope
pushf
pop
mov
adc
das
popf
push
sbb
inc
cmp
sar
xchg
pop
dec
lods
and
sahf
mov
mov
popa
cwtl
add
dec
js
outsb
inc
push
push
repnz
ljmp
mov
mov
repz
movsl
enter
xchg
mov
gs
idivb
in
imull
sbb
mov
and
xorb
insl
arpl
fimull
adc
rolb
jle
cli
sbb
mov
pop
mov
mov
fnstsw
fidivrs
es
bound
lahf
shlb
and
push
mov
aaa
fldt
je
int
insl
xchg
mov
or
loopne
orb
push
in
mov
jns
je
fiadds
call
jbe
cld
into
in
jmp
fwait
fwait
shlb
cwtl
int3
mov
icebp
mov
ljmp
push
int
andb
outsl
jb
dec
fdivs
jns
mov
sub
pop
xlat
mov
sbb
sbb
xor
mov
xchg
lds
es
pop
push
push
xchg
stos
lret
cmp
push
in
repz
xchg
rorb
push
std
in
xchg
cmp
and
push
and
int
mov
jae
add
fcmovnb
in
xchg
push
xchg
add
xor
aad
push
inc
pop
into
cmpsb
lahf
pop
pop
js
iret
xchg
mov
insb
lahf
add
xchg
sbb
cmp
mov
lea
xor
mov
and
or
or
mov
stc
dec
and
pop
out
and
shll
cmp
pop
in
mov
sub
mov
xchg
aas
fldt
mov
fistl
imul
push
pop
jmp
sahf
hlt
clc
ljmp
and
in
jbe
ja
pop
cs
xchg
inc
out
push
cmp
lods
test
dec
and
cmpsb
push
mov
push
add
inc
bound
js
sbb
inc
ja
iret
pushf
addr16
sbb
inc
cmp
data16
popf
lcall
and
pop
aad
dec
xchg
jo
pop
pushf
adc
pop
sub
fsubs
arpl
daa
xlat
cmp
fisubrs
aad
jmp
mov
test
xlat
rcll
inc
fnsave
sbbl
addr16
ljmp
lcall
inc
or
mov
mov
xchg
test
sub
pop
sbb
xchg
cli
xchg
inc
cmpsb
and
inc
xchg
loopne
mov
shll
sub
mov
adc
imul
cmp
jb
adc
mov
jl
inc
test
ret
pop
clc
sbb
stc
cmp
jb
cmovle
xor
test
lds
jg
lods
sub
push
das
rcrb
push
pop
jle
loopne
push
dec
js
push
inc
aam
or
mov
push
popa
sbb
push
jl
int3
or
pop
add
data16
ja
cmp
test
mov
sub
popf
lea
mov
add
inc
inc
mov
push
ret
adc
xchg
add
ds
mov
in
mov
xor
jg
clc
les
xor
pop
and
mov
push
mov
aam
loope
mov
cmpsl
into
xchg
jne
jle
das
add
fadd
and
test
test
pop
inc
xchg
out
xchg
int3
sub
or
xchg
jmp
push
das
insl
mov
js
xor
aas
push
push
push
dec
sbb
fxch
jle
sbb
dec
jnp
ljmp
dec
adc
add
xor
dec
bound
inc
lods
xchg
mov
lods
dec
cld
dec
sbb
fwait
ret
aam
fildl
das
jns
aad
add
and
pop
jp
mov
inc
jae
xor
stos
push
inc
push
ret
xor
push
sub
pop
xchg
sbb
xor
arpl
repnz
jmp
inc
jno
lret
arpl
icebp
dec
dec
jae
pop
leave
mov
popa
ret
lds
mov
xchg
cs
imul
sub
jmp
loop
je
ror
mov
rcr
add
lods
adc
repz
test
and
sbb
int
fwait
or
adcb
or
shrb
lcall
xchg
add
aaa
and
jns
inc
scas
pusha
xchg
xchg
cld
enter
xor
cwtl
mov
pop
fcoml
adc
mov
insl
push
test
hlt
rorl
loop
lods
inc
and
sub
ss
cmp
xor
xchg
stos
jo,pn
pop
mov
fimull
fdivrs
fidivrl
or
lods
imulb
cmp
pop
mov
jae
ret
or
cld
xor
or
xchg
aam
es
in
shll
add
push
out
lret
dec
cmp
out
sub
mov
add
xchg
pop
mov
sbb
lahf
movsb
sub
push
sbb
sbb
jo
jecxz
mov
inc
nop
shrb
xor
sub
or
popa
pop
aam
mov
mov
add
cmp
fildll
in
xor
mov
pop
fisttpll
cmp
inc
pop
aad
shll
inc
dec
push
std
imul
test
sbb
jge
pop
adc
sub
xchg
jb
rolb
cmpsb
lods
sahf
aaa
sbb
out
and
mov
and
sub
int3
push
cmc
shlb
in
cs
stos
adc
test
inc
xchg
les
push
inc
and
mov
int3
lahf
jecxz
call
mov
nop
arpl
and
sub
clc
xchg
cmpsl
ljmp
inc
ss
xor
out
mov
pop
data16
xchg
mov
xchg
mov
jle
pop
ljmp
add
sub
jg
and
xchg
mov
sbb
xchg
movsl
movsl
aam
iret
es
jne
mov
in
and
xchg
or
push
dec
add
sbb
pop
shlb
cmp
mov
sbb
in
fucomi
cmp
icebp
add
dec
adc
jmp
scas
or
cmp
inc
cmpsb
sub
ds
and
and
sub
inc
scas
cmp
clc
in
daa
fimuls
jb
lahf
sbb
daa
mov
sbb
or
aas
stos
in
and
inc
pushf
push
js
and
arpl
leave
fcompl
test
int3
popa
dec
push
inc
test
leave
mov
jae
and
inc
nop
sbb
mov
or
cmc
xchg
jmp
push
lcall
lds
push
call
test
ds
clc
fcmovnbe
sbb
mov
daa
mov
mov
cltd
mov
mov
jbe
int
mov
mov
push
jle
xchg
pop
ret
out
arpl
dec
adc
mov
or
cmc
sar
rclb
or
dec
aas
inc
mov
fldt
movsl
in
scas
push
mov
jecxz
mov
mov
popa
mov
cwtl
push
shll
imul
sahf
jecxz
dec
popl
sbb
push
jno
js
lods
cmc
xchg
stos
pop
or
std
mov
mov
inc
sbb
cs
xchg
sbb
lds
das
ljmp
jp
rclb
xor
xchg
dec
outsl
mov
sbb
add
pushf
adc
mov
push
and
inc
out
fs
sbb
push
aam
xchg
iret
mov
in
mov
fistps
push
sbb
mov
icebp
cs
lret
dec
adc
xchg
xchg
cmp
push
into
call
shrl
and
pop
hlt
das
xor
pop
dec
jmp
or
cwtl
or
dec
js
xchg
push
in
test
lock
aaa
loop
punpckhbw
repz
mov
in
imul
jecxz
rorl
mov
ja
add
packsswb
xchg
mov
jg
adc
shrb
sub
sub
jae
shrb
fadds
mov
xchg
add
jl
imul
sbb
stos
or
jmp
mov
out
push
xor
insl
enter
dec
inc
jnp
ret
inc
lahf
pop
pop
outsl
pop
shlb
and
loope
add
scas
mov
mov
sbb
test
xchg
shrb
sub
sar
or
fldt
in
out
or
stos
xlat
lret
pop
sub
mov
ss
xor
mov
inc
cmp
sbb
ja
pop
cmp
cmp
mov
jl
mov
scas
fnstenv
xchg
xor
push
mov
lcall
cmp
into
lahf
sub
ds
push
pop
xor
mov
cmp
test
mov
ljmp
xlat
icebp
adc
aaa
movsb
sub
mov
icebp
int
in
and
xor
loope
cld
mov
repnz
sbb
mov
sub
jnp
and
jns
xor
xlat
and
push
jnp
in
in
pop
or
aaa
inc
push
push
jl
jae
xchg
aad
cmp
lcall
push
mov
insb
rorb
lock
lret
mov
loopne
fbld
jecxz
adc
psubb
int
popf
inc
stos
jnp
push
push
lods
imulb
push
test
sahf
enter
mov
dec
fwait
mov
lret
inc
cmpsl
push
shrl
jne
repz
aad
add
and
or
xchg
pusha
cmp
adc
jbe
int
sub
es
lret
rcr
adc
inc
add
jmp
push
fs
lock
int
dec
push
sbb
bound
pusha
lock
adc
cmp
jnp
lcall
pop
pop
scas
xchg
addr16
cmp
jae
adc
hlt
jl
pop
xor
xchg
out
les
xchg
pop
outsb
mov
sub
int
xor
pop
sbb
jb
adc
fdivs
out
lret
fistpll
fbld
stc
dec
add
lcall
les
nop
lret
sti
xor
xchg
sbb
addl
and
push
and
iret
inc
xor
adc
mov
jecxz
mov
daa
pushf
inc
mov
xchg
orl
fs
and
and
cmp
lahf
sub
adc
push
in
jl
cmp
clc
mov
jno
adc
jmp
lcall
mov
popf
loope
ret
mov
aam
test
ret
xchg
addr16
icebp
ret
add
lret
jbe
orb
insl
xchg
add
es
aas
xchg
pop
inc
mov
jnp
gs
icebp
lods
xchg
push
mov
leave
call
into
subl
out
adc
js
out
jge
sub
pop
fisubs
std
jmp
lods
negl
push
in
xor
inc
out
or
sbb
lret
jbe
push
int
stos
lock
out
pop
push
pop
ljmp
aas
sahf
sub
stc
out
movsl
pop
test
test
pop
jmp
sahf
cmc
inc
jmp
and
lahf
int3
js
rcrb
push
out
dec
dec
mov
nop
xor
popf
sub
andb
mov
mov
sub
xchg
out
mov
out
int3
cli
bound
pop
int3
fs
push
scas
test
outsb
pop
popa
fnsetpm(287
faddl
bound
jnp
cmpsl
sbb
ret
add
mov
mov
lcall
add
pop
cli
arpl
daa
mov
aam
adc
dec
cmp
push
loope
ffree
aaa
jo
dec
sbb
jg
dec
repnz
fisttpl
into
clc
test
cmp
mov
jnp
nop
mov
cltd
js
jmp
test
mov
ds
xchg
das
mov
int3
out
pusha
stos
push
xchg
xchg
mov
es
pop
aas
rcll
pusha
adc
push
lea
sahf
std
test
fnsave
pusha
cmp
xor
and
dec
fs
shll
xchg
mov
fcomp
xor
je
mov
loopne
xchg
stos
push
cmp
cmp
pop
pop
pop
iret
fucomip
and
xor
adc
or
inc
push
out
ss
mov
cmp
test
in
imul
pop
out
or
sbb
sub
xchg
cli
inc
out
jge
sbb
jl
pop
lret
js
mov
and
pop
mov
stos
adc
lds
test
xchg
bound
fnsave
push
js
jge
outsb
and
add
addb
or
sub
and
dec
inc
test
jge
cmc
repnz
aad
fistpll
xchg
sub
out
call
pop
pushf
insb
xchg
aad
in
inc
out
lcall
adc
adc
cwtl
mull
cmpsb
push
mov
push
ret
bswap
xchg
into
lcall
pop
popa
mov
inc
cltd
pop
sub
out
sahf
dec
push
adc
bound
or
jl
aad
scas
or
xchg
cmp
orb
pop
mov
int
in
mov
pop
mov
icebp
and
sbb
les
cli
xchg
shlb
nop
notl
lds
sahf
push
das
push
mov
imul
or
lret
jge
mov
inc
xchg
sbb
sub
cltd
cmp
movl
add
int3
adc
imul
fsubs
push
mov
iret
outsb
fsubp
daa
xor
xlat
push
push
mov
aas
aaa
stc
push
add
xor
bound
jno
out
or
mov
dec
mov
cmpsb
mov
jecxz
mov
xor
outsb
xor
sbb
push
rcrl
mov
pusha
pushf
insl
xorb
test
std
xchg
test
push
rorb
outsl
or
test
adc
ror
add
pop
mov
ja
pusha
and
add
ret
push
shlb
pop
pop
stc
cli
je
cmp
adc
xchg
sub
cmp
scas
cmpsb
pop
into
out
xchg
mov
push
adc
sbb
mov
adc
sub
jmp
ret
add
pop
push
ja
or
jno
outsb
jmp
jno
mov
ss
aad
sbb
inc
mov
jb
xchg
mov
aaa
xor
jge
cs
jp
fmuls
shll
mov
sbbb
and
test
nopl
jbe
push
or
das
pop
dec
and
dec
fnsave
push
shll
xchg
nop
mov
fimuls
pop
and
mov
add
repnz
pop
or
jnp
negb
cmpsl
lds
xchg
xor
cmp
jno
into
mov
lcall
adc
add
test
imul
jecxz
roll
push
mov
in
sbb
jl
fwait
in
mov
aas
lahf
dec
stc
sub
pop
sub
push
xorb
bound
jo
or
scas
inc
shrl
sbb
mov
xor
loopne
hlt
xor
insb
mov
xchg
add
pop
xchg
roll
mov
or
lret
scas
aaa
inc
les
lahf
in
mov
imul
loopne
popa
frstor
jl
push
fmull
out
dec
mov
cli
mov
xchg
push
fsub
xchg
jo
adc
lret
ja
enter
gs
mov
testb
cs
add
sub
sbb
gs
pushf
xlat
or
addl
xchg
mov
into
repnz
sahf
sahf
push
push
and
fcmovu
jnp
lcall
mov
pop
inc
pop
les
adc
and
adc
jnp
xchg
and
or
dec
add
fs
loopne
pop
pop
dec
arpl
cld
inc
pop
loope
enter
fimull
pop
je
xor
pop
loope,pn
dec
xchg
mov
lcall
jecxz
sbb
sub
cmc
arpl
orb
inc
movsl
shlb
mov
cmpb
inc
sub
fsubrl
sbb
lock
mov
mov
mov
sbb
lcall
add
sub
or
add
icebp
push
ja
lods
ds
mov
mov
inc
jge
xchg
sti
aaa
add
pop
cmp
push
or
imul
out
add
scas
imull
insb
daa
movsb
xor
lahf
xchg
iret
lea
jecxz
and
cmp
add
mov
repnz
pop
in
mov
xor
pop
mov
int3
inc
sub
mov
mov
mov
add
jns
arpl
in
jle
loope,pn
mov
cwtl
or
jnp
mov
enter
sub
stos
lods
sti
xchg
and
mov
imul
in
ljmp
push
cmp
push
hlt
adcl
in
jo
decb
inc
jbe
pop
cmp
sbb
dec
shr
jne
loop
adc
or
xor
rcll
jl
mov
test
add
out
sbb
mov
inc
sbb
inc
vmwrite
outsb
add
hlt
push
push
loope
pop
cmp
test
shr
js
addb
out
or
lea
adc
mov
aam
ljmp
shrb
mulb
mov
fwait
lds
xlat
or
mov
scas
lods
jecxz
inc
lahf
jg
sub
and
jne
mov
dec
add
popa
fwait
cmp
jp
out
pop
jge
sbb
jnp
cltd
ret
mov
mov
cmp
test
mov
jne
sub
mov
xchg
xchg
mov
iret
push
cwtl
arpl
ds
aas
xlat
jne
inc
jmp
icebp
popf
rcr
mov
xchg
inc
or
and
test
cs
or
xor
aaa
aad
hlt
pop
imul
jb
push
test
loop
mov
mov
ljmp
inc
insb
sbb
ja
pop
sbbl
push
sbb
and
loopne
and
inc
dec
dec
fdivs
mov
rcrl
jecxz
mov
or
aam
fst
and
mov
dec
pop
in
out
jle
pop
push
push
xor
pop
adc
shl
pushf
dec
imul
jg
shrb
scas
inc
dec
xor
pop
and
and
shrb
add
add
xchg
psrlq
push
adc
or
adc
movsl
jge
cmp
mov
lcall
mov
sub
sub
jl
stos
push
or
add
popf
sbb
add
cmpsb
sbb
jmp
aaa
mov
push
xchg
popf
movsl
xchg
fs
pop
mov
fmull
cltd
nop
jle
mov
sarl
sbbb
test
push
or
mov
filds
push
pop
andb
mov
xchg
popa
add
in
ret
cmp
test
pop
pop
and
psubw
sti
adc
mov
fadd
mov
inc
inc
jo
ja
push
add
outsb
sub
mov
mov
xor
mov
fmull
push
pop
adc
push
fmul
dec
xor
push
bound
inc
push
mov
out
jg
xchg
loop
mov
insl
cmp
scas
call
mov
loope
dec
cmpsb
push
sub
stos
lret
dec
dec
je
xor
or
mov
enter
and
jmp
cld
mov
push
popa
xchg
es
clc
mov
leave
rcrl
loope
adc
int
jb
je
push
cmp
cmpsl
gs
mov
aas
dec
push
iret
xor
mov
mov
inc
adc
inc
mov
adc
xchg
add
xchg
call
mov
inc
std
mov
adc
out
add
pop
xchg
into
pop
icebp
loop
bound
xor
mov
or
cmp
mov
xchg
sbbw
sub
mov
test
push
cli
shlb
push
or
cmp
mov
out
in
ljmp
add
jmp
sub
subb
jge
jbe
adc
inc
jecxz
pusha
mov
push
cld
cld
aas
and
dec
je
fbld
mov
or
mov
pop
inc
mov
jae
dec
dec
or
mov
mov
mov
push
cmp
sub
stos
ja
insb
inc
and
fsubrl
inc
mov
and
iret
shll
jbe
outsb
push
popf
pop
and
mov
movsb
outsb
dec
sbb
and
pop
mov
mov
jb
dec
loop
sbb
fs
ja
and
pusha
std
sub
outsb
jbe
add
gs
sub
pop
adc
add
stc
sbb
insb
mov
shrl
test
dec
push
mov
xlat
inc
in
xchg
lahf
add
imul
xor
repz
adc
xchg
fnstsw
cmc
push
orl
into
pop
scas
scas
stos
mov
lcall
es
add
cmp
inc
fsubrl
fwait
xorl
sub
and
cli
call
out
dec
cmp
sbb
xchg
pop
ds
cmpsl
dec
ja
dec
mov
add
push
test
mov
push
jne
jl
adc
jnp
ss
pop
aam
out
add
js
dec
dec
mov
lock
dec
loopne
mov
mov
cmp
push
adc
jg
lret
cld
fxch
add
mov
imul
cltd
push
mov
xchg
imul
mov
mov
es
ljmp
mov
ret
lods
fdivl
popf
cmp
lcall
outsl
mov
jo
jno
xchg
dec
ffreep
push
push
xchg
sbb
push
pop
fninit
add
dec
inc
leave
adc
push
pop
xor
adc
cli
inc
sbb
add
insb
lret
add
dec
xchg
xor
addr16
fildl
push
mov
xor
and
nop
sti
test
lret
adcb
cmp
adc
fcmovb
push
xor
xchg
jnp
pop
mov
punpcklbw
mov
pop
add
mov
pop
mov
jmp
nop
pop
mov
xchg
pop
cmpsb
insb
rcl
pop
dec
test
movsl
pop
out
adc
or
or
mov
xor
mov
loopne
popf
aad
ret
mov
scas
repnz
push
dec
mov
leave
xorb
daa
imul
mov
mov
ret
filds
divl
add
mov
ss
mov
mov
ds
xor
rolb
mov
adc
xor
std
push
and
mov
rcrb
popa
pop
popa
inc
push
and
jb
pop
mov
and
pop
call
or
insb
mov
sub
clc
mov
fs
mov
cltd
sti
std
scas
movsb
sbb
in
adc
addb
add
inc
fcompl
jbe
outsb
fstpt
mov
push
lcall
cmpsb
cmpsl
adc
xchg
add
inc
dec
pop
dec
or
pusha
pop
outsl
imul
mov
out
and
or
push
push
cld
test
push
adc
movb
dec
pop
mov
sub
test
cmpsb
push
mov
inc
mov
icebp
pop
jo
sbb
sub
pop
stos
pop
in
sbb
pop
lds
xchg
push
cltd
bound
faddl
outsl
decb
xor
sbb
fiadds
jns
pusha
xchg
sbb
dec
test
or
leave
adc
add
stc
mov
cli
cltd
jo
test
outsl
jl
push
lods
ret
pop
xorb
mov
xor
movsl
ds
unpckhps
in
jp
je
sub
mov
sbb
clc
lea
stos
sub
xchg
pop
adc
daa
inc
arpl
xorb
test
mov
dec
mov
push
pop
add
in
pop
fnsave
fldt
mov
pop
sub
adc
jecxz
or
sbb
fnstenv
insl
or
xchg
inc
jns
lret
mov
andb
icebp
ret
or
mov
cmp
or
or
pop
mov
xor
mov
mov
shll
xor
test
movsl
lods
inc
dec
ss
popf
aaa
fidivrs
mov
push
movsb
jle
outsb
cmp
mov
es
push
loopne
mov
lods
es
push
jb
xor
dec
sarb
js
sub
std
pusha
cmp
dec
movsl
pop
xchg
fwait
andb
inc
push
push
jg
scas
int
pop
dec
mov
push
inc
push
cli
xchg
mov
xor
sbb
les
mov
or
mov
jbe
jp
adc
shlb
shr
out
xchg
ja,pt
in
enter
fstps
jge
mov
xchg
je
and
std
fadds
adc
mov
sti
cmovne
dec
add
pop
addr16
sub
lods
out
in
rcrb
nop
lret
in
sub
mov
or
les
lods
stc
mov
mov
dec
mov
inc
in
jb
mov
iret
das
out
sub
mov
lret
push
mov
xor
mov
fwait
cmp
addr16
push
popa
xchg
inc
cmp
push
fldenv
aaa
in
loop
pop
sbb
les
mov
lcall
push
mov
iret
jl
dec
lcall
cmc
test
cmp
sti
pop
xor
xchg
push
in
js
ljmp
or
jbe
js
orl
cmpsl
icebp
mov
inc
repnz
jmp
push
inc
sarl
xor
lods
loopne
dec
mov
loop
popf
call
mov
inc
outsb
mov
insl
pop
push
add
adcl
mov
clc
mov
pop
push
mov
pop
mov
inc
mov
or
push
lea
rcrb
mov
mov
popf
scas
jg
mov
test
ja
pop
inc
aad
jecxz
pop
mov
repz
mov
lret
fcoms
lods
and
dec
push
loopne
xchg
inc
adc
sub
jecxz
sti
shlb
loop,pn
inc
testl
cwtl
mov
sub
shlb
xor
or
pop
push
cmp
mov
add
out
sub
arpl
fistps
or
daa
dec
out
add
clc
pop
dec
jmp
cmpsl
lahf
mov
dec
ret
pop
pop
pop
add
pop
rolb
dec
jns
push
cmp
scas
jg
push
push
addr16
in
sub
jp
pop
xor
test
lret
loopne
inc
jp
enter
jb
inc
add
xlat
decb
int
xchg
push
xchg
cmp
ret
js
mov
test
add
jne
js
jecxz
pop
fs
adc
scas
sbb
in
lret
sbb
jmp
lahf
aad
push
loopne
jb
mov
xor
push
lea
cmp
mov
jmp
sti
mov
mov
inc
cmp
andl
inc
sub
pop
std
lods
xadd
dec
push
xor
add
nop
popa
jne
sbb
cmp
and
push
mov
adc
movsl
fcoml
loope
lods
lods
movsl
or
in
jnp
das
adc
cmc
mov
loop
sbbl
add
mov
gs
and
mov
mov
lods
jl
push
add
test
mov
lods
lods
add
movsl
cmc
and
push
loop
jl
test
sbb
mov
mov
ret
in
cld
pop
test
xor
nop
add
stos
clc
jmp
lcall
or
std
inc
fsubrs
inc
scas
loope
or
ret
push
out
pop
push
and
jb
jae
xor
mov
mov
stos
inc
adc
popa
outsl
seta
lock
fsubs
out
inc
in
jnp
sbb
adc
sbb
pop
bound
shrl
jmp
pusha
dec
jne
or
out
sbb
add
loop
call
sub
xchg
cmp
iret
mov
pop
dec
jns
xchg
shlb
pop
in
mov
pop
gs
lcall
mov
jp
es
fwait
inc
lret
je
outsl
jge
movsb
lcall
ret
outsb
rcl
es
daa
test
pop
xor
cmc
nop
push
dec
mov
pop
shrl
pop
mov
movsl
push
push
ljmp
loop
push
lock
or
cmp
cs
adc
inc
out
loop
aas
cmpb
call
int3
js
iret
in
ss
push
pop
jle
inc
pop
mov
aad
push
sub
add
cmp
into
enter
push
mov
cld
bound
xorb
inc
xor
lods
sbb
stos
inc
cs
out
and
inc
xchg
add
popa
iret
or
sub
mov
inc
cmp
lods
dec
lret
mov
hlt
pop
pop
int
scas
mov
ret
adc
jns
mov
mov
fcoml
jo
cmp
les
rolb
repnz
jp
gs
mov
xor
clc
add
pop
stos
xorl
push
lds
mov
or
arpl
jge
lods
mov
data16
pop
mov
add
icebp
sbb
jl
dec
insb
jecxz
faddl
jb
faddl
lret
push
xorb
sub
test
push
fucomi
sbbb
mov
sub
push
aas
mov
xor
jno
dec
mov
xchg
mov
or
inc
in
ss
or
push
nop
out
loope
inc
sbb
or
mov
pop
ja
mov
dec
lea
test
or
dec
nop
dec
rorb
jecxz
lds
cwtl
or
daa
push
fs
mov
test
jo
cli
scas
in
mov
cmp
xchg
add
pop
dec
in
mov
in
fs
mov
xchg
xor
mov
mov
xor
mov
cmp
outsb
repz
jge
pusha
cltd
cs
inc
mov
cmp
inc
test
or
mov
pusha
jae
loopne
fiaddl
and
ja
mov
dec
pop
xor
dec
pusha
fsubs
mov
je
pop
or
jge
push
outsl
mov
test
push
jns
les
xor
sbb
enter
sub
cmp
mov
sbb
flds
sbb
in
jg
imul
adc
roll
or
hlt
push
or
jp
sti
mov
ret
push
sbb
cmp
andl
add
pop
jg
mov
dec
or
gs
mov
mov
push
fcmovne
inc
hlt
or
das
out
rcrl
dec
jbe
add
dec
dec
adc
xor
sub
inc
rep
iret
push
adc
fadds
loopne
cmpsl
mov
cltd
lret
call
or
mov
bnd
in
cmp
add
in
sbb
sarl
sbb
pop
push
arpl
loopne
in
sub
mov
or
cltd
dec
pop
sbb
push
push
cmp
inc
adc
fstl
cmp
dec
mov
xchg
xor
add
cltd
daa
sbb
movsb
cwtl
sarl
pop
or
jbe
sub
adc
lret
call
out
test
cmp
scas
in
or
pop
dec
fadds
cld
in
mov
lods
mov
inc
pop
in
aad
into
inc
mov
xor
in
aaa
and
ss
sbb
fldl
rcll
stos
jne
adc
xor
clc
pop
pop
xlat
fldl
sub
push
imul
lods
out
dec
outsl
outsl
jmp
dec
fs
lds
xor
test
movsl
dec
sbb
push
xor
pushf
stos
cmp
sub
fidivl
aad
xchg
cmpsl
int
xchg
cltd
cs
fdivrl
pop
xor
fsubl
rol
push
sbb
jbe
sub
clc
pop
push
mov
fsubrs
dec
mov
xor
test
hlt
mov
jnp
mov
xrelease
mov
and
icebp
pop
jo
or
mov
sti
add
lods
into
das
lods
sbb
cmpsb
xor
mov
notl
push
mov
bound
fdivl
cmp
loop
movsb
ffreep
aaa
adc
and
and
pop
daa
adc
fimull
mov
add
xor
and
adc
std
mov
and
lcallw
pop
iret
sahf
xchg
inc
stos
sbb
fldcw
and
and
or
adc
mov
pop
fs
adc
or
cmp
push
dec
fadds
cmp
fbstp
jbe
xchg
and
sub
sbb
mov
xor
out
test
push
out
jno
lds
aaa
adc
mov
or
in
add
add
mov
xchg
push
ficoms
popa
xchg
add
fsubr
mov
bound
ljmp
xchg
mov
mov
sarb
in
mov
jns
cmp
push
mov
xor
nop
jns
add
and
xchg
shlb
dec
mov
lcall
addl
fistps
cmp
jmp
pop
insb
add
out
cmp
dec
loope
stc
adc
into
popa
out
sbb
addr16
push
jno
popa
jg
movsb
jle
jle
jae
repnz
mov
pushf
dec
dec
pushw
pop
in
adc
clc
sub
arpl
adc
lods
outsl
inc
stc
xchg
ss
xor
lods
mov
mov
shlb
addr16
sub
jno
scas
and
mov
mov
and
cmp
imul
addr16
into
enter
inc
cmpsb
xchg
add
mov
lds
aaa
sub
ret
mov
aad
movsl
add
jg
cld
mov
jno
xchg
push
lret
cld
into
insb
testl
out
fstpt
cmp
lods
pop
sub
mov
xor
ret
cmp
pop
cwtl
pop
add
roll
xlat
int3
stos
pop
mov
aam
pop
pop
push
mov
lea
int
mov
fldt
mov
jecxz
or
pop
sbb
cs
xchg
pop
out
clc
int3
orb
inc
sbb
sbb
xchg
and
pushf
cmpsb
dec
jge
pop
outsb
push
dec
hlt
daa
mov
je
xor
xor
add
push
rclb
xchg
std
mov
push
mov
sub
hlt
out
pop
cli
mov
xchg
mov
sub
xchg
cs
xchg
xchg
and
loopne
sbb
lea
js
aas
stos
add
pop
or
rclb
lods
pop
mov
push
push
and
sub
push
add
dec
ss
rcrb
mov
sbb
jnp
pop
cmc
mov
dec
or
mov
add
data16
popf
push
addr16
out
push
scas
pop
and
aam
mov
cs
fldenvs
das
fimuls
fwait
dec
ss
in
inc
cmp
or
push
mov
inc
jnp
pop
gs
mov
stos
out
inc
mov
push
sbb
lds
jne
fsubrl
pop
psubusw
xchg
or
add
out
dec
cmpsb
or
add
xchg
les
and
gs
add
ret
rol
das
sbb
adc
push
xchg
cli
xchg
mov
push
enter
fsub
int
mov
xchg
jle
push
lds
sub
into
mov
fdivr
push
call
cmp
xchg
or
cs
jne
test
sbb
scas
sub
add
inc
xor
push
cmpb
pop
push
inc
je
cmp
pop
movhps
jo
push
jo
adc
mov
jne
cmc
or
sub
cs
xor
pop
cmc
shrl
ffreep
adc
or
addr16
pop
fwait
mov
jecxz
or
cld
cmp
jo
jnp
ret
sahf
xor
adc
roll
sbb
sar
adc
es
lret
pop
fildl
add
shl
aam
sbb
jge
or
jo
or
mov
rorb
loopne
lret
mov
push
dec
xchg
and
lahf
xor
jp
push
push
cmp
fs
dec
mov
jl
in
aaa
shrl
fmuls
popa
mov
mov
dec
inc
int
push
xor
jbe
movsb
xchg
adc
pop
pop
mov
pop
jp
jmp
xchg
mov
loope
ret
xor
cli
xchg
mov
mov
bound
clc
and
jo
and
and
dec
loope
add
shll
out
xlat
or
cmp
sbb
xor
sti
cltd
mov
dec
adcb
xchg
ss
adc
hlt
sbb
fnop
in
pop
mov
fsubrp
lods
aam
es
cwtl
test
and
and
push
out
lahf
pop
lock
in
mov
scas
adc
and
push
fnstcw
xorl
sub
shl
pop
adc
mov
repz
cs
mov
push
shlb
mov
mov
xchg
movsb
ret
test
or
dec
xchg
arpl
pop
ja
pop
aas
mov
fwait
and
fnsave
ja
inc
push
cwtl
out
inc
notb
faddl
in
dec
jge
popf
sti
pusha
scas
repnz
jbe
mov
call
adc
insl
enter
inc
enter
ret
ljmp
jno
loope
sub
push
lock
out
sti
push
fsts
ja
cmp
fsubrs
lods
sub
outsb
hlt
push
es
mov
sbb
imul
push
push
inc
push
dec
adc
sbb
pop
adc
cmc
inc
cld
pop
mov
push
pop
in
or
pop
and
movsb
push
in
inc
pop
in
mov
subb
add
test
push
nop
xor
lcall
test
nop
mov
cltd
test
inc
test
jbe
insb
inc
push
xchg
or
sbb
jno
ret
push
lret
gs
movsl
jle
jp
pushf
jns
adc
lahf
add
lcall
sbb
dec
xor
test
or
out
inc
int3
mov
mov
dec
lsl
push
dec
push
and
push
cwtl
xchg
std
pop
call
into
pop
nop
sbb
fwait
insl
cmpsl
aam
dec
inc
cltd
dec
xor
jl
sahf
data16
mov
adc
lahf
mov
outsl
pusha
inc
aas
arpl
pop
dec
adc
push
jecxz
xor
cmp
in
js
loope
mov
addb
push
fstl
push
and
cmp
mov
sub
mov
push
inc
jns
andl
popa
add
xchg
cmc
out
cmp
mov
outsl
out
mov
mov
imul
aad
fldenv
jo
sbb
dec
mov
pop
push
cmp
lcall
push
sub
cld
xlat
xor
lea
dec
lds
dec
mov
push
cmp
xchg
mov
test
mov
ror
push
jl
xchg
push
jb
mov
add
adc
cltd
jecxz
inc
or
mov
dec
clc
aam
push
dec
ja
cmp
call
push
sbb
bound
pusha
push
test
dec
push
lret
int
lcall
movsl
movsl
adc
popa
or
sbb
xor
cmp
ds
inc
jne
data16
out
pop
adc
mov
in
nop
mov
mov
sub
dec
xlat
jbe
js
xchg
fisttpl
dec
incb
orl
mov
pop
nop
bound
gs
shlb
mov
mov
push
or
rcrw
fwait
mov
cwtl
add
sbb
lret
adc
pop
jo
ss
sbb
sbb
orl
or
rorl
mov
or
pop
std
int3
sub
mov
outsl
flds
lcall
shrb
es
loopne
sub
inc
mov
push
fldl
popl
mov
xor
mov
imul
test
xlat
and
loope
daa
mov
adc
popw
popf
leave
jg
imul
ret
in
dec
xor
mov
rclb
pop
xchg
in
adc
aam
lock
pop
lods
pop
into
pop
fwait
sub
daa
pop
jbe
and
push
and
push
jo
nop
mov
scas
lods
push
cli
xchg
shl
ja
aas
dec
xor
popf
jb
pop
xor
xchg
push
or
push
or
out
xchg
ret
or
pop
pushf
stc
sbb
fdivl
xchg
int3
test
xchg
inc
test
xchg
enter
add
or
outsl
mov
mov
in
add
out
mov
idiv
in
std
cli
fstl
cli
cmpb
pusha
xchg
insb
and
rol
inc
nop
decl
ja
lret
and
inc
mov
mov
mov
fcmovnbe
lock
fbld
mov
outsb
push
mov
movsl
lea
in
dec
add
sub
lods
cmp
sub
mov
inc
fbld
gs
call
pop
add
push
jg
in
lods
in
int
das
sub
je
inc
test
and
mov
cmp
jecxz
orl
inc
xchg
rclb
cld
xchg
clc
fmull
andnps
rol
mov
in
cmc
jg
and
cli
in
ror
pop
or
lods
in
dec
movsb
aaa
mov
test
xor
jbe
test
adc
jmp
xchg
inc
pop
add
mov
xor
icebp
pop
xchg
rolb
sub
xor
ss
fisubrs
addr16
mov
mov
xor
fsubl
or
lcall
cmp
test
gs
sbb
push
popa
inc
and
jnp
dec
add
pushf
or
push
test
inc
es
mov
lcall
jns
jmp
in
fidivrs
fwait
dec
and
add
pushf
nop
popa
xor
dec
jb
add
mov
mov
jns
inc
xchg
jno
dec
test
sub
push
push
inc
vunpcklps
enter
add
loope
fmuls
mov
rcl
cmp
mov
xor
jl
jl
push
enter
loope
sahf
lods
aad
push
pop
cwtl
enter
es
das
repz
call
xor
push
mov
dec
in
sbb
and
stos
adc
xor
mov
ret
loope
mov
jb
mov
adc
bswap
dec
mov
scas
aas
stc
insl
add
cld
loope
dec
adc
cmpsl
jp
jl
leave
and
insb
out
ljmp
lcall
mov
rcr
dec
and
int3
and
dec
jb
dec
mov
addr16
hlt
push
and
in
scas
xor
movsb
cwtl
xchg
mov
cli
into
leave
daa
test
adc
sbb
cltd
ret
push
mov
sub
sbb
sahf
pop
sbb
pop
imul
push
push
or
jnp
push
cmp
cmpsl
push
idivl
cmp
mov
das
mov
mov
adc
cmp
iret
dec
xor
shl
ja,pt
jp
popa
pop
data16
sbb
mov
push
out
in
shll
sbb
cs
xor
and
daa
xor
pushf
push
pop
outsb
push
push
or
stc
fadds
xchg
mov
push
mov
loopne
sub
cmp
shl
pop
ret
fdivrl
mov
sub
mov
inc
arpl
mov
sahf
movsl
mov
sahf
std
jl
lcall
push
pop
loop
lock
shlb
cli
jbe
or
mov
pop
sub
push
sbb
dec
xchg
adc
cmpsl
mov
nop
or
and
pop
mov
xor
rcl
insl
adc
incb
testl
movsl
faddp
sub
inc
inc
jno
pop
jge
pop
xor
cmc
enter
add
sub
sub
test
xor
mov
daa
mov
xchg
lea
mov
and
mov
inc
ret
or
arpl
scas
fcoml
pop
mov
cs
mov
jecxz
fisttps
xor
pop
and
jecxz
cwtl
xchg
ljmp
adc
cmpsl
xor
and
push
sbb
xchg
leave
lret
enter
xor
ret
iret
into
shlb
inc
mov
neg
push
mov
repnz
rcll
pop
pop
scas
push
pop
gs
addr16
and
mov
mov
xchg
stc
inc
inc
mov
sub
and
dec
push
mov
mov
mov
ljmp
lret
insb
rcll
scas
loopne
mov
dec
jo
je
jp
iret
popa
cmp
cmpsl
fwait
mov
mov
lret
outsl
out
mov
negb
pop
int
shrd
mov
call
mov
xchg
mov
rol
dec
dec
push
std
jno
sub
push
es
fnsave
jae
pop
push
jle
adc
lea
mov
sti
xchg
in
fsubl
in
inc
sub
fcompp
jne
es
data16
scas
loop
out
fcmovnb
xchg
push
pop
adc
xchg
mov
cmp
jne
dec
clc
and
cmp
xor
lock
iret
daa
mov
mov
xor
xchg
test
rcrl
test
movsb
mov
into
dec
scas
inc
jbe
cmp
mov
xchg
loopne
lret
push
sbb
out
push
inc
mov
lods
cmc
add
cld
adc
insb
xchg
xchg
or
sub
es
jnp
shll
out
daa
es
push
mov
pmaddwd
in
push
aam
pop
add
cwtl
jmp
hlt
mov
jnp
stos
movsl
lods
jnp
ficoml
xchg
mov
push
xorl
gs
ds
imul
jae
lods
lret
xor
jb
xor
inc
xor
mov
pop
fstpt
or
in
cmp
or
call
push
fbld
out
push
add
jle
lcall
je
adc
mov
out
dec
insl
in
and
jae
xor
push
popa
pusha
xchg
adc
aad
sub
call
mov
cld
inc
lcall
mov
sbb
fisubs
jmp
js
add
or
xchg
inc
or
sbb
xchg
xchg
adc
or
jns
or
push
or
or
test
test
leave
and
loope
jbe
insb
adc
mov
sub
aam
xchg
subl
hlt
ret
das
push
fidivrs
and
not
push
ret
add
and
mov
fbstp
jnp
xchg
lahf
dec
sbb
lcall
loopne
popf
js
jl
popa
gs
into
jne
shl
subl
fmull
pop
loop
and
push
call
mov
cmp
std
sahf
pop
pop
jge
inc
dec
sbbl
js
fs
loopne
sub
out
in
arpl
lds
lods
aas
es
roll
push
xchg
lcall
sbb
movsb
enter
cmp
sub
movsl
das
aam
aam
loop
mov
pop
jmp
int
push
mov
push
nop
lods
out
jmp
pop
inc
mov
and
xor
push
push
mov
pop
pop
pop
rcll
bound
out
and
xor
mov
or
cli
xchg
and
iret
sahf
jne
push
mov
fidivrl
enter
xchg
mov
mov
push
test
movb
shlb
jb
int3
fildl
cmpsl
cmp
lods
call
mov
pop
push
mov
or
sub
rorl
add
arpl
or
insb
xor
jmp
ds
cwtl
enter
mov
jmp
sbb
movsl
fnstcw
adc
mov
adc
in
inc
cwtl
sbb
dec
ja
hlt
jl
dec
dec
xchg
call
mov
insl
rclb
mov
lods
mov
mov
push
mov
inc
sbb
in
jl
xchg
dec
test
getsec
sbb
mov
insl
pop
popa
jne
rolb
int3
cmp
dec
outsl
xchg
inc
push
popf
test
mov
inc
jnp
mov
lea
cmp
cmpsb
push
pop
xor
aas
or
movsl
inc
jl
mov
mov
setg
fsubrl
inc
data16
and
cmp
xchg
mov
notl
mov
insb
dec
test
xlat
cmp
xor
jne
sbb
sahf
adc
imul
add
jo
jns
fistpll
insb
lods
mov
xchg
je
fwait
xor
mov
mov
into
daa
push
push
aad
popa
dec
imul
or
dec
mov
lds
mov
aas
and
das
les
ret
imul
fistpl
pop
loop
sbb
fcomps
inc
pop
lock
insb
aaa
ds
subl
push
push
popf
nop/reserved
add
xchg
out
pop
fstpl
iret
mov
outsl
xlat
mov
cmp
mov
mov
jg
jns
jp
add
jno
test
daa
shl
inc
fsub
jmp
xor
out
ret
std
mov
pushf
lds
aaa
mov
imul
out
jecxz
jne
mov
loop
jl
fsubr
stc
mov
xor
sub
xchg
push
imul
pusha
sbb
ss
imul
ror
or
jns
int
cli
xor
mov
cli
lret
rcll
in
js
aaa
xor
cltd
bound
call
xlat
loope
inc
push
push
cmp
lahf
cltd
insb
or
sub
sub
inc
outsl
sub
sub
adc
loopne
sub
mov
gs
rcrl
sbb
xlat
ljmp
out
mov
imul
clc
mov
mov
ret
mov
sbb
fmulp
pushf
adc
stos
shll
lea
cmc
xchg
aaa
or
jge
sub
jle
add
aaa
pushf
in
jle
loopne
inc
and
pop
sub
sti
repz
adcb
adc
or
jnp
mov
cwtl
push
xor
jno
data16
out
sub
outsb
dec
add
jge
xchg
jbe
and
leave
cmpsb
mov
inc
push
insb
xchg
andb
mov
xor
jmp
mov
sbb
stc
rclb
fsubl
gs
cmp
icebp
enter
add
lret
fdivrp
addr16
mov
or
or
mov
adc
dec
sbb
data16
xchg
fsubr
fnstcw
xor
adc
pop
xrelease
xchg
xchg
sahf
jb
addr16
cwtl
xchg
lods
clc
test
push
jmp
hlt
outsl
push
in
or
mov
mov
shll
and
std
out
sub
jp
sbb
mov
and
jne
jo
cld
movsl
pop
lret
inc
call
pop
mov
inc
fnstcw
das
and
xchg
aad
in
test
adc
pop
push
sarb
sbb
scas
lods
sbb
icebp
sbb
nop
and
or
add
sub
fprem1
int
inc
mov
lods
push
sahf
stos
addr16
and
andb
pop
dec
xchg
sbb
scas
inc
cmp
in
xchg
adc
sub
lds
arpl
mov
enter
bound
add
mov
inc
fsts
push
xchg
movsl
jle
mov
inc
bound
xchg
ret
push
imul
sub
xchg
pop
shrb
test
filds
aaa
or
aas
sub
mov
sar
or
mov
jle
xor
mov
pop
movsb
push
mov
xchg
lds
out
inc
inc
cmp
cmp
xchg
mov
pushf
popa
fcompl
pop
adc
adc
insl
push
jae
adc
or
std
movsb
fistps
movsl
in
xchg
int
mov
subb
or
ss
loop
cmp
mov
push
ret
dec
pop
out
ja
xor
sbb
or
mov
mov
dec
xor
jp
mov
ja
push
inc
ss
mov
pop
and
movsl
xor
and
es
cmpl
jns
jge
shl
jb
or
jp
mov
or
push
fcmovne
aam
mov
arpl
repz
movsl
sub
sub
ljmp
ljmp
dec
xchg
jnp
xor
aas
imul
cmp
push
jne
iret
mov
repnz
adc
dec
in
sub
sbb
test
mov
leave
lret
jl
mov
mov
push
fstpl
stos
sbb
mov
sub
sbb
push
jge
into
push
and
sub
pop
into
out
cltd
lret
mov
push
jne
add
or
cli
or
jge
fsubl
out
insb
adc
jo
dec
into
jg
xor
cs
sbb
dec
or
cmp
sbb
inc
ja
add
dec
mov
into
xchg
and
sbb
sub
mov
sbb
out
sbb
dec
stos
and
mov
mov
test
xchg
mov
jo
fdivr
into
iret
call
lahf
lret
imull
dec
lahf
loopne
adc
or
out
es
xchg
cwtl
pop
fimull
fwait
pusha
and
clc
sbb
cmp
js
fiaddl
mov
inc
push
test
jp
sbb
fsubrs
in
imull
cmpsb
mov
xchg
std
mov
and
leave
dec
sbb
rolb
xor
xchg
sbb
out
cltd
sub
sub
xchg
mov
sbb
pop
pop
sub
jb
jb
xlat
insb
mov
outsl
inc
stos
fisubl
pushf
call
push
sahf
mov
adc
xchg
or
and
shlb
int
inc
sbb
dec
aam
out
dec
jge
xor
pop
mov
int
pop
mov
cmp
aaa
jne
adc
dec
pusha
jg
pop
je
sbb
out
lcall
cmp
cmp
pop
lret
adc
ss
out
fnstsw
adc
decl
fwait
ret
xchg
int
sbb
mov
test
je
outsl
pop
ja
add
pop
mov
fstl
dec
xor
mov
das
gs
in
xor
es
gs
mov
sub
cmp
scas
imul
sub
cmpb
int3
dec
sahf
test
cltd
xchg
xchg
pop
fdiv
mov
adc
jae
cld
fcoms
lock
js
mov
nop
insb
cwtl
fidivrl
push
and
imul
add
cmp
add
fldcw
dec
mov
inc
ret
rclb
repnz
cmp
pop
sti
fldln2
jp
int3
rep
rcrl
jbe
cli
lock
call
mov
fs
sbb
popa
push
fisttpll
or
stc
loopne
pop
lahf
cmp
push
pop
xchg
cmp
mov
add
add
das
mov
fbstp
pop
cmp
cmc
cmp
jmp
inc
adc
add
mov
shlb
scas
xchg
xor
xor
test
or
or
iret
adc
mov
cld
dec
les
aad
clc
sbb
or
add
daa
dec
jb
or
fucompp
mov
loope
pop
test
in
ret
hlt
dec
sbb
rcrb
jns
xor
call
adc
dec
and
fadd
hlt
cmp
ss
loope
jl
test
sbbb
outsb
fs
mov
ljmp
mov
push
mov
stos
inc
pop
js
insl
mov
sub
std
xchg
fists
movsb
lock
shll
or
movsb
das
cmp
push
add
aad
cmp
mov
enter
add
ljmp
push
repz
xchg
xor
cmc
or
jg
push
push
sbb
push
fwait
inc
lcall
mov
and
aad
fcompl
jo
cmpsl
push
mov
jmp
cmp
mov
faddl
mov
mov
std
inc
lds
ret
stos
adc
ss
ljmp
cld
push
cmpsl
push
stos
fs
in
pusha
mov
lods
icebp
cld
in
addr16
sahf
fldcw
movsl
out
push
call
shll
add
sub
insb
pop
loope
inc
lods
mov
js
mov
adc
shll
push
mov
xchg
andl
js
cmp
ficoml
or
adc
push
loope
xorl
xlat
jb
aam
js,pn
mov
mov
push
mov
in
loope
fnsave
out
pop
jbe
shl
lcall
movsb
fucomip
mov
add
push
fs
je
rcll
pop
mov
sti
out
pop
test
fdivl
jnp
sbb
mov
jbe
xchg
inc
ret
lcall
or
sub
ds
mov
insl
sahf
ja
xor
push
cli
imul
push
dec
lods
loop
filds
fdivrl
cwtl
js
js
ficompl
inc
jno
xor
xchg
cmp
aam
mov
jb
mull
push
jbe
aam
xchg
or
push
cmpsb
jge
and
int3
dec
and
pop
adc
push
dec
xchg
sbb
std
repnz
lds
xchg
jnp
test
dec
cld
mov
gs
movsl
xchg
fdivrl
ljmp
daa
imul
sub
rolb
dec
dec
in
dec
jmp
jp
xchg
sbb
dec
push
dec
mov
sahf
mov
loope
dec
sub
inc
sub
movsl
icebp
test
mov
adc
pop
lods
pop
xchg
in
sub
push
in
push
push
and
pop
mov
inc
dec
pop
mov
push
jp
pop
and
lods
push
xor
clc
and
cmpsb
stos
cmp
insl
std
scas
and
mov
cmpsl
pop
int
stc
imul
ljmp
xchg
js
jae
adc
mov
push
cmp
sbb
ds
movsl
xor
mov
in
xor
jbe
mov
mov
mov
mov
jae
aad
push
mov
add
mov
imul
push
shr
lds
dec
push
sbb
mov
mov
cmc
jecxz
in
xchg
jnp
jmp
mov
cltd
mov
xchg
push
test
insl
fnsave
sbb
add
lock
xor
rcl
in
xchg
cmp
jl
or
aad
dec
add
popf
int3
enter
int
xchg
mov
inc
ret
lods
repnz
pop
ficomps
stos
in
sbb
out
jge
adc
fwait
mov
ss
arpl
out
and
dec
mov
add
icebp
add
cmp
mov
aam
add
pusha
loopne
dec
ljmp
subb
shll
dec
in
xchg
mov
and
mov
mov
ss
mov
gs
mov
and
jns
scas
imul
les
xchg
cmpl
push
pop
cli
aas
pop
pushf
adc
dec
stc
xchg
push
adcl
mov
icebp
inc
add
in
lret
fcmovbe
or
add
cmp
pop
iret
and
call
mov
xor
out
mov
xchg
sti
jp
jp
es
out
inc
inc
inc
daa
out
outsl
adc
mov
and
sub
mov
inc
adc
movsl
daa
jne
pop
out
imul
cld
repnz
popf
icebp
cld
dec
test
dec
inc
push
and
push
andl
sub
mov
cmp
sub
es
mov
mov
call
gs
or
outsb
cs
push
mov
gs
ficompl
jl
int
std
lock
cwtl
adcl
test
ss
cmp
mov
shrl
mov
stc
mov
daa
lcall
mov
xchg
nop
adc
push
pop
test
rcrl
hlt
add
xchg
and
jo,pt
jl
addb
cs
mov
rolb
lds
jno
or
aam
xchg
or
and
sub
jne
sahf
mov
ret
pop
add
inc
jo
ljmp
cli
aas
dec
mov
loopne
xor
cmp
sub
pusha
popf
xlat
lea
mov
iret
stc
push
stos
test
xor
push
icebp
iret
mov
fcmovbe
test
andb
inc
add
push
sub
les
sub
inc
repnz
pop
dec
shl
dec
fnstcw
mov
mov
in
les
jl
imul
sbb
or
aad
les
or
cltd
pop
add
push
nop
inc
cmp
adc
ja
cwtl
mov
pop
int
xor
cmp
jo
mov
push
lcall
cmp
shrl
xor
push
pop
inc
jno
sub
dec
test
movsl
pop
push
xor
popa
adc
inc
adc
out
inc
push
mov
shl
jecxz
mov
movl
adc
dec
sbb
dec
inc
inc
mov
xchg
and
outsb
push
sbb
mov
push
loope
cmpsb
xchg
imul
mov
clc
sub
mov
ja
pop
inc
aam
je
enter
mov
cwtl
xchg
imul
lret
lods
mov
mov
pop
out
movsl
loopne
push
fsts
lcall
mov
lods
stos
inc
loopne
mov
mov
popf
aaa
cmpsb
mov
push
rclb
test
push
std
inc
or
in
mov
jp
and
sbb
ror
repz
cmpl
and
jecxz
loopne
lea
lret
imul
lret
jae
push
dec
lret
mov
fwait
and
inc
pop
ret
add
aam
push
push
push
test
cli
pop
push
cmp
fisubrl
xor
push
icebp
dec
pop
cld
jge
mov
and
dec
mul
fs
loope
lock
cmp
jle
movsl
cmpb
data16
push
adc
ss
aad
jle
or
enter
std
push
pusha
adc
jns
push
leave
rcr
lods
jne
dec
xchg
in
cmp
imul
into
fcmovb
je
jge
add
xchg
push
popa
in
push
sub
xchg
push
stos
cwtl
imul
movsb
push
mov
mov
mov
test
inc
vmovntps
lahf
bts
loop
cs
movsl
pushl
mov
daa
addr16
sub
lock
movsl
lds
popa
ljmp
push
sub
cmp
inc
aad
push
mov
sub
loope
cmp
outsl
rclb
leave
jns
aad
inc
mov
adc
cmp
int3
or
sub
clc
or
sub
push
ret
dec
arpl
mov
repnz
das
inc
dec
ret
jno
sub
fxch
or
cmp
out
std
fisubl
and
pop
jo
push
imul
dec
ljmp
push
je
ret
dec
xchg
daa
lods
fsubrs
sbb
sbb
cmpsl
rep
lods
xchg
test
jae
xor
fidivrl
jp
mov
jmp
xlat
fs
jge
jae
mov
inc
sbb
push
push
mov
loopne
and
scas
adc
mov
in
in
enter
outsb
push
cmp
call
out
or
frstor
xchg
stos
out
jmp
and
subb
xor
xchg
add
mov
pop
lcall
and
push
lret
addr16
jae
int3
addb
and
xchg
add
mov
sbb
lahf
inc
scas
push
rcll
push
pop
cmp
and
out
adc
loope
mov
fcmovb
or
jne
insl
lods
jae
pop
aam
sub
push
dec
or
and
inc
lock
fnstsw
rorl
aam
arpl
outsl
mov
or
push
stos
and
mov
test
jg
cmp
sarl
jnp
pop
loope
jp
out
mov
dec
lcall
add
in
jns
inc
xor
mov
xchg
xlat
cmpsl
shll
adc
pop
xor
inc
jge
lret
or
sarb
pop
mov
rorl
or
fadd
icebp
lock
sahf
mov
push
sub
cmpsl
jmp
cmc
shlb
enter
dec
jp
jno,pn
fcompl
mov
inc
mov
sbb
mov
xchg
sbb
in
lahf
xchg
icebp
lds
nop
push
mov
xor
fsubrl
insl
lea
in
mov
cltd
mov
fsts
sbb
imulb
jle
add
scas
roll
cld
push
cld
dec
lds
outsb
adc
ret
sbb
jb
mov
sub
int3
in
pop
cmp
mov
push
out
jmp
lods
or
jecxz
ds
aas
jg
test
cmp
mov
shlb
mov
notb
shrb
mov
push
mov
pop
loope
loope
jb
xor
leave
xchg
leave
add
adc
popa
out
pop
ljmp
xchg
jg
sbb
leave
sbb
jne
and
test
jno
push
push
mov
out
fsubrs
mov
into
mov
adc
out
sub
inc
daa
pusha
pusha
jmp
int3
sti
dec
mov
mov
loope
sub
inc
push
cmpsb
ljmp
imul
mov
and
and
mov
fdivs
call
and
mov
test
cmp
cwtl
mov
in
and
lret
jne
sbb
mov
fbstp
jb
pop
sete
divb
lret
test
mov
jg
test
cmpsl
jp
jb
add
mov
popf
jecxz
xor
mov
sbb
loope
push
jo
cmp
mov
imul
js
in
nop
movsl
fwait
xor
inc
popa
xor
cmp
ljmp
or
inc
aad
loop
insl
sbb
sbb
mov
jge
inc
push
push
xor
aas
mov
xchg
rcrl
xchg
xchg
cmpsl
rcr
or
loop
fimull
pop
lret
mov
lcall
and
imul
jp
repnz
out
imul
in
dec
into
push
lret
pop
je
xchg
xchg
push
pop
mov
pop
aaa
lret
mov
pop
adc
mov
out
call
pop
add
fdiv
repnz
push
dec
cmp
pop
lock
xchg
pop
inc
movsb
jno
imul
xchg
or
cwtl
cmp
cwtl
pop
jge
lock
dec
call
sbb
mov
lahf
xor
jmp
or
mov
out
out
and
repz
cmp
test
leave
in
push
ss
aas
mov
mov
and
dec
xor
call
mov
xlat
xchg
ret
jle
rcrb
test
ja
jg
loope
inc
push
int3
and
mov
nop
push
jp
push
popf
leave
lcall
lods
ret
lahf
jo
fldcw
call
fs
push
cltd
aam
jbe
mov
clc
push
scas
imul
repz
cmp
mov
cli
xchg
lahf
cs
outsl
lret
and
popa
mov
rcrw
in
add
inc
test
cmp
sub
inc
movsb
push
es
arpl
fmuls
std
jp
fs
mov
clc
int
call
clts
lea
jge
fistl
jno
mov
cmp
inc
jg
movsb
mov
xor
mov
in
xchg
pusha
stos
mov
or
push
push
leave
push
loope
xor
jmp
jge
arpl
dec
enter
rcr
clc
sbb
jo
cmp
sbb
add
add
out
pushf
lds
lock
enter
stos
mov
pushf
pop
xchg
daa
mov
cltd
pop
shrb
xchg
inc
cmpb
jb
lea
jl
mov
mov
in
xchg
dec
or
pop
jo
rcrl
jne
arpl
xchg
faddl
xorb
and
outsl
adcb
cltd
call
pop
dec
lcall
cmpsb
add
jne
pop
push
or
and
adcl
lea
icebp
dec
testb
push
outsb
fs
jp
imul
cmpsl
lock
mov
inc
popf
sahf
sbb
jp
aaa
adc
in
push
add
icebp
sub
int3
or
js
daa
sti
lds
or
mov
xor
testb
rorb
call
lods
lds
xorl
and
push
adc
rcrl
sub
jno
add
sbbb
push
adc
fcoml
cli
and
inc
bnd
in
stos
sub
mov
out
out
filds
xor
cli
call
jmp
sbb
jp
inc
push
sub
push
pop
pop
mov
lret
leave
mov
sbb
aas
out
outsb
idivb
add
dec
lret
inc
outsb
xorb
into
jno
push
mov
sub
sub
sbb
adc
pop
and
dec
rcl
iret
jae
rcrl
lcall
adc
mov
cmpsb
and
dec
loope
or
dec
mov
sbb
fsubp
lahf
in
mov
andb
xchg
in
sbb
test
clc
bound
out
in
cmp
push
fdivs
iret
inc
push
jns
cli
lcall
cmp
cmp
push
dec
add
xchg
in
ret
stc
inc
mov
sbb
and
mov
pop
rcl
in
pop
xchg
fdivrs
or
or
in
repz
aas
testl
fcoml
out
cmpb
dec
insb
jne
decb
push
mov
fucomip
js
dec
and
test
sbb
es
fwait
ds
mov
lods
mov
pop
mov
lcall
enter
dec
xchg
inc
and
ds
out
stos
adc
sbb
gs
jle
mov
adc
mov
test
lea
outsb
jne
and
cmpsb
dec
pusha
jb
and
hlt
hlt
sbb
mov
fisttps
inc
loop
fistps
ja
out
push
xchg
xchg
cltd
pop
rcl
negl
pushf
imul
into
mov
or
mov
xlat
jmp
sbb
and
mov
fwait
xor
ficomps
xchg
jmp
loop
or
out
xchg
jne
stos
hlt
loopne
xchg
xchg
or
aaa
push
js
nop
ret
adc
and
push
mov
pop
lcall
test
cmp
cld
mov
mov
scas
inc
push
shlb
mov
in
cli
shll
fdivs
popa
imul
mov
shrb
inc
lods
es
rcrb
sbbb
cld
lds
popf
pop
imul
sbb
in
mov
add
pop
in
add
pop
xor
lds
xchg
add
test
adc
cli
adcb
jns
mov
push
fdivl
and
inc
orb
pop
or
out
in
cmpsb
cwtl
lea
fyl2xp1
rclb
cli
xchg
add
subb
xor
mov
dec
cli
push
notl
inc
out
adc
inc
aaa
jp
push
dec
lret
popf
cmp
lods
je
daa
fnstenv
fcoms
fs
rcrb
inc
popf
xchg
pop
and
ds
das
add
cld
decl
stos
jae
sub
adc
addr16
js
xor
addr16
mov
xchg
mov
jp
call
mov
mov
rcrl
fdivrs
push
mov
sub
add
idivl
jg
ja
inc
pop
sub
int
cmpsl
add
sbb
stos
and
stos
or
push
mov
daa
or
popa
popf
push
and
sub
aam
dec
lcall
sqrtps
pop
and
mov
push
test
xor
lret
out
ret
mov
sub
in
or
add
cwtl
xor
cmp
gs
in
out
mov
or
jae
or
push
dec
mov
sbbl
lret
mov
out
add
push
pop
ffreep
ss
xor
and
addr16
xchg
and
or
cmp
push
popf
iret
mov
gs
mov
les
xorl
je
sub
clc
xor
mov
inc
jns
jno
inc
xchg
jmp
or
in
mov
les
js
aad
dec
rolb
inc
test
cmp
outsb
fsincos
add
popa
hlt
mov
popa
cltd
inc
inc
mov
mov
std
dec
xchg
pop
daa
pop
cld
push
fbstp
push
imul
push
push
inc
out
xorl
adc
xor
lods
cs
push
add
repz
and
jae
inc
mov
mov
jle
adc
into
mov
inc
scas
leave
ss
repz
stos
adc
stos
cmp
add
jmp
and
adc
pop
movl
xchg
mov
mov
push
repnz
lods
push
cltd
adc
and
ljmp
push
pushf
lret
pop
cli
sub
cltd
lret
movsl
mov
out
inc
or
jp
jno
pop
and
or
lcall
repnz
ret
push
add
fldcw
daa
mov
jp
xor
mov
sbb
push
add
xchg
push
scas
mov
andl
xor
data16
cmp
jbe
lret
cmp
sahf
js
mov
sub
xor
push
jne
imul
adc
in
mov
jnp,pt
mov
sub
int3
cmc
dec
mov
cmp
scas
jno
sub
push
dec
and
mov
cltd
jg
dec
pop
jnp
push
negb
fidivrs
adc
inc
ret
out
push
leave
fucomi
shll
push
mov
jb
ja
sub
lahf
mov
inc
mov
push
enter
aas
jecxz
outsl
dec
fisttpll
inc
mov
add
jns
adc
loope
sbb
add
icebp
add
fidivrs
mov
mov
pop
mov
inc
inc
cwtl
cltd
lcall
ljmp
lcall
movsl
loopne
hlt
mov
lock
mov
test
sbb
add
push
and
pop
xor
loop
adc
stos
enter
jg
std
pushf
incb
fsubrl
mov
arpl
lret
mov
sbb
hlt
arpl
mov
mov
in
push
ljmp
xor
ss
sub
adc
cmpsl
lahf
popf
inc
imul
decb
adc
std
dec
jmp
jb
or
adc
jne
xor
dec
mov
dec
movsl
cs
cmp
popf
cli
cmc
clc
xor
loop
jno
je
mov
pop
faddl
cli
test
ret
sbb
aad
mov
mov
fcomps
xchg
xchg
mov
dec
ret
test
stos
pop
fs
mov
push
negl
in
and
lcall
insb
cltd
movb
mov
inc
xorb
dec
cmp
xchg
arpl
xor
lods
mov
fiadds
jl
movsb
mov
add
inc
fwait
sub
adc
pop
shrb
int
push
jb
xchg
loopne
xchg
js
test
sbb
inc
sub
pop
roll
push
push
les
clc
sub
or
cmpsb
sarb
jg
mov
jnp
mov
xor
cmpsb
arpl
loope
sbb
mov
in
js
xor
out
mov
out
lahf
insl
push
in
insb
es
mov
push
je
imul
daa
iret
adc
int
mov
xor
inc
bound
fcomp
idiv
or
es
movsl
mov
and
jecxz
sarb
inc
pusha
scas
repz
mov
test
fsubrl
pusha
mov
loop
out
cli
dec
push
test
mov
add
dec
cmp
out
cmp
xchg
jmp
scas
jge
or
icebp
cmp
int
sub
ret
mov
sbb
test
sarb
sbb
test
mov
aad
sub
or
adc
or
orb
mov
vmovaps
nop
and
cmp
into
out
cmp
push
out
push
cld
jg
pushf
in
shll
std
jle
shrl
loop
mov
popf
mov
scas
cmpsl
pop
imul
push
movsl
ret
in
mov
mov
inc
aas
sbb
sbb
mov
push
push
push
xchg
or
xchg
push
sub
mov
stos
jp
les
adcb
adc
jge
sub
loopne
cmp
das
and
nop
fsubr
or
les
inc
sbb
stc
sbb
xor
stos
mov
push
nop
lds
sub
or
outsb
cld
mov
lahf
mov
andl
rcrl
jne
rolb
out
das
push
mov
cltd
mov
and
mov
dec
inc
cmp
jecxz
adc
icebp
jbe
push
push
or
aad
adc
cwtl
hlt
lahf
or
pop
pop
pop
aam
test
stos
xor
sub
mov
lret
repz
sub
in
inc
cmp
lret
idivb
xchg
sbb
or
or
mov
shlb
push
jbe
mov
mov
xor
out
or
es
dec
jb
xchg
push
jo
mov
mov
push
jp
idivl
xchg
test
sub
popa
adc
jmp
or
mov
roll
imul
orb
pop
jl
inc
dec
sbb
jmp
iret
push
ds
je
call
fucomp
shlb
test
xlat
call
in
repz
std
movsl
inc
mov
mov
adc
iret
mov
sbb
mov
mov
adc
push
jno
test
mov
jae
push
enter
sub
les
mov
stc
sbb
add
xchg
mov
mov
adc
rolb
dec
mov
cltd
cltd
jae
mov
inc
mov
inc
xchg
mov
movsb
and
jbe
push
addr16
mov
sbb
pop
call
ljmp
ret
cltd
sti
xchg
call
xchg
pop
fldenv
in
pop
das
fdivrp
xlat
mov
and
dec
xchg
xchg
fisttpl
push
in
lahf
lea
sub
xchg
into
in
rcrb
cmpsb
pop
push
push
mov
leave
notl
and
imul
push
ja
push
lods
pop
push
or
mov
lds
sahf
jp
and
and
lods
push
and
lahf
xchg
push
pop
jbe
inc
leave
adc
pop
shlb
xchg
cmp
and
loope
in
add
stos
and
pop
cmp
inc
pop
dec
in
jge
xor
out
jl
inc
fsubrs
xchg
les
and
in
aam
stos
cmp
and
or
inc
fs
jnp
push
cmc
mov
push
shrb
push
js
cmc
dec
addr16
out
imul
aam
xchg
neg
lret
test
jae
loop
pop
mov
lret
push
pop
and
cmpsb
xchg
pushf
jo
xchg
add
push
scas
in
je
dec
push
and
xor
lcall
sub
stos
add
test
xor
dec
xor
push
cmp
xchg
cmpsb
je
jbe
movb
stos
lods
inc
loopne
cmp
xchg
test
adc
mov
cld
sub
or
mov
popl
lds
stos
or
and
dec
outsl
stos
cmp
ds
pop
fs
mov
xchg
frstor
lcall
add
jne
xor
add
push
pop
xor
xchg
add
mov
stos
inc
sub
dec
shlb
push
mov
push
mov
add
add
cwtl
cs
pushf
and
or
lret
mov
shl
pop
loopne
das
aas
das
idiv
repnz
dec
and
cmp
push
ss
inc
xchg
aam
loopne
add
ja,pn
shr
nop
les
imul
out
mov
xchg
inc
mov
insb
push
loope
shrl
mov
gs
icebp
and
in
dec
test
das
out
add
xor
incl
outsl
scas
test
adc
es
inc
aad
popf
popf
jne
jbe
fs
icebp
fs
loope
out
test
rcr
mov
push
ret
or
cli
add
ja
xchg
ret
push
mov
sbb
lock
jg
lods
and
add
ds
adc
sbb
fwait
push
sub
adc
dec
or
or
icebp
bound
lea
scas
pop
xchg
lods
or
mov
popf
outsl
loope
cltd
sbb
or
sbb
inc
xor
cld
insb
rcl
pop
aad
pushf
pop
jg
and
fstp
int3
andb
sub
test
jno
push
fdivs
stc
pop
mov
inc
add
mov
lods
je
xor
cltd
dec
inc
imul
lods
test
xor
push
enter
xchg
ja
out
mov
scas
test
pop
out
sub
out
popa
xor
jmp
jle
add
inc
xlat
lcall
pusha
inc
mov
and
add
mov
or
ret
lret
pushf
fildl
pop
sub
push
incl
jo
mov
jbe
andb
inc
sub
je
sub
pusha
shlb
mov
sti
outsl
pop
stos
xchg
into
dec
sbb
pop
orb
mov
pop
es
xchg
add
sub
xor
add
cmp
paddq
lock
fisttpl
mov
scas
or
in
fmul
pop
repz
xlat
sti
inc
jae
jl
enter
int3
outsb
flds
adc
adc
pop
mov
and
lds
loope
pop
cs
out
leave
pop
pop
lret
jo
call
lahf
cwtl
sub
fsubl
insl
or
push
lea
adc
nop
cltd
jge
adc
jp
push
mov
adc
jno
stos
xor
add
hlt
test
jnp
jne
mov
pop
popa
mov
mov
mov
xor
push
icebp
lods
pop
decl
stos
pop
mov
mov
aad
orb
lods
jl
repz
xlat
cmc
jne
jp
lcall
sahf
call
ret
repnz
inc
adc
and
or
pop
push
stos
imul
push
mov
xor
leave
mov
mov
les
jae
jmp
int3
mov
and
enter
mov
mov
pop
mov
clc
das
repnz
orl
loop
sbb
out
sub
xlat
scas
xchg
jbe
mov
cs
sbb
call
mov
sbb
bnd
mov
push
adc
adc
fdivrs
and
xchg
sub
stos
bswap
mov
fs
jo
xchg
xchg
or
lock
mov
scas
cmpsb
mov
loope
mov
or
push
pop
fisttps
movsl
sahf
xchg
andl
xor
arpl
imul
sbb
inc
sub
mov
sbb
pop
cs
aaa
imul
xor
mov
inc
xchg
push
and
mov
pop
les
push
mov
xchg
xor
nop
jae
or
sub
movsb
cmp
adc
adc
addr16
jnp
movsl
js
push
mov
loop
cmpsl
addps
xor
in
mov
in
popf
data16
pop
and
cmc
je
sub
imul
int3
popa
je
mov
shl
dec
and
push
jle
mov
add
es
sbb
adc
pop
gs
or
cs
jns
mov
and
pop
mov
repz
adc
pop
cmp
adc
xchg
push
mov
dec
leave
leave
scas
imul
adc
lods
cmp
mov
popf
push
cmpsl
inc
inc
inc
mov
mov
mov
inc
mov
pop
dec
test
test
sbb
adc
add
lahf
int3
push
add
push
mov
ret
jo
les
push
or
nop
repz
mov
mov
or
xchg
xchg
push
dec
xlat
jno
loopne
cmp
push
cmp
inc
lods
xor
outsl
insl
xchg
fcompl
adcb
cmc
ficoms
pop
insl
shlb
arpl
testb
pusha
pop
mov
lret
add
pusha
addr16
in
push
int
outsb
sub
negl
aad
call
sub
sahf
dec
pop
lahf
out
popa
jecxz
xchg
mov
adcl
call
lcall
pushf
jnp
test
mov
cli
and
pusha
std
out
movsb
push
xchg
inc
ja
rcr
and
sbb
mov
mov
mov
or
mov
bound
mov
sbb
call
out
lcall
je
stos
push
sbb
outsl
call
pop
lret
shr
sahf
rclb
pop
inc
sub
clc
or
testl
dec
xchg
cmp
addr16
push
push
mov
push
shrb
cli
lahf
iret
jo
int
mov
inc
xor
jp
pop
add
fcoms
and
dec
mov
sti
inc
stc
outsb
xchg
iret
mov
xor
lock
das
jb
jns
jnp,pn
sbb
and
sbb
repz
out
jae
ds
push
sbb
lds
or
pop
adc
jmp
and
pop
mov
jne
or
jbe
dec
inc
dec
dec
std
iret
and
loop
ficomps
lds
sbb
jnp
aas
pop
xchg
xchg
mov
xchg
popa
mov
pushf
mov
adc
mov
repnz
inc
xlat
inc
ror
jne
fcompl
jae
mov
sub
jg
push
ficomps
push
mov
out
inc
out
fwait
pop
loop
xchg
ret
dec
loopne
pop
test
insl
mov
xor
pop
in
or
scas
fcompl
in
pop
aad
out
subl
ficompl
add
mov
push
push
or
mov
and
xor
sub
repnz
add
lahf
cwtl
pusha
mov
in
or
dec
sbb
popa
daa
imulb
jns
push
adc
fidivrl
mov
test
pushf
in
imul
dec
fnclex
push
int
inc
sbb
add
sarl
jecxz
adc
enter
loope
mov
and
mov
lods
mov
nop
inc
aaa
lea
dec
xchg
mov
mov
clc
and
inc
idiv
inc
test
or
xchg
movntq
shr
icebp
jl
stos
dec
test
jle
movsb
das
test
test
dec
xorl
dec
push
jmp
scas
loop
aam
enter
inc
ljmp
push
aam
aas
dec
out
dec
xchg
mov
cld
push
rep
xlat
add
and
add
cmp
packuswb
push
nop
sbb
outsl
stos
je
iret
hlt
repnz
jnp
mov
cltd
mov
cmp
mov
pop
ds
lods
dec
das
les
dec
and
cmpsb
push
ret
aam
iret
cmpsb
stos
jnp
xchg
jge
and
jge
push
inc
addr16
mov
sub
out
mov
lods
cmp
sbb
adc
xlat
mov
lret
pop
inc
insb
das
lods
scas
inc
lock
jmp
push
adc
jle
cmp
mov
sbb
loop
fwait
mov
roll
in
inc
push
xor
insb
inc
pop
roll
popa
mov
aaa
mov
int3
lret
fidivrl
and
mov
hlt
push
std
nop
das
cmpsb
jae
jp
insb
fistpll
pop
add
sbb
aaa
shll
sbb
xlat
cmp
jne
jmp
cwtl
push
ja
push
insl
xchg
lods
lods
jle
mov
xlat
inc
imul
ljmp
ja
loop
into
mov
mov
clc
sti
push
pop
imulb
add
aam
mov
add
and
insl
cmp
loope
mov
pop
jns
repnz
or
pop
push
xor
xchg
test
test
jno
inc
orl
out
push
outsb
outsb
cmpsb
xor
lea
adc
fdivs
xchg
mov
data16
arpl
jb
les
mov
int
pop
dec
add
loopne
cltd
mov
push
mov
mov
inc
jg
les
push
icebp
mov
jnp
adc
scas
xor
pop
xchg
enter
xor
pop
int3
xchg
lret
adc
sbb
daa
or
push
flds
iret
push
push
shlb
mov
xchg
iret
mov
mov
fs
mov
in
dec
pop
and
and
stos
adc
cmp
adcl
mov
or
xchg
adc
mov
jg
mov
pop
inc
cli
xor
arpl
stos
push
dec
jae
dec
mov
and
int3
jnp
lret
add
and
test
push
lret
and
adc
sbb
sub
cltd
stos
lods
add
int3
aaa
mov
xchg
mov
movd
sub
call
mov
imul
or
fcomps
and
mov
inc
mov
les
in
iret
filds
std
out
rcrb
inc
mov
xchg
xchg
adcl
test
inc
inc
and
cmp
int3
lock
testl
pop
imul
and
mov
data16
jp
mov
pushf
cmp
movsb
push
jo
dec
cmp
sub
pop
cmp
scas
dec
sbb
jmp
jmp
outsb
or
sub
lahf
adc
xor
cltd
sub
dec
mov
push
pushf
je
sub
ret
or
pop
push
clc
and
jno
dec
std
aad
sbb
jmp
and
int
sbb
mov
fidivs
lret
fwait
das
clc
sahf
inc
pop
aam
sbb
pop
or
cli
pop
push
daa
jae
xor
xor
subb
mov
sbbl
mov
fnstenv
jno
inc
dec
pop
adc
sbb
scas
in
mov
inc
js
xchg
fwait
cltd
pop
int3
jno
push
lods
mov
pusha
and
xor
out
push
jnp
push
repz
or
sbb
pop
lcall
sbb
push
xor
hlt
or
icebp
sahf
sub
shrb
inc
test
mov
and
cmpsb
pop
fadds
or
aad
insb
shrb
repnz
cmp
std
add
pop
sub
dec
mov
dec
sbb
imul
iret
cwtl
test
and
mov
enter
and
jae
add
sbbb
std
loopne
stos
daa
cld
cmp
and
push
daa
pop
pop
mov
fisttpll
xchg
sti
pushf
and
pop
ficompl
inc
sbb
xchg
or
test
cmpl
inc
sub
clc
mov
jmp
inc
xor
mov
and
mov
and
hlt
jnp
out
repz
adc
sbb
ljmp
bound
mov
adc
mov
es
aaa
filds
stc
xchg
inc
mov
and
daa
mov
int
mov
dec
mov
popf
rcl
ljmp
pop
ffreep
add
and
push
jns
jge
into
add
jae
lock
loopne
inc
xchg
mov
xchg
std
push
adc
adc
push
insl
pop
decl
in
adc
push
sar
iret
aas
lahf
inc
push
ret
filds
push
arpl
aam
xor
jne
clc
cmp
mov
repz
pop
inc
outsb
std
mov
imul
add
lret
add
stos
mov
mov
cld
dec
movsl
int3
xchg
sahf
ror
test
pop
arpl
lods
xcrypt-ofb
cmpsl
scas
cmp
or
mov
pop
dec
adcl
or
fsubrs
mov
lods
jns
sbb
test
cmpsb
jae
aas
daa
pop
les
pop
daa
out
or
xor
adc
mov
or
inc
or
js
xchg
daa
data16
jle
sub
cli
rep
outsb
jns
jge
movsb
fildl
cmp
in
mov
push
test
call
pushl
xchg
and
ss
xchg
xor
mov
push
aas
adc
icebp
jle
xor
test
adc
out
mov
mov
fisubl
cmp
push
fldt
in
loope
inc
sbb
mov
repnz
inc
push
clc
rcrl
sbb
adc
cmp
fldt
xchg
mov
mov
sbb
insb
lahf
jne
dec
lds
and
test
cwtl
jecxz
xchg
mov
xchg
cmpsl
fwait
in
inc
sub
inc
rorl
push
add
and
lds
hlt
sub
push
jle
rorb
clc
jae
dec
lock
or
cmp
lds
add
add
jg
insb
dec
sbb
loope
pop
mov
cmp
outsl
add
nop
jne
jg
lods
sub
rol
test
jp
sub
xor
xorl
cmp
or
mov
and
mov
arpl
mov
ret
sub
xchg
xor
daa
mov
mov
jecxz
pushf
pop
repz
jnp
push
xor
lds
mov
and
mov
sbb
aas
int
int
push
fisttps
mov
mov
inc
loopne
dec
std
push
sarl
pop
mov
outsb
jge
ret
repnz
jle
stos
cmp
add
xor
xor
xor
cmc
cmp
lods
je
inc
cmp
imul
push
loop
popa
stos
out
mov
shlb
shll
or
xchg
je
sub
ds
pop
icebp
lods
or
jnp
imul
xchg
inc
jg
add
test
aad
aam
cmp
test
dec
xor
push
shlb
adc
in
sbb
cs
insl
arpl
and
int3
rcl
xor
loopne
divb
push
das
mov
dec
lret
js
jl
or
lods
movsb
add
scas
jmp
je
jne
test
push
push
hlt
add
mov
out
imul
aad
adc
cmp
inc
test
push
pop
mov
jnp
adc
push
fsubs
jne
out
jb
or
in
dec
mov
mov
pusha
push
hlt
cmp
mov
mov
addr16
das
push
cmp
cwtl
add
dec
jmp
mov
mov
movsl
call
mov
pop
cs
ret
je
es
inc
adc
lret
pop
inc
stc
sub
outsb
out
mov
ficoml
xor
andl
jbe
push
test
cmp
stos
pop
insl
test
cld
push
add
xor
mov
test
lret
pusha
pushf
stos
insb
lahf
jnp
imul
add
jl
mov
lret
filds
jp
int3
adcb
adc
std
test
fwait
inc
mov
aad
daa
filds
inc
lds
or
dec
mov
lret
clc
inc
mov
sub
jb
mov
ja
ss
mov
mov
pop
sbb
loope
push
or
mov
lock
es
add
les
jl
pop
out
mul
sub
pop
jae
fimuls
aas
add
and
fcmovnbe
les
push
dec
jns
subb
push
ja
cmovl
dec
xor
cmc
and
or
push
push
popf
int3
sbb
cmp
clc
mov
js
lods
sbb
pop
xor
mov
inc
sbb
cmc
lcall
ffreep
or
fnstenv
xchg
lahf
sub
js
fwait
cmp
iret
push
adc
sahf
xor
lds
test
adc
repnz
pop
jmp
imul
pop
or
clc
icebp
add
loopne
stos
repz
mov
roll
dec
nop
xor
es
arpl
mov
subl
push
jns
andb
inc
sbb
xlat
inc
in
sub
mulb
fxch
out
hlt
cmp
xchg
mov
les
jp
sub
in
fsubrl
pushf
je
fldenv
mov
cmp
mov
addr16
mov
jmp
out
orl
cld
divl
test
stc
aad
mov
in
mov
insl
push
xchg
inc
xor
cmp
je
sub
jne
sbb
adc
xor
test
das
cld
mov
pop
cmc
stos
add
shl
dec
xor
xchg
movhps
push
out
adc
pop
xchg
sbb
inc
cmp
lret
popa
ret
clc
add
mov
in
ja
cmpsb
subl
adc
test
aas
add
mov
push
dec
dec
in
mov
mov
jle
int
xor
cmp
and
fstp
pop
cmp
push
adc
icebp
shlb
sub
push
add
and
outsb
mov
push
pop
loop
inc
subl
pop
jo
mov
arpl
xor
cmp
jecxz
movsb
pop
push
cmp
lret
jle
popf
stos
or
jl
push
jmp
inc
add
push
fildl
jae
and
sbb
dec
popf
or
add
xchg
pop
xchg
lret
pop
and
xor
call
insl
mov
lds
jge
sahf
sbb
into
jae
sub
sub
add
outsl
fsub
arpl
push
icebp
mov
xchg
or
aam
outsl
clc
jb
repz
insl
xor
les
push
pop
test
mov
call
mov
push
test
adc
or
push
mov
fdivs
imul
jne
out
fisubrs
sub
mov
icebp
fnstenv
fldenv
cwtl
cmp
rclb
popf
jbe
addr16
je
xlat
iret
xor
push
xchg
cmpsb
xchg
test
add
dec
or
pop
cmp
xorb
loopne
inc
ficomps
mov
pop
sbb
pop
enter
sahf
sub
sbb
mov
popf
push
repz
and
cwtl
stc
aas
mov
sub
mov
int3
mov
arpl
jp
jecxz
dec
jle
jge
iret
fisubrs
sti
or
stos
mov
pop
imul
es
fisubrl
fcoml
sbb
mov
lret
lods
popf
cmp
imul
idivl
lds
int
outsb
insb
push
mov
sub
gs
mov
mov
or
mov
sahf
or
movsb
repnz
clc
pop
jp
and
movsb
adc
add
das
xor
insl
pop
fucom
fwait
mov
imul
cmp
dec
clc
in
scas
and
mov
mov
xor
mov
pop
dec
push
xor
sar
mov
adcb
mov
add
js
test
clc
mov
addl
sbb
jno
jmp
pop
sahf
insb
popf
sti
fdivp
jmp
pushf
bound
adc
xor
fldcw
mov
xlat
adc
nop
ret
xor
push
xchg
inc
mov
insl
mull
adc
or
mov
xlat
sbb
inc
inc
popf
adc
push
mov
in
push
mov
into
add
movsb
pop
or
and
mov
cltd
rcrb
add
in
addb
dec
jg
adc
xor
add
jno
cmc
mov
arpl
push
fldenv
ret
push
std
notb
jb
in
pop
cltd
fidivl
xor
mov
mov
adc
push
inc
das
push
mov
lcall
push
in
ret
inc
lahf
mov
mov
jmp
cs
dec
loopne
and
fists
push
sbb
insb
mov
mov
jp
lcall
mov
sahf
mov
jns
cld
lea
dec
imul
mov
jbe
mov
push
or
cwtl
icebp
pusha
xchg
in
inc
out
cmp
lock
jmp
inc
mov
push
hlt
sti
xchg
test
push
pushf
ja
cs
pop
push
inc
mov
xor
sarb
cmp
ficoms
lret
popf
rep
inc
cmp
xchg
push
mov
call
mov
dec
in
les
adc
pushf
ja
cmp
movsb
orb
inc
dec
xor
xchg
mov
adc
cmp
outsl
and
pushf
rorl
xchg
lock
xchg
je
jp
enter
mov
outsb
and
ss
pop
sub
in
jecxz
jns
cmp
pop
and
mov
add
insb
and
aas
cltd
mov
push
rolb
dec
jge
out
in
jle
movsl
leave
ret
jmp
lods
jmp
loope
pop
stc
push
dec
stos
sbb
cmpsl
sub
jmp
or
into
inc
test
mov
repz
in
jmp
jecxz
ret
popf
xchg
dec
and
lea
mov
cmc
mov
jmp
sarb
pop
pop
call
or
add
jno
jbe
test
ss
sub
or
addr16
fwait
adc
jnp
icebp
loope
and
ret
mov
enter
adc
fcomps
push
cltd
adc
cmpsb
cli
adc
outsb
pop
shl
adc
dec
out
pop
push
push
mov
mov
mov
fisttpll
fldcw
pop
cli
js
lds
xor
sti
mov
test
imul
out
xor
mov
jmp
xchg
imul
loopne
mov
mov
add
and
imul
sbb
data16
dec
fbld
aaa
add
pop
cmp
aam
sbb
jb
into
add
push
mov
dec
idivl
sarl
push
mov
ljmp
push
nop
cmp
in
clc
fldl2t
sbb
mov
push
jo
cwtl
in
sbbb
rorl
mov
jle
clc
jge
sbb
push
outsl
and
jle
add
xor
fwait
cvtps2pd
sbb
mov
adc
int3
loopne
cmp
mov
pop
mov
add
pusha
out
lret
fldenv
repnz
stos
cmp
lods
adc
jb
in
test
inc
cmp
add
and
fidivl
inc
arpl
inc
fiaddl
inc
aad
es
cld
in
and
jno
push
jl
cmp
xor
fldl
sub
push
mov
cmp
xor
sti
jle
mov
mov
dec
into
or
jbe
add
push
in
pop
aad
outsb
lods
jmp
mov
movl
hlt
cmp
xchg
add
xchg
pop
ljmp
jp
addl
inc
lahf
rorb
xchg
jnp
lods
js
repz
movsl
add
xchg
mov
inc
cli
pop
mov
cmpl
jp
fisubrl
insl
mov
dec
jb
xchg
testb
sbbb
movsb
mov
lea
addl
fsubrs
xchg
or
inc
dec
jmp
leave
inc
stc
pop
rcll
inc
mov
subb
inc
mov
dec
cmp
cmp
xchg
popf
stos
test
jmp
mov
stc
outsl
mov
push
mov
fildll
shrl
test
push
and
mov
and
call
and
js
jnp
mov
imul
pop
adcl
out
xchg
cmp
cli
mov
inc
sti
scas
out
sbb
mov
stos
ficoml
cmp
shlb
test
adc
or
and
pop
xchg
dec
out
imul
ljmp
iret
outsl
and
jns
jne
inc
sarb
pop
int3
cmp
add
mov
popf
lods
shr
jl
and
aad
pop
pusha
add
scas
js
jle
iret
shlb
loopne
xchg
push
mov
pushf
iret
daa
xor
int
jns
xor
pushf
dec
mov
stos
shrl
out
int3
in
push
mov
rcl
dec
mov
inc
push
xor
cltd
xchg
mov
sub
push
sbb
psadbw
or
bound
mov
lods
aad
fstps
inc
daa
sbb
jnp
fsubrl
pop
jl
mov
add
mov
aas
dec
std
push
js
mov
and
xor
and
rcll
cmp
mov
ret
andb
inc
push
mov
popf
aam
in
lahf
pop
fnstenv
shll
movsl
shrb
int3
sarb
sbb
add
insl
andb
ret
shl
cltd
and
sub
xor
sbb
add
mov
jno
add
and
sub
push
pop
dec
cmc
gs
push
icebp
push
xchg
arpl
repz
mov
popa
cli
jg
lret
sbb
mov
insl
sbb
xlat
sbb
adc
xchg
int
mov
dec
imul
lods
xchg
and
jns
sub
scas
jno
sub
mov
or
inc
shl
dec
sahf
sub
xor
or
inc
jmp
call
testb
pop
mov
sbb
pop
in
pop
aaa
jmp
adc
sti
xchg
or
das
ret
mov
mov
ss
inc
xchg
repnz
and
adc
cs
jmp
scas
les
sar
mov
and
mov
pop
sahf
inc
shll
fs
sbb
insb
add
pop
mov
xchg
cwtl
insb
push
insl
cmp
cmp
sarl
mov
xchg
stos
loop
divps
adc
daa
lcall
fidivrl
xor
mov
ja
jnp
push
call
movl
sarb
mov
pop
decl
add
inc
int3
stos
inc
pop
dec
pop
das
add
fidivs
adc
stc
inc
pop
pusha
add
jle
push
mov
xchg
es
lahf
add
pop
jno
int
and
adc
add
leave
pop
jbe
add
adc
fisubrs
cli
in
add
test
testl
loopne
and
dec
jcxz
fdivl
cmc
pop
dec
in
dec
aam
cmp
and
jecxz
or
rolb
out
jb
in
push
pop
popf
cmpsl
mov
scas
es
push
mov
call
lret
pop
ds
cltd
fstps
or
inc
ds
aaa
jecxz
inc
js
mov
repnz
cmc
pop
sbb
lahf
sub
pop
pop
nop
shlb
dec
popl
mov
add
pop
push
adc
pop
inc
and
add
stos
in
js
dec
call
jo
imul
and
and
adc
cmp
push
xorb
adc
lods
or
cmc
and
data16
push
push
jbe
lret
dec
js
sbb
adc
add
es
mov
mov
enter
es
push
insb
inc
mov
sahf
mov
or
sti
mov
lahf
mov
movsb
add
clc
push
inc
lret
inc
dec
jnp
or
cmc
inc
mov
mov
lds
iret
inc
inc
lcall
leave
adc
stc
das
push
dec
fsincos
push
xchg
out
mov
dec
imul
mov
popf
xor
ror
aad
imul
add
sbb
mov
xchg
mov
or
push
pop
popa
scas
stos
pop
inc
push
dec
xor
inc
sti
push
xor
xchg
in
rorl
sub
xor
nop
inc
test
pushf
imul
mov
nop
jns
xchg
ficomps
jmp
fwait
aam
mov
filds
jbe
out
xchg
dec
fadd
lods
dec
sub
mov
mov
movsb
fwait
sbb
mov
or
or
pop
bound
sbb
outsb
jmp
popa
ret
dec
cmp
stos
sbb
cmpsb
mov
or
inc
xchg
jmp
jne
and
sub
in
das
and
sub
jnp
mov
mov
pop
ret
cwtl
mov
decl
test
fdivrl
push
cld
movups
aaa
sti
xor
lock
jb
mov
and
add
cltd
adc
aaa
test
add
sub
xchg
movsl
pushf
xchg
pop
imul
jo
sahf
out
push
sbb
sbb
in
inc
loope
push
scas
and
and
pop
push
cmc
rcll
lds
cmp
push
and
mov
fwait
leave
loopne
jle
sub
imul
fildl
or
sub
outsb
lahf
jae
cs
mov
xor
je
push
mov
fs
mov
mov
pop
jl
arpl
lea
pop
pop
dec
jno
mov
aas
in
js
xlat
xchg
cli
rol
push
lock
push
push
cmp
or
xchg
adc
cmc
adc
jb
dec
xchg
imul
sbb
lcall
add
dec
cld
dec
movsb
jne
movsl
scas
dec
xor
jp
bound
mov
xchg
scas
inc
add
cwtl
outsl
fldcw
jge
cmp
push
popf
cmc
addr16
subl
pop
jmp
sbb
adc
fcmovnu
mov
mov
jl
cmp
push
test
adc
fisubs
inc
gs
mov
pop
mov
push
xor
push
adc
xchg
xchg
scas
jo
test
outsl
rorl
push
pusha
mov
hlt
xchg
mov
mov
test
pop
xchg
aaa
xchg
inc
idivl
in
stos
xorb
addl
data16
adc
jp
lret
in
imul
pop
sbb
push
imul
testb
nop
ljmp
scas
pop
or
xchg
pop
repz
cli
sti
repnz
or
sub
push
adc
je
push
mov
into
mov
movb
das
sbb
or
call
sub
cs
into
xchg
mov
jbe
repz
arpl
pop
in
js
out
add
cmp
or
popa
repnz
data16
shll
sbb
fnstcw
lcall
sbb
inc
mov
xlat
push
icebp
push
fwait
pop
xchg
les
mov
xchg
xor
jno
sbb
sbb
roll
jo
daa
sar
pop
daa
dec
imul
sbb
std
cmc
aam
mov
xchg
roll
add
inc
jo
xor
xor
mov
cmpsl
xchg
inc
pushf
sub
mov
adcl
ljmp
insl
ljmp
xchg
pusha
je
cli
lods
stos
scas
shrl
dec
push
fidivrl
jae
ljmp
xchg
js
gs
jns
cmp
sti
mov
mov
ds
mov
in
push
xchg
stc
cmpsl
lcall
sti
scas
lds
ja
out
adc
fisubs
out
loop
add
jge
push
dec
cmpsb
leave
pop
adc
fnsave
jg
sub
or
clc
jo
or
pop
pop
xchg
aaa
mov
cs
lock
sar
bound
ljmp
jp
ficompl
dec
repnz
test
mov
sub
pushf
test
les
adc
mov
jmp
add
xor
mov
cwtl
mov
cmpb
fistl
jge
cltd
mov
push
cmp
lods
sbb
inc
enter
cmp
cmp
sbb
daa
xor
dec
inc
mov
dec
jmp
ret
adc
cmpl
aam
adc
movsl
adc
ss
ljmp
dec
mov
jne
ss
inc
fstpl
pop
pop
shrl
hlt
insl
icebp
push
repnz
jne
imul
dec
add
jle
or
addr16
pop
adc
and
imul
cmp
pop
adc
rclb
rcll
aad
movsl
pop
aaa
jg
add
mov
clc
mov
lcall
dec
scas
dec
iret
push
push
insb
mov
push
mov
dec
jo
lret
cwtl
mov
lahf
mov
mov
jmp
sbb
dec
cli
xlat
rorl
mov
sub
cld
dec
sbb
into
in
xor
jecxz
mov
jo
inc
pop
stos
sahf
dec
mov
inc
movsb
mov
pop
jl
aam
ss
in
xchg
fcoml
sti
fists
pop
jns
push
jbe
xchg
xor
mov
addb
push
dec
cmp
cmp
jno
pusha
inc
add
adc
adc
idivb
dec
imul
xor
lea
and
movsl
mov
sahf
sbb
push
push
jp
fcmovbe
jo
jg
sub
or
fcoms
mov
nop
push
and
mov
int
add
xor
test
push
jg
and
hlt
cmp
cli
push
xabort
mov
mov
sub
cwtl
rcr
js
js
rorb
sub
std
div
sbb
sub
ljmp
out
ljmp
inc
mov
push
push
scas
add
sub
icebp
ja
outsb
ja
icebp
icebp
jl
adc
add
stos
sub
mov
stos
fst
fisttpl
sahf
lcall
sub
adc
rorl
pop
xchg
pop
jl
into
addb
das
into
in
xorl
cwtl
enter
jnp
dec
movsl
insb
jno
loop
fwait
outsb
pushf
cmc
and
icebp
in
mov
push
adc
fs
pushf
popa
cli
rol
out
shl
jg
dec
mov
out
movsl
movsl
lahf
and
lds
xchg
sbb
daa
mov
data16
inc
jp
daa
mov
xchg
shlb
mov
push
icebp
cli
ss
and
pop
fnstcw
int3
mov
jg
pop
jecxz
jcxz
mov
inc
aad
jns
or
pop
nop
sub
fidivrl
push
mov
pop
xor
sub
xchg
out
popl
cwtl
or
jbe
jnp
cmp
and
fs
dec
jp
sub
mov
pop
lds
jp
aaa
jle
push
dec
fisttpl
or
inc
xchg
pop
and
test
stos
daa
call
sub
jbe
stc
enter
mov
pop
inc
push
sti
push
mov
xchg
push
cmp
fisttps
out
mov
pop
cmpsl
push
cmp
dec
and
push
fimull
pusha
mov
inc
jg
push
dec
fdivrl
dec
je
dec
pop
test
dec
cli
sbb
in
pop
ret
test
mov
ljmp
inc
xchg
dec
jg
fstpt
repz
loope
out
and
sub
jmp
roll
push
mov
or
adc
xchg
mov
dec
lods
mov
jecxz
cwtl
hlt
push
test
jns
shrb
or
sbb
mov
and
adc
arpl
add
jae
and
subb
lret
lret
xor
add
inc
insl
push
test
add
sar
jle
mov
mov
stos
xor
sbb
into
jbe
xor
add
not
insl
clc
xchg
pop
cmpl
mov
push
or
mov
jmp
out
dec
stc
rcrb
pop
jnp
test
movsb
aaa
or
stc
sub
movsb
dec
cmp
inc
add
sbb
cmpsb
jg
sti
pop
and
mov
cmp
push
stos
ret
xchg
test
fnstenv
sbb
icebp
dec
jecxz
jge
out
mov
inc
test
out
jl
sbb
sbb
add
jmp
or
pop
aam
dec
pop
mov
pop
push
pusha
test
or
jecxz
push
or
jle
jle
int3
mov
and
call
add
test
call
js
dec
stos
mov
sbb
pop
sbb
fisttpl
jp
bound
adc
xor
xor
push
mov
xchg
and
mov
ss
fstpt
sub
scas
xchg
mov
dec
jge
pushf
mov
leave
mov
out
and
xor
imul
inc
or
scas
repz
or
inc
mov
pop
pop
icebp
gs
mov
fisttpl
dec
mov
and
ds
mov
es
push
and
testb
pop
cmp
in
dec
dec
insb
lahf
in
and
jmp
repz
and
mov
and
adc
cmp
jg
loope
inc
aam
dec
jg
cwtl
mov
or
jmp
mov
lods
test
test
testb
push
les
jbe
fcomp
push
lret
mov
ficoms
test
int3
sbb
cld
dec
add
inc
ja
mov
ja
xchg
xchg
imul
rcll
add
movsl
jp
rorl
xor
sub
xorl
es
fdivs
lret
mov
mov
and
shlb
cmp
lea
cs
adc
push
fidivrs
imul
nop
push
test
push
mulb
test
sbbb
mov
push
stos
xor
push
lea
dec
cmp
push
sti
xchg
xlat
or
test
xchg
notb
aas
jnp
xchg
mov
or
add
call
jae
cmp
xchg
add
aaa
mov
sbb
cmp
jge
cmp
adc
mov
stos
pop
les
sti
int3
lods
popa
sub
ror
aad
sbbb
cmp
std
fnstcw
pop
push
loopne
mov
jnp
jno
mov
fsubl
mov
fmul
pop
inc
and
jns
xchg
pop
cmp
sbb
jl
xor
repnz
icebp
push
mov
cmp
jl
jl
pop
cmc
xchg
mov
shlb
pop
movsl
leave
enter
mov
mov
sbb
mov
hlt
addr16
test
xchg
out
xchg
nop
mov
mov
mov
into
das
xor
fisttps
push
outsb
push
cmc
dec
cmp
aad
and
and
fmuls
adc
jnp
or
stos
xor
cld
or
and
sub
ffree
lcall
std
xor
pop
dec
in
pop
int
pop
jmp
dec
mov
fcom
dec
sbb
add
push
add
fstpl
mov
inc
test
mov
cli
fldln2
int
insl
out
dec
and
jne
enter
cmp
jge
lds
lea
in
repnz
fidivs
push
incl
cmpl
test
mov
stc
leave
add
fs
adc
add
adc
dec
mov
mov
orl
jmp
fs
pop
je
pop
inc
hlt
insb
fdivs
mov
ja
sti
rcr
xchg
jns
sbb
xchg
jae
lret
int3
jmp
jecxz
push
inc
stc
stos
xchg
das
mov
xor
repz
sub
jns
sub
loop
push
iret
xlat
jb
ror
leave
insl
test
sub
and
cld
jo
fmull
add
scas
popf
and
sbb
ss
lcall
dec
xor
cmp
icebp
pop
add
add
test
js
jns
in
popa
sub
imul
sbb
inc
xlat
mov
mov
call
xor
or
jge
test
lock
gs
mov
lcall
gs
rclb
jb
inc
sbb
imul
out
mov
das
out
repz
mov
fimull
movsb
lock
ja
mov
outsb
adc
gs
pop
ss
stc
add
int
adc
enter
mov
jge
cmp
jne
sbb
jnp
mov
pop
pushf
fisubrl
pop
ret
imul
pop
shll
dec
imul
dec
and
sbb
cmp
loope
arpl
in
test
loopne
mov
push
adc
into
in
mov
mov
cli
std
cmp
inc
pushf
xchg
leave
daa
mov
or
mov
ja
jno
cltd
push
jge
subl
ljmp
and
or
mov
scas
lods
jae
insb
fldenv
sbb
mov
aam
push
in
push
in
pop
outsb
cwtl
sub
je
jns
sbb
aam
ds
cli
cmp
lea
mov
cli
push
ficomps
pop
aaa
mov
pop
mov
jg
andb
movsb
mov
mov
jle
mov
add
mov
adc
xor
add
mov
xorb
push
mov
adc
jmp
mov
jo
pop
es
aad
or
lcall
jle
xchg
cmp
in
test
aad
nop
or
mov
mov
je
ss
pop
mov
xor
cmp
test
jle
add
enter
xor
cmp
loopne
js
vcmpss
in
cwtl
test
dec
cmp
icebp
lock
les
xor
inc
daa
fwait
jo
pop
mov
test
cmp
stc
jb
xor
jmp
lretw
push
xchg
inc
lcall
das
push
fs
dec
insb
std
cmpsl
lret
sub
sbb
pop
inc
lahf
pop
and
loop
clc
mov
push
icebp
gs
pop
add
in
add
das
add
sub
adc
insl
aas
aas
cmpsl
jg
imul
xchg
inc
push
inc
hlt
add
xor
adc
sub
in
adc
lret
lcall
jne
push
and
icebp
out
stc
jnp
cltd
add
sarb
sub
or
popa
nop
or
jle
adc
orb
stc
daa
and
dec
push
insl
dec
in
sti
sub
pop
jge
lock
dec
das
push
xchg
pop
leave
sbb
out
sub
dec
js
or
dec
aad
stc
jge
xchg
nop
divl
leave
xorl
fisttpll
insl
adc
mov
loop
testb
pusha
movsb
incb
lds
repnz
adc
cmp
add
dec
orb
movsb
mov
pushf
jg
mov
and
into
dec
mov
inc
fistl
sub
or
mov
pop
add
or
fadds
shlb
popf
jle
push
imul
adc
mov
mov
adc
jmp
mov
popa
cs
lds
sbb
mov
pushf
or
xchg
jecxz
cs
lock
xor
or
and
lcall
mov
jg
or
into
sbb
push
jl
lret
pop
dec
and
into
pop
icebp
pop
or
hlt
inc
movlhps
mov
mov
mov
push
jbe
push
and
push
stos
xchg
fwait
mov
and
in
jo
lea
aad
or
adc
repz
dec
push
mov
pop
rolb
mov
std
stos
sub
jecxz
test
imul
jne
and
enter
outsl
loopne
int3
pop
pushf
clc
push
mulb
rep
dec
notl
scas
jnp
push
out
cltd
pop
scas
dec
leave
roll
jne
sub
jae
int
adc
dec
pop
sub
pop
inc
dec
enter
dec
dec
ljmp
leave
je
and
data16
add
imul
rcrb
jnp
jl
nop
arpl
inc
outsb
ret
xlat
dec
jnp
sub
mov
sbb
loope
nop
fcomp
mov
js
mov
mov
and
mov
outsl
pushf
lret
std
add
iret
push
cmp
or
popf
adc
into
lret
xchg
loop
adc
mov
xor
xchg
inc
dec
fcompl
out
xchg
xchg
xchg
lea
mov
movb
jb
outsl
scas
push
cld
jmp
loop
test
aam
lret
iret
jno
cmpsb
dec
cmp
inc
sbb
sub
cwtl
push
andb
inc
or
ret
js
sbb
mov
lahf
sub
jmp
mov
pushf
pop
fadd
push
fstl
and
insb
xor
sti
aaa
ss
jmp
ja
fcoml
scas
cli
ret
lea
mov
cmpsb
lret
cmpsb
inc
repnz
ret
notl
stos
and
sub
arpl
cltd
push
jo
je
cmp
push
neg
add
or
or
or
sub
xchg
pop
push
add
daa
fcmovnu
push
std
mull
daa
leave
add
sahf
jne
rorl
in
lahf
into
in
xor
push
xchg
jno
lret
cltd
or
mov
push
sub
xchg
push
and
mov
movsl
mov
aad
movsl
sub
sub
lods
cmp
inc
fidivrs
xor
pop
sbb
mov
es
stos
mov
xchg
in
pushl
jo
movsl
jo
in
or
xchg
xchg
dec
dec
or
cmp
sub
mov
jne
setge
iret
fmuls
rcl
jg
push
ss
pop
mov
jl
inc
mov
fmull
fsubs
mov
in
test
mov
insl
mov
gs
xlat
fstps
xchg
adc
in
decl
je
leave
mov
push
mov
dec
mov
sbb
jg
add
sub
sub
std
mov
pushl
dec
in
push
xor
jge
push
icebp
add
sub
loope
push
imul
mov
add
movsl
iret
jle
cltd
fcmovnb
nop
fwait
hlt
lea
nop
fyl2x
inc
or
jecxz
mov
inc
sub
mov
xor
mov
sub
push
or
out
das
loop
ja
fsub
stc
adcl
push
push
cltd
lods
jbe
inc
in
mov
out
insl
lcall
or
into
addb
add
sbb
cmp
xchg
mov
ficoms
xlat
cmp
iret
mov
xchg
lods
mov
inc
imul
add
gs
jno
mov
cmp
or
inc
dec
cmpsb
or
or
icebp
cmpsb
call
in
jns
shlb
jp
fnsave
jecxz
std
test
pushf
mul
push
and
test
pop
sbb
call
int3
call
sbb
sub
fisttpl
or
ficoml
stos
push
xchg
in
mov
jl
and
cli
jbe
or
out
adc
sub
mov
data16
ss
mov
fs
add
pop
loopne
repnz
mov
pop
fstp
sahf
arpl
xchg
mov
inc
sarb
mov
cmpl
mov
aad
outsl
scas
adc
add
loope
cmp
pop
popf
xchg
out
ljmp
push
stc
sbb
imul
ret
loop
repnz
add
dec
dec
inc
mov
mov
sbb
sub
push
jp
scas
and
xchg
jbe
sbb
fldl
test
mov
inc
jbe
push
jb
jo
out
das
xlat
xor
and
repnz
add
das
movsl
xor
daa
lods
sub
add
sbb
sahf
mov
out
pop
dec
insb
cmp
sbb
rorb
cltd
movsb
jo
test
mov
and
adc
and
loopne
and
xchg
jl
ds
xchg
fists
mov
repz
pushf
jbe
test
cwtl
or
dec
jmpw
movzwl
dec
xor
xchg
push
les
int
mov
imul
cmp
aaa
mov
out
imul
pop
movsb
jge
sahf
add
pop
sbb
jbe
adc
pop
mov
test
nop
jmp
rol
out
adc
fwait
jae
loope
icebp
and
cld
mov
push
jbe
jne
mov
outsb
pop
mov
push
outsl
jne
in
mov
pop
lea
mov
push
or
daa
inc
inc
mov
subb
jecxz
enter
jl
xchg
icebp
fldl
xor
sti
mov
mov
inc
das
add
push
dec
xlat
loopne
stc
iret
xchg
jne
dec
ret
es
cmp
cmc
pusha
js
pop
cwtl
mov
mov
mov
cmpsl
cmpsb
int
and
pop
inc
mov
fsubl
imul
jp
push
roll
cwtl
out
pop
xor
adcb
out
sbb
xchg
imul
popa
sahf
sub
xor
jge
repnz
jmp
pop
cmp
dec
fimull
sub
pop
repnz
mov
xor
insl
mov
xchg
sbb
call
xchg
loope
mov
inc
les
lods
shrl
and
and
mov
dec
loopne
lea
push
pop
pop
or
mov
js
mov
jnp
jb
sub
jle
cmp
bound
mov
and
and
fidivl
mov
push
dec
sub
daa
xor
es
pushl
into
add
popa
mov
mov
lds
sub
dec
scas
dec
and
mov
or
xor
orl
insb
rorl
arpl
mov
push
ljmp
ljmp
out
insl
test
mov
inc
or
and
pop
test
push
mov
dec
dec
or
and
in
sub
lret
push
lret
insb
mov
sarl
jg
jo
fwait
jl
lods
ds
out
ja
jle
fwait
ss
mov
addl
mov
cmp
test
cvtdq2ps
mov
pusha
xor
mov
ficompl
mov
inc
adc
les
push
pop
insb
test
or
xor
ficompl
shlb
dec
scas
mov
xor
stos
add
int3
pop
mov
inc
aam
jo
stos
in
pushf
jne
scas
dec
jae
mov
bound
adc
test
mov
xchg
inc
and
mov
push
adcb
xor
xchg
popa
mov
cvtps2pi
lea
or
jmp
ret
push
cmp
push
movsb
lods
mov
roll
adc
nop
pop
dec
jb
lea
inc
pushl
lock
rdpmc
dec
adc
xchg
pop
ret
imul
sbbb
add
inc
sahf
inc
into
or
mov
xchg
imul
cmc
mov
dec
out
imul
sbb
daa
mov
addl
into
mov
cmc
adc
lahf
dec
rcr
push
adc
aas
jg
faddp
mov
jbe
idivl
ss
mov
into
push
arpl
or
in
xchg
lods
inc
fdivr
in
int
push
rcrl
jmp
out
mov
push
jl
mov
jmp
outsb
jmp
jno
fsubs
mov
jg
rolb
aad
fstpl
jge
push
cmpsb
outsl
faddl
scas
sti
lods
pop
arpl
stc
aad
test
hlt
je
sub
xor
adc
scas
push
js
fstpt
xchg
mov
inc
mov
add
test
out
add
and
xchg
int
outsl
movsb
push
or
inc
add
push
sub
imul
mov
popf
cmpsl
outsl
call
mov
nop
clc
lock
loopne
jl
sbb
sbb
ds
jae
xchg
pop
mov
or
push
addr16
popf
fidivrl
adc
dec
mov
sbb
fiadds
repz
push
ficomps
pop
xlat
mov
daa
stos
int
rcll
sbb
into
popa
out
pop
push
inc
cmovg
jnp
arpl
jge
movsl
ljmp
in
ret
dec
sub
sub
repz
mov
pop
and
pushf
test
aad
and
push
sahf
cld
rolb
mov
mov
movsb
test
adc
flds
mov
xchg
push
notb
lock
mov
in
fdivrs
push
xchg
mov
popf
sub
xchg
aas
mov
lods
push
jl
es
jl
push
inc
scas
xchg
sbb
jl
pushf
shll
mov
lds
ret
push
stos
aam
mov
test
sub
adc
test
bnd
adc
out
cld
jp
loopne
sub
push
and
movsb
mov
dec
adc
outsl
bound
dec
adc
sbb
gs
int3
hlt
mov
and
push
insb
jle
pop
andl
inc
js
pushf
jne
jno
jbe
stc
push
aam
jb
in
cwtl
loope
scas
xor
sbb
xor
xchg
and
ljmp
mov
cmpsb
mov
daa
cmp
loopne
mov
in
call
push
xor
sahf
xchg
jne
mov
ficompl
inc
add
mov
pushf
xor
mov
mov
push
add
imul
pop
call
sbb
popa
cmp
lret
imul
mov
pop
inc
call
repz
movsb
repz
nop
loope
sti
cmp
jno
push
pop
push
lret
adc
jmp
aam
add
xor
mov
fisubrs
aam
int
movsb
sti
sbb
jmp
adc
mov
lea
xchg
cmp
and
and
pop
sub
cwtl
pop
pop
aaa
lahf
jae
adc
mov
mov
int3
mov
aaa
push
scas
xchg
xor
cld
xchg
push
jl
and
dec
stos
js
popf
outsl
pop
sbb
or
out
cmp
lret
std
adc
sub
hlt
jnp
lods
in
mov
or
pop
xchg
rolb
fdivrs
sbbl
jg
loope
jne
mov
repnz
push
adc
ljmp
mov
test
test
test
popa
sbb
adc
push
push
fisttpll
in
pop
lds
outsb
and
sbb
out
push
lahf
inc
push
shl
dec
jp
test
adc
mov
jno
pop
nop
adc
sub
pop
outsb
inc
push
jno
and
push
sub
ret
cltd
out
ljmp
insl
mov
fwait
aaa
in
jp
mov
dec
mov
adc
andb
cmc
mov
xchg
push
jns
pop
gs
push
in
mov
cmpsl
int3
jecxz
lret
push
jb
sarb
jno
fs
push
mov
mov
outsl
adc
int
xchg
mov
pushf
stc
addr16
addr16
pop
frstor
and
pusha
sbb
pop
adc
repnz
jp
cmpsb
sub
jge
mov
leave
fistpll
jmp
push
mov
das
aaa
repnz
mov
add
mov
out
int3
push
push
shrb
mov
xlat
fnsetpm(287
cmp
jle
jmp
pop
imul
xor
adc
mov
mov
mov
shlb
jb
push
and
push
lods
push
adc
mov
negl
sahf
jl
cltd
pop
xor
gs
sub
imul
sar
js
rorl
mov
aad
scas
lds
xchg
jl
xchg
in
xchg
mov
arpl
sbb
xor
lcall
lods
jne
filds
lret
aaa
sub
xor
daa
dec
mov
fisttps
ds
testl
fdivr
js
xchg
daa
mov
aam
or
mov
call
xor
test
xor
outsl
sbb
cmpsb
sahf
and
insl
and
pop
cmpsb
mov
cvttps2pi
jecxz
sbb
outsb
clc
cmp
xchg
popa
and
sbb
jp
push
xlat
jl
in
ds
push
mov
or
add
xchg
mov
xchg
movsl
ss
sbb
outsl
pop
test
sub
repz
cld
or
mov
mov
test
in
ljmp
shlb
and
mov
mov
dec
imul
and
dec
jns
insl
jo
into
lcall
inc
data16
dec
cwtl
pushf
fistpl
iret
insl
mov
cltd
add
mov
fsubs
xor
mov
mov
mov
mov
xor
sbb
mov
push
mov
fnsetpm(287
xor
xor
adc
aas
testl
mov
fisubs
jp
jl
mulb
fldl
sbb
loop
filds
xlat
pop
fimuls
push
je
fldl
addr16
gs
xchg
cld
popa
lods
cs
aad
cmp
adc
fwait
loopne
push
mov
adc
mov
jno
aaa
mov
pop
xchg
out
jae
mov
adc
jne
arpl
jno
bound
jl
pop
push
cmp
jnp
sbb
insb
push
or
lds
mov
jmp
adc
xor
pop
fdivp
popf
dec
jbe
les
lcall
push
push
inc
std
add
pop
test
je
sbb
cmp
fidivl
adcl
popf
gs
push
jb
push
aaa
mov
cli
inc
test
adc
inc
cmpsb
sti
cli
dec
ss
sarl
dec
les
test
fs
mov
or
adc
cmp
xchg
xchg
shlb
pop
int3
fisubrl
push
adcb
cs
cli
aas
sub
push
les
pusha
adc
in
and
pop
push
mov
xor
mov
xorb
shrl
jle
xor
xchg
mov
div
jb
insb
cmp
aam
mov
stc
repz
pop
add
lret
insb
rcr
inc
enter
movsl
ljmp
mov
aam
out
push
das
or
in
mov
add
dec
aaa
jno
pop
mov
ljmp
mov
fcmovnbe
jg
idiv
int3
xchg
shl
xor
in
mov
jbe
push
xchg
jns
fwait
stos
mov
lret
cmp
jmp
jnp
movsl
xor
or
mov
push
pop
xchg
inc
dec
jmp
mov
inc
in
int3
das
ret
xor
repz
push
std
outsl
mov
jmp
pop
and
notb
mov
in
jns
mov
cmpsl
or
testb
movsb
mov
imul
decb
scas
cltd
call
je
adc
idiv
iret
lcall
fwait
mov
cmpsl
and
xchg
lock
push
or
in
fidivl
jmp
mov
dec
nop
orl
mov
jbe
xchg
xchg
imul
stos
xchg
pushf
xor
jb
fidivs
cmp
mov
mov
sahf
ljmp
adc
mov
cmp
fstl
cmp
aas
pmuludq
push
xchg
andb
sub
stc
jno
jecxz
xchg
fdivrs
and
testb
xor
cltd
pop
dec
jb
sub
gs
addr16
sub
mov
out
sar
dec
pop
xchg
out
sti
fisttpll
imull
fnstenv
mov
popa
subb
jbe
mov
lea
fdivrl
xchg
pusha
jnp
add
imul
mov
mov
shll
inc
fnstsw
add
faddl
cmp
into
push
in
push
mov
int3
mov
js
shrb
push
aam
add
inc
xchg
ja
stos
test
mov
popa
arpl
push
aam
xchg
ja
inc
and
loop
cwtl
lods
and
lret
pop
lods
popf
out
das
movsl
hlt
icebp
mov
imul
add
or
jmp
enter
popf
nop
xchg
adc
in
movsl
cli
cmpsb
test
cmp
test
loop
xchg
cmp
lret
bnd
inc
xchg
outsb
dec
push
call
mov
cltd
sub
rorb
inc
xchg
mov
sub
addr16
lret
movsl
repz
arpl
sbb
aam
incb
in
addr16
icebp
add
mov
sbb
push
and
push
sahf
fimuls
lock
lahf
shll
out
fwait
inc
and
xor
movsb
cmp
adc
adc
xchg
fsubl
and
repz
cmp
cmpsl
adc
mov
xchg
scas
cmp
mov
pop
aaa
xor
shlb
xor
bound
xchg
inc
xlat
xchg
scas
lretw
test
and
and
out
daa
fbstp
sbb
decb
jmp
pushw
lods
dec
add
push
mov
insl
adc
movsl
in
out
mov
xchg
cmp
xor
adc
cs
mov
outsl
add
and
and
jne
jo
aad
clc
imul
mov
lcall
lret
sub
mov
pop
jmp
insb
xchg
cmpsb
orb
in
mov
test
pop
cs
sub
stos
call
adc
cltd
cwtl
in
arpl
push
or
xlat
fisttpll
je
mov
icebp
inc
adcb
xor
mov
lock
adc
xchg
packssdw
aaa
lods
xchg
mov
sbb
pop
mov
mov
dec
inc
loope
imul
arpl
push
mov
mov
mov
inc
or
das
ret
fwait
pop
push
mov
sub
jle
xchg
aad
pop
xor
movsb
std
jbe
inc
fucom
mov
movsl
jg
subl
pop
cltd
push
mov
out
std
fisttpll
sbb
sub
dec
or
jge
inc
pop
lret
es
addr16
push
jge
xor
dec
ret
xchg
data16
dec
sub
mov
arpl
jg
stos
out
ret
shrb
jb
inc
fwait
rep
in
imul
mov
push
inc
cld
inc
adcl
xchg
scas
cwtl
lret
lret
mov
xchg
inc
nop
js
shlb
loope
and
inc
adc
add
pop
push
lods
jmp
int3
cmp
and
jle
shlb
xchg
and
inc
ret
out
pusha
mov
icebp
push
xlat
xor
int3
jle
add
cmc
push
std
out
jbe
add
popa
insl
fdivs
xor
sub
fmuls
fmuls
sbb
push
fisubrs
stos
mov
loop
lods
adc
mov
repnz
insb
sahf
lds
and
mov
xor
xor
xchg
jne
out
scas
mov
mov
shll
repnz
daa
mov
and
add
data16
lahf
fbld
jnp
pusha
fwait
xor
inc
jae
push
cmp
adc
and
sub
rcll
pop
cli
dec
nop
subb
inc
jb
cli
lds
je
test
cmpsb
mov
bound
loopne
jns
and
mov
pop
pop
std
xor
pop
lcall
gs
outsl
das
leave
jmp
pushf
test
imul
dec
sahf
jb
pop
sbb
or
pop
push
test
iret
insl
inc
lods
mov
test
fs
sbb
shl
sub
pushf
xchg
pop
xchg
cli
inc
lsl
xorb
mov
mov
and
jnp
push
into
dec
loopne
mov
std
test
mov
jge
lock
mov
inc
je
shll
xorl
mov
fisttps
and
imul
sbb
gs
cmpsl
dec
mov
fbstp
or
movsl
inc
mov
dec
push
insl
fidivrs
lret
jmp
mov
insl
out
xor
xchg
adc
cmpsl
sbb
ret
push
imul
and
pop
pop
js
repnz
and
xor
or
push
sub
jnp
mov
mov
das
lea
xor
pop
push
pop
jbe
mov
jmp
mov
xor
icebp
popf
adc
fdivrs
xchg
mov
mov
stos
pushf
inc
pop
mov
test
dec
inc
add
mov
add
and
jmp
mov
roll
fdivrs
out
push
adc
push
sahf
aad
or
enter
fs
test
call
sahf
lods
inc
out
pusha
mov
std
push
out
jle
test
enter
inc
push
testb
pop
iret
cmpsb
cld
sahf
out
cmpsb
mov
jmp
inc
dec
cmp
test
push
cs
loope
jp
mov
fwait
adc
int3
or
inc
mov
in
adc
xchg
scas
jb
sbb
arpl
jne
out
push
je
test
sub
jb
pop
iret
push
xchg
jmp
outsl
imul
dec
xchg
test
inc
out
pop
cmp
fwait
loop
fidivs
loope
movl
push
jg
clc
pop
stos
out
hlt
scas
xchg
data16
cmp
es
imul
fs
jnp
xchg
loope
push
mov
rorb
aad
pushf
jmp
gs
lds
pop
pop
or
xchg
mov
push
sub
mov
or
push
insl
mov
dec
ret
movsb
rcl
xchg
fwait
cld
daa
in
pop
cmp
insb
sub
or
imulb
std
shlb
pop
ficompl
add
inc
pop
mov
cmp
outsl
mull
adc
cmp
cmp
jg
repz
cltd
pop
adc
lea
and
mov
repnz
inc
fsubrp
jge
sti
inc
sbb
outsb
push
xor
mov
inc
filds
mov
fwait
pop
aad
or
daa
sbb
or
fcmovnb
inc
cltd
inc
mov
loop
jno
cmc
or
sarl
bound
jp
popa
out
fldt
in
stos
and
gs
xor
sbb
lahf
into
inc
addr16
repz
rorb
jae
ret
cmc
jecxz
fdivrl
in
or
push
adc
imul
cmpsb
outsb
shlb
jae
mov
jp
pop
sub
and
dec
xchg
jg
les
cmp
into
dec
jb
pop
inc
push
mov
jns
jge
shl
adc
pop
sbb
jbe
fisttpl
loop
xor
adc
sub
test
lahf
cs
inc
push
dec
mov
or
and
mov
adc
lahf
mov
jecxz
mov
dec
jb
and
adc
xchg
add
hlt
movsb
gs
push
or
jno,pt
xchg
fsubp
mov
xchg
mov
out
icebp
insl
nop
addl
in
cltd
dec
aas
cs
mov
rclb
adc
mov
xor
lret
adc
and
cli
lahf
mov
cmpl
fiadds
jl
in
pop
out
or
negl
pop
fmul
outsl
scas
cltd
push
shl
lahf
rcl
mov
call
inc
push
push
cmc
adc
aaa
mov
loope
outsl
int3
dec
notl
jg
push
adcl
decb
add
repnz
fisttps
inc
dec
adc
adc
data16
subl
icebp
mov
cs
mov
pushf
push
sbb
cmpsb
es
cmp
mov
out
fldcw
add
dec
mov
outsl
clc
ss
scas
pop
stos
push
fwait
jne
mov
loopne
mov
push
add
push
daa
jle
stos
cmp
mov
and
shr
mov
daa
ja
cwtl
mov
xchg
aam
test
shlb
test
outsl
test
cmp
pop
cmp
notb
and
push
xchg
sub
das
fwait
jno
mov
std
fiadds
add
mov
js
and
xchg
inc
daa
and
inc
fstps
arpl
insl
sbb
outsb
pop
arpl
and
sub
ds
jl
and
cmp
mov
xchg
bound
cld
pop
fldl
sub
mov
enter
lcall
test
mov
pushf
repz
jae
jg
lds
xorb
adc
xor
scas
and
or
std
mov
mov
push
mov
addr16
or
mov
fldl
add
fwait
cmp
jg
mov
lret
jp
lea
xlat
xor
cld
xchg
daa
sub
subl
stos
fcmovnu
jg
cmp
and
cmp
or
incl
sbbl
push
cmp
arpl
inc
fucompp
pop
add
sub
cmpsb
add
ror
nop
xchg
inc
bound
je
mov
ret
jmp
xchg
mov
or
ds
popa
imul
mov
les
push
adc
xlat
mov
jbe
pop
cs
test
mov
sbb
into
ret
mov
stos
mov
push
ror
xor
mov
and
fmull
pop
pusha
cmpsb
pop
push
mov
xchg
and
mov
subb
scas
bound
cmpsb
cltd
xor
icebp
notl
sbb
cltd
cwtl
push
sub
dec
and
lds
dec
cmpsl
cltd
mov
stos
xchg
outsb
scas
cltd
outsl
mov
addr16
cmpsl
and
inc
jg
xchg
nop
lea
sarl
enter
jg
sbb
aas
push
fwait
cmp
or
enter
mov
lcall
daa
lcall
adc
inc
sub
addr16
jb
push
iret
mov
std
nop
mov
and
jns
adc
out
sarb
cmpsb
pop
mov
std
xchg
out
cltd
repz
xor
push
xor
sub
xchg
jne
sarl
ds
jp
sub
mov
and
fimull
pop
dec
or
popf
shlb
gs
jge
xor
lcall
or
insl
lea
mov
xor
xor
sub
xchg
jo
sbb
gs
jl
push
les
xchg
mov
mov
cli
cltd
loopne
mov
fbld
lret
in
pop
mov
fcmovnb
mov
inc
mov
mov
in
xor
jne
fsubrs
sbb
or
movsl
ds
xchg
bound
add
xor
add
cwtl
dec
pop
sbb
pop
push
movb
adc
push
fucom
cs
pushf
mul
jae
adc
dec
bound
xchg
int
and
sti
shll
cs
repz
mov
sub
inc
pop
push
loop
fs
dec
sub
scas
lock
orl
mov
sbb
and
cmp
popf
mov
xor
sarb
outsb
lahf
inc
push
into
sub
add
push
inc
test
jmp
orb
or
cmp
and
outsb
push
shll
inc
or
outsl
mov
xor
cmc
push
mov
push
lret
xchg
aam
and
rorl
fs
jmp
inc
fldt
pop
mov
es
add
in
push
ljmp
inc
jno
cs
dec
pop
and
outsl
mov
lods
push
add
or
or
fidivs
mov
xor
sub
mov
sbb
jne
ret
add
or
insb
inc
pushf
stos
cwtl
mov
fnstsw
leave
push
or
push
aad
je
dec
adc
ljmp
cltd
mov
mov
push
lds
jae
mov
mov
pop
sbb
mov
inc
roll
lds
imul
xchg
cli
sbb
and
dec
aad
data16
shrl
stos
fsts
cmp
js
push
loopne
cmc
or
jecxz
inc
std
dec
movsb
dec
sbb
sub
and
jb
pop
movsb
mov
rorb
sti
inc
pop
pop
mov
pop
add
dec
fidivrs
arpl
pop
push
sub
aaa
pop
sbb
lea
in
push
push
fsubr
mov
jne
notl
inc
mov
inc
out
mov
pop
or
push
out
sub
jno
mov
or
or
lock
repz
cmpsl
das
out
pop
fcmovb
inc
insb
ja
jle
jo
bts
data16
ret
mov
fs
call
pop
sarl
je
adc
dec
movsb
cmp
jl
jmp
jmp
xchg
lea
outsb
addr16
arpl
pop
insl
mov
js
addb
aas
and
add
inc
daa
xchg
test
adc
lret
in
push
mov
ret
push
js
les
outsb
out
pop
leave
jmp
xor
jl
dec
test
fistl
push
jae
in
dec
pop
lods
add
int
cmp
jbe
cmp
sub
popa
ficompl
lods
mov
jae
das
lods
pop
stos
mov
sub
pop
lea
rol
cmovge
xchg
push
pop
xchg
sbb
lcall
divb
ds
mov
cltd
das
sahf
popa
push
pop
add
pop
sbb
inc
ror
mov
sbb
cli
shlb
fnstsw
cmc
lret
movl
popa
xchg
pushf
or
dec
xchg
or
cmp
and
dec
jge
sub
loop
inc
cmpsl
imul
ss
jecxz
in
xchg
xor
add
dec
sbb
inc
ds
scas
and
sar
xchg
lds
cmp
sbb
stos
lcall
jae
subl
lret
sbbl
inc
lcall
mov
push
mov
cmpsl
pushw
cltd
pop
ljmp
imul
pop
xchg
jb
int3
xchg
into
xchg
push
test
ss
js
lahf
or
inc
hlt
das
xchg
pop
mov
pop
pop
pop
add
dec
xor
and
sbb
aaa
or
insb
jecxz
outsl
leave
lcall
stos
lret
or
lods
cwtl
jmp
mov
sbb
popa
sub
stc
sti
dec
roll
sti
push
cwtl
sti
enter
jnp
sub
aas
or
je
dec
jge
jb
xor
jns
in
adc
and
mulb
cwtl
push
or
in
gs
xor
rcll
out
mov
loopne
sub
jno
inc
lret
add
xchg
inc
idivb
out
jp
or
mov
jmp
jp
dec
roll
aam
xor
mov
dec
cmp
dec
cmc
push
xchg
adc
and
cmp
sbb
add
cld
fstps
out
push
and
mov
xlat
mov
xchg
sub
sub
mov
mov
dec
int
mov
mov
int
ljmp
cs
lret
xor
popa
sbb
inc
adc
jl
fildl
jo
cmc
pusha
mov
aaa
movsl
ljmp
adc
mov
addr16
lret
rcl
flds
rcrb
and
push
cltd
mov
sub
push
mov
mov
out
xchg
fwait
push
mov
and
or
add
cmpsl
mov
sbb
leave
mov
mov
jns
inc
ds
mov
lea
or
mov
dec
in
leave
mov
cmpb
push
jo
mov
push
das
insl
out
in
scas
inc
stos
push
shlb
in
lret
sti
dec
sbb
int3
ljmp
inc
jge
and
stos
das
dec
cmp
push
scas
sti
push
or
ss
dec
scas
fwait
mov
inc
rcll
fwait
into
add
in
push
out
dec
jecxz
scas
popf
dec
adc
pop
mov
cmp
sbb
ret
in
lods
test
popf
dec
push
leave
jno
add
xchg
imul
imul
fistpll
scas
push
or
shrl
movsb
jbe
push
mov
in
cmp
enter
insb
sbb
mov
fidivrs
dec
roll
addb
pop
iret
jge
pop
cmpsb
sarl
or
rclb
sbb
lea
pop
sbb
push
cmp
push
fcomp
sti
ja
fildll
push
ljmp
sahf
imul
ljmp
pop
and
stos
add
sbb
lret
dec
mov
xor
out
sub
sahf
jb
xchg
push
rcr
and
ja
jb
pop
test
sub
stos
test
aaa
xor
cmpb
decl
push
pop
int3
xchg
add
test
cltd
pop
sti
push
out
mov
outsb
jb
mov
shrb
iret
mov
pop
call
sub
pop
push
scas
imul
in
cmp
fucomip
mov
jne,pt
xchg
sbb
mov
fimull
out
add
or
loopne
jp
insl
ret
bound
xchg
add
lods
shlb
xchg
sub
flds
xlat
pop
xor
jmp
fists
cld
mov
adc
xchg
pop
rolb
loop
inc
subb
ret
push
out
loope
les
sarl
neg
inc
jmp
dec
test
sbb
pop
pop
mov
jmp
aad
push
xchg
cmp
lahf
inc
adc
call
in
cmc
lret
mov
add
pusha
add
pop
xlat
shlb
daa
mov
fdivl
out
fsubrs
or
mov
push
xchg
cmpsb
aam
push
rolb
scas
lea
xchg
and
shrb
imul
repnz
sbb
outsw
notb
sbb
inc
dec
aaa
pusha
push
leave
and
inc
sub
push
call
ret
leave
imul
adc
shl
cmp
push
filds
scas
dec
orb
and
mov
add
imul
pop
push
nop
mov
mov
flds
js
scas
ret
jne
inc
jno
add
in
les
inc
sbb
aaa
xchg
dec
mov
mov
leave
jp
lds
adc
clc
pushf
stc
mov
mov
add
test
or
add
push
bound
or
dec
pushf
call
mov
xchg
and
inc
add
mov
in
pop
pop
sahf
jo
jnp
jne
outsl
jg
mov
inc
cmpsl
push
push
imul
adc
sbb
jo
cli
sub
mov
adc
fs
xchg
inc
lods
movsb
push
inc
xor
test
adc
pop
aaa
decl
lods
lock
pop
jle
cmp
in
stos
sbb
push
aam
push
lea
inc
cmp
sub
cmp
push
dec
sub
out
out
aaa
mov
push
cltd
xchg
pop
loop
mov
adc
xlat
push
je
mov
cmp
pop
mov
aaa
jne
push
fistpl
mov
cs
hlt
push
dec
jg
jmp
orl
dec
push
xchg
clc
sub
push
pop
imul
arpl
cmp
popa
and
mov
xchg
sbb
aaa
jmp
jge
sub
jl
mov
insl
inc
push
pop
lds
add
mov
pop
cmpsb
adc
es
jmp
add
test
aas
add
pop
fidivrs
mov
push
sub
mov
lds
rclb
mov
mov
addb
aam
push
ret
jmp
ljmp
call
push
loopne
out
cmp
mov
jle
cmc
and
hlt
mov
stc
pop
jge
push
and
call
dec
inc
hlt
js
mov
stc
mov
lea
pop
sbb
addb
pop
imul
push
push
dec
mov
rolb
sbb
lahf
adc
js
mov
test
repnz
sub
or
es
cwtl
orb
cmpxchg8b
jo
xor
call
cmpsl
dec
out
mov
push
mov
pop
fisubrl
rolb
outsb
ret
and
sub
push
mov
push
inc
fdivs
add
arpl
and
lea
imulb
test
and
cmpsb
push
cmp
xor
sti
test
icebp
arpl
loopne
imul
int
push
sub
mov
pop
mov
push
adc
mov
fsubrs
lods
cltd
xor
mov
jae
cli
adc
xchg
xor
sbb
and
fadds
stos
mov
aas
xchg
bound
sub
loope
or
mov
out
pop
imul
stos
addr16
inc
adc
mov
jae
dec
dec
outsb
sub
mov
dec
push
mov
outsl
das
in
lea
push
daa
inc
push
mov
add
xchg
mov
sbb
mov
push
and
jbe
rcl
xchg
vmwrite
insb
ficoms
fdivl
jnp
inc
icebp
xchg
subb
xchg
pop
mov
mov
xchg
jle
cmc
fcompl
aas
lcall
push
xor
into
sahf
cmpsb
mov
aad
mov
stos
movsb
and
dec
mov
dec
jl
rcll
pushf
insl
loop
jnp
sbb
add
ljmp
sbb
es
xchg
not
xor
pop
bound
xchg
rcl
shl
pop
scas
xlat
inc
pop
mov
pop
push
jae
adc
clc
test
xchg
push
xlat
js
ret
scas
inc
aas
pop
loope
inc
pop
cmpsb
push
test
movsb
ss
inc
xor
lock
jmp
pop
insb
fs
rcrb
stos
popf
scas
push
inc
ret
add
repz
out
mov
pop
mov
xor
pop
shll
xor
mov
imul
pusha
mov
clc
int3
inc
int3
bound
sbb
movsb
xor
jp
out
pop
xchg
xor
movsl
lea
and
xor
mov
js
leave
sub
js
adc
xor
mov
out
bound
mov
add
xor
xor
sub
jmp
fisttps
outsb
lods
sbb
test
cmp
mov
xor
cli
xor
adc
fnstenv
mov
cs
stc
dec
call
xchg
sub
dec
mov
mov
fisubs
mov
imul
leave
cmpb
mov
nop
iret
or
xchg
sbb
sub
fs
sub
xorl
dec
loopne
sbb
imul
test
dec
xchg
dec
cmc
cmpsb
mov
and
mov
scas
xchg
inc
lcall
imul
inc
push
in
adc
mov
and
mov
sub
ljmp
jmp
xchg
dec
stc
or
sar
lahf
jo
mov
mov
push
xor
cli
test
call
repnz
jne
sub
mov
test
lcall
xchg
xchg
dec
imul
dec
cmp
jg
add
test
test
loop
repz
xor
outsb
std
mov
jae
cltd
mov
mov
movl
xlat
jo
mov
arpl
arpl
cmpsb
adcb
pop
sub
fsubrl
repnz
xor
xchg
fcomps
mov
push
imul
push
pop
repz
out
mov
pop
das
incl
xchg
mov
push
fwait
xor
outsl
push
data16
pop
push
dec
ss
loop
ds
dec
dec
xchg
test
and
and
xorb
imul
push
lahf
stos
sbb
push
xchg
dec
popa
or
mov
aas
or
lret
dec
add
dec
adc
jmp
das
sub
outsb
cmp
xchg
jne
mov
lods
push
outsl
nop
pushf
sahf
mov
imul
nop
jg
movsl
aaa
inc
or
mov
sar
push
push
loopne
enter
adc
mov
sbb
xor
xchg
jb
cmpb
in
mov
jns
xchg
jmp
mov
push
cmp
push
xor
mov
clc
dec
mov
std
sub
xor
mov
mov
out
sbb
lods
negb
into
add
jl
pop
add
mov
hlt
mov
jecxz
lret
mov
pop
aad
movsb
dec
pop
dec
xchg
mov
cwtl
stos
or
loop
sub
jo
sub
ljmp
push
in
gs
adc
out
shlb
pusha
leave
mov
sub
jle
rcrb
cmp
lea
mov
sub
test
out
jle
test
mov
int
addr16
cmp
dec
sub
inc
sbb
xchg
hlt
mov
mov
sub
pop
xor
scas
xchg
cmp
and
and
or
push
loope
rclb
jae
jne
call
es
call
fsubrl
sub
pop
pop
adc
addr16
jne
dec
ljmp
jae
cmpsb
add
xchg
dec
and
pop
mov
addl
mov
jp
fisttps
fsubs
outsl
std
mov
sub
rolb
mov
xor
xor
adc
out
xor
dec
inc
mov
enter
shll
pop
es
add
lret
xor
mov
xor
pop
inc
pop
pop
add
sbb
jl
pop
and
adc
xor
mov
fcomps
in
jno
fistpll
cli
test
scas
push
imul
fisttps
orl
cmc
xlat
xor
fldcw
rclb
cmp
ja
and
rcrl
dec
pop
sbb
lcall
inc
push
inc
sub
scas
and
push
mov
ret
jmp
test
inc
jl
inc
ja
movups
dec
in
xor
popa
push
out
and
lock
dec
fidivrl
je
dec
add
sub
push
jbe
mov
mov
or
jl
mov
cmp
jae
xor
aas
add
cs
out
hlt
in
out
stc
jl
jp
mov
push
sbb
push
cmpsb
rcrb
leave
mov
popa
loop
push
in
jns
jae
mov
ja
mov
sbb
xchg
sti
loope
pop
mov
sub
ret
in
inc
push
jge
adcb
ljmp
mov
ror
out
cs
add
lods
cmp
xchg
movsb
insb
mov
jl
mov
mov
jecxz
js
subb
xchg
push
sbb
adc
dec
aam
stos
inc
loopne
stos
lock
shl
push
xchg
jge
sbb
sub
jb
ret
or
sbb
inc
call
xchg
add
mov
aad
mov
into
push
pop
push
stc
sub
mov
or
movsb
jp
xchg
jno
ret
call
dec
jno
lret
or
mov
cmp
inc
adc
sub
lahf
mov
add
mov
out
pop
xor
sarl
cmpps
sub
rclb
add
cmp
push
jmp
setge
sub
rcrl
fcoms
divb
jmp
out
jmp
mov
movsl
mov
movsb
lds
jecxz
xor
push
jl
mov
rcrb
push
fadds
loopne
in
sbb
mov
imul
pop
mov
lea
mov
mov
and
sbb
inc
or
mov
adc
xchg
loopne
fldenv
mov
or
popa
xchg
cmp
test
in
dec
stos
call
fucomip
int3
out
aad
popf
lods
push
lcall
les
mov
movsl
ret
mov
cmp
and
shlb
icebp
xor
fs
std
inc
xor
das
scas
dec
dec
testl
adc
mov
and
jg
icebp
shll
ret
icebp
and
mov
and
add
icebp
push
test
fadds
leave
push
mov
cmp
sbb
sbb
lock
dec
mov
inc
push
lret
in
push
rorb
ljmp
sub
cltd
stos
out
push
daa
aaa
test
lcall
xchg
mov
les
lods
xchg
insb
mov
loopne
add
push
mov
test
mov
push
pop
cmp
sub
testb
add
out
aad
dec
fcmovne
push
std
insl
mov
sbb
imul
movsb
or
mov
jnp
aaa
or
cld
mov
inc
and
stc
stos
dec
fadds
lock
push
sub
adc
jno
lret
cmp
sub
cmp
in
vcomisd
mov
xchg
movmskps
sahf
jae
xchg
dec
fidivrs
popl
insb
dec
ret
xor
int3
pop
cmp
jnp
movl
xchg
std
mov
les
or
xchg
mov
cwtl
ja
lcall
ret
mov
stc
sub
push
inc
push
pop
cmpsb
sahf
jno
popa
and
icebp
ret
xchg
fwait
sbb
movsl
out
or
cmc
mov
mov
mov
icebp
mov
daa
dec
push
fildl
lds
test
add
std
and
mov
movsl
imul
lea
or
lret
inc
or
mov
outsl
popf
rcrb
add
fs
fsts
shll
test
mov
jns
or
nop
mov
add
mov
ficoms
orl
popaw
mov
mov
enter
das
cmp
ljmp
cli
xorl
enter
lock
inc
cmp
pop
jmp
mov
mov
mov
mov
xchg
jp
cmp
push
popf
int3
dec
push
mov
or
fnstenv
int3
jl
fstpt
cld
add
fwait
outsb
mov
aas
sti
mov
sbb
pop
mov
push
cmp
xchg
mov
jl,pt
cmp
subb
out
lock
test
add
notl
mov
or
mov
pop
xchg
ret
xor
adc
pop
jmp
xlat
int
sahf
enter
add
das
push
rorl
push
js
sti
popa
mov
xor
jp
mov
jns
add
push
jnp
mov
mov
pop
fsub
movsl
push
adc
aaa
push
in
push
cmp
subl
lods
push
les
enter
iret
pop
mov
cmp
inc
or
add
adc
lret
dec
pop
sbb
cwtl
in
mov
orb
in
xchg
push
cltd
aad
xchg
inc
aad
xor
and
dec
test
inc
stos
jg
or
sub
ficoms
cld
aam
dec
sub
mov
repz
fdivrs
loop
and
and
push
jnp
sub
test
pop
mov
adc
jg
ret
dec
addl
ret
jo
push
sbb
push
and
xor
popa
xor
xchg
mov
cs
dec
jne
aas
cmp
aaa
data16
nop
gs
adc
imul
aam
push
and
inc
or
dec
jo
ja
jge
out
mov
adc
pop
push
lock
sbb
push
stc
xor
cmc
push
dec
inc
out
cmp
bound
seto
xor
pop
insl
out
xchg
shrb
decb
adc
aas
fbstp
es
arpl
shlb
insl
idiv
sbb
mov
fwait
sub
or
testl
mov
adc
sub
in
pusha
cli
sbb
fxch
je
mov
ds
scas
mov
push
sub
sbb
adcb
push
sbb
mov
popa
and
loope
mov
xchg
dec
idiv
repnz
test
jns
jno
push
cs
pop
cmp
jnp
imulb
push
adc
sti
cli
mov
jmp
arpl
shrb
repz
inc
push
lret
sub
mov
sbb
sub
lret
cmp
insb
or
mov
ret
mov
xor
or
test
loopne
addr16
push
aas
dec
pop
push
mov
xchg
imul
sbb
rorb
mov
cmpsl
les
mov
mov
pushf
pop
iret
and
push
shll
and
xchg
xor
xchg
leave
inc
std
mov
fistpl
jnp
cwtl
sbbb
or
and
cmp
in
push
cwtl
fidivrs
dec
pop
and
mov
scas
lret
not
mov
sub
adc
ret
mov
xor
xchg
jns
jle
jp
fcompl
movb
adc
je
push
clc
outsb
inc
icebp
pop
ret
and
add
xlat
lock
iret
cmp
sahf
les
push
imul
jmp
negb
adc
movsl
test
and
xor
out
leave
mov
dec
xchg
xor
clc
mov
cli
fadds
pop
inc
sub
test
loop
xchg
out
aad
aaa
ja
adc
loop
mov
cltd
xor
popa
lea
mov
mov
sbb
mov
pop
scas
repnz
and
pushl
dec
jmp
pop
mov
or
xor
jp
lds
mov
or
ret
rolb
icebp
lahf
mov
pusha
mov
xchg
jo
push
insl
sbb
cwtl
test
iret
xor
lds
imul
testb
leave
sub
fs
xchg
lock
xlat
push
or
jmp
adc
aad
loop
scas
lods
adc
xchg
lcall
int3
aam
or
daa
mov
repnz
inc
dec
jmp
pusha
add
mov
pop
xchg
popf
inc
push
add
inc
test
sarb
or
adc
enter
insl
xor
arpl
jp
push
mov
lods
popf
ss
sub
mov
adc
pop
jmp
xor
aam
js
rcrb
test
dec
push
sbb
lods
sub
lret
mov
enter
lahf
add
roll
mov
movsb
pop
cmp
nop
push
stos
mov
outsl
ds
or
xchg
lret
pop
xchg
ss
pop
gs
call
adc
outsl
mov
pop
repnz
loop
adc
push
and
lock
push
fnstenvs
push
arpl
fisubrs
cmpsb
push
xor
mov
lret
std
icebp
sbb
pop
pop
lods
mov
and
scas
in
in
xchg
xchg
dec
mov
pop
lret
dec
push
int3
loopne
adc
ds
push
xchg
jnp
dec
push
xchg
mov
mov
jne
call
jecxz
pop
add
adc
sub
ret
cmc
mov
fists
sub
push
adc
push
es
or
insl
or
stos
pop
stos
das
je
ljmp
mov
adc
jae
pushf
cmp
repnz
push
cltd
cld
daa
orl
je
sahf
lds
sbb
ret
iret
pop
int
repz
lods
orb
sub
lea
int3
ret
and
inc
test
pop
pop
aad
xchg
js
pop
ds
cmpsl
decb
inc
pop
mov
rorb
rcrl
xor
stos
mov
sbb
push
daa
setnp
ja
mov
fnstsw
mov
sbbl
xor
shlb
push
jl
scas
adc
mov
sarl
out
sbb
or
je
ja
mov
jnp
ja
jmp
push
sbb
inc
inc
adc
sbb
sbb
pop
add
sbb
or
fsubrl
enter
mov
sbb
aam
call
jecxz
push
cmpsb
and
inc
jbe
ret
mov
xorb
mov
leave
sub
push
or
sub
ja
xchg
aas
scas
call
rcr
popa
cltd
xor
insl
in
mov
push
stos
leave
nop
adc
aam
int3
adc
iret
cmp
lods
lret
loopne
iret
fdivrp
dec
ffree
daa
in
add
icebp
call
ja
test
sbb
into
push
cmp
in
mov
ficoml
jnp
and
call
pusha
xchg
fwait
loopne
sahf
and
xlat
je
lods
stc
lods
shlw
das
jb
bound
adc
push
daa
xchg
mov
popa
out
aad
xor
das
aaa
bound
sbb
jle
cmp
cmpsl
lods
rorb
mov
jle
sub
mov
and
jge
cmp
mov
arpl
in
jb
bound
xor
jns
jns
fidivs
inc
ds
lea
lahf
adc
add
mul
xor
outsb
jmp
add
mov
leave
mov
adc
adcb
pop
test
adc
sbb
fdivr
out
je
movsb
adc
call
mov
jmp
int3
adcb
or
sbb
mov
and
movlps
dec
ja
push
cmp
cmp
repz
cltd
cmp
ja
xchg
push
outsb
push
es
fs
aam
dec
lret
arpl
adc
mov
mov
dec
inc
shlb
adc
xor
sti
mov
and
fst
adc
inc
incb
dec
add
pop
mov
cmp
dec
cli
jp
pusha
fwait
adc
lcall
dec
fsubrl
sub
jns
xor
add
sub
cmp
and
ret
cmp
inc
push
pop
xchg
or
pop
call
fwait
pop
mov
lods
es
incb
outsb
shr
int3
sub
mov
mov
inc
out
cltd
pop
iret
loop
jle
fcmovbe
pop
mov
push
loope
push
jge
test
mov
mov
xor
push
push
adc
cli
jae
and
mov
mov
popa
sub
imul
js
aad
xchg
mov
push
and
pop
sbb
lahf
mov
out
pop
js
outsb
sub
pop
mov
dec
ljmp
mov
ja
jne
mov
lea
ds
pushf
mov
call
mov
movsb
mov
adc
xor
jge
add
jo
adc
out
les
xchg
ja
repnz
pop
and
xor
mov
pop
pop
shll
push
dec
mov
mov
pslld
cmp
inc
stc
jg
cli
addl
mov
mov
sbb
cmp
inc
rep
adc
and
fsubs
pop
jnp
fadd
dec
xor
xchg
nop
fldcw
ret
lret
inc
je
jmp
movsl
adc
mov
xlat
dec
inc
push
das
addr16
mov
shlb
mov
push
mov
sub
aad
int
das
stos
xor
shr
mov
push
jmp
pop
lock
mov
and
mov
jmp
pop
sub
fnstsw
loope
cmpsl
inc
and
and
lods
jae
or
cmpsb
sub
dec
or
jo
pop
lret
and
mov
jnp
stos
test
insl
subps
inc
mov
lods
pop
and
push
push
mov
pop
jns
xchg
or
repz
mov
xchg
ja
or
icebp
push
shrb
int3
or
scas
adc
adc
in
rcl
pusha
lcall
pop
mov
sub
mov
dec
faddl
ja
sbb
xchg
cmpsb
pop
ds
mov
push
xchg
call
insb
jne
out
mov
sbb
es
in
shlb
das
das
dec
or
jb
push
mov
mov
dec
inc
in
mov
inc
pop
loopne
cltd
cmc
cli
push
fstpt
dec
into
mov
cmp
push
loope
pop
call
xor
mov
cld
push
mov
cmpsb
test
add
or
cmp
adc
imul
jno
clc
add
loopne
insl
adc
and
fidivs
ret
pop
lret
sbbl
es
dec
lahf
cmovs
mov
xchg
mov
mov
test
cmp
pop
loop
xchg
dec
loop
in
imul
movsbl
clc
sbb
or
aaa
jne
clc
out
in
rcl
mov
jns
adc
inc
mov
shlb
call
je
ja,pt
test
mov
in
outsl
aaa
data16
mov
popa
ljmp
add
dec
jl
sub
pop
mov
je
pusha
outsb
negb
das
imul
mov
fisttps
data16
fdivr
and
xor
xchg
vpandn
push
scas
movsb
jno
mov
rclb
pusha
dec
fnstsw
lea
mov
int
test
repnz
loope
push
jnp
call
and
jae
pmullw
out
xor
in
dec
mov
dec
sub
stc
into
and
or
sub
xorb
data16
repnz
pop
decl
cmp
push
cmp
stos
hlt
add
cmp
mov
or
je
mov
iret
or
or
or
pop
mov
mov
push
aaa
cld
fmull
daa
fcoml
cs
push
int3
push
pusha
dec
imul
shlb
mov
and
xchg
imul
jnp
or
loopne
mov
mov
add
dec
imul
lret
repz
and
popa
sbb
xor
or
cmp
fldt
or
and
and
sbb
mov
adc
shl
inc
inc
and
in
les
jle
dec
lods
mov
popf
xchg
inc
fs
ret
mov
jge
sub
or
rcr
xchg
hlt
les
cmp
xor
out
sbb
lods
js
adc
cmpsl
std
jnp
js
adc
or
lcall
es
push
das
fcompl
mov
mov
loope
loop
xchg
jge
ret
pop
cld
adc
out
dec
daa
and
data16
ret
dec
mov
jo
sub
mov
sub
fwait
adc
cli
jg
repnz
sbb
push
mov
jns
and
test
call
and
andl
push
xchg
cmp
icebp
push
mov
sbb
movb
lds
sahf
out
aaa
lock
mov
mov
mov
adc
loopne
cmp
sbb
push
repnz
shlb
sbbb
aad
jg
cmp
clc
into
js
cmp
mov
test
fbld
pop
popf
mov
adc
fwait
add
sbb
xchg
out
push
push
adc
jb
mov
out
in
inc
leave
dec
cmp
sahf
int3
cmpsl
jle
cmp
mov
loopne
stos
mov
xorb
add
push
jmp
out
jo
or
shll
and
or
idivb
js
repnz
hlt
mov
xchg
or
push
pop
sbb
adc
jns
xor
outsb
sbb
fldt
xchg
scas
lods
popa
jmp
jge
ret
dec
pop
inc
dec
sub
nop
jmp
sub
xchg
out
dec
arpl
stos
jae
or
push
js
add
pop
lahf
xor
loope
ja
rcrl
xchg
mov
jl
push
jae
aas
mov
cmp
inc
mov
jae
lds
imul
loop
or
jns
pop
mov
sub
mov
inc
mov
add
pop
test
js
mov
and
aas
or
outsb
rcll
dec
lret
repz
push
and
insb
into
jge
fldenv
test
pop
dec
movsb
out
ja
and
pop
pop
cltd
push
cld
mov
and
aaa
sub
mov
or
mov
add
rolb
mov
xor
insb
out
adc
push
fsub
pop
fs
in
push
xorb
sub
or
iret
aaa
dec
inc
pop
test
mov
add
adc
or
into
mov
das
dec
mov
or
pop
jns
add
gs
int3
jne
mov
cmp
inc
stos
push
test
cmp
js
sub
dec
mov
inc
jns
push
int3
loopne
jae
dec
out
dec
sbb
adc
fwait
aaa
stos
inc
out
dec
sbb
lahf
xor
inc
and
movsb
fwait
jnp
iret
mov
andb
ljmp
movsb
cmpsb
aaa
cmp
loopne
pmaxsw
pop
nop
fistps
mov
mov
sub
sbb
mov
add
cld
adcl
adc
or
xchg
shlb
push
dec
dec
dec
mov
fcoms
or
jmp
jo
into
lods
aas
fldt
rcrl
or
jl
mov
ljmp
pop
xchg
fwait
movsl
jb
and
jns
pop
mov
lods
outsb
cwtl
loop
pop
mov
jns
scas
inc
inc
push
xchg
or
push
push
imul
lret
push
or
or
jl
rorb
adcb
cs
mov
shlb
incb
mov
out
mov
dec
adc
out
les
rolb
inc
daa
ds
or
sub
cmpsb
push
movsb
mov
sbb
in
jb
cmp
dec
or
ljmp
xor
test
aaa
mov
repz
int3
mov
out
adc
call
scas
loopne
sbb
pop
xchg
adc
enter
insl
fwait
sub
jmp
loopne
notl
mov
or
fstl
add
adc
ret
mov
mov
lock
lret
movb
ss
daa
mov
xchg
hlt
add
cli
and
or
lods
pop
mov
xor
stos
mov
push
mov
ljmp
sbb
in
ss
repz
jne
adc
mov
les
xlat
pop
lret
or
xchg
mov
jne
fnstsw
add
sbb
lcall
outsb
sahf
cld
xor
xchg
cmp
mov
arpl
fxch
mov
cs
lahf
mov
and
adc
cmpsb
jo
adc
js
sub
pop
mov
cmp
aam
in
jb
sbb
out
push
or
pop
sub
pushf
in
lds
in
movsb
push
jecxz
push
nop
push
stos
mov
subl
icebp
subb
mov
cmp
and
mov
mov
mov
aam
adc
dec
pop
ljmp
mov
pop
jne
incb
dec
cmpl
pop
sub
cltd
rclb
inc
sbb
aam
sub
and
sahf
xor
lret
or
lods
push
dec
lahf
xchg
pop
pop
cmp
inc
bound
sbb
fildll
push
pop
iret
scas
xchg
cmc
test
pusha
mov
ja
mov
scas
xchg
xchg
inc
inc
sbb
sub
leave
cmp
xor
je
in
adc
les
nop
and
xor
inc
jg
push
jns
sti
stos
sub
data16
fwait
add
cli
mov
pusha
cmp
or
xor
lret
inc
pop
dec
roll
arpl
sub
test
inc
cmp
or
arpl
cmp
or
adc
mov
insl
sbb
into
mov
cmp
cs
loopne
mov
jle
add
iret
movsl
inc
fildl
pop
pop
add
cli
mov
stc
aad
dec
xor
sbb
cltd
in
xchg
and
or
adc
pop
mov
cmp
and
loope
fwait
loope
rcrb
pop
outsl
insl
popf
lock
inc
cmp
mov
das
js
loop
pop
mov
fdivrl
push
mov
sti
incl
push
arpl
mov
pop
gs
stc
dec
loop
xor
jp
stos
push
mov
cmp
xor
addl
mov
fldt
das
fnstcw
fcom
adc
sbb
mov
mov
inc
int
push
dec
clc
and
and
sbbb
adc
xchg
nop
into
mov
mov
mov
cli
adc
jecxz
cmp
fcmovnbe
pop
pop
dec
inc
add
push
loopnew
pusha
inc
into
sti
or
sbb
hlt
loopne
shlb
cmpsl
aaa
push
mov
aaa
xor
hlt
jmp
lcall
sahf
cmc
mov
insl
icebp
add
sbb
dec
sub
in
nop
fisubs
addr16
ficomps
inc
test
dec
push
mov
mov
adc
and
inc
outsb
inc
jp
in
je
inc
inc
or
jmp
outsb
mov
data16
das
xchg
lret
sub
xchg
aaa
xchg
xor
test
fstl
or
pop
jno
imul
hlt
push
jnp
xorb
inc
sbb
xor
bound
dec
mov
stos
or
andb
inc
cmp
idivl
push
pop
inc
cmpb
enter
xor
pusha
leave
pop
jmp
mov
in
push
xchg
inc
add
cmp
out
icebp
jnp
lods
and
aaa
inc
mov
mov
aam
jne
pop
cmp
push
mov
mov
mov
xor
int3
inc
jecxz
fxtract
popa
out
nop
mov
outsl
push
stos
xsave
jge
and
add
cmpl
sbb
aas
push
fistps
pop
cmc
or
jl
or
push
jecxz
sub
test
fmul
jecxz
xchg
mov
fistpl
lds
xor
pop
sub
pop
jmp
push
mov
pop
ja
test
bound
xor
push
xor
sahf
gs
mov
loope
inc
xchg
push
mov
daa
xor
mov
adc
aaa
fisttpl
add
je
push
rorb
popa
sti
inc
jmp
repnz
mov
cmp
ds
xor
out
push
jae
inc
mov
cmpsl
out
mov
scas
or
sub
add
pop
aaa
dec
into
jae
mov
mov
sub
shrb
and
inc
pop
pop
mov
cltd
cmpsb
jmp
and
out
popf
mov
mov
jbe
or
mov
mov
bound
mov
shlb
pop
sub
out
xchg
loop
or
sub
jecxz
and
stos
outsb
sahf
insb
add
nop
iret
jae
rclb
xor
test
dec
les
test
inc
sub
mov
sahf
sub
popa
mov
ljmp
xchg
test
icebp
mov
pusha
adc
jnp
pop
adc
xor
ret
mov
inc
les
cld
sub
movl
outsb
inc
js
mov
ficompl
int
sbb
dec
nop
out
out
mov
or
add
mov
push
adc
jecxz
mov
sbb
push
in
js
lock
repnz
ds
and
fimuls
ret
cltd
or
pop
iret
loope
xchg
ds
dec
movsb
rcr
xchg
xchg
adc
ja
aaa
ljmp
test
mov
in
bound
imul
lret
outsb
cmp
and
pop
es
jp
xor
nop
lcall
push
sub
daa
cmp
in
test
out
jbe
in
sub
std
iret
test
jle
jo
add
loopne
into
neg
test
add
iret
sub
cs
jecxz
pop
push
mov
mov
jecxz
aad
das
daa
xchg
imul
or
sub
dec
jge
push
sub
and
addr16
sbb
xchg
xor
push
pop
cmpsb
jb
stos
push
dec
mov
aas
mov
jg
sub
icebp
push
addr16
inc
mov
xor
sbb
in
mov
das
push
push
push
dec
pusha
enter
addr16
and
cmp
mov
out
mov
imul
push
or
xor
out
stos
and
jmp
into
lcall
mov
nop
icebp
cmp
dec
lcall
sub
fwait
out
pavgw
mov
rcr
cmp
daa
or
inc
cmpsl
test
insb
xchg
aam
or
xchg
xchg
pop
ret
imul
sbb
cmc
and
cmpsb
sbb
mov
push
cltd
jp
aas
add
add
mov
cmp
pop
or
pop
inc
call
fcomps
test
in
int3
add
sahf
push
aam
push
fs
outsl
inc
mov
jmp
sbb
popf
int
cmp
fcmovbe
mov
les
add
lret
sub
loopne
pop
sarl
hlt
jnp
das
xlat
jo
mov
addl
dec
aaa
ljmp
dec
daa
cwtl
mov
jae
test
loope
lcall
es
push
jae
push
es
fimull
js
inc
clc
test
ret
add
jmp
jo
push
pop
lret
push
repz
mov
mulb
popf
fdivrs
test
fwait
outsb
lahf
cwtl
fisubs
cmpsb
mov
mov
lds
mov
nop
pop
cmp
pop
sub
or
adc
ds
testl
lret
push
ror
ficoms
sbb
ret
or
cltd
rorl
sub
stos
add
push
data16
dec
jmp
adc
fisubl
jmp
inc
je
in
sbb
pop
les
cmp
sub
mov
adc
mov
ret
and
ss
or
insb
xor
jnp
call
mov
movsb
pusha
xchg
fistpl
sar
in
xor
add
std
sbb
outsb
mov
jb
stos
decl
sub
insb
mov
pop
add
xor
add
loop
pusha
les
insb
push
mov
std
push
inc
sbb
and
int3
and
push
outsl
inc
scas
outsl
stos
jmp
cld
cmp
pusha
pop
ljmp
pop
and
push
inc
xchg
mov
pusha
pushf
clc
inc
inc
nop
and
repz
xchg
movsl
pop
mov
sbb
hlt
cmp
mov
stos
data16
adc
test
lret
pusha
mov
aam
cwtl
jl
push
dec
push
dec
sbbl
lret
xchg
fldl2t
and
repz
add
fucom
xchg
loope
mov
sbb
into
outsl
ss
movsl
dec
add
or
sbbl
mov
call
jmp
in
sub
or
jno
adc
lret
sub
pop
stos
sbb
pop
and
lea
sub
popa
loope
push
dec
jle
cmpl
dec
leave
cli
sbb
dec
mov
jl
int3
push
clc
jae
xchg
push
pop
fcomps
sbb
cld
js
ret
cmp
xchg
add
mov
push
popa
cmc
inc
fidivrs
adc
dec
aad
inc
lods
lock
std
jbe
imul
push
mov
inc
pop
popf
aaa
clc
sbb
push
inc
xlat
shl
pop
adc
pop
call
lahf
shlb
shll
jg
lea
icebp
or
jae
cmp
stos
and
outsb
lods
dec
cmp
fwait
inc
adcl
neg
orb
pop
mov
or
mov
out
test
in
ds
inc
cmpsl
xchg
test
cltd
add
gs
fmull
fisubrs
int
movsb
int
or
int3
hlt
push
lods
fldcw
xchg
sub
dec
loope
movsl
frndint
scas
movl
aam
dec
cwtl
inc
mov
jne
mov
dec
adc
dec
fisubrl
shl
das
outsl
outsl
fcmovnu
dec
xor
jns
push
cmc
imul
sub
popf
fists
push
inc
fmuls
inc
cmp
sub
jl
rcll
cs
mov
fs
mov
jnp
test
mov
xchg
in
mov
xchg
sub
pop
rclb
push
in
push
and
insb
je
add
sbb
jne
dec
dec
jl
cmp
mov
test
sub
add
push
add
int
les
aad
das
sbb
jnp
in
pop
daa
mov
push
pushl
ljmp
sbb
add
pop
xor
je
add
inc
jo
dec
mov
cld
lods
push
in
push
imul
call
xchg
in
cmp
jns
fs
popf
cmp
call
in
stos
pusha
es
dec
xor
push
cwtl
in
movsb
out
jp
jg
aaa
sbb
lahf
pop
mov
lret
mov
inc
sbb
jle
iret
les
push
mov
ret
aad
lea
ret
sbb
xlat
xor
ljmp
out
jle
pop
adc
arpl
stos
sub
movsl
add
std
out
mov
push
sbb
inc
enter
negb
mov
push
lock
jnp
les
and
clc
movsl
mov
sbb
adcl
mov
or
fsubrp
fisubs
push
push
cmpsl
repz
aaa
dec
fistpl
or
les
sub
daa
arpl
mov
mov
test
adc
jno
dec
adc
push
test
and
cmp
inc
inc
rcrb
push
sub
std
mov
popa
pop
faddl
fcomi
jg
lahf
movb
pop
addr16
jge
rorl
insb
test
pop
xchg
rcl
push
imul
lret
mov
lock
adc
inc
je
les
stc
std
js
cmp
push
adc
insb
jecxz
test
not
and
xchg
inc
push
and
and
inc
adc
xor
jle
mov
sub
out
fiaddl
in
bound
dec
jge
adc
cli
insb
cltd
fwait
jne
xor
js
imul
add
mov
sub
cmp
jbe
cli
push
cmp
adc
inc
in
xchg
fisubrs
and
inc
cmp
out
pop
pop
int3
jmp
repnz
cmp
cwtl
pop
lods
pop
sbb
adc
cmpsb
lahf
pop
mov
vaddsubpd
dec
fwait
leavew
aam
inc
sti
ficomps
xor
hlt
push
or
push
jae
scas
cmp
into
mov
aaa
mov
rcr
aaa
cwtl
dec
dec
cmp
xor
popf
fcmovnu
shlb
and
sub
add
daa
movsb
add
fdivl
or
mov
push
dec
std
xchg
adc
or
push
cmp
std
jg
and
hlt
push
add
ds
mov
das
cld
les
es
pushf
inc
nop
sub
lret
or
push
pop
fdivr
inc
stos
movsl
cmpl
dec
ret
push
jmp
subb
sbb
dec
add
sbb
std
cltd
sbb
inc
sub
loope
xor
cmp
mov
pop
dec
mov
call
test
mov
xor
adc
sub
lcall
std
pop
stos
xor
xor
sti
xchg
sub
js
jle
fists
hlt
icebp
insb
aas
fwait
pop
imull
int
int
sub
lods
add
lods
mov
sub
and
repz
xor
iret
es
jns
fisubs
sub
inc
xchg
xchg
lods
popa
mov
cli
add
pop
inc
pushf
xchg
bound
in
mov
xchg
mov
movsl
cmc
cld
adc
sub
cmp
or
mov
inc
adcl
pushw
and
adc
mov
jl
js
sarb
nop
inc
inc
arpl
jno
jno
mov
and
xchg
data16
adc
popa
test
add
out
inc
mov
sbb
ja
mov
mov
daa
sub
in
add
push
sbb
adc
cwtl
sub
pop
pop
dec
xor
jl
arpl
adc
popa
repz
test
push
adc
cmpsl
fstps
les
pop
movsl
not
and
xor
ljmp
stos
ljmp
ret
xor
pop
roll
repz
xchg
mov
jne
es
inc
push
cmp
or
out
sbb
aad
push
or
fisubs
out
push
or
mov
sub
cltd
out
cmp
outsl
jo
or
enter
xlat
pop
push
xchg
push
add
fiaddl
adc
jle
mov
popf
hlt
aad
into
cs
inc
mov
aas
xchg
pop
inc
sbb
xchg
mov
push
or
mov
sub
fwait
xchg
xchg
repnz
add
mov
push
xchg
sets
inc
push
pop
xor
push
cmp
repz
and
imul
ss
fnstsw
lret
push
sub
xchg
mov
aad
test
outsl
jp
out
cmp
inc
addr16
adc
cmp
xchg
pop
out
mov
pop
pop
insl
xchg
sbb
pop
mov
call
popf
fisubs
xchg
ja
leave
shll
mov
sub
push
pop
push
jae
sahf
add
lods
sbb
scas
cmp
sarl
dec
dec
mov
pushf
push
xor
cmpsl
inc
or
jl
loop
xor
cs
mov
fistl
dec
int
aaa
add
mov
pusha
cwtl
cwtl
mov
daa
xchg
xor
in
fs
pop
adc
xchg
aad
ds
rorl
pop
and
sbb
jmp
lea
jecxz
inc
div
or
adc
xor
push
sbb
ljmp
insb
fs
std
xchg
testb
insb
jnp
out
cmp
mov
and
out
push
mov
sti
inc
out
add
insl
jbe
out
data16
or
loope
add
lret
xchg
aad
lea
mov
jmp
pop
stos
fiaddl
stos
jae
iret
cmp
int3
add
adc
push
add
enter
pop
xor
jecxz
lock
test
mov
xorl
or
inc
mov
push
xchg
or
jge
movl
and
loopne
xchg
rcl
jnp
mov
mov
xor
mov
adc
adc
insb
call
cs
or
mov
sbb
fnstsw
ds
subl
test
cmpsb
push
movsl
mov
loop
sarb
dec
mov
mov
lcall
mov
movsb
out
das
cs
inc
push
xor
outsl
push
jne
pop
loopne
jno
xchg
es
cmp
pop
addr16
ret
fs
xor
jbe
sahf
cwtl
pop
andl
lods
hlt
dec
enter
dec
xor
ss
mov
mov
mov
mov
mov
pop
push
stos
gs
push
sub
push
iret
into
mov
add
movsl
aam
jecxz
adc
xor
sbb
jg
push
repz
jl
jae
inc
xchg
sarl
mov
subb
clc
stos
jge
mov
jbe
add
push
add
cmc
pop
jp
fistl
sub
add
stos
xchg
iret
fdivl
addr16
iret
dec
cltd
loop
stos
into
pop
int
mov
ret
inc
insl
pop
rorb
add
lahf
or
aaa
sti
aas
std
pop
jp
push
inc
or
rorb
xchg
mov
xchg
adc
stc
mov
pop
mov
pop
xchg
add
jb
cmp
in
inc
je
cmp
xor
mov
dec
mov
jle
xchg
sbb
xor
dec
pop
xchg
in
jmp
push
or
dec
mov
push
add
ret
call
xchg
lock
stc
sahf
imul
les
cmpb
iret
lahf
data16
push
jae
xchg
std
loope
dec
xchg
shl
push
mov
cmp
xor
sub
shll
in
dec
or
xchg
rcrl
dec
or
lret
inc
inc
test
adc
jno
sbb
sbb
or
jae
sbb
xlat
add
movsl
aam
or
out
jecxz
sbb
cld
ljmp
enter
mov
mov
arpl
dec
sti
aaa
inc
bound
cld
inc
jnp
inc
lret
mov
sub
pop
test
fildl
shrb
adc
push
int3
inc
mov
mov
pop
test
insl
adc
test
sub
fs
into
jmp
sbb
push
xor
in
or
fwait
pop
dec
pop
sub
dec
repnz
inc
xchg
dec
mov
clc
sub
arpl
dec
mov
xlat
dec
mov
cld
push
andb
fnstcw
stc
mov
je
add
xor
xor
mov
js
jno
mov
hlt
lahf
test
cmp
les
inc
test
xchg
jmp
inc
dec
pop
jmp
out
fucomi
xchg
adc
and
xchg
and
insl
fwait
jb
xchg
add
mov
fs
loopne
jp
sub
cmp
pop
push
mov
xchg
inc
repz
test
cmpsl
ret
fcomps
adc
push
call
lar
push
leave
mov
aad
cmp
mov
add
inc
les
add
cmp
xor
jge
std
mov
lcall
ret
sub
out
mov
out
mov
jbe
fimull
aad
push
dec
mov
rclb
cmp
loope
mov
cld
sub
clc
sub
pushf
shlb
lea
fnsave
mov
imul
pop
cmpsl
cmp
stos
sub
push
mov
das
inc
cs
xchg
test
adc
fcomip
test
scas
dec
imul
inc
mov
adc
addr16
add
jg
cwtl
dec
sub
mov
jg
xor
imul
sbb
xchg
mov
aam
out
movups
in
fildl
ret
push
or
adc
cmp
adc
out
nop
or
in
pop
jae
add
es
fbstp
push
mov
cmc
and
mov
pop
fidivrs
cld
fwait
sub
stc
fcompl
jl
push
arpl
ljmp
adc
in
in
pop
iret
and
lret
or
imul
loope
pop
xor
es
pushf
pop
aam
jge
inc
icebp
pop
dec
sbb
aas
hlt
inc
and
push
push
sbb
dec
cmpsb
add
cmp
cmp
jmp
mov
sarl
leave
andl
add
jo
cs
daa
xchg
test
inc
fsubs
fstpt
mov
mov
push
sub
imul
fnsave
out
lea
sbbl
cs
mov
dec
and
mov
xor
jb
sub
cli
add
and
cmp
sbb
iret
adc
call
cmc
fmulp
lock
sub
fidivs
shll
jae
add
inc
rorb
sbb
xorl
jns
out
cmp
pop
clc
es
cld
and
adc
addr16
adc
lret
aad
sbb
loop
fcomps
pop
clc
ja
mov
aam
sub
jne
mov
lds
push
jno
inc
int
push
int
xchg
sbb
mov
or
cmp
gs
or
mov
add
fdivrl
fisttps
ret
call
lcall
ss
les
mov
js
lods
pop
sub
add
loopne
mov
nop
mov
pusha
shr
jnp
sub
sbb
pop
cmpsl
bnd
test
cmpsb
pop
xchg
sti
and
int3
and
adc
push
arpl
and
mov
inc
sbb
sbb
clc
aaa
test
movsb
push
jbe
jle,pn
in
rorb
repnz
mov
je
push
nop
dec
sub
pop
sti
aad
add
lret
lcall
xchg
in
adc
push
inc
in
in
fisttps
mov
push
cmc
pop
data16
push
incb
and
sbb
lods
inc
shll
xor
dec
hlt
notb
mov
sub
daa
mov
fsts
add
xchg
xchg
or
inc
mov
mov
jp
and
jns
xchg
mov
cld
sbbl
inc
fcmovnb
jne
sub
andb
fcmove
adcl
lods
scas
int
cli
add
xchg
sarb
lods
lcall
mov
mov
add
mov
popa
pushf
sub
push
xor
jnp
cld
jp
push
pop
cmp
ds
stos
sbb
arpl
sbb
xchg
outsl
cmc
add
movb
pop
insl
push
aad
mul
xor
cwtl
loope
sbb
jmp
pop
testb
daa
add
data16
inc
xor
inc
push
add
sub
jno
mov
in
repz
xchg
fldt
sahf
mov
add
jl
dec
xchg
nop
in
daa
adc
popa
inc
or
xor
jmp
and
imul
adc
and
test
mov
cmc
pop
imul
clc
xchg
cmp
mov
fnstenv
dec
cs
fstpt
addl
sub
std
popf
adc
xor
cmc
pusha
pop
pop
pushf
pop
dec
mov
je
aam
xor
stc
inc
sahf
push
sti
aas
pop
lret
lods
sbb
and
sbb
sub
sbb
mov
jnp
jbe
dec
mov
lds
adc
mov
enter
push
add
inc
mov
xor
mov
cmpl
mov
xchg
push
xor
add
cmp
ja
sbbl
mov
pop
jnp
sub
mov
gs
xlat
pop
xor
pop
leave
sub
aas
lods
xlat
cmp
movsb
popf
movb
test
xchg
jno
dec
add
dec
aam
jmp
lods
ja
xchg
orl
mov
adc
sbbb
mov
adc
xor
push
sahf
fsts
lahf
sub
push
insb
add
ljmp
xchg
pop
pop
mov
cs
shlb
cmp
pop
roll
into
shrb
adc
stos
sub
shl
push
mov
js
aam
movsb
jae
dec
cwtl
xor
push
insb
stos
mov
jmp
dec
adc
js
mov
xor
inc
or
jg
lcall
mov
cli
mov
stos
dec
movsl
pop
add
clc
cmp
enter
and
mov
cmp
lcall
inc
hlt
add
sbb
add
pop
pop
mul
std
repnz
std
pop
or
inc
cmpsl
lahf
stc
cmp
rcr
insl
mov
fnstcw
mov
movsb
xchg
mov
inc
mov
std
add
jmp
sbb
cmp
add
mov
fdivs
xchg
sbb
xor
in
push
mov
xor
cmp
daa
xchg
repnz
lds
inc
jmp
mov
cmovo
inc
cmpsl
fnstsw
dec
stos
cli
jge
cmp
out
stc
bound
adc
dec
jl
cltd
inc
cmp
or
mov
shl
mov
lock
pop
pop
ret
outsb
lds
dec
inc
push
add
and
add
and
push
adc
jns
mov
xor
loope
fisubrl
popa
and
arpl
jmp
pop
in
daa
sub
icebp
dec
mov
pusha
jl
mov
fidivrs
jo
xchg
push
fs
leave
inc
or
inc
lock
jns
xchg
movsb
inc
mov
cmc
rol
jl
sbb
mov
aas
gs
and
adcl
xorl
int
add
cmp
aam
stc
dec
push
in
leave
jnp
out
lret
scas
xchg
nop
inc
mov
inc
dec
mov
data16
dec
cmp
data16
es
test
sbb
jl
xor
dec
dec
xlat
mov
cmc
movsb
hlt
cmp
or
xchg
xchg
sbb
ror
idivl
jne
mov
repnz
int
fs
pop
loopne
mov
xchg
out
mov
or
jmp
pop
fwait
xor
dec
jecxz
fisttpll
aad
fldenv
jbe
fwait
sub
out
jp
and
rcrl
jns
jne
daa
pop
cwtl
inc
push
push
xchg
cli
rcl
outsl
lds
stos
pop
pushf
lahf
mov
dec
mov
fs
xchg
out
mov
icebp
mov
jae
inc
jo
lods
mov
bound
addr16
in
dec
scas
add
jae
std
int3
sub
xchg
mov
fucomi
xchg
fldenv
lahf
mulb
jae
nop
mov
adc
sbb
int
adc
mov
mov
movsl
mov
outsb
pop
dec
cli
xchg
mov
or
mov
jge
jnp
dec
xchg
jle
outsl
cmp
xchg
mov
popa
mov
dec
sub
or
add
mov
hlt
mov
mov
or
mov
jnp
xchg
jle
adc
sbb
jecxz
or
shll
xor
aad
mov
push
mov
xor
mov
or
sqrtps
ss
and
fidivrl
popa
sub
mov
push
repz
data16
test
repnz
mov
decl
push
add
mov
inc
insb
xchg
and
or
movsb
movsb
sub
hlt
push
lods
subb
sbbb
jns
cwtl
movsl
mov
xchg
cmpb
lret
push
cld
std
or
mov
jnp
xor
sbb
test
scas
movsb
lret
cmp
mov
inc
fsubrp
adc
push
lock
out
lret
or
sub
mov
das
orb
pop
paddd
sarb
cltd
or
cltd
in
cmp
js
dec
sub
std
pop
dec
loopne
lret
mov
sub
push
aam
xor
enter
xor
jle
jnp
pop
lods
insl
adc
inc
jge
dec
jns
jne
add
pusha
ds
stos
out
mov
aad
push
add
test
fwait
and
and
repz
pop
xor
cld
mov
adc
cltd
addb
fs
gs
shll
testl
sub
stos
outsl
nop
arpl
aam
inc
xor
sub
dec
xor
sbb
push
clc
cmpsl
clc
shll
in
or
jg
inc
sbb
push
mov
popf
lds
cltd
adc
jecxz
sub
out
in
push
xchg
cmp
hlt
jns
ret
pop
lcall
faddl
stos
sub
cmp
ljmp
pushf
lahf
xchg
and
loop
mov
or
inc
mov
lods
and
bound
jmp
adc
lods
jl
mov
fwait
fwait
lahf
mov
dec
inc
xchg
sbb
mov
xor
inc
in
jns
int
inc
fsubs
mov
jne
sti
enter
mov
adc
std
popf
lret
and
pop
sub
aad
loopne
cmp
pop
xor
adc
sarl
cmp
inc
and
sub
xor
mov
lahf
vucomisd
push
add
pop
xchg
cmp
rcll
pop
test
push
lds
push
fwait
mov
jno
rol
add
movb
fmuls
mov
dec
xchg
mov
leave
js
test
jnp
sbb
xchg
push
and
adc
mov
xlat
inc
mov
popa
in
cmc
enter
or
mov
xchg
pop
and
mov
jo
sub
or
mov
je
cli
dec
ja
ljmp
aas
pop
loopne
dec
andl
mov
pop
enter
push
incb
je
xchg
rorl
jno
and
outsb
inc
adc
lea
outsl
lods
mov
xchg
push
hlt
in
out
les
aad
xor
xchg
adc
cli
dec
popa
movl
dec
fidivl
jecxz
inc
les
icebp
adc
inc
push
dec
test
int3
leave
data16
adc
xor
push
xor
daa
mov
mov
dec
movb
lcall
daa
xchg
sbb
pop
and
inc
rolb
sti
sahf
xchg
sub
add
aam
fcoml
jno
mov
imul
cmp
pop
cltd
les
leave
sub
pop
xchg
popf
sahf
dec
sbb
cmp
sti
add
jmp
cmp
mov
ret
mov
das
cmpsb
adc
in
insb
shlb
std
xor
icebp
daa
add
movsl
or
push
hlt
jp
sub
cli
movsl
xor
out
sbb
ret
movsb
insl
test
scas
sbb
pop
cltd
push
jmp
mov
clc
xlat
leave
inc
imul
lea
roll
jle
iret
ret
mov
cmpsb
shrb
fistl
aas
dec
or
mov
mov
push
mov
mov
sbb
xchg
lock
lret
call
sbb
mov
int3
addb
jle
fldlg2
mov
mov
or
sar
mov
test
adc
push
jo
pop
fwait
lods
jg
jno
rolb
cmp
push
pushf
pop
xchg
fdivr
dec
hlt
inc
mov
mov
rcrb
xor
arpl
push
push
int
cltd
test
arpl
inc
enter
pop
rolb
pop
xlat
and
test
shrb
pop
cmp
cwtl
shrb
test
out
mov
xchg
dec
push
sbb
inc
inc
in
push
pop
lea
pop
cltd
push
imul
int
outsl
push
loop
add
pop
cmp
fadds
lret
into
hlt
xchg
stc
loope
pop
xchg
adc
aaa
lret
xor
shlb
xor
xor
push
inc
dec
jle
jae,pn
pushf
pop
dec
outsl
ret
test
sti
jl
ljmp
mov
pop
enter
jle
xchg
mov
add
stos
add
out
fdivrl
push
xor
dec
insb
pop
inc
add
sbb
sub
out
notl
or
hlt
mov
jge
fwait
xchg
xchg
rcrl
ss
pop
fs
jecxz
mov
cltd
into
imul
out
dec
cmp
xlat
sub
fwait
notb
or
leave
add
sub
push
mov
outsl
cmc
cmp
lds
pop
testb
jle
adc
mov
jecxz
cvttps2pi
sbb
jns
rorl
popf
shrl
loopne
add
in
mov
add
int
mov
mov
pop
imul
stos
mov
sub
imul
rcrb
cwtl
lahf
icebp
fbld
imul
dec
out
bound
pop
and
cwtl
cmp
sbb
nop
insl
pop
pop
and
fwait
inc
mov
mov
or
xchg
pop
ja
fldt
fmulp
mov
push
sbb
lret
mov
in
cmpsb
add
sahf
subb
sub
fdivl
xchg
mov
popa
cmp
int
loope
rclb
dec
enter
sub
stc
loope
mov
adcl
add
icebp
into
jp
test
adc
push
pusha
jecxz
aaa
inc
xor
inc
mov
xlat
sub
stos
mov
mov
loope
test
mov
xchg
data16
scas
cmc
rorl
push
ret
inc
lock
dec
movsl
movsl
stos
stos
adc
cmc
sbb
fcoms
xchg
push
cmpsb
rclb
pop
ds
jno
or
fsubrl
or
pop
shl
xchg
adc
adc
push
outsl
test
dec
adc
sub
les
jp
jb
insl
arpl
dec
adc
xchg
lret
inc
mov
test
sbb
and
aam
push
in
cmp
mov
cwtl
rol
pop
pushf
push
int
arpl
loop
or
jbe
insl
dec
push
sahf
inc
xlat
xchg
mov
sbb
xchg
cmc
pop
xor
sub
ljmp
stos
mov
jmp
jo
jmp
jmp
or
xchg
push
push
jl
push
xchg
repz
push
dec
lods
faddp
jo
fcomi
jo
and
movhps
adc
ds
jbe
popf
lea
sti
inc
fstpl
sbb
ret
xor
mov
xchg
mov
dec
jmp
movsl
test
xchg
pop
stc
cmpsb
in
ficoms
mov
xchg
in
pop
push
pop
mov
inc
fmul
pop
jmp
in
pop
and
adc
mov
aam
fsubrl
sbb
cwtl
shlb
lods
mov
mov
nop
cmp
imul
push
in
cvtps2pi
ret
inc
sub
bound
inc
mov
push
movsl
adc
and
mov
adc
in
enter
and
lret
scas
sub
scas
cmpsb
jp
cmp
insl
cs
test
in
jle
push
and
insl
dec
mov
loopne
pop
dec
in
arpl
xchg
push
test
stos
aas
aaa
lret
andb
gs
cltd
xchg
inc
inc
or
push
xor
push
push
xchg
roll
mov
enter
test
insb
fisttpl
push
and
jp
mov
adc
in
mov
dec
jmp
aaa
cmp
adc
popl
xchg
cmp
mov
jno
jo
je
jb
pop
mov
sti
fsub
shl
cmp
test
adc
sub
adc
pop
jecxz
add
mov
mov
dec
stos
shll
out
arpl
bnd
cmp
pop
add
ja
mov
xor
adc
xchg
dec
or
jbe
add
mov
imul
push
test
mov
mov
test
stos
pop
dec
mov
imull
pop
pop
push
outsl
dec
mov
cmp
std
addr16
es
jb
fucomi
mov
mov
ficoms
dec
lods
cli
mov
mov
hlt
lret
mov
xchg
xchg
clc
push
mov
pop
jle
mov
cwtl
imul
mov
out
xchg
pop
dec
pusha
push
inc
out
cmp
mov
fcomps
fsubrs
popf
loop
cmp
push
and
push
shlb
mov
movb
or
xor
test
leave
mov
loopne
rorb
adcl
and
addb
orb
adc
adc
addr16
adc
push
cmp
add
jg
dec
int
shlb
sarl
mov
fisubrl
xchg
lock
push
addb
add
xchg
ret
loopne
cmpsb
and
dec
repnz
imul
cmp
mov
idivb
add
into
lods
imul
popa
movzbl
mov
xor
shlb
sub
in
xor
xor
mov
out
test
dec
dec
shrb
repz
lods
push
pop
lret
ljmp
xor
lock
add
xor
jbe
mov
push
xchg
add
hlt
jmp
negb
or
stos
dec
cmp
into
loope
cmpsb
sbb
daa
mov
xor
or
xor
call
js
adc
lods
sub
out
in
or
js
jp
aas
pop
je
rclb
ja
clc
cmp
rcl
into
mov
int3
dec
jns
push
jne
ret
and
xchg
fs
mov
insl
leave
xor
into
cmpsl
xlat
lahf
pop
inc
push
inc
jno
fdivrs
sub
call
loopne
das
dec
in
ret
outsb
xchg
mov
xlat
xor
sub
shlb
lahf
sbb
jp
and
lods
arpl
push
testl
push
cmp
cwtl
mov
xchg
lcall
aad
repnz
test
pusha
jb
insb
sub
sub
or
add
inc
mov
inc
div
xor
or
repz
xor
cmp
push
imul
mov
jne
mov
inc
mov
and
rep
add
gs
mov
push
xor
lock
xor
leave
sbb
int
push
or
push
xor
ja
fnsave
xchg
push
jo
push
xor
and
ljmp
xchg
ljmp
push
clc
mov
or
jmp
inc
push
dec
je
stc
out
aas
scas
push
xor
loope
pop
sub
les
push
lods
dec
lret
sbb
pop
sbb
dec
sarl
or
test
stos
xchg
cmp
add
push
push
call
sub
sbb
lcall
popa
dec
cmp
sbb
cmpsb
add
clc
jg
pop
popf
into
mov
jno
cld
add
mov
nop
lods
shlb
fs
mov
sub
shl
pop
cld
outsb
je
jno
xchg
sbb
cmp
push
imulb
sub
fimull
ret
push
icebp
xor
add
fisubs
pop
mov
push
cmp
adc
shlb
xor
out
inc
cltd
movlps
mov
pop
xchg
andb
dec
push
fmuls
fistpll
fnsetpm(287
dec
inc
rorl
pop
jp
mov
or
adc
lcall
outsl
dec
push
es
adc
out
ljmp
sti
je
int
mov
push
pop
push
lods
adc
popa
jmp
xchg
mov
nop
test
daa
push
xor
push
call
pand
lock
lds
ljmp
mov
outsb
xor
add
jmp
or
push
xlat
mov
or
cmpb
cmp
in
mov
fcmove
stc
xchg
or
sbb
dec
inc
fs
cwtl
ja
mov
pop
push
push
push
sbb
xchg
cmp
dec
ljmp
xor
gs
dec
mov
mov
cltd
mov
dec
cmp
push
mov
ja
decl
jl
or
dec
add
or
popa
and
ss
cmp
dec
xchg
pop
lods
inc
scas
je
add
out
insb
add
rol
ljmp
out
and
loop
cmp
cmpsl
cli
pop
scas
and
data16
ds
in
mov
mov
ss
cwtl
push
out
jo
nop
jp
adc
mov
leave
data16
sub
mov
in
jb
sbb
push
mov
fwait
sarl
xchg
dec
xchg
mov
mov
std
sbb
shl
rcrb
test
dec
ds
lea
ss
inc
mov
xchg
mov
dec
iret
xchg
mov
inc
pop
mov
sti
or
pop
push
jnp
xor
fstps
and
add
push
xchg
in
aaa
push
inc
push
pop
imul
jl
mov
sbb
mov
fidivrl
cmpsb
mov
sbb
xchg
xchg
nop
fldcw
cmp
in
mov
inc
push
sbbb
xchg
scas
mov
into
or
aaa
call
loope
lds
inc
adc
sub
mov
in
andl
jge
lea
adc
enter
stos
popa
pop
or
xlat
popa
loopne
or
pop
aad
pop
xchg
fwait
jp
mov
mov
pop
mov
push
les
fidivrs
jns
bound
imul
repnz
std
stos
aaa
xor
cwtl
rolb
xchg
stc
scas
xchg
shlb
xor
in
stc
pop
or
mov
ret
fnstenv
cmp
pop
cmpsb
inc
jne
test
or
std
inc
ret
into
add
mov
jle
jbe
pop
cmpsl
ljmp
jo
mov
aaa
sbb
pushf
mov
adc
jns
cmpsl
xor
loopne
subb
loope
mov
imul
jnp
sti
fadds
icebp
pop
inc
dec
xchg
loope
push
dec
and
mov
mov
hlt
pop
sbb
rep
inc
xchg
or
enter
lock
lcall
sar
frstor
mov
mov
jmp
subb
xchg
arpl
cmp
cmc
jnp
adc
dec
aad
fld
loopne
andl
xor
loope
shlb
pop
sbb
cs
or
and
test
cwtl
ss
shrb
and
jmp
mov
or
jl
rcrb
sub
jg
ljmp
or
mov
pop
dec
add
jecxz
or
fistpll
lcall
rolb
xor
inc
pop
loope
fcomps
jns
add
insb
push
and
xchg
lcall
fldl
cs
mov
lret
and
mov
arpl
adc
cli
cmpsb
out
mov
mov
push
push
das
mov
aaa
mov
mov
cmpl
bound
andb
shll
inc
cmp
daa
orl
outsl
cmp
int
rcrl
cmp
into
inc
push
jg
data16
ds
add
cwtl
data16
inc
push
xchg
lods
test
dec
inc
ds
out
sub
cltd
mov
jecxz
aam
push
je
sahf
nop
mov
jns
mov
pop
aas
sbb
cmp
mulb
dec
imul
push
jae
mov
mov
cmp
adc
pop
xchg
in
jb
mov
or
insb
in
bound
sub
mov
arpl
cmp
push
sub
lock
pop
jns
jle
jne
jp
nop
add
or
mov
sub
pop
lods
loopne
jns
rol
adc
inc
pop
add
scas
jnp
mov
push
mov
jbe
mov
jno
lcall
dec
sub
jg
add
pushf
xchg
clc
and
out
fsts
inc
xor
inc
stos
adc
stos
xorl
sarl
gs
popa
dec
add
jns
aam
and
loope
jo
loop
stc
cmp
shrb
in
in
push
jge
movlps
push
pop
fdivrs
push
add
inc
push
or
xor
inc
pop
mov
scas
sti
dec
xchg
xor
push
call
push
and
jbe
fists
mov
inc
sbb
test
or
xchg
dec
shrl
jle
repnz
repnz
push
push
pop
push
rorb
mov
outsb
or
jo
mov
push
repz
cwtl
in
or
mov
push
mov
push
xchg
lds
sti
cmpl
jle
stc
outsl
mov
dec
aas
stos
push
outsl
or
add
cs
aaa
pop
mov
rcll
adc
adc
cwtl
sahf
js
pop
jge
dec
aam
mov
jmp
les
cwtl
ret
into
adc
stc
aam
xchg
outsl
lds
mov
scas
call
sbb
outsb
lea
sub
cmp
cmp
jbe
cli
add
xor
insb
pop
out
add
jge
jne
cmp
xchg
and
jg
inc
dec
jbe
rcll
popa
scas
fildll
pop
roll
xchg
addr16
jmp
es
test
mov
rep
ja
insl
mov
ret
shlb
push
out
mov
bound
or
cs
push
inc
pushl
mov
jg
inc
xchg
jbe
fs
hlt
imul
movsb
lock
int3
mov
insl
xlat
repz
lods
push
push
stos
aam
ja
es
call
out
xchg
fcompl
xor
test
gs
add
mov
mov
push
cmp
popa
dec
mov
cmp
je
jp
xor
lds
mov
xchg
stos
sub
pop
fcom
cmp
mov
int3
popl
ffreep
jbe
mov
loop
jae
pushf
inc
mov
xchg
dec
dec
std
out
dec
inc
pop
mov
ja
adc
dec
dec
arpl
test
fs
frstor
in
mov
mov
nop
push
mov
jmp
clc
insb
inc
pop
jno
inc
pop
push
xor
push
out
add
popl
push
imull
jg
ret
stos
lock
pop
addr16
repz
pop
add
stos
inc
lods
pop
out
push
das
mul
fs
adc
xchg
or
mov
and
pop
dec
add
push
in
fimuls
mov
sbb
xchg
fidivrs
mov
and
mov
xor
js
jl
mov
pusha
fs
pop
mov
popf
test
inc
jle
insb
loopne
jmp
iret
jecxz
icebp
xor
into
int3
stc
pop
sbb
loope
and
loopne
push
sub
in
jne
ja
mov
mov
test
mov
fildl
pop
cmp
dec
stc
in
outsl
jnp
jo
pop
iret
pop
pop
out
sbb
lock
and
imul
inc
sbb
inc
jmp
pusha
mov
imul
rcrb
test
ja
bnd
mov
and
mov
adc
bound
xor
arpl
mov
jns
dec
outsb
lcall
pop
arpl
lret
cs
imul
out
jbe
shlb
sahf
xchg
jecxz
je
into
pop
pop
das
and
mov
pop
dec
mov
lea
sbb
out
cwtl
cmp
pop
lods
xor
les
jecxz
fistpll
sub
adc
and
xchg
add
bound
inc
mov
mov
das
sbb
pop
pop
repz
sub
fldl
jge
rclb
cs
lea
mov
cmp
in
mov
leave
sbbl
fcomi
insl
hlt
mov
sti
les
pop
call
jbe
call
mov
enter
sub
xchg
scas
sti
sub
sub
mov
or
mov
inc
ljmp
jns
decl
jae
push
pusha
sub
jns
arpl
sub
pusha
hlt
mov
inc
pop
mov
icebp
xchg
push
icebp
in
repnz
das
fisubs
ss
push
es
cli
cmp
dec
test
xor
add
sbb
ret
sub
outsb
mov
leave
ljmp
mov
adc
dec
dec
addr16
std
test
fstpl
push
inc
push
jnp
and
sbb
pop
imul
outsl
aas
test
dec
adc
pushf
repz
mov
incl
pusha
push
mov
dec
dec
insb
scas
mov
mov
int3
dec
push
adc
cmp
dec
add
xor
jmp
movsl
stos
or
mov
mov
pop
push
and
push
xchg
movsl
xor
push
xor
or
test
test
dec
lea
xchg
mov
subb
std
adc
divl
arpl
jg
mov
mov
sbb
inc
hlt
jb
movb
mov
sahf
sbbb
or
jne
or
mov
inc
int3
inc
stos
add
sti
xchg
inc
pop
es
in
sarb
pop
std
adc
pop
rolb
test
pusha
cs
inc
dec
rcll
pusha
clc
mov
lret
dec
imul
add
aad
cmp
jle
shl
mov
dec
mov
pop
sti
mov
rclb
movsl
inc
pop
xchg
outsb
ror
mov
test
mov
mov
int3
imul
pop
mov
push
xchg
add
mov
es
sub
mov
outsb
adc
hlt
adc
sub
leave
ret
lods
fdivrl
lcall
mov
xlat
dec
out
scas
push
jecxz
sbb
lea
push
testl
sub
xchg
inc
arpl
push
gs
arpl
inc
xor
pusha
mov
loopne
push
lds
repnz
dec
cld
push
notl
divl
xor
rcr
xor
cwtl
sub
fstl
mov
lcall
mov
cmp
iret
int3
out
add
add
out
shlb
inc
je
mov
sbb
jae
xchg
mov
cmp
sarl
ret
dec
inc
sub
fsubs
or
mov
ja
hlt
movsb
jb
jb
lcall
fcomip
cmp
sub
pop
xlat
cmp
sbb
push
and
in
sub
call
push
ss
dec
jle
adc
mov
sbb
jne
xchg
push
or
test
dec
jge
popa
sbb
scas
mov
scas
jns
push
add
mov
pop
or
vmread
imul
pop
iret
out
xor
cmp
fdivl
pop
dec
addr16
iret
adc
push
mov
ret
xchg
adc
jbe
push
scas
adc
xchg
loope
mov
mov
shlb
or
adc
repnz
mov
stos
shlb
or
cmp
in
mov
lea
aad
pop
rcl
sub
repnz
sub
in
setbe
cmp
hlt
fs
sbb
adc
mov
lret
sub
pushf
and
je
mov
mov
add
dec
adc
scas
cli
cmp
movsl
sti
fisubl
or
jmp
imul
or
les
xlat
flds
dec
das
and
xlat
inc
push
cmpsb
xchg
mov
or
jl
and
or
jb
pop
pop
jg
ja
pop
out
pop
out
and
pop
jecxz
fdivs
xor
or
xor
pop
or
inc
pop
fucomip
jne
nop
jp
flds
and
or
jno
shl
push
sub
ret
pop
je
movsb
pop
jmp
inc
mov
push
add
mov
mov
mov
and
imul
push
in
enter
test
imul
imul
sahf
popa
xor
sub
jnp
lahf
insb
cmc
mov
pop
clc
lret
adcl
push
in
inc
or
dec
fisubrs
cmpsb
push
fwait
iret
fmull
fcmovnbe
ftst
test
in
or
push
shll
sub
jo
sbb
sbbl
sbb
bound
pop
scas
nop
adc
shll
loope
mov
adc
ljmp
jbe
dec
cmc
lcall
dec
loope
xor
cs
xchg
dec
in
in
and
nop
idivl
push
mov
scas
call
fisubrl
lds
xchg
insl
or
xlat
call
fstpt
mov
imul
push
mov
inc
dec
fsubrs
bound
and
mov
inc
aam
xchg
xor
inc
add
pop
or
mov
loope
mov
scas
imull
mov
es
or
jg
iret
repnz
pusha
popa
or
cmpsb
into
pusha
sbb
push
aas
lahf
xchg
ljmp
jge
jmp
fdiv
cltd
int3
ds
xchg
loop
and
pop
mov
mov
sti
mov
inc
and
test
ret
fnsave
inc
add
stc
cmc
sti
lods
pop
dec
test
dec
pop
fcmovnb
sbb
fcmovbe
rcrl
out
scas
dec
les
out
roll
xchg
or
dec
mov
xchg
pop
jnp
out
fnstsw
in
nop
sbb
xchg
lea
sub
and
in
cs
inc
pop
lods
pop
pusha
push
xchg
pop
cmp
cmpw
repnz
addb
je
movsb
ret
icebp
mov
pop
mov
cli
fdecstp
stos
roll
mov
push
test
cli
mov
push
pop
jge
mov
and
or
lods
int
sbb
stos
rorb
cmpsl
in
mov
in
jae
jmp
and
and
cmpsl
xorps
ss
in
pusha
mov
inc
es
and
sbb
scas
inc
adc
pop
and
pop
dec
aam
lahf
movsl
aad
lods
js
and
ljmp
cld
fldcw
adc
mov
fadd
pop
movsl
int3
jo
movsb
aam
insb
adcl
cmp
xchg
inc
sahf
sahf
fmul
fs
pop
inc
jge
or
jmp
push
sbb
sahf
mov
rclb
aas
movsb
stc
shrl
sub
dec
test
mov
aas
or
leave
stos
out
sub
pusha
incl
push
jb
shrb
adc
and
inc
stos
or
jo
dec
push
insl
xchg
stos
push
insl
dec
icebp
jp
sub
or
mov
into
lret
dec
push
movsb
dec
and
push
dec
sbb
cmc
mov
sbb
xor
clc
mov
xchg
dec
pop
xchg
ds
dec
adc
aaa
mov
test
cmp
rol
cmp
jl
or
shlb
dec
movsl
and
pop
popf
inc
int3
and
mov
cmp
in
sbb
xor
and
pop
add
ja
adc
and
int3
jle,pt
scas
fstl
inc
sub
pop
aaa
inc
imul
and
into
inc
pushf
or
std
daa
ror
jmp
cwtl
subb
xchg
cmc
add
jmp
sub
sbb
ja
mov
jl
and
mov
adc
push
and
inc
mov
ret
jge
mov
xlat
dec
pop
rclb
xor
xor
leave
pop
adc
data16
leave
jecxz
imul
imul
dec
data16
loopne
mov
arpl
scas
xchg
mov
pop
dec
and
lods
in
fildll
lods
inc
dec
mov
xlat
ds
ret
and
pop
dec
clc
push
cli
leave
stc
outsb
inc
lcall
sbb
data16
adc
insb
sti
pop
dec
adc
aas
inc
mov
xchg
push
inc
fiadds
cmp
xchg
in
ljmp
inc
negb
pop
and
lcall
sub
push
pop
or
mov
fsubr
movsl
jl
pop
pavgw
pop
enter
ljmp
dec
add
ret
fptan
mov
pop
jb
adc
sbb
into
and
mov
into
mov
aas
mov
pop
xor
enter
push
scas
and
in
and
push
push
mov
jmp
xor
mov
rcr
lret
add
lock
push
inc
enter
adc
sti
or
scas
mov
mov
pop
or
push
lods
test
aas
rcrl
sbb
rorl
stos
out
jb
inc
addr16
mov
cld
adc
in
jns
mov
dec
or
xchg
or
push
adc
add
std
xchg
movsl
and
push
dec
xor
lds
pop
mov
hlt
add
add
sarl
loop
cmp
push
test
mov
and
movsl
sub
push
outsb
or
scas
cmp
xor
push
in
cmp
push
pop
loopne
mov
sub
mov
loope
push
add
ret
jae
sbb
and
or
bound
pusha
push
lock
xchg
push
popa
mov
movsl
mov
fsqrt
nop
imul
push
sub
outsl
fisubrs
push
dec
cmp
mov
call
mov
icebp
jle
pop
test
cmp
lods
lcall
mov
or
sub
push
ror
add
xchg
testl
mov
mov
mov
iret
cmpsl
add
addr16
in
xor
js
in
mov
mov
lret
push
pop
sahf
and
lahf
push
pop
aas
test
push
ret
pop
sub
sbb
push
add
ss
sbb
xchg
jbe
xor
fldt
xchg
jno
xchg
mov
popa
jo
sbb
push
subb
jg
call
jb
dec
divl
insb
popf
adcb
jmp
lock
jecxz
sub
out
and
and
ss
ds
js
pop
dec
add
jge
jge
mov
clc
ret
std
rorl
cld
call
popa
pop
movsl
imul
movsl
cli
fcoml
and
negb
mov
mov
popa
pushl
rcll
jmp
cmp
jmp
ss
je
jb
ds
dec
movsb
rcrl
cld
outsl
adc
lods
aad
int3
fdivrl
add
xchg
sbb
mov
lahf
lahf
sbb
pop
stos
sarb
jecxz
addb
arpl
push
es
rcll
aam
cmp
cmpsl
or
cmp
test
mov
xor
sbb
fs
pop
mov
sahf
adc
or
adc
sbb
repnz
jo
pop
scas
xor
cmpsb
xchg
enter
add
ret
jecxz
adc
xlat
lret
push
lret
push
das
lds
into
jo
sub
xor
stc
dec
in
xchg
mov
outsb
cltd
fst
add
jle
std
mov
ret
adc
or
push
jl
movsb
push
jb
fnsave
lock
mov
jne
mov
add
or
jns
iret
cs
out
or
mulb
das
andl
cmp
negl
inc
xchg
std
inc
dec
lds
inc
lods
push
adc
orl
xor
jl
dec
jecxz
and
ret
movsl
ret
xchg
inc
test
dec
cmp
cmpsb
cmpsb
mov
ret
sahf
fidivs
jl
cmpsl
dec
pop
in
pop
jle
fadds
in
or
dec
lret
test
push
jb
repnz
mov
xor
popa
xchg
fiaddl
push
out
mov
xchg
jmp
stos
cmc
add
lahf
fisubl
in
fcomp
jp
int3
pushf
or
les
das
cmp
rol
cmp
sub
insb
repz
test
inc
mov
cli
add
in
ret
add
scas
idivl
rclb
les
jl
mov
xlat
add
mov
lds
add
jno
fnstenv
or
add
stos
push
adc
push
mov
pop
add
mov
pop
jns
cmp
mov
pushf
adc
xchg
xor
mov
in
pop
ja
mov
repnz
sbb
xor
inc
test
inc
jg
ljmp
loopne
jl
add
sub
or
mov
icebp
in
sub
es
shr
mov
jmp
daa
or
xor
fidivl
cmp
imul
sbb
std
and
inc
enter
push
movsb
push
jbe
call
aas
subb
mov
out
pop
sbb
mov
jne
sub
dec
dec
cwtl
mov
mov
lahf
pop
scas
nop
cwtl
rolb
insl
mov
movsb
mov
lret
and
or
push
mov
jl
lret
test
mov
push
rcrl
sar
out
aas
and
push
lret
mov
cmc
sahf
mov
push
cli
push
mov
in
enter
shrb
xchg
cwtl
aaa
mov
mov
adc
xchg
enter
stc
push
ds
xor
push
lods
push
ret
or
xor
fisubrs
and
pop
mov
jno
sbb
insl
out
mov
dec
dec
xchg
adc
push
inc
and
or
mov
xlat
mov
ret
sub
pop
popf
add
or
jmp
outsb
ds
cltd
test
mov
pop
or
setl
or
adc
in
sarl
sub
xorl
and
orb
mov
push
cld
sub
cmp
jbe
or
mov
ja
shlb
fstpt
sbb
xchg
jbe
push
dec
cld
lcall
hlt
lcall
push
pop
and
inc
fnsave
test
subb
test
pop
push
mov
mov
dec
inc
inc
sbbl
test
gs
mov
mov
bound
pushf
ss
aam
test
into
or
out
icebp
xchg
adc
sbb
add
addl
sbb
inc
test
jno
cli
sub
mov
dec
sub
testl
jl
in
pop
pop
mov
pop
loop
sub
xchg
cmp
add
insb
xor
jb
in
ret
scas
mov
push
loopne
sub
adc
mov
lods
xor
and
std
xchg
inc
mov
xchg
pop
adc
clc
adc
pop
icebp
outsb
and
inc
nop
lret
push
fmuls
fadd
push
daa
cmp
test
inc
sub
sbb
xchg
je
cmp
rorb
mov
adc
dec
xchg
push
jge
push
add
dec
inc
js
xlat
jnp
ja
fwait
es
lea
in
scas
xor
xchg
pop
fwait
mov
sub
mov
pusha
dec
rorb
loope
mov
cmp
lock
mov
mov
lods
inc
xor
mov
and
dec
inc
jo
inc
cmp
add
push
imul
jo
mov
into
dec
cwtl
ja,pn
xor
out
push
insb
xchg
push
add
ret
xor
ficoml
es
xlat
inc
push
jecxz
cmp
or
outsl
pop
aas
stos
ljmp
int3
fidivl
dec
mov
add
bound
jmp
cs
mov
icebp
ret
pushf
lods
jmp
stc
cmp
xchg
in
sub
pop
cmp
jecxz
ds
add
adc
arpl
daa
xor
mov
push
jns
fidivs
add
ss
sbb
sbb
fdivr
inc
lret
mov
xchg
out
scas
or
adc
clc
cmp
push
data16
cmp
call
lret
jo
sbb
add
lret
lods
and
pop
jmp
cmpsl
scas
imul
pop
or
inc
push
push
add
mov
push
push
aam
lret
or
dec
shll
xor
pop
cmp
test
cltd
mov
dec
or
test
movsl
loopne
mov
xor
adc
aad
frstor
incb
shl
or
jp
mov
mov
push
pop
mov
movsl
jb
popa
insb
cmp
cwtl
dec
fistps
es
fimull
popa
insb
dec
in
jmp
jge
cmp
pop
test
subl
add
mov
sub
cmpl
gs
mov
push
jle
lahf
lret
jnp
cmp
sbb
pop
fdivrs
and
movsb
pushf
xchg
mov
or
add
ja
mov
fidivrl
aas
enter
push
lock
out
mov
mov
pop
xchg
and
pop
cmp
call
mov
push
es
lret
xlat
fdiv
loopne
lock
outsb
ret
dec
push
cli
jl
andl
test
sbb
insl
adc
push
mov
sbb
dec
js
or
int3
mov
mov
push
sub
dec
cld
cmp
jmp
fnstenv
nop
orl
negl
out
or
mov
mull
jb
cld
pop
sbb
sbb
fwait
inc
movsb
mov
fidivl
rcrl
pop
ret
loope
xchg
mov
jg
dec
test
addr16
mov
iret
pop
insl
ss
repz
mov
dec
xchg
mov
std
ljmp
inc
pop
sbb
mov
into
pop
pop
fimull
inc
push
mov
pop
jne
mov
sbb
outsb
jl
ret
jno
incb
push
jns
dec
mov
dec
xor
fimuls
mov
icebp
and
pop
cmp
mov
add
jb
iret
in
jg
lds
xor
sub
lret
ret
adc
insl
push
sti
testl
gs
jae
jne
int
mov
add
lock
loope
pop
mov
and
dec
inc
or
lods
hlt
pop
xchg
mov
clc
push
ja
xchg
adc
xchg
daa
inc
jmp
sub
or
rol
mov
adc
xchg
mov
idivb
std
and
popa
dec
mov
add
stos
and
dec
pushf
mov
cmp
fs
aas
leave
jne
jle
in
inc
cmp
testl
mov
loop
xchg
cmpl
inc
pop
jnp
std
rclb
pop
sbb
outsl
sti
jp
push
jl
xchg
aas
xchg
insl
lock
cmp
sahf
jg
sbb
je,pn
daa
jns
sbb
pusha
test
push
mov
dec
cmp
jbe
cmc
fsubp
shll
popa
mov
cmpsl
mov
pusha
xor
push
jne
sub
out
jecxz
jmp
dec
cmp
aam
jl
sub
mov
or
fists
push
mov
add
mov
xor
jge
mov
repz
mov
push
adc
clc
mov
adc
inc
in
arpl
test
lret
push
ret
cmp
dec
shrb
sbb
xchg
fsubrl
inc
mov
aam
dec
pop
xor
jno
mov
insb
mov
push
movsb
or
rcll
or
movsl
sbb
jge
das
mov
dec
subb
sub
pop
stos
cmp
test
in
stos
mov
das
push
xchg
push
cmp
lret
sbb
fsubrs
subl
fld
pop
sbb
scas
mov
push
jg
pop
int
xor
stos
push
mov
adc
jnp
jns
or
pop
js
lods
sbb
jo
cs
leave
cmp
jmp
rorl
dec
push
nop
lods
lret
cmpsl
mulb
je
insb
gs
mov
mov
xor
or
mov
lcall
cmp
or
out
shrb
pop
js
xor
les
push
ds
inc
aas
add
adc
mov
repnz
xchg
fiaddl
imul
xor
push
cli
rcl
mov
cmpsb
dec
dec
add
dec
fnstcw
xor
dec
dec
orb
xchg
lahf
push
push
mov
sbb
js
mov
adc
jbe
sub
cmp
xchg
jae
rcrl
push
adcl
ss
pop
shrl
movsb
popa
je
sub
in
push
jp
inc
xorl
mov
lds
ret
push
or
out
push
adc
ret
data16
mov
jae
rorl
je
xchg
daa
std
arpl
cmp
sub
jbe
jl
xchg
push
fs
cwtl
in
sbb
lahf
mov
ljmp
sub
les
inc
inc
push
pop
sbb
mov
lods
icebp
lahf
inc
adc
mov
mov
cmpsb
aad
rcrb
jo
push
xor
adc
mov
mov
jp
scas
mov
nop
addl
xor
outsb
clc
fwait
mov
out
add
sbb
sub
mov
cwtl
pop
roll
sbb
jg
push
sub
lock
lret
sub
out
popa
in
mov
incb
jbe
xchg
sub
pop
mov
psubusb
pop
dec
sub
out
push
inc
mov
and
repz
stos
xchg
sahf
aad
nop
adc
es
sub
pop
sbb
test
sahf
xor
movsb
jp
stos
cltd
fstpl
fstpt
add
loope
add
into
lcall
std
fsubrs
push
mov
movsb
add
shll
mov
movsb
mov
inc
loopne
fadd
rcrl
xchg
arpl
cmp
add
loope
lcall
sbb
jg
push
movsl
out
push
mov
dec
push
add
mov
sbb
loopne
mov
bound
inc
pop
sarb
aam
pusha
out
mov
ds
test
fisubl
add
or
xchg
mov
out
leave
ret
mov
add
test
xor
cmp
aaa
loope
inc
and
cmp
inc
scas
enter
add
loop
xchg
xchg
adc
stos
mulb
lcall
xchg
xchg
dec
in
push
icebp
scas
test
ret
outsl
pop
xchg
inc
cmp
push
xor
xor
clc
jns
push
les
lock
and
fs
mov
jmp
adc
push
imul
dec
sahf
push
inc
adc
icebp
loope
sbb
sbb
lret
imul
or
xchg
cld
jnp
aas
repz
cmp
xchg
xchg
mov
das
mov
sub
mov
out
and
out
jnp
in
cmpl
lret
mov
cld
or
insl
outsl
cs
sub
cmp
push
inc
dec
popa
or
rcrl
stc
mov
mov
dec
push
dec
pop
mov
pop
sahf
lock
outsl
xchg
and
jge
lds
mov
mov
xor
xchg
xchg
jle
negl
mov
jne
dec
jne
mov
or
xchg
lds
lcall
and
aad
mov
xor
aaa
je
andb
outsb
das
pusha
mov
xlat
scas
js
cltd
jle
pop
jge
push
jmp
in
add
test
fistpll
push
jmp
insb
xlat
mov
fwait
test
scas
mov
jae
push
push
bound
push
pusha
fwait
dec
test
push
xchg
test
je
cmp
sti
movsb
leave
outsl
ror
mov
push
frndint
cltd
inc
dec
stos
in
loope
cld
xchg
push
fimull
sub
mov
pop
test
jne
and
sub
fidivl
popa
push
inc
in
movsb
lds
rorl
fistl
movsb
aas
inc
out
or
jns
test
dec
mov
andl
mov
fidivrl
xchg
adc
lea
nop
or
cmp
or
push
icebp
cmpsl
mov
sub
das
sub
shlb
add
mov
cld
sub
stc
and
pop
je
jecxz
push
std
nop
push
cmpsl
sbb
test
or
loopne
adc
sub
ret
xchg
dec
fstps
testl
sbb
lds
les
xor
nop
ret
insl
xor
jmp
sbb
adc
sub
pop
cmp
rorb
xchg
movsb
and
inc
add
push
pop
test
lret
das
adc
int3
dec
cmp
stos
adc
xlat
ss
imul
ss
shll
loop
pop
vmaxpd
ljmp
test
sub
adc
push
enter
in
mov
add
icebp
rorl
test
mov
loop
push
mov
inc
inc
repz
cld
aaa
mov
and
cmp
pop
je
out
movsl
jmp
out
test
sbb
mov
jae
or
sub
es
mov
jbe
outsb
dec
sbb
fnstsw
mov
std
insb
cvttps2pi
adc
aam
mov
pusha
mov
jp
or
call
push
push
jb
add
stc
pop
les
imul
inc
jae
push
dec
mov
cmp
inc
xchg
mov
js
fdivr
mov
rcrb
cmp
and
sbb
dec
cmp
decl
jecxz
stc
ljmp
mov
insl
imul
push
cmp
push
sti
fsubrs
test
jbe
ret
jo
and
repz
inc
repnz
push
dec
pop
or
dec
das
sbb
xchg
test
inc
jb
push
xchg
jecxz
ret
int
sbb
sbb
mov
xchg
cs
jmp
dec
mov
lods
pop
lret
cmpsb
mov
dec
sti
cmp
scas
xchg
lods
ja
scas
sub
les
std
shll
stc
adc
movsb
jne
xlat
movsl
inc
push
adc
fwait
mov
inc
pop
test
adc
add
lds
loopne
mov
dec
jb
lea
jb
test
iret
mov
pushf
fstps
stos
decb
mov
xor
jae
or
fst
add
loop
imul
pop
mov
or
push
jbe
outsb
lods
pop
dec
out
cmp
and
pop
into
mov
mov
xor
cmpsl
ret
xchg
out
add
in
pusha
jmp
stos
cmp
addr16
mov
iret
jb
out
aad
sbb
mov
cmp
pop
jb
jge
enter
adc
cmc
cmp
ffreep
add
adc
push
pop
mov
mov
cwtl
sub
and
and
iret
mov
enter
jle
dec
ficompl
shll
dec
orl
sahf
pop
cs
cmpsl
add
rcrb
gs
fdivrs
sbb
pushf
cmc
sbb
mov
scas
inc
cmp
das
stos
xchg
mov
mov
jle
cmc
ljmp
jb
mov
dec
sub
mov
mov
lahf
out
sbb
cmp
dec
outsl
arpl
roll
insl
xor
roll
sub
cmpsb
mov
data16
inc
add
or
stc
loope
sbb
lds
mov
push
pushl
xchg
sahf
add
mull
xchg
gs
insl
imul
js
data16
jnp
mov
scas
enter
mov
test
por
add
loopne
push
jp
in
shll
and
fsts
mov
popf
xchg
pop
cmpsb
pop
out
fwait
lock
cmp
insb
ret
add
mov
jl
pushf
pop
lahf
cwtl
cs
insl
or
popf
cwtl
inc
xchg
mov
push
cmp
fistpll
addr16
dec
xchg
inc
xor
popa
xor
insl
into
adc
push
fstl
xchg
mov
xchg
arpl
mov
movsl
adc
xchg
adc
add
xchg
gs
repnz
jmp
out
in
test
and
and
sbb
pop
mov
xchg
xor
xor
rol
sti
pushf
jbe
fbstp
cmp
mov
ljmp
arpl
ja
jle
repnz
cmovs
shlb
rcr
jle
xchg
es
js
adc
bound
mov
shrb
outsl
shll
xchg
cmp
push
repnz
mov
outsl
aas
imul
cmc
mov
popa
and
pusha
push
mov
data16
fdivs
andl
pop
das
sbb
cmp
leave
mov
push
lods
addb
push
out
call
sub
inc
lock
push
ja
pop
mov
push
es
jl
or
sub
inc
jae
insb
and
ja
out
cmpsl
xlat
ja
aad
inc
lret
inc
int3
daa
xchg
aaa
push
cmp
mov
jo
push
inc
ficomps
pusha
loopne
dec
stos
sbb
outsl
mov
add
adc
cwtl
insb
sbb
rcr
cmp
inc
in
fimuls
shl
push
or
mov
pop
outsl
adc
test
jnp
xchg
inc
jbe,pn
mov
add
lret
cmp
mov
jg
jl
cs
jmp
xlat
in
fadd
imul
scas
push
movhps
pop
stos
mov
ljmp
in
mov
aas
repnz
xor
fildll
mov
out
and
shll
and
stc
in
xchg
sub
pop
cmp
or
adc
mov
mov
mov
add
jnp
sub
mov
fsubrs
addr16
aam
cmp
pop
pop
mov
decb
xchg
stos
mov
jo
sbbb
cmp
lret
out
push
in
or
jle
xchg
sub
nop
xlat
in
xchg
insl
jns
ficoms
lods
push
das
jecxz
sub
fs
fs
cwtl
pushf
xchg
ss
nop
or
addr16
add
jbe
jg
mov
pop
and
inc
and
out
loopne
fwait
sbb
jl
bound
pop
dec
das
test
mov
or
aam
jns
sub
les
xchg
sti
out
jne
inc
dec
push
lcall
sbbl
nop
sub
sbb
xchg
inc
sub
jne
and
sbb
or
jb
pop
outsb
jae
rcrb
jp
test
or
xchg
imulb
xor
push
pop
and
out
movsl
push
sbb
and
adc
sbb
push
jae
sbb
mov
popa
and
mov
pop
mov
jb
nop
sahf
repz
leave
mov
xchg
jl
mov
fsubrl
popf
imul
adc
imul
cmpsl
mov
lea
sti
add
mov
mov
inc
mov
push
pop
rorl
lahf
mov
mov
scas
insl
xchg
xchg
int
push
rorb
push
stc
adc
pop
rorb
lock
lods
push
lret
inc
mov
call
lods
ds
mov
es
bound
bound
ret
pop
sbb
push
cmp
xchg
cmp
mov
les
popf
xchg
ljmp
pop
and
jp
xor
lea
push
lahf
aas
add
out
push
inc
cmp
aaa
xchg
push
xor
xchg
cltd
dec
add
lret
cmpsb
das
cmc
mov
frstor
push
push
xchg
jp
cmpsb
jo
or
adc
cli
fucomp
jg
dec
icebp
sub
sbb
and
scas
add
mov
mov
add
dec
jmp
and
ret
xchg
cmp
shrl
cs
ficoml
insl
in
lahf
loopne
xchg
cmp
push
sub
imul
arpl
jns
mov
mov
and
fsts
arpl
ret
cmpsl
bnd
or
fisubrs
ret
aaa
sbb
int3
stos
scas
mov
sub
xchg
ja
or
movsb
pop
fs
test
imul
aas
xor
das
lahf
jae
aad
cmp
inc
mov
push
shl
jle
call
mov
xor
data16
sub
je
cmp
cmpsl
cmp
pop
cld
sbb
xchg
push
mov
aad
ret
popa
mov
test
jg
pop
mov
fimull
dec
push
dec
into
and
iret
xchg
ja
xchg
dec
fdiv
cmp
and
jbe
in
mov
inc
lret
mov
mov
les
mov
out
fs
scas
mov
mov
mov
int3
mov
fcoms
pop
dec
jns
in
sti
jge
fsubr
cld
mov
mov
inc
ss
push
jnp
jmp
lret
dec
test
adc
incl
imul
test
pop
movsl
out
sbb
push
mov
mov
push
xchg
or
ret
cmp
loopne
fisubrl
ret
mov
repz
xor
jo
sbb
jle
out
cli
nop
nop
adc
rcll
jns
das
or
xchg
push
pop
dec
aaa
inc
mov
hlt
movsl
jnp
push
jl
test
ss
jle
ret
mov
arpl
icebp
lret
jbe
jl
inc
mov
cmp
daa
jns
mov
roll
adc
mov
xchg
push
cmpl
idiv
jno
fdivrl
gs
mov
mov
dec
xor
cmp
daa
mov
je
cltd
mov
lcall
fldpi
xchg
je
xor
mov
lods
add
mov
lds
xchg
test
pop
xchg
inc
jb
cmc
into
mov
push
es
adc
dec
pop
and
cmp
fsubrp
and
pop
dec
xlat
lret
leave
cwtl
pop
test
sbb
jns
fcompl
sub
pop
jle
icebp
and
in
test
sbb
pop
imul
sub
loop
sbb
push
xchg
adc
lods
insb
cmpsb
pop
insl
push
aam
sub
fimuls
mov
test
aaa
mov
or
push
push
xchg
xor
insb
adc
icebp
sbb
pop
sbb
jp
sub
mov
lds
cli
push
fsubl
nop
sahf
movsl
xchg
and
pop
ret
bound
jne
popf
aas
pop
xor
cmp
in
in
sti
inc
add
push
cmp
add
mov
pop
push
pop
lods
fwait
jmp
fnstenv
xor
push
and
inc
sub
push
mov
adc
adc
pop
bound
cmpsl
pop
push
adc
scas
js
push
arpl
aaa
and
addr16
mov
lea
mov
push
xchg
sub
je
jmp
cmp
pop
or
hlt
mov
out
mov
push
in
xchg
scas
jecxz
fistps
xchg
dec
mov
mov
push
xchg
dec
dec
cwtl
adc
rclb
pop
test
es
hlt
scas
mov
faddl
arpl
mulb
xor
mov
pop
movsl
andb
mov
mov
adc
and
femms
cmc
rcrl
push
pusha
nop
fadds
arpl
push
adc
inc
dec
add
inc
hlt
dec
sbb
mov
dec
push
inc
dec
pop
cmp
dec
push
clc
push
je
es
mov
adc
stos
call
lcall
cwtl
in
inc
jge
shrb
pop
sbb
ret
call
stos
dec
inc
cmp
outsb
lea
ss
aam
pusha
xchg
outsb
mov
lea
call
push
sub
push
push
ljmp
jno
push
or
mov
test
data16
jne
push
das
je
push
dec
adc
push
scas
xchg
or
push
inc
jne
outsl
popa
sarl
dec
aaa
sti
cwtl
adc
adc
fdivl
loop
add
gs
decb
pushf
inc
pop
adc
popf
mov
mov
mov
cmpsb
push
cwtl
sahf
pop
pop
es
setl
out
stos
pop
mov
inc
fcmovne
push
repnz
int
sbb
adc
add
push
fldl
shrb
outsl
xor
mov
pop
mov
dec
mov
and
mov
ljmp
shll
sbb
jns
jae
push
enter
das
bnd
frstor
push
dec
push
shrb
js
rclb
fists
jge
and
addr16
add
sbb
xor
pop
cli
cmc
xchg
call
push
lods
fcoml
lret
mov
mov
sub
cmp
or
xor
mov
sub
dec
xor
fdivr
mov
cmp
stos
imul
cmp
cmc
fdivs
mov
sbb
in
aas
or
stos
shr
or
mov
mov
adc
push
aas
sub
out
repnz
push
mov
call
xor
ds
sub
fldenv
inc
jb
jmp
adcb
popf
mov
sub
pop
mov
orl
sbb
push
bound
adcl
cmpsl
push
jmp
incb
inc
jo
inc
icebp
jge
scas
xor
rcl
cli
ficoml
fidivrs
or
int
or
adc
outsb
push
inc
inc
nop
or
mov
into
xchg
shlb
ret
fisttpll
xchg
lcall
adc
inc
loopw
pop
loope
repz
scas
loope
ljmp
cmp
icebp
loop
shl
and
lret
shrb
inc
mov
addr16
mov
pop
je
inc
jle
aad
out
lcall
in
aam
mov
scas
adc
push
mov
sub
dec
mov
adc
mov
icebp
mov
push
insl
addr16
mov
in
clc
arpl
add
sbb
or
leave
js
jbe
negb
stos
push
popa
push
into
dec
mov
push
push
mov
xchg
or
jl
jb
fs
es
fisttpll
mov
xchg
xor
sbb
rclb
in
xchg
inc
add
mov
out
ret
mov
jge
shll
push
jmp
sti
pop
sbb
cmpsl
test
pusha
cmp
orb
mov
jecxz
test
lahf
cmp
mov
dec
push
rorl
dec
sbbb
push
jl
adc
cltd
orl
outsl
xor
push
testb
scas
and
add
mov
outsb
stos
mov
fdiv
mov
cmp
mov
je
mov
and
fadd
push
jae
mov
addr16
sbb
cmp
push
sbb
sub
mov
and
hlt
mov
mov
enter
scas
xchg
in
sbb
repnz
xchg
inc
ljmp
imul
mov
xor
xchg
rorb
inc
lcall
adc
sbb
xor
mov
outsb
aaa
jno
jmp
outsl
int
aad
ret
dec
pusha
inc
insl
test
bound
and
mov
loopne
jle
push
pop
iret
lods
loope
sub
rcrl
inc
push
push
xor
ud0
jne
mov
mov
add
mov
adc
ss
sbb
jmp
and
mov
xchg
cmp
lcall
sub
xor
dec
inc
pop
dec
pop
and
xchg
add
sub
adc
fildl
stos
xchg
popf
mov
repz
ror
mov
aas
mov
push
sbb
pop
adc
pop
pop
jbe
add
cmp
add
sub
lods
outsl
mov
imul
aaa
sub
push
out
add
pop
adc
dec
xchg
or
lods
push
in
adc
aad
xchg
cmp
cld
mov
test
jp
adc
push
icebp
push
test
movsb
cmpl
push
push
popa
mov
dec
jbe
mov
jmp
pop
je
pop
test
inc
jnp
adc
int3
mov
rorb
cmp
and
mov
sub
int3
fcoml
in
imul
inc
stos
pushf
mov
and
pop
adc
and
std
add
mov
sbb
pop
push
js
shlb
mov
dec
pusha
cs
or
test
fimull
mov
stos
mov
jo
outsl
lret
cld
jb
insl
sbb
sbb
in
lods
dec
lods
cmp
and
mov
stos
or
dec
mov
cwtl
cmp
popa
jecxz
lcall
loop
mov
xor
pop
fidivs
rol
or
fisubs
adc
shl
repnz
or
out
mov
dec
hlt
lcall
repnz
scas
int3
ss
fmuls
pop
mov
push
cmpsb
stc
lret
cs
daa
jle
lret
add
arpl
call
inc
pop
pop
jl
fmulp
push
push
sbb
push
test
inc
inc
into
mov
cmpsl
mov
popf
xor
adc
xor
push
insl
jl
ss
shll
mov
arpl
lea
in
pop
shr
js
mul
cmp
lea
cmc
test
adc
roll
and
push
jmp
nop
mov
out
or
xchg
dec
mov
xchg
and
inc
push
js
inc
fbstp
cld
ja
pop
fldenv
or
imul
mov
int3
pop
mov
adc
cmp
fcmovnb
mov
xchg
pop
sbb
xor
mov
dec
sub
push
pop
sbb
pop
mov
xchg
or
icebp
cmp
push
cmp
mov
leave
jns
daa
in
and
cmp
in
fsubrs
shll
sub
push
adc
test
mov
out
imul
xchg
jle
daa
mov
lcall
mov
fldt
xor
and
shlb
xchg
pop
add
xchg
or
out
jl
inc
out
pop
ficompl
in
fwait
rcrb
cltd
and
mov
mov
pop
je
pop
mov
stc
dec
cmc
add
jno
sub
or
or
mov
mov
je
and
das
mov
pusha
stos
cmp
mov
xor
push
and
dec
dec
dec
sti
jo
es
push
ds
stos
call
call
xchg
lahf
or
stos
test
cmc
andb
xorb
mov
mov
sbb
lds
cmc
jbe
push
inc
call
andb
clc
mov
dec
xorl
xchg
test
xchg
pop
test
cmpsl
jb
sbb
adc
mov
jne
lret
sub
nop
inc
pushf
out
xchg
jmp
push
das
mov
cmpsl
xor
lret
sbb
cmpb
mov
sti
push
pushf
xchg
cmp
out
and
aaa
adc
je
in
nop
ljmp
mov
jo
or
xor
sahf
mov
out
mov
jge
dec
adc
imul
ja
or
ss
sbb
rcr
push
int
hlt
jle
mull
std
scas
repz
lcall
es
aam
ret
fisubrs
cmp
dec
jno
mov
nop
and
xor
mov
push
stc
jno
push
mov
mov
in
push
pop
outsl
add
pop
jg
jmp
ficompl
das
sub
stc
pop
test
add
fists
mov
dec
ja
dec
jb
add
push
iret
lret
cltd
add
xor
popf
lods
jbe
add
dec
dec
pop
aam
jne
cmp
pop
sahf
sub
push
jmp
ret
popa
mov
xor
push
push
pusha
mov
das
and
jno
push
mov
push
jg
xchg
into
inc
js
js
outsb
xchg
xor
push
loopne
and
or
fs
arpl
pop
push
mov
and
mov
sub
jle
outsl
pop
mov
movsl
push
ret
mov
dec
arpl
mov
jo
loop
push
mov
jbe
add
and
jbe
jle
push
test
maxps
sub
inc
stos
jle
mov
or
jge
pop
cs
dec
test
pop
or
rep
jl
das
loop
pop
imul
fs
inc
aas
popf
mov
jno
dec
imul
pop
inc
shlb
sti
lret
xchg
cmpsl
fcoml
inc
fsubs
inc
imul
sub
or
mov
mov
and
icebp
mov
push
lds
in
mov
les
inc
mov
cmp
mov
push
mov
xchg
cmp
ret
movsb
movsl
jmp
imul
pop
popf
movl
mov
aad
das
jae
call
bound
roll
push
out
cmc
in
pop
pop
in
gs
rol
xor
rcr
daa
ficoms
cmp
lret
sub
jae
cmc
xor
push
scas
in
xchg
outsb
mov
hlt
inc
pop
aaa
and
jecxz
negb
shl
js
add
repz
gs
scas
icebp
sub
push
enter
inc
je
in
xchg
nop
mov
lea
cmp
sub
push
xor
jmp
pusha
ficoml
lret
xchg
sti
loop
aad
insb
lret
cli
add
push
sub
rorl
andb
test
sub
jo
jge
js
popa
cmp
bound
or
mov
mov
bnd
cmp
xor
fs
shlb
mov
mov
mov
adc
loopne
in
outsb
mov
and
mov
mov
cli
sub
mov
lds
cmp
sub
push
pop
daa
cmc
popf
or
dec
outsb
test
and
cmc
xchg
divb
and
push
cli
daa
sub
dec
xchg
mov
rolb
movsb
mov
sbb
pusha
and
pop
gs
mov
mov
pop
and
xor
shlb
push
mov
nop
sub
lock
jp
test
mov
inc
mov
jns
cmc
push
xchg
aad
push
mov
dec
std
push
cmc
in
mov
add
sahf
add
mov
jbe
add
std
popa
outsb
mov
push
pop
xor
mov
inc
hlt
push
pusha
jg
add
sbb
pop
je
lcall
sbb
rcrb
les
inc
xchg
jecxz
sub
xor
adc
adc
mov
cmp
xchg
push
cmp
push
pop
and
jnp
mov
rcll
fisttps
sub
jl
cli
mov
sarb
adcb
adc
pop
cmp
push
mov
cmp
shl
pop
sahf
movsb
inc
push
sub
and
sbb
daa
loop
shrb
dec
mov
push
mov
repnz
mov
xchg
and
push
std
cltd
test
jno
test
jnp
push
adcb
mov
test
out
lahf
es
mov
andb
out
lret
repnz
sbb
and
inc
repnz
fisubrs
imul
or
sbb
mov
leave
push
add
stc
rcll
xchg
pop
dec
inc
js
sbb
inc
scas
imul
xor
pop
mov
imul
andb
push
inc
and
ss
dec
cld
mov
imulb
and
mov
jnp
xchg
sbb
fmuls
dec
add
jno
lret
clc
mov
mov
xchg
movsb
fstpt
jmp
es
xchg
test
subb
fdivrp
xchg
cmpsl
div
cmpsl
repz
pushf
leave
roll
cmp
mov
or
nop
adc
std
xor
or
insb
movsb
inc
cmp
imul
test
xor
and
xchg
cmp
nop
pop
push
mov
cmp
shrl
stos
pusha
hlt
cltd
jae
ljmp
adc
inc
out
push
fisubrl
test
loope
fldenv
scas
sub
mov
out
data16
addr16
mov
negl
pop
bound
fnstcw
mov
push
mov
int
jg
push
in
fidivs
inc
cmp
mov
not
dec
mov
ljmp
push
wrmsr
push
mov
aas
cmp
pop
adc
lea
push
jo
jl
dec
lret
mov
cld
ret
ljmp
push
adc
out
shr
xlat
dec
or
dec
cmpsb
or
insl
pop
sbb
jo
pushf
jne
lods
scas
inc
jl
mov
pop
ja
sbb
leave
jb
out
sbb
stos
ljmp
enter
adcb
add
and
gs
xchg
ljmp
fcomps
insb
sahf
mov
pusha
sub
push
pop
nop
adc
lret
push
push
bound
mov
arpl
pop
xor
loopne
movsl
cld
dec
cmp
lods
stos
js
aaa
or
daa
ret
ja
inc
mov
mov
push
je
in
aad
xor
fs
dec
dec
pop
dec
icebp
loope
out
aad
outsb
sub
mov
or
stc
aam
mov
and
cmp
loope
imul
inc
push
and
dec
ja
jmp
cwtl
int
jge
mov
cmp
and
pop
push
mov
push
mov
mov
ja
or
out
pop
daa
mov
jmp
cmc
adc
mov
xlat
pusha
scas
jp
or
popa
test
adc
outsb
jbe
sub
mov
ret
pop
das
std
lret
stos
sub
movsl
adc
sbb
dec
fmuls
cli
cli
movsl
fildll
es
and
loope
das
ja
insb
fwait
in
je
sbb
jne
rorl
in
mov
adc
inc
inc
fnstenv
mov
push
outsl
cld
add
add
dec
shl
pop
xchg
mov
adc
push
xor
mov
inc
sbb
jns
or
sar
and
push
or
aad
rolb
cmp
insb
fidivs
scas
aad
jnp
popf
adc
imul
mov
mov
cmpsl
arpl
ret
bswap
cs
sbb
sub
pop
mov
inc
push
test
pop
in
cwtl
add
xor
adc
jmp
pop
cmp
adc
dec
sbb
push
add
sub
cs
clc
mov
into
popa
call
jp
cmp
arpl
std
xor
outsl
pmullw
lods
lods
adc
imull
mov
daa
push
test
aaa
inc
test
fisttpll
sbb
stos
cmpsb
mov
iret
add
dec
cmp
pop
push
ss
out
inc
loope
or
outsb
jnp
add
mov
lods
out
xchg
cmp
add
sbb
mov
loopne
sub
out
ret
dec
jle
sbb
add
cs
mov
adc
sub
jne
push
lcall
or
jns
in
inc
jbe
orl
inc
stos
mov
lret
mov
jmp
mov
les
enter
cmp
imull
divl
jge
pop
cmp
or
and
outsl
pop
or
icebp
pop
or
outsb
stc
out
xchg
test
sub
mov
jmp
dec
ja
sbb
sub
icebp
movsb
mov
cmp
pop
adcb
insb
dec
inc
jecxz
inc
sbb
push
fldcw
sub
add
dec
paddw
rorl
xchg
test
jg
insb
jl
in
sbb
std
cmp
filds
push
sbb
mov
xlat
out
aad
outsl
sbb
xchg
and
cwtl
sub
xor
mov
sub
pop
testl
call
jb
ret
mov
push
dec
jg
cmp
and
into
repnz
shl
imul
je
jmp
cltd
adc
loopne
fstpl
cmp
test
pop
inc
popa
outsb
outsl
shr
dec
push
adc
push
inc
mov
adc
mov
sub
push
xor
xchg
jbe
mov
xchg
lock
icebp
or
insl
push
cld
lcall
ret
adc
cmp
leave
popa
iret
sbb
mov
adc
mov
scas
outsb
int
mov
leave
pusha
ljmp
rcll
jb
push
mov
aaa
ja
jecxz
or
push
adc
and
inc
mov
clc
enter
jbe
xlat
es
xchg
xor
jge
sbb
cmp
cmp
mov
push
aaa
mov
rolb
test
mov
iret
push
jg
pop
jae
pop
push
out
arpl
ffreep
cmpsl
aam
adc
mov
ds
and
aad
jns
pop
imul
and
cmpb
fnstcw
xor
jo
mov
dec
jmp
mov
inc
cmp
mov
cli
or
pop
int3
movsb
cmp
in
or
cld
clc
adc
xchg
mov
leave
push
popa
divl
and
xor
cwtl
jae
out
cmpsb
mov
dec
mov
mov
jae
mov
pop
push
mov
scas
clc
inc
addr16
xorl
aas
and
mov
cmp
hlt
push
popf
pusha
test
sub
dec
mov
xor
movsb
xor
in
lods
or
test
push
adc
sahf
and
inc
rcll
or
dec
dec
pop
add
mov
mov
and
xchg
mov
adcl
mov
push
cmp
mov
jae
xor
cs
or
dec
mov
or
cld
aad
fidivrl
jb
gs
adcl
and
shrl
daa
push
or
hlt
js
outsb
add
stc
sub
jecxz
xchg
decb
lahf
pop
push
je
lret
ds
xor
dec
imul
mov
ficomps
dec
dec
pop
xor
xor
sbb
int
mov
mov
xchg
push
leave
inc
iret
dec
fldt
add
jb
cltd
push
sub
mov
mov
mov
jae
push
jo
xchg
sbb
jmp
cli
adc
fsubp
push
aaa
shr
mov
jbe
inc
loopne
xor
bound
push
mov
js
xchg
inc
dec
push
inc
push
jno
orb
daa
repz
ret
cmpsl
lock
fs
push
stos
cmp
sti
ss
out
mov
stc
mov
shr
push
je
dec
and
and
or
sbb
cmpsl
gs
push
out
pop
shrb
andl
cmp
outsb
mov
dec
jg
mov
push
dec
jo
add
dec
sbb
ficomps
jnp
incb
loopne
xor
adc
ja
fwait
out
adc
aam
mov
cmp
mov
aaa
sbb
popa
div
outsb
pushf
or
lcall
pop
mov
cmpsl
and
loop
or
lods
aas
sub
mov
pushf
loopne
adc
call
inc
inc
xchg
jb
popa
cs
rcr
jecxz
addr16
jo
and
notl
or
iret
or
loop
stos
adc
xor
sti
fsub
mov
jb
push
imul
push
jbe
iret
or
push
and
sbb
pop
popa
mov
movsb
incb
clc
cmpsb
cltd
jmp
mov
cld
std
inc
mov
bound
push
mov
inc
arpl
push
out
pop
xor
bound
pop
lock
sbb
pop
xchg
sbb
xchg
lahf
es
jmp
cmp
jb
adc
ret
adc
iret
xchg
mov
pop
jle
scas
test
lret
mov
cmp
lods
stc
and
pop
pop
push
push
outsl
lds
jl
js
bound
inc
add
mov
lahf
dec
inc
cwtl
jmp
mov
out
repz
push
mov
jbe
push
dec
xor
test
movl
shrl
lret
sbb
cmp
out
test
xorb
xchg
jno
xor
push
mov
mov
ret
cmp
sub
lea
mov
add
adc
push
iret
cli
iret
jg
lea
add
rcrl
test
fbstp
sbb
sbb
mov
loopne
outsb
mov
push
in
je
pop
push
jl
daa
push
test
or
imul
or
sub
aas
icebp
push
push
lock
jnp
push
mov
jmp
mov
stc
jno
imul
sbb
cwtl
mov
mov
sub
xlat
xor
mov
ret
fmuls
push
or
xchg
or
outsl
insl
and
movsl
mov
test
jl
pop
loopne
imul
mov
daa
push
fildl
aad
dec
data16
rcrb
dec
dec
xlat
lret
pop
stos
out
mov
pop
fmul
inc
add
nop
out
jne
shl
pop
jmp
cmp
out
out
imul
and
imul
test
and
sub
xchg
add
xor
aad
je
in
daa
cmp
adc
pushf
xor
idivl
pop
repnz
xorb
dec
or
push
lods
arpl
pusha
mov
fninit
pop
inc
pop
outsl
fistps
insl
sbb
divb
mov
sahf
add
xor
xchg
andb
scas
cmp
mov
ss
lds
lock
mov
mov
arpl
xchg
jmp
mul
test
das
loop
sbb
test
fwait
arpl
data16
mov
jae
arpl
test
sbb
mov
fisubrl
inc
jg
inc
xchg
sahf
lods
in
ret
enter
les
mov
lea
icebp
andl
pop
fcompl
mov
or
cmp
mov
adc
adcl
subb
xor
daa
fwait
andb
aam
sub
inc
fisttpl
outsb
dec
loopne
mov
int
movsl
jl
sbb
sub
inc
push
pusha
inc
int
inc
repz
adc
subl
rcll
mov
pusha
push
lret
sbbb
inc
ret
add
les
out
std
push
adc
es
inc
es
insb
pop
sbb
cli
out
cmp
not
xor
iret
dec
imul
sti
inc
mov
cmp
or
stc
push
test
dec
sub
pushf
incl
cld
pusha
lods
out
in
push
out
dec
xchg
push
mov
loop
xchg
shll
adc
mov
sti
fldt
push
loope
xchg
lods
popa
and
add
fadds
xchg
inc
lock
jge
xchg
test
sbb
clc
into
pop
stc
mov
add
arpl
sbb
rclb
fisubs
jge
pop
jg
cmp
cmpsl
dec
inc
cmp
or
lock
xor
xor
xchg
pop
mov
lods
popa
dec
sbb
andl
stos
jo
icebp
push
nop
test
imul
pop
dec
mov
pshufw
cmc
and
js
xchg
xchg
adc
mov
scas
or
adcb
fs
les
fstpl
cmp
pop
jp
mov
call
cmc
mov
pop
sub
dec
and
xchg
fstpt
xor
inc
or
aam
sub
dec
test
push
scas
xor
jne
fwait
cmp
jle
fisttps
les
or
adc
movsb
out
mov
push
pop
xlat
lock
mov
shlb
adc
mov
pop
hlt
mov
ss
mov
call
aad
mov
lcall
repnz
andl
sbb
add
popa
mov
sbb
mov
ja
stc
mov
sbb
repz
movsl
sti
sbb
mov
stc
inc
pop
lret
jp
xor
cmpsl
pop
cmp
inc
data16
out
insb
sbb
dec
pop
aam
add
addr16
push
or
inc
xchg
imul
dec
in
mov
jmp
in
push
dec
mov
mov
fisttps
xchg
dec
shr
shlb
mov
add
push
jo
mov
fcomps
dec
aam
rcll
bnd
adc
cmp
jnp
jmp
lcall
mov
lods
imul
add
mov
mov
loop
mov
movsb
lods
jo
in
les
dec
je
insl
cmp
ret
ss
mull
ss
ret
es
orb
insl
loopne
mov
cmp
dec
cmp
test
add
lock
dec
arpl
and
ss
js
mov
jmp
xlat
mov
nop
xchg
dec
std
sahf
adc
mov
adc
or
mov
hlt
sti
mov
sub
mov
std
repnz
movsl
pop
add
outsb
mov
sub
stc
dec
arpl
mov
xor
push
sub
pop
fnstenv
fldl
xchg
push
and
pop
push
shlb
add
xchg
pushf
lcall
add
sahf
fbstp
ss
sbb
and
mov
gs
cmc
xchg
mov
cld
xor
xchg
lods
inc
sarb
loopne
adc
mov
mulb
and
fcmovnu
xor
das
xor
cs
jg
sub
or
sti
xchg
fisubs
add
mov
adc
xchg
cld
fs
lret
pop
sub
loop
jge
std
xchg
inc
xchg
sub
jmp
cld
xchg
push
adc
sub
or
jle
mov
vandnps
into
outsl
cmp
cmp
jmp
jbe
pop
add
adc
xor
cltd
shr
and
popl
and
das
imul
insl
or
pushf
icebp
test
adcl
arpl
cs
pusha
dec
daa
popf
inc
mov
adc
mov
xchg
imul
jne
and
inc
xor
pop
movsl
xor
in
push
aad
xor
jecxz
dec
jmp
shr
sbb
sbb
push
loope
js
sbb
adc
xchg
mov
aam
inc
and
mov
cmp
ja
inc
and
into
mov
xor
mov
mov
cmpsb
rorl
jns
and
test
inc
push
aad
xchg
in
and
test
test
iret
xchg
dec
in
push
and
test
lret
aas
inc
data16
stc
dec
dec
jo
jnp
js
call
adc
aam
ret
xchg
sete
addr16
or
out
pop
out
push
test
repnz
in
add
and
aaa
mov
inc
out
fisttpll
loopne
mov
mov
aaa
std
into
sbb
sub
pop
xchg
stos
shl
add
insb
ja
mov
ja
xor
iret
jno
in
jns
cwtl
sub
into
cmp
xor
arpl
gs
faddp
dec
insl
mov
ret
sarb
and
inc
fwait
jo
nop
or
imul
xor
jge
lods
lods
dec
pusha
xchg
mov
mov
and
sub
std
mov
pop
in
and
js
test
jecxz
and
pop
out
filds
mov
mov
lds
cmp
inc
and
xor
mov
into
movsb
dec
add
fisubs
push
sarb
test
insl
outsl
lea
xor
enter
popf
inc
aas
rcr
mov
push
lods
scas
sti
add
js
xor
mov
fdivrl
sbb
sub
xchg
xchg
loopew
call
mov
mov
jle
test
push
gs
bound
cli
jmp
loope
std
cmc
pop
xchg
lods
dec
xlat
inc
xchg
or
mov
pushf
mov
test
rcr
std
pop
mov
movsb
jmp
fucom
sbb
inc
test
fnstenv
imul
ljmp
cmp
sbb
and
bound
and
xchg
mov
lea
loope
cmc
rorl
pusha
pop
aam
mov
pop
insb
int
cli
cwtl
sarl
mov
js
jae
int3
std
lcall
sbb
sbb
xor
cmpsb
pop
jb
inc
xchg
ds
inc
inc
insb
cmp
leave
fwait
pop
push
dec
popa
cmp
cmpl
lds
movsb
jns
aaa
cmpsb
loopne
fwait
dec
push
pop
adc
bound
sarb
xchg
and
jae
jl
xchg
stos
loope
push
movsb
repnz
or
add
push
out
mov
inc
or
push
or
into
jl
push
dec
or
decl
sti
mov
mov
sbb
les
jne
adc
dec
mov
mov
sub
int3
ja
xchg
inc
ret
ljmp
ficoms
inc
and
cmpsb
push
movsl
xlat
outsb
test
jle
fs
stc
addr16
pop
push
repz
inc
xchg
xchg
lea
mov
clc
mov
aam
or
rorb
fisubrl
mov
fnsave
mov
mov
ja
dec
adc
stos
fnstenv
insb
clc
popa
mov
daa
inc
repz
sbb
jae
and
div
xor
cmc
adc
ret
inc
call
fcmove
cltd
or
sbb
dec
dec
inc
pop
scas
push
pop
stos
sub
fnstcw
movsl
mov
movsb
test
in
or
pop
adc
aad
lahf
stc
sub
mov
fwait
jp
and
out
mov
frstor
jno
imul
jo
jg
loope
imul
insb
ja
nop
imul
cli
jge
ja
repz
cwtl
out
push
xchg
mov
imul
mov
jmp
mov
pop
pop
fcompl
addl
lret
pop
rcl
push
or
iret
daa
loope
outsl
cmpsl
cmpsl
adc
ret
in
push
out
dec
push
jnp
nop
idivb
adc
push
cld
mov
fbstp
fstpt
lret
sbb
cmp
add
add
jbe
mov
in
sbb
out
push
dec
and
push
mov
fcoms
cli
cmc
inc
out
rcr
push
jp
lret
push
pop
mov
enter
aad
hlt
inc
dec
inc
sub
xor
xchg
movsl
fldt
jmp
fwait
jbe
in
mov
insb
and
xchg
shl
cmpsl
inc
ljmp
sub
jbe
push
hlt
jb
pop
hlt
mov
repnz
les
jg
xor
rcr
jno
sbb
scas
add
push
mov
mov
imul
int
andb
mov
rcrb
mov
or
in
cld
cwtl
dec
jge
das
and
pushf
jno
pop
in
mov
cmp
outsb
or
xor
sub
cli
cmpsb
sbbb
sub
loope
call
ss
pop
in
ret
mov
fucom
mov
and
xchg
xchg
cld
push
rcl
mov
loope
hlt
push
scas
sbb
scas
sahf
stc
inc
pop
dec
mov
mov
inc
jmp
inc
pop
decl
fnstenv
ficoml
iret
shrl
movsb
rcrb
push
sbb
jns
and
clc
js
or
divl
jle,pn
jg
hlt
mov
aad
jno
adc
inc
sbb
outsb
inc
jns
jge
jo
int
adc
stos
xor
cli
lret
mov
aas
ds
mov
or
mov
xor
add
fidivrs
dec
add
mov
call
push
cmpsl
mov
push
mov
iret
leave
mov
imul
das
loop
jmp
sbb
sub
pop
in
dec
jmp
test
loop
sub
in
dec
fcmovb
xchg
scas
adc
les
mov
dec
dec
popa
loope
mov
mov
and
jo
cmpsb
inc
jno
sbb
jmp
ds
add
xor
sbb
sti
mov
fldenv
pop
inc
push
popf
test
lea
push
sbb
orl
xor
inc
das
add
xor
mov
pop
dec
mov
cmpsl
xchg
out
or
inc
xor
or
ret
std
jnp
cmp
loopne
xor
aam
mov
sbb
jns
addb
stc
clc
adcl
hlt
and
xor
daa
or
mov
xor
out
adc
xchg
sub
add
sbb
sbb
dec
in
mov
sub
subl
cwtl
sti
pushw
push
std
or
aas
pop
out
xchg
jo
and
loope
cmp
fidivs
cwtl
cwtl
lds
jmp
scas
jne
cmp
mov
add
jle
js
sahf
pop
stc
mov
jle
popf
dec
lds
adc
push
mov
xor
mov
xchg
sar
cld
mov
out
lock
int3
dec
jbe
pop
and
mov
jne
imul
pop
cmpsl
outsb
imul
lods
loopne
cmp
adc
pop
int3
mov
pop
add
mov
cmpsb
or
out
jg
addr16
and
push
loope
mov
lret
fbld
inc
daa
pop
pop
paddw
cwtl
push
clc
adcl
lock
jbe
shll
push
out
mov
sub
cmp
cmc
cmp
inc
aam
loopne
pop
mov
push
fsts
jo
bound
dec
mov
repnz
popa
xchg
rcll
xchg
cltd
adc
sbb
inc
mov
out
les
mov
rol
push
ds
js,pn
mov
pop
jb
pop
dec
mov
int3
fwait
jmp
pop
xlat
lods
out
stc
ljmp
inc
add
jl
push
jg
movsl
lods
mov
jle
pop
mov
mov
pop
pop
jp
xchg
sbb
lcall
popf
sbb
fnstsw
addr16
aas
es
test
arpl
and
cmp
stc
mov
and
xor
jg
cmp
aaa
fbld
mov
stc
sahf
and
insl
xor
mov
push
imul
aaa
add
sub
fimuls
icebp
shr
fdiv
fimull
leave
fildll
int3
jge
mov
repnz
xor
daa
fsubrp
pop
add
imul
sti
sub
mov
sbb
xor
pop
je
subb
mov
pop
arpl
push
or
loop
pushf
ljmp
neg
rcrl
lret
aas
stos
and
scas
js
lret
cmp
adc
jl
mov
aas
dec
jmp
das
pop
cltd
or
sbb
mov
jbe
repnz
xlat
jmp
pop
mov
mov
test
mov
pop
xor
pusha
subl
mov
movb
ret
fnsave
mov
or
rep
jns
sbb
or
or
cli
push
push
aas
daa
mov
loop
sbb
sarb
movsl
xor
sti
dec
popa
sub
cwtl
cwtl
neg
fwait
xor
push
stos
xorb
xor
mov
push
scas
and
das
mov
sub
push
pop
shlb
pop
and
ret
pop
xor
insl
fcompl
out
jae
push
in
push
mov
push
inc
loope
out
nop
scas
sub
sub
in
ljmp
mov
stos
pop
dec
jne
fisubrl
xchg
out
int3
xchg
roll
es
cmp
pcmpgtd
jl
je
popa
add
push
jge
daa
push
mov
or
sbb
lret
push
fmul
push
add
insl
and
mov
cmp
jno
inc
inc
mov
clc
repnz
in
ds
adc
mov
inc
lret
ds
lret
xchg
jle
jno
adc
push
cmpsl
in
imul
jae
lcall
jnp
mov
or
out
dec
rcrl
inc
enter
sbb
and
xchg
add
xlat
out
jae
rolb
fistps
out
push
add
enter
mov
mov
out
xor
test
sub
jb
dec
test
dec
aaa
xchg
fdivrs
in
jns
test
popf
les
stos
sbb
sahf
xor
lret
jo
mov
or
xchg
movmskps
adc
dec
mov
mov
inc
in
lea
xor
popa
or
jnp,pt
ret
push
sub
mov
aas
lcall
mov
add
mov
cli
jmp
outsb
xchg
xor
mov
jbe
fsub
pop
pop
mov
in
outsb
out
and
mov
mov
shrl
dec
jg
daa
mov
push
dec
sbb
push
mov
roll
pop
push
mov
jbe
jnp
jle
cmp
mov
pop
insl
push
xchg
pop
cmp
mov
test
pop
les
insb
dec
ds
pushf
jae
dec
orl
call
imulb
pop
jecxz
cmp
test
sbb
adcl
adc
jp
push
cmpsl
ds
inc
sbb
mov
push
pop
xchg
adc
jne
inc
insb
cltd
es
adc
push
sarl
pop
xchg
pop
in
addr16
rorb
push
or
adc
rorl
cmc
jae
ret
movsb
hlt
mov
out
shll
jnp
sbb
dec
xchg
sub
xchg
and
jg
test
leave
inc
sbb
mov
int3
inc
lds
adc
rolb
clc
test
fwait
push
and
enter
dec
popa
inc
mov
jb
push
pop
jae
push
pop
xor
xchg
xchg
or
test
xchg
inc
mov
lods
es
in
loopne
dec
push
inc
out
dec
jl
pop
scas
sub
sub
mov
jo
sub
jp
ss
jecxz
inc
stc
addr16
lds
mov
pushf
mov
inc
push
fwait
int3
je
pop
lock
jns
and
cmp
int3
cmc
add
adc
cmp
hlt
ret
inc
scas
pop
and
mov
shl
adc
jp
lret
test
adc
pop
or
xor
and
jns
and
add
sbb
push
cs
inc
loope
push
out
or
std
xchg
ret
sub
cmpsl
aam
repnz
addr16
out
jge
sbb
stc
fidivs
jns
int3
enter
fs
pop
xchg
sbb
sbb
push
jl
inc
dec
notl
popf
lret
push
mov
and
mov
xor
xchg
pop
mov
mov
or
jl
aas
sbb
push
inc
xchg
jne
jne
pop
push
jns
sbb
adc
add
outsb
shll
pop
repnz
jl
sti
mov
popf
mov
xchg
add
lea
add
ds
rol
mov
lods
call
pusha
stc
out
pop
mov
mov
cltd
mov
ds
iret
ret
dec
xor
inc
or
pop
mov
ljmp
sub
add
inc
lods
clc
icebp
mov
pop
push
jmp
xorl
out
sbbl
int
sub
fs
ret
mov
lahf
jbe
xchg
cs
or
push
inc
stos
or
clc
fstl
inc
cmp
and
aad
aam
xchg
sti
mov
lock
pushf
jae
fnstsw
repnz
out
js
and
cmp
pop
lret
sbb
call
pop
ficomps
sarl
mov
xchg
cli
movsb
pop
sub
mov
fildl
inc
imul
lea
das
repz
pop
push
sub
cmp
mov
shr
iret
mov
pop
jb
dec
fwait
repnz
outsb
cld
sbb
rorl
sbb
inc
pop
pop
adc
xlat
and
jne
out
push
repnz
std
jecxz
add
hlt
sbb
mov
pop
fcomps
dec
cmp
push
mov
loop
cmpsb
push
mov
add
inc
push
in
fs
mov
enter
lods
das
mov
mov
xchg
out
xchg
out
stos
shl
stc
dec
mov
jnp
lock
pop
push
pusha
xlat
dec
push
div
xchg
lahf
push
mov
pushf
pop
cwtl
mov
cmp
pop
jle
les
das
xlat
or
adc
call
test
int
pop
scas
sub
mov
inc
add
add
sub
movsb
nop
xchg
out
in
shlb
push
in
repz
std
popf
sbbb
xlat
jg
fimuls
jmp
fsts
out
addr16
not
mov
cmp
add
push
sub
pop
out
mov
stos
mov
sahf
sbb
mov
cmp
push
inc
and
mulb
xchg
test
mov
aaa
adc
cmp
scas
mov
into
pop
int
imul
insl
mov
pop
pushf
mov
lea
daa
mov
mov
daa
dec
jg
mov
call
int3
mov
out
lock
xchg
sbb
fwait
testb
adc
ljmp
push
xchg
out
cmp
lret
mov
enter
bound
and
mov
inc
dec
repnz
popa
push
pop
mov
shll
push
cli
mov
test
out
inc
mov
and
cwtl
shlb
inc
insl
pop
fsincos
mov
inc
dec
and
jmp
mov
ja
and
add
sub
and
xchg
and
sub
adc
inc
leave
lret
cmc
sub
and
aad
cmp
jne
lock
sti
add
dec
dec
scas
shlb
dec
and
mov
fldl
ds
dec
icebp
mov
sub
icebp
js
sub
or
push
movsb
sub
sbb
cmpb
pusha
or
mov
push
add
lret
aam
sarl
xchg
cli
adc
leave
dec
mov
or
jg
ja
fstl
aam
jle
sahf
inc
nop
movb
mov
push
pusha
adc
int
cwtl
enter
mov
mov
mov
lods
sub
aam
ret
mov
lret
aaa
jle
and
add
scas
les
ja
enter
cwtl
mov
sbb
pop
mov
fcoml
std
push
dec
jle
das
ret
mov
xor
jo
lret
fidivrs
or
fdivrs
mov
push
cmp
cmp
sbbb
pop
xchg
jecxz
aam
aaa
insb
xchg
sarl
sub
lock
aaa
out
jae
push
loop
mov
pop
ds
lods
fwait
arpl
cmp
adc
sub
stos
scas
adc
out
ss
pop
xor
xchg
inc
bound
outsl
and
mov
pop
inc
int
add
push
dec
pop
push
push
bound
fsubr
movsb
pop
xor
and
stc
xchg
adc
mov
mov
clc
es
nop
ror
push
loope
and
pop
je
hlt
add
in
fsts
adc
jnp
sti
mov
daa
les
ljmp
mov
pusha
jb
jno
out
out
xor
aad
adc
cmpsl
inc
fcmovne
flds
or
push
out
lcall
fsubs
mov
jae
call
dec
push
rcll
jo
or
jo
ret
push
dec
lea
ret
add
in
fwait
adc
mov
std
mov
sbb
xor
xchg
fs
ret
sbb
lods
inc
mov
inc
lret
adc
out
cmp
push
inc
test
sarl
pop
sarl
cli
fwait
sbb
test
cmpsb
adc
jb
ds
leave
je
outsb
jne
mov
adc
div
bound
ja
mov
or
iret
jbe
xchg
pop
xor
mov
imul
mov
cmp
add
rcll
aas
or
inc
sbb
add
scas
lret
jge
pop
sbb
test
inc
jg
test
pop
ss
adc
mov
or
or
out
loopne
lods
daa
gs
push
mov
xor
dec
sub
loopne
lods
sbb
lahf
mov
jmp
inc
cmpsl
pop
hlt
lcall
arpl
adc
jne
fnstsw
jne
inc
out
mov
mov
mov
xor
pop
push
fidivrl
inc
push
gs
add
imul
mov
sub
lahf
pop
sub
nop
int
std
insl
sarb
dec
cmpsb
jle
loope
sbb
or
mov
xor
add
call
and
cmc
inc
aad
adc
xchg
jl
jp
insl
leave
daa
mov
mov
mov
out
imull
leave
jo
mov
popa
jg
lods
movsl
cmp
push
call
add
dec
mov
pop
cmp
xor
inc
jns
inc
lcall
outsl
bound
sbb
pop
adc
push
cmpsb
pop
jnp
push
xchg
lahf
push
or
aas
mov
cmp
rcr
mov
push
sub
mov
imul
dec
adc
shl
ret
inc
push
inc
sub
push
movsl
or
es
in
mov
cmp
cmp
pop
sub
xchg
out
ret
adc
ds
pop
fdiv
sbb
pop
cmp
push
das
lcall
cmp
js
inc
push
pop
push
rorb
or
test
push
std
clc
outsl
jmp
call
push
xchg
jge
shrb
icebp
popf
in
loopne
or
mov
loope
test
push
imul
xchg
or
out
mov
pop
mov
mov
rcr
add
mov
and
jb
sub
inc
xorl
cli
push
leave
jno
xchg
das
cmpsb
mov
inc
adc
inc
fwait
sahf
pop
inc
dec
cmp
imul
ljmp
mov
xchg
xor
mov
ds
push
out
shll
jle
inc
mov
fs
mov
jle
jns
dec
xchg
data16
dec
ret
mov
mov
adc
inc
jg
movb
cmp
stc
mov
cld
outsb
lods
push
mov
and
lods
iret
or
mov
fisubrs
pop
mov
aad
or
xorl
in
sub
xor
lcall
psubb
test
enter
stos
pop
dec
mov
mov
pusha
xchg
push
or
push
into
pop
repz
bound
out
inc
sarl
mov
jo
mov
and
cmp
lds
jle
jl
les
loope
dec
add
push
or
std
fsub
cltd
cmp
rclb
pop
loop
int
mov
scas
sahf
popf
add
inc
hlt
mov
mov
int3
sbb
pop
gs
rolb
test
divl
call
pop
jnp
xchg
lcall
loop
ljmp
push
push
test
xchg
pushf
sub
cmpsl
pusha
insl
xor
mov
das
pop
pop
sbb
xchg
jns
cld
cmc
mov
inc
stos
fwait
cmp
add
xchg
lods
add
aad
cmpsb
jecxz
mov
mov
mov
test
addb
xchg
lods
fwait
int
push
jmp
cmp
stos
xor
mov
mov
ret
mov
or
shrl
and
ret
cmp
and
dec
test
nop
in
or
pop
cmp
ljmp
cmp
dec
movsl
ss
cwtl
mov
sbb
je
in
xor
popf
cmp
notb
xchg
data16
xor
repnz
divl
hlt
cmc
adc
push
sbb
cmp
cmpsl
cmp
cmp
insl
and
lret
sti
xchg
ret
sub
pop
sti
push
fs
jmp
inc
inc
mov
jge
cmp
jecxz
xchg
inc
out
mov
outsb
sarb
clc
cltd
xor
xchg
scas
outsb
xorb
jge
sahf
cmp
pop
and
mov
push
jbe
mov
push
cmpl
mov
call
or
incb
test
mov
push
push
cli
inc
push
mov
push
ret
insb
push
add
pop
inc
xlat
outsb
inc
inc
jno
je
and
xlat
frstor
bound
insb
jne
push
ds
gs
xchg
mov
mov
adc
cmc
lret
mov
subl
testb
pusha
mov
xchg
or
into
pop
inc
pop
pushf
repz
das
push
ret
sbb
mov
sub
movsl
dec
fs
pop
or
subb
add
aaa
push
enter
mov
lahf
gs
ficoml
jge
into
push
push
rolb
fwait
jae
push
sub
mov
mov
dec
add
jl
pop
movl
nop
out
xor
aad
xor
ret
jb
mov
inc
xchg
ret
ret
xor
imul
pushf
or
clc
popf
lock
add
cmp
jnp
mov
rorb
or
sub
inc
cwtl
sub
jb
pop
icebp
lods
sbb
stos
jnp
pop
scas
mov
pop
sbb
popa
fisubrs
mov
inc
mov
xor
lahf
icebp
jbe
mov
data16
ret
push
xchg
insb
dec
or
imul
mov
stc
sub
inc
popa
fcompl
sti
lds
lcall
inc
jle
xchg
mov
in
outsb
test
daa
aaa
adc
rcr
xchg
mov
in
clc
pop
cmpl
cmc
pop
sbb
mov
clc
cmc
xor
xor
xor
jne
aas
loop
or
movsl
push
push
dec
in
inc
push
push
imul
frndint
sub
xchg
ljmp
dec
jnp
sub
jl
cmp
ret
lea
sti
insb
gs
divl
arpl
lahf
loopne
add
ljmp
aam
sbb
push
imul
cmp
out
test
mov
decb
lock
pop
sbbb
je
nop
shll
mov
mov
jns
fcomp
into
lret
test
sub
jp
cmc
imul
ja
mov
gs
shrb
stos
mov
pop
pop
mov
ret
int3
push
mov
fs
andb
inc
sbb
fdivl
into
cmp
jecxz
mov
add
repz
das
mov
mov
jne
nop
cltd
hlt
mov
and
pusha
scas
pop
push
or
sti
adc
push
dec
jne,pn
gs
mov
ljmp
pop
xchg
movl
push
or
push
jge
pushf
test
fmuls
xorl
jecxz
mov
and
fldl
pushf
repnz
adc
mov
in
lret
int3
cmp
pop
les
jnp
xor
in
cmp
lods
ss
insb
icebp
test
mov
in
push
ljmp
jnp
cld
enter
cmp
xchg
sub
dec
js
mov
cmpsb
sar
add
nop
mov
rorb
pushf
sbb
mov
int
lret
test
lahf
ret
shlb
inc
fnsave
mov
mov
sbb
add
popa
cmp
addr16
iret
aad
mov
cmp
clc
scas
mov
in
dec
sbb
pushf
icebp
pop
push
addr16
cmpsb
lret
xlat
das
mov
in
and
movsb
test
pushf
push
pop
dec
xchg
les
dec
leave
sti
lea
lret
call
call
push
pop
out
iret
push
mov
push
or
and
jl
das
sbb
mov
xchg
insl
iret
mov
mov
popf
out
sbb
stos
push
dec
movsl
movsb
mov
sbb
rcll
add
mov
fisubl
insl
cwtl
stos
mov
mov
mov
leave
cmc
out
fildll
sub
stc
or
in
call
mov
pop
add
mov
and
jge
lret
test
dec
and
jb
scas
add
pop
repz
bswap
std
push
jne
int3
fnstsw
mov
sti
add
lret
sahf
repnz
pusha
xor
push
das
push
dec
movsl
xor
cmpl
addr16
pop
aas
jmp
neg
dec
arpl
jp
mov
repnz
int
pop
aaa
icebp
cld
pushf
popf
pop
mov
mov
push
es
enter
jb
xor
int3
ror
pop
jbe
in
dec
jbe
or
mov
mov
pop
mov
ds
movsl
cmp
adc
pop
insb
mov
push
and
push
jne
sub
add
ret
pop
ja
fcmovnu
push
mov
loop
ret
pop
mov
loopne
xchg
notb
cli
ljmp
inc
xor
xchg
fwait
stos
ret
or
push
jo
push
cld
fcomps
xor
je
outsl
sahf
push
push
ja
pop
push
insl
push
call
xchg
push
div
sbb
stos
ror
imul
ja
cmc
pop
inc
popa
or
adc
stos
xor
bound
ror
les
dec
ljmp
dec
fcmovnu
scas
fnstenv
sahf
cmpsl
push
mov
sub
fildl
cmp
testl
cmpsl
xchg
push
mov
movsl
insl
inc
push
xchg
stos
sti
cli
movb
jecxz
int
iret
mov
add
and
mov
scas
je
xchg
push
and
pop
addb
shlb
xor
mov
into
stos
mov
cmp
lock
cmp
pop
andb
mov
or
inc
daa
cwtl
sahf
adc
dec
sub
mov
push
xor
rcrb
add
dec
sub
push
mov
sbb
mov
jb
aaa
pop
sub
mov
roll
mov
cmc
sti
pop
jo
xchg
or
adc
jae
push
inc
lea
scas
xlat
das
out
sub
lods
xchg
idivb
and
xor
cmpsb
shlb
jmp
xchg
jno
push
jg
notl
pop
fldl
es
cltd
fwait
scas
push
enter
or
adc
adc
fisubl
mov
pop
es
jg
mov
mov
pop
pop
hlt
xchg
xchg
inc
pop
jne
mov
mov
mov
mov
xor
cwtl
cs
adc
jg
cmp
add
add
loope
mov
fnstenv
ret
sub
iret
fucomi
ja
repz
insb
pop
or
sbb
sti
mov
daa
shlb
lahf
push
xchg
adc
push
jecxz
sbb
pop
sahf
or
dec
inc
cmp
xor
and
sbb
test
add
das
sub
xor
test
popf
push
cmp
mov
or
testl
nop
mov
or
lock
or
add
inc
in
pop
movsb
and
sub
aad
push
cli
incl
repz
jno
scas
lea
mov
in
jae
mov
sub
mov
bound
jne
aam
adc
ror
mov
dec
aaa
dec
outsl
xor
mov
inc
adc
and
sbb
scas
cmc
enter
adc
mov
mov
cmpb
adc
add
xor
pop
add
fiadds
hlt
xchg
loope
mov
mov
dec
stc
test
insb
push
cmp
sub
mov
sahf
add
push
jmp
push
pushf
data16
inc
dec
cmpsb
pushw
lods
aas
mov
lods
cs
cmp
jle
mov
rolb
lcall
dec
in
pop
shll
pop
test
in
stc
leave
les
jno
ljmp
push
xor
jg
xchg
jg
cwtl
mov
lret
ljmp
into
xchg
sbb
mov
aaa
xchg
jne
subb
in
mov
ret
aas
pop
sbb
movsl
daa
fidivrl
or
in
pop
cld
ret
aam
lret
lods
cli
mov
call
pop
and
in
pop
sub
jo
sbb
bound
mov
jo
mov
xchg
mov
pusha
frstor
into
jnp
cmpsl
sub
je
mov
jo
fucomp
andl
xor
in
popf
sbb
rorb
add
adc
cwtl
sub
jno
lcall
inc
jle
stos
out
daa
sarb
sub
imull
cmc
pushf
outsb
cmp
popa
stos
pop
fdivs
imul
test
inc
xchg
inc
sbb
scas
xor
les
ja
add
sub
or
cli
jl
xchg
sub
popf
out
pop
cmp
cmpb
stc
imul
sbb
popa
pop
insb
leave
lahf
gs
cwtl
cli
xchg
xchg
mov
cld
sub
outsb
sahf
dec
pop
dec
rcr
sbb
movsl
jecxz
and
insb
and
push
testl
imul
xor
mov
or
xlat
cmpsl
jecxz
cld
loop
scas
xor
fwait
das
pop
cmp
sahf
dec
mov
inc
push
jl
test
jmp
lret
jmp
push
cmp
fs
roll
ljmp
outsl
icebp
int3
jbe,pt
movsb
and
dec
dec
ss
sti
cli
dec
jae
pop
cmpsb
pop
pop
mov
xor
leave
mov
mov
and
pop
enter
loop
mov
jmp
subps
arpl
fisubs
mov
fiaddl
dec
xchg
int3
sbb
mov
std
iret
fsts
xchg
jne
in
or
test
pop
ffreep
fucom
jns
jp
nop
aaa
cmp
cld
in
or
shll
sub
inc
xchg
lret
pop
mov
daa
lods
lods
in
aam
cld
or
imul
cmpsb
cmp
mov
jae
pop
mov
scas
push
ss
clc
cmpsl
sarl
imul
leave
mov
mov
add
mov
dec
pop
adc
jle
or
sub
addb
jae
sub
mov
mov
xchg
mov
sbb
dec
mov
lahf
xor
push
outsl
fisttpll
cli
es
cmc
mov
mov
xor
out
in
fstpl
inc
fsubrl
insb
dec
xor
je
adc
ret
int
out
pop
xchg
lret
mov
adc
cmp
mov
cmp
lds
and
test
lret
js
and
popa
aaa
add
shlb
and
mov
fldl
les
lods
int
outsl
mov
je
lret
mov
xor
jbe
pop
enter
mov
ja
inc
mov
and
data16
mov
xlat
lea
push
push
stos
mov
sarw
lods
stos
cltd
dec
add
adc
pushf
clc
rcr
inc
mov
shrb
push
aam
dec
out
push
cwtl
outsb
push
jnp
sbb
push
das
flds
je
xchg
std
int3
jp
pusha
mov
mov
sbb
call
ds
mov
push
mov
push
cld
stos
mov
jnp
movsb
mov
adc
jmp
nop
mov
pop
push
and
movsb
in
sub
add
loop
xor
fildll
and
jl
out
sub
call
icebp
cmp
mov
cmp
mov
arpl
addb
sbb
sub
fwait
test
jmp
orb
leave
int3
sbb
jle
mov
mov
jg
adc
jl
and
xlat
shlb
nop
das
lret
add
xor
and
adc
inc
mov
mov
xorb
dec
jmp
addb
mov
adc
jecxz
jp
pushw
dec
aaa
adc
shrb
in
push
pop
push
rorl
xchg
add
sub
lret
jle
jbe
pop
mov
es
mov
sbb
mov
add
addr16
pushf
pop
pop
shl
jnp
cmp
out
cltd
push
pushf
ds
sub
xchg
pop
call
pop
xor
cli
lcall
ret
inc
setp
cltd
mov
and
jmp
inc
cmp
enter
orb
mov
outsl
pop
insb
cmpsb
dec
jl
dec
fcmovne
idiv
add
and
fistpl
pop
pop
das
cs
fcoml
xchg
push
push
lret
or
popf
push
sti
push
roll
in
insl
push
or
invd
xchg
loopne
xchg
movsl
loop
adc
add
ds
pop
daa
sti
out
add
ret
bound
sub
or
scas
mov
arpl
jne
out
sbb
and
leave
push
in
in
jmp
js
dec
jb
push
sub
aad
fsubl
push
leave
cli
imul
fisubl
xchg
or
pop
xor
nop
lret
popf
cmpsl
repz
xchg
sub
andb
or
sbb
psubb
adc
ja
in
test
faddl
pop
push
gs
dec
loope
jns
jmp
sub
and
or
cmp
xchg
stos
mov
icebp
mov
inc
sub
gs
jle
mov
mov
icebp
ja
outsb
jp
loopne
jg
daa
add
mov
and
pop
in
cmpsl
mov
mov
mov
jo
jg
adc
imul
ret
call
xchg
mov
pop
inc
sbb
iret
sti
je
leave
push
pop
xchg
cmc
lcall
and
orl
cli
in
and
sub
jge
shlb
shlb
lret
cmp
inc
jnp
pop
cmpsb
and
sbb
mov
inc
aam
inc
xchg
sbb
xor
shlb
mov
sub
aaa
lods
xor
or
push
movsb
or
add
aas
jecxz
sbb
inc
push
push
or
in
mov
jecxz
and
test
lock
sub
loop
push
lahf
leave
jno
add
mov
outsl
xor
in
jne
xor
in
xchg
add
xor
add
cmp
and
pop
sub
or
mov
pop
in
int
imul
mov
aaa
pop
sbb
add
xchg
cmpsb
imul
std
ja
add
mov
sub
push
cmp
outsl
add
jnp
push
rorl
dec
xor
jmp
and
mov
into
rclb
push
cmp
jp
jmp
into
cmp
flds
dec
lea
pop
or
popf
mov
pop
iret
xchg
dec
fsts
sub
mov
inc
mov
adc
scas
cli
data16
add
inc
mov
out
and
sbbl
es
adc
icebp
daa
addl
or
inc
lods
add
xchg
iret
inc
loope
pop
pop
sub
lock
ja
xchg
dec
daa
lcall
inc
fisttpl
daa
pop
xor
inc
and
jg
ss
fnstsw
fldt
jno
inc
mov
jl
xchg
mov
mov
lods
mov
xor
mov
loopne
js
cli
imul
mov
dec
cmp
pop
ficomps
jbe
inc
push
stos
push
lret
jmp
mov
cmp
mov
out
or
push
movsb
jae
dec
test
into
pop
lcall
fwait
or
int
out
sbb
mov
sbb
inc
jb
repz
hlt
jle
adc
lret
or
mov
pop
pop
mull
push
pop
cmp
cmpsl
mov
pop
inc
xchg
int
sub
fiadds
jge
scas
mov
sahf
mov
mov
jle
pop
push
push
flds
push
pop
jl
and
dec
cmp
xchg
push
out
and
pop
jno
push
mov
or
pop
adc
push
insl
in
cmpsb
push
or
movsb
aas
into
or
dec
pop
cmp
sub
add
mov
cmc
cmp
push
shll
ret
xchg
pop
jae
pop
push
cmc
cld
imul
and
sub
xchg
js
sub
lret
sti
cmp
jne
push
jp
aaa
cld
subl
mov
xor
sub
mov
ds
xchg
mov
mov
repnz
push
popf
push
mov
and
inc
loope
mov
sbb
pop
shrl
inc
mov
jae
pop
and
xchg
sub
xorb
js
xchg
cmp
push
push
jp
pop
xchg
pop
mov
add
adc
lret
adc
xchg
test
test
mov
push
fwait
add
pushf
or
jns
out
jne
and
inc
out
shl
subb
mov
lcall
ret
sub
mov
sbb
add
and
gs
ja
fildl
outsl
cwtl
aaa
pop
enter
push
jne
add
mov
scas
xchg
pop
inc
mov
stc
pusha
xchg
rorl
fiadds
adc
jnp
mov
pop
xor
jne
xor
jb
inc
xor
mov
arpl
repnz
jbe
in
push
cld
in
shrl
lret
add
ljmp
mov
roll
xor
pop
scas
pop
xchg
fisubl
test
xchg
jg
mov
dec
mov
pusha
adc
loop
cmp
loopne
popa
mov
push
jecxz
mov
xor
in
adc
das
pop
push
pop
js
fisubrl
pop
jcxz
imul
sub
cmp
adc
inc
sbb
xchg
pop
xchg
jbe
imul
and
scas
jg
lcall
inc
dec
xlat
or
int
inc
imul
sbb
les
cwtl
pop
xlat
xchg
mov
lcall
mov
popf
cld
sti
xchg
mov
mov
leave
rcr
mov
fsubl
popf
imul
jbe
cld
lcall
xorl
movsl
pop
ret
scas
sbb
dec
add
xchg
enter
pop
xchg
out
cmc
lahf
jbe
jnp
mov
adc
xchg
faddl
arpl
mov
in
xchg
cmpsl
xchg
nop
pop
in
stos
sahf
sahf
out
arpl
std
loop
mov
push
jp
sub
icebp
push
xor
add
pop
push
pop
xchg
adc
xchg
shll
ret
lcall
xchg
nop
stc
mov
call
xchg
xor
adc
sahf
daa
lcall
jmp
sub
stc
ret
fs
sub
inc
pusha
mov
int
pop
sub
inc
push
mov
scas
push
leave
cli
insl
fimull
aam
sbb
ret
pop
pop
ljmp
outsb
loopne
xchg
mov
int
push
nop
icebp
shll
fwait
jp
stos
inc
pop
cmp
add
ja
xor
es
jmp
mov
call
pusha
ficoml
arpl
out
into
shrl
test
repnz
pop
shl
sbb
and
ja
inc
cmovne
push
cli
scas
jb
repnz
xor
into
dec
sbb
add
stc
icebp
sarl
fadd
stc
loope
out
repnz
mov
jno
repnz
jge
adc
mov
subb
push
mov
mov
cmp
jecxz
or
cmp
or
shr
clc
sub
jae
mov
inc
insl
in
mov
xchg
bound
popf
test
gs
adc
push
nop
cmp
push
jne
inc
inc
xchg
cld
pop
jbe
add
mov
sahf
lret
xor
inc
push
xor
je
or
in
test
enter
shrb
int
mov
or
mov
into
mov
je
xchg
inc
inc
fisttpl
scas
mov
icebp
push
mov
popf
lea
add
das
js
mov
xchg
movsl
je
lret
adc
repz
push
push
mov
push
mov
add
push
pop
insl
cmp
stc
inc
lcall
pop
pop
jle
mov
and
dec
sub
ljmp
jp
fwait
mov
iret
movsl
and
adc
loop
sub
test
call
inc
jne
jb
cld
arpl
jne
sbb
aam
test
gs
mov
cmp
cmpsl
ds
push
mov
mov
adc
sub
movsb
dec
xor
leave
gs
into
or
pushf
jno
addl
sub
jmp
scas
inc
sbb
dec
inc
push
cmp
fnstcw
enter
rcl
xor
inc
push
dec
cmp
xchg
sti
ss
ret
pop
sahf
push
das
xlat
adc
lahf
push
mov
subb
jmp
pop
incl
mov
dec
inc
mov
xor
shll
sub
insl
movsl
jp
jle
cmc
mov
das
sarl
inc
stc
sbb
pop
loopne
jb
mov
xchg
out
xchg
dec
es
fwait
jmp
js
and
nop
sarb
pop
cmp
dec
add
sti
pop
sub
push
fisubl
and
mov
pop
push
and
and
shlb
or
imul
nop
ret
mov
or
inc
ret
std
fisubrl
xchg
mov
adc
lea
out
daa
divps
adc
adc
inc
xchg
xor
inc
mov
mov
pop
lock
jb
arpl
add
push
or
iret
mov
cmp
fcmovb
or
push
sbb
out
ds
hlt
xor
xor
mov
inc
mov
pop
adc
sbb
test
test
push
stc
push
pushf
push
inc
sahf
inc
push
mov
int3
push
xchg
jp
punpckhdq
add
pop
mov
loop
in
iret
fdivr
jb
xchg
in
lret
jle
out
jmp
enter
jp
pop
out
fwait
loopne
mov
jge
es
cltd
loop
mov
xor
pop
fistpl
push
mov
lea
popa
cmp
push
decb
cld
aas
add
xchg
mov
pop
add
insb
add
lea
fld
add
add
movsb
iret
and
sbb
loop
mov
ja
xor
mov
stc
gs
inc
rolb
adc
sub
mov
xor
jp
test
fidivrl
sbb
cli
inc
stos
rorl
push
fdivs
or
jge
or
aas
or
gs
or
cli
shlb
int3
sbb
inc
testb
cmp
es
add
lds
mov
fdivl
xchg
jmp
ljmp
mov
cmp
mov
fidivrl
lods
dec
and
jge
mov
add
std
dec
popf
or
inc
mov
jb
cs
movsb
pop
mov
cmp
out
sbb
inc
test
ret
sbb
out
pop
add
aad
scas
stc
sub
xchg
sub
cwtl
pushf
stc
into
fldenv
or
bound
push
in
sub
add
outsb
mov
push
stos
shlb
jae
push
mov
mov
in
sub
mov
insl
into
lock
int3
push
mov
cmp
bound
ret
data16
fsubrl
lods
mov
movsb
xchg
and
add
mull
cwtl
push
scas
clc
rcll
icebp
mov
out
inc
jnp
cmp
bound
or
pop
rolb
insl
das
or
ds
xchg
push
lahf
jecxz
xchg
les
mov
cmp
aam
es
jb
mov
inc
out
dec
push
divb
jns
call
or
mov
sub
jmp
jmp
daa
hlt
std
addr16
xchg
icebp
popa
div
xchg
inc
jbe
xchg
jp
xchg
add
adc
and
mov
push
adc
or
push
rcl
ljmp
dec
or
or
repz
pop
into
mov
adc
pavgb
push
rcll
ficoms
outsb
out
or
mov
pop
mov
int
hlt
ret
dec
aaa
es
xchg
inc
add
mov
sbb
push
jl
mov
ljmp
sub
pusha
jo,pn
mov
jb
in
pushf
jnp
sbb
add
cli
jg
cmp
fmull
push
pushf
cmp
xchg
inc
addr16
fwait
ljmp
mov
or
stc
push
lods
mov
lcall
add
add
mov
pop
fld1
sbb
cwtl
pop
mov
addr16
repnz
out
adc
push
data16
lahf
aad
lcall
sub
mov
xchg
int3
shlb
cmovl
push
jb
adc
xor
cmp
enter
jge
aad
stc
cwtl
jp
ficomps
sub
push
push
xorb
pop
fstpl
data16
fcoms
loopne
push
mov
clc
lret
xchg
loopne
jbe
sbb
sub
aas
lock
xorl
adc
cwtl
out
mov
pop
dec
push
lret
jmp
cmpl
enter
pop
cmp
sbb
adc
and
jp
loop
mov
sub
out
and
adc
arpl
mov
lret
cmc
or
jg
cltd
adc
push
jecxz
mov
mov
or
xchg
addr16
push
mov
clc
push
jecxz
fstpt
call
inc
or
push
pop
xchg
pop
sub
lds
mov
add
pop
add
ljmp
lods
fistl
xchg
xchg
insb
jnp
pusha
sbb
mov
decb
mov
xlat
push
push
out
cmc
imul
in
push
out
cs
add
js
pushf
pop
mov
xchg
dec
pop
fucomp
jmp
adc
dec
push
lea
imul
mov
adcb
outsb
sti
lods
call
xor
fsts
outsb
bnd
in
xchg
push
test
test
inc
cld
fbld
jno
mov
sbb
fisttps
fiadds
mov
xlat
xor
jo
ficoml
fcoms
inc
dec
jne
push
xchg
xor
adc
mov
xchg
sahf
movsb
mov
xor
xchg
mov
pop
adc
push
into
add
and
icebp
fcompl
sub
push
faddl
pop
ljmp
shll
movsl
int
roll
xor
lahf
and
xchg
cmp
push
xchg
push
stos
cmp
adc
xor
mov
dec
mov
sub
lds
mov
fsubl
sbb
js
fwait
or
mov
dec
fadds
bswap
in
pop
mov
mov
cmpb
subl
push
xor
adc
bound
inc
jmp
pop
lock
clc
or
aam
mov
mov
mov
dec
mov
mov
cmc
push
ret
iret
mov
push
lods
sub
sbb
cmp
leave
push
leave
xor
cmpsb
add
add
test
fwait
test
fildll
dec
fildll
aaa
insb
ja
push
pop
mov
add
xchg
inc
and
cs
push
in
imul
pop
fsubs
adc
and
sub
shrb
mov
jmp
std
test
fldcw
mov
iret
sti
ja
fcmove
mull
push
gs
adc
fisubrl
pop
or
lods
dec
mov
fldcw
push
adc
mov
mov
xorl
sub
cmpsb
in
loopne
mov
and
cwtl
add
pop
cmc
or
jae
bound
adc
aad
popf
fbld
mov
std
stc
or
adc
mov
or
stos
das
movsb
iret
cmp
outsb
sbb
jl
mov
push
dec
psubusb
ss
mov
or
inc
and
adc
ljmp
mov
xlat
int3
jbe
insl
cld
cmpsl
notl
sbb
xchg
add
in
adc
xor
dec
dec
lret
rcll
loop
cmp
into
mov
mov
in
int3
inc
movsl
icebp
fsub
mov
and
jns
in
sbb
aas
sbb
data16
xor
mov
add
fstpt
stos
sub
mov
lock
pusha
mov
popf
adc
xor
aam
imul
sbb
sub
jae
out
mov
loopne
push
test
pop
push
dec
xchg
xchg
stos
add
sbb
je
ds
dec
xchg
movsb
lds
pop
test
imul
push
call
xor
lcall
mov
pop
mov
xor
jnp
xor
adc
mov
mov
scas
bound
testb
mov
movsl
js
mov
leave
test
test
jmp
aas
mov
testl
and
stc
cmp
into
into
sbb
icebp
inc
popl
repz
mov
and
cs
rclb
sbb
xchg
outsb
mov
fistpll
fdivrl
xchg
or
mov
fsubrl
aad
inc
jnp
lcall
and
cmp
mov
xor
mov
in
jbe
adc
fwait
test
fucompp
xchg
popf
sub
mov
inc
outsb
sub
sti
sbb
roll
cwtl
clc
mov
xchg
ud0
popf
aad
out
sbb
roll
imul
adc
subl
adc
test
fucomi
cmp
and
lret
cmp
xchg
popa
ret
push
jmp
dec
out
mov
jnp
mov
push
xchg
popa
insl
inc
inc
fadd
xchg
les
push
xchg
fsub
sbb
movsb
loop
and
fs
push
jecxz
or
cs
sbb
mov
out
mov
mov
pop
push
xor
cli
je
ret
and
xchg
jmp
int
in
fwait
or
push
sub
mov
pop
push
pop
shl
xchg
bnd
xchg
cmp
and
shlb
mov
mov
ret
arpl
push
or
push
push
lret
xchg
dec
add
lock
push
imul
cmp
lods
cmp
leave
les
push
test
inc
adc
movb
repz
arpl
outsl
inc
inc
dec
ja
in
jne
add
lods
mov
mov
sti
xchg
jns
sub
rcrb
movsl
xchg
insl
sub
or
cltd
mov
rcll
pop
dec
mov
or
lea
shl
aad
out
mov
jecxz
cmp
xchg
or
insb
and
inc
sarl
xchg
and
and
push
iret
push
mov
js
jg
add
fwait
das
xchg
inc
xor
xchg
sub
push
les
loopne
mov
popf
pop
cmpl
adc
mov
ret
outsl
ficoms
adc
pop
loope
inc
or
mov
inc
mov
popa
imul
xor
mov
call
cmpsb
sbb
ljmp
push
push
roll
jns
sahf
push
mov
outsl
xchg
loope
or
cli
and
adc
nop
ljmp
sahf
sub
out
movb
push
xchg
push
push
xor
mov
inc
adc
ds
mov
push
xor
xor
jmp
ja
insl
cmpsb
lea
sbb
and
push
xor
jne
pop
push
movsb
lods
xchg
xor
jae
inc
rol
mov
dec
ret
fistpll
sarb
nop
or
sub
sti
inc
andl
data16
sub
mov
inc
lahf
jl
cmpsl
dec
out
mov
mov
push
xchg
add
adc
mov
das
clc
mov
inc
sarl
push
xchg
push
pop
dec
sbb
dec
xchg
mov
dec
jmp
clc
gs
das
mov
pop
pop
pop
inc
repz
mov
push
mulb
scas
stc
adc
xorb
push
push
lods
mov
jnp
imul
sbb
inc
jne
fxch
push
xor
fstl
fdivr
push
movsb
cli
repz
add
arpl
xchg
cmpsb
mov
push
add
test
aad
int3
mov
lcall
sbb
jo
repnz
and
or
aas
mov
sub
scas
push
mov
rclb
dec
fisttps
inc
jbe
xchg
xchg
les
pop
int3
ret
cmp
or
mov
mov
mov
inc
mov
pop
fs
cmpsl
fwait
mov
xchg
add
xor
addr16
fstpt
mov
ds
out
shl
adc
mov
or
pop
pop
push
add
jb
and
mov
ss
ss
lea
push
pop
adc
pop
inc
or
pop
push
insb
out
push
mov
cwtl
hlt
jo
lock
mov
popf
inc
in
mov
imul
add
insb
jecxz
orb
cli
mov
cmp
repnz
cmp
outsb
sbb
lods
arpl
ss
mov
test
clc
xchg
sbb
and
cmp
mov
ret
push
ret
sub
int3
movsb
jg
or
sbb
add
out
out
pop
in
dec
ret
fnstenv
ret
jmp
jns
cmpsl
xor
mulb
xor
dec
icebp
out
aam
jge
outsb
fisubl
sbb
inc
pop
inc
xchg
sbb
rolb
loope
cmpsl
sub
in
hlt
cmp
xlat
div
xchg
pop
out
fistpll
int3
push
ret
jp
pop
jge
loope
xchg
sub
insl
arpl
dec
addr16
inc
out
stos
mov
ss
mov
aad
mov
mov
push
movsl
mov
das
inc
fstpl
add
push
aad
cmc
mov
adc
push
filds
push
out
xchg
out
cmpb
mov
les
mov
sbb
stc
mov
mov
or
dec
adc
xchg
enter
iret
es
jg
out
test
push
or
cmpsl
cltd
adc
push
mov
aam
jno
adc
popa
fadds
bound
into
outsb
xchg
push
in
pushf
adc
cmpsl
sbb
daa
jns
out
or
lcall
xorb
dec
fmull
je
out
sub
mov
mov
dec
mov
add
pop
arpl
add
movsl
mov
xor
sub
push
repz
roll
xchg
stc
popf
dec
add
into
popa
aaa
stc
adc
shlb
into
stc
mov
mov
lret
sub
cs
lret
xchg
xorb
fs
add
sbb
mov
cld
dec
sbb
aad
int3
test
outsl
call
add
sahf
jg
sbb
push
sti
mov
pop
sub
add
lret
mov
inc
movsl
daa
mov
sbb
sub
ret
jecxz
scas
and
push
pop
insb
inc
xchg
pop
sub
sbb
add
and
enter
dec
pop
or
pop
jmp
ficoml
mov
add
sbb
jno
push
pop
pop
decl
and
rcrb
mov
leave
xchg
int
rcll
push
loop
mov
lahf
inc
lds
xchg
test
lret
aaa
push
rorl
popa
push
xor
pop
shl
inc
nop
xchg
xchg
ds
cld
in
jbe
mov
jmp
add
cmc
icebp
adcb
pop
pushf
shll
push
stc
scas
pusha
pop
mov
or
jmp
xchg
xchg
xchg
sbb
es
add
xor
mov
push
jmp
and
jnp
push
cwtl
lds
adc
inc
inc
sub
mov
enter
out
mov
pop
xor
inc
sarl
aas
or
jno
out
inc
stc
js
dec
sub
push
dec
ds
cmp
pop
fcompl
scas
xchg
sbb
enter
jns
jg
xor
sbb
and
leave
inc
and
pop
push
testb
mov
shl
jne
ret
fmul
outsl
es
dec
xor
ds
stos
adc
jge
cmpsl
sbb
aad
xor
pop
sub
xor
aam
add
adc
xchg
fdivrl
pushl
inc
push
insl
test
enter
in
lret
iret
sub
mov
shrb
sahf
jecxz
stos
push
inc
movsb
jb
push
jno
cmp
add
dec
into
sti
or
dec
mov
mov
inc
cmpsl
fistps
inc
cmp
mov
adc
lods
lods
xchg
adc
jge
stos
or
jns
insb
data16
cmc
jle
sahf
pop
push
sbb
xchg
insl
ss
les
daa
stos
pop
enter
push
jge
and
sbbb
sbb
enter
les
fwait
xor
inc
cltd
push
push
pushf
mov
aam
add
push
pop
xor
sub
fcmovnbe
bnd
lcall
mov
in
cwtl
xchg
lcall
movsl
lahf
hlt
in
loop
andb
xchg
dec
mov
icebp
popf
fdiv
add
add
cmc
push
in
xor
rolb
add
add
xchg
inc
xor
aaa
arpl
mov
mov
insb
pop
aas
xchg
dec
mov
mov
cmp
call
pop
loop
mov
cltd
dec
mov
out
ret
sbb
push
jg
loop
inc
add
pop
add
sbb
dec
ds
stc
add
iret
push
push
xchg
out
aad
mov
add
daa
lahf
sbb
scas
mov
dec
subb
repz
lea
iret
mov
adc
jbe
sarl
mov
push
inc
jb
add
jno
jb
sahf
ja
pop
mov
sbbl
mov
stc
inc
mov
adc
jmp
je
leave
xchg
std
fisubl
imul
mov
sbbb
icebp
mov
pop
dec
fisubrs
popf
inc
lret
push
add
cwtl
scas
xchg
mov
cmp
adc
xchg
addb
jecxz
lahf
lcall
loopne
in
lcall
add
pop
in
mov
nop
xchg
add
cs
cmp
cmpl
sbb
inc
repnz
pusha
add
addr16
add
mov
jbe
xor
jl
test
jle
inc
aas
or
push
xor
movsl
jl
or
mov
aas
fdivrs
jnp
jmp
lds
mov
fstpt
inc
pop
in
pop
and
movsl
push
push
repnz
ja
inc
xorl
push
dec
mov
jmp
pop
pop
popf
xlat
or
leave
popf
outsb
pop
xor
inc
fldenv
outsb
cmc
xchg
push
xor
jo
jns
adc
dec
mov
push
mov
stc
xchg
jo
xchg
add
mov
outsb
daa
xor
or
pop
ljmp
dec
outsl
mov
adc
mov
test
aad
mov
cltd
fildll
je
inc
adc
cmp
sahf
mov
ret
cmpsl
xchg
ds
sbb
dec
mov
sbb
or
or
bound
fidivs
fisubrl
stc
mov
mov
mov
movsl
insb
push
pop
aam
push
mov
jl
popf
jecxz
call
mov
in
mov
hlt
daa
cmc
dec
cmc
clc
push
pop
lcall
dec
lods
inc
jmp
add
and
jmp
daa
mov
adc
vmread
adc
inc
jge
pushf
push
and
cmpsl
push
pop
pop
dec
cmp
fdivs
sbbb
cmp
out
outsl
lods
in
add
aad
jp
scas
add
cmp
mov
xchg
mov
sub
stos
cs
xchg
stos
xchg
fistps
mov
inc
sahf
push
daa
test
jns
stc
inc
das
inc
stos
lahf
in
pop
adc
cmpsl
inc
nop
mov
cmpsl
cmpsl
dec
cmpsb
loope
in
imul
jl
mov
je
aam
adc
sub
and
cmc
xchg
mov
scas
hlt
xchg
cmp
insb
push
push
ret
loop
rcr
mov
xchg
insb
imul
inc
pop
leavew
or
mov
fcmovne
jno
popa
jo
sbb
imul
pusha
jno
sbb
or
aaa
imul
in
push
push
ret
jno
mov
out
ficompl
aaa
jb
rclb
sahf
push
sbb
clc
pop
lret
mov
dec
dec
outsl
in
sub
mov
rcrb
xchg
lock
test
fwait
in
inc
push
sub
in
movsl
and
jp
mulb
int3
inc
call
or
lcall
add
outsb
mov
cli
adc
scas
push
inc
shl
xchg
lea
mov
lea
jnp
aam
roll
sub
lcall
push
mov
or
addr16
mov
push
out
mov
in
lock
push
sahf
mov
and
enter
xorl
add
rorl
cwtl
add
sbb
jg
xor
jne
mov
test
outsb
insb
enter
dec
push
xchg
std
push
adc
xchg
xor
outsb
cmp
cmp
sbb
mov
inc
ja
std
scas
dec
dec
loope
lret
fsubrl
mov
and
lods
jecxz
mov
adc
pop
ret
sbb
lahf
rorl
ss
cmp
pop
movsb
inc
cmp
stos
fsubr
mov
js
cltd
iret
in
insb
mov
mov
stos
adc
inc
xchg
cmp
mov
sbb
sub
lock
das
or
lret
add
mov
fbstp
sbb
sbb
inc
stos
stc
bound
mov
xor
ret
sbb
lret
repnz
xchg
ja
cld
scas
out
mov
inc
in
cltd
loop
test
xrelease
jo
mov
scas
in
and
daa
mov
lds
push
pop
xchg
fnsave
jmp
fs
lea
fnstcw
aam
inc
mov
dec
inc
lds
jo
mov
or
cmpsb
adc
outsb
jmp
dec
cmp
xchg
xchg
add
sub
les
dec
ret
popf
loop
mov
leave
mov
rorl
in
and
imul
shlb
inc
xchg
insl
sahf
int
dec
lret
push
stc
popf
in
test
mov
jno
out
divl
icebp
mov
fcomps
dec
pop
sbb
add
sbb
xchg
xchg
out
mov
mov
andb
mov
xchg
fiadds
or
add
shlb
out
lds
lock
fsincos
rcll
leave
pop
sbb
and
aad
into
xchg
mov
adc
mov
dec
or
dec
adcl
jle
xchg
mov
daa
jl
inc
dec
sarb
mov
leave
add
lahf
ja
push
or
bound
bound
testw
jns
pop
repnz
out
mov
mov
fcompl
bound
sbb
or
pop
stos
dec
loope
add
sub
shr
ljmp
dec
addr16
xchg
cli
shl
dec
seta
movd
mov
lods
ficomps
xor
imull
mov
push
mov
sti
fstpl
jns
outsb
shlb
push
divl
xchg
jle
mov
xchg
repz
cwtl
push
and
std
scas
xorl
xchg
clc
movsb
js
push
jnp
xchg
push
jne
inc
adc
imul
xlat
inc
js
aad
or
xchg
fwait
repz
pop
mov
test
repz
add
leave
sbb
shlb
outsb
fmuls
out
push
aam
sub
int
leave
loopne
sub
int
scas
les
icebp
fstpl
ss
jae
rorl
popa
and
outsb
inc
insb
fistl
or
and
add
test
test
out
jecxz
in
fwait
pop
rcrl
xchg
fwait
shll
mov
int
stc
push
xor
and
jae,pt
inc
mov
inc
fldl
lock
int3
int
sbb
aaa
pop
jle
jg
notb
push
dec
mov
adc
pop
adc
or
out
mov
xor
push
iret
testl
add
cmp
and
decb
imul
imul
push
imul
push
scas
and
negb
movb
ds
push
lods
cli
push
pop
outsb
mov
clc
into
xchg
imul
incl
sarl
daa
adcl
push
mov
and
jnp
test
stos
in
out
pop
dec
sub
jnp
pop
pop
sbb
sbb
xchg
stos
dec
mov
repz
mov
sub
pop
imul
push
arpl
in
insl
mov
or
sub
sub
popf
jb
cmp
xchg
sbb
enter
inc
aas
ljmp
xchg
jecxz
fisttps
adc
ret
pop
enter
lret
jb
inc
add
jp
cmp
ss
adc
out
pushf
sub
add
push
jecxz
loopne
dec
nop
jne
pop
pop
andb
inc
sub
nop
repz
mov
fisubl
xchg
fidivrs
and
daa
dec
mov
les
sub
fs
hlt
push
sbb
pop
pop
lcall
jo
push
push
pop
dec
fwait
add
mov
arpl
and
or
dec
test
pusha
xchg
ret
adc
xorb
ljmp
stos
mov
fcom
lea
push
movsb
and
nop
inc
subl
xchg
bound
push
jnp
xor
call
dec
repz
xchg
stos
push
xchg
jmp
daa
test
xchg
in
xor
or
das
mov
jnp
ret
pop
nop
popf
and
aam
jo
fxch
ja
mov
inc
es
pop
sub
loopne
ds
inc
ror
loop
push
fwait
xor
out
pusha
mov
dec
sub
cmp
mov
jecxz
add
mov
jge,pn
mov
leave
lret
lret
idiv
dec
push
and
xchg
mov
sarl
fildll
push
aad
mov
jp
int
cmpsb
push
pop
dec
push
jmp
inc
xor
aas
in
mov
mov
pusha
mov
iret
call
mov
jnp
adc
mov
sbb
jle
inc
shl
pushf
jno
jl
ja
pop
pop
int
xor
jns
loope
pop
fucomip
mov
mov
sub
inc
or
xchg
ja
idivl
subb
sbb
lds
pop
movsl
xchg
inc
test
adc
jns
sbb
lods
adcl
test
pusha
popa
and
mov
cmp
in
fisttps
mov
outsl
adcl
xchg
pop
pop
inc
into
iret
call
or
add
or
insl
out
ret
scas
test
push
dec
fistps
cmp
adc
inc
insb
gs
test
jo
dec
dec
mov
lea
cmc
xchg
and
add
mov
mov
pop
aas
repz
pop
sti
cmp
adc
mov
push
adc
mov
fmuls
mov
xor
test
push
sti
push
and
and
cmp
add
dec
adc
and
jne
lds
mov
faddl
loop
pusha
sub
jno
pusha
leave
fsub
out
iret
mov
and
or
mov
or
movsb
inc
aam
fistps
jne
xchg
mov
jne
rcll
lock
outsl
jb
test
or
dec
dec
imul
sub
mov
or
push
jno
and
dec
mov
adc
mov
das
lcall
div
xchg
inc
xor
lret
sub
sub
das
or
sbb
imul
stc
jp
adc
pushf
cld
or
lods
jo
inc
dec
lcall
leave
mov
dec
arpl
rorb
and
mov
cli
pop
xchg
sub
int
xchg
lahf
xchg
sarb
sbb
sub
or
pop
or
leave
pop
xchg
in
push
pusha
mov
xchg
adc
in
jo
lock
fldt
out
fs
mov
fimull
outsb
loope
cmc
mov
arpl
loope
mov
cltd
shlb
sub
ds
cmp
sbb
xchg
fisttps
mov
xchg
aaa
test
ret
sbb
cmp
adc
or
mov
out
outsb
ret
sub
xor
lods
push
hlt
pop
and
mov
pop
gs
iret
add
scas
test
arpl
jb
outsb
shll
inc
shlb
mov
and
pop
rcr
jmp
dec
push
push
leave
js
into
dec
enter
or
and
push
push
fldcw
lret
jae
flds
les
sti
cmp
ljmp
out
mov
pop
push
or
out
daa
movsl
cmp
xchg
xor
cltd
add
mov
popf
cmp
lods
lock
xlat
mov
arpl
push
or
push
in
jb
imulb
movsb
sbb
push
push
mov
das
xchg
scas
xor
cmc
sahf
test
jecxz
insl
rcll
mov
push
inc
jb
add
cmp
mov
push
stos
jae
int3
ss
cs
xchg
inc
mov
or
or
xlat
inc
add
dec
xchg
dec
dec
dec
jmp
out
rorl
dec
jns
int
and
inc
rolb
cmp
outsb
xor
pop
sahf
mov
jl
cld
mov
fdivs
addb
xchg
fists
add
push
ret
in
sub
std
lds
in
mov
adc
pop
into
lock
insl
fdivl
enter
mov
loopne
add
sti
enter
hlt
fdiv
sbbl
xchg
lea
and
repnz
lret
int3
test
sbbb
push
add
cmp
test
mov
sbb
subb
and
scas
cmp
pusha
add
inc
fsubrl
push
iret
pop
push
in
push
out
ljmp
cwtl
in
test
fidivl
push
clc
popf
outsb
push
adc
int3
mov
fdivs
icebp
ret
mov
aam
mov
rclb
cmpsl
or
nop
pop
aad
inc
das
jmp
push
cmpsb
fldl
mov
mov
test
mov
popf
pop
adc
mov
aas
xchg
adc
mov
loopne
lods
lds
out
je
mov
ja
and
popa
lcall
xchg
inc
pop
aas
das
insb
inc
xor
mov
mov
mov
sub
lea
fwait
lahf
xor
inc
jp
xor
fdivl
xchg
ror
mov
stc
repz
sti
dec
ret
or
cmp
cmp
xchg
sbb
ds
iret
or
and
pushf
mov
adcl
push
popa
mov
pushf
movsb
jae
icebp
sub
movsl
filds
xor
lea
mov
mov
test
xchg
fldl
pop
adc
adc
cmp
sbb
xchg
pusha
ja
jae
adc
push
scas
test
movsb
sub
sbb
sbb
mov
mov
adc
lods
cwtl
mov
addr16
mov
pushf
cmp
fcoml
stos
int3
sub
add
fwait
jbe,pt
mov
jb
ds
icebp
mov
aaa
jge
mull
loope
in
xchg
iret
or
shl
and
or
push
xchg
cwtl
sub
push
lahf
xor
pop
pop
lret
ret
fwait
jnp
jno
push
fwait
ljmp
jno
cmpsb
pop
jb
rcrb
test
imul
mov
loop
push
lds
xchg
aam
pop
dec
pop
xchg
or
iret
xchg
popf
push
push
imulb
inc
or
xor
dec
test
adc
sbbl
sbb
adc
xchg
mov
stos
pop
aas
iret
sub
mov
add
ljmp
add
jmp
push
adc
xlat
push
loopne
jo
mov
mov
cmp
cmpsl
sub
xchg
push
sahf
stos
sarl
movzbl
sbb
jle
fcomp
pushl
push
pop
jae
adc
aad
out
xorb
ret
je
in
call
clc
push
aaa
mov
jae
clc
lods
add
outsl
dec
push
notb
div
pushf
test
fmull
hlt
push
xor
push
mulb
ds
jb
jo
push
sub
fistpll
push
clc
call
xor
push
push
mov
xor
pop
mov
push
cmp
ficomps
add
mov
push
dec
int
scas
aas
xlat
and
jg
and
out
das
test
cmp
adc
cld
cmp
fnsave
cs
or
lcall
movsb
imul
inc
jno
fidivrl
movsb
add
sbb
push
jle
mov
notl
mov
dec
lret
mov
pusha
mov
mov
insl
int3
loop
xchg
jle
pusha
push
adc
add
jns
inc
xchg
negb
pop
shlb
add
fsubl
push
notl
dec
loopne
push
cmp
les
or
push
popf
insb
cmpsb
sub
les
sub
fidivrs
lds
jg
mov
jg
fcmovnu
xor
dec
cmpsb
jae
orl
in
fistpl
inc
lret
or
jae
js
adc
pop
mov
movsb
mov
jbe
das
test
addl
cmp
movsl
push
sub
push
push
cltd
jge
lods
sbb
arpl
dec
push
xchg
sbb
pop
stos
sub
push
fs
out
loope
popa
xchg
push
push
dec
arpl
movsb
mov
push
mov
push
cli
and
jp
sbb
dec
push
sar
out
xor
aas
int3
mov
notl
mov
insb
testb
sahf
fcmovnbe
sbbl
xlat
movsb
scas
xchg
mov
idivb
sahf
addl
lock
adc
outsl
inc
mov
adcl
sbb
stos
pop
inc
shlb
jle
vunpcklps
or
fwait
mov
ss
lds
std
add
push
mov
inc
sahf
xchg
mov
mov
sbb
data16
jo
mov
lcall
ret
jmp
int3
iret
enter
mov
imul
mov
sub
mov
js
mov
cs
mov
jbe
or
stc
dec
add
dec
inc
jmp
xor
imul
int3
push
ja
out
cld
roll
cmpsl
pop
lret
dec
cltd
scas
jmp
mov
jmp
es
lahf
jg
ss
rcrb
add
cmp
sarb
popf
data16
ror
xor
cmp
rcrl
and
test
nop
jno
jecxz
adc
hlt
jmp
push
cmc
mov
ret
mov
loopne,pn
push
imul
ds
xor
int3
inc
adc
push
orb
push
les
frstor
dec
mov
mov
jmp
lahf
lret
and
push
fisubl
bswap
ret
and
fnsave
repz
adc
pop
cmp
inc
ret
cmp
pusha
arpl
stos
filds
test
fcmove
sub
ljmp
fistps
push
test
dec
cmpsb
jno
shrl
pop
push
ficomps
xchg
jno
pop
pop
fistpl
mov
push
imul
sub
in
push
adc
adcb
xchg
and
test
xchg
stc
lods
xor
pop
push
inc
xchg
pop
inc
cwtl
mov
and
push
adc
shrb
dec
rdmsr
xor
sub
jg
xor
aaa
pop
and
mov
movb
inc
sti
push
andl
insl
pop
jp
mov
pushf
add
cwtl
or
pusha
add
int3
mov
push
ret
dec
jne
mov
ret
cwtl
cli
in
fcomps
push
decl
or
xor
cmpsl
mov
sub
enter
xchg
push
xchg
jl
insb
fstl
frstor
dec
sahf
push
xchg
pop
dec
dec
jbe
jbe
mov
lock
xchg
addr16
cmp
cmc
or
outsb
stos
cmpsl
mov
out
aaa
iret
mov
dec
outsl
sbb
leave
push
push
dec
ficomps
mov
ja
push
mov
push
in
test
jl
add
jmp
lock
xchg
adc
cli
pop
fwait
xor
jae
pop
lods
mov
fdivl
jno
push
sub
rcrl
jmp
sbb
mov
repnz
adcb
sahf
push
adc
enter
jno
pushf
out
ret
xchg
aad
mov
push
outsb
mov
pusha
aam
inc
pop
fstps
aam
hlt
cs
mov
xlat
push
jno
cmpsl
inc
adc
jnp
adc
mov
and
jns
aaa
jnp
in
add
outsb
mov
sahf
movsl
pop
mov
sahf
push
adc
outsb
xor
xchg
punpckhbw
sahf
data16
jg
mov
jns
inc
pop
ja
cmp
adc
lods
sbb
gs
xor
movsl
in
mov
jg
fld
dec
pop
cmc
adc
jmp
fisubl
mov
fldt
xchg
mov
outsl
imul
cmp
pop
lods
int3
notl
inc
js
mov
lahf
mov
call
pusha
jno
sub
in
dec
lea
mov
mov
lods
repz
adc
aad
sti
mov
fmull
testb
pushf
mov
pop
jne
push
mov
pop
sbbl
movsl
sbb
pop
pop
cld
cmp
add
jbe
cmp
ret
std
lods
cmp
jne
jl
mov
daa
mov
mov
xchg
je
call
xchg
movsb
test
std
in
mov
dec
addb
sti
test
mov
mov
adc
jp
call
test
lods
inc
push
sub
iret
in
xor
inc
aas
aaa
dec
repz
insb
adc
repnz
icebp
inc
sbb
push
add
mov
add
mov
mov
test
and
or
jae
mov
mov
int3
inc
dec
mov
repnz
push
dec
shr
mov
cmpb
rol
outsb
add
pushf
adc
clc
hlt
sbb
decl
int3
jmp
or
mov
mov
inc
sbb
dec
jbe
mov
cmc
bound
or
mov
mov
shll
jne
xrelease
aam
jo
decl
outsl
and
jmp
cmp
in
mov
or
jmp
shll
mov
xchg
cmp
lods
or
fmull
gs
xlat
dec
bound
rorb
add
stos
xchg
xchg
std
mov
outsb
or
add
xchg
jo
popa
jno
inc
out
mull
aam
mov
out
cwtl
in
addr16
mov
pop
dec
cmp
mov
les
xor
mov
cld
inc
mov
mov
test
mov
inc
aam
jne
xchg
and
es
sar
pop
mov
sub
out
pop
adc
cld
cltd
mov
loope
movsl
mov
test
rcll
mov
or
divb
aam
cmc
jne
xchg
add
ljmp
hlt
push
imul
mov
push
js
in
xchg
sbb
sarl
pop
addr16
mov
xlat
mov
repnz
mov
push
popl
mov
loopne
push
fwait
jb
aam
popf
mov
scas
sub
js
xlat
dec
fwait
nop
and
mov
and
jo
ficoms
jg
add
add
jge
xchg
mov
sub
mov
mov
cmp
in
popf
test
jl
pop
clc
xchg
add
jns
jb
mov
mov
les
clc
in
mov
popf
jmp
out
xchg
sbb
cld
mov
cs
push
pushf
xchg
xchg
sub
jl
push
push
in
adc
cmpl
lahf
loop
mov
sub
test
sbb
mov
xor
push
shlb
xchg
sbb
inc
sub
test
scas
cs
jne
pop
jle
cmc
test
sti
dec
js
adc
int3
xchg
clc
fisubl
aam
inc
repz
sbb
test
in
inc
sbb
imul
jge
cmp
movsl
cmpsl
mov
mov
jnp
jb
fdivp
cld
ljmp
mov
insl
aad
pop
shr
and
jecxz
xchg
jp
arpl
imul
fists
loopne
aaa
popa
pop
and
fstpt
test
mov
adc
mov
mov
xchg
inc
adc
leave
rcll
pop
pop
sub
xchg
ljmp
js
pop
and
aas
popa
xchg
in
push
cmp
cmp
dec
out
dec
jns
pop
loopne
mov
dec
add
dec
pop
les
cmp
mov
inc
jb
xchg
loop
mov
pop
xlat
mov
mov
push
mov
xchg
pop
vsubpd
imul
loopne
iret
inc
fs
mov
sbb
cmp
lcall
xchg
xchg
les
orl
sti
dec
jbe
dec
mov
sbb
mov
cmc
push
lret
mov
xchg
repz
imul
xlat
mov
aad
out
or
mov
out
and
lcall
cmc
repnz
push
lea
hlt
test
or
ljmp
arpl
in
aas
pop
mov
and
popf
xor
cli
testb
cltd
and
xchg
pop
mov
mov
xchg
push
dec
and
inc
cld
inc
sbb
inc
icebp
outsl
cmp
sub
mov
lret
push
dec
movsb
push
cmc
movsb
fdivrl
jp
inc
sbb
arpl
sub
hlt
pop
repz
dec
addps
into
das
add
and
xchg
pop
push
cmc
test
mov
ja
add
imul
jne
test
pop
pop
scas
inc
jne
std
jge
adc
hlt
push
dec
shrb
and
adcl
aaa
or
lods
mov
clc
add
data16
jp
outsl
ja
jnp
aam
inc
hlt
pop
cmp
mov
push
add
dec
mov
pop
scas
xor
test
dec
fdivrs
std
xor
movsl
stc
jp
insb
cmpsb
inc
shlb
pop
arpl
pop
pop
push
mov
in
int
popa
pusha
cmp
bound
pushf
pop
mov
mov
mov
popa
mov
repnz
fmul
bound
das
sahf
jb
mov
call
or
cli
xor
daa
and
inc
jge
pop
hlt
jl
cmp
and
jp
mov
push
cli
idivl
sub
addr16
inc
mov
and
pushf
and
add
sbbl
push
lock
mov
push
test
leave
aam
pop
aad
lret
scas
ss
adc
pusha
dec
sub
out
inc
cmp
cmp
and
mov
push
sbbl
int3
iret
outsb
js
lock
sub
sub
pop
mov
inc
cmp
jb
fimull
pop
or
or
dec
and
mov
mov
sahf
clc
sbb
or
jnp
cmp
mov
cmp
jecxz
push
pop
or
insl
pop
mov
lcall
aam
in
dec
jae
jae
js
subl
sbb
pop
mov
es
mov
loope
mov
mov
and
shl
push
or
cmp
rolb
addr16
daa
enter
movsb
mov
xchg
int
dec
fisttpl
adc
jge
clc
xchg
xchg
aaa
xor
es
xchg
mull
arpl
lea
push
inc
mov
push
jl
sbb
adc
in
adc
push
mov
lea
dec
push
push
xchg
call
loopne
lods
fistl
xor
lods
jo
fimull
rorl
imul
jge
js
pop
sub
xchg
xor
or
xor
paddusb
sub
lods
dec
or
jl
push
push
adc
repz
inc
fwait
xor
das
xor
push
dec
dec
popf
mov
sbb
push
sahf
test
mov
mov
xorl
and
jmp
cmp
callw
insl
ds
in
fstps
mov
pop
insb
sub
sarb
mov
or
jmp
arpl
push
jae
in
lahf
or
lcall
cmp
dec
stos
filds
add
fisttps
ret
mov
jne
insb
adc
int
inc
test
and
aaa
pushf
iret
in
cli
mov
mov
aaa
cltd
dec
or
lods
movsb
dec
adcl
call
lcall
adc
or
sub
sbbl
jbe
mov
dec
mov
and
sti
and
fwait
add
mov
out
cmpsb
popa
ret
into
inc
ja
pop
jo
jmp
stos
xlat
call
stos
dec
cltd
pop
out
les
stos
data16
pop
mov
mov
mov
push
aam
or
lea
scas
dec
dec
dec
rcll
mov
jo
pusha
rorb
dec
push
sub
xchg
push
aam
sti
int3
xor
inc
ds
aaa
ficompl
test
jmp
shll
pop
cmpsl
int3
cmpsl
inc
push
xchg
cs
inc
mov
stos
loopne
xchg
adc
jmp
pop
fnstcw
pop
push
jns
jo
mov
mov
insb
push
dec
scas
jmp
or
or
imul
sub
or
gs
mov
sub
pop
stc
cs
mov
jno
jle
fnstcw
pop
scas
ja
add
movsb
mov
mov
fs
idivl
inc
pushf
inc
xchg
push
cmpsb
test
scas
das
int3
add
adc
push
xchg
xchg
jge
shr
sub
jae
sub
js
sbb
cmpb
pop
mov
lahf
jns
pop
out
add
dec
out
fisubrl
mov
aad
loope
rcrb
adc
icebp
loope
nop
stos
fs
push
movsl
jae
addb
repnz
sub
fstl
aam
pop
addl
sbb
push
out
adc
xor
push
repz
les
jno
fwait
jg
cmpsb
shll
and
sub
hlt
inc
jb
sbb
mov
or
test
sub
in
dec
add
mov
inc
pop
pop
call
cli
push
or
int
jb
gs
addr16
stos
outsl
popa
xchg
cmp
lock
lods
push
lock
imul
push
ret
shll
int
mov
add
jmp
xchg
sar
sbb
shrl
ret
cltd
shrb
push
out
pop
sub
rclb
mov
pop
adc
in
and
adcb
jno
mov
adc
push
stos
ja
mov
inc
push
subb
jg
cmpsl
aam
cmp
mov
mov
arpl
outsb
insb
fucomip
xchg
inc
imul
mov
xor
decb
pop
pop
andl
or
mov
xchg
lea
jle
add
cmpl
ss
sbb
inc
push
mov
adc
insl
sbb
loop
sahf
nop
mov
mov
jg
mov
mov
lcall
push
mov
bound
pop
dec
push
popf
jns
sbb
fld
dec
jnp,pn
add
adc
cmp
push
cmp
dec
jbe
std
xchg
or
or
scas
je
push
test
pop
jb
cmc
lods
testb
repnz
push
mov
jge
mov
sti
out
out
and
mov
and
cltd
out
repz
ds
xor
ret
add
ja
cmpsb
mov
pop
jnp
lret
in
out
sbb
loope
cmp
and
sub
jge
cltd
enter
mov
ss
out
xchg
pop
lea
jl
hlt
pop
mov
je
mov
mov
adc
sahf
aad
push
jae
sbb
lock
loop
fmul
sbb
mov
and
cwtl
jne
out
and
shll
mov
mov
mov
mov
hlt
sub
jbe
mov
and
xchg
popf
or
hlt
add
insl
jo
popf
in
or
pushf
int3
lcall
mov
or
adc
bound
mov
aam
shrb
sti
mov
lods
xchg
shlb
fisubl
in
push
adc
push
stos
test
das
stos
jbe
popa
rorl
ds
inc
pop
fistpl
push
mov
cld
out
push
bound
hlt
inc
repnz
std
jmp
xchg
push
dec
arpl
adc
sahf
incb
movsb
or
aam
xor
sub
pop
pop
lcall
jo
mov
mov
jo
das
fmuls
das
inc
xchg
xchg
addr16
mov
mov
push
pop
sub
xchg
lods
pop
sbb
cmp
fdivr
imul
mull
loop
pop
mov
aaa
int
ja
pop
jmp
and
into
lret
pop
pop
cmp
gs
fcoml
xor
sbbb
pop
jns
into
or
push
mov
out
enter
sti
sbb
sub
mov
mov
cwtl
rorl
loop
adcl
divl
lret
pop
lahf
lock
test
or
imul
das
adc
mov
add
xor
lret
xor
adc
mov
ja
pusha
lcall
pop
xchg
outsb
jg
mov
push
movsl
lea
dec
xor
out
push
pop
cmp
fwait
add
rcrl
push
mov
test
mov
ss
outsb
ret
int
cmc
cmp
and
rclb
jne
pop
cmp
test
sub
clc
pusha
add
or
xor
test
addr16
aam
jg
ds
roll
dec
mov
int3
inc
jp
ucomiss
int
ja
repz
sbb
cli
add
inc
cmp
push
test
repz
cmp
push
pop
sahf
sahf
pop
nop
xchg
jge
ds
es
jg
add
ljmp
sub
push
xchg
rol
aad
nop
mov
cmp
pop
pusha
mov
add
mov
pop
inc
jg
in
jbe
pop
jo
loopne
lock
fistpll
mov
popa
xor
push
int
je
cmpsb
in
fwait
sub
cmp
mov
push
cmc
sarl
out
sbb
sub
jno
pop
pop
jns
inc
pop
xor
xchg
push
iret
cs
call
push
dec
adc
stos
push
adc
cmpb
and
bound
pop
or
adc
jmp
cld
add
or
mov
xor
outsb
push
jmp
mov
mov
addr16
and
sub
popf
push
fsubrs
lret
testb
add
adc
outsb
movaps
mov
les
outsl
push
ljmp
jae,pn
lds
fmulp
scas
xchg
scas
mov
in
push
pop
loop
testb
sbb
sbb
call
test
into
sbb
popf
int3
jecxz
sahf
mov
clc
xlat
jno
inc
add
cmpsl
cmpsl
jns
flds
mov
xchg
pop
jnp
sbb
or
xor
cmpsb
adc
neg
ss
or
scas
stc
mov
pop
sbb
sub
pop
pop
xor
xchg
and
gs
ja
jae
mov
mov
test
out
add
arpl
xor
cmp
test
rcl
or
fcoml
out
in
fsubr
fisttps
repnz
cmpb
cld
mov
pop
sub
cmpsl
xchg
stos
xlat
scas
xchg
push
popa
or
ljmp
xor
aam
adc
xchg
sub
pop
test
int
sub
test
sbb
xorb
pop
hlt
cltd
inc
es
call
jmp
fcoms
test
sbb
adc
aad
push
test
sbb
int3
or
aam
fcmovu
or
xorps
mov
pop
pop
push
adc
add
pushf
and
xchg
jns
clc
mov
aad
mov
rorb
pop
lahf
sbb
sbb
mov
loopne
bound
jmp
jl
ret
fwait
push
push
pop
jns
cmpsl
mov
fcos
cmp
lock
lods
mov
xor
push
testb
jno
xor
lcall
dec
and
sub
test
xchg
nop
adc
nop
adc
hlt
push
xor
fs
push
inc
out
insl
or
js
mov
xor
xchg
inc
and
js
adc
xlat
push
js
int3
iret
dec
mov
xchg
jmp
push
repnz
fisubl
xchg
repnz
adc
loop
loope
mov
xchg
fisubrl
push
loop
pop
add
jbe
push
and
rcll
jge
insl
popa
mov
push
loope
dec
sbb
pop
in
lea
loopne
enter
testb
sub
cmp
mov
xchg
call
clc
push
cmp
jo
jo
or
out
mov
push
lds
jbe
subps
mov
bound
sbb
or
sub
push
popf
scas
mov
mov
imul
xor
hlt
cltd
or
out
cmp
fiaddl
out
jl
pop
jo
in
fdivs
stos
jecxz
add
xchg
cld
mov
cmp
lods
xor
out
cmp
sbb
inc
arpl
mov
lret
pop
pop
push
mov
mov
ljmp
xchg
cmc
cltd
sub
xor
jle
mov
inc
test
insb
push
or
sub
mov
sbb
ret
data16
mov
mov
pop
mov
xchg
bound
push
mov
repz
xor
ret
mov
sbb
fsubs
sub
sub
fistps
xor
pop
dec
xchg
mov
test
cltd
call
push
loope
push
mov
test
rcrl
inc
cs
push
and
outsl
rcll
lcall
ja
or
rcl
shll
cmc
xor
test
iret
sbb
sub
jg
mov
call
adc
pop
xorb
cld
fistl
xchg
mov
xor
sarl
pop
movsb
in
fadds
xorl
fbstp
sahf
adc
imul
outsl
insb
push
cmpsl
in
jp
imulb
aas
inc
mov
and
lret
push
add
add
sbb
pop
hlt
mov
dec
sbb
sbb
stc
test
scas
xchg
cmp
xor
lods
iret
ret
lahf
repz
sub
jae
mov
insb
rorl
and
cld
in
xor
or
jno
mov
mov
push
lahf
pop
jb
pop
test
jne
pop
into
jbe
lock
test
jne
xchg
mov
sub
sub
enter
xor
add
dec
dec
mov
dec
sub
call
in
pop
fimull
pop
fsub
daa
fbstp
xchg
sub
aaa
push
xor
dec
xchg
fidivrl
and
jnp
xor
jbe
sbb
les
push
mov
call
mov
xchg
icebp
stos
mov
fnstcw
stc
bound
sti
cmp
outsb
dec
loop
cwtl
dec
lock
dec
push
sbb
jle
mov
aad
push
lcall
scas
pop
push
lea
add
push
mov
add
jle
test
mov
sbb
sub
daa
sbb
and
outsl
xor
push
xchg
fidivs
dec
hlt
xchg
add
inc
outsl
xchg
inc
call
sbb
inc
mov
push
dec
pushf
jno
adc
pop
loop
lret
movsl
mov
xchg
inc
adc
movsb
ss
repz
ljmp
adc
push
sbb
pop
inc
shll
cmp
pop
je
popa
sahf
jl
sub
xor
xor
lahf
push
shll
cs
fstps
inc
fidivl
rcrl
sahf
and
fs
iret
dec
ret
push
jae
in
faddl
pop
cld
pop
popa
jecxz
xlat
stc
int
ror
pop
or
lcall
ret
lahf
into
xchg
dec
test
lods
sbb
imul
clc
bound
mov
cmp
jb
push
add
cmp
movsb
inc
fists
rcll
or
fidivrs
mov
inc
inc
dec
and
dec
mov
push
ja
mov
into
inc
mov
imul
pop
or
jno
rol
shrl
je
sub
loopne
inc
ss
outsl
lods
add
in
mov
popf
loope
and
pop
shl
js
adc
int3
or
hlt
loopne
int
push
jno
xorl
and
imul
ja
mov
jg
pop
out
pop
out
ja
mov
pop
aaa
mov
enter
das
pop
iret
icebp
dec
stc
gs
sub
xchg
mov
xchg
push
xor
and
or
lds
iret
call
dec
mov
inc
lcall
lds
dec
xor
icebp
push
mov
jne
inc
lahf
push
mov
and
cmp
test
daa
xorl
fmull
or
out
cli
movsl
xchg
add
mov
pop
ss
insl
aad
jmp
jae
lcall
out
gs
mov
adc
subb
mov
shlb
dec
jne
sarb
cmpsl
mov
sbb
mov
daa
add
mov
and
xchg
cmp
jno
mov
xchg
push
loope
mov
fwait
in
xor
and
cmp
lea
add
jmp
fs
outsl
dec
add
push
push
jbe
sti
call
add
fs
les
cmpsl
or
pop
ds
add
ds
mov
shrl
insb
lods
mov
aam
movsl
xor
fsin
add
test
and
test
sbb
mov
mov
pop
pop
and
jo
push
scas
test
movsl
xchg
and
cmp
add
mov
jb
mov
mov
out
inc
inc
clc
gs
mov
dec
cmpsb
scas
rclb
jge
dec
out
stos
xor
cmp
push
fstpt
data16
push
out
cmp
test
icebp
shlb
or
jne
and
xor
imull
out
mov
and
repnz
cld
sti
mov
sub
rclb
sub
call
mov
xchg
dec
adc
gs
adc
sub
and
mov
out
mov
inc
pop
loope
icebp
dec
lahf
or
fsubr
sub
mov
test
rol
idivl
push
mov
jmp
pop
and
dec
dec
arpl
jno
es
mov
aas
and
dec
fs
pop
lret
cmovo
or
mov
ss
pop
xor
cltd
cmpsb
movsl
jp
fcmovnu
aas
shrb
addb
xor
push
loop
xchg
push
xchg
cld
ss
mov
mov
ljmp
mov
mov
inc
test
cs
test
and
ljmp
pop
push
xor
and
hlt
add
repz
sub
xchg
hlt
ret
in
pop
adc
stc
cwtl
ficoml
dec
cmp
jmp
xchg
or
fdivrl
jmp
lcall
es
in
inc
mov
shrb
gs
repz
xlat
ljmp
inc
jp
add
mov
bnd
mov
mov
aad
mov
cld
push
dec
into
mov
sbb
cs
mov
movsb
aad
stos
add
and
jae
push
into
test
add
leave
add
mov
push
lea
popa
pop
mov
and
mov
pop
outsb
mov
sub
into
dec
mov
in
push
inc
mov
das
and
jmp
aam
fcomi
dec
mov
mov
push
push
jl
mov
lahf
mov
and
fdiv
jno
xchg
adc
jl
decb
jle
mov
das
cmp
lock
inc
mov
mov
cli
dec
cld
ret
inc
mov
dec
es
leave
jl
leave
dec
nop
sub
lcall
adc
lods
add
loopne
adc
bound
dec
and
in
push
insb
fstl
dec
sub
push
dec
gs
mov
jl
in
shrb
and
incl
cmp
adc
xchg
push
cmp
std
popf
sub
xor
negb
push
pushf
cmp
inc
addl
or
sahf
hlt
stc
jb
dec
out
aad
jnp
push
pop
mov
fucomp
into
loop
enter
les
pop
mov
inc
push
stos
cli
loop
ljmp
mov
sti
adc
stos
pop
adc
clc
bound
adc
cmp
xchg
pop
sub
dec
lea
fstl
int3
hlt
sbb
mov
outsb
add
inc
cmc
aas
insb
fwait
or
pop
fmull
pushf
xor
xchg
pop
inc
ja
scas
and
xchg
pop
xchg
push
data16
leave
outsl
ja
mov
push
push
jmp
ja
cmc
movsl
push
inc
rcr
cltd
pusha
out
mulb
add
lds
dec
aad
mov
xchg
repz
push
subl
inc
movaps
jae
test
divl
add
mov
aaa
insl
imul
mov
dec
inc
in
fidivrs
pop
loop
lahf
pusha
enter
ds
repnz
fisttps
imul
test
xlat
or
adc
add
add
mov
cmc
mov
lret
sahf
out
cmp
fld
and
jmp
insl
inc
inc
daa
sbb
xor
jmp
mov
stos
or
mov
call
jg
xchg
mov
sbb
addr16
add
xchg
sbb
dec
leave
je
les
mov
dec
lret
push
popa
adc
ret
cmc
inc
int
xor
jle
scas
and
pop
adc
cmpsl
push
testl
push
les
idivl
fnstenv
addl
jae
imull
or
cmpsl
jmp
push
repnz
dec
mov
std
aaa
cmpsb
cmp
jnp
repz
inc
inc
frstor
adc
lcall
ds
ret
repnz
bound
idiv
cmpsl
cmp
aaa
out
stos
insb
hlt
sub
and
cmp
in
nop
shrb
mov
insl
aad
stos
icebp
add
pusha
cli
gs
std
jns
or
int3
mov
mov
dec
roll
xor
sbb
repnz
and
sub
hlt
cmp
scas
push
mov
fdivs
sbb
xchg
mov
add
aas
mov
adc
push
push
lret
sbb
movsb
mov
xchg
xchg
xor
stos
xchg
cmp
pop
or
xchg
fnstenv
into
popf
cmc
sbb
int3
out
fwait
mov
add
hlt
out
movsb
idivb
and
imull
jecxz
push
jo
jl
push
adc
jge
push
clc
push
dec
inc
jnp
sub
push
in
add
shlb
fucomip
fisttpl
es
mov
aas
sub
or
jge
mov
fisubrs
cmovle
xor
into
lret
push
sub
call
movl
enter
sub
ss
into
inc
inc
lahf
dec
inc
push
ret
xor
in
lods
cmp
repnz
pop
sbb
movsb
pop
mov
inc
xor
pop
jno
xchg
push
pushf
inc
jb
mov
sbb
es
fisttpl
push
xchg
fmull
imul
cmp
scas
xor
ss
mov
stos
mov
cltd
leave
and
mov
adc
add
push
jecxz
mov
push
cmp
orl
clc
cmp
and
xchg
pop
mov
enter
test
ss
and
ja
sbb
popf
mov
jge
xchg
push
jl
addr16
dec
and
popf
ljmp
loope
mov
mov
pop
xchg
popf
mov
sub
mov
aas
adc
mov
rolb
mov
mov
fs
pusha
std
nop
in
add
cmp
xor
arpl
inc
pop
mov
inc
lds
iret
andl
insb
sbb
ss
scas
xor
divb
lods
scas
xchg
mov
dec
pushf
sahf
add
mov
fidivl
hlt
cmpsb
jno
xchg
or
mov
mov
into
cmp
or
test
cmp
out
xchg
xor
xor
sbb
cs
loopne
adc
push
jns
lcall
inc
icebp
imul
fcoml
dec
push
sub
dec
movsb
dec
sub
mov
dec
adc
xor
inc
xorl
pop
loopne
loope
xchg
xor
xor
push
ficoml
outsb
aaa
into
sub
push
cltd
fsubr
or
int3
sar
fdivs
xchg
cmpsb
mov
add
add
outsb
mov
xchg
out
int3
and
shll
shr
sbb
push
jns
mov
adc
lods
in
iret
int3
or
dec
scas
je
sub
push
int
inc
jg
xor
push
sub
cmpsl
fadds
pop
or
sub
pop
shll
fidivs
leave
and
add
nop
insb
daa
xor
add
mov
mov
or
xor
imul
xor
and
sbb
dec
lret
aam
xchg
lock
cmp
push
in
jmp
pop
sbb
jp
lahf
cmp
xchg
loopne
into
sub
stc
test
cmpsb
cmp
adc
sub
mov
mov
xchg
in
jmp
loope
mov
fsubrp
mov
pop
jb
clc
in
dec
mov
or
jle
cmp
pop
inc
xor
lods
mov
mov
test
mov
jl
std
movsl
jp
pop
sbb
je
cmc
pop
rcrb
adc
lret
data16
stc
outsb
add
ror
pop
inc
mov
push
jb
loopne
sbb
push
mov
ljmp
bnd
xor
mov
xor
rorl
ret
je
das
sbb
cmpb
jo
inc
adc
dec
push
popf
cli
imul
or
add
mov
dec
dec
jno
sbbl
xchg
addr16
aas
cld
test
divb
loope
rcll
mov
call
cmp
pusha
xchg
cld
push
mov
into
mov
js
jg
dec
nop
clc
mov
inc
xorb
sbb
add
dec
adc
mov
adc
bound
pop
das
jge
out
mov
rorb
xor
negb
arpl
mov
push
push
sub
dec
or
into
orps
push
shlb
and
jecxz
ror
nop
inc
ljmp
ja
push
fwait
add
arpl
test
scas
lds
fimuls
je
fisubrl
pop
mov
push
repnz
pusha
jne
dec
add
push
pop
addr16
leave
push
dec
pop
imul
cmpsb
push
jbe
cld
pop
out
adc
sbb
sbb
jmp
lea
sbb
rcll
inc
xlat
mov
dec
jp
or
cmp
fdivs
mov
sti
push
jp
inc
xchg
stc
aam
mov
test
cmp
aad
lds
mov
mov
xchg
jecxz
lea
cmp
cmovbe
aad
ret
pop
inc
sub
or
iret
dec
jns
gs
es
lret
ret
push
jne
and
mov
sar
inc
cmp
mov
shlb
inc
mov
movsb
in
sub
dec
mov
loop
jmp
mov
xor
inc
imul
lods
hlt
shrl
pop
inc
inc
lds
aad
pop
dec
mov
test
mov
mov
popf
xchg
mov
sbb
daa
pop
ljmp
or
mov
ds
ss
insl
mov
mov
popa
hlt
pop
pop
jl
imul
and
push
cmp
fnstenv
mov
add
and
dec
hlt
subl
ljmp
add
push
sub
add
mov
lods
fmull
mov
fcmovu
stos
xor
repnz
xchg
arpl
mov
scas
sub
shll
fs
test
lods
push
arpl
add
lock
mov
pushf
test
mov
js
xlat
les
bound
xor
roll
roll
adc
mov
lahf
stos
cld
pop
mov
sub
or
scas
jge
shll
ret
mov
loop
fsubr
pop
mov
push
cmp
mov
xlat
adc
int3
jp
sbb
mov
test
sbbl
out
out
ror
popa
stos
lea
sbb
push
dec
out
pop
outsb
and
mov
jecxz
pop
sub
jmp
pusha
or
fisubrl
adc
insl
adc
jnp
pop
scas
js
adc
mov
xchg
xor
rorb
jle
fistl
mov
outsb
or
xor
and
fs
sub
cmpsl
imul
xor
lods
int3
ret
fs
cmp
scas
js
fs
jbe
jo
push
and
sbb
sbb
mov
hlt
mov
int3
or
lahf
mov
mov
rorl
xor
test
jp
rorb
pop
adc
cmp
mov
mov
mov
xor
outsl
in
fmuls
cli
pop
or
mov
cld
and
lods
xor
test
stos
rcll
dec
adc
out
int3
daa
fidivrl
adc
xlat
in
push
inc
mov
adc
sub
pop
mov
sbb
test
jns
push
mull
das
pop
lea
adc
decl
fs
jnp
inc
ja
and
adc
jo
xchg
in
scas
and
push
push
jno
sub
cwtl
cli
dec
and
push
dec
out
adc
out
fnstenv
inc
push
inc
stc
pop
cli
xor
push
std
xchg
daa
lea
ret
roll
popa
mov
mov
inc
cmp
sub
push
mov
imul
mov
dec
push
mov
sbb
add
cwtl
sbb
cmp
ss
test
fcmovu
push
xchg
in
into
imul
or
sub
mov
mov
add
inc
or
lea
roll
mov
mov
test
xor
mov
test
xor
jns
sub
pop
xor
mov
lret
mov
loopnew
pop
ljmp
sti
clc
cmp
insb
leave
rolb
mov
add
push
dec
add
jne
inc
fcoml
fdivrs
mov
jno
inc
lods
mov
dec
jmp
scas
leave
or
or
into
mov
sub
bound
lcall
sub
stos
or
xor
mov
sub
scas
or
in
loope
and
aas
cld
mov
repz
inc
dec
mov
xlat
out
lret
cs
insl
xor
lods
sbb
scas
and
cmp
xor
mov
sbb
mov
push
adc
xor
rcrb
imul
mov
and
sbbl
cmp
test
rorl
inc
and
sbb
sub
sarb
jmp
jnp
mov
mov
jo
pusha
jg
mov
leave
push
pop
fcmovne
sarl
lret
sbb
aam
mov
in
lea
loopne
stos
movsb
stos
jmp
add
inc
pop
int
pop
jns
xor
aam
mov
sahf
gs
adc
sbb
jae
ss
je
repnz
sbb
mov
cltd
imul
push
mov
rcl
jl
out
inc
pop
cmp
cmc
in
jns
push
xor
cmp
mov
ja
jge
mov
mov
imul
fmul
outsb
inc
js
in
scas
push
mov
mov
int3
int
cmpsb
or
push
pop
repnz
lods
dec
dec
dec
pop
cmpsb
xchg
sbb
xor
or
aad
negl
rclb
jnp
push
mov
outsl
fdivrs
ficompl
jns
into
les
stos
clc
test
fidivrs
popa
lret
fadd
hlt
push
shrl
mov
loopne
fldcw
sbb
out
pushl
jne
cvttps2pi
adc
mov
leave
sbb
dec
lcall
add
icebp
ss
adc
gs
adcl
repz
inc
xor
out
sbb
jge
mov
cmp
adc
je
iret
popa
push
mov
and
out
out
fdivrs
mov
notb
cmp
aaa
arpl
daa
and
and
pop
mov
rcr
cmp
cwtl
jle
sub
sbb
jnp
lods
adc
push
outsb
or
icebp
int
jg
fxch
adc
movsb
sbbl
hlt
sahf
cs
xlat
sub
xchg
loope
pusha
or
ret
and
fsubrl
sbb
push
repz
jns
dec
sbb
push
or
fucomp
test
ss
aas
mov
icebp
xor
fsubrl
sbb
xchg
dec
fs
mov
in
dec
ret
or
paddusw
mov
adc
pop
fucomp
repnz
sti
movsb
xor
sub
add
sbb
lds
leave
xchg
mov
or
data16
jmp
xchg
xchg
cvtdq2ps
inc
inc
add
repnz
lret
aas
test
pushf
mov
add
mov
and
into
daa
in
int
jne
xchg
sarb
mov
test
test
mov
pop
fdivp
jnp
lret
ja
cmp
or
jno
je
fbld
lahf
stc
aas
enter
dec
mov
loope
cmp
push
nop
addr16
leave
ljmp
xchg
jnp
mov
bnd
push
adc
sbb
js
repz
ds
or
outsb
and
cwtl
pop
jle
mov
mov
xor
cwtl
jg
mov
pop
mov
and
flds
sub
dec
xor
dec
xor
mov
pusha
jg
mov
sahf
jns
cli
mov
xor
dec
push
mov
adc
pusha
adc
gs
xor
roll
pop
loope
loope
inc
pop
cmp
xchg
fsubl
in
imul
dec
mov
fistpl
imull
xchg
insl
inc
gs
and
dec
enter
aaa
jge
mov
mull
loop
add
jbe
out
mov
dec
aad
jo
xor
mov
adc
fsubrl
jns
pop
mov
mov
repnz
cltd
xchg
incb
add
iret
addr16
xor
push
mov
xchg
test
and
out
push
or
out
inc
or
sahf
sbb
pop
mov
es
out
push
out
lcall
inc
lods
mov
push
std
test
ja
sbb
in
js
out
fildll
mov
jnp
loopne
pop
scas
andl
jg
mov
mov
mov
jl
jno
dec
mov
fsubp
pop
call
fistl
xchg
xchg
xchg
outsl
loopne
mov
jnp
xchg
pop
dec
mov
pop
cmpb
sbb
outsl
in
call
pop
dec
pop
sahf
mov
loope
mov
in
and
repnz
push
mov
push
or
cmp
mov
out
pop
stos
mov
aas
fdivrs
or
adc
push
cmpsl
sbb
mul
test
out
fstl
pop
adc
repnz
ret
or
xor
lock
insl
fiaddl
in
rolb
mov
push
or
lock
push
imulb
jno
push
cmp
inc
inc
orl
jno
pop
loop
js
push
ret
pop
sbb
xor
lods
mov
dec
imul
jae
mov
adc
mov
stos
xchg
cltd
lea
lds
stos
add
adc
mov
and
cli
aaa
sub
jns
movsb
insb
push
xor
jb
sub
jmp
sub
stos
stc
push
inc
pop
dec
cld
xorl
mov
outsl
adc
aaa
out
insb
into
push
inc
push
enter
adc
insl
addb
loope
dec
mov
pop
mov
sti
and
xor
pop
xor
outsb
mov
sub
lret
dec
add
rcrb
inc
mov
or
xor
push
push
out
and
fsubrs
js
test
mov
aas
pop
mov
jbe
shr
cs
insl
push
shrb
stc
cmp
sub
push
or
jae
and
push
push
mov
mov
sbb
and
pop
cli
and
shl
mov
fwait
push
mov
jae
fldt
fiaddl
sub
cmp
sbb
jne
cmp
lahf
dec
cld
xor
fildl
out
inc
mov
jb
xor
or
add
lret
xor
out
add
and
or
cli
xlat
push
push
sbbb
fists
xchg
nop
popf
jns
dec
aas
mov
push
ja
movsb
outsl
cmp
mov
xchg
xchg
push
lret
inc
cwtl
xlat
and
stc
xor
or
std
test
mov
sbb
and
xchg
aad
adc
ret
sub
mov
test
pop
push
fnstcw
pop
adc
sti
andb
fsubrl
pop
xor
into
scas
adc
jae
jae
push
pop
xchg
mov
vshufpd
mov
adc
lock
jle
das
loope
mov
cltd
popa
mov
push
xor
loopne
lds
push
lea
sub
mov
mov
lods
enter
mov
xor
imul
xchg
or
sub
lea
fwait
or
or
fstl
addr16
cmp
es
jo
fadds
mov
add
bound
sbb
jmp
neg
sbb
mov
pop
test
add
sbb
xchg
inc
and
xor
stos
popa
rcrb
loopne
sbb
jg
sub
ja
mov
mov
adc
fdivl
imul
testl
js
mov
push
mov
out
push
data16
add
adc
xadd
ret
push
add
shl
shlb
out
dec
pusha
mov
mov
movsl
jo
mov
and
data16
xchg
pushf
addr16
pop
mov
cmp
aad
es
pop
cmpb
jp
lret
enter
cmp
mov
loope
imul
cltd
adc
aad
ljmp
cs
daa
mov
inc
adc
sub
jle
jnp
cs
inc
dec
and
xchg
les
xlat
mov
xorl
mov
sarb
push
mov
test
or
lds
adcb
and
outsb
mov
jo
jae
and
or
mov
and
scas
mov
adc
inc
fs
dec
das
mov
or
cmp
ja
in
xor
cs
pop
dec
sub
bound
test
test
cmp
negl
repz
clc
dec
mov
cmc
inc
adc
gs
mov
fidivrs
nop
enter
jno
inc
jg
pop
sti
mov
insb
scas
leave
js
iret
or
lret
pop
push
add
jp
enter
ja
sbb
dec
jb
cmp
and
mov
lods
fists
mov
dec
mov
or
loopne
adc
fsubl
jp
add
dec
adc
sbb
jo
out
push
sub
cmpsl
adc
pop
stos
gs
dec
sbb
jg
adc
add
wbinvd
lods
in
loopne
ret
xchg
addl
mov
mov
insb
pop
jne
xchg
xor
mov
jmp
add
in
call
pop
push
push
test
pop
mov
push
aas
mov
sbb
xchg
add
xchg
scas
push
fs
outsb
mov
xor
cmp
hlt
mov
xchg
dec
outsl
xchg
inc
loopne
dec
bound
cmp
cmp
pop
pop
shl
or
mov
push
rolb
fs
push
xor
sahf
inc
mov
add
mov
daa
in
mov
std
adc
xor
mov
scas
jbe
dec
jg
xlat
xchg
push
mov
pop
xchg
fimull
push
pop
mov
hlt
mov
iret
clc
jbe
in
test
sbb
scas
arpl
repnz
dec
cmp
orps
inc
test
xor
xorl
ret
pop
lods
cmpsb
dec
hlt
adcb
aaa
pushf
std
mov
xchg
xchg
subl
popf
pop
out
cmpsb
test
mov
mov
loopne
xor
push
and
aam
mov
mov
mov
js
ss
call
jmp
sarl
jns
dec
jge
lds
cwtl
filds
lret
je
sub
js
xchg
inc
mov
mov
inc
jb
mov
xchg
lock
negl
idiv
and
cld
stc
es
cli
mov
icebp
adc
sahf
mov
xchg
or
test
sbb
sbb
fistps
mov
push
xchg
push
dec
xor
sbbl
rcr
sbb
cmc
daa
cmc
loop
outsl
mov
sub
shlb
sbb
and
mov
and
outsb
jae
pop
sub
mov
inc
mov
push
es
ss
std
insb
pop
mov
imul
ret
push
mov
push
pop
and
pop
jae
out
cs
lds
ss
mov
lret
cli
aad
xchg
lahf
test
and
mov
repnz
jmp
push
inc
sub
xchg
dec
ds
mov
nop
xor
into
cmp
pop
test
adc
sbb
xchg
adc
loope,pn
bound
jle
inc
sub
gs
fdivrs
add
jbe
fildl
outsl
ja
iret
popf
pop
pop
or
add
shlb
mov
js
push
aas
push
sub
inc
repz
jle
idivl
sub
mov
mov
dec
test
sti
xlat
mov
out
xor
jnp
js
or
mov
mov
mov
xchg
hlt
pop
xchg
arpl
push
xchg
movl
dec
push
aad
inc
mov
jno
mov
jbe
jmp
nop
stos
xor
jg
xor
jns
dec
cld
or
mov
roll
push
lahf
inc
int
js
push
repz
movsb
jo
mov
stc
mov
stos
pop
out
push
cmpl
mov
pushw
sub
pop
sbb
jns
mov
jp
mov
movsb
pushf
jge
loop
adc
add
hlt
xorb
lret
les
mov
inc
xor
cmc
jge
cmp
mov
daa
mov
jae
mov
subb
lret
clc
nop
fstps
sbb
add
repnz
rclb
adc
push
and
popa
xor
ja
jp
aas
or
addr16
jo
fsts
inc
push
int3
fdivs
outsl
stos
jne
mov
cmp
and
xor
popf
mov
je
aad
out
fstps
leave
stos
and
imul
xor
hlt
and
inc
aas
and
lods
jno
mov
jp
push
inc
mov
sbb
ss
ret
mov
xchg
in
lea
or
aas
sbb
xor
rcl
pop
cltd
in
sbb
repnz
imul
and
cmp
lods
fstps
pop
std
out
jne
icebp
mov
jp
pop
insl
cltd
mov
adc
dec
cmpsl
insl
add
pop
jb
clc
dec
testb
rol
cmpsl
loop
mov
cmp
fldl
inc
int
pushf
mov
jae
dec
fldl
in
or
mov
jne
ret
test
mov
add
xchg
push
sbb
xchg
xor
bound
add
push
out
xor
fldt
jo
mov
or
xor
pop
push
mov
std
loopne
loop
mov
push
mov
sub
jp
sub
add
sbb
and
cs
pop
das
inc
loopne
popf
push
xchg
adcl
xor
or
xor
test
fcoms
dec
xchg
inc
jecxz
cmp
enter
adc
adc
test
popa
test
jecxz
jmp
push
pop
jae
push
rcll
xor
ljmp
mov
sti
out
push
xor
xchg
cwtl
add
cli
cltd
cmc
adc
je
xlat
icebp
sub
lock
sbb
and
inc
cmpsb
or
pop
push
aas
movsb
loope
sub
ret
lods
insb
add
movsl
mov
ds
xchg
sbb
and
loop
roll
jg
decb
arpl
pop
nop
sti
mov
je
sub
push
mov
mov
mov
xchg
cmp
xor
xchg
xchg
lsl
mov
or
imulb
push
dec
in
js
pop
add
cmpsb
and
mov
xchg
sub
pop
cs
outsl
jne
icebp
inc
mov
outsb
imul
push
sbbl
pop
mov
mov
mov
loop
aad
lods
mov
cmp
jo
push
fnstenv
jle
notl
xor
add
cmp
jns
decb
cmp
mov
mov
xor
dec
repz
movsb
pop
xor
sbb
mov
xor
and
jle
pop
pop
mov
adc
cs
arpl
shl
inc
mov
cmpsb
xor
jmp
daa
push
inc
sbb
es
gs
or
dec
mov
dec
cmp
jmp
jecxz
lret
out
repz
shll
in
push
pop
xchg
adc
data16
dec
sbb
or
jnp
sub
or
push
mov
dec
ret
sbb
sahf
push
pop
popl
fldl
aas
out
cs
xchg
xor
call
int3
test
ljmp
or
pop
jb
jle
adc
fs
outsb
hlt
leave
ljmp
das
fcomps
sbb
in
sub
daa
adc
fstl
and
mov
fs
in
xor
mov
std
out
and
inc
ret
daa
cld
call
jecxz
loope
pop
or
in
mov
lods
mov
sbb
push
shl
inc
stc
or
loop
mov
sbb
jae
mov
lahf
and
xor
arpl
pop
xchg
push
push
mov
jge
xchg
inc
fimuls
mov
outsl
add
sahf
hlt
lods
in
mov
shll
jl
mov
bound
mov
test
cmp
icebp
repz
mov
pusha
cs
xchg
adc
lret
jecxz
adc
mov
push
xor
imul
mov
enter
into
push
mov
scas
cmc
lea
jns
out
fcmove
pop
hlt
or
push
les
xchg
adc
dec
clc
pop
rcr
stos
dec
leave
bound
pop
in
test
jns
stos
or
test
cmpsl
or
addl
stc
jecxz
ret
adc
sbb
mov
pop
fisubrs
testb
pop
outsb
lret
push
jmp
bound
ljmp
aas
push
movsl
jmp
mov
roll
and
arpl
cld
dec
aam
jg
cmp
or
ss
mov
into
fimull
daa
adc
cld
mov
cmp
scas
sub
adc
scas
movsl
xor
xchg
out
vpackssdw
cmp
das
stc
add
pop
ja
push
aas
xchg
xchg
rol
fbstp
cs
stos
jge
arpl
ds
cs
or
fprem
popa
mov
add
xchg
push
jns
pop
shl
rcrb
arpl
mov
mov
mov
test
push
xchg
pop
pusha
ljmp
adc
scas
xchg
orps
sub
inc
push
repz
icebp
popa
xor
mov
test
mov
pop
outsb
lock
pop
stos
imul
add
adc
fidivs
fdivrs
push
jle
or
sub
push
insb
popf
iret
inc
dec
dec
mov
pop
push
jbe
xlat
lahf
inc
cmp
out
cmp
push
mov
or
insb
dec
cmp
sbb
xchg
xchg
popf
ss
jp
adc
rcll
dec
add
aad
dec
jecxz
in
fcomp
mov
add
cld
adc
dec
or
mov
pop
in
jb
and
pop
inc
add
dec
jecxz
push
jnp
rcl
insl
adc
into
aam
push
and
push
imul
sbb
and
pop
cld
adc
cwtl
jp
cmpb
xchg
and
repz
call
mov
lahf
add
in
loope
aaa
and
xor
or
repz
mul
shrb
push
test
enter
jnp
int3
mov
popa
pop
dec
sbb
mov
popa
cmpl
iret
in
test
sub
es
add
dec
hlt
jnp
dec
xchg
fs
add
or
dec
cs
rorb
outsb
cli
andl
outsb
push
stos
shll
xchg
cwtl
xor
xchg
or
mov
pop
and
sub
mov
mov
adc
jae
cmp
mov
mov
outsb
cmc
testl
jne
cli
in
xchg
loopne
cmpsl
pop
bound
xor
mov
mov
jnp
setl
jno
xlat
repnz
dec
mov
mov
out
lea
sub
orb
cmp
dec
sbb
cmp
mov
bnd
stos
ret
push
and
xchg
int
jle
sbb
jns
rcrl
jp
shr
fs
lret
dec
aad
pop
int
xor
test
xchg
in
into
add
jle
repnz
mov
js
mov
sbb
imull
fwait
data16
imul
lret
cmp
mov
push
stc
mov
gs
sti
imul
xchg
fldcw
aam
mov
pop
xchg
inc
sbb
in
daa
cmp
inc
orl
ss
jb
pop
fidivrl
fcmovb
js
pop
xlat
aad
xor
adc
imul
sub
xor
jne
push
mov
xor
jne
shll
add
add
or
add
jmp
cmp
mov
and
mov
and
lea
jnp
je
ret
mov
lods
cli
pop
es
mov
adc
xchg
jl
pop
test
fisubl
fnstsw
js
mov
fisttps
fs
fimuls
sub
mov
pop
into
inc
mov
cmp
std
cmp
or
popf
and
jg
xor
sbb
cmp
ret
mov
movsb
adc
and
xor
std
xor
jnp
data16
xlat
cmp
mov
and
daa
pop
mov
cld
movsl
jno
pop
fidivrl
into
cmc
xor
aas
mov
xor
call
dec
push
or
push
xchg
enter
adc
lock
fldcw
popl
cmpsb
jno
lods
cmpsb
mov
aaa
dec
pop
mov
xor
jmp
test
cmp
fildll
mov
and
dec
sub
mov
enter
icebp
add
repnz
out
jmp
jae
sbb
mov
xor
mov
jo
scas
xor
mov
mov
aad
aas
pop
outsl
test
jmp
iret
jo
pop
adc
sub
clc
dec
pusha
lea
mov
xchg
fimuls
push
jmp
add
and
push
testl
popf
sarb
adc
daa
mov
lods
add
out
jcxz
test
push
xchg
and
repnz
in
mov
rorb
cli
cmpsl
mov
int3
in
jns
push
sahf
xor
xor
aam
cmp
ret
fwait
fwait
ret
mov
mov
stos
loopne
adc
inc
xchg
rolb
pop
push
inc
ret
aam
push
cmp
xor
lds
scas
movsb
test
out
adc
int
lret
lar
dec
mov
pop
adc
sub
fsubrs
xchg
xchg
data16
push
jno
push
mov
and
jb
sahf
cld
mov
push
cmp
or
sub
fstp
and
scas
push
aad
shlb
and
dec
lods
sub
and
mov
pop
sahf
fnsave
mov
cs
out
xchg
popf
loopne
lock
jecxz
out
enter
cmp
shrl
pop
addr16
iret
add
dec
dec
fidivl
aam
out
sbb
xchg
and
out
xchg
and
mov
add
leave
jbe
js
xor
sbb
inc
movsb
in
roll
fs
into
jmp
mov
and
sub
mov
mov
out
push
add
pop
fisubrl
addr16
push
cli
ss
pusha
and
push
movsl
xchg
jnp
ljmp
lahf
jmp
int3
add
inc
jecxz
das
cmp
push
lret
fcomps
insb
dec
add
loopne
push
or
mov
mov
sbb
popf
mov
mov
lahf
xlat
out
movl
imul
jg
loop
leave
push
pop
dec
aam
adc
lahf
adc
insl
sub
int3
dec
or
out
sbb
sbb
jp
cmc
aad
jg
cmp
push
pop
sub
jp
fistpl
and
sar
aas
aas
cmp
mov
outsb
adc
test
in
rcrl
orl
sbb
lds
scas
mov
fdivrs
mov
test
push
jb
les
xchg
loope
arpl
cmp
lods
inc
mov
popf
shrl
mov
ja
pop
outsl
dec
jae
daa
in
cmp
loop
test
pop
fsubrl
lock
dec
push
inc
mov
in
push
or
add
pop
sbb
mov
xor
inc
adc
adc
inc
cmp
test
jae
xor
scas
adcb
cmp
adc
std
out
incl
xchg
add
adc
mov
icebp
dec
cli
nop
mov
enter
nop
addr16
adc
in
mov
or
xchg
jmp
adc
imull
enter
bound
setle
jnp
push
mov
cmp
stos
and
sub
pusha
movsb
loope
sbb
xchg
ror
mov
sub
loop
inc
nop
sub
xorl
cmp
ds
jg
inc
enter
and
and
dec
or
mov
call
inc
push
mov
lods
mov
push
std
mov
xchg
mov
cld
aas
loope
add
add
add
and
cli
push
pop
out
sbbb
test
popf
xor
jo
mov
jae
ljmp
pop
outsl
aam
or
lahf
out
loope
adc
inc
mov
inc
sub
push
jecxz
dec
jo
xchg
mov
xlat
inc
lds
outsb
lods
sub
xchg
cmp
in
push
xchg
jo
xchg
and
sub
xchg
loop
mov
rcrb
mov
sub
push
ljmp
inc
imul
push
dec
movsb
loop
gs
movsb
imul
inc
xchg
data16
imul
out
shrl
add
flds
mov
mov
fistpll
lret
js
jo
je
push
xor
outsl
and
aam
aas
es
push
jae
dec
add
fldcw
jl
shll
fstp
call
xchg
pop
jb
ss
push
call
pusha
cmp
xor
add
mov
fwait
pop
fcomip
int3
add
shlb
je
xchg
xchg
std
dec
out
fildll
ret
orb
mov
cli
je
or
lret
mov
lea
adcl
dec
xchg
jl
xchg
push
sbb
outsb
int
push
or
adc
fbld
xor
cld
sbb
xor
test
sahf
shll
mov
inc
js
jl
fsubr
adc
jmp
pop
test
cltd
sub
xchg
mov
cli
out
pop
aaa
subb
mov
std
mov
test
nop
push
mov
js
sub
xchg
into
adc
out
gs
mov
lods
shl
aad
mov
mov
aas
push
mov
push
jle
push
xlat
push
cmp
xor
mov
stos
add
int3
and
and
arpl
mov
xchg
in
cmpsb
and
cli
sti
jmp
test
mov
or
fwait
add
loop
shlb
jbe
lods
xchg
das
ja
lea
lea
xor
jnp
or
sub
lret
or
sbb
mov
mov
mov
fucomip
clc
stos
sub
dec
jns
scas
fisubl
add
jmp
jns
or
or
mov
jae
adc
dec
dec
xor
sbb
dec
sub
mov
add
fidivrl
mov
xchg
out
jg
stos
dec
lea
aad
fidivl
enter
addb
mov
dec
xlat
fcoml
aas
lods
add
cmp
and
loop
orl
pop
pop
jl
sbb
arpl
movb
jg
enter
test
shrl
aaa
stos
ret
and
gs
xchg
pop
xor
push
dec
pop
adc
push
jb
dec
dec
jns
sub
dec
addr16
fimull
inc
inc
rcrl
jo
das
addr16
and
mov
out
inc
out
xchg
repnz
adc
jp
in
mov
andl
imull
jl
pop
xchg
push
jne
dec
pop
sbb
push
and
push
lret
or
clc
imul
daa
pop
sub
sbb
xchg
xchg
cmpl
popf
cmpsb
out
push
xlat
cltd
pop
inc
jae
outsl
dec
jmp
xlat
int3
out
xchg
or
vmread
addr16
sub
ljmp
loop
fdivs
xor
cmp
lods
subl
mov
daa
in
cmc
fimull
xchg
sbb
sub
mov
or
in
add
mov
jb
sub
movsl
int
or
push
inc
and
xor
inc
xor
sub
mov
add
jns
cs
aaa
notl
pop
js
push
sbb
dec
add
dec
inc
fadd
shl
jno
nop
cmc
pop
aas
lds
jb
jnp
aad
push
lahf
add
mov
int
mov
fsubs
data16
ljmp
xchg
dec
aad
ss
sti
gs
pop
fsubl
add
xlat
fimull
pop
jge
pop
jbe
mov
or
inc
stos
mov
cmp
aaa
jbe
andl
int
push
negl
jl
loope
inc
dec
mov
cmc
fsubrs
jo
adc
mov
fidivl
and
xor
call
inc
std
jnp
pop
cld
ja
aam
and
pushf
das
sarl
sbb
orl
shrl
cmpl
mov
or
bound
mov
push
sbb
in
add
jmp
loope
fstpl
sub
cld
pop
push
mov
addr16
mov
mov
out
rol
xor
jb
jbe
ss
ret
mov
loope
fcmovnb
or
shll
jnp
push
pop
imul
int
mov
jbe
cli
in
lret
pusha
test
inc
xlat
test
cmp
inc
mov
push
jns
cmp
cmpsl
nop
or
pop
shl
fwait
test
cmp
xchg
mov
insl
out
mov
dec
fdivrs
inc
addr16
add
dec
mov
dec
cli
adc
test
cmc
cmpsl
cmpsb
jo
dec
mov
xchg
repz
add
lret
xor
popa
out
mov
or
pop
mov
inc
mov
inc
adc
or
push
rolb
mov
add
bound
popa
push
in
fwait
das
mov
add
adc
pop
mov
cmp
sub
push
add
pop
xor
roll
mov
push
sbb
in
mov
jp
fisubl
mov
or
call
inc
add
insl
lea
jle
lock
sub
js
mov
inc
cwtl
push
pop
mov
lret
jle
enter
jne
jne
mov
in
leave
sbb
stos
push
int
dec
xchg
dec
mov
das
xchg
adc
stos
add
inc
pop
pop
dec
and
shr
cmp
iret
lea
adc
roll
popf
pop
pop
lds
pop
test
pop
out
and
cwtl
out
decb
ret
cs
movsl
aas
push
stos
dec
sub
outsb
clc
arpl
jle
mov
jae
cmpsb
movsl
adc
subl
shlb
xor
lret
jge
insb
xchg
insl
pop
adc
adc
adc
push
mov
and
pop
cmpsl
xor
xchg
jnp
ss
xchg
faddl
std
mov
adc
scas
scas
dec
xlat
mov
adc
inc
xor
sbb
gs
int
cmpsl
lock
enter
inc
dec
inc
mov
repnz
or
xchg
mov
call
mov
bound
scas
inc
sbb
dec
icebp
loope
mov
or
gs
mov
or
mov
xlat
adc
xchg
loopne
jmp
sub
mov
call
sbb
xorl
jmp
fsubl
lcall
cmpsb
mov
mov
pop
push
pop
push
mov
jp
sbb
push
lret
pop
sarl
into
pop
into
fsub
lds
inc
std
int
pop
or
mov
pop
cmp
inc
sarl
adc
xchg
jns
data16
aas
xchg
str
mov
pop
stos
push
in
and
nop
xor
cmp
pop
test
mov
into
xchg
lret
pop
in
lret
mov
push
push
xchg
pop
push
cmc
sbb
add
rorb
and
xor
pusha
in
arpl
into
push
cmp
jns
test
daa
ret
xchg
mov
jbe
orl
in
cs
mov
or
mov
imul
popa
out
in
sub
mov
pop
imulb
pusha
push
pop
adc
cltd
movsl
mov
test
cmp
mov
mov
cmc
inc
mov
mov
mov
mov
xchg
test
xor
outsb
cltd
pop
pop
pop
xchg
mov
push
js
movsl
inc
mov
add
insl
in
xchg
jle
sahf
or
dec
add
out
inc
movsl
ret
pop
fisttpl
js
xor
sti
adc
and
cltd
inc
out
out
cli
outsb
sub
push
pushf
notb
out
sbb
leave
imul
xchg
ja
pusha
stc
inc
lock
sub
pop
test
pop
enter
cmpsb
sub
aam
mov
push
mov
xor
xlat
sub
fidivrl
or
popa
enter
cmp
xor
outsb
daa
xchg
adc
std
aad
std
lahf
xorl
dec
aaa
push
sbb
loopne
sbb
sub
mov
cmpl
lods
arpl
cmp
add
sub
inc
add
aas
jae
xchg
orl
jbe
mov
and
ret
add
es
nop
in
in
js
shl
loop
rolb
je
adc
sbb
mov
dec
dec
and
jae
xor
xor
or
stc
bound
cmp
cmpsl
imul
pop
out
aaa
hlt
loop
push
push
jecxz
xchg
insb
mov
adc
jl
lcall
xchg
jno
lcall
mov
push
push
push
push
mov
push
xor
pop
xor
inc
push
push
dec
out
and
mov
push
mov
roll
sub
xchg
adc
pop
int3
xor
decb
inc
jae
mov
nop
enter
xchg
xchg
movb
aad
and
das
nop
cmp
xlat
imul
pop
pop
popa
mov
in
sub
dec
mov
pusha
into
shlb
lock
xchg
sub
cmpb
nop
jle
xchg
je
ss
push
xor
mov
cltd
jae
push
cmp
mov
mov
push
push
jnp
add
cmc
das
pop
adc
into
fcoms
lret
push
lcall
dec
out
push
cld
mov
gs
divl
ljmp
gs
adc
sbb
movsb
adc
push
sub
sub
xlat
lock
int3
mov
xor
outsl
out
lea
jnp
shlb
cltd
push
push
in
xorb
push
movsl
xchg
mov
lret
inc
insb
movsl
fsubl
and
ljmp
outsl
insl
adc
xchg
cmp
scas
push
imul
lods
enter
jecxz
sti
pushf
push
js
je
rol
cmc
push
mov
fwait
shr
sbb
mov
jo
cmp
and
adc
ljmp
xchg
xor
pop
lock
push
lods
xor
push
mov
cmpsb
in
stos
test
outsb
int3
adc
faddl
add
push
dec
mov
in
pop
out
cmp
push
push
hlt
and
test
sub
mov
mov
popl
out
imul
ja
jl
popa
jmp
jle
cmpsl
scas
jecxz
lods
cmpsl
daa
test
or
js
aam
adc
mov
mov
push
jl
femms
push
aad
sbb
fsin
add
or
dec
dec
inc
sahf
gs
bound
out
insb
mov
xchg
push
cmp
shlb
cmp
push
mov
ret
pop
push
aaa
cmp
push
mov
mov
sarl
int3
and
pop
sti
jle
notl
std
jp
imul
jnp
lds
mov
nop
cmpsl
clc
push
mov
pop
or
addr16
mov
xorl
mov
jb
pop
cmc
popf
fadd
gs
out
mov
xor
fwait
bound
ds
cmp
and
dec
mov
jne
daa
in
adc
adc
fdivs
xlat
xchg
cmp
bound
gs
and
sub
jbe
cmp
xchg
aaa
stos
xor
pushf
inc
fldenv
cld
or
pop
cwtl
int3
jecxz
stos
jg
dec
mov
iret
cld
xchg
jmp
pop
aaa
push
arpl
add
dec
mov
fldt
mov
mul
outsb
xchg
sub
mov
adc
xor
aad
sbb
inc
xchg
loope
pop
push
stos
fsub
lods
ret
clc
ret
inc
pop
inc
push
pop
stc
jbe
xor
inc
sub
lahf
push
pop
xlat
jmp
mov
cvtps2pd
rcrb
push
push
lea
pop
push
xor
mov
hlt
xor
mov
sub
int
imul
jle,pn
xlat
sub
xlat
xchg
sahf
inc
push
movsb
lcall
mov
lahf
inc
mov
dec
inc
cmpsl
jle
cmp
rcll
pop
ljmp
cltd
leave
aam
sub
push
lds
jg
sbb
jns
or
test
ret
sub
mov
gs
mov
push
stc
in
inc
pop
adc
mov
mov
jecxz
or
dec
mov
adc
pop
loope
mov
int
jnp
cmp
repz
sub
or
dec
pop
dec
xchg
fucomi
bound
stc
jmp
sub
mov
out
jp
xchg
cmp
call
add
mov
and
out
jp
xor
clc
imul
outsl
push
mov
fiadds
bound
movsl
sbb
pop
jo
setbe
mov
subb
popf
inc
fnstcw
call
das
out
idiv
cltd
jae
jnp
js
mov
push
dec
orb
sbb
sub
dec
inc
lods
hlt
push
jl
xchg
mov
sub
ds
jae
push
fwait
mov
fucomip
out
pop
pushl
inc
leave
sub
js
dec
loopne
mov
into
sbb
mov
cmp
stc
in
push
sbb
jns
test
aad
std
xchg
jns
loopne
pop
xor
jae
mov
xlat
adc
mov
push
pop
fnstsw
or
insb
and
pop
outsb
ror
mov
or
push
mov
inc
repnz
jo
cli
pop
sub
ds
cmpsl
mov
dec
mov
add
incl
mov
sbb
mov
jbe
lcall
pusha
dec
dec
fisubs
cltd
sub
push
sti
push
imul
jne
push
decb
fsub
jbe
ret
inc
lahf
je
sub
mov
or
sbb
outsl
test
sub
clc
out
sahf
jecxz
insb
sbb
adcl
cmp
pop
in
mov
hlt
cmpb
es
sub
xlat
dec
xor
cmpsl
xor
mov
insb
pop
lea
mov
test
mov
inc
mov
loopne
jl
adc
inc
loop
sbb
dec
into
and
push
xor
inc
in
sbb
sub
int
push
xchg
lds
cmp
insl
scas
fwait
stos
xor
jg
dec
push
sub
inc
adc
push
push
cmp
mov
mov
push
aaa
ja
cmp
cld
dec
push
hlt
add
pop
fiaddl
pop
lods
cmp
sbb
cmp
xor
je
hlt
cwtl
aad
imul
or
cmc
mov
and
mov
jbe
es
dec
mov
or
fisubrl
sub
and
rcl
nop
mov
push
add
mov
sub
in
sbb
xor
popa
mov
das
js
shlb
or
mov
mov
fnstcw
sub
sbb
adc
orb
cmp
mov
adc
push
inc
ret
push
jecxz
inc
mov
or
sbb
cli
add
hlt
or
movsl
or
mov
rolb
adc
pop
cmp
inc
shr
ljmp
fisubrs
test
stos
into
mov
pusha
and
shll
pop
mov
push
fwait
repnz
add
cmp
jo
rcll
roll
adc
sbb
xor
in
mov
jns
or
inc
cwtl
pop
aam
add
fidivrl
aas
add
imul
imul
fisubrl
and
mov
leave
out
jecxz
pop
popf
mov
sub
xchg
ret
pop
or
xchg
sarb
movsl
pusha
xor
mov
iret
push
sub
dec
xlat
shlb
popl
or
and
in
inc
jl
dec
adc
or
cmp
jno
std
or
loop
loop
push
or
xchg
aas
cmp
insl
jmp
popa
mov
jne
dec
nop
fcomp
cltd
nop
cltd
loop
mov
push
mov
pop
call
repz
repnz
loope
sbb
rorb
dec
jle
aad
adc
jns
fstpl
imul
dec
cmpsl
xchg
xorps
xchg
rcrl
testl
fisubs
jne
mov
jg
fcom
mov
pop
jne
and
cmpb
jecxz
dec
push
out
mov
push
aam
push
shrb
loope
dec
dec
add
add
out
or
or
imul
inc
cmc
ficomps
fsts
xchg
divl
int3
push
and
lock
popa
shl
cmpsb
lret
fcmovbe
arpl
mov
std
mov
pop
out
mov
lahf
popa
rorl
int
cmpsl
out
int
stos
mov
enter
add
test
push
aad
xor
mov
push
inc
adc
mov
arpl
cmpsl
cmp
xor
pushf
mov
jl
adc
push
or
adc
and
cmp
shll
inc
jmp
jns
mov
mov
ja
fdivrl
ret
push
mov
xchg
mov
cltd
mov
inc
mov
scas
out
cltd
jmp
mov
sbb
and
sbb
pop
fnstcw
lock
xchg
int3
jnp
mov
push
test
ret
subl
mov
push
cwtl
icebp
aaa
ljmp
dec
sbb
in
jecxz
mov
mov
ror
sbb
inc
push
aam
call
lds
push
out
adcb
aaa
stos
xor
movsl
adc
fnsave
leave
lods
cmp
cmpsl
ljmpw
sti
clc
dec
dec
stos
xor
xor
cmpsl
push
jmp
stos
inc
adc
dec
js
mov
lret
mov
sub
add
ja
mov
lods
popa
xchg
cmp
clc
mov
lods
in
mov
inc
imul
iret
shlb
testb
into
pushf
test
insl
in
pop
std
mov
xchg
push
jns
loopne
sub
shll
stos
jae
lret
inc
or
cmpsb
pop
mov
push
pop
leave
xchg
push
lock
popf
lcall
cmp
xor
aas
cmp
xchg
mov
or
jp
cmp
xor
fildll
jne
and
mov
lcall
add
idivl
add
or
jne
jo
push
scas
xchg
imul
sbb
dec
inc
pop
hlt
ja
fsts
xchg
jmp
ds
repz
hlt
ret
pop
or
clc
mov
cmpsl
lahf
lcall
fidivrs
mov
cmp
inc
in
fdivp
push
jecxz
cmpsb
add
sub
inc
cld
push
mov
push
and
enter
add
pushf
aas
fwait
sub
or
dec
into
fcoml
xchg
ret
mov
xlat
sub
in
stc
jno
xchg
aaa
sub
pop
mov
add
rolb
clc
pop
into
pop
xor
cmpsl
sbb
push
nop
xor
inc
cli
fisubs
xchg
cmp
out
mov
adc
inc
cs
loopne
dec
lcall
ljmp
adc
js
and
dec
and
movsb
enter
ds
push
adc
mov
flds
popf
pop
mov
dec
cmp
sbb
mov
test
shll
push
dec
and
pop
sub
sub
xor
data16
andb
jae
push
jbe
pop
cltd
and
das
in
out
inc
push
inc
xchg
adc
in
cmc
xor
pop
mov
xor
jns
pop
cltd
int3
dec
xchg
pop
jge
jo
test
add
mov
mov
pop
iret
xchg
or
insb
push
andl
push
xor
clc
cmp
test
mov
ljmp
mov
bnd
jmp
push
ds
mov
repnz
xchg
cltd
imul
inc
shll
mov
pop
data16
cmp
cmp
insl
idivl
outsb
mov
scas
pop
xchg
sbb
iret
sahf
sbb
std
dec
mov
lds
imul
lret
clc
movsb
daa
pop
mov
cmp
insb
popf
xor
cmp
sub
pusha
les
add
imul
inc
pop
shrl
adc
pop
enter
fs
push
jb
pop
daa
add
push
aad
rcll
pushf
xchg
inc
mov
xchg
xorl
adc
pop
les
inc
pop
pop
idivl
loopne
xchg
ja
xchg
pop
cmp
sti
push
outsl
cmpl
add
mov
pop
loop
mov
mov
xchg
arpl
and
into
xor
add
cmp
int
sbb
int
lods
aas
pop
pop
and
sub
fidivs
and
or
sar
cmp
sbb
psubb
push
mov
adc
gs
cltd
rcrb
mov
or
iret
adc
and
rcll
sbb
fistps
std
push
das
jne
scas
frstor
sub
dec
in
psrlw
adc
clc
iret
fists
test
outsb
mov
adc
addr16
int
inc
xchg
xor
cwtl
sbb
shrl
add
xchg
cmc
lds
or
rorl
in
mov
or
xchg
fldl
mov
fadds
jmp
std
push
out
outsl
push
ss
dec
lcall
dec
cmc
mov
arpl
xor
sbb
xchg
insl
pusha
incl
lahf
cmpsl
out
movsb
test
and
push
push
loopne
lret
adcb
pop
or
insb
xchg
adc
shl
mov
out
out
pusha
or
ret
test
cmc
loope
cmp
cmp
int
test
add
and
shlb
lcall
sub
and
push
xlat
test
andl
rorl
leave
jecxz
aam
in
sub
insb
ret
sub
int3
repz
outsb
in
cmp
push
push
push
sub
fs
cltd
pop
icebp
lods
pop
inc
incb
xchg
mov
les
push
out
jp
adc
dec
and
mov
xchg
xchg
js
pop
cmp
xchg
jnp
das
idivl
pop
sahf
lock
and
and
pusha
sahf
loop
in
mov
fstps
addr16
sarl
shrl
inc
mov
and
mov
jno
pop
lret
mov
mov
mov
ljmp
jnp
mov
mov
xchg
or
sti
sarb
and
scas
adc
sub
dec
and
push
mov
scas
lds
jle
les
enter
int3
pop
dec
sarl
or
jg
daa
push
and
test
cmp
jns
aad
cli
sub
dec
mov
mov
data16
imul
or
push
enter
int3
ds
mov
test
cmp
les
fnstcw
test
repnz
pop
lods
in
imulb
into
sbb
jo
test
xor
loopne
cmp
addr16
fmull
xor
push
mov
fwait
add
fsub
or
pushw
jo
push
jle
push
cli
adc
sarb
sbb
push
pop
mov
test
xchg
aad
xor
inc
push
fnstenv
lahf
mov
mov
addr16
cltd
rcl
rorb
dec
pop
jb
xchg
ficoml
jne
out
jno
xchg
mov
sub
dec
bound
and
inc
push
xchg
pushf
aas
sbb
repz
add
divl
imul
incl
adc
popa
adc
mov
xchg
bound
sub
test
xchg
jno
and
dec
imul
jns
stc
jle
cmp
pusha
dec
xor
cmc
adc
mov
enter
mov
lret
cmp
mov
mov
jne
test
sbb
pop
scas
push
lret
sbb
add
mov
lock
in
pop
cmpsl
fwait
dec
mov
enter
or
and
cmp
pop
pusha
jle
mov
fsubrs
pop
int3
mov
add
pusha
cmp
and
xchg
jne
sarb
mov
adcl
es
stos
lock
cmp
push
movsl
ficompl
mov
adc
cmp
idivl
jne
add
cmp
ljmp
mov
push
ret
mov
aad
fs
scas
jg
xor
jns
inc
scas
cltd
pop
sbb
ret
pop
sbb
aas
jmp
popa
fistps
stc
inc
lret
mov
pop
mov
adc
mov
rclb
test
add
mov
dec
test
mov
out
movsb
fcomps
push
cmc
xor
fucompp
shrb
frstor
das
sbb
imul
xor
dec
sarl
inc
lcall
scas
jnp
inc
out
into
cld
das
xlat
mov
test
jle
xlat
rcll
sub
outsl
jg
inc
push
lea
jae
sub
aas
xchg
pop
adc
mov
ds
xchg
jno
and
mov
and
outsl
fdecstp
movsb
push
inc
pop
je
pushf
mov
push
adc
cmc
addr16
cltd
xor
add
mov
sub
pop
insl
insb
sub
outsl
imul
jle
sub
imul
xchg
and
subb
test
lods
leave
xchg
xor
pop
imul
dec
pop
fnstcw
jns
dec
mov
jp
xor
xlat
nop
xchg
enter
shrl
insb
test
jmp
pop
rolb
lea
sub
adc
mov
data16
loop
jmp
mov
lock
adc
lea
mov
pop
out
in
cs
push
pushf
mov
inc
int3
cmp
xchg
cmpsl
xlat
fisubrs
cbtw
imul
in
and
cmc
insl
jb
jmp
pop
inc
lock
mov
inc
stos
pop
sbb
inc
shlb
stc
loopne
sti
mov
pop
aad
add
cwtl
sub
cmc
cli
or
fs
jnp
mov
arpl
into
lock
cmp
mov
xor
sbb
add
stos
lahf
mov
jno
xor
push
das
push
cltd
or
fsubs
je
ret
and
in
in
pusha
cmp
sbb
mov
push
inc
lahf
lods
fsubrs
sar
and
gs
add
ljmp
loope
sbb
and
jmp
push
cmp
loop
adc
out
push
push
mov
dec
out
and
movsl
jb
mov
sbb
add
inc
jle
andl
sarb
repz
ret
fwait
push
cld
iret
dec
push
daa
jge
mov
push
mov
loopne
sahf
clc
sbb
shll
pop
lret
aad
cmp
pop
cmpsl
loop
rcll
fs
daa
jg
dec
scas
sub
lock
ja
jae
movsl
lahf
ljmp
xchg
push
mov
push
pop
in
das
and
add
cmpsb
das
lret
push
mov
push
adc
test
cld
fwait
cmp
push
rclb
push
adc
jns
rcrb
push
inc
and
add
mov
insb
mov
mov
int3
or
push
test
rcrl
xchg
outsl
mov
adc
push
subb
addl
out
push
sub
push
or
cmc
jmp
pop
gs
aam
loop
sahf
aad
dec
sub
push
adc
mov
arpl
sub
stc
paddusb
xor
cwtl
pop
pop
call
jae
jp
adc
bound
fiaddl
aaa
adc
inc
add
ss
cmpsb
testl
xorl
imul
out
repz
orl
fdivl
test
pop
mov
pop
mov
pop
in
cwtl
cmp
xchg
jge
add
bnd
lods
adc
sub
dec
dec
cmpsb
mov
mov
or
or
arpl
jno
cmp
dec
dec
inc
push
in
pop
dec
or
in
jae
mov
aaa
mov
dec
lea
xor
jle
or
sub
pop
hlt
mov
inc
das
popf
insb
pop
inc
scas
push
addb
aas
scas
shlb
stos
cli
loope
stc
outsl
in
movsl
mov
pop
jle
or
enter
mov
xchg
push
xchg
mov
adc
add
or
arpl
les
or
int
inc
cmp
arpl
fs
mov
je
pop
cmp
stc
pop
sub
pop
bndstx
popa
std
add
lock
lods
dec
adc
loope
jle
mov
imul
adc
lret
movsb
push
test
add
adc
gs
inc
jecxz
jb
mov
cmp
nop
mov
test
push
sbb
inc
push
hlt
pop
aaa
movsl
adc
jp
aad
inc
pop
sub
out
push
dec
scas
imul
out
pop
icebp
xchg
pop
xchg
and
aas
je
js
adc
inc
push
cmp
push
fdivs
or
push
lea
xchg
popf
add
sub
or
add
outsb
sbb
cmc
push
push
dec
inc
mov
arpl
cli
scas
xchg
push
das
jecxz
xchg
fildl
mull
adc
shrb
popa
scas
sbb
dec
fwait
jge
pop
dec
mov
lods
movsl
rcrl
push
dec
in
pop
or
sub
icebp
dec
cld
pop
push
testb
push
lcall
jmp
int3
add
sub
pushf
sbbb
and
not
js
imul
in
push
mov
dec
lahf
cwtl
idiv
jle
fcomip
testl
insl
jmp
mov
out
ljmp
roll
pop
jl
push
leave
pop
ja
sarb
dec
mov
cld
mov
pushf
sbb
xchg
out
inc
push
or
and
mov
or
loop
leave
cli
push
push
sub
jge
mov
fwait
cltd
cld
in
stos
pop
into
pop
cltd
adc
cli
out
pop
lea
jecxz
movsl
lret
dec
sbb
in
push
dec
into
sahf
xchg
sub
add
mov
out
je
shll
sub
dec
pop
pop
pop
negb
dec
adc
or
shlb
loope
lock
mov
jmp
fisttpll
dec
dec
lahf
bound
jge
stos
ret
cltd
pop
mov
pop
gs
inc
stos
push
jo
sbb
sub
subl
stos
xor
shlb
sti
pushf
push
ret
inc
or
or
jge
jae
push
mov
dec
jno
mov
xor
inc
xchg
test
push
dec
xlat
mov
enter
repnz
mov
sub
jns
in
mov
repz
stos
insl
adc
enter
inc
add
cmp
insb
je
jnp
sbb
cltd
pop
movsl
lret
cltd
sbb
nop
sbb
dec
cld
in
and
jo
jp
ficomps
jae
and
push
mov
mov
lods
xor
xlat
push
ds
repnz
jb
stos
inc
sbb
cmpsb
xchg
jmp
xor
loop
push
jp
cmp
mov
scas
setae
jbe
clc
sbb
iret
jl
outsl
mov
inc
ret
jo
xor
hlt
nop
dec
decl
push
into
fildl
ds
loope
mov
rcll
das
out
iret
cmp
int
push
daa
jecxz
cmp
or
inc
in
jmp
push
and
inc
add
inc
ret
xchg
cmp
fsub
in
in
xor
sub
loope
mov
imul
adc
ret
popf
lret
sar
dec
sbb
out
cs
insl
jle
rolb
cmp
pop
inc
and
pop
pop
inc
xchg
inc
fwait
pop
lds
cli
leave
sti
xchg
nop
loop
xor
and
dec
aad
xchg
sbb
dec
push
fs
std
cmpsl
lea
fs
movsl
sub
push
outsb
mov
mov
pop
pop
data16
adc
and
repz
pop
out
fimull
fsubl
xchg
test
adc
mov
stos
stc
jp
out
pop
xor
sbb
ror
adc
cld
mov
dec
insl
aad
push
je
mov
sbb
sarb
iret
jns
test
out
lea
sbb
call
test
sub
lods
cs
mov
out
jle
ret
int
xchg
inc
add
adc
stos
mov
movsb
fdivrp
inc
xchg
out
fiadds
dec
sti
pop
arpl
sahf
add
jb
test
adc
lcall
push
lods
ss
mov
mov
dec
cld
push
xor
ret
movsl
hlt
xchg
jle
out
pop
dec
and
loope
cmp
xchg
js
aad
rorb
fbld
sbbl
je
cs
jle
inc
mov
pop
lcall
shll
andl
rcrl
test
loope
push
into
jg
sbb
into
lods
mov
into
pop
pop
rcrl
push
push
in
addb
loop
pop
mov
dec
mov
add
gs
aam
sahf
adc
pop
movsb
sub
in
or
les
jecxz
pop
jnp
rol
jl
mov
xchg
jmp
test
call
mov
sub
cmp
fst
sti
scas
jle
movsb
cmc
dec
adc
dec
dec
cmpsb
dec
sub
or
call
cmpsl
jo
std
pop
dec
push
cmp
int3
or
xchg
negb
shlb
neg
subb
and
movsb
add
jo
popf
push
cltd
rorb
push
pop
mov
and
out
mov
mov
into
pushf
pop
jp
icebp
movsb
or
add
push
scas
and
xor
sbb
jns,pn
filds
imul
mov
movsb
xchg
jns
lods
je
dec
lret
ss
leave
aad
insl
jle
mov
dec
lds
inc
daa
cwtl
ret
inc
jmp
lcall
mov
mov
sbb
ja
xchg
cmpsb
test
push
in
addl
std
sti
mov
xor
sbb
mov
popl
or
mov
int
scas
ljmp
je
insb
int
imull
and
lea
loop
dec
or
mov
in
jb
js
and
xor
mov
xchg
push
xchg
jnp
inc
lcall
imul
in
adc
ret
loop
dec
jge
icebp
adc
mov
inc
out
jg
sti
adc
adc
mov
movsb
aas
pop
leave
sbb
mov
in
fldt
xlat
mov
clc
lret
cmp
stos
sbb
xchg
push
fs
es
mov
popf
loope
dec
jp
mov
pop
xor
out
xor
push
mov
decb
lret
mov
lea
xor
pop
stc
jge
loop
jo
out
xchg
les
jg
sub
fidivl
mov
cmp
or
xchg
mov
loope
xlat
cs
mov
xchg
aaa
pop
int
sub
aad
outsl
dec
add
cld
dec
ret
pop
cmp
add
into
push
js
dec
movsl
add
push
sub
sbb
pop
mov
pushf
xchg
mov
pop
sbb
push
jg
and
dec
stos
mov
mov
and
ja
mov
mov
test
adc
mov
int
cmpsb
sarl
mov
stos
cmp
js
dec
shl
mov
cmc
pop
push
mov
add
push
loopne
sub
enter
out
and
mov
lods
mov
pop
lret
push
loope
pop
fisubl
jno
mov
gs
insl
lea
adc
dec
or
xor
fidivrl
push
int
mov
xor
fsubl
push
dec
lahf
call
sti
and
pop
mov
mov
test
adc
mov
inc
xor
and
and
xchg
add
mov
sbb
push
or
in
je
mov
mov
loop
sbb
stos
push
mov
inc
dec
lods
add
sbb
movsb
imul
lret
mov
ds
dec
xor
dec
pop
add
and
sbb
in
lcall
xchg
add
leave
mov
dec
das
mov
pop
je
rcl
jmp
outsl
push
inc
sbb
sub
fidivrl
push
push
pop
les
pop
inc
cmp
rcrl
dec
sbb
clc
fidivs
pushf
mov
sbb
pushf
xchg
lea
mov
inc
mov
sbb
add
fwait
sbb
adc
and
and
rcll
dec
jne
fwait
xor
test
je
sarl
movl
adc
lock
aaa
xchg
dec
or
or
outsl
and
xor
or
sar
ja
jbe
jmp
test
dec
jg
mov
icebp
enter
and
pop
out
jb
fnstenv
repz
mov
in
xor
adc
mov
or
bound
imul
stos
and
ficompl
movb
enter
lret
sbb
ret
outsl
mov
cli
stos
inc
add
repnz
lret
dec
xchg
xor
lcall
scas
xor
movsb
xchg
inc
aad
adc
std
stos
test
nop
sbb
icebp
jg
push
aam
arpl
int
or
push
mov
lcall
scas
popa
loopne
mov
fistl
and
movsb
mov
mov
pop
mov
cli
in
dec
sbb
hlt
loopne
icebp
and
pushf
std
cmpsb
pop
add
icebp
test
add
scas
ss
ds
and
jp
bound
adc
lds
and
mov
inc
dec
xor
mov
ljmp
and
dec
outsl
xor
sub
sub
hlt
sub
push
pop
cmp
icebp
lods
or
xchg
call
outsb
daa
movsl
sub
push
sahf
cmp
test
adc
mov
nop
jp
cmp
jnp
out
pop
or
jge
inc
fiadds
scas
dec
adc
push
outsl
aam
aas
jnp
call
pushf
adc
stc
xchg
clc
enter
lods
jl
sbb
xchg
jmp
jb
insb
stc
mov
push
mov
and
mov
fcompl
imul
or
cmpsb
mov
pop
or
divl
sub
jno
jae
or
loop
sbb
mov
sub
repz
sti
add
loopne
add
negb
mov
adc
hlt
stc
stos
mov
fidivl
fidivl
inc
stc
xor
mov
les
and
mov
dec
jb
mov
xchg
xor
mov
inc
gs
push
test
addr16
cltd
das
adcb
das
fs
jne
sbbl
xor
lock
das
insb
pop
lock
loope
fidivrs
sbb
testb
loop
fsubrl
inc
lcall
hlt
mov
and
insb
sahf
inc
push
xlat
popf
or
sbb
push
popf
shlb
dec
xchg
jg
lds
mov
jge
sti
sbbb
mov
xlat
pusha
lds
xorb
cs
cmp
and
nop
add
lcall
add
push
daa
adc
sahf
sbb
gs
mov
pop
xchg
jno
fbstp
jecxz
mov
inc
out
mov
pusha
outsl
data16
mov
inc
test
mov
add
stos
ds
cmp
inc
pop
push
mov
loope
ret
push
popf
ret
cmp
ret
sub
out
mov
sahf
push
xchg
fsub
lret
stc
adc
push
cmc
add
pop
jno
and
mov
mov
sahf
aaa
cs
xor
pop
testl
jae
test
and
call
inc
lds
loop
adc
addl
pop
pop
jb
xchg
push
loope
fmulp
cmp
ss
jmp
sahf
or
xchg
lret
arpl
and
in
test
daa
mov
sbb
ficompl
mov
addr16
adc
and
and
bound
fadds
mov
cmp
add
rcll
fildl
icebp
mov
xchg
pop
gs
push
jge
fdiv
cmp
out
jp
stc
out
mov
aam
pushf
mov
jb
xchg
push
jae
into
mov
pop
pop
xchg
fcoms
xchg
inc
add
push
stc
dec
mov
icebp
fdivrl
mov
jae
cmp
dec
mov
cmp
pop
popa
adc
ret
in
mov
dec
cmp
xchg
xchg
sbb
jo
mov
mov
mov
mov
cmpb
sar
cmpsb
pop
xlat
mov
push
sub
loopne
mov
addl
fidivs
cmp
inc
aad
nop
cmpb
mov
pushf
shll
jg
ss
jg
or
notb
xor
pop
xchg
mov
sti
sub
or
or
in
daa
xchg
sahf
clc
nop
pop
test
fs
xchg
stc
adc
xlat
dec
stc
sbb
and
jp
inc
loop
es
stos
int3
ds
and
pop
pop
cmp
push
xor
pop
mov
xchg
jae
lret
xor
jl
sbb
repz
fidivrs
loope
ret
aam
fiaddl
inc
and
test
insb
aam
call
std
fcmovnu
pop
sub
mov
cmp
jbe
dec
cwtl
add
into
and
dec
repnz
mov
adc
dec
cltd
mov
inc
xchg
or
fcmove
test
dec
movsl
sbb
inc
and
jne
xchg
fstpt
movsb
gs
test
mov
leave
mov
pop
mov
mov
and
adc
icebp
outsb
aam
aam
mov
stos
lds
push
int3
icebp
sub
push
fdivrs
jecxz
sbb
add
cmp
mov
subps
sarl
inc
leave
push
pop
jecxz
insb
dec
inc
scas
repz
fwait
lods
dec
ror
mov
dec
fnstcw
or
pop
xchg
jmp
leave
testb
aaa
iret
mov
cwtl
push
push
lea
xor
insl
push
mov
mov
dec
and
xchg
into
ja
test
xchg
test
scas
lret
lds
mov
add
lea
cmpsb
rorl
pop
aad
adc
cmp
push
jle
fidivl
ljmp
data16
aad
fwait
ljmp
test
fdivr
inc
pusha
pushf
ret
pop
rolb
pop
shlb
xchg
flds
mov
dec
sbb
xchg
cmp
leave
xchg
xor
loope
xlat
popf
or
mov
leave
out
pop
and
call
ret
mov
les
lods
pusha
out
aaa
xchg
imul
mov
ror
lret
or
fstpl
outsl
pushf
inc
pusha
dec
lds
movsb
jge
and
sub
fst
add
mov
jle
aas
jge
rolb
cmpsb
jno
jne
inc
push
jp
adc
dec
imul
cmp
inc
imul
and
cld
lret
cmp
mov
int3
mov
rcrl
and
inc
imul
inc
sub
mov
mov
loope
push
sbb
jmp
sahf
gs
lea
dec
leave
push
lcall
xchg
or
icebp
test
fwait
cmp
adc
test
xchg
push
dec
mov
sbbb
cmp
jmp
ficompl
add
dec
mov
and
test
adc
push
jns
add
push
dec
pop
mov
pop
or
jno
and
sbbb
and
mov
inc
rcr
and
ds
push
mov
pop
cmpb
push
inc
inc
mov
fdivl
or
mov
repnz
mov
je
xor
stc
add
into
inc
adc
pushf
sub
sbb
outsb
loopne
out
sti
fdivrl
push
popa
cs
sub
add
mov
xchg
gs
in
test
jge
outsb
imul
adc
xlat
lods
pop
add
cmp
sbb
je
pop
addr16
pusha
aaa
xor
cmp
stos
adc
das
xchg
leave
jg
dec
lds
or
mov
fldcw
enter
or
jo
push
nop
mov
sbb
pop
xlat
test
movsb
xor
fs
lret
notb
hlt
aad
sti
push
iret
mov
xor
sbb
xorl
pop
ret
add
mov
mov
cld
in
xchg
add
inc
xchg
xchg
or
xchg
gs
mov
in
cmp
daa
stos
outsb
icebp
test
fsts
mov
inc
in
in
in
mov
ret
cmpsb
or
xlat
lcall
lock
pop
push
mov
sarb
sarb
push
jmp
dec
mov
leave
ret
ljmp
bound
and
mov
ds
rorb
jp
adc
nop
sar
repnz
cmp
cli
add
jo
inc
imul
out
shrb
add
lahf
test
movsl
inc
mov
pop
mov
or
or
lret
jne
jg
cld
out
or
xchg
sub
sbb
dec
call
push
divb
icebp
addr16
lea
daa
and
inc
pop
mov
xchg
fnsave
mov
dec
fisttps
cmp
in
sub
xor
movsb
xor
int3
les
fdivrl
jmp
jae
fs
add
into
imul
movntps
js
nop
mov
dec
fwait
xchg
aas
aam
lods
sub
dec
mov
call
lahf
sub
pushf
movsb
inc
mov
je
in
sub
push
add
test
pusha
repnz
or
out
mov
push
cmp
mov
xchg
mov
sub
pop
loop
test
iret
ret
mov
int
ret
bound
in
cwtl
fwait
add
mov
sub
gs
inc
mov
or
inc
jbe
mov
pop
mul
pusha
mov
sti
dec
mov
lods
or
ror
xlat
mov
dec
adc
xchg
loop
jbe
or
cs
add
lds
and
nop
repz
lea
inc
xchg
inc
js
ja
xchg
jmp
fs
xor
adc
mov
test
or
jns
inc
sbb
cmp
dec
pop
mov
incb
stos
jp
in
les
leave
scas
lds
in
mov
cltd
pop
fmuls
call
jnp
sub
cld
out
call
jo
stos
outsb
and
mov
outsb
int3
cmp
pop
test
icebp
in
xchg
cmpsl
ds
test
loopne
repz
sbbb
ficoml
dec
push
int
xor
push
mov
xchg
mov
cmp
and
test
push
mov
jns
lods
lock
xchg
sub
popa
outsb
les
jmp
mov
jne
lea
jg
add
fiadds
ret
lcall
adc
rclb
inc
push
out
fwait
sarl
pop
cmpsl
mov
out
es
mov
cwtl
xchg
into
inc
icebp
imul
imul
mov
and
dec
or
nop
mov
mov
pop
flds
ja
add
scas
add
jge
and
dec
jl
rcl
lret
dec
xor
fldenv
lods
xchg
outsb
xchg
mov
enter
lcallw
hlt
adc
pop
loopne
dec
mov
jbe
es
xor
sbb
mov
xchg
mov
and
mov
ss
mov
das
mov
or
mov
test
hlt
add
and
scas
pop
sar
mov
or
xchg
adc
das
into
push
pop
stos
add
lds
mov
and
add
lds
aas
xchg
cs
movb
jp
cmp
shll
xor
mov
add
icebp
cmc
push
ja
mov
xchg
andl
stos
divb
mov
movsb
sub
stos
xchg
mov
ret
sub
jle
lea
or
fnstsw
popa
push
jo
dec
shll
mov
hlt
clc
sbbb
in
pop
stos
inc
pop
lds
cli
sub
add
jl
fistl
or
cmpsb
mov
mov
pop
add
lock
test
lahf
push
xor
and
fstps
outsb
js
push
and
jbe
jmp
cmc
cld
xor
jbe
and
sub
mov
fistpll
or
ror
das
add
outsl
das
ret
mov
lods
ret
jecxz
sub
ret
lmsw
lcall
mov
aas
cmpsb
adc
sbb
and
jmp
jb
js
fdivrs
push
push
push
add
mov
and
cltd
adc
pusha
stos
xor
xor
rcrb
dec
fwait
pop
setno
pop
out
mov
jge
mov
adc
sub
leave
es
loope
clc
dec
mov
daa
daa
data16
loopne
cld
gs
jno
jb
fsubr
sub
int3
mov
jecxz
fldl
adc
xor
mov
mov
and
test
fs
decb
movsl
popf
adc
add
sbb
into
jge
imul
mov
mov
mov
cli
add
in
jbe
jns
mov
dec
sub
jb
adc
flds
xor
xchg
insb
add
jb
push
clc
lret
mov
push
mov
aam
cld
fildll
pop
pop
shll
je
cmp
push
or
enter
call
sbb
mov
test
daa
sbb
jns
mov
pop
ret
jns
leave
pusha
out
add
ds
adc
add
lods
pop
and
into
xchg
cmp
aas
lcall
in
xchg
dec
mov
pop
daa
pop
repz
pop
xor
push
insb
repz
and
dec
mov
lds
push
jecxz
ret
xor
or
add
and
in
or
inc
pusha
fsubrs
out
movsb
mov
scas
mov
rcrb
mov
cmp
bound
pop
lahf
cmp
mov
out
pop
insb
inc
xor
popa
sbb
ret
pushf
adcb
xor
cmp
daa
xchg
cli
ret
mov
dec
sub
shrb
cmp
enter
mov
dec
ljmp
cmp
shll
lock
aam
lret
and
mov
sbb
movsb
dec
xchg
psubq
xchg
sbb
xor
addl
sbb
fwait
cmp
hlt
add
or
cmp
adc
jae
clc
and
gs
and
adc
jl
push
pop
or
sbb
loop
fisttps
jl
jmp
dec
cwtl
xchg
push
push
jmp
jp
xor
int
shll
mov
into
and
cmpsl
fidivl
out
sahf
mov
and
xchg
add
stos
in
repnz
int3
or
mov
sahf
je
dec
fwait
inc
out
mov
add
rcrl
pop
stc
mov
xchg
aad
mov
rcr
les
sub
lcall
adc
mov
aad
ljmp
sbb
clc
cmpsb
xorb
fstl
out
jp
dec
inc
xchg
mov
jl
and
jl
jmp
adc
mov
mov
pop
pop
jbe
pusha
fcompp
pop
pop
xchg
add
daa
jo
or
sub
dec
repnz
loope
push
xchg
test
fwait
push
push
cmpsl
pop
sbb
mov
sarl
je
mov
movsl
jno
xchg
shrl
cmpsb
sahf
call
and
jge
or
daa
fsubs
ja
pop
enter
lret
sub
pop
xor
push
mov
or
repz
cmpsl
fdivrs
jg
jge
xchg
cmp
inc
iret
into
lea
cld
and
sbbl
scas
mov
cmp
xor
push
jno
xor
jle
mov
outsb
addb
mov
add
mov
bound
push
mov
push
loop
mov
stos
sub
je
push
push
push
cmp
shlb
mov
fimull
sub
pop
out
xor
ja
and
loopne
out
les
cmp
add
aas
pop
push
push
sub
pushf
mov
icebp
add
mov
xchg
push
inc
or
pop
sub
pop
jne
xlat
sub
test
sar
inc
mov
cmp
stc
xor
out
dec
add
lahf
xor
push
lods
mov
and
mov
pop
xchg
scas
ds
loopne
jge
jae
jno
sbb
xor
lcall
out
out
testb
xor
out
mov
lahf
pop
push
loope
ljmp
cli
ret
pop
push
fwait
dec
mov
lods
cmpsl
pusha
dec
das
fnstcw
ret
mov
std
push
loop
mov
sub
stc
xorl
int3
ljmp
xchg
inc
dec
jo
add
and
aas
inc
adc
les
mov
int3
dec
data16
mov
push
dec
popf
daa
cltd
cmp
jo
mov
push
cmpsb
or
jae
xor
in
insb
sbb
add
sbb
pop
in
out
dec
js
leave
std
add
sub
rcl
sub
sbb
add
xchg
scas
fdivr
decb
shrb
adc
fdivs
and
subl
jb
xchg
dec
imul
sbb
add
inc
fcomps
sahf
sub
les
out
mov
adc
sub
push
xchg
sahf
into
xor
inc
xchg
out
dec
pop
add
or
cmc
hlt
inc
popf
xchg
leave
xchg
rcrb
adc
xor
repz
jg
imul
inc
test
pop
jge
imul
ljmp
data16
or
jge
sbb
pusha
push
xchg
int3
push
xchg
fwait
add
mov
mov
and
or
fldln2
cld
lods
stos
aaa
and
mov
lods
arpl
inc
iret
mov
data16
ret
and
xor
outsb
sbb
jmp
in
jl
sub
cmpl
jb
adc
pop
inc
sbb
jnp
add
add
xchg
in
sbb
imul
sub
xchg
cli
inc
sub
stos
and
cltd
popf
mov
ret
movsl
push
mov
ljmp
gs
addr16
inc
push
out
lret
data16
in
in
subl
sahf
and
arpl
xor
outsl
andb
loopne
pop
push
xchg
xchg
lret
mov
repz
testl
push
push
mov
adc
das
int3
mov
shll
ljmp
out
pop
adc
shll
fcmovb
or
movl
mov
or
add
cmp
xor
fs
sub
arpl
jmp
add
into
dec
xchg
mov
pop
out
sahf
push
test
insl
jg
push
xorb
jmp
push
xchg
dec
bound
test
mov
push
push
xor
xchg
sbb
jnp
in
imul
sbb
mov
aas
push
mov
pop
mov
ds
mov
push
or
daa
cwtl
nop
and
xor
push
and
push
mov
sbb
sbb
push
sub
stos
add
mov
mov
test
add
popf
mov
inc
inc
es
jle
jnp
popa
sub
xor
mov
int
imul
arpl
jnp
xchg
clc
and
popa
cmp
push
cmpsl
push
cmp
in
jg
mov
adc
or
test
jnp
cmp
insl
popf
inc
jns
lds
pop
imul
mov
icebp
fwait
adc
xchg
lret
adc
sub
into
mov
mov
mov
fld
jo
jnp,pt
adc
xchg
and
and
sub
nop
jno
mov
or
pusha
mov
adc
jae
ffreep
daa
incb
add
xchg
aas
aam
imul
pop
mov
mov
or
dec
scas
adc
jg
and
daa
push
push
repnz
and
jp
pop
pop
sbb
leave
out
les
shrb
dec
mov
mov
push
mov
rorb
push
in
xchg
popa
mov
sub
or
addl
nop
cmp
xchg
call
push
movsb
call
add
xchg
enter
fldt
int3
mov
sets
in
inc
lods
and
data16
andl
mov
pusha
xor
lods
push
mov
setp
int3
mov
lods
cmp
ficomps
je
outsb
cmp
inc
adc
std
xchg
inc
ret
bound
fcoml
stc
xor
scas
jp
fnstsw
xor
rcrl
add
jno
mov
push
fcmovnbe
jl
lcall
pop
and
ret
xchg
stc
jne
in
cld
lods
fisttpl
and
cmpsl
in
jl
loop
push
push
and
xor
call
and
and
mov
sub
cmp
test
int
out
insl
jecxz
inc
sub
cmp
rcr
dec
push
rcrb
je
enter
aas
iret
inc
and
outsb
cmp
and
dec
sbb
pop
jns
pop
and
fdivl
shrl
insl
fdivrl
jle
xor
les
mov
ja
mov
jmp
je
subl
sbb
in
adc
dec
popa
push
add
imul
fcomps
ficoms
jge
lods
xchg
popf
adc
sar
pop
cmpsb
xchg
lea
xchg
repnz
sub
jns
fsts
cltd
int
icebp
je
mov
xchg
add
cmp
sub
lds
mov
adc
stos
cmpsb
adc
mov
mov
cmp
add
cmp
aam
xor
aad
mov
and
popf
cmp
or
lods
pop
outsb
sub
loop
xor
push
cmp
jmp
inc
add
subb
in
sbb
insb
sbb
or
in
loope
fld1
xchg
subb
jbe
dec
and
sbb
lret
or
add
shll
and
fs
inc
pusha
jae
and
xorl
cmpsl
ljmp
mov
adc
fsubrs
inc
jmp
adc
std
mov
add
adc
adc
mov
in
jae
push
pop
js
in
xor
cmp
call
ja
adc
add
cltd
jle
jns
jg
xorb
cld
add
pop
data16
fists
push
sahf
dec
and
psllq
aaa
xor
pop
xlat
jecxz
shlb
xchg
outsb
in
aaa
pop
fisubrl
aad
sbb
add
scas
xorb
shll
dec
out
lea
xor
cwtl
jo
add
sub
lods
mov
nop
mov
fstl
inc
cs
jo
pop
sbb
insb
das
pop
fiadds
xchg
imul
adc
push
lock
stc
ja
inc
dec
dec
outsb
add
out
or
mov
aad
xchg
xor
popa
std
or
jno
pop
faddl
and
xchg
push
sti
push
out
repnz
dec
popa
sahf
lret
cwtl
testb
cs
fnstsw
cmp
mov
pop
mov
xor
xchg
repz
xchg
xor
and
inc
sahf
mov
push
pop
fwait
sbb
and
cld
out
hlt
test
add
dec
pop
pop
lahf
xchg
push
add
sbb
popf
mov
adc
inc
int3
shl
enter
imul
enter
xchg
sub
scas
addr16
mov
int3
add
jo
loop,pt
lret
push
fucomi
cli
jmp
leave
lods
out
cmp
cmp
hlt
jl
adc
pop
stos
or
aam
pop
xchg
stc
ror
and
pop
sbb
pop
and
push
fcoms
fmuls
push
cmpsl
movsb
les
pop
loope
dec
xchg
xor
imul
testb
and
push
adc
lea
xor
and
movsb
cli
push
jg
sbb
jo
jg
jmp
mov
ds
adc
aam
arpl
pop
mov
fcmovu
loop
pop
dec
cmp
pop
add
inc
test
sti
sub
mov
xchg
mov
jae
in
cli
stos
inc
jle
mov
bound
pop
mov
mov
pop
lods
add
mov
dec
stc
int3
mov
xor
int3
test
jmp
jp
cmc
or
mov
cmpl
xor
add
in
mov
pop
fcoms
xor
sar
pushl
addr16
int
iret
loope
jb
xchg
repz
dec
in
mov
rorl
cltd
aaa
mov
xlat
lods
je
dec
or
mov
fildll
pop
int
lret
sbb
movsl
add
arpl
mov
jge
jg
imul
les
jecxz
fdivs
lods
mov
or
out
mov
add
adc
push
mov
add
aam
xchg
lahf
push
and
jo
aad
out
aad
lea
adc
and
add
or
sub
cmpsl
push
call
ss
das
mov
lods
insb
jne
out
popa
sub
jne
jns
aam
mov
push
and
jecxz
pop
je
jae
mov
data16
insl
sub
mov
and
lea
test
fs
pop
mov
test
popa
shl
cmp
add
fisubrl
xor
fxtract
jg
push
repz
bound
pop
cmp
sbb
rcl
or
xor
es
sub
and
cmp
mov
cmp
push
xchg
test
rcrb
pop
pop
loopne
cmp
or
add
std
outsb
sub
test
dec
loope
hlt
scas
push
xchg
sub
push
test
je
cmpsl
addr16
sub
fidivrs
cs
ds
stos
inc
jae
cmp
lahf
mov
data16
mov
in
add
dec
xor
into
loop
fs
stos
outsl
mov
push
int
dec
stos
ss
and
jecxz
jle
sub
sub
inc
lods
mov
push
dec
dec
add
jmp
insb
addr16
das
imul
inc
daa
adc
jle
mov
jnp
dec
xchg
pop
mov
aaa
outsl
lret
xor
ds
mov
inc
jbe
add
sub
mov
pusha
or
mov
push
mov
dec
xor
jnp
mov
pop
lds
loope
js
mov
push
leave
leave
inc
cmp
pop
mov
sti
int
ja
push
dec
push
jmp
xchg
daa
inc
js
cmpsb
pop
jecxz
mov
add
imul
adc
xor
xchg
lcall
enter
jns
inc
scas
in
test
add
fistpl
rol
mov
int
inc
sub
std
mov
dec
rol
jnp
push
stc
cmp
xlat
out
popf
cltd
pop
inc
lods
outsl
flds
lret
add
dec
and
cltd
pop
jg
dec
jg
fists
cmp
in
push
push
add
call
imul
mov
aam
cltd
mov
push
loop
mov
shrb
mov
inc
mov
push
mov
xchg
jnp
xchg
and
xchg
xchg
xchg
xchg
jo
js
sub
fstpt
enter
or
popf
loope
mov
pusha
mov
pop
rep
andb
add
pop
shll
jg
int
jno
cmp
nop
out
adc
push
xor
xor
inc
aaa
imul
repnz
push
push
decb
jne
test
push
cmp
jb
sbb
sbb
jp
fwait
ss
dec
ficompl
dec
rolb
ret
or
dec
outsl
flds
xchg
in
push
scas
test
repz
mov
mov
pop
adc
or
scas
jl
jl
inc
lcall
stos
out
pop
cld
cli
push
scas
sub
cltd
inc
fadd
add
lret
fcoms
xor
adc
inc
xchg
adc
insl
mov
dec
inc
hlt
sbb
mov
int
fisttpl
inc
push
adc
neg
dec
push
mov
cmc
sbb
push
jecxz
xchg
stos
jge
add
bound
imul
scas
pushf
dec
add
mov
jg
and
jle
loope
pop
std
fisubrl
imul
int
in
dec
sbb
xor
vpunpcklbw
add
dec
pop
xor
scas
jnp
aas
pushf
retw
aas
adcb
lods
hlt
add
addb
sub
jbe
mov
xchg
xchg
aaa
and
in
and
cmp
aaa
ja
cwtl
jb
enter
mov
cld
mull
push
mov
sbb
sarl
popa
lds
pop
or
mov
inc
icebp
pop
sbb
cwtl
out
cli
js
faddl
jmp
inc
psrad
xchg
jp
lahf
enter
add
pop
nop
addr16
xchg
dec
push
scas
ja
lods
push
iret
sub
pop
lahf
daa
mov
out
or
or
add
pop
fneni(8087
addr16
or
out
iret
push
and
xlat
jl
push
and
gs
push
mov
popa
fsubrs
in
inc
push
stos
popa
mov
push
subl
fsts
xor
dec
test
cmpsl
and
mov
jge
mov
fists
mov
and
lods
sbb
cmp
mov
or
sti
cld
fnsave
shl
xchg
stc
mov
inc
or
push
aam
lock
in
stos
xchg
pop
pop
aas
pop
mov
pop
lret
das
sbb
or
clc
mov
inc
outsb
mov
cmp
inc
mov
cmp
pop
inc
mov
pop
mov
lret
in
test
bnd
xor
mov
cs
mov
xchg
mov
mov
mov
cmp
enter
out
mov
jno
push
or
jae
rcrl
callw
imul
into
mov
push
shll
ds
aas
pop
pop
shr
rcl
jne
dec
sbb
dec
lods
adc
cmp
jecxz
insl
dec
inc
or
sbb
das
in
xchg
push
push
aas
push
call
loop
lods
pop
or
pop
rcrl
ret
jnp
mov
ljmp
cmc
pop
push
ret
xorb
iret
mov
aam
inc
or
repz
test
inc
pusha
fwait
xchg
in
jecxz
lcall
cmp
pop
mov
repnz
dec
out
es
mov
sbb
icebp
xchg
jb
jmp
or
lock
push
aas
add
addr16
fs
cmp
sbb
fadd
add
mov
add
xchg
adc
insl
mov
shlb
add
pop
xor
flds
pop
push
cmpsl
mov
dec
das
and
cmp
jne
push
ja
sbb
inc
pop
stos
adc
xchg
cmpxchg
stos
sbb
test
xchg
add
xor
pop
inc
lods
cmp
add
push
sub
lcall
push
xlat
inc
cmpb
inc
xlat
push
dec
lods
jno
loope
lock
ficomps
mov
in
testb
jecxz
dec
das
add
and
into
lcall
pop
xor
jbe
int
xchg
ret
add
or
icebp
mov
inc
shl
xchg
inc
je
jae
mov
add
jmp
shll
sbb
mov
int
out
adc
adc
mov
xor
loope
lahf
in
jbe
push
mov
sub
inc
aas
aas
data16
jns
inc
aas
mov
push
jbe
mov
inc
cmp
ljmp
pop
test
fstpl
sbb
xchg
xor
inc
or
lcall
xchg
pop
sbbb
enter
sti
cmp
outsl
mov
test
bound
insb
cli
sbb
aaa
ret
test
fidivl
int
sbb
xchg
outsb
loop
loope
cmpsb
cmp
shr
out
adc
ljmp
or
addl
fnstenv
pop
test
das
add
out
ss
mov
jne
popl
push
lea
sahf
cltd
popa
test
mov
cld
or
fnstsw
aaa
fidivs
lret
sub
push
in
dec
into
mov
push
mov
ds
inc
add
divb
mov
or
int3
xchg
pop
mov
std
dec
push
lods
pushl
movsl
mov
fidivrs
inc
adc
pop
icebp
arpl
sbb
lods
cmpsb
push
adc
lea
jb
sahf
xor
das
in
dec
data16
rclb
out
hlt
icebp
imul
sbbb
pop
adc
lods
xchg
push
dec
insl
psrlw
dec
adc
and
in
or
imul
cmpl
call
jno
push
mov
fs
loop
lahf
enter
or
jo
sbb
test
arpl
adc
lods
mov
xlat
add
add
rorb
mov
mov
inc
mov
fimuls
sbb
xchg
out
iret
jle
jae
xorl
sbb
into
cmp
dec
inc
push
mov
repz
adc
cld
xor
cld
cmc
sub
lea
addl
insb
add
mov
mov
insl
mov
cltd
xor
push
test
and
add
lods
out
rcrl
imul
mov
dec
inc
push
xchg
sbb
jb
rep
xorb
mov
or
insb
mov
pop
lret
pushf
cmp
lock
xlat
push
jb
push
xor
cmp
mov
xor
dec
dec
push
lret
push
aaa
jge
rorl
fldl2t
iret
pop
leave
push
insb
lret
fdivl
xorl
dec
pop
roll
std
pop
mov
xor
insl
mov
inc
jmp
lods
mov
cli
daa
out
jle
lds
popf
inc
add
les
mov
mov
mov
in
mov
fstl
add
loope
sti
mov
sub
xor
movsl
sbb
inc
daa
imul
imul
cmp
jae
pandn
xchg
push
xchg
or
and
mov
iret
out
je
mov
and
jp
ja
or
mov
xchg
aam
les
fwait
push
jo
mov
push
inc
dec
cmp
sahf
rorb
movsl
test
ljmp
mov
roll
imul
add
imul
xchg
sbb
push
jno
cltd
shlb
arpl
cmp
hlt
dec
outsl
outsb
jo
mulb
mov
sub
clc
shlb
or
rcrb
xchg
mov
mov
mov
sub
out
xchg
sub
or
sub
mov
lahf
xor
aad
adc
jmp
sti
ret
cs
dec
mov
cmpsl
mov
cmpsb
inc
push
mov
ljmp
cmp
adc
push
sbb
xlat
lret
stos
loope
adc
sti
jge
cmp
je
imul
xchg
sbb
stos
inc
fldl
scas
and
adc
stc
movl
pop
repz
add
dec
enter
xchg
inc
lods
jnp
ror
jg
pop
or
insb
add
loop
jmp
out
and
pop
mov
sbb
cmp
pop
rcrb
ljmp
aaa
cld
lock
lock
mov
sbb
or
add
fwait
cwtl
ja
add
dec
repnz
bound
xchg
jmp
cmp
in
jl
pushf
fs
push
fdivr
mov
adc
shr
mov
mov
add
fsts
repnz
enter
pop
repnz
dec
les
fucomp
lock
stc
sbb
sub
add
adc
repz
jmp
fidivrs
xor
loopne
add
push
pop
test
mov
sbb
xchg
cmp
gs
inc
or
int
push
push
cmp
lret
shl
insb
subl
sar
mov
lcall
popa
and
and
add
xor
dec
xchg
arpl
jp
push
adc
std
cmc
repz
fcomip
imul
repnz
les
mov
jge
pushf
mov
xlat
mov
mov
or
out
sbb
mov
movsb
xor
add
jmp
pop
loopne
sub
loopne
push
jmp
idiv
repnz
aad
inc
movsl
cmpsb
mov
push
lds
ret
mov
outsl
enter
pop
pop
jne
fisttpl
mov
fistl
mov
mov
dec
xchg
xor
pop
repnz
jmp
jbe
push
dec
repz
lret
out
je
add
mov
lea
jle
or
fadds
and
js
pop
cmp
lods
adc
mov
inc
cs
sbb
sub
fidivs
pop
xchg
jle
adc
mov
mov
mov
dec
fwait
mov
jae
lods
pusha
and
out
popf
andb
inc
popf
mov
push
es
mov
idivl
jo
insb
mov
insb
xlat
aam
lret
stc
inc
add
dec
and
adcl
jnp
lock
jmp
dec
xor
xchg
push
hlt
jle
inc
outsl
lods
mov
fisubrs
cmp
xor
inc
sbb
pop
mov
sub
filds
pop
sub
pop
mov
add
dec
xor
leave
xor
aam
inc
pusha
daa
test
ljmp
pop
dec
jge
dec
pop
fwait
ret
pop
leave
int
rcrb
pushf
cmp
mov
fisttps
pushf
inc
lods
push
pusha
push
mov
push
mov
fs
add
push
fildll
add
dec
into
mov
sbb
mov
jnp
xchg
loope
jg
stos
cltd
insl
mov
mov
push
xchg
icebp
xchg
jnp
pusha
in
ljmp
mov
lock
lea
lahf
adc
je
sub
cmp
jmp
sbb
ja
std
push
ficoml
mov
jge
mov
hlt
cmp
add
popa
or
fmull
outsl
into
sbb
js
sahf
push
sub
adc
add
lret
repz
iret
stos
rcrb
mov
push
sbb
and
mov
clc
xchg
push
cli
xchg
in
in
mov
push
mov
sub
movsl
aaa
mov
arpl
mov
mov
xor
test
loope
movsl
pop
sub
lahf
daa
jge
mov
fdivs
outsl
aaa
cmpsl
sub
rcl
sbb
popf
add
mov
cmp
mov
lods
les
clc
cmpsl
lds
cld
icebp
cmc
cwtl
test
and
pop
frstor
into
xchg
dec
arpl
les
scas
aad
push
data16
outsl
stc
hlt
rcll
pop
push
out
insb
shl
mov
fdivrl
sbb
out
sti
sub
pop
push
and
addb
and
cmp
loope
lea
lock
pop
fs
add
push
pop
lahf
paddusb
push
js
and
sub
imull
popa
adc
movsb
xor
or
mov
cmp
adc
xchg
xchg
std
lods
arpl
scas
xchg
je
mov
sbb
mov
adc
cli
add
loope
pusha
dec
dec
mov
les
xchg
xchg
test
xor
add
adc
cmc
aas
lods
pop
les
xor
push
mov
call
mov
filds
imul
xor
add
loope
mov
lock
cmpb
cwtl
in
notl
sbb
nop
jle
out
fisubl
cmp
adc
push
filds
push
or
ret
mov
jl
pop
mov
fldenv
int3
cmp
roll
xor
rol
loopne
and
sbb
out
mov
dec
inc
and
cli
mov
sub
js
leave
xchg
mov
pop
fstpt
mov
pushl
xchg
roll
jecxz
cwtl
sahf
add
ficoms
sbb
and
cmp
mov
jle
cmp
mov
mov
lea
and
xor
sub
movaps
cwtl
sbb
push
fucomi
push
xor
xor
cwtl
jl
sub
enter
mov
imul
fnstsw
divl
xor
pop
in
sbb
fdivrl
xchg
push
pop
mov
cmp
cmc
nop
pop
xlat
cmp
xor
adc
into
test
dec
icebp
frstor
cmp
into
mov
stos
faddl
mov
inc
push
insl
mov
daa
scas
aad
stos
mov
or
add
xchg
ret
divb
mov
jp
ret
or
sti
mov
adc
inc
mov
adc
pop
movzbl
insl
aaa
daa
insb
and
push
into
mov
mov
nop
test
leave
sbb
lahf
sub
jmp
aam
mov
outsl
in
ret
mov
out
xlat
pop
mov
sbb
repnz
inc
lcall
mov
pop
mov
in
or
loope
cmp
imull
inc
add
mov
das
add
pop
mov
and
rcrb
in
es
and
outsb
bound
jbe
lea
mov
xchg
repz
shlb
rcl
jo
mov
add
xchg
test
mov
xchg
lret
jns
push
jge
stos
adc
pop
imul
lret
je
sub
pop
out
mov
pushf
xchg
adc
aad
cmp
rcll
jl
mov
sbb
add
sub
lods
movsb
idivb
test
jo
in
cli
testl
or
sub
jb
and
pusha
xchg
daa
in
fldt
gs
mov
jno
jo
sbb
inc
xor
xchg
adc
pop
cmp
xchg
std
sbb
jne
inc
inc
pop
add
mov
jno
push
test
push
das
stc
imulb
adc
xor
cli
sbb
mov
jbe
andb
jb
sahf
jmp
mov
hlt
push
fdivl
nop
xor
sbb
je
popf
jge
or
sbb
adc
adc
and
insb
adc
jo
in
pop
rcll
test
je
mov
stc
push
shl
push
mov
mov
repz
fbstp
dec
adc
out
xor
fidivrl
xchg
add
rclb
ficomps
rolb
lods
push
imulb
sub
movsl
lcall
lods
mov
push
jne
jnp
jb
cmp
stos
cs
lret
outsl
push
popf
out
test
pop
addb
addr16
ret
cmpsl
jno
mov
out
sahf
lea
dec
fistps
jo
push
stc
xchg
xchg
mov
push
scas
dec
jecxz
outsb
aas
in
fistpll
sbb
mov
and
idiv
fldt
mov
sahf
or
test
inc
subl
leave
adc
dec
leave
ja
icebp
xlat
outsl
inc
cmp
cs
xchg
or
test
mov
fs
popf
jmp
adc
ficomps
push
push
add
clc
mov
cli
out
cmp
mov
and
outsl
sub
adc
aaa
xchg
xor
mov
adc
dec
push
inc
lods
cli
cs
dec
stos
jne
ret
int3
jecxz
in
mov
sub
mov
add
cwtl
and
mov
xchg
xor
dec
jmp
movsb
dec
rcr
out
cmpsl
clc
dec
sbb
shrl
movsb
cmpb
mov
and
and
dec
mov
lods
imul
dec
repz
ret
repnz
call
xor
or
jecxz
cli
movsl
xchg
jnp
sub
repz
mov
mov
jecxz
lahf
mov
mov
sbb
inc
lock
sub
fiadds
sbb
push
inc
jae
addr16
inc
or
jne
jl
cmp
lods
mov
adc
movsl
pop
clc
hlt
xchg
lahf
adc
ljmp
and
repnz
sbb
fs
icebp
jl
mov
fwait
xor
sar
cld
out
xor
mov
jne
js
stos
aad
je
or
test
in
dec
lret
jns
ret
dec
test
mov
sti
test
adc
notl
sub
movsl
call
scas
lock
sbb
and
sbb
inc
inc
push
cmp
add
push
imul
ret
movsb
xor
dec
push
in
dec
inc
mov
inc
pop
jge
int
fwait
lret
mov
jecxz
inc
in
cmpl
mov
dec
dec
cmc
arpl
iret
push
aas
jle
or
rcrl
rorl
jne
data16
mov
fistps
enter
out
aaa
mov
aas
std
jl
ret
in
add
lods
scas
sub
fcom
xchg
insb
and
inc
imul
cmpsb
scas
rcrb
sbb
cmp
add
jecxz
adc
inc
outsb
int3
test
enter
inc
cmc
or
scas
pushf
xchg
inc
mov
insb
jno
push
cs
adc
mov
pop
fisubl
cmp
dec
push
pop
cltd
inc
sbb
xlat
scas
mov
sub
cmp
je
sbb
dec
xchg
sub
pop
jle
xor
pop
sbb
inc
cmp
inc
xlat
add
sub
call
mov
mov
fnstcw
sbb
or
mov
add
jle,pt
inc
xchg
pushf
pop
xor
inc
lock
adc
xor
inc
imul
mov
lds
insb
or
xchg
mov
je
or
adc
push
inc
in
pop
or
xchg
sub
adc
mov
mov
shrl
or
sub
xchg
jnp
jns
mov
ljmp
and
xchg
sbb
pushf
mov
loope
sbb
rcll
das
jae
fbld
sub
sbb
xchg
out
fs
stos
mov
int3
jb
aam
aas
insb
js
mov
pop
subb
cmpsb
ret
and
sti
pause
xor
push
pop
jmp
movb
fcoms
loope
push
add
popf
sbb
cmp
pop
jne
jnp
mov
cmc
jecxz
and
scas
ret
das
mov
sbb
cs
scas
adc
scas
xchg
cwtl
adc
mov
add
fidivrs
pop
pop
mov
pop
xor
sub
insb
adc
inc
lahf
jmp
rcrl
decl
push
idivb
push
int3
push
xor
jno
jl
cwtl
xor
cld
fcomi
push
ss
cmp
lret
mov
int
es
roll
sub
fidivrs
cmp
je
jne
dec
imull
in
pop
jecxz
sbb
lret
mov
mov
repz
add
jge
ret
shlb
outsl
cmc
xchg
lret
mov
add
in
call
ret
int3
in
pop
sti
and
cmpsl
addr16
jl
fildl
lock
sbb
mov
aas
jg
xorl
cs
pop
dec
ljmp
pop
fcomps
in
and
push
jae
xor
add
test
mov
xchg
das
in
cs
in
mov
movsb
pushf
icebp
jne
daa
jbe
mov
jmp
push
jmp
adc
test
or
mov
sub
pusha
dec
outsl
fmulp
mov
mov
and
inc
push
cmc
orb
out
jle
cmpsl
fbld
adc
int
movsl
lds
cli
mov
mov
lea
push
sub
xchg
jb
mov
cltd
loope
std
movsl
mov
mov
scas
pushw
lret
jnp
out
push
mov
sti
inc
pop
fists
cltd
outsb
and
push
movsb
mov
adcl
inc
imul
mov
push
cwtl
mov
jno
push
xor
inc
ret
rol
xor
addr16
cmc
pop
dec
lret
mov
mov
or
mov
pushf
lock
adc
mov
gs
dec
js
imul
fwait
pop
out
les
stos
loopne
fstpt
ljmp
arpl
xchg
rcrb
dec
test
mov
gs
sarl
or
sub
ss
scas
add
sub
and
xchg
movsl
jmp
adc
into
and
popa
pop
jg
pushf
inc
mov
or
flds
add
mov
popf
sub
cmpsb
pop
pushf
add
jb
jo
xchg
sub
xor
xchg
fwait
stos
int3
mov
addr16
jecxz
and
stos
push
inc
cmpb
xchg
negb
ds
or
cld
sbb
lret
and
jnp
inc
and
mov
fwait
jecxz
push
mov
int3
dec
imul
loop
push
int3
pop
lcall
push
in
add
push
test
daa
imul
fisubs
cmp
fcomp
cmc
adc
in
outsl
or
out
and
fstpl
push
loope
sbb
mov
push
lock
cld
sbb
in
subl
inc
cmpsb
subb
dec
rcr
daa
jb
pop
cltd
push
xchg
divl
or
xor
pop
fstl
fucomi
test
push
rol
lret
inc
cltd
push
add
mov
insl
push
out
and
call
in
xchg
or
lea
pop
jbe
sbb
in
fildl
cmp
xorl
xchg
out
sti
lret
add
mov
sbb
cmp
push
jmp
imulb
cs
insb
adc
jle
es
incl
fs
cmp
xor
xchg
mov
sarb
test
sub
inc
popf
push
rcrb
xor
scas
lahf
mov
and
lea
ficomps
adc
scas
pop
jge
xchg
cli
sbb
nop
or
aaa
adc
or
mov
nop
test
cltd
inc
test
jge
or
loop
scas
adc
mov
int3
std
mov
dec
pusha
xor
repz
pop
cmp
fmuls
sub
arpl
outsb
and
into
push
cmp
mov
popa
gs
pop
dec
add
or
sti
pusha
push
test
fcoms
cmp
xor
lahf
aam
jg,pn
stos
ret
add
mov
and
mov
in
leave
mov
sbb
test
js
jl
mov
into
pop
jno
cmp
xchg
mov
pop
ljmp
fldenv
push
cs
push
inc
adc
push
push
mov
rcrb
out
mov
mov
insl
es
jmp
clc
cwtl
lcall
mov
push
push
cmpsl
mov
out
pop
mov
movsb
testl
test
cmp
scas
mov
mov
jb
pop
cmp
mov
pushf
mov
xchg
incb
rorb
cmpsb
pop
loope
mov
repz
icebp
testl
push
sbb
ret
pop
lret
icebp
lea
jmp
push
cmp
stc
out
sub
xchg
lahf
lahf
cmp
sti
dec
and
xchg
pop
das
add
mov
cltd
rorb
jnp
test
dec
or
jne
push
mov
xorl
negb
jbe
shll
sbb
xchg
cmpsb
mov
sbb
roll
xchg
cmp
jecxz
mov
cmp
in
outsb
sbb
js
push
out
lea
sub
sbb
jnp
dec
jecxz
adc
push
mov
dec
inc
jmp
cli
cmp
mov
mov
and
or
mov
inc
xchg
aad
xchg
ret
out
frstor
std
imul
decb
adc
mov
push
lock
sub
push
add
fisttpll
xor
push
iret
xor
pop
adc
clc
mov
stos
stos
pop
scas
push
and
scas
push
loop
mov
jbe
rol
push
mov
jmp
pop
jg
sbb
dec
lret
roll
push
in
lods
push
or
cwtl
stc
adc
mov
cltd
push
mov
and
adc
in
fs
adc
int3
movsl
mov
adc
ret
or
das
ud1
adc
sbb
stos
sub
dec
icebp
sbb
jae
lea
mov
lret
push
out
movsl
into
stos
testl
imul
jle
and
rorb
in
cmp
enter
das
enter
pop
or
nop
push
test
pop
xchg
dec
jne
mov
gs
push
inc
repnz
pop
jb
arpl
iret
mov
nop
addr16
push
xchg
mov
cmp
sarl
pop
int
stos
inc
dec
xchg
or
jecxz
dec
inc
fistpll
inc
pop
repnz
dec
mov
jnp
test
xlat
xchg
pusha
jns
fcmovbe
or
mov
cmp
adc
fsubr
adc
xor
bound
movsb
or
add
sbb
mov
xor
mov
jg
neg
inc
dec
out
xor
pop
pop
push
test
arpl
jmp
push
pop
push
and
adc
stos
add
mov
adc
fdiv
rolb
mov
sub
pop
in
jne
mov
daa
and
lds
daa
in
fistpl
lahf
scas
and
sbb
sti
pushf
add
loop
test
add
mov
lahf
push
push
pop
add
js
and
sarl
and
inc
pop
mov
scas
imul
mov
aas
pop
jns
les
in
sbb
es
sub
lods
inc
xchg
lods
mov
dec
outsl
scas
and
dec
aaa
ss
jne
dec
dec
adc
in
lret
adc
jge
xchg
lahf
filds
or
dec
in
jmp
sahf
shll
lds
inc
out
xchg
les
cmp
add
jg
loopne
cwtl
push
push
mov
outsl
iret
jnp
leave
loop
outsb
hlt
into
fadds
mov
mov
mov
adc
cltd
jo
jl
in
jo
ficompl
mov
adc
idivb
add
jle
mov
pop
out
pop
fs
dec
xchg
xchg
nop
ret
mov
rcl
dec
xor
movsb
test
cli
iret
xchg
mov
in
pop
xchg
mov
adc
or
mov
dec
mov
lods
mov
push
jo
jp
fidivl
dec
shll
std
jge
sub
mov
pop
push
xchg
or
sbb
bnd
inc
pop
icebp
add
mov
std
pusha
cmc
rolb
xor
jl
mov
dec
xchg
insb
jp
cmp
or
add
xchg
mov
xor
and
lcall
xor
cld
mov
xchg
inc
lret
out
mulb
dec
add
cmp
ret
imul
imul
iret
loope
lcall
jecxz
js
jne
pop
popa
pushf
push
loopne
cli
sub
push
sbb
in
inc
pop
lods
mov
movb
inc
sbb
pop
lcall
add
aas
shlb
cs
je
cmp
outsl
ja
adcl
ja
jmp
pop
xchg
sbb
cmpsb
ljmp
data16
adc
fs
lahf
mov
cwtl
mov
in
in
jle
cmp
push
mov
sbb
or
arpl
or
add
mov
arpl
fistps
xchg
sub
dec
std
sbbl
xor
dec
jb
mov
add
ret
jne
lock
dec
push
loopne
sub
pop
xchg
or
repz
or
lret
popa
lods
mov
ficompl
hlt
mov
sbb
in
insb
in
inc
jae
shrb
aad
nop
inc
xor
mov
and
arpl
cltd
inc
and
xor
adc
xor
push
lea
and
scas
aas
mov
mov
jne
ret
cmp
cmp
or
push
push
dec
mov
call
mov
inc
pop
sti
pop
or
cltd
sub
adc
test
sub
enter
scas
and
mov
rcrb
jnp
mov
movaps
pop
jmp
mov
pop
loop
loop
popf
es
and
data16
jbe
or
rcrb
push
rcrb
pop
ss
pop
inc
outsl
es
outsb
add
jg
mov
ja
jbe
arpl
mov
adc
std
or
loop
repnz
fadds
mov
sbbl
ja
xchg
jno
push
js
std
xlat
jmp
mov
loope
clc
push
test
shlb
je
mov
mov
fsubs
xchg
xor
pop
stc
xchg
sti
mov
fmull
jge
stc
fdivrl
mov
jp
into
lods
stc
cmpsl
mov
or
add
lods
sub
clc
jecxz
sbb
rolb
xchg
dec
push
loop
lcall
rcll
cmp
xchg
inc
or
inc
adc
es
or
enter
test
outsl
test
mov
xchg
mov
popa
ljmp
xchg
jno
mov
cld
pushf
xor
addr16
push
popf
icebp
or
and
dec
mov
daa
mov
cmc
pop
jbe
mov
or
lods
arpl
loope
sub
push
sub
pop
popf
test
mov
rorb
jge
test
fisubl
or
sbb
mov
scas
call
cmp
push
push
jnp
or
jecxz
or
rcl
push
outsb
xor
add
outsl
sub
sub
xor
inc
jge
adc
ror
adc
inc
sub
leave
jbe
or
rcl
mov
testl
pop
movsl
loop
fdivl
mov
pop
testb
sbb
cli
out
repz
jg
lret
cmpsb
cmp
scas
sarb
jnp
cld
test
inc
js
jns
push
adc
jle
inc
mov
mov
xchg
jg
test
scas
stos
cmc
mov
fs
mov
jns
cmp
push
jge
sub
scas
inc
addr16
sub
mov
and
rclb
and
add
test
movsl
pop
xor
xchg
sub
adc
pop
xor
call
mov
push
outsl
in
adc
or
pushf
jns
add
shll
push
out
lods
out
lods
pop
and
jmp
mov
push
mov
inc
adc
lret
mov
dec
adc
mov
push
lcall
dec
rorl
jb
lret
ljmp
hlt
and
sbb
bound
push
jmp
test
daa
rorl
mov
jecxz
xor
lret
pop
imul
xor
xchg
jae
repz
test
dec
into
dec
jo
mov
outsb
int
enter
mov
stos
push
inc
push
shrl
mov
inc
into
mov
mov
aaa
in
loop
mov
popa
int3
mov
call
dec
adc
xchg
jbe
dec
mov
jmp
pusha
or
add
sbb
cmp
push
mov
mov
in
fwait
loope
loope
das
jmp
lds
stos
movsl
ljmp
outsl
mull
or
or
jnp
xchg
xchg
xlat
mov
iret
insb
xor
jns
dec
sarl
repnz
add
mov
xchg
pop
mov
sub
inc
ljmp
test
ds
fdivrs
mov
out
scas
or
lods
push
sti
xlat
mov
inc
sahf
pop
push
pop
sub
sub
aaa
or
scas
sub
mov
fdivs
sbb
int
scas
out
mov
xchg
inc
mov
stos
mov
mov
jle
faddl
or
repz
mov
jo
add
in
aaa
inc
mov
add
xchg
imul
les
cmpsl
mov
mov
mov
int3
repnz
jp
bound
lods
lods
sarl
add
push
rclb
test
pop
jae
loop
popf
imul
push
adc
add
add
sarb
xchg
and
mov
mov
arpl
xchg
arpl
rcrl
jp
lret
dec
sub
sub
fwait
mov
add
es
inc
adc
or
mov
inc
int
push
shl
pushf
xchg
fstl
or
sarb
mov
scas
pushf
pusha
xchg
xorl
sub
insl
incb
cmpsl
cmpsl
add
in
fcomp
pop
aad
sarb
inc
inc
lcall
pop
fsubrl
cmp
inc
xchg
daa
int
mov
daa
sbb
mov
add
stos
lret
popf
icebp
mov
pop
adc
and
dec
inc
enter
aam
pop
sbbb
ss
and
cmpsl
jae
cli
push
leave
xchg
or
pop
mov
in
xchg
sub
jns
sub
lret
lcall
lret
rol
sahf
ret
push
push
jae
dec
mov
jno
stc
enter
sti
orl
loop
mov
rcrl
stos
test
mov
adcl
test
sbb
loopne
cltd
mov
popa
in
jb
je
push
mov
add
pop
mov
rcrl
nop
cmc
add
xor
or
xchg
pop
push
xchg
or
push
out
das
lods
movsb
pop
cmc
fidivs
gs
xor
and
jbe
bound
pop
and
fsubl
rolb
dec
pop
in
mov
popa
mov
jg
hlt
fistpll
leave
cmp
pop
aam
adc
inc
scas
je
movsb
cmpsb
gs
hlt
or
mov
rclb
test
xchg
mov
aas
loop
adc
arpl
mov
xchg
xor
mov
lfs
cmp
out
aam
pop
push
in
in
imul
popa
int
add
add
test
jns
jl
les
fsubl
lea
jb
sbb
arpl
pop
xchg
mov
push
xchg
add
scas
pop
ficoml
pushf
or
jne
shr
push
xchg
notl
shl
arpl
int3
push
inc
adc
stos
sbb
xchg
insb
sbb
and
lock
dec
shll
and
fimuls
cmc
jmp
insb
sbb
into
addr16
xchg
in
sti
or
aaa
loopne,pt
and
insl
cli
fistps
inc
cmp
fcompl
pop
push
roll
sahf
in
or
in
and
cmp
repz
sti
je
outsl
hlt
xchg
xchg
rorb
mov
std
inc
mov
sbb
xlat
stos
xchg
lods
dec
in
jne
loop
movsb
push
pushf
or
add
xchg
inc
or
jo
es
enter
adc
or
cmpsl
mov
mov
cmp
add
mov
add
xchg
jbe
add
ds
and
pop
adc
shrl
jge
and
dec
add
xor
push
xchg
bound
aaa
adc
cli
out
cmp
jae
pusha
sbb
cmpsb
xchg
stc
jge
sbb
loopne
in
enter
mov
cmpsb
mov
sbb
rorb
cmp
xor
cli
xor
xor
sbb
inc
ret
jp
pushf
into
out
lds
push
add
hlt
fcoms
jmp
mov
movsb
call
out
dec
mov
mov
test
dec
mov
adc
and
xor
out
pop
mov
pop
rcrb
js
sbb
add
jbe
add
cmp
iret
orl
mov
pop
mov
movsl
push
xchg
mov
movsl
pop
and
and
les
cmpsl
sub
mov
cmp
lock
mov
cmp
fdivl
add
pop
sub
loope
jbe
lea
xchg
fbld
std
sub
inc
imul
outsl
jle
add
push
aam
cmpsl
rol
fsubr
and
and
orb
shll
push
fnsave
jo
adc
adc
pop
div
mov
out
lods
sbb
adc
add
jno
cld
and
jae
pop
aaa
stos
mov
cld
cld
jle
imul
mov
lods
jl
cmc
xor
mov
mov
cmp
lcall
inc
leave
lret
call
daa
or
les
mov
bound
jo,pn
mov
into
insb
mov
fcoml
lcall
or
ret
mov
pop
test
cs
mov
ret
and
adc
jp
lock
in
dec
dec
int
sbb
xchg
adcl
addr16
icebp
xchg
decl
test
negl
negb
fs
ljmp
mov
push
push
in
mov
mov
adc
arpl
mov
adc
es
shrb
data16
lods
push
or
jns
rcrl
clc
xchg
and
imul
jnp
adc
cmp
push
roll
jp
xor
jecxz
insb
cmp
std
xchg
fstl
sub
aaa
lret
bound
push
sbb
lods
pop
int
mov
int
xchg
cltd
jnp
orl
mov
stos
push
movsl
push
xlat
mov
ret
movl
movsb
mov
mov
pop
dec
cmpsl
jle
jp
jo
cs
jo
jno
in
test
rol
roll
mov
xor
sti
xor
loope
icebp
mov
cmp
fldenv
repz
ljmp
inc
ja
clc
sub
int
sbb
mov
fistpl
mov
popa
ljmp
or
cwtl
add
sbb
lret
and
shrb
out
dec
pop
hlt
sbb
fcoml
fcomi
mov
scas
stos
sbb
jmp
xor
test
sahf
cld
cmp
sub
mov
cmpsl
lcall
jecxz
push
mov
loopne
jmp
sahf
jge
sbb
and
pop
mov
xor
repz
cmp
xchg
cltd
iret
lret
inc
xchg
ljmp
mulb
push
into
xor
shlb
jl
arpl
repz
hlt
je
mov
mov
xor
das
jne
sbb
cmpsb
test
scas
xchg
mov
test
imulb
shr
pop
data16
xchg
scas
loope
fdivl
or
mov
leave
or
xchg
dec
mov
xor
pusha
pop
scas
stos
dec
dec
nop
lods
lods
push
cmpsl
imul
adc
sti
dec
mov
dec
adc
pop
cld
mov
lds
cli
enter
out
pop
in
fcomps
jge
pusha
push
mov
pop
cmp
inc
into
int
cmp
push
lea
adc
mov
sti
pushf
push
ds
sahf
cmp
ret
or
fwait
pop
xlat
jbe
cld
push
cmp
xchg
or
mov
ljmp
clc
sbb
addl
cmpsb
xchg
icebp
movsb
insb
lods
pop
push
lods
push
in
fdivr
lock
inc
mov
pop
cmp
xchg
iret
mov
xor
jp
lock
daa
pop
xchg
test
test
or
jge
sbb
sbb
int
ds
shll
push
imul
add
shlb
adc
push
pop
and
xchg
mov
aas
mov
in
fwait
adc
cwtl
add
sbb
aaa
jo
fs
test
fdivs
add
and
data16
adc
mov
sub
in
test
pop
ss
inc
stc
gs
inc
orb
fcompl
inc
mov
or
mov
popf
pop
or
push
push
out
xchg
inc
pop
xor
fisttpll
dec
lcall
push
xor
test
sbb
mov
outsl
std
aaa
and
sbbb
popf
imul
in
cmpsl
pop
xor
popa
cmp
fisttpl
or
clc
sti
addl
mov
mov
pop
dec
push
pop
mov
aas
cmp
cmp
out
jmp
out
fisubl
mov
jle
cmc
popf
add
sbb
ja
fistpll
in
jbe
or
mov
xor
sub
pop
pop
pop
sub
nop
ds
leave
cmpsb
mov
or
lock
mov
lcall
pop
pop
and
xor
xchg
fwait
cmp
rorl
fsubs
xchg
fdivs
xchg
sbb
fcmovne
scas
lret
mov
daa
jecxz
icebp
mov
dec
movsl
adc
mov
cltd
add
aaa
fldt
push
out
xor
sub
mov
sbb
out
mov
sbb
inc
daa
push
jge
mov
sub
jmp
and
jns
jg
push
repz
add
mov
lcall
ret
sbb
push
scas
mov
or
mov
insb
jb
push
dec
xor
setp
xchg
adc
cmp
lret
jmp
test
movsb
cmp
mov
nop
inc
mov
xchg
mov
lock
inc
out
push
rcll
pop
mov
mov
int3
xchg
mov
pop
and
icebp
jae
outsb
test
sbb
out
push
out
les
es
ja
aam
stos
sahf
popf
jno
dec
mov
pop
add
mov
push
mull
test
lds
jge
cltd
aas
push
adc
ds
jo
inc
jmp
pop
xchg
xor
movsb
xlat
das
les
xor
int3
xchg
mov
jae
mov
mov
fildl
cli
stos
xchg
loop
or
into
jbe
jno
xor
fisttpl
lds
inc
xchg
roll
push
cmp
mov
inc
les
ficomps
pusha
add
mov
cmpsb
jns
or
fisubs
or
mov
cmpsb
stos
bound
mov
leave
test
push
pop
mov
fs
add
cmpsb
push
push
and
daa
xchg
sahf
js
pop
mov
mov
pop
mov
stos
mov
and
push
ret
push
inc
xchg
cmp
aaa
cmpsl
pop
cwtl
sahf
iret
pop
pop
stos
lds
les
jbe
aaa
lock
jno
lret
pop
cld
fdivl
xchg
add
xchg
sub
repnz
sahf
dec
cmc
xchg
cs
push
push
pop
ficompl
pushf
mov
inc
xor
adc
and
push
fdivrs
xchg
pop
bound
shlb
mov
fisttpll
fwait
idivl
mov
inc
popf
cmp
loopne
and
mov
xor
or
test
dec
sub
sarl
and
xchg
add
adc
lods
cltd
sub
lock
insl
mov
xchg
mov
bound
jecxz
mov
push
lcall
pop
shrl
fnstsw
sub
mov
loope
adc
or
push
je
sbb
xchg
das
add
int3
push
xchg
leave
pop
scas
push
mov
push
dec
jg
jbe
pop
lcall
loope
fdivrl
xor
js
xchg
mov
leave
push
aam
stos
in
imul
push
call
mov
sub
sub
dec
sbbl
inc
pop
outsb
lock
lcall
imul
data16
cs
popf
out
fnstcw
mov
fstpl
pop
jbe
mov
adc
xchg
jns
xorb
add
shlb
out
mov
nop
lods
loopne
add
lods
cmpsl
add
cmc
inc
pop
mov
xor
repz
test
xor
add
dec
push
push
or
mov
in
cld
jae
repnz
sub
aad
cmc
cmp
push
jmp
out
mov
mov
push
mov
flds
orl
jnp
andl
or
or
fbld
or
xchg
sub
data16
dec
mov
es
xlat
jmp
push
fisubrs
dec
das
in
sahf
sub
dec
sub
push
cmp
int3
je
test
xchg
js
popa
add
scas
cmp
fdivl
iret
loopne
cmp
jge
or
sub
aad
jp
cmp
xor
mov
sbb
or
iret
xor
aaa
or
bound
mov
pop
mov
imul
push
and
mov
push
insb
ss
stos
in
repnz
dec
sub
or
test
cmp
jecxz
xor
cmp
xor
dec
mov
fsubp
lcall
test
jo
mov
enter
push
pop
rcrl
arpl
in
dec
adc
out
add
pop
jbe
frstpm(287
shll
lea
test
push
mov
movb
gs
scas
push
mov
add
aaa
lahf
out
xchg
xchg
push
es
insb
cmp
inc
xchg
out
leave
inc
in
jbe
lret
jb
hlt
sahf
inc
or
xor
cmpsb
and
xor
das
jae
cmp
pusha
xchg
in
dec
sub
scas
outsl
andl
fbstp
and
push
or
loopne
mov
inc
xor
xchg
out
sbb
mov
and
or
lret
or
lea
sbb
scas
lret
inc
lahf
jle
cmc
testl
popa
adc
xor
xor
add
mov
mov
xchg
xchg
into
sbb
push
adc
fists
lock
cmp
call
or
mov
add
adc
push
xor
shl
in
hlt
mov
xchg
jecxz
xchg
xchg
rcll
cld
pop
inc
lea
je
rcrb
jbe
fsubrs
adc
cmp
push
or
cmp
pop
les
loop
cmpsb
test
mov
loope
xlat
push
lock
xchg
repnz
dec
push
inc
icebp
jecxz
sbbb
jmp
div
jge
adc
aas
jg
ret
jb
arpl
and
dec
sahf
sbb
sar
cmpsb
sbb
xchg
xchg
jle
mov
xchg
pop
xchg
dec
movsb
aad
xchg
les
enter
inc
repz
shlb
mov
pop
clc
insb
lahf
xchg
add
mov
test
lahf
and
add
mov
jbe
xchg
rclb
dec
and
push
ret
inc
push
jns
xlat
dec
jo
or
repnz
xchg
aad
push
test
or
sub
lret
mov
or
mov
into
outsb
xchg
push
mov
mov
lret
jle
int3
adc
jg
scas
pop
imul
scas
push
sbb
clc
push
mov
pop
sbb
aad
in
sub
fcomps
dec
rcll
lods
in
iret
idivl
push
inc
lds
or
hlt
pop
pop
jne
shlb
lcall
mov
jle
inc
jecxz
or
in
xor
sub
xor
mov
add
sub
push
and
hlt
call
or
movsb
cmp
jno
or
push
xchg
pop
jg
cmc
xchg
ss
addl
call
cmp
sub
sar
inc
sahf
cmpsb
mov
sbb
insb
in
lret
xchg
icebp
sbb
dec
movsl
cmpsl
loop
cmp
test
sbb
insb
cmc
adc
pop
ret
mov
sub
iret
jl
imul
aaa
adc
jg
jg
cmpb
les
popf
mov
and
mov
sub
mov
jle
pop
cmp
popa
push
inc
add
sub
lds
div
xor
pop
mulb
adc
aaa
or
adc
and
shlb
xor
lahf
in
xchg
pop
inc
enter
or
mov
xchg
lret
mov
movsl
in
stos
jmp
xchg
psraw
sub
and
pop
mov
add
outsb
jp
cmp
addr16
std
mov
out
mov
and
shr
orl
push
sbb
sub
sbbb
adc
xchg
push
jne
stos
adc
jecxz
sarb
xchg
fldcw
mov
push
les
gs
std
or
adc
std
test
mov
dec
and
les
outsb
dec
xchg
scas
out
cmpsl
xchg
push
push
pop
adc
shlb
movsl
mov
mov
jg
push
out
mov
nop
lods
pop
cmp
cmc
xor
xchg
neg
sbb
popf
push
or
cmpsl
pop
pop
clc
push
mov
jl
xor
loope
aam
popf
clc
push
sub
shl
xchg
xorb
mov
xchg
pop
ja
mov
inc
mov
scas
stos
sarl
or
popf
addl
xchg
cli
xchg
notb
push
movsl
or
jecxz
dec
xchg
popa
fsubs
xor
call
adc
push
xor
enter
push
xor
in
fbstp
out
cmpsb
movsb
mov
xor
adc
shlb
sbb
or
adc
add
shlb
lret
xor
cmp
dec
mov
stos
cmp
mov
repz
andl
data16
xor
push
cmp
xchg
vmwrite
mov
pop
mov
push
adc
into
sub
out
icebp
addb
hlt
xchg
xchg
jb
xchg
stos
inc
xor
repnz
repz
fildll
mov
data16
adcl
aam
bound
nop
xor
loopne
sub
xchg
add
pop
fwait
push
sub
loope
insl
std
dec
or
and
mov
mov
mov
push
jecxz
inc
loopne
pop
add
adcl
ret
addr16
mov
inc
sbbb
in
pop
test
push
pop
out
xor
aas
inc
addr16
aaa
or
and
out
mov
xor
add
dec
cmp
ja
adc
xchg
or
out
lcall
pop
inc
pop
cmp
test
sbb
stc
mov
inc
inc
mov
cwtl
mov
icebp
adc
push
inc
push
or
ljmp
cmc
scas
ret
and
ss
xor
or
into
jo
or
jno
pop
mov
or
lahf
or
mov
xor
cmp
mov
jp
aad
daa
sub
data16
leave
mov
int
insl
rolb
push
xlat
xor
pop
mov
test
jl
xchg
cmp
add
fcmovb
jae
pop
pop
xor
mov
and
jge
sub
repnz
nop
pop
push
loopne
pop
sub
call
pop
in
inc
aaa
fnstenv
sub
repnz
mov
ja
mov
xchg
outsb
mov
cmp
out
aaa
mov
fisttpl
int
stos
cmp
mov
fisubs
mov
sahf
mov
imul
xlat
shrb
pop
xchg
pop
push
enter
cmp
int
or
pushf
xor
data16
inc
adc
je
mov
xchg
adc
cmc
sbb
insl
mov
aad
mov
sbb
jno
je
dec
dec
ja
and
sbb
iret
push
add
out
loopne
jp
pop
scas
push
push
mov
lods
lods
add
add
mov
repz
and
enter
icebp
push
repz
push
mov
cmpsb
and
ret
xor
or
aas
sbbb
and
cmpsl
fldcw
jb
and
cmc
sbb
dec
dec
adc
fnsave
xchg
pop
adc
insl
inc
sti
push
jmp
xchg
lahf
cmc
lahf
inc
mov
movsl
cltd
or
jmp
mov
out
rcr
loope
push
shlb
or
jg
fmulp
xor
push
mov
or
xchg
imull
fistpll
pop
dec
mov
scas
push
shll
vphaddbw
rol
scas
mov
cmp
lds
in
sub
pop
cmp
imul
scas
shrl
inc
lcall
incl
mov
jecxz
sub
inc
inc
aad
ficomps
cmc
xchg
or
xchg
movsl
stos
stos
rcr
leave
xchg
push
sub
xchg
jmp
enter
in
jo
xor
adc
or
inc
sarl
lock
shll
aaa
xchg
outsl
stos
xchg
push
mov
test
jp
xor
adc
xor
and
mov
subb
or
push
lahf
sbb
repnz
pop
xor
iret
adc
jae
test
ret
sub
popl
insb
int3
test
xchg
ljmp
jne
dec
call
xor
and
and
xor
and
sarb
pop
mov
xor
clc
loopne
mov
in
fwait
stc
pop
fstpt
popa
sti
clc
aad
jge
sub
inc
js
xor
xor
sub
add
or
loope
out
xchg
mov
out
and
popf
or
out
into
movl
negl
xchg
xor
out
cmp
fsubl
inc
mov
ficoml
mov
inc
mov
movsl
mov
mov
repz
cmp
mov
stos
cmp
xor
pop
stos
pop
sub
or
mov
jne
cltd
cs
cmp
imul
int
inc
pop
loope
push
outsl
movsb
stos
imul
cmpsb
loop
inc
xchg
mov
mov
or
ss
fmull
test
lahf
push
loop
sub
push
std
into
pop
imul
mov
pushf
jg
movsl
loope
pop
xor
dec
dec
rcr
jecxz
mov
mov
and
cmp
adc
shll
dec
mov
mov
mov
xor
add
xor
mov
lods
jno
cmpl
ljmp
in
push
lahf
test
inc
adc
arpl
cmp
and
mov
sahf
sbb
sub
std
sbbl
sbb
pop
mov
idivl
mov
adc
push
jbe
sbb
jnp
mov
fwait
repz
or
xchg
pushf
xchg
sbb
inc
test
jo
push
fs
int
sbb
inc
sbb
push
mov
push
sub
jg
sub
or
addr16
push
sbb
setb
jne
jmp
jge
inc
mov
call
cld
inc
cmp
fildll
por
adc
and
lret
xchg
pop
lods
cmp
scas
data16
jmp
push
xor
test
cmc
pusha
and
ret
lret
jmp
rolb
jne
aaa
lret
xchg
das
clc
mov
pushf
pop
nop
lahf
push
xlat
xor
cli
push
out
lahf
mov
sub
sahf
sqrtps
je
jl
push
in
fistpll
imul
clc
inc
jmp
or
into
xor
push
or
mov
xchg
out
mov
rcl
enter
jns
icebp
push
insl
pop
add
sub
lret
sbb
out
sar
lock
inc
dec
inc
fcomps
leave
pop
or
cwtl
stc
repz
hlt
dec
lea
inc
add
mov
mov
inc
in
add
mov
add
xchg
or
inc
pushf
iret
add
faddp
addr16
jl
fwait
mov
cmp
mov
mov
mov
dec
call
xorl
jl
jno
push
outsl
xor
or
mov
stos
add
cmp
repnz
cmp
push
fstpt
repnz
rcrb
add
and
add
popf
mov
pop
cs
xchg
ret
in
push
enter
or
out
rcr
mov
jbe
xorb
or
jae
inc
aaa
incb
dec
aam
fcomps
dec
ret
and
or
cli
in
test
repz
adc
cmp
bound
or
lahf
push
icebp
setnp
jg
insb
aaa
adc
pop
jno
and
lahf
dec
ret
test
adc
xchg
pushf
cmp
jl
lret
xchg
or
ret
sbb
mov
push
jmp
mov
icebp
out
push
adc
lret
xor
push
repnz
push
fidivs
jge
dec
push
xchg
icebp
loope
es
jmp
je
loope
push
shl
cli
or
sti
call
sub
leave
mov
adc
and
mov
stc
cmc
cmp
cmp
pop
dec
andb
cmp
stos
sbb
rcr
cmpsl
sbb
data16
sti
or
lret
push
mov
cltd
subb
jne
out
repnz
movsl
pushf
popf
adcl
mov
mov
out
cltd
ret
xor
and
pop
scas
cvtps2pi
nop
cli
data16
jp
lahf
or
js
or
movsb
lock
or
xchg
scas
das
sbb
clc
jae
sub
pop
test
adc
je
dec
add
add
aaa
push
stc
jg
in
lcall
push
cld
xor
jmp
mov
into
addl
sbb
jl
out
pusha
jbe
ljmp
lea
or
repnz
xor
jge
cmpsb
or
mov
popf
lcall
fcoml
or
dec
adc
loopne
outsl
ret
xchg
jb
jecxz
adc
sahf
dec
mov
cld
test
and
cmpsl
test
adc
sahf
mov
fimuls
or
cwtl
inc
loopne
xchg
insl
arpl
scas
pop
push
stos
sarb
push
adc
fsubs
jecxz
jnp
pop
jle
das
outsb
xlat
fsts
jmp
or
jo
push
push
gs
pusha
lahf
xor
mov
std
mov
fbstp
push
mov
hlt
xor
dec
adc
add
mov
pop
loope
shlb
dec
mov
rorl
jge
iret
in
jns
ja
mov
loope
push
out
push
in
jbe
dec
push
mov
xchg
pop
int3
insl
fmul
push
les
cmp
cmpsb
lcall
dec
fwait
ljmp
jecxz
movsl
jb
aas
bound
cmp
mov
pusha
cmp
ret
xlat
mov
imul
adc
test
dec
adc
popf
clc
nop
dec
subb
push
xlat
adc
cmp
mov
mov
fcompl
xchg
andb
cmp
imul
pop
test
test
loopne
dec
push
aaa
and
xchg
dec
mov
jl
and
cmp
loope
adc
jnp
loope
aas
mov
jmp
out
dec
push
jmp
pushf
pop
jl
mov
pop
sbb
sub
mov
push
jns
xor
adc
jns
movnti
in
inc
inc
divl
mov
repz
or
or
cmp
outsb
jg
mov
lds
mov
mov
mov
out
cmp
cs
mov
adc
adc
or
jo
jle
ss
dec
inc
sub
aas
std
rcrl
sbb
lock
or
rorb
and
in
popf
or
aaa
push
push
movb
adc
jle
sub
add
cmpsb
push
or
outsb
push
test
and
mov
pusha
pusha
leave
sti
fildll
call
ret
cmp
je
dec
popa
xchg
jl
jo
mov
xor
jne
mov
out
xchg
mov
dec
lods
mov
fiaddl
or
shlb
mov
pop
xor
add
xchg
mov
jle
out
pop
aas
jns,pt
in
and
xchg
inc
adc
lret
mov
movsb
je
push
call
out
xchg
orl
xlat
mov
add
dec
faddl
dec
ljmp
and
in
and
ljmp
xchg
stc
jae
ret
or
jmp
jne
xorl
push
test
out
loopne
repz
mov
popf
in
dec
insb
aam
jne
mov
sahf
lahf
pushf
lcall
js
sbb
pop
in
dec
xlat
jle
inc
pop
inc
add
lret
and
or
mov
ja
jb
fwait
and
sub
lahf
loopne
jmp
mov
inc
shll
inc
clc
shll
gs
cmpsb
mov
pop
mov
jle
aaa
mov
xor
sbbl
pop
jge
roll
jnp
ja
push
mov
pop
dec
mov
imul
xlat
mov
orb
cmp
test
add
and
dec
sbb
xor
jmp
push
stos
fisubrs
nop
push
xor
lods
pop
push
mov
mov
into
nop
mov
push
cmp
rolb
int
in
test
enter
xor
shrl
lcall
adc
in
movsb
clc
ja
inc
adc
sbb
cmp
xchg
adc
ljmp
rorb
adc
imul
cli
cmp
xlat
or
call
mov
pop
ss
push
mov
leave
xlat
dec
and
cs
fildl
dec
sub
cmpsb
pop
adc
jg
into
mov
mov
fdivp
ss
or
pop
gs
orl
xor
popa
jae
pop
int3
testb
in
mov
fstps
or
pop
xchg
std
lahf
clc
lock
sub
inc
out
xchg
cmp
mov
mov
pop
rorl
adc
mov
xchg
icebp
movsl
orb
sbb
or
repz
jnp
xchg
sub
and
pop
out
add
or
jae
shrb
js
cmp
ret
cmp
push
mov
cli
mov
sbb
push
mov
enter
xlat
inc
daa
or
mov
jle
daa
xor
in
or
lock
push
into
pop
movsb
lret
inc
pop
cmc
xchg
mov
xchg
out
sbb
dec
and
jns
das
xchg
aad
mov
jbe
enter
sbb
outsb
ja
xorb
cld
cmp
cmp
repnz
push
adc
loopne
and
rolb
pop
mov
std
and
ljmp
cmp
mov
aad
mov
xor
pop
mull
loopne
mov
imul
sub
sub
lods
jbe
out
stos
ljmp
add
movsb
cmp
jp
cmc
or
fimuls
fdivrs
movsl
addb
loope
mov
pusha
adc
add
inc
rorl
lea
scas
push
incb
jns
call
cmp
lock
clc
add
lret
sahf
loope
mov
or
mov
orl
enter
je
jnp
push
subl
jecxz
fiadds
repz
out
inc
add
ror
fidivl
test
subb
inc
std
mov
jae
inc
dec
leave
jns
adc
lret
jg
in
pop
jl
mov
inc
in
mov
jbe
and
iret
jno
adc
inc
int3
icebp
mov
and
and
adcl
or
out
das
and
xor
cs
add
jg
arpl
pop
mov
incl
adc
movsl
cmpsl
mov
sti
je
imul
push
pop
xchg
fs
enter
mov
mov
pop
fbstp
shl
mov
mov
repz
or
lea
push
sub
push
rclb
or
and
aaa
pop
lds
push
cmp
cmpsl
lahf
jl
cmpsb
cmp
jne
fs
cmp
inc
sub
gs
in
jg
push
cli
cs
test
rclb
cmp
or
stc
and
add
xchg
mov
loopne
adc
das
leave
dec
dec
adc
xchg
iret
push
xorb
jo
out
out
pop
inc
pop
test
sete
sub
jns
sub
popf
mov
loope
rcrl
test
xor
or
xchg
out
test
loopne
clc
ss
mov
mov
aas
imul
cmpsl
sub
dec
pcmpgtb
gs
push
pop
cmc
inc
add
adc
movsb
lods
adc
cmp
xchg
in
add
xor
pop
in
mov
loope
mov
imul
loopne
pop
div
cmp
ret
les
icebp
pop
ja
imul
push
sbb
fidivrs
addr16
mov
repz
mov
out
or
mov
jl
jle
xchg
xchg
mov
fwait
lret
dec
mov
or
or
fnsave
addr16
ds
mov
xchg
pop
sbb
sarl
cmp
mov
pusha
xchg
test
loop
les
fidivrs
loopne
test
sub
xchg
dec
outsl
je
movsb
jno
shl
lds
ds
sub
mov
or
scas
dec
push
push
adc
das
inc
test
inc
mov
popa
jnp
aas
test
imul
mov
movb
cmp
lods
mov
js
ret
adc
push
popa
fdivl
inc
daa
or
in
fnclex
and
xchg
pushf
inc
sbb
xor
xchg
xor
fcom
inc
enter
adc
test
or
mov
enter
daa
jecxz
mov
sbb
mov
jle
fwait
cmp
mov
mov
mov
push
push
mov
fildl
jb
mov
and
dec
in
inc
pop
add
into
xorb
cltd
mov
cmpsb
testl
xchg
add
adc
pusha
sbb
xchg
xchg
movsl
ret
rol
mov
xor
popa
xchg
jmp
data16
adc
mov
dec
repnz
push
bound
shr
adc
jl
in
adc
push
xor
fidivs
pop
je
inc
mov
clc
dec
push
dec
imul
cmp
loop
faddp
pop
add
stos
cmpsl
or
jp
jno
jecxz
fdivl
lahf
sbb
fcomps
jnp
mov
mov
adc
sbb
xor
inc
fcompl
movsl
pop
adc
jecxz
sbb
scas
push
ret
inc
sahf
sub
xlat
add
dec
fsubs
mov
out
xor
insl
sub
orl
mov
sbb
cmp
cmpb
push
jecxz
pop
xchg
roll
push
call
cmpsl
out
or
test
arpl
enter
mov
bound
lahf
add
and
fimuls
stc
pop
js
mull
in
inc
scas
lock
pop
lahf
mov
add
mov
cs
call
mov
xchg
dec
cmp
cwtl
and
dec
push
push
stos
enter
das
test
inc
lret
jl
pusha
dec
jp
push
shll
jg
or
popf
aaa
std
loope
outsb
inc
push
sbb
and
repnz
or
jbe
aam
test
das
cltd
lea
jb
xchg
push
sub
js
into
mov
mov
pop
test
push
sub
std
fnstcw
test
fwait
sbb
test
push
inc
cmp
repnz
pop
push
xchg
sahf
je
mov
and
ja
sub
mov
dec
fistps
mov
sbb
mov
mov
sub
xor
mov
inc
push
cli
add
or
dec
sub
add
dec
and
cli
xchg
jg
mov
std
into
lods
in
loop
jo
enter
inc
xchg
test
fwait
movsl
rorl
cmp
jmp
sub
xchg
rcrl
mov
int
dec
cmp
or
lcall
add
cmp
aam
mov
sub
rorl
fidivrs
das
dec
data16
sbb
js
adc
jge
ret
jb
sub
cmp
inc
push
test
addl
mov
aad
aam
xchg
jnp
dec
sbb
mov
push
int3
inc
repnz
aad
add
shlb
adc
xor
mov
aaa
xor
addr16
fsubrl
cmpsb
pop
cmpsl
bound
cmpsl
xor
sbb
pop
cmpsb
testb
fnstenv
stos
jle
pop
outsl
jo
aas
icebp
jg
xchg
mov
lea
mov
ret
jne
bound
into
mov
in
sub
mov
mov
aad
popa
mov
add
lcall
les
fninit
jg
mov
inc
cli
mov
xchg
mov
aad
jbe
js
mov
cmp
notb
inc
xor
dec
mov
mov
push
aam
cmc
sub
cwtl
int
inc
cmp
enter
lea
cld
lock
shlb
test
dec
loop
arpl
and
das
dec
aam
xchg
push
outsl
cmp
fsubl
xlat
inc
loop
push
and
andb
jp
sub
shl
psubq
jge
push
ss
lret
rclb
mov
lahf
das
flds
push
lods
sahf
out
nop
push
movsl
out
push
ja
imul
jl
xor
xchg
mov
mov
dec
sti
add
test
mov
xchg
mov
dec
xchg
xchg
add
xorb
addr16
leave
imul
aaa
jne
loopne
scas
or
dec
sbb
aam
stos
lcall
in
stos
inc
add
into
mov
fmull
lods
inc
xor
and
mov
leave
cltd
xor
add
shr
je
pop
sub
jge
ljmp
rcrb
sbb
xor
mov
sub
push
les
sbb
and
inc
or
or
mov
pop
push
cmc
inc
std
mov
fucomp
pop
in
pop
or
inc
idiv
and
cli
gs
and
and
call
add
ret
mov
add
sbb
inc
cmp
filds
pop
push
std
inc
stos
outsl
cmp
jb
pop
sub
testb
mov
pop
add
inc
mov
pop
and
dec
dec
sbb
mov
adc
mov
stos
pop
or
cmp
xchg
sub
cwtl
add
xor
xchg
imul
dec
arpl
lods
lods
and
addl
pop
int3
mov
mov
inc
pop
and
and
imul
push
mov
addr16
xchg
pop
xchg
or
stos
repnz
or
cmp
divb
cmp
add
jmp
and
rolb
or
test
cmpsb
push
dec
xchg
test
push
std
xor
cmp
jbe
test
fidivrs
ds
stos
jnp
adc
mov
leave
jle
mov
xor
ss
movsb
jg
aaa
test
icebp
mov
lods
pop
push
jno
push
xchg
cmp
pushf
clc
stc
into
xchg
jnp
lret
sub
pop
fadds
add
mov
ds
jecxz
ds
jmp
dec
jbe
das
jg
xlat
in
movsl
hlt
lret
dec
das
inc
inc
cmc
addb
adc
faddl
test
mov
mov
xchg
enter
notb
adc
add
sub
inc
mov
xchg
adc
push
repnz
jae
shrb
ds
adc
negl
mov
loope
dec
cmp
dec
and
jecxz
dec
in
es
fcomps
mov
mov
adc
lods
add
xchg
jnp
jo
adc
lcall
leave
push
xchg
bound
loope
sub
insl
sti
fs
push
sti
repnz
push
jecxz
inc
std
loope
mov
cmpsl
dec
jae
mov
out
push
mov
jge
loop
xorl
jo
sbb
mov
pop
ret
popf
scas
lea
xor
xor
cmp
not
ja
aas
push
jbe
pop
xchg
fld
roll
mov
shl
enter
add
test
into
xor
testl
push
push
gs
mov
movsb
aad
pop
shl
jae
divl
cmc
jns
ja
or
aaa
adc
pop
es
mov
xor
inc
in
pop
jecxz
dec
cmp
add
mov
dec
fsubs
xor
gs
jbe
mov
movsb
inc
faddl
mov
addr16
cmc
jnp
in
sub
cmpsb
dec
mov
cmp
daa
xchg
push
sub
stos
enter
sbb
icebp
mov
aam
jmp
mov
cltd
lods
into
lahf
cmpsl
sbb
xchg
push
dec
movsb
sbb
shll
iret
fsubrl
outsl
dec
cltd
add
int
adc
push
int3
movsl
dec
insl
imul
sbb
aaa
dec
outsl
enter
dec
aaa
test
stos
push
mov
sbb
gs
push
test
push
xchg
xor
movsb
les
out
ret
pop
adc
add
add
in
add
repz
mov
dec
int
or
test
jb
push
cmp
repz
xor
loope
sub
call
sub
flds
out
adc
divl
das
push
jnp
mov
xchg
mov
lahf
push
jl
jl
sbb
or
xor
test
sub
mov
mov
gs
mov
lods
mov
mov
fistl
jnp
movsb
int3
dec
mov
dec
inc
arpl
out
jnp
jmp
dec
jl
mov
jnp
jns
into
push
insl
ja
sub
pop
push
movsl
and
je
and
xchg
clc
adc
int3
ja
in
mov
push
lahf
scas
and
mov
bound
ja
or
pop
lret
push
insl
insb
mov
or
fnstcw
adc
mov
test
cmpsl
mov
pop
adc
and
add
inc
or
int
jp
repnz
fsubrl
jg
sbb
add
sarl
imul
xor
aaa
shlb
sbb
lea
int3
lods
or
daa
and
loope
add
jge
fildl
dec
sbb
xor
push
push
push
sub
js
fs
roll
cmp
mov
mov
je
xchg
mov
loope
sub
inc
mov
or
lret
xlat
cmpl
in
mov
add
add
lret
nop
sub
jne
sahf
jmp
leave
pop
ja
gs
xchg
mov
icebp
push
and
out
ss
mul
cmp
xor
movsl
inc
loop
rorl
inc
jb
aas
push
mov
aaa
inc
inc
dec
shll
mov
movsb
je
jle
mov
jmp
testl
ret
cmp
pushf
js
int
add
out
imul
arpl
adcl
pop
hlt
jmp
sub
in
cmp
pusha
mov
movsl
ret
jge
loope
xlat
jl
repnz
cmc
xchg
jg
push
popf
mov
hlt
stos
sti
flds
pop
adc
xchg
adc
sub
negb
cmp
cmp
test
pop
decl
or
xor
sub
mov
xchg
movsl
xor
xchg
leave
pop
or
or
jg
xor
lods
and
push
mov
jae
outsl
add
aad
fildll
mov
data16
push
fadds
cld
jo
cwtl
adc
push
pop
out
push
repnz
jbe
dec
mov
pop
mov
mov
test
dec
push
jmp
xor
popa
add
rol
inc
aam
xor
outsl
bound
enter
sbb
mov
inc
pop
rcrb
mov
insb
out
out
push
movsb
repnz
imul
leave
xor
sbb
aas
or
pop
outsl
psrld
ljmp
mov
xchg
call
insl
mov
loopne
je
shrb
jg
dec
mov
loopne
dec
das
lret
rcrb
fidivrs
aaa
imul
mov
mov
cmp
mov
cmc
sub
call
xor
movsl
mov
mov
or
shr
mov
pushf
lock
cld
dec
add
adc
mov
inc
in
cmp
sub
lods
dec
dec
mov
bound
int
aam
inc
int3
movl
hlt
sahf
lods
adc
call
ljmp
mov
xchg
mov
aam
jae
pop
shll
push
cwtl
mov
out
xor
jnp
cmp
mov
pusha
mov
dec
pop
pop
mov
mov
mov
dec
push
cmpsl
cld
adc
call
and
out
sbb
and
xor
fbstp
loopne
mov
jo
add
int
fwait
xchg
mov
push
jle
test
mov
sbb
loop
imul
push
jbe
fsubrl
push
movsb
xchg
out
shll
mov
fldt
or
mov
dec
cltd
jns
mov
xchg
push
add
outsb
sbb
ret
ret
stc
xor
mov
inc
inc
cmp
daa
push
fwait
push
and
sub
or
dec
test
push
daa
js
fsubs
pop
pusha
mov
xchg
inc
xchg
mov
mov
cwtl
fldenv
push
ffreep
push
dec
push
ljmp
fs
shll
add
mov
scas
or
sub
pop
leave
aas
push
jne
int
dec
sti
inc
test
enter
xchg
push
arpl
je
push
sbb
repz
cli
clc
pop
sarb
rorb
cmp
xor
cwtl
jne
push
jg
sbb
in
out
je
imul
dec
lahf
loop
pop
flds
pop
adc
jnp
imul
xor
es
in
frndint
aam
inc
cli
lea
fnstcw
mov
sbb
push
ds
adc
sbb
jle
or
pop
into
sbb
inc
int
ret
aaa
mov
inc
call
adc
hlt
inc
int3
jge
mov
jne
sbb
cmpsb
outsb
shll
xchg
addl
mov
pop
movsl
mov
mov
sbb
sbb
les
rorl
rclb
add
frstor
inc
sub
in
push
xchg
inc
mov
ret
mov
dec
add
and
push
movsl
sbb
add
jne
in
lret
cltd
je
sbb
scas
cmc
xchg
mov
xchg
pop
pop
mov
pop
xchg
in
sub
aad
aad
cmpl
fistl
in
insl
call
int3
jge
sub
inc
leave
xchg
je
rcrb
lds
or
into
mov
add
sub
xor
pop
mov
loop
out
adc
mov
and
xorb
ljmp
mov
gs
test
xlat
es
xor
jmp
mov
inc
cwtl
ljmp
mov
stos
mov
push
push
mov
inc
nop
aaa
popa
lret
inc
rcl
sti
xor
inc
rclb
ljmp
jae
xor
pop
jle
rcrl
cltd
popa
jne
xchg
aam
cld
mov
enter
push
movsb
mov
int
sub
popf
call
outsb
xor
dec
arpl
jl
pextrw
inc
sbb
xchg
scas
fwait
fwait
add
mov
push
dec
add
adc
outsl
pop
pop
mov
jl
outsb
push
rol
mov
fcoms
or
xor
add
movsb
cmpsl
popf
ljmp
test
cmp
push
sbb
sub
stos
lcall
hlt
neg
arpl
pop
cmp
imul
scas
pusha
fimuls
dec
dec
fmul
xor
out
jmp
jo
ret
aad
pop
add
aad
dec
lret
pop
in
inc
xor
ja
mov
inc
cmp
inc
jnp
sbbb
or
test
and
jge
inc
xor
add
sub
adc
imul
sub
or
xchg
push
jg
xchg
aad
pop
sub
mov
repz
jo
lods
aas
popa
push
cmp
lahf
clc
pushf
pop
pop
popa
data16
xor
sbb
xchg
int
insb
xchg
mov
insb
lods
aam
inc
rclb
pop
and
lahf
cmp
push
daa
jo
push
xchg
mov
out
dec
add
pop
jecxz
icebp
jne
fwait
lahf
daa
or
sti
mov
scas
jle
inc
insl
push
xchg
sbb
stc
xchg
test
insb
add
insl
mov
mul
inc
cli
mov
jo
movsl
inc
sbb
sub
sub
cmc
cmpsl
je
push
jmp
aad
sbb
test
imul
or
idivb
mov
cltd
xchg
fdivs
popa
push
scas
nop
fdivs
mov
lds
cmpsb
ljmp
ret
adc
bnd
jns
xchg
fsubl
and
mov
outsl
sbb
bound
jns
insb
pop
cs
mov
out
out
sti
jo
aam
cmp
lret
jecxz
insb
sbb
push
sbb
mov
das
adc
clc
iret
decl
jg
sub
in
mov
fsubr
adc
pop
in
cmp
jns
cli
inc
mov
insb
dec
mov
mov
xchg
jmp
les
loope
and
cmp
xchg
adc
jp
cld
xor
pop
push
sahf
pop
cmp
cmp
mov
jecxz
outsl
mov
push
adcl
sbb
xor
les
jo
or
mov
out
sub
mov
xchg
cmp
adc
cmp
mov
pop
pop
ss
jo
push
outsl
loopne
cltd
mov
rorl
cwtl
mov
outsl
dec
movsb
and
cwtl
test
icebp
fsubp
in
cmp
xor
and
add
rcrl
jne
and
xor
aaa
in
data16
push
shlb
and
into
mov
add
pusha
lcall
mov
jns
xchg
push
mov
in
stos
outsl
fsubrp
inc
adc
dec
insb
aaa
pop
popf
mov
xor
lea
pop
leave
int3
add
fists
adc
and
mov
out
clc
aas
lret
rcll
pop
fwait
enter
adc
mov
and
out
enter
cli
and
sbb
loop
out
and
in
mov
stos
sub
leave
hlt
jae
pop
out
pop
jp
iret
lahf
andl
adc
dec
push
test
add
sub
mov
out
loop
jle
and
movsb
icebp
cmc
xchg
in
push
divl
or
mov
mov
mov
cmp
iret
lock
sub
jp
in
arpl
jo
mov
rcll
jecxz
test
lcall
sbb
orl
daa
mov
jnp
sbb
mov
jns
out
or
xor
jle
bts
sbb
add
mov
push
xor
inc
stos
fildl
jnp
test
dec
sbb
shl
xchg
icebp
dec
popf
jae
pusha
movsl
imul
jmp
add
sbb
call
mov
clc
popa
add
sti
push
adc
mov
ret
mov
lods
cmp
sbb
clc
stos
xor
outsl
mov
loope
fdivrs
aad
pop
cmp
xchg
push
lods
movnti
xorl
in
call
testb
push
out
sbbb
loop
aaa
loopne
xor
cli
adc
cmpsl
fistl
das
pop
mov
nop
lock
addr16
inc
mov
mov
dec
addr16
jmp
xchg
pop
hlt
jle
jae
mov
adc
cmp
nop
adc
xchg
jns
sbb
aas
shl
insl
pushf
scas
mov
mov
lcall
int3
insl
sbb
faddp
cmc
mov
add
out
imul
aad
sbb
push
xchg
xchg
daa
add
scas
imul
data16
ret
mov
bound
and
xor
orl
imul
inc
jo
incb
in
subb
inc
ja
push
mov
mov
sarb
in
test
test
inc
mov
jmp
test
xor
mov
pusha
or
xchg
ficompl
mov
mov
loopne
sti
pop
mov
call
mov
pop
jle
aad
mov
roll
push
dec
push
pop
in
popf
shll
movsl
pop
call
ja
roll
cli
push
sbb
push
pop
jecxz
in
loopne
xchg
loopne
cmp
lcall
jnp
dec
sub
jge
mull
btcl
sub
lds
xchg
repz
cmpsl
aas
push
movsl
fistpll
pop
push
arpl
mov
icebp
and
dec
fbstp
or
in
shl
jecxz
push
pop
push
sbb
dec
push
scas
pop
lock
movsb
mov
les
sub
stc
add
ds
rcll
sarb
inc
fnstcw
mov
jl
fs
xor
mov
in
repz
js
repnz
cmp
xlat
dec
out
add
inc
rol
sub
add
cmp
mov
mov
xchg
inc
add
loope
rorb
imulb
and
shl
or
les
xor
in
xor
add
ret
or
push
out
mov
gs
sub
mov
jg
fnstcw
dec
out
xchg
push
inc
xor
inc
jns
mov
data16
leave
test
push
mov
test
lods
sub
int
jecxz
lret
arpl
mov
lcall
js
jmp
mov
imul
ror
inc
xor
sarl
aas
lret
xchg
daa
cmp
cld
cmp
push
jle
xchg
fstpl
insb
test
in
les
ja
adc
int3
or
sbb
or
icebp
pop
xchg
pop
idivl
cmp
mov
pop
mov
fs
daa
cmp
mov
mov
shll
arpl
dec
mov
push
sub
int
insl
loopne
jl
mul
movsl
addb
xlat
test
js
push
loop
sbbb
inc
sbb
add
call
ss
movsl
mov
jg
cli
xor
push
in
push
mov
jg
call
push
scas
sub
cwtl
movsb
dec
out
mov
adcl
add
push
cmp
mov
add
js
mov
jnp
and
mov
xor
push
push
push
stos
das
stos
push
mov
inc
daa
test
push
push
fbstp
mov
mov
add
nop
pop
sbb
cmpsb
or
sbb
fst
push
pop
cs
mov
vshufpd
push
sub
xor
dec
fdivrl
fsubr
xchg
jecxz
loop
shrb
and
dec
loopne
movsb
xor
gs
int3
pop
add
mov
scas
inc
fldcw
mov
jne
adc
xchg
push
sbb
insl
add
mov
in
hlt
mov
mov
adc
xor
cltd
jg
hlt
sub
push
cmp
xchg
dec
or
pop
mov
push
inc
push
call
dec
sarl
dec
fisubs
sbb
jno
out
push
push
mov
shl
add
cmpsl
mov
push
mov
xchg
mov
stos
xor
jbe
mov
cmp
inc
stos
pop
rclb
decl
or
dec
sahf
loop
mov
bound
imul
add
jnp
ljmp
mov
lock
pushf
mov
into
sbb
add
out
cmp
lcall
lods
xor
xchg
cmp
inc
dec
out
xor
or
stc
dec
ret
push
scas
gs
clc
add
adc
dec
mov
pop
fisubl
mov
sbb
stos
mov
nop
stos
leave
dec
das
int
sbb
mov
jae
loopne
enter
push
cmp
dec
ficomps
js
xlat
push
popf
ret
add
lcall
sub
loope
pusha
outsb
xchg
or
pop
xor
adc
lret
mov
loop
push
sub
outsb
mov
dec
push
shrb
adcl
test
aam
cs
sub
dec
lcall
jp
enter
or
outsb
les
mov
iret
or
mov
nop
mov
in
mov
shll
pop
pop
ss
dec
jle
mov
inc
xchg
js
mov
imul
test
cli
adc
jo
popa
mov
sbbb
js
inc
data16
adc
xchg
pop
rep
inc
cs
add
or
inc
test
fcoms
in
jo
push
and
sahf
xchg
fdivrp
or
int
pushf
xchg
ret
xchg
jo
mov
call
fldl
insb
pusha
xor
ror
sbbl
xchg
int
mov
fcomp
lds
and
jg
add
popa
push
shll
scas
mov
mov
pop
xchg
mov
and
ds
frstor
jecxz
hlt
xchg
and
or
lds
jmp
push
outsl
pop
inc
jo
push
out
lahf
in
imull
cmc
and
mov
adc
hlt
pop
xchg
repnz
mov
or
inc
pop
xchg
arpl
jle
and
add
or
ja
xor
pop
sub
hlt
jns
filds
fdiv
and
aam
and
fidivrs
int3
je
mov
aam
aaa
adc
insb
cmp
jge
sub
imul
push
pop
sbb
pop
add
into
sbb
adc
scas
sbb
inc
cmp
data16
push
fcom
js
or
push
push
mov
push
xchg
inc
movsl
out
int3
sbb
cmp
stc
popl
das
fcoms
jp
repz
test
test
push
mov
fbstp
pop
jbe
adc
jg
mov
iret
or
dec
rorb
hlt
jb
sub
test
fldenv
and
cmp
pop
or
mov
ljmp
in
ret
xor
mov
addr16
add
cld
sbb
jg
adc
sbb
or
fs
aas
ficoms
int
pop
mov
inc
push
aas
pop
outsb
das
and
and
sub
or
in
in
mov
sbb
push
fbstp
movsl
orl
mov
or
mov
or
lea
and
mov
in
repnz
mov
or
adc
movsl
in
cwtl
and
in
dec
sbb
pop
ret
lds
add
iret
xlat
mov
outsl
mov
out
int
scas
add
dec
cs
xchg
fsubrs
ret
push
addr16
add
mov
push
push
mov
adc
cwtl
push
jp
and
fnstcw
xor
xchg
test
es
xor
xchg
xchg
and
and
jbe
sbb
cmpsb
mov
mov
aad
rcrl
cmpsb
cmp
or
shlb
shlb
cmp
pop
in
cs
daa
outsb
in
sub
aaa
adc
sar
lahf
xchg
pop
fst
int3
push
fwait
test
rorl
loope
into
cmpsb
dec
scas
inc
out
xor
xchg
scas
push
sub
pop
xchg
gs
mov
mov
cwtl
fs
pop
pop
pop
fistl
sub
jb
push
cmc
gs
mov
hlt
jbe
fs
cli
std
xor
clc
lock
cmc
arpl
lods
movsl
loop
push
jge
iret
adc
sub
inc
addb
into
loopne
iret
sbb
mov
ficoml
movsb
pop
aas
rcrl
or
testl
push
jnp
popf
test
icebp
add
inc
out
dec
adc
insb
inc
scas
jae
enter
or
scas
mov
leave
dec
mov
mov
out
arpl
sbb
jnp
ss
push
movsb
cmp
into
cwtl
mov
fdivrl
mov
sbb
cld
out
int
or
mov
push
sub
stos
inc
xor
enter
outsl
sbb
xor
xor
aaa
pusha
pop
pop
dec
push
cmp
inc
lcall
xchg
leave
mov
jo
loopne
aas
sbb
loopne
arpl
shl
cld
jle
xchg
ficompl
mov
add
pop
xchg
pusha
out
push
std
mov
jge
inc
lds
out
je
mov
pop
pop
mov
repz
and
dec
ret
stos
arpl
cmp
out
aad
mov
aas
dec
mov
repz
xchg
mov
out
ficoml
jmp
jl
push
out
mov
inc
jbe
add
pop
lret
test
dec
sarb
sub
pop
adc
inc
push
dec
inc
fistpl
lret
mov
mov
sub
xor
movsl
arpl
outsl
or
lret
stc
add
pop
cs
sbb
mov
adc
popf
xchg
lret
or
lods
aam
jl
adc
push
push
jns
loopne
pop
push
xchg
jg
jno
xor
imul
adc
sbb
jnp
xchg
xor
pop
push
leave
push
adc
sti
mov
repz
fidivrs
add
mov
movsb
xlat
aad
sbb
cmp
sbb
sbb
arpl
xorb
out
orb
insl
xor
sahf
sbb
filds
push
enter
decl
aaa
imul
pop
xchg
stos
inc
push
push
shll
repz
and
pop
lods
sbbb
and
push
mov
inc
nop
and
repz
mov
sbb
cmp
ljmp
rorl
adc
add
xchg
hlt
popa
imul
sub
adcl
push
jecxz
ljmp
nop
mov
push
cwtl
insb
mov
ss
mov
into
sbb
inc
scas
int3
xor
pop
std
jg
or
fidivrl
jge
push
mov
loopne
std
cwtl
lods
orl
cmp
scas
push
stos
rcrb
and
cmp
sub
cmc
sub
adc
fptan
mov
adc
sbb
into
dec
or
cltd
push
lea
jp
mov
xchg
call
aas
push
fs
ret
fdivs
mov
push
les
push
inc
sbb
stos
movsl
xor
scas
sub
fsubr
fimull
jnp
and
inc
dec
adc
stc
test
fmull
push
rcrb
inc
lock
cltd
cmp
mov
addl
xor
lock
jl
std
rcll
mov
scas
orb
repnz
divb
push
popa
xor
xchg
stos
inc
lret
xchg
fs
aas
inc
xor
sti
pop
xchg
push
bound
inc
rcll
jmp
popa
sarb
mov
pop
adc
add
pusha
jno
fcmove
pop
adc
sbb
or
addr16
pop
cmpsb
mov
lcall
std
ljmp
xor
mov
sub
testl
insl
xchg
adc
xchg
lock
jge
mov
pop
popa
xchg
pop
or
inc
dec
pop
in
push
pusha
in
mov
lret
xchg
scas
add
enter
mov
fs
mulb
ret
ja
xor
xor
sarl
mov
lcall
xchg
inc
es
add
xchg
mov
imul
cld
cmp
ficoml
push
pop
xchg
push
mov
or
inc
mov
jbe
in
pusha
cs
std
stc
mov
out
push
test
adcb
mov
rcrb
rorl
mov
rorb
fildl
loop
fists
push
xchg
test
pop
jne
mov
pop
inc
ret
daa
sti
ja
stos
dec
incl
inc
shrb
mov
push
sbb
xchg
orb
sarb
dec
jecxz
add
mov
dec
mov
notb
loopne
movsb
cmp
fincstp
and
jbe
and
xchg
add
pop
mov
lds
xor
jbe
aas
xor
test
pop
ret
push
push
sbb
test
aam
test
out
cmpsb
or
fcmovbe
loope
std
sbb
mov
and
dec
or
aaa
pop
popf
mov
arpl
add
and
mov
ret
iret
out
sbb
bound
insl
dec
sahf
sub
fbld
push
mov
pop
lret
jnp
out
inc
lret
dec
jne
push
stos
movsb
repnz
lcall
icebp
test
mov
into
xchg
push
or
inc
test
inc
add
ljmp
ret
loop
pop
mov
lret
and
int
shlb
xchg
push
into
bound
lcall
iret
fcomps
enter
pop
xor
xor
rorb
xchg
sbb
dec
out
into
out
test
pop
jp,pt
loope
imul
and
sbb
ret
outsb
repnz
mov
imul
dec
into
or
mov
idivl
push
ss
adc
push
js
sub
enter
stos
lods
test
fs
sarb
mov
fwait
orb
in
shll
mov
out
out
jb
stos
outsl
arpl
xchg
jg
ljmp
cmp
std
popa
pop
rorb
add
push
xchg
in
cmc
pop
inc
ds
xchg
xchg
push
ja
jmp
data16
jmp
test
adc
pop
lods
add
xchg
outsl
push
or
fwait
int3
es
mov
dec
popfw
aad
cmc
jecxz
dec
fcompl
lret
cmp
popa
jns
jo
adc
movsb
sbb
push
adc
inc
vandnps
repnz
lcall
dec
cli
idivb
clc
orl
das
icebp
pop
add
mov
mov
nop
ret
movsl
pusha
fstl
enter
jecxz
lods
mov
xchg
push
mov
movsl
mov
cmp
xor
pop
test
fdivs
inc
and
dec
cli
shll
out
and
and
test
repnz
push
jne
mov
xchg
imul
pop
sbb
pop
mov
js
shlb
pop
scas
fsubr
lcall
and
mov
xchg
ret
add
xchg
aam
std
test
pop
dec
orl
loopne
ret
jge
adc
push
lods
xor
aad
xor
fwait
ret
cmpsl
lea
testb
xchg
dec
iret
or
popl
test
or
shrb
add
hlt
mov
xchg
dec
ficoml
add
lock
lcall
pop
divl
shlb
push
mov
cmc
je
pop
std
sub
mov
and
out
or
je
mov
decb
out
popa
and
mov
test
cli
mov
lods
pusha
std
jae
bound
rorb
mull
ret
das
pop
nop
add
jbe
sub
stos
xor
add
aas
xorl
out
jbe
xor
aad
adc
divb
fucom
cld
jmp
fucomi
aaa
jb
rorl
fs
push
lods
pop
stos
mov
in
sahf
jmp
stos
mov
cmp
mov
adc
rolb
jmp
cmp
rdmsr
shlb
mov
das
mov
add
inc
test
scas
jo
shrl
push
lahf
sbb
das
stos
mov
sub
iret
push
xlat
dec
lret
shl
xchg
insb
sub
lahf
and
lds
pop
stos
push
out
jl
jmp
mov
mov
jae
xor
push
popa
les
push
arpl
push
or
jecxz
mov
xor
inc
mov
cwtl
pushw
mov
test
cmpsl
push
cmpsb
add
icebp
jecxz
test
cmpsl
pop
pushf
clc
mov
loop
mov
adc
adc
mov
jne
movsb
jle
jp
cmp
cwtl
clc
repz
cmc
inc
les
ds
push
dec
xlat
or
or
jnp
xchg
inc
fildl
icebp
xor
mov
in
les
arpl
ljmp
aas
cmp
xchg
xor
push
add
jl
icebp
shrb
in
xchg
or
jl
add
mov
adc
mov
and
push
mov
fabs
lret
mov
adc
mov
lret
sbb
ficompl
push
cmpsl
in
les
mov
rcrl
dec
cs
mov
mov
out
mov
das
js
jbe
pushf
jnp
jb
inc
ret
jnp
add
lret
cmovno
xor
pop
loope
imul
aad
xchg
add
jne
fs
das
cmc
mov
and
pushf
in
push
ret
push
out
daa
xchg
sbb
sub
cli
push
xchg
in
jl
out
xchg
mov
lret
cmp
adc
xchg
fisubrl
jnp
int
jns
inc
cmp
mov
mov
pop
inc
movsl
test
mov
std
lods
xor
mov
sbb
lret
add
cs
imul
cmpsl
addr16
add
adc
add
out
jae
sub
lods
movsb
out
inc
fcmovb
xor
and
mov
icebp
pcmpgtw
and
fdivrl
cmp
cmpsb
out
sub
icebp
xchg
stc
in
or
inc
fists
out
mov
pop
jne
pop
fisttps
jle
mov
js
fldz
in
pop
fsubrs
cld
inc
cmp
xor
xor
xchg
fwait
pushl
sbb
int3
xor
inc
cmp
into
lret
xchg
lret
outsb
cmpsl
ret
imul
dec
jno
mov
adc
stos
pop
popa
xor
cmovs
jo
je
rorb
dec
clc
test
sbbb
jl
daa
insl
daa
inc
popf
push
xor
sarb
and
dec
mov
mov
out
imul
add
lcall
icebp
out
jns
fcoml
xor
int3
and
int
xor
test
add
or
imul
das
jge
inc
in
fstpt
sbb
cmpsl
fidivrs
xchg
loopne
popa
pop
jl
ljmp
jp
inc
dec
jecxz
inc
xchg
cmpsl
call
fisttpll
dec
out
mov
pop
and
icebp
push
adcb
sbb
lret
data16
test
aas
sbb
or
out
jno
aam
lock
bound
lods
in
rcl
dec
imul
in
shll
push
sub
adc
mov
push
rolb
xor
ficompl
and
xchg
or
mov
clc
add
daa
pop
test
fsubrs
aas
lea
sub
scas
xchg
ret
loopne
jmp
dec
push
stos
scas
int3
rcll
in
hlt
pushf
sar
std
sub
sahf
das
data16
lcall
imulb
inc
pop
out
leave
arpl
cs
jnp
ljmp
aad
mov
xlat
xchg
push
sbb
dec
pusha
test
stos
sub
inc
or
pop
xchg
int3
jnp
sub
ret
jp
sti
rorb
xchg
test
es
mov
test
cmp
cmp
test
jno
in
xor
aaa
sbb
aaa
cmpsl
sub
dec
jne
push
cli
push
je
mov
dec
iret
push
icebp
insb
jo
inc
cmp
pop
divl
repz
fcomi
insl
outsb
dec
mov
dec
fsubs
or
dec
xor
mov
shrb
les
stc
xor
sbb
inc
mov
cmp
outsb
add
pop
push
mov
rclb
push
repnz
gs
cmp
xchg
mov
rol
arpl
cwtl
aaa
push
fwait
stos
mov
rolb
scas
xchg
or
mov
jns
movsb
in
das
ret
dec
xchg
sub
imul
pop
pop
inc
scas
cmp
mull
xor
mov
add
andl
pop
add
push
loop
pop
add
jle
pop
ret
xor
push
pop
xor
std
dec
mov
cmp
pop
push
or
into
jae
cmp
nop
push
inc
sbb
pop
cwtl
add
fcmove
lds
aaa
lcall
shl
push
aaa
fdivs
aad
lret
mov
jecxz
or
add
stos
jmp
nop
and
scas
sub
cmp
jecxz
or
mov
dec
cmp
cmpsb
in
leave
js
jb
mov
xlat
xlat
cmp
inc
aad
and
ds
add
adcb
das
in
gs
xor
es
lods
pop
loopne
sahf
sbb
pop
sub
pop
call
sbb
jg
mov
out
mov
in
mov
jns
int
or
mov
rolb
xchg
je
nop
imul
mov
negl
and
mov
sbb
jle
xor
mov
adc
mov
gs
in
cmp
jmp
aam
popa
adc
out
lret
lret
lods
out
xor
xchg
inc
clc
dec
shrb
mov
aas
mov
sub
sti
sahf
jo
shl
std
dec
stos
dec
dec
rol
in
jns
sub
cld
cmpb
loop
or
xor
cmpsl
jo
mov
std
in
add
fldcw
test
mov
jns
inc
dec
outsb
adc
mov
xchg
mov
sahf
nop
jle
inc
sub
or
test
xchg
cmpb
adc
dec
xchg
ficoml
xor
insl
inc
clc
jne
sbb
xchg
xchg
push
bound
mov
xor
jge
add
fdivs
fsubs
dec
dec
mov
ja
jmp
cmc
pop
pop
and
imul
sbb
outsb
int
mov
stc
cs
xor
cld
xchg
mov
out
push
jl
mov
jo
dec
nop
pop
popf
push
adc
add
adc
inc
mov
js
and
xchg
movsb
bound
lahf
inc
mov
mov
adc
cli
gs
mov
roll
lods
xor
jo
sub
icebp
popa
adc
in
mov
test
arpl
clc
ror
scas
cmp
mov
xor
std
in
or
jl
or
in
loope
push
sar
mov
mov
pop
rorb
cmp
ljmp
shlb
dec
cmp
sbb
les
fisubrs
pushl
xchg
jg
into
lds
sub
daa
mov
jp
cmpsb
enter
movsl
movsl
sbb
mov
lock
cs
mov
mov
lods
inc
jge
fdivs
xor
xor
mov
xchg
jp
shl
std
test
mov
inc
scas
lds
in
lea
jge
sub
clc
and
stos
cmp
roll
push
xlat
mov
out
int
aaa
sti
push
sbb
pop
popf
scas
repz
mov
push
xor
fbstp
inc
and
dec
pushf
clc
jo
dec
jne
cmp
data16
insl
or
ja
dec
xor
dec
push
add
add
cld
sahf
push
orl
sarl
icebp
orb
jbe
scas
fldt
add
adc
scas
and
mov
pop
pop
mov
ret
dec
adc
mov
jmp
mov
pushf
jbe
std
xchg
push
popa
mov
inc
lret
loop
push
pop
mov
sub
mov
mov
add
pop
and
xchg
pop
push
adc
sahf
cltd
mov
out
mov
fwait
jecxz
test
mov
xchg
inc
push
xor
aaa
xchg
and
xlat
jo
out
ror
fnstcw
lcall
pop
xchg
dec
mov
xchg
rcrl
xchg
shl
cmpsb
sub
mov
data16
pop
mov
fistpl
and
cli
imul
mov
das
xchg
pop
mov
out
notl
fcoms
cmp
loop
outsb
inc
in
mov
pushl
cld
cmp
std
std
pop
and
repz
jae
mov
lret
xchg
or
movb
dec
pop
cmp
mov
dec
lods
repz
inc
mov
and
aas
sub
sahf
pushf
stos
je
enter
stc
nop
hlt
inc
xchg
pop
testb
imul
out
jne
cs
stos
jae
ljmp
outsb
cmpsl
push
roll
mov
push
out
mov
leave
rolb
mov
pushf
cmp
movsl
xchg
dec
pushf
cwtl
arpl
mov
fwait
sbb
rol
dec
and
fs
cltd
add
mov
jle
push
scas
jp
arpl
and
sub
xor
push
test
cmp
cld
cltd
nop
into
ja
js
int
mov
adc
and
insb
xor
mov
subb
jge
pop
pop
and
lret
cmp
cmp
outsl
push
lods
in
imul
fs
push
push
mov
fs
pop
dec
add
xor
cmpl
push
ds
lods
sbb
insl
leave
mov
fists
loop
idiv
cmc
pop
pusha
hlt
or
sti
adc
xor
mov
popf
je
fisttpll
xchg
or
jmp
hlt
dec
mov
in
xor
cmpsb
mov
data16
sarl
dec
jle
leave
mov
jmp
aam
adc
inc
or
movsl
mov
sub
in
imul
add
je
and
lods
mov
shrl
dec
inc
sbb
fxch
jle
outsl
ficoml
fucom
push
mov
pusha
pop
inc
jge
mov
je
or
lret
sub
movsb
cltd
js
push
adc
repz
xchg
popa
dec
inc
lret
mov
mov
pop
cmp
jmp
adc
mov
sub
xchg
adc
js
mov
lods
dec
jb
inc
fcomps
into
in
test
out
dec
pop
pop
inc
cmpsb
lahf
cmp
mov
add
dec
in
shll
mov
pop
dec
cmpsb
mov
push
jp
pop
lods
fnstsw
cmpsl
lahf
stos
ljmp
imul
adc
sub
sahf
cmp
adc
add
pusha
jae
push
and
aaa
aaa
jae
sbbb
in
or
movsl
stc
pop
bound
sub
data16
std
jl
out
pop
jmp
jo
cmpsl
adc
xor
in
xchg
int3
jo
push
dec
lcall
push
mov
call
or
push
fsubr
xchg
daa
sub
in
ja
cs
ret
mov
repnz
ljmp
xor
scas
std
add
xor
call
xchg
mov
cmp
in
xchg
inc
cmpl
xor
cmp
aad
imul
cmp
test
push
fbstp
repz
xsha1
cmpsb
dec
push
in
cmp
and
addr16
arpl
mov
mov
in
fiaddl
inc
and
insl
or
aad
jmp
mov
gs
test
push
imul
mov
jo
fdiv
jo
fiadds
push
out
push
stc
push
ret
dec
pop
rorl
adc
mov
add
cmpsl
xor
jb
dec
out
fisttpll
sub
cltd
in
sub
jae
jo
shrb
fsubs
daa
cmpsl
mov
mov
mov
push
mov
mov
sub
mov
cld
les
outsl
loope
jnp
push
push
pop
call
scas
dec
xorl
jns
adc
fwait
or
cmp
pushf
xchg
arpl
daa
dec
jo
jecxz
pop
stos
lock
test
or
mov
push
cltd
mov
mov
inc
pop
fisubrl
mov
pusha
push
das
jmp
leave
cs
call
ss
imul
test
cmp
sbb
out
add
imul
sub
xchg
mov
in
jmp
mov
pop
dec
push
dec
jo
dec
xchg
jmp
jg
mov
xor
pop
loop
adc
cmp
fstpt
mov
daa
shrb
in
insl
pop
xor
push
mov
jne
leave
gs
in
pop
inc
in
test
sub
leave
pop
cmp
call
sub
add
out
inc
pushf
repnz
xor
jle
mov
jge
fwait
pop
aam
and
fsubrl
repnz
insl
arpl
sub
mov
cltd
sbb
dec
push
in
pop
enter
leave
and
or
es
ror
cs
pop
inc
outsl
into
push
push
out
cmp
sbb
into
bound
push
cmp
repnz
mov
or
inc
xor
iret
sub
inc
gs
movsb
sub
mov
fidivrl
sti
adcb
popf
leave
mov
rolb
push
stos
xor
push
out
cmpsl
cmpsb
inc
cwtl
xchg
cmp
rcrb
mov
pushf
adc
push
je
andl
das
pop
sbb
adc
nop
pop
lods
jmp
out
jp
pop
pusha
das
mov
mov
test
std
or
jo
and
cmp
or
xchg
fldenv
je
mov
cmpsl
adc
repz
addr16
scas
mov
addr16
sub
pop
cmp
in
fdivs
push
cmpl
dec
clc
pop
jno
leave
popf
xor
xor
sub
sti
push
popf
dec
scas
mov
leave
xlat
fnstsw
and
or
dec
nop
sbb
mov
ds
mov
fdivrs
adc
ja
sbb
repnz
jb
adc
and
adc
lea
sbb
shrl
les
mov
lock
in
lret
and
ja
adc
jnp
inc
ret
sbb
aas
int
stos
push
cmpsb
ds
out
jns
dec
je
out
pop
lds
in
push
push
mov
movsb
push
mov
int3
or
mov
sarb
lock
out
adc
mul
pop
dec
cld
popf
cmpsl
in
jne
sub
and
adc
jle
push
add
imul
jp
daa
add
int
adc
fs
cmp
sub
scas
adc
pop
mov
xor
test
xlat
jns
xchg
in
scas
adc
sub
popf
popa
repnz
sub
push
in
mov
scas
cmc
jno
fwait
push
mov
mov
mov
dec
inc
push
jg
pop
mov
xchg
fwait
mov
cmc
iret
inc
out
std
xchg
test
pop
pushf
xchg
std
mov
in
iret
fisttps
pushf
out
lods
lahf
xor
add
out
imul
shl
or
pop
inc
movsb
dec
in
rcrb
inc
jbe
mov
sbbl
inc
pop
dec
out
inc
hlt
sub
fld
jle
cmp
push
int
lahf
leave
fcoml
pop
les
push
adc
leave
add
leave
in
mov
imul
adc
mov
push
repnz
mov
bnd
mov
imul
clc
stc
fwait
int
lock
mov
xchg
enter
xchg
xchg
cs
mov
lea
and
data16
jge
test
std
pushf
in
mov
mov
data16
and
pop
addb
pop
push
rcll
jne
xor
push
pushf
xor
pop
jl
cmpl
bswap
nop
outsl
shl
pop
push
pop
call
cltd
shlb
and
xor
xchg
cmpsl
xchg
iret
xor
xchg
aad
mov
xor
daa
out
cmc
rcll
testb
movsb
cmp
sub
pusha
pushf
cmc
shll
inc
push
lods
sahf
push
fldt
mov
cmp
repnz
leave
sub
push
sbb
pop
shrl
repz
cs
mov
and
cld
add
loope
data16
pop
cmpsb
mov
sbb
lahf
pop
rorb
pop
fnstsw
sub
test
cmpsb
lcall
aad
sbbl
mov
in
daa
push
das
hlt
popa
les
in
adcl
imul
pushf
dec
mov
mov
div
adc
add
sub
call
jo
fisttpll
cltd
or
inc
addr16
rcll
xor
mov
fdivp
ret
jae
leave
add
int
int
pop
fcmovnbe
shll
test
sub
jmp
call
les
movsb
ret
jmp
cmp
insl
in
mov
js
in
dec
xor
inc
mov
jb
sub
and
and
dec
and
cmp
cmc
ss
cmp
jle
mul
jbe
xchg
jmp
cmp
sub
sbbl
je
sbb
xchg
mov
in
imul
push
movsl
mov
mov
pusha
pop
rcr
xor
into
fistl
pop
push
cmp
lret
pop
lcall
adcb
lds
mov
fs
cmpl
mov
adc
dec
clc
mov
sbb
js
lods
lea
rolb
popa
adc
into
out
dec
popf
out
out
mov
insl
arpl
jmp
lods
inc
in
xchg
repz
and
in
push
pop
test
les
es
scas
cwtl
and
jbe
sbb
add
jle
icebp
cmp
jp
pop
push
pop
lret
xlat
sub
or
mov
add
or
syscall
inc
and
sbb
xor
mov
add
mov
xchg
pop
and
push
fucomip
insb
cmp
or
add
add
mov
cmp
gs
sub
pushf
sbb
jno
int
enter
lret
or
scas
ss
ss
ja
call
sub
lret
adc
ret
adc
pop
mov
sbb
rcll
call
cld
cwtl
pop
xlat
cltd
pushw
mov
loopne
xchg
add
mov
stos
ja
out
lret
test
and
das
cmp
in
adc
push
cwtl
mov
jp
xor
sub
fucomip
or
les
sub
lock
into
cmp
jecxz
stc
mov
dec
mov
xor
out
push
cmp
and
aaa
xlat
neg
xchg
aas
cltd
outsl
scas
cltd
fdivrl
and
or
hlt
xchg
add
decb
lret
sbb
outsl
mov
out
cmp
movsb
out
leave
push
cmp
push
int
jae
aas
loope
iret
push
mov
ljmp
mov
fdivr
push
add
movsb
inc
adc
inc
mov
sub
dec
mov
pop
mov
rcll
int3
mov
cmpsl
insw
jge
lret
inc
inc
mov
sbb
adc
xchg
mov
cwtl
push
mov
outsl
mov
ret
pop
test
xchg
out
xchg
adc
push
xor
xor
pop
jp
fcomps
lea
nop
inc
shl
add
dec
pop
dec
das
fdivrs
mov
cmp
or
je
push
pop
push
adc
xor
cmpsb
xor
fdivrs
shr
iret
mov
jmp
xor
fisubrl
fldenv
xchg
mov
fnstsw
nop
outsb
jns
or
pop
jecxz
jge
xchg
and
test
xchg
shlb
mov
or
mov
mov
loope
adcb
adc
incl
and
push
inc
inc
pop
imul
jnp
out
and
filds
mov
loop
push
jp
jle
call
xchg
mov
mov
sbb
jmp
shl
scas
cmp
call
sbb
sbbl
lea
cmp
out
repz
or
inc
mov
repnz
ficoms
push
mov
neg
arpl
leave
or
insl
push
mov
scas
stos
adc
adc
rcrl
idivb
insb
stos
pop
push
cmp
ret
popa
iret
mov
or
adc
fnstsw
inc
inc
push
scas
fistpll
add
cltd
adc
hlt
push
jecxz
popa
xchg
loop
shl
pop
insl
sbb
pop
insb
dec
test
mov
test
sarl
lahf
dec
incl
les
jge
leave
xchg
jns
cmp
mov
xor
out
mov
movsl
pusha
or
mov
inc
jno
jmp
sbb
mov
cld
loopne
enter
nop
mov
jo
test
dec
or
add
fcoml
test
mov
test
imul
inc
aam
rorb
sub
in
mov
inc
pop
cld
mov
push
ljmp
pop
movsl
daa
xchg
sbb
leave
xchg
pop
jp
movsl
xor
dec
inc
jbe
lcall
mov
ss
dec
iret
scas
ret
mov
lss
mov
cld
dec
mov
out
mov
mov
mov
mov
je
mov
cwtl
push
push
or
jl
push
cmc
cmp
rcll
jne
fwait
int3
sub
std
jbe
shlb
and
sbb
das
daa
mov
inc
adc
sub
outsl
fwait
js
cmp
fidivs
lea
or
sahf
loope
cmp
scas
mov
cmp
cmc
icebp
xchg
cmpsb
sub
mov
pop
or
xor
sbb
xchg
xor
mov
movb
rolb
das
aam
stos
out
xchg
sti
sub
pop
hlt
lods
ret
cmpsl
inc
ret
pop
ljmp
push
imul
pop
sbb
rolb
pop
cwtl
xchg
mov
movsb
add
inc
aaa
adc
mov
pop
fcomps
pop
pop
pop
jns
mov
sti
jle
loopne
mov
lcall
popa
or
inc
lcall
loope
push
nop
leave
mov
cmp
cmp
inc
jmp
mov
push
test
popf
testl
inc
sub
xchg
cmp
enter
rclb
mov
push
rorl
jae
icebp
loop
fsubs
leave
pop
cmp
mov
aad
ds
fidivl
or
pop
ja
mov
int3
push
icebp
dec
iret
sub
ljmp
lret
jns
mov
xlat
mov
test
imul
mov
mov
pop
cs
cld
and
jae
mov
out
lea
jbe
push
aas
in
in
out
mov
mov
inc
mov
mov
mov
adc
sar
fstpt
adc
cmp
xchg
mov
lods
mov
xor
push
inc
mov
lods
leave
leave
inc
in
mov
stos
fisttpll
mov
fiadds
mov
and
xchg
push
pop
mov
mov
inc
nop
sahf
mov
or
in
or
in
enter
and
sub
cmp
adc
outsl
xchg
mov
fstpt
xchg
pop
outsl
mov
sub
sbb
add
inc
fdiv
jae
xor
das
mov
loope
ljmp
and
jno
dec
lea
cwtl
add
push
push
cmpsl
and
ss
dec
jle
leave
mov
mov
test
dec
jns
das
fdivrl
jb
out
dec
int3
xchg
int3
aam
xor
movsb
inc
gs
and
mov
xor
inc
xchg
jae
cmp
insb
out
pop
mov
fs
cmp
cli
xchg
add
shrl
out
lds
cmp
fs
jl
in
mov
sub
pop
les
iret
int
jl
outsb
es
int
iret
xchg
mov
fisubl
sub
cltd
imul
jo
mov
add
repnz
push
in
in
shll
sub
dec
cli
and
dec
setl
xor
adc
scas
das
xchg
and
push
adc
cmpsl
pop
and
or
pusha
or
scas
int
and
pop
outsb
xchg
out
mov
mov
cmp
jo
push
scas
jns
and
in
pusha
cmp
jp
aaa
out
dec
into
femms
mov
outsb
out
push
sbb
jb
or
dec
std
inc
mov
inc
sbb
push
cmp
mov
mov
xor
inc
add
push
fiadds
sbb
jnp
fldenvs
jno
scas
mov
dec
pop
inc
dec
int
push
push
subb
clc
push
sub
pushf
and
or
or
and
add
sbb
mov
nop
sbb
popf
jg
sbb
inc
adcb
push
mov
insb
gs
cmp
lods
inc
data16
movsl
xor
cs
jge
lds
pop
stos
mov
add
jecxz
sub
in
data16
mov
push
sbb
xchg
aam
cltd
shll
cli
mov
sub
sub
imul
xor
insl
pop
ss
out
dec
and
and
sbb
dec
mov
xchg
clc
outsl
adc
add
jne
repz
jnp
test
cld
xlat
mov
out
je
adc
mov
push
sahf
jbe
push
jl
je
arpl
jns
xlat
decb
cmp
cmp
lods
mov
and
inc
das
shrl
mov
inc
lods
pushf
pop
scas
js
push
arpl
cli
dec
inc
inc
das
cmp
mov
or
xchg
mov
mov
gs
xor
pop
mov
iret
rol
aas
loop
imul
iret
jge
out
lods
lock
xchg
or
mov
dec
or
inc
repnz
inc
ret
xchg
clc
inc
cli
pushl
mov
mov
jb
add
ret
mov
or
push
mov
js
pop
ficoml
sahf
mov
pop
in
lret
dec
fldl
sbb
add
jnp
lods
sub
mov
or
xchg
mov
mov
sahf
rorl
popa
sbb
adc
scas
nop
fstps
test
or
mov
inc
cmp
dec
adc
mov
sahf
lods
and
pusha
mov
mov
adc
loopne
cli
in
or
hlt
cmp
and
ficomps
popa
and
jb
push
sub
push
pop
ret
jne
jge
ret
int
aad
inc
cmpsl
addb
jae
adc
or
push
jne
das
push
dec
xor
add
adc
pop
fsubrs
cld
push
insl
cmp
cmp
inc
ret
cmpsl
mov
adc
lret
sbb
shll
mov
outsl
push
loope
jp
pop
ja
or
push
std
sub
sbb
cmp
dec
scas
push
mov
push
cmp
stos
mov
mov
and
xchg
mov
ret
aad
push
mov
mov
inc
imul
mov
cmp
mov
mov
imul
cmp
push
xor
and
mov
mov
out
jg
inc
pop
es
outsw
gs
mov
sub
xor
pusha
mov
mov
movsl
fdivs
mov
xor
xor
cld
mov
cmp
call
cmp
pop
adc
andl
mov
push
mov
jp
xor
rclb
cli
sub
pop
jo
dec
fadds
orl
or
sub
icebp
mov
mov
mov
les
lret
fsubp
fisttpl
in
pop
xchg
push
stos
ret
pop
lahf
mov
outsb
mov
add
add
mov
call
xor
pop
add
scas
nop
adc
or
inc
push
aaa
add
jmp
add
fcoml
mov
rclb
mov
addr16
insb
mov
lods
dec
psadbw
dec
pushf
ss
xchg
push
jbe
movsb
ret
popf
cmp
sbb
lods
xchg
jnp
mov
jns
mov
fwait
shll
loopne
rorl
lahf
push
sub
mov
dec
aad
arpl
or
mov
ds
int
mov
add
andb
mov
pushf
in
xchg
sub
push
and
xchg
or
enter
pop
or
pop
push
cwtl
dec
inc
cs
jl
pop
lods
cwtl
aas
ja
shl
hlt
and
cmpl
push
cmc
jo
ret
pop
add
mov
cmpsb
mov
cmpsb
pop
fiadds
jge
push
xchg
sub
xchg
cmp
mov
and
add
dec
fsubl
dec
fwait
xor
cltd
xorb
cli
mov
mov
in
xor
jae
lret
add
cwtl
adc
icebp
enter
clc
hlt
hlt
mov
mov
shll
jg
leave
push
cltd
or
push
movsb
mov
aam
fists
leave
inc
ja
aad
mov
imul
and
int
aam
adc
les
sbb
pop
fiaddl
xchg
and
cltd
cmp
gs
inc
mov
pop
aas
dec
cs
bound
mov
mov
sti
addr16
popfw
loop
inc
cmp
lds
mov
ss
xor
inc
push
ror
imul
dec
shlb
adc
pop
fisttps
push
pop
scas
cmc
or
std
into
das
sbb
mov
inc
stos
mov
cmp
adc
cld
js
aaa
leave
fidivrl
imul
xchg
es
pop
aas
xchg
test
stos
ja
and
out
addr16
psrad
lods
inc
pop
pop
adc
lods
cwtl
lds
in
cmpsb
pop
out
stos
xchg
imul
les
xchg
loope
cmp
mov
jae
out
lahf
in
mov
xchg
xchg
mov
xorb
add
mov
lahf
xor
cs
cmp
fstps
cld
cwtl
nop
jle
mov
cmp
pop
jmp
add
cmp
pop
push
pop
pop
test
sbb
cmp
in
rcrb
jns
out
sbb
cmp
and
sbb
xchg
xor
and
inc
outsl
out
sub
shlb
andb
subb
fcmovu
jge
cli
gs
jo
mov
xchg
inc
imul
jmp
pop
mov
sub
mov
dec
outsb
sarl
and
sub
add
push
mulb
pop
leave
jecxz
bound
pop
fs
leave
xchg
mov
nop
fwait
scas
imul
fdivs
loopne
pop
enter
adc
popa
dec
push
mulb
add
mov
mov
mov
lods
scas
pop
stos
aaa
xchg
pop
add
inc
fnstsw
fisubs
je
jle
hlt
cmp
scas
std
sub
mov
addr16
or
jge
rclb
add
scas
pop
inc
xchg
push
mov
push
ret
mov
bound
sbb
push
jb
lcall
loop
rorl
ja
aam
aaa
fldl2e
dec
mov
int
imul
popf
sub
and
ret
xchg
mov
and
dec
jo
dec
adc
jb
cs
mov
into
je
xor
cmpsb
xchg
aad
pop
pop
adc
inc
callw
add
aaa
cld
cwtl
jp
testl
scas
popf
jbe
mov
cmp
neg
lea
xchg
jle
shl
outsb
and
add
faddp
stos
push
xor
cs
stc
jne
sub
test
aas
cmpsb
fs
pop
in
call
xchg
out
inc
push
sbb
xor
ret
jp
loop
out
nop
mov
adc
hlt
mov
lods
or
push
or
pushf
sarb
lret
cmp
lock
sahf
bound
inc
inc
xchg
fsubr
sti
xchg
pop
imul
and
push
sub
or
int
mov
imul
mov
movsl
outsb
loope
pop
xchg
xchg
notl
std
adc
cmp
adc
addr16
jl
push
jae
cmp
pop
cmpsb
mov
push
dec
xor
sahf
inc
sbb
adc
lods
imul
or
cld
loop
in
cld
add
cmpsb
andb
addr16
mov
shr
push
aaa
and
dec
or
out
jle
sub
ljmp
dec
mov
push
lea
test
adc
mov
fsubrs
adc
jnp
inc
or
cmpb
cmp
sub
clc
adc
insl
int3
mov
js
or
push
mov
notb
inc
test
repz
mov
loopne
cmp
mov
cmp
mov
sub
xor
and
sbb
add
push
xor
shl
stc
aaa
je
sub
sub
orl
jmp
ja
rcr
or
dec
mov
mov
arpl
mov
cmp
imul
pusha
outsb
mul
cltd
xor
xor
adc
mov
clc
push
sub
lea
xchg
push
add
aad
out
push
or
push
cmp
add
sbb
dec
das
push
xchg
test
andb
xchg
mov
mov
enter
shlb
faddl
icebp
push
sbbl
aam
mov
sub
or
imul
jecxz
mov
cmp
xlat
test
out
std
bound
cmpsl
dec
ja
ljmp
jge
xor
xchg
imul
push
aam
rcl
mov
in
lcall
data16
ljmp
call
pusha
mov
pop
lods
mov
mov
loopne
lret
or
lcall
xor
outsb
xor
pop
and
push
stc
mov
jecxz
imul
jbe
cli
std
lahf
push
dec
lea
aaa
push
mov
push
xchg
push
jno
loope
movsl
jae
ficoms
pop
jl
scas
cpuid
cmpb
call
pop
mov
push
fistpll
xchg
xlat
jb
adc
xor
sti
add
dec
or
js
xor
dec
jecxz
mov
ficomps
leave
ret
mov
repnz
movsl
add
sub
cmp
hlt
mov
pop
or
pop
xor
xor
mov
jne
out
int3
aaa
std
sub
jno
test
insb
loop
sbb
daa
addr16
in
lahf
mov
aam
lea
aaa
sti
mov
pop
or
sahf
xchg
dec
addr16
jns
in
popf
push
clc
stos
and
sbb
nop
cmpsl
xchg
jnp
test
or
add
insb
outsb
in
xor
adc
inc
mov
sub
lods
fistl
sub
mov
xchg
xchg
lcall
push
cmpb
sbb
int
push
or
mov
adc
lods
pop
clc
inc
pop
movsl
xchg
dec
cmp
dec
add
cmc
scas
out
adc
ja
in
add
adc
adc
cld
lret
dec
jns
jmp
shll
push
js
ds
xchg
sbb
lahf
dec
aam
loop
mull
aas
pop
xlat
dec
sub
jp
mov
call
psubq
int
push
xor
jo
xor
cmpl
sbb
pop
iret
das
inc
dec
sub
push
fmull
jae
pop
xor
out
inc
ja
imul
jbe
cmp
jle
push
jmp
xor
jg
cwtl
sti
mov
xchg
mov
out
pop
jmp
das
sub
pop
cmc
bound
xor
mov
shrb
sbb
sub
jmp
xchg
ljmp
or
xor
pop
aad
cmc
cmp
test
in
addr16
and
out
jecxz
bound
sbb
xchg
and
push
xor
and
cli
pop
lea
addr16
lret
and
loope
les
pop
imul
adc
push
cli
or
add
jnp
mov
mov
inc
in
mov
push
leave
push
icebp
adc
or
fisttpll
mov
mov
enter
add
icebp
jge
xor
dec
jns
or
fsubrl
dec
fwait
mov
mov
sbbl
cmp
mov
push
adc
scas
jg
test
int
int
dec
sti
jp
shlb
movsb
mov
aam
out
dec
jecxz
imul
aaa
clc
cmp
cmpsl
sub
pusha
test
data16
repz
and
imul
int3
pop
lret
imul
xor
sbb
mov
lcall
or
popa
and
inc
loop
mov
movsb
add
xor
iret
iret
jo
inc
inc
jae
jg
fcoml
fists
nop
jae
in
addr16
int
push
outsl
pop
inc
fucomi
addr16
sub
les
out
ja
leave
pop
mov
sub
or
mov
subl
jae
es
cmpsl
out
jb
push
xor
xorl
or
nop
fidivrs
outsb
and
push
xor
stos
das
xlat
test
jnp
mov
xor
jmp
pop
fisubl
pop
call
ret
psubw
in
xor
add
pushf
mov
mov
push
data16
mov
push
insl
paddq
adc
jnp
adc
ret
inc
jg
jnp
and
arpl
mov
xchg
rol
inc
dec
dec
mov
push
testb
xstore-rng
cmpsl
int3
out
in
xor
lcall
pop
and
jne
push
lret
shll
fildl
std
sub
aad
ljmp
pop
dec
nop
cmc
and
mov
bound
das
cmp
mov
in
test
sbb
div
scas
cmovge
jle
inc
movsl
adc
push
xchg
push
aad
pop
or
hlt
mov
xchg
mov
jp
fdivl
xchg
jmp
jmp
stc
testl
adc
push
sbb
adc
adc
dec
cmp
dec
mov
sub
roll
mov
leave
addl
addl
ret
inc
andb
cmp
pop
rorl
jo
loope
scas
xor
movsl
mov
jbe
dec
lret
add
pop
push
adc
add
aaa
jecxz
cli
rolb
xchg
out
inc
adc
ret
jae
andl
xchg
mov
out
pushw
jae
sub
pop
dec
mov
movsl
loope
movsb
test
movsb
sbb
push
jns
les
lret
dec
aam
inc
xorb
push
jo
xchg
dec
push
insl
xor
into
cwtl
jecxz
and
push
ja
pop
and
mov
jne
mov
push
in
and
inc
pop
mov
xor
test
lcall
push
fs
inc
xchg
cld
test
fsubrs
mov
mov
in
pop
imul
test
push
adc
pop
push
jbe
mov
and
and
sbb
loopne
mov
scas
pop
and
sahf
push
pop
pop
mov
pushf
shr
and
aad
enter
jns
ret
mov
rorb
in
in
sbb
cmpsl
mov
sbb
add
adcl
out
xchg
add
mov
dec
push
xor
scas
push
push
mov
repnz
adc
fdivrs
cmp
bound
stos
xchg
jbe
xlat
cmp
push
test
inc
scas
test
jge
xor
mov
imulb
out
cmpsl
xor
adc
cmp
mov
fucomip
dec
mov
push
nop
arpl
test
imul
push
pop
xchg
out
outsl
cld
mov
cltd
mov
outsb
clc
ja
pop
mov
xor
mov
inc
dec
ficomps
aad
test
andl
jge
jmp
iret
or
vmovss
adc
xchg
jae
adc
lret
stos
sahf
pop
adc
fwait
push
shl
ret
jge
call
cmpsb
rorb
js
icebp
cltd
es
in
aad
arpl
mov
add
shl
icebp
movl
popa
aaa
inc
push
xchg
cmpsl
clc
mov
int3
popf
mov
cmp
lcall
mov
enter
arpl
test
fmull
cmpsb
xlat
enter
and
dec
mov
dec
cmc
adc
pusha
stos
sub
cltd
enter
rcrl
mov
addr16
and
popf
adc
inc
push
les
xchg
addb
shrb
and
in
mov
inc
or
jo
or
inc
cmpl
xlat
fimull
arpl
mov
jg
rcrb
lods
fildl
jecxz
cmp
in
mov
cmpb
ret
jb
aas
dec
xchg
enter
je
cmp
scas
pop
subb
arpl
and
addr16
aad
repz
ljmp
data16
adc
out
or
sahf
scas
add
inc
or
jecxz
cld
jo
lds
mov
in
sbb
sub
xchg
mov
add
dec
popa
mov
push
movsl
les
faddp
lock
aas
push
arpl
xchg
mov
mov
lret
popf
mov
xchg
in
adc
int
insb
push
das
popa
sub
ja
xor
sub
pop
scas
sub
cmpl
cmc
lcall
pop
mov
pop
jnp
adc
dec
mov
push
rolb
mov
decb
sub
jno
ja
mov
test
add
pop
mov
bound
jmp
mov
out
cmp
cwtl
jmp
rcl
adc
daa
mov
clc
fisubrl
cmc
inc
scas
cltd
lcall
add
pusha
add
push
jge
inc
iret
inc
das
xchg
pop
sarl
xchg
movq
out
cmp
icebp
jns
call
int
ds
xor
sbb
push
pop
loop
lcall
jo
jo
sbb
addr16
jp
mov
or
decb
fwait
inc
mov
hlt
push
mov
mov
loop
lea
movsb
push
and
aas
stos
orb
cwtl
mov
xchg
cmpsb
in
fidivrs
push
jmp
aas
icebp
rcll
nop
xor
stos
clc
adc
mov
scas
jp
mov
out
pop
test
sbb
pop
dec
dec
sub
sbb
ret
rclb
ja
movsb
in
jnp
lock
icebp
push
mov
or
push
sbb
movsl
lock
fs
push
or
inc
cmpsb
mov
insb
xchg
jbe
cld
sub
sbb
add
or
cmp
mov
icebp
xchg
insb
faddl
sub
ret
sub
addb
int
stos
mov
in
sub
rorl
lods
and
ficoml
filds
sti
xor
adc
adc
lret
rcll
xchg
xor
or
lea
add
out
aam
adc
arpl
sbb
testl
cmp
mov
sbb
loopne
dec
pop
mov
jns
out
mov
clc
jno
adc
cmp
test
jb
mov
mov
xchg
dec
out
xchg
mov
xchg
lds
aam
dec
sub
hlt
cwtl
pop
push
adc
fbstp
std
push
pop
nop
test
repnz
add
or
mov
mov
push
rcr
out
mov
mov
stc
sub
decb
insl
aas
mov
push
iret
cli
pop
sub
xor
or
push
lahf
shrb
test
ja
les
mov
inc
jg
test
inc
fisubl
pusha
xchg
ret
mov
mov
xorb
xor
mov
or
imul
rolb
sub
lods
test
pop
cld
fldenv
fisubrl
and
push
lock
outsl
push
push
or
cmp
and
sub
jmp
push
sbb
xor
in
mov
push
imul
mov
inc
sub
mov
mov
aad
dec
enter
push
add
adc
outsl
mov
xchg
cmpsl
cmc
rorb
inc
jmp
adc
test
cmp
sbb
out
push
outsb
arpl
es
fstpl
mov
xor
mov
lds
lret
inc
scas
mov
push
imul
and
sbb
mov
push
jecxz
int
xchg
xchg
loope
test
scas
cld
je
pusha
push
cmp
icebp
adc
xor
xchg
lods
cwtl
fiadds
mov
jbe
push
adc
sbb
push
adc
pop
pop
add
call
mov
inc
sub
lods
enter
loop
jo
mov
insl
popa
leave
pop
fsubs
test
fucomip
ror
stos
push
icebp
add
xor
xchg
sbb
inc
sbb
xchg
dec
pop
loop
sti
fdivr
xor
mov
adc
in
aas
sbbl
mov
dec
lea
sbb
lds
push
call
in
loope
mov
cmc
test
ljmp
mov
push
push
xor
and
dec
in
hlt
int
mov
jb
push
mov
push
pop
in
mov
push
pop
xorb
js
movsb
add
popa
arpl
mov
out
stos
mov
sahf
pop
xor
arpl
mov
xor
adc
fists
icebp
aad
in
pop
push
fwait
pop
jle
inc
sbb
lea
add
rcll
adc
mov
clc
fcompl
movb
rcrb
in
push
push
push
mov
push
fwait
xlat
div
int3
std
scas
jge
xchg
jb
int
mov
jmp
push
push
arpl
xor
out
dec
movsb
add
aas
popa
bound
push
out
xor
sub
fs
push
jb
push
test
xchg
jns
xchg
stos
addr16
daa
in
loop
fwait
pop
hlt
flds
cbtw
and
cmp
and
and
adc
div
or
test
mov
das
mov
push
pop
inc
sbb
xchg
enter
pusha
add
lret
jae
jle
popf
jb
inc
mov
adc
jno
xor
arpl
movsb
add
mov
mov
sbb
rcll
or
dec
add
test
xchg
add
test
insb
xor
sbb
scas
lods
push
rol
and
sbb
setns
hlt
enter
pop
dec
scas
rcrb
fdivrs
and
ljmp
jg
cmpsl
jb
mov
adcl
xchg
jno
sti
mov
movsb
push
push
push
popa
pusha
xor
push
fwait
mov
fstl
adcl
or
push
xchg
test
mov
out
idivb
inc
push
jp
and
and
xor
mov
xchg
cld
sbb
leave
pop
fiaddl
pushf
sti
lods
das
mov
push
pop
pop
sub
lcall
andb
das
ja
inc
mov
jno
test
pop
cwtl
pop
popa
pop
test
push
repnz
sbb
call
xor
inc
test
xchg
pop
pusha
xchg
cmpsl
leave
stos
daa
lock
push
mov
and
fwait
xchg
push
rcl
cmp
mov
imul
lret
test
test
push
pop
in
and
and
enter
sub
insb
mov
adc
jno
movzwl
cld
lds
movsb
or
push
pop
push
adcl
cltd
stos
lcall
push
insl
xor
dec
test
cwtl
mov
mov
fwait
push
int3
scas
inc
and
lea
popa
inc
and
stos
adc
or
int3
hlt
lret
xor
test
mov
sahf
cmpps
cmp
push
pop
outsl
inc
and
mov
cmpb
sahf
sbb
inc
popf
mov
jno
cltd
shll
cmp
popa
pop
xchg
jbe
hlt
out
push
cwtl
and
sbb
std
push
insl
jecxz
xor
push
test
cltd
sub
movsl
mov
daa
repnz
pop
fwait
push
inc
movsl
inc
and
int
incb
dec
and
xor
push
or
hlt
int3
mov
test
lahf
cltd
int3
das
xchg
dec
and
adc
cmc
mov
addl
jb
xchg
push
mov
daa
scas
push
adc
imul
int3
xor
mov
movsb
or
jg
pop
or
jno
push
xchg
xchg
ljmp
pop
sub
push
mov
test
lcall
daa
repz
push
inc
and
ja
jne
and
es
or
mov
int
add
add
xlat
das
xchg
or
pop
adcl
mov
lcall
gs
test
mov
mov
push
setge
pop
lods
xor
daa
add
andb
sti
loopne
xchg
or
sbb
adc
push
xor
push
push
add
fwait
aas
mov
hlt
test
fwait
push
cs
inc
and
and
jb
push
xlat
jmp
imul
push
or
hlt
into
rorl
xchg
adc
mov
pushf
sbb
mov
ret
es
cmc
les
out
fwait
jge
mov
cmp
push
push
adc
pusha
aaa
loope
clc
popf
cmc
mov
pop
notb
testl
sbb
push
adc
push
leave
je
add
leave
xchg
xchg
mov
xor
push
movsb
test
mov
and
call
outsl
and
sarb
push
or
mov
xchg
xchg
aaa
in
das
test
hlt
sbb
mov
lcall
push
xchg
aaa
mov
vxorpd
shr
notl
jmp
or
insb
dec
push
clc
psadbw
xchg
clc
lret
pop
daa
push
imul
cmp
popf
push
lahf
xchg
mov
mov
jnp
and
pop
pop
push
fsts
jp
mov
sub
pop
dec
cwtl
hlt
shl
and
mov
mov
sbb
mov
lods
lcall
inc
xchg
cld
jb
imul
jno
dec
divb
testb
popa
pop
loop
push
stc
cltd
add
xchg
outsb
rcrb
loop
push
push
fisttpll
fistps
add
testl
inc
es
stc
aam
push
ficompl
pop
sbb
push
mov
cs
jno
shlb
ficomps
mov
loop
imul
mov
mov
push
or
jno
aad
xor
call
mov
push
pop
aaa
push
cli
and
pop
xchg
in
sbb
cmp
cmpsl
hlt
das
push
addr16
test
lahf
addr16
lahf
jns
daa
clc
rcrb
daa
push
or
clc
dec
inc
push
and
jo
push
add
stc
cmp
movsl
aad
xor
xor
xchg
lcall
xor
mov
adc
push
sbb
or
sub
pop
or
hlt
jne
mov
push
into
sub
sti
lods
adc
sbb
inc
push
sbb
push
icebp
sahf
test
mov
out
dec
daa
stc
pop
cmpsl
fwait
dec
jl
inc
sub
push
and
sarb
fdivl
or
add
js
roll
cmp
cmpsb
pop
push
xor
mov
lea
mov
enter
lret
or
push
or
jno
jmp
shlb
inc
and
cld
aaa
and
nop
shlb
push
gs
fildll
push
jnp
test
mov
gs
daa
cli
in
fwait
dec
repnz
inc
sub
and
ss
fnstsw
movsb
and
test
add
outsb
hlt
aam
dec
xchg
shrl
shlb
pusha
mov
and
bound
mov
jae
inc
add
or
push
jno
jae
xor
popa
mov
adc
pop
push
std
shrl
popl
sbb
pop
push
fs
das
pop
add
add
mov
daa
sti
outsb
mov
inc
sub
sub
cmc
lods
and
lds
sbb
push
jnp
add
pop
xchg
dec
and
xor
mov
shrw
lcall
adc
mov
xor
mov
mov
add
jno
std
sub
icebp
xlat
stos
mov
push
xor
pop
mov
push
arpl
das
pop
mov
fisubs
push
sub
fwait
dec
fidivrs
inc
sub
hlt
and
push
fisttps
and
cwtl
test
add
arpl
test
dec
stos
sbb
test
mov
lea
jae
sub
pop
pop
push
ret
add
xchg
mov
push
cmpsb
add
call
aas
pop
lea
sbbl
cmc
mov
test
movsb
sbb
xchg
lcall
fwait
dec
push
xor
push
inc
and
cwtl
push
push
loopne
ret
and
and
hlt
xlat
stos
insl
xchg
xor
inc
xor
sbb
subl
lcall
sti
aad
lock
jae
mov
and
cmp
jo
adc
out
ret
xchg
mov
push
sbb
adc
mov
jnp
popa
imul
cld
sahf
in
movsl
mov
sbb
decb
fwait
dec
lret
sub
push
add
loope
into
and
lods
lcall
xor
add
xor
xchg
sbb
sbbb
cmc
mov
jp
jae
sbb
mov
lahf
sub
add
in
jo
fwait
dec
xor
cmp
push
xchg
in
adc
mov
insb
sbb
xchg
stos
das
pop
sub
fcmovu
cmpsb
sub
or
fwait
dec
inc
sbb
sbb
icebp
test
push
loop
fsubs
test
lret
sbb
movsl
push
outsb
cmp
fnstcw
sti
iret
lods
fwait
push
xor
mov
adcl
cmc
mov
add
jae
into
mov
sub
pop
add
push
xor
scas
andl
add
mov
push
pop
push
mov
test
cmpsl
mov
cwtl
xchg
sub
daa
add
icebp
fwait
inc
mov
inc
das
movsb
pusha
and
cli
out
push
jecxz
jecxz
cmpsl
icebp
rcrb
scas
push
std
in
hlt
fimull
xchg
xchg
lock
lods
and
sbbb
mov
jmp
lret
xor
gs
add
inc
pop
add
pop
xor
and
adc
jle
adc
mov
push
sbb
fwait
push
pop
int
das
pop
inc
repz
test
adc
add
pop
inc
xor
imul
jo
push
in
out
and
dec
mov
hlt
fcmovnbe
xchg
xchg
or
push
js
jne
insb
por
jg
cmp
mov
rcl
xchg
sbb
mov
mov
cmp
int
insl
cmp
jmp
insb
mov
dec
hlt
int
add
je
mov
movsl
push
pop
inc
mov
pop
lret
std
test
test
adc
push
pushf
inc
mov
jne
out
out
push
in
clc
and
aam
push
sti
rcrb
hlt
fcompl
xchg
sbb
scas
cmp
ja
imul
jbe
lcall
aad
mov
scas
mov
push
pop
add
je
ljmp
bound
adc
xchg
inc
sbb
mov
pop
mov
or
stos
push
sub
add
repnz
xor
and
pop
iret
push
out
add
push
mov
push
cli
inc
pmuludq
out
xchg
stc
ror
mov
jg
jbe
pusha
sbb
jge
and
mov
mov
jae
movsb
mov
push
popa
pop
cld
mov
outsl
dec
jg
jmp
pusha
xor
loopne
adc
xchg
jnp
mov
das
popa
fists
stos
mulb
ficomps
add
je
add
andb
add
and
stos
and
mov
and
and
xor
add
and
add
adc
add
add
add
out
and
fisubl
add
enter
mov
and
xchg
and
xchg
add
je
add
mov
and
mov
add
test
add
xchg
daa
add
jle
add
fs
add
push
daa
add
inc
daa
add
dec
and
pop
and
insb
and
js
add
test
add
sahf
and
scas
and
mov
and
in
add
repnz
add
add
and
add
and
add
and
add
add
push
and
add
add
push
add
jbe
add
andb
cwtl
and
add
and
add
and
add
and
add
push
and
add
cmp
add
dec
and
add
push
add
js
add
mov
add
test
add
les
add
hlt
and
add
and
add
cmp
add
push
es
push
add
test
add
xchg
es
movsb
es
mov
add
lret
add
es
ljmp
add
daa
add
sbb
add
and
add
xor
add
add
add
loopne
add
and
and
add
sbb
add
adc
add
or
add
and
hlt
and
ljmp
add
daa
add
add
add
les
add
add
add
xor
add
and
inc
and
push
and
and
dec
and
pusha
and
je
add
xchg
and
xchg
add
sbb
add
stos
and
add
push
add
add
add
push
mov
loop
push
xor
push
push
or
xchg
push
jo
xchg
push
sbbb
push
nop
xor
push
shlb
lock
xchg
push
nop
or
xchg
push
rclb
rclb
push
nop
sbb
mov
xor
xchg
push
and
adc
xchg
push
inc
in
xchg
push
rcrb
push
xor
xchg
push
inc
cmp
push
push
pop
xchg
push
mov
pusha
xchg
push
nop
popa
xchg
push
add
push
mov
xchg
push
push
cmp
push
mov
cmp
push
add
push
nop
sbb
push
pusha
gs
push
mov
xchg
push
cmpb
push
xor
xchg
push
inc
xor
push
inc
add
push
nop
push
xchg
push
nop
mov
xchg
push
inc
in
xchg
push
loopne
xchg
push
jo
xchg
push
inc
cmp
push
push
pop
xchg
push
mov
pusha
xchg
push
nop
popa
xchg
push
add
push
mov
xchg
push
push
cmp
push
mov
xchg
push
add
xchg
push
add
push
xor
push
pusha
gs
push
and
push
adc
push
nop
cmp
push
cmpb
push
mov
xchg
push
loopne
xchg
push
loopne
xchg
push
push
cmp
push
loopne
xchg
push
jo
xchg
push
rolb
push
xor
push
mov
xchg
push
push
pop
xchg
push
mov
pusha
xchg
push
nop
popa
xchg
push
add
push
mov
xchg
push
push
cmp
push
mov
xchg
push
add
xchg
push
add
push
xor
push
pusha
gs
push
and
push
adc
push
nop
cmp
push
cmpb
push
mov
xchg
push
rclb
mov
xor
xchg
push
push
lea
push
push
lea
push
rcrb
xchg
push
xor
push
mov
xchg
push
push
pop
xchg
push
mov
pusha
xchg
push
nop
popa
xchg
push
add
push
mov
xchg
push
push
cmp
push
mov
cmp
push
add
push
nop
sbb
push
pusha
gs
push
mov
xchg
push
cmpb
push
mov
xchg
push
rclb
mov
xor
xchg
push
push
lea
push
push
lea
push
rcrb
xchg
push
xor
push
mov
xchg
push
push
pop
xchg
push
mov
pusha
xchg
push
nop
popa
xchg
push
add
push
mov
xchg
push
push
cmp
push
push
lea
push
lock
push
sbb
push
jo
xchg
push
push
cmp
push
cmpb
push
push
lea
push
push
lea
push
add
add
addb
add
add
aas
decl
or
xchg
push
and
xchg
push
pusha
loop
push
mov
add
inc
jmp
jae
push
add
add
lcall
jbe
push
data16
add
push
inc
xor
push
push
lea
push
push
lea
push
mov
xchg
push
add
push
mov
xor
xchg
push
sbbb
push
lock
xchg
push
add
add
add
add
rolb
push
inc
xor
push
addb
push
sarb
pop
xchg
push
outsl
ja
and
arpl
je
outsl
outsb
add
add
xchg
loopne
add
add
add
add
add
add
add
add
incl
add
add
xchg
push
add
add
xchg
mov
incl
add
add
incl
add
add
mov
ljmp
xchg
push
incl
add
add
lahf
xchg
push
add
add
or
xchg
push
add
add
into
loope
push
add
add
dec
loop
push
adc
xchg
push
add
add
incl
add
add
out
push
mov
out
push
jmp
xchg
push
js
xchg
push
add
add
incl
add
add
in
xchg
push
nop
in
xchg
push
incl
add
add
in
xchg
push
es
xchg
push
pop
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
add
pop
pop
dec
push
push
inc
push
push
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
add
lock
add
add
jle
push
inc
add
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
add
dec
inc
push
dec
inc
dec
xor
sub
xor
add
add
add
push
add
add
adc
add
add
add
add
inc
inc
add
xor
add
add
sub
push
pop
pop
or
aaa
xor
push
push
pop
add
and
or
add
add
pusha
push
add
jo
js
js
or
or
add
add
or
add
or
or
pop
or
add
sub
outsb
add
insb
add
add
add
add
outsb
jne
insb
sub
add
add
add
incl
add
add
and
push
add
add
mov
jle
push
pushf
jle
push
test
push
lods
jle
push
pop
jle
push
push
jle
push
inc
jle
push
jl
xchg
push
je
xchg
push
insb
jle
push
sbb
xchg
push
adc
xchg
push
or
xchg
push
add
xchg
push
xchg
arpl
push
xor
xchg
push
sub
xchg
push
and
xchg
push
fdivrl
push
aam
xchg
push
int3
jge
push
les
push
cld
jge
push
hlt
jge
push
in
jge
push
pushf
jge
push
mov
push
movsb
jge
push
inc
jge
push
add
xchg
push
les
in
xchg
push
movsb
jl
push
pusha
jl
push
fdivrl
push
enter
sarb
lock
push
test
push
test
xchg
push
insb
jnp
push
sbb
push
sub
push
in
jp
push
jo
gs
and
push
arpl
outsl
arpl
outsl
jb
add
add
inc
insb
popa
jae
and
gs
jb
push
jae
jb
jo
outsl
jb
add
add
and
jae
and
popa
jae
and
jb
jns
add
and
jae
and
popa
jae
and
arpl
jo
outsl
jb
popa
je
sub
and
and
arpl
jo
outsl
jb
add
add
insb
popa
arpl
outsb
je
fs
gs
pop
pop
and
outsl
jae
jb
daa
add
add
pusha
jo
popa
arpl
outsb
je
fs
gs
and
outsl
jae
jb
daa
add
pusha
outsl
insl
outsb
imul
jae
addr16
add
and
gs
pop
pop
add
add
outsb
gs
pop
add
pusha
insb
outsl
arpl
and
je
bound
arpl
jae
jb
arpl
and
outsl
jae
jb
daa
add
outsl
arpl
and
je
bound
add
push
push
dec
add
add
dec
add
fs
jb
je
jb
imul
outsl
jo
and
outsb
jae
jb
arpl
and
outsl
jae
jb
daa
add
pusha
gs
je
jb
jbe
popa
jae
and
outsb
jae
jb
arpl
and
gs
je
jb
add
pusha
gs
je
jb
fs
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jae
jb
arpl
and
gs
je
jb
add
add
pusha
jbe
jb
jne
insb
and
jo
popa
arpl
outsb
je
insl
popa
jo
add
pusha
jbe
arpl
and
popa
jae
and
outsb
jae
jb
arpl
and
gs
je
jb
add
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
jbe
arpl
and
outsb
jae
jb
arpl
and
gs
je
jb
add
add
arpl
popa
jb
fs
gs
outsb
and
jae
jb
arpl
daa
add
add
pusha
fs
jne
je
arpl
jae
jb
arpl
and
outsl
jae
jb
daa
add
add
arpl
and
gs
outsb
and
jae
jb
arpl
daa
add
add
pusha
jbe
popa
jae
and
je
jne
je
jb
add
pusha
jae
jb
outsb
addr16
add
add
pusha
insb
outsl
arpl
and
popa
je
arpl
addr16
jb
daa
add
add
pusha
je
jo
outsl
data16
add
add
pusha
jbe
popa
insb
insb
daa
add
bound
insb
gs
add
add
data16
bound
add
add
add
jl
add
es
cmp
add
cmp
add
sub
add
jl
add
es
jl
add
pop
add
add
add
sub
add
sub
add
ds
add
cmp
add
cmp
add
and
sub
add
add
add
add
sub
add
sub
add
sub
jo
jb
je
jb
add
add
add
and
add
and
add
cmp
add
ds
cmp
fs
gs
add
outsb
gs
add
add
jb
jae
jb
arpl
pop
pop
jo
jb
xor
pop
pop
arpl
xor
insb
insb
add
pop
pop
popaw
jae
arpl
insb
add
pop
pop
je
imul
add
jae
arpl
insb
add
add
jo
jae
popa
insb
add
add
pop
pop
arpl
insb
add
bound
gs
add
add
cmp
add
add
cmp
add
pusha
popa
outsb
outsl
outsb
jns
outsl
jne
and
insl
gs
popa
arpl
add
add
imul
gs
jo
popa
je
sub
insl
gs
jb
dec
push
dec
dec
add
add
pop
je
jne
imul
add
add
bound
cmp
add
add
jo
outsl
je
arpl
cmp
add
imul
add
add
jb
jne
insb
and
add
add
popa
je
arpl
add
gs
jo
popa
je
and
popa
je
arpl
fs
je
and
insl
bound
and
je
jne
je
jb
push
jb
add
gs
jo
popa
je
and
popa
je
arpl
fs
je
and
insl
bound
and
outsb
jae
jb
arpl
and
insb
jo
jb
add
add
pusha
insb
outsl
arpl
and
popa
je
arpl
fs
jb
arpl
and
insb
jo
jb
add
add
jge
add
pusha
popa
fs
jae
outsl
jb
add
pusha
jbe
outsl
jb
imul
add
add
and
sub
add
jbe
imul
insb
popa
je
insb
add
add
cs
cs
add
and
outsl
ja
add
jbe
insb
popa
je
insb
add
add
outsb
jae
add
add
outsb
gs
push
dec
dec
dec
dec
push
dec
add
push
add
imul
add
add
imul
pop
imul
pop
imul
pop
imul
outsl
outsl
insb
add
add
jne
jae
outsb
gs
add
outsl
jne
insb
add
insb
outsl
outsb
and
add
data16
outsl
popa
je
add
insb
outsl
outsb
add
add
imul
jb
add
add
popa
jb
add
add
outsb
imul
outsb
and
jae
daa
add
jne
imul
je
jne
je
add
popa
jae
and
add
jne
and
add
imul
add
outsl
jb
and
add
popa
jb
add
add
outsb
jae
and
add
insb
popa
je
insb
and
add
sub
add
insb
popa
je
add
jae
add
jnp
outsl
jb
add
add
lea
push
int
xchg
push
aad
xchg
push
pop
insl
xchg
push
shrl
push
xor
push
inc
outsb
xchg
push
and
aas
and
add
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
popa
bound
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
or
add
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
jb
addr16
insl
and
insl
and
imul
outsb
add
push
jne
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
add
incl
dec
xchg
push
stc
dec
xchg
push
jge
xchg
push
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
xor
push
dec
inc
dec
add
xor
dec
dec
inc
add
add
and
inc
add
add
and
inc
dec
add
dec
cmp
cmp
add
fs
dec
dec
dec
dec
and
and
jns
add
fs
jns
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
add
add
ljmp
lods
xchg
push
call
xchg
push
and
xchg
push
jo
xchg
push
cwtl
iret
xchg
push
add
add
or
add
jo
xchg
push
nop
dec
xchg
push
inc
cmp
push
addb
inc
xchg
push
rorb
push
push
xchg
push
xor
push
lock
xchg
push
inc
inc
xchg
push
push
popf
xchg
push
addb
inc
xchg
push
xor
push
inc
cmp
push
lret
adcl
push
out
adcl
add
add
add
add
add
adcb
push
mov
xchg
push
push
mov
xchg
push
lcall
push
lods
mov
xchg
push
and
xchg
push
sub
xchg
push
xchg
mov
xchg
push
movsl
mov
xchg
push
js
xchg
push
test
push
outsb
and
outsl
and
add
push
test
push
out
xchg
push
mov
jbe
insb
imul
and
jae
je
outsl
outsb
add
xchg
push
test
push
cmp
bound
and
je
imul
imul
je
add
add
jae
cmp
bound
and
je
mov
mov
push
nop
rcll
push
inc
add
add
xchg
push
rcl
push
add
add
lcall
xchg
xchg
push
ljmp
xchg
xchg
push
push
lea
push
shlb
push
lea
push
push
lea
push
nop
pushf
xchg
push
xor
xchg
push
xor
push
loopne
xchg
push
mov
xchg
push
shl
push
adc
xchg
push
push
in
push
and
xchg
push
add
xchg
push
loopne
xchg
push
mov
jo
push
nop
ljmp
sar
xchg
push
shlb
push
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
into
xchg
push
add
add
ljmp
rclb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
rolb
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
addb
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
addb
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
addb
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
addb
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
addb
push
addb
push
pusha
or
push
or
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
lock
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
addb
push
lock
xchg
push
addb
push
addb
push
loopne
xchg
push
loopne
xchg
push
orb
push
and
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
inc
or
add
add
add
add
add
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
lock
xchg
push
lock
xchg
push
loopne
xchg
push
lock
xchg
push
loopne
xchg
push
loopne
xchg
push
lock
xchg
push
loopne
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
loopne
xchg
push
lock
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
lock
xchg
push
lock
xchg
push
loopne
xchg
push
loopne
xchg
push
lock
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
lock
xchg
push
lock
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
lock
xchg
push
lock
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
lock
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
lock
xchg
push
loopne
xchg
push
lock
xchg
push
lock
xchg
push
loopne
xchg
push
loopne
xchg
push
lock
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
lock
xchg
push
loopne
xchg
push
lock
xchg
push
loopne
xchg
push
loopne
xchg
push
lock
xchg
push
lock
xchg
push
loopne
xchg
push
lock
xchg
push
lock
xchg
push
loopne
xchg
push
loopne
xchg
push
lock
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
lock
xchg
push
loopne
xchg
push
lock
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
lock
xchg
push
loopne
xchg
push
lock
xchg
push
lock
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
lock
xchg
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
lock
xchg
push
add
add
rclb
mov
xor
xchg
push
pusha
xor
push
push
lea
push
inc
xor
push
nop
xor
push
shlb
lock
xchg
push
push
lea
push
push
lea
push
push
lea
push
push
cmp
push
loopne
xchg
push
nop
push
xchg
push
loopne
xchg
push
lock
xchg
push
inc
xor
push
nop
xor
push
shlb
lock
xchg
push
xor
xchg
push
loopne
xchg
push
push
or
xchg
push
jo
xchg
push
sbbb
push
nop
xor
push
shlb
lock
xchg
push
nop
or
xchg
push
push
lea
push
rclb
mov
imul
cmp
push
xor
push
jo
xchg
push
rcrb
xchg
push
xor
push
mov
xchg
push
push
pop
xchg
push
mov
pusha
xchg
push
nop
popa
xchg
push
add
push
mov
xchg
push
push
cmp
push
mov
cmp
push
add
push
nop
sbb
push
pusha
gs
push
mov
xchg
push
cmpb
push
add
push
mov
xor
xchg
push
add
push
nop
sbb
mov
xor
xchg
push
and
xchg
push
inc
in
xchg
push
rcrb
push
xor
xchg
push
inc
cmp
push
push
pop
xchg
push
mov
pusha
xchg
push
nop
popa
xchg
push
add
push
mov
xchg
push
push
cmp
push
mov
cmp
push
add
push
nop
sbb
push
pusha
gs
push
mov
xchg
push
cmpb
push
add
push
inc
xor
leave
mov
ss
mov
bound
jae
cwtl
xchg
sub
mov
fwait
push
cmp
aam
push
addr16
outsl
sbb
dec
ficompl
cmc
mov
push
pop
aas
xchg
ret
or
pop
and
nop
xor
xor
notl
mov
movsl
mov
xlat
pop
xchg
sub
cmp
xchg
movsb
jge
jbe
imul
je
icebp
inc
popf
jo
fs
and
sub
and
negb
popa
imul
mov
cmp
pop
stc
into
mov
push
or
or
hlt
inc
orl
insb
shrl
or
mov
js
xchg
mov
arpl
insl
jmp
add
push
pop
shl
cmpsb
ja
clc
jmp
dec
or
inc
push
mov
in
pop
sbb
cltd
lea
lahf
adc
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
adc
add
or
add
push
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
adc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
pop
add
add
add
add
add
add
add
add
add
sbb
add
sldt
add
and
inc
ja
sarb
iret
push
mov
mov
lods
rcr
jl
mov
test
pop
or
push
xchg
sbb
jns
cmpsb
or
shrl
std
das
mov
sbb
in
scas
loope
xchg
jle
push
nop
jl
cltd
jg
icebp
inc
cltd
mov
mov
repnz
push
cld
mov
imul
movsb
jle
xchg
hlt
je
or
pop
int
jno
dec
adc
jnp
pop
pop
ret
xor
mov
pusha
sub
jns
lret
fstpt
push
sbb
pusha
mov
sahf
insb
mov
mov
ja
xlat
daa
dec
xor
pusha
pop
pusha
push
repz
push
stos
bound
call
push
mov
stos
sub
int3
mov
call
push
mov
adc
mov
mov
test
je
ds
into
push
xchg
xchg
pop
iret
and
adcl
sub
mov
mov
data16
or
popa
xchg
test
jl
xor
test
mov
test
add
fmull
mov
lds
inc
hlt
addl
test
fwait
pop
sahf
inc
push
jmp
addr16
stos
shlb
push
fsubrs
cmpsl
setbe
or
outsb
in
jp
push
lock
sbb
add
data16
inc
sbbb
out
mov
test
pop
mov
fdivs
loopne
and
test
push
push
bound
aas
ss
sbb
xlat
shlb
dec
adc
rcl
ljmp
leave
jb
pop
jnp
cltd
sbb
aam
neg
call
jecxz
dec
jns
mov
push
rolb
test
inc
cwtl
das
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
data16
mov
call
cltd
test
push
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
mov
movsb
mull
jno
and
mov
gs
and
cmp
iret
sti
shlb
repz
ret
sbb
add
pop
fwait
dec
sbb
sbb
sbb
inc
add
mov
mov
pop
adcl
mov
dec
mov
mov
aad
jge
push
outsl
mov
je
mov
cmp
mov
xorb
fcompl
je
fwait
rcl
icebp
sahf
shrl
jecxz
dec
cmp
aad
mov
popf
rorl
pushf
lods
ja
mov
sub
sub
sub
stos
test
sti
inc
mov
mov
adc
stos
fbld
push
push
ds
adc
mov
insl
xor
enter
in
out
mov
ret
cmp
and
xchg
cmpsl
aad
addb
push
arpl
push
jo
push
or
sub
das
rolb
or
pop
cmp
sbb
in
sub
pop
cld
insl
sub
fbstp
cmp
arpl
gs
ja
mov
scas
in
inc
cs
ret
xor
jb
fs
dec
mov
xor
dec
data16
jo
dec
ret
push
push
mov
push
out
sbb
xchg
rcll
test
cltd
sub
jno
test
mov
adc
rcl
mov
push
stos
inc
push
or
cltd
jmp
fisttps
daa
test
fwait
loope
mov
leave
lds
mov
dec
stos
fmuls
jecxz
ja
lret
mov
outsl
cs
out
orb
outsl
arpl
mov
in
cmp
add
mov
push
arpl
cli
mov
fsubrp
insb
push
movsb
adc
mov
jb
bnd
pushf
popa
es
shlb
mov
loopne
jge
ljmp
jge
mov
addr16
cmpsb
cwtl
enter
arpl
scas
or
aas
adc
inc
sbb
xor
jge
and
ja
sub
stos
lret
mov
sahf
cmp
or
sbb
lret
mov
jle
cld
pushf
sub
in
cli
cmp
pop
inc
dec
mov
inc
insb
lock
xchg
push
lock
xchg
push
mov
xchg
push
sbbb
push
push
cmp
push
nop
dec
xchg
push
lock
xchg
push
cmpb
push
lock
xchg
push
lock
xchg
push
lock
xchg
push
mov
xchg
push
sbbb
push
push
cmp
push
nop
dec
xchg
push
lock
xchg
push
cmpb
push
lock
xchg
push
mov
xchg
push
mov
xor
push
push
cmp
push
jo
xchg
push
jo
xchg
push
rclb
push
xor
push
mov
xchg
push
push
pop
xchg
push
mov
pusha
xchg
push
nop
popa
xchg
push
add
push
mov
xchg
push
push
cmp
push
mov
xchg
push
add
xchg
push
add
push
nop
sbb
push
pusha
gs
push
and
push
adc
push
nop
cmp
push
cmpb
push
nop
sbb
mov
xor
xchg
push
loopne
xchg
push
rcrb
and
push
loopne
xchg
push
jo
xchg
push
inc
cmp
push
push
pop
xchg
push
mov
pusha
xchg
push
nop
popa
xchg
push
add
push
mov
xchg
push
push
cmp
push
mov
xchg
push
add
xchg
push
add
push
nop
sbb
push
pusha
gs
push
and
push
adc
push
nop
cmp
push
cmpb
push
xor
push
xor
push
add
push
nop
cmp
push
nop
sbb
mov
xor
xchg
push
andb
push
inc
in
xchg
push
add
xchg
push
xor
push
mov
xchg
push
push
pop
xchg
push
mov
pusha
xchg
push
nop
popa
xchg
push
add
push
mov
xchg
push
push
cmp
push
mov
cmp
push
shlb
xchg
push
andb
push
cmp
push
cmpb
push
mov
xchg
push
shlb
loopne
xchg
push
push
cmp
push
rcrb
and
xchg
push
rclb
push
xor
push
mov
xchg
push
push
pop
xchg
push
mov
pusha
xchg
push
nop
popa
xchg
push
add
push
mov
xchg
push
push
cmp
push
mov
xchg
push
add
xchg
push
add
push
nop
sbb
push
pusha
gs
push
and
push
adc
push
nop
cmp
push
cmpb
push
xor
push
xor
push
add
push
nop
cmp
push
nop
sbb
mov
xor
xchg
push
loopne
xchg
push
rcrb
and
push
loopne
xchg
push
jo
xchg
push
inc
cmp
push
push
pop
xchg
push
mov
pusha
xchg
push
nop
popa
xchg
push
add
push
mov
xchg
push
push
cmp
push
mov
xchg
push
add
xchg
push
add
push
nop
sbb
push
pusha
gs
push
and
push
adc
push
nop
cmp
push
cmpb
push
xor
push
xor
push
nop
stos
xchg
push
nop
cmp
push
nop
sbb
mov
xor
xchg
push
loopne
xchg
push
rcrb
and
push
loopne
xchg
push
jo
xchg
push
inc
cmp
push
push
pop
xchg
push
mov
pusha
xchg
push
nop
popa
xchg
push
add
push
mov
xchg
push
push
cmp
push
mov
xchg
push
add
xchg
push
add
push
nop
sbb
push
pusha
gs
push
and
push
adc
push
nop
cmp
push
cmpb
push
xor
push
xor
push
add
push
nop
cmp
push
inc
xor
push
xor
xor
xor
ss
cmp
inc
inc
inc
inc
inc
inc
add
add
xor
xor
xor
ss
cmp
popa
bound
data16
add
mov
xchg
push
inc
xchg
loopne
xchg
push
push
cmp
push
rcrb
and
xchg
push
rclb
push
xor
push
mov
xchg
push
push
pop
xchg
push
mov
pusha
xchg
push
nop
popa
xchg
push
add
push
mov
xchg
push
push
cmp
push
mov
xchg
push
add
xchg
push
add
push
nop
sbb
push
pusha
gs
push
and
push
adc
push
nop
cmp
push
cmpb
push
xor
push
xor
push
add
push
nop
cmp
push
pusha
cmp
xchg
push
mov
dec
xchg
push
cmpb
push
loopne
xchg
push
loopne
xchg
push
rcrb
inc
cmp
push
loopne
xchg
push
push
cmp
push
adc
push
inc
xchg
orb
adc
xchg
push
inc
cmp
xchg
push
and
push
pusha
dec
xchg
push
and
push
loopne
xchg
push
rcrb
inc
cmp
push
loopne
xchg
push
push
cmp
push
adc
push
push
dec
xchg
push
push
lea
push
mov
cltd
xchg
push
loopne
xchg
push
nop
ss
push
push
cmp
push
rcrb
push
sbbb
push
lock
xchg
push
add
push
inc
xor
push
mov
popf
xchg
push
pusha
fwait
xchg
push
nop
ss
push
push
cmp
push
add
xchg
push
pusha
xor
push
nop
popf
xchg
push
lock
xchg
push
mov
xchg
push
nop
out
push
lock
xchg
push
mov
xchg
push
xor
xchg
push
nop
push
xchg
push
loopne
xchg
push
rcrb
and
xchg
push
rclb
push
xor
push
mov
xchg
push
push
pop
xchg
push
mov
pusha
xchg
push
nop
popa
xchg
push
add
push
mov
xchg
push
push
cmp
push
mov
xchg
push
add
xchg
push
add
push
nop
sbb
push
pusha
gs
push
and
push
adc
push
nop
cmp
push
cmpb
push
xor
push
xor
push
add
push
nop
cmp
push
inc
xor
push
xor
push
push
or
xchg
push
jo
xchg
push
sbbb
push
nop
xor
push
shlb
lock
xchg
push
nop
or
xchg
push
rclb
rclb
push
mov
popf
xchg
push
mov
xchg
push
sbbb
push
push
cmp
push
rcrb
push
sbbb
push
lock
xchg
push
inc
cmp
push
mov
xchg
push
pusha
fwait
xchg
push
nop
ss
push
push
cmp
push
add
xchg
push
pusha
xor
push
nop
popf
xchg
push
lock
xchg
push
mov
xchg
push
nop
out
push
lock
xchg
push
adc
xchg
push
inc
cmp
xchg
push
push
lea
push
inc
dec
xchg
push
mov
xor
xchg
push
inc
cmp
push
loopne
xchg
push
push
cmp
push
adc
push
push
dec
xchg
push
push
lea
push
lock
xchg
push
mov
xchg
push
sbbb
push
push
cmp
push
nop
dec
xchg
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
cmp
push
loopne
xchg
push
push
lea
push
push
lea
push
xor
xchg
push
loopne
xchg
push
push
or
xchg
push
jo
xchg
push
sbbb
push
nop
xor
push
shlb
lock
xchg
push
nop
or
xchg
push
rclb
push
lea
push
mov
cltd
xchg
push
push
lea
push
mov
xchg
push
add
xchg
push
rcrb
push
sbbb
push
lock
xchg
push
push
lea
push
push
lea
push
push
lea
push
push
cmp
push
loopne
xchg
push
nop
push
xchg
push
adc
xchg
push
lock
xchg
push
inc
xor
push
nop
xor
push
shlb
lock
xchg
push
lock
xchg
push
lock
xchg
push
mov
xchg
push
sbbb
push
push
cmp
push
loopne
xchg
push
push
lea
push
push
lea
push
add
push
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
mov
xchg
push
inc
stc
xchg
push
mov
xchg
push
rclb
mov
xor
xchg
push
lock
xchg
push
jo
xchg
push
lock
xchg
push
rcrb
xchg
push
xor
push
lock
rcrb
xchg
push
push
rclb
mov
xchg
push
nop
popa
xchg
push
add
push
mov
xchg
push
push
cmp
push
loopne
xchg
push
add
xchg
push
add
push
nop
sbb
push
pusha
gs
push
mov
xchg
push
cmpb
push
mov
xchg
push
jo
xchg
push
loopne
xchg
push
push
cmp
push
rolb
push
lock
xchg
push
rcrb
xchg
push
push
sub
xchg
push
rcrb
xchg
push
adc
xchg
push
pusha
pusha
xchg
push
nop
popa
xchg
push
add
push
mov
xchg
push
push
cmp
push
jo
xchg
push
add
xchg
push
add
push
nop
sbb
push
pusha
gs
push
mov
xchg
push
cmpb
push
xor
push
nop
sbb
mov
xor
xchg
push
loopne
xchg
push
mov
xchg
push
jo
xchg
push
rcrb
xchg
push
xor
push
pusha
jmp
xchg
push
jo
xchg
push
inc
into
xchg
push
nop
popa
xchg
push
add
push
mov
xchg
push
push
cmp
push
pusha
iret
xchg
push
add
xchg
push
add
push
nop
sbb
push
pusha
gs
push
mov
xchg
push
cmpb
push
mov
xchg
push
loopne
xchg
push
loopne
xchg
push
push
cmp
push
mov
xchg
push
jo
xchg
push
rcrb
xchg
push
xor
push
pusha
jmp
xchg
push
jo
xchg
push
inc
into
xchg
push
nop
popa
xchg
push
add
push
mov
xchg
push
push
cmp
push
pusha
iret
xchg
push
add
xchg
push
add
push
nop
sbb
push
pusha
gs
push
mov
xchg
push
cmpb
push
add
add
pop
or
idivl
add
test
loop
dec
inc
lods
sar
aad
jecxz
int
cmp
notb
xchg
pop
sar
js
int
sub
jne
subl
imul
mov
pop
xchg
add
mov
in
add
jecxz
ljmp
inc
lds
lea
hlt
or
or
mov
mov
push
rcrl
mov
jmp
das
push
and
adc
xchg
popf
sbb
dec
sbb
pop
add
hlt
stc
leave
dec
movl
es
pop
ljmp
sahf
leave
lds
outsl
test
jge
mov
mov
mov
arpl
aaa
daa
push
mov
cmp
mov
push
jbe
cmpb
jg
pushf
pop
fs
xor
mov
cs
cmp
imul
or
mov
repnz
mov
push
insb
in
in
bswap
imul
gs
or
repnz
jmp
xchg
add
rcrb
jbe
adc
icebp
jnp
cld
mov
insl
fistl
aaa
jp
ljmp
lret
add
or
jecxz
das
jmp
push
pop
fstpt
ja
sub
jae
cmp
mov
mov
pop
in
cli
inc
sbbl
adc
sbb
mov
lock
sbb
xor
inc
leave
mov
call
test
sub
adc
xor
push
adc
mov
pop
add
loopne
inc
xchg
es
pop
dec
mov
xor
or
dec
jne
arpl
iret
cld
test
cmp
mov
jp
les
push
push
lock
int
xchg
imul
pusha
sub
jecxz
loop
fidivrs
sub
and
or
pop
sub
out
test
push
cmpsl
push
ret
test
insl
pop
add
std
test
fdivl
pop
sub
sar
int3
add
nop
mov
xchg
repnz
cmc
fs
out
ds
scas
adc
sub
adc
xor
xchg
outsl
rolb
inc
dec
mov
jno
mov
fidivrs
cmp
outsb
insl
je
sub
jno
cmp
movsb
pop
fs
dec
mov
lods
std
jnp
jl
xor
cmp
insb
fimuls
add
decb
pop
jno
cmp
inc
frstor
jae
ret
inc
inc
stos
pusha
clc
push
xchg
xor
xchg
fsts
dec
push
and
arpl
movb
movsl
enter
jge
adc
jo
add
fisubrl
aaa
cmp
data16
push
mov
jmp
xorb
mov
mov
xor
push
add
add
imul
mov
mov
inc
xor
stos
jae
xor
sbb
cmpsb
mov
gs
mulb
push
hlt
nop
cs
loope
pop
roll
push
popf
xlat
popf
dec
jns
into
cli
add
adc
pop
sub
and
push
mov
clc
mov
inc
xor
repnz
les
insl
push
jge
xchg
cmp
sbb
jge
sti
les
jecxz
jbe
stos
nopl
mov
xchg
lods
lea
mov
pop
xchg
sbb
daa
scas
mov
popa
or
bound
ljmp
into
test
cmc
and
mov
loop
mul
xchg
subb
sub
movsl
sub
pop
cwtl
mov
mov
inc
test
iret
mov
push
jbe
pop
add
mov
aad
es
pop
mov
cmp
push
push
lret
arpl
jp
fstpl
sahf
push
and
push
push
xchg
icebp
popl
dec
add
pop
mov
ret
cmp
ret
cmc
jne
xchg
sub
stos
lahf
adc
test
fbld
jle,pt
aas
mov
inc
divb
shll
push
sahf
std
dec
jp
jg
nop
or
lds
xchg
mov
pop
je
in
add
add
mov
out
ja
inc
mov
lock
jle
rcr
iret
stos
dec
xor
scas
push
sub
adc
addr16
cld
icebp
fimull
xchg
lret
pop
ret
push
mov
scas
mov
loopne
ja
lcall
bound
ss
inc
scas
jo
xchg
gs
xlat
cmp
mov
clc
cltd
inc
shl
push
mov
cmp
jne
lcall
jo
mov
dec
je
push
lods
scas
in
stos
dec
jo
dec
sub
xchg
shl
shll
inc
push
imul
popa
pop
pop
lcall
das
call
jo
fwait
push
pop
or
add
fwait
aas
adc
roll
fdivp
int
sub
or
pop
int
andl
mov
cmpsb
bound
xor
mov
pop
and
pop
or
out
ficompl
adc
mov
repz
sbb
lods
adc
sub
jno
test
xchg
push
adc
mov
push
and
cmp
pop
sarb
mov
push
jle
testb
movsl
aam
loope
sbb
pop
test
xchg
adc
ds
out
lret
or
int3
cmp
movl
mov
in
push
dec
lcall
icebp
jl
add
jle
mov
pop
mulb
aam
mov
jbe
ja
cltd
shrb
push
cmp
fbstp
jmp
push
mov
mov
xor
mov
lea
inc
test
and
mull
sahf
fwait
sbb
scas
les
js
loope
lds
adc
xor
movsl
mov
cmovo
pop
sub
daa
fidivs
adc
mov
push
lods
mov
dec
clc
lods
mov
sbb
pop
xchg
and
ss
fmull
push
cmpl
divl
shl
sbbb
mov
daa
xchg
xlat
pop
or
or
or
dec
lret
mov
push
scas
cmpl
jmp
lahf
xchg
mov
push
push
mov
cmp
scas
lret
addr16
push
aas
mov
ja
in
cmc
dec
stos
inc
dec
cwtl
out
jns
in
ret
cmp
rcrb
push
inc
mov
mov
pop
mov
jecxz
repnz
sub
popa
frstor
mov
jns
stos
push
scas
and
cmpl
gs
aam
dec
insl
out
fldt
pop
flds
sbb
xor
push
fstpl
and
push
sbb
outsb
jecxz
push
mov
sbb
jg
call
in
cmp
mov
push
jg
shl
jne
sti
jge
rcrl
mov
shlb
jmp
adc
aad
xor
imul
cmp
xor
in
addr16
js
mov
cmp
je
daa
sti
ss
push
stos
dec
sti
or
int3
mov
mov
je
push
nop
insl
xchg
adc
lea
inc
sbb
dec
in
sbb
xor
cmp
stos
cmc
popa
arpl
jle
mov
xchg
in
cmp
cmp
out
dec
fmull
pop
wrmsr
cmpsb
jp
js
pusha
xchg
jmp
and
out
jl
mov
and
adc
pusha
cmp
aad
pop
cmp
lret
inc
dec
xor
mov
fldt
adc
or
mov
cmpsb
xlat
cltd
lea
stos
jle
sti
les
adc
push
cmp
icebp
test
fldl
cmpsb
add
outsl
mov
loopne
jle
cmp
push
aaa
movsb
push
sub
dec
cld
sub
call
cmp
fmull
push
inc
int
pop
fcmovnbe
add
rep
in
iret
mov
mov
out
ss
les
stc
int3
mov
adc
pop
repnz
aas
sar
int
xchg
test
fidivrl
cltd
std
sbbl
fildl
xchg
push
mov
ja
adc
inc
jg
loop
fsts
insb
adc
out
pop
push
fsubrl
mov
cmc
sbbl
stos
mov
fnstenv
lods
icebp
lods
jmp
cld
xlat
cmpsl
mov
or
push
adc
loope
js
je
sub
xor
pop
or
cmpsl
shr
ljmp
jmp
mov
movsl
mov
imul
shrb
lcall
idivb
test
inc
xor
cli
jb
pop
test
fsubl
popf
xor
clc
test
das
addr16
sub
jns
fs
lods
mov
fstps
push
rcl
push
test
pop
repz
dec
arpl
add
push
and
data16
inc
jnp
ret
in
jecxz
jae
pop
add
movsl
in
lret
push
aam
mov
jne
pop
adc
sbbl
int
mov
outsb
sub
inc
cmpsl
pop
inc
xor
pop
cs
popa
out
mov
call
mov
mov
sbb
xor
dec
outsb
jb
xchg
sbb
pop
add
jo
xor
cmc
push
fdivs
inc
mov
mov
mov
ret
xchg
pop
fs
jge
divb
and
imul
xor
arpl
rep
call
clc
clc
mov
push
arpl
cld
dec
out
lret
push
cli
mov
push
fs
popl
iret
sub
popf
cmp
bound
xlat
mov
ja
out
jecxz
mov
insb
push
dec
jae
sar
in
jae
mov
int3
aas
dec
inc
stos
inc
xor
mov
inc
mov
ret
inc
pop
or
shrl
fwait
and
jge
pusha
outsb
and
sub
loop
lcall
sub
int3
jnp
adc
dec
mov
add
lods
jo
inc
outsl
jne
push
lods
cmc
jp
mov
dec
push
jecxz
push
fbld
das
std
cmp
cwtl
fcom
or
dec
xchg
hlt
enter
jne
lret
cmp
xchg
scas
lods
jnp
sub
jno
in
xchg
jo
pop
sub
movsb
mov
rol
andb
aaa
nop
jg
jg
std
mov
inc
sub
sbb
mov
inc
decl
cmp
loop
les
adc
cmpsl
imul
mov
adc
in
data16
sbb
popa
or
mov
mov
out
ds
mov
mov
xchg
sub
mov
cmp
popa
repz
js
jmp
ret
pushf
sti
out
aam
notl
add
imul
pushf
mov
popf
mov
or
aad
push
rorb
pushf
roll
in
sub
test
rdpmc
inc
sbb
add
pushf
add
lds
and
lods
dec
out
fsubrs
add
dec
and
hlt
mov
hlt
lret
int3
mov
arpl
das
js
jp
mov
arpl
neg
pop
add
sub
inc
sbb
and
pop
push
mov
insb
dec
xchg
cmp
aam
mov
fstpl
and
jne
popa
insb
pop
jecxz
xchg
ret
sub
add
imul
into
adc
fnstsw
dec
loope
sbb
dec
int
out
mov
xor
mov
and
cmc
sbb
shlb
test
fldt
or
cli
cltd
adc
daa
adc
jns
sti
jmp
cmp
in
cmpsb
sarb
pop
xor
and
out
imul
mov
xchg
xor
ret
xchg
mov
lahf
mov
jnp
ret
mov
sub
das
inc
test
adc
addr16
clc
mov
addr16
jp
adc
jnp
aad
mov
dec
cwtl
imul
lods
fimuls
cmp
rcrl
add
shrl
outsl
divl
dec
insl
or
loope
xor
sahf
xchg
jl
and
in
inc
leave
andb
pop
sbbl
cltd
mov
or
adc
adc
or
cmpb
std
fcmove
test
and
sub
mov
add
es
mov
sbb
add
add
lahf
data16
dec
lock
jl
jp
in
xlat
sub
gs
rclb
add
stos
mov
and
fistps
cmp
call
bnd
mov
dec
adcl
sbb
jo
je
adc
or
aas
iret
cmp
enter
xchg
pop
insl
fidivl
mov
repnz
xchg
push
test
lret
mov
daa
and
sti
jp
lcall
aaa
lock
and
push
hlt
cmp
mov
pop
mov
jno
enter
and
or
mov
orb
mov
mov
mov
loop
imul
dec
pop
lret
dec
sbb
je
les
ja
lods
movsb
push
cmp
xchg
mov
adc
sub
mov
or
pusha
pop
sbb
pop
dec
jno
out
scas
pusha
sti
push
call
mull
lcall
pop
mov
mov
mov
repz
mov
cmp
inc
fidivl
insl
and
or
adc
push
pop
push
xchg
les
bound
ds
into
rep
stc
rclb
rorl
lea
je
push
into
cmpl
mov
popf
pop
inc
ret
xor
mov
movsb
mov
push
cmp
and
inc
cmpsl
out
outsb
cmpsb
das
popa
aaa
pop
push
iret
stc
gs
imul
mov
imul
outsl
ret
setnp
push
mov
mov
shr
pushl
mov
mov
icebp
fimuls
lock
lds
ficomps
inc
sub
dec
jmp
fildl
xor
inc
mov
fistps
mov
cmp
inc
mov
inc
rorb
test
cli
into
inc
out
cmp
push
and
adc
js
dec
enter
jbe
and
pop
int
in
cmp
add
dec
in
or
mov
sub
xor
in
dec
das
lods
adc
inc
shll
lret
mov
add
movsb
out
cld
xor
xchg
xor
inc
push
in
push
fs
pop
or
jge
popl
push
pop
loop
imul
or
sub
push
test
dec
mov
lock
cs
push
pop
lea
repz
das
int3
lahf
hlt
adcl
fdivr
addr16
mov
shl
dec
fwait
sub
mov
aas
fisubl
jo
shlb
das
aam
push
xchg
jns
add
ja
int
xchg
in
cmp
mov
pop
push
negl
stos
or
lock
aam
test
mov
stos
mov
or
pop
aaa
arpl
data16
daa
jno
fsubrl
jb
cmpsb
into
cmp
movsl
data16
xor
lock
lcall
pop
ret
loopne
xchg
popl
xchg
sar
fstl
jnp
xchg
adc
mov
xchg
mov
jne
dec
mov
orl
popa
sbb
xchg
testb
out
rolb
cwtl
in
in
jge
and
mov
jmp
xor
xor
imul
inc
add
out
push
pop
mov
push
pop
sahf
and
xor
push
stos
nop
rcrb
dec
rol
and
sahf
cmpsb
out
iret
push
and
xchg
mov
fs
loopne
xchg
cmp
into
mov
xchg
sub
fxch
out
mov
rcrb
fcomi
das
stos
mov
fs
in
jns
out
jo
popf
push
sbb
fnstsw
adc
adc
push
int
or
mov
sbb
out
repz
push
jl
sar
orb
adc
mov
mov
addr16
mov
test
dec
mov
js
sbb
stc
jmp
cmpsl
mov
mov
mov
and
push
jmp
adc
lret
push
mov
stos
inc
cmp
mov
ja
sbb
or
lods
pop
cs
adcb
cmpsb
or
movsl
lds
movsl
pop
cli
mov
cmp
mov
sbb
add
push
call
add
jae
add
jne
mov
mov
add
push
fld1
jno
pop
xlat
sbb
dec
jbe
xchg
fsubrs
cmp
es
mov
lds
dec
clc
nop
dec
lock
outsb
mov
addb
cmpb
xor
mov
sbb
imul
sub
mov
add
pop
popa
push
data16
sahf
outsl
ret
or
xchg
sub
je
dec
test
sahf
mov
arpl
mov
xorl
xchg
cmp
cmc
push
sub
cltd
or
outsb
or
fcomip
cwtl
mov
loopne
sbb
mov
fcmovne
pushf
test
inc
scas
cwtl
cltd
movsl
xchg
flds
call
mull
imul
in
pop
aad
and
push
addr16
jne
mov
lret
out
pop
sub
pop
repz
jno,pt
cmp
ret
cmpsl
rcll
pop
aas
jl
lods
inc
lret
push
cmc
stos
add
xchg
mov
pusha
fstps
xor
cmp
dec
popa
stc
cwtl
movsb
ljmp
test
pop
jae
je
mov
jae
testb
or
mov
in
cltd
or
and
jle
in
scas
cmpsl
inc
ss
ljmp
shl
push
insb
mov
jns
inc
jge
mov
test
repnz
inc
xchg
test
push
pop
mov
jecxz
jp
outsl
mov
stc
adc
or
mov
dec
mov
push
xor
pop
adc
add
add
sub
cltd
mov
or
jno
cmp
pop
lock
shrb
inc
sahf
jmp
shl
sub
mov
aaa
pop
pop
cmp
or
push
dec
fldenv
mov
ja
insb
mov
sbb
sar
inc
add
jge
jnp
dec
sbb
gs
and
jae
out
and
add
cmc
push
xlat
movsl
xchg
cwtl
les
cmp
pop
mov
fisubrl
pop
cld
mov
mov
mov
add
leave
push
sti
push
ficoml
rcrl
daa
movsb
cli
lds
ret
sbb
jno
int3
adc
incl
xor
xor
mov
cmp
jbe
or
movsl
insl
shll
clc
shl
out
aas
sar
enter
add
js
inc
out
push
add
addl
mov
mov
leave
xor
or
mov
and
ja
add
fcmovnu
dec
ror
adc
dec
jmp
or
stos
add
divl
sub
inc
add
faddp
and
mov
add
push
fsubp
or
lcall
fs
push
js
ja
dec
scas
add
orl
jecxz
lods
and
mov
push
cmpsl
inc
popf
out
adc
sbb
sub
cwtl
mov
popf
outsb
inc
insb
pop
mov
jg
inc
dec
mov
mov
mov
pusha
push
pop
jg
and
ds
cmp
mov
pop
cmp
int
cmc
push
test
pushf
sbb
lods
jl
xchg
mov
jbe
inc
addb
in
lahf
cmp
loopne
sub
sub
std
mov
inc
adc
xchg
xchg
sub
sbb
fcomp
adc
push
inc
mov
jnp
loop
pop
mov
ficomps
inc
popa
mov
push
add
sbb
add
xchg
repz
aam
andl
push
inc
sarl
xchg
movsb
inc
inc
xchg
punpckldq
gs
or
dec
lea
lods
pop
les
mov
out
xchg
and
xchg
xlat
in
sbb
aad
enter
lret
pusha
lods
mov
lcall
push
adcl
xchg
ret
jmp
sub
cs
test
rclb
pusha
cs
adc
mov
push
cmp
fwait
popf
es
sub
or
push
jg
xchg
call
mov
repnz
jle
movsl
shrl
add
push
inc
sbb
mov
mov
mov
jo
insb
sub
ret
and
xchg
push
add
and
jae
or
mov
cmp
out
les
enter
sbb
adc
lds
push
mov
clc
push
mov
cli
in
sbb
insb
jns
push
xchg
fdivl
sub
mov
xchg
push
mov
jg
adc
les
pop
or
divl
fisttpll
loope
aas
mov
lret
pop
and
sahf
cmp
xor
sbb
in
cmp
outsl
pop
mov
inc
adc
loop
das
sarl
movmskps
stc
in
fidivl
pusha
jge
icebp
or
and
rcll
adcb
xor
and
lcall
daa
xor
imul
mov
cltd
dec
pop
fistl
imul
dec
sbb
mov
movsb
inc
imul
dec
jg
mov
sbbl
fs
inc
xchg
jge
mov
mov
mov
pop
popa
imul
mov
dec
sbbb
andb
outsl
add
mov
pop
push
adc
push
cltd
lahf
popa
mov
pusha
les
bnd
imul
inc
jo
pop
es
cmp
rcrl
pusha
push
insl
push
cmp
test
pop
cmc
pop
sbb
test
dec
jl
inc
loop
xlat
push
sub
pop
push
lret
scas
xor
add
jle
ljmp
clc
mov
jecxz
pop
push
mov
dec
lods
mov
or
hlt
jp
mov
pop
shl
sti
fmul
into
dec
lock
cmc
ds
sbb
pushf
adc
or
fbstp
std
pop
inc
in
adc
cmpsl
lret
mov
jo
sbb
and
mov
lods
mov
int3
inc
jge
mov
stos
pop
fnstsw
addb
dec
insl
lods
xchg
lahf
mov
jecxz
fidivs
xchg
fadds
mov
std
fidivrl
jl
jl
rcll
lds
sbb
mov
imul
ret
movsl
jge
test
aad
andl
lock
xor
sbb
add
sbb
sets
cmpsl
push
mov
jno
push
jnp
std
movsl
and
test
shll
mov
adc
inc
cmp
pop
xchg
cli
movl
in
xchg
or
sub
jae
loop
mov
ja
andb
nop
xchg
pop
add
jo
movsb
cmp
jg
add
jmp
push
outsl
pusha
jbe
push
int3
sbb
mov
ftst
sbb
pop
xor
push
pop
and
xchg
int3
push
and
jns
movsl
inc
sub
push
call
stos
jle
fistps
push
js
or
out
inc
mov
popf
shll
and
sub
add
mov
cmp
jmp
sbb
push
sbb
outsb
add
clc
xor
rcrb
es
cmpsb
xchg
xor
add
lock
loope
mov
mov
jo
inc
xchg
or
mov
or
insb
jno
xor
jae
call
popa
das
les
mov
test
sti
ds
xchg
aad
sbbl
or
xchg
std
or
jne
shll
mov
loopne
adc
mov
mov
stos
mov
cltd
rcrb
lcall
cmpl
cmpsb
insb
push
hlt
xchg
das
jne
or
pop
jb
out
fsts
sub
testl
dec
xor
sub
out
ljmp
pop
data16
xchg
push
repz
pop
pop
adc
mov
mov
cli
or
xchg
aaa
loopne
pop
mov
iret
sbb
mov
cmpsl
fnsave
test
pop
out
inc
in
xchg
inc
sbb
js
out
shlb
sub
mov
sub
inc
cmp
leave
scas
repz
mov
or
ret
into
loope
aad
mov
aaa
pop
addr16
rcrb
mov
jge
repz
bswap
adc
popa
mov
daa
adc
sbb
pop
popf
sbb
loopne
inc
popa
loopne
push
xchg
jmp
add
bound
stc
push
cmp
mov
inc
adc
enter
jle
test
ja
adc
dec
xor
sbb
mov
sbb
inc
mov
mov
int3
fs
aaa
rcl
sar
and
jbe
jle
sub
sti
mov
lcall
scas
inc
dec
sti
jmp
mov
and
idivl
or
aam
add
pop
test
sarb
cmc
push
cmp
jp
xor
mov
mov
mov
xchg
mov
lahf
call
or
dec
popf
pop
mov
jmp
dec
psadbw
fwait
mov
cmp
loop
rol
inc
clc
out
fists
stos
sub
or
das
js
jne
out
jns
bound
pop
movsl
adc
incb
add
inc
je
and
pusha
push
je
mov
xchg
push
mov
push
lods
icebp
cmp
mov
insl
and
daa
lock
mov
aas
push
mov
fwait
mov
imul
push
mov
arpl
xchg
cmp
push
push
dec
cld
lea
outsb
xor
ficoml
scas
push
dec
lea
stc
mov
orb
pop
push
jno
cltd
push
sbb
adc
or
push
sti
push
fistps
jecxz
ljmp
stos
jno
jnp
mov
and
xor
shr
mov
xlat
movsb
pop
jb
scas
push
jmp
xchg
cmp
jne
mov
arpl
lea
or
xchg
cli
fidivs
std
inc
push
imul
stc
call
ljmp
into
nop
push
fcmovbe
imul
cmpsb
dec
and
popf
or
stc
notb
sbb
mov
adc
jnp
and
xor
movl
ficoml
stc
push
sub
ret
cmp
daa
dec
hlt
pop
imul
adc
or
lcall
in
loopne
pop
out
repz
jns
add
jne
inc
mov
xchg
mov
lcall
mov
subl
cmp
and
xor
data16
cmp
frstor
and
loop
loop
mov
dec
fimuls
ljmp
mov
dec
mov
inc
mov
jae
sbb
pop
push
xchg
popa
into
sub
mov
sbb
or
adc
insl
lods
cmp
sub
shll
adc
pop
dec
daa
bound
jecxz
sbb
or
jmp
sbb
in
clc
leave
inc
add
stc
fmuls
arpl
mov
in
fwait
iret
sbbb
sbbl
div
add
testl
iret
pushf
jle
faddp
xlat
fistpl
mov
in
cltd
dec
fistpl
aam
mov
cld
stos
mov
sub
shrl
mov
xchg
add
adc
mov
pop
add
push
and
mov
add
orl
cmp
sub
mov
push
cld
push
sub
mov
mov
fdivrs
mov
andb
mov
mov
fisubl
aas
test
cs
push
xor
pop
push
test
push
mov
xchg
mov
sub
test
lods
adc
jnp
repnz
mov
or
dec
enter
aam
into
jle
lods
nop
push
cmp
push
fldenv
cmp
add
mov
and
insl
xor
movb
cmpsl
orl
jp
jns
jmp
in
push
add
loop
push
mov
sbb
mov
mov
sarl
xchg
pop
loop
stos
cmp
in
stos
arpl
nop
nop
lea
inc
mov
cwtl
mov
xchg
fdivrl
mov
stc
mov
pop
fsubl
xchg
fwait
es
sub
pusha
add
mov
push
mov
mov
jbe
in
insb
mov
repnz
inc
mov
pop
or
inc
pusha
cwtl
dec
jne
dec
out
sub
int
push
pop
push
xlat
xchg
and
jb
and
enter
jae
cmp
movb
out
lea
testb
imul
outsl
outsl
ficoms
xchg
push
xor
pusha
add
add
test
sub
push
sbb
out
xlat
xlat
mov
stos
stos
dec
lcall
popf
addb
xchg
cli
adc
pop
pop
mov
inc
inc
mov
lock
in
lods
lods
inc
addr16
mov
mov
scas
inc
mov
movsb
movsb
push
xchg
jb
in
rol
ret
jne
std
std
loope
xchg
xchg
cmp
pop
ss
inc
aas
aas
jle
div
cmc
dec
int3
int3
sbbl
hlt
movsl
movsl
push
xor
in
or
icebp
stc
xchg
jno
loop
fcomp
stos
push
xor
bound
adc
add
push
mov
inc
pop
ret
ret
popf
sub
sbb
mov
add
lcall
adc
and
addb
es
int
daa
daa
dec
int
mov
lahf
jne
ljmp
sbbl
sbb
xor
sbb
ss
outsb
fsubr
pop
pop
mov
mov
push
movsb
dec
cmp
jbe
mov
mov
jge
sub
push
jecxz,pt
fnsave
das
pop
xchg
test
push
add
add
and
cld
cld
jecxz
mov
jns
pop
pop
mov
push
aam
lret
lret
fnstcw
cmp
dec
dec
xchg
aam
dec
cwtl
call
iret
iret
test
sarb
in
stos
dec
push
sti
sti
in
lds
xchg
dec
dec
lcall
test
iret
inc
inc
mov
stc
stc
jmp
cmpl
mov
mov
test
dec
repz
push
mov
rolb
mov
xchg
aas
mov
cmp
jo
cmc
cmc
icebp
fistpll
ja
fcmovu
scas
arpl
and
adc
and
jmp
push
repz
insl
rcl
mov
adc
or
xor
in
in
ret
loope
pop
mov
int3
inc
inc
mov
pop
pop
cs
les
cmpb
inc
cmp
fs
mov
xchg
jae
out
pusha
pusha
rcrb
dec
sahf
jg
fsubl
jle
sub
nop
cmp
inc
inc
mov
out
out
sarl
adc
jns
fisubs
sbb
fcmovnu
lods
cmp
loopne
push
xor
fs
cmp
je
or
adc
dec
dec
xchg
or
push
or
and
dec
in
pop
mov
outsb
rcl
mov
cmpsb
bound
test
xchg
cmp
in
mov
repnz
out
inc
enter
aaa
aaa
outsb
mov
insl
fimull
aad
rorb
pushf
loopne
test
fdivr
push
push
lods
pop
hlt
hlt
repz
gs
jp
jmp
or
adc
mov
js
outsl
and
cs
and
sbb
icebp
cmpsb
cmpsb
push
mov
jae
mov
and
call
mov
and
pop
fisttpll
xchg
fdivrl
mov
nop
jo
loopne
ds
mov
jno
data16
fmuls
nop
add
div
notl
push
push
sbb
popa
popa
ret
xor
scas
sarb
xchg
pop
rol
daa
sbb
sahf
daa
cmp
loope
adc
clc
jmp
cwtl
cwtl
sub
adc
and
test
cmpsl
xchg
xchg
xor
push
push
cmp
xchg
leave
dec
into
into
xchg
push
push
stos
js
sub
movsl
mov
orb
sbb
mov
out
movb
mov
inc
inc
xorb
sub
push
lret
mov
jnp
push
push
test
mov
push
sub
arpl
movsl
jl
clc
test
out
cltd
jnp
testb
imul
outsl
outsl
fidivs
xor
pusha
push
add
add
addr16
test
out
xlat
xlat
mov
stos
stos
dec
out
jbe
lcall
pop
popf
leave
leave
mov
jge
xchg
cli
out
adc
inc
inc
mov
lock
or
aam
addr16
std
scas
scas
inc
ljmp
push
divl
in
rol
pop
mov
jne
std
std
loope
xchg
xchg
cmp
push
ss
pop
aas
aas
jle
div
cmc
add
int3
orl
push
hlt
in
shll
icebp
stc
or
loop
fcomp
stos
jae
xor
adc
add
or
xchg
push
and
inc
gs
ret
popf
pop
sbb
xor
xchg
xchg
aaa
mov
lcall
or
adc
addb
cmp
daa
daa
dec
imul
or
sbb
sub
je
sbb
sbb
ss
pop
pop
mov
mov
push
movsb
idivb
cmp
mov
mov
jge
sub
push
jnp
jecxz
ds
das
pop
jno
test
xchg
push
push
cmpsb
cmc
rcl
mov
add
in
shrl
inc
pusha
cld
cld
jecxz
mov
jns
pop
pop
mov
push
aam
lret
lret
lea
mov
jb
dec
dec
xchg
fimuls
aam
pop
mov
iret
iret
test
sarb
sub
sti
in
push
inc
inc
xchg
dec
dec
lcall
test
xchg
inc
inc
mov
stc
stc
jmp
push
jg
incb
cmp
js
lahf
lahf
and
jecxz
push
mov
incb
add
popl
lods
popf
popf
and
cmc
icebp
add
mov
ja
fcmovu
scas
jne
and
adc
and
jmp
sbb
repz
push
rcl
mov
dec
or
sbb
adc
xor
pop
pop
mov
mov
pop
pop
cs
les
bnd
cld
cmpb
enter
mov
sub
out
pusha
pusha
shlb
dec
sahf
rcr
fsubl
data16
push
jle
nop
cmp
inc
inc
mov
out
out
sub
adc
cmp
fisubs
loop
or
sbb
loopne
fstpt
xor
fs
cmp
je
or
adc
dec
dec
xchg
fildl
push
or
and
dec
insb
pop
pop
mov
pop
rcl
mov
out
bound
cmpsb
xchg
xchg
cmp
in
shll
jns
repnz
out
xor
enter
aaa
outsb
pop
insl
insl
fidivl
aad
mov
dec
dec
pushf
shrb
insb
fdivs
hlt
repz
ljmp
scas
jp
hlt
mov
or
sbb
js
mov
cs
jb
sbb
and
cmpsb
push
icebp
mov
jae
mov
push
call
frstor
pushf
pop
pop
and
xchg
fnstsw
mov
test
loopne
ds
mov
jno
data16
stos
dec
dec
nop
fadds
add
add
push
push
sbb
popa
popa
ret
xor
scas
stc
mov
xchg
xchg
rol
pop
sbb
sahf
daa
mov
clc
clc
jmp
cwtl
cwtl
sub
imul
jo
mov
mov
sub
and
jmp
xchg
push
stos
ljmp
sub
movsl
jp
mov
mov
mov
orb
gs
out
xor
test
push
inc
add
cltd
sub
nopl
mov
jnp
push
push
test
mov
push
sub
arpl
movsl
arpl
jl
out
cltd
ja
testb
imul
imul
outsl
lds
push
xor
add
add
test
sub
out
xlat
mov
xlat
stos
dec
out
jbe
lcall
pop
popf
or
inc
leave
jge
xchg
out
adc
pop
inc
mov
inc
lock
or
lods
inc
in
lods
aam
addr16
pop
std
mov
pushf
and
movsb
jb
xchg
jb
fwait
pop
shlb
sbb
xchg
cmp
push
ss
pop
ss
jle
aas
div
add
int3
orl
push
hlt
movsl
in
xor
icebp
stc
or
jno
xchg
jno
stos
jae
xor
xor
or
xchg
push
and
and
popf
pop
ret
sbb
sub
xchg
aaa
mov
add
pop
push
or
adc
adc
fistpll
jmp
dec
imul
jne
lahf
jne
adc
or
pop
je
sbb
sbb
ss
outsb
pop
mov
pop
mov
movsb
notb
jbe
cmp
mov
mov
into
mov
push
jnp
jecxz
jecxz,pt
pop
jno
test
xchg
test
cmc
push
sarl
add
in
shrl
jecxz
cld
mov
enter
in
pop
push
mov
lret
mov
jb
cmp
fimuls
cwtl
aam
pop
mov
pop
iret
test
sarb
sub
stos
dec
in
sti
in
push
sti
inc
xchg
inc
dec
lcall
test
xchg
test
iret
inc
stc
jmp
push
add
cmpl
js
cmp
and
jecxz
push
mov
mov
popl
lods
xchg
popf
and
cmc
icebp
add
mov
ja
mov
scas
jne
and
and
and
adc
in
push
std
push
repz
dec
int
sbb
adc
xor
in
pop
mov
mov
inc
pop
cmp
les
repnz
jle
cmpb
inc
cmp
pop
mov
sub
jae
xchg
jae
shlb
dec
sahf
rorl
mov
data16
push
jle
nop
cmp
mov
lret
sub
mov
sub
fisubs
loop
or
sbb
fneni(8087
fstpt
loopne
fs
xor
je
cmp
adc
or
fisttpl
or
push
and
insb
and
mov
pop
ret
outsb
shrl
cmpsb
bound
xor
jns
mov
aad
out
mov
aaa
outsb
pop
aaa
insl
fidivl
aad
fs
pushf
rorb
dec
loopne
insb
fdivs
hlt
repz
hlt
ljmp
gs
mov
inc
jmp
or
lock
dec
outsl
and
sbb
and
cmpsb
push
icebp
cmpsb
mov
mov
xchg
push
call
mov
pushf
je
and
dec
xchg
fisttpll
popa
fdivrl
mov
test
jl,pt
ds
les
dec
nop
fmuls
push
add
testb
adc
popa
ret
xor
scas
stc
push
mov
pop
xchg
xchg
cltd
pop
rcrl
mov
loope
jmp
clc
cwtl
sub
adc
mov
xor
fwait
push
cmp
push
xchg
and
into
xchg
push
stos
call
push
js
fbld
mov
or
or
out
xor
inc
test
inc
push
add
cltd
sub
sub
mov
lret
mov
test
push
mov
sub
push
movsl
arpl
test
cltd
ja
testb
repnz
mov
outsl
outsl
xchg
push
vpunpcklbw
xor
add
add
test
sub
out
mov
xlat
xlat
dec
out
stos
in
lcall
pop
popf
addb
xchg
out
adc
pop
pop
mov
inc
inc
sti
or
lock
in
lods
lods
mov
aam
pop
std
mov
scas
and
movsb
movsb
in
jb
fwait
pop
rol
ret
loope
std
std
cmp
push
es
pop
ss
aas
aas
cmc
add
testl
hlt
movsl
movsl
shll
icebp
loop
jno
stos
jae
fsubs
xor
sub
adc
add
push
mov
popf
pop
ret
ret
xor
sbb
aaa
mov
add
lcall
adc
sbb
loop
int
jmp
dec
imul
mov
lahf
jne
adc
or
sbb
je
sub
sbb
ss
outsb
outsb
mov
pop
pop
pop
sti
mov
push
jbe
cmp
mov
jge
mov
push
jnp
sub
jecxz,pt
pop
jno
das
adc
push
push
mov
add
add
sub
in
inc
pusha
and
jecxz
cld
cld
jns
mov
mov
pop
pop
aam
push
lea
lret
fnstcw
dec
cmp
xchg
fimuls
cwtl
aam
dec
mov
pop
pop
test
iret
mov
sub
out
dec
in
stos
in
push
sti
sti
xchg
inc
inc
lcall
xor
xchg
test
jmp
push
add
incb
push
push
js
cmp
and
jecxz
test
repz
push
pop
mov
inc
add
lods
xchg
xchg
and
cmp
add
cmc
arpl
mov
mov
jne
fiaddl
and
and
adc
in
std
push
repz
dec
int
sbb
or
xor
in
in
mov
mov
inc
inc
cmp
pop
xchg
push
les
cmpsl
cmpsl
cld
cmpb
inc
cmp
fs
sub
sbb
xchg
jae
shlb
sbbl
data16
push
jle
sub
stos
nop
nop
or
inc
inc
sub
out
imul
mov
cmpsl
jns
fidivrs
or
lods
jbe
fcmovnu
cmp
loopne
push
xor
je
cmp
adc
or
xchg
fisttpl
or
push
push
dec
insb
and
mov
pop
ret
outsb
rcl
inc
out
lods
lods
les
xchg
xchg
xor
in
mov
aad
out
mov
enter
aaa
fidivl
lea
pushf
rorb
dec
loopne
test
lods
cli
push
push
repz
hlt
hlt
iret
and
gs
mov
inc
jmp
or
outsl
aad
mov
dec
outsl
and
cmp
sbb
icebp
cmpsb
cmpsb
jae
mov
xchg
push
mov
and
call
call
and
pop
xchg
fisttpll
popa
fdivrl
mov
test
jo
inc
ds
mov
int3
stos
data16
fmuls
push
add
div
sbb
push
push
ret
popa
push
xor
push
imul
xchg
cmp
sbb
sahf
fnstcw
loope
jmp
clc
clc
sub
adc
sarb
pop
mov
xchg
sub
and
push
adc
and
jmp
stos
call
push
js
sub
mov
orb
fidivrl
out
movb
mov
inc
inc
sub
sub
lret
mov
test
push
push
insl
mov
push
arpl
arpl
jl
ja
ja
jnp
jnp
repnz
outsl
outsl
outsl
outsl
lds
xor
xor
add
add
addr16
sub
xlat
xlat
xlat
xlat
stos
stos
stos
stos
jbe
jbe
lret
lret
addb
jge
jge
cli
cli
cli
pop
pop
pop
pop
inc
inc
inc
inc
lock
lods
lods
lods
aam
aam
mov
scas
scas
scas
pushf
pushf
pushf
pushf
movsb
movsb
movsb
movsb
jb
jb
rol
shlb
std
std
xchg
xchg
xchg
xchg
es
aas
aas
aas
div
div
int3
int3
int3
int3
xor
xor
movsl
movsl
movsl
movsl
in
in
icebp
icebp
icebp
icebp
jno
jno
fcomp
fcomp
xor
xor
adc
add
add
mov
and
ret
ret
ret
sbb
sbb
xchg
xchg
xchg
xchg
add
lcall
adc
adc
addb
loop
jmp
jmp
daa
daa
daa
mov
mov
jne
jne
or
or
addl
sub
sbb
sbb
sbb
sbb
outsb
outsb
pop
pop
pop
pop
mov
push
push
push
cmp
cmp
mov
mov
sub
sub
jecxz
jecxz
das
das
das
das
test
push
rcl
rcl
add
add
in
in
in
in
and
and
cld
cld
cld
cld
mov
mov
pop
pop
pop
pop
push
push
lret
lret
lret
lret
mov
cmp
cmp
dec
dec
dec
dec
dec
dec
pop
pop
pop
pop
iret
iret
iret
iret
rcl
rcl
out
out
out
out
stos
stos
stos
stos
sti
sti
sti
sti
inc
inc
inc
inc
dec
dec
dec
dec
xor
xor
test
inc
inc
stc
stc
stc
stc
add
add
jg
jg
push
push
push
push
cmp
cmp
lahf
lahf
lahf
lahf
test
test
push
push
push
push
mov
inc
inc
inc
xchg
xchg
xchg
xchg
popf
popf
popf
popf
cmp
cmp
cmc
cmc
cmc
cmc
mov
mov
mov
fcmovu
fisubl
and
and
adc
adc
push
repz
rcl
int
int
or
or
adc
adc
in
in
in
in
pop
pop
pop
pop
xchg
xchg
xchg
xchg
inc
inc
inc
inc
pop
pop
pop
pop
les
jle
jle
cmp
fs
pop
pop
pop
sbb
sbb
jae
jae
pusha
pusha
pusha
pusha
addl
and
and
sub
sub
nop
nop
nop
nop
mov
inc
inc
out
out
out
out
mov
adc
adc
ficomps
pop
pop
or
or
fcmovnu
fcmovnu
loopne
loopne
xor
xor
cmp
cmp
or
or
dec
dec
dec
dec
push
push
push
push
and
and
pop
pop
pop
pop
ret
ret
rcl
lods
lods
lods
lods
bound
bound
xchg
xchg
xchg
in
in
jns
jns
out
out
enter
aaa
aaa
aaa
aaa
insl
insl
insl
insl
lea
aad
dec
dec
dec
dec
test
insb
insb
insb
push
push
push
push
hlt
hlt
hlt
hlt
ljmp
gs
jp
scas
scas
scas
scas
or
or
mov
js
js
and
cs
sbb
cmpsb
cmpsb
cmpsb
cmpsb
mov
mov
mov
call
fstp
fnsave
je
pop
pop
pop
dec
dec
dec
dec
mov
mov
mov
jo
ds
mov
data16
dec
dec
dec
add
add
div
div
push
push
push
push
popa
popa
popa
popa
xor
push
push
push
mov
xchg
rcrl
sahf
sahf
loope
loope
clc
clc
clc
clc
cwtl
cwtl
cwtl
cwtl
adc
adc
imul
xchg
xchg
xchg
fwait
fwait
fwait
fwait
push
push
push
push
xchg
jmp
into
push
push
push
push
sub
sub
mov
mov
or
mov
out
inc
inc
inc
inc
push
inc
inc
inc
cltd
cltd
cltd
cltd
sub
pfcmpeq
mov
mov
push
push
push
mov
push
push
push
push
cmpsl
hlt
push
push
gs
jle
movsb
pop
sbb
imul
stos
pop
cli
lods
xchg
add
dec
push
cli
xor
imulb
lods
xchg
jbe
mov
xlat
in
xlat
lret
sub
addb
mov
mov
sbb
push
ljmp
jne
ret
adc
dec
andl
pop
popl
xchg
pushf
xchg
adc
ficompl
xchg
sub
and
imul
mov
ret
jns
hlt
imul
cltd
fnsave
daa
mov
loope
pop
lods
mov
data16
and
mov
into
jge
dec
fbld
xor
in
xor
inc
jg
loopne
fs
scas
imul
sub
stc
pop
push
inc
popl
clc
jnp
and
jae
loop
dec
jb
pop
jecxz
stos
push
popw
sub
mov
ret
lcall
shl
xchg
xor
push
add
in
sub
mov
repnz
repz
hlt
fisubl
mov
xor
mov
cmpsb
les
push
repz
jne
mulb
out
pusha
inc
push
lahf
jno
push
adc
stc
mov
ds
add
out
mov
push
xchg
add
aam
add
adc
cwtl
sbb
inc
inc
mov
fldenv
inc
call
pop
cmp
out
out
enter
jl
jmp
push
test
add
add
addl
xor
pop
insb
sti
decl
std
push
cmp
cmp
or
cmpsb
pop
push
cmp
ss
or
movntq
rclb
fwait
sbb
rolb
dec
ja
push
sbb
sbb
mov
mov
cmp
pop
sbb
or
mov
mov
test
icebp
push
dec
pop
jne
mov
pusha
jg
lahf
es
mov
cmp
xor
sti
pop
jbe
inc
mov
and
push
icebp
in
lret
xlat
adc
xchg
adc
adc
test
dec
test
cmp
stc
scas
insl
mov
sahf
sbb
in
push
xchg
insb
push
mov
cltd
mov
xchg
adc
fs
test
aas
lock
out
nop
xor
dec
dec
xchg
sarl
fsin
mov
aam
iret
xor
movsl
mov
aas
in
cmp
int3
pop
push
inc
jle
ret
imul
mov
cmp
cmc
scas
ret
cmpb
shrb
sub
and
enter
adc
pushf
call
or
int
sbb
add
dec
andl
out
out
stos
or
mov
out
fstps
outsl
dec
aam
lahf
ljmp
movsb
xor
and
sub
xchg
movsl
mov
mov
je
lret
mov
nop
loopne
fsubs
icebp
neg
in
inc
push
push
int
das
notb
jbe
mov
inc
push
dec
stos
int3
filds
in
mov
sahf
sbb
sub
jg
gs
add
pop
popf
pop
xor
xchg
cs
or
pop
sbb
fistl
adc
insl
mov
lcall
clc
pop
mov
jmp
daa
test
mov
in
loope
mov
jp
pushf
aas
jae
push
jns
adc
mov
int
push
pop
stos
std
pop
adc
cmp
js
repz
lret
push
cmp
mov
push
or
loop
mov
sub
or
cmp
mov
or
push
fs
test
jnp
mov
aad
pop
insb
dec
inc
push
mov
push
gs
jle
movsb
pop
sbb
pop
daa
cmp
inc
popf
pop
icebp
pop
cli
lods
stos
add
dec
xchg
cli
xor
push
insl
jbe
divb
mov
xlat
in
cld
lret
sub
xlat
inc
xor
mov
pop
mov
dec
sbb
inc
cwtl
sar
loope
das
ret
add
dec
adcl
stc
shrl
pop
popl
out
xchg
adc
jmp
push
xchg
fiaddl
je
shrl
dec
sub
leave
mov
jne
jns
hlt
js
pop
cltd
imul
fisttpll
mov
pop
lods
and
data16
jge
dec
fbld
xor
in
xor
pusha
jg
bound
fs
scas
imul
sub
stc
xchg
push
inc
sbb
xchg
jnp
mov
jae
and
dec
jb
pop
jecxz
stos
push
data16
jmp
pop
ret
add
xchg
xchg
xor
movsl
mov
add
sbb
mov
mov
cmpsl
xchg
repnz
repz
dec
mov
mov
xor
pop
cmpsb
les
push
repz
xor
mulb
out
pusha
inc
stos
lahf
jno
push
adc
push
mov
ds
push
fstl
scas
mov
push
xchg
mov
les
aam
add
adc
cwtl
sbb
mov
mov
sahf
fldenv
inc
call
pop
mov
out
out
enter
jl
inc
cmovb
test
leave
add
add
xchg
xor
adc
lods
jb
insb
dec
decl
std
sti
cmp
cmp
daa
or
push
shrl
ss
or
mov
push
xchg
setbe
mov
xchg
fwait
sbb
and
popa
mov
sbb
sbb
mov
mov
cmp
pop
sbb
sbb
mov
lods
test
sub
enter
test
jne
dec
fstpl
mov
lahf
cmc
jb
mov
jle
pop
xor
inc
mov
and
fdivr
in
mov
icebp
in
arpl
xor
lret
inc
adc
xchg
adc
movb
mov
scas
adc
sahf
sbb
repz
xchg
rclb
mov
insb
mov
xchg
adc
fs
test
aas
lock
fcoms
dec
xchg
sarl
fld
mov
aam
ss
movsl
sub
lods
aas
movsb
popf
cmp
xchg
js
or
inc
jle
bound
test
fcoms
pop
scas
ret
xor
pop
lahf
mov
sub
and
enter
adc
mov
es
sbb
hlt
mov
in
add
xchg
out
out
stos
jle
mov
out
out
out
fnstenv
outsl
dec
into
or
sub
mov
xor
xchg
movsl
xor
xor
aaa
lret
cmpsb
rclb
xor
inc
notl
jg
notb
jbe
mov
inc
dec
dec
stos
int3
push
add
in
mov
sahf
jecxz
push
sbb
sub
mov
ljmp
pop
je
cli
jae
or
cs
fistl
xor
insl
adc
lcall
clc
pop
mov
jmp
daa
test
mov
in
loope
mov
jp
pushf
pop
jae
push
aas
into
adc
jns
jae
int
push
ljmp
fists
inc
js
repz
lret
push
cmp
mov
push
jb
loop
or
cmp
mov
test
jno
or
fsubp
mov
pushf
rcll
test
jnp
mov
aad
pop
insb
dec
je
mov
push
cmpsl
inc
jle
gs
sbb
movsb
daa
cmp
imul
stos
pop
jecxz
xchg
add
and
jbe
imulb
mov
dec
in
cld
xlat
sub
xlat
lret
xor
mov
mov
mov
inc
cwtl
push
pop
loope
das
ret
add
adcl
xchg
shrl
stc
popl
out
xchg
adc
jmp
push
xchg
ficompl
aam
xorl
loopne
sub
mov
jne
mov
cltd
imul
daa
fnsave
mov
pop
lods
and
data16
into
jge
cmp
arpl
dec
sbb
xorb
xchg
pusha
xor
inc
jg
mov
ja
mov
sbb
or
xchg
sub
pop
push
ficoms
clc
jae
and
dec
jb
add
jecxz
push
data16
mov
add
lds
movsl
or
xor
xchg
add
or
sub
cmpsl
xchg
mov
repz
hlt
add
rcrl
bound
xor
push
repz
xor
mulb
in
pusha
inc
stos
out
jno
push
lahf
outsb
mov
stc
mov
xchg
cmp
add
push
xchg
mov
les
pop
push
add
aam
pusha
call
mov
mov
inc
fldenv
sahf
call
pop
mov
enter
jl
inc
or
jmp
push
add
add
orb
xchg
xor
adc
lods
jo
insb
dec
jb
std
sti
incl
cmp
daa
cmp
or
push
rcll
cmp
or
addr16
xchg
movntq
out
mov
xchg
fwait
sbb
mov
dec
adc
sbb
shl
and
loopne
adc
or
mov
mov
test
jne
dec
pop
cltd
out
mov
pusha
add
lahf
es
mov
cmp
pop
xor
inc
mov
and
fadd
in
mov
cld
in
arpl
xor
lret
inc
adc
movb
mov
scas
adc
sub
insl
mov
mov
repz
ja
jecxz
sub
test
cli
dec
jmp
test
mov
mov
fsubrs
and
nop
dec
xchg
dec
cmp
rcl
mov
mov
cmc
cmpsb
iret
cmpl
mov
sub
popf
js
or
int3
jle
bound
test
fcoms
pop
test
lahf
mov
xchg
aad
test
adc
cmpsl
jge
call
jnp
es
js
outsb
hlt
sbb
subl
ljmp
or
adc
mov
into
ss
ljmp
movsb
xor
and
xor
aaa
mov
nop
loopne
shlb
icebp
dec
cwtl
in
inc
neg
int
push
push
xchg
pop
das
testb
out
inc
dec
mov
int3
push
dec
xchg
in
add
sahf
jecxz
push
sbb
gs
jg
pop
popf
add
mov
pop
xor
or
cs
addr16
sbb
adc
xor
insl
adc
lcall
clc
pop
mov
jmp
cmp
into
out
daa
popa
mov
leave
sbb
in
in
jp
mov
pushf
pop
fcomip
push
aas
jae
sbb
jae
aaa
notl
int
pop
pop
stos
cmp
js
fldt
mov
sub
mov
push
jb
loop
or
cmp
mov
incl
test
jno
or
fidivs
push
fs
ror
popa
test
aad
mov
dec
je
mov
push
cmpsl
hlt
jle
gs
sbb
movsb
pop
cmp
imul
stos
pop
cli
dec
xchg
add
and
xor
xchg
jbe
cmc
and
xlat
in
xlat
lret
sub
addb
mov
mov
sbb
push
ljmp
jne
adcl
xchg
inc
imul
roll
out
adc
jmp
insl
xchg
ficompl
aam
cmpl
sub
mov
jne
mov
hlt
js
mov
fnsave
mov
pop
lods
mov
data16
and
cmp
arpl
dec
xorb
xchg
pusha
xor
inc
jg
mov
ja
mov
sbb
cmp
pop
push
inc
xchg
xchg
mov
jnp
and
jae
loop
dec
jecxz
pop
data16
jmp
add
mov
lcall
xor
xchg
and
push
in
pop
adcb
sub
cmpsl
xchg
mov
repz
dec
mov
hlt
fiaddl
aad
add
les
push
mov
xor
mov
in
addl
pusha
pop
push
lahf
jno
push
adc
stc
mov
xchg
cmp
add
out
mov
push
jno
pop
les
aam
pusha
call
cwtl
xchg
jmp
inc
addr16
fnstenv
mov
sbb
out
enter
jl
jmp
push
test
add
add
addl
push
lods
jo
insb
dec
jb
std
sti
decl
orps
test
daa
cmp
push
rcll
cmp
ss
or
push
mov
xchg
out
sbb
mov
dec
ja
push
sbb
loop
mov
mov
adc
or
mov
enter
test
icebp
scas
dec
pop
jne
mov
pusha
jg
lahf
add
jb
lds
pop
xor
sti
mov
inc
lret
fadd
and
arpl
in
lret
inc
adc
xchg
test
adc
test
dec
sar
cmp
stc
insl
mov
sahf
fdiv
xor
ja
jecxz
sub
test
cli
dec
xchg
inc
and
les
push
fsubrs
xchg
dec
dec
fld
sarl
mov
mov
aam
iret
xor
fisubl
mov
sub
popf
cmp
xchg
js
fwait
int3
pop
push
bound
test
lea
pop
idivl
xor
ret
lahf
mov
xchg
shrb
sub
and
adc
arpl
or
outsb
hlt
sbb
add
dec
out
outsb
xchg
stos
jle
jmp
or
mov
mov
into
outsl
ljmp
mov
scas
mov
sub
and
xor
je
mov
and
rclb
icebp
dec
cwtl
add
neg
in
jg
push
int
das
notb
inc
dec
mov
int3
push
dec
stos
in
add
sahf
jecxz
rorl
push
mov
push
gs
add
pop
add
mov
jae
xchg
cs
or
push
rcr
jmp
adc
lcall
mov
jmp
cmp
into
out
daa
test
loope
in
jp
mov
pushf
pop
push
aas
jae
sbb
adc
mov
int
pop
pop
stos
std
fists
cmp
lret
scas
mov
sub
and
pop
inc
mov
mov
mov
incl
or
or
mov
fcomps
push
jnp
test
aad
mov
dec
je
insb
rolb
mov
or
or
push
push
aad
aad
xor
xor
ss
movsl
movsl
movsl
cmp
cmp
mov
inc
inc
inc
mov
sahf
sahf
sahf
addl
xlat
xlat
sti
sti
sti
sti
jl
jl
jecxz
jecxz
cmp
cmp
addb
fwait
das
das
das
das
incl
xor
xor
mov
inc
inc
inc
inc
inc
jmp
lret
lret
lret
push
push
push
push
jnp
jnp
xchg
xchg
xchg
xchg
xor
xor
cmpsb
cmpsb
cmpsb
cmpsb
ret
ret
and
cmp
out
out
out
dec
dec
dec
dec
xchg
xchg
xchg
xchg
or
or
inc
inc
inc
inc
cli
cli
cli
cli
ret
ret
ret
ret
dec
dec
dec
dec
or
or
cs
data16
sub
and
and
mov
mov
jbe
jbe
pop
pop
pop
pop
mov
dec
dec
dec
insl
insl
insl
insl
mov
rcl
and
jb
jb
clc
clc
clc
div
div
fs
push
cwtl
push
push
push
push
aam
aam
movsb
movsb
movsb
movsb
pop
pop
pop
pop
int3
int3
int3
int3
pop
pop
pop
pop
gs
mov
xchg
xchg
xchg
xchg
insb
insb
insb
insb
jo
jo
dec
dec
dec
dec
push
push
push
push
std
std
std
std
in
in
in
in
mov
fcmovu
ficompl
pop
pop
adc
inc
inc
inc
push
push
push
push
cmpsl
cmpsl
cmpsl
cmpsl
lea
popf
popf
test
nop
fcomp
fcomp
stos
stos
stos
stos
add
add
mov
mov
or
or
div
div
in
in
pop
pop
pop
pop
add
mov
mov
inc
inc
inc
inc
push
push
push
push
rcl
rcl
sub
sub
push
push
push
push
lret
aas
aas
lar
add
rol
shrl
mov
add
add
add
adc
adc
imul
cmp
cmp
adc
adc
inc
inc
dec
dec
dec
dec
addr16
ljmp
xchg
repnz
iret
iret
iret
into
into
into
into
lock
mov
out
out
jae
jae
xchg
xchg
xchg
xchg
lods
lods
lods
lods
je
je
and
and
out
out
lods
lods
lods
lods
xor
test
loop
stc
stc
stc
aaa
aaa
aaa
aaa
call
sbb
sbb
jne
jne
fildll
outsb
outsb
inc
inc
inc
inc
icebp
icebp
icebp
icebp
sbb
sbb
jno
jno
sbb
sub
sub
mov
outsl
outsl
mov
mov
bound
bound
push
push
push
stos
stos
stos
stos
sbb
sbb
mov
sbb
sbb
cld
cld
cld
push
push
push
push
ds
dec
dec
dec
mov
rcl
rcl
jns
jns
and
and
lcall
fcmovnb
rol
js
js
int
int
pop
pop
pop
pop
hlt
hlt
hlt
hlt
pop
pop
pop
pop
fstp
fstp
test
test
xor
xor
mov
pop
pop
mov
xor
mov
mov
adc
adc
adc
adc
pop
pop
pop
pop
daa
daa
daa
daa
addb
in
pop
pop
pop
pop
pusha
pusha
pusha
pusha
push
push
push
push
jg
jg
test
sbb
sbb
dec
dec
dec
or
sub
in
jp
jp
lahf
lahf
lahf
lahf
xchg
xchg
xchg
xchg
leave
leave
leave
leave
pushf
pushf
pushf
pushf
out
out
out
out
mov
loopne
loopne
cmp
cmp
dec
dec
scas
scas
scas
scas
sub
sub
cmc
cmc
cmc
cmc
mov
mov
enter
jmp
jmp
mov
cmp
cmp
addl
cltd
cltd
cltd
cltd
popa
popa
popa
popa
pop
pop
pop
pop
sub
sub
add
add
jle
jle
mov
ja
ja
es
loope
imul
adc
arpl
push
push
push
push
and
and
or
or
jge
jge
add
add
add
add
add
add
add
or
add
adc
add
and
add
inc
add
add
add
add
cmp
sub
sbb
or
cmp
sub
sbb
or
cmp
sub
sbb
or
cmp
sub
aas
aaa
das
daa
pop
pop
sysret
ds
push
push
push
cmp
adc
or
add
add
or
or
movups
adc
push
adc
sbb
add
adc
add
or
pop
sbb
and
xor
daa
cmp
xor
sbb
add
add
and
add
adc
add
or
add
add
add
add
add
add
add
mov
xchg
push
xor
xchg
push
loopne
xchg
push
push
cmp
push
rcr
xchg
push
shlb
push
rcrb
xchg
push
push
sub
xchg
push
mov
xchg
push
adc
xchg
push
pusha
pusha
xchg
push
subb
push
add
push
mov
xchg
push
push
cmp
push
jo
xchg
push
add
xchg
push
add
push
nop
sbb
push
pusha
gs
push
mov
xchg
push
cmpb
push
mov
xchg
push
rclb
mov
xor
xchg
push
push
lea
push
push
lea
push
rcrb
xchg
push
push
sub
xchg
push
rcrb
xchg
push
adc
xchg
push
pusha
pusha
xchg
push
nop
popa
xchg
push
add
push
mov
xchg
push
push
cmp
push
push
lea
push
lock
push
sbb
push
jo
xchg
push
push
cmp
push
cmpb
push
mov
add
iret
jg
add
and
or
add
sbb
sldt
add
and
or
or
xchg
testl
adc
add
xor
xor
or
xchg
testl
adc
add
xor
xor
push
add
add
sldt
add
sub
or
add
fiaddl
add
adc
add
xor
xor
dec
add
add
add
adc
add
xor
or
dec
add
add
add
adc
add
xor
or
dec
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
adc
and
add
and
adc
and
add
add
add
add
adc
and
add
and
adc
and
adc
and
add
add
add
and
adc
and
add
add
add
add
adc
add
add
and
adc
and
adc
add
adc
and
add
and
adc
and
add
add
add
add
adc
and
add
and
add
add
add
add
add
add
add
and
adc
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
addb
and
add
add
add
add
add
and
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
or
add
add
add
add
add
add
add
inc
add
or
add
add
add
or
add
inc
add
or
add
add
add
inc
add
add
add
or
add
inc
add
add
add
add
add
inc
add
or
add
add
add
inc
add
add
add
add
add
inc
add
or
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
inc
add
or
add
add
add
inc
add
or
add
add
add
inc
add
add
add
add
add
or
add
inc
add
or
add
add
add
inc
add
or
add
add
add
or
add
inc
add
or
add
add
add
add
add
add
add
add
add
inc
add
or
add
add
add
and
add
add
add
inc
inc
and
add
adc
add
adc
and
add
add
and
inc
inc
add
add
adc
add
adc
inc
add
inc
add
add
add
adc
add
add
add
add
adc
and
inc
add
add
add
inc
add
adc
add
adc
inc
and
add
add
add
adc
add
inc
inc
and
inc
add
add
add
inc
inc
and
add
and
inc
add
adc
add
adc
inc
and
inc
inc
add
inc
inc
and
add
adc
add
add
and
add
add
and
add
and
inc
add
adc
add
adc
and
inc
inc
add
add
adc
add
inc
inc
and
add
add
add
adc
add
add
add
add
adc
add
inc
add
adc
inc
add
inc
add
add
add
add
and
add
and
add
adc
and
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
inc
adc
add
add
inc
adc
adc
add
add
add
inc
add
add
add
inc
adc
add
add
add
add
inc
adc
add
add
inc
add
add
add
inc
add
adc
adc
adc
add
add
add
inc
add
inc
add
add
add
inc
adc
add
add
inc
add
adc
adc
adc
add
add
add
inc
adc
add
add
add
add
add
add
inc
add
add
add
add
add
inc
adc
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
adc
adc
add
add
add
inc
add
inc
add
adc
add
add
add
inc
adc
adc
add
add
add
add
add
add
add
inc
adc
add
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
and
add
and
add
xor
add
sub
add
add
add
adc
add
or
add
and
add
xor
add
sub
add
add
add
popa
sub
ja
bound
jb
bound
popa
sub
add
add
jb
add
popa
bound
add
add
add
add
rclb
push
add
add
incl
add
add
add
add
into
xchg
push
add
add
add
xchg
push
rclb
push
add
add
loopne
xchg
push
add
add
incl
add
add
add
add
xchg
push
add
add
dec
into
xchg
push
loopne
xchg
push
add
add
mov
add
add
add
add
add
adcb
add
add
add
adc
add
clc
push
xchg
push
add
add
incl
add
add
add
add
into
xchg
push
mov
add
add
add
add
into
xchg
push
or
add
add
add
clc
push
xchg
push
add
add
cmp
push
add
add
incl
add
add
add
add
iret
xchg
push
mov
add
add
add
add
iret
xchg
push
add
add
add
add
cmp
push
add
add
mov
add
add
add
add
incl
add
add
add
add
add
add
add
add
incl
add
add
add
add
iret
xchg
push
add
add
mov
add
add
iret
xchg
push
add
add
in
iret
xchg
push
js
xchg
push
add
add
js
xchg
push
add
add
incl
add
add
add
add
add
add
add
add
incl
add
add
add
add
rclb
push
add
add
adc
xchg
push
mov
rclb
add
push
xchg
push
add
add
adc
add
xor
push
add
add
incl
add
add
add
add
rclb
push
add
add
mov
add
add
add
add
add
add
push
xchg
push
add
add
jo
xchg
push
add
add
incl
add
add
add
add
rclb
push
add
add
enter
add
add
add
add
add
add
jo
xchg
push
add
add
clc
push
xchg
push
add
add
incl
rcll
push
add
add
sbb
xchg
push
clc
push
xchg
push
add
add
mov
xchg
push
add
add
incl
add
add
add
add
xchg
push
add
add
test
xchg
push
mov
xchg
push
add
add
lock
xchg
push
add
add
incl
add
add
add
add
rcll
add
add
add
rcll
add
push
xchg
push
add
add
xor
push
add
add
incl
add
add
add
add
push
xchg
push
add
add
incl
rclb
push
add
add
sbb
xchg
push
adc
push
add
add
sub
xchg
push
add
add
push
rclb
add
push
xchg
push
add
add
jo
xchg
push
add
add
incl
add
add
add
add
rclb
push
add
add
loopne
xchg
push
jo
xchg
push
add
add
pop
push
xchg
push
add
add
incl
add
add
add
add
add
add
add
add
incl
add
add
add
add
rcll
push
add
add
or
xchg
push
mov
rcll
add
rclb
push
add
add
inc
rcll
add
xchg
push
dec
iret
xchg
push
add
add
mov
xchg
push
mov
rcll
push
add
add
in
xchg
push
loopne
xchg
push
add
add
loopne
xchg
push
add
add
incl
add
add
add
add
push
xchg
push
add
add
incl
add
add
add
add
aam
push
add
add
or
xchg
push
rclb
sbb
xchg
push
add
add
rclb
push
incl
add
add
add
mov
add
add
add
add
adc
add
incl
add
add
add
add
xchg
push
add
add
add
xchg
push
incl
add
add
add
add
xor
add
add
add
aam
push
add
add
xor
xchg
push
loopne
xchg
push
add
add
and
xchg
push
call
or
add
or
sbb
add
add
aad
push
pushl
xchg
push
add
add
js
xchg
push
call
xchg
push
add
add
mov
add
add
pushl
add
add
add
add
nop
aad
push
call
add
add
add
add
rcl
push
push
or
add
or
sbb
add
add
xchg
push
call
or
add
or
sbb
add
add
xchg
push
pushl
or
add
or
sbb
add
add
xchg
push
call
or
sbb
add
add
add
add
pushl
xchg
push
mov
add
add
incl
add
add
add
add
add
add
add
add
aam
push
add
add
xor
xchg
push
loopne
xchg
push
add
add
and
xchg
push
call
xchg
push
add
add
or
xchg
push
pushl
add
add
jo
xchg
push
call
add
add
pop
xlat
xchg
push
push
or
add
or
add
or
add
or
sbb
add
add
add
add
jmp
or
sbb
add
add
xlat
xchg
push
incl
or
sbb
add
add
fcoms
add
jmp
xchg
push
push
add
add
sbb
xchg
push
incl
xchg
push
dec
or
sbb
add
add
xchg
push
jmp
add
add
add
add
add
add
add
add
add
add
add
add
cwtl
fcoms
add
jmp
or
sbb
add
add
fcoms
add
fcoms
add
incl
add
add
incl
add
add
add
add
add
add
fsts
add
add
add
sbb
xchg
push
call
or
add
or
sbb
add
add
xchg
push
sbb
push
incl
add
add
add
add
or
add
or
add
or
add
or
add
or
incl
add
add
add
add
add
add
add
add
add
add
xchg
push
call
add
add
incl
add
add
add
add
push
xchg
push
add
add
call
aam
push
inc
aam
push
add
add
xor
xchg
push
enter
add
add
or
push
incl
add
add
add
add
xchg
push
add
add
xor
xchg
push
inc
aam
push
xor
xchg
push
adc
xchg
push
add
add
push
ficoml
add
pushl
xchg
push
js
xchg
push
add
add
sbb
push
call
xchg
push
pop
or
sbb
add
add
ficoml
add
pushl
add
add
add
add
and
xchg
push
call
add
add
or
xchg
push
push
or
add
xchg
push
incl
add
add
add
add
pop
xchg
push
and
add
push
fistl
add
call
or
sbb
add
add
add
add
pushl
or
push
add
add
loopne
xchg
push
jmp
xchg
push
push
add
add
rcr
xchg
push
incl
xchg
push
dec
or
push
push
or
push
add
add
or
xchg
push
sbb
xchg
push
incl
add
add
incl
add
add
add
add
add
add
xchg
push
fldcw
xchg
sbb
add
add
add
add
incl
add
add
mov
xchg
push
jmp
or
push
cmp
add
add
incl
add
add
add
add
xchg
push
add
add
nop
fcoml
push
inc
aam
push
add
add
xor
xchg
push
lock
sbb
add
add
fstl
add
inc
or
push
enter
and
add
push
add
add
jmp
or
add
sub
add
xor
add
cmp
add
add
add
or
add
adc
xchg
sbb
add
add
add
add
pushl
xchg
push
add
add
call
add
add
call
xchg
push
add
add
rcr
xchg
push
pushl
add
add
cmp
xchg
push
incl
call
jmp
or
push
or
inc
or
call
or
jmp
xchg
push
add
add
push
ficoms
add
incl
push
xchg
push
add
add
mov
add
add
jmp
push
add
add
loopne
xchg
push
decl
xchg
push
pop
add
add
ficoms
add
ljmp
mov
decl
lcall
in
push
xchg
push
cld
push
xchg
push
int3
push
xchg
push
add
add
pusha
fists
add
ljmp
setne
add
add
dec
fists
add
decl
xchg
push
add
add
mov
xchg
push
pushl
xchg
push
add
add
cwtl
fists
add
call
push
add
add
rcr
push
mov
incl
add
add
add
add
cmp
xchg
push
jmp
setne
add
add
setne
add
add
push
xchg
push
incl
add
add
add
pop
test
add
add
add
push
xchg
push
incl
add
add
add
fiaddl
add
add
add
push
and
push
movsb
test
add
xchg
push
add
add
mov
xchg
push
inc
setne
add
add
lock
add
call
setne
add
add
and
push
add
add
out
test
add
and
sbb
add
add
and
add
ljmp
adc
sbb
add
add
xchg
push
cmp
xchg
push
add
add
dec
and
add
call
adc
add
xchg
push
incl
add
add
add
ret
push
add
add
push
and
push
add
add
dec
xchg
add
add
add
lock
add
jmp
push
add
add
fsubs
xchg
push
js
xchg
push
pop
push
xchg
push
incl
add
add
add
xchg
mov
add
add
add
add
add
incl
add
add
add
movsl
mov
add
add
add
and
push
add
add
das
mov
add
xchg
push
add
add
mov
add
add
decl
push
add
add
mov
xchg
push
jmp
add
add
and
push
add
add
jns
xchg
push
nop
and
sbb
add
add
and
add
pushl
xchg
sbb
add
add
and
add
decl
add
add
pusha
and
add
lcall
xchg
sbb
add
add
xchg
push
push
adc
sbb
add
add
add
add
dec
adc
add
adc
sbb
add
add
and
add
jmp
xchg
push
add
add
enter
cmp
xchg
push
add
add
xor
push
decl
xchg
push
adc
xchg
push
pop
adc
sbb
add
add
xchg
push
incl
xchg
push
add
add
push
and
push
jmp
add
add
add
add
andb
incl
add
add
add
add
lock
push
jmp
adc
add
adc
sbb
add
and
add
inc
adc
add
adc
add
adc
add
adc
sbb
add
add
xchg
push
incl
adc
add
adc
sbb
add
add
xchg
push
jmp
xchg
push
add
add
mov
add
add
incl
xchg
push
dec
adc
sbb
add
add
and
add
jmp
add
add
add
add
fsubs
add
incl
add
add
add
xchg
push
jmp
adc
add
adc
sbb
add
add
xchg
push
inc
adc
sbb
add
add
xchg
push
jmp
adc
add
adc
sbb
add
add
add
add
incl
adc
add
adc
add
adc
sbb
add
add
es
push
pushl
xchg
push
js
xchg
push
add
add
xor
xchg
push
call
xchg
push
add
daa
xchg
push
pushl
mov
incl
lcall
call
add
add
mov
add
add
inc
adc
sbb
add
add
add
add
jmp
adc
push
sub
sbb
add
add
daa
xchg
push
incl
adc
push
or
call
adc
push
sbb
add
xchg
push
push
add
add
xchg
push
js
xchg
push
inc
adc
push
dec
adc
push
push
adc
push
pop
adc
push
cmpsb
adc
push
mov
xchg
push
mov
add
add
push
sub
add
jmp
adc
push
call
add
add
add
add
incl
add
add
add
add
adc
add
add
mov
aam
push
add
add
xor
xchg
push
subb
push
add
sub
add
inc
adc
push
enter
add
add
rclb
add
adc
push
and
xchg
sbb
add
add
sub
add
incl
adc
xchg
sbb
add
add
xchg
push
jmp
xchg
push
mov
add
add
incl
add
add
add
add
adc
push
add
add
js
xchg
push
mov
aam
push
add
add
xor
xchg
push
pop
sub
sbb
add
add
sub
add
incl
xchg
push
dec
adc
add
push
adc
add
pop
adc
add
mov
add
add
add
add
add
add
add
add
xchg
push
push
adc
xchg
sbb
add
add
sub
add
incl
add
add
js
xchg
push
jmp
adc
add
call
add
add
test
xchg
push
inc
adc
xchg
sbb
add
add
add
add
jmp
push
xchg
push
sub
xchg
push
xor
xchg
push
cmp
xchg
push
add
xchg
push
or
xchg
push
js
xchg
push
incl
add
add
add
add
xchg
push
add
add
shrb
push
mov
aam
push
add
add
xor
xchg
push
and
xchg
push
add
add
push
add
add
jmp
xchg
push
add
add
push
sub
add
incl
xchg
push
add
add
mov
add
add
jmp
add
add
loopne
xchg
push
incl
add
add
add
add
incl
add
add
add
add
xchg
push
add
add
call
aam
push
inc
aam
push
add
add
xor
xchg
push
enter
and
add
adc
push
jmp
push
xchg
push
xor
push
incl
add
add
add
add
addr16
push
add
add
sbb
push
mov
aam
push
add
add
xor
xchg
push
js
xchg
push
add
add
subb
inc
push
xchg
push
add
add
call
add
add
jmp
pop
xchg
push
sub
xchg
push
add
add
fsubrs
push
incl
pop
xchg
push
or
xchg
push
add
add
and
add
adc
add
jmp
xchg
push
add
add
js
xchg
push
incl
xchg
push
dec
pop
xchg
push
add
add
test
xchg
push
jmp
add
add
add
add
cwtl
sub
add
incl
add
add
call
add
add
shrb
add
push
pop
xchg
push
add
add
cmp
xchg
push
call
pop
xchg
push
add
add
pusha
cs
push
pushl
sbb
sbb
add
dec
cs
push
call
sbb
add
sbb
add
xchg
push
imul
push
add
add
mov
xchg
push
incl
xchg
push
dec
sbb
sbb
add
add
cs
push
jmp
add
add
add
add
sub
xchg
push
incl
add
add
add
add
add
add
lcall
add
add
jo
xchg
push
push
sbb
sbb
add
add
xchg
push
call
sbb
add
sbb
add
sbb
sbb
add
add
add
add
incl
sbb
decl
sbb
sbb
add
add
das
xchg
push
jmp
xchg
push
push
add
add
xor
xchg
push
incl
xchg
push
dec
sbb
add
xchg
push
pop
sbb
add
add
add
fistl
push
add
add
xor
xchg
push
sbb
xchg
push
add
xor
add
incl
decl
call
jmp
sbb
in
sbb
sbb
add
add
xor
add
call
sbb
add
sbb
add
sbb
sbb
add
add
xor
add
incl
sbb
add
mov
add
incl
add
add
add
add
mov
push
add
add
and
xchg
push
inc
aam
push
xor
xchg
push
add
xchg
push
add
add
inc
xor
add
jmp
xchg
push
push
add
add
mov
xchg
push
incl
xchg
push
or
add
cwtl
xor
add
jmp
add
add
add
add
add
add
incl
add
add
add
add
add
add
jmp
sbb
add
sbb
sbb
add
add
xor
add
call
sbb
add
sbb
sbb
add
js
xchg
push
pushl
sbb
add
sbb
add
sbb
add
sbb
sbb
xor
add
jmp
xchg
push
push
add
add
xchg
push
jle
xchg
push
inc
sbb
sbb
add
add
xor
add
jmp
add
add
add
add
add
add
add
add
sbb
in
sbb
push
sbb
sbb
add
add
xor
add
call
sbb
add
sbb
add
add
add
incl
add
add
add
add
add
add
add
add
mov
add
incl
add
add
add
add
mov
add
add
dec
xor
push
inc
aam
push
add
add
xor
xchg
push
test
xchg
push
add
add
lock
add
pushl
sbb
push
cmp
sbb
add
add
xor
push
call
sbb
push
add
add
or
push
pushl
xchg
push
or
add
jo
xchg
push
call
xchg
push
pop
sbb
push
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
xchg
push
push
sbb
push
add
add
enter
call
sbb
push
fcomps
add
sbb
xchg
sbb
add
add
add
incl
sbb
add
or
add
adc
add
push
sbb
xchg
sbb
add
add
xchg
push
incl
xchg
push
dec
sbb
call
xchg
push
js
xchg
push
incl
add
add
add
add
xchg
push
add
add
pop
xor
xchg
push
inc
aam
push
add
add
xor
xchg
push
mov
add
add
shlb
add
pushl
add
add
add
add
xor
xchg
push
call
add
add
sbb
xchg
push
push
sbb
add
sti
sbb
add
ret
sbb
add
lret
sbb
add
sbb
xchg
sbb
ss
push
pushl
push
xchg
push
cmp
xchg
push
add
xchg
push
push
push
xchg
push
sbb
xchg
push
push
add
add
ss
push
incl
xchg
push
dec
push
xchg
push
push
push
xchg
push
pop
push
xchg
push
lods
push
xchg
push
mov
xchg
push
add
add
cmp
xchg
push
call
lcall
add
add
push
add
add
push
push
xchg
push
clc
push
xchg
push
add
add
pop
aaa
xchg
push
call
push
xchg
push
fcomps
xchg
push
add
add
mov
xchg
push
pushl
pop
xchg
push
cmp
xchg
push
add
xchg
push
or
xchg
push
add
aaa
xchg
push
jmp
xchg
push
push
add
add
xchg
push
jle
xchg
push
dec
pop
xchg
push
fsubs
add
incl
add
add
add
add
add
add
add
xor
xchg
push
mov
aam
push
add
add
xor
xchg
push
adc
xchg
push
add
add
pop
cmp
add
jmp
add
add
cmpb
push
incl
add
add
add
add
lock
add
jmp
pop
xchg
push
add
add
fdivrs
xchg
push
inc
pop
xchg
push
add
add
add
xchg
push
jmp
pusha
xchg
push
add
add
push
add
add
incl
pusha
xchg
push
add
add
push
cmp
add
jmp
xchg
push
add
add
mov
add
add
incl
xchg
push
add
add
loopne
xchg
push
jmp
add
add
add
add
sarb
xchg
push
incl
add
add
decl
add
add
or
xchg
push
jmp
pusha
xchg
push
add
add
jo
xchg
push
inc
pusha
xchg
push
enter
and
add
mov
add
add
jmp
popa
xchg
push
add
add
mov
xchg
push
incl
popa
xchg
push
or
push
adc
push
add
add
sarb
push
fdivrs
xchg
push
pushl
xchg
push
add
add
add
add
add
add
add
add
xor
xchg
push
pushf
les
add
add
pusha
cmp
add
xchg
push
call
xchg
push
add
add
add
add
add
add
add
add
push
cmp
add
xchg
push
add
add
cmpb
push
pushl
add
add
add
add
lock
add
call
add
add
fdivrs
xchg
push
push
popa
xchg
push
add
add
add
push
call
popa
xchg
push
add
add
push
add
add
pushl
bound
sbb
add
add
xchg
push
call
bound
sbb
add
add
add
add
pushl
xchg
push
js
xchg
push
add
add
call
add
add
call
xchg
push
pop
bound
sbb
add
add
cmp
push
pushl
add
add
add
add
call
add
add
push
add
add
push
bound
sbb
add
add
xchg
push
call
bound
sbb
add
add
add
add
pushl
arpl
sbb
add
add
cmp
add
call
arpl
sbb
add
add
cmp
add
pushl
xchg
push
js
xchg
push
inc
arpl
sbb
add
add
ds
push
jmp
add
add
add
add
push
add
lock
add
add
add
mov
push
add
sub
add
aam
add
nop
push
add
cld
pop
add
cmp
add
pusha
push
add
pop
and
je
add
andb
add
and
stos
and
mov
and
and
xor
add
and
add
adc
add
add
add
out
and
fisubl
add
enter
mov
and
xchg
and
xchg
add
je
add
mov
and
mov
add
test
add
xchg
daa
add
jle
add
fs
add
push
daa
add
inc
daa
add
dec
and
pop
and
insb
and
js
add
test
add
sahf
and
scas
and
mov
and
in
add
repnz
add
add
and
add
and
add
and
add
add
push
and
add
add
push
add
jbe
add
andb
cwtl
and
add
and
add
and
add
and
add
push
and
add
cmp
add
dec
and
add
push
add
js
add
mov
add
test
add
les
add
hlt
and
add
and
add
cmp
add
push
es
push
add
test
add
xchg
es
movsb
es
mov
add
lret
add
es
ljmp
add
daa
add
sbb
add
and
add
xor
add
add
add
loopne
add
and
and
add
sbb
add
adc
add
or
add
and
hlt
and
ljmp
add
daa
add
add
add
les
add
add
add
xor
add
and
inc
and
push
and
and
dec
and
pusha
and
je
add
xchg
and
xchg
add
sbb
add
stos
and
add
add
add
insb
jae
jb
jo
inc
add
mov
push
outsb
insl
popa
jo
imul
insb
gs
add
jo
imul
insb
add
add
outsl
jae
dec
popa
outsb
fs
add
popa
je
inc
imul
outsb
addr16
add
xor
inc
jb
popa
je
inc
imul
gs
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
sahf
add
insl
imul
outsl
arpl
jae
add
add
outsb
push
jb
arpl
jae
ret
add
jb
jne
insb
push
jb
je
arpl
ret
outsl
popa
fs
imul
add
or
insb
jae
jb
outsb
inc
add
jno
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
popa
jae
inc
jb
outsl
jb
add
inc
gs
jns
je
insl
inc
imul
jns
add
je
popa
insb
inc
jb
gs
add
jb
jne
insb
push
jne
jb
add
mov
je
popa
insb
inc
insb
insb
outsl
arpl
add
gs
les
push
imul
jb
je
arpl
add
and
inc
gs
outsl
fs
gs
imul
add
stos
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
push
dec
inc
dec
xor
cs
insb
add
fiadds
push
outsl
jae
dec
gs
popa
addr16
add
xchg
add
insb
insb
push
imul
push
gs
imul
add
fs
imul
add
outsl
ja
imul
aad
inc
imul
outsl
ja
add
add
imul
je
gs
add
imul
je
gs
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
popa
je
push
imul
incl
inc
gs
gs
je
jo
imul
leave
add
jbe
push
imul
push
push
inc
push
xor
cs
insb
add
jb
push
push
js
arpl
gs
add
inc
dec
dec
xor
cs
insb
add
data16
je
arpl
add
add
addr16
arpl
push
add
gs
arpl
add
imul
add
data16
je
add
imul
add
imul
add
imul
add
popa
insl
add
dec
push
push
inc
push
push
cs
insb
add
push
push
inc
push
dec
cs
dec
dec
add
add
insb
push
outsb
ja
outsb
add
add
imul
jo
imul
dec
gs
jo
jb
add
cltd
add
popa
jo
insb
insb
outsl
arpl
jo
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
pop
add
je
jns
je
insl
push
imul
gs
outsl
arpl
push
imul
inc
jb
popa
je
push
push
add
cli
add
je
jne
jb
outsb
je
push
dec
add
movsl
add
push
gs
popa
insb
jne
add
gs
popa
insb
jne
add
inc
js
je
push
add
lret
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
gs
imul
inc
js
je
jb
arpl
jae
testl
jne
jb
outsb
je
jb
arpl
jae
mov
jo
gs
insb
insb
outsl
arpl
mov
jo
imul
push
insb
jae
insb
insb
outsl
arpl
add
inc
jb
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
roll
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
mov
push
gs
outsb
push
gs
js
gs
imul
gs
or
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
inc
gs
gs
imul
popf
add
popa
jo
gs
jb
jns
fwait
add
popa
jo
jb
popa
je
add
mov
popa
fs
jb
je
push
je
add
add
popa
fs
imul
gs
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
je
dec
popa
outsb
fs
add
adc
inc
imul
push
add
je
je
jb
jne
dec
outsb
outsw
inc
add
push
gs
imul
gs
add
add
imul
lods
add
push
gs
js
gs
imul
gs
add
gs
outsl
arpl
fs
arpl
insl
outsb
je
add
gs
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
jae
inc
imul
jb
add
mov
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
mov
dec
jae
popa
fs
gs
fs
je
add
mov
dec
jae
popa
fs
outsl
fs
je
add
jl
push
gs
je
dec
popa
outsb
fs
add
in
dec
jne
je
inc
jns
gs
outsl
push
imul
mov
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
push
add
je
je
imul
push
add
mov
inc
push
dec
outsb
outsw
add
inc
inc
push
add
xor
inc
gs
inc
dec
inc
push
add
popa
add
je
outsb
fs
inc
imul
outsl
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
gs
outsl
arpl
fs
js
push
add
add
je
outsl
insl
jo
je
jb
popa
insl
gs
add
adc
inc
gs
imul
push
add
gs
inc
imul
inc
push
dec
xor
cs
insb
add
push
dec
dec
push
inc
push
dec
cs
insb
add
add
je
insb
ja
add
arpl
jae
add
jg
mov
add
add
add
add
or
add
add
add
sub
add
push
sub
pusha
sub
jo
add
and
add
inc
add
inc
add
adc
add
shlb
add
xor
add
xor
add
push
add
jo
add
jae
add
jbe
add
jns
add
add
pop
add
add
add
inc
cs
insb
add
add
add
add
add
xor
push
and
xchg
push
lock
xchg
push
shrb
push
pop
mov
push
iret
mov
push
mov
push
jae
xchg
push
mov
xchg
push
push
mov
push
test
xchg
push
xlat
lea
push
mov
outsl
xchg
push
loopne
xchg
push
add
push
jo
xchg
push
xor
push
mov
xchg
push
rolb
push
shr
push
push
in
xchg
push
shr
push
nop
rclb
xchg
push
rol
xchg
push
mov
xchg
push
rcl
xchg
push
xor
xchg
push
push
add
push
mov
xchg
push
aad
xchg
push
add
add
add
xchg
push
dec
lock
push
add
add
stc
lds
add
add
add
xchg
push
add
add
xor
add
add
add
call
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
imul
gs
xor
cs
insb
add
add
add
add
nop
add
jmp
nop
add
jmp
add
add
add
add
push
cs
inc
push
gs
gs
imul
ja
push
cs
inc
push
inc
js
gs
imul
jo
outsl
push
push
inc
inc
jl
xchg
push
cs
inc
push
dec
outsl
je
insl
jo
gs
outsb
je
fs
inc
jb
jo
outsl
push
push
inc
inc
add
add
outsl
outsb
sub
and
and
je
imul
outsb
je
and
je
add
jb
gs
xor
cs
insb
add
add
jne
imul
outsb
add
insl
jo
gs
gs
outsb
addr16
outsb
je
jb
popa
arpl
and
jae
outsl
bound
arpl
outsl
gs
daa
je
jae
jo
outsl
jb
and
jae
outsb
arpl
outsl
outsb
imul
add
add
push
imul
jns
outsb
addr16
outsb
je
jb
popa
arpl
and
jae
outsl
bound
arpl
outsl
gs
daa
je
jae
jo
outsl
jb
and
je
gs
dec
push
sub
add
push
je
gs
insl
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
cmp
je
imul
arpl
outsl
gs
daa
je
jae
jo
outsl
jb
and
outsb
outsl
insl
and
arpl
jae
inc
jne
data16
fs
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
cmp
je
imul
arpl
jae
outsb
outsl
je
popa
je
popa
arpl
bound
add
jl
xchg
push
cs
inc
push
dec
outsb
jbe
insb
imul
outsb
je
inc
jb
jo
outsl
push
push
inc
inc
add
dec
push
add
dec
outsl
xor
jae
add
add
inc
arpl
imul
jne
inc
jb
popa
jns
inc
jne
data16
fs
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
cmp
je
imul
arpl
popa
outsb
daa
je
bound
jb
imul
imul
bound
add
inc
gs
gs
jo
popa
je
inc
add
add
inc
outsl
jo
inc
imul
gs
gs
inc
imul
pop
and
gs
jns
je
insl
inc
imul
jns
add
add
pop
pop
add
pop
fs
fs
insb
add
add
inc
push
dec
push
dec
inc
cs
insb
add
cs
add
sub
pop
push
push
dec
inc
outsl
ja
insb
outsl
popa
fs
outsl
inc
imul
insb
insl
outsl
outsb
cs
insb
add
inc
xor
inc
cmp
xor
xor
xor
cmp
xor
cmp
xor
xor
xor
cmp
cmp
inc
xor
xor
aaa
xor
xor
xor
cmp
inc
xor
cmp
inc
xor
xor
inc
aaa
inc
xor
xor
xor
inc
xor
xor
xor
cmp
inc
cmp
inc
cmp
xor
cmp
add
add
ja
outsb
outsl
ja
add
add
pop
arpl
pop
add
add
pop
cmp
add
pop
ja
outsb
imul
insb
add
add
pop
dec
outsb
je
jb
gs
gs
fs
imul
je
jo
jne
jb
dec
outsb
outsw
inc
add
dec
outsb
je
jb
gs
insb
outsl
jae
dec
popa
outsb
fs
add
add
pop
dec
outsb
je
jb
gs
jo
outsb
push
jb
inc
add
add
dec
outsb
je
jb
gs
jo
outsb
inc
add
pop
jle
add
inc
xor
cmp
inc
inc
cmp
inc
cmp
inc
xor
inc
inc
xor
inc
xor
xor
xor
xor
inc
inc
cmp
ss
aaa
cmp
inc
xor
inc
xor
xor
inc
xor
xor
inc
xor
xor
inc
xor
xor
xor
inc
xor
inc
xor
xor
cmp
xor
ss
inc
cmp
xor
aaa
xor
xor
inc
xor
aaa
inc
cmp
inc
xor
inc
cmp
xor
cmp
add
add
inc
inc
inc
inc
inc
xor
inc
xor
xor
xor
ss
inc
xor
inc
cmp
xor
cmp
inc
inc
inc
xor
xor
inc
xor
xor
xor
cmp
xor
inc
xor
xor
inc
ss
inc
xor
xor
inc
xor
inc
xor
inc
xor
inc
inc
inc
xor
xor
inc
cmp
xor
inc
inc
inc
ss
cmp
xor
inc
xor
xor
xor
inc
inc
aaa
xor
inc
xor
inc
aaa
xor
inc
inc
cmp
xor
xor
inc
xor
xor
add
pop
inc
cmp
inc
xor
inc
ss
xor
cmp
inc
xor
xor
xor
xor
xor
xor
xor
inc
xor
inc
xor
xor
inc
xor
inc
xor
inc
xor
ss
inc
xor
cmp
inc
inc
xor
inc
xor
aaa
xor
xor
xor
ss
inc
inc
cmp
inc
xor
cmp
inc
inc
xor
xor
inc
aaa
xor
xor
aaa
xor
inc
inc
cmp
inc
inc
xor
cmp
inc
inc
cmp
inc
inc
inc
xor
inc
xor
inc
aaa
xor
xor
add
pop
cmp
xor
xor
inc
inc
xor
cmp
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
inc
aaa
inc
xor
cmp
xor
xor
xor
aaa
inc
inc
inc
inc
xor
cmp
xor
xor
cmp
xor
inc
inc
inc
xor
xor
cmp
inc
inc
inc
xor
cmp
xor
xor
xor
cmp
xor
inc
inc
cmp
xor
ss
xor
xor
cmp
add
add
inc
inc
inc
xor
xor
inc
cmp
cmp
cmp
xor
cmp
cmp
xor
cmp
xor
xor
xor
aaa
inc
ss
xor
inc
inc
xor
inc
xor
xor
inc
cmp
xor
ss
xor
inc
aaa
inc
inc
inc
xor
aaa
xor
aaa
xor
cmp
xor
xor
xor
xor
inc
xor
inc
inc
inc
inc
xor
inc
aaa
xor
xor
xor
xor
cmp
inc
cmp
xor
aaa
xor
inc
inc
inc
xor
xor
inc
xor
inc
xor
inc
xor
inc
inc
inc
cmp
inc
xor
cmp
xor
inc
cmp
xor
inc
inc
aaa
xor
xor
inc
xor
xor
inc
xor
xor
xor
cmp
inc
xor
inc
xor
xor
cmp
inc
xor
aaa
inc
xor
aaa
cmp
xor
inc
xor
xor
inc
inc
cmp
xor
xor
xor
inc
aaa
xor
inc
xor
inc
xor
ss
add
add
xor
inc
xor
xor
xor
xor
inc
xor
cmp
inc
xor
xor
xor
xor
inc
inc
inc
inc
xor
xor
inc
inc
cmp
inc
xor
inc
xor
ss
xor
inc
xor
xor
cmp
inc
xor
xor
ss
cmp
inc
inc
ss
xor
xor
aaa
xor
xor
inc
xor
xor
inc
inc
inc
xor
ss
inc
aaa
xor
inc
xor
ss
inc
inc
inc
ss
inc
xor
cmp
inc
xor
add
pop
inc
xor
inc
xor
inc
inc
xor
inc
inc
xor
xor
cmp
xor
xor
cmp
inc
aaa
xor
ss
inc
aaa
aaa
xor
xor
aaa
xor
xor
aaa
aaa
inc
xor
cmp
inc
xor
inc
aaa
cmp
aaa
inc
inc
xor
inc
xor
xor
inc
cmp
xor
aaa
aaa
xor
inc
cmp
aaa
inc
inc
cmp
xor
xor
xor
inc
inc
cmp
inc
xor
cmp
xor
xor
aaa
inc
inc
xor
xor
xor
add
pop
inc
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
inc
inc
inc
xor
xor
xor
aaa
cmp
xor
xor
xor
inc
xor
inc
inc
inc
inc
xor
inc
xor
inc
inc
xor
cmp
inc
xor
ss
ss
xor
inc
inc
inc
xor
inc
xor
xor
inc
cmp
inc
xor
xor
inc
xor
inc
inc
inc
xor
inc
xor
cmp
xor
inc
xor
xor
inc
inc
aaa
add
add
inc
ss
aaa
inc
xor
inc
xor
xor
xor
xor
inc
cmp
xor
inc
cmp
cmp
inc
xor
cmp
xor
inc
xor
xor
xor
inc
ss
xor
aaa
inc
inc
aaa
xor
inc
cmp
xor
xor
xor
xor
aaa
xor
inc
xor
cmp
cmp
xor
cmp
xor
inc
inc
inc
xor
inc
inc
cmp
xor
inc
inc
inc
inc
aaa
inc
cmp
xor
inc
xor
inc
xor
add
add
xor
xor
cmp
xor
inc
inc
xor
xor
inc
xor
xor
xor
cmp
inc
cmp
cmp
aaa
aaa
cmp
inc
inc
inc
cmp
xor
aaa
xor
xor
cmp
xor
xor
xor
xor
inc
xor
inc
xor
cmp
inc
cmp
aaa
cmp
xor
xor
xor
inc
inc
xor
xor
xor
cmp
inc
inc
inc
cmp
inc
xor
xor
xor
cmp
inc
inc
inc
inc
inc
inc
inc
inc
xor
add
pop
xor
xor
cmp
xor
inc
cmp
xor
xor
aaa
xor
inc
inc
xor
xor
xor
xor
ss
xor
aaa
cmp
xor
inc
cmp
xor
aaa
inc
ss
inc
inc
xor
xor
inc
xor
ss
aaa
xor
inc
xor
aaa
xor
xor
aaa
inc
xor
inc
xor
xor
xor
xor
xor
xor
inc
xor
cmp
xor
inc
inc
add
add
fs
jbe
jb
pop
gs
pop
push
add
pop
and
or
pop
and
popa
sub
add
add
ja
imul
outsl
imul
inc
inc
inc
xor
inc
xor
inc
cmp
inc
cmp
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
cmp
aaa
inc
cmp
inc
xor
aaa
cmp
inc
xor
xor
xor
xor
inc
xor
xor
inc
xor
xor
xor
inc
inc
xor
add
add
inc
cmp
inc
inc
inc
xor
cmp
inc
xor
xor
aaa
inc
xor
cmp
cmp
cmp
inc
xor
inc
xor
xor
aaa
aaa
inc
inc
ss
xor
xor
aaa
inc
cmp
xor
inc
inc
ss
inc
inc
inc
inc
xor
xor
xor
inc
inc
inc
cmp
xor
inc
xor
inc
inc
inc
add
add
cmp
inc
ss
aaa
aaa
inc
inc
inc
ss
cmp
cmp
inc
aaa
xor
xor
cmp
inc
cmp
xor
inc
inc
aaa
inc
cmp
inc
xor
xor
xor
cmp
cmp
xor
xor
aaa
xor
inc
ss
xor
xor
inc
inc
cmp
xor
inc
cmp
xor
inc
inc
inc
xor
xor
inc
add
add
ss
xor
xor
xor
inc
xor
inc
inc
xor
cmp
inc
inc
inc
aaa
inc
xor
inc
inc
inc
ss
xor
xor
xor
inc
inc
xor
xor
cmp
inc
inc
cmp
cmp
inc
xor
inc
xor
inc
inc
xor
xor
xor
xor
inc
inc
xor
xor
add
pop
xor
xor
inc
aaa
inc
inc
inc
inc
aaa
inc
inc
xor
inc
inc
inc
xor
inc
inc
xor
xor
xor
aaa
inc
xor
inc
cmp
xor
inc
xor
xor
cmp
cmp
aaa
xor
xor
inc
inc
xor
cmp
xor
xor
inc
xor
xor
aaa
inc
xor
xor
cmp
aaa
inc
ss
add
add
mov
out
mov
pop
push
push
jb
push
ss
outsl
jb
inc
inc
add
add
inc
xor
xor
xor
xor
inc
cmp
inc
inc
xor
xor
inc
inc
inc
inc
inc
inc
cmp
xor
cmp
ss
xor
aaa
cmp
inc
inc
xor
cmp
inc
aaa
xor
inc
xor
xor
cmp
xor
xor
inc
xor
xor
xor
cmp
inc
inc
inc
cmp
inc
xor
inc
xor
xor
inc
xor
aaa
cmp
inc
xor
xor
xor
xor
cmp
inc
cmp
xor
inc
inc
ss
xor
xor
cmp
xor
xor
add
inc
inc
xor
xor
cmp
xor
xor
inc
inc
cmp
inc
xor
xor
xor
inc
xor
aaa
xor
cmp
cmp
xor
aaa
xor
cmp
cmp
inc
xor
aaa
cmp
cmp
inc
xor
xor
cmp
inc
inc
inc
xor
inc
inc
cmp
inc
cmp
xor
xor
inc
ss
add
pop
inc
inc
inc
cmp
inc
xor
inc
cmp
inc
aaa
xor
cmp
xor
inc
aaa
xor
xor
xor
cmp
xor
inc
inc
xor
xor
inc
inc
xor
inc
inc
cmp
inc
xor
ss
inc
cmp
ss
xor
inc
inc
inc
inc
xor
xor
inc
cmp
add
pop
inc
xor
inc
inc
inc
inc
xor
xor
cmp
aaa
xor
inc
inc
aaa
inc
inc
xor
inc
cmp
xor
inc
xor
xor
cmp
xor
xor
inc
inc
xor
inc
xor
cmp
cmp
inc
xor
cmp
inc
ss
xor
xor
aaa
cmp
cmp
xor
xor
ss
xor
xor
add
add
push
das
das
ja
ja
outsb
xor
xor
arpl
add
outsl
jo
outsb
add
add
inc
cmp
xor
xor
xor
xor
xor
cmp
aaa
xor
xor
xor
xor
xor
inc
inc
inc
xor
inc
inc
inc
ss
cmp
xor
inc
inc
xor
inc
inc
xor
inc
ss
cmp
inc
inc
inc
xor
cmp
xor
inc
inc
cmp
ss
xor
inc
inc
cmp
add
add
inc
cmp
inc
xor
inc
aaa
cmp
inc
inc
inc
aaa
cmp
inc
cmp
inc
xor
cmp
xor
xor
xor
inc
inc
inc
inc
xor
aaa
xor
ss
inc
aaa
aaa
xor
cmp
inc
xor
xor
inc
inc
xor
xor
inc
ss
cmp
inc
xor
xor
xor
inc
add
add
add
add
push
cs
inc
push
dec
outsb
jo
je
gs
arpl
inc
aas
and
outsb
jo
je
gs
arpl
addr16
push
inc
jne
data16
fs
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
inc
jb
jo
outsl
push
push
inc
inc
inc
inc
jb
jo
outsl
push
push
inc
inc
jl
xchg
push
cs
inc
push
inc
popa
outsb
outsb
outsl
je
insb
jne
push
jo
outsl
push
push
inc
inc
add
push
outsb
data16
jne
push
cmp
cmp
je
imul
arpl
popa
jae
bound
data16
and
jo
je
je
popa
je
arpl
outsb
outsl
je
bound
data16
jne
push
add
add
add
push
cs
inc
inc
add
add
jl
xchg
push
cs
add
push
dec
inc
sub
push
je
imul
cmp
dec
jne
jo
je
je
imul
je
jb
outsb
outsl
je
jae
arpl
imul
jne
jo
je
je
imul
je
jb
jl
xchg
push
cs
inc
push
aas
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
add
add
add
add
push
cs
inc
push
dec
outsb
jbe
insb
imul
jb
popa
je
inc
jb
jo
outsl
push
push
inc
inc
add
add
inc
jne
data16
fs
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
cmp
je
imul
arpl
outsl
gs
daa
je
popa
insb
insb
outsl
ja
imul
add
add
add
add
add
add
push
cs
inc
push
aas
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
add
add
insb
jne
dec
popa
insl
gs
add
push
cs
inc
push
push
popa
insb
jne
push
jns
gs
imul
inc
dec
popa
insl
gs
popa
insb
jne
push
popa
imul
jo
outsl
push
push
inc
inc
add
add
add
sub
je
jns
outsb
and
and
je
imul
daa
sub
jae
outsl
jb
and
add
insl
gs
popa
insb
jne
push
popa
imul
jo
and
jae
popa
je
push
and
add
add
add
push
cs
inc
dec
add
add
and
add
jl
xchg
push
cs
inc
push
je
jo
pop
imul
add
xchg
push
jne
add
jae
add
xlat
xchg
xchg
push
cs
xchg
push
add
xchg
push
decl
xchg
push
rcrb
add
lahf
xchg
push
or
add
fcomps
add
adc
add
add
add
clc
gs
push
shlb
push
push
add
add
add
add
gs
push
pusha
lock
push
pusha
lock
push
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
incl
or
add
dec
xchg
push
adc
push
adc
push
je
xchg
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
loop
xchg
push
add
and
and
and
and
and
and
and
and
and
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
push
lock
xchg
push
test
push
mov
add
add
push
add
xchg
push
and
push
hlt
inc
xchg
push
mov
add
add
push
sbb
xchg
push
and
xchg
push
cld
inc
xchg
push
in
inc
xchg
push
pushf
inc
xchg
push
mov
push
mov
push
mov
jo
add
add
add
icebp
call
push
add
push
add
push
add
add
incl
add
add
incl
add
add
add
add
lcall
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
lcall
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
insb
add
add
add
add
add
add
cld
pushl
add
add
add
incl
add
addb
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
push
xchg
push
push
inc
xchg
push
dec
inc
xchg
push
inc
inc
xchg
push
js
xchg
push
push
inc
xchg
push
or
push
xor
xchg
push
sub
xchg
push
and
xchg
push
faddl
push
aam
xchg
push
int3
inc
xchg
push
les
push
lock
xchg
push
loopne
xchg
push
cwtl
inc
xchg
push
mov
push
mov
xchg
push
pop
inc
xchg
push
push
inc
xchg
push
js
xchg
push
add
add
add
add
add
add
xchg
push
adc
xchg
push
adc
xchg
push
adc
xchg
push
adc
xchg
push
jg
jg
jg
jg
mov
mov
add
add
add
add
add
add
add
add
cli
or
add
add
add
add
or
push
ret
cmovo
add
add
add
add
adc
add
add
add
adcb
add
add
add
mov
add
add
add
leave
sbb
add
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
js
roll
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
and
add
int3
int
int3
int3
int3
int3
int3
int3
sti
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
aas
and
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
in
ficomps
frstor
jl
xchg
push
cs
inc
push
imul
gs
jae
fs
inc
add
add
add
jl
xchg
push
cs
inc
push
aas
and
popa
jae
arpl
outsl
jae
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
push
cs
inc
push
aas
and
popa
jae
arpl
jae
jb
popa
insl
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
add
push
cs
inc
push
aas
and
popa
jae
arpl
jae
jb
popa
insl
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
add
push
cs
inc
push
aas
and
popa
jae
arpl
je
gs
insl
bound
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
push
cs
inc
push
aas
and
popa
jae
arpl
imul
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
jl
xchg
push
cs
inc
push
aas
and
popa
jae
arpl
outsl
jae
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
push
cs
inc
push
aas
and
popa
jae
arpl
jae
jb
popa
insl
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
add
push
cs
inc
push
aas
and
popa
jae
arpl
jae
jb
popa
insl
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
add
push
cs
inc
push
aas
and
popa
jae
arpl
imul
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
add
push
cs
inc
push
aas
and
popa
jae
arpl
je
gs
insl
bound
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
push
cs
inc
push
insb
outsl
imul
jb
jae
fs
inc
add
add
push
cs
inc
push
insb
outsb
addr16
pop
gs
outsl
jb
jae
fs
inc
add
jl
xchg
push
cs
inc
push
outsl
jne
pop
outsl
pop
jb
outsb
addr16
jae
fs
inc
add
add
add
add
add
jl
xchg
push
cs
inc
push
jb
outsb
je
insl
gs
gs
outsl
jb
jae
fs
inc
add
push
cs
inc
push
popaw
imul
jae
bound
gs
jae
fs
inc
add
add
add
jl
xchg
push
cs
inc
push
popaw
arpl
inc
insb
outsl
arpl
gs
jae
fs
inc
add
jl
xchg
push
cs
inc
push
pop
dec
outsl
arpl
jo
insb
outsl
arpl
gs
jae
fs
inc
add
add
push
push
push
inc
jb
gs
gs
outsl
jb
add
add
push
inc
insb
outsl
jae
push
gs
gs
add
push
dec
jo
outsb
push
gs
gs
add
push
push
push
inc
outsb
jne
gs
je
push
jb
arpl
jae
jae
add
ja
jae
jo
xor
cs
insb
add
add
add
add
and
xor
pop
cmp
add
add
and
add
add
add
das
add
and
add
add
cmp
add
jb
add
ja
add
and
jae
add
jae
add
add
add
sub
sub
sub
and
add
add
jae
popa
outsb
fs
insb
outsl
outsb
gs
and
add
add
arpl
imul
and
add
jbe
jb
imul
and
add
add
js
insb
and
add
popa
outsb
fs
insb
outsl
outsb
gs
add
arpl
imul
and
add
jbe
jb
imul
add
add
mov
xchg
push
add
add
add
cmp
add
movsb
pop
xchg
push
add
add
push
and
add
push
pop
xchg
push
daa
add
add
popa
jo
jae
add
es
outsl
je
add
es
add
add
es
je
add
add
es
insl
jo
add
add
inc
cmp
add
add
inc
sub
cmp
add
cmp
js
insb
add
add
popa
outsb
fs
insb
outsl
outsb
add
outsb
arpl
imul
jbe
jb
imul
push
dec
pop
xchg
push
adc
xchg
push
fcomps
push
call
pop
xchg
push
mov
pop
xchg
push
xor
xchg
push
jb
outsb
jne
insb
and
xor
and
and
gs
arpl
and
inc
and
jne
and
and
jo
je
jae
jb
popa
insl
add
jb
jb
outsl
arpl
outsb
je
gs
jo
jns
add
add
jb
jb
jo
jb
imul
insb
popa
jb
je
outsl
outsb
add
inc
jb
outsl
jb
jo
jb
imul
insl
outsb
je
add
inc
jb
outsl
jb
jo
jb
imul
outsb
outsl
ja
add
inc
jb
outsl
jb
jb
popa
imul
and
add
inc
jb
outsl
jb
and
jo
jns
je
add
add
jb
jb
jb
popa
imul
jb
bound
gs
add
add
jb
jb
jb
popa
imul
insl
outsb
je
jbe
insb
jne
add
add
inc
popa
imul
jb
popa
and
gs
outsb
je
outsb
popa
insl
add
jb
jb
jo
jb
imul
insl
outsb
je
add
dec
gs
outsl
jb
and
insb
outsl
arpl
imul
insb
gs
add
imul
outsl
jo
outsb
and
insb
add
jb
jb
add
dec
outsl
and
jb
jb
add
add
je
gs
jo
popa
je
inc
add
add
push
gs
imul
bound
gs
add
inc
outsl
jo
inc
imul
gs
gs
inc
imul
gs
imul
arpl
add
add
add
outsb
inc
js
arpl
je,pn
outsb
jae
js
je,pn
outsb
jae
js
je,pn
outsb
jae
js
add
add
add
add
popa
addr16
insb
insb
add
add
dec
insl
popa
addr16
imul
outsb
inc
js
add
add
insl
dec
outsb
imul
add
add
insl
push
gs
jo
imul
push
jns
inc
gs
jo
imul
push
jns
dec
outsl
popa
fs
outsl
fs
add
add
insl
inc
gs
outsl
fs
gs
outsb
outsw
add
add
push
jns
inc
gs
jns
inc
jb
insl
dec
popa
insl
add
add
outsb
fs
insl
popa
add
add
add
add
fs
jne
add
add
xor
add
jl
xchg
push
cs
inc
push
push
gs
push
gs
inc
popa
imul
jns
je
push
push
inc
inc
add
inc
jb
jo
outsl
addr16
jo
imul
jb
je
insl
jae
popa
jb
and
popa
bound
and
je
jb
jo
ja
jb
jne
and
jae
insb
data16
je
popaw
imul
add
jns
je
addr16
jo
imul
jb
je
insl
jae
popa
jb
and
popa
bound
and
outsw
jb
and
and
ja
jb
jne
and
insb
data16
je
and
and
jb
outsl
jb
gs
push
cs
inc
push
dec
outsb
jbe
insb
imul
addr16
inc
inc
jb
jo
outsl
push
push
inc
inc
add
imul
popa
and
insb
imul
outsb
addr16
add
cmp
add
push
je
gs
insl
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
cmp
je
imul
arpl
outsl
gs
je
jae
jo
outsl
jb
and
jae
arpl
insb
and
je
bound
imul
add
bound
gs
add
bound
and
gs
and
add
add
dec
popa
jae
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
cmp
arpl
daa
je
je
jne
arpl
and
add
add
add
add
push
cs
inc
push
dec
outsl
inc
push
insb
push
jne
jo
jb
inc
inc
jne
data16
fs
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
inc
jb
jo
outsl
push
push
inc
inc
add
jl
xchg
push
cs
inc
push
inc
insb
outsl
arpl
outsb
addr16
outsb
jo
je
outsb
insb
jns
inc
jne
data16
fs
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
inc
jb
jo
outsl
push
push
inc
inc
add
and
outsb
bound
imul
and
jo
je
imul
imul
outsb
je
and
and
jae
outsl
bound
arpl
add
push
cs
inc
push
dec
outsb
jbe
insb
imul
je
js
inc
inc
jb
jo
outsl
push
push
inc
inc
add
add
inc
jne
data16
fs
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
cmp
je
imul
arpl
outsl
gs
daa
je
jae
jo
outsl
jb
and
insb
je
jo
and
popa
outsb
outsb
gs
jae
add
inc
imul
add
add
add
add
jo
gs
outsl
fs
popa
jae
cmp
gs
imul
imul
outsb
outsl
je
bound
jae
arpl
imul
and
jae
arpl
push
outsl
fs
inc
imul
fs
popa
jae
cmp
inc
gs
gs
dec
push
sub
and
jae
and
and
insb
insb
gs
and
and
arpl
jo
imul
arpl
inc
imul
fs
popa
jae
cmp
je
imul
gs
insl
outsl
fs
outsb
outsb
outsl
je
jne
and
outsb
jne
insb
and
add
add
add
insb
je
jb
imul
jb
fs
outsb
jo
je
and
jbe
insb
imul
jb
jae
jp
add
add
inc
imul
push
gs
fs
outsb
jo
je
inc
jb
popa
jns
imul
jae
imul
jo
je
jne
data16
popa
jb
jne
outsb
je
add
add
je
jne
inc
jne
data16
add
add
push
cs
inc
push
inc
jns
gs
jb
popa
jns
popa
jb
insl
gs
jb
inc
jb
jo
outsl
push
push
inc
inc
add
add
jb
popa
insl
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
imul
dec
inc
push
pop
push
inc
inc
inc
dec
dec
inc
and
and
inc
pop
inc
dec
inc
pop
pop
inc
push
dec
push
pop
push
inc
inc
inc
dec
dec
inc
and
outsb
outsb
outsl
je
bound
jne
gs
je
and
push
je
gs
insl
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
imul
outsb
jbe
insb
imul
popa
outsb
fs
jae
jo
fs
outsb
add
add
push
je
gs
insl
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
imul
outsb
jbe
insb
imul
and
and
outsl
arpl
jo
fs
outsb
add
jb
popa
insl
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
imul
imul
js
and
addr16
and
and
je
popa
and
insb
je
jo
and
and
outsl
arpl
jae
jp
add
add
jb
popa
insl
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
imul
insb
popa
imul
insb
outsb
addr16
and
and
je
popa
and
insb
je
jo
and
and
outsl
arpl
jae
jp
and
and
pop
push
inc
inc
inc
dec
dec
inc
and
and
arpl
imul
dec
popa
jae
push
gs
imul
outsl
outsb
inc
imul
addr16
jl
xchg
push
cs
add
add
add
jl
xchg
push
cs
inc
push
dec
popa
jae
push
gs
imul
outsl
outsb
inc
popa
imul
push
imul
outsl
outsb
inc
imul
jns
je
push
push
inc
inc
add
add
dec
popa
jae
push
gs
imul
insl
gs
popa
and
jae
and
je
jbe
insb
imul
insl
imul
jb
jno
imul
jb
insl
gs
jb
daa
add
inc
popa
jae
dec
pop
inc
arpl
gs
and
xor
jae
and
jae
and
and
je
gs
and
and
and
and
arpl
imul
popa
jae
dec
pop
inc
arpl
gs
add
add
add
jl
xchg
push
cs
inc
push
inc
jb
inc
inc
gs
jne
je
arpl
jo
outsl
jb
inc
jb
jo
outsl
push
push
inc
inc
add
add
add
push
cs
inc
push
dec
gs
popa
fs
jb
inc
inc
gs
jne
je
arpl
jo
outsl
jb
inc
jb
jo
outsl
push
push
inc
inc
add
add
popa
jne
je
arpl
jo
outsl
jb
and
outsb
outsb
outsl
je
fs
jo
and
jae
popa
and
je
and
jae
jo
jae
jo
jb
jae
add
add
add
add
push
cs
inc
push
dec
inc
inc
inc
popa
fs
jb
inc
inc
gs
jne
je
arpl
jo
outsl
jb
imul
jb
jo
outsl
push
push
inc
inc
add
add
inc
gs
jne
je
arpl
jo
outsl
jb
imul
dec
inc
inc
and
arpl
popaw
imul
inc
push
sub
add
add
dec
dec
inc
inc
sub
add
add
add
jl
xchg
push
cs
inc
push
dec
outsb
je
addr16
inc
jb
jo
outsl
push
push
inc
inc
add
jl
xchg
push
cs
inc
push
inc
inc
push
inc
arpl
gs
jb
inc
inc
jb
jo
outsl
push
push
inc
inc
add
push
and
outsl
fs
jb
jb
add
add
fs
imul
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
add
add
add
popa
add
add
add
add
add
add
insl
add
add
add
jg
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
popa
add
add
add
outsl
add
add
add
jnp
add
jg
add
test
add
lea
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
add
imul
add
ja
add
addl
add
xchg
add
lea
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
pop
add
add
add
jno
add
jae
add
ja
add
mov
add
popl
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
pop
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
add
daa
add
add
das
add
add
push
add
add
gs
add
addl
add
xchg
add
add
lahf
add
add
stos
add
add
mov
add
mov
add
add
iret
add
add
aad
add
fildl
add
repz
add
pop
push
add
or
push
add
pop
push
add
pop
push
add
and
add
sub
add
das
push
add
cmp
push
add
inc
push
add
dec
push
add
dec
push
add
push
push
add
push
push
add
pop
push
add
gs
add
jns
add
jg
add
addl
add
push
add
mov
push
add
lods
push
add
mov
push
add
lds
add
int
add
roll
add
flds
add
filds
add
icebp
push
add
testl
add
std
push
add
or
add
adc
add
pop
pop
add
daa
pop
add
aaa
pop
add
inc
pop
add
dec
pop
add
dec
pop
add
push
pop
add
push
pop
add
push
pop
add
popa
pop
add
insl
pop
add
jae
add
jns
add
mov
add
lea
add
popf
pop
add
lahf
pop
add
mov
add
mov
pop
add
leave
pop
add
int
add
iret
pop
add
roll
add
fildl
add
loope
add
jmp
add
in
pop
add
testl
add
invd
add
adc
or
add
or
add
or
add
or
add
or
add
or
add
add
push
or
add
add
pop
or
add
add
pop
or
add
add
jno
add
orl
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
dec
or
add
add
push
or
add
add
pop
or
add
add
jno
add
ja
add
test
add
mov
add
fwait
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
popa
or
add
add
or
add
add
jne
add
jnp
add
jg
add
orl
add
mov
add
xchg
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
push
or
add
add
pop
or
add
add
outsl
or
add
add
mov
add
lea
add
xchg
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
pop
or
add
add
popa
or
add
add
jae
add
ja
add
orl
mov
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
prefetch
add
or
add
and
add
sub
or
add
dec
or
add
imul
add
test
add
mov
add
mov
or
add
mov
or
add
int
add
rorl
add
fisttpl
add
out
add
repz
add
decl
add
pop
push
add
sbb
push
add
daa
push
add
das
push
add
xor
push
add
dec
push
add
push
push
add
pop
push
add
pop
push
add
imul
add
add
jne
add
jge
add
xchg
add
push
add
xchg
push
add
fwait
push
add
mov
add
mov
add
mov
push
add
rorl
add
aad
add
fisttpl
add
in
push
add
out
push
add
stc
push
add
pop
sldt
or
add
or
sldt
and
sldt
xor
add
inc
sldt
inc
sldt
dec
sldt
dec
sldt
push
sldt
pop
sldt
pop
sldt
sldt
imul
add
add
xchg
sldt
mov
sldt
pop
jae
arpl
jae
fs
insb
add
cs
add
xchg
push
and
xchg
push
nop
pop
xchg
push
fmul
xchg
push
aam
xchg
push
int3
int
push
int
push
add
add
add
add
addb
add
add
add
add
addb
add
add
add
dec
add
add
add
sub
add
rorb
addb
add
or
push
add
push
add
add
bsf
test
neg
pusha
add
sbb
sub
ror
btc
bts
pusha
ror
pushl
setns
dec
lea
jg
dec
rol
pushf
pop
xor
lea
movzbl
rcr
mov
pushf
rol
call
add
pushl
movb
mov
movw
mov
mov
movl
movb
pushl
ret
rcr
adc
bswap
shl
mov
pushf
push
shl
ror
mov
pushl
pushf
stc
sub
movl
pushf
stc
shl
jmp
mov
push
call
test
sbb
bsf
neg
sub
shld
shl
bsr
xor
setb
shld
call
pusha
pushf
popl
call
pushl
mov
movb
pushf
popl
jmp
mov
movw
call
pushl
mov
not
mov
pop
not
mov
pusha
jmp
pusha
mov
pusha
lea
jmp
pusha
aad
movzbw
sub
mov
pushf
call
mov
jmp
stc
pushf
pushl
sub
mov
inc
pushf
call
mov
call
lea
bswap
mov
rcr
inc
mov
dec
shr
xor
mov
cmp
add
test
cmp
shld
pusha
mov
call
bt
call
sub
xor
mov
cmp
mov
pushf
stc
add
pusha
jmp
pusha
mov
movb
pushf
popl
call
pushf
jmp
mov
pushf
not
jmp
pusha
jmp
pushf
popl
jmp
mov
push
lea
jmp
sub
bt
stc
call
call
jmp
push
jmp
mov
mov
jmp
not
mov
jmp
push
jmp
jmp
push
mov
pushl
pushf
push
pushl
mov
pusha
pushl
mov
movb
mov
push
pushf
popl
pushf
mov
mov
jmp
pusha
jmp
pusha
call
call
mov
call
mov
pushl
mov
mov
pusha
call
jmp
clc
shld
mov
add
or
not
btr
neg
bsf
shrd
shl
and
add
add
and
clc
mov
call
call
cmp
add
jmp
call
clc
shld
adc
notl
call
bswap
movl
mov
dec
jmp
pushf
dec
push
pushl
lea
js
pusha
mov
pushf
lea
jmp
push
jmp
mov
pushf
push
pushf
push
lea
jmp
push
mov
not
mov
dec
pushf
push
mov
pushf
lea
jmp
jmp
push
pushf
popl
pusha
pushl
popl
pushl
mov
pushf
movw
lea
jmp
call
pusha
pushl
popl
pusha
mov
push
movw
lea
jmp
mov
call
mov
pushf
jmp
movzbl
mov
call
push
push
not
call
mov
push
movb
pusha
push
lea
jmp
shl
pushf
push
mov
pusha
pushf
call
pushl
popl
pushf
call
jmp
mov
push
pushf
xchg
pushf
bsr
mov
lea
movsbw
mov
movsbw
pushl
popl
jmp
mov
call
call
mov
pushf
pusha
movb
push
lea
jmp
call
stc
mov
push
ror
pushf
movw
jmp
jmp
movb
dec
pushf
push
pushf
lea
jmp
mov
push
jmp
bswap
add
jmp
push
mov
dec
lea
mov
push
bsr
push
jmp
jmp
inc
mov
clc
dec
bswap
mov
stc
add
call
jmp
mov
push
push
pushf
movw
pushl
ret
mov
movb
mov
mov
mov
pushl
ret
bswap
push
mov
movsbw
pusha
xchg
bswap
push
lea
mov
pushf
movsbw
pop
not
pushf
popl
test
shrd
mov
bswap
rcl
xchg
shr
pushl
popl
clc
bswap
movl
not
neg
shl
pushf
mov
btr
sar
add
rol
btr
lea
neg
stc
cmc
test
rcl
bswap
inc
shl
lea
cmc
inc
sub
rcl
mov
jmp
mov
xchg
jmp
mov
movb
jmp
movb
jmp
lea
xchg
bswap
jmp
jmp
xadd
mov
cmp
pushf
xor
rcr
add
not
pushf
mov
mov
movb
call
pushl
pushl
pushf
not
pushl
jmp
jmp
mov
pushf
rep
shl
movzbw
bt
pop
mov
push
bt
dec
add
mov
pushf
pushl
popf
pushl
pushl
lea
jmp
pusha
pushf
popl
pusha
mov
mov
push
xchg
lea
bsf
bswap
pushf
mov
bswap
call
bswap
dec
movsbw
rol
pusha
dec
setl
sub
pusha
add
rcl
seto
mov
jmp
call
call
pushl
popl
pushl
pushl
lea
jmp
mov
pusha
pusha
pushl
pushl
ret
xchg
inc
pushl
mov
bsf
lea
jp
push
movzbl
bsf
bswap
not
pushl
inc
lea
dec
push
inc
movzbl
mov
push
dec
push
jmp
lea
bsr
movl
pusha
not
mov
movb
pushl
call
jmp
mov
push
push
pushf
pushf
popl
call
jl
push
pushl
pushf
mov
pushf
call
call
push
pushf
call
pushf
movb
jmp
pusha
mov
call
sub
cmp
cmp
clc
shl
jmp
pushf
popl
pushl
mov
jmp
call
aaa
mov
mov
rol
cmc
mov
jmp
pushf
popl
mov
pushl
popl
push
push
pushf
pushf
lea
jmp
pusha
mov
push
movw
jmp
pushf
popl
push
push
push
pushl
mov
pushf
mov
push
mov
bswap
call
add
pushf
call
call
pusha
mov
pusha
pushf
lea
jmp
mov
pusha
lea
jmp
jmp
jmp
pushf
xchg
dec
jmp
pushf
not
mov
jmp
jmp
cmc
add
pusha
mov
pushf
pushl
ret
pusha
pushl
jmp
pusha
pushf
pushf
movb
pushf
popl
call
dec
push
jmp
mov
pushf
call
movl
mov
pushl
lea
jp
push
jmp
pushf
mov
pusha
push
mov
push
mov
call
dec
movb
pushf
lea
jmp
pusha
mov
bsr
mov
call
call
push
mov
mov
push
pushf
call
pushf
mov
pusha
pushf
pushf
lea
jmp
pushl
popl
movw
pushf
movb
push
lea
jmp
not
cmc
movb
not
mov
jmp
jmp
mov
jmp
mov
mov
mov
movb
mov
lea
jmp
jmp
pushf
jmp
pushl
pushf
pushf
popl
push
pushf
pushf
jmp
test
push
sub
clc
movb
call
pushf
popl
jmp
pushf
mov
pushf
movb
jmp
movw
pushl
pushl
popl
pushf
push
pushf
movl
mov
lea
jmp
push
dec
jmp
mov
mov
xchg
inc
mov
bswap
mov
bsr
movsbw
inc
pushl
popl
bsr
inc
jmp
call
jmp
pushf
pushf
bsr
not
bsr
bsf
setnp
dec
sub
shld
sar
bts
xadd
mov
rcr
clc
rol
sub
sbb
mov
shr
mov
cmc
movsbw
bt
add
inc
mov
shr
add
stc
xor
bswap
call
call
push
sub
pushf
mov
pushf
movb
pusha
pushf
dec
movb
pushf
lea
jmp
movzbw
pushl
popl
jmp
jmp
clc
adc
and
shld
mov
cmp
add
push
lea
jmp
movb
pushf
dec
stc
cmc
pushf
test
sub
bt
mov
test
clc
sub
mov
call
call
test
mov
bt
sub
jmp
mov
jmp
mov
push
pushl
popl
pushl
movw
jmp
pushf
pusha
movb
movb
mov
pushf
pusha
mov
jmp
pushf
mov
pushl
pushf
movw
lea
jmp
movl
mov
mov
jmp
movl
mov
push
jmp
dec
mov
push
not
jmp
push
mov
pushf
pushf
call
call
lea
jnp
pushf
movb
not
stc
rol
jmp
pushf
mov
mov
jmp
jmp
movb
call
pusha
jmp
not
call
push
pushf
movw
mov
call
pusha
cmc
sub
pusha
push
jmp
pushf
mov
mov
mov
call
shrd
shl
mov
cmc
bsr
mov
bt
add
push
call
movb
cmc
sub
push
push
cmp
bt
add
pushf
call
pusha
pushl
xchg
dec
mov
movsbl
movsbw
mov
pushf
bswap
pushl
popl
push
movzbw
inc
bsr
movl
pop
mov
push
pushl
pushf
dec
push
not
jmp
mov
movl
mov
lea
jmp
push
pushl
popl
mov
movb
lea
jmp
push
pushl
not
movw
dec
push
push
pushf
lea
jmp
call
push
pushf
call
pushf
pushl
mov
pushl
pushf
pushf
popl
mov
push
pushf
pushl
popl
pushl
pushf
mov
lea
jmp
stc
add
push
mov
pusha
mov
pushl
push
push
pushl
lea
jmp
mov
mov
mov
pushl
ret
push
call
movb
pusha
mov
jmp
add
ror
add
mov
push
sub
call
mov
pushf
pushf
lea
jmp
pusha
mov
call
pushl
popl
pushf
movl
pushl
pushf
mov
movb
lea
jmp
call
jmp
cmp
add
pushf
mov
mov
pop
mov
shr
mov
or
pushl
popf
not
call
pushf
pushf
mov
movb
lea
jmp
jmp
pusha
mov
mov
call
mov
mov
movb
lea
jmp
push
mov
push
pushf
mov
jmp
pushl
popl
mov
movl
movb
pushf
mov
lea
jmp
pushf
popl
pushf
pushf
mov
push
call
pushf
jmp
dec
pushl
not
push
call
pushl
popl
call
mov
push
mov
pushf
jmp
mov
mov
call
pusha
jmp
jmp
call
pushf
popl
call
pushl
movb
call
mov
call
call
pushf
pushl
jmp
mov
jmp
pushf
cwtl
stc
sub
cmc
movb
pusha
mov
movw
push
push
pushf
sub
mov
push
lea
jmp
mov
pushf
movb
mov
push
pushf
popl
mov
pushf
movb
mov
mov
call
movb
add
test
pushf
jmp
mov
mov
pushf
popl
jmp
movl
push
pushf
movw
lea
jmp
rcl
movzbl
clc
call
jmp
push
mov
movl
push
call
pushf
mov
jmp
pushl
movzbw
push
not
mov
call
call
movb
call
mov
mov
movw
pushf
pushl
lea
jbe
push
pushf
movb
pushf
popl
push
mov
push
call
movzbw
movzbw
mov
dec
btr
mov
rcr
setae
mov
stc
cmp
add
jmp
push
mov
mov
mov
pushl
jmp
jmp
mov
pushl
push
mov
dec
push
not
mov
pushf
call
pushl
popl
pushf
movb
movl
mov
lea
jmp
shrd
cmc
or
clc
mov
clc
mov
jmp
jmp
pushf
pushf
pushf
mov
pushf
pushl
mov
lea
jmp
pushf
call
pusha
mov
mov
mov
pushl
lea
jmp
pushf
jmp
pushf
mov
jmp
mov
push
mov
pusha
mov
pusha
call
flds
movw
pushf
lea
jmp
jmp
jmp
mov
call
pusha
mov
pusha
mov
call
call
lea
jge
push
mov
push
pusha
pushf
popl
call
push
pushl
pushf
popl
call
pusha
pushl
pusha
mov
call
cmc
push
add
cmc
cmc
not
stc
bt
sub
jmp
mov
pushl
call
mov
pushf
call
mov
push
pushf
mov
call
call
pushf
movw
pushl
popl
push
lea
jmp
mov
movb
pushf
mov
push
lea
jmp
dec
mov
movb
movw
lea
jmp
mov
mov
jmp
bsr
bt
mov
not
or
add
add
mov
shl
bts
xor
call
pushl
mov
pushf
mov
push
inc
movsbw
mov
dec
movzbw
mov
pusha
pushl
popl
inc
not
movl
pushl
call
movl
pushf
push
mov
mov
lea
jmp
mov
pusha
pushf
jmp
pusha
pushf
jmp
xor
call
jmp
push
pushf
mov
push
jmp
mov
not
movb
lea
jl
dec
pushf
pushf
lea
jmp
add
pushf
bt
add
movb
jmp
pushf
pushl
mov
pusha
pushf
lea
jmp
mov
movw
mov
lea
jmp
call
mov
pushf
call
cmp
pusha
movsbw
not
cmp
pusha
movzbl
pushl
neg
adc
shr
rcl
shl
and
ror
mov
test
sub
jmp
call
call
movw
mov
pushf
mov
mov
jmp
lahf
bsr
sub
mov
rcr
add
mov
cmp
sub
clc
jno
stc
shl
pushf
mov
movb
push
pushf
popl
jmp
movsbw
pushl
bswap
bswap
dec
push
movzbw
dec
jmp
jmp
jo
add
btr
pusha
mov
sbb
xor
clc
rcr
add
lea
jl
not
not
pusha
mov
push
pusha
call
push
mov
call
cltd
mov
btr
xchg
or
aam
pop
call
mov
pusha
jmp
pushl
popl
pushl
pushf
pushf
pushf
lea
jmp
js
push
call
push
movzbw
aas
mov
rcr
shl
movb
rcr
mov
movw
sub
mov
jmp
pusha
push
mov
pusha
push
mov
mov
pushf
mov
pushf
pushf
jmp
pop
movzbl
pushf
bsf
dec
pusha
mov
call
pusha
mov
jmp
pushl
popl
mov
pushf
jmp
pushl
movl
pushf
push
pusha
lea
jmp
pushl
popl
push
movw
lea
jmp
ror
call
dec
stc
bt
rol
jmp
call
push
lea
jne
push
push
mov
pusha
pushf
mov
mov
pusha
pushf
call
push
push
mov
lea
jbe
pushf
mov
pushf
mov
push
mov
call
jmp
jmp
pusha
mov
call
jmp
mov
jmp
call
not
xor
pushl
mov
push
movzbl
lea
mov
pushf
call
movb
push
mov
pushf
mov
pushl
mov
movw
jmp
not
jmp
call
xor
aam
das
mov
neg
shld
mov
pusha
bt
bt
test
add
movb
push
push
call
pusha
call
jmp
pushl
call
pushf
pushf
mov
jmp
aad
pushf
bt
cmp
mov
not
cmc
adc
mov
call
movl
push
push
movw
lea
jmp
inc
pushf
neg
stc
rol
not
adc
pop
lea
sbb
dec
rcr
sub
ror
neg
mov
test
mov
not
not
add
add
mov
shr
add
setb
movzbw
dec
not
jmp
pushf
pushf
mov
mov
jmp
mov
jmp
pushl
pushl
pushl
popl
mov
movl
movb
pushl
push
pushl
lea
jmp
pushf
pusha
mov
movl
mov
lea
jl
pusha
pushf
pushf
mov
push
call
xadd
sar
mov
bsf
jmp
push
push
movl
mov
pusha
mov
mov
pusha
mov
jmp
jmp
mov
call
pushf
not
pushl
pushf
dec
pushf
mov
lea
jmp
not
push
pusha
pushf
popl
not
add
cmp
mov
xchg
shrd
mov
xor
pushl
popl
neg
movl
sub
btc
cmc
clc
mov
shr
ror
add
pusha
neg
pushf
adc
rol
bswap
add
jl
sub
mov
rol
adc
setge
sub
push
pushf
lea
add
ror
xchg
sar
push
mov
pusha
test
add
add
ror
mov
xadd
call
mov
pushf
call
mov
call
pushf
mov
push
mov
pushf
jmp
mov
mov
jmp
mov
mov
pushl
call
inc
lea
pushl
popl
bsf
movl
bsf
bsf
mov
call
push
stc
add
push
movw
jmp
mov
movw
mov
call
fstps
push
push
pushf
lea
jmp
adc
neg
stc
mov
clc
mov
cmc
pusha
add
call
mov
push
jmp
pushl
popl
pushf
mov
mov
pushf
lea
jmp
mov
mov
movb
mov
movb
mov
lea
jmp
jmp
jmp
cmc
mov
stc
clc
stc
pushf
xor
stc
bswap
stc
clc
jmp
mov
pushf
mov
push
lea
jmp
pushf
jmp
mov
bsf
lea
js
sete
mov
push
dec
push
not
push
inc
mov
pushl
dec
push
movl
movzbw
inc
inc
call
pusha
lea
jno
dec
pushf
test
add
call
movw
pushf
popl
push
pusha
mov
pusha
mov
call
pushf
popl
movb
pusha
call
sar
pushf
movzbw
mov
pusha
neg
bsr
bsf
mov
ror
not
mov
mov
stc
pushl
pushf
add
cmp
shld
pushf
pushf
mov
movb
push
mov
lea
jo
pushf
jmp
jmp
jmp
aaa
mov
cmc
pusha
add
mov
pushf
pushf
mov
jmp
bt
mov
pushf
add
movb
pushl
lea
jmp
push
mov
pusha
mov
push
call
push
movw
mov
mov
mov
pusha
pushf
mov
pushl
mov
pushf
pusha
pushf
push
mov
pushl
jmp
pushf
pushf
popl
movb
jmp
pushf
mov
dec
movl
push
lea
jmp
call
pushl
popl
mov
movb
mov
movb
lea
jmp
pushf
popl
movb
movb
mov
call
pushf
jmp
mov
call
pusha
call
jmp
call
mov
jmp
pushf
popl
pushf
movl
call
mov
jmp
mov
movw
movw
pushf
call
push
mov
call
push
pushf
popl
movw
jmp
push
pusha
mov
call
mov
bsf
mov
bsf
pop
bsr
mov
call
pushf
bt
ror
pushf
bt
cmc
add
cmc
lea
stc
call
mov
shl
test
rcl
rcl
add
setae
mov
pushf
push
jmp
sub
pushl
and
pushf
mov
mov
jmp
mov
pushl
mov
mov
call
mov
jmp
call
dec
call
call
pushl
pushf
popl
call
pushl
pushf
popl
push
mov
pushl
call
pusha
pusha
mov
jmp
pushf
push
mov
mov
call
mov
pushl
call
sub
aaa
bsr
stc
mov
pusha
add
call
shld
sar
stc
rol
movzbl
setns
sub
shr
xor
pushf
shl
sub
btc
rcr
not
cmp
stc
add
shr
sub
rcr
pusha
mov
jmp
jmp
jmp
pushf
popl
mov
pushf
mov
movb
mov
lea
je
pusha
pushl
popl
call
jmp
pushl
mov
push
xchg
mov
pushf
mov
pushl
pushf
pushl
ret
add
add
mov
clc
add
pusha
mov
pushf
test
not
pushf
stc
push
clc
sub
movw
cmp
cwtl
clc
sub
cmp
test
sub
jmp
jmp
movl
movw
lea
jmp
movl
bsr
mov
mov
pushf
push
dec
pushf
call
mov
jmp
call
call
or
push
mov
push
pushf
cmc
call
pushf
pushl
pushf
mov
push
pushf
mov
pushf
popl
jmp
clc
sub
cmc
mov
shl
mov
stc
clc
cmc
sub
stc
bt
pushf
stc
shr
pushf
mov
jmp
movl
pushf
pushf
pushf
pushf
lea
jmp
pushf
pushf
dec
call
mov
cmc
add
jmp
call
mov
pushf
popl
call
sub
sub
bt
rol
mov
stc
push
add
pushf
pushf
movl
movb
lea
jmp
shl
xor
adc
test
lea
rcr
xor
and
pop
xor
lea
movzbl
bsr
bswap
mov
jmp
pushf
mov
push
pushf
pusha
pushl
ret
jmp
call
add
cmp
pusha
bt
mov
sub
pushl
sub
cmp
bt
not
test
stc
call
bsf
pushl
popl
lea
call
mov
pushl
push
mov
push
lea
jmp
push
pushf
call
pushf
mov
call
movb
mov
mov
pushf
popl
pusha
call
movzbl
bsf
dec
add
add
cmc
shr
bt
add
call
call
bt
rcr
test
mov
pusha
shl
cmc
or
mov
bt
bt
sub
call
mov
mov
jmp
jmp
jmp
cmp
test
sub
pusha
stc
sub
lea
jns
mov
pusha
push
pushf
lea
jmp
mov
movzbw
pushf
pushf
popl
bswap
push
mov
movsbw
mov
std
cld
mov
pushf
movzbl
lea
pushl
pusha
mov
cld
movsbw
movsbw
pusha
mov
mov
mov
std
push
cld
pushf
rep
shl
bsf
mov
bt
bsr
bt
mov
bt
cmc
pushl
popf
movw
lea
jmp
pushf
popl
call
mov
mov
pusha
mov
pusha
mov
mov
movw
pushf
mov
lea
jmp
mov
pusha
pusha
pushf
pushf
pushf
popl
jmp
call
mov
jmp
lea
inc
movl
pushf
jmp
push
mov
mov
push
mov
push
pushf
jmp
lea
mov
jmp
movb
add
pushf
pusha
call
mov
push
mov
push
call
mov
movw
call
movw
pushl
mov
pushl
mov
bsr
bsr
pushl
mov
not
mov
push
bsr
bsr
pushl
popl
bsf
pop
movsbw
bsf
movl
movzbw
pushf
movzbw
push
mov
pushf
movw
dec
push
call
pushf
popl
movb
jmp
movl
pushf
movb
mov
movb
lea
jmp
stc
neg
stc
push
add
stc
cmc
cmc
cmp
sub
cmc
bt
sub
clc
lea
jge
add
jle
push
push
pushf
mov
mov
pushf
lea
jmp
movb
mov
pushf
lea
jmp
pusha
stc
pushf
add
jmp
jmp
jmp
mov
push
pushl
popl
pushf
mov
jmp
mov
pushl
movw
call
not
test
cmp
add
call
movl
mov
mov
jmp
call
dec
movb
lea
jmp
mov
movw
mov
jmp
stc
sub
movb
sub
bt
lea
jo
cmp
pushf
cbtw
bt
movw
test
cwtl
cmc
bt
pushl
sub
pusha
mov
movb
pushf
lea
jmp
dec
push
lea
jmp
pushf
call
call
inc
rcl
shr
jmp
push
push
dec
pushl
pushl
lea
jmp
mov
jmp
and
pushf
jmp
mov
add
adc
icebp
add
adc
add
adc
lds
adc
ljmp
popf
xor
adc
fildl
adc
fiadds
adc
roll
add
add
adc
pop
add
dec
push
add
adc
xor
adc
fiadds
adc
pop
add
insl
cld
add
adc
add
adc
incb
adc
adc
adc
fildl
adc
sbb
adc
add
adc
int3
add
adc
fiadds
adc
fiadds
adc
fiadds
adc
add
adc
cmp
adc
into
add
adc
add
adc
enter
fiadds
adc
add
adc
sub
adc
lock
adc
xor
add
adc
xor
add
adc
cld
add
adc
add
adc
fiaddl
adc
add
adc
add
adc
ljmp
repnz
add
adc
rolb
adc
sti
add
adc
sbb
adc
add
adc
add
adc
add
adc
lret
add
adc
add
adc
xor
add
adc
ret
xor
add
adc
roll
aaa
fildl
adc
sbb
adc
cmp
adc
lds
adc
rolb
adc
roll
and
add
adc
add
adc
sbb
adc
add
adc
sbb
adc
loope
adc
add
and
add
adc
iret
add
adc
int3
add
adc
pop
add
xchg
add
adc
lds
adc
add
adc
or
add
adc
cld
add
adc
sbb
adc
roll
fwait
lock
adc
fildl
adc
add
adc
sub
adc
int3
add
adc
cmp
adc
add
adc
add
adc
jmp
add
adc
jmp
add
adc
xor
add
adc
add
adc
incb
adc
lret
add
adc
fildl
adc
xor
add
adc
add
adc
pop
add
lret
adc
add
adc
add
adc
add
adc
cmp
adc
sbb
adc
add
adc
fiadds
adc
xor
add
adc
add
adc
lock
adc
sub
adc
xor
add
and
and
lcall
add
inc
and
mov
push
movw
call
pushf
popl
jmp
call
pushf
call
jmp
pushl
movw
mov
call
jmp
call
call
mov
call
pushf
popl
pushf
pushl
popl
push
pushf
pushf
lea
jmp
adc
movzww
jmp
or
mov
call
mov
call
pushf
popl
pushl
pushl
pusha
pushf
pushl
popl
pushl
push
movw
lea
jmp
cmc
shl
cmc
mov
mov
pushl
sub
movl
add
pushf
push
pusha
pushf
popl
call
movzbl
pushl
pusha
dec
cmc
sub
cmc
ror
test
call
pushl
pushf
popl
pushl
mov
call
clc
pusha
bts
mov
pushl
stc
sub
push
pushf
pushl
mov
push
lea
jmp
mov
movb
pusha
pushf
lea
jmp
call
stc
rcr
mov
test
sbb
shr
add
jmp
mov
pushf
pushf
call
movzbw
pusha
bsr
dec
stc
rol
neg
shl
add
cmc
inc
bsr
and
bts
mov
test
pushf
sub
jmp
not
bsf
mov
cmp
push
push
xchg
cmc
add
jbe
sub
jmp
movb
call
movb
pushf
popl
jmp
pushl
popl
pushf
jmp
push
push
lea
jle
mov
pushf
mov
pushf
popl
pusha
pusha
jmp
inc
notl
xor
mov
pushf
pushf
sub
pusha
bt
movb
and
pushf
pushf
popl
movl
pushl
popl
movw
lea
jmp
push
mov
pushf
lea
jmp
call
jmp
pusha
fstps
movb
pushf
movb
lea
jmp
movzbw
call
mov
pushf
mov
push
push
lea
jmp
pushl
jmp
mov
push
pushl
mov
movb
push
pushf
mov
call
jmp
pushf
popl
pushl
pushf
pushl
popl
pushf
pushf
movw
lea
jmp
bts
pusha
mov
bt
add
jmp
jmp
push
pushf
pusha
pushf
popl
jmp
jmp
aam
add
out
or
fwait
add
fcomps
mov
add
scas
xchg
add
jae
add
pop
mov
or
add
mov
clc
add
and
add
adc
add
push
popl
or
mov
or
add
jp
add
mov
sub
add
push
mov
or
add
fldcw
add
and
add
push
loope
mov
repnz
inc
in
add
out
or
mov
or
test
or
out
or
or
add
cmp
add
jns
add
cmp
add
pop
in
or
add
loopne
add
cmp
mov
cli
add
add
add
or
add
or
out
mov
cld
add
scas
xchg
add
aam
add
pop
add
mov
incb
mov
add
enter
push
loope
mov
loope
mov
out
add
daa
incb
mov
add
cltd
mov
mov
sub
or
clc
add
leave
mov
or
add
aam
add
cltd
mov
mov
popl
or
loope
mov
xchg
add
xchg
mov
mov
cld
add
fldcw
add
aam
add
insl
and
or
repnz
sbb
add
aad
add
enter
fldcw
add
pop
in
or
test
or
mov
mov
sub
or
sti
add
cmp
mov
cli
add
add
add
or
nop
add
test
add
push
loope
mov
add
loopne
add
aad
add
leave
mov
or
mov
or
out
or
add
mov
clc
add
mov
add
imul
or
clc
add
inc
mov
mov
loope
mov
incb
mov
mov
mov
add
cmp
add
inc
mov
mov
pushf
add
push
out
or
fwait
add
test
add
std
fwait
add
shl
add
and
add
scas
xchg
add
scas
xchg
add
aam
add
aad
add
aam
add
push
popl
or
out
mov
mov
or
add
pop
mov
or
cli
add
cmp
mov
add
or
add
or
sub
or
incb
mov
add
lea
add
push
nop
add
std
fwait
add
pop
in
or
jmp
or
add
push
cld
add
gs
add
aad
add
cmp
add
leave
mov
or
mov
mov
add
cmp
add
aad
add
cmp
add
fcomps
mov
cltd
add
and
add
scas
xchg
add
out
or
pushf
add
pop
mov
or
in
add
loopne
add
push
in
add
push
popl
or
xchg
add
inc
in
add
cmp
add
daa
incb
mov
jmp
or
cli
add
cmp
mov
add
or
add
or
mov
mov
out
mov
add
dec
mov
push
pushl
mov
call
call
add
movb
jmp
mov
jmp
jmp
pushf
dec
mov
movb
jmp
movb
pusha
movw
pushf
popl
call
call
movb
call
cmp
jmp
movw
add
call
mov
mov
call
bswap
not
sub
mov
sub
and
xor
setae
pushf
bsr
mov
inc
cmc
lea
adc
sub
btr
btr
mov
bt
stc
call
cld
call
mov
cmc
cmp
jmp
call
das
mov
test
pushf
clc
adc
mov
cmp
stc
sub
pusha
jmp
push
mov
call
add
push
mov
stc
stc
rol
cmc
call
call
mov
mov
mov
movb
lea
jmp
movw
pushf
popl
push
pushl
mov
pusha
jmp
lea
jne
pushf
push
mov
pushf
push
mov
movw
lea
jmp
movb
dec
cmp
movl
pushf
cmc
lea
pushl
sub
bt
bt
pushf
mov
push
clc
bt
push
sub
call
mov
call
lea
jne
pushf
pusha
pushf
popl
pusha
mov
pushl
popl
pushf
movb
push
lea
jmp
pushf
popl
push
push
jmp
mov
movb
call
push
mov
movl
movw
lea
jmp
movzbw
sets
mov
clc
cmp
clc
pusha
bswap
bt
cmc
pusha
pushf
add
call
cmc
clc
xor
cmp
sub
clc
add
jle
push
movb
pushl
mov
mov
push
movb
lea
jmp
pushf
lea
jg
push
mov
movb
pusha
lea
jmp
pushf
jmp
mov
pushf
pushf
lea
jmp
not
jmp
call
pushf
jmp
push
pusha
pushf
push
dec
jmp
lea
jb
popl
pusha
pusha
mov
pushf
lea
jmp
mov
bswap
movsbl
bsf
dec
call
push
pushf
popl
pushf
mov
pushf
push
xchg
jmp
movw
mov
mov
jmp
jmp
mov
mov
mov
pushf
popl
call
pushf
rep
not
movsbl
inc
cmp
mov
shld
ror
bsr
neg
mov
clc
pushl
popf
pushl
lea
jmp
push
mov
pushf
push
pusha
mov
lea
jmp
shrd
mov
mov
push
stc
add
mov
pushf
mov
call
mov
jmp
mov
pushl
pusha
lea
jmp
pusha
push
mov
jmp
push
mov
mov
pushf
mov
pushf
push
pusha
movw
mov
push
jmp
mov
push
push
movb
pushl
mov
movb
jmp
mov
setg
not
pop
call
pushl
cmp
add
movb
mov
pushf
movw
movb
lea
jmp
bt
clc
movb
add
pushl
pushf
pusha
pushl
lea
jmp
mov
sub
pushf
stc
clc
sub
lea
jp
mov
push
movb
pusha
lea
jmp
pushf
pushf
popl
pushf
call
pushf
pusha
call
push
mov
jmp
mov
jmp
push
pushf
movw
xchg
movsbw
movzbw
pushf
not
xchg
mov
xchg
mov
bswap
movsbw
jmp
pushl
push
pushl
popl
jmp
shl
sbb
rcr
mov
shr
mov
cmp
cmp
jmp
pushl
popl
pushl
pushf
pushf
mov
lea
jmp
movsbw
push
bswap
jmp
pushl
popl
pushf
mov
pushf
pushf
movl
mov
movb
lea
jmp
dec
pushf
movw
movb
lea
jmp
mov
pushl
push
mov
mov
movb
call
call
call
cmp
pusha
not
bt
call
adc
cmp
mov
mov
mov
cmp
sub
cmp
shr
pusha
call
call
sar
shl
dec
sub
mov
shl
mov
test
sub
cmp
pushf
call
movb
mov
pushl
call
and
pushl
mov
call
push
jmp
pushl
mov
lea
ja
pushf
pushl
mov
call
mov
call
pusha
pushf
mov
pushf
movl
pushf
push
lea
jmp
jmp
ror
xor
not
movzbl
pushf
not
stc
mov
cmc
stc
rol
cmp
add
movb
mov
movw
pushl
pushl
ret
mov
pushf
pushl
popl
jmp
pusha
pushl
popl
push
movl
movb
pushf
movb
lea
jmp
push
movb
mov
mov
call
bswap
mov
bswap
mov
movsbw
lea
mov
movb
xchg
call
pushl
add
jmp
pushl
jmp
pushl
mov
mov
mov
pusha
mov
pushf
jmp
pushf
popl
call
rol
movl
push
lea
jnp
test
add
jmp
dec
mov
stc
btc
bts
xor
movsbw
dec
jmp
mov
pusha
mov
movw
push
pushl
popl
call
call
push
pushf
jmp
jmp
call
mov
pushf
mov
lea
jmp
stc
mov
xchg
rdtsc
aam
bts
pop
shr
pop
ror
adc
pop
xor
pop
cmp
shl
bt
xor
pop
jns
shld
pop
btc
popf
lea
movzbw
pop
bswap
pusha
mov
pusha
xchg
mov
jmp
mov
pushf
pushf
call
test
shl
lea
jg
pushf
mov
push
jmp
call
sub
movzbw
mov
push
test
sub
pusha
pushf
mov
pushf
push
lea
jmp
bt
test
not
mov
movb
cmc
movb
sub
pusha
test
and
jmp
call
pushf
jmp
pushf
popl
mov
mov
lea
jb
push
pushf
pusha
push
push
mov
jmp
mov
movb
lea
jmp
lea
pusha
add
pushf
movw
stc
pushf
xor
push
jmp
add
pushf
pushf
lea
jmp
pusha
push
call
jmp
call
dec
movb
lea
jmp
jmp
btc
cwtl
stc
mov
xor
rcr
rcr
sub
mov
pushf
bt
cmc
stc
add
call
pushf
pushl
popl
mov
pusha
lea
jmp
bsf
pop
inc
popf
movzbl
setle
jmp
btc
neg
bt
mov
call
mov
not
mov
inc
bsf
movsbl
pushl
popl
inc
movsbw
movl
dec
bsr
pop
mov
pushf
pushl
dec
pushf
not
mov
dec
mov
movb
lea
jmp
pusha
stc
pushf
sub
pusha
mov
pushf
pushl
mov
lea
jmp
call
lea
jg
popl
pushf
push
pushf
lea
jmp
jmp
pushf
mov
call
push
push
mov
lea
jae
pushf
pusha
pushf
mov
call
jmp
mov
mov
pushl
ret
push
not
push
call
call
mov
push
jmp
push
mov
add
rcrl
daa
lea
stc
bsr
pushf
pusha
and
add
shl
adc
pop
sub
lea
bswap
mov
mov
lea
pushf
pusha
movzbw
mov
xchg
call
movzbw
mov
rcl
mov
pushf
cmp
add
jmp
pushf
mov
movl
pushf
pushf
push
lea
jmp
pushf
popl
push
pushf
push
pushl
popl
pushf
pushf
lea
jmp
mov
movl
pushl
pushl
lea
jmp
push
mov
pushf
push
push
lea
jmp
pusha
mov
mov
mov
call
movb
movl
pushl
mov
pusha
push
pushl
popl
pushf
movw
movl
pusha
push
mov
mov
lea
jmp
add
pushf
mov
lea
jmp
shr
push
call
pusha
clc
xor
push
inc
test
movb
call
sbb
mov
dec
rcr
cmp
mov
stc
call
xor
neg
shr
mov
mov
test
push
sub
call
lea
jnp
mov
pusha
push
lea
jmp
mov
push
cmc
cmp
add
movw
pushl
jmp
sub
pushl
mov
mov
lea
jmp
cmp
shl
call
jmp
movb
movb
mov
jmp
mov
call
mov
movb
call
sub
jmp
call
pushf
mov
jmp
mov
bswap
xor
pushf
inc
dec
rol
sbb
bts
neg
neg
rcr
bsr
cmc
xor
btc
lea
pushf
test
or
inc
xor
inc
movzbl
bswap
pushl
jmp
jmp
fadds
push
push
mov
push
lea
jmp
add
call
not
mov
call
push
jmp
xor
call
mov
pushf
call
mov
jmp
call
xor
rcr
adc
mov
push
adc
inc
mov
stc
test
jmp
call
pusha
push
pushf
popl
jmp
call
mov
mov
mov
movl
movb
pushl
ret
xchg
movsbw
mov
bswap
mov
call
mov
call
cbtw
mov
stc
call
call
jmp
mov
test
pushf
call
push
pushf
popl
call
add
jmp
pushf
jmp
push
jmp
dec
call
mov
pushl
pushf
movw
lea
jmp
pushf
pusha
jmp
pushf
push
mov
mov
movw
lea
jmp
add
call
pusha
bt
shl
pushf
pusha
mov
mov
jmp
pushl
jmp
pushf
mov
pusha
mov
movb
push
pushf
popl
mov
mov
mov
mov
pusha
mov
mov
mov
jmp
push
pushf
mov
call
push
mov
jmp
jmp
mov
pushf
pushf
mov
pushl
call
pushf
pushf
call
pusha
push
pushl
popl
pushf
movb
lea
jmp
dec
and
mov
cmc
bt
test
sub
clc
cmp
bt
add
pusha
movw
movw
lea
jl
pushf
jno
popl
push
lea
jmp
pusha
push
mov
mov
pushl
push
lea
jmp
pusha
jmp
sbb
cmp
mov
push
sub
mov
push
call
push
inc
inc
shl
movzbw
pusha
shr
neg
rol
add
test
xor
xor
lea
rol
or
jmp
mov
call
pushf
pushf
mov
pushf
movb
lea
jmp
pushf
mov
mov
pushf
lea
jmp
pushl
popl
mov
mov
lea
jmp
mov
jmp
call
movb
call
pushf
call
pusha
not
pushf
mov
movb
jmp
mov
sub
pusha
push
call
jmp
dec
pushf
push
pushl
lea
jmp
call
jmp
bswap
call
mov
jmp
mov
mov
mov
call
pushf
mov
jmp
mov
jmp
stc
movzbw
add
shl
movzbl
stc
btr
sub
ror
ror
dec
jge
shld
bt
sub
cmc
bts
clc
setne
rol
sar
bt
dec
btc
sub
movsbw
pusha
dec
btr
pusha
xor
mov
mov
bt
clc
add
pushf
jmp
pushf
jmp
push
pushl
pusha
jmp
pop
movzbl
pusha
mov
jmp
pusha
movl
call
add
pushl
mov
mov
call
movb
pushf
call
not
mov
movw
movw
dec
mov
mov
mov
lea
jmp
mov
call
push
pushl
popl
call
call
pushf
push
mov
mov
mov
mov
mov
lea
jmp
mov
clc
sub
jmp
movb
pushf
popl
jmp
movb
mov
call
call
pusha
pushf
not
movw
movb
pushf
rol
cmc
pushf
jmp
movb
push
movl
push
lea
jmp
pushf
jmp
pushf
mov
push
lea
jmp
mov
pusha
pushf
dec
test
lea
jnp
stc
add
jmp
call
pusha
pusha
mov
setp
call
lea
js
pusha
mov
call
cmc
pushf
test
add
call
pushf
popl
pushf
pushl
popl
movl
mov
push
pushf
lea
jmp
bsr
mov
jns
pushf
push
not
test
not
clc
stc
test
sub
pushf
movb
and
pushf
jmp
mov
pushf
jmp
movl
mov
lea
jmp
mov
pushf
pusha
mov
jmp
mov
sub
movl
jmp
mov
push
movw
jmp
dec
push
lea
jmp
pushf
pushf
mov
movb
mov
pusha
call
pushf
jmp
cwtl
mov
rol
mov
clc
not
stc
call
pusha
pusha
pushf
mov
pushl
pushl
push
movb
lea
jmp
pusha
call
push
test
cbtw
test
clc
cwtl
cmp
pusha
sub
pushf
jmp
pushf
mov
pushf
mov
pushf
movw
lea
jmp
push
mov
pusha
mov
jmp
add
test
xor
call
dec
pushf
movl
pushf
lea
jmp
push
movb
movb
mov
call
mov
pusha
pushf
movb
jmp
mov
call
aaa
mov
pusha
sub
jmp
pushf
pushf
call
dec
rol
mov
test
bt
pushf
stc
add
movl
mov
pushf
pushf
lea
jmp
dec
bswap
mov
sar
rcr
clc
or
add
push
mov
mov
pusha
push
mov
pushf
pushf
movb
lea
jmp
mov
pushf
movw
lea
jmp
pushl
popl
push
pushf
movl
push
lea
jmp
pusha
pushl
popl
pusha
pushf
mov
pushf
lea
jmp
pushf
popl
movb
push
mov
mov
pushf
xchg
dec
dec
mov
movzbw
movsbl
pusha
mov
jmp
sbb
sub
movb
pusha
dec
lea
je
dec
bts
rol
not
not
inc
dec
cmc
clc
sub
neg
inc
cmc
mov
call
mov
movb
mov
jmp
jmp
pusha
flds
push
mov
pushl
lea
jmp
xchg
add
mov
bt
cmc
or
push
mov
call
movb
mov
jmp
pushl
popl
pushl
lea
jmp
jmp
mov
dec
pushf
mov
jmp
cmp
test
pushf
shrd
jmp
push
jb
pusha
mov
pusha
pushf
popl
jmp
pushl
mov
jmp
sub
call
movl
pushf
lea
jmp
call
jmp
dec
pushf
pushf
pushl
pushf
lea
jmp
mov
dec
pushl
not
pushf
jmp
mov
jmp
mov
movb
mov
jmp
pushf
jmp
pushf
mov
jmp
call
push
pushf
pushf
mov
call
sub
stc
lea
bt
ror
not
bsf
dec
call
or
clc
rcr
cmp
movzbl
test
cmc
stc
bt
lea
test
jmp
call
pushf
mov
pushl
movb
mov
pushf
lea
jmp
mov
jmp
push
pushf
popl
push
call
jmp
cmp
sets
sbb
movzbl
call
test
clc
cmp
add
movl
pushl
cmp
pushf
sub
jmp
push
mov
call
pushf
pushf
jmp
bt
pusha
add
jmp
pushf
mov
jmp
aas
aad
stc
mov
push
sub
mov
push
mov
pusha
pushl
pushf
movb
lea
jmp
pop
mov
jmp
mov
jmp
mov
call
call
push
jmp
pushf
jmp
push
call
mov
pushf
lea
jmp
pushf
call
push
pushf
mov
mov
mov
pusha
call
pushf
pusha
pushl
mov
pushf
pushf
call
call
mov
pushf
call
pusha
push
mov
jmp
pushf
pushf
push
mov
push
mov
pushf
mov
mov
pushf
movb
mov
pushf
jmp
neg
call
pushf
mov
pusha
jmp
call
push
jmp
jmp
shl
sbb
setb
add
mov
bts
bts
jmp
flds
pushf
lea
jmp
call
sub
jmp
call
mov
push
pushl
popl
push
movl
pushf
lea
jmp
pushf
call
jmp
mov
mov
jmp
mov
push
lea
jmp
clc
cmp
call
rcr
aaa
neg
pushf
mov
mov
stc
cmc
sub
bt
cmp
clc
test
add
call
call
call
mov
call
sub
push
movb
pushf
mov
push
lea
jmp
dec
pushf
mov
lea
jmp
ror
mov
pushf
mov
call
pushl
mov
movw
call
pushf
popl
pusha
jmp
mov
pushf
mov
jmp
mov
push
lea
jmp
jmp
pushf
jmp
push
pushf
pusha
mov
pushf
pushf
pushl
mov
pushf
mov
push
jmp
cmp
shr
lea
ja
mov
push
pushf
popl
pushf
pushl
popl
mov
lea
jmp
pushf
jmp
mov
pushl
mov
jmp
bt
mov
push
cmc
call
pushl
popl
push
movl
pushl
movb
mov
pushf
lea
jmp
call
mov
sub
mov
pushl
not
lea
jge
pusha
pushf
cmc
xor
pusha
jmp
pusha
jmp
movl
pushf
push
pushf
lea
jmp
dec
call
mov
pushl
pushl
jmp
pushf
movb
mov
pushf
pushl
mov
mov
lea
jp
pusha
pusha
pushl
popl
call
mov
mov
pushf
pushf
popl
call
jmp
jmp
movb
movw
mov
jmp
push
mov
pusha
jmp
pushf
pushl
popl
movb
lea
jnp
pushf
movl
pushf
pushf
pushf
pusha
lea
jmp
push
mov
push
mov
push
pushf
movb
jmp
movl
movb
pushf
movb
lea
jmp
jmp
push
mov
jmp
mov
mov
call
call
mov
pusha
pushl
pushf
pushl
ret
std
cld
pushf
lea
jno
rep
clc
pushf
ror
neg
mov
dec
mov
pusha
pushl
popf
mov
lea
jmp
mov
jmp
pushf
mov
bt
add
push
pushl
pushf
movb
lea
jmp
push
dec
push
jmp
xchg
dec
pop
mov
mov
pop
mov
movsbw
bswap
pushl
popl
lea
call
pushf
pushf
pushf
popl
jmp
push
mov
jmp
pushf
push
push
mov
jmp
inc
call
jmp
sub
push
pushf
ror
jmp
clc
xchg
mov
bt
bt
call
pushl
popl
push
pushf
pushf
lea
jmp
jmp
pushl
popl
call
aas
xor
neg
mov
dec
neg
adc
sbb
mov
pusha
jmp
pushf
ror
call
setg
lea
xchg
movb
bswap
mov
movzbl
mov
pop
push
pushf
popl
call
push
ror
lea
xchg
bswap
sub
shld
mov
adc
movzbl
btc
mov
xchg
btc
btr
add
setns
mov
stc
inc
xor
bsr
not
not
inc
inc
shl
bswap
bsr
neg
shrd
call
mov
call
not
pusha
mov
mov
call
movb
jmp
jmp
mov
call
pushf
popl
pushf
mov
push
push
mov
pushf
pushf
push
mov
push
pushl
call
pushf
pusha
pushf
popl
pusha
jmp
arpl
add
adc
fildl
adc
stc
add
adc
pop
add
adc
sub
adc
add
adc
add
adc
add
adc
add
adc
pop
add
adc
inc
add
sbb
add
adc
adc
icebp
add
adc
flds
adc
fildl
adc
fiaddl
adc
add
adc
add
adc
pop
add
adc
add
adc
lock
adc
add
adc
xor
add
adc
lock
adc
leave
add
adc
add
adc
flds
adc
add
adc
add
adc
add
adc
ret
add
adc
add
adc
syscall
adc
flds
adc
fiadds
adc
add
adc
add
adc
ret
add
adc
loopne
adc
add
adc
lds
adc
pop
add
adc
add
adc
pop
add
adc
add
adc
add
adc
pop
add
adc
add
adc
add
adc
sub
adc
fadds
adc
in
add
adc
push
add
adc
add
adc
cli
add
adc
sbb
adc
add
adc
push
add
adc
pop
add
adc
sub
adc
sub
adc
and
adc
in
adc
in
adc
lds
adc
ret
add
adc
pop
add
adc
stc
add
adc
add
adc
in
adc
icebp
add
adc
pop
add
adc
pop
add
adc
jmp
adc
add
adc
sub
adc
add
adc
in
adc
sub
adc
lds
adc
syscall
adc
add
adc
flds
adc
sub
adc
out
adc
add
adc
cli
add
adc
fiadds
adc
stc
add
adc
jmp
adc
cli
add
adc
loopne
adc
fiadds
adc
add
adc
and
adc
pop
add
adc
in
adc
and
adc
in
adc
add
adc
fildl
adc
fiadds
adc
cli
add
adc
add
adc
add
adc
add
adc
add
arpl
add
adc
lock
adc
add
adc
sbb
adc
int3
add
adc
sbb
adc
add
adc
add
adc
add
adc
add
sub
add
adc
add
adc
in
adc
add
adc
sub
jmp
mov
jmp
rcr
neg
xchg
mov
dec
shl
not
push
mov
bt
sub
pusha
test
call
lea
jbe
push
pushl
mov
jmp
sete
dec
lea
test
mov
rol
add
setns
mov
jo
pushf
movb
push
mov
pusha
push
movb
lea
jmp
mov
pushf
mov
push
mov
pushf
pushl
popl
jmp
sbb
mov
stc
add
jmp
movsbw
movsbw
xchg
call
jmp
push
mov
push
mov
pushl
pushl
mov
call
pusha
sbb
neg
mov
pusha
cmc
add
pushf
pushf
pushf
push
lea
jmp
pushl
popl
movb
lea
jmp
movl
pushf
lea
jmp
movb
dec
movb
push
movb
not
mov
jmp
pushf
popl
call
mov
movb
mov
pushf
popl
push
pusha
movb
jmp
push
movw
pushf
mov
pusha
push
call
lea
bswap
bswap
pushf
popl
movzbw
push
lea
mov
pusha
mov
lea
movzbw
push
mov
lea
call
pushf
popl
call
movsbw
mov
mov
call
mov
pushf
pushl
mov
call
push
mov
mov
pushf
mov
pushf
popl
pushf
push
pushf
pushl
popl
pushf
push
pushf
pushf
lea
jmp
pushf
push
pusha
mov
pusha
mov
call
mov
pushf
push
mov
jmp
pushf
mov
mov
pushf
movw
mov
lea
jmp
mov
mov
test
add
cmp
cmc
movb
shrd
movw
mov
mov
pusha
push
pushf
popl
movb
pusha
pushl
popl
movb
push
movb
pushf
lea
jmp
jmp
push
mov
pusha
pushf
popl
pusha
mov
mov
mov
jmp
jmp
mov
call
movl
pushl
mov
jmp
push
cmc
bsr
mov
jmp
lea
jne
mov
pusha
pusha
movb
push
lea
jmp
pushf
pushf
mov
call
mov
pusha
mov
push
pusha
lea
jne
push
pusha
movb
mov
pusha
call
and
pushf
call
jmp
pushf
mov
jmp
pusha
jmp
bt
bt
mov
cmp
push
bts
mov
pusha
bt
shl
mov
jmp
jmp
mov
mov
pushf
movb
pushf
movw
lea
jmp
btr
sub
dec
shrd
pushf
xor
and
rcr
sub
and
mov
xor
rcl
mov
clc
jmp
mov
lea
jo
pushf
mov
push
call
call
push
call
pop
add
rcr
mov
dec
push
jmp
mov
jmp
pusha
pusha
push
mov
jmp
mov
mov
call
push
movl
bsf
push
not
mov
push
dec
jmp
pushf
popl
jmp
movw
pushl
popl
call
call
adc
sub
not
mov
rol
mov
mov
test
jmp
movl
mov
pushl
pusha
lea
jmp
pushf
mov
pusha
lea
jmp
movsbw
bswap
sub
btr
rol
and
shrd
sub
movsbw
call
mov
pushf
push
mov
pushf
mov
jmp
pushl
popl
movw
mov
movl
mov
lea
jmp
jmp
movw
push
movl
pushf
pushl
push
pushf
lea
jmp
mov
push
pushl
push
movb
lea
jmp
add
push
call
bsr
bsf
mov
pusha
bsr
mov
pop
pushf
pushf
movl
pushl
popl
jmp
call
mov
push
mov
call
pusha
mov
pusha
movb
pushl
pushf
lea
jmp
pushf
mov
movl
pusha
pusha
pushf
pushl
lea
jmp
push
xchg
jmp
mov
mov
pushf
call
mov
pushf
pushf
pushf
popl
pushf
push
jmp
call
pushl
popl
pusha
call
mov
call
jmp
call
pushf
call
mov
sub
push
test
stc
clc
mov
mov
cmp
sub
movb
pushf
movw
jmp
bsf
sub
adc
btc
add
sbb
cmc
xor
cmc
mov
push
add
shrd
xor
not
inc
rcr
neg
jmp
pusha
rcl
mov
movb
pusha
add
jmp
mov
pushf
movl
pushf
lea
jmp
pushf
jmp
call
push
mov
movb
call
movzbw
movzww
stc
xchg
call
call
shrd
mov
shl
call
movb
pushl
jmp
setge
pusha
jmp
not
pusha
dec
pusha
lea
jmp
pushf
popl
jmp
call
shl
call
call
mov
movw
jmp
pusha
jmp
push
mov
call
pusha
neg
pusha
clc
test
jmp
movl
jmp
mov
call
call
jmp
mov
mov
push
movw
lea
jmp
sar
bsr
rcr
movzbw
mov
add
sub
seto
dec
mov
seto
dec
movsbw
rol
btr
rol
btc
shld
rcl
xor
bsf
sar
sub
rcr
btr
rcr
bsr
mov
clc
stc
push
jmp
pushf
mov
pushf
lea
jmp
inc
mov
xchg
pushl
popl
bswap
movl
lea
bsf
mov
bsr
not
call
mov
mov
jmp
pushl
popl
movb
jmp
call
mov
movb
jmp
pushf
mov
jmp
jmp
mov
pushf
jmp
bswap
mov
bswap
push
pusha
pushf
popl
push
pushf
pop
movsbw
mov
inc
xchg
xchg
pushf
xchg
bsr
mov
pop
xchg
xchg
call
bt
stc
jne
shrd
call
call
mov
pushf
call
mov
mov
push
pushf
call
lea
pop
sbb
sub
xor
not
sete
lea
movzbw
movzbl
push
jmp
jmp
pushf
pushf
pusha
mov
push
call
rol
clc
add
clc
test
sub
push
pushl
pushl
movl
mov
pusha
lea
jmp
not
cmc
and
jmp
pushf
popl
call
call
and
mov
neg
sar
add
mov
clc
pushf
sub
pusha
shl
pusha
mov
pushf
pushf
popl
movb
pushl
pushf
pushf
pushl
popl
movb
mov
movb
mov
lea
jmp
pushl
mov
pushf
jmp
jmp
sar
shld
cmc
mov
cmp
bswap
clc
cmc
pusha
lea
call
push
jmp
mov
mov
lea
jmp
mov
std
cld
pushf
jmp
pusha
pusha
pushl
mov
pushf
push
pushf
mov
lea
jmp
mov
pushf
not
pushf
dec
pushf
movb
pushf
lea
jmp
mov
call
ror
bsr
das
btc
notl
shrd
mov
jmp
pushf
movb
movb
mov
push
push
jmp
push
mov
pushf
pushf
popl
mov
pushl
popl
pushl
mov
pushl
pushl
lea
jmp
mov
jmp
movw
mov
jmp
rol
jmp
call
pushf
pushf
popl
call
mov
pusha
mov
mov
pushf
popl
movb
pushl
pushf
mov
push
jmp
mov
push
movl
mov
jmp
jno
pushf
pusha
movw
mov
push
jmp
pushl
popl
pushf
lea
jmp
jmp
test
cmc
add
jmp
movsbl
inc
bswap
pushl
popl
not
pushf
movzbw
bswap
movl
inc
bsr
mov
pushf
pushf
movw
dec
jmp
mov
movl
pushf
pushf
lea
jmp
push
call
jmp
pushl
popl
pushf
pushf
movw
lea
jmp
pushl
mov
push
pushf
jmp
mov
call
mov
push
mov
sub
cmp
test
bt
call
call
movsbl
call
mov
pusha
mov
jmp
push
call
call
pushf
stc
stc
cwtl
cmc
sub
cmp
clc
pusha
sub
jmp
cmp
add
movb
lea
jmp
pushf
push
pushl
popl
pusha
movw
movb
movl
pushf
mov
push
mov
lea
jmp
push
pusha
call
pushf
pushl
popl
call
mov
mov
dec
movw
mov
lea
jmp
movl
pushf
movb
pushl
lea
jmp
adc
sar
stc
mov
push
cmp
pusha
movw
sub
cmp
clc
pushf
stc
add
cmc
cmp
jmp
pushl
popl
movb
pushl
push
mov
lea
jmp
jmp
jmp
test
add
jmp
jmp
pushf
mov
call
pusha
mov
call
mov
jmp
ror
add
je
mov
test
jmp
sub
movsbw
call
pushf
push
mov
pushl
lea
jmp
push
mov
jmp
pusha
call
jmp
mov
jmp
lea
not
pushl
popl
bsr
movl
pushf
jmp
bsf
movl
movzbl
dec
push
mov
jmp
setge
mov
pushf
movsbw
movzbl
pop
mov
bswap
movsbw
pop
lea
mov
pushl
movb
push
pushl
ret
mov
push
jmp
pushf
mov
jmp
add
call
jmp
movzbw
mov
stc
clc
cmp
test
xchg
call
pushf
pushf
jmp
clc
add
call
mov
call
mov
mov
pushl
push
mov
call
mov
pushf
pushf
popl
pusha
pusha
pushf
call
jmp
xor
test
sub
call
jmp
stc
shl
call
pushl
mov
pushf
movb
mov
lea
jmp
pushf
pushf
pushl
popl
movw
lea
jmp
dec
stc
rol
mov
add
stc
jmp
pushl
popl
pushl
lea
jmp
mov
pushf
mov
call
pushl
xor
call
pushl
popl
mov
pushf
push
lea
jmp
cmp
shr
pushl
call
pushf
dec
pushl
mov
pusha
pushf
lea
jmp
pushl
popl
push
push
movw
movl
pushf
pushf
lea
jmp
call
pushf
fadds
push
movb
pushl
pusha
lea
jmp
pushf
pushl
popl
call
call
cmp
sub
pushf
cmp
pusha
cbtw
push
sub
clc
bt
cwtl
jmp
movsbw
movzbw
mov
stc
bt
add
pusha
lea
jmp
jmp
mov
call
jmp
shl
mov
cmp
sub
cmp
push
add
movb
movw
call
mov
pushf
pushf
lea
jmp
push
movb
jmp
mov
mov
call
pushf
pusha
call
call
movb
pushl
popl
call
pop
not
movsbw
xchg
pusha
mov
bswap
pushf
bswap
mov
setge
jmp
pushl
popl
bsr
bswap
movl
dec
dec
pushf
bsf
mov
call
mov
test
cmp
test
xchg
clc
add
pusha
clc
pushf
pusha
xor
mov
sub
jmp
movb
dec
lea
je
pusha
not
mov
jmp
mov
pushf
lea
jmp
push
pushf
mov
push
push
pushf
popl
movb
mov
movw
push
mov
mov
push
pushl
popl
jmp
push
mov
call
pushf
pushf
pusha
add
movb
cmp
movw
cmp
sub
jmp
push
call
push
call
call
pushf
pushf
pushl
mov
mov
pushf
pusha
push
pushf
popl
jmp
pushf
movl
push
movb
mov
lea
jmp
mov
movw
pushf
popl
movw
mov
call
mov
pusha
mov
pushf
pushf
popl
jmp
pusha
mov
call
push
push
mov
jmp
mov
mov
pushf
mov
pushl
pushf
call
mov
push
mov
call
pushf
add
pushf
lea
shld
sub
jne
not
and
neg
sbb
and
shl
or
mov
test
call
mov
call
mov
push
mov
call
jmp
jmp
mov
call
pushf
mov
pushf
lea
jmp
rdtsc
setle
mov
ror
mov
clc
pusha
test
stc
add
pushf
movb
movb
push
mov
push
mov
movb
lea
jmp
neg
clc
aad
shr
mov
shl
mov
cmc
sub
cmc
call
clc
bt
sub
pushl
mov
pushl
push
pushf
lea
jmp
movb
mov
push
lea
jmp
mov
call
pushf
popl
jmp
jp
popl
pusha
movw
lea
jmp
mov
push
jmp
call
mov
jmp
pusha
fstps
pushf
movb
movb
lea
jmp
dec
jmp
jmp
shl
sar
mov
mov
cmc
add
jae
pusha
pushf
mov
mov
mov
push
push
movb
lea
jmp
pop
movzbw
dec
bswap
btc
xor
stc
btc
btc
movzbl
btr
bts
rcl
movsbw
mov
bt
stc
rol
pusha
pushf
movw
add
call
pushl
not
jmp
pushf
popl
mov
jmp
jmp
sub
pushl
pushf
jmp
call
call
pushf
pushl
popl
pushf
movl
pushf
mov
movb
lea
jmp
lea
jne
pusha
pushf
popl
jmp
dec
pushf
pushf
mov
lea
jmp
pushf
pushl
mov
call
jmp
bt
xor
mov
neg
mov
cmc
sbb
or
mov
cmc
pusha
cmp
bt
sub
pusha
shr
mov
push
mov
pushf
jmp
mov
movb
mov
mov
call
pushl
popl
mov
movb
movb
lea
jmp
pusha
mov
neg
add
pushf
seta
movb
mov
push
call
jmp
pushl
stc
cwtl
bt
pusha
clc
sub
call
mov
movl
pushl
popl
pusha
movl
pushl
pusha
lea
jmp
push
pushl
popl
movw
jmp
pusha
pusha
mov
call
mov
push
movl
pushf
mov
lea
jmp
push
pushf
mov
pushf
call
pushf
mov
call
pusha
jmp
pushf
pushl
popl
pushf
pusha
movw
pushf
lea
jmp
xor
push
cmc
adc
test
lea
clc
bt
movsbw
and
xor
movsbl
movsbw
jmp
pushf
mov
pushf
jmp
push
jmp
call
call
call
movw
pushf
mov
jmp
mov
movb
pushl
mov
jmp
shl
adc
ror
test
mov
test
test
sub
pusha
pushf
dec
cmc
stc
pusha
call
bt
shl
pushf
aam
mov
neg
not
sub
adc
mov
cmc
cmc
pushl
sub
bt
pushl
pushl
call
pushl
popl
pushf
movl
jmp
pusha
movb
pushf
mov
pusha
lea
jmp
jmp
inc
pushf
pushf
push
lea
jmp
lea
ja
rcl
mov
movzbw
shld
or
rcl
lea
bts
call
pushf
popl
pushf
mov
pushl
popl
pushf
pusha
lea
jmp
pushf
pusha
mov
jmp
movb
jmp
call
push
mov
jmp
mov
call
sub
jmp
call
dec
push
not
jmp
call
aaa
lea
bt
push
pusha
cmp
pusha
mov
movb
lea
ja
inc
jmp
mov
push
pushf
not
call
mov
neg
shrd
lea
clc
pushf
clc
stc
cmp
call
pushl
popl
jmp
mov
call
movzbw
call
bt
shr
jmp
test
sub
bt
clc
ror
jmp
pushf
popl
call
popl
pushf
pusha
pushf
push
lea
jmp
mov
jmp
call
mov
push
push
lea
jmp
mov
push
jmp
pushf
mov
jmp
jmp
cmp
test
sub
bt
call
ror
test
pushf
add
call
push
pushl
popl
pushf
call
pushf
jmp
push
mov
mov
movzbl
pop
movsbl
pushl
popl
movzbl
movl
mov
mov
push
pushl
push
dec
jmp
mov
pushf
pusha
mov
jmp
bsf
xadd
xor
bsf
mov
adc
mov
pushf
add
movb
mov
mov
pushl
push
pusha
lea
jmp
jmp
mov
call
shld
mov
rcr
pusha
mov
push
sub
push
bt
shl
pushf
movb
pushf
pushf
mov
mov
pushf
popl
movb
pushl
popl
pushf
lea
jmp
bt
mov
adc
bt
mov
shr
and
dec
mov
push
call
jno
fadds
push
push
mov
pusha
lea
jmp
not
call
lea
pusha
dec
mov
not
bsf
lea
xchg
dec
shr
shr
stc
rcr
lea
rcl
sub
add
bts
mov
sub
mov
shld
rol
add
add
mov
bt
rol
test
xor
dec
inc
dec
neg
call
mov
pushf
pushf
mov
jmp
call
jmp
rol
jmp
mov
call
lea
mov
clc
add
pusha
pushf
popl
call
mov
movb
call
movb
dec
pushl
lea
jmp
sar
adc
mov
push
call
mov
pushf
mov
mov
push
pushf
mov
pusha
push
movw
pushf
pushf
popl
push
pushf
movb
mov
lea
jl
push
call
push
mov
pushf
lea
jmp
mov
pushf
mov
push
pusha
movb
pushf
lea
jmp
call
dec
pushl
movw
movw
mov
lea
jmp
sub
bt
xor
call
clc
stc
add
jnp
neg
cmp
bt
pushf
add
push
push
push
call
push
pushl
popl
pushf
mov
pushf
lea
jmp
call
movl
movb
pushl
pushf
lea
jmp
pushl
pushl
popl
mov
lea
jmp
movb
mov
pusha
mov
mov
call
push
mov
movb
mov
call
jmp
call
pushl
popl
movb
movl
mov
mov
pushf
movl
lea
jmp
pusha
mov
push
pushf
lea
jle
pusha
mov
jmp
push
lea
jbe
pushl
pushf
pusha
movl
mov
push
pusha
lea
jmp
mov
movw
pushf
movzbw
mov
call
mov
mov
pushf
lea
jmp
call
bswap
push
movl
movzbw
dec
mov
push
movl
dec
mov
mov
not
pushf
jmp
lea
mov
lea
jmp
neg
mov
shld
daa
lea
aad
sub
bswap
neg
das
aaa
lea
ror
and
bsf
inc
or
sub
not
not
jmp
push
mov
call
call
pushf
popl
pusha
mov
pushf
push
pushl
popl
push
mov
push
lea
jmp
pushl
popl
movb
push
pushf
lea
jmp
pushf
mov
pusha
pushl
lea
jmp
call
movb
sub
jmp
mov
pushf
mov
push
pushl
pusha
mov
pushf
mov
pushf
popl
push
call
bsf
pusha
bsr
inc
btc
btc
rol
ror
add
pusha
cmc
sub
pop
push
inc
pushl
and
lea
rcr
shrd
btc
mov
bt
mov
movb
add
pushf
pushf
mov
pushf
mov
lea
jmp
mov
mov
jmp
jmp
push
call
jmp
rol
mov
xor
ror
neg
call
pushf
mov
call
jmp
inc
sar
stc
mov
sbb
cmc
and
clc
mov
test
sub
jmp
call
pushf
call
jmp
pusha
lea
jae
pusha
mov
mov
lea
jmp
pushf
popl
jmp
push
pushf
popl
jmp
call
mov
call
mov
jmp
jmp
jmp
pushl
bt
add
cmc
bt
shrd
pushf
mov
call
pushl
popl
pushl
lea
jmp
mov
pushf
jmp
push
call
rcl
neg
dec
call
call
jmp
movzbw
pusha
mov
pushf
mov
call
bswap
mov
bswap
pushl
popl
lea
movsbw
bsr
movl
bsf
movsbw
bsf
mov
pushf
dec
movb
pushf
push
not
jmp
cmp
aas
neg
shr
lea
pushf
cmp
cmp
pusha
push
call
jmp
stc
shr
call
mov
pushl
popl
mov
jmp
mov
movb
call
jmp
jmp
mov
pushl
push
mov
pushf
lea
jmp
not
push
pushl
jmp
push
mov
jmp
mov
mov
movw
pushl
ret
mov
call
pushf
mov
movb
push
lea
jmp
pushl
popl
movb
movb
pushf
push
lea
jmp
movb
dec
clc
stc
add
jp
add
pushf
pusha
jmp
add
push
jmp
pushf
mov
mov
pushl
mov
pushf
mov
push
call
mov
pusha
call
pushl
popl
push
mov
movl
call
mov
mov
jmp
add
movl
pushf
push
mov
pushf
pushl
pusha
push
lea
jmp
sub
cmc
clc
mov
bt
and
mov
mov
pusha
pushf
call
movl
pushl
pushf
lea
jmp
cmp
mov
test
stc
call
btr
shl
setns
shr
mov
shld
call
push
call
push
cmc
add
mov
lea
jbe
mov
pusha
pushf
mov
pushf
lea
jmp
dec
mov
or
pusha
neg
test
mov
cmp
sub
jmp
mov
mov
call
not
setns
pusha
pusha
mov
push
call
pushf
neg
pusha
sar
mov
xor
test
mov
pusha
add
call
mov
jmp
test
aas
lahf
mov
clc
mov
bt
add
pusha
jmp
jmp
pushf
mov
call
pushl
popl
lea
lea
bswap
bswap
movl
dec
dec
mov
jmp
movl
push
lea
jmp
jmp
push
pushl
popl
mov
pushf
pushl
lea
jmp
mov
dec
movb
clc
test
add
jmp
mov
call
push
mov
push
push
mov
pushl
popl
push
pushf
lea
ja
pusha
movl
pusha
pushl
lea
jmp
mov
stc
add
pushf
pusha
mov
pushl
push
pushf
push
lea
jmp
push
mov
pushf
lea
jmp
xchg
lea
push
movzbw
push
mov
pusha
pop
pushl
pushf
popl
seto
mov
shld
xchg
add
btr
shrd
pushl
popl
cmp
ror
shrd
bts
movl
clc
pop
mov
mov
shrd
add
cmc
add
inc
cmc
neg
not
sar
bswap
rol
lea
bsr
shrd
sub
bt
mov
shrd
btr
jmp
aas
rcl
neg
pushf
mov
cmp
call
add
call
mov
jmp
or
dec
jmp
mov
stc
cmc
clc
add
jmp
dec
pusha
mov
rcl
dec
pop
setl
cwtl
pop
sbb
bsf
pop
movsbw
rdtsc
sar
inc
pop
and
bts
bsr
bsr
popf
xchg
not
not
movzbw
pop
pushf
mov
pop
call
mov
jmp
mov
pusha
xchg
pushf
call
aad
mov
bt
ror
mov
cmc
pusha
not
cmp
not
movb
jmp
movsbw
mov
jmp
not
clc
pusha
pusha
cmp
not
cmp
movb
call
push
jmp
pushl
popl
mov
pushf
lea
jmp
pushf
mov
call
jmp
mov
pushl
mov
call
pusha
dec
stc
bt
bt
cmp
add
push
mov
pushf
pushl
ret
not
test
pushf
and
movl
pushf
pushf
pushf
mov
pushf
pushf
pushf
pushf
popl
jmp
cmp
rcl
inc
mov
cmc
clc
pushf
cmc
sub
test
mov
xor
pusha
call
clc
xor
jmp
mov
movsbl
bsf
dec
push
mov
movsbw
pushf
mov
mov
bsr
push
push
pushl
popl
call
not
push
call
call
mov
pusha
push
mov
jmp
jmp
push
mov
movb
pushf
jmp
mov
mov
pushf
pushf
popl
pusha
mov
pushf
mov
bsr
inc
movsbw
bswap
mov
movzbw
mov
pushf
bsr
pushl
popl
dec
bsf
inc
movl
not
bsr
mov
call
mov
lea
jg
push
jmp
push
jmp
jmp
pushl
call
movb
pushf
popl
mov
mov
pushf
mov
jmp
movb
push
pushl
mov
mov
jmp
jmp
inc
bt
ror
movb
stc
xor
cmc
jmp
pushf
mov
call
mov
mov
btr
shld
mov
adc
or
shld
mov
jmp
mov
mov
movb
jmp
pusha
movb
mov
jmp
pushf
ror
cmp
call
movb
pushf
popl
jmp
jmp
neg
rcl
mov
cmp
add
jmp
pushf
call
call
movb
mov
pushf
jmp
pusha
mov
pushf
pushf
pushl
mov
lea
jmp
jmp
mov
call
pusha
mov
pushf
pushf
call
pushf
mov
pushf
pushf
pushl
push
mov
pushf
pusha
pushf
popl
pushf
push
pushf
push
mov
pushf
lea
jae
push
mov
push
bsr
bswap
push
bswap
lea
pushf
pushl
popl
dec
not
push
lea
mov
push
jmp
push
call
pushf
pushf
mov
pusha
pushf
popl
mov
jmp
movsbl
lea
inc
push
pushf
pushl
popl
mov
movsbw
bsf
push
mov
mov
pushf
pusha
pusha
pushl
dec
pushf
pushf
call
mov
pushf
mov
movb
pushf
popl
movl
push
mov
push
mov
call
lea
jo
pushf
pushf
popl
jmp
movb
mov
movb
mov
movb
jmp
mov
mov
push
pushl
pushl
popl
push
push
movl
mov
pushl
lea
jmp
mov
pushl
mov
pushl
popl
jmp
call
mov
movb
pushf
pushf
lea
jmp
pushl
jmp
dec
mov
inc
rcr
bts
rcr
lea
ror
and
clc
xor
sub
xor
add
and
setg
mov
test
sub
jmp
push
mov
mov
pushf
mov
push
mov
pushl
mov
movb
mov
pushf
call
movzbw
movw
movsbw
mov
bswap
not
pushf
mov
mov
pop
pushl
popl
push
movl
lea
lea
mov
mov
mov
dec
push
not
movb
movb
dec
push
mov
push
pushf
lea
jmp
mov
cwtl
bsr
mov
stc
std
mov
add
jnp
adc
pop
rol
pop
btr
rol
pop
xor
sub
cmp
cld
popf
call
mov
mov
push
bsr
dec
mov
bsf
mov
mov
movw
bsr
pushf
bswap
pushl
popl
inc
not
movl
push
mov
jmp
mov
push
call
pusha
pushl
popl
push
lea
jmp
call
stc
mov
xor
mov
pusha
pushf
add
clc
bt
shld
pushl
call
add
pushf
call
cmp
add
lea
jge
mov
pusha
lea
jmp
movl
pushl
lea
jmp
mov
call
push
pushf
popl
movb
pusha
push
jmp
test
cmp
add
jmp
pushl
push
mov
mov
pushf
push
pushl
ret
mov
push
mov
call
mov
pushl
pushf
mov
call
pushf
popl
push
jmp
pusha
mov
push
mov
jmp
push
pusha
jmp
pushf
dec
jmp
pushf
pusha
pushf
mov
call
mov
jmp
push
jmp
mov
call
pushf
popl
pushf
mov
push
pushf
mov
push
mov
call
movl
pushf
pushl
popl
push
movl
pushl
push
movl
mov
push
movw
lea
jmp
mov
push
pushl
movw
movb
lea
jmp
fadds
movw
lea
jmp
shl
dec
mov
pusha
jmp
mov
movsbw
mov
push
mov
mov
lea
pushl
popl
pop
not
pushf
movl
lea
mov
pushf
movb
dec
jmp
movb
movl
movb
lea
jmp
pushf
add
pushf
clc
lea
clc
neg
clc
add
mov
sub
cmc
bt
cbtw
call
jmp
shrd
mov
shr
jp
add
inc
mov
bswap
mov
xor
dec
setb
inc
jmp
das
push
js
jg
cld
push
test
mov
cs
popf
in
jp
mov
mov
idiv
fimuls
scas
shr
rolb
mov
inc
xchg
xchg
test
lcall
mov
repz
shr
or
test
mov
outsl
out
negl
enter
xchg
js
xchg
and
lcall
jae
cld
push
dec
push
call
stos
setns
out
divb
out
bound
push
add
dec
pop
or
sbb
scas
scas
jl
lods
aam
cmc
std
jae
push
dec
ret
out
je
push
jo
cmpsl
inc
or
stc
rorl
xchg
dec
push
sbb
and
jae
movsl
mov
push
jo
das
std
addl
jl
sarl
lahf
popf
sub
pushf
mov
pop
mov
inc
shlb
jb
in
fmuls
sub
add
loopne
and
test
popf
xchg
icebp
push
adc
inc
shl
inc
adc
in
xchg
push
inc
movsl
add
addb
mov
cwtl
adc
and
enter
roll
leave
adc
sbb
xor
xor
sbb
pop
fwait
fs
adc
rcrl
and
jae
mov
jnp
jno
insb
adc
imull
cmp
jecxz
insb
mov
mov
stos
nop
je
dec
mov
iret
adc
adc
sub
and
sub
in
and
or
and
mov
jmp
iret
out
jg
mov
cmpsb
xchg
ds
fcoml
dec
pop
pop
adc
mov
mov
adc
fisttpl
mov
jp
jae
out
faddl
inc
icebp
push
mov
adc
imul
sti
xchg
sub
fcomp
shlb
sysexit
inc
pushf
jmp
xchg
pop
repz
xor
mov
fsubrp
xor
pop
cmp
cmp
leave
dec
in
outsb
pushl
fisttps
call
pop
and
in
aam
inc
pop
ret
in
test
ret
jbe
jmp
sbb
xor
fs
and
jmp
pop
pop
add
test
call
jge
or
sbb
lahf
lahf
popf
fnsave
or
pop
jle
cmp
push
adc
je
inc
popa
mov
push
mov
pop
sahf
imul
inc
sub
stos
fwait
lods
jnp
jae
push
pushf
dec
mov
ja
aad
mov
fstps
and
push
movsl
mov
mov
push
xor
pop
stc
faddl
out
and
lret
pop
pushf
jp
das
adc
mov
pop
sub
and
and
lret
shl
shlb
dec
dec
jns
or
in
cmc
mov
mov
xchg
in
cmp
mov
mov
sbb
jbe
xchg
gs
out
or
cmp
loope
out
lret
movsl
mov
or
xchg
jbe
jns
lds
sbb
shlb
or
test
add
in
ret
call
mov
lods
xchg
sarb
mov
repz
push
popa
jb
aad
cmp
mov
ud2
dec
aaa
int
and
add
icebp
jno
das
jns
add
add
rcl
or
add
pop
popa
outsl
lock
loope
mov
jbe
jo
or
movsb
test
push
dec
xor
mov
cmp
jge
bound
sbb
stos
jge
scas
push
orb
xorb
daa
leave
ds
sbb
jnp
test
mov
dec
ret
sarl
rclb
pop
outsl
insb
cmp
dec
adc
daa
sarb
loop
mov
jmp
and
mov
add
push
imul
push
fst
jecxz
lret
and
mov
sarl
jae
mov
mov
popf
cmpsl
cmp
dec
mov
test
out
adc
mov
fidivs
push
rclb
std
adcb
ret
jae
icebp
pushf
outsl
insl
es
pushf
mov
pop
sbb
xlat
push
loop
fsubr
jge
sbb
xchg
test
inc
stos
and
aam
pop
rolb
shrl
adc
test
inc
sbb
dec
adc
and
cmpsb
hlt
mov
cltd
enter
cwtl
test
jmp
sbb
inc
xor
xor
lds
push
jl
sahf
xchg
cwtl
imulb
add
adc
jle
mov
xchg
inc
xchg
rorl
lahf
mov
inc
popa
mov
cwtl
dec
cs
jne
jae
out
rcrl
push
call
sahf
jecxz
fs
push
loop
lret
inc
sub
aad
mov
jmp
mov
insb
addb
mov
push
out
repz
mov
jmp
popa
sarl
sti
fnstcw
aad
test
addl
xor
adc
add
mov
mov
dec
mov
xchg
hlt
mov
inc
mov
add
popf
or
sbb
aam
sahf
mov
and
inc
fdivrs
inc
insb
mov
fldt
lea
jae
jnp
pusha
or
and
add
loopne
xchg
insl
fidivrs
inc
jmp
inc
adc
xor
test
int3
jbe
xchg
call
sahf
pop
repz
mov
negl
jmp
out
out
pop
out
in
sub
call
aam
xorb
pusha
and
arpl
enter
or
sti
out
push
push
and
adc
push
loope
cs
lahf
daa
dec
jecxz
cmc
mov
or
sub
pop
mov
push
add
pop
icebp
loop
test
sbb
sbb
popf
in
mov
xor
dec
mov
mov
out
out
xchg
cmc
xchg
pushf
mov
icebp
shl
sub
pop
adc
pop
pop
xor
adc
fbstp
pop
sbb
iret
sub
inc
jle
inc
call
pop
xor
int
fs
fwait
int
inc
aaa
vzeroall
insb
and
cli
jg
and
and
dec
xchg
mov
test
add
cmpsl
bound
push
dec
ds
mov
jg
xor
xchg
xchg
fld
xchg
out
mov
mov
mov
out
fdivp
sub
jp
push
jecxz
push
and
clc
dec
xor
dec
dec
cmp
dec
pop
adcb
jae
add
nop
in
sbb
mov
mov
xor
movsl
andb
lahf
pusha
int3
mov
and
mov
test
pop
sub
stos
rclb
or
push
es
test
adc
push
and
repz
lock
fs
lods
adc
aas
xor
lcall
pushf
pop
test
jns
inc
movsb
sbb
and
rcrb
add
sub
inc
jne
shll
addl
cmp
ss
add
leave
adc
push
sub
jmp
in
outsl
cmpsl
enter
and
jecxz
jns
jl
scas
test
mov
arpl
ffreep
mov
pop
mov
jns
repz
jnp
nop
cmp
xor
lret
push
cmpsb
stos
loopne
mov
mov
ds
fcoml
xchg
outsl
outsb
xchg
scas
insl
dec
outsl
mov
data16
ljmp
or
and
pop
sbb
insl
in
data16
shlb
test
push
xchg
mov
mov
mov
out
fwait
addr16
aas
outsl
sub
into
enter
imul
popa
imul
add
pushf
mov
jge
adc
mov
jecxz
dec
sahf
stos
push
jae
cwtl
xchg
dec
mov
or
sub
dec
inc
inc
inc
mov
aam
cmp
xor
jecxz
lcall
adc
and
push
outsb
pop
data16
xor
rcrb
cmpsl
xchg
mov
mov
mov
out
and
in
dec
jge
sub
xchg
mov
mov
imul
arpl
mov
jmp
fistps
mov
sub
cmpl
ljmp
fsubrl
push
stc
fsubrs
or
sub
pop
mov
je
aad
mov
lds
daa
mov
out
mov
push
stos
pop
rorb
lret
xor
pop
rcrb
sbb
and
or
add
xor
sub
pop
xchg
sub
in
or
nop
sub
jae
jno
jb
test
in
aad
dec
xor
cmpb
test
mov
fwait
and
sub
bound
ljmp
jg
popa
mull
push
fidivrl
inc
ja
sub
xchg
add
push
cmp
adc
test
repnz
pusha
mov
mov
cmpsb
mov
out
inc
outsb
pop
in
lahf
popf
scas
sbb
xorb
cld
pop
test
adc
sahf
scas
xorl
mov
stc
out
call
sub
lret
std
xchg
jb
in
push
dec
inc
xchg
or
jl
dec
inc
mov
xorb
test
mov
dec
inc
inc
dec
cli
xchg
mov
imul
and
adc
mov
add
in
or
pop
bound
mov
int3
or
test
sbb
mov
cmp
jae
movsl
mov
aaa
cmp
dec
daa
dec
jno
nop
aad
add
pop
jns
stc
dec
in
outsb
cmc
mov
outsl
out
dec
add
add
out
repz
sub
inc
pop
repnz
scas
loopne
popf
cmp
xlat
mov
clc
sbb
sbb
sbb
xor
movsb
insl
sbb
shll
daa
pop
ljmp
int3
nop
stc
jp
call
out
xchg
xchg
stos
xchg
sub
out
or
aam
xchg
int
push
mov
push
jmp
fdivs
inc
gs
lret
cmp
pop
cli
inc
mov
call
jl
mov
pop
enter
mov
cmp
adc
lret
mov
sub
inc
pushf
hlt
cmpsl
movsb
adc
push
jbe
sbb
mov
in
xor
ss
fdivl
testb
mov
cmp
pusha
or
es
nop
loope
push
into
mov
mov
sbb
xchg
jo
push
ds
fldt
push
sbb
in
and
push
cwtl
push
out
fstpt
push
lcall
push
jae
cmp
jo
add
test
jge
mov
add
lods
cltd
movb
mov
js
xchg
dec
adc
inc
jno
jae
repnz
push
call
popa
inc
add
insb
test
or
mov
add
fsts
adc
ret
dec
mov
cmp
outsl
dec
sarb
ss
dec
aam
push
sub
imul
in
xchg
sub
lods
inc
out
call
sahf
jns
push
dec
inc
insb
pop
add
dec
mov
hlt
repz
sub
pop
jl
sub
cmp
arpl
xchg
push
je
out
cli
mov
test
daa
loope
xchg
sub
xchg
fcmovnu
sub
and
cmp
mov
inc
test
lret
mov
jmp
iret
dec
mov
sub
out
icebp
or
mov
fwait
and
fwait
mov
jne
loope
jp
bound
cli
mov
fucomp
aam
cli
add
lods
rcl
pop
iret
int3
jnp
out
sub
dec
sub
cwtl
lods
pop
fildll
loopne
xchg
add
popf
sub
insb
or
mov
jmp
out
mov
je
sahf
mov
mov
int3
sbb
pop
mov
cwtl
ljmp
push
dec
sub
imul
test
mov
mov
lahf
mov
jno
adc
imul
jae
and
push
call
add
sbb
adcb
mov
or
dec
cmpb
cs
mov
fisubs
cmp
mov
loope
lcall
pop
bound
das
push
movsl
or
and
jne
inc
test
xlat
mov
test
mov
dec
mov
sub
mov
cltd
scas
inc
test
cmp
clc
jecxz
jecxz
in
std
adc
stos
addr16
test
or
loop
push
cmc
out
cmp
out
xor
push
rcl
das
add
sub
je
mov
xor
cmp
xchg
aad
mov
sub
nop
push
adc
mov
xchg
filds
lret
xchg
push
push
mov
and
testl
lcall
xchg
mov
mov
and
adc
dec
pop
inc
jae
icebp
dec
mov
fcoms
fsubrs
aad
dec
pop
fildll
mov
lea
xlat
xchg
mov
dec
lcall
imul
push
add
shl
pop
sarl
mov
rcll
push
scas
pop
lcall
and
lea
push
repnz
xchg
scas
inc
xchg
mov
inc
lret
rcl
xlat
adc
lds
pop
call
das
mov
sbb
je
mov
xor
xor
and
add
xor
pop
out
aad
push
add
ljmp
and
add
adc
sub
enter
lods
nop
cmp
mov
xor
les
scas
loop
and
and
and
lods
outsl
bound
movsl
mov
cmp
or
cs
aad
mov
out
cmc
es
mov
dec
test
pop
popf
jbe
xor
ds
repz
lock
out
aad
fisubrl
inc
in
outsb
stc
mov
imul
xchg
mov
call
inc
xlat
jmp
ds
fiaddl
addb
test
push
jno
sbb
adc
or
cmp
and
mov
inc
test
mov
jbe
mov
clc
jge
call
push
in
popf
or
xlat
cs
inc
add
cmp
inc
arpl
popa
in
stos
mov
cli
mov
or
sbb
or
mov
iret
imul
fiaddl
stos
sub
sbb
jb
add
movl
pop
fmull
out
push
inc
xchg
sahf
inc
lea
test
push
pop
insb
rorb
not
fiaddl
sbb
mov
jae
test
cmp
aad
sub
fwait
inc
orl
imul
adc
mov
out
sbb
pop
pop
push
jno
repz
inc
push
cmp
jecxz
stc
adc
test
lret
ds
xchg
inc
mov
ret
fidivrl
mov
loop
xchg
roll
in
mov
mov
fwait
pusha
nop
sahf
add
jbe
push
pop
jmp
enter
test
pop
lods
stc
mov
mov
bound
fistl
inc
jmp
inc
sub
mov
pop
mov
testb
out
sbb
sub
in
leave
repnz
jo,pt
inc
fwait
sahf
cltd
adc
push
fwait
inc
lret
mov
cmp
push
gs
lahf
in
xor
dec
jb
ljmp
ljmp
aas
sub
sbb
call
jbe
scas
mov
sub
dec
rol
aas
cmp
push
aaa
add
xor
out
xchg
xchg
mov
push
test
sbb
aad
mov
shll
rol
mov
into
out
or
rcrb
pop
bnd
lock
jnp
pushf
call
lret
in
clc
xchg
jl
dec
test
roll
or
aaa
dec
pop
test
adc
sub
jl
push
sub
cmc
ret
call
stc
out
call
inc
cld
xor
out
fisubrs
cmc
pop
push
popa
pop
rol
das
adc
pop
and
repz
push
and
push
fst
ljmp
inc
mov
int3
pusha
icebp
adc
pusha
lret
repz
cmc
sub
fidivs
nop
push
push
inc
sbb
xchg
outsl
divl
inc
sub
int3
les
pushf
mov
pop
aas
ss
mov
lods
popf
jge
dec
in
sbb
xchg
and
aam
pop
int3
add
loopne
and
sub
clc
int
push
ror
and
cmpsl
dec
xor
sub
xchg
push
mov
jne
mov
call
enter
faddl
in
stc
out
call
arpl
pusha
adc
std
mov
ret
jnp
icebp
and
leave
dec
dec
and
pushf
mov
pop
jle
xor
xchg
pop
lods
in
jge
fxam
add
dec
dec
xor
aam
push
les
in
sub
test
lds
xor
pop
cmp
xor
je
jne
in
xchg
push
data16
lods
jno
sub
push
fiaddl
push
test
rclb
int
add
or
push
repz
push
fistps
jmp
iret
aam
adc
insb
dec
je
sbb
cltd
pop
inc
adc
mov
cmpsl
pop
fnstenv
icebp
cmp
ds
sub
ss
imulb
xor
jnp
loopne
ficoml
decl
aas
sub
in
out
call
mov
xor
lret
inc
and
pop
inc
xchg
leave
dec
in
outsb
divl
lock
shll
and
mov
pop
inc
sarl
test
jge
xlat
ljmp
ret
pop
mov
pop
sbb
ficompl
dec
or
addr16
jne
jae
inc
js
pushf
and
cmp
js
cmp
xchg
sub
in
or
mov
hlt
shll
call
jbe
inc
gs
out
pop
xor
xchg
rcr
cmp
jb
jecxz
pop
jnp
jge
outsl
inc
mov
cmp
mov
mov
iretw
into
xor
rolb
and
cmp
sub
sarb
fnsave
cmc
popa
add
mov
dec
mov
movsb
cmpsl
in
mov
add
mov
mov
rcl
in
pop
mov
xchg
pop
es
ret
inc
js
ja
or
lods
dec
xor
out
and
test
cmp
xchg
rcl
imul
fiadds
cmp
aaa
out
lret
pop
popa
mov
test
insb
jb
cmp
dec
loop
rcll
loopne
add
dec
andb
cmp
fisttpl
jae
in
or
sahf
cld
pushl
mov
push
call
xor
repz
mov
mov
jecxz
push
mov
test
mov
ss
xor
cmp
outsb
or
movsl
lret
push
cli
les
push
rorb
aas
mov
or
stos
icebp
sbb
movsl
xchg
inc
dec
out
dec
xor
jo
and
aad
loope
dec
jl
dec
aam
js
mov
sub
daa
push
mov
add
rcrb
sbb
addr16
fsubl
and
dec
cld
push
mov
mov
xor
mov
jle
outsl
cmp
ss
movl
icebp
daa
clc
mov
add
jbe
nop
cmpsl
mov
ret
sarl
cs
stc
test
sahf
dec
push
call
pusha
adc
jmp
inc
push
inc
div
pop
mov
int
inc
or
jnp
dec
sbb
mov
repz
out
imul
xchg
dec
and
mov
inc
addr16
js
mov
cmp
rorl
jmp
shrl
rcr
leave
daa
mov
loop
movl
and
xor
or
inc
gs
mov
iret
pop
or
mov
loop
sbb
mov
pop
sbb
or
in
dec
ja
lret
fisubs
imul
outsl
dec
into
cmp
cltd
mov
je
sbb
jnp
fisubrl
bound
sbb
fbld
xchg
loop
addb
add
daa
shll
mov
div
iret
cmc
mov
xor
aam
mov
out
fisubrs
dec
mov
loope
popf
dec
test
sbb
adc
call
aad
xchg
outsb
push
sub
popa
cmp
in
ret
int
push
or
fwait
nop
push
pop
sub
jge
pop
pop
in
sub
mov
shlb
mov
add
dec
outsb
jnp
inc
xlat
mov
fcoms
std
clc
add
sahf
jbe
jle
jae
pop
inc
shrb
stc
out
call
mov
and
rcrb
mov
insl
fsubrs
and
jecxz
xor
mov
loop
xchg
popf
pop
push
mov
lods
adc
js
in
cwtl
icebp
ret
loopne
inc
push
iret
mov
push
repz
cs
fsts
cld
pop
lret
fisttpll
call
adc
scas
lahf
test
jns
imul
jno
aad
mov
into
push
call
push
sub
test
inc
movsb
push
in
add
xor
xor
dec
mov
push
mov
sbb
divl
mov
lea
jmp
xlat
cmp
or
andl
aad
and
jae
shl
stc
out
call
loop
lahf
stos
ret
and
idivl
xlat
es
jb
popf
or
bound
adc
push
dec
pop
scas
ljmp
arpl
test
insl
lcall
mov
je
sub
adc
push
js
loope,pt
and
add
sbb
inc
mov
cli
cld
and
cmpl
inc
sub
aad
adc
pop
dec
in
outsb
cmc
mov
push
or
repz
addr16
mov
xchg
dec
pop
loop
in
test
hlt
inc
fs
mov
leave
or
int
jl
stos
and
cmpsl
pop
sub
xchg
test
js
into
xchg
repz
cmp
clc
lods
cmp
in
or
popf
or
fiadds
pop
xchg
cmpl
call
mov
addr16
xor
daa
scas
incl
stos
mov
sbb
cmpsb
pushf
mov
repnz
imul
mov
je
jmp
lahf
mov
xchg
lcall
das
ret
inc
jecxz
jo
clc
repnz
xchg
mov
adc
cwtl
mov
es
push
fisttps
nop
movsb
in
idivb
mov
pop
push
push
shll
push
sbbb
or
mov
fisubrs
xor
jnp
stos
pop
jne
sbb
push
punpcklbw
jge
fidivs
mov
add
sbb
xchg
mov
mov
idivl
mov
mov
jg
cmp
shll
mov
fstp
bound
or
addr16
jae
jle
popa
xor
mov
xchg
mov
fistpl
dec
lret
fchs
into
pop
pop
shll
jno
mov
sahf
cmpl
popa
push
divb
xchg
dec
xchg
out
mov
aam
mov
fsubrp
or
out
call
sub
mov
shlb
dec
xor
stos
jae
mov
rclb
sbb
xchg
mov
sub
out
and
movsl
popa
push
mov
fidivs
and
sub
adc
push
movsl
adc
jmp
imul
add
add
cmp
stc
jb
orl
pop
nop
push
out
adc
jb
push
lret
das
xchg
jecxz
push
lahf
lods
mov
fstl
mulb
push
call
js
mov
and
cmpsl
out
mov
out
mov
xchg
pop
sub
inc
sub
sbb
dec
xchg
adc
add
mov
in
cmc
lcall
cltd
into
nop
xor
push
mov
or
idivl
jae
cmpb
sbb
cld
pop
sub
mov
xor
cmp
fimuls
fcompl
xchg
jae
adc
jg
xor
xor
pop
mov
in
dec
cmp
push
or
inc
orb
mov
loopne
out
call
inc
test
push
sub
test
jp
add
xor
js
imul
mov
lock
movsl
push
lret
mov
jo
and
sub
push
sbb
or
jecxz
lret
jmp
repz
jmp
orl
xchg
inc
mov
mov
jg
sub
push
mov
lret
jle
jle
loop
repnz
sub
sbb
jp
xchg
push
nop
adc
std
out
arpl
pop
ret
jb
ret
loop
shrb
sub
pushf
mov
pop
mov
xor
ja
dec
pop
jge
or
jno
dec
dec
das
and
aam
pop
les
out
and
test
xchg
add
pop
pop
xchg
inc
cmpsb
stc
add
xchg
push
imulb
cmp
les
rcl
ror
sbb
fildl
addr16
sub
into
ljmp
mov
pusha
adc
stos
mov
test
xor
not
icebp
xchg
in
and
jno
faddl
push
inc
jg
test
sti
movsb
cli
fnstsw
adc
sub
push
dec
push
icebp
inc
repz
and
jnp
mov
call
mov
hlt
and
or
cltd
je
or
xlat
mov
dec
nop
cld
lock
das
clc
cmp
mov
lds
jae
sbb
jg
jo
sti
std
popl
into
ret
jns
loop
enter
and
popa
pushf
mov
pop
jge
xor
sbb
mov
and
mov
add
loop
es
test
sahf
insl
xchg
jno
scas
mov
inc
xchg
lcall
movsb
push
pop
xchg
pop
orl
ror
jmp
sbb
dec
push
call
loop
inc
adc
pop
adc
mov
xchg
mov
sbb
test
dec
je
in
xor
ret
push
dec
std
and
es
cmp
mov
lahf
mov
xorb
loopne
aaa
mov
call
pop
dec
inc
cld
inc
pop
push
dec
xchg
inc
cmp
lods
stos
popf
ds
testl
sub
adc
push
jno
push
out
sub
aam
cwtl
bound
outsl
pop
push
mov
hlt
dec
sahf
sti
in
dec
adc
mov
fisubl
nop
cmp
mov
sti
jl
out
mov
cwtl
fwait
pushf
cltd
mov
sub
das
xchg
in
fstpt
stc
jmp
add
pop
dec
popl
movsl
enter
add
iret
sub
mov
push
addr16
or
sub
popf
adc
cwtl
lahf
movsb
mov
rolb
jae
adc
xchg
sub
mov
dec
mov
mov
cwtl
pusha
pop
loop
jg
mov
out
ret
fs
xor
out
mov
push
sbb
ja
fs
lds
icebp
fmul
leave
les
dec
sbb
or
pop
inc
push
add
cmc
mov
pop
bound
or
inc
inc
pop
repz
xchg
repnz
loopne
adc
rcr
sub
jae
xchg
mov
stc
out
call
data16
jns
cmp
rclb
xor
inc
inc
outsl
dec
fcomps
repz
jno
add
pop
mov
or
inc
jno
vandnps
adc
xlat
mov
mov
cmpsl
shlb
and
inc
jge
outsb
lahf
pushf
outsl
ficomps
sub
imul
mov
enter
je
cmp
movsb
das
cmc
inc
bound
mov
xchg
js
daa
fwait
and
push
pop
mov
push
test
repnz
pop
sub
xor
dec
jne
sbb
xor
aaa
push
call
sbb
jne
cmpsb
aad
out
jecxz
mov
cmp
push
jb
jnp
mov
cmp
jb
ja
mov
bound
adc
mov
lret
sbb
xchg
adc
jae
jge
ja
pop
test
cwtl
jge
inc
cld
or
and
and
push
cmp
call
repz
iret
adc
sub
sub
insb
fwait
sub
add
pop
jnp
cmc
icebp
repnz
fmuls
test
mov
mov
adc
adc
ficomps
xor
add
sub
testb
rcr
cmp
sub
jae
mov
int3
repnz
pop
push
inc
mov
ds
scas
aad
mov
pop
push
mov
roll
ss
mov
fadds
sub
sbb
rorl
arpl
xchg
mov
sbb
jecxz
cltd
ja
lds
testb
mov
std
cmc
notl
movsb
testb
mov
xchg
cwtl
sub
push
mov
xlat
aaa
sbb
lods
mov
dec
push
push
in
lahf
mov
movsl
mov
js
je
ja
dec
sbb
pop
sahf
dec
inc
dec
pushl
xor
pop
jne
ds
cli
test
or
sub
push
jno
jl
cli
jo
sbb
rclb
imul
jecxz
or
daa
sub
sahf
test
jae
lea
add
sub
mov
ss
pusha
shlb
xchg
jl
adc
mov
mov
xor
popf
pusha
xor
pop
call
in
jmp
mov
push
xor
cmpsb
mov
add
jns
jo
orb
sub
pop
mov
inc
push
cmp
xchg
sub
push
shll
bound
and
xchg
xchg
out
or
shlb
inc
push
call
sbb
arpl
stc
out
call
pushf
push
loopne
std
addb
sbb
dec
sahf
xchg
mov
inc
pushf
mov
pop
sti
ss
loope
dec
fnstsw
or
add
dec
dec
and
aam
push
lds
jecxz
sub
test
and
add
push
inc
xchg
ret
shr
xchg
push
xchg
ds
pop
push
enter
roll
shll
loopne
cmc
mov
shl
andb
sub
xchg
sti
jnp
or
pop
dec
lret
cmp
sub
js
xchg
mov
cmp
or
jo
movsb
das
sti
inc
mov
dec
jne
dec
test
pushf
mov
ljmp
pop
cltd
ja
fcmovb
jb
ds
test
push
inc
test
mov
test
fmuls
ror
orl
cmpsl
sbb
mov
scas
nop
sub
xor
aad
pop
jne
xchg
xor
mov
adc
jno
push
lahf
sub
cmp
pop
dec
lret
aaa
mov
test
sub
dec
pop
stos
xchg
dec
mov
mov
pop
jg
in
jbe
fst
xlat
pusha
or
add
mov
ljmp
dec
addb
bound
test
mov
lds
add
movsl
arpl
gs
mov
orb
mov
xor
mov
aad
aaa
out
pop
insb
bound
jnp
ds
mov
icebp
mov
js
orl
adc
lahf
leave
clc
push
in
push
fwait
not
dec
jg
mov
push
iret
sub
or
aas
xor
aas
cltd
in
mov
mov
xor
dec
xor
sub
dec
ds
loopne
xchg
pop
fiaddl
mov
addr16
pop
popf
subb
jecxz
faddl
lods
sahf
dec
xchg
push
mov
leave
jbe
cld
das
sub
sub
pusha
xchg
xchg
dec
in
sbb
aas
ljmp
cmpsl
xchg
jbe
mov
add
out
out
mov
jle
inc
push
addr16
and
push
addr16
mov
pop
mov
jo
sub
pop
sbb
xor
sbb
std
lea
jle
mov
out
enter
and
pop
inc
ss
adc
mov
in
fmuls
mov
push
lret
add
in
adc
test
into
loopne
jl
and
xchg
inc
xchg
in
xchg
push
mulb
cmp
mov
jmp
pop
fmull
addr16
pop
call
push
inc
int
mov
aas
adc
mov
sub
test
sbb
push
jns
push
outsl
fwait
xchg
add
gs
cmp
mov
jae
sub
jge
in
enter
fisubrs
insb
jmp
and
jnp
and
es
out
into
and
daa
fwait
sbb
shr
into
leave
adc
add
clc
mov
xor
push
add
sbbl
out
inc
jb
mov
or
or
cmp
popw
xchg
cmpsb
mov
cmp
dec
pushw
adc
push
sub
and
add
out
push
or
movsb
jo
xchg
sbb
int3
mov
cs
pop
mov
dec
and
lea
pusha
jge
sub
sub
popa
xchg
mov
add
pusha
inc
jns
or
mov
push
inc
dec
mov
in
sar
push
mov
push
fs
rclb
jg
popl
xchg
push
mov
ret
js
in
mov
sub
mov
pop
out
ss
gs
sbb
jge
mov
popa
or
xlat
and
aam
pop
ret
loope
daa
adc
test
mov
roll
jmp
inc
push
sbb
test
add
mov
pop
popf
mov
cld
sbb
dec
push
ja
dec
mov
daa
pop
rorb
ljmp
jg
popf
or
ret
dec
cmpsl
or
js
sub
mov
mov
xor
or
xor
or
fsubrl
stc
stc
out
call
sub
loope
out
call
mov
jnp
int3
call
mov
stc
out
call
in
lock
loope
xor
xor
test
xchg
push
insl
add
sti
hlt
enter
and
pushf
mov
pop
push
ss
adc
mov
in
sbb
inc
and
aam
pop
into
add
in
adc
test
fisttpl
pusha
add
push
hlt
inc
out
ret
in
xchg
push
cmpsb
stos
je
fcoml
js
xchg
dec
push
enter
dec
ret
mov
jmp
ljmp
jmp
sub
cld
pop
and
insl
mov
pop
insl
mov
add
mov
inc
xchg
mov
jne
cld
mov
in
aad
sub
mov
mov
dec
ror
popf
pop
xchg
dec
dec
mov
xor
cmp
and
xor
ss
pusha
sbb
mov
repnz
cmp
hlt
mov
cltd
bound
sub
xchg
pushf
stos
push
mov
mov
or
xor
adc
or
cmp
inc
daa
mov
jmp
aad
push
mov
inc
in
outsb
divb
gs
pusha
or
repz
push
aam
inc
pop
repnz
pop
jp
mov
fs
sbb
xor
xor
sbb
or
pop
test
sub
lahf
daa
jbe
test
js
cmp
sub
jecxz
or
sub
adc
mov
mov
or
movsb
test
je
inc
addr16
jl
adc
mov
push
aaa
dec
pop
and
jb
jl
add
popf
test
inc
mov
mov
inc
sarb
cmp
mov
popf
jl
add
or
leave
int
adc
jg
xor
shrl
add
jbe
hlt
repnz
fmull
dec
mov
and
mov
repnz
mov
mov
jo
sbb
std
decb
jl
hlt
cltd
xlat
fnstsw
mov
iret
testl
dec
imul
and
xchg
ja
sbb
aas
add
cwtl
inc
inc
xchg
pop
mul
test
icebp
repnz
rol
mov
je
dec
out
sub
xor
and
clc
xchg
lock
jae
inc
out
repz
mov
cld
sbb
dec
orb
cmp
inc
mov
mov
mov
out
mov
insb
hlt
je
popf
jge
out
mov
fdivl
jecxz
and
sub
lea
ficoml
xchg
addb
jmp
mov
pop
lahf
nop
or
addr16
sub
xchg
imul
inc
das
mov
loope
test
aaa
adc
inc
dec
pop
xchg
xchg
pop
push
popa
pop
popa
xchg
pop
out
push
aad
leave
int
rcr
push
rcll
and
gs
loop
testb
adc
push
jno
sub
ss
push
xchg
fwait
sub
vpunpcklbw
cwtl
xchg
outsb
push
mov
lcall
outsb
loopne
mov
into
push
mov
cmp
mov
jecxz
jbe
repz
mov
xor
cltd
inc
push
xor
xlat
mov
xchg
es
stc
xchg
jne
jmp
mov
jecxz
dec
sbb
in
sub
cmp
inc
xor
pop
mov
into
out
rclb
lret
dec
daa
out
loope
aad
xor
xchg
jns
jns
in
outsb
cld
mov
xchg
jbe
and
or
repz
mov
pop
shlb
lret
xlat
enter
shrl
lret
or
mov
and
push
negl
fs
xchg
mov
mov
pushf
lock
pop
lock
xchg
xchg
cli
mov
or
popf
or
xchg
in
xchg
cmp
add
movsb
jb
jmp
or
inc
fs
out
add
outsb
es
daa
scas
mov
mov
add
add
movsl
and
inc
fidivrs
sbb
hlt
and
pop
push
sub
jp
pop
into
inc
idivb
orb
sub
pop
movsb
xchg
mov
int
xor
cmpsl
xchg
lock
fdivs
dec
mov
jge
mov
lret
jmp
pop
test
sti
repnz
in
ret
push
xchg
test
stos
mov
imulb
mov
push
dec
outsw
sub
mov
out
push
cmp
movsb
outsl
test
or
xchg
mov
push
sbbl
arpl
ljmp
rorl
cmp
rorb
jge
fwait
clc
add
and
test
cmp
jge
imul
jo
push
xchg
jo
pop
mov
imul
ret
and
out
popa
mov
add
push
mov
add
adc
adc
repnz
dec
sub
loop
cmp
das
mulb
mov
and
icebp
adc
in
in
testb
sub
mov
mov
lods
sbb
dec
test
das
lret
das
imulb
out
adc
jne
popa
xchg
jns
andl
push
xchg
pop
mov
adc
hlt
daa
aam
lock
movups
sub
mov
inc
mov
jo
xchg
fwait
or
nop
push
gs
xchg
pushf
or
test
movsb
outsl
lahf
and
repnz
cmp
clc
sahf
xchg
xchg
xchg
xchg
pop
movsb
jnp
lcall
jno
or
je
lcall
mov
push
jl
cmp
insb
dec
and
xor
add
sbb
loope
jg
inc
nop
in
ret
test
fildll
adc
mov
mov
lret
mov
jnp
jg
addb
lcall
fistpll
mov
addr16
ret
fwait
call
and
stc
out
call
mov
cmp
stos
out
out
call
pop
jbe
outsl
xchg
jae
jg
daa
ljmp
popf
or
jge
xorl
scas
arpl
sub
pavgb
xor
rcrl
icebp
xor
ds
dec
test
sub
paddd
xor
pop
pushf
rcr
and
mov
test
xchg
scas
mov
out
inc
loopne
push
imul
xchg
or
lcall
jmp
fs
aas
aad
mov
int
repnz
mov
sub
in
inc
mov
cwtl
mov
icebp
cmp
andl
std
mov
lret
dec
fisubrs
inc
adc
adc
jbe
js
sbb
xchg
mov
push
xor
nop
jecxz
dec
pop
push
dec
cmp
sti
ret
ret
jle
out
cltd
mov
sbb
xor
xor
test
jge
sarb
mov
icebp
inc
sub
pop
adc
leave
aas
pop
push
rcrl
pop
pop
mov
outsl
or
mov
push
icebp
push
mov
pop
inc
xchg
mov
lret
test
dec
int
mov
dec
cmc
pop
mov
std
inc
lcall
shl
bound
mov
bnd
cmp
inc
das
push
dec
out
loopne
push
aam
pushf
jns
mov
outsb
sti
mov
outsb
pop
adc
and
repz
imul
pop
ret
loope
in
inc
mov
andb
cmp
mov
sbb
xor
in
sbb
rorl
dec
or
pop
sbb
mov
cli
mov
lret
xchg
gs
cwtl
lock
pop
lahf
xchg
push
sub
jmp
add
stos
mov
add
movsb
dec
jp
ror
jbe
inc
arpl
scas
out
call
mov
aam
mov
sbb
and
adc
jl
inc
xchg
bound
dec
jp
sbbb
pop
sbb
lret
orl
sub
jne
inc
cli
ret
push
daa
cli
ret
daa
rolb
das
in
push
test
inc
mov
sub
adc
or
mov
cmp
dec
sub
cmp
push
aad
push
scas
push
jns
mov
outsb
stc
mov
imul
ss
pop
in
repz
and
mov
ret
call
mov
cs
ljmp
lds
pop
adc
or
rcpps
xchg
add
or
call
popf
push
movsl
sub
out
popf
or
mov
jge
jecxz
loope
add
jg
inc
imul
sbb
jecxz,pt
lret
push
mov
cmp
add
push
xchg
js
xor
fsubr
push
leave
add
jne
iret
clc
adc
mov
add
cs
mov
das
or
mov
mull
stos
mov
mov
rorl
jecxz
mov
pusha
cmpsl
sub
adc
jnp
call
gs
push
nop
pop
mov
mov
dec
fwait
test
out
add
dec
rcll
leave
lock
mov
sbb
add
push
mov
xchg
push
cwtl
arpl
sub
adc
and
push
call
into
loopne
inc
push
insl
pop
and
pop
sti
aam
mov
inc
iret
daa
and
outsl
sub
ret
lods
sarb
movsl
jecxz
cmc
fadd
cmp
fnstcw
push
sbb
fsubr
xchg
mov
popf
scas
pusha
adc
lods
sarb
jmp
adc
mov
sub
fs
call
out
cs
add
xlat
push
ret
push
mov
out
push
inc
jb
xor
sub
test
mov
jecxz
frstor
jmp
arpl
cmc
adc
movsb
sbb
sbb
mov
in
sub
mov
mov
or
in
repz
int
cmp
outsb
mov
popf
icebp
push
inc
je
sarb
lcall
dec
adc
xchg
dec
or
call
movsb
sbb
out
or
push
sub
rclb
lea
add
cmp
sub
and
js
call
sbb
pop
lock
clc
daa
cwtl
jae
push
mov
adc
dec
mov
mov
xchg
scas
dec
pop
push
adc
repnz
cmp
and
insb
inc
dec
jle
and
push
imul
push
push
sub
push
arpl
into
jle
and
jl
loope
and
adc
inc
sub
movsb
popa
fidivrs
fsubr
xlat
testl
repz
adc
out
adc
cmc
mov
dec
and
loope
or
fists
lods
movsw
dec
mov
or
cmp
sub
adc
addb
cmp
cmp
mov
jb
int3
test
xor
mov
xor
mov
stc
cmpsb
xorl
bound
mov
enter
lret
lock
xchg
xlat
lret
popl
jge
push
mov
movb
stc
out
call
cli
cwtl
xor
mov
and
add
adc
daa
and
sbbb
push
sbb
sbb
hlt
sbb
das
sub
adc
insb
lahf
dec
repz
adc
adc
push
mov
enter
dec
add
pushl
sarl
decb
in
icebp
mov
rcl
sub
lcall
jb
adc
jl
sbb
jmp
jle
mov
xor
stos
inc
jnp
inc
sub
fdivrl
lds
cwtl
rcr
fnstcw
inc
bound
jnp
rclb
je
mov
jo
pop
scas
lcall
sahf
faddp
enter
imul
aas
test
lock
adc
cmp
lods
fstpl
lock
fst
inc
loop
dec
push
fcomps
cs
movsb
lods
loop
push
lock
icebp
inc
jbe
outsb
inc
stos
movsl
mov
movsl
and
or
notl
gs
push
jns
mov
sbb
pop
jecxz
push
dec
gs
mov
andb
pusha
rorl
jae
pusha
inc
dec
xchg
insl
pop
and
xchg
daa
sar
jle
stos
push
lods
lea
cmpsb
xchg
test
adc
pop
negb
shlb
jno
rorl
pop
add
aas
jmp
or
mov
jae
pop
movsb
xchg
sub
xor
adc
xchg
jecxz
je
add
pushf
daa
xchg
pop
dec
add
mov
sub
lods
mov
and
dec
mov
jecxz
outsb
mov
dec
ja
clc
mov
adc
xchg
mov
in
sub
out
fsubrl
es
push
push
loope
jge
mov
sbb
in
aad
xchg
xor
fdivrp
sahf
lock
dec
icebp
mov
jo
ret
sbb
test
icebp
pop
stc
cmp
mov
xchg
sub
cld
add
dec
mov
adc
dec
mov
out
mov
jne
xor
dec
sti
in
aaa
mov
mov
test
gs
inc
int3
jnp
push
incl
cmp
xchg
adc
mov
adc
iret
adc
in
cmpsb
loop
or
sti
outsb
in
pop
out
add
inc
out
sbb
adc
or
inc
push
push
sub
xor
popa
mov
inc
pop
xor
sbb
out
add
pop
lahf
sub
add
xor
test
jmp
mov
fld
dec
jne
sub
mov
mov
clc
push
xor
jge
loopne
jle
cmc
add
or
mov
sbb
test
jecxz
dec
stos
push
fcoms
jle
jae
jecxz
out
push
call
jmp
mul
stc
out
call
mov
push
jg
in
mov
cs
dec
into
in
test
mov
test
mov
xor
outsb
push
mov
mov
pop
iret
cmp
ds
ret
inc
sub
xor
pop
shll
nop
sub
fistps
push
jge
and
jp
aaa
jne
sbb
sub
in
push
pop
jge
ret
xchg
cmc
es
iret
dec
ds
bound
push
cs
xchg
scas
insb
mov
int
jmp
mov
in
xchg
les
xor
push
jno
out
pop
es
mov
fists
pop
negb
sub
add
mov
xchg
jb
mov
ret
fldl
push
movsl
inc
std
cmp
add
roll
pop
dec
insb
mov
push
xchg
test
pop
outsl
xchg
jmp
add
sbb
mov
push
xchg
mov
les
jae
mov
cmp
xor
lea
jp
sbb
inc
or
mov
sbb
sbb
movsb
stos
insl
xlat
outsl
inc
mov
cmpsl
cmpl
and
inc
mov
inc
shlb
xor
fidivrs
sub
aas
xor
outsl
lods
adc
mov
xor
std
out
nop
movsb
jno
pop
sbb
lock
je
jo
dec
shll
rcr
xchg
add
pushl
jl
mov
fisubrl
jne
out
push
into
inc
mov
out
dec
fistpll
push
jno
inc
pop
xlat
inc
and
js
sub
cmp
fisttps
movsb
push
in
or
in
mov
repz
roll
dec
in
clc
outsb
or
dec
daa
mov
inc
mov
rorb
mov
sub
and
push
les
and
pop
imulb
cltd
push
mov
test
mov
into
dec
fdivrl
push
xor
sub
xchg
pop
bound
lcall
dec
mov
or
add
sbb
add
fimuls
add
inc
fidivrl
imul
outsl
or
rcll
dec
sub
and
cld
pop
mov
aad
xchg
mov
sahf
xor
cmp
sbb
insb
add
cmp
add
pop
cmp
popa
sub
pop
mov
jle
dec
faddl
mov
dec
sub
or
adc
andl
and
and
push
cli
js
mov
das
lods
and
pop
mov
lods
jns
outsb
or
sbb
mov
mov
cmpsb
shll
jmp
xchg
outsb
cld
fwait
jbe
add
rcrb
test
mov
daa
shll
push
jecxz
push
in
out
cltd
push
repnz
bnd
je
and
outsl
lcall
xchg
cmc
add
jbe
je
out
pop
roll
mov
jmp
and
or
jmp
in
je
xor
mov
pop
lret
pop
ds
xchg
adc
mov
mov
mov
mov
pop
lds
iret
dec
mov
out
mov
jle
arpl
divb
pop
and
xor
pop
ficomps
stos
pop
mov
in
bound
leave
test
mov
pop
repnz
fs
stc
jb
xchg
mov
std
or
les
cmpsb
push
mov
or
adc
or
addr16
lods
lret
inc
lock
mov
dec
mov
call
jns
jmp
stos
cmp
mov
divb
jo
loop
fmull
mov
sbb
in
bound
xlat
mov
lods
xchg
push
pushf
sti
push
cld
push
leave
pop
cmp
and
imul
jl
sub
xchg
add
pop
push
inc
and
ss
dec
mov
pop
clc
in
lock
bound
cmp
iret
pop
cmp
and
stos
cmp
inc
and
lret
inc
mov
mov
dec
lods
dec
rcll
xor
dec
adc
inc
loop
jecxz
jne
cmp
addr16
out
jno
pop
enter
popa
sbb
jle
jge
negl
and
cmpsb
aam
shll
pop
bound
cmp
jno
les
int3
xadd
test
mov
aam
dec
inc
and
ss
ret
ret
jno
xorb
scas
aas
pop
test
decl
loop
pop
xchg
repnz
enter
dec
mov
js
mov
inc
les
int3
sbb
mov
jle
jle
lret
lret
es
movsb
cmp
dec
add
ja
mull
icebp
or
sbb
movsl
xor
cmp
inc
shll
sbb
aas
adc
push
les
mov
sbb
imul
jno
xorb
lea
dec
fistpll
inc
es
cmpsl
cmp
jmp
cwtl
fwait
or
popf
or
or
in
fstl
xchg
add
jp
lods
lret
inc
scas
adc
aas
mov
mov
mov
popf
or
loop
pop
loop
cmp
imul
adc
add
cli
stos
and
inc
xlat
mov
call
jl
cmp
ljmp
inc
mov
neg
dec
ret
std
pusha
pop
repnz
cmp
pop
int3
inc
and
dec
das
fidivl
or
ja
xorb
outsl
lcall
lret
mov
aam
sub
les
scas
pop
fnstsw
adc
incw
addr16
sbb
mov
es
lods
cmp
adc
mov
js
pop
out
icebp
nop
arpl
jl
cwtl
push
imul
add
xor
mov
xchg
repz
test
out
loope
jecxz
jne
pop
xlat
inc
and
js
push
xchg
repz
mov
dec
loopne
and
sbb
fistl
cmpsb
push
loope
sub
mov
js
adcl
jecxz
mov
or
lret
mov
mov
les
pop
xchg
jb
or
mov
les
mov
mov
lret
imul
push
xchg
adc
push
shlb
insb
lahf
push
mov
imul
imul
out
jo
and
push
fisttpll
out
aam
into
test
aaa
push
mov
dec
mov
out
mov
repnz
or
insl
stc
imul
stos
into
cmp
out
movsb
push
ret
ret
sub
lds
dec
xlat
inc
and
cmp
shrb
push
shll
xor
dec
loope
in
mov
and
pop
mov
mov
sbb
fdivl
in
push
rolb
shrb
sbb
sbb
add
sub
addr16
bound
test
pop
stc
inc
roll
aad
dec
rclb
idivl
mov
inc
int3
inc
and
inc
daa
shlb
adcl
cmp
pop
into
pop
cmp
movsb
cmp
arpl
xchg
rorl
sahf
or
cmpsb
punpcklwd
imul
dec
mov
mov
and
fwait
pop
cmpsl
cmp
mov
cmpsb
jmp
pushf
outsl
xchg
int3
mov
mov
sbb
dec
mov
xorb
jmp
stos
sub
lock
bound
pop
jmp
jge
je
push
jns
mov
or
rcrl
test
stos
rorb
dec
stos
enter
inc
movsb
jmp
clc
jbe
cmpl
rclb
adc
mov
test
lahf
cli
or
xchg
daa
mov
mov
sbb
out
loope
out
jo
fimull
push
out
push
ret
cmpsb
push
cli
lods
aas
scas
lret
or
punpckhdq
mov
xor
clc
lahf
push
into
push
les
clc
lahf
push
dec
aad
sub
pop
popa
insb
or
xorl
inc
les
int3
and
push
lds
add
sbb
pop
ljmp
inc
rolb
mov
xchg
jp
add
stos
cmp
dec
jae
imul
and
inc
mov
lods
lret
inc
loope
jne
mov
out
lock
bound
push
icebp
mov
xchg
insb
loop
je
mov
mov
and
dec
in
fimull
fisubrl
or
ljmp
icebp
nop
arpl
rep
lcall
jb
in
fwait
add
xchg
add
jp
stos
cmp
sub
or
sub
jne
mov
mov
scas
dec
int
and
xor
or
movsb
and
js
mov
push
adcl
push
stos
and
push
mov
cmp
pop
lods
and
mov
or
dec
aad
into
test
adc
aaa
out
ljmp
clc
or
negb
mov
dec
fmuls
fsubrs
into
pop
cmp
jno
inc
shll
in
jle
dec
fisttpl
fnsave
lods
cmp
pop
int
loopw
daa
mov
and
push
iret
gs
adc
push
addl
adc
pop
fmuls
fsubs
xchg
adc
popa
icebp
nop
arpl
out
iret
dec
fstpt
xchg
repz
in
test
mov
and
mov
test
cmp
fcoms
mov
dec
fisttpll
jne
outsl
or
lds
imul
pop
out
adcl
test
lret
adc
aam
fstpt
mov
iret
pop
cmp
jle
cmp
lret
pop
int3
stos
rcl
fdivrl
adc
arpl
ljmp
sti
imul
insl
in
int
shlb
jne
dec
sub
cmp
inc
les
int3
sub
in
fcompl
test
mov
mov
pop
fisttpll
out
push
fldt
orb
cli
or
cmp
pop
push
fdivl
in
lcall
fimuls
xor
jge
divl
lock
test
scas
cmp
mov
jns
js
ljmp
sub
dec
ret
std
xchg
add
pop
lret
lret
jge
je
xor
push
mov
rcrl
pop
mov
lahf
ja
icebp
popa
add
sbb
inc
and
push
and
addl
repnz
or
in
cld
or
and
cmp
dec
int3
dec
fdivrs
in
jle
jo
push
cld
or
inc
and
xor
pushl
jl
lods
sub
aam
sub
cmpsl
ret
pop
aam
sub
jge
divl
lcall
add
std
or
ja
jp
in
inc
int
repz
rolb
mov
mov
bound
sub
or
add
out
jg
jmp
and
hlt
xchg
outsb
test
push
les
aam
mov
out
imul
xchg
test
xchg
repz
out
xchg
pop
bound
xor
sub
sub
cmp
jle
adc
mov
dec
mov
xchg
fs
orl
stc
or
inc
into
pop
cmp
xor
jne
mov
push
cmp
jecxz
mov
dec
mov
cmpsb
push
in
out
jl
negb
mov
jle
cmp
push
lds
leave
cmp
pop
mov
shlb
lcall
mov
subb
or
into
test
push
jno
push
inc
les
sub
pop
int3
dec
fdivrl
mov
and
rolb
inc
test
outsb
cld
fwait
jbe
jnp
xchg
testb
add
lea
lahf
cli
or
mov
movsl
int3
aas
aad
jns
mov
fists
pop
mov
repnz
popl
xchg
repz
std
pop
xlat
inc
and
js
xor
ljmp
push
xor
data16
jle
call
mov
out
in
sbb
sti
sahf
insl
ret
enter
adcl
repz
pushf
outsl
fcmovb
push
shll
push
mov
xchg
gs
movsb
cs
dec
mov
inc
mov
and
cmp
fists
insb
loop
je
or
icebp
jo
xorl
xor
jnp
xchg
cmc
add
test
movb
aaa
ret
int3
inc
and
inc
and
cmp
jmp
jmp
mov
pop
cmp
sbb
mov
adc
dec
cmp
pusha
icebp
popa
add
pop
gs
imul
dec
fisttpl
mov
lret
scas
pop
jmp
xchg
cmp
popa
icebp
nop
arpl
cld
outsl
lcall
cltd
clc
or
repnz
lcall
shlb
push
xor
sub
jae
xchg
filds
mov
pop
jecxz
push
in
cmp
iret
dec
frstor
push
inc
mov
mov
movsb
jae
roll
aad
inc
rcll
sub
in
mov
xchg
sbb
orb
cli
or
inc
int3
inc
and
pop
cmp
add
icebp
out
popa
icebp
nop
arpl
hlt
data16
xchg
outsb
fcoms
xchg
jb
es
ja
loope
outsb
std
insl
hlt
pop
lods
cmp
sbb
fisttpl
movsb
push
loop
jae
xchg
adc
cmp
aam
ret
mov
out
push
lahf
pop
xchg
repnz
jns
push
lahf
push
es
cmp
inc
inc
lds
iret
and
enter
inc
daa
shrb
cmp
shrl
jmp
cld
fwait
jbe
dec
lds
iret
ds
sub
jle
mov
mov
mov
and
fs
popf
insb
mov
mov
xor
sub
lds
inc
aad
sub
je
mov
lret
pop
enter
cs
sti
insb
loop
je
out
jns
mov
inc
aam
sub
loop
je
xchg
setg
or
es
fwait
add
pop
iret
stos
pop
loopne
inc
xlat
mov
enter
mov
push
lds
push
aam
sub
jl
notb
enter
push
test
xor
int
jmp
test
jge
jns
fdivl
in
lods
and
inc
sub
xor
mov
jno
outsb
or
or
push
lahf
push
add
popl
xchg
lock
in
lcall
sbb
cmp
adc
fs
push
cld
dec
mov
lahf
cmp
cmp
into
pop
enter
pop
enter
outsl
daa
ret
push
lds
imul
clc
pusha
notb
cld
fwait
jbe
inc
fisttpll
out
push
int3
inc
and
leave
test
nop
xchg
adc
fwait
or
jae
out
jg
jmp
xchg
pusha
sahf
xchg
sbb
pop
repnz
fs
les
mov
cmpsl
push
xchg
or
outsl
lea
xchg
repz
in
mov
test
cmp
lcall
pop
enter
or
adc
push
aaa
mov
popa
in
bound
jp
in
pop
xor
mov
test
out
mov
cmp
fisttpll
nop
push
lds
iret
push
in
sbb
cs
inc
jb
js
ljmp
dec
dec
rolb
rclb
cwtl
push
imul
push
lds
xchg
push
inc
and
cmp
mov
xchg
xor
dec
mov
cmpsb
shll
push
jbe
loopne
mov
scas
lret
mov
int
loopne
adc
adc
dec
sub
jg
jnp
mov
lret
inc
aad
dec
pop
leave
test
inc
push
lds
pop
test
psubd
xchg
add
sahf
aaa
jno
jne
out
pop
in
loope
jae
adc
push
jno
aaa
xor
ja
arpl
cmc
xor
jl
notb
mov
jg
pusha
repnz
pop
int3
stos
data16
mov
inc
mov
out
cli
popf
insb
movsl
pop
pushf
xor
dec
adc
pop
fmuls
fdivrs
int3
xor
lret
xor
push
add
jo
xorl
dec
lods
xor
daa
out
data16
xchg
outsb
popf
ljmp
add
clc
outsb
or
cmp
mov
mov
sahf
sbb
mov
mov
push
pushf
sti
push
mov
fs
pop
lret
lret
adc
in
sbb
in
js
mov
push
xchg
or
pop
dec
aad
sub
aas
mov
and
stc
cwtl
imul
out
es
add
fs
sbb
add
iret
and
test
lock
push
sub
jge
test
pop
repnz
mov
or
adc
inc
fidivrl
lret
scas
push
jecxz
push
in
mov
fwait
decb
lea
ljmp
xchg
icebp
add
pop
hlt
aas
lods
cmp
sbb
xchg
xchg
adc
pop
repz
inc
shll
pop
ds
mov
call
and
adc
xchg
or
push
lahf
push
sbb
xor
cwtl
sbb
push
xor
mov
cltd
clc
or
sbb
or
rolb
dec
lcall
addl
aad
sub
cs
pop
int
orl
fimull
fidivrl
jae
xchg
cmpsl
sub
outsl
lcall
adc
aaa
mov
mov
and
scas
pop
jmp
pop
int3
stos
iretw
in
jns
mov
mov
mov
sbb
add
fstpt
lret
lret
sbb
adcb
subb
mov
cmpsb
xor
scas
sub
dec
fdivrs
jb
in
add
adc
mov
jg
bound
repz
ja
in
sbb
cmp
test
jge
jns
cli
push
dec
frstor
lret
push
fdivl
in
stos
and
xchg
jb
sub
pop
and
add
inc
es
sbb
adc
cmp
dec
sub
jno
lods
cmp
xor
fs
popf
insb
fsubrp
jge
je
sub
movsb
ret
mov
test
jge
sub
jo
loop
dec
aad
sub
aas
xchg
mov
es
flds
mov
test
lea
notl
insl
in
jge
idivl
lahf
punpckhdq
test
daa
inc
mov
xchg
adc
sahf
pop
mov
int
inc
shll
test
cmp
sub
popf
sbb
xchg
add
popa
dec
lret
pop
ds
and
orb
adc
sub
inc
and
push
fdivl
fisttps
fsts
cwtl
push
imul
mov
add
push
popa
nop
daa
adc
daa
pop
mov
jle
dec
cmc
outsb
cld
fwait
jbe
or
push
xchg
add
data16
xchg
outsb
jmp
rclb
mov
inc
mov
adc
sbb
mov
cltd
clc
or
inc
lds
iret
xor
pop
enter
pop
adcl
int3
inc
and
lods
mov
mov
loop
pop
loop
fists
lods
pop
mov
dec
mov
sub
push
xorl
jnp
pop
repnz
fs
mulb
insb
fcmove
pop
enter
sbb
and
xchg
xchg
xchg
adc
push
cltd
adc
sti
imul
pop
fiadds
dec
shlb
sbbl
call
inc
and
ss
std
insl
hlt
pop
cmp
icebp
nop
arpl
dec
leave
pop
cmp
add
dec
fstpt
enter
cli
jns
mov
leave
dec
frstor
push
jo
add
cmp
push
jnp
addr16
or
lods
cmp
ljmp
stc
jecxz
xchg
add
popa
or
mull
icebp
sub
outsl
lcall
cs
mov
sub
push
sub
sub
mull
icebp
dec
cmp
xor
cs
adcb
sbb
cmpsl
xor
xchg
pop
bound
aaa
ret
jmp
iret
push
les
pop
bound
cmp
dec
mov
in
fldl
adcl
ja
xorb
xor
in
sbb
jnp
in
cmp
mov
inc
mov
fistps
scas
pop
mov
pop
xchg
repnz
test
mov
and
push
xchg
add
sahf
jp
inc
shll
dec
sub
inc
fwait
adc
in
sbb
std
ja
xorb
scas
cmp
mov
push
lds
iret
jnp
sbb
aad
les
pop
in
rclb
push
testb
repnz
insl
ret
push
cmp
jp
jno
xorb
enter
or
xchg
or
jle
fisttps
subl
ja
loope
sub
and
ss
or
cmpsb
outsl
leave
dec
fdivrs
aas
pop
test
lret
inc
mov
mov
adc
inc
les
int3
cmp
dec
cli
jo
xorl
dec
test
stos
cmp
dec
pop
fisttpl
add
pushf
adc
dec
fnstcw
lods
lret
inc
loope
push
xor
jns
js
mov
lea
mov
and
xor
lds
mov
cmp
add
dec
frstor
mov
add
push
les
xchg
xchg
out
sbb
cmc
insb
loop
je
nop
push
pushf
sti
push
xchg
pop
rclb
inc
sbb
nop
adc
fisttpll
out
out
hlt
xchg
outsb
mov
mov
pop
fisttps
fnstenv
mov
movsb
ret
ds
sti
jle
mov
xchg
gs
sti
jo
xorl
xor
clc
ja
xorb
fmuls
fdivrs
daa
mov
and
mov
xchg
icebp
add
sub
cmp
pop
lret
lret
and
fs
popf
insb
vpunpcklwd
nop
arpl
jp
arpl
cmc
pop
arpl
gs
dec
aad
mov
out
jmp
mov
fsubrs
mov
inc
mov
adc
je
js
ljmp
test
push
shll
sti
push
stc
jg
mov
mov
mov
pop
sti
movsb
and
sub
movsb
cmp
inc
adc
fs
jge
notl
xchg
sbb
and
pushf
xor
add
jbe
loopne
or
push
jno
inc
ret
dec
fdivrl
mov
and
pop
test
jge
and
pusha
rcll
xchg
jb
es
xchg
je
lea
ja
xorb
out
jg
jmp
cltd
push
pop
test
stos
pop
lea
jb
in
push
roll
aad
pusha
std
insl
hlt
pop
andb
adc
push
rolb
sarb
in
sbb
or
jle
call
or
and
add
push
fisttps
fsts
in
sbb
jmp
push
in
repnz
pop
repnz
pop
int3
stos
sar
loopne
jb
aam
into
test
or
cmpsb
add
mov
jg
cmp
lahf
punpckhdq
stc
or
cmp
je
jo
loop
mov
xchg
setns
push
and
mov
mov
xchg
xchg
testb
fnsave
lock
lcall
sahf
stc
or
pop
xchg
adc
inc
ret
ret
mov
inc
mov
in
jae
xchg
xor
dec
pop
fimull
fimull
push
cmpsl
xchg
adc
jge
je
jbe
mov
xor
imul
pop
loop
mov
shll
popf
in
rcrl
add
push
mov
xchg
adcb
out
movsb
cmp
inc
aad
sub
insb
lret
pop
enter
jg
jg
jmp
mov
sbb
xor
or
sub
stos
cmp
inc
jmp
cwtl
clc
data16
xchg
outsb
jmp
or
lods
or
sbb
cmpsb
xor
scas
inc
pop
fstpt
je
lea
fdivl
in
fwait
sbb
in
push
sahf
adc
in
sbb
lds
mov
mov
jb
xchg
and
push
push
jecxz
push
in
inc
into
pop
cmp
adc
int
and
jb
sbb
mov
mov
and
insl
fiaddl
mov
push
loopne
iret
pop
cmp
jle
out
jl
testb
mov
out
push
xor
or
cmpsl
inc
mov
lret
inc
push
cwtl
push
imul
aas
scas
lret
lea
pushf
sti
push
cmp
push
xor
mov
das
enter
pop
mov
push
mov
repz
gs
mov
ret
mov
lods
lret
inc
mov
and
sub
stc
jo
xorl
pop
rorb
sbb
cmpsb
sub
mov
dec
mov
dec
mov
fwait
jbe
adcb
loopne
mov
or
in
jbe
jo
loop
lods
aas
scas
lret
stos
xor
cmpsb
xor
scas
dec
popa
ljmp
stc
in
jg
je
out
push
adc
push
roll
aad
jl
insb
or
iret
sbb
add
jl
xchg
testb
sahf
pusha
sbb
push
shlb
ret
fsts
mov
add
jae
xor
sbb
rcrl
xchg
addr16
fistpll
and
jae
pop
repnz
fs
clc
push
lahf
push
xchg
or
daa
mov
and
pop
divl
ja
loope
push
les
int3
gs
push
imul
jae
xchg
imul
add
adc
js
ljmp
adc
xchg
add
inc
shll
push
adc
mov
pop
fimuls
add
popa
icebp
nop
arpl
insl
mov
dec
mov
ret
sub
lret
or
mov
fsubr
gs
pushf
outsl
sahf
mov
xchg
mov
jmp
mov
inc
mov
adc
fisttpl
pop
jp
ds
add
std
or
push
rcll
push
inc
idivb
cmpl
nop
or
les
int3
mulps
push
aaa
ret
out
adc
add
xor
int
aam
movsb
ret
ds
xlat
push
jp
outsb
or
xor
jge
je
insl
xchg
xchg
repz
out
scas
aas
pop
test
inc
mov
sbb
xchg
xchg
lock
dec
int3
inc
and
shlb
les
xchg
adc
rorb
dec
movsb
jns
gs
pop
popa
out
jl
mulb
fstps
scas
pop
cltd
sbb
xchg
add
xor
out
in
jle
add
ret
pop
lret
scas
pop
jmp
movsl
or
adcb
shrl
jge
divl
pop
pushf
xor
inc
scas
movsb
ret
ds
in
sbb
add
sub
int
shlb
mov
lea
cmpsl
aaa
push
mov
pusha
xchg
jns
lock
bound
cbtw
and
xor
jbe
inc
and
sub
rolb
sbb
jp
mov
imul
xchg
and
adcl
test
xchg
add
inc
clc
je
lea
outsl
lcall
inc
daa
shlb
xlat
mov
out
mov
inc
aam
sub
mov
jns
mov
roll
mov
js
ljmp
fidivrl
stos
cmp
dec
aad
ret
cmpsb
push
mov
push
mov
mov
adc
lahf
and
mov
jg
bound
fildl
inc
push
xor
xor
and
data16
cmp
pop
jnp
insb
or
out
or
push
xor
sub
and
mov
adc
popa
out
jl
mulb
movsb
sub
arpl
xchg
les
mov
mov
pushf
push
push
xor
jle
ret
push
lds
inc
shll
fidivrs
sub
or
dec
fidivrs
sub
js
in
sbb
mov
pop
int3
stos
mov
jg
mov
je
jns
jmp
repz
xorb
push
xor
daa
xor
sub
push
cmpsb
and
stos
xor
jl
jne
push
jl
outsb
or
or
cmp
pop
xchg
add
pusha
dec
push
xor
sub
xor
mov
dec
mov
add
pop
les
mov
inc
and
sbb
adcl
mov
sub
outsl
int3
pop
repnz
fs
jns
mov
int
leave
test
jmp
xchg
add
sahf
aaa
imul
into
pop
leave
test
xor
xchg
push
pushf
sti
push
hlt
push
xchg
add
sahf
je
jecxz
push
in
sbb
outsb
cld
fwait
jbe
push
fisttpl
fstl
scas
sub
lds
adc
or
je
pop
jp
jb
xlat
inc
and
and
jno
xorb
gs
pushf
outsl
cwtl
adc
js
sahf
or
cmpsb
push
dec
rcll
and
mov
mov
xchg
icebp
add
mov
lods
lret
inc
loope
dec
fnstcw
mov
stc
imul
pusha
pop
repnz
ss
cmp
add
dec
sub
push
mov
add
add
mov
fimuls
mov
int
cmpsb
push
enter
sub
sub
push
push
lret
lret
les
int3
dec
sbbl
xlat
pop
lret
scas
pop
xchg
fisubs
xchg
mov
pop
and
cmp
in
push
sbb
addr16
add
repnz
fs
xor
pop
jb
outsb
or
or
pop
cmp
sub
testb
roll
shll
mov
adcl
dec
rclb
addr16
jo
loop
ficoms
cmpsb
push
cli
lret
pop
leave
test
call
sub
mov
test
inc
aam
dec
out
sub
lds
pop
int
and
jb
or
jmp
insb
mov
push
xor
sub
imul
insl
sbbl
sbb
mov
movsb
ret
mull
sbb
add
iret
and
mov
xor
xor
jb
in
mov
fidivs
gs
adc
inc
mov
xor
adc
in
sbb
and
inc
xor
push
lds
jl
mulb
cmc
jg
mov
jno
xchg
cmc
add
add
std
outsb
cld
fwait
jbe
fimuls
mov
inc
and
ja
jp
jp
push
les
int3
gs
pop
int
addr16
adcl
test
adc
fs
popf
insb
mov
js
mov
out
jbe
cmpl
xchg
add
hlt
push
cld
jnp
mov
inc
mov
mov
pop
cmp
push
jno
gs
push
or
daa
mov
and
pop
outsb
in
sbb
cmp
dec
aad
repz
xchg
iret
push
jecxz
push
in
dec
lret
pop
ds
lahf
adc
and
lock
aam
into
pop
cmp
jg
lods
cmp
mov
gs
cmp
xchg
and
mov
mov
fcoms
cmpsb
push
hlt
mov
test
push
push
mov
xor
mov
mov
clc
outsb
or
jg
inc
shlb
shlb
push
cld
adc
and
data16
xchg
outsb
nop
mov
out
xchg
sbb
xlat
inc
and
aaa
fcoml
mov
xor
inc
hlt
jl
jne
pusha
orb
cli
or
sub
test
cwtl
decl
fimuls
adcl
sahf
or
cmpsb
add
jae
xchg
jecxz
out
jo
mov
cwtl
mov
lcall
cli
jae
xchg
inc
inc
and
imul
sub
jno
adc
cli
push
push
pushf
sti
push
dec
push
lret
fildl
dec
adc
lds
mov
adc
imul
in
lock
pusha
pop
repnz
pop
xchg
adc
jo
push
cld
or
push
lret
mov
dec
fistpll
xor
inc
xor
push
xor
xchg
cmc
add
adc
or
cmp
ss
sti
imul
cmp
popa
add
push
and
mov
dec
mov
mov
repnz
ljmp
xor
dec
fistpll
enter
flds
mov
adcb
aas
lret
and
cmp
mov
inc
mov
lock
std
test
pop
mov
jle
inc
int
fdivrl
add
sbb
jno
mov
mov
cli
iret
dec
fnstcw
mov
das
hlt
xchg
outsb
popf
xchg
sbb
aad
xor
jle
gs
push
inc
leave
pop
cmp
outsb
cmp
push
fimuls
and
adc
inc
shll
stos
into
cmp
sbb
pop
or
jle
jle
call
bound
std
or
inc
aad
sub
jp
pushf
xor
or
xchg
jae
cld
xchg
cmc
add
int
lret
mov
daa
mov
and
aaa
mov
call
adc
add
mov
mov
mov
pop
cmpsb
sub
fstpl
stos
pop
xchg
enter
push
mov
test
call
sbbl
insl
pushf
js
fmuls
fsubrs
sbb
add
xor
addr16
fisttpll
out
sbb
icebp
popa
add
inc
das
mov
cli
push
lahf
push
mov
mov
and
sti
dec
inc
aad
sub
je
fldt
lock
push
repnz
mov
mov
sub
pusha
notb
movsb
ret
ds
mov
adc
es
mov
dec
fstpt
sbb
xchg
add
insb
jae
push
cld
sub
movsl
xor
data16
xchg
outsb
xchg
jo
xorl
pop
mov
mov
and
es
jne
mov
pop
rolb
rolb
icebp
popa
add
xor
arpl
xchg
gs
repnz
notb
icebp
nop
arpl
adc
rolb
mov
call
pop
out
push
lods
adc
cmp
jl
notb
ja
xorb
xchg
add
jo
push
mov
mov
aad
sub
pop
mov
xchg
adc
or
cld
jge
je
insl
inc
lret
pop
ds
jne
push
cld
sbb
jno
xorb
pop
int3
stos
data16
cmp
rclb
sub
outsb
or
or
movsb
loop
clc
lahf
push
jbe
insl
hlt
pop
imulb
mov
jbe
cmpl
jmp
push
in
sub
dec
ret
repz
or
xchg
mov
push
ret
ret
loope
adc
dec
movsb
xor
pushf
xor
or
repz
lcall
lods
cmp
fs
popf
insb
mov
leave
scas
movsb
ret
ds
clc
data16
xchg
outsb
jmp
std
jl
mov
jg
inc
push
jg
jmp
pop
test
movsl
and
mov
ficomps
stos
pop
mov
adc
or
adcl
jmp
push
in
or
adcl
mov
sub
popf
adc
pop
jp
push
aam
iret
stos
pop
rolb
sub
imul
stc
imul
mov
repz
rorl
jb
in
cmp
ds
test
dec
jecxz
push
in
mov
in
add
pop
popf
or
int
and
cmp
dec
int3
xor
sub
dec
sahf
add
scas
cs
aaa
cmpsl
ret
mov
mov
xchg
mov
movsl
and
roll
aad
sub
fists
lods
pop
mov
mov
call
leave
loope
cld
fwait
jbe
pop
xchg
add
push
ficoml
lods
pop
cli
or
sbb
aas
mov
fwait
arpl
pusha
pop
repnz
fs
pop
repnz
rclb
pop
hlt
ds
cmp
sbb
and
lahf
pop
xchg
push
pushf
sti
push
hlt
dec
xlat
inc
and
xor
hlt
sbb
jg
mov
xor
sub
push
cltd
xor
das
lods
cmp
fmuls
fdivrs
lods
push
mov
movsb
ret
ds
loopne
int3
dec
fistpll
hlt
xchg
outsb
popf
cwtl
adc
push
mov
mov
das
ficoms
cwtl
push
imul
lret
lret
inc
and
jns
xchg
add
xchg
or
xor
sti
dec
popf
or
in
mov
int3
jle
stos
cmp
add
test
adc
add
imull
je
add
mov
mov
jmp
rclb
cmpsb
push
aam
jb
xchg
add
sub
cwtl
pop
mov
cmpsl
ret
lea
cwtl
decl
frstor
ja
loope
mov
cmpsl
ret
inc
iret
pop
cmp
and
fisttpl
fnstsw
data16
jl
notb
jp
popa
add
add
inc
xlat
mov
call
mov
leave
cmp
int3
inc
xlat
mov
call
jge
je
sub
sbb
cltd
or
xor
push
ret
cmpsb
push
loope
jmp
setns
push
xchg
icebp
add
xchg
push
xchg
or
in
testb
and
xor
xchg
jns
popa
icebp
nop
arpl
fildl
dec
lret
int3
dec
fdivrl
lcall
push
scas
inc
pop
fimuls
add
dec
das
test
pop
test
add
xchg
pop
xchg
adc
dec
les
int3
aas
bnd
mov
xchg
push
mov
es
stc
cwtl
imul
pop
add
sbb
pop
dec
fnstcw
mov
orl
mov
dec
mov
add
adc
xor
adc
aad
dec
cli
mov
mov
das
mov
mov
jg
dec
rorl
mov
adc
imul
fnsave
sbb
iret
push
mov
add
pop
in
hlt
xchg
outsb
xchg
sbb
iret
stos
pop
cmpb
roll
dec
cltd
push
inc
and
sub
rol
fnstcw
xchg
repnz
mov
scas
leave
cmp
fcoms
mov
xchg
cmc
add
add
sbb
pop
arpl
jge
divl
sub
aaa
push
mov
in
mov
movsl
or
fwait
sub
push
lds
xchg
or
cmp
scas
cmp
or
xchg
jb
dec
push
iret
pop
cmp
xor
js
pop
push
xor
daa
xchg
mov
sbb
repz
xchg
jb
inc
idivb
mov
push
rolb
sarb
or
jno
pushf
xor
pop
adc
loopne
cli
popf
insb
cltd
movl
jle
mov
xchg
xchg
int
loop
pop
loop
stos
and
popl
xchg
icebp
add
pop
cltd
or
pop
dec
ret
ret
xor
xchg
add
movsb
xor
int
lea
cwtl
rolb
dec
jb
jnp
in
inc
add
fimuls
mov
cmp
push
push
xchg
repz
in
sub
js
ja
loope
lds
test
fisubs
sub
add
addr16
sbb
mov
lret
lret
int3
inc
and
pop
cmp
add
pop
int3
stos
xchg
jns
xchg
cmc
add
into
inc
fidivrl
leave
test
mov
adc
cwtl
pop
xchg
adc
inc
int
and
jb
mov
inc
mov
pushl
xorb
roll
shll
push
test
push
test
xchg
add
out
adc
pop
jmp
call
insl
std
test
dec
fisttps
pop
repnz
fs
pusha
notb
jb
in
fiaddl
mov
lods
lods
cmp
out
adc
pop
call
stc
out
ja
xorb
push
pushf
sti
push
fcomip
ja
xorb
fmuls
fdivs
mov
mov
cli
add
adc
sub
daa
mov
and
orb
decl
stc
push
fimuls
add
pop
xchg
repnz
popf
adc
in
sbb
jg
addr16
pop
orl
adc
push
fimuls
and
xchg
mov
xchg
add
cltd
or
lcall
add
cmp
pop
int
xlat
push
push
xor
addr16
pop
into
test
xor
scas
or
pop
enter
out
je
lea
cwtl
push
imul
dec
frstor
fwait
jbe
stc
jns
mov
add
adc
jg
mov
mov
push
shll
jbe
push
mov
mov
adc
xchg
add
bound
pushf
xor
inc
add
repz
jp
inc
lret
lret
add
xchg
pop
bound
out
sbb
add
test
lock
leave
pop
cmp
js
repz
cmc
pop
fmuls
mov
scas
leave
cmp
push
mov
mov
cmp
xor
scas
insl
or
jl
push
mov
es
imull
fwait
jbe
insl
icebp
popa
add
jbe
jp
jp
rclb
mov
clc
lahf
push
out
hlt
xchg
outsb
xchg
or
push
mov
popf
in
loopne
aaa
cmpsl
ret
clc
jb
xchg
adc
and
into
inc
aad
dec
mov
leave
jo
sbb
mov
adc
push
lret
ljmp
dec
fdivl
in
scas
lods
lret
inc
out
xor
pop
int
and
jl
pop
leave
test
out
mov
rcrb
pop
cltd
sahf
or
mulb
adc
mov
inc
mov
seta
bound
jnp
adc
roll
xor
sub
and
pop
and
fs
pop
loop
enter
push
subb
or
mov
into
push
add
add
adc
jae
xchg
xchg
sbb
and
mov
inc
mov
test
sahf
stc
or
push
mov
jp
aaa
movsl
xor
jp
jp
mov
mov
and
ds
pop
adcl
out
jl
notb
in
sbb
sub
pop
xor
push
lea
icebp
popa
add
jbe
or
cmpsl
aaa
push
mov
aam
int
or
in
cld
or
jno
lret
lret
fisttpl
adc
push
pop
xchg
adc
enter
inc
mov
mov
js
add
adc
adc
sub
aam
leave
test
lea
lea
movsb
ret
ds
mov
mov
das
fwait
push
xchg
add
cmp
pop
cmp
test
mov
sbb
jb
jp
in
pop
lret
pop
repnz
fs
insl
std
test
fimuls
mov
aad
dec
mov
nop
push
popa
nop
jb
push
mov
es
add
dec
hlt
push
lahf
push
xchg
push
pushf
sti
push
xchg
les
mov
xchg
mov
mov
movsl
int3
aas
aad
imul
es
cs
popa
icebp
nop
arpl
or
pop
fdivl
in
lods
and
repz
mov
and
push
in
fs
popf
insb
lahf
out
lcall
frstor
js
dec
scas
and
test
pop
test
sbb
sbb
adc
lock
pop
scas
aas
scas
lret
xchg
add
xchg
jb
cmp
ja
xorb
jae
xchg
sbb
insb
inc
fmuls
fdivs
xchg
or
daa
mov
and
push
jl
insb
or
iret
int3
dec
frstor
arpl
je
pusha
mov
cmpsb
shll
xor
jne
mov
inc
lds
iret
and
fsts
je
lea
inc
shll
push
jns
jnp
pusha
notb
xor
ja
leave
pop
cmp
or
mov
je
sbb
mov
mov
sbb
xor
pop
call
xchg
out
jp
jp
push
ret
ret
loopne
adc
and
adcl
test
iret
pop
cmp
cmp
negb
mov
stos
or
and
pop
into
test
pop
cmp
ds
adc
push
mov
jns
jbe
test
pop
test
pop
adcl
dec
frstor
fsubrs
fcmove
inc
shll
aaa
push
mov
lahf
push
add
rorl
push
or
shll
add
sahf
cmp
mov
test
inc
aam
dec
push
data16
xchg
outsb
adc
xor
xorl
push
in
pop
in
out
jo
xor
cmp
mov
inc
fisttps
flds
ja
rorl
mov
mov
mov
jns
setb
xchg
adc
add
ret
inc
shll
mov
movsl
movb
inc
mov
xor
and
mov
or
je
lea
imul
insl
aad
repnz
fs
inc
iret
pop
cmp
jo
jge
je
push
and
ds
test
dec
lret
pop
ds
movsl
xor
sbb
sbb
rolb
shlb
pop
jp
ds
out
jno
in
loope
jae
pop
mov
js
ds
jg
mov
cmp
xchg
mov
and
cmc
add
inc
fmuls
fdivs
push
mov
jns
clts
lahf
punpckhdq
iret
cmp
in
hlt
xchg
outsb
xchg
sbb
fs
test
pop
test
or
inc
push
xor
cmp
pusha
notb
fwait
decb
loopne
repz
repz
jp
fistpl
scas
pop
cld
das
mov
aaa
mov
bnd
je
and
dec
fistpll
xchg
repnz
cs
inc
roll
sarl
int
and
stos
inc
shll
notl
out
mov
inc
fimuls
and
xor
in
je
lea
enter
and
fwait
or
sbb
inc
fidivrl
aaa
push
mov
lret
adc
jae
test
outsl
lcall
xor
jae
adcb
xorb
pop
cmp
ds
sub
xor
jg
push
fisttpll
out
xlat
pop
int3
stos
xchg
in
clc
lahf
push
adc
lods
and
fwait
or
cmp
aam
sub
mov
pop
xchg
adc
or
cli
dec
cmp
cmp
add
dec
frstor
pop
lods
or
jle
mov
mov
mov
and
leave
push
mov
fstpt
cs
mov
push
movsb
insl
es
cmp
inc
popf
and
mull
icebp
sbb
add
push
ja
add
daa
and
fcompl
stos
pop
jl
fs
or
test
xchg
add
jne
xor
clc
outsb
or
pop
fwait
adc
in
sbb
adcl
movsb
das
mov
repnz
pop
repnz
push
lds
iret
sbb
into
pop
int
addr16
aas
scas
aas
pop
test
pop
loop
add
lret
xchg
addr16
out
mov
filds
dec
scas
mov
sarl
xor
cld
xchg
cmc
add
jp
jnp
in
insb
jge
insl
hlt
pop
int3
mov
sarb
scas
add
loop
cli
popf
insb
xchg
or
sbb
pop
ja
popa
add
add
mov
inc
mov
shrl
fstl
lcall
mov
das
leave
movsb
xor
scas
aas
pop
test
xchg
fs
pop
xchg
repnz
enter
dec
in
add
cli
outsl
lcall
js
ljmp
push
stos
cmp
mov
negb
inc
and
cs
mov
addr16
xor
jmp
int3
aas
jg
mov
xor
push
enter
dec
enter
pop
ficompl
in
jbe
imul
adc
adcb
subb
sbb
xchg
jae
cltd
or
loopew
hlt
xchg
outsb
mov
loop
inc
lds
iret
and
cmp
cmp
lret
lret
popf
or
inc
shlb
cli
popf
insb
mov
jo
dec
push
xor
imul
sbb
imul
push
inc
xlat
inc
and
outsb
movsl
xor
aaa
cmpsl
ret
jl
jns
jmp
into
pop
enter
fimuls
mov
jns
jmp
mov
ret
dec
sub
xor
jp
jp
in
jmp
pop
lret
scas
pop
fmull
inc
es
mov
enter
fisubrs
jns
insl
cmp
jnp
xchg
cmc
add
pop
fimuls
adc
inc
and
cmp
gs
push
clc
jno
xorb
jns
mov
rcrl
test
in
je
and
and
gs
lcall
cmp
mov
fimuls
push
loop
sub
adcl
xor
ret
push
lds
and
cli
push
repz
cmc
push
fiaddl
mov
orl
or
jns
loop
pop
loop
push
popf
or
dec
ret
shr
jb
xchg
sbb
push
fisttpl
fnsave
push
sahf
or
cmpsb
dec
push
inc
and
cmp
push
xor
ds
jge
xchg
or
imul
cmpsb
sub
lds
ficoml
mov
popf
in
icebp
fcoms
mov
mov
fdivrl
mov
sbb
pop
int3
inc
and
sbb
and
sbb
pop
leave
test
lock
inc
mov
repnz
push
cld
push
test
shlb
mov
lock
bound
push
mov
pusha
notb
adc
imul
lret
xchg
or
sub
lds
popa
xchg
loopne
mov
inc
mov
pop
lahf
punpckhdq
ret
adc
pop
into
test
gs
push
rcrb
stos
pop
test
sub
pop
cli
jno
xorb
xchg
add
xor
aas
jmp
jne
cmp
daa
mov
mov
addl
adc
jno
jne
out
pop
sbb
nop
push
popa
nop
daa
ret
lods
pop
cli
mov
stc
fs
insl
hlt
pop
out
xchg
pop
bound
fs
jge
and
iret
pop
cmp
push
inc
push
xor
push
out
jae
xchg
loopne
notb
push
imul
insl
std
test
mov
cmpsb
shll
addl
dec
fdivrl
cmp
dec
dec
rclb
and
aam
sub
or
mov
inc
mov
push
cs
fisttpll
out
out
jmp
jge
or
cltd
setg
or
daa
mov
jae
in
mov
mov
and
jb
movsb
aaa
cmpsl
ret
sbbb
out
sbb
lret
mov
pop
bound
push
cmc
sbb
sub
cmp
ds
jmp
ret
inc
mov
test
add
aam
sub
inc
and
das
fcomps
xchg
addr16
insl
std
test
adc
pop
bound
cmp
and
sbb
pop
jp
jae
lcall
jne
out
dec
add
test
sahf
stc
or
mov
out
jmp
jge
adcb
loop
mov
pop
xchg
adc
push
cmpsl
test
and
mov
inc
call
out
data16
popa
add
push
sub
cmc
outsb
cld
fwait
jbe
loope
out
mov
arpl
push
cmp
inc
mov
js
push
iret
pop
cmp
aas
pushf
sbb
aad
int3
sub
and
ret
inc
fidivrl
cmc
pushf
outsl
cwtl
jae
fs
push
cmp
and
push
inc
int
and
xor
lds
insb
or
mov
ds
inc
int3
inc
and
mov
push
xor
cmp
test
push
mov
sbb
inc
imul
cmp
dec
fisttpll
out
sub
out
je
lea
or
in
adc
add
jnp
notl
rorl
mov
and
fidivrl
lods
clc
js
mov
pop
fisttps
flds
scas
das
mov
roll
aad
fcompl
test
pop
ds
lea
das
movsb
cmp
dec
imul
lret
inc
shlb
xor
add
adc
enter
dec
mov
pop
jb
sub
inc
and
dec
sub
dec
mov
mov
sbb
mov
sbb
inc
fisttpl
push
std
xor
mov
js
cs
enter
or
fcoms
mov
js
arpl
shrl
pop
bnd
pusha
notb
out
mov
fstps
scas
pop
mov
add
sub
jecxz
sti
sahf
insl
xchg
outsb
out
jg
jmp
mov
icebp
je
lea
les
int3
aas
jmp
notb
or
jge
mov
movsl
sub
aad
sub
or
scas
cmp
mov
or
adcb
loope
cmpsb
sbb
sbb
notl
outsb
std
insl
hlt
pop
lods
popf
or
les
int3
or
jbe
jno
jecxz
jne
jge
divl
sub
lret
cmpsl
push
mov
cltd
dec
adc
sbb
or
rorl
push
lds
cs
inc
mov
out
cmc
pushf
outsl
test
lret
fs
add
push
lds
sbb
adc
mov
push
out
imul
insl
mov
xchg
add
jne
sbb
aad
xlat
xchg
sahf
stc
or
test
scas
aas
pop
test
or
pop
enter
pop
in
enter
pop
lock
pop
iret
stos
pop
into
jnp
arpl
cmc
inc
jmp
adc
sub
and
mov
fisubrl
hlt
mov
int
imul
insl
sbbl
addr16
stos
rorl
push
rcll
dec
fstl
sbb
data16
adc
push
mov
sub
and
mov
lods
xchg
xchg
repz
jmp
popa
icebp
nop
arpl
mulb
rclb
pop
test
xor
pop
rolb
shlb
cltd
adc
leave
pop
cmp
sub
jae
std
jno
xorb
aas
scas
lret
out
stc
cwtl
imul
shlb
mov
test
pop
iret
stos
pop
das
mov
xchg
or
mov
xchg
aas
sub
sbb
cmpsb
xor
scas
insl
inc
fdivl
in
pop
lea
sahf
or
cmpsb
dec
sbb
cmp
lret
pop
ds
fistps
mov
xlat
adc
dec
int
and
sub
dec
fdivrs
push
xor
cmp
orl
cli
or
scas
and
adc
inc
or
push
fmuls
fdivrs
std
insl
hlt
pop
roll
mov
js
dec
aaa
mov
xor
sbb
mov
dec
fisttpll
out
push
les
fistpll
in
mov
in
sbb
loop
in
jg
pop
lds
iret
push
and
or
push
lea
or
mov
jns
nopl
ficompl
stos
pop
lods
sub
lds
xor
and
xor
pop
lahf
sbb
rolb
shlb
jmp
pushf
dec
ret
ret
cli
push
mov
dec
mov
je
jbe
nop
push
popa
nop
aaa
inc
leave
pop
cmp
sbb
mov
stc
je
lea
sbb
aad
xchg
insb
std
insl
hlt
pop
lods
pop
leave
pop
cmp
js
pop
int3
stos
iretw
mov
xchg
inc
es
add
in
out
jo
pop
push
xor
or
ret
in
sbb
shlb
sbb
jo
inc
aam
dec
leave
xor
mov
stos
into
cmp
inc
mov
cmp
movsl
and
mov
lock
lea
mov
cltd
adc
sbb
jmp
icebp
nop
arpl
or
adc
xlat
pop
into
test
mov
dec
fidivrs
mov
sbb
subb
cmp
lock
pop
mov
pop
leave
pop
cmp
pusha
cmp
xchg
add
cld
xchg
cmc
add
faddl
mov
mov
sbb
into
push
lds
cwtl
imul
add
xor
push
lret
dec
fnstcw
fdivrl
inc
and
and
xchg
popa
jmp
push
in
push
rcll
pop
mov
inc
shll
add
sahf
jl
push
lret
mov
add
and
rcrl
stos
data16
or
in
imul
xchg
pop
xchg
repnz
jne
inc
fisttpl
leave
pop
cmp
pusha
jne
jno
jecxz
ljmp
jmp
cwtl
adc
loope
adc
and
dec
frstor
mov
xor
dec
sbbl
mov
pushf
push
jae
add
sbb
add
sbb
fs
popf
insb
mov
popf
or
jb
xchg
addb
repz
sti
dec
roll
aad
inc
enter
cmp
imul
sbb
adcb
andb
scas
pop
test
push
lahf
push
xor
sub
insl
and
pop
xlat
inc
and
js
dec
fistpll
fnstcw
push
popa
nop
and
or
mov
popa
mulb
push
mov
aad
xchg
sbb
in
jbe
cmpl
push
lds
mov
mov
and
mov
mov
cs
fistl
jg
xchg
cmc
add
aaa
mov
dec
mov
cmpsb
push
mov
mov
inc
mov
daa
mov
bnd
cmpl
dec
fdivrl
ret
cmpsb
push
mov
push
mov
adc
lods
cmp
lret
lret
push
mov
and
sarl
gs
pop
mulb
insb
fcmove
pop
leave
test
lock
test
pop
test
icebp
gs
pushf
outsl
inc
shlb
jmp
jge
cmp
aas
pop
test
psubd
cwtl
add
or
push
xor
adc
jecxz
push
in
push
rolb
rcrb
add
push
les
jno
jecxz
mov
mov
xchg
jge
outsl
or
repnz
sbb
outsb
push
mov
jle
imul
and
mov
inc
mov
mov
xchg
icebp
add
movsl
ja
lcall
pusha
pop
repnz
adcb
loope
cmpsb
lret
pop
into
test
je
out
pop
inc
inc
and
ja
dec
ret
out
xor
add
sub
jmp
or
add
jp
jp
pop
les
int3
and
call
sbb
xchg
adc
in
sbb
jb
addr16
pop
or
add
jl
pop
leave
test
mov
pushf
bound
mov
inc
mov
popa
jmp
push
in
push
outsl
ljmp
les
jmp
jge
inc
enter
sub
enter
cmp
push
shlb
fisttpll
ljmpw
jns
push
cld
pop
ljmp
xchg
or
xor
cmp
add
mov
xchg
popf
xor
lahf
or
stc
imul
adc
dec
rolb
sarb
rcrb
pop
cmp
pop
push
xor
dec
in
cmc
pushf
outsl
movsb
cmp
divb
cmpl
lds
iret
sub
push
mov
enter
cs
cmp
pop
leave
dec
ret
mov
mov
in
jg
iret
inc
aad
dec
test
loop
push
fstpt
mov
cltd
sbb
stos
cmp
or
or
hlt
push
cld
dec
lods
cmp
push
shlb
mov
jmp
dec
fimull
movsb
push
bnd
js
ljmp
mov
lret
and
jle
call
or
jle
movsl
xor
mov
jg
inc
pusha
loope
adc
or
push
aaa
ret
xchg
add
sahf
jnp
xor
mov
insb
call
mov
lds
xchg
add
bound
stos
cmp
dec
lret
inc
shll
pushf
sti
push
in
push
lret
sti
movsb
sub
pop
jp
push
mov
fwait
decb
out
sbb
sti
push
mov
mov
loop
loope
jae
add
or
mov
mov
sbb
pop
mov
inc
addb
sti
popa
icebp
nop
arpl
inc
stos
cld
xchg
cmc
add
hlt
imul
sub
sbb
sub
add
std
or
movb
inc
mov
aas
ljmp
mov
stos
xchg
sbb
imul
insl
mov
pop
leave
test
mov
mov
mov
inc
sub
or
shlb
mov
cmp
rclb
push
clc
lret
pop
leave
test
call
negb
and
in
sbb
jb
in
pop
int3
inc
and
icebp
nop
arpl
mov
xchg
mov
es
in
adc
insb
lds
test
fisubrs
add
jbe
and
pusha
notb
mov
das
vpunpcklbw
xchg
pusha
test
mov
xchg
push
sbb
mov
movsb
ret
ds
inc
lret
pop
ds
insl
in
sbb
push
xor
and
dec
les
int3
aas
test
cltd
clc
or
sub
mov
xchg
icebp
add
jbe
imul
outsb
or
dec
addr16
push
cld
push
push
push
inc
mov
jmp
loope
movsb
xor
movsb
cmp
sbb
arpl
xchg
gs
test
cmp
dec
ja
jge
negl
and
sub
loopne
adc
addr16
lock
in
adc
in
sbb
adc
ss
inc
mov
mov
cmpsb
cmp
inc
mov
sti
cmp
push
lds
mov
cltd
clc
or
push
fdivl
in
clc
jno
xorb
in
jge
notl
add
addr16
notl
popa
out
jl
mulb
es
cmp
push
and
movsb
adc
mov
setge
dec
fistpll
mov
repnz
xchg
jb
es
push
lds
push
xor
popw
mov
jle
dec
popf
push
xchg
repz
in
adc
jns
xchg
add
sahf
jbe
test
in
sbb
push
lahf
punpckhdq
pop
stos
inc
arpl
jno
jecxz
lret
mov
aad
dec
mov
imul
insl
mov
mov
mov
in
cld
dec
les
int3
aas
aas
mov
dec
mov
jg
outsb
xlat
pop
int3
stos
xchg
pushl
xorb
sub
or
icebp
jl
jne
and
repnz
out
jo
stc
outsl
lcall
popa
add
pop
jmp
adc
xor
mov
push
shlb
dec
mov
or
ds
test
jge
outsb
xchg
push
pushf
sti
push
cld
gs
xchg
cmc
add
fwait
or
cli
push
mull
icebp
ss
int
and
cmp
push
mov
inc
mov
add
mov
xchg
fstpl
stos
pop
xchg
lds
mov
test
les
int3
aas
dec
rcll
and
scas
aas
pop
test
sti
push
in
js
mov
cmp
data16
xchg
testb
repnz
loopne
loopne
jb
mov
mov
inc
and
outsl
xchg
add
std
or
es
inc
mov
adcb
sub
fisttps
flds
ljmp
pop
bound
jp
jge
fs
popf
insb
test
jle
mov
mov
lret
mov
shlb
insl
hlt
pop
in
pushf
and
or
or
rcll
xor
lahf
punpckhdq
je
jbe
cmp
roll
aad
arpl
js
ljmp
fstpt
add
and
ljmp
stc
lds
xchg
add
sahf
cmp
scas
fmull
movsb
push
cld
rcll
push
out
push
lea
jb
xchg
push
push
xor
addr16
cs
mov
ret
ds
mov
out
jg
jp
in
push
dec
xlat
inc
and
xor
mov
pop
pop
jp
adc
dec
fistpll
mov
and
adc
pop
fdivl
in
dec
into
pop
cmp
xor
outsb
cld
fwait
jbe
push
xchg
jb
pop
dec
into
pop
cmp
and
add
pop
out
fs
popf
insb
lahf
or
adc
movsb
ret
fidivrl
mov
inc
mov
add
sub
sub
rclb
push
hlt
lds
lods
pop
jmp
xor
dec
fidivrs
cmp
add
adcl
test
int
enter
mov
add
push
int
and
push
in
jbe
cmpl
stc
imul
cmp
inc
inc
fistpl
rclb
inc
jl
insb
or
iret
popf
push
mov
es
ret
inc
shll
call
dec
frstor
sti
push
roll
daa
mov
sub
insl
out
adc
or
cmp
and
mov
fwait
decb
in
pop
leave
inc
into
pop
cmp
adc
xor
fmuls
fsubrs
or
pop
int3
inc
and
cmp
sbb
imul
insl
ret
sub
xor
loop
pop
loop
pop
repnz
xchg
fistpl
ljmp
adc
or
ret
or
imul
jmp
push
in
add
push
xor
and
and
rclb
lods
pop
mov
jecxz
hlt
xchg
outsb
xchg
lcall
mov
and
insb
lahf
jns
rclb
xor
sub
jl
jne
inc
inc
into
pop
cmp
jno
push
shll
push
mov
jae
aas
adcb
loop
mov
mov
inc
mov
cmpsb
aaa
cmpsl
ret
cltd
adc
mull
icebp
pop
dec
xlat
inc
and
sbb
ret
ret
push
xor
and
or
mov
mov
cld
xchg
cmc
add
lret
mov
arpl
cmc
sbb
push
lds
cmpsb
push
mov
push
mov
mov
and
xchg
adc
leave
dec
ret
mov
fsubrs
mov
shlb
jne
out
or
cmp
pop
es
pop
test
sti
je
lea
mov
jle
dec
mov
xchg
mov
mov
and
inc
in
ja
jne
out
pop
mov
mov
movsb
ret
ds
dec
fnstcw
shlb
jns
jmp
sub
sub
pop
adc
aaa
scas
cmp
mov
push
int
and
push
sbb
adc
push
adc
fwait
or
jae
aam
sub
fidivrl
iret
stos
pop
cltd
cwtl
sbb
into
dec
fdivrs
mov
pop
enter
add
orb
decl
out
mov
xchg
lock
xor
sub
sbb
jecxz
gs
jg
jmp
pop
ljmp
es
jbe
loopne
jmp
jmp
inc
and
ja
push
shlb
sahf
insl
ret
popa
add
inc
add
push
lret
lret
cli
push
lea
adc
test
add
xchg
std
or
sub
fwait
sbb
lock
adc
pop
cltd
jno
fs
sub
sahf
or
cmpsb
push
std
js
mov
inc
roll
aad
ds
mov
test
cmp
mov
into
mov
xchg
cwtl
adc
pop
fisttpl
fstpl
cli
jne
mov
iret
arpl
xchg
gs
add
out
jl
testb
jge
negl
popf
in
cmpsl
popa
mulb
push
iret
pop
leave
test
out
pushf
setg
or
rorl
jne
out
ud2
xchg
add
jnp
mov
jg
bound
stos
jmp
ljmp
or
xor
cmc
jnp
mov
call
xchg
adc
mov
in
out
lock
bound
arpl
loop
xchg
and
icebp
fs
bound
sub
xor
stc
mov
jle
push
fisttps
fldenv
loopne
lcall
or
adc
stos
cmp
add
dec
sub
push
loop
jmp
jge
repz
pushf
outsl
ficoml
lods
push
enter
or
mov
sub
sbbb
ljmp
jecxz
pop
ret
ret
push
xchg
repz
mov
movsb
roll
inc
cmpsl
mov
mov
sub
mov
inc
mov
dec
enter
cmp
xchg
jp
insb
loop
je
jl
gs
pop
repz
cmc
pop
or
and
xchg
sbb
aad
lock
loopne
jecxz
jne
add
inc
rolb
sarb
pop
fisttpl
mov
xchg
lock
shll
cmp
push
aas
stos
cmp
or
or
out
je
lea
imul
sbb
aad
int3
pop
lret
pop
ds
mov
cmpsb
addl
dec
lret
lret
mov
inc
mov
outsl
out
jl
notb
leave
dec
frstor
shrl
stc
cwtl
sbb
aad
rcr
pop
repnz
mov
repnz
daa
mov
and
xchg
pushf
sti
push
repnz
sbb
xchg
add
xor
test
sbb
push
xor
push
push
jecxz
push
ret
cmpsb
push
cli
inc
fisttpl
dec
fstpt
inc
daa
shlb
inc
shll
lods
mov
loop
sahf
or
cmpsb
gs
cmp
dec
sbb
xor
arpl
xchg
testb
out
mov
cltd
clc
or
pop
jecxz
push
in
mov
rorl
pop
cmp
sub
mov
inc
mov
and
jo
loop
cmp
in
gs
pushf
outsl
sahf
xlat
pop
repnz
xchg
adcb
andb
out
sbb
dec
rclb
addr16
in
lea
scas
aas
pop
test
int
mov
aaa
outsb
cld
fwait
jbe
test
scas
lret
lods
cmp
mov
inc
mov
mull
icebp
dec
cmc
pusha
notb
inc
and
adc
xchg
cmc
add
addr16
insl
hlt
pop
out
push
popf
or
pop
enter
cltd
push
xchg
repz
mov
push
mov
xor
dec
add
mov
mov
shrb
out
jg
jmp
insl
pushf
imul
mov
push
xor
cmp
mov
mov
xchg
repnz
adc
sbb
adc
dec
xchg
sbb
scas
aas
pop
test
pop
mov
aas
lods
and
sbb
or
jnp
sbb
pop
int3
stos
iretw
stos
lods
lret
inc
icebp
out
loopne
jb
rorb
mov
add
jbe
mov
jbe
jge
negl
push
cltd
sub
and
ss
adc
mulb
push
lods
xor
or
mov
movsl
int3
aas
ret
mov
stc
xchg
adc
push
lds
adc
jle
call
aaa
ret
jle
mov
testl
or
push
jno
inc
inc
iret
pop
cmp
jo
fwait
or
sub
jmp
dec
mov
shlb
xor
adc
pop
iret
stos
pop
into
imul
hlt
pop
mov
fmuls
fdivrs
push
imul
add
adc
xor
dec
cltd
add
or
insb
icebp
popa
add
jbe
sub
push
pushf
sti
push
mov
rcrb
jb
in
fstpl
test
cmpsl
dec
int3
inc
and
mov
js
mov
mov
shll
mov
push
test
push
cli
jg
fs
or
cmpsl
add
gs
sub
gs
pushf
outsl
scas
rcrl
stos
rolw
add
and
fimull
fidivl
les
int3
jge
pop
into
test
out
jo
dec
fisttps
add
and
add
fimuls
add
dec
fistpll
or
mov
dec
mov
cwtl
imul
leave
pop
cmp
add
fs
push
add
push
aad
sub
cmp
push
mov
mov
cwtl
push
imul
jnp
mov
mov
lret
sub
cmp
dec
sub
dec
ret
ret
fisttps
fnstenv
lods
daa
mov
and
cmp
daa
inc
mov
test
and
and
or
ljmp
mov
popa
icebp
nop
arpl
cmp
ds
test
ret
lods
pop
cli
stos
xor
mov
inc
mov
inc
fisttpll
out
adc
stc
gs
pushf
outsl
ljmp
fcompl
stos
scas
call
xorl
pop
fisttpll
out
out
outsl
lcall
movsl
int3
aas
ljmp
ret
mov
cs
mov
sbb
adc
pop
xchg
adc
xchg
sbb
lea
fisttpl
fisttpll
in
lcall
fwait
decb
jmp
repz
gs
adc
mov
jnp
js
ljmp
xorb
ret
push
lds
popf
insb
lret
mov
in
filds
dec
scas
cmpsb
lods
lret
inc
lods
insb
sti
imul
adc
jae
in
nop
or
ret
inc
xlat
mov
xchg
sti
aam
lret
mov
test
pop
test
and
pop
adc
scas
sub
push
les
adc
mov
xchg
add
jae
adcl
lcall
popf
in
mov
sub
lds
mov
scas
lret
jl
addr16
pop
or
or
cmpsb
adc
jo
loop
fmuls
mov
xor
or
push
ret
cmpsb
push
loope
fisttpll
out
rclb
jmp
mov
inc
mov
pop
lds
iret
push
dec
xlat
inc
and
cmp
stos
inc
int3
pop
lret
scas
pop
mov
sub
fistpl
dec
fdivrl
sbb
push
and
dec
jmp
mov
inc
sub
or
inc
and
nop
testl
repz
std
rcrb
test
mov
test
jp
cmp
mov
test
cmp
jecxz
std
test
ficoml
lods
pop
cli
push
outsb
or
dec
mov
mov
and
out
pop
int3
inc
and
out
mov
mov
mov
and
push
mov
mov
dec
movb
pop
lahf
add
xchg
or
in
cld
popf
add
xor
std
insl
hlt
pop
int3
mov
stos
in
insb
loop
je
mov
mov
data16
xchg
outsb
nop
addb
imul
nop
push
popa
nop
js
mov
jle
js
setg
or
int3
inc
fidivrl
cld
fwait
jbe
push
jp
in
dec
out
pusha
notb
mov
and
cld
ja
xorb
cmp
jbe
cmpl
adc
test
jge
and
mov
lods
cmp
jbe
cmpl
xchg
mov
sbb
xor
cmp
scas
cmp
mov
sti
lock
bound
movsb
and
adc
push
je
fs
aaa
stc
jp
jp
inc
push
xor
daa
xchg
adc
pop
jp
imul
dec
mov
insl
pushf
je
adc
mov
jg
push
sarl
pop
sahf
or
cmpsb
push
mov
lcall
xor
mov
push
mov
gs
and
add
pop
jmp
ss
out
jo
push
les
int3
jle
dec
fdivrl
cmp
sbb
mov
js
cs
xchg
cmc
add
out
je
lea
clc
outsb
or
adc
pop
enter
icebp
insl
std
test
dec
aad
sub
pop
xchg
sbb
nop
push
popa
nop
js
dec
fidivrs
dec
fnstsw
push
adcb
cmpb
stos
int
jmp
out
jl
testb
mov
jg
bound
bound
push
lds
mov
jmp
lock
bound
mov
imul
sbb
shlb
xchg
les
mov
dec
jecxz
push
in
push
ret
ret
pop
int
addr16
scas
cmp
cmp
data16
xchg
outsb
punpckhdq
mov
cmpl
adc
or
popf
or
adc
gs
pushf
outsl
ljmp
mov
scas
jp
push
scas
aas
pop
test
cmp
ss
imul
sub
inc
xlat
mov
mov
lcall
sub
mov
jns
push
mov
gs
jo
call
push
mov
jns
das
dec
rclb
adc
inc
aam
dec
mov
popa
add
push
scas
cmp
mov
repnz
xchg
add
cmp
notl
rolb
mov
out
adcl
pop
iret
stos
pop
into
jmp
xor
mov
inc
mov
stos
xor
cwtl
push
imul
jp
jp
jns
jne
out
push
mov
push
roll
rcrl
cmp
cs
test
mov
dec
enter
ss
cmpsl
ret
mov
mov
jge
je
insl
test
xchg
sbb
aad
adc
fistl
cmpsl
push
mov
and
test
jmp
fistl
mov
out
mov
adc
daa
jne
jnp
in
pop
insl
std
test
stos
inc
shll
fnstcw
or
add
leave
push
shll
lds
loop
call
jo
xorl
mov
ljmp
sbb
ret
mov
stos
movb
dec
test
outsb
cld
fwait
jbe
pop
adcb
adcb
test
push
jmp
nop
push
popa
nop
js
outsb
cld
fwait
jbe
popf
push
test
push
cld
arpl
jns
jmp
cmp
cli
je
lea
pop
xchg
repnz
mov
icebp
insb
out
adc
dec
test
push
rcll
push
popa
fisubrs
in
leave
pop
int
xlat
mov
mov
and
fisubrl
pop
into
test
inc
es
sub
and
aad
ret
mov
xchg
xlat
dec
fidivrs
aad
dec
test
dec
sub
push
in
jae
xchg
in
sbb
or
gs
pushf
outsl
xchg
insb
jmp
ret
mov
mov
mov
pop
repnz
fs
cmpsb
xor
push
mov
es
notb
jb
in
mov
call
mov
cmp
jo
cmp
mov
repnz
inc
aam
sub
and
sbb
mov
push
cmpsl
jl
jle
call
and
jns
mov
dec
mov
push
in
jbe
jl
negb
pop
into
test
sub
movb
aad
dec
lret
push
jns
inc
lret
mov
pop
cmp
and
mov
add
divb
xorb
dec
fidivrs
add
jl
pop
lret
scas
pop
test
jo
xorl
xor
pushl
cmpl
sbb
adc
mulb
cmp
lcall
ss
mov
es
dec
fimull
fisubrl
ret
push
lds
mulb
dec
push
lret
pop
ds
stc
jae
xchg
push
rclb
addr16
inc
and
sbb
mov
lds
xchg
mov
lods
and
ds
xor
int
mov
insb
movsl
or
jle
jmp
push
in
add
sahf
or
cmpsb
inc
pop
lahf
punpckhdq
add
sub
dec
sub
adc
jl
jne
insb
jg
imul
or
popa
out
jg
jmp
add
xchg
adc
lret
sub
push
xor
imul
xor
push
jno
xor
xchg
adc
xchg
or
xor
int
mov
mov
inc
mov
cmp
les
xchg
addr16
data16
xchg
outsb
test
dec
sub
int
loopw
loope
adc
data16
outsl
or
into
outsl
in
bound
sub
push
pushf
sti
push
repz
fimuls
sbb
imul
insl
mov
dec
mov
in
add
es
inc
mov
clc
jo
xorl
test
dec
fnstcw
fdivrl
add
push
sbb
pop
bound
out
movsb
mov
xorb
xor
scas
pop
add
or
sub
pop
iret
pop
cmp
pusha
push
rcll
data16
gs
pushf
outsl
scas
mov
xchg
adc
xor
and
push
lds
jle
jbe
loopne
call
cli
mov
repz
sub
lds
jge
je
insl
stos
sub
leave
pop
cmp
aaa
cs
aas
pop
test
inc
mov
push
roll
sarl
ret
mov
nop
testl
fwait
jbe
and
inc
dec
lds
iret
push
cwtl
push
imul
mov
dec
mov
fldcw
sahf
scas
cmp
mov
in
push
sahf
or
cmpsb
pop
jbe
jne
out
inc
fimull
push
out
sti
imul
push
stos
cmp
inc
fisttpl
fnstsw
cmpsl
ret
lret
mov
fnstcw
or
jae
mov
jns
rcpps
inc
and
or
push
xor
hlt
je
lea
xchg
add
jbe
add
std
or
adc
inc
adc
push
push
mov
cmp
push
xchg
repz
in
mov
fildll
pop
mov
fwait
scas
and
cli
push
pop
enter
adc
rclb
push
clc
cld
insb
loop
je
mov
lcall
xor
xor
or
dec
fstpt
test
pop
repnz
fs
inc
fidivrl
mov
test
pop
test
js
jne
out
push
push
ret
cmpsb
push
lcall
inc
lret
pop
ds
xor
pop
and
pop
out
outsl
lcall
int
addr16
dec
iret
pop
cmp
aas
stos
and
call
xchg
sbb
sub
nop
push
popa
nop
aaa
int
shlb
lock
bound
mov
loopne
cmpsl
xor
jl
bound
fstpt
jbe
loopne
pop
roll
aad
sub
xchg
push
xchg
repz
test
je
mov
shlb
jb
jns
jmp
adc
aas
mov
rclb
cmpsl
push
fwait
and
inc
jge
xchg
testb
lcall
cmp
stos
jge
inc
shlb
mov
dec
fistpll
adc
arpl
adcl
test
pop
leave
test
stos
mov
lods
mov
loop
data16
xchg
outsb
mov
out
sub
cmp
mov
inc
mov
lcall
sbb
pop
leave
test
lock
inc
xlat
mov
std
push
ret
ret
or
in
mov
mov
jns
jno
jecxz
cs
outsb
mulb
adc
mov
inc
mov
lahf
pop
xchg
repnz
mov
jnp
pop
scas
xor
pop
xchg
repnz
jge
je
pusha
daa
cmpsl
aaa
push
mov
shll
testl
ss
inc
mov
push
fimuls
adc
xor
adc
rcrl
test
and
adc
mov
popa
icebp
nop
arpl
jecxz
and
and
mov
or
push
gs
imul
dec
inc
rolb
sarb
sbb
insl
std
test
pop
enter
jg
out
adc
dec
jecxz
out
mov
and
sub
leave
pop
cmp
and
popa
icebp
nop
arpl
ficomps
jns
mov
add
sub
pop
dec
int3
inc
and
stos
int
mov
jns
jbe
sbb
inc
mov
mov
stc
imul
mov
and
or
sbb
insb
or
loop
repnz
pop
repnz
mov
add
ret
push
lds
out
lock
lds
pop
and
arpl
pop
ds
sbb
dec
jecxz
push
in
pusha
mulb
dec
aas
test
pop
test
mov
mov
sbb
shrl
pop
cmp
adc
fstpt
sub
inc
fmuls
fdivs
cmpsl
aas
scas
lret
ss
aas
pop
test
jecxz
xlat
fstpl
stos
data16
jl
negb
mov
movsl
int3
aas
fcomps
dec
sub
es
sbb
sub
push
mov
es
insb
out
adc
sbb
or
out
sbb
sub
cmp
pop
movsb
sub
lret
lret
insb
loop
je
xchg
sbb
mov
inc
mov
pop
lret
lret
lret
lret
cmp
jp
bound
repnz
fs
jno
xorb
inc
mov
out
and
inc
xlat
mov
lods
adc
add
jle
leave
pop
cmp
and
mov
dec
int3
addb
testl
lret
inc
scas
cmp
push
xor
mov
movsl
jg
out
notb
test
dec
ret
mov
cmp
shlb
sbb
mov
int3
jp
push
cld
pop
imul
addr16
lods
daa
mov
and
mov
dec
frstor
insb
lahf
sub
stos
cmp
add
sahf
or
cmpsb
adc
outsl
lcall
stc
cwtl
imul
fmuls
fdivrs
cmp
inc
shll
stos
into
cmp
sub
xor
pop
filds
dec
sub
popa
adc
jmp
cltd
push
pop
loop
cmp
and
dec
sub
daa
nop
adc
and
fistpl
stos
mov
jo
xorl
xor
add
adc
icebp
ficoms
mov
cmc
pushf
outsl
mov
add
pop
fisttpl
fnstsw
push
cmp
jnp
imul
and
inc
aam
dec
out
outsb
cld
fwait
jbe
jb
jnp
in
inc
sbb
in
js
mov
sbb
and
xchg
adc
dec
fidivrs
hlt
xchg
outsb
jmp
arpl
stc
jns
mov
mov
rcl
push
shll
inc
mov
mov
push
aam
sub
loop
je
cmp
or
ret
mov
popf
in
icebp
mov
fistpl
fwait
or
cmp
xor
sub
lds
or
adc
cmp
test
aam
fidivrl
xchg
icebp
add
add
pop
stos
add
inc
shlb
jecxz
jne
jb
jle
call
popa
nop
jb
rclb
sub
imul
ret
push
lds
lahf
cli
or
mov
dec
roll
aad
mov
mov
or
sti
imul
add
jge
xchg
adc
sub
lds
or
adc
mov
and
insl
std
test
fstl
pop
scas
push
nop
push
popa
nop
aaa
sub
add
outsb
cld
fwait
jbe
mov
sub
in
mov
cmp
jl
adcl
mulb
dec
ret
scas
pop
bnd
jge
testl
test
fstpt
leave
outsl
cmc
gs
pop
inc
fmuls
fdivs
sub
and
xor
push
rclb
fldt
shll
test
fwait
decb
cmp
sub
jbe
cmpl
or
in
loope
xor
repnz
pop
repnz
insb
loop
je
test
lret
lods
and
es
pop
test
sub
add
push
jns
dec
test
lahf
cli
or
jmp
scas
pop
repz
pop
leave
test
call
xor
or
mov
rclb
jmp
int3
inc
and
es
mov
enter
push
mov
add
sti
imul
adc
imul
jl
jg
mov
push
inc
and
pop
dec
int
and
cmp
lret
and
dec
frstor
cmp
aaa
ja
add
daa
or
mov
xchg
sbb
mov
shll
lahf
cli
or
mov
shlb
mov
sub
insl
or
out
popa
icebp
nop
arpl
in
jge
je
xor
push
aaa
ret
es
cs
push
popf
or
mov
pop
mov
jns
and
mov
jb
jne
out
dec
insb
mulb
cmp
shlb
adc
jae
js
ljmp
sbbb
ds
mov
icebp
sbb
or
mov
dec
mov
mov
and
mov
aad
repz
pop
icebp
je
lea
push
xor
cmp
mov
pop
mov
test
in
out
sub
inc
aam
dec
lcall
dec
ret
ret
inc
shll
es
mov
arpl
popa
add
inc
mov
lcall
jno
je
out
inc
push
shlb
xorl
lret
rcll
and
push
lret
mov
les
int3
and
jecxz
push
in
adc
sbb
push
xchg
adc
in
sbb
incb
xchg
xchg
repz
out
fs
popf
insb
mov
jae
in
rolb
dec
lcall
ret
mov
push
xor
in
mov
inc
mov
push
sbb
inc
xlat
mov
call
push
ficompl
movsb
das
mov
mov
jg
cmp
daa
mov
and
sub
lds
jb
xchg
sub
push
lds
sahf
or
cmpsb
adc
inc
sub
jp
sub
dec
roll
shll
push
roll
aad
filds
mov
cmpsb
cltd
add
mov
in
sbb
pop
fimull
ficoml
pop
fdivl
in
xlat
push
lds
decl
out
sbb
add
aam
sub
pushf
sti
push
mov
scas
lret
loopne
stc
cwtl
imul
in
jge
testl
scas
or
dec
fdivrs
lcall
sbb
cs
and
cltd
or
xor
popf
or
enter
popa
adc
and
and
sbb
adcl
fimull
fidivrl
outsb
cld
fwait
jbe
mov
mov
sbb
lods
pop
mov
lea
insb
or
orl
sbb
mov
jg
inc
stos
sub
lret
lret
xchg
add
jbe
rcll
aas
int
fdivrs
shlb
arpl
shlb
fcompl
repz
clc
lahf
push
mov
int3
pop
rolb
shlb
mov
inc
mov
outsb
loop
pop
loop
lahf
adc
scas
aas
pop
test
cld
shld
notl
stos
into
cmp
xchg
popa
fisttpll
popf
or
mov
cmp
xor
jbe
loopne
adc
add
stos
cmp
inc
enter
push
mov
rolb
rclb
xchg
add
adc
popf
push
pop
fisttpll
out
in
sti
sahf
insl
sub
clc
lahf
push
repz
mov
roll
dec
cltd
in
notb
mov
popa
icebp
nop
arpl
dec
test
push
ret
cmpsb
push
mov
mov
imul
dec
fidivrs
dec
das
ficompl
and
cmp
add
pusha
notb
sbb
xchg
daa
jae
jo
loop
enter
data16
scas
cmp
mov
je
jbe
loopne
adc
and
sub
movb
add
js
mov
fiadds
mov
mov
sbb
xor
lods
bound
push
aaa
ret
ljmp
xlat
mov
stos
scas
das
mov
cmp
lods
cmp
cmpsb
xor
scas
inc
leave
inc
shll
add
jo
pop
iret
inc
aam
dec
mov
jecxz
cld
jno
xorb
jle
mov
scas
pop
std
scas
inc
shll
pop
cmp
popa
rcll
push
out
cmc
fs
popf
insb
lds
xchg
add
adcb
subb
inc
shlb
xor
add
and
icebp
push
lahf
push
mov
jmp
cwtl
out
jo
xorl
push
jle
inc
pop
lret
scas
pop
mov
loope
adc
or
mov
stos
into
cmp
pop
repnz
pop
xchg
orb
decb
shlb
ficomps
scas
pop
mov
outsl
mov
imul
push
xor
imul
out
popa
icebp
nop
arpl
cmpsl
add
addr16
dec
xchg
add
or
pusha
mull
icebp
push
mov
mov
es
roll
dec
in
dec
ret
jecxz
push
les
dec
fstpl
and
sub
cs
xor
and
test
jge
or
in
ss
cmp
in
jae
xchg
add
dec
fdivrl
pop
cmp
and
testl
cmp
inc
into
pop
cmp
xor
lcall
dec
fnstsw
or
dec
sub
cmp
pop
lret
scas
pop
in
xor
xor
pop
xchg
adc
lock
fisttps
mov
and
mov
push
jecxz
sub
inc
shll
sub
and
jmp
xor
fwait
or
push
xor
dec
jns
imul
fidivrl
xchg
icebp
add
push
xchg
add
jns
mov
movsb
and
mov
lock
mov
gs
jge
testl
les
xchg
and
xor
inc
fidivrl
leave
test
lea
popf
or
or
add
std
or
in
jle
mov
mov
addr16
push
xor
inc
rolb
sarb
add
pop
xchg
repnz
xor
lods
movsb
ret
fsubrl
popa
add
sbb
mov
ret
pushf
sti
push
xchg
cmp
mov
lahf
cli
or
ja
gs
adc
flds
sub
push
call
mov
xchg
pusha
xchg
adc
mov
ret
out
jecxz
jne
outsl
in
sbb
or
dec
push
xor
imul
mov
imul
insl
test
std
pop
push
rcll
ja
mov
mov
cmpb
pop
lret
lret
in
bound
loop
je
aam
xlat
mov
call
aas
and
mov
and
clc
or
ja
jg
jmp
add
ja
sahf
or
cmpsb
outsl
push
xchg
add
jnp
push
shll
add
int3
stos
cbtw
call
mov
cwtl
insl
and
aaa
ret
push
lds
jnp
add
adc
dec
fidivrs
mov
and
ja
outsl
or
mov
pop
jnp
gs
aas
cmpsl
sub
hlt
push
cld
dec
sbb
fmuls
mov
fistpll
sti
sahf
insl
fnstcw
sbb
inc
push
shll
cmc
add
mov
stc
insl
mulb
sbb
icebp
popa
add
sbb
lock
xor
outsb
cld
fwait
jbe
xor
je
xchg
add
jnp
int3
inc
and
dec
sub
cmp
rolb
shrb
push
lret
mov
jp
jp
movsb
daa
mov
and
pop
repnz
fs
cs
cmp
dec
pop
aad
sub
cmp
lock
bound
notb
outsl
lcall
jmp
jge
fs
jg
jmp
lret
mulb
push
das
mov
and
adc
inc
repz
jl
negb
sti
imul
dec
jbe
jno
jecxz
jmp
mov
pop
jp
jne
into
pop
cmp
cmp
pop
jp
jg
lods
lret
inc
rcll
pop
fistl
imul
pop
fimull
fidivl
out
hlt
xchg
outsb
mov
lahf
punpckhdq
bound
mov
mov
sub
xchg
add
pusha
scas
and
idivb
mov
sub
sub
fwait
or
cmp
or
and
cmp
mov
jecxz
mov
push
mov
jle
and
xchg
mov
sahf
push
adcb
xorb
sub
lods
cmp
insl
std
test
mov
call
cmp
xor
pop
data16
insl
hlt
pop
in
insb
repnz
pop
bnd
mov
inc
mov
lahf
and
jg
mov
push
les
mov
fisttps
fstps
push
fisttpl
fisttpll
and
gs
pushf
outsl
test
test
fistl
mov
jle
call
push
movsb
push
lock
mov
pop
scas
jns
roll
aad
sbb
aaa
arpl
addr16
dec
out
adcl
test
sub
jb
adcb
subb
daa
mov
and
aas
xchg
cwtl
or
in
mov
subl
pushf
pop
sub
and
inc
shll
mov
sbb
seta
bound
xor
inc
in
insl
std
test
mov
cwtl
decl
loop
mov
leave
dec
fidivrs
jle
call
sahf
insl
mov
dec
mov
push
mov
das
fidivrs
push
cld
push
sahf
push
test
push
cli
ds
dec
mov
and
jbe
mov
inc
mov
imul
std
jo
xorl
inc
stc
aaa
movsb
cmp
add
push
test
in
sbb
mov
mov
es
xchg
pop
xchg
repnz
fildll
jg
mov
mov
mov
ja
xorb
add
xor
pop
sbb
ss
aas
pop
test
pop
lods
gs
mov
setg
or
mov
cmpsb
dec
enter
ss
notl
jo
loop
cmp
das
dec
mov
push
mov
lret
inc
movsb
clc
jo
xorl
cmc
add
sbb
sub
inc
xchg
add
push
add
das
roll
mov
stc
ss
cmp
add
mov
js
jg
jmp
jle
cmp
jl
negb
add
aaa
cmpsl
ret
and
sub
movb
lea
cwtl
push
imul
add
inc
shll
fstpt
test
pop
cmc
in
jae
xchg
inc
rclb
and
xchg
outsl
jns
insb
or
shll
ss
mov
inc
mov
or
fcoms
mov
in
jg
jbe
insl
hlt
pop
div
js
mov
jp
imul
das
orb
adc
pop
roll
shll
pusha
notb
ret
cmpsb
push
cli
mov
cmp
sbb
add
or
pop
out
jo
jnp
in
dec
sub
mov
fcmovb
arpl
xchg
gs
push
lret
mov
das
mov
lods
and
xor
nop
push
popa
nop
pop
rcll
cmpsl
push
mov
int3
and
adcl
test
jnp
mov
pop
fimull
fimull
lret
cmp
in
sbb
cmpsb
shll
lcall
push
test
push
cli
fsts
mov
fidivrs
insl
hlt
pop
rorl
iret
cmp
cmp
add
pop
leave
test
lock
sahf
or
cmpsb
pop
mov
andb
add
dec
jnp
bound
dec
adc
push
ds
jno
jns
jmp
imul
in
je
lea
inc
shll
fidivrl
sub
mov
enter
dec
mov
ret
enter
sub
push
stos
xchg
adc
inc
aam
dec
mov
out
icebp
jns
mov
das
movsb
cmp
dec
or
lock
mov
insb
loop
pop
loop
push
cmp
movsb
cmp
outsb
sub
aaa
push
mov
sub
push
inc
fisttpl
fnsave
insl
std
test
sub
insl
push
adcb
xorb
inc
shll
enter
pop
roll
aad
lea
ljmp
cmp
repnz
pop
repnz
lahf
punpckhdq
cltd
push
or
xor
xchg
cmc
add
dec
lret
lret
sbb
xchg
add
sahf
pusha
push
xchg
pop
bound
shrl
gs
adc
bound
ds
push
outsl
out
adc
sbb
popf
cmp
into
pop
cmp
add
idivb
adcl
loop
test
pop
lock
push
xor
jle
cld
xchg
cmc
add
ret
lods
pop
out
jae
jp
in
inc
lret
stos
shrw
pop
push
int3
inc
and
sub
pop
jmp
loope
jae
xchg
or
in
cld
les
scas
pop
fstl
pop
and
push
in
cmc
pushf
outsl
movsb
gs
adc
push
addb
icebp
add
add
loope
cmc
pushf
outsl
xchg
inc
rcll
push
xchg
adc
adc
sbb
fcoms
mov
mov
fidivrs
hlt
xchg
outsb
leave
lret
mov
in
je
inc
jg
pusha
pop
repnz
inc
fidivrl
hlt
xchg
outsb
mov
mov
sbb
lea
adc
inc
inc
and
ja
jno
xorb
mov
ljmp
rcll
and
jae
in
push
test
push
mulb
mov
mov
test
dec
fdivrs
loope
jae
lahf
sbb
push
aad
sub
cmp
jp
in
adc
mov
inc
mov
movl
in
bound
fistpll
and
loopne
adc
add
dec
ret
cmpsl
das
cmpsl
aaa
push
mov
jl
pop
mov
icebp
clc
jnp
mov
stos
cmp
int
and
jl
jb
xchg
or
xor
or
testb
pop
bound
add
inc
xchg
pop
xchg
repnz
iret
push
mov
ret
lahf
cli
or
out
in
je
insl
lea
and
fdivrs
sub
jo
pop
leave
test
mov
pop
xchg
adc
inc
rclb
and
or
loopne
cmc
pushf
outsl
mov
xor
or
adc
and
into
dec
fstpt
shll
jae
in
aam
enter
sahf
pop
xchg
adc
push
fmuls
fcomps
ret
dec
fdivrl
push
popa
nop
mov
inc
aam
sub
frstor
add
dec
cltd
push
pushf
sti
push
mov
or
in
dec
es
test
rol
pop
into
test
fwait
decb
xorb
adc
in
sbb
outsl
repz
cmc
cmp
mov
movsb
ret
ds
ficompl
test
mov
sarb
test
pop
test
lock
lea
mov
in
data16
xchg
outsb
popf
cmp
pop
aad
sub
cmp
ja
xorb
cli
push
cli
push
cmp
mov
xchg
pop
cmp
outsb
out
adcl
test
or
pop
in
jb
jno
jecxz
into
pop
into
test
lret
scas
pop
repnz
sbb
inc
and
jns
or
ljmp
push
xor
sub
in
cmp
push
ret
cmpsb
push
aam
call
xor
jl
xchg
cmc
add
pop
fimuls
add
addr16
add
pop
cmp
pop
fistpl
xchg
addr16
xchg
adc
stos
cmp
pop
jbe
xchg
testb
pop
icebp
fcoms
mov
aam
adcb
lock
jne
inc
jmpw
jmp
dec
fimuls
push
push
fwait
or
xor
xchg
mov
mov
and
inc
std
ljmp
cltd
push
and
bound
inc
and
ja
sub
and
ret
ret
add
ret
ret
sub
imul
out
adc
push
cmp
sub
jle
mov
aas
lret
setg
or
inc
ret
ret
push
lds
sbb
sbb
dec
sub
add
in
or
pop
into
test
daa
inc
mov
mov
shll
push
xor
or
jmp
push
in
dec
dec
fmuls
fsubrs
lahf
punpckhdq
mov
xor
add
aas
xchg
add
and
popa
icebp
nop
arpl
scas
cmp
stos
cmp
dec
lock
push
test
push
imulb
mov
pop
cwtl
push
imul
dec
fstpt
add
sbb
scas
cmp
mov
mov
les
cwtl
push
imul
mov
inc
mov
jmp
xchg
sub
stc
ja
xorb
cmc
gs
push
idivl
mov
jle
addr16
sub
dec
adc
daa
push
fdivl
in
add
out
jl
jne
sub
adc
call
lock
rorb
ret
push
lds
in
mov
mov
hlt
insl
std
test
cmp
pop
ret
ret
and
inc
fimuls
popa
divb
jl
cwtl
sbb
int3
inc
and
xchg
repnz
pop
fisttpll
out
adc
add
inc
sbb
mov
movsl
int3
aas
aad
test
pop
test
mov
lods
mov
cmpsl
adc
inc
rcrl
scas
pop
test
add
mov
and
jbe
mull
icebp
pop
adcl
loop
test
lcall
in
mov
js
and
orl
adc
dec
sub
mov
push
xchg
repz
int
mov
inc
mov
dec
rolb
sarb
lods
cmp
adc
add
mov
pop
pushf
xor
dec
pop
test
ljmp
std
test
addl
or
mov
mov
js
mov
mov
into
std
jbe
cmpl
xlat
inc
and
cmp
into
inc
mov
out
and
fwait
or
pop
cmp
daa
inc
mov
push
lret
pop
ds
adc
dec
fisttpll
out
inc
aad
sub
je
rclb
jb
mov
inc
mov
stos
cmp
xlat
inc
shlb
mov
and
jg
jp
in
push
push
lret
lret
dec
frstor
xor
insb
jmp
xchg
add
pop
xlat
push
lret
mov
sub
xchg
jb
push
insl
std
test
call
mov
sub
jle
imul
push
cld
cmpxchg8b
push
mov
dec
fnstcw
adc
jb
aam
sub
pop
bound
loope
shrb
mov
rolb
mov
divb
sbbb
push
lret
pop
ds
push
push
xor
jl
std
insl
hlt
pop
lods
and
push
cltd
or
cmpsb
cmp
mov
xchg
loop
xchg
add
js
mov
jle
arpl
mov
push
shlb
push
mov
push
mov
fsubrs
shll
xor
scas
dec
test
nop
testl
inc
mov
xor
xchg
adc
push
xor
cmp
xchg
mov
movsl
int3
aas
fnstcw
push
std
or
xchg
adc
push
mov
scas
lret
mov
xchg
inc
fisttpl
xchg
jb
es
mov
js
and
pop
cmp
jnp
out
jg
jmp
cmpsb
push
in
jp
jp
jne
jge
divl
outsl
popf
rorl
mov
sti
scas
incb
add
jns
mulb
or
mov
or
and
lea
jmp
mov
add
add
jmp
push
jge
negl
outsl
sahf
jne
jmp
in
popl
jmp
or
or
pop
inc
jmp
call
jmp
inc
lret
lret
or
je
popa
mov
jmp
jno
outsl
or
jecxz
or
sub
jmp
std
call
jmp
movsl
xor
stos
ss
dec
push
dec
dec
push
inc
push
dec
cs
dec
dec
add
nop
cwtl
xchg
jmp
xor
push
call
jmp
loope
aas
xor
push
mov
call
jmp
inc
enter
outsl
iret
je
in
out
push
jmp
sub
jmp
call
jmp
repz
jne
push
mov
outsl
mov
add
inc
gs
fs
jo
gs
dec
outsb
outsw
add
leave
xor
mov
xchg
sub
add
cmp
pushl
mov
cmp
inc
and
jmp
popf
imul
add
jmp
mov
pushf
sbb
pop
push
pop
adc
ror
popf
and
sbb
push
push
add
adc
inc
lret
cmpl
mov
clc
mov
dec
or
mov
int3
popf
jmp
setge
scas
popf
lea
ret
popa
ret
xlat
fists
es
jmp
xor
add
add
xchg
push
add
push
lds
xor
je
jmp
mov
fnsave
call
jmp
addr16
pop
fucomip
add
add
jmp
pop
leave
pop
cmp
jle
movsl
mov
mov
mov
jo
call
jmp
pop
iret
pop
cmp
jo
pop
sub
inc
lret
and
jmp
popl
imul
outsl
fmul
mov
add
add
jmp
divl
xchg
mov
sysret
adc
mov
add
cmp
jmp
pop
repnz
xchg
test
add
add
popa
jmp
xchg
lock
call
jmp
int3
pop
lret
scas
pop
mov
popa
icebp
nop
arpl
pop
lds
add
add
add
add
jmp
arpl
and
popf
adc
xor
add
jecxz
adc
add
mov
ret
inc
call
jmp
add
inc
ret
ret
loope
xchg
jmp
call
jmp
addl
lock
jmp
clc
lahf
push
shr
xorb
dec
adc
lock
jmp
mov
stos
into
cmp
cwtl
imul
add
add
mov
movzbl
jmp
inc
sbb
inc
push
lret
jge
add
add
jmp
xchg
adc
and
cltd
roll
add
jne
addl
jmp
dec
int3
inc
and
std
mov
jmp
call
jmp
aas
mov
push
sub
mov
cmp
je
jmp
mov
enter
mov
add
dec
frstor
fdivrs
popl
jmp
sub
call
jmp
call
pushf
movsb
sub
jne
addl
mov
jmp
mov
sub
add
adc
add
mov
fwait
decb
popf
insb
mov
add
lret
jmp
pop
xchg
cmp
call
jmp
add
push
jns
dec
iret
repz
call
push
push
inc
push
xor
cs
insb
add
daa
orl
insb
loop
je
jg
shll
jmp
call
jmp
mov
mov
and
call
jmp
call
jmp
in
ljmp
lea
push
pushf
addl
pusha
jmp
sub
jmp
inc
call
jmp
lods
inc
shll
punpckhdq
ficompl
xor
adc
adc
push
add
add
jmp
inc
inc
and
ja
mov
pop
call
jmp
outsl
inc
xor
jl
movl
add
xchg
cltd
push
jmp
fucomi
add
add
jmp
mov
mov
jbe
xor
imul
adc
inc
and
jmp
je
ficoml
pop
mov
jmp
add
inc
insb
pop
call
jmp
cld
outsl
lcall
testb
inc
sub
push
mov
jmp
ljmp
int3
popf
cmpsb
xor
push
xor
push
add
mov
int
clc
call
dec
jo
outsb
inc
insb
imul
add
mov
loope
incl
jmp
int3
popf
and
pop
int3
inc
and
into
adc
add
jno
aaa
int3
popf
roll
mov
lock
pop
cmc
call
jmp
ljmp
cli
mov
mov
ret
popa
jmp
jo
jmp
cld
and
add
add
jmp
fwait
or
or
mov
mov
andb
sub
jmp
call
ja
jo
imul
sub
add
test
inc
adc
call
jmp
adc
jg
xchg
cmc
add
sub
inc
and
popf
pushl
mov
jmp
mov
xchg
cmp
jmp
icebp
jbe
mov
add
add
aaa
in
add
add
jmp
sahf
push
mov
es
idiv
pop
and
jmp
fbstp
add
add
jmp
aad
lret
mov
jns
mov
add
jmp
pushf
sbb
fimull
test
jmp
call
mov
jmp
or
push
adc
popf
nop
loop
out
mov
add
rcrl
scas
pop
scas
sbb
int3
push
fadds
fsubr
push
pushl
add
sbb
dec
das
fisubrl
add
lock
jmp
jmp
call
jmp
call
jmp
pop
aad
sub
aas
jmp
pushf
jmp
xchg
mov
add
add
jmp
xor
daa
cs
lods
popl
jmp
out
add
add
jmp
nop
pop
lea
xchg
lock
add
cmp
je
popa
mov
jmp
call
jmp
arpl
cmc
daa
mov
sldt
add
jo
jns
insb
imul
add
push
pop
call
jmp
call
jmp
adc
out
xor
loopne
or
add
ja
jo
imul
dec
cwtl
add
int3
inc
xlat
mov
call
push
mov
in
jmp
loope
push
movw
jmp
mov
xchg
jp
in
inc
push
lret
pop
ds
inc
aam
sub
or
sub
mov
movl
jmp
movsb
push
out
shlb
popf
ret
aam
iret
arpl
pop
push
jmp
push
xchg
jb
es
xchg
outsb
fnstenv
movsb
cmp
or
push
movzbl
add
jmp
pop
rclb
add
shl
adc
imul
sbb
pop
push
xor
dec
xchg
or
fisttpl
fstl
ret
in
inc
and
popa
incl
jmp
addb
lock
adc
ficompl
test
mov
push
jmp
push
jno
pop
jmp
jmp
jecxz
jne
mov
cltd
clc
or
fstpl
stos
pop
xchg
divb
xorb
stos
test
add
inc
push
xor
cs
insb
add
out
lcall
xor
mov
xchg
add
add
int3
into
dec
fstpt
loop
loope
pop
sub
jmp
movsb
ret
and
int
decl
popa
jmp
fstpl
scas
pop
mov
push
mov
loopne
push
lahf
punpckhdq
mov
mov
mov
andb
sub
jmp
dec
lret
pop
ds
daa
stos
cmp
or
dec
xchg
add
jnp
pop
mov
ret
cmp
add
dec
sub
jo
adcl
test
jae
jbe
xchg
popf
pushl
mov
jmp
cmp
add
xlat
mov
jmp
sub
push
lds
mov
and
out
jns
xchg
add
jmp
dec
fisttpl
fnstsw
push
int
and
aas
hlt
pop
and
jmp
dec
roll
sarl
jle
jbe
loopne
jmp
ljmp
mov
lea
push
pushf
addl
pusha
jmp
sbb
dec
lds
mov
push
push
sub
jmp
rcll
cmpsl
push
mov
aam
sub
mov
clc
outsb
or
or
fistpl
add
add
pop
pusha
jmp
push
in
add
pop
lret
scas
pop
test
sub
cmpsl
sub
push
rorl
mov
add
cmp
je
jmp
mov
les
test
dec
or
mov
out
xchg
add
push
fwait
loopne
mov
mov
movzbl
add
cmp
jmp
mov
je
decl
push
xor
imul
xor
inc
and
ja
cmp
push
xchg
popa
mov
jmp
adcb
scas
pop
jmp
in
call
jmp
adcb
loopne
mov
loopne
mov
mov
and
call
push
push
inc
push
xor
cs
insb
add
rclb
xor
ja
add
mov
inc
mov
movsb
cmp
jl
jmp
xchg
aam
ret
cmpsb
push
mov
push
jmp
or
sub
lods
sub
jo
popa
add
sbb
add
push
gs
insb
imul
inc
popa
je
add
lret
mov
rcll
ret
xor
add
inc
idiv
incl
xchg
mov
and
jge
pop
arpl
jmp
jmp
jl
imul
stos
int
leave
mov
movsb
ret
ds
fxrstor
adc
pushf
add
add
dec
lds
iret
das
cmp
pop
popl
lea
push
pushf
addl
jmp
lods
jo
call
jmp
rcr
aam
incl
jmp
cmp
mov
jmp
pop
xlat
inc
and
sub
and
xor
aam
or
cmp
pop
adc
fisttpll
out
mov
xchg
jne
ja
lahf
popa
jmp
cmp
push
mov
and
sbb
xchg
xorl
mov
stos
popf
ret
cmp
es
pop
jmp
dec
fimull
fisubrl
cwtl
push
imul
adc
pusha
mov
mov
mov
andb
sub
jo
jmp
setnp
outsb
popf
pop
inc
mov
mov
mov
andb
sub
jmp
add
mov
mov
leave
fisttpl
mov
mov
push
jnp
stc
jmp
cmp
push
test
jge
inc
xor
push
ljmp
das
pusha
jmp
mov
xor
call
inc
adc
jg
mov
mov
xchg
lods
das
mov
loope
jns
mov
jmp
fstps
cmpl
xchg
adc
in
sbb
cld
jbe
cmpl
or
mov
and
cmp
jne
addl
jmp
stos
dec
popl
jmp
or
inc
int3
inc
and
lcall
push
jmp
mov
orl
xor
jne
outsl
or
aad
dec
ljmp
adc
mov
jmp
jbe
jnp
in
inc
xor
ret
mov
xchg
adc
repnz
jmp
shrb
mov
xchg
roll
push
sahf
stc
or
xchg
xor
xchg
pusha
jmp
sbb
mov
and
mov
and
sub
mov
add
cmp
jmp
push
popa
gs
addl
jmp
cmpsl
lods
lret
inc
scas
ret
jmp
out
or
push
fucomi
or
add
push
push
inc
push
xor
cs
insb
add
dec
sub
dec
dec
adc
pop
sub
add
xchg
popf
pushl
jmp
rep
loop
je
outsl
repz
cmc
cmp
inc
shlb
sub
jmp
jl
xchg
cmc
add
stos
call
jmp
std
jl
jne
popa
and
mov
inc
mov
pushf
jmp
out
adc
sbb
push
mov
std
jbe
cmpl
cmp
sbb
adc
ret
push
lds
orl
insl
loope
adc
inc
cmpsb
scas
jl
insl
pop
sub
mov
movl
jmp
pop
roll
roll
jb
jecxz
pop
push
add
movzbl
jmp
mov
cwtl
pop
mov
jle
cmp
out
inc
sub
sub
mov
popa
incl
popf
ret
inc
add
sti
xor
mov
jmp
fisttps
movsb
push
in
push
shlb
insl
pushf
cs
xchg
jb
repnz
out
jmp
mov
mov
jmp
pop
jmp
inc
mov
rolb
iret
jmp
adc
push
adcl
push
pushf
sti
push
aad
sub
call
jmp
and
dec
test
pusha
jmp
jp
ja
loope
sbb
jmp
cwtl
xor
cmp
sub
jmp
mov
cmp
inc
jmp
add
xor
dec
sub
pop
out
sti
sahf
insl
mov
push
pop
fimull
fidivl
pop
xchg
popf
pushl
mov
jmp
testb
cmp
xlat
push
mov
aad
dec
lcall
in
mov
jmp
loopne
sti
sahf
insl
subl
xor
jmp
push
in
sets
call
jmp
sub
jmp
rcrl
scas
pop
test
jle
xor
sub
insl
ret
dec
frstor
call
inc
insb
outsl
jae
inc
insb
imul
add
or
jmp
addl
jmp
push
xchg
add
sbb
arpl
add
pop
mov
ja
and
add
mov
and
cmp
jne
jmp
jge
ss
inc
stc
jmp
cmp
inc
xlat
inc
and
jbe
sbb
inc
aad
dec
in
stc
ret
lea
push
pushf
addl
jmp
mov
pop
into
pop
cmp
jno
movsb
ret
ds
movsl
mov
pusha
jmp
pop
jmp
add
rorb
mov
jg
jmp
nop
arpl
or
add
jmp
flds
mov
leave
cmp
sub
jmp
push
push
jmp
pop
jmp
mov
jmp
cmp
decl
loop
fwait
or
jle
adc
test
add
add
rolb
add
jmp
jmp
jecxz
jne
les
mov
xchg
jnp
and
add
add
inc
gs
outsl
insb
fs
popa
je
inc
add
movsb
int
call
jmp
sub
jmp
or
leave
dec
ret
mov
ret
jp
jp
sbb
add
inc
dec
dec
xor
cs
insb
add
nop
push
sahf
movsb
mov
jmp
xor
daa
and
shll
xchg
les
sbb
cmp
movl
push
fimuls
xor
into
sub
sbb
push
insb
popa
jmp
popf
ret
dec
jecxz
push
in
add
push
lods
movzbl
jmp
mov
mov
ljmp
in
mov
sahf
insl
ret
rorb
adc
adcl
cltd
aad
xlat
mov
clc
and
lods
xor
xchg
or
or
mov
adc
jmp
hlt
insl
std
test
js
jbe
loopne
mov
mov
mov
movzbl
add
cmp
jmp
push
into
pop
cmp
push
add
fisttpl
fstl
adc
sti
jmp
je
jmp
call
andl
cmpsb
es
cs
lock
xorb
xchg
adc
xchg
add
xchg
jmp
sub
push
xchg
pop
xchg
adc
mov
movsb
ret
ds
and
aaa
push
mov
jmp
jg
mov
jmp
bnd
mov
dec
lret
pop
ds
stos
and
push
pop
jmp
mov
pushl
jmp
jmp
add
lods
and
icebp
popa
add
and
mov
popa
mov
ret
adc
mov
jmp
sahf
adc
inc
fidivrl
imul
jmp
mov
and
cmp
jne
addl
jmp
imul
jecxz
xchg
cmp
jmp
call
leave
sbb
setg
push
adc
push
stc
out
sbb
and
add
test
adc
and
mov
insl
push
cs
mov
ret
mov
cmp
jmp
aas
cmc
xor
add
jmp
pop
pop
jmp
faddl
dec
cmpsb
and
push
lds
mov
in
sbb
fs
imul
cmp
popa
mov
jmp
stos
das
mov
imul
insl
andl
icebp
lea
push
pushf
addl
pusha
jmp
xchg
shr
or
push
dec
dec
push
inc
push
dec
cs
dec
dec
add
sbb
pop
lret
scas
pop
mov
jge
je
pusha
xchg
sub
jmp
xchg
jb
cmp
jmp
push
adcb
cmpb
notl
fwait
decb
int3
popf
inc
rcll
xor
lods
and
pop
xlat
add
mov
pushl
popa
add
sbb
mov
inc
mov
mov
shrb
pusha
mov
mov
mov
andb
sub
jo
jmp
dec
rclb
and
fwait
or
push
test
call
inc
gs
fs
jo
gs
dec
outsb
outsw
add
pop
pop
jmp
fists
mov
sbbl
and
clc
add
add
popa
icebp
nop
arpl
lds
jb
in
mov
mov
and
add
jmp
sub
jmp
mov
and
in
jg
add
stos
xchg
mov
mov
or
andl
ret
jmp
ds
aas
pop
test
pop
test
inc
mov
data16
xchg
cmc
add
sub
sti
fsubs
dec
pop
je
jmp
jg
clc
sub
xchg
stos
filds
filds
pushl
jmp
div
xchg
movsl
mov
jmp
arpl
outsb
or
sbb
add
jle
or
adc
push
cwtl
push
lea
fstpl
adcb
addb
hlt
mov
jmp
movsl
popa
jmp
in
cmc
pushf
outsl
movsb
sbb
dec
movl
int3
inc
and
cs
jmp
mov
ret
pusha
out
adc
adc
arpl
xchg
gs
mov
jg
jg
jb
add
call
lock
bound
inc
mov
dec
scas
cmp
inc
lock
jmp
push
fimuls
adc
enter
aam
icebp
xor
pushf
jmp
insb
out
adc
dec
pushf
push
pushf
sti
push
mov
subb
adcl
test
pop
pop
push
jmp
cmpsl
movsb
ret
ds
aad
shll
jl
fimull
add
mov
add
loopne
in
jg
xor
sbb
cmp
jo
movzbl
add
cmp
je
jmp
popa
jmp
xor
jbe
mov
inc
mov
and
sub
mov
dec
mov
rolb
dec
jge
dec
je
jmp
pusha
insb
or
andl
and
xor
mov
jmp
sahf
and
mov
jle
insl
hlt
pop
loopne
movzbl
jmp
and
pop
fs
adc
ss
mov
outsb
or
adc
icebp
ss
cmp
jne
addl
mov
jmp
aam
int3
stos
xchg
ja
imul
add
add
jmp
ret
mov
and
push
lds
push
cmpsl
xchg
jmp
push
jmp
addl
jmp
mov
add
dec
lret
pop
ds
movsb
sub
roll
aad
sub
lea
jmp
insl
dec
out
pushf
jmp
hlt
jg
mov
jbe
jp
in
pop
xchg
push
xchg
repz
cmpsl
insl
add
call
mov
adc
xchg
add
push
jmp
pop
jmp
mov
cwtl
mov
mov
and
pop
lock
mov
pop
sub
add
jmp
jb
jne
out
dec
or
add
sahf
pop
sarl
inc
and
add
lods
add
add
mov
cs
inc
mov
stos
data16
mov
cmpsl
addb
jmp
jmp
mov
add
sbb
lea
inc
mov
pop
adc
pop
mov
sar
jl
jne
insb
rclb
mov
mov
sbb
icebp
fwait
addl
mov
popl
jmp
imul
mov
mov
adcl
sbb
outsb
sub
movb
jmp
cmc
jge
je
jbe
out
pop
popa
jmp
pop
jge
popf
jmp
pushl
jmp
cmp
pop
adc
mov
enter
lret
call
add
add
mov
lea
ret
jmp
xchg
sbb
and
ret
push
lds
xor
push
jmp
lea
jmp
mov
sub
lea
jmp
push
jmp
mov
cmp
mov
mov
das
test
nop
sarl
or
add
push
push
inc
push
xor
cs
insb
add
nop
out
xor
jmp
mov
pop
jmp
cmp
jg
jg
jmp
shlb
mov
mov
and
pushf
jmp
stc
push
sub
jmp
sub
cmp
mov
inc
mov
mov
xor
jmp
daa
mov
mov
mov
fisttpll
out
cmp
iret
movsl
pusha
jmp
cmpsl
pusha
jmp
pop
lds
iret
dec
out
insb
loop
je
push
fwait
or
jae
cmpsl
aaa
push
mov
cli
jmp
cmp
aam
shlb
lret
inc
xchg
int
adc
cmpsl
add
add
call
jecxz
jmp
movzbl
jmp
iret
dec
fnstcw
push
xor
ja
loope
adc
outsb
mov
mov
mov
andb
sub
jo
mov
jmp
cmp
sbb
lods
and
ljmp
cmpl
add
jmp
cmp
xor
aad
into
test
jp
in
pop
inc
add
jmp
pop
mov
gs
cmp
xor
mov
jge
jp,pt
out
sar
inc
adc
imul
cmc
add
mov
sub
rolb
add
jmp
jmp
pusha
hlt
push
cld
dec
add
mov
xchg
adc
and
sub
dec
mov
add
test
jmp
call
popf
and
divb
mov
cmp
jmp
lods
xor
int
addr16
iret
hlt
cmpsl
xlat
popl
jmp
inc
fisttpll
out
faddl
mov
lds
dec
add
xchg
popf
pushl
mov
jmp
jp
jnp
in
insb
loope
sbb
lods
lret
inc
iret
dec
ret
mov
mov
mov
movsb
mov
jo
jb
addl
pusha
jmp
call
jmp
push
aam
sub
inc
daa
rolb
push
cmpsl
jg
push
dec
call
push
push
inc
push
xor
cs
insb
add
int3
fcoml
mov
lds
sub
jmp
mov
pop
rolb
shlb
and
test
cwtl
decl
fisubs
or
add
dec
gs
popa
addr16
outsl
js
add
cmp
add
jmp
idivl
add
add
add
add
xor
jmp
sub
cld
ja
xorb
pop
repnz
rolb
push
jmp
add
add
xchg
addl
jmp
push
dec
push
push
xor
data16
mov
lea
jmp
xlat
cmp
xchg
pop
jmp
mov
jmp
mov
sahf
mov
mov
and
jns
jb
jle
call
xor
add
fsubrs
cmpsb
xor
scas
or
dec
fdivrl
mov
xchg
pop
bound
in
mov
dec
out
jecxz
push
in
pop
int
and
jl
jne
mov
sbbb
out
sbb
addr16
and
jl
sbb
xchg
mov
and
mov
stos
fldl
dec
movsb
add
ret
xchg
gs
hlt
push
cld
xor
or
je
push
cld
adc
mov
inc
mov
mov
insl
ljmp
xor
push
popf
sbb
stc
imul
jle
call
in
sbb
jbe
sbb
ss
imul
add
lods
cmp
cmp
cmp
push
ret
ret
jo
xorl
sti
push
lods
aas
scas
lret
dec
fdivl
in
je
jl
divb
push
mov
and
lahf
punpckhdq
pop
scas
sub
xchg
add
dec
ret
popf
idivb
mov
mov
mov
fstpt
push
pushf
sti
push
call
loop
enter
push
mov
mov
mov
int3
pop
pushf
xor
inc
aaa
mov
and
and
inc
adc
insb
loop
je
ficoms
cmpsl
push
nop
test
mov
jo
loop
jl
jge
negl
aad
dec
cld
cmpsl
movsb
ret
ds
mov
mov
adc
and
addr16
add
mov
inc
mov
dec
rolb
shlb
fwait
add
inc
shll
ds
loope
dec
call
out
sahf
or
cmpsb
add
dec
adc
push
lahf
or
in
mov
adc
cwtl
setg
or
or
lret
dec
jecxz
push
in
push
adcl
xor
int
out
je
lea
add
cmp
mulb
jns
mov
addl
repnz
xchg
adc
push
pushf
sti
push
pop
fstpt
cmpsl
aaa
push
mov
popf
insb
mov
test
loopne
sti
sahf
insl
orl
rcrl
test
sub
mov
mov
shll
shlb
xor
pusha
pop
mov
jg
sub
sbb
mov
outsb
or
dec
stos
cmp
push
pushf
sti
push
movsb
push
xchg
pop
bound
adc
pop
out
jns
mov
add
mov
fcom
dec
fdivrs
add
jns
mov
inc
fimuls
popa
adc
fcompl
xchg
lea
fsubr
lret
mov
add
cmp
dec
ret
addl
and
leave
pop
cmp
cmp
mov
ljmp
jns
mov
mov
xor
sub
insl
popa
repz
cmc
xor
dec
fstpt
xchg
repz
mov
jae
stc
outsl
lcall
test
xchg
push
mov
es
nop
push
popa
nop
jb
outsb
call
and
push
ret
cmpsb
push
lods
outsl
call
pop
fimull
fisubrl
inc
rcll
sub
aam
cmp
jnp
popa
add
adc
jns
lods
and
int
and
add
push
imul
sbb
inc
shll
cld
fwait
jbe
mulb
push
jecxz
jmp
jge
cwtl
or
or
jge
jle
call
cltd
call
push
mov
or
cli
ja
xorb
data16
xchg
outsb
mov
fst
pop
leave
test
pop
roll
roll
fistps
cli
jne
mov
das
ret
push
lds
roll
aad
sbb
adc
sbb
and
subb
push
xor
mov
and
fnstsw
fstpt
inc
js
pusha
call
shl
data16
xchg
outsb
nop
and
dec
push
push
js
mov
lea
sub
mov
mov
cmp
ja
jb
dec
sub
test
jge
xor
pop
pop
ret
xor
inc
jmp
or
jmp
call
pop
mov
les
xchg
out
insb
loop
je
rclb
mov
fnstcw
cmc
pushf
outsl
mov
inc
fidivrl
jmp
jge
xchg
adc
push
cltd
or
jno
and
mov
xchg
aaa
mov
pop
rclb
add
loop
hlt
xchg
outsb
fwait
jae
fs
push
mov
fiaddl
xchg
add
jno
aas
scas
lret
inc
enter
cmp
inc
and
js
dec
fidivrs
mov
and
adcb
out
mov
pop
int3
stos
data16
jg
jmp
cmp
jns
pop
call
sti
pop
xchg
add
xchg
add
ja
out
jl
testb
push
mov
es
test
mov
lret
pop
ds
or
jnp
add
adc
fstl
pop
scas
lods
and
dec
in
add
jbe
push
xor
mov
rep
pop
ret
call
push
push
push
xor
dec
fimuls
push
repz
call
dec
inc
fisttpll
out
mov
loopne
adc
sub
inc
and
aaa
gs
push
in
add
lret
jmp
jge
xchg
adc
outsb
cld
fwait
jbe
lea
sahf
stc
or
adc
or
cmpsb
push
xlat
inc
call
jae
in
jge
testl
lods
cmp
sahf
or
cmpsb
pop
cmp
insb
or
mov
and
dec
aam
sub
xchg
cld
movntq
out
pusha
notb
push
xor
inc
xor
ds
cwtl
or
lds
mov
or
cmpsb
add
outsb
lret
push
mov
aaa
push
mov
push
mov
xchg
add
push
inc
lret
pop
ds
dec
leave
pop
cmp
and
out
push
xchg
repz
jmp
mov
push
aam
sub
xlat
mov
mov
push
mov
shrl
xor
movsl
xor
adc
sub
ds
inc
mov
and
adcb
andb
imul
insl
fstl
push
push
scas
cmp
mov
adcl
inc
in
pop
iret
pop
cmp
pusha
adc
dec
fisttpl
fstpl
rorb
mov
jl
negb
mov
js
popa
dec
roll
rcll
xchg
add
push
cmp
bnd
xorb
pop
iret
stos
pop
fistpl
scas
pop
mov
jl
int3
dec
fnstcw
imul
notl
ja
loope
adc
pop
lea
pop
repnz
fs
adcl
out
mov
add
iret
pop
cmp
adc
jns
loopne
loopne
jb
mulb
push
jl
bound
int3
stos
iretw
cmpsb
xor
mov
aas
test
movsb
aaa
cmpsl
ret
dec
rolb
rclb
and
and
test
call
sub
mov
jbe
jne
out
inc
cld
push
lahf
push
pop
into
pop
cmp
jg
push
xchg
repz
mov
mov
inc
mov
inc
mov
mov
rorl
xchg
add
jns
ja
xorb
add
lock
cmp
movsl
sub
jge
je
pusha
outsb
call
inc
les
int3
sbb
jnp
mov
or
pusha
xchg
in
out
mov
inc
mov
sub
add
lcall
inc
and
jns
hlt
push
cld
sub
pushf
xor
lock
add
cmpsl
loopne
loop
je
mov
xchg
lret
test
jmp
jge
pop
test
fwait
or
xor
pop
int3
stos
data16
adc
adc
push
mov
adcl
ljmp
ja
loope
pop
xchg
add
xor
sub
test
inc
mov
cmp
sbb
sbb
cmp
pop
cmp
insl
hlt
pop
mov
xor
jo
js
ljmp
or
call
ljmp
push
xchg
add
ss
mov
and
inc
out
stos
cmp
pop
repnz
fs
into
pop
cmp
fs
push
mov
gs
dec
enter
gs
cld
data16
xchg
outsb
lods
arpl
outsb
or
sbb
imul
cmp
inc
and
adcl
loop
pop
loop
cmp
sub
push
lahf
push
xchg
adc
mov
sub
mov
mov
lock
sbb
push
lret
scas
or
mov
popl
xchg
repz
std
add
push
fimull
fimull
clc
je
lea
xchg
add
xor
sbb
aad
xchg
inc
rolb
sarb
rcll
jo
inc
shlb
add
es
popf
jb
je
out
pop
in
out
jno
sti
notl
sub
cmp
xor
pop
or
push
pop
lds
iret
dec
inc
rcll
or
insb
loop
je
mov
movsl
int3
aas
aad
push
in
icebp
nop
arpl
sub
jl
js
dec
fidivrs
sbb
xchg
gs
lea
fwait
decb
mov
in
add
lea
out
jl
negb
ficomps
xchg
addr16
frstor
sbb
cmp
push
lret
test
add
jbe
sub
pop
call
xchg
add
push
dec
aad
sub
aas
dec
rolb
sarb
imull
fwait
jbe
xchg
push
imul
jl
pop
int3
stos
scas
mov
out
ljmp
ds
dec
roll
aad
jmp
notl
and
icebp
decb
push
stos
cmpl
je
jmp
ret
jmp
call
xchg
stc
jl
jne
insb
ljmp
stc
imul
jae
in
imul
pop
loop
ds
inc
mov
gs
and
mov
inc
mov
sbb
pop
leave
pop
cmp
pusha
adcl
loopne
mov
out
inc
rcll
pop
out
out
out
jno
scas
cmp
lods
lret
inc
loope
and
and
sbb
popa
stos
xor
loope
adc
imul
or
sub
jb
sub
movsb
cmp
inc
push
jns
jmp
xchg
gs
imul
loopne
cli
popf
insb
cltd
inc
push
xor
daa
xor
rcrb
stos
pop
test
sub
adc
jo
scas
aas
pop
test
xchg
bound
lea
jo
xorl
add
mov
mov
and
push
loope
daa
mov
and
repz
in
jns
mov
insb
clc
outsb
or
dec
lret
pop
int3
stos
shrw
add
cmp
stos
cmp
dec
xchg
or
sbb
aaa
scas
aas
pop
test
mov
lahf
cli
or
mov
leave
mov
scas
push
test
enter
ss
iret
pop
cmp
add
pop
aas
lret
mov
jle
arpl
ljmp
mov
sub
mov
ljmp
test
lahf
cli
or
sbb
mov
pusha
rcll
xchg
jb
adc
jecxz
ljmp
shrl
cltd
les
mov
popf
in
movsl
lods
lret
inc
movsb
nop
or
inc
shll
and
mov
movsl
push
roll
les
jmp
lahf
jne
insl
std
test
and
xor
pop
add
movb
inc
mov
clc
outsb
or
adc
mov
jg
jns
pop
iret
stos
pop
test
pop
repnz
addb
dec
fistpll
notl
add
rclb
addr16
lock
aam
enter
popa
ds
cmp
mov
inc
xlat
inc
and
jbe
push
lahf
push
stos
cmp
mov
in
repnz
pop
repnz
sti
outsb
cld
fwait
jbe
sub
lds
stos
data16
sub
scas
leave
cmp
lcall
push
lahf
push
popa
loope
adc
sub
pop
cmp
punpckhdq
mov
movsl
inc
les
int3
xor
in
push
adc
inc
roll
aad
xchg
and
stos
cmp
dec
fsts
mov
in
je
and
cmp
jge
mov
xchg
push
rcrb
xchg
addr16
loope
jae
pop
int3
inc
and
enter
adc
and
xchg
and
ljmp
stc
scas
push
lcall
cs
mov
lods
pop
lahf
xor
aas
movsl
xor
js
mov
add
loop
adc
add
insb
loop
je
or
sbb
pop
repnz
mov
xchg
add
je
jnp
mov
ja
add
daa
outsb
ljmp
lcall
shll
rcll
sti
mov
shlb
jbe
loopne
mov
xchg
ficoms
mov
sub
and
jge
je
xor
test
jge
and
add
add
sbb
das
test
mov
stos
cmp
or
js
mov
arpl
xchg
sbbl
imul
sub
setle
xchg
icebp
add
popf
sbb
test
mov
cmpsl
ret
dec
enter
and
clc
jne
popa
add
paddusw
scas
pop
lea
mov
jl
outsl
or
out
leave
inc
shll
aaa
push
mov
mov
out
mov
ficoml
pop
sti
addr16
stos
es
cs
lret
mov
clc
lahf
push
or
xor
cmp
sbb
dec
in
or
add
std
or
cmp
push
xchg
add
ss
push
shll
testb
popf
jno
xchg
or
je
cmp
movsl
xor
xlat
inc
and
push
sbb
roll
inc
cmpsl
jle
mov
push
mov
lahf
push
in
notl
push
xor
daa
xchg
and
inc
xlat
mov
lods
nop
sbb
add
jl
jne
and
notb
jae
in
outsl
loop
pop
loop
add
adcl
loope
mov
into
jg
cmp
mov
in
add
add
and
movsl
rclb
jmp
adcb
andb
sbb
mov
inc
mov
pop
push
xor
and
cs
je
lea
lds
iret
dec
les
mov
xchg
mov
inc
mov
popf
and
outsl
lcall
daa
inc
mov
add
stc
adcl
test
in
bound
out
mov
lock
mov
jno
outsl
or
jecxz
mov
inc
mov
dec
mov
mov
mov
ja
xorb
mov
cli
outsl
lcall
in
je
xor
mov
mov
mov
sbb
aas
xchg
push
rclb
ja
cs
lods
cmp
sbb
std
imul
insl
xor
sahf
cmp
lret
push
lret
fistpl
mov
xlat
push
lret
mov
insl
std
test
and
dec
push
bound
add
daa
movl
jbe
cmpl
jmp
xchg
and
icebp
mov
xchg
repnz
test
mov
and
mov
lods
mov
loop
xor
in
lcall
xor
add
add
inc
dec
fisttps
notl
cmpsl
movsb
ret
ds
gs
popa
add
inc
dec
fmuls
fdivs
mov
inc
mov
xor
pop
push
xor
or
and
dec
fisttpl
fnsave
in
adc
imul
xor
and
scas
aas
pop
test
sbb
dec
rclb
adc
inc
xlat
mov
lea
jno
jecxz
inc
aad
sub
imul
pop
lods
mov
mov
mov
lcall
pop
iret
stos
pop
into
scas
cmp
inc
mov
out
outsl
lcall
add
sahf
jl
fimuls
or
scas
cmp
mov
call
stc
jle
ja
loope
jb
add
cmp
pushf
xor
dec
movb
dec
cmpsb
inc
lds
iret
sub
xchg
add
sbb
jg
sub
call
gs
cmp
sbb
push
les
or
cmpsb
pop
jmp
sarl
lods
and
push
inc
aad
sub
je
test
jge
cmp
mov
inc
mov
scas
pop
cltd
mov
and
stc
cwtl
imul
popa
aas
cmpsl
aaa
push
mov
in
pop
lcall
mov
mov
xor
ret
call
popf
mov
xchg
and
ds
scas
xor
call
jno
pop
iret
stos
pop
add
sub
or
xchg
add
add
xchg
mov
lcall
jl
negb
icebp
popa
add
sbb
inc
es
add
in
cmc
pushf
outsl
movsb
mov
sub
addb
repnz
sbb
mov
jle
pop
or
imul
insl
addl
js
add
push
mov
and
add
and
outsb
cld
fwait
jbe
mov
adcl
jecxz
mov
cmp
cmpsb
inc
shll
xchg
cld
movntq
xchg
add
jns
pop
xchg
repnz
pop
loopne
js
mov
xchg
adc
in
sbb
mov
sahf
stc
or
inc
lds
iret
sub
repz
icebp
nop
arpl
scas
pop
inc
push
xor
daa
push
fisttpll
out
pop
pushf
xor
inc
push
fisttpll
out
add
icebp
jge
je
and
loopne
es
cs
fwait
push
test
push
mov
std
dec
aaa
movsb
cmp
add
dec
inc
pop
lret
scas
pop
repnz
pop
jp
and
sbb
pushf
sub
xchg
add
jp
jp
add
or
jbe
cmpl
or
in
cld
mov
xchg
adc
add
repnz
adc
or
pop
cmc
addr16
adc
or
pop
cmp
mov
and
mov
int3
imul
sbb
push
sbb
rcrb
stos
pop
test
ficoml
mov
test
sbb
call
adc
and
and
mov
es
sbb
cmp
and
sbb
bound
pushf
sti
push
mov
pop
jmp
or
cltd
add
int3
inc
and
int
addr16
cmpsl
lods
lret
inc
scas
ss
pop
test
mov
mov
imul
roll
sarl
jg
insl
hlt
pop
in
roll
inc
movsl
ret
dec
fstpt
mov
pop
lret
scas
pop
scas
movb
inc
test
arpl
fstpt
pop
xchg
add
jmp
push
in
sbb
ss
and
xchg
jb
dec
xchg
pop
cmpsb
xor
int
mov
mov
inc
mov
add
sub
inc
daa
sarb
test
jge
and
jbe
jo
loop
mov
mov
out
mov
mov
sbb
enter
loop
pop
loop
fs
push
ljmp
stc
addb
xor
or
js
ljmp
or
adc
outsl
aam
shll
dec
mov
add
sbb
xor
scas
pop
in
std
test
sub
cmp
dec
cmp
xchg
sbb
xor
and
sahf
adc
cmpsl
aaa
push
mov
adc
dec
sbb
jl
arpl
cmc
pop
mov
mov
jo
loop
add
push
rcll
lcallw
ret
insb
cmc
gs
pop
mov
mov
fisttpl
fnsave
cmp
xchg
pop
bound
pop
repnz
jno
jecxz
cmpsb
xor
scas
inc
pop
xchg
mov
lcall
es
mov
xchg
pop
xchg
adc
push
xlat
inc
and
aaa
fwait
pop
xchg
adc
lret
mov
lods
pop
xchg
add
out
jl
testb
xchg
jbe
outsl
or
roll
mov
js
dec
jo
xchg
testb
imul
aaa
pushf
adc
movsl
xor
or
out
adc
inc
popa
sti
imul
dec
push
les
int3
imul
hlt
xchg
outsb
lods
inc
fmuls
fdivrs
cmpsb
lods
lret
inc
lods
and
pop
xchg
jb
or
pop
and
push
xor
das
lods
and
pop
outsl
in
jge
negl
cld
sbb
iret
dec
fidivrs
push
lds
push
xlat
inc
and
aaa
gs
jge
testl
xchg
jae
std
insl
hlt
pop
loope
and
sahf
adc
or
and
mov
shll
fnstcw
mov
sbb
or
xchg
add
std
or
cs
jbe
jo
loop
test
xchg
adc
inc
mov
dec
fdivrl
add
sahf
je
or
je
lea
mov
ficomps
lods
add
inc
ret
ret
ljmp
stc
loop
cltd
or
movb
inc
cwtl
loope
sti
sahf
insl
sahf
push
adcl
roll
shll
std
jbe
cmpl
test
jge
push
push
mov
and
sub
xor
jne
pop
xchg
repnz
mov
fwait
decb
inc
mov
xchg
add
std
or
push
rclb
jno
dec
fidivrs
cmp
mov
pushf
or
sbb
fs
popf
insb
lret
scas
cmp
or
xchg
jb
mov
rclb
inc
es
into
push
mov
or
push
lret
mov
jbe
loopne
jle
mov
lret
inc
mov
inc
xchg
pop
cltd
or
insb
dec
roll
aad
lahf
sbb
ja
xorb
cmc
gs
sbb
lret
mov
dec
sub
xor
out
ret
push
lds
shlb
shll
push
push
aam
sub
int3
stos
data16
push
lret
cmc
pusha
hlt
push
cld
dec
inc
fisttpl
fnstsw
xor
bound
pusha
pop
repnz
aad
dec
fdivrs
aam
mov
push
fdivrs
ret
push
lds
inc
push
xor
or
and
cmp
dec
mov
stos
int
ret
aad
dec
lcall
roll
movsb
adc
sub
mov
aam
fs
popf
insb
lahf
fcoms
mov
lret
scas
pop
sbb
jbe
imul
cmp
sbb
jo
jbe
loopne
inc
roll
sarl
daa
mov
and
cmp
test
or
xchg
pop
bound
add
adc
popa
add
xor
dec
cld
xchg
cmc
add
rcrb
loopw
jg
mov
in
cmc
pushf
outsl
test
loopne
pusha
notb
movsb
ret
rcrb
add
loop
cmc
pushf
outsl
test
pop
aad
sub
aas
mov
lods
lret
inc
mov
iret
adc
cmpsl
aaa
push
mov
in
sbb
es
dec
fisttps
fsts
jno
xorb
pop
repnz
fs
pop
lods
fdivl
adc
or
fisttps
flds
pop
aam
sub
mov
and
test
loope
adc
and
mov
inc
mov
or
popa
add
pop
jge
arpl
cmc
inc
add
jmp
adc
xor
sbbl
cmp
gs
insl
hlt
pop
sub
pop
push
sahf
or
cmpsb
dec
mov
mov
pop
iret
stos
pop
loopne
sbb
aad
mov
sbb
pusha
add
andl
mov
mov
mov
mov
mov
mov
mov
ret
call
push
inc
aad
sub
imul
xor
or
or
shll
mov
hlt
and
add
out
mov
sahf
mov
mov
cs
jns
mov
dec
jecxz
push
in
fs
pop
repnz
xor
or
dec
sbb
xchg
xor
inc
and
adc
jl
jne
pushw
add
sbb
arpl
xchg
mov
mov
xor
int
mov
mov
cmp
daa
movsl
xor
outsb
cld
fwait
jbe
divb
xorl
adcl
stc
cwtl
imul
push
test
jge
jg
cmp
and
add
repnz
pop
repnz
insl
hlt
pop
out
xchg
mov
es
les
scas
pop
fldl
ret
jecxz
push
mov
add
xor
inc
push
xor
daa
test
mov
lods
and
push
test
inc
call
lcall
leave
dec
ret
mov
xchg
loopnew
stc
cwtl
imul
popf
xchg
inc
int3
in
adc
add
imul
gs
pushf
outsl
scas
mov
mov
pop
cli
call
jns
add
ss
mov
call
push
mov
xchg
repnz
sub
insl
cmc
js
mov
adc
cmp
xor
ja
je
out
inc
aad
push
add
jmp
rclb
mov
and
pop
cmp
hlt
inc
call
sub
lahf
punpckhdq
imul
add
add
push
lret
pop
ds
or
xchg
or
mov
sub
in
call
lret
loop
cld
fwait
jbe
mov
lcall
inc
nop
clc
call
push
loope
sti
sahf
insl
sahf
sbb
punpckhdq
mov
push
imul
ljmp
stc
hlt
mov
lcall
mov
idivb
push
cld
pop
xor
das
mov
in
jmp
jge
dec
fmuls
fdivs
hlt
push
cld
dec
xchg
push
xchg
repz
cmpsl
mov
mov
and
cmpsb
add
mov
imull
je
inc
fisttpll
out
push
enter
and
dec
fistpll
mov
and
stc
or
inc
ret
ret
sub
jg
mov
aad
shll
and
inc
mov
mov
rcl
pop
iret
stos
pop
xchg
bnd
mov
clc
jo
xorl
mov
fnstsw
les
lods
mov
xchg
xchg
or
cmp
push
xor
jbe
dec
fdivrs
sbb
cmp
adcl
test
jno
jne
out
pop
adc
push
test
push
test
inc
call
movsl
pusha
pop
test
jge
outsb
push
int3
inc
and
js
mov
add
movzwl
lea
ret
call
xchg
ret
push
lds
mov
ret
mov
xor
cmp
je
mov
jmp
cmp
je
add
cmp
jne
xor
inc
ret
push
push
pushl
mov
mov
call
xor
jmp
call
xor
dec
adc
sub
ret
ret
icebp
popa
add
sbb
out
notl
cs
mov
push
mov
push
dec
fistl
mov
mov
jecxz
push
in
or
jns
gs
pop
repz
jne
push
ljmp
mov
push
cmc
xchg
xchg
call
lock
rclb
addr16
lret
lret
inc
xlat
mov
out
pop
int
addr16
out
adc
inc
jmp
adc
xor
mov
jae
sbb
mov
in
sbb
dec
fisttpl
fnstsw
cmpsb
xor
scas
inc
sbb
pop
les
int3
dec
aad
fdivrs
and
fcmove
dec
fdivrs
ss
mov
mov
jg
mov
rclb
lods
pop
mov
pop
cmp
cmp
push
mov
mov
cmpsb
xor
scas
dec
push
jo
loop
enter
inc
mov
rsm
pushl
xorl
jmp
rol
sahf
xchg
add
mov
lds
mov
test
fisttpll
out
add
sbb
xchg
or
pop
rolb
shlb
inc
iret
pop
cmp
and
les
int3
imul
testb
or
mov
in
push
shll
sub
dec
stos
cmp
movsl
xor
test
popa
icebp
nop
arpl
push
mov
jg
cmp
pop
stc
inc
fimuls
and
imul
xor
dec
jb
bound
sbb
or
insl
std
test
lcall
mov
push
lds
push
and
les
lcall
mov
ljmp
stc
hlt
dec
ret
mov
mulb
sbb
jecxz
mov
mov
out
aas
scas
lret
cmp
pop
aaa
pop
adc
push
mov
push
push
lea
call
sub
mov
jne
xor
jmp
mov
mov
mov
test
je
test
jle
add
jmp
xor
jmp
cmp
sub
push
push
mov
test
je
cmp
jb
cmp
jb
lea
shr
push
pop
je
mov
mov
and
mov
cmp
jne
movzwl
and
add
lea
mov
add
inc
cmp
jb
add
jne
pop
pop
jmp
jns
mov
rolb
ret
call
push
mov
xchg
lret
out
js
mov
pop
roll
aad
sbbl
dec
fstpt
je
lea
loope
adc
add
loop
push
xor
es
cmpsl
aaa
push
mov
and
pop
mov
sahf
stc
or
add
adc
popa
icebp
nop
arpl
fidivrs
push
cwtl
push
imul
jl
jne
jno
lret
pop
ds
test
mov
and
fs
jge
notl
es
cmp
mov
jmp
jne
mov
js
add
fcmovu
push
shll
mov
out
or
lahf
punpckhdq
and
out
movsb
cmpsb
cmp
xchg
jb
ds
shr
push
popf
add
pop
cld
js
mov
or
cltd
adc
insb
or
in
push
xor
sub
sti
pop
rolb
shlb
pop
int
addr16
or
inc
shll
repz
gs
pusha
notb
mov
cs
cmp
sbb
or
mov
popf
insb
fucomi
jp
jp
fadds
mov
cmpl
dec
lods
cmp
jo
xorl
push
rorl
inc
daa
rclb
std
insl
hlt
pop
int3
sti
js
mov
out
cmc
pushf
outsl
test
int3
mov
mov
push
shrl
add
orl
cltd
adc
hlt
push
cld
sbb
repz
nop
push
popa
nop
aaa
jnp
push
cld
sub
push
jne
out
dec
mov
mov
es
xchg
add
sahf
push
pushf
sti
push
cmpsl
repz
lock
lret
mov
mov
es
gs
pop
repnz
pop
iret
pop
cmp
pusha
jbe
jno
jecxz
add
xor
mov
mov
push
call
mov
push
call
xor
ret
call
test
pop
enter
scas
and
mov
cmpsl
add
arpl
lcall
ret
cmpsb
push
mov
in
dec
push
fisttpl
or
inc
call
push
jno
aad
xor
call
jle
mov
inc
mov
rorb
dec
stos
ljmp
scas
cmp
mov
add
xchg
add
fisttpl
mov
dec
adc
push
mov
mov
xchg
fwait
pop
lret
lret
pop
iret
stos
pop
movsb
jb
jg
jmp
scas
pop
mov
repz
cmc
sbb
xchg
jl
divb
mov
arpl
jbe
loopne
stos
sub
lods
cmp
or
ja
xorb
xor
mov
leave
sub
add
fnstcw
das
dec
mov
aam
add
xor
mov
test
inc
aam
dec
jmp
jbe
rcll
push
xchg
mov
xchg
repz
test
xchg
cmpsb
cmp
les
int3
jge
push
mov
cmp
mov
add
mov
mov
mov
sub
stc
loop
or
add
push
imull
sahf
insl
fstl
push
aaa
ret
cmp
xor
push
lret
out
scas
cmp
cmp
cs
mov
dec
mov
test
mov
fs
jne
mov
jno
jge
divl
mov
fstps
test
nop
into
push
ret
cmpsb
push
mov
iret
add
dec
cmp
cmp
sbb
sbb
pop
into
lods
aas
scas
lret
test
xchg
adc
aad
daa
mov
and
inc
fisttpll
out
jl
jo
loop
sbb
aas
ret
push
lds
mov
and
sti
dec
into
pop
cmp
ds
js
mov
push
bound
push
jns
pop
pop
adcl
and
inc
int
and
es
mov
gs
jbe
roll
shll
arpl
fdivrl
jl
jne
push
lods
daa
mov
and
dec
fdivrs
pop
cmp
jle
out
adc
inc
sti
imul
push
lds
mov
and
mov
mov
pop
cmp
outsb
cmp
dec
aad
sub
aas
pop
ret
ret
dec
ret
mov
loopne
inc
fisttpll
out
cld
jle
mov
sub
cmp
push
mov
es
lods
sub
fisttpl
fisttpll
adcl
test
fisttpll
out
je
lea
adcl
or
ljmp
or
cmp
xchg
inc
dec
push
xor
or
dec
lock
dec
test
adc
leave
pop
into
test
mov
call
nop
add
add
jo
pop
repnz
fs
test
mov
hlt
in
pusha
notb
cltd
push
mov
push
push
mov
push
mov
push
mov
push
xor
mov
cmp
je
lea
push
push
pushl
lea
push
call
testl
je
xor
inc
jmp
jmp
iret
mov
and
xor
cmp
jbe
add
lea
mov
add
mov
mov
mov
add
add
xor
xor
add
rorl
roll
mov
cmp
jb
mov
jmp
inc
sbb
inc
pop
mov
test
je
lea
push
pushl
add
pushl
push
call
xor
pop
pop
pop
leave
ret
call
push
fisttpll
out
mull
pushf
outsl
fdivl
jbe
loopne
lret
arpl
xchg
gs
jg
mov
mov
mov
and
into
cmp
add
add
dec
xchg
pop
test
test
cmp
jecxz
adc
cmp
repz
cmc
inc
lods
cmp
lods
lret
inc
icebp
insl
clc
outsb
or
pop
sbbl
ljmp
cwtl
jp
movsb
cmp
inc
pop
int3
stos
mov
pop
repnz
fs
fmuls
fcomps
or
push
jg
jmp
imul
popf
jle
scas
cmp
mov
dec
int
and
add
push
ret
push
lds
inc
lret
lret
pop
xchg
repnz
jne
xchg
testb
decl
or
out
jg
jmp
shll
loop
xor
int
fwait
outsl
add
or
push
das
mov
add
add
std
or
icebp
imul
insl
fdivl
xchg
jns
dec
call
and
nop
push
popa
nop
jb
jno
xorb
adc
ja
xorb
push
xor
sbb
inc
and
sti
sahf
insl
int3
int
int
addr16
outsb
cld
fwait
jbe
dec
fimuls
push
lock
test
lods
lret
inc
hlt
add
add
cmp
pop
repnz
fs
inc
aam
dec
jmp
movsb
addr16
mov
js
jbe
loopne
insl
hlt
push
cld
adc
or
in
xchg
popa
insb
or
cmpl
ret
inc
mov
test
adcl
loope
adc
add
fimuls
sbb
inc
aad
dec
lcall
jmp
cld
fwait
jbe
jns
popa
add
add
ret
iret
inc
aad
dec
test
repz
mov
lock
and
jg
mov
sbb
aaa
cmp
xchg
push
xchg
repz
cmpsl
xchg
add
adc
inc
xlat
mov
std
inc
xlat
mov
out
lock
aad
jecxz
push
in
dec
ret
xchg
imul
add
adc
in
adc
imul
mov
loopne
adc
sub
loopne
lods
lret
inc
scas
fistpl
scas
pop
mov
fisubl
or
roll
shll
sbb
pop
lret
scas
pop
test
lea
xchg
mov
test
rclb
addr16
jle
mov
xchg
push
fisttpll
out
cmp
cmp
mov
mov
cmp
cltd
push
les
pushf
stos
inc
shll
mov
mov
js
ds
push
xor
imul
pop
repnz
xchg
sbb
jnp
in
add
mov
pop
repnz
fs
mov
inc
lret
pop
ds
add
ja
fs
sbb
shll
sub
jl
outsl
or
out
and
or
mov
lods
mov
mov
jg
popl
xchg
repnz
outsl
mov
pop
xlat
push
fisttps
flds
nop
push
popa
nop
sub
fimuls
mov
and
sbb
sub
dec
fdivrl
dec
adc
push
lret
pop
int3
stos
shrw
sub
js
rolb
shlb
addr16
insl
hlt
pop
out
mov
shlb
lods
and
xor
mov
xchg
adc
loop
in
sbb
stc
cwtl
imul
mov
movsb
ret
shlb
adc
cmp
mov
mov
inc
mov
dec
lret
pop
ds
arpl
xchg
gs
xchg
loope
cltd
push
pop
ljmp
cmpb
or
mov
repz
cmc
inc
and
and
xchg
jb
ljmp
fwait
jbe
xor
les
mov
push
lds
pop
aas
lret
cmpsb
xor
scas
insl
rcrl
pop
mov
shll
push
mov
or
insb
lahf
sbb
std
dec
fstpt
shll
sub
adcb
cmpb
mov
inc
xlat
mov
mov
add
out
loope
rcll
and
add
dec
sub
adc
sub
xor
outsb
das
mov
mov
test
in
sbb
stos
int
xchg
mov
andl
es
mov
fmull
mov
jo
loop
push
insb
or
mov
xor
notl
nop
or
pop
int3
stos
data16
push
aaa
ret
ljmp
mov
das
stos
ret
mov
mov
dec
insl
repz
cmc
sbb
adcl
pop
push
pop
jp
inc
jo
push
cld
or
fdivrs
push
cld
jae
xchg
lods
and
dec
fdivrl
jns
jmp
xchg
sbb
fistpl
fistl
mov
and
add
data16
xchg
outsb
enter
pop
jmp
std
push
or
or
sub
jg
mov
jge
jg
jmp
or
mov
cmpsb
gs
out
mov
xchg
or
in
jnp
mov
push
int
and
push
mov
les
outsl
or
into
mov
stos
jne
imul
adc
je
lea
jp
jp
cmpsl
aaa
push
mov
jo
je
stc
imul
pop
cmp
cmp
pop
leave
test
mov
lahf
jns
pop
int3
stos
xchg
mov
fwait
decb
dec
mov
jo
inc
dec
rclb
addr16
xchg
add
and
das
test
pop
int
addr16
hlt
push
cld
push
dec
fmuls
fsubrs
xlat
inc
and
jbe
in
bound
sub
sbb
jle
ds
cmp
dec
push
iret
pop
cmp
cmp
pop
mov
inc
aad
dec
lret
out
mov
ds
cli
jg
mov
xchg
adc
in
sbb
add
jmp
mov
dec
fidivrs
shll
loop
divl
lret
daa
lods
and
push
orb
decl
out
or
jmp
sti
sahf
insl
int3
pusha
in
jge
mull
mov
test
outsl
lcall
adc
xor
jle
mov
mov
test
pop
mov
repnz
pop
repnz
sbbb
out
sbb
add
cmpsb
shll
fs
insb
or
lds
lock
jns
jmp
push
iret
pop
cmp
aas
dec
rolb
rclb
ljmp
add
sahf
push
sti
js
mov
jnp
imul
mov
es
les
mov
mov
fisttpl
push
add
inc
shll
xchg
repnz
mov
scas
lret
test
in
lock
mov
sub
sbb
cwtl
dec
cmp
les
mov
fidivrl
inc
and
js
stos
cmp
sbb
push
cmc
pop
mov
mov
setg
or
mov
jns
bound
mov
and
mov
jg
pusha
mov
mov
push
les
ret
cmpsb
push
aam
stc
imul
iret
stos
pop
popl
adcl
jecxz
push
in
rolb
dec
mov
iret
pop
cmp
add
push
jno
jne
sub
ret
ret
xchg
jb
insl
lahf
adc
or
dec
push
xor
imul
pop
loop
or
push
lret
pop
ds
or
or
mov
dec
mov
cmpsl
push
sti
push
les
int3
jle
push
xor
adcb
in
sbb
addr16
pop
repnz
jg
jnp
in
sub
dec
outsb
mulb
adc
sbb
pop
iret
stos
pop
loopne
mov
inc
mov
dec
setnp
mov
sbb
or
push
aam
sub
add
adc
push
lahf
push
mov
mov
out
adc
sbb
pop
iret
stos
pop
test
sarb
adcl
out
mov
push
ret
cmpsb
push
xchg
out
orl
sti
push
mov
mov
jns
ds
lahf
ja
jne
out
pop
lahf
push
pushf
sti
push
mov
adc
cmpsb
push
cli
xor
ss
mov
push
mov
fsubrs
ljmp
inc
fisttps
bound
cld
jnp
jno
xorb
cmp
into
push
ret
cmpsb
push
mov
sub
xchg
adc
in
sbb
inc
lret
pop
ds
push
xchg
jb
pop
rclb
pop
test
jp
movsl
sub
jnp
add
adc
outsl
lcall
enter
idivb
mov
or
js
mov
orl
sti
push
mov
clc
outsb
or
dec
loope
loopne
jb
das
mov
in
jmp
jge
ret
pop
lret
scas
pop
jmp
ret
fisttps
fsts
cmp
add
xor
push
lahf
push
mov
enter
and
pop
dec
fistpll
aas
pop
test
sbb
push
je
push
cld
adc
movsl
xor
movsl
xor
sub
cld
xchg
cmc
add
jp
dec
ret
cmpsl
cmc
jle
mov
test
sub
dec
scas
and
add
std
or
jl
add
xor
fwait
or
cmp
fimuls
push
mov
mov
and
or
popa
push
adcb
xorb
dec
ret
std
repnz
xchg
outsb
fnstenv
jo
loop
cmp
jmp
out
jo
xor
pop
xchg
mov
es
inc
fmuls
fcomps
inc
shlb
mov
es
or
sbb
popf
or
mull
icebp
sbb
dec
frstor
xchg
gs
xor
mov
lods
cld
jbe
cmpl
or
popl
or
jg
mov
mov
out
adc
dec
ret
repz
fimuls
push
add
push
ret
ret
mull
icebp
push
pop
sbb
loop
pop
loop
push
cltd
or
ds
push
lret
lahf
or
jl
call
gs
pushf
outsl
test
jno
xorb
or
mov
jle
inc
insb
in
jge
negl
clc
adc
dec
frstor
mov
jl
mulb
lea
lahf
cli
or
mov
lds
jbe
loopne
mov
scas
lret
clc
jo
xorl
cmp
cmpsl
jno
insb
or
rcrb
shlb
outsb
or
pop
scas
inc
shll
mov
sbb
test
xor
aas
scas
aas
pop
test
add
pop
outsb
cli
push
cltd
or
ds
jecxz
push
in
flds
mov
mov
jno
popf
add
std
or
mov
ret
jmp
adc
sahf
or
cmpsb
dec
cli
jp
jp
mov
and
divb
mov
dec
mov
inc
mov
rcrl
scas
pop
scas
movb
inc
test
cli
or
pushf
xor
inc
aas
mov
dec
mov
decb
mov
in
cmp
int
and
pop
dec
fdivrs
mov
rclb
imul
pmaxub
movsb
push
cld
mov
mov
cs
jg
jle
call
fisubrs
lea
imul
insl
test
das
mov
mov
jle
popa
mov
mov
push
xchg
repz
mov
pop
iret
stos
pop
loopne
and
adc
in
sbb
rcll
mov
push
jno
xor
or
adc
jmp
cmpsb
sub
lds
rcrl
scas
pop
mov
out
clc
ja
xorb
mov
dec
mov
jp
inc
test
mov
xor
in
bound
inc
daa
sarb
leave
pop
cmp
js
xor
jns
mov
inc
xlat
inc
and
jbe
pop
xchg
adc
lahf
cmp
mov
outsl
hlt
push
cld
push
stos
xor
out
jl
negb
jge
jno
jecxz
fiadds
mov
enter
cmpsl
push
fwait
aas
mov
mov
leave
daa
cmpsb
xor
scas
dec
xchg
xchg
repnz
in
icebp
nop
arpl
inc
mov
pop
mov
in
sbb
push
popf
push
test
push
cld
jmp
icebp
nop
arpl
cltd
push
repz
test
dec
fdivrl
jg
jmp
inc
mov
cld
outsb
cld
fwait
jbe
mov
jge
testl
cs
jle
jg
jmp
insb
lahf
sub
xchg
add
sahf
cmp
add
sahf
pop
push
iret
pop
cmp
xor
repnz
inc
sub
xor
and
sbb
mulb
aaa
out
insb
loop
je
and
push
lds
xor
xor
pop
jp
inc
outsb
ljmp
ja
loope
cmpsb
sub
lds
ret
mov
jle
call
xchg
gs
hlt
jp
jp
std
jb
xchg
daa
test
inc
roll
aad
int
int
addr16
pop
int3
stos
iretw
lret
pop
leave
test
call
stos
add
push
mov
test
lds
iret
jp
sahf
or
cmpsb
add
shr
jnp
mov
jne
arpl
cmc
sbb
mov
inc
mov
mov
out
mov
jbe
push
cld
xor
movsb
dec
dec
lret
lret
xchg
add
cmp
int
fdivrs
add
data16
cmpsl
ret
inc
enter
cmp
lods
and
push
idivb
mov
lods
pop
scas
pusha
out
jl
notb
repnz
pop
bnd
insb
or
into
inc
shll
mov
and
lods
add
lods
jmp
call
xor
int
mov
jns
mov
ds
cmp
sbb
ljmp
jno
out
jg
jmp
add
adc
popa
xchg
outsl
lcall
jmp
jge
fstps
test
nop
rcll
cmpsl
push
mov
subl
jae
in
loop
cli
popf
insb
xchg
and
xor
jbe
insl
std
test
inc
ret
ret
or
in
out
add
sti
jno
xorb
push
mov
lcall
mov
jmp
arpl
cmc
push
in
in
jg
in
in
jg
and
jmp
rorl
xchg
jns
jl
negb
dec
fistpll
jbe
loopne
ljmp
jne
mov
fiadds
mov
movsb
in
adc
imul
aad
dec
lret
mov
rcll
mov
lods
mov
lods
sbb
dec
ds
add
imul
add
inc
sub
sub
jp
jp
icebp
jns
mov
insb
in
sbb
cmovl
pop
cmp
sti
sahf
insl
cwtl
sub
dec
ret
ret
pusha
notb
frstor
cli
or
and
imul
jbe
cmpl
sbb
aad
xchg
fs
popa
add
pop
jecxz
in
jg
mov
js
jo
loop
xchg
push
pushf
sti
push
hlt
mov
lods
fmull
mov
fnstcw
xchg
lock
adc
jp
outsl
or
out
imul
sbb
add
shlb
movsl
xor
sub
roll
aad
icebp
je
lea
sbb
lea
xchg
repz
in
and
push
fdivl
in
int
shll
push
xor
adc
sub
fcomps
scas
pop
cld
lcall
or
mov
dec
fmuls
fdivs
pusha
notb
cmp
add
xor
mov
mov
mov
jl
jne
cmpsw
cmp
test
mov
and
jns
cvtdq2ps
pop
cmp
sbb
inc
cltd
sbb
push
lret
mov
je
lea
jg
mov
cmc
jb
xchg
jne
addr16
or
outsb
or
adc
rcll
int
fstpt
mov
inc
aad
dec
ljmp
mov
fwait
decb
jbe
and
rolb
shlb
xor
out
jle
mov
jo
xor
mov
jmp
push
in
pop
in
out
jno
cs
dec
mov
cwtl
imul
mov
add
jne
in
sbb
push
movsl
cs
fisttpll
out
lods
cmp
dec
fnstcw
shlb
mov
das
out
add
das
pop
roll
aad
sbb
sbb
jecxz
push
in
sub
icebp
gs
pushf
outsl
fisttps
pushf
xor
or
js
sub
push
lds
and
shll
mov
inc
mov
enter
push
mov
pop
mov
xchg
add
sbb
add
lahf
adc
in
sbb
pushl
mov
pop
xchg
add
sahf
insl
out
lcall
in
mov
hlt
pop
pushf
pop
xchg
adc
decl
pop
xchg
adc
fisubrl
aad
sub
outsl
adcl
cmpsb
xor
add
adc
ljmp
sti
imul
adc
lods
jg
ja
loope
sub
lock
xchg
fidivl
add
jmp
push
in
bsr
int
iret
sub
idivb
mov
mov
std
or
outsb
loope
adc
inc
pop
enter
jle
roll
aad
jge
arpl
cmc
inc
and
jp
bound
dec
sub
jno
mov
inc
mov
adcl
jecxz
mov
das
out
imul
insl
mov
mov
inc
mov
rcrb
pop
daa
mov
cmp
mov
stos
into
cmp
mov
test
fidivs
mov
movsl
int3
aas
fdivs
add
fstl
mov
shlb
lods
mov
in
in
ljmp
dec
mov
and
insl
pop
lret
lret
pop
int3
stos
shrw
das
dec
mov
or
les
stc
sti
popa
icebp
nop
arpl
sbb
jle
jbe
loopne
cmp
popf
sbb
pop
addb
icebp
add
ficomps
xchg
cmpb
mov
add
pop
int3
stos
cbtw
adc
addl
fimull
fidivl
pop
fwait
or
push
mov
push
in
paddq
xchg
gs
xor
push
lds
stos
int
call
cmp
cmpl
lods
and
add
mov
ret
push
lds
mov
js
and
movsl
xor
fisttpl
fnsave
out
adc
pop
rolb
mov
lods
mov
xchg
pusha
pop
repnz
ficoml
pop
cmp
and
xor
and
cmp
cmp
cmp
psubd
add
call
xchg
cmp
fists
mov
lods
lret
inc
xchg
sbb
ljmp
stc
mov
aam
stos
cmp
add
adc
push
xor
push
jno
call
sub
jo
xorl
or
fstpl
jne
jl
notb
xchg
add
jnp
mov
cld
lock
in
mov
jns
bswap
dec
ret
popf
imul
sbb
add
dec
ret
mov
scas
dec
adc
add
insb
xor
jne
mov
push
rolb
sarb
aam
int3
stos
xchg
add
adc
inc
roll
aad
fistpl
scas
pop
cld
mov
xchg
repz
fisubrl
pop
mov
jg
sub
mov
ss
cmp
add
jnp
in
pop
loopne
out
jno
int
leave
test
jmp
mov
dec
mov
cwtl
imul
and
ljmp
out
jno
mov
mov
sbb
jle
mov
outsb
popf
sbb
pusha
notb
dec
sub
psrlq
mov
insl
hlt
pop
loopne
rclb
ds
dec
fistpll
push
imul
mov
mov
rorl
cmp
sub
dec
dec
lret
pop
ds
xchg
pop
mov
xchg
icebp
add
fcomps
scas
pop
cld
mov
sahf
stc
push
lahf
push
insl
add
clc
outsb
or
push
sub
sub
or
mov
arpl
gs
dec
adc
xchg
setg
or
pushf
add
jb
js
ljmp
imul
rep
loop
je
stos
sub
adcb
subb
push
xor
sub
push
mov
mov
and
outsl
call
out
adc
sbb
fidivrs
inc
daa
shlb
rorl
dec
mov
loope
adc
adc
jl
jne
and
xchg
mov
cld
push
jne
out
dec
in
in
jle
add
add
mov
inc
mov
icebp
add
mov
leave
pop
int3
stos
iretw
or
inc
rolb
shlb
mov
sbbl
jmp
jp
cmp
cmpsb
mov
add
jle
jge
negl
inc
and
inc
and
js
dec
fnstcw
popf
in
mov
cs
mov
push
lret
lret
sub
lds
mov
mov
jecxz
push
in
mov
mov
lahf
punpckhdq
shll
xchg
adc
in
sbb
addr16
adc
adc
mov
fldenv
xchg
gs
lahf
sbb
adcl
test
dec
fstpt
jne
out
or
arpl
xchg
gs
out
notl
cmp
and
mov
lods
lret
inc
loope
jae
xchg
ja
jp
in
inc
lods
inc
shll
mov
or
inc
shll
jne
out
pop
les
mov
cltd
push
dec
mov
in
lcall
test
adc
dec
frstor
pop
repnz
ret
adc
push
inc
and
cmp
jno
xorb
lcall
or
cmpsb
push
push
aad
sub
xor
dec
mov
int
mov
test
lret
pop
ds
shll
xchg
les
rcll
push
xchg
push
adcl
jle
mov
cld
shld
stc
cwtl
imul
mulb
push
mov
mov
and
arpl
das
mov
sbb
mov
inc
mov
pusha
stc
imul
repnz
mov
dec
xlat
inc
and
pop
jns
je
out
imul
mov
sahf
stc
or
cltd
pop
jle
mov
decb
out
lds
js
ljmp
push
dec
push
xor
cmp
in
sbb
sbb
outsb
and
inc
add
cs
push
xor
sbb
insl
or
enter
jle
out
adc
inc
inc
aam
sub
loope
jae
sub
lods
cmp
pushf
xor
adc
ret
test
int3
stos
data16
jp
jp
ja
jl
negb
xor
push
enter
dec
movb
test
jle
mov
mov
or
mov
jle
cmp
push
ret
cmpsb
push
cli
or
mov
addl
out
adc
dec
fstpt
test
push
mulb
movsl
xor
stc
imul
mov
sbb
adc
inc
sub
xor
add
push
mov
jle
imul
mov
imul
or
nop
inc
ret
dec
frstor
nop
arpl
mov
into
test
lods
lret
inc
notl
cmpsb
iret
pop
iret
stos
pop
aad
jp
jp
mov
mov
and
shlb
mov
inc
mov
or
jns
ja
loope
sub
push
pop
lret
pop
ds
mov
mov
mov
push
mov
jle
arpl
adcl
mov
xchg
adc
test
pop
test
jne
addr16
or
jecxz
outsl
lcall
and
xor
inc
and
and
inc
dec
rcll
out
cltd
push
lds
jo
xchg
testb
std
dec
or
xchg
add
or
cmpsb
xor
scas
sbb
imul
insl
ret
into
test
outsl
or
mov
sbb
in
jbe
cmpl
movsb
ret
ds
test
add
dec
in
jle
push
call
mov
xor
sub
sbb
pop
mov
add
xor
mov
mov
add
pop
roll
mov
lock
cmpsb
push
cli
and
push
lret
pop
ds
push
mov
jns
mov
int3
push
les
mov
or
jle
add
fmuls
mov
mov
and
sahf
aaa
adc
dec
ret
repz
iret
pop
cmp
adc
int
and
aaa
pop
lea
push
mov
mov
iret
pop
cmp
push
lock
xchg
out
cli
popf
insb
test
adcl
sub
lds
in
icebp
nop
arpl
pop
adc
push
popa
nop
gs
sbb
push
or
add
mov
lret
jg
lahf
punpckhdq
add
inc
mov
xchg
add
and
dec
fdivrs
mov
and
int
into
test
repz
mov
push
mov
sti
imul
adc
dec
fistpll
mov
cmc
pushf
outsl
ljmp
and
imul
xchg
arpl
ss
xor
add
add
xchg
daa
mov
adcl
loopne
mov
fs
sub
call
mov
and
in
push
lahf
push
xor
add
pop
jb
addr16
test
xchg
sbb
aaa
cmpsl
ret
xchg
and
push
mov
push
xor
or
jge
je
and
sub
sub
push
xor
cmp
je
mov
mov
lea
jmp
movb
inc
mov
decl
test
jne
mov
lea
jmp
movb
inc
mov
decl
test
jne
mov
dec
cmp
ja
jmp
mov
push
push
add
jmp
mov
push
push
pushl
mov
call
les
push
lea
push
call
add
mov
push
pushl
lea
push
push
call
mov
add
add
call
fdivrp
decl
call
lret
fdivrp
decl
call
aam
pop
adc
push
lea
push
call
add
push
pushl
lea
push
push
call
pop
pop
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
push
lea
push
call
lea
push
call
lea
push
mov
add
push
lea
push
call
ret
or
adc
add
pushl
lea
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
mov
push
push
add
push
push
call
sbb
shr
xor
inc
pop
leave
ret
mov
jno
adc
jb
adc
jb
adc
jb
adc
jae
adc
jae
adc
pop
adc
pop
adc
pop
adc
pop
adc
ja
add
in
out
notl
in
je
push
jmp
std
test
push
roll
sarl
mov
lods
lret
inc
mov
movsb
cmp
dec
pushf
adc
in
sbb
sub
mov
mov
add
jae
push
xchg
repz
std
aad
leave
test
incb
mov
nop
testl
popf
insb
lret
test
push
mov
jge
call
scas
sub
adcl
out
mov
popf
sub
and
js
lock
aad
in
jge
notl
iret
pop
cmp
adc
setg
or
imulb
fwait
jbe
inc
fisttps
mov
mov
sbb
loopne
ljmp
sbb
cmpsl
ret
jge
je
out
or
mov
loope
out
mov
sub
add
das
cmpsb
xor
scas
dec
ljmp
int3
inc
and
sbb
pop
sbb
push
popa
nop
push
mov
shlb
push
cmc
call
out
jno
jne
out
pop
outsl
clc
outsb
or
push
outsb
cli
push
insb
or
mov
call
xchg
subl
push
flds
mov
test
icebp
je
lcall
sahf
stc
or
lds
mov
pop
cmp
push
stos
xor
int
mov
adc
push
stc
call
mov
inc
sub
or
dec
sub
sbb
js
ljmp
push
push
adc
gs
push
cld
push
dec
fimuls
push
sahf
setg
or
cld
call
stc
jge
jne
out
cs
xchg
add
jno
das
mov
jge
je
insl
aad
fnstcw
popf
in
xchg
jge
insl
hlt
pop
int3
out
sti
sahf
insl
andl
xor
pop
call
sbb
cmpsb
xor
scas
pop
add
fistps
scas
pop
test
lods
and
push
aaa
mov
mov
dec
rclb
lea
nop
testl
mov
jno
jecxz
add
or
xchg
or
sub
daa
mov
scas
and
and
sbb
push
xor
js
mov
gs
xor
dec
aad
sub
aas
ja
jge
negl
pop
mov
xchg
jle
jmp
enter
pop
fidivrl
insl
hlt
pop
int3
outsl
in
bound
frstor
cmp
sub
cli
push
xor
int
jmp
adc
out
jl
negb
or
orl
sbb
or
js
scas
aas
pop
test
push
movsb
add
adc
xor
mov
mov
xor
xchg
cld
shld
or
dec
popa
add
pop
outsl
ljmp
stc
mov
mov
pop
or
add
dec
stc
mov
mov
and
lods
push
call
add
xchg
pop
xchg
adc
xchg
adc
pop
leave
test
mov
push
lahf
push
clc
jno
xorb
in
sbb
fistpll
adc
sub
fwait
adc
sbb
fmull
mov
loop
je
out
in
jg
pop
mov
xchg
aas
out
out
jo
mov
andl
mov
mov
mov
xchg
or
pop
cmpsb
inc
shll
in
mov
jle
arpl
pop
and
push
and
sub
outsb
in
bound
inc
and
cmp
push
les
movsl
int3
aas
fmuls
ja
adc
add
push
jno
jne
std
insl
hlt
pop
in
repz
mov
sub
jno
outsl
or
jecxz
jbe
cmpl
lods
cmp
test
sub
mov
dec
mov
pop
loop
ficoms
cmpsb
push
cli
idivl
push
mov
and
mov
push
call
call
test
je
push
call
jmp
call
jle
inc
shll
mov
sbb
push
fstpt
popa
icebp
nop
arpl
into
arpl
xchg
gs
inc
and
outsl
or
xor
or
outsl
lcall
stc
cwtl
imul
jns
mov
or
jl
je
out
sub
jmp
out
in
mov
cmpsb
push
mov
in
imul
adc
jl
idivb
rcll
cmpsl
push
mov
xor
loop
icebp
nop
arpl
insl
movsl
and
rolb
shlb
jp
mov
int
es
cs
mov
int
mov
jns
jnp
inc
aad
dec
ljmp
cwtl
adc
in
sbb
stos
es
mov
or
cmpsb
adc
ret
push
lds
notl
test
scas
lret
add
lret
push
mov
and
push
push
xor
call
mov
inc
daa
shlb
lcall
push
shll
mov
cs
mov
inc
mov
imul
orl
clc
or
das
cmpsb
xor
scas
pop
mov
nop
testl
loop
lret
fistl
lods
pop
lahf
ret
movsb
push
repnz
pop
into
pop
cmp
jg
loope
adc
push
push
les
int3
mov
mov
sbb
lds
jecxz
push
in
adc
outsl
sti
imul
cmp
leave
imul
add
sbb
mov
inc
mov
mov
sub
leave
dec
fnstcw
inc
and
nop
testl
and
cmp
ljmp
cmpsl
mov
cli
jmp
call
push
xchg
or
data16
xchg
outsb
fistpll
and
iret
movsl
xor
fldt
inc
shll
mov
and
pop
ret
ret
roll
aad
sub
mov
and
xchg
pop
into
test
jns
jmp
imul
fwait
sbb
outsb
cld
fwait
jbe
cmc
jno
xorb
push
lds
testb
ja
sbb
inc
enter
sub
pop
int3
stos
data16
notl
pop
ds
scas
and
scas
cmp
mov
es
add
mov
mov
movsl
xor
repz
cmc
pop
out
out
jno
daa
mov
inc
mov
push
lret
pop
ds
adc
daa
mov
and
xchg
adc
test
aad
int3
inc
and
cs
mov
inc
mov
inc
ret
ret
and
adc
sti
imul
push
enter
push
test
mov
inc
mov
addb
or
out
push
lahf
push
fcoms
cmpsl
push
mov
jecxz
mov
xchg
repnz
lcall
mov
dec
ret
ret
gs
pushf
outsl
scas
cmpsb
sub
icebp
popa
add
inc
inc
rolb
sarb
aaa
cmpsl
ret
popa
lock
pop
xlat
inc
xlat
mov
std
adcl
lahf
or
loope
adc
inc
stc
popa
icebp
nop
arpl
cmp
iret
push
lds
testb
add
dec
enter
data16
mov
inc
mov
xchg
add
adc
in
sbb
jns
jno
jecxz
inc
fstpt
push
xchg
add
sahf
je
insb
loop
je
push
jns
xchg
add
sahf
sbb
pop
cmp
add
dec
sub
push
cmp
sub
aam
cmp
pop
jecxz
push
in
pop
fisttps
fsts
ss
inc
mov
idivb
test
sbb
imul
mov
jle
js
rcll
iretw
inc
mov
xchg
rcrb
cmpsb
adc
inc
inc
and
push
call
popa
iret
dec
fidivrs
mov
mov
fs
jl
testb
fisubrl
mov
and
rorl
push
repnz
fisttpl
fisttpll
inc
add
add
and
lret
pop
into
test
int3
stos
data16
pop
enter
popa
xchg
xchg
adc
mov
cmp
pusha
scas
cmp
inc
and
sbb
mov
xor
test
stos
cmp
sub
sbb
inc
mov
pop
fimuls
push
loope
notl
arpl
cmc
push
fcompl
scas
pop
movsb
cmpsl
aaa
push
mov
ljmp
fidivl
sub
jl
gs
pop
pop
inc
and
cmp
dec
adc
push
mov
shll
mov
int3
stos
data16
sub
aaa
push
mov
out
sbb
insl
pushf
xor
jle
fs
imul
push
pop
pop
jp
and
sub
xor
stos
push
data16
xchg
cmc
add
in
jbe
cmpl
mov
push
popf
or
xchg
add
sahf
sbb
lahf
punpckhdq
inc
mov
sahf
and
cmp
imul
dec
frstor
mov
pusha
in
sbb
sbb
arpl
pop
cmp
cmp
xchg
and
lock
add
es
arpl
cmc
daa
dec
rcll
add
aas
pop
test
xor
jae
inc
shll
outsb
or
dec
and
dec
fimull
fisubrl
mov
inc
mov
push
mov
mov
jae
jle
call
jg
pusha
jo
jg
jmp
testb
cmp
pushf
push
xchg
adc
fimuls
push
jge
xchg
cmc
add
js
mov
or
mov
mov
movsb
ret
ds
popf
adc
dec
push
xor
sub
lods
cmp
inc
aad
dec
mov
cli
pop
xchg
push
mov
es
je
out
sub
and
and
push
fwait
or
xor
movsl
xor
pop
jp
ds
pop
push
mov
ja
loope
sub
pop
xchg
or
movsb
cmp
mov
mov
and
jno
xorb
xchg
jb
or
repz
inc
rcll
sub
dec
frstor
add
push
fcomps
xchg
addr16
jge
je
jo
stos
cmp
inc
je
lea
dec
frstor
xchg
dec
rclb
xor
lea
adc
in
sbb
mov
cld
rcrb
xchg
addr16
aad
dec
sti
pop
xchg
or
xor
cli
dec
in
jl
jne
sub
fsts
sub
adcl
gs
pushf
outsl
lret
jb
in
mov
es
add
subl
sub
mov
std
or
add
dec
push
xor
or
icebp
pop
enter
pop
in
push
push
or
les
scas
pop
repnz
and
add
movsb
cmp
add
mov
insl
clc
outsb
or
pop
int
lds
mov
mov
sbb
dec
mov
mov
imul
enter
dec
cmpl
mov
cwtl
decl
loop
pop
repnz
orl
aas
ljmp
roll
movsb
sbb
fwait
adc
aam
sub
cld
fwait
jbe
jle
add
push
xor
sub
insl
inc
iret
pop
cmp
adc
push
mov
mov
aaa
movsb
cmp
add
fisubrl
mov
dec
mov
inc
mov
scas
aas
scas
lret
xor
ss
mov
or
mov
iret
stos
pop
test
pop
enter
dec
aam
sub
jns
jmp
test
mov
cmp
stos
das
mov
inc
aam
dec
cmpsb
fistps
stos
adc
lret
scas
pop
movsl
lret
dec
ret
andl
xor
and
lahf
punpckhdq
loop
std
push
fdivl
in
xchg
sbb
or
add
mov
dec
mov
testl
mov
and
mov
gs
and
shrb
enter
daa
mov
inc
mov
roll
mov
dec
fnstsw
cmp
mov
mov
fcmovb
pop
into
test
inc
daa
sarb
rcrl
loopw
nop
push
popa
nop
pop
rclb
cmpsl
push
fwait
mov
mov
mov
inc
mov
xchg
rcrl
scas
pop
movsl
clc
jge
je
push
insl
out
jg
jmp
inc
mov
mov
fstps
fwait
or
jns
xor
int
fadd
dec
fdivrs
mov
dec
fdivrs
xchg
repz
int3
icebp
jl
jne
and
add
inc
mov
adc
lret
test
lock
repnz
cmpsl
jmp
jmp
call
sub
cmp
push
lahf
push
cmc
popa
icebp
nop
arpl
dec
fimull
fidivl
adcl
rolb
shlb
mov
inc
mov
adc
push
leave
pop
cmp
and
lcall
mov
pop
and
push
add
adc
mov
fwait
or
jae
notl
arpl
jo
loop
jl
push
ja
xorb
outsb
cld
fwait
jbe
mov
rcll
dec
das
fisubrl
ficoml
mov
push
jns
insb
push
jno
jecxz
xchg
sbb
sub
lds
jecxz
std
test
xchg
pop
outsb
cld
xchg
cmc
add
insl
insb
or
scas
cmp
call
je
out
adc
sub
mov
push
test
jge
cmp
popf
adcb
out
mov
leave
jle
movsl
xor
imul
aad
sub
push
pop
leave
test
xor
adc
mov
aas
cmpsb
xor
scas
inc
lret
lods
pop
fstpt
movsl
dec
into
pop
cmp
pop
sbb
outsl
in
jge
negl
xor
loopne
push
jecxz
dec
call
scas
mov
and
les
mov
jle
jle
inc
aam
dec
cmpsb
mov
call
insb
xor
pop
or
je
cltd
or
push
push
lahf
punpckhdq
adc
sub
dec
sub
psllw
xorb
push
mov
adc
jmp
jmp
jmp
call
mov
mov
add
lahf
punpckhdq
loopne
stc
lret
mov
mov
in
sbb
jne
icebp
js
mov
inc
enter
outsl
ret
shr
popa
out
add
int
add
std
or
aad
repnz
fs
xor
push
lds
and
cmp
mov
cwtl
jbe
jp
in
pop
outsb
call
jae
jnp
mov
inc
lret
lret
mulb
or
or
mov
shll
sar
jmp
push
pop
jmp
call
xchg
outsb
out
jl
negb
sub
and
push
xor
dec
aas
mov
and
mov
cmpsb
shll
leave
push
call
shll
xchg
mov
mov
insb
loop
je
sbbl
fldl
mov
lods
aaa
lods
cmp
imul
insl
adc
fdivrs
aas
pop
test
pop
loop
push
aad
sub
xor
sub
dec
enter
sub
jae
and
roll
aad
divb
xorb
cli
push
iret
pop
cmp
xor
adc
mov
lods
mov
mov
cmp
pop
int3
stos
data16
cwtl
push
imul
cmp
sahf
or
cmpsb
psubq
cwtl
imul
inc
fidivrl
shlb
repz
cmpsl
leave
arpl
xchg
gs
adc
mov
and
ljmp
fldcw
ret
push
popa
nop
js
inc
mov
lods
call
repz
insl
fldenv
add
pop
in
js
mov
or
aas
sbb
cmp
sub
gs
pushf
outsl
test
imul
pusha
pop
bnd
ljmp
or
push
test
push
notb
or
jle
dec
fstpt
push
xor
push
mov
aad
inc
mov
mov
lea
push
xor
sub
mov
jg
jns
icebp
popa
add
push
inc
int3
inc
and
repz
mov
in
and
in
in
jle
popa
mull
icebp
dec
inc
rolb
sarb
adc
jmp
adcb
jecxz
test
xor
repnz
mov
test
aad
cmp
jecxz
push
in
outsb
mull
icebp
js
and
adc
int
and
cmp
push
xlat
call
jo
mov
dec
int3
inc
and
aad
dec
test
fimuls
sbb
xchg
add
sahf
dec
and
ss
mov
cmp
aas
or
jle
sub
jae
xchg
jge
push
cld
sysret
pop
jp
xor
push
xor
adc
jmp
jb
insl
hlt
pop
mov
pop
out
jp
jg
jmp
psubd
jne
mov
xlat
inc
xlat
mov
std
in
jp
jp
es
inc
mov
in
out
jo
sbbb
jmp
pop
aas
lret
xchg
jb
gs
pop
repnz
insl
hlt
pop
adc
fidivrs
and
jno
xorb
ja
xorb
inc
shll
aaa
add
shlb
add
add
add
add
add
add
add
add
jno
add
add
lock
add
jno
add
jno
add
add
add
add
add
add
jb
gs
inc
popa
jae
cs
insb
add
dec
gs
gs
inc
popa
jae
cs
insb
add
movsb
jo
add
jo
add
jo
add
add
add
add
push
jno
add
jo
add
add
add
add
jb
add
or
add
jo
add
add
add
add
add
add
add
add
jno
add
add
lock
add
jno
add
jno
add
add
add
add
je
fs
jo
gs
dec
outsb
outsw
add
dec
dec
push
inc
push
dec
cs
dec
dec
add
lar
outsb
inc
insb
imul
add
add
jo
jns
insb
imul
add
insl
add
je
insb
imul
inc
popa
je
add
inc
add
outsl
jae
inc
insb
imul
add
clc
add
jae
popa
addr16
outsl
js
add
add
jo
imul
push
inc
push
xor
cs
insb
add
mov
gs
outsl
insb
fs
popa
je
inc
add
push
dec
inc
dec
dec
xor
cs
insb
add
add
js
ljmp
mov
fmuls
fdivs
xchg
or
xor
push
fisttpl
fstl
test
ret
gs
adc
shlb
mov
cli
jp
insb
or
repz
gs
adc
inc
mov
mov
bnd
jp
cltd
adc
jne
mov
sub
into
inc
shlb
notb
pop
cmp
jle
pop
push
rcll
jo
jo
xorl
cs
and
and
sbb
dec
ret
jecxz
adc
setnp
outsb
popf
pop
out
adc
data16
aaa
scas
cmp
mov
or
out
out
mov
lahf
and
movsl
xor
pusha
notb
mov
or
inc
mov
xchg
dec
leave
pop
cmp
cmp
adcl
test
lods
and
inc
adc
inc
test
in
lock
outsl
or
hlt
adc
jmp
push
in
aas
lods
daa
mov
and
lcall
jl
jne
xor
imul
push
mov
aad
xchg
dec
jecxz
push
in
mov
xchg
cmpsb
jge
jg
jmp
sbb
xchg
adc
xor
movsb
cmp
mov
scas
ret
test
mov
lods
cmp
aaa
cmpsl
ret
dec
into
pop
cmp
pop
out
insb
loop
je
lock
xorl
sbb
aas
mov
xchg
xchg
icebp
add
pop
fimull
fisubrl
inc
lret
pop
ds
fistps
scas
pop
test
adcl
lods
cmp
mov
mov
std
or
mov
xchg
repnz
and
int
mov
out
jl
jne
xor
ret
push
lds
push
shll
sti
push
mov
aas
push
cmpsl
or
out
jl
testb
jb
in
sbbl
mov
iret
outsl
cmc
gs
pop
test
mov
and
jno
pop
cmp
xor
es
mov
test
out
cmc
pushf
outsl
test
adcl
test
mov
inc
mov
xchg
adc
enter
cmp
cli
adc
xchg
add
pusha
push
fimull
fidivrl
or
repz
cmc
add
pushf
xor
add
adcl
xchg
push
mov
sbbl
cmp
pop
jl
bound
stc
cwtl
imul
pusha
notb
cmp
add
push
cld
dec
or
mov
out
adc
lea
mov
sbb
into
cmp
push
movsl
and
jl
jne
add
dec
fidivrs
or
cmpsb
dec
aaa
mov
dec
mov
pop
stos
dec
inc
les
int3
xor
jne
mov
clc
jl
jne
jno
xchg
pop
bound
mov
ficoml
mov
lds
cmc
add
and
sbb
mov
hlt
outsl
loop
pop
loop
adcb
out
movsb
sbb
aas
mov
mov
and
mov
dec
fisttps
fsts
fisttpll
out
iret
pop
leave
test
out
inc
xlat
inc
and
js
dec
fnstcw
mov
add
mov
jns
pusha
rorb
mov
je
out
imul
jo
roll
aad
jge
je
insl
pop
xchg
add
sahf
jnp
sbb
movsb
cmp
jnp
pop
leave
test
lods
lahf
sbb
test
jge
jg
test
and
pop
int
addr16
fstl
mov
push
lds
int
xlat
mov
lea
insl
std
insl
hlt
pop
mov
cs
repnz
pop
repnz
sbb
dec
add
cs
leave
mov
ss
mov
bound
jae
cwtl
xchg
sub
mov
fwait
push
cmp
aam
push
addr16
outsl
sbb
dec
ficompl
cmc
mov
push
pop
aas
xchg
ret
or
pop
and
nop
xor
xor
notl
mov
movsl
mov
xlat
pop
xchg
sub
cmp
xchg
movsb
jge
jbe
imul
je
icebp
inc
popf
jo
fs
and
sub
and
negb
popa
imul
mov
cmp
pop
stc
into
mov
push
or
or
hlt
inc
orl
insb
shrl
or
mov
js
xchg
mov
arpl
insl
jmp
add
push
pop
shl
cmpsb
ja
clc
jmp
dec
or
inc
push
mov
in
pop
sbb
cltd
lea
lahf
adc
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
push
add
pop
pop
pop
pop
pop
pop
pop
add
or
or
or
or
add
add
or
or
or
or
add
add
or
or
or
or
or
add
or
or
or
or
or
add
or
or
or
or
or
add
add
or
or
or
add
push
push
push
push
push
push
push
push
push
push
push
push
push
add
lldt
adc
adc
adc
adc
adc
adc
adc
adc
add
add
test
adc
pushf
pop
adc
pushf
pop
adc
pushf
pop
adc
pushf
pop
adc
pushf
pop
adc
popf
pop
adc
popf
pop
adc
popf
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
add
and
adc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
sub
sbb
or
cmp
sub
sbb
or
cmp
sub
sbb
or
cmp
sub
ds
push
push
push
cmp
adc
sub
sbb
or
sbb
or
add
add
or
or
movups
adc
or
add
sbb
add
or
sbb
clts
sbb
or
sub
push
and
ss
das
sub
es
and
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
adc
and
add
and
adc
and
add
add
add
add
adc
and
add
and
adc
and
adc
and
add
add
add
and
adc
and
add
add
add
add
adc
add
add
and
adc
and
adc
add
adc
and
add
and
adc
and
add
add
add
add
adc
and
add
and
add
add
add
add
add
add
add
and
adc
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
addb
and
add
add
add
add
add
and
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
or
add
add
add
add
add
add
add
inc
add
or
add
add
add
or
add
inc
add
or
add
add
add
inc
add
add
add
or
add
inc
add
add
add
add
add
inc
add
or
add
add
add
inc
add
add
add
add
add
inc
add
or
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
inc
add
or
add
add
add
inc
add
or
add
add
add
inc
add
add
add
add
add
or
add
inc
add
or
add
add
add
inc
add
or
add
add
add
or
add
inc
add
or
add
add
add
add
add
add
add
add
add
inc
add
or
add
add
add
and
add
add
add
inc
inc
and
add
adc
add
adc
and
add
add
and
inc
inc
add
add
adc
add
adc
inc
add
inc
add
add
add
adc
add
add
add
add
adc
and
inc
add
add
add
inc
add
adc
add
adc
inc
and
add
add
add
adc
add
inc
inc
and
inc
add
add
add
inc
inc
and
add
and
inc
add
adc
add
adc
inc
and
inc
inc
add
inc
inc
and
add
adc
add
add
and
add
add
and
add
and
inc
add
adc
add
adc
and
inc
inc
add
add
adc
add
inc
inc
and
add
add
add
adc
add
add
add
add
adc
add
inc
add
adc
inc
add
inc
add
add
add
add
and
add
and
add
adc
and
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
inc
adc
add
add
inc
adc
adc
add
add
add
inc
add
add
add
inc
adc
add
add
add
add
inc
adc
add
add
inc
add
add
add
inc
add
adc
adc
adc
add
add
add
inc
add
inc
add
add
add
inc
adc
add
add
inc
add
adc
adc
adc
add
add
add
inc
adc
add
add
add
add
add
add
inc
add
add
add
add
add
inc
adc
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
adc
adc
add
add
add
inc
add
inc
add
adc
add
add
add
inc
adc
adc
add
add
add
add
add
add
add
inc
adc
add
add
inc
add
add
add
add
add
addb
add
and
or
or
xchg
testl
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
push
add
pop
pop
pop
pop
pop
pop
pop
add
or
or
or
or
add
add
test
adc
pop
adc
cmpsl
pop
adc
pop
adc
cmpsl
pop
adc
cmpsl
pop
adc
cmpsl
pop
adc
cmpsl
pop
adc
pop
adc
add
add
add
add
xchg
cmc
add
push
lret
lret
mov
jmp
mov
lret
fstpt
daa
inc
mov
mov
mov
pop
sub
add
xchg
popf
pushl
jmp
xchg
adc
inc
ret
ret
sahf
or
cmpsb
inc
fistps
stos
pop
cltd
xlat
scas
jbe
jmp
xor
and
data16
xchg
shll
xor
pop
xchg
sbb
aad
xlat
add
je
pop
iret
stos
pop
adcl
sbb
pushl
mov
pop
jp
xor
scas
aas
pop
test
jae
mov
mov
mov
andb
sub
jmp
mov
jmp
jge
addr16
cmp
dec
jmp
imul
out
popa
mov
ret
daa
mov
dec
mov
and
fs
jo
jmp
xchg
add
add
movzbl
jmp
adcb
loopne
mov
mov
pop
iret
pop
cmp
jle
or
stos
xchg
dec
cmp
lods
add
add
inc
shlb
push
xor
or
and
inc
fnsave
lds
rcrb
or
je
popa
mov
jmp
js
jp
inc
and
sub
push
ret
cmpsb
push
mov
push
mov
jecxz
fsubl
cmp
jmp
inc
fdivl
in
lahf
and
pushf
jmp
pusha
jmp
xor
popa
out
adc
pop
pop
sahf
or
cmpsb
inc
mov
fwait
lcall
add
jmp
xor
pop
dec
push
jmp
loopne
hlt
xchg
outsb
nop
nop
adc
mov
fcmovnb
inc
xlat
mov
cmpsl
insb
nop
jmp
xor
sub
xor
sbb
xchg
or
jle
jno
xorb
mov
test
call
push
push
inc
push
xor
cs
insb
add
pusha
sbb
bound
ret
jne
addl
mov
jmp
std
jb
xchg
xchg
sbb
je
lea
fildl
xor
fstps
ss
adc
sbb
aad
fmull
push
in
fisttpl
fnsave
lahf
dec
call
jmp
cwtl
sub
out
lahf
call
jmp
sub
jmp
ds
pop
test
movsb
xor
push
lret
jmp
adc
jmp
movb
movl
jmp
xor
aaa
push
mov
and
sbb
adcl
xor
xchg
je
jmp
test
aad
dec
fdivrl
adc
inc
cs
push
pop
pop
jmp
and
imull
cltd
push
dec
mov
pop
mov
loope
add
cmp
jmp
mov
mov
and
and
sub
jmp
xor
divb
xorb
test
jge
jns
mov
js
popa
mov
sbb
mov
shlb
mov
hlt
xor
jmp
mov
fdivrp
jo
xorl
adc
insb
cmpsl
rorl
inc
and
popf
ret
cmpb
xor
xchg
popf
pushl
mov
jmp
fsts
lods
pop
cli
jle
xchg
or
push
pusha
jmp
mov
mov
jmp
mov
in
or
add
lods
lods
lret
inc
lock
lock
lcall
outsl
xchg
cmpsl
mov
jmp
lret
stos
pop
into
push
orl
mov
add
test
neg
dec
fistpll
push
aaa
ret
fs
popf
insb
lds
cmpsb
push
mov
movl
movw
jmp
sbb
and
push
les
sbb
addl
jmp
mov
sti
rcrl
pop
mov
xor
ret
mov
jmp
into
push
lds
dec
mov
mov
popa
mov
ret
mov
add
aaa
mov
pop
fisttps
cmpsb
xor
scas
inc
lcall
movzbl
add
cmp
je
popa
mov
jmp
testb
and
lret
pop
ds
jg
mov
push
xlat
inc
and
sub
fwait
iret
lea
jmp
pop
sbb
sub
xor
mov
and
push
pop
aam
sub
mov
add
add
shrl
fstl
addl
jmp
xchg
sahf
stc
or
fisttps
jno
ret
rolb
mov
cld
ds
aas
pop
test
shrl
sbb
and
lea
pushf
aas
sub
jo
mov
and
jmp
xchg
pop
xchg
repnz
and
mov
dec
pusha
jmp
pop
jmp
pop
enter
jp
sub
push
les
iret
mov
andb
jmp
add
aaa
aam
fdivrl
imul
xchg
adc
rolb
popf
lea
pushl
lea
jmp
mov
mov
adc
and
inc
and
jmp
test
movsb
ret
ds
popf
ret
mov
cmpsb
cmp
or
add
call
mov
movw
jmp
jno
jecxz
mov
in
ljmp
incl
jmp
sub
jge
call
jmp
or
dec
jmp
cmp
inc
adc
push
popa
nop
gs
shr
pusha
notb
push
jno
testl
mov
movl
jmp
popf
sbb
dec
je
jmp
mov
jmp
int
fidivrl
sbb
sub
xchg
testb
daa
mov
gs
jmp
aaa
mov
pop
xchg
add
xor
sub
xlat
inc
fidivrl
fucomp
or
add
dec
gs
popa
addr16
outsl
js
add
movsb
fwait
jmp
lea
mov
and
add
pop
sub
add
xchg
popf
pushl
jmp
pop
xor
std
out
jg
mov
push
xchg
pop
bound
push
mov
shrl
mov
jp
mov
jmp
enter
push
xchg
xor
loope
out
mov
add
cwtl
push
xchg
repz
mov
cmpsl
adc
push
xchg
popf
out
call
push
push
inc
push
xor
cs
insb
add
nop
dec
mov
clc
jns
mov
mov
scas
fistps
stos
xorw
or
and
arpl
ss
mov
stos
data16
lcall
mov
sbb
and
daa
scas
cmp
mov
ss
dec
ret
ret
inc
and
sbb
adc
pop
mov
fwait
xchg
add
std
or
cmpsl
movsb
ret
ds
pop
into
pop
cmp
fs
or
icebp
popa
add
inc
fisttpll
mov
mov
andl
push
xor
inc
daa
sarb
outsl
mulb
push
ss
pop
test
or
fstps
test
nop
in
hlt
xchg
outsb
xchg
jle
mov
psubd
imul
inc
rclb
pop
aad
mov
jne
out
add
adc
inc
int3
inc
and
insb
or
loop
push
xor
cmp
mov
pop
cmp
pop
cmp
adc
gs
pushf
outsl
lret
fdivrs
push
jns
and
mov
inc
shll
xor
adc
xchg
cmc
add
or
push
movsb
pop
lds
iret
push
sub
lock
cmpsb
cmp
out
jo
xorl
mov
scas
pop
xchg
or
jle
jge
je
insl
push
adc
out
cmp
mov
pushf
sti
push
jecxz
and
add
std
or
rcrb
stos
pop
test
jmp
sti
or
jo
xorl
jp
dec
les
int3
push
and
aas
pop
test
lds
scas
cmp
mov
test
mov
sbb
xor
loopne
mov
iretw
lret
stos
shlw
movsl
xor
push
mov
es
cmp
adc
mull
icebp
pop
movsl
cmp
or
insb
loop
je
xor
cmp
and
cmp
dec
cmc
jno
xorb
inc
shll
call
push
ret
cmpsb
push
mov
add
mov
mov
mov
out
sbb
in
popa
icebp
nop
arpl
stos
sub
daa
mov
and
xor
addr16
imul
dec
mov
mov
and
cmp
cmpsl
or
sub
dec
fdivrs
inc
and
cltd
clc
or
mov
pop
repnz
jle
call
dec
cs
sub
cmp
data16
aam
sub
cmp
inc
lods
sub
lds
pop
sahf
or
cmpsb
inc
icebp
jne
mov
push
arpl
cmc
and
sbb
sub
fisttpl
mov
test
xor
call
orb
sti
push
mov
and
sahf
adc
pushf
xor
add
mov
mov
and
cmc
gs
push
jbe
jbe
loopne
stos
inc
shll
stc
cwtl
imul
sbb
add
dec
rolb
shlb
inc
fimull
fidivl
xor
sub
ss
xchg
pop
bound
pop
lods
bound
xlat
jmp
stc
cwtl
imul
inc
pushf
sbb
inc
fidivrl
stos
int
leave
ljmp
push
cmc
jle
mov
scas
pop
mov
add
mov
imul
and
push
mov
js
cs
aaa
movsb
cmp
add
fisubrs
push
test
push
mov
movsb
cmp
push
jg
jle
call
xchg
outsb
aas
and
sub
movb
pop
add
mov
sar
imul
insl
in
or
fwait
pop
inc
les
int3
and
push
xor
daa
inc
ret
ret
push
mov
fadds
adc
push
adc
jp
jp
sub
scas
sub
cmp
mov
mov
repz
test
loopne
ljmp
push
cld
pop
mov
fdivrl
xchg
repnz
mov
mov
mov
das
lahf
lods
cmp
cmc
gs
dec
pop
enter
outsl
cld
data16
xchg
outsb
lods
das
mov
dec
mov
sti
push
cld
sbbl
outsl
mull
icebp
js
int3
inc
and
sub
jb
adcl
test
int3
inc
and
int3
stos
xorw
or
fidivrs
test
pop
call
xlat
cmp
adc
psubd
jmp
icebp
nop
arpl
sub
jb
sub
pop
lret
scas
pop
pop
enter
lds
mov
shlb
jle
call
jbe
xor
jnp
mov
mov
mov
sbb
xchg
cmp
push
shlb
in
mov
jo
xorl
data16
lea
sahf
or
cmpsb
dec
mov
les
inc
and
push
push
xlat
inc
and
push
xchg
push
test
push
divb
fisubrl
shl
jo
xorl
addr16
and
pushf
pop
hlt
jle
mov
in
mull
jg
jmp
xchg
pusha
nop
push
mov
es
test
and
add
pop
mov
lahf
dec
fisttpll
out
out
in
jg
adc
and
stc
mov
adc
and
insb
or
mov
test
push
mov
les
sbb
data16
push
sbb
into
push
mov
shll
cli
popf
insb
test
lock
bound
lahf
js
cmp
push
ss
inc
mov
push
rolb
sarb
mov
lods
mov
mov
jns
mov
lock
mov
inc
enter
cmp
mov
cmc
jg
mov
cwtl
sbb
insb
or
mov
adc
mov
std
insb
loop
je
jnp
arpl
cmc
inc
push
xchg
pop
bound
pushf
outsl
fidivl
xchg
xchg
testb
les
sub
jns
jmp
add
push
daa
mov
je
fs
aaa
out
adc
pop
jo
add
sbb
roll
xor
aas
pop
fimull
fimull
inc
mov
clc
outsb
or
adc
rorl
xor
and
les
lods
cmp
cmp
pop
jp
inc
in
lcall
mov
and
das
fwait
xchg
mov
sbb
testl
or
push
mov
mov
test
adc
dec
fimull
fidivrl
data16
xchg
outsb
lods
sub
cmp
lods
xor
int
aam
adcl
add
push
test
push
xlat
xchg
adc
in
sbb
add
push
lds
mov
mov
inc
xchg
cltd
and
fs
popf
insb
test
mov
cs
cmp
dec
adc
mov
into
xor
jb
xchg
testb
fcomps
push
fimull
fidivrl
loop
pop
loop
aas
lods
and
sbb
sarl
in
mov
in
pop
scas
jg
jle
call
xor
jbe
scas
aas
pop
test
mov
mov
and
push
mov
cmp
and
arpl
cmc
je
xchg
add
push
movsb
cmp
gs
sbb
int
addr16
movl
xor
gs
adc
in
sbb
sahf
sbb
mov
dec
lds
iret
das
pop
rolb
shlb
mov
test
xchg
pop
bound
ret
js
push
cld
cmp
pop
jp
and
nop
lret
scas
pop
jmp
jb
xchg
push
mov
push
ret
cmpsb
push
cli
mov
mov
and
cmp
sbb
adc
mov
fs
popf
insb
mov
loop
inc
icebp
dec
imul
sub
jmp
mov
movb
adc
pushf
sti
push
xchg
pop
mov
jge
insb
or
out
xlat
push
lds
sbb
adc
decl
ljmp
lret
call
lret
lret
lds
iret
and
mov
jmp
jbe
cmpl
cmp
aas
scas
lret
mov
in
jns
mov
sbb
sahf
or
in
mov
and
stos
sbb
inc
shll
cmp
sbb
inc
and
in
jle
daa
mov
inc
mov
mov
call
xor
fwait
add
inc
xlat
mov
cmpsl
cld
xchg
cmc
add
movsl
cmp
jge
je
dec
rolb
inc
test
jmp
addb
repnz
aaa
mov
inc
mov
cltd
push
mov
es
mov
fldcw
push
fisttpll
out
jnp
add
adc
jbe
loopne
cld
jnp
mov
ss
aam
leave
test
lea
add
xor
mov
jno
jno
jecxz
int
int3
stos
iretw
push
push
xor
jle
hlt
push
cld
push
rcll
pop
out
push
rcll
push
sahf
sub
pop
ds
rcrl
pop
lcall
js
jbe
loopne
add
test
jge
or
pop
cmp
push
movsb
es
cs
mov
gs
jl
sbb
mov
jg
outsl
cmp
inc
and
xchg
pop
bound
shll
enter
and
jmp
idivl
je
popa
dec
push
xor
cmp
gs
pushf
outsl
lret
and
movb
sbb
dec
cmpsl
sub
out
adc
pop
inc
rolb
sarb
fisttpll
out
xor
cmp
add
outsl
clc
outsb
or
push
and
es
mov
out
loopne
jb
lods
movsb
ret
ds
js
jno
jecxz
xchg
mov
es
mov
xchg
adc
je
js
ljmp
mov
and
ret
inc
mov
test
mov
pop
fimull
fidivrl
fwait
and
fimull
fimull
mov
fwait
push
mov
es
mov
test
cmp
xchg
pop
or
lcall
dec
ret
repz
shlb
mov
xor
push
xchg
repz
mov
sub
jge
lods
cmp
mov
in
adcl
test
mov
mov
das
lcall
jo
js
ljmp
aas
imul
add
sbb
je
out
push
stc
gs
pushf
outsl
ljmp
lahf
and
adc
or
xor
sub
fimuls
xor
lret
scas
leave
cmp
and
inc
es
inc
mov
inc
leave
pop
cmp
sub
xchg
addr16
mov
inc
mov
pop
xlat
inc
and
or
push
insl
std
test
sahf
or
in
mov
es
push
lret
in
jns
jle
call
in
sbb
pop
enter
popa
cmpsb
xor
out
jl
notb
mov
sub
test
aad
into
jecxz
call
movsb
ret
ds
popf
sbb
fisttps
fldcw
mov
cmpsl
ret
bnd
xchg
pop
fdivl
in
rclb
mov
mov
and
push
xlat
inc
and
sub
notl
ja
xchg
testb
mov
push
mov
pop
scas
pop
loop
loop
je
mov
xchg
repz
ficoml
loope
sub
es
cs
leave
pop
enter
xchg
pop
xchg
repnz
and
xor
js
jge
negl
mov
cmp
mov
jecxz
fisttpl
fstpl
outsl
hlt
push
cld
push
sbb
popa
outsl
mulb
push
loope
in
je
add
jbe
loopne
jecxz
notl
push
xor
daa
movsl
sub
fdivl
in
inc
push
xor
xor
jp
in
cmp
lret
sbb
punpckhdq
mov
fsubl
rcr
push
shll
xorb
dec
fstpt
shll
repz
test
orb
out
call
leave
xchg
add
std
or
jp
bound
adc
sub
and
xor
bound
lock
bound
mov
cmp
inc
and
sbb
lods
sub
sbb
push
js
ljmp
xlat
jne
popa
add
pmullw
cmpsl
push
test
hlt
divl
xchg
inc
int3
inc
and
mov
cs
add
xchg
sbb
pop
repnz
fs
fwait
adc
in
sbb
mov
std
or
push
fisttpll
out
pop
fwait
or
sub
sbb
rolb
mov
icebp
and
adc
mov
jbe
sub
mov
adc
jge
jne
out
js,pn
jno
jecxz
fisttpll
mov
imul
sti
sahf
insl
in
sahf
pop
xchg
repnz
sub
xor
xlat
push
lds
fildll
iret
lods
sub
movsb
cmp
jnp
loop
pop
loop
adc
js
adc
push
xor
sub
dec
fidivrs
aad
dec
mov
arpl
push
fimull
fimull
into
inc
shlb
popf
in
mov
inc
fidivrl
and
sbb
outsl
lcall
push
xor
imul
out
jg
mov
aam
mov
negl
cmp
jo
dec
fstpt
call
and
loope
adc
or
cmpsl
dec
rolb
rclb
mov
xchg
adc
xor
push
ds
lcall
adc
push
xchg
add
addr16
jge
negl
cmpsb
push
and
push
fmuls
fdivrs
sub
roll
shll
test
jge
pop
xchg
sbb
cmp
js
mov
lods
cmp
mov
mov
sbb
push
cmpsl
mull
icebp
dec
add
add
cmp
sahf
cmc
gs
pop
pushf
push
xchg
repz
int
mull
icebp
sbb
cmp
mov
hlt
pop
sbb
fidivrl
and
and
pop
xchg
in
sbb
or
dec
fdivrl
arpl
cmc
and
mov
inc
mov
outsl
ljmp
pop
jb
jl
into
pop
cmp
xor
int3
inc
and
aaa
push
mov
mov
jle
call
jp
push
pushl
xchg
mov
mov
sbb
mov
mov
inc
mov
push
mov
mov
pop
lret
scas
pop
in
popf
or
iret
pop
cmp
adc
out
jl
notb
xchg
add
js
cld
xchg
cmc
add
lds
test
dec
fidivrs
xor
push
xchg
or
je
jg
mov
fistps
stos
cmpw
js
mov
push
rolb
shlb
xchg
jns
xor
sub
outsb
cld
fwait
jbe
xchg
xchg
sbb
aad
orl
pop
jb
pop
mov
scas
lret
les
mov
xor
adc
mov
push
les
int3
jge
or
xchg
add
imul
and
pop
iret
stos
pop
rcrb
aaa
ret
mov
dec
mov
in
pop
divl
ret
sbb
mulb
jns
test
pop
test
ss
lods
xor
pop
int3
stos
orw
lret
mov
ja
popa
add
add
fisttpll
out
cmpsl
xor
out
jg
jmp
cmp
xor
popa
icebp
nop
arpl
mov
sti
je
lea
aaa
cmpsl
ret
fstl
mov
aaa
push
mov
insl
pushf
xor
aas
mov
pop
int3
stos
iretw
sbb
xchg
add
les
int3
jnp
jne
mov
xchg
mov
and
sbb
adc
push
lret
mov
pop
in
jb
xchg
in
jb
xchg
and
xor
scas
addr16
fisttpll
out
loopne
notb
cmpsb
shll
push
aam
sub
aam
repnz
xchg
gs
les
mov
cmpsl
inc
leave
pop
cmp
cmp
cld
dec
frstor
mov
cmp
or
iret
xor
pop
rolb
shlb
mov
dec
mov
out
sbb
outsl
faddl
mov
jnp
mov
cli
jae
xchg
inc
rolb
shlb
ret
push
lds
arpl
cmc
xor
dec
sub
add
pop
mov
and
inc
shlb
push
xor
dec
lds
mov
sbb
jge
je
insl
inc
rclb
and
push
xchg
xchg
repnz
cmp
in
notl
ds
test
test
out
cld
fwait
jbe
mov
ficompl
mov
jmp
push
in
aas
addr16
pop
xlat
inc
and
js
cmc
gs
dec
jae
jbe
loopne
fmull
push
in
fisttpll
out
std
imul
or
pop
jp
and
dec
fidivrs
outsl
or
les
jmp
sub
add
pop
mov
addl
jmp
ret
dec
enter
and
jl
negb
movsb
dec
lds
add
push
adc
mov
inc
add
jmp
mov
jmp
popa
jmp
xchg
and
add
sub
mov
fldl2t
adc
add
das
scas
cmp
mov
mov
add
pop
adc
adc
divps
movsb
jo
out
push
ds
or
outsb
cld
fwait
jbe
cmp
inc
adc
mov
jmp
stos
daa
mov
and
cld
jne
mov
cmpsl
sub
daa
repz
mov
mov
mov
andb
sub
jo
jmp
jg
fs
or
scas
or
sti
sbb
loopne
jmp
sbb
clc
je
lea
cmpsl
aaa
push
mov
les
adcl
dec
loopne
jmp
fisttpll
mov
xchg
repnz
dec
loop
testb
test
incl
add
mov
movzbl
jmp
jno
jne
out
pop
mov
jmp
rolb
add
jmp
out
ljmp
mov
add
jmp
push
jmp
push
xchg
jb
mov
mov
xchg
insb
mulb
cmp
xor
daa
bnd
xorb
cmpsl
aaa
push
mov
decb
adc
pop
jb
addr16
add
mov
push
shll
add
mov
xor
adc
pop
inc
and
or
lea
mov
inc
mov
in
add
sarl
sub
inc
shll
add
insb
loop
je
xchg
add
loopne
adc
push
xor
pop
add
add
mov
or
jno
add
call
xchg
jnp
push
test
push
cltd
inc
fsubrs
int3
add
cmc
jne
mov
or
in
cld
icebp
ja
xorb
pusha
notb
mov
xor
popa
icebp
nop
dec
movl
cmp
jno
xorb
notl
add
and
xlat
cmp
and
adc
add
stos
es
cs
jb
insl
hlt
pop
mov
pop
stos
test
test
push
mov
mov
or
or
add
cs
mov
aad
xchg
add
movsb
ret
cmpsb
add
add
mov
push
int
and
aas
test
aad
int3
mov
stos
rorl
push
roll
inc
cli
jg
mov
aaa
mov
dec
mov
pop
ljmp
fidivrl
mov
adc
add
or
sbb
add
jle
scas
cmp
mov
cltd
pop
xchg
lahf
incl
add
cmpl
add
add
les
add
int3
scas
and
rolb
xchg
les
add
sarb
fdivl
in
jl
xor
add
out
jg
mov
fmuls
movsb
push
cld
repnz
xchg
outsb
fnstenv
stos
cmp
or
mov
sub
mov
shl
jae
xchg
push
enter
dec
in
jno
xorb
inc
aad
dec
test
pushf
xor
dec
add
cmp
ficomps
test
inc
es
pop
fdivl
in
pushf
pop
nop
sbb
xor
lahf
adc
hlt
adcl
test
or
in
mov
sub
lds
push
fmuls
fcomps
shlb
xchg
les
xchg
mov
mov
sbb
in
cmpsb
xor
mov
add
xor
ja
push
lcall
movsb
ret
ds
arpl
outsl
or
les
in
fildl
mov
stos
lods
xor
int
aam
cmp
mov
inc
mov
shll
jmp
cld
adc
adc
sub
adc
adcl
test
and
inc
push
jge
negl
cmp
insl
out
adc
or
sub
lret
pop
ds
in
add
add
ret
cmpsb
shll
cmp
add
stos
push
dec
in
inc
xlat
inc
and
imul
push
inc
rolb
shlb
mov
jg
add
cltd
adc
push
mov
incl
add
and
xchg
add
mov
outsl
cmc
gs
pop
in
jnp
mov
pop
lds
iret
dec
lea
and
xchg
incl
in
insl
std
test
ficomps
stos
data16
add
push
les
add
sahf
dec
mov
mov
mov
inc
mov
jg
imul
or
push
xchg
add
mov
jo
jb
std
insl
hlt
pop
mov
dec
cwtl
adc
add
sub
call
jecxz
loope
jae
cmpsl
movsb
ret
ds
inc
fisttpl
xchg
add
add
stos
pop
into
ja
push
jno
inc
fidivrl
in
je
outsl
addr16
lea
in
adc
jmp
in
adc
insb
rorl
movsb
push
shrb
imul
jmp
scas
aaa
cmpsl
ret
cld
jle
mov
lods
pop
mov
adc
shr
inc
sti
jns
mov
movb
dec
test
cmpsb
xor
scas
push
icebp
jbe
cmpl
sub
mov
lea
push
les
mov
and
test
adc
sub
outsl
add
add
jmp
push
cltd
or
jno
jbe
cmpl
pop
int3
stos
data16
imull
lea
jmp
mov
xchg
repnz
inc
enter
cmp
movb
movb
movb
movb
movb
jmp
rcrl
xchg
addr16
std
push
test
movb
jmp
and
mov
lock
loop
je
pop
inc
repnz
dec
movb
movb
movb
movb
jmp
and
and
mov
movb
jmp
pusha
movb
jmp
movb
jmp
and
dec
fimull
fisubrl
aas
scas
lret
sbb
cmp
dec
mov
push
movb
movb
movb
movb
jmp
mov
sahf
movb
jmp
movsl
movb
jmp
fimuls
mov
or
sub
and
shlb
inc
shlb
xchg
das
mov
test
mov
les
mov
inc
mov
dec
enter
xor
inc
mov
dec
movb
jmp
pushf
icebp
movb
jmp
inc
fimull
fidivl
inc
jecxz
push
in
inc
popf
mov
inc
pusha
std
insl
hlt
pop
xorb
sub
cmp
push
mov
es
sub
fadd
inc
mov
inc
movb
movb
movb
jmp
xchg
sbb
je
lea
test
or
fisubrs
push
jnp
insl
hlt
pop
lock
lcall
shll
inc
fildll
dec
es
inc
mov
stos
and
jnp
mov
mov
movb
movb
movb
movb
movb
jmp
cld
jb
xchg
jns
fs
sub
inc
xlat
mov
cli
jne
mov
lock
inc
loopne
movb
movb
movb
movb
jmp
jecxz
and
jne
xor
call
pop
enter
jns
scas
or
add
adc
inc
aam
dec
out
mov
jns
cmp
ja
jmp
jmp
addr16
add
movb
jmp
xor
movb
jmp
pop
rolb
shlb
test
rorl
add
push
push
push
xor
pop
mov
cmp
jne
jmp
in
clc
lahf
push
sub
add
add
das
add
add
dec
fstpt
and
in
pop
jmp
call
jmp
lahf
adc
pop
incl
jmp
ja
insl
inc
mov
add
jmp
icebp
jl
jne
and
inc
mov
dec
fmuls
fsubrs
xchg
push
jmp
in
jge
je
sub
int3
popf
outsl
dec
shr
js
add
inc
aam
dec
call
cmp
bnd
mov
jmp
dec
fisttpll
out
aam
xor
jmp
mov
jmp
fwait
lock
or
jmp
adc
jmp
add
add
add
jmp
fs
popa
add
pop
inc
sbb
mov
add
mov
cmp
je
cmpl
jmp
add
nop
sub
inc
or
dec
dec
jmp
push
jmp
int3
popf
aaa
cmpsb
xor
scas
pop
xchg
pop
adc
add
lock
aad
movzbl
jmp
clc
jae
xchg
sbb
add
add
jmp
test
repnz
in
pop
jmp
fildl
mov
mov
loopne
jmp
jne
jmp
dec
inc
call
jmp
popa
ljmp
stc
in
outsb
adc
jmp
xorb
leave
add
add
int3
popf
out
outsb
mov
add
mov
inc
pop
into
repnz
jmp
and
shr
push
es
jmp
pop
lahf
punpckhdq
jns
test
xchg
dec
popf
pusha
notb
xchg
repz
mov
add
sub
rol
ljmp
adc
loopne
dec
jne
decl
jmp
int3
popf
bound
jmp
adc
movsl
mov
jmp
and
in
mov
jmp
lea
cmp
add
add
in
sbb
arpl
cmc
sbb
push
cld
sbb
shl
inc
cmp
jl
push
pop
mov
shr
jmp
movb
inc
mov
cmp
mov
stos
mov
add
jmp
xorb
jmp
dec
enter
add
add
jmp
clc
jge
je
push
mov
lds
popf
cmc
jge
je
jbe
pop
sbb
push
add
rolb
mov
inc
shl
dec
jne
jmp
cwtl
cmpsb
pop
jmp
sub
inc
dec
lret
pop
ds
loopne
add
lcall
or
mov
push
inc
xchg
adc
add
push
fmuls
fdivrs
or
movzbl
or
inc
jmp
jns
mov
add
add
jmp
js
add
adc
push
jmp
ja
insb
or
cmc
adcl
cmp
add
add
jmp
push
fimull
fidivrl
cwtl
push
imul
pop
lcall
inc
and
sbb
sub
aam
jmp
add
jmp
mov
add
add
jmp
push
lds
iret
jnp
sub
sahf
cld
lcall
jl
jmp
mov
and
jmp
out
jmp
add
add
jmp
cmc
data16
xchg
outsb
push
pop
lock
jmp
int3
popf
out
jp
jmp
fwait
or
mov
jmp
sbb
pop
enter
jp
or
dec
popa
jmp
mov
and
jmp
sub
sub
jns
popf
idivl
je
popa
inc
iret
pop
cmp
and
jmp
mov
mov
das
test
mov
mov
andb
sub
jmp
outsl
aas
ret
add
add
divl
add
xchg
add
sahf
sub
adc
inc
adc
add
jnp
int3
popf
stos
cmp
jmp
rcrb
pop
cltd
pop
les
add
mov
cld
pop
cmp
jmp
xlat
mov
addl
jmp
js
jbe
loopne
jns
jbe
loopne
ljmp
pushl
jmp
in
jb
xchg
sbbl
and
xchg
pop
jne
jmp
loope
icebp
nop
arpl
add
add
pop
cmp
add
jbe
movsb
pop
mov
or
jle
mov
xor
cmp
jmp
mov
popf
mov
addr16
cmp
add
jl
negb
xchg
lahf
mov
jmp
and
dec
daa
cmpsl
aaa
push
mov
mov
int
leave
lods
mov
add
mov
add
cmp
jmp
or
add
add
cli
call
push
mov
imul
int3
stos
xchg
orb
cli
or
push
fmuls
fdivrs
lret
pop
ds
test
add
add
push
add
add
gs
pop
jmp
cli
popf
insb
mov
out
movb
movb
movb
cmp
je
jmp
inc
roll
aad
sub
imul
cli
outsl
lcall
xchg
int3
popf
xor
lea
and
sti
out
ret
sbb
xor
bound
mov
lahf
punpckhdq
movb
movb
movb
movb
movb
jmp
mov
or
cmpsb
adc
adc
sub
pop
add
pop
or
cmp
call
out
jnp
mov
js
jbe
loopne
fwait
jae
xchg
pop
pop
mov
jmp
push
jmp
mov
stos
cmp
or
inc
lret
pop
ds
xchg
mov
jmp
push
jmp
add
pop
test
mov
pop
fisttps
fstps
lock
pop
add
add
ret
jmp
adc
in
sbb
add
fisubrs
sbb
xchg
orb
lret
jmp
jbe
insb
or
loop
jb
xchg
dec
xor
jmp
movzwl
jmp
pop
fisttpl
fnstsw
dec
das
fimull
jns
imul
cmp
cwtl
cmp
jne
shr
mov
jmp
push
ret
addb
pop
or
jp
call
mov
jmp
adc
cmpsl
cmp
lock
pop
or
movzwl
jmp
xlat
inc
aad
dec
cld
jmp
ror
pop
int3
stos
data16
daa
push
mov
mov
shr
mov
mov
mov
jmp
add
jmp
repnz
cmp
jmp
mulw
icebp
push
push
lcall
and
addb
jmp
jae
sub
jmp
xor
or
add
clc
outsb
or
adc
jne
mov
or
sub
sub
cmp
jbe
decl
jmp
mov
jmp
scas
sbbb
jmp
cmp
jmp
xchg
or
mov
inc
mov
dec
rolb
rclb
jl
xchg
lret
adc
add
add
mov
ret
mov
cmpsl
ja
gs
adc
push
mov
jne
jmp
shl
jmp
mov
aad
add
lods
sub
aaa
cmpsl
ret
push
mov
jmp
jo
push
test
jge
outsb
xor
repnz
movzwl
mov
imul
imul
mov
mov
shl
jmp
mov
fsts
xorl
hlt
pop
rorl
or
jmp
mov
scas
leave
cmp
or
into
pop
repnz
rolb
dec
sub
loopne
jmp
in
clc
jmp
pushf
or
in
movsl
lea
aad
lea
sub
cmp
andb
jmp
call
xor
xchg
cmp
jmp
mov
lea
stc
decl
jmp
test
mov
ja
xorb
notl
add
into
sub
jmp
pop
mov
sub
jmp
ljmp
aam
sub
mov
and
adc
jmp
jmp
mov
inc
cld
jmp
movsb
and
inc
hlt
jmp
iret
dec
ret
mov
mov
mov
and
xor
jbe
jmp
mov
or
jmp
mov
rorb
pop
aas
lret
push
xor
cmp
adc
movb
movb
movb
movb
jmp
std
movzwl
imul
imul
or
sub
sub
cmp
jmp
in
lods
mov
dec
lock
jmp
loope
jmp
lds
mov
test
add
pop
aam
sub
inc
cmc
xchg
sbb
lahf
punpckhdq
and
cmp
sbb
movzwl
jmp
jecxz
fucomi
mov
fiaddl
pushf
enter
jmp
mov
test
cmp
xor
pop
mov
xchg
mov
jne
movzwl
jmp
jmp
xchg
add
fs
mov
shr
sub
test
jmp
cmpsb
jbe
movzwl
jmp
xchg
or
pop
xchg
adc
fidivs
mov
sub
jmp
ret
mov
hlt
xchg
outsb
leave
sbbb
jmp
insl
hlt
pop
out
stos
jo
sub
sub
cmp
jbe
decl
jmp
sub
aaa
fwait
stc
jo
jmp
faddl
dec
cmpsb
and
sub
fimull
ficompl
movsb
ret
ds
sub
cmp
jbe
dec
jmp
dec
roll
aad
sbbl
jmp
fs
sbb
add
xor
mov
les
aas
lret
jmp
xchg
loopne
push
and
jnp
xchg
cmc
add
imul
pop
jecxz
push
in
repz
mov
shll
mov
jmp
cmp
cwtl
adc
mov
add
jmp
jecxz
clc
lahf
push
test
mov
jle
popf
or
fldcw
mov
shl
pop
add
mov
pop
jmp
outsl
fisubrl
xchg
jmp
jmp
hlt
xchg
outsb
leave
dec
fdivl
in
add
aaa
movsb
xor
int
out
sub
jmp
xchg
test
push
mov
es
cs
mov
mov
sub
jmp
jmp
loopne
ljmp
pop
mov
jmp
into
pop
leave
test
decb
nop
push
popa
nop
push
xor
pop
gs
fs
jne
cmp
jb
jmp
leave
pop
jmp
pusha
jmp
pop
lds
iret
daa
xlat
dec
fdivrl
loopne
jb
adc
push
push
pushl
jmp
push
inc
and
pop
movsl
mov
jmp
xor
push
add
lds
mov
cmpsb
and
lds
dec
test
lcall
lock
shl
shr
add
xor
lea
div
jmp
mov
movsb
ret
ds
addl
insb
cmp
jge
mov
push
adcl
add
outsb
cld
fwait
jbe
nop
ficoml
jmp
clc
jo
xorl
pop
lods
jnp
clc
insb
sub
jmp
push
nop
push
popa
nop
aaa
push
fisttpl
ficomps
out
mov
ret
jne
addl
mov
jmp
ja
push
sbb
push
mov
loop
and
rolb
add
jmp
mov
mov
es
lahf
push
pushf
sti
push
mov
fldt
mov
jle
and
in
xchg
xchg
cmp
jmp
les
mov
mov
lods
cmp
in
jge
notl
xchg
into
mov
mov
add
push
leave
pop
cmp
and
insb
loop
je
in
jno
xorb
test
jge
or
mov
sub
shr
dec
mov
pop
inc
shlb
push
jns
pusha
loop
icebp
nop
arpl
mov
imul
add
mov
jmp
stos
lret
dec
mov
jmp
dec
enter
ss
pop
fimull
fisubrl
and
nop
popf
mov
add
fcomi
jne
mov
inc
lret
lret
cli
push
jo
adc
shr
movzwl
mov
movzwl
imul
imul
mov
jmp
or
sbb
push
sub
arpl
loope
jmp
into
inc
mov
out
or
imul
sbb
das
xor
rclb
shr
inc
cmp
pop
cs
ficoms
cmpsb
push
cli
es
inc
mov
in
movzwl
movzwl
push
mov
push
mov
shr
jmp
data16
gs
push
sti
jae
xchg
mov
mov
cmp
jmp
xchg
or
insb
loop
je
mov
mov
jo
fldcw
call
add
cmp
outsb
xchg
setg
or
imull
test
jl
add
xchg
insl
hlt
push
cld
adc
in
sbb
push
fistpl
test
loop
sbb
jmp
dec
lret
roll
andb
jmp
in
cmc
pushf
outsl
test
repz
jae
xchg
rcr
pop
fildl
add
add
jmp
mov
jmp
and
push
rolb
rolb
in
outsl
lcall
sbb
inc
adc
add
shlb
xor
push
xchg
push
test
push
mulb
fnstcw
frstor
rcrl
jmp
int
fidivrl
mov
push
xor
sbb
sahf
or
cmpsb
fs
and
cmp
jne
addl
mov
jmp
push
jecxz
push
in
pop
lock
xor
inc
dec
jbe
mov
addr16
jmp
cs
pop
fwait
or
sub
mov
rclb
push
loope
lcall
add
sbbb
jmp
jns
jle
call
insb
je
jmp
mov
jmp
mov
mov
sbb
ss
xchg
mov
mov
mov
mov
jmp
sub
xchg
cmpsb
pop
popl
jmp
je
shr
jo,pt
lea
ret
jmp
or
pop
roll
aad
dec
inc
and
sbb
lahf
sbbl
xchg
andb
shrb
bound
popf
pushl
jmp
sub
cmpl
jmp
js
shrl
jmp
sub
ret
scas
pop
mov
in
call
lea
jmp
in
jmp
cmp
gs
adc
push
xchg
sub
jmp
inc
push
xor
daa
leave
dec
fidivrs
inc
and
and
aad
pushf
jmp
xor
cmp
jb
jmp
jmp
mov
sti
nop
cmp
in
sbb
sbb
js
or
pop
int3
stos
data16
sbb
mov
enter
inc
mov
shrl
fidivrs
sub
jmp
push
fdivl
in
es
mov
mov
and
inc
add
ret
jmp
call
add
and
cmp
jne
addl
jmp
fisttpl
mov
lock
pop
popl
jmp
popf
or
in
mov
popf
sub
push
shlb
in
sbb
mov
out
decl
mov
out
lea
jmp
faddl
mov
lea
cli
scas
xor
sbb
hlt
test
je
add
popa
mov
jmp
andl
jmp
in
inc
cld
jmp
sbbb
jmp
mov
xchg
adc
dec
adc
sub
mov
inc
mov
pop
push
rclb
in
sub
cmpl
push
mov
jne
xor
jmp
test
jmp
stos
sub
xor
adc
xlat
push
mov
jmp
scas
jmp
adc
dec
into
pop
cmp
ds
fwait
or
push
aad
or
mov
mov
add
cmp
jmp
mov
lods
mov
mov
sbb
and
xchg
sbb
aad
lock
shr
jmp
dec
lret
fists
jmp
mov
sub
jmp
mov
jmp
jno
inc
enter
outsl
mov
mov
cmpsb
adc
and
sar
inc
adc
test
xchg
push
push
outsb
push
imul
add
mov
jmp
xchg
js
mov
lock
movsb
xor
dec
fdivrl
shll
adc
inc
or
xchg
jns
mov
xor
imull
je
dec
xor
and
movsb
inc
shll
sub
movb
adc
idivl
or
andb
sub
jo
jmp
jle
mov
jmp
ficomps
lods
xchg
adc
movsl
xor
fimull
fidivrl
sbb
dec
clc
lea
pushl
lea
pushl
call
jmp
daa
mov
std
or
sub
pop
cmp
mov
sbb
jmp
dec
cmp
sub
jmp
mov
and
mov
iret
jae
fs
push
or
iret
jmp
push
jecxz
push
in
ret
dec
fidivrs
and
push
aaa
call
sub
jmp
cmc
jp
jmp
jno
outsb
or
or
aaa
ret
xlat
inc
and
or
pop
lret
scas
pop
cltd
aas
pushf
mov
jmp
mov
jmp
jns
push
cld
pop
adc
cmp
mov
cltd
or
mov
jmp
lock
das
lods
aas
fdiv
dec
test
div
lock
lret
inc
aam
sub
fstpt
jmp
bound
addr16
test
add
add
and
popf
push
xchg
repz
in
mov
lret
mov
xchg
cmp
jbe
jmp
or
je
mov
jg
or
push
xorl
roll
inc
mov
pop
cwtl
sbb
jae
xchg
add
das
les
clc
jmp
add
jmp
or
ja
loop
pop
loop
pop
fmuls
fsubrs
cs
shlb
cltd
xchg
popf
pushl
mov
jmp
push
sub
jmp
pop
rcl
out
lods
in
xchg
jmp
scas
sub
mov
inc
mov
iret
inc
fidivrl
and
push
jge
jmp
add
jmp
lods
cmp
cmp
adcl
test
stos
out
push
pushf
jmp
movsb
sub
jmp
xchg
sbb
aad
sbbl
jnp
and
addr16
push
dec
fimull
fisubrl
shlb
add
add
mov
jmp
xchg
cmc
pusha
jmp
into
pop
int
addr16
out
js
mov
push
movsl
sub
jmp
dec
mov
jmp
xchg
pop
xchg
repnz
push
mov
inc
call
leave
ret
jmp
leave
push
shll
mov
ret
jo
jmp
mov
into
lds
xchg
gs
popa
icebp
nop
arpl
lret
dec
jp
popa
jmp
and
jmp
inc
fisttpll
out
sbb
or
cmpsb
outsl
addr16
sbb
clc
lahf
push
jae
mov
mov
mov
andb
jmp
aas
mov
scas
sub
sbb
aad
repz
mov
mov
add
add
jmp
rolb
mov
icebp
pop
imul
jecxz
fimull
mov
lcall
jmp
in
data16
xchg
outsb
mov
clc
sub
lods
imul
jmp
rolb
add
jmp
cmp
push
jecxz
push
in
jg
aas
scas
jp
in
ljmp
lock
jmp
mov
xchg
mov
scas
leave
cmp
mov
neg
mov
xchg
aas
jne
test
incl
add
mov
movzbl
jmp
call
int3
push
rclb
jbe
into
pop
cmp
jg
leave
pop
cmp
js
lea
jmp
xor
das
ret
push
jmp
mov
push
ret
ret
add
std
or
push
jnp
jge
jae
incl
jmp
jb
add
push
sbb
repz
cmc
push
and
jg
jp
in
push
lock
mov
lea
pushl
lea
pushl
call
jmp
mov
jmp
pop
rcll
sub
pop
enter
ss
pop
test
add
repz
pop
pop
jmp
mov
stos
into
cmp
or
adc
inc
xlat
mov
cmpsl
pop
fdivl
in
xchg
xor
sub
push
mov
mov
jmp
mov
jmp
ss
inc
mov
fstps
stos
data16
pop
push
cmp
jmp
mov
jmp
dec
les
out
push
lahf
push
xlat
arpl
xchg
gs
dec
rclb
and
jb
xchg
push
and
fldpi
int
flds
dec
in
jmp
xor
cli
decl
jmp
ljmp
cmp
xor
int
call
sub
add
cmp
mov
mov
sbb
add
jmp
mov
jmp
ljmp
mov
insb
insb
or
mov
mov
or
jmp
jne
jmp
add
inc
inc
and
outsl
sahf
or
lret
mov
jmp
pop
pop
jmp
jmp
and
and
and
sbb
push
cld
dec
ds
cmp
jnp
mov
jmp
xor
cmp
call
sub
mov
cmp
mov
lret
sbb
out
pop
jmp
xor
jo
lds
push
sub
jmp
inc
fmuls
fcomps
pop
int3
stos
scas
in
out
lcall
pop
inc
decl
pop
aas
lret
aas
scas
lret
into
dec
frstor
mov
mov
mov
add
ret
jne
addl
jmp
ficomps
stos
pop
mov
sub
lds
imul
icebp
iret
repnz
mov
and
cmpsl
aaa
push
mov
jge
outsb
pop
aam
sub
aaa
or
popa
mov
ret
xchg
out
movzbl
add
cmp
je
popa
jmp
sbb
mov
lods
mov
loop
mov
inc
mov
movsl
das
mov
xchg
cmp
rolb
add
jmp
xchg
jmp
cmp
mov
inc
mov
stc
push
lahf
push
es
inc
mov
pusha
mov
mov
mov
andb
sub
jo
mov
jmp
ss
jmp
jmp
in
ljmp
shlb
xchg
sbb
cmc
notl
mov
dec
and
cmpl
jmp
imul
popa
stc
imul
mov
movsb
mov
fdivl
jmp
in
je
lea
dec
fidivrs
or
sbb
movl
cltd
jo
pusha
pop
repnz
mov
inc
mov
adc
aaa
loop
jmp
sub
jmp
push
xchg
add
sahf
jbe
jp
jp
mov
mov
inc
fidivrl
jmp
jmp
imul
fsub
ljmp
jl
testb
rorl
call
jmp
inc
push
xor
daa
clc
jb
xchg
add
xchg
cmc
subb
add
add
push
ljmp
jne
out
or
outsb
push
inc
add
jmp
mov
jmp
dec
ret
ret
jnp
mov
in
stc
cwtl
imul
inc
jmp
mov
test
cmp
xchg
add
sbb
aad
lea
test
jmp
pusha
jmp
cmp
add
mov
aas
push
loop
dec
adc
aaa
mov
popf
daa
mov
inc
mov
jb
jne
out
dec
pop
lds
iret
push
and
pushl
jmp
inc
cmp
jmp
sub
mov
popa
jmp
cmp
jmp
cmp
in
je
lea
xchg
add
jns
je
lea
add
xchg
popf
pushl
mov
jmp
jne
jmp
cmc
push
lahf
push
cmp
or
xor
sarl
inc
adc
xchg
adc
lods
lret
inc
mov
in
jmp
loop
je
or
andb
sub
jo
mov
and
jmp
out
icebp
nop
arpl
xor
jno
push
jmp
sbb
sub
xor
scas
pop
xchg
pop
fistl
mov
jmp
fwait
int3
mov
pop
lret
scas
pop
test
std
insl
hlt
pop
mov
push
ret
cltd
clc
or
mov
popl
lea
jmp
pop
leave
test
fmull
mov
xor
or
dec
add
pop
jmp
insb
cld
xchg
cmc
add
cmp
push
sub
jmp
loope
rclb
cs
dec
fmuls
fsubrs
cmc
gs
push
push
push
xor
js
jo
and
enter
or
sbb
jns
jmp
or
jmp
insb
mov
xchg
pop
in
in
jmp
jb
jmp
pop
push
xor
and
notl
push
adcb
addb
mov
clc
jmp
leave
xor
jmp
mov
andl
jmp
mov
jmp
movsl
and
push
inc
and
ss
popa
add
sbb
xchg
add
ja
mov
add
sbb
pushf
sbb
insb
loop
je
xchg
jmp
loope
inc
jmp
lret
dec
jmp
dec
ret
cmpsl
arpl
mov
jmp
inc
iret
pop
cmp
xor
xor
enter
in
jge
notl
test
je
popa
mov
jmp
push
xor
pop
hlt
js
jmp
sub
jmp
ss
add
fsts
pop
sti
lods
and
add
cld
jmp
and
sbb
add
aam
xchg
xchg
cmp
add
movzbl
add
cmp
jmp
lds
fisttps
adc
dec
xor
add
add
js
mov
std
int
ret
add
add
xchg
jb
es
stos
rolw
mov
adc
call
ror
mov
jmp
cmp
aad
frstor
jmp
add
movsb
ret
ds
xchg
fbld
add
add
jmp
mov
test
pop
fistpl
in
fldenv
gs
add
cli
decl
push
mov
jmp
inc
push
xor
es
pop
xchg
adc
addb
repnz
or
xchg
adc
test
dec
jmp
sbb
push
dec
dec
frstor
jno
jne
pop
xchg
repnz
xlat
leave
icebp
or
push
mov
sub
cmpl
push
mov
jne
xor
jmp
jmp
imul
adc
sbb
adc
jnp
jmp
int
fstpt
mov
sbb
std
jno
xorb
xor
jno
rorb
inc
cld
test
jge
pop
jmp
addr16
dec
and
inc
lcall
ds
inc
mov
icebp
jl
jne
and
push
xor
ja
mov
jae
sub
leave
jmp
test
test
lret
cmc
lds
mov
mov
sub
inc
cld
mov
mov
mov
shl
neg
sbb
sub
jmp
icebp
imul
insl
fsubr
adcl
test
push
mov
stos
int
fsubp
hlt
pop
or
cmp
cmp
inc
mov
movsb
jecxz
jmp
xchg
nop
push
pushf
sti
push
xchg
jbe
jg
jmp
mov
frstor
add
cwtl
jmp
mov
cmpsl
ret
xchg
pop
xchg
adc
xor
sub
push
mull
jmp
aad
xchg
jmp
pusha
jmp
push
xlat
inc
and
cmp
mov
jns
jbe
int
and
add
mov
cmp
shll
punpckhdq
sub
add
add
jmp
mov
jmp
dec
int
and
cmp
mov
cmc
jle
mov
pop
stos
dec
pop
cmp
mov
ret
lcall
cmp
add
data16
add
dec
fnstcw
mov
das
out
idivb
mov
repz
popf
pushl
mov
jmp
pop
ret
insb
sahf
popl
jmp
cmpsl
cmp
push
lds
cltd
push
xor
ja
call
inc
shlb
sub
push
push
push
pop
mov
cmp
jmp
das
mov
sahf
setg
or
dec
cli
lahf
or
push
fwait
sub
jmp
test
jmp
dec
ret
xchg
ss
inc
mov
mov
xchg
adc
adcb
push
jmp
test
mov
xor
jg
ja
loope
imul
or
jnp
in
and
out
fs
jmp
push
jmp
jmp
cltd
push
and
ss
sbb
fistpll
xor
jmp
sbb
lret
push
ret
cmpsb
push
lods
inc
push
xor
sbb
test
in
cmp
pop
jmp
gs
adc
or
ret
loope
jae
fisttpl
jmp
and
repz
cmc
add
adcb
andb
nop
push
popa
nop
inc
mov
jmp
and
xchg
cwtl
decl
lods
add
jg
bound
int
mov
jmp
push
les
mov
sbb
imul
adc
sub
jmp
xchg
mov
cld
mov
adc
jmp
arpl
gs
dec
cli
insl
std
test
hlt
outsb
cld
fwait
jbe
test
pushf
jbe
push
mov
jmp
inc
jecxz
push
in
jp
jo
loop
push
popa
add
sbb
inc
clc
jmp
xchg
mov
jmp
rorb
mov
stos
int
mov
lcall
stos
aam
mov
add
cmp
je
jmp
cmpsb
xor
scas
inc
jg
insb
or
jecxz
push
sbb
pop
jmp
ret
jmp
mov
cmpsl
ret
js
lret
dec
frstor
lcall
or
mov
mov
mov
shr
neg
sbb
add
jmp
sbb
jmp
jp
jp
add
adc
dec
jmp
jne
cmp
pushf
jmp
and
inc
sbb
scas
and
push
xchg
add
decl
mov
jne
pop
jmp
lock
mov
daa
rolb
or
pushf
pusha
jmp
dec
push
xor
or
jnp
adc
cmp
inc
aam
dec
out
in
mov
jmp
movsb
xor
int
lea
dec
das
fidivl
xchg
jmp
mov
jmp
mov
popa
jmp
cmp
rclb
pop
in
inc
aad
sub
je
push
les
mov
sub
add
xchg
popf
pushl
jmp
push
rcll
xchg
push
pushf
sti
push
aad
cli
jne
sub
sar
inc
adc
jne
jmp
and
inc
fdivl
in
and
push
lret
lret
cmp
jmp
addl
jmp
pop
sbb
jne
jmp
mov
mov
sbb
decb
xorb
sub
mov
mov
andb
sub
jo
mov
jmp
and
push
mov
movzbl
add
cmp
jmp
sbb
adc
outsl
jo
gs
sub
jmp
fistpl
xchg
addr16
dec
jnp
fs
jmp
push
jmp
hlt
ja
xorb
lcall
jecxz
jne
iret
inc
aad
dec
test
popl
jmp
cmp
sbb
gs
jae
in
rcr
mov
jmp
xor
popf
or
mov
push
mov
push
xor
test
jmp
cmp
pop
gs
imul
dec
into
pop
int
addr16
push
lret
pop
ds
out
pusha
leave
jmp
jns
jl
negb
sub
lret
pushf
sti
push
mov
xchg
xor
aam
mov
push
xchg
adc
iret
push
lds
mov
stos
dec
inc
and
pop
aad
fdivrs
push
dec
addl
mov
jmp
mov
jbe
jmp
sub
jl
cs
dec
cmp
or
push
jmp
xchg
adc
mull
icebp
add
xchg
add
cwtl
loope
mov
inc
adc
sahf
sbb
arpl
xchg
gs
push
mov
or
outsl
mov
jmp
das
movsb
cmp
dec
clc
inc
push
jmp
add
ja
mov
sbb
pop
enter
inc
out
push
aaa
mov
jmp
icebp
adcl
test
jecxz
push
in
push
push
xor
js
jle
mov
or
sub
sub
cmp
sbb
neg
jmp
ret
cmpsl
push
jecxz
mov
test
pop
pop
jmp
test
mov
gs
lcall
loope
add
std
insb
loop
je
mov
mov
es
push
rcll
push
lock
repz
ret
jmp
sbb
enter
or
dec
fdivrs
nop
testl
sub
cmp
jbe
or
sub
jmp
jmp
inc
fisttps
mov
test
pusha
jmp
push
adc
dec
push
xchg
lcall
jmp
imulb
lcall
ljmp
inc
ss
jl
xchg
pop
popf
pushl
mov
jmp
loope
notl
aad
inc
or
mov
add
sub
mov
jmp
sub
jmp
inc
rclb
ds
inc
fidivrl
adc
mov
fisttpll
out
leave
or
in
call
add
xchg
jmp
jmp
xchg
testb
push
test
push
cli
jns
popa
jmp
aam
pop
jo
jmp
mov
jecxz
jmp
pop
fisttpl
jo
insb
or
mov
repnz
pop
in
aam
or
jmp
imul
sbb
das
ja
cld
js
mov
ret
mov
xchg
jae
ja
loope
inc
inc
and
ja
gs
mov
push
mov
sub
sub
mov
mov
jmp
sbb
bound
add
jno
ja
loope
xor
dec
fisttps
fsts
sarl
ret
jmp
mov
lahf
jb
je
out
pop
jae
je
out
dec
push
pushf
xor
addr16
jo
mov
and
cmp
jmp
call
xchg
fiadds
mov
movsb
xor
aam
fdivrs
mov
movzbl
add
cmp
jmp
bound
xchg
testb
xor
jl
jne
insb
pop
popf
xor
test
jmp
pop
xchg
add
mov
jmp
nop
pop
xchg
adc
clc
jle
mov
jge
pop
or
mov
test
mov
jmp
lret
xchg
pop
popa
jmp
jb
pop
push
popw
jmp
cmp
push
lds
or
pop
jp
jg
adc
enter
andb
jmp
push
ja
loope
cmp
test
data16
popf
ss
inc
mov
out
notl
jmp
push
fimuls
add
out
or
mov
into
pop
lahf
punpckhdq
and
jmp
xor
push
lds
pushl
xorb
pop
into
test
test
pop
stos
mov
jp
jmp
sub
jp
pop
jmp
xchg
or
pop
xchg
repnz
pop
into
mov
mov
es
out
arpl
repz
pop
nop
push
popa
nop
cmp
repnz
xchg
add
rorl
mov
hlt
aaa
test
jbe
sub
push
mov
mov
add
dec
jne
pop
jmp
xor
dec
jbe
sub
jmp
sub
sub
push
dec
rolb
sarb
or
sub
in
cmp
jmp
aas
mov
loope
ja
add
xchg
popf
pushl
jmp
jae
addr16
ss
insb
loop
je
or
push
mov
add
add
das
mov
stos
int
fnstenv
addr16
add
lock
imul
push
lcall
inc
adc
in
sbb
add
cmc
jmp
pop
rolb
shlb
cmc
jle
mov
inc
mov
lahf
and
roll
add
jne
addl
jmp
inc
roll
aad
pusha
out
jl
notb
sub
and
pop
je
jmp
jnp
gs
aas
into
inc
shll
push
cmp
jnp
jecxz
cmpl
push
cmp
and
fstl
mov
pushf
and
cs
mov
lret
inc
mov
aas
popl
jmp
mov
mov
sbb
bsf
mov
xchg
jmp
mov
xchg
pop
into
pop
cmp
popa
push
rcll
data16
pop
js
lods
or
pop
and
jo
mov
push
push
push
xor
dec
cmp
jmp
dec
test
jmp
xchg
or
pop
lret
scas
pop
mov
push
xchg
repz
out
sbb
and
and
test
pop
test
cmp
pop
fisttps
mov
rcr
xchg
popa
mov
jmp
jp
jmp
push
rolb
sarb
sub
jbe
add
push
dec
cmp
xchg
push
fisttpl
fisttpll
std
insl
hlt
pop
lock
dec
mov
insl
cwtl
std
popa
mov
ret
sbb
int3
inc
fidivrl
jmp
xor
cmp
jae
mov
mov
shr
add
jmp
fldcw
add
dec
jmp
jge
jmp
inc
leave
pop
cmp
cmp
push
fstl
cmpsl
push
xchg
testb
sbb
aad
test
jge
je
xor
mov
sbb
cmp
xor
push
xor
addr16
xor
xor
jmp
pop
int3
inc
and
cmp
add
inc
and
and
mov
decl
incl
inc
sub
jp
jae
push
jne
jge
cmp
jmp
inc
fimuls
and
out
or
adc
rcrl
pusha
mov
mov
mov
andb
sub
jo
jmp
out
lret
sub
ds
jmp
inc
add
jmp
into
push
lds
inc
mov
cmpsl
aaa
push
mov
jmp
js
jecxz
pushf
jmp
mov
inc
pop
in
sub
jmp
sbb
insb
pushf
xchg
jmp
pop
lret
scas
pop
mov
mov
inc
mov
gs
sbb
mov
das
rcll
pop
pop
ret
jmp
popa
jmp
and
jae
loop
bnd
ret
inc
aad
dec
mov
jmp
ret
inc
aam
dec
cmpsb
cmpsb
sub
lds
je
insl
hlt
pop
out
pop
int
addl
mov
mov
andb
sub
jmp
mov
jmp
cmpsl
cs
setg
or
pop
in
mov
mov
ret
sbb
out
das
sbb
cmp
jne
addl
mov
movzbl
jmp
sbb
xchg
mov
sbb
loope
mov
cmp
jmp
cmp
add
test
pop
test
inc
inc
and
insb
out
out
jo
jae
dec
lahf
add
jmp
adc
je
jmp
cltd
adc
test
pop
test
popf
add
and
xor
mov
jmp
imul
mov
jmp
jmp
data16
jmp
lea
add
add
bound
mov
xor
jmp
sahf
or
xchg
add
js
cwtl
push
imul
jp
loope
mov
cld
decl
or
dec
jns
jmp
mov
jmp
scas
adcb
push
aaa
ret
mov
sub
jmp
stc
cwtl
imul
or
jmp
jmp
push
test
lods
lret
inc
mov
xchg
inc
push
roll
shll
stc
sbb
push
jmp
xor
or
pop
jmp
aas
mov
sbb
add
sahf
insl
scas
sub
loope
inc
subb
dec
adc
lock
jo
mov
jmp
push
fimuls
add
jg
mov
push
jp
in
dec
adcb
aaa
adc
cmp
mov
lcall
popf
mov
jmp
jnp
mov
adc
sub
xor
xchg
mov
js
shr
fwait
add
add
ss
jmp
sub
push
lds
inc
fidivrl
sub
and
push
repz
mov
mov
pusha
notb
xchg
scas
jp
pushl
mov
jmp
leave
push
mov
insb
mov
mov
mov
jmp
xor
insb
repnz
pop
bnd
push
test
push
cltd
lock
jne
mov
sbb
jmp
mov
mov
inc
shll
mov
mov
jg
outsl
fsubrp
add
jmp
mov
mov
sub
jmp
addl
jmp
cmc
jb
xchg
gs
adc
sbb
adc
jmp
jnp
insb
or
out
xchg
pop
ficomps
scas
pop
mov
popa
jmp
and
push
fimuls
adc
test
movsl
xor
sbbl
xchg
outsb
lods
mov
mov
mov
ret
insb
out
adc
dec
lcall
mov
add
or
sub
cmp
jae
push
pop
sub
lea
xor
rep
jmp
add
xor
push
dec
pop
into
test
ljmp
add
dec
dec
imul
add
add
je
lea
add
or
gs
pushf
outsl
scas
sub
test
jmp
rolb
add
jmp
push
iret
pop
cmp
xor
cmp
or
mov
and
jmp
aad
jmp
popf
add
std
or
filds
mov
enter
movsb
push
shlb
ja
loope
mov
cmpl
cmc
and
add
add
pushf
icebp
push
pop
test
jmp
dec
fstpt
lods
mov
lods
jns
outsb
or
sbb
jmp
or
ja
adc
in
sbb
bnd
cmpl
push
sbb
mov
adc
in
and
add
push
push
mov
mov
push
call
jmp
dec
int3
inc
and
pop
sub
mov
test
jmp
cmc
jge
je
jbe
sbb
aad
hlt
jl
jne
pusha
add
jmp
cmp
shll
xchg
les
xchg
cmc
add
dec
lret
pop
ds
out
and
test
call
je
cld
call
add
push
jmp
jno
xchg
cmc
add
push
rclb
jbe
jo
pop
sub
jmp
mov
jmp
mov
mov
mov
sbb
dec
jecxz
movl
mov
mov
jmp
push
push
xor
jge
mov
mov
mov
and
inc
loop
xor
jmp
mov
jmp
in
jbe
cmpl
int
and
aaa
dec
aad
sub
aaa
je
loop
sarb
call
jmp
pop
lds
iret
and
bnd
push
mov
mov
inc
mov
decl
jmp
rep
jmp
int3
js
jmp
dec
lea
jmp
sbb
push
lea
jmp
push
inc
and
and
push
roll
shll
lret
push
adc
cld
call
pushl
mov
jmp
test
mov
aaa
cmpsl
ret
scas
sub
xchg
inc
jb
xor
inc
or
incl
repz
arpl
sub
sub
jmp
mov
stos
int
aam
mov
inc
mov
out
inc
lock
leave
inc
shlb
ljmp
jne
ja
lahf
punpckhdq
jne
xchg
decl
mov
rep
jmp
or
push
lret
sahf
les
mov
jecxz
jne
out
pusha
lods
or
jmp
mov
mov
and
or
and
pushf
cs
subl
decl
add
jne
jmp
lret
pop
repnz
fs
fisttpl
cmp
jmp
jne
jbe
loopne
mov
in
push
xchg
add
jno
cli
inc
jmp
test
aad
into
add
pop
cmpsb
adc
dec
clc
jmp
lcall
jb
xchg
mov
out
cmpsl
aaa
push
mov
mov
movzbl
shl
add
or
dec
test
jge
jmp
mov
movsb
ret
ds
add
call
mov
notl
inc
clc
push
jmp
pop
jmp
cmp
push
lds
xchg
nop
testl
test
fmuls
fwait
and
lret
mov
sub
mov
shll
jg
jmp
xor
fldcw
fistl
mov
push
incl
pop
and
add
fistpll
pop
lods
cmp
es
test
jmp
mov
xchg
add
pop
or
adc
xor
jnp
jmp
mov
mov
and
enter
lea
adc
in
sbb
sbb
pop
pop
jne
push
mov
lea
call
jmp
lret
jmp
pop
leave
pop
cmp
outsb
nop
or
push
xchg
repz
in
cwtl
mov
mov
pop
jmp
sub
sub
push
flds
mov
gs
jp
sahf
incl
jmp
push
jmp
les
jmp
dec
iret
pop
cmp
push
out
cli
popf
insb
test
push
xor
es
sub
lahf
push
pushl
mov
mov
mov
call
sub
cmpl
jmp
stc
js
mov
pop
adc
mov
push
shlb
aam
repnz
imul
stos
ja
jl
jmp
jnp
addr16
or
jnp
mov
ret
inc
push
jecxz
mov
jmp
call
jmp
test
mov
and
arpl
js
ljmp
imul
out
sub
mov
mov
decl
mov
sub
jmp
loope
cld
fwait
jbe
and
orb
cmp
les
add
add
lea
jmp
dec
jecxz
push
in
scas
cmp
add
rorb
jle
jmp
jmp
fisttps
mov
js
ljmp
pushl
jmp
lea
jmp
jp
arpl
cmc
pop
mov
mov
fwait
xor
cwtl
test
jmp
inc
fimuls
add
adc
fisttps
icebp
iret
add
cmpl
jmp
scas
xor
mov
inc
mov
and
xor
scas
addr16
sti
sahf
insl
orl
decl
jmp
jmp
jge
je
insl
mov
lea
push
mov
call
pop
pop
movl
jmp
into
dec
frstor
inc
mov
fbstp
add
add
dec
fisttpll
mov
jg
jg
and
jl
fs
or
dec
cld
jmp
mov
enter
lods
cmp
push
xchg
repz
test
decl
rep
jmp
hlt
jns
mov
enter
dec
mov
mov
ljmp
add
inc
jmp
and
leave
pop
enter
sbb
dec
cld
jmp
test
jmp
ljmp
test
out
jle
mov
sbb
inc
in
loope
jae
rclb
decl
test
jne
movl
lea
jmp
sbb
dec
cld
jmp
pop
iret
pop
cmp
pusha
fisttps
mov
jo
loop
les
xchg
xchg
cmpsb
movb
inc
jmp
inc
fisttpll
out
push
roll
aad
pop
lret
pop
ds
stos
test
inc
stc
decl
pushf
cmp
pop
jmp
add
sub
xlat
mov
sub
jl
jne
insb
dec
lret
lret
inc
aam
dec
stos
icebp
jns
sti
pop
pop
jmp
jmp
daa
mov
xor
push
clc
incl
push
xor
xor
or
cs
sbb
sub
lds
or
xor
inc
cmp
jb
jmp
hlt
ja
xorb
mov
dec
enter
add
add
jmp
pusha
jmp
mov
fldt
movsb
cmp
dec
lock
mov
pushf
sbb
sub
jmp
lahf
jmp
dec
lret
pop
ds
fs
insb
loopne
adc
and
repz
mov
call
add
xchg
popf
pushl
jmp
in
cltd
push
pop
lods
sbb
and
mov
jmp
lods
inc
shll
mov
and
popa
jmp
jno
jne
out
pop
xchg
add
jg
mov
inc
rolb
shlb
pop
test
jl
xor
xor
cmp
jae
jmp
xchg
mov
and
and
add
add
cmpsb
inc
shll
add
jmp
adc
cs
jns
ja
loope
mov
mov
mov
js
push
sbb
mov
add
sub
and
addl
repnz
push
jg
jmp
cli
or
push
mov
ret
imul
sbb
push
jmp
rolb
add
jmp
add
dec
iret
pop
cmp
sub
inc
aad
dec
lcall
add
add
lea
jmp
pop
jecxz
push
in
loopw
pop
loop
ficoml
mov
pop
add
push
mov
sub
push
push
mov
mov
lea
push
jmp
cmp
mov
add
addr16
bound
sbb
insl
xchg
sbb
aad
xlat
adc
cwtl
mov
jmp
push
jmp
aas
mov
inc
mov
jg
popa
add
xor
jp
jp
pop
enter
jle
xor
jne
addl
mov
movzbl
jmp
mov
sbb
pop
jo
jno
jecxz
cld
insb
loop
je
stos
cmp
xchg
pop
or
pushl
jmp
add
mulb
push
scas
cmp
pop
filds
xor
lea
rep
jmp
fimull
movsb
push
repnz
xor
mov
fsubrs
dec
stos
mov
jne
shr
adc
add
lods
xor
int
pop
les
int3
and
int3
inc
and
adc
push
mov
mov
mov
andb
sub
jo
mov
jmp
sub
aas
mov
leave
inc
cmp
decl
decl
push
cld
jmp
and
inc
sbb
jo
int
jl
mov
jmp
decl
jmp
clc
jle
mov
fisubrs
pop
scas
pop
fstpl
test
pushl
jmp
mov
into
rcrb
test
mov
fidivrs
push
fdivl
in
ds
mov
jmp
stc
jne
mov
stos
and
sub
cmpsl
sub
or
push
pop
jne
jmp
jge
repnz
jmp
jnp
jg
jmp
mov
in
mov
mov
in
std
call
pop
pop
movl
jmp
fmuls
mov
cmpsl
push
mov
decl
test
jne
leave
ret
jmp
push
jmp
or
cwtl
push
pushf
sti
push
movsb
fwait
or
in
mov
cmp
std
lcall
mov
lea
push
cmp
adc
cwtl
jne
out
pop
jmp
movb
inc
jmp
mov
and
clc
or
or
jae
lods
cmp
dec
lahf
leave
pop
sub
add
xchg
popf
pushl
jmp
icebp
outsb
cld
fwait
jbe
adc
incl
adcb
orb
js
jmp
push
aad
sub
xor
jo
sub
inc
push
xor
xor
into
mov
jmp
jg
outsb
or
das
ljmp
out
adc
pop
or
cmp
xor
push
pop
add
add
jmp
jns
popa
add
add
dec
fstpt
cli
popf
insb
mov
and
or
andb
sub
jo
jmp
or
jecxz
jmp
idivl
mov
xchg
popa
enter
or
sub
std
or
cltd
roll
add
ficoms
mov
or
sub
inc
popf
mov
inc
adc
in
addl
jmp
jecxz
out
jo
xchg
add
mov
or
adc
jmp
mov
jmp
cli
insb
loop
je
jns
jl
negb
and
mov
cmp
jmp
movsb
aaa
cmpsl
ret
lea
sbbl
pop
les
int3
or
xchg
rorl
jmp
mov
ret
jl
jo
loop
sbbl
and
adc
mov
call
pop
pop
mov
test
jbe
jmp
or
mov
stos
int
aam
pop
popl
lea
jmp
pop
xchg
add
es
jnp
in
dec
mov
mov
dec
xor
jmp
xchg
sub
jmp
xchg
sbb
dec
frstor
sbb
or
pop
mov
jmp
js
add
push
jno
jne
xor
mov
into
lcall
dec
cmp
je
popa
mov
jmp
mov
shlb
fwait
decb
sbb
pushl
pushl
pushl
push
mov
jmp
repz
cmc
add
dec
jo
les
inc
cld
or
add
lea
jmp
lcall
lret
lret
push
or
jmp
mov
jmp
mov
fwait
dec
jecxz
push
in
out
out
jno
inc
push
adc
sub
fisttps
fldenv
bound
jmp
int3
popf
add
hlt
scas
jmp
lock
pushf
outsl
les
sbb
add
add
pop
jmp
stos
cmp
pusha
sti
imul
pop
mov
mov
jmp
adc
daa
call
jmp
setnp
outsb
popf
pop
jns
jo
loop
imul
call
jmp
xor
and
pop
test
push
pusha
jmp
movsb
icebp
popa
jmp
int3
popf
pop
roll
shll
add
add
fimuls
jmp
int3
popf
gs
lret
lods
pop
fistl
mov
ret
xchg
rolb
add
dec
fcoml
fisubl
jne
jmp
test
int3
popf
sub
jge
sub
rolb
rclb
pop
fistpl
mov
mov
mov
andb
sub
jo
mov
jmp
add
movsl
xor
add
add
jmp
imul
sbb
ds
cmpl
add
xor
stos
psubsw
add
add
jmp
enter
dec
mov
jmp
push
inc
sub
or
add
jmp
sbb
add
jmp
int3
popf
int3
dec
frstor
dec
or
and
mov
call
add
xchg
popf
pushl
jmp
roll
inc
movsl
jae
popf
dec
addr16
test
add
addr16
adc
adc
popl
jmp
ljmp
add
add
inc
adc
add
push
out
shr
xor
clc
jl
jne
jno
adc
pop
sub
or
jo
add
call
jmp
adc
adc
rolb
add
jmp
or
jmp
aas
mov
inc
loopne
jne
jmp
xor
int3
popf
dec
add
iret
sub
add
push
les
push
popa
cli
push
jmp
pusha
dec
and
leave
pop
sub
jmp
ret
sbb
jmp
mov
push
call
jmp
data16
jl
notb
sahf
mov
je
popa
jmp
mov
iret
add
push
jmp
shll
push
jmp
int3
popf
cwtl
pop
xchg
adc
lods
and
jmp
pop
aad
sub
or
jmp
lcall
cmp
xchg
jns
in
movb
inc
jmp
fs
add
enter
lahf
adc
add
sub
dec
cld
test
jmp
int3
popf
addr16
arpl
add
ret
push
lds
mov
jne
jmp
int3
popf
sahf
adc
dec
add
jmp
ljmp
jmp
jmp
pop
push
int3
call
jmp
in
jmp
jge
test
and
mov
cld
jmp
mov
mov
and
leave
jmp
insl
and
adc
dec
popf
cld
insb
loop
je
fucomi
in
add
mov
mov
es
push
pop
movsl
cmc
pushl
call
add
movl
lea
jmp
in
call
shrb
push
cmp
je
jmp
mulb
nop
arpl
lret
mov
jmp
jge
mov
jmp
add
add
jmp
cld
data16
xchg
outsb
lods
pop
test
aam
popl
jmp
pop
mov
gs
jbe
push
xor
and
mov
ret
jne
addl
mov
jmp
jecxz
call
in
fld1
xchg
sbb
add
add
pushf
lea
jmp
and
push
xchg
pop
bound
lods
pop
xchg
gs
mov
mov
sub
push
mov
push
mov
lea
jmp
and
je
mov
jmp
in
insl
std
test
in
cli
popf
insb
test
pusha
notb
jge
loope
push
call
pushl
jmp
rclb
mov
or
dec
clc
jl
jne
jno
in
sbb
fidivs
sub
adcl
jmp
pop
lea
cmp
pushl
lea
jmp
repz
decl
jmp
xchg
mov
jmp
test
jmp
jnp
imul
pop
pop
aad
sub
or
inc
and
stc
dec
pushl
jmp
cmpsl
push
add
push
jmp
mov
mov
lods
mov
loop
pop
leave
test
out
std
outsb
cld
fwait
jbe
cmp
add
insl
cmp
jmp
push
test
pushf
add
add
push
shll
jmp
notb
fsubp
aad
pushl
jmp
movl
jmp
ja
jno
jecxz
mull
xchg
lds
in
ret
sar
inc
adc
xchg
or
mov
jmp
lea
jmp
fiaddl
mov
test
notl
filds
mov
enter
shll
jmp
dec
xor
jmp
es
jmp
xor
xchg
aad
fdivrs
lods
mov
mov
adcb
subb
sbb
popa
push
pusha
mov
mov
mov
andb
sub
jo
mov
jmp
ja
gs
adc
loope
jg
mov
mov
sbb
decl
mov
mov
test
jl
jmp
loop
sti
sahf
insl
mov
loope
rcll
mov
adc
jb
push
jmp
push
cwtl
out
lea
jmp
xor
and
aad
repnz
fs
pop
inc
and
jns
mov
jmp
dec
push
lea
jmp
cmp
xchg
pop
jmp
jle
addr16
sub
out
xchg
sbb
sub
inc
fbld
add
add
jmp
insb
insb
or
mov
lret
lret
stos
cmp
sbb
inc
mov
mov
mov
push
pop
cmp
jne
jmp
cmp
loopne
in
jle
imul
mov
subl
je
test
jbe
jmp
mov
aad
xorl
add
add
jmp
hlt
dec
jge
jmp
call
jmp
cld
gs
pushf
outsl
fiadds
mov
movsb
or
int3
push
shlb
sbb
int
and
cmc
gs
xor
xchg
add
mov
jmp
adc
cmp
pop
fimull
fidivrl
aas
mov
loope
jmp
inc
pushl
lea
push
push
mov
call
jmp
adc
add
inc
dec
int
and
and
popa
add
sbb
stos
xchg
mov
shr
jmp
orb
stc
or
mov
fcompl
cli
mov
push
les
jmp
insb
jmp
push
in
sbb
nop
mov
fwait
decb
sbb
decl
jmp
sub
sbb
mov
mov
sbb
jnp
cmp
add
add
test
jne
shl
dec
dec
test
jmp
lods
push
push
and
shl
jmp
inc
aam
sub
inc
daa
sarb
mov
inc
mov
or
or
xor
push
jmp
push
jmp
in
js
mov
fisttpll
mov
mov
or
lret
mov
je
pushl
imul
lea
jmp
push
leave
pop
cmp
and
repz
mov
call
add
jmp
inc
jecxz
push
in
dec
rolb
rclb
dec
jmp
mov
enter
dec
addl
jmp
cltd
sbb
jo
xorl
stos
dec
push
loopne
mov
jmp
pop
fisttpll
out
pop
fisttps
fnstenv
cmp
mov
sub
add
xchg
popf
pushl
jmp
rcll
pop
mov
mov
inc
mov
or
jmp
mov
jmp
mov
jge
fs
jmp
les
movsb
push
mov
data16
xchg
outsb
mov
outsb
or
or
dec
fnstsw
repnz
sti
cld
call
dec
sub
xor
jp
in
cs
lea
jmp
orb
mull
icebp
dec
cmp
pop
mov
mov
mov
inc
adc
add
add
xlat
pop
jmp
jae
jno
jecxz
sub
push
lds
jmp
push
in
pop
xlat
aas
xchg
jmp
push
lcall
mov
xchg
aas
cmp
push
orl
jmp
adc
rorb
mov
mov
fdivs
out
dec
adc
dec
adc
leave
jne
leave
jmp
cli
push
push
shll
jg
or
sbb
lcall
insl
add
jmp
das
mov
inc
mov
mov
mov
cmpsb
xor
scas
inc
sub
mov
clc
jmp
movb
inc
jmp
xor
aaa
mov
xchg
jmp
cmp
aaa
mov
pushl
jmp
add
jg
mov
bnd
cmpl
mull
icebp
pop
xor
sahf
enter
imul
adc
sbb
jmp
mov
jmp
inc
leave
pop
cmp
sub
cmc
adc
push
ss
clc
add
add
add
inc
jmp
jns
gs
pop
mov
loop
cmpsb
xor
scas
insb
xchg
cmp
mov
jmp
in
pop
andb
jmp
popa
jmp
test
lahf
cli
or
fldt
js
mov
push
pop
movsb
pushf
mov
jmp
cli
push
lahf
push
dec
fmuls
fdivs
mov
inc
mov
out
mov
jmp
cmp
jp
jl
testb
mov
mov
dec
mov
jmp
push
sub
jmp
inc
fimuls
add
mull
icebp
adc
out
push
fistpll
jmp
aad
fnstcw
push
xor
dec
and
fs
stos
mov
inc
adc
pushf
sbb
aad
int3
mov
jo
jmp
or
sbb
adc
sbb
je,pn
mov
decl
test
jne
movl
jmp
cmpsb
and
mov
hlt
call
inc
and
cmp
dec
popl
jmp
dec
les
int3
aas
data16
cmc
adc
outsb
or
sbb
jne
mov
sbb
sub
pop
je
popa
mov
jmp
mov
nop
testl
insb
lahf
dec
push
je
out
sub
jge
je
and
fs
jmp
push
jmp
into
pop
repnz
fs
pop
into
test
pop
jb
fnstsw
fdiv
addl
mov
movzbl
add
jmp
popa
lock
pop
stos
pop
fisttpll
or
sub
fdivl
in
arpl
push
cld
push
jb
je
out
pop
jno
jp
in
dec
stos
hlt
movzbl
shl
or
movzbl
jmp
or
or
mov
jmp
lods
movsb
ret
ds
and
pop
mov
jmp
fstps
cmp
jb
adc
dec
frstor
mov
loope
push
pop
push
add
push
movzbl
movzbl
shl
or
jmp
imull
cltd
push
and
push
test
call
jmp
in
test
sahf
mov
jmp
gs
pushf
outsl
test
jae
pusha
pop
repnz
out
notb
shr
add
add
dec
jne
pop
pop
ret
jmp
add
xchg
popf
pushl
mov
jmp
in
icebp
nop
arpl
sbb
insl
call
pop
adc
jmp
adc
cli
ja
xorb
pop
mov
mov
jmp
aad
repz
xchg
xchg
mov
sbb
aad
sub
notl
sub
add
jne
jmp
pop
xlat
inc
and
sbb
jno
imul
mov
sahf
mul
jo
mov
jmp
sti
imul
push
xchg
repz
cmpsl
pop
leave
pop
cmp
jnp
scas
aas
pop
test
ret
jmp
aam
mov
negl
pop
jp
xor
dec
das
ficompl
test
aas
popa
jmp
or
stos
jmp
mov
lret
mov
sar
gs
pushf
outsl
ljmp
imul
mov
add
cmp
je
jmp
mov
lea
lea
jmp
aas
mov
ficompl
scas
pop
mov
push
lds
add
push
adc
popl
jmp
gs
jmp
mov
jmp
cmpsl
and
adc
std
insl
hlt
pop
in
jns
add
rolb
add
jmp
push
xor
jmp
lods
and
out
jg
jmp
ret
xor
aaa
out
cmp
jne
addl
mov
jmp
lcall
jl
sub
dec
sub
xor
pop
cmp
mov
mov
decl
dec
das
fisubrl
xor
or
mov
jmp
add
jmp
sbb
lcall
xlat
inc
and
insl
aad
mov
dec
jne
pop
jmp
mov
xchg
aas
test
fisttpl
mov
jmp
call
jmp
xchg
jmp
xchg
push
pushf
sti
push
aad
cmp
mov
cmpsb
or
lret
ljmp
adc
mov
mov
add
add
jmp
pusha
jmp
push
into
pop
cmp
ds
mov
jns
setg
xchg
icebp
add
xor
pushl
mov
jmp
mov
mov
mov
andb
sub
jmp
movl
inc
and
cmp
popa
add
lret
jo
jmp
insb
addl
jmp
xor
dec
adc
cmc
ja
xorb
icebp
popa
mov
ret
push
inc
and
add
mov
scas
leave
cmp
in
shll
cmpl
mov
clc
test
and
das
popa
jmp
mov
jns
jmp
cmp
fcomip
lcall
dec
fnstsw
adc
push
or
es
sbb
cwtl
jmp
mov
add
jmp
add
add
sahf
sub
mov
or
cltd
roll
add
jne
jmp
dec
fimuls
dec
dec
jecxz
push
in
loopne
in
jg
adc
cmp
lahf
popl
jmp
rcrb
pop
cld
mov
in
or
jl
mov
call
jb
shr
inc
add
inc
mov
jmp
imull
test
sbbl
out
sbb
pop
rclb
inc
divb
add
cmpsb
add
add
mov
dec
mov
add
and
cli
stc
mov
or
and
jae
xchg
out
cmc
pushf
outsl
mov
mov
mov
popa
mov
ret
jmp
push
aam
sub
into
test
pop
cmp
mov
les
popa
movl
ret
jmp
and
jbe
cmpl
push
jmp
xor
sub
xor
add
jmp
jo
insl
hlt
pop
shll
arpl
cmc
xor
js
mov
cmpsl
addr16
pusha
adc
movl
movl
movl
jmp
insb
insb
or
mov
xchg
or
xor
cmp
xor
mov
jmp
pop
into
pop
cmp
jg
setg
or
imul
in
test
dec
adc
jno
icebp
popa
add
inc
fisttpll
mov
and
rcrb
adcl
mov
jmp
data16
insb
or
in
in
adc
imul
adc
push
xor
jmp
inc
fimuls
popa
aaa
mov
and
ljmp
push
mov
shll
lock
bound
push
call
mov
andb
sub
jmp
sbb
or
dec
iret
dec
fnstcw
mov
and
test
stos
cmpsl
mov
inc
adc
sbb
add
movzbl
jmp
ds
push
fimull
fidivrl
mov
test
cmp
mov
scas
lret
testl
sbb
in
inc
and
popf
pushl
jmp
imul
jmp
xchg
add
jmp
and
cli
jne
mov
dec
fldt
das
mov
and
cmp
jne
addl
mov
jmp
popl
jmp
xchg
push
xchg
repz
mov
ljmp
mov
and
jmp
out
out
jno
in
out
jo
stos
cmp
outsb
hlt
push
cld
aas
mov
mov
mov
je
popa
mov
jmp
movsl
push
jmp
ret
sub
jmp
push
fwait
or
jns
add
cmp
lea
and
jmp
cmpsl
aas
scas
lret
xor
pop
fmuls
fcoms
mov
sub
decl
jg
mov
lock
xorl
push
mov
push
lret
mov
lock
jo
mov
and
jmp
clc
sub
mov
rorl
test
loope
jle
mov
js
popa
push
mov
rol
add
mov
not
and
mov
and
or
jmp
jmp
fwait
push
mov
lea
jmp
orl
lds
dec
add
jmp
ror
jmp
lret
mov
lods
int3
inc
fidivrl
popf
in
out
jbe
cmpl
div
shll
dec
or
shll
cli
or
add
mov
lea
jmp
dec
fistpll
sbb
xchg
push
jb
insl
hlt
pop
mov
mov
not
and
jmp
push
push
xor
jns
mov
scas
lods
lret
inc
idivl
out
shr
dec
or
jmp
jle
jge
negl
mov
cld
xchg
cmc
add
mov
mov
sbb
shlb
cli
mov
and
or
add
lea
jmp
movsb
aaa
cmpsl
ret
sbb
adc
mov
aad
sub
aas
add
shr
and
jmp
test
shr
add
add
adcl
int
and
cmp
and
pusha
std
insl
hlt
pop
sbbb
jne
mov
push
mov
lea
call
mov
mov
jmp
inc
or
xor
aam
adcb
subb
mov
sbb
outsl
movsl
not
and
or
add
mov
lea
rol
jmp
mov
and
jmp
xchg
xchg
icebp
add
js
insl
hlt
pop
rol
inc
mov
mov
push
xchg
repz
out
cli
mov
add
add
ljmp
idivl
je
popa
sbb
push
cmp
sbb
into
mov
add
mov
and
jmp
sub
push
fstpt
fisubl
sub
sub
lods
js
xchg
pop
bound
cmpl
dec
fistpll
shr
xchg
add
std
or
and
lods
xor
and
jmp
pop
and
jmp
push
xchg
add
sahf
das
adc
xlat
inc
xlat
mov
std
pop
test
cld
and
or
add
lea
rol
add
jmp
pop
mov
jns
and
inc
shll
hlt
xchg
outsb
leave
pusha
push
mov
clc
not
and
mov
and
or
add
mov
lea
jmp
push
fldt
shr
and
cli
jmp
add
aas
movsb
cmp
dec
or
aam
ret
cmpsb
push
mov
jmp
gs
shr
fcoms
mov
gs
adc
mov
ret
mov
mov
dec
fstpt
or
add
mov
lea
ror
add
jmp
mov
cltd
clc
or
xor
push
aad
sub
and
xlat
and
or
add
mov
lea
rol
jmp
mov
and
mov
jmp
jns
insb
or
roll
cli
and
mov
jns
jnp
jmp
sub
jae
in
data16
jl
notb
mov
xchg
repnz
cmp
sub
cli
jmp
rcrl
fs
imulb
and
jmp
sub
push
clc
jmp
jge
addr16
cmp
mov
lahf
adc
lcall
call
jne
lea
push
lea
jmp
sbb
inc
rolb
shlb
adcl
sub
fadds
test
mov
cmpsb
jmp
add
jmp
scas
cmp
lods
lret
inc
out
rcrl
pop
in
pop
roll
aad
add
rorl
cld
mov
notl
mov
mov
and
jmp
push
lret
lret
iret
pop
cmp
xor
ja
je
orb
add
mov
jmp
repz
lahf
push
out
out
mov
xchg
dec
jmp
xlat
out
lahf
mov
jmp
iret
push
mov
cmc
pushf
outsl
movsb
pop
fimuls
push
aam
and
jge
and
not
and
or
add
lea
jmp
data16
adc
push
cld
adcl
test
cs
and
jmp
jb
shr
inc
xchg
xchg
repnz
roll
dec
cltd
xchg
adc
and
hlt
lea
mov
jmp
jecxz
lret
rcrb
dec
lods
and
pusha
call
inc
popa
and
jmp
ja
insb
or
cmc
ss
or
adc
push
mov
sbb
xchg
notl
mov
and
mov
and
or
add
mov
jmp
es
jmp
out
mov
mov
or
add
mov
lea
mov
rol
jmp
mov
jmp
adc
cmpsb
xor
scas
pop
dec
xor
and
shr
fstpl
sbb
cmp
pop
leave
test
lock
scas
cmp
mov
mov
push
cmp
cmp
or
imul
and
mov
ret
add
mov
lea
rol
add
jmp
lret
cmpsl
push
mov
je
icebp
mov
mov
and
mov
or
add
lea
rol
jmp
dec
inc
and
pop
mov
mov
out
push
mov
not
and
mov
and
or
add
mov
lea
jmp
xor
lods
lret
inc
and
jo
push
jmp
cld
rol
add
mov
and
not
and
or
jmp
mov
jmp
outsl
stc
xchg
lea
jmp
pushl
and
jmp
push
add
jmp
ficomps
stos
data16
pop
cmp
sub
loopne
fistpl
fs
add
jmp
not
jmp
divl
xorb
inc
aam
dec
cmpsb
inc
leave
pop
cmp
cmp
rol
and
lret
rorb
mov
not
jmp
stc
ja
xorb
adc
in
sbb
movsb
or
in
clc
ror
jmp
and
jmp
and
jg
add
and
xchg
add
push
sbb
and
mov
not
and
or
add
mov
lea
jmp
add
jmp
les
mov
das
dec
mov
and
jbe
cmp
mov
cmc
cwtl
and
mov
and
or
add
lea
rol
jmp
sub
not
jmp
mov
jmp
or
jmp
lods
cmp
aas
scas
lret
cmpsb
aaa
cmpsl
ret
cwtl
or
in
mov
jmp
inc
fisttpl
fnstsw
mov
inc
cld
jmp
and
jmp
pop
push
xor
sub
test
jge
push
into
pop
cmp
fadds
mov
leave
mov
not
jmp
inc
fmuls
fcomps
jno
sbb
add
jmp
incl
jge
jmp
and
jmp
addl
repnz
dec
int3
inc
and
push
cmp
and
dec
lods
lods
movsl
or
inc
enter
lea
rol
add
mov
jmp
pop
fmuls
fsubs
sahf
pop
cmp
pop
not
jmp
rclb
adc
mov
rorb
sub
jmp
and
cwtl
adc
mov
jns
push
sub
lea
jmp
add
jmp
jne
xchg
cmc
add
add
cs
dec
fdivrl
fsubr
js
mov
cld
jmp
stos
and
les
mov
in
jle
in
jl
jne
xor
sti
or
add
mov
lea
ror
jmp
fmul
ror
jmp
lds
pop
cmc
rorl
pop
int
leave
test
jmp
mov
jle
and
xchg
cmc
add
push
push
xor
imul
sti
shl
jmp
call
mov
adcl
test
iret
pop
cmp
cmp
repnz
jge
mov
jmp
pop
xchg
jb
or
add
jmp
push
lret
lret
adc
mov
jmp
rol
jmp
in
hlt
xchg
outsb
cmpsl
fs
sbb
add
add
or
jge
aaa
stos
or
add
lea
rol
add
mov
not
jmp
or
mov
jmp
and
jmp
lret
mov
clc
lahf
push
mov
nop
pop
or
push
add
jmp
not
jmp
inc
les
int3
cmp
jge
je
insl
sub
or
jmp
mov
and
or
add
mov
lea
jmp
ljmp
sti
jmp
addl
aam
mov
add
fs
bound
sbb
js
sbb
cld
les
rol
add
mov
not
jmp
add
mov
pop
out
fsubr
ret
leave
test
fwait
in
notl
adc
mov
dec
fdivrl
das
dec
mov
mov
nop
testl
or
iret
mov
and
or
add
lea
jmp
fisttps
mov
stc
cwtl
imul
setg
push
call
jmp
add
shr
cmp
cli
jmp
xchg
xchg
lea
jmp
int3
push
lds
jmp
add
jmp
mov
mov
das
lcall
and
sub
movb
mov
not
and
mov
and
jmp
xchg
push
pushf
sti
push
hlt
push
pusha
pop
repnz
dec
push
lret
fistl
sub
push
mov
cld
jmp
jns
je
out
imul
mov
pop
popf
or
and
jmp
sbb
xchg
sti
pop
fmuls
fsubs
jl
imul
adc
jno
in
cmpsl
not
and
mov
jmp
stc
jl
jne
insb
aam
push
fcomi
shr
mov
fldenv
add
jmp
loop
lret
xor
jg
push
cld
push
sub
jle
gs
push
sub
mov
lea
ror
add
mov
mov
jmp
negb
adc
gs
or
jmp
repz
test
pop
clc
jmp
push
jnp
lret
iret
add
add
cli
in
cltd
push
mov
mov
fsubs
sti
mov
not
jmp
dec
fmuls
fsubrs
mov
js
and
push
in
mov
dec
sti
or
rorb
sub
popa
add
pop
xor
adc
pop
ds
pop
out
and
mov
and
or
add
lea
rol
jmp
jnp
jge
testl
jge
adc
clc
arpl
rol
jmp
sahf
or
int
hlt
mov
jmp
xor
jmp
jl
jp
in
push
pop
les
int3
and
mov
or
adc
fnstenv
fidivl
filds
pop
loopne
dec
hlt
lea
jmp
adc
add
sahf
jb
mov
jmp
ljmp
lock
bound
psubsb
mov
dec
mov
gs
jmp
les
add
jmp
lea
jmp
push
mov
pop
cmp
and
lret
pop
and
rol
add
xor
add
lea
rol
jmp
mov
xchg
icebp
add
cmc
xor
rol
add
xor
add
jmp
out
fs
popf
insb
mov
leave
imul
pop
loop
aaa
mov
mov
movsl
cmp
iret
fimuls
pop
jbe
outsl
or
rcll
popf
or
pop
lret
scas
pop
cld
mov
jmp
fmull
mov
insb
or
scas
xor
xchg
add
adc
lea
mov
ror
add
xor
add
jmp
mull
xchg
popa
ffree
push
shlb
rol
add
mov
jmp
jb
je
out
pop
xor
xchg
aad
out
repnz
pop
repnz
xor
jmp
mov
xchg
adc
data16
insl
hlt
pop
in
lea
and
and
xchg
into
xchg
xor
fiaddl
pop
enter
inc
cmp
decl
idiv
aas
ret
push
lds
pop
fmuls
fdivs
fs
sbb
iret
add
lea
rol
add
mov
jmp
mov
les
shr
add
jmp
jge
imul
pop
and
add
int3
push
cmp
jmp
test
push
xlat
inc
and
aaa
jbe
xchg
cmc
add
mov
enter
jmp
dec
sub
xor
jmp
lea
jmp
mov
lods
mov
mov
jp
xchg
sbb
aad
adcl
decl
int3
add
add
add
jmp
dec
lret
pop
ds
or
dec
push
fisttps
flds
sub
shlb
cli
or
add
mov
not
and
lea
jmp
cmp
mov
jmp
and
pusha
icebp
popa
add
pop
lret
scas
pop
jmp
lcall
hlt
jmp
loope
test
jmp
aad
fidivrl
xchg
cld
movswl
mov
mov
inc
mov
in
xor
add
mov
lea
rol
add
jmp
mov
ror
add
xor
add
lea
jmp
aas
stos
cmp
or
and
jge
je
out
or
add
push
jmp
adc
cmp
xor
and
jecxz
scas
test
sub
adc
test
xchg
repz
out
rclb
sub
jns
jmp
mov
sbb
xchg
adc
push
mov
jmp
mov
cltd
clc
or
daa
mov
jns
xchg
cmc
add
loop
cltd
push
int3
jmp
mov
jmp
and
push
xchg
mov
shll
or
ds
xor
add
lea
rol
add
mov
xor
jmp
add
jmp
rol
jmp
xor
movsb
sub
iret
pop
cmp
jo
jecxz
push
in
das
xor
jmp
fimull
mov
xchg
sbb
cltd
jmp
add
jmp
mov
xor
notb
sbb
ds
push
mov
push
hlt
xor
add
lea
mov
xor
rol
jmp
jo
jp
in
pop
cmp
scas
or
add
add
fldpi
js
or
jmp
adc
pop
jb
sub
cli
notl
sub
sub
push
movsb
mov
xor
xor
add
lea
rol
add
jmp
into
push
lds
mov
fucomip
sbb
es
je
out
imul
cmpsb
inc
jp
jg
xchg
add
jmp
and
rcll
mov
arpl
cmc
push
or
cwtl
movsb
enter
lea
ror
add
mov
not
jmp
divb
xorl
loope
xor
sbb
hlt
jmp
add
jmp
lds
mov
mov
cld
or
add
pusha
pop
repnz
xchg
add
pusha
ss
push
lds
mov
fucomip
and
pushl
roll
lret
mov
sub
into
out
std
test
push
xchg
add
mulb
pop
jo
int3
decl
test
jne
leave
ret
jmp
rcl
or
xor
add
lea
mov
not
rol
jmp
sbb
push
popa
nop
push
add
enter
pop
in
jbe
fwait
in
and
rorl
shll
flds
pop
fmull
out
inc
lsl
jmp
not
jmp
into
arpl
xchg
gs
loope
jae
in
adcl
test
insb
cli
push
pop
mov
jmp
xor
xor
or
in
or
jmp
add
jmp
ror
jmp
or
push
imul
mov
push
int
and
aaa
adc
add
mov
not
jmp
es
ret
lret
inc
shlb
mov
mov
inc
out
lea
jmp
repz
xchg
movsb
cmp
sub
mov
push
jmp
call
xorl
fs
jo
push
xor
xor
mov
not
or
xor
add
lea
jmp
roll
dec
cltd
add
inc
shll
inc
out
dec
jbe
mov
not
or
xor
add
lea
jmp
in
test
or
add
rol
jmp
pop
rolb
shlb
jbe
xchg
testb
flds
cmp
mov
roll
enter
rorl
lret
xor
add
lea
jmp
int
fidivrl
ds
test
imul
mov
not
or
xor
jmp
cltd
push
test
push
lret
lods
lret
inc
test
mov
jno
xorb
push
add
jmp
mov
cwtl
sbb
sahf
or
xchg
pop
xchg
repnz
rol
ret
rorl
shll
flds
pop
int3
lea
jmp
stos
inc
shll
push
aas
jns
lea
ror
add
mov
not
or
xor
jmp
jmp
cmpb
jmp
xchg
and
sub
push
sbbl
ljmp
sbb
pushf
dec
sbb
jmp
push
enter
and
add
sbb
mov
and
push
lds
mov
or
xor
add
lea
ror
jmp
pop
fimull
ficoml
test
mov
sbb
xor
add
movl
lea
rol
jmp
sub
sub
pusha
pop
xchg
or
je
mov
inc
mov
dec
leave
pop
cmp
sub
stc
imul
shr
shl
not
jmp
push
roll
shll
jmp
push
in
add
jno
jecxz
gs
jl
notb
mov
iret
add
not
or
jmp
cltd
pop
xchg
adc
js
addr16
or
lds
stos
add
add
or
jmp
test
cwtl
decl
lods
jecxz
loop
je
idivl
mov
sbb
cmp
rorl
shll
flds
pop
in
lea
rol
add
jmp
int
dec
lea
pop
jmp
out
ljmp
mov
push
xor
jle
push
mov
stos
mov
jmp
ret
jmp
sub
ret
scas
pop
repnz
add
inc
shll
movb
inc
jmp
flds
mov
sbbb
sbb
imul
leave
jmp
or
jno
and
mov
icebp
outsb
cld
fwait
jbe
mov
call
mov
add
mov
cmpsb
sub
mov
mov
jmp
jmp
fs
push
in
push
cmp
sbb
or
add
mov
mov
add
mov
mov
add
pop
mov
jmp
xchg
adc
test
jge
and
sub
xor
pop
sub
add
jmp
popf
jmp
push
fisttps
flds
sahf
adc
fcoms
mov
fcmovb
lret
and
jmp
jmp
mov
cs
and
fs
jmp
jae
ja
loope
mov
jmp
cli
outsl
lcall
sub
or
push
lds
push
movsl
adc
mov
jmp
pusha
jmp
das
mov
jecxz
in
jg
cltd
or
in
mov
xlat
inc
and
sbb
jmp
add
add
jmp
xor
in
adc
outsb
shrb
or
dec
pop
rclb
sub
mov
mov
lret
pop
ds
mov
xor
add
mov
lea
ror
add
jmp
push
fwait
or
jae
mov
dec
int3
inc
and
adc
adc
lock
jo
mov
jmp
jmp
orb
pop
cmp
jmp
fistps
stos
pop
cltd
or
popa
jmp
push
in
push
hlt
inc
pop
je
jmp
and
dec
sbb
ss
push
lds
mov
and
mov
add
jmp
cmc
adcl
test
push
popa
jmp
aas
fadds
fucompp
cld
jnp
mov
push
nop
push
popa
nop
aaa
xchg
sbb
aad
lock
mov
jb
mov
jmp
pop
leave
test
decb
lods
adc
daa
mulb
ret
jne
addl
jmp
sbb
adc
and
cmp
add
add
and
popl
jmp
das
mov
scas
cmp
sbb
cld
popa
mov
ret
mov
in
sbb
fstpt
lea
jmp
or
jmp
pop
jmp
sub
pop
in
je
lea
push
shlb
xchg
push
jmp
push
shl
jmp
mov
xchg
adc
and
mov
mov
mov
rcl
sub
rol
lsl
jmp
inc
push
xor
es
dec
fdivrl
fistpll
add
jmp
pop
sub
jmp
lcall
inc
xlat
mov
cwtl
xor
xor
daa
inc
mov
jb
inc
mov
shr
jmp
jb
pop
pop
jmp
adc
fucomip
and
add
cld
lea
jmp
mov
jmp
pusha
cmp
jmp
mov
ficoml
mov
shlb
jae
push
jmp
sub
gs
add
push
add
add
pop
and
es
adcb
andb
jne
mov
pop
xlat
inc
and
sbb
aas
mov
cmp
jae
incl
jmp
cmp
push
les
int3
jp
sbb
cli
push
lahf
push
inc
call
jmp
lret
pop
enter
leave
add
jmp
loop
ljmp
xlat
and
add
jne
and
sbb
push
mov
push
lea
call
pop
jmp
sbb
inc
cmp
jmp
mov
mov
xchg
jb
insl
xor
xor
clc
jmp
mov
jmp
test
mov
sbb
int3
dec
cmpl
stc
jmp
inc
add
jmp
incl
das
lods
and
pop
adc
push
jge
fmuls
orb
incl
jmp
push
pushf
sti
push
repz
insb
mov
inc
cld
inc
jmp
xchg
and
cld
jb
jmp
xor
and
dec
sbb
or
dec
les
mov
mov
dec
fnstcw
in
push
push
push
mov
mov
mov
mov
shr
mov
lea
jmp
mov
and
xlat
or
jmp
outsl
jmp
push
in
sbb
movsb
fists
lods
pop
mov
mov
push
mov
stos
add
add
ror
jmp
dec
cmp
mov
decl
test
inc
shll
pusha
pop
repnz
sahf
or
cmpsb
add
pop
jmp
dec
jecxz
push
in
adc
sub
jmp
les
outsl
xchg
jmp
int3
pop
int
addr16
push
lret
pop
ds
enter
pop
into
int3
pop
enter
es
jmp
or
or
xor
xchg
ds
lods
movsb
ret
ds
das
ret
jmp
dec
inc
and
cmp
jns
adc
mov
sub
adc
mov
pop
cmp
ds
or
pushf
mov
fstpl
ds
mov
jmp
cmp
int
frstor
cmp
aas
and
mov
sub
pop
je
mov
add
push
lea
jmp
cmp
enter
or
mov
in
fisttpl
call
add
xchg
adc
add
in
sbb
rol
pushl
mov
jmp
fwait
sbb
aad
repz
insl
inc
push
andb
jmp
addb
repz
sti
dec
test
mulb
cmp
dec
sub
push
stos
and
mull
icebp
sbb
add
jns
pop
xor
jmp
jmp
pop
aad
sub
cs
or
mov
ret
int
shlb
jmp
movzbl
jmp
mov
xchg
repz
test
add
lret
mov
cltd
ficoml
add
add
fadds
sbb
scas
add
add
push
inc
rolb
shlb
push
sub
mov
and
cmp
jne
addl
jmp
add
inc
push
lds
jmp
mulb
dec
push
jno
jmp
test
adc
add
out
jns
mov
imul
xlat
dec
ret
mov
add
add
lea
jmp
rorl
mov
test
iret
pop
cmp
push
fisttps
push
jmp
aaa
test
pop
test
pop
fimull
ficoml
fistps
fs
dec
frstor
cmp
je
popa
mov
jmp
stos
sub
inc
shll
sbb
pop
repnz
pop
jmp
and
insb
pushf
pop
sub
jmp
addr16
jmp
fstpl
stos
pop
xchg
push
inc
and
ss
fimuls
adc
movsb
inc
mov
lea
call
mov
shr
push
jmp
cld
je
lea
adcb
xorb
fnstcw
and
pop
cmp
jb
push
pop
jmp
fsubr
arpl
jmp
roll
push
jmp
push
fdivl
in
lret
inc
aad
dec
jno
xchg
cmc
add
sub
inc
mov
les
ljmp
ret
push
lds
sub
movsl
xor
movsb
ret
mov
nop
lea
jmp
ja
mov
inc
clc
jmp
push
xchg
imul
mov
addl
xor
mov
fldln2
clc
jo
jmp
mov
mov
push
add
add
pop
jmp
inc
fimull
fidivrl
arpl
imul
jge
negl
adc
lret
xor
add
lea
rol
add
mov
jmp
xchg
adc
mov
or
jb
jmp
test
aad
pop
jmp
cmp
jns
push
sbb
mov
jle
insl
push
jmp
add
jg
insb
adc
popf
pushl
mov
jmp
enter
push
cmpb
or
repz
mov
loope
cwtl
mov
jmp
mov
jmp
ljmp
sub
mov
scas
leave
cmp
mov
into
push
sbb
pop
iret
stos
pop
rcrb
and
or
add
xor
add
push
lea
add
jmp
adc
jmp
pop
lret
scas
pop
in
add
aaa
xchg
push
xchg
repz
mov
ja
cmc
sub
jmp
andb
jmp
popa
jmp
jo
jmp
xchg
add
je
lea
sahf
or
cmpsb
adc
inc
aam
dec
jmp
jmp
rep
lcall
adc
mov
call
xchg
mov
jno
jecxz
add
or
sbb
cmp
inc
add
or
ret
jmp
mov
cltd
clc
or
ficompl
stos
pop
popl
xchg
jb
addr16
shll
lds
mov
jmp
xor
and
dec
out
adc
cmp
mov
push
mov
mov
fimull
fidivl
lret
mov
mov
fdivp
mov
ret
movzbl
jmp
pop
inc
and
cmp
add
pop
aam
sub
mov
jb
and
cmp
jne
addl
jmp
xchg
sbb
sbb
add
jmp
or
push
inc
call
decl
popl
jmp
in
popa
icebp
nop
arpl
sub
cld
xchg
cmc
add
das
pop
mov
call
mov
push
pop
mov
call
jmp
mov
cwtl
sti
ret
jmp
fwait
setg
or
jmp
inc
dec
pop
jmp
add
add
jno
xorb
push
mov
test
shr
outsl
ljmp
stc
mov
push
shll
test
jb
xchg
lret
pop
jmp
faddl
mov
lea
pushl
cmc
jae
xchg
sbb
sbb
arpl
xchg
add
call
andl
jmp
add
jmp
les
test
push
lret
xchg
inc
ret
ret
idiv
sub
jmp
test
fists
nop
push
popa
nop
jne
aad
sub
and
inc
lea
movl
jmp
or
mov
xchg
jmp
pushf
fsubr
mov
add
add
mov
add
aad
mov
pop
jb
xor
mov
push
jmp
movsb
sub
jl
push
cld
sbb
andb
pop
rolb
shlb
in
stc
cwtl
imul
roll
aad
jb
insb
or
les
mov
and
jmp
fiadds
pusha
jmp
add
es
cs
xor
dec
fisttps
fsts
jp
pop
incl
xor
or
cmp
pop
ljmp
iret
mov
jmp
enter
roll
mov
adcl
cmp
loop
mov
jmp
dec
aad
sub
aas
pop
decb
mov
les
adc
shll
cmp
je
popa
mov
jmp
push
loope
dec
cmpsl
jne
jmp
adc
out
jae
xchg
mov
scas
add
pop
mov
ret
ds
jle
addl
jmp
inc
rclb
ds
push
xorb
and
inc
loop
cmc
pushf
outsl
test
lret
cmpl
das
stos
cmp
pop
inc
leave
pop
cmp
sub
int
andb
sub
jo
mov
and
cmp
jmp
jle
gs
push
add
add
sbb
cmp
cmp
cmp
popl
jmp
lret
jns
dec
insl
push
jmp
inc
enter
or
inc
fisttpl
adc
and
cmp
add
add
cmp
jmp
push
lea
jmp
xor
jle
in
push
jmp
pop
jmp
in
adcl
test
fwait
adc
inc
aam
dec
out
fcmovbe
mov
add
cmp
je
jmp
mov
adc
inc
repnz
jmp
adc
daa
push
iret
pop
cmp
adc
jp
jp
xchg
or
pushl
xor
inc
lea
call
jmp
push
push
jmp
sbbb
ljmp
sbb
mov
call
jmp
fs
jmp
mov
and
adc
dec
jp
outsl
or
out
mov
leave
fildll
in
je
push
lea
call
jmp
in
or
mov
ret
jne
out
or
dec
sub
daa
push
adc
add
mov
jnp
mov
imul
add
add
pop
aas
lret
lods
cmp
mov
jmp
pop
jmp
mov
jmp
out
imul
insl
mov
sub
lds
clc
pop
jmp
movb
inc
jmp
pushf
adc
orb
jle
sahf
movb
jmp
aas
mov
inc
mov
sbb
jns
push
cld
pop
jb
jbe
loopne
hlt
in
in
inc
jmp
cwtl
or
in
sbb
pop
cmp
mov
mov
jmp
xor
sub
pop
mov
subb
or
pop
pusha
cli
push
into
movl
jmp
jns
jo
loop
das
fisubrs
push
jmp
jmp
mov
inc
jmp
sub
or
or
jae
or
in
xchg
mov
test
dec
mov
jmp
adc
imul
jne
jmp
and
ja
shr
frstor
xchg
mov
and
push
pushf
sbb
cld
xchg
cmc
add
fimull
lahf
decl
jmp
dec
int3
inc
and
mov
into
pop
cmp
and
lcall
ds
or
dec
mov
jne
mov
cmp
jae
and
jmp
jae
adc
negb
sub
ret
jmp
lahf
adc
jb
imul
movsl
int3
aas
lcall
inc
pop
xchg
pop
jmp
leave
jmp
xchg
sbb
lret
mov
and
mov
xlat
mov
adc
adc
mov
add
movzbl
add
jmp
fimull
mov
imul
push
jecxz
jmp
insl
mov
ret
and
jmp
jg
jg
jmp
mov
call
inc
clc
loopne
xor
jnp
popa
jmp
mov
mov
sbb
jno
cmpsl
mov
repnz
jmp
xchg
or
xor
int
push
lea
xlat
inc
and
pop
rcl
idiv
mov
mov
mov
andb
sub
jo
mov
jmp
ret
pop
repnz
fs
mov
mov
jmp
test
xchg
repz
cld
jge
je
insl
cwtl
sbb
push
or
lods
mov
jmp
clc
jg
mov
dec
lret
lret
mov
add
popf
movzbl
jmp
mov
iret
lds
mov
test
add
pop
leave
test
mov
mov
jmp
mov
push
fimull
fidivrl
cmp
sbb
mov
je
popl
jmp
test
cwtl
decl
lods
jl
popa
add
and
cmp
aad
add
cmp
je
popa
mov
jmp
pop
aam
sub
sbb
cmp
lea
jmp
jge
je
out
or
pop
lret
scas
pop
mov
movsb
cmp
inc
mov
xor
out
jl
testb
notb
testb
sub
add
xchg
popf
pushl
jmp
orb
jns
jmp
iret
pop
iret
stos
pop
aad
cli
push
add
std
or
iret
pop
enter
loope
insb
jg
mov
sub
push
mov
mov
push
jmp
and
ljmp
daa
ret
push
lds
mov
movsl
pop
mov
fucomip
aad
add
mov
jmp
test
cmpsb
shll
pop
rclb
sub
xchg
stos
test
popa
jp
jmp
imul
sub
into
xorb
mov
call
pop
int3
rol
add
mov
jmp
incb
mov
sti
jns
mov
call
xchg
pop
xchg
pop
bound
loopne
imul
and
or
add
jmp
pop
int
push
lea
jmp
movsl
daa
mov
and
mov
pushf
sti
push
inc
dec
fdivrs
pop
or
and
ja
insl
hlt
pop
loope
jp
jp
ja
fisttpll
decl
es
jmp
add
mov
test
mov
lock
inc
sub
jne
mov
and
mov
not
and
or
add
jmp
xchg
cmp
mov
out
into
mov
or
jbe
je
out
pop
dec
cmp
mov
jno
jmp
lcall
cmp
cmp
shr
cmp
movsb
insl
ljmp
stc
mov
lret
lret
inc
fidivrl
decb
not
and
mov
and
or
add
jmp
mov
add
mov
jmp
loopne
and
jmp
fildl
mov
mov
repz
jg
jmp
imul
mov
jmp
fildl
or
jmp
jg
jbe
loopne
daa
stos
cmp
bound
pop
jmp
xor
fs
sbb
or
cmpsb
inc
cmp
not
and
mov
and
or
add
mov
lea
jmp
pop
fisttpll
out
jg
mov
rcll
lods
pop
test
push
mov
es
stc
mov
cli
not
and
mov
and
or
add
mov
jmp
push
sbb
xchg
xor
leave
xlat
shrb
mov
jmp
dec
rclb
xor
pusha
call
mov
mov
jmp
cmpsl
mov
cmc
mov
jmp
sbb
arpl
arpl
cmc
push
cmpsl
sub
xor
bndstx
mov
mov
lea
mov
jmp
mov
xchg
mov
test
lea
add
mov
mov
not
and
and
or
add
jmp
push
lret
pop
ds
sub
jae
testb
inc
xor
jge
mov
not
jmp
xor
push
cld
jmp
mov
lcall
lds
mov
hlt
xchg
outsb
leave
or
fwait
and
jmp
mov
cli
jmp
dec
rolb
rclb
imull
je
pop
lret
pop
ds
dec
rolb
sarb
fsubrp
lret
idiv
js
je
out
imul
push
sbbb
out
ja
xorb
lods
and
jge
scas
cmp
mov
push
roll
sarl
hlt
or
mov
add
lea
ror
add
mov
jmp
mov
sahf
stc
or
ds
cli
adcl
test
mov
fisttpl
loopne
stos
cmpsl
sbb
add
mov
inc
aam
dec
mov
fdivrl
adcb
adc
pop
and
pop
enter
rol
add
and
mov
not
jmp
jne
cmp
add
add
and
jmp
call
jmp
adc
popf
jmp
in
jb
xchg
and
add
mov
lea
rol
jmp
imul
cli
jg
mov
push
mov
xor
popf
lea
push
pop
shrl
cltd
adc
add
leave
mov
mov
mov
mov
ror
add
and
mov
not
jmp
mov
add
mov
lea
ror
add
mov
jmp
sub
and
push
jl
add
cmp
js
add
lea
jmp
les
call
jmp
sahf
sbb
xchg
or
jge
jmp
mov
repz
add
adc
push
insb
call
and
and
and
or
jmp
int3
call
jmp
cmp
push
lds
ror
orl
test
add
jmp
add
popf
popf
mov
sbb
add
lds
movsb
push
cmpsb
inc
jnp
fimuls
not
and
or
mov
add
lea
jmp
je
insl
hlt
pop
out
js
ja
lea
jmp
data16
call
jmp
es
cmp
mov
adc
icebp
mov
and
or
mov
mov
add
mov
mov
jmp
les
cmpsb
push
mov
cld
mov
ror
jmp
test
sbb
mov
add
ds
inc
mov
jge
jmp
dec
ret
ret
call
jmp
mov
lods
mov
xchg
dec
in
xor
repz
or
daa
test
and
jmp
enter
add
add
or
add
cmp
pop
push
icebp
jns
dec
push
lea
rol
add
mov
notl
mov
jmp
ret
mov
and
ror
add
and
or
add
mov
lea
jmp
mov
mov
sarl
add
lcall
sti
push
mov
clc
jmp
inc
inc
shl
add
jmp
int3
popf
rcll
push
jmp
sub
outsl
insb
or
scas
add
mov
notl
mov
and
or
add
mov
lea
jmp
push
fwait
iret
call
jmp
je
jo
loop
sar
sub
lock
add
and
or
jmp
int3
popf
sub
xor
shlb
add
adc
sub
jno
mov
jmp
push
add
or
roll
add
cli
out
scas
call
jmp
xchg
add
lock
mov
jmp
stos
cmp
xchg
pop
mov
lea
jmp
inc
xchg
call
jmp
push
enter
or
rol
add
mov
not
and
mov
and
or
jmp
fidivrs
cmp
jmp
mov
xchg
fsubr
call
jns
mov
xor
cmp
pop
es
add
not
jmp
int
lret
scas
pop
mov
fisttpl
fnsave
push
cmpsb
iret
or
add
add
sbb
push
not
jmp
cmp
add
jmp
pushf
mov
mov
add
lods
sub
add
pop
loop
scas
adc
xchg
lock
mov
mov
not
and
and
or
add
mov
jmp
add
add
add
jmp
inc
fimull
ficompl
jp
jbe
clc
ror
jmp
or
aaa
out
and
jmp
enter
jmp
rolb
ret
call
jmp
ja
push
cld
adc
jbe
cmpl
cltd
jg
rorl
fadds
inc
lock
lea
mov
jmp
add
movsl
not
and
or
add
mov
lea
rol
jmp
jecxz
lock
bound
and
jle
call
add
add
inc
xor
add
mov
inc
mov
pop
out
fmull
mov
jmp
int3
popf
rclb
lods
pop
mov
jmp
mov
iret
leave
pop
or
add
mov
lea
rol
add
and
jmp
mov
add
add
jmp
mov
cmpsl
ret
ss
ljmp
fmull
and
jmp
dec
rol
jmp
int3
popf
std
jge
je
dec
stc
jp
jp
add
mov
pop
leave
test
stos
push
loope
inc
cld
jmp
add
jmp
int3
popf
insb
mulb
cmp
cmp
add
adcl
test
fs
not
jmp
call
jmp
xor
xchg
or
add
adc
fstl
mov
dec
sub
or
movsl
pop
and
mov
and
or
add
mov
lea
jmp
push
fimull
ficompl
jno
xchg
cmc
add
pop
enter
jle
pushf
xor
or
jmp
pop
lea
in
sbb
add
add
push
mov
ret
out
aas
scas
lret
fsubr
or
clc
ror
jmp
sub
lahf
punpckhdq
fisubrs
es
jmp
add
imull
test
jp
jno
jecxz
inc
fdivl
in
leave
adc
loopne
pop
cld
lea
mov
not
jmp
dec
cld
in
mov
jmp
push
xchg
pop
bound
mov
and
add
jae
add
jmp
push
cmp
jmp
repnz
jmp
rol
jmp
inc
rcll
and
lods
and
dec
dec
enter
pop
std
rclb
mov
cld
mov
and
jmp
add
jb
gs
adc
xchg
popl
std
or
pop
and
jmp
ss
add
addr16
push
mov
xchg
repnz
cmp
ret
add
mov
lea
rol
add
jmp
fwait
adc
push
fimull
fidivrl
stos
sub
pop
test
inc
mov
jmp
mull
shr
ja
not
jmp
sbb
mov
xchg
rolb
mov
icebp
movsb
cmp
ret
gs
push
cld
push
setg
push
adc
jns
and
and
jmp
not
jmp
setns
push
aas
pop
test
and
adc
or
rorl
lock
add
mov
lea
jmp
in
pop
or
add
mov
jmp
mov
mov
mov
inc
jo
and
jmp
and
mov
jmp
mov
jmp
mov
test
jmp
rcll
mov
mov
and
sbb
pop
aaa
ret
rol
add
mov
mov
not
and
jmp
inc
les
int3
and
call
addb
repz
lock
dec
sub
es
jmp
xchg
adc
mov
jg
jg
daa
mov
and
inc
roll
aad
test
mov
flds
outsl
addr16
add
mov
and
or
add
jmp
insl
out
adc
or
add
jmp
fcoml
pop
mov
xor
jecxz
jecxz
jne
mov
ror
add
xor
add
lea
rol
jmp
ror
jmp
enter
dec
cltd
int3
inc
mov
adcb
mov
mov
sbb
adc
clc
xor
mov
xor
add
lea
jmp
lret
stos
pop
into
xlat
inc
aad
dec
cld
push
les
int3
idivb
sub
add
xor
add
mov
lea
mov
xor
jmp
roll
mov
jmp
add
jmp
test
out
popa
sti
imul
dec
hlt
notl
out
jnp
mov
and
rol
add
xor
add
lea
rol
jmp
xor
jmp
clc
popa
icebp
nop
arpl
pop
mov
mov
out
jo
xorl
jmp
push
xchg
jb
or
xchg
add
add
jl
sub
dec
fdivrl
push
pop
sbb
xor
xor
add
lea
mov
jmp
lret
mov
repz
xor
mov
xor
add
lea
jmp
ror
jmp
aaa
mov
inc
mov
dec
int
and
add
rolb
les
jp
jne
jmp
ja
pusha
pop
repnz
jle
jmp
les
mov
and
jp
in
or
insb
loop
je
lock
mov
lea
rol
jmp
add
jno
insb
or
rorb
adc
inc
fbstp
nop
xchg
pop
add
jmp
orl
push
pushf
sti
push
mov
movsb
cmp
sbb
pop
cmp
mov
xor
xor
add
lea
rol
add
jmp
mov
xchg
xor
jle
sub
ret
shlb
bnd
jle
jl
testb
mov
mov
add
mov
xor
xor
jmp
xchg
mov
jmp
and
jno
jne
out
pop
push
pop
jp
ds
and
add
jmp
test
test
out
aam
xchg
pop
add
repz
xchg
outsb
leave
push
iret
pop
cmp
adc
push
popa
and
add
and
mov
not
and
or
add
mov
jmp
dec
aam
sub
mov
push
pushf
sti
push
cld
xchg
cmc
add
inc
ror
rol
add
mov
xor
xor
add
lea
jmp
push
roll
aad
mov
stos
int
cmc
sti
js
mov
hlt
je
lea
push
ror
add
mov
not
or
xor
add
lea
jmp
mov
nop
ret
jmp
add
jmp
in
insb
loop
je
push
rolb
shrb
imul
sbb
jecxz
xchg
rol
add
mov
not
jmp
addb
repz
sti
dec
loop
clc
leave
xor
jmp
sub
shl
add
ljmp
inc
jmp
mov
movsl
int3
aas
aad
jnp
mov
loop
lcall
lret
mov
or
repnz
xor
xor
add
lea
jmp
pop
inc
and
sub
outsb
xor
push
rol
jmp
rol
jmp
mov
in
pop
int
cmpsl
bnd
je
and
push
inc
mov
ret
shlb
repnz
lea
mov
jmp
movsl
xor
out
jmp
jge
roll
mov
lock
jo
loop
jge
cmp
or
pop
mov
mov
inc
xlat
inc
and
push
enter
push
add
add
push
in
jge
divl
stos
aaa
cmpsl
ret
loope
js
add
mov
not
or
xor
add
lea
jmp
mov
shll
pop
sub
sbb
ds
jmp
movsl
cmp
inc
fidivrl
dec
adc
or
decb
sti
xor
add
lea
jmp
mov
lods
test
rol
add
mov
not
or
xor
add
lea
jmp
lahf
push
mov
es
test
xchg
lock
out
notb
push
xor
cmp
jmp
daa
mov
jmp
divl
xchg
inc
lret
lret
fisttps
flds
lds
ljmp
fdivp
rorl
ret
xor
add
lea
jmp
push
lea
outsl
lcall
pop
jb
pop
sbb
repnz
not
or
xor
add
lea
jmp
rol
jmp
jle
pusha
pop
repnz
mov
lock
aam
fdivrl
jmp
cmp
cmp
scas
cmp
cli
insb
loop
je
mov
repz
add
lea
rol
jmp
jb
jnp
in
inc
and
cmp
not
or
xor
add
lea
jmp
sbb
das
lea
arpl
outsb
or
sbb
scas
cmp
mov
es
jmp
outsl
mulb
push
lcall
int
and
push
aaa
mov
cs
jmp
fcomps
fucomip
cmp
lock
bound
push
pop
fisttpll
out
add
ror
add
mov
not
or
xor
add
lea
jmp
clc
jge
je
push
adc
pop
mov
not
jmp
ljmp
movsb
cmp
inc
fwait
pop
xchg
adc
es
inc
mov
es
jmp
fwait
adc
int3
inc
and
pop
and
jb
lahf
punpckhdq
mov
not
or
xor
add
lea
jmp
insl
out
adc
sub
popa
sbb
push
rcll
push
inc
mov
test
cmpb
rol
add
jmp
not
jmp
xchg
or
cwtl
push
imul
xchg
pop
bound
jmp
pushf
or
jmp
sub
xor
pop
dec
rolb
rclb
mov
and
add
mov
not
or
xor
add
lea
jmp
xchg
bnd
jbe
jl
negb
rolb
sarb
int3
push
shlb
push
xor
add
lea
rol
add
mov
not
jmp
and
mov
stos
into
cmp
jmp
inc
shlb
jmp
xor
mov
jmp
jmp
mov
cltd
clc
or
addb
icebp
add
scas
sub
sbb
or
mov
jmp
xor
jmp
aam
shll
insb
lahf
push
movsb
dec
bnd
mov
das
xor
add
lea
mov
add
not
rol
jmp
and
call
mov
mov
pop
add
pop
mov
pop
leave
ret
jmp
clc
jno
xorb
pushf
xor
inc
pop
aam
sub
pushf
jmp
inc
enter
outsl
pop
aam
sub
cmp
imul
adc
and
adc
sub
add
jmp
mov
mov
es
popf
push
pushf
sti
push
mov
push
scas
in
xchg
jmp
fs
imul
push
cmpsl
aaa
cmpsl
ret
xor
jg
push
mov
lea
ror
add
add
mov
jmp
fmull
mov
pushl
mov
jmp
mov
mov
imul
insl
test
out
jg
jmp
sub
jle
call
add
jle
aaa
cmpsl
ret
adc
xchg
or
mov
ror
add
xor
add
xor
lea
jmp
inc
push
xor
push
push
fisttpl
fnsave
std
adcl
test
sar
xchg
cmp
jne
jmp
iret
dec
fdivrl
jb
in
ds
fcoms
add
or
push
push
mov
jg
jg
fisttps
push
fimuls
adc
add
sarb
and
mov
jmp
aad
int3
stos
data16
outsb
cld
fwait
jbe
stos
and
scas
fstp
mov
ret
out
xor
and
sbb
sub
rorl
jno
mov
scas
leave
cmp
jmp
lds
shlb
pop
xor
mov
and
popa
icebp
nop
arpl
xor
dec
fisttpll
out
jecxz
jmp
mov
mov
mov
andb
sub
jo
mov
jmp
or
fcomi
cmp
je
popa
mov
jmp
add
cmp
mov
popl
jmp
push
jmp
adcl
add
aaa
cmpsl
ret
mov
rol
add
xor
mov
xor
add
mov
lea
jmp
jmp
loope
jae
push
xchg
add
cmp
jae
incl
jmp
xor
je
jmp
stos
xor
int
mov
mov
addr16
push
in
and
mov
sub
incb
add
sbb
dec
jle
inc
inc
cmp
jmp
movsl
and
push
xor
sbb
gs
pushf
outsl
cwtl
push
xor
jmp
or
pusha
mov
lods
lret
inc
mov
gs
pushf
outsl
push
fstpt
iret
shr
add
mov
jmp
in
push
jmp
sub
xchg
sbb
fisttpl
jmp
das
mov
mov
scas
leave
cmp
or
std
or
mov
mov
sub
push
mov
mov
shr
lea
and
jmp
divb
shr
nop
add
mov
mov
add
jmp
aas
scas
cmp
mov
mov
fwait
pop
int3
inc
and
scas
cmp
jb
lea
lea
call
jmp
cmp
push
ret
cmpsb
push
hlt
mov
push
ljmp
add
xor
cwtl
push
imul
nop
jo
and
fsin
fadd
and
jmp
pop
jmp
add
jmp
daa
mov
inc
fisttps
fldenv
js
mov
fwait
lock
fimull
mov
inc
loop
or
mov
inc
add
jmp
ret
je
jo
call
jmp
xchg
jmp
sbb
mov
and
inc
and
pushf
jmp
push
dec
or
test
add
push
aam
sub
xor
scas
push
add
jo
jmp
and
xor
jbe
popf
or
int3
inc
and
adc
jo
mov
pop
popf
pushl
mov
jmp
insl
out
adc
or
xchg
add
ja
dec
fnstcw
or
ds
mov
ret
mov
jmp
in
popa
icebp
nop
arpl
xchg
push
inc
enter
outsl
cmp
or
andb
sub
jmp
xchg
or
jo
jg
jecxz
jmp
adc
movzbl
jmp
pop
je
jmp
add
add
popa
icebp
nop
arpl
cmc
fs
popf
insb
lds
leave
lea
movzbl
movzbl
shl
or
movzbl
jmp
popf
dec
cmp
jne
addl
mov
jmp
out
rolb
add
jmp
fisttpl
popf
jmp
ljmp
popl
jmp
jp
bound
dec
sub
dec
dec
fimull
fisubrl
test
sbb
lea
jmp
test
mov
es
aam
sub
dec
das
fidivl
mov
rclb
pop
sub
aaa
cmp
jmp
mov
sub
xor
and
mov
aaa
ret
js
andl
jmp
xchg
sbb
dec
fdivrl
mov
and
dec
lcall
mov
inc
incl
cmp
jne
jmp
movsb
and
inc
fidivrl
xor
pop
xchg
mov
adc
jmp
add
jmp
xor
or
mov
xchg
repnz
pop
sub
mov
aad
rolb
shlb
dec
push
xor
push
push
inc
pushf
jmp
adc
call
jmp
jne
push
hlt
push
cld
ds
mov
out
es
movl
ret
jmp
fxch
popa
mov
ret
mov
jmp
sti
outsl
lcall
xchg
repz
cmpsl
lahf
or
mov
sbbb
add
fldt
rclb
jne
jmp
jge
jns
jmp
push
xchg
jb
es
icebp
dec
xlat
aas
cmp
pusha
mov
mov
mov
andb
sub
jo
mov
jmp
fisttpll
mov
dec
fstpl
jnp
jbe
loopne
pop
xchg
add
test
jmp
jg
jne
out
pop
mov
lds
xchg
pop
push
popa
jmp
and
cmp
pop
xchg
mov
movsl
int3
aas
aad
sub
lods
addl
mov
movzbl
add
jmp
or
dec
roll
aad
pop
jmp
loope
hlt
xchg
outsb
mov
cmp
jle
imul
arpl
gs
mov
jmp
insb
out
adc
sbb
je
xor
pushf
popf
pop
sbb
pushl
mov
jmp
jg
gs
sbb
loopne
mov
jmp
das
cmpsb
xor
scas
pop
fsts
lods
pop
cli
sub
xor
jne
add
and
mov
jmp
daa
test
mov
scas
lret
add
adcl
jg
push
mov
sub
push
mov
mov
mov
mov
shr
jmp
mov
or
scas
aas
scas
lret
mov
pushf
les
jmp
fs
sub
jmp
or
push
jmp
push
lret
pop
ds
jle
jns
jmp
data16
xchg
cmc
add
es
push
lds
mov
popl
lea
jmp
cmp
sbbb
ljmp
push
mov
cmpsb
pop
inc
pop
cmp
jl
push
pop
jmp
mov
mov
nop
pop
push
jmp
xchg
mov
add
fnstenv
lea
jmp
aad
les
repnz
mov
xchg
pop
bound
cwtl
imul
and
movl
movl
movl
jmp
insb
jmp
cmc
ja
xorb
push
lret
mov
lahf
punpckhdq
movzbl
jmp
cmp
or
jmp
shl
jmp
orl
xchg
pop
xchg
add
sahf
insl
insb
xchg
mov
or
mov
add
shlb
shl
jmp
push
jecxz
push
in
repz
jne
push
and
in
cltd
push
jmp
lods
lods
lret
inc
lock
pushf
sub
mov
jmp
or
jmp
mov
xchg
jge
negl
mov
inc
and
jbe
xor
jmp
xor
mov
jmp
add
cld
outsl
lcall
inc
daa
rclb
xchg
lea
jmp
mov
mov
fiaddl
sub
int3
push
lret
mov
sbb
loopne
add
add
fdivp
jae
xchg
insb
fildl
sbb
adc
or
les
pop
imul
mov
mov
mov
mov
mov
mov
jmp
push
fisttpl
fnsave
fstpl
addl
pop
jecxz
push
in
cltd
call
leave
ret
jmp
jns
mov
cli
into
jnp
jmp
loope
cli
popf
insb
test
insl
hlt
pop
imulb
ret
cmp
dec
stos
sbb
push
pushf
jmp
adc
xor
pushl
jmp
push
fisttpll
out
aaa
mov
inc
roll
aad
jp
cli
xor
or
shr
iret
jp
mov
popf
jmp
nop
mov
jmp
imul
sbb
das
addr16
fistpll
sub
jmp
sub
cli
sbb
jmp
mov
mov
das
test
adcl
xchg
add
cmp
cmpsl
aaa
push
mov
add
mov
js
and
adc
pusha
jmp
sbbb
dec
adc
dec
daa
loopne
popa
sbb
jmp
movsl
aaa
cmpsl
ret
and
daa
inc
mov
jecxz
out
mov
aaa
js
roll
dec
or
aam
ljmp
lea
lea
jmp
hlt
mov
inc
or
mov
pop
mov
rorb
inc
and
out
sub
jmp
mov
mov
pop
xchg
adc
out
out
mov
adc
shl
or
mov
inc
add
cmp
jb
jmp
dec
enter
add
dec
fdivrs
add
jp
mov
addl
jmp
repz
xchg
out
push
int
fdivrs
cmpl
jb
fs
or
mov
xchg
jle
fs
dec
sub
jo
mov
and
cmp
jne
jmp
jmp
loope
stc
cwtl
imul
xor
std
insl
hlt
pop
loope
into
pop
cmp
and
add
add
jmp
push
mulb
cmp
jmp
jns
dec
fimuls
and
or
mov
inc
mov
dec
rcll
outsw
popl
lea
jmp
jg
arpl
cmc
inc
ret
movmskps
or
jmp
dec
fimull
fidivl
mov
inc
roll
sarl
push
shlb
mov
in
inc
lahf
mov
jmp
inc
jmp
ret
push
lds
xchg
lds
lret
jno
jecxz
xlat
movzbl
add
cmp
je
jmp
inc
jmp
or
out
in
mov
shrl
test
mov
je
jmp
pop
cmpw
jmp
mov
lock
stos
into
cmp
xchg
mov
fmuls
mov
jmp
jl
xchg
testb
adc
cmc
jb
xchg
cld
lcall
jmp
dec
enter
cmp
cmp
arpl
jg
jmp
popa
mov
ret
dec
les
int3
fidivrs
jmp
mov
shll
and
out
call
pop
in
call
lahf
punpckhdq
mov
dec
das
ficompl
out
cmp
xor
sub
jmp
or
lods
cmp
sub
out
xchg
jmp
ljmp
je
pop
enter
jns
adc
cmp
je
mov
inc
inc
inc
test
jne
pop
ret
jmp
inc
popf
jmp
or
mov
jmp
and
xor
rclb
ja
lcall
jmp
mov
xchg
mov
sti
xor
add
add
roll
sti
popa
icebp
nop
arpl
mov
shlb
clc
ror
add
and
or
add
mov
lea
jmp
call
stc
lods
xor
popf
or
pop
iret
stos
pop
int
popa
mov
ret
lcall
add
add
dec
cltd
pop
inc
ret
ret
pop
xchg
repnz
xchg
test
pop
push
mov
and
cmp
jne
addl
jmp
mov
cmp
add
add
pop
mov
xchg
nop
adc
in
sbb
fstpl
test
and
mov
add
cmp
je
popa
mov
jmp
and
push
fnsave
int3
popf
push
jecxz
push
in
cmpsb
sub
jb
adc
scas
xchg
pop
push
fstpt
lahf
stc
pop
push
lea
jmp
pushf
adc
in
sbb
mov
fwait
decb
out
sbb
xchg
mov
mov
mov
andb
sub
jo
jmp
jnp
xchg
mov
jmp
mov
scas
leave
cmp
jno
xchg
cmc
add
sub
imul
adc
test
jne
dec
dec
cmp
je
cmpw
jmp
cmp
cmp
syscall
xchg
add
jmp
xor
pusha
mull
icebp
push
xchg
add
std
or
mov
ss
cmp
jmp
ljmp
jmp
cltd
scas
fcoms
and
lea
or
xor
aaa
push
mov
mov
inc
jmp
push
push
jmp
xchg
or
aad
sub
aaa
rorb
mov
mov
je
jmp
pop
jmp
rorl
movsb
push
rcr
inc
aam
dec
leave
pop
fdivl
in
xlat
hlt
pop
vshufpd
call
inc
and
aaa
pop
xchg
pushf
and
jmp
data16
adc
push
mov
mov
cli
jne
jmp
sbb
clc
outsb
or
das
jle
push
jnp
mov
add
add
jmp
gs
cmp
jmp
addl
jmp
ds
dec
mov
addr16
jo
sbb
xchg
sar
inc
adc
ljmp
fistpll
pop
jb
sub
gs
pushf
outsl
mov
mov
jmp
loope
scas
adc
popf
leave
push
mov
inc
es
test
dec
movsl
jp
popl
jmp
repnz
jmp
lods
and
int3
inc
and
pop
jb
cmp
outsl
lcall
sbb
fs
jmp
mov
cltd
popa
add
pop
outsl
ljmp
stc
mov
enter
jmp
mov
xchg
cmpsl
inc
or
fs
mov
jmp
repnz
xchg
outsb
fstps
add
add
imul
insl
int3
jp
jbe
loopne
push
ret
cmpsb
push
mov
negb
orb
add
jmp
aaa
lods
cmp
sub
call
ljmp
mov
movzbl
add
cmp
jmp
fucomip
mov
inc
inc
jmp
lret
pop
xor
mov
jmp
mov
lahf
cli
or
inc
rclb
sub
pop
ds
sub
je
jmp
xor
cltd
sbb
lret
cmpsb
push
test
lock
xor
mov
mov
andb
sub
jo
jmp
gs
adc
sbb
xchg
loop
stos
test
jmp
fistps
scas
pop
test
mov
inc
mov
cli
jb
xchg
lock
mov
cli
into
dec
mov
jmp
xchg
jb
inc
jmp
sbb
ss
inc
shll
enter
orb
add
mov
dec
fdivrs
lcall
loop
je
add
aad
scas
mov
jmp
stos
cmp
mov
notb
push
aaa
ret
cmp
ret
jmp
xor
mull
xchg
lds
call
outsb
xor
jmp
cmpsb
enter
ljmp
sti
popa
icebp
nop
arpl
xor
mov
lret
mov
incl
push
pushl
jle
call
pop
sub
add
xchg
popf
pushl
jmp
push
jp
dec
fdivrs
shlb
sub
cs
mov
jmp
inc
sbbl
in
bound
mov
mov
push
xchg
imul
repz
jmp
fidivs
mov
stc
shrd
jecxz
jmp
cli
jo
xorl
push
push
jne
jmp
movsl
cs
xchg
mov
hlt
push
cld
setb
aad
sbb
je
mov
ret
adc
mov
inc
mov
dec
ret
ret
inc
pop
and
cmp
jmp
loopne
out
addl
jmp
fdivr
and
add
add
xchg
add
and
jle
mov
testb
mov
mov
mov
andb
sub
jo
mov
jmp
or
inc
popl
jmp
std
imul
cmp
pop
lret
lret
push
cmp
cmp
dec
pop
leave
test
mov
xor
add
ljmp
sahf
insl
test
or
jbe
pusha
cmpb
jmp
faddl
dec
cmpsb
pushf
or
sbb
dec
frstor
and
xchg
add
add
dec
movsb
cmp
gs
data16
dec
fdivrl
test
iret
popa
mov
jmp
je
jmp
and
int
fdivrs
mov
fldt
jmp
xchg
jmp
and
fs
movsb
stc
jmp
jns
xchg
cmc
add
push
fisttpll
out
pop
roll
shll
outsl
pop
mov
inc
test
jne
dec
cmp
je
cmpb
jne
jmp
jmp
inc
iret
pop
cmp
xor
ljmp
mov
out
and
scas
add
shr
std
xchg
testl
stc
jmp
add
push
jns
dec
add
jecxz
out
jno
data16
jecxz
cmpl
clc
jae
jno
clc
les
jmp
mov
mov
sbb
pop
in
mov
cwtl
bound
push
sub
push
lds
xchg
add
cmp
cmp
jg
ret
push
lds
push
sti
xchg
popf
pushl
mov
jmp
mov
popa
jmp
inc
fimull
ficompl
inc
fimull
fidivrl
sti
popa
icebp
nop
arpl
pop
mov
movsb
mov
mov
mov
andb
sub
jmp
xchg
popf
sahf
push
mov
jmp
pop
push
xor
dec
scas
aaa
cmpsl
ret
cmp
or
jle
adc
inc
mov
ret
jo
jmp
daa
movsb
cmp
inc
sub
add
add
jg
jmp
fwait
sbb
aad
repz
hlt
sbb
and
insl
fdivr
pushl
lret
pop
jp
jg
setg
or
imul
adc
add
and
jmp
clc
jo
xorl
xorb
pop
jp
xor
mov
inc
mov
pop
popl
lea
jmp
mov
jmp
stc
jnp
mov
pop
xlat
inc
and
js
fisttps
fsts
fdivl
in
mov
jne
or
leave
jne
sub
dec
ret
jmp
cwtl
movsl
sub
jmp
sbb
and
inc
and
js
hlt
push
cld
dec
hlt
cmpsl
cmp
pushf
jmp
jl
jns
jmp
pop
into
pop
cmp
popa
insb
ljmp
stc
mov
pop
cltd
mov
rol
xchg
test
xor
fisubl
add
add
jmp
fildl
mov
mov
xchg
js
push
xor
es
movsb
aam
jmp
flds
mov
pop
xchg
popf
pushl
jmp
stos
cmc
inc
mull
jmp
mov
mov
mov
pusha
jmp
dec
iret
pop
cmp
push
jnp
outsb
or
adc
push
lret
lret
jae
repz
mov
jmp
sub
mov
cmpsl
ret
mov
movsb
ret
ds
imul
mov
jmp
inc
popa
jmp
cwtl
and
jecxz
push
in
dec
lds
iret
das
add
ja
mov
movzbl
add
cmp
je
jmp
mov
lods
lret
inc
mov
cmpsb
xor
scas
or
movsl
xor
stc
cmpsl
sub
andb
sub
jmp
sti
jne
mov
fstl
mov
notb
add
push
mov
ret
imul
mov
add
push
outsl
or
scas
in
ljmp
add
pop
gs
xchg
jecxz
cmp
jne
addl
mov
jmp
inc
aam
sub
adc
sub
je
popa
mov
jmp
int3
popf
push
into
pop
cmp
push
push
roll
aad
rep
jb
fs
cmp
pop
xchg
repnz
fwait
or
pop
shll
jmp
mov
push
jmp
add
add
add
shlb
and
pop
leave
push
mov
push
lea
jmp
xor
and
sub
ds
adc
andb
add
add
adcl
test
mov
mov
cmpsb
xor
movsl
sbb
add
mov
add
cmp
jmp
stos
sub
lds
or
sbb
lds
inc
cld
add
add
mov
mov
inc
test
jne
dec
jmp
xchg
adc
mov
jmp
push
inc
jmp
xchg
adc
sti
imul
push
ljmp
mov
jmp
jmp
mov
jmp
mov
rcrl
movsb
sub
lds
inc
into
pop
cmp
and
in
jmp
mov
scas
lret
or
adc
gs
notl
mov
xchg
mov
and
cmp
jne
addl
jmp
int
test
jmp
xor
sbb
mov
sbb
daa
cmpsb
push
pop
jmp
mov
jmp
mov
mov
sbb
test
test
out
mov
xchg
clc
movl
arpl
add
pushl
jmp
pushf
jmp
mov
gs
fisttpll
out
push
insl
hlt
pop
mov
add
mov
mov
popf
lods
into
push
jmp
xor
rorb
mov
push
jno
pop
xchg
or
sub
ret
jmp
adc
add
add
jmp
add
std
jle
mov
sti
push
xchg
adc
xchg
je
call
add
xchg
popf
pushl
jmp
cmc
xchg
push
xchg
inc
fucomip
int3
std
jmp
popf
add
add
lret
pop
sub
jecxz
jmp
mov
out
push
rolb
shlb
outsl
ljmp
stos
int
iret
jp
pusha
mov
mov
mov
andb
sub
jo
mov
jmp
iret
inc
fidivrl
lods
jmp
add
mov
jmp
push
popf
or
mull
icebp
pop
and
xor
jmp
jbe
sub
addl
jmp
lret
mov
mov
mov
inc
mov
inc
mov
cwtl
inc
adc
cmpsb
movzbl
jmp
cmpsb
cmp
xor
scas
xlat
jns
jg
jmp
stc
or
jp
scas
aas
scas
lret
cld
mov
dec
cld
test
jne
mov
jmp
or
add
lret
push
mov
mov
push
jmp
and
roll
add
arpl
cmc
adc
push
lahf
push
lret
mov
inc
mov
cmpb
push
mov
mov
jmp
int3
push
shlb
inc
mov
cmp
sub
cmovno
je
jmp
xor
sbb
dec
gs
sbb
pop
cmp
sub
add
lea
jmp
loope
mov
sub
add
xchg
jmp
sbb
dec
jbe
pusha
pop
repnz
pop
xchg
add
jp
out
adc
sbb
popf
jmp
pop
pop
mov
add
add
jmp
inc
roll
aad
mov
lods
lret
inc
mov
in
pushf
jmp
mov
enter
lds
pushl
jmp
insl
loope
adc
inc
popf
adc
repz
cmc
xor
orl
or
test
jne
pop
ret
jmp
ljmp
fstpl
mov
mov
andb
sub
jmp
mov
sahf
push
lds
iret
and
jno
jbe
loopne
data16
jmp
and
jmp
push
push
xor
jge
arpl
xchg
gs
mov
and
into
add
inc
adc
and
jecxz
out
mov
sarl
mov
jmp
lret
cmpsl
push
mov
jmp
je
arpl
cmc
sbb
call
in
jmp
dec
aam
sub
or
sbb
mov
jmp
jne
addl
mov
movzbl
add
jmp
popl
jmp
dec
fstpt
in
je
insl
push
xchg
mov
xchg
jmp
or
addr16
decb
cmp
add
or
lret
movsl
push
stos
js
insl
hlt
pop
rcrb
stc
mov
jmp
cmpsb
mov
jmp
movb
jmp
and
ss
mov
and
ss
rclb
xor
cli
sbb
test
jmp
cmp
pop
mov
xchg
repnz
push
fimuls
inc
mov
and
xchg
or
dec
cli
jbe
cmpl
sub
aad
sub
imul
inc
cmpb
jne
jmp
iret
pop
repnz
fs
inc
jmp
add
decl
jmp
jl
jne
jmp
adc
or
inc
xlat
inc
and
insl
lret
or
jmp
jmp
xor
ret
jmp
imul
pop
jmp
pop
iret
pop
cmp
jle
add
setg
or
jno
sub
clc
or
push
sub
test
sti
jmp
rolb
add
jmp
in
in
je
inc
adc
inc
fdivl
in
push
lret
lret
pop
lret
scas
pop
mov
mov
inc
mov
aaa
jmp
inc
fmuls
fcomps
lea
adc
out
adc
pop
dec
je
jmp
push
xchg
add
cltd
or
and
lods
jl
mov
jne
addl
mov
jmp
dec
and
add
jmp
and
dec
into
pop
cmp
ds
gs
pushf
outsl
sahf
push
fisttps
flds
mov
jmp
out
clc
aad
ret
inc
xchg
push
mov
es
pushf
sti
push
in
aaa
cmpsl
ret
int
pop
mov
ret
and
jle
mov
jns
dec
cmp
pop
pusha
popa
jmp
sbb
push
push
push
je
jmp
repnz
lock
vdbpsadbw
out
mov
sbb
add
call
cltd
roll
add
cmp
call
push
add
add
xchg
pop
bound
call
pop
mov
or
daa
add
add
test
mov
es
mov
gs
jbe
stc
negb
popl
lea
jmp
inc
fimuls
or
cli
push
mov
xchg
adc
cmp
jp
in
imul
popa
icebp
nop
arpl
es
push
xchg
mov
jb
xchg
icebp
adc
push
or
shr
jecxz
mov
adc
lret
cmpsl
ret
sub
cmp
jle
in
sbb
movzbl
jmp
inc
lds
iret
and
cmpl
ljmp
pop
iret
pushl
jmp
and
mov
xchg
lock
popl
xchg
repnz
sbb
jb
popa
mov
jmp
mov
bound
adc
incl
mov
shlb
pop
aas
lret
jle
jmp
pop
inc
jmp
mov
fwait
roll
mov
mulb
pushf
outsl
les
popf
or
or
jmp
mov
jmp
inc
xlat
mov
out
roll
shll
ljmp
cwtl
decl
leave
jmp
aaa
cmpsl
ret
in
adc
imul
mov
mov
mov
cld
push
jne
sub
adc
dec
fistpll
push
xor
daa
and
lahf
push
jmp
push
jns
inc
pop
jmp
aam
push
add
jmp
in
sti
sahf
insl
mov
adcb
cmpb
scas
leave
cmp
sub
jmp
push
xchg
popf
pushl
jmp
js
xchg
cmc
add
pop
jecxz
push
in
push
adc
add
add
and
jb
mov
aam
push
lds
shrl
mov
and
call
jmp
mov
lcall
outsb
popf
dec
add
ret
ret
fwait
or
sub
mov
sub
leave
ret
jmp
sbb
push
sbb
addl
add
outsl
or
scas
mov
fwait
repz
lock
lret
test
sar
inc
adc
xchg
rorl
mov
jmp
adc
xor
pop
and
jl
adc
and
cmp
addl
mov
jmp
nop
or
inc
add
jmp
daa
je
jmp
rorl
mov
dec
sub
add
jle
cmpsb
cmp
push
shrb
ret
jmp
das
mov
inc
mov
in
call
outsb
cld
fwait
jbe
jbe
imul
adc
cmp
popa
jmp
adc
cmp
jmp
xchg
adc
in
sbb
les
mov
cwtl
decl
hlt
mov
stos
into
cmp
fs
mov
mov
mov
andb
sub
jo
mov
jmp
dec
jmp
jno
imul
push
js
xchg
testb
mov
ljmp
add
add
add
jmp
enter
ds
mov
jmp
lock
mov
pop
test
jmp
bnd
mov
inc
leave
pop
cmp
outsb
scas
daa
mov
and
mov
push
mov
jmp
mov
mov
inc
jmp
and
int3
inc
xlat
mov
call
push
mov
dec
fdivrs
and
stos
out
inc
jl
dec
and
jmp
clc
push
and
fisttps
mov
pusha
cli
lods
lea
jmp
frstor
rcll
pop
testl
aad
mov
out
les
int3
setae
mov
lods
xor
outsb
mulb
adc
mov
inc
mov
sub
nop
ja
int3
popf
add
or
xor
jne
mov
jmp
popl
jmp
rorb
incl
pushf
jmp
pusha
std
insl
hlt
pop
cmp
adc
dec
dec
pop
sub
add
jmp
lods
sub
lods
xor
les
int3
sub
insl
out
xchg
jmp
push
roll
shrl
in
lock
bound
inc
mov
add
jmp
popf
jmp
test
pushf
sti
push
in
mov
inc
mov
loop
clc
lahf
push
idivb
je
jbe
sbb
test
sti
lcall
add
add
add
add
jmp
ret
push
ret
cmpsb
push
hlt
mov
fwait
decb
mov
mov
mov
andb
sub
jmp
mov
jmp
and
inc
int
and
jb
jecxz
push
in
popf
xor
popa
mov
ret
cltd
mov
out
jmp
int3
sbb
add
add
test
mov
jmp
fwait
or
and
das
mov
xor
push
jl
mov
jmp
and
pushf
xor
or
shlb
sub
sub
add
xchg
popf
pushl
jmp
pop
push
xor
or
push
shlb
popl
jmp
mov
shl
js
mov
scas
xor
ret
ret
jmp
ret
inc
xlat
mov
xchg
and
testl
clc
lahf
push
das
lods
cmp
adc
push
jmp
cmp
inc
orb
decb
nop
arpl
push
test
shlb
xor
xor
test
jmp
rolb
add
jmp
mov
sub
push
mov
mov
xor
add
mov
jmp
dec
push
xor
cmp
xor
jle
ret
js
xlat
add
add
inc
daa
shlb
adc
xor
push
xor
jno
insb
or
shlb
mov
cmp
jmp
xchg
push
mov
es
fimuls
inc
mov
xor
movsb
push
je
jmp
repz
notb
mov
sbb
fldcw
sbbl
jne
addl
mov
jmp
out
pop
jmp
sub
pop
ljmp
ljmp
sbb
pop
jp
xor
lock
xorb
jmp
jmp
dec
fisttpl
fnstsw
adc
add
jle
movsl
xor
mov
jmp
lret
lods
pop
fcmovne
push
mov
inc
and
push
mov
lret
add
mov
mov
je
mov
cmp
je
add
mov
jmp
dec
iret
pop
cmp
aas
push
std
bound
jmp
pop
sahf
or
cmpsb
inc
gs
adc
pop
cmpsb
inc
push
repz
popl
push
or
mov
add
lret
dec
ret
sbbl
or
insb
mov
in
cld
xchg
push
or
fucomi
aad
add
loop
mov
add
add
roll
add
jmp
notl
mov
cs
enter
inc
movsb
cmp
jmp
scas
es
test
jmp
insl
loope
adc
inc
adc
inc
int
and
pop
dec
ret
ret
sbb
jmp
mov
jmp
push
xchg
or
sub
dec
fdivrl
fdivrs
mov
stos
data16
gs
push
push
mov
lret
jmp
movsl
xor
outsb
cld
fwait
jbe
inc
roll
shll
push
shll
mov
add
cltd
sub
mov
mov
mov
sar
mov
jmp
add
add
add
jmp
test
aaa
lods
and
push
sbb
out
adc
sbb
aad
push
mov
es
popf
add
or
pop
xchg
repnz
ror
sub
ja
popf
or
push
mov
es
fsubl
xchg
xchg
jg
and
test
jmp
mov
jmp
mov
jmp
enter
push
cmpb
or
repz
outsl
lcall
inc
inc
test
jne
jmp
mov
sbb
jmp
jne
jmp
jne
insl
hlt
pop
idivb
mov
inc
mov
idivb
mov
arpl
jmp
jmp
rorl
add
jmp
cmp
and
adc
mov
cmp
les
int3
imul
test
inc
inc
jmp
in
into
adc
mov
jmp
pop
mov
jmp
xorb
jmp
cmp
jmp
test
test
cmp
jecxz
pusha
notb
sbb
fsin
decl
push
or
cmp
jmp
mov
xchg
add
stos
cmp
mov
in
push
rcll
jbe
add
push
mov
mov
push
mov
add
dec
mov
mov
jmp
inc
shll
mov
and
xor
push
aaa
xchg
mov
add
jmp
pop
cmpsb
aaa
es
jmp
mov
scas
movsb
ret
ds
xchg
adc
mov
and
cmp
jmp
pop
iret
stos
pop
loopne
adc
xor
and
sbb
jge
mov
subb
push
add
mov
and
incl
jmp
xchg
imul
hlt
pop
rclb
fucomip
cmpsb
and
or
add
mov
lea
mov
jmp
dec
int
and
and
insl
xorl
jmp
leave
loopne
mov
jmp
stc
jl
jne
insb
dec
lret
pop
ds
cwtl
adc
ja
xorb
outsl
int3
jne
jmp
push
sbb
add
lcall
jmp
or
pop
rolb
rclb
xchg
cwtl
decl
lods
addr16
imul
dec
and
mov
jmp
jmp
ss
cmp
add
notb
sbb
and
in
jmp
jmp
mov
inc
sbb
jmp
ja
mov
jmp
dec
fdivl
in
push
push
xor
data16
pop
enter
mov
jne
jmp
imul
push
test
jge
dec
fwait
add
adc
or
mov
sbb
jmp
mov
jle
arpl
inc
fidivrl
adc
push
xchg
test
jmp
mov
jmp
stc
jns
mov
lahf
sbb
aad
int3
mov
mov
mov
int
cmp
je
test
jle
lea
jmp
jmp
loop
dec
leave
je
jmp
dec
mov
mov
jmp
ja
addr16
add
imul
sub
xor
popf
ljmp
add
push
jbe
loopne
cld
ret
iret
sbb
jmp
adc
or
sbb
aad
rol
fnstcw
bound
jl
push
std
jmp
hlt
adcb
jne
inc
inc
inc
inc
test
jne
jmp
sbb
inc
dec
lds
iret
cvtps2pi
adc
test
jmp
push
and
in
add
push
fdivl
in
imul
mov
mov
das
test
subl
decl
test
aam
pop
xchg
adc
mov
push
adcb
xorb
or
ret
dec
cli
pushl
ret
jmp
outsl
cmp
clc
jnp
jmp
mov
mov
es
mov
test
mov
xor
inc
daa
shlb
cmpsb
xor
scas
insl
imull
je
test
aad
in
mov
pop
mov
mov
add
jmp
adc
mov
sub
add
xchg
popf
pushl
jmp
pusha
jmp
popa
jmp
sbb
or
pop
leave
test
nop
fstps
scas
pop
mov
mov
mov
jmp
push
aad
sub
xor
adc
dec
adc
lock
jmp
mov
jmp
fistps
stos
sbb
into
test
xchg
adc
add
sar
inc
adc
fdivs
jmp
adc
adc
mov
dec
mov
mov
mov
jmp
mov
into
dec
lds
iret
ds
into
pop
cmp
jno
call
movzbl
add
cmp
je
jmp
xchg
sbb
xor
dec
stos
jmp
jecxz
loope
popl
jmp
sub
ss
mov
addr16
xor
out
pop
jns
insl
and
add
add
imul
loopne
jb
jp
js
ljmp
lea
jmp
push
lret
pop
ds
xchg
or
scas
cmp
mov
add
inc
mov
rorb
add
dec
jb
je
out
pop
loope
inc
cmp
jg
add
int3
pop
iret
stos
pop
rclb
cmp
adc
push
lret
mov
jne
addl
mov
jmp
or
jno
push
cmp
je
xor
ret
jmp
ljmp
jmp
pop
xchg
mov
lock
ja
inc
adc
jne
jmp
add
jmp
pusha
std
insl
hlt
pop
subb
mov
cmpsb
shll
sub
jno
add
ret
jmp
inc
in
test
cld
xchg
sub
jmp
lcall
jmp
pushl
jmp
pop
mov
fsubl
ja
loope
icebp
roll
jg
mov
enter
push
mov
loope
lods
es
fisttpll
cmp
jle
jmp
jmp
inc
mov
jmp
subl
std
or
lahf
adc
popl
xchg
repz
std
ret
movsl
push
repz
dec
popf
jmp
sti
cmp
pusha
decl
sbb
add
pop
jp
inc
insl
out
adc
sub
adc
adc
add
add
jmp
into
inc
mov
out
mov
jle
lcall
xchg
pop
bound
push
mov
or
jmp
rclb
push
hlt
aad
out
in
jmp
fmuls
mov
bound
xchg
lea
or
cwtl
pop
add
shll
add
lock
add
ret
push
shll
in
add
scas
add
add
jb
call
lret
pop
enter
push
xchg
cmc
add
aad
lcall
add
jmp
add
mov
mov
mov
jmp
outsl
mov
notl
push
outsb
sub
mov
add
dec
fisttpll
out
dec
mov
call
jmp
inc
shll
add
push
cs
sub
idivl
jmp
sub
faddl
mov
lds
ja
jmp
push
iret
pop
cmp
push
test
mov
movsl
xor
fdivl
in
push
mov
movzbl
jmp
addb
repnz
push
jg
sti
lea
jmp
lahf
pop
jne
pusha
pop
repnz
add
call
movzbl
add
cmp
je
jmp
dec
push
xor
cmp
jmp
sub
stc
jo
xorl
inc
addb
and
cs
dec
fistpll
inc
and
add
cmc
xor
outsb
or
pop
fldcw
daa
fmuls
ljmp
lods
lret
inc
out
in
push
jmp
push
dec
dec
fmuls
fdivs
push
mov
lret
imul
or
iret
in
or
and
or
pusha
and
add
in
sbb
and
add
pop
jp
xor
cs
or
mov
pushf
jmp
sbb
cmp
shr
jmp
dec
rolb
rclb
push
enter
sub
mov
js
arpl
inc
add
xor
fidivrl
sbb
xchg
adc
imul
insl
in
incl
test
inc
add
jmp
popa
loop
pop
loop
push
rolb
sarb
pop
cmp
push
push
mov
mov
shl
jmp
inc
inc
jmp
and
imul
and
aaa
sub
pop
jecxz
push
in
pop
jecxz
push
in
jge
outsl
or
repnz
enter
aam
fimuls
push
sub
xor
scas
pop
inc
jg
decl
jmp
jge
jne
jmp
testb
sbb
aad
rolb
aad
pusha
fisubrs
ljmp
pop
pusha
or
and
xchg
or
iret
in
jmp
cld
ljmp
pop
pusha
or
imul
adc
sub
loopne
push
inc
roll
aad
push
fisttpl
sub
cltd
adc
in
sbb
lahf
sub
add
in
add
addr16
imul
dec
xor
xor
cmp
sbb
jmp
int3
arpl
xchg
gs
jne
out
pop
xor
xor
or
mov
data16
inc
add
popl
jmp
lock
popf
insb
fistpl
inc
and
notl
push
popf
mov
jmp
ljmp
stc
in
ret
ret
shr
jmp
sbb
imull
lcall
fcomps
mov
dec
mov
inc
add
lods
xor
incl
jmp
repz
xorl
xchg
mov
jmp
inc
popl
jmp
movl
in
bound
call
xchg
sub
jne
addl
mov
jmp
movsb
and
aad
mov
add
add
mov
jmp
mov
jmp
cld
js
mov
enter
fs
jmp
in
push
dec
lret
pop
ds
fwait
adc
jge
je
popa
mov
mov
add
jmp
arpl
inc
popl
jmp
mov
scas
lret
loop
loop
je
and
fistpll
data16
sub
jmp
xchg
sbb
insb
or
mov
pop
mov
sub
idivl
popf
jmp
std
cmp
lds
mov
lcall
add
and
and
xor
jge
inc
shll
les
in
out
jo
dec
jge
hlt
push
popl
pop
mov
jg
sub
cli
cmp
pop
cmp
pusha
pop
repnz
add
mov
inc
jmp
enter
push
mov
pop
jp
adc
scas
cmp
mov
popa
sub
mov
jmp
addl
jmp
das
mov
inc
mov
jbe
imul
adc
mov
rclb
mov
sub
cld
rep
pop
pop
jmp
ret
mov
pop
ds
addl
shll
jne
jmp
sbb
add
jg
mov
jmp
repz
cmpl
aaa
cmpsl
ret
int
aam
dec
lods
fcoml
pop
mov
add
add
mov
jmp
test
and
loopne
add
jmp
int
shll
shlb
mov
jmp
movsb
gs
push
add
xor
add
jmp
push
fimull
ficompl
jl
addr16
pop
jb
jbe
loopne
test
clc
pushf
mov
mov
jmp
mov
mov
das
test
mov
or
xor
or
jns
jmp
ljmp
jl
rclb
jmp
push
cbtw
cwtl
mov
jmp
push
les
int3
gs
rclb
ja
inc
shll
or
pop
or
mov
jmp
pushf
jmp
jl
inc
add
pop
jmp
nop
mov
mov
gs
pushf
outsl
test
and
mov
jmp
nop
and
jg
mov
in
call
inc
aam
dec
xchg
inc
fidivrl
mov
jmp
mov
jmp
mov
cwtl
decl
loop
xor
aam
sub
mov
push
inc
mov
jmp
iret
mov
jmp
lock
mov
mov
jge
outsb
or
adc
dec
frstor
fildl
add
mov
decl
adcl
roll
aad
and
jl
mov
inc
mov
add
jmp
pop
inc
and
jns
adcl
rolb
rclb
sahf
adc
pop
xor
popa
ret
mov
jmp
pusha
add
jmp
ret
jmp
pop
fwait
or
sub
je
jo
jbe
loopne
dec
cs
push
call
jl
arpl
cmc
pop
test
xchg
mov
jmp
lea
mov
sbb
dec
rolb
dec
sti
push
shlb
sti
fldl
add
fs
dec
pop
lret
scas
pop
cwtl
inc
fmuls
fdivrs
cmp
or
jmp
adcl
test
inc
shll
popf
in
xchg
pop
sti
pop
push
call
cmp
roll
call
push
jmp
into
dec
ret
popf
push
xchg
add
jnp
jl
jne
insb
push
jb
fnstenv
inc
adc
sti
je
add
jmp
cmpsl
jp
sbb
popf
jmp
mov
jmp
jne
push
cld
sbb
push
xor
xor
addr16
sub
add
adc
jmp
fnstcw
lahf
cli
or
enter
inc
and
jmp
stos
out
pushl
jmp
in
data16
xchg
outsb
popf
push
mov
jle
imul
jmp
lret
push
enter
jmp
ja
insb
or
cmc
loopne
cld
fwait
jbe
pop
rolb
rolb
repz
cmc
xor
inc
inc
outsl
and
xor
pusha
or
or
or
pusha
or
or
adc
pusha
or
or
or
or
pusha
or
adc
outsl
or
or
jo
idiv
decl
or
or
or
or
pusha
or
adc
or
adc
in
add
pop
in
sbb
pusha
or
or
or
pusha
or
pusha
or
pusha
or
pusha
or
clc
popf
or
pop
pusha
or
outsl
sbb
ljmp
pop
pusha
or
imul
adc
add
mull
inc
or
andb
sub
jo
mov
jmp
cmp
jmp
xor
push
lds
in
je
xor
cwtl
rolb
mov
repz
and
jmp
cmp
sbb
jo
and
push
xor
addr16
jns
jmp
xchg
add
popa
mov
ret
jp
jbe
loopne
inc
lahf
orl
add
pop
or
jl
xchg
add
and
mov
aam
out
cmpl
jns
psubsw
cwtl
imul
mov
xchg
add
orl
add
add
jmp
jge
sti
adcl
test
stc
fwait
xchg
outsl
xor
lock
jmp
in
lock
bound
popf
outsb
cmp
xchg
add
sahf
insl
lahf
pop
daa
imul
adc
pusha
jmp
lods
cmc
push
push
add
inc
je
popa
mov
jmp
add
push
lea
sbb
jmp
pop
cmp
popl
jmp
xor
scas
aas
pop
test
jp
mov
not
pusha
adc
add
add
outsl
and
add
and
mov
clc
mov
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
imul
add
loop
notl
mov
test
pop
test
rcll
lods
pop
mov
enter
lods
mov
mov
loop
pop
loop
cmp
orl
pop
fisttpl
fnstsw
rcrl
test
daa
inc
mov
arpl
cmc
daa
pop
xchg
add
push
xchg
sbb
in
bound
mov
and
push
mov
mov
fdivrl
mov
data16
xchg
outsb
fldcw
mov
fiadds
dec
jne
jl
notb
cmp
add
push
lret
fcmovnbe
push
ret
cmpsb
push
aam
fwait
or
push
sbb
sub
pop
mov
sahf
stc
or
xlat
inc
add
add
mov
pop
imulb
outsl
adc
add
add
outsl
add
or
dec
pusha
or
outsl
add
pusha
or
dec
pusha
or
adc
jo
add
add
xchg
or
les
xchg
xor
pop
pusha
or
pusha
or
mov
or
iret
mov
scas
lret
adcl
jmp
push
push
xor
data16
xchg
pusha
rorb
mov
dec
lods
lods
lret
inc
lock
lods
pop
hlt
dec
fisttpll
out
mov
insl
add
mov
incl
cmp
mov
mov
jmp
jns
jle
call
or
dec
pop
leave
pop
cmp
pusha
roll
test
adc
sbb
mov
aad
or
iret
mov
push
add
lds
jmp
nop
add
std
or
pop
roll
aad
rorl
mov
xor
lret
sbb
mov
add
dec
fisttpl
fnstsw
rorl
mov
out
mov
cmc
fistpl
imul
sbb
push
lret
fcomi
cmc
or
faddp
outsl
adc
xor
pusha
or
or
or
pusha
or
or
adc
pusha
or
or
or
or
pusha
or
adc
outsl
or
or
jo
idiv
decl
or
or
or
or
pusha
or
adc
or
adc
in
add
pop
in
sbb
or
cmp
or
imul
or
or
std
add
jmp
and
mov
scas
insl
repz
cmc
sbb
mov
add
mov
mov
jmp
jne
popa
add
setg
mov
sbb
mov
mov
in
jge
negl
int
out
jg
jmp
loop
sti
inc
int3
inc
and
movsb
ret
ds
and
push
cs
lods
lret
inc
loope
jns
mov
in
in
jg
test
mov
sbb
nop
arpl
mov
mov
pop
int3
stos
iretw
dec
fldt
icebp
popa
add
push
mov
mov
push
lret
mov
ljmp
fiadds
mov
mov
mov
out
sub
or
iret
add
imul
or
iret
fcomps
scas
pop
xchg
inc
push
xor
daa
out
outsb
cld
fwait
jbe
movsl
xor
pop
jp
imul
jb
leave
pop
cmp
cmp
or
sub
mov
loopne
cltd
push
mov
xchg
repnz
and
jnp
gs
aas
outsb
loope
adc
inc
adcb
loope
cmpsb
adcl
loope
mov
adc
test
mov
sbb
int3
aas
or
enter
jg
add
push
mov
jno
jecxz
cld
fs
popf
insb
xchg
lods
xor
jae
bound
test
sbb
push
nop
pop
xchg
adc
addr16
jo
add
add
pop
pusha
add
and
add
or
or
or
pusha
or
add
jo
or
add
or
or
or
or
pusha
or
adc
outsl
or
or
jo
idiv
decl
or
or
or
or
pusha
or
adc
or
adc
in
add
pop
in
sbb
pusha
or
outsl
or
or
pusha
or
pusha
or
pusha
or
mov
or
xchg
gs
pop
fimull
fimull
loopne
push
cltd
or
jno
pusha
notb
js
ljmp
dec
cmp
mov
cltd
in
lock
bound
mov
call
int3
sub
mov
mov
test
jle
jge
negl
mov
and
xor
repz
mov
aad
subl
sub
js
cmp
mov
cmpsb
add
dec
push
leave
pop
cmp
and
inc
and
pop
push
leave
pop
cmp
dec
sbb
int3
dec
frstor
shll
mov
stos
int
fnstcw
insb
or
clc
jecxz
cli
popf
insb
mov
push
sarb
xor
scas
pushf
or
iret
add
imul
or
iret
jp
push
add
pop
pusha
or
outsl
xor
pusha
or
outsl
or
or
pop
jo
or
add
or
outsl
or
dec
pusha
or
pusha
or
outsl
or
ljmp
pusha
or
outsl
or
or
pop
pusha
or
pusha
or
add
pop
in
sbb
or
cmp
or
imul
adc
add
js
pusha
pop
repnz
icebp
jge
imul
pop
sub
jle
add
push
dec
lret
pop
ds
outsl
loope
adc
and
push
lock
inc
fs
gs
push
xchg
or
mov
mulb
xchg
pusha
rorb
dec
sub
jno
sti
imul
dec
aad
mov
out
jmp
mov
and
movsb
ret
ds
sub
stos
cmp
sub
rorl
add
pop
jns
push
rcll
sub
ret
jb
in
rcll
pop
mov
in
or
add
add
pusha
adc
jo
add
add
xchg
or
les
xchg
adc
pop
pusha
or
or
mov
imul
adc
add
imul
scas
pushf
or
iret
fcomps
fs
insb
out
jg
jmp
psubd
outsb
jmp
push
in
or
inc
aad
dec
test
pop
stos
or
jbe
outsl
or
rcrl
fidivs
xchg
testb
mov
dec
fstpt
cltd
push
push
mov
in
cmpsb
sub
xor
stc
imul
mov
daa
mov
and
popa
ljmp
stc
in
outsb
cmc
gs
adc
jl
dec
fisttpl
fstpl
loope
jae
sahf
and
xchg
pop
bound
pop
repnz
cmpsb
and
pop
int3
stos
data16
sub
mov
jns
pusha
or
jle
fmuls
fdivrs
jbe
insb
or
loop
pusha
notb
scas
lret
leave
inc
aam
dec
lcall
mov
adc
inc
imul
or
iret
gs
gs
dec
les
lods
pop
hlt
push
dec
aas
scas
cmp
mov
jb
jp
in
pop
sub
sub
adc
push
pop
roll
aad
lock
lahf
push
sub
and
aaa
cmpsl
ret
out
jne
mov
xor
sbb
adc
push
movb
test
leave
mov
scas
rclb
mov
sbb
jne
ja
xorb
dec
fstpt
loop
je
dec
lds
iret
les
movsb
push
mov
cmp
pop
iret
stos
pop
xchg
jl
pusha
pop
repnz
mov
ljmp
stc
je
lea
test
jge
cmp
imul
jle
call
inc
mov
iret
sbb
add
or
iret
hlt
lock
rorb
lret
pop
int
shlb
jnp
in
dec
aam
ja
outsl
adc
xor
lcall
and
add
add
outsl
and
add
imul
imul
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
js
jo
loop
jmp
out
jo
mov
mov
and
xchg
add
xor
xchg
add
sub
inc
lds
iret
and
aad
hlt
jb
xchg
inc
push
xor
sbb
inc
and
sub
jne
mov
lds
movsb
push
cmpsb
jo
imul
fwait
decb
push
push
push
fstpt
pushf
xor
jo
xchg
jb
dec
cmpsb
sub
push
in
jle
mov
jp
dec
fimuls
dec
inc
fisttpl
fisttpll
out
setns
push
jl
notb
lea
dec
ret
mov
rolb
sarb
ja
jl
negb
inc
jecxz
push
in
aas
mov
mov
mov
icebp
popa
add
sbb
xor
dec
mov
inc
mov
add
cmpsb
or
iret
sti
adcl
test
dec
fstpt
push
xor
xor
mov
jge
je
jbe
mulb
sbb
or
jo
outsl
or
hlt
jo
xorl
jp
pop
cltd
or
pop
rorl
repz
aad
sub
imul
in
je
sub
cmp
xchg
or
xor
mov
adc
dec
mov
mov
ret
ret
stos
cmp
imul
testb
subl
inc
sub
pop
out
out
mov
mov
cltd
clc
or
or
icebp
ja
xorb
movsl
xor
ret
ret
or
arpl
xchg
gs
xchg
nop
testl
xchg
pusha
mov
shll
lcall
test
dec
sub
jle
sahf
or
cmpsb
jb
xchg
jb
dec
loope
loop
je
mov
or
outsl
sbb
add
pusha
adc
pushf
or
iret
inc
roll
shll
or
mov
test
mov
sbb
lods
pop
out
jmp
adc
sub
mov
dec
out
mov
in
sbb
divb
xchg
int3
push
lret
mov
lods
lret
inc
scas
lock
cld
fwait
jbe
mov
test
pop
xchg
mov
leave
dec
fistpll
pushf
sti
push
repz
dec
fidivrs
adc
push
cmp
pop
int
lea
mov
popa
ljmp
add
jbe
std
insl
hlt
pop
idivb
mov
inc
mov
xchg
sahf
stc
or
ret
mov
aaa
push
mov
mov
jg
bound
stc
cwtl
imul
cmp
xor
jg
mov
sub
test
jge
sub
test
pop
test
movsl
lods
lret
inc
movsb
mov
test
notl
inc
fisttps
mov
mov
push
mov
and
fstl
sub
xor
mov
adcl
enter
ss
pop
xchg
adc
inc
rcll
xor
dec
frstor
lods
pop
scas
insl
out
adc
or
sub
imul
adc
add
imul
or
iret
jne
and
cld
ljmp
pop
pusha
add
and
xchg
or
imul
or
iret
add
add
mov
fisttpll
out
and
inc
lret
lret
or
call
lahf
adc
sub
lret
pop
into
test
cs
mov
popa
nop
cmp
mov
lds
test
cmp
cmpsl
inc
shll
dec
das
fidivrl
cmp
mov
mov
mov
and
push
lds
mov
adc
into
pop
cmp
sbb
sub
push
inc
lds
iret
sbb
jg
mov
in
push
pop
aad
sub
adc
scas
es
cs
mov
xchg
or
cmp
jle
mov
add
xchg
pop
ds
dec
mov
int3
aas
lcall
mov
lcall
xchg
add
xor
je
sub
test
mov
sbb
test
adc
lcall
shlb
jle
call
push
aam
outsl
xor
pusha
add
add
outsl
add
or
add
pusha
or
add
add
pusha
or
add
or
pusha
adc
imul
mov
inc
mov
add
adc
stos
cmp
inc
jne
bound
inc
and
push
lods
xor
arpl
xchg
gs
and
inc
fistpl
test
mov
loopne
adc
add
cmp
jl
jne
push
mov
movsb
ret
ds
rclb
lods
pop
mov
sahf
or
cmpsb
push
icebp
jp
jp
dec
rcll
and
cmpsl
pop
adc
xor
pusha
or
outsl
or
or
pop
jo
or
add
or
outsl
or
dec
pusha
or
pusha
or
outsl
or
ljmp
pusha
or
outsl
or
or
pop
pusha
or
pusha
or
add
pop
in
sbb
pusha
or
outsl
or
or
pusha
or
pusha
or
pusha
or
cmpsl
or
pop
pusha
or
movsl
sub
lds
idivb
mov
jno
insb
or
sarb
mov
inc
mov
sbb
inc
aam
sub
adc
mov
pop
lea
jmp
push
in
inc
push
enter
addr16
ljmp
out
adc
dec
int3
push
les
xlat
mov
lods
mov
lret
lods
cmp
fistpl
jbe
cmpl
lea
xor
int
aam
dec
frstor
std
or
lret
movsl
push
stos
dec
roll
aad
mov
cmpsl
ret
cli
jge
je
insl
and
ss
push
lds
sub
cmp
dec
push
popf
or
and
add
js
lds
andb
sub
jo
mov
jmp
sbb
lcall
dec
adc
push
xor
rcll
push
out
stos
cmp
mov
lcall
cmp
xor
and
cmp
dec
aam
sub
mov
and
mov
ret
clc
lahf
push
addl
repnz
push
rolb
sarb
cmp
push
xor
hlt
xchg
outsb
mov
daa
shrb
notl
rcrl
scas
pop
scas
fs
adc
pop
xor
and
push
push
sahf
or
cmpsb
inc
js
addr16
or
and
pop
fisttpl
fisttpll
xchg
sbb
lret
lret
or
dec
frstor
push
movsb
adc
outsl
ja
ja
loope
dec
fimuls
dec
dec
fmuls
fsubrs
xchg
add
sahf
cmp
scas
lods
or
iret
mov
xchg
adc
mov
mov
add
xor
imul
add
sbb
pusha
add
imul
ja
xorb
test
pop
test
das
mov
inc
mov
mov
cwtl
decl
ret
call
orl
decl
out
push
inc
and
and
inc
and
or
push
imul
jbe
cmpl
jns
mov
aad
repz
xchg
push
std
or
push
xor
imul
test
mov
loope
loop
je
jns
jns
jmp
out
adcl
test
or
je
jnp
in
inc
pop
xchg
pop
bound
jae
daa
push
ret
ret
adc
adcl
mov
dec
mov
jno
push
pop
xchg
repnz
fiadds
mov
jb
arpl
cmc
je
mov
or
ret
inc
shll
push
jno
divb
xorl
mov
repnz
hlt
ja
xorb
cmp
sub
pusha
sbb
bound
jmp
push
in
or
dec
sub
cmp
inc
pop
xor
xor
ljmp
pop
pusha
add
and
lods
or
iret
mov
rorl
cmpsl
pop
adc
cld
ljmp
pop
pusha
or
and
lods
or
iret
rorb
push
icebp
popl
xchg
icebp
add
hlt
js
mov
cmp
lret
lret
xor
push
shll
mov
dec
adc
push
adc
adc
sub
jg
jmp
out
sbb
add
js
jno
jecxz
or
or
jbe
stc
imul
xchg
cmc
add
iret
push
mov
iret
stos
pop
scas
and
aam
lret
mov
mov
gs
jno
pop
rolb
dec
lcall
imul
push
fdivl
in
adc
icebp
jg
mov
add
jmp
sti
sahf
insl
int3
lods
and
mov
dec
mov
push
mov
sti
push
mov
mov
pop
roll
aad
scas
cmp
inc
lods
popl
adc
jo
add
add
pop
pusha
add
and
lods
or
iret
push
in
or
cld
ljmp
pop
pusha
or
imul
imul
cmpsl
pop
adc
xor
outsl
sub
outsl
add
sbb
sbb
outsl
adc
imul
or
iret
test
testl
cmp
add
lock
vpunpcklwd
nop
arpl
mov
pop
push
xor
and
mov
inc
mov
inc
fmuls
fcomps
inc
fidivrl
shlb
pop
and
cmp
sub
sub
enter
push
test
sub
ret
push
lds
mov
ret
out
fs
popf
insb
lahf
out
jecxz
jne
pushl
mov
aas
mov
inc
mov
push
cmc
push
or
pop
int
cmpsl
cmp
daa
inc
mov
test
test
push
test
mull
icebp
push
das
mov
dec
fisttpll
out
arpl
imul
dec
lock
pushf
outsl
scas
pop
in
jmp
in
mov
in
adc
je
bound
dec
sub
cmove
adc
gs
adc
ljmp
stc
xor
cltd
push
lcall
negl
lea
dec
fidivrs
jmp
sti
imul
sub
or
sbb
dec
fistpll
popf
in
imul
lock
bound
xchg
pusha
xor
push
lds
stc
cwtl
imul
mov
pop
enter
jns
jns
jmp
or
xchg
or
sub
lds
test
inc
rolb
sarb
inc
shll
shlb
adc
mov
push
mov
push
xor
sub
dec
sub
cmp
mov
leave
push
les
add
pop
mov
shl
popa
icebp
nop
arpl
jmp
jl
push
into
pop
cmp
add
jge
je
jo
push
mov
pop
ds
idivl
test
imul
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
or
xor
call
leave
sbb
fmuls
fcomps
mov
lcall
fwait
or
cmp
cmp
mov
xchg
and
mov
mov
test
xchg
add
xor
setg
or
imul
add
adc
lcall
fdivrs
mov
loop
ljmp
ljmp
pop
pusha
add
imul
lret
scas
pop
fsubl
in
out
adc
push
cltd
outsl
adc
sub
push
add
add
popf
or
les
mov
jns
pusha
or
or
xchg
or
imul
adc
add
add
mov
gs
push
jge
je
push
lods
sub
test
inc
leave
pop
cmp
cmp
xchg
testb
push
mov
jo
xorl
push
mov
add
xor
add
scas
aas
mov
inc
mov
sub
push
les
shlb
push
jno
xor
dec
fisttps
fsts
jmp
xchg
or
aas
scas
lret
pop
popf
or
xchg
jb
addr16
fisttps
fldenv
and
xchg
std
or
fwait
sbb
in
sbb
add
add
pop
int
addr16
aam
lret
scas
pop
mov
into
xor
popa
icebp
nop
arpl
adc
pop
fimull
fidivl
and
xor
mov
fidivrl
iret
idivl
mov
xor
jle
xor
cld
ljmp
pop
pusha
or
and
cmpsl
or
iret
pop
xlat
inc
and
sbb
cmp
jne
xor
push
xor
enterw
pop
jmp
push
cli
out
out
jo
in
loopne
jb
je
outsl
and
add
add
outsl
sbb
or
inc
mov
adc
mulb
dec
cmp
lods
xor
jecxz
out
mov
fadds
mov
stos
adc
add
jnp
push
adc
or
dec
sahf
fwait
sbb
sbb
roll
shll
aas
lea
cwtl
decl
frstor
cmpsb
xor
scas
pop
jmp
cld
fwait
jbe
out
loop
je
dec
les
int3
fsts
mov
jno
jecxz
inc
iret
pop
cmp
jo
ret
ret
jne
mov
add
pop
roll
aad
dec
fdivl
in
dec
fdivl
in
aam
fstpt
xchg
cld
movswl
dec
ret
std
add
inc
xlat
mov
call
jecxz
sbb
adc
roll
sarl
lods
cmp
push
les
adc
push
mov
call
sub
jo
add
add
pop
pusha
add
imul
or
iret
imul
js
push
cwtl
sti
outsl
adc
add
add
add
sbb
add
imul
adc
addl
dec
enter
mov
pushf
sti
push
shl
cli
popf
insb
cltd
movsl
and
add
fimuls
add
rolb
shlb
addr16
pusha
pop
repnz
ss
jb
xchg
int
mov
out
insl
std
test
daa
mov
dec
mov
fwait
jbe
push
les
int3
and
mov
push
lcall
cs
mov
inc
mov
mov
pop
cmp
es
mov
sbb
push
nop
or
cmc
jne
mov
les
mov
mov
cmp
mov
mov
mov
in
icebp
nop
arpl
test
test
movsb
ret
ds
loope
adc
add
dec
fidivrs
loopne
jb
pop
roll
shll
pusha
notb
xchg
rcl
imul
pop
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
xor
leave
leave
push
fs
sbb
add
add
pop
pusha
or
and
lcall
push
cmpsl
add
mov
inc
mov
repnz
outsb
cld
fwait
jbe
mov
cwtl
and
icebp
data16
xchg
outsb
movl
and
xchg
xor
dec
sbb
push
mov
loopne
mov
or
iret
adc
outsl
and
jo
add
add
lcall
lods
sbbl
imul
adc
sbbl
mov
jmp
jge
fmull
outsl
adc
cld
ljmp
pop
pusha
or
imul
or
iret
mov
test
push
cltd
test
mov
adc
movl
adcl
test
gs
pushf
outsl
xchg
mov
stc
test
xchg
repnz
testl
sub
add
or
or
or
pusha
or
dec
pusha
or
outsl
add
pusha
or
dec
pusha
or
adc
jo
add
add
mov
adc
jo
stos
xor
pop
pusha
or
push
mov
xchg
add
jns
data16
xchg
outsb
popf
icebp
jp
jp
iret
inc
aad
dec
test
mov
scas
and
es
cs
inc
leave
pop
cmp
or
pop
ds
stos
cmp
or
sub
jb
sbb
out
jg
jmp
mov
out
adcl
in
sbb
sbb
dec
add
mov
lret
fnstcw
inc
daa
rclb
mov
inc
mov
fcompl
stos
scas
loopne
icebp
nop
arpl
jp
lods
sub
lds
dec
leave
pop
cmp
aaa
sub
or
rorb
dec
mov
pop
scas
aas
jno
jbe
push
pusha
sbb
add
add
outsl
and
or
imul
adc
inc
int
and
aaa
sbb
xchg
push
mov
es
daa
mov
and
lcall
mov
add
push
pusha
repnz
pop
repnz
adc
inc
fisttpl
movsb
cmp
add
add
or
push
jecxz
dec
ret
repz
in
add
xchg
or
mov
leave
pop
ret
ret
mov
outsb
in
bound
dec
sub
push
ss
inc
mov
dec
mov
xor
aas
loope
hlt
xchg
outsb
mov
addr16
mov
shlb
imul
cmp
mov
jnp
popa
add
adc
jle
sub
push
fisttpl
pop
ffreep
dec
fidivrs
ss
mov
push
scas
pop
cmp
jb
jno
jecxz
fwait
adc
imul
and
xchg
add
std
insl
hlt
pop
mov
mov
dec
mov
testl
mov
ja
jge
negl
mov
lds
mov
sahf
sbb
push
cmp
add
imul
dec
fstpt
xchg
lock
inc
les
int3
xor
inc
es
lahf
sbb
mov
aam
int3
stos
xchg
stos
and
and
jmp
push
in
sbb
inc
fidivrl
stos
into
cmp
pop
stos
imul
or
outsl
sbb
pusha
or
pusha
adc
inc
mov
adc
dec
push
xor
push
insl
fldl
mov
inc
idiv
jae
xchg
mov
test
movsl
xor
and
xor
icebp
popa
add
xor
mov
jns
push
or
dec
popf
mov
sub
clc
adc
sbb
pusha
or
imul
add
sub
in
jb
xchg
sub
jl
lcall
jbe
loopne
mov
and
negb
das
fisubl
inc
shll
ds
test
xor
pop
mov
shll
into
test
daa
inc
mov
push
jno
jecxz
xchg
sbb
dec
les
int3
sbb
ss
mov
dec
mov
add
inc
push
mov
out
jge
je
xor
cmp
jbe
cmpl
sub
lret
lret
in
sbb
dec
cltd
add
add
in
bound
add
jl
mulb
jns
cmpsl
aaa
push
mov
adc
es
cmp
in
je
insl
xchg
mov
cwtl
decl
hlt
fisubl
xchg
gs
sbb
outsl
and
adc
add
outsl
or
dec
pusha
or
pop
jo
or
add
or
outsl
or
dec
pusha
or
pusha
or
outsl
or
ljmp
pusha
or
outsl
or
or
pop
pusha
or
pusha
add
add
add
and
imul
or
iret
sub
adc
add
push
mov
es
cmp
mov
orb
clc
or
cwtl
push
test
push
mov
js
ljmpw
mov
xchg
pop
lret
scas
pop
in
dec
fisttpll
out
jmp
jmp
xchg
add
cmp
repnz
insl
ret
add
and
outsl
and
cld
ljmp
pop
pusha
add
and
mov
push
scas
pop
imul
add
add
outsl
and
pusha
add
outsl
sub
or
outsl
or
or
pusha
or
or
adc
pusha
or
or
or
or
pusha
or
adc
outsl
or
or
jo
idiv
decl
or
or
or
or
pusha
or
adc
or
adc
in
add
pop
in
sbb
or
cmp
or
imul
or
pop
pusha
add
xchg
and
hlt
xchg
outsb
lods
or
jl
mov
or
inc
fisttpll
out
out
out
mov
rcll
mov
mov
and
pop
xchg
mov
int
and
sub
ljmp
mov
lahf
cli
or
movsl
sub
icebp
jp
jp
mov
fisttps
adc
rorb
push
subl
outsb
mov
xchg
addr16
imul
dec
dec
jmp
push
imul
pop
adc
and
das
mov
mov
imul
or
iret
lret
scas
pop
jmp
clc
outsb
or
push
data16
inc
mov
aad
fsts
cmpsb
push
in
enter
outsl
cmp
jbe
arpl
cmc
adc
jnp
mov
pop
les
int3
and
fwait
or
sbb
fwait
or
sbb
sub
out
jg
jmp
pop
stos
inc
pushf
and
pushf
xor
pop
sub
xlat
push
shll
pop
lods
inc
dec
lds
iret
ds
inc
mov
mov
fcompl
scas
pop
test
jno
xorb
inc
xlat
mov
fwait
push
fimuls
and
lcall
sub
jo
je
lea
dec
fdivrs
adc
mov
xor
jae
jp
in
inc
xor
or
cltd
add
xor
jp
jo
loop
and
pop
pop
jp
adc
imul
or
iret
add
imul
or
iret
icebp
outsb
cld
fwait
jbe
sub
cli
jg
mov
jge
movl
push
pushf
sti
push
call
out
lahf
sbb
iret
pop
cmp
aas
mov
int
outsb
cld
fwait
jbe
adc
jb
imul
pop
cmp
jno
js
mov
lods
aad
in
jo
add
add
pop
pusha
add
adc
or
outsl
or
or
pusha
or
or
adc
pusha
or
or
or
or
pusha
or
adc
outsl
or
or
jo
idiv
decl
or
or
or
or
pusha
or
adc
or
adc
in
add
pop
in
sbb
pusha
or
or
or
pusha
or
pusha
or
pusha
or
pusha
or
stc
ret
pop
pusha
or
ss
lret
mov
out
jo
xor
push
les
mov
xchg
xchg
cmc
add
push
ret
ret
mulb
dec
push
cltd
or
ds
fistpl
pop
ret
ret
test
jo
xorl
call
or
jle
aam
sub
inc
and
cmp
repnz
lret
lret
sahf
or
cmpsb
pop
mov
cli
in
outsl
lcall
mov
mov
rcrb
test
mov
ja
or
xor
dec
fdivrl
cs
or
iret
inc
rolb
shlb
out
jl
notb
inc
aam
dec
lea
push
cld
push
push
sahf
or
cmpsb
dec
cmp
inc
cltd
add
mov
test
or
push
roll
sarl
jge
lods
cmp
cmp
jne
pusha
pop
repnz
cs
push
les
ret
cmpsl
addr16
bound
inc
and
cmp
xchg
jb
jl
inc
fidivrl
and
mov
inc
mov
jl
sub
fwait
or
sub
push
scas
outsb
cld
fwait
jbe
data16
gs
push
sub
lock
lret
arpl
gs
dec
loopne
jmp
jge
mov
in
cs
cmp
cmp
inc
fldl
mov
cmp
xor
fistpl
stos
pop
scas
int3
dec
frstor
std
or
fbstp
adc
inc
out
stc
cwtl
imul
mov
xchg
add
test
in
sbb
mov
mov
sbb
popf
sub
push
clc
outsb
or
dec
out
loope
jae
push
lret
lret
add
pop
iret
stos
pop
lea
xlat
test
mov
sbb
xchg
push
ficomps
lods
mov
lods
jne
imul
adc
rcll
loope
mov
dec
mov
loopne
in
cmpsl
aaa
push
mov
or
in
or
or
or
pusha
adc
imul
or
iret
iret
dec
fstpt
and
notb
clc
outsl
and
lock
sbb
pusha
add
imul
and
push
fisttpll
out
imul
or
iret
add
imul
adc
imul
adc
pop
rolb
shlb
out
jg
jmp
fwait
jbe
pop
int
xchg
jl
in
add
or
outsl
and
pusha
or
xor
or
iret
cwtl
sbb
dec
frstor
jns
and
je
out
pop
add
jmp
adc
xor
inc
shlb
mov
and
loope
mov
mov
dec
mov
xor
and
outsl
lcall
xchg
cmc
add
pop
push
xor
dec
sti
fs
popf
insb
jmp
push
shll
in
std
push
xchg
add
sahf
jbe
cmp
mov
mov
xor
in
push
lahf
push
cmp
aam
mov
push
jno
jae
or
fcoml
pop
mov
xor
shll
cld
jno
xorb
or
adc
sti
outsl
lcall
cltd
push
xorb
mov
push
adcb
xorb
dec
frstor
imul
sub
in
pusha
ret
dec
mov
add
rorl
iret
mov
fldt
sub
push
rorb
mov
xor
and
fstpl
mov
das
mov
pop
int
lea
mov
js
mov
and
jne
sub
lds
jo
imul
adc
mov
imul
mov
mov
xchg
lock
nop
cmp
imul
add
leave
or
iret
test
add
add
pop
pusha
or
adc
add
pusha
sbb
lret
iret
sbb
test
rcl
pop
int3
stos
rclw
adcl
ret
movsb
push
repnz
subb
psubd
int
and
fs
push
shlb
dec
mov
sbb
inc
xor
mov
mov
and
lcall
cltd
inc
cmpsl
cmp
jmp
cwtl
jmp
jmp
jge
xor
das
mov
inc
mov
hlt
jne
mov
and
dec
int
and
xor
movsl
xor
rcll
push
bnd
cmpl
jne
mov
sbb
add
pop
popf
or
stos
cmp
pop
mov
scas
lret
xchg
pop
sbb
test
lahf
cli
or
jno
adc
out
jge
je
xor
test
adc
sub
add
outsl
or
dec
pusha
or
pop
jo
or
add
or
outsl
or
dec
pusha
or
pusha
or
outsl
or
ljmp
pusha
or
outsl
or
or
pop
pusha
or
pusha
or
add
add
fwait
or
les
jbe
pop
pop
pusha
or
pusha
or
add
pop
in
sbb
pusha
or
outsl
or
or
pusha
or
pusha
or
pusha
or
mov
or
adc
les
cmpsl
push
loopne
jl
jne
sub
mov
sub
jle
cmp
inc
fidivrl
lahf
cli
or
push
popf
or
cmp
mov
stos
das
mov
std
insl
hlt
pop
in
xchg
adc
in
sbb
rcll
mov
ljmp
ret
hlt
jo
xorl
rorb
dec
mov
mov
int3
aas
flds
add
pusha
jecxz
jecxz
jne
aas
mov
inc
mov
mov
repz
outsl
sub
add
outsl
add
add
pusha
add
add
adc
pusha
add
add
add
add
pusha
add
adc
outsl
add
add
jo
idiv
decl
add
add
add
add
pusha
add
adc
add
adc
in
add
pop
in
sbb
or
cmp
or
imul
adc
or
gs
es
dec
mov
std
or
mov
xchg
pusha
pop
repnz
cmp
xlat
inc
mov
jmp
push
in
xor
mov
and
rcll
and
aaa
dec
fisttpl
fnsave
repz
lahf
push
pop
into
test
adc
xor
addl
cmp
cmpsb
and
ret
mov
test
cmp
xchg
adc
outsl
lcall
jbe
loopne
rcrl
scas
pop
mov
adc
icebp
js
mov
ds
inc
mov
mov
out
inc
roll
aad
bnd
je
and
inc
shll
xchg
cmc
add
lret
scas
pop
jmp
lea
push
lret
out
mov
popf
cmp
outsl
xor
clc
adc
sbb
pusha
or
add
add
mov
popa
jbe
pop
pusha
add
add
lds
adc
mov
andl
cmc
gs
les
xchg
xchg
xchg
add
jnp
mov
or
sub
cltd
sbb
xchg
or
je
push
mov
fs
sbb
inc
mov
mov
stos
jge
mov
inc
mov
int3
dec
fistpll
cltd
clc
or
mov
fnstsw
mov
dec
mov
imul
mov
pop
aam
sub
stos
int
fwait
pop
into
pop
cmp
pusha
pop
imul
xor
jl
xchg
testb
push
lods
mov
cltd
clc
or
dec
int
and
and
dec
sub
xor
call
jmp
inc
leave
pop
cmp
sub
pop
test
xchg
add
xor
in
aas
inc
lret
lret
cmpsb
xor
scas
or
mov
ret
out
jg
jmp
mov
mov
insb
stc
imul
bound
aaa
push
mov
into
cmp
in
pop
incl
lcall
jns
jmp
inc
fisttps
fldenv
setg
or
pop
xchg
xchg
adc
xchg
jb
addr16
imul
push
cmpsl
daa
mov
and
mov
stos
into
cmp
push
mov
out
cli
and
loop
lcall
jle
call
sub
sub
mov
inc
mov
cmc
inc
sbb
test
push
into
mov
ljmp
pop
pusha
add
imul
or
iret
test
testb
add
jo
xorl
dec
jecxz
repnz
pop
repnz
mov
popl
dec
sub
sbb
jns
jmp
dec
rolb
sarb
out
in
je
insl
scas
aaa
cmpsl
ret
sbbb
mov
inc
mov
xor
repz
xorb
and
stos
cmp
push
jp
xchg
testb
sub
les
mov
cmpsl
sub
mov
lods
lret
inc
movsb
mov
lods
mov
mov
lock
mov
jns
cmp
or
iret
add
imul
adc
jbe
push
stos
cmp
or
ret
mov
inc
mov
loope
mov
jnp
mov
test
mov
jo
outsl
sbb
ljmp
pop
pusha
or
and
add
add
mov
sahf
mov
or
pusha
or
add
adc
ja
jo
loop
leave
push
shll
xor
and
push
shlb
mov
fiadds
mov
xchg
or
in
xchg
aam
les
push
cld
adc
arpl
xchg
mov
enter
icebp
add
xlat
push
mov
iret
stos
pop
xchg
lds
mov
test
mov
mov
fldl
pop
and
xor
jg
jmp
or
mov
cli
cmpsl
sub
sbb
out
jg
jmp
mov
mov
or
outsl
sbb
or
xor
int3
or
iret
and
and
out
mov
in
or
cld
ljmp
pop
pusha
or
jo
add
add
lret
or
les
test
pusha
or
jp
or
iret
fmull
push
in
loop
pop
loop
push
les
int3
jle
ja
xorb
ret
push
lds
add
xor
divl
add
sub
push
cmp
mov
test
push
cltd
rcrl
data16
or
das
mov
cmp
mov
lods
inc
lds
iret
sub
pop
iret
stos
pop
cltd
inc
push
xor
sbb
outsl
or
repnz
mov
jbe
cmpl
mov
inc
mov
pop
inc
and
cmp
in
xor
sub
sbb
push
test
jns
jmp
scas
and
out
jl
testb
jp
in
inc
dec
fldt
mov
xchg
aas
stos
inc
shll
out
jo
je
jbe
loopne
xor
or
xor
jae
shlb
sub
add
or
or
or
pusha
or
add
jo
or
add
or
or
or
or
pusha
or
adc
outsl
or
or
jo
idiv
decl
or
or
or
or
pusha
or
adc
or
adc
in
add
pop
in
sbb
pusha
add
add
add
pusha
add
pusha
add
pusha
add
pusha
add
jno
or
pop
pusha
add
gs
insl
hlt
pop
ljmp
stc
in
and
ljmp
stc
out
jmp
jmp
jge
xchg
mov
sbb
xor
ljmp
pop
pusha
or
imul
popf
or
mov
inc
mov
xchg
lea
test
jge
imul
pushf
sbb
xchg
jb
jp
pop
enter
inc
int3
inc
and
outsb
or
sbb
jnp
mov
jp
popa
add
add
jne
out
dec
fcoml
mov
jo
loop
and
ja
lods
jo
jno
jecxz
xchg
add
nop
pop
xchg
repnz
cli
dec
cs
stos
cmp
aam
xlat
mov
call
ret
add
jmp
lods
inc
les
xchg
mov
mov
pushf
add
sbb
sbb
fcomps
test
mov
movsl
xchg
gs
cld
jns
mov
addb
or
movb
inc
test
movsb
push
enter
fwait
outsl
and
sub
mov
adc
iret
inc
fidivrl
sbb
adc
insb
leave
cltd
imul
or
imul
pop
adc
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
imul
or
iret
outsl
sbb
dec
pusha
add
add
add
add
pusha
adc
in
add
pop
in
sbb
pusha
add
add
add
pusha
add
pusha
add
pusha
add
pusha
add
add
or
pop
pusha
add
add
lods
cmp
sahf
or
cmpsb
outsl
insb
in
jge
negl
push
mov
or
xchg
gs
fstpl
scas
pop
lea
fistpl
stos
data16
bound
int
addr16
push
shll
push
movsl
push
jmp
sti
sahf
insl
int3
in
stc
cwtl
imul
int
inc
mov
out
lea
or
aaa
cmpsl
ret
pop
int3
inc
and
dec
sub
cmp
add
cltd
pop
leave
pop
cmp
outsb
daa
ret
push
lds
cmp
stc
notl
inc
fmuls
fdivs
jmp
xchg
popa
call
jb
jl
insb
or
iret
lods
int3
lret
outsb
loopne
adc
inc
ljmp
adc
cld
ljmp
pop
pusha
or
imul
iret
pop
aad
sub
or
inc
shll
add
mov
xchg
add
std
or
push
les
cmp
add
hlt
inc
add
cmp
movsb
cmp
sbb
test
jne
mov
cli
notl
mov
rcll
mov
xchg
jle
add
mov
adc
sbb
pusha
or
imul
adc
roll
mov
lock
clc
mov
jmp
pop
call
jmp
movsb
cmp
adcb
xorb
mov
jmp
pushf
add
jmp
sub
jmp
hlt
add
jmp
adc
jae
in
add
call
sbb
pusha
or
imul
or
iret
and
or
cmpb
push
outsl
sub
hlt
adc
sbb
pusha
or
jo
add
add
mov
adc
jo
xchg
xchg
loopne
pusha
or
pusha
or
daa
rorl
adc
insb
jmp
jmp
sub
jmp
pop
call
jmp
es
inc
mov
divl
xchg
test
mov
inc
mov
mov
jmp
ds
aaa
inc
add
jmp
js
movsb
popl
jmp
lret
inc
arpl
push
add
filds
dec
scas
mov
add
movsb
pop
popf
or
push
call
jmp
and
xchg
jns
mov
add
mov
mov
jmp
pop
lahf
punpckhdq
pop
int3
popf
js
sbb
add
fwait
add
std
or
or
pushf
jmp
rclb
mov
mov
sbb
add
inc
add
and
add
add
add
add
jmp
jge
repnz
hlt
idiv
jmp
push
add
aad
jo
pop
fs
jmp
sbb
or
sub
pusha
or
or
or
pusha
add
dec
pusha
add
outsl
or
add
dec
pusha
add
adc
imul
adc
lea
cltd
clc
or
rolb
add
call
jmp
roll
dec
cltd
lods
dec
fists
jmp
and
int
enter
push
das
jb
mov
add
cwtl
sbb
aad
shl
fucomip
add
or
sbb
pusha
or
imul
iret
push
inc
outsl
sbb
dec
pusha
add
add
add
add
pusha
adc
in
add
pop
in
pop
outsl
adc
outsl
or
dec
pusha
or
pusha
or
pusha
or
pusha
or
add
pop
in
sbb
pusha
or
outsl
or
or
pusha
or
pusha
or
pusha
or
or
outsl
or
dec
pusha
or
rorl
adc
or
inc
xor
out
mov
jmp
stos
call
jmp
cmp
push
lds
jge
gs
push
mov
leave
pop
mov
jmp
nop
pop
sub
add
add
jmp
fcoml
lods
pop
mov
adc
dec
or
mov
pushf
popl
jmp
lret
add
mov
adc
xchg
cmc
lcall
out
mov
jmp
push
fisttpll
out
sub
mov
hlt
outsb
loope
adc
inc
cmpsb
add
jmp
or
sbb
aad
lea
dec
adc
push
push
imul
in
push
outsl
sub
pusha
add
sub
mov
hlt
push
cld
dec
inc
roll
sarl
rorb
ror
mov
jmp
xchg
xchg
lcall
jmp
sbb
scas
cmp
push
xor
or
cmp
pushf
jmp
push
mov
jle
imul
mov
mov
xchg
mov
or
pop
pusha
or
pop
pusha
or
adc
or
iret
or
and
call
sbb
pusha
add
adc
add
add
pusha
adc
or
iret
xchg
add
out
pushf
popl
jmp
xor
and
dec
ret
shll
je
sahf
or
cmpsb
dec
or
popl
mov
mov
jmp
divl
cmpl
jo
xorl
pop
mov
mov
sub
rol
mov
jmp
mov
int3
xor
ret
mov
jg
mov
add
aas
cli
call
lds
mov
jg
outsb
jnp
pusha
pop
repnz
faddp
add
jmp
sbb
add
pop
cli
call
mov
dec
fidivrs
lcall
mov
jmp
mov
push
jmp
insl
loopne
adc
inc
adcl
ds
inc
mov
push
loop
ds
imul
iret
add
imul
popf
push
and
pop
jmp
gs
imul
dec
addr16
and
adc
sbb
pusha
or
imul
sub
add
jmp
lcall
sbb
aad
xchg
inc
xlat
inc
and
jbe
jnp
inc
and
jmp
es
inc
mov
mov
mov
mov
outsb
or
cmp
pushf
jmp
sub
test
aad
into
push
int3
inc
and
fstpt
jge
jmp
stc
data16
xchg
outsb
jmp
fstl
idivb
mov
pop
fisttpll
out
lret
push
in
adc
sbb
pusha
or
sub
mov
pushl
mov
jmp
aaa
mov
inc
mov
frstor
add
add
and
jmp
outsb
imul
mov
push
pop
fisttpll
out
aad
mov
and
pop
xchg
loopne
pusha
mov
mov
mov
andb
sub
jo
mov
jmp
sahf
adc
in
sbb
mov
xchg
repnz
in
cmp
jne
addl
jmp
pop
inc
and
cmp
mov
jmp
pusha
sub
clc
xlat
das
mov
adcl
or
in
shlb
sub
sar
inc
adc
les
fadds
daa
jmp
out
scas
pop
je
jmp
les
mov
lahf
cli
or
aaa
pushf
add
or
sub
adc
sub
pusha
or
xor
add
add
leave
or
les
push
add
pop
pusha
or
sub
or
iret
out
jge
je
sub
rcll
jae
pop
and
rolb
add
jmp
mov
mov
and
dec
dec
jmp
add
add
aad
add
sub
push
lds
mov
and
sete
insl
pushf
jle
pop
xorb
in
clc
adc
sbb
pusha
or
fmuls
adc
push
jb
sub
or
sbb
pusha
or
adc
add
or
or
or
pusha
add
add
pusha
add
add
add
pusha
add
or
pusha
add
pusha
adc
or
iret
ja
jge
negl
xor
pop
repz
into
push
out
in
sub
mov
jmp
push
adcb
addb
or
lcall
loope
jae
hlt
mov
pop
lea
jmp
ss
inc
mov
xor
cwtl
imul
fcoml
mov
jmp
movsb
and
xchg
add
mov
pushf
sti
push
mov
fcmovbe
xor
or
sbb
int3
inc
and
popl
jmp
aaa
mov
jne
xchg
testb
imul
cmp
clc
jmp
dec
push
xor
sbb
mov
xor
das
dec
inc
fimull
xchg
jmp
pop
int3
inc
and
jp
in
inc
push
push
xor
jg
sub
add
sub
and
add
pusha
add
add
pusha
adc
or
iret
push
test
movsb
cmp
push
popa
inc
mov
test
jmp
popf
or
pop
repnz
shrl
sahf
add
andl
jmp
arpl
xchg
mov
cmc
adc
dec
fstpt
mov
jmp
gs
xchg
cmc
add
jecxz
adc
add
add
aaa
cmpsb
push
in
or
sbb
pusha
or
sub
add
add
add
add
pusha
adc
or
sbb
pusha
or
imul
or
iret
dec
sub
cmc
jo
add
add
or
xor
pusha
adc
jo
add
add
rorb
adc
jo
xchg
pop
pusha
add
adc
bound
insl
xchg
mov
jmp
jmp
cmp
shr
add
add
push
push
shlb
add
sbb
lods
add
loop
and
les
xchg
add
sahf
pusha
dec
int
and
add
mov
sub
push
jmp
dec
jmp
add
sbb
data16
xchg
outsb
popf
testb
scas
aas
pop
test
test
jmp
xor
pop
push
jmp
movsb
xor
cmpsl
aaa
push
mov
and
or
inc
and
sub
test
incl
cli
jmp
fwait
push
test
push
mov
mov
jns
fucomi
jb
xchg
pop
push
jmp
xchg
add
lods
lret
inc
notl
push
xor
imul
xor
or
or
pusha
add
or
pusha
add
or
or
pusha
add
or
pusha
add
pusha
adc
or
iret
shlb
arpl
add
popa
mulb
push
or
loopne
jmp
jge
in
loop
lea
dec
lds
stos
data16
xchg
add
sahf
je
arpl
xchg
mov
in
add
hlt
adc
sbb
pusha
or
hlt
adc
sbb
pusha
add
fisttpl
adc
xlat
dec
fistpll
sbb
or
mov
lock
jmp
loope
fistpl
add
add
xchg
testb
fidivs
mov
lahf
cli
or
xor
aas
enter
sbb
pusha
or
outsl
or
or
pop
jo
or
add
or
outsl
or
dec
pusha
or
pusha
or
outsl
or
ljmp
pusha
or
outsl
or
or
pop
pusha
or
pusha
or
add
pop
in
pop
outsl
adc
outsl
or
or
pusha
or
pusha
or
pusha
or
pusha
or
or
pop
pusha
or
mov
cmpsb
fstpl
test
cmpsl
jnp
call
andb
jmp
lcall
ss
jmp
inc
jmp
pop
adcl
push
lahf
push
inc
leave
pop
cmp
cmp
dec
mov
dec
push
adc
dec
add
add
cltd
or
jnp
je
lea
push
les
xor
je
cmpl
je
jmp
push
add
add
mov
jmp
inc
int
and
jb
lret
lret
xchg
mov
imul
or
jmp
mov
cmp
inc
and
outsl
pop
orb
sub
add
add
outsl
sub
or
pop
pusha
or
push
add
add
mov
adc
jo
hlt
std
pop
pusha
or
or
xlat
or
iret
adc
or
bnd
xor
dec
fimull
fisubrl
insl
std
test
jb
je
out
pop
mov
sub
adc
fnstcw
js
ljmp
fbld
fnsetpm(287
jl
jne
outsb
adc
push
jmp
push
adc
cmp
in
add
gs
pushf
outsl
ljmp
pop
fimull
ficoml
jmp
add
add
pop
pusha
adc
imul
in
bound
movsb
ret
ds
xor
das
adc
shr
add
add
scas
cmp
mov
cltd
sbb
fwait
sbb
aad
repz
xchg
sub
add
add
jge
jmp
jne
jmp
and
push
roll
sarl
cmp
dec
rcl
imul
or
iret
add
imul
or
iret
aas
mov
dec
mov
adc
sbb
pusha
or
pusha
xor
fisttps
adc
mov
je
jmp
out
jmp
orb
stc
or
add
or
xchg
and
icebp
orb
ficoms
cmpsl
push
nop
adc
cld
outsb
cld
fwait
jbe
or
xor
adc
and
push
mov
setge
mov
dec
mov
pop
scas
pop
pop
lea
jmp
push
jmp
adcb
test
jmp
push
mov
cmp
push
in
jg
mov
out
jnp
mov
fcoml
test
decl
clc
cmpl
je
cmpl
jmp
mov
jmp
jno
js
ljmp
add
icebp
ficoml
call
jmp
jge
jno
jecxz
dec
in
aam
addb
add
je
lea
jmp
push
in
and
iret
push
dec
sbb
hlt
adc
sbb
pusha
add
sub
sub
or
iret
jge
xchg
testb
xor
push
mov
xor
xchg
in
lock
sbb
pusha
or
pusha
and
push
testb
iret
hlt
jo
xorl
jmp
repz
cmpl
lods
cmp
mov
js
imul
mov
test
jmp
and
jmp
cli
aaa
pushl
jmp
call
jmp
dec
ret
ret
adc
dec
fstpt
jns
outsl
xor
add
add
outsl
and
pusha
add
dec
loopne
adc
pop
stc
push
pusha
and
add
add
outsl
and
or
imul
or
iret
cmp
jmp
popf
adc
sbb
push
jne
out
dec
in
in
jg
sbbb
adc
sbb
pusha
or
add
add
mov
arpl
ffree
pop
pusha
add
pusha
add
cwtl
loopne
adc
stos
aas
scas
lret
fs
push
cld
dec
mov
xchg
hlt
lock
rcrb
lds
and
imul
iret
fcoml
push
push
jmp
sub
push
lds
fisttpll
out
or
test
imul
pop
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
out
cmp
adc
clc
lcall
into
pop
ret
ret
xchg
add
jmp
jmp
stc
pusha
notb
into
test
fs
jns
and
pop
lea
push
pushl
mov
push
push
call
jmp
add
mov
jmp
mov
pushf
sti
push
fildll
pop
test
std
or
cmp
xchg
mov
lea
test
jne
jmp
pop
jmp
cmp
inc
lea
cwtl
decl
fstpl
in
xchg
jle
dec
test
jmp
rclb
lods
pop
mov
ljmp
add
add
jmp
cwtl
adc
or
in
imulb
cmpsl
aaa
push
mov
jae
ret
add
xchg
fstl
pop
scas
push
fmuls
fdivrs
icebp
popa
add
and
cltd
xlat
outsl
adc
add
add
outsl
and
pusha
add
imul
insb
or
les
mov
jge
jge
testl
cmp
scas
pop
jmp
mov
out
mov
pop
sub
add
xchg
popf
pushl
jmp
pop
insl
jae
loop
jmp
pusha
jmp
ret
mov
je
out
pop
pop
adcb
subb
pusha
jne
inc
or
add
add
jmp
fwait
or
mov
mov
cs
pop
repnz
cmpsl
arpl
xchg
jno
jmp
mov
int
jb
xchg
aam
ret
cmpsb
push
mov
pop
xchg
xor
outsb
lahf
pusha
sbb
add
add
pop
pusha
or
and
add
add
mov
pushf
outsl
lea
pusha
add
add
or
iret
jno
jl
divb
mov
jmp
push
xlat
inc
and
push
xchg
push
test
push
mul
pusha
notb
or
dec
dec
pusha
adc
add
add
outsl
and
add
and
fimuls
adc
push
xor
jmp
loopne
notl
push
xor
xor
lds
cmovae
add
call
cltd
roll
add
inc
or
or
xchg
shl
cmp
jmp
or
pop
jp
jg
ljmp
ss
mov
sbb
jmp
lahf
adc
xchg
sbb
cwtl
push
imul
and
jmp
jno
cmpl
shll
dec
fnstsw
jmp
jge
and
mov
ret
pusha
icebp
popa
add
pop
inc
cltd
pushf
mov
movzbl
add
jmp
inc
rolb
shlb
data16
xchg
outsb
push
ret
ret
std
cmp
jmp
push
xchg
pop
bound
pop
loop
sub
das
dec
mov
pusha
xchg
push
dec
sub
call
sbb
pusha
add
imul
or
iret
lods
push
jmp
fdivr
mov
mov
jmp
ss
inc
mov
jno
jg
jmp
push
mov
lea
jmp
jbe
jle
call
arpl
rcll
add
add
hlt
adc
cmp
mov
mov
es
mov
pop
lret
lret
jno
xchg
popl
jmp
mov
sub
lea
mov
call
mov
jmp
sub
fldl
xor
jmp
mov
cmpsl
leave
jmp
scas
jmp
movsl
xor
mov
js
ja
xor
repnz
or
add
fdivp
inc
jmp
cmp
ret
jmp
cmc
ja
xorb
movsb
ret
ds
out
imul
insl
cwtl
nop
sbb
movsb
in
leave
je
push
push
mov
test
je
cmp
jb
cmp
jmp
mov
jmp
jl
push
cld
sbb
mov
mov
mov
lods
mov
xchg
push
push
cmp
add
jmp
and
and
sahf
or
in
mov
mov
inc
or
jns
lret
pop
ds
add
test
xchg
sahf
js
out
jb
lea
shr
movl
je
jmp
and
add
add
mov
jmp
incl
jmp
das
mov
sub
adc
push
les
sbb
cmp
jmp
or
punpckhdq
lds
addr16
xchg
cmc
add
lahf
cli
movsl
mov
shr
mov
cli
push
inc
fidivrl
dec
sub
pop
adc
xor
jmp
mov
cmpsl
ret
mov
leave
xlat
fistpll
decl
add
jmp
mov
cltd
clc
or
jno
add
adc
fbld
push
add
jmp
push
and
out
push
mov
sub
dec
jns
mov
test
je
test
jle
lea
jmp
jmp
push
ja
loope
pop
aam
sub
push
imul
out
jg
jmp
lret
cld
jmp
sbb
jg
popa
add
xor
mov
dec
jmp
imull
sahf
insl
fnstsw
jl
negb
pop
repnz
fs
decb
push
or
test
decl
call
hlt
xor
pushf
jmp
pop
jmp
cltd
or
add
dec
frstor
jge
cmp
mov
pushl
mov
mov
test
xchg
sub
jmp
sti
pusha
notb
inc
and
cmp
or
jae
jg
jne
jmp
inc
fmuls
fcomps
jae
xchg
xchg
jl
enter
sarl
jmp
push
lret
xchg
mov
cmpsl
ret
jno
addr16
pop
fcoml
std
jmp
into
pushl
jmp
and
dec
pop
fisttpll
out
and
xor
mov
mov
jmp
sub
inc
rorb
dec
mov
or
jmp
or
add
xlat
or
in
jmp
lea
add
or
aad
repz
xchg
pusha
pop
repnz
pusha
notb
add
test
sti
jmp
rolb
add
jmp
and
jmp
push
fmuls
fmuls
ljmp
punpckhdq
test
out
into
push
popa
mov
ret
fisttpl
mov
outsb
cmp
jmp
data16
dec
adc
addw
jmp
arpl
pusha
pop
repnz
mov
mov
and
push
stc
and
mov
mov
andb
sub
jo
mov
jmp
inc
pop
addl
jmp
jp
icebp
mov
jnp
jge
testl
stc
add
xchg
push
pushf
sti
push
hlt
pop
fwait
cmp
je
jmp
dec
inc
and
xor
roll
aad
test
mov
sbb
add
add
mov
add
cmp
jmp
imulb
lcall
popl
jmp
mov
mov
ret
ret
movsb
cmp
inc
sahf
sbb
repnz
mov
jmp
test
lret
cmp
add
inc
ret
ret
pop
into
test
clc
lahf
push
pop
fwait
les
jmp
ficoml
inc
xchg
sbb
adc
jmp
icebp
nop
arpl
repz
or
adc
mov
movsb
cmp
or
insl
std
test
int3
inc
mov
xorb
push
lea
jmp
pushf
jmp
insb
add
add
rorl
repz
sbb
sbb
adc
jmp
mov
addb
and
arpl
jb
in
mov
mov
and
or
jo
or
outsl
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
imul
adc
add
jnp
jl
notb
adc
push
jmp
sbb
insb
and
pop
rclb
sub
mov
ss
jmp
test
mov
sbb
stos
idivl
mov
cmp
xchg
mov
cmpsl
pop
adc
sub
jp
or
iret
in
outsb
cld
fwait
jbe
bnd
xchg
or
ret
xchg
add
add
inc
fcomps
xchg
addr16
mov
jg
jg
sti
dec
loope
ret
jmp
icebp
je
lea
outsl
lcall
jo
loop
cmp
pop
jg
mov
shl
jmp
and
mov
test
push
xor
sbb
sub
mov
jmp
or
push
jno
inc
push
adc
ret
jbe
jmp
pushf
pop
xchg
adc
out
pop
sbb
aad
lea
xchg
xchg
add
pop
jmp
dec
jmp
or
hlt
lock
shlb
fs
push
mov
mov
jmp
movsl
adc
sahf
sub
jmp
add
push
popa
nop
daa
jg
js
ljmp
inc
push
cmp
cmp
xlat
jb
jmp
jmp
add
jmp
in
pushl
jmp
xchg
or
ljmp
inc
and
cmp
pop
jmp
inc
xchg
popf
jmp
dec
rorl
and
jmp
pusha
jmp
mov
jmp
ja
andb
jmp
dec
xlat
inc
and
pop
adc
into
pop
cmp
pop
jb
push
sub
add
jmp
mov
enter
adc
or
xchg
add
ja
insl
jmp
mov
jmp
mov
jmp
rolb
dec
mov
pop
int
addr16
push
mov
sti
sahf
insl
cmpl
adc
xor
call
add
aaa
ret
push
lds
popf
push
test
push
cld
mov
fldcw
fmulp
mov
xor
test
jbe
push
lea
push
cmp
jae
jmp
mov
sar
inc
adc
stos
lods
addb
add
add
mov
add
jmp
idivl
mov
dec
lret
pop
ds
movsb
sub
fimuls
inc
stos
mov
push
lret
mov
sbb
add
jmp
mov
out
jo
imul
inc
xor
jmp
movsl
xor
repnz
pop
repnz
mov
xorl
xorb
decl
add
jne
jmp
popl
jmp
scas
cmp
push
les
xchg
cmc
add
mov
jmp
test
push
insl
test
mov
jmp
data16
jmp
iret
push
lds
shll
enter
mov
jecxz
adc
add
lea
jmp
push
jmp
pop
jmp
add
adc
mov
nop
push
popa
nop
js
data16
xchg
outsb
xchg
pop
rcrl
in
jmp
js
or
add
add
mov
stos
dec
push
inc
and
and
jb
xchg
mov
push
testb
iret
add
imul
xor
add
cmpsb
sahf
fimuls
je
cmp
jbe
mov
jmp
push
inc
and
ss
les
int3
aas
stos
and
ljmp
jmp
mov
jmp
insl
in
sbb
push
xor
les
mov
mov
sbb
ljmp
add
add
mov
lds
gs
pushf
outsl
les
cmp
jae
mov
cmp
jb
mov
add
jmp
add
shr
aas
mov
adc
pop
lret
lret
lret
pop
ds
nop
push
xchg
repz
mov
xchg
inc
cmp
jae
jmp
push
lret
pop
ds
push
xchg
add
and
xchg
xchg
mov
jmp
loope
cmp
jmp
sub
dec
fdivrs
jmp
jge
call
lcall
add
lods
cmp
lock
ja
dec
fdivrl
arpl
cmc
cmp
xor
ja
add
xchg
std
or
and
adc
and
jmp
data16
adc
push
ds
aam
shlb
xchg
jbe
push
push
test
je
xor
call
mov
mov
add
jmp
mov
pushf
sti
push
jecxz
push
cmp
inc
and
push
je
addr16
pop
repz
sbb
jl
inc
aad
dec
test
cld
mov
add
call
test
je
incl
jmp
cld
mov
jmp
push
mov
jmp
orb
clc
or
mov
shll
cli
popf
insb
mov
or
jnp
and
lea
jmp
lock
mov
or
aas
fsts
pop
sti
lret
test
sahf
stc
or
jb
dec
enter
cld
cmp
jb
jmp
jmp
adcb
loopne
mov
gs
popa
lea
mov
add
jmp
add
jmp
repnz
insl
ret
fs
dec
mov
mov
and
jb
jmp
mov
in
sbb
iret
push
lret
mov
clc
adc
jmp
rorb
mov
cmp
cs
dec
pop
jmp
jg
jbe
loopne
std
jge
je
dec
aaa
mov
dec
mov
push
fnstcw
jle
jbe
jmp
mov
mov
jmp
call
mov
test
je
mov
sub
push
jmp
divb
cmpl
jp
jp
mov
stos
into
cmp
hlt
jmp
cmpsb
daa
mov
and
cmpsb
and
arpl
xchg
mov
arpl
cmc
add
mov
jmp
dec
ret
mov
call
jmp
jp
pusha
pop
repnz
roll
test
jmp
lds
push
cmpsl
mov
sahf
add
inc
jmp
mov
jmp
jle
addr16
sub
arpl
cmc
xor
mov
gs
xor
push
fnstenv
addl
jmp
lea
mov
es
mov
mov
cs
lods
inc
shll
loop
jmp
sbb
sbb
and
push
lret
jmp
sbb
jae
xchg
cld
jmp
adc
sbb
xchg
push
ret
pop
into
test
xor
call
jmp
adc
jns
fdivl
in
popa
std
insl
hlt
pop
subb
push
jmp
xchg
or
add
pop
jmp
rolb
inc
mov
push
loop
lock
bound
xor
ljmp
call
jmp
divl
xorb
jle
mov
inc
mov
pop
xchg
sti
inc
push
push
call
jmp
jmp
jmp
cld
fwait
jbe
and
cmp
mov
imul
pop
push
xchg
call
jmp
jmp
andl
or
inc
aam
dec
stos
xchg
sbb
movsl
xor
mov
pushf
jmp
insb
loope
adc
xor
jl
add
jmp
dec
in
xchg
popf
jmp
movsl
das
mov
mov
inc
mov
push
les
int3
jp
cli
push
fs
sub
jmp
mov
mov
inc
and
jmp
iret
pop
int
addr16
cs
mov
rolb
mov
leave
ret
jmp
pushl
mov
jmp
mov
inc
or
sbb
stc
imul
sub
push
dec
xlat
inc
and
sbb
and
mov
jmp
mov
jmp
sbbl
call
xor
scas
inc
test
mov
sbb
xchg
cmp
call
add
jmp
adc
jmp
lcall
cltd
or
sti
mov
jmp
popa
jmp
inc
les
int3
and
fisttpll
out
and
in
imul
jnp
inc
or
jns
decl
shlb
fsubs
xchg
mov
xor
cmp
xor
add
adc
test
jne
push
jmp
and
cltd
nop
les
ficompl
sar
inc
adc
jg
gs
sbb
movzbl
add
cmp
jmp
cmpsl
cs
adcl
mov
dec
mov
jno
je
jmp
into
inc
shlb
and
mov
movsb
push
jecxz
rolb
sarb
cmp
jne
addl
mov
jmp
insb
cld
xchg
cmc
add
outsl
insb
or
scas
in
popf
popa
jmp
pop
pop
jp
and
add
add
sbb
inc
push
push
xor
jns
icebp
popa
add
push
add
inc
push
andb
sub
jo
mov
and
jmp
lods
jne
add
jmp
push
jmp
pop
jmp
push
into
pop
cmp
xor
stos
cmp
inc
mov
imul
push
std
jl
sbb
das
sub
add
ret
push
push
lahf
push
pop
fwait
or
push
xlat
push
lret
mov
inc
and
adc
imul
push
call
sbb
xor
dec
push
lds
jnp
push
in
jmp
xor
mov
cld
imul
add
cwtl
pushf
jmp
clc
adcl
test
loope
adc
adc
push
cld
je
lea
mov
xchg
jmp
sub
or
es
pop
jnp
gs
aas
dec
dec
add
jmp
ficoml
lods
pop
cli
movsb
cmp
sbb
mov
fstps
lea
push
call
adcb
out
mov
inc
out
loop
pop
loop
or
or
xor
xor
mov
jmp
push
push
xor
jns
mov
lods
and
ja
or
mov
mov
jmp
xor
stc
sbb
push
add
add
fptan
insb
loop
je
jb
arpl
cmc
je
sub
lds
int
push
shll
pop
stos
inc
dec
roll
aad
inc
push
xor
xor
popf
js
imul
mov
jno
popl
jmp
call
mov
inc
mov
mov
pop
imul
adc
jmp
notl
jo
loop
data16
jl
notb
jns
add
add
andl
test
adc
sub
xchg
decb
adc
outsl
xor
sbb
add
outsl
sub
pusha
add
and
or
iret
xchg
sbb
dec
les
int3
sbb
push
jecxz
push
in
mov
adc
lock
jo
mov
jmp
cmp
subb
cmpl
lods
pop
ljmp
popa
mull
icebp
dec
ja
fldl
jne
addl
jmp
movzbl
add
jmp
rcll
push
stc
jnp
idiv
lock
jmp
xor
mov
mov
xchg
jge
testl
daa
or
inc
adc
popa
jmp
jns
jno
jecxz
add
inc
or
scas
cmp
cltd
sub
add
lods
stc
pusha
notb
out
jno
scas
aaa
cmpsl
ret
lea
in
rep
mov
jmp
mov
movl
and
popl
jmp
lea
in
icebp
mov
mov
outsl
mov
or
and
add
jmp
xchg
mov
gs
jl
pop
repnz
fs
fcomp
int3
popf
sub
sub
jo
mulb
push
clc
pop
jmp
jo
imul
dec
sub
add
js
ljmp
add
add
xor
dec
inc
aam
dec
jmp
mov
mov
push
aad
sarb
enter
mov
xor
sti
imul
pop
mov
in
jg
stc
jg
stos
adc
imul
or
iret
add
mov
xlat
pushl
cwtl
bound
jmp
aaa
movsl
xor
mov
jmp
ret
jmp
ret
jmp
push
xchg
add
mov
nop
add
xor
sarl
shl
adc
push
push
xor
push
adc
imul
add
add
outsl
sub
pusha
add
xor
testl
push
push
call
sbbb
ljmp
pop
lea
add
call
rep
inc
repz
call
popf
add
std
or
sub
sbbl
cmc
jne
mov
test
cltd
js
jmp
pop
jmp
fs
sbb
add
and
or
jmp
pop
jecxz
push
in
push
pushf
sti
push
repz
aad
and
xor
dec
fidivrs
call
jmp
jno
push
cld
adc
push
mov
es
stos
cmp
dec
sti
into
pop
mov
push
add
out
call
pop
int3
stos
data16
pop
xchg
jmp
pushl
jmp
mov
popf
adc
or
sub
imul
adc
sub
mov
and
lea
outsl
xor
add
outsl
add
dec
pusha
adc
in
add
pop
in
sbb
pusha
or
or
or
pusha
or
pusha
or
pusha
or
pusha
or
sbb
or
pop
pusha
or
or
clc
idivb
mov
fistl
mov
jmp
nop
add
jb
xchg
mov
mov
sbb
add
outsl
xor
or
pusha
xor
add
add
fisttpl
adc
jo
mov
or
pusha
or
jo
or
iret
sbb
in
sbb
or
outsl
sub
pusha
or
or
add
add
add
pusha
add
or
jo
or
add
add
add
add
add
pusha
add
adc
outsl
add
add
jo
idiv
decl
add
add
add
add
pusha
add
adc
add
adc
imul
mov
mov
mov
andb
sub
jmp
in
jmp
jge
and
mov
jmp
scas
cmp
inc
xlat
mov
out
lods
and
add
popf
popa
jmp
push
adcl
rcll
add
bound
pushf
sti
push
cld
notl
pop
jmp
daa
mov
sbbl
aaa
mov
lcall
adcl
jecxz
jmp
xor
es
cmp
inc
addr16
sbb
add
mov
mov
ret
jo
addr16
sbb
ret
jmp
push
add
add
jmp
daa
cmpsl
aaa
push
mov
mov
loop
je
or
pusha
mov
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
cltd
adc
aad
sub
aas
xor
jmp
cmp
cmpl
rorb
dec
lods
dec
lret
pop
ds
adc
add
mov
adc
pop
jecxz
xor
outsl
xor
add
add
adc
imul
mov
push
pop
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
fcoml
cmpsl
push
cmc
pushl
xorl
lods
imul
add
add
pop
cmp
dec
jmp
xor
xor
scas
sbb
outsl
lcall
movsb
ret
ds
jnp
js
ljmp
mov
add
cmp
je
jmp
fdivrs
jmp
push
call
xor
and
sbb
ret
push
lds
popl
lea
jmp
out
loopne
jb
xor
outsb
sti
imul
sbb
pop
inc
repz
add
aam
pushl
fst
dec
fdivrs
js
ljmp
xchg
sub
nop
mov
jmp
pop
cmp
popa
leave
push
jmp
pop
cltd
pop
jmp
lock
xchg
stc
jp
jp
sub
pop
fisttpll
out
pop
out
movsl
repnz
outsl
xor
outsl
sub
outsl
add
outsl
sbb
outsl
adc
imul
add
inc
cmp
cmp
stc
or
iret
add
imul
or
iret
cmp
or
xor
push
out
sub
add
xchg
popf
pushl
jmp
int
mov
repz
cmpl
adc
dec
adc
cmp
iret
adc
popa
sbb
jmp
into
inc
fidivrl
dec
sub
cmp
xchg
pop
bound
dec
mov
out
mov
jmp
adc
sub
jmp
and
rcrl
xchg
cmpsl
ficoms
mov
repz
gs
pusha
das
mov
jmp
inc
rolb
sarb
sub
jmp
mov
jmp
mov
mov
dec
fistpll
mov
and
shl
pushf
jmp
popa
jmp
adc
jmp
pusha
cmc
gs
push
sub
push
lds
out
jo
into
push
lret
lahf
pushf
mov
xor
pusha
add
outsl
add
or
or
or
or
dec
pusha
or
add
or
pusha
adc
imul
or
iret
jno
mov
ret
xlat
dec
ret
mov
mov
mov
iret
mov
sub
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
imul
iret
imul
in
cmp
or
jo
ljmp
pop
pusha
or
imul
or
iret
jbe
jle
call
ret
fstps
rorb
pop
es
test
jmp
xor
xchg
pop
xchg
adc
loop
lock
bound
mov
popa
mov
jmp
cmpsl
es
cs
test
lret
jecxz
cli
popf
insb
mov
mov
add
jmp
inc
bound
add
jmp
std
jg
mov
lahf
sbb
jp
jp
sub
cli
and
cmp
jne
addl
mov
jmp
out
data16
xchg
outsb
mov
lea
jmp
bnd
xor
push
jmp
pop
jmp
and
inc
in
stc
cwtl
imul
jns
mov
cmpsb
xchg
lar
repnz
outsl
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
imul
int3
inc
and
xor
xor
jmp
ret
jmp
mov
shll
mov
sub
xchg
pop
bound
dec
add
leave
je
mov
imul
jmp
add
ja
ja
loope
je
jno
jecxz
mov
push
outsl
sbb
add
add
stos
and
jmp
pusha
hlt
push
cld
dec
mov
mov
das
mov
xchg
add
push
fbstp
pusha
sub
jo
add
add
pop
pusha
add
imul
adc
mov
and
shll
js
fidivs
imul
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
imul
or
iret
push
dec
jne
jmp
loop
jmp
jmp
jbe
sti
jecxz
call
jmp
lods
cmp
push
xchg
repz
mov
pusha
pop
bnd
outsl
pop
jmp
xor
and
mov
ds
aam
lret
mov
dec
add
jmp
sbb
inc
les
int3
xor
test
jge
pop
sbb
inc
inc
jmp
aaa
push
jmp
jmp
mov
stos
gs
jge
testl
dec
scas
shrl
add
dec
cmp
xor
dec
push
xor
cmp
mov
push
pop
jp
inc
cmpsb
and
outsl
xor
pusha
add
outsl
or
dec
pusha
add
add
add
add
dec
pusha
add
or
add
pusha
adc
imul
or
iret
adc
cmc
mov
add
add
add
add
jmp
arpl
jl
notb
sub
or
jmp
push
outsl
or
scas
out
jmp
push
pop
mov
jmp
mull
pushf
outsl
fdiv
popa
icebp
nop
arpl
sti
jae
xchg
repnz
imul
int
test
push
rcll
push
mov
or
pop
lods
and
ja
mov
ret
cmp
jmp
out
je
lea
jo
xorl
jg
sub
adc
mov
mov
mov
andb
sub
jo
jmp
or
sub
aas
aam
rolb
add
jmp
pop
iret
stos
pop
loopne
rcll
or
ljmp
sbb
test
incl
add
mov
movzbl
jmp
bnd
xchg
mov
cmp
sub
test
jmp
mov
int3
popf
rcrl
stos
rclw
push
outsl
arpl
movsb
add
add
push
xor
sub
sti
js
jmp
jae
imul
add
mov
pop
ljmp
xor
mov
or
outsl
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
imul
or
iret
add
mov
iret
inc
int
and
aaa
dec
push
xor
sub
ljmp
test
cmp
add
call
insl
loopne
adc
inc
out
mov
in
pop
enter
shlb
shll
lea
xchg
icebp
add
clc
dec
xchg
add
in
jl
jne
xor
cld
push
dec
fisttps
fsts
jo
xorl
dec
std
and
inc
popl
jmp
fwait
push
pushf
sti
push
mov
adcl
inc
fidivrl
outsl
or
in
sbb
push
jns
mov
outsl
sub
adc
pusha
xor
decl
adc
push
leave
pop
cmp
dec
mov
imul
adc
xor
push
or
iret
bnd
xorl
in
cmp
add
add
cld
ljmp
pop
pusha
add
and
add
mov
jg
bound
lock
lds
iret
sub
dec
fdivrl
and
lds
pop
pop
mov
add
add
pop
pusha
add
imul
adc
mov
inc
mov
test
sub
cli
or
outsl
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
jo
add
add
aad
adc
jo
outsl
dec
mov
pusha
or
lret
adc
add
add
and
insb
loop
je
dec
fisttps
flds
stc
imul
jo
loop
adc
aas
cmpsb
xor
scas
inc
cmp
sbbb
add
inc
shlb
bound
test
pop
clc
cmp
pop
into
test
bound
cld
fwait
jbe
jnp
addr16
or
dec
ret
mov
popf
or
add
xchg
add
sahf
cmp
lea
mov
dec
mov
xchg
enter
pop
in
aad
aam
dec
out
pop
add
cmpsb
sub
lds
testb
lock
adc
xchg
pop
bound
shlb
add
outsl
sub
pusha
or
outsl
or
or
pusha
add
dec
pusha
add
outsl
or
add
dec
pusha
add
adc
imul
adc
lock
je
push
cmp
shrb
outsl
sub
pusha
or
outsl
or
add
add
add
add
dec
pusha
add
or
add
pusha
adc
imul
or
iret
mov
xchg
repz
int3
inc
das
out
push
outsl
sub
xor
dec
pusha
adc
pusha
xor
add
add
movsl
or
les
pop
mov
pop
pusha
or
pusha
or
cli
add
adc
rcrl
stos
rorw
sub
outsl
imulb
sahf
insl
ret
mov
and
push
test
fwait
or
sub
push
aaa
ret
cwtl
push
imul
inc
xlat
mov
mov
les
stos
cmp
inc
imull
fwait
jbe
inc
fmuls
fcomps
xchg
add
sahf
sbb
cmp
pop
and
adc
or
je
mov
js
insb
sub
imul
xchg
adc
cmp
push
lahf
push
adc
or
mov
inc
mov
push
xchg
add
ljmp
stc
mov
aas
jmp
cmp
rorl
repz
and
sbb
push
rcll
jo
xor
inc
aad
dec
incl
fwait
or
xor
inc
sub
push
mov
inc
mov
dec
aad
sub
push
insl
mulb
sbb
rolb
sarb
inc
cmp
or
outsl
xor
add
pusha
xor
add
adc
adc
jle
pop
mov
xor
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
push
int3
inc
and
adc
add
mov
push
mov
jle
arpl
push
rolb
shlb
testb
push
mov
es
movb
inc
mov
sub
and
sbb
leave
pop
cmp
sub
outsl
sahf
test
lcall
iret
in
clc
lahf
push
sahf
pop
xchg
adc
push
fisttpll
out
movq
cld
ljmp
pop
pusha
add
imul
or
iret
jl
addr16
pop
into
outsl
adc
adc
pusha
or
outsl
or
dec
pusha
adc
in
add
pop
in
sbb
pusha
or
or
or
pusha
or
pusha
or
pusha
or
pusha
or
mov
or
pop
pusha
or
dec
fimuls
push
push
lds
iret
outsl
std
insl
hlt
pop
mov
push
xchg
xchg
adc
mov
bound
insl
pushf
cmp
lret
xor
adc
cmp
pusha
notb
adc
add
je
pop
int
lea
lods
cmp
push
shll
stos
pop
cltd
leave
dec
fdivrl
pop
jb
jp
xor
jmp
push
in
sbb
je
lea
rolb
shlb
sbb
loopne
adc
inc
adc
dec
sti
jne
mov
rclb
push
hlt
and
xchg
mov
lcall
mov
jnp
mov
add
add
outsl
and
add
hlt
or
iret
adc
jb
jp
in
pop
cmpsb
aaa
cmpsl
ret
sbb
movsl
xor
push
mov
es
mulb
sbb
pop
repnz
mov
mov
add
imul
sbb
aad
int3
aas
cmpsl
aaa
push
mov
cld
jp
ret
or
inc
and
cmp
insb
or
out
pop
fimull
fidivrl
push
or
lods
and
arpl
popf
or
pushf
xor
dec
push
adc
movsb
js
add
adc
jecxz
push
in
sbb
outsl
loopne
adc
xor
fdivl
in
dec
lret
pop
ds
mov
mov
and
ret
push
or
sub
outsb
popf
sub
dec
adc
dec
ljmp
mov
leave
push
shll
jne
data16
outsl
lcall
and
pop
enter
dec
fisttpl
fstpl
shll
xchg
pushf
sbb
aad
int3
gs
sbb
xlat
mov
mov
xchg
jb
pop
jmp
std
test
sbb
punpckhdq
pop
or
iret
xor
daa
inc
mov
mov
nop
testl
cmp
xor
inc
shlb
sbb
xchg
gs
sbb
aad
cmpl
and
stc
imul
aad
dec
ljmp
lcall
cwtl
push
imul
mov
jle
cmp
notl
das
mov
mov
mov
das
mov
aaa
lods
and
push
dec
rolb
sarb
cmpsb
cmp
jo
jl
divb
mov
inc
mov
loopne
adc
sub
xchg
cmc
add
jge
xchg
testb
mov
out
notb
mov
das
cli
push
fisttpl
sti
jle
mov
cmpsl
push
mov
daa
mov
int
jl
jne
ja
movsl
xor
in
bound
fdivrs
ret
repz
icebp
popa
add
inc
xchg
in
sbb
push
ret
fwait
mov
xchg
repnz
pop
pushf
xor
inc
mov
lods
lret
inc
mov
inc
mov
add
setg
or
xchg
cwtl
decl
enter
adc
dec
fists
cmpsb
push
in
lret
pop
ds
mov
mov
sbb
sbb
pop
xchg
add
xor
clc
lock
bound
sbb
mov
or
outsl
and
add
pusha
adc
outsb
pop
or
iret
jbe
jl
negb
sub
mov
imul
or
cli
popf
insb
movsl
stc
jp
jp
into
dec
fdivrl
mov
cs
lret
push
ret
cmpsb
push
lods
sub
jge
inc
shll
lcall
xor
xor
dec
frstor
push
movsl
inc
mov
enter
mov
add
or
or
sbb
or
in
add
or
outsl
add
dec
pusha
add
pop
jo
or
add
add
outsl
add
dec
pusha
add
pusha
add
outsl
add
ljmp
pusha
add
outsl
add
add
pop
pusha
add
pusha
add
add
pop
in
sbb
pusha
or
or
or
pusha
or
pusha
or
pusha
or
pusha
or
orb
adc
or
pop
pop
jp
xor
pop
lret
scas
pop
ds
in
lcall
les
cltd
clc
or
lret
gs
pushf
outsl
les
add
push
mov
and
movsb
icebp
fs
popf
insb
lret
imulb
je
sbbl
jmp
outsb
or
adc
leave
sahf
add
push
shll
xor
or
push
xor
sub
jns
mov
sahf
sbb
mov
cwtl
decl
hlt
stos
xor
mov
push
dec
imul
adc
sbb
or
adc
adc
sbb
adc
mov
test
push
hlt
sbbb
ljmp
dec
sarb
xor
es
ja
loope
cli
jg
mov
xchg
mov
les
xchg
add
insl
mov
cmpsl
ret
ja
popa
add
add
data16
xchg
outsb
xchg
gs
push
cmp
and
mov
jg
outsb
pop
mov
xchg
gs
insb
or
mov
outsb
mov
jae
mov
xchg
mov
xchg
movsb
cmp
add
dec
stc
cwtl
setg
or
mov
scas
cmp
cmpsb
xor
scas
sbb
gs
pop
fiaddl
mov
adcl
cmp
xor
push
ret
cmpsb
push
mov
adc
push
into
pop
cmp
push
pop
les
int3
dec
pop
fistl
lret
mov
jnp
in
add
push
aad
shll
or
rorb
pop
cmp
and
or
fisttpl
fnsave
mov
shll
and
push
inc
iret
pop
cmp
xor
dec
sub
sub
cld
ljmp
pop
pusha
add
and
pop
or
iret
fsts
lods
pop
cli
arpl
cmc
daa
cli
jbe
cmpl
pop
pusha
repnz
pop
repnz
push
lret
pop
ds
cmpsb
movsb
ret
ds
inc
aad
dec
in
jns
mov
int
enter
scas
cmp
dec
fistpll
cli
popf
insb
scas
dec
xlat
inc
and
cmp
inc
stos
cwtl
pop
xchg
repnz
fwait
or
aam
sub
push
xor
or
leave
mov
pushf
sti
push
pusha
out
adc
or
ror
xchg
sbb
or
adc
add
imul
or
iret
xchg
adc
lahf
sbb
fldt
cmpsb
xor
scas
inc
push
fisttpll
out
fstl
mov
push
xor
adc
roll
shll
cli
push
xchg
add
push
cwtl
sbb
inc
aad
dec
sti
iret
pop
repnz
fs
push
lds
in
pop
mov
cltd
or
sub
mov
dec
mov
outsb
popf
sub
mov
sub
cmp
dec
ljmp
adcl
cmpsl
aaa
push
mov
lds
fs
adc
daa
scas
xor
mov
pop
fimull
fidivrl
lock
cmpl
pop
xchg
adc
or
mov
js
pusha
pop
repnz
je
cltd
or
jge
rcll
xor
lea
int
and
add
fdivl
add
pop
pusha
or
pusha
xor
adc
adc
shrl
add
call
ret
jmp
mov
jae
fimull
add
inc
pop
inc
and
cmp
outsb
movsl
iret
jmp
push
xchg
add
push
jmp
movsb
sub
popf
setl
push
movsb
or
add
mov
stos
push
call
jle
addr16
sub
pop
jmp
xchg
sbb
dec
lock
jmp
dec
push
xor
push
xchg
xchg
push
int3
popf
gs
jmp
add
mov
mov
cs
add
sub
lods
sub
jmp
adc
sub
inc
and
jmp
call
jmp
or
add
and
pop
add
push
call
sub
add
add
jmp
sub
sub
adc
add
or
outsl
sbb
or
xor
add
add
stos
or
les
mov
or
pusha
or
orl
adc
call
jmp
inc
shlb
sbb
sub
sbb
cld
jmp
and
leave
popf
jmp
lahf
pop
sbb
pop
jmp
sti
notl
xchg
mov
and
adc
sbb
add
sub
add
add
rorl
adc
jo
pop
xchg
insb
pop
pusha
or
pusha
or
sub
or
iret
mov
jmp
sbbl
lret
add
add
push
call
jmp
dec
rolb
sarb
int
int
pushl
jmp
xchg
or
pop
leave
test
fisubs
mov
iret
jmp
int3
popf
mov
out
jmp
mov
and
outsl
sub
add
outsl
add
pusha
adc
imul
or
iret
aad
lds
xchg
lea
jg
aaa
adc
fildll
add
pop
pusha
add
pusha
xor
adc
add
add
jmp
divl
mov
dec
adc
jne
jo
jmp
and
jmp
int3
popf
push
decb
les
add
add
imul
inc
mov
mov
mov
andb
sub
jmp
xor
subb
dec
add
mov
sub
fcompl
test
imul
xchg
jb
lods
and
inc
pushf
adc
pop
int3
stos
data16
mov
ret
jl
imul
or
mov
jne
addl
mov
jmp
adc
dec
jo
jmp
jl
pusha
pop
repnz
mov
jmp
test
jecxz
mov
jmp
orl
sahf
or
cmpsb
adc
or
push
pop
into
pop
cmp
addr16
adc
in
add
or
outsl
adc
pusha
or
sbb
add
imul
cmp
popa
pop
pusha
add
pusha
add
cmc
adc
adc
push
lea
roll
shll
push
imul
pop
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
add
add
lret
lret
adc
lahf
punpckhdq
hlt
pop
ror
dec
fistpll
daa
inc
mov
cli
jo
xorl
mov
inc
es
xchg
sbb
test
pop
test
pop
aad
sub
or
lock
scas
lret
and
and
imul
or
dec
cwtl
setg
or
add
enter
jbe
loopne
addr16
pop
repnz
sub
inc
fimull
fidivrl
or
jno
je
lea
jno
xorb
jmp
cmp
sbb
add
add
mov
pop
dec
jo
jmp
out
loope
jae
pop
leave
pop
cmp
outsb
sbb
call
adc
adc
pusha
add
sub
push
repnz
adc
int3
popf
test
rolb
jne
or
add
cmc
cmpsb
xchg
in
add
or
outsl
sbb
or
xor
adc
adc
in
mov
add
jmp
rorl
mov
xor
dec
mov
mov
sub
call
add
jmp
stos
cmp
loopne
adc
sub
insl
std
test
push
add
test
jmp
lods
hlt
je
lea
rolb
shlb
push
adc
and
jmp
xor
jmp
cli
jl
jne
jp
in
bound
ds
test
jp
insl
hlt
pop
in
fsubr
outsl
xor
sbb
adc
pusha
or
dec
pop
or
iret
mov
fistl
dec
sub
add
call
jno
pop
add
pop
pusha
or
pusha
xor
sbb
adc
js
addr16
or
cmp
xor
adc
sbb
add
pusha
xor
add
add
aam
adc
jo
mov
add
add
pop
or
iret
or
aaa
js
push
call
xor
daa
mov
and
stos
pop
sub
loope
insl
lds
add
call
mov
pop
ret
jmp
fimull
mov
inc
and
pusha
push
rclb
imul
pop
push
call
lods
cmp
pop
push
call
push
call
imul
lret
stos
rclw
stos
push
out
mov
pop
and
pop
add
call
sbb
push
shlb
out
stc
sbbl
movsl
dec
pop
jmp
aad
ret
mov
adc
ficompl
adcl
sti
in
adc
cld
ljmp
pop
pusha
add
and
adc
adc
addr16
sbb
xor
add
add
outsl
sbb
add
xor
push
or
iret
jge
xchg
testb
call
add
xchg
jmp
pushf
and
ljmp
stc
stc
call
mov
mov
add
add
mov
cwtl
push
imul
push
xor
cmp
bound
inc
jo
add
pop
pusha
or
xor
sbb
adc
jns
pusha
pop
repnz
pop
cmp
sub
call
pusha
sub
add
add
outsl
and
add
jo
add
add
lods
or
les
outsl
dec
loopne
pusha
or
or
sbb
adc
xchg
sbb
les
int3
imul
or
iret
test
lock
sub
jo
add
add
pop
pusha
add
and
and
adc
fadd
mov
jmp
aas
fwait
dec
andb
jmp
dec
lret
pop
ds
sbb
pop
leave
inc
fidivrl
test
rorb
lds
fmuls
fsubrs
and
lock
inc
sbb
dec
call
add
add
mov
jmp
sti
jae
xchg
out
js
mov
out
lods
sub
jmp
repz
pushf
outsl
jle
mov
push
mov
js
pop
popa
mov
ret
sti
pusha
notb
popa
call
add
add
sbb
sub
movsl
xor
cmp
cli
push
jo
jmp
and
jmp
mov
push
adc
jns
imul
inc
es
jle
insb
or
out
ficomps
xchg
xorb
cwtl
outsl
xor
and
adc
pusha
or
imul
or
iret
fiaddl
ret
jmp
addl
jmp
in
lock
bound
inc
xor
es
mov
mov
cmpsl
ret
test
outsl
xor
pusha
add
add
add
pusha
or
dec
pusha
or
outsl
or
pusha
or
dec
pusha
or
adc
imul
adc
imul
hlt
popa
fistpl
or
jo
ljmp
pop
pusha
add
and
sbb
adc
popf
adc
repz
je
jmp
mov
add
jmp
jne
insb
or
in
add
mov
scas
leave
cmp
popf
and
push
add
mov
movzbl
add
cmp
jmp
idivb
mov
sbb
push
fdiv
popl
jmp
push
jmp
cmpsl
aaa
push
mov
mov
lea
mov
dec
mov
outsl
lcall
decl
lea
jmp
jno
push
jmp
fisttpll
mov
inc
and
pusha
sbb
stc
adc
jmp
pushf
or
dec
fdivrs
call
xor
mov
add
pusha
hlt
push
cld
dec
fisttps
mov
loop
je
pop
cmc
cmp
mulb
adc
adc
pusha
or
sub
add
imul
or
les
fsubrs
pusha
or
push
or
iret
int
xor
jmp
inc
fmuls
fdivrs
hlt
insb
loop
je
pop
int
addr16
sti
psubd
sahf
push
jmp
add
or
xor
jl
jo
loop
aad
fdivrs
pop
ds
nop
adc
test
je
push
jmp
insb
cli
loope
call
jp
lret
fs
call
jmp
pop
mov
jmp
sub
and
jbe
add
push
jge
adc
sub
mov
es
add
dec
mov
test
movsb
ret
mov
mov
inc
mov
sbb
add
and
xor
or
pop
lods
add
xchg
add
xor
add
pop
fimull
fimull
xorl
mov
mov
sbb
add
push
jo
clc
mov
push
call
jmp
lcall
xor
and
push
pop
out
push
arpl
xor
dec
xor
mov
jmp
int3
inc
shlb
cs
mov
jmp
xorl
scas
leave
cmp
mov
jmp
inc
rolb
shlb
notl
dec
das
fisubrl
arpl
xchg
gs
xor
add
add
pop
pusha
add
imul
mov
pop
adc
sub
rcll
jae
das
mov
std
insl
hlt
pop
mov
mov
jg
sub
imul
pop
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
add
add
jns
pop
gs
jg
jmp
dec
mov
mov
jg
bound
inc
and
mov
and
dec
frstor
pop
ljmp
fildl
mov
inc
fimuls
add
outsl
lcall
xor
dec
dec
fidivrs
or
cmpsb
and
jmp
sarb
jbe
fs
push
lods
xor
clc
outsb
or
push
push
inc
and
or
xchg
mov
out
jg
jmp
xor
xor
inc
and
jno
jecxz
lods
scas
lods
jns
jno
jecxz
ds
cmp
dec
clc
dec
addr16
js
push
call
add
mov
std
incl
jmp
loope
test
jmp
and
ret
jmp
sbb
sub
xor
mov
dec
roll
rcll
cmpsb
fstpl
cmp
std
mov
mov
repz
dec
fidivrs
xor
dec
jae
pusha
pop
repnz
mov
and
adc
cmpsb
and
cmpsb
xor
scas
jns
push
mov
es
jmp
jmp
aam
mov
fistpll
sub
pop
mov
icebp
decl
sbb
push
mov
idivl
mov
test
mov
das
stc
rcll
lcall
xchg
add
push
rcrl
cmc
add
add
xchg
jle
bound
or
xor
outsl
xor
pusha
add
or
or
or
pusha
or
dec
pusha
or
outsl
add
pusha
or
dec
pusha
or
adc
imul
adc
mov
mov
ja
xor
pusha
adc
add
add
outsl
and
add
imul
or
iret
push
ret
ret
cmpsb
mov
add
add
jmp
mov
ja
stos
popa
jmp
jo
jmp
mov
mov
cs
js
jge
negl
xor
push
push
lret
pop
ds
mov
mov
mov
andb
sub
jmp
mov
jmp
xchg
or
dec
fdivrs
mov
jns
mov
ret
and
jmp
mov
and
cli
dec
aam
sub
out
jo
xchg
std
or
ljmp
lret
add
xchg
popf
pushl
jmp
xchg
std
or
fistps
xchg
lea
int3
aas
fadds
repz
add
add
pop
and
rorb
in
test
jmp
jp
xchg
testb
and
or
das
aam
subb
add
add
pop
pusha
adc
imul
adc
add
sbb
xchg
filds
bound
aaa
jmp
dec
lds
iret
das
pop
inc
and
cmp
add
ja
jmp
rcrl
test
add
xor
pop
cmp
add
adc
arpl
jne
addl
mov
movzbl
jmp
ss
into
inc
shll
push
push
inc
jmp
xor
xor
pop
and
add
popl
jmp
adc
inc
popf
push
jmp
xlat
inc
aam
dec
out
pop
repnz
fs
pop
int
and
jl
cmp
add
add
jmp
mov
cmp
rcrb
and
lea
jmp
push
jmp
adc
sbb
xchg
push
scas
xor
int
ficomps
cmp
ja
loope
push
imul
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
imul
adc
add
xchg
setg
or
je
xor
rorb
shll
dec
mov
stos
data16
inc
and
cmp
sub
add
add
outsl
and
add
jo
add
add
mov
adc
jo
rcrl
pop
pusha
add
add
or
adc
repz
mov
movsb
aas
mov
jmp
mov
movsl
int3
aas
ljmp
sbb
push
lahf
push
mov
xchg
sub
push
push
push
xor
push
push
push
push
call
pop
mov
jmp
mov
sub
ret
decl
adc
inc
rolb
roll
ret
sub
inc
fidivrl
jb
cmp
inc
les
dec
pop
xlat
inc
and
cmp
pop
aad
leave
test
loope
cld
fwait
jbe
and
ret
inc
jmp
dec
rcll
add
xor
push
sub
incb
imul
pop
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
movb
jmp
mulb
push
dec
fdivl
in
xlat
inc
aam
dec
out
iret
mov
adc
sub
inc
lret
dec
movb
movb
movb
movb
jmp
pop
mov
jmp
push
cwtl
push
imul
mov
roll
dec
jmp
movb
jmp
xchg
or
jo
movb
jmp
lea
test
push
cld
add
dec
je
arpl
cmc
sbb
movb
jmp
mov
mov
sbb
and
pop
cwtl
sbb
leave
pop
cmp
and
bound
movb
movb
movb
movb
jmp
ficomps
stos
data16
outsl
or
loop
mov
jg
je
incl
xchg
movb
movb
movb
jmp
jg
mov
cwtl
sbb
aad
shll
les
jg
jmp
inc
xlat
pop
jmp
sub
dec
push
fimull
fidivrl
mov
iret
fisttps
sbb
ljmp
pop
pusha
add
and
sub
adc
xor
je
inc
loop
jmp
movb
jmp
movb
jmp
lods
and
xchg
add
push
lahf
adc
and
push
movb
movb
movb
movb
jmp
test
push
push
xor
pop
lret
lret
jns
mov
aam
pop
movb
jmp
lds
insb
jmp
jno
pop
out
movb
jmp
adcl
dec
loopne
icebp
popa
add
inc
dec
fisttpll
out
loopne
inc
fcomps
inc
fstps
inc
fisubl
inc
inc
fsubl
xchg
lock
mov
stc
mov
inc
movb
jmp
fadds
mov
stos
fildl
mov
stos
leave
push
lds
sahf
ret
movb
jmp
notl
push
test
jge
inc
addb
repnz
mulps
add
pop
pusha
add
xor
sbb
adc
fistps
xchg
lea
jecxz
sti
pop
inc
add
je
ss
push
cld
out
inc
out
jbe
dec
mov
xchg
test
mov
jle
mov
sub
outsl
loopne
cmp
inc
in
jae
leave
jno
mov
out
jne
int
pop
int3
stos
data16
jle
mov
push
std
or
jbe
loopne
mov
jmp
aad
add
inc
lock
pop
cmp
add
aaa
cmpsl
ret
loopne
sub
ljmp
inc
icebp
js
sub
jecxz
push
in
add
nop
add
jo
and
in
or
or
or
and
or
pusha
adc
inc
sub
adc
movb
jmp
js
jg
jmp
mov
lods
lret
inc
out
repnz
pop
repnz
mov
imul
or
iret
in
movb
jmp
movb
jmp
sub
sbb
outsl
lcall
mov
call
jmp
xor
xchg
movb
jmp
inc
movb
jmp
add
xor
dec
andl
and
pop
lods
sub
sub
xor
add
add
adc
imul
adc
push
imul
and
or
imul
adc
jle
sub
mov
or
outsl
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
imul
adc
add
add
and
mov
inc
cmc
enter
pop
into
mull
icebp
dec
push
xchg
pop
bound
sbb
inc
jb
jne
out
dec
jp
jbe
loopne
arpl
xchg
andl
pop
sahf
or
cmpsb
dec
dec
fidivrs
sub
arpl
xchg
gs
mov
scas
lret
mov
cli
popf
insb
mov
mov
icebp
jbe
cmpl
and
lahf
punpckhdq
out
sbb
push
fwait
or
jns
sub
jno
xorb
push
pushf
sti
push
mov
xchg
add
sahf
dec
push
je
out
sub
insl
std
test
dec
fmuls
fsubrs
sub
push
ret
push
shlb
add
add
dec
fdivrl
outsl
adc
adc
pusha
or
or
or
or
pusha
adc
in
add
pop
in
sbb
pusha
or
or
or
pusha
or
pusha
or
pusha
or
pusha
or
js
or
pop
pusha
or
faddp
inc
std
cmp
movsb
add
add
test
pop
test
cmp
push
xor
pop
ds
enter
push
test
mov
clc
xor
inc
stc
xor
movb
movb
jmp
fs
adc
ss
jmp
leave
push
ret
cmpsb
push
cmpsb
or
pusha
pop
inc
and
sub
repz
mov
mov
imul
movsbl
push
jmp
xor
div
mov
jmp
inc
enter
sub
pop
xchg
adc
inc
int
and
jb
int3
inc
and
inc
sub
jmp
xchg
pop
nop
and
jecxz
push
in
in
dec
aad
lock
jmp
arpl
add
pop
stc
sub
subb
pop
jmp
push
mov
jmp
fisttpl
mov
aas
pop
test
repz
mov
and
adc
pop
adc
sbb
sub
adc
daa
cmp
adc
sub
jmp
fwait
or
in
mov
sahf
sub
arpl
xchg
les
imul
jmp
xchg
mov
and
cwtl
imul
fsincos
lock
bound
mov
mov
jmp
pushf
add
test
mov
call
mov
add
jmp
outsl
in
bound
cmp
inc
scas
cs
cli
push
call
jmp
hlt
jno
xorb
std
insl
hlt
pop
lock
dec
clc
adcl
test
inc
shlb
in
jle
xchg
and
dec
je
cmp
jl
mov
jmp
xor
jmp
sbb
iret
inc
xlat
mov
call
les
xchg
out
jo
jmp
mov
scas
leave
cmp
xchg
cltd
clc
or
mov
std
outsb
cld
fwait
jbe
mov
or
iret
add
imul
adc
fmull
push
in
pop
xchg
repnz
mov
ja
mov
ds
add
add
add
sbb
add
pusha
xor
sub
adc
mov
pop
leave
pop
cmp
pusha
pop
enter
jg
popf
or
push
shlb
rorb
shr
sbb
incl
jl
jmp
aam
frstor
sub
xor
incl
fcmovu
push
out
pop
jmp
add
dec
add
dec
rolb
rclb
xlat
inc
and
push
loope
xor
pop
leave
ret
jmp
mov
in
jae
xchg
pop
fdivl
in
add
jg
jp
call
jmp
xchg
jmp
test
jge
add
jg
outsb
or
das
dec
iret
pop
cmp
and
outsb
cld
fwait
jbe
cmp
div
jmp
add
fucomip
leave
enter
inc
mov
jns
mov
pop
xlat
inc
and
cmp
imul
xchg
push
outsl
adc
cld
ljmp
pop
pusha
or
imul
adc
ret
movsl
push
repz
sti
imul
int
or
iret
add
imul
or
iret
int3
inc
shll
out
jo
xor
mov
mov
andb
sub
jmp
xchg
sbb
aad
adcl
sbb
cmp
arpl
in
jl
jne
xor
xor
je
jo
loop
pop
int
and
jl
push
ret
cmpsb
push
in
mov
enter
xor
mov
jmp
mov
mov
sar
inc
adc
in
dec
mov
and
cmp
jne
addl
jmp
jbe
movzbl
jmp
pop
push
xor
or
pushf
xor
inc
rorl
mov
sti
faddl
push
mov
jmp
add
icebp
popa
add
jbe
test
mov
popa
jmp
add
jmp
add
inc
mov
lret
std
test
xchg
sbb
add
or
iret
xor
outsl
call
imul
outsl
xor
pusha
or
or
outsl
or
add
dec
pusha
add
outsl
or
pusha
add
dec
pusha
add
adc
jo
add
add
ret
or
les
push
inc
lret
pop
pusha
or
pusha
or
adc
or
iret
in
imul
xchg
dec
jecxz
pop
jmp
popl
jmp
push
aam
sub
into
test
clc
lahf
push
sbb
mov
jmp
xlat
arpl
xchg
gs
data16
cmc
adc
mov
ror
popf
push
rcll
push
test
jmp
test
mov
and
push
adcb
andb
pop
jp
inc
jle
pusha
pop
repnz
mov
sub
jl
test
jmp
leave
inc
fidivrl
in
and
lea
jmp
inc
sub
add
jns
inc
shll
arpl
cmc
pop
adc
xor
das
stc
outsl
xor
dec
pusha
add
add
add
add
pusha
adc
in
add
pop
in
sbb
pusha
or
or
or
pusha
or
pusha
or
pusha
or
pusha
or
ret
adc
or
aas
scas
aas
pop
test
out
sbb
dec
jno
ds
ret
push
call
jg
js
ljmp
loop
mov
loop
mov
xchg
setg
or
cli
pop
das
or
push
push
call
dec
lods
pop
jmp
add
jmp
adc
add
jnp
movsl
xor
pushf
xor
and
or
outsl
xor
or
imul
inc
or
iret
add
add
shrl
scas
aas
pop
test
fisubrs
mov
or
pop
lret
mov
int
rorl
dec
sub
dec
push
add
mov
js
inc
cmp
dec
roll
aad
mov
sub
jmp
mov
lret
and
ljmp
mov
add
add
ljmp
pop
pusha
or
imul
test
outsl
jle
xchg
xchg
imul
or
iret
repnz
sub
add
add
outsl
add
pusha
adc
imul
or
iret
push
adcl
pusha
mov
mov
mov
andb
sub
jmp
mov
jmp
push
ret
cmpsb
push
mov
into
sub
fisttps
flds
sub
push
or
pop
popa
mov
ret
mov
shlb
repz
gs
push
shlb
loopne
mov
lcall
and
jmp
arpl
addr16
dec
cmp
sbb
xchg
add
and
xchg
popf
pushl
mov
jmp
cmp
jne
addl
mov
jmp
adc
push
mov
test
cmp
aam
movzbl
jmp
imul
divl
xchg
or
sub
popa
sahf
cmp
add
or
outsl
sbb
or
xor
and
stos
cmp
inc
xchg
adc
dec
imul
pop
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
add
add
xchg
mulb
dec
push
les
int3
imul
in
je
inc
fildl
mov
mov
loop
mov
mov
sti
imul
jl
lock
ja
mov
xchg
adc
mov
cltd
clc
or
xor
addr16
adc
adc
push
cmp
sbb
dec
sub
adc
dec
sub
xor
pop
and
es
sbb
out
jg
jmp
aaa
ret
adc
mov
sub
jnp
fs
pop
add
add
sahf
sub
imul
push
mov
mov
push
xor
imul
call
sub
xchg
or
sub
add
add
adc
mov
aam
jmp
sub
and
test
rclb
mov
shll
jae
imul
ret
adc
cld
ljmp
pop
pusha
or
imul
or
iret
inc
adc
stos
mov
jmp
movb
dec
test
ret
ret
popl
lea
jmp
lahf
sbb
cmp
mov
inc
mov
adc
pop
adc
xor
test
jge
fs
sbb
adcl
pop
dec
cmp
je
popa
mov
jmp
xchg
pushf
sti
push
in
cmpl
je
mov
jmp
mov
jmp
xlat
pop
iret
stos
pop
sarb
sub
outsl
stos
imul
jecxz
call
jmp
xchg
cltd
clc
or
jne
outsb
or
pop
data16
push
cld
dec
mov
shr
add
add
pushf
mov
cmp
add
xchg
add
cmp
aas
lret
jg
mov
or
jo
add
add
add
add
pop
pusha
add
imul
adc
xor
adc
add
mov
add
sub
rclb
ja
enter
outsl
pop
mov
test
jmp
aad
fdivrl
adc
imul
mov
jp
movzwl
jmp
xchg
adc
lods
and
xor
jg
jmp
out
sbb
in
add
or
outsl
sbb
or
sub
xor
adc
mov
rorb
pop
and
cmp
jmp
inc
les
int3
sub
cwtl
push
imul
push
ret
cmpsb
push
cmpsb
dec
out
outsl
sub
add
outsl
or
pusha
adc
imul
or
iret
jo
imul
adc
dec
adc
push
pop
aam
sub
lret
scas
pop
mov
jmp
sub
adcl
out
mov
push
jmp
rcrl
fs
rolb
rclb
lcall
int
mov
out
push
xchg
repz
mov
test
call
leave
mov
fstps
leave
and
mov
ret
jmp
lods
cmp
mov
in
addr16
jmp
mov
add
mov
sbb
lea
jbe
loopne
test
hlt
pop
cltd
adc
inc
inc
popf
jmp
daa
mov
inc
mov
inc
fisttps
fldenv
ja
xorb
xchg
or
jbe
sub
sub
jmp
push
mov
out
mov
add
add
movb
add
mov
ss
pop
test
cltd
adc
xor
add
add
pop
pusha
or
imul
adc
mov
test
outsb
cmpsl
pop
pushf
xor
dec
repz
xorb
pusha
mov
jmp
out
outsb
cld
fwait
jbe
and
int3
dec
fnstcw
mov
cmp
test
mov
insb
loop
je
mov
scas
lret
pop
push
push
pop
mov
jmp
out
andb
jmp
popa
jmp
clc
jno
xorb
inc
aad
dec
test
outsb
popf
and
dec
sub
flds
rcrb
fs
enter
dec
cltd
pop
xchg
add
push
cwtl
jo
pop
out
mov
jmp
sub
ret
mov
and
mov
les
or
iret
add
fwait
or
sbb
xchg
cmp
lds
jo
jmp
call
sub
or
xor
in
in
je
inc
push
mov
ret
addr16
xchg
cmc
add
adc
nop
setg
or
push
push
das
mov
add
jne
addl
jmp
push
mov
ret
cmp
inc
and
pop
inc
jecxz
push
in
lahf
and
outsl
lcall
jge
movzbl
jmp
or
pop
cmp
jmp
sahf
or
js
jmp
icebp
dec
jmp
cmpsl
and
dec
into
pop
cmp
xor
pop
loop
js
insl
hlt
pop
ror
mov
jmp
fwait
in
mov
test
mov
add
dec
lcall
rcrb
icebp
imul
js
pusha
pusha
sub
add
add
outsl
and
or
imul
or
iret
sahf
adc
in
sbb
daa
lods
and
push
test
mov
jmp
push
jmp
cli
jb
xchg
inc
enter
cmp
jns
jmp
jbe
outsl
or
shrl
fdivl
push
jmp
xor
fcmovb
dec
fdivrl
pushf
sti
push
mov
iret
mov
jmp
mov
mov
sbb
cmpsb
leave
pop
iret
stos
pop
stos
cmp
rorl
or
add
xor
ja
xorb
clc
outsb
or
dec
cmc
gs
pop
mov
inc
xchg
push
jmp
sbbb
jmp
lea
jmp
cs
arpl
imul
cmpsb
shll
jl
xchg
pop
popl
jmp
mov
roll
push
imul
add
ret
sub
repz
xorl
gs
xchg
mov
imul
pop
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
call
jmp
scas
das
mov
call
jmp
out
adc
cmp
xchg
testb
xchg
jnp
data16
xchg
outsb
popf
inc
jo
add
pop
pusha
add
imul
adc
cmp
adc
add
ret
push
lds
pushl
mov
add
xchg
testl
add
and
popf
pushf
pop
mov
testl
jmp
pop
mov
jmp
mov
test
mov
jns
das
es
aas
pop
test
lock
rol
rolb
add
jmp
dec
fnstcw
inc
and
js
xchg
add
and
mov
stos
add
imul
insl
fisubrl
testb
jne
jmp
jbe
jbe
loopne
pop
int3
inc
and
cmc
pushf
outsl
fisubrl
loope
jl
push
jmp
imul
add
cmp
mov
inc
or
inc
dec
rolb
shlb
pop
lret
pop
ds
aam
ret
cmpsb
push
mov
mov
pop
pusha
sub
add
add
outsl
and
add
imul
or
iret
lahf
add
adc
pop
enter
ficomps
mov
mov
mov
jmp
dec
lods
cpuid
jmp
test
mov
jmp
aad
lret
scas
pop
mov
jmp
rclb
pop
mov
lahf
dec
hlt
mov
jmp
lock
lea
inc
mov
test
pop
leave
test
stos
push
adc
inc
or
mov
cmpsl
inc
loop
push
add
sub
mov
jg
fs
or
sti
pop
jecxz
loop
je
out
add
mov
cli
jbe
cmpl
rcr
mov
cpuid
jmp
cmp
xchg
pop
xchg
repnz
in
inc
gs
imul
dec
adcl
incl
jmp
cld
jae
xchg
xor
ret
push
lret
cmc
je
nop
pop
outsl
xor
pusha
add
outsl
or
dec
pusha
or
add
or
add
dec
pusha
or
or
or
pusha
adc
imul
adc
imul
or
iret
iret
pop
leave
test
out
mov
xchg
nop
or
in
sbb
sub
or
pushl
jmp
test
inc
cmp
jmp
inc
fisttpll
out
jnp
jo
loop
pusha
notb
jns
jmp
mov
pushl
call
mov
lea
jmp
lods
sub
in
outsb
cld
fwait
jbe
lods
sub
lds
sbb
mov
call
jmp
jg
out
jle
shr
add
add
xchg
jb
push
jae
push
or
push
add
add
mov
sub
lock
lea
clc
in
pusha
xchg
and
jmp
movl
pushf
xor
push
mov
test
cmp
jno
outsl
or
jecxz
pop
out
in
add
add
add
sbb
add
pusha
sub
das
or
iret
jp
popa
add
add
add
ljmp
pop
pusha
or
and
push
or
imul
add
hlt
push
mov
mov
xchg
add
arpl
xchg
gs
cmpsl
aaa
push
mov
adc
aad
dec
movsl
mov
stos
into
cmp
push
movsb
inc
mov
lcall
jge
je
jo
fwait
or
jae
lahf
punpckhdq
cmp
xchg
adc
clc
ja
xorb
insb
loop
je
xlat
pop
into
test
stc
cwtl
imul
xlat
aaa
stos
cmp
sbb
push
cld
insl
add
test
pop
test
int3
pop
enter
out
out
jo
mov
mov
das
lcall
lcall
pop
lret
scas
pop
mov
or
movsl
xor
push
add
push
ret
cmpsb
push
hlt
lret
mov
xchg
cld
bswap
lret
mov
mov
jmp
scas
inc
shll
lahf
cli
or
pop
mov
jmp
lds
pop
cmc
inc
mov
repnz
xchg
jb
and
imul
or
iret
cmp
and
jo
add
add
pop
pusha
or
imul
or
iret
sbb
je
imul
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
rorb
mov
adc
arpl
jns
clc
outsb
or
adc
mov
xchg
add
add
loop
jns
jne
out
push
and
inc
fidivrl
pushl
call
mov
lea
push
push
call
jmp
insb
in
jge
negl
dec
adc
jmp
mov
lods
sbb
inc
push
in
add
aam
shlb
or
das
loopne
cli
popf
insb
cltd
push
aad
sub
xor
push
push
pushl
call
pushl
push
jmp
cmp
cmp
and
or
bound
mov
jl
jmp
push
jmp
out
cld
fwait
jbe
and
push
mov
fwait
decb
pushf
cmp
imul
pop
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
mov
clc
cmpsl
pop
adc
aam
jmp
call
lea
jmp
xor
gs
call
aas
lahf
adc
movsl
xor
mov
inc
mov
lea
dec
pop
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
sub
nop
add
add
jmp
sub
pop
pop
iret
pop
cmp
jle
rolb
shlb
stos
cmp
add
and
sbb
push
cmp
call
pop
pop
xor
pop
leave
ret
jmp
out
jp
jp
jbe
jno
jecxz
daa
ret
push
lds
lret
sbb
jo
call
add
jmp
mov
and
std
dec
popf
jmp
cmp
mov
jmp
push
roll
aad
mov
and
add
adc
mov
js
jmp
insb
out
jl
idivb
mov
stos
int
aam
adc
pushl
jmp
mov
lods
push
aad
sub
cmp
mov
cmp
add
add
pop
pusha
add
xor
inc
or
iret
rcll
pop
mov
arpl
cmc
push
mov
inc
insb
jmp
sbb
jo
test
dec
lret
pop
ds
mov
scas
lret
out
jb
lock
or
iret
movsl
sub
js
pusha
jmp
popa
jmp
push
jno
jecxz
fcoml
cmpsl
push
cmc
pop
roll
roll
out
xor
or
outsl
xor
outsl
sub
outsl
add
sbb
sbb
outsl
adc
imul
or
iret
add
add
cmpl
lods
lret
inc
mov
pop
mov
xchg
or
imul
mov
ds
add
xor
or
mov
cmp
and
sbb
dec
push
xor
push
daa
xchg
adcb
loop
mov
push
test
push
scas
add
xor
cmc
inc
outsl
clc
outsb
or
push
adc
xchg
and
shll
outsl
lcall
dec
lea
in
sbb
in
jno
xorb
icebp
popa
add
jbe
mov
inc
mov
imul
rorb
fldl
add
add
je
lea
or
mov
les
or
and
or
inc
or
iret
add
inc
adc
or
or
jmp
jmp
rcll
out
mov
mov
mov
andb
sub
jo
jmp
pop
roll
aad
loopne
in
jg
inc
aad
sub
push
scas
aas
pop
test
cltd
roll
add
or
pop
cmp
jmp
sbb
adc
mov
hlt
push
cld
push
ja
jge
negl
mov
xchg
adc
xor
outsl
xor
add
add
add
add
pusha
adc
in
add
pop
in
sbb
pusha
or
outsl
or
or
pusha
or
pusha
or
pusha
or
dec
or
pop
pusha
or
lea
and
js
ljmp
pop
fcoms
jmp
xor
out
cli
popf
insb
test
into
aas
jae
mov
movzbl
add
jmp
repz
dec
in
test
std
jmp
push
aad
sub
cmp
rolb
add
jmp
push
roll
shrl
lret
cmpsb
push
test
push
les
insb
or
out
int3
mov
push
jne
addl
jmp
loopne
clc
lahf
push
pushf
popa
jmp
cmp
inc
jnp
je
jmp
add
add
jmp
pop
xlat
inc
and
cmp
sub
mov
mov
add
in
ljmp
mov
popf
call
fs
jmp
pop
into
test
leave
test
ficomps
rorb
sub
adc
push
fisttpll
out
jo
xchg
cmc
add
or
vrsqrtps
sbb
add
jmp
mov
inc
mov
jmp
dec
les
int3
imul
push
rcll
push
ret
ficoml
add
or
outsl
and
or
dec
or
iret
push
jmp
cli
imul
sbb
dec
fdivrs
arpl
cmc
inc
adc
and
jmp
adc
lea
jmp
inc
rolb
shlb
sub
mov
inc
mov
shr
adc
and
add
dec
or
iret
jo
add
add
pop
pusha
or
outsl
sbb
pusha
or
or
or
pusha
or
dec
pusha
or
outsl
add
pusha
or
dec
pusha
or
adc
add
add
pop
pusha
add
lods
dec
or
iret
cmp
cmp
inc
sbbl
out
sbb
mov
inc
and
push
in
jmp
push
pushf
sti
push
xchg
pop
fwait
or
push
pop
into
out
movb
jmp
push
fisttpl
fnsave
jge
je
insl
aas
mov
pop
and
loope
fistl
inc
and
inc
and
inc
and
iret
hlt
sub
inc
es
inc
push
xlat
inc
and
and
jle
call
out
out
push
aad
adc
movb
jmp
bnd
mov
mov
test
jbe
cmpl
fisttpll
out
enter
lret
inc
shlb
movb
jmp
movb
jmp
popf
adc
out
adc
cmp
jo
xorl
inc
or
iret
add
imul
or
iret
or
daa
mov
out
xor
pusha
or
pop
pusha
adc
jo
add
add
sbb
adc
jo
das
in
sbbl
imul
adc
or
xor
pop
xor
cmp
mov
jmp
mov
mov
roll
aad
and
stos
lret
movb
movb
jmp
push
lea
inc
aam
dec
cld
inc
mov
inc
add
jmp
fisttps
mov
jo
jnp
in
dec
in
jne
mov
push
sub
inc
sub
inc
sub
inc
sub
inc
sub
jmp
sete
insl
pushf
jle
aaa
cmpsl
ret
and
loop
adc
add
inc
movsb
push
push
jmp
sub
add
inc
jmp
cltd
push
lcall
inc
movsb
inc
jmp
leave
dec
fidivrs
mov
arpl
xchg
gs
or
fsubl
outsl
sbb
ljmp
pop
pusha
add
and
inc
or
iret
jo
add
add
pop
pusha
or
xor
dec
or
iret
pusha
in
sbb
or
jb
inc
aam
dec
mov
arpl
pop
mov
xor
inc
fidivrl
xchg
cld
psubsw
inc
shlb
addr16
movb
movb
movb
movb
movb
jmp
xchg
lahf
cli
or
jo
push
popf
or
adc
test
jge
sub
xchg
lods
movb
movb
movb
movb
movb
jmp
sti
push
xor
cmp
sbb
xchg
cmp
mov
inc
mov
es
sbb
call
jmp
or
setns
push
in
je
and
mov
jmp
mov
jmp
mov
jmp
icebp
imul
jle
mov
ret
pusha
sub
add
add
outsl
and
add
and
or
iret
xchg
jno
inc
call
jmp
pop
les
int3
and
push
lret
fstpt
mov
xor
je
mov
xor
pusha
add
add
pusha
adc
imul
jmp
insb
jmp
or
rep
xchg
movb
jmp
movb
jmp
adc
pushf
sbb
aad
int3
and
xchg
adc
in
sbb
call
movb
movb
movb
movb
jmp
aad
shlb
xor
jmp
sbb
loope
cli
popf
insb
test
lret
mov
sbb
sbb
cs
pushf
adc
in
sbb
in
sbb
xor
repnz
push
les
push
aaa
ret
cmp
outsl
sub
add
add
pusha
add
pop
pusha
adc
imul
xor
mov
in
cmpsl
pop
adc
clc
movb
movb
jmp
add
in
jge
notl
pop
imull
inc
pop
movb
movb
jmp
mov
mov
and
js
mov
mov
jb
xchg
int
inc
or
xor
xor
adc
jo
xorl
dec
cli
jbe
jno
jecxz
add
add
add
inc
add
movb
movb
jmp
movb
jmp
mov
sti
loopne
jmp
ljmp
mov
icebp
loop
inc
or
inc
or
inc
or
movb
jmp
xchg
fstl
psubsw
add
movsl
xor
lret
xor
add
add
mov
xchg
or
insb
loop
je
dec
leave
pop
cmp
and
jo
add
add
pop
pusha
add
pusha
xor
dec
or
iret
push
mov
xchg
jle
imul
insl
mov
inc
xlat
mov
mov
lock
add
dec
or
iret
sub
cmp
jle
icebp
popa
add
add
aaa
cmpsl
ret
int
and
outsl
xor
pusha
or
outsl
or
add
or
pusha
add
or
or
pusha
add
or
add
pusha
adc
imul
or
iret
push
fimull
fisubrl
push
push
or
es
xchg
testb
popa
mov
inc
shlb
push
xor
shrl
addb
jmp
sbb
or
xor
jmp
xchg
mov
adc
jmp
lea
nop
testl
insb
lahf
pop
xchg
cltd
clc
or
push
loopne
xor
pushl
mov
call
jmp
mov
decb
adc
mov
loope
xor
gs
pushl
jmp
push
sahf
or
cmpsb
pop
in
jl
jne
sub
mov
push
push
call
push
jmp
mov
mov
and
sub
push
les
int3
imul
mov
pop
mov
jmp
cmp
rorb
mov
or
and
add
add
pop
pusha
or
sub
add
pop
pusha
adc
add
add
pop
pusha
or
fwait
dec
or
iret
cwtl
call
jmp
outsl
push
xchg
insb
lea
jmp
aad
mov
gs
pop
int3
stos
data16
shlb
fs
aas
push
outsl
xor
dec
pusha
or
or
or
or
pusha
adc
in
add
pop
in
sbb
or
cmp
or
imul
or
pop
pusha
add
lods
sbb
jo
add
add
pop
pusha
or
and
inc
or
iret
mov
jmp
mov
cmpsl
ret
inc
rcll
sub
vmovmskps
imul
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
in
sbb
or
data16
inc
insb
movb
movb
movb
jmp
mov
stos
int
ret
movb
movb
jmp
fcompl
test
mov
pop
repnz
fs
rcll
mov
mov
popa
jmp
xchg
sbb
mov
rolb
lea
xchg
sbb
movb
jmp
cmpsb
sub
adc
out
jg
jmp
gs
push
inc
sub
pusha
inc
movb
movb
movb
movb
jmp
cli
jbe
mov
jmp
jl
addr16
pop
or
and
mov
inc
outsl
insl
movb
movb
mov
call
jmp
mov
cmp
push
les
int3
jle
mov
jmp
das
mov
xor
mov
mov
push
lds
movb
movb
movb
jmp
cmpsl
call
jmp
xchg
add
ljmp
mov
movb
jmp
int3
int3
popf
mov
jmp
cmp
lock
jecxz
mov
call
mov
movb
lea
push
push
jmp
jo
pop
and
pop
imul
push
mov
jmp
and
add
jmp
adc
imul
inc
repnz
movb
movb
movb
jmp
sbb
mov
jmp
adc
add
jnp
push
call
jmp
in
call
add
xchg
clc
std
jmp
mov
push
jmp
ja
int3
popf
push
sbb
jge
inc
xor
add
rcr
mov
movb
movb
movb
movb
movb
jmp
nop
sub
add
add
xorb
add
pop
iret
stos
pop
scas
stc
jp
jp
add
mov
inc
cmp
inc
cmp
cmp
pop
cmp
es
std
jmp
int3
popf
add
data16
cmp
add
lods
inc
cmp
lea
push
push
movb
movb
movb
jmp
mov
movb
jmp
lods
xor
adcl
movb
jmp
out
add
add
jmp
pop
fisttpl
repz
mov
mull
movb
jmp
int3
popf
lock
pushf
outsl
les
mov
add
adcl
inc
movb
jmp
jae
outsl
or
hlt
imul
adc
add
mov
in
movb
movb
movb
movb
movb
jmp
movb
movb
movb
movb
mov
jmp
inc
lret
lret
repnz
pop
repnz
mov
out
jae
cmc
lods
xchg
call
jmp
movb
jmp
and
test
pop
test
mov
xchg
cwtl
fs
sub
inc
loope
movb
movb
movb
movb
jmp
movb
jmp
mov
mov
mov
cs
jle
jge
negl
mov
cs
mov
mov
popa
movb
movb
jmp
jp
arpl
cmc
pop
and
or
das
dec
mov
cmp
inc
mov
push
les
inc
sbb
xor
dec
sub
add
mov
inc
mov
jge
jp
in
add
push
lret
fcmovne
mov
lea
push
push
movb
movb
movb
jmp
ret
dec
inc
jmp
aas
jmp
jmp
jmp
stc
insb
out
jl
idivb
sub
cmp
mov
inc
mov
movb
movb
mov
call
jmp
into
mov
jmp
divl
mov
into
dec
frstor
in
jmp
aad
movb
movb
movb
movb
movb
jmp
movb
jmp
adc
ss
inc
mov
jle
imul
rcrl
inc
adc
inc
adc
adc
inc
adc
movb
jmp
in
gs
pushf
outsl
sahf
push
lret
or
inc
sbb
movb
jmp
cltd
adc
es
cs
cmp
mov
cmp
pusha
shll
jmp
mov
inc
sbb
movb
jmp
pushf
adc
push
mov
fdivrs
cmc
pop
adc
push
push
call
mov
lea
push
push
movb
jmp
pop
mov
rcll
movb
movb
movb
movb
movb
jmp
pop
add
inc
inc
gs
jbe
movb
jmp
loopne
jecxz
jne
fmull
mov
sub
adc
inc
inc
gs
ljmp
dec
jmp
movb
jmp
jne
mov
jmp
outsb
cld
fwait
jbe
xor
mov
cwtl
into
lods
into
es
int3
mov
lea
jmp
lds
cmpsl
push
sti
sub
push
lds
mov
and
cmpsb
movb
jmp
aam
frstor
pusha
xchg
jnp
or
in
cld
hlt
push
lahf
push
pop
movb
mov
call
mov
jmp
mov
call
jmp
gs
push
or
mov
cmpsl
ret
cmp
mov
jmp
sbb
scas
cs
sbb
adc
shlb
jae
scas
pop
enter
mov
jmp
lods
sub
mov
js
jl
mov
movb
movb
movb
movb
movb
jmp
nop
sbb
out
adc
sbb
inc
movsb
and
jae
test
ljmp
inc
andb
subl
xorl
and
nop
push
popa
nop
arpl
jmp
jne
imul
and
aam
into
test
movb
jmp
rcrb
xchg
addr16
call
adc
xor
mov
jl
decl
test
jmp
test
pushl
mov
xor
mov
std
decl
adc
xor
jmp
test
testb
adc
scas
leave
cmp
mov
pop
inc
jmp
test
std
jmp
adc
pop
push
lcall
notb
add
mov
inc
movb
mov
call
lea
push
push
mov
jmp
lods
cld
clc
out
adc
adc
mov
push
les
xchg
mov
jl
divb
mov
jmp
xchg
setg
or
mov
sub
sbb
push
inc
xchg
mov
add
add
repnz
jmp
in
insb
loop
je
fwait
and
arpl
xchg
gs
sbb
mov
shr
test
std
decl
loopne
push
movb
jmp
dec
pop
mov
mov
jmp
scas
sub
dec
fidivrs
in
jle
mov
aad
stc
adc
mov
les
jp
in
dec
repz
jne
push
orb
sti
push
aam
dec
call
mov
lea
push
pushl
jmp
push
jmp
dec
les
int3
imul
sti
sahf
insl
fldl
mov
ret
mov
loopne
fidivs
mov
jmp
shl
jne
mov
fisttpll
dec
jne
pushl
call
mov
mov
jmp
mulb
xchg
popa
adc
rclb
lret
call
jmp
cmp
out
add
add
mov
dec
mov
out
shll
stos
cmp
dec
add
push
sub
xor
jmp
mov
jmp
insl
hlt
push
cld
adc
fwait
or
sbb
sbb
popf
or
cmp
movb
movb
movb
movb
movb
jmp
mov
jmp
shll
pushl
jmp
inc
lds
iret
and
push
out
or
add
jbe
xor
lea
push
pushl
call
mov
jmp
lods
sub
or
in
ret
cmp
push
lds
jo
das
lea
push
jmp
add
dec
push
ds
and
std
jmp
sar
std
in
in
or
jmp
mov
in
cld
sbb
jb
outsl
or
in
lds
lea
push
pushl
call
mov
jmp
mov
mov
jmp
lahf
adc
mov
lods
mov
mov
jle
mov
movsb
push
andl
adc
xor
call
mov
jmp
int
xlat
mov
lea
jns
jmp
les
mov
cltd
sbb
jl
jmp
imul
cmc
std
jmp
sbb
aad
lea
movsb
stos
cmp
mov
clc
lret
jnp
inc
inc
jmp
dec
jecxz
push
in
cwtl
or
push
or
jmp
ret
push
lds
jb
sub
dec
fistpll
inc
sbb
inc
dec
push
pushl
call
mov
jmp
loope
inc
popa
jb
inc
bound
inc
arpl
sbb
jnp
mov
lds
xchg
mov
icebp
pop
lret
pop
ds
sbb
inc
outsb
jmp
movb
jmp
mov
ret
imul
sbb
ds
dec
fdivrs
movb
jmp
push
rolb
sarb
adc
jns
mov
sbb
jmp
imul
out
imul
es
cs
cwtl
adc
dec
mov
lea
push
movb
movb
movb
movb
jmp
leave
pop
xchg
inc
mov
inc
jno
jmp
jge
fs
sbb
mov
add
mov
xor
stos
dec
xchg
sbb
notl
aad
enter
jnp
movb
movb
movb
movb
movb
jmp
inc
jmp
repz
push
jmp
std
inc
lods
daa
movb
jmp
pop
aam
sub
hlt
xchg
outsb
leave
or
push
lret
pop
ds
add
pop
jmp
fisttps
movsb
push
in
icebp
popa
add
pop
or
rorb
mov
insl
movb
movb
mov
push
call
mov
jmp
xchg
imull
int
lahf
movb
movb
movb
movb
movb
jmp
das
or
inc
arpl
das
popf
xor
movb
jmp
or
rcll
sti
test
mov
es
ret
movb
jmp
jns
add
movb
jmp
mov
int
lods
and
pop
sbbb
call
cmp
addr16
inc
push
popa
movb
movb
jmp
test
mov
and
je
ds
jge
movb
jmp
push
aad
sub
adc
aas
scas
lret
imul
loope
push
mov
insw
movb
jmp
mov
sahf
stc
or
dec
int
and
sub
push
shlb
imul
outsb
jmp
pop
fmuls
fsubrs
pmulhw
jge
testl
mov
adc
mov
pushl
call
jmp
ss
push
lds
mov
lods
lret
inc
mov
lea
push
push
movb
jmp
dec
push
xor
cmp
sub
mov
sub
jmp
movb
jmp
out
stc
cwtl
imul
xlat
lahf
adc
pushf
jl
push
movb
mov
call
mov
mov
jmp
movb
movb
movb
movb
jmp
fisttps
push
std
mov
mov
das
pushf
lret
ret
movb
jmp
mov
jmp
cmc
fs
popf
insb
lds
scas
cmp
lea
and
inc
insb
push
movb
movb
movb
movb
jmp
ljmp
lahf
push
jnp
movb
jmp
cmp
xchg
insb
jmp
iret
pop
lret
scas
pop
cwtl
push
mov
jle
imul
mov
xchg
movb
jmp
push
int
and
cmp
pop
loopne
jno
xorb
and
jb
inc
xchg
xor
fcmovbe
push
mov
jbe
add
movb
jmp
jge
je
insl
xor
test
lret
jmp
push
in
cmp
sbb
inc
mov
inc
lea
inc
mov
inc
jb
inc
nop
xor
mov
les
int3
cmp
data16
xchg
outsb
xchg
mov
pop
xchg
jmp
lea
push
hlt
fildl
push
lods
lea
jmp
dec
ret
mov
nop
push
popa
nop
je
adc
out
std
decl
adc
add
rorb
dec
movb
movb
movb
jmp
nop
movb
jmp
scas
es
cs
push
mov
fs
sub
pushl
fcmovb
dec
fidivrs
jae
in
roll
mov
divl
cmpsl
aaa
push
mov
test
incl
lahf
scas
cmp
mulb
pushf
outsl
les
gs
dec
sbb
call
jmp
popf
or
mov
movb
jmp
jb
test
jmp
rolb
mov
stc
xchg
pop
xchg
repnz
lahf
pop
and
inc
push
movb
movb
movb
movb
jmp
inc
fisttps
flds
movb
movb
jmp
fcompl
pushf
dec
movb
jmp
sbb
lea
jmp
xchg
mov
scas
fadds
mov
leave
sub
shl
or
inc
enter
leave
imul
inc
lret
jb
inc
int3
popa
jmp
filds
mov
pushf
pop
and
test
ljmp
in
cmc
pushf
outsl
movsb
into
push
ret
cmpsb
push
mov
mov
mov
test
test
decl
test
pushl
test
ljmp
lret
loop
je
or
pushl
test
jmp
adc
dec
fnstcw
stos
int
jmp
mov
mov
movb
jmp
pop
fimull
fidivl
ficoml
mov
aad
dec
scas
sti
cltd
scas
mov
test
ljmp
push
call
jmp
gs
or
inc
dec
imul
dec
je
dec
and
push
rcrb
test
stos
lds
mov
or
xchg
call
lea
push
pushl
movb
jmp
push
cmp
imul
cmp
xchg
out
jl
jne
xor
push
jne
es
fadd
inc
push
insb
jmp
cmp
lret
scas
pop
jmp
mov
ds
jmp
movb
jmp
in
jns
mov
jb
jnp
in
inc
in
out
jo
ret
stc
cmp
test
ljmp
ja
ljmp
js
jmp
cltd
or
in
mov
xor
imul
int3
add
add
stos
cmp
push
sub
pop
lea
lret
movb
movb
movb
movb
movb
jmp
les
xchg
gs
inc
shlb
aaa
push
mov
sub
ffree
inc
imul
insb
imul
inc
outsb
imul
inc
rclb
mov
outsl
or
movb
movb
jmp
dec
movb
jmp
add
cmpsl
in
std
jmp
xchg
adc
jge
imul
pop
and
add
fwait
pop
dec
movb
jmp
push
nop
movb
jmp
rcll
lods
pop
test
mov
push
fldt
add
je
out
movb
movb
movb
movb
movb
jmp
lods
xor
pop
inc
and
cmp
xchg
mov
cltd
or
ds
lahf
punpckhdq
clc
cmpsl
pop
adc
fiaddl
lea
jmp
sbb
add
mov
xchg
push
xchg
repz
cmpsl
pushf
inc
mov
jmp
jae
jno
jecxz
in
ljmp
mov
and
mov
or
mov
lea
push
pushl
jmp
cmp
adcl
nop
push
popa
nop
push
imul
push
jmp
sub
inc
and
jmp
dec
fisttpl
fnstsw
jge
jnp
in
add
dec
cmp
movb
movb
movb
mov
call
jmp
adc
pop
gs
movb
jmp
or
add
xchg
sbb
es
cs
dec
movb
jmp
movb
jmp
pop
fimuls
add
inc
aam
dec
mov
movsb
ret
ds
daa
shlb
movb
jmp
jnp
insb
or
out
mov
jmp
fcoml
mov
aam
dec
lods
add
add
jo
int3
js
testl
add
mov
xchg
cld
rsm
loope
cld
fwait
jbe
jge
mov
jmp
cld
jo
xorl
lds
and
mov
adc
stos
movb
movb
movb
movb
movb
jmp
stos
outsb
lea
jmp
pushl
jmp
pop
into
pop
cmp
jg
jb
xchg
sub
stc
insl
std
test
xchg
mov
jmp
sbb
push
jmp
sbb
and
test
adc
in
sbb
dec
inc
and
cmp
in
push
jmp
decl
adc
lret
movb
jmp
mov
sub
ss
subb
cmp
mov
add
xchg
jb
aam
xor
xor
movb
movb
movb
movb
jmp
popf
sbb
adc
xor
jmp
movb
jmp
mov
lahf
cli
or
push
aam
sub
std
test
xor
das
jecxz
movb
jmp
inc
lahf
sub
inc
inc
push
jmp
fcmovnb
inc
inc
outsl
jmp
inc
ret
ret
in
sbb
repz
gs
in
movb
movb
movb
movb
movb
jmp
sub
adc
clc
push
pushl
movb
jmp
pusha
movb
jmp
inc
les
int3
and
jmp
push
in
sbb
mov
add
movb
movb
movb
jmp
movb
jmp
mov
jmp
movb
jmp
movb
jmp
xlat
pop
int
addr16
bnd
jne
and
jno
into
daa
aas
pushl
movb
movb
movb
movb
jmp
dec
rclb
adc
inc
movb
movb
movb
mov
call
jmp
lahf
inc
movb
jmp
sub
ss
mov
and
int3
stos
data16
lcall
jl
cmp
inc
pop
push
jmp
pop
int
and
fs
push
lahf
push
ret
pop
lret
scas
pop
jmp
adc
pop
adc
dec
push
jmp
es
inc
mov
dec
fisttpll
out
test
movb
jmp
movb
jmp
lea
jmp
cmp
aad
sub
push
inc
fisttps
flds
int
xor
movb
movb
movb
mov
call
jmp
pop
les
int3
and
aaa
cmpsl
ret
loopne
in
je
add
insb
mov
test
movb
jmp
outsb
jnp
add
stc
movb
jmp
lcall
add
mov
dec
roll
aad
fistpl
scas
pop
mov
cwtl
movb
movb
movb
movb
mov
call
jmp
jmp
mov
push
lds
jb
roll
add
movb
jmp
xor
movsl
and
lock
add
movb
movb
movb
movb
movb
jmp
xchg
sar
fwait
movb
jmp
orb
clc
or
sub
inc
push
gs
out
rcll
inc
fidivrl
jmp
mov
int3
pop
int
addr16
sub
fildll
sub
movb
movb
movb
movb
jmp
lea
nop
testl
cmp
pminub
pop
cmp
je
lods
jecxz
fcmovb
inc
push
insl
jmp
mov
inc
push
imul
adc
aas
fmull
mov
lret
scas
pop
bnd
call
mov
mov
lea
push
pushl
jmp
mov
push
jmp
popf
adc
movsb
cmp
add
mov
lea
xchg
xor
cmpsl
pop
adc
fstpt
sbb
inc
mov
mov
and
pushf
cmp
pop
ds
inc
cld
jb
inc
push
lea
push
jmp
pop
ret
ret
cmc
gs
pop
outsb
retw
or
jns
into
add
add
movb
jmp
loop
jmp
sub
lds
or
icebp
adc
lods
mov
inc
push
insl
movb
mov
call
mov
jmp
je
fs
aaa
push
rolb
sarb
arpl
jno
jecxz
call
xchg
sbb
inc
push
movb
movb
movb
jmp
pop
fimuls
sbb
icebp
imul
xor
pop
lds
insl
imul
and
inc
outsl
gs
dec
lds
iret
ds
push
cli
jb
xchg
out
pop
mov
rol
addr16
insb
jmp
ficoms
lods
pop
scas
mov
xchg
dec
ret
ret
pop
xor
nop
fwait
movb
movb
movb
movb
jmp
inc
dec
fiaddl
int3
movb
jmp
jge
addr16
cmp
ljmp
clc
cmpsl
pop
adc
ja
int
and
arpl
xchg
cmp
je
daa
movb
movb
movb
movb
movb
jmp
mull
xchg
outsb
dec
fdivl
in
ficoml
cmpsb
push
cli
or
inc
jno
movb
movb
mov
call
jmp
sbb
jmp
push
rcll
jbe
xor
int
fwait
std
gs
pushf
outsl
scas
pop
pushf
xor
inc
aad
inc
pop
lea
push
pushl
movb
movb
jmp
addr16
insl
hlt
pop
out
dec
rolb
sarb
in
movb
movb
jmp
cmpsb
cmp
pop
xchg
adc
jmp
sub
inc
cmp
xor
stos
inc
lret
mov
inc
sub
cmp
notl
dec
pushl
movb
movb
movb
movb
jmp
movb
movb
movb
mov
call
jmp
ja
add
daa
xchg
adc
push
xlat
inc
and
aaa
pushf
push
test
push
in
rorb
adc
pusha
push
pushl
jmp
sub
out
data16
xchg
outsb
mov
mov
mov
push
inc
jmp
arpl
cmc
daa
ss
insb
out
adc
dec
sub
sub
jo
sbb
push
pushl
movb
movb
movb
jmp
or
jae
jno
jecxz
pop
leave
pop
cmp
pusha
in
jp
jp
mov
imul
inc
insl
movb
movb
jmp
xlat
inc
mov
jmp
inc
dec
arpl
ds
insb
loop
je
mov
mov
mov
jl
jne
out
setnp
insb
movb
movb
movb
movb
jmp
xchg
push
pushf
sti
push
cld
pop
rclb
sub
inc
in
decl
adc
adc
repnz
pop
bnd
or
sbb
dec
lods
lea
jmp
ja
movb
jmp
out
cmc
pushf
outsl
test
jbe
loopne
fs
pop
loop
ja
add
daa
int3
movb
movb
movb
movb
movb
jmp
clc
jl
jne
jno
outsb
mull
inc
outsl
jmp
inc
les
int3
and
sbb
into
pop
cmp
xor
movsl
xor
add
push
pushl
movb
jmp
cmpl
push
movb
jmp
js
addr16
or
lds
iret
push
aaa
adc
movb
jmp
sub
les
int3
push
inc
roll
aad
xor
sbb
mov
push
or
mov
lea
push
pushl
jmp
mov
cmp
mov
popa
lret
inc
cmp
jmp
pop
lret
scas
pop
repnz
xor
int
lea
mov
pop
movb
jmp
xchg
xchg
adc
adc
lret
jle
jecxz
pop
rol
jo
movb
movb
movb
mov
jmp
insb
ljmp
stc
mov
mov
push
ret
cmpsb
push
mov
mov
outsl
jmp
popa
movb
jmp
push
jmp
sbb
and
sub
adc
sub
pop
stos
fucomi
movb
movb
movb
movb
movb
jmp
adc
and
push
fwait
or
jae
mov
call
mov
mov
lea
jmp
jno
addr16
pop
popa
loopne
adc
add
sarb
sbb
inc
dec
insb
movb
movb
movb
jmp
insl
ljmp
xor
push
bnd
movb
jmp
and
dec
dec
rcll
xor
inc
roll
aad
push
fwait
movb
jmp
and
add
pop
repnz
fs
pop
mov
rol
inc
push
insb
jmp
sahf
adc
push
xor
imul
imul
loope
jae
scas
cmp
mov
in
mov
cwtl
icebp
pusha
notb
fwait
pushl
jmp
dec
fldt
out
jl
negb
lods
lret
inc
icebp
mulb
nop
arpl
and
movb
movb
movb
movb
jmp
je
jl
divb
pop
mov
sbb
cmp
inc
push
outsl
movb
movb
mov
call
jmp
mov
mov
pop
iret
stos
pop
loopne
mov
mov
lea
push
pushl
movb
jmp
jns
je
out
imul
push
xlat
inc
and
aaa
mov
stos
int
aam
or
inc
popa
gs
movb
jmp
leave
dec
fidivrs
and
mov
inc
xlat
and
adc
cmpsl
movb
jmp
pop
fisttpll
out
lret
dec
fdivrl
fistpll
mov
outsl
movb
mov
call
mov
mov
jmp
inc
inc
outsb
popa
jmp
ret
dec
fidivrs
mov
movsb
cmp
pop
addl
push
movb
movb
movb
jmp
dec
fidivrs
std
test
xor
fmull
gs
and
inc
and
cmp
imul
inc
mov
ja
push
mov
dec
mov
fdivp
mov
mov
lea
push
pushl
movb
jmp
movb
jmp
push
inc
es
and
cmpsb
cmp
scas
cmp
inc
fisttpl
movb
jmp
daa
popf
ja
inc
daa
inc
jmp
movb
jmp
jo
jne
out
inc
mov
mov
sbb
xor
dec
cs
lahf
add
movb
movb
mov
call
jmp
fs
insb
or
lds
idivb
jl
jnp
in
add
in
mov
jmp
sahf
add
mov
sub
mov
jmp
aad
les
sub
push
push
aad
sub
cmp
addr16
or
jmp
mov
movsb
ret
ds
mov
fiadds
push
xor
es
xor
scas
pop
inc
int
and
aaa
mov
cs
movb
mov
call
jmp
into
inc
aam
dec
stos
stos
and
stc
jb
inc
inc
cmp
callw
ds
jg
addr16
pop
push
xchg
pop
bound
imul
add
pushl
movb
movb
movb
movb
jmp
aad
into
test
sub
bndstx
adc
dec
jns
movb
movb
movb
movb
movb
jmp
push
push
xor
data16
jne
out
pop
lret
pop
repnz
fs
call
mov
mov
jmp
cmp
jge
je
and
inc
es
adc
cli
movb
jmp
sub
push
sbb
add
or
sbb
das
stos
lock
movb
movb
movb
movb
jmp
popa
inc
inc
push
fs
mov
cltd
clc
or
jbe
imul
adc
insl
std
test
jle
mov
movb
movb
movb
movb
movb
jmp
push
xlat
inc
and
and
dec
fstpt
movb
movb
movb
movb
movb
jmp
dec
and
and
jle
pop
fisttps
into
inc
fidivrl
push
popa
nop
jb
mov
lea
jmp
ret
gs
pop
adc
mov
add
push
sahf
or
cmpsb
inc
mov
shll
mov
out
push
movb
movb
movb
movb
movb
jmp
sbb
pusha
jmp
jbe
outsl
or
sarl
es
mov
stos
and
xor
mov
movb
movb
movb
movb
mov
jmp
mov
mov
jmp
xor
xor
scas
sbb
test
lea
pop
rorl
clc
cmpsl
pop
adc
fsub
jne
mov
and
and
add
mov
jns
and
fdivs
jne
inc
push
insl
movb
movb
movb
jmp
push
jmp
rolb
mov
stc
js
arpl
cmc
push
int
lds
adc
or
add
fdivrp
xor
jmp
sbb
mov
mov
enter
push
push
out
lea
push
pushl
movb
movb
movb
jmp
mov
cmpsb
leave
dec
fnstcw
mov
jae
movb
jmp
movb
jmp
cmp
and
xor
dec
dec
int3
inc
and
movb
movb
jmp
popf
movb
jmp
sti
jge
je
jo
aam
sub
xor
inc
add
lods
and
inc
pop
inc
and
cmp
lea
jp
in
add
inc
pop
mov
call
mov
mov
jmp
cmp
lcall
enter
popa
jmp
addr16
inc
or
dec
movb
jmp
nop
sbb
scas
and
aas
scas
lret
add
push
inc
movb
movb
movb
jmp
mov
mov
data16
xchg
outsb
repz
icebp
nop
arpl
push
inc
pop
je
lods
movb
jmp
roll
mov
jmp
adc
or
sbb
jae
ljmp
test
ljmp
movb
jmp
nop
or
cwtl
push
imul
test
jmp
mov
mov
add
push
les
adc
popa
gs
dec
add
inc
arpl
aam
clc
outsb
or
jg
pop
jp
adc
cld
xor
sbb
hlt
loop
inc
pusha
inc
jmp
mov
stos
int
aam
inc
insb
xlat
movb
jmp
out
xlat
movb
jmp
add
jnp
xchg
testb
adcl
mov
mov
lea
push
pushl
jmp
mov
in
loope
add
inc
inc
inc
movb
movb
movb
movb
jmp
lea
jmp
stos
cs
clc
dec
dec
pushl
jmp
dec
ret
ret
dec
fdivrl
dec
adc
add
mov
pop
movb
jmp
or
imul
push
jmp
movb
jmp
sub
fdivl
in
stos
es
cs
mov
in
sbb
inc
inc
gs
insb
out
adc
dec
mulb
insb
fcmovbe
inc
aad
dec
in
and
call
mov
mov
jmp
cld
lret
inc
dec
insb
jmp
in
adc
inc
push
xor
add
popa
jne
push
movb
jmp
cli
imul
pop
xchg
push
xchg
repz
cmpsl
mov
movb
movb
movb
movb
movb
jmp
movb
movb
mov
call
mov
jmp
arpl
movb
jmp
jae
jne
out
pop
adc
pop
jb
sub
dec
fidivrs
push
xor
adc
lea
push
pushl
movb
jmp
test
jmp
jmp
loope
jae
push
into
pop
cmp
ds
aad
sub
pop
ficompl
gs
jmp
xchg
or
inc
xlat
mov
xchg
test
jge
sbb
cmc
out
sbb
inc
insb
gs
mov
pushf
in
fadd
inc
data16
lret
add
push
lret
mov
mov
jg
outsl
inc
rclb
ds
push
test
push
leave
dec
add
inc
data16
inc
insb
movb
movb
movb
jmp
push
push
movb
movb
movb
movb
jmp
or
mov
mov
inc
outsl
inc
jmp
mov
movb
jmp
pop
mov
jmp
dec
int
and
and
inc
sti
ja
xorb
fimull
movb
jmp
pusha
jmp
insl
jmp
push
in
setno
mov
sbb
in
jmp
shrb
jmp
rclb
out
sub
inc
jo
jmp
lock
mov
pop
test
add
lds
mov
movb
jmp
sbb
sbb
xchg
and
inc
jb
jmp
nop
add
cs
pop
enter
jmp
aaa
test
movb
movb
movb
movb
mov
call
jmp
movb
movb
movb
movb
mov
call
jmp
int3
iret
inc
mov
inc
bound
outsl
clc
outsb
or
push
jp
inc
fs
inc
jbe
jo
loop
cmp
mov
mov
mov
xchg
lcall
inc
pop
je
inc
pusha
imul
mov
sub
loopne
pop
mov
inc
arpl
mov
or
inc
gs
movb
jmp
insb
repnz
pop
bnd
stc
imul
ja
loope
inc
lds
iret
and
cmpsl
pop
adc
add
inc
pop
dec
movb
jmp
pop
jecxz
push
in
in
stos
movb
movb
jmp
mov
cmpsb
shll
jge
imul
push
xor
jmp
sahf
sbb
leave
pop
cmp
and
lahf
punpckhdq
lock
inc
movb
movb
movb
movb
jmp
out
dec
jge
movb
jmp
lret
inc
shll
push
cld
psrad
je
xor
xchg
xrelease
jmp
hlt
jns
mov
push
jmp
leave
dec
fstpt
pop
bound
shrl
cwtl
test
pop
push
movb
movb
movb
movb
movb
jmp
pushl
jmp
mov
inc
popa
outsb
jmp
lahf
add
mov
inc
arpl
pop
iret
pop
cmp
jle
lahf
punpckhdq
repnz
push
jmp
movb
jmp
jne
jno
jecxz
sbb
adcl
jp
pop
lods
les
adc
add
ds
icebp
imul
mov
xchg
je
movb
jmp
and
inc
fs
cwtl
add
add
jns
movsl
xor
mov
xchg
adc
push
pushl
movb
movb
mov
call
jmp
in
inc
addb
jmp
mov
push
jmp
mov
ret
mov
jmp
pusha
notb
hlt
mov
movb
jmp
insb
in
bound
repz
xchg
inc
imul
popa
jmp
push
rolb
shrb
sti
imul
sub
sbb
aad
rol
inc
mov
test
movb
jmp
sti
ja
xorb
insb
or
in
cmc
gs
sbb
outsb
or
or
jb
lea
jmp
mov
shlb
push
lds
ficoms
cmpsl
push
nop
push
mov
sub
inc
insb
insb
jmp
or
daa
loop
out
jo
aaa
movsb
cmp
add
adc
inc
adc
inc
adc
inc
adc
inc
adc
jmp
insl
add
iret
pop
cmp
jle
sbb
aad
xchg
gs
pop
repnz
lret
subl
popf
setg
or
mov
in
pop
fimuls
fxch
movb
movb
mov
call
mov
jmp
sbb
lea
mov
sbb
xorl
arpl
inc
fs
xchg
mov
sbb
cmp
stc
jns
mov
mov
scas
push
test
gs
jmp
int
fdivrl
repz
mov
xchg
pop
bound
xchg
xor
movb
movb
movb
jmp
adc
movb
movb
movb
movb
movb
jmp
popf
dec
push
mov
je
loop
std
decl
adc
push
cmp
sbb
mov
movsl
int3
aas
enter
sti
pop
jmp
test
fmull
arpl
xchg
subl
inc
sbb
inc
jae
jmp
scas
ss
jmp
pop
aam
jmp
pop
fucomip
lret
jmp
and
inc
cmp
out
notl
mov
fistl
imul
inc
imul
insb
insb
movb
jmp
mov
cwtl
fcmovne
cmc
push
jmp
pop
jmp
out
arpl
cmpsl
jmp
ret
movsb
push
bnd
jl
testb
jns
jmp
xchg
mov
ret
jmp
sahf
push
pushf
sti
push
cmpsl
push
lds
pop
lret
lret
dec
negb
call
jmp
lods
cmp
pop
into
test
xor
adc
sbb
mov
pop
add
jmp
mov
jmp
movsb
aaa
cmpsl
ret
mov
pushl
jmp
cs
dec
mov
pop
mov
xchg
gs
xchg
cmc
add
mov
cmc
into
movb
movb
jmp
lock
push
pusha
test
pop
ret
lret
mov
jmp
loop
adc
add
dec
fdivrs
sub
jo
call
jle
movb
jmp
jmp
inc
loop
push
push
pusha
jmp
popa
jmp
addr16
sbb
add
mov
out
sbb
loopne
push
out
push
jg
inc
insl
push
movb
movb
movb
movb
jmp
sbb
inc
or
andb
sub
jo
mov
jmp
dec
inc
lahf
or
and
sbb
add
fdiv
out
jmp
orb
decb
mov
out
push
lahf
push
jge
gs
push
inc
movzbl
jmp
daa
lods
and
push
push
fdivl
in
and
adc
in
sbb
jecxz
cmp
jne
addl
mov
jmp
fcoms
lods
pop
mov
int
cmp
pusha
repnz
pop
repnz
lahf
popl
lea
jmp
out
xchg
sub
testb
add
std
add
add
jmp
jmp
jle
arpl
cmc
pop
arpl
popa
add
inc
aam
lds
hlt
push
mov
sub
push
push
test
jmp
out
in
jle
and
and
add
mov
inc
mov
movsl
aaa
cmpsl
ret
mov
pop
jmp
sub
arpl
xchg
mov
out
hlt
push
loope
ja
clc
outsb
or
adc
iret
push
mov
fstpt
and
cmp
je
popa
mov
jmp
addr16
push
in
and
lods
and
pop
adc
or
pop
jmp
mov
pushf
sti
push
daa
cmpsb
xor
scas
dec
in
in
push
lea
jmp
pop
cmpsl
and
dec
fnstcw
mov
es
push
mov
lea
call
jmp
das
stos
cmp
inc
lret
mov
mov
rcll
and
out
dec
mov
mov
add
add
sub
inc
cmp
jb
jmp
sahf
sti
mov
test
sbb
push
lret
mov
lock
popa
icebp
nop
arpl
mov
les
push
cmp
dec
fstpl
cld
ja
xorb
ficoml
mov
std
decl
jmp
pushf
push
pushf
sti
push
mov
pop
call
jmp
pop
jmp
ss
cmp
add
arpl
xchg
gs
adcl
test
mov
ss
ret
fwait
xchg
sbb
scas
inc
mov
call
push
lea
lea
call
jmp
popf
or
pop
into
test
pop
jmp
push
lret
pop
ds
dec
fisttps
flds
or
je
jmp
xchg
or
sub
jmp
mov
mov
mov
dec
mov
jns
setae
in
xchg
test
sub
arpl
xchg
jmp
out
jae
xchg
xchg
adc
in
sbb
bnd
xchg
loop
icebp
nop
arpl
add
insl
out
decl
ja
xor
jae
gs
or
out
fxch
add
add
sbb
jns
mull
icebp
pop
push
pop
out
sbb
sbb
sbb
jl
mov
dec
mov
out
cmp
std
decl
xchg
mov
call
jmp
dec
les
int3
aas
sbb
ss
inc
stos
fmull
sub
jmp
ficompl
scas
pop
sbb
in
sbb
dec
aad
aad
dec
sti
imul
inc
or
lea
jg
jmp
andb
jmp
pop
test
mov
dec
mov
lds
push
lahf
punpckhdq
pushl
mov
jmp
fistpll
push
add
cmp
or
jo
jmp
lret
pop
int
shlb
cmp
jmp
push
push
xor
imul
xor
cmpsl
sub
aad
pop
jmp
xorl
inc
adc
fildl
mov
stos
cmp
inc
jp
jp
in
imul
and
push
rolb
call
mov
mov
lea
push
pushl
jmp
out
jae
xchg
test
mov
fwait
or
jae
dec
repnz
add
jmp
pop
xchg
add
sahf
jnp
xchg
jb
jno
adcl
dec
mov
clc
xor
jmp
and
jns
mov
jae
outsl
or
hlt
mov
jp
sahf
jne
addl
mov
movzbl
jmp
pop
rolb
shlb
xor
out
inc
mov
test
jmp
mov
jmp
jmp
mov
scas
leave
cmp
jnp
imul
pop
mov
ljmp
jge
rorb
add
push
jg
mov
mov
fldl
cmp
popf
mov
lcall
push
jbe
icebp
xor
add
xchg
pop
bound
lea
push
push
movb
movb
movb
movb
jmp
movsb
or
pop
jge
test
jmp
adc
cmp
and
add
negb
or
or
shlb
jmp
adc
adc
sub
push
leave
pop
cmp
outsb
add
adc
call
pop
xor
mov
sub
jmp
inc
fisttpll
out
cwtl
add
es
sbb
out
std
decl
jl
lea
call
jmp
or
jmp
xchg
popa
call
in
mov
fcmovb
std
jmp
in
std
adc
clc
add
add
or
add
rolb
inc
mov
insb
loop
je
cmp
cld
lods
fcom
mov
jmp
call
inc
push
xor
es
rcll
and
leave
pop
cmp
aaa
lods
sub
pop
pop
jmp
mov
addr16
jmp
imul
add
cmpsb
and
cmp
pop
repnz
fs
pop
push
lea
mov
mov
call
pop
jmp
or
sub
jmp
mov
shlb
pushf
jmp
mov
enter
xor
imul
jmp
adcb
out
enter
dec
mov
inc
daa
shlb
shl
sbb
push
push
pushl
call
jmp
inc
fisttpl
jae
xchg
cmp
cltd
xchg
jmp
shl
pusha
jmp
setge
jge
je
sub
test
loope
adc
dec
cmpsb
mov
call
pop
pop
test
jne
jmp
mov
jmp
sub
push
rcll
mov
fisubrs
xor
sub
mov
jmp
mov
jmp
sbbl
call
pop
jp
jg
nop
push
popa
nop
pop
pop
and
movsb
add
add
add
add
add
jmp
dec
aam
sub
adc
dec
sub
mov
cs
dec
and
jmp
jae
popa
add
sbb
ljmp
hlt
jno
xorb
iret
mov
ret
mov
jmp
cli
jle
mov
jg
bound
out
xchg
mov
repz
cmc
adc
ret
jmp
mov
add
add
jmp
fsts
mov
dec
sub
inc
sub
jp
sub
jmp
mov
out
xor
daa
stos
cmp
or
mov
popa
sbb
jmp
sbb
mov
cmpsl
jmp
lods
lods
lret
inc
lock
jo
loop
call
leave
cwtl
setg
or
in
sub
push
test
je
push
jmp
or
call
popl
jmp
popa
cmc
gs
dec
inc
roll
sarl
cli
push
loope
mov
jmp
mov
mov
andl
jns
xchg
in
lea
jmp
sub
pop
test
cmpsb
shll
mov
les
lods
cmp
xchg
je
popa
jmp
cmc
push
lahf
push
fstpl
xchg
lods
xor
mov
jmp
push
pop
jmp
lret
mov
pop
cmp
pushf
sti
push
call
push
add
movzbl
add
cmp
jmp
movsb
or
sub
push
push
test
je
mov
jmp
lea
jmp
sub
jge
movsl
xor
dec
frstor
test
js
push
push
mov
jmp
imul
adc
add
aad
call
jmp
jb
jmp
mov
xchg
icebp
add
mov
xchg
sbb
mov
popl
lea
jmp
mov
scas
leave
cmp
aam
iret
stos
pop
shrb
repnz
lea
call
lea
push
mov
lea
jmp
xor
aaa
jno
xor
jmp
adc
adc
repnz
pop
repnz
mull
xchg
outsb
fisubs
lock
pop
pop
test
jne
push
push
jmp
jmp
sbb
stc
push
jmp
call
jmp
dec
fisttpll
out
inc
fisttpl
fnsave
test
pop
test
fdivr
out
push
fdivrp
adc
jmp
push
repz
outsb
rcrb
pop
mov
mov
roll
call
mov
call
push
lea
jmp
push
int3
inc
and
xchg
cwtl
repnz
decl
cmpsl
pop
adc
xchg
pop
jmp
jb
bound
notb
bound
jmp
rclb
mov
and
pop
push
aad
sub
cmp
xor
test
rorb
add
mov
cwtl
repnz
incl
jmp
push
adc
pop
sub
add
xchg
popf
pushl
jmp
mov
sahf
stc
or
sub
cmp
jle
pusha
jmp
mov
jmp
test
mov
pop
mov
add
jno
sub
jecxz
push
in
jnp
mov
out
jmp
and
jmp
lret
mov
cmpsb
dec
push
xor
cmp
jmp
mov
xchg
repz
test
mov
or
and
jne
jo
xorl
dec
cli
aas
movsl
push
pushf
jmp
in
in
jle
cmpsl
xor
inc
xlat
sub
jmp
xchg
add
xchg
mov
imul
insl
ret
hlt
pop
push
mov
ret
js
bound
stos
into
cmp
xchg
outsb
lods
jne
popa
jmp
jo
jmp
xlat
dec
ret
mov
rolb
sarb
dec
inc
and
ss
add
jmp
cli
or
mov
jmp
cmp
jmp
pop
xor
push
out
lret
jle
add
inc
fisttps
fldenv
sub
in
sbb
add
outsb
clc
mov
jmp
mov
scas
clc
jg
mov
xchg
std
popf
add
jmp
je
jmp
movb
inc
mov
mov
and
sub
jecxz
mov
and
cmp
jne
addl
jmp
test
fdivl
imul
loope
mov
jmp
inc
lret
lret
scas
xchg
jmpw
call
pop
repnz
adcb
pop
popl
jmp
test
in
out
and
cwtl
push
imul
dec
iret
lea
push
mov
lea
call
mov
call
jmp
sub
pop
call
jmp
sbb
push
popa
nop
push
mov
pushf
dec
fisttps
fsts
pop
js
sub
inc
and
xor
xchg
cmp
mov
jmp
mov
mov
pop
lret
scas
pop
repnz
sbb
adc
pop
xor
mov
sub
inc
cmp
jb
lea
call
jmp
push
jmp
jmp
and
ret
pop
into
test
mov
jp
jp
jmp
jmp
sub
ss
aaa
mov
jmp
dec
xchg
pop
jmp
sbb
adc
push
xor
int3
dec
frstor
imul
jne
push
push
pushl
call
jmp
in
jae
xchg
or
out
leave
jmp
push
jmp
loop
sbbl
push
inc
incb
add
jmp
test
nop
testl
xchg
gs
pop
int3
stos
xchg
mov
roll
adc
insl
mov
push
add
add
jge
je
insl
test
mov
pop
pushf
jmp
inc
lret
lret
in
bound
jb
in
fdivs
cmpsl
in
inc
and
jmp
lock
jmp
mov
jmp
and
inc
dec
lret
pop
ds
mov
jmp
cmp
rolb
fwait
iret
jmp
mov
xchg
lahf
adc
jae
xchg
dec
jns
jmp
popf
pushl
mov
jmp
sbb
pop
jo
mov
jmp
adc
dec
jecxz
push
in
fistl
cmpsb
push
loope
test
jge
and
mov
jmp
sub
jmp
adc
es
inc
mov
pop
push
xor
or
sub
imulb
jmp
inc
fmuls
fdivrs
scas
movsb
ret
ds
pop
lret
scas
pop
mov
enter
dec
adc
pop
jmp
add
sbb
mov
cli
jmp
add
adc
mov
cmp
jmp
push
in
add
insb
loop
je
ret
xor
idiv
call
inc
sub
and
std
dec
enter
cmp
test
pop
jmp
mov
ret
add
add
pop
cmp
jmp
fistps
scas
pop
test
lock
adc
pop
cmp
sub
jge
je
jbe
push
mov
sub
push
push
test
je
push
pop
push
mov
lea
jmp
pop
jno
push
jne
jmp
mov
jmp
jno
insl
hlt
pop
mov
scas
jns
lahf
add
jecxz
jmp
push
sbb
addl
jmp
inc
roll
aad
gs
cmpsb
xor
int
mov
js
ljmp
fs
jmp
dec
fldt
leave
popa
mov
jmp
enter
pop
into
jbe
jbe
loopne
xchg
pop
xchg
repnz
jmp
jl
jle
call
les
xchg
sbb
fildll
dec
fcmovne
jmp
pop
jecxz
push
in
push
xchg
or
outsl
in
std
test
cmpsl
sub
ds
jns
xchg
push
mov
push
push
mov
test
jne
xor
jmp
jmp
sbb
jle
je
out
add
cwtl
push
imul
pop
fiadds
mov
push
andl
jmp
sbbl
and
ret
inc
xlat
mov
xchg
pop
cmp
and
push
mov
test
je
lea
jmp
stos
sub
cwtl
imul
jmp
mov
fbstp
roll
nop
in
mov
addb
add
add
jmp
fwait
sbb
sub
adc
cmpl
jmp
arpl
jg
jmp
inc
mov
mov
shlb
imul
or
popl
lea
jmp
xor
add
sub
xor
add
repz
test
jmp
add
cmpsl
sub
push
test
push
mov
aas
xor
jmp
divl
mov
mov
fistpll
xchg
push
jl
cmp
jmp
cmp
cmp
jae
xchg
mov
mov
clc
outsb
or
dec
inc
mov
adc
ljmp
insl
hlt
pop
lods
and
cwtl
inc
jnp
adcl
inc
cld
mov
test
jmp
leave
pop
repnz
fs
rorl
mov
out
mov
scas
movsb
ret
ds
mov
lds
add
add
flds
mov
test
scas
cmp
mov
notl
dec
or
call
xchg
jp
cmpsb
movzbl
add
cmp
je
jmp
adc
cmp
jmp
dec
rolb
rclb
dec
fistpll
dec
sub
adc
adc
or
cmpl
jmp
mov
vprotb
decb
fwait
sub
mov
call
mov
call
mov
jmp
mov
movsb
ret
ds
imul
add
jmp
fistpl
scas
pop
mov
scas
push
add
adc
push
lcall
add
cltd
jnp
bound
pop
ds
ret
mov
jns
cmp
lea
push
jmp
or
bound
xchg
mov
xor
inc
jmp
adc
or
jg
sub
bt
outsb
or
or
jp
jp
cmp
je
jmp
pushf
pop
dec
xor
and
call
jmp
int3
popf
inc
jno
jl
add
xchg
pop
cwtl
push
push
jmp
push
addr16
jmp
and
jbe
cmpl
adc
test
mov
or
jmp
lret
inc
fidivrl
add
push
rcrb
xchg
addr16
notb
inc
pop
jmp
dec
fstpt
cli
popf
insb
fnsave
pop
sub
add
xchg
popf
pushl
jmp
push
lret
pop
ds
inc
roll
shll
inc
xlat
mov
out
mov
jmp
jns
push
pusha
jmp
icebp
imul
insl
fdivl
pop
lret
pop
ds
pop
lds
iret
das
aas
pop
jmp
jns
ja
loope
out
mov
jmp
lret
mov
pop
cmp
lcall
mov
ret
or
pop
sub
clc
jb
gs
cmp
hlt
pop
in
lock
lods
inc
popa
jmp
jmp
mov
stos
into
cmp
shlb
lret
daa
inc
mov
js
mov
repz
jmp
or
jo
je
jmp
sub
outsl
ljmp
jle
call
mov
xchg
and
ret
jne
addl
mov
movzbl
jmp
xchg
sbb
insb
popl
jmp
xor
aaa
cmp
jge
pusha
pop
repnz
jo
rolb
add
jmp
rcrb
cmpsb
or
out
ljmp
xchg
popa
pushl
and
jmp
aaa
movsl
xor
adcl
lea
jmp
sub
pop
mov
mov
cli
push
dec
fisttps
fsts
loope
mov
mov
mov
andb
sub
jo
jmp
jmp
push
call
jmp
mov
out
add
call
cltd
push
pushf
sti
push
mov
add
mov
xor
push
aad
add
dec
cmp
jmp
jg
mov
pop
lds
iret
das
jecxz
jmp
push
fisubrl
jmp
push
imul
jmp
rorb
mov
mov
imul
xchg
cld
pinsrw
pop
subl
add
ljmp
jmp
add
idivl
pushl
mov
inc
mov
push
add
push
les
xchg
stos
or
iret
pop
lahf
punpckhdq
adc
or
dec
repnz
call
mov
and
fcompl
test
adc
mov
sub
rclb
add
add
ficomps
nop
push
popa
nop
jb
in
bound
xor
push
movsl
jae
and
imul
or
iret
addr16
jg
jmp
outsl
and
cld
ljmp
pop
pusha
add
imul
adc
ds
inc
mov
xor
or
sbb
pusha
or
xchg
or
iret
aam
into
test
cmp
mov
cmpsl
cmp
lds
iret
fs
fldt
cmc
add
call
mov
mov
and
pop
repnz
setg
or
icebp
add
call
jecxz
xchg
cld
rorb
imul
jmp
jo
jne
out
inc
mov
mov
es
mov
inc
sub
push
insl
mulb
sbb
jp
jp
arpl
push
inc
shll
stos
int
mov
pop
xchg
sub
add
sbb
fs
inc
cmp
push
lds
roll
scas
sub
stos
cmp
inc
orl
cli
or
jg
push
cld
push
data16
jmp
add
call
cli
jb
xchg
mov
xchg
lock
fstl
mov
pop
jp
inc
inc
iret
pop
cmp
adc
repz
sub
jae
roll
sarl
push
aam
test
cli
incl
test
cli
jmp
je
jp
in
pop
cmp
mov
mov
int
and
jl
sub
lds
xchg
pop
xchg
repnz
lret
adc
in
sbb
pushf
add
std
or
add
jl
jo
loop
in
call
sub
xchg
add
jp
pop
ss
dec
mov
adc
adc
pop
enter
stos
cs
mov
gs
jl
jle
mov
nop
arpl
sarl
add
jp
push
cld
pop
jne
push
inc
shll
pusha
pop
repnz
insl
std
insl
hlt
pop
mov
outsl
lcall
or
sub
mov
stos
ljmp
cltd
push
and
imul
mov
mov
push
xor
cmpsl
pop
adc
push
mov
call
jmp
cmp
xor
jmp
push
in
add
cmpsb
xor
scas
inc
dec
aam
sub
mov
mov
ja
push
cld
adc
cwtl
push
imul
xchg
jb
jno
mov
inc
mov
add
jp
and
out
fs
popf
insb
lahf
push
fmuls
fdivrs
pop
aam
sub
xchg
cld
paddd
jle
mov
xor
adc
insb
or
in
lcall
cwtl
decl
mov
sub
jb
jo
loop
xor
insl
stc
imul
inc
and
jbe
cltd
or
cs
jp
jp
sub
mov
mov
dec
fnstcw
or
je
adc
and
lds
mov
popf
in
std
cs
cmp
mov
adc
jns
je
lea
xor
or
insb
test
jo
ljmp
pop
pusha
or
imul
or
iret
cltd
and
iret
pop
cmp
aas
ret
mov
pushf
sbb
dec
pusha
or
outsl
or
dec
pusha
adc
jo
add
add
fmull
adc
jo
mov
or
or
add
pop
in
sbb
pusha
add
outsl
add
add
pusha
add
pusha
add
pusha
add
lahf
or
pop
pusha
add
cli
ja
xorb
xlat
inc
and
cmp
lret
insb
loop
pop
loop
lahf
adc
std
insl
hlt
pop
imul
xor
das
mov
loopne
out
jo
leave
pop
into
test
xchg
repnz
pushf
xor
and
flds
or
sub
mov
inc
mov
adc
jl
pop
xchg
adc
jmp
jmp
out
or
jle
mov
arpl
jo
loop
pop
lahf
punpckhdq
iret
cmp
out
lock
bound
cwtl
jo
iret
pop
cmp
and
roll
shll
out
data16
xchg
outsb
mov
imul
ret
xor
adc
cld
ljmp
pop
pusha
add
imul
adc
stos
and
into
inc
xlat
mov
fwait
popl
xchg
lock
mov
pushf
mov
mov
cwtl
push
imul
loop
pop
loop
sub
or
xor
push
rorb
jmp
orl
inc
mov
and
push
xor
push
lds
mov
test
repz
cmc
je
adc
roll
sarl
nop
adc
cmc
gs
sbb
aas
lret
test
jge
pop
push
lcall
es
mov
outsb
in
sbb
loopne
jb
lds
cmpsb
push
mov
fs
popf
insb
lahf
sti
jnp
mov
je
imul
adc
mov
mov
iret
pop
cmp
aas
mov
rcrl
add
jae
mov
inc
mov
dec
les
int3
aas
sub
xor
add
bound
das
out
jne
outsb
or
pop
out
adcl
test
fwait
xor
hlt
xor
add
out
sets
imul
aaa
cmpsl
ret
enter
push
xchg
mov
mov
mull
icebp
adc
iret
and
inc
lds
xor
stos
pusha
xchg
adc
pop
int3
stos
data16
cmpsb
xor
scas
dec
mov
stos
into
cmp
test
in
outsl
lcall
mov
test
movsb
ret
ds
cs
dec
fistpll
adc
add
mov
loop
aaa
cmpsl
ret
fcoml
mov
aad
dec
sti
sub
xchg
gs
ljmp
stc
vmovmskpd
mov
xchg
cmc
add
les
lods
pop
hlt
jnp
jns
jmp
fcoml
cmpsb
push
cli
jl
js
ljmp
lcall
cli
insl
std
test
cmpsb
cmp
mov
xchg
lock
bound
negl
pop
int3
stos
data16
insb
or
andl
inc
roll
inc
mov
dec
fistpll
ds
test
or
and
lea
cwtl
decl
js
ljmp
inc
jns
popa
add
add
imul
dec
fistpll
push
shrl
mov
add
pusha
or
or
outsl
or
or
pop
jo
or
add
or
outsl
or
dec
pusha
or
pusha
or
outsl
or
ljmp
pusha
or
outsl
or
or
pop
pusha
or
pusha
add
outsl
add
sub
xchg
or
iret
stc
jo
xorl
popf
cmp
sub
dec
les
int3
push
adc
punpckhdq
les
sub
call
or
mov
call
xor
loopne
adc
dec
xchg
add
pop
int3
stos
rclw
inc
fimuls
add
xor
int
add
xchg
adc
cld
xchg
cmc
add
sub
cmp
mov
out
adc
pop
out
cmc
pushf
outsl
test
lahf
punpckhdq
iret
cmp
xlat
push
mov
mov
and
push
insl
hlt
pop
testb
adc
ljmp
add
add
pop
pusha
or
or
or
add
outsl
add
add
pop
jo
or
add
add
outsl
add
dec
pusha
add
pusha
add
outsl
add
ljmp
pusha
add
outsl
add
add
pop
pusha
add
pusha
add
add
pop
in
pop
outsl
adc
outsl
add
add
pusha
add
pusha
add
pusha
add
pusha
add
add
pop
in
sbb
pusha
add
add
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
add
add
add
pusha
add
mov
add
pop
rolb
shlb
xchg
sbb
push
fisttpll
out
push
cwtl
push
imul
insb
loop
je
mov
xchg
fwait
setg
or
dec
out
test
pop
test
gs
push
cld
push
adc
and
std
insl
hlt
pop
mov
inc
shll
mov
mov
adc
adc
pusha
add
add
add
add
pusha
adc
in
add
pop
in
sbb
or
cmp
or
imul
adc
add
cltd
jge
js
rolb
jo
ljmp
pop
pusha
or
imul
adc
push
into
pop
cmp
xor
inc
and
xor
and
mov
stos
sub
and
ss
sbb
mov
or
add
jl
lock
bound
pushf
bound
jo
loop
divb
xchg
insb
out
jg
jmp
pop
lods
pop
insl
out
adc
or
setg
or
call
pushf
mov
mov
xchg
repnz
cmp
jge
popf
or
popf
or
pop
enter
mov
mov
cs
cmpsb
xor
lds
mov
xchg
icebp
add
sbb
inc
inc
and
jns
pop
enter
sbb
mov
xchg
adc
xor
and
pop
cmp
xor
and
outsb
jmp
addl
mov
sbb
mov
lds
adc
add
imul
adc
sbb
addr16
gs
inc
aad
dec
mov
add
jo
ljmp
pop
pusha
add
imul
add
std
or
or
inc
int
and
aaa
push
jo
loop
mov
ret
les
mov
inc
and
or
outsl
or
lds
popf
or
sbb
insl
std
test
aad
fstpt
cmp
mov
push
mov
inc
and
jns
xor
icebp
popa
add
push
push
int
and
push
daa
mov
push
mov
xchg
jl
lods
cmp
pop
into
test
mov
sbb
lds
adc
out
outsb
cld
fwait
jbe
push
xlat
inc
and
cmp
xchg
cmc
add
dec
roll
aad
xchg
adc
adc
out
jg
jmp
mov
mov
xchg
add
pusha
out
lcall
mov
and
pop
roll
rcll
mov
lods
mov
loop
mov
dec
mov
sub
cmpsl
pop
adc
adc
sbb
xor
scas
pop
popf
adc
lods
cmp
jns
cmp
adc
cld
ljmp
pop
pusha
or
and
movsl
or
iret
pop
int3
inc
and
jle
call
cli
adc
pusha
adc
cmp
add
setg
or
scas
insl
push
pop
mov
clc
adc
sbb
pusha
or
in
add
or
dec
pusha
or
outsl
or
dec
pusha
adc
clc
adc
sbb
pusha
or
imul
or
iret
sahf
or
lock
sbb
push
mov
stos
into
cmp
shlb
test
mov
js
inc
mov
sahf
stc
or
pop
fdivl
in
xchg
adc
pop
repnz
fs
mov
fsubr
jae
xchg
push
fisttpll
out
push
fisttpll
out
stc
ja
xorb
mov
mov
fwait
lret
mov
mov
test
cmp
add
jo
mov
mov
scas
aas
pop
test
fsubrs
fwait
cs
ret
mov
ret
repz
pop
xchg
repnz
mov
mov
pop
int
addr16
sbb
and
sar
arpl
add
sahf
or
iret
mov
lods
jg
xchg
testb
and
lods
sub
lds
fstps
test
pop
cmp
sub
pop
cmp
add
iret
ficompl
xchg
lea
test
dec
push
xor
sub
in
cvtps2pd
inc
and
and
cmpsb
pop
aam
sub
punpckhdq
xchg
pop
lret
lret
cmp
mov
jle
cmp
push
lahf
push
lret
xchg
fs
dec
fisttps
mov
inc
mov
outsl
cli
push
mov
push
addr16
sbb
inc
stos
fwait
add
mov
inc
fimuls
popa
jns
imul
push
cmp
and
in
add
daa
mov
and
and
pop
arpl
mov
adc
cmp
mov
adc
pop
fisttpll
out
cmp
cs
mov
adc
or
imul
insl
cwtl
ficomps
scas
pop
mov
mov
test
mov
and
or
es
aas
pop
test
out
sbb
or
in
js
add
outsl
xor
add
and
lea
outsl
sub
call
outsl
sbb
pusha
add
mov
adc
in
jge
notl
mov
inc
mov
pop
int
and
jl
mov
dec
mov
sbb
sbb
cmp
xchg
dec
fldt
nop
push
popa
nop
aaa
out
je
lea
int3
inc
and
mov
jg
mov
scas
aaa
cmpsl
ret
call
cli
pop
fdivl
in
inc
push
xor
es
popf
or
mov
rcll
lods
pop
mov
lods
jl
pop
int
addr16
jmp
cld
fwait
jbe
xchg
push
mov
es
and
les
int3
sub
jp
in
pop
inc
int3
inc
and
jl
mulb
jno
xchg
testb
mov
cmc
gs
pushf
outsl
fstpt
lods
and
sbb
outsl
fsubrl
mov
sub
sub
or
jb
xchg
mov
adcb
sbb
sub
rol
outsl
adc
mov
pop
adc
adc
inc
fidivrl
mov
jle
mov
in
or
adc
pusha
add
imul
or
iret
int3
pop
lret
scas
pop
mov
add
sub
lds
pop
jle
test
imul
or
iret
outsl
repz
cmc
cmp
mov
jg
bound
leave
pop
sahf
or
cmpsb
inc
orl
decb
shlb
clc
outsl
jmp
xor
and
inc
sub
dec
lds
cmpsb
push
mov
setg
or
rorl
push
repnz
sbb
cmp
lds
iret
push
or
outsb
cld
fwait
jbe
jg
jge
testl
cmp
sbb
lea
mov
mov
mov
and
sub
and
int
and
aaa
cs
inc
mov
mov
lods
push
cwtl
push
imul
fistl
addl
icebp
add
push
js
ljmp
out
xchg
gs
sbb
inc
rcll
xor
stos
cmp
inc
iret
dec
fstpt
jbe
loopne
ficoml
cmpsl
push
mov
mov
jecxz
imul
or
iret
add
imul
adc
clc
ja
xorb
ljmp
aam
icebp
cmp
jecxz
cld
fwait
jbe
mov
test
jle
call
push
push
xchg
out
cmp
sbb
cld
adc
and
pusha
add
pusha
or
outsl
or
or
pusha
or
or
adc
pusha
or
or
or
or
pusha
or
adc
outsl
or
or
jo
idiv
decl
or
or
or
or
pusha
or
adc
or
adc
in
add
pop
in
sbb
or
cmp
or
imul
or
dec
fisttps
xor
lock
pushf
outsl
les
mov
test
pop
mov
jle
dec
ljmp
adc
dec
fnstcw
jo
loop
sahf
pop
xchg
repnz
rcrb
insb
in
jge
negl
jl
addb
lock
pop
fimuls
sbb
fnstsw
mov
sbb
repz
jmp
notb
cmpsb
shll
jb
imul
jge
notl
outsl
lcall
mov
mov
cmc
gs
dec
inc
rolb
sarb
jmp
les
scas
pop
repnz
rolb
shlb
dec
fdivrl
add
rolb
mov
sbb
xchg
push
pop
rcll
and
jns
mov
popa
clc
outsb
or
adc
fs
popf
insb
jmp
mov
jle
or
fs
popf
insb
movsl
outsb
cmpl
xchg
or
imul
pop
adc
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
imul
or
iret
cmpsb
sub
gs
pushf
outsl
test
jle
mov
xor
adc
cltd
push
push
adc
adc
add
imul
adc
into
dec
fnstcw
je
out
sbb
adc
lahf
adc
xchg
sbb
aad
xlat
sbb
and
pop
leave
test
fwait
stos
es
cs
push
mov
fidivrl
lock
adc
inc
inc
xlat
inc
and
insl
push
ret
ret
inc
shll
test
add
pop
pusha
or
outsl
xor
pusha
add
add
add
pusha
add
or
adc
pusha
add
add
add
add
pusha
add
adc
outsl
add
add
jo
idiv
decl
add
add
add
add
pusha
add
adc
add
adc
in
add
pop
in
pop
outsl
adc
outsl
add
add
pusha
add
pusha
add
pusha
add
pusha
add
add
pop
in
sbb
pusha
add
add
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
add
add
add
pusha
add
call
pusha
add
add
mov
pushf
xchg
adc
pop
xchg
adc
aam
ret
mov
std
adc
popa
icebp
nop
arpl
cmp
cmp
mov
jle
arpl
outsl
or
out
mov
stos
into
cmp
inc
mov
jge
push
jle
mov
lea
in
sbb
ds
test
sbb
jmp
sub
pusha
notb
push
xor
add
cltd
or
ds
and
sahf
or
cmpsb
pusha
notb
lahf
cli
or
mov
cld
adc
sbb
pusha
add
add
add
testl
inc
test
pop
pusha
or
pusha
or
lock
or
iret
repnz
popf
insb
fidivs
mov
je
out
pop
jp
jge
notl
push
lds
mov
jae
in
outsb
cmc
gs
adc
xchg
push
inc
fimull
ficompl
lahf
punpckhdq
dec
mov
pop
scas
inc
dec
lret
lret
mov
xchg
push
ljmp
mov
xchg
rolb
shlb
mov
lods
lret
inc
movsb
mov
int
adcl
adc
lds
iret
sbb
js
ljmp
and
lods
and
add
jg
mov
mull
pushf
outsl
fdiv
fs
popf
insb
lds
scas
mov
mov
es
stos
cmp
mull
icebp
pop
in
jbe
cmpl
xor
int
fimuls
xchg
add
jnp
push
shlb
xchg
outsl
xor
pusha
add
add
outsl
add
or
add
pusha
or
add
add
pusha
or
add
or
pusha
adc
imul
or
iret
imul
out
ja
xorb
sbb
js
mov
rclb
cmpsl
push
mov
adc
jno
jle
lds
iret
sbb
out
jns
xchg
cmc
add
xchg
push
mov
es
push
xchg
repz
in
jbe
cmpl
loop
pop
loop
pop
xlat
inc
and
js
add
pop
leave
test
fwait
imul
adc
dec
pusha
repnz
pop
repnz
lock
imul
add
lods
or
iret
or
out
in
add
add
outsl
and
pusha
add
sub
fisubrl
inc
fidivrl
imul
or
sub
adc
inc
aam
sub
cltd
push
das
fidivrl
cwtl
add
push
mov
repnz
fs
hlt
push
cld
jnp
cli
push
lret
pop
ds
lds
mov
aas
pop
test
or
add
add
sbb
pusha
add
pusha
xor
stos
or
iret
mov
rorb
mov
lods
sti
fldt
lods
or
iret
add
adc
sti
imul
adc
lcall
imul
sbb
mov
jg
outsb
lock
mov
sub
push
shlb
xchg
gs
add
xor
int
fwait
mov
mov
cwtl
push
imul
add
cwtl
push
pushf
sti
push
movsb
adc
adc
sub
xchg
cmc
add
xor
pop
aam
fdivrl
cs
mov
push
movsl
dec
sbbb
call
mov
and
ficomps
lret
lret
jg
mov
and
adc
jle
outsb
or
push
push
aad
sub
or
insl
hlt
pop
lock
ficoml
mov
notl
inc
and
jne
out
push
orb
sti
push
mov
add
roll
aad
pop
xchg
add
xor
dec
std
outsl
sbb
cld
ljmp
pop
pusha
or
jo
add
add
inc
or
les
mov
negb
or
pusha
or
or
mov
dec
mov
lea
or
fldenv
or
jo
ljmp
pop
pusha
or
imul
or
imul
or
iret
add
add
lds
test
fdivp
jae
xchg
or
fisubs
xchg
mov
jnp
in
add
inc
and
cmp
jne
mov
or
cmp
jb
xchg
lock
jp
mov
fldcw
jnp
in
mov
idivl
mov
and
dec
fnstcw
add
sahf
cmp
inc
aam
dec
clc
aas
lods
and
sbb
jne
jno
jbe
loopne
rcll
pop
out
push
lds
iret
fs
and
aaa
push
mov
mov
add
add
push
adc
in
hlt
adc
sbb
pusha
or
pop
pusha
adc
imul
adc
pusha
mulb
dec
out
out
jo
mov
lds
dec
pop
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
add
add
xor
adc
add
inc
cmp
xor
lret
movsl
int3
aas
into
rcrl
test
mov
mov
inc
mov
test
mov
mov
jb
in
jg
popa
add
xor
pushf
xor
add
dec
das
fisubrl
or
popa
icebp
nop
arpl
adc
and
mov
mov
push
adc
xchg
or
cmp
mov
gs
push
sbbl
add
jmp
cwtl
pop
push
xor
dec
les
test
fsubrp
outsb
cld
fwait
jbe
in
insl
std
test
sub
and
pop
leave
dec
fidivrs
mov
add
push
xchg
mov
in
hlt
adc
sbb
pusha
add
test
adc
lahf
or
imul
jo
add
add
pop
pusha
or
and
mov
adc
stc
popa
icebp
nop
arpl
adc
into
push
les
aad
dec
movsl
lods
xor
lock
in
insl
std
test
scas
xor
push
mov
es
push
adc
movsl
andl
fidivrs
ds
test
xor
inc
rolb
shlb
test
pop
test
lcall
jne
mov
mov
in
sbb
imul
mov
and
xchg
push
roll
aad
cmp
rolb
inc
test
sarb
push
aad
sub
cmp
pop
jecxz
push
in
sub
rorb
dec
mov
fsubrs
xor
mov
fists
sahf
or
cmpsb
push
fistpl
scas
pop
cld
xchg
sbb
in
jge
divl
ficoms
mov
jle
call
jb
es
leave
adc
sbbl
out
sbb
decl
mov
or
mov
in
cmp
xor
lock
sbb
testb
jae
bound
xchg
testb
mov
xchg
push
add
add
pop
sahf
adc
in
sbb
inc
iret
pop
cmp
xor
inc
movsl
lds
push
cmpsl
ret
movsl
push
repz
mov
test
je
mov
push
call
jmp
jge
pusha
pop
repnz
xchg
add
push
cmp
xchg
sub
or
outsl
sbb
pusha
or
add
adc
cld
adc
sbb
pusha
add
mov
adc
in
pusha
notb
fdivrl
jb
in
mov
mov
js
mov
push
adc
ds
or
outsl
sbb
pusha
or
or
pusha
add
pop
pusha
adc
hlt
adc
sbb
pusha
or
imul
adc
cmpsl
xor
stos
cmp
sbb
jle
scas
xor
int
jmp
out
jo
clc
pusha
notb
mov
sbb
mov
in
sbb
cmp
adc
divl
jl
add
xchg
adc
jb
xchg
and
xor
fcompl
stos
pop
scas
and
fwait
adc
adc
sub
cmp
pop
fstl
mov
xor
arpl
xchg
mov
add
adc
push
into
arpl
xchg
gs
mov
stc
imul
mov
adc
mov
gs
and
xchg
add
sahf
cmp
inc
mov
cmp
sti
sahf
insl
mov
lret
in
mov
adc
sbb
pusha
or
pusha
xor
scas
or
iret
fiadds
mov
and
add
mov
pop
xchg
repnz
pop
fcmovnu
pop
iret
stos
pop
scas
cmp
sub
icebp
popa
add
sbb
fbstp
pop
repnz
xchg
pop
bound
push
std
push
push
xlat
inc
and
aaa
fstl
lods
pop
scas
mov
xchg
lock
xchg
sbb
outsb
cld
fwait
jbe
inc
into
pop
cmp
jno
adc
int
and
pop
jle
popa
add
push
or
adc
mov
cmp
and
add
in
repnz
popf
insb
fisubs
imul
push
loop
in
jle
lret
xchg
addr16
daa
inc
mov
imul
add
adc
les
mov
inc
mov
push
int3
inc
and
or
sbb
mov
inc
and
ss
fistps
stos
adcw
and
fisubl
xchg
gs
sbb
xor
xor
jo
add
add
pop
pusha
or
add
outsl
or
or
pusha
or
add
adc
pusha
or
or
or
or
pusha
or
adc
outsl
or
or
jo
idiv
decl
or
or
or
or
pusha
or
adc
or
adc
in
add
pop
in
pop
outsl
adc
outsl
add
add
pusha
add
pusha
add
pusha
add
pusha
add
popa
mov
adc
add
outsb
in
sbb
in
jle
mov
fsubrs
jo
loop
ja
jmp
cli
popf
insb
mov
adc
sbb
pusha
or
add
adc
clc
adc
sbb
pusha
or
mov
adc
mov
repz
cmovbe
dec
sub
push
xor
mov
sbb
movsb
cmp
push
aad
shlb
and
movsl
loope
ljmp
inc
mov
sub
shll
push
cmc
sbb
inc
sub
pop
lea
and
xchg
mov
lahf
cli
or
inc
rclb
sub
cwtl
push
imul
add
cmp
jnp
mov
mov
rclb
jae
in
push
fimull
fidivrl
scas
es
cs
push
cmp
ds
rclb
addr16
fisttpll
out
lret
mov
mov
mov
stc
mov
ljmp
aad
dec
cld
popa
lock
pop
test
and
mov
icebp
push
adc
roll
dec
jmp
push
xchg
repz
int
inc
sbbl
lods
or
iret
add
imul
or
iret
mov
mov
mov
mov
mov
push
mov
mov
stos
jge
jmp
and
or
or
pusha
or
pop
pusha
adc
imul
jno
xorb
andb
adc
add
imul
or
iret
scas
sub
lds
lock
xorl
mov
and
ja,pn
add
daa
sub
ds
test
das
stos
cmp
inc
data16
bound
fstpt
jge
notl
fcompl
scas
pop
test
mov
adc
jae
insl
hlt
pop
mov
pushf
mov
mov
das
fwait
jmp
out
mov
ret
cmpsl
push
jecxz
mov
sti
jae
xchg
repnz
insl
ret
notl
cmpsl
ret
mov
mov
or
push
shll
pop
iret
stos
pop
loopne
xchg
add
adc
scas
addr16
rclb
sub
jecxz
dec
ret
mov
outsl
lcall
cmp
mov
dec
int3
inc
and
cmp
inc
add
data16
xchg
cmc
add
jnp
popa
add
adc
xor
fsubr
clc
adc
sbb
pusha
add
mov
adc
sbb
add
xor
xchg
adc
idivb
xor
outsl
xor
add
add
pop
pusha
add
pusha
or
outsl
add
dec
pusha
add
pop
jo
or
add
add
outsl
add
dec
pusha
add
pusha
add
outsl
add
ljmp
pusha
add
outsl
add
add
pop
pusha
add
pusha
add
add
pop
in
pop
outsl
adc
outsl
or
dec
pusha
or
pusha
or
pusha
or
pusha
or
mov
adc
or
inc
leave
pop
cmp
outsb
insb
insb
or
mov
sbb
out
outsl
sbb
imul
or
imul
adc
add
add
jge
js
ljmp
lcall
pusha
pop
repnz
cmpsb
and
push
xor
daa
inc
mov
cli
fs
popf
insb
jmp
les
int3
dec
sub
cmp
mov
pop
xchg
or
je
sti
imul
adc
test
add
push
rolb
rolb
inc
mov
pop
mul
sbb
add
add
outsl
xor
add
add
add
add
pusha
adc
in
add
pop
in
sbb
pusha
add
outsl
add
add
pusha
add
pusha
add
pusha
add
mov
adc
add
or
or
in
bound
pop
bound
jg
cmp
jg
jmp
fisubrl
xorb
push
mov
mov
cltd
outsl
and
sbb
outsl
add
adc
imul
or
iret
or
in
hlt
adc
sbb
pusha
or
add
add
lods
or
les
in
lods
push
pop
pusha
add
pusha
add
adc
mov
push
or
iret
add
imul
adc
sbb
arpl
add
mov
mov
jg
push
pop
mov
or
cmp
loop
pop
loop
cli
js
mov
ljmp
or
int
and
xor
dec
sub
sbb
lret
gs
adc
sbb
bound
cmp
pop
push
ret
cmpsb
push
mov
mov
jg
outsb
lds
push
cmpsl
push
fstpt
or
in
shrb
xor
arpl
inc
aam
dec
jmp
jg
xchg
add
mov
inc
mov
or
mov
mov
inc
and
ja
dec
fstpt
jnp
in
dec
dec
ret
xchg
sub
loop
call
dec
fnstcw
add
adc
xchg
sbb
xchg
pop
mov
mov
test
jge
je
pusha
jae
imul
add
in
jl
add
outsl
xor
add
sub
and
or
iret
enter
push
cmp
adc
jno
add
in
bound
test
outsl
sub
sub
pusha
or
or
or
or
pusha
adc
in
add
pop
in
sbb
pusha
or
outsl
or
or
pusha
or
pusha
or
pusha
or
mov
adc
or
inc
iret
pop
cmp
xor
lds
mov
pusha
or
add
outsl
add
add
pop
jo
or
add
add
outsl
add
dec
pusha
add
pusha
add
outsl
add
ljmp
pusha
add
outsl
add
add
pop
pusha
add
pusha
add
add
pop
in
pop
outsl
adc
outsl
or
dec
pusha
or
pusha
or
pusha
or
pusha
or
add
pop
in
sbb
pusha
or
outsl
or
or
pusha
or
pusha
or
pusha
or
or
outsl
or
dec
pusha
or
mov
adc
or
and
popa
in
jge
notl
repnz
pop
repnz
and
fisttpl
fnstsw
and
movsl
sub
outsl
cmc
imul
insl
fisubrl
out
cli
insb
loop
je
scas
cmp
pop
repnz
fs
inc
aam
dec
jmp
aad
jno
js
ljmp
repnz
xchg
cmc
add
mov
in
sbb
insl
repnz
pop
bnd
add
pop
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
and
push
mov
jle
arpl
mov
loop
icebp
nop
arpl
pop
fcomps
xchg
addr16
out
jl
testb
pop
into
test
jecxz
jne
mov
nop
testl
out
negl
jecxz
and
or
adc
push
imul
sbb
das
inc
lret
lret
cltd
or
das
cmp
lea
mov
and
lret
mov
mov
sbb
loopne
add
and
rcrl
pop
lcall
inc
fisttps
dec
mov
mov
int
shlb
in
pop
aam
pop
enter
or
push
adc
mov
cld
ljmp
pop
pusha
or
and
mov
fmuls
fsubs
mov
cmpsl
ret
popa
jmp
push
in
push
inc
rcll
sub
mov
pop
adc
xor
mov
rcll
xor
stc
pop
jne
imul
sub
sub
outsl
add
sbb
sbb
outsl
adc
imul
or
iret
push
fimull
fidivrl
inc
into
pop
cmp
xor
lea
and
xlat
inc
and
or
insl
fs
jg
jmp
push
adc
jae
in
inc
aam
dec
jmp
addr16
push
push
xchg
cmc
add
adc
mov
mov
adc
xchg
pop
bound
int
ficomps
in
in
sbb
lahf
cli
or
xor
xor
leave
dec
fdivrs
jecxz
jne
and
cmp
dec
scas
das
mov
mov
jns
pop
fistps
test
lods
fwait
push
mov
es
sti
ja
xorb
std
insl
hlt
pop
out
notl
fwait
adc
lahf
punpckhdq
dec
mov
pop
loop
push
jecxz
push
in
xor
adc
cmpsl
pop
adc
xor
mov
enter
popa
je
jp
in
pop
jmp
shr
jp
jp
imul
jno
jnp
in
pop
gs
push
inc
fdivl
in
cmp
xor
and
pop
das
mov
inc
mov
xchg
adc
in
jge
divl
cmc
gs
xor
movsl
xor
scas
aas
pop
test
cli
or
add
je
lea
repz
cmc
push
rcll
pop
mov
mov
repz
mov
mov
fadds
pop
cmp
and
cwtl
push
imul
inc
shlb
push
xor
pop
and
arpl
and
pop
int
and
jl
mov
inc
mov
xor
leave
arpl
xchg
gs
pop
xchg
adc
inc
xchg
rcrl
int3
es
dec
add
ret
xorb
add
outsl
xor
add
sub
sbb
add
imul
adc
jo
in
lods
dec
pop
pusha
or
or
mov
xchg
mov
mov
lahf
cli
or
outsl
in
bound
outsl
sbb
add
or
or
sub
pusha
or
xor
or
jo
add
add
rorl
les
nop
sti
cs
pusha
add
add
rorb
iret
clc
js
mov
mov
jg
outsl
or
stc
mov
stos
int
jmp
xchg
add
xchg
adc
ss
leave
inc
shlb
daa
inc
mov
scas
es
cs
imul
insl
int3
test
cltd
clc
or
fistl
lods
pop
lahf
add
adc
cmp
jg
jmp
shlb
cmp
lds
mov
lds
and
addr16
loopne
jb
rorl
mov
dec
sub
lds
loope
clc
xchg
mov
sbb
jge
icebp
jno
xorb
add
push
xor
daa
int
ret
mov
mov
inc
mov
and
psubd
xlat
push
shlb
out
loopne
sub
push
xor
sub
imul
insl
cwtl
adc
imul
or
jo
add
add
pop
pusha
add
outsl
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
imul
adc
arpl
arpl
cmc
push
das
in
sbb
and
pusha
add
sub
ret
iret
cli
jnp
mov
sti
jne
mov
movsb
das
mov
jmp
lods
cmp
fwait
or
add
ljmp
stc
mov
cltd
or
xor
cmp
mov
aam
and
jns
ja
loope
mov
mov
mov
inc
mov
mov
mov
es
cs
mov
fistps
xchg
addr16
repz
xchg
cmp
push
lds
repnz
decb
xlat
push
shlb
xchg
lods
and
xor
fwait
adc
lods
lret
inc
loope
fdivl
in
sti
jne
mov
loopne
jecxz
jne
and
insb
std
insl
hlt
pop
lods
pop
int3
inc
and
adc
sub
jno
mov
xchg
insb
clc
outsb
or
dec
and
pop
insl
inc
sbb
add
pop
pusha
add
sub
adc
hlt
outsb
cld
fwait
jbe
ret
pop
into
test
jo
loop
adc
iret
push
mov
int
loopw
mulb
aaa
mov
lods
daa
movsl
xor
push
shlb
insl
pushf
bound
stc
dec
iret
pop
cmp
and
xchg
add
jp
push
xchg
repz
std
sbb
sbb
lret
mov
mov
sbb
aad
xorl
or
sar
jbe
cmpl
mov
jg
sub
lret
rcll
push
sbb
clc
push
add
add
and
dec
fidivrs
mov
es
ret
lods
pop
cli
adc
xchg
outsl
sub
or
sub
pusha
or
pop
pusha
or
int3
ret
iret
imulb
je
push
push
inc
jmp
call
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
jo
add
add
stc
or
les
mov
pop
pusha
add
pusha
add
out
or
iret
sbb
cli
lock
bound
leave
aas
scas
xor
icebp
popa
add
jbe
or
xor
and
sbb
cmc
gs
add
sbb
pop
xchg
nop
testl
add
pop
int
aad
dec
mov
inc
cmpsb
mov
ficoml
xor
push
and
add
xor
mov
xchg
repnz
mov
pop
xchg
or
xor
inc
icebp
and
adc
sub
sub
dec
lds
mov
mov
es
scas
xchg
or
push
ret
cmpsb
push
mov
shll
sbb
push
movsb
cmp
adcl
test
dec
ret
mov
sub
mov
lret
imul
or
outsl
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
jo
add
add
and
adc
jo
ljmp
pusha
or
rorb
iret
pop
jecxz
push
in
scas
sub
pop
xchg
repnz
mov
scas
sti
ja
xorb
sahf
or
cmpsb
inc
jecxz
stc
cwtl
imul
jmp
out
jl
notb
xor
inc
int
and
pop
adc
push
xchg
or
sub
sbb
inc
arpl
popa
add
inc
inc
rolb
sarb
push
les
in
sbb
and
pusha
add
pusha
xor
rorl
iret
das
mov
mov
xor
ljmp
pop
pusha
add
imul
adc
xor
clc
jae
xchg
xor
cmp
mov
filds
dec
scas
insb
hlt
push
cld
push
xchg
jne
imul
pop
adc
cld
ljmp
pop
pusha
add
imul
xor
pop
iret
stos
pop
loopne
push
xor
push
js
imul
in
mov
shll
lds
mov
mov
mov
xchg
pop
xchg
adc
or
mov
xchg
icebp
add
lods
es
cs
ss
daa
scas
cmp
mov
das
cmpsl
aaa
push
mov
imul
into
pop
cmp
jno
scas
cmp
mov
adc
daa
xchg
add
das
mov
mov
mov
mov
and
sbb
aas
lcall
ret
pop
into
test
sahf
stc
or
insl
hlt
push
cld
adc
sub
lds
and
pop
fisttps
fldcw
push
rolb
sarb
push
js
ljmp
or
lea
je
lea
dec
fnstcw
mov
es
movsl
sub
xchg
in
negb
add
call
test
je
lea
push
pushl
jmp
ljmp
mov
lods
and
cmp
or
in
out
lock
cld
fwait
jbe
popa
repnz
pop
repnz
iret
pop
int
addr16
pop
int3
stos
iretw
insl
stc
imul
cwtl
decl
mov
sbb
popa
enter
imul
imul
or
iret
std
xor
jo
add
add
adc
imul
or
iret
lret
push
mov
and
popf
or
jmp
push
in
add
jno
xorb
dec
ret
sarl
lock
lret
jne
out
add
flds
sahf
sbb
and
lcall
mov
ss
push
xchg
add
jno
push
mov
es
mov
fnstsw
addr16
pop
mov
xchg
repz
fimull
push
cmp
xadd
cmpsb
push
hlt
stos
aas
scas
lret
fwait
or
pop
lret
scas
pop
ljmp
loope
in
jg
lea
mov
sbb
aas
mov
jge
je
and
mov
push
addr16
sbb
jmp
inc
sbb
cmp
imul
insl
mov
mov
out
sbb
mov
jl
jl
imul
adc
cmpsl
pop
adc
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
imul
insb
loop
je
add
aas
mov
lahf
sbb
mov
inc
mov
dec
ret
ret
inc
fidivrl
cwtl
decl
out
pushl
cmpl
or
hlt
push
cld
sub
mov
arpl
jl
notb
push
test
push
test
mov
dec
mov
add
dec
adc
insb
cli
push
pop
iret
stos
pop
into
push
shlb
aas
lret
dec
fidivrs
movsb
ret
faddl
lcall
es
mov
pop
xchg
jb
or
jbe
loopne
cmp
addb
repnz
sub
jmp
std
jns
mov
addb
das
mov
mov
js
popa
in
cld
fwait
jbe
hlt
jge
je
xchg
popf
in
icebp
ret
dec
fdivrs
les
cmp
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
imul
or
iret
call
leave
repz
jne
push
jb
xchg
or
call
int3
stos
cmp
xchg
add
and
outsb
cld
fwait
jbe
movsl
xor
add
sbb
and
movsl
xor
inc
aam
dec
lea
inc
and
xor
pop
into
test
dec
fnsave
xchg
or
or
push
jle
call
es
cli
jp
jp
and
cwtl
push
mov
es
jo
xorl
and
mov
cmpsb
shll
cwtl
adc
cmc
gs
pop
xor
mov
shll
aaa
push
mov
cmpsl
push
xchg
lods
and
jbe
cltd
or
cmpsb
xor
int
mov
arpl
cmc
pop
xchg
pop
xchg
repnz
cmp
mov
sub
add
add
pop
pusha
or
sub
mov
outsl
clc
outsb
or
push
mov
xor
add
add
pop
pusha
or
pop
pusha
or
push
int3
or
iret
sbb
cmp
movq
jnp
in
sub
fsubrl
aam
mov
inc
mov
lods
xor
je
lea
inc
fidivrl
mov
in
sbb
mov
and
mov
mov
out
jl
mulb
in
outsl
lcall
sbb
cmp
xor
int
and
xor
popa
icebp
nop
arpl
lea
nop
testl
dec
movb
jecxz
jne
sbb
sbb
xchg
and
cmp
fs
fimull
fisubrl
sbb
out
adc
pop
adcl
sbb
mov
sbbl
out
je
lea
into
pop
cmp
xor
cli
push
sahf
or
cmpsb
dec
mov
stos
pop
into
test
and
mov
xorb
rclb
sub
shr
or
cld
ljmp
pop
pusha
or
imul
or
iret
dec
enter
sub
jb
incb
xor
pusha
add
add
pusha
adc
imul
adc
fstps
stos
data16
push
ret
cmpsb
push
cmpsb
loopne
sti
sahf
insl
xorl
das
dec
mov
push
into
test
pop
adc
in
cld
adc
sbb
pusha
or
imul
adc
popl
xchg
repz
std
into
inc
mov
out
fs
popf
insb
mov
or
iret
xor
ss
pop
enter
inc
movsb
mov
test
cmp
add
cs
jle
add
pusha
repz
cmc
push
or
cltd
or
lock
inc
mov
mov
orl
cli
or
pop
sar
hlt
xchg
outsb
lods
xchg
or
and
js
ja
loope
mov
jmp
xchg
pusha
out
dec
fnstcw
inc
and
cmp
popa
add
sbb
sti
xchg
adc
and
pop
int
addr16
xchg
adc
fwait
or
push
push
mov
aad
sub
cmp
push
cmc
add
jb
xchg
and
stos
es
cs
push
fisttps
flds
arpl
xchg
gs
or
rolb
shlb
aas
loop
xor
cs
mov
test
cmp
push
pushf
sti
push
mov
cs
xor
add
jne
sbbb
out
sbb
mov
cmp
mov
enter
push
xchg
inc
fdivl
in
outsl
cmc
gs
pop
inc
fisttps
les
scas
pop
ffree
push
outsl
sub
sub
or
outsl
add
dec
pusha
or
or
or
or
dec
pusha
or
add
or
pusha
adc
jo
add
add
lret
les
cmp
pop
pop
pusha
or
or
leave
or
iret
sub
and
ss
fs
stos
int
aam
or
outsl
xor
lock
sbb
pusha
add
imul
adc
xor
sub
push
add
sub
daa
mov
and
push
fisttpl
xor
push
mov
gs
les
movsb
push
mov
xor
lret
inc
shlb
fistpll
lret
scas
pop
sbb
push
fisttps
flds
jp
jp
test
pop
roll
aad
mov
mov
and
and
call
jbe
loopne
xchg
and
pushf
sti
push
aad
aaa
cmpsl
ret
repz
mulb
push
mov
ret
int
shlb
into
cmp
xchg
mov
push
xor
sub
push
aaa
ret
lods
lret
inc
mov
xchg
inc
and
fs
adc
pop
and
mov
fwait
decb
mov
stos
int
iret
fsts
lods
pop
cli
iret
dec
dec
in
and
and
pusha
add
pusha
xor
lret
iret
in
lock
bound
sbb
js
imul
pop
data16
push
cld
dec
xchg
in
sbb
push
mov
xchg
daa
push
mov
es
fimuls
mov
mov
sbb
dec
jecxz
push
in
cld
outsl
lcall
push
xor
or
mov
inc
mov
mov
shr
in
jle
flds
mov
push
imul
jmp
movl
mov
dec
mov
cld
psllq
movsl
xor
les
int3
cmp
push
shlb
jmp
aad
in
bound
sbb
outsb
lock
mov
sbb
add
xor
std
das
bnd
mov
inc
mov
xchg
push
xchg
repz
mov
stos
add
js
mov
daa
mov
inc
mov
adc
and
pusha
or
outsl
sub
add
or
outsl
or
or
pop
jo
or
add
or
outsl
or
dec
pusha
or
pusha
or
outsl
or
ljmp
pusha
or
outsl
or
or
pop
pusha
or
pusha
or
add
pop
in
pop
outsl
adc
outsl
add
dec
pusha
add
pusha
add
pusha
add
pusha
add
add
pop
in
sbb
pusha
add
outsl
add
add
pusha
add
pusha
add
pusha
add
add
outsl
add
dec
pusha
add
into
or
pop
pusha
add
aaa
cmpsl
aaa
push
mov
int
xchg
push
rcll
jbe
xchg
mov
sbb
call
xchg
jl
jp
in
push
jnp
jo
loop
les
scas
pop
outsb
cld
fwait
jbe
daa
stos
cmp
bound
push
aaa
ret
mov
js
popa
and
outsb
call
js
xor
xor
pop
xchg
adc
xchg
sbb
fwait
adc
scas
aas
pop
test
test
daa
test
pop
test
pop
aam
sub
mov
pop
cmp
pusha
push
lret
pop
ds
cwtl
mov
imul
imul
or
iret
xor
pop
leave
pop
cmp
pusha
push
les
int3
jle
mulb
push
cmp
xor
jge
je
inc
mov
mov
cmp
mov
scas
cmp
pop
les
int3
dec
jg
jbe
loopne
sbb
mov
shll
xlat
mov
stos
into
cmp
decb
add
sub
inc
fidivrl
loope
jae
mov
test
cmp
ja
xchg
cmc
add
add
inc
into
pop
cmp
and
push
mov
pop
xchg
adc
pop
aad
sub
pop
hlt
jg
mov
jmp
iret
xor
push
dec
jle
jge
negl
push
xor
jb
and
adc
push
jno
aaa
fcoms
cmpsb
push
hlt
imul
inc
fdivl
in
push
into
pop
cmp
cmp
push
mov
push
call
sbb
and
jge
je
sub
jl
jne
movq
add
pop
pusha
add
or
iret
imul
adc
dec
and
jo
add
add
pop
pusha
add
add
or
pop
pusha
add
sub
rorl
adc
dec
ret
push
add
call
imul
jmp
int3
pop
leave
test
lock
ss
mov
mov
push
sub
cli
push
call
fbstp
fsts
add
jno
std
jmp
adcl
test
sbb
adc
sub
lret
and
add
dec
std
std
lcall
push
add
sbb
data16
xchg
outsb
jmp
orl
pop
xchg
jb
sbb
sub
add
jmp
stos
das
mov
xchg
add
jnp
cmp
adc
imul
xor
jmp
or
ljmp
mov
jmp
mov
lahf
cli
or
mov
sahf
stc
or
stos
cs
fnstcw
push
mov
jmp
inc
int3
inc
and
cmp
dec
scas
es
cs
in
cld
adc
sbb
pusha
or
iret
or
iret
and
cmp
xor
mov
sbb
pusha
or
rorb
adc
cld
jb
xchg
xchg
lahf
cli
or
inc
out
inc
inc
pop
mov
add
jb
std
push
jle
mov
mov
mov
loope
adc
dec
mov
mov
inc
mov
add
jmp
clc
push
mov
mov
das
test
mov
add
call
imul
jl
jns
jmp
das
mov
in
jg
mov
push
repz
call
ret
test
mov
outsb
cld
fwait
jbe
xchg
or
push
call
ss
pop
test
imulb
lcall
mov
jl
inc
rcl
jmp
jmp
int3
dec
frstor
fildll
cmp
add
mov
std
pushl
fcoms
cli
rcll
lods
pop
mov
jo
add
add
pop
pusha
add
xor
rorb
adc
pop
fisttpll
out
push
shlb
xorb
mov
js
jp
sti
imul
sbb
repnz
nop
push
popa
nop
aaa
sub
jbe
add
ljmp
xchg
lock
mov
add
cmpsl
movsb
ret
ds
aaa
cmpsl
aaa
push
mov
cmpsb
push
cli
inc
aam
sub
ret
cmpsb
push
hlt
sub
push
call
imul
or
jl
push
mov
les
sahf
stc
or
insb
jmp
lds
iret
add
adcl
xor
and
lods
lret
inc
mov
fs
push
test
push
jmp
push
shll
lahf
push
out
jg
jmp
add
or
outsl
and
pusha
or
xor
aam
adc
lcall
jecxz
push
in
nop
push
mov
adcl
nop
in
or
and
pusha
or
pusha
xor
aad
adc
add
repz
mov
fisubrs
dec
outsl
std
jae
xchg
loop
loope
jae
pop
enter
jp
xchg
add
sahf
aaa
jno
jnp
in
pop
rorb
mov
pop
and
push
movsl
lods
lret
inc
movsb
test
aad
into
rcrl
pop
mov
mov
inc
mov
sbb
daa
stos
cmp
bound
ret
push
lds
aas
mov
pop
jecxz
push
in
rcll
lods
pop
mov
aam
add
ljmp
shll
adc
pop
sbb
jmp
lock
bound
imul
push
ret
cmpsb
push
xchg
dec
fnstcw
fidivrs
aas
pop
test
and
shlb
fistpll
cmpsl
ret
inc
inc
and
ja
xchg
add
shl
add
outsl
sub
or
add
outsl
add
add
or
pusha
add
or
or
pusha
add
add
add
pusha
adc
imul
xchg
add
xor
dec
fstpt
mov
inc
shll
jno
jecxz
pop
outsl
xor
mov
sbb
pusha
add
rorl
adc
sbbb
and
and
cmp
out
test
divb
cmpl
popa
icebp
nop
arpl
fisttpl
inc
es
xor
cli
push
xchg
jb
jl
pusha
notb
push
cld
sbb
or
push
jno
push
shll
repnz
nop
and
push
lahf
push
mov
mov
and
in
dec
mov
js
cmp
mov
jno
lret
xchg
addr16
out
mov
cwtl
add
adcb
subb
daa
inc
mov
scas
aaa
cmpsl
ret
jne
js
ljmp
das
cmp
test
mov
cs
inc
and
and
push
xor
sbb
outsb
cld
fwait
jbe
cli
jae
imul
adc
sbb
pusha
add
aam
adc
inc
outsb
shrb
nop
adc
sbb
pusha
or
or
iret
lcall
sbb
outsl
or
adc
jo
add
add
das
or
les
into
hlt
test
or
pusha
or
push
xlat
or
iret
xor
in
data16
xchg
outsb
popf
push
xchg
add
jno
outsb
cld
fwait
jbe
arpl
js
ljmp
or
xchg
jb
pop
push
lcall
push
jns
das
add
push
fwait
or
xor
pushf
push
les
int3
gs
ljmp
xchg
gs
aas
pop
test
sbb
dec
rorb
mov
sbb
pop
leave
test
mov
gs
pushf
outsl
test
gs
pushf
outsl
ljmp
pusha
loop
pop
loop
int
fdivrl
pop
jb
addr16
pop
or
cmp
mov
and
out
and
mov
inc
mov
aas
lret
mov
push
lea
push
lds
rorb
adc
lret
inc
fidivrl
outsb
or
cmp
gs
pushf
outsl
lret
xchg
cmc
add
aad
inc
mov
add
add
and
pusha
add
pusha
xor
aad
adc
and
and
push
lahf
push
sbb
cld
push
lahf
push
movsb
xor
sbb
push
mov
push
aaa
ret
dec
fdivrl
ss
mov
xchg
popa
xchg
push
cmp
dec
inc
fisttps
fldenv
pop
leave
test
nop
rcll
cmpsl
push
mov
or
mov
movsl
gs
adc
pop
inc
rcll
push
pop
fimuls
adc
pusha
outsl
movsb
lret
xor
sub
ljmp
pop
pusha
or
imul
adc
fcoms
cmpsl
push
mov
mov
fildll
into
dec
frstor
outsl
sub
adcb
pop
pusha
or
imul
inc
xlat
mov
call
xchg
inc
and
mov
test
sti
imul
dec
mov
aam
fidivrl
addr16
push
pop
xchg
pop
bound
fldcw
andl
add
xor
movsb
outsl
hlt
push
cld
push
pop
les
int3
es
fimull
adc
mov
xchg
adc
aad
fnstcw
aam
mov
mov
add
adc
push
mov
mov
and
or
in
push
lahf
push
int3
dec
fidivrs
push
popa
nop
js
gs
pushf
outsl
sahf
sbb
add
cmc
gs
sbb
dec
rcll
pushw
jnp
in
aas
lcall
loop
pop
loop
addr16
imul
dec
jle
arpl
cmc
pop
roll
mov
lock
enter
popa
mov
mov
and
jmp
mov
mov
sbb
xor
cmc
insl
std
test
ja
bound
xor
dec
mov
xchg
adc
pop
pop
jp
adc
outsl
lcall
ja
loope
out
cli
popf
insb
test
mov
jg
bound
inc
and
xor
fimull
fisubl
dec
fdivrl
push
xor
cmp
mov
gs
jl
aaa
mov
add
and
cmpsl
iret
or
iret
test
pushf
sti
push
in
sbb
inc
shlb
cmp
sbb
jo
ljmp
pop
pusha
add
imul
xchg
add
hlt
push
cld
pop
dec
les
int3
sbb
es
mov
leave
inc
fidivrl
mov
js
mov
sub
xchg
add
and
add
addr16
push
sbb
or
jb
xchg
cmp
xor
in
sbb
imul
adc
insb
or
subl
sbb
and
cmp
mov
inc
mov
pop
outsb
imull
fimuls
adc
xlat
mov
pusha
xor
iret
or
imul
adc
add
add
xchg
adc
add
or
les
int3
imul
lcall
adc
sub
mov
call
cs
fisttps
fsts
rcll
push
ja
push
insl
hlt
pop
mov
dec
in
jbe
cmpl
xchg
mov
cld
fwait
jbe
les
scas
pop
fldl
dec
das
ficompl
add
inc
xlat
mov
cmpsl
mov
movsl
int3
aas
aad
pop
int3
stos
and
notb
pop
jp
inc
push
shlb
xorb
sub
push
ret
cmpsb
push
mov
fmuls
fdivrs
cwtl
push
imul
push
ret
cmpsb
push
xchg
dec
adc
daa
dec
rclb
addr16
fisttpl
cli
push
imul
insl
ficoml
adc
into
dec
frstor
jo
add
add
pop
pusha
add
imul
or
iret
or
ja
ret
push
lds
jl
jne
jno
push
mov
sahf
stc
or
jns
pusha
pop
repnz
mul
push
das
cmpsl
aaa
push
mov
and
add
push
xor
add
mov
and
pop
iret
pop
cmp
jle
adcl
xchg
pop
bound
lds
sets
imul
inc
xlat
mov
call
in
das
ret
pop
into
test
dec
fnsave
cltd
add
or
push
pushf
sti
push
xchg
lods
and
jge
clc
outsb
or
adc
jg
jmp
mov
punpckhdq
push
cmpsl
jb
add
std
or
lods
das
mov
mov
js
jp
cmp
inc
shlb
dec
in
imul
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
sub
cmp
pop
sbb
xchg
sbb
adc
dec
fdivrs
movsb
ret
mov
outsl
or
scas
loope
out
jno
ret
push
shlb
adc
push
outsl
clc
outsb
or
push
pop
lret
lret
mov
cmpsl
inc
shll
mov
les
pop
cmp
cmp
in
adcb
pop
pusha
add
imul
fisttpl
adc
inc
fimuls
push
mov
test
and
pop
aam
es
cs
mov
mov
pop
jp
jb
jb
xchg
pop
adc
call
jo
add
add
pop
pusha
or
and
adc
dec
int
and
add
lods
and
inc
rolb
cmp
or
iret
outsl
xor
add
add
adc
imul
adc
ljmp
xor
push
lahf
push
data16
jl
notb
pop
fisttpl
outsl
out
adc
dec
dec
push
xor
sbb
pop
cmp
push
xor
push
jmp
jge
and
xor
mov
dec
jecxz
push
in
sub
add
push
popa
nop
daa
sub
ljmp
and
dec
fdivrl
pushf
sti
push
fadds
mov
leave
add
mov
stos
int
cmc
out
insb
loop
je
jge
xchg
testb
adc
mov
lods
mov
xchg
sbb
ret
mov
xor
scas
pop
je
fwait
adc
push
ret
cmpsb
push
mov
scas
or
push
lahf
push
mov
nop
testl
or
mov
sub
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
xchg
or
jle
mov
std
or
enter
pop
into
out
out
jno
adcb
jecxz
push
in
mov
mov
and
outsl
scas
xor
sbbb
jmp
cs
mov
repz
mov
dec
fstpl
das
dec
mov
push
mov
shrl
test
int
loope
adc
pop
xchg
adc
insb
loop
je
inc
rclb
sub
mov
shlb
mov
xchg
sbb
jg
mov
add
sbb
pop
dec
ret
ret
and
roll
mov
imull
mov
pusha
pop
repnz
xor
insb
cli
push
push
lahf
push
or
popf
or
sub
lds
sbb
clc
pusha
notb
lock
or
outsl
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
imul
or
iret
jnp
jo
loop
sbb
sub
clc
adc
sbb
pusha
or
pusha
or
pop
pusha
adc
imul
adc
aas
mov
fcoms
sbb
pusha
or
imul
adc
out
adc
add
add
stc
mov
loopne
adc
dec
push
push
xor
jns
setg
or
cmpsb
mov
mov
hlt
push
cld
push
lods
cmp
pop
xchg
adc
imul
cmp
jg
xchg
cmc
add
xchg
adc
jmp
daa
cmpsl
aaa
push
mov
cmpsl
push
test
scas
cmp
mov
and
insb
or
cmc
push
fmuls
fdivrs
add
add
jo
mov
dec
push
xor
push
mov
pop
rolb
rclb
jle
popa
add
push
loop
out
jo
pusha
icebp
popa
add
pop
int3
pop
repnz
fs
mov
gs
cmp
push
mov
inc
call
fadds
add
sub
add
pop
pusha
add
pop
pusha
add
sub
mov
icebp
insl
std
test
imulb
lcall
adc
or
out
pop
xchg
add
fmuls
fdivrs
dec
mov
lock
daa
or
inc
push
xor
es
xchg
testb
mov
ret
fidivl
and
adc
cld
ljmp
pop
pusha
or
imul
or
iret
pop
roll
shll
inc
int
and
jb
adc
ja
imul
push
cmp
push
ljmp
mov
es
test
add
movsl
adc
outsl
or
scas
cmp
add
xchg
testb
xlat
push
lods
movsb
ret
fsubl
imul
cld
fwait
jbe
pop
rcll
inc
jne
js
ljmp
mov
sahf
jbe
out
adc
push
outsl
out
jl
notb
fstps
xchg
addr16
sahf
pop
sbb
push
cwtl
and
stc
imul
bound
jecxz
jne
jno
outsb
or
or
cmpsb
xor
scas
or
js
mov
loop
cld
fwait
jbe
out
clc
lahf
push
insb
loop
je
lea
mov
es
push
les
int3
jge
fimull
fidivl
pop
inc
adc
add
add
pop
pusha
add
pusha
xor
add
add
rorb
les
cld
out
pusha
or
pusha
or
xchg
or
iret
jl
js
ljmp
cld
inc
inc
and
imul
jmp
dec
fnstcw
js
ljmp
out
out
jg
jmp
or
jp
pop
leave
test
ficomps
lcall
pop
ds
data16
adc
push
rolb
inc
stos
imul
dec
leave
pop
cmp
push
xchg
sbb
cmp
movsb
cmp
pop
lahf
pop
mov
ljmp
cld
pxor
inc
fidivrl
sbb
jns
cmpsl
aaa
push
mov
sub
xor
lret
and
aas
pop
test
int3
aas
mov
jg
mov
clc
push
lahf
push
pushf
sti
push
mov
fs
leave
pop
cmp
pusha
adc
dec
fmuls
fdivrs
das
mov
mov
xchg
je
cmpsl
out
cld
in
cld
adc
sbb
pusha
or
pusha
sub
jmp
adc
fwait
sbb
pusha
sub
add
add
outsl
and
add
and
add
add
mov
lret
mov
pop
pop
pusha
or
pusha
or
xchg
or
iret
add
gs
pushf
outsl
test
jb
xchg
push
leave
pop
cmp
dec
inc
rclb
or
jnp
mov
ljmp
xchg
pop
bound
js
ja
mull
icebp
sub
push
cmp
cmp
dec
frstor
fisubrl
les
jo
loop
xor
push
xor
lock
bound
cmp
and
jne
outsl
or
lds
je
out
dec
lods
lods
lret
inc
lock
imul
or
dec
loope
out
jo
test
idivl
js
ljmp
add
aaa
cmpsl
ret
adc
adc
call
lcall
and
sub
cmp
gs
adc
in
sbb
mov
lret
jne
out
add
cmpsb
inc
rclb
pop
mov
aad
jb
pop
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
dec
popa
cmpsb
imul
pop
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
sub
xor
xchg
adc
sbb
pusha
add
imul
fisttps
adc
add
add
arpl
cmc
and
mov
mov
ror
inc
aad
dec
mov
adc
or
sub
lcall
mov
clc
je
lea
movsb
ret
ds
pop
lret
scas
pop
in
fisttpl
mov
pushf
sti
push
cmpsl
dec
jecxz
push
in
fisttps
mov
pop
cmp
popa
das
mov
setp
outsl
lcall
out
call
xchg
stc
notl
pusha
ljmp
stc
out
xchg
lock
std
test
xchg
adc
mov
movsl
int3
aas
aad
mov
arpl
jo
loop
jae
imul
add
and
add
scas
sub
jl
jne
ja
das
jecxz
hlt
adc
sbb
pusha
add
in
adc
imul
pop
lea
dec
fidivrs
cmpsb
shll
inc
iret
pop
cmp
add
and
add
add
xor
add
pusha
sub
and
fwait
adc
cld
ja
xorb
stc
imul
test
cmp
std
dec
jmp
call
sub
cmp
mov
pop
lret
lret
sahf
or
cmpsb
gs
je
out
or
mov
inc
mov
push
test
lret
pop
ds
sbb
stos
cmp
fistpl
test
jecxz
jne
xlat
push
les
mov
push
lret
mov
mov
jmp
push
in
add
mov
jae
outsb
or
sbb
jg
mov
gs
bound
xor
push
sbb
inc
xchg
pop
stos
es
mov
xchg
cmc
add
cs
push
lds
ljmp
stc
mov
adcl
test
scas
aas
scas
lret
enter
addr16
icebp
imul
insl
fsubrl
sub
or
pop
pusha
or
sbb
in
adc
ja
jo
loop
cs
dec
mov
sahf
insl
mov
js
ljmp
iret
xchg
or
sbb
out
sti
sahf
insl
mov
push
mov
lods
inc
ljmp
loopne
adc
push
and
adcl
jo
xorl
push
movsl
xchg
pop
ret
dec
fnstcw
dec
sub
adc
add
imul
cmpsl
fs
js
jo
add
add
pop
pusha
or
add
or
pop
pusha
or
sub
add
mov
jo
add
add
pop
pusha
or
pop
pusha
or
jo
add
add
std
add
pusha
sub
sti
or
iret
jl
addr16
pop
mov
mov
sbb
xchg
cmp
jne
out
pop
loopne
out
jno
xchg
pop
xchg
repnz
fbstp
fnstcw
jae
in
movsb
lods
lret
inc
test
insb
or
in
stos
cmp
inc
or
pusha
insb
or
xor
in
sbb
or
cmpsb
outsl
ret
inc
mov
test
js
mov
or
xor
dec
outsb
out
jg
jmp
in
loopne
gs
pushf
outsl
test
outsb
orb
clc
or
sbb
lock
mov
es
pop
test
xchg
lahf
cli
or
orb
adc
dec
lret
pop
ds
push
push
xor
jns
pop
xchg
repnz
sahf
das
mov
mov
and
aaa
xchg
mov
ljmp
cwtl
imul
into
pop
cmp
jno
out
jl
divb
test
sbb
pusha
or
xlat
or
iret
imul
insl
mov
dec
fdivrl
fidivrl
cwtl
decl
lea
testl
xor
pusha
add
outsl
add
add
pop
jo
or
add
add
outsl
add
dec
pusha
add
pusha
add
outsl
add
ljmp
pusha
add
outsl
add
add
pop
pusha
add
pusha
add
add
pop
in
pop
outsl
adc
outsl
or
or
pusha
or
pusha
or
pusha
or
pusha
or
mov
pusha
or
filds
mov
dec
roll
aad
jnp
outsb
or
adc
mov
dec
mov
xor
and
adc
mov
xchg
lcall
movsb
ret
ds
mov
xchg
repz
std
xor
and
lret
lret
stc
imul
xor
add
jbe
cmpl
push
ret
cmpsb
push
xchg
adc
xlat
dec
fstpt
imul
adc
xor
testb
jno
sub
or
mov
inc
mov
stc
or
sbb
pusha
add
add
pusha
adc
jo
add
add
pushf
or
les
sahf
xchg
add
pusha
or
pusha
or
mov
or
iret
arpl
xchg
mov
mov
jge
pop
adc
adc
loop
out
jo
xchg
pop
xchg
repnz
cmpl
addr16
mull
icebp
dec
cmpsb
aaa
cmpsl
ret
sbbl
sti
outsb
cld
fwait
jbe
add
pusha
stc
imul
inc
and
cmp
pop
iret
stos
pop
das
mov
inc
mov
flds
mov
leave
icebp
jno
xorb
cmp
mov
pushf
sti
push
sti
jp
jp
fstpl
test
cmpsl
mov
stos
into
cmp
mov
loope
jae
add
adc
or
test
les
int3
aas
inc
enter
outsl
aad
enter
orb
sti
push
aam
dec
fidivrs
mov
pop
jp
sbb
dec
mov
jecxz
ljmp
mov
shll
xchg
outsb
lods
add
inc
fisttps
dec
and
add
add
pop
pusha
or
pop
pusha
or
sbb
out
or
iret
rorb
mov
adc
insb
inc
fistpl
lcall
dec
sub
cs
cli
inc
jmp
outsl
xor
pusha
add
add
add
pusha
add
or
jo
or
add
add
add
add
add
pusha
add
adc
outsl
add
add
jo
idiv
decl
add
add
add
add
pusha
add
adc
add
adc
in
add
pop
in
pop
outsl
adc
pusha
or
pusha
or
pusha
or
icebp
or
pop
pusha
or
mov
lods
jg
insl
hlt
pop
in
sub
xlat
push
mov
push
push
pushf
sti
push
jecxz
mull
icebp
pop
lret
inc
xlat
mov
mov
cld
push
insl
jmp
push
in
xcrypt-ofb
cmpsl
cs
xchg
mov
xor
outsb
fstl
mov
popf
in
mov
mov
inc
mov
imul
or
push
loope
out
jno
scas
lods
lret
inc
out
cmp
or
jns
arpl
cmc
inc
dec
fstpt
in
bound
jne
out
pmullw
cmpsb
push
mov
push
mov
out
jg
jmp
adc
imul
arpl
adcl
mov
adc
add
imul
or
iret
stc
jg
mov
insl
in
bound
mov
mov
cmc
and
fmuls
fsubrs
jle
orl
pop
rolb
shlb
inc
into
pop
cmp
xor
in
xor
push
xor
sbb
addr16
cmp
out
dec
xchg
pop
xchg
repnz
subl
outsb
cld
fwait
jbe
and
mov
test
pop
jp
ds
sti
imul
dec
fimuls
mov
xchg
cld
bswap
repnz
lcall
enter
repnz
sbb
push
test
push
cltd
jge
insl
hlt
pop
int3
pop
fimuls
push
pop
jecxz
push
in
and
fs
pop
loop
cmp
roll
aad
leave
dec
ret
mov
mov
xchg
sbb
pop
xchg
add
lahf
punpckhdq
sbb
imul
or
imul
adc
add
mov
pop
roll
roll
aam
ret
movsb
push
repnz
fdivl
in
cmp
pop
and
sbb
pop
enter
jp
outsl
xor
pusha
or
or
pusha
adc
imul
adc
ds
aas
pop
test
or
dec
xor
or
and
sub
test
pushf
or
cmp
mov
inc
mov
fstpl
xchg
lods
adc
push
add
fs
sbb
push
xor
xor
aad
std
insl
hlt
pop
lock
inc
and
ss
adc
in
sbb
out
jecxz
jne
xor
inc
enter
cmp
gs
pop
pop
xlat
inc
and
or
pop
aas
lret
sub
jno
xorb
push
imul
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
add
add
in
aas
jle
pusha
pop
repnz
inc
aad
dec
ljmp
fisttpll
mov
mov
mov
inc
roll
shll
test
add
ret
mov
lcall
stos
pop
into
push
rcll
jae
dec
fdivrs
cs
mov
xor
movsb
lods
lret
inc
test
jmp
xor
or
or
jae
jne
mov
loop
adc
add
mov
pop
jecxz
push
in
addr16
sbb
add
xchg
je
mov
jg
je
and
xchg
add
jno
xorb
dec
ret
cmpsl
pop
fisttpl
fnstsw
sbb
fistl
cmpsl
push
mov
jp
rorl
push
sbbb
imul
sahf
mov
sub
outsl
xor
or
or
or
or
pusha
adc
in
add
pop
in
sbb
pusha
add
add
add
pusha
add
pusha
add
pusha
add
pusha
add
fdivp
or
pop
pusha
add
in
notl
xor
push
lds
aad
dec
sti
rclb
push
clc
xchg
add
std
or
fimuls
movsb
push
cld
loopne
in
jle
in
jns
mov
cmp
ds
test
fimuls
mov
lcall
cmpl
out
jl
negb
sub
pop
lahf
punpckhdq
les
mov
xchg
or
push
imul
sbb
add
jbe
cmpl
mov
inc
mov
xchg
adc
or
pop
jns
push
sbb
movl
sub
cmp
mov
pusha
out
jl
notb
pushf
xor
jo
cmc
gs
aas
xchg
pop
dec
fisttpll
out
imul
dec
fisubrl
in
in
adc
sbb
pusha
or
cmc
or
iret
push
ret
ret
mull
icebp
dec
cltd
imul
or
iret
add
imul
adc
push
xchg
add
les
int3
jle
ljmp
stc
scas
fs
inc
loope
ljmp
shll
jecxz
es
cs
data16
insb
or
in
mov
and
cld
fwait
jbe
cmpsb
aas
scas
lret
cltd
sbb
into
pop
cmp
ds
scas
test
fwait
decb
mov
sub
outsb
mov
mov
cmp
rolb
shlb
stos
daa
mov
and
mov
fcoms
lcall
add
sahf
cmp
imul
insl
mov
or
jp
xor
push
xor
jbe
add
popa
mull
icebp
dec
and
sub
adc
or
imul
push
dec
fisttpll
out
insb
ljmp
stc
mov
sub
fildl
mov
mov
mov
movsb
cmp
inc
repnz
loop
je
push
enter
dec
mov
in
call
outsl
sbb
pusha
or
repz
iret
ljmp
mov
or
jnp
mov
rolb
dec
mov
in
jge
mull
arpl
jne
out
sbb
icebp
ficoms
pop
scas
or
jbe
insb
or
loop
adcb
xorb
ret
cmpsb
push
hlt
rclb
xor
imul
or
iret
arpl
cmc
daa
pop
aad
sub
pop
dec
rcll
inc
rolb
shlb
adc
and
in
adc
or
dec
fnstcw
xor
add
outsl
adc
cld
ljmp
pop
pusha
or
and
cli
or
iret
mov
mov
and
ljmp
stc
in
inc
jecxz
push
in
and
sub
pop
jp
pop
repz
xorl
xchg
push
shlb
lcall
or
leave
push
ret
cmpsb
push
cmpsb
push
shll
mov
mov
push
ret
cmpsb
push
mov
xchg
mov
fisttpl
idivl
mov
out
cltd
push
cmc
add
les
mov
sub
or
sub
lahf
sub
xor
int
xchg
mov
mov
mov
jg
and
mov
rcll
sti
clc
lock
bound
push
mov
pop
enter
imul
pusha
notb
and
xchg
addb
icebp
add
jmp
cltd
push
sub
xor
imul
or
iret
add
imul
or
iret
lret
mov
out
jo
lds
mov
xchg
jecxz
cmc
pushf
outsl
cwtl
jae
fs
push
enter
inc
mov
cmpsb
xor
scas
dec
fwait
adc
test
mov
xchg
push
fimull
fimull
adc
adc
sbb
pusha
add
outsl
add
add
pop
jo
or
add
add
outsl
add
dec
pusha
add
pusha
add
outsl
add
ljmp
pusha
add
outsl
add
add
pop
pusha
add
pusha
adc
sahf
clc
or
iret
and
inc
fidivrl
push
jno
ss
outsl
sbb
imul
push
mov
pop
add
adc
jo
ljmp
pop
pusha
add
jo
add
add
push
or
les
test
pop
pusha
add
add
adc
mulb
xchg
outsb
fistpll
or
jmp
xor
or
adc
jns
jmp
mov
mov
mov
movsb
cmp
mov
scas
daa
mov
and
aaa
cmpsl
ret
pop
fwait
or
push
sbb
ss
inc
mov
sbb
or
out
adc
mov
gs
inc
jns
mov
jb
gs
adc
cld
jnp
loop
data16
xchg
outsb
mov
xor
push
je
push
cmp
mov
testb
sbb
and
sahf
xor
sbb
mov
xchg
leave
pop
int3
stos
iretw
xor
or
punpckhdq
add
add
outsl
sbb
add
add
or
pop
pusha
add
sub
out
or
iret
rorb
mov
sbb
imul
in
mov
add
sbb
push
mov
dec
sub
pop
sti
jg
mov
jecxz
notb
imul
adc
dec
fdivrl
shll
imul
sub
rcll
xor
imul
pop
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
add
add
sbb
push
push
popf
or
pop
jp
adc
mov
clc
jp
jp
push
mov
movl
jo
xorl
inc
mov
in
cmpsl
and
dec
fidivrs
and
mov
inc
mov
mov
test
cmp
and
in
bound
aad
dec
cltd
mov
nop
testl
mov
add
pop
and
cmp
jle
lret
lret
lods
and
push
xchg
sbb
aad
xlat
push
fisttps
flds
sub
mov
dec
fdivrs
add
and
mov
inc
mov
aad
fstpt
pop
cmp
nop
testl
adc
dec
call
xor
mov
xchg
add
push
mov
and
sbb
callw
xorb
aas
scas
lret
jno
jl
divb
lods
and
jge
adc
in
sbb
lds
mov
mov
das
enter
enter
nop
arpl
pop
test
imul
movsl
or
insb
sub
cmp
dec
sbb
inc
int
and
jb
jo
ljmp
pop
pusha
add
sub
sbb
or
imul
or
iret
add
add
inc
xchg
push
mov
es
mov
jle
sub
dec
frstor
lods
pop
cmc
dec
fisttpll
out
rcll
push
stc
xchg
or
push
mov
es
addr16
popa
add
inc
mov
mov
mov
stos
cmp
imul
add
adc
jns
mov
push
into
pop
cmp
push
add
hlt
jbe
cmpl
adc
shrl
jo
ljmp
pop
pusha
or
adc
pusha
or
imul
iret
xor
ficompl
scas
pop
mov
jae
xchg
rolb
dec
mov
in
jge
mull
mov
fiadds
push
cmp
and
cmp
out
fs
popf
insb
mov
add
adc
or
lds
iret
push
push
xchg
repz
fiaddl
xchg
add
push
mov
fwait
decb
jle
cmp
mov
dec
ja
aam
sub
iret
stos
pop
aad
rclb
imul
in
mov
lea
idivl
into
dec
xlat
inc
and
xor
add
lea
and
adc
out
adc
or
or
xchg
push
test
push
sti
cld
jp
jp
les
mov
xchg
mov
movsb
ret
ds
fs
adc
pop
jnp
addr16
or
pop
int
addr16
adcl
test
pusha
notb
pop
mov
cld
ljmp
pop
pusha
or
and
decl
adc
mov
xor
dec
pusha
add
add
add
add
pusha
adc
in
add
pop
in
sbb
or
cmp
or
imul
adc
add
arpl
arpl
cmc
push
insb
loope
adc
xor
sub
push
fisttps
flds
push
mov
push
xor
imul
sbb
pop
int
addr16
inc
mov
repnz
repz
cmc
inc
cltd
or
in
mov
ret
ret
repz
cmc
adc
inc
mov
stos
push
xchg
add
in
sbb
pop
jb
or
mov
inc
mov
lea
pushf
sti
push
jge
je
insl
mov
and
neg
pop
iret
stos
pop
cltd
fisubl
xchg
gs
iret
pop
cmp
and
lea
in
sbb
push
jl
gs
pop
daa
lods
cmp
cmp
sub
xchg
pop
bound
sbb
push
imul
aaa
cmp
rorl
adc
cmpsl
pop
adc
xor
outsl
sub
outsl
add
outsl
sbb
outsl
adc
jo
add
add
stos
or
les
mov
or
pusha
or
dec
add
adc
roll
mov
jmp
in
and
sub
push
lds
mov
inc
mov
ljmp
cwtl
imul
lds
iret
push
xchg
add
cs
inc
shll
xor
scas
inc
fwait
or
ljmp
mov
sbb
movl
imul
pop
aas
lret
xchg
add
outsl
inc
push
xor
sbb
pusha
pop
repnz
push
roll
sarl
jnp
addr16
or
insl
std
test
pop
roll
shll
in
jne
imul
test
pop
leave
out
jl
divb
xchg
add
add
mov
inc
mov
stos
cmp
cltd
or
xor
ja
xorb
and
andl
add
pop
pusha
or
imul
adc
int
iret
stos
pop
rcr
dec
fnstcw
xchg
testb
or
leave
push
mov
loop
je
xor
cmp
sub
or
stos
pusha
cmp
test
mov
cmpsl
aaa
push
mov
xor
cmp
enter
popa
nop
gs
stos
and
mov
shll
loope
jae
aaa
mov
movsl
sub
daa
mov
and
push
jecxz
push
in
out
lock
lds
mov
inc
mov
hlt
gs
pushf
outsl
les
jb
adc
mov
dec
stos
hlt
imul
adc
add
imul
mov
dec
mov
mov
jmp
sahf
sub
sbb
push
divl
xchg
jns
jnp
xor
ljmp
pop
pusha
or
and
or
adc
mov
mov
push
mov
cmp
inc
cld
lock
in
jg
mov
cwtl
sbb
notl
into
dec
fdivrl
xor
inc
lods
sub
in
jge
mull
aas
mov
cld
jg
mov
out
jecxz
jne
push
fimull
fidivrl
je
xchg
cmc
add
push
fimull
fisubrl
sahf
adc
cld
xchg
cmc
add
das
mov
jp
gs
pop
jl
jl
testb
mov
and
test
rolb
mov
call
inc
negb
pop
cmp
jg
push
xor
jns
notl
cmp
sbb
insb
lods
xor
int
in
adc
insb
mov
les
mov
push
cltd
xor
push
rolb
inc
test
fs
popf
insb
mov
mov
insb
jmp
or
push
or
iret
dec
sub
imul
adc
and
mov
pushf
sti
push
decb
add
add
add
pop
pusha
adc
imul
or
iret
ficomps
scas
pop
mov
andb
xchg
addr16
movsb
sub
data16
xchg
outsb
mov
rorl
add
xchg
and
jns
jmp
int3
pop
repnz
fs
xchg
add
cmp
mov
inc
mov
inc
rolb
sarb
out
adc
pop
push
xchg
add
faddl
mov
lea
stos
cmp
dec
popa
ljmp
stc
in
cs
dec
mov
and
push
int
shlb
mov
mov
es
push
rolb
sarb
jns
outsb
or
sbb
cmpsl
pop
add
adc
push
fs
adc
adc
push
mov
cmp
ljmp
repz
cmc
add
lahf
punpckhdq
lcall
cmp
sbb
aad
adc
shlb
mov
mull
icebp
dec
cmp
int3
out
inc
in
or
sbb
pusha
or
pusha
sub
inc
in
or
iret
push
les
int3
cmpsl
aaa
cmpsl
ret
mov
popf
cld
push
cmc
pusha
notb
jbe
loopne
inc
fmuls
fdivrs
loop
call
sbb
dec
aaa
bound
cmpsl
pop
adc
xor
or
adc
pop
int3
stos
data16
popa
add
jbe
pop
leave
test
ficomps
rcrb
pushf
xor
dec
xor
inc
ret
ret
cs
xlat
inc
and
or
loopne
push
xchg
repz
out
mov
jae
outsb
or
sbb
push
shll
mov
inc
and
jns
xchg
jb
pop
jno
push
cltd
or
or
jp
and
xor
or
sbb
pusha
or
outsl
or
or
pusha
or
add
jo
or
add
or
or
or
or
pusha
or
adc
outsl
or
or
jo
idiv
decl
or
or
or
or
pusha
or
adc
or
adc
in
add
pop
in
sbb
or
cmp
or
imul
or
pop
pusha
add
pop
lret
scas
pop
in
in
jge
je
sub
sub
jne
mov
push
nop
push
popa
nop
and
ja
xorb
xchg
add
sahf
sub
xchg
add
rep
lcall
push
imul
dec
fistpll
and
xchg
push
xchg
jb
or
pop
enter
imul
sbb
add
pusha
pop
repnz
dec
sub
add
addr16
nop
push
popa
nop
inc
jl
outsb
or
or
std
adc
inc
and
sub
jbe
cmpl
jmp
cmp
fcoml
cmpsl
push
cmc
int3
inc
shll
gs
aas
cld
ja
xorb
sahf
or
cmpsb
adc
xor
ljmp
pop
pusha
add
imul
or
iret
add
pop
lea
jb
xchg
cmpsb
xor
fimuls
dec
pop
adcl
pop
lret
scas
pop
cld
jmp
out
jno
in
jbe
cmpl
jmp
push
in
add
jb
in
fs
push
fisttpll
out
addl
dec
int
and
cmp
mov
push
lds
push
in
adc
imul
adc
adc
add
add
xor
add
outsl
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
imul
adc
inc
rclb
xor
mov
fs
popw
pushf
xor
inc
sub
lods
sub
push
lret
sti
mov
jmp
dec
frstor
jmp
sbbl
mov
mov
and
decl
mov
sbb
xor
sbb
es
sbb
fwait
pop
xchg
repnz
cmpsl
cmp
mov
cmpsb
and
insl
hlt
push
cld
adc
lods
and
xor
ja
loope
fwait
pop
lcall
xchg
pop
bound
fwait
jbe
xchg
pop
xchg
adc
cmp
or
imul
adc
add
imul
or
iret
xlat
push
mov
scas
imul
or
imul
pop
adc
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
imul
adc
ficomps
scas
pop
scas
insl
call
jl
fs
or
int
insl
jmp
push
in
pavgb
lcall
das
mov
push
mov
mov
cmp
dec
fdivrs
add
sahf
aaa
xor
push
lds
insl
pushf
cs
cmc
gs
push
jno
jnp
in
pop
add
push
add
xor
sub
aas
aas
movsl
xor
jle
mov
jecxz
cltd
mov
test
out
adc
daa
add
data16
sbb
mov
lea
test
jge
pop
test
mov
mov
inc
mov
mov
jae
xchg
in
loop
je
mov
scas
leave
cmp
outsb
mov
sub
ljmp
pop
pusha
or
imul
or
iret
lods
and
movsb
cmp
js
das
mov
into
pop
cmp
jno
or
add
movsb
ret
ds
fmull
mov
xchg
lock
sub
and
dec
cmc
outsb
cld
fwait
jbe
pop
rclb
sub
gs
imul
push
xor
inc
imul
loope
lock
bound
jecxz
and
push
xlat
inc
and
and
push
lds
ret
add
pop
jb
addr16
push
mov
es
in
sbb
jmp
jge
arpl
js
ljmp
rcll
mov
scas
lret
ds
inc
mov
imul
or
mov
mov
jns
and
inc
aad
dec
cld
pop
iret
pop
cmp
jle
dec
fstpt
mov
jo
ljmp
pop
pusha
add
imul
adc
sti
insb
loop
je
repnz
xchg
outsb
fsts
push
xor
addr16
mov
mov
outsl
sub
cld
ljmp
pop
pusha
or
and
or
adc
arpl
pop
jp
xchg
and
adc
dec
lret
pop
ds
dec
rclb
and
lods
lret
inc
mov
mov
jbe
outsl
or
rorl
push
xor
add
lods
and
adc
push
lds
jg
and
xchg
adcb
subb
out
jg
jmp
sub
je
pop
lret
scas
pop
in
imul
sub
lcall
jp
jp
inc
fimuls
push
or
das
mov
rolb
rcrb
es
cmp
inc
jns
outsl
or
out
gs
sbb
mov
and
in
push
lahf
push
pop
fisttpll
out
xchg
pop
xchg
adc
in
gs
pushf
outsl
sahf
or
stos
and
inc
and
sub
les
fisttps
fnstenv
stos
and
push
fmuls
fdivrs
mov
inc
mov
lods
lods
lret
inc
out
push
sahf
or
cmpsb
pop
jo
ja
loope
push
jnp
add
incb
dec
das
fidivl
pushf
or
setg
or
jns
mov
out
mov
in
in
adc
sbb
pusha
or
pusha
sub
jl
or
iret
out
adc
pop
insb
in
bound
es
mov
insl
jmp
test
loope
pop
leave
test
lods
gs
adc
or
dec
fdivrs
sbb
push
and
mov
mov
dec
lock
shll
outsl
or
lds
xor
ljmp
pop
pusha
add
jo
add
add
sub
adc
jo
pop
stos
inc
pop
pusha
or
pusha
or
fcom
or
imul
add
adc
fdivrl
inc
and
add
sahf
pop
ficoms
mov
mov
lahf
int
repz
rclb
test
push
xchg
repz
mov
and
lods
sbb
jne
mov
mov
out
mov
mov
xchg
mov
mov
and
adc
add
mov
inc
aad
sub
imul
negl
shlb
aaa
push
mov
and
insl
jg
jle
call
push
outsl
xor
ljmp
pop
pusha
add
imul
adc
sub
cs
mov
into
cmp
insl
pushf
pop
cmp
dec
ja
jge
negl
jae
js
ljmp
gs
bound
dec
fstl
xchg
pop
xchg
adc
gs
push
in
add
sbb
outsb
roll
dec
mov
lock
bound
test
adcl
test
push
les
xlat
imul
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
add
add
mov
js
insb
mov
rcr
pop
int
addr16
mov
push
sbb
loop
jns
mov
xchg
pushf
sti
push
repnz
data16
xchg
outsb
popf
push
fimull
fidivrl
mulb
sub
imul
insl
test
sub
inc
negl
pop
cmp
jg
call
sub
push
lds
xchg
add
xchg
add
add
jmp
push
fdivl
in
xor
iret
dec
imul
jmp
or
pop
push
add
call
adc
add
sub
add
inc
and
push
call
lods
clc
add
adc
jmp
lret
mov
jmp
fisttpl
push
call
mov
cmp
mov
add
add
jmp
or
pop
imul
add
jg
std
call
pop
sbb
add
push
shlb
push
call
clc
xchg
ret
jmp
in
jge
je
xor
xor
add
add
jmp
imul
or
push
xor
cmp
or
scas
mov
push
call
mov
ret
call
push
jmp
scas
cmp
add
pop
xchg
jb
cmp
mov
pop
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
sub
sub
adc
add
inc
jge
sub
add
xchg
popf
pushl
jmp
adcl
add
std
or
scas
xor
int
decl
mov
jmp
in
jne
mov
test
orb
pop
lret
scas
pop
mov
push
pushf
sti
push
sbb
roll
and
scas
sub
dec
adc
pop
outsb
mull
icebp
js
jle
mov
out
sbb
dec
add
add
jg
jmp
jmp
jl
xchg
cmc
add
movsl
and
pop
fimull
fisubl
insl
ret
imul
lea
add
outsl
sbb
pusha
add
push
or
iret
and
jge
outsl
or
repnz
jecxz
loop
popa
sbb
sub
jo
mov
and
cmp
jmp
fsts
mov
xchg
cmc
add
add
add
adc
xor
es
mov
jmp
push
fmuls
fsubrs
rorl
push
bnd
push
je
out
sub
icebp
orb
push
jmp
scas
mov
jmp
add
jmp
xlat
pop
enter
scas
cmp
mov
repnz
or
mov
mov
ret
imul
push
test
setg
or
xchg
imul
lret
add
or
jmp
les
mov
jle
call
test
dec
sub
outsl
sbb
imul
or
imul
mov
popl
lea
jmp
cmp
cmp
inc
test
cmpsl
ret
mov
rol
xchg
fsts
in
sub
push
mov
push
jmp
push
lea
jmp
mov
and
xchg
icebp
add
mov
enter
mov
jmp
push
mov
jmp
xchg
adc
push
xchg
add
sbb
jo
push
mov
stc
jecxz
cmc
pushf
outsl
cwtl
add
das
jmp
cmpsl
aaa
push
mov
pop
lods
pop
cmpsl
mov
je
popa
mov
jmp
mov
add
mov
xor
jmp
cmc
jo
xorl
arpl
xor
mov
dec
cld
jmp
fs
bound
loope
jae
dec
lret
pop
ds
aam
adc
shrb
pusha
sbb
out
or
iret
mov
test
cmp
xchg
sbb
jmp
or
jmp
mov
mov
das
fwait
push
les
int3
gs
lds
iret
jl
xchg
add
cmp
jo
add
add
pop
pusha
add
pusha
sub
pop
adc
adc
sub
cmp
jne
xor
jmp
cmp
cmp
sbb
mov
lret
setg
or
mov
out
adc
sub
inc
shll
cli
popf
insb
xchg
jg
jmp
add
jmp
repz
xchg
lods
xor
mov
pop
sbb
mov
push
xor
lods
lret
inc
scas
pushf
and
aam
sub
sbb
or
outsl
sbb
pusha
or
or
pusha
or
or
pusha
adc
clc
adc
sbb
pusha
add
imul
jno
xorb
in
jge
testl
xor
sub
sub
add
add
pop
pusha
adc
imul
or
iret
dec
ret
cmpsl
stos
and
scas
cmp
mov
out
jo
add
add
pop
pusha
add
pop
pusha
add
sub
sub
cmp
xchg
int
or
pusha
or
sbb
adc
cmp
jne
push
push
pushl
call
jmp
push
test
int
and
jb
cmp
cmpsl
leave
pusha
sbb
mov
jmp
cmp
mov
jmp
sbb
insb
add
add
push
clc
push
lahf
push
inc
fisttpl
fnsave
inc
mov
icebp
lret
push
mov
xor
cmp
jbe
add
mov
cmp
jmp
inc
jmp
jg
inc
int3
adc
add
add
mov
jp
jp
jnp
bound
stos
add
or
add
mov
add
and
adcb
andb
sti
imul
cmp
mov
jl
or
sbb
pusha
or
add
add
adc
jo
mov
push
pop
pusha
add
add
push
or
iret
and
push
xor
les
dec
inc
and
adc
dec
aam
sub
push
popa
nop
pop
inc
hlt
mov
pop
jmp
mov
pushf
sti
push
decb
mov
js
insb
in
xchg
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
imul
in
jge
testl
pop
mov
jmp
mov
cwtl
decl
dec
dec
fidivrs
mov
das
lret
cld
adc
sbb
pusha
or
jo
add
add
adc
cld
adc
sbb
pusha
add
imul
lods
lret
inc
movsb
fcomps
fbld
in
hlt
adc
sbb
pusha
add
pusha
xor
sbb
adc
and
mov
fnstenv
ret
push
lds
xor
jne
mov
je
mov
incl
push
push
jmp
push
jmp
pushf
adc
out
adc
dec
not
pop
push
jmp
cltd
or
mov
test
scas
leave
cmp
push
jmp
idivl
or
into
leave
outsl
imul
jmp
mov
jmp
mov
mov
and
ds
push
shll
je
test
call
jne
mov
call
test
jmp
fsubs
call
jmp
mulb
xchg
aad
sub
movsb
cmp
outsl
lea
test
push
cld
dec
push
jmp
sbb
lock
add
je
jmp
xor
and
pop
out
in
je
insl
aaa
scas
aas
pop
test
imul
pop
adc
and
pop
adc
lcall
dec
sub
cs
mov
jmp
push
push
pop
mov
jmp
clc
jns
mov
test
fwait
decb
and
outsl
sub
sbb
xor
or
pusha
add
or
outsl
or
or
pop
jo
or
add
or
outsl
or
dec
pusha
or
pusha
or
outsl
or
ljmp
pusha
or
outsl
or
or
pop
pusha
or
pusha
or
add
pop
in
pop
outsl
adc
outsl
add
dec
pusha
add
pusha
add
pusha
add
pusha
add
sbb
adc
add
sbb
adc
pushl
jmp
call
jmp
push
jmp
push
fisttpl
fisttpll
lcall
jb
bound
or
jmp
je
insb
or
cmc
dec
les
int3
cs
jo
xorl
ret
mov
jmp
imul
push
in
dec
dec
ret
ret
or
arpl
xchg
les
mov
cltd
and
and
pop
leave
test
call
stos
add
pop
xchg
cld
adc
sbb
pusha
add
sbb
adc
movsb
push
out
add
std
or
repnz
xchg
outsb
fstps
lea
push
pushl
mov
jmp
repnz
pushf
outsl
lret
loop
je
add
sub
int3
dec
adc
jmp
jmp
cwtl
pusha
insb
or
or
xlat
popa
loope
adc
sub
iret
or
iret
add
imul
pop
cmp
and
sub
push
adc
das
mov
leave
icebp
jo
xorl
add
xor
sbb
jge
call
mov
push
jmp
ljmp
iret
jmp
popa
jmp
push
in
push
jge
outsb
or
adc
arpl
cmc
add
fucomp
lret
jmp
mov
shlb
aas
pop
test
sbb
sbb
and
imul
pop
adc
xor
sbb
test
mov
mov
cld
ljmp
pop
pusha
or
and
pop
or
iret
jmp
lock
jne
jmp
je
pop
jmp
popa
out
jl
mulb
mov
nop
testl
xor
add
aad
dec
clc
ljmp
adc
dec
jge
jge
testl
mov
push
shll
cmp
cmp
jae
xchg
xchg
lcall
jmp
pop
leave
pop
cmp
jnp
cmpsb
xor
scas
pop
call
xor
pop
int
addr16
xchg
jmp
iret
pop
lret
scas
pop
cwtl
cs
lea
fisttpll
jbe
add
movzwl
push
pushl
lea
jmp
out
adc
data16
sub
call
lea
push
push
jmp
mov
scas
xor
out
jne
mov
sub
push
ljmp
stc
sbbb
sbb
inc
les
int3
add
enter
fwait
decb
insb
outsl
mov
xor
adc
sub
pusha
or
pop
pusha
or
adc
add
imul
jp
mov
pop
pusha
add
add
sbb
adc
fistps
push
mov
call
mov
mov
shl
jmp
repz
hlt
rorl
add
dec
cld
mov
movzwl
imul
add
mov
jmp
xchg
push
test
push
sti
fcompl
scas
pop
movsb
and
cmpsl
and
fucomp
add
jmp
adc
ret
add
add
cld
cmpsl
pop
adc
test
add
movsl
and
nop
push
popa
nop
arpl
cmpsl
add
jmp
sbb
pop
cltd
xchg
mov
jmp
dec
lret
pop
ds
push
fdivl
in
or
shll
sbb
adc
add
add
outsl
adc
pusha
or
add
add
pop
pusha
adc
add
add
pop
pusha
or
imul
or
iret
jae
ret
mov
jmp
fstl
cmpsl
push
xchg
inc
shll
xchg
lock
decb
andl
jmp
mov
mov
sbb
jmp
sub
jmp
cs
pop
into
pop
cmp
jg
mov
add
cmp
mov
mov
call
xor
divl
mov
jmp
mov
mov
das
lcall
xor
cmp
jmp
inc
pusha
clc
add
jmp
inc
aam
sub
in
mov
dec
mov
push
jno
mov
jmp
mov
jmp
push
jmp
outsb
mulb
adc
inc
aam
dec
cmpsb
mov
mov
jae
xchg
and
in
clc
adc
sbb
pusha
add
and
adc
in
cld
adc
sbb
pusha
add
and
adc
lahf
add
mov
inc
mov
add
data16
scas
loope
dec
cld
call
movzwl
incl
add
pop
cmp
jmp
lds
stos
mov
jmp
lea
jmp
and
stos
sub
dec
fstpt
test
jmp
inc
push
jmp
mov
push
jmp
xchg
adc
in
sbb
fwait
sbb
sbb
rorb
dec
mov
andl
incl
clc
sub
mov
pushl
jmp
jge
inc
hlt
jmp
add
inc
enter
sub
or
lahf
or
fildll
jmp
ja
sub
jmp
test
clc
pushl
jmp
mov
loopne
dec
fstpt
shll
das
mov
imul
add
add
pop
pusha
add
xor
outsl
sub
outsl
add
sbb
sbb
outsl
adc
imul
or
iret
imul
call
xchg
add
std
or
jo,pn
imul
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
imul
or
iret
repnz
lock
sub
jmp
push
popf
or
xchg
mov
clc
outsb
or
push
andl
sub
jmp
xchg
pop
xchg
repnz
jmp
enter
les
mov
jmp
outsb
hlt
push
cld
aas
inc
fisttps
flds
and
mov
loope
mov
call
test
je
mov
jmp
adc
das
mov
inc
mov
fs
push
jo
inc
lock
pushl
mov
push
pushl
call
jmp
sbb
xor
push
pushl
jmp
stos
xor
int
mov
lods
pop
lret
scas
pop
mov
ret
call
jmp
nop
adc
icebp
popa
add
adc
fdivl
in
scas
das
mov
in
add
xor
or
imul
or
iret
inc
rclb
xor
push
mov
cld
cmpsl
pop
adc
jne
mov
mov
call
jmp
add
idivl
test
mov
gs
jo
adcl
push
pushl
jmp
ds
inc
mov
pop
xlat
inc
and
or
mov
jle
dec
adc
sub
adc
fiaddl
mov
sub
mov
dec
fimull
fisubrl
jo
add
add
pop
pusha
or
adc
pusha
or
pusha
sub
jno
or
iret
and
mov
adc
sub
pusha
or
xor
or
pusha
xor
das
or
iret
imul
adc
fisttpll
push
std
lcall
or
movl
add
jmp
push
mov
lock
lret
popf
setg
or
or
outsl
xor
pusha
add
outsl
or
dec
pusha
add
add
add
add
dec
pusha
add
or
add
pusha
adc
imul
xor
int
jmp
add
add
pop
pusha
or
and
sub
pop
mov
pusha
and
add
add
outsl
and
add
and
sub
adc
rcrb
pop
mov
dec
movsb
lods
cmp
lods
pop
je
pushl
jmp
loopne
add
std
jmp
pop
les
int3
dec
add
mov
addr16
sbb
call
mov
xor
cmp
jbe
jmp
ja
gs
adc
jmp
mov
cs
jmp
addb
lock
ljmp
stc
imul
pop
aam
mov
jmp
das
push
add
jmp
jl
jb
jmp
lcall
mov
push
mov
gs
addr16
pop
pushl
jmp
rcrl
add
int3
dec
std
call
push
sub
dec
cmpsb
xor
scas
dec
sub
stos
and
push
jbe
mov
pop
adc
adc
adc
add
imul
adc
jo
outsl
lods
lods
pop
pusha
or
pusha
or
cltd
sbb
adc
mov
shlb
inc
es
sbb
pop
bound
fsubr
jmp
mov
push
mov
xor
add
mull
add
add
xchg
add
add
dec
sub
jmp
mov
mov
sbb
cmp
outsl
ljmp
stc
mov
mov
inc
mov
lret
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
jne
ja
loope
inc
shll
xchg
adc
dec
leave
iret
in
mov
mov
mov
andb
jmp
stc
sarb
add
add
fldl
add
add
mov
jmp
int
lret
scas
pop
mov
push
lds
pop
loop
fdivr
or
jmp
outsl
je
jmp
aas
mov
inc
push
xor
push
movsb
and
fcompl
mov
dec
movzbl
add
cmp
jmp
mov
mov
or
push
mov
popa
jmp
mov
ljmp
add
add
pop
push
lcall
test
pop
cmc
jp
add
add
or
jmp
cltd
roll
add
jne
addl
jmp
and
arpl
add
add
jmp
mov
int
mov
sub
mov
out
jnp
fs
jmp
xchg
cmp
mov
jmp
pop
jmp
add
jmp
rcrl
xchg
cmpsl
mov
lcall
sub
sar
inc
adc
popf
push
pushf
sti
push
mov
and
mov
lds
nop
push
call
cs
mov
mov
xchg
cmc
add
imul
adc
push
inc
fstpt
mov
push
call
fiaddl
mov
test
jb
xchg
call
stc
sbb
pop
add
call
sbbl
xchg
pop
xchg
adc
lret
dec
fidivrs
es
sub
add
xchg
popf
pushl
jmp
addl
or
popa
push
push
call
cltd
sbb
sbb
dec
xor
sub
jmp
rclb
mov
fnstcw
mov
repz
cmp
or
outsl
xor
outsl
sub
outsl
add
sbb
sbb
outsl
adc
jo
add
add
wbinvd
adc
jo
mov
pop
pusha
or
pusha
or
adc
adc
mov
xchg
lock
jg
push
cld
push
out
cld
fwait
jbe
idivb
je
jbe
xchg
popf
pushl
mov
jmp
lahf
pop
xchg
adc
dec
pushf
or
insl
loopne
adc
inc
or
inc
adc
xchg
in
sbb
and
roll
add
pop
movsl
movsb
ret
ds
push
idiv
les
ret
jmp
fmuls
mov
enter
test
lods
lret
inc
hlt
adcb
inc
or
andb
sub
jo
jmp
adc
cld
jne
jmp
cld
push
sbb
xchg
or
fimull
fidivrl
push
and
jmp
addl
jmp
mov
and
clc
out
in
mov
cmp
dec
fldt
clc
push
imul
cmpl
sbb
jbe
push
cld
xor
pop
mov
inc
shll
imul
add
js
fidivs
mov
pop
pop
fisttpl
dec
shl
leave
and
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
imul
add
mov
mov
jno
xorb
adc
adcl
xor
inc
fidivrl
lcall
jb
addr16
rcll
sub
sti
in
push
lahf
push
mov
stos
int
jmp
pusha
notb
fnstcw
push
aaa
ret
mov
jns
push
xchg
add
ja
mov
js
jp
repnz
pop
repnz
loope
cld
fwait
jbe
pop
roll
rcll
lret
mov
out
jno
imul
mov
fwait
sbb
add
cmp
jnp
in
pop
jg
jle
call
inc
mov
mov
xchg
push
lret
lret
push
lret
mov
jl
imul
cmp
enter
push
add
sbb
pusha
sbb
pusha
and
or
iret
movsl
daa
mov
and
mov
movsb
ret
ds
mov
lret
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
add
add
scas
pop
cld
pop
mov
jns
pop
je
outsb
or
cmp
ret
push
lds
or
cs
mulb
dec
jecxz
loopne
jb
mull
icebp
dec
mov
xchg
insb
clc
outsb
or
dec
scas
cmp
dec
fidivrs
repnz
xchg
fisubl
mov
or
jmp
xchg
pusha
out
mov
and
or
xor
adc
add
insb
xchg
pop
xchg
adc
mov
out
imul
mov
inc
mov
lods
es
cs
jmp
mov
adcb
xorb
in
mov
dec
adc
jns
jmp
leave
loopne
add
inc
aam
dec
mov
mov
or
sbb
rorl
out
mov
mov
in
pushl
insl
hlt
pop
mov
psubusw
push
les
mov
and
mov
add
cmp
je
jmp
mov
es
rolb
add
jmp
mov
sahf
or
js
jg
popl
lea
jmp
jl
bound
pop
cmp
jg
and
lea
xor
add
add
movsb
jbe
jno
jecxz
arpl
outsl
or
les
aad
pushf
in
add
or
outsl
and
or
ljmp
pop
pusha
or
and
and
sub
adc
add
in
jmp
dec
aam
sub
insl
hlt
pop
in
in
jno
xorb
sar
call
dec
pusha
or
outsl
or
dec
pusha
adc
in
add
pop
in
sbb
pusha
add
outsl
add
add
pusha
add
pusha
add
pusha
add
or
pop
pusha
add
sbbl
xlat
mov
enter
das
ficoml
cs
inc
mov
aad
enter
mov
xor
push
cmp
je
cmp
jne
jmp
int3
jle
push
jmp
mov
lock
xorb
into
pop
cmp
sub
push
mov
imull
jmp
xlat
pusha
aaa
mov
xor
jmp
jnp
or
jmp
lcall
iret
pop
cmp
aas
ds
dec
mov
inc
and
add
add
jmp
add
or
repz
add
jo
xorl
push
loop
push
pushf
sti
push
in
fwait
mov
adc
pop
decl
les
mov
xor
or
je
pop
std
call
jmp
adc
mov
pop
into
pop
cmp
jg
mov
add
add
pop
pusha
or
imul
dec
fdivrs
jmp
and
add
add
and
mov
mov
cwtl
cltd
push
pushf
sti
push
mov
mov
jmp
cs
sub
jns
dec
jmp
push
lahf
push
adcl
jecxz
mov
pop
cltd
mov
dec
imul
add
cmp
adc
mov
movsl
push
xchg
mov
mov
jmp
cmp
inc
pop
push
pop
paddusw
dec
and
jmp
sub
mov
xchg
adc
mov
jmp
or
and
or
jo
ljmp
pop
pusha
add
and
add
add
mov
adc
jo
xchg
adc
pop
pusha
add
add
and
xor
adc
add
add
jp
push
xor
sub
mov
jns
jbe
rclb
pop
fldenv
xchg
gs
popa
in
sbb
cmp
pop
cwtl
adc
mov
cmpsl
cs
cli
push
std
insl
hlt
pop
shrl
movsb
cmp
outsb
and
std
insl
hlt
pop
mov
mov
xchg
aas
push
les
pop
and
jl
notl
push
mov
add
push
shlb
xor
daa
xor
jns
imul
adc
in
icebp
nop
arpl
outsl
xor
pusha
add
add
add
pusha
or
add
or
add
dec
pusha
or
add
pusha
or
pusha
adc
imul
or
iret
adc
add
call
xor
jmp
int3
xor
add
sbb
lahf
punpckhdq
dec
mov
xorl
push
jmp
push
jmp
int
aad
dec
mov
fwait
jnp
xor
popl
xchg
repz
std
fimuls
test
jmp
popa
in
jge
notl
jne
les
jne
add
add
push
jns
pop
xchg
pop
jmpw
jmp
aas
mov
inc
mov
inc
push
or
fsubrl
jmp
adc
lea
jmp
sbb
jbe
je
out
pop
mov
sbbl
pushl
scas
push
sub
scas
add
add
xchg
cmc
add
xchg
add
scas
aas
pop
test
jno
daa
sub
sub
adc
push
jmp
add
scas
xor
int
fisubs
imul
stos
into
cmp
push
jmp
add
outsb
or
push
or
xor
push
cmp
dec
orb
inc
and
inc
add
add
adc
add
icebp
outsb
cld
fwait
jbe
dec
into
pop
cmp
pop
les
mov
add
jmp
cmp
jmp
adc
jae
sbb
mov
jmp
mov
lret
mov
push
pushf
sti
push
shll
and
inc
loopne
mov
mov
call
mov
jmp
jno
push
cld
adc
mov
inc
mov
mov
nop
testl
cmp
xor
lea
test
jmp
mov
int
mov
js
cs
test
mov
outsb
pop
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
jne
outsl
or
lds
mov
adc
mov
jmp
inc
aam
sub
repz
gs
mov
imul
add
add
inc
fidivrl
int3
stos
data16
fimull
fidivl
popf
or
push
call
mov
mov
push
call
jmp
stos
jo
dec
and
jmp
xchg
add
rorl
mov
jnp
in
or
xchg
testb
jmp
and
push
lds
sbb
push
leave
pop
cmp
dec
pop
jnp
mov
jmp
test
jmp
and
stos
das
mov
out
adc
pop
popa
push
pop
pushl
call
jmp
jmp
dec
push
int3
jmp
cld
adcl
test
aad
sub
and
nop
popa
decl
jmp
and
jne
cmp
or
pusha
movsl
adcl
push
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
push
jecxz
push
in
jbe
xchg
testb
cmp
outsb
in
sbb
push
mov
add
inc
cmp
jb
lea
call
lea
jmp
out
notl
dec
les
int3
sbb
dec
push
jmp
dec
les
int3
push
xlat
pop
enter
pop
int3
inc
and
dec
sub
jno
push
jmp
pop
jmp
lea
mov
and
sbb
pop
cld
push
lahf
push
call
sub
lock
call
mov
push
call
xor
mov
jmp
jae
jne
out
pop
mov
xchg
push
enter
or
repz
call
mov
call
push
lea
jmp
push
pop
jmp
xor
xlat
idiv
decl
sti
popa
icebp
nop
arpl
fwait
jno
pop
enter
push
mov
jmp
jecxz
icebp
addr16
jmp
leave
push
les
and
fimull
xchg
add
jnp
out
jg
jmp
je
push
pop
jmp
jmp
push
cmpb
sub
dec
std
jmp
dec
or
sbb
je
dec
frstor
pop
iret
mov
jmp
rolb
mov
adc
jmp
cs
jns
popa
add
add
inc
es
dec
lds
iret
sub
inc
and
call
pop
pop
jmp
idivl
mov
sbb
mov
jle
xchg
jmp
jmp
sbb
sbb
pop
enter
jno
xorb
stos
cmp
sbb
movsb
imul
add
add
dec
and
push
push
lea
push
mov
jmp
lods
cmp
dec
cmp
pusha
mov
mov
mov
andb
sub
jmp
pop
leave
pop
cmp
js
mulb
push
fwait
adc
jecxz
push
in
mov
sbb
popa
jmp
shll
es
push
lds
loop
mov
jnp
mov
xchg
adc
push
test
add
add
jmp
mov
jmp
loop
call
fimuls
push
jmp
jne
jmp
jb
bound
ret
cmpsb
push
aam
daa
mov
and
xor
pop
sar
inc
adc
leave
dec
fistpll
mov
fs
add
cmp
call
add
xchg
popf
pushl
jmp
and
jne
ret
ret
adc
call
ret
jmp
stos
sub
cmpl
jmp
je
jmp
mov
test
gs
pushf
outsl
mov
cwtl
push
imul
jmp
imul
cmpl
sbb
clc
jmp
rol
test
rolb
add
jmp
inc
lret
lret
jnp
ljmp
pushl
jle
pusha
pop
repnz
xor
add
jmp
xor
sahf
or
in
mov
std
push
shlb
pop
mov
pop
ret
jmp
out
push
lea
jmp
xchg
add
dec
frstor
ds
cmpsl
xchg
cmp
int
add
call
inc
roll
shll
sub
lds
pop
cmpsl
jl
aam
mov
inc
jmp
dec
fdivl
in
pushf
rcrb
or
iret
outsl
and
imul
adc
pop
adc
sub
inc
cmp
adc
pop
roll
aad
ljmp
lahf
push
out
adc
inc
nop
or
pop
push
call
mov
mov
cmp
int3
inc
and
imull
add
cltd
xchg
std
lcall
nop
jns
add
mov
xchg
repz
mov
jp
in
and
inc
test
xchg
adc
fists
sub
test
pop
clc
and
cmp
mov
mov
xchg
xor
rclb
lods
pop
mov
push
lds
or
sbb
lcall
pop
cmp
cmp
popa
add
push
stc
jbe
cmpl
jp
jp
stc
je
lea
dec
fistpll
push
popa
nop
cmp
dec
outsl
lcall
jmp
and
sbb
or
push
push
cmpsb
imul
or
iret
imul
mov
inc
mov
sub
flds
mov
movsl
or
or
jae
lock
in
in
sbb
mov
and
dec
int
and
cmp
mov
ljmp
lea
fisttpl
fisttpll
rclb
xor
fdivs
icebp
jns
mov
sbb
fsts
mov
outsl
sbb
cld
ljmp
pop
pusha
add
jo
add
add
xchg
or
les
shl
sti
pop
pusha
or
pusha
or
movsl
aaa
or
iret
xchg
sbb
aad
xlat
fsts
lods
pop
cli
loope
cld
fwait
jbe
shll
xchg
mov
xchg
xor
dec
das
fisubrl
xor
scas
pop
and
ja
je
out
inc
mov
xchg
ja
loope
sti
mov
clc
adc
or
or
pusha
or
or
or
or
pusha
adc
outsl
add
add
and
imul
push
les
xchg
cld
rsm
fisttps
mov
out
jo
rorl
mov
mov
ljmp
stc
adcb
or
call
orl
popa
pop
jecxz
push
in
push
or
push
xchg
add
rcll
lods
pop
mov
and
xor
sub
xchg
add
jbe
inc
shll
jno
jecxz
aad
enter
das
mov
and
aas
pop
test
in
mov
shll
gs
pushf
outsl
fsubrl
insl
hlt
pop
lods
call
xor
xchg
add
aas
scas
lret
std
push
xor
push
adc
mov
dec
mov
jns
pusha
inc
fmuls
fcomps
icebp
popa
add
jbe
dec
frstor
adc
cld
ljmp
pop
pusha
or
imul
cli
popf
insb
test
push
mov
mov
addr16
add
pop
lret
scas
pop
mov
inc
es
lods
sub
rcll
xor
fsubrl
cmpsl
aaa
push
mov
inc
mov
scas
pop
cld
xchg
sbb
dec
fnstcw
lahf
cli
or
mov
decb
jge
cmp
jo
std
imul
adcb
subb
test
or
xchg
outsl
and
insb
adc
add
outsl
add
add
pusha
add
add
adc
pusha
add
add
add
add
pusha
add
adc
outsl
add
add
jo
idiv
decl
add
add
add
add
pusha
add
adc
add
adc
outsl
or
pusha
and
imul
adc
pop
enter
outsl
push
xor
push
xor
and
popa
add
sbb
roll
cmp
push
shlb
aam
int
dec
fdivrs
xlat
mov
stos
rclb
mov
pop
cmp
push
fcomps
fs
push
sbb
ret
push
lds
sti
jo
xorl
in
mov
scas
leave
cmp
ss
mov
ljmp
mov
test
cmp
shlb
mull
icebp
push
sub
mov
aam
shlb
mov
in
in
or
sub
pusha
add
or
or
or
outsl
or
or
pop
jo
or
add
or
outsl
or
dec
pusha
or
pusha
or
outsl
or
ljmp
pusha
or
outsl
or
or
pop
pusha
or
pusha
or
or
iret
jle
jg
jmp
fisubrs
dec
mov
psubd
into
pop
lret
scas
pop
mov
lock
outsl
lcall
inc
es
mov
test
fstl
lahf
sbb
aad
int3
push
aam
sub
addr16
sbb
sahf
pop
xor
dec
cmpsl
and
insb
loop
je
mov
fisttpll
xchg
mov
mov
lds
mov
push
lds
pop
rolb
rclb
mov
cwtl
in
in
jle
jo
jno
jecxz
das
mov
and
icebp
gs
pushf
outsl
fistps
mov
mov
push
lds
iret
push
movsb
ret
ds
inc
mov
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
imul
or
iret
pop
rclb
and
popa
add
sbb
scas
cmp
mov
into
push
mov
inc
daa
rclb
aas
scas
lret
ss
xor
push
lret
mov
and
ljmp
fistpl
xchg
addr16
in
notl
dec
adc
push
mov
lods
mov
cmpsl
jmp
mov
loope
loope
adc
inc
fcoms
lods
pop
mov
popa
add
xor
xchg
mov
inc
mov
test
test
push
mov
jb
xchg
and
test
and
push
cld
push
insl
ljmp
stc
mov
outsl
sbb
ljmp
pop
pusha
or
and
add
add
dec
or
les
sarl
pop
pusha
add
pusha
add
add
pop
in
sbb
pusha
or
outsl
or
or
pusha
or
pusha
or
pusha
or
inc
or
pop
pusha
or
cmp
aas
pop
test
out
sarl
int3
dec
fdivrl
mov
sbb
adc
or
sbb
es
cmp
inc
push
aam
sub
mov
rclb
ds
jo
fildll
inc
or
iret
mov
out
pop
sub
add
pusha
xor
inc
or
iret
dec
int
and
and
jb
or
iret
imul
popa
icebp
nop
arpl
pop
out
test
mov
and
cmp
pop
mov
int3
cmp
mov
in
loope
adc
and
jl
notb
sub
inc
aad
dec
in
scas
aas
pop
test
xor
cli
popf
insb
fisubs
mov
adcb
sbb
jecxz
in
jle
add
rcrl
pop
mov
into
and
ljmp
stc
out
or
add
adc
adc
stc
or
mov
enter
test
push
xor
sub
dec
fdivrs
xor
jae
mov
cld
jg
mov
std
jne
mov
fcoms
mov
xchg
adc
dec
push
xor
cmp
add
inc
into
pop
cmp
add
ss
mov
mov
inc
and
adcl
loope
mov
dec
in
or
and
or
imul
adc
inc
or
iret
adc
dec
fimuls
dec
cmp
cmp
sbb
push
mov
sub
das
dec
mov
pop
scas
outsb
jo
jns
jmp
mov
pop
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
lock
add
cli
fs
popf
insb
jmp
lock
in
std
insl
hlt
pop
int3
divl
jl
int
ret
cmpsb
push
mov
imul
hlt
xchg
outsb
mov
xchg
dec
lret
lret
cmpsl
aaa
push
mov
cmpl
or
cmpsb
xor
scas
pop
idivl
mov
outsb
out
adc
cmp
dec
push
xor
imul
adc
in
adcl
pop
enter
popa
and
and
add
cmp
pusha
push
shlb
dec
mov
mov
mov
and
cwtl
add
stos
cmp
inc
or
mov
or
iret
add
imul
or
iret
jno
jl
divb
inc
shll
xchg
repz
out
lods
cmp
cmp
dec
in
or
sub
pusha
or
jo
ljmp
pop
pusha
add
imul
or
iret
xchg
adc
and
stos
add
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
add
add
mov
mov
loopne
loopne
jb
add
aaa
jl
bound
adc
sub
xchg
push
push
xor
addr16
or
jnp
mov
xor
xchg
or
mov
inc
mov
mov
rcl
dec
ret
rcll
mov
gs
adc
fimuls
pop
cmp
aas
xchg
push
test
push
testb
std
jns
mov
mov
stos
into
cmp
sbb
sbb
xchg
jo
xorl
jl
js
add
adc
push
mov
icebp
nop
arpl
push
xchg
pop
bound
lea
add
pusha
pop
repnz
in
or
or
or
and
or
sbb
cmp
adc
inc
or
iret
fs
adc
adc
jb
pop
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
lods
sub
xor
sub
outsb
outsl
sbb
imul
or
imul
adc
add
jg
mov
fsubs
adc
xor
and
adc
in
sbb
mov
test
cmp
mov
xchg
out
cltd
push
and
sahf
stc
or
adc
popf
push
pushf
sti
push
mov
popa
fimuls
mov
mov
inc
mov
dec
jecxz
push
in
jns
arpl
cmc
inc
aas
stos
cmp
or
mov
mov
mov
pop
repnz
mov
adcb
subb
jle
call
lcall
xor
ds
push
lds
jmp
lahf
std
jl
jne
popa
lock
cmpl
mov
inc
mov
pop
xchg
add
ficompl
xchg
lea
xlat
and
popf
push
test
push
cld
sti
jno
xorb
fisttpll
out
or
es
pop
jp
inc
stc
jnp
mov
inc
lret
lret
push
pushf
sti
push
mov
push
std
fisttps
movsb
push
in
xor
pushf
jle
dec
rclb
xor
dec
fnstcw
fdivrl
loop
je
cmp
scas
cmp
mov
repnz
fwait
sub
mov
pushf
popf
or
test
jge
and
aad
jle
jns
jmp
mov
mov
pop
into
test
dec
sub
or
push
lahf
push
pushf
add
xor
cmpsb
xor
scas
addr16
xorl
clc
adc
mov
in
ja
add
daa
stos
cs
roll
aad
push
fimuls
adc
push
in
test
and
notl
ljmp
fstl
cmpsl
push
xchg
adcl
test
or
in
mov
insb
or
mov
fwait
or
xor
mov
mov
lock
mov
fistpll
or
jo
ljmp
pop
pusha
or
and
dec
or
iret
sbb
out
xor
dec
or
iret
outsl
xor
pusha
or
or
outsl
or
add
or
pusha
add
or
or
pusha
add
or
add
pusha
adc
imul
jp
or
iret
mov
mov
rclb
addr16
fdivl
in
jae
jle
call
out
sbb
cmpsl
push
mov
pop
push
ret
cmpsb
push
aam
cmpsl
aaa
push
mov
aaa
ret
push
pushf
sti
push
out
insl
std
test
outsl
out
jg
jmp
mov
xchg
cmp
jp
insl
hlt
pop
in
pop
fwait
or
push
imul
out
jo
xchg
pop
ja
xorb
data16
xchg
outsb
lods
pop
rolb
shlb
cmp
mov
adc
push
lds
iret
fs
les
int3
jle
add
out
loopne
jb
jnp
jl
notb
mov
inc
mov
cld
gs
pushf
outsl
mov
mov
ja
xorb
inc
xlat
mov
enter
mov
push
fisttpl
fstl
push
in
or
sbb
pusha
add
pusha
sub
jb
or
iret
rcll
cmpsl
push
mov
popf
jae
cmp
loope
adc
pop
hlt
jno
xorb
lcall
frstor
push
mov
xorb
add
adc
scas
cmp
mov
es
aas
pop
test
push
cmpsl
addr16
pop
int3
inc
and
and
insb
loop
je
cmp
cmp
cmp
sbb
push
xor
data16
ds
test
xchg
add
iret
pop
cmp
adc
xor
sahf
push
xchg
repz
in
pushf
ljmp
or
outsl
and
or
sub
cmp
adc
dec
or
iret
add
add
jo
arpl
dec
fdivrl
mov
jle
call
mov
xchg
repnz
insl
out
jl
negb
cmpsl
and
push
mov
add
push
sbb
pusha
sub
add
add
outsl
and
or
and
dec
or
iret
cmp
leave
push
lds
jns
bndstx
int
fdivrl
push
lds
ret
inc
shlb
dec
sub
sbb
xor
jbe
mov
adc
mov
iret
inc
leave
pop
cmp
sub
dec
sub
add
mov
inc
mov
xor
insl
loop
pop
loop
push
fdivl
in
xchg
sbb
jg
mov
pushf
or
lds
scas
pop
ljmp
cmp
addr16
pop
out
jp
jp
lds
mov
mov
dec
fstpt
mov
adcl
xor
pop
rcll
inc
rcll
mov
ljmp
mov
lods
mov
faddl
jg
notl
rorl
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
scas
sub
xor
mov
loopne
and
subl
or
iret
lds
xchg
mov
cmpsl
aaa
push
mov
test
xor
int
mov
pushf
push
cmp
mov
scas
popa
loopne
adc
add
xchg
popa
orb
decb
xor
cmp
fnstcw
ret
pop
cmp
sub
jne
out
or
inc
and
sub
jo
xorl
xlat
add
pop
ds
sub
int3
inc
and
jmp
jge
pop
enter
jns
fimull
fidivl
iret
pop
cmp
gs
or
mov
fimull
movsb
push
repnz
int3
inc
and
mov
and
aad
ret
cmpsb
push
mov
inc
stos
lods
xor
xchg
mov
dec
enter
add
ficoms
xchg
add
sbb
cld
xchg
cmc
add
push
and
js
mov
mov
push
lds
xor
dec
ret
jmp
mov
ret
add
call
push
inc
adc
jae
popa
callw
add
jmp
adc
push
pop
rolb
shlb
push
call
pushf
jmp
push
xlat
out
add
add
add
jmp
add
cmpsb
sub
outsl
xor
add
add
adc
imul
xchg
mov
popf
jmp
rcrl
stos
sar
les
jo
add
add
pop
pusha
or
and
push
or
iret
fimull
mov
or
xor
ljmp
popf
jnp
add
add
jmp
mov
sbbb
xchg
popf
pushl
mov
jmp
call
jmp
lds
mov
mov
mov
andb
jmp
or
pop
cltd
aam
popf
mov
add
push
shll
ss
jmp
int3
popf
repz
mov
outsl
icebp
mov
or
add
mov
imul
mov
dec
jmp
call
jmp
pushf
push
xchg
repz
int
sub
clc
jle
sub
add
jmp
xor
popf
pop
jmp
ss
inc
mov
sbb
popa
jmp
push
mov
call
jmp
dec
fisttpl
fnsave
stc
pusha
notb
mov
jo
add
add
pop
pusha
add
and
add
add
hlt
or
les
inc
test
pop
pusha
or
pusha
or
push
push
or
iret
in
mov
ret
stos
cmp
pusha
xchg
ljmp
jmp
inc
fwait
sbb
add
add
jmp
in
jno
xorb
js
outsl
sbb
add
outsl
add
sub
push
or
iret
imul
dec
or
outsl
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
imul
add
jl
mov
add
or
sbb
mov
cmpsl
push
fwait
xchg
adc
dec
enter
and
jno
into
pop
cmp
sub
adc
ss
adc
adc
adc
stos
daa
mov
and
push
mov
jle
imul
push
movsl
push
mov
shlb
mov
sbb
lahf
adc
adcl
data16
xchg
outsb
fadds
mov
mov
sbb
cmp
or
push
pop
xchg
add
es
jecxz
out
jl
divb
xor
mov
mov
int
and
cmp
data16
les
int3
dec
je
pop
cld
add
add
outsl
xor
pusha
or
add
add
add
pusha
or
dec
pusha
or
outsl
or
pusha
or
dec
pusha
or
adc
imul
or
iret
sarl
test
incl
add
mov
movzbl
jmp
int3
popf
push
enter
sub
js
ljmp
add
fcompl
add
jmp
pop
lret
scas
pop
mov
sub
push
lahf
push
rolb
dec
mov
lea
movsb
inc
lds
iret
sbb
cmp
jmp
outsl
jmp
add
mov
lods
lret
inc
mov
lea
and
jmp
add
je
dec
fstpt
test
add
add
jae
xchg
jns
gs
pop
mov
push
out
mov
pop
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
pop
lea
jmp
lea
xchg
repnz
xlat
pop
enter
sub
push
jmp
mulb
dec
cmp
sbb
inc
rolb
sarb
ds
int3
popf
or
les
mov
cmpsl
xchg
sbb
pop
popl
jmp
sbbl
out
sbb
fsubrl
test
lock
jmp
dec
jecxz
push
in
sti
notl
cmp
dec
and
pop
jmp
sub
sub
push
stc
pusha
notb
pop
aas
lret
push
xor
dec
jp
addb
rolb
add
jmp
push
jmp
mov
jmp
fstps
test
nop
jb
addr16
pop
cmpsl
and
jle
jl
cltd
sub
jmp
mov
fisttpll
in
nop
adc
popa
push
fwait
and
jmp
dec
int3
inc
and
xorl
add
xchg
adc
ret
push
lds
jg
push
cld
push
inc
std
pop
test
mov
jmp
insb
in
sbb
pop
and
sub
and
fldenv
jo
add
add
pop
pusha
or
and
push
or
iret
xor
bound
inc
and
jmp
push
jmp
popf
pop
xchg
adc
dec
fdivrs
fstpt
mov
and
neg
mov
inc
cmp
jl
lea
call
jmp
out
jle
mov
xchg
popa
jg
jg
jmp
adc
add
ljmp
cltd
push
aaa
ret
jecxz
push
in
mov
jmp
mov
loope
sub
adcl
test
sbb
stos
and
xor
inc
jmp
enter
pop
fldenv
insl
hlt
pop
xorb
pusha
xchg
sarl
jmp
xchg
add
lret
dec
fidivrs
les
push
cld
sbb
aad
push
jmp
or
inc
ret
ret
push
xor
cmp
push
mov
jmp
mov
ret
pop
jb
insl
xchg
clc
xchg
jmp
ja
mov
add
add
jmp
fcoms
mov
ss
mov
dec
mov
pop
mov
pop
ret
jmp
daa
test
pop
test
mov
shlb
int
mov
xor
adc
stos
aas
scas
lret
jb
jo
loop
not
sub
add
jmp
lret
pop
enter
movsb
xor
rolb
sarb
adc
test
mov
jmp
cmpsl
xor
and
or
sbb
mov
add
add
push
fcomps
rcrb
add
mov
xor
adc
in
sbb
adc
xchg
add
inc
data16
xchg
outsb
test
testb
or
mov
ret
enter
pop
fcmovbe
push
shll
xor
sbb
popa
jmp
xchg
fcmove
jne
cmc
jmp
cld
cmc
int
jecxz
jmp
test
push
shll
and
and
negl
nop
mov
mov
mov
andb
jmp
lds
mov
xchg
and
ss
mov
call
sbb
ret
jmp
jl
fs
or
cmp
ret
dec
fnstcw
jge
testl
jmp
lcall
int
ret
jecxz
cmpl
lds
mov
stos
into
cmp
enter
jmp
cmp
cmp
xchg
add
std
or
test
scas
leave
cmp
add
add
jmp
cld
jae
xchg
inc
aad
sub
outsl
or
outsl
call
mov
call
mov
push
add
jmp
loop
enter
cmpl
por
sbb
aad
xchg
sti
outsb
cld
fwait
jbe
mov
test
push
fisttpll
std
lcall
fcomp
inc
xlat
mov
movsl
movsb
inc
shll
jae
in
cmp
mov
imul
popf
dec
addl
add
repz
add
sbb
fistps
fs
xor
cmp
je
mov
cmp
je
jmp
inc
push
push
call
aam
fsubs
je
out
insl
std
test
add
enter
push
test
inc
xlat
mov
cwtl
fwait
jmp
ret
inc
aad
dec
mov
out
push
movsl
cmp
xor
add
xchg
sbb
mov
lods
lret
inc
mov
jb
push
call
mov
lods
mov
loop
arpl
xchg
gs
shlb
sub
ret
jmp
ljmpw
jecxz
cld
fwait
jbe
out
ljmp
mov
push
call
in
jmp
jge
jno
adc
test
add
pop
je
call
adcb
subb
xor
in
jns
mov
sub
push
lds
popl
lea
jmp
and
sbb
push
int3
inc
and
jmp
jge
ds
jmp
shrl
mov
add
or
xlat
inc
and
aaa
xlat
dec
fistpll
dec
sub
pusha
divb
adc
mov
sahf
stc
or
xlat
push
lret
mov
sbb
aad
int3
mov
mov
call
cmc
mov
roll
movsb
jmp
mov
les
dec
sub
emms
icebp
popa
add
add
out
adc
push
push
pushf
jmp
rorl
dec
mov
add
outsb
out
adc
or
scas
sub
jmp
xchg
jmp
aad
repnz
fs
outsb
loopne
adc
inc
pop
mov
jns
pop
test
mov
jmp
cmp
es
mov
iret
inc
shlb
sub
or
pop
icebp
mov
add
call
icebp
sahf
lahf
mov
jmp
pusha
jmp
mov
mov
add
and
sbb
and
pushl
jmp
shr
std
pushl
xchg
jmp
in
mov
push
in
xorb
adc
je
popa
mov
jmp
inc
fmuls
fdivrs
fiadds
mov
movsb
dec
roll
sarl
and
icebp
fdivl
dec
adc
lock
jmp
mov
jmp
jne
js
ljmp
xchg
cs
inc
mov
in
xchg
repnz
mov
ret
fcompl
mov
nop
push
popa
nop
jne
inc
xlat
mov
mov
cld
inc
shll
jmp
push
jmp
cmpsl
and
mov
inc
mov
sbb
inc
cld
mov
dec
pop
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
sbb
test
sarb
test
adc
out
adc
or
mov
xchg
add
ss
add
add
cld
fwait
jbe
sbb
sub
arpl
ret
jmp
and
add
adc
mov
jmp
outsl
insb
or
scas
cmp
add
sbb
cld
ljmp
pop
pusha
or
and
add
add
lods
or
les
int
inc
pop
pusha
or
or
pop
or
iret
fisttpl
push
std
xor
ret
push
les
mov
pop
adc
xor
add
add
inc
or
les
stc
sahf
movsb
pop
pusha
or
or
pop
or
iret
mov
test
idiv
jl
jmp
sub
mov
into
adc
arpl
jmp
add
add
jmp
xlat
dec
fdivrl
xchg
testb
divl
out
movzbl
add
cmp
je
jmp
and
fs
or
in
cld
daa
adc
jmp
mov
mov
ss
push
jmp
imul
pop
xchg
mov
pop
jp
imul
loop
rolb
add
jmp
bndstx
ja
xorb
ljmp
push
xor
sub
imul
or
mov
jmp
jns
pusha
pop
repnz
in
pusha
out
jg
jmp
inc
mov
fldenv
mov
lea
inc
dec
ret
sbbb
push
mov
call
jmp
or
js
mov
jmp
int
xlat
mov
stc
je
lea
iret
pop
cmp
popa
sub
add
testb
add
insl
std
test
daa
mov
dec
mov
inc
mov
in
mov
jmp
jmp
jnp
adc
jmp
xlat
inc
xlat
mov
std
add
cmp
push
cld
dec
int
pop
or
fldt
pusha
sbb
pop
or
iret
sbb
sub
sbb
test
sbb
or
or
or
xor
or
in
add
add
add
outsl
add
add
pop
jo
or
add
add
outsl
add
dec
pusha
add
pusha
add
outsl
add
ljmp
pusha
add
outsl
add
add
pop
pusha
add
pusha
add
add
pop
in
sbb
pusha
or
outsl
or
or
pusha
or
pusha
or
pusha
or
popa
or
pop
pusha
or
mov
shlb
mov
aad
inc
decl
fcmovu
cld
lcall
add
decl
test
lcall
ret
jmp
sub
fs
sahf
sti
pop
jmp
add
jmp
mov
mov
mov
inc
mov
add
inc
lret
push
jmp
aad
les
call
xor
nop
jmp
bound
jmp
ja
gs
adc
out
or
jno
xorb
and
jo
add
add
pusha
or
or
or
pusha
or
add
jo
or
add
or
or
or
or
pusha
or
adc
outsl
or
or
jo
idiv
decl
or
or
or
or
pusha
or
adc
or
adc
outsl
add
pusha
and
jo
add
add
aad
adc
jo
cltd
jle
pop
pusha
add
add
pop
or
iret
inc
lds
iret
sbb
pusha
jmp
push
shlb
mov
jmp
cmp
andb
jmp
mov
scas
leave
cmp
push
fwait
or
jns
inc
shlb
into
mov
xor
mov
jmp
orl
decl
stc
outsl
hlt
mov
jmp
cmpsb
sub
data16
xchg
outsb
mov
adc
sub
jg
mov
jmp
sub
jmp
sub
add
cmp
mov
gs
and
insb
loop
je
repnz
lock
movsb
or
push
or
iret
out
in
jle
movsb
push
out
setg
or
jmp
ja
das
std
pop
and
jmp
jne
jmp
push
push
xor
jns
test
mov
mov
sub
lds
insl
popa
mov
ret
mov
mov
adc
lcall
leave
xor
add
jmp
in
adc
imul
addr16
adc
das
stos
pop
push
imul
adc
add
imul
or
iret
stc
jns
mov
cwtl
sbb
popa
jmp
add
lcall
mov
leave
dec
fdivrl
je
jmp
daa
lcall
add
add
test
inc
sub
sub
test
sahf
or
cmpsb
push
push
ret
cmpsb
push
mov
sbb
add
movzbl
add
cmp
jmp
fcoml
pop
mov
pop
lods
add
add
jle
ret
lcall
fldenv
mov
cli
add
add
jmp
loop
cld
fwait
jbe
nop
stos
xor
jmp
xchg
sbb
mov
mov
das
fwait
xor
sbb
xor
add
add
shlb
push
jmp
and
dec
sub
jmp
add
or
sub
call
shll
xchg
or
push
pop
sbb
add
add
in
cld
adc
sbb
pusha
or
imul
adc
mov
mov
inc
aad
dec
cli
mov
jne
jge
divl
and
dec
int
enter
inc
or
adc
neg
mov
jmp
repz
sub
push
push
xchg
add
dec
pop
add
jl
jmp
push
jmp
pop
lahf
punpckhdq
mov
enter
loopne
fadd
ja
sti
mov
add
add
data16
xchg
outsb
xchg
pmaxsw
add
mov
mov
inc
mov
ss
dec
mov
adc
push
repz
rorl
test
adc
jmp
into
dec
fistpll
or
insb
mov
lods
nop
test
clc
push
jmp
mov
jmp
lock
jp
xor
fists
lods
pop
mov
adc
adc
jnp
pusha
pop
repnz
inc
aam
dec
jmp
xor
cltd
outsl
xor
add
add
adc
jo
add
add
and
adc
jo
cld
mov
pusha
or
pusha
or
or
leave
jmp
jb
insb
or
les
adcl
popf
or
mov
inc
testl
enter
les
rcrb
jmp
push
inc
jmp
and
xlat
inc
aam
dec
out
das
mov
add
negb
call
test
or
sub
jmp
dec
jecxz
push
in
std
gs
pushf
outsl
scas
sub
pop
mov
or
call
lea
push
lea
push
jmp
xchg
jmp
pop
rcll
sub
vmovmskps
mov
fst
fadds
lahf
jmp
mov
jmp
arpl
xchg
cmc
add
cmp
sub
movups
adc
jo
ljmp
pop
pusha
add
xor
add
add
add
fstl
push
jb
pusha
add
pusha
add
adc
adc
imul
out
adc
push
xor
mov
pusha
mov
mov
mov
andb
sub
jmp
dec
iret
pop
cmp
sub
jl
jne
push
adc
mov
jmp
loope
sti
sahf
insl
sahf
orb
decb
fsubrl
fiadds
mov
inc
adc
cmp
and
pop
rolb
shlb
pop
mov
mov
mov
dec
outsb
loopne
adc
inc
addr16
lock
jne
inc
out
stc
cwtl
imul
and
add
add
add
add
jmp
jne
jmp
dec
fimuls
push
jecxz
out
jo
insb
cld
xchg
cmc
add
mov
mov
and
xchg
add
jmp
jp
bound
call
dec
fidivrs
outsl
in
adc
cld
ljmp
pop
pusha
or
imul
or
imul
adc
add
add
outsl
xor
add
add
adc
imul
or
iret
in
cld
adc
sbb
pusha
add
pusha
sub
repnz
iret
fwait
push
pushf
sti
push
mov
sbb
cmc
test
ss
jecxz
jmp
lea
jmp
dec
ret
xchg
xchg
or
test
rorl
mov
test
jmp
mov
cmc
adc
mov
jmp
into
push
mov
pop
cmp
dec
xchg
adc
fcmovnu
sbb
add
mov
add
cmp
jmp
pop
test
fwait
decb
add
adc
int3
popf
outsb
hlt
push
cld
aas
mov
xchg
adc
movb
add
add
jmp
push
jmp
cmp
outsb
out
jg
jmp
sub
sub
pmulhw
movsl
mov
jmp
pop
rolb
shlb
repz
mov
cmpsb
cs
clc
outsb
or
or
jo
add
add
pop
pusha
add
jnp
or
iret
xor
push
xor
push
push
push
push
push
jmp
imul
jp
fs
cmp
cmp
jno
xorb
push
jmp
es
clc
push
sub
scas
cmp
fisubrl
fucomi
cld
adc
sbb
pusha
or
add
pusha
add
outsl
add
add
pop
jo
or
add
add
outsl
add
dec
pusha
add
pusha
add
outsl
add
ljmp
pusha
add
outsl
add
add
pop
pusha
add
in
cld
adc
sbb
pusha
or
imul
or
iret
leave
push
jmp
jmp
dec
push
jmp
pop
pop
jmp
cmp
add
and
sbb
add
push
dec
push
call
pushl
call
mov
jmp
lods
xchg
lret
call
pop
pop
ret
jmp
aas
fiaddl
shr
pushf
add
add
jmp
xchg
or
rcll
sub
jg
jmp
adc
pushf
jmp
jl
jo
loop
mov
ret
jns
jmp
mov
divb
lea
jmp
int3
dec
frstor
jne
insb
mov
lahf
cli
or
icebp
jne
mov
cmp
xlat
popf
imul
outsl
and
cld
ljmp
pop
pusha
add
imul
cmp
popf
jmp
mov
jmp
sub
jge
or
push
mov
rcl
push
shr
pop
jmp
add
add
jmp
jo
push
pop
aad
repz
xchg
or
iret
inc
into
pop
cmp
and
iret
push
popf
or
jns
mov
sub
jo,pn
add
add
ljmp
pop
pusha
add
imul
push
lods
popa
jmp
cltd
adc
in
sbb
insb
loop
je
and
jmp
inc
inc
and
ja
lahf
punpckhdq
adc
inc
sbb
xchg
lahf
fldcw
mov
mov
andb
sub
jmp
mov
add
add
imul
jmp
addl
jmp
and
mov
sbbl
and
daa
inc
mov
js
mov
ret
add
push
iret
pop
cmp
xor
and
inc
sbb
sbb
cld
jp
jno
jecxz
jmp
xchg
popa
call
jmp
fs
add
jmp
push
test
jge
inc
lahf
sbb
aad
int3
xor
push
xchg
test
jmp
movzbl
jmp
stc
js
mov
out
notb
add
daa
sbb
ljmp
pop
pusha
add
imul
adc
insb
or
iret
add
push
mov
push
xor
sub
jecxz
mov
mov
pop
pop
jmp
jo
push
lods
and
push
inc
int
and
xor
xor
push
dec
push
push
or
or
iret
add
imul
or
iret
call
leave
cmpsl
sub
cwtl
push
imul
or
test
jp
add
les
push
mov
jmp
cmp
xchg
add
mov
inc
mov
mov
pop
jmp
cli
imul
loope
adc
push
imul
cmc
add
push
test
outsl
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
add
add
mov
and
pop
aad
sub
cs
dec
fstpt
push
cmp
sub
adcl
test
movsl
xor
imul
call
and
out
adcl
test
ljmp
xor
pusha
pop
repnz
jp
bound
stos
int
xchg
xchg
push
xchg
repz
mov
pop
lcall
iret
mov
into
dec
pop
add
cmp
in
js
mov
in
mov
js
incl
out
popl
jmp
mov
sti
jp
ja
loope
sbb
push
int
and
cmp
jmp
mov
dec
sub
jmp
push
jmp
mov
test
test
jge
or
repz
outsl
sub
sub
pusha
add
outsl
add
dec
pusha
adc
in
add
pop
in
sbb
or
cmp
or
imul
or
pop
pusha
add
mov
enter
xlat
and
mov
les
xchg
inc
imul
jmp
ret
jmp
lock
push
call
lahf
pop
fstpl
scas
pop
lea
fstps
mov
add
call
icebp
je
lea
outsl
jmp
add
inc
pop
std
fsubrs
mov
pop
std
ljmp
jp
in
pop
push
mov
xchg
pushf
jmp
lock
xchg
xchg
sbb
jmp
out
jecxz
jne
insl
jmp
push
in
setb
mov
sbb
in
push
in
divb
push
call
test
cltd
clc
or
inc
xchg
pop
inc
and
sbb
dec
and
add
cld
ljmp
pop
pusha
add
imul
or
iret
dec
int
in
add
cld
ljmp
pop
pusha
or
and
outsl
or
iret
jmp
push
fisttps
flds
cs
push
ret
cmpsb
push
cli
push
pop
das
add
and
jmp
cmp
mov
or
hlt
js
sub
jmp
push
mov
es
sub
push
lds
xor
and
dec
inc
test
shlb
inc
test
inc
and
popf
pushl
jmp
mov
mov
and
dec
jmp
mov
sbbl
jmp
into
test
lock
bound
stos
xor
mov
mov
andb
jmp
sbbl
and
fstps
test
nop
rclb
mov
jae
in
add
inc
adc
insl
in
bound
punpckhdq
add
daa
lds
dec
pop
in
add
cld
ljmp
pop
pusha
or
imul
or
iret
mov
and
out
dec
fnstcw
add
shlb
ljmp
pop
pusha
add
imul
mov
adcb
decl
add
jmp
addl
jmp
jl
outsl
or
out
aaa
ret
push
lds
cwtl
dec
fstps
jne
jmp
test
pushf
sti
push
hlt
js
add
adc
pop
repnz
fs
mov
xchg
test
xor
ljmp
pop
pusha
add
imul
or
iret
call
imul
adc
xor
or
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
imul
or
iret
sbb
jmp
sbb
jnp
mov
popf
pop
xchg
adc
daa
stos
cmp
or
loopne
aaa
mov
jmp
lret
stos
pop
into
data16
dec
dec
cmpsb
mov
mov
mov
add
cmp
jmp
popl
jmp
xchg
add
std
or
lcall
scas
aas
pop
test
fsubrs
sahf
loopne
add
fcomp
jmp
and
out
outsb
cld
fwait
jbe
scas
ret
and
lea
push
call
rorl
mov
lods
mov
add
sbb
add
clc
notl
inc
fisttps
fldenv
or
jb
xchg
rcrl
jnp
mov
add
cld
ljmp
pop
pusha
add
jo
add
add
mov
push
xor
push
pusha
or
lcall
jecxz
jne
cmc
jnp
mov
lcall
cmp
cmp
xor
adc
mov
shll
dec
sub
cmp
in
xchg
or
outsl
outsb
loopne
adc
inc
fstl
cmpsl
push
xchg
push
xor
or
and
adc
xor
pop
adc
data16
gs
push
or
xchg
outsl
xor
ljmp
pop
pusha
or
imul
or
iret
ja
jbe
loopne
mov
test
punpckhdq
out
shr
jbe
cmpl
xor
mov
pop
xchg
jb
or
inc
and
push
mov
stos
int
cmc
add
popa
out
adc
pop
in
sbb
or
cwtl
push
imul
dec
fdivrs
sub
cmp
mov
mov
pop
imul
adc
mov
shrl
scas
add
jo
add
add
pop
pusha
or
and
ja
adc
pusha
call
jle
gs
push
pop
xlat
inc
and
js
insb
loop
je
out
stc
cwtl
imul
arpl
jbe
loopne
rolb
mov
call
ds
sub
jno
pop
enter
sub
sub
adc
jbe
cmpl
pop
leave
test
inc
pop
leave
test
lcall
fs
xchg
cmc
add
iret
push
les
jp
in
imul
push
mov
jnp
pop
mov
lret
mov
frstor
movsb
push
stos
dec
roll
aad
xor
es
mov
xchg
xchg
lock
sub
inc
enter
sub
les
es
xchg
sbb
push
fdivl
in
push
mov
jg
dec
js
imul
pop
inc
aam
sub
hlt
xchg
outsb
mov
cltd
cmp
xchg
pop
or
in
adc
xor
add
outsl
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
imul
or
imul
or
iret
add
dec
fstpt
cli
popf
insb
ficoms
cmpsl
jno
jnp
in
pop
insl
clc
outsb
or
pop
and
push
jb
jg
jmp
inc
mov
stc
pusha
notb
imul
pop
adc
xor
jae
adc
xor
add
adc
in
sbb
mov
lret
pop
cmp
aas
jecxz
lock
bound
adc
mov
mov
ljmp
stc
bnd
insb
or
out
mov
xchg
lock
test
pusha
outsb
pop
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
add
add
es
cs
push
jo
loop
jle
gs
push
rorb
push
icebp
mov
ljmp
arpl
jl
notb
movsb
cmp
sbb
movsb
cmp
add
pop
movsb
inc
aam
sub
add
inc
jg
jle
call
sti
push
mov
mov
add
shlb
cld
movntq
pop
jp
jg
adcl
test
rcll
inc
adc
adc
das
lods
cmp
sub
add
pop
int
addr16
lock
bound
jecxz
jecxz
jecxz
jne
push
xchg
jb
pop
mov
lods
mov
xchg
punpckhdq
jnp
and
mov
jle
and
pop
repnz
fs
mulb
push
pop
xchg
pop
bound
jbe
sub
xchg
add
and
push
idivb
jbe
loopne
cmp
cmpsl
cmp
fiadds
mov
mov
cmp
inc
shll
and
cld
xor
sub
push
push
test
clc
outsb
or
push
out
notl
adc
jno
sbb
push
in
cmp
imul
pop
adc
xor
jo
adc
pop
rolb
shlb
lcall
dec
fstpt
and
jp
jp
idivl
mov
lret
mov
mov
popa
icebp
nop
arpl
pop
lret
lret
into
pop
cmp
jg
lret
pop
ds
cmp
sbb
outsl
xor
pusha
or
add
add
add
pusha
add
dec
pusha
add
outsl
or
pusha
add
dec
pusha
add
adc
imul
mov
sbb
pusha
sbb
pusha
and
add
add
jnp
adc
jo
cmp
mov
pusha
or
or
js
adc
mov
mov
and
jl
icebp
imul
insl
fdivrl
jl
notb
rclb
add
and
dec
frstor
cmpsb
push
mov
lcall
add
mov
jle
inc
cmc
jbe
cmpl
lock
sbb
push
les
sbb
je
adc
adcl
lret
pop
ds
xchg
sbb
inc
into
pop
cmp
xor
adc
popa
call
fstl
mov
or
cmpsb
jb
test
pop
test
shlb
xchg
les
mov
gs
and
dec
fdivrl
cmp
sbb
lea
nop
push
xchg
repz
mov
iretw
lret
pop
int
shlb
fs
pop
dec
ret
xchg
xchg
or
dec
aam
sub
aam
int
push
mov
sub
movb
outsl
and
xor
jo
adc
jmp
lcall
jecxz
jne
mov
cwtl
decl
loop
add
push
xor
xor
lods
and
arpl
mov
dec
mov
or
out
mov
xchg
repnz
sbb
jl
push
lret
mov
or
outsl
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
imul
adc
movsl
sub
lds
test
mov
outsl
sbb
pusha
sbb
pusha
and
jp
adc
mov
shll
punpckhdq
and
jb
sbb
xchg
mov
pop
test
and
or
sti
push
sbb
mov
mov
and
xor
or
jo
jle
call
adc
or
mov
lods
xor
stc
imul
mov
and
dec
leave
pop
cmp
and
pop
iret
stos
pop
add
aad
dec
mov
sbb
sahf
or
cmpsb
push
mov
in
cld
outsb
in
sbb
fnstcw
popf
in
icebp
arpl
js
ljmp
mov
icebp
popa
add
and
add
add
dec
fimuls
push
jmp
rcrl
pop
cmp
retw
push
shlb
mov
scas
cmp
jmp
xchg
add
call
pusha
add
outsl
or
or
pusha
or
dec
pusha
or
outsl
add
or
dec
pusha
or
adc
imul
adc
adc
jb
jns
or
outsl
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
imul
adc
add
add
add
out
inc
aam
dec
jmp
jne
gs
jg
jmp
fisubrl
nop
roll
mov
idivl
pop
inc
aad
sub
insb
inc
rolb
sarb
insl
std
test
sbb
icebp
popa
add
inc
push
adcl
xchg
jb
dec
add
loop
call
sub
sbb
jp
jp
les
mov
xchg
pop
cmp
in
mov
and
cmp
dec
frstor
popa
mov
out
sbb
lret
pop
mov
dec
addl
movsl
lods
lret
inc
movsb
xchg
or
in
insb
sti
imul
adc
pop
cmp
dec
or
sbb
dec
int3
inc
and
mov
sbb
in
mov
cmp
or
sbb
pusha
add
or
iret
add
imul
jb
ljmp
stc
shlb
lret
fs
push
push
jbe
loopne
mov
scas
leave
cmp
ss
dec
lret
pop
ds
jmp
sti
sahf
insl
int3
jle
addr16
sub
imul
mov
sbb
ja
add
adc
pop
adc
xor
jge
adc
sub
xchg
pop
xchg
repnz
imul
adc
push
rclb
jno
inc
and
ja
imul
adc
sub
push
popf
or
cmp
in
adc
sub
pusha
or
pusha
sub
dec
lea
adc
pusha
hlt
push
cld
dec
cs
lods
jb
outsl
xor
pusha
or
or
outsl
or
add
or
pusha
add
or
or
pusha
add
or
add
pusha
adc
imul
adc
repnz
pushf
outsl
lret
insl
hlt
pop
adc
sbb
pop
xchg
repnz
cmp
in
jmp
lret
lret
xchg
jb
inc
push
rolb
sarb
mov
leave
icebp
jo
xorl
loopne
pop
fisttpl
dec
int3
inc
and
fdivrl
pusha
pop
repnz
shlb
sbb
adc
push
lock
mov
cld
psubusw
jo
loop
push
fimuls
inc
cli
push
cmp
cmp
roll
shll
mov
gs
cmp
or
xchg
push
xchg
repz
cmpsl
pop
mov
js
ds
insl
std
test
add
fwait
add
mov
inc
mov
push
iret
pop
cmp
aas
mov
in
adc
xor
or
in
add
or
outsl
add
add
pusha
add
or
adc
pusha
add
add
add
add
pusha
add
adc
outsl
add
add
jo
idiv
decl
add
add
add
add
pusha
add
adc
add
adc
in
add
pop
in
sbb
or
cmp
or
imul
pop
pusha
or
std
popa
icebp
nop
arpl
xlat
dec
fidivrs
notl
inc
daa
sarb
dec
int
and
cmp
mov
mov
mov
pop
sarb
mov
mov
loop
cltd
push
in
notl
xor
inc
lods
sub
iret
pop
cmp
jo
push
lret
mov
ret
push
lds
cwtl
sbb
dec
fnstcw
movsl
int3
aas
xchg
push
lds
or
push
js
jl
testb
pop
scas
add
inc
mov
imull
mov
cmpsb
cmp
mov
xchg
lock
mov
sbb
jnp
adc
add
imul
or
imul
gs
pushf
outsl
test
dec
fstpl
xchg
cld
jp
fcoms
ljmp
iret
stos
das
mov
fisttps
xlat
push
les
push
xor
aas
sbb
add
push
jno
jne
sbb
orl
iret
pop
xchg
add
jp
xchg
add
sahf
insl
jl
gs
pop
jo
outsb
or
sbb
daa
mov
and
arpl
arpl
cmc
push
imul
jmp
test
push
es
dec
mov
in
mov
mov
push
lea
lods
and
push
mov
imul
or
iret
add
imul
or
iret
les
mov
jnp
adc
mov
subb
sub
push
and
sub
movb
inc
ret
scas
pop
mov
out
add
or
or
and
or
pusha
xor
jl
adc
sbbl
test
movsb
ret
ds
jp
jle
mov
dec
mov
psubd
addl
cli
jl
jne
jp
insb
loop
je
arpl
jne
out
sbb
pop
repnz
fs
dec
fdivrs
cs
mov
mov
stos
xor
cwtl
push
test
push
mov
push
rolb
pop
cmp
or
xchg
mov
jae
ja
loope
rolb
mov
out
sbb
lock
lret
mov
mov
and
nop
arpl
sbb
inc
aam
sub
adc
inc
fadds
mov
mov
cmp
mov
mov
js
mov
pushf
push
mov
es
cmpsb
sub
sbb
aad
int3
mov
lret
pop
aas
lret
imul
insl
mov
shlb
imul
pop
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
out
lock
bound
repnz
dec
fnstsw
les
push
mov
fwait
or
push
and
sti
push
ret
xor
scas
insb
pusha
repz
cmc
push
aad
aad
dec
sti
les
lods
pop
hlt
jno
ja
loope
mov
pushf
jbe
jbe
loopne
cs
lods
cmp
int
and
jb
push
shlb
xor
and
outsb
cld
fwait
jbe
add
lahf
pop
xchg
repnz
movsl
and
xor
jg
mov
xchg
adc
movsb
cmp
dec
pop
adc
inc
insb
xorb
ljmp
pop
pusha
add
imul
adc
test
adc
add
add
pop
aas
lret
popa
icebp
nop
arpl
sbb
sahf
sbb
dec
or
sti
jge
je
jo
je
lea
stos
cmp
pop
and
push
mov
std
or
mov
test
cmp
add
mov
push
fisttpll
out
gs
xchg
mov
sbb
je
sub
mov
stos
cmp
rolb
shlb
popf
or
movsl
xor
les
int3
imul
cmc
pushf
outsl
scas
out
jnp
mov
cmp
jmp
loopne
jb
pop
push
xor
dec
loope
in
mov
lahf
push
push
aam
sub
cmp
inc
pop
fimull
fidivrl
or
ja
mov
xor
or
outsl
or
dec
pusha
adc
jo
add
add
fmuls
adc
jo
rorl
pop
pusha
add
add
add
pop
in
sbb
pusha
or
or
or
pusha
or
pusha
or
pusha
or
pusha
or
push
orb
pop
pusha
or
cmp
jecxz
pop
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
add
add
push
mov
arpl
aam
mov
int3
push
jecxz
push
in
ficoml
pop
sti
rcrl
fs
outsl
lcall
sbb
sub
pop
int3
stos
data16
cwtl
push
imul
push
xor
les
cmpsl
push
loopne
cli
push
pop
jp
and
dec
adc
inc
sub
xchg
or
icebp
popa
add
sbb
hlt
cltd
add
into
push
mov
sbb
and
clc
add
lret
repz
mov
cmc
jo
xorl
outsb
pop
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
data16
bound
and
mov
jecxz
cli
sbb
mov
lcall
xchg
push
mov
es
test
insb
loop
je
icebp
and
outsb
or
outsl
xor
outsl
sub
outsl
add
outsl
sbb
outsl
adc
imul
out
jl
negb
cld
xchg
cmc
add
pop
leave
pop
cmp
pusha
pop
xchg
pop
bound
shrl
xchg
push
mov
mov
sbb
push
lds
cld
fadds
mov
stos
fmull
mov
push
lds
mov
or
adcb
imul
or
iret
popf
push
mov
es
dec
lret
lret
stos
cmp
dec
push
mov
cmp
jge
pop
xchg
adc
mov
scas
jnp
mov
push
fimull
fidivrl
arpl
jns
jmp
dec
rclb
xor
test
or
jo
xchg
cmc
add
cmp
dec
fdivl
in
xor
pop
xchg
add
xchg
add
cmp
jp
in
pop
xchg
xchg
adc
imul
adcl
aam
sub
cmpsl
ret
jmp
loope
jae
gs
pushf
outsl
test
outsb
cld
fwait
jbe
inc
jecxz
push
in
loope
icebp
nop
arpl
cli
adc
pop
cmp
aas
cmp
push
lds
xchg
adc
inc
aam
dec
cltd
cwtl
sbb
aad
rcr
pop
repnz
mov
stos
cmp
pop
aam
int
addr16
jl
jne
pusha
or
daa
int
aas
imul
adc
sub
cmp
sub
lds
fcoml
mov
adc
mov
mov
out
je
lea
inc
fidivrl
pop
jb
ds
lock
pop
or
pop
repnz
fs
lret
pop
ds
sub
push
lds
cmp
sbb
sub
xor
inc
and
pop
rep
loop
je
test
xchg
repz
mov
test
mull
icebp
pop
int3
push
ret
cmpsb
push
mov
jecxz
push
in
divb
xorb
arpl
xchg
gs
push
shll
mov
mov
sbb
imul
sub
adcl
out
mov
stc
imul
xchg
repz
int3
mov
scas
leave
cmp
cmpl
pop
mov
mov
js
cmp
arpl
xchg
gs
scas
leave
cmp
int3
lods
aas
scas
lret
ret
push
imul
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
in
out
jo
xchg
aad
out
mov
inc
mov
jle
je
out
add
jg
mov
int3
push
shlb
mov
xor
pop
fdivl
in
popl
in
add
add
outsl
sub
pusha
add
add
add
or
or
or
pusha
or
add
jo
or
add
or
or
or
or
pusha
or
adc
outsl
or
or
jo
idiv
decl
or
or
or
or
pusha
or
adc
or
adc
in
add
pop
in
sbb
pusha
or
or
or
pusha
or
pusha
or
pusha
or
pusha
or
sbb
or
sub
movl
cmpsl
aaa
push
mov
push
mov
enter
in
sbb
add
or
push
fstpt
sub
dec
les
int3
aas
enter
dec
jmp
rclb
cmp
daa
inc
mov
pop
leave
pop
cmp
jg
xchg
or
xor
icebp
dec
cs
movsb
xor
sbb
xchg
add
and
roll
shll
adcl
test
push
xor
sub
hlt
push
cld
push
adc
add
jnp
scas
aas
pop
test
cmpsl
push
aad
notl
fstps
scas
pop
mov
imul
or
outsl
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
imul
or
iret
add
rclb
mov
int3
stos
subw
mov
adc
sbb
adcb
loopne
mov
mov
pop
mov
lahf
setg
or
jne
mov
orl
flds
add
mov
ret
loop
je
lret
mov
shll
ja
loope
popf
sbb
xor
cwtl
sbb
mov
les
mov
mov
jp
cmc
ja
xorb
roll
aad
iret
dec
fstpt
jle
call
cmp
sub
add
dec
fidivrs
frstor
push
mov
dec
mov
popa
nop
lds
mov
mov
adcb
subb
pop
iret
stos
pop
aad
fdivl
in
mov
aad
xchg
mov
fwait
inc
fimull
ficompl
js
jno
jecxz
jb
js
ljmp
fisttps
fstps
sub
jge
push
xor
cmp
xchg
add
sahf
jbe
scas
cmp
mov
je
insl
hlt
pop
out
mov
inc
mov
fcompl
scas
pop
test
adc
in
sbb
outsb
out
adc
cmp
inc
es
dec
rcll
sub
xor
jae
adcl
test
adc
cmp
xchg
push
lret
pop
ds
in
loopne
jb
pop
lret
lret
jne
mov
cmpsb
cmp
mov
xchg
stos
cmp
dec
or
mov
sub
in
jmp
mov
inc
mov
mov
mov
xor
lock
adc
fisubs
fcompl
test
mov
mov
insl
std
test
xor
ss
inc
and
cmp
loope
xor
adc
or
outsl
sub
pusha
or
dec
jl
adc
pop
roll
shll
or
cmp
outsl
repz
jne
push
pop
aad
sub
pop
movsb
das
mov
or
stc
imul
push
dec
fstpt
notl
mov
xchg
test
les
in
inc
shll
mov
ljmp
mov
and
add
sbb
dec
sahf
add
push
js
ljmp
rcll
lods
pop
mov
out
and
fstpl
test
in
je
jbe
add
sbb
mov
adc
add
imul
adc
and
lahf
push
test
push
in
callw
call
sbb
cmp
push
les
xchg
cld
rsm
add
add
sahf
sub
mov
inc
mov
jbe
je
out
pop
dec
fdivl
in
and
and
add
scas
aas
pop
test
cmpsl
push
in
roll
aad
loop
out
mov
ss
inc
mov
les
mov
or
jae
pop
jp
adc
xchg
mov
mov
sahf
stc
or
rclb
mov
into
test
mov
mov
xchg
pop
bound
icebp
add
fistpl
stos
mov
dec
fdivrl
daa
inc
mov
int3
inc
fidivrl
jnp
in
sbb
jnp
in
dec
in
stc
cwtl
imul
adc
jl
jne
and
mov
inc
mov
or
push
push
xor
jle
pop
leave
test
lock
mov
or
add
lock
bound
push
mov
ds
incl
dec
mov
add
add
jmp
mov
scas
lret
imul
loopne
add
add
jmp
lock
mov
jae
push
imul
jmp
int3
popf
daa
movsb
cmp
inc
add
dec
mov
add
fsts
lods
pop
cli
aad
imul
std
cmp
push
call
int3
popf
jmp
in
clc
lahf
push
mov
lods
and
outsl
xchg
lahf
call
jmp
xor
das
dec
mov
mov
std
es
xor
add
or
or
sub
pusha
or
pusha
xor
xchg
or
iret
push
call
mulb
dec
pop
enter
popa
clc
mov
sub
jmp
lea
sbb
addl
pop
jmp
mov
mov
sbb
mov
push
rcll
jae
lods
cmp
sbb
adc
sub
pusha
add
sub
hlt
xchg
or
iret
shll
popf
push
call
ljmp
cwtl
imul
add
ljmp
loopne
jmp
mov
mov
xchg
jmp
aas
movsb
cmp
dec
rorb
mov
inc
sub
xor
adc
pushf
jmp
seta
bound
stos
xchg
push
popf
pushl
mov
jmp
lea
and
xchg
test
loopne
out
adc
push
iret
cmpsl
pusha
mov
mov
jmp
add
mov
fucomp
imul
mov
mov
jmp
je
popa
add
ficompl
stos
xchg
scas
sub
int3
inc
and
test
add
jmp
andb
jmp
or
rcrl
stos
pop
andl
cmp
pop
rorl
push
repnz
cmpb
iret
add
imul
or
imul
or
iret
add
divb
clc
fsts
pop
sti
jle
and
lcall
add
add
imul
insl
fstp
push
ret
cmpsb
push
cli
xchg
add
pop
fdivrs
xor
ljmp
pop
pusha
add
imul
adc
xchg
or
iret
add
add
inc
aad
dec
in
lds
pop
imul
adc
sub
mov
or
iret
aad
shll
push
xor
push
addb
add
mov
jmp
pop
leave
pop
cmp
jle
add
arpl
xchg
mov
mov
ret
inc
fimuls
add
sbb
movzbl
add
cmp
jmp
shll
jge
jmp
dec
xlat
inc
and
xor
mov
bound
xchg
testb
mov
xchg
cmc
add
clc
jns
mov
jo
add
sbb
ficompl
add
and
cmp
jne
addl
jmp
mov
jmp
add
push
xchg
pop
bound
and
lds
inc
outsb
mov
jmp
outsl
popl
jmp
gs
jge
testl
movsl
inc
clc
jo
xorl
jae
imul
pop
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
fs
lea
jmp
mov
push
jmp
pop
jmp
xchg
sbb
insb
or
les
aas
pop
test
in
mov
dec
inc
jo
add
pop
pusha
add
xor
nop
or
iret
xchg
repz
imul
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
jo
add
add
pop
or
les
das
int
pop
pusha
or
or
xchg
or
iret
jns
js
ljmp
icebp
pop
xchg
mov
aam
shlb
cmpsb
add
nop
add
add
inc
aam
dec
out
jae
xchg
sub
pop
jns
jno
jecxz
test
rolb
add
sub
std
call
pop
cmp
sub
leave
add
adc
push
call
pop
push
xor
dec
add
push
call
inc
push
xor
pop
cltd
mov
jmp
rclb
loope
jl
jmp
adc
add
cmp
push
pushf
sti
push
xrelease
stos
addr16
push
call
xchg
gs
hlt
jno
xorb
fimull
fisubrl
aas
imul
or
iret
add
imul
jmp
push
in
add
mov
push
add
jmp
cwtl
cmc
xor
add
add
jmp
mov
shll
lods
mov
cmpsl
jnp
popa
add
adc
adc
or
or
sub
pusha
or
pusha
add
outsl
or
dec
pusha
or
pop
jo
or
add
or
outsl
or
dec
pusha
or
pusha
or
outsl
or
ljmp
pusha
or
outsl
or
or
pop
pusha
or
pusha
xor
cwtl
or
iret
inc
fs
pop
mov
jmp
cmp
mov
jmp
callw
call
fisubrl
jecxz
and
or
pusha
jmp
sub
adc
xlat
mov
xchg
dec
pop
xor
jmp
test
int
int3
stos
iretw
push
push
xor
jg
rol
mov
cmp
add
dec
mov
ret
stc
push
mov
jmp
mov
add
add
add
outsb
fmull
rcl
iret
faddl
pushl
jmp
mov
test
xchg
adc
mov
jecxz
jmp
dec
fisttpll
out
dec
rolb
rclb
and
xor
jle
outsl
xor
dec
pusha
or
or
or
or
pusha
adc
in
add
pop
in
sbb
pusha
or
or
or
pusha
or
pusha
or
pusha
or
pusha
or
notb
or
lea
in
sbb
cmp
adc
sub
mov
ret
xchg
std
or
push
aad
sub
xor
imul
push
aam
sub
adc
mov
mov
mov
mov
out
cmp
add
jo
ljmp
pop
pusha
add
imul
or
iret
add
pop
fimull
fidivl
mov
xchg
repnz
add
pusha
sub
add
add
outsl
and
add
and
fwait
or
iret
stos
jnp
je
adc
add
mov
jmp
add
mov
scas
lret
lret
inc
shlb
movzbl
jmp
cmp
jmp
mov
std
or
xor
dec
ret
xchg
arpl
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
imul
iret
loop
add
jmp
cwtl
sbb
mov
js
aas
loopne
loope
jae
out
mov
es
cli
outsl
xor
pusha
or
or
outsl
or
add
dec
pusha
add
outsl
or
pusha
add
dec
pusha
add
adc
imul
mov
cs
pop
nop
pushf
popl
jmp
pop
roll
aad
lret
arpl
xchg
shll
xchg
pushl
pushf
mull
xchg
lds
lea
jmp
fwait
pop
xchg
repnz
sbbb
call
mov
ret
popa
mov
jmp
mov
mov
mov
dec
mov
push
call
lret
push
lret
fucomi
jae
xchg
push
fisttpl
fnsave
jno
addr16
pop
xlat
jne
fisubrl
jge
notl
cmp
add
call
push
rolb
shrb
in
imul
cmp
mov
mov
out
adc
push
xor
lods
je
jmp
pop
aam
sub
jnp
in
or
or
fidivl
lcall
pusha
or
outsl
or
add
or
pusha
add
or
or
pusha
add
or
add
pusha
adc
imul
or
iret
xchg
pushf
sti
push
in
cmp
dec
outsl
sub
xor
dec
pusha
adc
pusha
xor
cltd
or
iret
jge
pusha
pop
repnz
jecxz
push
jmp
jl
jmp
bnd
mov
sub
jle
sbb
adcl
test
leave
sub
out
add
inc
xor
jmp
es
dec
mov
sbb
sub
jmp
ret
lods
pop
out
sti
imul
push
out
jp
jp
jp
push
xchg
push
sub
jmp
xor
incl
inc
add
xchg
jmp
inc
rolb
shlb
mov
xchg
push
imull
je
add
std
cmpsb
popf
jmp
test
add
add
jmp
insb
hlt
push
cld
push
lods
cmp
add
jbe
xor
ret
jmp
pushl
jmp
test
movsl
int3
aas
mov
incl
adcl
mov
xor
sub
push
out
outsb
cld
fwait
jbe
faddl
add
outsb
pop
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
inc
lret
pop
ds
ret
mov
mov
mov
mov
andb
sub
jmp
cld
movsl
mov
jmp
cmp
xor
lret
inc
xlat
mov
mov
popa
jmp
lds
jmp
test
shlb
cs
mov
in
sbb
sti
jnp
mov
cmpsb
xchg
pushf
pusha
jmp
push
push
mov
ret
and
jmp
xor
sub
insl
fcoml
mov
or
cmp
and
outsl
xor
add
add
adc
imul
lea
outsl
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
pusha
repnz
pop
repnz
mov
mov
sbb
cmp
jne
addl
mov
jmp
popa
mull
icebp
dec
movsl
xor
int
xchg
fimuls
mov
cmc
pushf
outsl
rcrb
loop
je
movsl
xor
jno
xorb
adcl
rorl
mov
add
cmp
je
jmp
and
fs
ljmp
outsl
or
out
ret
arpl
xchg
gs
pop
iret
stos
pop
loopne
rol
add
add
jmp
loopne
lock
bound
popl
lea
jmp
sbb
push
imul
and
xor
repz
call
icebp
jb
xchg
xor
push
enter
dec
mov
imul
or
outsl
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
imul
add
imul
or
iret
and
movsl
or
iret
fwait
and
pushf
xor
jae
cwtl
push
imul
mov
sub
add
call
popf
adc
xchg
and
push
je
xchg
testb
shll
fisttps
fnstenv
and
or
in
mov
pop
lret
scas
pop
in
in
in
jle
cmpsb
xor
scas
pop
mov
sahf
aad
shll
mov
push
loop
aas
push
push
call
cmp
ds
test
lahf
or
cld
xchg
cmc
add
add
rorb
mov
jp
in
add
imul
mov
jns
setns
mov
sbb
inc
stos
out
mov
mov
pop
mov
add
lcall
arpl
cmc
or
lds
inc
shll
punpckhdq
adc
adc
fistpl
outsb
pop
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
push
fstpt
and
mov
xchg
repz
test
daa
icebp
sub
add
push
xor
js
ljmp
stc
scas
addr16
gs
dec
add
xor
mov
mov
addr16
dec
mov
or
add
sahf
pop
adc
in
sbb
in
adc
outsb
jne
bound
lret
scas
pop
fcompl
aas
mov
dec
push
in
mov
add
imul
jecxz
push
in
loopne
lock
bound
ret
in
sbb
dec
fnstsw
int3
dec
fdivrs
dec
sub
push
jmp
std
test
mov
cltd
clc
or
adc
ljmp
adcl
icebp
popa
add
add
mov
push
fimull
fimull
mov
fwait
decb
add
push
rolb
mov
hlt
dec
fimuls
dec
icebp
notl
jg
jl
negb
gs
pushf
outsl
jae
xchg
jbe
jo
loop
xchg
and
mov
gs
pushf
outsl
scas
jmp
insb
mov
push
mov
addr16
pop
into
push
mov
mov
mov
clc
xor
jbe
loopne
xchg
adc
in
sbb
out
cmc
pushf
outsl
mov
push
repz
lea
mov
inc
mov
inc
push
xor
daa
mov
dec
pop
pop
and
dec
pusha
add
add
add
add
pusha
adc
in
add
pop
in
sbb
pusha
or
outsl
or
or
pusha
or
pusha
or
pusha
or
mov
or
out
jecxz
jne
cmpsb
cs
xchg
or
outsl
sub
mov
xchg
repnz
jbe
push
loope
adc
inc
imul
xor
adc
lods
inc
shll
mov
cs
or
xor
xchg
mov
dec
fimuls
inc
xor
cmp
mov
xchg
aad
dec
aam
sub
in
jg
in
jno
xorb
push
lahf
push
bnd
xorl
jle
mov
scas
in
sbb
or
lahf
punpckhdq
xchg
addr16
lahf
punpckhdq
xor
sub
pop
enter
loope
clc
lahf
push
addr16
jge
notl
cmp
stos
sub
jb
xchg
aaa
mov
addr16
ljmp
iret
add
imul
adc
mov
je
outsl
or
mov
pusha
sbb
sbb
fwait
or
sub
push
cmp
sbb
and
cli
outsb
cld
fwait
jbe
or
stos
aaa
cmpsl
ret
stc
lock
bound
aad
adc
add
jnp
push
les
cmc
pushf
outsl
ljmp
push
rolb
sarb
iret
dec
frstor
mov
xor
cmp
jg
mov
imul
xorb
adc
push
je
test
adc
xor
stos
or
iret
jne
add
sbb
inc
aad
dec
mov
cld
push
push
fisttps
flds
cli
jno
xorb
dec
ret
repz
pop
fstl
mov
cs
mov
push
mov
mov
out
inc
shlb
inc
and
js
add
icebp
data16
xchg
outsb
aam
mov
divl
je
out
dec
and
xor
movsb
xchg
adc
add
add
xor
add
pusha
xor
scas
or
iret
into
pop
lret
scas
pop
mov
sub
pusha
or
or
outsl
or
add
or
pusha
add
or
or
pusha
add
or
add
pusha
adc
imul
daa
mov
and
add
dec
scas
aaa
cmpsl
ret
mov
test
push
cltd
add
scas
sub
lds
cmp
cmpsb
and
sub
cmp
push
jg
outsb
or
das
gs
adc
sbb
inc
shlb
inc
es
arpl
xchg
gs
mov
pop
aas
lret
and
lock
and
arpl
xchg
mov
sbb
fildll
adc
loop
loopne
jb
sub
push
lds
pushf
xor
push
pop
lret
lret
imul
insl
fdivl
jnp
in
dec
faddl
mov
lea
push
xor
and
addr16
adc
adc
adc
pop
rcll
inc
sub
nop
adc
popa
icebp
nop
arpl
cld
ljmp
pop
pusha
or
imul
imul
or
iret
add
add
push
shlb
les
lret
scas
sub
cmpsb
xor
scas
pop
aad
mov
cmp
pop
or
sub
sbb
outsl
shll
xchg
les
fdivs
cmp
faddl
dec
xchg
add
cmp
cwtl
setg
or
pop
aad
test
jge
and
loopne
xor
loop
out
mov
adc
je
out
adc
add
movsl
xor
mov
jmp
xchg
pusha
out
loopne
adc
sub
data16
xchg
outsb
xchg
mov
js
popa
mov
sahf
stc
or
push
adc
xor
or
in
add
add
outsl
add
add
pusha
add
add
adc
pusha
add
add
add
add
pusha
add
adc
outsl
add
add
jo
idiv
decl
add
add
add
add
pusha
add
adc
add
adc
in
add
pop
in
sbb
or
cmp
or
imul
adc
or
adc
outsl
repz
lea
cwtl
imul
pop
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
add
add
icebp
or
adcl
test
icebp
popa
add
add
pop
cmp
xor
pop
into
test
shlb
mov
sbb
cmc
jp
jp
lret
inc
aad
dec
jl
addr16
pop
inc
inc
and
push
loopne
lret
pop
leave
test
call
add
mov
mov
and
cmc
add
fsts
cmpsb
push
in
adc
add
add
movsl
xor
xor
test
adc
xor
test
das
in
adc
xor
add
xor
cmpsb
or
iret
divl
xchg
xor
arpl
xchg
gs
mov
mov
mov
jne
push
push
test
push
fsubl
jl
notb
int3
inc
and
mov
sbb
aad
or
loop
ljmp
xchg
lret
adc
xchg
and
mov
push
xor
push
std
imul
insl
cmp
test
pop
ds
es
test
xchg
repz
jmp
sub
std
test
jle
insl
hlt
pop
loopne
out
adc
adc
lock
and
mov
lods
mov
mov
gs
pushf
outsl
popl
out
jo
outsl
or
hlt
jb
xchg
cmc
add
xchg
sahf
stc
or
adc
jne
outsb
or
pop
adcl
loop
test
fdivs
xchg
imul
or
iret
ja
jne
out
pop
mov
sbb
fnstcw
repnz
fs
std
outsl
sub
xor
dec
pusha
adc
pusha
xor
lods
or
iret
in
inc
cmp
pusha
imul
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
das
mov
movsl
xor
outsb
cld
fwait
jbe
and
sub
insb
or
in
mov
ljmp
stc
xorb
pop
stos
xor
inc
les
int3
and
movsl
xor
mov
inc
mov
aas
mov
sti
jl
jne
push
leave
push
ret
cmpsb
push
cmpsb
cli
jge
je
insl
mov
lods
mov
mov
xchg
add
jae
mov
xchg
jb
mov
push
adcb
andb
mulb
sub
rol
dec
ret
repz
or
insb
or
scas
clc
push
mov
cltd
inc
aad
sub
outsl
std
push
lahf
push
jge
jg
jmp
push
cmpsl
add
aam
mov
jb
js
ljmp
pop
and
filds
mov
test
pusha
sub
add
add
outsl
and
or
and
lods
or
iret
add
adc
mov
inc
fidivrl
dec
sub
bsr
push
or
outsl
xor
outsl
sub
outsl
add
sbb
sbb
outsl
adc
imul
adc
add
add
dec
sub
adc
lods
cmp
movsb
cmp
pop
test
mov
and
jecxz
stc
cwtl
imul
outsl
loop
loop
je
hlt
jns
mov
pop
xchg
add
push
inc
roll
aad
mulb
dec
setl
push
movsb
or
inc
decb
cltd
or
xor
negl
mov
addr16
notl
push
int3
inc
and
pop
cmp
sub
icebp
add
dec
mov
stos
jg
jbe
loopne
push
pushf
xor
insl
dec
int
and
cmp
xchg
jge
sbb
add
fisttps
fnstenv
mov
add
outsb
cld
fwait
jbe
cmp
xchg
xchg
icebp
add
xchg
xchg
lock
mov
lods
inc
int
and
es
insb
adc
inc
mov
lods
mov
mov
adcb
andb
mul
lds
cmp
or
or
cld
ljmp
pop
pusha
or
and
cmpsb
or
iret
push
fimuls
xor
inc
fidivrl
xor
jmp
push
in
pop
jecxz
out
jo
push
mov
xchg
daa
imul
psubd
mov
dec
mov
add
cmp
sbb
inc
aad
dec
ljmp
test
and
cli
popa
icebp
nop
arpl
cs
sub
jecxz
pop
lret
scas
pop
mov
inc
shlb
mov
sbb
pop
xchg
pop
bound
in
ret
insb
mov
adc
adc
push
popa
nop
gs
lock
bound
das
fdivp
jle
mov
push
cmc
pop
imul
pop
loop
scas
and
dec
frstor
cwtl
imul
push
pop
into
pop
cmp
pusha
mov
mov
and
mov
popf
or
in
mov
fildll
cli
push
popf
or
cmp
mov
arpl
xchg
gs
mov
mov
outsb
lock
ja
sbb
push
shll
mov
lods
lret
inc
scas
pusha
out
adc
or
jle
outsl
or
rcr
pop
enter
adc
pop
bound
xchg
fs
mov
test
out
adc
or
notl
push
fimull
fidivrl
dec
fnstcw
out
mov
add
inc
rolb
shlb
cwtl
jge
pop
imul
iret
pusha
icebp
popa
add
pop
cmc
imul
insl
fidivl
imul
or
iret
add
imul
adc
and
test
mul
jo
xorl
stos
mov
sub
adc
pop
adc
xor
mov
xchg
add
sahf
sub
je
lea
pop
int
cmpsb
insl
mulb
sbb
je
lea
mov
jns
pusha
scas
xor
xchg
mov
loopne
adc
sub
scas
add
sbb
fs
jns
rcll
aas
sbb
or
dec
xor
out
push
lahf
push
out
loop
je
out
imul
insl
mov
icebp
jmp
lock
bound
lret
outsb
pop
fisttpl
fisttpll
or
push
jno
inc
jg
pusha
pop
repnz
pop
mov
jle
cmp
sahf
aaa
cmpsb
xor
scas
pop
das
mov
pop
into
pop
cmp
fs
add
pop
roll
aad
push
movsb
arpl
outsl
or
les
inc
and
xor
mov
mov
mov
int
and
push
add
mov
inc
mov
dec
roll
aad
and
or
iret
add
imul
mov
adc
add
xchg
int
adc
xor
add
or
or
add
add
add
pusha
add
or
jo
or
add
add
add
add
add
pusha
add
adc
outsl
add
add
jo
idiv
decl
add
add
add
add
pusha
add
adc
add
adc
in
add
pop
in
sbb
or
cmp
or
imul
adc
or
and
cmp
inc
in
insb
loop
je
dec
roll
aad
jno
fs
sub
pop
leave
test
lods
sbb
repnz
pop
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
add
add
dec
fnstcw
int3
stos
cbtw
sbb
aam
mov
add
sbb
pop
into
test
push
cld
push
push
sahf
or
cmpsb
inc
in
loop
je
xchg
sbb
pop
int3
stos
data16
mov
dec
mov
add
xor
sti
jo
xorl
sub
aas
shrl
test
adc
xor
mov
adc
cmp
into
inc
mov
out
mov
lods
daa
mov
and
scas
and
lea
inc
fidivrl
sbb
xchg
daa
mov
mov
dec
pusha
add
add
add
add
pusha
adc
in
add
pop
in
sbb
pusha
add
outsl
add
add
pusha
add
pusha
add
pusha
add
mov
adc
add
cmp
cmp
sbb
ja
xorb
adcl
cli
push
loope
adc
and
stc
notl
jns
jbe
loopne
sub
pop
rclb
inc
cmp
fistps
mov
insb
or
out
jae
pusha
pop
repnz
fcompl
scas
pop
movsb
rolb
dec
lcall
hlt
ja
xorb
sbb
aad
xlat
int3
inc
aad
dec
scas
add
popl
xchg
repz
std
cld
jb
xchg
or
jb
xchg
das
mov
jbe
jp
in
pop
pop
test
jge
and
jns
sbb
rolb
mov
cld
les
mov
ds
test
add
pop
bound
sbb
jo
ljmp
pop
pusha
add
and
lcall
adc
add
add
fsubr
ja
xorb
sbb
dec
ret
mov
lock
and
jp
jp
mov
sarb
lds
dec
test
sub
addl
sbb
push
imul
add
in
jge
notl
inc
enter
sub
cmp
or
in
mov
popf
or
outsl
lcall
push
jno
daa
js
js
ljmp
adc
jo
jno
jecxz
fimuls
mov
shlb
stos
int
mov
nop
push
popa
nop
cmp
jo
inc
rcrb
in
add
or
outsl
and
or
mov
stc
imul
xor
test
aam
enter
xor
pusha
or
outsl
or
add
or
pusha
add
or
or
pusha
add
or
add
pusha
adc
imul
or
iret
imul
pop
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
lcall
mov
nop
push
pushf
sti
push
xchg
push
int3
inc
and
sub
jae
fmuls
fdivs
add
int3
push
ret
cmpsb
push
mov
int
and
sub
lret
cmp
pop
and
ss
sub
popf
sbb
dec
fnstcw
movsl
int3
aas
lcall
push
fisttps
fldenv
jno
add
add
sahf
sub
ja
loope
or
adc
inc
rolb
shlb
das
mov
add
std
or
aaa
mov
sbb
mov
movsl
cmpsb
xor
scas
inc
add
xor
dec
cmpsl
aas
scas
lret
mov
mov
test
pop
test
cmpsl
and
lcall
adcl
test
xchg
pop
add
xchg
in
adc
xor
or
xor
mov
adc
sub
push
mov
in
aam
mov
ss
mov
clc
or
mov
shlb
mov
sbb
test
in
out
iret
pop
cmp
jo
and
sub
icebp
popa
add
push
test
test
cmp
dec
mov
mov
sbb
leave
jle
fldt
scas
cmp
mov
jnp
jge
testl
ficompl
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
imul
iret
add
add
xchg
icebp
add
or
hlt
data16
xchg
outsb
fcoms
adcb
subb
sub
mov
xor
xor
adc
pop
lret
scas
pop
repnz
mov
add
ss
or
mov
inc
mov
pop
scas
inc
in
je
lea
stc
add
add
jo
xorl
jns
mov
rol
pop
int3
stos
data16
mov
inc
xlat
mov
enter
jl
inc
dec
int
and
cmp
std
adc
jp
in
or
xchg
mov
pop
lret
scas
pop
mov
adc
add
in
add
add
add
xor
add
in
add
or
add
outsl
add
add
pop
jo
or
add
add
outsl
add
dec
pusha
add
pusha
add
outsl
add
ljmp
pusha
add
outsl
add
add
pop
pusha
add
pusha
add
add
pop
in
sbb
pusha
or
outsl
or
or
pusha
or
pusha
or
pusha
or
mov
or
xchg
adc
jg
mov
das
stos
cmp
pop
inc
iret
pop
cmp
xor
adc
xor
add
in
add
or
outsl
or
or
pusha
or
or
adc
pusha
or
or
or
or
pusha
or
adc
outsl
or
or
jo
idiv
decl
or
or
or
or
pusha
or
adc
or
adc
in
add
pop
in
sbb
or
cmp
or
imul
or
pop
pusha
add
sti
jno
xorb
data16
xchg
outsb
popf
stos
sub
jns
mov
in
pusha
notb
imul
cld
fwait
jbe
dec
fimull
fidivl
sti
imul
dec
mulb
pushf
outsl
les
jg
jmp
mov
dec
sub
outsl
pusha
sti
imul
pop
pop
lds
iret
push
rcrb
pop
mov
pop
mov
sbb
roll
aad
test
movsl
int3
aas
mov
pop
aam
sub
lds
gs
push
in
add
sarl
cmc
add
inc
ret
ret
mov
js
jl
jnp
mov
or
pop
sbb
sub
adc
xor
or
imul
adc
sbb
mov
shl
push
add
aas
mov
inc
mov
mov
cli
jne
mov
dec
fisttpll
out
cmp
cmp
xchg
add
sahf
das
adc
and
mov
in
jp
jp
pop
int3
inc
and
frstor
mov
xchg
pop
leave
test
mov
mov
imulb
test
insb
repnz
pop
bnd
inc
mov
lods
sub
stc
jp
jp
in
cli
popf
insb
test
pop
repnz
sbbl
pop
lahf
sbb
in
sbb
jle
call
out
sbb
arpl
testb
dec
mov
dec
out
loope
cld
fwait
jbe
loope
jecxz
jne
int3
mul
imul
adc
xor
mov
inc
aam
dec
jmp
loop
push
rclb
imul
sbb
inc
shll
pop
aas
lret
scas
aas
pop
test
mov
pop
jb
sub
ret
push
lds
dec
xlat
inc
and
cmp
adc
gs
pushf
outsl
test
push
xor
dec
cltd
push
xchg
repz
mov
cmp
pop
aaa
imul
or
iret
test
mov
dec
fidivrs
mov
nop
push
popa
nop
jne
push
lahf
push
ficomps
stos
pop
mov
rolb
shlb
push
imul
mov
fisubs
test
pop
test
push
sbb
scas
aas
pop
test
sahf
insl
mov
lods
imul
and
arpl
xchg
gs
sti
imul
push
scas
lods
lret
inc
mull
xchg
mov
mov
xor
pop
xchg
adc
pop
stc
mov
in
sbb
xor
cmp
add
mov
dec
mov
lds
sbb
or
xor
xchg
push
test
push
testb
jb
popa
add
adc
mov
inc
mov
aaa
mov
inc
mov
cmpsb
and
jmp
mov
xchg
repnz
leave
inc
shlb
mov
sbb
rorb
dec
movsb
mov
mov
imul
adc
add
imul
or
iret
addr16
jg
jmp
lds
insb
loopne
adc
and
pop
xchg
or
xchg
or
xor
mov
mov
mov
test
jge
and
loop
cmpsl
xor
fimuls
and
repnz
cwtl
push
imul
adcl
test
les
int3
dec
lcall
pop
xchg
adc
jl
xchg
cmc
add
sub
adc
jle
mov
sahf
insl
sahf
cmp
push
lds
push
pushf
xor
push
xor
sub
jecxz
push
in
jmp
and
mov
jmp
fimuls
and
adc
in
sbb
insb
insb
or
mov
insb
or
scas
push
xchg
add
sahf
das
popa
lock
pop
or
das
mov
xor
jae
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
add
sub
push
lret
sti
or
pop
jmp
out
jo
out
in
je
outsl
mov
mov
xchg
or
sbb
mov
mov
repnz
ds
jo
addr16
sbb
lahf
punpckhdq
popf
insb
mov
mov
xchg
adc
sbb
add
sahf
insl
pop
pushf
xor
inc
push
jecxz
push
in
mov
imul
loopne
adc
adc
xchg
cmc
add
ficoms
mov
pop
cmp
pop
cmp
jo
xchg
add
and
pop
lods
jb
push
stc
pusha
aam
adc
xor
or
sub
lret
iret
jge
arpl
cmc
inc
std
insb
loop
je
out
and
adc
sub
or
add
outsl
or
or
pusha
or
add
adc
pusha
or
or
or
or
pusha
or
adc
outsl
or
or
jo
idiv
decl
or
or
or
or
pusha
or
adc
or
adc
jo
add
add
mov
cmp
lock
add
add
lret
or
iret
es
inc
mov
jge
js
ljmp
sbb
lcall
push
roll
aad
repnz
lahf
push
dec
roll
sarl
mov
mov
fistpl
push
les
mov
in
bound
test
cmp
loope
cmc
pushf
outsl
xchg
xor
or
cwtl
and
xchg
add
sahf
insl
ds
jne
xchg
testb
cmpl
repz
jne
push
pop
cltd
or
pop
nop
and
mov
aad
aam
dec
out
mov
cmp
sub
adc
sub
pusha
add
in
add
add
outsl
or
or
pusha
or
add
adc
pusha
or
or
or
or
pusha
or
adc
outsl
or
or
jo
idiv
decl
or
or
or
or
pusha
or
adc
or
adc
in
add
pop
in
sbb
or
cmp
or
imul
adc
add
adc
cmp
pop
roll
aad
lret
pop
int
rclb
lock
movsl
pusha
dec
aad
sub
aas
outsb
mulb
adc
adcl
xchg
pop
bound
sbb
jo
push
mov
es
lea
pushf
sti
push
cmpsl
and
dec
jb
nop
push
imul
mov
inc
mov
dec
iret
pop
cmp
sub
fs
sub
mov
or
pop
roll
shll
fists
pop
mov
verw
les
adc
add
imul
jge
or
iret
mov
orb
cli
or
out
adcb
imul
adc
xor
rorb
iret
push
fdivl
in
dec
rclb
adc
enter
or
dec
fidivrs
add
inc
and
and
or
adcb
subb
lea
pop
leave
test
lock
jmp
in
mov
xor
or
mov
jns
push
int
and
aas
jbe
jge
negl
into
dec
push
lret
lret
xchg
add
pop
hlt
jne
mov
addb
icebp
add
dec
int3
inc
and
adc
jg
rolb
rolb
adc
push
popa
nop
gs
imul
or
in
out
push
les
inc
sub
cmp
mov
js
jp
aaa
cmpsl
ret
sbb
inc
fstps
scas
pop
cltd
pop
lcall
sbb
cmp
pop
leave
test
lock
imul
dec
cltd
or
jp
jp
jns
jl
negb
mov
jmp
imul
adc
repnz
xchg
outsb
flds
fwait
or
cmp
in
add
add
add
xor
add
pusha
sub
and
add
imul
adc
mov
pusha
add
add
rorl
iret
push
xor
leave
dec
roll
sarl
or
ljmp
stc
xorb
add
jb
push
pushf
sti
push
jl
jne
insb
sub
push
inc
and
cmp
mov
cli
adcl
test
sub
dec
cmp
push
lds
orb
decl
stc
es
inc
mov
lods
sub
test
pop
test
pop
rolb
shlb
add
jne
mov
mov
scas
leave
cmp
cmc
inc
loop
out
jno
jg
jge
testl
sub
sbb
rcrl
pop
in
push
adcl
fimull
ficompl
popf
push
xchg
repz
in
dec
aam
sub
add
and
and
adc
xchg
outsl
xor
ljmp
pop
pusha
add
and
mov
int3
or
iret
add
add
cwtl
popf
outsl
xor
dec
pusha
add
add
add
add
pusha
adc
in
add
pop
in
sbb
pusha
add
add
add
pusha
add
pusha
add
pusha
add
pusha
add
push
ret
or
pop
pusha
add
push
rolb
sarb
out
hlt
xchg
outsb
xchg
pop
cmp
xor
addr16
fimull
fimull
pop
call
movsl
dec
daa
mov
inc
mov
scas
sub
mov
inc
mov
loope
cltd
push
push
scas
or
adc
push
int
xlat
mov
lea
mov
pop
iret
stos
pop
rcll
pop
ds
cmc
imul
insl
ficoml
pop
sub
sub
adc
hlt
sub
das
dec
mov
pusha
xchg
push
inc
fisttps
flds
lea
sbb
sbb
mov
inc
mov
xchg
std
or
pop
fdivl
in
mov
shrl
lods
sub
fisttpl
fisttpll
insb
loop
je
repz
cmpl
out
jg
jmp
and
sarb
dec
ja
mov
pop
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
popf
adc
mov
gs
inc
ss
mov
and
mov
mov
and
out
pop
test
in
sbb
data16
inc
aad
shlb
mov
and
fistpll
scas
aas
pop
test
cmpl
scas
aas
pop
test
decb
add
or
iret
add
imul
or
iret
add
lea
and
xchg
insb
out
jl
idivb
out
jae
xchg
push
inc
and
ss
ret
mov
xchg
add
mov
xchg
inc
jmp
std
test
insl
call
inc
lret
lret
and
jo
xorl
out
mov
xchg
repz
jne
push
jp
fs
cmp
ret
ret
adcb
xorb
mov
pop
int3
inc
and
dec
fnsave
inc
mov
out
cmp
pop
pusha
add
xor
rorl
iret
inc
aam
sub
add
cmp
push
xor
jns
mov
mov
xchg
adc
adc
pushf
add
std
or
cmp
inc
imulb
cltd
push
xchg
popa
call
daa
in
sub
fistpl
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
imul
adc
push
mov
outsl
xor
pusha
add
outsl
add
add
pusha
or
dec
pusha
or
outsl
add
or
dec
pusha
or
adc
imul
or
iret
sub
mov
cmpsl
ret
out
cmc
pushf
outsl
mov
pop
into
test
sahf
stc
or
inc
ret
ret
cld
xchg
cmc
add
lahf
sbb
adcb
andb
sbb
cmp
mov
inc
enter
sbb
inc
mov
cmpb
pop
leave
pop
cmp
jg
adcl
test
dec
fimull
fisubrl
push
pushf
sti
push
mov
mov
mov
aaa
mov
jae
je
out
dec
pop
les
int3
bswap
push
mov
sbb
arpl
out
and
push
shll
push
outsb
pop
ds
out
outsb
cld
fwait
jbe
inc
lret
pop
ds
lods
sub
pushf
xor
push
sbb
loopne
adc
adc
insb
or
in
repz
cmc
pop
jbe
outsb
arpl
cmpsb
imul
pop
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
adc
aam
leave
test
lea
mov
dec
mov
in
pop
mov
adc
jl
and
out
adc
pop
and
adc
loope
mov
mov
and
clc
dec
dec
fisttpll
out
imulb
je
pop
rclb
and
mov
push
popf
or
inc
aad
dec
lret
mov
mov
fisubs
xchg
mov
call
xor
leave
dec
frstor
shll
ret
inc
aad
dec
mov
jl
sbb
jmp
notb
imul
inc
and
out
jno
rorl
push
sbbb
lock
xor
add
add
adc
imul
add
push
mov
ret
std
sub
jo
leave
pop
cmp
outsb
xlat
push
ret
cmpsb
push
nop
add
int3
push
lret
mov
mov
pop
into
test
outsl
or
subb
add
cmp
setg
or
push
xchg
mov
xchg
add
jbe
xor
int
ret
enter
out
lock
bound
hlt
sbb
jl
jne
ja
xchg
pop
bound
dec
mov
cli
or
je
push
repnz
pop
repnz
adcl
test
pop
int3
stos
rol
lds
lds
or
lret
add
mov
jecxz
in
jg
sbb
pop
jp
xor
les
xchg
addr16
jno
xorb
pushf
xor
dec
mov
mov
ljmp
incl
add
add
add
jmp
add
jns
gs
pop
test
imul
pop
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
or
int3
popf
fcmovu
push
jmp
mov
adc
popa
mov
ret
enter
add
add
jmp
movsl
das
mov
sub
jmp
addb
add
movzbl
jmp
shl
int3
popf
insb
jb
jmp
lcall
jmp
inc
or
andb
sub
jo
mov
jmp
adc
call
jmp
mov
addl
cmp
jne
jmp
add
shrb
adc
add
jmp
out
ret
das
xor
or
sub
add
add
jmp
inc
xlat
inc
and
jbe
movsl
jecxz
pusha
jmp
setge
cmp
jmp
int3
popf
js
jle
or
add
and
mov
lods
or
add
add
jmp
mov
add
sub
add
out
jg
mov
cmp
jmp
int3
popf
jns
jge
cli
sbb
add
dec
fnstcw
adc
push
call
test
call
jmp
call
xor
movsl
push
or
mov
pop
call
jmp
xchg
add
shll
add
add
jmp
int3
popf
sbb
add
add
clc
outsb
or
cmp
je
popa
mov
jmp
mov
mov
sbb
mov
push
or
call
int3
popf
cmpsb
es
lods
jmp
cmpsb
xor
scas
inc
push
test
push
imulb
ret
jmp
pop
call
jmp
pop
push
xor
dec
push
and
pop
sub
add
xchg
popf
pushl
jmp
push
pop
jp
adc
push
cmp
add
lods
pop
arpl
push
call
aaa
mov
dec
mov
es
cmp
inc
outsb
std
imul
jmp
ds
pop
iret
pop
cmp
gs
push
mov
add
and
dec
gs
jmp
sub
jmp
push
xlat
inc
and
or
insl
std
test
gs
adc
or
loopne
push
call
out
dec
add
jmp
popf
jmp
xchg
dec
dec
mov
jmp
sub
xor
scas
pop
je
insl
hlt
pop
out
in
sbb
jmp
pushf
jmp
inc
add
add
add
jmp
cmpsl
arpl
inc
out
data16
xchg
outsb
popf
cmp
ja
xorb
xchg
add
sahf
pop
push
mov
xchg
jmp
mov
fsts
pop
sti
cs
cmp
mov
test
subl
sbb
cld
cli
imul
mov
xchg
and
inc
shll
lods
lret
inc
icebp
sub
inc
or
andb
jmp
mov
mov
xchg
mov
jbe
cmpl
aas
scas
lret
mov
sub
jmp
push
iret
pop
cmp
aas
fiaddl
dec
lret
lahf
add
sub
adc
pop
adc
xor
add
add
rorl
les
leave
ds
pop
pusha
add
pusha
add
add
or
iret
sbb
popa
mov
ret
add
imul
add
jle
mov
inc
mov
jmp
mov
jmp
push
mov
jmp
int
fnstcw
mov
sbb
mov
fnstcw
mov
pushf
cmp
jmp
mov
shll
lahf
cli
or
mov
movzbl
jmp
mov
aad
xchg
add
rcll
cmpsw
aaa
push
mov
jo
mov
and
jmp
jg
popa
add
xor
add
inc
jmp
ficoml
lods
pop
cli
mov
decb
test
jmp
in
jle
mov
mov
dec
jecxz
push
in
xchg
inc
xor
or
iret
jne
sti
std
fucomi
adc
xor
or
pusha
xor
loopne
adc
test
in
imul
or
outsl
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
imul
or
iret
add
add
sbb
pushw
test
leave
pop
cmp
dec
mov
mov
mov
inc
mov
jo
imul
imul
stos
pop
fisttpll
out
push
aam
sub
ret
mov
mov
loopne
clc
lahf
push
test
sarb
or
sbb
outsb
cld
fwait
jbe
fcoml
cmpsl
push
cmc
mov
scas
leave
cmp
loope
jecxz
jne
push
jne
out
dec
jmp
iret
fisttpl
mov
jb
in
push
scas
rolb
mov
cld
push
lods
push
les
int3
jnp
jg
mov
stc
popa
icebp
nop
arpl
push
cld
loopne
out
mov
sub
sub
push
js
je
out
imul
out
adc
xor
add
add
add
or
or
or
pusha
or
add
jo
or
add
or
or
or
or
pusha
or
adc
outsl
or
or
jo
idiv
decl
or
or
or
or
pusha
or
adc
or
adc
in
add
pop
in
sbb
or
cmp
or
imul
or
pop
pusha
or
cmp
jmp
pop
xchg
mov
test
lods
lret
inc
hlt
xlat
insl
ljmp
or
iret
sbb
movsl
cli
in
jmp
mov
pop
adc
xchg
add
add
push
shlb
inc
mov
xchg
mov
and
lea
jmp
arpl
outsb
or
sbb
shlb
fnsave
scas
bound
add
jmp
add
inc
rcll
or
inc
and
cmp
test
rolb
add
jmp
sahf
push
mov
es
or
xor
jmp
mov
mov
lods
push
dec
iret
pop
cmp
add
ret
dec
movsb
mov
js
add
js
add
dec
sbb
jo
fimull
fisubrl
cmpsl
sub
lds
daa
aas
pushf
push
testl
mov
jmp
sbb
or
js
pop
leave
test
stos
orl
imul
or
iret
cmp
jne
call
test
jmp
outsb
out
adc
cmp
sub
sbb
add
mov
lods
lret
inc
loope
pop
xchg
repnz
inc
out
pop
xchg
add
hlt
mov
jmp
mov
sbb
fistpll
mov
sbb
push
shlb
pusha
outsb
pop
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
add
add
popa
nop
jp
jl
jne
insb
rorb
mov
jae
in
mov
jmp
xchg
ja
add
sbb
add
roll
dec
cltd
or
pop
fimuls
push
aad
int
addr16
inc
roll
aad
mov
std
or
sti
jb
xchg
jge
popa
add
push
shlb
xchg
gs
mov
dec
mov
jo
and
repz
add
mov
sbb
or
jns
ja
loope
enter
jmp
lret
mov
sbb
jle
jmp
xchg
or
xchg
or
int
and
push
dec
int
and
sbb
push
adc
test
call
jmp
in
mov
idiv
ljmp
cmc
gs
adc
ljmp
jmp
bnd
mov
and
push
roll
sarl
inc
roll
aad
rolb
adc
rolb
std
push
mov
mov
stc
imul
sub
add
add
jmp
mov
lods
mov
mov
adc
and
mov
or
iret
add
imul
or
iret
add
cmp
sbb
cmp
xor
das
dec
mov
inc
mov
add
mov
jmp
leave
inc
cmc
imul
and
jmp
sub
into
pop
int3
stos
data16
enter
pop
into
aaa
cmpsl
aaa
push
mov
sti
decl
dec
das
fidivl
stos
cmp
sbb
ret
push
lds
mov
sbb
adc
into
les
les
popf
pushl
jmp
outsl
hlt
push
cld
push
insl
sti
imul
adc
push
add
push
and
int
mov
jmp
andb
jmp
aam
fnstcw
add
inc
xlat
mov
cmpsl
cmc
ffree
jmp
sbb
xor
dec
and
scas
sub
cld
xchg
cmc
add
xor
filds
add
or
push
jns
jge
cmp
jo
jmp
jmp
cld
fwait
jbe
inc
into
pop
cmp
and
ret
and
mov
jne
imul
or
iret
add
imul
or
iret
jno
inc
cmp
rorl
adc
xor
fldlg2
jge
mov
sub
movsl
inc
sub
xchg
lahf
cli
or
ljmp
ret
jmp
fstps
scas
pop
cltd
aaa
mov
sbb
add
adc
and
inc
mov
notb
cmpsl
or
adc
imul
add
mov
daa
and
add
jmp
pop
int3
inc
and
test
pop
scas
xor
clc
out
adc
roll
add
int
jge
je
xor
lods
movsb
ret
ds
dec
xchg
in
push
mov
ret
cmp
xor
sbb
jae
js
ljmp
and
jmp
test
mov
sbb
jmp
jmp
mov
out
fimuls
push
mov
stos
into
cmp
jno
gs
outsl
xor
ljmp
pop
pusha
add
and
add
add
mov
adc
jo
mov
xchg
pop
pusha
or
pusha
or
sub
or
imul
or
iret
add
sub
and
jnp
mov
jmp
mov
popl
jmp
rcll
pop
mov
push
xor
cmp
fidivrl
outsb
out
and
int3
popf
or
test
cltd
clc
or
mov
test
je
lea
xor
jno
jno
shlb
jg
sbb
pop
decl
addb
add
push
jmp
pop
jmp
fists
mov
xlat
mov
cld
ja
xorb
mov
jecxz
pop
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
cmpl
jmp
xchg
pop
xchg
repnz
mov
mov
mov
sbb
add
xor
jmp
cmp
mov
ret
jmp
roll
mov
jmp
jbe
cmpl
pop
xchg
repnz
sbb
xor
jns
bound
cltd
clc
or
int3
push
lds
rorb
adc
test
into
call
jmp
xor
adc
mov
add
pop
jecxz
mov
add
dec
aad
sub
aaa
daa
mov
pop
lret
pop
ds
xchg
dec
jo
xor
dec
pusha
add
outsl
add
dec
pusha
adc
in
add
pop
in
sbb
pusha
or
or
or
pusha
or
pusha
or
pusha
or
pusha
or
add
or
pop
pusha
or
mov
in
sbb
sub
or
fs
jmp
cmp
mov
cltd
clc
or
loopne
notb
loopne
jb
stos
test
je
push
call
jmp
aaa
pop
das
push
mov
jmp
xor
dec
jo
gs
sub
pushf
pop
testl
jmp
or
pop
jmp
outsb
cld
fwait
jbe
jb
outsl
or
in
sahf
or
cmpsb
inc
jo
outsl
or
hlt
or
adc
xor
or
pusha
xor
add
add
or
adc
jo
sbb
pop
pusha
or
or
aam
adc
add
negb
add
add
jmp
adcb
ljmp
shlb
testl
lcall
sub
add
xchg
popf
pushl
jmp
mov
cmp
arpl
xchg
gs
movsb
ret
ds
mov
pushf
roll
mov
jmp
and
cmpsb
xor
scas
sbb
dec
sub
jg
and
dec
adc
rorl
add
push
pop
pushf
xor
inc
push
leave
pop
cmp
and
xchg
mov
jmp
andb
jmp
icebp
push
or
pop
lds
iret
dec
int3
jno
inc
jne
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
addb
adc
jmp
popl
jmp
xchg
adc
lcall
aas
pop
test
hlt
xchg
popa
mov
jmp
ss
lea
jmp
fidivs
jmp
pop
jmp
js
outsl
or
loop
xchg
add
insb
jbe
addr16
sub
call
mov
add
cmp
je
jmp
sbb
pop
negl
xor
add
inc
mov
jmp
repz
mov
dec
lds
iret
das
push
leave
mov
cmpsl
daa
push
jmp
xchg
sbb
aad
rolb
add
leave
out
gs
pushf
outsl
sahf
or
es
aas
pop
test
arpl
add
ret
jne
addl
mov
jmp
cmp
jmp
cmp
jmp
inc
lret
lret
push
xchg
repz
mov
insb
lds
jmp
pop
int3
inc
and
shr
add
add
push
pop
jmp
sahf
or
add
sub
adc
dec
sub
jmp
movsl
push
flds
jmp
imul
or
mov
es
jb
xchg
push
leave
pop
cmp
and
rcr
popa
mov
ret
jne
jmp
sub
sub
push
jbe
jle
call
test
mov
and
outsb
push
mov
jmp
lea
jmp
lret
mov
xor
dec
inc
ret
ret
mov
cmp
add
mov
jmp
movsb
and
dec
fidivrs
add
cld
jmp
aas
mov
fistl
mov
mov
adc
imul
adc
xor
rorl
adc
sub
mov
iret
mov
jmp
in
popa
icebp
nop
arpl
mov
xchg
repnz
pop
rolb
rclb
repz
sbb
or
sbb
gs
decl
lea
call
jmp
sub
pop
enter
jle
jle
mov
mov
ret
in
mov
js
and
inc
shll
dec
add
fisttps
mov
fdivrs
in
jg
jo
js
ljmp
test
adc
in
in
and
aam
pop
jmp
adc
inc
fisttpll
out
les
jp
cld
jmp
test
jmp
adc
jl
lock
ja
das
mov
push
mov
push
jmp
mov
in
frstor
lea
jmp
addr16
sbb
ljmp
pop
test
lcall
pop
cld
jmp
imul
push
cmc
or
in
div
out
loop
add
mov
call
movl
mov
jmp
mov
cmpsl
ret
xchg
nop
testl
gs
jmp
mov
dec
sub
add
jmp
std
jne
mov
lds
mov
adc
push
shlb
je
jmp
decl
jmp
or
inc
leave
pop
cmp
sbb
push
arpl
xchg
les
decl
xor
jmp
lods
lods
lret
inc
lock
push
sti
dec
jecxz
push
in
sub
push
lds
mov
jmp
es
inc
mov
jb
jnp
in
inc
int3
pop
into
test
stc
mov
mov
mov
inc
test
jmp
mov
sbb
dec
sub
add
dec
cld
jmp
das
push
jmp
aaa
mov
mov
xchg
adc
into
pop
lret
scas
pop
mov
insl
orl
fimull
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
imul
adc
add
cld
push
push
jmp
outsl
mulb
push
jmp
cli
filds
mov
pop
jecxz
push
in
mov
mov
jmp
call
jmp
test
xchg
repz
out
pop
xchg
repnz
inc
lret
pop
ds
and
mov
push
add
lock
lea
push
push
lea
push
jmp
roll
dec
mov
or
cmpsl
pop
adc
adc
push
shll
add
add
movsb
cmp
inc
cli
push
jmp
dec
ret
cmpsl
orb
cli
or
pushf
adc
in
sbb
nop
pop
dec
pop
push
push
push
push
push
mov
push
mov
jmp
insl
loope
adc
inc
mov
xchg
jmp
jmp
or
sbb
outsb
cld
fwait
jbe
mov
lods
mov
xchg
jo
loop
xor
pop
inc
pop
jmp
outsl
cld
xchg
cmc
add
out
jp
add
test
adcb
subb
or
and
call
xor
jmp
mov
push
cld
decl
sahf
or
cmpsb
adc
js
jmp
push
xchg
or
pop
rcrb
pop
mov
xor
push
test
or
leave
jne
lea
call
jmp
mov
jmp
or
mov
jmp
movsb
cmp
xchg
add
rclb
or
jbe
loopne
mov
stc
imul
mov
add
mov
jmp
sub
push
pop
inc
rclb
pop
mov
mov
xor
add
add
jmp
test
mov
pop
leave
test
stos
push
and
arpl
outsb
cld
fwait
jbe
cmp
movsl
xor
ja
xorb
pusha
andb
sub
jo
mov
jmp
dec
rclb
adc
pop
repnz
cmpsb
pusha
repz
cmc
push
add
out
add
sub
mov
cmp
cld
fwait
jbe
push
push
xor
jg
xor
out
sar
inc
adc
jb
jp
in
pop
push
push
xor
data16
mov
cmp
jmp
fisttpll
mov
mov
mov
and
das
mov
dec
mov
sub
add
xchg
popf
pushl
jmp
data16
insl
hlt
pop
in
pop
dec
gs
jmp
jmp
jmp
jge
insb
icebp
popa
add
jbe
sbb
mov
scas
sub
clc
lret
sbb
jmp
icebp
mov
rolb
add
jmp
jmp
mov
popl
jmp
push
les
and
push
dec
into
pop
cmp
sub
add
jmp
xchg
imul
jmp
push
arpl
cmc
and
jns
mov
jno
push
cld
adc
cmpsl
aaa
push
mov
test
cmpl
add
movzbl
jmp
mov
nop
testl
push
mov
pop
jmp
pop
xchg
add
sahf
insl
add
stc
jbe
cmpl
mov
movq
sbb
add
jns
cld
mov
lcall
cs
push
lds
push
call
sbb
into
pop
int
addr16
xor
xor
adc
test
jge
and
sbb
jecxz
lcall
add
call
push
push
xor
js
outsb
cld
fwait
jbe
sub
and
mov
add
rolb
xchg
push
jmp
adc
imulb
fwait
jbe
xchg
movsb
cmp
cmp
add
or
or
and
or
in
add
add
outsl
add
add
pusha
add
add
adc
pusha
add
add
add
add
pusha
add
adc
outsl
add
add
jo
idiv
decl
add
add
add
add
pusha
add
adc
add
adc
imul
adc
sbbl
push
mov
gs
pop
dec
les
jmp
repnz
iret
add
add
sub
xor
mov
lods
pop
fisubl
jbe
loopne
out
insb
loop
je
and
cmp
inc
lcall
pusha
notb
inc
and
push
nop
adc
in
sbb
mov
stos
inc
enter
cmp
dec
fstpt
jne
out
or
jge
je
jbe
dec
fdivrl
ret
and
lcall
repnz
fs
add
sub
jl
negb
data16
xchg
outsb
fistpll
add
add
je
lea
mov
lcall
adc
rolb
inc
test
mov
setg
or
addr16
push
add
xor
in
notl
xlat
pop
jmp
scas
inc
aad
sarb
aam
mov
add
or
fs
popf
insb
lahf
dec
push
xor
sub
jp
mov
or
or
jo
ljmp
pop
pusha
or
in
add
pop
in
sbb
pusha
or
or
or
pusha
or
pusha
or
pusha
or
pusha
or
xor
or
pop
pusha
or
inc
adc
cld
imul
adc
or
iret
ret
jno
aam
mov
ffreep
dec
fistpll
dec
sub
jle
sbb
mov
or
iret
xlat
pop
into
test
xchg
jmp
sti
pop
pushl
jmp
inc
roll
aad
sub
aaa
push
mov
xchg
pusha
pop
imul
sub
sub
outsl
add
outsl
sbb
outsl
adc
imul
add
stos
cmp
imul
int3
aas
xlat
sub
out
out
mov
dec
aad
sub
pop
into
dec
ret
popf
mov
rcrb
dec
loope
notb
fs
add
pushf
xor
jae
mov
inc
mov
sub
push
xor
cmp
push
mov
bound
xorb
pusha
pop
repnz
xchg
sbb
jns
mov
mov
lods
mov
loop
in
jge
testl
jno
inc
fidivrl
inc
and
jbe
outsl
lcall
xchg
or
add
mov
in
fnstsw
jmp
and
xchg
mov
orl
add
ljmp
adc
add
xchg
cs
jmp
icebp
pusha
notb
lcall
inc
and
js
dec
frstor
idiv
decl
idiv
lcall
mov
jmp
and
sbb
add
roll
mov
jmp
das
out
scas
xor
int
faddp
pop
iret
stos
pop
lea
imul
or
iret
outsl
mulb
push
imul
dec
aam
sub
imul
pop
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
add
jmp
sbb
mov
leave
lcall
ret
push
lds
adc
cmp
andb
sub
jo
mov
jmp
add
jmp
in
lock
bound
mov
decb
int
fidivrs
mov
mov
jmp
sti
ja
xorb
mov
lret
mov
cmpsb
shlb
jecxz
cmp
jne
addl
mov
jmp
movsl
xor
pop
xchg
repnz
std
das
bound
mov
cmp
jmp
add
jmp
dec
push
xor
or
fstpt
xchg
add
and
mov
ds
push
mov
ret
cltd
setg
or
das
jmp
scas
dec
pop
push
mov
jmp
and
jmp
add
xor
shll
std
insl
hlt
pop
lods
sbb
adc
jmp
add
aaa
dec
popl
jmp
mov
mov
rcll
and
mov
jmp
xor
and
pop
int
lret
mov
notl
loop
cltd
inc
sbb
jae
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
mov
xchg
adc
dec
subl
cmp
inc
cmp
push
xor
cmp
pop
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
clc
jg
mov
addb
or
xchg
mov
rorb
adc
pop
adc
lcall
jmp
in
jno
add
jmp
mov
push
jmp
push
fisttpl
fisttpll
ljmp
fidivrs
rorb
mov
inc
add
js
movzwl
jmp
xlat
arpl
xchg
gs
or
adc
dec
frstor
mov
push
imul
movzwl
imul
movzwl
add
jmp
pop
aad
sub
jp
popf
or
or
in
inc
int
and
jb
push
pop
movzwl
imul
add
mov
imul
add
jmp
cltd
or
mov
jmp
add
jmp
jmp
out
mov
jb
jo
loop
lods
inc
shll
xor
adc
popa
pop
movzwl
jmp
mov
mov
es
mov
mov
mov
cltd
or
pop
pop
dec
movzwl
jmp
mov
imul
jmp
ret
ja
jmp
xchg
or
in
negb
cmp
dec
sub
xor
ret
add
jmp
rorl
movsb
push
shl
jg
mov
sub
cmp
mov
cwtl
sbb
test
je
push
call
jmp
cmpsl
ret
dec
mov
cmp
jmp
dec
cmp
jmp
mov
jmp
out
outsb
cld
fwait
jbe
push
roll
shll
fs
popf
insb
xchg
leave
push
mov
jmp
js
sub
call
jmp
push
sbb
pop
mov
add
add
fsts
xchg
add
sahf
jbe
fldt
test
fnstenv
jmp
imul
jae
jmp
add
jne
mov
add
ja
xorb
jo
shr
add
add
pop
jmp
push
sub
add
xchg
sbb
orb
add
push
xor
addr16
stos
test
je
push
jmp
rclb
push
loope
sbb
inc
shll
push
lds
sbb
dec
jle
jmp
cmp
data16
popa
add
push
clc
lock
bound
and
movsl
movsl
movsl
movsl
jmp
loope
call
movsl
xor
movsb
ret
ds
call
stc
fst
rcrl
cmp
pop
sub
jmp
jmp
cld
popa
icebp
nop
arpl
dec
roll
aad
inc
push
xor
daa
ficomps
hlt
mov
push
jl
adc
cmp
jmp
jmp
jmp
rolb
inc
test
stos
cmp
dec
ficomps
test
repnz
jmp
pop
jmp
add
jno
xorb
setg
or
popa
loop
mov
add
enter
xchg
decl
call
sub
adc
les
fcmovnbe
pop
repnz
fs
cmp
pop
pop
ret
jmp
adc
jmp
inc
pop
jmp
adc
push
xchg
jb
pop
out
popa
icebp
nop
arpl
pop
cli
les
push
jmp
mov
pushf
lcall
call
and
sub
jmp
rcll
push
stc
lcall
out
adc
inc
mov
mov
push
add
cmp
jae
mov
jmp
repnz
pop
repnz
popl
popf
jmp
adc
xchg
add
add
jmp
pop
int
and
jb
jns
mov
xor
jno
jg
jmp
and
jmp
mov
mov
popa
icebp
nop
arpl
pop
mov
jns
paddsb
fwait
jbe
and
add
jmp
xchg
adc
in
sbb
data16
sub
pushl
jmp
jmp
stc
cwtl
imul
ficoml
inc
and
and
xchg
dec
testl
pop
adc
push
push
movzwl
movzwl
jmp
add
dec
adc
cwtl
and
popa
mov
ret
push
lock
mov
movzbl
jmp
or
cmp
and
outsb
cld
fwait
jbe
aad
mov
jecxz
jne
fidivrl
add
jmp
adcb
mov
shlb
jl
notb
lods
cmp
inc
shll
xor
iret
popa
jmp
cmp
and
xchg
cltd
clc
or
je
mov
fistl
mov
notb
fwait
decb
sub
push
add
fimuls
add
mov
mov
jmp
push
lea
jl
jne
ss
mov
and
or
or
andb
sub
jo
jmp
mov
mov
and
dec
push
mov
jmp
push
xchg
or
pop
add
data16
insb
or
in
cld
mov
jle
or
push
into
pop
cmp
ds
and
xor
add
jbe
inc
popl
lea
jmp
scas
xor
in
sbb
pusha
pop
repnz
divl
js
add
inc
out
push
jmp
mov
jne
popa
add
pandn
test
fcomip
mov
pop
adc
addl
jbe
cmpl
pop
xchg
adc
fs
or
jmp
pop
inc
and
cmp
fs
popf
insb
mov
loope
movsl
xor
rcrl
jmp
mov
les
je
jmp
inc
pop
in
push
lea
jmp
mov
jmp
add
jmp
fistl
lods
pop
lahf
fstl
mov
repz
xor
jmp
sbb
sbb
xchg
and
dec
int
jle
jmp
stos
aas
scas
lret
cli
push
lahf
push
cmp
xlat
inc
xlat
mov
std
into
dec
je
jmp
iret
push
inc
cmpl
jmp
add
push
pushf
sti
push
mov
mov
inc
mov
mov
lea
rolb
cld
push
push
mov
jb
ljmp
pushf
call
jmp
flds
mov
movsl
out
jne
mov
xchg
jnp
jp
in
imul
jmp
stos
das
mov
in
bound
pop
jb
addr16
adc
insl
push
jne
call
test
je
push
jmp
popf
jle
inc
adc
and
in
mov
in
ljmp
imul
push
mov
jmp
lcall
add
push
rolb
sarb
ss
cmp
pop
push
push
fsts
je
cmpl
jne
call
jmp
mov
xor
in
clc
lahf
push
lods
aam
movzwl
add
jmp
imul
jmp
pop
cwtl
push
imul
pop
lret
scas
pop
cld
cmpsl
jo
sti
call
and
jmp
dec
fimull
fisubrl
movsl
int3
aas
xchg
mov
mov
das
pushf
sub
imul
jmp
add
jmp
pusha
mull
icebp
push
dec
mov
cmpsb
imul
jmp
push
ret
ret
movsb
ret
ds
je
jbe
loopne
es
pop
push
mov
movzwl
movzwl
jmp
and
pop
ret
repz
and
jmp
add
jmp
or
mov
into
dec
aam
sub
cld
fwait
jbe
push
imul
movzwl
add
imul
add
mov
jmp
mov
mov
jae
outsb
sbbb
add
xor
lret
jmp
dec
rolb
rclb
pop
int3
stos
scas
rcll
cmpsl
push
mov
mov
mov
adc
inc
push
roll
shll
mov
enter
in
jge
testl
fmull
popf
pop
inc
ret
ret
ja
mov
mov
and
imul
add
cmp
jae
mov
add
jmp
lods
pop
ret
mov
movsl
mov
jmp
mov
xchg
lock
rcrl
scas
pop
mov
xor
add
add
lock
bound
and
xor
push
lds
xor
shr
add
add
push
lds
js
dec
sbb
pushf
xor
adc
mov
in
and
mov
sub
cmpl
push
jmp
outsl
cld
xchg
cmc
add
inc
lods
movsl
jmp
push
les
int3
jge
notl
or
in
lcall
inc
call
test
je
push
call
jmp
pop
jmp
pop
jmp
dec
fists
push
ret
cmpsb
push
cli
pop
adcl
outsb
cld
fwait
jbe
add
pop
adc
pop
jmp
jmp
scas
jmp
jmp
cltd
int
cmpsl
inc
jmp
mov
jmp
ret
jmp
out
jnp
mov
cmp
xchg
or
mov
gs
adc
add
jmp
jmp
pop
or
jmp
sbb
adc
push
pop
fimull
ficoml
insb
in
jge
negl
xchg
ja
movsl
movsl
movsl
jmp
add
add
jg
notl
or
sarb
sar
call
cmc
mov
shl
out
mov
cmp
jmp
daa
lods
cmp
pop
into
test
sbb
sub
dec
sub
xor
mov
fmuls
cmp
decl
and
jmp
jle
mov
cli
pushl
pusha
jmp
fstps
scas
pop
cltd
jle
popa
add
push
ja
jnp
in
pop
sub
add
mov
jmp
jmp
roll
scas
cmc
fs
popf
insb
lds
leave
sub
add
xchg
popf
pushl
jmp
inc
stos
sub
xchg
mov
inc
adc
push
lret
pop
ds
loop
jmp
jge
cwtl
or
in
mov
jmp
xor
xchg
and
jmp
rolb
add
jmp
jecxz
in
jle
popa
stc
imul
xor
inc
mov
inc
or
andb
sub
jo
mov
jmp
pop
les
int3
es
fsubs
imul
ret
jne
jmp
push
leave
pop
cmp
dec
jae
cmpl
sbb
gs
jmp
mov
icebp
rcll
cmpsl
push
mov
test
or
lea
jmp
push
pop
ljmp
jnp
cld
call
inc
and
cmp
jg
sub
fdivl
in
ss
inc
mov
add
add
lea
push
call
xor
push
xor
and
adc
and
ja
arpl
test
mov
and
xor
aaa
test
mov
cs
jbe
cmpl
insb
loop
je
jno
xorb
xchg
mov
mov
mov
and
xor
negl
jl
testb
outsb
popf
xor
cmpsb
jb
jne
out
dec
or
cmpsl
cmp
mov
cmpsb
pop
lea
push
lret
mov
int
and
push
mov
test
pop
xchg
cmp
cs
js
mov
inc
rcll
and
add
imul
or
iret
leave
dec
frstor
dec
in
add
add
outsl
xor
add
sub
sub
add
imul
adc
jo
mov
pop
pusha
or
or
add
adc
cs
aas
pop
test
cmpsl
push
cmpsl
mov
stos
into
cmp
push
cmc
add
mov
inc
mov
cltd
pop
xchg
adc
sub
inc
roll
aad
imul
sbb
scas
leave
cmp
test
mov
lahf
punpckhdq
cmp
mov
sbb
repz
lock
lret
push
rclb
jb
or
in
mov
inc
negl
mov
pop
int3
stos
movsw
adc
mov
mov
adcb
subb
pop
cmp
dec
mov
mov
lret
lret
push
shll
insb
lahf
jne
pop
repnz
xorl
inc
leave
dec
fdivrl
xor
push
adc
js
popa
icebp
nop
arpl
mov
icebp
jg
mov
xchg
and
cwtl
push
imul
push
test
push
push
shlb
mov
jmp
and
pop
cmp
sbb
cmp
mov
outsl
popf
dec
les
jle
pusha
je
popa
mov
jmp
sub
in
js
mov
imul
add
cmp
in
jge
notl
in
adc
imul
testb
push
aam
pop
xchg
repnz
insb
in
jge
negl
push
mov
sub
int3
dec
fdivrs
arpl
cmc
and
adc
rolb
sarb
pop
xlat
inc
and
sub
pop
xchg
repnz
jbe
insb
or
loop
in
sbb
int3
stos
rol
fdivrl
daa
inc
mov
ret
dec
fdivrl
pop
aas
lret
jae
xchg
lds
scas
pop
ljmp
ret
pop
lret
scas
pop
jmp
cli
push
int3
pop
into
test
dec
das
fidivrl
and
stc
imul
add
jns
int3
inc
and
sub
outsb
mull
icebp
js
xchg
mov
adcl
test
jp
movzbl
jmp
scas
sub
out
hlt
xchg
outsb
mov
jecxz
xor
mov
cltd
sbb
aad
int3
insb
out
adc
sbb
adc
clc
mov
jb
movl
lea
jmp
jne
loop
stc
cwtl
imul
scas
jnp
push
cld
sub
mov
mov
fwait
decb
cmp
jle
sbb
rolb
mov
repz
push
in
sbb
or
outsl
xor
or
or
or
or
pusha
adc
sbb
add
outsl
xor
add
mov
push
lea
sub
mulb
push
repz
pushf
outsl
fimull
cltd
or
ds
pop
rorb
mov
dec
sub
xor
cli
ljmp
stc
andb
sti
jle
insb
loop
je
xor
stos
sub
outsl
lcall
lcall
xchg
cmc
add
cmp
adc
js
xchg
add
pusha
orl
hlt
jl
jne
pusha
insb
jmp
push
in
sbb
and
jge
addr16
cmp
mov
adc
adc
mov
ja
jp
in
inc
mov
and
in
jle
mull
icebp
dec
ljmp
out
jl
testb
jne
out
dec
jne
jge
divl
je
jge
notl
inc
cmp
adc
pop
adc
xor
add
adc
mov
xchg
adc
push
into
pop
cmp
push
seto
popa
nop
pop
sbb
popa
loop
pop
loop
and
sbb
movsb
and
mov
lea
lahf
cli
or
sbb
adc
outsb
dec
adc
and
or
adc
add
imul
mov
inc
mov
or
in
jecxz
jne
mov
pushf
lcall
insb
or
les
daa
mov
cmp
outsl
icebp
addr16
or
iret
add
imul
or
imul
or
iret
add
add
xchg
jnp
daa
mov
and
add
jg
setg
or
xor
es
mov
fistpl
stos
data16
sarb
pop
fisttpl
fnstsw
ret
mov
or
cmp
mov
dec
mov
xorb
pop
int
addr16
jg
jmp
mov
in
adc
sbb
cmp
iretw
loop
ljmp
mov
out
mov
mov
fiadds
dec
jb
jg
jmp
dec
mov
jg
bound
test
add
xchg
pop
xchg
repnz
ljmp
shll
mov
xchg
scas
cmp
mov
xchg
add
imul
adc
adc
iret
pop
cmp
push
outsb
repz
cmc
sbb
mov
jg
bound
push
in
pusha
out
adc
adc
imul
setg
or
inc
push
xor
daa
cmpsl
xor
out
adc
or
aad
test
rcr
push
mov
outsb
or
sub
dec
frstor
push
mov
shll
sbb
sbb
cmp
movsb
ret
ds
sub
or
jno
xorb
lock
aad
jl
jne
and
dec
fstpl
jmp
insb
mov
sub
into
test
pop
cmp
fidivrs
shll
dec
mov
bound
fs
jo
rolb
shrb
mov
pop
fmuls
fsubrs
out
add
xorl
ss
mov
rcrb
adcl
cld
xchg
cmc
add
mov
and
clc
repz
lahf
push
mov
lods
aad
fdivrs
sub
jb
and
sub
lds
push
aad
sub
cmp
push
lahf
push
into
dec
fistpll
lods
mov
mov
inc
shlb
or
xchg
jb
insl
les
push
mov
sub
dec
rcll
adc
ds
inc
mov
mov
fimuls
push
loop
cmp
push
mov
mov
aaa
cmpsl
ret
push
lahf
punpckhdq
mov
repz
loopne
jb
loopne
call
mov
data16
xchg
outsb
test
inc
daa
sarb
mov
test
xchg
adc
cltd
or
push
pop
lret
scas
pop
mov
in
adc
xor
add
sbb
pusha
add
add
add
pusha
add
or
jo
or
add
add
add
add
add
pusha
add
adc
outsl
add
add
jo
idiv
decl
add
add
add
add
pusha
add
adc
add
adc
in
add
pop
in
sbb
or
cmp
or
imul
add
xor
pop
jecxz
push
in
or
push
inc
and
or
iret
pusha
jmp
push
in
add
push
pop
leave
test
mov
stos
dec
pop
inc
and
sub
mov
and
add
outsl
lcall
mov
out
test
jge
cmp
push
mov
les
sbb
and
push
cld
dec
adc
loope
jmp
jge
scas
cmp
aam
sub
fidivrs
scas
lret
imul
pop
repnz
jns
jmp
cmpsl
aaa
push
mov
push
imul
or
iret
jl
push
xchg
add
inc
rclb
pop
test
leave
aas
pop
aam
sub
cmc
pushf
outsl
pop
xlat
inc
and
cmp
pop
push
mov
jns
das
cmp
fisttpl
fstpl
jnp
fs
pop
pop
leave
pop
cmp
jg
mov
inc
aam
sub
mov
mov
fisttpll
mov
aam
dec
stc
push
rclb
movsb
cmp
outsl
dec
xlat
inc
and
cmp
lock
cli
push
push
cld
jnp
jbe
cmpl
cwtl
push
imul
arpl
xchg
gs
pop
int3
stos
cmpw
xchg
adc
in
sbb
rcrl
scas
pop
scas
lock
mov
adc
or
cmpsb
push
test
inc
into
pop
cmp
xor
dec
frstor
xor
xchg
repnz
cwtl
adc
in
sbb
cmpsb
shrl
shll
jmp
cmp
or
ds
push
bound
in
jle
rolb
mov
xchg
ja
xchg
add
sahf
insl
into
dec
fstpt
sub
pop
cmp
orb
adc
adc
or
dec
dec
lds
iret
cmovs
pop
ds
lock
lock
aam
sub
mov
movsl
xor
int
xchg
in
loope
jae
sbb
lds
iret
jp
mov
sbbl
xor
push
sub
into
push
lds
mov
aam
fnstcw
inc
es
fcomps
test
mov
xchg
add
lret
lret
jo
add
pop
pusha
or
sbb
pusha
or
or
or
pusha
or
add
jo
or
add
or
or
or
or
pusha
or
adc
outsl
or
or
jo
idiv
decl
or
or
or
or
pusha
or
adc
or
adc
in
add
pop
in
sbb
pusha
add
outsl
add
add
pusha
add
pusha
add
pusha
add
add
adc
add
outsb
call
nop
adc
push
jl
testb
adc
nop
push
popa
nop
arpl
insb
loop
je
movsb
sub
lds
sub
stos
sub
cs
mov
push
fisttpll
out
arpl
addr16
dec
adc
daa
inc
pop
outsl
xor
pusha
or
add
add
add
pusha
add
or
jo
or
add
add
add
add
add
pusha
add
adc
outsl
add
add
jo
idiv
decl
add
add
add
add
pusha
add
adc
add
adc
in
add
pop
in
sbb
pusha
or
outsl
or
or
pusha
or
pusha
or
pusha
or
or
or
adcl
loopne
mov
xor
jmp
fisubrs
jmp
out
mov
mov
loope
xchg
add
jae
add
xchg
or
je
fwait
or
sbb
or
lods
lret
inc
mov
movsb
ret
ds
lea
and
sti
addr16
adc
or
rcl
push
lret
mov
pop
enter
les
mov
cmpsl
pop
mov
arpl
xchg
sbbl
and
and
insb
or
mov
ja
cmp
cmp
and
jmp
dec
fimuls
push
sub
insl
dec
fisttpll
out
enter
addr16
and
or
adc
dec
xor
sbb
adc
aad
sub
aaa
je
arpl
cmc
sbb
jno
xorb
stos
cmp
sub
pop
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
stc
jns
mov
inc
test
xchg
mov
imul
or
iret
add
imul
or
iret
ds
push
lds
inc
push
xor
daa
addl
or
js
mov
xor
jg
push
jg
mov
pop
mov
gs
jbe
movsb
ret
ficompl
nop
push
popa
nop
arpl
mov
ja
outsb
or
sub
rolb
rclb
in
pusha
notb
xor
adc
jns
jae
jno
jecxz
and
mull
xchg
popa
ffree
push
mov
movsl
int3
aas
mov
outsl
lcall
into
test
fstpt
xchg
repnz
lods
xor
int
aam
cltd
or
push
jae
bound
mov
and
popa
loop
pop
loop
inc
lds
iret
and
sub
std
jns
mov
xchg
xchg
repnz
mov
fsubrs
bound
sub
dec
push
ja
loope
jno
outsl
or
jecxz
dec
fidivrs
push
or
iret
sbb
es
pop
outsl
xor
ljmp
pop
pusha
or
and
sbb
adc
adc
adc
add
add
loopne
jb
sub
in
push
lahf
push
pop
fisttpll
out
and
int
fidivrs
fcoms
mov
ja
loope
je
xchg
testb
in
sbb
add
inc
ss
jb
insl
hlt
pop
mov
mov
push
outsl
or
scas
sbb
mov
mov
cs
jge
je
aaa
adcb
xchg
add
es
lret
pop
ds
inc
fmuls
fcomps
call
xchg
lock
sub
push
jns
inc
and
pop
in
insl
std
test
jmp
cltd
push
cmp
and
jns
sahf
or
cmpsb
pop
xor
int3
iret
filds
fdivl
push
call
inc
cs
jmp
movl
shrl
fsubl
aaa
and
add
call
call
jmp
adc
or
adc
mov
push
call
dec
test
movsl
andl
adc
inc
mov
lds
add
es
std
test
mov
imul
adc
xor
adc
adc
movsl
les
push
add
call
call
jmp
clc
jbe
cmpl
shl
in
adc
or
or
xor
or
in
add
pusha
add
add
pusha
adc
adc
or
or
xor
or
imul
pop
or
iret
add
add
scas
sbb
dec
jo
jns
jmp
test
aad
into
adc
jl
xchg
jb
or
xchg
mov
dec
int3
inc
and
lods
lret
inc
scas
std
adcl
test
mov
imul
pop
fisttps
fnstenv
jne
addr16
or
lods
cmp
push
lahf
push
cmp
push
fmuls
fdivrs
add
movsb
cmp
or
lahf
punpckhdq
test
mov
jns
das
sti
outsl
lcall
int
addr16
movsb
xor
int
ret
push
shlb
in
sbb
jecxz
pop
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
outsb
out
adc
cmp
mov
push
push
call
cmp
mov
add
sbb
add
sub
jnp
push
call
test
call
jmp
mov
mov
and
adc
imul
or
iret
add
imul
imul
or
iret
popf
adc
aam
push
push
call
jg
jl
negb
pop
jl
pop
bound
call
add
adc
mov
add
push
jmp
int3
popf
and
cmp
or
sbb
nop
add
cmp
pop
push
pop
jmp
sub
scas
lret
call
jmp
jno
je
out
inc
push
xchg
add
and
pop
lcall
ret
in
pop
jmp
ljmp
stc
in
pop
repnz
mov
insl
hlt
pop
in
popa
std
insl
hlt
pop
sbbb
jmp
mul
aam
add
jmp
rcrl
data16
cmp
jl
jne
insb
aas
gs
call
data16
adc
push
addl
lea
cltd
clc
or
inc
push
call
ficomps
stos
pop
mov
lods
cmp
push
test
push
idivb
adc
xor
add
pusha
xor
adc
adc
adc
adc
inc
cltd
inc
sar
pushl
mov
jmp
mov
lahf
inc
imul
addb
add
add
add
ja
loope
inc
leave
pop
cmp
cmp
pop
cmp
outsb
mov
sbb
mov
mov
mov
andb
sub
jmp
int
shlb
insl
hlt
pop
mov
lods
mov
loop
push
xor
js
adc
inc
adc
push
lret
pop
ds
cmpsb
xor
scas
pop
or
ljmp
xchg
popf
jmp
push
mov
jns
cmp
xchg
outsl
cmp
add
jmp
cmp
jmp
into
pop
iret
stos
pop
into
dec
fimuls
push
imul
sbb
jb
xor
pusha
add
outsl
or
dec
pusha
or
pop
jo
or
add
or
outsl
or
dec
pusha
or
pusha
or
outsl
or
ljmp
pusha
or
outsl
or
or
pop
pusha
or
pusha
or
add
pop
in
sbb
pusha
add
add
add
pusha
add
pusha
add
pusha
add
pusha
add
call
or
pop
pusha
add
mov
stc
imul
jne
jmp
cmp
jmp
xchg
or
or
in
sbb
in
jg
mov
xor
ljmp
pop
pusha
add
imul
adc
sub
adc
add
add
pop
cmp
and
jecxz
adc
add
xor
fisttpl
fstl
loop
notl
mov
mov
push
rolb
shrb
add
out
jl
testb
add
jge
divl
push
lds
cld
pmulhw
mov
mov
movzbl
add
jmp
jmp
and
xor
pop
inc
lret
pop
ds
nop
adc
je
popa
mov
jmp
mov
fiadds
call
mov
xchg
bound
cmp
pushf
xor
inc
aad
jmp
adc
movsl
sub
lds
orb
sti
push
mov
or
movsb
daa
jge
inc
jne
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
or
push
push
jmp
and
jmp
or
dec
int3
inc
xlat
mov
call
or
popl
lea
jmp
lods
lods
lret
inc
out
mov
test
pop
leave
test
lock
xor
xor
adc
jp
jp
mulb
dec
mov
mov
das
mov
jmp
decl
sbb
adc
dec
cmpl
jmp
dec
roll
rcll
mov
movsl
stos
xor
fs
popf
insb
test
push
xor
jmp
pop
jmp
sbbb
jmp
mov
jg
mov
in
fisttpll
jle
lds
je
jmp
cmp
dec
cmp
sub
inc
fidivrl
mov
jmp
movsb
and
std
insl
hlt
pop
shrb
sbb
sbb
push
out
xlat
loopne
in
je
add
push
push
push
mov
test
je
jmp
fsubs
lea
call
jmp
and
push
fdivl
in
stc
popa
mov
jmp
mov
aam
sbb
adcb
andb
fisttpl
fisttpll
xlat
in
sbb
or
outsl
xor
or
sub
add
pusha
or
add
outsl
add
add
pop
jo
or
add
add
outsl
add
dec
pusha
add
pusha
add
outsl
add
ljmp
pusha
add
outsl
add
add
pop
pusha
add
pusha
add
add
pop
in
pop
outsl
adc
outsl
add
add
pusha
add
pusha
add
pusha
add
pusha
add
add
pop
in
sbb
pusha
add
add
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
add
add
add
pusha
add
in
and
adc
add
inc
lret
lret
push
lret
sti
nop
add
xor
out
in
dec
and
jmp
cmp
lea
jmp
cs
jmp
xchg
add
add
sub
sub
or
pop
pop
mov
sub
lcall
call
push
lea
jmp
mov
sub
cld
call
pop
test
je
push
pop
jmp
push
lcall
cmp
or
inc
shll
shlb
adc
jmp
xor
add
pop
jmp
loopne
out
mov
jo
jg
jmp
lret
inc
rorl
pop
bound
rorl
sub
decl
pop
lock
xorb
icebp
popa
add
sbb
popf
aad
imul
adc
xor
sbb
adc
call
mov
rolb
jmp
pop
fisttpll
out
pop
jecxz
push
in
outsl
jmp
push
in
sbb
pop
enter
call
jmp
inc
iret
pop
cmp
xor
jmp
jmp
xchg
inc
lret
lret
inc
xlat
mov
fwait
repz
je
inc
inc
imul
adc
fcomps
scas
pop
cld
jno
jno
jecxz
cltd
or
mov
adc
pop
adc
xor
push
or
iret
clc
push
fcoml
cmpsb
push
cli
mov
mov
and
pop
push
add
add
mov
pop
into
pop
cmp
popa
test
xchg
adc
add
outsl
xor
or
outsl
sbb
pusha
add
add
add
pusha
add
add
adc
pusha
add
add
add
add
pusha
add
adc
outsl
add
add
jo
idiv
decl
add
add
add
add
pusha
add
adc
add
adc
in
add
pop
in
sbb
pusha
add
outsl
add
add
pusha
add
pusha
add
pusha
add
and
adc
add
in
jbe
cmpl
pop
jae
or
je
pop
adc
dec
outsl
or
sub
lea
jmp
cmp
call
jmp
es
adc
icebp
insl
std
test
mov
cmp
jl
dec
addr16
decl
adc
mov
stos
cs
pop
jmp
fcompl
stos
scas
adc
mov
lea
jmp
loopne
icebp
nop
arpl
loope
dec
into
pop
cmp
xor
imul
pop
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
in
imul
outsb
cld
fwait
jbe
cmp
in
add
or
outsl
xor
or
xor
sbb
adc
outsl
ret
add
pushl
add
jmp
jp
jp
movsb
daa
mov
and
repz
mov
adc
lods
aam
jmp
mov
shlb
add
bound
inc
es
xchg
and
xchg
imul
or
iret
movsb
sub
mov
dec
mov
push
lea
jmp
mov
jmp
sub
out
lcall
jmp
loope
out
jno
mov
cwtl
inc
rolb
shlb
pop
popf
in
add
or
or
xor
or
pusha
xor
sub
adc
outsb
ljmp
stc
scas
add
or
xor
call
add
test
jne
jmp
mov
sti
mov
and
adc
add
lods
mov
jmp
sub
jmp
fiadds
mov
movsb
sbb
jl
jo
loop
ljmp
iret
adc
daa
outsl
inc
cmp
jmp
fstpl
xchg
lods
mov
mov
jmp
gs
leave
cld
mov
jmp
stos
sub
std
insl
hlt
pop
in
pop
fimuls
add
cmp
repz
pop
lea
call
xor
pop
add
mov
jmp
ficomps
test
and
out
dec
sub
jmp
mov
and
out
mov
inc
mov
adc
pop
inc
jmp
xor
cmp
push
fimuls
adc
dec
jmp
jmp
pop
aam
sub
jmp
jge
xchg
jecxz
jmp
jge
add
push
adcl
loop
test
mov
divl
cmpb
jmp
pushf
or
in
movsl
rolb
mov
out
adc
sbb
mov
add
add
cld
ljmp
pop
pusha
add
and
add
add
or
adc
jo
fcoml
pop
pusha
or
or
adc
adc
sbb
adc
add
scas
fstl
push
inc
fisttpl
and
jg
adc
insl
xor
jae
jg
jmp
pop
loop
lret
push
shll
idiv
decl
out
cld
decl
add
jmp
mov
ret
adc
imulb
lcall
je
adc
sbb
cld
lcall
call
mov
jmp
addb
testl
mov
hlt
mov
shl
add
lea
jmp
divl
mov
xor
insl
jmp
mov
adc
aaa
daa
cld
jmp
adc
add
inc
adc
adc
pop
bound
imul
adc
add
imul
or
iret
leave
imul
or
iret
sub
pop
sbb
imul
adc
add
imul
or
iret
lea
push
or
iret
pushl
jmp
jbe
or
jmp
and
pop
rolb
shlb
dec
fnstcw
gs
pop
imul
rolb
mov
jns
pop
push
fmuls
fcomps
int
mov
adc
jmp
in
notl
pushl
xchg
xor
pop
outsb
cld
fwait
jbe
or
imul
pop
movsl
xor
pop
mov
xchg
adcb
sbb
push
inc
jbe
test
je
push
jmp
jmp
cwtl
adc
pushl
jmp
jge
jno
jmp
ljmp
sahf
insl
test
test
jge
outsb
pushf
add
std
or
mov
leave
in
jecxz
cli
push
jmp
jne
jns
jmp
push
xchg
pop
bound
xor
movb
adc
jmp
and
xchg
adc
in
sbb
and
sbb
adc
add
imul
adc
and
mov
jmp
arpl
jno
jecxz
or
jno
push
pushf
sti
push
call
cmp
xor
pusha
add
outsl
or
or
pusha
or
add
adc
pusha
or
or
or
or
pusha
or
adc
outsl
or
or
jo
idiv
decl
or
or
or
or
pusha
or
adc
or
adc
in
add
pop
in
sbb
pusha
or
or
or
pusha
or
pusha
or
pusha
or
pusha
or
or
or
pop
pusha
or
sbb
lock
lea
addr16
pop
mov
mov
push
lea
call
jmp
add
sbb
out
fs
popf
insb
mov
jae
xchg
out
inc
pop
mov
push
mov
call
pop
xor
jmp
jmp
push
lea
mov
inc
mov
pop
dec
inc
mov
jmp
gs
jmp
mov
jmp
stc
lds
das
dec
mov
inc
jmp
jmp
mov
aad
xchg
push
push
xor
data16
scas
leave
cmp
xchg
cmp
inc
jo
imul
pop
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
stos
xor
aad
imul
test
jge
ds
fdivl
in
sbb
jecxz
pop
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
add
add
fildl
mov
jns
jnp
dec
fnstcw
daa
inc
mov
cmp
in
notl
jg
arpl
cmc
inc
ljmp
je
sub
push
xor
dec
das
fidivl
sbb
pushf
xor
or
outsl
ficoml
adcl
pop
jp
push
rorl
mov
ds
test
mov
out
out
mov
xchg
mov
sbb
lahf
push
add
rolw
inc
cmpsl
int3
push
ret
cmpsb
push
mov
xchg
mov
push
ret
cmpsb
push
test
pop
int
addr16
push
xlat
inc
and
aaa
dec
rclb
xor
jbe
cmpl
mov
xchg
jb
stos
cmp
pop
xlat
pop
iret
stos
pop
shrb
ss
mov
scas
pop
cwtl
or
add
repnz
pop
jmp
add
pop
bound
mov
mov
mov
dec
frstor
pushf
jmp
or
jmp
fiadds
add
ja
jl
negb
push
jmp
dec
aad
sub
pop
aam
fnstcw
add
sahf
push
outsb
repz
cmc
sbb
ljmp
pop
pusha
add
and
adc
adc
or
iret
add
add
fldenv
adc
xor
push
or
iret
pop
sahf
or
cmpsb
inc
mov
jo
add
pop
pusha
or
sbb
pusha
or
or
or
pusha
or
add
adc
pusha
or
or
or
or
pusha
or
adc
outsl
or
or
jo
idiv
decl
or
or
or
or
pusha
or
adc
or
adc
in
add
pop
in
sbb
pusha
add
add
add
pusha
add
pusha
add
pusha
add
pusha
add
xor
pusha
add
mov
mov
add
add
dec
frstor
jge
jns
mov
inc
mov
push
adc
add
xchg
popf
pushl
mov
jmp
inc
enter
sub
push
aaa
ret
sbb
add
add
imul
jmp
pop
mov
xchg
lods
and
scas
cmp
mov
lcall
popa
sbb
jmp
mov
jmp
mov
inc
mov
inc
xlat
inc
and
imul
pop
rorb
adc
arpl
call
xchg
jb
rcll
push
stc
mov
dec
popa
jmp
sbb
mov
fisttpl
mov
sarl
imul
pop
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
out
adc
inc
rorl
mov
jg
jmp
int
add
decl
add
incl
dec
sub
xor
stos
cmp
sub
inc
jne
jmp
cmp
jmp
pusha
std
insl
hlt
pop
andb
sbb
and
jmp
adc
pushf
xor
mov
ret
je
push
cld
adc
adcl
mov
inc
mov
addl
mov
movzbl
add
jmp
adcl
jmp
sbb
jns
mov
cmp
push
lds
fistps
scas
pop
mov
aas
scas
lret
cmp
add
add
lahf
xor
and
jb
xchg
mov
lods
mov
mov
enter
fiaddl
ljmp
stc
mov
cs
cltd
fwait
gs
imul
or
iret
add
imul
or
imul
adc
add
add
mov
stos
int
ficomps
push
cmp
daa
mov
mov
movsl
mov
ret
or
cmpsb
outsl
mov
jl
xchg
cmc
add
adc
xchg
adc
add
test
std
js
mov
scas
sub
sub
cld
xchg
cmc
add
scas
and
xchg
pop
and
jle
cmpsb
xor
scas
insb
ja
push
xchg
pop
bound
inc
mov
outsb
cld
fwait
jbe
mov
mov
and
enter
mov
xchg
stos
loopne
jmp
jge
test
out
jnp
mov
loop
call
jle
mov
cmp
push
jmp
jns
add
pop
into
test
mov
loope
push
xchg
jmp
movsb
cmp
sbb
pusha
pop
repnz
inc
aam
dec
pushl
mov
push
icebp
ljmp
js
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
cmpsl
sub
popa
outsl
xor
pusha
or
outsl
add
dec
pusha
add
pop
jo
or
add
add
outsl
add
dec
pusha
add
pusha
add
outsl
add
ljmp
pusha
add
outsl
add
add
pop
pusha
add
pusha
add
add
pop
in
sbb
pusha
add
add
add
pusha
add
pusha
add
pusha
add
pusha
add
jae
or
pop
pusha
add
movsb
cmp
outsl
xor
ljmp
pop
pusha
or
imul
or
imul
adc
add
add
cwtl
decl
mov
dec
in
dec
fdivrs
adc
sub
out
cmp
cmp
inc
inc
and
jns
xchg
add
sahf
pop
add
inc
jecxz
push
in
in
je
lea
cmp
stos
xor
int
mov
xchg
pop
scas
sub
lds
test
std
or
rolb
inc
stos
lock
cmpl
cltd
or
dec
add
add
out
insb
or
iret
sub
addl
add
xchg
out
out
jo
xchg
pop
xchg
repnz
jmp
sub
jae
jg
jmp
adc
or
lods
inc
dec
cmp
push
jmp
insb
push
jmp
sbbb
call
xor
and
push
cltd
adc
prefetch
add
add
jmp
nop
jle,pt
push
jmp
mov
stos
cmpsb
xor
scas
inc
mov
mov
aam
imul
pop
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
add
add
jno
jge
divl
stc
imul
clc
lahf
push
aam
lds
out
cli
inc
push
xor
sub
and
dec
dec
into
pop
cmp
add
sti
mov
nop
sbb
aaa
cmpsl
ret
mov
fldt
pop
fmuls
fsubs
push
sbb
scas
das
mov
mov
gs
popa
mov
movsb
ret
ds
mov
xchg
icebp
add
inc
and
fisttps
push
jmp
xor
jmp
pushl
jl
xchg
sbb
dec
push
xor
cmp
imul
or
iret
or
jbe
pop
jle
or
and
jne
je
mov
jmp
pusha
in
jge
mull
mov
xchg
cwtl
decl
lods
sbb
xchg
push
jmp
mov
cwtl
pop
iret
pop
cmp
data16
adc
or
iret
add
imul
or
iret
xchg
insb
imul
or
iret
imul
pop
adc
xor
or
iret
ret
lods
pop
out
xchg
push
xchg
repz
cmpsl
test
scas
mov
jmp
mov
jg
add
push
lcall
cmp
mov
pop
push
xor
or
push
jmp
in
jbe
cmpl
push
mov
ss
mov
popf
divb
jmp
daa
mov
mov
mov
mov
jg
inc
mov
and
sti
and
imul
push
push
push
push
pushl
call
jmp
rorl
add
inc
jmp
daa
fdivp
call
jmp
inc
push
xor
daa
push
popf
or
dec
fidivrs
or
sub
jmp
roll
dec
cltd
aaa
mov
inc
mov
cmp
pop
rolb
shlb
ficomps
xlat
add
add
repnz
xlat
inc
and
cmp
fsubl
enter
imul
pop
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
and
test
cltd
clc
or
rcrl
xchg
cmpsl
pop
jo
xchg
push
jmp
push
jmp
xchg
sbb
aad
subl
inc
mov
jmp
test
or
push
pushl
call
push
lea
jmp
scas
xchg
pop
mov
mov
jmp
jl
jmp
mov
jmp
inc
rolb
sarb
push
shlb
mov
out
dec
test
pushf
repz
pushf
outsl
fucompp
loope
add
jmp
popf
jb
jne
jmp
sbb
jnp
ja
loope
sbbb
call
and
pop
imull
or
iret
add
imul
imul
or
iret
add
addr16
pop
xor
push
jmp
dec
aaa
push
pushl
jmp
sub
jmp
xchg
pusha
out
sahf
or
cmpsb
outsl
adc
in
or
clc
cmpsl
pop
adc
lret
sbb
push
rolb
shlb
push
movsl
push
or
imul
mov
xor
addr16
jmp
call
xchg
xchg
sbb
aad
pop
aad
sub
cmp
pop
jp
fs
xchg
add
jge
jne
cmp
jae
jmp
fs
imul
das
cmc
jg
mov
or
add
jmp
jmp
insl
jno
stc
call
jmp
test
lahf
cli
or
push
or
scas
test
mov
add
jo
ljmp
pop
pusha
add
imul
or
iret
mov
mov
jmp
pop
jmp
loop
inc
sahf
leave
jmp
inc
rolb
sarb
dec
fidivrs
lret
scas
pop
repnz
hlt
mov
pop
adc
xor
call
mov
jmp
jmp
cmp
stos
sub
sub
pop
inc
cld
incl
xor
xor
cmp
push
jp
jge
notl
outsl
lcall
jae
in
mov
mov
fstpl
mov
test
lods
clc
incl
pushf
jmp
sbbl
sub
dec
fistpll
add
jne
mov
jmp
in
jno
call
jmp
add
repnz
mov
dec
mov
jmp
into
bnd
xchg
rcll
cmpsl
push
mov
xchg
sbb
add
pop
pusha
or
outsl
sbb
pusha
add
add
add
pusha
add
add
adc
pusha
add
add
add
add
pusha
add
adc
outsl
add
add
jo
idiv
decl
add
add
add
add
pusha
add
adc
add
adc
in
add
pop
in
sbb
pusha
or
outsl
or
or
pusha
or
pusha
or
pusha
or
xor
adc
or
mov
cmpsb
shll
lods
sub
cmp
mov
mov
jge
outsb
testb
xchg
popf
pushl
mov
jmp
mov
mov
mov
ret
inc
lds
iret
and
xchg
sbb
xchg
jge
pop
lret
scas
pop
mov
cltd
roll
add
pop
inc
roll
aad
jo
xorl
adc
dec
mov
jecxz
jmp
dec
push
xor
or
push
bnd
jo
loop
push
rclb
imul
inc
or
andb
sub
jmp
mov
mov
and
sbb
push
out
gs
xchg
ret
jmp
mov
cmpl
add
pop
xchg
pop
xchg
repnz
add
jnp
xor
stc
in
add
or
outsl
xor
or
xor
aaa
or
iret
rorb
add
lds
mov
inc
mov
push
roll
aad
js
ja
loope
dec
rolb
rclb
into
jne
jmp
leave
add
jmp
scas
xor
fwait
or
push
jl
insl
hlt
pop
in
mov
pop
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
add
add
cmpsb
xor
scas
inc
rorb
dec
mov
lret
sub
jb
xchg
daa
scas
cmp
mov
ficoms
mov
in
je
push
fwait
adc
cmp
add
xchg
add
push
push
fmuls
fdivs
lock
inc
or
xor
pop
repnz
fs
xchg
adc
xchg
pop
bound
inc
mov
xchg
or
in
cld
pop
les
int3
dec
outsb
add
add
sbb
clc
and
ja
cmp
add
mov
cmp
add
sub
dec
into
pop
cmp
sub
jne
out
lods
cld
push
imul
adc
dec
adc
xor
or
outsl
xor
outsl
sub
outsl
add
sbb
sbb
outsl
adc
jo
add
add
cmp
fsubr
shr
pop
pusha
or
pusha
or
adc
or
iret
nop
adc
in
sbb
pop
fisttpll
out
sub
jns
ror
outsl
xor
ljmp
pop
pusha
or
and
adc
adc
cmp
adc
add
add
xchg
sti
jmp
mov
jmp
into
dec
fstpt
fwait
decb
xchg
pusha
je
cmp
outsl
xor
pusha
or
or
outsl
or
or
pop
jo
or
add
or
outsl
or
dec
pusha
or
pusha
or
outsl
or
ljmp
pusha
or
outsl
or
or
pop
pusha
or
pusha
or
add
pop
in
sbb
pusha
add
add
add
pusha
add
pusha
add
pusha
add
pusha
add
rdmsr
or
pop
pusha
add
jbe
outsb
or
pop
loop
jecxz
jne
fstl
mov
fdivrs
jmp
call
or
jge
add
jle
jmp
jns
jns
jmp
dec
fmuls
fdivs
pop
int
addr16
cltd
add
sbb
mov
cli
pop
and
add
add
jmp
call
cs
sbb
cmp
lret
fnstcw
mov
add
call
test
push
push
jmp
ret
jmp
inc
aam
sub
mov
and
xchg
cmp
cmpl
pop
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
push
call
test
mov
es
jge
je
addr16
mov
imul
push
call
in
adc
insb
jb
bound
fstpt
outsl
and
imul
js
mov
or
add
pusha
or
outsl
or
or
pusha
or
or
adc
pusha
or
or
or
or
pusha
or
adc
outsl
or
or
jo
idiv
decl
or
or
or
or
pusha
or
adc
or
adc
outsl
add
add
and
imul
or
iret
pushf
xchg
pop
jmp
jo
pusha
pop
repnz
push
xor
sub
sti
fwait
sbb
xchg
xor
pushf
jmp
inc
mov
sub
jmp
push
xlat
inc
and
and
fcmovnb
dec
fstpt
mov
add
jne
cld
pushl
add
xchg
popf
pushl
mov
jmp
xchg
adc
mov
inc
mov
push
fimull
fidivrl
mov
mov
xor
call
push
inc
iret
pop
cmp
xor
testb
hlt
push
daa
test
pop
test
lret
adc
pop
adc
xor
cmp
adc
data16
cmpsl
cmpsb
lock
adc
mov
negl
dec
sub
mov
insb
loop
je
rol
add
mov
jmp
cs
jmp
mov
jmp
push
lret
pop
ds
in
adcl
test
ljmp
lods
subl
add
adc
jo
add
add
lret
les
ret
dec
mov
pusha
add
dec
or
iret
lea
mov
sbb
and
cmp
jne
addl
mov
jmp
stc
jae
xchg
mov
aad
sub
shlb
add
add
movsb
cmp
outsl
popf
push
xchg
repz
in
repnz
lahf
push
aaa
or
mov
add
mov
jmp
mov
shrl
push
cld
jnp
cld
xchg
cmc
add
fcompl
stos
scas
iret
jnp
sar
inc
adc
fistpl
test
fdivrs
pop
and
xor
mov
mov
andb
sub
jo
jmp
sbb
push
rolb
rolb
cwtl
sbb
aad
shll
cmp
jmp
jmp
xlat
push
shlb
mov
mov
out
lret
xor
in
or
sbb
pusha
add
pusha
or
or
or
pusha
or
add
jo
or
add
or
or
or
or
pusha
or
adc
outsl
or
or
jo
idiv
decl
or
or
or
or
pusha
or
adc
or
adc
in
add
pop
in
sbb
pusha
or
or
or
pusha
or
pusha
or
pusha
or
pusha
or
dec
inc
or
pop
pusha
or
rorl
dec
mov
insb
loop
je
mov
lods
mov
loop
dec
shlb
add
add
ljmp
pop
pusha
add
and
inc
or
iret
and
mov
std
add
outsl
sub
cld
ljmp
pop
pusha
add
and
inc
or
iret
xchg
pop
xchg
repnz
pusha
leave
cmp
add
jp
jp
mov
or
stc
adc
add
sahf
or
cmpsb
dec
jne
jns
jmp
pushf
add
fisttpll
mov
adc
add
add
rol
push
lret
cmc
lcall
pop
jmp
dec
inc
and
sbb
mov
inc
mov
outsl
xor
std
jmp
rolb
add
jmp
iret
pop
leave
test
out
in
jg
mov
and
add
add
fistl
cmp
je
mov
jmp
push
jmp
scas
xor
int
dec
push
mov
cmp
inc
mov
and
cli
enter
loopne
pushl
jmp
mov
cmpsl
sbb
jbe
cmpl
xchg
dec
daa
rol
xor
pusha
or
or
outsl
or
add
dec
pusha
add
outsl
or
pusha
add
dec
pusha
add
adc
imul
adc
or
sbb
mov
inc
mov
mov
icebp
stos
mov
call
jmp
push
inc
and
and
lret
in
push
push
fsubl
mov
clc
std
ljmp
pop
pusha
or
imul
test
test
adc
jae
mov
jmp
jle
imul
and
out
les
int3
cs
lcall
add
ljmp
pop
pusha
add
imul
lods
and
push
das
jns
enter
add
and
mov
inc
mov
call
jmp
add
stos
and
and
ds
test
mov
fwait
sti
mov
push
mov
mov
call
pop
xor
mov
mov
jmp
push
sbb
pop
fwait
cmp
jb
lea
call
pushl
mov
lea
jmp
push
mov
jmp
mov
jmp
add
jmp
lods
and
add
outsl
push
push
xor
jg
pop
jmp
cld
jae
xchg
es
call
outsl
add
jmp
dec
fmuls
fsubrs
jno
xorb
enter
jg
pop
enter
nop
mov
sub
jmp
ljmp
push
jmp
add
hlt
insb
loop
je
sub
mov
nop
sub
nop
aas
or
iret
add
imul
adc
cld
popa
icebp
nop
arpl
xchg
movsb
fistpll
lea
jmp
jno
push
jmp
loopne
adc
sub
push
xor
sub
imul
push
lds
cmp
or
outsl
sbb
pusha
or
jo
ljmp
pop
pusha
add
imul
or
iret
push
jmp
push
jmp
loope
cmc
pushf
outsl
xchg
jbe
addr16
sub
rolb
stos
insl
lea
jmp
aad
mov
mov
sbb
mov
adc
add
cli
call
pop
test
jne
mov
jmp
fstp
fisttpll
adc
pushl
push
push
call
push
lea
jmp
adc
jmp
sub
xchg
jo
out
cmp
jmp
ret
movsl
push
repz
adc
movhps
loopne
pop
adc
adc
push
fs
decl
mov
cld
jmp
jp
gs
pop
pop
add
daa
and
inc
in
fiaddl
add
pop
lret
scas
pop
in
call
shrb
repnz
mov
sbb
sbb
cld
ljmp
pop
pusha
add
imul
adc
cmp
mov
pop
lea
jmp
fistl
cmpsb
push
loope
out
jg
jmp
push
sub
cmp
je
xor
mov
jmp
cs
dec
mov
shlb
ret
dec
call
test
jmp
mov
and
shll
mov
dec
fnstcw
xor
ljmp
pop
pusha
or
and
dec
or
iret
xchg
neg
jmp
sbb
inc
fadds
xor
inc
jl
jmp
push
jmp
add
cwtl
sbb
and
jno
pushaw
push
call
xor
mov
mov
mov
jmp
lds
roll
lahf
punpckhdq
or
pop
bound
adc
lcall
jmp
jmp
imul
adc
sbb
xor
pop
jp
jae
imul
call
jmp
cmpsb
adc
outsl
call
jmp
sbb
fs
ret
dec
frstor
fldcw
cmpsl
pop
adc
xor
dec
or
iret
ret
movsb
push
repnz
clc
std
ljmp
pop
pusha
add
xor
dec
or
iret
mov
cmp
jmp
jnp
shll
mov
jmp
and
in
bound
aam
xchg
jg
jl
negb
es
or
iret
imul
jb
arpl
pusha
add
or
outsl
or
add
dec
pusha
add
outsl
add
pusha
add
dec
pusha
add
adc
jo
add
add
aad
adc
jo
je
mov
pusha
or
pusha
or
fidivrs
or
iret
icebp
gs
pushf
outsl
push
or
rorl
adc
jb
lcall
pop
cmp
popa
mov
mov
and
fistpl
inc
mov
push
or
call
jmp
mov
sti
add
add
stos
cmp
dec
cmc
jae
xchg
jmp
cwtl
xchg
fdivrl
sbb
dec
repz
mov
mov
add
mov
jmp
inc
fimull
ficompl
test
jge
or
ret
mov
jmp
pop
add
jmp
mov
lods
addl
lock
lock
xorb
sub
dec
sbb
fadds
aas
dec
out
pop
mov
jmp
mov
jmp
sub
sbb
pusha
notb
push
int
xchg
mov
jmp
pusha
jmp
push
in
add
and
mov
es
sub
dec
sbb
imulb
cmp
adc
xor
add
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
imul
cs
add
std
or
jae
cmpsl
mov
add
mov
jmp
and
or
dec
stc
je
lea
sub
cmp
mov
add
add
jne
mov
mov
mov
setg
or
jbe
scas
jnp
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
add
add
mov
add
adc
fs
sbb
inc
jl
pusha
pop
repnz
inc
leave
pop
cmp
sbb
xchg
push
cmp
daa
inc
mov
push
mov
gs
and
test
test
jl
jne
sub
inc
lock
out
sbb
xorl
xor
add
add
jo
xorl
lahf
xor
adc
in
sbb
inc
loopne
ret
jmp
mov
add
mov
mov
sbb
jb
jnp
jbe
loopne
pop
jl
pop
iret
inc
add
call
jmp
cltd
pop
xchg
repnz
dec
aad
sub
xor
std
jmp
mov
in
sbb
pop
rcll
inc
pop
fdivl
in
pop
fmuls
fdivs
bound
jo
ljmp
pop
pusha
or
and
cmp
dec
or
iret
add
add
pop
sub
jmp
adc
pop
fdivl
in
addb
repz
lock
sar
outsl
xor
ljmp
pop
pusha
add
and
inc
or
iret
xor
or
lahf
push
mov
jmp
imul
lock
hlt
adc
add
jmp
stos
and
roll
shll
xlat
pop
int
addr16
movsl
imul
or
iret
sbb
mov
scas
leave
cmp
in
aas
xchg
add
add
jnp
in
sub
pop
int
addr16
mov
mov
jns
and
or
mov
jmp
loope
out
jno
fisttpl
mov
lahf
cli
or
hlt
cmp
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
jo
add
add
xlat
or
les
rcll
pusha
or
push
or
iret
add
add
inc
mov
sub
mov
stos
out
insl
std
test
dec
roll
aad
push
aad
sub
and
jb
xchg
addb
or
inc
push
xor
es
insl
hlt
pop
imulb
leave
pop
xchg
add
cmp
jne
mov
lock
je
push
sub
ss
mov
fldcw
popl
fwait
or
sub
add
add
pushf
push
cld
jmp
enter
addr16
icebp
imul
insl
fsubrl
insl
hlt
pop
mov
aad
or
adc
add
imul
or
iret
popa
sub
stos
cmp
jmp
cwtl
add
popf
or
and
cli
fs
popf
insb
jmp
mov
jmp
mov
stos
ss
dec
mov
xorl
sub
and
imul
adc
sbb
scas
sub
pushf
sbb
xchg
subl
call
jmp
mov
pushf
sti
push
rcl
push
jne
jmp
push
rolb
shlb
dec
mov
inc
mov
inc
xlat
mov
lods
cmp
add
jmp
mov
jmp
dec
lds
iret
sub
ja
loope
lock
mov
sub
add
jmp
inc
sarl
cwtl
xor
add
jmp
and
test
mov
jl
jle
imul
outsl
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
pop
xchg
add
xor
sbb
cmp
jne
cmp
jmp
push
push
mov
mov
es
sbb
mov
and
je
jmp
mov
ret
scas
pop
repnz
aas
scas
lret
mov
in
mov
jmp
stc
jnp
mov
fwait
push
test
push
mov
mov
std
in
sub
loope
adc
and
jo
loop
sbb
mov
jmp
loopne
mov
jmp
stc
notl
aas
cmpsb
xor
scas
inc
lahf
pop
xchg
repnz
xor
cld
cmp
je
push
call
jmp
fwait
xchg
call
jmp
sbb
js
push
call
jo
loop
or
inc
adc
inc
adc
sbb
cld
cmp
je
push
call
jmp
je
push
jmp
mov
cltd
clc
or
add
add
ljmp
push
jns
jnp
es
mov
or
cmp
insl
hlt
pop
rcl
daa
adc
ljmp
cld
fwait
jbe
or
sbb
inc
jge
outsb
or
adc
push
xor
xor
pop
cmp
sub
jb
je
jmp
inc
pop
push
jne
cmp
jmp
call
jmp
xlat
push
mov
das
jo
call
jmp
int3
popf
push
add
jmp
and
or
add
inc
jb
adc
xchg
call
jmp
xor
xlat
and
add
jmp
notb
add
add
jmp
test
mov
into
jne
jmp
mov
scas
lret
and
cwtl
cmp
add
jmp
mov
jmp
orl
stc
or
ljmp
adc
add
ret
mov
cmp
je
jmp
idivl
mov
shrl
mov
test
adc
mov
add
jmp
out
stc
mov
add
jmp
out
lcall
mov
cmp
jmp
mov
jmp
push
jmp
mov
add
cmp
dec
fsubrp
sub
add
push
fdivl
in
inc
insl
je
jmp
dec
lret
sbb
call
jmp
scas
inc
shll
push
pop
and
adc
adc
popf
pushf
pop
jmp
add
movsl
and
cmp
jmp
inc
fisttpl
call
jmp
mov
mov
sbb
sbb
test
call
jmp
imul
pop
lods
inc
cltd
sub
push
add
fwait
adc
in
je
jmp
push
push
xor
push
call
jmp
pop
roll
aad
xorb
clc
call
adc
cld
jmp
das
mov
xchg
sub
sub
xchg
push
jmp
cmp
push
jmp
push
jmp
ret
rorl
adc
mov
pcmpeqd
cwtl
and
add
ljmp
cld
jmp
inc
dec
into
shll
xor
push
jmp
lcall
add
jmp
pushf
add
in
sbb
push
push
jmp
pop
push
xor
and
mov
call
jmp
scas
sbb
call
jmp
mov
ret
add
popf
stos
ret
dec
sub
jmp
xlat
dec
fdivrl
sti
cmp
jmp
andl
and
sub
dec
mov
jmp
call
jmp
ljmpw
stc
orb
push
push
push
lea
call
push
call
mov
jmp
pushl
jmp
or
dec
std
call
jmp
testl
call
jmp
push
aad
sub
adc
rclb
or
rorl
pushl
jmp
mov
pop
adc
inc
and
add
add
jmp
je
gs
adc
push
mov
jmp
xor
mov
jmp
add
jbe
jmp
test
add
add
jmp
adc
imul
shlb
xchg
xchg
icebp
add
sbb
lret
je
jmp
jbe
addr16
sub
clc
adc
jbe
jmp
es
popf
jmp
cltd
push
push
ja
push
add
nop
sbb
push
pushl
call
mov
mov
jmp
and
lcall
outsb
call
addl
sbb
decl
aas
add
add
sarl
cltd
mov
scas
lret
shll
pop
pop
leave
ret
jmp
jno
inc
into
pop
cmp
jno
mov
inc
mov
icebp
inc
loop
jmp
clc
mov
jmp
inc
rolb
sarb
ret
push
lds
cld
xchg
cmc
add
fwait
jecxz
pop
cmp
add
add
js
inc
out
scas
aas
mov
jmp
testb
and
push
push
jmp
fmuls
mov
mov
jmp
inc
inc
and
ja
xchg
or
sub
stos
andb
jmp
popa
jmp
xchg
jo
jmp
rorb
mov
shll
or
aas
pop
test
call
add
xchg
popf
pushl
jmp
test
aad
int3
pop
ret
ret
lcall
into
jle
bound
add
imul
hlt
xchg
outsb
jmp
bswap
dec
frstor
lret
inc
scas
mov
mov
ret
mov
mov
xchg
push
es
cs
sub
or
jmp
mov
fyl2x
je
lea
movzbl
jmp
pop
xchg
add
pusha
orl
lods
and
mov
add
ret
jne
addl
mov
jmp
das
ja
outsb
cli
jmp
or
scas
or
add
add
jmp
adc
xor
push
jp
push
cld
pop
jb
xchg
testb
jo
pop
add
test
jmp
rolb
add
jmp
movsb
sub
lods
and
adc
dec
mov
lea
jmp
popf
stos
xchg
test
mov
add
aam
jmp
push
test
jge
cmp
ljmp
das
mov
aaa
add
jmp
cmp
popf
or
jb
xchg
test
shll
pushl
pushl
call
jmp
push
pop
push
mov
lea
mov
jmp
xchg
or
in
xlat
jl
jne
out
movhps
aas
and
repnz
jmp
inc
call
jmp
loopne
out
mov
cmp
mov
movsl
jb
cli
push
mov
and
mov
sub
push
push
push
mov
jmp
ds
jbe
imul
adc
mov
inc
mov
jle
insl
hlt
pop
loopne
add
and
call
jmp
lock
cmpl
and
mov
mov
inc
and
ss
pop
jmp
push
call
jmp
jge
gs
push
sub
dec
test
mov
and
jae
push
jmp
dec
rclb
xor
sarl
gs
pop
or
in
pusha
notb
and
lea
jmp
adcb
out
movsb
adc
jns
jg
jmp
sub
xor
mov
sub
inc
cmp
jb
lea
jmp
ret
push
shlb
xchg
mov
add
add
nop
icebp
sti
lcall
shr
add
add
test
cmp
jbe
mov
jmp
popa
sti
imul
dec
outsb
stc
imul
inc
daa
rclb
sub
or
add
add
ljmp
fsts
jmp
mov
cmp
xor
and
jmp
sbbb
or
sub
adc
in
sbb
add
lret
je
mov
pushl
pushl
jmp
std
dec
or
add
movzwl
jmp
mov
jmp
push
fisttpl
fnstsw
sub
push
mov
and
jmp
mov
fdivrs
insl
hlt
pop
in
nop
sbb
sub
call
mov
call
mov
mov
jmp
mov
scas
lret
icebp
jg
mov
fs
adc
push
fmuls
fdivrs
movsl
xor
sbb
pop
test
paddb
mov
call
mov
mov
jmp
or
daa
and
jmp
mov
jmp
rolb
mov
negb
and
jl
mov
mov
mov
push
call
mov
jmp
loop
loope
jae
jge
jns
jmp
imul
mov
adc
xor
or
jl
jne
xor
dec
ret
repz
push
lods
outsl
add
pop
rclb
sub
fs
push
mov
pop
adc
push
push
lea
call
jmp
cld
xchg
cmc
add
fsubr
loop
sti
jmp
addb
xchg
das
in
sti
jmp
sahf
pop
xchg
repnz
incl
cmp
and
inc
and
jmp
ds
icebp
jo
xorl
cmpb
jnp
in
cmp
in
decl
test
jne
mov
call
jmp
and
adcb
subb
fcoms
cmp
pop
jmp
inc
int
and
es
inc
aad
dec
scas
rcrb
test
push
mov
pop
jmp
cmp
dec
cmp
push
cwtl
adc
adc
push
imul
adc
cmpsl
pop
adc
mov
jmp
fcoml
mov
inc
call
push
lea
lea
call
jmp
jl
jl
testb
pop
aas
lret
cld
xchg
cmc
add
out
adc
push
jmp
push
mov
jmp
pop
iret
pop
cmp
jle
inc
shll
inc
and
pop
cmp
pusha
push
ss
xor
cmp
jae
xor
lea
push
mov
jmp
jle
jns
jmp
lret
popa
pop
jbe
jmp
cmp
sbb
icebp
add
add
imul
adcl
test
jge
popfw
add
std
or
cld
push
lea
push
jmp
mov
lods
lods
xor
gs
pushf
outsl
movsb
push
pop
mov
clc
cmpsl
pop
adc
mov
jge
je
insl
cmc
jnp
mov
fs
push
in
push
jmp
out
and
movb
inc
jmp
je
jmp
repnz
and
jg
push
scas
sub
sub
sbb
mov
gs
jl
sbb
adc
push
add
add
push
aaa
ret
aas
scas
lret
insb
in
sbb
mov
lea
jmp
pop
xchg
add
sahf
insl
cmpb
dec
and
jmp
sub
repz
jmp
add
orb
adc
pop
rolb
shlb
shlb
test
jmp
call
shll
popa
add
inc
sub
enter
pop
jmp
inc
in
cmpsb
pusha
push
aad
test
sti
decl
test
add
add
xchg
sti
jmp
xor
jmp
pop
roll
aad
mov
xchg
fwait
or
int
into
test
mov
jmp
jno
jns
jmp
icebp
push
lahf
push
int3
push
lret
mov
ss
test
mov
jmp
insb
sti
imul
adc
push
lds
enter
dec
fnstcw
pop
sbb
cltd
mov
push
push
pushl
call
jmp
mov
movsb
ret
ds
add
arpl
dec
sub
add
cmp
sub
or
xchg
popf
test
mov
jmp
hlt
push
jmp
adc
add
jp
ja
xorb
jg
orl
call
pop
jmp
in
data16
xchg
outsb
popf
mov
enter
push
in
psubb
lea
jmp
mov
iret
adc
or
cmp
dec
cwtl
scas
int3
jecxz
mov
pop
adc
adc
mov
jmp
sbb
pop
mov
jg
sub
cmp
mov
fwait
xchg
enter
sti
jmp
in
jmp
jge
roll
mov
jmp
aad
sub
outsl
cmc
imul
pushl
call
mov
mov
jmp
loop
jmp
jge
mov
mov
sbb
inc
jecxz
xor
jmp
pop
adc
mov
test
add
scas
xor
int
lcall
adcl
test
xchg
movzwl
inc
add
cmp
jb
jmp
stc
outsb
call
jmp
mov
leave
fldl
mov
imulb
lcall
inc
lea
mov
jne
jmp
cli
jg
mov
xchg
sbb
pop
jmp
movsb
sub
xchg
pop
bound
outsb
popf
dec
loope
sti
sahf
insl
sahf
shlb
mov
cmp
je
mov
add
call
jmp
or
call
jmp
mov
idiv
dec
dec
fidivrs
inc
and
push
jns
push
out
jg
jmp
aad
jmp
insl
std
test
scas
and
outsb
fistps
jnp
popa
jmp
loopne
cltd
roll
add
dec
or
cmp
jmp
inc
int
and
add
lock
bound
push
icebp
dec
insl
rorl
shrb
out
xchg
popf
pushl
mov
jmp
xchg
add
xor
or
sar
inc
adc
and
jmp
xchg
add
std
or
push
sahf
or
cmpsb
pop
fimull
mov
cmp
sbb
loope
inc
or
andb
sub
jo
jmp
pminub
mov
jmp
and
roll
dec
jmp
inc
aad
sub
je
xchg
pop
bound
or
pop
or
mov
mov
shrl
mov
inc
mov
adc
addl
test
jmp
fildl
mov
stos
jecxz
call
and
movsb
lret
addl
jmp
jmp
stc
or
sbb
xchg
pop
mov
stos
movsb
and
sbb
clc
jne
jmp
sub
dec
iret
pop
cmp
sub
mov
dec
mov
and
mov
pop
ret
jmp
popa
mov
jmp
lds
popf
adc
scas
sub
mov
jmp
dec
leave
pop
cmp
cmp
push
ret
cmpsb
push
mov
std
sbb
popl
jmp
gs
jge
testl
data16
popf
or
sbbb
jmp
sbb
and
jmp
push
jecxz
push
in
popf
adc
jge
je
push
and
mov
mov
mov
neg
mov
inc
cmp
jmp
push
je
out
sub
dec
frstor
and
imul
incl
add
jmp
jge
arpl
cmc
inc
mov
mov
push
jmp
cltd
or
dec
fimull
fidivl
push
ret
cmpsb
push
in
pop
enter
mov
xor
movzbl
inc
cmp
jb
add
jmp
sbb
dec
push
int3
inc
and
push
int3
call
pop
movzbl
mov
push
mov
sub
jmp
inc
jecxz
push
in
push
int3
inc
and
aaa
scas
mov
movzbl
jmp
gs
xchg
mov
mov
jmp
xor
lods
xor
hlt
push
cld
xor
pop
jmp
rclb
mov
sub
icebp
jmp
mov
push
aam
sub
dec
sub
cmp
cs
dec
ret
addl
mov
jmp
mov
mov
ja
xorb
sarl
mov
jmp
mov
jmp
add
data16
test
mov
jecxz
mov
std
inc
decl
jne
xor
xor
xor
mov
jmp
and
jmp
or
sbb
js
es
cs
jbe
cmpl
inc
shll
aad
mov
inc
jmp
inc
into
pop
cmp
jno
fisttps
fsts
imul
insl
ret
cltd
clc
or
jne
pop
movl
lea
pop
jmp
setle
cmpsb
psadbw
xchg
pusha
rcl
xor
test
jne
leave
ret
jmp
sub
adc
movsb
aaa
cmpsl
ret
cmp
insb
mov
sub
jmp
jecxz
icebp
cmpsl
pop
jmp
ret
cmp
add
jmp
sub
jb
jg
jmp
aas
lret
sar
mov
add
test
fdivrs
stos
in
jno
xorb
setg
or
jnp
testl
add
mov
xor
mov
jmp
in
hlt
xchg
outsb
xchg
rolb
xor
sub
notl
cs
pop
pushl
jmp
add
xchg
adc
mov
dec
mov
in
out
call
inc
and
popf
jmp
ds
inc
roll
aad
mov
add
add
jmp
cmp
stos
add
add
mov
orl
les
sbb
mov
xchg
mov
call
dec
das
ficompl
mov
fwait
decb
mov
clc
loopne
loope
sti
ljmp
mov
lea
call
pop
pop
lea
jmp
xchg
add
pop
push
jmp
jge
arpl
cmc
inc
pushf
pop
push
jmp
adc
je
jo
loop
fs
popa
add
pop
and
and
jmp
and
dec
fistpll
sahf
stc
or
inc
mov
jmp
ret
pop
into
test
mov
xor
es
cs
fistl
out
cli
popf
insb
test
fldenv
add
add
jmp
sub
fwait
or
push
mov
cmpsl
ret
rorb
jmp
cli
cmpsb
mov
or
inc
pop
fimull
fidivl
mov
mov
xchg
popa
jno
fs
sub
mov
mov
push
jmp
xchg
xchg
lock
dec
int3
inc
and
mov
sbb
sub
dec
dec
pop
jmp
and
jmp
jl
push
cld
sbb
ret
add
xor
mov
jmp
or
or
mov
jmp
test
gs
add
test
add
mov
in
jns
mov
sub
pop
sbb
dec
loopne,pt
clc
jmp
xor
xor
scas
sbb
mov
iret
jmp
push
jmp
rcll
jge
add
std
outsb
cld
fwait
jbe
push
lds
iret
jl
std
insl
hlt
pop
lods
aam
shlb
test
add
popa
mov
jmp
mov
mov
and
sbb
int
xchg
push
or
dec
xor
sub
jmp
add
int
lds
mov
lea
jmp
sbb
dec
aad
sub
xor
rorl
imul
jl
into
pop
cmp
push
popf
sbb
sub
pop
xor
testb
movzbl
add
cmp
jmp
lock
mov
jmp
xchg
pop
jmp
mov
rolb
adcl
dec
fistpll
lock
call
jmp
or
pop
fistpl
xchg
addr16
bound
inc
pop
sbb
cwtl
adc
xchg
add
jne
mov
mov
and
cmp
jne
addl
jmp
add
es
pop
test
mov
pusha
jne
jmp
mov
lea
push
call
addl
jmp
cmp
jmp
jg
add
and
aaa
cmpsl
ret
into
inc
shll
out
arpl
and
pushl
jmp
repz
out
jmp
jge
cmp
in
jl
jne
sub
inc
adc
mov
xorl
pop
int
and
bound
je
out
dec
jmp
mov
pop
jmp
jmp
jmp
addr16
jmp
adc
xlat
dec
ret
mov
test
or
je
sbb
sub
mov
insb
ficomps
pop
jmp
add
jmp
jp
jp
in
imul
lcall
out
jno
inc
jl
leave
ret
jmp
out
in
sti
pop
xchg
jmp
ja
push
cld
adc
sbb
out
adc
or
mov
shlb
xchg
adc
pop
and
sub
andb
mov
adc
add
loop
pop
loop
std
jne
mov
or
push
mov
sub
pop
je
push
mov
add
lea
call
jmp
adc
mov
add
add
inc
addr16
jge
notl
or
dec
adc
cltd
add
add
pop
cmp
cmp
jae
xchg
dec
rclb
adc
ja
xorb
pushl
jmp
mov
xchg
repz
test
repnz
fildll
push
pop
jmp
mov
pop
mov
push
cmpsl
out
jle
mov
lods
pop
out
jns
mov
mov
mov
andb
sub
jo
jmp
mov
xchg
jo
mov
inc
es
inc
mov
in
out
jo
test
sub
and
and
lock
jmp
mov
jmp
dec
aam
sub
jp
in
add
outsl
lcall
cwtl
add
sar
inc
adc
cmp
xor
ficompl
test
lock
bound
ret
dec
sub
xor
ljmp
add
add
jg
jmp
fwait
jbe
jmp
std
test
push
shll
cmp
pushl
mov
add
je
or
add
jmp
dec
je
jmp
inc
ja
mov
jmp
fists
lods
pop
mov
pop
test
dec
out
ja
xorb
movzbl
jmp
jg
popa
add
xor
cmp
jmp
cmp
ret
jmp
mov
fwait
decb
pop
stos
sbb
in
sbb
and
mov
cmp
jne
addl
mov
jmp
inc
int3
popf
adcl
cmp
pusha
es
popl
jmp
inc
rolb
sarb
pop
xchg
repnz
xchg
jne
loopne
outsl
lea
jmp
push
jmp
fisttpl
movsb
push
loop
ljmp
jp
in
das
cs
rolb
sub
push
mov
push
push
mov
lea
mov
jmp
pop
test
jge
outsb
sub
daa
or
add
jl
pop
int
lea
cs
jmp
or
loope
jmp
xor
aam
fnstcw
pop
and
sbb
daa
mov
and
das
push
xor
clc
cmpsl
pop
adc
push
sbb
ja
jmp
pushf
jmp
xchg
adc
pop
xchg
repnz
or
sbb
je
jecxz
data16
jmp
movb
inc
cwtl
daa
mov
sbb
out
mov
into
call
push
lea
call
pop
jmp
push
mov
and
jmp
ficoml
mov
jns
jmp
nop
sbb
sahf
pop
sub
add
xchg
popf
pushl
jmp
jno
outsb
or
or
pop
cmp
outsb
sub
pusha
mov
jmp
and
popf
adc
andb
jmp
dec
fimuls
push
in
jge
je
sub
pop
jp
es
jmp
ljmp
fwait
jbe
xchg
add
cmp
dec
fnstcw
cli
jg
jmp
and
xor
fwait
or
jns
xlat
inc
and
xor
out
incl
cltd
or
jno
inc
mov
ja
gs
mov
jmp
dec
rolb
rclb
sub
stos
cmp
inc
xchg
adc
in
sbb
xor
shr
decl
sbb
jbe
push
pushl
jmp
loopne
popl
lea
jmp
repz
xchg
rclb
mov
icebp
nop
arpl
mov
mov
pop
jmp
int3
dec
fidivrs
push
cmp
and
xchg
popa
and
push
aam
inc
and
and
sbb
add
add
pusha
lcall
sbb
aad
lock
push
jmp
lcall
out
aad
jmp
and
cvtpi2ps
pop
roll
aad
lock
dec
pop
jne
jmp
das
xor
mov
call
jmp
inc
aad
sub
insb
and
adc
iret
jg
xchg
mov
ret
jmp
inc
aam
sub
das
dec
mov
ljmp
add
sub
sbb
mov
movsl
inc
sti
popa
icebp
nop
arpl
into
jmp
js
ja
loope
test
mov
mov
xchg
pushl
call
lea
push
push
call
jmp
addr16
push
fisttpll
mov
jmp
nop
adc
daa
mov
and
stos
add
and
and
call
add
xchg
popf
pushl
jmp
mov
stos
outsb
in
jge
notl
shl
int3
add
or
andb
sub
jmp
lds
add
pop
lea
cltd
clc
or
pusha
in
sbb
cmp
pop
shll
jmp
and
aaa
push
mov
test
stos
push
iret
cwtl
movsb
mov
ljmp
or
xlat
pop
int
andl
out
adc
dec
xchg
mov
jmp
jno
sar
inc
adc
xchg
xchg
and
jmp
dec
lret
pop
ds
push
fdivl
in
jno
xorb
loop
pop
loop
mov
jmp
cmp
jmp
lret
xor
mov
jmp
pop
dec
jecxz
je
jmp
cltd
or
or
in
movsl
call
cs
incl
test
jmp
push
push
xor
jge
rolb
sarb
aad
sub
push
sub
jnp
cmp
sti
incl
jmp
fildl
mov
mov
popa
icebp
nop
arpl
pop
mov
out
adc
push
pop
jmp
mulb
fs
jmp
in
jb
xchg
inc
fdivl
in
clc
jp
jp
imul
add
jmp
mov
and
sti
inc
rclb
sub
mov
inc
mov
mov
jmp
adc
mov
jmp
dec
enter
sbb
adc
int
jmp
push
shlb
popa
nop
arpl
jns
jmp
mov
shlb
cmpl
rclb
inc
jno
clc
sahf
adc
jno
call
pop
xchg
repnz
mov
xchg
pusha
xchg
push
jb
into
call
cmpl
push
setne
dec
and
jmp
mov
jmp
lret
inc
fidivrl
das
dec
mov
inc
mov
lahf
adc
add
jmp
aam
movsb
enter
popf
pop
adc
dec
mov
mov
fwait
or
sub
push
shlb
add
cmp
je
popa
mov
jmp
ljmp
lcall
and
mov
inc
mov
bound
call
mov
push
lea
call
jmp
adc
daa
jmp
push
jmp
divl
xchg
add
mov
mov
ljmp
add
ret
jmp
jmp
jmp
jge
jns
je
out
imul
rcr
xlat
in
jmp
daa
stos
cmp
bound
out
aam
sub
dec
das
fidivrl
push
sbb
xchg
sbb
sub
jmp
xchg
pop
xchg
jmp
inc
sub
aaa
lods
sub
data16
xchg
outsb
fwait
xchg
adc
dec
ret
ret
jecxz
enter
push
add
addl
mov
movzbl
jmp
mov
mov
mov
andb
sub
jo
jmp
xchg
push
mov
es
sti
jno
xorb
mov
inc
mov
cmpl
or
pop
rcrb
xchg
addr16
pushf
xor
inc
lea
mov
jmp
cmp
adc
xor
scas
aas
pop
test
cltd
roll
add
jne
addl
jmp
ret
loopne
mov
jg
popl
jmp
inc
inc
and
ja
lret
lret
add
scas
add
cmp
je
popa
mov
jmp
xchg
and
movsl
int
into
test
lea
jmp
sahf
add
std
or
pop
push
xor
sub
nop
jp
pushl
jmp
cmpsl
lods
lret
inc
scas
into
push
mov
sbb
xchg
adc
das
fs
xlat
cmpl
jmp
loopne
lock
bound
mov
dec
xor
jmp
jp
outsl
or
out
iret
dec
frstor
mov
stos
aad
shll
sar
inc
adc
test
loope
xchg
add
aas
jne
push
push
pushl
lea
call
jmp
int3
outsl
pop
pop
jmp
jmp
push
aam
sub
xor
push
je
insl
hlt
pop
out
ljmp
add
ret
jmp
mov
shll
fidivrl
pushf
sti
push
mov
fisttps
fnstenv
js
popf
pushl
mov
jmp
mov
roll
jmp
cld
jo
xorl
jge
fisttpl
mov
aam
sbb
call
jmp
push
ret
ret
hlt
push
cld
dec
nop
pop
xchg
repnz
and
jmp
mov
mov
and
mov
xchg
and
test
pop
test
nop
sub
pop
jmp
sub
jle
es
cs
xchg
popf
jmp
inc
xor
add
add
jmp
fadds
mov
stos
arpl
push
or
inc
push
pushf
jmp
xor
cmp
cs
jmp
pusha
jmp
rcll
mov
dec
das
fidivl
ret
mov
stos
adc
ss
pushl
jmp
iret
jmp
or
xchg
add
pop
cmp
add
fcomps
stos
cbtw
addl
xchg
push
test
push
jmp
xlat
xor
sub
dec
decl
pop
cmp
and
cmc
cmp
jmp
jbe
xchg
cmc
add
sub
dec
call
test
movsb
add
jmp
in
jge
testl
jmp
xchg
sbb
hlt
push
cld
sub
mov
dec
mov
scas
pop
cld
addb
mov
jmp
insb
loop
je
in
jge
je
sub
pop
int
addr16
inc
shll
and
cmp
jne
addl
mov
jmp
xor
in
jmp
push
push
xor
jge
inc
aad
dec
in
fdivl
in
ds
xor
mov
jmp
inc
jecxz
push
in
xlat
dec
ret
mov
xchg
mov
popl
jmp
pop
test
mov
dec
mov
mov
fs
jmp
rcrb
loopw
or
push
pushf
sti
push
loope
popa
jmp
sub
xor
pop
fisttpll
out
pop
fwait
sbb
aad
repz
mov
ret
sbb
xor
daa
inc
mov
add
cs
jmp
jae
outsl
or
hlt
cld
jne
mov
fstpl
scas
pop
mov
jbe
outsl
rclb
dec
adc
lock
jo
mov
jmp
jecxz
jecxz
jne
or
je
dec
dec
je
mov
ret
jmp
or
adc
push
shll
xchg
mov
xchg
out
int
popa
ret
jmp
adc
push
jo
jmp
ret
push
mov
sbb
out
jg
jmp
nop
arpl
mov
roll
lods
and
mov
mov
es
gs
push
adc
addl
jmp
jmp
aam
fdivrl
jg
jmp
test
and
jmp
jmp
fldl
dec
movsb
add
js
jne
out
push
pop
leave
test
nop
pushl
rol
inc
paddb
mov
sub
jmp
test
ret
ret
mov
in
or
jb
jmp
and
iret
add
jmp
cmp
xchg
pop
xchg
adc
ficompl
xchg
lea
decl
jmp
gs
jge
testl
loop
pop
xlat
inc
and
cmp
inc
shll
arpl
pop
enter
dec
jmp
mov
lds
jmpw
jmp
out
jmp
jmp
mov
push
xor
ja
sbb
add
add
jmp
mull
icebp
push
xchg
add
jg
mov
fidivrl
lcall
pop
cmp
ljmp
cltd
push
cmp
add
add
jmp
fisttpl
movsb
push
loop
cmp
cmp
mov
push
sub
mov
call
pop
jmp
add
or
lock
add
xor
jne
jmp
mov
jmp
in
adc
imul
pop
jp
adc
outsl
lcall
stc
sbb
add
int
aad
ret
jmp
fstpl
xchg
lods
call
cmpl
pop
bound
cwtl
imul
outsl
jo
jmp
inc
adc
inc
inc
lea
jmp
bnd
lea
jns
mov
sub
mov
and
sti
pop
inc
add
cmp
jmp
push
mov
gs
sbb
xchg
jae
pop
lret
scas
pop
mov
or
and
sub
add
add
jmp
clc
movl
jmp
lret
dec
fstpt
lret
mov
in
jmp
xchg
pushl
shr
mov
xchg
mov
mov
es
ret
push
mov
pop
cmp
jns
and
movsl
pushl
add
call
pop
jmp
jmp
stos
cmp
jnp
mov
rorb
pushl
lea
call
pop
jmp
and
sahf
xor
jmp
repnz
insl
ret
popa
add
inc
loopne
jmp
jge
jle
jp
in
das
pop
jmp
xchg
setg
or
mov
sarb
movsl
xor
xor
insl
lods
jne
jmp
imul
jp
outsb
or
xor
loopne
loope
adc
or
ror
push
jmp
mov
cmpsl
ret
jae
imul
add
outsl
mov
gs
rorb
test
rolb
add
jmp
mov
cmpsb
shll
jo
push
push
pop
sub
jmp
sub
loop
clc
lahf
push
sbb
xchg
ret
add
jmp
add
cs
lcall
mov
sbb
inc
push
dec
daa
fcmove
push
pushf
jmp
sbb
pop
int3
inc
and
loop
je
xor
bound
pop
adc
roll
jmp
mov
jmp
sub
jns
jle
call
lds
int
enter
sub
cmp
jmp
mov
in
sub
rclb
mov
jmp
mov
jmp
call
and
test
pop
int
xchg
push
add
popf
pushl
mov
jmp
movzbl
jmp
add
sbb
cmp
jmp
lret
push
shlb
mov
adc
data16
shlb
xorb
cmpl
add
jmp
xchg
pop
xchg
adc
out
adc
pop
pushf
sbb
aad
int3
fisttpl
cmp
in
bound
fidivrs
lock
bound
mov
ret
fcomi
fs
and
into
push
adcl
and
and
jb
je
jmp
push
ret
add
add
jmp
rcrl
stos
pop
xor
sahf
jmp
add
cmpsl
aaa
push
mov
lods
pop
sti
mov
std
or
pop
rolb
rclb
shlb
push
andb
sub
jo
mov
and
cmp
jmp
hlt
jg
mov
jns
jns
jmp
in
jle
mov
xchg
popa
fidivrs
jmp
push
jmp
cmp
add
lret
pop
enter
das
mov
int3
pop
leave
test
lock
mov
push
jmp
or
movl
adc
xor
jo
loop
mov
stc
in
lahf
pop
or
or
sub
push
clc
out
gs
popf
popl
jmp
mov
sub
cmpl
jbe
mov
jmp
xor
lock
jmp
fidivl
adc
add
jmp
sbb
mov
xchg
adc
out
jne
mov
cld
adc
dec
hlt
mov
call
pop
jmp
jb
inc
lret
movb
mov
and
fcomps
ret
push
lds
xchg
or
les
sbb
dec
movsb
push
aad
sub
xor
dec
test
setg
or
test
push
jmp
fs
adc
lods
sub
sub
lds
lock
jp
inc
dec
ret
jmp
lea
jmp
sub
rcrl
test
mov
ss
pop
into
test
jmp
push
jmp
lea
jmp
out
cltd
push
es
sbb
xchg
dec
pop
pop
mov
rcrb
imul
je
jmp
mov
mov
and
lods
add
pop
or
jmp
les
pop
in
push
lds
iret
fs
jno
jecxz
push
xchg
jb
es
call
xchg
es
pushl
jmp
lcall
push
jmp
dec
fstpt
sub
lds
or
jl
fsubrl
pop
mov
mov
mov
andb
sub
jo
jmp
mov
rcll
cmp
aas
dec
fisttpl
fstpl
lods
lret
inc
shll
or
add
xchg
add
add
pop
repnz
lods
or
jle
jecxz
push
in
cmp
and
inc
xchg
sbb
adcl
pop
lret
scas
pop
mov
dec
frstor
pop
movl
jmp
pop
fimuls
push
mov
scas
leave
cmp
add
fwait
adc
adc
jmp
mov
scas
lret
inc
leave
pop
cmp
outsb
jle
addr16
sub
insb
das
adc
lea
jmp
stos
es
cs
popf
adc
dec
inc
pop
pop
xchg
jmp
jmp
lea
jmp
rolb
mov
not
inc
shlb
jne
out
pop
pop
and
dec
out
mov
call
add
pop
test
je
jmp
xor
gs
mov
jmp
insl
std
test
jns
jge
testl
lcall
lea
jmp
movb
inc
jmp
xchg
and
movsl
inc
shll
fs
cmp
mov
leave
jne
movl
jmp
jl
jne
out
setne
and
stc
mov
xor
inc
shr
add
add
mov
and
sub
ds
cmpsl
ret
aad
les
stc
jmp
jmp
pop
mov
decl
test
jne
movl
lea
jmp
scas
add
add
imul
ret
xchg
pop
bound
sub
dec
dec
xor
add
add
inc
cld
lcall
iret
or
bound
test
es
cs
or
xchg
movb
inc
jmp
xchg
and
icebp
jne
xchg
testb
cmp
mov
cwtl
push
lock
aad
jmp
decl
jmp
loopne
lcall
fnstcw
adc
push
push
fisttpll
out
repz
out
lret
pop
test
jne
mov
mov
call
jmp
cmp
movsl
xor
aas
jae
pushf
jmp
lahf
or
in
mov
cwtl
cmp
rolb
insb
xacquire
jmp
adcb
out
mov
mov
jl
aas
cltd
push
pushf
sti
push
mov
jmp
mov
aad
xchg
and
aam
fdivrl
mov
sbb
jnp
lahf
outsb
jne
mov
leave
ret
jmp
pop
cmpb
xor
mov
jmp
adc
jns
xlat
popa
pop
pop
mov
jmp
pop
int
addr16
rcrl
loopw
or
je
lea
pusha
jmp
andl
cmp
inc
aad
dec
movsl
sti
jns
mov
add
sub
push
popa
bound
inc
clc
pushl
push
lea
jmp
mov
xchg
and
les
add
clc
add
call
fsubl
adc
and
int
and
es
lret
pop
ds
xchg
arpl
lods
jmp
sub
testl
xor
inc
insl
in
sbb
mov
adcl
dec
movzbl
add
cmp
je
jmp
bnd
mov
mov
in
mov
jmp
mov
jmp
cmp
jmp
scas
inc
shll
and
sbb
push
aaa
ret
pop
repnz
fs
cmp
jne
addl
mov
jmp
mov
arpl
push
cld
push
inc
fisttpl
pop
cmp
jo
popa
arpl
popl
lea
jmp
lods
push
jmp
dec
ret
xchg
lock
push
xor
and
push
mov
es
or
call
jmp
inc
fistpl
roll
rcll
ret
push
lds
daa
enter
add
jno
lret
lret
mov
inc
push
xor
sub
inc
mov
xchg
popf
sub
push
push
pushl
lea
push
mov
jmp
pop
lea
push
jmp
js
mov
inc
rcll
push
lock
lea
out
adc
push
jecxz
movl
sub
inc
shlb
add
jo
sbb
jle
or
push
jmp
add
and
int
mov
jmp
mov
xchg
repz
fcmove
inc
fidivrl
cmp
push
jmp
iret
push
mov
jmp
les
lods
pop
hlt
sarl
call
jmp
into
pop
int3
stos
data16
scas
cmp
pop
pop
jp
and
cmp
push
jmp
into
lock
add
dec
add
add
lods
test
xchg
adc
addl
mov
sar
inc
adc
push
lret
lret
scas
aas
pop
test
push
dec
ss
sahf
lcall
push
in
jmp
sti
roll
lea
jmp
push
lahf
punpckhdq
icebp
add
push
mov
jle
arpl
test
call
lret
lea
call
jmp
int
ret
cmpsb
push
mov
adc
xorb
test
jl
mov
jmp
push
jmp
imul
addb
repz
sti
hlt
ja
xorb
mov
jmp
in
data16
xchg
outsb
popf
dec
outsl
leave
jmp
sub
dec
ret
ret
jnp
mov
jo
insb
or
mov
mov
add
test
decl
out
jmp
push
xchg
pop
bound
daa
rclb
xor
pop
jmp
jmp
mov
inc
mov
jmp
arpl
add
inc
xchg
add
sbb
jmp
push
in
pop
out
in
jle
leave
mov
sti
call
into
adc
outsb
xorl
sub
movsb
ret
ds
and
mov
xor
movsb
cmp
sbb
pop
adc
outsl
hlt
push
cld
push
mov
test
cld
call
test
jmp
push
int
and
aas
test
add
jmp
pop
mov
xchg
mov
jmp
mov
jmp
jmp
xchg
outsb
xchg
mov
cmpsl
aaa
push
mov
cmp
cmpl
jne
dec
jns
jmp
mov
jmp
cmp
mov
jg
bound
insl
hlt
pop
loopne
add
jmp
push
outsl
adc
sti
jmp
mov
mov
sbb
in
notb
lahf
js
call
lea
push
pushl
call
jmp
mov
mov
sub
nop
push
popa
nop
jb
jb
mov
jmp
push
dec
decb
add
xchg
pushf
sti
push
in
add
insl
std
test
mov
movb
inc
jmp
push
lcall
sbb
sub
decl
jmp
push
lds
iret
jnp
mov
jns
and
sahf
pop
into
pop
cmp
jg
mov
movb
inc
jmp
aas
scas
aas
pop
test
fldcw
orl
mov
leave
jmp
mov
std
lcall
loope
dec
pop
int3
stos
sarw
adc
sub
lods
cmp
popf
or
decl
test
jne
mov
lea
jmp
jmp
leave
push
mov
hlt
xchg
outsb
jmp
mov
adc
jne
jmp
ret
jmp
ljmp
adcl
or
in
icebp
outsl
out
jg
jmp
test
cld
call
call
add
push
jmp
roll
dec
cltd
sub
popf
jmp
sub
push
ds
pop
jmp
jecxz
cmc
pushf
outsl
cwtl
fistpl
stos
data16
repnz
jmp
push
in
or
rcrb
cwtl
imul
sub
add
xchg
jmp
sti
jno
xorb
cs
dec
fstpt
shll
sbb
popf
jmp
bnd
mov
jb
sub
arpl
xchg
gs
movsl
push
push
insb
andb
sub
jo
mov
and
jmp
imul
int3
pop
repnz
fs
enter
and
push
cli
mov
sub
daa
mov
dec
fstpt
lret
cmc
and
jecxz
push
or
add
add
rorb
cmpl
aaa
mov
jmp
add
outsb
sti
imul
sbb
mov
inc
mov
adc
cli
pushl
jmp
sub
ss
lds
iret
dec
push
cld
je
dec
adc
in
scas
adc
jmp
pop
fwait
or
push
loope
lock
bound
inc
cmpsl
push
xor
mov
ret
jno
popa
jmp
insb
repz
cmc
push
roll
dec
mov
je
lea
sahf
shll
jge
call
cltd
roll
add
jne
addl
jmp
jns
xor
bswap
ljmp
add
add
jmp
xchg
pop
xchg
adc
dec
ret
cmpsl
lods
es
cs
ds
je
popa
mov
jmp
out
data16
xchg
outsb
mov
test
push
jmp
ljmp
call
sahf
pop
xchg
adc
xor
add
fs
jmp
dec
lret
pop
ds
addr16
mov
jmp
repz
add
js
jle
call
shll
mov
cmpl
sahf
or
dec
cmp
jmp
repz
insl
fnstenv
pop
jmp
mov
es
jmp
push
push
xor
addr16
or
xchg
mov
mov
mov
inc
pushl
jmp
push
addr16
sbb
outsb
test
shrb
adc
faddp
rolb
add
jmp
in
jmp
call
aaa
mov
jecxz
js
jmp
jmp
inc
push
xor
daa
cmp
sub
jne
mov
add
mov
in
add
add
push
push
mov
mov
add
shr
jmp
push
xchg
out
lea
push
call
jmp
popf
test
jmp
jl
imul
xor
push
divl
xchg
loopne
clc
lahf
push
test
jmp
xchg
and
icebp
jne
test
shl
jg
mov
rorb
adc
lods
pop
jne
jmp
mov
std
or
out
push
mov
jmp
ds
inc
mov
shlb
xchg
les
adcl
push
mov
ret
popf
push
pushf
sti
push
mov
sahf
das
jo
sub
push
je
data16
cmpsl
es
jmp
inc
jmp
stc
push
popf
or
push
lret
cmc
mov
mov
and
test
cld
jmp
fadds
add
inc
es
lods
movsb
ret
ds
ret
stos
pop
test
shlb
sub
jmp
xchg
adc
push
pushf
sti
push
jmp
jmp
jge
ret
mov
add
test
ljmp
pop
lea
cmp
jmp
sub
jmp
lods
xor
fmuls
or
xor
mov
jmp
in
outsb
cld
fwait
jbe
pop
test
jge
cmp
aam
out
mov
jmp
sub
push
sub
pop
push
mov
jmp
push
cmp
jmp
mov
shlb
clc
test
xchg
icebp
add
inc
push
xor
daa
adc
mov
jmp
push
fisttpll
out
or
add
push
mov
jle
imul
xchg
sbb
push
mov
test
int
mov
inc
mov
inc
iret
pop
cmp
add
out
fld
inc
adc
add
add
add
add
imul
adc
dec
pop
enter
jle
adc
lea
enter
jmp
cwtl
inc
lea
jmp
pop
xchg
or
xor
sub
cmp
cmp
test
push
lods
jb
jnp
in
inc
stos
xlat
int
notl
andl
shr
dec
mov
add
add
mov
rorb
mov
and
push
inc
cmp
jne
cmp
jne
jmp
faddl
pop
and
xor
jmp
sbbb
out
sbb
pop
int
lea
xchg
add
sahf
sbb
inc
and
dec
mov
decl
jmp
adc
shr
ds
jno
xor
lret
mov
and
xchg
daa
jmp
jmp
pop
fmuls
fdivs
imul
divl
xorb
jp
in
lea
jmp
movb
inc
jmp
pop
leave
ret
jmp
ret
inc
fidivrl
in
je
jo
imul
daa
test
add
xchg
popf
pushl
jmp
xor
xchg
jmp
dec
push
xor
cmp
xchg
pop
bound
cmpsb
push
mov
aas
pop
jne
sti
mov
jmp
cmp
adc
or
cmp
xor
cmp
pushf
jmp
les
mov
fidivrl
stos
into
cmp
fsubrs
andb
daa
inc
mov
jns
jle
call
add
dec
mov
xchg
sbbb
pop
jmp
mov
sahf
add
aaa
into
push
lret
lahf
sbb
rorb
mov
nop
testl
sub
popa
and
in
outsb
cld
fwait
jbe
fistpl
test
pop
and
cmp
xor
divl
xorb
dec
fdivrs
shlb
jecxz
jne
push
ret
cmpsb
push
mov
dec
test
lret
js
mov
pushl
xorb
dec
ret
sbbb
or
pop
das
mov
sbb
and
sub
push
xor
ljmp
xchg
outsb
dec
fstpt
pop
and
bound
subl
aas
lret
movsb
cmp
inc
pop
ret
ret
pop
xchg
repnz
jp
or
sbb
xchg
pop
loop
notl
lds
stc
or
stc
jge
je
jnp
loop
pop
loop
mov
cmpsb
shll
cmp
stos
lret
dec
inc
sub
jo
mov
and
cmp
jmp
lahf
sbb
iret
pop
cmp
and
fdiv
adcl
test
inc
shll
cld
fwait
jbe
int
fidivrl
or
adc
in
sbb
adc
fimuls
inc
push
xchg
or
sub
xchg
lds
scas
pop
ljmp
sub
or
pop
aas
lret
sti
imul
dec
xchg
add
insb
mulb
cmp
push
hlt
sbb
popa
sbb
mov
ret
stos
int
mov
inc
lea
insb
or
out
mov
mov
jle
mov
mov
adc
push
jl
outsb
or
or
je
inc
int
and
es
sar
jne
mov
or
jg
and
or
sbb
popl
nop
testl
xchg
sub
nop
add
out
jg
jmp
cmpsb
push
loope
jbe
cmpl
add
std
or
push
adcl
out
jg
jmp
es
xor
das
mov
inc
mov
int
mov
addl
push
mov
es
mov
cltd
clc
or
divb
cmpl
push
shlb
mov
cmp
jle
stc
imul
pop
and
cmp
std
or
mov
dec
mov
ret
fidivl
lock
mov
sub
xor
jl
divb
fisttpll
out
sbb
and
sbbb
cmp
jns
inc
shlb
and
add
mov
lods
sbbb
out
sbb
cwtl
add
lret
lret
sbb
pop
xchg
adc
addl
mov
enter
add
add
pop
int3
inc
and
xchg
icebp
add
addr16
sbb
push
adcl
das
mov
sbb
sub
jle
adcb
andb
cs
mov
sbb
add
pop
ds
sbbb
mov
and
sbb
xchg
mov
movsb
ret
shlb
push
std
sub
lods
cmp
mov
pop
repnz
fs
aas
mov
dec
mov
push
std
pop
or
jg
push
les
mov
cs
jbe
push
in
sbb
frstor
shll
mov
mov
mov
jg
and
stos
sti
imul
push
add
dec
fdivrs
addr16
cmp
pop
int3
stos
data16
inc
and
cmp
lea
je
lea
sbb
or
fmuls
fdivs
outsl
in
jge
negl
loop
lock
cmpl
mov
push
rolb
shlb
push
fisttpl
fnsave
gs
jge
testl
pop
mov
mov
dec
fdivrl
jo
loop
inc
into
pop
cmp
add
adcl
movsl
xor
push
lahf
push
sub
sub
push
shlb
insb
lahf
xor
mov
cmpsl
aaa
push
mov
lods
pop
jmp
xchg
or
cmp
sub
movb
xor
jne
mov
or
gs
imul
sub
cmp
push
xlat
gs
adc
push
cmp
adc
push
aad
sub
xor
inc
mov
xchg
add
jno
jbe
cmpl
fdivl
in
enter
dec
jmp
push
mov
pop
cmp
adc
sbb
aad
xorl
sbb
sbb
and
xchg
or
or
pop
out
or
jb
je
out
pop
cld
outsl
lcall
push
cmp
push
sbbb
call
stc
cwtl
imul
movsl
mov
ret
jbe
loopne
aaa
mov
push
fwait
or
jae
into
pop
cmp
ds
adc
or
jnp
in
adc
mov
out
adc
sbb
dec
sub
xor
push
xchg
and
add
push
lds
sub
pop
bound
gs
push
mov
pushf
jno
jno
jecxz
xor
xor
add
push
mov
es
ds
pop
test
mov
mov
and
cmpsb
push
in
inc
aad
dec
ljmp
imull
je
out
in
je
outsl
xor
adc
lret
scas
pop
fcoml
xchg
add
pop
movl
stc
cwtl
imul
or
mov
inc
mov
xor
fimull
fisubrl
and
xchg
add
popa
mov
xchg
icebp
add
or
outsl
pushf
sbb
cld
xchg
cmc
add
ss
adc
rcrl
stos
rorw
adc
fidivrl
daa
inc
mov
cmpsl
movsb
ret
ds
rorl
mov
jmp
jge
mov
mov
and
les
xchg
jns
jno
jecxz
sti
pusha
notb
jmp
push
test
push
notb
mov
gs
adc
insl
std
test
fcomps
scas
pop
xchg
xor
shrb
fnsave
out
push
aad
sub
xor
inc
mov
xchg
add
jno
jbe
cmpl
fdivl
in
enter
dec
jmp
push
mov
pop
cmp
adc
sbb
aad
xorl
sbb
sbb
and
xchg
or
or
pop
out
or
jb
je
out
pop
cld
outsl
lcall
push
cmp
push
sbbb
call
stc
cwtl
imul
movsl
mov
ret
jbe
loopne
aaa
mov
push
fwait
or
jae
into
pop
cmp
ds
adc
or
jnp
in
adc
mov
out
adc
sbb
dec
sub
xor
push
xchg
and
add
push
lds
sub
pop
bound
gs
push
mov
pushf
jno
jno
jecxz
xor
xor
add
push
mov
es
ds
pop
test
mov
mov
and
cmpsb
push
in
inc
aad
dec
ljmp
imull
je
out
in
je
outsl
xor
adc
lret
scas
pop
fcoml
xchg
add
pop
movl
stc
cwtl
imul
or
mov
inc
mov
xor
fimull
fisubrl
and
xchg
add
popa
mov
xchg
icebp
add
or
outsl
pushf
sbb
cld
xchg
cmc
add
ss
adc
rcrl
stos
rorw
adc
fidivrl
daa
inc
mov
cmpsl
movsb
ret
ds
rorl
mov
jmp
jge
mov
mov
and
les
xchg
jns
jno
jecxz
sti
pusha
notb
jmp
push
test
push
notb
mov
gs
adc
insl
std
test
fcomps
scas
pop
xchg
xor
shrb
fnsave
out
sarl
and
pop
mov
add
in
clc
lock
bound
and
test
mov
and
popa
nop
js
fs
popf
insb
jmp
adc
pop
jp
pop
push
aam
sub
shll
dec
adc
add
push
lahf
push
inc
lret
pop
ds
sahf
sbb
insl
clc
lock
bound
and
test
mov
and
popa
nop
js
fs
popf
insb
jmp
adc
pop
jp
pop
push
aam
sub
shll
dec
adc
add
push
lahf
push
inc
lret
pop
ds
sahf
sbb
insl
imul
cmp
jp
pop
sbb
rcll
and
push
arpl
cmc
and
insb
loop
je
int3
dec
fistpll
dec
sub
aam
dec
lods
idivl
je
popa
mov
enter
std
or
lahf
adc
xor
jmpw
jmp
xor
xor
scas
sbb
popa
icebp
nop
arpl
lahf
or
fmuls
mov
insb
or
mov
sbb
jecxz
push
in
mov
mov
and
rclb
pop
lret
pop
ds
add
push
pop
aaa
scas
aas
pop
test
push
and
pushf
sbb
lock
xorl
mov
outsb
call
into
dec
fistpll
lods
lret
inc
mov
cltd
or
jno
cmpsl
aaa
push
mov
in
imul
notl
lcall
mov
inc
mov
dec
les
int3
sbb
dec
sub
and
adc
mov
push
rcll
push
sarl
cltd
clc
or
add
lods
add
cli
insl
std
test
and
mov
out
jbe
cmpl
jo
xorl
fistps
mov
jg
or
pop
fcoml
divl
pusha
pop
repnz
jge
je
pusha
sbb
fstpl
scas
pop
lea
xchg
mov
aam
sub
sbb
xchg
gs
fisttpl
fnstsw
aam
repnz
orb
adc
jb
sub
jg
mov
ficoms
cmpsl
push
nop
fcoml
mov
fs
dec
adc
daa
mov
mov
cmp
inc
xlat
mov
std
pop
roll
aad
dec
fimuls
push
add
pop
bound
std
or
rcrl
pop
mov
adc
das
fidivl
jg
ja
loope
pusha
std
insl
hlt
pop
xorb
and
jnp
adcl
test
mov
jle
arpl
test
add
and
lods
lret
inc
mov
loop
pop
loop
xor
pop
aam
sub
push
xor
and
inc
or
push
jnp
in
aas
les
mov
cltd
clc
or
shlb
cmp
add
imul
in
jg
int3
pop
enter
or
or
xor
dec
fdivrl
lods
lret
inc
loope
push
xchg
repz
int
fimull
fidivrl
xchg
or
loopne
adc
or
pop
cmp
and
inc
aam
dec
xchg
pusha
pop
repnz
xchg
pop
bound
push
mov
aaa
ret
cli
push
dec
fdivrl
ret
cmpsb
push
mov
jp
pop
xlat
inc
and
cmp
notl
cltd
adc
jns
mov
mov
loope
or
mov
xchg
xor
add
dec
aad
aam
dec
out
jb
xchg
sbb
add
and
jl
negb
cmp
sub
add
dec
fisttpl
fnstsw
jp
jo
loop
movsl
cmp
mov
lods
jnp
jnp
in
insb
mov
xchg
adc
int
jne
fs
push
cmp
sub
inc
and
cmp
jne
out
adc
mov
out
icebp
nop
arpl
xchg
xor
fcoms
mov
jmp
mov
push
mov
jns
das
ficoms
mov
cli
popf
insb
scas
ficoml
lods
pop
cli
push
push
xor
js
mov
fimuls
mov
es
mov
push
ret
ret
push
xor
data16
xchg
outsb
fldenv
pusha
pop
repnz
sub
test
mov
fwait
or
jno
sub
fistpl
mov
xchg
adc
dec
fdivrl
addr16
pop
js
outsb
or
adc
dec
adc
add
jl
jne
jp
xor
or
in
loope
mov
jle
arpl
loop
add
cmp
jb
xchg
ljmp
sbb
stc
imul
icebp
nop
arpl
mov
andl
xor
sbb
mov
inc
mov
out
js
mov
dec
fisttpll
out
lea
mov
mov
addl
js
imul
ds
test
arpl
push
sub
mov
fcomps
scas
pop
xchg
or
jle
fdivl
in
or
ret
dec
fstpt
sub
insl
and
mov
xchg
jle
je
lea
fmuls
fdivrs
repz
mov
and
and
cmp
or
lock
imul
insl
test
jnp
xor
xchg
push
xchg
repz
cmpsl
out
in
jg
push
les
int3
gs
or
sub
mov
xor
fimull
movsb
push
bnd
jle
call
stos
pop
test
pop
repnz
mov
push
lds
nop
push
pushf
sti
push
xchg
pop
lret
pop
ds
fs
adc
daa
mov
inc
push
xor
daa
xchg
xchg
repz
jmp
inc
fidivrl
jbe
loopne
adc
dec
into
pop
cmp
ds
jb
xchg
jne
repz
jp
int3
inc
shlb
loopne
jb
jp
fs
cmp
and
movsb
cmp
sbb
data16
xchg
outsb
js
jle
call
repz
cmpsl
jb
jp
in
pop
mov
mov
and
xorl
sub
ljmp
stc
les
mov
jg
push
xchg
jne
dec
fnstcw
inc
and
pop
push
lahf
punpckhdq
xor
or
in
sbb
pusha
pop
repnz
mov
inc
mov
pop
xchg
jb
jno
mov
lods
das
mov
add
rolb
shlb
jmp
notb
dec
das
fidivrl
out
gs
pushf
outsl
sahf
das
cmpsl
aaa
push
mov
fildll
incb
shr
pusha
notb
xchg
repz
mov
inc
jmp
dec
sti
lock
test
lods
lret
inc
hlt
mov
cmpl
rolb
mov
aad
dec
mov
pop
popf
or
sbb
adcl
lods
and
xor
in
es
cs
and
cmp
inc
push
popf
or
jbe
cmpl
das
mov
add
adcl
test
xor
int
iret
addr16
bound
dec
sub
add
push
xor
xor
jg
add
and
cmp
mov
inc
mov
push
mov
gs
and
daa
push
ret
ret
mov
in
jp
jp
outsb
ljmp
stc
scas
imul
scas
cmp
in
sbb
lods
mov
cmpsl
dec
roll
sarl
cmpsl
lods
lret
inc
scas
sub
test
sbb
push
mov
insb
or
out
loopne
notl
and
dec
mov
movsb
ret
ds
fwait
insb
addl
repz
out
cmpsb
xor
scas
pop
cwtl
adc
adc
mov
inc
mov
sub
push
mov
ljmp
das
mov
cmp
cmp
mov
jae
jbe
loopne
mulb
xchg
outsb
fbstp
jo
loop
test
and
mov
subl
pop
int3
stos
shlw
mov
dec
mov
push
fs
add
push
xor
and
adc
or
jo
xorl
ja
aam
lds
xor
sub
insb
or
jecxz
insb
or
clc
fistpl
fs
rcll
xor
lock
sbb
test
jge
jg
push
xor
sub
sarl
mov
lods
mov
mov
pop
int
addr16
lret
scas
pop
popl
lret
popl
nop
testl
fsubrs
lahf
addr16
push
cld
push
cmc
imul
insl
jg
mov
scas
cmp
jl
jne
sub
out
mov
xchg
test
mov
es
pop
jecxz
jmp
inc
mov
test
outsb
cld
fwait
jbe
push
lret
lret
fmuls
fcoms
cmpsl
and
imul
xchg
adc
ljmp
ljmp
and
and
and
rclb
xor
shr
hlt
xchg
outsb
mov
pusha
pop
repnz
psubd
leave
pop
cmp
sbb
lret
out
adc
dec
imul
or
mov
insl
std
test
mov
mov
sbb
xchg
inc
roll
shll
inc
fidivrl
sub
or
data16
xchg
outsb
leave
xchg
or
imul
popa
fs
sbb
add
sub
and
enter
push
cwtl
decl
inc
inc
fidivrl
dec
sub
sub
push
lahf
push
rorb
dec
lods
cmp
ret
movsl
push
repz
jmp
mov
inc
mov
pop
leave
test
ja
jnp
in
pop
jl
jge
negl
test
cmp
lock
jne
jno
jecxz
fs
popa
add
pop
add
aam
sub
jmp
cltd
or
jnp
xchg
add
sahf
je
inc
shll
shll
sti
push
xchg
or
cmp
cs
adc
aam
lret
scas
pop
mov
fcomps
dec
sub
xor
arpl
xchg
gs
inc
ret
ret
push
mov
mov
fimull
fidivrl
fstl
pop
scas
dec
les
int3
imul
clc
lahf
push
das
mov
inc
int
and
jb
movsb
ret
mov
jl
negb
icebp
popa
add
inc
sbb
lods
cmp
outsl
lcall
xchg
testb
sti
pop
pop
repnz
cmpsl
jge
je
out
or
and
and
into
push
mov
inc
and
push
mov
stos
int
cmc
or
jle
jnp
mov
daa
cmpsb
xor
scas
dec
movl
sub
mov
jmp
cld
fwait
jbe
rcrl
test
stos
pop
rolb
shlb
nop
sbb
fisttps
fsts
mov
inc
int
and
add
jns
jmp
loop
std
test
fmull
mov
or
push
mov
jno
jecxz
adcb
jecxz
lods
lea
mov
sbb
mov
sbb
push
fisttps
mov
push
aaa
ret
sub
sub
lds
lret
pop
lret
scas
pop
fmul
push
shlb
mov
in
cmc
pushf
outsl
test
pop
leave
test
mov
xchg
add
or
loope
adc
sub
adcl
test
roll
shll
mov
test
cmp
push
add
jp
jp
ljmp
cmp
inc
and
sbb
mulb
pop
test
mov
mov
sbb
dec
fidivrs
mov
sbb
and
fwait
cs
rclb
addr16
insb
or
lds
dec
sub
add
adcb
subb
arpl
cmc
sbb
imul
or
cmpsb
and
arpl
xchg
gs
mov
stos
adc
or
je
popa
icebp
nop
arpl
jg
rolb
rolb
dec
mov
data16
pushf
xor
push
or
adc
xor
int
fsubrs
pop
dec
rclb
xlat
pop
into
test
shlb
mov
popa
icebp
nop
arpl
mulb
push
rolb
mov
rep
add
into
pop
cmp
fs
sub
xchg
add
es
xchg
add
ss
lret
lret
lods
and
push
push
int3
inc
and
aaa
push
mov
jp
mov
mov
fimuls
das
xchg
adc
in
sbb
push
xchg
mov
sbb
das
mov
sub
lds
bnd
cmpl
out
adc
push
mov
test
cmp
je
insl
hlt
pop
out
pop
int
addr16
xchg
fistpl
scas
pop
cld
xchg
and
ret
ret
and
mov
inc
mov
cmp
cmp
add
gs
push
adc
pop
iret
stos
pop
into
cmpsl
xor
fisttpll
out
daa
ret
push
lds
test
jb
js
ljmp
in
mov
xor
cmp
jno,pn
popa
add
cmp
pop
pop
xchg
mov
push
pushf
sti
push
call
or
inc
rclb
xor
ds
jne
insl
hlt
pop
div
js
mov
outsl
in
sbb
or
lods
cmp
xor
cmp
xor
orl
sti
push
mov
movsl
xor
jae
xchg
cs
adc
sbb
and
mov
and
add
push
popa
nop
daa
xor
mov
and
rorl
std
ss
cmp
mov
xor
filds
mov
enter
add
outsl
or
into
aam
lds
dec
mov
mov
jae
imul
add
aam
movb
inc
mov
xor
int
aam
out
adc
sbb
fdivrs
push
add
cmp
push
les
mov
hlt
xchg
outsb
lods
mov
shlb
bound
inc
and
jbe
cmp
mulb
push
stc
insl
std
test
and
test
add
insb
ret
sub
add
enter
dec
sbb
push
test
ret
xor
dec
aam
lret
scas
pop
mov
inc
mov
repnz
pop
repnz
mov
and
lods
and
inc
adc
inc
mov
std
or
rcrl
test
xchg
adc
js
lock
jne
inc
jne
outsb
or
pop
into
pop
repnz
fs
pop
repnz
fs
push
xor
jg
mov
xchg
aas
cs
push
mov
popf
in
mov
mov
add
or
cmpsb
adc
xchg
or
dec
xlat
inc
and
aaa
cwtl
push
xchg
repz
mov
xchg
or
sbb
arpl
xchg
gs
cmp
addb
testl
sub
add
rcrb
dec
sub
maskmovq
divl
xorb
inc
aam
dec
cmpsb
jge
gs
push
sbb
add
adc
xor
pusha
out
jl
notb
xchg
add
inc
cmp
dec
rcll
data16
mov
cs
or
inc
rolb
shlb
push
mov
es
fimull
push
out
test
scas
cmp
push
mov
or
pop
rorl
mov
mov
cmp
int3
inc
and
mov
sbb
lcall
inc
dec
lret
lret
lods
cmp
xchg
add
insb
pop
fisttpll
out
test
xchg
repnz
sbb
stos
daa
mov
and
ret
mov
push
jns
insb
pop
inc
and
sub
push
idiv
jnp
mov
xchg
sbb
xor
pop
int
shll
int3
aas
xchg
adc
fimuls
movsb
push
cld
inc
mov
repnz
mov
es
push
shlb
push
adc
inc
mov
fidivl
test
pop
test
aaa
scas
cmp
mov
mov
movsl
lcall
js
mov
pop
fimuls
push
je
push
cld
adc
lcall
inc
and
lahf
cli
or
mov
fcoms
cmc
idivb
test
push
xor
sub
loope
adc
add
ja
adcl
out
mov
mov
jle
pop
idivl
mov
dec
fdivrs
dec
lock
lret
push
xchg
add
sahf
das
lods
cmp
mov
in
mulb
xchg
pusha
shrb
mov
sub
cs
mov
mov
test
pop
ficomps
xchg
jb
insl
lea
mov
sbb
xorb
adc
pop
enter
cld
jle
mov
das
fidivl
fstps
stos
pop
pop
inc
xlat
mov
stos
and
push
rolb
rolb
mov
int3
cld
jg
mov
dec
push
xor
cmp
imul
out
mov
mov
cltd
lahf
adc
dec
fidivrs
lds
jnp
and
nop
push
popa
nop
cmp
insl
std
test
fimull
mov
jno
jecxz
roll
mov
out
pop
jp
and
xchg
or
cmp
inc
xlat
mov
mov
adcb
andb
je
out
add
xchg
add
jp
mov
jle
or
pop
repnz
fs
xchg
pop
bound
add
pop
enter
dec
mov
sahf
jnp
mov
bnd
mov
mov
cmpsb
shll
cmp
roll
shll
sub
dec
std
jnp
mov
dec
lret
pop
ds
loope
std
test
gs
ss
mov
push
mov
cld
btc
jnp
in
inc
pop
xchg
add
lods
lret
inc
out
mov
mov
and
adc
popa
cmp
pop
push
xor
or
jns
js
jbe
loopne
and
cwtl
push
xchg
repz
mov
jnp
in
insb
xlat
pop
lret
scas
pop
xchg
ljmp
cli
push
and
adc
add
insb
mov
cli
push
fisttpl
sbb
xchg
and
push
xor
sub
andl
inc
aad
dec
ljmp
pushl
xorb
movsb
ret
ds
and
or
xchg
add
std
or
ja
je
out
inc
setg
push
adc
xor
test
hlt
jae
je
out
dec
inc
fisttpll
out
jle
jnp
in
or
sub
mov
sbb
cmp
es
rolb
rclb
mov
xor
lea
and
sti
jl
xchg
testb
or
outsl
lcall
scas
cmc
jo
xorl
add
insl
out
adc
or
sti
imul
pop
ret
dec
fdivrs
cmp
or
push
xor
sbb
stc
mov
xchg
mov
mov
test
jge
and
decl
mov
xchg
scas
pusha
cmc
gs
push
xor
push
shlb
cli
or
jg
jp
in
push
pop
popf
or
push
les
sbb
push
xchg
or
in
xchg
pop
mov
jle
inc
xor
fcomps
test
mov
sbb
mov
les
adc
push
jns
jbe
popa
add
sbb
test
ljmp
adcb
andb
test
inc
shll
sub
outsl
sti
jne
mov
xchg
cltd
clc
or
push
jmp
adc
stc
mov
or
jmp
jo
jne
out
inc
push
insb
or
mov
rclb
addr16
ret
ret
mov
jns
push
rolb
sarb
fiaddl
mov
test
xchg
sbb
pop
repnz
fs
cmpsb
xor
scas
mov
lahf
cli
or
push
sahf
or
cmpsb
dec
les
mov
mov
and
mov
xchg
fistps
test
lods
fcompl
stos
pop
iret
dec
fstpt
dec
sub
add
xchg
jb
loop
pop
loop
adc
data16
xchg
outsb
mov
dec
clc
jnp
mov
adc
mov
fcmove
dec
fstpt
fidivrl
popa
add
add
jle
call
lret
inc
xchg
mov
xchg
icebp
add
mov
xchg
popf
or
stc
push
lahf
push
xchg
add
out
jl
negb
lock
inc
das
mov
rolb
mov
stc
es
inc
mov
mov
test
lock
bound
sbb
les
fnsave
mov
xchg
or
sbb
xchg
pop
bound
push
mov
scas
pop
mov
mov
loop
cli
popf
insb
xchg
adc
cld
js
mov
sub
pop
fisttpl
dec
lds
iret
das
sub
rorl
dec
mov
push
test
popa
mov
xchg
push
rcrb
xchg
addr16
loop
je
adc
mulb
xchg
outsb
fisttps
popf
or
mov
push
push
xor
loopew
jmp
jge
fwait
push
pushf
sti
push
mov
scas
cmp
mov
pop
repnz
xchg
test
mov
jns
pusha
jecxz
adc
add
inc
shlb
popf
in
fsubl
inc
aam
lret
mov
mov
xchg
jae
clc
outsb
or
push
sub
or
dec
fnstcw
pop
jb
jl
adc
and
rcrb
stos
pop
xchg
fcoml
cmpsl
push
cmc
push
cmp
sti
cmp
pop
dec
fdivl
in
push
push
xor
data16
mov
push
xor
push
cs
inc
inc
and
ja
stos
cmp
sbb
xor
jge
mov
mov
in
sbb
pop
inc
fimull
fidivl
aaa
scas
aas
pop
test
nop
arpl
mov
jmp
out
add
jns
iret
dec
fdivrl
sbb
xchg
push
dec
jmp
cmpsl
aaa
push
mov
arpl
loopne
mov
in
lea
mov
sbb
xor
xorb
lock
push
jbe
bound
push
xor
sub
inc
and
xor
push
mov
es
aam
fdivrs
loop
je
jno
popa
add
cmp
mov
imul
sbb
add
jne
mov
rcrl
scas
pop
movsl
lret
cmpsb
push
test
or
or
push
mov
std
or
jne
insb
or
in
or
roll
shll
adc
arpl
bound
fdivrl
pusha
pop
repnz
push
ret
ret
dec
fidivrs
mov
movsb
cmp
add
je
xor
fwait
or
out
loope
jae
imulb
je
mov
mov
cmp
in
sbb
icebp
nop
arpl
cmp
and
inc
mov
jle
call
int
aam
mov
icebp
jne
mov
mov
cli
iret
dec
fnstcw
out
jno
sub
cmp
pop
sbb
ja
insb
or
cmc
test
mov
lock
lret
lret
xor
int
fwait
mov
mov
es
sbb
pop
into
pop
cmp
addr16
xchg
add
sahf
aaa
imul
mov
lcall
cmpsb
xor
dec
ret
xchg
xchg
setg
or
adc
xchg
ss
pop
test
inc
fimull
ficompl
mov
jne
fs
push
mov
lahf
cli
or
mov
mov
inc
mov
mov
mov
shlb
lods
lret
inc
mov
rolb
shlb
push
fisttpll
out
mov
xchg
repnz
and
or
gs
jg
jmp
inc
mov
imull
sahf
insl
popa
icebp
nop
arpl
adc
lods
cmp
jl
jne
movsb
xor
sbb
adc
insl
cmc
gs
ds
insb
or
in
notl
repnz
lahf
punpckhdq
lahf
push
enter
dec
addl
push
jno
push
xor
roll
inc
movsl
scas
das
mov
enter
pop
dec
iret
pop
cmp
and
pop
into
test
lcall
cmp
mov
repz
mov
pop
xchg
add
sahf
insl
mov
xchg
les
mov
mov
lods
lret
inc
loope
notl
cld
insl
std
test
push
rclb
jno
cwtl
push
imul
rcll
push
cmpsb
adc
pop
cmp
adc
inc
mov
mov
adc
and
sub
inc
and
pop
insb
icebp
popa
add
jbe
outsb
cld
fwait
jbe
aaa
mov
dec
mov
jmp
into
dec
into
pop
cmp
xor
lock
scas
sub
cld
xchg
cmc
add
and
ret
mov
jne
out
or
push
mov
fdivrs
jo
loop
lods
and
in
bound
push
xor
jbe
iret
pop
cmp
jle
xchg
add
sahf
das
lods
cmp
mov
in
mov
mov
and
or
aam
xchg
mov
xchg
ja
arpl
cmc
xor
xchg
cmc
add
xlat
dec
frstor
imul
out
imul
and
loope
or
inc
push
xor
daa
xor
test
mov
mov
stc
adcl
test
gs
pushf
outsl
test
sbb
xchg
gs
shll
aaa
push
mov
shll
xor
push
lds
jle
pusha
pop
repnz
jb
in
lods
cmp
lret
pop
into
test
fdivrs
dec
sub
jno
test
jge
ds
setg
or
leave
pusha
inc
rolb
shlb
imul
insl
test
pop
int3
stos
data16
test
test
jmp
or
xor
je
lds
iret
and
negb
cmpsl
es
cs
in
imul
std
insl
hlt
pop
rolb
push
jno
jne
loope
adc
or
jg
jmp
jnp
je
fdivl
in
jg
fs
or
xchg
cmp
jno
xchg
testb
hlt
push
sub
sub
lcall
hlt
push
cld
push
adc
xor
mov
inc
imull
mov
xchg
or
sbb
aad
stc
notl
das
mov
inc
mov
mov
popa
add
jbe
adc
jle
mov
cmp
aas
fcomps
stos
pop
andb
ss
mov
push
cmpsl
jb
sub
inc
fidivrl
mov
jle
mov
gs
jo
dec
fistpll
cmp
or
mov
jle
pop
jo
xchg
cmc
add
push
adcl
mov
inc
mov
and
jge
arpl
cmc
inc
add
lahf
setg
or
sub
mov
mov
aad
mov
fidivrl
lds
icebp
push
cwtl
push
imul
cmc
gs
xor
std
insl
hlt
pop
in
cltd
pop
push
rolb
shlb
hlt
jb
xchg
add
push
inc
and
sub
jbe
loopne
dec
push
xor
cmp
aaa
cmpsl
ret
xchg
sbb
aad
rcr
lret
scas
cmp
push
inc
iret
pop
cmp
add
insb
loop
je
shlb
xchg
les
popa
add
inc
test
test
aam
sub
mov
inc
sub
outsl
sets
imul
pop
leave
test
mov
mov
xchg
pop
bound
int3
aas
xlat
imull
fwait
jbe
std
popa
icebp
nop
arpl
jne
js
ljmp
push
cld
jge
je
insl
outsb
out
jl
negb
leave
dec
fidivrs
xor
pop
jbe
addr16
sub
jns
jmp
divb
xorb
setg
or
rcrl
test
xchg
cld
psubsw
outsl
lcall
in
jle
aam
leave
test
lea
gs
cltd
sub
jne
je
out
inc
sbb
adc
and
xchg
daa
mov
inc
mov
and
gs
push
inc
fisttps
fldenv
lock
adc
fsubrl
jge
je
add
mov
or
xor
push
push
aam
sub
push
aaa
ret
add
adcl
test
pop
test
dec
into
pop
cmp
or
lret
inc
mov
mov
aam
out
std
test
cmp
sbb
mov
lock
cld
fwait
jbe
push
xchg
or
sub
test
mov
sbb
jne
sub
sub
imul
lcall
xor
scas
jns
jnp
mov
popa
in
sbb
shlb
push
mov
cmc
add
mov
fld
dec
fidivrs
and
mov
or
lds
xor
push
add
xor
and
outsb
or
setg
push
adc
dec
out
inc
mov
negl
pop
jp
xor
push
les
sub
pop
fadds
mov
stos
cs
dec
mov
imul
sub
lds
sbb
mov
stos
inc
lds
iret
sub
aad
lock
bound
pop
loopne
mov
inc
mov
aas
mov
mov
xchg
lock
std
jnp
mov
dec
les
int3
aas
cmp
or
lods
and
in
js
outsb
outsb
and
addr16
sub
mov
add
jp
bound
push
imul
in
sbb
jae
in
mov
mov
or
fisttpl
fnsave
mov
mov
adc
sub
pop
enter
rcll
mov
imul
push
dec
lret
lret
mov
daa
mov
data16
adc
or
mov
stos
and
push
xchg
repz
ljmp
push
cwtl
push
imul
leave
pop
cmp
or
lods
js
js
ljmp
xchg
inc
and
outsb
pop
into
pop
cmp
jg
movsb
ret
mov
mov
inc
mov
or
dec
nop
or
mov
inc
mov
adc
add
and
pop
in
jnp
mul
push
sbbl
aad
imul
imul
push
int3
pop
repz
xor
insb
adcb
lock
or
pop
fisttps
add
imul
fsts
push
mov
icebp
popa
add
add
int
arpl
xchg
xchg
jbe
loopne
sub
sub
xor
jne
inc
mov
adc
int
addr16
xchg
cld
btc
push
lds
cmc
add
jno
jbe
loopne
adc
dec
nop
push
popa
nop
daa
xchg
add
std
or
daa
ret
push
lds
adc
and
test
mov
and
push
std
jl
xchg
add
mov
jp
outsl
or
out
lcall
push
lds
scas
pop
movsl
push
rolb
rolb
dec
enter
cmp
out
scas
and
icebp
jp
jp
stos
inc
mov
pop
insl
lods
ss
dec
test
into
ret
dec
aas
je
pop
cwtl
sbbb
out
pop
add
inc
xchg
hlt
push
cld
dec
or
or
xor
adc
in
sbb
outsl
ljmp
stc
mov
xor
enter
jg
jnp
mov
out
adc
inc
je
jge
notl
sahf
push
xchg
repz
in
leave
pop
cmp
and
pop
cmp
dec
sbb
addb
icebp
add
das
lods
and
pop
dec
lret
lret
rolb
shlb
and
or
or
mov
cmp
mov
roll
icebp
lcall
sub
lds
add
xor
push
lds
fs
jg
jmp
in
mov
out
lods
inc
shll
lock
lret
test
and
add
pop
jb
je
inc
rcl
mov
ret
in
orb
movsl
jge
ss
fisubrs
mov
or
mov
push
fcoml
lea
and
jmp
sbb
push
jns
jmp
sub
ficomps
stos
pop
mov
dec
fdivrl
sub
push
movsl
sub
rcrb
stos
pop
test
sti
fcoms
mov
inc
and
into
test
aas
pop
test
repz
test
mov
add
icebp
notl
fs
imul
push
xor
fwait
or
in
mov
jae
add
aaa
pop
push
xor
or
and
and
add
mov
test
sbb
xor
and
sbb
aad
int3
divb
mov
clc
jle
mov
in
fstl
xchg
arpl
gs
js
imul
dec
push
fisttps
lcall
dec
aad
sahf
jp
jg
lahf
cvtps2pi
add
iret
and
cmp
cld
nop
rcrb
scas
xchg
mov
mov
popf
in
mov
aaa
xchg
add
pop
cmp
cwtl
adc
sbb
popf
or
mov
or
pop
push
xor
dec
fadds
mov
jle
call
xor
sub
or
divl
xorb
iret
pop
cmp
add
jge
je
jo
fs
popf
insb
test
shlb
fadds
bnd
jp
imul
push
in
dec
mov
jmp
imul
xchg
testb
mov
push
mov
movsb
xor
push
out
out
xor
addr16
cmp
mov
inc
shrb
fisubl
and
add
adcl
aas
mov
dec
cmpsb
inc
xor
je
icebp
jns
pop
mov
adc
in
sbb
xor
and
lock
bound
xchg
rclb
ds
shlb
push
cmc
push
insb
out
jg
jmp
xchg
gs
jo
imul
push
aaa
ret
pop
enter
cmp
in
lock
bound
xchg
push
stos
es
mov
pusha
pop
repnz
test
test
push
mov
adcl
test
std
insb
loop
je
xchg
add
push
mov
cmp
sbb
mov
jg
sub
inc
mov
ret
push
into
pop
cmp
cmp
scas
aas
pop
test
test
or
sbb
jb
xchg
and
pop
fidivrs
push
je
iret
pusha
mov
clc
outsl
loope
jmp
adc
push
xchg
aam
loop
cmp
xchg
pop
inc
cmp
jae
or
gs
loopne
cltd
push
movsl
push
cmpsl
fistpl
scas
pop
cld
pop
rolb
rolb
push
lcall
dec
fnstsw
pop
ds
push
mov
adcb
loope
mov
cli
push
insl
stc
imul
pop
jp
ds
pop
xchg
repnz
inc
out
push
pushf
sti
push
aad
enter
sub
cmp
inc
outsb
lock
ja
adc
push
test
jge
inc
push
aad
sub
xor
jle
and
outsl
out
jg
jmp
ds
lock
lea
push
shll
or
add
jge
je
popa
mov
pop
ljmp
mov
fmuls
fldenv
jo
data16
pop
push
loope
in
movsb
jl
dec
jge
and
fwait
sub
cmp
sbb
xchg
arpl
gs
dec
cmc
pusha
notb
mov
sbb
test
shlb
lods
cmp
cwtl
push
imul
test
pop
test
pop
fimuls
das
bnd
xorb
sbb
and
xchg
add
inc
shll
xchg
cmc
add
ds
scas
sub
scas
cmp
mov
sub
out
data16
xchg
outsb
popf
adc
xchg
sbb
and
loop
pop
loop
push
mov
gs
and
gs
pushf
outsl
les
xchg
test
push
mov
push
pushf
sti
push
movsb
dec
dec
fdivrs
cmp
or
or
vaddsd
test
or
imul
add
ljmp
inc
pop
cltd
dec
in
les
xchg
adc
imull
rcrb
dec
sub
daa
cltd
push
mov
es
pop
fimuls
adc
pop
push
adc
jle
mov
pop
lods
dec
push
fisttps
fsts
or
in
mov
xor
or
jno
xorb
pop
enter
cld
insl
std
test
scas
cmp
rcll
push
stc
out
out
jo
mov
cmpl
lahf
push
jne
jge
divl
es
push
lds
setne
fisttps
aas
cmpsl
aaa
push
mov
inc
mov
inc
rclb
or
push
les
inc
and
mov
and
and
pop
xchg
add
fs
mov
fcoms
cmpsl
cmpsb
or
lods
jae
mov
mov
pop
lahf
arpl
cltd
xchg
cmp
lods
push
adc
cmp
xchg
pop
cmp
mov
mov
dec
mov
iretw
xchg
add
std
or
mov
xchg
xchg
and
movsl
out
loopne
jb
outsb
hlt
push
cld
aas
mov
int
dec
ret
mov
in
add
dec
fnstcw
frstor
pop
lods
bound
xchg
or
je
inc
aad
dec
movsl
repz
xchg
mov
stos
into
cmp
mov
xchg
add
lret
movsb
push
mov
or
pop
roll
shll
jo
outsb
or
sbb
mov
mov
cwtl
lahf
adc
xor
pop
leave
test
fmuls
mov
notb
inc
and
pusha
xchg
add
repnz
pop
repnz
inc
aam
xchg
inc
out
mov
xchg
xor
push
imul
inc
imul
subb
icebp
pop
xchg
cld
loop
pop
fldt
aaa
and
mov
pop
mov
xchg
or
mov
cld
or
mov
cwtl
pop
mov
rorb
pop
push
rolb
shlb
dec
into
pop
cmp
ds
roll
shll
push
mov
jle
imul
sub
sub
pop
loop
jg
add
and
movsb
ret
ds
mov
mov
call
stos
cmp
sbb
aam
shlb
fwait
decb
push
in
xchg
pop
xchg
repnz
add
jb
insl
out
in
je
outsl
mov
mov
lds
iret
dec
and
notl
jns
push
and
movsl
xor
jl
pusha
cmp
fmuls
xchg
add
pop
adc
pop
mov
rcrb
lcall
inc
add
aaa
mov
ficoms
mov
movsl
int3
aas
jmp
push
aam
mov
inc
mov
mov
mov
iret
pop
cmp
jle
push
shll
sti
push
mov
in
pop
ljmp
cltd
push
out
sbb
out
sbb
push
cmc
xor
ljmp
es
inc
fimuls
popa
jae
bound
dec
fstl
out
insb
loop
je
and
inc
mov
movsb
ret
ds
push
shll
test
and
out
scas
aas
pop
test
loop
in
insl
out
adc
or
inc
xlat
mov
stos
outsl
out
adc
sbb
aas
lcall
cmp
add
push
dec
iret
js
mov
jnp
push
push
les
xor
scas
jns
jnp
mov
popa
in
sbb
shlb
push
mov
cmc
add
mov
fld
dec
fidivrs
and
mov
or
lds
xor
push
add
xor
and
outsb
or
setg
push
adc
dec
out
inc
mov
negl
pop
jp
xor
push
les
sub
pop
fadds
mov
stos
cs
dec
mov
imul
sub
lds
sbb
mov
stos
inc
lds
iret
sub
aad
lock
bound
pop
loopne
mov
inc
mov
aas
mov
mov
xchg
lock
std
jnp
mov
dec
les
int3
aas
cmp
or
lods
and
jbe
setg
or
insl
fnsave
orb
sub
push
sbb
add
cmp
bound
push
imul
in
sbb
jae
in
mov
mov
or
fisttpl
fnsave
mov
mov
adc
sub
pop
enter
rcll
mov
imul
push
dec
lret
lret
mov
daa
mov
data16
adc
or
mov
stos
and
push
xchg
repz
ljmp
push
cwtl
push
imul
leave
pop
cmp
or
lods
js
js
ljmp
xchg
inc
and
outsb
pop
into
pop
cmp
jg
movsb
ret
mov
mov
inc
mov
or
dec
nop
or
mov
inc
mov
adc
add
and
pop
in
jnp
mov
popa
std
insl
hlt
pop
sub
ljmp
adc
sub
notl
lea
and
sti
test
fwait
decb
out
sbb
fisubrl
loopne
nop
push
popa
nop
gs
sub
icebp
popa
add
add
int
arpl
xchg
xchg
jbe
loopne
sub
sub
xor
jne
inc
mov
adc
int
addr16
xchg
cld
btc
push
lds
cmc
add
jno
jbe
loopne
adc
dec
nop
push
popa
nop
daa
xchg
add
std
or
daa
ret
push
lds
adc
and
test
mov
and
push
std
jl
xchg
add
mov
jp
outsl
or
out
lcall
push
lds
scas
pop
movsl
push
rolb
rolb
dec
enter
cmp
out
scas
and
icebp
jp
jp
push
fisttpll
out
inc
roll
aad
test
cltd
clc
or
fisttpll
ljmpw
idivl
jp
data16
push
cld
dec
or
or
xor
adc
in
sbb
outsl
ljmp
stc
mov
xor
enter
jg
jnp
mov
out
adc
inc
je
jge
notl
sahf
push
xchg
repz
in
leave
pop
cmp
and
pop
cmp
dec
sbb
addb
icebp
add
das
lods
and
pop
dec
lret
lret
rolb
shlb
and
or
or
mov
cmp
mov
roll
icebp
lcall
sub
lds
add
xor
push
lds
fs
jg
jmp
in
mov
out
lods
inc
shll
lock
lret
test
and
add
pop
jb
je
out
pop
insl
clc
outsb
or
pop
jle
jp
in
das
push
int3
inc
and
push
jno
push
roll
sarl
seta
bound
xchg
push
and
jmp
sbb
push
jns
jmp
sub
ficomps
stos
pop
mov
dec
fdivrl
sub
push
movsl
sub
rcrb
stos
pop
test
sti
fcoms
mov
inc
and
into
test
aas
pop
test
repz
test
mov
add
icebp
notl
fs
imul
push
xor
fwait
or
in
mov
jae
add
aaa
pop
push
xor
or
and
and
add
mov
test
sbb
xor
and
sbb
aad
int3
divb
mov
clc
jle
mov
test
mull
icebp
or
in
fisttpl
icebp
jp
jp
inc
leave
pop
cmp
sub
call
enter
imul
icebp
popa
add
xor
mov
mov
aad
xchg
dec
fisttpll
out
outsb
cld
fwait
jbe
sahf
or
mov
xchg
add
pop
cmp
cwtl
adc
sbb
popf
or
mov
or
pop
push
xor
dec
fadds
mov
jle
call
xor
sub
or
divl
xorb
iret
pop
cmp
add
jge
je
jo
fs
popf
insb
test
shlb
fadds
bnd
jp
imul
push
in
dec
mov
jmp
imul
xchg
testb
mov
movsb
push
in
ret
push
lds
ja
xorb
out
jl
negb
mov
dec
mov
add
push
jp
jbe
loopne
push
into
pop
cmp
xor
int3
inc
and
sub
cs
push
lods
xor
adc
in
sbb
xor
and
lock
bound
xchg
rclb
ds
shlb
push
cmc
push
insb
out
jg
jmp
xchg
gs
jo
imul
push
aaa
ret
pop
enter
cmp
in
lock
bound
xchg
push
stos
es
mov
pusha
pop
repnz
test
test
push
mov
adcl
test
std
insb
loop
je
xchg
add
push
mov
cmp
sbb
mov
jg
sub
inc
mov
ret
push
into
pop
cmp
cmp
scas
aas
pop
test
test
or
sbb
jb
xchg
push
add
popa
icebp
nop
arpl
test
push
pushf
sti
push
call
outsb
mov
dec
mov
es
adc
aaa
mov
loopne
cltd
push
movsl
push
cmpsl
fistpl
scas
pop
cld
pop
rolb
rolb
push
lcall
dec
fnstsw
pop
ds
push
mov
adcb
loope
mov
cli
push
insl
stc
imul
pop
jp
ds
pop
xchg
repnz
inc
out
push
pushf
sti
push
aad
enter
sub
cmp
inc
outsb
lock
ja
adc
push
test
jge
inc
push
aad
sub
xor
jle
and
outsl
out
jg
jmp
ds
lock
lea
push
shll
or
add
jge
je
popa
mov
pop
ljmp
inc
loopne
loop
je
mov
fwait
decb
jne
xor
test
jge
and
fwait
sub
cmp
sbb
xchg
arpl
gs
dec
cmc
pusha
notb
mov
sbb
test
shlb
lods
cmp
cwtl
push
imul
test
pop
test
pop
fimuls
das
bnd
xorb
sbb
and
xchg
add
inc
shll
xchg
cmc
add
ds
scas
sub
scas
cmp
mov
sub
out
data16
xchg
outsb
popf
adc
xchg
sbb
and
loop
pop
loop
push
mov
gs
and
gs
pushf
outsl
les
xchg
test
push
mov
push
pushf
sti
push
movsb
dec
dec
fdivrs
cmp
or
or
vaddsd
test
lahf
cli
or
push
lret
lret
nop
push
popa
nop
pop
jl
jno
jecxz
pop
jecxz
push
in
aam
lds
loop
imull
rcrb
dec
sub
daa
cltd
push
mov
es
pop
fimuls
adc
pop
push
adc
jle
mov
pop
lods
dec
push
fisttps
fsts
or
in
mov
xor
or
jno
xorb
pop
enter
cld
insl
std
test
scas
cmp
rcll
push
stc
out
out
jo
mov
cmpl
lahf
push
jne
jge
divl
es
push
lds
setne
fisttps
aas
cmpsl
aaa
push
mov
inc
mov
inc
rclb
or
push
les
inc
and
mov
and
and
pop
xchg
add
fs
mov
fcoms
cmpsl
push
mov
fdivrs
push
fstpt
cmp
mov
lds
mov
xchg
repnz
sub
aaa
push
mov
xor
ja
pop
dec
fisttps
fsts
pop
int3
stos
iretw
xchg
add
std
or
mov
xchg
xchg
and
movsl
out
loopne
jb
outsb
hlt
push
cld
aas
mov
int
dec
ret
mov
in
add
dec
fnstcw
frstor
pop
lods
bound
xchg
or
je
inc
aad
dec
movsl
repz
xchg
mov
stos
into
cmp
mov
xchg
add
lret
movsb
push
mov
or
pop
roll
shll
jo
outsb
or
sbb
mov
mov
cwtl
lahf
adc
xor
pop
leave
test
fmuls
mov
notb
inc
and
pusha
xchg
add
repnz
pop
repnz
inc
aam
sub
loop
je
out
jns
mov
dec
roll
rcll
adc
sbb
jge
je
outsl
push
pop
cs
inc
mov
faddl
mov
pop
mov
cwtl
sbb
loop
pop
loop
cwtl
pop
mov
rorb
pop
push
rolb
shlb
dec
into
pop
cmp
ds
roll
shll
push
mov
jle
imul
sub
sub
pop
loop
jg
add
and
movsb
ret
ds
mov
mov
call
stos
cmp
sbb
aam
shlb
fwait
decb
push
in
xchg
pop
xchg
repnz
add
jb
insl
out
in
je
outsl
mov
mov
lds
iret
dec
and
notl
jns
push
and
movsl
xor
adc
in
sbb
outsl
call
loopne
cli
popf
insb
cltd
xor
out
fs
popf
insb
lahf
sub
add
aaa
mov
ficoms
mov
movsl
int3
aas
jmp
push
aam
mov
inc
mov
mov
mov
iret
pop
cmp
jle
push
shll
sti
push
mov
in
pop
ljmp
cltd
push
out
sbb
out
sbb
push
cmc
xor
ljmp
es
inc
fimuls
popa
jae
bound
dec
fstl
out
insb
loop
je
and
inc
mov
movsb
ret
ds
push
shll
test
and
out
scas
aas
pop
test
loop
in
insl
out
adc
or
inc
xlat
mov
stos
outsl
out
adc
sbb
aas
lcall
cmp
add
push
dec
iret
js
out
cmp
mov
add
add
push
in
inc
push
add
mov
add
popa
inc
call
jmp
out
jp
jp
pop
dec
sbb
lea
jmp
pop
rolb
shlb
stos
cmp
jle
push
into
aad
mov
add
movsl
das
mov
sub
lds
out
adcl
test
jbe
mov
popl
jmp
add
or
sub
negb
jns
mov
shll
mov
jmp
test
movsb
ret
ds
pop
fcmovb
dec
fstpt
add
dec
jmp
mov
jmp
ljmp
loopne
adc
push
jp
xchg
testb
xchg
add
cmp
ret
adc
jbe
lcall
fs
jmp
pop
roll
aad
lods
mov
pushf
jmp
xor
jo
ret
movsl
cmp
pop
enter
ss
push
push
in
popf
pop
xchg
jb
cmp
test
cmc
orb
add
loopne
movl
addl
ret
lcall
jmp
inc
inc
jmp
dec
jecxz
push
in
daa
mov
inc
mov
cmp
outsb
in
in
mov
jne
jmp
mov
jmp
es
movsl
stc
xchg
addr16
jmp
mov
mov
cmp
push
xor
dec
stc
data16
xchg
outsb
jmp
cltd
sbb
add
add
jmp
or
pop
jecxz
push
in
xchg
adc
lods
cmp
imul
sbb
aad
repz
push
cld
or
jp
jp
mov
xchg
repz
std
sbb
add
icebp
popa
add
adc
mov
test
push
jecxz
push
in
inc
leave
pop
cmp
or
sahf
add
xchg
add
std
insl
hlt
pop
mov
push
pushf
sti
push
mov
pop
cmpsl
fs
popa
add
pop
inc
shlb
les
fidivrl
lds
fsubrs
ret
add
sub
adc
lods
cs
rolb
sarb
push
xchg
mov
lock
adc
lret
aaa
dec
int3
inc
and
lret
scas
pop
scas
out
lock
bound
add
pop
xlat
inc
and
cmp
ja
js
addr16
or
push
test
push
mov
pop
imul
adcb
out
mov
arpl
xchg
gs
or
imul
insl
fidivl
cmpsl
aaa
push
mov
pop
lods
push
stc
outsb
cld
fwait
jbe
dec
fisttpll
out
cmp
jge
je
inc
cmpsl
cmp
mov
cmpsb
add
xor
dec
cltd
add
cld
xchg
cmc
add
push
xchg
jb
or
mov
leave
dec
fdivrs
push
lds
dec
iret
pop
cmp
xor
jg
inc
aam
dec
cltd
xchg
xchg
lock
sbb
cld
jbe
cmpl
pop
into
test
mov
and
inc
shll
shll
lea
call
mov
mov
sbb
pop
repz
jns
jmp
lods
cmp
mov
in
push
mov
fidivrl
sbb
cmp
arpl
mov
mov
and
push
lret
lret
inc
shll
gs
jp
mull
icebp
js
dec
fstpt
les
xlat
mov
cmpsl
and
ds
dec
into
pop
cmp
add
movsl
xor
pop
iret
stos
pop
scas
and
pusha
jmp
out
gs
pushf
outsl
mov
in
fcoms
mov
cmp
js
movsl
xor
cmp
adcl
test
cwtl
xor
test
pop
test
push
rclb
imul
loope
sbb
aad
in
jg
mov
jecxz
in
jle
xchg
setg
or
sub
xor
stc
pusha
notb
sahf
stc
or
cmpsl
and
ja
xorb
mov
inc
mov
call
adcb
and
cmp
lock
add
lcall
sbb
rcll
and
mov
pushl
cmpl
aad
sub
jp
xchg
pop
bound
sahf
insl
test
mov
push
lds
iret
jnp
xor
fwait
or
sub
pop
int3
stos
iretw
xlat
inc
xlat
mov
std
rclb
pop
hlt
out
jns
mov
gs
push
nop
or
mov
inc
mov
outsb
popf
jno
sub
cli
push
imul
sub
mov
mov
stos
inc
push
xor
sub
inc
and
das
dec
iret
pop
cmp
add
mov
into
dec
fnstcw
sbb
jns
add
std
or
orb
decl
out
jne
xchg
cmc
add
push
fimull
fidivrl
or
push
insb
out
adc
dec
fisttpll
movsb
push
jecxz
adcl
lret
pop
ds
sub
insl
mov
mov
stc
imul
sbb
xchg
and
mov
push
nop
fwait
add
and
xchg
add
jnp
xchg
add
sahf
sbb
mov
xchg
adc
ret
push
lds
ret
mov
cmpsl
lea
and
sti
adc
push
adcb
cmpb
and
data16
adc
adc
add
aaa
ret
push
lds
and
cmpsb
cs
roll
aad
sbb
adc
dec
mov
jmp
insl
std
test
pop
into
pop
cmp
pusha
fwait
or
out
jl
testb
hlt
xchg
outsb
movl
clc
insl
std
test
add
lods
cmp
cs
sbb
mov
push
xchg
add
repz
cmc
je
mov
xchg
adc
push
and
inc
and
inc
jp
imul
ss
mov
dec
mov
xchg
popa
lcall
or
cmp
orb
stc
or
dec
lret
pop
ds
pop
fisttpl
fnstsw
push
lds
pusha
in
bound
mov
sbb
and
cltd
push
push
scas
pop
adcl
out
mov
xor
xor
xor
or
test
iret
push
dec
fnstcw
je
out
or
into
pop
cmp
cmp
pop
lret
scas
pop
mov
mov
push
jp
cwtl
push
imul
adcl
cmp
pop
leave
test
cmpsl
pop
nop
push
popa
nop
inc
dec
into
pop
cmp
and
lock
bound
or
lret
mov
lods
sub
dec
ret
mov
mov
test
pop
test
cld
jo
xorl
and
int
mov
mov
add
pop
leave
pop
cmp
pusha
push
cwtl
push
imul
stc
imul
adc
es
and
ja
dec
frstor
inc
mov
pop
rclb
sub
cwtl
jge
jo
loop
imul
sbb
ds
or
fnstcw
pushf
sti
push
repz
mov
mov
adc
cli
jle
mov
in
sbb
sti
ja
xorb
into
pop
cmp
xor
mov
jge
push
cld
shld
mov
out
jg
jmp
xor
add
pop
into
test
jp
in
pop
cmpsb
cmp
xchg
or
sub
hlt
pop
lods
cmp
push
shlb
lods
pop
ljmp
scas
cmp
dec
fidivrs
pop
cmp
and
lea
sub
lahf
punpckhdq
pop
test
cmp
add
mov
stos
into
cmp
shrl
shlb
jne
pop
xchg
adc
jle
imul
sub
dec
pop
mov
gs
jbe
adcl
inc
aad
dec
mov
push
repz
jns
imul
cmp
jl
notb
adcl
loop
pop
loop
mov
mov
sbb
push
cli
mov
mov
push
mov
scas
leave
cmp
lret
jl
jne
inc
ss
inc
mov
push
roll
aad
fiadds
mov
push
popa
nop
pop
xchg
or
in
xchg
mov
out
xor
int
aam
cmp
in
jge
notl
enter
push
test
test
pop
test
rclb
mov
ljmp
xchg
addr16
cmp
pop
xor
mov
xchg
lock
push
fisttpll
out
cltd
push
test
push
lret
scas
leave
cmp
push
fstpt
jp
jp
adcb
loop
mov
or
inc
xlat
mov
out
cmc
gs
dec
cmp
xlat
inc
shll
sub
popa
lock
lahf
push
popa
cli
push
mov
sbb
xor
cs
mov
lods
cs
pop
lret
scas
pop
mov
push
xchg
repz
out
pop
int3
stos
and
cli
popf
insb
xchg
pop
adcb
adcb
cmpsb
shll
or
mov
xchg
lock
lahf
adc
in
sbb
add
xchg
lods
and
jnp
mov
loope
jecxz
jne
push
adcl
mov
xchg
and
mov
push
test
push
scas
mov
adcl
jp
mull
nop
arpl
or
inc
fisttps
fldenv
mov
dec
mov
fisubrl
fnsave
test
pop
test
and
sub
cmp
fs
lods
cmp
icebp
popa
add
sbb
push
aaa
ret
icebp
popa
add
adc
xor
push
aad
sub
or
dec
sub
adc
adcl
sbb
adc
fcoms
mov
cltd
clc
or
jno
insl
hlt
pop
mov
lret
sbb
cwtl
pop
ja
push
and
xlat
inc
and
jbe
insl
std
test
jge
bound
cmpsl
ret
sti
imul
push
mov
aad
xchg
push
rcll
data16
mov
jmp
insb
mov
fistps
push
xor
es
jg
jmp
push
scas
sub
ror
dec
fdivrs
push
xor
daa
mov
mov
jnp
mov
out
notb
mov
es
imul
inc
shll
arpl
cmc
adc
fs
sbb
test
cld
jb
xchg
pop
aam
sub
mov
and
cmp
daa
inc
mov
pop
int
and
arpl
inc
aad
sub
insb
push
les
xchg
repz
mov
in
stos
cmp
roll
mov
jmp
clc
cmp
jl
notb
mov
jg
pusha
dec
frstor
xchg
in
jno
xorb
adc
mov
inc
mov
or
lret
mov
inc
and
and
push
xor
sbb
jp
jp
mov
movsb
ret
ds
stos
daa
mov
and
imul
mov
shlb
dec
das
fisubrl
adc
idivb
mov
or
dec
mov
icebp
popa
icebp
nop
arpl
add
lock
notb
lods
mov
in
in
jns
mov
fisttps
mov
out
mov
jecxz
in
jle
add
dec
fisttpl
fnstsw
fildl
mov
stos
push
test
push
testb
add
sbb
or
cmpsb
outsl
lds
mov
cmpsb
addb
icebp
add
adc
sub
out
push
inc
lds
iret
cmp
pusha
pop
repnz
sbb
add
hlt
push
cmp
mov
xchg
lock
idivb
mov
iret
inc
mov
xchg
mov
pop
leave
test
and
mov
mov
and
shlb
nop
mov
pushf
xchg
add
adc
mull
icebp
dec
imul
outsb
hlt
push
cld
aas
lods
xor
sub
jecxz
call
sahf
or
cmpsb
and
inc
shll
inc
daa
rcrb
sbb
mov
cwtl
decl
loop
les
int3
sub
popf
sbb
xor
mov
inc
mov
or
ja
xchg
cmc
add
jno
outsl
or
jecxz
sbb
sub
sbb
adc
xor
adcb
out
movsb
sbb
mov
mov
das
pushf
cmp
pop
enter
jp
dec
frstor
cmpsl
push
in
adc
das
mov
mov
cmp
xor
jb
bound
popa
add
jbe
mov
inc
mov
std
jle
mov
push
scas
inc
adc
dec
int
and
sub
jl
jne
push
push
add
in
mov
mov
lret
arpl
cmc
pop
mov
iret
inc
into
pop
cmp
jno
lods
lret
inc
xchg
popl
xchg
lock
jmp
hlt
xchg
outsb
leave
rcll
push
out
mov
xor
sbb
pop
enter
xchg
add
movsb
xor
push
xor
jns
mov
popa
stc
imul
shll
sahf
stc
or
pop
ret
ret
mov
rcrb
loopw
mov
inc
mov
clc
or
scas
sub
dec
into
pop
cmp
xor
jp
jp
dec
lret
lret
adc
mulb
push
aas
mov
lods
es
cs
data16
jl
notb
push
fimull
fisubrl
je
push
jecxz
push
in
push
mov
jg
dec
push
jecxz
push
in
add
add
sahf
sub
xchg
scas
lods
lret
inc
testl
mov
inc
mov
pushf
or
js
mov
scas
cmp
je
lea
lods
lret
inc
movsb
cmpsb
xor
scas
inc
xor
and
pop
ljmp
pop
int
loopw
and
xlat
inc
and
aaa
in
insb
loop
je
add
sbb
outsb
aaa
mov
inc
mov
mov
out
mov
movsb
ret
ds
add
add
mov
inc
mov
fs
bound
scas
lret
sti
jnp
mov
dec
les
int3
sbb
push
jno
inc
int
mov
out
push
lret
ljmp
fmull
push
in
xlat
inc
and
jbe
add
std
or
add
sbb
in
sbb
aas
pop
test
mov
fidivrs
punpckhdq
or
jle
lock
in
pop
enter
pop
fimull
fidivl
lret
dec
fnstcw
or
jns
adcb
cmpb
movsb
ret
ds
testb
int
and
cmp
ret
push
test
push
cld
xor
daa
mov
lods
lret
inc
mov
stc
imul
xchg
adc
jno
xchg
testb
push
mov
jl
cmp
int
repz
rclb
pop
cmp
or
sub
cmpsb
into
pop
enter
push
movsb
pop
lds
iret
push
scas
cmp
rcll
sub
popa
add
sbb
stos
cmp
sub
pushf
xor
and
mov
fstpl
stos
data16
cltd
or
jno
jns
mov
mov
mov
aaa
loop
pop
into
test
dec
das
fidivl
or
add
sbb
push
xchg
repz
ljmp
cli
je
lea
sbb
int3
inc
mov
cmp
in
jle
mov
adcl
adc
sub
mov
les
scas
pop
repnz
iret
pop
cmp
mov
inc
fisttpl
sbb
fmuls
fcomps
sbbl
push
sahf
or
cmpsb
dec
filds
mov
cmpsb
jg
ja
loope
sub
and
ss
gs
xor
adc
inc
shll
aas
pop
test
and
jg
pop
lods
sub
and
pop
int3
stos
xchg
mov
scas
lret
xchg
sbb
adcb
xorb
jns
jmp
xor
push
lds
rorb
xchg
push
fisttpll
out
mov
test
test
test
iret
pop
int3
stos
iretw
test
testl
xor
jbe
adc
je
lea
cmp
aaa
cmpsl
ret
jo
jg
jmp
jle
or
push
les
scas
leave
cmp
xchg
pop
xchg
adc
pop
popf
or
mov
inc
mov
jo
jg
push
lret
mov
inc
and
sub
dec
frstor
ret
ds
cli
push
lock
adc
es
cs
pop
int
addr16
and
push
lds
test
insb
loop
je
xchg
pop
xchg
repnz
sub
repnz
mov
mov
sbb
lcall
push
and
pop
icebp
imul
cs
fimuls
or
rolb
sarb
nop
push
pushf
sti
push
xchg
sbb
adc
push
out
jae
xchg
xor
insb
in
bound
xor
inc
addl
pop
mov
loop
notl
pop
mov
cltd
adc
test
lods
lret
inc
mov
xchg
jb
sub
pop
int3
stos
data16
mulb
cmp
sub
mov
xchg
mov
add
test
mov
sbb
imul
sub
cmp
outsl
insb
mov
add
mov
push
jmp
popa
stc
imul
out
jo
xchg
xchg
push
pushf
sti
push
incb
dec
adc
bound
mov
mov
pop
fisttpll
out
adc
jns
mov
add
pop
fisttpll
out
loopne
sti
sahf
insl
adcl
int
aam
dec
lods
jbe
cmpl
je
lea
scas
cmp
mov
add
pop
jl
add
xor
fs
popf
insb
lret
dec
jecxz
push
in
mov
xorl
ss
mov
push
in
inc
fs
pop
repnz
call
sub
dec
fdivrl
mov
xchg
add
jo
xorl
add
add
dec
jle
jbe
loopne
inc
fimuls
popa
mov
pushf
sti
push
fists
inc
and
cmp
insl
std
test
mov
sahf
stc
or
rclb
pop
mov
mov
inc
mov
sbb
inc
leave
pop
cmp
cmp
and
and
push
adc
movsl
sub
xor
push
fmuls
fcomps
xor
or
dec
fisttps
movsb
ret
popl
mov
sub
jp
and
sub
push
lds
inc
sub
push
cmp
dec
ja
jge
negl
mov
enter
xor
dec
push
leave
pop
cmp
dec
imul
sbb
mov
xchg
adc
sahf
sbb
fstps
xchg
addr16
inc
push
xor
sbb
xchg
add
fs
inc
and
ss
push
cmc
gs
pop
mov
aad
xchg
pop
bound
jmp
and
outsl
loope
adc
and
mov
lods
and
add
inc
shlb
adc
jnp
mov
lds
mov
je
out
inc
lods
cmp
mov
sub
sete
insl
pushf
jle
fdivl
in
inc
jecxz
push
in
mov
les
stos
push
rolb
rcrb
fstpl
stos
data16
cmc
add
or
jp
xchg
cmc
add
addb
mov
jns
mov
sahf
adc
in
sbb
fsts
cmpsl
push
mov
pop
int
cmpl
push
mov
orl
sub
and
movzwl
mov
mov
inc
mov
add
inc
and
adc
pusha
shlb
xchg
jge
je
xor
pop
ds
iret
pop
lret
scas
pop
cwtl
xchg
setg
or
sub
xor
repnz
loop
je
pop
push
xor
dec
push
xlat
inc
and
push
and
xor
ds
pusha
out
adc
adc
sub
outsb
push
roll
shll
jno
xorb
lret
lret
push
mov
loop
je
sbb
outsl
sub
test
cltd
clc
or
sbb
pop
sbb
add
add
sahf
sub
pop
adc
xlat
inc
aam
dec
out
outsb
cld
fwait
jbe
push
lret
pop
ds
cmp
pop
leave
pop
cmp
outsb
cltd
add
out
adc
or
or
inc
fimuls
push
in
call
movsl
xor
lea
aas
scas
lret
jb
pusha
pop
repnz
push
xor
sub
jnp
in
adc
pop
mov
gs
pushf
outsl
cwtl
rcrb
scas
pop
mov
xchg
or
outsl
rorl
dec
test
xlat
inc
and
cmp
js
mov
lods
and
push
pushf
sti
push
ret
xor
lcallw
mov
cmpsl
adc
bound
mov
mulb
push
loop
ljmp
mov
ljmp
mov
mov
es
mov
dec
frstor
fsubrl
mov
mov
dec
adc
bound
xchg
pop
bound
and
sbb
roll
inc
cmpsl
scas
cs
jecxz
push
in
sub
js
xchg
cmc
add
or
dec
fdivrs
pushf
sti
push
hlt
fsts
mov
in
jle
scas
and
adc
in
sbb
cmp
xchg
push
mov
sbbl
repnz
inc
icebp
and
push
push
xor
jl
xchg
pop
bound
addr16
and
adc
mov
out
les
xchg
xchg
test
pop
test
add
lods
xor
notl
push
lret
xchg
pop
xchg
or
je
adcb
subb
jg
jmp
push
adc
push
outsl
jmp
or
pusha
cmc
jge
je
jbe
into
pop
cmp
xor
pop
lret
scas
pop
mov
xorb
xchg
adc
out
jae
insl
hlt
pop
mov
repz
mov
pushf
and
jmp
rcrl
mov
jns
cmp
inc
and
add
mov
iret
pop
lret
scas
pop
cwtl
mov
mov
sbb
add
adc
xor
outsb
cld
fwait
jbe
or
in
insl
std
test
cwtl
sbb
insb
or
out
int
ret
mov
push
mov
sbb
pop
adc
push
mov
es
fcoml
mov
push
jno
bound
jge
notl
icebp
js
mov
aam
enter
rcrl
fs
fmuls
fcomps
out
clc
lahf
push
cmp
fisttpl
mov
xor
scas
pop
xor
add
shll
xchg
jl
jne
xor
mov
sbb
xor
xchg
je
push
shll
xor
daa
xchg
mov
sbb
inc
lds
sub
shrd
mov
and
stos
cmp
dec
ficomps
test
mov
and
mov
in
loope
stos
cmp
inc
lret
inc
xlat
mov
mov
notb
push
lahf
push
aaa
mov
pop
aad
sub
jp
add
push
test
push
fadd
dec
fistpll
and
mov
testl
lea
aaa
cmpsl
ret
fwait
adc
icebp
popa
add
pop
dec
fldt
movsb
cmp
or
out
ds
cmp
dec
mov
and
stos
into
cmp
decl
out
out
mov
ficomps
lods
mov
cmpsl
ret
and
ret
mov
movsb
adc
mov
movsl
int3
aas
ljmp
stc
jl
jne
insb
icebp
jns
mov
jl
gs
pop
sub
cmp
dec
pop
aad
sub
jecxz,pn
jecxz
jne
in
popa
icebp
nop
arpl
movl
shrl
mov
arpl
cmc
pop
xor
cmp
sbb
xchg
aas
xor
movsb
xor
jle
mov
mov
jo
js
ljmp
dec
adc
scas
movsb
ret
ds
xlat
dec
fistpll
jo
loop
test
xchg
repz
and
xor
mov
jns
pusha
xor
mov
sarb
mov
mov
and
out
out
jl
negb
fistps
scas
pop
test
lds
iret
das
aam
repnz
adcb
inc
enter
outsl
dec
ret
ret
mov
inc
mov
pop
lcall
mov
sub
lds
out
popa
lock
pop
das
mov
popa
mulb
push
call
xor
outsl
lcall
in
jle
add
leave
push
mov
dec
fnsave
xor
sub
fs
adc
daa
cs
inc
mov
dec
iret
pop
cmp
aas
sub
loopne
hlt
xchg
outsb
nop
loope
hlt
xchg
outsb
mov
push
mov
mov
fmuls
fsubrs
jp
addr16
sbb
or
xchg
pusha
xchg
ja
aaa
mov
cmp
sbb
jno
xorb
mov
jns
and
and
add
stos
add
jns
mov
push
lods
outsb
cli
push
and
dec
fdivrl
sahf
stc
or
in
adc
outsb
push
lret
lret
out
adc
imul
push
pushf
xor
insl
cwtl
sbb
and
int
and
xor
jnp
in
adc
icebp
sub
mov
dec
mov
add
sbb
rcrb
xchg
add
jae
cmp
clc
ja
xorb
lea
mov
ds
inc
mov
push
adcl
insb
loop
je
lods
cmp
outsl
std
insl
hlt
pop
mov
pop
repnz
fs
lret
pop
ds
or
or
xor
pusha
pop
repnz
das
mov
ljmp
sahf
insl
test
stc
imul
lret
mov
xor
mov
test
imul
insl
in
loope
icebp
nop
arpl
push
mov
popa
xchg
outsl
insb
or
scas
pop
pop
jp
and
pop
lods
scas
cmp
add
mov
or
lret
cmpsl
push
mov
xchg
jl
lret
pop
ds
jno
jl
divb
clc
outsb
or
xor
nop
adc
je
lea
lock
bound
dec
or
bound
sahf
or
cmpsb
dec
or
aaa
mov
xor
fcoms
mov
inc
es
ds
inc
mov
jecxz
std
test
dec
push
xor
push
and
or
mov
mov
jmp
roll
shll
int3
inc
and
scas
leave
cmp
xchg
mov
xchg
adc
cld
gs
pushf
outsl
cmp
addr16
insb
or
out
xor
seto
popa
nop
pop
bnd
xorl
lret
and
and
inc
and
xor
pop
xchg
repnz
in
push
lahf
push
mov
mov
in
jge
negl
lret
cmp
hlt
and
inc
int
and
es
fstpt
or
insl
std
test
push
xchg
add
cmp
sbb
aas
rclb
push
loope
fdivl
in
adcb
sbb
pop
mov
jns
and
pop
ds
loop
in
jg
xor
outsl
hlt
push
cld
push
fildl
mov
stos
nop
setg
or
mov
movsl
stos
cmp
fdivl
in
aam
lds
shlb
leave
pop
fstpt
mov
pusha
notb
shll
jb
addr16
fdivl
in
movsb
sub
add
ja
sub
or
in
mov
ja
xorb
jp
jp
or
daa
xchg
add
push
rclb
imul
xor
insb
pop
pop
jp
and
shll
push
lds
xchg
mov
mov
sbb
fs
popf
insb
xchg
inc
and
cmp
mov
xchg
adc
cwtl
push
imul
sub
sub
jge
xchg
cmc
add
fcomps
stos
cbtw
add
mov
cmpsb
shll
in
sbb
add
push
std
and
cmp
xchg
add
jbe
jl
jne
ja
pusha
notb
iret
stos
pop
mov
ja
xorb
push
lret
sti
or
adc
dec
jecxz
push
in
insl
std
test
adc
xor
mov
add
sbb
out
adc
inc
inc
fstpt
movsb
cmp
mov
scas
jp
jno
jecxz
push
jns
jbe
cmpl
mov
cmp
sub
and
pop
xor
sub
pop
addr16
adc
adc
mov
dec
mov
pop
mov
mov
cmpsb
shll
fistl
mov
xchg
cld
pxor
leave
pop
rolb
shlb
push
cwtl
push
imul
into
pop
cmp
adc
or
mov
sbb
aad
rcll
push
out
leave
pop
into
test
xlat
mov
std
cs
mov
andb
icebp
pop
cmpsb
cmp
mov
xchg
mov
add
xor
and
pop
rcll
cmpsb
push
aam
hlt
push
cld
jnp
fimuls
das
enter
dec
mov
fwait
jno
adc
dec
int
and
sub
pop
cmp
add
dec
fstpt
xor
scas
inc
pop
fwait
or
push
int
ret
mov
pusha
notb
jo
loop
pusha
in
sbb
aam
dec
cmpsb
mov
xchg
repnz
and
cmp
sub
pop
or
sbb
pushl
xorl
cmp
and
test
outsb
add
mov
or
test
notl
ljmp
cwtl
imul
or
enter
or
icebp
jmp
pushf
outsl
xchg
ja
loope
mov
ja
jle
call
push
in
adc
imul
sbb
add
in
adc
in
sbb
sub
adc
mov
scas
gs
jge
testl
flds
inc
cmpsb
js
addr16
or
out
adc
dec
addr16
repz
je
inc
mov
lods
mov
loop
inc
aad
dec
sti
dec
fstpt
mov
and
jne
aaa
cmpsl
aaa
push
mov
bound
cmpsb
push
in
out
adc
dec
sbb
push
xchg
add
jno
fimuls
or
cli
push
dec
frstor
mov
ret
inc
and
sbb
pop
iret
stos
pop
sbb
roll
inc
movsl
leave
dec
frstor
jl
pop
add
push
jno
jne
xchg
add
jnp
xchg
add
pusha
or
adc
jae
xchg
lret
inc
shlb
shll
testl
lock
dec
push
xor
imul
in
out
ljmp
mov
shll
fstpt
pop
cmp
mov
cs
mov
insb
cmc
gs
pop
faddl
dec
cmpsb
fmull
mov
add
das
mov
cwtl
push
imul
xchg
pop
bound
cmc
add
jg
outsl
or
stc
mov
stos
int
jmp
daa
mov
and
je
addr16
pop
jecxz
lcall
movsb
ret
ds
jp
jp
leave
inc
mov
mov
inc
and
jns
lods
lret
inc
xchg
push
fisttpll
out
push
fmuls
fdivrs
hlt
push
cld
dec
push
lret
cmc
fisttpl
mov
xor
cmpsb
xor
scas
sbb
lock
lret
mov
mov
mov
xor
mov
inc
mov
xor
and
push
lds
mov
test
clc
jg
pushf
xor
insl
cs
inc
mov
mov
cmpsb
shll
lock
xorb
adcl
pop
int3
stos
data16
insb
loop
je
mov
stos
int
aam
adc
push
lds
dec
mov
push
in
sbb
jnp
mov
jno
insb
or
rorb
dec
sbb
sbb
sbb
xchg
and
mov
jns
and
scas
cmp
mov
jnp
js
ljmp
xor
push
mov
pop
ds
in
out
jo
pop
xchg
add
push
aad
fdivrl
push
jns
gs
pushf
outsl
test
inc
xlat
mov
enter
cmp
dec
add
out
jae
xchg
sbb
xor
dec
jle
jnp
xchg
testb
loop
inc
rclb
xor
push
out
rcrl
stos
pop
xchg
test
pushf
sti
push
hlt
dec
rclb
and
mov
inc
mov
aad
leave
test
jge
pusha
pop
repnz
mov
scas
leave
cmp
in
pop
mov
mov
sbb
or
sbb
clc
or
shrb
mov
sbb
or
out
sbb
mov
cmpsl
add
mov
js
popa
mov
stos
or
das
mov
inc
mov
sbb
or
push
xor
daa
in
jae
xchg
mov
mov
leave
add
js
ljmp
rorb
adcl
fs
popf
insb
mov
into
cmc
jl
jne
ja
fimuls
inc
lahf
adc
sub
sbb
enter
pop
in
adc
daa
mulb
xchg
outsb
fistps
mov
jns
and
push
cld
dec
sbb
sbb
and
imul
dec
mov
xchg
faddl
mov
rorl
mov
insb
or
in
adc
mov
mov
int3
inc
and
jl
idivb
add
xchg
adc
inc
ret
ret
push
lret
mov
rclb
and
hlt
ja
xorb
inc
and
sub
iret
das
outsb
out
adc
or
fdivl
in
push
lds
decl
enter
jne
and
xchg
mov
mov
xchg
pop
jp
es
pusha
notb
cmc
pushf
outsl
fbld
and
sbb
mov
jmp
lds
xchg
cmpsb
hlt
insl
std
test
mov
mov
cmpsl
aaa
push
mov
adc
aam
mov
ret
or
enter
xor
es
adcl
test
pushf
xor
pop
cmp
sbb
mov
mov
std
insl
hlt
pop
testb
daa
lods
cmp
int
and
es
push
test
push
mov
mov
std
or
xlat
pop
enter
jge
jge
testl
scas
test
mov
sbb
adc
in
jle
enter
addr16
push
shll
scas
pop
cld
push
roll
aad
cmpsl
cmp
mov
cmpsb
mov
lret
inc
and
jge
divl
cwtl
push
imul
rclb
sub
pusha
notb
add
jno
xchg
or
bound
pop
cmp
add
jo
xorl
sbb
orb
decl
stc
or
loope
lcall
mov
and
test
or
dec
mov
test
mov
inc
mov
ja
jnp
in
pop
rclb
push
clc
cmpsb
movsb
ret
popl
or
xor
insl
hlt
pop
mov
adc
lods
lret
inc
icebp
imul
or
mov
xchg
push
fldl
mov
lods
xchg
or
xchg
add
jp
xor
fwait
or
sbb
mov
ss
mov
rol
inc
shlb
sub
inc
popf
sbb
dec
fidivrs
and
pop
xor
aad
int3
stos
data16
push
jle
mov
jmp
cmpsb
shll
dec
push
xor
or
jae
ljmp
fwait
or
xor
dec
fdivrs
lcall
jae
cmp
push
les
sub
push
push
insl
hlt
pop
mov
or
push
lret
lret
pop
sub
add
xchg
popf
pushl
jmp
add
jg
push
jmp
mov
bound
add
add
jmp
in
push
lahf
push
fs
adc
adc
loope
xor
incl
jmp
push
adcl
cmp
sbb
inc
icebp
in
push
jmp
xor
jmp
popa
jmp
inc
imul
add
ficoml
mov
scas
lret
dec
rcll
adc
jmp
mov
pushf
jmp
jg
push
jmp
ja
pop
addl
jmp
movsb
sub
sbb
aad
cmp
lcall
mov
and
jle
int
loope
xchg
cmp
mov
xchg
jo
enter
insb
das
cli
mov
xor
mov
push
sti
jmp
ficoms
cmpsb
push
cli
lods
inc
shll
addl
push
jmp
and
hlt
push
cld
dec
cmpsl
aaa
push
mov
adc
pop
mov
push
pushf
jmp
mov
nop
flds
mov
xorb
and
push
dec
mov
addl
push
push
addl
jmp
adc
lock
push
addl
call
jmp
mov
pushf
sti
push
fbld
movsb
cmp
inc
inc
add
adcl
test
dec
ret
mov
pop
adcl
test
and
aas
scas
lret
jecxz
icebp
nop
arpl
inc
movsb
sbb
inc
rclb
pop
xchg
adc
push
jnp
icebp
addl
push
addl
push
jmp
daa
mov
hlt
jle
mov
and
mov
stos
adc
jo
xorl
rolb
aaa
mov
outsb
loope
adc
inc
pusha
repnz
pop
repnz
xor
xor
fimull
mov
sbb
ds
mov
inc
mov
mov
mov
and
add
repnz
jmp
jb
xchg
imul
jp
ja
loope
lahf
popa
movsl
sub
cmpl
je
lea
jmp
jno
jg
jmp
scas
pop
mov
lea
insl
std
test
idivl
mov
dec
into
pop
cmp
cmpsl
and
jl
xchg
testb
repnz
adc
adcl
test
scas
cmp
mov
jl
fs
or
and
int3
inc
fidivrl
push
xor
cmp
test
fsts
mov
popa
add
xor
rcll
push
out
mov
arpl
popa
add
inc
jl
arpl
cmc
pop
mov
mov
and
jb
es
test
fwait
or
cmp
dec
fnstcw
jbe
loopne
das
mov
dec
mov
mov
repz
gs
stc
imul
aas
pop
test
repz
out
fisttps
cmpsb
and
add
fwait
or
dec
jg
imul
adc
mov
jle
mov
dec
mov
cmp
sub
mov
lret
cmp
data16
push
jno
inc
push
dec
dec
fmuls
fsubrs
mov
jg
and
test
add
std
or
test
and
mov
je
test
xchg
adc
pop
std
cmp
xor
scas
insl
ret
stos
pop
test
jno
xor
es
cs
lock
lret
pop
ds
addl
pop
fmuls
fdivs
sub
aam
shlb
jnp
inc
jp
insb
or
repz
mov
inc
shlb
adc
test
shlb
lret
lea
std
or
xchg
sbb
and
cld
xchg
cmc
add
pushl
xchg
mov
mov
and
outsb
fimull
mov
push
popa
nop
cmp
mov
sub
std
dec
inc
rolb
shlb
fwait
or
pop
and
sub
push
pop
xchg
mov
lock
ja
xchg
add
xchg
or
push
inc
les
int3
and
enter
and
jne
mov
test
xchg
lock
sub
jge
cld
xchg
cmc
add
or
pusha
repz
sbb
out
cld
fwait
jbe
mov
fwait
decb
stos
rclw
adc
sahf
stc
or
outsb
loope
adc
inc
imul
pop
iret
pop
cmp
jle
aaa
cmpsl
ret
inc
rolb
sarb
and
fwait
or
xor
repz
mov
and
sarl
ja
loope
iret
push
lds
pop
mov
int3
push
shlb
stos
data16
adc
xlat
mov
insl
rcll
add
icebp
stos
pop
sbb
xchg
hlt
dec
mov
mov
adc
cmp
nop
xchg
jbe
out
sbb
imul
xchg
fs
dec
iret
pop
cmp
and
pop
dec
lret
mov
adc
fwait
adc
fisttpl
callw
pop
cwtl
xchg
out
dec
loope
pop
rolb
rclb
pop
rolb
shlb
jg
adc
inc
shlb
lds
push
in
insb
rep
loop
je
nop
adc
mov
add
add
ficompl
fs
dec
iret
pop
cmp
and
pop
aas
lret
jns
mov
adc
fwait
adc
fisttpl
callw
call
inc
mov
pop
rolb
rclb
pop
rolb
shlb
jg
adc
sub
cwtl
sbb
mov
jmp
stc
inc
cs
push
ret
cmpsb
push
mov
cli
jo
lea
jmp
sbbl
add
jmp
mov
rorb
xchg
add
sahf
jbe
mov
jle
call
dec
outsl
outsl
bound
jb
je
arpl
inc
and
cs
gs
outsl
add
mov
imul
push
shlb
or
into
test
xchg
repz
out
out
lret
call
jmp
jno
addr16
pop
and
sub
loope
hlt
xchg
outsb
mov
cmp
fsubs
cmp
je
jmp
data16
pop
loop
pop
lcall
sahf
stc
or
fstl
mov
xlat
mov
stos
je
xchg
testb
arpl
gs
xchg
repnz
sbb
aaa
jecxz
out
jno
add
cmpsb
xor
scas
pop
adcl
cwtl
push
pushf
sti
push
movsb
push
ret
ret
insl
std
test
outsb
stc
imul
pop
xor
cmpw
je
jmp
test
arpl
xchg
gs
xchg
push
pop
inc
fmuls
fcomps
sbb
aad
mov
cltd
outsb
xor
push
ljmp
add
add
sbb
add
mov
inc
xlat
mov
cmpsl
mov
fsubl
movsl
xor
push
stos
cs
and
mov
fstpt
fmull
jmp
cmp
ficoms
mov
dec
fisttpll
orb
sti
push
aam
mov
xchg
xor
pusha
notb
inc
and
js
jecxz
push
in
xchg
test
push
mov
add
loopne
in
jg
sbb
stc
insb
loop
je
popa
stc
imul
dec
sub
imul
adc
dec
sub
sete
cwtl
decl
lea
jp
in
imul
fdivrl
sbb
popa
mov
sbb
call
popa
jmp
lret
dec
fnstcw
jbe
loopne
sbb
leave
dec
fdivrl
lds
adc
adc
cmp
fstpt
mov
aad
adc
int3
stos
data16
fdivl
in
push
cltd
or
ds
fimull
fisubrl
test
cmp
je
sub
mov
mov
fimull
mov
mov
daa
mov
and
insl
mulb
sbb
loopne
adc
or
jle
call
js
push
push
imul
jl
jg
mov
divl
jl
popf
and
rclb
and
mov
int
fdivrs
pop
jb
jp
dec
ret
mov
sub
inc
lret
lret
mov
jg
outsb
in
jge
testl
andl
jno
xorb
roll
rcll
add
pop
jp
xor
jl
jne
xor
cwtl
or
adc
xchg
push
nop
push
popa
nop
and
mov
jmp
push
in
pop
inc
aad
sub
jp
jl
jne
inc
sbbb
ljmp
stos
inc
fldl
dec
movsb
int3
push
shlb
adc
add
jmp
add
add
push
jmp
pop
push
xor
dec
in
outsb
cld
fwait
jbe
int
fdivrl
pop
cmp
and
je
out
or
xor
xchg
pop
xchg
adc
ds
aas
mov
arpl
xchg
cmpl
lods
pop
scas
rorb
push
icebp
sub
jbe
scas
cmp
mov
in
notl
dec
fisttps
fsts
or
lds
scas
pop
ljmp
pop
enter
jp
inc
shlb
imul
dec
in
js
mov
mov
mov
fstpt
mov
lods
pop
lds
iret
and
dec
into
pop
push
xor
dec
jo
pusha
pop
repnz
pop
jp
jg
adcl
mov
repz
mov
js
insl
hlt
pop
rcl
push
les
cwtl
decl
loop
jnp
mov
icebp
jp
jp
xor
sbb
outsl
inc
roll
aad
and
cmp
jge
mov
lods
daa
mov
and
aad
fs
gs
push
cmpsb
movsb
ret
ds
pop
roll
aad
xor
lea
mov
sbb
or
out
xchg
mov
and
sti
push
hlt
int
lret
scas
pop
mov
mov
dec
mov
js
push
mov
mov
push
mov
es
mov
mov
mulb
push
sbb
lea
cltd
clc
or
xchg
adc
cmpsl
aaa
push
mov
adc
or
and
xchg
push
adc
aaa
incl
inc
and
test
cmp
adc
int
fidivrl
and
lods
lret
inc
xchg
adc
rorl
repz
lds
mov
adc
xor
imul
push
lds
cmp
pusha
cmpsl
xor
arpl
xchg
les
lcall
inc
and
xor
je
out
add
es
cs
jae
arpl
cmc
je
push
mov
mov
pop
xchg
mov
sahf
stc
or
ss
inc
mov
pop
test
fcomps
stos
cbtw
mov
movsl
int3
aas
ljmp
pop
jecxz
push
in
sbb
push
ret
cmpsb
push
mov
xchg
jb
imul
sub
sub
jbe
cmpl
jl
jne
push
dec
rcll
add
cmpsb
add
add
sahf
sub
xchg
pop
bound
stos
data16
jae
jo
loop
mov
cwtl
adc
push
push
xor
jns
inc
popf
push
add
add
or
addl
call
jmp
gs
push
into
push
lret
lahf
jmp
nop
pop
rclb
sub
lcall
aaa
push
mov
sti
push
xchg
and
xchg
adc
or
in
jae
xchg
pop
fmuls
fsubs
adc
fldenv
xchg
gs
roll
movsb
mov
xlat
pop
repnz
xchg
stc
movsb
xor
xchg
pop
bound
cld
psubusw
push
xor
add
pop
jb
sub
inc
es
jae
jbe
loopne
aas
lods
cmp
jo
xorl
and
shrb
push
xor
ja
push
lret
sti
int3
push
les
dec
adc
pop
xor
fiaddl
mov
test
cld
jnp
or
xor
fimull
fidivl
insb
in
bound
mov
in
bound
cmc
pushf
outsl
mov
xor
add
push
mov
fldt
leave
dec
lret
pop
ds
inc
int
and
es
imul
jge
mull
xchg
and
push
pushf
sti
push
mov
movsb
cmp
sbb
ja
loope
in
jl
jne
xor
push
scas
pop
call
test
daa
shlb
mov
ja
arpl
cmc
xor
mov
inc
mov
cmp
cmp
inc
push
into
pop
cmp
ds
mov
mov
dec
mov
je
dec
inc
ret
ret
and
mov
dec
mov
mov
mov
arpl
xchg
gs
mov
inc
mov
sbb
add
call
fnstsw
and
test
mov
and
fstl
mov
and
mov
inc
mov
xchg
popa
enter
xor
jbe
adc
aad
sub
insb
cmp
test
testl
mov
add
add
adc
add
mov
push
notl
mov
mov
push
imul
movsb
cmp
dec
stos
xor
cli
push
fdivl
in
mov
mov
cmp
mov
int3
dec
frstor
pop
mov
sbb
sub
push
mov
cli
lcall
movsl
xor
scas
aas
pop
test
adc
or
shlb
jbe
insl
hlt
pop
testb
add
xor
mov
lea
xchg
repnz
idivb
mov
test
test
push
test
jg
mov
adcb
loope
mov
lcall
lods
ds
aas
pop
test
lret
mov
xchg
stc
popa
icebp
nop
arpl
fstpt
aas
movsl
xor
push
lds
push
std
jl
sub
lds
and
sub
pop
rclb
cmpsl
push
mov
dec
test
xor
inc
rcll
push
xchg
pop
xchg
adc
mov
lods
inc
inc
jb
adc
add
and
add
xor
add
push
adc
add
add
jno
add
adcl
add
add
and
add
cmp
add
dec
adc
add
add
jae
add
mov
adc
add
add
add
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
lods
adc
add
arpl
add
mov
add
aam
add
or
add
push
pop
add
imul
add
add
xchg
pop
add
mov
add
in
pop
add
xor
add
dec
sbb
add
add
jae
add
xchg
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
je
add
lods
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
pop
sbb
add
add
push
sbb
add
sbb
add
sbb
add
sbb
add
cli
sbb
add
xchg
push
add
scas
push
add
loope
add
push
pop
add
adc
add
xchg
pop
add
mov
add
ret
pop
add
clc
pop
add
adc
add
sbb
add
and
add
pop
and
add
add
jb
add
mov
add
loope
add
repz
add
add
andl
add
and
add
and
add
and
add
and
add
add
je
add
lods
and
add
and
add
and
add
and
add
and
add
and
add
add
pop
and
add
jle
add
pop
add
pop
add
xchg
add
frstor
add
jecxz
add
ljmp
add
add
cmpsb
daa
add
lods
daa
add
mov
add
mov
add
shll
add
daa
add
jecxz
add
call
daa
add
push
sub
add
sub
add
sub
add
sub
add
add
push
sub
add
add
pop
sub
add
sub
add
add
pusha
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
jns
add
mov
add
mov
add
fwait
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
dec
sub
add
add
popa
sub
add
add
jae
add
jp
add
mov
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmpsb
sub
add
sub
add
add
insb
sub
add
jp
add
mov
add
mov
add
dec
add
dec
add
push
add
jge
add
xchg
add
xchg
add
xor
das
add
dec
das
add
pop
das
add
insl
das
add
das
add
pop
xor
add
xor
add
xor
add
xor
add
xor
add
add
imul
add
xor
add
xor
add
xor
add
add
aam
add
adc
add
sbb
add
xor
add
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
add
jbe
add
jge
add
xorb
add
add
mov
add
mov
add
out
add
in
add
repnz
divl
add
add
add
adc
add
and
add
sub
add
sub
aaa
add
push
aaa
add
mov
aaa
add
in
aaa
add
cmp
add
cmp
add
add
add
xor
add
cmp
add
and
add
sub
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
ss
add
add
push
cmp
add
add
insl
cmp
add
add
jg
add
mov
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
test
add
inc
add
lock
add
mov
add
jno
add
xor
add
arpl
xchg
inc
add
ret
inc
add
repnz
add
and
add
add
addl
mov
add
jecxz
add
adc
add
add
jb
add
mov
inc
add
push
inc
add
xor
add
add
xchg
inc
add
lods
inc
add
ret
add
inc
add
out
inc
add
add
add
sbb
dec
add
dec
dec
add
bound
add
add
lcall
add
dec
add
mov
dec
add
xchg
dec
add
rorb
dec
add
int
add
dec
add
loopne
add
mov
add
push
dec
add
stc
dec
add
loop
add
dec
push
add
cmc
push
add
push
add
lret
push
add
pushf
push
add
mov
add
xor
add
push
add
dec
push
add
pop
push
add
mov
add
push
add
mov
add
mov
push
add
ficoms
add
push
add
sti
push
add
cmp
xchg
and
add
add
mov
push
add
pop
push
add
or
add
sbb
add
and
add
add
push
push
add
int3
push
add
hlt
push
add
add
add
push
add
sbb
add
push
add
and
push
add
inc
push
add
dec
push
add
pop
push
add
push
push
add
push
add
cltd
push
add
mov
add
mov
push
add
fists
add
push
add
cli
push
add
sub
pop
add
inc
pop
add
dec
pop
add
pop
pop
add
gs
add
push
add
outsl
pop
add
sbbb
nop
pop
add
sahf
pop
add
mov
pop
add
aam
add
ficompl
add
pop
add
jmp
pop
add
cld
pop
add
pop
pop
add
push
pop
add
cs
add
aaa
pop
add
inc
pop
add
dec
pop
add
push
pop
add
pop
pop
add
mov
add
pop
add
repnz
add
push
pop
add
sbb
add
sub
add
pop
add
inc
pop
add
scas
pop
add
mov
pop
add
pop
add
call
pop
add
es
add
ss
add
cmp
dec
pop
add
push
pop
add
mov
add
add
pop
add
loopne
add
cld
pop
add
sbb
add
dec
pop
add
jbe
add
jg
add
mov
pop
add
mov
pop
add
jecxz
add
in
pop
add
cmc
pop
add
add
add
pop
add
cmp
add
add
pop
pop
add
outsl
pop
add
sbbb
xchg
add
pop
add
rcrb
add
pop
add
fistps
add
pop
add
add
add
adc
add
pusha
add
and
add
add
insb
pusha
add
stos
pusha
add
frstor
add
pusha
add
punpcklwd
add
add
js
add
andl
add
popa
add
mov
popa
add
popa
add
loopne
add
jmp
add
icebp
popa
add
add
add
bound
add
bound
add
bound
add
bound
add
add
fsubl
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
adc
data16
jmp
add
add
push
add
mov
add
add
in
add
stc
add
arpl
add
push
add
push
imul
add
add
insl
add
cmp
add
jae
add
and
add
jb
add
jae
add
jae
add
jae
add
add
mov
add
shlb
add
jae
add
add
mov
add
repz
add
ja
add
ja
add
ja
add
js
add
add
arpl
add
jns
add
add
pop
jns
add
jns
add
jns
add
jp
add
jp
add
jp
add
jnp
add
add
push
jnp
add
jl
add
jge
add
jle
add
jg
add
jg
add
jg
add
jg
add
addb
inc
addb
addb
add
addb
or
add
and
add
mov
addl
add
add
call
addb
sbb
add
adc
lea
add
lea
add
add
mov
add
into
mov
add
add
xchg
add
sbb
add
mov
add
nop
add
xlat
nop
add
add
add
inc
xchg
add
jge
add
mov
xchg
add
jle
add
ret
xchg
add
or
add
mov
xchg
add
out
xchg
add
push
xchg
add
inc
xchg
add
mov
add
xchg
add
pop
xchg
add
mov
add
ret
xchg
add
jg
add
ret
add
xchg
add
cs
add
cmp
add
pop
xchg
add
pushf
xchg
add
iret
xchg
add
pop
cwtl
add
insl
cwtl
add
negl
add
bound
add
jl
add
lea
add
out
cltd
add
cld
cltd
add
sbb
add
lcall
sub
fwait
add
adc
add
pushf
add
cmp
add
dec
pushf
add
lahf
pushf
add
cmpsb
pushf
add
lods
pushf
add
enter
rcrl
add
add
out
popf
add
std
popf
add
xchg
add
repnz
add
negl
add
sbb
mov
add
andl
add
stos
mov
add
add
out
add
repnz
add
mov
add
inc
mov
add
mov
add
cmp
add
fldenv
add
lea
add
adc
add
cmp
add
mov
cmpsb
add
add
add
nop
cmpsl
add
mov
add
clc
cmpsl
add
adc
add
pop
test
add
add
sub
add
push
test
add
add
xchg
test
add
add
movsb
test
add
test
add
test
add
test
add
or
add
adc
add
jp
add
test
add
cmpsl
test
add
mov
add
mov
add
shrl
add
sub
stos
add
cmp
add
inc
stos
add
inc
stos
add
dec
stos
add
dec
stos
add
push
stos
add
lcall
add
add
lods
stos
add
sti
stos
add
add
add
lds
add
loopne
add
and
add
add
dec
lods
add
test
add
ljmp
add
scas
add
js
add
sub
add
aas
mov
add
add
add
data16
add
add
jp
add
mov
add
shlb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
jo
add
lea
add
mov
add
mov
add
mov
add
add
mov
add
dec
mov
add
add
jp
add
lea
add
lea
add
lods
mov
add
add
add
xor
add
cmpsl
mov
add
mov
mov
add
aad
add
fistpll
add
cld
mov
add
and
add
mov
add
jg
add
xchg
mov
add
or
add
xor
add
inc
mov
add
push
mov
add
xchg
mov
add
movsl
mov
add
mov
mov
add
in
add
in
mov
add
mov
add
and
add
pop
mov
add
cmpsb
mov
add
dec
mov
add
mov
mov
add
inc
rolb
mov
add
mov
rolb
sti
rolb
adc
add
push
roll
pop
roll
roll
roll
xchg
roll
stos
roll
dec
ret
push
ret
rol
add
aad
add
inc
add
add
add
inc
enter
enter
lret
or
lret
in
lret
push
lret
add
or
add
sbb
lret
add
inc
lret
add
dec
lret
add
push
lret
add
gs
add
imul
add
add
xchg
lret
add
xchg
lret
add
test
add
mov
lret
add
loop
add
inc
int3
add
pop
int3
add
int3
add
outsb
int3
add
jae
add
iret
int3
add
aam
add
repz
add
mov
add
xchg
into
add
pushf
into
add
movsb
into
add
lods
into
add
mov
into
add
leave
into
add
ror
add
fxch
add
loope
add
test
add
pop
iret
add
bswap
add
pop
iret
add
sub
add
xor
add
pop
iret
add
jp
add
mov
add
nop
iret
add
dec
rolb
add
add
imul
add
add
jbe
add
jge
add
adc
add
add
add
roll
add
add
add
adc
add
pop
rolb
add
rolb
add
add
dec
rolb
add
add
imul
add
add
jns
add
jg
add
cmpsb
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
roll
add
roll
add
roll
add
roll
add
add
cmp
add
inc
roll
add
add
push
roll
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
add
sbb
add
sub
add
ss
add
cmp
add
inc
add
inc
add
push
add
jno
add
ja
add
adc
add
add
xchg
add
movsl
add
stos
add
out
add
xchg
xlat
add
sbb
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
fiaddl
add
fiaddl
add
fiaddl
add
add
stos
fiaddl
add
add
push
fiadds
add
add
insb
fiadds
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
jno
add
jl
add
sbb
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
add
add
add
push
loop
add
loop
add
loop
add
add
pop
in
add
in
add
add
add
push
in
add
in
add
in
add
in
add
in
add
in
add
in
add
out
add
out
add
add
add
imul
add
or
add
push
out
add
add
out
add
call
add
pop
call
add
sub
add
call
ljmp
pminsw
add
add
sbb
add
sbb
add
inc
ljmp
test
add
mov
add
nop
ljmp
cwtl
ljmp
mov
ljmp
repnz
cld
ljmp
add
add
push
add
jne
add
nop
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
in
add
sub
add
sub
add
xor
add
xor
add
cmp
add
cmp
add
inc
in
add
mov
add
nop
in
add
xchg
in
add
cwtl
in
add
pushf
in
add
in
in
add
in
add
jle
add
mov
add
movsb
in
add
in
add
or
add
xor
add
cltd
out
add
lahf
out
add
shr
add
out
add
pop
out
add
push
out
add
and
add
push
out
add
pop
out
add
sub
add
out
add
jecxz
add
icebp
out
add
and
add
sub
add
xor
lock
jnp
add
mov
add
lahf
lock
push
icebp
add
and
add
dec
icebp
add
data16
add
mov
add
fcomip
add
jmp
add
pop
repz
and
add
cmp
add
inc
repz
push
repz
pop
repz
repz
push
add
ret
add
hlt
add
dec
hlt
add
jno
add
jp
add
xchg
hlt
add
test
add
scas
hlt
add
mov
add
mov
hlt
add
add
add
adc
add
xor
add
xor
add
add
xchg
add
stos
testl
add
add
stos
stc
add
mov
add
push
cli
add
cli
add
ret
sti
add
jle
add
mov
add
add
add
sbb
add
sub
add
cwtl
incb
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
pop
add
add
push
push
add
or
add
sub
add
xor
add
fadds
add
out
add
pop
pop
add
cmp
add
inc
pop
add
dec
pop
add
dec
pop
add
popl
add
roll
add
pop
add
jmp
or
add
add
js
add
fimuls
add
ljmp
add
add
push
or
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
sub
add
cmp
add
dec
or
add
pop
or
add
mov
or
add
sub
add
xor
add
push
push
add
insb
push
add
jno
add
jge
add
test
add
xchg
push
add
cmpsl
push
add
scas
push
add
rorl
add
push
add
loopne
add
or
add
cmp
add
ja
add
mov
add
xchg
sgdtl
out
add
testb
add
adc
add
adc
add
adc
add
add
bound
add
insl
adc
add
add
adc
add
adc
add
adc
add
adc
add
add
pop
adc
add
adc
add
adc
add
adc
add
adc
add
add
adcl
add
cmpsb
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
add
pop
adc
add
add
arpl
add
add
imul
outsl
adc
add
adc
add
adc
add
dec
adc
add
mov
push
add
sbb
push
add
inc
push
add
adcb
add
push
add
adc
add
dec
pop
add
push
pop
add
lahf
pop
add
rcll
add
pop
add
or
add
sbb
add
sub
add
inc
sbb
add
add
push
sbb
add
add
sbbl
add
xchg
sbb
add
sbb
add
add
adc
add
push
sbb
add
add
pop
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
jne
add
xchg
add
cmp
add
inc
sbb
add
add
add
sbb
add
pushw
add
dec
pop
add
sbbl
add
cmp
and
add
add
iret
and
add
and
add
and
add
add
test
and
add
and
add
add
in
and
add
add
mov
add
insb
and
add
jecxz
add
inc
add
xchg
add
out
add
and
add
cmp
add
fs
add
sub
add
or
add
xor
add
aas
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
js
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
imul
jg
add
xchg
sub
add
sub
add
sub
add
mov
sub
add
and
add
xchg
add
cmpsl
add
scas
add
shrb
add
add
fldcw
add
loope
add
out
add
adc
das
add
pop
das
add
pusha
das
add
subb
add
das
add
out
add
or
xor
add
add
add
lea
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
jne
add
mov
add
xchg
xor
add
xor
add
add
mov
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
outsb
xor
add
add
jbe
add
jp
add
cltd
xor
add
add
loop
add
xor
add
xor
add
xor
add
xor
add
add
xorb
sahf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
dec
xor
add
push
xor
add
pop
xor
add
fs
add
stos
xor
add
sbb
add
cmp
add
cltd
add
mov
add
mov
add
fidivs
add
jo
add
lock
add
dec
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
mov
cmp
add
cmp
add
cmp
add
add
xchg
cmp
add
add
and
add
xor
add
pop
add
sahf
add
mov
inc
add
fs
add
imul
add
inc
add
add
add
inc
add
pusha
inc
add
imul
jl
add
xchg
add
add
lds
add
add
test
inc
add
add
add
inc
add
fwait
inc
add
outsl
inc
add
popl
add
add
ret
add
add
dec
add
gs
add
orl
lock
add
dec
dec
add
pop
dec
add
loopne
add
es
add
dec
dec
add
into
dec
add
inc
dec
add
push
add
nop
dec
add
fisttpl
add
dec
add
sbb
add
sub
add
outsl
dec
add
jnp
add
test
add
dec
add
mov
add
mov
dec
add
sbb
add
push
add
imul
add
push
add
fists
add
push
add
add
add
push
add
pop
push
add
lods
push
add
mov
push
add
rcpps
add
push
add
xor
add
add
arpl
add
add
jl
add
push
add
mov
add
lds
add
push
add
sbb
cmp
inc
push
add
popa
push
add
jbe
add
mov
xchg
push
add
test
add
les
fcoml
cmp
add
add
push
add
ja
add
jl
add
mov
add
push
add
push
add
adc
add
pop
add
pop
pop
add
jg
add
xchg
add
pop
add
loop
add
sti
pop
add
and
add
add
pop
pop
add
jle
add
mov
pop
add
loope
add
sbb
add
pop
add
dec
pop
add
pusha
pop
add
jp
add
test
add
pop
add
pop
add
aas
pop
add
dec
pop
add
pusha
pop
add
imul
pop
add
pop
pop
add
imul
jp
add
lahf
pop
add
cmpsb
pop
add
lods
pop
add
mov
add
rcrl
add
pop
add
in
add
jmp
add
cmc
pop
add
std
pop
add
add
add
pop
add
sbb
add
pop
add
sub
add
pop
add
cmp
add
add
dec
pop
add
pop
pop
add
pusha
pop
add
addr16
add
ja
add
sbbb
xchg
pop
add
cltd
pop
add
mov
pop
add
iret
pop
add
ljmp
add
pop
add
sub
add
pop
pop
add
sbbl
add
pop
add
int3
pop
add
pop
add
loope
add
jmp
add
stc
pop
add
ss
add
dec
pusha
add
push
pusha
add
arpl
add
add
js
add
jg
add
xchg
add
pusha
add
mov
pusha
add
mov
add
mov
pusha
add
fisubl
add
pusha
add
ljmp
add
pusha
add
add
popa
add
and
add
sub
popa
add
push
add
ret
popa
add
shlb
add
bound
add
bound
add
add
imul
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
arpl
add
arpl
add
add
test
add
mov
add
mulb
cs
inc
add
push
add
add
and
add
imul
add
add
push
imul
jbe
add
jle
add
leave
imul
out
imul
add
push
insb
add
sbb
add
insl
add
aas
insl
add
dec
insl
add
pop
insl
add
arpl
add
add
jne
add
subl
mov
insl
add
insl
add
imulb
add
add
outsb
add
xchg
outsb
add
ljmp
add
add
push
add
outsl
outsl
add
mov
add
outsl
add
mov
add
mov
outsl
add
loopne
add
rep
add
or
add
jo
add
jo
add
add
pop
jno
add
add
mov
add
jno
add
jno
add
jb
add
add
je
add
xorl
add
jb
add
jb
add
jb
add
jb
add
jae
add
add
add
pop
jae
add
add
data16
add
add
xchg
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
je
add
add
push
je
add
add
pop
je
add
add
outsb
je
add
add
js
add
xchg
je
add
jne
add
add
cmp
add
add
arpl
add
jne
add
add
int
add
fnstenv
add
jne
add
jne
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
add
inc
jbe
add
add
pop
jbe
add
add
data16
add
add
jb
add
xorl
lahf
jbe
add
ja
add
ja
add
ja
add
ja
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
jns
add
add
add
xchg
jp
add
jp
add
jge
add
jge
add
jge
add
jge
add
jle
add
jle
add
add
jns
add
mov
jle
add
jg
add
jg
add
addl
add
add
pop
addl
add
add
imul
add
jne
add
jns
add
jge
add
das
addb
dec
addb
pop
addb
ja
add
in
test
add
add
add
jp
add
mov
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
add
les
add
fmuls
add
push
mov
add
add
add
xchg
add
fwait
mov
add
mov
add
add
or
add
and
add
fmull
add
pushf
mov
add
add
push
lea
add
add
dec
lea
add
add
push
lea
add
lea
add
add
pop
mov
add
add
sbb
add
in
popl
add
popl
add
add
sbb
add
xor
add
push
nop
add
pusha
nop
add
jne
add
lea
add
movsb
nop
add
mov
nop
add
ficoml
add
nop
add
or
add
sub
xchg
add
inc
xchg
add
dec
xchg
add
insl
xchg
add
jne
add
jg
add
fwait
xchg
add
lods
xchg
add
mov
xchg
add
fsts
add
sbb
xchg
add
inc
xchg
add
dec
xchg
add
outsl
xchg
add
je
add
test
add
mov
add
fistl
add
cli
xchg
add
add
add
adc
add
aaa
xchg
add
dec
xchg
add
outsl
xchg
add
mov
add
mov
add
xlat
xchg
add
hlt
xchg
add
xchg
add
adc
add
cmp
add
xchg
add
icebp
xchg
add
std
xchg
add
push
xchg
add
adc
add
xor
add
ds
add
dec
xchg
add
pop
xchg
add
push
xchg
add
mov
add
mov
xchg
add
ret
add
xchg
add
in
add
out
xchg
add
sti
xchg
add
adc
add
sub
add
push
xchg
add
bound
add
adcl
add
xchg
add
lret
add
xchg
add
loope
add
jmp
add
or
add
sbb
add
cmp
add
push
xchg
add
push
add
je
add
mov
add
mov
add
rcll
add
jmp
add
push
cwtl
add
adc
add
dec
cwtl
add
push
cwtl
add
jp
add
cwtl
add
cltd
cwtl
add
mov
cwtl
add
int3
cwtl
add
cwtl
add
out
cwtl
add
sbb
add
inc
cltd
add
push
cltd
add
ret
cltd
add
int
add
ljmp
add
lcall
push
lcall
jb
add
xchg
lcall
fstps
add
xchg
pushf
add
pushf
pushf
add
scas
pushf
add
jmp
popf
add
ficompl
add
and
add
dec
mov
add
cmpsb
mov
add
mov
mov
add
add
add
movsb
add
movsb
add
inc
movsb
add
pop
movsb
add
jge
add
nop
movsb
add
lods
movsb
add
les
add
movsb
add
sub
add
jo
add
test
add
aam
add
or
add
xor
add
bound
add
jg
add
mov
cmpsb
add
cld
cmpsb
add
add
cmpsl
add
sbb
add
xor
add
outsl
cmpsl
add
jns
add
andb
add
cmpsl
add
repz
add
adc
test
add
add
pop
test
add
add
test
add
test
add
test
add
pop
test
add
sahf
test
add
shrl
add
stos
add
dec
stos
add
push
stos
add
fsubrs
add
repnz
add
sti
stos
add
add
add
adc
add
sub
add
cmp
add
dec
stos
add
pop
stos
add
pop
stos
add
push
stos
add
jne
add
jge
add
subl
add
stos
add
les
add
cli
stos
add
add
add
or
add
lods
add
xor
lods
add
dec
lods
add
dec
lods
add
push
lods
add
je
add
mov
add
lods
add
add
add
xor
add
jo
add
test
add
stc
lods
add
add
add
pop
scas
add
and
add
aas
scas
add
inc
scas
add
dec
scas
add
push
scas
add
shrb
add
add
add
sub
add
push
scas
add
jp
add
mov
mov
add
add
js
add
mov
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
ret
add
mov
add
mov
add
add
mov
add
pop
mov
add
add
jns
add
jle
add
cwtl
mov
add
mov
add
mov
add
mov
add
add
lahf
mov
add
mov
add
mov
add
bound
add
mov
mov
add
inc
mov
add
mov
add
popf
mov
add
xchg
mov
add
loop
add
call
mov
add
push
mov
add
cwtl
mov
add
into
mov
add
icebp
mov
add
xor
add
jne
add
xchg
mov
add
mov
add
out
add
sub
add
cmpl
add
rolb
pop
rolb
push
add
mov
rolb
inc
add
push
roll
add
add
add
mov
ret
add
sub
add
ss
add
inc
ret
add
push
ret
add
add
in
ret
add
test
add
les
add
add
les
add
add
add
add
les
add
les
add
les
add
lds
add
lds
add
add
jae
add
mov
lds
add
movb
pusha
movb
outsb
movb
loop
add
adc
add
xor
add
mov
add
test
add
and
enter
enter
enter
enter
enter
enter
enter
enter
leave
add
and
leave
add
ror
add
leave
add
bswap
add
adc
lret
push
lret
pop
lret
xchg
lret
ror
add
add
add
and
add
test
add
fxch
add
and
add
sub
add
sub
add
xor
add
mov
add
mov
into
add
push
into
add
jo
add
je
add
js
add
jl
add
push
rolb
add
roll
add
rolb
add
rolb
add
roll
add
roll
add
roll
add
aam
add
add
lods
add
ret
add
xlat
add
hlt
xlat
add
pop
fadds
add
flds
add
add
flds
add
flds
add
fiaddl
add
add
rcr
add
mov
add
cmpsb
fildl
add
faddl
add
add
sub
add
scas
fldl
add
add
fstp
add
jmp
add
or
add
dec
filds
add
add
adc
add
pop
loope
add
add
je
add
and
add
jecxz
add
jecxz
add
jecxz
add
add
in
add
in
add
in
add
in
add
add
mov
add
int3
in
add
in
add
add
mov
add
shl
add
add
add
add
xor
add
jno
add
ret
out
add
jmp
add
cmp
add
inc
in
add
dec
in
add
xchg
add
mov
add
xchg
in
add
cltd
in
add
xlat
in
add
fsubr
add
loop
add
jmp
out
add
sbb
add
and
add
sub
add
push
out
add
pop
out
add
jle
add
sub
add
out
add
adc
add
and
add
pop
out
add
sub
add
out
add
movsb
out
add
push
lock
sbb
add
lock
icebp
add
jnp
add
aad
add
insb
repz
jb
add
ja
add
xchg
add
stc
repz
or
add
sbb
add
daa
hlt
add
sub
add
imul
add
hlt
add
out
hlt
add
insl
cmc
add
xchg
cmc
add
cltd
cmc
add
lahf
cmc
add
cmpsb
cmc
add
testl
add
sti
add
cmp
add
push
std
add
sub
add
ret
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
cltd
add
add
add
or
add
add
inc
add
add
jo
add
mov
or
add
or
add
enter
mov
add
fistl
add
or
add
aam
add
or
add
out
sbb
add
sbb
add
add
mov
add
sbb
add
inc
push
add
pushw
add
cltd
push
add
andb
add
add
push
and
add
add
outsl
and
add
adc
sub
add
sub
add
sub
add
add
jmp
add
lret
add
sub
add
sub
add
sub
add
add
nop
add
mov
add
std
add
add
add
pop
das
add
adc
add
and
add
xor
add
ss
add
pop
das
add
data16
add
jo
add
xchg
das
add
mov
das
add
les
add
shrb
add
fildll
add
out
add
icebp
das
add
das
add
adc
add
sub
xor
add
xor
add
add
jg
add
mov
add
int
add
or
add
sbb
add
inc
xor
add
add
mov
add
lds
add
repz
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
fdivs
add
es
dec
add
leave
add
pop
aaa
add
push
aaa
add
cwtl
aaa
add
mov
add
mov
aaa
add
mov
add
ljmp
add
cmp
add
add
push
cmp
add
add
stos
cmp
add
cmp
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sarb
add
push
add
inc
add
cmpl
add
jns
add
jmp
add
repz
add
add
add
mov
add
inc
add
add
add
add
popl
add
inc
add
int
add
push
inc
add
fwait
inc
add
or
inc
add
push
inc
add
xchg
add
inc
add
or
add
add
test
add
ret
dec
add
testb
sbb
dec
add
push
dec
add
xchg
dec
add
dec
add
out
dec
add
sbb
add
dec
dec
add
int
add
call
dec
add
arpl
add
dec
add
xor
outsb
dec
add
xchg
dec
add
add
dec
add
jae
add
decl
add
add
mov
dec
add
rorl
xchg
push
add
mov
push
add
ret
add
push
add
loope
add
repnz
add
add
add
push
add
and
add
push
add
inc
push
add
push
push
add
pusha
push
add
jno
add
push
add
pusha
add
jno
add
andb
nop
add
mov
add
sti
add
xor
add
add
xchg
push
add
sub
add
push
add
add
mov
push
add
imul
imul
jns
add
out
add
adc
add
pop
insb
add
push
insl
add
and
add
outsl
add
push
jo
add
jo
add
jno
add
jno
add
jno
add
add
jno
add
add
add
adc
add
jb
add
jb
add
add
popa
jb
add
add
mov
jae
add
je
add
ja
add
js
add
js
add
add
mov
js
add
js
add
jns
add
add
jns
add
jns
add
add
test
add
jp
add
jp
add
jp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jl
add
add
xchg
jl
add
jl
add
jl
add
add
mov
add
idivl
add
add
mov
add
fiaddl
add
ret
addl
add
addb
inc
addb
push
addb
push
addb
sub
add
xchg
add
addl
add
xchg
add
xchg
add
xchg
add
add
dec
xchg
add
xchg
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
xchg
mov
add
mov
add
mov
add
lea
add
lea
add
add
scas
lea
add
add
cmc
mov
add
popl
add
add
mov
popl
add
popl
add
nop
add
cwtl
nop
add
movsb
nop
add
loopne
add
in
add
call
nop
add
adcl
add
xchg
add
fsts
add
test
xchg
add
aad
add
mov
xchg
add
pop
xchg
add
inc
xchg
add
mov
add
into
xchg
add
repz
add
cmp
add
rcll
add
and
add
xchg
add
pushf
xchg
add
mov
xchg
add
das
cwtl
add
mov
cwtl
add
push
cltd
add
mov
add
ret
add
cltd
add
fcompl
add
xor
add
push
lcall
outsb
lcall
sbbl
add
mov
lcall
out
lcall
sbb
add
cmp
add
insl
fwait
add
cmpsl
fwait
add
mov
fwait
add
loop
add
repnz
add
add
add
pop
pushf
add
aaa
pushf
add
outsb
pushf
add
adc
add
mov
add
lods
sahf
add
pop
lahf
add
mov
add
shlb
add
mov
add
adc
add
inc
mov
add
popa
mov
add
jns
add
test
add
mov
mov
add
jne
add
lret
add
movsl
add
mov
movsl
add
xlat
movsl
add
fisubs
add
add
add
dec
cmpsb
add
push
cmpsl
add
andl
add
test
add
fsubrl
add
aaa
stos
add
jb
add
mov
stos
add
add
add
add
add
lods
add
push
lods
add
jge
add
xchg
lods
add
fisubrl
add
jae
add
mov
add
out
add
repz
add
push
scas
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
xchg
mov
add
mov
add
mov
add
mov
add
add
mov
add
sub
add
jbe
add
popf
mov
add
repz
add
repz
add
dec
mov
add
jo
add
xchg
add
mov
add
mov
mov
add
loope
add
repz
add
push
mov
add
pop
mov
add
das
mov
add
add
add
cmpb
add
rolb
cmp
add
inc
rolb
jne
add
jg
add
test
add
mov
add
add
add
and
add
mov
add
aam
add
fcmovnb
add
loope
add
call
ret
xor
add
push
ret
push
add
mov
add
mov
ret
add
pop
ret
add
popa
ret
add
push
ret
add
mov
add
mov
ret
add
hlt
ret
add
sti
ret
add
add
add
or
add
xchg
add
mov
add
fcmovb
add
loopne
add
out
add
dec
lds
add
add
lds
add
lds
add
add
lods
movb
mov
add
mov
movb
jecxz
add
ljmp
add
enter
leave
add
adc
add
and
add
xor
add
xchg
leave
add
fcmovne
add
dec
lret
js
add
xchg
lret
lret
in
lret
add
add
daa
lret
add
lret
add
stos
lret
add
ret
lret
add
lock
add
adc
int3
add
or
add
int3
add
ror
add
int3
add
icebp
int3
add
add
add
adc
add
sub
int
add
int
add
int
add
int
add
iret
add
out
iret
add
push
rolb
add
rolb
add
rolb
add
roll
add
roll
add
aam
add
aam
add
aad
add
add
inc
xlat
add
add
add
cmp
add
mov
flds
add
flds
add
fiaddl
add
fiaddl
add
add
sbb
fiadds
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
add
mov
loop
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
add
xor
add
cmp
add
jbe
add
cwtl
in
add
in
add
in
add
in
add
in
add
out
add
add
pop
out
add
out
add
out
add
add
jb
add
and
add
out
add
out
add
out
add
out
add
call
add
loop
add
lock
add
adc
add
cmp
add
push
jmp
add
jecxz
add
jmp
add
sbb
ljmp
xor
add
leave
jmp
add
in
add
adc
add
sbb
add
sub
add
mov
add
repnz
add
cli
out
add
add
add
dec
out
add
dec
lock
lock
push
add
ret
lock
jmp
icebp
add
or
add
jae
add
jae
add
mov
add
mov
repnz
add
add
inc
repz
dec
repz
pop
repz
xchg
repz
shl
add
add
jecxz
add
xor
add
jb
add
jp
add
xor
add
cmc
add
daa
testb
das
testb
xchg
testb
mov
testb
ret
add
testb
loope
add
repnz
add
add
adc
add
aaa
testl
add
add
loope
add
sti
clc
add
add
stc
add
push
stc
add
cmp
add
inc
stc
add
push
stc
add
pop
stc
add
cmp
add
stc
add
mov
stc
add
lret
add
stc
add
jecxz
add
cli
add
into
cli
add
loopne
add
out
add
add
add
push
sti
add
and
add
daa
sti
add
dec
sti
add
push
sti
add
gs
add
insb
sti
add
mov
add
xchg
sti
add
movsl
sti
add
lods
sti
add
xchg
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incl
add
incl
add
or
add
or
add
and
add
and
add
and
add
add
push
and
add
add
jb
add
andb
add
and
add
and
add
and
add
and
add
and
add
and
add
add
push
and
add
and
add
and
add
and
add
adc
add
and
add
xor
and
add
mov
add
fsubs
add
fisubs
add
in
add
ljmp
add
add
cld
add
inc
daa
add
dec
daa
add
push
daa
add
pop
daa
add
addr16
add
jo
add
jnp
add
xchg
add
xchg
daa
add
popf
daa
add
test
daa
add
mov
daa
add
daa
add
fbld
add
ljmp
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
mov
sub
add
sub
add
sub
add
sub
add
sub
add
add
jns
add
cltd
sub
add
sub
add
sub
add
sub
add
add
jno
add
mov
add
int3
sub
add
sub
add
sub
add
sub
add
add
test
add
mov
sub
add
sub
add
sub
add
sub
add
add
jg
add
xchg
sub
add
sub
add
sub
add
sub
add
jns
add
cltd
sub
add
mov
add
lds
add
in
add
cmc
sub
add
adc
add
pop
add
subl
add
add
lods
add
mov
add
add
in
add
std
add
and
add
inc
das
add
imul
add
das
add
aam
add
jmp
das
add
adc
add
and
xor
add
add
popa
xor
add
add
mov
add
popf
xor
add
xor
add
xor
add
xor
add
xor
add
add
imul
add
mov
add
aam
add
or
add
xor
add
dec
xor
add
add
add
shll
add
jmp
xor
add
xor
add
add
add
enter
jmp
xor
add
xor
add
xor
add
dec
xor
add
test
xor
add
xor
add
dec
add
imul
add
test
add
jmp
aaa
add
xor
add
dec
aaa
add
jno
add
xchg
aaa
add
mov
aaa
add
cld
aaa
add
sbb
add
push
cmp
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
add
push
cmp
add
add
or
add
sub
add
push
cmp
add
add
fidivrl
add
add
add
xor
add
outsl
cmp
add
cmp
add
add
and
add
cmp
add
add
mov
cmp
add
add
jns
add
mov
cmp
add
dec
add
mov
add
in
add
add
add
xor
add
jne
add
mov
add
mov
add
leave
aas
add
jmp
inc
add
sub
add
add
imul
add
inc
add
icebp
inc
add
or
add
inc
add
pop
inc
add
jns
add
movsb
inc
add
mov
inc
add
cld
inc
add
sbb
add
inc
add
popa
inc
add
addl
add
inc
add
stc
inc
add
sbb
add
inc
add
outsl
inc
add
lahf
inc
add
rclb
add
push
add
loopne
add
in
add
call
push
add
lock
add
hlt
push
add
clc
push
add
cld
push
add
add
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
push
add
inc
push
add
dec
push
add
dec
push
add
push
push
add
push
push
add
pop
push
add
pop
push
add
pusha
push
add
fs
add
push
push
add
jo
add
je
add
js
add
jl
add
adcb
test
add
push
add
nop
push
add
xchg
push
add
cwtl
push
add
pushf
push
add
mov
push
add
test
add
lods
push
add
mov
add
mov
add
mov
push
add
rclb
les
add
push
add
int3
push
add
rclb
add
push
add
fcoms
add
push
add
loopne
add
in
add
call
push
add
lock
add
hlt
push
add
clc
push
add
cld
push
add
add
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
push
add
inc
push
add
dec
push
add
dec
push
add
push
push
add
push
push
add
pop
push
add
pop
push
add
pusha
push
add
fs
add
push
push
add
jo
add
je
add
js
add
jl
add
adcb
test
add
push
add
nop
push
add
xchg
push
add
cwtl
push
add
pushf
push
add
mov
push
add
test
add
lods
push
add
mov
add
mov
add
mov
push
add
rclb
les
add
push
add
int3
push
add
rclb
add
push
add
fcoms
add
push
add
loopne
add
in
add
call
push
add
lock
add
hlt
push
add
clc
push
add
cld
push
add
add
add
add
or
or
add
adc
adc
add
sbb
sbb
add
and
and
add
sub
sub
add
xor
xor
add
cmp
cmp
add
inc
push
add
inc
push
add
dec
push
add
dec
push
add
push
push
add
push
push
add
pop
push
add
pop
push
add
pusha
push
add
fs
add
push
push
add
jo
add
je
add
js
add
jl
add
adcb
push
add
mov
mov
nop
push
add
xchg
push
add
cwtl
push
add
pushf
push
add
mov
push
add
test
add
lods
push
add
mov
add
mov
add
mov
push
add
rclb
push
add
enter
int3
push
add
rclb
aam
add
fcoms
fcoml
loopne
add
in
add
call
push
add
lock
add
hlt
push
add
clc
push
add
cld
push
add
add
add
add
or
add
adc
add
add
sbb
add
and
add
add
sub
add
xor
add
add
cmp
add
inc
push
add
inc
push
add
dec
push
add
dec
push
add
push
push
add
push
push
add
pop
push
add
pop
push
add
pusha
push
add
fs
add
push
push
add
jo
add
je
add
js
add
jl
add
adcb
test
add
push
add
nop
push
add
xchg
push
add
cwtl
push
add
pushf
push
add
mov
push
add
test
add
lods
push
add
mov
add
mov
add
mov
push
add
rclb
les
add
push
add
int3
push
add
rclb
add
push
add
fcoms
add
push
add
loopne
add
in
add
call
push
add
lock
add
hlt
push
add
clc
push
add
cld
push
add
add
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
push
add
push
push
add
pop
push
add
pop
push
add
pusha
push
add
fs
add
push
push
add
jo
add
jl
add
adcb
mov
add
push
add
movsb
push
add
test
add
lods
push
add
mov
add
mov
add
mov
push
add
rclb
les
add
push
add
int3
push
add
rclb
add
push
add
fcoms
add
push
add
loopne
add
in
add
call
push
add
lock
add
hlt
push
add
clc
push
add
cld
push
add
add
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
push
add
pop
push
add
pop
push
add
mov
add
add
lods
push
add
mov
add
mov
push
add
aam
add
loopne
add
in
push
add
hlt
push
add
clc
push
add
or
add
pop
add
adc
add
sbb
add
and
add
add
xor
add
add
dec
pop
add
dec
pop
add
pop
pop
add
pusha
pop
add
fs
add
push
pop
add
js
add
jl
add
sbbb
test
add
pop
add
nop
pop
add
xchg
pop
add
cwtl
pop
add
pushf
pop
add
mov
pop
add
test
add
lods
pop
add
mov
add
mov
add
mov
pop
add
rcrb
les
add
pop
add
int3
pop
add
rcrb
add
pop
add
fcomps
add
pop
add
loopne
add
in
add
call
pop
add
lock
add
hlt
pop
add
clc
pop
add
cld
pop
add
add
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
pop
add
inc
pop
add
dec
pop
add
dec
pop
add
push
pop
add
push
pop
add
pop
pop
add
pop
pop
add
pusha
pop
add
fs
add
push
pop
add
jo
add
je
add
js
add
jl
add
sbbb
test
add
pop
add
nop
pop
add
xchg
pop
add
cwtl
pop
add
pushf
pop
add
mov
pop
add
test
add
lods
pop
add
mov
add
mov
add
mov
pop
add
rcrb
les
add
pop
add
push
popa
add
pop
popa
add
pop
popa
add
pusha
popa
add
fs
add
push
popa
add
jo
add
je
add
js
add
jl
add
andb
test
add
popa
add
aam
add
fsubs
loopne
add
in
add
in
add
lock
jl
add
andb
mov
add
add
xchg
add
cwtl
add
pushf
add
mov
add
mov
add
mov
add
mov
add
shlb
les
add
add
int3
add
shlb
add
add
fsubs
add
add
loopne
add
in
add
call
add
lock
hlt
add
clc
add
cld
add
add
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
dec
add
dec
add
push
add
push
add
pop
add
pop
add
pusha
add
add
push
add
jo
add
je
add
js
add
jl
add
andb
test
add
add
nop
add
xchg
add
cwtl
add
pushf
add
mov
add
test
add
lods
add
mov
add
mov
add
mov
add
shlb
les
add
add
fsubl
add
add
in
add
call
add
lock
hlt
add
sbb
add
add
and
add
add
pop
push
add
fs
add
insb
push
add
jl
add
subb
test
add
push
add
movsb
push
add
lods
push
add
mov
add
mov
push
add
les
add
push
add
shrb
add
push
add
fsubrl
add
push
add
call
push
add
hlt
push
add
cld
push
add
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
imul
add
add
dec
imul
add
add
add
fs
add
push
insl
add
js
add
test
add
add
pushf
outsb
add
movsb
outsb
add
lods
outsb
add
mov
add
mov
outsb
add
int3
outsb
add
aam
add
fsubrl
add
outsb
add
in
outsb
add
hlt
outsb
add
cld
outsb
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
outsl
add
dec
outsl
add
push
outsl
add
pop
outsl
add
outsl
add
insb
outsl
add
je
add
jl
add
test
add
add
pushf
outsl
add
movsb
outsl
add
lods
outsl
add
mov
add
mov
outsl
add
int3
outsl
add
aam
add
fsubrl
add
outsl
add
in
outsl
add
hlt
outsl
add
cld
outsl
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jo
add
add
add
add
add
add
add
add
add
xchg
jo
add
add
lods
jo
add
add
les
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jno
add
add
add
add
add
add
add
add
add
xchg
jno
add
add
lods
jno
add
add
les
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jb
add
add
add
add
add
add
add
add
add
xchg
jb
add
add
lods
jb
add
add
les
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jae
add
add
add
add
add
add
add
add
add
xchg
jae
add
add
lods
jae
add
add
les
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
je
add
add
add
add
add
add
add
add
add
xchg
je
add
add
lods
je
add
add
les
int3
je
add
je
add
je
add
je
add
je
add
je
add
je
add
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jne
add
add
add
add
add
add
add
add
add
xchg
jne
add
add
lods
jne
add
add
les
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jbe
add
add
add
add
add
add
add
add
add
pushf
jbe
add
add
mov
add
mov
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
ja
add
add
add
add
add
add
add
add
add
xchg
ja
add
add
lods
ja
add
add
les
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
js
add
add
add
add
add
add
add
add
add
xchg
js
add
add
lods
js
add
add
les
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jns
add
add
add
add
add
add
add
add
add
xchg
jns
add
add
lods
jns
add
add
les
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jp
add
add
add
add
add
add
add
add
add
xchg
jp
add
add
lods
jp
add
add
les
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jnp
add
add
add
add
add
add
add
add
add
xchg
jnp
add
add
lods
jnp
add
add
les
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jl
add
add
add
add
add
add
add
add
add
xchg
jl
add
add
lods
jl
add
add
les
int3
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jge
add
add
add
add
add
add
add
add
add
xchg
jge
add
add
lods
jge
add
add
les
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jle
add
add
add
add
add
add
add
add
add
xchg
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jg
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
jg
add
add
add
dec
jg
add
add
push
jg
add
add
pop
jg
add
add
fs
add
add
insb
jg
add
add
je
add
js
add
jl
add
cmpb
test
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
addb
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
addb
inc
addb
dec
addb
dec
addb
push
addb
push
addb
pop
addb
pop
addb
pusha
addb
addb
push
addb
jo
add
je
add
js
add
jl
add
addb
add
addb
nop
addb
xchg
addb
cwtl
addb
pushf
addb
mov
addb
test
add
lods
addb
mov
add
mov
add
mov
addb
rolb
add
addb
int3
addb
rolb
add
fadds
add
loopne
add
in
add
call
addb
lock
hlt
addb
clc
addb
cld
addb
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
rorb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
mov
add
add
add
dec
mov
add
add
push
mov
add
add
pop
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
mov
add
add
add
dec
mov
add
add
push
mov
add
add
pop
mov
add
add
mov
add
add
insb
mov
add
add
je
add
js
add
jl
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
or
add
mov
add
add
sbb
add
mov
add
add
sub
add
mov
add
add
cmp
add
add
inc
mov
add
add
dec
mov
add
add
push
mov
add
add
pop
mov
add
add
mov
add
add
insb
mov
add
add
je
add
js
add
jl
add
orb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
lea
add
add
add
dec
lea
add
add
push
lea
add
add
pop
lea
add
add
lea
add
add
insb
lea
add
add
je
add
js
add
jl
add
orb
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
mov
add
add
add
dec
mov
add
add
push
mov
add
add
pop
mov
add
add
mov
add
add
insb
mov
add
add
je
add
js
add
jl
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
popl
add
add
add
dec
popl
add
add
push
popl
add
add
pop
popl
add
add
popl
add
add
insb
popl
add
add
je
add
js
add
jl
add
orb
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
nop
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
pusha
nop
add
fs
add
push
nop
add
jo
add
je
add
js
add
jl
add
adcb
add
nop
add
nop
nop
add
xchg
nop
add
cwtl
nop
add
pushf
nop
add
mov
nop
add
test
add
lods
nop
add
mov
add
mov
add
mov
nop
add
rclb
add
nop
add
int3
nop
add
rclb
add
fcoms
add
loopne
add
in
add
call
nop
add
lock
add
hlt
nop
add
clc
nop
add
cld
nop
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
xchg
add
inc
xchg
add
dec
xchg
add
dec
xchg
add
push
xchg
add
push
xchg
add
pop
xchg
add
pop
xchg
add
pusha
xchg
add
fs
add
push
xchg
add
jo
add
je
add
js
add
jl
add
adcb
add
xchg
add
nop
xchg
add
xchg
xchg
add
cwtl
xchg
add
pushf
xchg
add
mov
xchg
add
test
add
lods
xchg
add
mov
add
mov
add
mov
xchg
add
rclb
add
xchg
add
int3
xchg
add
rclb
add
fcoms
add
loopne
add
in
add
call
xchg
add
lock
add
hlt
xchg
add
clc
xchg
add
cld
xchg
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
xchg
add
inc
xchg
add
dec
xchg
add
dec
xchg
add
push
xchg
add
push
xchg
add
pop
xchg
add
pop
xchg
add
pusha
xchg
add
fs
add
push
xchg
add
jo
add
je
add
js
add
jl
add
adcb
add
xchg
add
nop
xchg
add
xchg
xchg
add
cwtl
xchg
add
pushf
xchg
add
mov
xchg
add
test
add
lods
xchg
add
mov
add
mov
add
mov
xchg
add
rclb
add
xchg
add
int3
xchg
add
rclb
add
fcoms
add
loopne
add
in
add
call
xchg
add
lock
add
hlt
xchg
add
clc
xchg
add
cld
xchg
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
xchg
add
inc
xchg
add
dec
xchg
add
dec
xchg
add
push
xchg
add
push
xchg
add
pop
xchg
add
pop
xchg
add
pusha
xchg
add
fs
add
push
xchg
add
jo
add
je
add
js
add
jl
add
adcb
add
xchg
add
nop
xchg
add
xchg
xchg
add
cwtl
xchg
add
pushf
xchg
add
mov
xchg
add
test
add
lods
xchg
add
mov
add
mov
add
mov
xchg
add
rclb
add
xchg
add
int3
xchg
add
rclb
add
fcoms
add
loopne
add
in
add
call
xchg
add
lock
add
hlt
xchg
add
clc
xchg
add
cld
xchg
add
add
add
xchg
add
or
add
adc
add
xchg
add
sbb
add
and
add
xchg
add
sub
add
xor
add
xchg
add
cmp
add
inc
xchg
add
inc
xchg
add
dec
xchg
add
dec
xchg
add
push
xchg
add
push
xchg
add
pop
xchg
add
pop
xchg
add
pusha
xchg
add
fs
add
push
xchg
add
jo
add
je
add
js
add
jl
add
adcb
mov
add
xchg
add
cwtl
xchg
add
pushf
xchg
add
mov
xchg
add
test
add
lods
xchg
add
mov
add
mov
add
mov
xchg
add
rclb
enter
int3
xchg
add
rclb
add
xchg
add
fcoml
add
xchg
add
call
xchg
add
lock
add
hlt
xchg
add
clc
xchg
add
cld
xchg
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
xchg
add
inc
xchg
add
dec
xchg
add
dec
xchg
add
push
xchg
add
push
xchg
add
pop
xchg
add
pop
xchg
add
pusha
xchg
add
fs
add
push
xchg
add
jo
add
je
add
js
add
jl
add
adcb
add
xchg
add
nop
xchg
add
xchg
xchg
add
cwtl
xchg
add
pushf
xchg
add
mov
xchg
add
test
add
lods
xchg
add
mov
add
mov
add
mov
xchg
add
rclb
add
xchg
add
int3
xchg
add
rclb
add
fcoms
add
loopne
add
in
add
call
xchg
add
lock
add
hlt
xchg
add
clc
xchg
add
cld
xchg
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
xchg
add
inc
xchg
add
dec
xchg
add
dec
xchg
add
push
xchg
add
push
xchg
add
pop
xchg
add
pop
xchg
add
pusha
xchg
add
fs
add
push
xchg
add
jo
add
je
add
js
add
jl
add
adcb
add
xchg
add
nop
xchg
add
xchg
xchg
add
cwtl
xchg
add
pushf
xchg
add
mov
xchg
add
test
add
lods
xchg
add
mov
add
mov
add
mov
xchg
add
rclb
add
xchg
add
int3
xchg
add
rclb
add
fcoms
add
loopne
add
in
add
call
xchg
add
lock
add
hlt
xchg
add
clc
xchg
add
cld
xchg
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
xchg
add
inc
xchg
add
dec
xchg
add
dec
xchg
add
push
xchg
add
push
xchg
add
pop
xchg
add
pop
xchg
add
pusha
xchg
add
fs
add
push
xchg
add
jo
add
je
add
js
add
jl
add
adcb
add
add
mov
add
mov
xchg
add
rclb
add
xchg
add
int3
xchg
add
rclb
add
fcoms
add
loopne
add
in
add
call
xchg
add
lock
add
hlt
xchg
add
clc
xchg
add
cld
xchg
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
cwtl
add
inc
cwtl
add
dec
cwtl
add
dec
cwtl
add
push
cwtl
add
push
cwtl
add
pop
cwtl
add
pop
cwtl
add
pusha
cwtl
add
fs
add
push
cwtl
add
jo
add
je
add
js
add
jl
add
sbbb
add
cwtl
add
nop
cwtl
add
xchg
cwtl
add
cwtl
cwtl
add
pushf
cwtl
add
mov
cwtl
add
test
add
lods
cwtl
add
mov
add
mov
add
mov
cwtl
add
rcrb
add
cwtl
add
int3
cwtl
add
rcrb
add
fcomps
add
loopne
add
in
add
call
cwtl
add
lock
add
hlt
cwtl
add
clc
cwtl
add
cld
cwtl
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
cltd
add
inc
cltd
add
dec
cltd
add
dec
cltd
add
push
cltd
add
push
cltd
add
pop
cltd
add
pop
cltd
add
pusha
cltd
add
fs
add
push
cltd
add
jo
add
je
add
js
add
jl
add
sbbb
add
cltd
add
nop
cltd
add
xchg
cltd
add
cwtl
cltd
add
pushf
cltd
add
mov
cltd
add
test
add
lods
cltd
add
mov
add
mov
add
mov
cltd
add
rcrb
add
cltd
add
int3
cltd
add
rcrb
add
fcomps
add
loopne
add
in
add
call
cltd
add
lock
add
hlt
cltd
add
clc
cltd
add
cld
cltd
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
lcall
dec
lcall
push
lcall
pop
lcall
pusha
lcall
push
lcall
je
add
js
add
jl
add
sbbb
add
lcall
xchg
lcall
pushf
lcall
movsb
lcall
jo
add
je
add
js
add
jl
add
and
add
add
mov
add
nop
jecxz
add
add
pushf
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
add
or
add
or
add
adc
add
adc
add
sbb
add
sbb
add
and
add
and
add
sub
add
sub
add
xor
add
xor
add
cmp
add
cmp
add
inc
in
add
add
add
dec
in
add
add
push
in
add
add
pop
in
add
add
fs
add
add
insb
in
add
add
je
add
js
add
jl
add
and
add
add
mov
add
nop
in
add
add
pushf
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
out
add
and
add
xor
add
inc
out
add
dec
out
add
push
out
add
push
out
add
mov
add
nop
out
add
cwtl
out
add
mov
add
enter
loopne
add
in
add
call
out
add
or
add
adc
add
sbb
add
xor
add
xor
add
cmp
add
dec
out
add
pop
out
add
pusha
out
add
push
out
add
cwtl
out
add
pushf
out
add
mov
add
out
add
enter
int3
out
add
in
add
hlt
out
add
clc
out
add
add
add
sbb
add
xor
add
xor
add
dec
lock
pop
lock
pusha
lock
push
lock
cwtl
lock
pushf
lock
mov
lock
lock
enter
shl
add
call
lock
lock
add
add
adc
add
sbb
add
and
add
cmp
add
cmp
add
push
icebp
add
fs
add
push
icebp
add
mov
add
mov
add
movsb
icebp
add
mov
add
mov
icebp
add
fdiv
add
in
icebp
add
cld
icebp
add
add
add
or
add
and
add
cmp
add
cmp
add
inc
repnz
push
repnz
repnz
push
repnz
je
add
mov
add
pushf
repnz
mov
repnz
shl
add
repnz
enter
fdiv
add
in
repnz
lock
clc
repnz
adc
add
sub
add
sub
add
xor
add
inc
repz
push
repz
pop
repz
pusha
repz
repz
jl
add
mov
add
nop
repz
xchg
repz
lods
repz
mov
repz
repz
fdiv
add
in
repz
lock
clc
repz
adc
add
sub
add
sub
add
inc
hlt
add
push
hlt
add
pop
hlt
add
fs
add
js
add
test
add
cwtl
hlt
add
movsb
hlt
add
mov
hlt
add
enter
int3
hlt
add
aam
add
fdiv
add
call
cmc
add
or
add
sbb
add
xor
add
inc
cmc
add
pop
cmc
add
push
cmc
add
mov
add
cwtl
cmc
add
mov
add
mov
cmc
add
in
add
in
cmc
add
clc
cmc
add
adc
add
sbb
add
sub
add
inc
testb
dec
testb
pop
testb
je
add
xor
add
add
mov
testb
enter
int3
testb
aam
add
fdiv
add
call
testl
add
add
cmp
add
push
testl
add
add
add
xchg
testl
add
add
in
add
lock
add
add
and
add
cmp
add
inc
clc
add
push
clc
add
insb
clc
add
je
add
jl
add
test
add
mov
add
xchg
clc
add
mov
clc
add
enter
sar
add
add
add
adc
add
and
add
cmp
add
inc
stc
add
push
stc
add
pop
stc
add
je
add
jl
add
test
add
mov
add
xchg
stc
add
mov
add
stc
add
int3
stc
add
loopne
add
in
stc
add
lock
add
hlt
stc
add
clc
stc
add
add
add
or
add
adc
add
sub
add
xor
add
cmp
add
cmp
add
inc
cli
add
dec
cli
add
pop
cli
add
je
add
jl
add
mov
add
movsb
cli
add
lods
cli
add
mov
cli
add
fdivr
add
call
sti
add
adc
add
sub
add
xor
add
dec
sti
add
pop
sti
add
je
add
cmp
add
add
sti
add
int3
sti
add
fdivr
add
hlt
sti
add
cld
sti
add
add
add
adc
add
sbb
add
dec
cld
add
pop
cld
add
push
cld
add
nop
cld
add
lods
cld
add
mov
add
enter
aam
add
fdivr
add
fdivr
add
loopne
add
in
cld
add
hlt
cld
add
add
add
sbb
add
and
add
xor
add
dec
std
add
push
std
add
pop
std
add
fs
add
insb
std
add
je
add
jl
add
mov
add
movsb
std
add
mov
add
int3
std
add
fdivr
add
hlt
std
add
add
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
incb
add
add
add
je
add
cmp
add
add
incb
add
incb
add
incb
add
incb
add
incb
add
add
or
add
adc
add
sbb
add
sub
add
inc
incl
add
add
insb
incl
add
add
xchg
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
sbb
add
and
add
sub
add
inc
add
dec
add
pusha
add
insb
add
jo
add
je
add
jl
add
test
add
nop
add
lods
add
mov
add
faddl
add
loopne
add
in
add
hlt
add
add
add
sbb
add
sub
add
inc
add
push
add
insb
add
je
add
mov
add
xchg
add
cwtl
add
pushf
add
movsb
add
lods
add
mov
add
loopne
add
cld
add
add
add
sbb
add
and
add
cmp
add
inc
add
dec
add
dec
add
push
add
pop
add
push
add
nop
add
lods
add
mov
add
mov
add
int3
add
fadds
add
hlt
add
add
add
sbb
add
sub
add
inc
add
push
add
insb
add
js
add
xchg
add
pushf
add
test
add
les
add
rolb
add
in
add
clc
add
adc
add
sbb
add
and
add
xor
add
add
add
je
add
jl
add
mov
add
add
mov
add
add
add
add
add
add
add
adc
add
sbb
add
sub
add
dec
add
add
je
add
addb
add
add
int3
add
add
loopne
add
cld
add
add
and
add
sub
add
cmp
add
push
push
add
pusha
push
add
jl
add
test
add
nop
push
add
lods
push
add
mov
add
mov
push
add
in
add
in
push
add
clc
push
add
adc
add
and
add
cmp
add
inc
pop
add
dec
pop
add
push
pop
add
pop
pop
add
push
pop
add
nop
pop
add
lods
pop
add
mov
add
rolb
add
pop
add
in
add
in
pop
add
hlt
pop
add
cld
pop
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
or
dec
or
pop
or
je
add
jl
add
test
add
cwtl
or
movsb
or
test
add
lods
or
mov
add
mov
or
in
add
in
or
hlt
or
cld
or
add
add
adc
add
sub
add
cmp
add
push
or
pop
or
jo
add
jl
add
orb
add
add
xchg
or
pushf
or
test
add
les
add
int3
or
aam
add
fmull
add
in
add
in
or
hlt
or
cld
or
add
add
or
add
sbb
add
xor
add
inc
or
pop
or
or
jo
add
mov
add
cwtl
or
mov
add
mov
or
int3
or
aam
add
fmull
add
in
add
clc
or
add
add
or
add
or
add
adc
add
sbb
add
and
add
xor
add
dec
or
pop
or
je
add
orb
add
add
les
add
int3
or
loopne
add
in
or
lock
hlt
or
clc
or
add
add
or
add
sbb
add
add
cmp
add
push
or
add
add
add
fs
add
add
je
add
jl
add
mov
add
add
int3
or
add
or
add
or
add
or
add
add
xor
add
inc
or
add
fs
add
mov
add
mov
or
add
int3
or
add
hlt
or
add
sbb
add
sub
add
inc
push
add
push
push
add
insb
push
add
je
add
jl
add
test
add
nop
push
add
lods
push
add
mov
add
rorb
add
push
add
in
add
lock
add
or
add
adc
add
sbb
add
and
add
sub
add
cmp
add
push
add
add
jl
add
test
add
mov
add
cwtl
add
add
enter
in
add
in
add
add
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
adc
inc
adc
dec
adc
push
adc
pusha
adc
jl
add
test
add
mov
add
xchg
adc
pushf
adc
test
add
les
add
int3
adc
aam
add
loopne
add
cld
adc
add
add
sbb
add
and
add
sub
add
sub
add
xor
add
cmp
add
dec
adc
adc
insb
adc
js
add
xchg
adc
mov
adc
les
add
int3
adc
aam
add
fcoml
add
in
add
in
adc
hlt
adc
cld
adc
add
add
adc
add
sub
add
xor
add
inc
adc
pop
adc
adc
insb
adc
je
add
adcb
add
add
lods
adc
mov
add
mov
adc
in
add
in
adc
hlt
adc
cld
adc
add
add
or
add
adc
add
and
add
cmp
add
inc
adc
dec
adc
pusha
adc
insb
adc
adcb
add
add
xchg
adc
cwtl
adc
movsb
adc
lods
adc
mov
adc
fcoml
add
call
adc
add
adc
add
add
cmp
add
add
add
add
add
add
add
add
xchg
adc
add
add
les
add
adc
add
adc
add
adc
add
adc
add
adc
add
sub
add
xor
add
cmp
add
dec
adc
add
insb
adc
add
jl
add
nop
adc
add
mov
adc
add
mov
add
mov
adc
add
in
adc
add
adc
add
and
add
cmp
add
inc
push
add
dec
push
add
push
push
add
pop
push
add
push
push
add
mov
add
xchg
push
add
pushf
push
add
movsb
push
add
mov
add
int3
push
add
aam
add
fcoml
add
in
add
in
push
add
hlt
push
add
add
add
sbb
add
and
add
xor
add
dec
pop
add
push
pop
add
pusha
pop
add
jl
add
test
add
nop
pop
add
lods
pop
add
mov
add
mov
pop
add
rclb
add
in
pop
add
hlt
pop
add
cld
pop
add
add
add
or
add
adc
add
sub
add
xor
add
cmp
add
cmp
add
inc
sbb
dec
sbb
push
sbb
pusha
sbb
jl
add
mov
add
movsb
sbb
lods
sbb
mov
sbb
loopne
add
cld
sbb
or
add
and
add
xor
add
dec
sbb
pop
sbb
je
add
sbbb
add
add
les
add
int3
sbb
fcomps
add
hlt
sbb
cld
sbb
add
add
adc
add
sub
add
cmp
add
push
sbb
pop
sbb
push
sbb
nop
sbb
lods
sbb
mov
add
mov
sbb
rcrb
add
in
add
or
add
sbb
add
sub
add
xor
add
inc
sbb
push
sbb
mov
add
movsb
sbb
lods
sbb
mov
sbb
loopne
add
cld
sbb
or
add
add
xor
add
add
add
je
add
sbbb
pushf
sbb
add
add
int3
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
xor
add
pop
sbb
add
sbbb
add
sbb
add
in
sbb
add
cld
sbb
add
and
add
sub
add
xor
add
add
add
or
add
or
add
adc
add
adc
add
sbb
add
sbb
add
and
add
and
add
sub
add
sub
add
xor
add
xor
add
cmp
add
cmp
add
inc
xor
inc
xor
dec
xor
dec
xor
push
xor
push
xor
pop
xor
pop
xor
pusha
xor
xor
push
xor
jo
add
je
add
js
add
jl
add
xorb
add
add
mov
add
nop
xor
xchg
xor
cwtl
xor
pushf
xor
mov
xor
test
add
lods
xor
mov
add
mov
add
mov
xor
shlb
add
xor
enter
int3
xor
shlb
add
aam
add
fdivs
add
fdivl
add
loopne
add
in
add
call
xor
lock
hlt
xor
clc
xor
cld
xor
add
add
add
add
or
add
or
add
adc
add
adc
add
sbb
add
and
add
sub
add
sub
add
xor
add
cmp
add
dec
xor
loopne
add
clc
xor
and
add
xorb
add
inc
add
sub
add
inc
add
add
add
add
rolb
sbb
mov
inc
add
fadds
call
inc
add
lock
add
hlt
inc
add
clc
inc
add
add
add
adc
add
xor
add
inc
inc
add
push
inc
add
fadds
add
inc
add
loopne
add
in
add
clc
gs
add
add
data16
or
add
adc
add
add
sbb
add
add
and
add
add
sub
add
push
add
insb
add
fsubrl
in
add
in
insb
add
hlt
insb
add
cld
insb
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
insl
add
dec
insl
add
push
insl
add
pop
insl
add
in
insl
add
lock
add
shlb
enter
int3
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jno
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
jno
add
add
add
dec
jno
add
add
push
jno
add
add
pop
jno
add
add
fs
add
add
insb
jno
add
add
xorb
test
add
jno
add
jno
add
jno
add
jno
add
je
add
je
add
jne
add
add
cwtl
jne
add
jne
add
jbe
add
add
nop
jbe
add
jbe
add
ja
add
ja
add
add
js
add
cwtl
ja
add
ja
add
ja
add
jns
add
add
add
pop
jns
add
add
fdivrs
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jp
add
add
or
add
add
adc
add
jge
add
add
cwtl
jle
add
jg
add
addb
addb
addb
addl
addl
test
fadds
add
mov
add
cmp
add
add
inc
mov
add
dec
mov
add
push
mov
add
pop
mov
add
fs
add
add
add
add
add
add
pop
add
add
add
add
or
add
or
add
add
add
push
add
add
add
add
adc
add
adc
add
adc
add
adc
add
add
push
add
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
pop
add
add
pop
add
add
and
add
and
add
and
add
xor
add
add
add
add
add
ss
add
ss
add
cmp
add
rolb
outsb
movb
pop
movl
add
enter
leave
add
add
add
add
into
add
add
iret
add
add
add
add
roll
add
xlat
add
add
fildl
add
faddl
add
add
add
add
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
in
add
in
add
in
add
in
add
in
add
out
add
out
add
out
add
out
add
call
add
add
jmp
add
add
jmp
add
jmp
add
in
add
add
in
add
add
out
add
add
lock
add
lock
add
add
add
repz
add
testb
testl
add
add
add
stc
add
add
cli
add
add
cld
add
add
std
add
add
incb
add
incl
add
incl
add
add
add
push
add
push
add
add
add
add
add
add
add
push
add
push
add
add
add
dec
fdivrl
sbb
rolb
shlb
sbb
push
cmp
data16
hlt
mov
xchg
repz
test
or
out
mov
mov
push
push
xor
data16
or
adcl
test
mov
mov
imul
notl
push
aaa
ret
leave
pop
cmp
and
adcl
push
ret
cmpsb
push
aam
mov
inc
mov
mov
jmp
dec
fdivrs
dec
fnsave
cmp
push
lds
mov
mov
gs
cwtl
push
imul
dec
fdivrs
ret
mov
int
and
xor
dec
frstor
cmp
push
test
pop
test
jno
xchg
pop
jne
jne
out
pop
jnp
jle
call
shlb
sahf
fcoml
cmpsb
push
cli
mov
jecxz
ljmp
mov
push
aaa
ret
adcl
test
add
scas
aas
pop
test
es
jb
bound
mov
sbb
jne
sbb
or
jbe
cmpl
insb
or
jecxz
test
pop
test
jg
mov
out
imul
lods
and
pop
lods
es
mov
pushl
mov
ret
dec
fdivrs
int3
stos
shrw
and
sbb
pop
bound
cmp
pusha
mov
mov
and
or
inc
aad
sub
je
insb
loop
je
aam
shll
jno
jecxz
jl
jg
jmp
jbe
inc
into
pop
lret
scas
pop
mov
add
add
pop
xchg
jb
or
push
xor
pushf
sbb
or
pop
fisttps
flds
xchg
adc
or
ss
inc
mov
pop
fisttpll
out
insl
in
sbb
push
ficoml
mov
jle
call
kandnw
mov
in
movsb
cmp
js
add
std
insl
hlt
pop
mov
fsubrs
insb
or
scas
inc
fisttpl
xor
pop
leave
test
jmp
jae
xchg
addr16
popa
add
inc
pop
int
and
jb
cld
xchg
cmc
add
rorb
mov
stos
int
xor
pop
adc
sbb
or
insl
in
jne
gs
xor
jns
mov
xlat
push
lds
dec
mov
push
rolb
rolb
dec
iret
pop
cmp
and
icebp
jp
add
add
inc
and
push
cld
sbb
jnp
mov
stc
jne
mov
daa
test
pop
test
cld
jo
xorl
adc
shlb
sub
mov
xchg
daa
popf
or
in
mov
sub
pop
test
push
scas
sbb
pop
int
addr16
daa
inc
mov
inc
fimuls
add
aam
sub
sub
hlt
push
cld
jnp
cs
fistl
xchg
adc
in
sbb
mov
cwtl
decl
loop
out
adc
or
rorb
rorb
and
and
jle
call
xchg
addr16
push
