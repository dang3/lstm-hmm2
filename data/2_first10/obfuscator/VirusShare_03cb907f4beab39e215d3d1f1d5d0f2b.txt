lcall
or
push
sbb
shlb
sub
sbb
add
sub
dec
andb
or
adc
cmpsl
lock
add
adc
rolb
sbb
pop
add
sbb
add
fildl
sbb
adc
xor
and
and
add
add
sbb
addr16
fisubs
daa
or
or
add
andb
mov
jle
sbb
dec
ljmp
push
icebp
add
pop
pop
add
fucomip
jg
add
add
and
jle
incl
lock
cld
add
cwtl
nop
pop
add
add
push
add
or
xlat
scas
sti
int
adc
shlb
push
jnp
shll
dec
mov
sub
scas
mov
xlat
adc
jbe
adc
jns
add
xor
out
aaa
xor
test
sahf
dec
or
jmp
xor
out
push
xchg
cwtl
test
std
adc
div
sahf
verr
or
add
shll
add
or
mov
jno
add
jge
std
or
cmp
ffreep
dec
mov
mov
adc
dec
xor
inc
cmp
push
mov
mov
and
pusha
or
push
add
add
add
push
jnp
fnstcw
jnp
fiaddl
push
fstpl
inc
pop
fisubrs
inc
mov
sub
mov
lds
push
mov
fists
sbb
xor
add
out
inc
leave
cmp
pop
pushf
adc
pop
xchg
jnp
mov
add
add
push
add
cmp
or
std
add
iret
insb
push
inc
sub
sub
lock
int
or
sbb
add
prefetch
or
or
rdmsr
hlt
loop
pop
int
jl
daa
and
push
xor
sub
idivb
dec
and
dec
inc
add
gs
or
add
sub
pop
add
ja
inc
lock
insb
sub
xchg
test
xchg
jns
add
adc
mov
mov
clc
or
add
add
xchg
loope
xor
pop
out
in
mov
call
add
jecxz
lods
xchg
js
leave
xchg
add
adc
and
idivb
insb
mov
je
cmp
add
mov
arpl
loope
setnp
fdivl
cmp
pop
push
jge
jg
cmpsb
test
mov
add
add
push
sbb
xor
mov
push
loop
mov
add
ror
xchg
pushl
ss
jmp
add
xchg
cmpsl
jge
rcll
sbb
sub
jbe
in
and
dec
in
mov
sbb
add
jbe
adc
sbb
add
xchg
addr16
push
mov
mov
add
and
das
scas
push
inc
pop
and
or
movsb
int
jo
xchg
push
movsb
int3
and
out
es
push
sahf
out
add
aad
adc
pop
cmp
add
cmp
mov
mov
insb
jno
pop
les
test
test
mov
insb
insl
add
add
push
flds
call
imul
jg
out
out
add
mov
xchg
inc
mov
and
add
or
jne
add
lea
xchg
add
pop
mov
fwait
sub
add
mov
add
adc
push
mov
aad
test
addl
mov
loopne
sbb
mov
sti
mov
jg
push
in
push
push
adc
jg
or
or
andl
inc
mov
shlb
or
mov
out
je
sub
mov
mov
dec
add
in
add
ret
jg
inc
sub
ficoms
jnp
xchg
int
ljmp
jb
jo
clc
mov
add
add
in
xchg
push
xor
xor
imul
out
js
xchg
cmpsb
add
in
fwait
jo
shrb
in
js
lret
les
mull
dec
cli
sub
jne
xor
movl
and
sarl
cli
daa
dec
inc
jmp
movsl
mov
jno
js
or
xchg
xchg
add
idivb
cmp
adc
aas
dec
lret
data16
push
dec
lds
jmp
jmp
fcoml
or
lock
mov
jo
pusha
inc
push
push
jns
insl
sbb
fistpll
xor
and
stos
or
call
mov
out
jo
test
push
xlat
xchg
inc
sbb
add
test
mov
lds
and
sbb
or
ret
xlat
out
or
int3
imul
js
inc
cmpb
jp
xchg
push
mov
sbb
jmp
lods
inc
pop
insb
add
or
and
je
filds
js
lret
push
push
iret
lahf
shrl
jl
call
lds
add
push
pop
bnd
enter
pop
sbb
dec
sub
mov
cld
mov
test
hlt
repz
or
xchg
ss
push
push
push
ss
data16
xchg
mov
adc
notl
fdivs
mov
xchg
xchg
or
ja
push
repz
xchg
pusha
orl
outsl
ret
cmp
iret
jmp
lock
fsts
cmp
jb
int3
cmp
loopne
addl
sbb
loop
fimuls
pusha
rorb
aad
inc
pushf
rorl
stc
mov
or
out
sub
leave
stos
ja
add
jns
jns
push
mov
fxch
sub
jae
mov
roll
mov
lret
fcomip
mov
rcrb
aad
add
sbbl
or
stos
ret
je
sbb
dec
cmp
cmp
pop
inc
xor
push
leave
xor
les
pop
fsubs
sahf
push
adc
sbb
push
add
cmpsb
popa
sub
cmc
shlb
stc
and
leave
loop
pop
pop
pop
sbbb
inc
mov
jno
je
outsl
fwait
test
lods
add
jnp
xchg
shrb
hlt
mov
daa
or
xchg
dec
out
ja
sbb
hlt
cli
jge
cmpsb
xchg
sarl
cmp
aad
aaa
add
out
ficoms
or
test
loop
hlt
or
sqrtps
aad
cmp
cmp
ds
xor
jmp
jnp
test
add
inc
mov
les
repz
rolb
dec
xchg
jge
pop
mov
movsb
adc
mov
rorl
jb
mov
bound
xchg
xchg
and
int3
inc
lock
mov
cmp
or
pop
mov
dec
and
test
or
or
xor
pop
repnz
rol
ret
sbb
mov
outsb
xchg
std
push
repnz
data16
mov
mov
fisttpll
jo
cmc
ljmp
sbb
cld
cld
lods
mov
add
cli
pop
loope
xor
ror
sub
mov
jl
cmp
loop
fiaddl
mov
mov
scas
clc
std
mov
or
cmp
nop
add
test
mov
mov
sub
gs
mov
adcb
sti
xchg
daa
cmpsl
shrb
in
mov
xchg
aad
xor
clc
test
ds
shll
or
mov
cmp
in
addr16
mov
loopne
mov
stos
out
push
das
in
add
ja
in
test
pop
cmp
pop
ds
lds
sub
clc
add
stos
div
mov
shlb
call
pop
ljmp
addl
dec
pop
test
out
xor
clc
add
mov
pop
mov
stc
fs
xlat
add
or
in
push
icebp
sub
and
leave
inc
mov
aad
or
xchg
insl
xchg
mov
pop
std
adc
inc
das
subl
pop
mov
mov
sbb
loopne
add
loopne
xchg
incl
dec
lea
bnd
add
xchg
or
testl
incl
add
jno
loopne
mov
in
push
ds
adc
rcrb
sahf
icebp
push
movsl
rolb
adc
add
xchg
out
mov
lods
mov
jge
popa
arpl
push
xchg
cmpb
xchg
mov
fucomip
mov
ret
adc
mov
in
pop
jp
out
out
test
pop
imul
and
outsb
ret
cmp
mov
push
hlt
cmc
push
dec
cmp
xor
sbb
and
mov
add
cwtl
xor
adc
lcall
insb
pop
pop
movsl
test
pop
loop
je
fwait
sub
mov
loope
rorb
out
ret
xor
pop
popa
pop
xchg
cmpsb
cmpsb
sbbl
nop
pop
stos
xorb
cmp
cmpsl
fsts
adc
ljmp
jns
les
insl
jmp
add
test
subl
loope
lock
pop
popf
inc
or
stos
and
inc
cmc
xchg
idivl
add
fmull
xor
jg
jg
and
fadds
sbb
push
rcr
or
ja
aaa
add
cs
mov
dec
popa
dec
xor
pop
shr
dec
add
cmp
pop
rcll
int3
and
push
lds
sub
pushf
jbe
shll
ret
dec
and
ljmp
push
test
orb
and
adc
jne
jae
or
dec
loopne
daa
inc
inc
mov
push
jns
jno
clc
jp
jns
repz
arpl
sub
lds
test
stc
cmp
sahf
rorb
adc
inc
notb
clc
mov
mov
push
inc
rorl
xor
jle
mov
mov
push
popa
mov
mov
mov
xchg
movsl
mov
pop
es
push
pushf
jmp
mov
rol
lea
loopne
sub
jnp
jmp
jo
mov
std
lds
pop
lock
sub
lock
mov
stc
into
and
cmpsb
add
cmp
or
mov
inc
hlt
imul
xor
in
fisubrs
jl
jp
cmp
lea
pop
fisttps
cmp
adc
mov
stos
insl
lcall
mov
popa
orl
in
lret
push
test
lds
cld
jp
push
scas
dec
cwtl
adc
xchg
pusha
mov
mov
xor
mov
jp
in
pop
outsl
mov
inc
add
cmp
imul
mov
jl
repz
or
push
hlt
jne
xlat
jae
and
mov
mov
ljmp
xor
mov
add
out
push
push
iret
out
das
push
xor
out
clc
and
jle
ret
and
enter
sbb
sub
xchg
pop
mov
xlat
push
push
sbb
scas
pop
xor
test
push
xchg
push
inc
mov
rolb
fnstcw
negb
jo
flds
pop
sub
lcall
bound
pop
dec
add
dec
dec
pop
loope
adc
lock
lret
mov
js,pt
xchg
lock
addl
movsb
fiaddl
add
loop
dec
xchg
stos
sbb
fimull
test
xchg
jge
lcall
add
gs
dec
inc
leave
fdivs
aam
or
clc
test
mov
xlat
mov
cmp
push
repz
jbe
xchg
iret
push
mov
adc
push
jb
mov
mov
sbb
into
call
ljmp
pop
mov
out
sahf
sar
xlat
dec
mov
push
jb
in
cld
add
test
mov
sbb
push
sar
lea
lahf
pop
pop
sbb
push
dec
push
mov
jge
rolb
aam
icebp
stos
adcl
std
push
or
scas
pop
push
fimuls
and
mov
add
dec
or
mov
lods
fists
test
lods
or
and
lcall
xchg
mov
pop
lods
aaa
push
clc
sbb
mov
icebp
push
jno
adc
movsl
or
xchg
inc
push
mov
cmp
push
aad
in
pop
bnd
leave
loop
cwtl
add
cs
jg
inc
sub
push
pop
pusha
jb
or
push
lahf
sub
cmpsl
add
pop
jmp
ror
sbb
je
sbb
push
jne
dec
xor
out
sbb
es
inc
pop
cli
dec
and
xchg
pop
dec
movsl
dec
shr
test
push
mov
dec
scas
pop
scas
loope
adc
call
test
out
dec
out
push
cmp
dec
jmp
js
out
mov
test
mov
dec
xchg
push
dec
fbstp
or
aad
xchg
stos
mov
imul
and
xor
add
nop
push
negl
jl
negb
xor
or
movswl
mov
addl
clc
ret
fstpt
xchg
sahf
call
jg
fisubrl
test
mov
int3
push
loopne
mov
add
pop
jo
mov
xchg
push
ljmp
pop
sbb
nop
imul
outsb
add
sbb
es
inc
add
insb
add
sub
jnp
push
cmc
jmp
dec
add
push
and
adcl
sub
jp
xor
dec
adc
mov
inc
in
xchg
sub
stos
jl
imul
jne
ss
stos
cmp
outsl
movsb
jns
pop
pusha
cmp
xchg
adc
aam
shr
mov
sub
mov
ss
icebp
sub
out
call
push
push
jmp
mov
push
pop
sub
pop
sbb
aas
mov
and
pop
mov
out
fld
cmp
mov
js
out
pop
fiadds
lret
jbe
xchg
cmp
rcll
mov
iret
pushl
xor
inc
pop
jnp
add
test
mov
lock
mov
cmpsl
jae
call
add
push
stc
mov
add
mov
pop
and
or
ds
ret
xchg
sbb
stc
mov
xor
int
mov
lods
push
subl
mov
rcrb
mov
lock
mov
scas
jnp
jp
pop
and
js
ss
rcll
in
sarb
mov
outsl
xchg
fidivl
mov
mov
push
cmp
jecxz
jo
cltd
add
lods
shrb
add
inc
lds
sub
orb
add
add
pop
xor
icebp
xor
mov
clc
mov
fistl
aaa
into
add
jns
lahf
push
mov
ljmp
sahf
pop
xchg
lds
mov
xchg
jnp
test
jge
jno
mov
insl
dec
fcmovb
xchg
subb
dec
pop
add
shlb
pop
addb
and
dec
insb
in
out
add
sub
cmp
fwait
in
aam
orl
adc
push
xchg
mov
add
push
sbb
call
inc
cmp
add
imull
and
jl
pop
sbb
add
push
out
stos
outsb
ret
das
test
lock
xor
out
dec
mov
or
push
pushl
test
dec
pop
movsb
lea
inc
adc
fistps
fdivrl
jg
lods
push
lret
int
adc
push
mov
or
adc
mov
rclb
add
push
push
and
stos
xlat
cmp
push
repz
and
cs
mov
ret
cmp
mov
das
mov
mov
into
inc
sbb
call
or
or
adc
lock
sub
test
jo
pusha
movb
and
lock
push
add
pop
ds
in
inc
outsb
and
xchg
cmp
push
pop
mov
sbb
inc
pop
jp
test
cmpsb
loopne
test
mov
pop
test
stos
sub
pop
mov
sti
add
pop
push
dec
js
xchg
outsb
sbb
notl
sar
jo
push
test
fiaddl
or
jae
adc
push
sub
push
loope
outsb
cmp
mov
cmp
jg
or
push
out
nop
nop
dec
out
xchg
mov
mov
lock
pop
add
shlb
push
mov
dec
mov
dec
mov
cmp
cmp
dec
movsb
jnp
sbbb
cmp
stos
mov
out
xchg
xchg
mov
mov
pop
push
pop
xor
jno
jo
push
mov
insb
outsl
mov
sbb
decl
dec
bndstx
fmulp
js
pop
loop
je
fcmovnb
loope
imul
jl
mov
jl
scas
js
das
sbb
dec
fwait
jge,pt
add
push
inc
std
mov
adc
adc
mov
daa
and
test
sarl
jp
std
cli
lods
enter
into
add
iret
ja
cltd
add
pusha
push
push
cli
ds
sahf
inc
cmp
push
loopne
inc
fistpll
mov
add
enter
shlb
and
mov
sub
pop
xor
push
jmp
push
lret
push
roll
cmp
mov
mov
mov
outsb
jp
test
orl
jmp
mov
add
sbb
ret
mov
out
shl
or
lods
dec
insb
inc
cli
jns
pop
inc
xchg
mov
hlt
test
dec
xorb
mov
jmp
sbb
roll
add
js
loopne
and
sub
sar
out
addl
icebp
mov
adc
popa
adc
insl
subb
push
decl
xor
xchg
xchg
push
decl
stos
ror
adc
call
fs
cmp
shl
add
sub
dec
pop
inc
hlt
sahf
outsl
cld
sub
inc
ds
mov
pusha
xchg
sub
mov
mov
test
or
mov
es
stos
fimull
popf
push
push
push
je
inc
pusha
pusha
lret
cld
or
adc
insl
fdivrl
xor
dec
mov
or
mov
sti
mov
fwait
xor
fiaddl
pop
xor
dec
into
push
lret
adc
rcrb
jl
ja
pop
adc
adc
mov
dec
pop
sbb
push
testb
je
cmp
xor
aaa
fidivrs
cmpsl
loopne
std
scas
push
pop
jge
pop
push
rclb
idivb
mov
pushl
lock
dec
sar
adc
stos
rclb
pusha
xor
out
js
sub
jae
inc
adc
test
sahf
push
out
clc
mov
mov
cmc
xchg
xor
movsb
xor
aad
lock
and
dec
jmp
mov
lahf
mov
and
stc
cmpsl
andl
fbld
add
call
pop
push
iret
jecxz
outsb
jns
push
loop
js
into
cmp
adc
outsb
inc
add
sub
das
xor
hlt
add
and
add
mov
mov
xor
outsl
dec
inc
sub
mov
inc
push
mov
push
out
jle
repz
decl
faddp
iret
xchg
cli
mov
mov
pop
pop
data16
js
ficomps
enter
ret
cmp
adc
bound
pusha
lea
add
mov
push
pop
cmp
fwait
in
xor
lret
std
mov
ror
dec
shlb
aam
mov
imul
jno
xor
fldt
add
gs
ljmp
movb
outsb
sbb
shrb
fsubrs
add
sar
fldcw
xlat
mov
iret
mulb
mov
push
test
aaa
sbb
mov
out
pop
inc
insl
pop
lock
add
out
stos
xchg
lock
ds
jle
sahf
mov
sbb
out
cld
sub
std
imul
xor
popf
pop
cltd
pop
pop
mov
rolb
sbb
in
add
cli
subb
jmp
out
test
test
add
leave
lock
in
inc
dec
jbe
lret
pop
lds
cmp
inc
fwait
aam
jmp
imul
scas
in
lcall
mov
adc
xorl
ss
mov
xor
mov
push
hlt
or
cld
and
jle
andb
add
jne
sub
dec
sub
in
xchg
cmp
ret
sbb
mov
fadd
add
push
shlb
mov
fs
inc
add
es
dec
ret
jno
add
jbe
inc
aas
shl
adc
rclb
push
mov
push
aas
cld
push
cmp
scas
inc
sub
jne
push
popf
xor
adc
mov
out
cmp
fnstcw
stos
gs
push
stos
or
lock
push
adc
bnd
lods
cmp
cld
and
push
loopne
xlat
push
sbb
push
shll
out
push
movsb
push
lods
out
pusha
arpl
adc
jbe
xchg
push
push
pop
cmc
fstpt
outsb
inc
pop
inc
mov
xor
mov
leave
inc
test
jmp
pop
cmc
mov
push
lret
add
xor
adc
insb
add
call
sub
add
addr16
adc
jp
adc
cmp
loop
dec
adc
outsl
mov
add
lock
jno
push
test
inc
lahf
rorb
sbb
mov
scas
and
inc
out
clc
lea
and
push
mov
cld
out
rol
xchg
cmp
xchg
mov
lock
fs
or
inc
xor
sarb
lock
or
dec
sbb
or
sub
mov
adc
js
jnp
out
add
sbb
es
sti
jo
pop
adc
jns
cmp
div
add
push
clc
add
mov
push
cmp
ss
loop
xchg
sahf
sbb
rorb
sbb
inc
jl
pusha
inc
add
mov
into
mov
lea
lahf
pop
sbb
mov
jb
dec
mov
movsl
rclb
sub
pop
mov
sbb
nop
lret
and
pop
test
inc
dec
or
lcall
jno
mov
xorb
pop
out
es
adc
ds
or
clc
and
test
subl
movsb
xor
scas
pop
mov
push
shlb
lods
insb
add
fs
xor
orb
shlb
das
lods
test
mov
dec
stos
movl
mov
mov
xor
testb
std
popf
or
adc
inc
inc
jae
ret
xchg
rorl
out
pusha
inc
pop
clc
or
rcrb
and
xor
mov
jbe
repnz
xor
pop
shl
pop
dec
imul
jle
je
and
loop
cltd
add
ret
cs
sbb
sub
mov
jo
scas
xchg
dec
jle
int3
insb
xor
int3
pop
insl
cmc
fisubrl
mov
enter
shr
pop
jno,pt
mov
aaa
insl
pop
mov
inc
mov
jo
addr16
mov
jno
add
scas
pop
insl
incb
xchg
add
lods
push
inc
mov
pop
mov
cwtl
jb
rcl
jp
in
pop
hlt
mov
mov
pop
xchg
mov
loope
jb
sub
sbb
xlat
or
xor
mov
push
inc
sub
add
cmp
pop
mov
mov
cmp
or
ljmp
jbe
dec
dec
loopne
xor
cmp
out
add
ds
xchg
leave
arpl
jno
jg
mov
sbb
stos
lods
mov
xor
pop
ret
jge
daa
adc
push
dec
jnp
das
push
push
fstpl
cmp
add
stos
xor
movsl
leave
sarb
fsubp
inc
sbb
xchg
pusha
push
sub
xor
clc
mov
mov
mov
or
fcmovnb
testb
xchg
cmp
jge
mov
xor
in
pop
and
ss
jl
insl
or
inc
adc
inc
loop
adc
lcall
aas
xor
pop
popf
dec
push
push
sbb
pop
add
add
or
aad
outsb
adc
xlat
enter
xor
jle
je
mov
outsb
out
frstor
adc
bound
push
ret
hlt
pop
js
push
jbe
or
aam
push
insl
lret
mov
test
mov
sub
int
test
lcall
fadds
fucomip
pop
sbb
mov
inc
testb
ret
lcall
push
xlat
jbe
jne
mov
loopne
jne
lock
dec
rolb
shl
stc
out
test
out
jbe
add
lcall
fcmove
sbb
lcall
sarl
mov
sbb
mov
sub
mov
sbb
call
cs
scas
fimull
cmp
or
outsb
or
call
or
and
cld
mov
push
dec
sbb
hlt
lods
add
jnp
ret
addb
mov
mov
add
sbb
jnp
mov
fidivs
jnp
jg
loope
add
add
shrl
sahf
clc
pop
push
clc
je
adc
xchg
push
dec
out
sbbb
stos
jbe
add
mov
mov
push
rorb
xchg
mov
adc
cmc
orl
push
push
sbb
xchg
jge
push
sbb
pop
pop
int
stos
notl
mov
push
pop
cmp
mov
adc
dec
cmp
sbb
lret
pop
hlt
fidivl
scas
mull
xchg
sub
mov
lret
and
ljmp
in
clc
dec
clc
mov
xchg
in
mov
add
cs
xchg
shr
adc
cmp
and
insb
or
xor
cld
cs
jg
lods
cli
lahf
add
jge
flds
pusha
sbb
adc
pop
push
loope
shll
inc
fisubs
mov
inc
adc
push
lock
mov
and
lcall
pop
cmc
out
ret
ljmp
daa
movsb
jmp
outsl
shll
fstps
or
fdivs
add
andl
add
add
call
pop
arpl
add
mov
dec
cmp
push
scas
fdivrl
pop
loopne
mov
mov
ficoml
test
xor
les
inc
cmp
cwtl
mov
js
add
fisubrs
xchg
fisubl
orb
shlb
or
cli
stos
sbb
pop
mov
jbe
movsb
sbb
sub
inc
rcrb
add
cmp
fildl
push
adc
inc
arpl
pusha
jne
push
cli
and
jnp
jge
adc
sbb
outsb
filds
insb
lcall
ss
insb
jnp
pop
lock
sbb
popa
add
fsubr
aam
xor
dec
enter
lds
int
push
jb
inc
test
push
jno
int3
and
das
out
icebp
clc
mov
pop
lret
sbb
ret
jg
mov
push
enter
push
cs
in
ljmp
mov
xchg
pop
lret
add
cmp
insb
test
cmp
jbe
push
pop
push
sub
out
test
inc
rorb
push
mov
adc
dec
clc
sbbb
lock
xor
xchg
cmp
mov
neg
xor
mov
jp
js
cld
add
lods
xor
inc
shrb
stos
inc
pop
mov
add
daa
or
aas
push
inc
mov
sbb
xor
jns
lods
lods
cmp
mov
mov
aam
mov
ret
inc
addr16
cmp
adc
imul
pop
decb
rolb
sbb
cmpsb
dec
or
jl
cmp
insb
jle
std
mov
repz
fldl
dec
pop
add
xorl
cmp
or
push
or
mov
negl
pop
mov
dec
test
sbb
mov
lods
je
adc
lahf
inc
js
test
inc
push
mov
add
jecxz
sbb
cwtl
jecxz
or
jge
ret
addb
sbb
fadds
lea
decl
jle
jns
add
sbb
or
std
adc
enter
aaa
jmp
das
add
or
push
imul
out
mov
dec
out
outsl
andb
sti
adc
xor
dec
push
in
loop
adc
pusha
push
xor
mov
sar
mov
pusha
test
jle
shrl
adc
or
rcrl
xorl
test
orb
fsubrl
dec
xchg
xchg
es
aam
push
push
mov
sbbb
lods
mov
sahf
or
mov
fs
xor
sub
aam
icebp
rolb
cmp
or
mov
aam
test
mov
add
xor
mov
clc
call
push
pop
fs
jnp
jb
dec
js
aas
fiaddl
xchg
daa
arpl
inc
pop
mov
call
adc
xchg
push
mov
add
ss
xor
mov
inc
daa
jge
xchg
mov
outsl
movsl
mov
mov
not
xlat
sbb
dec
add
icebp
add
insb
mov
adc
xchg
outsl
adc
mov
xchg
std
or
test
nopl
cltd
enter
jl
sti
orb
or
push
loopne
rcrl
scas
dec
fsubs
lock
add
dec
loop
pop
out
pushf
jecxz
aas
mov
addr16
fbld
ja
sub
int3
jl
decl
jno
or
into
push
and
mov
shl
add
inc
data16
and
push
cmp
fwait
das
mov
mov
xchg
adc
idivb
ljmp
mov
pushf
add
shlb
rclb
test
cmpsb
and
std
xchg
xchg
sub
mov
jp
das
cwtl
scas
imul
fninit
cmpsb
fdivrl
lahf
push
dec
enter
fiadds
into
nop
jae
ret
add
scas
dec
adcb
lock
out
fidivrs
push
add
and
fs
clc
lahf
inc
jg
add
cwtl
xchg
rcll
mov
test
jle
fisttpll
jae
rcrl
lcall
sbb
insb
mov
js
add
sbb
jns
ret
rcr
lea
lods
in
xchg
clc
in
add
sub
adc
xor
dec
int3
inc
test
cmp
inc
cmpsl
mov
xor
add
push
out
inc
outsl
pushf
push
sbb
fsubrs
movsl
loopne
jle
ret
mov
out
in
es
psubd
dec
xchg
ret
push
and
xlat
lods
mov
mov
loop
and
mov
xorb
xor
fiadds
push
xchg
outsb
lret
add
and
loopne
test
jmp
clc
mov
jmp
pop
mov
les
aam
add
das
lock
xor
dec
push
imul
or
push
test
aas
js
ds
xor
add
adc
add
ficompl
cwtl
dec
jg
inc
out
sub
push
pop
mov
sbb
cmp
push
inc
pop
lock
movb
jne
iret
addb
test
jmp
sub
jecxz
dec
mov
js
data16
sar
add
int
popf
aam
mov
pop
movsb
pop
push
inc
push
fstpl
jg
mov
mov
adc
subl
cs
jbe
jbe
shll
and
push
outsb
fmul
pop
push
ret
or
or
insl
push
lods
mov
arpl
inc
ja
xor
fs
inc
sbb
jae
mov
push
adc
xor
shl
in
or
xchg
jbe
sbb
adc
inc
and
movq
lret
dec
mov
loope
fstl
cwtl
int3
sbb
test
rcll
pop
ljmp
adc
pop
stos
icebp
cmp
adc
pop
dec
or
pop
pop
fnsave
dec
inc
push
mov
ljmp
inc
push
lods
dec
aaa
mov
loope
dec
push
push
lret
mov
rorl
cmp
rcrl
jge
sarb
clc
push
pop
mov
dec
add
shrl
cli
dec
jae
ja
inc
rorb
hlt
cmpsl
dec
movsb
push
fcmovbe
rcrl
pop
enter
shlb
ljmp
push
fcomp
push
pusha
push
lods
and
dec
sahf
and
stc
clc
xchg
mov
mov
out
pop
cmp
and
ljmp
add
add
add
mov
stos
mov
cmpsb
push
out
enter
push
push
inc
out
rcrl
xor
fsts
lods
fistpl
mov
cmp
mov
das
les
pushf
lret
js
lods
in
jmp
add
insl
mov
enter
ljmp
out
lea
lret
mov
sub
mov
adc
lds
push
mov
add
lret
jne
add
inc
cwtl
aad
sahf
outsb
adc
push
push
lret
mov
in
jae
fs
repnz
mov
xor
push
sbb
push
std
mov
into
mov
mov
arpl
outsb
and
aas
xor
imul
testb
cmp
incb
sti
test
sbb
dec
jg
jle
ss
jle
push
push
jo
cmpsb
out
dec
decb
scas
ja
or
mov
mov
gs
and
xor
jle
mov
lea
or
mov
cli
jne
rolb
lods
repnz
add
or
inc
jmp
orb
ret
lock
outsb
std
sub
mov
sbb
stos
pop
sub
jae
jge
mov
jl
fsub
mov
adc
inc
jecxz
and
or
cmpsl
loope
inc
shl
mov
add
loope
and
negl
jno
xor
inc
sti
addb
sbb
fisttps
sbb
pop
push
add
mov
scas
or
and
mov
sub
mov
orb
or
mov
out
push
push
sbb
adc
ss
mov
push
cwtl
mov
pop
push
lock
lea
es
test
cltd
mov
jg
xchg
es
and
mov
push
xchg
and
aas
in
pop
sub
scas
dec
push
xlat
lea
stos
push
faddp
mov
test
ret
scas
push
inc
and
push
add
insl
xlat
push
or
push
out
sub
pop
pushw
scas
pop
inc
cli
mov
mov
push
les
lods
stc
faddp
and
mov
sub
in
and
shll
add
pushf
mov
or
popf
fimuls
mov
inc
push
add
or
mov
sbbb
fimuls
out
stos
xor
sbb
adc
subl
call
mov
jmp
adc
in
mov
sbb
rolb
sub
lahf
push
into
pop
sub
insb
lock
and
dec
fdivl
or
inc
lods
pop
sub
jmp
mov
les
xchg
imul
pop
sub
pop
cltd
sti
add
addl
xor
xor
lret
or
add
and
stos
cwtl
push
cltd
mov
mov
dec
push
sub
pop
cld
sub
mov
adc
call
sbb
in
rclb
movl
sub
jno
mov
adc
and
xorb
mov
xor
mov
add
aaa
mov
xor
jecxz
test
popa
xchg
movsl
and
loopne
or
repnz
lock
loop
xchg
inc
in
ljmp
push
data16
scas
lahf
cmpb
popa
push
inc
test
repnz
xor
ja
xchg
mov
jmp
imul
xchg
mov
cltd
mov
int
ret
das
sub
and
inc
pop
enter
shlb
fwait
imul
xchg
daa
sbb
sub
fnstcw
gs
les
adc
push
sbb
mov
fadd
mov
pop
jecxz
xchg
xor
pop
cmpsl
lock
es
adc
pop
add
inc
cli
pop
divb
and
jno
fnstenv
outsb
arpl
lcall
dec
mov
mov
imul
push
push
mov
pop
mov
lock
cwtl
pop
insb
repnz
clc
cwtl
ret
arpl
out
push
ds
insb
cmp
js,pn
mov
iret
mov
push
dec
pop
arpl
cmp
inc
push
mov
out
sbb
jg
push
jo
cmp
add
push
fisubrl
mov
cli
rolb
ljmp
jns
pop
or
scas
cmpsl
sub
push
nop
xchg
sbb
mov
lret
fs
cmpsb
mov
jno
cltd
stos
push
js
subb
outsb
adc
outsl
dec
inc
xor
jo
inc
fldt
push
psllw
int3
cmpsl
fdivs
ret
std
push
mov
and
xchg
mov
sbb
subb
fcoms
sbb
aaa
mov
adc
mov
mov
pop
push
loopne
adc
sub
inc
sub
shl
test
xchg
xchg
in
add
inc
inc
or
popa
sbb
dec
cltd
shrl
je
sbb
roll
js
mov
loop
mov
cmp
int3
dec
inc
jl
add
rcr
pusha
pop
add
inc
or
bound
sub
inc
xlat
cltd
sub
push
jl
in
inc
rorb
fs
ds
cld
lret
clc
pop
test
adc
xor
mov
and
sbb
sbb
lock
xorl
popa
inc
xchg
jo
test
cmpsl
lds
adc
test
scas
testl
repnz
push
lock
fisttps
push
xchg
push
push
cltd
dec
cmp
push
dec
adc
bound
sbb
add
rol
or
mov
mov
repz
dec
jo
lods
xchg
mov
sbb
mov
aam
ficompl
stos
sbb
dec
mov
xchg
mov
movsl
mov
js
dec
imulb
out
push
push
mov
cmc
adc
lods
add
add
add
sub
and
inc
movsb
cs
xor
or
sbb
pop
dec
cmp
xor
xor
xchg
push
mov
loopne
jmp
add
pop
or
xor
cli
mov
ret
xchg
jle
jge
loope
aaa
lds
add
jle
xchg
leave
mov
inc
lods
mov
xchg
jmp
cld
pop
sub
mov
lods
xor
inc
or
mov
pop
and
mov
sub
push
sbb
insb
or
dec
cmp
sbb
icebp
mov
jle
or
xchg
cmpsb
inc
mov
add
jno
cmpsb
cmp
divl
cmp
ja
cmp
lock
adc
scas
pusha
jecxz
neg
outsl
or
loopne
pop
adcl
gs
sbbl
fbstp
jmp
or
pop
dec
jae
jecxz
pop
inc
dec
add
shl
loopne
add
sub
lret
cmp
imul
scas
mov
mov
out
dec
ss
mov
xchg
mov
mov
into
xchg
dec
rclb
cmpsl
mov
js
mov
fcomps
push
jmp
stos
pop
xor
adc
or
push
movsb
adc
mov
adc
xor
rcrb
jnp
pop
and
jnp
les
subb
pop
dec
cmpsl
mov
movsb
lret
or
cmp
xchg
jo
popf
sahf
loop
cmp
jae
ljmp
insl
lods
repz
mov
cmpsl
lea
lock
or
mov
les
dec
in
clc
dec
xchg
fstl
xchg
subb
add
cli
ss
dec
sbb
test
in
test
add
roll
imul
mov
iret
push
test
mov
add
sub
in
jbe
fiaddl
mov
in
or
jl
adc
mov
sbb
loop
dec
std
sbb
mov
ljmp
xor
jl
pop
adc
call
addr16
rcr
test
push
cmp
fwait
sub
outsb
popf
inc
pop
push
sahf
sbb
std
std
mov
jae
fsub
lea
push
cmc
or
pusha
cmp
aad
cmp
ret
xorb
dec
orl
in
mov
cmp
pop
das
add
jg
loopne
sbb
jl
pop
inc
and
dec
cmp
sub
or
inc
and
decl
inc
into
inc
aaa
cmp
or
jo
pusha
xor
and
or
mov
in
inc
push
or
mov
mov
addl
pop
pop
sbb
imul
and
sbb
shrl
xchg
lock
push
sbb
or
jecxz,pt
popl
fmuls
add
and
leave
jp
rcll
dec
rolb
add
pause
mov
lds
pop
mov
cltd
fisubrs
mov
in
dec
stc
mov
jge
test
lods
adc
ror
mov
mov
xor
dec
test
arpl
test
push
dec
repz
cmpsb
cli
insl
rcr
jno
sbb
leave
loopne
xchg
loop
xor
add
pop
dec
cs
and
push
jb
push
lods
cmp
nop
jcxz
jle
pop
insb
mov
bound
jl
lea
jb
add
out
xchg
fdivrl
stos
aad
sbb
out
inc
lock
sbb
xor
sbb
sahf
int
jp
inc
jg
mov
sbb
dec
dec
xchg
aam
lea
mov
sahf
movsl
adc
loop
push
cmpsb
pop
out
cmc
rcll
ret
les
fnstsw
mov
inc
not
push
js
jg
daa
shrl
jns
jp
sub
cwtl
call
aam
xor
dec
jmp
enter
nop
or
lret
in
pop
cli
push
ljmp
inc
pop
addb
pop
movl
out
fcmovnb
cmp
hlt
or
push
faddl
inc
ret
and
mov
inc
in
rol
mov
xor
jle
jae
pop
mov
dec
imul
xchg
jle
mov
pcmpeqd
hlt
sbbb
fwait
cmc
dec
cwtl
mov
mov
jns
jbe
test
xchg
hlt
ss
negl
dec
in
aad
xchg
xchg
adc
cmpsl
inc
test
or
shll
pcmpeqw
js
adc
jp
sub
mov
movb
xchg
and
push
shll
jecxz
movaps
mov
sub
and
cmp
mov
and
xor
in
out
xchg
lahf
mov
jp
inc
push
aaa
sbb
out
shlb
jns
arpl
imul
and
mov
cmp
jmp
jno
lahf
popf
xlat
inc
cli
leave
mov
scas
mov
add
cli
lret
push
sbb
sbb
mov
cmp
mov
push
ret
sub
or
inc
dec
mov
call
fldcw
aas
enter
fbstp
xchg
mov
push
test
mov
mov
cltd
mov
dec
call
inc
jge
icebp
xor
addr16
xor
push
inc
movsb
aad
pop
or
pop
sbb
adc
icebp
shll
or
inc
movsb
sti
inc
arpl
fs
std
rcrl
mov
enter
xchg
ljmp
xchg
ret
add
and
lahf
push
adc
pop
ror
cld
xlat
stos
push
stc
dec
aaa
orb
adc
mov
xor
inc
call
test
cli
mov
pop
add
shr
xor
dec
les
sub
test
icebp
outsl
test
push
sub
mov
cwtl
xchg
loope
ljmp
jl
orl
or
or
imul
stos
int
stos
imul
call
or
cmp
lea
lods
outsl
popa
cwtl
jbe
jp
jbe
push
jo
add
or
jo
mov
xchg
xor
rorb
or
push
or
pop
test
mov
push
mov
mov
lcall
mov
xchg
rcrl
dec
imul
dec
fwait
xor
test
push
push
mov
mov
hlt
add
push
into
mov
sbb
inc
push
pusha
outsb
sti
or
cmc
dec
inc
mov
jne
test
mov
cld
mov
mov
xchg
adc
clc
mov
test
in
jg
add
sub
rclb
fisttpl
add
adc
adc
jl
js
xor
jmp
mov
imul
cmpl
sbb
fidivrl
repz
mov
mov
dec
cmpsl
or
mov
call
sbb
jg
pop
icebp
xlat
sbb
sub
pop
ljmp
mov
je
das
push
shrb
scas
sbb
mov
movl
pop
in
pop
mov
lods
or
mov
dec
negl
aad
ds
dec
outsl
sub
and
push
mov
or
sbbl
cmc
sbb
lahf
mov
adc
or
insb
icebp
popa
xor
dec
int
imul
clc
aas
movsl
add
ret
jmp
std
adc
std
mov
clc
and
mov
mov
test
mov
lea
repnz
lcall
mov
in
inc
mov
mov
and
add
pop
leave
mov
push
or
xlat
push
lcall
ss
xor
cltd
xlat
dec
pop
test
xchg
stc
pop
adc
fwait
push
inc
je
shl
lods
sub
xchg
and
cmp
pop
out
repnz
push
pop
inc
fldt
sbb
movsb
dec
movsl
js
or
sbb
xor
sub
and
inc
scas
les
pop
xor
cmp
push
add
fs
xor
shlb
jge
pop
sub
mov
inc
in
lods
cmc
lods
data16
mov
dec
mov
adc
pop
pop
mov
je
lea
rolb
iret
in
lds
pop
jg
in
adc
mov
je
xchg
pop
pop
ja
or
adc
inc
cmp
gs
xlat
sbb
xor
leave
cli
fisttpll
mov
ljmp
pop
xchg
clc
loope
cli
orb
jbe
sub
fimuls
es
mov
in
sub
jecxz
test
push
leave
cmp
scas
mov
xor
jo
inc
es
xor
add
fsubl
add
push
push
inc
pop
mov
add
sbbb
add
sbb
sbb
das
rorb
cld
jecxz
out
inc
jp
adc
loop
cmp
xor
cmc
sub
movb
pop
stos
lods
mov
or
addr16
pop
xor
push
outsb
mov
cmp
pop
ja
dec
pop
push
push
and
mov
sarb
test
sub
adc
adc
dec
pop
xchg
jns
push
and
push
cmp
pop
add
adc
jno
dec
aas
cmp
xor
test
cwtl
fcompl
shrl
mov
sbb
mull
mov
jno
lcall
pop
add
mov
repz
mov
jbe
jne
je
push
repz
inc
call
shrl
ljmp
je
mov
inc
das
sbb
cwtl
jb
fwait
sbb
mov
lods
and
add
cmp
ret
mov
cld
js
sbb
cwtl
mov
add
push
push
xchg
out
mov
or
test
fcmovb
sarb
fwait
mov
push
add
iret
lret
in
or
hlt
lds
test
mov
add
push
cli
push
mov
cmc
mov
adc
lods
outsl
test
fisubrl
and
addr16
mov
decl
repnz
mov
jno
int3
mov
xchg
pop
xlat
stos
lret
cli
test
or
mov
pop
xchg
inc
adc
push
lds
cmp
add
or
cli
inc
adc
or
test
fucomp
fcoms
sbb
mov
loopne
out
mov
mov
jo
jg
mov
ret
xor
sub
lock
iret
in
insb
and
cld
cs
lcall
mov
push
jge
cmc
loope
jne
shrb
jge
cmpsb
sub
orl
pop
add
or
divb
add
movsb
sbb
mov
adc
mov
jne
aam
jo
aad
push
cmp
push
rcrb
sarl
xchg
hlt
dec
inc
cmp
inc
sbb
mov
and
adc
pop
out
out
xchg
out
mov
call
insb
jno
mov
or
fisttps
sbb
cli
daa
xchg
loope
push
mov
jbe
cmp
aas
int3
jmp
mov
mov
sub
scas
in
push
rorb
fldenv
cmp
mov
xchg
pushf
push
and
lahf
jp
test
sbb
pusha
jg
aam
fidivl
iret
movsb
mov
push
inc
pop
pop
inc
jmp
or
fbstp
movsl
es
add
out
sub
enter
les
lret
das
xchg
sbb
les
pushl
mov
das
adc
jbe
dec
jg
ss
sbb
lock
pusha
addr16
inc
inc
mov
inc
sarl
adcl
lock
pop
test
js
dec
pop
fimuls
add
pop
jle
out
adc
adc
call
test
lds
or
aam
push
jbe
jmp
sub
in
loopne
push
xor
sbbb
popa
mov
incb
bound
test
add
ret
add
ficomps
test
test
int
adc
dec
test
scas
mov
pop
outsl
and
or
sub
sbb
pop
jo
or
cmc
adc
adc
daa
cmc
jecxz
andb
les
fcmovbe
cmp
dec
fs
lcall
int3
sub
add
mov
fstpl
xor
cmc
adc
adc
cli
mov
ds
cmp
mov
jle
pop
pop
lret
xlat
sbb
fimuls
lahf
mov
ljmp
jmp
in
popf
pop
repnz
jg
xchg
jp
xchg
scas
dec
jbe
arpl
mov
and
jge
pusha
add
cmp
idiv
rorb
out
stc
mov
filds
sbb
add
in
jmp
out
mov
call
lods
pop
xor
cmp
pop
aaa
test
das
xor
xchg
mov
pop
daa
dec
inc
and
xchg
and
hlt
lock
loop
fs
aad
dec
and
cmp
cmc
jo
out
dec
out
pop
xchg
and
dec
cmpsb
sbb
jae
mov
jecxz
lods
js
add
jae
cs
xor
insl
cmp
add
mov
insl
xchg
ret
rcrl
notl
pop
dec
in
xchg
inc
jl
int3
enter
mov
push
xor
es
add
fsubl
sub
unpcklps
mov
cmpl
or
jns
add
dec
sub
xor
push
xor
js
push
dec
out
mov
cmp
mov
out
popa
pop
adc
fwait
cmp
mov
sarb
xchg
cmc
mov
xor
push
add
sub
adc
jp
dec
cmp
sub
in
xchg
outsb
dec
cmp
inc
add
stos
xchg
mov
loop
leave
add
rorl
aad
jo
insb
sbb
and
nop
clc
sbb
push
rcrb
mov
mov
jo
in
or
imul
inc
xchg
push
pusha
add
jp
mov
push
and
adc
jp
xor
add
je
cmp
jns
adc
shrl
push
push
movsl
lret
mov
mov
jo
cmpsl
or
xchg
rolb
data16
jo
mov
aad
cmc
insb
test
stos
push
sahf
mov
sbb
add
mov
push
push
inc
mov
test
jmp
mov
lods
aad
bound
insb
js
test
outsl
in
dec
cld
jno
mov
aaa
iret
adc
sub
cli
push
shlb
or
jle
xchg
inc
push
add
movsb
add
pop
inc
cltd
mov
aad
stos
inc
pop
mov
mov
jge
popf
dec
xchg
xchg
fisubrs
cmp
outsb
push
aad
imul
out
cmp
loope
pop
adc
lods
push
push
popa
sub
stos
adc
cmpsb
or
mov
je
out
stos
roll
push
sub
out
es
sti
hlt
push
xchg
stc
dec
cmp
data16
out
or
add
mov
fdivl
push
mov
adc
jmp
shlb
and
fs
pushf
cmp
adc
jecxz
sahf
jne
push
aam
sub
ljmp
adc
push
cmpsb
nop
testb
mov
jmp
mov
xchg
xor
loope
cmc
xchg
and
lahf
jecxz
rcrb
or
out
dec
xor
xchg
add
pop
add
inc
stos
arpl
push
sbb
pop
call
dec
mov
cld
jp
pop
jle
fsubrs
lret
add
mov
sub
sub
inc
push
clc
push
mov
fcomps
sbb
lds
jecxz
cmpb
xchg
fcoms
fdivs
pushf
mov
repnz
xchg
mov
jmp
xchg
push
icebp
mov
popf
mov
inc
arpl
outsb
add
rorb
pop
mov
or
add
cmc
push
addl
mov
cmp
scas
imul
movsb
and
scas
scas
rolb
mov
leave
stc
add
punpcklbw
out
fistpll
mov
roll
gs
shll
test
push
cmp
pop
mov
adc
mov
icebp
repz
add
jle
inc
or
fiaddl
bound
sti
xchg
outsb
and
adcb
add
jns
sbb
pop
stos
aaa
cmp
mov
inc
dec
in
pop
xchg
add
inc
jo
add
mov
mov
mov
jo
out
mov
mov
and
hlt
rcrb
clc
ds
lret
cmpsl
movsb
mov
icebp
lret
jp
js
xchg
mov
aad
or
inc
mov
jle
adc
cld
sub
icebp
shlb
dec
in
sub
movsl
es
out
fcomps
mov
mov
aam
sbb
or
xchg
sahf
push
push
jmp
xor
push
pop
nopl
cld
cltd
neg
aaa
add
push
ret
cli
cmpsl
dec
cmpsl
sti
sbb
addl
pop
push
unpcklps
test
popa
push
clc
cmp
mov
aad
pop
add
loopne
je
into
fiaddl
or
insl
jg
cmpsb
ret
adc
fidivl
filds
cmp
test
fnsave
and
pop
push
int3
sbb
mov
push
and
cmp
mov
adc
js
lock
xchg
rorl
push
push
sbb
out
sub
sbb
or
sbb
mov
pop
push
fstp
sahf
pop
test
in
jo
sbb
sbb
cs
jp
ja
lea
xor
inc
idivl
pop
xchg
popa
inc
std
call
push
xor
lret
mov
sar
sub
insl
mov
rcl
cmp
stos
inc
dec
pop
pusha
test
push
mov
inc
movsb
notb
or
push
pusha
pusha
mov
outsb
dec
cmp
adcl
xchg
pusha
dec
cmp
roll
aad
pop
fisttpll
mov
rclb
xchg
cli
lock
leave
inc
xor
inc
data16
inc
mov
push
push
jmp
in
add
fmuls
cmp
jecxz
test
adc
dec
loopne
mov
clc
jb
fstp
fdivs
sbb
cmpsb
add
dec
js
mov
shl
icebp
mov
sbb
cli
add
jmp
add
mov
push
mov
cmp
je
mov
imul
lcall
sub
xor
mov
jmp
xchg
dec
js
sub
add
sbb
push
mov
push
jecxz
ud1
test
ret
out
in
xchg
and
rolb
pop
mov
add
ret
ret
jl
aaa
imul
imul
add
in
lret
sahf
push
mov
or
mov
les
sbb
stc
repnz
dec
cmp
xchg
loopne
xchg
ljmp
or
push
jno
daa
sub
pop
rorb
jne
fcmove
stos
shr
dec
push
andb
lods
cmp
jg
insb
sbb
sub
sub
ret
jecxz
sahf
mov
jg
cld
jo
popf
jge
cmp
test
mov
sbb
movsl
mov
add
sub
xchg
jecxz
push
aas
and
jb
stc
add
aas
add
lret
adcl
xor
or
addr16
pop
mov
addr16
cmp
jmp
sbb
push
out
inc
dec
mov
lods
or
mov
push
fnsave
js,pt
xor
decl
test
divb
pop
and
lds
lock
push
sti
into
push
inc
mov
ficompl
js
les
and
xchg
call
js
add
pushf
nop
pop
sub
push
jl
and
or
xchg
arpl
sbb
hlt
and
outsl
jb
test
aam
xchg
xchg
mov
or
add
pop
xchg
mov
es
push
mov
push
insl
and
cmpsl
mov
out
into
pop
cmpsl
mov
xlat
rorb
mov
mov
xchg
testb
add
lock
stos
lret
adc
add
sub
aas
mov
jmp
scas
sbbb
call
xor
xchg
int3
jbe
dec
xlat
aad
call
scas
insb
ja
xor
push
icebp
es
mov
sub
xor
sub
or
js
add
sub
xchg
pop
outsb
add
push
inc
or
pop
shrl
ss
notb
aaa
push
rol
cli
lret
mov
dec
pop
js
jbe
dec
arpl
inc
mov
mov
ds
pop
jnp
and
js
lcall
mov
xchg
js
add
lret
scas
mov
mov
lds
lods
je
icebp
outsb
inc
ljmp
jl
mov
fnstcw
lock
push
pushf
sbb
pop
xchg
lcall
dec
lea
inc
cli
mov
outsl
jl
js
dec
pop
xchg
sbb
js
xor
sub
movsl
add
iret
push
lcall
je
xor
fs
pop
mov
mov
in
sbbl
cmc
xchg
inc
mov
jo
jbe
sub
pop
cmpsb
stos
jecxz
addr16
mov
pop
and
lahf
inc
jae
clc
icebp
repnz
cmp
mov
push
ret
mov
or
inc
pop
sbb
xchg
pop
inc
cwtl
inc
test
movsl
out
adc
scas
dec
popf
push
imul
mov
sbb
inc
mov
cmp
leave
ljmp
scas
pop
push
inc
outsl
adc
lea
test
pop
pop
push
repnz
test
add
dec
mov
bound
js
sbb
push
repnz
lods
divl
adc
fwait
scas
fs
mov
lods
lret
fisubrl
les
out
adc
pop
mov
sbb
xchg
push
cli
js
pop
aas
adc
jo
je
inc
xor
orb
enter
xor
cmp
test
scas
lea
jne
sub
mov
inc
pop
push
cmp
pop
xchg
sbb
shrl
in
jecxz
inc
scas
or
mov
call
iret
clc
jp
js
popa
aas
add
add
mov
jge
rcl
insb
and
adc
push
lret
jg
fld
push
fcompl
mov
fildl
sbb
or
aad
cmp
pop
lret
xchg
stos
hlt
jne
adc
push
scas
cmp
rorb
sbb
pop
fisubs
loope
inc
loopne
or
cmc
sar
mov
movb
adc
loopne
push
test
push
add
xchg
fistpl
mov
incl
mov
pop
cmp
out
inc
enter
xor
insb
pop
mov
or
xchg
scas
rcrb
jo
or
daa
adc
std
subl
sbb
add
je
xor
xchg
sub
pop
mov
hlt
rclb
lcall
xor
lahf
cmp
xchg
in
pop
jnp
jg
pop
addr16
sbb
fsubrl
cmpsl
stos
ss
sub
jg
enter
sbb
testl
scas
xchg
push
mov
ljmp
jno
pop
in
or
data16
mov
loopne
xchg
dec
adc
push
imul
jb
js
decb
loop
pop
inc
decl
bound
mov
lea
loopne
rcrl
lock
ds
es
xor
push
push
mov
jecxz
add
sub
sub
pusha
scas
and
mov
xchg
inc
xor
lds
add
cmpsb
je
mov
and
xchg
add
add
pop
xlat
dec
push
or
fisttpl
mov
mov
aad
push
adc
and
ds
sbb
xor
shl
xor
and
das
loop
sahf
nop
xchg
pop
in
pop
jbe
addr16
sub
sti
movsb
ret
sbb
fwait
jno
mov
xor
jnp
push
in
icebp
xchg
mov
pusha
and
jle
xchg
fsubl
adc
arpl
jne
cmp
xor
add
push
test
movsb
xor
mov
in
cmp
sbb
cmp
jmp
fbld
add
mov
or
jmp
push
call
out
or
xchg
rol
jne
popf
sti
lret
jb
lock
dec
fisubrs
getsec
in
xor
jp
mov
push
addl
pop
cmp
mov
inc
emms
nop
aaa
shrl
pop
mov
jmp
cmpl
xor
sub
pop
dec
mov
push
iret
push
xor
sbbb
add
loopne
repnz
sbb
aaa
cmp
lds
push
pop
add
jmp
popa
int
xlat
andb
mov
or
add
loope
sub
jbe
imul
jge
mov
ja
rclb
xor
mov
cwtl
std
out
cmp
mov
mov
adc
mov
dec
sbbb
imul
mov
mov
and
js
and
inc
pop
lret
enter
xchg
pop
loope
addr16
pop
out
push
incl
lds
pop
dec
mov
push
jg
pop
xchg
loopne
stos
sbb
fdivp
cld
cmp
or
arpl
pusha
popa
sbb
iret
and
imul
shrb
inc
rcll
and
push
lods
pop
sub
dec
jne
lahf
sub
inc
sub
std
jne
hlt
sbb
test
dec
xchg
mov
sbb
sbb
daa
mov
pop
inc
sub
mov
outsb
and
xchg
jle
mov
dec
in
sarl
push
pushf
cld
ljmp
adc
push
movsl
test
dec
movsl
pop
punpcklwd
bound
inc
ret
aad
xlat
sbb
mov
into
loop
xchg
negl
sbb
sarb
xor
sbb
lret
push
outsb
into
iret
or
sarb
sbb
fs
roll
xor
decl
imul
mov
out
add
add
fiaddl
stc
mov
mov
xchg
leave
xor
jmp
enter
mov
pop
in
enter
scas
js
mov
out
xchg
cmp
enter
test
mov
jge
popl
pop
es
mov
stos
les
xor
ss
cmp
or
adc
orl
inc
movsb
in
adc
loope
idiv
sbb
mov
std
mov
in
arpl
push
cmp
icebp
out
rcr
test
mov
sbb
push
lock
cmpps
out
test
add
sub
loope
pusha
sbb
inc
dec
inc
in
loopne
jle
mov
aad
xor
loop
incl
push
shl
mov
aad
add
mov
repz
jb
jo
stos
mov
adc
call
push
sbb
int
movb
mov
dec
dec
sbb
push
stos
mov
dec
sub
or
stos
mov
inc
and
cmp
shlb
jg
fwait
ja
inc
loope
aad
hlt
imul
mov
aaa
add
xor
mov
mov
push
fs
pushf
insl
int
outsl
arpl
je
test
adcb
repnz
pop
jle
dec
mov
lods
and
test
or
fnsetpm(287
pop
es
orl
jae
decl
cmp
mov
call
mov
push
ja
xchg
imul
or
cmpsb
loop
cmp
outsl
sbbb
movsl
sti
adc
fdivl
inc
push
xor
jecxz
sarl
paddw
pop
adc
mov
jle
cmp
stos
xor
and
mov
andl
xchg
or
sbb
push
test
or
inc
adc
mov
addb
adc
and
sbb
pop
push
aad
ja
js
aaa
scas
faddp
les
lock
lahf
cmc
mov
stos
in
fsubs
pop
fwait
cmc
xor
push
ja
push
outsb
or
xchg
jp
arpl
je
mov
aam
and
mov
popf
add
jnp
push
arpl
mov
mov
mov
daa
js
mov
sbb
pop
ljmp
call
xchg
js
push
mov
mov
shll
cmp
sbb
in
subl
xor
xor
lods
les
and
xor
dec
pop
popf
and
cmc
repz
or
adc
js
or
imul
push
adc
insl
aad
gs
xchg
pushf
loopne
sti
add
push
cmc
cmpsl
je
jmp
fsubr
lahf
dec
cmp
push
inc
and
xchg
sbb
sub
add
pop
pushl
mov
inc
pop
fisttpll
sbb
popl
mov
mov
loope
or
inc
ror
dec
pop
cli
out
cmpsb
leave
inc
lahf
jnp
add
and
jns
xor
in
ret
outsb
jle
dec
push
andl
mov
scas
lds
and
stos
hlt
loop
mov
lret
mov
xchg
out
pushf
imul
sub
mov
movsl
jns
les
insb
loop
data16
dec
loope
jnp
xor
aad
xchg
shrb
lcall
movswl
jne
scas
sub
ss
pop
je
mov
ucomiss
sbb
icebp
xchg
mov
pop
sub
dec
mov
push
cmp
test
lea
add
sbbb
fmuls
mov
js
mov
aad
pop
push
cmp
jl
mov
adc
push
mov
cmp
enter
rolb
adc
sahf
inc
jns
loopne
in
aas
or
jo
xor
int
sub
rclb
adc
sbb
mov
repnz
push
int
jbe
icebp
cmp
adc
and
xchg
pop
stos
sbb
outsb
call
adc
jne
cmp
and
jnp
sar
pop
and
sub
xor
outsb
es
addr16
xor
js
mov
add
fisubs
bound
stos
adc
mov
mov
mov
arpl
mov
add
sub
sti
push
adc
repz
cmp
cwtl
cmpsb
cmp
cs
test
int
xor
scas
mov
movsb
pop
lds
sbb
nop
imul
std
jmp
xor
mov
cmp
in
movsb
cmpsl
or
lods
mov
call
push
cmp
je
or
sub
adc
test
xchg
adc
mov
lret
arpl
popl
jmp
js
inc
pushf
dec
mov
test
pop
clc
sub
inc
jae
mov
adc
xchg
shll
jnp
sbb
push
enter
js
imul
or
jo
sti
outsb
adc
pop
dec
pop
jo
aas
mov
xor
adc
mov
in
enter
out
xchg
mov
jmp
call
insl
loopne
mov
jmp
popa
roll
test
xchg
pop
shr
push
dec
xchg
jp
pop
js
mov
std
add
ret
mov
int3
xor
mov
call
jno
jge
std
mov
push
add
in
ds
pushl
inc
clc
or
lds
insl
sbb
add
pop
mov
or
or
loop
insl
mov
cltd
push
add
pop
loopne
mov
or
sbb
dec
jle
call
jbe
sahf
aam
sub
test
inc
pop
in
movsl
mov
loope
in
dec
sub
xchg
mov
sub
dec
hlt
or
js
sbb
int
lock
adc
inc
push
or
lcall
in
xor
dec
js
fldl
loop
push
lock
pshufw
dec
sub
jg
adc
xor
in
xlat
lcall
dec
jp
lds
pop
test
lcall
and
nop
stc
jecxz
or
decl
into
sbb
mov
and
mov
out
mov
add
and
inc
test
stos
adc
push
sub
jns
sar
call
or
jg
xlat
icebp
lds
sub
nop
pop
and
sbb
sbb
loopne
add
clc
fdivr
or
clc
fdivrl
jne
int
or
lahf
lea
mov
das
lahf
mov
pusha
mov
lahf
cmp
xlat
shl
mov
mov
je
pop
mov
std
ljmp
adc
test
into
push
into
es
popl
rcrb
mov
fists
jle
in
adc
icebp
push
fldt
aas
push
add
xor
sub
cmp
je
test
pusha
mov
mov
bound
in
sub
jno
or
scas
pop
sub
lock
mov
cmp
sbb
add
pop
xchg
sarb
xor
clc
add
ret
subl
xchg
dec
out
mov
in
les
push
negl
dec
inc
fmuls
jl
loope
ja
jb
dec
pop
rsqrtps
cmpsl
cltd
cli
adc
gs
js
and
xchg
js
imul
jge
dec
add
cli
cli
sub
jne
xchg
fldt
mov
sbb
sahf
push
mov
adc
lret
imul
pop
cli
pop
push
cmp
test
dec
pop
lret
jmp
ds
les
cmp
cmp
jae
add
mov
xor
lods
rcll
push
adc
into
and
ljmp
dec
and
or
jl
lret
xchg
dec
sti
adc
shlb
into
inc
adc
xor
inc
das
hlt
cli
ds
pop
int3
shll
sub
sub
lcall
jo
andl
imul
mov
ret
xor
sbb
outsb
addr16
jmp
es
scas
jge
xchg
dec
xchg
mov
cltd
stos
cmc
push
jnp
das
mov
aaa
test
adc
dec
js
aam
dec
cmp
mov
add
mov
mov
pop
pop
sub
clc
push
cmp
ljmp
mov
ja
mov
andl
sub
loopne
into
jl
sbb
test
mov
push
xchg
je
jb
jle
sahf
dec
popa
or
mov
xchg
mov
xor
clc
and
mov
inc
xchg
dec
lea
shrb
adc
sbb
int3
lcall
mov
mov
cli
mov
inc
sti
sahf
add
jle
addl
push
pop
test
mov
pop
out
inc
les
pop
xsaves
data16
adc
mov
sbb
aam
mov
dec
jne
mov
les
fisubrl
mov
push
inc
ret
and
insl
cs
in
or
ret
add
jmp
test
int3
xchg
pop
lock
shlb
adc
rolb
jecxz
lods
mov
adc
xchg
or
icebp
fs
add
popa
cmpsl
mov
dec
ds
jno
mov
push
test
fwait
mov
mov
dec
mov
inc
pop
jnp
rclb
sahf
sbb
jmp
insl
orl
push
or
cmp
adc
inc
and
sahf
xor
addl
lock
mov
psrlw
and
clc
sub
loope
push
popa
add
cltd
stos
mov
call
aaa
in
adcb
pop
dec
sbb
mov
es
mov
inc
clc
adc
mov
jge
iret
repz
jmp
or
add
mov
sbb
adc
cwtl
arpl
adc
mov
ds
popa
addb
popf
push
and
add
lret
sub
clc
aam
leave
fsubrl
cmpsl
adc
rcr
mov
sar
inc
sub
or
add
pop
push
cmp
jl
dec
ss
ret
int
sub
or
cmp
or
dec
test
jge
je
loopne
lea
clc
ret
xchg
add
es
sti
inc
aam
sub
cmp
adc
xchg
sbb
hlt
sub
ja
test
jg
mov
hlt
mov
movsb
call
aas
ss
jnp
pusha
out
mov
mov
scas
or
inc
es
andl
cld
rclb
cld
shrl
mov
add
mov
loope
or
xor
sbbl
cs
movsb
mov
fbld
clc
cwtl
cwtl
dec
sbb
xchg
mov
ret
cltd
loope
out
pop
jle
mov
add
hlt
mov
cli
inc
mov
lcall
enter
test
jb
and
inc
repz
jae
sti
rolb
js
mov
mov
push
pop
inc
dec
cmp
mov
out
dec
or
int3
dec
in
pop
je
mov
jge
loop
push
fs
push
sbb
lret
sub
jbe
mov
jns
lock
adc
xorb
or
loope
loopne
sbb
repz
bound
inc
cwtl
mov
jae
test
stos
aaa
add
dec
xor
and
push
jp
pop
sbb
inc
jmp
pop
add
fnsave
cmp
loop
and
cmp
repnz
sbb
mov
bound
cmp
mov
out
pop
inc
xchg
orl
int3
lds
icebp
iret
xor
sbb
fdivl
lea
ret
fstpt
popl
les
mov
cmp
cmp
dec
test
punpckhbw
rorl
adc
stc
outsl
sub
aaa
in
scas
add
sti
sub
mov
cld
test
mov
jo
test
mov
or
jle
test
add
dec
les
adcb
lods
inc
adc
mov
sub
scas
pop
push
pop
cld
das
xlat
gs
and
loope
aas
or
dec
add
cmpsb
mov
loop
mov
call
jmp
jecxz
stc
adc
int
push
push
arpl
adc
repz
pop
in
int3
mov
or
dec
int
arpl
inc
push
bound
xchg
js
cli
test
mov
nop
ret
pop
test
in
je
mov
js
mov
pusha
roll
out
push
sub
ss
sbb
adcl
xor
cmp
paddb
movsl
sub
cwtl
and
ss
idivb
pop
loope
add
out
or
mov
lock
enter
push
mov
addr16
scas
mov
test
orb
jg
xchg
out
jbe
imul
mov
mov
jne
jecxz
xor
pushl
dec
adc
enter
jl
push
add
cs
mov
icebp
outsb
clc
lods
cli
mov
jg
sbb
aam
test
aas
sbb
out
mull
mov
push
adc
fcmovne
in
mov
dec
or
rolb
jmp
rorl
pushf
add
in
xchg
xchg
adc
loopne
push
in
addr16
pusha
popa
mov
nop
adc
xchg
dec
mov
rcrb
xlat
out
pusha
stos
ds
jl
and
and
decl
ret
jp
push
sub
loopne
mov
repnz
and
rolb
sti
or
push
test
aad
jno
and
cmc
lods
mov
pop
iret
or
inc
popa
in
loop
in
xlat
cmpsl
jmp
cmpsb
je
sub
test
pusha
jno
adc
xchg
cltd
cmp
icebp
aas
ljmp
imul
cwtl
xor
pop
shrb
jns
into
fwait
mov
rcr
xchg
shlb
je
loop
sarl
mov
stos
lcall
fstl
dec
mov
test
adc
scas
push
jmp
or
lcall
int3
jge
cli
mov
xor
imul
mov
in
mov
cmp
scas
or
sub
jle
out
or
pusha
shr
sbbb
add
add
inc
xchg
dec
int
mov
mov
inc
add
push
xchg
ljmp
mov
adc
mov
in
lock
inc
mov
push
frstor
insl
push
xchg
and
je
sbb
pop
lea
xchg
lods
jnp
pop
sub
cld
sahf
inc
or
mov
test
not
xchg
dec
leave
imul
aad
shlb
inc
inc
js
cmpsb
mov
adc
data16
add
test
andl
mov
fs
xchg
mov
push
loopne
push
imul
add
mov
shll
popa
and
pushf
push
push
and
jle
mov
or
sub
call
mov
add
pop
add
shr
ret
hlt
data16
cmp
orl
lock
or
adc
push
movsl
enter
mov
je
jo
cmpsl
jg
push
lods
adc
mov
lock
xchg
call
lret
mov
rolb
enter
fldt
ss
int3
mov
js,pn
add
cmp
adc
adc
pop
js
xlat
pop
ds
pop
mov
call
adc
sub
and
inc
cmp
js
mov
mov
jo
mov
orb
sbb
lret
push
mov
jg
push
dec
shr
sbb
fdivs
inc
je
pop
pop
stos
inc
adcl
aam
jns
mov
mov
inc
jns
out
dec
adc
add
arpl
mov
push
ljmp
sub
ds
scas
fwait
nop
add
push
mov
jl
stos
jne
es
popf
fwait
mov
sub
outsl
rcll
xchg
sarl
add
rclb
inc
aaa
pop
xor
pop
in
push
push
popa
ret
clc
in
push
popa
fldt
mov
roll
jge
movsl
aad
xor
mov
call
call
mov
jbe
sbb
or
mov
cld
jge
roll
fsubs
mov
jo
dec
mov
xchg
mov
sub
push
lea
push
fidivs
xchg
push
or
push
cmp
xor
sbb
or
mov
add
shrb
sbb
insb
pop
xor
les
mov
mov
int
mul
cwtl
in
enter
mov
jg
dec
movsb
je
mov
into
aam
loopne
pushl
ja
stos
xor
gs
sub
ljmp
or
je
or
loope
pop
and
loop
imul
push
dec
push
cld
addb
jb
movl
incl
test
and
push
mov
ljmp
and
nop
enter
ret
push
xchg
and
xor
dec
dec
push
dec
loope
repnz
push
cwtl
mov
cmpb
push
insl
inc
lds
pop
fsub
cmp
xor
add
rorb
xchg
fdivrp
adcb
push
adc
xor
lahf
cwtl
ljmp
push
clc
subl
push
mov
adc
icebp
mov
addb
jl
pushf
xchg
cmpsl
pop
leave
sub
pop
pop
mov
sbb
fistl
mov
push
xchg
push
lock
cmpxchg
add
pop
aam
outsl
mov
jmp
sar
arpl
aas
mov
xor
test
or
cltd
mov
icebp
mov
xor
cmpsl
bound
pop
inc
push
daa
mov
xchg
incb
aas
pop
outsb
lea
adc
fwait
xchg
lea
sbb
les
call
insl
inc
adc
ds
jecxz
in
aam
jge
inc
in
scas
movsb
aas
xor
sub
add
cmp
out
xor
xchg
pop
jl
pop
std
lcall
mov
add
jns
or
stos
in
testb
mov
cli
fs
mov
cli
cltd
push
inc
sub
or
xchg
cmp
pop
sbb
daa
addl
popa
cmc
sbb
js
push
lock
xchg
sbb
sub
ds
sbb
mov
mov
sbb
rcrl
mov
scas
sahf
add
or
dec
mov
or
cli
mov
pusha
mov
push
mov
xchg
popf
push
sub
stos
ss
pop
mov
adc
repz
cmp
pop
int3
cli
inc
push
pop
mov
stos
in
in
loope
mov
clc
xchg
inc
jne
xchg
sbb
mov
pop
aam
test
add
rcll
out
testb
in
sbb
data16
shrb
cld
and
rclb
xchg
inc
shll
xor
lret
loope
or
mov
xchg
and
lock
add
sub
inc
xlat
sbb
dec
xchg
lods
in
fwait
dec
mov
cmc
enter
push
enter
inc
jl
sbb
fldl
push
adc
mov
fmul
pop
ljmp
bound
push
aam
sub
push
shlb
ret
jle
mov
push
mov
loope
fsubrs
xchg
inc
adc
adc
push
fisubs
lret
mov
lea
and
lahf
ret
rcl
mov
mov
sahf
add
push
ss
call
outsb
ljmp
mov
scas
sar
call
jno
ljmp
mov
loop
pop
fwait
mov
mov
mov
xlat
fstl
shr
jge
mov
loopne
and
popa
sbb
add
ret
lret
pop
mov
lock
mov
push
adc
fcoml
cli
cmpsb
in
xor
int3
ror
icebp
add
pop
add
imul
cmp
jge
rolb
jno
and
dec
cmpsl
xchg
jbe
sub
inc
add
add
rorb
daa
loope
cmp
dec
icebp
cmp
jno
into
add
jge
fdivl
push
fsubl
rclb
rcl
out
sbbl
icebp
scas
enter
jb
add
or
inc
push
or
cmp
cmpsb
adc
shlb
mov
or
test
adc
add
cmpsl
incb
in
push
js
test
icebp
cmp
pop
cmpsl
adc
mov
sbb
inc
xchg
aad
xor
jge
popl
je
mov
sbbb
hlt
push
cmc
push
push
push
adc
ds
push
int3
cwtl
icebp
mov
pop
cmp
jbe
fistpll
das
cmc
shrl
shlb
mov
or
mov
lods
jne
mov
pushf
or
ffree
push
jecxz
clc
pop
mov
cs
ljmp
jmp
xchg
xchg
jp
movsb
sbb
adc
dec
pop
insb
lods
enter
ljmp
orl
jno
cmp
ljmp
enter
adc
ja
push
sbb
adc
mov
aad
or
inc
push
ror
push
fimull
pop
xchg
adc
cmc
addl
adc
push
je
mov
xchg
add
loope
dec
mov
fucomp
cmp
jge
push
or
stos
dec
lods
in
mov
bound
add
cwtl
cwtl
pop
adc
xor
ljmp
sarb
dec
jmp
inc
test
bound
and
jo
cmp
pushl
popf
popa
sbb
xor
cmp
roll
push
pop
inc
inc
jl
or
or
sbb
out
stos
pushf
rorl
popa
lods
bound
jo
add
sbb
decl
icebp
add
mov
push
inc
loope
imul
testb
ret
test
cmpsl
xor
mov
stos
es
mov
sub
lea
jb
inc
cltd
fisttpll
or
xor
xchg
popa
inc
andb
add
xchg
cmp
mov
jl
xor
into
push
add
mov
movsb
or
xor
jmp
daa
jp
call
mov
and
and
inc
clc
jmp
jae
mov
adc
loope
inc
test
jp
or
clc
mul
aaa
jle
lock
push
cld
jl
fadds
imul
in
xor
lock
pop
std
push
ljmp
xor
mov
insl
inc
inc
sar
daa
xchg
fdivrl
push
loopne
add
mov
aaa
xchg
xchg
pop
push
cld
cmpb
xchg
sub
mov
adc
or
dec
fdivrs
stc
pop
jne
push
out
lret
mov
hlt
mov
idivb
mov
inc
mov
test
sub
inc
jl
out
cli
and
das
or
or
mov
pushf
or
or
xor
xchg
lcallw
call
dec
jl
pop
push
fcmovne
sbb
popa
xor
sub
pop
mov
add
adc
rcl
cmp
jecxz
inc
mov
xchg
jg
cli
xchg
js
jo
mov
add
xchg
icebp
shll
mov
xorb
cmp
in
and
and
scas
movq
cmp
movsl
cmp
ret
jo
les
out
sahf
ss
jns
add
repz
inc
addr16
jg
sbb
mov
sbb
fisttpl
nop
ds
xchg
movsb
mov
insl
clc
inc
xor
fs
push
mov
loope
inc
lods
push
and
sbb
js
test
jnp
mov
mov
xchg
cmpsl
push
cmp
jno
mov
xor
mov
mov
pusha
or
pop
sarb
xchg
or
xor
sbb
or
jp
adc
xor
out
mov
cmp
lahf
int
add
loopne
test
cltd
es
out
out
mov
xor
subl
jmp
icebp
or
shlb
mov
push
stos
call
out
jmp
dec
js
mov
cmpsb
and
stos
xchg
mov
cmp
xor
xchg
test
outsl
cmp
test
push
pop
sub
call
push
and
xchg
out
into
loopne
lret
fldl
jle
push
xchg
addl
sbb
fcompl
dec
dec
cs
int
and
cmp
sub
sub
mov
leave
cmp
push
pop
mov
push
cs
add
sbb
jle
push
gs
cmp
rcr
and
inc
adc
daa
outsb
hlt
pop
pop
add
ret
adc
inc
sbb
mov
loop
pop
inc
pop
popf
in
repz
push
inc
in
clc
xchg
sub
sahf
mov
push
jg
inc
bound
jb
scas
and
mov
loop
xchg
test
mov
enter
sbb
xchg
idivl
ret
add
lock
movsl
cmc
in
clc
pop
sbb
xor
in
mov
lcall
pop
pop
sub
push
pop
push
lock
xor
mov
arpl
jno
nop
cli
mov
dec
or
sbb
push
outsb
inc
and
push
and
mov
sbb
mov
cwtl
mov
out
daa
dec
mov
dec
jmp
and
stos
sub
ljmp
sbb
daa
add
das
stc
imul
arpl
add
sbb
and
int3
pop
mov
add
push
push
bound
add
adc
add
pop
lods
out
gs
js
fisttps
lret
js
lods
mov
cmp
scas
cltd
fsubrl
sub
adc
dec
mov
not
mov
fidivrs
inc
rol
push
mov
pop
pop
sub
scas
inc
or
loope
loopne
repz
ret
ret
inc
push
and
enter
lahf
sbb
cmp
adc
je
int
inc
jg
imul
lds
sbb
orl
fists
jb
adc
cmp
scas
mov
inc
faddl
xchg
out
fidivl
js
out
clc
mov
pop
call
dec
ja
ror
mov
jle
gs
loop
mov
movsl
sahf
sbb
mov
pop
test
jo
cli
pop
testl
lcall
fiaddl
adc
mov
loop
sub
sbb
sbb
movsb
xchg
and
mov
imul
adc
sub
fs
push
sub
push
pop
adc
mov
jp
pop
dec
xlat
cld
ds
stos
cmc
sub
push
pop
jns
data16
ljmp
loop
ret
inc
cs
in
jnp
or
lock
push
adc
jg
test
insl
cwtl
push
pop
jle
and
add
mov
jo
jg
pop
icebp
mov
xor
xchg
cmp
pushf
js
pop
ret
in
mov
mov
mov
rcll
fwait
repz
mov
add
test
imul
les
dec
mov
scas
pusha
loopne
cmp
aas
in
cmp
lock
jle
mov
cmp
or
push
sub
int
mov
stc
mov
pop
sbb
push
into
and
push
lock
lcall
mov
cmp
cmp
les
sub
mov
lds
outsl
xchg
xor
pop
sub
pop
fisubrl
push
in
popa
sbb
es
xchg
inc
mov
lock
das
iret
pop
aaa
lahf
lret
adc
inc
test
fidivrs
mov
push
pop
xor
test
leave
lds
pop
sbb
pop
lods
cwtl
out
xor
mul
outsl
call
cmpsl
lcall
daa
out
pop
sbb
sub
xor
jmp
cs
bound
pop
push
icebp
jb
stos
call
in
es
adc
mov
outsb
std
xor
sti
int3
push
in
mov
inc
xchg
mov
or
or
imull
cwtl
gs
cmp
cli
mov
sub
int
mov
jg
adc
lcall
jle
cld
push
leave
ret
in
add
xor
dec
pop
ret
sub
and
outsb
jne
je
mov
je
push
xlat
xor
or
mov
subl
mov
pop
ljmp
jmp
sbb
pop
push
xchg
sahf
ss
clc
ljmp
out
dec
push
push
fbld
pushf
dec
jns
imul
cmp
int
jle
ljmp
push
adc
inc
in
xor
jl
mov
adc
jmp
pusha
push
fistl
xchg
das
ds
fisubl
pop
test
mov
loopne
push
jge
rcl
dec
xor
pop
stos
mov
rorl
and
test
inc
jl
es
and
mov
sbb
cmp
add
mov
add
in
and
dec
cmp
das
cmp
mov
xchg
fstl
dec
insl
ljmp
aam
mov
xchg
nop
out
imul
add
andl
sbb
add
dec
jb
insl
hlt
mov
cmp
jle
pop
dec
add
int3
cmpsb
or
mov
adc
adc
scas
andl
jbe
aam
dec
loopne
mov
scas
dec
mov
loopne
insb
mov
out
movsl
int3
adcl
stos
fimull
std
jge
out
sbb
lock
xor
mov
cmp
jmp
dec
sub
lods
sahf
cmpl
inc
jl
lahf
cmp
addl
ds
jle
mov
cld
cmpsb
sbb
cwtl
in
movl
outsl
pop
add
sbb
mov
je
push
inc
sarb
sub
cmp
pop
jmp
adc
iret
xor
cmpsl
sbb
pop
js
dec
xchg
sub
and
lds
jp
stos
nop
pop
rcr
mov
and
sub
fidivs
or
add
push
mov
xchg
mov
cli
rcrb
sahf
add
popf
cmp
mov
sbb
das
ja
dec
pushf
testb
and
adc
je
mov
aad
xchg
scas
add
inc
test
push
sahf
jge
pop
cmp
mov
inc
dec
add
mov
jl
push
aam
rcrb
add
inc
dec
cwtl
std
lock
mov
bound
adc
jl
push
pop
sub
std
shl
push
insb
jmp
xor
stos
sub
nop
cmp
mov
mov
mov
xchg
ret
pop
daa
lock
push
jne
mov
fnsave
mov
sbb
add
loopne
jbe
sub
lret
xchg
ret
mov
inc
cs
cmpsl
pop
adc
lods
sub
nop
sahf
cs
in
clc
scas
jl
aaa
cmp
pushf
mov
xchg
pusha
enter
pop
fstl
jo
sub
decl
pushf
sahf
icebp
or
inc
cli
mov
mov
stos
lahf
push
loopne
xor
xor
shrl
lock
jle
aam
jnp
fdivrl
sbb
mov
incl
pop
stos
pop
and
adc
add
push
mov
loope
sub
cmpsb
inc
movsl
inc
ss
out
xor
arpl
pop
adc
sub
jmp
mov
in
shlb
pop
mov
or
mov
flds
sbb
ss
xchg
ljmp
dec
adc
mov
mov
aas
ss
adc
push
clc
cld
movsl
push
lods
in
inc
sub
call
mov
rolb
pop
add
push
int3
rcr
loope
dec
add
aam
fimull
vpshufhw
filds
mov
mov
scas
sub
or
mov
adcb
pop
sub
xchg
mov
lock
lahf
loope
jle
push
nop
pusha
jo
mov
mov
dec
enter
mov
lods
or
pop
xchg
xorl
rorb
mov
out
adc
push
pushl
dec
or
push
cld
cld
insl
adc
push
scas
std
into
inc
dec
clc
push
adcb
call
cwtl
inc
in
mov
lahf
sbb
inc
sub
in
int
push
mov
popa
movsb
lret
mov
pop
mov
push
int
xor
lods
bound
loopne
mov
cmovb
pop
mov
lock
fs
or
push
out
mov
rcll
pop
mov
movsl
pop
or
ljmp
addl
push
add
in
jo
clc
inc
dec
repnz
pusha
cmp
addr16
dec
scas
pop
mov
in
les
loope
add
add
movsb
loopne
sarl
idiv
mov
test
mov
adc
lcall
mov
inc
aam
jb
sahf
in
insl
jbe
mov
jnp
pop
in
imul
sub
cmc
and
test
jne
nop
sbb
inc
out
xor
adc
push
fs
pusha
jge,pt
jno
movsb
nop
mov
pop
jo
or
dec
xor
push
loop
rcrl
xor
xor
out
movsl
scas
scas
cmp
inc
cs
rorl
std
ret
mov
ja
insl
ljmp
sbb
push
xlat
mov
mov
ljmp
inc
push
xor
jl
cli
dec
rcrb
cltd
lcall
xchg
pop
jge
dec
es
shrb
decl
add
int
cmp
mov
enter
pop
or
push
aam
je
pmulhuw
in
negb
lea
add
add
sub
loop
hlt
stos
cmc
sub
rorb
insb
data16
aas
roll
insl
out
jo
adc
dec
dec
sahf
fcmovbe
test
push
icebp
mov
xlat
lcall
inc
or
mov
pop
sub
fbstp
mov
or
cmp
or
or
rorb
dec
xchg
xor
adc
pop
add
cmp
cmpsb
mov
cmc
test
sub
mov
push
cwtl
lods
add
scas
clc
imull
dec
xor
and
addl
cld
lret
hlt
cmpsb
outsb
xchg
loop
repz
outsb
mov
ss
sti
std
cmp
popl
push
adc
xchg
and
xchg
loopne
popa
mov
int
xor
hlt
push
pusha
sti
add
jne
shlb
add
addb
mov
inc
sub
roll
mov
xor
cmpb
mov
push
sbb
es
mov
xor
hlt
movsb
sbb
ljmp
sbb
subb
rorb
mov
je
dec
shrb
loop
sahf
out
sarb
repz
or
dec
mov
int
mov
mov
testl
sbb
sbb
pushf
mov
add
sbb
je
fstpl
call
mov
aam
mov
push
adc
lret
aaa
and
or
pop
adc
dec
rcl
rcr
movsl
sbb
push
cmp
xor
jle
outsl
out
fisubl
int3
cwtl
dec
les
mov
icebp
mov
loop
mov
jb
rorl
lret
inc
cs
call
sbbb
jg
and
jge
aas
mov
cld
and
lock
xor
add
hlt
inc
xchg
or
roll
push
bound
mov
in
cmpsb
mov
jle
cmp
loopne
xchg
jbe
add
lea
pushf
jmp
dec
add
push
sub
es
fdivl
pop
popa
data16
jmp
push
inc
jle
cmc
incl
adc
ja
inc
or
movsb
dec
push
pop
ja
pop
mov
dec
in
sbb
rclb
mov
andb
stos
pop
or
dec
add
shll
add
fdivs
adc
xor
mov
das
data16
inc
and
push
sub
adc
idivl
dec
cmpsb
imul
lods
aas
mov
and
sahf
adc
push
shrb
push
sub
lods
add
jmp
loopne
sub
xchg
fs
add
movsb
or
test
in
mov
jo
cld
xchg
xor
cmp
push
jl
lret
not
arpl
adc
mov
fildll
inc
imul
jbe
les
loopne
arpl
adcb
push
push
add
xchg
jno
bound
fsubrs
mov
mov
stc
jle
loop
sbb
jle
pop
cmp
lret
inc
leave
rclb
inc
and
push
jecxz
cwtl
inc
ret
jbe
pop
jg
push
in
out
push
and
int3
add
test
push
rol
mov
sbb
or
mov
and
popa
cli
scas
aaa
lock
ret
cmovg
iret
inc
jo
jg
daa
out
imul
add
mov
out
in
cs
mov
xchg
pop
jg
jno
dec
lahf
aaa
es
addr16
xor
das
adc
cwtl
mov
push
ss
fisttpl
jmp
mov
jmp
or
lods
pushl
scas
xorl
push
stos
push
mov
outsb
cmp
or
inc
or
push
icebp
andb
arpl
fiadds
loopne
xchg
insb
clc
inc
cmp
pop
mov
dec
insl
sbb
or
jg
xchg
cmpsb
mov
jb
push
lret
and
push
jle
jno
jg
iret
repnz
push
add
mov
bound
push
not
ljmp
insb
xor
cli
ljmp
loopne
push
lds
iret
mov
sbb
xchg
add
or
je
cli
mov
cmpsb
aam
jae
pop
push
out
lret
dec
pop
push
rorb
sub
xchg
xchg
sub
incl
addr16
outsl
int3
popa
icebp
test
into
es
inc
imul
mov
test
pop
mov
js
or
cwtl
cmpb
out
mov
movsb
cli
or
cmp
xchg
sub
add
js
jmp
fists
loope
dec
push
inc
stos
pop
add
sbbl
jl
test
and
lods
sarb
movsl
test
clc
out
fmull
stos
mov
loop
cmp
lods
loop
push
adc
andl
sbb
arpl
sub
sub
bound
mov
xor
loop
out
in
in
incl
mov
stos
or
and
mov
bound
outsl
aad
pushl
pop
mov
xchg
jbe
fdiv
fucomi
pop
out
sbb
xor
add
imul
jbe
loope
sbb
hlt
pop
push
add
dec
jl
loop
call
test
xor
pavgw
aad
addl
lock
mov
arpl
push
add
mov
and
dec
adc
data16
jmp
insb
xor
push
cs
or
jbe
mov
stos
mov
push
sub
mov
fimull
sbb
sti
cwtl
adc
mov
dec
mov
jnp
movsl
pop
mov
test
test
cmp
loope
ljmp
nop
pushf
imul
jg
incb
push
dec
lock
mov
push
cmp
add
xchg
pop
cmp
hlt
movsb
xchg
adc
mov
pusha
leavew
sub
mov
call
xchg
ljmp
xchg
shlb
hlt
insl
push
into
fchs
adc
lcall
mov
push
mov
or
popa
mov
mov
push
loopne
dec
pop
push
sbb
ret
push
cmp
and
testb
or
repz
pop
mov
sub
addb
or
add
jle
mov
dec
mov
out
aad
jmp
xchg
les
mov
pushf
mov
cwtl
or
xor
or
xchg
inc
icebp
jp
pop
adc
xchg
and
cmove
xchg
xadd
push
rcr
and
jle
mov
add
pusha
mov
dec
popf
push
mov
push
lock
adc
lods
mov
or
push
add
std
xchg
test
mov
sbb
jp
fidivl
push
sub
pop
icebp
cld
stc
lods
inc
rorl
pop
in
add
decl
js
cmc
lret
jle
xor
jo
rol
fadd
in
mov
jl
sbb
mov
hlt
je
arpl
lock
in
mov
and
lahf
sub
mov
icebp
in
xchg
lcall
dec
jp
clc
mov
push
int
dec
mov
pop
xor
out
insl
jo
fs
in
shll
lret
lds
xchg
sub
in
xorl
pop
dec
push
jmp
sbb
movsb
xchg
hlt
inc
pusha
lret
sbb
enter
aas
push
mov
fidivrs
xchg
xchg
or
pop
insb
cmp
mov
mov
pop
push
dec
mov
test
idivb
push
fiadds
push
push
leave
out
mov
add
xor
jg
loopne
shll
ds
and
xchg
push
cli
aaa
xor
fcoms
les
jne
in
cmp
adc
ljmp
rcr
jbe
inc
pop
insb
xchg
fs
pop
roll
xor
sti
xor
pop
lahf
cmpsl
clc
sub
add
jle
pop
jo
pop
testb
pop
lods
hlt
push
ja
jo
out
xchg
lds
adc
rolb
inc
out
cmp
or
imul
lods
sti
xchg
es
loop
stos
cmp
xor
xor
or
mov
out
xor
hlt
mov
test
cld
cmp
fs
lock
mov
out
sub
push
or
icebp
les
loopne,pt
sbb
xchg
nop
add
js
mov
lahf
adc
inc
xchg
cmpb
js
das
les
push
mov
add
in
sbb
in
adc
mov
push
sbb
sbb
out
cmp
cmp
jle
pop
jb
inc
or
shl
xor
lock
or
or
inc
xchg
rorl
pop
lret
mov
sbb
js
mov
pushf
daa
pusha
ss
jb
je
data16
xchg
aas
ljmp
sbb
test
jno,pn
jle
mov
pop
dec
dec
call
aas
nop
fcoml
jl
cmpsb
fcmovne
xchg
je
mov
ljmp
out
outsl
mov
shr
xor
jne
push
push
lcall
add
cs
inc
das
jb
call
adc
jbe
add
jecxz
jg
addb
and
add
pop
icebp
jle
test
add
stos
stos
lret
insl
ja
hlt
pop
mov
mov
orb
enter
sbb
and
insb
jl
daa
mov
fwait
inc
and
mov
roll
dec
enter
mov
dec
pop
cld
jnp
mov
test
popa
sarl
mov
and
lcall
movsb
pop
push
pop
fdiv
lret
enter
imul
pop
pop
sub
ss
inc
xor
shrb
sbb
xchg
inc
sarb
add
or
add
insl
ret
push
lock
daa
cs
add
aas
add
int3
jecxz
cltd
sbb
pop
out
dec
clc
xchg
adc
mov
jne
add
xor
lock
mov
push
scas
pop
mov
lcall
inc
xlat
lock
fmul
adc
pop
ret
cld
pusha
mov
mov
push
loope
pop
pushf
fisubs
or
test
out
js
outsl
movsb
pop
xlat
xor
mov
add
sub
stos
xchg
repnz
sbb
mov
inc
inc
repnz
ds
invd
inc
cmp
push
push
rorl
mov
sahf
nop
dec
fwait
xchg
mov
push
xchg
add
jl
fsubrs
mov
lcall
shrb
fidivrs
rdmsr
lds
xchg
push
imulb
rcr
out
adc
hlt
cld
pop
int
rcrl
cmp
xchg
add
pop
ljmp
cmp
ret
loope
cld
jnp
push
adc
xlat
mov
mov
outsb
aaa
in
xor
lret
out
cmp
jbe
mov
repnz
adc
mov
push
in
push
xchg
test
ljmp
sahf
sahf
cmpsb
adc
push
push
std
xchg
lods
lods
movsb
fisubs
in
insl
fsubrs
jge
pop
mov
and
sbb
push
js
movsb
mov
cmp
mov
outsb
mov
mov
addr16
lret
cmp
cmpsb
stc
adc
shll
push
or
pop
insl
xchg
loopne
pop
sub
cmp
xchg
outsl
mov
inc
stos
ss
sub
ja
xor
fmul
pusha
shll
jb
sub
pop
sbb
and
ret
push
fld
clc
add
in
adc
jecxz
daa
insb
sub
jecxz
mov
pop
decl
pop
enter
jno
outsb
shr
inc
xlat
fistl
clc
add
sti
and
xchg
adc
jecxz
push
push
sub
dec
es
xor
cmp
cld
inc
add
movsl
sub
lahf
mov
or
push
cwtl
aam
mov
xchg
mov
mov
outsl
push
xor
vminsd
push
or
cmp
push
jo
leave
movsb
dec
loop
add
lret
pop
push
insb
jmp
adc
gs
dec
add
fmull
lcall
push
jp
scas
xorb
popa
cld
dec
sbb
sub
xchg
movb
movb
andb
insl
inc
sti
dec
push
push
cwtl
add
cmp
mov
sbb
clc
xorb
scas
sub
xchg
pop
adc
sarb
shrb
mov
aad
jge
ss
mov
xor
fisubrl
mov
dec
add
cli
xor
mov
dec
leave
push
iret
push
mov
insb
sub
hlt
insb
jbe
lcall
cmp
or
xchg
dec
xor
bound
fs
faddl
xchg
jecxz
or
int3
xor
mov
add
loopne
mov
or
or
or
or
or
mov
rorb
pop
pop
lods
mov
ja
cmp
and
cmpb
lret
dec
sub
mov
or
inc
dec
popa
repz
mov
dec
faddl
icebp
sub
cmpsl
sbb
adc
add
ljmp
cli
iret
adc
repnz
ret
jp
mov
js
push
add
mov
outsb
mov
addr16
lahf
enter
pop
xlat
fwait
mov
or
jl
fs
call
cmpb
xor
pop
paddusb
sbb
sarb
cmp
out
or
subb
loop
addl
push
ficoml
xor
loopne
insb
insb
push
pop
ds
push
cs
loop
outsl
lcall
sbb
mov
and
mov
mov
bound
cmp
in
dec
jne
xchg
sbb
cmpsb
mov
inc
popa
add
enter
cwtl
sub
sbb
dec
add
xchg
shlb
test
mov
or
scas
insb
xchg
pop
imul
bound
push
aam
mov
push
push
and
xchg
enter
jl
loop
incl
mov
test
lea
adc
mov
fnclex
pop
jne
test
jl
add
push
cmpsl
push
out
js
movl
js
lock
jns
pop
fsubrp
stc
jle,pt
inc
xor
mov
psubb
scas
fimuls
enter
mov
repnz
push
jno
mov
sub
ret
mov
pop
push
push
cmp
inc
sub
int3
pushl
mov
fldcw
pop
mov
cmp
test
inc
addr16
jns
mov
jp
lret
cmp
jmp
nop
mov
inc
sbb
pop
loop
mov
pop
inc
sar
fnsave
cmp
lds
mov
xchg
mov
das
addb
dec
xor
pop
or
in
daa
fldl
movsl
sbb
filds
ret
incl
out
rcl
insb
jo
sbb
jne
aam
outsl
decl
adc
pushf
sahf
arpl
adc
sub
jl
or
fwait
lock
mov
comiss
test
pushf
enter
inc
lods
daa
mov
adc
push
loopne
sbb
or
xor
insb
ficoml
cmpsl
xchg
dec
test
sub
jg
fsubrs
test
fwait
cmc
mov
mov
jae
sbb
jne
fadds
mov
mulb
dec
lods
sbb
sahf
jge
jbe
outsb
fstps
adc
mov
notb
push
outsb
add
outsl
stos
les
xor
sahf
mov
xchg
loopne
mov
mov
imul
add
movsl
fmul
mov
stos
cmp
mov
adc
nop
mov
ret
sbb
jmpw
test
push
pop
clc
movsl
scas
out
in
sbb
mov
sarl
stos
sub
popf
push
aaa
mov
pusha
fmuls
sbb
xchg
lret
mov
pop
aam
mov
jo
dec
out
icebp
sbb
or
push
inc
mov
ret
pop
push
js
insb
xchg
cmp
dec
mov
lock
stos
imul
adc
push
mov
push
les
out
add
aaa
lock
lahf
mov
push
das
mov
push
stos
js
or
pushf
xchg
in
add
add
xchg
push
ds
or
and
push
jmp
and
sahf
mov
mov
loopne
cld
push
mov
dec
add
dec
pushl
popl
std
and
aas
mov
mov
sbb
mov
fdiv
nop
shlb
lock
pop
dec
add
popa
sbb
xlat
scas
xlat
loopne
mov
adc
cld
mov
insb
mov
and
or
push
push
loopne
loope
in
cmp
sub
es
push
mov
adc
or
cmp
hlt
js
adc
sbbl
scas
call
adc
push
and
pop
cmp
jecxz
add
popa
push
loop
daa
lods
cmc
int3
in
push
push
adc
cmp
in
mov
ss
outsl
enter
push
sbb
test
imull
adc
dec
or
enter
or
mov
cmp
push
mov
xchg
loop
inc
shll
cld
mov
es
sub
in
push
mov
push
shrl
notl
or
bound
mov
mov
mov
xor
add
xchg
in
cli
jmp
nop
test
mov
cltd
sub
andb
cmpb
xchg
aam
loop
and
jl
dec
dec
add
out
sub
jo
imul
adc
mov
rcrl
lds
loop
nop
pop
movb
cmp
sub
fsubrl
jg
sahf
xchg
adc
mov
mov
les
loope
xchg
xor
decb
icebp
and
adcb
insb
sub
add
mov
nop
ljmp
scas
insl
fisttpll
xor
mov
inc
push
imul
loopne,pn
rorb
sbb
lea
and
add
sti
dec
inc
shlb
pop
sbbl
sbb
movsb
ffreep
xorl
sbb
push
enter
lods
je
add
xchg
lds
aaa
dec
jl
push
or
xor
pop
hlt
or
ds
insb
adc
mov
xor
fcmovnu
add
push
fwait
mov
fldt
in
je
sbbl
sti
xchg
ja
mov
inc
push
cs
push
mov
mov
lret
mov
mov
cmp
mov
mov
push
imulb
aam
ss
push
or
pop
mov
or
mov
adc
cmpsb
pop
icebp
sbb
dec
mov
inc
xchg
loop
jmp
inc
cld
adc
jns
in
sub
cli
mov
sti
lods
or
add
ja
lods
clc
lods
jmp
lret
sbb
out
mov
pusha
adc
in
ficomps
push
lcallw
sub
nop
and
jge
jl
incl
sub
cmpsl
push
out
jle
test
aas
inc
push
ljmp
addl
lret
dec
sbb
arpl
dec
or
xor
dec
add
dec
loope
cmc
lcall
cmp
ffree
aas
clc
shlb
outsb
xchg
mov
test
rorb
add
ljmp
call
icebp
out
rclb
cmp
inc
addb
idiv
aas
add
sti
sbb
shll
insb
cmp
mov
nop
cld
subb
and
push
pop
mov
inc
divl
out
or
decl
mov
or
pop
and
aad
pop
imul
loop
das
jmp
pop
cmp
jno
push
xor
in
ret
cmp
lret
jp
pop
cltd
decl
rorb
sbb
andl
push
mov
fsubr
push
pop
jo
cmpb
jmp
push
push
push
adc
inc
sbb
repz
mov
shrb
mov
pusha
push
mov
test
ret
js
mov
sti
jb,pn
cmp
int
jns
xchg
ds
in
icebp
dec
mov
inc
test
mov
movb
xor
fimuls
sub
or
dec
test
in
outsl
popa
sub
lret
xchg
test
aad
fstl
aaa
int3
pop
push
addb
inc
or
xor
xchg
mov
test
aam
xchg
xor
fmuls
sub
xchg
pop
jp
and
lds
pop
daa
test
inc
mov
cmp
and
jb
cld
or
test
leave
outsb
jmp
push
es
pop
outsb
call
sti
mov
adc
add
lcall
adc
das
cmp
lods
xor
mov
sbb
pop
dec
adcb
push
inc
mov
cs
fwait
cli
shl
inc
sbb
mov
sub
push
push
mov
jle
sar
fsubrl
xsaveopt
mov
and
add
cmpsb
sub
insb
mov
dec
push
xchg
xor
aad
and
rclb
imul
js
jns
inc
movsb
and
das
adc
iret
xor
cmp
cs
or
pop
jg
xchg
mov
stos
pusha
ds
push
adc
sar
cmp
add
jnp
loop
hlt
das
jno
vpaddw
inc
pop
xchg
jno
ljmp
add
jns
jp
inc
movsl
loopne
jne
inc
les
mov
inc
clc
xor
clc
fwait
dec
bnd
dec
cmp
mov
aad
push
call
dec
jg
divb
jnp
mov
cmp
stos
jbe
je
sub
fidivrs
jmp
jl
rcrl
pop
jl
xchg
sub
jbe
mov
xchg
cltd
fisttps
add
testb
xchg
add
dec
les
mov
cli
enter
add
sti
pusha
hlt
push
dec
push
dec
or
add
ret
pop
adc
aad
add
jle
movsl
xor
fldcw
mov
sti
pop
push
mov
mov
inc
test
add
or
or
ret
stos
pop
ljmp
jnp
sbb
fnstsw
ret
or
mov
and
fdivrl
pusha
inc
out
xor
jo
ret
jno
js
mov
mov
jne
jmp
mov
mov
push
add
jecxz
jnp
lcall
jl
and
and
adc
add
push
ds
decb
dec
xor
cwtl
or
pushf
aam
add
adcl
dec
mov
xor
cmpsb
xchg
ss
inc
hlt
or
pop
sub
clc
icebp
int
cmpsl
ror
aaa
je,pn
mov
cli
cwtl
cld
cmc
loop
dec
imul
push
inc
rcrb
cli
xor
jmp
and
rcll
flds
adc
out
das
jle
in
int
pusha
loopne
jmp
lds
jle
cmp
adc
mov
pop
test
mov
jg
inc
push
pop
pop
xadd
and
xchg
shr
push
das
cmp
leave
cmp
lea
jge
push
mov
addr16
mov
sbb
je
push
imul
mov
pop
xchg
mov
add
jnp
sub
in
mov
shl
push
xchg
rep
sub
scas
sub
pusha
pop
push
or
push
xchg
adc
and
pop
lods
mov
in
jle
add
xchg
mov
imul
adc
push
cli
cmp
cmovg
cli
loop
lea
and
inc
inc
xor
jmp
dec
ja
jge
orb
and
test
cmp
les
mov
mov
dec
loop
loopne
cmp
add
add
or
mov
and
xor
lret
xchg
rcrl
push
or
or
in
sub
in
lds
mov
pop
cwtl
push
lods
adc
scas
nop
or
clc
add
inc
sub
xchg
xchg
mov
lret
cmp
popa
test
sub
nop
cmp
or
or
bound
jecxz
sub
add
enter
inc
sar
and
loop
sbb
loopne
and
mov
sub
popf
insl
mov
mov
cmp
xchg
loope
cmp
jo
mov
xchg
mov
ljmp
push
mov
aad
out
push
in
out
push
mov
xlat
jbe
inc
mov
outsl
mov
sub
push
xchg
xor
arpl
mov
pop
mov
and
push
mov
out
popa
sbb
mov
and
mov
adc
mov
cld
mov
push
mov
add
imul
jmp
rcl
cmp
cmc
movl
fstpl
mov
jno
push
mov
roll
sub
inc
call
roll
push
lock
mov
push
lea
sub
scas
push
sbb
imul
lods
dec
and
jbe
sbb
js
stos
out
fisubs
and
stos
clc
shlb
push
divl
test
add
xchg
sbb
imul
sbb
xor
scas
cmovns
stos
push
inc
movsb
into
sub
push
cli
and
scas
jb
call
or
loop
mov
or
and
inc
push
mov
sbb
pop
mov
jp
adc
shl
scas
mov
mov
add
sbb
xchg
fmuls
js
cmp
rorb
sar
and
add
jp
lcall
jl
sti
sbb
push
int
xchg
stos
mov
add
scas
and
or
icebp
jbe
arpl
ret
out
or
jne
adc
push
test
mov
mov
add
mov
jne
clc
or
add
imul
ljmp
push
fnstenv
fiadds
pop
fwait
mov
ja
rorb
jge
hlt
std
push
push
mov
mov
lcall
sbb
cmp
aas
add
sbb
fs
push
fcomps
mov
pushf
cmp
mov
inc
and
mov
add
sub
push
xor
push
out
push
in
push
jnp
rcr
pusha
sti
push
ror
nop
mov
pop
lahf
bound
inc
ljmp
es
lods
jge
jg
dec
fs
jo
dec
or
push
cmp
pop
jecxz
pop
and
sub
out
jmp
xchg
fdivrs
rcrl
jecxz
xor
sbb
mov
cld
mov
sub
clc
jb
sbb
cmpb
pop
cmp
out
cmp
push
inc
std
out
jg
out
add
fiaddl
addr16
pop
fldl2e
sub
sub
adc
das
or
push
cmp
dec
add
mov
or
cltd
jecxz
nop
add
cmp
xor
mov
inc
mov
sub
lock
add
fwait
sub
pop
pop
fwait
arpl
loope
cmp
pushf
add
xor
cmp
test
int
adc
out
psrld
loopne
addr16
or
jb
sbb
dec
inc
xor
inc
jl
popf
jmp
loop
xlat
push
add
add
inc
out
push
inc
sub
addl
jp
mov
adc
jp
cmp
push
enter
addr16
push
and
pop
fcomps
cwtl
sub
lahf
outsb
scas
cwtl
push
xchg
inc
pop
push
sbb
push
mov
dec
sti
ljmp
pop
mov
out
push
push
xchg
cmp
lcall
data16
pop
sub
lods
pop
push
adc
rcl
insb
add
orl
ljmp
in
add
dec
pop
fcmovnbe
pop
mov
xchg
pop
mov
mov
aaa
push
cli
pop
inc
fwait
sbb
push
xchg
mov
es
xor
repz
sub
dec
or
sbb
pop
and
fcoml
sarb
jns
pop
adcb
ss
or
or
and
xchg
jge
and
loopne
push
call
mov
sub
pop
inc
outsl
seta
inc
add
adc
dec
test
imul
dec
xchg
imulb
push
iret
out
cmc
push
push
jl
sub
fimuls
and
xchg
push
and
shll
inc
repz
jmp
lcall
and
add
adcl
jle
mov
mov
sbb
sub
stc
ret
mov
imul
sub
pop
loope
testb
xchg
jge
jne
pop
add
sahf
call
adc
movaps
and
mov
mov
pop
dec
in
popa
scas
mov
shlb
movsb
clc
lods
pop
sub
lods
mov
or
rolb
inc
xor
inc
clc
push
sbb
jne
sti
mov
pop
fldcw
dec
popa
push
inc
add
lds
adc
je
mov
mov
sub
add
push
loopne
push
aas
psllq
and
xchg
pop
add
mov
adc
mov
addr16
mov
lret
je
insl
dec
jae
add
ss
sbb
mov
jle
insb
out
xchg
in
sub
dec
je
mov
xchg
inc
xlat
xchg
mov
roll
es
call
sub
mov
adc
out
and
popf
adc
test
fwait
clc
daa
push
rolb
inc
add
sbb
lcall
popa
add
enter
jmp
shl
pop
mov
jp
inc
leave
cmp
cmpsb
adc
into
xor
aaa
rcll
jo
movsb
xchg
adc
and
loope
out
fwait
sbb
push
and
js
std
adc
icebp
daa
adc
incl
scas
psubb
jae
je
cli
jo
and
pop
sbb
vcvtss2sd
enter
pmaddwd
shl
xchg
or
hlt
pop
jg
movsl
jb
aas
cld
xchg
std
mov
lea
jecxz
mov
sbb
pop
add
and
insb
cmp
pop
add
or
cmpsl
outsb
frstor
mov
dec
add
sbb
call
into
push
hlt
inc
adc
mov
sub
adc
cld
mov
xchg
push
fmuls
insl
mov
cmpsl
push
lock
pop
dec
popf
dec
nop
mov
ja
push
sbb
or
movsl
mov
mov
jno
daa
jmp
lods
arpl
mov
hlt
add
mov
js
fs
pushl
jle
adc
jmp
aaa
aaa
aaa
inc
cmp
cmovle
int
imul
fistpll
cmp
cli
in
xchg
ficomps
ret
rorb
jne
dec
rorb
cmp
lret
test
push
mov
push
nop
cmp
mov
cmp
sbb
sub
inc
scas
xchg
loope
dec
sarb
int3
mov
dec
sub
ds
sub
ds
pop
out
addl
push
mov
ret
icebp
jno
pop
push
inc
loopne
cmp
push
lods
je
dec
shrb
fdiv
test
adc
and
insb
mov
loopne
mov
pop
mov
ret
or
dec
mov
fldenv
push
xlat
mov
sbb
dec
fs
xchg
cmp
pop
push
aad
cmc
push
xchg
push
fcomps
ja
push
jno
add
adc
adc
rorb
js
rcll
xchg
mov
arpl
jb
lock
or
inc
lock
push
mov
mov
sub
fisubl
pop
scas
sub
add
lock
push
loope
fs
rorl
aam
pop
add
std
js
dec
loopne
or
arpl
pop
mov
scas
cmp
mov
jp
xchg
fimuls
inc
sbb
test
or
fsubrl
adc
arpl
stos
cmc
out
inc
wrmsr
in
aad
push
cmp
jmp
sarb
mov
mov
loop
setns
rcr
js
jl
mov
xchg
xor
cmp
ja
mov
jnp
in
push
mov
mov
xchg
jecxz
movaps
pop
mov
test
or
push
lret
pop
lcall
mov
fisubs
mov
das
xorb
xchg
add
add
adc
aam
mov
ret
sbb
cmc
test
sbb
or
call
cmpb
mov
shlb
mov
or
jbe
push
add
ficompl
jle
xlat
mov
rcl
lahf
mov
inc
push
xchg
clc
movsl
jb
dec
and
aas
aaa
push
test
sbb
ss
bound
adc
sbb
scas
mov
push
data16
inc
mov
mov
xor
shlb
mov
cmp
lds
clc
xor
pop
add
pop
mov
pop
xchg
push
rol
and
xchg
test
loop
test
imul
lds
insl
les
or
jecxz
mov
arpl
add
lods
xchg
cmp
pop
sbb
scas
jno
mov
nop
adc
add
sbb
js
clc
clc
pop
push
imul
adcb
jo,pt
popa
cld
arpl
xchg
testb
mov
out
loope
sti
test
call
xor
add
ds
pop
pop
and
je
jno
negl
inc
mov
dec
inc
int3
sti
movsl
icebp
jmp
jge
fbld
fwait
inc
xor
enter
push
loop
jne
and
lds
add
mov
pop
sbb
push
ficompl
sub
xor
test
xor
std
sbb
xlat
pop
mov
inc
nop
cmp
and
cmpsb
mov
mov
xorb
icebp
pop
pop
lods
pushw
cs
sbb
sub
mov
mov
mov
adc
and
add
xchg
call
stos
fcmovu
cs
mov
add
shl
lret
and
pop
aam
lahf
lock
add
push
jge
adc
out
mov
adc
int3
sub
insb
mov
add
adc
cld
ljmp
iret
call
lea
test
jl
ljmp
cli
xchg
std
mov
ret
and
push
ja
xchg
push
xor
fidivl
loopne
icebp
cli
xor
mov
mov
fdivrp
movsb
sub
push
inc
les
movsb
daa
int3
mov
mov
divb
out
cmp
add
testb
loopne
pop
sahf
mov
adc
js
into
or
mov
jp
lods
in
or
add
mov
mov
clc
push
repz
out
adcl
mov
outsb
addb
jmp
dec
inc
push
push
jle
aas
call
jl
xor
jp
lcall
cmp
jnp
int3
rorb
cltd
test
icebp
mov
lret
fsubr
jne
std
cmpsl
push
out
cmp
into
add
push
je
mov
cwtl
and
mov
jae
cmp
insb
or
xor
in
shrb
subl
arpl
jmp
aad
push
arpl
mov
nop
jns
mov
cmp
ss
test
enter
xchg
push
decl
add
add
mov
mov
or
je
imul
adc
shl
arpl
push
test
cmp
lret
sub
dec
dec
push
out
xchg
lock
jl
xchg
jl
enter
and
jb
inc
cld
addr16
lock
outsl
dec
push
pop
push
sbb
fsubrl
ss
xchg
mov
xor
outsl
cld
push
push
sbb
in
or
mov
mov
or
xor
cwtl
jg
out
pusha
add
add
xchg
inc
insl
test
jg
lretw
mov
dec
dec
mov
sbb
push
mov
pop
loopne
mov
mov
scas
adc
push
inc
das
lock
ret
loopne
aad
hlt
mov
mov
testl
sub
loopne
loop
rolb
jb
aam
lods
cwtl
push
sbb
fmulp
mov
jg
icebp
mov
fwait
sub
test
pop
sub
pop
jp
lock
pop
push
push
push
adc
cmp
lock
fisubrl
in
sub
fiaddl
daa
pusha
lock
shrb
call
ds
call
xchg
jo
pop
out
xor
add
inc
dec
lds
and
rclb
and
cmp
pusha
pusha
call
adc
pop
inc
dec
pop
add
or
dec
cs
scas
inc
mov
push
sbb
jle
or
add
call
in
sbb
fidivrs
mov
ret
mov
lcall
repnz
arpl
lcall
jmp
fstpl
xor
push
mov
mov
mov
push
pop
cmp
out
push
or
and
test
mov
dec
les
push
push
add
ret
scas
cmc
inc
pop
mov
test
push
cli
mov
shrb
jbe
sub
test
xchg
mov
inc
sbb
mov
push
in
adc
mov
inc
pushf
rcl
or
inc
test
sti
add
mov
mov
mov
outsb
push
push
or
rclb
call
dec
add
out
clc
mov
lock
jns
cld
push
les
sub
pop
dec
test
lock
outsb
jge
sbb
cs
jmp
les
dec
jl
jp
les
mov
movq
jb
dec
fdivrp
lods
xchg
mov
sbb
add
pop
in
inc
les
mov
imul
movsl
jbe
mov
enter
dec
jecxz
mov
fwait
ja
js
jg
sbb
std
push
into
dec
sub
adc
cmp
or
test
iret
loope
fcmovnbe
mov
rclb
or
pop
mov
jge
es
adc
dec
inc
dec
ret
pop
push
popf
mov
inc
scas
mov
js
pop
push
js
inc
cli
cmpl
xchg
add
out
ss
test
or
je
rcr
and
dec
jbe
shrl
push
adc
lods
sbb
rol
cmp
sub
enter
mov
push
pop
cvtps2pi
imul
in
das
lock
loopne
dec
ret
pop
or
mov
mov
inc
loope
sahf
mov
fs
sub
popa
push
jle
add
dec
push
rol
push
xor
stos
fdivr
sahf
sub
add
ljmp
mov
mov
hlt
jl
scas
mov
inc
jl
jl
rclb
outsl
movsb
call
repz
cmp
push
js
insb
adc
sbbl
cmpsl
lahf
add
rcr
cmpsb
xor
loopne
sbb
or
pop
lds
jle
hlt
loopne
out
xor
cmp
pop
call
sbb
in
sbb
jno
lcall
cmpl
cltd
clc
and
clc
xlat
mov
leave
dec
stos
cmp
mov
push
scas
cs
xchg
fcompl
lahf
shlb
inc
sbb
lea
cmc
pusha
aaa
push
jno
jo
ja
cmc
mov
data16
cmp
mov
mov
xor
loop
loop
add
add
mov
mov
cmp
xor
push
cli
icebp
fs
test
mov
pop
jl
clc
or
pusha
inc
dec
push
mov
test
aas
loop
mov
mov
jnp
ljmp
inc
pop
pop
mov
pop
jge
mov
inc
sbb
sub
in
lods
and
inc
sbb
inc
add
inc
cmp
movsb
ret
mov
mov
loopne
test
bound
and
adc
jle
sbb
dec
adc
add
sbb
or
lret
lods
call
sub
test
mov
cmp
jne
sub
mov
hlt
mov
add
push
mov
lret
out
insl
xor
out
mov
pop
mov
cli
cmpb
jle
les
leave
ror
push
dec
or
aam
sbb
mov
cmpsl
sbb
mov
mov
pop
jmp
xor
mov
movsl
inc
add
mov
stos
pop
mov
mov
pop
ret
dec
push
stc
arpl
pop
or
mov
insl
incl
js
sub
out
xor
daa
jl
xchg
jp
js
add
hlt
rclb
pop
push
jle
js
imul
sub
nop
int
out
enter
xchg
cmp
pusha
lea
fsubrs
mov
jo
cmp
fildl
mov
aas
fistl
inc
out
dec
fdivrl
lds
sbb
inc
adc
sbb
inc
jb
fimuls
push
std
lret
fsubrl
popf
push
sub
add
or
sbb
hlt
out
jmp
loopne
out
mov
cmp
cmpsl
pop
xor
adc
or
sub
pop
add
sub
xor
stos
test
test
xor
loopne
leave
lods
mov
mov
cmp
xor
jno
sub
xor
push
mov
loope
clc
ret
pusha
add
push
incl
push
inc
push
adc
mov
lret
fsubrs
imul
scas
pop
lods
sti
push
cmpsl
xchg
dec
rolb
push
das
shlb
cmpsb
insl
fsubp
call
mov
rorb
pop
into
push
xor
mov
outsl
rclb
mov
test
cmp
mov
inc
fildll
ss
mov
lds
aas
loopne
insl
clc
orl
xor
jnp
lods
push
lods
add
sub
stos
daa
push
jle
jle
jmp
int
test
loopne
push
rclb
push
ja
push
pop
scas
scas
inc
leave
push
ljmp
or
fidivrs
inc
mov
add
cmp
cmpsb
je
lret
cmovbe
bound
jno
pusha
lahf
mov
mov
ds
in
call
lahf
stos
mov
mov
xchg
iret
rcrb
mov
pusha
jnp
xor
sbb
push
shrb
mov
jne
loope
add
jo
or
shlb
pop
pusha
addb
out
in
mov
dec
add
pop
adc
inc
filds
orb
sub
jmp
scas
incb
dec
xor
sub
xor
add
ret
sub
mov
jmp
aad
sbb
and
inc
jno
pop
cmpb
lods
outsb
shlb
repz
aaa
dec
rol
push
or
in
jl
fisttpll
jne
into
mov
dec
sbb
and
push
lea
in
push
ret
loopne
jbe
pop
push
pop
ss
fnstcw
push
mov
dec
aas
cwtl
idivl
jle
mov
inc
int3
jl
add
pop
lea
push
or
xchg
rcrb
dec
pop
mov
loope
mov
dec
mov
add
ljmp
fcompl
std
jl
fstpt
ljmp
dec
fisubl
test
pop
mov
or
ret
clc
jbe
mov
sub
std
mov
mov
jle
pop
pop
pop
pop
xor
adc
out
jne
inc
cli
mov
push
jo
cmp
cmp
loop
pop
xlat
sub
or
incl
sub
sahf
push
mov
push
aas
push
cmp
out
xchg
fistl
movsl
js
cltd
cmp
jns
mov
test
sahf
pop
xchg
mov
js
or
xor
fisubrl
pop
mov
adc
mov
lret
xor
adc
into
pop
cmp
mov
or
push
lock
ret
pop
dec
or
fmuls
dec
sbb
int3
ss
inc
popf
mov
popa
inc
ljmp
inc
mov
adc
cmp
rcr
mov
mov
dec
push
pop
cmc
in
test
xchg
adcb
lea
xor
aam
add
push
and
test
sub
add
lcall
lods
xchg
fcompl
cmp
mov
pop
or
rcrl
adc
out
cs
push
add
scas
mov
adc
mov
sub
jb
xor
daa
scas
dec
mov
clc
jle
js
mov
pusha
xor
lods
and
fsubrs
and
negb
push
je
cmpsb
push
aam
mov
xchg
inc
cmp
xor
sbb
into
fdivrs
insb
inc
xchg
je
sbb
cmp
jmp
push
idivl
mov
repnz
push
mov
ss
add
xor
mov
dec
les
adc
push
rcl
cwtl
xor
ret
and
mov
push
mov
dec
shrb
call
loop
mov
pop
xor
fdivs
in
or
je
adc
lds
test
addb
inc
fsts
mov
xchg
clc
and
rcrb
xor
fcmovnb
cli
fdivs
sbb
outsl
in
repnz
icebp
outsl
clc
mov
outsb
push
sbb
pusha
push
cs
lock
clc
in
fsubs
popa
and
movsl
lock
add
mov
mov
mov
test
ss
or
clc
add
dec
push
sbb
out
outsb
jp
insb
cmp
adc
das
test
inc
std
or
xor
ds
pop
mov
incl
mov
rolb
subl
push
icebp
or
cmp
scas
push
push
mov
fsts
roll
mov
add
add
add
into
ret
nop
test
jl
cmp
jle
into
clc
xchg
xor
test
cmp
lret
test
dec
and
pop
push
hlt
pushl
mov
xor
cmpsl
dec
mov
add
mov
pop
jmp
fadd
jae
mov
add
jecxz
pop
ss
adc
je
sub
adc
fnstsw
gs
data16
pop
sahf
sbb
fdivrl
test
xor
rorb
dec
outsb
mov
pop
mov
call
stos
and
inc
xor
sbb
and
mov
bound
int3
addr16
fiadds
fildll
and
dec
jle
pusha
xchg
sub
xchg
mov
loopne
cmp
sbb
sbb
ljmp
rorl
mov
orb
cmp
ljmp
dec
and
iret
je
lea
xchg
pop
push
mov
mov
orb
xchg
push
in
sub
addb
xchg
cltd
js
inc
mov
mov
ret
mov
sahf
lea
lods
ljmp
mov
pop
popa
pop
adc
lock
push
cmpsl
cs
pcmpgtw
push
xor
scas
sub
or
js
aas
in
ljmp
mov
mov
cwtl
cmp
add
push
adc
outsb
ret
sub
fiaddl
sti
fisubs
xchg
test
cmp
roll
fcoms
adc
mov
loope
cmp
inc
sub
iret
push
or
xchg
jmp
es
scas
mull
mov
scas
sub
sub
push
fadd
inc
mov
shrb
bound
lods
add
test
rcrb
cmp
stos
xchg
sbb
push
mov
cmp
imul
fcompl
and
pusha
jmp
cmp
cli
loopne
push
in
dec
scas
mov
xchg
xor
loope
sub
sbb
xchg
adcb
pushf
lods
hlt
xchg
incl
mov
pop
and
mov
dec
sti
sbb
push
adc
js
xchg
dec
fists
pop
fwait
mov
push
rcr
cmc
roll
lock
xchg
movsb
mov
fisttps
lods
popf
test
test
orb
jg
cmc
nop
add
jl
aas
dec
pop
jl
mov
inc
cmpsb
enter
lods
lahf
pop
dec
daa
adc
lock
and
adc
pop
and
add
pop
testb
pop
jecxz
loop
adc
movsb
ret
jmp
fmuls
mov
fcompl
inc
arpl
sub
outsl
insb
fisubrs
gs
stos
movsl
lahf
pop
add
in
fisubl
decl
dec
inc
adc
pop
je
pop
out
mov
mov
mov
jl
into
clc
data16
shlb
fsubrl
pop
dec
xchg
mov
mov
inc
add
insb
pushf
or
xor
pop
in
dec
lods
jbe
cmp
iret
pop
flds
lock
insb
cmc
ror
sbb
xchg
mov
ss
or
add
mov
iret
cltd
ror
inc
int3
xchg
mov
clc
sub
pop
js
repnz
cmp
xor
jmp
xor
jge
testb
cmp
stos
test
fidivs
sub
repnz
push
dec
imul
add
jo
fs
xchg
adc
lahf
lcall
decb
mov
dec
mov
lods
xchg
enter
mov
stos
mull
add
ljmp
inc
dec
frndint
or
mov
push
adc
loop
enter
add
sbb
mov
jecxz
jecxz
fiaddl
movaps
cs
cmp
mov
scas
mov
cmp
and
jne
push
daa
dec
rcr
sbb
push
mov
pop
lea
sbb
push
call
mov
scas
mov
sbb
pop
push
fsubs
xor
frstor
clc
dec
add
add
mov
add
filds
push
testb
enter
cmp
pusha
loopne
insb
sub
cmpsb
in
lds
lods
cmp
mov
incb
xchg
das
dec
mov
xor
in
pushf
dec
popa
adc
inc
jle
cs
inc
pop
xor
mov
sbb
xlat
divb
out
push
hlt
insl
push
fucomi
loopne
pop
mov
leave
insl
in
add
push
xchg
jno
add
or
shlb
push
dec
shrb
mov
sub
cmp
jl
jb
or
test
cmpb
aas
cs
test
popf
mov
subl
sahf
fmull
mov
xchg
int
out
sub
aaa
loop
rcr
and
cmpsb
mulb
inc
rorl
fldl
scas
and
movsb
out
push
in
cmpsl
outsb
clc
inc
xchg
pusha
sbb
clc
js
rorl
inc
dec
vpshufhw
or
push
or
xlat
ljmp
pop
add
adc
orl
mov
sub
enter
testb
pop
or
cmpsl
dec
mov
outsb
inc
pop
mov
in
sbb
jbe
es
out
inc
insb
xor
add
outsb
lock
roll
lds
call
sti
add
xchg
mov
ss
mov
xlat
xchg
xchg
adc
add
cmp
scas
xor
ds
inc
pop
hlt
cmp
mov
pop
icebp
loopne
push
and
ss
sbb
sub
int
clc
in
and
ficomps
cltd
add
addr16
push
rcl
dec
jbe
fucompp
fsubrs
mov
sbb
pop
call
addr16
mov
inc
cmp
xchg
xchg
push
rolb
and
sub
adc
cmp
cmpsb
and
sbb
nop
je
shl
loop
mov
fists
push
scas
push
mov
xor
out
pusha
dec
ret
imulb
mov
jge
push
dec
rolb
mov
and
dec
ret
test
mov
popf
aam
cld
ja
and
es
lea
xchg
subb
sbb
mov
mov
sti
test
mov
call
js
jmp
push
loopne
test
je
je,pt
pusha
call
data16
add
fs
mov
sub
out
rol
insb
insl
mov
add
inc
cmc
or
push
mov
or
pop
adc
pop
cmp
cwtl
inc
xchg
outsl
push
inc
out
sbbl
call
decb
nop
pop
or
xchg
popf
jbe
mov
xchg
or
out
sbb
stos
mov
rcl
iret
pop
sub
jbe
clc
ljmp
stos
jecxz
sbb
push
fdivl
shrb
test
cli
mov
mov
mov
lock
mov
shlb
lret
or
loopne
jo
push
clc
ljmp
xchg
sub
subb
lcall
mov
out
pop
mov
loopne
jb
or
mov
push
mov
jmp
pop
test
add
sub
push
inc
outsl
cmp
or
mov
inc
mov
es
jmp
test
repz
mov
xchg
lea
xor
cmp
jns
adc
push
clc
in
in
sar
or
mov
cwtl
add
sahf
rcll
xchg
mov
xor
or
lds
push
js
add
inc
iret
mov
push
mov
push
xor
mov
dec
dec
add
enter
mov
adc
jecxz
loop
add
jecxz
daa
inc
shll
mov
dec
stc
cmc
pop
or
push
fcoms
pusha
pusha
das
and
cmp
jno
and
sub
dec
test
ret
or
xchg
pop
mov
sub
inc
mov
or
sbb
andl
test
inc
mov
mov
adc
popf
xor
inc
inc
pop
outsl
push
push
mov
mov
and
push
lods
push
fildll
pop
jno
lretw
pop
mov
lea
push
and
test
pop
xor
mov
pop
stos
xor
pop
push
movsb
pusha
jno
mov
or
cmp
inc
je
shrl
outsb
jnp
sub
dec
xor
inc
inc
dec
test
lock
dec
and
mov
sub
leave
rol
pop
packssdw
enter
and
inc
scas
add
push
or
add
mov
or
insl
xchg
orb
mov
xchg
mov
mov
xorl
sbb
addr16
adc
mov
leave
cmp
inc
adc
lock
inc
dec
xor
mov
mov
push
sbb
sub
dec
lods
orl
je
sub
and
or
add
sub
cmpl
fidivs
in
jecxz
dec
orl
mov
dec
imul
jbe
pop
and
mov
lock
outsl
add
mov
outsb
fimull
es
mov
rcll
lcall
mov
ret
nop
je
ss
add
adc
in
add
or
sub
jecxz
sub
ficomps
push
push
pop
mov
or
adc
mov
sub
pop
lods
sahf
imul
sbb
lahf
xor
xchg
pop
ret
xchg
mov
aas
inc
aaa
sbb
dec
and
fiaddl
fisttpll
xchg
jg
xchg
push
stc
adc
xor
data16
xor
sub
rorl
mov
out
mov
inc
inc
mov
subb
xchg
ja
popa
jg
mov
loop
sbb
sub
mov
call
push
push
out
sbb
shl
cltd
pop
inc
inc
js
inc
dec
icebp
ret
sub
mov
stc
in
pop
icebp
loope
or
push
inc
ds
cmp
ds
loop
aam
pop
aas
aaa
mov
push
sub
xor
xor
mov
loopne
mov
rolb
xchg
or
popa
out
call
push
mov
mov
mov
jmp
leave
push
lea
shll
dec
loopne
pop
scas
mov
test
mov
stos
fiaddl
out
fisttpll
arpl
rcrl
and
sub
add
inc
test
add
lea
dec
xchg
test
push
pmaxsw
mov
sub
dec
data16
adc
push
mov
lret
hlt
or
iret
jno
adc
imul
insb
add
jp
jne
add
mov
xor
arpl
leave
ss
xchg
cwtl
and
scas
cmp
cmpsl
xchg
add
jmp
add
pushf
jp
arpl
xor
ret
clc
rclb
push
add
jp,pn
daa
push
imul
pushf
sub
jne
push
es
cmp
cmp
xor
add
sti
add
test
xor
int3
popa
aaa
mov
dec
pop
outsl
jb
inc
add
pop
jo
test
ljmp
popf
jle
pop
aad
pusha
add
nop
cmpsb
dec
fnsave
adc
pop
scas
lahf
negb
popl
cwtl
popa
sub
jbe
lcall
add
outsl
aam
xor
nop
inc
lcall
fcomps
adc
dec
nop
int3
or
sub
setno
daa
fstpt
jge
andb
and
mov
xor
dec
mov
js
push
imul
bound
ss
fidivrs
pop
imul
ret
ja
jae
mov
xchg
js
pop
les
es
repnz
loopne
pusha
lret
in
jmp
insl
mov
jmp
mov
sub
xchg
inc
and
dec
and
int
lret
les
xor
add
lret
int
dec
pop
pushf
pop
sar
lods
iret
mov
aad
outsl
xor
insb
cmp
leave
fimuls
adc
lods
stos
mov
pop
in
add
push
jno
ror
jmp
fsubl
pop
out
dec
sub
add
sahf
int3
xor
add
push
inc
or
xor
and
push
test
mov
pop
pop
sbb
es
fsubs
jle
cmp
mov
movsb
test
mov
adcl
mov
mov
jmp
cwtl
adc
subl
inc
and
and
dec
pop
sarl
roll
add
mov
xor
inc
inc
lahf
dec
xchg
sarl
cmovge
imul
rorl
jbe
jo
movsl
cmp
lock
xchg
lds
leave
pop
pusha
xchg
cwtl
sub
popl
mov
loopne
addr16
insl
push
sub
dec
or
mov
aaa
push
aaa
je
movsl
mov
aad
popa
lds
xor
or
dec
and
je
ja
dec
ret
leave
xor
jecxz
mov
push
aaa
pop
sbb
inc
fiadds
pushf
mov
xorl
sbb
popa
mov
es
sbb
push
icebp
popa
ret
call
cmpsl
stos
icebp
pop
cmp
mov
mov
insb
sbb
repz
add
dec
lods
lea
dec
lahf
add
adc
movsb
scas
shll
push
sarb
xlat
out
ds
mov
jecxz
jnp
mov
out
cld
sahf
mov
lret
xchg
pop
mov
or
jmp
cmp
inc
adcl
imul
test
push
cmp
insl
and
dec
sbb
cmp
sbb
push
ret
test
or
push
fs
jnp
call
fnstcw
pop
loopne
push
jmp
scas
ret
sbb
cltd
mov
xchg
push
lea
sbb
mov
mov
std
es
adc
lcall
repz
and
add
fwait
dec
push
std
test
pop
push
or
iret
rol
push
dec
jecxz
iret
or
sahf
and
cmp
xor
ffreep
ljmp
xchg
push
notl
add
icebp
in
adc
jp
pop
or
push
imul
ja
fwait
sub
ljmp
xchg
ljmp
jmp
int
inc
aaa
je
out
mov
insl
inc
push
iret
js
adc
mov
sbb
push
or
xor
ret
adc
pusha
stc
movsl
lcall
loop
xor
mov
jnp
scas
rcrl
shl
pop
aas
repz
sbb
and
rcll
mov
xor
test
jne,pn
movsb
mov
call
sbb
mov
xor
aam
insl
sbb
ret
sub
scas
mov
lcall
xor
popf
fnstenv
sub
inc
dec
je
clc
mov
lea
rolb
push
sbb
jns
adc
scas
xor
sbb
call
jbe
cmc
rolb
out
pusha
mov
orl
lods
mov
and
cs
push
push
js
jo
gs
xlat
es
mov
or
aad
xor
fdivr
inc
sarl
mov
xchg
clc
subl
test
cltd
add
sarl
inc
jge
and
lock
rorb
inc
sub
mov
xchg
fnstenv
sbb
lock
cmp
xchg
mov
or
cmp
add
mov
inc
xor
dec
sahf
inc
subb
call
out
jae
jecxz
ret
inc
jae
lret
in
jae
movsl
jl
mov
xchg
mov
push
call
pop
and
or
int3
xor
mov
pop
aaa
rorl
xchg
in
scas
adc
xchg
pop
jns
mov
sbb
sub
ds
test
xbegin
sub
pop
shrl
xchg
addb
cmove
sub
add
jl
mov
rorb
mov
cmp
adc
sbb
ds
test
shlb
add
pop
aad
mov
dec
adc
xor
pop
mov
push
cltd
enter
add
push
icebp
call
xchg
in
sbb
and
cmc
mov
jmp
data16
out
jae
push
rcll
scas
inc
inc
push
jmp
mov
stos
jae
cmp
push
insl
dec
frstor
daa
fimuls
adc
cmp
sub
xor
sub
lods
arpl
mov
mov
mov
cmpsl
jno
popf
pop
or
jecxz
mov
sub
fdivs
mov
aas
aad
cmp
mov
sub
lods
pop
mov
sarb
orb
fwait
ss
mov
mov
adc
xor
xchg
in
push
jns
pop
pop
sub
push
mov
aas
mov
mov
push
jno
aas
scas
or
mov
adc
mov
imulb
sbb
xchg
out
jge
inc
mov
or
or
std
pop
sub
inc
loope
mov
or
call
fdivp
daa
mov
jg
jno
ss
sarb
adc
pop
sbb
dec
inc
and
cltd
mov
mov
out
stos
pop
aaa
jne
fildll
xchg
sti
inc
push
dec
fwait
xor
cmpsl
cmp
sbb
push
loope
lretw
mov
bound
test
test
out
xor
js
clc
cld
stc
mov
mov
xchg
lahf
out
push
testb
and
cmpsl
mov
loope
adc
adc
jle
sti
sub
dec
js
lds
adcl
and
mov
repnz
int
pop
push
call
subl
sbb
lea
xorl
cwtl
mov
fisubs
sbb
ret
mov
stos
sarl
mov
or
jle
aad
push
or
scas
roll
add
xchg
add
les
test
leave
mov
sbb
xchg
dec
add
cmpsl
push
pop
sbb
or
adc
adc
xchg
add
add
or
test
rol
add
mov
pop
imul
push
jmp
cmp
icebp
mov
ljmp
inc
xor
adc
std
dec
rolb
shlb
push
adc
mov
pop
imul
jno
pcmpgtb
gs
mov
call
out
xor
mov
push
mov
iret
cmp
fidivrl
mov
imul
pop
mov
dec
push
popa
mov
scas
iret
enter
cltd
or
incb
pop
push
rclb
ljmp
mov
bound
push
cmp
scas
push
inc
mov
adc
mov
cmc
addl
lock
adc
xor
sub
and
hlt
xor
popf
push
push
dec
movsl
add
push
fstl
mov
in
in
lock
pop
and
fldenv
call
rcrb
aad
add
ret
insb
mov
pop
xor
stc
clc
cmpsb
sbb
sahf
push
stos
in
lods
shl
lcall
mov
inc
addr16
daa
mov
mov
mov
mov
bnd
loopne
testl
add
jmp
fidivrs
or
daa
inc
les
out
sbbb
or
inc
pusha
stos
pop
sahf
ds
fsts
mov
wbinvd
mov
cld
or
sarl
mov
xchg
push
rorl
lea
jb
arpl
push
inc
xchg
mov
jo
xor
sub
fs
mov
cld
ja
stc
adc
mov
aad
cmp
push
fwait
jno
ror
pop
aad
ret
inc
pop
xchg
add
lea
add
imul
lods
mov
jns
outsb
ljmp
repz
xor
and
or
mov
leave
mov
xor
lret
sub
pop
sbb
pop
pop
movsl
test
pushf
pop
sbb
push
xchg
xchg
push
inc
neg
shlb
adc
cmp
adc
add
mov
push
adc
xor
jb
mov
jp
xor
lcall
mov
jmp
sbb
push
or
jp
mov
xchg
mov
lcall
xor
or
dec
stos
cs
mov
inc
mov
dec
rcrl
xchg
sti
and
ds
sub
popa
test
shlb
lds
fdivp
cmpb
pop
stos
movzwl
push
inc
mov
dec
pop
cmp
or
sbb
jnp
test
mov
adc
sbbl
mov
adc
jecxz
pop
or
lock
xchg
daa
inc
cmp
mov
mov
xchg
das
xchg
dec
outsl
or
push
mov
and
sbb
pop
and
mov
dec
add
test
insb
les
push
shl
loop
or
fdivl
sbb
mov
call
ret
adc
out
add
xor
mov
add
xor
mov
fwait
pop
sub
lock
mov
int3
sbb
pop
cmpsb
mov
js
scas
lahf
cmpsl
andb
pop
lcall
sub
loop
mov
cmp
in
adc
lret
loope
rclb
shlb
insb
mov
mov
cmp
sub
loopne
jmp
jl
inc
inc
loopne
pop
mov
sbb
pop
mov
jecxz
xchg
pushf
aaa
fisubrl
xchg
and
fsubrl
pop
je
fs
fisubrs
pop
sbb
mov
and
mov
cmc
shrl
push
mov
icebp
adc
jne
aad
jae
pop
es
mov
sub
lds
push
lea
icebp
orl
scas
ficoms
adc
int3
mov
pop
jp
lahf
add
testl
dec
sub
cmpsb
sbb
int
sbb
enter
jnp
js
push
and
out
mov
out
add
dec
push
sbb
and
push
bound
adc
jmp
cwtl
ljmp
sbb
in
sbb
push
mov
pop
push
push
jno
inc
cld
jl
je
cmp
and
xor
xchg
push
push
push
cmc
lahf
and
movsl
jle
scas
stos
negl
xor
or
cmp
mov
cmp
imul
pushf
ret
out
dec
xchg
out
pop
sub
pop
cmp
xorl
mov
xchg
call
jmp
push
sbb
in
adc
lret
pop
pushf
stc
and
pop
imul
cs
cwtl
xchg
aam
stos
or
sbb
enter
xchg
outsb
repz
push
dec
fldcw
push
mov
jno
push
testl
sbbl
outsl
cmp
and
mov
jmp
shlb
add
dec
pop
sti
push
xor
sar
add
test
push
push
test
or
scas
adc
mov
mov
fidivl
popf
mov
rorb
bswap
sub
inc
loopne
add
xchg
or
nop
loope
subl
jmp
jno
inc
movl
jmp
push
sbb
mov
fisttpl
xchg
cmp
daa
add
enter
sbb
fldenv
je
dec
rol
rol
sub
das
jno
jl
sarb
loopne
rorl
xchg
cmp
sub
mov
fbld
daa
mov
push
ja
int
push
mov
jmp
ret
add
xchg
adc
popa
arpl
mov
mov
sub
cmp
stc
jo
stos
test
mov
dec
cmpb
aad
test
mov
pop
add
sbb
xor
int
in
push
fiadds
repz
sti
stos
or
push
pop
inc
aaa
test
data16
in
jmp
aam
mov
or
loope
pop
ret
push
jae
pop
mov
mov
mov
mov
js
das
mov
cmp
add
mov
lock
cmpsb
es
lock
movsb
cmc
pop
je
outsl
or
add
addb
mov
mov
or
fistps
xchg
mov
outsl
mov
jle
hlt
add
jb
pushf
adc
sahf
fadd
adc
dec
inc
jge
xorl
sbb
dec
xor
lock
shrl
pop
mov
pop
jge
int3
inc
mov
pop
add
push
sahf
sbb
cmp
and
sbb
loope
cmpsb
leave
xchg
xor
or
xor
add
lret
and
push
test
popf
imul
xlat
sub
insl
jge
pop
mov
inc
test
dec
aas
jl
cmp
sahf
popa
aad
mov
jo
mov
mov
dec
cmpsl
mov
jns
fmull
sub
add
loope
movl
std
mov
ret
ret
scas
xor
xchg
and
movsl
dec
push
mov
inc
es
ja
xchg
out
push
mov
mov
mov
lods
push
mov
leave
mov
lock
and
cli
les
jno
aam
lahf
movsl
mov
cmp
movsl
fs
rcr
scas
sbb
iret
dec
out
ret
xor
or
push
pmaxub
les
sub
mov
add
or
jmp
outsb
subb
or
cmp
sarb
stos
ds
shl
repnz
popf
ss
int
dec
rcrb
add
inc
inc
and
lcall
push
fbld
xor
push
cmp
push
mov
addl
aas
mov
lea
jbe
pop
push
inc
les
dec
push
mov
test
das
loope
xchg
cmp
sbb
imul
lods
movsb
jo
dec
jl
adc
orl
pop
jmp
pop
adc
outsl
outsb
pusha
rcl
xchg
inc
inc
psubb
cmp
xchg
mov
pop
mov
in
movsl
xchg
jbe
xchg
leave
xor
push
subl
out
add
fcoml
hlt
loope
add
ds
or
cmc
pop
icebp
outsl
push
sahf
insl
pushf
mov
ret
movsl
inc
lahf
or
xor
lock
adc
inc
shll
mov
imul
pop
adc
pop
sarl
mov
addl
xor
push
mov
clc
xlat
fnstcw
xchg
or
jo
push
inc
xchg
lcall
lahf
mov
and
or
adcb
jl
pop
cmp
jns
jno
add
repz
sbb
push
or
insb
rolb
scas
jno
inc
cmp
jecxz
mov
ret
imul
inc
scas
dec
mov
addr16
cli
mov
jnp
adc
inc
sbb
add
loopne
mov
shlb
addr16
pop
das
push
lock
pop
sub
arpl
mov
lcall
pop
and
loope
notb
jo
xlat
or
push
dec
daa
scas
xchg
mov
xchg
frstor
scas
mov
hlt
lock
popf
inc
push
sbb
add
and
mov
mov
gs
jbe
cmp
jns
aad
or
cmpxchg
js
imul
roll
pop
test
mov
push
arpl
xlat
xchg
aad
lret
mov
push
sub
sbb
or
add
xchg
cld
fcompl
rol
push
inc
mov
lret
add
daa
xchg
addb
jno
mov
push
je
or
scas
push
repz
in
or
pop
mov
fisubrl
pusha
shlb
out
and
pop
xchg
inc
xchg
or
enter
pop
bound
xchg
insl
sub
push
dec
jge
jo
jbe
and
sbb
jno
cmp
stos
nop
rcrl
inc
pop
movsb
bound
push
sub
inc
cmp
push
test
mov
jl
adc
sbb
adc
cld
adc
xchg
mov
xchg
cmp
pop
pop
push
xor
outsl
les
aas
loope
pushf
test
xor
jno
or
push
ds
push
mov
clc
cmpsb
pop
pop
dec
gs
cmc
ficoml
sub
pusha
and
xor
orl
loope
and
mov
mov
mov
push
out
and
cmc
cli
add
xchg
mov
mov
add
loopne
imul
test
inc
sbb
inc
lds
ret
imul
stc
mov
in
mov
push
popa
adc
mov
aas
push
add
push
stc
out
fcmovnbe
scas
outsb
fcos
cmpsl
add
jge
in
js
pushf
dec
mov
sbb
rclb
scas
add
filds
pop
sbb
pop
hlt
cmp
xchg
mov
addr16
test
mov
jae
sahf
sub
loop
ljmp
test
icebp
sub
mov
xchg
sarl
jb
ds
jb
gs
addb
sub
mov
inc
dec
xorb
loope
leave
icebp
ljmp
sbb
or
cmp
push
push
testb
insl
sti
xchg
cwtl
adc
out
xchg
pop
jo
cmp
cmp
inc
ffree
jnp
pusha
or
mov
cli
mov
and
sbb
lcall
push
sarl
loop
jnp
inc
push
push
pop
cld
nop
dec
cmp
stc
xchg
sub
and
mov
or
or
cmc
jl
sub
mov
lcall
sub
add
jne
ds
adc
pop
mov
push
mov
sub
loopne
lods
les
xchg
fs
xor
jbe
jo
sub
cmpsb
inc
pusha
adc
dec
jmp
bound
mov
loop
pusha
lret
outsl
lahf
fimuls
outsb
dec
sbb
push
inc
pushf
mov
shll
jb
xorl
lcall
loope
out
into
cmp
xor
je
pop
and
cltd
in
push
scas
xchg
inc
clc
aas
gs
xchg
decb
jns
insb
adc
xchg
push
mov
leave
mov
pusha
xor
push
iret
hlt
test
sub
sub
fwait
xchg
and
mov
rcl
sbb
pop
xor
lods
test
push
mov
call
sbb
pop
cmp
test
cmp
mov
cmp
loopne
push
push
imul
fisubl
rcll
add
jecxz
xor
imull
or
loope
shlb
add
pop
gs
jbe
imul
sub
pop
loope
aas
inc
in
outsl
call
fld1
data16
xchg
cld
push
test
jbe
pushl
and
adc
lods
fadd
inc
add
pop
xor
ds
jno
jo
sbb
cmp
jmp
cmpl
and
xchg
jmp
sub
test
xchg
jnp
inc
sub
or
cmp
out
jecxz
mov
repnz
lret
push
or
arpl
fists
or
movsl
idivl
sub
sub
add
sub
mov
imul
scas
leave
mov
fnstsw
adc
jge
mov
test
mov
inc
jo
icebp
push
sub
sub
push
sub
int3
push
adc
les
iret
sub
jp
pop
mov
cmpsl
inc
push
xor
js
shlb
popa
lock
push
xchg
int
sub
jno
or
mov
rcll
rclb
mov
mov
inc
sbb
jo
sbb
cs
xor
hlt
adcb
lcall
sbb
pop
push
popf
shrb
test
cmpsl
or
adcl
push
add
je
insb
ss
jmp
adc
hlt
jg
orl
pop
add
dec
ret
mov
into
cwtl
mov
rcl
in
incl
push
test
mov
mov
cld
xor
or
test
sar
insb
sbbl
xchg
or
hlt
cmpsb
and
inc
jno
mov
adc
and
adc
imul
mov
std
pop
mov
jle
repnz
sub
addl
js
lock
push
jbe
ljmp
and
xchg
outsb
pop
mov
cld
cld
sbb
and
adc
insb
cmpsb
icebp
adc
inc
hlt
fmuls
cld
loopne
sbb
jg
pop
push
inc
fdivs
pop
inc
or
incb
les
or
pop
loope
mov
ret
jae
sub
mov
jp
out
push
lahf
js
fwait
lock
andb
jmp
xor
sbb
sbb
push
mov
sub
lods
fmuls
outsb
push
mov
test
add
and
stos
imul
out
icebp
stos
nop
xchg
jne
rcl
ss
loope
jmp
test
cmp
mov
jne
inc
loopne
jnp
xor
push
lods
jle
xor
cmp
aad
sbb
dec
inc
adc
mov
add
xchg
ss
insb
or
and
rol
push
xorl
dec
lods
lret
inc
lds
ljmp
fisttpl
mov
fisttps
and
sub
pop
cs
mov
mov
sub
mov
xor
enter
pop
les
jge
aas
frstor
jg
in
rorl
rclb
test
ljmp
frstor
ficoml
fldt
dec
in
sub
mov
call
mov
iret
ficoms
sbb
test
cli
add
int
stc
add
lods
add
jp
cld
dec
sub
in
xchg
js
fldl
lret
inc
cltd
mov
push
aad
decl
loopne
mov
xor
add
lcall
jge
mov
add
rolb
ds
out
or
push
pop
sbb
aaa
pop
ljmp
add
add
mov
inc
push
xchg
mov
test
adc
and
in
xchg
lds
xor
sub
stc
jo
or
rcl
push
pop
arpl
cltd
adc
out
rclb
or
mov
test
daa
mov
sub
adc
add
out
mov
mov
and
jno
jmp
js
jecxz
inc
xchg
xlat
ljmp
testl
fsubs
rcrl
ljmp
shlb
js
inc
xchg
mov
pop
add
pop
sbb
pop
ds
das
lret
mov
push
ds
or
push
add
pop
cmpsb
pop
into
add
mov
or
add
shlb
push
divb
movsl
xchg
xorl
push
leave
adc
imul
in
xorl
pusha
xchg
rcrb
cli
add
push
pop
fsubrl
decl
inc
lock
xor
mov
pusha
mov
pop
loop
xchg
stos
xchg
jle
subl
and
mov
push
or
pop
fiaddl
dec
out
out
xchg
push
pop
arpl
mov
fmuls
jl
jg
xchg
push
cmp
inc
add
push
push
sbbb
jbe
es
jle
fs
adc
clc
lahf
sub
cmp
sub
mov
xchg
pop
insb
mov
aas
call
dec
mov
add
mov
jno
xor
and
mov
sbb
js
add
jmp
hlt
sti
dec
cmp
ret
inc
mov
jb
movsl
popa
dec
rclb
push
cld
adc
or
pusha
pop
fmul
je
or
xor
or
cs
insb
bndldx
xorb
call
mov
loop
popf
js
cmpsl
mov
les
pop
js
mov
mov
xchg
gs
cmpsb
sub
add
xor
cs
or
jae
ljmp
aad
mov
and
scas
push
xor
pop
push
fistl
add
or
ret
dec
das
inc
xor
xor
sub
dec
mov
negb
js
subb
mov
pusha
rorb
out
adc
pop
cmp
loope
jle
insl
stos
adc
pop
popl
xor
in
ja
loop
call
jmp
sbb
fiaddl
mov
idiv
lcall
icebp
add
pop
aaa
mov
fs
lock
cmp
push
rcll
mov
lods
or
sub
jecxz
xor
inc
adc
mov
mov
leave
or
xor
xchg
push
std
adc
cli
adc
shlb
int
pop
ja
dec
pop
adc
xor
push
mov
or
inc
mov
adc
or
ret
out
out
orb
movsl
xchg
stos
rclb
or
sub
jg
inc
dec
loope
std
insl
mov
adc
insl
sbb
jnp
ljmp
push
lds
inc
xchg
imul
fisubrl
mov
sarb
xchg
andl
cltd
cmpsb
rorb
es
push
inc
sub
dec
inc
cmp
cwtl
inc
and
mov
addb
movsl
jle
ss
xor
xchg
or
enter
jle
rcll
jns
call
imul
data16
call
mov
pop
lret
loope
mov
into
adc
loope
push
and
jl
xor
mov
imul
cli
xchg
aaa
std
cmp
sarb
ret
ds
aad
mov
fidivs
js
test
loop
sbb
jbe
xor
jo
fmulp
cmpsl
nop
aas
adc
mov
subl
push
or
push
loopne
mov
push
push
fimull
adc
cli
dec
mov
fnstenv
inc
loopne
add
pop
push
loop
push
pop
mov
es
adc
inc
add
add
sub
scas
or
mov
mov
mov
dec
push
mov
rorl
dec
xorb
shlb
sbb
loope
repnz
jl
or
push
test
and
xor
std
pusha
out
xchg
push
jb
dec
into
push
jle
adc
sub
fs
mov
mov
lods
imul
inc
stc
xchg
mov
outsb
xchg
push
pusha
popa
jb
lcall
test
jae
pop
in
mov
add
inc
xchg
dec
jb
fcomps
and
sarb
lcall
sbb
mov
dec
pop
bound
inc
daa
loopne
push
jo
imul
add
mov
inc
arpl
mov
inc
scas
xchg
jp
or
clc
inc
push
repnz
cwtl
xor
movl
mov
mov
adc
icebp
jp
inc
sub
ljmp
into
mov
adc
xchg
lcall
xchg
test
push
mov
lods
mov
mov
clc
dec
push
std
push
fists
dec
push
mov
inc
inc
jl
dec
mov
cltd
adc
pop
sub
jle
insl
dec
cmp
push
ds
test
jle
mov
cmp
jns
outsl
lods
hlt
outsb
aad
inc
in
scas
movsb
add
or
adc
dec
addl
xor
adc
mov
mov
fldcw
outsl
add
loop
push
shr
or
add
sti
dec
movsb
fstl
add
pop
iret
add
jno
add
push
sub
jp
jle
rorb
cltd
in
dec
movb
dec
jmp
mov
repnz
mov
jnp
cli
mov
or
and
sub
ja
sbb
ds
int3
hlt
je
lret
cmp
insb
mov
ret
je
lcall
jo
xor
adc
cmp
jp
mov
xchg
pop
popa
ficomps
pop
out
movsb
xor
pop
cli
mov
lock
xlat
xchg
xchg
jno
jo
mov
sub
dec
je
loopne
push
je
inc
mov
shll
inc
mov
adc
test
add
adc
inc
ficompl
sarb
fcomi
sahf
cmp
jg
nop
push
out
cwtl
and
push
sbb
in
sbb
push
sbb
or
je
decl
push
and
test
sub
sub
sbb
mov
xchg
cmc
inc
imul
or
fdivl
cli
repz
shlb
and
xchg
shlb
mov
sahf
push
cmpsb
add
add
mov
push
inc
and
repnz
fimull
fs
pop
add
pop
loopne
and
lcall
ret
push
out
cli
mov
call
out
repnz
loopne
icebp
mov
jl
xor
xor
js
adc
in
and
call
push
les
stos
pop
outsl
fcoms
xchg
mov
rorb
mov
adc
clc
scas
or
push
enter
inc
nop
imul
sub
cmovle
or
lar
nop
aam
push
jecxz
push
hlt
mov
mov
mov
nop
flds
add
and
pop
outsl
adcb
scas
data16
xor
inc
or
insb
mov
and
xlat
or
xchg
jb
es
fdivs
or
dec
or
push
lea
cmp
add
call
push
divl
push
or
mov
mov
pushf
xchg
xor
jp
data16
rcl
inc
inc
cld
push
mov
inc
push
xchg
rclb
pushf
rcrb
dec
iret
in
xor
negb
jnp
stos
les
aam
test
sbb
lock
push
mov
cmp
ds
aaa
adc
stos
mov
ss
fmul
ds
and
push
sti
jae
ljmp
js
data16
lods
bnd
sbb
add
addr16
adc
orb
mov
rorb
cld
jp
imul
sub
test
sbb
and
adc
and
adc
push
dec
pop
sbb
ficoml
aaa
pusha
mov
xor
decb
rorb
orb
cmp
jle
sbb
lds
jmp
jns
and
test
mov
xchg
sbb
into
mov
dec
sub
mov
stos
fbld
sbb
cli
int
fcmovu
stos
movsb
out
push
pop
jl
fiadds
mov
sub
mov
enter
and
lahf
mov
and
or
fisttpl
cmpb
jbe
dec
fstpt
ficoms
push
mov
pop
add
stos
inc
inc
adc
decl
js
push
rclb
daa
arpl
jge
xchg
scas
out
mov
dec
sar
lcall
mov
in
mov
fistpl
push
fadd
adc
jp
decb
push
mov
loopne
sahf
jp
fiaddl
arpl
push
test
or
jo
mov
mov
xor
into
in
clc
push
ljmp
loopne,pn
test
into
jg
loope
mov
cltd
lret
out
xchg
enter
sahf
inc
jns
out
fnstsw
fisubrl
ss
jle
jl
mov
nop
out
or
outsb
sub
and
xchg
stos
pusha
lods
test
out
aam
cmp
cmp
push
adc
push
int3
inc
xor
mov
in
push
fisubs
sbb
pop
inc
in
pop
sub
pop
imul
fsubrs
sbb
sbb
and
ss
push
enter
std
jp
sbb
inc
push
and
into
ror
xor
or
xorb
test
and
or
loopne
sbbl
sub
push
jl
rcrb
sub
inc
ljmp
push
add
xchg
shl
xor
cld
pop
bound
hlt
bound
jns
leave
jo
mov
js
insl
ret
mov
cwtl
mov
stos
add
dec
pop
insl
dec
jbe
jns
std
or
xor
push
mov
add
ss
push
andb
pusha
stos
mov
mov
movsl
push
pushf
hlt
jae
adc
ss
lret
lcall
std
mov
test
sarb
cmpsb
and
sub
inc
data16
and
mov
dec
out
js
and
sbb
int3
inc
xor
das
loopne
add
xor
cli
sub
ljmp
inc
sbb
inc
addb
fildll
xlat
mov
sub
fnsave
push
andb
xchg
pusha
pop
pop
add
push
addb
rorl
dec
jne
inc
jp
ret
lock
mov
pop
cmpsl
and
aas
mov
xchg
lock
mov
aam
gs
std
addl
push
divb
cli
sub
rolb
lods
pop
xchg
testb
jne
mov
pushf
adc
pop
rorb
cmpsb
ds
loope
or
and
pop
out
push
fadds
insl
cmp
jmp
mov
jae
cld
loopne
mov
cmp
push
mov
je
outsb
dec
push
loopne
ss
in
mov
pop
pop
jne
push
or
call
mov
movsb
leave
xchg
mov
push
cmp
jbe
or
les
push
clc
les
jmp
jle
enter
mov
div
add
cs
mov
dec
adc
lcall
mov
enter
test
shlb
es
dec
dec
lahf
pop
pop
shlb
cmp
bound
cmp
and
xor
or
das
decb
add
ret
jmp
inc
mov
sub
add
sbb
inc
mov
stos
ss
push
shrb
popf
xor
jl
cmp
xchg
inc
jp
je
in
inc
push
cmp
test
sub
jle
xchg
inc
mov
adc
lret
mov
push
push
jecxz
adc
aaa
pop
mov
insl
movsbl
sbb
push
sub
rcrl
mov
cs
pop
rclb
cli
lock
push
mov
loope
sub
es
inc
pop
loopne
mov
push
insb
mov
dec
pusha
ret
mov
ret
or
fiadds
dec
push
ds
jno
jl
enter
loopne,pn
xor
aad
or
cmpsb
pop
mov
or
loope
cwtl
jp
or
xchg
push
in
xchg
jmp
je,pn
mov
inc
sti
xchg
clc
jbe
filds
sbb
mov
cmp
cmp
or
pop
push
and
mov
sti
sub
mov
mov
push
and
leave
xchg
fidivrl
mov
les
dec
sbb
xchg
mov
mov
rcrb
test
mov
lcall
fs
sub
xchg
push
pop
insl
dec
inc
inc
push
sbb
movsb
testb
dec
aaa
stos
lods
push
jbe
dec
push
cmp
mov
std
repz
lahf
add
push
insb
mov
jle
mov
mov
in
mov
and
xchg
scas
enter
jle
nop
rolb
adc
faddl
add
call
pop
pushf
shll
cmpsb
fiadds
or
cmp
or
adc
mov
adc
clc
ljmp
xor
lock
and
loopne
fisttpl
xchg
bts
mov
mov
inc
mov
cmp
cmpsb
in
or
in
loopne
rolb
lods
dec
push
shr
aaa
sbb
or
add
loope
xchg
adc
mov
inc
mov
in
add
lret
lcall
enter
xor
jno
negb
and
addb
mov
push
add
stc
loope
cmc
xlat
ss
sbb
add
mov
adc
and
pop
repz
push
push
aaa
jl
adc
cmpsb
jbe
data16
pop
jl
push
or
cmpl
xor
fsubrs
mov
mov
fwait
jae
aaa
push
out
stos
out
call
push
pop
mov
in
xchg
cmpsb
mov
aam
xlat
sbbl
addl
orl
repz
test
bnd
dec
loop
leave
ret
call
push
mov
or
imulb
out
xchg
lahf
std
mov
ss
inc
xor
add
fadds
add
dec
test
shrl
cmpb
test
cld
sbb
jmp
rcl
mov
dec
and
shrb
shl
add
aaa
or
inc
jl
out
jne
je
ljmp
mov
lds
cmp
das
loopne
xchg
mov
xchg
push
popa
pusha
sbb
push
fmull
mov
jecxz
pusha
push
xor
cmp
or
xorb
test
mull
hlt
aaa
in
push
sbb
xlat
lock
test
mov
test
and
int
mov
pop
pusha
loopne
xchg
xchg
cli
loope
inc
mov
xchg
xor
iret
cmp
in
xor
pop
add
sahf
fcmovnu
mov
push
inc
int
dec
sbb
xchg
xchg
lcall
out
shrb
push
jmp
mov
pop
adc
sub
jg
dec
enter
and
pusha
mov
fmull
fidivrl
jae
out
inc
dec
frstor
push
pop
xchg
or
mov
add
subl
lods
pop
lock
loope
pop
pop
mov
mov
insb
cmp
mov
out
lret
xchg
adc
lea
bound
jns
pop
cmp
lds
mov
dec
cmp
repnz
or
sbb
push
adc
stos
or
inc
outsb
add
xor
dec
xor
add
push
call
add
adc
rolb
add
xor
adc
sbb
push
adc
clc
hlt
pop
mov
push
repz
inc
mov
inc
fnstenv
pop
std
pop
xorl
fsubs
or
add
jp,pn
sbb
cmp
lods
pop
in
or
xchg
mov
mov
out
fs
js
sub
cmpsb
mov
sbb
movsl
sahf
mov
hlt
or
xor
sbb
push
add
fnstenv
lahf
sti
sahf
mov
pop
cwtl
popf
fdivr
dec
and
sub
sub
out
cmpsl
pop
jne
mov
loopne
add
cmp
test
loopne
push
hlt
scas
aaa
or
sbb
nop
and
and
cmc
imulb
popa
sbb
test
inc
fisubl
fdivrs
cmp
pop
mov
subb
rorb
es
fcom
inc
mov
shrl
jle
andl
push
cli
lcall
adc
fmuls
sbb
or
push
add
in
cmc
negl
inc
ret
jb
mov
pop
jle
mov
sbb
mov
add
fwait
popa
push
dec
mov
nop
std
iret
jmp
sub
std
jbe
xchg
inc
sub
cmp
jp
and
pop
ss
mov
je
test
pushf
sub
inc
clc
dec
adc
jmp
adc
push
mov
sub
mov
sbb
add
mov
ficompl
jp
sbb
dec
mov
iret
shll
popa
cmp
mov
push
insb
jle
pop
jo
repnz
and
sbb
inc
xchg
ss
repnz
rorb
push
mov
rorb
xor
clc
adc
aam
or
in
or
cmp
adc
lock
imul
mov
dec
loop
and
inc
les
sub
lcall
cmp
adc
into
dec
lock
out
cmpb
fsubrs
mov
pop
je
inc
push
jmp
ret
add
inc
mov
mov
ret
shll
jbe
gs
pop
inc
and
pusha
mov
cli
jl
add
inc
push
push
inc
out
jne
shll
outsb
dec
lahf
and
rorb
sub
xor
js
dec
rol
mov
jno
enter
insl
iret
scas
jl
push
push
push
nop
jle
js
inc
inc
mov
pop
cli
fwait
ljmp
loop
shl
mul
scas
ss
mov
dec
xchg
int3
dec
ljmp
xor
sbbl
push
fisttps
outsl
les
mov
outsl
jb
add
pop
and
aad
icebp
mov
cmp
cmc
push
add
mov
sbb
mov
push
stos
adc
fstl
lods
in
mov
jg
sub
roll
mov
dec
je
pusha
into
cld
cmp
adc
js
enter
push
ret
aas
or
adc
fisubs
mov
shlb
je
xor
or
or
fwait
clc
das
loop
and
sub
xchg
xchg
js
test
xchg
jb
xor
xchg
sbb
aas
push
xchg
push
or
push
jl
icebp
shl
mov
pop
add
outsb
mov
inc
decl
clc
imul
jg
cltd
push
cltd
jo
xor
stos
jnp
mov
loop
jl
jno
and
sbb
movsl
sub
sub
jp
pop
sar
cli
ror
pop
adc
pslld
mov
sbb
scas
xlat
sbbb
stos
pop
cmc
movsb
pop
lods
mov
mov
mov
ret
xchg
dec
imul
das
insb
rolb
xchg
scas
cmp
pop
das
and
mov
inc
sbb
jl
ret
jg
fisubl
add
sbb
pushf
iret
jge
pop
jno
popf
dec
mov
enter
test
mov
push
mov
push
rcll
loope
call
pop
mov
pusha
lods
in
push
imul
sbb
mov
jo
insl
xlat
ret
stos
xor
aam
and
test
loop
xchg
sbb
outsb
sbb
xchg
push
iret
pop
sub
aaa
test
mov
fwait
or
push
cltd
popf
dec
jmp
pop
sbb
shr
sub
pop
in
mov
lods
imul
pop
mov
pop
cwtl
mov
or
add
jle
mov
and
lea
jp
inc
push
adc
ljmp
dec
pop
imulb
xor
fnstcw
andl
push
cs
add
jo
mov
push
jmp
fadds
pop
repz
mov
or
rep
inc
ret
loope
xchg
mov
pushf
push
sbb
stc
mov
inc
ja
dec
and
ficompl
imulb
push
cmp
into
lods
dec
clc
negl
loop
das
xchg
jg
imul
jge
sbb
pop
or
fidivl
lret
mov
xor
outsl
sub
push
mov
or
jo
movsl
adc
mov
pusha
fsubs
es
sbb
clc
clc
pop
pop
ficomps
pop
sahf
cmp
bound
jns,pt
lret
mov
jge
jno
mov
adc
sarl
inc
pop
dec
mov
sbb
dec
jmp
rol
subb
ljmp
dec
xlat
pop
dec
fdivs
inc
or
sbb
aaa
stos
sub
movsb
adc
cmp
sbb
cld
push
jno
fildll
das
cmc
mov
divb
popf
push
or
adc
cmc
pop
add
mov
jmp
sbb
jmp
fstpt
mov
ret
push
xchg
add
cmc
rcrl
loop
add
psrlq
mov
cmpsl
rcrb
jmp
shlb
stos
lods
push
xchg
push
jns
mov
inc
xchg
mov
push
test
mov
mov
push
stos
es
sbbb
fldcw
pop
int3
fwait
mov
ja
jecxz
push
or
jg
call
mov
pop
pop
fdivrs
inc
jmp
push
mov
mov
loop
push
je
xchg
mov
adc
pop
movsl
ficoml
rcll
mov
in
mov
dec
sbb
pusha
push
mov
mov
cmpl
mov
inc
icebp
jno
shrb
lock
cmc
repz
xor
mov
sahf
out
add
insl
mov
jnp
shlb
sbb
push
xchg
dec
nop
mov
and
push
lcall
xor
lds
mov
std
cli
mov
mov
xlat
fwait
dec
mov
xchg
clc
inc
or
shlb
cmpsb
inc
add
mov
pop
movsl
push
mov
stos
xchg
jp
fwait
mov
cs
adc
adc
sar
fstpt
fists
mov
in
loopne
xor
or
dec
or
xor
rclb
dec
addl
lock
push
shrl
fstps
adc
dec
shll
movsl
push
sbb
and
jmp
add
bound
lret
jno
mov
mov
push
inc
mov
inc
add
sbb
test
add
loope
inc
inc
mov
pop
clc
pushf
dec
inc
xchg
fistl
dec
setle
and
mov
shl
arpl
fldenv
lahf
push
fiadds
movb
cmc
aad
andl
test
jmp
push
sbb
dec
jns
push
xchg
add
enter
sub
int3
test
push
mov
insl
and
mov
lcall
sahf
cwtl
xchg
jns
jns
cmp
mov
and
cmp
pop
cld
lcall
inc
inc
push
mov
lock
je
or
int
les
sub
ret
rcll
mov
inc
pop
push
xlat
into
lret
dec
fmul
int3
or
push
jo
iret
jb
iret
sbb
jo
mov
adc
andb
and
test
adc
sbb
push
or
push
adc
dec
sub
and
jne
xlat
add
pusha
ja
scas
dec
aam
mov
ljmp
aam
int3
insb
push
pop
and
inc
mov
sbb
mov
adc
call
test
xlat
push
lods
ja
mov
push
out
inc
push
je
std
icebp
mov
mov
imulb
mov
mov
fs
int3
inc
js
inc
in
ret
lcall
icebp
hlt
ss
pop
adc
xor
sbb
stos
lods
loopne,pn
loope
inc
movsl
in
mov
sbb
mov
sub
xor
xor
ret
sti
loop
stos
mov
or
scas
jno
or
idivb
dec
inc
mov
out
mov
push
ret
jae
addr16
lea
sub
clc
mov
iret
adc
or
sub
out
scas
mov
jae
in
mov
dec
shr
cmpl
subb
and
push
inc
dec
mov
or
pop
into
push
and
xchg
inc
or
pusha
mov
mov
repz
add
dec
insl
test
inc
sbb
shrb
and
into
sub
cmpl
aam
lea
lcall
lods
ja
js
and
fadds
idivb
inc
push
push
sbb
jecxz
jp
fiadds
xchg
mov
shr
dec
in
add
sub
fwait
imul
out
fidivs
or
pop
lock
xchg
arpl
pop
fdivr
pop
mov
push
fildl
ret
stos
adc
and
sub
pop
cltd
inc
mov
stos
sbb
aas
movsl
stos
jb
adc
inc
cmp
cmp
clc
xor
push
lcall
lea
cmp
jmp
mov
mov
jmp
pop
cli
mov
sbb
pusha
cmp
dec
adc
sub
cmp
loopne
mov
jo
lds
push
je
sub
clc
xchg
bound
cmp
es
mov
pop
fcomp
xor
rcl
sahf
lock
jecxz
icebp
and
cmp
mov
popl
push
pop
push
push
pop
jbe
dec
aam
rcrb
sub
pop
mov
mov
js
test
subb
pop
mov
fwait
insb
aad
or
mov
sub
jns
movsl
dec
cmp
ret
cmp
sbb
cmpsl
push
dec
fs
mov
lea
arpl
sub
call
ljmp
ret
daa
push
lcall
aaa
push
repz
sbb
lods
push
xchg
sarb
sbbb
push
fwait
cmpsb
adc
in
mov
les
xchg
pusha
inc
repz
jno
pop
inc
ret
ficompl
and
sarl
rorl
mov
sahf
cltd
insb
lods
sbb
fiaddl
insb
cmpb
pop
fcompl
fldenv
sbb
dec
jp
mov
adc
push
in
mov
adc
leave
xchg
mov
push
xchg
mov
aaa
loopne
lods
dec
outsl
or
dec
xchg
sub
mov
popa
xchg
or
xchg
call
inc
inc
cmp
push
push
inc
cmp
inc
cmp
jp
es
and
fldlg2
icebp
dec
es
sbb
mov
jo
popf
add
hlt
ret
or
push
mov
sub
inc
push
jb
xchg
or
mov
push
xor
pop
lods
fiadds
fcmovnu
push
arpl
rorb
dec
test
or
pop
jne
add
ss
dec
je
fldl
cmp
xchg
xor
and
ljmp
jge
push
sbb
leave
lock
mov
or
inc
jnp
lods
ret
shr
pop
das
loope
loopne
js
das
or
sub
push
loope
inc
in
xchg
into
inc
gs
mov
adc
adc
je
test
aad
pop
iret
lods
dec
stos
xor
xor
or
psubq
cs
popa
cmp
xlat
push
dec
loopne
shl
cmc
aad
cmp
gs
in
mov
ljmp
jno
jl
les
lock
inc
js
lock
pushf
jnp
rol
and
mov
jo
cmpsb
scas
int3
xchg
cmp
or
dec
shl
jl
pop
mov
sbb
cmp
jle
push
add
add
mov
sub
mov
and
arpl
test
cmp
push
cs
clc
jnp
leave
inc
movl
rcr
test
dec
add
bound
repnz
sahf
mov
mov
shrb
ds
insb
insl
ds
pop
mov
ss
pusha
pushf
icebp
sub
outsl
adc
xor
jecxz
push
dec
lcall
adc
das
xchg
mov
test
leave
shr
and
lods
loop
nop
sbb
pop
orb
cld
push
scas
adc
dec
sbb
add
loope
test
pop
jecxz
xchg
jne
xlat
jle
in
iret
and
stos
sub
in
jecxz
sbb
sub
loop
lret
test
out
test
test
ja
mov
mov
cmpsb
cld
dec
cmc
mov
cltd
inc
scas
cs
inc
sti
and
mov
setge
mov
rcll
test
incl
jno
adc
sbb
or
hlt
cmp
pop
add
mov
mov
call
into
sbb
es
ficoms
mov
sub
out
test
cmpsl
aaa
push
adc
test
sti
mov
pushf
int3
out
int3
rclb
adc
inc
je
rcl
push
inc
cltd
das
mov
inc
repz
leave
cld
mov
sbb
mov
xchg
and
pop
lcall
push
repnz
cmpsl
jge
adc
rcrb
push
and
int3
push
out
and
mov
xlat
mov
inc
test
or
dec
or
stc
cmp
pop
mov
xchg
mov
and
ljmp
fsts
aas
xchg
cmc
loope
arpl
fcmovu
ret
cmpsl
push
mov
in
loope
mov
shrb
es
test
jmp
and
adc
stc
mov
sbb
int
mov
out
div
enter
adc
cmp
add
cmp
scas
sbb
dec
decl
mov
adc
mov
scas
mov
or
push
pop
xor
in
or
xor
popa
sub
push
bound
jnp
mov
xor
push
push
scas
dec
inc
dec
push
mov
fcmovnb
fwait
push
fs
les
pop
mov
dec
push
test
push
and
pminub
xorl
clc
imul
inc
test
mov
jnp
pushl
mov
lea
push
leave
pop
jo
add
xor
cmp
jl
cmp
fdiv
and
mov
or
push
fwait
adc
ret
fdivrp
adcl
rcrl
repnz
rorb
aaa
inc
es
pop
fstpl
push
sahf
out
inc
adc
lea
clc
mov
test
ss
test
fwait
push
pop
mov
inc
adc
test
jbe
dec
subl
or
jp
hlt
mov
stos
test
test
scas
nop
inc
adc
mov
decl
or
add
rol
rcll
mov
adc
mov
in
std
es
orl
xchg
mov
out
or
jle
into
or
add
fwait
inc
jp
ds
mov
xchg
sti
lcall
cmp
push
movsb
jae
pusha
imul
loop
adc
push
imul
loope
orb
sub
sub
cmp
or
lock
dec
jle
ret
out
sub
inc
mov
rorl
sbb
cs
inc
dec
add
mov
sub
mov
and
jb
insl
jp
sub
pop
ror
mov
out
repz
fnstsw
dec
insb
push
mov
xor
mov
sbb
or
loop
mov
sbbb
xchg
add
xchg
out
mov
push
ret
ret
cmp
test
cld
pushl
mov
aam
push
or
pop
add
test
xor
mov
mov
rolb
lahf
test
sbb
cs
dec
inc
add
pop
sub
sbb
pushf
sbb
lcall
sub
jp
add
mov
jmp
faddl
in
rclb
aad
stos
lods
mov
or
movsb
sbb
add
in
xchg
xor
inc
adc
push
jbe
into
daa
clc
mov
adc
xor
dec
rorb
shrl
dec
jp
mov
inc
or
pop
ret
clc
iret
mov
imul
xchg
leave
mov
mov
xor
or
or
push
inc
pop
cmpsl
fwait
add
movsb
adc
shlb
roll
push
jle
popa
cmp
jge
pop
add
lcall
sub
ret
outsb
mov
test
add
xchg
inc
das
fcmovnu
aas
popa
push
jl
sub
bound
cmpsb
insb
test
das
sub
pop
push
scas
push
xor
add
inc
scas
test
std
sbb
lcall
cmpsb
cli
sbb
ret
dec
pop
adc
mov
cld
pop
jno
bound
jnp
inc
enter
div
sbb
push
jno
stos
inc
roll
dec
test
js
les
lock
andb
sti
inc
pop
popa
cmp
mov
lcall
rcr
imul
add
ljmp
ss
fsubrp
adc
orl
testl
inc
sbb
pop
cmp
push
xor
adc
cmp
lcall
cmc
cmp
movsl
xchg
cld
lods
lret
push
call
cmpsb
pushf
jmp
pop
xorb
loopne
addb
xchg
xchg
movsb
fs
icebp
shrb
mov
ljmp
mov
loopne
add
adc
xorb
jae
mov
clc
jo
stc
cmc
je
mov
call
mov
lock
test
xchg
inc
std
nop
cs
in
aaa
icebp
push
out
insl
scas
xchg
lock
fisubs
or
or
mov
push
push
fs
fldcw
sbb
cmp
mov
shlb
sbb
inc
xchg
es
push
jnp
or
ror
xor
fcompl
test
mov
cmp
lea
adc
es
movsl
inc
sub
dec
adc
mov
outsb
push
pusha
dec
xchg
jl
outsb
mov
push
nop
cmp
pop
sub
loopne
mov
xor
scas
std
jp
call
jno
and
inc
jecxz
adc
or
es
add
mov
fs
ret
sbb
ss
jns
ret
or
lahf
stos
pop
shlb
add
or
clc
pinsrw
ljmp
cmp
pushl
ljmp
push
sbb
and
hlt
dec
jno
jbe
inc
xor
es
xchg
push
loop
loope
std
orl
pop
sub
lret
mov
dec
cmp
ja
mulb
xchg
dec
loopne
js
sbb
mov
jl
loopne
mov
jle
cli
cmp
in
ss
es
xor
xchg
mov
lock
pop
push
data16
lret
scas
add
inc
insb
sub
in
mov
cli
sub
ds
and
clc
or
push
test
insb
stos
pop
mov
sub
clc
push
pop
xor
jge
mov
jecxz
jbe
pushf
je
movsl
lret
test
sahf
push
push
sbbb
lret
mov
cwtl
inc
stc
dec
mov
pop
in
in
xor
mov
sub
adc
movsb
orb
add
push
push
in
pop
mov
scas
js
out
loopne
int3
xchg
shlb
inc
xor
mov
cmpsb
pop
rcrb
addr16
loop
pop
scas
push
std
xor
mov
add
push
lea
cmp
aaa
sub
jo
xor
fistps
mov
les
ds
sub
mov
dec
pop
notb
insl
lods
mov
loope
testb
or
or
sbb
inc
jb
add
jge
mov
sub
sbb
hlt
bound
jmp
dec
xchg
jl,pn
xchg
into
jle
dec
loopne
sub
adcb
sbb
loopne
dec
popa
cmc
pushw
sbb
sbb
jo
add
xor
ljmp
inc
mov
adc
out
mov
xchg
mov
js
adc
push
push
sub
mov
enter
cmc
add
jae
xchg
mov
rcrl
pushf
mov
mov
cld
push
test
xchg
jmp
jg
pop
mov
outsb
fdivrl
mov
push
pminsw
int3
sub
inc
jnp
mov
testl
mov
ret
rcl
add
in
inc
xchg
mov
inc
lret
inc
push
sub
loopne
les
out
jmp
jnp
inc
shll
or
jo
push
rolb
stos
mov
rol
sbb
je
fwait
push
fnstenv
les
cmp
sbb
mov
or
fsubl
mov
sbb
mov
mov
loopne
mov
sub
dec
adc
mov
std
push
pop
in
dec
mov
sbb
icebp
xchg
add
mov
xchg
xchg
mov
push
pop
adc
ljmp
sbb
pop
add
mov
push
rol
arpl
mov
in
divl
and
inc
aam
or
xchg
add
hlt
push
add
and
and
inc
daa
or
inc
mov
cmp
push
xlat
or
insl
jnp
or
push
fisttpl
add
jo
add
cmpsl
shlb
call
pushf
cmp
jb
pop
or
dec
cwtl
and
or
scas
int3
enter
push
insl
adc
imulb
cmpb
inc
push
scas
mov
mov
ss
dec
sub
dec
imul
pop
pop
mov
sub
mov
aaa
xor
repnz
xchg
pop
add
cli
xchg
push
loope
adc
and
push
mov
test
push
xchg
ret
lret
ljmp
mov
cmpl
fimull
lods
data16
jmp
adc
adc
pop
inc
ds
mov
add
test
rcrb
push
adc
pushf
pop
mov
inc
dec
jne
and
das
movsl
scas
cli
ss
iret
lea
add
scas
xchg
and
mov
shlb
fimull
imul
lock
fists
into
call
outsl
lret
mov
int3
cmp
shll
sbb
and
mov
add
test
dec
cmp
dec
sub
cld
xchg
ds
mov
insb
into
xchg
insb
rolb
adc
adc
cmp
xor
js
lahf
ret
sbb
les
outsb
push
cwtl
jae
push
xchg
inc
mov
loopne
jecxz
fimuls
movl
flds
sub
rcrl
or
or
mov
xchg
jge
sbb
repnz
sti
dec
sbb
inc
fmuls
sub
add
in
or
adc
xor
mov
mov
sbb
jbe
testb
out
add
sub
push
sub
inc
xchg
nop
and
inc
addr16
stos
in
jmp
jne
and
jp
loop
ljmp
lods
ret
je
cmc
push
or
xor
inc
push
inc
mov
or
mov
jb
jae
jg
jp
fidivl
in
push
pop
lea
and
push
xchg
rorb
ds
xchg
orb
sub
mov
ljmp
xor
cmp
jl,pt
into
mov
jp
xchg
pop
pusha
hlt
cwtl
ja
je
dec
push
mov
inc
scas
fs
lock
adc
test
xchg
or
fwait
scas
clc
ljmp
fcoml
dec
loopne
add
outsb
lahf
mov
stos
dec
repnz
push
faddl
lea
ret
cmp
jmp
mov
call
and
adcb
fs
call
cmpsb
push
xlat
ret
xchg
dec
push
sbb
jne
xor
sbb
cmc
int3
or
push
pop
inc
in
ds
pop
ficompl
sahf
push
xchg
lcall
movsl
sahf
pop
inc
or
dec
xchg
roll
push
test
das
adc
sub
jecxz
jnp
cmp
sub
lds
stos
aam
ss
pop
call
mov
imul
cmp
jg
pop
lods
push
or
pop
test
and
adc
sub
aam
and
and
pop
mov
mov
and
cs
jmp
push
aaa
stos
inc
push
mov
or
dec
inc
mov
mov
sbb
inc
dec
loopne
pop
fs
fidivrs
add
dec
and
movsb
and
gs
mov
imul
fldl
insb
ret
push
addr16
fisubs
push
andb
fldl
cmp
fs
pop
enter
mov
adc
pop
inc
ds
pop
out
mov
icebp
add
cmp
add
ret
cmp
xor
lods
and
leave
add
inc
ror
js
xchg
cli
or
into
insb
and
call
xor
ja
lods
push
pop
push
mov
cli
mov
mov
cs
mov
shll
xorb
stos
lcall
lock
mov
or
cld
and
xchg
cs
sub
adc
sub
mov
add
dec
jmp
mov
mov
jg
pusha
mov
add
aad
popa
orl
cmp
mov
mov
clc
cwtl
call
push
mov
inc
insl
imul
jmp
mov
add
cmp
cmp
dec
pop
jo
es
aam
inc
sbb
or
leave
negb
xor
and
or
in
and
xchg
push
xor
mov
xor
add
roll
popf
jno
or
push
aas
icebp
pusha
test
fcmovu
sub
push
scas
dec
pop
inc
xor
add
arpl
loope
outsl
ljmp
push
cmp
push
push
push
clc
mov
fs
adc
stos
inc
fisubrs
push
enter
cmp
fmul
mov
add
mov
inc
cli
gs
inc
push
scas
or
clc
loop
mov
mov
xchg
add
inc
push
sti
cmp
jmp
ds
add
cmc
scas
cmpsl
and
sbb
jbe
pop
inc
add
in
sbb
sub
cmpsl
out
and
jo
scas
inc
mov
clc
outsl
repz
sbb
outsb
sub
sub
xor
stos
icebp
ret
push
clc
lods
lret
pop
mov
push
xor
loopne
adcb
aas
add
and
in
ds
push
sub
outsb
push
bnd
loope
rcl
xchg
cmp
call
popa
mov
pop
mov
outsl
adcb
xor
push
inc
test
cmp
pop
xchg
movsb
adc
loopne
mov
mov
mov
ds
push
fs
adc
addl
sti
jmp
add
jb
addl
ret
sub
roll
xor
mov
pop
lcall
hlt
pop
or
mov
mov
mov
jge
jo
dec
outsb
repz
mov
in
mov
rcrb
push
push
jmp
mov
loopne
fcomi
cmp
jbe
jnp
or
rorb
js
jo
leave
mov
out
shlb
js
dec
mov
lea
fnsetpm(287
cltd
xchg
out
stc
cld
repz
daa
mov
mov
add
cmp
xchg
jp
mov
sub
out
jb
jg
mov
and
cli
dec
jle
inc
jl
shl
mov
enter
push
in
push
jle
jmp
inc
lahf
add
push
sbbb
cmc
scas
aaa
cmc
push
cmpl
jb
rcll
lcall
ss
mov
sti
insb
cmp
sub
pop
hlt
xchg
inc
push
cmp
loopne
mov
test
pushf
inc
lea
lock
jl
fwait
int
lock
adc
ret
xchg
mov
je
scas
out
or
aaa
fs
and
in
lahf
jmp
add
out
mov
mov
mov
ret
pop
inc
in
outsb
push
mov
loopne
push
loope
pop
pop
pop
loopne
mov
push
lock
xchg
jo
sbb
fadds
stc
movsl
out
cwtl
sbb
dec
sbb
adc
or
pop
in
mov
inc
pushl
dec
inc
jp
mov
jp
out
xchg
cld
add
fnsave
dec
jecxz
in
jbe
mov
fwait
add
nop
out
je
dec
aas
mov
pop
cltd
insb
insl
push
frstor
movsb
xchg
sti
mov
or
mov
es
xchg
jnp
pop
sub
jl
mov
inc
rorb
imul
or
mov
shlb
cmove
rcl
xchg
ljmp
add
xlat
sub
push
xor
js
jne
inc
jno
loope
add
cmp
hlt
mov
xor
sub
adc
and
pop
mov
push
dec
mov
adc
mov
out
jno
mov
and
mov
test
insl
fsubs
stc
mov
and
jg
mov
mov
test
dec
push
mov
cltd
stos
add
and
adc
cmp
into
xor
aad
mov
push
adc
xor
ja
add
jp
mov
push
push
add
push
pop
leave
jg
outsb
mov
rolb
outsb
pop
jbe
dec
xchg
jmp
and
lahf
mov
xchg
pop
js
sub
jno
and
insl
inc
pop
and
mov
fsubrl
sub
clc
xor
jo
mov
rolb
mov
clc
and
inc
cmp
mov
ja
push
loop
pop
aam
mov
inc
sub
int
add
pushl
pop
imul
add
inc
mov
fmull
mov
push
loop
mov
sti
into
pop
enter
test
std
fidivl
fmuls
or
or
add
and
incl
movsl
fistpll
lret
mov
adc
push
fdivs
sbb
xor
jp
add
push
push
das
add
das
or
push
test
loope
push
stos
inc
cmpsl
lock
push
dec
jge
inc
adc
ja
inc
cld
cmc
outsb
loop
pop
jo
push
mov
jmp
lods
dec
hlt
popf
and
scas
dec
dec
inc
adc
loop
xor
push
clc
sbb
mov
rcr
sahf
in
flds
lcall
lods
adc
xchg
stos
dec
sub
les
orb
lds
mov
sub
loopne
inc
fdivp
pop
sbb
mov
dec
sahf
dec
xchg
lret
add
xchg
cwtl
ja
dec
push
sub
mov
ja
xor
shll
xchg
imul
js
cli
incb
mov
loopne
or
loopne
enter
rclb
xchg
cmpsb
mov
xor
pusha
icebp
loope
add
jle
jmp
inc
dec
aam
push
fistpl
ret
inc
jno
shrb
or
and
lods
rolb
pop
or
xchg
andb
mov
mov
xchg
stos
clc
mov
es
out
mov
loop
jecxz
add
mov
stos
in
jbe
subb
mov
out
leave
mov
sar
add
bound
adc
cmovb
daa
or
xchg
xor
je
push
xchg
into
xchg
into
adc
sbb
jl
push
subb
push
lods
jbe
setb
stos
cmc
data16
test
lahf
mov
insb
push
jnp
dec
test
mov
xchg
sti
aas
add
pop
movsl
xchg
imul
sbb
nop
push
imul
dec
fisttps
inc
mov
cmp
out
adc
inc
mov
cmpsl
adc
push
in
js
and
dec
fildl
cmpsl
shlb
add
and
lock
mov
push
test
adc
nop
ret
inc
xchg
jno
xor
adc
add
or
or
jmp
cmc
cmpsl
push
pop
popa
ret
pop
or
fdiv
mov
sub
fistpl
mov
cmp
sub
push
pop
push
lods
loopne
and
sbb
jl
cmpsb
inc
andl
int3
ja
mov
idivl
cmp
inc
add
lock
mov
inc
in
sahf
or
mov
xchg
iret
push
ss
xchg
jbe
movsl
scas
and
jge
push
fiadds
xchg
mov
cmp
lret
jle
fnstsw
lods
or
jbe
sub
ret
outsl
or
pushf
out
lea
xor
mov
dec
movsb
dec
jge
jp
shlb
mov
or
into
imul
lret
iret
mov
lds
sub
lods
inc
xchg
add
test
xor
adc
add
bound
and
push
shufps
mov
stos
inc
jl
lods
adc
push
fsubr
push
sub
push
loop
mov
xchg
push
jne
add
add
mov
aad
adc
pop
mov
jmp
scas
test
out
dec
ficomps
sub
mov
les
test
sub
jmp
xchg
dec
imul
adc
out
movsl
mov
js
dec
lods
mov
adc
pusha
insl
call
fsubp
cmp
pop
clc
inc
cmp
movsl
repnz
jns
jmp
dec
jg
out
mov
and
ja
mov
stos
mov
mov
add
inc
xor
mov
inc
jp
mov
loope
notl
cs
lds
inc
pop
cmpsb
out
cmpsb
push
loope
dec
jmp
mov
fstpt
loop
or
or
popf
xor
rcr
xchg
add
in
mov
mov
sub
pop
xlat
sbb
add
dec
sub
add
lahf
fimull
loop
lret
sub
popl
test
mov
inc
scas
popa
nop
stc
cli
dec
pop
ret
and
mov
cmc
aas
lret
push
or
mov
shll
jnp
mov
mov
out
scas
mov
xor
sub
cmpsb
mov
stos
ret
in
shlb
mov
testb
mov
or
and
or
das
push
add
jb
imul
addr16
inc
or
dec
loope
mov
jecxz
lea
jo
ret
add
push
xchg
xchg
cld
aaa
es
xchg
or
sbb
rcrl
xchg
xchg
mov
lcall
aad
gs
cmp
kxorb
adc
add
lret
inc
lret
or
dec
cli
pushf
push
sub
repnz
stc
mov
adc
mov
adc
scas
sahf
test
mov
pop
int
jge
hlt
daa
xorb
stc
ret
jecxz
mov
das
inc
or
dec
sbb
and
xor
test
sub
ss
xor
mov
shll
pusha
mov
subl
mov
lret
mov
test
out
inc
sub
fisubs
lea
xchg
mov
pusha
sub
cli
add
inc
mov
xchg
mov
sbb
push
ret
lcall
or
rorb
insl
popa
sub
rcrb
lahf
and
roll
mov
call
mov
jbe
int
mov
sbbl
les
xor
fsts
and
push
mov
hlt
lcall
jbe
xor
push
test
in
sbb
js
pushf
push
je
or
dec
jp
sub
cmpsb
outsb
fistps
scas
and
jnp
into
dec
ljmp
imul
cmp
jmp
cmc
push
je
pop
or
push
sub
repnz
dec
dec
mov
loopne
inc
popa
loopne
pop
daa
add
jo
loope
lock
loop
mov
loopne
jne
xor
aam
inc
fcompl
xchg
inc
sarb
pop
iret
hlt
or
or
popa
mov
adc
mov
push
jo
mov
stos
daa
and
fidivrl
sahf
mov
dec
daa
bound
sbb
or
inc
push
leave
jmp
mov
add
inc
fcmovb
idivb
lods
leave
and
lds
or
push
xchg
jo
inc
push
push
sub
imul
in
insb
mov
push
mov
or
adc
insl
mov
fsubp
shll
icebp
mov
int3
ljmp
dec
jmp
or
call
pop
or
mov
pop
and
push
fwait
adc
cmc
lret
xorb
mov
push
call
xchg
bound
or
push
mov
mov
sbb
jnp
outsb
cmp
ret
pop
xor
ds
outsb
fsubs
jo
out
loope
sub
out
hlt
mov
fwait
xorl
and
test
jb
adc
scas
popa
cwtl
outsb
push
and
popa
inc
sbb
mov
in
test
shll
data16
mov
cmpsl
jns
sub
pusha
idivb
pop
clc
cmp
test
jle
sub
push
insb
add
loopne
mov
or
movsl
scas
outsb
cs
shlb
inc
sub
jbe
jecxz
dec
sub
push
mov
rcrl
add
or
je
mov
out
cwtl
and
sub
mov
orl
xor
jl
test
addr16
xor
aas
inc
push
inc
adc
lcall
xor
pop
or
cmp
ficoms
cmp
add
aad
inc
test
cli
inc
push
flds
pop
dec
add
xor
xor
scas
cs
sbb
nop
repnz
imul
subb
cmpsl
push
aam
jp
dec
out
rcll
das
ds
sbb
leave
xchg
push
int3
cmp
mov
and
push
lea
push
subb
jnp
int3
ss
push
cmc
loop
mov
call
dec
push
mov
mov
popf
iret
sbb
decb
rcrl
sub
mov
or
repnz
cmp
outsb
pop
xor
jl
nop
pop
into
xchg
data16
or
les
in
jne
loopne
das
lods
pop
cwtl
cmp
pop
xchg
add
xchg
test
fisttpll
sub
lea
mov
jmp
and
dec
push
imul
aaa
movsl
mov
add
iret
aad
jp
cmp
cmp
mov
and
fnstenv
mov
mov
test
stc
aam
lock
xor
clc
mov
mov
ror
xor
dec
xchg
add
push
shll
mov
push
inc
sbb
jbe
clts
loop
inc
cmp
loop
pop
push
lock
pop
rorb
sbb
outsl
das
es
push
mov
mov
jno
fsubrl
pop
xor
jp
cmp
lods
pusha
pushf
orb
mov
mov
pop
jg
or
ret
stc
loopne
and
fbld
inc
lea
test
push
push
hlt
mov
dec
shrl
push
sub
adc
pop
add
push
mov
lcall
lods
push
jne
std
pop
je
inc
test
sti
shll
mov
ret
pop
push
xchg
push
pop
movsb
xchg
icebp
mov
xor
gs
ss
stos
in
push
mov
sbb
stos
in
inc
fdivl
insl
push
pop
inc
and
push
inc
sbb
mov
sub
or
rcrl
aas
or
rorl
push
jb
roll
in
jb
ret
cld
xlat
xchg
jnp
sbb
dec
or
lcall
sahf
lret
movsb
mov
sbb
cwtl
xor
sub
inc
dec
inc
xchg
filds
jmp
sub
movsb
in
mov
adcb
jecxz
dec
cmp
clc
mov
xchg
jge
or
hlt
movsb
pop
dec
add
popa
jge
roll
insl
ds
xchg
sbb
jb
test
or
jbe
xor
outsb
push
mov
or
jnp
shr
and
adc
pop
js
cmp
rcll
xchg
mov
mov
es
dec
and
cmpsb
push
add
aas
adc
sbb
pop
adc
jmp
mov
adc
pusha
push
xor
inc
mov
leave
mov
jmp
repnz
cmp
ss
sbb
in
cmp
sbb
int
pop
in
fwait
add
inc
out
loopne
jns
rcrb
scas
nop
inc
mov
pushf
mov
rorb
jl
mov
lret
xchg
xor
push
cmp
adc
sub
js
jno
jp
sti
cmc
je
pop
push
lret
lcall
fstps
or
jmp
xor
inc
ror
daa
mov
cltd
int
stos
add
sti
mov
mov
insl
dec
psrlw
es
mov
push
jecxz
pop
adcl
mov
lcall
and
aas
mov
and
sub
test
js
leave
hlt
xor
push
xor
enter
jp
ljmp
add
mov
popa
mov
xor
jno
push
lods
push
fdivs
and
mov
cmpsb
std
xor
push
aaa
sub
mov
push
out
push
call
shlb
push
movsl
inc
repz
dec
scas
mov
adc
or
mov
rorb
jecxz
enter
mov
xor
fldl
aaa
test
lcall
pop
test
and
jg
inc
mov
or
sbb
fildl
cli
lods
popa
xor
fwait
aas
push
sbb
cli
mov
lea
scas
clc
shrl
sbb
cli
fnstsw
push
shll
mov
push
fbstp
push
scas
dec
mov
xorl
cli
loopne
or
ficoml
lea
jecxz
mov
lret
call
les
add
xchg
adc
pop
sahf
test
or
sub
loope
add
inc
stc
jle
inc
outsl
dec
dec
adc
xchg
xchg
out
out
out
dec
inc
cmp
cltd
mov
jg
xchg
pop
clc
or
ljmp
das
xor
push
and
pop
std
pop
nop
pop
out
shll
sahf
pop
js
push
jnp
pop
sbb
out
add
or
rclb
sub
sub
and
repnz
es
aam
call
or
jo
pusha
mov
dec
not
add
fcoml
sbb
jl
fdivrs
add
mov
jae
mov
adc
fistps
jo
mov
movsb
test
xchg
pushf
adc
mov
mov
stos
push
sbb
pop
js
mov
sub
sbb
inc
aad
sarb
sbb
clc
loop
fcomi
ja
lods
int
pop
xchg
mov
inc
pop
adcl
dec
pop
mov
xorl
mov
rclb
jp
sub
adc
fnsave
inc
ret
mov
out
pop
ret
adc
push
pop
jg
mov
mov
xchg
mov
lock
data16
scas
add
jp
sbb
jl
repnz
mov
jge
xor
dec
cmp
pushf
fcmovbe
fiadds
cwtl
pop
and
enter
xor
aas
cmp
inc
arpl
inc
aaa
xchg
pop
adc
pop
aaa
sbb
inc
sub
pop
xchg
loopne
xchg
lcall
shlb
sbb
test
inc
iret
add
sub
push
or
outsl
mov
pusha
adc
fmulp
mov
or
mov
rcr
mov
add
adc
jb
inc
cli
int3
mov
outsb
pop
pop
lcall
scas
xor
cwtl
xor
iret
cmpsl
jo
mov
loope
or
in
jno
clc
push
sbb
pop
mov
adc
mov
shrb
ljmp
mov
dec
push
push
ret
clc
out
imul
sub
push
out
dec
mov
mov
jnp
test
rolb
mov
or
or
pop
js
pop
shlb
in
or
xor
out
cmpsb
xchg
das
inc
shrb
and
and
scas
fwait
pop
mov
adc
jnp
add
push
adc
outsl
mov
pop
jae
mov
or
xchg
mov
mov
or
and
dec
push
jg
cs
movsl
sbb
dec
insb
test
mov
and
xchg
popa
inc
or
cmp
std
jo
sbbb
sbb
iret
or
add
out
movsl
pop
aaa
imul
sbb
push
push
popf
stos
xchg
adc
cmc
call
nop
bound
imul
nop
rolb
and
int
sbb
mov
sbb
xchg
or
cmpsb
pop
scas
movsb
mov
mov
test
pop
js
sub
push
ret
shr
add
dec
pop
push
dec
insl
mov
and
jmp
sub
ljmpw
mov
mov
inc
sbb
or
mov
jbe
adc
pop
and
xor
mov
enter
lret
cmp
cmpsb
sarl
pusha
lea
cmp
rclb
jno
shl
arpl
bound
out
adc
cmp
das
fstpl
sub
mov
mov
mov
insl
inc
dec
sub
or
cmc
scas
clc
iret
shrb
and
or
push
lea
sbb
or
cmp
dec
mov
jo
rcrl
jne
test
ljmp
call
rcll
add
leave
cmp
mov
push
popa
adc
inc
xchg
sahf
push
loopne
js
inc
or
mov
imul
stc
cli
sub
fcoms
fidivl
mov
push
testb
cmp
dec
or
mov
adc
sub
faddl
sub
insl
xor
mul
ss
dec
mov
pop
push
mov
sbb
aaa
aad
push
push
test
add
mov
icebp
add
jae
aaa
mov
jecxz
jmp
lea
lahf
popf
dec
fnstsw
sbb
jnp
sbb
dec
push
inc
lret
mov
pop
fdecstp
cmp
inc
mov
lea
cwtl
rclb
shl
into
pop
hlt
sahf
nop
lcall
stc
cmp
cmp
std
pop
scas
push
dec
mov
dec
sub
and
into
outsl
add
sbb
jle
pop
push
je
adcl
sub
mov
cs
adc
and
adc
dec
xchg
xchg
mov
imul
int
sub
pop
dec
clc
rol
mov
jns
mov
les
pop
ret
xor
insl
mov
cmpsb
cmp
pop
push
lea
push
mov
pop
push
mov
jne
movsb
pop
iret
movsl
lods
mov
adc
pop
pop
and
add
mov
add
cli
pop
test
ret
aam
pusha
nop
push
rclb
inc
rcl
add
stos
adc
adc
movsb
add
sbb
loopne
in
mov
sbb
sbb
je
cld
aam
sarb
push
sbb
mov
or
sub
lock
mov
fnsave
call
pop
js
mov
aaa
jp
js
nop
add
jno
xor
scas
sarl
pop
pop
daa
je
fldcw
pop
stos
pop
bound
inc
bound
sbb
cmp
inc
sub
sub
sahf
push
cmpsl
push
insb
cmc
cmp
ljmp
sbb
xor
push
mov
mov
aam
push
cmp
outsl
mov
adc
pop
pop
mov
gs
rolb
cmp
xadd
popa
fsts
xorb
sti
mov
sbb
shl
sbb
inc
push
mov
dec
mov
lds
bndldx
push
or
add
or
lock
push
pop
negl
xchg
and
aas
xorl
incl
xor
push
aam
aas
push
mov
sub
push
enter
and
test
ljmp
scas
addr16
insb
jmp
sbb
pusha
bound
xchg
movsb
and
je
mov
mov
add
lea
data16
movsl
mov
jecxz
sbb
fisubrl
ljmp
mov
into
push
jge
mov
lahf
lods
xchg
xor
fcompl
inc
popa
lods
or
fcmovbe
add
bound
ret
pushf
aaa
push
call
cmp
iret
test
push
xlat
ss
cmp
mov
mov
shr
arpl
rcrb
dec
jg
mov
lcall
das
lahf
pop
cmp
leave
dec
add
inc
cmpsl
popf
mov
mov
push
adc
icebp
lahf
test
or
adc
dec
lds
mov
loope
lds
shrl
xor
mov
and
rolb
mov
aaa
inc
or
sbb
imull
or
add
xchg
dec
pop
sbb
sarl
inc
push
fsubrl
xor
ficompl
fsub
jne
clc
mov
xchg
fwait
int3
add
and
adc
push
dec
cmp
inc
mov
pop
jp
mov
aam
mov
push
jp
insl
adc
int
xlat
test
sahf
aaa
sbb
push
pop
jmp
jne
pop
cmc
mov
cmp
pusha
cmp
add
jge
cli
or
push
push
cmc
mov
pop
xchg
pop
mov
mov
and
mov
dec
testb
in
pushf
les
cmp
add
bound
andl
mov
pop
mov
icebp
adc
hlt
les
sbb
rcrb
jp
jecxz
pop
inc
imul
std
jae
loope
loope
jge
cmc
lods
pop
es
lods
dec
adc
aad
ljmp
cmp
mov
fsubl
icebp
pop
ja
mov
ret
inc
ljmp
mov
sub
dec
mov
cld
sbb
mov
push
ret
or
xor
imul
pop
stos
sbb
inc
push
xchg
push
jne
push
fnstcw
push
sub
lret
outsb
cmp
in
jnp
dec
or
sbb
pop
lods
push
in
test
mov
pop
sbb
mov
fcmovbe
or
daa
xor
cwtl
out
pop
test
mov
pop
xchg
and
ret
xlat
add
jg
cld
popa
push
dec
pop
aad
and
sub
add
test
pop
add
es
and
lds
xchg
subb
push
call
and
push
add
into
adc
movsb
mov
push
sti
and
cmp
fsubrl
out
pusha
jp
pusha
fucomi
stos
xor
lods
mov
outsb
push
add
jge
cwtl
lock
adc
pop
mov
adc
sub
and
subb
adc
add
inc
lods
scas
insb
adc
sub
ds
test
sahf
rclb
jo
testl
arpl
fildll
in
push
ret
mov
ljmp
mov
idivb
xor
jnp
push
cltd
icebp
add
mov
test
pop
cmp
dec
pop
mov
adcl
and
adc
jae
aas
and
mov
push
stc
arpl
jae
xchg
lcall
pop
imul
jae
xor
xchg
nop
adc
mov
bound
mov
iret
in
loope
cmpsb
fdivrs
aas
movl
fnop
dec
inc
ljmp
dec
sub
adc
cmp
inc
pop
cmp
movsb
cmp
cmc
push
pop
cmp
aaa
lods
push
rclb
sub
dec
out
mov
jp
leave
jns
iret
repz
clc
mov
mov
jge
adc
jne
xchg
ds
or
fwait
bound
jns
out
push
pop
fmull
jno
or
sub
sbb
push
inc
cmpsl
or
call
mov
loope
sub
sbb
rolb
and
adc
adc
push
or
dec
fidivs
push
out
movsb
adc
je
imul
in
mov
add
lea
push
and
mov
cmpsb
push
cmp
lods
xchg
push
xor
iret
jne
adc
sub
mov
xor
or
cmp
add
lret
jnp
subl
test
xor
pop
jne
popa
das
adc
xlat
sub
push
jmp
movsl
inc
mov
pop
in
lcall
imul
push
jns
jl
and
call
mov
rol
iret
in
cs
add
lret
mov
jo
test
push
sbb
mov
and
add
scas
xchg
inc
adc
fnstcw
pop
repz
xor
andb
xor
ret
insb
xchg
ficompl
nop
fwait
addr16
lods
and
popf
mov
addl
cli
pop
xor
lret
aaa
les
cmp
sub
mov
push
xchg
fiaddl
jae
mov
pusha
pop
adc
imul
xor
and
icebp
test
das
adc
mov
in
imul
mov
pop
loope
imul
add
sub
xor
jge
push
add
mov
add
mov
nop
cmpsb
pop
push
fiaddl
test
sbb
ljmp
jae
xor
jl
popf
sub
pop
test
mov
inc
jnp
cmp
out
mov
pop
adc
imul
adc
xor
push
xor
or
test
ret
mov
lret
xor
or
int3
cmpsb
inc
jge
sub
push
jp
inc
push
xchg
jmp
inc
jae
adc
or
addr16
clc
push
roll
jg
pop
mov
xchg
fcomip
and
into
bt
sbb
mov
outsl
in
and
aad
mov
neg
inc
mov
sbb
test
test
xor
sub
pop
sub
adc
jnp
ja
call
xchg
gs
sbb
ret
fisubl
mov
das
test
jecxz
lock
popf
xor
dec
hlt
dec
mov
mov
cmc
cmp
pop
mov
xor
imul
loope
push
pop
lods
pop
stos
dec
xchg
xor
sub
xchg
xchg
dec
sub
out
or
imul
jo
push
jb
ljmp
outsb
fistl
or
xchg
arpl
lea
mov
loopne
cmpsl
adc
jecxz
repnz
push
call
adc
ffree
mov
jno
in
nop
cwtl
xchg
fsubl
xlat
add
sub
out
xorb
inc
mov
ret
sbbl
mov
fldcw
jae
repz
pusha
adc
repz
test
inc
and
imul
cmc
xor
add
incb
jno
inc
ret
popa
mov
jne
cmp
jp
rorl
adc
jge
xchg
stos
mov
dec
dec
sbb
inc
ja
lcall
addb
sub
mov
add
insl
sbb
mov
mov
jnp
movsl
mov
out
and
push
icebp
mov
pop
and
jns
rcl
mov
mov
adc
lods
rcll
push
inc
lods
xchg
push
das
mov
test
test
roll
outsb
jne
out
fwait
mov
push
mov
push
mov
adc
fwait
sbb
aas
xchg
sub
cli
and
adc
sar
dec
cld
lea
or
push
add
out
and
push
outsl
add
iret
jecxz
sub
jge
dec
fsubrs
daa
aam
sbb
sbb
mov
clc
jg
pop
fdivs
js
ret
out
add
inc
sub
add
cmpsb
ljmp
sbb
cmpsb
xlat
push
add
cltd
jmp
pop
jmp
mov
mov
and
or
incl
mov
js
sbb
je
add
cmpsb
sarl
call
jne
loope
fimull
mov
push
js
das
or
data16
push
inc
sbb
cmp
inc
cmp
jmp
sbb
pop
scas
ja
and
dec
sbb
push
jno
scas
testb
mov
enter
push
stc
jg
fistps
jbe
ret
inc
and
xchg
pop
xchg
xor
sbb
and
and
and
push
and
inc
sbb
add
xor
into
stos
adc
dec
xlat
jl
and
mov
jmp
mov
insl
cmpsb
mov
add
std
mov
lods
sbb
inc
xadd
bound
or
inc
pop
cmpsl
push
fsubs
sahf
pop
cmp
dec
loop
ret
dec
in
xchg
push
cmp
mov
cmp
xor
sbb
out
clc
xchg
jp
test
clc
lock
and
inc
inc
xchg
xchg
es
lock
jle
fmuls
fisubrl
ret
add
mov
out
lcall
ret
out
loop
xor
ss
sbb
push
pop
mov
movsb
fcmovnb
lds
xchg
mov
fwait
xor
movsl
inc
cmpsl
addb
insl
xchg
jne
xchg
xchg
add
arpl
adc
hlt
inc
addl
push
cmp
push
fldl
movl
sub
cwtl
faddl
pop
lods
xchg
sub
push
pop
cwtl
popf
xchg
mov
popf
push
mov
and
jmp
add
aam
aam
adc
test
lret
cld
dec
or
icebp
daa
mov
cmpsl
aas
xchg
and
addr16
shll
cmc
mov
mov
cwtl
fistps
jnp
lcall
pop
into
stos
sahf
pop
adc
add
sub
jecxz
inc
aam
es
sub
gs
cmpsl
arpl
pop
fiadds
sub
daa
dec
or
jns
sar
adc
add
mov
mov
add
testb
cmpl
shrl
ja
in
mov
push
sbb
out
sahf
in
and
mov
mov
test
inc
ja
mov
sarb
data16
dec
or
add
or
mov
sarl
ret
sub
sti
and
insb
sbb
sub
mov
cli
jg
inc
loopne
pop
sbb
mov
and
jo
push
cli
mov
push
xchg
push
data16
and
and
rcr
in
mov
std
xor
sub
mov
push
push
loopne
cmp
sub
jo
ja
xor
clc
fsubrs
cmp
ss
cld
dec
call
fwait
stos
into
icebp
inc
ret
push
call
sub
fisubrl
dec
sub
mov
adcl
pusha
ret
lods
pushf
or
mov
pop
cmp
or
cli
sbb
and
stc
jp
cltd
xchg
movb
sahf
repnz
mov
repnz
mov
lds
add
sub
jo
in
inc
xor
mov
call
scas
cwtl
push
lret
or
jge
mov
fisttps
add
std
or
wrmsr
push
fucomp
adc
out
into
jle
sti
jmp
cld
insb
xor
add
inc
add
fistpll
add
jno
add
dec
inc
movsb
adc
imul
xchg
daa
mov
sbb
adc
leave
sub
and
sbb
clc
or
inc
sbb
adc
je
lret
push
scas
ret
or
nop
ja
push
sbb
adc
sbb
lods
js
shr
sub
xor
mov
ljmp
mov
inc
cwtl
test
xchg
add
ds
outsb
icebp
xor
iret
push
mov
movsl
xchg
in
xor
ja
lock
add
push
mov
mov
cmp
test
daa
out
in
pushl
dec
or
popl
int
popa
pusha
mov
aam
mov
cmpsl
adc
sub
inc
pusha
sub
stos
push
fiadds
outsb
sub
fildl
lods
mov
arpl
mov
popf
aas
fcomip
add
movsl
mov
cmp
in
addr16
ret
mov
leave
clc
push
adc
xor
mov
cmpl
ss
pusha
fsubs
xchg
loopne
dec
das
iret
pop
aaa
mov
lea
ja
subl
jae
outsl
cmp
jno
mov
sbb
dec
mov
jno
push
xchg
xchg
mov
cli
out
hlt
adc
popa
jbe
xchg
sbb
xchg
daa
shll
icebp
movsl
mov
push
rcl
or
pop
or
test
lods
push
dec
loopne
xor
ss
test
iret
jmp
loope
stos
lock
or
loop
jle
mov
xchg
push
loope
fbld
enter
add
std
sub
cmp
xor
lcall
out
aaa
mulb
lock
std
cmp
test
mov
icebp
xor
and
mov
rolb
mov
push
loop
cmpsb
mov
aad
and
filds
shrl
out
pop
mulb
dec
xor
test
in
inc
lds
fwait
xor
stos
mov
add
push
pop
fcomp
ja
xchg
add
ss
pop
and
jne
push
aad
fisttps
and
bound
push
xor
or
cmp
fs
inc
movsb
xor
sbb
and
or
or
dec
les
mov
jl
push
and
cmp
aam
push
pop
push
test
ret
xchg
mov
data16
jbe
inc
movsb
pusha
sub
loope
js
loopne
ret
and
add
and
pop
jle
mov
sbbl
jg
std
or
rolb
pop
cmc
add
mov
xor
xor
jno
jmp
cmc
or
clc
sbb
aam
sbb
nop
dec
test
and
leave
dec
dec
push
lods
mov
xor
push
mov
clc
outsb
mov
call
inc
loop
es
mov
inc
insl
or
cmpsb
testl
mov
gs
rolb
sbb
shr
xor
mov
in
sbb
xchg
or
jg
adc
addl
mov
mov
shlb
ret
push
jecxz
pop
movl
add
lret
pop
mov
push
in
mov
ds
nop
mov
and
les
sub
lods
mov
add
test
js
out
mov
mov
sti
scas
les
push
xchg
cwtl
inc
into
imul
insl
mov
pop
test
adc
adc
pop
inc
mov
mov
or
rolb
decb
incb
loope
mov
pop
repz
mov
inc
pop
das
mov
clc
and
ret
sbb
push
dec
mov
hlt
scas
ss
fistps
jg
adcb
es
gs
cltd
lock
stos
pop
add
jl
js
mov
ljmp
ret
inc
ja
scas
or
outsl
cld
cmp
dec
add
pop
iret
dec
nop
mull
loopne
sub
sbb
jo
pusha
push
shlb
clc
outsb
mov
and
dec
mov
movsb
sub
mov
ret
add
sub
or
daa
dec
or
pop
iret
jg
sub
mov
push
out
call
ljmp
and
cld
jbe
dec
es
add
test
jp
xchg
xchg
adc
mov
push
cld
shll
xchg
jmp
into
ss
popf
sbb
loopne
mov
or
sub
fs
lock
pop
adcb
push
cld
sub
pop
dec
xchg
mov
pop
mov
int
subb
inc
push
sub
mov
dec
dec
xchg
xchg
fnsave
dec
push
ljmp
inc
pop
ljmp
or
cli
pop
in
popf
push
xchg
test
inc
mov
insb
add
push
sub
inc
mov
lret
negb
pop
and
mov
xchg
sbb
add
jmp
leave
movsl
mov
lret
mov
jecxz
in
pop
and
pop
inc
lahf
add
movsl
loope
adc
jle
inc
cmp
fbld
adc
rclb
pop
loop
mov
adc
xor
mov
je
xor
std
or
add
rorl
loop
pushf
push
sub
jno
aas
cmpsb
cmp
jge
enter
dec
sbb
cmp
iret
insl
sbb
mov
dec
mov
xchg
mov
lds
aam
fisubrl
fs
mov
inc
pop
pop
fadd
lds
mov
movsl
mov
inc
mov
push
xor
sub
xchg
push
pop
adc
sbb
dec
ss
les
ss
ficompl
or
mov
dec
hlt
mov
jge
mov
ljmp
fcmovne
arpl
add
or
fcmovnbe
orb
cwtl
cmp
push
mov
add
mov
lcall
gs
push
sbb
adcb
ret
mov
lea
inc
inc
lret
inc
test
loope
or
call
pop
sub
cmp
jb
insb
rcl
cmp
aaa
scas
cmc
adc
data16
loope
mov
pop
sub
push
sbb
faddl
mov
add
and
shll
mov
xchg
dec
push
hlt
aaa
jecxz
loop
pushf
mov
inc
cmc
call
mov
in
push
cwtl
bound
mov
lret
sub
jle
xor
lea
dec
call
addl
add
orb
mov
popa
test
les
add
add
mov
adc
xor
imul
adc
loope
into
loopne
mul
les
bound
push
imul
rorl
adc
lods
sbb
bound
enter
add
bound
mov
ljmp
mov
mov
and
ds
insl
sahf
pop
push
xchg
mov
sti
lds
jle
sub
adc
hlt
add
add
push
leave
xchg
mov
pusha
ljmp
sbb
mov
div
add
inc
cmpl
out
mov
jmp
dec
mov
or
test
leave
in
stc
cmp
sub
cmpsb
dec
shl
cltd
loop
mov
jg
mov
cld
andb
sbb
les
pop
adc
movntq
loope
inc
cmp
sbb
jp
add
int3
imul
push
mov
or
mov
sbb
popf
or
aaa
jo
test
mov
mov
orl
sbb
xchg
push
movsb
cs
add
scas
jp
push
ret
or
lahf
pushf
clc
dec
out
stos
int
fisttps
jo
test
fiadds
mov
xor
mov
or
dec
or
xchg
sub
xchg
cmc
jecxz
add
pop
mov
add
rorl
push
mov
pusha
insb
mov
movsl
mov
fdivr
cmp
incl
sbb
cwtl
mov
popa
sbb
pop
sbb
add
movsl
ficompl
jo
fwait
add
cmpsb
hlt
popf
fadds
lds
sub
mov
mov
mov
shl
arpl
xor
mov
sub
xchg
pop
imul
in
jp
add
pop
pop
popa
or
push
or
pop
push
aaa
cmp
lods
jmp
je
mov
lret
sbb
cmpsl
pop
sarb
or
mov
insb
add
cmp
add
dec
jp
shlb
scas
arpl
lea
sbb
mov
daa
and
sub
popf
movsb
bnd
jno
das
pmulhuw
lods
movzwl
jecxz
jp
mov
add
mov
rol
pop
cmpsb
or
pop
pusha
xchg
enter
add
insb
subb
aad
bound
add
adc
fistpll
jb
inc
and
enter
into
add
loopne
arpl
test
nop
enter
mov
mov
cld
add
fisubs
daa
insl
lahf
movb
mov
lcall
cwtl
sahf
test
ret
test
push
add
mov
clc
nop
jl
mov
inc
out
adc
fisttps
lods
mov
cs
enter
cld
jmp
fldl
les
cmc
pop
inc
std
xor
lea
sbb
fs
or
mov
js
mov
aad
sbb
dec
dec
xlat
inc
adc
add
faddl
enter
iret
mov
scas
or
inc
and
dec
dec
mov
int
test
cmpsb
int3
insb
sub
push
test
push
adc
outsl
mov
jl
mov
adc
stos
pop
push
das
lret
adc
and
jnp
pop
inc
in
mov
lret
fcomp
std
mov
mov
mov
fwait
jle
loopne
add
push
inc
ret
jnp
pop
cmpsb
loop
push
xchg
shl
cmpl
lret
aaa
push
cmp
cmc
xchg
inc
aaa
rolb
outsb
dec
fwait
std
rorl
jl
fwait
add
add
add
push
out
push
fisubrl
and
push
or
dec
inc
pop
mov
and
mov
fcoms
xor
jge
sahf
fcmove
cmp
mov
loopne
scas
mov
mov
or
clc
inc
xor
lods
fwait
ljmp
push
mov
dec
push
dec
pop
xor
jo
fs
sub
jo
xor
and
push
stos
and
adc
rclb
orb
cwtl
fsubrs
into
subb
inc
mov
cmpb
xor
push
adc
mov
clc
fbstp
push
clc
clc
imul
mov
lock
cld
sub
cmp
xchg
sbb
test
jne
push
add
pop
pop
decl
inc
xor
popf
cmp
fstl
lock
dec
divb
dec
sbb
xor
cmp
ja
out
insl
fwait
lea
out
pop
and
push
pop
lock
fisubs
push
sbb
jb
jo
sahf
adc
pusha
mov
leave
jo
mov
mov
jp
xor
sub
mov
mov
cs
or
mov
out
or
inc
cmp
and
inc
mov
das
lcall
ja
mov
subl
dec
xor
in
data16
fs
pop
rorb
pop
jmp
xchg
aad
mov
mov
mov
loopne
std
adc
rcrl
or
andb
push
movsl
ss
rorb
lret
daa
fmull
insb
loopne
mov
xor
dec
mov
rolb
pop
jo
cld
mov
adc
out
jne
dec
mov
push
xchg
test
aas
ret
sbbb
stos
mov
mov
or
inc
xchg
pop
inc
test
push
pop
lock
ret
pop
dec
fsubs
mov
imul
push
rclb
test
inc
test
jo
loope
pop
fisubrs
xchg
icebp
inc
loopne
push
jb
add
dec
cmp
in
jmp
clc
test
sbbb
sub
jnp
loop
inc
lcall
loope
pop
icebp
inc
or
cmpsl
adc
sub
lods
or
mov
cmp
stos
roll
or
pop
jnp
jp
mov
add
lret
loopne
clc
mov
ss
mov
inc
les
aam
jae
lds
push
dec
movsb
sub
dec
cmp
xchg
mov
icebp
iret
jb
push
adc
jp
adc
sub
shr
int
sbb
xchg
cmpl
nop
or
clc
out
fsubrp
push
insl
out
add
xchg
xchg
orl
movsl
je
js
fcompl
push
hlt
pop
bound
loope
and
mov
jg
stos
pop
push
push
sbb
test
xchg
inc
or
call
pop
adc
and
mov
or
inc
call
out
notb
mov
pop
push
cmpsb
xchg
movsb
sbbl
xchg
cld
push
scas
les
xor
jmp
xor
testb
dec
repnz
aam
mov
pop
sti
push
iret
or
ljmp
push
ss
mov
dec
les
push
ret
scas
sbb
ret
sbbb
es
inc
cld
adc
bound
ss
inc
cmp
inc
out
fimuls
fisubl
add
and
or
and
or
xchg
aam
jge
cmp
push
cmpb
jb
jl
lods
xchg
cmp
and
mov
rorb
fistpl
daa
adc
dec
adc
inc
sbbb
sbb
xchg
into
xor
stc
or
daa
test
or
mov
test
pop
inc
adc
subb
aas
push
push
push
xor
lret
sbb
icebp
es
mov
lret
mov
sti
outsl
mov
sub
int
mov
cmp
fsubl
pop
and
push
nop
loop
jg
jno
sub
pop
loope
push
sbb
xchg
adc
add
fisttps
mov
sbb
or
movsb
add
int
cmp
fistpl
or
dec
xchg
insb
or
xchg
xor
mov
fildl
and
lret
push
lods
or
std
icebp
enter
and
fcmovnb
mov
mov
add
xchg
insb
sub
adc
add
xchg
ljmp
insb
pop
adc
shlb
imul
imul
in
loop
loope
lock
dec
cmp
bound
cmp
scas
aam
jo
lods
xor
jle
ja
mov
mov
mov
out
enter
cmp
or
imul
xchg
movsl
inc
sahf
inc
stos
jo
sbb
sbb
pusha
mov
divb
clc
sub
sti
push
sahf
leave
adcb
jmp
xor
sarb
fimull
fildll
fmuls
jl
ljmp
adc
push
shlb
pop
jg
stos
stos
hlt
mov
inc
xchg
flds
out
rolb
out
sbb
pop
movsb
ss
repnz
ret
jle
push
xor
sub
popf
xor
fwait
jo
sbb
in
leave
aas
push
jmp
hlt
and
cmpsb
push
stos
mov
aam
aas
pop
pushf
adc
sbbb
jle
lock
mov
inc
sub
inc
mov
inc
std
stos
sahf
xchg
mov
mov
mov
sub
cmpsl
fisttpll
cmp
jo
leave
sbb
pop
insl
jbe
push
lock
jmp
sub
ljmp
aaa
movsb
ds
pop
push
ja
xchg
lcall
aas
pop
jo
scas
mov
loopne
jo
and
call
movsl
sub
sbb
cmc
clc
adc
f2xm1
mov
cmp
push
xchg
clc
pop
fnstsw
sub
stos
and
ret
xor
mulb
loop
pop
xchg
or
pop
jo
les
cmp
mov
ds
push
cmpsb
shll
inc
dec
inc
aas
fdivl
out
push
adc
mov
addr16
test
arpl
and
cld
and
mov
pop
inc
sti
lods
loopne
xchg
je
lods
lods
rcll
mov
cs
jle
and
enter
adc
sbb
ret
shlb
adc
sbb
sub
testb
movsb
push
push
adc
or
xchg
cmc
das
lods
shll
rcl
xor
aaa
sub
insl
pop
call
jno
fcoms
and
pop
sub
mov
mov
sti
cmc
mov
cld
adc
in
out
sub
cmp
dec
clc
cmp
divb
jg,pt
scas
clc
dec
addl
test
call
sahf
mov
inc
arpl
sbb
push
test
xor
xchg
or
mov
subl
sbb
movsl
out
xchg
test
push
ljmp
popf
cmc
inc
adc
push
hlt
ss
lcall
mov
leave
ja
dec
dec
push
outsb
aas
mov
add
scas
or
test
mov
pop
jno
fsubrs
mov
rolb
dec
sarl
lahf
pusha
add
push
test
add
xor
sub
das
addr16
pop
popa
shll
xchg
fcompl
push
jnp
cmovg
pop
jle
jae
and
cmp
fwait
aad
sbb
cmp
ret
hlt
xor
pop
mov
es
xchg
mov
scas
mov
cmp
adcb
push
nop
cmp
jmp
mov
pop
push
adc
pushf
cmp
rorb
pop
sbb
push
sbb
popa
push
jbe
push
loopne
adc
xor
pop
iret
jp
pop
into
sbbb
sti
dec
xor
cwtl
lret
or
mov
cmp
pop
or
cli
daa
sbb
enter
ja
pop
es
lods
aas
clc
add
pop
pop
add
add
xlat
pop
sbb
loop
mov
sbb
mov
fadds
cmp
push
icebp
sub
inc
rclb
or
push
push
sbb
xchg
jno,pn
sbb
pop
or
mov
lahf
push
test
xchg
sbb
gs
cmp
push
add
or
xchg
jne
add
and
cli
or
adc
int
fs
inc
or
dec
loope
sub
clc
out
sbb
cmp
push
test
push
jmp
dec
jecxz
addl
and
cmpb
out
push
rcrb
imul
ret
add
mov
and
add
mov
sbb
inc
aad
in
dec
sbb
addl
push
mov
jp
mov
xor
mov
daa
test
ja
jmp
sub
or
mov
push
xchg
jp
jo
lock
je
inc
jo
add
add
sbb
xor
test
sbb
push
test
inc
js
fsts
dec
mov
inc
pop
xchg
ret
pusha
ror
int3
into
inc
cld
cmpb
xor
int3
in
or
mov
push
dec
daa
ljmp
and
enter
jo
sub
sub
inc
inc
es
orb
int3
or
movsl
push
pop
imul
inc
aas
inc
jmp
ret
repz
std
cltd
xor
gs
add
push
mov
loop
shrl
ret
nop
inc
sbb
pop
mov
mov
subb
pop
pop
cmpsb
sarb
inc
fisubl
jp
out
mov
dec
test
cmpsb
or
jle
sarl
sub
cmc
test
pop
fldl
rcrb
cmc
push
mov
mov
cld
push
in
aas
std
jle
imul
mov
xchg
movsb
jg
scas
mov
sbb
jno
inc
sbb
or
ss
test
jle
stos
mov
and
imul
mov
pop
adc
or
cs
subl
lret
jo
cmp
inc
cmpsl
inc
enter
out
rolb
sub
aad
dec
push
les
ds
enter
fcomps
cmp
stc
mov
pop
xlat
add
pop
fdivs
xchg
movsb
inc
xchg
mov
adc
test
xorb
iret
or
mov
mov
add
es
ja
data16
out
scas
and
add
data16
loopne
andb
cmp
repnz
movsl
inc
push
je
daa
jno
dec
icebp
roll
stos
scas
inc
ja
cmpsb
add
ja
rorl
mov
lods
xor
test
lahf
jno
pop
movsl
add
dec
popa
push
icebp
cmp
adcl
insl
cmp
ljmp
inc
pop
enter
sbb
dec
add
filds
xorb
clc
fistl
call
xchg
loopne
insb
btcl
fbstp
or
cmpsb
aad
cltd
or
cmp
sub
inc
sti
pop
das
fdivs
cs
jge
test
dec
fs
sti
adc
mov
and
sbbb
loopne
mov
shl
std
jl
jecxz
negb
es
stos
xor
or
fcoml
and
cmp
or
sbb
test
mov
push
add
push
scas
fildl
enter
dec
cld
inc
inc
inc
pop
jecxz
js
inc
rcrb
cmp
lds
and
mov
jb
pop
mov
xchg
aaa
cmc
addl
loopne
nop
aam
mov
mov
fdivr
and
push
push
pop
lcall
xchg
sbb
sub
fdiv
add
cmc
mov
and
jle
push
loopne
stos
mov
add
add
inc
or
lret
outsl
xchg
cwtl
push
lds
jl
mov
inc
adcb
dec
pusha
add
data16
cwtl
inc
or
xchg
pop
pop
call
dec
std
loope
mov
push
outsb
mov
and
cmp
shrl
mov
enter
cmp
mov
jle
movl
int3
fimuls
pop
andl
inc
mov
jecxz
bnd
and
fsub
sbb
cmp
pop
adc
inc
js
punpckhbw
mov
lock
fsub
xchg
add
sub
add
pop
fidivl
lods
cmp
dec
enter
test
mov
sbb
cmp
movsb
repnz
inc
fsts
cld
jnp
dec
xor
cmpsl
cmp
dec
fmull
pusha
lret
das
das
inc
jg
sub
mov
xor
clc
imul
inc
aad
inc
and
and
and
push
call
fcomp
sbb
into
cli
lea
push
adc
out
push
les
and
jno
test
test
adc
std
arpl
add
jecxz
pop
cmp
or
enter
ja
loope
add
add
lock
sbb
lret
sbb
ljmp
cli
aas
lea
dec
adcl
mov
aaa
fdivp
cmp
sub
incl
mov
fwait
mov
icebp
ljmp
scas
xor
out
call
movb
sbbl
push
push
push
aad
shll
imul
icebp
rcrl
mov
inc
shufps
sub
dec
mov
lds
shrb
ljmp
adc
or
dec
cmp
add
dec
pop
push
jmp
jle
scas
lock
insl
push
xchg
lods
xor
cwtl
cwtl
shr
adc
sti
dec
loope
mov
adc
lock
xor
shrb
loopne
cli
mov
cs
push
outsl
and
mov
xchg
clc
add
rolb
pop
xlat
in
ds
or
ljmp
inc
lods
scas
aas
add
dec
jmp
insl
adc
or
je
sub
push
xor
sbb
jl
sbb
inc
mov
or
inc
sub
loopne
sub
add
jmp
xor
and
jmp
and
adc
fldcw
xor
or
jae
dec
test
adc
mov
jg
or
mov
sub
jo
and
push
jae
sbb
dec
mov
jmp
sub
pop
jle
pop
clc
fsts
jo
and
or
sbb
mov
pop
es
jno
add
fsubr
push
mov
mov
cltd
mov
ret
pop
std
loopne
mov
daa
inc
ss
jno
cmpsb
cmp
xchg
add
and
clc
add
roll
mov
loop
test
mov
seto
aas
push
push
mov
pushf
sbb
pop
cli
push
pop
es
and
out
ror
or
fsubrl
std
add
lds
adc
negb
movsl
mov
xlat
dec
scas
imul
ss
or
mov
aad
fcoms
pop
out
mov
mov
in
shlb
mov
add
ret
sbb
loop
mov
pop
je
push
push
add
mov
cmc
insl
stos
push
pusha
sub
inc
sub
fldt
loope
lahf
or
sub
pop
jl
gs
outsb
stc
scas
popa
xchg
cmpsl
add
aam
jp
sub
xchg
cli
jmp
dec
add
add
push
bound
jbe
clc
push
jge
into
in
rorb
inc
pushf
cmpsb
or
divb
jle
arpl
out
or
mov
mov
aaa
das
fdivrl
enter
pop
fisttpll
mull
ds
cmpsl
cmc
pop
insb
movsl
pop
es
or
ljmp
test
jg
test
sti
push
addb
movaps
loop
mov
xchg
repnz
inc
test
icebp
jmp
adcl
clc
xchg
jne
lock
inc
aam
add
mov
jmp
clc
mov
sub
adc
sarb
pop
xor
popf
push
xchg
pop
icebp
testb
dec
adc
lods
add
in
outsb
icebp
mov
int3
shrb
roll
push
hlt
jg
in
xor
sbb
pop
int3
loope
movsb
add
pop
pusha
adc
out
adc
cmp
push
rcll
xchg
push
sahf
push
add
enter
add
inc
adc
and
mov
ffree
sti
and
rcrl
add
dec
aaa
add
popa
jmp
inc
bound
loop
ljmp
lret
lds
push
mov
jb
std
mov
aam
dec
es
int
mov
into
jns
pop
enter
cli
sbb
xchg
mov
fists
jle
in
mov
rcrl
orl
pop
mov
push
or
xchg
fldenv
insl
and
fisubrl
xchg
pop
ljmp
test
inc
mov
addr16
mov
jp
mov
in
mov
jle
aaa
fs
clc
pushf
mov
jecxz
int
fdivl
jno
adc
shrb
jmp
adc
mov
pop
xchg
int
rolb
mov
sbb
sbb
or
mov
mov
mov
lock
scas
mov
out
and
dec
and
cli
sbb
jb
mov
mov
lcall
pop
or
push
testb
and
lea
push
dec
dec
xchg
dec
pop
push
pop
adc
jecxz
dec
xor
in
movsb
dec
sbb
mov
add
adc
ret
xor
add
cld
addb
jge
les
cmp
inc
adc
jno
sub
pop
hlt
pop
fstps
lods
ljmp
jae
dec
mov
popa
movl
pop
add
push
push
cmp
or
cmp
sbb
ljmp
mov
lock
mov
popf
pop
ret
in
xchg
fiaddl
and
mov
sub
or
movsl
test
ds
pop
aas
add
stc
int3
pop
sarb
and
call
sbb
xor
mov
dec
cltd
es
repnz
jg
xor
cltd
call
popl
and
inc
sahf
stos
pusha
rcrl
pop
xor
push
mov
cmp
sbb
out
and
sarb
push
mov
rclb
ror
clc
out
js
fisttpl
xchg
dec
cld
mov
pop
add
adc
sub
js
jl
in
add
cmp
in
jl
into
mov
fildll
loop
clc
clc
mov
jo
push
test
sarb
mov
int
or
dec
je
pop
sbb
xchg
inc
aam
rcll
push
imul
push
xchg
sub
pop
dec
popa
add
testb
das
addb
inc
subl
clc
imul
mov
gs
rcr
ja
fs
lock
push
mov
clc
cli
mov
xor
hlt
inc
clc
push
or
push
xchg
bound
inc
das
mov
sub
std
sub
mov
xor
jo
jns
sbb
or
jne
lcall
ret
sbb
dec
pop
xchg
popa
fldcw
pop
add
jo
add
mov
lods
lret
adcb
fists
lahf
push
and
xor
mov
add
and
sub
adc
aad
push
sub
bound
clc
push
or
adcb
fbld
cli
in
std
pop
out
movsl
in
fbld
test
sarb
cmp
mov
jne
loopne
arpl
cli
inc
push
pushw
pop
mov
fwait
lock
sbb
sbbb
and
push
add
cmpsb
jmp
or
shl
rorb
dec
clc
push
in
popa
test
lahf
push
iret
fildl
jp
mov
push
mov
xor
pop
fwait
pop
sbb
mov
mov
rcrl
pop
gs
test
rorb
test
decb
jle
or
fldt
repnz
popf
mov
sahf
stos
mov
ljmp
jle
or
xchg
jle
stos
loop
aam
clc
hlt
bound
pop
popa
cmpsb
leave
add
cmp
or
sub
mov
adc
add
sub
dec
ja
test
xchg
push
je
ret
add
dec
inc
jo
in
fs
jmp
sub
fs
mov
and
cld
dec
adc
mov
sub
sbb
movsb
in
jmp
lock
mov
incl
gs
xchg
in
shlb
xchg
aad
jno
push
mov
ret
je
aaa
sbbb
cmp
mov
inc
int
mov
adc
inc
xor
fildll
test
push
mov
pop
shl
enter
hlt
adc
inc
repnz
jae
add
cmc
and
sahf
sti
adc
sub
decl
clc
xchg
push
or
push
and
bound
mov
xchg
mov
stos
jne
shll
mov
pushf
mov
pop
pop
arpl
xchg
cs
pusha
loope
in
mov
ficomps
mov
cmpl
sbb
call
insl
jbe
sub
scas
jo
cli
jle
mov
xor
ret
clc
cmp
stc
scas
fstl
dec
es
into
cmpsb
jae
sahf
mov
sub
rclb
and
test
jmp
push
scas
movsb
jl
sahf
out
sarl
add
and
and
fs
and
adc
loopne
aaa
pushf
aam
and
xchg
ss
outsl
sbb
loope
adc
and
pop
scas
js
insb
mov
fs
pop
mov
cltd
xchg
clc
scas
incl
insl
lahf
sub
xor
add
cld
and
cli
js
xchg
inc
and
lock
ret
xchg
je
or
ja
or
jb
pop
lret
das
mov
push
push
ret
jo
leave
push
cmp
mov
cli
and
push
add
xlat
push
aas
pop
or
pop
inc
mov
test
push
nop
adc
and
or
cmpsb
ss
xor
sub
adc
cli
dec
mov
and
add
mov
push
pop
idivb
pusha
xchg
incb
sub
hlt
lds
or
je
jg
aad
xor
loope
pop
fistpll
jmp
les
jecxz
iret
das
clc
je
inc
mov
add
cmp
add
sbb
xlat
sbb
aas
lods
das
dec
test
pop
stos
push
aaa
pop
or
mov
cmp
scas
ljmp
lret
mov
dec
jne
adc
ss
icebp
or
sarb
data16
shlb
mov
mov
inc
test
cmpsb
mov
add
adc
or
sbb
jns
fs
lock
push
outsb
sbb
js
rolb
xor
sahf
lds
repz
sbb
cmc
dec
add
sub
or
mov
or
test
roll
lods
fidivrl
or
jmp
push
stos
in
add
loope
or
pushf
jnp
cmp
pop
punpcklbw
pop
cli
stos
push
lock
mov
cmp
test
push
hlt
jbe
call
push
popf
or
inc
adc
and
lret
ds
mov
sbb
push
adc
repz
mov
lret
jb
js
cmp
pop
push
insb
outsl
jp
push
add
fbstp
test
or
inc
or
ret
pop
sbb
and
sbb
inc
push
sbb
push
mov
sub
lds
popa
push
xor
cs
mov
adc
sub
sbb
jg
clc
jg
lret
int
pop
mov
cmp
ljmp
or
lcall
rcrl
lcall
sbb
inc
aaa
icebp
cmp
sbb
push
rcl
outsl
lcall
roll
or
pop
cs
ljmp
ljmp
notl
lods
push
mov
jecxz
and
cmc
pop
and
dec
icebp
add
aaa
and
repnz
je
mov
das
mov
fs
cwtl
leave
jg
mov
daa
clc
inc
cmp
inc
xchg
xorb
push
lcall
push
inc
sub
dec
test
call
or
lcall
aam
mov
pop
prefetch
test
push
mov
mov
mov
nop
jb
xor
jg
mov
test
jge
adc
adc
repnz
or
fadds
std
lock
xor
js
xchg
ds
test
mov
inc
mov
jmp
cmp
shlb
adc
xchg
les
hlt
lea
xchg
push
cmp
mov
test
jl
ljmp
cmp
dec
mov
mov
cmp
jge
test
adc
push
sbb
add
outsb
hlt
sti
mov
dec
fsubr
test
mov
enter
lds
add
sarb
jmp
xor
loop
je
sahf
jns
add
adc
fildl
mov
xor
pusha
or
fistl
mov
pop
inc
loope
lret
cmpsb
fldenv
cmp
aas
dec
sbb
inc
mov
dec
sub
push
dec
movsb
outsl
fcomps
inc
into
cli
in
addr16
idiv
je
lods
mov
clc
xor
sti
push
test
sub
lds
pop
addr16
sbb
inc
imull
inc
add
and
push
sbb
cltd
jg
jo
dec
sub
xchg
js
ljmp
js
jle
loopne
js
mov
fistpl
aas
popa
sahf
push
sbb
push
push
and
sti
nop
mov
jbe
mov
ds
loopne
sub
and
cmpl
jp
test
push
icebp
mov
and
lret
dec
jmp
loop
add
and
outsl
loope
loop
scas
and
ljmp
sub
mov
testb
xor
pop
sti
push
aaa
push
xchg
jbe
sahf
sbb
cmp
and
xor
and
mov
cmp
mov
into
sarl
cmp
dec
into
mov
sub
stos
arpl
mov
fcoml
dec
mov
test
mov
mov
mov
cmp
or
hlt
scas
je
insb
inc
mov
xchg
dec
leave
test
mov
xor
add
pop
je
jb
test
ret
or
push
xor
inc
cmp
inc
mov
or
out
jle
ret
out
adc
pop
sbbl
int3
dec
jp
cwtl
cs
adc
fisubl
call
rorl
xchg
daa
mov
sub
nop
movb
xchg
test
push
dec
or
sbb
test
insb
sbb
pop
out
daa
mov
mov
hlt
aas
xlat
push
pop
adc
jle
arpl
cltd
mov
incl
in
shl
lock
sub
sbb
call
add
movsb
subb
in
dec
mov
mov
pop
jne
inc
out
mov
imul
in
xor
fwait
out
add
inc
mov
insb
cltd
call
xor
and
adc
jne
sbb
push
adc
stos
and
jle
jne
mov
std
xchg
push
add
ficoml
and
jl
movsl
adc
mov
enter
xor
mov
dec
ficomps
jo
mov
dec
nop
pushf
jp
jbe
call
sub
stos
mov
mov
decb
xchg
les
adc
ljmp
incl
popl
mov
mov
push
jne
lret
fcmovu
mov
aad
ret
je
add
call
cmp
push
loope
rcrb
cmp
push
out
or
jne
js
mov
fcmovbe
mov
sbb
or
jns
jns
notl
loope
std
imul
sub
mov
iret
lock
sbb
js,pn
jle
pusha
and
lcall
push
cmp
dec
leave
add
lret
hlt
movsb
ret
push
js
sahf
icebp
frstor
movsl
shl
jg
cmp
prefetchnta
push
ljmp
ljmp
rorl
xor
or
daa
xor
cmp
adc
adc
js
mov
sbb
add
dec
shlb
or
icebp
xor
jbe
loope
inc
jb
cli
aad
and
jmp
fldt
out
and
cli
roll
mov
out
or
sbbl
or
stc
dec
fsubrl
das
xchg
sbb
push
movsl
jp
fistl
data16
clc
mov
decl
xchg
out
shlb
test
push
or
lds
cmp
xchg
test
enter
mov
scas
jle
test
xlat
test
hlt
inc
mov
jl
add
aas
push
jl
push
movsl
push
movsb
ret
lock
dec
pop
dec
inc
dec
pop
stos
pop
dec
or
shl
xor
cs
mov
test
aad
push
xor
cmpsb
jns
inc
out
xor
imul
inc
int
or
xchg
or
push
pop
push
sub
push
mov
imul
pop
cmpsl
and
cmc
out
push
add
mov
jnp
test
mov
test
mov
push
inc
xchg
mov
sbb
cmp
dec
push
add
cli
inc
sbb
add
ss
sbb
aam
jge
jecxz
subl
lock
orb
pop
add
xchg
mov
das
pop
inc
js
loopne
gs
sbb
push
sbb
insb
push
xor
pop
mov
movsb
movzwl
adc
or
adcb
pop
iret
loope
gs
cli
sbb
xlat
dec
push
in
pushl
xchg
mov
jmp
in
pop
xchg
out
cmp
sti
mov
xchg
lock
mov
mov
dec
xchg
jns
loop
jl
orl
and
jle
mov
and
test
ljmp
out
testb
out
add
pop
outsb
xchg
js
data16
test
imul
and
add
sub
clc
inc
add
lods
sub
lods
xchg
clc
xor
paddsb
jl
lods
dec
mov
adc
mov
mov
sub
jp
aaa
loopne
bound
pop
push
xchg
imul
popa
add
adc
outsb
push
push
mov
lar
test
mov
cld
cmpsb
xchg
inc
ret
pop
test
pusha
fwait
je
pop
mov
ljmp
je
and
insl
xchg
aam
fsubp
inc
inc
push
out
std
cmp
inc
pop
or
xchg
mov
or
std
adc
adc
sub
add
dec
cmp
mov
out
jge
cs
jmp
xchg
lahf
jmp
aad
sahf
cmpsl
cmp
insl
int
mov
loop
push
jmp
bound
pop
add
iret
sub
vmovhps
data16
div
aas
sbb
out
jge
outsl
sbb
inc
adc
sbb
cmp
sbb
push
push
push
roll
out
imull
mov
sahf
dec
in
andl
mov
pop
dec
push
pop
out
cltd
inc
push
jo
ljmp
jmp
stos
and
cmp
pop
mov
mov
hlt
push
enter
std
pop
sti
mov
mov
jmp
lock
sbb
push
fsubs
enter
dec
loopne
mov
push
mov
or
test
or
sti
xor
lahf
addb
stos
sub
enter
push
mov
fsubs
jp
repz
loope
hlt
test
ds
pop
adc
mov
mov
or
mov
stos
jne
mov
js
or
sarb
pop
aas
stc
pop
test
mov
pusha
outsb
push
cs
push
push
loope
test
xor
mov
ds
notb
idivl
push
test
xor
popl
mov
inc
and
in
fwait
mov
lahf
sbb
test
xchg
mov
mov
cltd
fadd
lods
bound
mov
fs
xor
jmp
sarb
and
loope
sahf
pop
xchg
xchg
or
and
out
in
les
jmp
das
xchg
sub
loopne
imul
lcall
subl
andl
push
lcall
push
add
pop
out
mov
arpl
push
cmp
cmpsb
aas
xor
aam
or
popf
dec
dec
mov
pop
in
test
bnd
fsubl
and
dec
adc
lcall
in
push
loop
pop
pop
mov
loopne
sub
js
test
scas
cs
in
cmpsl
add
clc
fdivl
mov
xchg
ja
in
clc
jae
cmpsb
add
aaa
outsl
jge
shl
outsl
inc
movsl
add
mov
push
js
shl
lcall
dec
in
jne
cmp
out
fdiv
add
repz
js
xchg
pop
js
mov
hlt
xchg
lds
lock
push
push
movsb
dec
inc
push
movsl
dec
cld
sub
or
mov
pop
push
out
cmp
pop
cli
mov
jne
sbb
cmp
sbb
pop
push
cmc
das
or
add
or
inc
in
push
and
aam
jge
in
cmpsb
mov
stos
aam
scas
inc
fld
cmpsb
mov
cmpsl
das
push
pushf
inc
test
mov
mov
sub
pop
pusha
add
or
jo
adc
popa
xlat
sbb
inc
subb
fidivrl
jp
add
add
xchg
pop
lock
add
test
adc
shrb
jae
push
push
xor
mov
mov
pop
sub
jmp
cmc
fwait
xor
js
and
sbb
enter
jp
xlat
push
outsb
push
cmp
aam
ss
cmpsl
xlat
clc
and
jmp
sbb
add
fsubrp
lea
rcll
out
dec
jg
adc
lcall
push
cwtl
inc
clc
iret
and
xchg
adcl
mov
in
sbb
pusha
pusha
pushf
mov
dec
inc
jb
pusha
or
dec
mov
add
xor
mov
pop
xor
imul
popf
pop
jmp
js
pusha
inc
or
sbb
sbb
or
pop
test
or
test
add
call
pop
mov
jbe
andb
xor
outsl
cs
fisttpl
pop
mov
insl
jl
mov
xchg
inc
loop
js
movups
cs
sbb
sbb
dec
push
add
ss
popa
lds
push
mov
dec
or
lock
add
fiaddl
rorb
insb
cmp
adc
xor
fiadds
dec
and
mov
mov
ds
aam
sahf
adc
adc
or
aam
xchg
cli
xchg
xor
or
imul
mov
push
xor
mov
add
push
sub
addr16
xlat
rorb
jo
mov
aas
sub
mov
push
mov
push
xchg
lods
or
les
pop
call
pop
cmpb
push
xchg
stos
xchg
xlat
stos
mov
jbe
mov
or
shlb
pop
je
push
into
and
lock
mov
adc
inc
fmull
lahf
fiadds
in
addr16
js
pushf
ficomps
cmp
and
es
or
mov
or
push
sti
mov
mov
clc
mov
sbb
loopne
jo
xchg
aam
js
jp
mov
push
clc
push
aaa
les
mov
rcrl
and
movsb
adc
pusha
or
movb
cmp
jecxz
imul
stc
mov
stos
sbb
dec
pop
popa
into
andps
bound
fimull
outsb
add
mov
sahf
ror
divb
sub
adc
inc
shlb
inc
cwtl
cmp
lret
dec
mov
repnz
mov
enter
push
sub
xchg
dec
push
adc
xchg
push
or
push
pop
aaa
test
cli
push
push
mov
stos
sbb
mov
cld
mov
sbb
cmp
pop
lahf
arpl
adc
jo
movsl
pop
std
add
enter
orl
sahf
jbe
clc
sub
outsb
add
or
xchg
adc
insl
cs
inc
insb
xchg
hlt
verw
sub
ss
xor
mov
stos
or
pop
pop
ret
lock
add
lods
xor
sub
xor
xlat
push
cmp
xchg
insb
dec
mov
sbb
mov
dec
call
add
or
les
mov
sbb
andb
jp
mov
int
nop
sub
or
inc
sub
inc
scas
fwait
stc
pop
dec
insb
pop
test
shll
arpl
aaa
ret
inc
imul
xchg
repz
and
fsubs
sbb
push
test
mov
out
add
cmpsl
cs
adc
fsubl
cltd
mov
cltd
mov
push
clc
inc
nop
xor
pop
push
mov
add
stos
fildl
sbb
push
xor
cwtl
clc
jne
push
or
adc
mov
pop
adc
mov
jno
adc
sbb
jnp
adc
or
lock
push
out
push
xchg
adc
jnp
lahf
pop
mov
enter
push
cmp
shlb
cs
jno
pop
sub
popa
arpl
fs
cmp
mov
and
xchg
jb
jns
test
in
insl
mov
frstor
adc
bound
dec
mov
push
inc
adc
fwait
shll
leave
sub
cs
lods
mov
adc
pop
loope
push
outsl
adcb
fldz
dec
rolb
jmp
sbb
test
or
ds
clc
push
sbb
and
fcmovbe
ja
inc
in
sub
push
bound
fwait
and
insl
in
sub
stos
push
or
cmp
inc
adc
mov
pop
pop
inc
in
loopne
fildll
sub
push
or
ret
pusha
sbb
ret
ret
jge
jne
mov
or
ret
incb
int3
adc
inc
jle
jg
cmp
jp
cltd
js
cmp
pop
cmp
outsl
jl
and
inc
inc
mov
xchg
test
jp
jb
arpl
ljmp
int
clc
mov
shrl
dec
pop
mov
mov
pusha
sbb
pop
add
push
xchg
cli
sbb
push
das
pusha
xor
push
fcmovu
aam
mov
sbb
jl
and
xor
in
jno
cmc
mov
in
push
mov
sbb
pop
cmp
ret
aaa
add
or
add
cmc
ret
das
dec
lret
repz
pop
in
or
ret
mov
pop
sub
push
cmp
pop
push
xchg
scas
mov
cli
or
adcb
pop
or
adc
sub
int3
dec
pop
sbb
stc
sahf
cmp
jmp
pop
ret
enter
aaa
add
cmp
pop
mov
out
scas
stos
test
or
sub
mov
mov
and
adc
jge
xchg
lock
jb
std
push
adc
jo
or
das
pushf
push
std
xor
add
pop
call
xchg
mov
fmuls
mov
pop
xor
js
js
arpl
xor
aaa
mov
add
xor
fisubrs
add
call
mulb
stos
ja
arpl
addl
cmp
sub
mov
jl
hlt
pop
lock
jne
loope
ret
leave
js
lock
mov
bound
clc
jmp
imul
push
lahf
jne
jno
clc
loope
adc
call
lea
sbb
sub
mov
clc
out
jne
add
lret
push
mov
inc
loopne
push
xchg
or
mov
cld
das
dec
aaa
mov
push
lock
lret
mov
dec
orb
pop
pop
push
mov
push
add
js
in
jmp
mov
mov
imul
dec
cli
test
jp
push
adc
xchg
popf
cmp
std
xorb
push
and
bound
add
pop
mov
fdiv
and
sub
jge
inc
jae
out
shl
mov
lahf
add
in
sbb
push
or
call
xchg
test
test
scas
fistpl
cld
xlat
jle
out
cmp
adc
xor
jmp
push
inc
iret
rcr
push
jmp
jg
add
stos
cmp
loopne
xchg
jns
add
jb
sub
call
cld
inc
jno
jae
inc
mov
scas
or
lcall
add
nop
mov
aam
in
hlt
xchg
push
xorl
and
and
push
jno
dec
dec
std
push
fisubl
push
and
push
leave
sub
test
add
pop
push
pop
dec
insl
nop
mov
dec
aas
or
fs
ret
mov
pop
mov
scas
pushf
mov
popa
lock
adc
pop
mov
xor
sub
mov
fimull
dec
adc
inc
adc
jmp
sbb
sti
ret
or
mov
jl
mov
test
lret
pusha
cmp
addb
std
cwtl
cli
insb
mov
inc
add
lods
fmull
mov
lret
pop
mov
push
jg
xchg
sub
sbb
stos
xchg
xchg
test
test
pop
pop
stos
outsb
scas
adc
lcall
add
inc
aam
push
inc
add
add
out
xor
pop
call
push
inc
adc
sar
push
pushf
xlat
xchg
push
pop
ss
in
sbb
out
push
and
jnp
add
lods
cli
adc
adc
stos
xor
call
hlt
lock
push
or
inc
shll
pop
push
lock
or
add
aad
cmpb
xchg
pop
mov
sbb
push
push
or
dec
xchg
stc
subb
dec
daa
mov
enter
jl
inc
jno
pop
pop
and
add
mov
adc
frstor
loop
xchg
mov
ficomps
sbb
mov
nop
cmp
mov
pop
outsb
daa
aad
loopw
xchg
push
mov
rol
mov
mov
or
addr16
jne
fcomip
or
jno
rcll
inc
stos
enter
push
test
jge
aam
out
xchg
bound
add
gs
pop
add
and
outsl
sbb
sub
cmc
out
test
push
jecxz
orb
cbtw
mov
jge
mov
sbb
add
dec
mov
pop
jge
mov
jg
sbb
jp
add
jmp
push
ljmp
nop
xor
std
ja
push
std
inc
sub
push
into
dec
and
fs
dec
rcl
cmp
lahf
lcall
dec
and
dec
shrb
jne
into
push
enter
push
sub
add
add
pop
gs
sub
mov
push
push
xor
mov
mov
sub
cmp
cld
xor
cmc
subb
jb
mov
std
push
idivb
dec
cmc
pop
jnp
test
lcall
lock
inc
or
mov
mov
push
dec
vsqrtps
loopne
jno
cs
aam
mov
xor
aas
mov
les
in
lcall
subb
out
shll
add
and
jg
in
mov
add
int
push
xor
je
push
out
rolb
stos
xchg
pop
mov
add
pop
lock
mov
outsl
or
cltd
cmp
xchg
int
test
or
mov
xor
sahf
jnp
mov
loopne
int3
fldenv
fnstenv
bound
jmp
pop
fisttps
test
hlt
push
sub
adc
mov
jb
sti
mov
fadd
incb
cmp
icebp
push
push
mov
lods
inc
mov
sbb
bound
not
stos
and
or
inc
sub
leave
inc
add
jle
mov
adc
add
dec
or
pop
aam
sbb
stos
jle
addl
inc
xchg
imul
mov
je
ljmp
mov
out
add
shrb
dec
or
movsl
mov
jmp
fwait
loopne
shrb
call
jo
pop
ret
and
aad
lock
or
mov
cltd
test
pop
mov
sbb
xchg
adc
and
xor
lock
imul
std
mov
in
push
dec
incl
bound
and
out
pusha
pop
je
ret
mov
adc
ret
pop
or
add
mov
fidivs
out
add
push
push
ds
pop
mov
push
insl
add
or
ja
cmp
xchg
pusha
int3
iret
and
sub
lret
pusha
cmc
and
and
aam
pop
mov
sub
test
seta
mov
sub
mov
clc
mov
rol
jbe
inc
daa
lahf
rcll
push
pushf
push
bnd
jnp
nop
cmpsb
xor
push
mov
and
and
fwait
and
pop
and
test
stos
icebp
in
dec
add
out
in
sbbb
xlat
push
jge
fildl
push
or
pop
mov
movsb
ds
fsubrs
xchg
in
pusha
jmp
and
xchg
sbbb
inc
enter
mov
cli
jle
loop
int
add
pusha
cmpsl
imul
jne
jns
xchg
cmp
roll
mov
adc
shrl
les
sahf
es
bound
dec
sbb
pop
sbb
add
pop
xlat
cli
xor
jp
ds
jle
adc
mov
adc
insl
fisttpl
aam
inc
cmpsb
push
sti
sbb
rolb
in
sub
mov
cltd
clc
xor
add
aaa
loope
insl
sbb
int
addb
add
out
push
pop
ret
iret
sarb
ret
mov
jg
pop
test
mov
ds
jb
test
lods
xchg
test
xchg
add
cmp
push
roll
or
stos
in
mov
push
xchg
out
inc
sub
scas
or
popa
addb
std
mov
js
int3
lahf
fistl
add
sti
in
or
mov
das
mov
add
sahf
std
xchg
pop
call
pop
add
adc
dec
popa
push
icebp
call
xor
cmp
jmp
xor
in
inc
cli
inc
lret
fmuls
lock
push
mov
sbb
add
test
adc
ret
insl
jbe
enter
add
lret
sbb
cmp
outsb
xchg
xor
repnz
pop
mov
cwtl
and
inc
ret
mov
adc
push
lret
mov
inc
pop
xchg
mov
test
jne
div
fnstsw
sbb
xchg
icebp
or
xorl
xor
dec
test
mov
push
test
loope
jo
sbb
lock
cld
xchg
mov
clc
stos
cmp
add
out
scas
dec
jmp
push
loop
jmp
loopne
je
jmp
push
out
mov
sbb
mov
movb
aaa
les
cmc
test
addr16
and
dec
push
dec
mov
mov
mov
push
sbb
cmp
lahf
mov
xchg
movsl
ljmp
sar
out
mov
std
cli
cld
mov
or
jae
mov
push
ja
leave
addl
xchg
add
sti
add
int3
add
fwait
dec
fdivl
or
movsb
inc
orl
loop
outsl
into
popa
sarb
adc
xlat
push
mov
sub
and
add
push
lcall
sbbl
jmp
in
or
add
pusha
lret
shll
adc
aam
push
incl
in
stos
sub
test
cmp
push
clc
or
add
adc
inc
dec
ds
scas
mov
sub
sbb
push
and
test
dec
inc
xchg
addb
pop
pop
shrb
sar
lcall
mov
dec
ret
add
mov
rcl
icebp
and
daa
xor
adcl
sbb
clc
add
data16
imul
fcoms
jno
pusha
pop
adc
dec
push
test
bound
xchg
mov
inc
adc
jle
icebp
cmp
stos
lock
shl
pushf
mov
dec
jae
or
icebp
test
push
pop
push
inc
movsb
adc
loop
icebp
mov
mov
loopne
inc
add
call
nop
lret
arpl
lock
in
sub
jb
sbb
iret
cltd
and
sarb
ljmp
inc
fsubrs
scas
push
gs
adc
mov
aas
mov
data16
jmp
sub
andb
sbb
cwtl
and
fdivs
in
xor
repnz
dec
rcrb
scas
addr16
mulb
push
add
inc
add
sbb
pop
or
es
xchg
cwtl
ret
and
nop
aam
xchg
xchg
insl
push
add
xchg
ds
pop
je
ret
mov
xchg
pop
or
sub
cmp
jb
dec
mov
push
popf
and
jno
xlat
inc
push
movl
fsubs
dec
ret
movsb
fwait
inc
rorb
dec
and
dec
push
and
fnstsw
add
mov
xchg
jb
pop
and
cmpsb
mov
aas
out
adc
sti
or
incb
or
pushf
gs
pop
push
ret
fwait
push
mov
mov
dec
call
ja
fbld
call
std
rolb
adc
jp
loopne
xchg
out
and
sti
mov
and
cmpsl
addr16
cmp
mov
xor
adc
inc
and
ret
pop
popa
daa
push
and
jl
leave
rolb
inc
mov
sbb
sbb
push
jns
jo
loopne
aaa
and
and
enter
dec
out
movsl
mov
sbb
orl
or
adc
dec
and
sbb
cld
sbb
add
or
shl
test
and
xor
sub
add
jge
bound
scas
pop
pop
je
and
outsb
push
les
das
rorb
lea
jno
pop
lods
push
inc
faddl
xchg
xchg
and
adc
inc
movb
mov
loop
xchg
jb
insb
lahf
adc
dec
loope
mov
and
jp
hlt
jecxz
adc
sub
mov
clc
aad
cmpsb
mov
jae
xchg
mov
mov
rorb
xchg
add
ljmp
int3
sub
pushf
pop
sti
hlt
andl
dec
dec
fistl
dec
shlb
lcall
xchg
lcall
sub
loopne
loope
pop
cmpsb
in
sbb
repz
push
and
inc
incb
pop
lods
popf
or
scas
sbb
nop
hlt
add
rolb
cltd
or
enter
mov
add
cmc
sbb
jbe
bound
clc
xchg
inc
mov
add
push
mov
stos
aad
xchg
mov
shr
push
orb
out
mov
shrb
jge
out
xchg
or
sarb
adc
mov
push
rorl
pop
cs
loopne
mov
ss
adc
pop
test
out
sub
push
sub
jecxz
sub
add
xchg
inc
sbb
popa
sbb
fisubs
sbb
es
and
sub
icebp
aad
pop
lods
test
mov
andl
add
and
faddp
jp
jne
mov
add
cmp
cld
push
sub
rolb
add
clc
dec
xchg
repnz
cmp
aas
aad
test
pop
fs
outsb
leave
fst
adc
outsb
ja
popa
cmp
pop
or
push
adc
dec
sbb
or
ds
mov
pop
add
stos
xor
mov
cld
dec
jg
jecxz
test
sbb
dec
mov
lea
and
insl
xor
xor
cs
pop
mov
inc
mov
das
sbb
or
mov
dec
test
add
mov
lcall
push
push
es
out
inc
call
mov
push
mov
sbb
inc
push
push
cli
dec
mov
enter
andl
xchg
mov
add
iret
icebp
adc
mov
cld
sub
orw
dec
sub
mov
movsb
add
pushf
pop
jp
mov
je
ljmp
ficomps
popf
xlat
clc
negb
es
or
add
js
dec
outsl
push
sub
push
or
jo
out
xchg
or
cmp
nop
inc
mov
mov
push
sbbb
enter
mov
jl
stos
decl
and
inc
add
inc
push
sbb
pop
mov
incl
add
xor
sub
fildl
daa
lods
int3
cmp
sbb
sub
sarb
fwait
push
mov
fucomi
sahf
loopne
repnz
mov
push
xor
mov
jmp
cltd
pop
xor
or
callw
jae
psubd
jne
mov
sub
push
test
and
cmp
adc
inc
sti
push
jmp
push
adc
hlt
jecxz
testb
ret
loop
sub
push
sbb
add
pop
pop
inc
fbld
sahf
mov
sahf
sbb
test
xor
sbb
js
adc
test
loop
or
mov
and
icebp
jno
xchg
loop
test
jge
je
jp
mov
jns
sbb
mov
jp
icebp
rcrl
mov
je
fcompl
xchg
outsb
cmp
mov
incb
add
cs
sbb
cmpsb
xchg
imul
in
or
test
mov
fs
lea
pop
jle
xchg
sbb
movsb
sbb
inc
ficompl
dec
out
jg
mov
and
adc
loopne
xchg
les
fcomps
in
mov
push
xor
pop
sbb
sbb
adc
inc
cmpsl
ss
mov
test
xorb
lods
dec
push
sbb
xor
mov
dec
sub
addr16
hlt
rorb
sub
out
xchg
rolb
test
mov
add
clc
dec
add
mov
add
out
jns
lods
and
lds
lods
ror
xor
imul
jle
push
js
nop
stos
ds
cmp
jg
rcl
inc
iret
into
dec
mov
push
arpl
clc
scas
cs
icebp
call
mov
adc
or
cs
and
into
scas
nop
mov
fidivrl
shll
gs
ljmp
push
add
jge
clc
cmp
or
test
lods
jb
mov
mov
insb
mov
push
pop
aad
or
es
sub
pushf
add
jb
jecxz
cmp
cmpxchg
ljmp
pop
js
cmp
outsb
pop
jmp
dec
aam
ret
xchg
push
repnz
aas
lret
js
test
jo
sbb
push
sub
push
cltd
fimull
push
sbb
xor
aam
imul
subb
jo
test
add
or
fucomi
inc
xchg
call
mov
les
sbb
cmp
cltd
mov
cli
pop
jb
add
adc
add
dec
xchg
iret
pop
loopne
outsl
push
inc
mov
es
scas
mov
sub
ffreep
dec
out
mov
jo
push
loope
shlb
jbe
ficoms
mov
cld
cwtl
add
xor
inc
fsubrl
jge
ds
mov
in
rolb
mov
mov
xor
push
clc
jecxz
add
dec
test
rorb
dec
pop
inc
xchg
cli
mov
hlt
jbe
mov
add
mov
fadds
addr16
mov
out
cmpsb
in
mov
and
std
inc
adc
mov
jnp
outsb
add
mov
xor
jecxz
sbb
add
pusha
push
add
pushf
lahf
imul
aam
xlat
dec
pusha
test
hlt
aam
decb
add
movsb
jnp
inc
jne
cwtl
jne
in
mov
cli
push
stc
idivl
shl
dec
cmpsl
loopne
pusha
lods
inc
add
push
mov
sub
push
shlb
xlat
stc
mov
jmp
fsubrs
add
xor
mov
stos
iret
push
daa
xchg
push
xchg
mov
mov
sbb
lods
fldl
and
iret
leave
pusha
xorb
enter
or
or
cmpsb
xor
aas
jp
hlt
push
inc
push
je
mov
loope
jecxz
push
adc
adc
and
jno
rcrb
ret
stc
ds
ffreep
and
xor
lcall
jno
push
sub
lcall
mov
mov
movb
cli
pop
adc
jge
stos
sub
pop
pop
arpl
fwait
ss
xchg
sbb
adc
js
mov
aam
push
cs
adc
fdivrl
imul
inc
clc
loopne
dec
push
lods
jle
adc
cmpsl
mov
xchg
and
xchg
cli
pop
pop
mov
in
insb
add
mov
ss
sub
out
and
mov
jle
or
fs
jp
cmp
sub
dec
sbb
sbb
mov
xor
lock
add
fcmove
add
icebp
xor
rcl
dec
push
mov
push
aad
stos
mov
sub
mov
les
ja
call
mov
adc
jno
sti
cwtl
in
xchg
sbb
xorl
sbb
inc
dec
mov
dec
and
inc
lock
scas
fadd
sbb
test
inc
inc
mov
cmp
add
lock
fcom
mov
imul
insl
js
filds
mov
mov
jae
mov
sbb
and
aas
shlb
cmpsb
add
sbb
or
inc
pop
pop
cli
cmp
xchg
push
insb
push
dec
adc
loopne
adc
pop
stc
gs
or
add
andb
push
xor
add
inc
add
mov
fnsetpm(287
das
mov
xchg
pop
cli
and
lds
xor
and
test
push
lahf
or
and
inc
push
stos
aam
ljmp
pop
adc
push
adc
dec
cmp
mov
cmp
movb
in
mov
cmp
pop
and
xor
or
mov
cltd
cmp
sbb
imul
or
call
dec
pop
ja
push
mov
std
and
sti
ss
aam
add
std
in
fists
jne
in
je
inc
mov
and
lock
xchg
dec
mov
loop
pop
stos
stos
add
pop
or
jg
inc
and
inc
cmp
iret
inc
pop
or
into
movsl
daa
inc
fs
scas
aam
adc
fdivs
aad
scas
test
cmp
jo
xchg
mov
mov
cmp
lods
inc
mov
pop
xchg
dec
repz
cmp
pop
ja
notb
lock
dec
je
push
test
mov
aas
mov
lock
inc
loope
add
ret
push
add
icebp
adc
call
inc
xorl
dec
cmpsl
jl
and
pop
mov
movsb
loopne
scas
sbb
out
sbb
pop
mov
pop
cmpsl
sbb
pop
push
inc
pushf
pop
push
clc
pop
call
sbb
aad
sbb
std
popl
and
cmp
and
add
dec
stc
and
mov
into
lahf
nop
std
loop
outsb
and
icebp
stos
cmp
aam
add
mov
fimull
outsl
fdivs
lret
test
movsl
and
mov
inc
test
fistps
fs
fwait
aam
mov
aaa
insb
test
cmpsl
mov
push
sahf
dec
xor
je
inc
mov
xorl
hlt
xorb
rclb
adc
out
sub
mov
pushf
sbb
sbb
pop
sahf
ds
and
rol
add
sub
stos
fidivrl
jne
and
inc
pop
arpl
ljmp
cli
jbe
mov
mov
or
scas
push
push
lock
xorl
pop
adc
lods
mov
push
pop
mov
jecxz
jle
rorb
std
test
push
mov
rclb
dec
mov
sbb
cmpsl
cmp
pop
mov
jp
add
fwait
pop
lods
mov
fisttpl
jbe
push
add
fisttpl
and
adc
cmp
mov
call
dec
movsb
mov
mov
inc
das
dec
xor
jle
add
or
cs
push
lock
push
mov
inc
adc
adc
lock
incb
mov
cmpsb
mov
into
fcompl
pop
jp
sahf
leave
jb
pop
testb
in
and
jle
lea
cltd
push
fildl
clc
add
jb
fstpt
jp
les
lahf
mov
push
rol
sahf
or
push
mov
ljmp
fdivrs
out
mov
fbld
xor
and
lcall
or
les
push
mov
loop
mov
add
mov
lcall
push
mov
mov
jo
mov
mov
test
mov
sub
push
dec
shlb
mov
movsl
mov
xor
pop
imul
adc
mov
stos
mov
ficompl
lds
scas
out
xchg
fisttpl
xor
xor
js
and
ljmp
pop
push
mov
fdivs
out
arpl
cmp
data16
fwait
sahf
test
push
sbb
mov
scas
add
dec
and
mov
sbb
add
push
xchg
sbb
jp
adc
sar
les
or
inc
inc
sahf
int3
es
xor
jbe
mov
push
sub
pop
xchg
pusha
sub
push
sbb
cwtl
movsb
jp
lock
andl
mov
std
fistps
lea
fwait
out
sti
add
inc
loop
dec
sbbl
bound
cs
data16
or
xor
or
lods
call
dec
int3
mov
sbbb
add
mov
sbb
mov
add
inc
jno
push
or
ljmp
mov
xlat
aad
movsb
push
test
imul
sbb
sbb
movsl
xchg
test
pop
jo
dec
jl
fwait
dec
pop
int3
fadd
mov
push
lcall
mov
pushl
aad
push
leave
fistps
sub
sub
cmp
rsm
rclb
mov
lcall
sub
mov
mov
add
inc
and
pop
loopne
fstpl
stc
jae
cmp
add
cli
mov
negl
add
adc
inc
or
int
rorl
add
adc
mov
push
fcoml
pop
add
jo
xchg
or
orb
repz
rorl
inc
mov
or
call
ss
sbb
andl
mov
mov
lock
and
sub
lods
add
inc
pop
test
jl
adc
or
sbb
add
ret
addb
pop
pop
js
mov
sbb
inc
ljmp
mov
cmp
inc
and
ds
mov
into
and
cmp
loop
dec
xor
test
mov
das
and
jae
jl
mov
loopne
scas
in
cs
fnstsw
xchg
mov
std
fldt
dec
rsm
mov
insb
push
xchg
clc
pop
xor
mov
adc
fbld
mov
cmp
outsb
and
cmp
imul
or
aas
inc
add
and
mov
jge
pop
data16
das
test
mov
ja
or
dec
in
cmp
xor
nop
push
mov
mov
shlb
roll
fists
push
adc
mov
jbe
mov
xor
out
ret
cmp
movsl
mov
mov
add
xchg
test
enter
pop
cwtl
mov
call
add
mov
xor
cmc
cmc
or
sbb
adc
pop
shlb
jg
fnstcw
cmp
and
mov
fldt
or
jl
cld
les
inc
dec
mov
inc
iret
pop
inc
push
lods
and
mov
sbb
sub
dec
sub
ljmp
lret
lcall
fdivl
pusha
dec
std
fwait
add
inc
xchg
lods
pop
lods
xor
out
push
push
lret
adcb
mov
xchg
fadds
cmp
sub
pop
call
mov
icebp
dec
xchg
xchg
stos
aaa
xor
aad
or
cltd
rorb
stos
inc
std
jne
loop
fnstsw
adc
and
inc
shll
push
jno
add
mov
and
sub
jo
inc
pop
and
addb
mov
mov
filds
add
fsts
and
ret
xchg
lret
mov
cmp
push
mov
xor
int3
mov
outsl
out
dec
pop
mov
dec
loopne
mov
push
les
push
cmp
fcompl
inc
or
jl
sarb
popf
cmp
loopne
sahf
nop
push
cli
mov
cmc
jmp
jmp
std
push
stc
repz
push
rolb
and
rcr
inc
mov
fsts
or
testb
inc
mov
mov
cld
testb
sbbl
push
js
push
mov
test
adc
stos
push
xlat
pop
in
push
lcall
testb
cmc
imul
dec
push
insb
mov
js
lea
add
gs
dec
fiaddl
lock
test
jle
les
repz
adc
sub
jg
pushf
and
mov
ds
push
pop
xchg
hlt
outsl
scas
sar
push
sub
cmc
cmp
add
imul
pop
cli
jne
sar
mov
xchg
mov
jmp
cwtl
aaa
insb
das
fsubp
sbb
test
add
jle
lods
loope
pop
adc
and
push
and
jno
mov
mov
in
nop
sti
pop
push
fldcw
int3
test
or
push
or
add
jl
sub
outsb
divps
imull
and
sahf
testl
xor
test
movsb
and
mov
sbb
push
xor
and
push
mov
xchg
add
cltd
cmp
and
or
add
xlat
and
popf
inc
add
pushf
mov
vpsllw
scas
ja
out
or
das
or
mov
shlb
icebp
xor
inc
adc
pop
in
sbb
add
cmc
in
aaa
add
mov
iret
fadds
cld
push
lods
mov
imul
pop
mov
js
cmpl
mov
mov
mov
bound
pop
push
mov
add
rcr
sarb
test
xor
lcall
mov
les
lods
ds
push
iret
rol
jo
push
or
int3
sub
xchg
push
inc
addr16
adcl
jmp
mov
adc
mov
orb
push
mov
test
fidivs
or
cmp
sbb
pop
clc
lock
sbb
stos
sbb
dec
push
cltd
sub
jle
jp
daa
and
mov
xchg
or
cs
and
test
add
cmp
data16
lock
mov
lds
test
xor
or
sub
jo
push
xchg
fstl
cs
cmp
insb
xor
push
js
pushl
incl
or
outsl
in
mov
xchg
mov
ret
add
scas
pop
lock
or
xchg
or
fnsave
sub
xlat
aad
into
push
sbb
test
push
fmull
sub
or
enter
cmp
push
sub
pushf
push
xor
aad
ret
xor
fwait
pop
or
arpl
jmp
lret
pop
fbld
mov
push
inc
and
aaa
ret
inc
xor
lcall
jbe
jg
cld
jl
push
repz
mov
push
movsb
mov
loope
jg
sarl
repz
pop
jmp
or
add
in
insb
bound
icebp
int3
xchg
addl
pop
push
cmp
mov
in
mov
push
sar
cld
ds
sahf
dec
sbb
outsb
nop
mov
xor
jnp
mov
pop
fistl
mov
in
push
in
jg
test
jns
scas
mov
add
je
lds
mov
mov
lahf
bswap
pop
andl
mov
jmp
adc
and
or
popf
xchg
sbb
push
pop
push
pop
std
les
dec
pop
cmp
mov
scas
adc
or
sub
subb
sub
nop
std
push
out
mov
ja
sub
pop
insb
jbe
loopne
xchg
pop
mov
mov
je
ret
sub
dec
push
mov
pushfw
push
jmp
jmp
cmp
jo
fwait
lods
test
mov
dec
pop
add
or
sbb
andb
lcall
pop
adc
roll
cmp
aaa
push
and
aam
negb
enter
hlt
aam
mov
into
outsl
loop
xchg
movsb
xor
mov
clc
xchg
mov
push
inc
gs
or
imul
push
jmp
push
inc
adc
inc
sar
gs
lret
and
int3
mov
shlb
stos
jl
and
add
int3
sbb
push
inc
or
mov
mov
loope
sub
xlat
jl
mov
mov
shlb
scas
xchg
push
dec
inc
push
sbb
out
or
jle
mov
or
int
xchg
bnd
jae
jo,pt
mov
hlt
sarl
sbbl
push
insb
out
jecxz
shlb
clc
jmp
cwtl
sbb
and
movsb
sbb
cli
xor
pop
into
add
cs
jns
xlat
adc
test
xchg
push
jmp
call
inc
sbb
and
adc
sbb
test
arpl
ds
jp
inc
lods
cld
push
test
je
push
test
sbb
mov
sbb
inc
inc
jnp
sbb
pop
and
inc
sub
jmp
lret
add
cmpsl
test
lock
pop
shlb
or
fs
incb
push
popa
inc
inc
icebp
je
pop
pop
push
pop
mov
jnp
negb
stos
loopne
or
add
insb
cld
pop
push
sub
bound
and
repz
cld
add
add
mov
ds
push
inc
add
jle
mov
or
and
in
stos
or
and
mov
adc
sub
gs
pop
lea
aad
es
pop
and
xchg
les
pop
push
cwtl
lret
push
cmp
jle
pop
icebp
insb
sbb
or
nop
pop
xchg
lock
sub
rolb
shrb
dec
adc
inc
in
aam
mov
push
sub
dec
jge
or
jbe
inc
add
pushf
ds
jl
cmp
es
sub
pop
push
mov
dec
cld
negb
fs
subb
sbb
or
add
adc
cltd
clc
push
push
pop
es
mov
pop
cli
mov
mov
imul
icebp
ljmp
cmpsb
cld
push
jnp
jle
add
les
sub
movsb
loopne
push
stos
mov
jae
dec
pop
aaa
jle
cwtl
or
jne
and
adc
mov
dec
popf
rclb
bound
or
sub
insl
xor
loop
lcall
jo
sub
movl
jmp
cmp
rcll
lret
fucomip
fstp
cwtl
xor
jo
jbe
xchg
xor
pop
sbbl
cli
or
pusha
xchg
mov
cmp
out
int3
imull
xchg
jmp
xchg
pop
movzbl
ss
mov
push
mov
arpl
bound
ss
mov
dec
es
or
sub
inc
ljmp
pop
mov
popf
push
lcall
clc
iret
ret
enter
call
roll
sub
call
cmpsl
icebp
add
lock
mov
jne,pt
dec
faddp
leave
imul
jbe
sub
std
and
imul
add
scas
outsb
mov
test
mov
cmp
scas
cs
dec
leave
jns
xchg
inc
mov
cmpsb
scas
inc
test
mov
call
cld
dec
cli
clc
cmp
push
out
inc
scas
rolb
insb
stos
loope
scas
dec
das
cli
add
mov
into
stos
icebp
das
xor
mov
mov
add
imul
test
cmp
jnp
and
mov
cmp
push
mov
test
pop
mov
or
mov
add
push
inc
add
xchg
mov
shrb
cmc
mov
push
adc
insl
mov
jge
xor
or
and
dec
mov
mov
adc
cli
and
test
dec
cmc
xchg
outsb
neg
stos
or
mov
dec
push
sahf
ror
inc
rolb
sub
bound
mov
aas
bound
push
cmpsb
mov
jp
mov
pop
ficompl
mov
shlb
ljmp
fmuls
mov
pop
ret
sbb
sar
cmp
pop
sub
jno
cmc
pop
sub
movsl
sub
jae
rcr
cmp
shll
or
pop
pop
shrl
xchg
data16
adc
test
adc
cld
mov
xor
mov
and
addl
jg
loope
jg
mov
data16
xchg
push
jns
cmpsb
stos
add
call
mov
jl
inc
roll
stos
rcr
inc
das
loop
fs
sub
or
mov
scas
call
dec
ror
fadds
rorb
xchg
fsubrs
and
repnz
cmp
pop
mov
lods
add
and
icebp
xchg
mov
stos
xchg
pop
aas
rcr
ljmp
jl
dec
loopne
pop
xor
adc
call
mov
jle
sub
loope
jae
sbb
lea
pop
dec
and
xchg
lea
pop
push
push
inc
mov
arpl
mov
lods
add
leave
les
pusha
push
push
sarl
sbb
mov
cmpsb
xlat
ljmp
pop
jl
mov
sbb
add
add
mov
add
xchg
and
and
lock
inc
call
sbbl
les
mov
das
cmp
push
and
icebp
fisttpll
and
mov
and
mov
cli
lods
aad
dec
or
push
sbb
mov
aaa
aam
fmull
fxch
push
jns
repnz
sub
pop
in
pop
and
cld
pushf
add
xchg
mov
fwait
std
rolb
adc
inc
sub
push
sbb
pop
jl
js
mov
sub
mov
ret
push
out
cmp
push
mov
lock
sar
mov
imul
xor
cmp
dec
rep
pop
icebp
dec
xor
jne
jge
mov
mov
pop
pop
jecxz
jmp
mov
sbb
push
cld
rolb
ljmp
loopne
add
and
add
rorb
mov
scas
call
insl
inc
aam
mov
lock
fwait
subl
adc
enter
sahf
enter
pop
sub
mov
pop
inc
sarb
sub
ds
fnstenv
pop
mov
push
sbb
filds
dec
roll
adc
aaa
mov
shlb
cmpsb
loope
sub
lods
adcb
jo
mov
jo
shlb
orl
cmp
add
call
shr
mov
mov
push
xor
call
ret
lea
int3
out
mov
inc
movsb
sbb
int3
sbb
pop
data16
sbb
xchg
or
inc
andnps
rorb
adc
cs
sbb
cwtl
aam
orb
test
or
nop
jge
jno
insb
push
bound
add
dec
orl
xor
inc
dec
pop
inc
dec
out
push
push
mov
cmp
cs
adc
sahf
adc
mov
rorl
ljmp
xchg
outsb
xchg
and
xor
mov
jbe
outsb
mov
push
cmp
pusha
std
push
cltd
fs
mov
lea
inc
xchg
mov
aad
lock
xlat
add
mov
imul
imul
into
sub
mov
int
out
and
out
pushf
mov
or
je
mov
test
unpcklps
sub
pop
inc
dec
sbb
adc
je
loopne
js
add
jnp
testb
ljmp
rcrb
movsl
pop
inc
incl
pop
add
je
jns
sub
xchg
or
push
fcompl
jo
sbb
or
out
mov
test
fcomps
mov
mov
lret
loope
and
sbb
pop
sahf
inc
arpl
inc
add
and
add
jle
jecxz
sbb
aaa
cwtl
cmpsl
cmpsl
fwait
push
push
add
icebp
xchg
call
sbb
cmovle
aas
dec
xor
mov
mov
or
push
bound
push
inc
push
clts
cld
jbe
fcomps
fidivrs
loope
cmpsl
lret
dec
fisttpll
add
movsb
push
adc
push
insb
fnstsw
pop
adc
push
cmp
jg
xlat
je
aaa
pop
mov
fiaddl
pusha
sbb
xchg
call
ss
jo
sub
adc
int
scas
mov
lock
xor
jl
sub
int3
lds
les
mov
and
int3
xor
pop
sahf
mov
dec
aam
pusha
adc
insl
and
stc
add
decb
call
and
push
ja
jb
dec
lods
in
lcall
pop
arpl
sub
mov
mov
fdivl
dec
push
ss
faddl
push
ljmp
cmp
jl
mov
imul
or
add
and
xchg
add
add
xor
mov
inc
xor
sbb
dec
pop
inc
fists
inc
lods
add
aam
dec
dec
das
adc
ret
daa
loope
pusha
jnp
sbb
adc
and
and
xor
mov
addb
xor
test
rorb
mov
push
idivl
add
inc
adc
lds
loop
loopne
sub
jp
push
sub
dec
push
imul
aad
mov
stos
popa
push
mov
cmp
fs
ret
jg
fcompl
sahf
cmpsl
dec
je
sub
or
xchg
out
sbb
adc
mov
jmp
sub
mov
add
dec
xor
mov
inc
dec
and
rclb
pop
mov
xchg
mov
xor
mov
mov
pop
jl
outsb
cmp
fldenv
jp
repz
icebp
dec
inc
outsb
pushf
loop
mov
popa
mov
mul
pop
adc
das
cmc
imul
out
test
push
xchg
shrb
xchg
add
mov
bound
inc
and
cmp
inc
push
add
push
fmuls
iret
sbb
push
imul
cli
lds
xchg
shll
add
icebp
inc
cmp
or
xlat
loopne
mov
in
decl
inc
out
inc
or
and
sub
inc
mov
xchg
enter
or
push
or
cmp
inc
test
sbb
inc
stos
outsb
and
aaa
mov
jns
shlb
mov
sub
adc
mov
imul
leave
mov
lods
cmp
sub
xor
jne
dec
push
sbb
xor
mov
decb
mov
add
insl
add
cmp
mov
sub
cmp
xchg
popa
dec
movaps
add
and
cli
jno
aad
sub
scas
push
enter
mov
xchg
int3
push
jmp
push
sbb
js
insl
aaa
mov
scas
popa
jae
outsl
addr16
xchg
movsb
fwait
push
or
insb
hlt
fdivrl
and
rorb
cmp
sub
popf
push
dec
jmp
push
or
out
test
adc
cmp
mov
mov
sub
int3
rcrb
push
xor
mov
lret
xor
inc
ret
imul
push
mov
mov
aaa
ja
or
ljmp
adc
loopne
add
adc
xchg
adc
rol
out
cld
ret
stos
pop
pop
push
fisttpl
and
cli
xchg
test
pop
stc
xchg
push
les
sub
push
push
or
mov
inc
in
add
in
mov
cltd
dec
stos
std
dec
adc
imul
std
push
add
cmp
scas
adc
sub
cmc
ss
cli
int3
add
mov
divl
mov
add
fsqrt
movsb
sahf
adc
or
aaa
adc
adc
ret
jb
mov
adc
ljmp
pop
sbb
clc
pop
lods
pop
subl
icebp
and
cmp
test
mov
pop
dec
cmpsb
add
adc
jp
std
ja
dec
jno
sbb
mov
decl
loopne
add
js
push
stos
lock
fs
call
mul
mov
adc
inc
mov
xor
xchg
push
pop
add
dec
clc
dec
ss
add
xor
mov
addr16
shll
nop
out
pushf
jns
dec
movb
or
adc
dec
push
movsl
push
and
and
add
in
shrb
subb
or
jmp
jmp
adc
inc
xchg
or
ret
dec
int
ret
dec
mov
stos
outsb
add
sbb
jno
cmp
adc
stos
push
adc
pop
jmp
jbe
jge
inc
loope
sti
pop
out
jge
mov
push
jne
add
push
shlb
mov
jge
orb
scas
push
jnp
movsl
in
mov
daa
test
sbb
scas
pusha
push
inc
adc
pusha
or
sbb
lahf
push
lds
inc
push
inc
test
push
dec
push
dec
ret
test
add
push
das
and
jmp
jmp
add
dec
fsts
mov
icebp
std
fildll
add
xor
pop
ljmp
push
cmc
call
cld
daa
mov
ja
rcrl
jl
xchg
lea
jns
loop
fwait
test
add
lods
lock
push
pop
mov
fdiv
sub
xor
call
dec
mov
sub
into
mov
fldl
mov
add
movzwl
pop
and
addr16
push
jbe
loope
sub
enter
mov
add
arpl
adc
or
nop
jo
fdivp
repz
cmp
clc
and
xchg
outsb
cld
adc
mov
xor
imul
push
xchg
jne
cmp
mov
add
clc
xchg
incw
dec
je
add
add
push
sbbl
dec
cld
mov
loopne
inc
loope
sub
pop
test
stc
add
pop
push
mov
movsb
rcll
aam
mov
in
dec
stos
mov
add
mov
xor
cld
and
icebp
add
mov
pop
loope
pop
dec
jge
nop
jnp
call
xchg
mov
cmc
lea
jb
aaa
inc
fs
mov
mov
lods
adc
aad
or
cmc
lods
pop
mov
fcoms
and
shll
pop
lahf
aam
xchg
in
push
push
push
jle
xchg
inc
out
pop
or
jl
push
xor
pop
rcrb
xchg
test
test
clc
rsm
pop
mov
mov
test
cs
sub
pop
fiaddl
fsubrs
push
inc
imul
mov
xchg
loop
sbb
cli
and
fistps
add
faddl
faddp
mov
push
out
inc
fs
call
sub
push
push
xor
or
pop
lahf
adcl
jp
loope
cwtl
cmpb
inc
mov
adc
inc
add
je
pop
cmc
cmp
mov
add
push
sti
lods
incb
ss
ljmp
gs
movsb
insl
sub
aaa
stos
fmull
mov
int3
and
cmpsb
push
add
mov
call
xchg
push
sbb
js
ret
jle
push
sarl
xlat
imul
outsb
ljmp
adc
popf
lock
cli
sbb
testb
je
dec
jl
inc
les
frstor
iret
dec
arpl
pop
jecxz
jno
add
mov
into
fbstp
xor
sub
adc
loopne
add
mov
xchg
test
arpl
enter
mov
mov
adc
push
dec
fs
sbb
push
pop
sub
push
loope
or
fs
or
add
mov
cmpsb
cmp
subb
repz
sbb
ds
stos
cmpsb
decb
mov
mov
add
invd
scas
sbb
mov
mul
lret
ret
in
inc
mov
ss
dec
in
fcomps
dec
add
loop
adc
push
hlt
clc
clc
push
jb
mov
adc
sahf
dec
mov
inc
cmpsl
add
loopne
xor
add
lock
adc
orb
push
adc
or
adc
add
data16
mov
and
push
aam
sar
out
movsb
pop
mulb
inc
push
adc
and
es
aaa
into
or
mov
mov
test
in
mov
push
lea
jg
cmc
pop
test
push
rcrb
fcomps
adc
lds
pop
or
mov
mov
jbe
jg
sub
cmpsl
mov
aad
and
inc
lret
mov
inc
movsb
dec
mov
sub
and
aam
pushf
add
test
data16
addl
inc
out
sarl
dec
std
movsb
push
and
dec
cmpsb
js
aad
repnz
inc
adc
adc
jp
push
loop
gs
push
cs
test
or
inc
fimuls
adc
std
xor
movsb
test
push
inc
adc
sbb
xchg
int
enter
adc
push
sbb
fistpll
pop
fisubrl
sub
xlat
jg
adc
cli
jle
sub
cmp
mov
std
cmp
loop
sub
enter
out
dec
cmp
sbb
xchg
mulb
xlat
mov
dec
mov
or
insl
js
xor
push
add
mov
in
movsb
mov
int3
test
les
cld
add
xor
push
and
mov
or
loopne
or
dec
fidivs
out
nop
and
push
fdivl
dec
inc
or
jg
loopne
into
sub
iret
inc
push
das
jl
adc
cmp
adc
ss
or
mov
lahf
mov
adcb
mov
lods
jl
xchg
cmp
inc
push
adc
out
or
call
out
push
add
jecxz
orb
jmp
push
pop
lret
mov
push
dec
fisttpl
mov
fmull
mov
subb
mov
mov
mov
cld
add
pop
mov
inc
and
jl
cmpl
lds
hlt
and
inc
int
lret
aam
dec
mov
fld
add
sahf
es
cli
call
fildll
and
dec
mov
push
sbb
repnz
aam
mov
fildl
mov
xor
shlb
rcll
sbb
subb
mov
mov
shll
or
push
fcmovne
test
mov
stc
std
push
sbb
lcall
inc
xor
adc
sbb
push
mov
push
ss
adc
add
pop
rorb
ret
push
xor
and
jmp
into
sahf
movsb
xor
hlt
inc
imul
in
movb
test
mov
lods
or
test
sahf
add
pusha
add
sub
js
cli
cltd
sbb
cld
mov
clc
popa
enter
jae
clc
or
insl
lods
or
test
dec
jg,pn
mov
sub
dec
aam
lret
push
dec
mov
rorl
enter
mov
inc
jp
push
dec
aas
xchg
mov
cmpsl
mov
jge
lock
jb
aad
jp
outsl
push
movsl
sbbl
push
add
add
and
add
int
in
add
test
add
mov
add
pop
inc
pushf
xorl
andl
cmp
pop
push
ret
push
pusha
or
fists
add
lock
leave
pop
out
cmp
outsl
repnz
call
les
mov
mov
ficompl
mov
jle
rclb
cmpb
sbb
fistpll
insb
mov
pusha
adc
dec
jmp
cmp
adc
pop
addl
or
mov
hlt
ficoml
sbb
sbb
mov
ja
mov
inc
cmp
shrb
push
mov
sub
xor
std
loope
stos
cmpl
push
fdiv
pop
negb
cld
mov
cmpsl
pusha
lret
popa
push
push
loop
mov
inc
pop
jle
push
ja
sbb
adc
adc
lods
outsb
aam
das
inc
mov
jmp
push
dec
outsb
mov
or
int3
jle
nop
and
rclb
mov
jo
fildll
in
mov
pusha
sbb
sbb
mov
sub
inc
and
hlt
mov
fs
out
aas
mov
mov
iret
hlt
hlt
mov
movsl
outsl
add
shl
mov
push
sub
inc
mov
daa
add
cli
xor
mov
rorb
flds
cmp
xchg
and
js
and
aaa
lea
mov
lcall
mov
es
xor
add
mov
sub
jp
xchg
mov
xor
ss
fisubrl
mov
cmp
lods
outsb
repz
pusha
sti
insl
mov
loope
inc
lock
adc
in
cld
cltd
fbld
inc
jge
or
dec
dec
cwtl
mov
mov
dec
into
mov
push
andb
insl
push
xlat
dec
inc
sti
out
insl
enter
add
push
fildl
pop
in
hlt
out
in
mov
xchg
mov
cmc
mov
scas
nop
cli
mov
push
xchg
inc
sub
repnz
pop
lock
sbbl
push
mov
adc
mov
xorl
ss
pop
sub
xor
hlt
rcl
add
mov
ds
int3
mov
mov
aas
mov
sbb
or
mov
lcall
push
push
push
loop
sub
pop
cs
push
pop
mov
mov
or
cmpb
add
push
pop
sbb
fstp
add
inc
rclb
movsl
ja
inc
cmp
push
out
frstor
dec
in
jl
inc
inc
cld
and
pop
ds
mov
movsb
addb
xchg
add
cmp
dec
outsb
lret
mov
or
mov
fiaddl
popf
ret
mov
pop
nop
sub
mov
xor
inc
stos
xor
push
in
and
add
inc
shrb
sbb
sub
push
call
lods
and
push
lret
js
sub
push
mov
rorb
cwtl
sub
arpl
in
cs
jne
mov
and
pushf
data16
mov
pop
ret
adc
cmp
xchg
add
pop
ja
fisttpll
clc
xor
or
or
and
stos
sbb
cmp
jg
pop
mov
jle
popf
call
in
subl
pushf
mov
lahf
ds
inc
cld
mov
mov
inc
orb
call
jp
ficomps
jnp
pusha
push
sub
cs
fildl
xor
cmc
testl
jle
or
xchg
lret
mov
sub
inc
cli
adc
lcall
sub
dec
lcall
jmp
loopne
adc
jp
je
mov
pushf
aaa
or
adc
jo
pusha
adc
addr16
inc
jp
push
dec
test
or
stos
add
ret
jne
insb
mov
or
mov
dec
lret
sub
jnp
push
xor
mov
xor
and
add
inc
mov
push
pop
inc
inc
xlat
xor
hlt
push
pop
jecxz
xor
adc
sbbb
in
cmpsb
inc
pop
bound
mov
lret
movsb
push
mov
ret
pop
loop
aas
subl
jno
decl
fisubrs
movsb
adc
into
or
in
add
test
mov
pop
fcmovne
roll
push
mov
adc
test
ret
outsl
adc
mov
xorb
rorl
push
pushf
cs
adc
inc
insb
add
mov
lcall
aaa
call
sbb
cmp
sbb
aas
dec
test
nop
jno
movsb
ficoml
imul
or
lock
and
sub
mov
add
lds
xor
add
fistl
jle
out
push
and
test
lds
ficomps
stos
jecxz
pop
sbb
cld
push
push
fcmovb
es
push
xor
xchg
or
mov
or
dec
pusha
cmpsl
fiadds
lods
daa
adc
cmp
cli
mov
push
adc
pop
js
add
push
adc
add
rcrl
fdivrs
add
cmc
mov
ficoml
stos
cmpsb
and
pushf
sbb
and
jecxz
mov
inc
je
arpl
push
add
dec
rorb
in
and
add
jge
and
jnp
and
pop
inc
gs
add
xchg
xchg
mov
pop
je
test
pushf
aaa
dec
lret
cmpsb
adc
mov
pop
mov
lret
cmp
pop
fldl
and
ljmp
fldl
xchg
add
jns
dec
loopne
xchg
add
jp
jecxz
pop
jae
cmp
cmp
add
daa
mulb
cmp
sti
adc
mulb
sarb
lock
inc
add
cmpsl
inc
std
fisttpl
into
add
in
adc
stos
hlt
rolb
sub
rolb
adc
test
aad
sub
jle
push
pop
mov
sub
leave
xchg
mov
mov
scas
sti
loope
mov
ds
int3
dec
testb
stos
jp
jne
lcall
or
xchg
rclw
dec
dec
push
hlt
add
sub
pop
loop
scas
js
pusha
or
cwtl
or
pop
inc
bound
push
in
stos
or
in
jo
hlt
push
inc
pop
sbb
test
les
push
xor
jge
in
or
call
adc
pop
das
sbb
dec
das
cmp
xlat
in
and
sahf
mov
sbb
mov
jmp
inc
test
orb
stos
dec
fcoms
mov
push
fiaddl
sub
arpl
addb
push
fs
xor
jl
cld
sti
jb
out
sub
and
jbe
mov
rorl
cli
scas
mov
jo
add
jbe
xor
sbb
outsb
xor
lahf
add
cmp
lods
daa
in
insb
push
es
sub
jg
xor
movb
mov
jnp
nop
cmp
mov
les
xchg
les
push
das
push
sbbb
inc
inc
in
je
or
inc
or
inc
loopne
add
je
movsl
sub
pusha
jl
add
out
pop
or
dec
jge
pop
mov
scas
pop
cmp
lahf
stos
movsl
iret
jb
xor
dec
loopne
mov
push
jo
mov
pusha
rcl
clc
rolb
ret
adc
fidivrl
and
xchg
pushf
pop
xchg
insl
jp
jecxz
in
push
push
int
out
in
leave
aad
hlt
subl
pop
or
pushl
lods
add
and
icebp
stos
adc
jl
hlt
or
dec
pop
shr
inc
mov
add
mov
cmp
scas
cli
icebp
fwait
ds
addr16
jmp
mov
sbb
loopw
or
jle
mov
mov
xchg
mov
add
mov
stos
xor
push
lock
aaa
xor
or
lret
in
adc
push
push
and
clc
ja
sub
cld
inc
push
xlat
pop
aam
sbb
add
and
push
incb
adc
insl
sub
pop
pop
jg
xchg
stc
xchg
dec
cld
hlt
pop
inc
jl
sub
insb
sbb
inc
adc
inc
shrb
ds
imul
sbb
cld
push
rolb
and
xor
dec
pushl
mov
xor
ljmp
mov
pop
ret
sbb
cmpsl
cmp
add
je
xchg
loopne
xor
inc
andl
rorb
fsubrs
mov
ffreep
test
xor
popa
std
jmp
mov
movsb
es
fs
push
sub
mov
inc
or
dec
out
stos
push
addb
push
popa
xchg
cmp
xchg
repnz
out
jge
pop
stos
ljmp
les
mov
mov
cmp
sub
or
sbb
outsl
cwtl
add
inc
or
sub
pop
cltd
ss
mov
sti
aaa
popa
jle
out
iret
je
ss
mov
fisubl
les
lods
pop
push
add
xor
insl
insl
cmc
cltd
xor
stos
adc
dec
lods
insb
sahf
out
jmp
sub
xchg
and
fistpll
aad
into
add
add
in
rcll
inc
jmp
adc
push
lret
scas
mov
push
push
push
clc
jne
loopne
inc
jbe
repz
or
mov
dec
inc
repnz
add
xchg
jl
test
nop
das
inc
xchg
nop
repnz
add
and
outsb
push
pop
aaa
sbb
push
xchg
xor
or
pop
or
mov
jo
movsl
call
cmc
push
shrb
push
popa
jg
cmp
ljmp
mov
adcb
aaa
inc
or
mov
fisttpl
push
mov
fisubrl
mov
into
inc
sahf
ss
mov
ret
and
jbe
cwtl
jo
stos
mov
out
dec
bound
loop
lods
push
clc
xchg
cs
mov
aam
mov
ljmp
idivl
dec
imul
rorl
arpl
ret
imul
sub
enter
sub
rolb
or
data16
mov
sbb
inc
icebp
enter
xor
dec
or
jo
pop
sbb
or
jl
incl
mov
sbb
data16
push
fsts
fcoms
mov
xchg
fdivrl
out
pop
insl
or
pushl
jp
cltd
push
and
sbb
jmp
sahf
ficompl
les
cmpsb
sbb
mov
popa
shrl
jno
adc
xor
pop
stos
outsb
jbe
adc
test
ljmp
test
pusha
nop
mov
fwait
and
inc
fmull
jmp
lea
sbb
mov
push
mov
ljmp
push
lret
xchg
jp
pop
popf
hlt
clc
addr16
fcom
add
or
jmp
test
jp
inc
jge
insl
fldt
mov
fcoml
sbb
pop
add
fistl
add
dec
and
movsl
sub
jo
push
add
lds
jmp
cld
stos
loop
or
aaa
cmp
out
testl
mov
xorb
and
es
jbe
insb
icebp
sbb
out
push
lcall
push
fnstsw
imul
pop
xchg
popa
jecxz
fwait
push
push
pop
sub
scas
pop
icebp
lea
xor
push
push
mov
mov
mov
xor
add
mov
adc
mov
cmpl
sbb
cmp
ljmp
clc
ljmp
inc
push
popf
fdivrl
inc
push
movsb
or
xor
xabort
mov
dec
scas
out
mov
enter
jge
inc
cmp
pop
cli
pushf
xlat
imul
sub
das
pop
jne
xchg
aam
fcompl
ss
pop
addl
fcmovnu
scas
xchg
adc
mov
loope
xorl
dec
cmpsl
inc
roll
sarb
loopne
call
dec
add
into
and
and
mov
and
aas
xchg
cld
pop
pop
push
jg
mov
jg
pop
jp
int3
push
xor
insb
les
inc
or
call
pusha
pop
jg
add
jo
dec
insb
lahf
fisttpl
mov
dec
cmpl
stos
imul
les
jp
push
or
xchg
dec
add
jg
popf
mov
dec
push
mov
pop
add
popa
and
fcmovne
push
stos
int3
pop
aam
fsubs
nop
push
push
jle
or
push
aad
outsl
std
div
push
mov
ret
lahf
in
push
lods
les
pop
cmp
adc
mull
add
jmp
aad
loopne
cld
push
je
sbb
inc
dec
and
or
stos
cmpb
add
je
push
mov
int
clc
cli
lret
negb
push
jnp
push
and
sbb
mov
sbb
jne,pn
fdivs
cmp
jge
jbe
addr16
push
and
push
cld
test
lock
cvtps2pi
lcall
and
mov
nop
inc
adc
adcb
stc
pop
js
mov
aam
aas
sbb
fbstp
adc
notb
mov
les
movsl
push
movsb
sub
push
cmp
out
ss
ffree
cmpsl
aas
dec
mov
pop
testb
out
mov
sub
hlt
ljmp
repz
xchg
dec
repz
ja
clc
adc
sbbb
sbb
cmp
xchg
dec
push
pop
cmp
xchg
int
shlb
dec
jecxz
in
fwait
sbb
add
dec
aas
mov
ljmp
mov
sub
jbe
push
xchg
push
mov
insl
ss
aad
xchg
fsub
sub
jno
lahf
insl
pop
inc
mov
repnz
adc
call
mov
sbb
aam
pop
es
js
into
sbb
and
shlb
xchg
cwtl
rol
shll
mov
iret
lods
adc
cmp
push
push
cmp
imul
mov
jbe
icebp
mov
mov
add
lret
pop
cmp
add
mov
cmpb
ds
xchg
mov
sub
inc
cmp
mov
cmp
aas
lods
mov
push
dec
imul
sarl
mov
cwtl
mov
test
loop
gs
push
jmp
sub
jae
loop
insl
fcomi
dec
sahf
sub
loopne
lock
test
fsubs
mov
mov
shrl
push
in
pusha
add
and
sti
and
pop
enter
pop
rcr
xor
es
into
stos
adc
sub
xor
jo
dec
fadds
cld
loopne
add
insl
sbb
push
jns
js
mov
and
and
push
push
sub
cmp
out
lods
mov
push
xor
shll
mov
or
or
and
repnz
jnp
hlt
mov
mov
hlt
cmpsl
or
add
and
pop
je
xor
les
and
mov
and
aaa
jmp
push
mov
add
cs
fiadds
sub
fcmovb
mov
rorb
sbb
rcr
rcrb
enter
loop
fbstp
xlat
cmp
mov
nop
inc
imul
jno
mov
mov
cmp
add
insl
ficoml
fcoms
mov
dec
shl
inc
pushf
xlat
xor
cmp
xchg
xor
loope
jg
jl
or
movsl
incl
cmp
jo
sub
insb
cld
adc
pushf
scas
sbb
push
cmp
mov
pop
adc
shlb
mov
gs
cli
idivb
insl
mov
cs
js
bound
int3
fdivrl
and
cmp
add
push
ljmp
or
add
inc
cmp
push
hlt
in
or
js
shrb
mov
mov
add
aas
mov
push
bound
mov
rcl
stos
mov
inc
or
adc
push
xchg
jbe
fdivl
mov
repz
ret
sbb
mov
cmpsb
push
adc
ss
xlat
cld
inc
shlb
ds
jecxz
mov
test
push
push
and
daa
cwtl
cmp
push
ret
mov
fwait
andb
push
lds
or
mov
filds
or
fnstcw
pop
cld
adcb
rorb
dec
pushf
call
or
push
mov
push
das
test
std
inc
mov
loope
sub
jae
lods
lret
xchg
scas
jb
or
push
subb
cmpsl
xchg
loop
lods
fcoms
adc
insl
mov
cmp
lret
pop
mov
inc
insb
cmp
sub
add
dec
outsb
subb
lcall
mov
outsb
xchg
imulb
add
mov
push
lods
fmul
ljmp
rcll
push
lods
pop
sub
ds
jle
ss
mov
add
call
fs
or
xor
jle
xor
nop
pop
aad
xchg
cmp
or
pop
cli
adc
rclb
out
hlt
shlb
popa
pop
outsb
lods
xor
xor
pop
dec
jnp
mov
inc
and
movsb
xor
inc
insl
rolb
xchg
or
sub
imul
add
popf
mov
jnp
int
xchg
test
out
loopne
mov
mov
orb
mov
popf
sub
or
cwtl
jns
jae
pusha
inc
mov
cld
cmpsl
hlt
mov
jl
aad
sbb
dec
arpl
push
inc
test
dec
jp
call
repz
aas
pop
mov
dec
and
cmp
fidivs
in
adc
mov
dec
roll
xchg
sbb
out
lret
inc
jmp
clc
push
cmpsb
enter
add
push
lock
pusha
xchg
inc
iret
in
and
mov
cwtl
mov
addl
js
int3
fisubrl
pop
add
fistpll
dec
je
xchg
in
push
pop
and
pop
icebp
mov
add
inc
push
daa
mov
popa
xor
repnz
bound
inc
and
hlt
or
xbegin
xlat
adc
mov
xchg
sbb
jno
and
mov
cs
push
sarb
outsl
push
mov
push
mov
push
dec
das
addr16
push
pop
pusha
shlb
fimuls
loop
mull
aaa
push
dec
or
add
leave
out
xor
mov
ret
sbb
pusha
repnz
cmc
sub
cltd
add
or
or
testl
jb
mov
repnz
sub
push
xor
adcb
fwait
mov
cwtl
xchg
hlt
insl
add
sub
add
fnsave
mov
lock
lock
mov
jmp
mov
enter
inc
out
or
mov
ret
pop
out
mov
ja
std
sub
lret
add
fucomi
stos
les
push
das
cmp
mov
inc
mov
inc
stc
js
dec
movl
xor
push
adc
mov
push
test
rcrb
mov
mov
pop
add
fldenv
inc
xor
mov
call
fisttpll
inc
sub
pushf
xor
mov
call
xorb
mov
dec
xor
daa
mov
stos
js
xchg
cmp
sub
bound
dec
stc
je
adc
ret
loop
stos
insb
aam
mov
out
cmpsb
push
fyl2xp1
cmp
inc
inc
cmpsb
in
dec
pusha
jl
inc
pop
add
inc
insb
or
sub
mov
in
push
inc
loop
push
adc
or
ds
aam
cmp
pop
add
xchg
mov
mov
or
adc
stos
pop
ja,pn
mov
faddp
and
leave
loope
out
mov
or
inc
loop
jo
or
mov
mov
insb
aad
cs
hlt
rorb
mov
int
xor
add
jle
mulb
pop
stos
mov
adc
inc
xchg
mov
sub
bound
or
aam
inc
divl
xchg
and
dec
clc
aas
pop
sub
cmc
adc
adc
pop
test
lret
jne
dec
and
xchg
push
int
cmp
inc
cmp
ret
pop
pop
divl
movsl
sbb
jl
and
jns
or
loope
add
xchg
sbb
mov
cmp
pop
push
movsl
jmp
mov
mov
adc
repnz
mov
in
adc
pop
mov
inc
xchg
push
aaa
mov
add
sub
push
push
xchg
push
cmpsb
push
pop
outsl
hlt
add
xchg
and
mov
stc
fiaddl
pop
call
cs
mov
or
loop
inc
or
out
mov
test
and
das
mov
push
out
mov
xor
outsl
cli
or
xlat
clc
pop
sbb
mov
jmp
std
jmp
adc
mov
push
adc
sub
push
add
addb
lea
adc
call
and
xor
lock
movsb
addl
push
ret
adc
cmpsb
mov
jo
or
dec
daa
add
lret
ret
sub
jle
fwait
mov
pushf
iret
sahf
sar
insb
andb
xorb
ds
scas
jne
aam
fstpl
or
cld
aaa
jne
add
push
sub
movsb
test
decl
mov
cmc
pushf
push
aam
test
sbb
xchg
leave
or
pop
popa
jnp
andl
xchg
addb
mov
fisttps
pop
cmp
pop
adc
je
adc
jnp
push
jnp
mov
and
sar
mov
jg
xor
xor
push
push
cli
mov
xchg
lock
inc
cmpsb
popa
pop
xchg
mov
pop
push
xchg
leave
inc
cld
stos
sub
test
sbb
and
movsb
bsr
inc
and
addr16
fcomps
repz
adc
pop
dec
adc
sahf
addb
dec
imul
or
data16
pop
fadds
mov
lcall
push
addl
fnsave
cmpsb
inc
mov
sub
sahf
push
or
mov
jp
cld
mov
fwait
and
mov
incl
adc
repz
leave
addl
mov
popf
fldenv
outsb
mov
int
cmp
int3
jo
cli
ja
es
add
adcl
lahf
xor
xor
out
sbb
sub
rorl
cmpsl
subb
scas
cmp
lock
jmp
dec
mov
lea
inc
fdivl
pop
dec
sti
and
js
enter
sub
xchg
arpl
cmp
or
shrb
jne
xchg
sbb
call
mov
in
inc
insb
test
iret
dec
jl
xchg
push
mov
fildl
push
xchg
push
and
push
push
mov
jns
dec
pop
lcall
mov
inc
mov
mov
jno
js
jns
jle
mov
ss
aad
es
sahf
ja
sahf
lahf
adc
push
mov
test
xchg
sti
add
data16
mov
cmpl
mov
pop
hlt
add
xlat
add
sarl
scas
sub
in
faddl
addr16
mov
ret
loope
ds
out
pop
pop
jle
into
mov
fcoms
pop
push
sub
mov
cs
add
repnz
lock
lret
xor
sub
xchg
inc
jp
pop
mov
sbb
xor
bound
xorl
loop
imul
mov
push
repnz
add
inc
mov
xor
jg
inc
aam
ret
das
adc
jo
add
jbe
bound
aaa
jae
sub
es
cmp
xorl
aad
jmp
xor
push
lock
loop
adc
adc
stos
xor
lods
icebp
lock
xor
cmpsb
out
fldcw
mov
dec
mov
sub
xchg
loopne
mov
dec
fstps
dec
mov
fdivs
xchg
mov
inc
xor
inc
inc
add
or
and
iret
inc
pushf
lcall
clc
sbb
mov
sbb
inc
fsubrl
shr
cmp
jo
pop
mov
sbb
xchg
sbb
jbe
pop
sub
out
dec
jne
mov
jmp
out
loopne
fdivrs
and
frstor
add
cmp
ret
and
test
fadds
mov
popa
sbb
repz
decl
add
mov
lcall
inc
mov
inc
ret
xchg
inc
jb
mov
dec
jmp
fdivp
data16
movsl
add
or
or
push
loope
inc
push
fwait
movsl
cs
fbstp
inc
push
cmp
cmp
pop
stos
movsl
movsb
dec
inc
xchg
pop
rcrb
lds
daa
cmpsb
ficomps
in
xchg
adc
and
dec
sbbl
es
xchg
mov
mov
push
mov
push
fldt
mov
adc
xor
cmp
outsb
aas
cmp
cmpsw
xor
rolb
cmc
pop
cltd
pop
and
cs
push
iret
mov
adc
push
sub
pop
clc
add
mov
cmp
loopne
lods
and
push
rcll
in
sti
fdivp
mov
cltd
std
cmpsb
jmp
int3
lods
imul
stos
or
sahf
mov
dec
inc
orb
rcll
mov
push
mov
jmp
jbe
mov
dec
pop
xchg
xchg
add
xor
cmc
dec
inc
fldt
jno
div
push
jne
pop
js
mov
loop
push
sbb
mov
mov
fiadds
ja
leave
sbb
aaa
jmp
insb
pop
xor
dec
out
inc
mov
lret
push
xchg
or
cmp
push
ficoms
insl
aam
loope
mov
mov
dec
jb
call
jb
mov
mov
sarl
xchg
sub
mov
rclb
pop
dec
push
fwait
or
pop
pop
cmp
imul
inc
mov
inc
aam
sahf
scas
fcmovnb
loop
and
in
sub
pop
in
add
or
pop
lcall
out
add
fwait
imulb
cmp
pop
leave
nop
jne
inc
sub
xchg
pop
inc
dec
fadds
or
push
pop
push
or
add
mov
jnp
pushf
sbb
jmp
inc
dec
sub
add
dec
push
mov
pcmpeqd
cs
mov
stc
ss
jne
sbb
pop
sbb
cmc
icebp
xchg
and
or
xchg
sbb
mov
out
pusha
and
push
stos
and
in
inc
jl
ja
out
mov
mov
mov
or
and
rorb
aam
pusha
sbb
inc
sbb
popa
cmp
pop
sti
push
incl
iret
xor
dec
lea
add
jg
jno
stc
fcomip
pusha
push
cmp
or
sbb
jnp
ret
or
lods
test
jns
mov
inc
pop
jle
cmc
push
negb
add
and
mov
in
sti
inc
sar
dec
xchg
mov
cmp
test
ret
push
jno
cmp
add
in
test
cld
idivb
and
xchg
movsl
addl
enter
mov
movsb
xor
xlat
add
or
mov
out
pop
pop
stos
incl
inc
pop
lahf
imull
inc
pop
xchg
mov
xlat
test
int
repz
jle
cmp
ss
js
lods
mov
js
mov
sub
daa
jne
leave
cltd
push
movsb
imul
or
sbb
mov
xchg
mov
adc
movsb
cld
aam
andl
pop
mov
cs
jmp
inc
inc
sub
mov
inc
xlat
test
pusha
dec
ss
call
cmp
cmp
imul
sub
push
push
fs
fiadds
pushf
lock
xchg
out
mov
das
and
dec
out
andb
aaa
loopne
ret
mov
icebp
fwait
pop
xchg
inc
movq
dec
xchg
ficoms
and
fadd
push
into
sarl
test
lret
sbb
test
xchg
jno
adc
call
pushf
loope
aad
and
lea
push
gs
es
add
mov
fidivs
out
test
fimuls
adcb
add
clc
sbb
rorb
mov
rorl
enter
inc
clc
pop
xor
rorb
fs
pop
sbb
sbb
cwtl
jns
mov
lea
ret
mov
sbb
push
outsl
gs
or
add
sbb
push
daa
xchg
subb
or
push
loope
insb
add
cltd
cmp
pop
mov
ret
add
inc
je
or
add
push
push
movsl
dec
call
jg
push
les
mov
jnp
mov
out
stos
mov
and
ret
out
dec
inc
clc
jne
fwait
cmc
shlb
scas
add
inc
cmp
inc
cli
test
sbb
call
xchg
movaps
fcomp
xchg
mov
mov
sub
xchg
sub
arpl
add
jbe
rcll
dec
xor
or
fadds
cmp
jo
sbb
lahf
sbbl
or
ffree
and
cmpsb
cmp
out
stc
push
or
sub
dec
push
stc
add
sbb
inc
push
rcr
inc
sub
or
and
pop
scas
mov
push
pusha
adc
jns
stos
adc
jge
inc
jne
mov
mov
in
sub
sahf
fistl
cmp
or
lcall
call
hlt
pop
imul
and
fstps
add
pop
iret
shll
or
dec
add
lds
int
lcall
or
adc
or
and
push
loope
sbb
or
mov
pushf
loope
ss
jmp
or
jno
inc
loopne
add
jno
fdivr
jge
cmp
jp
call
inc
mov
sahf
flds
jge
popf
notb
out
xor
lds
stc
test
inc
lods
sahf
adc
test
mov
fisubs
lret
sbb
mov
xor
xchg
imul
hlt
adc
lods
fistpl
js
sarb
adc
push
rcr
imul
xor
jmp
mov
cmp
ja
sub
icebp
sub
mov
jecxz
sbb
xor
ds
cmp
fstps
fldcw
mov
mov
and
pop
add
sub
je
lods
ret
xchg
and
enter
hlt
sti
gs
int3
jno
inc
lret
jb
sub
je
rcrb
insb
rorl
mov
sbb
jmp
shrb
cwtl
sbb
clc
pop
data16
dec
jg
js
js
sub
out
fnclex
int
pusha
jmp
addr16
push
pop
push
xor
or
or
xchg
mov
out
pusha
das
js
out
testb
or
xchg
xchg
sub
dec
cmc
loop
lcall
jns
sub
xor
cmp
test
lods
pusha
sbb
mov
sub
xor
jbe
in
pop
pop
adc
cmc
cmp
push
push
pop
call
push
loop
xchg
mov
jecxz
clc
call
in
aad
fdivrp
js
sbb
sahf
pop
push
and
rcrl
pushf
push
loope
loope
jmp
sahf
fsubrs
or
loop
mov
movl
mov
outsl
dec
inc
inc
ja
mov
mov
push
push
pushl
jae
sub
jg
jb
es
xor
pop
ffree
mov
xor
insb
jae
push
add
ret
jbe
mov
xchg
inc
lock
mov
and
add
test
rolb
adc
inc
mov
addr16
jb
rol
pop
loopne
adc
sbb
pop
mov
mov
ret
out
ja
mov
dec
ljmp
ljmp
ja
cmp
cltd
popa
and
add
mov
cmpb
fcomi
pop
pusha
aas
out
imul
repz
je
xchg
mov
push
ret
pop
pop
add
pop
pop
sbb
inc
outsl
sbb
pop
push
jle
addb
cmp
ret
jno
ljmp
insb
sub
mov
loopne
movsb
ds
or
mov
cmp
xor
jo
sub
adc
and
jno
mov
xor
fidivrs
mov
add
add
js
daa
pushf
cwtl
jg
dec
outsl
add
push
jo
sbb
jmp
icebp
fbld
mov
pop
jg
imul
outsb
sbb
add
inc
fs
pop
cli
in
xchg
cmp
cmp
nop
push
fcoml
imul
aad
dec
adc
dec
sbbb
punpckhbw
mov
jnp
cli
repz
cmpsl
rol
or
add
push
sbb
outsb
aam
inc
xor
mov
inc
xchg
mov
cli
xor
shrb
cmp
nop
jo
fcompl
mov
addb
xchg
mov
push
mov
pushf
sbb
pop
movsb
hlt
adc
cwtl
lock
and
repz
enter
popa
jl
hlt
in
jmp
adc
jecxz
dec
cmpsb
push
xchg
test
pop
divl
inc
sbb
or
dec
or
in
xchg
ljmp
xchg
ljmp
cld
mov
mov
mov
xor
loop
mov
mov
inc
lock
pop
aas
add
dec
and
loope
bound
ds
bound
mov
push
xor
pop
mov
adc
lea
cmp
outsb
insb
or
pop
inc
mov
and
adc
add
fistpl
adc
pop
sub
call
sub
push
push
push
int3
mov
popl
jbe
xchg
inc
mov
shl
in
shr
jnp
and
jbe
idivl
xchg
ja
scas
add
in
loopne
push
lods
xchg
jecxz
lea
ss
fwait
cwtl
add
or
mov
jns
sbb
inc
shlb
fsts
sbb
or
mov
aam
jo
out
cmp
xchg
mov
sub
sbb
pusha
mov
and
mov
mov
lock
jecxz
push
je
jns
and
add
icebp
fidivrl
mov
insb
jmp
jns
cwtl
inc
mov
fwait
jg
mov
in
clc
out
pop
outsb
pop
pop
cmp
pop
dec
and
cmc
mov
cld
add
jp
xchg
xor
pusha
sub
mov
xor
int
cmc
mov
cmp
adc
xlat
push
sahf
sub
sub
loopne
and
in
cmp
lahf
or
adc
lcall
adc
lods
adc
enter
sarb
inc
rolb
adc
push
mov
mov
ror
fadds
inc
addr16
ljmp
shr
mov
aam
movsl
xor
in
ljmp
mov
mov
or
push
cmp
sbbb
jo
mov
stc
idivb
popa
sbb
inc
in
jo
jno
mov
and
add
in
test
push
inc
sbb
jb
sarl
and
sub
or
cmp
add
das
sbb
addl
fmulp
inc
nop
lock
mov
call
xor
push
icebp
push
js
lahf
adc
and
mov
push
or
rcl
mov
inc
mov
xor
pop
mov
xor
cmp
mov
pop
fstpl
push
repnz
ss
insl
xchg
inc
cmpsl
xor
xchg
ret
xchg
shlb
mov
aaa
cmpsb
ss
cmc
jmp
pop
in
push
jl
pop
test
aas
shlb
xchg
jbe
sub
pushf
and
push
push
divb
test
add
icebp
sarb
andb
mov
std
les
ljmp
test
mov
enter
in
test
lret
icebp
loope
dec
sbb
push
jno
mov
mov
fisubrs
pop
jp
lock
je
push
jmp
mov
out
xor
insl
call
in
sub
adc
inc
and
fldl
mov
inc
aaa
mov
sbb
lds
mov
push
push
fldl2t
imul
cmpsb
pop
or
jecxz
sbb
mov
adc
imul
out
fisttps
and
int3
jp
mov
and
movsl
adc
jo
mov
loope
dec
mov
push
insl
loope
pop
leave
dec
std
sbb
fsubrp
sbb
lcall
bnd
add
jo
mov
pop
fnsave
mov
add
or
dec
sub
push
jb
jl
stos
push
std
cmp
push
pop
xchg
les
mov
cwtl
outsl
insb
push
xchg
cli
mov
xchg
sub
sbb
mov
pop
push
dec
insb
ret
call
mov
fsubp
pop
push
push
and
mov
hlt
or
adc
shll
movntps
lock
les
lcall
mov
inc
or
add
lds
jno
lcall
lret
pop
movsl
adc
shl
ljmp
sbb
xor
loop
cli
ss
mov
imul
dec
test
push
mov
adc
mov
push
test
push
jo
cmp
jo
dec
insl
mov
mov
adc
push
insl
add
lock
fisubl
cmp
mov
push
and
mov
bnd
mov
pushf
leave
adc
mov
clc
int
std
sbb
mov
xor
fisubl
xlat
lds
loopne
push
cmp
mov
mov
xchg
mov
mov
rcl
rolb
lahf
push
xor
sub
mov
mov
xchg
lock
pop
adc
rorb
mov
ljmp
mov
push
imul
xor
dec
call
mov
rorl
dec
pushf
sub
mov
cmp
xchg
filds
imul
adc
repnz
push
movsb
adc
sub
pop
popl
jnp
call
ret
add
push
cmpsb
mov
sbb
xor
scas
or
insl
rol
push
in
push
adc
aam
insb
inc
mov
and
adc
push
pop
cld
add
add
sarb
jnp
sbb
test
add
data16
xchg
shlb
ljmp
add
or
addb
inc
test
iret
add
xor
jmp
hlt
xchg
xchg
lock
adc
decb
mov
dec
push
insb
jo
sbb
sbb
jo
jne
aaa
mov
lock
lret
cld
dec
addb
dec
xlat
pop
mov
mov
jmp
nop
movsl
mov
call
push
or
nop
out
pushaw
sbb
sbb
mov
aad
sbbl
ret
push
lret
xor
jp
pop
fwait
js
es
enter
cltd
push
addb
enter
mov
shlb
shrl
sub
push
outsb
in
push
ret
adc
jp
sbb
and
push
nop
xor
rclb
inc
leave
dec
testl
fidivl
sub
xor
add
add
sub
addr16
push
xor
mov
mov
xchg
cmp
cs
ds
cld
dec
orl
rcrb
enter
push
dec
imul
jecxz
movsb
sub
cmpsb
movsb
decb
pop
pop
cmp
dec
xchg
dec
outsl
cld
mov
push
fiadds
in
popf
sbb
sbb
jl
shrl
pop
jae
mov
aam
and
adc
inc
xchg
jns
add
lods
push
movb
xrelease
daa
mov
sub
push
mov
or
fbstp
mov
push
jg
in
xor
out
int3
test
cmpsb
jmp
mov
js
clc
sbb
or
cmc
pop
popf
inc
in
outsl
and
add
movsb
test
mov
imul
push
rcl
shll
adc
es
add
xor
ret
test
push
xor
mov
xchg
test
out
cmp
inc
cld
mov
mov
cmpsl
cmc
loope
push
inc
jmp
lods
int
mov
jnp
sbb
push
paddsw
ljmp
push
imulb
rdmsr
push
or
xor
mov
shl
fimuls
sbb
arpl
enter
rclb
fwait
aam
insb
pop
cmp
mov
movsl
xchg
shr
mov
ljmp
lea
add
pop
inc
xchg
push
mov
jnp
aad
push
in
daa
fdivs
es
mov
js
dec
aas
je
pop
add
icebp
add
cmpsl
push
rorb
loop
jmp
gs
loope,pt
sub
repz
or
jmp
ja
lods
popf
es
push
dec
pushf
fs
ja
jmp
bound
les
push
stos
inc
and
mov
shlb
dec
push
fsubl
cmp
sbb
mov
lcall
mov
lcall
out
mov
adc
loopne
fwait
pop
dec
and
mov
loope
call
xorb
mov
mov
push
mov
loope
and
mov
or
inc
pop
aad
es
dec
and
mov
out
mov
inc
fdivrl
sub
test
ds
dec
iret
popa
inc
orl
xor
cmp
pop
fstpt
lods
cmc
xor
sarb
fimuls
mov
jnp
dec
out
test
push
sbb
xchg
jmp
call
ret
aad
push
mov
push
addr16
enter
or
je
push
sub
sub
aas
int3
xchg
add
lcall
out
insb
xlat
dec
cmpxchg
ss
inc
negb
addl
cmpsb
sar
out
hlt
add
mov
cmp
sbb
xorl
mov
insb
jbe
pop
or
mov
sbb
insl
stos
xchg
testl
mov
or
xor
dec
or
cld
sbb
stos
cmc
add
and
xchg
in
push
and
out
cmp
andl
fs
divb
dec
push
inc
js
sub
pop
push
cli
paddw
scas
pop
inc
mov
xor
inc
adcb
push
dec
jmp
cmp
inc
loop
or
aaa
adc
in
iret
fs
mov
or
inc
adc
and
and
iret
int3
mov
bound
loopne
sbb
call
sbb
lock
or
fs
push
push
adc
jecxz
or
leave
dec
insb
cmp
pop
imul
fdivs
cmpsb
test
add
or
add
mov
mov
mov
sbbl
fimull
pusha
sub
addb
xchg
mov
ret
add
stc
sbb
jmp
sub
add
shrl
shl
cmpb
inc
movsl
xorl
add
scas
sbb
lahf
fisttpl
dec
xor
aad
out
or
push
jb
iret
aas
jl
xor
rolb
scas
sbb
add
adc
sbb
jb
adc
dec
xor
es
pxor
ret
inc
cld
divb
jnp
inc
cmp
xor
out
inc
dec
mov
mov
pop
push
sarl
cmp
jle
int3
pop
sahf
clc
add
fists
pusha
mov
pop
call
call
adc
call
rcr
or
gs
inc
xor
inc
sub
mov
xchg
jl
lods
test
jnp
inc
sbb
cmp
mov
mov
sub
push
pop
bound
or
pop
cmpb
xor
nop
push
adc
sub
out
pop
mov
mov
pop
lahf
add
push
lret
adc
push
xchg
mov
and
inc
adc
or
inc
xchg
adc
xor
lods
cmp
mov
mov
sbb
cmp
in
mov
sbb
insl
push
int3
out
mov
movsl
pop
icebp
xor
or
mov
js
lea
push
notl
xor
js
shrb
leave
fnsave
insl
pop
out
add
lods
push
enter
pop
push
inc
sub
sbb
les
hlt
fnstsw
dec
lock
sub
filds
jbe
pop
add
rcrl
dec
shlb
jecxz
or
test
sahf
rcl
adc
fisubs
popa
cs
in
mov
mov
bnd
and
lcall
cmp
loope
sbb
inc
aad
cli
js
pop
mov
xor
mov
lea
pop
push
push
sbb
mov
xlat
fcmovbe
push
les
loope
stos
push
mov
ret
push
rcll
pop
add
push
mov
stc
xchg
push
ficomps
and
imul
pop
adc
sbb
mov
roll
jne
shll
dec
int
int3
cmp
jns
xchg
xchg
out
ret
rorl
mov
std
sbb
cmp
call
xchg
pop
cmp
push
hlt
mov
mov
fstl
enter
test
mov
mov
bound
in
jnp
or
stos
jg
insb
lods
or
xlat
sub
mov
sub
and
xchg
push
or
add
fcmovnbe
pop
mov
lea
xchg
add
jmp
sub
movsl
repnz
add
orb
xchg
xchg
inc
imul
into
dec
mov
out
dec
sub
sub
addl
push
lret
in
xchg
aaa
add
loopne
lods
out
inc
loop
fisttpl
push
addb
cmp
inc
rol
jnp
dec
cltd
ja
inc
shlb
inc
dec
leave
or
cmp
imul
je
pop
test
dec
jmp
lret
in
jl
push
mov
inc
push
sbb
mov
jmp
push
cmp
xchg
push
inc
mov
aad
sti
adc
ja
mov
arpl
xor
sub
ljmp
and
cmp
adc
stos
mov
jl
lret
xchg
loope
push
insb
ss
stos
lcall
loop
imul
repz
outsb
mov
push
pop
push
bound
adc
nop
sbb
hlt
and
aas
add
jle
idiv
sbb
cltd
fcompl
insl
and
mov
loopne
inc
dec
or
je
inc
fstpt
or
mov
jge
ds
testb
add
jp
clc
or
push
or
enter
pop
outsb
pushf
or
clc
cmp
ret
fs
cltd
test
pop
sbbb
lods
dec
add
pop
push
mov
pop
pop
sbb
ljmp
dec
rorb
fstpl
push
testb
sbb
out
cmp
jbe
incl
xchg
mov
inc
pop
outsl
std
adc
adc
cmp
mov
dec
mov
lret
lods
mov
dec
mov
sbb
out
inc
js
push
rclb
aad
xchg
mov
cmp
add
cmp
cs
or
clc
mov
jmp
pop
dec
jno
pop
xor
repnz
mov
sub
shlb
mov
jp
rol
xor
and
mov
pop
lock
jo
loope
es
test
sahf
adc
pop
add
ficoml
and
push
fs
mov
mov
cmp
popa
jmp
mov
pop
mov
push
cmp
sahf
fdivr
and
mov
lods
add
loopne
out
fstl
pop
andl
out
adc
pop
or
mov
mov
fs
inc
mov
sbbl
mov
aaa
mov
dec
cmc
jo
xchg
lea
push
adc
inc
inc
iret
cmpsb
cmp
stos
sbb
pop
fs
sbb
out
ja
mov
neg
mov
cmpsl
dec
lods
ljmp
out
sub
ljmp
shrb
push
lods
std
push
arpl
push
lahf
hlt
jb
cmp
pop
add
leave
mov
pop
push
aam
cmp
jne
ds
pop
mov
push
mov
bound
rol
cld
push
repnz
pop
bound
mov
cld
dec
or
idiv
pop
or
dec
push
in
lock
das
pushf
cmc
adc
fistpll
cmpsl
or
or
dec
stos
nop
push
loop
icebp
stos
add
xchg
dec
mov
push
push
test
je
xchg
rorb
or
xchg
ja
ret
pushw
scas
mov
push
and
push
ret
int
pop
xor
sub
inc
adc
lock
shrl
test
or
adc
dec
cli
orb
or
push
cmp
push
pop
sbb
lcall
pop
fiadds
dec
in
inc
and
adc
jmp
scas
cs
inc
and
and
inc
push
fcom
addb
or
sti
sti
or
cli
dec
xchg
bound
loopne
push
lds
gs
pop
push
push
rorb
bound
hlt
lock
es
scas
outsb
jo
lock
dec
cli
int3
lods
fbld
inc
out
movsb
mov
jo
fbld
ret
dec
or
jae
rorb
es
ljmp
mov
cmp
add
fcomip
ljmp
mov
stc
out
mov
imul
outsb
push
xchg
cld
lahf
mov
cltd
pop
mov
pusha
add
insl
push
xor
into
push
movsb
popa
xchg
add
imul
cmp
hlt
xchg
jp
loopne
rcrl
rorb
inc
js
jne
push
push
fsubp
fwait
in
imulb
pop
cmpsb
clc
xchg
push
and
test
mov
movsb
mov
sbb
add
addb
call
xor
mov
inc
sub
ss
inc
mov
cmp
cmp
inc
mov
mov
sub
ss
in
notb
dec
xchg
push
sbb
aam
push
or
ds
out
jmp
fcoms
mov
push
sub
pop
jl
xchg
pushf
push
mov
or
pop
or
iret
pusha
daa
xor
jb
sbb
mov
and
dec
movsb
mov
out
in
adc
cld
mov
test
lret
icebp
pop
loop
pop
out
and
or
dec
lcall
xlat
imul
ret
adcl
xor
push
sbb
add
mov
mov
jo
lea
sub
subb
loope
clc
sahf
adc
into
loop
stos
adc
pushf
repz
je
xchg
push
ja
jg
cmp
int
mov
or
or
outsb
push
lcall
adc
mov
ret
hlt
jp
and
dec
pop
scas
fdivs
push
xlat
adc
cmp
fadd
dec
dec
scas
pop
loop
push
lock
mov
jmp
rclb
pop
outsl
or
ret
sbb
inc
mov
loope
sahf
arpl
lea
cld
sarb
cmpsb
hlt
mov
cld
aaa
add
int
and
cs
mov
push
in
mov
shl
adc
loopne
or
sub
filds
sbbl
dec
push
rorl
push
push
add
test
andb
fmuls
stos
push
dec
adc
call
loopne
jmp
call
out
xchg
mov
ljmp
xchg
mov
xchg
xor
loop
in
and
bound
leave
adc
mov
divl
jp
xchg
cltd
loop
call
je
lret
add
cs
jg
adc
mov
sub
inc
mov
dec
pop
mov
mov
jecxz
xor
push
loope
ja
sub
cmc
sbb
dec
jecxz
pop
out
and
inc
xorl
jno
int
cmp
and
xchg
xchg
jg
lock
inc
insb
push
lcall
pop
insb
in
jle
sub
out
cmp
cmp
inc
enter
jae
xchg
je
or
icebp
ret
cld
push
orl
lds
popa
fsubrl
dec
fists
adc
mov
mov
pop
lock
sahf
int
jmp
lods
push
pop
sub
pushf
mov
fs
mov
add
andl
popf
jl
xlat
xor
add
call
adc
add
cmpb
cli
jae
cmpsl
add
sub
imul
sbbl
pop
jmp
jge
pop
add
lcall
movsb
mov
cmp
outsl
xlat
clc
lahf
xchg
repz
push
sub
pop
pop
xchg
pop
loop
xchg
fxtract
movsb
sbb
lret
rcrl
push
fadd
pusha
int
shlb
rolb
push
inc
ljmp
gs
mov
stos
aas
popa
loopne
insl
cs
pop
and
imul
clc
lahf
dec
mov
xor
insl
cmpsb
cwtl
fists
inc
sbb
pop
leave
add
cmp
jecxz
in
jl
xor
jl
pop
decl
sbb
imul
aam
mov
lret
or
in
push
aaa
stos
or
fmull
mov
mov
mov
cld
inc
enter
repnz
ja
js
repz
decb
in
add
mov
add
stos
or
push
jg
mov
aam
fs
sub
ret
cmp
test
jno
fsubrl
dec
das
and
xchg
fimuls
and
pop
inc
popf
call
aam
mov
negl
mov
js
lods
dec
push
icebp
mov
push
sbb
sbb
arpl
jne
xchg
out
loop
add
mov
dec
ds
adc
loop
sbb
xor
lods
fucom
lds
popa
stos
insb
jl
add
stc
popf
cld
nop
jo
jg
jg
lods
jl
xchg
fisttpll
lcall
ficomps
mov
add
push
shr
cmc
add
or
sub
push
dec
call
lahf
cwtl
mov
pop
stos
xchg
scas
cwtl
insb
add
cld
in
imul
add
shrl
shr
push
add
lcall
dec
push
scas
shlb
pop
cwtl
stos
mov
mov
ds
leave
pushf
mov
add
test
sbb
add
fs
leave
and
push
pop
sub
ljmp
push
jge
adc
fidivs
add
pop
mov
pop
inc
jnp
cwtl
in
add
rolb
push
or
push
dec
pushf
in
inc
pusha
cmp
xor
ret
outsl
push
xchg
pop
mov
xchg
mov
insl
sub
and
iret
adc
inc
in
cli
addr16
rorl
push
pushf
in
je
cld
or
loope
hlt
inc
dec
incl
insl
call
fs
cld
inc
aaa
rcl
icebp
mov
mov
mov
dec
std
mov
sbb
push
jbe
aam
xchg
mov
cmp
dec
sbb
js
filds
test
and
out
mov
in
xchg
shll
push
pop
and
cli
das
pop
push
lahf
loope
int
sbb
clc
inc
jo
sub
aaa
adcb
pop
dec
mov
fmuls
cmp
push
loop
or
sub
xchg
sub
push
adc
sahf
add
and
pop
fisubl
or
outsb
add
lock
test
cli
add
sbb
ja
lods
aam
mov
enter
xacquire
push
sti
push
int3
pop
mov
add
jnp
addr16
jp
imul
mov
mov
sar
scas
ror
jge
popf
add
push
mov
in
call
push
les
loope
xlat
pop
adc
xchg
inc
fsubrp
push
xor
sub
mov
movsl
sub
jp
mov
mov
ss
pusha
xor
lods
sbb
pop
enter
sbbb
xchg
test
loop
pusha
cmp
out
mov
inc
xchg
data16
das
ret
sbb
testl
sub
enter
shrb
es
inc
scas
cmpsl
mov
add
push
push
clc
add
pop
pop
and
cli
add
jae
outsb
xchg
mov
pop
fdivr
movsb
cmp
xor
pushf
or
aas
test
ljmp
mov
push
cwtl
dec
mov
sbb
lods
cs
mov
out
ret
adc
add
jbe
or
inc
sbb
jle
sub
insl
add
sti
test
call
add
jnp
fbstp
test
js
fldl
fmull
divb
mov
push
xor
jecxz
fnstcw
dec
ror
data16
fldt
pusha
add
mov
ljmp
aas
stos
lods
push
lock
dec
mov
ja
fisttpll
mov
rorl
mov
add
mov
pop
pop
dec
cwtl
push
mov
pop
xor
ss
jg
sub
hlt
jno
jb
loope
fs
sub
in
add
pusha
xchg
jle
and
int
sbb
clc
mov
push
fsubrl
mull
cltd
cmpsb
pusha
dec
aam
sbb
jo
add
dec
add
fdivr
mov
xlat
or
dec
push
js
in
scas
or
xor
stc
fwait
jbe
leave
xchg
xorb
mov
mov
cmp
sub
ret
popa
es
fs
or
adc
pusha
dec
xchg
int
cld
or
push
pusha
int
cmpsb
add
mov
pop
jne
hlt
inc
pop
jg
mov
and
sarl
pushf
jmp
or
mov
lods
mov
mov
ljmp
shl
data16
ds
mov
jns
sbb
dec
jle
xor
mov
inc
sbb
pusha
rolb
mov
mov
pop
data16
mov
cmpsb
in
mov
lock
cmp
inc
andl
fwait
or
mov
into
add
sub
xor
mov
dec
aad
divl
hlt
lock
or
popl
sbb
pop
fs
insb
scas
add
out
imul
lods
pop
or
or
xor
xlat
sub
ds
mov
int3
les
dec
inc
lock
add
roll
or
dec
mov
xor
mov
push
xchg
sahf
pop
hlt
adc
cwtl
push
call
xor
imul
mov
fs
aaa
sub
mov
xlat
lods
lcall
pusha
and
push
cld
dec
sbb
and
ffreep
je
mov
inc
test
cmc
dec
jne
loopne
mov
sub
bnd
and
cmp
neg
test
sbb
popa
ss
push
sbb
or
outsl
lock
xchg
aaa
cs
mov
inc
inc
sub
movsl
push
popa
mov
test
popf
test
xor
fisttpl
add
jbe
fsubrs
cmp
cmp
out
aad
mov
mov
hlt
xor
lock
adc
lahf
sbb
js
loopne
addr16
pop
cmp
outsl
mov
mov
fdivrs
shll
mov
cli
pop
sub
jne
movsl
add
xchg
int3
push
les
mull
mov
mov
adc
inc
out
aaa
outsb
call
dec
inc
or
es
or
jmp
fwait
mov
add
out
mov
adc
fsubrl
xchg
cmp
cs
jmp
test
pop
movb
cmp
lcall
sub
loop
sarb
cmp
mov
hlt
or
repnz
mov
jb
into
shlb
test
push
ret
int
decb
sbb
into
pusha
mov
sarb
lods
outsb
sbb
fidivl
movsl
inc
sub
bound
cli
sub
aam
fiadds
add
add
out
push
mov
insl
roll
mov
cli
popw
std
bound
stos
mov
pop
in
dec
cmp
mov
rcl
mov
adc
or
test
push
push
and
dec
cmpsb
leave
test
nop
adc
lret
stos
shll
push
ficoml
inc
in
mov
in
or
adc
in
pop
negb
lods
adc
hlt
ret
xor
add
nop
jg
shlb
inc
js
inc
paddusb
cmp
or
inc
pop
orb
mov
repz
mov
dec
jl
cmp
call
fistps
ja
jmp
mov
or
js,pn
ficoml
roll
into
inc
enter
xchg
rorb
add
andl
cmp
cld
hlt
sbb
fdivrs
cmp
inc
and
hlt
and
pop
sbbl
int3
sbb
mov
cltd
test
mov
aam
push
sti
cld
idivb
cmp
in
fcomps
data16
int3
icebp
jne
mov
push
and
sub
ja
push
lret
fs
inc
push
push
xor
faddp
adc
mov
push
rol
test
cld
leave
hlt
inc
jle
cmp
outsb
xor
cmc
mov
adc
push
gs
xor
shl
sub
mov
or
sbb
cli
test
inc
leave
adc
outsl
jmp
flds
push
aas
adc
dec
scas
stos
jle
or
jb
mov
push
or
and
cmpsb
std
cld
push
mov
mov
inc
stos
pinsrw
add
adc
jo
push
mov
ss
es
int3
lds
test
push
test
repnz
mov
je
jl
sbb
ljmp
stos
add
cmp
or
push
cs
lret
push
fsubrs
les
shl
stos
mov
jno
sub
bound
adc
icebp
inc
sbb
pop
pop
adc
ja
sub
push
xlat
inc
mov
das
jp
mov
jae,pn
inc
test
sbb
lret
inc
adc
push
and
inc
int
mov
loopne
jl
out
shl
adc
and
add
fistpl
or
loopne
sub
pushl
sbb
push
aad
add
sbbb
cmp
xchg
fs
xor
sbb
mov
fcom
mov
insb
jmp
adc
insb
cmp
loop
sbb
faddl
js
jl
decl
stc
stos
jb
test
roll
data16
cli
push
mov
sbbb
cmp
add
mov
push
sbb
add
in
adcl
push
sbb
insb
pop
das
out
inc
loope
adc
mov
inc
daa
mov
sarl
out
hlt
stos
fwait
pusha
popf
fs
cs
lcall
arpl
pop
xchg
es
jns
adc
jns
outsb
fildl
push
push
add
aam
bound
jecxz
test
dec
data16
adc
jge
jnp
pop
or
pop
adc
xchg
test
out
cmp
notb
loope
rcr
pop
xor
and
xor
pop
push
fs
mov
out
or
or
fidivl
or
sub
xchg
pop
hlt
push
mov
ja
sub
and
roll
mov
xchg
jecxz
add
cmc
ds
iret
addl
call
adc
lret
aam
arpl
jg
jl
mov
mov
add
push
rcl
pop
rclb
movsl
xor
xor
xchg
inc
out
push
ss
push
orl
dec
jo
pusha
outsb
pop
pushf
inc
mov
out
clc
pop
xchg
mov
add
shlb
adc
loopne
mov
aam
xor
and
lods
adc
jnp
push
mov
cmp
inc
fisubrs
inc
popa
and
or
movsl
sub
out
enter
ljmp
sbb
iret
scas
xchg
lock
mov
stos
mov
dec
std
mov
inc
pop
xchg
les
test
xchg
ror
lock
daa
insb
call
lcall
or
pusha
test
les
fbld
out
adc
testl
push
es
test
xor
push
push
ret
push
jbe
into
fiadds
jb
sbb
ss
xor
test
mov
shll
pop
pop
out
sbb
stos
sub
test
dec
popa
out
xchg
loopne
inc
rclb
mov
push
push
in
shll
mov
shlb
cmc
mov
mov
das
inc
xchg
mov
mov
inc
ja
mov
cmp
pusha
xchg
ja
ds
test
mov
decl
and
add
cmp
xchg
and
mov
lock
and
mov
hlt
cmp
lcall
push
or
or
ljmp
pushf
bound
ss
inc
fnsave
xorb
mov
stos
or
mov
mov
xchg
inc
xor
push
xor
and
mov
mov
mov
pop
sbb
mov
mov
or
push
push
cli
sarb
add
movsb
aas
dec
sbb
inc
filds
stos
orb
xchg
fs
js
gs
cmc
ja
add
adc
in
sub
sub
lods
adc
cli
adc
orb
insb
jo
sub
roll
jp
stos
or
mov
dec
mov
xchg
in
push
mov
je
stc
push
add
pop
cmp
sbb
test
sbb
fs
insl
or
leave
aam
push
xchg
lock
dec
test
mov
sub
dec
and
in
mov
imul
xor
cmp
cmp
mov
loop
repnz
push
jl
loopne,pn
xchg
jb
or
insb
and
stos
adc
lret
call
push
je
in
inc
scas
insb
add
aas
cli
fucomi
jmp
sbb
lahf
js
loopne
in
insl
shlb
and
mov
incb
dec
fisubs
jle
pushf
outsl
xchg
inc
adc
adc
hlt
sti
xchg
shrl
jns
clc
inc
and
pusha
repnz
jnp
xor
inc
and
popf
hlt
shlb
stos
movsl
pop
sbb
lcall
ss
rclb
pushf
loopne
inc
and
scas
push
std
adc
adc
aam
aas
xor
mov
outsb
ljmp
dec
cmp
dec
bound
sar
out
jl
pop
add
pushf
fwait
sti
push
jb
dec
outsl
sbb
fsub
pop
stos
inc
inc
sahf
lock
and
mov
fwait
or
subl
sbb
popa
dec
push
pop
jbe
adc
test
call
cmp
jle
andl
add
stos
xor
lret
lock
jne
cld
subb
fsubrs
lret
inc
fcoml
xchg
fimull
fsubrs
imul
jle
sahf
mov
loop
lcall
out
fs
mov
clc
ljmp
inc
sub
push
xchg
push
loope
in
jge
and
push
or
jbe
daa
and
cmp
call
push
or
mov
cs
je
ret
sbb
pop
insb
ret
mov
sbb
adc
mov
mov
je
testl
or
xor
jecxz
test
lock
clc
loop
ja
daa
and
stos
lcall
scas
pop
iret
push
es
scas
cli
dec
out
cmpsb
mov
jmp
enter
lock
pusha
loop
pop
mov
hlt
mov
ds
jns
sahf
mov
js
ja
js
and
int3
push
je
icebp
pop
jp
push
add
out
out
dec
add
inc
cmp
test
call
gs
mov
mov
sarl
adc
jnp
mov
cmp
icebp
es
add
mov
in
loope
subb
mov
push
scas
test
cli
push
sub
mov
ret
js
sbb
sbb
xor
pop
rorb
xorb
push
into
test
add
dec
aas
jmp
sbb
icebp
outsl
cmpsl
push
mov
sub
xchg
lret
sti
or
fisttps
dec
cmpb
xor
cli
je
out
lods
shr
loope
out
cmpsl
pop
and
lcall
push
rcrb
add
das
jp
pop
fisubs
push
xor
cmpb
lea
xor
sbb
xor
sub
dec
push
xor
sarb
or
inc
or
fimuls
stos
rolb
lea
mov
in
push
push
xchg
adc
cli
stc
jmp
enter
add
xor
bnd
aam
adc
push
test
or
xor
fdivl
sarb
loopne
jp
dec
cli
or
mov
mov
add
cmpsb
ret
sub
cmp
fidivs
into
add
icebp
push
push
lds
sbb
fiadds
faddl
lret
repz
xchg
mov
ret
mov
push
das
cmp
or
mov
sub
sbb
jecxz
test
xlat
or
jl
sub
mov
icebp
sub
mov
jle
cmp
lods
shlb
je
aam
xor
fistps
cmpsb
idivl
movsl
shlb
dec
or
stos
fidivl
enter
xor
and
dec
mov
pop
push
or
sbbb
pushf
mov
mov
into
fmuls
lcall
popf
mov
jns
add
jne
movsl
outsb
cld
into
pop
test
pop
jnp
push
popa
mov
or
jg
lods
mov
loopne
push
jp
adc
mov
dec
adc
out
jne
add
pop
pusha
outsw
clc
mov
xchg
push
xchg
mov
scas
jmp
jnp
loopne
sub
mov
mov
into
rorl
ficoms
jae
cmp
mov
sarb
push
mov
rorl
lcall
loop
xor
push
mov
pop
xchg
push
mov
cmpsb
loop
and
and
jp
sub
pop
daa
pop
mov
sub
lea
mov
push
fstpl
inc
inc
add
mov
addb
bound
mov
mov
bound
ret
dec
enter
mov
add
and
mov
ds
adc
xchg
cs
jb
aam
movsl
or
xchg
and
mov
cli
cmpsb
mov
sbb
mov
addl
pop
xor
inc
push
scas
fisttps
inc
sbbl
mov
jmp
andl
and
pusha
add
mov
push
pop
jne
sbb
or
push
int
lods
mov
cmp
hlt
add
notb
cwtl
fldl
push
mov
cli
mov
dec
mov
jmp
or
adc
and
mov
cmpsb
cli
dec
into
cli
or
dec
inc
fucomp
and
ja
sarb
test
mov
inc
or
into
jl
shrb
pop
jb
leave
and
mov
test
add
aad
loope
fwait
cmp
out
inc
add
das
dec
push
subl
mov
mov
rorb
xchg
mov
dec
cltd
hlt
fucomi
pop
mov
ret
call
mov
sti
sub
shlb
lahf
mov
cs
loopne
mov
fidivs
inc
sub
add
aas
sbb
incb
ret
sti
jb
clc
lods
lahf
jl
jae
jbe
subl
cmp
pusha
shrb
ljmp
out
mov
or
shrb
cmp
sbb
xchg
mov
pop
lahf
push
push
pinsrw
and
dec
sbb
pusha
inc
lock
cmp
ljmp
xor
ret
cmpsl
addw
scas
xor
add
dec
stos
loopne
mov
xor
fistpll
inc
xchg
sahf
or
scas
mov
mov
adcl
jb
data16
mov
push
cmp
dec
dec
fstl
adc
cmp
lret
js
adc
cs
add
mov
test
into
xchg
mov
lods
sub
push
dec
sbb
push
shr
hlt
mov
test
pop
and
push
add
mov
xchg
mov
aad
pop
test
push
into
mov
dec
add
cld
mov
pop
loopne
daa
lahf
cmpsb
aam
xchg
mov
call
js
jno
mov
lods
mov
mov
adc
ret
inc
mov
lahf
test
mov
es
jno
jg
or
push
cmpsb
pusha
xchg
or
test
push
xorl
ss
iret
mov
in
aam
xlat
mov
sbb
clc
cmp
and
cmpsb
xchg
shlb
sbb
push
in
lcall
clc
cmc
xor
or
mov
enter
fmuls
push
lods
pop
jg
pusha
mov
sub
shll
cmc
adc
mov
or
push
push
fdiv
mov
sub
mov
mov
push
xlat
and
push
sub
enter
popa
xlat
push
cltd
jle
mov
xchg
pop
push
adc
insb
cmp
je
mov
out
sbb
shlb
dec
dec
push
dec
cmpsb
shrb
cmp
cmp
shlb
and
or
cmpsb
sbb
insb
dec
hlt
push
imul
mov
movsb
hlt
negb
clc
mov
xchg
std
adc
sbb
aam
subl
shlb
stc
jp
aaa
jnp
dec
lcall
loopne
shr
mov
and
sahf
js
mov
pop
and
jecxz
add
xchg
pop
add
loopne
stc
fmuls
adc
in
scas
movl
loope
dec
push
or
into
and
mov
sub
lret
adc
sub
or
mov
mov
mov
xchg
add
or
movb
pop
push
mov
or
je
push
sub
jg
mov
push
clc
sbb
fidivrl
or
fldcw
dec
clc
test
jecxz
das
adc
sub
test
mov
cmp
lock
mov
add
adc
xor
dec
jecxz
test
add
iret
mov
dec
rorl
dec
jle
pop
sbb
inc
inc
mov
add
movsl
ret
roll
sbb
nop
mov
xor
jle
pushf
or
xchg
lods
mov
dec
add
dec
ss
aam
cmp
push
arpl
sub
cmp
mov
mov
ss
sarl
xor
pop
test
lock
push
or
sub
jge
xchg
cmpsl
push
cmp
inc
pop
mov
sbb
adc
sub
push
mov
cli
mov
push
push
iret
rolb
fadd
cmpsl
cmp
dec
call
pushf
sbb
fwait
dec
pusha
imul
hlt
sahf
xchg
loopne
jno
aas
adc
mov
bound
or
in
add
and
movsl
xchg
je
gs
ret
cs
jo
movsb
test
jecxz
or
je
push
mov
push
mov
je
icebp
movsl
mov
cmp
mov
rcrb
xlat
test
or
adcb
in
out
push
in
adc
cs
mov
or
mov
movsb
jecxz
inc
pusha
jo
lcall
in
es
ret
stc
add
iret
aas
inc
xchg
and
and
test
xlat
dec
jecxz
pusha
sarl
fsts
push
inc
fcoml
sti
insb
xchg
inc
push
cmp
fs
call
mov
push
jecxz
popa
int
data16
std
ss
call
daa
sub
or
xor
add
push
nop
out
xor
hlt
imul
mov
and
loopne
mov
into
dec
and
mov
cmp
push
loopne
inc
bound
sbb
mov
out
fadd
stc
movsl
cmp
or
das
fcoml
aad
dec
push
pop
cmc
or
gs
in
fld
push
outsl
addr16
lret
xchg
add
bnd
aaa
mov
pop
hlt
mov
push
cmp
sahf
jb
loopne
mov
cmc
leave
sbb
inc
shll
cltd
xchg
inc
clc
cmc
ret
jae
ret
adc
push
cmpsb
mov
inc
clc
fimull
or
lret
scas
aas
or
xor
pusha
nop
push
inc
mov
test
leave
add
adc
cmp
xlat
push
ljmp
cmpsb
pop
mov
shll
out
cwtl
sub
ret
jp
or
sbb
subb
shll
sar
fisttpl
fdivrs
cmp
leave
jnp
ficompl
pop
add
cmp
pop
dec
movb
scas
stc
sahf
mov
inc
stos
iret
mov
sbb
rcll
mov
out
nop
pop
icebp
sahf
int
loopne
jl
sbb
cmpsb
add
cmp
cmc
mov
insb
and
or
cwtl
mov
das
fcomp
fsubrs
gs
add
jle
push
rorl
push
adc
pusha
out
out
fucomi
sarb
nop
sbb
lock
add
jno
rolb
inc
cmp
sub
ret
cmpsl
test
push
into
pop
or
je
fldcw
or
insb
icebp
es
test
cwtl
fnstsw
dec
stos
and
push
test
cmp
shrl
mov
aad
scas
call
loop
mov
std
cmp
stc
test
fisttpl
xchg
les
mov
out
sbb
mov
out
xor
xchg
inc
cmp
mov
jp
cmpsb
in
orb
fcomps
mov
ret
push
push
jl
mov
das
je
popa
cld
flds
add
lods
push
movsb
sbb
fimuls
in
and
shll
cmp
fiadds
pop
or
push
mov
sbb
and
fwait
add
cmp
pop
dec
mov
mov
xchg
mov
or
icebp
jne
or
xchg
or
cmp
xchg
mov
jle
sbb
cltd
xchg
addr16
out
insb
push
push
insl
adc
loope
stos
mov
sbb
fnstcw
push
cmp
shrb
mov
loop
mov
loopne
jl
lret
push
cmp
mov
adc
jb
pop
mov
push
push
nop
movsl
sub
pop
sbb
mov
out
loopne
xor
pop
jbe
jmp
movsb
rorb
push
inc
mov
push
pop
xchg
test
scas
fsubrl
adc
icebp
mov
jle
call
imull
iret
mov
cmp
add
xchg
mov
enter
addb
out
insb
sbb
jmp
enter
fsubrs
and
hlt
ljmp
mov
mov
iret
and
xchg
rcrb
adc
popa
rorb
aas
cmp
push
dec
or
adc
push
cmc
or
jle
xchg
xor
into
movsl
js
push
sarb
fiadds
xchg
stos
ss
jp
dec
ljmp
dec
cmpb
pop
lods
aam
mov
mov
lcall
test
pop
call
mov
lcall
rorl
mov
push
lcall
fs
outsb
add
mov
in
outsb
pushf
mov
mov
cmpsb
scas
push
or
mov
shl
stos
inc
sbb
lods
pop
insb
cmp
ds
notl
insb
pop
cmp
jnp
cmp
pop
hlt
mov
cmpsb
inc
xchg
inc
cmp
adc
ret
mull
mov
mov
jle
mov
push
iret
xchg
mov
dec
loop
or
outsl
add
mov
bound
sub
cmpsb
sbb
mov
mov
jmp
push
sub
cmp
incb
je
push
cmp
jbe
repnz
xchg
inc
fcmovb
mov
arpl
or
push
ret
fisubrl
enter
or
sbb
mov
icebp
mov
js
mov
inc
out
xor
test
pop
jbe
xor
add
push
pusha
pop
adc
sarb
or
lods
sub
cmp
loopne
loop
out
addr16
lods
xchg
scas
shlb
nop
dec
cli
xchg
js
lahf
movsb
jne
mov
call
cmpsl
jl
fcom
fcmovne
add
push
add
xlat
jns
or
or
rcl
rorl
orb
inc
test
dec
idivl
inc
pop
addl
push
mov
jl
lods
ret
dec
movsb
shrl
fisubrl
inc
jo
mov
int3
les
testb
and
popf
in
rclb
mov
inc
jge
inc
adcl
addl
out
jmp
in
jmp
add
in
cmp
sbb
shlb
sub
add
hlt
xlat
pop
out
pushf
outsb
jge
movb
or
out
into
int3
jmp
dec
add
inc
daa
roll
push
sbb
mov
push
mov
insb
mov
std
out
pop
insb
mov
addl
rolb
mov
push
push
push
mov
shlb
subl
add
adc
bound
jno
out
sbb
cmc
negb
cmpsb
and
jo
outsl
out
pop
push
push
adc
inc
out
adc
pop
inc
mov
sub
ljmp
iret
shll
fisttpl
mov
xchg
mov
lcall
and
push
std
movb
inc
nop
pop
mov
pop
push
or
dec
mov
mov
jge
push
test
push
adc
sbb
idiv
jmp
adc
jl
cltd
sbb
test
or
call
pop
mov
jp
into
adc
sbb
sahf
sbb
add
dec
scas
dec
sti
andnps
nop
or
add
jl
sbb
mov
dec
orl
add
mov
aam
xchg
ret
jo
adc
call
adc
pusha
pop
sub
movsl
icebp
jo
pop
sub
rcll
inc
mov
or
in
xor
fimuls
push
mov
ret
icebp
dec
jl
and
push
mov
test
rcll
jmp
or
inc
push
pop
mov
cmovl
dec
adc
stos
enter
scas
cmp
bound
popa
rclb
pop
negb
xchg
pop
lock
mov
add
sbb
pop
dec
and
pop
test
xlat
sbb
insb
or
push
jl
jo
push
pusha
pop
fcoml
addr16
ljmp
movsb
iret
push
lock
pusha
lock
inc
nop
mov
cmp
outsl
xlat
popf
jp
icebp
cs
cli
out
add
inc
ret
mov
dec
je
fcompl
and
jl
ljmp
lea
xor
or
mov
add
imul
sub
mov
das
jno
fs
add
cmp
js
mov
fiadds
fdiv
movsb
pop
aad
out
fwait
clc
push
mov
rorb
shrl
loopne
xchg
ds
sub
or
add
shrl
les
and
sbb
push
stc
cld
sub
mov
movl
sarb
mov
jg
nop
inc
mov
rcll
ss
xchg
andl
jmp
mov
jecxz
ljmp
push
mov
aam
inc
xor
pop
dec
mov
push
adc
cmp
bound
lea
shrl
xor
xor
mov
sub
mov
jp
lret
pop
pop
dec
mov
adc
call
shl
sbb
ret
cmp
subb
mov
out
outsb
sub
mov
push
push
jmp
push
enter
lods
out
push
into
cmpsb
test
sbb
inc
in
insb
inc
inc
cmp
mov
enter
int
out
inc
mul
lret
dec
popa
sub
je
add
push
adc
jne
movsl
movsl
gs
clc
lea
pop
lods
sub
jae
in
push
jmp
mov
sahf
test
sbb
jge
test
inc
shlb
insl
bound
test
mov
jl
mov
loopne
mov
push
dec
lret
sbb
popa
dec
jae
jb
sub
or
in
add
inc
mov
rcll
faddl
pop
fimuls
les
pop
push
inc
js
or
pop
lds
dec
mov
inc
les
sub
jmp
jbe
repnz
adc
fcom
add
sub
popf
subl
cmp
jb
add
sti
xchg
mov
xchg
xor
mov
add
aam
cmp
push
jle
mov
dec
add
ret
rorb
pop
inc
push
jecxz
adc
sub
aas
shl
add
push
add
int
adc
call
jbe
adc
add
jp
cld
aas
fcom
xchg
mov
out
sub
mov
add
aad
aam
pop
loop
sarb
cmc
pop
jbe
and
aam
loope
mov
ja
pop
mov
incl
dec
or
lock
cld
fs
xchg
repz
sbb
push
jmp
negb
mov
cwtl
pop
dec
repz
pop
test
pop
out
sbb
mov
aas
push
push
dec
add
cmp
divb
fsubrl
es
pushf
lret
jne
dec
mov
movsb
lods
pusha
mov
pop
mov
xchg
scas
cmp
mov
push
pop
leave
sub
dec
pop
lahf
stos
cmp
cmp
sbb
pusha
or
inc
or
adc
add
cmpsb
mov
repz
sahf
ds
out
mov
mov
rcrb
pop
and
xchg
jns
sub
lcall
jo
fcom
and
sbb
aaa
cmp
popf
pusha
loope
insl
push
cmp
or
out
dec
add
sbb
lods
jnp
gs
lock
enter
inc
lods
icebp
stos
sti
jg
and
mov
out
or
or
movsl
inc
push
call
inc
fldcw
mov
pop
dec
push
sub
nop
loopne
mov
call
xlat
and
lds
popf
stc
adc
shl
pop
mov
sbb
pop
xor
sbb
bound
xchg
lods
sbb
and
mov
adc
dec
mov
cli
adc
mov
push
jno
stos
scas
cmpsb
sarl
push
xlat
xchg
cmp
fucom
pushf
ret
leave
cmp
xor
dec
subl
stos
sti
dec
mov
loope
pop
inc
add
sbb
or
add
hlt
test
and
mov
dec
ljmp
sub
dec
idivl
pop
cmp
lods
add
mov
cld
or
dec
sbb
sbb
sbb
mov
loop
cmc
dec
sbb
dec
xor
mov
std
or
dec
mov
lock
sub
sbb
je
sub
cld
pop
pop
add
push
jecxz
imul
je
sub
mov
cmpsl
fmulp
call
mov
lds
mov
stc
sub
xchg
inc
jle
adcb
sbb
adc
push
xchg
pop
popa
loope
sub
js
cwtl
mov
lods
int
aaa
mov
gs
add
mov
dec
cwtl
add
sbb
repnz
push
push
adc
xchg
jp
test
outsl
fcmovu
adc
loopne
aaa
xor
movsb
mov
sub
insb
xchg
out
add
test
lods
cmp
leave
xchg
and
jge
jnp
shrl
out
push
sbb
mov
add
pop
mov
lock
call
push
dec
inc
sbb
lock
jl
jg
cmc
inc
sub
loop
jae
sub
push
xchg
div
push
mov
mov
xchg
dec
sahf
jmp
out
dec
enter
lods
movsl
fs
icebp
mov
lret
cmp
in
sub
cmc
xchg
shrb
push
xor
in
insl
arpl
fsubs
pop
shlb
mov
adc
and
sbb
xchg
cli
add
pusha
mov
movsl
jo
cmp
div
shll
mov
jo
adc
jb
adc
mov
cmp
jle
aam
pop
xchg
jbe
lret
cmp
or
mov
jno
mov
inc
ja
mov
clc
jp
lock
dec
or
add
sub
push
jp
cli
pushf
cli
push
lods
mov
stos
push
mov
call
mov
sbb
popa
dec
fcompl
jl
loop
adc
mov
out
icebp
icebp
xchg
and
mov
test
mov
add
sub
test
scas
das
rcrl
arpl
addl
xor
movsl
stos
movsl
inc
sbb
leave
cmc
sti
jp
sub
push
addr16
push
push
lahf
lock
test
dec
fwait
xchg
inc
jl
fimuls
dec
icebp
or
and
or
lcall
jb
ds
add
test
push
cmp
mov
shrl
popa
les
or
mov
in
sub
dec
cli
addl
nop
and
adc
ss
js
pop
dec
out
cmpsb
cmpsl
mov
dec
dec
arpl
scas
negb
mov
cs
jecxz
sbb
push
test
pushf
push
pop
mov
pop
adc
dec
je
in
test
sbbb
shl
sub
adc
push
xchg
jnp
jmp
sub
aad
fwait
jo
imul
add
add
vorps
imul
or
add
add
cmp
add
scas
rcr
cmp
stc
add
scas
movsb
sub
jo
jle
addl
popa
shll
dec
adc
js
mov
les
cld
mov
and
adc
xlat
xchg
hlt
dec
and
and
ficoms
fsubrs
adc
add
sbb
cmp
sti
lds
ljmp
or
enter
shlb
pusha
mov
fs
fisttpll
sub
fwait
push
out
jmp
xchg
fistl
js
cwtl
push
or
xchg
jo
scas
rol
xchg
shrb
dec
divl
push
sub
pop
inc
shrd
aas
xchg
xchg
lcall
sarl
iret
ret
lds
mov
push
stos
xchg
or
and
addr16
mov
mov
mov
lock
xorl
loope
push
cs
mov
call
loope
hlt
cs
fdivrl
fisttpll
enter
insb
add
cmp
lds
jne
leave
sbb
adc
pop
mov
dec
xchg
dec
mov
mov
stc
or
jb
fidivrs
or
xor
into
shl
jmp
jae
push
cli
lock
nop
inc
out
call
cmp
idivb
or
mov
mov
rcrl
push
add
call
cmp
dec
stos
push
aam
ja
je
add
stos
xor
aas
fcoml
movsb
pop
mov
mov
pop
or
sti
sub
mov
jge
out
mov
inc
inc
stos
scas
mov
ss
pop
pop
jnp
jns
mov
jo
sub
push
or
lock
or
out
add
pop
mov
cmp
popa
push
cmp
movsl
sub
push
js
push
movsl
xchg
pop
add
enter
out
mov
adc
int3
push
pusha
pop
xchg
inc
push
lods
sbb
testb
out
ds
mov
rcll
addr16
sahf
adc
sub
adc
sti
jmp
and
adcl
and
push
fldt
out
rol
xchg
daa
jne
jge
rol
cli
xchg
push
loopne
mov
out
jle
sub
or
lods
or
out
xchg
test
mov
inc
mov
sub
rclb
cli
data16
out
pop
inc
popf
mov
imul
sbb
add
and
rolb
pop
rcl
or
loop
fwait
or
add
sub
shll
daa
inc
out
add
cmpsl
je
lret
inc
ret
xchg
mov
repz
mov
push
mov
nop
adc
push
sub
or
pop
push
sbb
sub
dec
cmp
push
outsl
repnz
add
sbb
inc
inc
ret
mov
imul
sub
push
insl
call
mov
jge
shlb
dec
inc
stos
push
inc
hlt
iret
lods
sub
fdivs
pop
fldt
cmpsl
outsl
xchg
call
lock
mov
movsb
cwtl
sbb
ss
mov
repnz
loopne
repz
out
mov
rolb
adc
loope
neg
ret
sub
ljmp
scas
dec
xchg
mov
je
decl
sbbb
addb
or
icebp
test
hlt
imul
bound
xchg
je
add
jp
push
jns
icebp
sub
sub
cmp
popl
lea
pop
mov
dec
add
scas
daa
adc
push
cmp
pop
cmp
cmp
bound
xor
adc
cmp
mov
fwait
rcrl
cmp
pop
cltd
mov
xchg
sub
pop
fnsave
lret
stos
lock
cmp
cmp
jl
push
cli
jl
sub
movsb
outsl
je
pop
lds
out
and
sbb
lea
loope
sahf
out
xor
movsl
nop
cmp
xor
stc
cmp
xor
call
ja
ljmp
enter
dec
sbb
push
pop
xor
das
jg
aas
xchg
adc
lcall
and
mov
pop
mov
add
out
bound
jne
arpl
mov
add
aaa
mov
dec
imul
lods
popa
les
stos
icebp
cli
xchg
and
mov
sub
mul
popf
cmc
fs
adc
pop
sbb
je
jo
dec
pop
mov
sarb
push
jo
cwtl
ss
jno,pt
add
adc
or
jae
adc
leave
leave
xlat
lds
sub
stc
xchg
push
lret
inc
je,pt
aaa
and
xchg
dec
sbb
jnp
dec
dec
xor
mov
mov
xchg
or
stos
std
mov
inc
cmc
add
icebp
hlt
nop
xor
push
push
leave
push
sub
sub
or
and
popa
rorl
mov
out
mov
cs
xchg
aam
rorl
bound
mov
enter
js
mov
stos
push
jmp
dec
mov
push
mov
cmp
std
imul
clc
mov
clc
sbb
shl
fldl
sbb
sar
inc
inc
jg
mov
jge
add
jo
push
lcall
cwtl
xchg
xchg
loope
gs
pushf
inc
out
xchg
cmp
xchg
or
push
mov
popf
mov
push
mov
push
cmp
inc
jp
std
jecxz
jno
dec
push
orb
xor
push
or
in
push
push
mov
je
dec
jp
mov
lret
mov
jl
mov
movsb
pop
ret
pop
cmp
scas
mov
mov
or
xchg
pop
push
call
pushf
sbb
or
mov
mov
and
cmpsl
cmpl
ret
aad
icebp
sbb
mov
out
jno
push
movsl
xchg
and
sub
js
testb
lea
sub
dec
cmp
inc
dec
cwtl
push
test
and
out
mov
lock
jo
add
test
fdivr
jo
dec
push
gs
jge
or
repnz
jns
lret
inc
mov
inc
cmpsl
dec
push
aad
scas
scas
mov
lret
fists
sti
shlb
push
mov
ljmp
or
sbb
push
add
mov
add
scas
add
mov
shrl
sbb
out
mov
inc
loope
sbb
fdivrs
sbb
and
loop
and
mov
dec
pushf
sub
je
roll
sbbl
aas
sbb
lret
sbb
lods
jle
xchg
push
add
imul
sub
hlt
outsb
dec
or
pop
aaa
out
fldpi
cmp
test
mov
push
loopne
popa
outsb
push
mov
lcall
push
xchg
push
adc
hlt
icebp
jmp
inc
ds
or
push
pop
push
sar
mov
rclb
mov
xchg
and
sub
jge
movsb
and
mov
xor
imul
dec
in
sub
sub
jg
outsl
xor
loope
cmc
cwtl
xor
cwtl
cmp
add
dec
or
xchg
adc
and
sbb
scas
pusha
bound
mov
repnz
adc
pop
xor
sbb
ss
js
or
pop
or
pop
dec
pop
jge
insb
daa
pop
mov
jg
iret
xor
lret
adc
ja
dec
call
sub
jge
lahf
push
je,pn
insb
push
xchg
pop
scas
or
nop
push
pop
aaa
cmc
in
pop
lods
testl
push
push
ljmp
sbb
push
movsl
and
into
pop
mov
push
int3
addr16
cli
sbb
lds
movsb
sub
fidivs
loopne
inc
cmc
loopne
sub
addb
mov
inc
orl
les
in
and
dec
jl
or
test
call
mov
cmp
popf
test
repnz
gs
and
mov
orb
pop
dec
fistl
push
iret
push
roll
adcl
xchg
xor
jge
lock
or
std
aaa
stc
sub
lret
push
jmp
fwait
dec
arpl
in
xor
repnz
orl
mov
js
and
dec
fsubl
pop
imul
ret
inc
lret
dec
push
jl
subb
loope
dec
jo
push
cmp
sbb
and
xor
sub
aad
xchg
popf
pop
or
lahf
ds
pop
or
jmp
push
cmp
lods
js
cwtl
sbb
loopne
mov
dec
pop
mov
fcomps
dec
mov
imul
xor
add
mov
adc
sbb
push
or
mov
aad
out
dec
push
push
mov
aam
add
cmc
dec
mov
lds
ficoms
xor
xlat
mov
gs
lds
sbb
sub
or
xchg
jg
and
std
push
mov
sti
pop
sbb
clc
xor
xor
and
icebp
inc
ljmp
fcomi
inc
xor
hlt
mov
jns
jnp
ja
and
cs
sub
lds
push
scas
pop
popa
test
cli
xor
and
popl
ds
push
popa
scas
sbb
add
adc
icebp
push
pop
pop
jecxz
nop
or
movsl
addl
scas
add
ss
sbb
jg
mov
pop
pop
clc
popf
push
push
mov
inc
mov
pop
sbb
stos
data16
pop
lea
idivb
lret
xchg
adc
test
inc
push
das
sbb
imul
sbb
lea
mov
pusha
stos
add
and
jno
nop
insl
pop
push
fucomi
shlb
in
clc
js
fcmovnu
shr
push
xchg
mov
dec
cmp
mov
pop
cmp
inc
inc
xor
sub
xchg
or
sbb
iret
mov
or
or
les
inc
mov
imul
push
jle
sub
loope
and
into
sahf
push
test
ds
rclb
add
sahf
xor
loop
mov
loopne
xchg
lcall
sti
add
xchg
js
push
dec
inc
loop
mov
notb
cmp
divl
adc
mov
incl
and
lcall
push
add
adc
test
lods
int3
lahf
sbb
sbb
out
das
xchg
cwtl
fcomps
push
out
pop
call
cld
dec
stos
pop
stos
lret
and
rorl
sbb
out
std
cld
das
or
push
mov
inc
mov
jmp
pop
arpl
lock
mov
sub
in
lret
inc
or
jae
pop
test
pop
lcall
rol
jl
and
into
jb
dec
mov
mov
ret
dec
or
cltd
outsl
ljmp
movsl
mov
scas
jb
cmp
lods
sbb
enter
adc
mov
inc
popa
jae
add
push
dec
mull
add
out
jecxz
push
mov
sbb
mov
jge
inc
cmpb
int
imul
ds
cltd
pusha
in
dec
add
jg
sub
jge
in
out
xchg
inc
scas
add
mov
mov
inc
fprem
xchg
xor
sub
sarb
cmpsl
inc
sub
sub
pop
shrb
jae
mov
loop
push
inc
mov
inc
popf
or
neg
xchg
adc
enter
dec
pop
sub
shl
xlat
pop
icebp
push
js
pusha
add
lea
pop
ljmp
out
in
scas
xchg
inc
je
aas
push
int3
dec
ljmp
mov
aaa
rcl
imul
xchg
fdivrp
add
mov
and
aad
movsl
scas
cmpsb
dec
cmp
jns
andnps
cmp
jle
xor
xorb
jp
mov
jae
inc
cmp
mov
sbb
sub
pop
push
fidivs
inc
push
cmp
call
and
push
rol
jne
gs
sub
push
xchg
pop
or
sub
pushf
mov
fwait
and
fs
jae
negb
cmp
lahf
nop
ret
sbb
outsb
sbb
or
imul
sbb
inc
and
test
outsb
and
adc
pop
dec
mov
push
mov
hlt
int3
mov
sub
sbb
mov
mov
fbld
fldl
add
xchg
ror
jle
rorb
stc
sub
test
cli
out
lcall
or
into
dec
andl
xor
movsb
in
imul
insb
push
push
xor
imul
std
add
add
outsl
dec
push
jl
adc
nop
sahf
xchg
xor
popf
cmp
lret
inc
stos
adc
pop
insb
movsb
adc
mov
outsb
xor
mov
test
jge
ret
jg
and
inc
ja
aaa
add
jge
xlat
mov
inc
cld
dec
aas
cmp
data16
js
fidivrs
sbb
icebp
cmc
sbb
repnz
pusha
or
repnz
mov
incl
or
cmp
gs
fwait
je
and
fs
push
ljmp
rcrb
mov
lods
mov
mov
push
pop
fdivrs
push
arpl
inc
add
pop
mov
add
pusha
fwait
loop
sbbl
mov
pop
aaa
incl
add
rcrl
js
and
xlat
adc
jg
pop
movsb
or
enter
icebp
or
bound
pop
shlb
adc
xchg
scas
add
sub
mov
orb
or
push
cltd
adc
std
push
dec
sbb
pop
insl
cmp
fmull
inc
jnp
add
adc
imul
rolb
or
sar
jle
or
lods
lea
and
mov
jns
ss
push
jmp
loopne
push
push
ret
push
add
dec
imul
xor
mov
mov
int3
add
sahf
sub
dec
and
xchg
jo
jg
xchg
jmp
movsl
out
mov
push
xor
jne
ljmp
cld
sbb
ds
loop
add
hlt
inc
add
ljmp
aas
fsubrl
cs
add
cmp
xchg
jne
cmp
sub
insb
or
aas
adc
add
pushf
pop
push
shlb
mov
push
add
push
sub
mov
sbb
jmp
andl
cmpsl
movsl
loopne
dec
roll
loop
inc
push
dec
out
jge
les
loop
int3
adc
mov
inc
cs
push
daa
jge
push
push
dec
xchg
mov
cwtl
sub
push
mov
mov
cmpsb
push
rcr
cmp
outsb
or
pusha
test
subb
mov
ja
inc
je
sahf
daa
dec
jae
or
ja
inc
pop
push
gs
inc
jae
push
daa
loopne
test
test
mov
inc
xchg
mov
dec
jae
fwait
cli
mov
inc
and
ret
inc
mov
inc
push
mov
dec
xor
jle
mov
pop
push
in
in
xchg
pop
lea
icebp
inc
pop
imul
adc
clc
sarl
out
test
push
sub
xor
pop
test
scas
outsb
popf
add
push
gs
xchg
mov
not
ja
push
roll
xchg
mov
notb
rcl
mov
imull
or
idivl
xchg
jmp
mov
cmp
dec
pop
adc
jle
xchg
xor
xchg
dec
mov
btr
inc
sbb
push
pop
xchg
and
les
sub
mov
mov
lds
imul
push
test
js
push
das
mov
pop
push
xor
jo
mov
and
stc
cli
orl
adcb
adc
mov
lds
sbb
and
loope
add
sub
scas
jmp
lret
mov
mov
fistps
push
xchg
adc
jno
gs
filds
push
aad
fdivrs
pop
std
sub
xor
sub
jo
jo
or
xlat
mov
sub
rorb
mov
or
lods
sbb
lea
mov
pop
pop
or
stc
inc
sbb
fadds
outsb
pop
je
mov
jne
xor
mov
lds
and
sbb
push
jb
dec
pop
mov
mov
test
aad
inc
mov
xchg
push
jbe
fdivl
aad
notb
mov
jnp
sbb
bound
jo
loope
aaa
int3
add
shrb
mov
sub
das
loopne
ss
mov
nop
cld
js
movsb
push
pop
add
out
jp
push
icebp
cmp
sbb
add
notl
cmp
jb
jp
popf
or
pop
ljmp
icebp
jecxz
sbb
and
outsl
andb
pop
pop
cli
push
shlb
rolb
movsb
sbb
push
insl
jl
xchg
movsl
popf
jne
pop
mov
or
mov
xchg
inc
sarb
mov
xor
lret
jle
clc
mov
pop
adc
call
test
lea
push
adc
fisubs
call
int3
and
sbb
lock
fiaddl
and
loop,pt
push
inc
iret
in
imull
mov
xchg
aam
inc
into
push
pop
sarl
adc
in
imul
sbb
fbld
negl
icebp
mov
cmc
sub
lods
outsl
adc
jb
xchg
mov
jbe
popf
je
jge
movsb
ret
cmpl
mov
or
or
fwait
push
add
sub
test
insw
out
in
dec
inc
inc
add
or
jle
mov
fsubrp
ret
cmp
les
mov
pop
inc
fwait
stos
mov
rol
push
imul
push
rcrl
int
leave
mov
and
pmaxub
dec
js
inc
sti
addl
notl
inc
addl
rcrb
dec
sub
shll
insb
pop
aam
aad
test
lahf
push
push
movsb
in
loope
loop
imul
or
jmp
adc
pushf
push
in
cltd
and
clc
mov
cli
pop
pop
arpl
pop
xor
inc
in
jmp
xchg
jmp
fisubrs
in
cmpsb
fildl
adc
sub
adc
scas
pop
sbb
cmp
or
inc
jge
loope
mov
and
int3
subb
js
jge
pop
aas
in
or
loope
add
movsl
int
daa
push
loopne
push
lods
lret
adc
jmp
mov
fistpll
jg
xchg
sbbl
mov
out
jns
xor
jmp
decl
or
push
lock
pop
push
add
scas
mov
data16
mov
push
pop
lock
pop
dec
xchg
jl
call
test
mov
dec
sbb
jmp
push
sbb
push
aaa
xchg
enter
mov
jne
ja
mov
or
or
push
jp
icebp
push
mov
add
sbb
cli
sbb
and
xchg
sbb
scas
adc
push
int3
sbb
adc
pop
jo
mov
cmp
dec
shl
outsb
fs
cli
ret
mov
and
push
andl
scas
xchg
stos
mov
stos
out
xor
and
sub
xchg
push
or
cmp
dec
pushf
mov
adc
push
out
je
pop
push
sbb
push
push
mov
cli
jp
adc
mov
ret
lret
mov
mov
push
push
pop
and
push
les
lds
add
mov
js
dec
mov
lods
fldcw
cmp
dec
mov
shl
cmpb
jbe
popf
push
test
loop
enter
push
std
xor
ret
psrad
ljmp
push
imul
movaps
testl
xchg
add
mov
cli
inc
add
sub
pop
jnp
cmp
and
mov
mov
aad
mov
psubb
cmp
dec
sbb
xchg
orb
sbb
das
xchg
ret
pushf
add
aaa
lcall
test
loop
xor
roll
xor
mov
adc
loopne
roll
adc
pop
test
xlat
adc
inc
sbb
bound
mov
mov
adc
lret
pop
adc
fwait
stc
iret
movsl
pop
cmc
mov
sub
inc
je
loopne
scas
adc
aad
inc
movsl
mov
adc
sub
mov
test
repz
dec
cli
mov
pop
xchg
pop
cmp
shlb
sub
std
mov
mov
or
cmp
int3
push
sub
and
cmp
push
lcall
js
push
push
mov
dec
mov
cmp
das
add
imul
mov
inc
gs
iret
cmp
lea
cmp
movl
and
outsb
jg
jge
cmp
xor
jne
or
xchg
call
sub
out
jp
clc
addr16
movsb
and
or
fcmovnu
xchg
mov
mov
js
pop
sbb
inc
dec
daa
inc
sbb
int
xchg
pop
test
repz
cmp
jo
xor
sub
sbb
and
movsl
aam
xchg
inc
int3
mov
sbb
ret
inc
and
inc
and
aad
add
cmp
pop
or
gs
iret
jne
add
inc
sbb
pop
daa
sbb
fimuls
loop
pshufw
cmp
push
icebp
jge
mov
push
insl
push
ror
lea
inc
fadds
or
aad
dec
mov
xor
mov
add
scas
fcoml
push
rcll
inc
sbb
cmp
sbb
pop
fdivrl
adc
push
add
daa
rolb
jp
mov
aas
add
xor
orl
gs
sbb
jle
daa
idivl
pop
test
or
mov
repz
mov
mov
les
inc
filds
push
mov
repz
loop
scas
xchg
push
shlb
lea
mov
jmp
lea
popa
or
mov
xlat
popa
ja
inc
ljmp
xchg
add
insb
sub
enter
fsubrs
aaa
inc
sub
mov
in
aam
and
add
push
xlat
addb
in
loopne
jne
je
or
mov
or
inc
and
dec
mov
or
fwait
enter
scas
jg
js
push
hlt
cmp
and
pop
pop
imul
addb
xchg
cmpsb
cwtl
cltd
lahf
dec
loopne
aas
push
pop
stos
push
dec
and
test
mov
outsl
xchg
xor
stos
mov
jae
cmpsl
enter
loopne
sub
sbbb
sbb
mov
mov
pop
mov
pop
shrb
pop
popf
iret
pusha
mov
fcomip
test
sub
inc
clc
js
mov
daa
mov
add
mov
outsb
imul
push
xor
and
lahf
cmp
push
ret
jp
inc
pop
xchg
or
mov
jno
loope
jle
adc
mov
lds
xchg
dec
adc
mov
and
add
cwtl
fists
push
jno
sub
push
cmpsl
add
push
lds
pop
and
das
xor
ret
loope
in
pop
sub
ds
and
lret
ja
adc
popa
or
js
pop
mov
lods
or
aad
into
mov
or
or
jo
hlt
sbb
sub
scas
mov
paddb
mov
out
adc
repz
pushf
or
movsl
data16
xchg
push
adc
lcall
sub
jle
push
push
xchg
push
push
inc
lds
das
ljmp
outsb
lahf
fadd
sub
ret
jp
xchg
cmpsl
inc
jecxz
mov
push
push
xor
push
outsl
push
push
pop
push
gs
sbb
insb
inc
andl
loopne
outsb
sbb
aaa
cmpsb
mov
pop
sahf
out
push
xor
clc
mov
scas
pop
mov
and
sbb
adc
sub
mov
sub
cli
add
mov
lds
sub
jno
ljmp
adc
stc
adc
call
inc
ret
fsubl
lods
sub
in
cmp
movl
ljmp
jl
push
mov
out
mov
std
ljmp
jne
clc
ret
popl
add
dec
sahf
ret
inc
pop
and
inc
mov
sub
lcall
fcmovu
into
mov
loope
data16
jmp
push
adc
mov
call
mov
mov
lds
sub
xchg
es
push
lock
in
clc
std
and
pop
shlb
dec
mov
adc
add
xchg
mov
adc
int
cs
ficompl
mov
jmp
rol
mov
aad
fidivs
cmp
out
out
shrb
aas
inc
and
mov
push
ret
cmp
mov
shlb
rcll
pop
scas
cmp
push
inc
add
add
ds
stos
ret
test
cmp
adc
adc
flds
pop
cmp
loopne
clc
js
loop
inc
std
test
sbb
incl
push
sub
push
push
aaa
into
test
xsha256
cmpsb
adc
xor
lock
or
xchg
xchg
push
lar
or
arpl
rol
ret
sarb
pop
or
lea
scas
dec
jne
mov
dec
clc
bound
fs
test
gs
mov
jno
stos
jno
jbe
hlt
mov
xchg
pop
push
mov
cmpsb
stos
arpl
xchg
jmp
sub
mov
fdivrs
adc
loope
or
je
sti
je
rcl
pop
and
jmp
add
or
mov
pop
jge
fwait
cmpsb
xorb
adc
dec
lds
arpl
aas
sbb
es
jge
ret
lods
sbb
jbe
pop
push
sahf
and
mov
dec
dec
mov
rol
lods
xlat
cmp
lock
aam
add
out
or
cmpsb
push
pop
jge
mov
mov
add
shrl
pop
addr16
jo
push
sbbb
addr16
scas
jge
sbb
scas
loope
push
dec
and
adc
mov
fldt
test
insb
cmp
mov
out
lahf
pop
pop
test
inc
or
std
les
int3
icebp
out
lods
cli
xor
pusha
add
jmp
jne
stos
es
sbb
and
in
adc
int
lret
inc
arpl
loope
and
xor
lods
pop
xchg
adcb
cld
mov
mov
loop
stos
daa
xor
cmp
gs
inc
loope
andnps
sbb
insb
push
push
pop
sub
scas
scas
scas
scas
mov
cmc
cs
nop
cmp
or
lret
sbb
mov
xchg
in
stos
push
sbb
jle
mov
cmp
and
daa
nop
jecxz
lock
mov
adc
xchg
jge
ret
mov
adc
and
jo
mov
xlat
movsb
ss
push
add
pop
iret
add
ret
inc
mov
add
shlb
fs
sbb
mov
hlt
mov
loop
jp
sbb
fistpll
push
lock
arpl
mov
cmpsb
outsl
ja
lcall
mov
mov
leave
hlt
ds
aad
out
and
mov
or
lods
mov
or
imul
test
rol
call
xchg
mov
and
mov
jp
xor
rcll
xor
daa
ret
stos
adc
inc
outsb
jecxz
mov
mov
fistpll
sbb
mulb
movsl
ja
pop
fmuls
xor
insl
add
mov
add
insl
cmpsl
mov
iret
push
xlat
dec
inc
insb
inc
insb
test
xor
je
push
xchg
add
xor
loope
adc
cld
loope
push
adc
add
cwtl
stos
mov
xchg
sbb
test
adc
loop
out
add
jle
mov
mov
pop
and
lods
insb
pop
cmp
js
pusha
or
push
lret
push
fiaddl
xor
stos
xor
imul
pop
mov
or
nop
enter
dec
inc
mov
insb
inc
lea
xchg
in
comiss
mov
loopne
dec
aam
push
pop
dec
pop
das
je
mov
mov
dec
inc
ja
stc
push
add
dec
add
push
xor
push
sub
xor
aaa
mov
lods
sub
pop
jg
xor
insl
dec
pop
mov
test
mov
push
jge
lods
push
ret
jne
pop
mov
leave
add
jne
push
jmp
cmp
push
mov
aas
lcall
pop
push
pop
scas
add
push
lods
jmp
sub
add
das
xchg
pushf
sub
inc
jne
fwait
mov
icebp
mov
and
inc
add
cmp
pop
adc
cwtl
insl
xchg
push
mov
mov
rcll
push
cs
cmp
test
dec
pop
cmc
and
dec
lret
rcrb
inc
add
push
clc
loope
or
xchg
mov
adc
es
cli
jno
adc
sbb
inc
xchg
sbb
pop
fdivl
filds
and
insb
insl
or
dec
hlt
pop
sbb
pop
insl
push
fiaddl
inc
sbb
sti
scas
inc
sbb
outsl
aaa
xor
add
shll
xchg
popf
aas
mov
leave
sahf
or
xor
xchg
lods
nopl
roll
mov
push
sahf
xlat
or
push
test
in
std
data16
jecxz
lds
push
imul
xchg
mov
jge
push
fcomi
dec
lret
sti
arpl
adcb
stc
inc
jecxz
popa
jmp
ds
add
jne
pushf
mov
add
sub
daa
cmpb
or
cmpb
shl
loope
sbb
pop
adc
adc
sub
fcmovnu
xchg
arpl
inc
push
addr16
scas
sub
rorb
and
rcrb
out
push
add
dec
movsl
push
ret
sti
jecxz
cmp
insl
push
out
and
das
cmpsb
pushf
cli
pop
push
rol
mov
into
sbb
cld
or
rolb
pop
sbb
shlb
mov
inc
sub
ss
push
dec
sbb
das
dec
arpl
xchg
lods
js
add
adc
mov
je
aam
sarb
dec
xor
les
inc
add
ds
imul
pop
dec
lret
cld
sub
rolb
lods
jmp
dec
rolb
mov
cld
mov
jmp
cmc
mov
cmp
pop
xchg
mov
cmp
mov
loopne
xchg
sub
push
xor
xor
je
add
add
clc
mov
jg
jge
xchg
push
lret
xor
in
mov
jp
pushf
adc
pop
sbb
lods
les
inc
nop
inc
test
add
jg
nop
lock
push
sbb
arpl
mov
adc
push
pop
xchg
sub
loope
mov
jo
adc
dec
scas
nop
outsl
xchg
ljmp
adc
pusha
ljmp
cmc
add
int
lahf
sti
aas
xor
mov
xchg
sahf
push
xchg
adc
or
push
pop
fiaddl
leave
loopne,pn
mov
and
xlat
cmp
dec
and
scas
popa
test
stos
ljmp
xor
inc
movsb
imul
xchg
scas
mov
pop
xor
sbb
push
sbb
jg
push
ljmp
imull
add
dec
aad
insb
outsl
dec
pop
xor
fs
daa
push
cmpsl
cli
add
in
cmp
pop
test
xor
inc
push
popa
popa
mov
es
in
je
dec
push
dec
inc
push
lds
in
cmc
add
in
cmpb
loop
jecxz
sub
cwtl
cmp
adcl
pushf
sbb
add
out
mov
popf
push
test
popa
dec
or
pop
mov
addl
stmxcsr
adc
push
leave
daa
and
push
mov
adcl
mov
rorl
cltd
lahf
adc
push
pop
insl
push
filds
inc
cmp
jp
push
fbstp
dec
lods
cmp
jo
lret
addr16
das
push
add
das
ret
repz
out
sbb
sti
jbe
adc
jne
xlat
jecxz
jp
sbb
arpl
xor
rorl
in
pushf
les
int3
sbb
pop
loopne
jg
divb
ja
pop
lock
jge
jne
addl
xor
cmpsl
aaa
sti
mov
xchg
mov
push
loope
dec
adc
clc
dec
sub
movsl
or
ljmp
inc
lret
xchg
inc
mov
sbb
sub
adc
inc
out
sub
nop
stos
jmp
xchg
and
mov
das
loopne
arpl
cmpsl
mov
movb
sbb
pop
aaa
icebp
rorl
addr16
jmp
and
iret
movsl
sbb
aaa
dec
pop
pop
test
fidivl
dec
ljmp
pusha
repnz
pop
jne
test
cld
repz
ret
aad
jle
scas
fwait
int
js
and
mov
shrl
and
mov
movsb
inc
pop
xchg
aam
jp
cmp
out
in
popa
adc
jmp
xchg
dec
add
icebp
jg
mov
insb
ja
out
sahf
loop
loope
stos
or
loopne
push
dec
adc
adc
push
test
adc
ret
pop
jmp
push
sub
mov
sbb
add
loopne
add
push
fdivl
loopne
shlb
stc
sub
movsl
nop
add
pop
shlb
dec
inc
jle
and
idivb
xlat
in
rol
jne
neg
cmp
sbb
pop
fisttps
push
out
jno
bound
mov
enter
inc
xchg
fisubs
les
mov
mov
mov
lods
jns
pop
out
push
sbb
xor
popa
loopne
dec
mov
faddp
test
sbb
stos
mov
jge
aaa
in
fldcw
popa
dec
jbe
loope
bnd
dec
je
ljmp
mov
sbb
xlat
jno
xor
sbb
js
lea
lret
imul
lds
and
cmp
jo
orl
clc
push
pushf
adc
add
mov
jne
inc
mov
in
pop
scas
push
xor
sub
cmpsb
inc
pop
imul
mov
loop
xchg
xor
pop
mov
aam
add
cmp
je
pop
outsl
gs
and
pop
push
add
leave
mov
aas
jecxz
jge
push
xchg
pop
ficompl
loope
mov
sub
lret
jb
in
lds
or
xchg
pusha
shl
mov
sbb
insb
adc
mov
test
add
adcl
loope
sub
jno
dec
scas
sbb
push
lea
add
mov
mov
mov
outsl
sbb
bound
inc
or
outsl
daa
int
lcall
ret
inc
sbb
leave
jmp
mov
mov
scas
sar
je
add
into
daa
add
mov
and
mov
xor
sahf
xchg
push
shll
pop
or
and
lcall
jmp
jmp
xor
ret
movl
mov
pusha
enter
cmp
pop
pop
pop
adcl
cmc
sbbl
jnp
jb
inc
int3
pop
mov
sarl
dec
scas
add
cld
loope
mov
xor
aaa
repnz
mov
stc
fst
leave
lea
cltd
int3
mov
outsb
ljmp
scas
cmp
sub
outsb
mov
push
push
mov
xor
pop
sub
mov
rcll
xchg
mov
insb
and
pushf
add
and
mov
mov
stc
mov
and
call
push
movsl
sbb
sbbl
mov
scas
mov
adc
sbb
add
inc
sub
pop
cmc
add
inc
mov
cmpsb
xchg
mov
pop
add
inc
dec
jecxz
lock
cmc
fs
dec
mov
enter
adc
cld
or
lcall
aam
sbb
leave
je
mov
cmp
iret
push
shr
rclb
xchg
pop
enter
ds
stos
push
shll
std
mov
stc
cmp
scas
das
mov
add
cmp
sahf
sub
jmp
push
mov
sub
mov
pusha
and
dec
pop
inc
xor
push
lods
rcl
or
pop
les
lock
mov
aaa
or
stos
loopne
and
rclb
cmpl
loopne
stc
aad
out
aaa
push
pop
cmp
lds
xor
mov
daa
cmp
pop
jp
adc
pop
rcrb
out
bt
add
mov
cmp
popf
mov
into
adc
or
shrb
loopne
in
scas
jae
in
and
push
inc
xchg
inc
adc
fdiv
lods
outsl
into
mov
lea
pop
mov
inc
stos
aaa
lods
xchg
inc
and
fsubrs
addr16
sti
fisubrl
push
adc
or
push
pop
adc
ficomps
les
inc
pop
out
inc
pop
push
leave
adc
or
subl
pop
mov
and
leave
add
mov
cli
lea
lock
les
xchg
test
cmp
dec
cmpsl
cmp
jno
inc
ljmp
add
push
xor
mov
push
dec
sub
pop
xor
bound
dec
jae
xor
imul
in
pusha
cwtl
jmp
dec
pop
cmp
inc
mov
scas
pop
les
mov
mov
or
adc
lock
jmp
out
add
or
push
loopne
call
xchg
cli
aad
incl
adc
ja
lcall
xchg
sub
dec
imul
das
or
add
dec
loopne
inc
call
rcrb
sahf
cmc
fsubrl
cmpsb
xchg
xor
jp
mov
out
ja
jne
mov
aaa
lret
xor
cmp
jp
fiadds
sub
push
add
sbb
popf
or
push
inc
js
sarb
push
mov
or
xchg
cmpsl
inc
in
out
mov
xchg
dec
popf
sub
cmc
xchg
lret
push
idivb
test
outsb
inc
cmp
repz
inc
mov
arpl
icebp
mov
mov
pop
jl
orl
fsubl
lods
movsb
js
mov
and
testl
lods
cli
mov
cmp
mov
pusha
or
sub
loope
dec
insb
outsl
jg
jb
sbb
ss
jo
xchg
pop
pop
out
das
push
jb
sub
out
sbb
and
sarl
mov
xlat
stos
jo
xchg
lods
popf
lods
dec
out
and
jno
inc
cld
and
mov
aaa
mov
sbb
in
aas
loop
mov
outsl
mov
mov
and
test
sub
push
xor
or
popa
addr16
jne
into
shrb
mov
rcrl
hlt
insl
inc
pop
mov
fnclex
mov
cmp
and
sbb
mov
loop
xchg
cmpsb
mov
pop
lock
cmp
repnz
dec
mov
push
shll
stc
popa
xchg
push
push
loopne
in
addr16
rcr
shlb
ud0
aam
pop
xchg
hlt
jno
movsl
cmp
push
sub
scas
lods
pop
xor
sub
shlb
pop
pushf
mov
stos
cmp
das
jo
call
adc
popa
or
call
mov
repz
jnp
into
xchg
imul
cmp
idivb
or
push
clc
and
movsl
sub
mov
jbe
aas
pop
adc
adc
sbb
dec
sbb
push
lea
mov
cmp
sahf
lods
and
adc
gs
jne
inc
adc
out
rolb
test
pop
insb
dec
les
addr16
or
inc
aas
mov
cmc
lcall
push
mov
sbb
data16
bound
pop
ficompl
sbb
loop
xor
jno
fisubrs
aad
rolb
enter
scas
lcall
xchg
inc
ds
inc
xchg
push
add
fs
popa
out
cli
enter
or
jne
jnp
cmp
scas
sbb
sti
push
pop
pop
outsl
sbb
insb
dec
mov
mov
or
push
pop
pop
sbb
arpl
cli
movsb
scas
out
xchg
std
cs
mov
inc
push
cwtl
rclb
fwait
loop,pt
jno
pop
mov
ror
ret
mov
mov
test
sbb
mov
cmp
mov
testl
imul
aam
adc
mov
push
mov
and
jecxz
dec
jne
add
popa
inc
xor
xorb
das
mov
jns
push
ficoms
loope
iret
xchg
stos
jg
push
in
hlt
mov
hlt
cmc
nop
mov
call
xor
repnz
sbb
or
mov
inc
mov
mov
mov
movsl
mov
add
mov
xchg
xchg
sbb
xor
xchg
push
cwtl
enter
hlt
addl
call
stos
sahf
int
pusha
test
jecxz
adc
mov
daa
xor
call
mov
or
sahf
mov
roll
ljmp
aaa
hlt
mov
or
dec
cmp
inc
add
cmp
rolb
pop
inc
lock
or
stc
in
xchg
out
pop
cli
inc
mov
in
and
mov
ret
sbb
xlat
inc
or
pushf
cli
inc
adcb
scas
orl
popa
lcall
sub
loop
je
imul
inc
and
in
push
jb
insl
inc
sub
mov
mov
aam
pop
pop
testb
sub
ret
dec
imul
and
add
rol
gs
mov
add
jno
sahf
mov
mov
push
pop
or
imul
loopne
arpl
inc
popa
cs
dec
scas
fstl
mov
sbbl
mov
ja
pushf
hlt
addb
mov
movsb
xor
mov
mov
sahf
lret
xor
push
add
mov
adc
mov
mov
mov
js
das
outsb
scas
or
mov
push
adc
sub
lods
push
lcall
or
pop
jp
dec
rorl
scas
dec
cmp
loopne
adc
test
bound
sar
sahf
addr16
xlat
nop
push
fiaddl
loop
ret
testb
aad
and
dec
dec
xchg
test
cli
clc
mov
shl
push
dec
cltd
xor
jno
ret
add
cs
pushf
xchg
dec
xor
jne
mov
push
dec
add
inc
das
adc
lcall
cmp
or
daa
pminub
lret
fs
push
cli
je
or
fdivs
es
push
sbb
jne
inc
add
test
adc
rorb
fldt
adc
mov
sbbl
fidivrl
sbb
rol
push
or
mov
and
mov
jecxz
cwtl
lret
mov
sbb
xchg
mov
ja
push
out
dec
daa
sti
sub
jb
mov
or
push
xchg
pop
cmc
es
pop
scas
xor
shrb
inc
add
imul
adc
hlt
rcl
movsb
push
fisubrs
sbb
mov
dec
iret
es
jmp
push
pushf
add
cmp
mov
arpl
pop
lea
and
test
iret
shr
fcoms
loop
mov
xchg
adc
sarb
and
ret
mov
mov
pop
jecxz
mov
fsub
xchg
add
test
xchg
mov
je
sub
mov
in
cmpsb
mov
les
fadds
subl
cmc
repz
lock
pop
cmp
and
mov
sub
xchg
add
roll
jmp
adc
jle
in
xchg
js
cmp
mov
mov
les
cmp
popa
pop
dec
cli
xor
add
xor
fistl
add
add
test
loope
jo
add
jbe
cld
dec
das
rcr
xor
cmpsb
lret
add
adc
clc
xor
in
sti
fildl
popa
ret
jp
inc
icebp
mov
add
fs
inc
cmovg
shrb
lea
xor
test
mov
jmp
mov
cmc
sbb
lcall
xorl
dec
sbb
out
sbb
fs
and
or
push
sbb
or
mov
jo
lret
xchg
incb
cwtl
cmp
jnp
addl
cltd
and
stos
imul
xchg
mov
int
cmp
ret
test
push
aam
ja
pop
or
sub
cmp
push
jae
call
pop
or
in
mov
icebp
in
lods
xlat
dec
shll
fdivrp
pop
cltd
adc
loope
dec
xor
loope
divl
and
sub
jmp
mov
inc
fistpll
ffree
movsb
mov
push
out
pop
bound
fdivs
mov
inc
or
dec
bound
fildll
mov
das
mov
sub
and
movsl
call
clc
test
mov
rorl
xor
xchg
sbb
fwait
inc
add
add
into
hlt
ficompl
xchg
popl
add
mov
sub
mov
mov
sahf
ds
loopne
xor
cmp
cli
inc
xchg
mov
and
lods
js
jnp
ljmp
repz
dec
jmp
mov
cs
ret
sub
lret
inc
xchg
vpcmpgtb
pop
aas
hlt
repz
push
adc
ficompl
mov
jno
rorb
sub
mov
sbb
leave
xchg
push
mov
jecxz
ss
mov
mov
mov
cmpsb
pusha
adc
int3
mov
hlt
shlb
cmp
mov
push
daa
pop
xchg
shrb
and
adc
dec
sbb
es
insb
xlat
push
cmp
xchg
push
adcl
xor
lods
ljmp
fsubrl
jg
add
icebp
adc
or
mov
mov
icebp
sbb
xor
jo
jne
dec
xor
insl
es
test
leave
nop
push
in
clc
inc
sub
out
enter
mov
pop
in
pop
pop
cmp
jnp
daa
inc
mov
push
jle
xchg
push
lods
dec
fwait
mov
push
inc
push
dec
ret
jge
dec
inc
jmp
or
les
addr16
pop
stc
outsb
push
mov
and
lret
dec
inc
sub
insl
jmp
int3
xor
sub
mov
push
mov
das
stos
or
loopne,pt
xchg
mov
push
stc
stos
scas
cmpb
inc
lcall
dec
scas
dec
sub
scas
adc
movsb
mov
jnp
test
cmp
fcomps
push
out
dec
inc
cltd
push
cmp
jno
adc
enter
out
mov
repnz
inc
sbb
outsl
ret
mov
fadd
mov
and
das
fcompl
jae
test
inc
sub
inc
movsl
sbb
imul
push
and
xor
in
mov
jo
data16
testl
les
scas
fsubrs
pop
mov
cwtl
lock
cmpsb
mov
and
xor
pop
mov
stos
leave
ds
sub
mov
add
mov
mov
mov
push
mov
ret
lcall
cmpsb
sub
inc
jmp
icebp
mulb
mov
loopne
push
imul
and
ds
or
mov
inc
das
add
and
fdiv
test
ret
mov
cmp
dec
add
jo
push
fwait
mov
mov
shr
cwtl
xchg
out
dec
cmp
and
sahf
insl
xor
inc
adc
inc
add
iret
clc
aad
es
cmp
pusha
aas
sub
aad
and
inc
push
push
dec
add
sbb
les
or
dec
ret
cmp
in
ret
push
inc
xchg
jne
inc
and
jl
jno
leave
adc
pop
mov
mov
push
xor
xor
mov
sub
enter
cmp
clc
fisubrs
loope
in
mov
es
mov
ss
jae
leave
jb
jbe
pop
dec
pop
dec
mov
out
iret
gs
jle
jg
xchg
rorl
rclb
stc
adc
sub
sub
or
sbb
das
or
mov
dec
leave
int3
inc
push
fisttpl
arpl
cltd
mov
mov
cmp
push
mov
ret
lret
push
mov
inc
pop
jecxz
mov
mov
sub
repnz
outsb
std
add
mov
jle
loopne
push
sbbb
dec
jbe
ret
cld
cld
cmpsl
push
mov
sbb
loope
xchg
and
or
inc
dec
iret
cmpb
jmp
into
xchg
mov
je
pop
call
pushf
fisubl
fsubrs
sbb
imul
mov
push
cmc
fdivrs
lods
lods
lret
out
f2xm1
loop
mov
mov
cmp
jae
xlat
outsb
jl
pushf
xchg
or
insl
dec
pop
sbb
popa
xchg
mov
mov
or
bound
sbb
in
hlt
pop
stos
daa
outsl
inc
test
and
xor
pop
pop
stc
mov
stos
aas
mov
mov
insb
aam
cs
dec
dec
mov
test
inc
loope
jnp
xor
cwtl
add
mov
test
cmp
in
mov
call
ljmp
pop
repz
ss
arpl
outsb
shl
stos
sti
and
adc
js
nop
icebp
xor
adc
aam
pcmpeqb
psubusw
jae
loop
es
cmp
pop
test
cmp
inc
cwtl
pop
or
sbb
pop
pop
pop
lret
pop
pushf
jns
loop
jbe
or
inc
jne
js
sub
outsl
cli
add
imul
pop
out
dec
lea
pop
pop
lahf
mov
sbb
inc
dec
popf
add
shlb
setg
call
out
push
add
sahf
cmp
shl
int3
push
cmpb
es
fs
inc
or
int
mov
in
into
sahf
pusha
addr16
cld
cmp
lds
mov
js
hlt
mov
xchg
lret
or
jle
rorb
or
pop
inc
dec
dec
cmp
jle
rorb
repnz
mov
xor
push
push
jmp
ljmp
xchg
test
in
or
sbb
cli
cmc
push
pop
hlt
sbb
es
mov
shll
xchg
push
mov
mov
aas
adc
sbb
movsb
decb
pop
push
xchg
aas
pop
pop
loop
sbb
adc
pop
test
jl
sbbb
cli
stc
cmpsb
cmp
test
mov
sub
inc
mov
lock
jno
imul
add
dec
push
ds
dec
cmp
cwtl
clc
xchg
pop
push
cld
push
jo
sub
fdivrl
cmpsb
inc
iret
xlat
xorl
mov
into
shll
xlat
and
and
add
pushf
pop
mov
and
int
pop
add
dec
mov
pop
ss
call
jle
hlt
jmp
xor
adc
adc
add
cmpsl
daa
ds
mov
or
inc
mov
ljmp
inc
aam
neg
sub
test
mov
add
je
xchg
dec
pop
mov
adc
f2xm1
inc
dec
outsl
jns
mov
jp
lods
push
mov
push
shlb
add
in
pushf
adc
jae
adc
xchg
mov
call
xchg
mov
xor
movsl
push
insb
js
fsubrl
cwtl
push
fcmovnu
and
test
jo
mov
ret
jne
push
sysexit
inc
icebp
insl
mov
or
xchg
jl
inc
jne
sub
mov
cwtl
hlt
loop
jno
ror
add
adc
movsb
jmp
mov
in
cmp
dec
xchg
test
into
add
sar
rorl
jmp
ds
inc
jecxz
outsl
jge
mov
pop
sti
icebp
xchg
outsb
cli
cmpsl
sub
dec
movsb
inc
adc
xchg
icebp
test
adc
insl
mov
js
jl
imul
sub
repnz
rcrb
pop
pop
sbb
inc
xlat
int3
or
sarl
sbb
push
das
or
iret
adc
icebp
jno
ds
mov
push
adc
std
sub
rep
sub
fnstsw
push
scas
test
mov
mov
dec
les
rorl
pop
insb
dec
mov
cs
sbb
test
pop
test
jl
pop
mov
push
dec
pop
loopne
pop
js
aaa
cld
push
pushf
add
sbbl
mov
fsubp
fbld
hlt
dec
xchg
sub
arpl
pop
aad
lcall
ret
mov
lds
cmp
and
sarb
and
je
cmpsb
cmp
mov
and
mov
mov
sub
mov
shrb
dec
dec
bound
aam
lea
arpl
xor
leave
les
pop
push
jae
or
xor
jmp
pop
lock
popa
mov
scas
add
cltd
push
adc
xchg
or
ret
push
outsl
dec
addps
popf
inc
jbe
stos
push
in
mov
shlb
pop
and
pop
pop
mov
aam
inc
adc
fs
or
add
jmp
fldenv
or
mov
into
mov
loopne
movsb
je
out
sub
mov
xchg
aas
inc
clc
fdiv
mov
test
push
popa
ds
and
clc
jne
sbb
push
aad
adcb
imul
pop
loop
adcb
insl
push
pop
call
adc
push
push
popa
jno
loope
rorb
jnp
das
cmp
push
adc
xchg
and
or
cmpsb
lea
dec
and
ret
or
imul
out
stos
int3
add
sbb
test
adc
or
jbe
xchg
cmp
stos
dec
test
sbb
pusha
or
movsb
inc
mov
ds
push
inc
dec
and
mov
rcr
push
pop
inc
clc
cmp
xchg
push
mov
sub
aam
inc
mov
js
loop
mov
fstpl
mov
adc
ret
test
loopne
xor
sbb
into
cmp
mov
cmpsb
gs
in
pop
out
incl
hlt
and
push
or
dec
loope
es
ss
pop
fld
xchg
loop
or
outsb
test
adc
dec
mov
hlt
sbb
jmp
pop
repz
mov
adc
sbb
jbe
jnp
rclb
loopne
xchg
mov
inc
jb
adcl
hlt
sbb
mov
xor
fildl
add
lods
ret
fdivrp
loope
rcrb
cmp
or
sub
xor
mov
pushf
hlt
orl
cs
jo
int3
popf
xchg
jnp
sbb
sahf
xchg
mov
and
mov
icebp
adc
adc
xor
inc
iret
jo
xchg
js
mov
cmp
sbb
adc
xor
loope
adc
mov
movsl
call
dec
mov
pop
lret
ljmp
jo
cwtl
inc
pop
lret
sub
sbb
imul
jl
mov
mov
jae
pop
add
pop
aas
loopne
or
sbb
sbb
xor
mov
add
add
add
ret
aam
test
out
add
jle
mov
mov
pop
dec
push
bound
mov
mov
dec
push
push
or
call
xor
fiaddl
mov
push
mov
mov
inc
xor
lods
pop
fstpl
push
mov
mov
push
insl
cld
shrl
test
fimull
sub
shll
xchg
add
sbb
sub
xorl
or
and
addr16
mov
sub
insb
es
push
setns
sbb
mov
push
call
jae
iret
cmp
jle
mov
lea
mov
pushf
mov
inc
cs
js
inc
pop
mov
roll
push
rcrb
sbb
or
cmp
push
test
imul
dec
push
test
pop
and
mov
sub
mov
cs
mov
xor
mov
push
ret
mov
sahf
dec
mov
and
push
xor
push
outsb
inc
cmp
dec
xchg
xchg
or
mov
loop
test
inc
mov
or
popl
fistpl
in
jns
shlb
or
movsl
in
cmpsb
dec
loop
pop
sahf
shr
lahf
shrb
movntq
aaa
iret
mov
fs
lcall
shrl
pop
pop
loop
cmc
jp
shll
loop
test
sub
hlt
sub
dec
pop
dec
nop
jp
xor
push
lods
mov
adc
cld
xchg
xor
xchg
test
mov
stc
push
add
push
push
sarl
xor
ss
popa
mov
clc
pop
hlt
es
mov
xlat
add
push
adcb
or
adc
popa
sti
pusha
mov
out
and
xor
jno
cmp
je
dec
jb
pop
cmpsb
stos
xchg
add
xchg
lods
jne
push
dec
dec
test
push
orb
add
cmp
cli
pop
xlat
jbe
and
rorb
les
aaa
jl
cli
sbb
lret
scas
neg
add
mov
lahf
mov
or
push
mov
loope
enter
push
jno
mov
sub
gs
pop
mov
dec
pop
xchg
mov
icebp
call
push
sub
pop
xor
xor
xor
dec
ljmp
jge
cli
lret
mov
inc
je
push
ds
enter
xor
fildll
push
lahf
sbb
pushl
jae
inc
sti
nop
or
mov
add
lods
add
push
dec
cmc
cmp
in
sbb
fisubrs
push
fs
add
mov
dec
xchg
pop
jge
into
jle
push
fsubrs
test
in
xchg
push
in
pop
ficoml
int
mov
lahf
mov
sbb
scas
xchg
sbb
sti
movsb
mov
cmc
decl
lock
sbb
loope
push
das
sbb
hlt
add
lahf
mov
pop
out
enter
ds
fsubs
xor
cmp
or
js
cwtl
aam
xchg
les
dec
pop
or
and
push
sbb
pop
call
enter
or
inc
add
and
and
mov
je
outsl
sub
adc
subl
rcrb
out
adc
nop
cmp
mov
sub
roll
sahf
or
cmc
dec
mov
mov
jg
xchg
push
mov
rcl
je
add
inc
xor
fiaddl
push
cli
add
push
or
outsb
inc
pusha
push
mov
imul
push
pop
add
jo
test
movlps
lods
mul
gs
lods
rorl
neg
mov
fdivl
pop
jp
stos
cld
inc
xchg
push
in
adc
inc
call
sub
and
or
out
loop
insb
xor
jbe
mov
addl
mov
lock
repz
ret
push
inc
sbb
xchg
sbb
mov
mov
lret
frstor
adc
dec
dec
je
push
mov
repnz
or
jl
imul
loopne
addb
aaa
jl
xor
arpl
int3
orl
lock
jle
dec
mov
inc
and
push
in
test
add
fistpl
in
fwait
rol
lds
scas
rcrl
movsb
mov
into
mov
and
inc
ret
push
inc
roll
sete
lods
int
push
in
loopne
adc
and
mov
xorb
fmulp
imul
sbb
cwtl
rcr
ja
adc
mov
jo
shrb
mov
inc
test
sub
push
push
fistl
lock
push
or
mov
ja
dec
pop
jne
loop
lock
imul
push
popf
pop
roll
mov
cmpsl
hlt
jl
push
adc
or
shlb
lods
shll
dec
cmp
cmp
ret
jmp
jbe
inc
xor
ljmp
cld
jp
xor
add
shlb
dec
pop
sub
leave
test
xor
movsb
xor
rclb
call
ss
movsl
js
add
out
cmpb
jne
jl
sbb
add
gs
andl
ss
cs
test
dec
aaa
pushf
mov
adc
daa
mov
lcall
xchg
xor
in
sub
push
test
fildll
mov
inc
jnp
cmp
mov
insb
orb
aaa
pushf
lds
sahf
mov
outsl
mov
testl
add
rcl
std
mov
jg
bound
out
out
mov
xor
orb
hlt
stos
sub
scas
pop
push
mov
jle
xchg
push
pop
ds
insb
cmp
mov
jbe
arpl
jno
xchg
movsl
pop
lcall
pop
andb
lock
jno
scas
pop
add
cld
imul
pop
mov
lahf
jmp
or
adcl
movsl
movsb
mov
sbb
xchg
push
sarl
sbb
subb
xchg
jge
fnsave
aaa
jmp
enter
call
nop
inc
sub
rcr
add
pop
aaa
mov
mov
loopne
testl
cmp
jmp
and
inc
mov
mov
in
adc
mov
stos
std
push
xchg
xchg
dec
cli
jae
loop
stos
mov
mov
cmp
fnstenv
jbe
out
outsl
cmp
loop
add
test
sub
mov
jl
dec
xor
sbbb
adc
jle
fwait
repz
in
scas
sbb
adc
ret
and
or
ret
or
ret
sahf
push
pop
jp
movsl
push
fistpl
push
je
test
mov
aad
add
scas
ljmp
push
inc
sub
popa
xor
stos
or
and
dec
mov
sub
jo
add
jge
jp
add
lock
lds
sub
loopne
and
shrb
mov
dec
out
cmpsl
xchg
fsts
subb
mov
inc
in
sahf
out
stos
mov
out
jns
insl
lcall
push
imul
mov
mov
cld
cmp
pop
insl
lds
adc
mov
inc
sahf
aaa
mov
fs
insl
jnp
or
cmp
xor
inc
cmp
jb
f2xm1
ret
pusha
fs
ds
cltd
arpl
mov
jp
clc
mov
imul
jp
push
mov
rolb
xchg
sub
shr
adc
out
inc
insb
repz
imul
pop
lods
sbb
sbb
scas
inc
arpl
mov
mov
cmp
push
sbb
inc
and
xor
xchg
mov
test
lcall
mov
pushl
test
call
ljmp
inc
xor
popa
call
mov
jg
rcl
pop
je
mov
pusha
shlb
ss
fcomps
daa
or
inc
jbe
or
mov
dec
mov
stos
fisttpl
xchg
shr
inc
adc
sahf
test
push
pop
out
mov
mov
inc
xor
pop
push
dec
and
sbbl
push
adc
das
sbb
scas
mov
mov
scas
rcll
xor
and
fs
in
fld
xlat
dec
std
cmp
fwait
in
jno
add
add
sub
lret
sub
les
push
inc
aaa
mov
adc
hlt
mov
jge
pop
pop
ja
notl
or
cmp
cmc
jl
sub
sbb
inc
or
cld
mov
incb
jbe
add
jg
loopne
rol
mov
sbb
or
cltd
ss
js
and
cmpsl
cmp
outsb
or
add
test
push
je
ljmp
or
fimuls
push
rorb
mov
sbb
out
cmpb
jb
lret
mov
mov
sbb
mov
pop
bound
repz
jmp
push
movsl
in
or
pushw
sti
cmp
clc
add
pusha
push
add
stos
bound
out
or
inc
aad
and
leave
ds
jge
push
pop
dec
mov
adc
call
push
sbb
sub
daa
mov
mov
push
js
outsb
cwtl
call
mov
push
out
in
sub
test
mov
pop
push
jmp
loop
pop
aam
mov
loop
icebp
cmc
jbe
cmp
cltd
cmp
dec
andb
inc
jae
jne
push
nop
mov
pop
adc
out
cmp
es
loopne
adc
fisubrl
enter
dec
rclb
sbb
push
fbld
xor
adc
gs
inc
jns
adc
outsb
ret
xchg
sbb
sub
push
lcall
adc
clc
mov
pop
pushl
xchg
add
shr
pop
icebp
adc
jge
add
jno
out
cwtl
adc
pop
or
fisubrs
cltd
outsb
inc
pop
push
or
testb
shlb
sbb
cmp
push
jbe
das
mov
inc
hlt
jecxz
mov
sbb
insb
cld
xchg
and
or
cmpsb
sub
sub
inc
add
sub
or
test
lcall
mov
in
sbb
add
mov
add
add
cmp
or
sahf
push
mov
sub
adcb
mov
jle
cmp
daa
js
xor
xchg
ret
adc
mov
inc
dec
fstpl
fwait
lds
mov
insb
mov
jns
sbb
imul
ror
push
xchg
mov
cmp
pusha
frstor
pop
fneni(8087
and
das
and
mov
cld
push
es
jle
inc
pop
popa
lods
mov
ja
orl
push
mov
in
das
push
imul
inc
pavgb
adc
inc
cmp
cmp
getsec
sbbl
cmp
cli
sub
incb
insb
in
sub
xchg
xchg
jo
mov
jecxz
test
lcall
ljmp
in
test
push
cld
dec
push
popf
xchg
inc
mov
outsb
popa
mov
nop
push
popa
daa
adc
sbb
lcall
inc
pusha
xor
mov
mov
call
out
pop
add
jle
jb
clc
sub
pop
clc
clc
push
dec
add
mov
mov
clc
jmp
lcall
fwait
aad
sub
cltd
xchg
jo
mov
add
rcrb
mov
cld
xor
xchg
cmp
jg
push
mov
arpl
hlt
imul
or
je
fwait
cmpsb
mov
repnz
mov
dec
jp
mov
push
and
sub
fldcw
pop
xchg
jp
popa
xadd
fadds
push
jno
mov
sbb
insb
hlt
jae
loope
push
test
sbb
jo
test
das
jl
hlt
dec
ret
ret
fs
push
cmp
dec
arpl
fdivs
fldz
pop
xor
into
loope
adc
inc
imul
jl
clc
adc
lds
and
sub
pop
jb
mov
daa
shlb
sub
pop
es
scas
add
aas
sub
pop
rcr
bound
push
inc
jae
out
push
adc
cld
xor
int3
repnz
mov
cmp
test
int3
dec
fwait
pop
rcl
add
js
cmp
test
adc
lret
ret
cli
rcll
pop
clc
das
outsl
dec
ret
jb
xchg
mov
push
xchg
and
dec
loope
jmp
add
mov
insl
setg
cmp
adc
cmp
cmp
dec
jl
cmpb
jle
cltd
adc
pop
mov
nop
decl
loope
mov
fcompl
inc
andb
push
add
push
push
push
je
daa
jne
add
je
jg
mov
in
popf
int3
bound
pop
jp
leave
push
mov
cwtl
imul
pop
mov
in
xor
lods
jl
fdivrl
dec
add
xor
add
sti
push
cmp
sti
and
loop
sub
outsl
lcall
stos
loopne
enter
xor
and
mov
mov
push
sub
iret
lods
je
xlat
push
rcrb
jg
js
or
inc
popf
sbb
jne
jb
aam
sahf
pop
bnd
addr16
aam
cmp
jmp
adc
xchg
mov
std
adc
pop
les
sbb
inc
inc
movsl
add
arpl
fistpl
pop
in
xor
or
daa
scas
cwtl
cmp
mov
and
sub
js
xor
pop
das
adc
loopne
scas
ror
aad
mov
fimuls
stos
cmc
inc
fbstp
xor
or
filds
fwait
sbb
jbe
inc
loope
jo
inc
inc
mov
inc
or
mov
inc
pop
aam
pushf
push
mov
or
adc
or
lock
lcall
les
faddl
cwtl
aam
orl
push
push
fadds
push
push
mov
scas
mov
cmp
mov
and
es
sti
mov
wbinvd
imul
cmpsl
out
notl
in
decl
popa
push
sbb
sbb
fs
ja
aad
inc
pop
or
add
mov
lahf
stos
loop
mov
clc
and
add
mov
push
imul
pop
and
pop
pcmpeqw
imul
pop
inc
sbb
sub
add
jecxz
or
sbb
movsl
inc
out
mov
cs
cmpsb
cmp
cld
add
mov
xor
decb
pop
je
cs
inc
test
cld
xchg
push
enter
outsb
mov
std
mov
loope
nop
std
hlt
scas
jns
pop
mov
and
cmpsb
inc
cmp
mov
sub
mov
inc
mov
pop
aas
lcall
pushf
iret
push
cmp
push
mov
imull
lcall
ljmp
jp
bsr
stos
inc
in
mov
decl
roll
add
sbb
ret
add
outsl
ja
sbb
jmp
daa
mov
mov
repz
aam
or
push
pushf
out
call
push
sub
daa
test
mov
arpl
mov
in
cld
sub
jl
xchg
loope
jae
jp
or
dec
sti
mov
sub
and
sahf
lods
aaa
push
cmpsl
jmp
in
xchg
push
xchg
pop
inc
push
scas
lret
lcall
xchg
scas
addr16
mov
sbb
cltd
mov
lods
adc
jmp
pusha
or
push
and
cmp
hlt
test
inc
ljmp
in
xchg
mov
inc
xor
adc
xchg
scas
mov
or
jecxz
outsb
sti
push
pusha
mov
out
or
sub
movsb
insb
xchg
test
add
insl
push
iret
popf
lcall
or
ret
sbb
stos
mov
jp
sahf
shlb
inc
das
sbb
test
ds
call
push
test
jmp
pusha
daa
push
xchg
aaa
ret
sbb
push
xchg
add
arpl
dec
jno
in
push
sbb
mov
inc
insl
xlat
dec
ret
call
dec
add
lock
push
loope
scas
decb
mov
fcomi
jo
aas
lea
mov
add
jmp
lock
cmc
or
push
jbe
sub
mov
sbb
divl
adc
xchg
out
loop
xchg
rcrb
jno
cmpsb
or
xor
add
push
in
jnp
je
inc
cli
js
cwtl
cmp
lods
int3
sbb
dec
xchg
clc
call
neg
fs
or
andl
shll
enter
dec
cmp
sbb
pop
pop
popf
shl
lret
scas
inc
bound
lock
fdivrl
sbb
xor
and
mov
dec
push
mov
xor
sahf
dec
mov
fcoml
mov
lcall
cmp
mov
popf
or
fiadds
js
imul
jl
push
inc
adc
out
inc
push
in
pop
and
mov
adc
pop
push
insb
push
push
lds
mov
add
in
fcmovnb
clc
cmc
imul
sbb
pop
cmp
push
jne
inc
pop
xlat
popf
stos
push
fimuls
lret
push
cmp
add
sub
cmp
mov
add
push
fidivs
pop
inc
xor
adcb
je
arpl
cli
and
mov
sarb
cmp
or
fcoms
shll
bswap
mov
popl
ds
mov
xchg
test
add
shrb
xchg
mov
data16
popf
adc
sub
add
testb
dec
inc
sub
outsl
cltd
cmc
sub
jp
or
into
repz
sbb
nop
push
loop
adc
jae
add
fimuls
adc
imul
ja
dec
jmp
jns
js
je
outsb
xchg
hlt
lahf
dec
sbb
out
cmp
pop
mov
pop
lds
adc
outsb
popa
pop
mov
mov
inc
xor
hlt
popa
pop
xor
xchg
aas
and
mov
sti
pop
dec
lds
jbe
jo
test
sub
ret
outsl
add
sub
or
or
js
lcall
pop
pushf
jecxz
shll
or
push
insb
insb
and
push
sbb
out
or
mov
push
repz
in
and
add
sub
inc
jo
mov
mov
out
and
outsb
dec
in
mov
cld
dec
gs
out
std
or
je
iret
jmp
inc
mov
pop
inc
add
mov
xor
pop
stc
hlt
pop
fcompl
mov
out
std
fcomi
push
outsl
add
jp
add
into
arpl
repz
aam
cmpsl
test
xor
test
lcall
cmovg
inc
jecxz
jno
inc
or
mov
es
xlat
fsubrs
cmpsl
divps
outsb
leave
dec
pop
pop
lock
repz
addl
mov
xchg
mov
add
mov
bound
cmp
cmp
ret
aad
xchg
inc
scas
lea
pusha
das
lods
xchg
cmp
jne
xor
mov
add
test
pushf
jp
sub
insl
sub
or
xor
cs
mov
hlt
pop
sub
sti
scas
add
lds
xor
add
add
push
vpextrw
lds
cmp
xlat
imul
ss
jmp
ss
push
mov
or
jmp
addr16
imul
shll
xor
cmp
push
loop
test
in
cmc
jl
mov
fdivrp
sub
imul
loope
ret
inc
lock
sub
pop
roll
mov
sub
dec
push
and
or
jnp
es
test
and
and
into
es
sbb
out
mov
scas
inc
mov
mov
mov
push
or
inc
imul
or
fcmovnb
lds
enter
mov
or
nop
aaa
sbb
outsl
mov
push
cmp
imul
pop
and
das
mov
inc
sbb
frstor
inc
cli
rorb
or
shlb
xor
mov
jl
mov
add
add
push
out
in
add
call
cmp
outsb
mov
adc
fs
sub
ret
adc
test
cmc
push
movsb
ja
jns
repz
add
sbb
xchg
mov
mov
je
pop
pusha
sar
xor
mov
inc
js
div
cmc
sbb
addb
cs
inc
mov
inc
push
inc
insb
arpl
cltd
sti
sti
bnd
push
icebp
lea
lret
scas
popa
pusha
enter
ret
popa
std
mov
popf
jo
nop
mov
les
lds
out
mov
dec
fwait
mov
and
cmc
pop
push
sbb
movsl
sbbb
sbb
insl
mov
dec
xor
movsl
xchg
cmp
inc
dec
cmp
add
add
xorb
mov
push
loope
pop
cmp
cmpsb
pop
test
dec
pushf
xor
jnp
stc
fwait
mov
int
loopne
add
aas
lods
xchg
add
cmp
ja
xchg
jp
push
orb
bound
cmp
mull
mov
pop
dec
test
jae
mov
adc
push
enter
xchg
inc
push
inc
cmp
mov
ja
in
sub
push
xchg
cmp
cli
and
jmp
sbb
sub
leave
scas
pop
mov
mov
and
mov
ljmp
ret
push
xor
jb
add
bound
lea
icebp
jl
sbb
pushl
insb
pusha
or
sbb
jle
icebp
inc
dec
out
icebp
into
pop
rolb
jno
aam
cld
xchg
mov
xor
push
cmp
mov
popf
out
rep
jnp
shll
mov
int
jb
mov
mov
push
cwtl
inc
out
lods
sarb
jge
cmp
or
pop
lods
lahf
add
xor
cmc
sub
fsts
cmc
and
jg
jno
mov
mov
pop
push
icebp
loopne
test
rorl
inc
mov
subl
xor
imul
or
loop
daa
aam
test
push
and
js
test
pop
push
sub
jg
lds
push
pusha
jge
xchg
sti
mov
dec
adc
cmp
lea
mov
test
loopne
outsl
mov
int
das
inc
pop
out
xchg
ss
inc
jp
push
bound
mov
iret
pop
pop
rol
push
aad
jae
or
into
shr
xor
fcoms
jns
fs
lret
xchg
repz
jecxz
aad
mov
adc
and
inc
sbb
inc
icebp
inc
scas
adc
inc
sbb
cmpsl
jno
cmp
inc
add
jecxz
adc
std
or
add
push
mov
cmp
or
jbe
sub
cmp
setge
fidivrl
lea
ret
or
add
sub
test
push
adc
or
je
and
aad
aam
lds
pop
nop
pop
push
testb
cmpsb
or
xchg
inc
jns
push
or
xchg
rcl
fiadds
mov
push
dec
cwtl
stc
rol
cmpb
ret
push
mov
and
xchg
sub
or
movsl
stos
mov
mov
push
aam
pop
xchg
stos
daa
jmp
fidivrl
mov
adc
push
ja
cmp
add
aaa
xchg
clc
shl
add
stos
ljmp
lea
sub
and
mov
pusha
orb
sbb
or
xor
das
je
push
inc
into
stos
lcall
sbb
jnp
rcrl
ds
add
sub
add
sub
sti
imul
sbb
sbb
rolb
cmc
cmp
scas
imul
push
sub
pop
xchg
mov
jno
stos
icebp
inc
add
cmp
jecxz
push
inc
dec
xor
stos
and
jne
jp
sbbb
out
mov
lods
xor
mov
sbb
incl
icebp
push
xor
das
pop
adc
daa
out
inc
popf
orb
mov
mov
and
jmp
mov
inc
loop
dec
andl
mov
mov
pop
mov
aam
sbb
push
adc
sbb
das
js
mov
daa
shlb
dec
icebp
stos
add
pop
and
sbbb
dec
test
adc
je
icebp
ss
sbb
lods
push
or
hlt
ret
or
in
fwait
inc
hlt
inc
cmp
test
aas
cmp
shlb
stos
xlat
cmp
mov
repz
mov
mov
push
xlat
mov
ret
cld
cmpsb
push
leave
and
mov
sub
je
xchg
lock
mov
call
iret
pop
xor
inc
test
add
je
inc
cmp
cmp
sbb
add
cmp
xor
dec
or
mov
fsts
std
rcr
or
jge
popa
js
mov
hlt
int
loope
bound
sahf
pop
fnsave
mov
dec
rorb
xlat
icebp
mov
dec
adc
sub
sbb
fcmovnbe
shll
dec
sbb
fildl
or
and
sbb
sub
int
cmp
shrb
pop
scas
fs
pop
pop
das
jbe
dec
mov
ret
push
fisttps
stc
adc
pusha
clc
enter
lret
xchg
test
js
bound
mov
arpl
sbb
lahf
mov
cli
xor
mov
push
sbb
loopne
iret
sub
xchg
push
in
js
test
adc
loop
cmp
push
sahf
and
push
adc
sub
call
rolb
insl
xor
stos
mov
rep
enter
cmp
bound
mov
shlb
mov
ja
lea
int3
mov
or
lret
lock
xor
pusha
jo
xchg
mov
push
and
pop
push
sub
prefetch
das
lods
dec
aaa
mov
lods
sub
dec
icebp
jl
or
add
or
ret
jne
add
pop
cmpsl
jmp
loopne
add
push
and
es
stos
call
cmpsl
mov
incb
leave
push
xor
or
mov
mov
push
and
repz
add
or
call
popa
stos
lods
test
mov
sub
bound
js
dec
mov
inc
xchg
mov
cmpb
fisttpll
add
iret
dec
fwait
in
aaa
sbb
fyl2x
xchg
add
adc
fldl
mov
loope
add
dec
fs
sub
jg
ret
mov
xor
jecxz
outsl
mov
jns
loopne
cwtl
sbb
sarb
inc
and
pop
test
sbb
dec
jl
rorb
add
mov
rclb
sbb
sbb
leave
dec
inc
loopne
jmp
xor
xor
push
xor
mov
mov
xchg
cmpsb
pop
or
stos
pop
mov
addb
lahf
and
adc
int3
js
mov
dec
push
mov
lcall
arpl
mov
dec
add
xor
jp
xchg
pop
in
mov
bound
roll
inc
lods
jo
sbb
mov
fsubr
es
dec
fdivr
dec
push
sbb
stos
sub
dec
inc
cmp
in
sub
xchg
pop
sub
out
test
das
andb
test
rolb
rcrb
jae
pop
sbb
xor
fs
rcrl
jno
push
inc
daa
sub
jle
lea
xchg
adc
mov
idivb
cmp
movsl
rcr
sbb
push
add
pop
xchg
pop
and
sbb
lods
pop
cltd
popf
inc
push
sti
add
and
adc
icebp
stos
sub
jge
mov
dec
jb
js
outsb
in
mov
xchg
pop
add
cmpsl
sbb
push
cmp
mov
sub
push
adc
aas
mov
mov
insb
cld
cli
nop
enter
mov
jne
outsl
les
jp
pop
roll
jp
fwait
scas
lea
je
and
enter
inc
out
mov
pusha
jp
dec
ss
in
ss
and
rcrb
cmc
das
xchg
push
adc
pop
xor
aaa
jo
fnsave
pop
and
cmp
ret
pushf
jp
pop
inc
jl
int3
adc
jg
inc
pop
lcall
test
inc
aaa
sub
xor
rol
sbb
cld
add
rcll
push
inc
jl
adc
pop
inc
out
lcall
sub
cmp
xor
les
fiaddl
xor
loope
ljmp
adc
pop
jbe
jle
ljmp
pop
push
inc
sbb
jno
icebp
mov
xor
push
mov
ret
jns
rolb
and
inc
or
mov
mov
push
lds
dec
adc
sub
and
push
cmc
cmc
lods
js
cmp
inc
ret
mov
jnp
pushf
lds
sbb
mull
inc
ret
jns
gs
shl
pop
in
mov
add
add
xor
cmpsb
sbb
dec
xchg
scas
movsl
mov
int
mov
rcrb
dec
mov
dec
flds
repnz
js
add
out
inc
orb
mov
push
jns
or
push
jg
push
pop
jmp
fcom
rol
int
lods
cld
sbb
mov
js
sbb
fiaddl
or
push
sahf
data16
push
test
clc
jmp
jge
test
aaa
fcomp
imul
fs
mov
dec
lds
adc
aad
imul
das
pop
sbb
loopne
stos
ss
dec
pop
or
inc
addr16
cmp
push
pusha
pop
add
mov
insl
movsb
add
ficoml
scas
imul
mov
adc
loope
sub
sbb
mov
mov
rcll
sub
subb
and
cli
cmp
pop
sub
aam
mov
inc
pushf
push
mov
mov
out
cmp
or
js
jbe
dec
ret
ss
fs
adc
out
outsb
pushf
xchg
push
fs
adc
mov
stos
xchg
push
xor
addl
add
inc
or
pop
adc
inc
dec
pop
test
rcll
xchg
xlat
cmc
addb
fldl
test
jge
daa
lcall
and
dec
ror
xor
push
scas
xchg
mov
js
mov
xchg
scas
push
out
dec
xchg
pop
sti
adc
and
mov
add
stos
aam
loope
push
mov
std
dec
dec
dec
aad
in
push
and
fldenv
enter
loope
pop
fs
xchg
leave
mov
ss
and
imul
pop
dec
cmp
cld
mov
push
jbe
movsb
loopne
sub
jge
in
or
jecxz
add
stos
fidivs
pop
inc
cmpb
cmpsb
mov
sub
lds
es
jecxz
inc
and
nop
js
lea
or
iret
lods
push
pusha
xchg
jp
xor
add
jnp
aaa
loop
inc
inc
outsl
jmp
rcrb
add
sbb
fisubl
out
sub
pop
ss
jbe
xchg
aam
fldl
add
lahf
jmp
xchg
mov
insb
xor
add
movsb
push
cmp
jb
or
jmp
nop
in
push
push
test
sub
fnstsw
sbb
cmp
lock
mov
ret
xchg
adc
hlt
push
xchg
sub
pusha
daa
call
icebp
push
mov
fimull
aas
sbbb
xor
push
dec
movsb
subb
mov
fsubs
call
push
lds
push
add
jns
xchg
iret
sbb
lea
and
push
sub
adc
xlat
jge
push
lods
sete
in
ret
imul
xorb
pushf
loope
lret
sahf
xorb
int3
push
mov
fisttps
loopne
lea
pushf
and
push
sub
inc
mov
sbb
or
jns
stos
or
sbb
lods
dec
repnz
bnd
push
sub
pop
xchg
fwait
loopne
jmp
adc
test
je
loope
clc
mov
mov
mov
adc
cld
mov
xchg
xchg
push
dec
push
sub
adc
push
jp
cli
test
scas
rolb
xchg
gs
shlb
push
cli
in
mov
dec
sbb
leave
jmp
push
ret
jne
test
cmp
jno
mov
adc
inc
jno
leave
adc
lret
cwtl
push
xchg
loop
mov
out
in
mov
insl
aaa
ljmp
stc
mull
lahf
cmpsl
push
mov
pop
lcall
pop
fsts
stos
cmp
jbe
mov
icebp
push
jge
mov
cmc
adc
jne
icebp
mov
fsubs
fstpl
out
jg
sub
xchg
jo
movsl
dec
and
cmp
jne
aaa
inc
pop
xor
jmp
push
test
xchg
or
insl
orb
mov
xor
inc
add
orb
add
cmc
push
cmp
and
and
and
push
imul
jns
das
movsb
sahf
loopne
and
dec
push
icebp
lahf
cmpsb
les
cmc
pop
dec
jmp
cmpsb
mov
add
pop
inc
insb
xchg
stos
xor
add
pusha
push
inc
imul
mov
xor
lock
mov
hlt
loop
cmp
rcrl
xchg
loope
push
incl
sbb
inc
inc
dec
movsb
ret
push
rcl
mov
adc
mov
pop
out
daa
push
in
push
and
roll
fmuls
fists
stos
mov
adc
xor
hlt
cld
sahf
inc
scas
sbb
in
loopne
or
pop
outsl
mov
sbb
adc
dec
add
pop
insl
fwait
rorb
jne
and
sbbl
sub
popa
inc
or
pop
xchg
iret
sub
dec
mov
mov
inc
adc
mov
out
inc
xor
add
pop
cmpb
pop
jne
jne
les
mov
pop
ss
gs
adc
pop
lcall
cmpsl
pop
cwtl
sahf
push
scas
mov
cmp
insb
adc
push
rcrb
adc
lret
jecxz
push
mov
fsubrs
repz
movl
push
inc
cmc
or
cmp
sbb
cmpsl
iret
out
lcall
xor
std
scas
push
xorl
jge
mov
pop
in
sub
xor
pop
dec
ja
jmp
mov
add
inc
push
pop
cmc
nop
out
in
lods
inc
xchg
iret
nop
dec
mov
dec
mov
inc
dec
mov
rclb
ljmp
add
mov
mov
mov
rcll
jae
mov
xchg
sbb
sbb
pop
sahf
lock
lret
sub
ds
sub
lds
xchg
divl
mov
dec
aam
stos
mov
ret
shr
jge
jnp
lahf
pop
cmp
test
test
mov
pop
cli
jne
std
pop
cmp
pop
pushf
popl
lods
sub
sub
roll
cmp
mov
jbe
aas
sahf
imul
push
and
xor
or
pop
jb
jae
mov
sbb
sbb
ljmp
lret
pusha
add
jb
movsl
bound
xchg
jo
pop
stos
mov
call
lods
test
scas
rclb
or
jbe
pushf
sar
popf
in
inc
xor
jns
cmpsb
addr16
movsl
negl
push
pop
nop
adc
push
sbb
push
sbb
sub
ret
test
aas
cmp
or
lock
or
sub
xlat
mov
cmp
imul
add
testl
scas
les
ljmp
fistl
cmc
mov
mov
jo
pop
idivl
jge
cmpsl
mov
scas
lcall
out
mov
xchg
je
decb
out
pop
xor
sbb
pop
jne
pushw
cmp
outsl
or
mov
arpl
rcrb
in
andl
adc
fsubs
inc
mov
mov
mov
mov
push
or
and
dec
jg
dec
cmp
or
mov
pop
ret
and
ds
sbb
je
loopne
inc
cmp
jb
pop
sub
cld
leave
cmp
jp
mov
sbb
cmpsb
jmp
pop
cs
lock
sbb
cmc
mov
and
xchg
adc
mov
cmp
popa
in
ljmp
and
pop
dec
mov
cmp
xchg
jp
mov
test
test
inc
clc
cmc
cld
mov
andb
mov
lret
nop
pop
mov
cld
leave
push
fadds
daa
mov
cmp
xchg
mov
or
mov
xor
jo
inc
dec
jmp
int3
push
icebp
pop
scas
dec
mov
push
xchg
sbb
xor
sub
aad
pop
incl
sub
add
in
aaa
fstpt
lcall
jns
lods
sarb
add
mov
lods
jb
mov
jl
xorl
dec
or
loope
sbb
imull
test
fdivrp
cwtl
push
mov
enter
mov
faddl
mov
jl
roll
mov
and
mov
rorb
mov
enter
bound
cwtl
outsb
repnz
mov
adc
dec
mov
test
mov
inc
repnz
mov
mov
cwtl
sub
outsl
mov
inc
and
daa
icebp
mov
ss
test
dec
mov
cld
mov
shll
lds
dec
xchg
ljmp
int
jp
shr
cmp
or
sub
push
dec
mov
sbb
mov
shrb
sbb
dec
insl
jl
jo
daa
sbb
insl
sbbb
call
jmp
sbb
mov
idivb
xchg
cwtl
jecxz
popf
es
gs
iret
movsb
sahf
cmp
pop
mov
ficoml
xor
fimuls
sbb
inc
or
pop
mov
jp
inc
pop
pop
in
cmp
and
aam
out
mov
add
adc
in
xor
push
fidivs
jmp
sbb
and
inc
mov
je
jo
pop
or
sbb
push
jg
aad
fwait
mov
jg
cmp
subl
aaa
insb
mov
stos
push
test
lods
lock
fsub
sub
in
cmpsl
out
fwait
push
dec
call
lods
lods
mov
clc
mov
mov
inc
fisttpll
mov
lds
fwait
and
mov
jp
mov
or
jg
inc
js
dec
ret
add
cmc
loopne
dec
loopne
mov
adc
mov
cli
icebp
int
test
test
add
xchg
mov
pop
nop
pop
or
adc
ret
or
cli
ficoms
mov
cmp
call
push
sbb
dec
lds
cmp
xchg
or
cld
or
outsl
push
rcrb
cs
arpl
sbb
fidivrl
adc
xchg
dec
std
pop
and
xchg
mov
sub
pop
mov
pop
or
fdivrs
mov
add
adc
xchg
out
and
jg
pop
ss
push
cwtl
lock
sahf
dec
or
lock
pop
push
jo
fsubrs
stos
addb
mov
sbb
sbb
decb
fwait
xchg
sbb
push
pop
testl
xchg
out
mov
outsb
xchg
cltd
jp
sub
xor
fidivl
mov
and
aam
out
sbb
jmp
fbld
pop
sub
fisttps
shlb
testb
ret
pushf
cmpsl
loopne
pop
imul
jno
adc
in
push
js
jo
pop
push
inc
nop
es
lcall
xor
inc
lret
test
clc
xor
ss
push
fucomip
roll
xor
into
testb
push
jge
insb
jg
push
repnz
dec
jmp
mov
adc
loope
shll
sbb
add
outsb
ret
adc
pop
nop
jne
loop
hlt
push
orb
dec
movsl
dec
popf
insl
insl
xor
rclb
fs
jo
inc
movb
cmp
insl
mov
stos
stos
push
or
out
fdivrp
stos
insb
adc
dec
pushl
scas
add
nop
mov
dec
adc
call
xchg
cwtl
or
add
rcl
in
mov
push
testl
fs
fdivrl
cmp
or
loop
mov
mov
dec
popa
sbb
test
mov
cs
jmp
mov
mov
inc
movsb
mov
mov
jge
pop
mov
adc
adc
push
sbbb
or
adc
jecxz
test
cld
dec
push
adc
add
xor
fistpll
inc
xor
mov
dec
push
lods
shlb
or
out
cs
sub
sbb
call
stos
test
push
dec
call
sub
fwait
or
fs
mov
xchg
mov
rdmsr
ds
call
insl
mov
loope
pop
mov
dec
stos
sub
adc
lods
or
mov
sbb
push
jbe
pop
mov
sub
xor
cs
adc
in
insb
push
push
push
jge
push
dec
pop
cld
fisttpl
loopne
inc
mov
aad
and
cwtl
int3
aad
mov
mov
jecxz
insb
add
loope
adc
lods
jo
pop
cmp
push
sub
xor
mov
shrb
xor
or
push
mov
lock
dec
cs
mov
jae
shrb
sbb
jmp
cmp
jo
sub
int
scas
in
scas
and
popa
jge
test
push
jo
adc
lret
stos
int3
jge
popf
cmpb
loopne
jmp
dec
push
loopne
call
ss
or
fdivs
sub
ret
fcoml
cmp
sbb
loopne
jns
rol
pop
pop
aaa
mov
xchg
in
sub
lock
jnp
mov
shrb
loop
push
or
xor
sbb
fcoml
cmp
mov
inc
mov
adc
xlat
add
pop
aad
lock
push
push
cmp
xor
push
int3
and
adc
mov
pop
test
jb
scas
icebp
aad
push
sbb
fisubrs
ljmp
fisubrl
scas
inc
mov
jbe
lret
lods
cmpsl
popf
cld
sbb
pushf
push
fwait
mov
rol
mov
or
pusha
add
loopne
add
cmpsl
in
and
dec
push
int3
pop
test
and
push
xchg
or
mov
sub
mov
xor
or
mov
jne
inc
cmp
repz
sbb
bound
pop
ss
or
sub
sbb
call
fnstcw
ds
cmp
jle
loop
andb
mov
add
cli
push
aas
fwait
mov
cmp
dec
aam
ss
mov
addr16
fmull
mov
mov
fisttps
push
sbb
pop
mov
jl
sbb
mov
jae
lds
push
pop
std
movsl
dec
jno
mov
loop
adc
test
cmc
dec
jbe
inc
mov
xchg
ret
dec
fcom
aas
insb
sarl
and
sbb
imul
je
jae
cmp
xor
adc
bound
fidivrs
mov
mov
add
negb
jmp
sub
adc
mov
in
lock
mov
add
les
aam
mov
sub
cmp
xchg
mov
or
icebp
call
notb
jb
sbb
dec
clc
pop
fisubrl
cltd
pusha
mov
test
mov
xor
notb
jle
adc
and
pop
and
push
mov
push
fsubs
stos
loop
jo
mov
out
jecxz
mov
dec
mov
xor
xlat
xchg
lock
add
aam
and
mov
loopne
push
push
fcmove
push
ss
jg
mov
pop
sub
push
lds
push
mov
cmp
adc
mov
pop
inc
xor
and
fiaddl
pop
sbb
in
pushf
push
out
ss
mov
fldcw
xchg
jne
js
pop
hlt
sbb
pop
mov
ret
lahf
js
insl
cmpsw
bound
lahf
subb
cmp
loopne
adc
int3
out
or
rcrl
das
add
cmp
imulb
push
jle
scas
mov
mov
mov
pop
les
negl
popf
add
push
loope
repnz
xor
add
ficoms
cmp
in
jg
mov
cmp
test
js
mov
sub
adc
shr
add
andb
xchg
hlt
jne
add
cmp
cmp
jg
mov
ss
mov
ljmp
mov
daa
fmull
sub
push
mov
in
xor
mov
xor
lods
push
add
dec
dec
jp
ret
pop
or
sub
scas
and
incl
aad
es
dec
dec
cmp
jle
ljmp
dec
push
and
ficompl
sbb
push
mov
mov
insb
push
inc
repnz
insl
js
mov
jmp
or
or
lock
xlat
pop
gs
xchg
push
jp
lret
scas
adc
pusha
adc
in
jb
call
test
jp
mov
ds
call
sub
in
fsubrl
adc
mov
xor
sub
jns
inc
rol
nop
mov
push
shl
or
sub
xchg
pop
mov
sahf
jo
mov
sub
mov
in
dec
int3
shrl
mov
xor
nop
mov
daa
mov
test
fidivrl
sbb
push
shl
fildl
sub
pop
ljmp
ret
mov
mov
fs
iret
jle
add
or
test
jmp
push
or
pop
cmpsb
dec
jo
adc
aam
repnz
cmpsb
test
mov
adc
adcl
add
movsl
jmp
sbb
add
int3
imul
mov
push
sub
cmp
cs
push
cmp
enter
int
adc
jo
push
ret
lock
aas
jle
fcompl
js
nop
or
cld
inc
leave
lret
clc
mov
imul
icebp
cmpsb
pop
scas
mov
mov
pusha
sti
mov
inc
pop
pop
or
cltd
cmp
push
cmc
fsub
adc
or
mov
pop
mov
xlat
mov
push
add
mov
test
ficomps
sub
fildll
out
sub
cmpsb
cmove
jno
add
jl
push
aaa
rcr
add
aaa
fsubrp
mov
lahf
sbb
push
out
stc
cmp
xchg
addl
test
mov
mov
and
outsl
mov
scas
push
mov
push
sub
mov
dec
lea
add
clc
pop
pop
fwait
mov
loope
cli
dec
dec
movsl
or
cmp
clc
mov
xorb
les
mov
lock
sub
fcomps
sti
dec
outsl
push
hlt
in
sahf
or
daa
push
pop
loop
xchg
mov
fcoml
lret
leave
jl
inc
or
mov
aam
aam
or
ss
add
xchg
pop
cmpsb
xorb
movsb
loope
mov
inc
jnp
notb
mov
jle
call
inc
sbb
jp
scas
js
enter
test
stos
pop
or
cld
pop
shlb
sbb
movsl
int
lock
xor
pop
add
push
jmp
xchg
or
ret
lcall
dec
push
aas
loope
in
xchg
out
hlt
lock
or
aas
cmp
mov
lret
cli
push
push
mov
pop
call
pop
xlat
lcall
jle
push
jns
cld
add
pop
mov
arpl
out
into
mov
in
jo
fcomps
scas
out
lahf
xor
mov
fs
pop
jg
call
pop
pop
shl
rolb
out
lret
xchg
out
cmp
sbb
hlt
or
in
shlb
add
mov
xor
mov
sub
stos
es
jo
cmpl
xor
movb
fists
xchg
sbb
rcr
add
xchg
dec
fdiv
incl
lds
mov
clc
jle
add
icebp
push
xorl
or
xorl
xor
sarb
and
rol
xchg
in
mov
scas
jmpw
lods
je
bndldx
shlb
mov
xor
mov
xchg
push
xchg
andb
mov
pop
and
hlt
and
in
xor
ret
xchg
das
mov
adc
add
push
cmpl
add
insl
out
pop
and
add
jb
sbb
addr16
mov
mov
das
in
mov
cmp
and
cmc
jecxz
sbb
lods
ljmp
jmp
xor
or
imulb
inc
adc
lret
adc
mov
roll
or
cmp
test
mov
jnp
inc
add
inc
sub
cmp
sub
inc
in
mov
jb
test
lods
out
andl
mov
push
mov
pop
sub
bound
orl
add
sti
push
js
or
addr16
rcll
or
cmc
dec
nop
int3
or
pop
pop
clc
cli
test
add
push
roll
push
out
loopne
ret
dec
in
push
jbe
lds
adc
ret
lock
stc
inc
mov
daa
sub
pusha
je
test
test
fdivs
inc
and
inc
das
add
in
rclb
loop
pop
cmc
cmp
mov
and
pushl
push
es
add
pop
inc
and
jl
insl
incl
cmp
sbb
rep
or
pop
clc
aaa
mov
xorb
xchg
or
mov
push
popf
insb
xchg
jl
xor
push
into
out
cs
adc
mov
mov
into
jp
add
shrb
scas
jae
ljmp
std
sub
mov
insb
cmpsl
leave
push
add
mov
add
cs
filds
mov
inc
nop
ljmp
mov
loopne
fimull
outsb
mov
loop
pushf
jno
xchg
xchg
push
sbb
test
mov
push
mov
or
push
xor
popa
jns
xor
icebp
pushf
cwtl
push
ret
mov
adc
enter
call
sarb
xchg
test
inc
loop
and
mov
mov
data16
shll
js
dec
pusha
and
jbe
ja
push
or
push
xor
mov
pop
mov
dec
pop
mov
nop
pop
out
push
cmp
inc
aad
xchg
cld
out
mov
aaa
aas
cs
mov
cmp
pop
fldt
xchg
cmp
outsb
nop
push
jl
cmp
xchg
adc
jle
mov
mov
add
push
mov
push
cmp
cmpl
lds
add
xchg
push
enter
adcb
sarl
sbb
jnp
push
lea
xor
mov
loop
pop
jl
mov
lcall
sub
fcomps
sbb
add
mov
lds
sbb
outsl
or
decl
pop
pop
mov
dec
insb
mov
repnz
pushf
je
ljmp
pushf
cmpsb
push
adcb
mov
scas
jbe
loope
inc
add
xlat
andl
cmc
adcb
push
push
pop
inc
sbb
add
mov
out
push
fsubr
sub
rorb
popa
rcrl
pop
adc
or
cli
sbb
stc
lret
rcll
fildl
test
push
sbb
pop
rorb
fwait
nop
push
lea
cmp
repz
inc
dec
adc
jo
outsb
inc
insb
mov
and
mov
lret
andl
repnz
inc
xor
or
adc
imul
jo
popa
xor
inc
push
add
fimuls
mov
push
mov
insl
jo
aad
add
mov
sub
add
ja
or
sbb
outsb
cwtl
inc
push
or
shlb
outsl
adc
add
push
test
mov
adc
inc
jp
push
push
outsl
push
call
push
test
lahf
shll
jbe
or
dec
sub
inc
push
cmpb
outsb
cld
mov
stc
leave
fcompl
sbb
mov
loopne
add
pop
pop
shrl
aam
loope
enter
dec
pop
test
mov
push
stc
fadds
jl
mov
mov
lods
movb
mov
icebp
out
add
push
dec
dec
scas
mov
adc
imul
rorb
repnz
adc
in
xlat
mov
pop
or
push
inc
add
shlb
ficoms
call
adc
pop
mov
or
sub
jp
cld
adc
aad
push
adc
ljmp
sbb
sti
scas
xchg
add
ja
cltd
pop
aas
es
push
nop
dec
adc
addr16
inc
inc
adc
push
sub
lock
es
adc
jecxz
popa
dec
imul
movsl
xor
daa
mov
js
sub
in
mov
out
push
les
dec
inc
xchg
pop
push
add
ret
fs
std
push
sar
adc
jbe
xchg
add
dec
sbb
call
into
ret
pop
mov
mov
pop
mov
sub
push
stos
fisttpll
fstps
pop
jbe
leave
into
fs
cmp
in
xor
xorb
mov
inc
insb
mov
lock
sarb
mov
adc
inc
out
sahf
popa
mov
ficomps
pop
dec
push
or
jne
push
or
mov
fs
jl
mov
icebp
push
mov
loopne
dec
pop
mov
in
xor
mov
pushf
mov
push
pop
subb
or
jbe
mov
pop
aaa
mov
es
cwtl
stos
dec
jae
stc
sub
inc
mov
inc
or
test
or
push
loopne
mov
mov
xor
adc
clc
sub
or
add
dec
xlat
sbbb
loop
mov
sti
rorb
fcoms
sub
cwtl
mov
cmp
push
pop
pop
cmpsb
push
inc
pop
test
adc
mov
bound
mov
insb
outsl
add
mov
lea
lods
xor
cmc
loopne
mov
adcb
gs
cwtl
mov
ja
push
popw
add
cld
mov
xor
ja
out
xor
add
lea
sarb
inc
dec
mov
mov
mov
call
ret
xor
and
jmp
movsb
lds
push
fwait
mov
daa
sub
mov
dec
lods
add
mov
sub
lcall
sti
fs
mov
movsl
push
jmp
loope
jp
imul
cmpsl
cmp
add
sbb
pop
or
pusha
je
pop
mov
mov
sub
adc
mov
bnd
mov
and
rcl
push
cmp
adc
mov
jecxz
and
sbb
insl
mov
xchg
add
std
jns
jl
or
aas
push
jbe
adc
adc
pushl
add
dec
lea
inc
ljmp
jo
push
adc
push
mulb
cmc
push
adc
imul
xchg
xor
push
inc
sub
cmpsb
dec
sub
shrb
and
sbb
mov
loopne
mov
and
js
adc
lcall
inc
fstps
shrb
lahf
dec
les
hlt
loope
pop
mov
push
and
xchg
sbb
push
lods
push
test
cli
clc
out
inc
mov
lret
mov
push
sbbb
dec
xor
enter
inc
sahf
and
or
pop
loopne
pop
pop
xor
scas
push
push
pop
lahf
rclb
push
dec
mov
cmp
je
sub
js
sbb
inc
lods
js
mov
xor
lea
out
xor
jbe
mov
lret
pop
push
or
or
insl
shlb
add
mov
mov
mov
sbb
addb
ds
mov
jb
clc
pop
daa
xor
add
aas
or
dec
mov
pop
xor
jae
in
aam
sub
divb
pop
adc
cli
xchg
xchg
inc
mov
pop
out
fisubs
cmpsb
mov
inc
mov
and
sub
pop
or
push
sub
add
push
inc
or
loope
push
cwtl
xchg
cmpsl
cmpl
imul
pop
mov
movsl
ret
mov
cmp
fwait
test
jg
and
shlb
cltd
jle
das
dec
in
and
fisubs
shrl
movsl
mov
imul
xchg
movsb
jl
cs
sub
ds
jbe
mov
xor
push
mov
jge
in
or
xor
pusha
mov
mov
je
jge
test
aam
mov
push
movsb
adc
andb
inc
xchg
imul
pusha
sub
xchg
jo
xlat
mov
and
inc
mov
inc
or
adc
xor
mov
les
sub
and
add
fbld
dec
add
das
arpl
int
sbb
push
jl
in
cmp
scas
rol
pop
fs
push
call
std
std
sub
xorb
fs
ljmp
in
xor
inc
mov
icebp
xor
lret
mov
jnp
push
push
jbe
or
add
lcall
pop
test
ss
push
pop
inc
sar
mov
test
xchg
je
push
out
mov
cmp
add
lea
shll
lret
mov
push
adc
push
rcrl
jecxz
adc
xchg
js
lods
leave
jp
mov
or
mov
sub
adc
fstpt
xor
ja
daa
lahf
test
xchg
xchg
add
sbb
lret
mov
test
cmp
fldl
add
je
test
and
js
mov
jae
out
std
add
leave
mov
dec
repz
loop
sbb
aaa
add
lahf
xchg
outsl
or
sbb
je
ret
dec
jl
push
mov
bound
mov
or
mov
lcall
pop
dec
xchg
or
orl
xor
or
pop
and
insl
cmpsl
sbbl
and
add
adc
jge
jo
loope
push
test
not
dec
loop
dec
dec
iret
add
in
mov
sbb
movsl
add
add
sub
cmp
pop
in
roll
fdivrl
dec
xlat
push
daa
test
out
xchg
mov
ret
shll
lock
ja
adc
inc
dec
mov
mov
sbb
ss
sbb
mov
out
or
fists
loop
inc
leave
clc
xor
imulb
les
sbb
jbe
adc
push
shll
mov
leave
xor
jb
stos
pop
outsl
loope
and
or
andl
mov
cmp
mov
jb
mov
lahf
mov
push
popl
jp
outsb
or
popa
fisttpll
cmp
mov
es
addb
jge
pop
shrb
pop
cmc
push
scas
subb
adc
rorb
pop
jg
adc
adc
push
mov
dec
aad
imul
xor
or
outsl
push
rcrb
in
movsl
pop
xorb
jnp
stos
and
xchg
lock
add
rcrl
adc
sub
xor
xor
xchg
jg
lods
mov
aas
lds
push
scas
popa
and
jb
or
mov
inc
xlat
or
mov
xor
mov
and
jmp
sub
inc
dec
add
fs
and
sahf
xchg
cmp
dec
jmpw
jne
cmpsb
cmp
test
push
xor
lds
test
xchg
es
adc
lret
inc
and
sub
push
and
mov
mov
push
int3
lock
sub
adc
jl
push
cmc
push
stc
test
mov
xchg
andb
stos
das
mov
mov
popa
push
xchg
jle
add
mov
rol
pop
inc
push
cmp
cmc
ret
sbb
xlat
or
fistl
aam
cmp
and
rcll
faddp
or
sbb
movsb
inc
aam
sahf
out
mov
push
loope
push
ficomps
scas
cmp
repnz
shlb
cs
mov
adcl
cs
nop
pusha
pop
test
mov
jecxz
test
pop
inc
lret
fmuls
ja
repnz
popl
roll
push
mov
aad
outsl
push
push
dec
bound
lcall
ret
inc
cmp
ljmp
and
dec
xor
jmp
stos
dec
jecxz
scas
fcmovne
enter
push
jbe
push
push
cltd
mov
add
lea
mov
in
data16
and
mov
inc
scas
fwait
clc
push
nop
pushf
movsb
push
lods
and
mov
jmp
push
push
mov
jne
pop
fmul
xchg
jnp
mov
xorb
js
cwtl
push
xchg
test
push
xor
aaa
iret
shrb
sub
ret
sub
xor
dec
mov
and
push
into
mov
jge
dec
xchg
lret
adc
jmp
cmp
aas
xor
push
mov
loop
and
jno
jmp
arpl
outsb
jmp
mov
gs
or
mov
jp
cmp
icebp
cmp
sub
cmp
push
mov
movsb
movsl
push
ret
rorb
sti
inc
movsb
test
jo
push
aam
das
push
insl
or
outsl
adc
push
jo
scas
push
xchg
or
sbb
cmp
adc
fwait
inc
sub
mov
rolb
jmp
fidivs
sarb
cmp
push
sub
pop
jno
jae
mov
divl
lds
xor
jl
pop
pop
fwait
inc
sub
xchg
adc
mov
out
ret
insl
stos
push
imul
push
imul
in
jo
jne
jp
sbb
mov
adc
sbb
fwait
mov
push
add
dec
or
dec
aam
js
movsb
insl
ja
add
cltd
push
aad
in
jmp
imul
sbb
lcall
lds
popa
xchg
fdivs
negl
loop
mov
scas
hlt
loope
jnp
ss
sub
push
inc
fists
mov
ja
inc
adc
loope
sbb
test
inc
aam
outsb
jmp
jl
loope
sub
dec
clc
sbb
inc
adc
jmp
stos
jnp
jo
rcrl
add
aaa
roll
popa
repz
and
push
or
je
stos
iret
or
jg
fwait
movsb
enter
mov
sar
mov
cmp
jno
popf
mov
sbb
test
mov
jae
ret
and
pop
jg
loopne
mov
lods
sbb
daa
xchg
xchg
sub
xchg
mov
inc
xchg
jne
dec
pop
ret
xchg
mov
test
inc
add
dec
fstp
pop
xor
xchg
xor
dec
cmovbe
or
loope
mov
sti
sub
ret
push
cld
shll
push
cmp
adc
sub
inc
xchg
adc
pop
in
test
mov
push
loope
pusha
insl
adc
lea
fstl
in
mov
mov
xor
xor
xor
out
dec
fwait
inc
cmpsb
add
fldl2e
es
jb
jno
xchg
aam
incl
add
sbb
push
lock
jmp
data16
xor
xchg
jl
lds
inc
and
jo
jl
loopne
dec
jno
push
sub
and
mov
in
xchg
sbb
jns
std
mov
sbb
test
jge
mov
push
in
loope
jecxz
js
fwait
mov
sbbl
cmpsl
inc
fwait
popf
daa
test
test
xor
call
jge
push
mov
jb
mov
adc
lds
test
enter
cli
mov
dec
inc
push
in
pop
movsb
sbb
out
cmpb
mov
fcompl
pop
mov
adc
xchg
mov
popf
enter
push
pop
sahf
mov
push
dec
cmp
loop
cmp
rcl
jnp
lds
sbb
js
adc
cs
adc
les
mul
xchg
pop
ljmp
insb
and
outsl
into
iret
bound
cmp
in
push
aaa
loope
test
sub
fwait
imul
movb
mov
or
movsb
pop
mov
mov
mov
push
push
push
cld
addl
test
sti
sahf
cmovp
push
aaa
pusha
jg
adc
mov
mov
sbb
jl
outsb
pop
sbb
cmp
jle
adc
test
inc
aas
das
mov
mov
sbb
rorb
aam
inc
test
pop
inc
out
movsb
loopne
cmp
xor
pop
inc
adc
jae
in
push
cmp
fisubrl
sbb
loop
std
sbb
mov
add
jg
mov
imul
mov
push
leave
dec
cmp
push
add
mov
cmp
xor
mov
push
orb
and
jmp
out
pop
push
push
lea
or
jecxz
mov
sub
fisubrl
ret
loope
movsb
push
aad
jnp
lahf
mov
imul
fstl
int
push
inc
sahf
cmc
jo
pop
pop
divb
sbb
pop
add
sbb
out
push
outsl
loopne
arpl
ret
leave
lds
daa
add
add
addr16
push
sub
xor
cmpsl
mov
loop
jge
outsl
sbbl
loopne
lock
dec
jecxz
push
fildl
fcomps
push
cltd
loope
add
mov
icebp
aas
jl
lock
add
lds
dec
jmp
jle
insb
int
inc
jmp
jmp
fnsave
sbb
rcll
pop
sub
adc
lea
mov
fbstp
sub
clc
xchg
enter
cltd
data16
ja
cmpsl
dec
xchg
in
jno
out
es
xchg
leave
pop
adc
icebp
cmpsb
xor
and
mov
les
div
js
lods
add
jnp
nop
or
ds
test
aaa
movsl
lahf
lock
jns
lahf
mov
xchg
add
lea
push
rorb
adc
int
push
pop
pop
dec
lds
mov
gs
mov
jecxz
call
inc
jp
lods
or
xchg
mov
push
pushf
and
mov
lea
mov
ja
fdiv
xlat
movsb
out
test
fnsave
popa
mov
daa
jne
jb
or
inc
adc
push
dec
mov
cld
dec
jae
lods
jbe
xorl
mov
fwait
dec
decl
pop
pop
and
jl
lock
mov
rolb
push
cmp
sub
sbb
rclb
push
loopne
daa
lods
lcall
adcl
inc
xor
add
ljmp
iret
cmc
test
jb
xchg
pop
mov
fcmovbe
inc
mov
lea
cmc
or
xor
and
sbb
into
add
push
mov
mov
rcll
jo
mov
negb
std
jecxz
xchg
sbb
ja
xor
push
orb
add
adc
mov
loop
sbb
nop
push
xchg
fcom
pusha
cmp
xor
daa
hlt
lgs
int
fcompl
dec
cmp
rorb
add
insl
mov
sub
push
rclb
loop
mov
lahf
repz
add
ficompl
int3
adc
inc
aam
push
push
test
dec
std
and
addb
aas
insb
imul
stc
jmpw
das
jge,pt
lea
je
jge
mov
ljmp
inc
std
or
dec
jmp
test
xchg
movsl
psrad
cs
add
out
jo
mov
mov
adc
or
scas
pop
jp
sub
pop
or
into
mov
shrl
filds
push
adc
fnsave
flds
pop
mov
xchg
jg
cmpsb
out
xchg
lds
push
xchg
inc
sahf
lock
xchg
fcomps
jmp
imul
shl
dec
imul
inc
jmp
inc
inc
loopne
and
ret
ljmp
arpl
and
repnz
jg
roll
lock
fiaddl
lods
in
or
jle
in
sub
and
sub
mov
ljmp
adc
pop
dec
push
popf
rorl
add
xchg
sub
add
mov
packssdw
adc
aam
mov
jnp
out
lock
loopne
mov
icebp
lock
mov
imul
dec
loopne
dec
or
jbe
add
js
push
mov
cmp
push
fbld
mov
cmp
and
dec
mov
inc
sbb
mov
lods
mov
aam
nop
and
mov
loop
ds
lfs
jle
cwtl
rcrl
fistpl
pop
jo
shl
cmpb
insb
mov
bound
cwtl
or
rcrb
mov
cmp
adc
fwait
push
dec
pop
push
xor
in
jl
xchg
mov
push
bnd
pop
mov
inc
andb
mov
aas
sub
dec
mov
int3
or
les
jbe
repnz
loop
call
insl
sub
sbb
int3
rorb
jbe
pop
sub
mov
pop
movsl
jp
adcl
jo
fmuls
test
je
add
in
sub
pop
pop
jno
enter
add
out
fmull
adc
outsb
cmc
pop
pop
sub
mov
mov
insb
iret
out
xor
sti
add
cmpsb
mov
iret
adc
sbb
mov
test
je
jge
fbstp
les
mov
ds
mov
mov
mov
xchg
icebp
push
or
xor
sub
push
inc
sbb
mov
stos
add
shlb
notb
outsb
xorb
call
das
popf
shlb
sbb
dec
add
cs
and
pop
mov
cmp
les
dec
mov
in
add
les
cwtl
loop
xchg
adc
jge
add
dec
fnstenv
xchg
iret
cmpl
mov
jge
cmpsl
rolb
paddw
mov
test
xor
jle
jno
inc
test
or
xor
int3
push
popa
fcompl
mov
mov
test
les
movsb
and
and
xor
mov
push
pusha
xor
mov
push
pop
ss
ss
jge
ja
pop
push
bound
bound
dec
rcrb
andl
push
pop
mov
lcall
enter
sub
add
mov
push
test
and
insb
mov
mov
ljmp
sti
mov
mov
mov
jae
jb
jbe
xchg
call
inc
lahf
fidivrl
insl
test
xchg
pop
sub
test
fmuls
jecxz
pop
sub
sbb
inc
xor
sbb
scas
bound
sub
lahf
or
cs
test
stos
ss
hlt
jbe
outsb
sub
ficoml
fildl
xor
push
push
sbb
xchg
movsb
sub
aam
loop
adc
test
bound
lahf
mov
mov
mov
sbb
pop
sbb
scas
jns
push
loop
sbb
into
mov
clc
sahf
xchg
aas
xchg
mov
mov
push
cmp
hlt
sbb
mov
mov
shll
add
loope
sbb
fidivrl
js
adc
rorb
movsl
test
mov
mov
xor
or
pop
xchg
clc
insl
roll
mov
cwtl
cmpsb
movsl
inc
fstl
lock
ret
add
xchg
adc
add
mov
pop
lahf
lcall
fdivs
mov
sub
add
xor
pop
ljmp
and
or
bound
cs
adc
scas
sub
shll
jne
mov
les
inc
stos
add
push
outsl
arpl
xor
pop
or
mov
popa
mov
jns
mov
inc
pop
jecxz
pusha
or
inc
fdivrs
cmpsb
movsb
mov
call
mov
jnp
inc
faddl
imul
popf
sbb
aaa
aaa
jl
movsb
sub
movsb
out
dec
rcrl
cli
test
adc
xor
ja
lahf
or
xor
mov
cli
dec
movd
pop
push
lahf
sub
aam
mov
ret
es
ja
jo
ret
xlat
inc
push
test
pinsrw
es
mov
enter
ljmp
jecxz
push
stos
sbb
inc
cmp
jecxz
insl
out
scas
mov
add
sti
hlt
jno
push
mov
lret
fidivrs
adc
dec
out
aas
stc
or
add
stos
std
mov
adc
mov
out
or
jge
outsb
stos
push
sbb
in
sub
icebp
push
in
rcl
xchg
out
clc
xor
addr16
jne
xor
mov
add
add
scas
pop
jecxz,pn
add
mov
xchg
into
xchg
push
xchg
sbb
ss
add
mov
inc
lds
push
cmp
or
push
in
dec
js
inc
aaa
xchg
add
mov
inc
mov
mov
arpl
ret
push
idivl
loopne
push
mov
aaa
movsb
jg
pop
push
pop
out
hlt
pop
xchg
ret
js
mov
push
movsb
leave
sub
mov
push
mov
dec
enter
dec
jae
mov
mulb
mov
push
mov
mov
xchg
jo
int
daa
push
dec
rclb
dec
jl
adc
fs
cmpsl
push
jg
jecxz
xorb
rorb
pop
inc
je
sbb
outsl
pushf
and
xchg
je
js
ds
push
dec
ljmp
inc
insb
adc
fdivrl
push
cli
xor
ss
movsl
sbb
out
mov
sub
push
add
dec
lcall
xor
mov
sbb
outsb
cmpsl
xor
mov
mov
add
xchg
mov
imull
cmp
lahf
xor
xchg
xchg
cmp
repnz
movsb
mov
xor
addr16
mov
jo
xor
rclb
and
mov
mov
push
mov
aam
mov
lea
lods
or
sub
sub
sti
sahf
ficomps
mov
test
dec
pop
xor
xchg
jne
mulb
out
enter
les
jl
pop
sub
add
inc
stos
hlt
icebp
mov
movsb
jb
testb
mov
mov
je
mov
jmp
pushl
mov
xor
mov
cltd
adc
dec
sbb
sbbb
push
xor
aas
ret
jp
xor
jno
add
int3
cmp
je
clc
shlb
push
ljmp
push
scas
dec
push
jo
sub
xchg
ror
add
mov
cmp
mov
mov
cs
inc
xchg
bound
js
adc
and
rcrb
lahf
mov
inc
call
fs
push
jg
cmc
mov
test
adc
sub
xlat
mov
pop
xchg
sbb
mov
push
int3
addb
and
movsb
incl
in
rcl
lods
adc
pand
daa
jg
loop
cmp
add
pop
adc
lret
mov
test
lock
mov
in
in
sbb
mov
lods
jecxz
pusha
xor
and
adc
adc
xlat
and
add
sbb
in
inc
iret
ss
jmp
inc
data16
push
in
ds
xchg
cmove
pop
sub
push
push
mov
insb
jae
jmp
insl
jecxz
js
pop
and
or
adc
pop
sbb
fs
add
jle
xor
mov
scas
xor
inc
adc
mov
pop
fmuls
push
lock
pop
enter
pushf
cld
and
and
mov
mov
pop
or
cld
jnp
mov
inc
repz
inc
hlt
sbb
pop
dec
add
cld
sub
les
movlps
lahf
jo
loopne
dec
ljmp
roll
jl
clc
addr16
fs
mov
adc
aam
adc
lods
rorb
cmc
call
mov
ret
cmp
dec
inc
cld
cmp
clc
imul
lock
inc
mov
push
call
hlt
paddw
or
inc
fidivrs
mov
fcoms
mov
imul
mov
clc
mov
or
sub
adc
fnsave
or
push
es
pop
aam
pop
ja
mov
ret
dec
test
mov
repnz
mov
push
scas
lock
aad
inc
jecxz
lcall
xorb
pusha
std
les
push
adcb
and
test
data16
cwtl
fiaddl
mov
in
out
mov
jns
test
xchg
mov
adc
in
out
xchg
dec
ret
sahf
adc
pop
subl
mov
addr16
aad
lcall
inc
sbb
cmpsb
push
int3
sarb
push
dec
cmp
ds
js
and
dec
subb
call
clc
lret
push
jb
lret
and
inc
xlat
mov
and
push
mov
test
fsub
adc
shll
mov
aad
inc
sbb
stos
ret
cs
addr16
pop
cmp
iret
pop
dec
mov
ds
loopne,pn
add
or
aad
or
push
inc
jg
js
or
xchg
insb
popa
or
jne
push
mov
push
mov
add
lods
js
sub
loop
inc
cmp
daa
and
cmp
mov
clc
add
mov
mov
mov
sbb
cld
sahf
push
pop
pop
fistl
sub
cmp
inc
xchg
lahf
add
and
out
jle
xor
mov
inc
dec
mov
jp
mov
mov
mov
loope
cmp
add
ljmp
xchg
iret
adc
and
mov
imulb
pop
mov
push
add
mov
xor
xor
rorl
jl
stc
sarl
out
popa
jle
or
imul
push
cli
mov
adc
imul
dec
ficompl
jmp
and
test
inc
mov
ljmp
and
or
rclb
push
xor
and
shll
dec
push
lock
or
loop
mov
cmp
out
sahf
fldl
orl
aas
push
adc
aad
enter
ret
jmp
in
cmpb
imul
int3
testb
or
lret
dec
mov
sbbb
pusha
scas
add
int
rcll
inc
ds
mov
sbb
repnz
pop
and
adc
mov
pop
fs
scas
fs
std
mov
loop
loope
mov
push
cld
adcl
scas
dec
ficoml
sbb
into
xchg
dec
cmp
in
fsubl
bound
imul
jo
mov
cmpsl
push
jecxz
clc
lds
and
pop
or
mov
mov
in
push
mov
push
hlt
stc
mov
and
rcrb
cs
rolb
sbbb
sub
movsl
mov
ljmp
jmp
shlb
jl
in
xor
inc
lock
sub
sbb
cmp
aas
pop
outsb
mov
mov
sbb
inc
pop
arpl
clc
call
mov
scas
fisubrl
push
adc
mov
pushf
xor
jo
aaa
add
and
cmpsl
fisubrs
jle
pusha
add
or
not
adc
or
adc
or
faddl
or
test
pusha
or
jmp
xchg
xor
test
lock
mov
popl
dec
mov
dec
cmp
jge
scas
fidivl
inc
in
aaa
mov
pop
push
sub
imulb
xchg
out
lds
mov
xor
mov
cmp
cmc
test
inc
enter
in
pop
xor
mov
loopne
lcall
xor
into
call
mov
jp
xchg
and
mov
sbb
int3
pop
pop
ficoms
xor
inc
push
inc
xor
lock
xor
ljmp
mov
add
xor
sti
xor
or
loop
add
pop
pop
jp
pop
nop
pop
inc
or
lods
sub
inc
rol
jo
add
dec
push
iret
xor
or
sbb
pusha
fistpl
dec
pop
lods
or
push
mov
adc
mov
add
movsb
out
ljmp
cmp
loop
adc
jmp
sbb
ret
and
or
inc
and
add
add
cmp
mov
or
adc
stos
sub
jne
add
mov
mov
in
lahf
push
outsb
imul
out
cmp
adc
jg
dec
sarl
imul
insl
test
pop
push
into
cmp
pop
in
xchg
rorb
cwtl
std
mov
xchg
xchg
divb
sbb
and
mov
push
aam
xchg
popf
mov
shlb
faddl
jb
subb
ret
loop
sbb
mov
pop
jp
push
movsl
test
inc
sahf
arpl
mov
or
jo
mov
jle
adc
dec
push
cmpb
sbb
ds
sbb
lahf
mov
push
adc
xor
aad
aaa
loope
fcoml
mov
mov
jno
xlat
lret
fdivrl
imul
rolb
js
cld
lret
aam
lahf
sbb
jne
les
jp
pop
adc
insb
data16
jb
daa
inc
fildll
ss
adc
mov
push
inc
push
or
adc
insb
test
imul
inc
xchg
mov
in
mov
push
sbb
mov
cwtl
jmp
lds
mov
pop
push
roll
cmp
add
xor
xchg
mov
test
sub
loope
sahf
mov
add
mov
js
cmp
adc
das
pusha
ja
push
lods
xor
cli
lret
int3
xor
mov
addl
addl
push
adc
mov
sub
loopne
lret
cmp
cld
into
pop
cld
iret
push
push
inc
cmpsb
and
jl
pop
or
xchg
outsl
cwtl
subb
and
jecxz
loop
call
xor
dec
sbb
insb
pop
sbb
add
sbb
sub
fwait
clc
push
fwait
andb
add
mov
clc
push
push
insb
mov
and
ss
pop
rclb
xor
arpl
test
pop
pop
sbb
fwait
jp
xchg
aaa
jecxz
jle
push
push
pop
mov
cmp
sbbb
inc
loopne
xchg
insl
or
es
pop
adcb
pop
imul
jae
inc
movq
sbb
mov
jne
rorb
xor
cwtl
mov
xor
ss
imul
xchg
lret
dec
shrb
dec
xor
out
mov
jno
and
sub
leave
sti
cmp
pop
xchg
inc
mov
test
icebp
pop
clc
daa
and
xor
push
mov
add
pop
adc
pop
add
push
ret
push
push
or
pop
mov
xor
xlat
add
push
adc
es
mov
adc
test
into
jp
fdiv
pop
push
inc
repz
add
lret
pop
jnp
jns
jo
pop
imul
shrl
mov
loopne
lret
push
adc
adc
mov
test
scas
jg
or
sub
mov
ds
out
sub
rolb
dec
sbb
xlat
push
adc
jmp
and
out
sbb
inc
loope
and
fisttpl
inc
bound
mov
sti
inc
push
daa
push
sbb
repnz
dec
sub
jl
call
cld
jmp
pop
mov
push
jl
pop
or
push
clc
lret
ret
pop
add
cli
mov
push
in
push
sbb
jmp
sbb
jo
sub
push
aam
fstl
sbb
mov
movsb
and
and
pop
push
add
inc
push
ss
stos
ljmp
mov
jne
xor
in
push
sub
je,pn
mov
leave
jle
push
mov
movsb
scas
push
jno
push
clc
sbb
mov
cs
add
popa
aam
es
hlt
shlb
in
adcl
rolb
jne
stc
lahf
lea
mov
lods
sub
jbe
cmp
negb
xor
icebp
cwtl
cli
sbbb
dec
les
das
ds
or
cmp
mov
enter
jp
mov
push
or
jp
xchg
lods
sbb
test
stos
negl
mov
outsb
incl
add
cs
mov
jne
sub
je
jp
movsb
adc
inc
mov
add
push
lcall
mov
enter
inc
xchg
fistl
push
push
push
pop
lahf
sbb
add
enter
adc
lods
sahf
inc
sbb
popa
and
shlb
xchg
pop
pop
and
or
mov
xorl
xor
sbb
inc
xor
fcomi
pop
cmp
xor
or
lret
std
sbb
ficoml
jl
adc
in
push
or
loopne
push
and
inc
pop
pop
clc
js
imul
ret
rcr
fisubrl
cmp
inc
mov
cs
shl
loop
dec
icebp
imulb
jns
or
stc
pop
push
inc
jno
out
mov
arpl
push
scas
sahf
lcall
push
ja
push
mov
je
scas
dec
ficoml
stc
call
mov
ja
xor
jae
push
insb
cmp
xchg
jle
iret
cwtl
addl
sahf
dec
cmp
lea
and
movsb
cwtl
out
loope
mov
icebp
movsl
pushf
pushf
cmp
shlb
sahf
cli
and
push
xchg
sub
je
sub
mov
inc
mov
fs
test
mov
push
in
enter
push
js
int3
xchg
mov
imul
data16
xchg
xchg
cld
addl
mov
loopne
xor
mov
paddusb
arpl
das
inc
js
lods
xor
cmp
fwait
xchg
push
jp
std
xchg
jg
andb
add
movsl
push
popa
shlb
jl
sahf
jle
mov
inc
aas
cld
subb
cmp
adc
push
aam
adc
adc
xchg
hlt
imul
and
dec
je
shll
mov
sbb
or
mov
xor
sbb
sahf
popf
rcr
mov
cmp
xor
inc
test
cmpsb
fwait
xor
pop
and
incb
push
jmp
sub
orl
cli
jg
mov
mov
notb
out
sbb
sub
mov
in
test
and
xchg
push
stos
xor
and
sbb
addr16
mov
aaa
mov
lea
bound
xchg
fnstsw
cli
test
lock
mov
ds
xchg
shll
xchg
std
and
mov
cmp
add
dec
ss
push
sbb
ja
mov
ds
xorl
shlb
ja
jae
test
add
cmc
aaa
int
icebp
packuswb
aaa
sub
ret
lea
aaa
loopne
les
in
test
or
test
adc
pushf
xor
test
jp
ds
or
enter
fbld
lcall
mov
mov
out
push
add
pop
fadd
and
sahf
pop
or
xchg
push
sbb
push
add
gs
push
cmp
mov
sahf
lcall
xor
and
filds
icebp
xchg
pop
imul
push
inc
and
cld
clc
aaa
imul
imul
add
lret
jb
cmp
addr16
enter
je
mov
mov
repnz
pop
nop
in
ljmp
nop
push
aaa
rorb
insl
pushl
les
fisubl
add
mov
inc
sub
fdivrl
xor
add
add
movb
push
sub
loop
jl
xor
enter
inc
imul
pop
negb
inc
mov
add
adc
loope
cs
jl
add
stos
stc
inc
add
rolb
mov
push
fiaddl
or
xor
or
push
pop
push
test
jae
mov
test
jo
rcr
call
sub
mov
push
aad
aam
push
sub
push
and
and
mov
loopne
xor
mov
mov
jle
push
shll
jecxz
xor
push
jle
and
ljmp
mov
add
mov
xlat
mov
lret
imul
insb
adc
jmp
aad
sarl
pusha
dec
add
scas
inc
mov
cs
xor
ja
mov
pop
pusha
pushf
mov
sub
cwtl
adc
lods
es
ret
std
rclb
push
int3
pop
les
outsb
stos
push
fadds
mov
rorb
push
sti
push
js
push
mov
and
xchg
push
stos
shll
lods
push
and
shrb
and
jo
dec
incb
add
sbb
push
inc
stos
jecxz
test
sbb
pop
fsubs
ss
out
pusha
adc
sub
mov
loopne
or
pusha
push
movsb
mov
add
and
mov
mov
sub
mov
xchg
scas
add
das
cld
dec
adc
call
mov
mov
push
test
add
cs
jle
add
test
jle
test
push
or
daa
test
scas
loop
jo
insl
sahf
andl
cmp
dec
fistl
rclb
or
aam
or
scas
xchg
push
hlt
lock
outsb
imul
ja
mov
popf
es
cmpsl
loop
rcl
out
dec
and
pop
dec
lock
sbb
adc
xlat
mov
in
lock
sbb
shl
imul
sti
stos
push
repnz
pop
and
negb
push
and
pop
daa
dec
jl
mov
shrb
sbb
mov
rcll
pop
gs
lahf
or
or
cmp
sbb
ret
add
daa
mov
cwtl
jo
xchg
add
mov
jmp
add
mov
pusha
mov
inc
pop
into
enter
popf
sahf
rcrl
mov
ret
enter
inc
lahf
mov
mov
xor
jl
sbb
into
xchg
push
rol
jmp
cmp
sbb
pop
adc
push
mov
push
data16
ds
and
push
ret
data16
mov
and
push
ljmp
or
adc
pop
inc
fsubrs
pop
add
push
cli
pop
icebp
dec
hlt
or
cmp
lret
les
and
int3
insl
rorb
add
jmp
jp
or
mov
and
mov
loope
ficompl
decl
inc
or
and
push
xor
jne
adc
test
test
pop
ljmp
scas
test
lods
adc
aaa
gs
inc
lcall
and
cmp
psubsb
cmp
mov
push
dec
jb
and
pop
xor
insb
andl
adc
ljmp
or
inc
ret
es
imulb
mov
pop
sub
or
lock
sbb
mov
add
cld
jmp
pop
xlat
ficomps
adc
add
fs
and
mov
lahf
jb
stos
clc
mov
xchg
ds
sub
push
sub
outsb
mov
inc
insl
testb
mov
add
popf
fidivl
sbb
jb
lds
pop
push
test
cmpsb
fadd
push
sub
aas
mov
je
push
cmp
sti
xor
mov
xchg
adc
or
mov
mov
jecxz
fisubrl
sbb
push
dec
push
addl
mov
push
je
jne
xor
ret
addb
mov
push
push
and
sub
fcoms
fdivrs
mov
mov
stc
les
call
pop
mov
cli
aas
mov
adc
bound
cmp
xor
add
push
enter
shrb
insl
popa
and
pusha
push
les
test
sub
sbb
insl
clc
sub
clc
outsl
push
fdivrs
pop
dec
sti
pop
dec
ja
jmp
cld
int
inc
sbb
hlt
sbbb
adc
fcoms
add
add
aam
add
and
sbbb
or
mov
aam
nop
scas
and
dec
je
sub
or
pushf
leave
and
mov
inc
testl
cmc
pop
sahf
xchg
or
outsb
daa
jne
mov
loopne
inc
shrb
xor
rcll
scas
repz
push
and
movsb
jge
or
outsb
add
call
aam
push
fimuls
adc
andb
test
inc
pop
sub
addl
faddl
dec
imul
imul
mov
sub
orl
popf
mov
and
jo
out
add
add
cli
ja
fstps
mov
or
cwtl
inc
adc
out
pop
dec
in
and
loope
adc
cmp
aam
loop
add
fs
sbb
adc
mov
adc
orb
xchg
mov
dec
cmp
or
notl
jle
imul
mov
and
movsl
and
sub
sbb
and
adc
xchg
test
mov
das
push
mov
push
lret
sbb
pusha
push
enter
mov
cmp
sbb
xchg
mov
sahf
je
sub
inc
test
out
jbe
mov
ret
dec
inc
pusha
fisttpll
cs
push
in
fmulp
mov
fnsave
sbb
stos
jmp
repnz
rcr
loopne
or
call
mov
aam
jno
cmp
xchg
adc
pop
ljmp
xchg
xchg
adc
aam
jmp
test
adc
fnstcw
and
pop
inc
imul
dec
jl
fbld
pushf
fcoml
outsb
push
push
sbb
out
int3
mov
inc
push
xchg
mov
add
fldt
mov
xchg
dec
nop
cwtl
lods
pop
lods
pop
je
jns
insb
inc
jns
pop
cli
jo
aaa
ljmp
out
xchg
mov
aaa
cmp
mov
insb
hlt
pop
jno
cmp
pop
xchg
sarb
jp
ja
call
outsb
movsl
and
pop
xchg
push
pop
jbe
pop
xor
inc
xor
mov
add
lret
cmp
push
rclb
inc
mov
sub
push
subl
adc
into
arpl
movsb
aaa
imul
call
jb
or
in
or
sbb
stos
push
xor
sbb
rcl
mov
mov
rclb
jmp
jle
out
pop
shlb
faddl
add
or
enter
adc
xor
and
jb
xor
inc
or
clc
push
add
xchg
add
ret
sub
add
adcb
das
push
lcall
lahf
shlb
out
negl
xor
test
pushf
call
scas
ds
pusha
pop
cmpsb
daa
hlt
sub
pushl
add
mov
lods
inc
xchg
movsb
push
add
dec
push
stos
test
push
jl
xchg
cmp
jl
or
jne
pushf
pop
shll
repz
sahf
out
movsl
test
pop
push
es
inc
and
aam
mov
jp
aaa
ret
fiaddl
stos
leave
scas
jecxz
mov
push
inc
out
orb
lds
push
lcall
pusha
or
int3
push
jle
push
push
pop
xchg
stos
lock
lds
cmp
loope
fwait
add
fidivrs
fwait
lock
andb
test
add
push
shlb
fdivr
or
xor
sub
xor
insb
pop
and
push
sbb
icebp
loope
or
xchg
mov
mov
mov
imul
dec
jge
call
orb
rolb
fs
ficomps
mov
data16
mov
fcomps
sbb
adc
test
loopne
out
shlb
popa
push
inc
clc
and
in
cli
jb
ret
lds
push
inc
or
ds
sub
mov
dec
call
cwtl
shlb
adc
push
pushf
push
cld
rorb
dec
imul
xchg
test
xchg
cmpsl
insb
dec
mov
and
adc
aam
loopne
and
clc
xchg
push
dec
fdivr
es
aas
es
jb
sbb
adc
push
mov
mov
mov
call
sub
add
in
jo
and
xor
cltd
push
inc
rcrb
dec
jbe
sub
cld
mov
lods
pop
add
xor
gs
rcr
cvttps2pi
sub
mov
jb
es
stos
add
dec
sub
inc
xor
lret
inc
jmp
mov
cltd
movsl
into
jecxz
cld
push
dec
test
inc
int3
outsb
outsb
push
jne
pop
sbb
out
mov
or
or
mull
and
in
adc
hlt
dec
shll
add
or
mov
push
testb
jo
addl
ret
add
mov
clc
sbb
out
jmp
scas
nop
sbb
mov
inc
mov
push
or
ljmp
rolb
imul
fadds
sub
add
mov
shl
test
cli
icebp
stos
mov
lcall
add
mov
xchg
pop
cs
insb
int
dec
insb
push
test
aam
clc
and
daa
mov
stos
mov
in
or
outsb
ljmp
inc
cmpsl
cmp
sbb
pushf
cmp
cmp
sbb
imul
dec
sub
pop
push
xor
or
scas
iret
cltd
push
mov
and
mov
call
jmp
mov
mov
ljmp
mov
testb
inc
pop
xor
rolb
test
inc
aaa
sub
loop
negb
and
fwait
add
loopne
push
mov
in
mov
ds
sbb
add
arpl
andb
fisubrs
pop
add
les
push
icebp
push
pop
icebp
bound
sbb
sub
sub
pushaw
cmp
lea
sbb
push
js,pt
lock
inc
sahf
add
movsb
push
xor
stos
rol
leave
sbb
movsl
pusha
ret
negl
push
shl
add
loopne
mov
cmpsl
inc
int
adc
movsb
orb
adc
mov
rorb
popl
mov
push
je
dec
dec
pop
es
in
and
dec
inc
cmpsb
push
mov
clc
add
cmp
hlt
sahf
inc
sbb
xor
fsts
or
dec
xchg
lods
sub
pop
mov
cmp
stos
dec
pop
in
movsb
lea
adcl
pop
test
lock
fwait
sbb
push
stos
push
xor
adc
rcrl
push
imul
jg
mov
arpl
and
pop
push
jle
cmp
mov
jne
xor
ljmp
jmp
fucomi
inc
data16
mov
add
je
cli
hlt
sahf
mov
sbb
cmpsl
jo
outsl
lds
stos
and
sahf
sbb
lret
jge
mov
sub
insl
pusha
pusha
push
cmpsb
jne
lea
shr
sub
xchg
sub
jnp
cmp
sbb
and
dec
cmpb
int
rcll
fiaddl
pop
adcl
mov
scas
xlat
stos
pop
push
loop
test
jp
inc
orl
inc
ja
or
loop
dec
test
sbb
cmpsb
inc
arpl
or
and
inc
enter
dec
inc
xor
pop
mov
inc
lock
mov
in
and
mov
pop
inc
and
inc
in
in
mov
xchg
pop
and
insl
inc
je
imull
or
enter
push
jp
jle
xchg
bound
not
push
add
je
test
cmpsb
int
or
cmpsb
out
sahf
xchg
dec
shlb
and
mov
dec
jne
nop
jae
push
fcomps
in
inc
enter
jbe
pop
xchg
repnz
call
pop
sbb
mov
test
adc
stc
je
cmpsl
cmp
test
pop
or
push
aas
sbb
icebp
xchg
pushf
shll
call
dec
lods
in
cmpb
add
adc
add
andl
sbb
adc
sbb
lcall
fdivs
mov
ds
mov
sbb
mov
inc
push
sbb
mov
add
mov
lods
add
xor
jl
inc
or
andb
aas
mov
divb
in
pop
pop
push
lcall
pop
or
hlt
cmp
inc
lds
call
mov
cld
mov
js
adc
cld
sbb
jbe
subb
pop
mov
dec
daa
call
mov
or
fcompl
jge
adc
test
popf
xor
inc
imul
js
call
aad
dec
std
scas
lods
test
jno
xchg
lcall
outsl
mov
xchg
cs
xor
push
cld
cltd
xchg
shr
mov
fdivrl
test
push
mov
outsb
bound
repnz
jge
adcl
adc
xchg
jle
or
jle
imul
mov
push
adc
pop
fnstenv
lock
lret
stos
sub
sbb
jo
cmpsb
test
xor
out
sbb
sbbb
adc
xchg
add
sahf
leave
test
test
pop
rcr
jns
jbe
sub
addl
mov
pushf
in
pushf
cmpsb
fiadds
inc
adc
sub
mov
fcmovu
leave
cmp
jns
add
push
fwait
aam
loop
adc
mov
loopne
arpl
add
mov
sub
cltd
sub
inc
ficoml
clc
pop
xchg
xor
popa
xchg
xchg
int3
mov
rcrl
out
sbb
mov
mov
add
adc
hlt
mov
test
sbb
inc
or
jle
ficompl
push
inc
icebp
and
or
jo
cmp
and
call
or
and
sub
adc
les
jle
popa
popf
sbb
imul
test
nop
inc
sbb
cltd
ljmpw
push
xor
repz
sbb
ficompl
push
addb
mov
pop
or
sub
mov
cmp
cmp
movsl
imul
add
pop
orb
popf
mov
mov
inc
cld
pusha
sar
hlt
push
add
jb
fstpt
inc
rol
push
push
shrl
pusha
ret
fs
inc
push
in
xchg
xchg
sbb
addps
cmp
testb
inc
mov
mov
sbb
mov
lods
js
je
js
push
fistps
ret
cmp
xchg
sub
push
cmpsl
int3
push
rorl
push
jb
sub
jbe
addr16
sti
cmpl
adc
fisubs
mov
or
cmc
and
ret
jge
mov
sbb
mov
cmpsl
or
pushf
daa
mov
add
cmp
dec
incb
clc
adc
pusha
std
shl
shrb
pop
xor
inc
stos
push
je
inc
or
mov
and
idivb
fildll
fcomp
dec
outsl
cltd
popa
pop
mov
pop
adcl
xor
stos
cmpsl
or
in
cmp
cld
inc
sbb
sub
retw
ds
cmp
xor
xchg
adc
push
fdivs
dec
inc
sti
ja
dec
adc
aam
push
mov
pop
dec
cmp
test
out
sbbl
mov
push
or
add
add
cmp
scas
ljmp
mov
hlt
and
mov
and
sbb
in
jbe
std
xchg
dec
insb
xchg
mov
cmp
inc
lcall
js
mov
xchg
jne
sub
aaa
or
shrb
inc
push
pop
hlt
inc
cmp
fs
push
pop
or
push
js
pop
out
jp
mov
and
add
jnp
les
loope
xchg
fists
add
sbb
pusha
sbb
jecxz
stos
sbb
pop
and
clc
loopne
stos
cmpsb
cwtl
sub
sub
cmc
mov
and
mov
cmp
ss
or
in
mov
mov
inc
xchg
xor
add
sti
bound
stos
test
and
icebp
jp
in
jge
inc
pop
cmp
inc
jge
dec
mov
call
jmp
mov
sub
jns
jo
leave
clc
pop
addr16
ss
mov
daa
fadds
mov
dec
mov
xchg
mov
test
loop
shlb
decl
cld
aam
repz
jno
jg
dec
pusha
push
push
adc
adc
test
add
add
inc
cmp
add
ljmp
dec
add
pop
ja
push
xor
mov
imul
pusha
inc
adcl
push
inc
cs
mov
cmc
push
inc
mov
and
lcall
enter
pop
inc
ret
mov
fdivrl
add
sub
mov
push
sub
sarl
dec
add
xchg
or
push
test
movsb
sub
jb
jo
or
lcall
pinsrw
mov
icebp
and
inc
sub
loop
fsubrs
outsb
push
stc
push
cli
cld
mov
jnp
mov
mov
in
insb
call
mov
pushf
out
sbb
xorb
pop
cmp
lods
rcrl
testb
mov
sub
dec
adc
cmp
gs
lock
loop
mov
xchg
loope
popf
mov
std
add
fmulp
insb
mov
xor
inc
test
mov
in
sbb
mov
sar
es
add
clc
adc
adc
mov
ljmp
js
sbb
and
mov
dec
jl
push
imul
xor
dec
push
pop
ret
cmp
cmp
rorb
push
mov
add
push
jecxz
fsubs
sahf
loop
or
orb
pop
xor
add
cmp
jle
loopne
xor
jl
idiv
orl
popa
loop
cmc
mov
shrb
icebp
mov
shr
es
cltd
lret
lcall
push
pop
dec
loop
ja
ret
mov
mov
pop
lret
repnz
mov
mov
pop
ds
dec
cli
sub
push
sbb
lret
testl
sti
dec
mov
mov
mov
out
out
rolb
out
pop
xchg
pop
dec
xchg
hlt
pop
jp
ret
out
dec
fbld
popa
xor
decl
cmp
fcomip
in
fisubrl
cwtl
lcall
dec
rcrb
imul
aaa
popf
stos
push
add
pop
and
sti
pop
jecxz
dec
hlt
in
jo
cmc
inc
mov
or
push
mov
lock
das
push
data16
or
sub
pusha
pop
movsb
rol
cmp
lds
mov
aad
aas
lret
or
dec
adc
test
enter
add
push
aam
add
aad
adc
pop
hlt
and
dec
xor
testb
push
sbbl
sub
movsl
loop
push
jle
mov
ljmp
std
in
and
clc
les
or
xor
sahf
cmp
pop
ret
push
insl
test
add
sub
arpl
push
add
bound
lret
mov
sbb
push
idiv
repnz
xchg
sbb
and
inc
xor
lret
lret
mov
jbe
add
jne
es
pop
mov
sbb
sbb
fisubl
push
fistl
fcmovb
ret
loopne
inc
and
int3
push
movsb
shll
ficomps
mov
inc
dec
sbb
cmc
daa
cmp
mov
xor
iret
inc
mov
and
out
mov
mov
scas
je
call
pop
cwtl
pop
dec
cmp
fldt
push
clc
hlt
pop
das
aam
inc
inc
push
pop
test
mov
pop
fsubrs
sbb
push
push
mov
out
add
sub
add
mov
sbb
sbb
mov
psllw
pop
leave
sbb
mov
sub
mov
lods
add
cs
push
or
push
xchg
pop
push
ss
dec
icebp
rcll
jbe
aas
mov
imul
mov
aaa
outsb
test
push
shr
mov
ss
test
cli
sbbb
adc
sbb
dec
sub
out
das
cmpsb
out
fadds
dec
mov
jmp
mov
jae
sub
mov
insl
loopne
stos
fstl
or
mov
test
ret
lds
mull
stos
xchg
clc
mov
pop
push
inc
add
shll
ds
bound
jno
push
cmp
sbb
pusha
or
aam
xchg
dec
leave
mov
sbb
dec
jl
add
xchg
mov
jb
sub
adc
adc
xchg
inc
jne
js
adc
scas
js
stc
lds
jno
addb
enter
in
stos
aaa
test
jl
push
mov
push
and
sbb
xlat
add
pop
or
mov
dec
sbb
push
fistpll
inc
pop
lock
xor
xchg
call
test
adc
dec
insb
pop
scas
mov
hlt
push
push
ficoml
add
and
cmp
adc
in
das
into
pop
pop
cld
sbbb
mov
pop
orl
push
pushf
pop
jp
push
pop
pop
or
pop
es
in
pop
lcall
clc
addb
inc
xchg
push
mov
popa
fildl
pop
sbb
scas
imul
nop
int3
test
push
add
sahf
insl
stos
insl
pop
cmp
push
stos
jnp
mov
test
std
cs
mov
sbb
dec
pop
es
in
lahf
sti
lock
lods
sub
adc
inc
jnp
fidivs
ljmp
mov
iret
add
xchg
mov
pusha
arpl
sub
and
mov
jbe
dec
pop
xchg
and
clc
push
bound
and
dec
add
add
lcall
fdivrs
testl
push
xchg
iret
enter
push
xchg
popw
pop
aas
push
lock
or
xchg
sbb
scas
clc
inc
cli
clc
dec
aam
punpcklbw
push
incb
mov
fwait
adc
fadd
sets
call
adc
pop
jae
imul
daa
leave
lock
add
ret
sbb
leave
movsb
cmpsl
fnclex
call
cmpsb
fcomps
or
into
test
rcr
imul
out
mov
cld
jmp
push
rcr
jmp
mov
sbb
js
shrb
icebp
loopne
daa
es
cmp
sub
sti
xchg
das
add
mov
inc
loope
sbbl
mov
loopne
fdivrp
sbb
xchg
lea
push
out
ja
pop
and
pop
mov
popa
addr16
shlb
mull
dec
loop
add
hlt
xchg
icebp
popa
ret
pop
shlb
mov
xchg
jecxz
stc
mov
insl
jl
push
sbb
or
aam
test
stos
test
mov
aad
push
popf
push
mov
sub
cwtl
push
add
fiaddl
int
jecxz
sbb
add
sbb
mov
xchg
sub
fsubrs
inc
sbb
mov
xchg
rorl
loope
je
popa
inc
imul
push
xor
lds
inc
sbb
adc
rorb
jo
fwait
mov
cmpsl
outsl
faddl
inc
pushf
sbb
add
bound
imul
inc
nopl
mov
les
test
xchg
shl
clc
mov
dec
pop
inc
imul
loopne
add
add
push
jo
mov
sahf
test
ljmp
or
int
fucomi
sub
cs
call
mov
sbb
imul
mov
push
gs
fstpt
push
mov
inc
inc
idivb
adc
push
and
stos
sbb
pop
loopne
in
sbb
icebp
ds
inc
cmp
adc
orl
call
or
mov
das
or
popa
lret
outsb
inc
xor
inc
je
lock
jo
inc
push
les
xor
push
clc
sub
jmp
jge
jne
mov
sbb
jecxz
xchg
or
inc
sbb
and
nop
clc
cmp
xchg
andl
roll
dec
rcll
mov
lock
sbb
cld
jnp
nop
push
jo
sbbb
add
dec
insl
push
pop
gs
jl
mov
inc
pop
push
nop
es
cwtl
fidivrs
pusha
xor
dec
stc
add
pop
push
jle
sarb
aaa
xchg
in
movsb
bound
jmp
test
add
mov
push
insb
adc
cmp
xchg
cmpsl
mov
mov
hlt
mov
sbb
aam
mov
jne
xor
sbb
mov
add
mov
inc
mov
jg
xchg
scas
ror
and
mov
or
mov
cmc
push
pop
mov
add
push
mov
dec
add
jmp
mov
inc
or
ss
or
or
andb
in
cmp
sbb
stos
inc
mov
mov
push
push
rolb
mov
push
jge
and
nop
imul
push
mov
mov
scas
sbb
push
je
insl
mov
push
inc
jmp
mov
mov
pop
js
dec
ljmp
sbb
push
fs
or
test
inc
add
enter
push
das
mov
hlt
jge,pt
iret
pushf
sbb
cmp
loop
movsl
push
arpl
mov
fwait
leave
xchg
or
add
dec
xchg
inc
icebp
dec
in
fcmovbe
add
jbe
int
sub
decl
enter
sahf
fwait
mov
xor
aam
fldenv
js
hlt
adc
add
pop
ljmp
jo
or
cli
gs
inc
outsl
hlt
sub
mov
xchg
gs
jl
outsb
mov
sarb
cmp
or
jg
loopne
outsl
xor
add
sub
mov
addr16
das
add
scas
push
pop
push
sbb
in
adc
inc
jnp
inc
test
pusha
sahf
sub
aam
inc
mov
outsb
insl
fwait
adcb
dec
and
lods
int
cli
bound
jno
xor
in
ret
sub
popf
adc
adc
loope
add
sbb
push
cmp
cmp
sub
jno
mov
and
mov
or
sub
cli
mov
mov
push
scas
out
add
mov
test
dec
faddl
adc
rclb
add
jnp
lcall
sbb
inc
call
mov
stos
xor
repnz
mov
mov
mov
je
xor
ljmp
mov
outsl
jmp
xor
jmp
sarl
pusha
sbbl
les
push
sbb
es
test
xlat
sarl
inc
std
out
mov
and
add
xor
sbb
mov
or
lods
inc
mov
xor
add
scas
mov
and
test
dec
sub
inc
ret
shrl
pushf
pop
add
imul
les
mov
xchg
push
setnp
mov
and
js
mov
movsl
ja
xchg
insl
loop
mov
and
add
or
incl
int3
mov
fcmovnbe
pop
addr16
cld
icebp
out
add
test
shrb
mov
xchg
cli
xlat
shrb
lcall
pusha
dec
adc
mov
pushf
pushf
mov
jp
sbbb
mov
sub
or
xor
xor
xor
stos
or
gs
test
lahf
call
cmp
pop
sub
pop
and
lock
pop
andl
in
subb
mov
test
jle,pn
sub
ds
in
and
xor
mov
mov
jge
pop
mov
xchg
daa
call
mov
push
xor
jne
inc
sub
lret
inc
loopne
fldenv
mov
cmp
xchg
int3
or
mov
adc
add
jae
movsl
or
dec
test
loopne
or
lcall
mov
loopne
and
std
loop
ret
adc
jmp
rorl
in
mov
xacquire
dec
rcll
call
adc
xor
fcom
or
ds
mov
push
pushf
cltd
adc
mov
pop
push
fiaddl
jno
jecxz
push
xchg
fwait
xor
or
addb
stos
sub
mov
int
cs
mov
xor
adc
negb
sbb
cmc
stc
orb
ds
cwtl
xchg
sub
ficoml
popa
movsb
jle
shrl
and
mov
mov
mov
jge
or
or
loope
adcl
clc
mov
hlt
loopne
cld
pushf
xchg
mov
dec
movsl
in
inc
mov
int3
enter
in
call
adc
cmp
cmp
dec
fs
add
adc
stc
mov
add
or
mov
inc
and
ds
cmpl
movsl
dec
xchg
cmp
rol
ficoml
clc
mov
or
sbb
dec
popl
mov
in
mov
or
inc
mov
pop
call
insb
adc
incl
jo
adc
lret
in
std
test
mov
bt
in
shlb
stc
mov
cltd
test
adc
inc
ss
rorb
jb
and
xchg
out
and
cmpsb
push
cld
mov
bswap
sub
push
xlat
adc
aas
outsb
shll
ds
add
pop
adc
jmp
mov
jp
fwait
je
lock
cld
bound
add
inc
enter
push
inc
xor
xlat
rorb
js
sub
cmp
mov
mov
mov
push
mov
in
mov
add
sbb
fidivrl
or
xchg
inc
dec
xchg
push
imul
xorl
sub
in
cmpsb
push
push
popf
lods
add
push
nop
pop
cld
rolb
pop
clc
pop
shr
lret
and
push
pop
insl
cmp
push
cwtl
jmp
cmpsl
lods
mov
leave
ret
je
push
out
mov
dec
sarb
sarl
push
mov
movl
add
bound
lods
popa
xchg
sbb
ds
sbb
push
pop
push
jp
pop
fisttpl
jo
sub
and
and
inc
mov
adc
jb
and
push
lock
in
cmp
stos
adc
mov
and
jnp
xor
mov
or
xchg
jecxz
add
and
sub
scas
sbb
repnz
cmp
sub
push
push
mov
pushf
mov
fcomip
jg
loope
movsb
add
int
test
mov
out
loop
adc
mov
ljmp
aad
inc
xchg
sbb
add
pushf
mov
jl
add
movsb
and
and
or
adc
adc
mov
sar
or
ds
or
pop
movsb
aaa
jle
sub
pop
jbe
pop
jne
call
cli
push
dec
cmp
sbb
add
stc
pusha
sahf
inc
std
or
or
or
jp
ds
jl
jl
mov
or
adc
push
sbb
mov
push
cmpsb
push
sub
scas
push
push
cmpl
test
cmpsb
jnp
sar
mov
pop
test
loope
push
sub
outsl
fs
mov
imul
aaa
stc
lret
inc
enter
add
divl
movsl
movsb
mov
das
out
dec
mov
xchg
push
mov
mov
push
inc
xchg
jle
rolb
inc
pop
adc
adc
scas
js
enter
dec
in
scas
cmpsb
mov
icebp
add
ds
and
shl
push
aaa
jo
sub
fnstsw
aaa
loope
push
aam
cli
and
loop
xchg
dec
inc
aaa
dec
mov
dec
loop
mov
mov
jnp
lock
sahf
pop
sarb
lret
popa
pop
sub
mov
icebp
and
fmull
inc
or
loop
mov
mov
inc
std
clc
add
inc
xor
sbb
add
push
xchg
rolb
mov
sbb
push
inc
stc
loop
fisttpl
ret
pop
fsts
or
mov
ljmp
add
loop
out
dec
adc
and
pushf
out
push
pop
out
loopne
inc
mov
movsb
inc
or
sub
shrb
fsubrl
lods
hlt
roll
aam
pushf
lock
push
mov
outsb
orb
jbe
push
mov
repz
in
stos
mov
lock
lea
data16
scas
xor
lret
cmp
pusha
test
adc
push
daa
mov
xchg
popa
ljmp
lcall
rcr
das
adc
cmp
and
daa
outsl
stos
push
jle
inc
imulb
les
lds
add
pusha
inc
lret
test
or
mov
testl
cmp
cmpsb
or
mov
cld
test
pop
or
xor
addb
pop
xor
mov
and
lock
sub
out
into
adc
lock
mov
pop
insl
jle
lcall
js
push
ret
cld
or
pop
cli
pop
jae
add
mov
inc
jl
push
inc
cmp
adc
lock
loopne
pop
fwait
and
add
mov
xchg
cmp
movsl
jmp
pop
jne
pusha
sahf
ljmp
fisttps
push
mov
sub
popa
rol
push
daa
loop
sub
and
add
xor
out
push
mov
roll
pop
pop
xchg
fs
inc
fcomps
pop
mov
lcall
int3
xchg
mov
cmpsl
out
clc
pop
js
xor
push
pusha
mov
sbb
jecxz
movsb
sub
test
and
add
loopne
xor
js
in
pop
cmpb
xchg
cs
ja
adc
shlb
jno
xchg
jb
push
xlat
ret
adc
fcompl
sub
imul
lahf
loop
sar
dec
push
shlb
mov
enter
mov
inc
out
push
mov
mov
push
enter
push
das
inc
ja
out
bound
enter
cmp
xchg
xor
loope
rorb
test
or
in
int3
cmc
mov
scas
insl
loop
sub
jecxz
imul
inc
or
movsb
cmpsl
inc
xor
cmp
ljmp
das
int3
push
lcall
lcall
fcoms
add
mov
js
loopne
add
mov
jmp
or
rcrl
jmp
jp
adc
push
and
inc
jnp
push
icebp
and
and
jmp
test
mov
ss
push
sub
icebp
mov
inc
jo
dec
push
out
sub
push
shlb
loopne
lock
fadd
in
test
add
xor
cltd
les
inc
pop
adc
jmp
mov
pop
push
inc
jae
addb
lds
aad
out
mov
lcall
mov
les
test
rorb
negb
imul
mov
adc
pusha
imul
mov
mov
fisubrs
shlb
aad
pop
mov
shrl
cmp
hlt
pushf
sub
mov
pop
add
scas
push
jbe
lock
clc
in
fiaddl
and
lahf
fdivp
leave
int3
call
cmp
das
jl
jg
les
movsb
pusha
loop
adc
xchg
mov
mov
xchg
add
stc
ljmp
add
jo
xchg
adc
pop
popa
sbb
cmc
push
aam
jp
test
leave
mov
pop
iret
dec
add
inc
arpl
xorb
in
inc
push
inc
xor
shr
xchg
mov
dec
xor
jle
rorl
je
jo
ret
cmp
lods
or
mov
jg
mov
xchg
iret
push
hlt
mov
ret
mov
jo
lods
cld
rclb
pusha
stos
cmp
or
rol
ds
aam
mov
dec
fdivrp
mov
push
int
xlat
into
add
movb
jno
hlt
aad
ss
mov
mov
stc
sbb
imul
insl
and
mov
in
pop
and
into
int3
xor
push
les
stos
fldenv
je
cmp
fistps
js
int3
inc
cmp
lock
cld
add
rcrb
aam
jp
cltd
frstor
xchg
cmp
pusha
push
inc
and
cmp
testb
xchg
rcrb
mov
jo
push
cmpsl
lds
cli
pop
mov
ret
imul
sbb
xchg
push
outsl
loopne
mov
xor
fmuls
add
jle
lret
fninit
ret
ficompl
scas
push
dec
or
mov
scas
mov
mov
es
test
icebp
sbb
sbb
mov
sbb
aas
rolb
sub
add
push
push
push
sbb
inc
sbb
pop
pop
jl
arpl
xchg
dec
cmp
inc
aaa
es
mov
cmc
push
or
jbe
andb
sbb
bound
shrb
insb
xchg
cmp
mov
adc
push
out
test
add
testl
cmp
gs
mov
ljmp
dec
aas
lds
fldt
lock
into
fs
scas
hlt
mov
mov
pusha
inc
and
test
mov
test
lret
inc
add
stos
ret
mov
fistps
cmp
push
lods
sti
sub
jg
mov
mov
jle
or
sbb
mov
push
incb
inc
dec
mov
mov
or
testb
rclb
rorb
scas
cmc
outsl
pop
ja
repz
shrl
or
pop
ret
adc
cli
lcall
xor
add
or
scas
adc
sbb
inc
movsb
pop
jl
nop
push
shlb
lcall
nop
mov
cwtl
pop
dec
and
js
dec
and
mov
fs
push
rcrb
ret
clc
jmp
sub
mov
rcr
in
pop
add
clc
mov
fildl
push
jmp
mov
or
or
aas
cmpsb
mov
ficoml
cltd
sar
fdivl
sub
jp
fwait
movsb
addr16
sbb
rorb
adc
out
jecxz
xchg
test
scas
fmull
lret
lcall
inc
scas
test
adc
mov
decl
pop
ljmp
movsb
or
and
xor
dec
lock
mov
add
in
mov
subb
cmp
xorl
jg
repz
fadds
clc
dec
pop
add
sbb
ljmp
mov
sbb
push
pop
or
mov
sub
cmp
shlb
xchg
shlb
jnp
pop
test
fwait
out
addb
or
aam
dec
js
aaa
pop
sbb
loope
mov
mov
stc
mov
movsl
mov
arpl
fsub
pop
repnz
xchg
fistpll
arpl
mov
ror
push
stc
mov
mov
xor
add
pop
or
mov
adc
xor
mov
or
xchg
cld
f2xm1
mov
in
dec
mov
movsb
or
or
mov
cmp
mov
iret
aam
scas
mov
loop
add
roll
movsl
cwtl
pop
sbb
ja
mov
loopne
mov
mov
cmp
and
pop
push
lods
add
notl
or
mov
out
xor
icebp
dec
or
popa
jp,pt
inc
js
cld
mov
iret
jno
push
push
inc
sbb
mov
incb
cmp
add
jg
dec
jbe
lahf
jge,pt
sbbb
jmp
and
mov
push
push
adc
sti
fidivl
and
les
addb
movaps
adc
rolb
cmp
xor
xchg
push
lea
add
push
scas
dec
mov
sub
sbb
push
lods
and
lcall
xchg
ret
cld
cmpsb
mov
test
cli
or
ret
cwtl
push
jle
dec
in
test
xor
mov
fisubrl
inc
cld
dec
xor
or
mov
add
sub
sbb
std
fwait
mov
sbb
and
outsb
xchg
ret
popa
lret
add
gs
xlat
lds
je
ds
inc
push
fcmovnu
cld
and
cmp
push
jp
imul
and
sbb
dec
sbb
in
cmc
mov
mov
fistpll
mov
test
xchg
lock
push
or
mov
xor
clc
ds
cltd
test
or
cmp
ret
sahf
xor
inc
movsb
daa
push
gs
lock
mov
mov
cmpsb
push
push
aas
rol
sarl
mov
mov
mov
lods
and
js
inc
call
push
adc
imul
rcr
and
out
mov
add
cmp
test
fadds
gs
xor
outsb
mov
xlat
or
mov
xchg
sub
aaa
xor
lods
sbb
or
sub
lods
inc
into
xchg
ljmp
nop
fbstp
sbb
push
xor
andb
adc
movsl
pushf
in
and
pop
add
sbb
in
cmc
aad
jb
inc
sbb
push
or
sbb
jl
push
adcb
pop
or
push
inc
ret
push
mov
ds
pop
fldenv
push
ret
orl
pop
scas
fsubrp
cmp
jno
dec
add
cmp
in
push
mov
mov
je
mov
mov
jbe
mov
inc
clc
lods
mov
pusha
addr16
xchg
jmp
std
int3
pop
in
loopne
cmp
cwtl
add
adc
mov
gs
xlat
dec
inc
int
push
dec
or
mov
add
jo
push
data16
hlt
dec
cld
lcall
std
jbe
dec
mov
call
jns
mov
push
std
or
ss
xchg
jnp
scas
es
enter
sahf
in
xor
xor
fwait
jbe
rorl
adc
mov
shrl
incl
pop
mov
je
push
popa
mull
je
stos
push
hlt
cmp
cmpsb
adc
sbb
in
mov
and
imul
pop
adc
scas
gs
ficoml
aas
int
out
inc
je
cli
cli
js
shlb
xlat
lods
mov
mov
add
push
xor
sub
add
sbb
mov
and
push
dec
add
jle
jp
inc
outsb
decl
mov
mov
lretw
push
out
xchg
push
cld
push
enter
jp
and
push
xlat
dec
iret
notb
sbb
lret
push
xchg
clc
mov
pop
cmp
xor
adc
loopne
push
in
int
xchg
and
add
lods
cmpsb
pop
inc
and
jbe
ret
mov
fldcw
fistps
aaa
pop
pop
jns
into
sub
cmp
lock
pusha
test
mov
ficoml
cmpsb
xor
insb
jbe
out
pop
js
mov
mov
dec
sbb
inc
addb
add
rcrb
out
sbb
cmp
sub
fnstcw
fbld
xchg
pop
sti
sbb
shlb
add
xchg
adc
jno
or
test
sarb
mov
test
xlat
sarb
mov
ret
jg
pusha
ja
push
inc
jg
dec
sbb
hlt
xlat
and
lods
jge
shrb
sarb
aad
loop
or
add
fadds
insb
xchg
push
lods
mov
mov
sbb
cltd
shlb
cld
sbb
lods
dec
out
jge
pop
xor
jbe
pop
cmp
idivb
push
stc
ss
imul
repnz
imul
js
lock
inc
adc
ljmp
jb
or
addl
lea
cmp
sbb
sbb
add
fnstcw
jl
popa
add
iret
into
adc
dec
out
sti
mov
test
pop
xchg
pop
sahf
mov
cmp
ljmp
xrelease
mov
paddd
stos
pop
into
inc
dec
sbb
imul
fadds
and
addr16
xchg
xor
data16
jg
pop
jle
ret
sub
xchg
cld
out
jns
in
and
inc
mov
aam
pusha
and
jno
popa
xlat
lds
fs
pusha
inc
xor
xor
mov
mov
std
dec
adc
pop
mov
inc
push
rclb
lods
clc
adc
aam
test
in
pop
push
pop
jb
push
call
dec
ret
sub
scas
shll
dec
mov
decl
pushf
xchg
ss
jecxz
lock
lods
push
xchg
pop
add
mov
cmpb
xchg
sbb
jecxz
add
sbbb
jg
dec
into
in
cmp
outsl
pop
jbe
sub
push
mov
sbb
mov
test
sub
mov
ljmp
jge
pop
push
mov
ret
and
or
mov
dec
jb
adc
mov
clc
add
cmpsb
ljmp
mov
clc
ss
or
and
stos
mov
clc
andl
addl
and
mov
iret
aam
sub
daa
leave
fs
ret
mov
repnz
adc
mov
ljmp
test
push
mov
insb
into
jo
loope
sar
jae
jle
lahf
xchg
add
dec
xchg
scas
adc
imul
lret
shlb
rclb
xor
test
mov
iret
mov
scas
xchg
pop
xchg
cmp
cmpsb
lods
push
aas
roll
imul
jmp
adc
mov
push
sbb
cmp
pop
lds
inc
addl
push
adc
gs
lcall
mov
pop
movsb
or
dec
and
jl
mov
arpl
and
jnp
or
lret
rolb
sbb
push
sub
fnstsw
mov
movsl
inc
leave
test
add
jns
xchg
sbb
mov
mov
sub
push
mov
pop
std
xchg
les
sbb
mov
into
sub
pop
adc
filds
mov
call
dec
inc
jmp
push
sbbb
mov
fsubs
jge
lock
enter
dec
adc
repz
push
add
push
sbb
adc
lods
pop
dec
loopne
inc
ret
xlat
sub
mov
hlt
add
pop
and
mov
or
test
xor
add
sub
ficoms
das
push
push
mov
inc
add
ljmp
aam
loopne
mov
or
or
push
jnp
les
aam
jmp
nop
in
sbb
jbe
xchg
inc
dec
loopne
push
rcrl
dec
daa
outsl
in
subb
add
insb
cli
sub
fstps
js
mov
sub
jl
inc
inc
add
xor
or
nop
stos
jl
adcb
mov
and
arpl
xchg
mov
or
push
sahf
incb
ret
jb
rclb
loopne
test
lock
nopl
insb
out
mov
rcll
test
jp
out
xchg
pop
mov
mov
rolb
mov
mov
jle
push
push
ret
push
pop
cmpsb
sti
clc
into
jo
adcb
or
call
push
clc
clc
fsubl
js
inc
adc
sbb
sbb
aam
and
sbb
and
jmp
mov
add
filds
loopne
pop
les
out
clc
jmp
cltd
xor
pop
pop
arpl
xchg
mov
std
dec
nop
lods
xchg
inc
sub
and
adc
push
cmp
std
push
push
hlt
enter
add
pop
mov
push
mov
repnz
mov
out
inc
cmp
test
fimuls
add
daa
incb
stos
clc
lods
jp
sarl
enter
jbe
pop
int3
mov
pop
sbb
lock
outsl
dec
insl
call
int
outsl
int
stos
adc
adc
loop
mov
test
jmp
xor
test
or
jp
je
sub
xor
pop
nop
stos
hlt
imul
enter
cmp
mov
pop
inc
sti
lcall
adc
pop
je
daa
call
icebp
jne
jmp
and
xchg
lahf
jle
push
push
inc
pop
or
insl
xchg
ds
dec
lock
mov
out
lods
sbb
and
mov
push
call
mov
mov
sub
incb
int3
push
jo
aam
addb
std
cld
mov
and
arpl
jg,pt
jecxz
add
shr
stc
pushf
loop
inc
dec
mov
leave
sbb
fisttps
sub
xorb
add
lods
movsl
or
or
incl
pop
and
mov
jmp
mov
add
push
movsl
out
test
cmp
inc
ret
sbb
or
bound
push
pop
stos
xor
pop
push
pop
xchg
push
dec
jb
jno
roll
cli
nop
add
clc
insb
mov
hlt
movsl
nop
int3
test
add
push
sub
and
ret
rolb
das
out
scas
ss
clc
daa
xchg
ss
push
pop
xor
fildll
add
mov
xchg
xchg
jbe
add
cli
or
mov
arpl
imul
dec
into
xchg
adcl
mov
lahf
and
int3
jo
inc
xchg
ss
sahf
ds
fdiv
test
mull
ds
test
jmp
mov
push
and
insb
jp
inc
js
xor
pop
xor
mov
negb
and
lcall
ss
imul
insl
sub
scas
sub
nop
cs
adc
or
dec
push
xor
or
fimull
pop
xor
mov
ds
and
into
cli
rolb
or
test
out
xor
or
in
pop
je
pop
scas
xor
stos
cltd
aaa
dec
rolb
out
inc
popf
pop
movsl
pop
mov
xchg
fisubs
ficomps
fwait
pop
mov
lods
mov
pop
xchg
fdivs
xchg
xchg
mov
nop
cwtl
in
jg
loope
cmp
inc
jl
in
adc
jno
xchg
push
xchg
or
jbe
and
lahf
jg
and
fisubs
jbe
out
xchg
or
inc
cmpsb
jne
sahf
jmp
shll
lods
jo
mov
js
mul
mov
mov
dec
sub
xchg
cmc
popf
stos
push
xchg
mov
add
sbb
inc
cmp
notl
or
lret
adc
inc
fsubr
clc
sbb
mulb
pop
push
orl
cs
stos
pmaxsw
je
push
incl
adc
ljmp
insl
outsl
add
or
xor
adc
pop
xchg
mov
fsubl
movl
mov
cmp
das
ss
mov
mov
lds
xchg
jle
fwait
mov
or
jmp
fistl
mov
testb
pop
lock
in
xchg
mov
push
inc
xchg
push
inc
inc
pop
clc
or
popa
push
iret
add
xor
pextrw
pop
mov
adc
popf
subb
lret
loope
and
add
or
mov
not
dec
inc
dec
ljmp
mov
in
or
ss
jmp
pop
adc
out
hlt
jb
leave
adc
into
jno
mov
cmpsl
ss
push
pop
push
push
popa
es
cmp
adc
pop
outsl
jmp
add
ds
sub
adc
push
inc
fcompl
test
mov
inc
sbb
lods
cmp
add
inc
inc
out
adc
cli
add
mov
jb
ret
shl
test
inc
in
and
outsl
insb
adc
push
xor
gs
inc
sbb
or
sub
cmp
nop
lret
mov
loopne
add
lret
mov
pop
ljmp
lods
cmp
in
out
andb
aad
mov
jo
jbe
subl
mov
dec
sbb
and
jo
les
add
cli
jae
call
fwait
pop
adc
sub
sbb
or
pop
ljmp
mov
mov
insb
and
cmpsb
inc
fs
and
xor
pop
sub
lds
mov
cmp
cmp
out
test
and
push
hlt
add
xchg
js
in
mov
pop
inc
mov
cmc
mov
cmp
dec
aaa
add
mov
jl
outsb
outsl
ja
mov
push
xchg
in
adc
fcompl
leave
enter
out
or
inc
sarl
lods
mov
ss
add
repnz
sub
js
mov
loop
and
jae
loopne
hlt
push
test
subb
test
out
fcoms
cmp
or
std
lahf
rclb
jb
push
iret
or
loope
clc
or
cmp
or
and
ds
adc
mov
lock
jl
mov
sub
imul
push
xor
cmp
mov
enter
mov
or
jle
adc
xchg
shl
dec
adc
js
xchg
dec
data16
adc
fstp
push
jle
add
stos
cmp
sahf
adc
aas
inc
add
push
mov
push
dec
push
dec
lcall
jl
and
addb
xchg
in
out
xchg
ror
lea
lods
mov
loope
xchg
push
inc
fs
jbe
push
sbb
push
shl
shrb
outsb
jp
or
add
mov
gs
pop
imul
dec
adc
mov
hlt
sub
gs
cmpb
push
mov
inc
and
in
cwtl
cmp
iret
sub
insl
in
ret
outsl
pop
das
mov
into
push
rcrl
cmp
jmp
das
push
xchg
inc
or
je
sbb
jo
jle
xchg
and
push
nop
ficoms
inc
mov
aad
push
push
jb
lods
enter
sub
lahf
scas
mov
push
imul
xor
or
and
sub
lods
or
lock
jle
jg
mov
rorb
push
test
pop
gs
jmp
pop
push
lret
fimull
out
or
mov
xchg
insb
stc
xchg
xor
push
arpl
mov
lea
pop
push
sbb
jg
out
arpl
lods
push
mov
scas
sbb
mov
test
mov
ret
dec
outsl
call
psubsb
cmp
and
adc
insl
dec
mov
add
in
sbb
bound
and
mov
push
jb
enter
xor
add
dec
mov
inc
sub
insl
pusha
ss
testb
les
sahf
dec
inc
inc
jno
das
jns
test
aam
call
pusha
mov
jne
arpl
jne
mov
aas
pop
mov
push
push
ret
scas
and
leave
mull
adc
enter
dec
xchg
xor
fidivrl
adc
mov
aaa
sbb
ljmp
pop
mov
ljmp
flds
loop
adc
ljmp
mov
mov
mov
and
inc
scas
ljmp
scas
dec
cwtl
push
adc
xchg
cmc
and
rcll
rol
pushf
dec
dec
sub
or
shr
mov
lret
mov
adc
lret
pushf
dec
mulb
add
push
or
imul
push
dec
sbb
iret
neg
adc
xchg
addr16
cmp
mov
sbb
clc
je
xor
les
xchg
jmp
xchg
xchg
adcb
loop
ret
cld
leave
aas
cmpsl
lock
jl
mov
ficompl
or
push
and
pop
sidtl
adc
aas
mov
xor
out
fwait
scas
mov
or
stc
and
pop
lcall
pop
sub
movsb
movsb
lods
push
pop
mov
xchg
xchg
push
pop
and
or
dec
mov
loope
push
aad
mov
add
scas
add
and
adc
xchg
loopne
xor
mov
fsubrs
pop
mov
sub
rcll
pusha
xchg
push
sbb
in
ljmp
repnz
adc
xor
push
loop
movsb
xchg
aas
fcmovbe
call
mov
mov
cmp
cld
imul
push
sbb
fidivl
jp
sahf
call
and
dec
mov
sbb
adc
cmp
sub
adc
loope
pop
shlb
dec
fwait
sub
into
out
or
adc
push
push
aad
dec
stos
jp
nop
insb
dec
push
cs
xchg
incb
ljmp
push
mov
or
inc
dec
pop
call
sub
mov
movsl
and
mov
aaa
jb
js
mov
mov
xchg
pop
jns
or
call
add
pop
inc
ss
xor
inc
sbb
outsb
ror
jl
dec
and
add
mov
fimull
lcall
jo
sbb
inc
mov
dec
inc
fsubr
ret
adc
clc
clc
dec
mov
jmp
jb
shl
and
out
stos
push
lods
xchg
cmp
mov
insl
iret
push
jbe
adc
push
bound
mov
mov
cmp
mov
sbb
imulb
xchg
mov
dec
hlt
mov
cmp
cmp
dec
xor
sub
call
and
push
pop
fisttps
and
in
adc
fiaddl
mov
or
cli
mov
jl
push
xchg
pusha
popl
lahf
cwtl
clc
xchg
pusha
psubsw
mov
test
aas
and
mov
enter
clc
xchg
and
xchg
push
adc
mov
sub
out
cltd
nop
cmp
push
rcll
loope
mov
addl
mov
aas
loope
movl
movsb
sahf
repnz
fldl
hlt
bound
jae
sar
fsubs
in
outsb
daa
cmpsb
push
jbe
mov
sub
rorl
mov
lahf
bound
mov
test
adc
dec
push
pop
test
cmp
pop
aas
mov
pop
scas
stos
cs
or
xor
add
push
aaa
and
jns
lret
mov
mov
loop
push
push
scas
mov
mov
pop
jl
ds
adc
orl
add
dec
cwtl
hlt
add
lods
inc
daa
adc
sbb
loop
push
jnp
pushf
mov
sbb
ja
aam
das
out
mov
mov
push
xlat
xchg
out
mov
imul
xchg
mov
sbbb
add
add
bnd
mov
stos
roll
jl
inc
push
dec
cwtl
add
dec
push
xlat
cmovl
mov
std
gs
enter
popf
cli
cmp
adc
and
sti
dec
add
out
mov
push
addb
ds
into
dec
push
sti
xchg
mov
in
pop
xchg
dec
push
out
inc
or
cli
sub
lcall
sbb
mov
cmp
das
xchg
ret
mov
jle
ljmp
push
xchg
push
fildl
sub
andb
or
mov
dec
sahf
mov
les
mov
imul
subb
xchg
dec
insl
leave
inc
mulb
or
mov
cld
add
scas
push
mov
add
xchg
ret
push
add
jne
dec
xchg
add
xchg
xchg
add
fcomps
in
das
mov
add
cmp
adc
shrb
pop
lods
cmpsl
fs
pop
or
xchg
inc
mov
stos
jbe
and
shr
jbe
jbe
sarb
jbe
rdmsr
mov
cmp
mov
or
sub
adc
jbe
mov
jle
cmp
pop
int3
das
push
mov
sub
and
aas
mov
push
popa
jge
mov
dec
pop
pop
stos
pop
and
sahf
iret
dec
sarb
mov
xor
mov
adc
clc
sbb
or
push
sub
lods
rol
data16
jb
mov
jmp
xchg
dec
mov
outsb
insl
pop
sbb
and
cli
movsb
mov
mov
pusha
adc
les
clc
das
mov
inc
xlat
rorb
xor
test
mov
fdivp
bound
enter
mov
mov
insb
rclb
and
cmp
mov
faddp
push
mov
inc
push
xor
or
sahf
or
aad
fnstenv
add
outsl
xchg
xchg
mov
jo
ret
mov
rolb
fisttpl
mov
xor
int3
push
mov
pop
xor
test
and
or
cs
dec
mov
rclb
or
dec
lret
jbe
xorl
jg
clc
xchg
test
in
and
les
imull
fistpll
xchg
in
std
movsb
cs
scas
daa
out
mov
pusha
dec
xor
fwait
mov
sub
clc
lahf
mov
mov
decl
adc
ds
add
es
add
std
add
add
andl
dec
dec
test
mov
in
clc
push
icebp
sbb
lss
push
jmp
jl
add
in
mov
std
xchg
jb
push
cmpsl
xchg
mov
out
mov
dec
out
xchg
repnz
hlt
inc
ficoml
mov
mov
mov
or
pop
mov
sub
inc
fsts
in
ss
pop
jle
add
fwait
clc
cmpb
push
add
fisubl
out
mov
in
icebp
or
mov
adc
jle
and
inc
into
or
data16
sub
jbe,pt
xor
sub
push
outsl
mov
sub
fisttps
loope
nop
pop
shll
in
mov
sbb
test
leave
repnz
cmp
shlb
iret
cmp
fsubrl
or
les
push
loop
call
lods
lcall
outsb
das
add
mov
fisubrs
icebp
fsts
aaa
dec
pushf
test
mov
aaa
mov
cmp
arpl
xchg
ficoms
jecxz
sbbb
ffree
cmpl
pop
xor
ret
je
xchg
je
inc
add
rcl
cwtl
ret
pop
mov
into
add
neg
xchg
adc
inc
xor
orl
addb
clc
xor
idiv
or
xchg
icebp
mov
cs
cli
dec
or
loopne
dec
pusha
adc
daa
mov
rorb
js
push
mov
xchg
cs
lock
fnsave
xorl
testb
add
xchg
mov
outsb
out
or
jns
lcall
enter
insl
jmp
stos
sub
test
adc
push
add
les
pop
cmpsb
xchg
xor
add
fmull
sbb
stos
cmp
imul
inc
mov
or
cmp
or
fistl
ret
lea
cmp
sbb
arpl
mull
sbb
push
pop
mov
mov
pop
lcall
push
mov
add
movsl
inc
mov
xchg
lods
hlt
xchg
cmpsl
fimuls
push
push
out
cmp
pop
fs
mov
stos
sbb
sub
mov
cmp
roll
or
cmp
mov
aas
outsb
je
dec
test
inc
rol
cmpsl
call
inc
xchg
adc
add
mov
pop
mov
sbb
stos
cmpl
out
ss
clc
jg
dec
test
cld
sub
jp
fildl
or
test
stc
pop
pop
ja
shll
jg
inc
fwait
bound
fdivl
outsl
or
das
xchg
out
dec
sti
fcmovnb
push
xchg
loope
pop
test
movsl
aaa
fbstp
scas
pop
add
cmp
add
lcall
adc
jecxz
mov
dec
call
add
mov
sub
pop
clc
sbb
xchg
xor
insl
mov
les
jbe
dec
cmp
mov
shlb
popl
ret
fidivrl
mov
imul
ds
add
insl
inc
inc
pop
lcall
pop
das
imul
aad
sbb
inc
dec
xchg
std
ljmp
pusha
dec
clc
punpcklbw
fnsave
and
into
mov
mov
lret
fsub
mov
pop
fisubrs
push
in
rol
loope
adc
les
aad
inc
ret
mov
pop
pop
push
jns
lods
shrb
fsubrl
pushf
or
rclb
xor
pop
xor
sub
xchg
icebp
test
xchg
out
xchg
jp
sarl
jle
lea
xchg
mov
adc
subb
pop
insb
fidivl
pop
mov
cmp
sub
pop
addb
pop
les
leave
test
clc
notb
mov
jge
jo
mov
pop
pop
inc
cmp
mov
lods
add
ss
sub
adc
inc
dec
push
sbb
xchg
lock
into
pop
sbb
xchg
adc
mov
sbb
les
aam
xchg
scas
ds
add
inc
mov
mov
out
movsb
test
jo
shlb
inc
add
aaa
sbb
xchg
adc
or
sub
push
mov
decl
rorb
sbb
and
bound
xor
je
ret
insb
movsb
add
add
inc
movsb
sub
mov
stos
mov
mov
and
insb
mov
pop
push
xchg
loop
movl
iret
pushf
pop
icebp
aaa
xor
add
rolb
je
dec
insl
ss
add
mov
je
enter
push
mov
inc
stc
lret
push
and
pusha
pop
ficoms
sub
xchg
and
adc
mov
popf
xchg
and
lock
adc
in
mov
roll
xlat
mov
dec
je
fstpt
push
inc
test
loope
sub
popa
test
je
sbb
and
cld
or
loopne
addl
push
xchg
xchg
mov
iret
adc
inc
mov
jbe
ds
pop
jb
call
mov
sub
push
decl
push
or
lcall
mov
sbb
sub
sarl
out
filds
and
push
lds
mov
lods
mov
xor
test
mov
inc
sarl
test
js
and
sub
push
stos
aam
dec
dec
push
adc
pop
push
push
loope
ss
or
lods
int
adc
shlb
pop
sub
push
subl
mov
mov
sub
pop
xchg
mov
or
mov
lea
jge
in
xchg
xchg
mov
movsb
mov
je
idivb
sub
inc
lock
negb
call
sahf
xor
inc
mov
lret
into
adc
pop
mov
mov
jl
es
cmpsb
adc
test
jl
xchg
lock
clc
mov
ror
mov
inc
test
lock
popa
inc
inc
inc
aaa
push
push
inc
inc
push
mov
or
or
lock
push
loopne
or
push
sbb
lods
pop
push
fwait
pop
mov
mov
shrb
fbstp
popf
stos
lahf
out
and
mov
dec
mov
rolb
cmp
and
iret
and
divl
rorl
adc
in
sub
inc
xchg
add
push
mov
cmpsl
xchg
and
mov
push
dec
mov
pop
ss
cs
je
xchg
push
inc
dec
adc
js
jno
insb
repz
push
sub
test
mov
popf
inc
loop
in
push
arpl
sub
call
add
dec
lods
orl
xlat
ud0
and
jmp
enter
ds
dec
in
inc
or
fsubs
hlt
cmp
sahf
xchg
cs
sub
add
loopne
mov
add
out
jecxz
inc
mov
jle
add
testb
or
pop
sar
xor
les
pop
hlt
mov
pop
and
add
cmc
jbe
sub
int
cld
xchg
test
add
and
test
xor
add
pop
insb
mov
nop
int
mov
push
scas
add
and
lds
lea
xchg
es
testb
outsb
adc
sbbl
fsubr
test
loop
sbb
aam
inc
sub
pushf
push
add
loopne
and
sub
in
cs
or
cmp
lock
call
roll
push
inc
dec
js
aas
push
mov
jmp
mov
mov
incl
in
clc
add
es
cmp
inc
sahf
sbb
inc
add
add
push
sub
dec
sbb
es
dec
test
fdivs
popf
mov
mov
mov
ds
mov
mov
push
pop
push
call
loope
inc
movsb
ja
push
inc
push
mov
in
add
pusha
ljmp
mov
testl
iret
mov
inc
ss
outsb
or
ret
nop
jnp
inc
cli
pop
fs
rolb
rcr
lcall
hlt
stc
mov
jle
cli
jp
dec
in
mov
sbb
pop
push
pop
mov
jl
adc
test
lds
pop
pop
mov
push
mov
mov
clc
xchg
mov
xlat
push
jae
mov
xchg
jl
in
stos
or
xchg
inc
mov
and
inc
push
inc
mov
out
mov
pusha
jno
or
push
and
inc
xchg
pop
cli
mov
test
pop
out
jp
lcall
jb
cmp
or
adc
rorl
inc
dec
mov
fs
add
adc
cmpsb
scas
lods
cmp
repz
adc
fidivl
cs
or
add
call
fcmovu
inc
push
push
cld
shlb
mov
add
bound
mov
and
bound
or
rcrb
shr
outsl
clc
les
cmp
inc
xchg
add
cmc
sbb
ret
hlt
ss
rcll
addb
subl
fidivrl
cld
push
aam
jnp
addr16
cs
mov
pop
shl
mov
push
inc
hlt
arpl
outsl
lea
sub
lahf
cmp
in
or
int3
xor
fwait
ss
add
xchg
sbb
inc
or
and
clc
xchg
push
dec
cmpsb
pop
push
cmp
adc
mov
jbe
push
jne
push
mov
inc
je
push
jecxz
aas
mov
frstor
and
sbb
cmp
inc
enter
lret
pop
or
jns
cmp
ljmp
rcll
fld
sbb
adc
fmul
jle
push
negb
test
cmp
stos
and
gs
lret
push
sub
sti
bound
jmp
mov
ret
xor
arpl
jno
pop
xor
adc
sub
jecxz
inc
push
pop
pop
out
xchg
and
mov
and
adc
pusha
or
outsb
pop
idivb
push
mov
dec
push
adc
adc
call
xchg
into
aaa
inc
jp
daa
lods
fldt
subl
rolb
mov
push
or
shl
or
jle
outsl
pop
sub
enter
cmpsl
adc
push
jl
int
sbb
sub
in
mov
cwtl
dec
rolb
sbb
cmp
lret
movsb
mov
data16
or
adc
push
dec
jae
cmp
popa
add
xadd
pop
and
lock
dec
les
mov
lea
xor
repnz
out
dec
xor
outsb
bound
push
fwait
push
sbb
cmc
cmpsb
cwtl
xchg
push
shlb
out
cmp
fnstenv
mov
push
outsb
inc
cmpl
fisttpl
lret
or
mov
lret
xchg
cmp
fisubrl
inc
push
enter
mov
in
aam
jo
fcmovb
sbbl
adcl
out
adc
or
inc
adc
jecxz
movsl
adc
aas
into
pop
scas
sub
dec
push
mov
shl
push
fcomps
adc
mov
xchg
outsb
jns
dec
ja
mulb
nop
mov
mov
divb
sarb
ljmp
adc
ljmp
ss
clc
loope
push
xchg
mov
push
add
pop
iret
mov
std
jmp
hlt
sub
fisubs
lahf
sub
testb
test
in
cltd
test
xor
inc
fs
mov
sbb
aaa
jecxz
insl
sub
aam
adc
imul
fisttps
rcll
push
ja
mov
add
call
js
jbe
push
jmp
jecxz
stc
sbb
lods
rcr
in
in
faddl
add
xchg
fsub
test
iret
mov
pop
sub
lods
mov
jb
insb
mov
or
add
sub
adc
and
push
fidivrl
or
cmp
pop
cmc
mov
fiadds
jno
popa
mov
in
pusha
fsubs
mov
cmp
jns
xor
or
fs
fwait
xor
mov
cmp
dec
into
dec
cli
leave
sub
cmp
ret
ficompl
scas
push
stc
add
outsl
loopne
aam
aam
popa
or
mov
mov
mov
cs
inc
out
pushw
add
sbb
scas
lods
test
pop
shlb
xor
or
pushl
push
test
mov
addr16
mov
mov
das
and
inc
movsb
test
fisubrs
loopne
xchg
push
adc
dec
pop
inc
stc
jg
cmp
rolb
jae
nop
mov
mov
cmp
add
cs
decl
lds
dec
das
rolb
cmpsb
dec
popa
adc
add
pop
repz
push
enter
je
sbb
testb
push
les
push
test
cwtl
pop
jp
setbe
and
decb
mov
push
xor
or
aam
incl
outsl
shlb
ds
jns
lea
arpl
cld
stos
arpl
fcoml
sub
jmp
mov
or
pop
ljmp
push
pop
lods
or
mov
imul
sbb
and
fistpl
es
pop
mov
sub
xor
or
or
dec
adc
aad
cwtl
xlat
push
dec
das
pusha
xor
or
adc
aam
ret
dec
push
outsb
in
out
je
mov
or
ret
push
out
jecxz
mov
or
dec
and
lds
add
out
xor
sub
add
or
lds
js
cli
xor
les
push
xchg
mov
sub
mov
pop
cmp
add
ret
lods
aas
xorb
js
ja
cmp
cmpsl
mov
push
imul
les
fsubs
mov
adc
push
mov
adc
mov
add
or
add
rolb
ja
shlb
fmuls
mov
call
cmp
jnp
pop
jb
or
das
pop
add
mov
or
pop
xchg
xchg
xor
sbbl
mov
loop
dec
and
mov
pushf
dec
incl
mov
test
push
inc
dec
es
mov
hlt
mov
repz
pop
push
adcb
mov
push
daa
sub
mov
xchg
add
ret
mov
jmp
add
mov
mov
ljmp
jne
jp
lods
add
add
in
cmp
rcrb
leave
dec
push
scas
sub
mov
add
test
push
enter
shll
repnz
mov
sub
dec
mov
cmpsb
daa
out
add
test
out
dec
xchg
push
push
and
push
stos
xchg
or
es
mov
sbb
shr
adcb
mov
add
clc
adc
jle
mov
push
loop
push
lea
sbb
add
testb
pop
lods
mov
aaa
mov
xchg
dec
push
jb
xchg
sbb
cld
inc
xor
xor
pushf
fnstsw
lods
lds
xor
sub
xor
je
inc
lds
push
xlat
ss
test
into
shrd
mov
out
sub
jae
jp
lds
clc
and
mov
sbb
daa
rol
jp
fadds
int3
rcrb
push
jl
inc
dec
addl
mov
faddl
imul
sbb
push
cmp
pushf
xor
pop
test
faddl
push
ljmp
sbbl
xor
add
dec
inc
pop
xchg
shrb
sub
jecxz
repnz
jmp
sahf
fs
fcmove
data16
xorb
mov
jne
cmpsb
pop
ffreep
add
xor
out
cmp
push
jg
inc
xor
mov
or
aaa
or
and
lcall
movsl
cld
adc
jp
sbb
lcall
mov
outsb
loope
adc
pusha
subb
addl
rcrb
ret
adc
aad
inc
jge
mov
lock
sub
mov
jge
xchg
mov
aam
push
and
pusha
adc
xor
cmc
jns
ret
roll
icebp
fcomp
ss
push
test
push
sbb
rclb
cmp
lods
js
sti
pop
int
arpl
lds
sbb
push
mov
fstpt
push
add
stos
or
dec
cmc
cmp
mov
mov
decb
js
loop
cld
jne
jg
adcl
int
cmp
aas
jmp
test
mov
rclb
in
jo
mov
inc
or
pop
and
adc
xchg
lea
push
sub
test
xorb
add
negl
into
fildll
inc
mov
pop
mov
ds
pushl
pop
inc
and
jbe
add
mov
add
sbb
int
pop
jbe
cmpsl
aam
sar
scas
jg
stc
mov
shll
shl
lods
sbb
push
sub
std
decl
sub
dec
dec
into
out
jp
int3
sub
sbb
jl
mov
add
adc
lds
loope
jmp
mov
dec
testb
ficoms
or
aaa
cmp
add
fstps
sub
test
bound
pop
push
inc
cltd
insl
or
pop
repz
or
pop
insb
pop
adc
scas
aam
loop
clc
and
jp
push
add
notl
pop
add
or
add
xor
push
and
cmp
test
lods
popf
test
shrl
pusha
or
fcoms
fwait
rorb
sub
mov
nop
fwait
hlt
call
in
push
or
mov
loop
sahf
push
xchg
jl
and
or
repz
jae
ss
sbb
inc
test
or
pop
insb
cmp
shrd
icebp
shll
add
int
sti
insb
xchg
stos
cmp
dec
jmp
and
adc
push
dec
push
push
pxor
pusha
mov
xor
pusha
or
jp
or
push
dec
add
testb
test
jb
add
test
test
leave
scas
mov
cmp
sub
in
jb
sarb
rclb
or
or
mov
je
ljmp
scas
inc
mov
jb
out
subl
mov
sbb
mov
fiaddl
cmpb
rcrl
xor
and
sub
nop
dec
and
ljmp
or
push
daa
in
xchg
loop
outsb
add
or
lods
jb
inc
jnp
push
mov
inc
adc
fs
jle
xor
mov
push
pop
push
pop
orl
jo
dec
xor
rolb
or
cmp
cmpsb
ss
movsl
xor
hlt
sahf
mov
lods
je
mov
xor
or
call
scas
or
inc
dec
sub
adc
jecxz
sbbb
push
xor
jne
inc
cmp
cmpsl
sub
lock
sub
cmp
aam
or
cmc
bound
dec
push
ss
insb
adc
pop
ja
push
dec
clc
cli
in
or
cmpb
jno
adc
scas
sbb
jmp
xchg
nop
push
mov
inc
pop
cli
insl
dec
push
jg
fidivl
inc
lcall
fwait
xor
imul
cmp
push
push
inc
or
cmp
loope
push
push
xchg
in
sbb
lods
push
push
in
dec
inc
cli
mov
and
mov
push
mov
pop
adc
ror
sbb
sub
in
xchg
add
aaa
pop
add
jp
test
orl
xchg
loope
aam
shll
mov
sub
mov
inc
insl
loop
pop
hlt
pop
jp
arpl
nop
add
cli
xchg
dec
pusha
jmp
ds
add
mov
or
push
rorl
test
mov
js
xchg
sete
clc
in
outsl
push
jl
imul
sub
push
stos
or
clc
xor
add
call
pavgw
jp
pop
cmpsb
add
loope
fisubl
fneni(8087
into
sbb
pop
call
add
sbb
in
out
cmpsb
and
pop
cmp
xchg
clc
jmp
pop
imul
enter
out
xor
sbb
lret
lcall
out
sbbl
cs
jbe
jecxz
push
pop
pop
sbbb
inc
sti
fsubrl
push
sti
xchg
jo
sub
sbb
jl
jp
and
sub
mov
ljmp
and
cld
xchg
or
loope
arpl
sysexit
xor
jae
push
sbb
pop
inc
add
mov
fcomps
pop
adc
aam
movsl
mull
xor
ljmp
cmp
inc
cld
cli
stos
pusha
notl
inc
and
std
inc
in
or
mov
add
inc
push
pop
dec
mov
push
cltd
cld
mov
cs
sbb
fmuls
scas
push
xor
clc
mov
scas
dec
pop
and
adc
fs
push
jge,pn
loope
or
fwait
movsb
push
xor
xchg
and
pop
outsb
xor
ljmp
std
dec
lods
sbb
xchg
call
clc
js
mov
dec
adc
nop
push
insl
fs
subb
pushf
and
aaa
mov
or
or
lods
xor
gs
icebp
imul
pushf
lcall
mov
dec
pop
cs
std
sbb
out
xchg
mov
in
imul
dec
add
add
xor
es
mov
js,pn
push
xchg
lahf
rcr
inc
inc
mov
add
mov
je
jo
add
xchg
adc
test
bound
mov
push
pushf
push
xchg
sarl
movsb
and
sahf
addl
aad
mov
or
pop
pop
mov
push
push
xchg
addb
mov
je
mov
mov
shrl
rcrb
jb
mov
inc
inc
out
pop
loop
scas
lret
or
sbb
xor
pop
mov
xor
adc
jle
xchg
test
sub
dec
mov
or
jae
in
fnstenv
mov
cmp
je
push
adc
sar
dec
shl
and
mov
add
mov
lcall
popf
cmp
mov
decb
cmp
lds
or
shl
pusha
lods
xor
push
test
jmp
and
inc
sub
shll
pushf
imulb
mov
pop
inc
ljmp
and
inc
xor
repz
fisubl
in
ret
push
adc
push
scas
es
push
stos
ret
and
sub
call
sbb
dec
or
and
or
lret
mov
push
inc
stos
push
pushf
and
fwait
pusha
lcall
push
cmc
xorl
adc
fs
or
mov
nop
mov
push
inc
ja
push
add
xor
adc
cmp
push
mov
xlat
mov
cli
xchg
adc
fstl
inc
mov
add
xor
adc
cmp
data16
out
fwait
jle
push
cmpsb
sub
mov
mov
pop
mov
dec
mov
dec
and
adc
mov
mov
shrb
lock
dec
ss
mov
sub
jle
icebp
dec
cmp
push
int
push
loope
fcmovnbe
push
mov
lret
mov
mulb
add
shl
pop
mov
cli
and
loopne
subl
aaa
shll
rorl
rcl
xchg
faddl
fcompl
test
and
mov
mov
dec
jnp
jecxz
pop
sub
stos
cmpsl
aas
repnz
data16
adc
stos
inc
mov
sbb
add
mov
and
negl
je
xorb
mov
loope
xor
pop
push
sub
nop
or
arpl
push
arpl
xchg
ds
mov
or
push
cmp
in
insb
jmp
decb
je
clc
mov
jecxz
test
mov
sbb
xlat
fsts
aas
outsb
and
add
outsl
lods
dec
aas
xor
movsb
lds
out
shlb
test
je
rcll
gs
adc
loopne
or
test
lock
pop
je
inc
insb
mov
cmp
rcl
xlat
xor
js
out
in
loopne
mov
jb
push
mov
lock
xlat
dec
out
cmpsl
mov
cwtl
and
lret
lods
call
xor
push
inc
jl
cli
inc
test
push
or
push
outsb
cmc
movsl
iret
clc
push
es
loop
inc
and
and
add
fsin
mov
loop
inc
sahf
call
or
lahf
sub
push
adc
xor
testb
cmp
jmp
and
add
or
and
mov
fwait
pusha
pop
scas
enter
daa
lret
cmove
mov
movsl
pop
sahf
mov
cmpsl
dec
sbb
ficoms
repz
push
xchg
sbb
xchg
sub
mov
repz
add
cld
or
imul
or
xor
cwtl
hlt
pop
fadd
or
filds
shrb
mov
loope
out
mov
cmp
fidivs
mov
mov
pusha
or
xor
shl
sbb
clc
dec
inc
rcr
adc
dec
xchg
inc
sti
popf
outsl
dec
dec
inc
and
cmp
xchg
cmc
jb
and
adc
not
bound
mov
ja
mov
mov
scas
inc
push
fdivl
cmp
js
fcomps
push
pop
outsb
cmp
mov
out
das
push
pop
aaa
sti
jmp
inc
inc
lret
repz
orb
push
addr16
int3
movlps
mov
fs
adc
loop
ret
hlt
mov
xchg
fsubrs
mov
jg
inc
adc
lock
fmull
inc
mov
movsb
mov
ret
aaa
or
add
cmp
leave
test
ja
loopne
aaa
shll
xchg
lods
das
or
push
push
jbe
pop
add
stos
popf
mov
rcrb
and
xchg
inc
sbbb
xchg
lock
hlt
pop
stc
mov
clc
data16
mov
mov
lahf
adc
add
inc
dec
test
lods
loopne
cmpsb
dec
adc
ljmp
pop
pusha
in
push
cmpsl
mov
push
lock
mov
push
test
adc
mov
push
jnp
sbb
sbb
iret
loopne
cli
stos
cs
cwtl
int3
test
sbb
imul
jne
movsb
pop
fcomps
call
gs
lock
ss
adc
shl
aas
test
js
push
push
call
mov
adc
cmc
ja
jae
or
jmp
add
pusha
outsb
push
jp
rorl
add
mov
add
mov
sub
or
push
repnz
dec
ljmp
gs
sahf
jae
xor
or
cli
mov
std
xor
andl
stos
push
sbb
mov
nop
gs
pop
test
jo
mov
js
lds
pop
pop
push
fsubs
test
mov
jecxz
add
push
pop
xchg
mov
add
xchg
mov
mov
stos
ja
xchg
mov
mov
orb
mov
inc
in
adc
out
shrl
mov
andb
sub
jg
mov
pop
loopne
test
jo
lods
cmpsl
inc
popa
or
rcll
jbe
shrl
mov
scas
stos
lods
xor
mov
rclb
add
enter
pop
mov
hlt
ret
ds
adc
mov
inc
idiv
dec
insl
hlt
data16
xchg
mov
jne
mov
or
xor
js
loopne
and
popf
mov
or
push
pop
inc
pop
adc
ljmp
pop
cmp
mov
inc
mov
mov
push
fdivs
or
data16
dec
cmpsb
ret
and
mov
lahf
and
fidivrl
sub
add
mov
cmpb
push
inc
xor
push
roll
dec
push
int
loop
and
pop
inc
movsb
adc
dec
mov
push
pop
ss
adc
mov
push
jl
inc
loopne
mov
push
inc
or
test
jbe
mov
cmp
scas
imul
push
fistpl
jnp
std
cmp
pushl
inc
cmp
fidivrs
mov
push
sub
repnz
ljmp
dec
jbe
xchg
sbb
pop
lret
js
or
mov
addb
sbb
shlb
sbb
addb
pop
sub
addr16
ficompl
add
decl
bound
in
shll
cwtl
dec
cs
pushf
mov
mov
lock
cli
pushl
movl
clc
sub
cli
stc
addb
xlat
mov
adc
mov
outsl
sub
mov
adc
xchg
mov
dec
adc
test
push
pop
cmp
cmpsl
sub
xlat
mov
mov
mov
adc
out
adc
lock
loopne
sarl
mov
enter
ds
mov
lcall
test
jg
add
xor
aas
int3
clc
nop
xor
sub
and
or
sub
mov
sbb
fcomps
mov
lcall
push
sbb
add
and
mov
mov
lahf
pop
test
lods
imulb
add
add
rcll
inc
lds
pop
mov
pop
scas
ret
sbb
mov
subl
faddl
in
out
cmp
sbb
inc
mov
aam
or
movsb
icebp
cmp
repz
xchg
and
data16
push
inc
add
fcmovu
add
call
sbb
bound
das
repnz
mov
in
fiaddl
mov
rorl
xchg
pushf
push
sub
inc
sahf
cli
pop
cmp
nop
or
jnp
arpl
enter
fwait
inc
sbb
add
mov
std
andb
or
mov
call
cmp
pop
std
shll
inc
mov
push
pop
test
mov
hlt
icebp
pop
jecxz
jl
jecxz
sahf
fsubrs
orb
cmp
jb
imul
dec
in
and
cmp
divps
cmp
push
jnp
dec
subl
pop
cmp
jbe
xor
and
cmpsb
or
push
clc
add
and
push
xchg
xchg
jno
pop
mov
push
push
stos
cld
pop
push
push
xchg
and
cmpsb
lds
jg
dec
lahf
push
daa
outsb
cmp
jo
add
iret
fistl
jbe
adc
pushl
scas
es
ljmp
adc
add
inc
xorl
dec
xlat
shlb
and
insb
dec
push
and
mov
dec
movb
pushf
sbb
pop
inc
shrb
mov
stos
cmovo
pop
clc
cwtl
jecxz
pop
rcll
inc
pop
icebp
out
cli
push
outsb
and
aad
sub
fisubl
mov
mov
ja
jmp
and
movsb
daa
aad
dec
adc
sbb
shl
movsb
mov
or
test
mov
fisubrl
cli
push
xor
jbe
or
fiadds
movsb
punpckldq
add
js
icebp
ret
sub
jp
or
cwtl
push
push
xor
and
cltd
test
and
in
jb
mov
pop
testb
pop
ss
mov
insb
and
aam
mov
xor
rcrb
bound
leave
mov
out
and
and
roll
inc
sub
aaa
stos
inc
mulb
and
lock
cld
push
sahf
pop
dec
enter
rorb
push
inc
xor
mov
mov
cli
loopne
orl
aad
icebp
and
inc
pop
add
bound
jns
push
pushf
jne
jae
adc
fistpll
fwait
clc
push
pop
loope
rorb
lcall
cmp
push
scas
fnsave
ret
dec
mov
nop
pusha
mov
ljmp
adc
pop
pop
sub
sbb
shl
ret
cmpsl
push
or
or
rcrb
rol
fistpll
push
inc
fwait
xor
es
aaa
cld
arpl
je
aaa
lock
jns
jle
or
testl
les
push
je
dec
inc
inc
popa
aaa
rolb
call
int3
xchg
cmp
xor
pop
fcmovbe
and
icebp
push
inc
insl
sub
and
mov
mov
lods
pop
add
loope
fwait
in
inc
sub
jb
fimuls
jle
cmp
adc
lcall
incl
mov
sahf
nop
ret
je
call
adc
or
pop
sbb
push
xor
mov
shrb
pop
sub
push
in
sub
fcompl
xchg
aad
cmp
or
inc
mov
xor
add
adc
inc
mov
and
inc
lcall
push
or
or
outsb
jnp
stos
mov
cmp
ss
cmpl
lcall
mov
cs
shll
in
mov
sti
cmpsl
pop
jecxz
xor
outsl
dec
jp
shl
dec
mov
jno
mov
mov
cld
scas
andl
push
adc
xlat
push
push
sbb
pop
inc
push
mov
xchg
shlb
daa
lock
loope
xor
mov
and
sbbb
mov
lcall
jle
orb
lahf
repnz
loope
adc
sti
jmp
add
push
stos
mov
pop
jne
push
dec
jecxz
add
xor
xchg
out
inc
jl
out
add
imul
out
cli
ja
scas
imul
mov
cmp
pop
sbb
and
pop
mov
fcomi
sub
sar
cmp
add
add
mov
or
xchg
das
or
loop
je
cmp
jl
xchg
cmp
andb
mov
arpl
mov
ret
or
adcb
lret
adc
faddl
xchg
mov
les
mov
fwait
out
pushf
or
imul
sub
xor
andb
adc
int3
test
xchg
and
cmpsb
push
xor
push
aas
cmp
dec
sbb
mov
mulb
fadd
push
cld
shlb
push
push
pop
inc
jbe
int3
lock
or
xor
psubusb
addr16
sub
mul
or
jo
push
xchg
push
loope
mov
mov
pop
bound
push
insl
dec
cmpsl
outsb
ret
adc
dec
out
aas
rol
adc
jnp
ds
addl
dec
loope
test
ds
sub
in
testl
inc
jp
test
ja
std
pop
ljmp
rolb
pop
loopne
clc
mov
ljmp
push
add
lret
adc
lock
cmpsl
mov
data16
inc
mov
movsb
lea
sbb
jecxz
cmp
rcrb
test
js
push
xchg
jle
add
jae
shl
out
push
push
and
mov
mov
mov
xchg
cmp
jae
inc
mov
mov
test
dec
cwtl
sar
push
jo
aas
push
jl
lea
dec
sub
mov
lods
pusha
jp
xor
pop
or
mov
popa
sbb
outsb
dec
fsubs
push
and
sbb
dec
push
lea
aam
push
rcll
adc
dec
sub
je
and
add
aam
fldt
mov
mov
xchg
dec
aaa
test
sbb
xor
xchg
rcr
fbstp
or
rolb
popa
je
jmp
or
xchg
out
js
xchg
dec
inc
cwtl
push
fs
testl
jge
adc
pop
loopne
rol
push
add
test
imul
insb
shll
mov
das
cs
push
push
adc
push
in
mov
cmpsb
les
mov
or
push
pushf
jnp
sahf
int3
pop
inc
pop
es
mov
sbb
aad
cmp
arpl
orb
and
shlb
rol
pusha
in
inc
insl
sbb
icebp
lahf
outsb
sbb
jmp
clc
fadds
daa
pop
jb
loope
lock
int
push
xor
cmc
nop
pusha
shlb
les
add
into
sar
sub
fdivs
or
add
repnz
sub
jp
mov
xchg
sub
jmp
and
movsb
mov
sbb
pop
and
sub
insl
call
xchg
das
nop
xchg
fs
int
cld
or
push
mov
xchg
sub
mov
inc
mov
or
sti
gs
movsb
fwait
sbb
scas
push
or
lret
push
add
add
and
adc
fsubrs
aad
mov
mov
pop
fisubl
aaa
loopne
mov
int3
sahf
pusha
in
rcl
xor
lods
out
push
and
add
pop
xchg
or
in
pop
inc
out
cmpsl
mov
cmp
adc
mov
or
mov
loope
lods
sbb
inc
ficomps
shll
aam
aas
or
subl
pop
pop
pop
clc
ja
pop
mov
xchg
jle
and
pusha
outsl
dec
or
mov
mov
leave
inc
popf
aas
fcoml
sbb
loop
add
in
sarb
push
cs
cmp
ret
add
pop
mov
push
mov
sub
push
stos
push
jl
push
adc
sbb
shl
xchg
inc
lock
xchg
push
mov
cmp
mov
lods
shrb
icebp
cli
call
incl
cmpsl
fistpl
fistps
jo
mov
mov
sbb
inc
xchg
jno
jb
mov
aad
sub
in
gs
push
lahf
adc
jmp
por
aad
jmp
shrb
cmp
repz
inc
nop
test
nop
aad
add
pop
mov
or
lcall
add
mov
fs
sub
lods
or
mov
clc
jne
test
sub
pop
popl
lret
mov
and
mov
testl
adc
mov
das
sbb
add
and
rolb
add
inc
xchg
xchg
scas
dec
sbb
rclb
and
imul
xchg
cmc
aad
mov
dec
outsb
mov
stos
or
sub
push
cmp
fsubrl
dec
cli
aad
into
xor
push
fadds
ret
mov
dec
imul
js
sahf
xchg
rcll
xchg
sub
data16
test
stos
fmuls
cmp
add
adc
mov
adc
jl
or
pop
xchg
je
and
add
and
fstps
push
icebp
mov
xchg
iret
jle
icebp
loop
push
pop
push
repz
jmp
and
arpl
imul
flds
dec
test
test
inc
inc
sbbl
test
mov
cmp
add
cmp
fldt
adc
and
pop
ret
mov
cmpsb
pop
dec
call
dec
push
dec
and
test
cmp
mov
mov
sub
fisubs
jnp
adc
dec
outsl
stos
cmp
mov
inc
arpl
mov
icebp
loopne
shlb
pop
fidivrs
cli
xchg
data16
popf
jbe
clc
rclb
jg
loopne
jp
scas
lock
dec
pop
sbb
pop
call
dec
xor
cmp
sub
rcrb
scas
push
xchg
adc
fwait
js
dec
push
cmc
pop
mov
jno
add
clc
dec
mov
aaa
js
jp
inc
sub
lds
mov
xor
and
pop
mov
jnp
loope
jo
mov
je
sbb
les
mov
add
cmp
jns
rcrl
sbb
or
ficoml
js
mov
into
js
push
roll
xor
nop
and
loop
mov
popa
push
lret
cmpsb
mov
xor
pusha
out
pop
sbb
xor
repnz
sub
test
ja
dec
pushf
inc
rcrb
lock
mov
lea
int3
adcl
repnz
loop
shl
adc
cmp
mov
mov
icebp
dec
cmpl
jg
xchg
cmp
dec
jne
sub
and
sub
unpckhps
arpl
sub
popa
rolb
aas
dec
aam
push
push
inc
sub
rolb
jecxz
add
push
adc
adc
out
fs
ljmp
mov
cmp
sbb
pop
fcomi
jne
sbb
out
imul
mov
xchg
pop
fwait
pop
xchg
add
xchg
add
faddl
pop
jg
cli
mov
lret
cmp
mov
cmp
jg
aad
ficomps
dec
push
and
in
dec
popa
mov
loop
aaa
test
daa
inc
out
fwait
lcall
mov
je
popa
outsb
push
jge
push
xchg
addb
pop
subb
ret
pusha
in
lcall
lea
pop
push
ljmp
mov
and
cmp
mov
movsb
dec
outsl
pop
and
repz
js
fnsave
insb
cld
icebp
lcall
stos
push
jecxz
or
pop
callw
cwtl
push
shrl
push
mov
and
je
dec
sbbl
add
cmp
pop
test
ret
popf
xor
sbb
std
adc
in
out
pop
or
ret
fnstcw
lods
dec
loop
lock
mov
mov
jne
mov
push
mov
loop
xchg
fsubl
mov
fnsave
mov
push
pusha
pop
dec
dec
xchg
and
push
sbb
inc
and
mov
dec
imul
cmp
fwait
mov
xchg
jmp
xor
clc
jno
es
jg
sbb
xchg
je
dec
adc
in
or
test
xor
xor
cli
popa
lcall
dec
sarb
sub
repnz
jno
xor
push
inc
insb
dec
insb
loop
out
popa
mov
iret
mov
lock
mov
pop
sarb
inc
cmpsl
mov
daa
ss
outsb
or
sub
xor
mov
mulb
xor
push
mov
sub
hlt
or
sbb
pop
adcb
mov
push
insl
sahf
shl
or
sub
aad
ds
or
fcmovu
test
div
vsqrtps
mov
xor
mov
inc
imul
outsl
loope,pt
loopne
scas
adc
xchg
cld
or
sub
push
js
addr16
and
hlt
pop
test
ret
push
loopne
fsub
lds
xchg
fists
mov
push
xor
xchg
in
je
cmpsb
xchg
pop
xchg
sub
testl
or
sub
add
xchg
int
outsb
mov
push
popa
inc
and
adc
lds
push
cmp
mov
js
or
add
inc
out
bound
bound
cmp
sub
sbb
repz
mov
rclb
bound
insl
fimull
xchg
xchg
scas
dec
mov
lock
std
mov
in
xor
push
mov
stc
incl
ret
push
xchg
loope
or
mov
cmpsl
fnstenv
sub
rorb
lcall
pop
pop
xabort
cmpb
aas
jg
sbb
and
add
xor
jb
pop
push
jns
negb
jle
ljmp
daa
or
insb
loop
ret
push
jb
clc
xor
dec
stos
xchg
jb
push
subl
dec
inc
pmovmskb
mov
dec
pop
cmp
lcall
xor
xor
stos
es
in
pop
lods
lds
and
jp
xchg
dec
push
lahf
fstl
push
or
fnstenv
shrl
incl
sub
mov
mov
mov
xor
sub
test
dec
add
xchg
push
sbb
outsb
jmp
add
push
cmp
push
mov
or
cmpsl
push
pop
adc
sub
leave
out
subl
pop
hlt
lea
and
add
clc
dec
add
and
je
rolb
addr16
sub
ja
mov
lret
sbb
cmc
cld
lcall
leave
mov
jbe
mov
imul
and
aad
les
xor
sbb
add
cmpsl
fs
push
cmp
jg
das
out
add
pop
adc
push
adc
fnstsw
sbb
adc
or
xor
xchg
push
add
add
jg
pusha
xchg
push
jb
xlat
outsl
insb
sub
xchg
sub
shl
add
mov
add
cwtl
es
ret
cmp
xchg
outsb
xor
icebp
arpl
nop
loop
ds
pop
mov
sub
loope
jne
or
lock
xchg
adc
rol
fstl
fwait
xchg
sbb
ds
subl
into
or
add
push
push
xorl
dec
xchg
enter
les
xchg
lcall
xor
cmp
xor
dec
fstps
or
cmpsb
sbb
pop
xor
cli
cmpl
xchg
insl
mov
inc
xchg
jp
cmp
and
push
es
movsb
xchg
fwait
push
or
lea
loopne
add
clc
popa
cld
ret
dec
cmpl
movsb
movsb
mov
dec
adcl
xor
inc
mov
mov
fsubl
mov
push
fcomps
nopl
in
aam
and
adc
scas
icebp
or
inc
rorl
and
mov
loope
inc
in
ljmp
pop
or
inc
ja
mov
mov
dec
jg
andb
faddp
divb
sbb
movd
xchg
insb
sbb
cmp
and
cmpsb
loop
mov
push
lcall
icebp
das
fdivl
lds
pushf
mov
xchg
fnop
cmp
add
scas
outsb
jp
dec
cmp
push
imul
pop
imul
push
cmp
dec
push
inc
test
inc
push
out
mov
mov
pop
aad
xchg
mov
shrl
cmc
mov
sub
sbb
in
imul
or
mov
mov
unpcklps
cltd
testl
mov
add
adc
cli
dec
pop
dec
cmp
call
jo
dec
stos
dec
pop
imul
jo
xor
movsb
adc
ja
and
ljmp
lock
add
icebp
mull
mov
xlat
and
pop
cmpsb
rcrl
pop
out
arpl
fadds
xor
mov
jo
inc
pop
shl
pop
add
loopne
push
push
lock
mov
shrl
fdivrs
sbb
inc
js
popa
fisubrs
sub
sahf
xor
adc
pop
movsb
subb
sti
fldt
and
pop
mov
ja
push
cmpsb
loop
lcall
rorb
pop
mov
dec
popa
mov
ds
ljmp
loopne
mov
mov
add
add
jl
sbbl
sbb
mov
sbb
sbb
je
std
jo
mov
dec
es
in
aam
or
pusha
xor
mov
adc
and
jp
je
and
inc
mov
mov
push
mov
and
adc
testb
push
add
aaa
repz
xchg
popf
xlat
nop
mov
movsl
pushf
lods
lcall
fcmovnb
shlb
dec
cmp
adc
ficomps
psubb
push
sbb
icebp
lock
ret
pop
push
sbb
mov
cmp
sbb
mov
in
imul
loopne
mov
xchg
insl
sub
pushf
lds
or
and
inc
sub
push
mov
mov
xchg
outsb
hlt
inc
adc
dec
movzwl
pop
inc
pop
imul
push
pop
and
xchg
aam
pop
imul
nop
loope
movsl
stc
sub
pop
leave
imul
inc
cmp
xchg
push
and
push
andl
decb
loop
mov
js
dec
mov
jmp
xchg
int3
xchg
jecxz
jo
roll
or
cs
adc
sub
sub
mov
fildl
daa
xchg
call
lretw
test
test
mov
nop
pushl
loop
adc
popf
push
rorl
fimull
ds
test
jno
push
adc
int3
mov
in
lock
dec
loop
movq
push
repz
mov
mov
popf
test
icebp
mul
ret
je
sbb
loopne
rclb
bound
ljmp
testl
ljmp
shlb
jg
push
mov
sub
fiaddl
mov
jmp
mov
adc
insb
pop
mov
pusha
inc
or
and
lret
jno
bound
scas
jb
jbe
cmp
out
mov
dec
sub
divb
xchg
or
xchg
addr16
jp
inc
andb
sbb
xchg
test
jne
mov
xchg
jbe
pushf
sub
aad
xchg
subb
rolb
std
rolb
mov
cmc
decl
inc
out
enter
outsl
adc
jne
cmpsl
push
xchg
adc
nop
rorb
inc
cmc
or
shll
sysret
pop
jne
cltd
pop
out
lods
sub
xchg
jbe
scas
jp
mov
call
adc
enter
test
or
push
xchg
mov
push
add
movsb
cmpsl
out
lret
mov
cmp
sbb
les
int
jo
pop
cmpb
push
pop
das
add
cmp
push
fs
cmp
repnz
jle
fwait
or
push
pop
test
cmpsb
addb
xor
and
xchg
xchg
jo
pop
pop
cmp
rep
je
push
xor
dec
jo
or
popa
push
jge
popf
sbbb
mov
sub
jne
cmc
mov
mov
ret
dec
hlt
icebp
sbbb
fbstp
xchg
or
add
xchg
jmp
cld
into
test
fimuls
mov
mov
push
rcll
pop
mov
and
cmp
jecxz
cmpsb
lods
mov
mov
sbb
cld
adc
sub
rcrl
inc
js
adc
fsubrs
or
mov
mov
push
imulb
sub
insb
dec
mov
mov
sbb
fcomp
daa
cmpsb
fsubs
hlt
test
cwtl
sbbl
in
dec
scas
imul
sub
xchg
and
lret
aad
mov
sub
pop
sbb
jp
sti
negb
push
and
popa
jge
fisubl
pop
lods
std
test
xchg
mov
addl
cmpsb
cmp
sbb
mov
adc
addr16
fsubl
enter
mov
sti
and
mov
clc
into
ds
clc
faddl
jb
lods
cmp
mov
cli
xor
or
xor
inc
cmp
shrb
mov
fbstp
popa
push
fdivrp
ret
ljmp
popa
or
adc
dec
shl
sti
fstpl
ljmp
sbb
cmp
or
mov
mov
cli
hlt
je
icebp
fimuls
cmp
mov
vpavgw
push
inc
ret
sub
popa
fidivl
jmp
sub
mov
pop
lret
push
inc
xchg
jno
rcll
pavgb
leave
shll
pop
cmp
andb
xchg
add
cmc
xor
pop
sub
push
jmp
test
fmul
neg
add
or
call
adc
nop
add
scas
add
mov
fucomp
adc
nop
ror
dec
or
ret
jmp
int
mov
cmp
sub
inc
jecxz
push
dec
or
fiadds
xlat
aad
addr16
dec
xchg
adc
andb
jnp
add
imul
cmp
mov
add
mov
mov
notl
outsl
mov
arpl
or
iret
mov
pop
add
adc
mov
push
add
pop
hlt
sbb
out
xchg
mov
test
inc
pop
and
mov
or
test
cwtl
mov
incl
sarl
hlt
xchg
stos
in
shrb
repnz
cmp
lret
mov
push
inc
test
add
cmp
andb
js
dec
push
cli
scas
es
sbb
cld
add
fcmovnb
ss
sarb
mov
add
call
or
pop
fisttpl
inc
pop
sbb
add
xchg
add
arpl
jmp
sbb
loopne
or
xchg
test
loop
add
mov
inc
dec
or
call
lock
jb
inc
xchg
sarl
bound
push
sbb
clc
jno
dec
rclb
sub
popl
push
and
add
push
scas
xchg
mov
loop
mov
xchg
push
adc
xor
mov
mov
sub
fistl
mov
xchg
pop
inc
inc
dec
out
inc
xorb
xor
cmp
aas
push
rorl
nop
pop
sbb
jmp
nop
shll
call
ljmp
sti
lret
out
mov
and
dec
and
and
mov
and
cmc
pop
cmp
xor
sbb
adc
cs
inc
jne
scas
push
fucomip
loope
loope
adc
scas
sub
mov
fidivl
push
ret
data16
popa
int
sub
cmp
sbb
mov
inc
lods
add
push
pop
dec
push
mov
cmp
pop
xchg
clc
mov
pusha
mov
xchg
push
mov
out
loop
add
sbb
out
fs
mov
xchg
incb
mov
mulb
icebp
sbb
sub
icebp
jecxz
test
mov
mov
out
dec
or
imul
push
sub
xchg
cmc
int3
pop
loope
addl
sbb
or
jge
loopne
push
sub
jg
xor
mov
mov
sub
js
dec
push
out
sti
and
loop
jo
lret
mov
test
cs
sbb
inc
add
out
pop
pusha
out
mov
pop
mov
mov
lods
jnp
jecxz
mov
xchg
xor
or
cmc
and
decb
pop
or
add
imul
popa
add
aas
lcall
inc
dec
insb
mov
lock
xor
les
sbb
push
faddl
cmpb
mov
aaa
and
out
push
jl
inc
cli
sti
mov
cli
outsb
mov
cmp
jecxz
repz
ljmp
sub
std
mov
pop
scas
push
or
mov
sub
clc
cltd
pusha
add
jmp
push
fcoml
and
andps
fadd
sahf
cmp
mov
das
xchg
pop
pop
xor
and
mov
loop
or
push
jmp
inc
mov
dec
jecxz
mov
in
outsl
or
ds
data16
ja
jbe
stos
adc
shlb
nop
pop
lods
xor
xor
in
sbb
loope
push
mov
stos
lds
add
stos
cmp
jg
call
ror
pop
pushf
xor
jmp
cmp
push
cli
push
add
ret
incl
int3
xchg
loope
xorb
cwtl
jl
sysret
ljmp
sub
jp
sahf
fldl
jno
mov
cwtl
lods
mov
dec
cwtl
clc
push
fucomip
insb
shrb
mov
push
xchg
in
aas
xchg
ljmp
ret
or
enter
sbb
adc
push
cmc
lods
lea
loopne
testb
mov
cmc
add
cs
mov
test
pusha
lret
adc
inc
xchg
test
lock
je
repz
push
mov
sbbb
xchg
ljmp
test
sar
das
sbb
cmp
inc
loope
xor
cld
cmpsb
ss
adc
mov
pop
mov
ss
addl
push
jg
jo
bound
std
add
movsl
ds
imul
icebp
adc
mov
inc
fsubs
push
stos
loop
out
push
dec
stos
daa
or
mov
aam
pop
les
sbb
shl
pop
rorl
adc
and
cld
fdivrl
jne
dec
sbb
pop
xorb
mov
bound
cmp
out
inc
iret
and
nop
aad
pop
mov
push
dec
push
pusha
sbb
xchg
inc
mov
shrb
iret
push
mov
jb
jo
sub
add
add
add
fists
jl,pn
mov
and
out
mov
sbb
jb
jns
pushf
mov
loopne
shrb
sub
stc
lds
daa
xchg
mov
mov
testl
cld
dec
test
mov
ljmp
imul
ret
and
sar
loop
lock
cmp
sbb
or
hlt
imul
mov
push
dec
sarb
and
hlt
lods
mov
and
jb
dec
jle
movsb
or
lods
icebp
pop
cli
mov
mov
cwtl
sub
loope
fidivrs
mov
xlat
addl
test
cltd
add
ljmp
outsb
sub
mov
int3
cmc
fcompl
dec
jnp
sub
divl
or
inc
pop
push
push
ja
mov
push
jp
add
push
movsb
add
sbb
xorl
push
in
aam
add
jo
cmp
imul
inc
loopne
shlb
xor
dec
mov
test
clc
mov
aaa
mov
sahf
daa
orb
jl
call
clc
cs
mov
scas
es
loop
xor
not
icebp
aaa
inc
insb
push
inc
sub
movl
xchg
adc
xor
lock
sarl
add
icebp
mov
test
adc
mov
pop
fdivl
mov
ljmp
adc
call
push
and
test
xor
ljmp
add
xor
push
add
sbb
jae
and
fistpll
push
jp
lret
push
dec
scas
fildl
cmpsb
mov
xlat
fiadds
jp
jmp
stc
inc
js
stc
data16
clc
pusha
jmp
lret
push
mov
lahf
push
mov
stos
mov
lret
dec
xor
or
lock
pop
xchg
dec
scas
dec
pop
ret
rcrb
nop
iret
push
sub
push
add
popl
ror
ret
push
mov
cld
cld
insb
cmp
mov
popl
xor
mov
jmp
jbe
ds
sub
fisttpl
inc
clc
xchg
jns
pop
jbe
jmp
lret
and
and
sub
lret
sub
fdivr
mov
xor
pushl
js
loop
sub
in
and
test
jge
fwait
mov
add
loopne
and
fs
fldt
jl
jmp
insb
lds
lret
or
rol
stos
ja
ljmp
pusha
mov
movsl
jl
popa
lock
cs
cmpsb
xchg
or
push
sub
icebp
push
pop
and
lods
sbb
inc
enter
or
add
cmp
sahf
push
stos
jg
test
lds
add
fcomps
loope
dec
jnp
mov
repnz
sbb
sbb
add
jmp
cmp
fsubrs
imulb
test
ds
cmc
fdivl
cs
es
push
bound
ficoml
add
or
rol
imul
loopne
insb
add
or
and
out
lods
push
dec
xor
inc
and
push
and
jecxz
mov
push
pop
into
scas
xor
ror
shrb
fiadds
rorl
mov
loop
andl
mov
adc
pop
sub
lds
das
scas
fiadds
test
push
sarb
cmpb
pop
mov
or
fistl
xchg
cmp
or
inc
popf
lcall
mov
xchg
push
mov
dec
adc
mov
or
mov
xor
movsb
inc
push
or
rclb
mov
fbstp
test
mov
sbbb
sub
and
insl
cmp
jmp
dec
mov
push
mov
mov
xor
adc
push
mov
mov
pop
aas
stos
lods
push
stos
mov
nop
add
xor
call
push
jae
outsb
xchg
pop
dec
mov
dec
adc
push
cmp
cs
lods
lea
js
adc
jecxz
sbb
addb
xor
add
shlb
insb
sbbb
out
xor
sub
xor
hlt
fadds
ljmp
lds
rcrl
dec
adc
jmp
pop
int
sbb
rclb
je
addr16
mov
dec
or
dec
and
sub
mov
pop
rorb
jle
or
scas
adc
push
inc
loope
loopne
inc
lret
aad
lods
dec
xchg
dec
imul
icebp
arpl
mov
loop
pop
in
pop
add
pop
rolb
int
pop
mov
sarb
xchg
loope
sbb
mov
lods
or
mov
add
aam
mov
or
or
sbb
xchg
loopne
push
cli
aam
loop
inc
jl
adc
int
dec
popa
push
bound
push
mov
dec
add
mov
mov
jae
sbbl
mov
aad
movsl
dec
mov
or
rcrb
into
nop
mov
jae
and
mov
cwtl
cmpsl
into
adc
dec
lret
sar
lret
xor
orb
jp
andl
es
fisttpll
xchg
or
insb
sbbb
inc
cmp
mov
and
adc
stos
inc
cld
test
push
aam
test
mov
data16
mov
push
adc
push
inc
arpl
fdivrl
in
fprem1
inc
push
inc
jmp
mov
lret
ficomps
dec
inc
idiv
in
fsts
fbstp
lods
imul
out
loope
fmul
lcall
adc
fstpt
xchg
fmuls
arpl
push
cmp
jle
dec
xor
jno
dec
popa
jbe
aad
mov
xchg
xorb
fsubl
mov
sub
je
mov
mov
mov
data16
mov
test
add
or
imul
shlb
push
sbb
jbe
pop
std
cld
movswl
sbb
notl
xor
jg
insb
pop
dec
adc
test
cs
subb
mov
or
cwtl
jbe
ret
mov
scas
subb
inc
mov
mov
xlat
enter
call
les
in
push
adc
movsb
rcl
pop
add
stos
add
adc
neg
or
jo
xchg
js
ficomps
lahf
mov
movsb
fidivrl
add
out
mov
rclb
scas
xor
subb
mov
cmc
push
outsb
cmpsl
mov
or
adc
xor
ret
ja
add
pop
dec
inc
add
sub
mov
jo
pop
loop
and
scas
mov
cmp
cmp
push
cld
or
sub
add
mov
mov
movsb
push
arpl
nop
or
ret
cmpb
pop
fiadds
ficomps
mov
adc
pop
inc
pop
inc
adc
add
clc
pushf
and
fistpl
addb
into
pushf
movsb
clc
cld
push
mov
sub
mov
sub
js
xor
ds
pop
ljmp
sarb
mov
rorb
push
or
daa
mov
push
or
mov
add
nop
pop
push
call
sub
jbe
pop
sbb
pop
dec
cmp
mov
push
testb
fnsave
sbb
or
sub
rolb
jo
jb
repnz
and
adc
cmp
test
into
cli
and
insl
mov
mov
sub
jl
or
mov
push
aam
or
pop
add
and
and
cli
out
xor
ja
inc
inc
cwtl
leave
icebp
les
enter
pop
xchg
in
test
add
jae
mov
and
adc
dec
cltd
cmp
adc
mov
out
pop
push
add
cs
insl
outsb
nop
test
and
pop
or
enter
adc
and
and
rorb
dec
cmp
ret
roll
and
shlb
push
inc
mov
inc
imul
mov
fs
mov
das
mov
sub
test
or
sbb
sbb
xchg
ds
pop
ss
or
push
idivb
hlt
inc
cmp
test
mov
icebp
mov
xor
push
lcall
fisubrs
cs
xlat
mov
sar
lock
push
loopne
push
icebp
adc
fwait
xor
shll
scas
loop
push
imul
push
add
ss
xchg
dec
xchg
lret
xor
shl
sub
push
and
jns
sub
scas
or
popf
xchg
cld
nop
ljmp
mov
pop
pop
xor
adc
rcl
and
ss
sbb
sub
mov
inc
rclb
in
popl
pop
jmp
hlt
fmuls
pop
push
inc
jmp
pop
inc
pop
jb
stos
rol
inc
jg
adc
sbb
lods
call
cmp
lds
out
rcrl
cmp
lock
clc
sbb
jbe
decl
sub
fmul
inc
das
into
lcall
pop
add
repnz
in
outsl
icebp
push
mov
loope
out
sbb
sub
cmp
cmp
or
mull
sub
ficomps
add
aaa
sub
andl
hlt
aas
insl
ret
inc
sbb
adc
jne
lods
ficompl
lock
add
mov
or
aad
add
cmp
adc
jge
adc
jmp
scas
test
and
xor
mov
jmp
pop
ffree
push
inc
or
or
js
pop
jmp
negl
cmp
mov
cld
xor
xchg
mov
imul
push
push
mov
or
cli
stos
adc
jl
jp
ljmp
pop
inc
inc
cmpsb
push
push
fsubrs
ds
push
popf
ret
mov
in
inc
xchg
fadds
push
out
lret
inc
sbb
fildl
in
inc
cmp
jle
sub
add
xor
fstpl
test
cmp
push
mov
push
push
in
sbb
dec
cltd
or
mov
cmpsb
les
jg
sub
jno
int
rcl
imul
adc
mov
push
clc
and
fnstcw
mov
dec
jae
mov
jo
or
cmp
adcb
and
adc
adc
jne
pop
sbb
inc
sbb
jo
or
jmp
lret
sbb
push
insb
push
lds
les
mov
fisubs
clc
pushf
jae
jmp
ffree
pushf
cmpl
scas
mov
ja
arpl
add
ja
clc
xlat
sbb
ffreep
sbb
mov
inc
addr16
jg
add
pop
test
imul
cli
pop
ss
xchg
add
int3
lret
data16
xchg
inc
mov
add
std
cmp
or
or
ret
mov
ret
jecxz
popa
lods
push
sarl
cli
xchg
dec
adc
arpl
push
xorb
dec
aam
or
cs
adc
imul
sub
aas
addl
outsl
shl
mov
jl
aas
ja
or
cmpsb
orb
add
mov
fistpll
sbb
call
lcall
mov
mov
ret
sub
ss
xlat
aad
inc
jge
inc
ret
or
jg
push
jns
mov
xchg
insl
jne
fistpl
and
adc
push
xor
xor
clc
inc
inc
add
test
mov
cwtl
mov
insb
push
aad
rcl
push
adc
add
ljmp
test
rcrb
jp
mov
sbb
inc
cmp
mov
iret
test
sahf
loope
adc
sbb
or
inc
fucomi
sub
cs
in
out
lock
test
cmpsl
sbb
out
in
in
or
je
out
push
pop
mov
je
mov
ds
mov
push
dec
mov
iret
ret
xchg
pop
or
popa
inc
setbe
pop
jg
aaa
lret
push
xchg
dec
inc
jns
sbb
dec
xor
pusha
and
pop
inc
inc
mov
mov
add
sbb
or
shl
cmp
stos
cmp
or
jmpw
xor
sub
sub
pop
pop
enter
xlat
dec
and
imul
rcll
xchg
les
ret
bound
xorl
sbb
stc
shll
or
fisttps
ja
pop
loope
sahf
outsb
ret
sub
mov
and
out
repz
cld
lock
push
sub
push
es
bound
sub
and
jb
add
test
inc
cmp
jp
push
shlb
fistps
adc
add
repz
jle
mov
push
sub
lea
jmp
ret
sbb
add
loop
dec
addr16
test
pop
add
stos
and
lds
lahf
fs
fadds
xor
popf
rcl
push
or
dec
movsl
sub
jl
pop
or
adc
lds
bnd
das
loopne
adc
inc
pusha
jbe
orb
dec
mov
mov
jo
jnp
push
ss
push
cwtl
cvttps2pi
pop
ret
push
cs
push
scas
xlat
lds
and
xchg
repnz
ja
push
push
insb
adc
aam
dec
cmp
decb
xchg
es
js
jl
cmpsb
dec
and
jo
sbb
ret
inc
aad
or
int
inc
test
jle
pop
or
xchg
fcompl
lret
cmpb
aas
lea
adc
xor
push
inc
pop
mov
sbb
mov
ds
sbb
lahf
jb
sbb
fidivs
sbb
mov
js
fs
inc
shlb
arpl
inc
scas
mov
mov
dec
inc
add
adc
dec
adc
xchg
mov
mov
clc
jne
push
scas
loopne
push
test
jl
nop
ds
mov
inc
cmc
test
dec
hlt
mov
ret
xlat
ret
aas
int3
inc
cwtl
je
pop
adc
icebp
push
mov
or
inc
rcrb
repz
fwait
in
push
pop
mov
adc
insb
push
lock
add
mov
stos
pop
adc
push
push
cmpl
mov
add
push
mov
lahf
mov
inc
xlat
hlt
jo
test
or
daa
aam
cwtl
pop
dec
aas
test
mov
test
ja
cmpsl
jle
or
jmp
lret
cli
mov
adc
sbb
stos
andb
push
adcb
adc
mov
pop
mov
mov
imul
push
insb
test
gs
movsl
test
shrl
cmp
cmp
repnz
ret
sahf
and
sar
adc
fcoms
or
rol
lds
jnp
push
mov
mov
ja
sbb
mov
shr
mov
fisubrl
push
lods
push
xor
add
mov
stos
xor
mov
dec
in
aam
and
test
push
test
jg
mov
imul
adc
jns
movups
jge
inc
adc
into
sub
divb
aam
imul
xor
mov
cld
popa
push
pop
jae
ljmp
inc
sbb
cmpb
das
lcall
mov
xchg
sub
pop
adc
inc
loop
pushf
pop
inc
fisttpll
xor
adc
lock
add
sub
test
movsl
out
dec
into
lret
test
dec
push
cmp
loop
test
shll
inc
fsubs
mov
adc
dec
jmp
cmpsl
mov
insb
imull
add
cmp
in
insb
push
sub
adc
call
dec
rorl
pop
add
jg
jmp
xor
push
shl
push
mov
cmp
push
arpl
aaa
out
push
aas
mov
loop,pt
push
add
inc
xor
test
mov
mov
push
iret
mov
fs
test
jmp
xchg
movb
sbb
daa
and
jno
and
push
push
lods
xchg
jecxz
and
fdivrp
jns
lock
xlat
sbb
ret
push
cld
cmp
jno
mov
push
adc
xor
mov
insb
out
xchg
xor
jns
pusha
cmp
mov
cltd
aas
leave
jge
loope
mov
out
adc
jg
sub
js
push
cmp
mov
ljmp
sarl
movsb
cmc
int
cltd
pusha
jl
xchg
nop
xchg
dec
stos
outsl
adc
lret
push
push
int3
ret
sub
das
inc
cltd
ror
jmp
mov
and
inc
std
mov
movsl
or
lret
jb
mov
ret
push
mov
mov
setnp
rorb
pop
fiadds
pushf
xlat
imul
fimull
mov
jl
adc
or
and
sahf
mov
stc
ljmp
pusha
or
icebp
test
addr16
lds
cmp
mov
ficompl
aaa
add
int
fldt
out
movsl
movsl
popl
test
shlb
out
mov
and
or
inc
lods
xor
imul
and
into
pop
aam
popl
cwtl
dec
inc
in
ds
test
xlat
mov
mov
pop
int3
push
adc
dec
or
aam
push
and
nop
adc
mov
lods
pushl
sbb
or
iret
fsts
inc
push
add
dec
sbb
sbb
loopne
and
and
pop
sub
fdivs
pop
push
test
testl
inc
xor
and
out
push
push
mov
out
push
mov
stos
movsb
scas
xlat
test
sub
cs
pop
mov
ds
push
mov
jo
sarb
inc
inc
orl
adc
pop
jg
jns
inc
cmp
test
repz
jp
pop
cld
je
cmp
or
scas
stc
lods
daa
xor
cmp
dec
sub
bound
jbe
inc
arpl
add
stos
cmp
clc
xchg
les
sbb
mov
xor
mov
test
cmc
out
mov
and
xor
xchg
and
push
xchg
push
and
popa
add
mov
adc
push
out
jp
nop
mov
dec
ss
pop
cmp
mov
xor
pop
ljmp
jle
in
inc
jl
pop
insl
mov
jmp
pop
mov
test
shlb
inc
jp
in
xchg
lahf
inc
mov
pop
cmp
inc
push
imul
fnstenv
mov
leave
add
scas
jl,pn
lds
mov
cmp
in
and
xchg
xor
sub
mov
mov
ljmp
pop
mov
push
pop
sbb
das
pop
or
pop
mov
mov
test
mov
xor
pop
xchg
mov
push
xor
arpl
sbb
sahf
push
push
dec
pop
decb
inc
push
cmp
dec
pop
dec
inc
and
push
adc
gs
jg
loopne
sbb
push
in
or
xor
shll
loope
mov
or
inc
cmpsb
mov
fst
xor
test
out
dec
gs
add
arpl
mov
fdivrl
lds
aas
cmp
cs
sarb
je
in
hlt
es
sbb
cld
movhlps
adc
cwtl
inc
pop
pop
sbb
mov
fildll
pop
scas
lods
sub
ljmp
mov
inc
pop
xorb
adc
xor
xor
mov
mov
sahf
cltd
cmp
nop
xchg
xchg
aaa
xlat
dec
add
call
dec
mov
testl
test
push
fstp
cmp
arpl
jb
sbb
cmp
jne
inc
sbb
outsb
or
std
js
icebp
outsb
mov
subb
lahf
js
adc
rcl
lock
roll
xchg
mov
pop
mov
xchg
or
rcl
out
popa
inc
sub
xor
mov
lods
aad
fadds
pop
xor
test
outsb
xor
stc
std
jl
insl
ljmp
inc
lret
inc
xchg
mov
dec
jge
add
out
jle
popa
and
xor
sbb
pushf
jl
je
pop
mov
in
dec
in
ljmp
movsb
ds
cmp
addr16
fdivrp
imul
aam
adc
bound
out
and
mov
sbbb
mov
pop
xchg
xor
jne
popf
inc
loope
cmp
stos
clc
icebp
jae
push
xchg
pop
xchg
fcomp
bound
pop
outsb
add
incb
pop
in
fsts
push
adc
fidivrl
outsb
cmc
or
ret
data16
xchg
inc
les
repz
aas
pop
stos
pop
scas
inc
les
scas
lret
rcll
xor
adc
mov
cmp
lret
dec
mov
sbb
xchg
sti
sub
aaa
xor
and
xor
sbb
and
ljmp
cmp
popa
subb
cli
sbb
sub
test
cmp
push
pop
addr16
jnp
outsb
call
in
jmp
add
mov
mov
es
cmp
andb
lret
scas
lahf
call
lock
mov
mov
pop
xor
or
and
jb
fistl
les
psrld
adc
and
add
movb
lcall
ss
out
push
pop
cs
or
inc
in
xor
dec
mov
lcall
icebp
pop
mov
jns
dec
orb
insl
arpl
jle
sbb
mov
dec
inc
push
fs
lahf
test
push
jecxz
mov
repnz
jo
jnp
test
pop
push
imul
push
cmp
mov
nop
inc
cltd
cld
xor
jae
or
rolb
sbb
add
mov
inc
movsb
inc
shlb
pusha
rorl
mov
fdivrs
test
cli
inc
xor
aaa
pop
sti
incl
sti
pop
sbb
out
pop
pop
ds
mov
jmp
cli
push
adc
jb
mov
or
xchg
mov
inc
mov
std
mov
loope
fcoms
outsb
push
pop
mov
jmp
sub
and
pop
shlb
ret
pop
mov
les
xor
push
dec
rcrl
clc
std
dec
aam
gs
pusha
or
shrb
cli
nop
cmp
cltd
out
js
arpl
arpl
rclb
ret
mov
push
push
dec
jmp
adc
insb
xchg
mov
sbb
out
push
int3
pop
ss
stos
push
add
lret
cmp
jnp
xchg
add
pop
outsb
or
push
ret
addr16
test
push
or
fwait
mov
arpl
dec
int
push
fsubl
or
sub
das
and
sbb
mov
shrb
in
je
jmp
or
fistpl
pop
jmp
nop
xor
jg
fs
sbb
mov
mov
jns
test
out
dec
and
ds
lahf
add
dec
ss
rclb
dec
xchg
mov
lea
lods
adc
mov
inc
stos
mov
ss
push
xor
inc
cmp
jo
iret
mov
push
push
js
test
adc
sbb
dec
ret
cmc
or
jae
xchg
mov
mov
mov
iret
adc
in
sbb
add
or
jl
and
bound
push
outsb
sahf
ret
mov
jg
sbb
orb
lea
test
je
andb
sti
icebp
shlb
adc
inc
and
or
dec
adc
cwtl
mov
push
jb
jle
sub
inc
fwait
cmpsb
lahf
rolb
sub
or
dec
jmp
cld
ret
lds
jbe
push
pop
es
and
ds
das
adc
or
inc
in
xor
xor
xor
mov
icebp
dec
ljmp
or
sub
sub
xlat
push
mov
sub
loope
or
xor
lds
push
inc
pop
ret
pop
nop
jecxz
xchg
mov
mov
ret
inc
pop
mov
test
xor
and
mov
mov
jbe
mov
fisubl
sbb
je
mov
adc
adc
mov
mov
push
sub
sbb
xor
lcall
mov
aam
dec
pushf
jl
lds
inc
ljmp
aam
ss
mov
xchg
lret
mov
shl
cmp
mov
cmp
out
cmp
add
dec
inc
push
lea
adcl
repz
add
adc
push
out
xor
in
mov
jmp
stos
push
cmp
adc
divb
add
js
test
cmovp
and
add
pop
loopne
hlt
in
jne
inc
jne
jge
pop
push
cmp
xchg
jnp
push
frstor
inc
arpl
aad
hlt
imul
dec
pcmpeqd
lret
sub
mov
mov
icebp
push
loope
je
xorb
clc
xor
or
jp
pusha
mov
loope
cwtl
int3
mov
out
divl
fisttps
ret
out
stos
cmpb
cmc
test
lret
loop
sbb
daa
stos
hlt
fldt
fwait
jo
push
mov
icebp
and
into
and
mov
add
cmp
nop
mov
daa
or
jecxz
add
mov
cmp
sbbb
jno
dec
sbb
and
jg
xchg
pop
adc
scas
mov
xchg
movsl
xchg
mulb
push
mov
clc
shlb
cmp
mov
inc
jmp
pop
stos
ret
test
scas
sahf
in
sar
push
ds
sbb
sbb
scas
das
mov
cmp
orb
xchg
into
push
loope
push
idivl
jg
jmp
jmp
push
test
xor
mov
cmpsl
cmpsb
movsb
aad
inc
imul
cmp
jo
mov
adc
or
add
add
fstpl
lret
cltd
pop
sbb
pop
jb
fsts
push
cmp
imul
xor
stos
add
mov
push
sbb
inc
cltd
xchg
xor
push
xchg
out
add
push
mov
adc
ffree
int3
je
xchg
mov
mov
aaa
adc
xor
scas
hlt
inc
in
mov
stos
adc
inc
std
push
mov
stos
mov
fstpt
cmp
fldl
sub
inc
es
sahf
push
pusha
ret
ds
jp
cmp
xlat
jecxz
cmp
fcoms
outsb
xchg
outsl
push
bound
or
lods
adc
cmp
mov
xlat
sahf
fdivl
imul
and
jl
lods
xchg
loope
out
push
pusha
das
pusha
cmp
loop
or
and
fdivrl
xchg
push
sub
pop
arpl
mov
adc
dec
fs
sub
pop
sub
mov
in
pop
xor
mov
push
xor
iret
addl
jne
daa
lock
jl
pop
push
or
sbb
std
fwait
sub
mov
push
out
xlat
in
ljmp
fcoml
stos
cli
jne
call
loop
xor
pop
sahf
or
hlt
or
dec
sbb
cmp
xor
add
and
mov
push
and
jle
sbbl
xor
dec
mov
sbb
cld
mov
es
sbb
jbe
mov
fstps
inc
inc
test
rorl
and
nop
or
mov
pushf
add
dec
popa
adc
xchg
cli
cmp
inc
mov
out
mov
sahf
mov
inc
sbb
les
gs
ds
sub
insl
push
rcr
cmp
mov
mov
shl
and
sbbb
mov
and
pop
decb
daa
imul
sti
das
pop
iret
pop
lock
fldcw
xchg
mov
into
xchg
sbb
jns
dec
fdivrs
add
push
cmpsl
push
iret
jne
ret
aaa
or
sarb
cmp
fcmovnbe
and
test
enter
rdmsr
call
adc
add
stc
aaa
jge
mov
dec
adc
or
popf
lock
xorl
jl
dec
sbb
lcall
mov
mov
inc
jo
push
xor
inc
shll
xchg
adc
es
js
mov
cmp
inc
inc
inc
lock
out
in
je
aad
cmp
cmp
addr16
xchg
cmpsb
stos
loope
aas
jo
je
pushf
cltd
sbb
push
aaa
call
adc
in
cmpsb
add
pop
iret
inc
lods
data16
loopne
dec
fwait
jg
xchg
pop
sub
cltd
loopne
and
pop
imul
daa
adc
mov
out
jo
push
loopne
lods
and
int
sbb
stos
outsb
sti
cwtl
xchg
dec
pop
popa
stos
and
lahf
xchg
push
loopne
js
xor
push
dec
push
xor
jns
sbb
lcall
push
cmpsb
adc
sub
je
int3
cltd
inc
loopne
add
sbb
mov
ja
push
push
push
add
jno
rsqrtps
in
jno
sbb
xor
lods
and
jbe
stos
je
andb
ljmp
stos
sbb
jecxz
cmc
pop
pop
int3
les
dec
jle
jmp
ja
arpl
sbb
sbbl
push
shl
xchg
das
cli
test
aas
outsl
cmp
sub
mov
dec
bound
sti
pop
push
push
push
stc
cltd
ret
leave
out
popa
int
aas
cmp
push
dec
push
sub
clc
mov
loope
push
xor
pop
pop
ret
pop
in
pop
mov
subb
mov
lods
dec
sub
adc
xor
lcall
sbb
or
mov
push
xlat
sub
mov
fwait
jge
loopne
insl
shrb
iret
cmp
add
rcrl
pop
filds
add
mov
insl
lods
xchg
rcl
mov
cmp
je
subb
loope
es
hlt
add
cs
pusha
jle
pop
cmp
sub
popl
iret
mov
xlat
sahf
cmp
in
and
sbb
sub
dec
sub
mov
mov
fcomps
test
ret
push
scas
imul
lods
fildl
inc
push
icebp
or
mov
push
fbld
sub
cmp
push
jmp
les
jle
jno
jecxz
cltd
push
or
outsb
sbb
mov
lds
sub
ds
shrl
daa
fidivrs
xchg
enter
jmp
test
xor
xor
cmpsb
lret
mov
push
hlt
mov
mov
mov
aam
mov
push
shrb
jno
loope
ds
cmp
in
aam
mov
pop
es
dec
push
sbb
test
call
xor
jmp
add
out
icebp
sbb
dec
xor
xchg
inc
nop
pop
jle
repz
jle
dec
mull
lea
sub
loopne
inc
dec
xor
and
fisubrl
pushf
ljmp
arpl
hlt
inc
sbb
lea
pop
out
cwtl
xchg
shlb
mov
sub
shl
sti
mulb
sbb
inc
or
sbb
hlt
dec
xlat
nop
pop
pushw
sbbl
insb
inc
test
pop
icebp
xchg
lcall
push
push
negb
lock
and
jne
lods
shll
js
loopne
cmp
push
shld
shrb
sub
fidivs
shlb
cmc
pop
mov
daa
add
jo
mov
mov
xchg
dec
aad
lods
push
lret
inc
scas
sti
dec
jg
xor
bound
xchg
xchg
xchg
dec
mov
scas
or
cltd
xchg
shlb
xor
and
jg
and
mov
movsb
inc
ja
sbb
mov
scas
jns
xorb
pop
mov
adc
push
lock
or
pop
and
and
test
mov
pop
pop
mov
test
int
mov
push
push
or
sti
ret
ret
sub
out
cs
sub
inc
test
sbb
and
out
mov
cmp
fiaddl
mov
pop
ss
pop
push
add
add
inc
fstsw
mov
outsb
mov
cmp
sbb
je
or
test
pop
ljmp
repnz
push
add
cmc
cmp
scas
test
test
lock
mov
sbb
pop
sti
inc
cmp
pushl
lea
cmc
push
daa
shll
xchg
pop
xchg
out
in
nop
mov
mov
inc
adc
cmpsb
aam
scas
mov
mov
mov
sub
push
dec
lcall
loop
lret
adc
add
inc
push
xchg
jo
mov
repnz
pop
mov
cmp
push
js
mov
xorb
add
jno
lcall
xchg
fistps
mov
adc
test
sahf
repz
fimuls
add
dec
jl
add
ret
adc
das
ds
xchg
mov
aas
movsl
pop
jp
lret
sbb
cmp
les
xor
jne
xor
mov
lahf
frstor
lods
imul
and
xchg
inc
pop
sub
add
push
dec
jmp
adc
rol
jne
imul
movsb
and
cmp
mov
push
cs
pop
jbe
or
std
rol
jmp
insb
ret
and
jo
nop
stos
mov
jne
lret
mov
out
std
xor
outsl
loope
xor
fwait
cmp
mov
subb
jns
scas
orl
or
adc
dec
adcl
sahf
sub
pop
jnp
enter
incl
hlt
xor
sarl
loopne
pop
mov
mov
data16
rclb
mov
cmp
icebp
dec
stos
stos
aad
xchg
mov
pop
mov
sub
mov
js
push
roll
mov
push
xor
dec
mov
adcb
inc
iret
hlt
cltd
mov
int
push
adc
loope
loope
jmp
mov
fcmovb
pop
mov
push
imul
adc
xlat
loope
ja
xor
dec
mov
mov
cmc
stos
xor
mov
sub
xor
faddl
cmp
fimull
aam
inc
xor
loop
mov
pop
lret
or
in
daa
xchg
add
jmp
gs
jne
mov
xor
or
aaa
inc
mov
sbb
fisttpl
mov
dec
in
push
sahf
divb
push
sub
sbb
xor
out
into
sbb
nop
or
sub
add
add
mov
mov
jae
rcrb
out
sbbb
mov
sahf
jne
inc
scas
push
outsl
cmpsb
fsqrt
or
lock
xchg
jne
fstpt
add
rol
sub
cmp
aas
mov
jecxz
lret
jo
repz
add
shl
je
mov
lds
es
push
add
xchg
sbbl
dec
aam
pushf
push
mov
shrb
xchg
test
xor
mov
xchg
inc
sbb
scas
and
mov
pop
cltd
or
jp
sbb
fstps
xor
pusha
aaa
popa
mov
sbb
repz
mov
jge
or
or
cmp
add
mov
stc
int
jl
leave
nop
adc
ret
inc
sbbb
inc
push
mov
jo
test
push
in
inc
push
insl
sub
test
fstpl
mov
add
lods
cli
push
add
test
hlt
cmc
jno
add
mov
cmpsb
sub
test
fsubrl
xor
test
xchg
js
or
pop
or
sub
add
cmpsb
fidivrs
or
inc
loop
jmp
xchg
mov
icebp
insb
aam
mov
push
and
or
xchg
sub
mov
mov
pop
aad
sbb
sbb
pop
sub
and
std
inc
jae
test
or
pop
scas
adc
shrl
cmp
add
aam
mov
sub
inc
es
xorl
sbb
and
mov
lahf
and
sti
mul
popa
test
add
dec
mov
push
jo
loopne
insb
jns
popa
in
repnz
dec
ss
pop
std
adc
or
add
rcrl
mov
xorb
popf
sub
lock
sbb
sbb
mov
inc
scas
push
push
jae
lock
mov
jmp
insb
ds
subl
pushf
out
push
test
loopne
xchg
lea
shrl
cmp
push
mov
fwait
inc
jp
xlat
mov
aad
jns
lea
cmpsl
lods
pop
notl
ljmp
sbb
sub
inc
lcall
inc
rcll
mov
out
je
ret
lods
mov
rclb
or
sub
sub
nop
icebp
fsubrs
arpl
ss
imul
addl
movl
cld
pop
mov
sbb
or
scas
faddp
inc
mov
test
jp
ret
mov
pop
das
lcall
divb
inc
mov
jle
xor
shrb
insb
pusha
popf
dec
icebp
lret
shll
lret
stos
push
xchg
addr16
mov
adc
sbb
add
sub
adc
lock
lea
stos
arpl
loop
aad
jmp
ret
stc
xor
das
mov
pop
adc
or
jmp
loop
push
mov
fwait
add
add
dec
imul
in
adc
sub
xchg
cmp
or
into
fisubrl
lods
sbb
pop
aam
stos
add
roll
add
pop
mov
sbbl
insb
js
inc
call
sbb
ret
push
aad
mov
push
xor
enter
mov
push
pop
aad
push
dec
jle
dec
test
inc
aam
jle
sbb
fistpl
push
cmp
jnp
imul
mov
cmp
testb
movsbl
sub
insl
push
xchg
sub
or
mov
adc
ds
gs
lea
sahf
push
call
repnz
adc
lea
adc
jns
push
jmp
mov
movb
add
ficoms
cmp
sbb
loope
jne
add
cmp
movsl
test
adc
pop
mov
das
or
mov
sub
or
and
les
test
dec
fdivs
inc
out
sbb
pop
pop
pop
dec
ret
add
cmp
mov
push
in
in
popl
xor
mov
jmp
rorb
pop
mov
jno
fisubs
dec
pop
aaa
rcll
push
outsl
mov
push
stos
sbb
fidivrs
add
insl
push
and
js
jo
xor
sbbl
add
loop
test
pop
mov
out
aaa
jno
mov
loope
mov
jo
loopne
fwait
pop
mov
mov
test
xor
js
mov
cmpsb
pusha
in
outsb
mov
js
xor
sub
imull
iret
inc
adc
sub
dec
mov
and
adc
out
addr16
push
nop
sub
ret
sbb
shrl
in
jle
push
dec
test
loopne
cmp
ss
or
or
or
cmp
cmp
cltd
test
jnp
and
jne
mov
push
dec
roll
mov
mov
out
pop
mov
test
pop
mov
pop
push
aas
jmp
aad
mov
xchg
push
mov
iret
rcll
bound
scas
jp
jle
xlat
hlt
mov
mov
mov
imul
inc
pop
cmp
xor
sbb
lea
aas
adc
mov
jp
insl
dec
jmp
inc
sbb
sbb
mov
or
mov
jbe
cmp
dec
loope
bound
add
mov
sbb
or
in
xor
or
daa
jne
fildll
lock
ss
push
pop
lods
stos
mov
adc
adc
adc
cmp
lods
adc
xorb
or
enter
notb
dec
lock
das
adc
adc
shll
push
push
cmp
or
mov
jl
pop
imul
or
cltd
fcompl
in
movsl
sub
cmp
lea
loop
mov
in
or
dec
add
mov
mov
xchg
mov
pop
jb
lds
mov
loope
aas
leave
sahf
movsl
ljmp
gs
jb
pop
pop
pop
sarb
fnstsw
clc
loop
push
dec
sahf
mov
xchg
xchg
or
jl
add
loopne
sahf
mov
test
jne
insb
mov
loop
pop
rcrb
push
xchg
xor
std
jle
es
push
mov
js
mov
fmulp
sub
cmp
addr16
add
ljmp
pusha
and
or
push
xor
xchg
or
pop
sub
adc
std
sahf
insl
lea
push
test
lahf
sub
jmp
loop
mov
and
fs
test
add
shlb
mov
mov
sub
push
cmpsl
pop
ret
push
pusha
add
mov
cwtl
xchg
mov
cmp
pop
aad
sahf
je
loopne
cld
sbb
sub
test
mov
mov
xchg
scas
push
nop
sar
imul
add
insb
dec
inc
loopne
stos
pop
mov
jno
ss
mov
das
add
inc
dec
es
adc
push
enter
pop
push
pop
dec
mov
sbb
andb
cld
icebp
test
cmp
pop
adc
sbb
adcl
sbb
movsb
sbb
xor
scas
je
push
pusha
loopne
jp
arpl
pop
enter
or
inc
hlt
popa
inc
notb
mov
ret
popa
push
addr16
std
push
mov
cmp
inc
cmp
aam
sbb
xlat
add
insl
adc
int
sbb
cmc
jo
sub
sbb
mov
mov
dec
ret
sbb
pop
pop
push
mov
lcall
frstor
shll
mov
cmp
inc
dec
add
mov
adc
loopne
hlt
fistl
aaa
dec
push
pop
sbb
inc
rolb
enter
jnp
or
into
sbbb
dec
mov
push
lahf
mov
daa
dec
jl
std
pop
and
push
sarl
ret
dec
mov
mov
cltd
sahf
push
xchg
push
scas
push
mov
sqrtps
cmc
xchg
aas
testl
adc
sbb
sub
pop
sarl
xchg
cld
in
cwtl
adc
mov
jbe
xor
aad
shlb
loop
pusha
aam
ljmp
lds
fdivs
les
movl
dec
dec
dec
mov
mov
pop
scas
xor
jne
mov
mov
cld
jne
lock
mov
jae
or
pop
leave
stc
fldt
cmp
and
pop
sbb
loop
jbe
mov
inc
shr
and
lock
dec
jnp
ret
push
jl
out
and
add
dec
or
inc
sbb
ljmp
dec
cld
ds
ret
movq
dec
lods
jmp
pop
in
xor
movsb
mov
pop
xchg
ljmp
push
js
adc
dec
stos
jle
adc
xchg
lret
inc
repz
pop
xor
ret
push
outsb
xchg
mov
jg
cmpsb
mov
xchg
fsts
mov
inc
and
lds
add
inc
inc
les
mov
aad
je
fwait
hlt
xor
inc
add
cmpsl
daa
add
adc
sbb
sbb
lea
movsb
adc
xor
loopne
lods
sbb
jge
arpl
ret
aam
orb
test
xchg
adc
hlt
popf
out
aaa
jne
cmp
adc
jl
jns
sub
out
fwait
out
jmp
dec
shrb
push
and
enter
movhps
clc
inc
dec
orl
fildll
push
cmp
dec
std
stc
xor
dec
xor
cld
sti
xchg
and
imul
push
jge
push
ja
push
lret
call
inc
jl
icebp
popf
aaa
test
mov
aaa
push
mov
incl
scas
es
xor
daa
stc
jo
pop
dec
jns
js
test
adc
outsl
add
popl
call
leave
es
or
cmpsb
push
inc
push
insl
out
xchg
xor
out
xchg
ljmp
jge
sti
mov
add
mov
inc
push
cmp
out
inc
jnp
xor
mov
shlb
add
sbb
ret
mov
cltd
das
add
inc
jnp
add
inc
cli
movsb
jbe
call
cltd
xchg
mov
pop
mov
in
test
xor
in
mov
call
xor
adc
lea
test
rolb
xchg
aas
sub
lock
adc
stos
xchg
js
fisttpl
popf
sbb
pusha
add
stos
or
loop
pop
sub
push
mov
test
scas
or
jecxz
addr16
test
lods
sub
jp
xor
ret
and
add
lahf
mov
mov
dec
dec
repz
add
icebp
pusha
push
add
fidivs
inc
push
cmp
xchg
aas
scas
pop
mov
xor
mov
push
xor
mov
iret
mov
loopne
sar
enter
xor
shrb
mov
sti
jmp
mov
fmul
mull
roll
cmpsl
or
addr16
fidivl
jo
and
dec
adc
inc
ja
mov
imul
xor
adc
cmc
aam
fwait
and
add
fbld
out
add
pop
pop
xor
es
or
cmpsb
xor
rdmsr
scas
and
or
cli
inc
ss
sub
arpl
push
xor
xlat
test
daa
je
mov
ja
dec
dec
xchg
rolb
sub
mov
add
loope
nop
pushf
lock
pop
stos
es
xor
sub
and
jecxz
sbb
movsl
gs
and
addr16
cli
sbb
loop
hlt
int3
leave
mov
sub
and
jge
pop
repnz
cmp
push
mov
cmp
mov
sub
cmpsb
jbe
push
test
mov
mov
sbb
mov
push
test
add
stos
jb
jns
push
daa
mov
movsl
inc
rcll
jmp
and
xor
adc
adc
shll
and
rcrb
out
push
jp
pop
cmp
fbld
lcall
mov
sbb
popa
add
add
outsb
sub
mov
inc
cmp
mov
movl
xchg
les
adc
push
or
xor
ja
cwtl
dec
push
testl
push
addl
or
cmp
xchg
vpunpcklwd
mov
aad
aas
rcrb
inc
push
jecxz
fisubs
dec
dec
dec
add
insl
inc
pop
pminsw
cmp
js
subb
out
stos
je
xor
or
enter
xor
xchg
sub
jl
pushf
and
xchg
aad
xor
js
add
nop
loop
fnstcw
rcl
in
cmovp
pop
adc
add
add
and
daa
lock
cmp
add
in
fwait
mov
push
ret
cmovg
xlat
jbe
fs
push
pop
mov
mov
and
out
sbb
sub
movsb
dec
mov
je
imul
clc
sysenter
out
jo
or
xchg
adc
dec
pop
shl
test
fistl
sub
cmp
mov
sub
push
mov
jnp
mov
ja
xor
xor
data16
outsl
cmp
mov
jne
adc
dec
shlb
inc
mov
or
ljmp
mov
add
mov
xor
movl
pop
in
out
js
push
scas
adc
or
xchg
jmp
cli
add
inc
in
dec
scas
enter
aam
clc
push
xor
repz
adc
fcomps
inc
mov
push
sbb
sbb
xor
sbb
negb
arpl
pop
fstps
mov
mov
icebp
sub
jo
sbb
inc
test
shll
pop
ffreep
out
mov
pop
inc
rcrb
scas
or
mov
mov
lret
ja
inc
dec
jno
jp
bound
insb
and
pop
and
dec
aaa
mov
add
jno
dec
shr
pop
popf
jecxz
xlat
add
add
adc
pop
fsts
xor
sub
cmp
push
and
cwtl
int3
xor
or
mov
cli
loopne
push
sbb
imul
push
sbb
inc
and
loope
mov
or
xchg
aaa
pop
jp
mov
mov
cmovo
xchg
add
sbb
fucomp
subl
lock
dec
xchg
xor
cmp
bound
fidivrs
dec
and
jge
or
daa
jecxz
mov
xor
sbb
lahf
cmp
lds
fldcw
in
push
sbb
xchg
jo
push
add
insb
mov
scas
fstpl
and
xchg
pusha
pop
outsl
movsb
cltd
xchg
dec
int3
or
inc
jnp
nop
cmc
mov
xchg
ret
xor
mulb
mov
jno
imul
cltd
movsl
mov
sub
add
loop
mov
mov
test
jo
js
and
adc
mov
lock
cmp
shrb
add
call
pop
cmp
fldl
ret
dec
mov
addb
data16
inc
dec
outsl
xor
iret
push
or
and
or
push
das
test
outsb
add
inc
fiadds
sbb
cmp
imul
insb
sarb
jle
inc
gs
jne
stos
out
adc
add
divl
inc
jmp
cmp
test
or
rol
push
pop
insl
adc
sahf
dec
xor
fiaddl
mov
or
push
inc
int
mov
aas
icebp
or
pusha
dec
add
shll
push
daa
cs
pushf
outsl
inc
dec
push
dec
mov
jmp
add
push
mov
mov
mulb
repz
and
jae
pop
shl
cmp
inc
dec
inc
sub
mov
call
das
lods
inc
inc
add
test
in
shl
jo
repz
xor
or
clc
mov
mov
rcll
insb
push
add
push
or
pop
out
adc
pop
pop
clc
cli
out
mov
mov
test
mov
adc
ret
fimull
sub
push
adc
add
jnp
mov
sti
dec
inc
push
cmp
adc
adc
lock
and
unpckhps
or
cmp
mov
mov
adc
push
enter
mov
xor
adc
mov
stc
cmpsl
mov
push
ret
bound
sub
ret
outsb
jnp
mov
or
dec
sub
addr16
pop
jl
mov
push
inc
out
cld
mov
lret
data16
ret
xor
inc
sbb
mov
outsb
inc
inc
xor
sbb
andl
int
push
das
adc
xchg
das
loop
mov
adc
icebp
dec
loopne
ja
int3
ss
mov
push
leave
pop
push
mov
lock
lock
imul
ret
sbb
ret
mov
and
aam
aas
decl
in
lds
xlat
xchg
lods
lret
adc
enter
push
push
cmp
dec
sbb
femms
pop
adc
push
outsb
jle
cmpsl
mov
push
mov
lea
mov
cs
dec
or
add
xchg
lret
push
xchg
call
mov
pop
loope
and
cmp
clc
cmp
add
bnd
ret
push
lods
and
add
fsub
cmp
sbb
inc
push
je
dec
cmp
push
mov
sbb
cmpsb
sahf
mov
or
dec
js
add
cmp
xor
jecxz
mov
cmc
test
orl
scas
rclb
pop
mov
pop
push
stos
cwtl
movsb
or
jmp
jnp
fisubl
pushf
mov
jecxz
jmp
loop
mov
stos
faddl
dec
clc
fisubl
dec
jo
fsub
shll
add
movl
push
sbb
fdivrs
test
and
mov
aas
pop
imulb
dec
sbb
mov
packsswb
mov
ret
sbb
sub
scas
enter
shrb
shrb
popa
cwtl
mov
ret
mov
shl
adc
jg
cwtl
jl
call
push
xor
adc
mov
fwait
scas
and
inc
in
sub
lret
or
daa
ds
ja
movsl
lahf
movsb
jno
sub
pop
push
push
or
adc
lds
movsb
cmp
dec
clc
inc
cwtl
xchg
iret
nop
adc
test
adc
sbb
or
in
cmp
out
mov
push
xor
xor
push
push
xor
dec
push
dec
fstp
movl
xchg
mov
sti
dec
mov
pop
adc
scas
test
lret
pusha
inc
nop
mov
js
stos
xor
jge
notb
sbb
add
adc
pusha
fidivrs
mov
arpl
bnd
lds
pop
stc
fs
sub
mov
out
push
cmp
mov
sbb
adc
imul
loope
jae
jno
jmp
das
call
insb
rcll
ret
movsb
push
xor
lock
andl
loope
jo
lcall
adc
xchg
rorb
cli
mov
mov
aam
lods
pushf
ljmp
mov
shlb
ret
cmpsl
pop
mov
sbb
sbb
mov
adc
cmp
mov
inc
insb
test
scas
das
decb
fwait
lock
inc
jae
pop
cmp
push
push
add
jns
pop
or
push
repnz
int
rclb
add
jmp
insl
cmp
shlb
push
rorl
ja
adcl
jbe
sbb
mov
jmp
mov
adc
nop
inc
lea
jb
jnp
pop
mov
inc
or
jecxz
stos
nop
push
loopne
sbb
cltd
add
je
xchg
push
dec
push
sub
adc
dec
dec
out
out
pop
rcr
stos
inc
pop
ds
push
setg
mov
push
sbb
cmp
push
add
cs
out
jnp
inc
adc
sub
into
in
loopne
mov
lret
mov
int
add
fdivrs
sti
mov
mov
add
mov
adc
mov
or
add
ficoml
or
loop
cmp
popa
and
pop
jmp
lock
rcr
outsb
mov
cld
cmp
add
ss
gs
push
sub
pop
lock
mov
jl
andb
mov
xor
adc
jnp
mov
test
inc
adcb
loop
lods
pop
scas
push
and
aam
jmp
sub
sbb
inc
movsl
shrb
mov
test
or
sarb
push
data16
repz
xchg
xor
icebp
lret
push
sub
adc
fimuls
jnp
repz
inc
cltd
mov
fsubs
fistpll
aad
movsl
xchg
jp
and
imul
or
rcrl
ror
xchg
sbb
add
xor
mov
mov
and
ret
jle
pop
ds
cmpsl
insb
imul
shrb
mov
jl
fsubp
push
repnz
mov
and
and
jbe
push
movsl
add
adcl
call
dec
adc
popa
scas
dec
sbbb
jg
loope
pop
add
sbb
push
lods
rolb
xchg
je
or
inc
data16
aad
iret
mov
cmp
push
mov
in
imul
push
mov
dec
shlb
cmp
insb
mov
mov
das
xchg
out
cmp
pop
cld
les
fldt
mov
je
in
sbb
out
ret
cmp
sbb
in
sbb
push
lods
mov
push
mov
fadds
or
and
lods
mov
jns
cmpsb
xor
xchg
nop
sbb
pop
jbe
or
mov
adc
insb
xchg
mov
adc
pop
push
sbb
imul
popf
push
fwait
ret
pop
std
lahf
push
cmp
or
adc
les
xor
loopne
mov
aad
adc
mov
or
lds
mov
add
add
mov
sub
mov
mov
mov
inc
jnp
imul
imul
xchg
xor
fcoms
leave
and
sub
aad
sub
cmp
and
ret
popf
jbe
sbb
pop
push
dec
cmpsl
cmp
enter
mov
pop
cmp
pop
pop
loopne
or
push
xor
xchg
pop
sbb
push
cmp
leave
or
shlb
adc
pusha
outsl
outsb
rorl
inc
sbb
xchg
aam
dec
mov
lock
stc
je
shll
icebp
fwait
jp
inc
cs
mov
and
jno
adc
push
pop
scas
bound
adc
int3
mov
xor
rclb
jne
roll
xchg
cmp
sbb
fidivrs
jl
mov
push
scas
shlb
or
lret
movsb
lahf
enter
mov
movsb
shrl
and
jecxz
pop
adc
int3
ret
int3
xchg
push
sub
dec
dec
ror
js
cmpsb
push
mov
lahf
xor
mov
pop
ret
mov
or
jecxz
or
gs
inc
js
mov
mov
in
movsb
sub
adc
mov
pop
test
dec
mov
push
lret
xor
loope
outsb
jns
pop
pop
jbe
lock
sub
stos
sbb
out
xorb
mov
gs
pop
test
jbe
leave
int3
lock
adc
xlat
scas
loopne
icebp
push
push
sbb
fildll
mov
inc
and
addw
repnz
cmp
addl
push
push
cmpsl
pop
or
mov
push
fdivrs
call
adc
jo
mov
inc
jnp
add
adc
sti
fildl
cmp
mov
or
gs
dec
stc
xchg
inc
or
stos
ss
or
scas
dec
arpl
cltd
adc
pushf
aaa
cmp
inc
loope
lret
movsl
lock
inc
mov
test
repz
xor
sbb
daa
push
loopne
inc
jle
pop
subb
mov
and
js
das
or
add
lcall
xor
lock
js
imul
and
lcall
int3
loope
aam
insl
push
push
mov
jae,pn
jo
mov
mov
sbb
adc
sbb
call
jge
cmp
xor
cmp
das
lods
das
sar
or
test
pop
dec
or
sub
aas
jae
adc
mov
adc
mov
je
add
lods
add
jge
stos
inc
mov
xlat
cmp
push
jg
inc
or
mov
sub
rcrb
push
insl
inc
fiaddl
mov
xlat
mov
shr
xor
xlat
mov
jno
rcl
nop
mov
sub
mov
and
das
icebp
mov
cli
cli
add
popf
pop
push
ret
rcr
pusha
aad
adc
cwtl
push
js
data16
movsl
jle
jbe
test
push
cmp
dec
rcrl
push
xchg
clc
dec
mov
push
jno
bound
xor
pop
pop
in
decb
sub
rorl
pushf
or
lock
xor
or
inc
inc
or
cwtl
xor
dec
clc
push
jae
in
xchg
cld
outsb
xor
mov
xchg
push
fistpll
sbb
cmpsl
bound
je
push
call
int
push
mov
xchg
cmc
test
scas
jp
lods
stos
popa
sbb
cmpsb
test
mov
or
test
pusha
xchg
sub
xor
je
cmp
mov
sbb
push
jecxz
push
nop
je
notl
xor
cmc
jb
inc
or
psubd
daa
lods
pop
adc
fsubr
fwait
rclb
xor
jb
test
shrl
sbb
pop
mov
popf
fisttpll
aad
mov
fcmove
cli
fisubl
movsl
mov
xchg
sbb
push
sbb
add
loopne
hlt
ds
sbb
adc
sub
jnp
shlb
inc
inc
divb
bound
pop
rorb
push
imulb
icebp
adc
sbb
cmp
imul
cli
inc
imul
add
cmp
fsubrl
cld
sbb
xchg
cmpl
xlat
ljmp
icebp
cmp
repz
sarb
add
add
mov
mov
mov
or
cltd
lds
add
jle
test
and
loop
fsubs
lods
push
loopne
test
call
or
pop
cmp
ja
pop
lock
cmp
imul
cmp
push
mov
or
xor
and
mov
add
and
cwtl
ret
adc
push
cs
sbb
dec
loopne
clc
test
pop
pop
jl
sahf
aas
shrb
in
scas
inc
call
jmp
rcrl
cltd
subb
sahf
dec
stos
or
lock
xchg
ret
mov
mov
fimull
out
xor
inc
push
mov
loop
pop
push
xchg
inc
push
call
inc
cmp
mov
jb
hlt
rolb
cmpsb
push
hlt
push
and
jno
cmp
les
mov
mov
es
xchg
push
aad
mov
jle
sub
adc
test
clc
jae
into
or
nop
jecxz
loop
push
std
ja
sbb
add
push
shrl
add
sub
out
xchg
cmp
fiaddl
xchg
iret
gs
mov
or
mov
mov
mov
lock
call
mov
cld
jns
adc
dec
jne
dec
and
shll
add
ss
jne
sub
and
loop
inc
daa
add
ljmp
insl
push
je
and
movsb
mov
aam
mov
mov
enter
subb
and
mov
das
sbb
mov
inc
push
sub
adc
jne
xchg
mov
add
sub
js
xchg
lahf
lea
pop
or
xor
lock
insl
cmp
or
mov
loope
das
mov
dec
iret
out
mov
gs
je
cmc
or
sbb
js
icebp
roll
push
loop
xchg
push
sub
add
subb
add
dec
mov
sbb
and
scas
pop
je
dec
out
mov
nop
out
scas
mov
in
fbstp
push
gs
imul
or
loopne
dec
or
sbb
movsb
enter
jp
sbb
dec
pop
jne
movb
xor
sti
icebp
sarb
and
inc
mov
mov
jbe
sub
sbb
out
push
ret
stos
adc
je
lcall
cwtl
add
mov
sbb
ret
adc
mov
sub
xchg
into
push
fsincos
pop
fidivrs
mov
xlat
and
fistpll
stos
enter
es
test
std
push
cmp
cmp
add
int
xor
adc
add
sub
mov
add
sub
into
aam
pop
loope
add
rsqrtps
shl
loopne
or
and
push
pusha
ljmp
movb
fdiv
repz
mov
mov
xlat
lret
lods
pop
push
mov
out
notl
xlat
xchg
loop
sub
cmp
jmp
push
pop
test
aad
daa
xchg
xor
or
mov
push
fwait
imul
rolb
xchg
and
xorl
adc
divl
sub
pop
fwait
loope
pop
jp
pop
pop
cmpsb
dec
addr16
in
bound
push
outsl
mov
push
jo
jno
fdivr
mov
ds
pop
loopne
pop
movsb
fiaddl
xor
test
cld
out
dec
dec
out
mov
pop
and
and
enter
sbb
mov
jmp
push
pushf
punpckldq
jecxz
adc
mov
sbb
adc
cs
xlat
adc
pop
xor
inc
mov
adc
clc
and
popf
add
mov
cs
cmpsl
pop
adcl
in
mov
cmp
pop
test
cmp
cs
mov
ja
jae
loop
xor
out
mov
dec
pop
mov
pop
pop
or
push
jnp
add
mov
xchg
sbb
push
ds
jg
push
lods
cmpsb
jb
rol
adc
loop
pop
xchg
or
jmp
mov
or
mov
cmp
jno
mov
xchg
lods
jns
leave
push
sub
push
pop
sarb
je
jne
add
sbb
gs
test
arpl
cli
flds
aas
jae
in
andb
dec
sbb
xorl
movsb
aaa
or
mov
outsb
pop
std
rclb
data16
sbb
push
adc
mov
xchg
popa
frstor
punpckhbw
cmp
imulb
and
or
sub
jno
mov
movsb
mov
cmp
mulb
testl
orl
mov
into
jle
mov
lods
mov
mov
inc
icebp
sbb
fisttpl
inc
xchg
add
mov
mov
adc
ret
mov
xchg
dec
popa
adc
add
insl
mov
aam
xchg
addr16
or
jle,pt
sbb
jg
test
sbb
sti
imul
daa
add
mov
mov
ja
add
fiaddl
outsb
cltd
inc
dec
or
mov
stos
xchg
cli
dec
add
inc
pop
test
or
xchg
js
mov
popa
call
iret
xlat
cld
sbb
and
sub
in
sbb
ret
jne
dec
js
nop
aad
int
add
xor
arpl
sub
cmpsl
hlt
std
mov
out
arpl
ss
cs
pusha
negb
rorb
add
push
popa
xorb
mov
jmp
and
pop
mov
lods
lret
mov
gs
cld
mov
mov
mov
xor
rol
int3
pop
test
into
es
jl
cmpsb
jle
sbb
pop
or
loop
xor
mov
mov
inc
js
dec
xchg
mov
mov
inc
pusha
mov
int
mov
std
xor
inc
cld
mov
test
subl
mov
mov
inc
mov
repz
inc
repz
add
or
cmpsl
xchg
adc
testl
lret
in
dec
push
lcall
aaa
popa
dec
std
shlb
fisubs
pop
ret
lahf
ss
adc
pop
jbe
imul
mov
jp
mov
mov
addl
mov
or
ds
inc
cmp
mov
sahf
adc
shl
in
aam
ret
cmp
movsl
sahf
sbb
test
jmp
xor
cmp
insb
pop
movsl
cmp
push
mov
push
mov
dec
mov
sub
gs
movsl
push
jle
decl
mov
mov
cmpl
mov
jo
jb
cmpsb
sar
fadds
orb
test
out
push
jle
push
xlat
lock
ds
add
arpl
sub
push
mov
or
ret
mov
gs
mulb
add
xor
inc
mov
add
and
pop
inc
mov
sbb
fmul
mov
or
js
notb
push
cmc
pushf
test
or
sbb
lods
aam
pop
add
push
cmp
popf
js
mov
xlat
lea
aas
arpl
andb
icebp
jle
mov
inc
push
push
adcb
push
mov
dec
hlt
xor
sub
mov
sub
loop
test
ds
bound
cli
lret
int3
sbb
pop
popf
bound
lret
jl
sub
xchg
in
fadds
lods
aas
inc
adc
arpl
xor
push
jge
scas
and
shll
sahf
jne
arpl
cmp
pop
pop
mov
cmp
stc
sbb
fcoms
in
adc
pop
push
lods
rolb
pop
xchg
mov
hlt
and
sbb
test
shr
or
push
into
add
sbb
xchg
jns
push
lock
sub
and
pop
inc
push
add
jecxz
cltd
or
shlb
or
pop
clc
inc
xchg
fimull
mov
jge
popf
xchg
push
inc
lock
inc
and
enter
or
pushf
pop
mov
lret
call
push
test
call
add
pop
pop
rorl
mov
or
adc
int
mulb
adc
sub
ret
cmpsl
mov
imul
xor
dec
xchg
pop
adc
xlat
negb
cs
sub
mov
sbb
sbb
std
sbb
aaa
shl
mov
mov
add
mov
call
mov
cmp
mov
cwtl
fcmovb
ret
mov
or
orb
lret
xchg
adc
cmp
pop
mov
imul
xchg
push
inc
add
insb
int
test
cld
lcall
cmp
add
push
inc
cmp
push
xor
hlt
mov
inc
test
xchg
inc
xchg
sub
je
pop
push
lahf
sar
cwtl
pusha
add
xchg
sahf
andb
pop
aam
rcrb
pop
xor
jne
xorl
test
lcall
jle
jnp
xchg
mov
mov
scas
rolb
jae
les
fisubs
pop
cmp
push
add
adc
or
es
fnstenv
and
mov
lock
or
and
push
mov
mov
sbb
and
and
and
inc
xor
fcmovb
cmp
inc
arpl
mov
dec
jp
sub
pop
movsl
xorb
std
outsb
add
inc
dec
jae
adc
mov
hlt
ret
int3
ficoml
pop
movsb
ss
lea
sbb
scas
rcrb
adc
pushf
pop
pop
push
mov
imul
rcrl
fisttps
xor
rolb
jbe
loop
fs
xor
fmuls
xor
adc
cmp
nop
xor
test
jp
jb
aaa
repnz
push
jbe
push
xchg
pop
in
cmp
and
imul
push
adc
push
sbb
mov
pop
jmp
sub
push
jp
mov
push
xchg
cmpsb
scas
push
sbb
pusha
jecxz
sbb
mov
xor
out
cli
adc
jge
outsl
inc
sbb
cwtl
adc
jbe
das
fcoms
push
subb
push
mov
push
inc
test
imul
aam
mov
jl
inc
dec
insl
fwait
mov
inc
in
sub
xor
clc
cmpsb
test
and
add
cmpsb
mov
sub
mov
test
and
mov
lahf
xchg
push
pop
insb
jg
mov
or
jl
or
cmc
dec
pushf
dec
push
add
insl
cs
aad
icebp
mov
xchg
adc
aad
mov
push
inc
and
das
pop
les
test
jo
ja,pt
dec
add
xchg
bound
sarl
mov
jl
shlb
loop
jl
and
mov
fs
icebp
jp
aaa
lods
push
call
shlb
iret
mov
dec
inc
fists
cmp
sub
or
xchg
vcvtss2si
dec
add
push
mov
push
add
inc
lods
mov
mov
ljmp
inc
pop
test
or
sbb
loop
rep
imul
popa
xchg
or
pop
fwait
push
scas
mov
aaa
mov
inc
adc
out
rol
cmp
adc
pushl
pop
push
mov
jo
adc
sub
mov
cltd
lcall
push
lret
dec
fstp
mov
outsb
repnz
add
pusha
test
push
ja
test
sub
mov
adc
inc
push
cwtl
cli
add
xchg
repz
in
leave
push
mov
clc
pop
hlt
cld
inc
mov
inc
ret
lock
ljmp
sub
push
out
push
add
outsl
push
popf
jo
sub
rorb
mov
vlddqu
lret
inc
in
decb
sar
push
xor
ret
js
iret
pop
adc
push
mov
ret
cmpsl
fistpl
ret
nop
sub
fisubs
cmp
pop
or
js
stos
cmp
in
insb
mov
sbb
dec
aad
bound
sbb
xchg
or
out
ljmp
xchg
pop
enter
in
rcrb
cld
pop
mov
scas
push
mov
mov
or
lock
push
ja
idivb
push
add
lahf
jp
fldt
fs
inc
lods
rcrb
mov
pop
in
inc
dec
or
sbbb
xchg
lock
xor
sahf
ss
out
ja
pop
cmp
dec
inc
loopne
and
js
fdivrs
mulb
mov
lods
adc
rcrl
jae
push
mov
roll
fcomps
xchg
mov
inc
scas
daa
js
cli
shrb
push
lock
adc
mov
sarb
inc
repnz
push
xlat
out
xor
or
std
vmwrite
mov
rolb
insb
pop
inc
idiv
fisubrl
lcall
mov
popl
decl
scas
mov
dec
shll
mov
xchg
cwtl
add
shrb
mov
pusha
add
dec
in
aas
daa
test
cld
out
push
les
and
mov
add
pop
movsb
xor
aam
pushf
mov
pop
fcomip
dec
int3
dec
mov
scas
push
sarl
jne
pop
inc
jmp
jnp
mov
jnp
push
push
mov
orb
mov
mov
or
fstl
xchg
cmp
pop
loope
mov
adc
and
and
clc
enter
xchg
mov
dec
lahf
sbb
and
pop
and
push
mov
add
loopne
shll
and
scas
jl
fwait
sub
aaa
lea
gs
xchg
pop
or
int3
inc
jmp
inc
dec
sub
sbb
insl
inc
imul
push
and
out
fnsave
xor
add
enter
fs
push
mov
movsb
adc
mov
and
test
adc
jae
daa
mov
push
addr16
push
call
push
js,pt
inc
js
mov
xchg
dec
or
jg
mov
jge
inc
mov
pop
in
add
lods
fs
sub
xor
jg
adc
fsts
xor
dec
mov
incl
or
or
ss
jl
movsb
xor
ret
or
adcw
pop
nop
push
nop
mov
pop
adc
mov
neg
add
int
arpl
mov
mov
insb
adc
inc
ds
arpl
adc
mov
adc
lahf
jb
cmpsb
cmp
or
rcrb
mov
int3
sbbl
sub
roll
ss
jge
subb
hlt
sahf
jne
je
pop
cmc
test
xlat
jb
loop
xor
or
lods
aad
idivb
sar
enter
mov
mov
test
push
mov
xchg
fcmovbe
xchg
sbb
repz
mov
pop
sub
pushf
sbb
pop
or
inc
lods
lods
or
xchg
or
dec
aad
sahf
xchg
popa
xchg
sub
inc
out
pop
fcoms
jo
sbb
stos
fcmovbe
loop
sub
add
dec
stos
push
jmp
inc
lds
push
shlb
stos
sub
idivl
insb
mov
xchg
pusha
pop
inc
jle
mov
and
dec
mov
xchg
jle
fidivrs
in
adc
loope
aad
jbe
jecxz
inc
lea
lret
dec
pop
rcl
jp
stc
pop
outsb
test
jge
gs
jl
push
cmp
dec
stos
jne
into
mov
shlb
push
xchg
lods
and
add
bound
rolb
mov
test
and
jl
xchg
shlb
sbb
int
sar
sub
inc
lahf
mov
cmp
fildl
insl
push
in
xchg
call
dec
pop
mov
and
mov
scas
fldt
popa
push
loopne
sbb
or
xchg
push
dec
call
mov
or
xchg
push
push
aaa
xchg
add
fnstsw
jb
mov
sub
dec
adc
mov
inc
xchg
fs
scas
pop
cmp
mov
fwait
into
xor
jg
inc
pop
test
xchg
add
loopne
outsl
pop
loope
mov
jl
dec
movsl
scas
xor
or
pop
inc
xchg
adc
mov
mov
dec
xchg
jnp
cmp
push
gs
lods
pop
rcrl
movsb
fiadds
jo
js
cmp
xor
mov
inc
leave
inc
enter
mov
jnp
mov
mov
imul
aas
add
add
jle
mov
mov
shll
jg
fcoms
lret
sub
mov
jno
sub
cmp
adc
add
xor
ret
dec
cli
cmp
push
mov
cmp
hlt
call
das
or
lahf
sahf
push
push
out
mov
mov
stos
lea
or
les
sub
arpl
adc
nopl
mov
aaa
stos
lock
mov
pop
cmp
outsb
dec
sbb
outsl
push
loop
pop
stc
inc
inc
mov
hlt
dec
ljmp
inc
int3
mov
dec
pop
xchg
call
in
mov
mov
ret
or
fimull
mov
mov
ds
lods
fnop
and
ja
fisttpll
lcall
cmpsb
lock
loope
out
mov
jo
scas
call
outsb
mov
dec
js
mov
fstpl
pop
int3
jnp
cmp
push
jp
or
xchg
mov
imul
roll
nop
xor
push
mov
sub
les
out
out
je
mov
nop
hlt
jl
call
stc
mov
cli
jecxz
dec
cmp
imul
push
stos
shlb
mov
icebp
fstl
and
mov
out
ficoms
and
cmp
cmpsb
inc
scas
or
mov
and
stos
out
hlt
rol
push
lock
inc
or
mov
jo
push
cmpsb
jp
aam
and
aas
sub
xchg
fnstsw
inc
mov
fiaddl
test
xor
arpl
pop
mov
or
dec
ficoms
jo
outsb
and
pop
arpl
popa
mov
subb
push
aam
cmpsl
adc
mov
into
pop
xlat
pop
sub
xorl
nop
sub
sahf
clc
add
cmc
loope
addr16
icebp
xchg
mov
push
cmp
loopne
pop
jb
popa
mov
clc
fidivrs
mov
sbb
push
pop
xor
mull
enter
mov
cmc
sarl
jae
sahf
out
lods
sbb
sub
add
mov
mov
adc
adc
in
aaa
ret
and
mov
inc
xor
xchg
popa
pop
jae
dec
fsubs
subl
insl
jmp
lock
js
cli
xor
mov
mov
cmp
out
inc
loopne
jne
push
push
mov
mov
je
call
les
adc
shlb
dec
inc
add
xchg
add
aam
sub
or
sti
loopne
and
movb
icebp
sub
cli
cwtl
sahf
lods
fwait
jle
add
jl
jne
shll
lahf
ret
arpl
adc
mov
sarb
inc
enter
in
data16
cltd
mov
push
insl
add
iret
adc
es
cs
xchg
pop
pop
add
imul
imul
cmc
xchg
mov
ja
sbb
fcmovb
adcb
push
push
js
add
jae
outsb
add
test
and
push
sbb
and
jmp
inc
jmp
sbb
js
out
adc
lret
das
rolb
test
push
rolb
scas
sbb
scas
aad
lret
cwtl
ret
add
xchg
into
and
jne
mulb
out
and
call
jno
push
dec
bswap
and
jp
inc
add
loopne
pushl
cli
xchg
pop
sarb
mov
sbb
lock
sbb
sub
daa
scas
mov
push
sub
mov
jno
push
outsb
add
pop
mov
jge
rcrl
pop
mov
adc
and
in
push
clc
ss
int3
cmp
cmp
stos
adc
rol
bound
ret
cltd
dec
push
ss
pop
pop
stc
into
loope
sahf
mov
xchg
add
mov
cmp
fcmovu
jmp
in
test
xchg
filds
rcr
mov
xchg
dec
addb
dec
jne
push
out
adc
in
cmp
inc
xor
lea
inc
mov
add
mov
mov
aam
test
bound
push
rolb
insl
mov
loope
mov
sbb
sub
aad
subb
mov
std
sbb
es
xor
or
add
aad
sbb
dec
inc
pop
cmp
movsb
in
add
subb
or
sub
adcl
daa
leave
data16
push
inc
push
push
lds
sub
add
rorb
sti
pop
push
mov
mov
lods
sarb
ret
subl
loope
movsb
daa
inc
cs
mov
xor
std
jo
sub
mov
cli
call
inc
or
iret
out
inc
add
jo
mov
push
sbb
icebp
push
mov
push
fdivrs
mov
dec
popf
pop
sub
sub
ljmp
rorl
clc
pop
pop
mov
xor
pop
pop
push
xchg
shr
loop
push
test
ljmp
lods
xor
jp
les
xchg
dec
roll
adc
loopne
sub
js
xchg
push
inc
push
push
iret
mov
incb
movsb
xchg
cmp
outsb
and
inc
lcall
xor
inc
scas
push
mov
clc
scas
mov
xchg
jecxz
pop
icebp
stc
insl
out
jmp
adc
lods
sbb
loop
loope
jae
aad
pop
cmp
lock
rcr
mov
jl
fcoml
aas
jp
xchg
rclb
sbb
aas
jle
push
push
xor
jp
jo
jo
pop
adc
and
dec
cwtl
push
out
push
pop
in
pop
std
cmpsb
dec
out
pop
mov
and
cwtl
xchg
xor
es
dec
aaa
lea
or
int
pop
stos
rcl
xchg
inc
fadds
adc
jne
xchg
push
lock
mov
pop
movsb
sbb
and
lahf
sbb
in
or
xchg
and
gs
sbb
and
cmpsl
test
and
push
sub
pop
rorb
out
aam
jge
or
or
xor
push
out
lcall
push
cmp
mov
jecxz
xlat
pop
dec
jge
and
mov
dec
push
shrl
mov
stos
adc
jmp
xor
in
and
stos
aam
cmpb
xor
pusha
rcrb
andb
push
out
cmp
mov
sbb
sub
out
int3
mov
shlb
add
mov
adc
adc
mov
add
and
ret
mov
xchg
mov
mov
les
sbb
orl
push
loop
pop
mov
push
pushf
leave
push
in
pop
out
add
stos
ljmp
xchg
xchg
xchg
sub
dec
movsb
into
sub
fwait
je
cmp
rcrl
addb
loopne
cld
sti
stos
out
or
dec
or
and
cmpsl
out
nop
sbb
hlt
hlt
cmpsb
scas
jmp
les
gs
pop
cwtl
lock
ret
push
and
inc
xor
push
mov
sti
sahf
push
sub
jmp
add
and
cli
jne
add
mov
push
out
push
or
xor
ds
fsubl
lods
adc
adcb
mov
pop
inc
sub
stos
xchg
es
pop
int
xchg
aad
movsl
inc
jp
jp
push
xlat
pop
call
cmp
imulb
inc
add
movsl
or
addb
sahf
sbb
shl
addb
mov
pop
pop
mov
fmuls
test
testl
jb
adc
data16
pop
add
mov
out
xchg
xchg
mov
lahf
int3
fldcw
push
scas
outsb
clc
pop
mov
adc
pop
addb
dec
adc
mov
test
or
or
mov
pop
push
jp
fdivs
rclb
push
scas
pop
jecxz
add
xchg
dec
xchg
sbb
and
add
daa
js
xor
xchg
xchg
aaa
loopne
cmp
push
pusha
xor
mov
js
imul
cmp
out
je
push
jmp
mov
ret
jae
dec
cmpsb
ret
inc
pop
lods
enter
xor
inc
adc
add
cli
fbld
mov
mov
out
push
ja
dec
xchg
adc
fs
lcall
inc
mov
add
repz
cli
cmp
decl
test
adc
mov
and
test
lock
or
xor
mov
nop
lods
dec
mov
pop
cltd
xor
ss
jp
stos
inc
mov
push
add
cmpsb
inc
push
out
jp
outsb
xchg
stc
and
fisttpl
push
mov
clc
jne
or
xchg
push
inc
xor
inc
ret
ss
or
loope
outsb
sbb
mov
pop
loope
and
adc
adc
aam
pusha
enter
pusha
mov
adc
jo
cmp
fldenv
xchg
inc
jl
sbb
fdivr
push
push
push
sbb
negl
add
stc
adc
pop
imul
jl
stos
testb
jmp
sub
mov
lret
popa
jge
and
ret
sbb
decl
push
mov
sbb
xor
mov
daa
sbb
cmpsl
sbb
cmpsl
xlat
lret
inc
sub
jmp
lods
repnz
push
bound
mov
dec
mull
leave
enter
jbe
and
clc
dec
cwtl
pop
nop
incl
mov
shrb
inc
xor
and
mov
push
cmp
out
ret
outsb
lea
and
je
mov
add
adc
and
out
cmpsl
pop
jg
test
mov
jbe
cld
andl
add
stc
dec
adc
jne
push
arpl
add
add
inc
cli
test
add
mov
psllw
incl
mov
test
rorb
mov
out
and
pop
adc
movsb
dec
or
sbb
pop
ljmp
movsb
inc
dec
jge
lds
sbb
test
fcmovnb
push
stos
sbb
xchg
dec
dec
enter
jne
sub
jo
mov
inc
sbb
les
arpl
jne
cmpsl
test
pop
inc
pusha
shlb
adc
je
nop
or
test
sbb
push
sbb
fwait
out
mov
mov
ret
push
lret
sub
push
daa
loope
add
pop
add
cmp
mov
mov
mulb
sub
and
or
lea
out
push
fsubrl
mov
push
sahf
add
dec
sbb
inc
mov
xor
loop
mov
xchg
ret
xchg
jo
dec
inc
jg
dec
jmp
xchg
push
push
inc
insl
sub
jbe
sbb
fisubs
and
and
inc
cli
mov
std
mov
lret
hlt
sbb
js
or
mov
roll
loopne
push
or
adc
pushf
push
xchg
push
adc
lcall
and
push
les
out
lds
lock
mov
pop
jmp
in
and
ret
in
xor
push
ss
sub
int3
or
lods
mov
js
and
lret
xor
jo
data16
push
dec
into
mov
adc
push
loopne
push
and
loope
ret
push
push
das
xor
addb
rolb
je
pop
icebp
mov
dec
in
push
dec
lock
in
xchg
pop
leave
push
sub
das
mov
ror
lret
add
add
inc
pop
mov
add
jecxz
dec
test
jecxz
cmpsl
push
loopne
scas
cmpsl
mov
nop
sbb
inc
clc
add
and
mov
mov
jmp
or
js
xor
in
mov
or
jnp
or
mov
push
xlat
inc
cli
mov
mov
dec
push
shlb
pop
or
mov
pop
jle
in
andl
cld
scas
pop
sbb
out
pop
jl
xor
mov
xor
divb
aaa
jle
cld
icebp
shlb
scas
push
push
jae
icebp
inc
push
repnz
cld
js
or
mov
lcall
call
or
fcom
mov
mov
sub
xchg
clc
js
into
or
inc
inc
xchg
lahf
sbb
xor
ss
push
je
test
adc
push
bound
pushf
mov
popa
fmul
jno
adc
xchg
cltd
stc
sti
jb
jae
popa
inc
mov
outsl
and
push
xor
out
push
mov
push
sti
add
imulb
jbe
ret
mov
sbb
in
aaa
jp
mov
sbb
lcall
in
sbbl
sub
mov
pop
mov
and
subb
daa
mov
mov
or
mov
or
jg
cwtl
pop
sub
add
xor
mov
pop
mov
repnz
adc
push
dec
lcall
orl
out
jmp
adc
cmp
pop
rcl
and
int
loopne
movsb
je
mov
dec
xor
mov
dec
movsl
icebp
dec
sbb
jb
pushf
xchg
xor
jmp
scas
jb
out
xor
xor
and
ja
leave
xor
rol
test
lret
mov
cvttps2pi
lcall
icebp
jle
popf
or
sub
mov
jo
and
movsb
fldt
gs
sub
or
in
mov
les
xchg
stos
imulb
add
xchg
cmp
xlat
jmp
loop
push
cwtl
mov
in
insl
nop
lods
cmpsl
loopne
xor
or
and
dec
lods
push
sbb
push
mov
fs
fisubrl
sub
mov
sbb
push
pushf
jg
mov
loop
adc
push
int3
dec
inc
push
notl
mov
sbb
jmp
xchg
test
aaa
loopne
loope
pop
dec
pop
movsl
test
movsb
jo
andl
jg
movsl
jmp
ss
iret
sbb
add
loop
das
adc
sub
mov
push
in
imul
and
scas
or
int
es
clc
mov
gs
pop
pusha
jg
dec
jo
or
lahf
arpl
adc
dec
pop
test
sub
xchg
pushf
cmpsb
cmp
lret
push
mov
int
repz
shlb
push
jns
aam
sbbl
adc
or
and
sbb
jo
orb
mov
push
push
popa
push
mov
inc
and
out
adc
testb
push
push
sbb
sbb
loop
outsl
les
push
shrb
dec
cld
inc
mov
test
mov
scas
pushf
cwtl
or
or
call
sub
lds
int3
add
push
je
cmpsb
addl
inc
pop
les
cmc
inc
jmp
pop
shlb
push
cmp
mov
and
mov
mov
negb
addb
xchg
std
out
std
hlt
dec
mov
cmp
sub
ss
into
sub
and
nop
sbb
ficoml
sahf
add
rcl
imulb
push
in
dec
pop
hlt
xchg
lods
hlt
ds
mov
lcall
or
cmpsl
and
inc
push
xor
das
jbe
fldcw
push
shl
movsb
cmc
add
arpl
push
xor
xchg
lcall
icebp
mov
inc
add
mov
push
jp
decb
sahf
stos
add
movzbl
mov
cltd
inc
and
pop
scas
mov
mov
sarl
dec
and
and
into
adc
sbb
mov
out
xchg
push
scas
push
jae
les
sbb
adc
cmp
arpl
loope
loop
dec
mov
dec
dec
mov
adc
or
mov
imul
add
enter
and
sbbb
xor
shll
inc
adc
xchg
mov
icebp
jecxz
bound
inc
sbb
popf
subb
fidivs
lcall
inc
sbb
or
mov
pusha
or
inc
xchg
out
mov
inc
add
mov
sub
xor
lock
sbb
pop
cmp
je
popa
mov
mov
cs
pop
or
inc
ss
scas
stc
scas
dec
xor
xchg
mov
lcall
or
mov
ljmp
sbb
popa
pop
xchg
call
test
sarb
pop
inc
dec
jmp
add
fcoms
cmp
and
add
cmpsb
adc
jl
mov
pop
mov
sbb
or
mov
add
in
imul
data16
jg
hlt
jecxz
rcrb
cmp
or
and
fs
pop
pop
aam
jg
hlt
xchg
cwtl
in
and
adc
test
add
inc
push
lock
add
addb
and
mov
adc
loop
bound
loope
imul
jne
daa
loop
ds
push
insb
fxch
cli
mov
adc
mov
lock
dec
mov
cmp
addl
test
add
in
inc
or
mov
add
icebp
and
jmp
inc
mov
fisubrl
xor
mov
cmc
xor
into
loopne,pn
pop
gs
nop
and
fimuls
mov
hlt
push
xchg
push
fsubrs
or
pop
in
add
push
push
sbb
xlat
mov
push
cld
inc
addl
mov
xchg
mov
pop
add
out
bound
sub
adcl
hlt
int3
push
pop
pop
push
lds
pop
clc
lock
data16
and
xor
sbb
dec
pop
icebp
mov
inc
hlt
dec
movsb
cmp
or
mov
sbb
cmp
pop
fcompp
pushf
test
mov
out
inc
nop
dec
loop
adc
clc
dec
pop
hlt
adc
adc
sub
es
inc
dec
and
mov
popa
adc
hlt
pop
fstpl
ret
mov
mov
mov
imul
add
movsl
push
or
cmp
xor
push
lcall
dec
add
or
je
stos
pushf
fs
push
popf
fucomi
push
adc
inc
add
add
popl
std
jg
or
test
mov
dec
mov
out
mov
inc
adc
sbb
push
sbb
push
div
cmp
nop
xor
movsb
hlt
inc
dec
jl
cmp
mov
xor
pop
cmp
cs
cmp
add
je
in
stc
ret
dec
aam
fisttps
jmp
outsl
adc
movsb
lock
push
das
sarb
pop
ds
sub
or
sub
loopne
push
adcb
sti
adc
shlb
cmp
aaa
jmp
loopne
sahf
dec
mov
popa
in
inc
add
push
mov
repnz
sub
lods
pop
ja
sub
es
popf
movsb
aas
shlb
jne
lea
lods
clc
or
int
sub
int3
lock
pop
add
pop
loope
push
adc
es
dec
adc
jl
xor
fistpl
xor
outsb
mov
adc
pop
jbe
inc
aam
pusha
xchg
push
mov
lods
pop
mov
rolb
repnz
xor
clc
insl
inc
add
rclb
mov
imul
pop
test
lds
divb
inc
in
xchg
psubusw
mov
ljmp
cld
jle
aaa
add
ret
shll
insb
repz
pop
sti
sbb
mov
xor
repz
mov
lock
mov
pusha
xchg
push
rcrl
js
inc
mov
and
pop
movsl
xchg
scas
inc
mov
roll
adc
and
mov
pop
inc
jbe
loop
and
add
lahf
sbb
lds
xchg
adc
pushf
test
sub
cmpsb
mov
mov
adc
outsl
push
pop
cmp
pop
out
push
push
adc
mov
push
mov
lods
sub
mov
mov
and
xchg
fbld
inc
clc
imul
cli
stc
movsl
push
xor
cmpsl
inc
dec
popf
aaa
jp
sahf
mov
cmpsb
sub
ret
ljmp
mov
test
xor
push
mov
movsl
sar
fcomi
push
mov
push
repnz
ret
jbe
ret
dec
mov
test
pushf
test
mov
sbb
sbb
push
cmp
pop
jns
in
xor
lods
adc
sbb
cmpsl
aam
fucomi
out
sub
pusha
inc
popl
sub
outsb
inc
jne
add
push
clc
arpl
add
push
push
dec
leave
je
push
mov
cmp
lock
xchg
and
loopne
mov
xchg
and
adc
inc
leave
sbb
jle
in
mov
cmp
lds
dec
not
mov
sub
out
stos
cmc
aad
aas
daa
es
push
clc
jnp
pop
and
sbbb
subb
ljmp
and
and
inc
stos
adc
jle
xchg
inc
mov
push
or
jl
aas
mov
xchg
lock
add
mov
fwait
js
hlt
xor
insl
jle
sub
lcall
fdivp
jle
add
adc
enter
in
call
jmp
lds
clc
or
pop
push
or
out
jp
test
aaa
sub
pop
pop
outsb
cli
les
jmp
cld
call
cmpsb
and
adc
and
sti
lock
mov
ds
shr
dec
call
in
and
pop
add
push
hlt
push
jnp
pop
jp
sbb
push
xchg
jmp
cmp
mulb
pop
or
push
mov
pop
mov
incl
push
push
cmc
in
in
jmp
sub
lock
cld
mov
ljmp
add
cmpl
or
insl
pop
add
push
adc
mov
xchg
aam
push
cmp
pop
sub
or
xor
dec
sub
dec
jl
test
add
enter
sub
icebp
dec
fisubrs
repz
daa
loope
xchg
add
js
mov
loope
mov
fmull
xor
adc
and
add
mov
push
mov
into
scas
outsb
add
cmc
cmc
movl
add
push
cld
fwait
loope
add
cmc
cmp
and
and
loopne
xchg
adc
lock
stos
mov
cmpsb
adc
dec
sbb
push
xchg
dec
pop
sub
lret
xchg
cld
out
lea
add
jecxz
out
rol
idivb
nop
xchg
mov
add
mov
and
fwait
mov
arpl
inc
ljmp
data16
out
adc
lds
lahf
cs
jbe
and
or
dec
mov
insb
pop
rclb
bound
jecxz
pop
push
cmp
mov
jo
clc
sub
mov
xor
aam
pop
sarb
jno
inc
jmp
xchg
xchg
repz
push
jb
xorb
clc
add
push
outsb
shrb
jo
dec
dec
lret
sbb
push
icebp
shrb
xchg
fimuls
div
mov
push
and
cmc
fcoms
outsb
dec
insl
jl
hlt
xchg
hlt
jb
mov
cwtl
in
fidivl
xchg
and
inc
mov
jg
adc
or
sti
and
enter
pop
mov
or
inc
cmp
inc
pushf
fmuls
out
and
xorl
add
inc
dec
bound
add
jg
ja
add
add
icebp
inc
jecxz
sub
xchg
push
xchg
enter
popf
les
add
loop
and
sarl
hlt
pop
cmp
mov
aas
rorb
or
pop
outsb
inc
cld
pusha
and
out
mov
or
cmpl
sahf
mov
das
push
sarl
mov
aad
addr16
pop
add
xchg
mov
pushl
or
cmpsb
les
test
ret
mov
fsts
jle
adc
pushl
ds
mov
std
ljmp
push
xor
scas
insl
push
mov
push
inc
pop
fwait
jl
mov
add
inc
iret
adc
insb
mov
repz
or
sbb
xlat
mov
je
cmp
fs
dec
xor
mov
test
and
jg
ljmp
mov
loope
add
and
pop
jbe
sbb
popf
mov
dec
jl
xchg
cmp
xor
out
into
ds
mov
into
int
dec
and
lret
lods
add
leave
xor
mov
scas
adc
inc
scas
mov
lcall
cmp
push
inc
dec
pop
data16
cli
scas
mov
fimull
outsl
mov
mov
in
lods
test
inc
xorl
inc
jo
cmpb
mov
mov
mov
jmp
pushw
and
jno
pop
loopne
enter
sbb
mov
fisubl
add
adc
cmpsb
shr
mov
xor
jmp
xor
das
xor
cmpsb
mov
and
mov
movsl
cmc
iret
adc
mov
les
mov
mov
sbb
hlt
xor
pop
xor
pusha
cmp
or
cmp
push
data16
std
mov
and
lock
xor
scas
mov
negb
cmp
popf
or
lods
rclb
stos
fnsave
clc
sahf
rclb
pop
push
repnz
mov
push
pop
pop
push
and
mov
or
loopne
mov
xor
mov
xchg
mov
sub
ds
jnp
sbb
sub
lahf
and
ss
das
inc
pop
faddl
popa
inc
or
scas
fldl
sbb
fcmovnbe
test
mov
dec
cmp
andb
inc
or
sub
sbb
cltd
mov
mov
xor
cld
in
bound
mulb
jp
or
jbe
mov
dec
adc
xchg
xchg
sbb
lock
dec
loop
inc
rcrb
xchg
clc
add
rcl
mov
push
test
scas
inc
dec
pop
inc
fs
jne
scas
adc
add
rcll
subb
lods
jg
icebp
dec
fdivrl
add
push
lock
jb
pop
cmc
jo
dec
fidivl
xchg
adc
orb
cmpsl
push
aad
test
and
push
aas
sbb
ret
rorb
mov
sub
imul
aam
out
adc
insb
loope
popa
lds
icebp
in
das
or
icebp
out
jl
push
andb
or
rcrb
sub
push
pop
push
clc
test
aam
pop
loopne
loop
add
adc
pusha
xchg
xchg
jo
nop
add
sarb
jae
aam
mov
jge
paddw
push
pop
nop
inc
repnz
pop
add
jge
js
fildl
movsb
outsl
mov
cmp
and
sahf
cmpb
mov
pop
stos
mov
js
leave
arpl
and
loope
mov
xchg
push
xor
xor
cli
cli
ret
jle
jecxz
xchg
pop
cs
xchg
in
mov
pushf
mov
mov
sub
ljmp
jecxz
push
pusha
add
scas
aad
insb
pushf
jp
loopne
imul
add
xorb
add
adc
or
xor
mov
add
jnp
data16
jo
jno
sbb
mov
fucomip
mov
dec
push
insl
call
pop
in
pop
mov
test
movsb
and
adc
enter
push
sbb
ja
mov
pop
or
sbbb
arpl
popf
aam
cs
les
sarl
mov
notl
lds
jl
cld
adc
push
into
rcl
imul
xchg
stc
mov
pop
fisubrs
xchg
cwtl
call
cli
push
test
xor
push
je
fs
add
in
and
rol
push
insb
jb
je
out
ficomps
nop
shlb
mov
leave
mov
fsubrs
shl
and
inc
xor
or
inc
sbb
xor
and
mov
jbe
mov
add
or
push
ljmp
xchg
mov
jp
cmp
inc
aas
ret
inc
jb
mov
stos
js
jbe
lds
in
add
int3
pop
rol
push
jbe
pop
or
inc
test
add
dec
cs
std
mov
insl
pop
cmpsl
or
mov
pop
xor
inc
push
jge
iret
int3
sbb
sub
or
sahf
jecxz
loop
sbb
adc
ljmp
sub
push
add
mov
push
icebp
addr16
test
adc
mov
lock
lock
nop
add
std
arpl
divl
add
dec
or
stos
push
mov
dec
and
flds
in
test
insl
rcr
sbb
gs
xor
stos
shll
push
jno
cmp
dec
aad
outsb
cld
inc
mov
mov
ror
pop
jnp
inc
aam
cmpsl
test
xchg
xchg
testl
movsb
and
lea
pop
rclb
rcl
xchg
pop
mov
int3
sbb
aas
mov
jg
adc
call
sti
mov
pop
or
fs
push
inc
imul
test
jp
xchg
aaa
orl
test
rcrl
outsl
cltd
dec
movsb
jnp
cmp
jp
xor
xor
fildl
inc
daa
add
sbb
mov
rolb
push
outsb
xchg
shlb
test
ljmp
xchg
sbb
in
popa
add
push
or
add
pop
or
jne
sbb
mov
loopne
fildl
adc
add
outsb
clc
inc
xor
pop
mov
add
rolb
jmp
sbb
stc
stc
sbb
leave
cmp
jl
imul
dec
clc
adc
push
pusha
mov
and
sub
popf
shrl
test
and
imul
sub
jmp
aam
lret
fmull
sbb
fiaddl
pop
test
scas
orb
cmpsb
rolb
aaa
dec
and
repz
and
loopne
idivl
test
mov
movsb
and
push
mov
dec
sub
ss
pop
jg
mov
out
push
icebp
fisubl
mov
ss
dec
or
adc
pop
push
mov
cmp
jne
xchg
fdivrl
int3
sub
pop
jb
js
push
xor
jp
pop
sbb
adc
push
cmpsb
xchg
icebp
and
push
and
insl
rcrl
sti
add
je
jno
repz
sahf
xor
les
popa
mov
add
aam
sbb
mov
sub
sub
jnp
rorb
mov
arpl
out
and
cmp
dec
popw
mov
inc
adc
xchg
jge
cli
hlt
mov
outsb
adc
in
sbb
out
lods
add
aas
cmpsl
inc
aaa
shrl
popf
movsb
subb
jne
sbb
clc
ja
adc
stc
cmpb
mov
pop
and
popa
push
push
jns
in
jecxz
dec
pushf
sub
push
and
sbb
lods
sbb
subb
cmpsl
mov
xchg
mov
dec
icebp
mov
sub
mov
ficompl
mov
sti
xor
das
and
jne
and
ret
hlt
mov
pusha
stc
ds
scas
inc
jns
pop
rol
sti
daa
daa
mov
mov
clc
mov
dec
aad
jle
hlt
jbe
gs
xchg
mov
or
xor
mov
adc
inc
sti
inc
dec
xor
daa
frstor
push
pop
sbb
xchg
xchg
mov
xchg
popa
adc
into
loopne
lods
loop
aad
std
sub
push
test
sub
sbb
popf
add
push
dec
or
xchg
dec
mov
in
ret
shll
jo
add
sbb
xchg
cltd
or
cmpsb
jmp
scas
inc
cld
repnz
adc
imul
add
xor
xor
fs
jnp
sub
sub
in
repz
mov
add
cli
test
dec
stos
out
fcmovb
rorl
shrl
out
lcall
dec
pushf
and
fcompl
ja
mov
or
loopne
out
popa
mov
out
cwtl
hlt
cli
inc
xchg
outsl
and
fsub
push
mov
or
push
pop
mov
addb
push
add
pusha
push
aas
push
jg
out
jbe
and
hlt
adc
addl
xchg
adc
dec
cmp
push
mov
movl
ss
test
and
or
xchg
add
or
test
sub
lret
pusha
cmpsb
lock
lea
out
add
sbb
xor
jne
jge
cmp
jle
shrb
addb
arpl
xchg
movsb
or
mov
inc
loop
push
scas
push
pop
sarl
mov
pop
fiadds
mov
xchg
dec
out
add
xchg
movsl
jnp
ficoms
les
cmp
mov
adc
pop
inc
sub
cmp
cmpsb
jae
or
jnp
add
aam
adc
shlb
xlat
pop
cwtl
lret
outsb
xchg
sbb
js
jo
xor
or
push
cmpl
fs
outsb
dec
push
int
jns
je
mov
push
push
mov
out
sbb
sahf
adc
xor
cmp
xor
add
scas
jle
inc
inc
pop
in
inc
adc
shl
or
inc
test
mov
mov
push
and
xchg
test
cmp
pop
inc
add
sub
lea
std
js
aaa
popa
jecxz
insb
pop
andb
add
cmp
or
fcoms
int
roll
push
out
jb
pop
and
jge
outsl
setp
es
out
mov
mov
in
shll
aad
add
movsb
in
jns
enter
stos
cmpsl
jmp
adc
ss
sub
icebp
jbe
push
call
xor
outsl
mov
jmp
mov
mov
mov
imul
sub
call
insl
or
adc
fwait
fwait
loope
inc
or
jg
jo
jns
test
test
sub
adc
mov
cld
cmp
bnd
sub
mov
ret
add
jo
mov
push
adc
lock
inc
popf
push
push
push
popa
mov
rorl
neg
add
fidivl
cmpsb
inc
cmp
fldt
mov
add
dec
jge
mov
lods
scas
push
inc
add
inc
fadds
bound
rclb
popa
repnz
shrl
push
fadd
xorl
cmp
adc
ret
push
jp
xor
xor
mov
mov
add
je
pop
push
push
jp
loopne
dec
iret
mov
xorl
cmp
mov
js
mov
loope
xchg
std
inc
jmp
dec
icebp
mov
inc
add
js
add
inc
dec
jl
or
add
cmpsb
out
outsb
shll
adc
std
jno,pn
loope
sub
pop
mov
pop
mov
push
daa
and
cmp
sub
add
fiaddl
jae
xchg
loope
push
mov
pop
adc
mov
jge
aad
lahf
jbe
jne
push
pop
add
adc
insb
add
mov
cmpsb
into
in
out
pushf
aad
push
xchg
sti
sbb
dec
dec
mov
js
sbb
mov
clc
jmp
rol
imul
pop
fcoms
push
push
cmp
pop
pop
and
jnp
cmp
sbbb
sub
es
shrb
call
mov
push
adc
loope
sbb
ss
pop
xchg
test
dec
sub
movb
cwtl
gs
pop
mov
pop
fbld
inc
cli
rorb
xor
int
call
js
push
sbb
jmp
push
sub
arpl
adc
or
and
mov
insl
pop
mov
arpl
cmp
inc
mov
sub
mov
or
add
jae
aam
daa
fdivl
lock
or
sbb
inc
xlat
pushf
addr16
mov
ljmp
movsb
xchg
jmp
.byte
lcall
or
push
sbb
shlb
sub
sbb
add
sub
dec
andb
or
adc
cmpsl
lock
add
adc
rolb
sbb
pop
add
sbb
add
fildl
sbb
adc
xor
and
and
add
add
sbb
addr16
fisubs
daa
or
or
add
andb
mov
jle
sbb
dec
ljmp
push
icebp
add
pop
pop
add
fucomip
jg
add
add
and
jle
incl
lock
cld
add
cwtl
nop
pop
add
add
push
add
or
xlat
scas
sti
int
adc
shlb
push
jnp
shll
dec
mov
sub
scas
mov
xlat
adc
jbe
adc
jns
add
xor
out
aaa
xor
test
sahf
dec
or
jmp
xor
out
push
xchg
cwtl
test
std
adc
div
sahf
verr
or
add
shll
add
or
mov
jno
add
jge
std
or
cmp
ffreep
dec
mov
mov
adc
dec
xor
inc
cmp
push
mov
mov
and
pusha
or
push
add
add
add
push
jnp
fnstcw
jnp
fiaddl
push
fstpl
inc
pop
fisubrs
inc
mov
sub
mov
lds
push
mov
fists
sbb
xor
add
out
inc
leave
cmp
pop
pushf
adc
pop
xchg
jnp
mov
add
add
push
add
cmp
or
std
add
iret
insb
push
inc
sub
sub
lock
int
or
sbb
add
prefetch
or
or
rdmsr
hlt
loop
pop
int
jl
daa
and
push
xor
sub
idivb
dec
and
dec
inc
add
gs
or
add
sub
pop
add
ja
inc
lock
insb
sub
xchg
test
xchg
jns
add
adc
mov
mov
clc
or
add
add
xchg
loope
xor
pop
out
in
mov
call
add
jecxz
lods
xchg
js
leave
xchg
add
adc
and
idivb
insb
mov
je
cmp
add
mov
arpl
loope
setnp
fdivl
cmp
pop
push
jge
jg
cmpsb
test
mov
add
add
push
sbb
xor
mov
push
loop
mov
add
ror
xchg
pushl
ss
jmp
add
xchg
cmpsl
jge
rcll
sbb
sub
jbe
in
and
dec
in
mov
sbb
add
jbe
adc
sbb
add
xchg
addr16
push
mov
mov
add
and
das
scas
push
inc
pop
and
or
movsb
int
jo
xchg
push
movsb
int3
and
out
es
push
sahf
out
add
aad
adc
pop
cmp
add
cmp
mov
mov
insb
jno
pop
les
test
test
mov
insb
insl
add
add
push
flds
call
imul
jg
out
out
add
mov
xchg
inc
mov
and
add
or
jne
add
lea
xchg
add
pop
mov
fwait
sub
add
mov
add
adc
push
mov
aad
test
addl
mov
loopne
sbb
mov
sti
mov
jg
push
in
push
push
adc
jg
or
or
andl
inc
mov
shlb
or
mov
out
je
sub
mov
mov
dec
add
in
add
ret
jg
inc
sub
ficoms
jnp
xchg
int
ljmp
jb
jo
clc
mov
add
add
in
xchg
push
xor
xor
imul
out
js
xchg
cmpsb
add
in
fwait
jo
shrb
in
js
lret
les
mull
dec
cli
sub
jne
xor
movl
and
sarl
cli
daa
dec
inc
jmp
movsl
mov
jno
js
or
xchg
xchg
add
idivb
cmp
adc
aas
dec
lret
data16
push
dec
lds
jmp
jmp
fcoml
or
lock
mov
jo
pusha
inc
push
push
jns
insl
sbb
fistpll
xor
and
stos
or
call
mov
out
jo
test
push
xlat
xchg
inc
sbb
add
test
mov
lds
and
sbb
or
ret
xlat
out
or
int3
imul
js
inc
cmpb
jp
xchg
push
mov
sbb
jmp
lods
inc
pop
insb
add
or
and
je
filds
js
lret
push
push
iret
lahf
shrl
jl
call
lds
add
push
pop
bnd
enter
pop
sbb
dec
sub
mov
cld
mov
test
hlt
repz
or
xchg
ss
push
push
push
ss
data16
xchg
mov
adc
notl
fdivs
mov
xchg
xchg
or
ja
push
repz
xchg
pusha
orl
outsl
ret
cmp
iret
jmp
lock
fsts
cmp
jb
int3
cmp
loopne
addl
sbb
loop
fimuls
pusha
rorb
aad
inc
pushf
rorl
stc
mov
or
out
sub
leave
stos
ja
add
jns
jns
push
mov
fxch
sub
jae
mov
roll
mov
lret
fcomip
mov
rcrb
aad
add
sbbl
or
stos
ret
je
sbb
dec
cmp
cmp
pop
inc
xor
push
leave
xor
les
pop
fsubs
sahf
push
adc
sbb
push
add
cmpsb
popa
sub
cmc
shlb
stc
and
leave
loop
pop
pop
pop
sbbb
inc
mov
jno
je
outsl
fwait
test
lods
add
jnp
xchg
shrb
hlt
mov
daa
or
xchg
dec
out
ja
sbb
hlt
cli
jge
cmpsb
xchg
sarl
cmp
aad
aaa
add
out
ficoms
or
test
loop
hlt
or
sqrtps
aad
cmp
cmp
ds
xor
jmp
jnp
test
add
inc
mov
les
repz
rolb
dec
xchg
jge
pop
mov
movsb
adc
mov
rorl
jb
mov
bound
xchg
xchg
and
int3
inc
lock
mov
cmp
or
pop
mov
dec
and
test
or
or
xor
pop
repnz
rol
ret
sbb
mov
outsb
xchg
std
push
repnz
data16
mov
mov
fisttpll
jo
cmc
ljmp
sbb
cld
cld
lods
mov
add
cli
pop
loope
xor
ror
sub
mov
jl
cmp
loop
fiaddl
mov
mov
scas
clc
std
mov
or
cmp
nop
add
test
mov
mov
sub
gs
mov
adcb
sti
xchg
daa
cmpsl
shrb
in
mov
xchg
aad
xor
clc
test
ds
shll
or
mov
cmp
in
addr16
mov
loopne
mov
stos
out
push
das
in
add
ja
in
test
pop
cmp
pop
ds
lds
sub
clc
add
stos
div
mov
shlb
call
pop
ljmp
addl
dec
pop
test
out
xor
clc
add
mov
pop
mov
stc
fs
xlat
add
or
in
push
icebp
sub
and
leave
inc
mov
aad
or
xchg
insl
xchg
mov
pop
std
adc
inc
das
subl
pop
mov
mov
sbb
loopne
add
loopne
xchg
incl
dec
lea
bnd
add
xchg
or
testl
incl
add
jno
loopne
mov
in
push
ds
adc
rcrb
sahf
icebp
push
movsl
rolb
adc
add
xchg
out
mov
lods
mov
jge
popa
arpl
push
xchg
cmpb
xchg
mov
fucomip
mov
ret
adc
mov
in
pop
jp
out
out
test
pop
imul
and
outsb
ret
cmp
mov
push
hlt
cmc
push
dec
cmp
xor
sbb
and
mov
add
cwtl
xor
adc
lcall
insb
pop
pop
movsl
test
pop
loop
je
fwait
sub
mov
loope
rorb
out
ret
xor
pop
popa
pop
xchg
cmpsb
cmpsb
sbbl
nop
pop
stos
xorb
cmp
cmpsl
fsts
adc
ljmp
jns
les
insl
jmp
add
test
subl
loope
lock
pop
popf
inc
or
stos
and
inc
cmc
xchg
idivl
add
fmull
xor
jg
jg
and
fadds
sbb
push
rcr
or
ja
aaa
add
cs
mov
dec
popa
dec
xor
pop
shr
dec
add
cmp
pop
rcll
int3
and
push
lds
sub
pushf
jbe
shll
ret
dec
and
ljmp
push
test
orb
and
adc
jne
jae
or
dec
loopne
daa
inc
inc
mov
push
jns
jno
clc
jp
jns
repz
arpl
sub
lds
test
stc
cmp
sahf
rorb
adc
inc
notb
clc
mov
mov
push
inc
rorl
xor
jle
mov
mov
push
popa
mov
mov
mov
xchg
movsl
mov
pop
es
push
pushf
jmp
mov
rol
lea
loopne
sub
jnp
jmp
jo
mov
std
lds
pop
lock
sub
lock
mov
stc
into
and
cmpsb
add
cmp
or
mov
inc
hlt
imul
xor
in
fisubrs
jl
jp
cmp
lea
pop
fisttps
cmp
adc
mov
stos
insl
lcall
mov
popa
orl
in
lret
push
test
lds
cld
jp
push
scas
dec
cwtl
adc
xchg
pusha
mov
mov
xor
mov
jp
in
pop
outsl
mov
inc
add
cmp
imul
mov
jl
repz
or
push
hlt
jne
xlat
jae
and
mov
mov
ljmp
xor
mov
add
out
push
push
iret
out
das
push
xor
out
clc
and
jle
ret
and
enter
sbb
sub
xchg
pop
mov
xlat
push
push
sbb
scas
pop
xor
test
push
xchg
push
inc
mov
rolb
fnstcw
negb
jo
flds
pop
sub
lcall
bound
pop
dec
add
dec
dec
pop
loope
adc
lock
lret
mov
js,pt
xchg
lock
addl
movsb
fiaddl
add
loop
dec
xchg
stos
sbb
fimull
test
xchg
jge
lcall
add
gs
dec
inc
leave
fdivs
aam
or
clc
test
mov
xlat
mov
cmp
push
repz
jbe
xchg
iret
push
mov
adc
push
jb
mov
mov
sbb
into
call
ljmp
pop
mov
out
sahf
sar
xlat
dec
mov
push
jb
in
cld
add
test
mov
sbb
push
sar
lea
lahf
pop
pop
sbb
push
dec
push
mov
jge
rolb
aam
icebp
stos
adcl
std
push
or
scas
pop
push
fimuls
and
mov
add
dec
or
mov
lods
fists
test
lods
or
and
lcall
xchg
mov
pop
lods
aaa
push
clc
sbb
mov
icebp
push
jno
adc
movsl
or
xchg
inc
push
mov
cmp
push
aad
in
pop
bnd
leave
loop
cwtl
add
cs
jg
inc
sub
push
pop
pusha
jb
or
push
lahf
sub
cmpsl
add
pop
jmp
ror
sbb
je
sbb
push
jne
dec
xor
out
sbb
es
inc
pop
cli
dec
and
xchg
pop
dec
movsl
dec
shr
test
push
mov
dec
scas
pop
scas
loope
adc
call
test
out
dec
out
push
cmp
dec
jmp
js
out
mov
test
mov
dec
xchg
push
dec
fbstp
or
aad
xchg
stos
mov
imul
and
xor
add
nop
push
negl
jl
negb
xor
or
movswl
mov
addl
clc
ret
fstpt
xchg
sahf
call
jg
fisubrl
test
mov
int3
push
loopne
mov
add
pop
jo
mov
xchg
push
ljmp
pop
sbb
nop
imul
outsb
add
sbb
es
inc
add
insb
add
sub
jnp
push
cmc
jmp
dec
add
push
and
adcl
sub
jp
xor
dec
adc
mov
inc
in
xchg
sub
stos
jl
imul
jne
ss
stos
cmp
outsl
movsb
jns
pop
pusha
cmp
xchg
adc
aam
shr
mov
sub
mov
ss
icebp
sub
out
call
push
push
jmp
mov
push
pop
sub
pop
sbb
aas
mov
and
pop
mov
out
fld
cmp
mov
js
out
pop
fiadds
lret
jbe
xchg
cmp
rcll
mov
iret
pushl
xor
inc
pop
jnp
add
test
mov
lock
mov
cmpsl
jae
call
add
push
stc
mov
add
mov
pop
and
or
ds
ret
xchg
sbb
stc
mov
xor
int
mov
lods
push
subl
mov
rcrb
mov
lock
mov
scas
jnp
jp
pop
and
js
ss
rcll
in
sarb
mov
outsl
xchg
fidivl
mov
mov
push
cmp
jecxz
jo
cltd
add
lods
shrb
add
inc
lds
sub
orb
add
add
pop
xor
icebp
xor
mov
clc
mov
fistl
aaa
into
add
jns
lahf
push
mov
ljmp
sahf
pop
xchg
lds
mov
xchg
jnp
test
jge
jno
mov
insl
dec
fcmovb
xchg
subb
dec
pop
add
shlb
pop
addb
and
dec
insb
in
out
add
sub
cmp
fwait
in
aam
orl
adc
push
xchg
mov
add
push
sbb
call
inc
cmp
add
imull
and
jl
pop
sbb
add
push
out
stos
outsb
ret
das
test
lock
xor
out
dec
mov
or
push
pushl
test
dec
pop
movsb
lea
inc
adc
fistps
fdivrl
jg
lods
push
lret
int
adc
push
mov
or
adc
mov
rclb
add
push
push
and
stos
xlat
cmp
push
repz
and
cs
mov
ret
cmp
mov
das
mov
mov
into
inc
sbb
call
or
or
adc
lock
sub
test
jo
pusha
movb
and
lock
push
add
pop
ds
in
inc
outsb
and
xchg
cmp
push
pop
mov
sbb
inc
pop
jp
test
cmpsb
loopne
test
mov
pop
test
stos
sub
pop
mov
sti
add
pop
push
dec
js
xchg
outsb
sbb
notl
sar
jo
push
test
fiaddl
or
jae
adc
push
sub
push
loope
outsb
cmp
mov
cmp
jg
or
push
out
nop
nop
dec
out
xchg
mov
mov
lock
pop
add
shlb
push
mov
dec
mov
dec
mov
cmp
cmp
dec
movsb
jnp
sbbb
cmp
stos
mov
out
xchg
xchg
mov
mov
pop
push
pop
xor
jno
jo
push
mov
insb
outsl
mov
sbb
decl
dec
bndstx
fmulp
js
pop
loop
je
fcmovnb
loope
imul
jl
mov
jl
scas
js
das
sbb
dec
fwait
jge,pt
add
push
inc
std
mov
adc
adc
mov
daa
and
test
sarl
jp
std
cli
lods
enter
into
add
iret
ja
cltd
add
pusha
push
push
cli
ds
sahf
inc
cmp
push
loopne
inc
fistpll
mov
add
enter
shlb
and
mov
sub
pop
xor
push
jmp
push
lret
push
roll
cmp
mov
mov
mov
outsb
jp
test
orl
jmp
mov
add
sbb
ret
mov
out
shl
or
lods
dec
insb
inc
cli
jns
pop
inc
xchg
mov
hlt
test
dec
xorb
mov
jmp
sbb
roll
add
js
loopne
and
sub
sar
out
addl
icebp
mov
adc
popa
adc
insl
subb
push
decl
xor
xchg
xchg
push
decl
stos
ror
adc
call
fs
cmp
shl
add
sub
dec
pop
inc
hlt
sahf
outsl
cld
sub
inc
ds
mov
pusha
xchg
sub
mov
mov
test
or
mov
es
stos
fimull
popf
push
push
push
je
inc
pusha
pusha
lret
cld
or
adc
insl
fdivrl
xor
dec
mov
or
mov
sti
mov
fwait
xor
fiaddl
pop
xor
dec
into
push
lret
adc
rcrb
jl
ja
pop
adc
adc
mov
dec
pop
sbb
push
testb
je
cmp
xor
aaa
fidivrs
cmpsl
loopne
std
scas
push
pop
jge
pop
push
rclb
idivb
mov
pushl
lock
dec
sar
adc
stos
rclb
pusha
xor
out
js
sub
jae
inc
adc
test
sahf
push
out
clc
mov
mov
cmc
xchg
xor
movsb
xor
aad
lock
and
dec
jmp
mov
lahf
mov
and
stc
cmpsl
andl
fbld
add
call
pop
push
iret
jecxz
outsb
jns
push
loop
js
into
cmp
adc
outsb
inc
add
sub
das
xor
hlt
add
and
add
mov
mov
xor
outsl
dec
inc
sub
mov
inc
push
mov
push
out
jle
repz
decl
faddp
iret
xchg
cli
mov
mov
pop
pop
data16
js
ficomps
enter
ret
cmp
adc
bound
pusha
lea
add
mov
push
pop
cmp
fwait
in
xor
lret
std
mov
ror
dec
shlb
aam
mov
imul
jno
xor
fldt
add
gs
ljmp
movb
outsb
sbb
shrb
fsubrs
add
sar
fldcw
xlat
mov
iret
mulb
mov
push
test
aaa
sbb
mov
out
pop
inc
insl
pop
lock
add
out
stos
xchg
lock
ds
jle
sahf
mov
sbb
out
cld
sub
std
imul
xor
popf
pop
cltd
pop
pop
mov
rolb
sbb
in
add
cli
subb
jmp
out
test
test
add
leave
lock
in
inc
dec
jbe
lret
pop
lds
cmp
inc
fwait
aam
jmp
imul
scas
in
lcall
mov
adc
xorl
ss
mov
xor
mov
push
hlt
or
cld
and
jle
andb
add
jne
sub
dec
sub
in
xchg
cmp
ret
sbb
mov
fadd
add
push
shlb
mov
fs
inc
add
es
dec
ret
jno
add
jbe
inc
aas
shl
adc
rclb
push
mov
push
aas
cld
push
cmp
scas
inc
sub
jne
push
popf
xor
adc
mov
out
cmp
fnstcw
stos
gs
push
stos
or
lock
push
adc
bnd
lods
cmp
cld
and
push
loopne
xlat
push
sbb
push
shll
out
push
movsb
push
lods
out
pusha
arpl
adc
jbe
xchg
push
push
pop
cmc
fstpt
outsb
inc
pop
inc
mov
xor
mov
leave
inc
test
jmp
pop
cmc
mov
push
lret
add
xor
adc
insb
add
call
sub
add
addr16
adc
jp
adc
cmp
loop
dec
adc
outsl
mov
add
lock
jno
push
test
inc
lahf
rorb
sbb
mov
scas
and
inc
out
clc
lea
and
push
mov
cld
out
rol
xchg
cmp
xchg
mov
lock
fs
or
inc
xor
sarb
lock
or
dec
sbb
or
sub
mov
adc
js
jnp
out
add
sbb
es
sti
jo
pop
adc
jns
cmp
div
add
push
clc
add
mov
push
cmp
ss
loop
xchg
sahf
sbb
rorb
sbb
inc
jl
pusha
inc
add
mov
into
mov
lea
lahf
pop
sbb
mov
jb
dec
mov
movsl
rclb
sub
pop
mov
sbb
nop
lret
and
pop
test
inc
dec
or
lcall
jno
mov
xorb
pop
out
es
adc
ds
or
clc
and
test
subl
movsb
xor
scas
pop
mov
push
shlb
lods
insb
add
fs
xor
orb
shlb
das
lods
test
mov
dec
stos
movl
mov
mov
xor
testb
std
popf
or
adc
inc
inc
jae
ret
xchg
rorl
out
pusha
inc
pop
clc
or
rcrb
and
xor
mov
jbe
repnz
xor
pop
shl
pop
dec
imul
jle
je
and
loop
cltd
add
ret
cs
sbb
sub
mov
jo
scas
xchg
dec
jle
int3
insb
xor
int3
pop
insl
cmc
fisubrl
mov
enter
shr
pop
jno,pt
mov
aaa
insl
pop
mov
inc
mov
jo
addr16
mov
jno
add
scas
pop
insl
incb
xchg
add
lods
push
inc
mov
pop
mov
cwtl
jb
rcl
jp
in
pop
hlt
mov
mov
pop
xchg
mov
loope
jb
sub
sbb
xlat
or
xor
mov
push
inc
sub
add
cmp
pop
mov
mov
cmp
or
ljmp
jbe
dec
dec
loopne
xor
cmp
out
add
ds
xchg
leave
arpl
jno
jg
mov
sbb
stos
lods
mov
xor
pop
ret
jge
daa
adc
push
dec
jnp
das
push
push
fstpl
cmp
add
stos
xor
movsl
leave
sarb
fsubp
inc
sbb
xchg
pusha
push
sub
xor
clc
mov
mov
mov
or
fcmovnb
testb
xchg
cmp
jge
mov
xor
in
pop
and
ss
jl
insl
or
inc
adc
inc
loop
adc
lcall
aas
xor
pop
popf
dec
push
push
sbb
pop
add
add
or
aad
outsb
adc
xlat
enter
xor
jle
je
mov
outsb
out
frstor
adc
bound
push
ret
hlt
pop
js
push
jbe
or
aam
push
insl
lret
mov
test
mov
sub
int
test
lcall
fadds
fucomip
pop
sbb
mov
inc
testb
ret
lcall
push
xlat
jbe
jne
mov
loopne
jne
lock
dec
rolb
shl
stc
out
test
out
jbe
add
lcall
fcmove
sbb
lcall
sarl
mov
sbb
mov
sub
mov
sbb
call
cs
scas
fimull
cmp
or
outsb
or
call
or
and
cld
mov
push
dec
sbb
hlt
lods
add
jnp
ret
addb
mov
mov
add
sbb
jnp
mov
fidivs
jnp
jg
loope
add
add
shrl
sahf
clc
pop
push
clc
je
adc
xchg
push
dec
out
sbbb
stos
jbe
add
mov
mov
push
rorb
xchg
mov
adc
cmc
orl
push
push
sbb
xchg
jge
push
sbb
pop
pop
int
stos
notl
mov
push
pop
cmp
mov
adc
dec
cmp
sbb
lret
pop
hlt
fidivl
scas
mull
xchg
sub
mov
lret
and
ljmp
in
clc
dec
clc
mov
xchg
in
mov
add
cs
xchg
shr
adc
cmp
and
insb
or
xor
cld
cs
jg
lods
cli
lahf
add
jge
flds
pusha
sbb
adc
pop
push
loope
shll
inc
fisubs
mov
inc
adc
push
lock
mov
and
lcall
pop
cmc
out
ret
ljmp
daa
movsb
jmp
outsl
shll
fstps
or
fdivs
add
andl
add
add
call
pop
arpl
add
mov
dec
cmp
push
scas
fdivrl
pop
loopne
mov
mov
ficoml
test
xor
les
inc
cmp
cwtl
mov
js
add
fisubrs
xchg
fisubl
orb
shlb
or
cli
stos
sbb
pop
mov
jbe
movsb
sbb
sub
inc
rcrb
add
cmp
fildl
push
adc
inc
arpl
pusha
jne
push
cli
and
jnp
jge
adc
sbb
outsb
filds
insb
lcall
ss
insb
jnp
pop
lock
sbb
popa
add
fsubr
aam
xor
dec
enter
lds
int
push
jb
inc
test
push
jno
int3
and
das
out
icebp
clc
mov
pop
lret
sbb
ret
jg
mov
push
enter
push
cs
in
ljmp
mov
xchg
pop
lret
add
cmp
insb
test
cmp
jbe
push
pop
push
sub
out
test
inc
rorb
push
mov
adc
dec
clc
sbbb
lock
xor
xchg
cmp
mov
neg
xor
mov
jp
js
cld
add
lods
xor
inc
shrb
stos
inc
pop
mov
add
daa
or
aas
push
inc
mov
sbb
xor
jns
lods
lods
cmp
mov
mov
aam
mov
ret
inc
addr16
cmp
adc
imul
pop
decb
rolb
sbb
cmpsb
dec
or
jl
cmp
insb
jle
std
mov
repz
fldl
dec
pop
add
xorl
cmp
or
push
or
mov
negl
pop
mov
dec
test
sbb
mov
lods
je
adc
lahf
inc
js
test
inc
push
mov
add
jecxz
sbb
cwtl
jecxz
or
jge
ret
addb
sbb
fadds
lea
decl
jle
jns
add
sbb
or
std
adc
enter
aaa
jmp
das
add
or
push
imul
out
mov
dec
out
outsl
andb
sti
adc
xor
dec
push
in
loop
adc
pusha
push
xor
mov
sar
mov
pusha
test
jle
shrl
adc
or
rcrl
xorl
test
orb
fsubrl
dec
xchg
xchg
es
aam
push
push
mov
sbbb
lods
mov
sahf
or
mov
fs
xor
sub
aam
icebp
rolb
cmp
or
mov
aam
test
mov
add
xor
mov
clc
call
push
pop
fs
jnp
jb
dec
js
aas
fiaddl
xchg
daa
arpl
inc
pop
mov
call
adc
xchg
push
mov
add
ss
xor
mov
inc
daa
jge
xchg
mov
outsl
movsl
mov
mov
not
xlat
sbb
dec
add
icebp
add
insb
mov
adc
xchg
outsl
adc
mov
xchg
std
or
test
nopl
cltd
enter
jl
sti
orb
or
push
loopne
rcrl
scas
dec
fsubs
lock
add
dec
loop
pop
out
pushf
jecxz
aas
mov
addr16
fbld
ja
sub
int3
jl
decl
jno
or
into
push
and
mov
shl
add
inc
data16
and
push
cmp
fwait
das
mov
mov
xchg
adc
idivb
ljmp
mov
pushf
add
shlb
rclb
test
cmpsb
and
std
xchg
xchg
sub
mov
jp
das
cwtl
scas
imul
fninit
cmpsb
fdivrl
lahf
push
dec
enter
fiadds
into
nop
jae
ret
add
scas
dec
adcb
lock
out
fidivrs
push
add
and
fs
clc
lahf
inc
jg
add
cwtl
xchg
rcll
mov
test
jle
fisttpll
jae
rcrl
lcall
sbb
insb
mov
js
add
sbb
jns
ret
rcr
lea
lods
in
xchg
clc
in
add
sub
adc
xor
dec
int3
inc
test
cmp
inc
cmpsl
mov
xor
add
push
out
inc
outsl
pushf
push
sbb
fsubrs
movsl
loopne
jle
ret
mov
out
in
es
psubd
dec
xchg
ret
push
and
xlat
lods
mov
mov
loop
and
mov
xorb
xor
fiadds
push
xchg
outsb
lret
add
and
loopne
test
jmp
clc
mov
jmp
pop
mov
les
aam
add
das
lock
xor
dec
push
imul
or
push
test
aas
js
ds
xor
add
adc
add
ficompl
cwtl
dec
jg
inc
out
sub
push
pop
mov
sbb
cmp
push
inc
pop
lock
movb
jne
iret
addb
test
jmp
sub
jecxz
dec
mov
js
data16
sar
add
int
popf
aam
mov
pop
movsb
pop
push
inc
push
fstpl
jg
mov
mov
adc
subl
cs
jbe
jbe
shll
and
push
outsb
fmul
pop
push
ret
or
or
insl
push
lods
mov
arpl
inc
ja
xor
fs
inc
sbb
jae
mov
push
adc
xor
shl
in
or
xchg
jbe
sbb
adc
inc
and
movq
lret
dec
mov
loope
fstl
cwtl
int3
sbb
test
rcll
pop
ljmp
adc
pop
stos
icebp
cmp
adc
pop
dec
or
pop
pop
fnsave
dec
inc
push
mov
ljmp
inc
push
lods
dec
aaa
mov
loope
dec
push
push
lret
mov
rorl
cmp
rcrl
jge
sarb
clc
push
pop
mov
dec
add
shrl
cli
dec
jae
ja
inc
rorb
hlt
cmpsl
dec
movsb
push
fcmovbe
rcrl
pop
enter
shlb
ljmp
push
fcomp
push
pusha
push
lods
and
dec
sahf
and
stc
clc
xchg
mov
mov
out
pop
cmp
and
ljmp
add
add
add
mov
stos
mov
cmpsb
push
out
enter
push
push
inc
out
rcrl
xor
fsts
lods
fistpl
mov
cmp
mov
das
les
pushf
lret
js
lods
in
jmp
add
insl
mov
enter
ljmp
out
lea
lret
mov
sub
mov
adc
lds
push
mov
add
lret
jne
add
inc
cwtl
aad
sahf
outsb
adc
push
push
lret
mov
in
jae
fs
repnz
mov
xor
push
sbb
push
std
mov
into
mov
mov
arpl
outsb
and
aas
xor
imul
testb
cmp
incb
sti
test
sbb
dec
jg
jle
ss
jle
push
push
jo
cmpsb
out
dec
decb
scas
ja
or
mov
mov
gs
and
xor
jle
mov
lea
or
mov
cli
jne
rolb
lods
repnz
add
or
inc
jmp
orb
ret
lock
outsb
std
sub
mov
sbb
stos
pop
sub
jae
jge
mov
jl
fsub
mov
adc
inc
jecxz
and
or
cmpsl
loope
inc
shl
mov
add
loope
and
negl
jno
xor
inc
sti
addb
sbb
fisttps
sbb
pop
push
add
mov
scas
or
and
mov
sub
mov
orb
or
mov
out
push
push
sbb
adc
ss
mov
push
cwtl
mov
pop
push
lock
lea
es
test
cltd
mov
jg
xchg
es
and
mov
push
xchg
and
aas
in
pop
sub
scas
dec
push
xlat
lea
stos
push
faddp
mov
test
ret
scas
push
inc
and
push
add
insl
xlat
push
or
push
out
sub
pop
pushw
scas
pop
inc
cli
mov
mov
push
les
lods
stc
faddp
and
mov
sub
in
and
shll
add
pushf
mov
or
popf
fimuls
mov
inc
push
add
or
mov
sbbb
fimuls
out
stos
xor
sbb
adc
subl
call
mov
jmp
adc
in
mov
sbb
rolb
sub
lahf
push
into
pop
sub
insb
lock
and
dec
fdivl
or
inc
lods
pop
sub
jmp
mov
les
xchg
imul
pop
sub
pop
cltd
sti
add
addl
xor
xor
lret
or
add
and
stos
cwtl
push
cltd
mov
mov
dec
push
sub
pop
cld
sub
mov
adc
call
sbb
in
rclb
movl
sub
jno
mov
adc
and
xorb
mov
xor
mov
add
aaa
mov
xor
jecxz
test
popa
xchg
movsl
and
loopne
or
repnz
lock
loop
xchg
inc
in
ljmp
push
data16
scas
lahf
cmpb
popa
push
inc
test
repnz
xor
ja
xchg
mov
jmp
imul
xchg
mov
cltd
mov
int
ret
das
sub
and
inc
pop
enter
shlb
fwait
imul
xchg
daa
sbb
sub
fnstcw
gs
les
adc
push
sbb
mov
fadd
mov
pop
jecxz
xchg
xor
pop
cmpsl
lock
es
adc
pop
add
inc
cli
pop
divb
and
jno
fnstenv
outsb
arpl
lcall
dec
mov
mov
imul
push
push
mov
pop
mov
lock
cwtl
pop
insb
repnz
clc
cwtl
ret
arpl
out
push
ds
insb
cmp
js,pn
mov
iret
mov
push
dec
pop
arpl
cmp
inc
push
mov
out
sbb
jg
push
jo
cmp
add
push
fisubrl
mov
cli
rolb
ljmp
jns
pop
or
scas
cmpsl
sub
push
nop
xchg
sbb
mov
lret
fs
cmpsb
mov
jno
cltd
stos
push
js
subb
outsb
adc
outsl
dec
inc
xor
jo
inc
fldt
push
psllw
int3
cmpsl
fdivs
ret
std
push
mov
and
xchg
mov
sbb
subb
fcoms
sbb
aaa
mov
adc
mov
mov
pop
push
loopne
adc
sub
inc
sub
shl
test
xchg
xchg
in
add
inc
inc
or
popa
sbb
dec
cltd
shrl
je
sbb
roll
js
mov
loop
mov
cmp
int3
dec
inc
jl
add
rcr
pusha
pop
add
inc
or
bound
sub
inc
xlat
cltd
sub
push
jl
in
inc
rorb
fs
ds
cld
lret
clc
pop
test
adc
xor
mov
and
sbb
sbb
lock
xorl
popa
inc
xchg
jo
test
cmpsl
lds
adc
test
scas
testl
repnz
push
lock
fisttps
push
xchg
push
push
cltd
dec
cmp
push
dec
adc
bound
sbb
add
rol
or
mov
mov
repz
dec
jo
lods
xchg
mov
sbb
mov
aam
ficompl
stos
sbb
dec
mov
xchg
mov
movsl
mov
js
dec
imulb
out
push
push
mov
cmc
adc
lods
add
add
add
sub
and
inc
movsb
cs
xor
or
sbb
pop
dec
cmp
xor
xor
xchg
push
mov
loopne
jmp
add
pop
or
xor
cli
mov
ret
xchg
jle
jge
loope
aaa
lds
add
jle
xchg
leave
mov
inc
lods
mov
xchg
jmp
cld
pop
sub
mov
lods
xor
inc
or
mov
pop
and
mov
sub
push
sbb
insb
or
dec
cmp
sbb
icebp
mov
jle
or
xchg
cmpsb
inc
mov
add
jno
cmpsb
cmp
divl
cmp
ja
cmp
lock
adc
scas
pusha
jecxz
neg
outsl
or
loopne
pop
adcl
gs
sbbl
fbstp
jmp
or
pop
dec
jae
jecxz
pop
inc
dec
add
shl
loopne
add
sub
lret
cmp
imul
scas
mov
mov
out
dec
ss
mov
xchg
mov
mov
into
xchg
dec
rclb
cmpsl
mov
js
mov
fcomps
push
jmp
stos
pop
xor
adc
or
push
movsb
adc
mov
adc
xor
rcrb
jnp
pop
and
jnp
les
subb
pop
dec
cmpsl
mov
movsb
lret
or
cmp
xchg
jo
popf
sahf
loop
cmp
jae
ljmp
insl
lods
repz
mov
cmpsl
lea
lock
or
mov
les
dec
in
clc
dec
xchg
fstl
xchg
subb
add
cli
ss
dec
sbb
test
in
test
add
roll
imul
mov
iret
push
test
mov
add
sub
in
jbe
fiaddl
mov
in
or
jl
adc
mov
sbb
loop
dec
std
sbb
mov
ljmp
xor
jl
pop
adc
call
addr16
rcr
test
push
cmp
fwait
sub
outsb
popf
inc
pop
push
sahf
sbb
std
std
mov
jae
fsub
lea
push
cmc
or
pusha
cmp
aad
cmp
ret
xorb
dec
orl
in
mov
cmp
pop
das
add
jg
loopne
sbb
jl
pop
inc
and
dec
cmp
sub
or
inc
and
decl
inc
into
inc
aaa
cmp
or
jo
pusha
xor
and
or
mov
in
inc
push
or
mov
mov
addl
pop
pop
sbb
imul
and
sbb
shrl
xchg
lock
push
sbb
or
jecxz,pt
popl
fmuls
add
and
leave
jp
rcll
dec
rolb
add
pause
mov
lds
pop
mov
cltd
fisubrs
mov
in
dec
stc
mov
jge
test
lods
adc
ror
mov
mov
xor
dec
test
arpl
test
push
dec
repz
cmpsb
cli
insl
rcr
jno
sbb
leave
loopne
xchg
loop
xor
add
pop
dec
cs
and
push
jb
push
lods
cmp
nop
jcxz
jle
pop
insb
mov
bound
jl
lea
jb
add
out
xchg
fdivrl
stos
aad
sbb
out
inc
lock
sbb
xor
sbb
sahf
int
jp
inc
jg
mov
sbb
dec
dec
xchg
aam
lea
mov
sahf
movsl
adc
loop
push
cmpsb
pop
out
cmc
rcll
ret
les
fnstsw
mov
inc
not
push
js
jg
daa
shrl
jns
jp
sub
cwtl
call
aam
xor
dec
jmp
enter
nop
or
lret
in
pop
cli
push
ljmp
inc
pop
addb
pop
movl
out
fcmovnb
cmp
hlt
or
push
faddl
inc
ret
and
mov
inc
in
rol
mov
xor
jle
jae
pop
mov
dec
imul
xchg
jle
mov
pcmpeqd
hlt
sbbb
fwait
cmc
dec
cwtl
mov
mov
jns
jbe
test
xchg
hlt
ss
negl
dec
in
aad
xchg
xchg
adc
cmpsl
inc
test
or
shll
pcmpeqw
js
adc
jp
sub
mov
movb
xchg
and
push
shll
jecxz
movaps
mov
sub
and
cmp
mov
and
xor
in
out
xchg
lahf
mov
jp
inc
push
aaa
sbb
out
shlb
jns
arpl
imul
and
mov
cmp
jmp
jno
lahf
popf
xlat
inc
cli
leave
mov
scas
mov
add
cli
lret
push
sbb
sbb
mov
cmp
mov
push
ret
sub
or
inc
dec
mov
call
fldcw
aas
enter
fbstp
xchg
mov
push
test
mov
mov
cltd
mov
dec
call
inc
jge
icebp
xor
addr16
xor
push
inc
movsb
aad
pop
or
pop
sbb
adc
icebp
shll
or
inc
movsb
sti
inc
arpl
fs
std
rcrl
mov
enter
xchg
ljmp
xchg
ret
add
and
lahf
push
adc
pop
ror
cld
xlat
stos
push
stc
dec
aaa
orb
adc
mov
xor
inc
call
test
cli
mov
pop
add
shr
xor
dec
les
sub
test
icebp
outsl
test
push
sub
mov
cwtl
xchg
loope
ljmp
jl
orl
or
or
imul
stos
int
stos
imul
call
or
cmp
lea
lods
outsl
popa
cwtl
jbe
jp
jbe
push
jo
add
or
jo
mov
xchg
xor
rorb
or
push
or
pop
test
mov
push
mov
mov
lcall
mov
xchg
rcrl
dec
imul
dec
fwait
xor
test
push
push
mov
mov
hlt
add
push
into
mov
sbb
inc
push
pusha
outsb
sti
or
cmc
dec
inc
mov
jne
test
mov
cld
mov
mov
xchg
adc
clc
mov
test
in
jg
add
sub
rclb
fisttpl
add
adc
adc
jl
js
xor
jmp
mov
imul
cmpl
sbb
fidivrl
repz
mov
mov
dec
cmpsl
or
mov
call
sbb
jg
pop
icebp
xlat
sbb
sub
pop
ljmp
mov
je
das
push
shrb
scas
sbb
mov
movl
pop
in
pop
mov
lods
or
mov
dec
negl
aad
ds
dec
outsl
sub
and
push
mov
or
sbbl
cmc
sbb
lahf
mov
adc
or
insb
icebp
popa
xor
dec
int
imul
clc
aas
movsl
add
ret
jmp
std
adc
std
mov
clc
and
mov
mov
test
mov
lea
repnz
lcall
mov
in
inc
mov
mov
and
add
pop
leave
mov
push
or
xlat
push
lcall
ss
xor
cltd
xlat
dec
pop
test
xchg
stc
pop
adc
fwait
push
inc
je
shl
lods
sub
xchg
and
cmp
pop
out
repnz
push
pop
inc
fldt
sbb
movsb
dec
movsl
js
or
sbb
xor
sub
and
inc
scas
les
pop
xor
cmp
push
add
fs
xor
shlb
jge
pop
sub
mov
inc
in
lods
cmc
lods
data16
mov
dec
mov
adc
pop
pop
mov
je
lea
rolb
iret
in
lds
pop
jg
in
adc
mov
je
xchg
pop
pop
ja
or
adc
inc
cmp
gs
xlat
sbb
xor
leave
cli
fisttpll
mov
ljmp
pop
xchg
clc
loope
cli
orb
jbe
sub
fimuls
es
mov
in
sub
jecxz
test
push
leave
cmp
scas
mov
xor
jo
inc
es
xor
add
fsubl
add
push
push
inc
pop
mov
add
sbbb
add
sbb
sbb
das
rorb
cld
jecxz
out
inc
jp
adc
loop
cmp
xor
cmc
sub
movb
pop
stos
lods
mov
or
addr16
pop
xor
push
outsb
mov
cmp
pop
ja
dec
pop
push
push
and
mov
sarb
test
sub
adc
adc
dec
pop
xchg
jns
push
and
push
cmp
pop
add
adc
jno
dec
aas
cmp
xor
test
cwtl
fcompl
shrl
mov
sbb
mull
mov
jno
lcall
pop
add
mov
repz
mov
jbe
jne
je
push
repz
inc
call
shrl
ljmp
je
mov
inc
das
sbb
cwtl
jb
fwait
sbb
mov
lods
and
add
cmp
ret
mov
cld
js
sbb
cwtl
mov
add
push
push
xchg
out
mov
or
test
fcmovb
sarb
fwait
mov
push
add
iret
lret
in
or
hlt
lds
test
mov
add
push
cli
push
mov
cmc
mov
adc
lods
outsl
test
fisubrl
and
addr16
mov
decl
repnz
mov
jno
int3
mov
xchg
pop
xlat
stos
lret
cli
test
or
mov
pop
xchg
inc
adc
push
lds
cmp
add
or
cli
inc
adc
or
test
fucomp
fcoms
sbb
mov
loopne
out
mov
mov
jo
jg
mov
ret
xor
sub
lock
iret
in
insb
and
cld
cs
lcall
mov
push
jge
cmc
loope
jne
shrb
jge
cmpsb
sub
orl
pop
add
or
divb
add
movsb
sbb
mov
adc
mov
jne
aam
jo
aad
push
cmp
push
rcrb
sarl
xchg
hlt
dec
inc
cmp
inc
sbb
mov
and
adc
pop
out
out
xchg
out
mov
call
insb
jno
mov
or
fisttps
sbb
cli
daa
xchg
loope
push
mov
jbe
cmp
aas
int3
jmp
mov
mov
sub
scas
in
push
rorb
fldenv
cmp
mov
xchg
pushf
push
and
lahf
jp
test
sbb
pusha
jg
aam
fidivl
iret
movsb
mov
push
inc
pop
pop
inc
jmp
or
fbstp
movsl
es
add
out
sub
enter
les
lret
das
xchg
sbb
les
pushl
mov
das
adc
jbe
dec
jg
ss
sbb
lock
pusha
addr16
inc
inc
mov
inc
sarl
adcl
lock
pop
test
js
dec
pop
fimuls
add
pop
jle
out
adc
adc
call
test
lds
or
aam
push
jbe
jmp
sub
in
loopne
push
xor
sbbb
popa
mov
incb
bound
test
add
ret
add
ficomps
test
test
int
adc
dec
test
scas
mov
pop
outsl
and
or
sub
sbb
pop
jo
or
cmc
adc
adc
daa
cmc
jecxz
andb
les
fcmovbe
cmp
dec
fs
lcall
int3
sub
add
mov
fstpl
xor
cmc
adc
adc
cli
mov
ds
cmp
mov
jle
pop
pop
lret
xlat
sbb
fimuls
lahf
mov
ljmp
jmp
in
popf
pop
repnz
jg
xchg
jp
xchg
scas
dec
jbe
arpl
mov
and
jge
pusha
add
cmp
idiv
rorb
out
stc
mov
filds
sbb
add
in
jmp
out
mov
call
lods
pop
xor
cmp
pop
aaa
test
das
xor
xchg
mov
pop
daa
dec
inc
and
xchg
and
hlt
lock
loop
fs
aad
dec
and
cmp
cmc
jo
out
dec
out
pop
xchg
and
dec
cmpsb
sbb
jae
mov
jecxz
lods
js
add
jae
cs
xor
insl
cmp
add
mov
insl
xchg
ret
rcrl
notl
pop
dec
in
xchg
inc
jl
int3
enter
mov
push
xor
es
add
fsubl
sub
unpcklps
mov
cmpl
or
jns
add
dec
sub
xor
push
xor
js
push
dec
out
mov
cmp
mov
out
popa
pop
adc
fwait
cmp
mov
sarb
xchg
cmc
mov
xor
push
add
sub
adc
jp
dec
cmp
sub
in
xchg
outsb
dec
cmp
inc
add
stos
xchg
mov
loop
leave
add
rorl
aad
jo
insb
sbb
and
nop
clc
sbb
push
rcrb
mov
mov
jo
in
or
imul
inc
xchg
push
pusha
add
jp
mov
push
and
adc
jp
xor
add
je
cmp
jns
adc
shrl
push
push
movsl
lret
mov
mov
jo
cmpsl
or
xchg
rolb
data16
jo
mov
aad
cmc
insb
test
stos
push
sahf
mov
sbb
add
mov
push
push
inc
mov
test
jmp
mov
lods
aad
bound
insb
js
test
outsl
in
dec
cld
jno
mov
aaa
iret
adc
sub
cli
push
shlb
or
jle
xchg
inc
push
add
movsb
add
pop
inc
cltd
mov
aad
stos
inc
pop
mov
mov
jge
popf
dec
xchg
xchg
fisubrs
cmp
outsb
push
aad
imul
out
cmp
loope
pop
adc
lods
push
push
popa
sub
stos
adc
cmpsb
or
mov
je
out
stos
roll
push
sub
out
es
sti
hlt
push
xchg
stc
dec
cmp
data16
out
or
add
mov
fdivl
push
mov
adc
jmp
shlb
and
fs
pushf
cmp
adc
jecxz
sahf
jne
push
aam
sub
ljmp
adc
push
cmpsb
nop
testb
mov
jmp
mov
xchg
xor
loope
cmc
xchg
and
lahf
jecxz
rcrb
or
out
dec
xor
xchg
add
pop
add
inc
stos
arpl
push
sbb
pop
call
dec
mov
cld
jp
pop
jle
fsubrs
lret
add
mov
sub
sub
inc
push
clc
push
mov
fcomps
sbb
lds
jecxz
cmpb
xchg
fcoms
fdivs
pushf
mov
repnz
xchg
mov
jmp
xchg
push
icebp
mov
popf
mov
inc
arpl
outsb
add
rorb
pop
mov
or
add
cmc
push
addl
mov
cmp
scas
imul
movsb
and
scas
scas
rolb
mov
leave
stc
add
punpcklbw
out
fistpll
mov
roll
gs
shll
test
push
cmp
pop
mov
adc
mov
icebp
repz
add
jle
inc
or
fiaddl
bound
sti
xchg
outsb
and
adcb
add
jns
sbb
pop
stos
aaa
cmp
mov
inc
dec
in
pop
xchg
add
inc
jo
add
mov
mov
mov
jo
out
mov
mov
and
hlt
rcrb
clc
ds
lret
cmpsl
movsb
mov
icebp
lret
jp
js
xchg
mov
aad
or
inc
mov
jle
adc
cld
sub
icebp
shlb
dec
in
sub
movsl
es
out
fcomps
mov
mov
aam
sbb
or
xchg
sahf
push
push
jmp
xor
push
pop
nopl
cld
cltd
neg
aaa
add
push
ret
cli
cmpsl
dec
cmpsl
sti
sbb
addl
pop
push
unpcklps
test
popa
push
clc
cmp
mov
aad
pop
add
loopne
je
into
fiaddl
or
insl
jg
cmpsb
ret
adc
fidivl
filds
cmp
test
fnsave
and
pop
push
int3
sbb
mov
push
and
cmp
mov
adc
js
lock
xchg
rorl
push
push
sbb
out
sub
sbb
or
sbb
mov
pop
push
fstp
sahf
pop
test
in
jo
sbb
sbb
cs
jp
ja
lea
xor
inc
idivl
pop
xchg
popa
inc
std
call
push
xor
lret
mov
sar
sub
insl
mov
rcl
cmp
stos
inc
dec
pop
pusha
test
push
mov
inc
movsb
notb
or
push
pusha
pusha
mov
outsb
dec
cmp
adcl
xchg
pusha
dec
cmp
roll
aad
pop
fisttpll
mov
rclb
xchg
cli
lock
leave
inc
xor
inc
data16
inc
mov
push
push
jmp
in
add
fmuls
cmp
jecxz
test
adc
dec
loopne
mov
clc
jb
fstp
fdivs
sbb
cmpsb
add
dec
js
mov
shl
icebp
mov
sbb
cli
add
jmp
add
mov
push
mov
cmp
je
mov
imul
lcall
sub
xor
mov
jmp
xchg
dec
js
sub
add
sbb
push
mov
push
jecxz
ud1
test
ret
out
in
xchg
and
rolb
pop
mov
add
ret
ret
jl
aaa
imul
imul
add
in
lret
sahf
push
mov
or
mov
les
sbb
stc
repnz
dec
cmp
xchg
loopne
xchg
ljmp
or
push
jno
daa
sub
pop
rorb
jne
fcmove
stos
shr
dec
push
andb
lods
cmp
jg
insb
sbb
sub
sub
ret
jecxz
sahf
mov
jg
cld
jo
popf
jge
cmp
test
mov
sbb
movsl
mov
add
sub
xchg
jecxz
push
aas
and
jb
stc
add
aas
add
lret
adcl
xor
or
addr16
pop
mov
addr16
cmp
jmp
sbb
push
out
inc
dec
mov
lods
or
mov
push
fnsave
js,pt
xor
decl
test
divb
pop
and
lds
lock
push
sti
into
push
inc
mov
ficompl
js
les
and
xchg
call
js
add
pushf
nop
pop
sub
push
jl
and
or
xchg
arpl
sbb
hlt
and
outsl
jb
test
aam
xchg
xchg
mov
or
add
pop
xchg
mov
es
push
mov
push
insl
and
cmpsl
mov
out
into
pop
cmpsl
mov
xlat
rorb
mov
mov
xchg
testb
add
lock
stos
lret
adc
add
sub
aas
mov
jmp
scas
sbbb
call
xor
xchg
int3
jbe
dec
xlat
aad
call
scas
insb
ja
xor
push
icebp
es
mov
sub
xor
sub
or
js
add
sub
xchg
pop
outsb
add
push
inc
or
pop
shrl
ss
notb
aaa
push
rol
cli
lret
mov
dec
pop
js
jbe
dec
arpl
inc
mov
mov
ds
pop
jnp
and
js
lcall
mov
xchg
js
add
lret
scas
mov
mov
lds
lods
je
icebp
outsb
inc
ljmp
jl
mov
fnstcw
lock
push
pushf
sbb
pop
xchg
lcall
dec
lea
inc
cli
mov
outsl
jl
js
dec
pop
xchg
sbb
js
xor
sub
movsl
add
iret
push
lcall
je
xor
fs
pop
mov
mov
in
sbbl
cmc
xchg
inc
mov
jo
jbe
sub
pop
cmpsb
stos
jecxz
addr16
mov
pop
and
lahf
inc
jae
clc
icebp
repnz
cmp
mov
push
ret
mov
or
inc
pop
sbb
xchg
pop
inc
cwtl
inc
test
movsl
out
adc
scas
dec
popf
push
imul
mov
sbb
inc
mov
cmp
leave
ljmp
scas
pop
push
inc
outsl
adc
lea
test
pop
pop
push
repnz
test
add
dec
mov
bound
js
sbb
push
repnz
lods
divl
adc
fwait
scas
fs
mov
lods
lret
fisubrl
les
out
adc
pop
mov
sbb
xchg
push
cli
js
pop
aas
adc
jo
je
inc
xor
orb
enter
xor
cmp
test
scas
lea
jne
sub
mov
inc
pop
push
cmp
pop
xchg
sbb
shrl
in
jecxz
inc
scas
or
mov
call
iret
clc
jp
js
popa
aas
add
add
mov
jge
rcl
insb
and
adc
push
lret
jg
fld
push
fcompl
mov
fildl
sbb
or
aad
cmp
pop
lret
xchg
stos
hlt
jne
adc
push
scas
cmp
rorb
sbb
pop
fisubs
loope
inc
loopne
or
cmc
sar
mov
movb
adc
loopne
push
test
push
add
xchg
fistpl
mov
incl
mov
pop
cmp
out
inc
enter
xor
insb
pop
mov
or
xchg
scas
rcrb
jo
or
daa
adc
std
subl
sbb
add
je
xor
xchg
sub
pop
mov
hlt
rclb
lcall
xor
lahf
cmp
xchg
in
pop
jnp
jg
pop
addr16
sbb
fsubrl
cmpsl
stos
ss
sub
jg
enter
sbb
testl
scas
xchg
push
mov
ljmp
jno
pop
in
or
data16
mov
loopne
xchg
dec
adc
push
imul
jb
js
decb
loop
pop
inc
decl
bound
mov
lea
loopne
rcrl
lock
ds
es
xor
push
push
mov
jecxz
add
sub
sub
pusha
scas
and
mov
xchg
inc
xor
lds
add
cmpsb
je
mov
and
xchg
add
add
pop
xlat
dec
push
or
fisttpl
mov
mov
aad
push
adc
and
ds
sbb
xor
shl
xor
and
das
loop
sahf
nop
xchg
pop
in
pop
jbe
addr16
sub
sti
movsb
ret
sbb
fwait
jno
mov
xor
jnp
push
in
icebp
xchg
mov
pusha
and
jle
xchg
fsubl
adc
arpl
jne
cmp
xor
add
push
test
movsb
xor
mov
in
cmp
sbb
cmp
jmp
fbld
add
mov
or
jmp
push
call
out
or
xchg
rol
jne
popf
sti
lret
jb
lock
dec
fisubrs
getsec
in
xor
jp
mov
push
addl
pop
cmp
mov
inc
emms
nop
aaa
shrl
pop
mov
jmp
cmpl
xor
sub
pop
dec
mov
push
iret
push
xor
sbbb
add
loopne
repnz
sbb
aaa
cmp
lds
push
pop
add
jmp
popa
int
xlat
andb
mov
or
add
loope
sub
jbe
imul
jge
mov
ja
rclb
xor
mov
cwtl
std
out
cmp
mov
mov
adc
mov
dec
sbbb
imul
mov
mov
and
js
and
inc
pop
lret
enter
xchg
pop
loope
addr16
pop
out
push
incl
lds
pop
dec
mov
push
jg
pop
xchg
loopne
stos
sbb
fdivp
cld
cmp
or
arpl
pusha
popa
sbb
iret
and
imul
shrb
inc
rcll
and
push
lods
pop
sub
dec
jne
lahf
sub
inc
sub
std
jne
hlt
sbb
test
dec
xchg
mov
sbb
sbb
daa
mov
pop
inc
sub
mov
outsb
and
xchg
jle
mov
dec
in
sarl
push
pushf
cld
ljmp
adc
push
movsl
test
dec
movsl
pop
punpcklwd
bound
inc
ret
aad
xlat
sbb
mov
into
loop
xchg
negl
sbb
sarb
xor
sbb
lret
push
outsb
into
iret
or
sarb
sbb
fs
roll
xor
decl
imul
mov
out
add
add
fiaddl
stc
mov
mov
xchg
leave
xor
jmp
enter
mov
pop
in
enter
scas
js
mov
out
xchg
cmp
enter
test
mov
jge
popl
pop
es
mov
stos
les
xor
ss
cmp
or
adc
orl
inc
movsb
in
adc
loope
idiv
sbb
mov
std
mov
in
arpl
push
cmp
icebp
out
rcr
test
mov
sbb
push
lock
cmpps
out
test
add
sub
loope
pusha
sbb
inc
dec
inc
in
loopne
jle
mov
aad
xor
loop
incl
push
shl
mov
aad
add
mov
repz
jb
jo
stos
mov
adc
call
push
sbb
int
movb
mov
dec
dec
sbb
push
stos
mov
dec
sub
or
stos
mov
inc
and
cmp
shlb
jg
fwait
ja
inc
loope
aad
hlt
imul
mov
aaa
add
xor
mov
mov
push
fs
pushf
insl
int
outsl
arpl
je
test
adcb
repnz
pop
jle
dec
mov
lods
and
test
or
fnsetpm(287
pop
es
orl
jae
decl
cmp
mov
call
mov
push
ja
xchg
imul
or
cmpsb
loop
cmp
outsl
sbbb
movsl
sti
adc
fdivl
inc
push
xor
jecxz
sarl
paddw
pop
adc
mov
jle
cmp
stos
xor
and
mov
andl
xchg
or
sbb
push
test
or
inc
adc
mov
addb
adc
and
sbb
pop
push
aad
ja
js
aaa
scas
faddp
les
lock
lahf
cmc
mov
stos
in
fsubs
pop
fwait
cmc
xor
push
ja
push
outsb
or
xchg
jp
arpl
je
mov
aam
and
mov
popf
add
jnp
push
arpl
mov
mov
mov
daa
js
mov
sbb
pop
ljmp
call
xchg
js
push
mov
mov
shll
cmp
sbb
in
subl
xor
xor
lods
les
and
xor
dec
pop
popf
and
cmc
repz
or
adc
js
or
imul
push
adc
insl
aad
gs
xchg
pushf
loopne
sti
add
push
cmc
cmpsl
je
jmp
fsubr
lahf
dec
cmp
push
inc
and
xchg
sbb
sub
add
pop
pushl
mov
inc
pop
fisttpll
sbb
popl
mov
mov
loope
or
inc
ror
dec
pop
cli
out
cmpsb
leave
inc
lahf
jnp
add
and
jns
xor
in
ret
outsb
jle
dec
push
andl
mov
scas
lds
and
stos
hlt
loop
mov
lret
mov
xchg
out
pushf
imul
sub
mov
movsl
jns
les
insb
loop
data16
dec
loope
jnp
xor
aad
xchg
shrb
lcall
movswl
jne
scas
sub
ss
pop
je
mov
ucomiss
sbb
icebp
xchg
mov
pop
sub
dec
mov
push
cmp
test
lea
add
sbbb
fmuls
mov
js
mov
aad
pop
push
cmp
jl
mov
adc
push
mov
cmp
enter
rolb
adc
sahf
inc
jns
loopne
in
aas
or
jo
xor
int
sub
rclb
adc
sbb
mov
repnz
push
int
jbe
icebp
cmp
adc
and
xchg
pop
stos
sbb
outsb
call
adc
jne
cmp
and
jnp
sar
pop
and
sub
xor
outsb
es
addr16
xor
js
mov
add
fisubs
bound
stos
adc
mov
mov
mov
arpl
mov
add
sub
sti
push
adc
repz
cmp
cwtl
cmpsb
cmp
cs
test
int
xor
scas
mov
movsb
pop
lds
sbb
nop
imul
std
jmp
xor
mov
cmp
in
movsb
cmpsl
or
lods
mov
call
push
cmp
je
or
sub
adc
test
xchg
adc
mov
lret
arpl
popl
jmp
js
inc
pushf
dec
mov
test
pop
clc
sub
inc
jae
mov
adc
xchg
shll
jnp
sbb
push
enter
js
imul
or
jo
sti
outsb
adc
pop
dec
pop
jo
aas
mov
xor
adc
mov
in
enter
out
xchg
mov
jmp
call
insl
loopne
mov
jmp
popa
roll
test
xchg
pop
shr
push
dec
xchg
jp
pop
js
mov
std
add
ret
mov
int3
xor
mov
call
jno
jge
std
mov
push
add
in
ds
pushl
inc
clc
or
lds
insl
sbb
add
pop
mov
or
or
loop
insl
mov
cltd
push
add
pop
loopne
mov
or
sbb
dec
jle
call
jbe
sahf
aam
sub
test
inc
pop
in
movsl
mov
loope
in
dec
sub
xchg
mov
sub
dec
hlt
or
js
sbb
int
lock
adc
inc
push
or
lcall
in
xor
dec
js
fldl
loop
push
lock
pshufw
dec
sub
jg
adc
xor
in
xlat
lcall
dec
jp
lds
pop
test
lcall
and
nop
stc
jecxz
or
decl
into
sbb
mov
and
mov
out
mov
add
and
inc
test
stos
adc
push
sub
jns
sar
call
or
jg
xlat
icebp
lds
sub
nop
pop
and
sbb
sbb
loopne
add
clc
fdivr
or
clc
fdivrl
jne
int
or
lahf
lea
mov
das
lahf
mov
pusha
mov
lahf
cmp
xlat
shl
mov
mov
je
pop
mov
std
ljmp
adc
test
into
push
into
es
popl
rcrb
mov
fists
jle
in
adc
icebp
push
fldt
aas
push
add
xor
sub
cmp
je
test
pusha
mov
mov
bound
in
sub
jno
or
scas
pop
sub
lock
mov
cmp
sbb
add
pop
xchg
sarb
xor
clc
add
ret
subl
xchg
dec
out
mov
in
les
push
negl
dec
inc
fmuls
jl
loope
ja
jb
dec
pop
rsqrtps
cmpsl
cltd
cli
adc
gs
js
and
xchg
js
imul
jge
dec
add
cli
cli
sub
jne
xchg
fldt
mov
sbb
sahf
push
mov
adc
lret
imul
pop
cli
pop
push
cmp
test
dec
pop
lret
jmp
ds
les
cmp
cmp
jae
add
mov
xor
lods
rcll
push
adc
into
and
ljmp
dec
and
or
jl
lret
xchg
dec
sti
adc
shlb
into
inc
adc
xor
inc
das
hlt
cli
ds
pop
int3
shll
sub
sub
lcall
jo
andl
imul
mov
ret
xor
sbb
outsb
addr16
jmp
es
scas
jge
xchg
dec
xchg
mov
cltd
stos
cmc
push
jnp
das
mov
aaa
test
adc
dec
js
aam
dec
cmp
mov
add
mov
mov
pop
pop
sub
clc
push
cmp
ljmp
mov
ja
mov
andl
sub
loopne
into
jl
sbb
test
mov
push
xchg
je
jb
jle
sahf
dec
popa
or
mov
xchg
mov
xor
clc
and
mov
inc
xchg
dec
lea
shrb
adc
sbb
int3
lcall
mov
mov
cli
mov
inc
sti
sahf
add
jle
addl
push
pop
test
mov
pop
out
inc
les
pop
xsaves
data16
adc
mov
sbb
aam
mov
dec
jne
mov
les
fisubrl
mov
push
inc
ret
and
insl
cs
in
or
ret
add
jmp
test
int3
xchg
pop
lock
shlb
adc
rolb
jecxz
lods
mov
adc
xchg
or
icebp
fs
add
popa
cmpsl
mov
dec
ds
jno
mov
push
test
fwait
mov
mov
dec
mov
inc
pop
jnp
rclb
sahf
sbb
jmp
insl
orl
push
or
cmp
adc
inc
and
sahf
xor
addl
lock
mov
psrlw
and
clc
sub
loope
push
popa
add
cltd
stos
mov
call
aaa
in
adcb
pop
dec
sbb
mov
es
mov
inc
clc
adc
mov
jge
iret
repz
jmp
or
add
mov
sbb
adc
cwtl
arpl
adc
mov
ds
popa
addb
popf
push
and
add
lret
sub
clc
aam
leave
fsubrl
cmpsl
adc
rcr
mov
sar
inc
sub
or
add
pop
push
cmp
jl
dec
ss
ret
int
sub
or
cmp
or
dec
test
jge
je
loopne
lea
clc
ret
xchg
add
es
sti
inc
aam
sub
cmp
adc
xchg
sbb
hlt
sub
ja
test
jg
mov
hlt
mov
movsb
call
aas
ss
jnp
pusha
out
mov
mov
scas
or
inc
es
andl
cld
rclb
cld
shrl
mov
add
mov
loope
or
xor
sbbl
cs
movsb
mov
fbld
clc
cwtl
cwtl
dec
sbb
xchg
mov
ret
cltd
loope
out
pop
jle
mov
add
hlt
mov
cli
inc
mov
lcall
enter
test
jb
and
inc
repz
jae
sti
rolb
js
mov
mov
push
pop
inc
dec
cmp
mov
out
dec
or
int3
dec
in
pop
je
mov
jge
loop
push
fs
push
sbb
lret
sub
jbe
mov
jns
lock
adc
xorb
or
loope
loopne
sbb
repz
bound
inc
cwtl
mov
jae
test
stos
aaa
add
dec
xor
and
push
jp
pop
sbb
inc
jmp
pop
add
fnsave
cmp
loop
and
cmp
repnz
sbb
mov
bound
cmp
mov
out
pop
inc
xchg
orl
int3
lds
icebp
iret
xor
sbb
fdivl
lea
ret
fstpt
popl
les
mov
cmp
cmp
dec
test
punpckhbw
rorl
adc
stc
outsl
sub
aaa
in
scas
add
sti
sub
mov
cld
test
mov
jo
test
mov
or
jle
test
add
dec
les
adcb
lods
inc
adc
mov
sub
scas
pop
push
pop
cld
das
xlat
gs
and
loope
aas
or
dec
add
cmpsb
mov
loop
mov
call
jmp
jecxz
stc
adc
int
push
push
arpl
adc
repz
pop
in
int3
mov
or
dec
int
arpl
inc
push
bound
xchg
js
cli
test
mov
nop
ret
pop
test
in
je
mov
js
mov
pusha
roll
out
push
sub
ss
sbb
adcl
xor
cmp
paddb
movsl
sub
cwtl
and
ss
idivb
pop
loope
add
out
or
mov
lock
enter
push
mov
addr16
scas
mov
test
orb
jg
xchg
out
jbe
imul
mov
mov
jne
jecxz
xor
pushl
dec
adc
enter
jl
push
add
cs
mov
icebp
outsb
clc
lods
cli
mov
jg
sbb
aam
test
aas
sbb
out
mull
mov
push
adc
fcmovne
in
mov
dec
or
rolb
jmp
rorl
pushf
add
in
xchg
xchg
adc
loopne
push
in
addr16
pusha
popa
mov
nop
adc
xchg
dec
mov
rcrb
xlat
out
pusha
stos
ds
jl
and
and
decl
ret
jp
push
sub
loopne
mov
repnz
and
rolb
sti
or
push
test
aad
jno
and
cmc
lods
mov
pop
iret
or
inc
popa
in
loop
in
xlat
cmpsl
jmp
cmpsb
je
sub
test
pusha
jno
adc
xchg
cltd
cmp
icebp
aas
ljmp
imul
cwtl
xor
pop
shrb
jns
into
fwait
mov
rcr
xchg
shlb
je
loop
sarl
mov
stos
lcall
fstl
dec
mov
test
adc
scas
push
jmp
or
lcall
int3
jge
cli
mov
xor
imul
mov
in
mov
cmp
scas
or
sub
jle
out
or
pusha
shr
sbbb
add
add
inc
xchg
dec
int
mov
mov
inc
add
push
xchg
ljmp
mov
adc
mov
in
lock
inc
mov
push
frstor
insl
push
xchg
and
je
sbb
pop
lea
xchg
lods
jnp
pop
sub
cld
sahf
inc
or
mov
test
not
xchg
dec
leave
imul
aad
shlb
inc
inc
js
cmpsb
mov
adc
data16
add
test
andl
mov
fs
xchg
mov
push
loopne
push
imul
add
mov
shll
popa
and
pushf
push
push
and
jle
mov
or
sub
call
mov
add
pop
add
shr
ret
hlt
data16
cmp
orl
lock
or
adc
push
movsl
enter
mov
je
jo
cmpsl
jg
push
lods
adc
mov
lock
xchg
call
lret
mov
rolb
enter
fldt
ss
int3
mov
js,pn
add
cmp
adc
adc
pop
js
xlat
pop
ds
pop
mov
call
adc
sub
and
inc
cmp
js
mov
mov
jo
mov
orb
sbb
lret
push
mov
jg
push
dec
shr
sbb
fdivs
inc
je
pop
pop
stos
inc
adcl
aam
jns
mov
mov
inc
jns
out
dec
adc
add
arpl
mov
push
ljmp
sub
ds
scas
fwait
nop
add
push
mov
jl
stos
jne
es
popf
fwait
mov
sub
outsl
rcll
xchg
sarl
add
rclb
inc
aaa
pop
xor
pop
in
push
push
popa
ret
clc
in
push
popa
fldt
mov
roll
jge
movsl
aad
xor
mov
call
call
mov
jbe
sbb
or
mov
cld
jge
roll
fsubs
mov
jo
dec
mov
xchg
mov
sub
push
lea
push
fidivs
xchg
push
or
push
cmp
xor
sbb
or
mov
add
shrb
sbb
insb
pop
xor
les
mov
mov
int
mul
cwtl
in
enter
mov
jg
dec
movsb
je
mov
into
aam
loopne
pushl
ja
stos
xor
gs
sub
ljmp
or
je
or
loope
pop
and
loop
imul
push
dec
push
cld
addb
jb
movl
incl
test
and
push
mov
ljmp
and
nop
enter
ret
push
xchg
and
xor
dec
dec
push
dec
loope
repnz
push
cwtl
mov
cmpb
push
insl
inc
lds
pop
fsub
cmp
xor
add
rorb
xchg
fdivrp
adcb
push
adc
xor
lahf
cwtl
ljmp
push
clc
subl
push
mov
adc
icebp
mov
addb
jl
pushf
xchg
cmpsl
pop
leave
sub
pop
pop
mov
sbb
fistl
mov
push
xchg
push
lock
cmpxchg
add
pop
aam
outsl
mov
jmp
sar
arpl
aas
mov
xor
test
or
cltd
mov
icebp
mov
xor
cmpsl
bound
pop
inc
push
daa
mov
xchg
incb
aas
pop
outsb
lea
adc
fwait
xchg
lea
sbb
les
call
insl
inc
adc
ds
jecxz
in
aam
jge
inc
in
scas
movsb
aas
xor
sub
add
cmp
out
xor
xchg
pop
jl
pop
std
lcall
mov
add
jns
or
stos
in
testb
mov
cli
fs
mov
cli
cltd
push
inc
sub
or
xchg
cmp
pop
sbb
daa
addl
popa
cmc
sbb
js
push
lock
xchg
sbb
sub
ds
sbb
mov
mov
sbb
rcrl
mov
scas
sahf
add
or
dec
mov
or
cli
mov
pusha
mov
push
mov
xchg
popf
push
sub
stos
ss
pop
mov
adc
repz
cmp
pop
int3
cli
inc
push
pop
mov
stos
in
in
loope
mov
clc
xchg
inc
jne
xchg
sbb
mov
pop
aam
test
add
rcll
out
testb
in
sbb
data16
shrb
cld
and
rclb
xchg
inc
shll
xor
lret
loope
or
mov
xchg
and
lock
add
sub
inc
xlat
sbb
dec
xchg
lods
in
fwait
dec
mov
cmc
enter
push
enter
inc
jl
sbb
fldl
push
adc
mov
fmul
pop
ljmp
bound
push
aam
sub
push
shlb
ret
jle
mov
push
mov
loope
fsubrs
xchg
inc
adc
adc
push
fisubs
lret
mov
lea
and
lahf
ret
rcl
mov
mov
sahf
add
push
ss
call
outsb
ljmp
mov
scas
sar
call
jno
ljmp
mov
loop
pop
fwait
mov
mov
mov
xlat
fstl
shr
jge
mov
loopne
and
popa
sbb
add
ret
lret
pop
mov
lock
mov
push
adc
fcoml
cli
cmpsb
in
xor
int3
ror
icebp
add
pop
add
imul
cmp
jge
rolb
jno
and
dec
cmpsl
xchg
jbe
sub
inc
add
add
rorb
daa
loope
cmp
dec
icebp
cmp
jno
into
add
jge
fdivl
push
fsubl
rclb
rcl
out
sbbl
icebp
scas
enter
jb
add
or
inc
push
or
cmp
cmpsb
adc
shlb
mov
or
test
adc
add
cmpsl
incb
in
push
js
test
icebp
cmp
pop
cmpsl
adc
mov
sbb
inc
xchg
aad
xor
jge
popl
je
mov
sbbb
hlt
push
cmc
push
push
push
adc
ds
push
int3
cwtl
icebp
mov
pop
cmp
jbe
fistpll
das
cmc
shrl
shlb
mov
or
mov
lods
jne
mov
pushf
or
ffree
push
jecxz
clc
pop
mov
cs
ljmp
jmp
xchg
xchg
jp
movsb
sbb
adc
dec
pop
insb
lods
enter
ljmp
orl
jno
cmp
ljmp
enter
adc
ja
push
sbb
adc
mov
aad
or
inc
push
ror
push
fimull
pop
xchg
adc
cmc
addl
adc
push
je
mov
xchg
add
loope
dec
mov
fucomp
cmp
jge
push
or
stos
dec
lods
in
mov
bound
add
cwtl
cwtl
pop
adc
xor
ljmp
sarb
dec
jmp
inc
test
bound
and
jo
cmp
pushl
popf
popa
sbb
xor
cmp
roll
push
pop
inc
inc
jl
or
or
sbb
out
stos
pushf
rorl
popa
lods
bound
jo
add
sbb
decl
icebp
add
mov
push
inc
loope
imul
testb
ret
test
cmpsl
xor
mov
stos
es
mov
sub
lea
jb
inc
cltd
fisttpll
or
xor
xchg
popa
inc
andb
add
xchg
cmp
mov
jl
xor
into
push
add
mov
movsb
or
xor
jmp
daa
jp
call
mov
and
and
inc
clc
jmp
jae
mov
adc
loope
inc
test
jp
or
clc
mul
aaa
jle
lock
push
cld
jl
fadds
imul
in
xor
lock
pop
std
push
ljmp
xor
mov
insl
inc
inc
sar
daa
xchg
fdivrl
push
loopne
add
mov
aaa
xchg
xchg
pop
push
cld
cmpb
xchg
sub
mov
adc
or
dec
fdivrs
stc
pop
jne
push
out
lret
mov
hlt
mov
idivb
mov
inc
mov
test
sub
inc
jl
out
cli
and
das
or
or
mov
pushf
or
or
xor
xchg
lcallw
call
dec
jl
pop
push
fcmovne
sbb
popa
xor
sub
pop
mov
add
adc
rcl
cmp
jecxz
inc
mov
xchg
jg
cli
xchg
js
jo
mov
add
xchg
icebp
shll
mov
xorb
cmp
in
and
and
scas
movq
cmp
movsl
cmp
ret
jo
les
out
sahf
ss
jns
add
repz
inc
addr16
jg
sbb
mov
sbb
fisttpl
nop
ds
xchg
movsb
mov
insl
clc
inc
xor
fs
push
mov
loope
inc
lods
push
and
sbb
js
test
jnp
mov
mov
xchg
cmpsl
push
cmp
jno
mov
xor
mov
mov
pusha
or
pop
sarb
xchg
or
xor
sbb
or
jp
adc
xor
out
mov
cmp
lahf
int
add
loopne
test
cltd
es
out
out
mov
xor
subl
jmp
icebp
or
shlb
mov
push
stos
call
out
jmp
dec
js
mov
cmpsb
and
stos
xchg
mov
cmp
xor
xchg
test
outsl
cmp
test
push
pop
sub
call
push
and
xchg
out
into
loopne
lret
fldl
jle
push
xchg
addl
sbb
fcompl
dec
dec
cs
int
and
cmp
sub
sub
mov
leave
cmp
push
pop
mov
push
cs
add
sbb
jle
push
gs
cmp
rcr
and
inc
adc
daa
outsb
hlt
pop
pop
add
ret
adc
inc
sbb
mov
loop
pop
inc
pop
popf
in
repz
push
inc
in
clc
xchg
sub
sahf
mov
push
jg
inc
bound
jb
scas
and
mov
loop
xchg
test
mov
enter
sbb
xchg
idivl
ret
add
lock
movsl
cmc
in
clc
pop
sbb
xor
in
mov
lcall
pop
pop
sub
push
pop
push
lock
xor
mov
arpl
jno
nop
cli
mov
dec
or
sbb
push
outsb
inc
and
push
and
mov
sbb
mov
cwtl
mov
out
daa
dec
mov
dec
jmp
and
stos
sub
ljmp
sbb
daa
add
das
stc
imul
arpl
add
sbb
and
int3
pop
mov
add
push
push
bound
add
adc
add
pop
lods
out
gs
js
fisttps
lret
js
lods
mov
cmp
scas
cltd
fsubrl
sub
adc
dec
mov
not
mov
fidivrs
inc
rol
push
mov
pop
pop
sub
scas
inc
or
loope
loopne
repz
ret
ret
inc
push
and
enter
lahf
sbb
cmp
adc
je
int
inc
jg
imul
lds
sbb
orl
fists
jb
adc
cmp
scas
mov
inc
faddl
xchg
out
fidivl
js
out
clc
mov
pop
call
dec
ja
ror
mov
jle
gs
loop
mov
movsl
sahf
sbb
mov
pop
test
jo
cli
pop
testl
lcall
fiaddl
adc
mov
loop
sub
sbb
sbb
movsb
xchg
and
mov
imul
adc
sub
fs
push
sub
push
pop
adc
mov
jp
pop
dec
xlat
cld
ds
stos
cmc
sub
push
pop
jns
data16
ljmp
loop
ret
inc
cs
in
jnp
or
lock
push
adc
jg
test
insl
cwtl
push
pop
jle
and
add
mov
jo
jg
pop
icebp
mov
xor
xchg
cmp
pushf
js
pop
ret
in
mov
mov
mov
rcll
fwait
repz
mov
add
test
imul
les
dec
mov
scas
pusha
loopne
cmp
aas
in
cmp
lock
jle
mov
cmp
or
push
sub
int
mov
stc
mov
pop
sbb
push
into
and
push
lock
lcall
mov
cmp
cmp
les
sub
mov
lds
outsl
xchg
xor
pop
sub
pop
fisubrl
push
in
popa
sbb
es
xchg
inc
mov
lock
das
iret
pop
aaa
lahf
lret
adc
inc
test
fidivrs
mov
push
pop
xor
test
leave
lds
pop
sbb
pop
lods
cwtl
out
xor
mul
outsl
call
cmpsl
lcall
daa
out
pop
sbb
sub
xor
jmp
cs
bound
pop
push
icebp
jb
stos
call
in
es
adc
mov
outsb
std
xor
sti
int3
push
in
mov
inc
xchg
mov
or
or
imull
cwtl
gs
cmp
cli
mov
sub
int
mov
jg
adc
lcall
jle
cld
push
leave
ret
in
add
xor
dec
pop
ret
sub
and
outsb
jne
je
mov
je
push
xlat
xor
or
mov
subl
mov
pop
ljmp
jmp
sbb
pop
push
xchg
sahf
ss
clc
ljmp
out
dec
push
push
fbld
pushf
dec
jns
imul
cmp
int
jle
ljmp
push
adc
inc
in
xor
jl
mov
adc
jmp
pusha
push
fistl
xchg
das
ds
fisubl
pop
test
mov
loopne
push
jge
rcl
dec
xor
pop
stos
mov
rorl
and
test
inc
jl
es
and
mov
sbb
cmp
add
mov
add
in
and
dec
cmp
das
cmp
mov
xchg
fstl
dec
insl
ljmp
aam
mov
xchg
nop
out
imul
add
andl
sbb
add
dec
jb
insl
hlt
mov
cmp
jle
pop
dec
add
int3
cmpsb
or
mov
adc
adc
scas
andl
jbe
aam
dec
loopne
mov
scas
dec
mov
loopne
insb
mov
out
movsl
int3
adcl
stos
fimull
std
jge
out
sbb
lock
xor
mov
cmp
jmp
dec
sub
lods
sahf
cmpl
inc
jl
lahf
cmp
addl
ds
jle
mov
cld
cmpsb
sbb
cwtl
in
movl
outsl
pop
add
sbb
mov
je
push
inc
sarb
sub
cmp
pop
jmp
adc
iret
xor
cmpsl
sbb
pop
js
dec
xchg
sub
and
lds
jp
stos
nop
pop
rcr
mov
and
sub
fidivs
or
add
push
mov
xchg
mov
cli
rcrb
sahf
add
popf
cmp
mov
sbb
das
ja
dec
pushf
testb
and
adc
je
mov
aad
xchg
scas
add
inc
test
push
sahf
jge
pop
cmp
mov
inc
dec
add
mov
jl
push
aam
rcrb
add
inc
dec
cwtl
std
lock
mov
bound
adc
jl
push
pop
sub
std
shl
push
insb
jmp
xor
stos
sub
nop
cmp
mov
mov
mov
xchg
ret
pop
daa
lock
push
jne
mov
fnsave
mov
sbb
add
loopne
jbe
sub
lret
xchg
ret
mov
inc
cs
cmpsl
pop
adc
lods
sub
nop
sahf
cs
in
clc
scas
jl
aaa
cmp
pushf
mov
xchg
pusha
enter
pop
fstl
jo
sub
decl
pushf
sahf
icebp
or
inc
cli
mov
mov
stos
lahf
push
loopne
xor
xor
shrl
lock
jle
aam
jnp
fdivrl
sbb
mov
incl
pop
stos
pop
and
adc
add
push
mov
loope
sub
cmpsb
inc
movsl
inc
ss
out
xor
arpl
pop
adc
sub
jmp
mov
in
shlb
pop
mov
or
mov
flds
sbb
ss
xchg
ljmp
dec
adc
mov
mov
aas
ss
adc
push
clc
cld
movsl
push
lods
in
inc
sub
call
mov
rolb
pop
add
push
int3
rcr
loope
dec
add
aam
fimull
vpshufhw
filds
mov
mov
scas
sub
or
mov
adcb
pop
sub
xchg
mov
lock
lahf
loope
jle
push
nop
pusha
jo
mov
mov
dec
enter
mov
lods
or
pop
xchg
xorl
rorb
mov
out
adc
push
pushl
dec
or
push
cld
cld
insl
adc
push
scas
std
into
inc
dec
clc
push
adcb
call
cwtl
inc
in
mov
lahf
sbb
inc
sub
in
int
push
mov
popa
movsb
lret
mov
pop
mov
push
int
xor
lods
bound
loopne
mov
cmovb
pop
mov
lock
fs
or
push
out
mov
rcll
pop
mov
movsl
pop
or
ljmp
addl
push
add
in
jo
clc
inc
dec
repnz
pusha
cmp
addr16
dec
scas
pop
mov
in
les
loope
add
add
movsb
loopne
sarl
idiv
mov
test
mov
adc
lcall
mov
inc
aam
jb
sahf
in
insl
jbe
mov
jnp
pop
in
imul
sub
cmc
and
test
jne
nop
sbb
inc
out
xor
adc
push
fs
pusha
jge,pt
jno
movsb
nop
mov
pop
jo
or
dec
xor
push
loop
rcrl
xor
xor
out
movsl
scas
scas
cmp
inc
cs
rorl
std
ret
mov
ja
insl
ljmp
sbb
push
xlat
mov
mov
ljmp
inc
push
xor
jl
cli
dec
rcrb
cltd
lcall
xchg
pop
jge
dec
es
shrb
decl
add
int
cmp
mov
enter
pop
or
push
aam
je
pmulhuw
in
negb
lea
add
add
sub
loop
hlt
stos
cmc
sub
rorb
insb
data16
aas
roll
insl
out
jo
adc
dec
dec
sahf
fcmovbe
test
push
icebp
mov
xlat
lcall
inc
or
mov
pop
sub
fbstp
mov
or
cmp
or
or
rorb
dec
xchg
xor
adc
pop
add
cmp
cmpsb
mov
cmc
test
sub
mov
push
cwtl
lods
add
scas
clc
imull
dec
xor
and
addl
cld
lret
hlt
cmpsb
outsb
xchg
loop
repz
outsb
mov
ss
sti
std
cmp
popl
push
adc
xchg
and
xchg
loopne
popa
mov
int
xor
hlt
push
pusha
sti
add
jne
shlb
add
addb
mov
inc
sub
roll
mov
xor
cmpb
mov
push
sbb
es
mov
xor
hlt
movsb
sbb
ljmp
sbb
subb
rorb
mov
je
dec
shrb
loop
sahf
out
sarb
repz
or
dec
mov
int
mov
mov
testl
sbb
sbb
pushf
mov
add
sbb
je
fstpl
call
mov
aam
mov
push
adc
lret
aaa
and
or
pop
adc
dec
rcl
rcr
movsl
sbb
push
cmp
xor
jle
outsl
out
fisubl
int3
cwtl
dec
les
mov
icebp
mov
loop
mov
jb
rorl
lret
inc
cs
call
sbbb
jg
and
jge
aas
mov
cld
and
lock
xor
add
hlt
inc
xchg
or
roll
push
bound
mov
in
cmpsb
mov
jle
cmp
loopne
xchg
jbe
add
lea
pushf
jmp
dec
add
push
sub
es
fdivl
pop
popa
data16
jmp
push
inc
jle
cmc
incl
adc
ja
inc
or
movsb
dec
push
pop
ja
pop
mov
dec
in
sbb
rclb
mov
andb
stos
pop
or
dec
add
shll
add
fdivs
adc
xor
mov
das
data16
inc
and
push
sub
adc
idivl
dec
cmpsb
imul
lods
aas
mov
and
sahf
adc
push
shrb
push
sub
lods
add
jmp
loopne
sub
xchg
fs
add
movsb
or
test
in
mov
jo
cld
xchg
xor
cmp
push
jl
lret
not
arpl
adc
mov
fildll
inc
imul
jbe
les
loopne
arpl
adcb
push
push
add
xchg
jno
bound
fsubrs
mov
mov
stc
jle
loop
sbb
jle
pop
cmp
lret
inc
leave
rclb
inc
and
push
jecxz
cwtl
inc
ret
jbe
pop
jg
push
in
out
push
and
int3
add
test
push
rol
mov
sbb
or
mov
and
popa
cli
scas
aaa
lock
ret
cmovg
iret
inc
jo
jg
daa
out
imul
add
mov
out
in
cs
mov
xchg
pop
jg
jno
dec
lahf
aaa
es
addr16
xor
das
adc
cwtl
mov
push
ss
fisttpl
jmp
mov
jmp
or
lods
pushl
scas
xorl
push
stos
push
mov
outsb
cmp
or
inc
or
push
icebp
andb
arpl
fiadds
loopne
xchg
insb
clc
inc
cmp
pop
mov
dec
insl
sbb
or
jg
xchg
cmpsb
mov
jb
push
lret
and
push
jle
jno
jg
iret
repnz
push
add
mov
bound
push
not
ljmp
insb
xor
cli
ljmp
loopne
push
lds
iret
mov
sbb
xchg
add
or
je
cli
mov
cmpsb
aam
jae
pop
push
out
lret
dec
pop
push
rorb
sub
xchg
xchg
sub
incl
addr16
outsl
int3
popa
icebp
test
into
es
inc
imul
mov
test
pop
mov
js
or
cwtl
cmpb
out
mov
movsb
cli
or
cmp
xchg
sub
add
js
jmp
fists
loope
dec
push
inc
stos
pop
add
sbbl
jl
test
and
lods
sarb
movsl
test
clc
out
fmull
stos
mov
loop
cmp
lods
loop
push
adc
andl
sbb
arpl
sub
sub
bound
mov
xor
loop
out
in
in
incl
mov
stos
or
and
mov
bound
outsl
aad
pushl
pop
mov
xchg
jbe
fdiv
fucomi
pop
out
sbb
xor
add
imul
jbe
loope
sbb
hlt
pop
push
add
dec
jl
loop
call
test
xor
pavgw
aad
addl
lock
mov
arpl
push
add
mov
and
dec
adc
data16
jmp
insb
xor
push
cs
or
jbe
mov
stos
mov
push
sub
mov
fimull
sbb
sti
cwtl
adc
mov
dec
mov
jnp
movsl
pop
mov
test
test
cmp
loope
ljmp
nop
pushf
imul
jg
incb
push
dec
lock
mov
push
cmp
add
xchg
pop
cmp
hlt
movsb
xchg
adc
mov
pusha
leavew
sub
mov
call
xchg
ljmp
xchg
shlb
hlt
insl
push
into
fchs
adc
lcall
mov
push
mov
or
popa
mov
mov
push
loopne
dec
pop
push
sbb
ret
push
cmp
and
testb
or
repz
pop
mov
sub
addb
or
add
jle
mov
dec
mov
out
aad
jmp
xchg
les
mov
pushf
mov
cwtl
or
xor
or
xchg
inc
icebp
jp
pop
adc
xchg
and
cmove
xchg
xadd
push
rcr
and
jle
mov
add
pusha
mov
dec
popf
push
mov
push
lock
adc
lods
mov
or
push
add
std
xchg
test
mov
sbb
jp
fidivl
push
sub
pop
icebp
cld
stc
lods
inc
rorl
pop
in
add
decl
js
cmc
lret
jle
xor
jo
rol
fadd
in
mov
jl
sbb
mov
hlt
je
arpl
lock
in
mov
and
lahf
sub
mov
icebp
in
xchg
lcall
dec
jp
clc
mov
push
int
dec
mov
pop
xor
out
insl
jo
fs
in
shll
lret
lds
xchg
sub
in
xorl
pop
dec
push
jmp
sbb
movsb
xchg
hlt
inc
pusha
lret
sbb
enter
aas
push
mov
fidivrs
xchg
xchg
or
pop
insb
cmp
mov
mov
pop
push
dec
mov
test
idivb
push
fiadds
push
push
leave
out
mov
add
xor
jg
loopne
shll
ds
and
xchg
push
cli
aaa
xor
fcoms
les
jne
in
cmp
adc
ljmp
rcr
jbe
inc
pop
insb
xchg
fs
pop
roll
xor
sti
xor
pop
lahf
cmpsl
clc
sub
add
jle
pop
jo
pop
testb
pop
lods
hlt
push
ja
jo
out
xchg
lds
adc
rolb
inc
out
cmp
or
imul
lods
sti
xchg
es
loop
stos
cmp
xor
xor
or
mov
out
xor
hlt
mov
test
cld
cmp
fs
lock
mov
out
sub
push
or
icebp
les
loopne,pt
sbb
xchg
nop
add
js
mov
lahf
adc
inc
xchg
cmpb
js
das
les
push
mov
add
in
sbb
in
adc
mov
push
sbb
sbb
out
cmp
cmp
jle
pop
jb
inc
or
shl
xor
lock
or
or
inc
xchg
rorl
pop
lret
mov
sbb
js
mov
pushf
daa
pusha
ss
jb
je
data16
xchg
aas
ljmp
sbb
test
jno,pn
jle
mov
pop
dec
dec
call
aas
nop
fcoml
jl
cmpsb
fcmovne
xchg
je
mov
ljmp
out
outsl
mov
shr
xor
jne
push
push
lcall
add
cs
inc
das
jb
call
adc
jbe
add
jecxz
jg
addb
and
add
pop
icebp
jle
test
add
stos
stos
lret
insl
ja
hlt
pop
mov
mov
orb
enter
sbb
and
insb
jl
daa
mov
fwait
inc
and
mov
roll
dec
enter
mov
dec
pop
cld
jnp
mov
test
popa
sarl
mov
and
lcall
movsb
pop
push
pop
fdiv
lret
enter
imul
pop
pop
sub
ss
inc
xor
shrb
sbb
xchg
inc
sarb
add
or
add
insl
ret
push
lock
daa
cs
add
aas
add
int3
jecxz
cltd
sbb
pop
out
dec
clc
xchg
adc
mov
jne
add
xor
lock
mov
push
scas
pop
mov
lcall
inc
xlat
lock
fmul
adc
pop
ret
cld
pusha
mov
mov
push
loope
pop
pushf
fisubs
or
test
out
js
outsl
movsb
pop
xlat
xor
mov
add
sub
stos
xchg
repnz
sbb
mov
inc
inc
repnz
ds
invd
inc
cmp
push
push
rorl
mov
sahf
nop
dec
fwait
xchg
mov
push
xchg
add
jl
fsubrs
mov
lcall
shrb
fidivrs
rdmsr
lds
xchg
push
imulb
rcr
out
adc
hlt
cld
pop
int
rcrl
cmp
xchg
add
pop
ljmp
cmp
ret
loope
cld
jnp
push
adc
xlat
mov
mov
outsb
aaa
in
xor
lret
out
cmp
jbe
mov
repnz
adc
mov
push
in
push
xchg
test
ljmp
sahf
sahf
cmpsb
adc
push
push
std
xchg
lods
lods
movsb
fisubs
in
insl
fsubrs
jge
pop
mov
and
sbb
push
js
movsb
mov
cmp
mov
outsb
mov
mov
addr16
lret
cmp
cmpsb
stc
adc
shll
push
or
pop
insl
xchg
loopne
pop
sub
cmp
xchg
outsl
mov
inc
stos
ss
sub
ja
xor
fmul
pusha
shll
jb
sub
pop
sbb
and
ret
push
fld
clc
add
in
adc
jecxz
daa
insb
sub
jecxz
mov
pop
decl
pop
enter
jno
outsb
shr
inc
xlat
fistl
clc
add
sti
and
xchg
adc
jecxz
push
push
sub
dec
es
xor
cmp
cld
inc
add
movsl
sub
lahf
mov
or
push
cwtl
aam
mov
xchg
mov
mov
outsl
push
xor
vminsd
push
or
cmp
push
jo
leave
movsb
dec
loop
add
lret
pop
push
insb
jmp
adc
gs
dec
add
fmull
lcall
push
jp
scas
xorb
popa
cld
dec
sbb
sub
xchg
movb
movb
andb
insl
inc
sti
dec
push
push
cwtl
add
cmp
mov
sbb
clc
xorb
scas
sub
xchg
pop
adc
sarb
shrb
mov
aad
jge
ss
mov
xor
fisubrl
mov
dec
add
cli
xor
mov
dec
leave
push
iret
push
mov
insb
sub
hlt
insb
jbe
lcall
cmp
or
xchg
dec
xor
bound
fs
faddl
xchg
jecxz
or
int3
xor
mov
add
loopne
mov
or
or
or
or
or
mov
rorb
pop
pop
lods
mov
ja
cmp
and
cmpb
lret
dec
sub
mov
or
inc
dec
popa
repz
mov
dec
faddl
icebp
sub
cmpsl
sbb
adc
add
ljmp
cli
iret
adc
repnz
ret
jp
mov
js
push
add
mov
outsb
mov
addr16
lahf
enter
pop
xlat
fwait
mov
or
jl
fs
call
cmpb
xor
pop
paddusb
sbb
sarb
cmp
out
or
subb
loop
addl
push
ficoml
xor
loopne
insb
insb
push
pop
ds
push
cs
loop
outsl
lcall
sbb
mov
and
mov
mov
bound
cmp
in
dec
jne
xchg
sbb
cmpsb
mov
inc
popa
add
enter
cwtl
sub
sbb
dec
add
xchg
shlb
test
mov
or
scas
insb
xchg
pop
imul
bound
push
aam
mov
push
push
and
xchg
enter
jl
loop
incl
mov
test
lea
adc
mov
fnclex
pop
jne
test
jl
add
push
cmpsl
push
out
js
movl
js
lock
jns
pop
fsubrp
stc
jle,pt
inc
xor
mov
psubb
scas
fimuls
enter
mov
repnz
push
jno
mov
sub
ret
mov
pop
push
push
cmp
inc
sub
int3
pushl
mov
fldcw
pop
mov
cmp
test
inc
addr16
jns
mov
jp
lret
cmp
jmp
nop
mov
inc
sbb
pop
loop
mov
pop
inc
sar
fnsave
cmp
lds
mov
xchg
mov
das
addb
dec
xor
pop
or
in
daa
fldl
movsl
sbb
filds
ret
incl
out
rcl
insb
jo
sbb
jne
aam
outsl
decl
adc
pushf
sahf
arpl
adc
sub
jl
or
fwait
lock
mov
comiss
test
pushf
enter
inc
lods
daa
mov
adc
push
loopne
sbb
or
xor
insb
ficoml
cmpsl
xchg
dec
test
sub
jg
fsubrs
test
fwait
cmc
mov
mov
jae
sbb
jne
fadds
mov
mulb
dec
lods
sbb
sahf
jge
jbe
outsb
fstps
adc
mov
notb
push
outsb
add
outsl
stos
les
xor
sahf
mov
xchg
loopne
mov
mov
imul
add
movsl
fmul
mov
stos
cmp
mov
adc
nop
mov
ret
sbb
jmpw
test
push
pop
clc
movsl
scas
out
in
sbb
mov
sarl
stos
sub
popf
push
aaa
mov
pusha
fmuls
sbb
xchg
lret
mov
pop
aam
mov
jo
dec
out
icebp
sbb
or
push
inc
mov
ret
pop
push
js
insb
xchg
cmp
dec
mov
lock
stos
imul
adc
push
mov
push
les
out
add
aaa
lock
lahf
mov
push
das
mov
push
stos
js
or
pushf
xchg
in
add
add
xchg
push
ds
or
and
push
jmp
and
sahf
mov
mov
loopne
cld
push
mov
dec
add
dec
pushl
popl
std
and
aas
mov
mov
sbb
mov
fdiv
nop
shlb
lock
pop
dec
add
popa
sbb
xlat
scas
xlat
loopne
mov
adc
cld
mov
insb
mov
and
or
push
push
loopne
loope
in
cmp
sub
es
push
mov
adc
or
cmp
hlt
js
adc
sbbl
scas
call
adc
push
and
pop
cmp
jecxz
add
popa
push
loop
daa
lods
cmc
int3
in
push
push
adc
cmp
in
mov
ss
outsl
enter
push
sbb
test
imull
adc
dec
or
enter
or
mov
cmp
push
mov
xchg
loop
inc
shll
cld
mov
es
sub
in
push
mov
push
shrl
notl
or
bound
mov
mov
mov
xor
add
xchg
in
cli
jmp
nop
test
mov
cltd
sub
andb
cmpb
xchg
aam
loop
and
jl
dec
dec
add
out
sub
jo
imul
adc
mov
rcrl
lds
loop
nop
pop
movb
cmp
sub
fsubrl
jg
sahf
xchg
adc
mov
mov
les
loope
xchg
xor
decb
icebp
and
adcb
insb
sub
add
mov
nop
ljmp
scas
insl
fisttpll
xor
mov
inc
push
imul
loopne,pn
rorb
sbb
lea
and
add
sti
dec
inc
shlb
pop
sbbl
sbb
movsb
ffreep
xorl
sbb
push
enter
lods
je
add
xchg
lds
aaa
dec
jl
push
or
xor
pop
hlt
or
ds
insb
adc
mov
xor
fcmovnu
add
push
fwait
mov
fldt
in
je
sbbl
sti
xchg
ja
mov
inc
push
cs
push
mov
mov
lret
mov
mov
cmp
mov
mov
push
imulb
aam
ss
push
or
pop
mov
or
mov
adc
cmpsb
pop
icebp
sbb
dec
mov
inc
xchg
loop
jmp
inc
cld
adc
jns
in
sub
cli
mov
sti
lods
or
add
ja
lods
clc
lods
jmp
lret
sbb
out
mov
pusha
adc
in
ficomps
push
lcallw
sub
nop
and
jge
jl
incl
sub
cmpsl
push
out
jle
test
aas
inc
push
ljmp
addl
lret
dec
sbb
arpl
dec
or
xor
dec
add
dec
loope
cmc
lcall
cmp
ffree
aas
clc
shlb
outsb
xchg
mov
test
rorb
add
ljmp
call
icebp
out
rclb
cmp
inc
addb
idiv
aas
add
sti
sbb
shll
insb
cmp
mov
nop
cld
subb
and
push
pop
mov
inc
divl
out
or
decl
mov
or
pop
and
aad
pop
imul
loop
das
jmp
pop
cmp
jno
push
xor
in
ret
cmp
lret
jp
pop
cltd
decl
rorb
sbb
andl
push
mov
fsubr
push
pop
jo
cmpb
jmp
push
push
push
adc
inc
sbb
repz
mov
shrb
mov
pusha
push
mov
test
ret
js
mov
sti
jb,pn
cmp
int
jns
xchg
ds
in
icebp
dec
mov
inc
test
mov
movb
xor
fimuls
sub
or
dec
test
in
outsl
popa
sub
lret
xchg
test
aad
fstl
aaa
int3
pop
push
addb
inc
or
xor
xchg
mov
test
aam
xchg
xor
fmuls
sub
xchg
pop
jp
and
lds
pop
daa
test
inc
mov
cmp
and
jb
cld
or
test
leave
outsb
jmp
push
es
pop
outsb
call
sti
mov
adc
add
lcall
adc
das
cmp
lods
xor
mov
sbb
pop
dec
adcb
push
inc
mov
cs
fwait
cli
shl
inc
sbb
mov
sub
push
push
mov
jle
sar
fsubrl
xsaveopt
mov
and
add
cmpsb
sub
insb
mov
dec
push
xchg
xor
aad
and
rclb
imul
js
jns
inc
movsb
and
das
adc
iret
xor
cmp
cs
or
pop
jg
xchg
mov
stos
pusha
ds
push
adc
sar
cmp
add
jnp
loop
hlt
das
jno
vpaddw
inc
pop
xchg
jno
ljmp
add
jns
jp
inc
movsl
loopne
jne
inc
les
mov
inc
clc
xor
clc
fwait
dec
bnd
dec
cmp
mov
aad
push
call
dec
jg
divb
jnp
mov
cmp
stos
jbe
je
sub
fidivrs
jmp
jl
rcrl
pop
jl
xchg
sub
jbe
mov
xchg
cltd
fisttps
add
testb
xchg
add
dec
les
mov
cli
enter
add
sti
pusha
hlt
push
dec
push
dec
or
add
ret
pop
adc
aad
add
jle
movsl
xor
fldcw
mov
sti
pop
push
mov
mov
inc
test
add
or
or
ret
stos
pop
ljmp
jnp
sbb
fnstsw
ret
or
mov
and
fdivrl
pusha
inc
out
xor
jo
ret
jno
js
mov
mov
jne
jmp
mov
mov
push
add
jecxz
jnp
lcall
jl
and
and
adc
add
push
ds
decb
dec
xor
cwtl
or
pushf
aam
add
adcl
dec
mov
xor
cmpsb
xchg
ss
inc
hlt
or
pop
sub
clc
icebp
int
cmpsl
ror
aaa
je,pn
mov
cli
cwtl
cld
cmc
loop
dec
imul
push
inc
rcrb
cli
xor
jmp
and
rcll
flds
adc
out
das
jle
in
int
pusha
loopne
jmp
lds
jle
cmp
adc
mov
pop
test
mov
jg
inc
push
pop
pop
xadd
and
xchg
shr
push
das
cmp
leave
cmp
lea
jge
push
mov
addr16
mov
sbb
je
push
imul
mov
pop
xchg
mov
add
jnp
sub
in
mov
shl
push
xchg
rep
sub
scas
sub
pusha
pop
push
or
push
xchg
adc
and
pop
lods
mov
in
jle
add
xchg
mov
imul
adc
push
cli
cmp
cmovg
cli
loop
lea
and
inc
inc
xor
jmp
dec
ja
jge
orb
and
test
cmp
les
mov
mov
dec
loop
loopne
cmp
add
add
or
mov
and
xor
lret
xchg
rcrl
push
or
or
in
sub
in
lds
mov
pop
cwtl
push
lods
adc
scas
nop
or
clc
add
inc
sub
xchg
xchg
mov
lret
cmp
popa
test
sub
nop
cmp
or
or
bound
jecxz
sub
add
enter
inc
sar
and
loop
sbb
loopne
and
mov
sub
popf
insl
mov
mov
cmp
xchg
loope
cmp
jo
mov
xchg
mov
ljmp
push
mov
aad
out
push
in
out
push
mov
xlat
jbe
inc
mov
outsl
mov
sub
push
xchg
xor
arpl
mov
pop
mov
and
push
mov
out
popa
sbb
mov
and
mov
adc
mov
cld
mov
push
mov
add
imul
jmp
rcl
cmp
cmc
movl
fstpl
mov
jno
push
mov
roll
sub
inc
call
roll
push
lock
mov
push
lea
sub
scas
push
sbb
imul
lods
dec
and
jbe
sbb
js
stos
out
fisubs
and
stos
clc
shlb
push
divl
test
add
xchg
sbb
imul
sbb
xor
scas
cmovns
stos
push
inc
movsb
into
sub
push
cli
and
scas
jb
call
or
loop
mov
or
and
inc
push
mov
sbb
pop
mov
jp
adc
shl
scas
mov
mov
add
sbb
xchg
fmuls
js
cmp
rorb
sar
and
add
jp
lcall
jl
sti
sbb
push
int
xchg
stos
mov
add
scas
and
or
icebp
jbe
arpl
ret
out
or
jne
adc
push
test
mov
mov
add
mov
jne
clc
or
add
imul
ljmp
push
fnstenv
fiadds
pop
fwait
mov
ja
rorb
jge
hlt
std
push
push
mov
mov
lcall
sbb
cmp
aas
add
sbb
fs
push
fcomps
mov
pushf
cmp
mov
inc
and
mov
add
sub
push
xor
push
out
push
in
push
jnp
rcr
pusha
sti
push
ror
nop
mov
pop
lahf
bound
inc
ljmp
es
lods
jge
jg
dec
fs
jo
dec
or
push
cmp
pop
jecxz
pop
and
sub
out
jmp
xchg
fdivrs
rcrl
jecxz
xor
sbb
mov
cld
mov
sub
clc
jb
sbb
cmpb
pop
cmp
out
cmp
push
inc
std
out
jg
out
add
fiaddl
addr16
pop
fldl2e
sub
sub
adc
das
or
push
cmp
dec
add
mov
or
cltd
jecxz
nop
add
cmp
xor
mov
inc
mov
sub
lock
add
fwait
sub
pop
pop
fwait
arpl
loope
cmp
pushf
add
xor
cmp
test
int
adc
out
psrld
loopne
addr16
or
jb
sbb
dec
inc
xor
inc
jl
popf
jmp
loop
xlat
push
add
add
inc
out
push
inc
sub
addl
jp
mov
adc
jp
cmp
push
enter
addr16
push
and
pop
fcomps
cwtl
sub
lahf
outsb
scas
cwtl
push
xchg
inc
pop
push
sbb
push
mov
dec
sti
ljmp
pop
mov
out
push
push
xchg
cmp
lcall
data16
pop
sub
lods
pop
push
adc
rcl
insb
add
orl
ljmp
in
add
dec
pop
fcmovnbe
pop
mov
xchg
pop
mov
mov
aaa
push
cli
pop
inc
fwait
sbb
push
xchg
mov
es
xor
repz
sub
dec
or
sbb
pop
and
fcoml
sarb
jns
pop
adcb
ss
or
or
and
xchg
jge
and
loopne
push
call
mov
sub
pop
inc
outsl
seta
inc
add
adc
dec
test
imul
dec
xchg
imulb
push
iret
out
cmc
push
push
jl
sub
fimuls
and
xchg
push
and
shll
inc
repz
jmp
lcall
and
add
adcl
jle
mov
mov
sbb
sub
stc
ret
mov
imul
sub
pop
loope
testb
xchg
jge
jne
pop
add
sahf
call
adc
movaps
and
mov
mov
pop
dec
in
popa
scas
mov
shlb
movsb
clc
lods
pop
sub
lods
mov
or
rolb
inc
xor
inc
clc
push
sbb
jne
sti
mov
pop
fldcw
dec
popa
push
inc
add
lds
adc
je
mov
mov
sub
add
push
loopne
push
aas
psllq
and
xchg
pop
add
mov
adc
mov
addr16
mov
lret
je
insl
dec
jae
add
ss
sbb
mov
jle
insb
out
xchg
in
sub
dec
je
mov
xchg
inc
xlat
xchg
mov
roll
es
call
sub
mov
adc
out
and
popf
adc
test
fwait
clc
daa
push
rolb
inc
add
sbb
lcall
popa
add
enter
jmp
shl
pop
mov
jp
inc
leave
cmp
cmpsb
adc
into
xor
aaa
rcll
jo
movsb
xchg
adc
and
loope
out
fwait
sbb
push
and
js
std
adc
icebp
daa
adc
incl
scas
psubb
jae
je
cli
jo
and
pop
sbb
vcvtss2sd
enter
pmaddwd
shl
xchg
or
hlt
pop
jg
movsl
jb
aas
cld
xchg
std
mov
lea
jecxz
mov
sbb
pop
add
and
insb
cmp
pop
add
or
cmpsl
outsb
frstor
mov
dec
add
sbb
call
into
push
hlt
inc
adc
mov
sub
adc
cld
mov
xchg
push
fmuls
insl
mov
cmpsl
push
lock
pop
dec
popf
dec
nop
mov
ja
push
sbb
or
movsl
mov
mov
jno
daa
jmp
lods
arpl
mov
hlt
add
mov
js
fs
pushl
jle
adc
jmp
aaa
aaa
aaa
inc
cmp
cmovle
int
imul
fistpll
cmp
cli
in
xchg
ficomps
ret
rorb
jne
dec
rorb
cmp
lret
test
push
mov
push
nop
cmp
mov
cmp
sbb
sub
inc
scas
xchg
loope
dec
sarb
int3
mov
dec
sub
ds
sub
ds
pop
out
addl
push
mov
ret
icebp
jno
pop
push
inc
loopne
cmp
push
lods
je
dec
shrb
fdiv
test
adc
and
insb
mov
loopne
mov
pop
mov
ret
or
dec
mov
fldenv
push
xlat
mov
sbb
dec
fs
xchg
cmp
pop
push
aad
cmc
push
xchg
push
fcomps
ja
push
jno
add
adc
adc
rorb
js
rcll
xchg
mov
arpl
jb
lock
or
inc
lock
push
mov
mov
sub
fisubl
pop
scas
sub
add
lock
push
loope
fs
rorl
aam
pop
add
std
js
dec
loopne
or
arpl
pop
mov
scas
cmp
mov
jp
xchg
fimuls
inc
sbb
test
or
fsubrl
adc
arpl
stos
cmc
out
inc
wrmsr
in
aad
push
cmp
jmp
sarb
mov
mov
loop
setns
rcr
js
jl
mov
xchg
xor
cmp
ja
mov
jnp
in
push
mov
mov
xchg
jecxz
movaps
pop
mov
test
or
push
lret
pop
lcall
mov
fisubs
mov
das
xorb
xchg
add
add
adc
aam
mov
ret
sbb
cmc
test
sbb
or
call
cmpb
mov
shlb
mov
or
jbe
push
add
ficompl
jle
xlat
mov
rcl
lahf
mov
inc
push
xchg
clc
movsl
jb
dec
and
aas
aaa
push
test
sbb
ss
bound
adc
sbb
scas
mov
push
data16
inc
mov
mov
xor
shlb
mov
cmp
lds
clc
xor
pop
add
pop
mov
pop
xchg
push
rol
and
xchg
test
loop
test
imul
lds
insl
les
or
jecxz
mov
arpl
add
lods
xchg
cmp
pop
sbb
scas
jno
mov
nop
adc
add
sbb
js
clc
clc
pop
push
imul
adcb
jo,pt
popa
cld
arpl
xchg
testb
mov
out
loope
sti
test
call
xor
add
ds
pop
pop
and
je
jno
negl
inc
mov
dec
inc
int3
sti
movsl
icebp
jmp
jge
fbld
fwait
inc
xor
enter
push
loop
jne
and
lds
add
mov
pop
sbb
push
ficompl
sub
xor
test
xor
std
sbb
xlat
pop
mov
inc
nop
cmp
and
cmpsb
mov
mov
xorb
icebp
pop
pop
lods
pushw
cs
sbb
sub
mov
mov
mov
adc
and
add
xchg
call
stos
fcmovu
cs
mov
add
shl
lret
and
pop
aam
lahf
lock
add
push
jge
adc
out
mov
adc
int3
sub
insb
mov
add
adc
cld
ljmp
iret
call
lea
test
jl
ljmp
cli
xchg
std
mov
ret
and
push
ja
xchg
push
xor
fidivl
loopne
icebp
cli
xor
mov
mov
fdivrp
movsb
sub
push
inc
les
movsb
daa
int3
mov
mov
divb
out
cmp
add
testb
loopne
pop
sahf
mov
adc
js
into
or
mov
jp
lods
in
or
add
mov
mov
clc
push
repz
out
adcl
mov
outsb
addb
jmp
dec
inc
push
push
jle
aas
call
jl
xor
jp
lcall
cmp
jnp
int3
rorb
cltd
test
icebp
mov
lret
fsubr
jne
std
cmpsl
push
out
cmp
into
add
push
je
mov
cwtl
and
mov
jae
cmp
insb
or
xor
in
shrb
subl
arpl
jmp
aad
push
arpl
mov
nop
jns
mov
cmp
ss
test
enter
xchg
push
decl
add
add
mov
mov
or
je
imul
adc
shl
arpl
push
test
cmp
lret
sub
dec
dec
push
out
xchg
lock
jl
xchg
jl
enter
and
jb
inc
cld
addr16
lock
outsl
dec
push
pop
push
sbb
fsubrl
ss
xchg
mov
xor
outsl
cld
push
push
sbb
in
or
mov
mov
or
xor
cwtl
jg
out
pusha
add
add
xchg
inc
insl
test
jg
lretw
mov
dec
dec
mov
sbb
push
mov
pop
loopne
mov
mov
scas
adc
push
inc
das
lock
ret
loopne
aad
hlt
mov
mov
testl
sub
loopne
loop
rolb
jb
aam
lods
cwtl
push
sbb
fmulp
mov
jg
icebp
mov
fwait
sub
test
pop
sub
pop
jp
lock
pop
push
push
push
adc
cmp
lock
fisubrl
in
sub
fiaddl
daa
pusha
lock
shrb
call
ds
call
xchg
jo
pop
out
xor
add
inc
dec
lds
and
rclb
and
cmp
pusha
pusha
call
adc
pop
inc
dec
pop
add
or
dec
cs
scas
inc
mov
push
sbb
jle
or
add
call
in
sbb
fidivrs
mov
ret
mov
lcall
repnz
arpl
lcall
jmp
fstpl
xor
push
mov
mov
mov
push
pop
cmp
out
push
or
and
test
mov
dec
les
push
push
add
ret
scas
cmc
inc
pop
mov
test
push
cli
mov
shrb
jbe
sub
test
xchg
mov
inc
sbb
mov
push
in
adc
mov
inc
pushf
rcl
or
inc
test
sti
add
mov
mov
mov
outsb
push
push
or
rclb
call
dec
add
out
clc
mov
lock
jns
cld
push
les
sub
pop
dec
test
lock
outsb
jge
sbb
cs
jmp
les
dec
jl
jp
les
mov
movq
jb
dec
fdivrp
lods
xchg
mov
sbb
add
pop
in
inc
les
mov
imul
movsl
jbe
mov
enter
dec
jecxz
mov
fwait
ja
js
jg
sbb
std
push
into
dec
sub
adc
cmp
or
test
iret
loope
fcmovnbe
mov
rclb
or
pop
mov
jge
es
adc
dec
inc
dec
ret
pop
push
popf
mov
inc
scas
mov
js
pop
push
js
inc
cli
cmpl
xchg
add
out
ss
test
or
je
rcr
and
dec
jbe
shrl
push
adc
lods
sbb
rol
cmp
sub
enter
mov
push
pop
cvtps2pi
imul
in
das
lock
loopne
dec
ret
pop
or
mov
mov
inc
loope
sahf
mov
fs
sub
popa
push
jle
add
dec
push
rol
push
xor
stos
fdivr
sahf
sub
add
ljmp
mov
mov
hlt
jl
scas
mov
inc
jl
jl
rclb
outsl
movsb
call
repz
cmp
push
js
insb
adc
sbbl
cmpsl
lahf
add
rcr
cmpsb
xor
loopne
sbb
or
pop
lds
jle
hlt
loopne
out
xor
cmp
pop
call
sbb
in
sbb
jno
lcall
cmpl
cltd
clc
and
clc
xlat
mov
leave
dec
stos
cmp
mov
push
scas
cs
xchg
fcompl
lahf
shlb
inc
sbb
lea
cmc
pusha
aaa
push
jno
jo
ja
cmc
mov
data16
cmp
mov
mov
xor
loop
loop
add
add
mov
mov
cmp
xor
push
cli
icebp
fs
test
mov
pop
jl
clc
or
pusha
inc
dec
push
mov
test
aas
loop
mov
mov
jnp
ljmp
inc
pop
pop
mov
pop
jge
mov
inc
sbb
sub
in
lods
and
inc
sbb
inc
add
inc
cmp
movsb
ret
mov
mov
loopne
test
bound
and
adc
jle
sbb
dec
adc
add
sbb
or
lret
lods
call
sub
test
mov
cmp
jne
sub
mov
hlt
mov
add
push
mov
lret
out
insl
xor
out
mov
pop
mov
cli
cmpb
jle
les
leave
ror
push
dec
or
aam
sbb
mov
cmpsl
sbb
mov
mov
pop
jmp
xor
mov
movsl
inc
add
mov
stos
pop
mov
mov
pop
ret
dec
push
stc
arpl
pop
or
mov
insl
incl
js
sub
out
xor
daa
jl
xchg
jp
js
add
hlt
rclb
pop
push
jle
js
imul
sub
nop
int
out
enter
xchg
cmp
pusha
lea
fsubrs
mov
jo
cmp
fildl
mov
aas
fistl
inc
out
dec
fdivrl
lds
sbb
inc
adc
sbb
inc
jb
fimuls
push
std
lret
fsubrl
popf
push
sub
add
or
sbb
hlt
out
jmp
loopne
out
mov
cmp
cmpsl
pop
xor
adc
or
sub
pop
add
sub
xor
stos
test
test
xor
loopne
leave
lods
mov
mov
cmp
xor
jno
sub
xor
push
mov
loope
clc
ret
pusha
add
push
incl
push
inc
push
adc
mov
lret
fsubrs
imul
scas
pop
lods
sti
push
cmpsl
xchg
dec
rolb
push
das
shlb
cmpsb
insl
fsubp
call
mov
rorb
pop
into
push
xor
mov
outsl
rclb
mov
test
cmp
mov
inc
fildll
ss
mov
lds
aas
loopne
insl
clc
orl
xor
jnp
lods
push
lods
add
sub
stos
daa
push
jle
jle
jmp
int
test
loopne
push
rclb
push
ja
push
pop
scas
scas
inc
leave
push
ljmp
or
fidivrs
inc
mov
add
cmp
cmpsb
je
lret
cmovbe
bound
jno
pusha
lahf
mov
mov
ds
in
call
lahf
stos
mov
mov
xchg
iret
rcrb
mov
pusha
jnp
xor
sbb
push
shrb
mov
jne
loope
add
jo
or
shlb
pop
pusha
addb
out
in
mov
dec
add
pop
adc
inc
filds
orb
sub
jmp
scas
incb
dec
xor
sub
xor
add
ret
sub
mov
jmp
aad
sbb
and
inc
jno
pop
cmpb
lods
outsb
shlb
repz
aaa
dec
rol
push
or
in
jl
fisttpll
jne
into
mov
dec
sbb
and
push
lea
in
push
ret
loopne
jbe
pop
push
pop
ss
fnstcw
push
mov
dec
aas
cwtl
idivl
jle
mov
inc
int3
jl
add
pop
lea
push
or
xchg
rcrb
dec
pop
mov
loope
mov
dec
mov
add
ljmp
fcompl
std
jl
fstpt
ljmp
dec
fisubl
test
pop
mov
or
ret
clc
jbe
mov
sub
std
mov
mov
jle
pop
pop
pop
pop
xor
adc
out
jne
inc
cli
mov
push
jo
cmp
cmp
loop
pop
xlat
sub
or
incl
sub
sahf
push
mov
push
aas
push
cmp
out
xchg
fistl
movsl
js
cltd
cmp
jns
mov
test
sahf
pop
xchg
mov
js
or
xor
fisubrl
pop
mov
adc
mov
lret
xor
adc
into
pop
cmp
mov
or
push
lock
ret
pop
dec
or
fmuls
dec
sbb
int3
ss
inc
popf
mov
popa
inc
ljmp
inc
mov
adc
cmp
rcr
mov
mov
dec
push
pop
cmc
in
test
xchg
adcb
lea
xor
aam
add
push
and
test
sub
add
lcall
lods
xchg
fcompl
cmp
mov
pop
or
rcrl
adc
out
cs
push
add
scas
mov
adc
mov
sub
jb
xor
daa
scas
dec
mov
clc
jle
js
mov
pusha
xor
lods
and
fsubrs
and
negb
push
je
cmpsb
push
aam
mov
xchg
inc
cmp
xor
sbb
into
fdivrs
insb
inc
xchg
je
sbb
cmp
jmp
push
idivl
mov
repnz
push
mov
ss
add
xor
mov
dec
les
adc
push
rcl
cwtl
xor
ret
and
mov
push
mov
dec
shrb
call
loop
mov
pop
xor
fdivs
in
or
je
adc
lds
test
addb
inc
fsts
mov
xchg
clc
and
rcrb
xor
fcmovnb
cli
fdivs
sbb
outsl
in
repnz
icebp
outsl
clc
mov
outsb
push
sbb
pusha
push
cs
lock
clc
in
fsubs
popa
and
movsl
lock
add
mov
mov
mov
test
ss
or
clc
add
dec
push
sbb
out
outsb
jp
insb
cmp
adc
das
test
inc
std
or
xor
ds
pop
mov
incl
mov
rolb
subl
push
icebp
or
cmp
scas
push
push
mov
fsts
roll
mov
add
add
add
into
ret
nop
test
jl
cmp
jle
into
clc
xchg
xor
test
cmp
lret
test
dec
and
pop
push
hlt
pushl
mov
xor
cmpsl
dec
mov
add
mov
pop
jmp
fadd
jae
mov
add
jecxz
pop
ss
adc
je
sub
adc
fnstsw
gs
data16
pop
sahf
sbb
fdivrl
test
xor
rorb
dec
outsb
mov
pop
mov
call
stos
and
inc
xor
sbb
and
mov
bound
int3
addr16
fiadds
fildll
and
dec
jle
pusha
xchg
sub
xchg
mov
loopne
cmp
sbb
sbb
ljmp
rorl
mov
orb
cmp
ljmp
dec
and
iret
je
lea
xchg
pop
push
mov
mov
orb
xchg
push
in
sub
addb
xchg
cltd
js
inc
mov
mov
ret
mov
sahf
lea
lods
ljmp
mov
pop
popa
pop
adc
lock
push
cmpsl
cs
pcmpgtw
push
xor
scas
sub
or
js
aas
in
ljmp
mov
mov
cwtl
cmp
add
push
adc
outsb
ret
sub
fiaddl
sti
fisubs
xchg
test
cmp
roll
fcoms
adc
mov
loope
cmp
inc
sub
iret
push
or
xchg
jmp
es
scas
mull
mov
scas
sub
sub
push
fadd
inc
mov
shrb
bound
lods
add
test
rcrb
cmp
stos
xchg
sbb
push
mov
cmp
imul
fcompl
and
pusha
jmp
cmp
cli
loopne
push
in
dec
scas
mov
xchg
xor
loope
sub
sbb
xchg
adcb
pushf
lods
hlt
xchg
incl
mov
pop
and
mov
dec
sti
sbb
push
adc
js
xchg
dec
fists
pop
fwait
mov
push
rcr
cmc
roll
lock
xchg
movsb
mov
fisttps
lods
popf
test
test
orb
jg
cmc
nop
add
jl
aas
dec
pop
jl
mov
inc
cmpsb
enter
lods
lahf
pop
dec
daa
adc
lock
and
adc
pop
and
add
pop
testb
pop
jecxz
loop
adc
movsb
ret
jmp
fmuls
mov
fcompl
inc
arpl
sub
outsl
insb
fisubrs
gs
stos
movsl
lahf
pop
add
in
fisubl
decl
dec
inc
adc
pop
je
pop
out
mov
mov
mov
jl
into
clc
data16
shlb
fsubrl
pop
dec
xchg
mov
mov
inc
add
insb
pushf
or
xor
pop
in
dec
lods
jbe
cmp
iret
pop
flds
lock
insb
cmc
ror
sbb
xchg
mov
ss
or
add
mov
iret
cltd
ror
inc
int3
xchg
mov
clc
sub
pop
js
repnz
cmp
xor
jmp
xor
jge
testb
cmp
stos
test
fidivs
sub
repnz
push
dec
imul
add
jo
fs
xchg
adc
lahf
lcall
decb
mov
dec
mov
lods
xchg
enter
mov
stos
mull
add
ljmp
inc
dec
frndint
or
mov
push
adc
loop
enter
add
sbb
mov
jecxz
jecxz
fiaddl
movaps
cs
cmp
mov
scas
mov
cmp
and
jne
push
daa
dec
rcr
sbb
push
mov
pop
lea
sbb
push
call
mov
scas
mov
sbb
pop
push
fsubs
xor
frstor
clc
dec
add
add
mov
add
filds
push
testb
enter
cmp
pusha
loopne
insb
sub
cmpsb
in
lds
lods
cmp
mov
incb
xchg
das
dec
mov
xor
in
pushf
dec
popa
adc
inc
jle
cs
inc
pop
xor
mov
sbb
xlat
divb
out
push
hlt
insl
push
fucomi
loopne
pop
mov
leave
insl
in
add
push
xchg
jno
add
or
shlb
push
dec
shrb
mov
sub
cmp
jl
jb
or
test
cmpb
aas
cs
test
popf
mov
subl
sahf
fmull
mov
xchg
int
out
sub
aaa
loop
rcr
and
cmpsb
mulb
inc
rorl
fldl
scas
and
movsb
out
push
in
cmpsl
outsb
clc
inc
xchg
pusha
sbb
clc
js
rorl
inc
dec
vpshufhw
or
push
or
xlat
ljmp
pop
add
adc
orl
mov
sub
enter
testb
pop
or
cmpsl
dec
mov
outsb
inc
pop
mov
in
sbb
jbe
es
out
inc
insb
xor
add
outsb
lock
roll
lds
call
sti
add
xchg
mov
ss
mov
xlat
xchg
xchg
adc
add
cmp
scas
xor
ds
inc
pop
hlt
cmp
mov
pop
icebp
loopne
push
and
ss
sbb
sub
int
clc
in
and
ficomps
cltd
add
addr16
push
rcl
dec
jbe
fucompp
fsubrs
mov
sbb
pop
call
addr16
mov
inc
cmp
xchg
xchg
push
rolb
and
sub
adc
cmp
cmpsb
and
sbb
nop
je
shl
loop
mov
fists
push
scas
push
mov
xor
out
pusha
dec
ret
imulb
mov
jge
push
dec
rolb
mov
and
dec
ret
test
mov
popf
aam
cld
ja
and
es
lea
xchg
subb
sbb
mov
mov
sti
test
mov
call
js
jmp
push
loopne
test
je
je,pt
pusha
call
data16
add
fs
mov
sub
out
rol
insb
insl
mov
add
inc
cmc
or
push
mov
or
pop
adc
pop
cmp
cwtl
inc
xchg
outsl
push
inc
out
sbbl
call
decb
nop
pop
or
xchg
popf
jbe
mov
xchg
or
out
sbb
stos
mov
rcl
iret
pop
sub
jbe
clc
ljmp
stos
jecxz
sbb
push
fdivl
shrb
test
cli
mov
mov
mov
lock
mov
shlb
lret
or
loopne
jo
push
clc
ljmp
xchg
sub
subb
lcall
mov
out
pop
mov
loopne
jb
or
mov
push
mov
jmp
pop
test
add
sub
push
inc
outsl
cmp
or
mov
inc
mov
es
jmp
test
repz
mov
xchg
lea
xor
cmp
jns
adc
push
clc
in
in
sar
or
mov
cwtl
add
sahf
rcll
xchg
mov
xor
or
lds
push
js
add
inc
iret
mov
push
mov
push
xor
mov
dec
dec
add
enter
mov
adc
jecxz
loop
add
jecxz
daa
inc
shll
mov
dec
stc
cmc
pop
or
push
fcoms
pusha
pusha
das
and
cmp
jno
and
sub
dec
test
ret
or
xchg
pop
mov
sub
inc
mov
or
sbb
andl
test
inc
mov
mov
adc
popf
xor
inc
inc
pop
outsl
push
push
mov
mov
and
push
lods
push
fildll
pop
jno
lretw
pop
mov
lea
push
and
test
pop
xor
mov
pop
stos
xor
pop
push
movsb
pusha
jno
mov
or
cmp
inc
je
shrl
outsb
jnp
sub
dec
xor
inc
inc
dec
test
lock
dec
and
mov
sub
leave
rol
pop
packssdw
enter
and
inc
scas
add
push
or
add
mov
or
insl
xchg
orb
mov
xchg
mov
mov
xorl
sbb
addr16
adc
mov
leave
cmp
inc
adc
lock
inc
dec
xor
mov
mov
push
sbb
sub
dec
lods
orl
je
sub
and
or
add
sub
cmpl
fidivs
in
jecxz
dec
orl
mov
dec
imul
jbe
pop
and
mov
lock
outsl
add
mov
outsb
fimull
es
mov
rcll
lcall
mov
ret
nop
je
ss
add
adc
in
add
or
sub
jecxz
sub
ficomps
push
push
pop
mov
or
adc
mov
sub
pop
lods
sahf
imul
sbb
lahf
xor
xchg
pop
ret
xchg
mov
aas
inc
aaa
sbb
dec
and
fiaddl
fisttpll
xchg
jg
xchg
push
stc
adc
xor
data16
xor
sub
rorl
mov
out
mov
inc
inc
mov
subb
xchg
ja
popa
jg
mov
loop
sbb
sub
mov
call
push
push
out
sbb
shl
cltd
pop
inc
inc
js
inc
dec
icebp
ret
sub
mov
stc
in
pop
icebp
loope
or
push
inc
ds
cmp
ds
loop
aam
pop
aas
aaa
mov
push
sub
xor
xor
mov
loopne
mov
rolb
xchg
or
popa
out
call
push
mov
mov
mov
jmp
leave
push
lea
shll
dec
loopne
pop
scas
mov
test
mov
stos
fiaddl
out
fisttpll
arpl
rcrl
and
sub
add
inc
test
add
lea
dec
xchg
test
push
pmaxsw
mov
sub
dec
data16
adc
push
mov
lret
hlt
or
iret
jno
adc
imul
insb
add
jp
jne
add
mov
xor
arpl
leave
ss
xchg
cwtl
and
scas
cmp
cmpsl
xchg
add
jmp
add
pushf
jp
arpl
xor
ret
clc
rclb
push
add
jp,pn
daa
push
imul
pushf
sub
jne
push
es
cmp
cmp
xor
add
sti
add
test
xor
int3
popa
aaa
mov
dec
pop
outsl
jb
inc
add
pop
jo
test
ljmp
popf
jle
pop
aad
pusha
add
nop
cmpsb
dec
fnsave
adc
pop
scas
lahf
negb
popl
cwtl
popa
sub
jbe
lcall
add
outsl
aam
xor
nop
inc
lcall
fcomps
adc
dec
nop
int3
or
sub
setno
daa
fstpt
jge
andb
and
mov
xor
dec
mov
js
push
imul
bound
ss
fidivrs
pop
imul
ret
ja
jae
mov
xchg
js
pop
les
es
repnz
loopne
pusha
lret
in
jmp
insl
mov
jmp
mov
sub
xchg
inc
and
dec
and
int
lret
les
xor
add
lret
int
dec
pop
pushf
pop
sar
lods
iret
mov
aad
outsl
xor
insb
cmp
leave
fimuls
adc
lods
stos
mov
pop
in
add
push
jno
ror
jmp
fsubl
pop
out
dec
sub
add
sahf
int3
xor
add
push
inc
or
xor
and
push
test
mov
pop
pop
sbb
es
fsubs
jle
cmp
mov
movsb
test
mov
adcl
mov
mov
jmp
cwtl
adc
subl
inc
and
and
dec
pop
sarl
roll
add
mov
xor
inc
inc
lahf
dec
xchg
sarl
cmovge
imul
rorl
jbe
jo
movsl
cmp
lock
xchg
lds
leave
pop
pusha
xchg
cwtl
sub
popl
mov
loopne
addr16
insl
push
sub
dec
or
mov
aaa
push
aaa
je
movsl
mov
aad
popa
lds
xor
or
dec
and
je
ja
dec
ret
leave
xor
jecxz
mov
push
aaa
pop
sbb
inc
fiadds
pushf
mov
xorl
sbb
popa
mov
es
sbb
push
icebp
popa
ret
call
cmpsl
stos
icebp
pop
cmp
mov
mov
insb
sbb
repz
add
dec
lods
lea
dec
lahf
add
adc
movsb
scas
shll
push
sarb
xlat
out
ds
mov
jecxz
jnp
mov
out
cld
sahf
mov
lret
xchg
pop
mov
or
jmp
cmp
inc
adcl
imul
test
push
cmp
insl
and
dec
sbb
cmp
sbb
push
ret
test
or
push
fs
jnp
call
fnstcw
pop
loopne
push
jmp
scas
ret
sbb
cltd
mov
xchg
push
lea
sbb
mov
mov
std
es
adc
lcall
repz
and
add
fwait
dec
push
std
test
pop
push
or
iret
rol
push
dec
jecxz
iret
or
sahf
and
cmp
xor
ffreep
ljmp
xchg
push
notl
add
icebp
in
adc
jp
pop
or
push
imul
ja
fwait
sub
ljmp
xchg
ljmp
jmp
int
inc
aaa
je
out
mov
insl
inc
push
iret
js
adc
mov
sbb
push
or
xor
ret
adc
pusha
stc
movsl
lcall
loop
xor
mov
jnp
scas
rcrl
shl
pop
aas
repz
sbb
and
rcll
mov
xor
test
jne,pn
movsb
mov
call
sbb
mov
xor
aam
insl
sbb
ret
sub
scas
mov
lcall
xor
popf
fnstenv
sub
inc
dec
je
clc
mov
lea
rolb
push
sbb
jns
adc
scas
xor
sbb
call
jbe
cmc
rolb
out
pusha
mov
orl
lods
mov
and
cs
push
push
js
jo
gs
xlat
es
mov
or
aad
xor
fdivr
inc
sarl
mov
xchg
clc
subl
test
cltd
add
sarl
inc
jge
and
lock
rorb
inc
sub
mov
xchg
fnstenv
sbb
lock
cmp
xchg
mov
or
cmp
add
mov
inc
xor
dec
sahf
inc
subb
call
out
jae
jecxz
ret
inc
jae
lret
in
jae
movsl
jl
mov
xchg
mov
push
call
pop
and
or
int3
xor
mov
pop
aaa
rorl
xchg
in
scas
adc
xchg
pop
jns
mov
sbb
sub
ds
test
xbegin
sub
pop
shrl
xchg
addb
cmove
sub
add
jl
mov
rorb
mov
cmp
adc
sbb
ds
test
shlb
add
pop
aad
mov
dec
adc
xor
pop
mov
push
cltd
enter
add
push
icebp
call
xchg
in
sbb
and
cmc
mov
jmp
data16
out
jae
push
rcll
scas
inc
inc
push
jmp
mov
stos
jae
cmp
push
insl
dec
frstor
daa
fimuls
adc
cmp
sub
xor
sub
lods
arpl
mov
mov
mov
cmpsl
jno
popf
pop
or
jecxz
mov
sub
fdivs
mov
aas
aad
cmp
mov
sub
lods
pop
mov
sarb
orb
fwait
ss
mov
mov
adc
xor
xchg
in
push
jns
pop
pop
sub
push
mov
aas
mov
mov
push
jno
aas
scas
or
mov
adc
mov
imulb
sbb
xchg
out
jge
inc
mov
or
or
std
pop
sub
inc
loope
mov
or
call
fdivp
daa
mov
jg
jno
ss
sarb
adc
pop
sbb
dec
inc
and
cltd
mov
mov
out
stos
pop
aaa
jne
fildll
xchg
sti
inc
push
dec
fwait
xor
cmpsl
cmp
sbb
push
loope
lretw
mov
bound
test
test
out
xor
js
clc
cld
stc
mov
mov
xchg
lahf
out
push
testb
and
cmpsl
mov
loope
adc
adc
jle
sti
sub
dec
js
lds
adcl
and
mov
repnz
int
pop
push
call
subl
sbb
lea
xorl
cwtl
mov
fisubs
sbb
ret
mov
stos
sarl
mov
or
jle
aad
push
or
scas
roll
add
xchg
add
les
test
leave
mov
sbb
xchg
dec
add
cmpsl
push
pop
sbb
or
adc
adc
xchg
add
add
or
test
rol
add
mov
pop
imul
push
jmp
cmp
icebp
mov
ljmp
inc
xor
adc
std
dec
rolb
shlb
push
adc
mov
pop
imul
jno
pcmpgtb
gs
mov
call
out
xor
mov
push
mov
iret
cmp
fidivrl
mov
imul
pop
mov
dec
push
popa
mov
scas
iret
enter
cltd
or
incb
pop
push
rclb
ljmp
mov
bound
push
cmp
scas
push
inc
mov
adc
mov
cmc
addl
lock
adc
xor
sub
and
hlt
xor
popf
push
push
dec
movsl
add
push
fstl
mov
in
in
lock
pop
and
fldenv
call
rcrb
aad
add
ret
insb
mov
pop
xor
stc
clc
cmpsb
sbb
sahf
push
stos
in
lods
shl
lcall
mov
inc
addr16
daa
mov
mov
mov
mov
bnd
loopne
testl
add
jmp
fidivrs
or
daa
inc
les
out
sbbb
or
inc
pusha
stos
pop
sahf
ds
fsts
mov
wbinvd
mov
cld
or
sarl
mov
xchg
push
rorl
lea
jb
arpl
push
inc
xchg
mov
jo
xor
sub
fs
mov
cld
ja
stc
adc
mov
aad
cmp
push
fwait
jno
ror
pop
aad
ret
inc
pop
xchg
add
lea
add
imul
lods
mov
jns
outsb
ljmp
repz
xor
and
or
mov
leave
mov
xor
lret
sub
pop
sbb
pop
pop
movsl
test
pushf
pop
sbb
push
xchg
xchg
push
inc
neg
shlb
adc
cmp
adc
add
mov
push
adc
xor
jb
mov
jp
xor
lcall
mov
jmp
sbb
push
or
jp
mov
xchg
mov
lcall
xor
or
dec
stos
cs
mov
inc
mov
dec
rcrl
xchg
sti
and
ds
sub
popa
test
shlb
lds
fdivp
cmpb
pop
stos
movzwl
push
inc
mov
dec
pop
cmp
or
sbb
jnp
test
mov
adc
sbbl
mov
adc
jecxz
pop
or
lock
xchg
daa
inc
cmp
mov
mov
xchg
das
xchg
dec
outsl
or
push
mov
and
sbb
pop
and
mov
dec
add
test
insb
les
push
shl
loop
or
fdivl
sbb
mov
call
ret
adc
out
add
xor
mov
add
xor
mov
fwait
pop
sub
lock
mov
int3
sbb
pop
cmpsb
mov
js
scas
lahf
cmpsl
andb
pop
lcall
sub
loop
mov
cmp
in
adc
lret
loope
rclb
shlb
insb
mov
mov
cmp
sub
loopne
jmp
jl
inc
inc
loopne
pop
mov
sbb
pop
mov
jecxz
xchg
pushf
aaa
fisubrl
xchg
and
fsubrl
pop
je
fs
fisubrs
pop
sbb
mov
and
mov
cmc
shrl
push
mov
icebp
adc
jne
aad
jae
pop
es
mov
sub
lds
push
lea
icebp
orl
scas
ficoms
adc
int3
mov
pop
jp
lahf
add
testl
dec
sub
cmpsb
sbb
int
sbb
enter
jnp
js
push
and
out
mov
out
add
dec
push
sbb
and
push
bound
adc
jmp
cwtl
ljmp
sbb
in
sbb
push
mov
pop
push
push
jno
inc
cld
jl
je
cmp
and
xor
xchg
push
push
push
cmc
lahf
and
movsl
jle
scas
stos
negl
xor
or
cmp
mov
cmp
imul
pushf
ret
out
dec
xchg
out
pop
sub
pop
cmp
xorl
mov
xchg
call
jmp
push
sbb
in
adc
lret
pop
pushf
stc
and
pop
imul
cs
cwtl
xchg
aam
stos
or
sbb
enter
xchg
outsb
repz
push
dec
fldcw
push
mov
jno
push
testl
sbbl
outsl
cmp
and
mov
jmp
shlb
add
dec
pop
sti
push
xor
sar
add
test
push
push
test
or
scas
adc
mov
mov
fidivl
popf
mov
rorb
bswap
sub
inc
loopne
add
xchg
or
nop
loope
subl
jmp
jno
inc
movl
jmp
push
sbb
mov
fisttpl
xchg
cmp
daa
add
enter
sbb
fldenv
je
dec
rol
rol
sub
das
jno
jl
sarb
loopne
rorl
xchg
cmp
sub
mov
fbld
daa
mov
push
ja
int
push
mov
jmp
ret
add
xchg
adc
popa
arpl
mov
mov
sub
cmp
stc
jo
stos
test
mov
dec
cmpb
aad
test
mov
pop
add
sbb
xor
int
in
push
fiadds
repz
sti
stos
or
push
pop
inc
aaa
test
data16
in
jmp
aam
mov
or
loope
pop
ret
push
jae
pop
mov
mov
mov
mov
js
das
mov
cmp
add
mov
lock
cmpsb
es
lock
movsb
cmc
pop
je
outsl
or
add
addb
mov
mov
or
fistps
xchg
mov
outsl
mov
jle
hlt
add
jb
pushf
adc
sahf
fadd
adc
dec
inc
jge
xorl
sbb
dec
xor
lock
shrl
pop
mov
pop
jge
int3
inc
mov
pop
add
push
sahf
sbb
cmp
and
sbb
loope
cmpsb
leave
xchg
xor
or
xor
add
lret
and
push
test
popf
imul
xlat
sub
insl
jge
pop
mov
inc
test
dec
aas
jl
cmp
sahf
popa
aad
mov
jo
mov
mov
dec
cmpsl
mov
jns
fmull
sub
add
loope
movl
std
mov
ret
ret
scas
xor
xchg
and
movsl
dec
push
mov
inc
es
ja
xchg
out
push
mov
mov
mov
lods
push
mov
leave
mov
lock
and
cli
les
jno
aam
lahf
movsl
mov
cmp
movsl
fs
rcr
scas
sbb
iret
dec
out
ret
xor
or
push
pmaxub
les
sub
mov
add
or
jmp
outsb
subb
or
cmp
sarb
stos
ds
shl
repnz
popf
ss
int
dec
rcrb
add
inc
inc
and
lcall
push
fbld
xor
push
cmp
push
mov
addl
aas
mov
lea
jbe
pop
push
inc
les
dec
push
mov
test
das
loope
xchg
cmp
sbb
imul
lods
movsb
jo
dec
jl
adc
orl
pop
jmp
pop
adc
outsl
outsb
pusha
rcl
xchg
inc
inc
psubb
cmp
xchg
mov
pop
mov
in
movsl
xchg
jbe
xchg
leave
xor
push
subl
out
add
fcoml
hlt
loope
add
ds
or
cmc
pop
icebp
outsl
push
sahf
insl
pushf
mov
ret
movsl
inc
lahf
or
xor
lock
adc
inc
shll
mov
imul
pop
adc
pop
sarl
mov
addl
xor
push
mov
clc
xlat
fnstcw
xchg
or
jo
push
inc
xchg
lcall
lahf
mov
and
or
adcb
jl
pop
cmp
jns
jno
add
repz
sbb
push
or
insb
rolb
scas
jno
inc
cmp
jecxz
mov
ret
imul
inc
scas
dec
mov
addr16
cli
mov
jnp
adc
inc
sbb
add
loopne
mov
shlb
addr16
pop
das
push
lock
pop
sub
arpl
mov
lcall
pop
and
loope
notb
jo
xlat
or
push
dec
daa
scas
xchg
mov
xchg
frstor
scas
mov
hlt
lock
popf
inc
push
sbb
add
and
mov
mov
gs
jbe
cmp
jns
aad
or
cmpxchg
js
imul
roll
pop
test
mov
push
arpl
xlat
xchg
aad
lret
mov
push
sub
sbb
or
add
xchg
cld
fcompl
rol
push
inc
mov
lret
add
daa
xchg
addb
jno
mov
push
je
or
scas
push
repz
in
or
pop
mov
fisubrl
pusha
shlb
out
and
pop
xchg
inc
xchg
or
enter
pop
bound
xchg
insl
sub
push
dec
jge
jo
jbe
and
sbb
jno
cmp
stos
nop
rcrl
inc
pop
movsb
bound
push
sub
inc
cmp
push
test
mov
jl
adc
sbb
adc
cld
adc
xchg
mov
xchg
cmp
pop
pop
push
xor
outsl
les
aas
loope
pushf
test
xor
jno
or
push
ds
push
mov
clc
cmpsb
pop
pop
dec
gs
cmc
ficoml
sub
pusha
and
xor
orl
loope
and
mov
mov
mov
push
out
and
cmc
cli
add
xchg
mov
mov
add
loopne
imul
test
inc
sbb
inc
lds
ret
imul
stc
mov
in
mov
push
popa
adc
mov
aas
push
add
push
stc
out
fcmovnbe
scas
outsb
fcos
cmpsl
add
jge
in
js
pushf
dec
mov
sbb
rclb
scas
add
filds
pop
sbb
pop
hlt
cmp
xchg
mov
addr16
test
mov
jae
sahf
sub
loop
ljmp
test
icebp
sub
mov
xchg
sarl
jb
ds
jb
gs
addb
sub
mov
inc
dec
xorb
loope
leave
icebp
ljmp
sbb
or
cmp
push
push
testb
insl
sti
xchg
cwtl
adc
out
xchg
pop
jo
cmp
cmp
inc
ffree
jnp
pusha
or
mov
cli
mov
and
sbb
lcall
push
sarl
loop
jnp
inc
push
push
pop
cld
nop
dec
cmp
stc
xchg
sub
and
mov
or
or
cmc
jl
sub
mov
lcall
sub
add
jne
ds
adc
pop
mov
push
mov
sub
loopne
lods
les
xchg
fs
xor
jbe
jo
sub
cmpsb
inc
pusha
adc
dec
jmp
bound
mov
loop
pusha
lret
outsl
lahf
fimuls
outsb
dec
sbb
push
inc
pushf
mov
shll
jb
xorl
lcall
loope
out
into
cmp
xor
je
pop
and
cltd
in
push
scas
xchg
inc
clc
aas
gs
xchg
decb
jns
insb
adc
xchg
push
mov
leave
mov
pusha
xor
push
iret
hlt
test
sub
sub
fwait
xchg
and
mov
rcl
sbb
pop
xor
lods
test
push
mov
call
sbb
pop
cmp
test
cmp
mov
cmp
loopne
push
push
imul
fisubl
rcll
add
jecxz
xor
imull
or
loope
shlb
add
pop
gs
jbe
imul
sub
pop
loope
aas
inc
in
outsl
call
fld1
data16
xchg
cld
push
test
jbe
pushl
and
adc
lods
fadd
inc
add
pop
xor
ds
jno
jo
sbb
cmp
jmp
cmpl
and
xchg
jmp
sub
test
xchg
jnp
inc
sub
or
cmp
out
jecxz
mov
repnz
lret
push
or
arpl
fists
or
movsl
idivl
sub
sub
add
sub
mov
imul
scas
leave
mov
fnstsw
adc
jge
mov
test
mov
inc
jo
icebp
push
sub
sub
push
sub
int3
push
adc
les
iret
sub
jp
pop
mov
cmpsl
inc
push
xor
js
shlb
popa
lock
push
xchg
int
sub
jno
or
mov
rcll
rclb
mov
mov
inc
sbb
jo
sbb
cs
xor
hlt
adcb
lcall
sbb
pop
push
popf
shrb
test
cmpsl
or
adcl
push
add
je
insb
ss
jmp
adc
hlt
jg
orl
pop
add
dec
ret
mov
into
cwtl
mov
rcl
in
incl
push
test
mov
mov
cld
xor
or
test
sar
insb
sbbl
xchg
or
hlt
cmpsb
and
inc
jno
mov
adc
and
adc
imul
mov
std
pop
mov
jle
repnz
sub
addl
js
lock
push
jbe
ljmp
and
xchg
outsb
pop
mov
cld
cld
sbb
and
adc
insb
cmpsb
icebp
adc
inc
hlt
fmuls
cld
loopne
sbb
jg
pop
push
inc
fdivs
pop
inc
or
incb
les
or
pop
loope
mov
ret
jae
sub
mov
jp
out
push
lahf
js
fwait
lock
andb
jmp
xor
sbb
sbb
push
mov
sub
lods
fmuls
outsb
push
mov
test
add
and
stos
imul
out
icebp
stos
nop
xchg
jne
rcl
ss
loope
jmp
test
cmp
mov
jne
inc
loopne
jnp
xor
push
lods
jle
xor
cmp
aad
sbb
dec
inc
adc
mov
add
xchg
ss
insb
or
and
rol
push
xorl
dec
lods
lret
inc
lds
ljmp
fisttpl
mov
fisttps
and
sub
pop
cs
mov
mov
sub
mov
xor
enter
pop
les
jge
aas
frstor
jg
in
rorl
rclb
test
ljmp
frstor
ficoml
fldt
dec
in
sub
mov
call
mov
iret
ficoms
sbb
test
cli
add
int
stc
add
lods
add
jp
cld
dec
sub
in
xchg
js
fldl
lret
inc
cltd
mov
push
aad
decl
loopne
mov
xor
add
lcall
jge
mov
add
rolb
ds
out
or
push
pop
sbb
aaa
pop
ljmp
add
add
mov
inc
push
xchg
mov
test
adc
and
in
xchg
lds
xor
sub
stc
jo
or
rcl
push
pop
arpl
cltd
adc
out
rclb
or
mov
test
daa
mov
sub
adc
add
out
mov
mov
and
jno
jmp
js
jecxz
inc
xchg
xlat
ljmp
testl
fsubs
rcrl
ljmp
shlb
js
inc
xchg
mov
pop
add
pop
sbb
pop
ds
das
lret
mov
push
ds
or
push
add
pop
cmpsb
pop
into
add
mov
or
add
shlb
push
divb
movsl
xchg
xorl
push
leave
adc
imul
in
xorl
pusha
xchg
rcrb
cli
add
push
pop
fsubrl
decl
inc
lock
xor
mov
pusha
mov
pop
loop
xchg
stos
xchg
jle
subl
and
mov
push
or
pop
fiaddl
dec
out
out
xchg
push
pop
arpl
mov
fmuls
jl
jg
xchg
push
cmp
inc
add
push
push
sbbb
jbe
es
jle
fs
adc
clc
lahf
sub
cmp
sub
mov
xchg
pop
insb
mov
aas
call
dec
mov
add
mov
jno
xor
and
mov
sbb
js
add
jmp
hlt
sti
dec
cmp
ret
inc
mov
jb
movsl
popa
dec
rclb
push
cld
adc
or
pusha
pop
fmul
je
or
xor
or
cs
insb
bndldx
xorb
call
mov
loop
popf
js
cmpsl
mov
les
pop
js
mov
mov
xchg
gs
cmpsb
sub
add
xor
cs
or
jae
ljmp
aad
mov
and
scas
push
xor
pop
push
fistl
add
or
ret
dec
das
inc
xor
xor
sub
dec
mov
negb
js
subb
mov
pusha
rorb
out
adc
pop
cmp
loope
jle
insl
stos
adc
pop
popl
xor
in
ja
loop
call
jmp
sbb
fiaddl
mov
idiv
lcall
icebp
add
pop
aaa
mov
fs
lock
cmp
push
rcll
mov
lods
or
sub
jecxz
xor
inc
adc
mov
mov
leave
or
xor
xchg
push
std
adc
cli
adc
shlb
int
pop
ja
dec
pop
adc
xor
push
mov
or
inc
mov
adc
or
ret
out
out
orb
movsl
xchg
stos
rclb
or
sub
jg
inc
dec
loope
std
insl
mov
adc
insl
sbb
jnp
ljmp
push
lds
inc
xchg
imul
fisubrl
mov
sarb
xchg
andl
cltd
cmpsb
rorb
es
push
inc
sub
dec
inc
cmp
cwtl
inc
and
mov
addb
movsl
jle
ss
xor
xchg
or
enter
jle
rcll
jns
call
imul
data16
call
mov
pop
lret
loope
mov
into
adc
loope
push
and
jl
xor
mov
imul
cli
xchg
aaa
std
cmp
sarb
ret
ds
aad
mov
fidivs
js
test
loop
sbb
jbe
xor
jo
fmulp
cmpsl
nop
aas
adc
mov
subl
push
or
push
loopne
mov
push
push
fimull
adc
cli
dec
mov
fnstenv
inc
loopne
add
pop
push
loop
push
pop
mov
es
adc
inc
add
add
sub
scas
or
mov
mov
mov
dec
push
mov
rorl
dec
xorb
shlb
sbb
loope
repnz
jl
or
push
test
and
xor
std
pusha
out
xchg
push
jb
dec
into
push
jle
adc
sub
fs
mov
mov
lods
imul
inc
stc
xchg
mov
outsb
xchg
push
pusha
popa
jb
lcall
test
jae
pop
in
mov
add
inc
xchg
dec
jb
fcomps
and
sarb
lcall
sbb
mov
dec
pop
bound
inc
daa
loopne
push
jo
imul
add
mov
inc
arpl
mov
inc
scas
xchg
jp
or
clc
inc
push
repnz
cwtl
xor
movl
mov
mov
adc
icebp
jp
inc
sub
ljmp
into
mov
adc
xchg
lcall
xchg
test
push
mov
lods
mov
mov
clc
dec
push
std
push
fists
dec
push
mov
inc
inc
jl
dec
mov
cltd
adc
pop
sub
jle
insl
dec
cmp
push
ds
test
jle
mov
cmp
jns
outsl
lods
hlt
outsb
aad
inc
in
scas
movsb
add
or
adc
dec
addl
xor
adc
mov
mov
fldcw
outsl
add
loop
push
shr
or
add
sti
dec
movsb
fstl
add
pop
iret
add
jno
add
push
sub
jp
jle
rorb
cltd
in
dec
movb
dec
jmp
mov
repnz
mov
jnp
cli
mov
or
and
sub
ja
sbb
ds
int3
hlt
je
lret
cmp
insb
mov
ret
je
lcall
jo
xor
adc
cmp
jp
mov
xchg
pop
popa
ficomps
pop
out
movsb
xor
pop
cli
mov
lock
xlat
xchg
xchg
jno
jo
mov
sub
dec
je
loopne
push
je
inc
mov
shll
inc
mov
adc
test
add
adc
inc
ficompl
sarb
fcomi
sahf
cmp
jg
nop
push
out
cwtl
and
push
sbb
in
sbb
push
sbb
or
je
decl
push
and
test
sub
sub
sbb
mov
xchg
cmc
inc
imul
or
fdivl
cli
repz
shlb
and
xchg
shlb
mov
sahf
push
cmpsb
add
add
mov
push
inc
and
repnz
fimull
fs
pop
add
pop
loopne
and
lcall
ret
push
out
cli
mov
call
out
repnz
loopne
icebp
mov
jl
xor
xor
js
adc
in
and
call
push
les
stos
pop
outsl
fcoms
xchg
mov
rorb
mov
adc
clc
scas
or
push
enter
inc
nop
imul
sub
cmovle
or
lar
nop
aam
push
jecxz
push
hlt
mov
mov
mov
nop
flds
add
and
pop
outsl
adcb
scas
data16
xor
inc
or
insb
mov
and
xlat
or
xchg
jb
es
fdivs
or
dec
or
push
lea
cmp
add
call
push
divl
push
or
mov
mov
pushf
xchg
xor
jp
data16
rcl
inc
inc
cld
push
mov
inc
push
xchg
rclb
pushf
rcrb
dec
iret
in
xor
negb
jnp
stos
les
aam
test
sbb
lock
push
mov
cmp
ds
aaa
adc
stos
mov
ss
fmul
ds
and
push
sti
jae
ljmp
js
data16
lods
bnd
sbb
add
addr16
adc
orb
mov
rorb
cld
jp
imul
sub
test
sbb
and
adc
and
adc
push
dec
pop
sbb
ficoml
aaa
pusha
mov
xor
decb
rorb
orb
cmp
jle
sbb
lds
jmp
jns
and
test
mov
xchg
sbb
into
mov
dec
sub
mov
stos
fbld
sbb
cli
int
fcmovu
stos
movsb
out
push
pop
jl
fiadds
mov
sub
mov
enter
and
lahf
mov
and
or
fisttpl
cmpb
jbe
dec
fstpt
ficoms
push
mov
pop
add
stos
inc
inc
adc
decl
js
push
rclb
daa
arpl
jge
xchg
scas
out
mov
dec
sar
lcall
mov
in
mov
fistpl
push
fadd
adc
jp
decb
push
mov
loopne
sahf
jp
fiaddl
arpl
push
test
or
jo
mov
mov
xor
into
in
clc
push
ljmp
loopne,pn
test
into
jg
loope
mov
cltd
lret
out
xchg
enter
sahf
inc
jns
out
fnstsw
fisubrl
ss
jle
jl
mov
nop
out
or
outsb
sub
and
xchg
stos
pusha
lods
test
out
aam
cmp
cmp
push
adc
push
int3
inc
xor
mov
in
push
fisubs
sbb
pop
inc
in
pop
sub
pop
imul
fsubrs
sbb
sbb
and
ss
push
enter
std
jp
sbb
inc
push
and
into
ror
xor
or
xorb
test
and
or
loopne
sbbl
sub
push
jl
rcrb
sub
inc
ljmp
push
add
xchg
shl
xor
cld
pop
bound
hlt
bound
jns
leave
jo
mov
js
insl
ret
mov
cwtl
mov
stos
add
dec
pop
insl
dec
jbe
jns
std
or
xor
push
mov
add
ss
push
andb
pusha
stos
mov
mov
movsl
push
pushf
hlt
jae
adc
ss
lret
lcall
std
mov
test
sarb
cmpsb
and
sub
inc
data16
and
mov
dec
out
js
and
sbb
int3
inc
xor
das
loopne
add
xor
cli
sub
ljmp
inc
sbb
inc
addb
fildll
xlat
mov
sub
fnsave
push
andb
xchg
pusha
pop
pop
add
push
addb
rorl
dec
jne
inc
jp
ret
lock
mov
pop
cmpsl
and
aas
mov
xchg
lock
mov
aam
gs
std
addl
push
divb
cli
sub
rolb
lods
pop
xchg
testb
jne
mov
pushf
adc
pop
rorb
cmpsb
ds
loope
or
and
pop
out
push
fadds
insl
cmp
jmp
mov
jae
cld
loopne
mov
cmp
push
mov
je
outsb
dec
push
loopne
ss
in
mov
pop
pop
jne
push
or
call
mov
movsb
leave
xchg
mov
push
cmp
jbe
or
les
push
clc
les
jmp
jle
enter
mov
div
add
cs
mov
dec
adc
lcall
mov
enter
test
shlb
es
dec
dec
lahf
pop
pop
shlb
cmp
bound
cmp
and
xor
or
das
decb
add
ret
jmp
inc
mov
sub
add
sbb
inc
mov
stos
ss
push
shrb
popf
xor
jl
cmp
xchg
inc
jp
je
in
inc
push
cmp
test
sub
jle
xchg
inc
mov
adc
lret
mov
push
push
jecxz
adc
aaa
pop
mov
insl
movsbl
sbb
push
sub
rcrl
mov
cs
pop
rclb
cli
lock
push
mov
loope
sub
es
inc
pop
loopne
mov
push
insb
mov
dec
pusha
ret
mov
ret
or
fiadds
dec
push
ds
jno
jl
enter
loopne,pn
xor
aad
or
cmpsb
pop
mov
or
loope
cwtl
jp
or
xchg
push
in
xchg
jmp
je,pn
mov
inc
sti
xchg
clc
jbe
filds
sbb
mov
cmp
cmp
or
pop
push
and
mov
sti
sub
mov
mov
push
and
leave
xchg
fidivrl
mov
les
dec
sbb
xchg
mov
mov
rcrb
test
mov
lcall
fs
sub
xchg
push
pop
insl
dec
inc
inc
push
sbb
movsb
testb
dec
aaa
stos
lods
push
jbe
dec
push
cmp
mov
std
repz
lahf
add
push
insb
mov
jle
mov
mov
in
mov
and
xchg
scas
enter
jle
nop
rolb
adc
faddl
add
call
pop
pushf
shll
cmpsb
fiadds
or
cmp
or
adc
mov
adc
clc
ljmp
xor
lock
and
loopne
fisttpl
xchg
bts
mov
mov
inc
mov
cmp
cmpsb
in
or
in
loopne
rolb
lods
dec
push
shr
aaa
sbb
or
add
loope
xchg
adc
mov
inc
mov
in
add
lret
lcall
enter
xor
jno
negb
and
addb
mov
push
add
stc
loope
cmc
xlat
ss
sbb
add
mov
adc
and
pop
repz
push
push
aaa
jl
adc
cmpsb
jbe
data16
pop
jl
push
or
cmpl
xor
fsubrs
mov
mov
fwait
jae
aaa
push
out
stos
out
call
push
pop
mov
in
xchg
cmpsb
mov
aam
xlat
sbbl
addl
orl
repz
test
bnd
dec
loop
leave
ret
call
push
mov
or
imulb
out
xchg
lahf
std
mov
ss
inc
xor
add
fadds
add
dec
test
shrl
cmpb
test
cld
sbb
jmp
rcl
mov
dec
and
shrb
shl
add
aaa
or
inc
jl
out
jne
je
ljmp
mov
lds
cmp
das
loopne
xchg
mov
xchg
push
popa
pusha
sbb
push
fmull
mov
jecxz
pusha
push
xor
cmp
or
xorb
test
mull
hlt
aaa
in
push
sbb
xlat
lock
test
mov
test
and
int
mov
pop
pusha
loopne
xchg
xchg
cli
loope
inc
mov
xchg
xor
iret
cmp
in
xor
pop
add
sahf
fcmovnu
mov
push
inc
int
dec
sbb
xchg
xchg
lcall
out
shrb
push
jmp
mov
pop
adc
sub
jg
dec
enter
and
pusha
mov
fmull
fidivrl
jae
out
inc
dec
frstor
push
pop
xchg
or
mov
add
subl
lods
pop
lock
loope
pop
pop
mov
mov
insb
cmp
mov
out
lret
xchg
adc
lea
bound
jns
pop
cmp
lds
mov
dec
cmp
repnz
or
sbb
push
adc
stos
or
inc
outsb
add
xor
dec
xor
add
push
call
add
adc
rolb
add
xor
adc
sbb
push
adc
clc
hlt
pop
mov
push
repz
inc
mov
inc
fnstenv
pop
std
pop
xorl
fsubs
or
add
jp,pn
sbb
cmp
lods
pop
in
or
xchg
mov
mov
out
fs
js
sub
cmpsb
mov
sbb
movsl
sahf
mov
hlt
or
xor
sbb
push
add
fnstenv
lahf
sti
sahf
mov
pop
cwtl
popf
fdivr
dec
and
sub
sub
out
cmpsl
pop
jne
mov
loopne
add
cmp
test
loopne
push
hlt
scas
aaa
or
sbb
nop
and
and
cmc
imulb
popa
sbb
test
inc
fisubl
fdivrs
cmp
pop
mov
subb
rorb
es
fcom
inc
mov
shrl
jle
andl
push
cli
lcall
adc
fmuls
sbb
or
push
add
in
cmc
negl
inc
ret
jb
mov
pop
jle
mov
sbb
mov
add
fwait
popa
push
dec
mov
nop
std
iret
jmp
sub
std
jbe
xchg
inc
sub
cmp
jp
and
pop
ss
mov
je
test
pushf
sub
inc
clc
dec
adc
jmp
adc
push
mov
sub
mov
sbb
add
mov
ficompl
jp
sbb
dec
mov
iret
shll
popa
cmp
mov
push
insb
jle
pop
jo
repnz
and
sbb
inc
xchg
ss
repnz
rorb
push
mov
rorb
xor
clc
adc
aam
or
in
or
cmp
adc
lock
imul
mov
dec
loop
and
inc
les
sub
lcall
cmp
adc
into
dec
lock
out
cmpb
fsubrs
mov
pop
je
inc
push
jmp
ret
add
inc
mov
mov
ret
shll
jbe
gs
pop
inc
and
pusha
mov
cli
jl
add
inc
push
push
inc
out
jne
shll
outsb
dec
lahf
and
rorb
sub
xor
js
dec
rol
mov
jno
enter
insl
iret
scas
jl
push
push
push
nop
jle
js
inc
inc
mov
pop
cli
fwait
ljmp
loop
shl
mul
scas
ss
mov
dec
xchg
int3
dec
ljmp
xor
sbbl
push
fisttps
outsl
les
mov
outsl
jb
add
pop
and
aad
icebp
mov
cmp
cmc
push
add
mov
sbb
mov
push
stos
adc
fstl
lods
in
mov
jg
sub
roll
mov
dec
je
pusha
into
cld
cmp
adc
js
enter
push
ret
aas
or
adc
fisubs
mov
shlb
je
xor
or
or
fwait
clc
das
loop
and
sub
xchg
xchg
js
test
xchg
jb
xor
xchg
sbb
aas
push
xchg
push
or
push
jl
icebp
shl
mov
pop
add
outsb
mov
inc
decl
clc
imul
jg
cltd
push
cltd
jo
xor
stos
jnp
mov
loop
jl
jno
and
sbb
movsl
sub
sub
jp
pop
sar
cli
ror
pop
adc
pslld
mov
sbb
scas
xlat
sbbb
stos
pop
cmc
movsb
pop
lods
mov
mov
mov
ret
xchg
dec
imul
das
insb
rolb
xchg
scas
cmp
pop
das
and
mov
inc
sbb
jl
ret
jg
fisubl
add
sbb
pushf
iret
jge
pop
jno
popf
dec
mov
enter
test
mov
push
mov
push
rcll
loope
call
pop
mov
pusha
lods
in
push
imul
sbb
mov
jo
insl
xlat
ret
stos
xor
aam
and
test
loop
xchg
sbb
outsb
sbb
xchg
push
iret
pop
sub
aaa
test
mov
fwait
or
push
cltd
popf
dec
jmp
pop
sbb
shr
sub
pop
in
mov
lods
imul
pop
mov
pop
cwtl
mov
or
add
jle
mov
and
lea
jp
inc
push
adc
ljmp
dec
pop
imulb
xor
fnstcw
andl
push
cs
add
jo
mov
push
jmp
fadds
pop
repz
mov
or
rep
inc
ret
loope
xchg
mov
pushf
push
sbb
stc
mov
inc
ja
dec
and
ficompl
imulb
push
cmp
into
lods
dec
clc
negl
loop
das
xchg
jg
imul
jge
sbb
pop
or
fidivl
lret
mov
xor
outsl
sub
push
mov
or
jo
movsl
adc
mov
pusha
fsubs
es
sbb
clc
clc
pop
pop
ficomps
pop
sahf
cmp
bound
jns,pt
lret
mov
jge
jno
mov
adc
sarl
inc
pop
dec
mov
sbb
dec
jmp
rol
subb
ljmp
dec
xlat
pop
dec
fdivs
inc
or
sbb
aaa
stos
sub
movsb
adc
cmp
sbb
cld
push
jno
fildll
das
cmc
mov
divb
popf
push
or
adc
cmc
pop
add
mov
jmp
sbb
jmp
fstpt
mov
ret
push
xchg
add
cmc
rcrl
loop
add
psrlq
mov
cmpsl
rcrb
jmp
shlb
stos
lods
push
xchg
push
jns
mov
inc
xchg
mov
push
test
mov
mov
push
stos
es
sbbb
fldcw
pop
int3
fwait
mov
ja
jecxz
push
or
jg
call
mov
pop
pop
fdivrs
inc
jmp
push
mov
mov
loop
push
je
xchg
mov
adc
pop
movsl
ficoml
rcll
mov
in
mov
dec
sbb
pusha
push
mov
mov
cmpl
mov
inc
icebp
jno
shrb
lock
cmc
repz
xor
mov
sahf
out
add
insl
mov
jnp
shlb
sbb
push
xchg
dec
nop
mov
and
push
lcall
xor
lds
mov
std
cli
mov
mov
xlat
fwait
dec
mov
xchg
clc
inc
or
shlb
cmpsb
inc
add
mov
pop
movsl
push
mov
stos
xchg
jp
fwait
mov
cs
adc
adc
sar
fstpt
fists
mov
in
loopne
xor
or
dec
or
xor
rclb
dec
addl
lock
push
shrl
fstps
adc
dec
shll
movsl
push
sbb
and
jmp
add
bound
lret
jno
mov
mov
push
inc
mov
inc
add
sbb
test
add
loope
inc
inc
mov
pop
clc
pushf
dec
inc
xchg
fistl
dec
setle
and
mov
shl
arpl
fldenv
lahf
push
fiadds
movb
cmc
aad
andl
test
jmp
push
sbb
dec
jns
push
xchg
add
enter
sub
int3
test
push
mov
insl
and
mov
lcall
sahf
cwtl
xchg
jns
jns
cmp
mov
and
cmp
pop
cld
lcall
inc
inc
push
mov
lock
je
or
int
les
sub
ret
rcll
mov
inc
pop
push
xlat
into
lret
dec
fmul
int3
or
push
jo
iret
jb
iret
sbb
jo
mov
adc
andb
and
test
adc
sbb
push
or
push
adc
dec
sub
and
jne
xlat
add
pusha
ja
scas
dec
aam
mov
ljmp
aam
int3
insb
push
pop
and
inc
mov
sbb
mov
adc
call
test
xlat
push
lods
ja
mov
push
out
inc
push
je
std
icebp
mov
mov
imulb
mov
mov
fs
int3
inc
js
inc
in
ret
lcall
icebp
hlt
ss
pop
adc
xor
sbb
stos
lods
loopne,pn
loope
inc
movsl
in
mov
sbb
mov
sub
xor
xor
ret
sti
loop
stos
mov
or
scas
jno
or
idivb
dec
inc
mov
out
mov
push
ret
jae
addr16
lea
sub
clc
mov
iret
adc
or
sub
out
scas
mov
jae
in
mov
dec
shr
cmpl
subb
and
push
inc
dec
mov
or
pop
into
push
and
xchg
inc
or
pusha
mov
mov
repz
add
dec
insl
test
inc
sbb
shrb
and
into
sub
cmpl
aam
lea
lcall
lods
ja
js
and
fadds
idivb
inc
push
push
sbb
jecxz
jp
fiadds
xchg
mov
shr
dec
in
add
sub
fwait
imul
out
fidivs
or
pop
lock
xchg
arpl
pop
fdivr
pop
mov
push
fildl
ret
stos
adc
and
sub
pop
cltd
inc
mov
stos
sbb
aas
movsl
stos
jb
adc
inc
cmp
cmp
clc
xor
push
lcall
lea
cmp
jmp
mov
mov
jmp
pop
cli
mov
sbb
pusha
cmp
dec
adc
sub
cmp
loopne
mov
jo
lds
push
je
sub
clc
xchg
bound
cmp
es
mov
pop
fcomp
xor
rcl
sahf
lock
jecxz
icebp
and
cmp
mov
popl
push
pop
push
push
pop
jbe
dec
aam
rcrb
sub
pop
mov
mov
js
test
subb
pop
mov
fwait
insb
aad
or
mov
sub
jns
movsl
dec
cmp
ret
cmp
sbb
cmpsl
push
dec
fs
mov
lea
arpl
sub
call
ljmp
ret
daa
push
lcall
aaa
push
repz
sbb
lods
push
xchg
sarb
sbbb
push
fwait
cmpsb
adc
in
mov
les
xchg
pusha
inc
repz
jno
pop
inc
ret
ficompl
and
sarl
rorl
mov
sahf
cltd
insb
lods
sbb
fiaddl
insb
cmpb
pop
fcompl
fldenv
sbb
dec
jp
mov
adc
push
in
mov
adc
leave
xchg
mov
push
xchg
mov
aaa
loopne
lods
dec
outsl
or
dec
xchg
sub
mov
popa
xchg
or
xchg
call
inc
inc
cmp
push
push
inc
cmp
inc
cmp
jp
es
and
fldlg2
icebp
dec
es
sbb
mov
jo
popf
add
hlt
ret
or
push
mov
sub
inc
push
jb
xchg
or
mov
push
xor
pop
lods
fiadds
fcmovnu
push
arpl
rorb
dec
test
or
pop
jne
add
ss
dec
je
fldl
cmp
xchg
xor
and
ljmp
jge
push
sbb
leave
lock
mov
or
inc
jnp
lods
ret
shr
pop
das
loope
loopne
js
das
or
sub
push
loope
inc
in
xchg
into
inc
gs
mov
adc
adc
je
test
aad
pop
iret
lods
dec
stos
xor
xor
or
psubq
cs
popa
cmp
xlat
push
dec
loopne
shl
cmc
aad
cmp
gs
in
mov
ljmp
jno
jl
les
lock
inc
js
lock
pushf
jnp
rol
and
mov
jo
cmpsb
scas
int3
xchg
cmp
or
dec
shl
jl
pop
mov
sbb
cmp
jle
push
add
add
mov
sub
mov
and
arpl
test
cmp
push
cs
clc
jnp
leave
inc
movl
rcr
test
dec
add
bound
repnz
sahf
mov
mov
shrb
ds
insb
insl
ds
pop
mov
ss
pusha
pushf
icebp
sub
outsl
adc
xor
jecxz
push
dec
lcall
adc
das
xchg
mov
test
leave
shr
and
lods
loop
nop
sbb
pop
orb
cld
push
scas
adc
dec
sbb
add
loope
test
pop
jecxz
xchg
jne
xlat
jle
in
iret
and
stos
sub
in
jecxz
sbb
sub
loop
lret
test
out
test
test
ja
mov
mov
cmpsb
cld
dec
cmc
mov
cltd
inc
scas
cs
inc
sti
and
mov
setge
mov
rcll
test
incl
jno
adc
sbb
or
hlt
cmp
pop
add
mov
mov
call
into
sbb
es
ficoms
mov
sub
out
test
cmpsl
aaa
push
adc
test
sti
mov
pushf
int3
out
int3
rclb
adc
inc
je
rcl
push
inc
cltd
das
mov
inc
repz
leave
cld
mov
sbb
mov
xchg
and
pop
lcall
push
repnz
cmpsl
jge
adc
rcrb
push
and
int3
push
out
and
mov
xlat
mov
inc
test
or
dec
or
stc
cmp
pop
mov
xchg
mov
and
ljmp
fsts
aas
xchg
cmc
loope
arpl
fcmovu
ret
cmpsl
push
mov
in
loope
mov
shrb
es
test
jmp
and
adc
stc
mov
sbb
int
mov
out
div
enter
adc
cmp
add
cmp
scas
sbb
dec
decl
mov
adc
mov
scas
mov
or
push
pop
xor
in
or
xor
popa
sub
push
bound
jnp
mov
xor
push
push
scas
dec
inc
dec
push
mov
fcmovnb
fwait
push
fs
les
pop
mov
dec
push
test
push
and
pminub
xorl
clc
imul
inc
test
mov
jnp
pushl
mov
lea
push
leave
pop
jo
add
xor
cmp
jl
cmp
fdiv
and
mov
or
push
fwait
adc
ret
fdivrp
adcl
rcrl
repnz
rorb
aaa
inc
es
pop
fstpl
push
sahf
out
inc
adc
lea
clc
mov
test
ss
test
fwait
push
pop
mov
inc
adc
test
jbe
dec
subl
or
jp
hlt
mov
stos
test
test
scas
nop
inc
adc
mov
decl
or
add
rol
rcll
mov
adc
mov
in
std
es
orl
xchg
mov
out
or
jle
into
or
add
fwait
inc
jp
ds
mov
xchg
sti
lcall
cmp
push
movsb
jae
pusha
imul
loop
adc
push
imul
loope
orb
sub
sub
cmp
or
lock
dec
jle
ret
out
sub
inc
mov
rorl
sbb
cs
inc
dec
add
mov
sub
mov
and
jb
insl
jp
sub
pop
ror
mov
out
repz
fnstsw
dec
insb
push
mov
xor
mov
sbb
or
loop
mov
sbbb
xchg
add
xchg
out
mov
push
ret
ret
cmp
test
cld
pushl
mov
aam
push
or
pop
add
test
xor
mov
mov
rolb
lahf
test
sbb
cs
dec
inc
add
pop
sub
sbb
pushf
sbb
lcall
sub
jp
add
mov
jmp
faddl
in
rclb
aad
stos
lods
mov
or
movsb
sbb
add
in
xchg
xor
inc
adc
push
jbe
into
daa
clc
mov
adc
xor
dec
rorb
shrl
dec
jp
mov
inc
or
pop
ret
clc
iret
mov
imul
xchg
leave
mov
mov
xor
or
or
push
inc
pop
cmpsl
fwait
add
movsb
adc
shlb
roll
push
jle
popa
cmp
jge
pop
add
lcall
sub
ret
outsb
mov
test
add
xchg
inc
das
fcmovnu
aas
popa
push
jl
sub
bound
cmpsb
insb
test
das
sub
pop
push
scas
push
xor
add
inc
scas
test
std
sbb
lcall
cmpsb
cli
sbb
ret
dec
pop
adc
mov
cld
pop
jno
bound
jnp
inc
enter
div
sbb
push
jno
stos
inc
roll
dec
test
js
les
lock
andb
sti
inc
pop
popa
cmp
mov
lcall
rcr
imul
add
ljmp
ss
fsubrp
adc
orl
testl
inc
sbb
pop
cmp
push
xor
adc
cmp
lcall
cmc
cmp
movsl
xchg
cld
lods
lret
push
call
cmpsb
pushf
jmp
pop
xorb
loopne
addb
xchg
xchg
movsb
fs
icebp
shrb
mov
ljmp
mov
loopne
add
adc
xorb
jae
mov
clc
jo
stc
cmc
je
mov
call
mov
lock
test
xchg
inc
std
nop
cs
in
aaa
icebp
push
out
insl
scas
xchg
lock
fisubs
or
or
mov
push
push
fs
fldcw
sbb
cmp
mov
shlb
sbb
inc
xchg
es
push
jnp
or
ror
xor
fcompl
test
mov
cmp
lea
adc
es
movsl
inc
sub
dec
adc
mov
outsb
push
pusha
dec
xchg
jl
outsb
mov
push
nop
cmp
pop
sub
loopne
mov
xor
scas
std
jp
call
jno
and
inc
jecxz
adc
or
es
add
mov
fs
ret
sbb
ss
jns
ret
or
lahf
stos
pop
shlb
add
or
clc
pinsrw
ljmp
cmp
pushl
ljmp
push
sbb
and
hlt
dec
jno
jbe
inc
xor
es
xchg
push
loop
loope
std
orl
pop
sub
lret
mov
dec
cmp
ja
mulb
xchg
dec
loopne
js
sbb
mov
jl
loopne
mov
jle
cli
cmp
in
ss
es
xor
xchg
mov
lock
pop
push
data16
lret
scas
add
inc
insb
sub
in
mov
cli
sub
ds
and
clc
or
push
test
insb
stos
pop
mov
sub
clc
push
pop
xor
jge
mov
jecxz
jbe
pushf
je
movsl
lret
test
sahf
push
push
sbbb
lret
mov
cwtl
inc
stc
dec
mov
pop
in
in
xor
mov
sub
adc
movsb
orb
add
push
push
in
pop
mov
scas
js
out
loopne
int3
xchg
shlb
inc
xor
mov
cmpsb
pop
rcrb
addr16
loop
pop
scas
push
std
xor
mov
add
push
lea
cmp
aaa
sub
jo
xor
fistps
mov
les
ds
sub
mov
dec
pop
notb
insl
lods
mov
loope
testb
or
or
sbb
inc
jb
add
jge
mov
sub
sbb
hlt
bound
jmp
dec
xchg
jl,pn
xchg
into
jle
dec
loopne
sub
adcb
sbb
loopne
dec
popa
cmc
pushw
sbb
sbb
jo
add
xor
ljmp
inc
mov
adc
out
mov
xchg
mov
js
adc
push
push
sub
mov
enter
cmc
add
jae
xchg
mov
rcrl
pushf
mov
mov
cld
push
test
xchg
jmp
jg
pop
mov
outsb
fdivrl
mov
push
pminsw
int3
sub
inc
jnp
mov
testl
mov
ret
rcl
add
in
inc
xchg
mov
inc
lret
inc
push
sub
loopne
les
out
jmp
jnp
inc
shll
or
jo
push
rolb
stos
mov
rol
sbb
je
fwait
push
fnstenv
les
cmp
sbb
mov
or
fsubl
mov
sbb
mov
mov
loopne
mov
sub
dec
adc
mov
std
push
pop
in
dec
mov
sbb
icebp
xchg
add
mov
xchg
xchg
mov
push
pop
adc
ljmp
sbb
pop
add
mov
push
rol
arpl
mov
in
divl
and
inc
aam
or
xchg
add
hlt
push
add
and
and
inc
daa
or
inc
mov
cmp
push
xlat
or
insl
jnp
or
push
fisttpl
add
jo
add
cmpsl
shlb
call
pushf
cmp
jb
pop
or
dec
cwtl
and
or
scas
int3
enter
push
insl
adc
imulb
cmpb
inc
push
scas
mov
mov
ss
dec
sub
dec
imul
pop
pop
mov
sub
mov
aaa
xor
repnz
xchg
pop
add
cli
xchg
push
loope
adc
and
push
mov
test
push
xchg
ret
lret
ljmp
mov
cmpl
fimull
lods
data16
jmp
adc
adc
pop
inc
ds
mov
add
test
rcrb
push
adc
pushf
pop
mov
inc
dec
jne
and
das
movsl
scas
cli
ss
iret
lea
add
scas
xchg
and
mov
shlb
fimull
imul
lock
fists
into
call
outsl
lret
mov
int3
cmp
shll
sbb
and
mov
add
test
dec
cmp
dec
sub
cld
xchg
ds
mov
insb
into
xchg
insb
rolb
adc
adc
cmp
xor
js
lahf
ret
sbb
les
outsb
push
cwtl
jae
push
xchg
inc
mov
loopne
jecxz
fimuls
movl
flds
sub
rcrl
or
or
mov
xchg
jge
sbb
repnz
sti
dec
sbb
inc
fmuls
sub
add
in
or
adc
xor
mov
mov
sbb
jbe
testb
out
add
sub
push
sub
inc
xchg
nop
and
inc
addr16
stos
in
jmp
jne
and
jp
loop
ljmp
lods
ret
je
cmc
push
or
xor
inc
push
inc
mov
or
mov
jb
jae
jg
jp
fidivl
in
push
pop
lea
and
push
xchg
rorb
ds
xchg
orb
sub
mov
ljmp
xor
cmp
jl,pt
into
mov
jp
xchg
pop
pusha
hlt
cwtl
ja
je
dec
push
mov
inc
scas
fs
lock
adc
test
xchg
or
fwait
scas
clc
ljmp
fcoml
dec
loopne
add
outsb
lahf
mov
stos
dec
repnz
push
faddl
lea
ret
cmp
jmp
mov
call
and
adcb
fs
call
cmpsb
push
xlat
ret
xchg
dec
push
sbb
jne
xor
sbb
cmc
int3
or
push
pop
inc
in
ds
pop
ficompl
sahf
push
xchg
lcall
movsl
sahf
pop
inc
or
dec
xchg
roll
push
test
das
adc
sub
jecxz
jnp
cmp
sub
lds
stos
aam
ss
pop
call
mov
imul
cmp
jg
pop
lods
push
or
pop
test
and
adc
sub
aam
and
and
pop
mov
mov
and
cs
jmp
push
aaa
stos
inc
push
mov
or
dec
inc
mov
mov
sbb
inc
dec
loopne
pop
fs
fidivrs
add
dec
and
movsb
and
gs
mov
imul
fldl
insb
ret
push
addr16
fisubs
push
andb
fldl
cmp
fs
pop
enter
mov
adc
pop
inc
ds
pop
out
mov
icebp
add
cmp
add
ret
cmp
xor
lods
and
leave
add
inc
ror
js
xchg
cli
or
into
insb
and
call
xor
ja
lods
push
pop
push
mov
cli
mov
mov
cs
mov
shll
xorb
stos
lcall
lock
mov
or
cld
and
xchg
cs
sub
adc
sub
mov
add
dec
jmp
mov
mov
jg
pusha
mov
add
aad
popa
orl
cmp
mov
mov
clc
cwtl
call
push
mov
inc
insl
imul
jmp
mov
add
cmp
cmp
dec
pop
jo
es
aam
inc
sbb
or
leave
negb
xor
and
or
in
and
xchg
push
xor
mov
xor
add
roll
popf
jno
or
push
aas
icebp
pusha
test
fcmovu
sub
push
scas
dec
pop
inc
xor
add
arpl
loope
outsl
ljmp
push
cmp
push
push
push
clc
mov
fs
adc
stos
inc
fisubrs
push
enter
cmp
fmul
mov
add
mov
inc
cli
gs
inc
push
scas
or
clc
loop
mov
mov
xchg
add
inc
push
sti
cmp
jmp
ds
add
cmc
scas
cmpsl
and
sbb
jbe
pop
inc
add
in
sbb
sub
cmpsl
out
and
jo
scas
inc
mov
clc
outsl
repz
sbb
outsb
sub
sub
xor
stos
icebp
ret
push
clc
lods
lret
pop
mov
push
xor
loopne
adcb
aas
add
and
in
ds
push
sub
outsb
push
bnd
loope
rcl
xchg
cmp
call
popa
mov
pop
mov
outsl
adcb
xor
push
inc
test
cmp
pop
xchg
movsb
adc
loopne
mov
mov
mov
ds
push
fs
adc
addl
sti
jmp
add
jb
addl
ret
sub
roll
xor
mov
pop
lcall
hlt
pop
or
mov
mov
mov
jge
jo
dec
outsb
repz
mov
in
mov
rcrb
push
push
jmp
mov
loopne
fcomi
cmp
jbe
jnp
or
rorb
js
jo
leave
mov
out
shlb
js
dec
mov
lea
fnsetpm(287
cltd
xchg
out
stc
cld
repz
daa
mov
mov
add
cmp
xchg
jp
mov
sub
out
jb
jg
mov
and
cli
dec
jle
inc
jl
shl
mov
enter
push
in
push
jle
jmp
inc
lahf
add
push
sbbb
cmc
scas
aaa
cmc
push
cmpl
jb
rcll
lcall
ss
mov
sti
insb
cmp
sub
pop
hlt
xchg
inc
push
cmp
loopne
mov
test
pushf
inc
lea
lock
jl
fwait
int
lock
adc
ret
xchg
mov
je
scas
out
or
aaa
fs
and
in
lahf
jmp
add
out
mov
mov
mov
ret
pop
inc
in
outsb
push
mov
loopne
push
loope
pop
pop
pop
loopne
mov
push
lock
xchg
jo
sbb
fadds
stc
movsl
out
cwtl
sbb
dec
sbb
adc
or
pop
in
mov
inc
pushl
dec
inc
jp
mov
jp
out
xchg
cld
add
fnsave
dec
jecxz
in
jbe
mov
fwait
add
nop
out
je
dec
aas
mov
pop
cltd
insb
insl
push
frstor
movsb
xchg
sti
mov
or
mov
es
xchg
jnp
pop
sub
jl
mov
inc
rorb
imul
or
mov
shlb
cmove
rcl
xchg
ljmp
add
xlat
sub
push
xor
js
jne
inc
jno
loope
add
cmp
hlt
mov
xor
sub
adc
and
pop
mov
push
dec
mov
adc
mov
out
jno
mov
and
mov
test
insl
fsubs
stc
mov
and
jg
mov
mov
test
dec
push
mov
cltd
stos
add
and
adc
cmp
into
xor
aad
mov
push
adc
xor
ja
add
jp
mov
push
push
add
push
pop
leave
jg
outsb
mov
rolb
outsb
pop
jbe
dec
xchg
jmp
and
lahf
mov
xchg
pop
js
sub
jno
and
insl
inc
pop
and
mov
fsubrl
sub
clc
xor
jo
mov
rolb
mov
clc
and
inc
cmp
mov
ja
push
loop
pop
aam
mov
inc
sub
int
add
pushl
pop
imul
add
inc
mov
fmull
mov
push
loop
mov
sti
into
pop
enter
test
std
fidivl
fmuls
or
or
add
and
incl
movsl
fistpll
lret
mov
adc
push
fdivs
sbb
xor
jp
add
push
push
das
add
das
or
push
test
loope
push
stos
inc
cmpsl
lock
push
dec
jge
inc
adc
ja
inc
cld
cmc
outsb
loop
pop
jo
push
mov
jmp
lods
dec
hlt
popf
and
scas
dec
dec
inc
adc
loop
xor
push
clc
sbb
mov
rcr
sahf
in
flds
lcall
lods
adc
xchg
stos
dec
sub
les
orb
lds
mov
sub
loopne
inc
fdivp
pop
sbb
mov
dec
sahf
dec
xchg
lret
add
xchg
cwtl
ja
dec
push
sub
mov
ja
xor
shll
xchg
imul
js
cli
incb
mov
loopne
or
loopne
enter
rclb
xchg
cmpsb
mov
xor
pusha
icebp
loope
add
jle
jmp
inc
dec
aam
push
fistpl
ret
inc
jno
shrb
or
and
lods
rolb
pop
or
xchg
andb
mov
mov
xchg
stos
clc
mov
es
out
mov
loop
jecxz
add
mov
stos
in
jbe
subb
mov
out
leave
mov
sar
add
bound
adc
cmovb
daa
or
xchg
xor
je
push
xchg
into
xchg
into
adc
sbb
jl
push
subb
push
lods
jbe
setb
stos
cmc
data16
test
lahf
mov
insb
push
jnp
dec
test
mov
xchg
sti
aas
add
pop
movsl
xchg
imul
sbb
nop
push
imul
dec
fisttps
inc
mov
cmp
out
adc
inc
mov
cmpsl
adc
push
in
js
and
dec
fildl
cmpsl
shlb
add
and
lock
mov
push
test
adc
nop
ret
inc
xchg
jno
xor
adc
add
or
or
jmp
cmc
cmpsl
push
pop
popa
ret
pop
or
fdiv
mov
sub
fistpl
mov
cmp
sub
push
pop
push
lods
loopne
and
sbb
jl
cmpsb
inc
andl
int3
ja
mov
idivl
cmp
inc
add
lock
mov
inc
in
sahf
or
mov
xchg
iret
push
ss
xchg
jbe
movsl
scas
and
jge
push
fiadds
xchg
mov
cmp
lret
jle
fnstsw
lods
or
jbe
sub
ret
outsl
or
pushf
out
lea
xor
mov
dec
movsb
dec
jge
jp
shlb
mov
or
into
imul
lret
iret
mov
lds
sub
lods
inc
xchg
add
test
xor
adc
add
bound
and
push
shufps
mov
stos
inc
jl
lods
adc
push
fsubr
push
sub
push
loop
mov
xchg
push
jne
add
add
mov
aad
adc
pop
mov
jmp
scas
test
out
dec
ficomps
sub
mov
les
test
sub
jmp
xchg
dec
imul
adc
out
movsl
mov
js
dec
lods
mov
adc
pusha
insl
call
fsubp
cmp
pop
clc
inc
cmp
movsl
repnz
jns
jmp
dec
jg
out
mov
and
ja
mov
stos
mov
mov
add
inc
xor
mov
inc
jp
mov
loope
notl
cs
lds
inc
pop
cmpsb
out
cmpsb
push
loope
dec
jmp
mov
fstpt
loop
or
or
popf
xor
rcr
xchg
add
in
mov
mov
sub
pop
xlat
sbb
add
dec
sub
add
lahf
fimull
loop
lret
sub
popl
test
mov
inc
scas
popa
nop
stc
cli
dec
pop
ret
and
mov
cmc
aas
lret
push
or
mov
shll
jnp
mov
mov
out
scas
mov
xor
sub
cmpsb
mov
stos
ret
in
shlb
mov
testb
mov
or
and
or
das
push
add
jb
imul
addr16
inc
or
dec
loope
mov
jecxz
lea
jo
ret
add
push
xchg
xchg
cld
aaa
es
xchg
or
sbb
rcrl
xchg
xchg
mov
lcall
aad
gs
cmp
kxorb
adc
add
lret
inc
lret
or
dec
cli
pushf
push
sub
repnz
stc
mov
adc
mov
adc
scas
sahf
test
mov
pop
int
jge
hlt
daa
xorb
stc
ret
jecxz
mov
das
inc
or
dec
sbb
and
xor
test
sub
ss
xor
mov
shll
pusha
mov
subl
mov
lret
mov
test
out
inc
sub
fisubs
lea
xchg
mov
pusha
sub
cli
add
inc
mov
xchg
mov
sbb
push
ret
lcall
or
rorb
insl
popa
sub
rcrb
lahf
and
roll
mov
call
mov
jbe
int
mov
sbbl
les
xor
fsts
and
push
mov
hlt
lcall
jbe
xor
push
test
in
sbb
js
pushf
push
je
or
dec
jp
sub
cmpsb
outsb
fistps
scas
and
jnp
into
dec
ljmp
imul
cmp
jmp
cmc
push
je
pop
or
push
sub
repnz
dec
dec
mov
loopne
inc
popa
loopne
pop
daa
add
jo
loope
lock
loop
mov
loopne
jne
xor
aam
inc
fcompl
xchg
inc
sarb
pop
iret
hlt
or
or
popa
mov
adc
mov
push
jo
mov
stos
daa
and
fidivrl
sahf
mov
dec
daa
bound
sbb
or
inc
push
leave
jmp
mov
add
inc
fcmovb
idivb
lods
leave
and
lds
or
push
xchg
jo
inc
push
push
sub
imul
in
insb
mov
push
mov
or
adc
insl
mov
fsubp
shll
icebp
mov
int3
ljmp
dec
jmp
or
call
pop
or
mov
pop
and
push
fwait
adc
cmc
lret
xorb
mov
push
call
xchg
bound
or
push
mov
mov
sbb
jnp
outsb
cmp
ret
pop
xor
ds
outsb
fsubs
jo
out
loope
sub
out
hlt
mov
fwait
xorl
and
test
jb
adc
scas
popa
cwtl
outsb
push
and
popa
inc
sbb
mov
in
test
shll
data16
mov
cmpsl
jns
sub
pusha
idivb
pop
clc
cmp
test
jle
sub
push
insb
add
loopne
mov
or
movsl
scas
outsb
cs
shlb
inc
sub
jbe
jecxz
dec
sub
push
mov
rcrl
add
or
je
mov
out
cwtl
and
sub
mov
orl
xor
jl
test
addr16
xor
aas
inc
push
inc
adc
lcall
xor
pop
or
cmp
ficoms
cmp
add
aad
inc
test
cli
inc
push
flds
pop
dec
add
xor
xor
scas
cs
sbb
nop
repnz
imul
subb
cmpsl
push
aam
jp
dec
out
rcll
das
ds
sbb
leave
xchg
push
int3
cmp
mov
and
push
lea
push
subb
jnp
int3
ss
push
cmc
loop
mov
call
dec
push
mov
mov
popf
iret
sbb
decb
rcrl
sub
mov
or
repnz
cmp
outsb
pop
xor
jl
nop
pop
into
xchg
data16
or
les
in
jne
loopne
das
lods
pop
cwtl
cmp
pop
xchg
add
xchg
test
fisttpll
sub
lea
mov
jmp
and
dec
push
imul
aaa
movsl
mov
add
iret
aad
jp
cmp
cmp
mov
and
fnstenv
mov
mov
test
stc
aam
lock
xor
clc
mov
mov
ror
xor
dec
xchg
add
push
shll
mov
push
inc
sbb
jbe
clts
loop
inc
cmp
loop
pop
push
lock
pop
rorb
sbb
outsl
das
es
push
mov
mov
jno
fsubrl
pop
xor
jp
cmp
lods
pusha
pushf
orb
mov
mov
pop
jg
or
ret
stc
loopne
and
fbld
inc
lea
test
push
push
hlt
mov
dec
shrl
push
sub
adc
pop
add
push
mov
lcall
lods
push
jne
std
pop
je
inc
test
sti
shll
mov
ret
pop
push
xchg
push
pop
movsb
xchg
icebp
mov
xor
gs
ss
stos
in
push
mov
sbb
stos
in
inc
fdivl
insl
push
pop
inc
and
push
inc
sbb
mov
sub
or
rcrl
aas
or
rorl
push
jb
roll
in
jb
ret
cld
xlat
xchg
jnp
sbb
dec
or
lcall
sahf
lret
movsb
mov
sbb
cwtl
xor
sub
inc
dec
inc
xchg
filds
jmp
sub
movsb
in
mov
adcb
jecxz
dec
cmp
clc
mov
xchg
jge
or
hlt
movsb
pop
dec
add
popa
jge
roll
insl
ds
xchg
sbb
jb
test
or
jbe
xor
outsb
push
mov
or
jnp
shr
and
adc
pop
js
cmp
rcll
xchg
mov
mov
es
dec
and
cmpsb
push
add
aas
adc
sbb
pop
adc
jmp
mov
adc
pusha
push
xor
inc
mov
leave
mov
jmp
repnz
cmp
ss
sbb
in
cmp
sbb
int
pop
in
fwait
add
inc
out
loopne
jns
rcrb
scas
nop
inc
mov
pushf
mov
rorb
jl
mov
lret
xchg
xor
push
cmp
adc
sub
js
jno
jp
sti
cmc
je
pop
push
lret
lcall
fstps
or
jmp
xor
inc
ror
daa
mov
cltd
int
stos
add
sti
mov
mov
insl
dec
psrlw
es
mov
push
jecxz
pop
adcl
mov
lcall
and
aas
mov
and
sub
test
js
leave
hlt
xor
push
xor
enter
jp
ljmp
add
mov
popa
mov
xor
jno
push
lods
push
fdivs
and
mov
cmpsb
std
xor
push
aaa
sub
mov
push
out
push
call
shlb
push
movsl
inc
repz
dec
scas
mov
adc
or
mov
rorb
jecxz
enter
mov
xor
fldl
aaa
test
lcall
pop
test
and
jg
inc
mov
or
sbb
fildl
cli
lods
popa
xor
fwait
aas
push
sbb
cli
mov
lea
scas
clc
shrl
sbb
cli
fnstsw
push
shll
mov
push
fbstp
push
scas
dec
mov
xorl
cli
loopne
or
ficoml
lea
jecxz
mov
lret
call
les
add
xchg
adc
pop
sahf
test
or
sub
loope
add
inc
stc
jle
inc
outsl
dec
dec
adc
xchg
xchg
out
out
out
dec
inc
cmp
cltd
mov
jg
xchg
pop
clc
or
ljmp
das
xor
push
and
pop
std
pop
nop
pop
out
shll
sahf
pop
js
push
jnp
pop
sbb
out
add
or
rclb
sub
sub
and
repnz
es
aam
call
or
jo
pusha
mov
dec
not
add
fcoml
sbb
jl
fdivrs
add
mov
jae
mov
adc
fistps
jo
mov
movsb
test
xchg
pushf
adc
mov
mov
stos
push
sbb
pop
js
mov
sub
sbb
inc
aad
sarb
sbb
clc
loop
fcomi
ja
lods
int
pop
xchg
mov
inc
pop
adcl
dec
pop
mov
xorl
mov
rclb
jp
sub
adc
fnsave
inc
ret
mov
out
pop
ret
adc
push
pop
jg
mov
mov
xchg
mov
lock
data16
scas
add
jp
sbb
jl
repnz
mov
jge
xor
dec
cmp
pushf
fcmovbe
fiadds
cwtl
pop
and
enter
xor
aas
cmp
inc
arpl
inc
aaa
xchg
pop
adc
pop
aaa
sbb
inc
sub
pop
xchg
loopne
xchg
lcall
shlb
sbb
test
inc
iret
add
sub
push
or
outsl
mov
pusha
adc
fmulp
mov
or
mov
rcr
mov
add
adc
jb
inc
cli
int3
mov
outsb
pop
pop
lcall
scas
xor
cwtl
xor
iret
cmpsl
jo
mov
loope
or
in
jno
clc
push
sbb
pop
mov
adc
mov
shrb
ljmp
mov
dec
push
push
ret
clc
out
imul
sub
push
out
dec
mov
mov
jnp
test
rolb
mov
or
or
pop
js
pop
shlb
in
or
xor
out
cmpsb
xchg
das
inc
shrb
and
and
scas
fwait
pop
mov
adc
jnp
add
push
adc
outsl
mov
pop
jae
mov
or
xchg
mov
mov
or
and
dec
push
jg
cs
movsl
sbb
dec
insb
test
mov
and
xchg
popa
inc
or
cmp
std
jo
sbbb
sbb
iret
or
add
out
movsl
pop
aaa
imul
sbb
push
push
popf
stos
xchg
adc
cmc
call
nop
bound
imul
nop
rolb
and
int
sbb
mov
sbb
xchg
or
cmpsb
pop
scas
movsb
mov
mov
test
pop
js
sub
push
ret
shr
add
dec
pop
push
dec
insl
mov
and
jmp
sub
ljmpw
mov
mov
inc
sbb
or
mov
jbe
adc
pop
and
xor
mov
enter
lret
cmp
cmpsb
sarl
pusha
lea
cmp
rclb
jno
shl
arpl
bound
out
adc
cmp
das
fstpl
sub
mov
mov
mov
insl
inc
dec
sub
or
cmc
scas
clc
iret
shrb
and
or
push
lea
sbb
or
cmp
dec
mov
jo
rcrl
jne
test
ljmp
call
rcll
add
leave
cmp
mov
push
popa
adc
inc
xchg
sahf
push
loopne
js
inc
or
mov
imul
stc
cli
sub
fcoms
fidivl
mov
push
testb
cmp
dec
or
mov
adc
sub
faddl
sub
insl
xor
mul
ss
dec
mov
pop
push
mov
sbb
aaa
aad
push
push
test
add
mov
icebp
add
jae
aaa
mov
jecxz
jmp
lea
lahf
popf
dec
fnstsw
sbb
jnp
sbb
dec
push
inc
lret
mov
pop
fdecstp
cmp
inc
mov
lea
cwtl
rclb
shl
into
pop
hlt
sahf
nop
lcall
stc
cmp
cmp
std
pop
scas
push
dec
mov
dec
sub
and
into
outsl
add
sbb
jle
pop
push
je
adcl
sub
mov
cs
adc
and
adc
dec
xchg
xchg
mov
imul
int
sub
pop
dec
clc
rol
mov
jns
mov
les
pop
ret
xor
insl
mov
cmpsb
cmp
pop
push
lea
push
mov
pop
push
mov
jne
movsb
pop
iret
movsl
lods
mov
adc
pop
pop
and
add
mov
add
cli
pop
test
ret
aam
pusha
nop
push
rclb
inc
rcl
add
stos
adc
adc
movsb
add
sbb
loopne
in
mov
sbb
sbb
je
cld
aam
sarb
push
sbb
mov
or
sub
lock
mov
fnsave
call
pop
js
mov
aaa
jp
js
nop
add
jno
xor
scas
sarl
pop
pop
daa
je
fldcw
pop
stos
pop
bound
inc
bound
sbb
cmp
inc
sub
sub
sahf
push
cmpsl
push
insb
cmc
cmp
ljmp
sbb
xor
push
mov
mov
aam
push
cmp
outsl
mov
adc
pop
pop
mov
gs
rolb
cmp
xadd
popa
fsts
xorb
sti
mov
sbb
shl
sbb
inc
push
mov
dec
mov
lds
bndldx
push
or
add
or
lock
push
pop
negl
xchg
and
aas
xorl
incl
xor
push
aam
aas
push
mov
sub
push
enter
and
test
ljmp
scas
addr16
insb
jmp
sbb
pusha
bound
xchg
movsb
and
je
mov
mov
add
lea
data16
movsl
mov
jecxz
sbb
fisubrl
ljmp
mov
into
push
jge
mov
lahf
lods
xchg
xor
fcompl
inc
popa
lods
or
fcmovbe
add
bound
ret
pushf
aaa
push
call
cmp
iret
test
push
xlat
ss
cmp
mov
mov
shr
arpl
rcrb
dec
jg
mov
lcall
das
lahf
pop
cmp
leave
dec
add
inc
cmpsl
popf
mov
mov
push
adc
icebp
lahf
test
or
adc
dec
lds
mov
loope
lds
shrl
xor
mov
and
rolb
mov
aaa
inc
or
sbb
imull
or
add
xchg
dec
pop
sbb
sarl
inc
push
fsubrl
xor
ficompl
fsub
jne
clc
mov
xchg
fwait
int3
add
and
adc
push
dec
cmp
inc
mov
pop
jp
mov
aam
mov
push
jp
insl
adc
int
xlat
test
sahf
aaa
sbb
push
pop
jmp
jne
pop
cmc
mov
cmp
pusha
cmp
add
jge
cli
or
push
push
cmc
mov
pop
xchg
pop
mov
mov
and
mov
dec
testb
in
pushf
les
cmp
add
bound
andl
mov
pop
mov
icebp
adc
hlt
les
sbb
rcrb
jp
jecxz
pop
inc
imul
std
jae
loope
loope
jge
cmc
lods
pop
es
lods
dec
adc
aad
ljmp
cmp
mov
fsubl
icebp
pop
ja
mov
ret
inc
ljmp
mov
sub
dec
mov
cld
sbb
mov
push
ret
or
xor
imul
pop
stos
sbb
inc
push
xchg
push
jne
push
fnstcw
push
sub
lret
outsb
cmp
in
jnp
dec
or
sbb
pop
lods
push
in
test
mov
pop
sbb
mov
fcmovbe
or
daa
xor
cwtl
out
pop
test
mov
pop
xchg
and
ret
xlat
add
jg
cld
popa
push
dec
pop
aad
and
sub
add
test
pop
add
es
and
lds
xchg
subb
push
call
and
push
add
into
adc
movsb
mov
push
sti
and
cmp
fsubrl
out
pusha
jp
pusha
fucomi
stos
xor
lods
mov
outsb
push
add
jge
cwtl
lock
adc
pop
mov
adc
sub
and
subb
adc
add
inc
lods
scas
insb
adc
sub
ds
test
sahf
rclb
jo
testl
arpl
fildll
in
push
ret
mov
ljmp
mov
idivb
xor
jnp
push
cltd
icebp
add
mov
test
pop
cmp
dec
pop
mov
adcl
and
adc
jae
aas
and
mov
push
stc
arpl
jae
xchg
lcall
pop
imul
jae
xor
xchg
nop
adc
mov
bound
mov
iret
in
loope
cmpsb
fdivrs
aas
movl
fnop
dec
inc
ljmp
dec
sub
adc
cmp
inc
pop
cmp
movsb
cmp
cmc
push
pop
cmp
aaa
lods
push
rclb
sub
dec
out
mov
jp
leave
jns
iret
repz
clc
mov
mov
jge
adc
jne
xchg
ds
or
fwait
bound
jns
out
push
pop
fmull
jno
or
sub
sbb
push
inc
cmpsl
or
call
mov
loope
sub
sbb
rolb
and
adc
adc
push
or
dec
fidivs
push
out
movsb
adc
je
imul
in
mov
add
lea
push
and
mov
cmpsb
push
cmp
lods
xchg
push
xor
iret
jne
adc
sub
mov
xor
or
cmp
add
lret
jnp
subl
test
xor
pop
jne
popa
das
adc
xlat
sub
push
jmp
movsl
inc
mov
pop
in
lcall
imul
push
jns
jl
and
call
mov
rol
iret
in
cs
add
lret
mov
jo
test
push
sbb
mov
and
add
scas
xchg
inc
adc
fnstcw
pop
repz
xor
andb
xor
ret
insb
xchg
ficompl
nop
fwait
addr16
lods
and
popf
mov
addl
cli
pop
xor
lret
aaa
les
cmp
sub
mov
push
xchg
fiaddl
jae
mov
pusha
pop
adc
imul
xor
and
icebp
test
das
adc
mov
in
imul
mov
pop
loope
imul
add
sub
xor
jge
push
add
mov
add
mov
nop
cmpsb
pop
push
fiaddl
test
sbb
ljmp
jae
xor
jl
popf
sub
pop
test
mov
inc
jnp
cmp
out
mov
pop
adc
imul
adc
xor
push
xor
or
test
ret
mov
lret
xor
or
int3
cmpsb
inc
jge
sub
push
jp
inc
push
xchg
jmp
inc
jae
adc
or
addr16
clc
push
roll
jg
pop
mov
xchg
fcomip
and
into
bt
sbb
mov
outsl
in
and
aad
mov
neg
inc
mov
sbb
test
test
xor
sub
pop
sub
adc
jnp
ja
call
xchg
gs
sbb
ret
fisubl
mov
das
test
jecxz
lock
popf
xor
dec
hlt
dec
mov
mov
cmc
cmp
pop
mov
xor
imul
loope
push
pop
lods
pop
stos
dec
xchg
xor
sub
xchg
xchg
dec
sub
out
or
imul
jo
push
jb
ljmp
outsb
fistl
or
xchg
arpl
lea
mov
loopne
cmpsl
adc
jecxz
repnz
push
call
adc
ffree
mov
jno
in
nop
cwtl
xchg
fsubl
xlat
add
sub
out
xorb
inc
mov
ret
sbbl
mov
fldcw
jae
repz
pusha
adc
repz
test
inc
and
imul
cmc
xor
add
incb
jno
inc
ret
popa
mov
jne
cmp
jp
rorl
adc
jge
xchg
stos
mov
dec
dec
sbb
inc
ja
lcall
addb
sub
mov
add
insl
sbb
mov
mov
jnp
movsl
mov
out
and
push
icebp
mov
pop
and
jns
rcl
mov
mov
adc
lods
rcll
push
inc
lods
xchg
push
das
mov
test
test
roll
outsb
jne
out
fwait
mov
push
mov
push
mov
adc
fwait
sbb
aas
xchg
sub
cli
and
adc
sar
dec
cld
lea
or
push
add
out
and
push
outsl
add
iret
jecxz
sub
jge
dec
fsubrs
daa
aam
sbb
sbb
mov
clc
jg
pop
fdivs
js
ret
out
add
inc
sub
add
cmpsb
ljmp
sbb
cmpsb
xlat
push
add
cltd
jmp
pop
jmp
mov
mov
and
or
incl
mov
js
sbb
je
add
cmpsb
sarl
call
jne
loope
fimull
mov
push
js
das
or
data16
push
inc
sbb
cmp
inc
cmp
jmp
sbb
pop
scas
ja
and
dec
sbb
push
jno
scas
testb
mov
enter
push
stc
jg
fistps
jbe
ret
inc
and
xchg
pop
xchg
xor
sbb
and
and
and
push
and
inc
sbb
add
xor
into
stos
adc
dec
xlat
jl
and
mov
jmp
mov
insl
cmpsb
mov
add
std
mov
lods
sbb
inc
xadd
bound
or
inc
pop
cmpsl
push
fsubs
sahf
pop
cmp
dec
loop
ret
dec
in
xchg
push
cmp
mov
cmp
xor
sbb
out
clc
xchg
jp
test
clc
lock
and
inc
inc
xchg
xchg
es
lock
jle
fmuls
fisubrl
ret
add
mov
out
lcall
ret
out
loop
xor
ss
sbb
push
pop
mov
movsb
fcmovnb
lds
xchg
mov
fwait
xor
movsl
inc
cmpsl
addb
insl
xchg
jne
xchg
xchg
add
arpl
adc
hlt
inc
addl
push
cmp
push
fldl
movl
sub
cwtl
faddl
pop
lods
xchg
sub
push
pop
cwtl
popf
xchg
mov
popf
push
mov
and
jmp
add
aam
aam
adc
test
lret
cld
dec
or
icebp
daa
mov
cmpsl
aas
xchg
and
addr16
shll
cmc
mov
mov
cwtl
fistps
jnp
lcall
pop
into
stos
sahf
pop
adc
add
sub
jecxz
inc
aam
es
sub
gs
cmpsl
arpl
pop
fiadds
sub
daa
dec
or
jns
sar
adc
add
mov
mov
add
testb
cmpl
shrl
ja
in
mov
push
sbb
out
sahf
in
and
mov
mov
test
inc
ja
mov
sarb
data16
dec
or
add
or
mov
sarl
ret
sub
sti
and
insb
sbb
sub
mov
cli
jg
inc
loopne
pop
sbb
mov
and
jo
push
cli
mov
push
xchg
push
data16
and
and
rcr
in
mov
std
xor
sub
mov
push
push
loopne
cmp
sub
jo
ja
xor
clc
fsubrs
cmp
ss
cld
dec
call
fwait
stos
into
icebp
inc
ret
push
call
sub
fisubrl
dec
sub
mov
adcl
pusha
ret
lods
pushf
or
mov
pop
cmp
or
cli
sbb
and
stc
jp
cltd
xchg
movb
sahf
repnz
mov
repnz
mov
lds
add
sub
jo
in
inc
xor
mov
call
scas
cwtl
push
lret
or
jge
mov
fisttps
add
std
or
wrmsr
push
fucomp
adc
out
into
jle
sti
jmp
cld
insb
xor
add
inc
add
fistpll
add
jno
add
dec
inc
movsb
adc
imul
xchg
daa
mov
sbb
adc
leave
sub
and
sbb
clc
or
inc
sbb
adc
je
lret
push
scas
ret
or
nop
ja
push
sbb
adc
sbb
lods
js
shr
sub
xor
mov
ljmp
mov
inc
cwtl
test
xchg
add
ds
outsb
icebp
xor
iret
push
mov
movsl
xchg
in
xor
ja
lock
add
push
mov
mov
cmp
test
daa
out
in
pushl
dec
or
popl
int
popa
pusha
mov
aam
mov
cmpsl
adc
sub
inc
pusha
sub
stos
push
fiadds
outsb
sub
fildl
lods
mov
arpl
mov
popf
aas
fcomip
add
movsl
mov
cmp
in
addr16
ret
mov
leave
clc
push
adc
xor
mov
cmpl
ss
pusha
fsubs
xchg
loopne
dec
das
iret
pop
aaa
mov
lea
ja
subl
jae
outsl
cmp
jno
mov
sbb
dec
mov
jno
push
xchg
xchg
mov
cli
out
hlt
adc
popa
jbe
xchg
sbb
xchg
daa
shll
icebp
movsl
mov
push
rcl
or
pop
or
test
lods
push
dec
loopne
xor
ss
test
iret
jmp
loope
stos
lock
or
loop
jle
mov
xchg
push
loope
fbld
enter
add
std
sub
cmp
xor
lcall
out
aaa
mulb
lock
std
cmp
test
mov
icebp
xor
and
mov
rolb
mov
push
loop
cmpsb
mov
aad
and
filds
shrl
out
pop
mulb
dec
xor
test
in
inc
lds
fwait
xor
stos
mov
add
push
pop
fcomp
ja
xchg
add
ss
pop
and
jne
push
aad
fisttps
and
bound
push
xor
or
cmp
fs
inc
movsb
xor
sbb
and
or
or
dec
les
mov
jl
push
and
cmp
aam
push
pop
push
test
ret
xchg
mov
data16
jbe
inc
movsb
pusha
sub
loope
js
loopne
ret
and
add
and
pop
jle
mov
sbbl
jg
std
or
rolb
pop
cmc
add
mov
xor
xor
jno
jmp
cmc
or
clc
sbb
aam
sbb
nop
dec
test
and
leave
dec
dec
push
lods
mov
xor
push
mov
clc
outsb
mov
call
inc
loop
es
mov
inc
insl
or
cmpsb
testl
mov
gs
rolb
sbb
shr
xor
mov
in
sbb
xchg
or
jg
adc
addl
mov
mov
shlb
ret
push
jecxz
pop
movl
add
lret
pop
mov
push
in
mov
ds
nop
mov
and
les
sub
lods
mov
add
test
js
out
mov
mov
sti
scas
les
push
xchg
cwtl
inc
into
imul
insl
mov
pop
test
adc
adc
pop
inc
mov
mov
or
rolb
decb
incb
loope
mov
pop
repz
mov
inc
pop
das
mov
clc
and
ret
sbb
push
dec
mov
hlt
scas
ss
fistps
jg
adcb
es
gs
cltd
lock
stos
pop
add
jl
js
mov
ljmp
ret
inc
ja
scas
or
outsl
cld
cmp
dec
add
pop
iret
dec
nop
mull
loopne
sub
sbb
jo
pusha
push
shlb
clc
outsb
mov
and
dec
mov
movsb
sub
mov
ret
add
sub
or
daa
dec
or
pop
iret
jg
sub
mov
push
out
call
ljmp
and
cld
jbe
dec
es
add
test
jp
xchg
xchg
adc
mov
push
cld
shll
xchg
jmp
into
ss
popf
sbb
loopne
mov
or
sub
fs
lock
pop
adcb
push
cld
sub
pop
dec
xchg
mov
pop
mov
int
subb
inc
push
sub
mov
dec
dec
xchg
xchg
fnsave
dec
push
ljmp
inc
pop
ljmp
or
cli
pop
in
popf
push
xchg
test
inc
mov
insb
add
push
sub
inc
mov
lret
negb
pop
and
mov
xchg
sbb
add
jmp
leave
movsl
mov
lret
mov
jecxz
in
pop
and
pop
inc
lahf
add
movsl
loope
adc
jle
inc
cmp
fbld
adc
rclb
pop
loop
mov
adc
xor
mov
je
xor
std
or
add
rorl
loop
pushf
push
sub
jno
aas
cmpsb
cmp
jge
enter
dec
sbb
cmp
iret
insl
sbb
mov
dec
mov
xchg
mov
lds
aam
fisubrl
fs
mov
inc
pop
pop
fadd
lds
mov
movsl
mov
inc
mov
push
xor
sub
xchg
push
pop
adc
sbb
dec
ss
les
ss
ficompl
or
mov
dec
hlt
mov
jge
mov
ljmp
fcmovne
arpl
add
or
fcmovnbe
orb
cwtl
cmp
push
mov
add
mov
lcall
gs
push
sbb
adcb
ret
mov
lea
inc
inc
lret
inc
test
loope
or
call
pop
sub
cmp
jb
insb
rcl
cmp
aaa
scas
cmc
adc
data16
loope
mov
pop
sub
push
sbb
faddl
mov
add
and
shll
mov
xchg
dec
push
hlt
aaa
jecxz
loop
pushf
mov
inc
cmc
call
mov
in
push
cwtl
bound
mov
lret
sub
jle
xor
lea
dec
call
addl
add
orb
mov
popa
test
les
add
add
mov
adc
xor
imul
adc
loope
into
loopne
mul
les
bound
push
imul
rorl
adc
lods
sbb
bound
enter
add
bound
mov
ljmp
mov
mov
and
ds
insl
sahf
pop
push
xchg
mov
sti
lds
jle
sub
adc
hlt
add
add
push
leave
xchg
mov
pusha
ljmp
sbb
mov
div
add
inc
cmpl
out
mov
jmp
dec
mov
or
test
leave
in
stc
cmp
sub
cmpsb
dec
shl
cltd
loop
mov
jg
mov
cld
andb
sbb
les
pop
adc
movntq
loope
inc
cmp
sbb
jp
add
int3
imul
push
mov
or
mov
sbb
popf
or
aaa
jo
test
mov
mov
orl
sbb
xchg
push
movsb
cs
add
scas
jp
push
ret
or
lahf
pushf
clc
dec
out
stos
int
fisttps
jo
test
fiadds
mov
xor
mov
or
dec
or
xchg
sub
xchg
cmc
jecxz
add
pop
mov
add
rorl
push
mov
pusha
insb
mov
movsl
mov
fdivr
cmp
incl
sbb
cwtl
mov
popa
sbb
pop
sbb
add
movsl
ficompl
jo
fwait
add
cmpsb
hlt
popf
fadds
lds
sub
mov
mov
mov
shl
arpl
xor
mov
sub
xchg
pop
imul
in
jp
add
pop
pop
popa
or
push
or
pop
push
aaa
cmp
lods
jmp
je
mov
lret
sbb
cmpsl
pop
sarb
or
mov
insb
add
cmp
add
dec
jp
shlb
scas
arpl
lea
sbb
mov
daa
and
sub
popf
movsb
bnd
jno
das
pmulhuw
lods
movzwl
jecxz
jp
mov
add
mov
rol
pop
cmpsb
or
pop
pusha
xchg
enter
add
insb
subb
aad
bound
add
adc
fistpll
jb
inc
and
enter
into
add
loopne
arpl
test
nop
enter
mov
mov
cld
add
fisubs
daa
insl
lahf
movb
mov
lcall
cwtl
sahf
test
ret
test
push
add
mov
clc
nop
jl
mov
inc
out
adc
fisttps
lods
mov
cs
enter
cld
jmp
fldl
les
cmc
pop
inc
std
xor
lea
sbb
fs
or
mov
js
mov
aad
sbb
dec
dec
xlat
inc
adc
add
faddl
enter
iret
mov
scas
or
inc
and
dec
dec
mov
int
test
cmpsb
int3
insb
sub
push
test
push
adc
outsl
mov
jl
mov
adc
stos
pop
push
das
lret
adc
and
jnp
pop
inc
in
mov
lret
fcomp
std
mov
mov
mov
fwait
jle
loopne
add
push
inc
ret
jnp
pop
cmpsb
loop
push
xchg
shl
cmpl
lret
aaa
push
cmp
cmc
xchg
inc
aaa
rolb
outsb
dec
fwait
std
rorl
jl
fwait
add
add
add
push
out
push
fisubrl
and
push
or
dec
inc
pop
mov
and
mov
fcoms
xor
jge
sahf
fcmove
cmp
mov
loopne
scas
mov
mov
or
clc
inc
xor
lods
fwait
ljmp
push
mov
dec
push
dec
pop
xor
jo
fs
sub
jo
xor
and
push
stos
and
adc
rclb
orb
cwtl
fsubrs
into
subb
inc
mov
cmpb
xor
push
adc
mov
clc
fbstp
push
clc
clc
imul
mov
lock
cld
sub
cmp
xchg
sbb
test
jne
push
add
pop
pop
decl
inc
xor
popf
cmp
fstl
lock
dec
divb
dec
sbb
xor
cmp
ja
out
insl
fwait
lea
out
pop
and
push
pop
lock
fisubs
push
sbb
jb
jo
sahf
adc
pusha
mov
leave
jo
mov
mov
jp
xor
sub
mov
mov
cs
or
mov
out
or
inc
cmp
and
inc
mov
das
lcall
ja
mov
subl
dec
xor
in
data16
fs
pop
rorb
pop
jmp
xchg
aad
mov
mov
mov
loopne
std
adc
rcrl
or
andb
push
movsl
ss
rorb
lret
daa
fmull
insb
loopne
mov
xor
dec
mov
rolb
pop
jo
cld
mov
adc
out
jne
dec
mov
push
xchg
test
aas
ret
sbbb
stos
mov
mov
or
inc
xchg
pop
inc
test
push
pop
lock
ret
pop
dec
fsubs
mov
imul
push
rclb
test
inc
test
jo
loope
pop
fisubrs
xchg
icebp
inc
loopne
push
jb
add
dec
cmp
in
jmp
clc
test
sbbb
sub
jnp
loop
inc
lcall
loope
pop
icebp
inc
or
cmpsl
adc
sub
lods
or
mov
cmp
stos
roll
or
pop
jnp
jp
mov
add
lret
loopne
clc
mov
ss
mov
inc
les
aam
jae
lds
push
dec
movsb
sub
dec
cmp
xchg
mov
icebp
iret
jb
push
adc
jp
adc
sub
shr
int
sbb
xchg
cmpl
nop
or
clc
out
fsubrp
push
insl
out
add
xchg
xchg
orl
movsl
je
js
fcompl
push
hlt
pop
bound
loope
and
mov
jg
stos
pop
push
push
sbb
test
xchg
inc
or
call
pop
adc
and
mov
or
inc
call
out
notb
mov
pop
push
cmpsb
xchg
movsb
sbbl
xchg
cld
push
scas
les
xor
jmp
xor
testb
dec
repnz
aam
mov
pop
sti
push
iret
or
ljmp
push
ss
mov
dec
les
push
ret
scas
sbb
ret
sbbb
es
inc
cld
adc
bound
ss
inc
cmp
inc
out
fimuls
fisubl
add
and
or
and
or
xchg
aam
jge
cmp
push
cmpb
jb
jl
lods
xchg
cmp
and
mov
rorb
fistpl
daa
adc
dec
adc
inc
sbbb
sbb
xchg
into
xor
stc
or
daa
test
or
mov
test
pop
inc
adc
subb
aas
push
push
push
xor
lret
sbb
icebp
es
mov
lret
mov
sti
outsl
mov
sub
int
mov
cmp
fsubl
pop
and
push
nop
loop
jg
jno
sub
pop
loope
push
sbb
xchg
adc
add
fisttps
mov
sbb
or
movsb
add
int
cmp
fistpl
or
dec
xchg
insb
or
xchg
xor
mov
fildl
and
lret
push
lods
or
std
icebp
enter
and
fcmovnb
mov
mov
add
xchg
insb
sub
adc
add
xchg
ljmp
insb
pop
adc
shlb
imul
imul
in
loop
loope
lock
dec
cmp
bound
cmp
scas
aam
jo
lods
xor
jle
ja
mov
mov
mov
out
enter
cmp
or
imul
xchg
movsl
inc
sahf
inc
stos
jo
sbb
sbb
pusha
mov
divb
clc
sub
sti
push
sahf
leave
adcb
jmp
xor
sarb
fimull
fildll
fmuls
jl
ljmp
adc
push
shlb
pop
jg
stos
stos
hlt
mov
inc
xchg
flds
out
rolb
out
sbb
pop
movsb
ss
repnz
ret
jle
push
xor
sub
popf
xor
fwait
jo
sbb
in
leave
aas
push
jmp
hlt
and
cmpsb
push
stos
mov
aam
aas
pop
pushf
adc
sbbb
jle
lock
mov
inc
sub
inc
mov
inc
std
stos
sahf
xchg
mov
mov
mov
sub
cmpsl
fisttpll
cmp
jo
leave
sbb
pop
insl
jbe
push
lock
jmp
sub
ljmp
aaa
movsb
ds
pop
push
ja
xchg
lcall
aas
pop
jo
scas
mov
loopne
jo
and
call
movsl
sub
sbb
cmc
clc
adc
f2xm1
mov
cmp
push
xchg
clc
pop
fnstsw
sub
stos
and
ret
xor
mulb
loop
pop
xchg
or
pop
jo
les
cmp
mov
ds
push
cmpsb
shll
inc
dec
inc
aas
fdivl
out
push
adc
mov
addr16
test
arpl
and
cld
and
mov
pop
inc
sti
lods
loopne
xchg
je
lods
lods
rcll
mov
cs
jle
and
enter
adc
sbb
ret
shlb
adc
sbb
sub
testb
movsb
push
push
adc
or
xchg
cmc
das
lods
shll
rcl
xor
aaa
sub
insl
pop
call
jno
fcoms
and
pop
sub
mov
mov
sti
cmc
mov
cld
adc
in
out
sub
cmp
dec
clc
cmp
divb
jg,pt
scas
clc
dec
addl
test
call
sahf
mov
inc
arpl
sbb
push
test
xor
xchg
or
mov
subl
sbb
movsl
out
xchg
test
push
ljmp
popf
cmc
inc
adc
push
hlt
ss
lcall
mov
leave
ja
dec
dec
push
outsb
aas
mov
add
scas
or
test
mov
pop
jno
fsubrs
mov
rolb
dec
sarl
lahf
pusha
add
push
test
add
xor
sub
das
addr16
pop
popa
shll
xchg
fcompl
push
jnp
cmovg
pop
jle
jae
and
cmp
fwait
aad
sbb
cmp
ret
hlt
xor
pop
mov
es
xchg
mov
scas
mov
cmp
adcb
push
nop
cmp
jmp
mov
pop
push
adc
pushf
cmp
rorb
pop
sbb
push
sbb
popa
push
jbe
push
loopne
adc
xor
pop
iret
jp
pop
into
sbbb
sti
dec
xor
cwtl
lret
or
mov
cmp
pop
or
cli
daa
sbb
enter
ja
pop
es
lods
aas
clc
add
pop
pop
add
add
xlat
pop
sbb
loop
mov
sbb
mov
fadds
cmp
push
icebp
sub
inc
rclb
or
push
push
sbb
xchg
jno,pn
sbb
pop
or
mov
lahf
push
test
xchg
sbb
gs
cmp
push
add
or
xchg
jne
add
and
cli
or
adc
int
fs
inc
or
dec
loope
sub
clc
out
sbb
cmp
push
test
push
jmp
dec
jecxz
addl
and
cmpb
out
push
rcrb
imul
ret
add
mov
and
add
mov
sbb
inc
aad
in
dec
sbb
addl
push
mov
jp
mov
xor
mov
daa
test
ja
jmp
sub
or
mov
push
xchg
jp
jo
lock
je
inc
jo
add
add
sbb
xor
test
sbb
push
test
inc
js
fsts
dec
mov
inc
pop
xchg
ret
pusha
ror
int3
into
inc
cld
cmpb
xor
int3
in
or
mov
push
dec
daa
ljmp
and
enter
jo
sub
sub
inc
inc
es
orb
int3
or
movsl
push
pop
imul
inc
aas
inc
jmp
ret
repz
std
cltd
xor
gs
add
push
mov
loop
shrl
ret
nop
inc
sbb
pop
mov
mov
subb
pop
pop
cmpsb
sarb
inc
fisubl
jp
out
mov
dec
test
cmpsb
or
jle
sarl
sub
cmc
test
pop
fldl
rcrb
cmc
push
mov
mov
cld
push
in
aas
std
jle
imul
mov
xchg
movsb
jg
scas
mov
sbb
jno
inc
sbb
or
ss
test
jle
stos
mov
and
imul
mov
pop
adc
or
cs
subl
lret
jo
cmp
inc
cmpsl
inc
enter
out
rolb
sub
aad
dec
push
les
ds
enter
fcomps
cmp
stc
mov
pop
xlat
add
pop
fdivs
xchg
movsb
inc
xchg
mov
adc
test
xorb
iret
or
mov
mov
add
es
ja
data16
out
scas
and
add
data16
loopne
andb
cmp
repnz
movsl
inc
push
je
daa
jno
dec
icebp
roll
stos
scas
inc
ja
cmpsb
add
ja
rorl
mov
lods
xor
test
lahf
jno
pop
movsl
add
dec
popa
push
icebp
cmp
adcl
insl
cmp
ljmp
inc
pop
enter
sbb
dec
add
filds
xorb
clc
fistl
call
xchg
loopne
insb
btcl
fbstp
or
cmpsb
aad
cltd
or
cmp
sub
inc
sti
pop
das
fdivs
cs
jge
test
dec
fs
sti
adc
mov
and
sbbb
loopne
mov
shl
std
jl
jecxz
negb
es
stos
xor
or
fcoml
and
cmp
or
sbb
test
mov
push
add
push
scas
fildl
enter
dec
cld
inc
inc
inc
pop
jecxz
js
inc
rcrb
cmp
lds
and
mov
jb
pop
mov
xchg
aaa
cmc
addl
loopne
nop
aam
mov
mov
fdivr
and
push
push
pop
lcall
xchg
sbb
sub
fdiv
add
cmc
mov
and
jle
push
loopne
stos
mov
add
add
inc
or
lret
outsl
xchg
cwtl
push
lds
jl
mov
inc
adcb
dec
pusha
add
data16
cwtl
inc
or
xchg
pop
pop
call
dec
std
loope
mov
push
outsb
mov
and
cmp
shrl
mov
enter
cmp
mov
jle
movl
int3
fimuls
pop
andl
inc
mov
jecxz
bnd
and
fsub
sbb
cmp
pop
adc
inc
js
punpckhbw
mov
lock
fsub
xchg
add
sub
add
pop
fidivl
lods
cmp
dec
enter
test
mov
sbb
cmp
movsb
repnz
inc
fsts
cld
jnp
dec
xor
cmpsl
cmp
dec
fmull
pusha
lret
das
das
inc
jg
sub
mov
xor
clc
imul
inc
aad
inc
and
and
and
push
call
fcomp
sbb
into
cli
lea
push
adc
out
push
les
and
jno
test
test
adc
std
arpl
add
jecxz
pop
cmp
or
enter
ja
loope
add
add
lock
sbb
lret
sbb
ljmp
cli
aas
lea
dec
adcl
mov
aaa
fdivp
cmp
sub
incl
mov
fwait
mov
icebp
ljmp
scas
xor
out
call
movb
sbbl
push
push
push
aad
shll
imul
icebp
rcrl
mov
inc
shufps
sub
dec
mov
lds
shrb
ljmp
adc
or
dec
cmp
add
dec
pop
push
jmp
jle
scas
lock
insl
push
xchg
lods
xor
cwtl
cwtl
shr
adc
sti
dec
loope
mov
adc
lock
xor
shrb
loopne
cli
mov
cs
push
outsl
and
mov
xchg
clc
add
rolb
pop
xlat
in
ds
or
ljmp
inc
lods
scas
aas
add
dec
jmp
insl
adc
or
je
sub
push
xor
sbb
jl
sbb
inc
mov
or
inc
sub
loopne
sub
add
jmp
xor
and
jmp
and
adc
fldcw
xor
or
jae
dec
test
adc
mov
jg
or
mov
sub
jo
and
push
jae
sbb
dec
mov
jmp
sub
pop
jle
pop
clc
fsts
jo
and
or
sbb
mov
pop
es
jno
add
fsubr
push
mov
mov
cltd
mov
ret
pop
std
loopne
mov
daa
inc
ss
jno
cmpsb
cmp
xchg
add
and
clc
add
roll
mov
loop
test
mov
seto
aas
push
push
mov
pushf
sbb
pop
cli
push
pop
es
and
out
ror
or
fsubrl
std
add
lds
adc
negb
movsl
mov
xlat
dec
scas
imul
ss
or
mov
aad
fcoms
pop
out
mov
mov
in
shlb
mov
add
ret
sbb
loop
mov
pop
je
push
push
add
mov
cmc
insl
stos
push
pusha
sub
inc
sub
fldt
loope
lahf
or
sub
pop
jl
gs
outsb
stc
scas
popa
xchg
cmpsl
add
aam
jp
sub
xchg
cli
jmp
dec
add
add
push
bound
jbe
clc
push
jge
into
in
rorb
inc
pushf
cmpsb
or
divb
jle
arpl
out
or
mov
mov
aaa
das
fdivrl
enter
pop
fisttpll
mull
ds
cmpsl
cmc
pop
insb
movsl
pop
es
or
ljmp
test
jg
test
sti
push
addb
movaps
loop
mov
xchg
repnz
inc
test
icebp
jmp
adcl
clc
xchg
jne
lock
inc
aam
add
mov
jmp
clc
mov
sub
adc
sarb
pop
xor
popf
push
xchg
pop
icebp
testb
dec
adc
lods
add
in
outsb
icebp
mov
int3
shrb
roll
push
hlt
jg
in
xor
sbb
pop
int3
loope
movsb
add
pop
pusha
adc
out
adc
cmp
push
rcll
xchg
push
sahf
push
add
enter
add
inc
adc
and
mov
ffree
sti
and
rcrl
add
dec
aaa
add
popa
jmp
inc
bound
loop
ljmp
lret
lds
push
mov
jb
std
mov
aam
dec
es
int
mov
into
jns
pop
enter
cli
sbb
xchg
mov
fists
jle
in
mov
rcrl
orl
pop
mov
push
or
xchg
fldenv
insl
and
fisubrl
xchg
pop
ljmp
test
inc
mov
addr16
mov
jp
mov
in
mov
jle
aaa
fs
clc
pushf
mov
jecxz
int
fdivl
jno
adc
shrb
jmp
adc
mov
pop
xchg
int
rolb
mov
sbb
sbb
or
mov
mov
mov
lock
scas
mov
out
and
dec
and
cli
sbb
jb
mov
mov
lcall
pop
or
push
testb
and
lea
push
dec
dec
xchg
dec
pop
push
pop
adc
jecxz
dec
xor
in
movsb
dec
sbb
mov
add
adc
ret
xor
add
cld
addb
jge
les
cmp
inc
adc
jno
sub
pop
hlt
pop
fstps
lods
ljmp
jae
dec
mov
popa
movl
pop
add
push
push
cmp
or
cmp
sbb
ljmp
mov
lock
mov
popf
pop
ret
in
xchg
fiaddl
and
mov
sub
or
movsl
test
ds
pop
aas
add
stc
int3
pop
sarb
and
call
sbb
xor
mov
dec
cltd
es
repnz
jg
xor
cltd
call
popl
and
inc
sahf
stos
pusha
rcrl
pop
xor
push
mov
cmp
sbb
out
and
sarb
push
mov
rclb
ror
clc
out
js
fisttpl
xchg
dec
cld
mov
pop
add
adc
sub
js
jl
in
add
cmp
in
jl
into
mov
fildll
loop
clc
clc
mov
jo
push
test
sarb
mov
int
or
dec
je
pop
sbb
xchg
inc
aam
rcll
push
imul
push
xchg
sub
pop
dec
popa
add
testb
das
addb
inc
subl
clc
imul
mov
gs
rcr
ja
fs
lock
push
mov
clc
cli
mov
xor
hlt
inc
clc
push
or
push
xchg
bound
inc
das
mov
sub
std
sub
mov
xor
jo
jns
sbb
or
jne
lcall
ret
sbb
dec
pop
xchg
popa
fldcw
pop
add
jo
add
mov
lods
lret
adcb
fists
lahf
push
and
xor
mov
add
and
sub
adc
aad
push
sub
bound
clc
push
or
adcb
fbld
cli
in
std
pop
out
movsl
in
fbld
test
sarb
cmp
mov
jne
loopne
arpl
cli
inc
push
pushw
pop
mov
fwait
lock
sbb
sbbb
and
push
add
cmpsb
jmp
or
shl
rorb
dec
clc
push
in
popa
test
lahf
push
iret
fildl
jp
mov
push
mov
xor
pop
fwait
pop
sbb
mov
mov
rcrl
pop
gs
test
rorb
test
decb
jle
or
fldt
repnz
popf
mov
sahf
stos
mov
ljmp
jle
or
xchg
jle
stos
loop
aam
clc
hlt
bound
pop
popa
cmpsb
leave
add
cmp
or
sub
mov
adc
add
sub
dec
ja
test
xchg
push
je
ret
add
dec
inc
jo
in
fs
jmp
sub
fs
mov
and
cld
dec
adc
mov
sub
sbb
movsb
in
jmp
lock
mov
incl
gs
xchg
in
shlb
xchg
aad
jno
push
mov
ret
je
aaa
sbbb
cmp
mov
inc
int
mov
adc
inc
xor
fildll
test
push
mov
pop
shl
enter
hlt
adc
inc
repnz
jae
add
cmc
and
sahf
sti
adc
sub
decl
clc
xchg
push
or
push
and
bound
mov
xchg
mov
stos
jne
shll
mov
pushf
mov
pop
pop
arpl
xchg
cs
pusha
loope
in
mov
ficomps
mov
cmpl
sbb
call
insl
jbe
sub
scas
jo
cli
jle
mov
xor
ret
clc
cmp
stc
scas
fstl
dec
es
into
cmpsb
jae
sahf
mov
sub
rclb
and
test
jmp
push
scas
movsb
jl
sahf
out
sarl
add
and
and
fs
and
adc
loopne
aaa
pushf
aam
and
xchg
ss
outsl
sbb
loope
adc
and
pop
scas
js
insb
mov
fs
pop
mov
cltd
xchg
clc
scas
incl
insl
lahf
sub
xor
add
cld
and
cli
js
xchg
inc
and
lock
ret
xchg
je
or
ja
or
jb
pop
lret
das
mov
push
push
ret
jo
leave
push
cmp
mov
cli
and
push
add
xlat
push
aas
pop
or
pop
inc
mov
test
push
nop
adc
and
or
cmpsb
ss
xor
sub
adc
cli
dec
mov
and
add
mov
push
pop
idivb
pusha
xchg
incb
sub
hlt
lds
or
je
jg
aad
xor
loope
pop
fistpll
jmp
les
jecxz
iret
das
clc
je
inc
mov
add
cmp
add
sbb
xlat
sbb
aas
lods
das
dec
test
pop
stos
push
aaa
pop
or
mov
cmp
scas
ljmp
lret
mov
dec
jne
adc
ss
icebp
or
sarb
data16
shlb
mov
mov
inc
test
cmpsb
mov
add
adc
or
sbb
jns
fs
lock
push
outsb
sbb
js
rolb
xor
sahf
lds
repz
sbb
cmc
dec
add
sub
or
mov
or
test
roll
lods
fidivrl
or
jmp
push
stos
in
add
loope
or
pushf
jnp
cmp
pop
punpcklbw
pop
cli
stos
push
lock
mov
cmp
test
push
hlt
jbe
call
push
popf
or
inc
adc
and
lret
ds
mov
sbb
push
adc
repz
mov
lret
jb
js
cmp
pop
push
insb
outsl
jp
push
add
fbstp
test
or
inc
or
ret
pop
sbb
and
sbb
inc
push
sbb
push
mov
sub
lds
popa
push
xor
cs
mov
adc
sub
sbb
jg
clc
jg
lret
int
pop
mov
cmp
ljmp
or
lcall
rcrl
lcall
sbb
inc
aaa
icebp
cmp
sbb
push
rcl
outsl
lcall
roll
or
pop
cs
ljmp
ljmp
notl
lods
push
mov
jecxz
and
cmc
pop
and
dec
icebp
add
aaa
and
repnz
je
mov
das
mov
fs
cwtl
leave
jg
mov
daa
clc
inc
cmp
inc
xchg
xorb
push
lcall
push
inc
sub
dec
test
call
or
lcall
aam
mov
pop
prefetch
test
push
mov
mov
mov
nop
jb
xor
jg
mov
test
jge
adc
adc
repnz
or
fadds
std
lock
xor
js
xchg
ds
test
mov
inc
mov
jmp
cmp
shlb
adc
xchg
les
hlt
lea
xchg
push
cmp
mov
test
jl
ljmp
cmp
dec
mov
mov
cmp
jge
test
adc
push
sbb
add
outsb
hlt
sti
mov
dec
fsubr
test
mov
enter
lds
add
sarb
jmp
xor
loop
je
sahf
jns
add
adc
fildl
mov
xor
pusha
or
fistl
mov
pop
inc
loope
lret
cmpsb
fldenv
cmp
aas
dec
sbb
inc
mov
dec
sub
push
dec
movsb
outsl
fcomps
inc
into
cli
in
addr16
idiv
je
lods
mov
clc
xor
sti
push
test
sub
lds
pop
addr16
sbb
inc
imull
inc
add
and
push
sbb
cltd
jg
jo
dec
sub
xchg
js
ljmp
js
jle
loopne
js
mov
fistpl
aas
popa
sahf
push
sbb
push
push
and
sti
nop
mov
jbe
mov
ds
loopne
sub
and
cmpl
jp
test
push
icebp
mov
and
lret
dec
jmp
loop
add
and
outsl
loope
loop
scas
and
ljmp
sub
mov
testb
xor
pop
sti
push
aaa
push
xchg
jbe
sahf
sbb
cmp
and
xor
and
mov
cmp
mov
into
sarl
cmp
dec
into
mov
sub
stos
arpl
mov
fcoml
dec
mov
test
mov
mov
mov
cmp
or
hlt
scas
je
insb
inc
mov
xchg
dec
leave
test
mov
xor
add
pop
je
jb
test
ret
or
push
xor
inc
cmp
inc
mov
or
out
jle
ret
out
adc
pop
sbbl
int3
dec
jp
cwtl
cs
adc
fisubl
call
rorl
xchg
daa
mov
sub
nop
movb
xchg
test
push
dec
or
sbb
test
insb
sbb
pop
out
daa
mov
mov
hlt
aas
xlat
push
pop
adc
jle
arpl
cltd
mov
incl
in
shl
lock
sub
sbb
call
add
movsb
subb
in
dec
mov
mov
pop
jne
inc
out
mov
imul
in
xor
fwait
out
add
inc
mov
insb
cltd
call
xor
and
adc
jne
sbb
push
adc
stos
and
jle
jne
mov
std
xchg
push
add
ficoml
and
jl
movsl
adc
mov
enter
xor
mov
dec
ficomps
jo
mov
dec
nop
pushf
jp
jbe
call
sub
stos
mov
mov
decb
xchg
les
adc
ljmp
incl
popl
mov
mov
push
jne
lret
fcmovu
mov
aad
ret
je
add
call
cmp
push
loope
rcrb
cmp
push
out
or
jne
js
mov
fcmovbe
mov
sbb
or
jns
jns
notl
loope
std
imul
sub
mov
iret
lock
sbb
js,pn
jle
pusha
and
lcall
push
cmp
dec
leave
add
lret
hlt
movsb
ret
push
js
sahf
icebp
frstor
movsl
shl
jg
cmp
prefetchnta
push
ljmp
ljmp
rorl
xor
or
daa
xor
cmp
adc
adc
js
mov
sbb
add
dec
shlb
or
icebp
xor
jbe
loope
inc
jb
cli
aad
and
jmp
fldt
out
and
cli
roll
mov
out
or
sbbl
or
stc
dec
fsubrl
das
xchg
sbb
push
movsl
jp
fistl
data16
clc
mov
decl
xchg
out
shlb
test
push
or
lds
cmp
xchg
test
enter
mov
scas
jle
test
xlat
test
hlt
inc
mov
jl
add
aas
push
jl
push
movsl
push
movsb
ret
lock
dec
pop
dec
inc
dec
pop
stos
pop
dec
or
shl
xor
cs
mov
test
aad
push
xor
cmpsb
jns
inc
out
xor
imul
inc
int
or
xchg
or
push
pop
push
sub
push
mov
imul
pop
cmpsl
and
cmc
out
push
add
mov
jnp
test
mov
test
mov
push
inc
xchg
mov
sbb
cmp
dec
push
add
cli
inc
sbb
add
ss
sbb
aam
jge
jecxz
subl
lock
orb
pop
add
xchg
mov
das
pop
inc
js
loopne
gs
sbb
push
sbb
insb
push
xor
pop
mov
movsb
movzwl
adc
or
adcb
pop
iret
loope
gs
cli
sbb
xlat
dec
push
in
pushl
xchg
mov
jmp
in
pop
xchg
out
cmp
sti
mov
xchg
lock
mov
mov
dec
xchg
jns
loop
jl
orl
and
jle
mov
and
test
ljmp
out
testb
out
add
pop
outsb
xchg
js
data16
test
imul
and
add
sub
clc
inc
add
lods
sub
lods
xchg
clc
xor
paddsb
jl
lods
dec
mov
adc
mov
mov
sub
jp
aaa
loopne
bound
pop
push
xchg
imul
popa
add
adc
outsb
push
push
mov
lar
test
mov
cld
cmpsb
xchg
inc
ret
pop
test
pusha
fwait
je
pop
mov
ljmp
je
and
insl
xchg
aam
fsubp
inc
inc
push
out
std
cmp
inc
pop
or
xchg
mov
or
std
adc
adc
sub
add
dec
cmp
mov
out
jge
cs
jmp
xchg
lahf
jmp
aad
sahf
cmpsl
cmp
insl
int
mov
loop
push
jmp
bound
pop
add
iret
sub
vmovhps
data16
div
aas
sbb
out
jge
outsl
sbb
inc
adc
sbb
cmp
sbb
push
push
push
roll
out
imull
mov
sahf
dec
in
andl
mov
pop
dec
push
pop
out
cltd
inc
push
jo
ljmp
jmp
stos
and
cmp
pop
mov
mov
hlt
push
enter
std
pop
sti
mov
mov
jmp
lock
sbb
push
fsubs
enter
dec
loopne
mov
push
mov
or
test
or
sti
xor
lahf
addb
stos
sub
enter
push
mov
fsubs
jp
repz
loope
hlt
test
ds
pop
adc
mov
mov
or
mov
stos
jne
mov
js
or
sarb
pop
aas
stc
pop
test
mov
pusha
outsb
push
cs
push
push
loope
test
xor
mov
ds
notb
idivl
push
test
xor
popl
mov
inc
and
in
fwait
mov
lahf
sbb
test
xchg
mov
mov
cltd
fadd
lods
bound
mov
fs
xor
jmp
sarb
and
loope
sahf
pop
xchg
xchg
or
and
out
in
les
jmp
das
xchg
sub
loopne
imul
lcall
subl
andl
push
lcall
push
add
pop
out
mov
arpl
push
cmp
cmpsb
aas
xor
aam
or
popf
dec
dec
mov
pop
in
test
bnd
fsubl
and
dec
adc
lcall
in
push
loop
pop
pop
mov
loopne
sub
js
test
scas
cs
in
cmpsl
add
clc
fdivl
mov
xchg
ja
in
clc
jae
cmpsb
add
aaa
outsl
jge
shl
outsl
inc
movsl
add
mov
push
js
shl
lcall
dec
in
jne
cmp
out
fdiv
add
repz
js
xchg
pop
js
mov
hlt
xchg
lds
lock
push
push
movsb
dec
inc
push
movsl
dec
cld
sub
or
mov
pop
push
out
cmp
pop
cli
mov
jne
sbb
cmp
sbb
pop
push
cmc
das
or
add
or
inc
in
push
and
aam
jge
in
cmpsb
mov
stos
aam
scas
inc
fld
cmpsb
mov
cmpsl
das
push
pushf
inc
test
mov
mov
sub
pop
pusha
add
or
jo
adc
popa
xlat
sbb
inc
subb
fidivrl
jp
add
add
xchg
pop
lock
add
test
adc
shrb
jae
push
push
xor
mov
mov
pop
sub
jmp
cmc
fwait
xor
js
and
sbb
enter
jp
xlat
push
outsb
push
cmp
aam
ss
cmpsl
xlat
clc
and
jmp
sbb
add
fsubrp
lea
rcll
out
dec
jg
adc
lcall
push
cwtl
inc
clc
iret
and
xchg
adcl
mov
in
sbb
pusha
pusha
pushf
mov
dec
inc
jb
pusha
or
dec
mov
add
xor
mov
pop
xor
imul
popf
pop
jmp
js
pusha
inc
or
sbb
sbb
or
pop
test
or
test
add
call
pop
mov
jbe
andb
xor
outsl
cs
fisttpl
pop
mov
insl
jl
mov
xchg
inc
loop
js
movups
cs
sbb
sbb
dec
push
add
ss
popa
lds
push
mov
dec
or
lock
add
fiaddl
rorb
insb
cmp
adc
xor
fiadds
dec
and
mov
mov
ds
aam
sahf
adc
adc
or
aam
xchg
cli
xchg
xor
or
imul
mov
push
xor
mov
add
push
sub
addr16
xlat
rorb
jo
mov
aas
sub
mov
push
mov
push
xchg
lods
or
les
pop
call
pop
cmpb
push
xchg
stos
xchg
xlat
stos
mov
jbe
mov
or
shlb
pop
je
push
into
and
lock
mov
adc
inc
fmull
lahf
fiadds
in
addr16
js
pushf
ficomps
cmp
and
es
or
mov
or
push
sti
mov
mov
clc
mov
sbb
loopne
jo
xchg
aam
js
jp
mov
push
clc
push
aaa
les
mov
rcrl
and
movsb
adc
pusha
or
movb
cmp
jecxz
imul
stc
mov
stos
sbb
dec
pop
popa
into
andps
bound
fimull
outsb
add
mov
sahf
ror
divb
sub
adc
inc
shlb
inc
cwtl
cmp
lret
dec
mov
repnz
mov
enter
push
sub
xchg
dec
push
adc
xchg
push
or
push
pop
aaa
test
cli
push
push
mov
stos
sbb
mov
cld
mov
sbb
cmp
pop
lahf
arpl
adc
jo
movsl
pop
std
add
enter
orl
sahf
jbe
clc
sub
outsb
add
or
xchg
adc
insl
cs
inc
insb
xchg
hlt
verw
sub
ss
xor
mov
stos
or
pop
pop
ret
lock
add
lods
xor
sub
xor
xlat
push
cmp
xchg
insb
dec
mov
sbb
mov
dec
call
add
or
les
mov
sbb
andb
jp
mov
int
nop
sub
or
inc
sub
inc
scas
fwait
stc
pop
dec
insb
pop
test
shll
arpl
aaa
ret
inc
imul
xchg
repz
and
fsubs
sbb
push
test
mov
out
add
cmpsl
cs
adc
fsubl
cltd
mov
cltd
mov
push
clc
inc
nop
xor
pop
push
mov
add
stos
fildl
sbb
push
xor
cwtl
clc
jne
push
or
adc
mov
pop
adc
mov
jno
adc
sbb
jnp
adc
or
lock
push
out
push
xchg
adc
jnp
lahf
pop
mov
enter
push
cmp
shlb
cs
jno
pop
sub
popa
arpl
fs
cmp
mov
and
xchg
jb
jns
test
in
insl
mov
frstor
adc
bound
dec
mov
push
inc
adc
fwait
shll
leave
sub
cs
lods
mov
adc
pop
loope
push
outsl
adcb
fldz
dec
rolb
jmp
sbb
test
or
ds
clc
push
sbb
and
fcmovbe
ja
inc
in
sub
push
bound
fwait
and
insl
in
sub
stos
push
or
cmp
inc
adc
mov
pop
pop
inc
in
loopne
fildll
sub
push
or
ret
pusha
sbb
ret
ret
jge
jne
mov
or
ret
incb
int3
adc
inc
jle
jg
cmp
jp
cltd
js
cmp
pop
cmp
outsl
jl
and
inc
inc
mov
xchg
test
jp
jb
arpl
ljmp
int
clc
mov
shrl
dec
pop
mov
mov
pusha
sbb
pop
add
push
xchg
cli
sbb
push
das
pusha
xor
push
fcmovu
aam
mov
sbb
jl
and
xor
in
jno
cmc
mov
in
push
mov
sbb
pop
cmp
ret
aaa
add
or
add
cmc
ret
das
dec
lret
repz
pop
in
or
ret
mov
pop
sub
push
cmp
pop
push
xchg
scas
mov
cli
or
adcb
pop
or
adc
sub
int3
dec
pop
sbb
stc
sahf
cmp
jmp
pop
ret
enter
aaa
add
cmp
pop
mov
out
scas
stos
test
or
sub
mov
mov
and
adc
jge
xchg
lock
jb
std
push
adc
jo
or
das
pushf
push
std
xor
add
pop
call
xchg
mov
fmuls
mov
pop
xor
js
js
arpl
xor
aaa
mov
add
xor
fisubrs
add
call
mulb
stos
ja
arpl
addl
cmp
sub
mov
jl
hlt
pop
lock
jne
loope
ret
leave
js
lock
mov
bound
clc
jmp
imul
push
lahf
jne
jno
clc
loope
adc
call
lea
sbb
sub
mov
clc
out
jne
add
lret
push
mov
inc
loopne
push
xchg
or
mov
cld
das
dec
aaa
mov
push
lock
lret
mov
dec
orb
pop
pop
push
mov
push
add
js
in
jmp
mov
mov
imul
dec
cli
test
jp
push
adc
xchg
popf
cmp
std
xorb
push
and
bound
add
pop
mov
fdiv
and
sub
jge
inc
jae
out
shl
mov
lahf
add
in
sbb
push
or
call
xchg
test
test
scas
fistpl
cld
xlat
jle
out
cmp
adc
xor
jmp
push
inc
iret
rcr
push
jmp
jg
add
stos
cmp
loopne
xchg
jns
add
jb
sub
call
cld
inc
jno
jae
inc
mov
scas
or
lcall
add
nop
mov
aam
in
hlt
xchg
push
xorl
and
and
push
jno
dec
dec
std
push
fisubl
push
and
push
leave
sub
test
add
pop
push
pop
dec
insl
nop
mov
dec
aas
or
fs
ret
mov
pop
mov
scas
pushf
mov
popa
lock
adc
pop
mov
xor
sub
mov
fimull
dec
adc
inc
adc
jmp
sbb
sti
ret
or
mov
jl
mov
test
lret
pusha
cmp
addb
std
cwtl
cli
insb
mov
inc
add
lods
fmull
mov
lret
pop
mov
push
jg
xchg
sub
sbb
stos
xchg
xchg
test
test
pop
pop
stos
outsb
scas
adc
lcall
add
inc
aam
push
inc
add
add
out
xor
pop
call
push
inc
adc
sar
push
pushf
xlat
xchg
push
pop
ss
in
sbb
out
push
and
jnp
add
lods
cli
adc
adc
stos
xor
call
hlt
lock
push
or
inc
shll
pop
push
lock
or
add
aad
cmpb
xchg
pop
mov
sbb
push
push
or
dec
xchg
stc
subb
dec
daa
mov
enter
jl
inc
jno
pop
pop
and
add
mov
adc
frstor
loop
xchg
mov
ficomps
sbb
mov
nop
cmp
mov
pop
outsb
daa
aad
loopw
xchg
push
mov
rol
mov
mov
or
addr16
jne
fcomip
or
jno
rcll
inc
stos
enter
push
test
jge
aam
out
xchg
bound
add
gs
pop
add
and
outsl
sbb
sub
cmc
out
test
push
jecxz
orb
cbtw
mov
jge
mov
sbb
add
dec
mov
pop
jge
mov
jg
sbb
jp
add
jmp
push
ljmp
nop
xor
std
ja
push
std
inc
sub
push
into
dec
and
fs
dec
rcl
cmp
lahf
lcall
dec
and
dec
shrb
jne
into
push
enter
push
sub
add
add
pop
gs
sub
mov
push
push
xor
mov
mov
sub
cmp
cld
xor
cmc
subb
jb
mov
std
push
idivb
dec
cmc
pop
jnp
test
lcall
lock
inc
or
mov
mov
push
dec
vsqrtps
loopne
jno
cs
aam
mov
xor
aas
mov
les
in
lcall
subb
out
shll
add
and
jg
in
mov
add
int
push
xor
je
push
out
rolb
stos
xchg
pop
mov
add
pop
lock
mov
outsl
or
cltd
cmp
xchg
int
test
or
mov
xor
sahf
jnp
mov
loopne
int3
fldenv
fnstenv
bound
jmp
pop
fisttps
test
hlt
push
sub
adc
mov
jb
sti
mov
fadd
incb
cmp
icebp
push
push
mov
lods
inc
mov
sbb
bound
not
stos
and
or
inc
sub
leave
inc
add
jle
mov
adc
add
dec
or
pop
aam
sbb
stos
jle
addl
inc
xchg
imul
mov
je
ljmp
mov
out
add
shrb
dec
or
movsl
mov
jmp
fwait
loopne
shrb
call
jo
pop
ret
and
aad
lock
or
mov
cltd
test
pop
mov
sbb
xchg
adc
and
xor
lock
imul
std
mov
in
push
dec
incl
bound
and
out
pusha
pop
je
ret
mov
adc
ret
pop
or
add
mov
fidivs
out
add
push
push
ds
pop
mov
push
insl
add
or
ja
cmp
xchg
pusha
int3
iret
and
sub
lret
pusha
cmc
and
and
aam
pop
mov
sub
test
seta
mov
sub
mov
clc
mov
rol
jbe
inc
daa
lahf
rcll
push
pushf
push
bnd
jnp
nop
cmpsb
xor
push
mov
and
and
fwait
and
pop
and
test
stos
icebp
in
dec
add
out
in
sbbb
xlat
push
jge
fildl
push
or
pop
mov
movsb
ds
fsubrs
xchg
in
pusha
jmp
and
xchg
sbbb
inc
enter
mov
cli
jle
loop
int
add
pusha
cmpsl
imul
jne
jns
xchg
cmp
roll
mov
adc
shrl
les
sahf
es
bound
dec
sbb
pop
sbb
add
pop
xlat
cli
xor
jp
ds
jle
adc
mov
adc
insl
fisttpl
aam
inc
cmpsb
push
sti
sbb
rolb
in
sub
mov
cltd
clc
xor
add
aaa
loope
insl
sbb
int
addb
add
out
push
pop
ret
iret
sarb
ret
mov
jg
pop
test
mov
ds
jb
test
lods
xchg
test
xchg
add
cmp
push
roll
or
stos
in
mov
push
xchg
out
inc
sub
scas
or
popa
addb
std
mov
js
int3
lahf
fistl
add
sti
in
or
mov
das
mov
add
sahf
std
xchg
pop
call
pop
add
adc
dec
popa
push
icebp
call
xor
cmp
jmp
xor
in
inc
cli
inc
lret
fmuls
lock
push
mov
sbb
add
test
adc
ret
insl
jbe
enter
add
lret
sbb
cmp
outsb
xchg
xor
repnz
pop
mov
cwtl
and
inc
ret
mov
adc
push
lret
mov
inc
pop
xchg
mov
test
jne
div
fnstsw
sbb
xchg
icebp
or
xorl
xor
dec
test
mov
push
test
loope
jo
sbb
lock
cld
xchg
mov
clc
stos
cmp
add
out
scas
dec
jmp
push
loop
jmp
loopne
je
jmp
push
out
mov
sbb
mov
movb
aaa
les
cmc
test
addr16
and
dec
push
dec
mov
mov
mov
push
sbb
cmp
lahf
mov
xchg
movsl
ljmp
sar
out
mov
std
cli
cld
mov
or
jae
mov
push
ja
leave
addl
xchg
add
sti
add
int3
add
fwait
dec
fdivl
or
movsb
inc
orl
loop
outsl
into
popa
sarb
adc
xlat
push
mov
sub
and
add
push
lcall
sbbl
jmp
in
or
add
pusha
lret
shll
adc
aam
push
incl
in
stos
sub
test
cmp
push
clc
or
add
adc
inc
dec
ds
scas
mov
sub
sbb
push
and
test
dec
inc
xchg
addb
pop
pop
shrb
sar
lcall
mov
dec
ret
add
mov
rcl
icebp
and
daa
xor
adcl
sbb
clc
add
data16
imul
fcoms
jno
pusha
pop
adc
dec
push
test
bound
xchg
mov
inc
adc
jle
icebp
cmp
stos
lock
shl
pushf
mov
dec
jae
or
icebp
test
push
pop
push
inc
movsb
adc
loop
icebp
mov
mov
loopne
inc
add
call
nop
lret
arpl
lock
in
sub
jb
sbb
iret
cltd
and
sarb
ljmp
inc
fsubrs
scas
push
gs
adc
mov
aas
mov
data16
jmp
sub
andb
sbb
cwtl
and
fdivs
in
xor
repnz
dec
rcrb
scas
addr16
mulb
push
add
inc
add
sbb
pop
or
es
xchg
cwtl
ret
and
nop
aam
xchg
xchg
insl
push
add
xchg
ds
pop
je
ret
mov
xchg
pop
or
sub
cmp
jb
dec
mov
push
popf
and
jno
xlat
inc
push
movl
fsubs
dec
ret
movsb
fwait
inc
rorb
dec
and
dec
push
and
fnstsw
add
mov
xchg
jb
pop
and
cmpsb
mov
aas
out
adc
sti
or
incb
or
pushf
gs
pop
push
ret
fwait
push
mov
mov
dec
call
ja
fbld
call
std
rolb
adc
jp
loopne
xchg
out
and
sti
mov
and
cmpsl
addr16
cmp
mov
xor
adc
inc
and
ret
pop
popa
daa
push
and
jl
leave
rolb
inc
mov
sbb
sbb
push
jns
jo
loopne
aaa
and
and
enter
dec
out
movsl
mov
sbb
orl
or
adc
dec
and
sbb
cld
sbb
add
or
shl
test
and
xor
sub
add
jge
bound
scas
pop
pop
je
and
outsb
push
les
das
rorb
lea
jno
pop
lods
push
inc
faddl
xchg
xchg
and
adc
inc
movb
mov
loop
xchg
jb
insb
lahf
adc
dec
loope
mov
and
jp
hlt
jecxz
adc
sub
mov
clc
aad
cmpsb
mov
jae
xchg
mov
mov
rorb
xchg
add
ljmp
int3
sub
pushf
pop
sti
hlt
andl
dec
dec
fistl
dec
shlb
lcall
xchg
lcall
sub
loopne
loope
pop
cmpsb
in
sbb
repz
push
and
inc
incb
pop
lods
popf
or
scas
sbb
nop
hlt
add
rolb
cltd
or
enter
mov
add
cmc
sbb
jbe
bound
clc
xchg
inc
mov
add
push
mov
stos
aad
xchg
mov
shr
push
orb
out
mov
shrb
jge
out
xchg
or
sarb
adc
mov
push
rorl
pop
cs
loopne
mov
ss
adc
pop
test
out
sub
push
sub
jecxz
sub
add
xchg
inc
sbb
popa
sbb
fisubs
sbb
es
and
sub
icebp
aad
pop
lods
test
mov
andl
add
and
faddp
jp
jne
mov
add
cmp
cld
push
sub
rolb
add
clc
dec
xchg
repnz
cmp
aas
aad
test
pop
fs
outsb
leave
fst
adc
outsb
ja
popa
cmp
pop
or
push
adc
dec
sbb
or
ds
mov
pop
add
stos
xor
mov
cld
dec
jg
jecxz
test
sbb
dec
mov
lea
and
insl
xor
xor
cs
pop
mov
inc
mov
das
sbb
or
mov
dec
test
add
mov
lcall
push
push
es
out
inc
call
mov
push
mov
sbb
inc
push
push
cli
dec
mov
enter
andl
xchg
mov
add
iret
icebp
adc
mov
cld
sub
orw
dec
sub
mov
movsb
add
pushf
pop
jp
mov
je
ljmp
ficomps
popf
xlat
clc
negb
es
or
add
js
dec
outsl
push
sub
push
or
jo
out
xchg
or
cmp
nop
inc
mov
mov
push
sbbb
enter
mov
jl
stos
decl
and
inc
add
inc
push
sbb
pop
mov
incl
add
xor
sub
fildl
daa
lods
int3
cmp
sbb
sub
sarb
fwait
push
mov
fucomi
sahf
loopne
repnz
mov
push
xor
mov
jmp
cltd
pop
xor
or
callw
jae
psubd
jne
mov
sub
push
test
and
cmp
adc
inc
sti
push
jmp
push
adc
hlt
jecxz
testb
ret
loop
sub
push
sbb
add
pop
pop
inc
fbld
sahf
mov
sahf
sbb
test
xor
sbb
js
adc
test
loop
or
mov
and
icebp
jno
xchg
loop
test
jge
je
jp
mov
jns
sbb
mov
jp
icebp
rcrl
mov
je
fcompl
xchg
outsb
cmp
mov
incb
add
cs
sbb
cmpsb
xchg
imul
in
or
test
mov
fs
lea
pop
jle
xchg
sbb
movsb
sbb
inc
ficompl
dec
out
jg
mov
and
adc
loopne
xchg
les
fcomps
in
mov
push
xor
pop
sbb
sbb
adc
inc
cmpsl
ss
mov
test
xorb
lods
dec
push
sbb
xor
mov
dec
sub
addr16
hlt
rorb
sub
out
xchg
rolb
test
mov
add
clc
dec
add
mov
add
out
jns
lods
and
lds
lods
ror
xor
imul
jle
push
js
nop
stos
ds
cmp
jg
rcl
inc
iret
into
dec
mov
push
arpl
clc
scas
cs
icebp
call
mov
adc
or
cs
and
into
scas
nop
mov
fidivrl
shll
gs
ljmp
push
add
jge
clc
cmp
or
test
lods
jb
mov
mov
insb
mov
push
pop
aad
or
es
sub
pushf
add
jb
jecxz
cmp
cmpxchg
ljmp
pop
js
cmp
outsb
pop
jmp
dec
aam
ret
xchg
push
repnz
aas
lret
js
test
jo
sbb
push
sub
push
cltd
fimull
push
sbb
xor
aam
imul
subb
jo
test
add
or
fucomi
inc
xchg
call
mov
les
sbb
cmp
cltd
mov
cli
pop
jb
add
adc
add
dec
xchg
iret
pop
loopne
outsl
push
inc
mov
es
scas
mov
sub
ffreep
dec
out
mov
jo
push
loope
shlb
jbe
ficoms
mov
cld
cwtl
add
xor
inc
fsubrl
jge
ds
mov
in
rolb
mov
mov
xor
push
clc
jecxz
add
dec
test
rorb
dec
pop
inc
xchg
cli
mov
hlt
jbe
mov
add
mov
fadds
addr16
mov
out
cmpsb
in
mov
and
std
inc
adc
mov
jnp
outsb
add
mov
xor
jecxz
sbb
add
pusha
push
add
pushf
lahf
imul
aam
xlat
dec
pusha
test
hlt
aam
decb
add
movsb
jnp
inc
jne
cwtl
jne
in
mov
cli
push
stc
idivl
shl
dec
cmpsl
loopne
pusha
lods
inc
add
push
mov
sub
push
shlb
xlat
stc
mov
jmp
fsubrs
add
xor
mov
stos
iret
push
daa
xchg
push
xchg
mov
mov
sbb
lods
fldl
and
iret
leave
pusha
xorb
enter
or
or
cmpsb
xor
aas
jp
hlt
push
inc
push
je
mov
loope
jecxz
push
adc
adc
and
jno
rcrb
ret
stc
ds
ffreep
and
xor
lcall
jno
push
sub
lcall
mov
mov
movb
cli
pop
adc
jge
stos
sub
pop
pop
arpl
fwait
ss
xchg
sbb
adc
js
mov
aam
push
cs
adc
fdivrl
imul
inc
clc
loopne
dec
push
lods
jle
adc
cmpsl
mov
xchg
and
xchg
cli
pop
pop
mov
in
insb
add
mov
ss
sub
out
and
mov
jle
or
fs
jp
cmp
sub
dec
sbb
sbb
mov
xor
lock
add
fcmove
add
icebp
xor
rcl
dec
push
mov
push
aad
stos
mov
sub
mov
les
ja
call
mov
adc
jno
sti
cwtl
in
xchg
sbb
xorl
sbb
inc
dec
mov
dec
and
inc
lock
scas
fadd
sbb
test
inc
inc
mov
cmp
add
lock
fcom
mov
imul
insl
js
filds
mov
mov
jae
mov
sbb
and
aas
shlb
cmpsb
add
sbb
or
inc
pop
pop
cli
cmp
xchg
push
insb
push
dec
adc
loopne
adc
pop
stc
gs
or
add
andb
push
xor
add
inc
add
mov
fnsetpm(287
das
mov
xchg
pop
cli
and
lds
xor
and
test
push
lahf
or
and
inc
push
stos
aam
ljmp
pop
adc
push
adc
dec
cmp
mov
cmp
movb
in
mov
cmp
pop
and
xor
or
mov
cltd
cmp
sbb
imul
or
call
dec
pop
ja
push
mov
std
and
sti
ss
aam
add
std
in
fists
jne
in
je
inc
mov
and
lock
xchg
dec
mov
loop
pop
stos
stos
add
pop
or
jg
inc
and
inc
cmp
iret
inc
pop
or
into
movsl
daa
inc
fs
scas
aam
adc
fdivs
aad
scas
test
cmp
jo
xchg
mov
mov
cmp
lods
inc
mov
pop
xchg
dec
repz
cmp
pop
ja
notb
lock
dec
je
push
test
mov
aas
mov
lock
inc
loope
add
ret
push
add
icebp
adc
call
inc
xorl
dec
cmpsl
jl
and
pop
mov
movsb
loopne
scas
sbb
out
sbb
pop
mov
pop
cmpsl
sbb
pop
push
inc
pushf
pop
push
clc
pop
call
sbb
aad
sbb
std
popl
and
cmp
and
add
dec
stc
and
mov
into
lahf
nop
std
loop
outsb
and
icebp
stos
cmp
aam
add
mov
fimull
outsl
fdivs
lret
test
movsl
and
mov
inc
test
fistps
fs
fwait
aam
mov
aaa
insb
test
cmpsl
mov
push
sahf
dec
xor
je
inc
mov
xorl
hlt
xorb
rclb
adc
out
sub
mov
pushf
sbb
sbb
pop
sahf
ds
and
rol
add
sub
stos
fidivrl
jne
and
inc
pop
arpl
ljmp
cli
jbe
mov
mov
or
scas
push
push
lock
xorl
pop
adc
lods
mov
push
pop
mov
jecxz
jle
rorb
std
test
push
mov
rclb
dec
mov
sbb
cmpsl
cmp
pop
mov
jp
add
fwait
pop
lods
mov
fisttpl
jbe
push
add
fisttpl
and
adc
cmp
mov
call
dec
movsb
mov
mov
inc
das
dec
xor
jle
add
or
cs
push
lock
push
mov
inc
adc
adc
lock
incb
mov
cmpsb
mov
into
fcompl
pop
jp
sahf
leave
jb
pop
testb
in
and
jle
lea
cltd
push
fildl
clc
add
jb
fstpt
jp
les
lahf
mov
push
rol
sahf
or
push
mov
ljmp
fdivrs
out
mov
fbld
xor
and
lcall
or
les
push
mov
loop
mov
add
mov
lcall
push
mov
mov
jo
mov
mov
test
mov
sub
push
dec
shlb
mov
movsl
mov
xor
pop
imul
adc
mov
stos
mov
ficompl
lds
scas
out
xchg
fisttpl
xor
xor
js
and
ljmp
pop
push
mov
fdivs
out
arpl
cmp
data16
fwait
sahf
test
push
sbb
mov
scas
add
dec
and
mov
sbb
add
push
xchg
sbb
jp
adc
sar
les
or
inc
inc
sahf
int3
es
xor
jbe
mov
push
sub
pop
xchg
pusha
sub
push
sbb
cwtl
movsb
jp
lock
andl
mov
std
fistps
lea
fwait
out
sti
add
inc
loop
dec
sbbl
bound
cs
data16
or
xor
or
lods
call
dec
int3
mov
sbbb
add
mov
sbb
mov
add
inc
jno
push
or
ljmp
mov
xlat
aad
movsb
push
test
imul
sbb
sbb
movsl
xchg
test
pop
jo
dec
jl
fwait
dec
pop
int3
fadd
mov
push
lcall
mov
pushl
aad
push
leave
fistps
sub
sub
cmp
rsm
rclb
mov
lcall
sub
mov
mov
add
inc
and
pop
loopne
fstpl
stc
jae
cmp
add
cli
mov
negl
add
adc
inc
or
int
rorl
add
adc
mov
push
fcoml
pop
add
jo
xchg
or
orb
repz
rorl
inc
mov
or
call
ss
sbb
andl
mov
mov
lock
and
sub
lods
add
inc
pop
test
jl
adc
or
sbb
add
ret
addb
pop
pop
js
mov
sbb
inc
ljmp
mov
cmp
inc
and
ds
mov
into
and
cmp
loop
dec
xor
test
mov
das
and
jae
jl
mov
loopne
scas
in
cs
fnstsw
xchg
mov
std
fldt
dec
rsm
mov
insb
push
xchg
clc
pop
xor
mov
adc
fbld
mov
cmp
outsb
and
cmp
imul
or
aas
inc
add
and
mov
jge
pop
data16
das
test
mov
ja
or
dec
in
cmp
xor
nop
push
mov
mov
shlb
roll
fists
push
adc
mov
jbe
mov
xor
out
ret
cmp
movsl
mov
mov
add
xchg
test
enter
pop
cwtl
mov
call
add
mov
xor
cmc
cmc
or
sbb
adc
pop
shlb
jg
fnstcw
cmp
and
mov
fldt
or
jl
cld
les
inc
dec
mov
inc
iret
pop
inc
push
lods
and
mov
sbb
sub
dec
sub
ljmp
lret
lcall
fdivl
pusha
dec
std
fwait
add
inc
xchg
lods
pop
lods
xor
out
push
push
lret
adcb
mov
xchg
fadds
cmp
sub
pop
call
mov
icebp
dec
xchg
xchg
stos
aaa
xor
aad
or
cltd
rorb
stos
inc
std
jne
loop
fnstsw
adc
and
inc
shll
push
jno
add
mov
and
sub
jo
inc
pop
and
addb
mov
mov
filds
add
fsts
and
ret
xchg
lret
mov
cmp
push
mov
xor
int3
mov
outsl
out
dec
pop
mov
dec
loopne
mov
push
les
push
cmp
fcompl
inc
or
jl
sarb
popf
cmp
loopne
sahf
nop
push
cli
mov
cmc
jmp
jmp
std
push
stc
repz
push
rolb
and
rcr
inc
mov
fsts
or
testb
inc
mov
mov
cld
testb
sbbl
push
js
push
mov
test
adc
stos
push
xlat
pop
in
push
lcall
testb
cmc
imul
dec
push
insb
mov
js
lea
add
gs
dec
fiaddl
lock
test
jle
les
repz
adc
sub
jg
pushf
and
mov
ds
push
pop
xchg
hlt
outsl
scas
sar
push
sub
cmc
cmp
add
imul
pop
cli
jne
sar
mov
xchg
mov
jmp
cwtl
aaa
insb
das
fsubp
sbb
test
add
jle
lods
loope
pop
adc
and
push
and
jno
mov
mov
in
nop
sti
pop
push
fldcw
int3
test
or
push
or
add
jl
sub
outsb
divps
imull
and
sahf
testl
xor
test
movsb
and
mov
sbb
push
xor
and
push
mov
xchg
add
cltd
cmp
and
or
add
xlat
and
popf
inc
add
pushf
mov
vpsllw
scas
ja
out
or
das
or
mov
shlb
icebp
xor
inc
adc
pop
in
sbb
add
cmc
in
aaa
add
mov
iret
fadds
cld
push
lods
mov
imul
pop
mov
js
cmpl
mov
mov
mov
bound
pop
push
mov
add
rcr
sarb
test
xor
lcall
mov
les
lods
ds
push
iret
rol
jo
push
or
int3
sub
xchg
push
inc
addr16
adcl
jmp
mov
adc
mov
orb
push
mov
test
fidivs
or
cmp
sbb
pop
clc
lock
sbb
stos
sbb
dec
push
cltd
sub
jle
jp
daa
and
mov
xchg
or
cs
and
test
add
cmp
data16
lock
mov
lds
test
xor
or
sub
jo
push
xchg
fstl
cs
cmp
insb
xor
push
js
pushl
incl
or
outsl
in
mov
xchg
mov
ret
add
scas
pop
lock
or
xchg
or
fnsave
sub
xlat
aad
into
push
sbb
test
push
fmull
sub
or
enter
cmp
push
sub
pushf
push
xor
aad
ret
xor
fwait
pop
or
arpl
jmp
lret
pop
fbld
mov
push
inc
and
aaa
ret
inc
xor
lcall
jbe
jg
cld
jl
push
repz
mov
push
movsb
mov
loope
jg
sarl
repz
pop
jmp
or
add
in
insb
bound
icebp
int3
xchg
addl
pop
push
cmp
mov
in
mov
push
sar
cld
ds
sahf
dec
sbb
outsb
nop
mov
xor
jnp
mov
pop
fistl
mov
in
push
in
jg
test
jns
scas
mov
add
je
lds
mov
mov
lahf
bswap
pop
andl
mov
jmp
adc
and
or
popf
xchg
sbb
push
pop
push
pop
std
les
dec
pop
cmp
mov
scas
adc
or
sub
subb
sub
nop
std
push
out
mov
ja
sub
pop
insb
jbe
loopne
xchg
pop
mov
mov
je
ret
sub
dec
push
mov
pushfw
push
jmp
jmp
cmp
jo
fwait
lods
test
mov
dec
pop
add
or
sbb
andb
lcall
pop
adc
roll
cmp
aaa
push
and
aam
negb
enter
hlt
aam
mov
into
outsl
loop
xchg
movsb
xor
mov
clc
xchg
mov
push
inc
gs
or
imul
push
jmp
push
inc
adc
inc
sar
gs
lret
and
int3
mov
shlb
stos
jl
and
add
int3
sbb
push
inc
or
mov
mov
loope
sub
xlat
jl
mov
mov
shlb
scas
xchg
push
dec
inc
push
sbb
out
or
jle
mov
or
int
xchg
bnd
jae
jo,pt
mov
hlt
sarl
sbbl
push
insb
out
jecxz
shlb
clc
jmp
cwtl
sbb
and
movsb
sbb
cli
xor
pop
into
add
cs
jns
xlat
adc
test
xchg
push
jmp
call
inc
sbb
and
adc
sbb
test
arpl
ds
jp
inc
lods
cld
push
test
je
push
test
sbb
mov
sbb
inc
inc
jnp
sbb
pop
and
inc
sub
jmp
lret
add
cmpsl
test
lock
pop
shlb
or
fs
incb
push
popa
inc
inc
icebp
je
pop
pop
push
pop
mov
jnp
negb
stos
loopne
or
add
insb
cld
pop
push
sub
bound
and
repz
cld
add
add
mov
ds
push
inc
add
jle
mov
or
and
in
stos
or
and
mov
adc
sub
gs
pop
lea
aad
es
pop
and
xchg
les
pop
push
cwtl
lret
push
cmp
jle
pop
icebp
insb
sbb
or
nop
pop
xchg
lock
sub
rolb
shrb
dec
adc
inc
in
aam
mov
push
sub
dec
jge
or
jbe
inc
add
pushf
ds
jl
cmp
es
sub
pop
push
mov
dec
cld
negb
fs
subb
sbb
or
add
adc
cltd
clc
push
push
pop
es
mov
pop
cli
mov
mov
imul
icebp
ljmp
cmpsb
cld
push
jnp
jle
add
les
sub
movsb
loopne
push
stos
mov
jae
dec
pop
aaa
jle
cwtl
or
jne
and
adc
mov
dec
popf
rclb
bound
or
sub
insl
xor
loop
lcall
jo
sub
movl
jmp
cmp
rcll
lret
fucomip
fstp
cwtl
xor
jo
jbe
xchg
xor
pop
sbbl
cli
or
pusha
xchg
mov
cmp
out
int3
imull
xchg
jmp
xchg
pop
movzbl
ss
mov
push
mov
arpl
bound
ss
mov
dec
es
or
sub
inc
ljmp
pop
mov
popf
push
lcall
clc
iret
ret
enter
call
roll
sub
call
cmpsl
icebp
add
lock
mov
jne,pt
dec
faddp
leave
imul
jbe
sub
std
and
imul
add
scas
outsb
mov
test
mov
cmp
scas
cs
dec
leave
jns
xchg
inc
mov
cmpsb
scas
inc
test
mov
call
cld
dec
cli
clc
cmp
push
out
inc
scas
rolb
insb
stos
loope
scas
dec
das
cli
add
mov
into
stos
icebp
das
xor
mov
mov
add
imul
test
cmp
jnp
and
mov
cmp
push
mov
test
pop
mov
or
mov
add
push
inc
add
xchg
mov
shrb
cmc
mov
push
adc
insl
mov
jge
xor
or
and
dec
mov
mov
adc
cli
and
test
dec
cmc
xchg
outsb
neg
stos
or
mov
dec
push
sahf
ror
inc
rolb
sub
bound
mov
aas
bound
push
cmpsb
mov
jp
mov
pop
ficompl
mov
shlb
ljmp
fmuls
mov
pop
ret
sbb
sar
cmp
pop
sub
jno
cmc
pop
sub
movsl
sub
jae
rcr
cmp
shll
or
pop
pop
shrl
xchg
data16
adc
test
adc
cld
mov
xor
mov
and
addl
jg
loope
jg
mov
data16
xchg
push
jns
cmpsb
stos
add
call
mov
jl
inc
roll
stos
rcr
inc
das
loop
fs
sub
or
mov
scas
call
dec
ror
fadds
rorb
xchg
fsubrs
and
repnz
cmp
pop
mov
lods
add
and
icebp
xchg
mov
stos
xchg
pop
aas
rcr
ljmp
jl
dec
loopne
pop
xor
adc
call
mov
jle
sub
loope
jae
sbb
lea
pop
dec
and
xchg
lea
pop
push
push
inc
mov
arpl
mov
lods
add
leave
les
pusha
push
push
sarl
sbb
mov
cmpsb
xlat
ljmp
pop
jl
mov
sbb
add
add
mov
add
xchg
and
and
lock
inc
call
sbbl
les
mov
das
cmp
push
and
icebp
fisttpll
and
mov
and
mov
cli
lods
aad
dec
or
push
sbb
mov
aaa
aam
fmull
fxch
push
jns
repnz
sub
pop
in
pop
and
cld
pushf
add
xchg
mov
fwait
std
rolb
adc
inc
sub
push
sbb
pop
jl
js
mov
sub
mov
ret
push
out
cmp
push
mov
lock
sar
mov
imul
xor
cmp
dec
rep
pop
icebp
dec
xor
jne
jge
mov
mov
pop
pop
jecxz
jmp
mov
sbb
push
cld
rolb
ljmp
loopne
add
and
add
rorb
mov
scas
call
insl
inc
aam
mov
lock
fwait
subl
adc
enter
sahf
enter
pop
sub
mov
pop
inc
sarb
sub
ds
fnstenv
pop
mov
push
sbb
filds
dec
roll
adc
aaa
mov
shlb
cmpsb
loope
sub
lods
adcb
jo
mov
jo
shlb
orl
cmp
add
call
shr
mov
mov
push
xor
call
ret
lea
int3
out
mov
inc
movsb
sbb
int3
sbb
pop
data16
sbb
xchg
or
inc
andnps
rorb
adc
cs
sbb
cwtl
aam
orb
test
or
nop
jge
jno
insb
push
bound
add
dec
orl
xor
inc
dec
pop
inc
dec
out
push
push
mov
cmp
cs
adc
sahf
adc
mov
rorl
ljmp
xchg
outsb
xchg
and
xor
mov
jbe
outsb
mov
push
cmp
pusha
std
push
cltd
fs
mov
lea
inc
xchg
mov
aad
lock
xlat
add
mov
imul
imul
into
sub
mov
int
out
and
out
pushf
mov
or
je
mov
test
unpcklps
sub
pop
inc
dec
sbb
adc
je
loopne
js
add
jnp
testb
ljmp
rcrb
movsl
pop
inc
incl
pop
add
je
jns
sub
xchg
or
push
fcompl
jo
sbb
or
out
mov
test
fcomps
mov
mov
lret
loope
and
sbb
pop
sahf
inc
arpl
inc
add
and
add
jle
jecxz
sbb
aaa
cwtl
cmpsl
cmpsl
fwait
push
push
add
icebp
xchg
call
sbb
cmovle
aas
dec
xor
mov
mov
or
push
bound
push
inc
push
clts
cld
jbe
fcomps
fidivrs
loope
cmpsl
lret
dec
fisttpll
add
movsb
push
adc
push
insb
fnstsw
pop
adc
push
cmp
jg
xlat
je
aaa
pop
mov
fiaddl
pusha
sbb
xchg
call
ss
jo
sub
adc
int
scas
mov
lock
xor
jl
sub
int3
lds
les
mov
and
int3
xor
pop
sahf
mov
dec
aam
pusha
adc
insl
and
stc
add
decb
call
and
push
ja
jb
dec
lods
in
lcall
pop
arpl
sub
mov
mov
fdivl
dec
push
ss
faddl
push
ljmp
cmp
jl
mov
imul
or
add
and
xchg
add
add
xor
mov
inc
xor
sbb
dec
pop
inc
fists
inc
lods
add
aam
dec
dec
das
adc
ret
daa
loope
pusha
jnp
sbb
adc
and
and
xor
mov
addb
xor
test
rorb
mov
push
idivl
add
inc
adc
lds
loop
loopne
sub
jp
push
sub
dec
push
imul
aad
mov
stos
popa
push
mov
cmp
fs
ret
jg
fcompl
sahf
cmpsl
dec
je
sub
or
xchg
out
sbb
adc
mov
jmp
sub
mov
add
dec
xor
mov
inc
dec
and
rclb
pop
mov
xchg
mov
xor
mov
mov
pop
jl
outsb
cmp
fldenv
jp
repz
icebp
dec
inc
outsb
pushf
loop
mov
popa
mov
mul
pop
adc
das
cmc
imul
out
test
push
xchg
shrb
xchg
add
mov
bound
inc
and
cmp
inc
push
add
push
fmuls
iret
sbb
push
imul
cli
lds
xchg
shll
add
icebp
inc
cmp
or
xlat
loopne
mov
in
decl
inc
out
inc
or
and
sub
inc
mov
xchg
enter
or
push
or
cmp
inc
test
sbb
inc
stos
outsb
and
aaa
mov
jns
shlb
mov
sub
adc
mov
imul
leave
mov
lods
cmp
sub
xor
jne
dec
push
sbb
xor
mov
decb
mov
add
insl
add
cmp
mov
sub
cmp
xchg
popa
dec
movaps
add
and
cli
jno
aad
sub
scas
push
enter
mov
xchg
int3
push
jmp
push
sbb
js
insl
aaa
mov
scas
popa
jae
outsl
addr16
xchg
movsb
fwait
push
or
insb
hlt
fdivrl
and
rorb
cmp
sub
popf
push
dec
jmp
push
or
out
test
adc
cmp
mov
mov
sub
int3
rcrb
push
xor
mov
lret
xor
inc
ret
imul
push
mov
mov
aaa
ja
or
ljmp
adc
loopne
add
adc
xchg
adc
rol
out
cld
ret
stos
pop
pop
push
fisttpl
and
cli
xchg
test
pop
stc
xchg
push
les
sub
push
push
or
mov
inc
in
add
in
mov
cltd
dec
stos
std
dec
adc
imul
std
push
add
cmp
scas
adc
sub
cmc
ss
cli
int3
add
mov
divl
mov
add
fsqrt
movsb
sahf
adc
or
aaa
adc
adc
ret
jb
mov
adc
ljmp
pop
sbb
clc
pop
lods
pop
subl
icebp
and
cmp
test
mov
pop
dec
cmpsb
add
adc
jp
std
ja
dec
jno
sbb
mov
decl
loopne
add
js
push
stos
lock
fs
call
mul
mov
adc
inc
mov
xor
xchg
push
pop
add
dec
clc
dec
ss
add
xor
mov
addr16
shll
nop
out
pushf
jns
dec
movb
or
adc
dec
push
movsl
push
and
and
add
in
shrb
subb
or
jmp
jmp
adc
inc
xchg
or
ret
dec
int
ret
dec
mov
stos
outsb
add
sbb
jno
cmp
adc
stos
push
adc
pop
jmp
jbe
jge
inc
loope
sti
pop
out
jge
mov
push
jne
add
push
shlb
mov
jge
orb
scas
push
jnp
movsl
in
mov
daa
test
sbb
scas
pusha
push
inc
adc
pusha
or
sbb
lahf
push
lds
inc
push
inc
test
push
dec
push
dec
ret
test
add
push
das
and
jmp
jmp
add
dec
fsts
mov
icebp
std
fildll
add
xor
pop
ljmp
push
cmc
call
cld
daa
mov
ja
rcrl
jl
xchg
lea
jns
loop
fwait
test
add
lods
lock
push
pop
mov
fdiv
sub
xor
call
dec
mov
sub
into
mov
fldl
mov
add
movzwl
pop
and
addr16
push
jbe
loope
sub
enter
mov
add
arpl
adc
or
nop
jo
fdivp
repz
cmp
clc
and
xchg
outsb
cld
adc
mov
xor
imul
push
xchg
jne
cmp
mov
add
clc
xchg
incw
dec
je
add
add
push
sbbl
dec
cld
mov
loopne
inc
loope
sub
pop
test
stc
add
pop
push
mov
movsb
rcll
aam
mov
in
dec
stos
mov
add
mov
xor
cld
and
icebp
add
mov
pop
loope
pop
dec
jge
nop
jnp
call
xchg
mov
cmc
lea
jb
aaa
inc
fs
mov
mov
lods
adc
aad
or
cmc
lods
pop
mov
fcoms
and
shll
pop
lahf
aam
xchg
in
push
push
push
jle
xchg
inc
out
pop
or
jl
push
xor
pop
rcrb
xchg
test
test
clc
rsm
pop
mov
mov
test
cs
sub
pop
fiaddl
fsubrs
push
inc
imul
mov
xchg
loop
sbb
cli
and
fistps
add
faddl
faddp
mov
push
out
inc
fs
call
sub
push
push
xor
or
pop
lahf
adcl
jp
loope
cwtl
cmpb
inc
mov
adc
inc
add
je
pop
cmc
cmp
mov
add
push
sti
lods
incb
ss
ljmp
gs
movsb
insl
sub
aaa
stos
fmull
mov
int3
and
cmpsb
push
add
mov
call
xchg
push
sbb
js
ret
jle
push
sarl
xlat
imul
outsb
ljmp
adc
popf
lock
cli
sbb
testb
je
dec
jl
inc
les
frstor
iret
dec
arpl
pop
jecxz
jno
add
mov
into
fbstp
xor
sub
adc
loopne
add
mov
xchg
test
arpl
enter
mov
mov
adc
push
dec
fs
sbb
push
pop
sub
push
loope
or
fs
or
add
mov
cmpsb
cmp
subb
repz
sbb
ds
stos
cmpsb
decb
mov
mov
add
invd
scas
sbb
mov
mul
lret
ret
in
inc
mov
ss
dec
in
fcomps
dec
add
loop
adc
push
hlt
clc
clc
push
jb
mov
adc
sahf
dec
mov
inc
cmpsl
add
loopne
xor
add
lock
adc
orb
push
adc
or
adc
add
data16
mov
and
push
aam
sar
out
movsb
pop
mulb
inc
push
adc
and
es
aaa
into
or
mov
mov
test
in
mov
push
lea
jg
cmc
pop
test
push
rcrb
fcomps
adc
lds
pop
or
mov
mov
jbe
jg
sub
cmpsl
mov
aad
and
inc
lret
mov
inc
movsb
dec
mov
sub
and
aam
pushf
add
test
data16
addl
inc
out
sarl
dec
std
movsb
push
and
dec
cmpsb
js
aad
repnz
inc
adc
adc
jp
push
loop
gs
push
cs
test
or
inc
fimuls
adc
std
xor
movsb
test
push
inc
adc
sbb
xchg
int
enter
adc
push
sbb
fistpll
pop
fisubrl
sub
xlat
jg
adc
cli
jle
sub
cmp
mov
std
cmp
loop
sub
enter
out
dec
cmp
sbb
xchg
mulb
xlat
mov
dec
mov
or
insl
js
xor
push
add
mov
in
movsb
mov
int3
test
les
cld
add
xor
push
and
mov
or
loopne
or
dec
fidivs
out
nop
and
push
fdivl
dec
inc
or
jg
loopne
into
sub
iret
inc
push
das
jl
adc
cmp
adc
ss
or
mov
lahf
mov
adcb
mov
lods
jl
xchg
cmp
inc
push
adc
out
or
call
out
push
add
jecxz
orb
jmp
push
pop
lret
mov
push
dec
fisttpl
mov
fmull
mov
subb
mov
mov
mov
cld
add
pop
mov
inc
and
jl
cmpl
lds
hlt
and
inc
int
lret
aam
dec
mov
fld
add
sahf
es
cli
call
fildll
and
dec
mov
push
sbb
repnz
aam
mov
fildl
mov
xor
shlb
rcll
sbb
subb
mov
mov
shll
or
push
fcmovne
test
mov
stc
std
push
sbb
lcall
inc
xor
adc
sbb
push
mov
push
ss
adc
add
pop
rorb
ret
push
xor
and
jmp
into
sahf
movsb
xor
hlt
inc
imul
in
movb
test
mov
lods
or
test
sahf
add
pusha
add
sub
js
cli
cltd
sbb
cld
mov
clc
popa
enter
jae
clc
or
insl
lods
or
test
dec
jg,pn
mov
sub
dec
aam
lret
push
dec
mov
rorl
enter
mov
inc
jp
push
dec
aas
xchg
mov
cmpsl
mov
jge
lock
jb
aad
jp
outsl
push
movsl
sbbl
push
add
add
and
add
int
in
add
test
add
mov
add
pop
inc
pushf
xorl
andl
cmp
pop
push
ret
push
pusha
or
fists
add
lock
leave
pop
out
cmp
outsl
repnz
call
les
mov
mov
ficompl
mov
jle
rclb
cmpb
sbb
fistpll
insb
mov
pusha
adc
dec
jmp
cmp
adc
pop
addl
or
mov
hlt
ficoml
sbb
sbb
mov
ja
mov
inc
cmp
shrb
push
mov
sub
xor
std
loope
stos
cmpl
push
fdiv
pop
negb
cld
mov
cmpsl
pusha
lret
popa
push
push
loop
mov
inc
pop
jle
push
ja
sbb
adc
adc
lods
outsb
aam
das
inc
mov
jmp
push
dec
outsb
mov
or
int3
jle
nop
and
rclb
mov
jo
fildll
in
mov
pusha
sbb
sbb
mov
sub
inc
and
hlt
mov
fs
out
aas
mov
mov
iret
hlt
hlt
mov
movsl
outsl
add
shl
mov
push
sub
inc
mov
daa
add
cli
xor
mov
rorb
flds
cmp
xchg
and
js
and
aaa
lea
mov
lcall
mov
es
xor
add
mov
sub
jp
xchg
mov
xor
ss
fisubrl
mov
cmp
lods
outsb
repz
pusha
sti
insl
mov
loope
inc
lock
adc
in
cld
cltd
fbld
inc
jge
or
dec
dec
cwtl
mov
mov
dec
into
mov
push
andb
insl
push
xlat
dec
inc
sti
out
insl
enter
add
push
fildl
pop
in
hlt
out
in
mov
xchg
mov
cmc
mov
scas
nop
cli
mov
push
xchg
inc
sub
repnz
pop
lock
sbbl
push
mov
adc
mov
xorl
ss
pop
sub
xor
hlt
rcl
add
mov
ds
int3
mov
mov
aas
mov
sbb
or
mov
lcall
push
push
push
loop
sub
pop
cs
push
pop
mov
mov
or
cmpb
add
push
pop
sbb
fstp
add
inc
rclb
movsl
ja
inc
cmp
push
out
frstor
dec
in
jl
inc
inc
cld
and
pop
ds
mov
movsb
addb
xchg
add
cmp
dec
outsb
lret
mov
or
mov
fiaddl
popf
ret
mov
pop
nop
sub
mov
xor
inc
stos
xor
push
in
and
add
inc
shrb
sbb
sub
push
call
lods
and
push
lret
js
sub
push
mov
rorb
cwtl
sub
arpl
in
cs
jne
mov
and
pushf
data16
mov
pop
ret
adc
cmp
xchg
add
pop
ja
fisttpll
clc
xor
or
or
and
stos
sbb
cmp
jg
pop
mov
jle
popf
call
in
subl
pushf
mov
lahf
ds
inc
cld
mov
mov
inc
orb
call
jp
ficomps
jnp
pusha
push
sub
cs
fildl
xor
cmc
testl
jle
or
xchg
lret
mov
sub
inc
cli
adc
lcall
sub
dec
lcall
jmp
loopne
adc
jp
je
mov
pushf
aaa
or
adc
jo
pusha
adc
addr16
inc
jp
push
dec
test
or
stos
add
ret
jne
insb
mov
or
mov
dec
lret
sub
jnp
push
xor
mov
xor
and
add
inc
mov
push
pop
inc
inc
xlat
xor
hlt
push
pop
jecxz
xor
adc
sbbb
in
cmpsb
inc
pop
bound
mov
lret
movsb
push
mov
ret
pop
loop
aas
subl
jno
decl
fisubrs
movsb
adc
into
or
in
add
test
mov
pop
fcmovne
roll
push
mov
adc
test
ret
outsl
adc
mov
xorb
rorl
push
pushf
cs
adc
inc
insb
add
mov
lcall
aaa
call
sbb
cmp
sbb
aas
dec
test
nop
jno
movsb
ficoml
imul
or
lock
and
sub
mov
add
lds
xor
add
fistl
jle
out
push
and
test
lds
ficomps
stos
jecxz
pop
sbb
cld
push
push
fcmovb
es
push
xor
xchg
or
mov
or
dec
pusha
cmpsl
fiadds
lods
daa
adc
cmp
cli
mov
push
adc
pop
js
add
push
adc
add
rcrl
fdivrs
add
cmc
mov
ficoml
stos
cmpsb
and
pushf
sbb
and
jecxz
mov
inc
je
arpl
push
add
dec
rorb
in
and
add
jge
and
jnp
and
pop
inc
gs
add
xchg
xchg
mov
pop
je
test
pushf
aaa
dec
lret
cmpsb
adc
mov
pop
mov
lret
cmp
pop
fldl
and
ljmp
fldl
xchg
add
jns
dec
loopne
xchg
add
jp
jecxz
pop
jae
cmp
cmp
add
daa
mulb
cmp
sti
adc
mulb
sarb
lock
inc
add
cmpsl
inc
std
fisttpl
into
add
in
adc
stos
hlt
rolb
sub
rolb
adc
test
aad
sub
jle
push
pop
mov
sub
leave
xchg
mov
mov
scas
sti
loope
mov
ds
int3
dec
testb
stos
jp
jne
lcall
or
xchg
rclw
dec
dec
push
hlt
add
sub
pop
loop
scas
js
pusha
or
cwtl
or
pop
inc
bound
push
in
stos
or
in
jo
hlt
push
inc
pop
sbb
test
les
push
xor
jge
in
or
call
adc
pop
das
sbb
dec
das
cmp
xlat
in
and
sahf
mov
sbb
mov
jmp
inc
test
orb
stos
dec
fcoms
mov
push
fiaddl
sub
arpl
addb
push
fs
xor
jl
cld
sti
jb
out
sub
and
jbe
mov
rorl
cli
scas
mov
jo
add
jbe
xor
sbb
outsb
xor
lahf
add
cmp
lods
daa
in
insb
push
es
sub
jg
xor
movb
mov
jnp
nop
cmp
mov
les
xchg
les
push
das
push
sbbb
inc
inc
in
je
or
inc
or
inc
loopne
add
je
movsl
sub
pusha
jl
add
out
pop
or
dec
jge
pop
mov
scas
pop
cmp
lahf
stos
movsl
iret
jb
xor
dec
loopne
mov
push
jo
mov
pusha
rcl
clc
rolb
ret
adc
fidivrl
and
xchg
pushf
pop
xchg
insl
jp
jecxz
in
push
push
int
out
in
leave
aad
hlt
subl
pop
or
pushl
lods
add
and
icebp
stos
adc
jl
hlt
or
dec
pop
shr
inc
mov
add
mov
cmp
scas
cli
icebp
fwait
ds
addr16
jmp
mov
sbb
loopw
or
jle
mov
mov
xchg
mov
add
mov
stos
xor
push
lock
aaa
xor
or
lret
in
adc
push
push
and
clc
ja
sub
cld
inc
push
xlat
pop
aam
sbb
add
and
push
incb
adc
insl
sub
pop
pop
jg
xchg
stc
xchg
dec
cld
hlt
pop
inc
jl
sub
insb
sbb
inc
adc
inc
shrb
ds
imul
sbb
cld
push
rolb
and
xor
dec
pushl
mov
xor
ljmp
mov
pop
ret
sbb
cmpsl
cmp
add
je
xchg
loopne
xor
inc
andl
rorb
fsubrs
mov
ffreep
test
xor
popa
std
jmp
mov
movsb
es
fs
push
sub
mov
inc
or
dec
out
stos
push
addb
push
popa
xchg
cmp
xchg
repnz
out
jge
pop
stos
ljmp
les
mov
mov
cmp
sub
or
sbb
outsl
cwtl
add
inc
or
sub
pop
cltd
ss
mov
sti
aaa
popa
jle
out
iret
je
ss
mov
fisubl
les
lods
pop
push
add
xor
insl
insl
cmc
cltd
xor
stos
adc
dec
lods
insb
sahf
out
jmp
sub
xchg
and
fistpll
aad
into
add
add
in
rcll
inc
jmp
adc
push
lret
scas
mov
push
push
push
clc
jne
loopne
inc
jbe
repz
or
mov
dec
inc
repnz
add
xchg
jl
test
nop
das
inc
xchg
nop
repnz
add
and
outsb
push
pop
aaa
sbb
push
xchg
xor
or
pop
or
mov
jo
movsl
call
cmc
push
shrb
push
popa
jg
cmp
ljmp
mov
adcb
aaa
inc
or
mov
fisttpl
push
mov
fisubrl
mov
into
inc
sahf
ss
mov
ret
and
jbe
cwtl
jo
stos
mov
out
dec
bound
loop
lods
push
clc
xchg
cs
mov
aam
mov
ljmp
idivl
dec
imul
rorl
arpl
ret
imul
sub
enter
sub
rolb
or
data16
mov
sbb
inc
icebp
enter
xor
dec
or
jo
pop
sbb
or
jl
incl
mov
sbb
data16
push
fsts
fcoms
mov
xchg
fdivrl
out
pop
insl
or
pushl
jp
cltd
push
and
sbb
jmp
sahf
ficompl
les
cmpsb
sbb
mov
popa
shrl
jno
adc
xor
pop
stos
outsb
jbe
adc
test
ljmp
test
pusha
nop
mov
fwait
and
inc
fmull
jmp
lea
sbb
mov
push
mov
ljmp
push
lret
xchg
jp
pop
popf
hlt
clc
addr16
fcom
add
or
jmp
test
jp
inc
jge
insl
fldt
mov
fcoml
sbb
pop
add
fistl
add
dec
and
movsl
sub
jo
push
add
lds
jmp
cld
stos
loop
or
aaa
cmp
out
testl
mov
xorb
and
es
jbe
insb
icebp
sbb
out
push
lcall
push
fnstsw
imul
pop
xchg
popa
jecxz
fwait
push
push
pop
sub
scas
pop
icebp
lea
xor
push
push
mov
mov
mov
xor
add
mov
adc
mov
cmpl
sbb
cmp
ljmp
clc
ljmp
inc
push
popf
fdivrl
inc
push
movsb
or
xor
xabort
mov
dec
scas
out
mov
enter
jge
inc
cmp
pop
cli
pushf
xlat
imul
sub
das
pop
jne
xchg
aam
fcompl
ss
pop
addl
fcmovnu
scas
xchg
adc
mov
loope
xorl
dec
cmpsl
inc
roll
sarb
loopne
call
dec
add
into
and
and
mov
and
aas
xchg
cld
pop
pop
push
jg
mov
jg
pop
jp
int3
push
xor
insb
les
inc
or
call
pusha
pop
jg
add
jo
dec
insb
lahf
fisttpl
mov
dec
cmpl
stos
imul
les
jp
push
or
xchg
dec
add
jg
popf
mov
dec
push
mov
pop
add
popa
and
fcmovne
push
stos
int3
pop
aam
fsubs
nop
push
push
jle
or
push
aad
outsl
std
div
push
mov
ret
lahf
in
push
lods
les
pop
cmp
adc
mull
add
jmp
aad
loopne
cld
push
je
sbb
inc
dec
and
or
stos
cmpb
add
je
push
mov
int
clc
cli
lret
negb
push
jnp
push
and
sbb
mov
sbb
jne,pn
fdivs
cmp
jge
jbe
addr16
push
and
push
cld
test
lock
cvtps2pi
lcall
and
mov
nop
inc
adc
adcb
stc
pop
js
mov
aam
aas
sbb
fbstp
adc
notb
mov
les
movsl
push
movsb
sub
push
cmp
out
ss
ffree
cmpsl
aas
dec
mov
pop
testb
out
mov
sub
hlt
ljmp
repz
xchg
dec
repz
ja
clc
adc
sbbb
sbb
cmp
xchg
dec
push
pop
cmp
xchg
int
shlb
dec
jecxz
in
fwait
sbb
add
dec
aas
mov
ljmp
mov
sub
jbe
push
xchg
push
mov
insl
ss
aad
xchg
fsub
sub
jno
lahf
insl
pop
inc
mov
repnz
adc
call
mov
sbb
aam
pop
es
js
into
sbb
and
shlb
xchg
cwtl
rol
shll
mov
iret
lods
adc
cmp
push
push
cmp
imul
mov
jbe
icebp
mov
mov
add
lret
pop
cmp
add
mov
cmpb
ds
xchg
mov
sub
inc
cmp
mov
cmp
aas
lods
mov
push
dec
imul
sarl
mov
cwtl
mov
test
loop
gs
push
jmp
sub
jae
loop
insl
fcomi
dec
sahf
sub
loopne
lock
test
fsubs
mov
mov
shrl
push
in
pusha
add
and
sti
and
pop
enter
pop
rcr
xor
es
into
stos
adc
sub
xor
jo
dec
fadds
cld
loopne
add
insl
sbb
push
jns
js
mov
and
and
push
push
sub
cmp
out
lods
mov
push
xor
shll
mov
or
or
and
repnz
jnp
hlt
mov
mov
hlt
cmpsl
or
add
and
pop
je
xor
les
and
mov
and
aaa
jmp
push
mov
add
cs
fiadds
sub
fcmovb
mov
rorb
sbb
rcr
rcrb
enter
loop
fbstp
xlat
cmp
mov
nop
inc
imul
jno
mov
mov
cmp
add
insl
ficoml
fcoms
mov
dec
shl
inc
pushf
xlat
xor
cmp
xchg
xor
loope
jg
jl
or
movsl
incl
cmp
jo
sub
insb
cld
adc
pushf
scas
sbb
push
cmp
mov
pop
adc
shlb
mov
gs
cli
idivb
insl
mov
cs
js
bound
int3
fdivrl
and
cmp
add
push
ljmp
or
add
inc
cmp
push
hlt
in
or
js
shrb
mov
mov
add
aas
mov
push
bound
mov
rcl
stos
mov
inc
or
adc
push
xchg
jbe
fdivl
mov
repz
ret
sbb
mov
cmpsb
push
adc
ss
xlat
cld
inc
shlb
ds
jecxz
mov
test
push
push
and
daa
cwtl
cmp
push
ret
mov
fwait
andb
push
lds
or
mov
filds
or
fnstcw
pop
cld
adcb
rorb
dec
pushf
call
or
push
mov
push
das
test
std
inc
mov
loope
sub
jae
lods
lret
xchg
scas
jb
or
push
subb
cmpsl
xchg
loop
lods
fcoms
adc
insl
mov
cmp
lret
pop
mov
inc
insb
cmp
sub
add
dec
outsb
subb
lcall
mov
outsb
xchg
imulb
add
mov
push
lods
fmul
ljmp
rcll
push
lods
pop
sub
ds
jle
ss
mov
add
call
fs
or
xor
jle
xor
nop
pop
aad
xchg
cmp
or
pop
cli
adc
rclb
out
hlt
shlb
popa
pop
outsb
lods
xor
xor
pop
dec
jnp
mov
inc
and
movsb
xor
inc
insl
rolb
xchg
or
sub
imul
add
popf
mov
jnp
int
xchg
test
out
loopne
mov
mov
orb
mov
popf
sub
or
cwtl
jns
jae
pusha
inc
mov
cld
cmpsl
hlt
mov
jl
aad
sbb
dec
arpl
push
inc
test
dec
jp
call
repz
aas
pop
mov
dec
and
cmp
fidivs
in
adc
mov
dec
roll
xchg
sbb
out
lret
inc
jmp
clc
push
cmpsb
enter
add
push
lock
pusha
xchg
inc
iret
in
and
mov
cwtl
mov
addl
js
int3
fisubrl
pop
add
fistpll
dec
je
xchg
in
push
pop
and
pop
icebp
mov
add
inc
push
daa
mov
popa
xor
repnz
bound
inc
and
hlt
or
xbegin
xlat
adc
mov
xchg
sbb
jno
and
mov
cs
push
sarb
outsl
push
mov
push
mov
push
dec
das
addr16
push
pop
pusha
shlb
fimuls
loop
mull
aaa
push
dec
or
add
leave
out
xor
mov
ret
sbb
pusha
repnz
cmc
sub
cltd
add
or
or
testl
jb
mov
repnz
sub
push
xor
adcb
fwait
mov
cwtl
xchg
hlt
insl
add
sub
add
fnsave
mov
lock
lock
mov
jmp
mov
enter
inc
out
or
mov
ret
pop
out
mov
ja
std
sub
lret
add
fucomi
stos
les
push
das
cmp
mov
inc
mov
inc
stc
js
dec
movl
xor
push
adc
mov
push
test
rcrb
mov
mov
pop
add
fldenv
inc
xor
mov
call
fisttpll
inc
sub
pushf
xor
mov
call
xorb
mov
dec
xor
daa
mov
stos
js
xchg
cmp
sub
bound
dec
stc
je
adc
ret
loop
stos
insb
aam
mov
out
cmpsb
push
fyl2xp1
cmp
inc
inc
cmpsb
in
dec
pusha
jl
inc
pop
add
inc
insb
or
sub
mov
in
push
inc
loop
push
adc
or
ds
aam
cmp
pop
add
xchg
mov
mov
or
adc
stos
pop
ja,pn
mov
faddp
and
leave
loope
out
mov
or
inc
loop
jo
or
mov
mov
insb
aad
cs
hlt
rorb
mov
int
xor
add
jle
mulb
pop
stos
mov
adc
inc
xchg
mov
sub
bound
or
aam
inc
divl
xchg
and
dec
clc
aas
pop
sub
cmc
adc
adc
pop
test
lret
jne
dec
and
xchg
push
int
cmp
inc
cmp
ret
pop
pop
divl
movsl
sbb
jl
and
jns
or
loope
add
xchg
sbb
mov
cmp
pop
push
movsl
jmp
mov
mov
adc
repnz
mov
in
adc
pop
mov
inc
xchg
push
aaa
mov
add
sub
push
push
xchg
push
cmpsb
push
pop
outsl
hlt
add
xchg
and
mov
stc
fiaddl
pop
call
cs
mov
or
loop
inc
or
out
mov
test
and
das
mov
push
out
mov
xor
outsl
cli
or
xlat
clc
pop
sbb
mov
jmp
std
jmp
adc
mov
push
adc
sub
push
add
addb
lea
adc
call
and
xor
lock
movsb
addl
push
ret
adc
cmpsb
mov
jo
or
dec
daa
add
lret
ret
sub
jle
fwait
mov
pushf
iret
sahf
sar
insb
andb
xorb
ds
scas
jne
aam
fstpl
or
cld
aaa
jne
add
push
sub
movsb
test
decl
mov
cmc
pushf
push
aam
test
sbb
xchg
leave
or
pop
popa
jnp
andl
xchg
addb
mov
fisttps
pop
cmp
pop
adc
je
adc
jnp
push
jnp
mov
and
sar
mov
jg
xor
xor
push
push
cli
mov
xchg
lock
inc
cmpsb
popa
pop
xchg
mov
pop
push
xchg
leave
inc
cld
stos
sub
test
sbb
and
movsb
bsr
inc
and
addr16
fcomps
repz
adc
pop
dec
adc
sahf
addb
dec
imul
or
data16
pop
fadds
mov
lcall
push
addl
fnsave
cmpsb
inc
mov
sub
sahf
push
or
mov
jp
cld
mov
fwait
and
mov
incl
adc
repz
leave
addl
mov
popf
fldenv
outsb
mov
int
cmp
int3
jo
cli
ja
es
add
adcl
lahf
xor
xor
out
sbb
sub
rorl
cmpsl
subb
scas
cmp
lock
jmp
dec
mov
lea
inc
fdivl
pop
dec
sti
and
js
enter
sub
xchg
arpl
cmp
or
shrb
jne
xchg
sbb
call
mov
in
inc
insb
test
iret
dec
jl
xchg
push
mov
fildl
push
xchg
push
and
push
push
mov
jns
dec
pop
lcall
mov
inc
mov
mov
jno
js
jns
jle
mov
ss
aad
es
sahf
ja
sahf
lahf
adc
push
mov
test
xchg
sti
add
data16
mov
cmpl
mov
pop
hlt
add
xlat
add
sarl
scas
sub
in
faddl
addr16
mov
ret
loope
ds
out
pop
pop
jle
into
mov
fcoms
pop
push
sub
mov
cs
add
repnz
lock
lret
xor
sub
xchg
inc
jp
pop
mov
sbb
xor
bound
xorl
loop
imul
mov
push
repnz
add
inc
mov
xor
jg
inc
aam
ret
das
adc
jo
add
jbe
bound
aaa
jae
sub
es
cmp
xorl
aad
jmp
xor
push
lock
loop
adc
adc
stos
xor
lods
icebp
lock
xor
cmpsb
out
fldcw
mov
dec
mov
sub
xchg
loopne
mov
dec
fstps
dec
mov
fdivs
xchg
mov
inc
xor
inc
inc
add
or
and
iret
inc
pushf
lcall
clc
sbb
mov
sbb
inc
fsubrl
shr
cmp
jo
pop
mov
sbb
xchg
sbb
jbe
pop
sub
out
dec
jne
mov
jmp
out
loopne
fdivrs
and
frstor
add
cmp
ret
and
test
fadds
mov
popa
sbb
repz
decl
add
mov
lcall
inc
mov
inc
ret
xchg
inc
jb
mov
dec
jmp
fdivp
data16
movsl
add
or
or
push
loope
inc
push
fwait
movsl
cs
fbstp
inc
push
cmp
cmp
pop
stos
movsl
movsb
dec
inc
xchg
pop
rcrb
lds
daa
cmpsb
ficomps
in
xchg
adc
and
dec
sbbl
es
xchg
mov
mov
push
mov
push
fldt
mov
adc
xor
cmp
outsb
aas
cmp
cmpsw
xor
rolb
cmc
pop
cltd
pop
and
cs
push
iret
mov
adc
push
sub
pop
clc
add
mov
cmp
loopne
lods
and
push
rcll
in
sti
fdivp
mov
cltd
std
cmpsb
jmp
int3
lods
imul
stos
or
sahf
mov
dec
inc
orb
rcll
mov
push
mov
jmp
jbe
mov
dec
pop
xchg
xchg
add
xor
cmc
dec
inc
fldt
jno
div
push
jne
pop
js
mov
loop
push
sbb
mov
mov
fiadds
ja
leave
sbb
aaa
jmp
insb
pop
xor
dec
out
inc
mov
lret
push
xchg
or
cmp
push
ficoms
insl
aam
loope
mov
mov
dec
jb
call
jb
mov
mov
sarl
xchg
sub
mov
rclb
pop
dec
push
fwait
or
pop
pop
cmp
imul
inc
mov
inc
aam
sahf
scas
fcmovnb
loop
and
in
sub
pop
in
add
or
pop
lcall
out
add
fwait
imulb
cmp
pop
leave
nop
jne
inc
sub
xchg
pop
inc
dec
fadds
or
push
pop
push
or
add
mov
jnp
pushf
sbb
jmp
inc
dec
sub
add
dec
push
mov
pcmpeqd
cs
mov
stc
ss
jne
sbb
pop
sbb
cmc
icebp
xchg
and
or
xchg
sbb
mov
out
pusha
and
push
stos
and
in
inc
jl
ja
out
mov
mov
mov
or
and
rorb
aam
pusha
sbb
inc
sbb
popa
cmp
pop
sti
push
incl
iret
xor
dec
lea
add
jg
jno
stc
fcomip
pusha
push
cmp
or
sbb
jnp
ret
or
lods
test
jns
mov
inc
pop
jle
cmc
push
negb
add
and
mov
in
sti
inc
sar
dec
xchg
mov
cmp
test
ret
push
jno
cmp
add
in
test
cld
idivb
and
xchg
movsl
addl
enter
mov
movsb
xor
xlat
add
or
mov
out
pop
pop
stos
incl
inc
pop
lahf
imull
inc
pop
xchg
mov
xlat
test
int
repz
jle
cmp
ss
js
lods
mov
js
mov
sub
daa
jne
leave
cltd
push
movsb
imul
or
sbb
mov
xchg
mov
adc
movsb
cld
aam
andl
pop
mov
cs
jmp
inc
inc
sub
mov
inc
xlat
test
pusha
dec
ss
call
cmp
cmp
imul
sub
push
push
fs
fiadds
pushf
lock
xchg
out
mov
das
and
dec
out
andb
aaa
loopne
ret
mov
icebp
fwait
pop
xchg
inc
movq
dec
xchg
ficoms
and
fadd
push
into
sarl
test
lret
sbb
test
xchg
jno
adc
call
pushf
loope
aad
and
lea
push
gs
es
add
mov
fidivs
out
test
fimuls
adcb
add
clc
sbb
rorb
mov
rorl
enter
inc
clc
pop
xor
rorb
fs
pop
sbb
sbb
cwtl
jns
mov
lea
ret
mov
sbb
push
outsl
gs
or
add
sbb
push
daa
xchg
subb
or
push
loope
insb
add
cltd
cmp
pop
mov
ret
add
inc
je
or
add
push
push
movsl
dec
call
jg
push
les
mov
jnp
mov
out
stos
mov
and
ret
out
dec
inc
clc
jne
fwait
cmc
shlb
scas
add
inc
cmp
inc
cli
test
sbb
call
xchg
movaps
fcomp
xchg
mov
mov
sub
xchg
sub
arpl
add
jbe
rcll
dec
xor
or
fadds
cmp
jo
sbb
lahf
sbbl
or
ffree
and
cmpsb
cmp
out
stc
push
or
sub
dec
push
stc
add
sbb
inc
push
rcr
inc
sub
or
and
pop
scas
mov
push
pusha
adc
jns
stos
adc
jge
inc
jne
mov
mov
in
sub
sahf
fistl
cmp
or
lcall
call
hlt
pop
imul
and
fstps
add
pop
iret
shll
or
dec
add
lds
int
lcall
or
adc
or
and
push
loope
sbb
or
mov
pushf
loope
ss
jmp
or
jno
inc
loopne
add
jno
fdivr
jge
cmp
jp
call
inc
mov
sahf
flds
jge
popf
notb
out
xor
lds
stc
test
inc
lods
sahf
adc
test
mov
fisubs
lret
sbb
mov
xor
xchg
imul
hlt
adc
lods
fistpl
js
sarb
adc
push
rcr
imul
xor
jmp
mov
cmp
ja
sub
icebp
sub
mov
jecxz
sbb
xor
ds
cmp
fstps
fldcw
mov
mov
and
pop
add
sub
je
lods
ret
xchg
and
enter
hlt
sti
gs
int3
jno
inc
lret
jb
sub
je
rcrb
insb
rorl
mov
sbb
jmp
shrb
cwtl
sbb
clc
pop
data16
dec
jg
js
js
sub
out
fnclex
int
pusha
jmp
addr16
push
pop
push
xor
or
or
xchg
mov
out
pusha
das
js
out
testb
or
xchg
xchg
sub
dec
cmc
loop
lcall
jns
sub
xor
cmp
test
lods
pusha
sbb
mov
sub
xor
jbe
in
pop
pop
adc
cmc
cmp
push
push
pop
call
push
loop
xchg
mov
jecxz
clc
call
in
aad
fdivrp
js
sbb
sahf
pop
push
and
rcrl
pushf
push
loope
loope
jmp
sahf
fsubrs
or
loop
mov
movl
mov
outsl
dec
inc
inc
ja
mov
mov
push
push
pushl
jae
sub
jg
jb
es
xor
pop
ffree
mov
xor
insb
jae
push
add
ret
jbe
mov
xchg
inc
lock
mov
and
add
test
rolb
adc
inc
mov
addr16
jb
rol
pop
loopne
adc
sbb
pop
mov
mov
ret
out
ja
mov
dec
ljmp
ljmp
ja
cmp
cltd
popa
and
add
mov
cmpb
fcomi
pop
pusha
aas
out
imul
repz
je
xchg
mov
push
ret
pop
pop
add
pop
pop
sbb
inc
outsl
sbb
pop
push
jle
addb
cmp
ret
jno
ljmp
insb
sub
mov
loopne
movsb
ds
or
mov
cmp
xor
jo
sub
adc
and
jno
mov
xor
fidivrs
mov
add
add
js
daa
pushf
cwtl
jg
dec
outsl
add
push
jo
sbb
jmp
icebp
fbld
mov
pop
jg
imul
outsb
sbb
add
inc
fs
pop
cli
in
xchg
cmp
cmp
nop
push
fcoml
imul
aad
dec
adc
dec
sbbb
punpckhbw
mov
jnp
cli
repz
cmpsl
rol
or
add
push
sbb
outsb
aam
inc
xor
mov
inc
xchg
mov
cli
xor
shrb
cmp
nop
jo
fcompl
mov
addb
xchg
mov
push
mov
pushf
sbb
pop
movsb
hlt
adc
cwtl
lock
and
repz
enter
popa
jl
hlt
in
jmp
adc
jecxz
dec
cmpsb
push
xchg
test
pop
divl
inc
sbb
or
dec
or
in
xchg
ljmp
xchg
ljmp
cld
mov
mov
mov
xor
loop
mov
mov
inc
lock
pop
aas
add
dec
and
loope
bound
ds
bound
mov
push
xor
pop
mov
adc
lea
cmp
outsb
insb
or
pop
inc
mov
and
adc
add
fistpl
adc
pop
sub
call
sub
push
push
push
int3
mov
popl
jbe
xchg
inc
mov
shl
in
shr
jnp
and
jbe
idivl
xchg
ja
scas
add
in
loopne
push
lods
xchg
jecxz
lea
ss
fwait
cwtl
add
or
mov
jns
sbb
inc
shlb
fsts
sbb
or
mov
aam
jo
out
cmp
xchg
mov
sub
sbb
pusha
mov
and
mov
mov
lock
jecxz
push
je
jns
and
add
icebp
fidivrl
mov
insb
jmp
jns
cwtl
inc
mov
fwait
jg
mov
in
clc
out
pop
outsb
pop
pop
cmp
pop
dec
and
cmc
mov
cld
add
jp
xchg
xor
pusha
sub
mov
xor
int
cmc
mov
cmp
adc
xlat
push
sahf
sub
sub
loopne
and
in
cmp
lahf
or
adc
lcall
adc
lods
adc
enter
sarb
inc
rolb
adc
push
mov
mov
ror
fadds
inc
addr16
ljmp
shr
mov
aam
movsl
xor
in
ljmp
mov
mov
or
push
cmp
sbbb
jo
mov
stc
idivb
popa
sbb
inc
in
jo
jno
mov
and
add
in
test
push
inc
sbb
jb
sarl
and
sub
or
cmp
add
das
sbb
addl
fmulp
inc
nop
lock
mov
call
xor
push
icebp
push
js
lahf
adc
and
mov
push
or
rcl
mov
inc
mov
xor
pop
mov
xor
cmp
mov
pop
fstpl
push
repnz
ss
insl
xchg
inc
cmpsl
xor
xchg
ret
xchg
shlb
mov
aaa
cmpsb
ss
cmc
jmp
pop
in
push
jl
pop
test
aas
shlb
xchg
jbe
sub
pushf
and
push
push
divb
test
add
icebp
sarb
andb
mov
std
les
ljmp
test
mov
enter
in
test
lret
icebp
loope
dec
sbb
push
jno
mov
mov
fisubrs
pop
jp
lock
je
push
jmp
mov
out
xor
insl
call
in
sub
adc
inc
and
fldl
mov
inc
aaa
mov
sbb
lds
mov
push
push
fldl2t
imul
cmpsb
pop
or
jecxz
sbb
mov
adc
imul
out
fisttps
and
int3
jp
mov
and
movsl
adc
jo
mov
loope
dec
mov
push
insl
loope
pop
leave
dec
std
sbb
fsubrp
sbb
lcall
bnd
add
jo
mov
pop
fnsave
mov
add
or
dec
sub
push
jb
jl
stos
push
std
cmp
push
pop
xchg
les
mov
cwtl
outsl
insb
push
xchg
cli
mov
xchg
sub
sbb
mov
pop
push
dec
insb
ret
call
mov
fsubp
pop
push
push
and
mov
hlt
or
adc
shll
movntps
lock
les
lcall
mov
inc
or
add
lds
jno
lcall
lret
pop
movsl
adc
shl
ljmp
sbb
xor
loop
cli
ss
mov
imul
dec
test
push
mov
adc
mov
push
test
push
jo
cmp
jo
dec
insl
mov
mov
adc
push
insl
add
lock
fisubl
cmp
mov
push
and
mov
bnd
mov
pushf
leave
adc
mov
clc
int
std
sbb
mov
xor
fisubl
xlat
lds
loopne
push
cmp
mov
mov
xchg
mov
mov
rcl
rolb
lahf
push
xor
sub
mov
mov
xchg
lock
pop
adc
rorb
mov
ljmp
mov
push
imul
xor
dec
call
mov
rorl
dec
pushf
sub
mov
cmp
xchg
filds
imul
adc
repnz
push
movsb
adc
sub
pop
popl
jnp
call
ret
add
push
cmpsb
mov
sbb
xor
scas
or
insl
rol
push
in
push
adc
aam
insb
inc
mov
and
adc
push
pop
cld
add
add
sarb
jnp
sbb
test
add
data16
xchg
shlb
ljmp
add
or
addb
inc
test
iret
add
xor
jmp
hlt
xchg
xchg
lock
adc
decb
mov
dec
push
insb
jo
sbb
sbb
jo
jne
aaa
mov
lock
lret
cld
dec
addb
dec
xlat
pop
mov
mov
jmp
nop
movsl
mov
call
push
or
nop
out
pushaw
sbb
sbb
mov
aad
sbbl
ret
push
lret
xor
jp
pop
fwait
js
es
enter
cltd
push
addb
enter
mov
shlb
shrl
sub
push
outsb
in
push
ret
adc
jp
sbb
and
push
nop
xor
rclb
inc
leave
dec
testl
fidivl
sub
xor
add
add
sub
addr16
push
xor
mov
mov
xchg
cmp
cs
ds
cld
dec
orl
rcrb
enter
push
dec
imul
jecxz
movsb
sub
cmpsb
movsb
decb
pop
pop
cmp
dec
xchg
dec
outsl
cld
mov
push
fiadds
in
popf
sbb
sbb
jl
shrl
pop
jae
mov
aam
and
adc
inc
xchg
jns
add
lods
push
movb
xrelease
daa
mov
sub
push
mov
or
fbstp
mov
push
jg
in
xor
out
int3
test
cmpsb
jmp
mov
js
clc
sbb
or
cmc
pop
popf
inc
in
outsl
and
add
movsb
test
mov
imul
push
rcl
shll
adc
es
add
xor
ret
test
push
xor
mov
xchg
test
out
cmp
inc
cld
mov
mov
cmpsl
cmc
loope
push
inc
jmp
lods
int
mov
jnp
sbb
push
paddsw
ljmp
push
imulb
rdmsr
push
or
xor
mov
shl
fimuls
sbb
arpl
enter
rclb
fwait
aam
insb
pop
cmp
mov
movsl
xchg
shr
mov
ljmp
lea
add
pop
inc
xchg
push
mov
jnp
aad
push
in
daa
fdivs
es
mov
js
dec
aas
je
pop
add
icebp
add
cmpsl
push
rorb
loop
jmp
gs
loope,pt
sub
repz
or
jmp
ja
lods
popf
es
push
dec
pushf
fs
ja
jmp
bound
les
push
stos
inc
and
mov
shlb
dec
push
fsubl
cmp
sbb
mov
lcall
mov
lcall
out
mov
adc
loopne
fwait
pop
dec
and
mov
loope
call
xorb
mov
mov
push
mov
loope
and
mov
or
inc
pop
aad
es
dec
and
mov
out
mov
inc
fdivrl
sub
test
ds
dec
iret
popa
inc
orl
xor
cmp
pop
fstpt
lods
cmc
xor
sarb
fimuls
mov
jnp
dec
out
test
push
sbb
xchg
jmp
call
ret
aad
push
mov
push
addr16
enter
or
je
push
sub
sub
aas
int3
xchg
add
lcall
out
insb
xlat
dec
cmpxchg
ss
inc
negb
addl
cmpsb
sar
out
hlt
add
mov
cmp
sbb
xorl
mov
insb
jbe
pop
or
mov
sbb
insl
stos
xchg
testl
mov
or
xor
dec
or
cld
sbb
stos
cmc
add
and
xchg
in
push
and
out
cmp
andl
fs
divb
dec
push
inc
js
sub
pop
push
cli
paddw
scas
pop
inc
mov
xor
inc
adcb
push
dec
jmp
cmp
inc
loop
or
aaa
adc
in
iret
fs
mov
or
inc
adc
and
and
iret
int3
mov
bound
loopne
sbb
call
sbb
lock
or
fs
push
push
adc
jecxz
or
leave
dec
insb
cmp
pop
imul
fdivs
cmpsb
test
add
or
add
mov
mov
mov
sbbl
fimull
pusha
sub
addb
xchg
mov
ret
add
stc
sbb
jmp
sub
add
shrl
shl
cmpb
inc
movsl
xorl
add
scas
sbb
lahf
fisttpl
dec
xor
aad
out
or
push
jb
iret
aas
jl
xor
rolb
scas
sbb
add
adc
sbb
jb
adc
dec
xor
es
pxor
ret
inc
cld
divb
jnp
inc
cmp
xor
out
inc
dec
mov
mov
pop
push
sarl
cmp
jle
int3
pop
sahf
clc
add
fists
pusha
mov
pop
call
call
adc
call
rcr
or
gs
inc
xor
inc
sub
mov
xchg
jl
lods
test
jnp
inc
sbb
cmp
mov
mov
sub
push
pop
bound
or
pop
cmpb
xor
nop
push
adc
sub
out
pop
mov
mov
pop
lahf
add
push
lret
adc
push
xchg
mov
and
inc
adc
or
inc
xchg
adc
xor
lods
cmp
mov
mov
sbb
cmp
in
mov
sbb
insl
push
int3
out
mov
movsl
pop
icebp
xor
or
mov
js
lea
push
notl
xor
js
shrb
leave
fnsave
insl
pop
out
add
lods
push
enter
pop
push
inc
sub
sbb
les
hlt
fnstsw
dec
lock
sub
filds
jbe
pop
add
rcrl
dec
shlb
jecxz
or
test
sahf
rcl
adc
fisubs
popa
cs
in
mov
mov
bnd
and
lcall
cmp
loope
sbb
inc
aad
cli
js
pop
mov
xor
mov
lea
pop
push
push
sbb
mov
xlat
fcmovbe
push
les
loope
stos
push
mov
ret
push
rcll
pop
add
push
mov
stc
xchg
push
ficomps
and
imul
pop
adc
sbb
mov
roll
jne
shll
dec
int
int3
cmp
jns
xchg
xchg
out
ret
rorl
mov
std
sbb
cmp
call
xchg
pop
cmp
push
hlt
mov
mov
fstl
enter
test
mov
mov
bound
in
jnp
or
stos
jg
insb
lods
or
xlat
sub
mov
sub
and
xchg
push
or
add
fcmovnbe
pop
mov
lea
xchg
add
jmp
sub
movsl
repnz
add
orb
xchg
xchg
inc
imul
into
dec
mov
out
dec
sub
sub
addl
push
lret
in
xchg
aaa
add
loopne
lods
out
inc
loop
fisttpl
push
addb
cmp
inc
rol
jnp
dec
cltd
ja
inc
shlb
inc
dec
leave
or
cmp
imul
je
pop
test
dec
jmp
lret
in
jl
push
mov
inc
push
sbb
mov
jmp
push
cmp
xchg
push
inc
mov
aad
sti
adc
ja
mov
arpl
xor
sub
ljmp
and
cmp
adc
stos
mov
jl
lret
xchg
loope
push
insb
ss
stos
lcall
loop
imul
repz
outsb
mov
push
pop
push
bound
adc
nop
sbb
hlt
and
aas
add
jle
idiv
sbb
cltd
fcompl
insl
and
mov
loopne
inc
dec
or
je
inc
fstpt
or
mov
jge
ds
testb
add
jp
clc
or
push
or
enter
pop
outsb
pushf
or
clc
cmp
ret
fs
cltd
test
pop
sbbb
lods
dec
add
pop
push
mov
pop
pop
sbb
ljmp
dec
rorb
fstpl
push
testb
sbb
out
cmp
jbe
incl
xchg
mov
inc
pop
outsl
std
adc
adc
cmp
mov
dec
mov
lret
lods
mov
dec
mov
sbb
out
inc
js
push
rclb
aad
xchg
mov
cmp
add
cmp
cs
or
clc
mov
jmp
pop
dec
jno
pop
xor
repnz
mov
sub
shlb
mov
jp
rol
xor
and
mov
pop
lock
jo
loope
es
test
sahf
adc
pop
add
ficoml
and
push
fs
mov
mov
cmp
popa
jmp
mov
pop
mov
push
cmp
sahf
fdivr
and
mov
lods
add
loopne
out
fstl
pop
andl
out
adc
pop
or
mov
mov
fs
inc
mov
sbbl
mov
aaa
mov
dec
cmc
jo
xchg
lea
push
adc
inc
inc
iret
cmpsb
cmp
stos
sbb
pop
fs
sbb
out
ja
mov
neg
mov
cmpsl
dec
lods
ljmp
out
sub
ljmp
shrb
push
lods
std
push
arpl
push
lahf
hlt
jb
cmp
pop
add
leave
mov
pop
push
aam
cmp
jne
ds
pop
mov
push
mov
bound
rol
cld
push
repnz
pop
bound
mov
cld
dec
or
idiv
pop
or
dec
push
in
lock
das
pushf
cmc
adc
fistpll
cmpsl
or
or
dec
stos
nop
push
loop
icebp
stos
add
xchg
dec
mov
push
push
test
je
xchg
rorb
or
xchg
ja
ret
pushw
scas
mov
push
and
push
ret
int
pop
xor
sub
inc
adc
lock
shrl
test
or
adc
dec
cli
orb
or
push
cmp
push
pop
sbb
lcall
pop
fiadds
dec
in
inc
and
adc
jmp
scas
cs
inc
and
and
inc
push
fcom
addb
or
sti
sti
or
cli
dec
xchg
bound
loopne
push
lds
gs
pop
push
push
rorb
bound
hlt
lock
es
scas
outsb
jo
lock
dec
cli
int3
lods
fbld
inc
out
movsb
mov
jo
fbld
ret
dec
or
jae
rorb
es
ljmp
mov
cmp
add
fcomip
ljmp
mov
stc
out
mov
imul
outsb
push
xchg
cld
lahf
mov
cltd
pop
mov
pusha
add
insl
push
xor
into
push
movsb
popa
xchg
add
imul
cmp
hlt
xchg
jp
loopne
rcrl
rorb
inc
js
jne
push
push
fsubp
fwait
in
imulb
pop
cmpsb
clc
xchg
push
and
test
mov
movsb
mov
sbb
add
addb
call
xor
mov
inc
sub
ss
inc
mov
cmp
cmp
inc
mov
mov
sub
ss
in
notb
dec
xchg
push
sbb
aam
push
or
ds
out
jmp
fcoms
mov
push
sub
pop
jl
xchg
pushf
push
mov
or
pop
or
iret
pusha
daa
xor
jb
sbb
mov
and
dec
movsb
mov
out
in
adc
cld
mov
test
lret
icebp
pop
loop
pop
out
and
or
dec
lcall
xlat
imul
ret
adcl
xor
push
sbb
add
mov
mov
jo
lea
sub
subb
loope
clc
sahf
adc
into
loop
stos
adc
pushf
repz
je
xchg
push
ja
jg
cmp
int
mov
or
or
outsb
push
lcall
adc
mov
ret
hlt
jp
and
dec
pop
scas
fdivs
push
xlat
adc
cmp
fadd
dec
dec
scas
pop
loop
push
lock
mov
jmp
rclb
pop
outsl
or
ret
sbb
inc
mov
loope
sahf
arpl
lea
cld
sarb
cmpsb
hlt
mov
cld
aaa
add
int
and
cs
mov
push
in
mov
shl
adc
loopne
or
sub
filds
sbbl
dec
push
rorl
push
push
add
test
andb
fmuls
stos
push
dec
adc
call
loopne
jmp
call
out
xchg
mov
ljmp
xchg
mov
xchg
xor
loop
in
and
bound
leave
adc
mov
divl
jp
xchg
cltd
loop
call
je
lret
add
cs
jg
adc
mov
sub
inc
mov
dec
pop
mov
mov
jecxz
xor
push
loope
ja
sub
cmc
sbb
dec
jecxz
pop
out
and
inc
xorl
jno
int
cmp
and
xchg
xchg
jg
lock
inc
insb
push
lcall
pop
insb
in
jle
sub
out
cmp
cmp
inc
enter
jae
xchg
je
or
icebp
ret
cld
push
orl
lds
popa
fsubrl
dec
fists
adc
mov
mov
pop
lock
sahf
int
jmp
lods
push
pop
sub
pushf
mov
fs
mov
add
andl
popf
jl
xlat
xor
add
call
adc
add
cmpb
cli
jae
cmpsl
add
sub
imul
sbbl
pop
jmp
jge
pop
add
lcall
movsb
mov
cmp
outsl
xlat
clc
lahf
xchg
repz
push
sub
pop
pop
xchg
pop
loop
xchg
fxtract
movsb
sbb
lret
rcrl
push
fadd
pusha
int
shlb
rolb
push
inc
ljmp
gs
mov
stos
aas
popa
loopne
insl
cs
pop
and
imul
clc
lahf
dec
mov
xor
insl
cmpsb
cwtl
fists
inc
sbb
pop
leave
add
cmp
jecxz
in
jl
xor
jl
pop
decl
sbb
imul
aam
mov
lret
or
in
push
aaa
stos
or
fmull
mov
mov
mov
cld
inc
enter
repnz
ja
js
repz
decb
in
add
mov
add
stos
or
push
jg
mov
aam
fs
sub
ret
cmp
test
jno
fsubrl
dec
das
and
xchg
fimuls
and
pop
inc
popf
call
aam
mov
negl
mov
js
lods
dec
push
icebp
mov
push
sbb
sbb
arpl
jne
xchg
out
loop
add
mov
dec
ds
adc
loop
sbb
xor
lods
fucom
lds
popa
stos
insb
jl
add
stc
popf
cld
nop
jo
jg
jg
lods
jl
xchg
fisttpll
lcall
ficomps
mov
add
push
shr
cmc
add
or
sub
push
dec
call
lahf
cwtl
mov
pop
stos
xchg
scas
cwtl
insb
add
cld
in
imul
add
shrl
shr
push
add
lcall
dec
push
scas
shlb
pop
cwtl
stos
mov
mov
ds
leave
pushf
mov
add
test
sbb
add
fs
leave
and
push
pop
sub
ljmp
push
jge
adc
fidivs
add
pop
mov
pop
inc
jnp
cwtl
in
add
rolb
push
or
push
dec
pushf
in
inc
pusha
cmp
xor
ret
outsl
push
xchg
pop
mov
xchg
mov
insl
sub
and
iret
adc
inc
in
cli
addr16
rorl
push
pushf
in
je
cld
or
loope
hlt
inc
dec
incl
insl
call
fs
cld
inc
aaa
rcl
icebp
mov
mov
mov
dec
std
mov
sbb
push
jbe
aam
xchg
mov
cmp
dec
sbb
js
filds
test
and
out
mov
in
xchg
shll
push
pop
and
cli
das
pop
push
lahf
loope
int
sbb
clc
inc
jo
sub
aaa
adcb
pop
dec
mov
fmuls
cmp
push
loop
or
sub
xchg
sub
push
adc
sahf
add
and
pop
fisubl
or
outsb
add
lock
test
cli
add
sbb
ja
lods
aam
mov
enter
xacquire
push
sti
push
int3
pop
mov
add
jnp
addr16
jp
imul
mov
mov
sar
scas
ror
jge
popf
add
push
mov
in
call
push
les
loope
xlat
pop
adc
xchg
inc
fsubrp
push
xor
sub
mov
movsl
sub
jp
mov
mov
ss
pusha
xor
lods
sbb
pop
enter
sbbb
xchg
test
loop
pusha
cmp
out
mov
inc
xchg
data16
das
ret
sbb
testl
sub
enter
shrb
es
inc
scas
cmpsl
mov
add
push
push
clc
add
pop
pop
and
cli
add
jae
outsb
xchg
mov
pop
fdivr
movsb
cmp
xor
pushf
or
aas
test
ljmp
mov
push
cwtl
dec
mov
sbb
lods
cs
mov
out
ret
adc
add
jbe
or
inc
sbb
jle
sub
insl
add
sti
test
call
add
jnp
fbstp
test
js
fldl
fmull
divb
mov
push
xor
jecxz
fnstcw
dec
ror
data16
fldt
pusha
add
mov
ljmp
aas
stos
lods
push
lock
dec
mov
ja
fisttpll
mov
rorl
mov
add
mov
pop
pop
dec
cwtl
push
mov
pop
xor
ss
jg
sub
hlt
jno
jb
loope
fs
sub
in
add
pusha
xchg
jle
and
int
sbb
clc
mov
push
fsubrl
mull
cltd
cmpsb
pusha
dec
aam
sbb
jo
add
dec
add
fdivr
mov
xlat
or
dec
push
js
in
scas
or
xor
stc
fwait
jbe
leave
xchg
xorb
mov
mov
cmp
sub
ret
popa
es
fs
or
adc
pusha
dec
xchg
int
cld
or
push
pusha
int
cmpsb
add
mov
pop
jne
hlt
inc
pop
jg
mov
and
sarl
pushf
jmp
or
mov
lods
mov
mov
ljmp
shl
data16
ds
mov
jns
sbb
dec
jle
xor
mov
inc
sbb
pusha
rolb
mov
mov
pop
data16
mov
cmpsb
in
mov
lock
cmp
inc
andl
fwait
or
mov
into
add
sub
xor
mov
dec
aad
divl
hlt
lock
or
popl
sbb
pop
fs
insb
scas
add
out
imul
lods
pop
or
or
xor
xlat
sub
ds
mov
int3
les
dec
inc
lock
add
roll
or
dec
mov
xor
mov
push
xchg
sahf
pop
hlt
adc
cwtl
push
call
xor
imul
mov
fs
aaa
sub
mov
xlat
lods
lcall
pusha
and
push
cld
dec
sbb
and
ffreep
je
mov
inc
test
cmc
dec
jne
loopne
mov
sub
bnd
and
cmp
neg
test
sbb
popa
ss
push
sbb
or
outsl
lock
xchg
aaa
cs
mov
inc
inc
sub
movsl
push
popa
mov
test
popf
test
xor
fisttpl
add
jbe
fsubrs
cmp
cmp
out
aad
mov
mov
hlt
xor
lock
adc
lahf
sbb
js
loopne
addr16
pop
cmp
outsl
mov
mov
fdivrs
shll
mov
cli
pop
sub
jne
movsl
add
xchg
int3
push
les
mull
mov
mov
adc
inc
out
aaa
outsb
call
dec
inc
or
es
or
jmp
fwait
mov
add
out
mov
adc
fsubrl
xchg
cmp
cs
jmp
test
pop
movb
cmp
lcall
sub
loop
sarb
cmp
mov
hlt
or
repnz
mov
jb
into
shlb
test
push
ret
int
decb
sbb
into
pusha
mov
sarb
lods
outsb
sbb
fidivl
movsl
inc
sub
bound
cli
sub
aam
fiadds
add
add
out
push
mov
insl
roll
mov
cli
popw
std
bound
stos
mov
pop
in
dec
cmp
mov
rcl
mov
adc
or
test
push
push
and
dec
cmpsb
leave
test
nop
adc
lret
stos
shll
push
ficoml
inc
in
mov
in
or
adc
in
pop
negb
lods
adc
hlt
ret
xor
add
nop
jg
shlb
inc
js
inc
paddusb
cmp
or
inc
pop
orb
mov
repz
mov
dec
jl
cmp
call
fistps
ja
jmp
mov
or
js,pn
ficoml
roll
into
inc
enter
xchg
rorb
add
andl
cmp
cld
hlt
sbb
fdivrs
cmp
inc
and
hlt
and
pop
sbbl
int3
sbb
mov
cltd
test
mov
aam
push
sti
cld
idivb
cmp
in
fcomps
data16
int3
icebp
jne
mov
push
and
sub
ja
push
lret
fs
inc
push
push
xor
faddp
adc
mov
push
rol
test
cld
leave
hlt
inc
jle
cmp
outsb
xor
cmc
mov
adc
push
gs
xor
shl
sub
mov
or
sbb
cli
test
inc
leave
adc
outsl
jmp
flds
push
aas
adc
dec
scas
stos
jle
or
jb
mov
push
or
and
cmpsb
std
cld
push
mov
mov
inc
stos
pinsrw
add
adc
jo
push
mov
ss
es
int3
lds
test
push
test
repnz
mov
je
jl
sbb
ljmp
stos
add
cmp
or
push
cs
lret
push
fsubrs
les
shl
stos
mov
jno
sub
bound
adc
icebp
inc
sbb
pop
pop
adc
ja
sub
push
xlat
inc
mov
das
jp
mov
jae,pn
inc
test
sbb
lret
inc
adc
push
and
inc
int
mov
loopne
jl
out
shl
adc
and
add
fistpl
or
loopne
sub
pushl
sbb
push
aad
add
sbbb
cmp
xchg
fs
xor
sbb
mov
fcom
mov
insb
jmp
adc
insb
cmp
loop
sbb
faddl
js
jl
decl
stc
stos
jb
test
roll
data16
cli
push
mov
sbbb
cmp
add
mov
push
sbb
add
in
adcl
push
sbb
insb
pop
das
out
inc
loope
adc
mov
inc
daa
mov
sarl
out
hlt
stos
fwait
pusha
popf
fs
cs
lcall
arpl
pop
xchg
es
jns
adc
jns
outsb
fildl
push
push
add
aam
bound
jecxz
test
dec
data16
adc
jge
jnp
pop
or
pop
adc
xchg
test
out
cmp
notb
loope
rcr
pop
xor
and
xor
pop
push
fs
mov
out
or
or
fidivl
or
sub
xchg
pop
hlt
push
mov
ja
sub
and
roll
mov
xchg
jecxz
add
cmc
ds
iret
addl
call
adc
lret
aam
arpl
jg
jl
mov
mov
add
push
rcl
pop
rclb
movsl
xor
xor
xchg
inc
out
push
ss
push
orl
dec
jo
pusha
outsb
pop
pushf
inc
mov
out
clc
pop
xchg
mov
add
shlb
adc
loopne
mov
aam
xor
and
lods
adc
jnp
push
mov
cmp
inc
fisubrs
inc
popa
and
or
movsl
sub
out
enter
ljmp
sbb
iret
scas
xchg
lock
mov
stos
mov
dec
std
mov
inc
pop
xchg
les
test
xchg
ror
lock
daa
insb
call
lcall
or
pusha
test
les
fbld
out
adc
testl
push
es
test
xor
push
push
ret
push
jbe
into
fiadds
jb
sbb
ss
xor
test
mov
shll
pop
pop
out
sbb
stos
sub
test
dec
popa
out
xchg
loopne
inc
rclb
mov
push
push
in
shll
mov
shlb
cmc
mov
mov
das
inc
xchg
mov
mov
inc
ja
mov
cmp
pusha
xchg
ja
ds
test
mov
decl
and
add
cmp
xchg
and
mov
lock
and
mov
hlt
cmp
lcall
push
or
or
ljmp
pushf
bound
ss
inc
fnsave
xorb
mov
stos
or
mov
mov
xchg
inc
xor
push
xor
and
mov
mov
mov
pop
sbb
mov
mov
or
push
push
cli
sarb
add
movsb
aas
dec
sbb
inc
filds
stos
orb
xchg
fs
js
gs
cmc
ja
add
adc
in
sub
sub
lods
adc
cli
adc
orb
insb
jo
sub
roll
jp
stos
or
mov
dec
mov
xchg
in
push
mov
je
stc
push
add
pop
cmp
sbb
test
sbb
fs
insl
or
leave
aam
push
xchg
lock
dec
test
mov
sub
dec
and
in
mov
imul
xor
cmp
cmp
mov
loop
repnz
push
jl
loopne,pn
xchg
jb
or
insb
and
stos
adc
lret
call
push
je
in
inc
scas
insb
add
aas
cli
fucomi
jmp
sbb
lahf
js
loopne
in
insl
shlb
and
mov
incb
dec
fisubs
jle
pushf
outsl
xchg
inc
adc
adc
hlt
sti
xchg
shrl
jns
clc
inc
and
pusha
repnz
jnp
xor
inc
and
popf
hlt
shlb
stos
movsl
pop
sbb
lcall
ss
rclb
pushf
loopne
inc
and
scas
push
std
adc
adc
aam
aas
xor
mov
outsb
ljmp
dec
cmp
dec
bound
sar
out
jl
pop
add
pushf
fwait
sti
push
jb
dec
outsl
sbb
fsub
pop
stos
inc
inc
sahf
lock
and
mov
fwait
or
subl
sbb
popa
dec
push
pop
jbe
adc
test
call
cmp
jle
andl
add
stos
xor
lret
lock
jne
cld
subb
fsubrs
lret
inc
fcoml
xchg
fimull
fsubrs
imul
jle
sahf
mov
loop
lcall
out
fs
mov
clc
ljmp
inc
sub
push
xchg
push
loope
in
jge
and
push
or
jbe
daa
and
cmp
call
push
or
mov
cs
je
ret
sbb
pop
insb
ret
mov
sbb
adc
mov
mov
je
testl
or
xor
jecxz
test
lock
clc
loop
ja
daa
and
stos
lcall
scas
pop
iret
push
es
scas
cli
dec
out
cmpsb
mov
jmp
enter
lock
pusha
loop
pop
mov
hlt
mov
ds
jns
sahf
mov
js
ja
js
and
int3
push
je
icebp
pop
jp
push
add
out
out
dec
add
inc
cmp
test
call
gs
mov
mov
sarl
adc
jnp
mov
cmp
icebp
es
add
mov
in
loope
subb
mov
push
scas
test
cli
push
sub
mov
ret
js
sbb
sbb
xor
pop
rorb
xorb
push
into
test
add
dec
aas
jmp
sbb
icebp
outsl
cmpsl
push
mov
sub
xchg
lret
sti
or
fisttps
dec
cmpb
xor
cli
je
out
lods
shr
loope
out
cmpsl
pop
and
lcall
push
rcrb
add
das
jp
pop
fisubs
push
xor
cmpb
lea
xor
sbb
xor
sub
dec
push
xor
sarb
or
inc
or
fimuls
stos
rolb
lea
mov
in
push
push
xchg
adc
cli
stc
jmp
enter
add
xor
bnd
aam
adc
push
test
or
xor
fdivl
sarb
loopne
jp
dec
cli
or
mov
mov
add
cmpsb
ret
sub
cmp
fidivs
into
add
icebp
push
push
lds
sbb
fiadds
faddl
lret
repz
xchg
mov
ret
mov
push
das
cmp
or
mov
sub
sbb
jecxz
test
xlat
or
jl
sub
mov
icebp
sub
mov
jle
cmp
lods
shlb
je
aam
xor
fistps
cmpsb
idivl
movsl
shlb
dec
or
stos
fidivl
enter
xor
and
dec
mov
pop
push
or
sbbb
pushf
mov
mov
into
fmuls
lcall
popf
mov
jns
add
jne
movsl
outsb
cld
into
pop
test
pop
jnp
push
popa
mov
or
jg
lods
mov
loopne
push
jp
adc
mov
dec
adc
out
jne
add
pop
pusha
outsw
clc
mov
xchg
push
xchg
mov
scas
jmp
jnp
loopne
sub
mov
mov
into
rorl
ficoms
jae
cmp
mov
sarb
push
mov
rorl
lcall
loop
xor
push
mov
pop
xchg
push
mov
cmpsb
loop
and
and
jp
sub
pop
daa
pop
mov
sub
lea
mov
push
fstpl
inc
inc
add
mov
addb
bound
mov
mov
bound
ret
dec
enter
mov
add
and
mov
ds
adc
xchg
cs
jb
aam
movsl
or
xchg
and
mov
cli
cmpsb
mov
sbb
mov
addl
pop
xor
inc
push
scas
fisttps
inc
sbbl
mov
jmp
andl
and
pusha
add
mov
push
pop
jne
sbb
or
push
int
lods
mov
cmp
hlt
add
notb
cwtl
fldl
push
mov
cli
mov
dec
mov
jmp
or
adc
and
mov
cmpsb
cli
dec
into
cli
or
dec
inc
fucomp
and
ja
sarb
test
mov
inc
or
into
jl
shrb
pop
jb
leave
and
mov
test
add
aad
loope
fwait
cmp
out
inc
add
das
dec
push
subl
mov
mov
rorb
xchg
mov
dec
cltd
hlt
fucomi
pop
mov
ret
call
mov
sti
sub
shlb
lahf
mov
cs
loopne
mov
fidivs
inc
sub
add
aas
sbb
incb
ret
sti
jb
clc
lods
lahf
jl
jae
jbe
subl
cmp
pusha
shrb
ljmp
out
mov
or
shrb
cmp
sbb
xchg
mov
pop
lahf
push
push
pinsrw
and
dec
sbb
pusha
inc
lock
cmp
ljmp
xor
ret
cmpsl
addw
scas
xor
add
dec
stos
loopne
mov
xor
fistpll
inc
xchg
sahf
or
scas
mov
mov
adcl
jb
data16
mov
push
cmp
dec
dec
fstl
adc
cmp
lret
js
adc
cs
add
mov
test
into
xchg
mov
lods
sub
push
dec
sbb
push
shr
hlt
mov
test
pop
and
push
add
mov
xchg
mov
aad
pop
test
push
into
mov
dec
add
cld
mov
pop
loopne
daa
lahf
cmpsb
aam
xchg
mov
call
js
jno
mov
lods
mov
mov
adc
ret
inc
mov
lahf
test
mov
es
jno
jg
or
push
cmpsb
pusha
xchg
or
test
push
xorl
ss
iret
mov
in
aam
xlat
mov
sbb
clc
cmp
and
cmpsb
xchg
shlb
sbb
push
in
lcall
clc
cmc
xor
or
mov
enter
fmuls
push
lods
pop
jg
pusha
mov
sub
shll
cmc
adc
mov
or
push
push
fdiv
mov
sub
mov
mov
push
xlat
and
push
sub
enter
popa
xlat
push
cltd
jle
mov
xchg
pop
push
adc
insb
cmp
je
mov
out
sbb
shlb
dec
dec
push
dec
cmpsb
shrb
cmp
cmp
shlb
and
or
cmpsb
sbb
insb
dec
hlt
push
imul
mov
movsb
hlt
negb
clc
mov
xchg
std
adc
sbb
aam
subl
shlb
stc
jp
aaa
jnp
dec
lcall
loopne
shr
mov
and
sahf
js
mov
pop
and
jecxz
add
xchg
pop
add
loopne
stc
fmuls
adc
in
scas
movl
loope
dec
push
or
into
and
mov
sub
lret
adc
sub
or
mov
mov
mov
xchg
add
or
movb
pop
push
mov
or
je
push
sub
jg
mov
push
clc
sbb
fidivrl
or
fldcw
dec
clc
test
jecxz
das
adc
sub
test
mov
cmp
lock
mov
add
adc
xor
dec
jecxz
test
add
iret
mov
dec
rorl
dec
jle
pop
sbb
inc
inc
mov
add
movsl
ret
roll
sbb
nop
mov
xor
jle
pushf
or
xchg
lods
mov
dec
add
dec
ss
aam
cmp
push
arpl
sub
cmp
mov
mov
ss
sarl
xor
pop
test
lock
push
or
sub
jge
xchg
cmpsl
push
cmp
inc
pop
mov
sbb
adc
sub
push
mov
cli
mov
push
push
iret
rolb
fadd
cmpsl
cmp
dec
call
pushf
sbb
fwait
dec
pusha
imul
hlt
sahf
xchg
loopne
jno
aas
adc
mov
bound
or
in
add
and
movsl
xchg
je
gs
ret
cs
jo
movsb
test
jecxz
or
je
push
mov
push
mov
je
icebp
movsl
mov
cmp
mov
rcrb
xlat
test
or
adcb
in
out
push
in
adc
cs
mov
or
mov
movsb
jecxz
inc
pusha
jo
lcall
in
es
ret
stc
add
iret
aas
inc
xchg
and
and
test
xlat
dec
jecxz
pusha
sarl
fsts
push
inc
fcoml
sti
insb
xchg
inc
push
cmp
fs
call
mov
push
jecxz
popa
int
data16
std
ss
call
daa
sub
or
xor
add
push
nop
out
xor
hlt
imul
mov
and
loopne
mov
into
dec
and
mov
cmp
push
loopne
inc
bound
sbb
mov
out
fadd
stc
movsl
cmp
or
das
fcoml
aad
dec
push
pop
cmc
or
gs
in
fld
push
outsl
addr16
lret
xchg
add
bnd
aaa
mov
pop
hlt
mov
push
cmp
sahf
jb
loopne
mov
cmc
leave
sbb
inc
shll
cltd
xchg
inc
clc
cmc
ret
jae
ret
adc
push
cmpsb
mov
inc
clc
fimull
or
lret
scas
aas
or
xor
pusha
nop
push
inc
mov
test
leave
add
adc
cmp
xlat
push
ljmp
cmpsb
pop
mov
shll
out
cwtl
sub
ret
jp
or
sbb
subb
shll
sar
fisttpl
fdivrs
cmp
leave
jnp
ficompl
pop
add
cmp
pop
dec
movb
scas
stc
sahf
mov
inc
stos
iret
mov
sbb
rcll
mov
out
nop
pop
icebp
sahf
int
loopne
jl
sbb
cmpsb
add
cmp
cmc
mov
insb
and
or
cwtl
mov
das
fcomp
fsubrs
gs
add
jle
push
rorl
push
adc
pusha
out
out
fucomi
sarb
nop
sbb
lock
add
jno
rolb
inc
cmp
sub
ret
cmpsl
test
push
into
pop
or
je
fldcw
or
insb
icebp
es
test
cwtl
fnstsw
dec
stos
and
push
test
cmp
shrl
mov
aad
scas
call
loop
mov
std
cmp
stc
test
fisttpl
xchg
les
mov
out
sbb
mov
out
xor
xchg
inc
cmp
mov
jp
cmpsb
in
orb
fcomps
mov
ret
push
push
jl
mov
das
je
popa
cld
flds
add
lods
push
movsb
sbb
fimuls
in
and
shll
cmp
fiadds
pop
or
push
mov
sbb
and
fwait
add
cmp
pop
dec
mov
mov
xchg
mov
or
icebp
jne
or
xchg
or
cmp
xchg
mov
jle
sbb
cltd
xchg
addr16
out
insb
push
push
insl
adc
loope
stos
mov
sbb
fnstcw
push
cmp
shrb
mov
loop
mov
loopne
jl
lret
push
cmp
mov
adc
jb
pop
mov
push
push
nop
movsl
sub
pop
sbb
mov
out
loopne
xor
pop
jbe
jmp
movsb
rorb
push
inc
mov
push
pop
xchg
test
scas
fsubrl
adc
icebp
mov
jle
call
imull
iret
mov
cmp
add
xchg
mov
enter
addb
out
insb
sbb
jmp
enter
fsubrs
and
hlt
ljmp
mov
mov
iret
and
xchg
rcrb
adc
popa
rorb
aas
cmp
push
dec
or
adc
push
cmc
or
jle
xchg
xor
into
movsl
js
push
sarb
fiadds
xchg
stos
ss
jp
dec
ljmp
dec
cmpb
pop
lods
aam
mov
mov
lcall
test
pop
call
mov
lcall
rorl
mov
push
lcall
fs
outsb
add
mov
in
outsb
pushf
mov
mov
cmpsb
scas
push
or
mov
shl
stos
inc
sbb
lods
pop
insb
cmp
ds
notl
insb
pop
cmp
jnp
cmp
pop
hlt
mov
cmpsb
inc
xchg
inc
cmp
adc
ret
mull
mov
mov
jle
mov
push
iret
xchg
mov
dec
loop
or
outsl
add
mov
bound
sub
cmpsb
sbb
mov
mov
jmp
push
sub
cmp
incb
je
push
cmp
jbe
repnz
xchg
inc
fcmovb
mov
arpl
or
push
ret
fisubrl
enter
or
sbb
mov
icebp
mov
js
mov
inc
out
xor
test
pop
jbe
xor
add
push
pusha
pop
adc
sarb
or
lods
sub
cmp
loopne
loop
out
addr16
lods
xchg
scas
shlb
nop
dec
cli
xchg
js
lahf
movsb
jne
mov
call
cmpsl
jl
fcom
fcmovne
add
push
add
xlat
jns
or
or
rcl
rorl
orb
inc
test
dec
idivl
inc
pop
addl
push
mov
jl
lods
ret
dec
movsb
shrl
fisubrl
inc
jo
mov
int3
les
testb
and
popf
in
rclb
mov
inc
jge
inc
adcl
addl
out
jmp
in
jmp
add
in
cmp
sbb
shlb
sub
add
hlt
xlat
pop
out
pushf
outsb
jge
movb
or
out
into
int3
jmp
dec
add
inc
daa
roll
push
sbb
mov
push
mov
insb
mov
std
out
pop
insb
mov
addl
rolb
mov
push
push
push
mov
shlb
subl
add
adc
bound
jno
out
sbb
cmc
negb
cmpsb
and
jo
outsl
out
pop
push
push
adc
inc
out
adc
pop
inc
mov
sub
ljmp
iret
shll
fisttpl
mov
xchg
mov
lcall
and
push
std
movb
inc
nop
pop
mov
pop
push
or
dec
mov
mov
jge
push
test
push
adc
sbb
idiv
jmp
adc
jl
cltd
sbb
test
or
call
pop
mov
jp
into
adc
sbb
sahf
sbb
add
dec
scas
dec
sti
andnps
nop
or
add
jl
sbb
mov
dec
orl
add
mov
aam
xchg
ret
jo
adc
call
adc
pusha
pop
sub
movsl
icebp
jo
pop
sub
rcll
inc
mov
or
in
xor
fimuls
push
mov
ret
icebp
dec
jl
and
push
mov
test
rcll
jmp
or
inc
push
pop
mov
cmovl
dec
adc
stos
enter
scas
cmp
bound
popa
rclb
pop
negb
xchg
pop
lock
mov
add
sbb
pop
dec
and
pop
test
xlat
sbb
insb
or
push
jl
jo
push
pusha
pop
fcoml
addr16
ljmp
movsb
iret
push
lock
pusha
lock
inc
nop
mov
cmp
outsl
xlat
popf
jp
icebp
cs
cli
out
add
inc
ret
mov
dec
je
fcompl
and
jl
ljmp
lea
xor
or
mov
add
imul
sub
mov
das
jno
fs
add
cmp
js
mov
fiadds
fdiv
movsb
pop
aad
out
fwait
clc
push
mov
rorb
shrl
loopne
xchg
ds
sub
or
add
shrl
les
and
sbb
push
stc
cld
sub
mov
movl
sarb
mov
jg
nop
inc
mov
rcll
ss
xchg
andl
jmp
mov
jecxz
ljmp
push
mov
aam
inc
xor
pop
dec
mov
push
adc
cmp
bound
lea
shrl
xor
xor
mov
sub
mov
jp
lret
pop
pop
dec
mov
adc
call
shl
sbb
ret
cmp
subb
mov
out
outsb
sub
mov
push
push
jmp
push
enter
lods
out
push
into
cmpsb
test
sbb
inc
in
insb
inc
inc
cmp
mov
enter
int
out
inc
mul
lret
dec
popa
sub
je
add
push
adc
jne
movsl
movsl
gs
clc
lea
pop
lods
sub
jae
in
push
jmp
mov
sahf
test
sbb
jge
test
inc
shlb
insl
bound
test
mov
jl
mov
loopne
mov
push
dec
lret
sbb
popa
dec
jae
jb
sub
or
in
add
inc
mov
rcll
faddl
pop
fimuls
les
pop
push
inc
js
or
pop
lds
dec
mov
inc
les
sub
jmp
jbe
repnz
adc
fcom
add
sub
popf
subl
cmp
jb
add
sti
xchg
mov
xchg
xor
mov
add
aam
cmp
push
jle
mov
dec
add
ret
rorb
pop
inc
push
jecxz
adc
sub
aas
shl
add
push
add
int
adc
call
jbe
adc
add
jp
cld
aas
fcom
xchg
mov
out
sub
mov
add
aad
aam
pop
loop
sarb
cmc
pop
jbe
and
aam
loope
mov
ja
pop
mov
incl
dec
or
lock
cld
fs
xchg
repz
sbb
push
jmp
negb
mov
cwtl
pop
dec
repz
pop
test
pop
out
sbb
mov
aas
push
push
dec
add
cmp
divb
fsubrl
es
pushf
lret
jne
dec
mov
movsb
lods
pusha
mov
pop
mov
xchg
scas
cmp
mov
push
pop
leave
sub
dec
pop
lahf
stos
cmp
cmp
sbb
pusha
or
inc
or
adc
add
cmpsb
mov
repz
sahf
ds
out
mov
mov
rcrb
pop
and
xchg
jns
sub
lcall
jo
fcom
and
sbb
aaa
cmp
popf
pusha
loope
insl
push
cmp
or
out
dec
add
sbb
lods
jnp
gs
lock
enter
inc
lods
icebp
stos
sti
jg
and
mov
out
or
or
movsl
inc
push
call
inc
fldcw
mov
pop
dec
push
sub
nop
loopne
mov
call
xlat
and
lds
popf
stc
adc
shl
pop
mov
sbb
pop
xor
sbb
bound
xchg
lods
sbb
and
mov
adc
dec
mov
cli
adc
mov
push
jno
stos
scas
cmpsb
sarl
push
xlat
xchg
cmp
fucom
pushf
ret
leave
cmp
xor
dec
subl
stos
sti
dec
mov
loope
pop
inc
add
sbb
or
add
hlt
test
and
mov
dec
ljmp
sub
dec
idivl
pop
cmp
lods
add
mov
cld
or
dec
sbb
sbb
sbb
mov
loop
cmc
dec
sbb
dec
xor
mov
std
or
dec
mov
lock
sub
sbb
je
sub
cld
pop
pop
add
push
jecxz
imul
je
sub
mov
cmpsl
fmulp
call
mov
lds
mov
stc
sub
xchg
inc
jle
adcb
sbb
adc
push
xchg
pop
popa
loope
sub
js
cwtl
mov
lods
int
aaa
mov
gs
add
mov
dec
cwtl
add
sbb
repnz
push
push
adc
xchg
jp
test
outsl
fcmovu
adc
loopne
aaa
xor
movsb
mov
sub
insb
xchg
out
add
test
lods
cmp
leave
xchg
and
jge
jnp
shrl
out
push
sbb
mov
add
pop
mov
lock
call
push
dec
inc
sbb
lock
jl
jg
cmc
inc
sub
loop
jae
sub
push
xchg
div
push
mov
mov
xchg
dec
sahf
jmp
out
dec
enter
lods
movsl
fs
icebp
mov
lret
cmp
in
sub
cmc
xchg
shrb
push
xor
in
insl
arpl
fsubs
pop
shlb
mov
adc
and
sbb
xchg
cli
add
pusha
mov
movsl
jo
cmp
div
shll
mov
jo
adc
jb
adc
mov
cmp
jle
aam
pop
xchg
jbe
lret
cmp
or
mov
jno
mov
inc
ja
mov
clc
jp
lock
dec
or
add
sub
push
jp
cli
pushf
cli
push
lods
mov
stos
push
mov
call
mov
sbb
popa
dec
fcompl
jl
loop
adc
mov
out
icebp
icebp
xchg
and
mov
test
mov
add
sub
test
scas
das
rcrl
arpl
addl
xor
movsl
stos
movsl
inc
sbb
leave
cmc
sti
jp
sub
push
addr16
push
push
lahf
lock
test
dec
fwait
xchg
inc
jl
fimuls
dec
icebp
or
and
or
lcall
jb
ds
add
test
push
cmp
mov
shrl
popa
les
or
mov
in
sub
dec
cli
addl
nop
and
adc
ss
js
pop
dec
out
cmpsb
cmpsl
mov
dec
dec
arpl
scas
negb
mov
cs
jecxz
sbb
push
test
pushf
push
pop
mov
pop
adc
dec
je
in
test
sbbb
shl
sub
adc
push
xchg
jnp
jmp
sub
aad
fwait
jo
imul
add
add
vorps
imul
or
add
add
cmp
add
scas
rcr
cmp
stc
add
scas
movsb
sub
jo
jle
addl
popa
shll
dec
adc
js
mov
les
cld
mov
and
adc
xlat
xchg
hlt
dec
and
and
ficoms
fsubrs
adc
add
sbb
cmp
sti
lds
ljmp
or
enter
shlb
pusha
mov
fs
fisttpll
sub
fwait
push
out
jmp
xchg
fistl
js
cwtl
push
or
xchg
jo
scas
rol
xchg
shrb
dec
divl
push
sub
pop
inc
shrd
aas
xchg
xchg
lcall
sarl
iret
ret
lds
mov
push
stos
xchg
or
and
addr16
mov
mov
mov
lock
xorl
loope
push
cs
mov
call
loope
hlt
cs
fdivrl
fisttpll
enter
insb
add
cmp
lds
jne
leave
sbb
adc
pop
mov
dec
xchg
dec
mov
mov
stc
or
jb
fidivrs
or
xor
into
shl
jmp
jae
push
cli
lock
nop
inc
out
call
cmp
idivb
or
mov
mov
rcrl
push
add
call
cmp
dec
stos
push
aam
ja
je
add
stos
xor
aas
fcoml
movsb
pop
mov
mov
pop
or
sti
sub
mov
jge
out
mov
inc
inc
stos
scas
mov
ss
pop
pop
jnp
jns
mov
jo
sub
push
or
lock
or
out
add
pop
mov
cmp
popa
push
cmp
movsl
sub
push
js
push
movsl
xchg
pop
add
enter
out
mov
adc
int3
push
pusha
pop
xchg
inc
push
lods
sbb
testb
out
ds
mov
rcll
addr16
sahf
adc
sub
adc
sti
jmp
and
adcl
and
push
fldt
out
rol
xchg
daa
jne
jge
rol
cli
xchg
push
loopne
mov
out
jle
sub
or
lods
or
out
xchg
test
mov
inc
mov
sub
rclb
cli
data16
out
pop
inc
popf
mov
imul
sbb
add
and
rolb
pop
rcl
or
loop
fwait
or
add
sub
shll
daa
inc
out
add
cmpsl
je
lret
inc
ret
xchg
mov
repz
mov
push
mov
nop
adc
push
sub
or
pop
push
sbb
sub
dec
cmp
push
outsl
repnz
add
sbb
inc
inc
ret
mov
imul
sub
push
insl
call
mov
jge
shlb
dec
inc
stos
push
inc
hlt
iret
lods
sub
fdivs
pop
fldt
cmpsl
outsl
xchg
call
lock
mov
movsb
cwtl
sbb
ss
mov
repnz
loopne
repz
out
mov
rolb
adc
loope
neg
ret
sub
ljmp
scas
dec
xchg
mov
je
decl
sbbb
addb
or
icebp
test
hlt
imul
bound
xchg
je
add
jp
push
jns
icebp
sub
sub
cmp
popl
lea
pop
mov
dec
add
scas
daa
adc
push
cmp
pop
cmp
cmp
bound
xor
adc
cmp
mov
fwait
rcrl
cmp
pop
cltd
mov
xchg
sub
pop
fnsave
lret
stos
lock
cmp
cmp
jl
push
cli
jl
sub
movsb
outsl
je
pop
lds
out
and
sbb
lea
loope
sahf
out
xor
movsl
nop
cmp
xor
stc
cmp
xor
call
ja
ljmp
enter
dec
sbb
push
pop
xor
das
jg
aas
xchg
adc
lcall
and
mov
pop
mov
add
out
bound
jne
arpl
mov
add
aaa
mov
dec
imul
lods
popa
les
stos
icebp
cli
xchg
and
mov
sub
mul
popf
cmc
fs
adc
pop
sbb
je
jo
dec
pop
mov
sarb
push
jo
cwtl
ss
jno,pt
add
adc
or
jae
adc
leave
leave
xlat
lds
sub
stc
xchg
push
lret
inc
je,pt
aaa
and
xchg
dec
sbb
jnp
dec
dec
xor
mov
mov
xchg
or
stos
std
mov
inc
cmc
add
icebp
hlt
nop
xor
push
push
leave
push
sub
sub
or
and
popa
rorl
mov
out
mov
cs
xchg
aam
rorl
bound
mov
enter
js
mov
stos
push
jmp
dec
mov
push
mov
cmp
std
imul
clc
mov
clc
sbb
shl
fldl
sbb
sar
inc
inc
jg
mov
jge
add
jo
push
lcall
cwtl
xchg
xchg
loope
gs
pushf
inc
out
xchg
cmp
xchg
or
push
mov
popf
mov
push
mov
push
cmp
inc
jp
std
jecxz
jno
dec
push
orb
xor
push
or
in
push
push
mov
je
dec
jp
mov
lret
mov
jl
mov
movsb
pop
ret
pop
cmp
scas
mov
mov
or
xchg
pop
push
call
pushf
sbb
or
mov
mov
and
cmpsl
cmpl
ret
aad
icebp
sbb
mov
out
jno
push
movsl
xchg
and
sub
js
testb
lea
sub
dec
cmp
inc
dec
cwtl
push
test
and
out
mov
lock
jo
add
test
fdivr
jo
dec
push
gs
jge
or
repnz
jns
lret
inc
mov
inc
cmpsl
dec
push
aad
scas
scas
mov
lret
fists
sti
shlb
push
mov
ljmp
or
sbb
push
add
mov
add
scas
add
mov
shrl
sbb
out
mov
inc
loope
sbb
fdivrs
sbb
and
loop
and
mov
dec
pushf
sub
je
roll
sbbl
aas
sbb
lret
sbb
lods
jle
xchg
push
add
imul
sub
hlt
outsb
dec
or
pop
aaa
out
fldpi
cmp
test
mov
push
loopne
popa
outsb
push
mov
lcall
push
xchg
push
adc
hlt
icebp
jmp
inc
ds
or
push
pop
push
sar
mov
rclb
mov
xchg
and
sub
jge
movsb
and
mov
xor
imul
dec
in
sub
sub
jg
outsl
xor
loope
cmc
cwtl
xor
cwtl
cmp
add
dec
or
xchg
adc
and
sbb
scas
pusha
bound
mov
repnz
adc
pop
xor
sbb
ss
js
or
pop
or
pop
dec
pop
jge
insb
daa
pop
mov
jg
iret
xor
lret
adc
ja
dec
call
sub
jge
lahf
push
je,pn
insb
push
xchg
pop
scas
or
nop
push
pop
aaa
cmc
in
pop
lods
testl
push
push
ljmp
sbb
push
movsl
and
into
pop
mov
push
int3
addr16
cli
sbb
lds
movsb
sub
fidivs
loopne
inc
cmc
loopne
sub
addb
mov
inc
orl
les
in
and
dec
jl
or
test
call
mov
cmp
popf
test
repnz
gs
and
mov
orb
pop
dec
fistl
push
iret
push
roll
adcl
xchg
xor
jge
lock
or
std
aaa
stc
sub
lret
push
jmp
fwait
dec
arpl
in
xor
repnz
orl
mov
js
and
dec
fsubl
pop
imul
ret
inc
lret
dec
push
jl
subb
loope
dec
jo
push
cmp
sbb
and
xor
sub
aad
xchg
popf
pop
or
lahf
ds
pop
or
jmp
push
cmp
lods
js
cwtl
sbb
loopne
mov
dec
pop
mov
fcomps
dec
mov
imul
xor
add
mov
adc
sbb
push
or
mov
aad
out
dec
push
push
mov
aam
add
cmc
dec
mov
lds
ficoms
xor
xlat
mov
gs
lds
sbb
sub
or
xchg
jg
and
std
push
mov
sti
pop
sbb
clc
xor
xor
and
icebp
inc
ljmp
fcomi
inc
xor
hlt
mov
jns
jnp
ja
and
cs
sub
lds
push
scas
pop
popa
test
cli
xor
and
popl
ds
push
popa
scas
sbb
add
adc
icebp
push
pop
pop
jecxz
nop
or
movsl
addl
scas
add
ss
sbb
jg
mov
pop
pop
clc
popf
push
push
mov
inc
mov
pop
sbb
stos
data16
pop
lea
idivb
lret
xchg
adc
test
inc
push
das
sbb
imul
sbb
lea
mov
pusha
stos
add
and
jno
nop
insl
pop
push
fucomi
shlb
in
clc
js
fcmovnu
shr
push
xchg
mov
dec
cmp
mov
pop
cmp
inc
inc
xor
sub
xchg
or
sbb
iret
mov
or
or
les
inc
mov
imul
push
jle
sub
loope
and
into
sahf
push
test
ds
rclb
add
sahf
xor
loop
mov
loopne
xchg
lcall
sti
add
xchg
js
push
dec
inc
loop
mov
notb
cmp
divl
adc
mov
incl
and
lcall
push
add
adc
test
lods
int3
lahf
sbb
sbb
out
das
xchg
cwtl
fcomps
push
out
pop
call
cld
dec
stos
pop
stos
lret
and
rorl
sbb
out
std
cld
das
or
push
mov
inc
mov
jmp
pop
arpl
lock
mov
sub
in
lret
inc
or
jae
pop
test
pop
lcall
rol
jl
and
into
jb
dec
mov
mov
ret
dec
or
cltd
outsl
ljmp
movsl
mov
scas
jb
cmp
lods
sbb
enter
adc
mov
inc
popa
jae
add
push
dec
mull
add
out
jecxz
push
mov
sbb
mov
jge
inc
cmpb
int
imul
ds
cltd
pusha
in
dec
add
jg
sub
jge
in
out
xchg
inc
scas
add
mov
mov
inc
fprem
xchg
xor
sub
sarb
cmpsl
inc
sub
sub
pop
shrb
jae
mov
loop
push
inc
mov
inc
popf
or
neg
xchg
adc
enter
dec
pop
sub
shl
xlat
pop
icebp
push
js
pusha
add
lea
pop
ljmp
out
in
scas
xchg
inc
je
aas
push
int3
dec
ljmp
mov
aaa
rcl
imul
xchg
fdivrp
add
mov
and
aad
movsl
scas
cmpsb
dec
cmp
jns
andnps
cmp
jle
xor
xorb
jp
mov
jae
inc
cmp
mov
sbb
sub
pop
push
fidivs
inc
push
cmp
call
and
push
rol
jne
gs
sub
push
xchg
pop
or
sub
pushf
mov
fwait
and
fs
jae
negb
cmp
lahf
nop
ret
sbb
outsb
sbb
or
imul
sbb
inc
and
test
outsb
and
adc
pop
dec
mov
push
mov
hlt
int3
mov
sub
sbb
mov
mov
fbld
fldl
add
xchg
ror
jle
rorb
stc
sub
test
cli
out
lcall
or
into
dec
andl
xor
movsb
in
imul
insb
push
push
xor
imul
std
add
add
outsl
dec
push
jl
adc
nop
sahf
xchg
xor
popf
cmp
lret
inc
stos
adc
pop
insb
movsb
adc
mov
outsb
xor
mov
test
jge
ret
jg
and
inc
ja
aaa
add
jge
xlat
mov
inc
cld
dec
aas
cmp
data16
js
fidivrs
sbb
icebp
cmc
sbb
repnz
pusha
or
repnz
mov
incl
or
cmp
gs
fwait
je
and
fs
push
ljmp
rcrb
mov
lods
mov
mov
push
pop
fdivrs
push
arpl
inc
add
pop
mov
add
pusha
fwait
loop
sbbl
mov
pop
aaa
incl
add
rcrl
js
and
xlat
adc
jg
pop
movsb
or
enter
icebp
or
bound
pop
shlb
adc
xchg
scas
add
sub
mov
orb
or
push
cltd
adc
std
push
dec
sbb
pop
insl
cmp
fmull
inc
jnp
add
adc
imul
rolb
or
sar
jle
or
lods
lea
and
mov
jns
ss
push
jmp
loopne
push
push
ret
push
add
dec
imul
xor
mov
mov
int3
add
sahf
sub
dec
and
xchg
jo
jg
xchg
jmp
movsl
out
mov
push
xor
jne
ljmp
cld
sbb
ds
loop
add
hlt
inc
add
ljmp
aas
fsubrl
cs
add
cmp
xchg
jne
cmp
sub
insb
or
aas
adc
add
pushf
pop
push
shlb
mov
push
add
push
sub
mov
sbb
jmp
andl
cmpsl
movsl
loopne
dec
roll
loop
inc
push
dec
out
jge
les
loop
int3
adc
mov
inc
cs
push
daa
jge
push
push
dec
xchg
mov
cwtl
sub
push
mov
mov
cmpsb
push
rcr
cmp
outsb
or
pusha
test
subb
mov
ja
inc
je
sahf
daa
dec
jae
or
ja
inc
pop
push
gs
inc
jae
push
daa
loopne
test
test
mov
inc
xchg
mov
dec
jae
fwait
cli
mov
inc
and
ret
inc
mov
inc
push
mov
dec
xor
jle
mov
pop
push
in
in
xchg
pop
lea
icebp
inc
pop
imul
adc
clc
sarl
out
test
push
sub
xor
pop
test
scas
outsb
popf
add
push
gs
xchg
mov
not
ja
push
roll
xchg
mov
notb
rcl
mov
imull
or
idivl
xchg
jmp
mov
cmp
dec
pop
adc
jle
xchg
xor
xchg
dec
mov
btr
inc
sbb
push
pop
xchg
and
les
sub
mov
mov
lds
imul
push
test
js
push
das
mov
pop
push
xor
jo
mov
and
stc
cli
orl
adcb
adc
mov
lds
sbb
and
loope
add
sub
scas
jmp
lret
mov
mov
fistps
push
xchg
adc
jno
gs
filds
push
aad
fdivrs
pop
std
sub
xor
sub
jo
jo
or
xlat
mov
sub
rorb
mov
or
lods
sbb
lea
mov
pop
pop
or
stc
inc
sbb
fadds
outsb
pop
je
mov
jne
xor
mov
lds
and
sbb
push
jb
dec
pop
mov
mov
test
aad
inc
mov
xchg
push
jbe
fdivl
aad
notb
mov
jnp
sbb
bound
jo
loope
aaa
int3
add
shrb
mov
sub
das
loopne
ss
mov
nop
cld
js
movsb
push
pop
add
out
jp
push
icebp
cmp
sbb
add
notl
cmp
jb
jp
popf
or
pop
ljmp
icebp
jecxz
sbb
and
outsl
andb
pop
pop
cli
push
shlb
rolb
movsb
sbb
push
insl
jl
xchg
movsl
popf
jne
pop
mov
or
mov
xchg
inc
sarb
mov
xor
lret
jle
clc
mov
pop
adc
call
test
lea
push
adc
fisubs
call
int3
and
sbb
lock
fiaddl
and
loop,pt
push
inc
iret
in
imull
mov
xchg
aam
inc
into
push
pop
sarl
adc
in
imul
sbb
fbld
negl
icebp
mov
cmc
sub
lods
outsl
adc
jb
xchg
mov
jbe
popf
je
jge
movsb
ret
cmpl
mov
or
or
fwait
push
add
sub
test
insw
out
in
dec
inc
inc
add
or
jle
mov
fsubrp
ret
cmp
les
mov
pop
inc
fwait
stos
mov
rol
push
imul
push
rcrl
int
leave
mov
and
pmaxub
dec
js
inc
sti
addl
notl
inc
addl
rcrb
dec
sub
shll
insb
pop
aam
aad
test
lahf
push
push
movsb
in
loope
loop
imul
or
jmp
adc
pushf
push
in
cltd
and
clc
mov
cli
pop
pop
arpl
pop
xor
inc
in
jmp
xchg
jmp
fisubrs
in
cmpsb
fildl
adc
sub
adc
scas
pop
sbb
cmp
or
inc
jge
loope
mov
and
int3
subb
js
jge
pop
aas
in
or
loope
add
movsl
int
daa
push
loopne
push
lods
lret
adc
jmp
mov
fistpll
jg
xchg
sbbl
mov
out
jns
xor
jmp
decl
or
push
lock
pop
push
add
scas
mov
data16
mov
push
pop
lock
pop
dec
xchg
jl
call
test
mov
dec
sbb
jmp
push
sbb
push
aaa
xchg
enter
mov
jne
ja
mov
or
or
push
jp
icebp
push
mov
add
sbb
cli
sbb
and
xchg
sbb
scas
adc
push
int3
sbb
adc
pop
jo
mov
cmp
dec
shl
outsb
fs
cli
ret
mov
and
push
andl
scas
xchg
stos
mov
stos
out
xor
and
sub
xchg
push
or
cmp
dec
pushf
mov
adc
push
out
je
pop
push
sbb
push
push
mov
cli
jp
adc
mov
ret
lret
mov
mov
push
push
pop
and
push
les
lds
add
mov
js
dec
mov
lods
fldcw
cmp
dec
mov
shl
cmpb
jbe
popf
push
test
loop
enter
push
std
xor
ret
psrad
ljmp
push
imul
movaps
testl
xchg
add
mov
cli
inc
add
sub
pop
jnp
cmp
and
mov
mov
aad
mov
psubb
cmp
dec
sbb
xchg
orb
sbb
das
xchg
ret
pushf
add
aaa
lcall
test
loop
xor
roll
xor
mov
adc
loopne
roll
adc
pop
test
xlat
adc
inc
sbb
bound
mov
mov
adc
lret
pop
adc
fwait
stc
iret
movsl
pop
cmc
mov
sub
inc
je
loopne
scas
adc
aad
inc
movsl
mov
adc
sub
mov
test
repz
dec
cli
mov
pop
xchg
pop
cmp
shlb
sub
std
mov
mov
or
cmp
int3
push
sub
and
cmp
push
lcall
js
push
push
mov
dec
mov
cmp
das
add
imul
mov
inc
gs
iret
cmp
lea
cmp
movl
and
outsb
jg
jge
cmp
xor
jne
or
xchg
call
sub
out
jp
clc
addr16
movsb
and
or
fcmovnu
xchg
mov
mov
js
pop
sbb
inc
dec
daa
inc
sbb
int
xchg
pop
test
repz
cmp
jo
xor
sub
sbb
and
movsl
aam
xchg
inc
int3
mov
sbb
ret
inc
and
inc
and
aad
add
cmp
pop
or
gs
iret
jne
add
inc
sbb
pop
daa
sbb
fimuls
loop
pshufw
cmp
push
icebp
jge
mov
push
insl
push
ror
lea
inc
fadds
or
aad
dec
mov
xor
mov
add
scas
fcoml
push
rcll
inc
sbb
cmp
sbb
pop
fdivrl
adc
push
add
daa
rolb
jp
mov
aas
add
xor
orl
gs
sbb
jle
daa
idivl
pop
test
or
mov
repz
mov
mov
les
inc
filds
push
mov
repz
loop
scas
xchg
push
shlb
lea
mov
jmp
lea
popa
or
mov
xlat
popa
ja
inc
ljmp
xchg
add
insb
sub
enter
fsubrs
aaa
inc
sub
mov
in
aam
and
add
push
xlat
addb
in
loopne
jne
je
or
mov
or
inc
and
dec
mov
or
fwait
enter
scas
jg
js
push
hlt
cmp
and
pop
pop
imul
addb
xchg
cmpsb
cwtl
cltd
lahf
dec
loopne
aas
push
pop
stos
push
dec
and
test
mov
outsl
xchg
xor
stos
mov
jae
cmpsl
enter
loopne
sub
sbbb
sbb
mov
mov
pop
mov
pop
shrb
pop
popf
iret
pusha
mov
fcomip
test
sub
inc
clc
js
mov
daa
mov
add
mov
outsb
imul
push
xor
and
lahf
cmp
push
ret
jp
inc
pop
xchg
or
mov
jno
loope
jle
adc
mov
lds
xchg
dec
adc
mov
and
add
cwtl
fists
push
jno
sub
push
cmpsl
add
push
lds
pop
and
das
xor
ret
loope
in
pop
sub
ds
and
lret
ja
adc
popa
or
js
pop
mov
lods
or
aad
into
mov
or
or
jo
hlt
sbb
sub
scas
mov
paddb
mov
out
adc
repz
pushf
or
movsl
data16
xchg
push
adc
lcall
sub
jle
push
push
xchg
push
push
inc
lds
das
ljmp
outsb
lahf
fadd
sub
ret
jp
xchg
cmpsl
inc
jecxz
mov
push
push
xor
push
outsl
push
push
pop
push
gs
sbb
insb
inc
andl
loopne
outsb
sbb
aaa
cmpsb
mov
pop
sahf
out
push
xor
clc
mov
scas
pop
mov
and
sbb
adc
sub
mov
sub
cli
add
mov
lds
sub
jno
ljmp
adc
stc
adc
call
inc
ret
fsubl
lods
sub
in
cmp
movl
ljmp
jl
push
mov
out
mov
std
ljmp
jne
clc
ret
popl
add
dec
sahf
ret
inc
pop
and
inc
mov
sub
lcall
fcmovu
into
mov
loope
data16
jmp
push
adc
mov
call
mov
mov
lds
sub
xchg
es
push
lock
in
clc
std
and
pop
shlb
dec
mov
adc
add
xchg
mov
adc
int
cs
ficompl
mov
jmp
rol
mov
aad
fidivs
cmp
out
out
shrb
aas
inc
and
mov
push
ret
cmp
mov
shlb
rcll
pop
scas
cmp
push
inc
add
add
ds
stos
ret
test
cmp
adc
adc
flds
pop
cmp
loopne
clc
js
loop
inc
std
test
sbb
incl
push
sub
push
push
aaa
into
test
xsha256
cmpsb
adc
xor
lock
or
xchg
xchg
push
lar
or
arpl
rol
ret
sarb
pop
or
lea
scas
dec
jne
mov
dec
clc
bound
fs
test
gs
mov
jno
stos
jno
jbe
hlt
mov
xchg
pop
push
mov
cmpsb
stos
arpl
xchg
jmp
sub
mov
fdivrs
adc
loope
or
je
sti
je
rcl
pop
and
jmp
add
or
mov
pop
jge
fwait
cmpsb
xorb
adc
dec
lds
arpl
aas
sbb
es
jge
ret
lods
sbb
jbe
pop
push
sahf
and
mov
dec
dec
mov
rol
lods
xlat
cmp
lock
aam
add
out
or
cmpsb
push
pop
jge
mov
mov
add
shrl
pop
addr16
jo
push
sbbb
addr16
scas
jge
sbb
scas
loope
push
dec
and
adc
mov
fldt
test
insb
cmp
mov
out
lahf
pop
pop
test
inc
or
std
les
int3
icebp
out
lods
cli
xor
pusha
add
jmp
jne
stos
es
sbb
and
in
adc
int
lret
inc
arpl
loope
and
xor
lods
pop
xchg
adcb
cld
mov
mov
loop
stos
daa
xor
cmp
gs
inc
loope
andnps
sbb
insb
push
push
pop
sub
scas
scas
scas
scas
mov
cmc
cs
nop
cmp
or
lret
sbb
mov
xchg
in
stos
push
sbb
jle
mov
cmp
and
daa
nop
jecxz
lock
mov
adc
xchg
jge
ret
mov
adc
and
jo
mov
xlat
movsb
ss
push
add
pop
iret
add
ret
inc
mov
add
shlb
fs
sbb
mov
hlt
mov
loop
jp
sbb
fistpll
push
lock
arpl
mov
cmpsb
outsl
ja
lcall
mov
mov
leave
hlt
ds
aad
out
and
mov
or
lods
mov
or
imul
test
rol
call
xchg
mov
and
mov
jp
xor
rcll
xor
daa
ret
stos
adc
inc
outsb
jecxz
mov
mov
fistpll
sbb
mulb
movsl
ja
pop
fmuls
xor
insl
add
mov
add
insl
cmpsl
mov
iret
push
xlat
dec
inc
insb
inc
insb
test
xor
je
push
xchg
add
xor
loope
adc
cld
loope
push
adc
add
cwtl
stos
mov
xchg
sbb
test
adc
loop
out
add
jle
mov
mov
pop
and
lods
insb
pop
cmp
js
pusha
or
push
lret
push
fiaddl
xor
stos
xor
imul
pop
mov
or
nop
enter
dec
inc
mov
insb
inc
lea
xchg
in
comiss
mov
loopne
dec
aam
push
pop
dec
pop
das
je
mov
mov
dec
inc
ja
stc
push
add
dec
add
push
xor
push
sub
xor
aaa
mov
lods
sub
pop
jg
xor
insl
dec
pop
mov
test
mov
push
jge
lods
push
ret
jne
pop
mov
leave
add
jne
push
jmp
cmp
push
mov
aas
lcall
pop
push
pop
scas
add
push
lods
jmp
sub
add
das
xchg
pushf
sub
inc
jne
fwait
mov
icebp
mov
and
inc
add
cmp
pop
adc
cwtl
insl
xchg
push
mov
mov
rcll
push
cs
cmp
test
dec
pop
cmc
and
dec
lret
rcrb
inc
add
push
clc
loope
or
xchg
mov
adc
es
cli
jno
adc
sbb
inc
xchg
sbb
pop
fdivl
filds
and
insb
insl
or
dec
hlt
pop
sbb
pop
insl
push
fiaddl
inc
sbb
sti
scas
inc
sbb
outsl
aaa
xor
add
shll
xchg
popf
aas
mov
leave
sahf
or
xor
xchg
lods
nopl
roll
mov
push
sahf
xlat
or
push
test
in
std
data16
jecxz
lds
push
imul
xchg
mov
jge
push
fcomi
dec
lret
sti
arpl
adcb
stc
inc
jecxz
popa
jmp
ds
add
jne
pushf
mov
add
sub
daa
cmpb
or
cmpb
shl
loope
sbb
pop
adc
adc
sub
fcmovnu
xchg
arpl
inc
push
addr16
scas
sub
rorb
and
rcrb
out
push
add
dec
movsl
push
ret
sti
jecxz
cmp
insl
push
out
and
das
cmpsb
pushf
cli
pop
push
rol
mov
into
sbb
cld
or
rolb
pop
sbb
shlb
mov
inc
sub
ss
push
dec
sbb
das
dec
arpl
xchg
lods
js
add
adc
mov
je
aam
sarb
dec
xor
les
inc
add
ds
imul
pop
dec
lret
cld
sub
rolb
lods
jmp
dec
rolb
mov
cld
mov
jmp
cmc
mov
cmp
pop
xchg
mov
cmp
mov
loopne
xchg
sub
push
xor
xor
je
add
add
clc
mov
jg
jge
xchg
push
lret
xor
in
mov
jp
pushf
adc
pop
sbb
lods
les
inc
nop
inc
test
add
jg
nop
lock
push
sbb
arpl
mov
adc
push
pop
xchg
sub
loope
mov
jo
adc
dec
scas
nop
outsl
xchg
ljmp
adc
pusha
ljmp
cmc
add
int
lahf
sti
aas
xor
mov
xchg
sahf
push
xchg
adc
or
push
pop
fiaddl
leave
loopne,pn
mov
and
xlat
cmp
dec
and
scas
popa
test
stos
ljmp
xor
inc
movsb
imul
xchg
scas
mov
pop
xor
sbb
push
sbb
jg
push
ljmp
imull
add
dec
aad
insb
outsl
dec
pop
xor
fs
daa
push
cmpsl
cli
add
in
cmp
pop
test
xor
inc
push
popa
popa
mov
es
in
je
dec
push
dec
inc
push
lds
in
cmc
add
in
cmpb
loop
jecxz
sub
cwtl
cmp
adcl
pushf
sbb
add
out
mov
popf
push
test
popa
dec
or
pop
mov
addl
stmxcsr
adc
push
leave
daa
and
push
mov
adcl
mov
rorl
cltd
lahf
adc
push
pop
insl
push
filds
inc
cmp
jp
push
fbstp
dec
lods
cmp
jo
lret
addr16
das
push
add
das
ret
repz
out
sbb
sti
jbe
adc
jne
xlat
jecxz
jp
sbb
arpl
xor
rorl
in
pushf
les
int3
sbb
pop
loopne
jg
divb
ja
pop
lock
jge
jne
addl
xor
cmpsl
aaa
sti
mov
xchg
mov
push
loope
dec
adc
clc
dec
sub
movsl
or
ljmp
inc
lret
xchg
inc
mov
sbb
sub
adc
inc
out
sub
nop
stos
jmp
xchg
and
mov
das
loopne
arpl
cmpsl
mov
movb
sbb
pop
aaa
icebp
rorl
addr16
jmp
and
iret
movsl
sbb
aaa
dec
pop
pop
test
fidivl
dec
ljmp
pusha
repnz
pop
jne
test
cld
repz
ret
aad
jle
scas
fwait
int
js
and
mov
shrl
and
mov
movsb
inc
pop
xchg
aam
jp
cmp
out
in
popa
adc
jmp
xchg
dec
add
icebp
jg
mov
insb
ja
out
sahf
loop
loope
stos
or
loopne
push
dec
adc
adc
push
test
adc
ret
pop
jmp
push
sub
mov
sbb
add
loopne
add
push
fdivl
loopne
shlb
stc
sub
movsl
nop
add
pop
shlb
dec
inc
jle
and
idivb
xlat
in
rol
jne
neg
cmp
sbb
pop
fisttps
push
out
jno
bound
mov
enter
inc
xchg
fisubs
les
mov
mov
mov
lods
jns
pop
out
push
sbb
xor
popa
loopne
dec
mov
faddp
test
sbb
stos
mov
jge
aaa
in
fldcw
popa
dec
jbe
loope
bnd
dec
je
ljmp
mov
sbb
xlat
jno
xor
sbb
js
lea
lret
imul
lds
and
cmp
jo
orl
clc
push
pushf
adc
add
mov
jne
inc
mov
in
pop
scas
push
xor
sub
cmpsb
inc
pop
imul
mov
loop
xchg
xor
pop
mov
aam
add
cmp
je
pop
outsl
gs
and
pop
push
add
leave
mov
aas
jecxz
jge
push
xchg
pop
ficompl
loope
mov
sub
lret
jb
in
lds
or
xchg
pusha
shl
mov
sbb
insb
adc
mov
test
add
adcl
loope
sub
jno
dec
scas
sbb
push
lea
add
mov
mov
mov
outsl
sbb
bound
inc
or
outsl
daa
int
lcall
ret
inc
sbb
leave
jmp
mov
mov
scas
sar
je
add
into
daa
add
mov
and
mov
xor
sahf
xchg
push
shll
pop
or
and
lcall
jmp
jmp
xor
ret
movl
mov
pusha
enter
cmp
pop
pop
pop
adcl
cmc
sbbl
jnp
jb
inc
int3
pop
mov
sarl
dec
scas
add
cld
loope
mov
xor
aaa
repnz
mov
stc
fst
leave
lea
cltd
int3
mov
outsb
ljmp
scas
cmp
sub
outsb
mov
push
push
mov
xor
pop
sub
mov
rcll
xchg
mov
insb
and
pushf
add
and
mov
mov
stc
mov
and
call
push
movsl
sbb
sbbl
mov
scas
mov
adc
sbb
add
inc
sub
pop
cmc
add
inc
mov
cmpsb
xchg
mov
pop
add
inc
dec
jecxz
lock
cmc
fs
dec
mov
enter
adc
cld
or
lcall
aam
sbb
leave
je
mov
cmp
iret
push
shr
rclb
xchg
pop
enter
ds
stos
push
shll
std
mov
stc
cmp
scas
das
mov
add
cmp
sahf
sub
jmp
push
mov
sub
mov
pusha
and
dec
pop
inc
xor
push
lods
rcl
or
pop
les
lock
mov
aaa
or
stos
loopne
and
rclb
cmpl
loopne
stc
aad
out
aaa
push
pop
cmp
lds
xor
mov
daa
cmp
pop
jp
adc
pop
rcrb
out
bt
add
mov
cmp
popf
mov
into
adc
or
shrb
loopne
in
scas
jae
in
and
push
inc
xchg
inc
adc
fdiv
lods
outsl
into
mov
lea
pop
mov
inc
stos
aaa
lods
xchg
inc
and
fsubrs
addr16
sti
fisubrl
push
adc
or
push
pop
adc
ficomps
les
inc
pop
out
inc
pop
push
leave
adc
or
subl
pop
mov
and
leave
add
mov
cli
lea
lock
les
xchg
test
cmp
dec
cmpsl
cmp
jno
inc
ljmp
add
push
xor
mov
push
dec
sub
pop
xor
bound
dec
jae
xor
imul
in
pusha
cwtl
jmp
dec
pop
cmp
inc
mov
scas
pop
les
mov
mov
or
adc
lock
jmp
out
add
or
push
loopne
call
xchg
cli
aad
incl
adc
ja
lcall
xchg
sub
dec
imul
das
or
add
dec
loopne
inc
call
rcrb
sahf
cmc
fsubrl
cmpsb
xchg
xor
jp
mov
out
ja
jne
mov
aaa
lret
xor
cmp
jp
fiadds
sub
push
add
sbb
popf
or
push
inc
js
sarb
push
mov
or
xchg
cmpsl
inc
in
out
mov
xchg
dec
popf
sub
cmc
xchg
lret
push
idivb
test
outsb
inc
cmp
repz
inc
mov
arpl
icebp
mov
mov
pop
jl
orl
fsubl
lods
movsb
js
mov
and
testl
lods
cli
mov
cmp
mov
pusha
or
sub
loope
dec
insb
outsl
jg
jb
sbb
ss
jo
xchg
pop
pop
out
das
push
jb
sub
out
sbb
and
sarl
mov
xlat
stos
jo
xchg
lods
popf
lods
dec
out
and
jno
inc
cld
and
mov
aaa
mov
sbb
in
aas
loop
mov
outsl
mov
mov
and
test
sub
push
xor
or
popa
addr16
jne
into
shrb
mov
rcrl
hlt
insl
inc
pop
mov
fnclex
mov
cmp
and
sbb
mov
loop
xchg
cmpsb
mov
pop
lock
cmp
repnz
dec
mov
push
shll
stc
popa
xchg
push
push
loopne
in
addr16
rcr
shlb
ud0
aam
pop
xchg
hlt
jno
movsl
cmp
push
sub
scas
lods
pop
xor
sub
shlb
pop
pushf
mov
stos
cmp
das
jo
call
adc
popa
or
call
mov
repz
jnp
into
xchg
imul
cmp
idivb
or
push
clc
and
movsl
sub
mov
jbe
aas
pop
adc
adc
sbb
dec
sbb
push
lea
mov
cmp
sahf
lods
and
adc
gs
jne
inc
adc
out
rolb
test
pop
insb
dec
les
addr16
or
inc
aas
mov
cmc
lcall
push
mov
sbb
data16
bound
pop
ficompl
sbb
loop
xor
jno
fisubrs
aad
rolb
enter
scas
lcall
xchg
inc
ds
inc
xchg
push
add
fs
popa
out
cli
enter
or
jne
jnp
cmp
scas
sbb
sti
push
pop
pop
outsl
sbb
insb
dec
mov
mov
or
push
pop
pop
sbb
arpl
cli
movsb
scas
out
xchg
std
cs
mov
inc
push
cwtl
rclb
fwait
loop,pt
jno
pop
mov
ror
ret
mov
mov
test
sbb
mov
cmp
mov
testl
imul
aam
adc
mov
push
mov
and
jecxz
dec
jne
add
popa
inc
xor
xorb
das
mov
jns
push
ficoms
loope
iret
xchg
stos
jg
push
in
hlt
mov
hlt
cmc
nop
mov
call
xor
repnz
sbb
or
mov
inc
mov
mov
mov
movsl
mov
add
mov
xchg
xchg
sbb
xor
xchg
push
cwtl
enter
hlt
addl
call
stos
sahf
int
pusha
test
jecxz
adc
mov
daa
xor
call
mov
or
sahf
mov
roll
ljmp
aaa
hlt
mov
or
dec
cmp
inc
add
cmp
rolb
pop
inc
lock
or
stc
in
xchg
out
pop
cli
inc
mov
in
and
mov
ret
sbb
xlat
inc
or
pushf
cli
inc
adcb
scas
orl
popa
lcall
sub
loop
je
imul
inc
and
in
push
jb
insl
inc
sub
mov
mov
aam
pop
pop
testb
sub
ret
dec
imul
and
add
rol
gs
mov
add
jno
sahf
mov
mov
push
pop
or
imul
loopne
arpl
inc
popa
cs
dec
scas
fstl
mov
sbbl
mov
ja
pushf
hlt
addb
mov
movsb
xor
mov
mov
sahf
lret
xor
push
add
mov
adc
mov
mov
mov
js
das
outsb
scas
or
mov
push
adc
sub
lods
push
lcall
or
pop
jp
dec
rorl
scas
dec
cmp
loopne
adc
test
bound
sar
sahf
addr16
xlat
nop
push
fiaddl
loop
ret
testb
aad
and
dec
dec
xchg
test
cli
clc
mov
shl
push
dec
cltd
xor
jno
ret
add
cs
pushf
xchg
dec
xor
jne
mov
push
dec
add
inc
das
adc
lcall
cmp
or
daa
pminub
lret
fs
push
cli
je
or
fdivs
es
push
sbb
jne
inc
add
test
adc
rorb
fldt
adc
mov
sbbl
fidivrl
sbb
rol
push
or
mov
and
mov
jecxz
cwtl
lret
mov
sbb
xchg
mov
ja
push
out
dec
daa
sti
sub
jb
mov
or
push
xchg
pop
cmc
es
pop
scas
xor
shrb
inc
add
imul
adc
hlt
rcl
movsb
push
fisubrs
sbb
mov
dec
iret
es
jmp
push
pushf
add
cmp
mov
arpl
pop
lea
and
test
iret
shr
fcoms
loop
mov
xchg
adc
sarb
and
ret
mov
mov
pop
jecxz
mov
fsub
xchg
add
test
xchg
mov
je
sub
mov
in
cmpsb
mov
les
fadds
subl
cmc
repz
lock
pop
cmp
and
mov
sub
xchg
add
roll
jmp
adc
jle
in
xchg
js
cmp
mov
mov
les
cmp
popa
pop
dec
cli
xor
add
xor
fistl
add
add
test
loope
jo
add
jbe
cld
dec
das
rcr
xor
cmpsb
lret
add
adc
clc
xor
in
sti
fildl
popa
ret
jp
inc
icebp
mov
add
fs
inc
cmovg
shrb
lea
xor
test
mov
jmp
mov
cmc
sbb
lcall
xorl
dec
sbb
out
sbb
fs
and
or
push
sbb
or
mov
jo
lret
xchg
incb
cwtl
cmp
jnp
addl
cltd
and
stos
imul
xchg
mov
int
cmp
ret
test
push
aam
ja
pop
or
sub
cmp
push
jae
call
pop
or
in
mov
icebp
in
lods
xlat
dec
shll
fdivrp
pop
cltd
adc
loope
dec
xor
loope
divl
and
sub
jmp
mov
inc
fistpll
ffree
movsb
mov
push
out
pop
bound
fdivs
mov
inc
or
dec
bound
fildll
mov
das
mov
sub
and
movsl
call
clc
test
mov
rorl
xor
xchg
sbb
fwait
inc
add
add
into
hlt
ficompl
xchg
popl
add
mov
sub
mov
mov
sahf
ds
loopne
xor
cmp
cli
inc
xchg
mov
and
lods
js
jnp
ljmp
repz
dec
jmp
mov
cs
ret
sub
lret
inc
xchg
vpcmpgtb
pop
aas
hlt
repz
push
adc
ficompl
mov
jno
rorb
sub
mov
sbb
leave
xchg
push
mov
jecxz
ss
mov
mov
mov
cmpsb
pusha
adc
int3
mov
hlt
shlb
cmp
mov
push
daa
pop
xchg
shrb
and
adc
dec
sbb
es
insb
xlat
push
cmp
xchg
push
adcl
xor
lods
ljmp
fsubrl
jg
add
icebp
adc
or
mov
mov
icebp
sbb
xor
jo
jne
dec
xor
insl
es
test
leave
nop
push
in
clc
inc
sub
out
enter
mov
pop
in
pop
pop
cmp
jnp
daa
inc
mov
push
jle
xchg
push
lods
dec
fwait
mov
push
inc
push
dec
ret
jge
dec
inc
jmp
or
les
addr16
pop
stc
outsb
push
mov
and
lret
dec
inc
sub
insl
jmp
int3
xor
sub
mov
push
mov
das
stos
or
loopne,pt
xchg
mov
push
stc
stos
scas
cmpb
inc
lcall
dec
scas
dec
sub
scas
adc
movsb
mov
jnp
test
cmp
fcomps
push
out
dec
inc
cltd
push
cmp
jno
adc
enter
out
mov
repnz
inc
sbb
outsl
ret
mov
fadd
mov
and
das
fcompl
jae
test
inc
sub
inc
movsl
sbb
imul
push
and
xor
in
mov
jo
data16
testl
les
scas
fsubrs
pop
mov
cwtl
lock
cmpsb
mov
and
xor
pop
mov
stos
leave
ds
sub
mov
add
mov
mov
mov
push
mov
ret
lcall
cmpsb
sub
inc
jmp
icebp
mulb
mov
loopne
push
imul
and
ds
or
mov
inc
das
add
and
fdiv
test
ret
mov
cmp
dec
add
jo
push
fwait
mov
mov
shr
cwtl
xchg
out
dec
cmp
and
sahf
insl
xor
inc
adc
inc
add
iret
clc
aad
es
cmp
pusha
aas
sub
aad
and
inc
push
push
dec
add
sbb
les
or
dec
ret
cmp
in
ret
push
inc
xchg
jne
inc
and
jl
jno
leave
adc
pop
mov
mov
push
xor
xor
mov
sub
enter
cmp
clc
fisubrs
loope
in
mov
es
mov
ss
jae
leave
jb
jbe
pop
dec
pop
dec
mov
out
iret
gs
jle
jg
xchg
rorl
rclb
stc
adc
sub
sub
or
sbb
das
or
mov
dec
leave
int3
inc
push
fisttpl
arpl
cltd
mov
mov
cmp
push
mov
ret
lret
push
mov
inc
pop
jecxz
mov
mov
sub
repnz
outsb
std
add
mov
jle
loopne
push
sbbb
dec
jbe
ret
cld
cld
cmpsl
push
mov
sbb
loope
xchg
and
or
inc
dec
iret
cmpb
jmp
into
xchg
mov
je
pop
call
pushf
fisubl
fsubrs
sbb
imul
mov
push
cmc
fdivrs
lods
lods
lret
out
f2xm1
loop
mov
mov
cmp
jae
xlat
outsb
jl
pushf
xchg
or
insl
dec
pop
sbb
popa
xchg
mov
mov
or
bound
sbb
in
hlt
pop
stos
daa
outsl
inc
test
and
xor
pop
pop
stc
mov
stos
aas
mov
mov
insb
aam
cs
dec
dec
mov
test
inc
loope
jnp
xor
cwtl
add
mov
test
cmp
in
mov
call
ljmp
pop
repz
ss
arpl
outsb
shl
stos
sti
and
adc
js
nop
icebp
xor
adc
aam
pcmpeqb
psubusw
jae
loop
es
cmp
pop
test
cmp
inc
cwtl
pop
or
sbb
pop
pop
pop
lret
pop
pushf
jns
loop
jbe
or
inc
jne
js
sub
outsl
cli
add
imul
pop
out
dec
lea
pop
pop
lahf
mov
sbb
inc
dec
popf
add
shlb
setg
call
out
push
add
sahf
cmp
shl
int3
push
cmpb
es
fs
inc
or
int
mov
in
into
sahf
pusha
addr16
cld
cmp
lds
mov
js
hlt
mov
xchg
lret
or
jle
rorb
or
pop
inc
dec
dec
cmp
jle
rorb
repnz
mov
xor
push
push
jmp
ljmp
xchg
test
in
or
sbb
cli
cmc
push
pop
hlt
sbb
es
mov
shll
xchg
push
mov
mov
aas
adc
sbb
movsb
decb
pop
push
xchg
aas
pop
pop
loop
sbb
adc
pop
test
jl
sbbb
cli
stc
cmpsb
cmp
test
mov
sub
inc
mov
lock
jno
imul
add
dec
push
ds
dec
cmp
cwtl
clc
xchg
pop
push
cld
push
jo
sub
fdivrl
cmpsb
inc
iret
xlat
xorl
mov
into
shll
xlat
and
and
add
pushf
pop
mov
and
int
pop
add
dec
mov
pop
ss
call
jle
hlt
jmp
xor
adc
adc
add
cmpsl
daa
ds
mov
or
inc
mov
ljmp
inc
aam
neg
sub
test
mov
add
je
xchg
dec
pop
mov
adc
f2xm1
inc
dec
outsl
jns
mov
jp
lods
push
mov
push
shlb
add
in
pushf
adc
jae
adc
xchg
mov
call
xchg
mov
xor
movsl
push
insb
js
fsubrl
cwtl
push
fcmovnu
and
test
jo
mov
ret
jne
push
sysexit
inc
icebp
insl
mov
or
xchg
jl
inc
jne
sub
mov
cwtl
hlt
loop
jno
ror
add
adc
movsb
jmp
mov
in
cmp
dec
xchg
test
into
add
sar
rorl
jmp
ds
inc
jecxz
outsl
jge
mov
pop
sti
icebp
xchg
outsb
cli
cmpsl
sub
dec
movsb
inc
adc
xchg
icebp
test
adc
insl
mov
js
jl
imul
sub
repnz
rcrb
pop
pop
sbb
inc
xlat
int3
or
sarl
sbb
push
das
or
iret
adc
icebp
jno
ds
mov
push
adc
std
sub
rep
sub
fnstsw
push
scas
test
mov
mov
dec
les
rorl
pop
insb
dec
mov
cs
sbb
test
pop
test
jl
pop
mov
push
dec
pop
loopne
pop
js
aaa
cld
push
pushf
add
sbbl
mov
fsubp
fbld
hlt
dec
xchg
sub
arpl
pop
aad
lcall
ret
mov
lds
cmp
and
sarb
and
je
cmpsb
cmp
mov
and
mov
mov
sub
mov
shrb
dec
dec
bound
aam
lea
arpl
xor
leave
les
pop
push
jae
or
xor
jmp
pop
lock
popa
mov
scas
add
cltd
push
adc
xchg
or
ret
push
outsl
dec
addps
popf
inc
jbe
stos
push
in
mov
shlb
pop
and
pop
pop
mov
aam
inc
adc
fs
or
add
jmp
fldenv
or
mov
into
mov
loopne
movsb
je
out
sub
mov
xchg
aas
inc
clc
fdiv
mov
test
push
popa
ds
and
clc
jne
sbb
push
aad
adcb
imul
pop
loop
adcb
insl
push
pop
call
adc
push
push
popa
jno
loope
rorb
jnp
das
cmp
push
adc
xchg
and
or
cmpsb
lea
dec
and
ret
or
imul
out
stos
int3
add
sbb
test
adc
or
jbe
xchg
cmp
stos
dec
test
sbb
pusha
or
movsb
inc
mov
ds
push
inc
dec
and
mov
rcr
push
pop
inc
clc
cmp
xchg
push
mov
sub
aam
inc
mov
js
loop
mov
fstpl
mov
adc
ret
test
loopne
xor
sbb
into
cmp
mov
cmpsb
gs
in
pop
out
incl
hlt
and
push
or
dec
loope
es
ss
pop
fld
xchg
loop
or
outsb
test
adc
dec
mov
hlt
sbb
jmp
pop
repz
mov
adc
sbb
jbe
jnp
rclb
loopne
xchg
mov
inc
jb
adcl
hlt
sbb
mov
xor
fildl
add
lods
ret
fdivrp
loope
rcrb
cmp
or
sub
xor
mov
pushf
hlt
orl
cs
jo
int3
popf
xchg
jnp
sbb
sahf
xchg
mov
and
mov
icebp
adc
adc
xor
inc
iret
jo
xchg
js
mov
cmp
sbb
adc
xor
loope
adc
mov
movsl
call
dec
mov
pop
lret
ljmp
jo
cwtl
inc
pop
lret
sub
sbb
imul
jl
mov
mov
jae
pop
add
pop
aas
loopne
or
sbb
sbb
xor
mov
add
add
add
ret
aam
test
out
add
jle
mov
mov
pop
dec
push
bound
mov
mov
dec
push
push
or
call
xor
fiaddl
mov
push
mov
mov
inc
xor
lods
pop
fstpl
push
mov
mov
push
insl
cld
shrl
test
fimull
sub
shll
xchg
add
sbb
sub
xorl
or
and
addr16
mov
sub
insb
es
push
setns
sbb
mov
push
call
jae
iret
cmp
jle
mov
lea
mov
pushf
mov
inc
cs
js
inc
pop
mov
roll
push
rcrb
sbb
or
cmp
push
test
imul
dec
push
test
pop
and
mov
sub
mov
cs
mov
xor
mov
push
ret
mov
sahf
dec
mov
and
push
xor
push
outsb
inc
cmp
dec
xchg
xchg
or
mov
loop
test
inc
mov
or
popl
fistpl
in
jns
shlb
or
movsl
in
cmpsb
dec
loop
pop
sahf
shr
lahf
shrb
movntq
aaa
iret
mov
fs
lcall
shrl
pop
pop
loop
cmc
jp
shll
loop
test
sub
hlt
sub
dec
pop
dec
nop
jp
xor
push
lods
mov
adc
cld
xchg
xor
xchg
test
mov
stc
push
add
push
push
sarl
xor
ss
popa
mov
clc
pop
hlt
es
mov
xlat
add
push
adcb
or
adc
popa
sti
pusha
mov
out
and
xor
jno
cmp
je
dec
jb
pop
cmpsb
stos
xchg
add
xchg
lods
jne
push
dec
dec
test
push
orb
add
cmp
cli
pop
xlat
jbe
and
rorb
les
aaa
jl
cli
sbb
lret
scas
neg
add
mov
lahf
mov
or
push
mov
loope
enter
push
jno
mov
sub
gs
pop
mov
dec
pop
xchg
mov
icebp
call
push
sub
pop
xor
xor
xor
dec
ljmp
jge
cli
lret
mov
inc
je
push
ds
enter
xor
fildll
push
lahf
sbb
pushl
jae
inc
sti
nop
or
mov
add
lods
add
push
dec
cmc
cmp
in
sbb
fisubrs
push
fs
add
mov
dec
xchg
pop
jge
into
jle
push
fsubrs
test
in
xchg
push
in
pop
ficoml
int
mov
lahf
mov
sbb
scas
xchg
sbb
sti
movsb
mov
cmc
decl
lock
sbb
loope
push
das
sbb
hlt
add
lahf
mov
pop
out
enter
ds
fsubs
xor
cmp
or
js
cwtl
aam
xchg
les
dec
pop
or
and
push
sbb
pop
call
enter
or
inc
add
and
and
mov
je
outsl
sub
adc
subl
rcrb
out
adc
nop
cmp
mov
sub
roll
sahf
or
cmc
dec
mov
mov
jg
xchg
push
mov
rcl
je
add
inc
xor
fiaddl
push
cli
add
push
or
outsb
inc
pusha
push
mov
imul
push
pop
add
jo
test
movlps
lods
mul
gs
lods
rorl
neg
mov
fdivl
pop
jp
stos
cld
inc
xchg
push
in
adc
inc
call
sub
and
or
out
loop
insb
xor
jbe
mov
addl
mov
lock
repz
ret
push
inc
sbb
xchg
sbb
mov
mov
lret
frstor
adc
dec
dec
je
push
mov
repnz
or
jl
imul
loopne
addb
aaa
jl
xor
arpl
int3
orl
lock
jle
dec
mov
inc
and
push
in
test
add
fistpl
in
fwait
rol
lds
scas
rcrl
movsb
mov
into
mov
and
inc
ret
push
inc
roll
sete
lods
int
push
in
loopne
adc
and
mov
xorb
fmulp
imul
sbb
cwtl
rcr
ja
adc
mov
jo
shrb
mov
inc
test
sub
push
push
fistl
lock
push
or
mov
ja
dec
pop
jne
loop
lock
imul
push
popf
pop
roll
mov
cmpsl
hlt
jl
push
adc
or
shlb
lods
shll
dec
cmp
cmp
ret
jmp
jbe
inc
xor
ljmp
cld
jp
xor
add
shlb
dec
pop
sub
leave
test
xor
movsb
xor
rclb
call
ss
movsl
js
add
out
cmpb
jne
jl
sbb
add
gs
andl
ss
cs
test
dec
aaa
pushf
mov
adc
daa
mov
lcall
xchg
xor
in
sub
push
test
fildll
mov
inc
jnp
cmp
mov
insb
orb
aaa
pushf
lds
sahf
mov
outsl
mov
testl
add
rcl
std
mov
jg
bound
out
out
mov
xor
orb
hlt
stos
sub
scas
pop
push
mov
jle
xchg
push
pop
ds
insb
cmp
mov
jbe
arpl
jno
xchg
movsl
pop
lcall
pop
andb
lock
jno
scas
pop
add
cld
imul
pop
mov
lahf
jmp
or
adcl
movsl
movsb
mov
sbb
xchg
push
sarl
sbb
subb
xchg
jge
fnsave
aaa
jmp
enter
call
nop
inc
sub
rcr
add
pop
aaa
mov
mov
loopne
testl
cmp
jmp
and
inc
mov
mov
in
adc
mov
stos
std
push
xchg
xchg
dec
cli
jae
loop
stos
mov
mov
cmp
fnstenv
jbe
out
outsl
cmp
loop
add
test
sub
mov
jl
dec
xor
sbbb
adc
jle
fwait
repz
in
scas
sbb
adc
ret
and
or
ret
or
ret
sahf
push
pop
jp
movsl
push
fistpl
push
je
test
mov
aad
add
scas
ljmp
push
inc
sub
popa
xor
stos
or
and
dec
mov
sub
jo
add
jge
jp
add
lock
lds
sub
loopne
and
shrb
mov
dec
out
cmpsl
xchg
fsts
subb
mov
inc
in
sahf
out
stos
mov
out
jns
insl
lcall
push
imul
mov
mov
cld
cmp
pop
insl
lds
adc
mov
inc
sahf
aaa
mov
fs
insl
jnp
or
cmp
xor
inc
cmp
jb
f2xm1
ret
pusha
fs
ds
cltd
arpl
mov
jp
clc
mov
imul
jp
push
mov
rolb
xchg
sub
shr
adc
out
inc
insb
repz
imul
pop
lods
sbb
sbb
scas
inc
arpl
mov
mov
cmp
push
sbb
inc
and
xor
xchg
mov
test
lcall
mov
pushl
test
call
ljmp
inc
xor
popa
call
mov
jg
rcl
pop
je
mov
pusha
shlb
ss
fcomps
daa
or
inc
jbe
or
mov
dec
mov
stos
fisttpl
xchg
shr
inc
adc
sahf
test
push
pop
out
mov
mov
inc
xor
pop
push
dec
and
sbbl
push
adc
das
sbb
scas
mov
mov
scas
rcll
xor
and
fs
in
fld
xlat
dec
std
cmp
fwait
in
jno
add
add
sub
lret
sub
les
push
inc
aaa
mov
adc
hlt
mov
jge
pop
pop
ja
notl
or
cmp
cmc
jl
sub
sbb
inc
or
cld
mov
incb
jbe
add
jg
loopne
rol
mov
sbb
or
cltd
ss
js
and
cmpsl
cmp
outsb
or
add
test
push
je
ljmp
or
fimuls
push
rorb
mov
sbb
out
cmpb
jb
lret
mov
mov
sbb
mov
pop
bound
repz
jmp
push
movsl
in
or
pushw
sti
cmp
clc
add
pusha
push
add
stos
bound
out
or
inc
aad
and
leave
ds
jge
push
pop
dec
mov
adc
call
push
sbb
sub
daa
mov
mov
push
js
outsb
cwtl
call
mov
push
out
in
sub
test
mov
pop
push
jmp
loop
pop
aam
mov
loop
icebp
cmc
jbe
cmp
cltd
cmp
dec
andb
inc
jae
jne
push
nop
mov
pop
adc
out
cmp
es
loopne
adc
fisubrl
enter
dec
rclb
sbb
push
fbld
xor
adc
gs
inc
jns
adc
outsb
ret
xchg
sbb
sub
push
lcall
adc
clc
mov
pop
pushl
xchg
add
shr
pop
icebp
adc
jge
add
jno
out
cwtl
adc
pop
or
fisubrs
cltd
outsb
inc
pop
push
or
testb
shlb
sbb
cmp
push
jbe
das
mov
inc
hlt
jecxz
mov
sbb
insb
cld
xchg
and
or
cmpsb
sub
sub
inc
add
sub
or
test
lcall
mov
in
sbb
add
mov
add
add
cmp
or
sahf
push
mov
sub
adcb
mov
jle
cmp
daa
js
xor
xchg
ret
adc
mov
inc
dec
fstpl
fwait
lds
mov
insb
mov
jns
sbb
imul
ror
push
xchg
mov
cmp
pusha
frstor
pop
fneni(8087
and
das
and
mov
cld
push
es
jle
inc
pop
popa
lods
mov
ja
orl
push
mov
in
das
push
imul
inc
pavgb
adc
inc
cmp
cmp
getsec
sbbl
cmp
cli
sub
incb
insb
in
sub
xchg
xchg
jo
mov
jecxz
test
lcall
ljmp
in
test
push
cld
dec
push
popf
xchg
inc
mov
outsb
popa
mov
nop
push
popa
daa
adc
sbb
lcall
inc
pusha
xor
mov
mov
call
out
pop
add
jle
jb
clc
sub
pop
clc
clc
push
dec
add
mov
mov
clc
jmp
lcall
fwait
aad
sub
cltd
xchg
jo
mov
add
rcrb
mov
cld
xor
xchg
cmp
jg
push
mov
arpl
hlt
imul
or
je
fwait
cmpsb
mov
repnz
mov
dec
jp
mov
push
and
sub
fldcw
pop
xchg
jp
popa
xadd
fadds
push
jno
mov
sbb
insb
hlt
jae
loope
push
test
sbb
jo
test
das
jl
hlt
dec
ret
ret
fs
push
cmp
dec
arpl
fdivs
fldz
pop
xor
into
loope
adc
inc
imul
jl
clc
adc
lds
and
sub
pop
jb
mov
daa
shlb
sub
pop
es
scas
add
aas
sub
pop
rcr
bound
push
inc
jae
out
push
adc
cld
xor
int3
repnz
mov
cmp
test
int3
dec
fwait
pop
rcl
add
js
cmp
test
adc
lret
ret
cli
rcll
pop
clc
das
outsl
dec
ret
jb
xchg
mov
push
xchg
and
dec
loope
jmp
add
mov
insl
setg
cmp
adc
cmp
cmp
dec
jl
cmpb
jle
cltd
adc
pop
mov
nop
decl
loope
mov
fcompl
inc
andb
push
add
push
push
push
je
daa
jne
add
je
jg
mov
in
popf
int3
bound
pop
jp
leave
push
mov
cwtl
imul
pop
mov
in
xor
lods
jl
fdivrl
dec
add
xor
add
sti
push
cmp
sti
and
loop
sub
outsl
lcall
stos
loopne
enter
xor
and
mov
mov
push
sub
iret
lods
je
xlat
push
rcrb
jg
js
or
inc
popf
sbb
jne
jb
aam
sahf
pop
bnd
addr16
aam
cmp
jmp
adc
xchg
mov
std
adc
pop
les
sbb
inc
inc
movsl
add
arpl
fistpl
pop
in
xor
or
daa
scas
cwtl
cmp
mov
and
sub
js
xor
pop
das
adc
loopne
scas
ror
aad
mov
fimuls
stos
cmc
inc
fbstp
xor
or
filds
fwait
sbb
jbe
inc
loope
jo
inc
inc
mov
inc
or
mov
inc
pop
aam
pushf
push
mov
or
adc
or
lock
lcall
les
faddl
cwtl
aam
orl
push
push
fadds
push
push
mov
scas
mov
cmp
mov
and
es
sti
mov
wbinvd
imul
cmpsl
out
notl
in
decl
popa
push
sbb
sbb
fs
ja
aad
inc
pop
or
add
mov
lahf
stos
loop
mov
clc
and
add
mov
push
imul
pop
and
pop
pcmpeqw
imul
pop
inc
sbb
sub
add
jecxz
or
sbb
movsl
inc
out
mov
cs
cmpsb
cmp
cld
add
mov
xor
decb
pop
je
cs
inc
test
cld
xchg
push
enter
outsb
mov
std
mov
loope
nop
std
hlt
scas
jns
pop
mov
and
cmpsb
inc
cmp
mov
sub
mov
inc
mov
pop
aas
lcall
pushf
iret
push
cmp
push
mov
imull
lcall
ljmp
jp
bsr
stos
inc
in
mov
decl
roll
add
sbb
ret
add
outsl
ja
sbb
jmp
daa
mov
mov
repz
aam
or
push
pushf
out
call
push
sub
daa
test
mov
arpl
mov
in
cld
sub
jl
xchg
loope
jae
jp
or
dec
sti
mov
sub
and
sahf
lods
aaa
push
cmpsl
jmp
in
xchg
push
xchg
pop
inc
push
scas
lret
lcall
xchg
scas
addr16
mov
sbb
cltd
mov
lods
adc
jmp
pusha
or
push
and
cmp
hlt
test
inc
ljmp
in
xchg
mov
inc
xor
adc
xchg
scas
mov
or
jecxz
outsb
sti
push
pusha
mov
out
or
sub
movsb
insb
xchg
test
add
insl
push
iret
popf
lcall
or
ret
sbb
stos
mov
jp
sahf
shlb
inc
das
sbb
test
ds
call
push
test
jmp
pusha
daa
push
xchg
aaa
ret
sbb
push
xchg
add
arpl
dec
jno
in
push
sbb
mov
inc
insl
xlat
dec
ret
call
dec
add
lock
push
loope
scas
decb
mov
fcomi
jo
aas
lea
mov
add
jmp
lock
cmc
or
push
jbe
sub
mov
sbb
divl
adc
xchg
out
loop
xchg
rcrb
jno
cmpsb
or
xor
add
push
in
jnp
je
inc
cli
js
cwtl
cmp
lods
int3
sbb
dec
xchg
clc
call
neg
fs
or
andl
shll
enter
dec
cmp
sbb
pop
pop
popf
shl
lret
scas
inc
bound
lock
fdivrl
sbb
xor
and
mov
dec
push
mov
xor
sahf
dec
mov
fcoml
mov
lcall
cmp
mov
popf
or
fiadds
js
imul
jl
push
inc
adc
out
inc
push
in
pop
and
mov
adc
pop
push
insb
push
push
lds
mov
add
in
fcmovnb
clc
cmc
imul
sbb
pop
cmp
push
jne
inc
pop
xlat
popf
stos
push
fimuls
lret
push
cmp
add
sub
cmp
mov
add
push
fidivs
pop
inc
xor
adcb
je
arpl
cli
and
mov
sarb
cmp
or
fcoms
shll
bswap
mov
popl
ds
mov
xchg
test
add
shrb
xchg
mov
data16
popf
adc
sub
add
testb
dec
inc
sub
outsl
cltd
cmc
sub
jp
or
into
repz
sbb
nop
push
loop
adc
jae
add
fimuls
adc
imul
ja
dec
jmp
jns
js
je
outsb
xchg
hlt
lahf
dec
sbb
out
cmp
pop
mov
pop
lds
adc
outsb
popa
pop
mov
mov
inc
xor
hlt
popa
pop
xor
xchg
aas
and
mov
sti
pop
dec
lds
jbe
jo
test
sub
ret
outsl
add
sub
or
or
js
lcall
pop
pushf
jecxz
shll
or
push
insb
insb
and
push
sbb
out
or
mov
push
repz
in
and
add
sub
inc
jo
mov
mov
out
and
outsb
dec
in
mov
cld
dec
gs
out
std
or
je
iret
jmp
inc
mov
pop
inc
add
mov
xor
pop
stc
hlt
pop
fcompl
mov
out
std
fcomi
push
outsl
add
jp
add
into
arpl
repz
aam
cmpsl
test
xor
test
lcall
cmovg
inc
jecxz
jno
inc
or
mov
es
xlat
fsubrs
cmpsl
divps
outsb
leave
dec
pop
pop
lock
repz
addl
mov
xchg
mov
add
mov
bound
cmp
cmp
ret
aad
xchg
inc
scas
lea
pusha
das
lods
xchg
cmp
jne
xor
mov
add
test
pushf
jp
sub
insl
sub
or
xor
cs
mov
hlt
pop
sub
sti
scas
add
lds
xor
add
add
push
vpextrw
lds
cmp
xlat
imul
ss
jmp
ss
push
mov
or
jmp
addr16
imul
shll
xor
cmp
push
loop
test
in
cmc
jl
mov
fdivrp
sub
imul
loope
ret
inc
lock
sub
pop
roll
mov
sub
dec
push
and
or
jnp
es
test
and
and
into
es
sbb
out
mov
scas
inc
mov
mov
mov
push
or
inc
imul
or
fcmovnb
lds
enter
mov
or
nop
aaa
sbb
outsl
mov
push
cmp
imul
pop
and
das
mov
inc
sbb
frstor
inc
cli
rorb
or
shlb
xor
mov
jl
mov
add
add
push
out
in
add
call
cmp
outsb
mov
adc
fs
sub
ret
adc
test
cmc
push
movsb
ja
jns
repz
add
sbb
xchg
mov
mov
je
pop
pusha
sar
xor
mov
inc
js
div
cmc
sbb
addb
cs
inc
mov
inc
push
inc
insb
arpl
cltd
sti
sti
bnd
push
icebp
lea
lret
scas
popa
pusha
enter
ret
popa
std
mov
popf
jo
nop
mov
les
lds
out
mov
dec
fwait
mov
and
cmc
pop
push
sbb
movsl
sbbb
sbb
insl
mov
dec
xor
movsl
xchg
cmp
inc
dec
cmp
add
add
xorb
mov
push
loope
pop
cmp
cmpsb
pop
test
dec
pushf
xor
jnp
stc
fwait
mov
int
loopne
add
aas
lods
xchg
add
cmp
ja
xchg
jp
push
orb
bound
cmp
mull
mov
pop
dec
test
jae
mov
adc
push
enter
xchg
inc
push
inc
cmp
mov
ja
in
sub
push
xchg
cmp
cli
and
jmp
sbb
sub
leave
scas
pop
mov
mov
and
mov
ljmp
ret
push
xor
jb
add
bound
lea
icebp
jl
sbb
pushl
insb
pusha
or
sbb
jle
icebp
inc
dec
out
icebp
into
pop
rolb
jno
aam
cld
xchg
mov
xor
push
cmp
mov
popf
out
rep
jnp
shll
mov
int
jb
mov
mov
push
cwtl
inc
out
lods
sarb
jge
cmp
or
pop
lods
lahf
add
xor
cmc
sub
fsts
cmc
and
jg
jno
mov
mov
pop
push
icebp
loopne
test
rorl
inc
mov
subl
xor
imul
or
loop
daa
aam
test
push
and
js
test
pop
push
sub
jg
lds
push
pusha
jge
xchg
sti
mov
dec
adc
cmp
lea
mov
test
loopne
outsl
mov
int
das
inc
pop
out
xchg
ss
inc
jp
push
bound
mov
iret
pop
pop
rol
push
aad
jae
or
into
shr
xor
fcoms
jns
fs
lret
xchg
repz
jecxz
aad
mov
adc
and
inc
sbb
inc
icebp
inc
scas
adc
inc
sbb
cmpsl
jno
cmp
inc
add
jecxz
adc
std
or
add
push
mov
cmp
or
jbe
sub
cmp
setge
fidivrl
lea
ret
or
add
sub
test
push
adc
or
je
and
aad
aam
lds
pop
nop
pop
push
testb
cmpsb
or
xchg
inc
jns
push
or
xchg
rcl
fiadds
mov
push
dec
cwtl
stc
rol
cmpb
ret
push
mov
and
xchg
sub
or
movsl
stos
mov
mov
push
aam
pop
xchg
stos
daa
jmp
fidivrl
mov
adc
push
ja
cmp
add
aaa
xchg
clc
shl
add
stos
ljmp
lea
sub
and
mov
pusha
orb
sbb
or
xor
das
je
push
inc
into
stos
lcall
sbb
jnp
rcrl
ds
add
sub
add
sub
sti
imul
sbb
sbb
rolb
cmc
cmp
scas
imul
push
sub
pop
xchg
mov
jno
stos
icebp
inc
add
cmp
jecxz
push
inc
dec
xor
stos
and
jne
jp
sbbb
out
mov
lods
xor
mov
sbb
incl
icebp
push
xor
das
pop
adc
daa
out
inc
popf
orb
mov
mov
and
jmp
mov
inc
loop
dec
andl
mov
mov
pop
mov
aam
sbb
push
adc
sbb
das
js
mov
daa
shlb
dec
icebp
stos
add
pop
and
sbbb
dec
test
adc
je
icebp
ss
sbb
lods
push
or
hlt
ret
or
in
fwait
inc
hlt
inc
cmp
test
aas
cmp
shlb
stos
xlat
cmp
mov
repz
mov
mov
push
xlat
mov
ret
cld
cmpsb
push
leave
and
mov
sub
je
xchg
lock
mov
call
iret
pop
xor
inc
test
add
je
inc
cmp
cmp
sbb
add
cmp
xor
dec
or
mov
fsts
std
rcr
or
jge
popa
js
mov
hlt
int
loope
bound
sahf
pop
fnsave
mov
dec
rorb
xlat
icebp
mov
dec
adc
sub
sbb
fcmovnbe
shll
dec
sbb
fildl
or
and
sbb
sub
int
cmp
shrb
pop
scas
fs
pop
pop
das
jbe
dec
mov
ret
push
fisttps
stc
adc
pusha
clc
enter
lret
xchg
test
js
bound
mov
arpl
sbb
lahf
mov
cli
xor
mov
push
sbb
loopne
iret
sub
xchg
push
in
js
test
adc
loop
cmp
push
sahf
and
push
adc
sub
call
rolb
insl
xor
stos
mov
rep
enter
cmp
bound
mov
shlb
mov
ja
lea
int3
mov
or
lret
lock
xor
pusha
jo
xchg
mov
push
and
pop
push
sub
prefetch
das
lods
dec
aaa
mov
lods
sub
dec
icebp
jl
or
add
or
ret
jne
add
pop
cmpsl
jmp
loopne
add
push
and
es
stos
call
cmpsl
mov
incb
leave
push
xor
or
mov
mov
push
and
repz
add
or
call
popa
stos
lods
test
mov
sub
bound
js
dec
mov
inc
xchg
mov
cmpb
fisttpll
add
iret
dec
fwait
in
aaa
sbb
fyl2x
xchg
add
adc
fldl
mov
loope
add
dec
fs
sub
jg
ret
mov
xor
jecxz
outsl
mov
jns
loopne
cwtl
sbb
sarb
inc
and
pop
test
sbb
dec
jl
rorb
add
mov
rclb
sbb
sbb
leave
dec
inc
loopne
jmp
xor
xor
push
xor
mov
mov
xchg
cmpsb
pop
or
stos
pop
mov
addb
lahf
and
adc
int3
js
mov
dec
push
mov
lcall
arpl
mov
dec
add
xor
jp
xchg
pop
in
mov
bound
roll
inc
lods
jo
sbb
mov
fsubr
es
dec
fdivr
dec
push
sbb
stos
sub
dec
inc
cmp
in
sub
xchg
pop
sub
out
test
das
andb
test
rolb
rcrb
jae
pop
sbb
xor
fs
rcrl
jno
push
inc
daa
sub
jle
lea
xchg
adc
mov
idivb
cmp
movsl
rcr
sbb
push
add
pop
xchg
pop
and
sbb
lods
pop
cltd
popf
inc
push
sti
add
and
adc
icebp
stos
sub
jge
mov
dec
jb
js
outsb
in
mov
xchg
pop
add
cmpsl
sbb
push
cmp
mov
sub
push
adc
aas
mov
mov
insb
cld
cli
nop
enter
mov
jne
outsl
les
jp
pop
roll
jp
fwait
scas
lea
je
and
enter
inc
out
mov
pusha
jp
dec
ss
in
ss
and
rcrb
cmc
das
xchg
push
adc
pop
xor
aaa
jo
fnsave
pop
and
cmp
ret
pushf
jp
pop
inc
jl
int3
adc
jg
inc
pop
lcall
test
inc
aaa
sub
xor
rol
sbb
cld
add
rcll
push
inc
jl
adc
pop
inc
out
lcall
sub
cmp
xor
les
fiaddl
xor
loope
ljmp
adc
pop
jbe
jle
ljmp
pop
push
inc
sbb
jno
icebp
mov
xor
push
mov
ret
jns
rolb
and
inc
or
mov
mov
push
lds
dec
adc
sub
and
push
cmc
cmc
lods
js
cmp
inc
ret
mov
jnp
pushf
lds
sbb
mull
inc
ret
jns
gs
shl
pop
in
mov
add
add
xor
cmpsb
sbb
dec
xchg
scas
movsl
mov
int
mov
rcrb
dec
mov
dec
flds
repnz
js
add
out
inc
orb
mov
push
jns
or
push
jg
push
pop
jmp
fcom
rol
int
lods
cld
sbb
mov
js
sbb
fiaddl
or
push
sahf
data16
push
test
clc
jmp
jge
test
aaa
fcomp
imul
fs
mov
dec
lds
adc
aad
imul
das
pop
sbb
loopne
stos
ss
dec
pop
or
inc
addr16
cmp
push
pusha
pop
add
mov
insl
movsb
add
ficoml
scas
imul
mov
adc
loope
sub
sbb
mov
mov
rcll
sub
subb
and
cli
cmp
pop
sub
aam
mov
inc
pushf
push
mov
mov
out
cmp
or
js
jbe
dec
ret
ss
fs
adc
out
outsb
pushf
xchg
push
fs
adc
mov
stos
xchg
push
xor
addl
add
inc
or
pop
adc
inc
dec
pop
test
rcll
xchg
xlat
cmc
addb
fldl
test
jge
daa
lcall
and
dec
ror
xor
push
scas
xchg
mov
js
mov
xchg
scas
push
out
dec
xchg
pop
sti
adc
and
mov
add
stos
aam
loope
push
mov
std
dec
dec
dec
aad
in
push
and
fldenv
enter
loope
pop
fs
xchg
leave
mov
ss
and
imul
pop
dec
cmp
cld
mov
push
jbe
movsb
loopne
sub
jge
in
or
jecxz
add
stos
fidivs
pop
inc
cmpb
cmpsb
mov
sub
lds
es
jecxz
inc
and
nop
js
lea
or
iret
lods
push
pusha
xchg
jp
xor
add
jnp
aaa
loop
inc
inc
outsl
jmp
rcrb
add
sbb
fisubl
out
sub
pop
ss
jbe
xchg
aam
fldl
add
lahf
jmp
xchg
mov
insb
xor
add
movsb
push
cmp
jb
or
jmp
nop
in
push
push
test
sub
fnstsw
sbb
cmp
lock
mov
ret
xchg
adc
hlt
push
xchg
sub
pusha
daa
call
icebp
push
mov
fimull
aas
sbbb
xor
push
dec
movsb
subb
mov
fsubs
call
push
lds
push
add
jns
xchg
iret
sbb
lea
and
push
sub
adc
xlat
jge
push
lods
sete
in
ret
imul
xorb
pushf
loope
lret
sahf
xorb
int3
push
mov
fisttps
loopne
lea
pushf
and
push
sub
inc
mov
sbb
or
jns
stos
or
sbb
lods
dec
repnz
bnd
push
sub
pop
xchg
fwait
loopne
jmp
adc
test
je
loope
clc
mov
mov
mov
adc
cld
mov
xchg
xchg
push
dec
push
sub
adc
push
jp
cli
test
scas
rolb
xchg
gs
shlb
push
cli
in
mov
dec
sbb
leave
jmp
push
ret
jne
test
cmp
jno
mov
adc
inc
jno
leave
adc
lret
cwtl
push
xchg
loop
mov
out
in
mov
insl
aaa
ljmp
stc
mull
lahf
cmpsl
push
mov
pop
lcall
pop
fsts
stos
cmp
jbe
mov
icebp
push
jge
mov
cmc
adc
jne
icebp
mov
fsubs
fstpl
out
jg
sub
xchg
jo
movsl
dec
and
cmp
jne
aaa
inc
pop
xor
jmp
push
test
xchg
or
insl
orb
mov
xor
inc
add
orb
add
cmc
push
cmp
and
and
and
push
imul
jns
das
movsb
sahf
loopne
and
dec
push
icebp
lahf
cmpsb
les
cmc
pop
dec
jmp
cmpsb
mov
add
pop
inc
insb
xchg
stos
xor
add
pusha
push
inc
imul
mov
xor
lock
mov
hlt
loop
cmp
rcrl
xchg
loope
push
incl
sbb
inc
inc
dec
movsb
ret
push
rcl
mov
adc
mov
pop
out
daa
push
in
push
and
roll
fmuls
fists
stos
mov
adc
xor
hlt
cld
sahf
inc
scas
sbb
in
loopne
or
pop
outsl
mov
sbb
adc
dec
add
pop
insl
fwait
rorb
jne
and
sbbl
sub
popa
inc
or
pop
xchg
iret
sub
dec
mov
mov
inc
adc
mov
out
inc
xor
add
pop
cmpb
pop
jne
jne
les
mov
pop
ss
gs
adc
pop
lcall
cmpsl
pop
cwtl
sahf
push
scas
mov
cmp
insb
adc
push
rcrb
adc
lret
jecxz
push
mov
fsubrs
repz
movl
push
inc
cmc
or
cmp
sbb
cmpsl
iret
out
lcall
xor
std
scas
push
xorl
jge
mov
pop
in
sub
xor
pop
dec
ja
jmp
mov
add
inc
push
pop
cmc
nop
out
in
lods
inc
xchg
iret
nop
dec
mov
dec
mov
inc
dec
mov
rclb
ljmp
add
mov
mov
mov
rcll
jae
mov
xchg
sbb
sbb
pop
sahf
lock
lret
sub
ds
sub
lds
xchg
divl
mov
dec
aam
stos
mov
ret
shr
jge
jnp
lahf
pop
cmp
test
test
mov
pop
cli
jne
std
pop
cmp
pop
pushf
popl
lods
sub
sub
roll
cmp
mov
jbe
aas
sahf
imul
push
and
xor
or
pop
jb
jae
mov
sbb
sbb
ljmp
lret
pusha
add
jb
movsl
bound
xchg
jo
pop
stos
mov
call
lods
test
scas
rclb
or
jbe
pushf
sar
popf
in
inc
xor
jns
cmpsb
addr16
movsl
negl
push
pop
nop
adc
push
sbb
push
sbb
sub
ret
test
aas
cmp
or
lock
or
sub
xlat
mov
cmp
imul
add
testl
scas
les
ljmp
fistl
cmc
mov
mov
jo
pop
idivl
jge
cmpsl
mov
scas
lcall
out
mov
xchg
je
decb
out
pop
xor
sbb
pop
jne
pushw
cmp
outsl
or
mov
arpl
rcrb
in
andl
adc
fsubs
inc
mov
mov
mov
mov
push
or
and
dec
jg
dec
cmp
or
mov
pop
ret
and
ds
sbb
je
loopne
inc
cmp
jb
pop
sub
cld
leave
cmp
jp
mov
sbb
cmpsb
jmp
pop
cs
lock
sbb
cmc
mov
and
xchg
adc
mov
cmp
popa
in
ljmp
and
pop
dec
mov
cmp
xchg
jp
mov
test
test
inc
clc
cmc
cld
mov
andb
mov
lret
nop
pop
mov
cld
leave
push
fadds
daa
mov
cmp
xchg
mov
or
mov
xor
jo
inc
dec
jmp
int3
push
icebp
pop
scas
dec
mov
push
xchg
sbb
xor
sub
aad
pop
incl
sub
add
in
aaa
fstpt
lcall
jns
lods
sarb
add
mov
lods
jb
mov
jl
xorl
dec
or
loope
sbb
imull
test
fdivrp
cwtl
push
mov
enter
mov
faddl
mov
jl
roll
mov
and
mov
rorb
mov
enter
bound
cwtl
outsb
repnz
mov
adc
dec
mov
test
mov
inc
repnz
mov
mov
cwtl
sub
outsl
mov
inc
and
daa
icebp
mov
ss
test
dec
mov
cld
mov
shll
lds
dec
xchg
ljmp
int
jp
shr
cmp
or
sub
push
dec
mov
sbb
mov
shrb
sbb
dec
insl
jl
jo
daa
sbb
insl
sbbb
call
jmp
sbb
mov
idivb
xchg
cwtl
jecxz
popf
es
gs
iret
movsb
sahf
cmp
pop
mov
ficoml
xor
fimuls
sbb
inc
or
pop
mov
jp
inc
pop
pop
in
cmp
and
aam
out
mov
add
adc
in
xor
push
fidivs
jmp
sbb
and
inc
mov
je
jo
pop
or
sbb
push
jg
aad
fwait
mov
jg
cmp
subl
aaa
insb
mov
stos
push
test
lods
lock
fsub
sub
in
cmpsl
out
fwait
push
dec
call
lods
lods
mov
clc
mov
mov
inc
fisttpll
mov
lds
fwait
and
mov
jp
mov
or
jg
inc
js
dec
ret
add
cmc
loopne
dec
loopne
mov
adc
mov
cli
icebp
int
test
test
add
xchg
mov
pop
nop
pop
or
adc
ret
or
cli
ficoms
mov
cmp
call
push
sbb
dec
lds
cmp
xchg
or
cld
or
outsl
push
rcrb
cs
arpl
sbb
fidivrl
adc
xchg
dec
std
pop
and
xchg
mov
sub
pop
mov
pop
or
fdivrs
mov
add
adc
xchg
out
and
jg
pop
ss
push
cwtl
lock
sahf
dec
or
lock
pop
push
jo
fsubrs
stos
addb
mov
sbb
sbb
decb
fwait
xchg
sbb
push
pop
testl
xchg
out
mov
outsb
xchg
cltd
jp
sub
xor
fidivl
mov
and
aam
out
sbb
jmp
fbld
pop
sub
fisttps
shlb
testb
ret
pushf
cmpsl
loopne
pop
imul
jno
adc
in
push
js
jo
pop
push
inc
nop
es
lcall
xor
inc
lret
test
clc
xor
ss
push
fucomip
roll
xor
into
testb
push
jge
insb
jg
push
repnz
dec
jmp
mov
adc
loope
shll
sbb
add
outsb
ret
adc
pop
nop
jne
loop
hlt
push
orb
dec
movsl
dec
popf
insl
insl
xor
rclb
fs
jo
inc
movb
cmp
insl
mov
stos
stos
push
or
out
fdivrp
stos
insb
adc
dec
pushl
scas
add
nop
mov
dec
adc
call
xchg
cwtl
or
add
rcl
in
mov
push
testl
fs
fdivrl
cmp
or
loop
mov
mov
dec
popa
sbb
test
mov
cs
jmp
mov
mov
inc
movsb
mov
mov
jge
pop
mov
adc
adc
push
sbbb
or
adc
jecxz
test
cld
dec
push
adc
add
xor
fistpll
inc
xor
mov
dec
push
lods
shlb
or
out
cs
sub
sbb
call
stos
test
push
dec
call
sub
fwait
or
fs
mov
xchg
mov
rdmsr
ds
call
insl
mov
loope
pop
mov
dec
stos
sub
adc
lods
or
mov
sbb
push
jbe
pop
mov
sub
xor
cs
adc
in
insb
push
push
push
jge
push
dec
pop
cld
fisttpl
loopne
inc
mov
aad
and
cwtl
int3
aad
mov
mov
jecxz
insb
add
loope
adc
lods
jo
pop
cmp
push
sub
xor
mov
shrb
xor
or
push
mov
lock
dec
cs
mov
jae
shrb
sbb
jmp
cmp
jo
sub
int
scas
in
scas
and
popa
jge
test
push
jo
adc
lret
stos
int3
jge
popf
cmpb
loopne
jmp
dec
push
loopne
call
ss
or
fdivs
sub
ret
fcoml
cmp
sbb
loopne
jns
rol
pop
pop
aaa
mov
xchg
in
sub
lock
jnp
mov
shrb
loop
push
or
xor
sbb
fcoml
cmp
mov
inc
mov
adc
xlat
add
pop
aad
lock
push
push
cmp
xor
push
int3
and
adc
mov
pop
test
jb
scas
icebp
aad
push
sbb
fisubrs
ljmp
fisubrl
scas
inc
mov
jbe
lret
lods
cmpsl
popf
cld
sbb
pushf
push
fwait
mov
rol
mov
or
pusha
add
loopne
add
cmpsl
in
and
dec
push
int3
pop
test
and
push
xchg
or
mov
sub
mov
xor
or
mov
jne
inc
cmp
repz
sbb
bound
pop
ss
or
sub
sbb
call
fnstcw
ds
cmp
jle
loop
andb
mov
add
cli
push
aas
fwait
mov
cmp
dec
aam
ss
mov
addr16
fmull
mov
mov
fisttps
push
sbb
pop
mov
jl
sbb
mov
jae
lds
push
pop
std
movsl
dec
jno
mov
loop
adc
test
cmc
dec
jbe
inc
mov
xchg
ret
dec
fcom
aas
insb
sarl
and
sbb
imul
je
jae
cmp
xor
adc
bound
fidivrs
mov
mov
add
negb
jmp
sub
adc
mov
in
lock
mov
add
les
aam
mov
sub
cmp
xchg
mov
or
icebp
call
notb
jb
sbb
dec
clc
pop
fisubrl
cltd
pusha
mov
test
mov
xor
notb
jle
adc
and
pop
and
push
mov
push
fsubs
stos
loop
jo
mov
out
jecxz
mov
dec
mov
xor
xlat
xchg
lock
add
aam
and
mov
loopne
push
push
fcmove
push
ss
jg
mov
pop
sub
push
lds
push
mov
cmp
adc
mov
pop
inc
xor
and
fiaddl
pop
sbb
in
pushf
push
out
ss
mov
fldcw
xchg
jne
js
pop
hlt
sbb
pop
mov
ret
lahf
js
insl
cmpsw
bound
lahf
subb
cmp
loopne
adc
int3
out
or
rcrl
das
add
cmp
imulb
push
jle
scas
mov
mov
mov
pop
les
negl
popf
add
push
loope
repnz
xor
add
ficoms
cmp
in
jg
mov
cmp
test
js
mov
sub
adc
shr
add
andb
xchg
hlt
jne
add
cmp
cmp
jg
mov
ss
mov
ljmp
mov
daa
fmull
sub
push
mov
in
xor
mov
xor
lods
push
add
dec
dec
jp
ret
pop
or
sub
scas
and
incl
aad
es
dec
dec
cmp
jle
ljmp
dec
push
and
ficompl
sbb
push
mov
mov
insb
push
inc
repnz
insl
js
mov
jmp
or
or
lock
xlat
pop
gs
xchg
push
jp
lret
scas
adc
pusha
adc
in
jb
call
test
jp
mov
ds
call
sub
in
fsubrl
adc
mov
xor
sub
jns
inc
rol
nop
mov
push
shl
or
sub
xchg
pop
mov
sahf
jo
mov
sub
mov
in
dec
int3
shrl
mov
xor
nop
mov
daa
mov
test
fidivrl
sbb
push
shl
fildl
sub
pop
ljmp
ret
mov
mov
fs
iret
jle
add
or
test
jmp
push
or
pop
cmpsb
dec
jo
adc
aam
repnz
cmpsb
test
mov
adc
adcl
add
movsl
jmp
sbb
add
int3
imul
mov
push
sub
cmp
cs
push
cmp
enter
int
adc
jo
push
ret
lock
aas
jle
fcompl
js
nop
or
cld
inc
leave
lret
clc
mov
imul
icebp
cmpsb
pop
scas
mov
mov
pusha
sti
mov
inc
pop
pop
or
cltd
cmp
push
cmc
fsub
adc
or
mov
pop
mov
xlat
mov
push
add
mov
test
ficomps
sub
fildll
out
sub
cmpsb
cmove
jno
add
jl
push
aaa
rcr
add
aaa
fsubrp
mov
lahf
sbb
push
out
stc
cmp
xchg
addl
test
mov
mov
and
outsl
mov
scas
push
mov
push
sub
mov
dec
lea
add
clc
pop
pop
fwait
mov
loope
cli
dec
dec
movsl
or
cmp
clc
mov
xorb
les
mov
lock
sub
fcomps
sti
dec
outsl
push
hlt
in
sahf
or
daa
push
pop
loop
xchg
mov
fcoml
lret
leave
jl
inc
or
mov
aam
aam
or
ss
add
xchg
pop
cmpsb
xorb
movsb
loope
mov
inc
jnp
notb
mov
jle
call
inc
sbb
jp
scas
js
enter
test
stos
pop
or
cld
pop
shlb
sbb
movsl
int
lock
xor
pop
add
push
jmp
xchg
or
ret
lcall
dec
push
aas
loope
in
xchg
out
hlt
lock
or
aas
cmp
mov
lret
cli
push
push
mov
pop
call
pop
xlat
lcall
jle
push
jns
cld
add
pop
mov
arpl
out
into
mov
in
jo
fcomps
scas
out
lahf
xor
mov
fs
pop
jg
call
pop
pop
shl
rolb
out
lret
xchg
out
cmp
sbb
hlt
or
in
shlb
add
mov
xor
mov
sub
stos
es
jo
cmpl
xor
movb
fists
xchg
sbb
rcr
add
xchg
dec
fdiv
incl
lds
mov
clc
jle
add
icebp
push
xorl
or
xorl
xor
sarb
and
rol
xchg
in
mov
scas
jmpw
lods
je
bndldx
shlb
mov
xor
mov
xchg
push
xchg
andb
mov
pop
and
hlt
and
in
xor
ret
xchg
das
mov
adc
add
push
cmpl
add
insl
out
pop
and
add
jb
sbb
addr16
mov
mov
das
in
mov
cmp
and
cmc
jecxz
sbb
lods
ljmp
jmp
xor
or
imulb
inc
adc
lret
adc
mov
roll
or
cmp
test
mov
jnp
inc
add
inc
sub
cmp
sub
inc
in
mov
jb
test
lods
out
andl
mov
push
mov
pop
sub
bound
orl
add
sti
push
js
or
addr16
rcll
or
cmc
dec
nop
int3
or
pop
pop
clc
cli
test
add
push
roll
push
out
loopne
ret
dec
in
push
jbe
lds
adc
ret
lock
stc
inc
mov
daa
sub
pusha
je
test
test
fdivs
inc
and
inc
das
add
in
rclb
loop
pop
cmc
cmp
mov
and
pushl
push
es
add
pop
inc
and
jl
insl
incl
cmp
sbb
rep
or
pop
clc
aaa
mov
xorb
xchg
or
mov
push
popf
insb
xchg
jl
xor
push
into
out
cs
adc
mov
mov
into
jp
add
shrb
scas
jae
ljmp
std
sub
mov
insb
cmpsl
leave
push
add
mov
add
cs
filds
mov
inc
nop
ljmp
mov
loopne
fimull
outsb
mov
loop
pushf
jno
xchg
xchg
push
sbb
test
mov
push
mov
or
push
xor
popa
jns
xor
icebp
pushf
cwtl
push
ret
mov
adc
enter
call
sarb
xchg
test
inc
loop
and
mov
mov
data16
shll
js
dec
pusha
and
jbe
ja
push
or
push
xor
mov
pop
mov
dec
pop
mov
nop
pop
out
push
cmp
inc
aad
xchg
cld
out
mov
aaa
aas
cs
mov
cmp
pop
fldt
xchg
cmp
outsb
nop
push
jl
cmp
xchg
adc
jle
mov
mov
add
push
mov
push
cmp
cmpl
lds
add
xchg
push
enter
adcb
sarl
sbb
jnp
push
lea
xor
mov
loop
pop
jl
mov
lcall
sub
fcomps
sbb
add
mov
lds
sbb
outsl
or
decl
pop
pop
mov
dec
insb
mov
repnz
pushf
je
ljmp
pushf
cmpsb
push
adcb
mov
scas
jbe
loope
inc
add
xlat
andl
cmc
adcb
push
push
pop
inc
sbb
add
mov
out
push
fsubr
sub
rorb
popa
rcrl
pop
adc
or
cli
sbb
stc
lret
rcll
fildl
test
push
sbb
pop
rorb
fwait
nop
push
lea
cmp
repz
inc
dec
adc
jo
outsb
inc
insb
mov
and
mov
lret
andl
repnz
inc
xor
or
adc
imul
jo
popa
xor
inc
push
add
fimuls
mov
push
mov
insl
jo
aad
add
mov
sub
add
ja
or
sbb
outsb
cwtl
inc
push
or
shlb
outsl
adc
add
push
test
mov
adc
inc
jp
push
push
outsl
push
call
push
test
lahf
shll
jbe
or
dec
sub
inc
push
cmpb
outsb
cld
mov
stc
leave
fcompl
sbb
mov
loopne
add
pop
pop
shrl
aam
loope
enter
dec
pop
test
mov
push
stc
fadds
jl
mov
mov
lods
movb
mov
icebp
out
add
push
dec
dec
scas
mov
adc
imul
rorb
repnz
adc
in
xlat
mov
pop
or
push
inc
add
shlb
ficoms
call
adc
pop
mov
or
sub
jp
cld
adc
aad
push
adc
ljmp
sbb
sti
scas
xchg
add
ja
cltd
pop
aas
es
push
nop
dec
adc
addr16
inc
inc
adc
push
sub
lock
es
adc
jecxz
popa
dec
imul
movsl
xor
daa
mov
js
sub
in
mov
out
push
les
dec
inc
xchg
pop
push
add
ret
fs
std
push
sar
adc
jbe
xchg
add
dec
sbb
call
into
ret
pop
mov
mov
pop
mov
sub
push
stos
fisttpll
fstps
pop
jbe
leave
into
fs
cmp
in
xor
xorb
mov
inc
insb
mov
lock
sarb
mov
adc
inc
out
sahf
popa
mov
ficomps
pop
dec
push
or
jne
push
or
mov
fs
jl
mov
icebp
push
mov
loopne
dec
pop
mov
in
xor
mov
pushf
mov
push
pop
subb
or
jbe
mov
pop
aaa
mov
es
cwtl
stos
dec
jae
stc
sub
inc
mov
inc
or
test
or
push
loopne
mov
mov
xor
adc
clc
sub
or
add
dec
xlat
sbbb
loop
mov
sti
rorb
fcoms
sub
cwtl
mov
cmp
push
pop
pop
cmpsb
push
inc
pop
test
adc
mov
bound
mov
insb
outsl
add
mov
lea
lods
xor
cmc
loopne
mov
adcb
gs
cwtl
mov
ja
push
popw
add
cld
mov
xor
ja
out
xor
add
lea
sarb
inc
dec
mov
mov
mov
call
ret
xor
and
jmp
movsb
lds
push
fwait
mov
daa
sub
mov
dec
lods
add
mov
sub
lcall
sti
fs
mov
movsl
push
jmp
loope
jp
imul
cmpsl
cmp
add
sbb
pop
or
pusha
je
pop
mov
mov
sub
adc
mov
bnd
mov
and
rcl
push
cmp
adc
mov
jecxz
and
sbb
insl
mov
xchg
add
std
jns
jl
or
aas
push
jbe
adc
adc
pushl
add
dec
lea
inc
ljmp
jo
push
adc
push
mulb
cmc
push
adc
imul
xchg
xor
push
inc
sub
cmpsb
dec
sub
shrb
and
sbb
mov
loopne
mov
and
js
adc
lcall
inc
fstps
shrb
lahf
dec
les
hlt
loope
pop
mov
push
and
xchg
sbb
push
lods
push
test
cli
clc
out
inc
mov
lret
mov
push
sbbb
dec
xor
enter
inc
sahf
and
or
pop
loopne
pop
pop
xor
scas
push
push
pop
lahf
rclb
push
dec
mov
cmp
je
sub
js
sbb
inc
lods
js
mov
xor
lea
out
xor
jbe
mov
lret
pop
push
or
or
insl
shlb
add
mov
mov
mov
sbb
addb
ds
mov
jb
clc
pop
daa
xor
add
aas
or
dec
mov
pop
xor
jae
in
aam
sub
divb
pop
adc
cli
xchg
xchg
inc
mov
pop
out
fisubs
cmpsb
mov
inc
mov
and
sub
pop
or
push
sub
add
push
inc
or
loope
push
cwtl
xchg
cmpsl
cmpl
imul
pop
mov
movsl
ret
mov
cmp
fwait
test
jg
and
shlb
cltd
jle
das
dec
in
and
fisubs
shrl
movsl
mov
imul
xchg
movsb
jl
cs
sub
ds
jbe
mov
xor
push
mov
jge
in
or
xor
pusha
mov
mov
je
jge
test
aam
mov
push
movsb
adc
andb
inc
xchg
imul
pusha
sub
xchg
jo
xlat
mov
and
inc
mov
inc
or
adc
xor
mov
les
sub
and
add
fbld
dec
add
das
arpl
int
sbb
push
jl
in
cmp
scas
rol
pop
fs
push
call
std
std
sub
xorb
fs
ljmp
in
xor
inc
mov
icebp
xor
lret
mov
jnp
push
push
jbe
or
add
lcall
pop
test
ss
push
pop
inc
sar
mov
test
xchg
je
push
out
mov
cmp
add
lea
shll
lret
mov
push
adc
push
rcrl
jecxz
adc
xchg
js
lods
leave
jp
mov
or
mov
sub
adc
fstpt
xor
ja
daa
lahf
test
xchg
xchg
add
sbb
lret
mov
test
cmp
fldl
add
je
test
and
js
mov
jae
out
std
add
leave
mov
dec
repz
loop
sbb
aaa
add
lahf
xchg
outsl
or
sbb
je
ret
dec
jl
push
mov
bound
mov
or
mov
lcall
pop
dec
xchg
or
orl
xor
or
pop
and
insl
cmpsl
sbbl
and
add
adc
jge
jo
loope
push
test
not
dec
loop
dec
dec
iret
add
in
mov
sbb
movsl
add
add
sub
cmp
pop
in
roll
fdivrl
dec
xlat
push
daa
test
out
xchg
mov
ret
shll
lock
ja
adc
inc
dec
mov
mov
sbb
ss
sbb
mov
out
or
fists
loop
inc
leave
clc
xor
imulb
les
sbb
jbe
adc
push
shll
mov
leave
xor
jb
stos
pop
outsl
loope
and
or
andl
mov
cmp
mov
jb
mov
lahf
mov
push
popl
jp
outsb
or
popa
fisttpll
cmp
mov
es
addb
jge
pop
shrb
pop
cmc
push
scas
subb
adc
rorb
pop
jg
adc
adc
push
mov
dec
aad
imul
xor
or
outsl
push
rcrb
in
movsl
pop
xorb
jnp
stos
and
xchg
lock
add
rcrl
adc
sub
xor
xor
xchg
jg
lods
mov
aas
lds
push
scas
popa
and
jb
or
mov
inc
xlat
or
mov
xor
mov
and
jmp
sub
inc
dec
add
fs
and
sahf
xchg
cmp
dec
jmpw
jne
cmpsb
cmp
test
push
xor
lds
test
xchg
es
adc
lret
inc
and
sub
push
and
mov
mov
push
int3
lock
sub
adc
jl
push
cmc
push
stc
test
mov
xchg
andb
stos
das
mov
mov
popa
push
xchg
jle
add
mov
rol
pop
inc
push
cmp
cmc
ret
sbb
xlat
or
fistl
aam
cmp
and
rcll
faddp
or
sbb
movsb
inc
aam
sahf
out
mov
push
loope
push
ficomps
scas
cmp
repnz
shlb
cs
mov
adcl
cs
nop
pusha
pop
test
mov
jecxz
test
pop
inc
lret
fmuls
ja
repnz
popl
roll
push
mov
aad
outsl
push
push
dec
bound
lcall
ret
inc
cmp
ljmp
and
dec
xor
jmp
stos
dec
jecxz
scas
fcmovne
enter
push
jbe
push
push
cltd
mov
add
lea
mov
in
data16
and
mov
inc
scas
fwait
clc
push
nop
pushf
movsb
push
lods
and
mov
jmp
push
push
mov
jne
pop
fmul
xchg
jnp
mov
xorb
js
cwtl
push
xchg
test
push
xor
aaa
iret
shrb
sub
ret
sub
xor
dec
mov
and
push
into
mov
jge
dec
xchg
lret
adc
jmp
cmp
aas
xor
push
mov
loop
and
jno
jmp
arpl
outsb
jmp
mov
gs
or
mov
jp
cmp
icebp
cmp
sub
cmp
push
mov
movsb
movsl
push
ret
rorb
sti
inc
movsb
test
jo
push
aam
das
push
insl
or
outsl
adc
push
jo
scas
push
xchg
or
sbb
cmp
adc
fwait
inc
sub
mov
rolb
jmp
fidivs
sarb
cmp
push
sub
pop
jno
jae
mov
divl
lds
xor
jl
pop
pop
fwait
inc
sub
xchg
adc
mov
out
ret
insl
stos
push
imul
push
imul
in
jo
jne
jp
sbb
mov
adc
sbb
fwait
mov
push
add
dec
or
dec
aam
js
movsb
insl
ja
add
cltd
push
aad
in
jmp
imul
sbb
lcall
lds
popa
xchg
fdivs
negl
loop
mov
scas
hlt
loope
jnp
ss
sub
push
inc
fists
mov
ja
inc
adc
loope
sbb
test
inc
aam
outsb
jmp
jl
loope
sub
dec
clc
sbb
inc
adc
jmp
stos
jnp
jo
rcrl
add
aaa
roll
popa
repz
and
push
or
je
stos
iret
or
jg
fwait
movsb
enter
mov
sar
mov
cmp
jno
popf
mov
sbb
test
mov
jae
ret
and
pop
jg
loopne
mov
lods
sbb
daa
xchg
xchg
sub
xchg
mov
inc
xchg
jne
dec
pop
ret
xchg
mov
test
inc
add
dec
fstp
pop
xor
xchg
xor
dec
cmovbe
or
loope
mov
sti
sub
ret
push
cld
shll
push
cmp
adc
sub
inc
xchg
adc
pop
in
test
mov
push
loope
pusha
insl
adc
lea
fstl
in
mov
mov
xor
xor
xor
out
dec
fwait
inc
cmpsb
add
fldl2e
es
jb
jno
xchg
aam
incl
add
sbb
push
lock
jmp
data16
xor
xchg
jl
lds
inc
and
jo
jl
loopne
dec
jno
push
sub
and
mov
in
xchg
sbb
jns
std
mov
sbb
test
jge
mov
push
in
loope
jecxz
js
fwait
mov
sbbl
cmpsl
inc
fwait
popf
daa
test
test
xor
call
jge
push
mov
jb
mov
adc
lds
test
enter
cli
mov
dec
inc
push
in
pop
movsb
sbb
out
cmpb
mov
fcompl
pop
mov
adc
xchg
mov
popf
enter
push
pop
sahf
mov
push
dec
cmp
loop
cmp
rcl
jnp
lds
sbb
js
adc
cs
adc
les
mul
xchg
pop
ljmp
insb
and
outsl
into
iret
bound
cmp
in
push
aaa
loope
test
sub
fwait
imul
movb
mov
or
movsb
pop
mov
mov
mov
push
push
push
cld
addl
test
sti
sahf
cmovp
push
aaa
pusha
jg
adc
mov
mov
sbb
jl
outsb
pop
sbb
cmp
jle
adc
test
inc
aas
das
mov
mov
sbb
rorb
aam
inc
test
pop
inc
out
movsb
loopne
cmp
xor
pop
inc
adc
jae
in
push
cmp
fisubrl
sbb
loop
std
sbb
mov
add
jg
mov
imul
mov
push
leave
dec
cmp
push
add
mov
cmp
xor
mov
push
orb
and
jmp
out
pop
push
push
lea
or
jecxz
mov
sub
fisubrl
ret
loope
movsb
push
aad
jnp
lahf
mov
imul
fstl
int
push
inc
sahf
cmc
jo
pop
pop
divb
sbb
pop
add
sbb
out
push
outsl
loopne
arpl
ret
leave
lds
daa
add
add
addr16
push
sub
xor
cmpsl
mov
loop
jge
outsl
sbbl
loopne
lock
dec
jecxz
push
fildl
fcomps
push
cltd
loope
add
mov
icebp
aas
jl
lock
add
lds
dec
jmp
jle
insb
int
inc
jmp
jmp
fnsave
sbb
rcll
pop
sub
adc
lea
mov
fbstp
sub
clc
xchg
enter
cltd
data16
ja
cmpsl
dec
xchg
in
jno
out
es
xchg
leave
pop
adc
icebp
cmpsb
xor
and
mov
les
div
js
lods
add
jnp
nop
or
ds
test
aaa
movsl
lahf
lock
jns
lahf
mov
xchg
add
lea
push
rorb
adc
int
push
pop
pop
dec
lds
mov
gs
mov
jecxz
call
inc
jp
lods
or
xchg
mov
push
pushf
and
mov
lea
mov
ja
fdiv
xlat
movsb
out
test
fnsave
popa
mov
daa
jne
jb
or
inc
adc
push
dec
mov
cld
dec
jae
lods
jbe
xorl
mov
fwait
dec
decl
pop
pop
and
jl
lock
mov
rolb
push
cmp
sub
sbb
rclb
push
loopne
daa
lods
lcall
adcl
inc
xor
add
ljmp
iret
cmc
test
jb
xchg
pop
mov
fcmovbe
inc
mov
lea
cmc
or
xor
and
sbb
into
add
push
mov
mov
rcll
jo
mov
negb
std
jecxz
xchg
sbb
ja
xor
push
orb
add
adc
mov
loop
sbb
nop
push
xchg
fcom
pusha
cmp
xor
daa
hlt
lgs
int
fcompl
dec
cmp
rorb
add
insl
mov
sub
push
rclb
loop
mov
lahf
repz
add
ficompl
int3
adc
inc
aam
push
push
test
dec
std
and
addb
aas
insb
imul
stc
jmpw
das
jge,pt
lea
je
jge
mov
ljmp
inc
std
or
dec
jmp
test
xchg
movsl
psrad
cs
add
out
jo
mov
mov
adc
or
scas
pop
jp
sub
pop
or
into
mov
shrl
filds
push
adc
fnsave
flds
pop
mov
xchg
jg
cmpsb
out
xchg
lds
push
xchg
inc
sahf
lock
xchg
fcomps
jmp
imul
shl
dec
imul
inc
jmp
inc
inc
loopne
and
ret
ljmp
arpl
and
repnz
jg
roll
lock
fiaddl
lods
in
or
jle
in
sub
and
sub
mov
ljmp
adc
pop
dec
push
popf
rorl
add
xchg
sub
add
mov
packssdw
adc
aam
mov
jnp
out
lock
loopne
mov
icebp
lock
mov
imul
dec
loopne
dec
or
jbe
add
js
push
mov
cmp
push
fbld
mov
cmp
and
dec
mov
inc
sbb
mov
lods
mov
aam
nop
and
mov
loop
ds
lfs
jle
cwtl
rcrl
fistpl
pop
jo
shl
cmpb
insb
mov
bound
cwtl
or
rcrb
mov
cmp
adc
fwait
push
dec
pop
push
xor
in
jl
xchg
mov
push
bnd
pop
mov
inc
andb
mov
aas
sub
dec
mov
int3
or
les
jbe
repnz
loop
call
insl
sub
sbb
int3
rorb
jbe
pop
sub
mov
pop
movsl
jp
adcl
jo
fmuls
test
je
add
in
sub
pop
pop
jno
enter
add
out
fmull
adc
outsb
cmc
pop
pop
sub
mov
mov
insb
iret
out
xor
sti
add
cmpsb
mov
iret
adc
sbb
mov
test
je
jge
fbstp
les
mov
ds
mov
mov
mov
xchg
icebp
push
or
xor
sub
push
inc
sbb
mov
stos
add
shlb
notb
outsb
xorb
call
das
popf
shlb
sbb
dec
add
cs
and
pop
mov
cmp
les
dec
mov
in
add
les
cwtl
loop
xchg
adc
jge
add
dec
fnstenv
xchg
iret
cmpl
mov
jge
cmpsl
rolb
paddw
mov
test
xor
jle
jno
inc
test
or
xor
int3
push
popa
fcompl
mov
mov
test
les
movsb
and
and
xor
mov
push
pusha
xor
mov
push
pop
ss
ss
jge
ja
pop
push
bound
bound
dec
rcrb
andl
push
pop
mov
lcall
enter
sub
add
mov
push
test
and
insb
mov
mov
ljmp
sti
mov
mov
mov
jae
jb
jbe
xchg
call
inc
lahf
fidivrl
insl
test
xchg
pop
sub
test
fmuls
jecxz
pop
sub
sbb
inc
xor
sbb
scas
bound
sub
lahf
or
cs
test
stos
ss
hlt
jbe
outsb
sub
ficoml
fildl
xor
push
push
sbb
xchg
movsb
sub
aam
loop
adc
test
bound
lahf
mov
mov
mov
sbb
pop
sbb
scas
jns
push
loop
sbb
into
mov
clc
sahf
xchg
aas
xchg
mov
mov
push
cmp
hlt
sbb
mov
mov
shll
add
loope
sbb
fidivrl
js
adc
rorb
movsl
test
mov
mov
xor
or
pop
xchg
clc
insl
roll
mov
cwtl
cmpsb
movsl
inc
fstl
lock
ret
add
xchg
adc
add
mov
pop
lahf
lcall
fdivs
mov
sub
add
xor
pop
ljmp
and
or
bound
cs
adc
scas
sub
shll
jne
mov
les
inc
stos
add
push
outsl
arpl
xor
pop
or
mov
popa
mov
jns
mov
inc
pop
jecxz
pusha
or
inc
fdivrs
cmpsb
movsb
mov
call
mov
jnp
inc
faddl
imul
popf
sbb
aaa
aaa
jl
movsb
sub
movsb
out
dec
rcrl
cli
test
adc
xor
ja
lahf
or
xor
mov
cli
dec
movd
pop
push
lahf
sub
aam
mov
ret
es
ja
jo
ret
xlat
inc
push
test
pinsrw
es
mov
enter
ljmp
jecxz
push
stos
sbb
inc
cmp
jecxz
insl
out
scas
mov
add
sti
hlt
jno
push
mov
lret
fidivrs
adc
dec
out
aas
stc
or
add
stos
std
mov
adc
mov
out
or
jge
outsb
stos
push
sbb
in
sub
icebp
push
in
rcl
xchg
out
clc
xor
addr16
jne
xor
mov
add
add
scas
pop
jecxz,pn
add
mov
xchg
into
xchg
push
xchg
sbb
ss
add
mov
inc
lds
push
cmp
or
push
in
dec
js
inc
aaa
xchg
add
mov
inc
mov
mov
arpl
ret
push
idivl
loopne
push
mov
aaa
movsb
jg
pop
push
pop
out
hlt
pop
xchg
ret
js
mov
push
movsb
leave
sub
mov
push
mov
dec
enter
dec
jae
mov
mulb
mov
push
mov
mov
xchg
jo
int
daa
push
dec
rclb
dec
jl
adc
fs
cmpsl
push
jg
jecxz
xorb
rorb
pop
inc
je
sbb
outsl
pushf
and
xchg
je
js
ds
push
dec
ljmp
inc
insb
adc
fdivrl
push
cli
xor
ss
movsl
sbb
out
mov
sub
push
add
dec
lcall
xor
mov
sbb
outsb
cmpsl
xor
mov
mov
add
xchg
mov
imull
cmp
lahf
xor
xchg
xchg
cmp
repnz
movsb
mov
xor
addr16
mov
jo
xor
rclb
and
mov
mov
push
mov
aam
mov
lea
lods
or
sub
sub
sti
sahf
ficomps
mov
test
dec
pop
xor
xchg
jne
mulb
out
enter
les
jl
pop
sub
add
inc
stos
hlt
icebp
mov
movsb
jb
testb
mov
mov
je
mov
jmp
pushl
mov
xor
mov
cltd
adc
dec
sbb
sbbb
push
xor
aas
ret
jp
xor
jno
add
int3
cmp
je
clc
shlb
push
ljmp
push
scas
dec
push
jo
sub
xchg
ror
add
mov
cmp
mov
mov
cs
inc
xchg
bound
js
adc
and
rcrb
lahf
mov
inc
call
fs
push
jg
cmc
mov
test
adc
sub
xlat
mov
pop
xchg
sbb
mov
push
int3
addb
and
movsb
incl
in
rcl
lods
adc
pand
daa
jg
loop
cmp
add
pop
adc
lret
mov
test
lock
mov
in
in
sbb
mov
lods
jecxz
pusha
xor
and
adc
adc
xlat
and
add
sbb
in
inc
iret
ss
jmp
inc
data16
push
in
ds
xchg
cmove
pop
sub
push
push
mov
insb
jae
jmp
insl
jecxz
js
pop
and
or
adc
pop
sbb
fs
add
jle
xor
mov
scas
xor
inc
adc
mov
pop
fmuls
push
lock
pop
enter
pushf
cld
and
and
mov
mov
pop
or
cld
jnp
mov
inc
repz
inc
hlt
sbb
pop
dec
add
cld
sub
les
movlps
lahf
jo
loopne
dec
ljmp
roll
jl
clc
addr16
fs
mov
adc
aam
adc
lods
rorb
cmc
call
mov
ret
cmp
dec
inc
cld
cmp
clc
imul
lock
inc
mov
push
call
hlt
paddw
or
inc
fidivrs
mov
fcoms
mov
imul
mov
clc
mov
or
sub
adc
fnsave
or
push
es
pop
aam
pop
ja
mov
ret
dec
test
mov
repnz
mov
push
scas
lock
aad
inc
jecxz
lcall
xorb
pusha
std
les
push
adcb
and
test
data16
cwtl
fiaddl
mov
in
out
mov
jns
test
xchg
mov
adc
in
out
xchg
dec
ret
sahf
adc
pop
subl
mov
addr16
aad
lcall
inc
sbb
cmpsb
push
int3
sarb
push
dec
cmp
ds
js
and
dec
subb
call
clc
lret
push
jb
lret
and
inc
xlat
mov
and
push
mov
test
fsub
adc
shll
mov
aad
inc
sbb
stos
ret
cs
addr16
pop
cmp
iret
pop
dec
mov
ds
loopne,pn
add
or
aad
or
push
inc
jg
js
or
xchg
insb
popa
or
jne
push
mov
push
mov
add
lods
js
sub
loop
inc
cmp
daa
and
cmp
mov
clc
add
mov
mov
mov
sbb
cld
sahf
push
pop
pop
fistl
sub
cmp
inc
xchg
lahf
add
and
out
jle
xor
mov
inc
dec
mov
jp
mov
mov
mov
loope
cmp
add
ljmp
xchg
iret
adc
and
mov
imulb
pop
mov
push
add
mov
xor
xor
rorl
jl
stc
sarl
out
popa
jle
or
imul
push
cli
mov
adc
imul
dec
ficompl
jmp
and
test
inc
mov
ljmp
and
or
rclb
push
xor
and
shll
dec
push
lock
or
loop
mov
cmp
out
sahf
fldl
orl
aas
push
adc
aad
enter
ret
jmp
in
cmpb
imul
int3
testb
or
lret
dec
mov
sbbb
pusha
scas
add
int
rcll
inc
ds
mov
sbb
repnz
pop
and
adc
mov
pop
fs
scas
fs
std
mov
loop
loope
mov
push
cld
adcl
scas
dec
ficoml
sbb
into
xchg
dec
cmp
in
fsubl
bound
imul
jo
mov
cmpsl
push
jecxz
clc
lds
and
pop
or
mov
mov
in
push
mov
push
hlt
stc
mov
and
rcrb
cs
rolb
sbbb
sub
movsl
mov
ljmp
jmp
shlb
jl
in
xor
inc
lock
sub
sbb
cmp
aas
pop
outsb
mov
mov
sbb
inc
pop
arpl
clc
call
mov
scas
fisubrl
push
adc
mov
pushf
xor
jo
aaa
add
and
cmpsl
fisubrs
jle
pusha
add
or
not
adc
or
adc
or
faddl
or
test
pusha
or
jmp
xchg
xor
test
lock
mov
popl
dec
mov
dec
cmp
jge
scas
fidivl
inc
in
aaa
mov
pop
push
sub
imulb
xchg
out
lds
mov
xor
mov
cmp
cmc
test
inc
enter
in
pop
xor
mov
loopne
lcall
xor
into
call
mov
jp
xchg
and
mov
sbb
int3
pop
pop
ficoms
xor
inc
push
inc
xor
lock
xor
ljmp
mov
add
xor
sti
xor
or
loop
add
pop
pop
jp
pop
nop
pop
inc
or
lods
sub
inc
rol
jo
add
dec
push
iret
xor
or
sbb
pusha
fistpl
dec
pop
lods
or
push
mov
adc
mov
add
movsb
out
ljmp
cmp
loop
adc
jmp
sbb
ret
and
or
inc
and
add
add
cmp
mov
or
adc
stos
sub
jne
add
mov
mov
in
lahf
push
outsb
imul
out
cmp
adc
jg
dec
sarl
imul
insl
test
pop
push
into
cmp
pop
in
xchg
rorb
cwtl
std
mov
xchg
xchg
divb
sbb
and
mov
push
aam
xchg
popf
mov
shlb
faddl
jb
subb
ret
loop
sbb
mov
pop
jp
push
movsl
test
inc
sahf
arpl
mov
or
jo
mov
jle
adc
dec
push
cmpb
sbb
ds
sbb
lahf
mov
push
adc
xor
aad
aaa
loope
fcoml
mov
mov
jno
xlat
lret
fdivrl
imul
rolb
js
cld
lret
aam
lahf
sbb
jne
les
jp
pop
adc
insb
data16
jb
daa
inc
fildll
ss
adc
mov
push
inc
push
or
adc
insb
test
imul
inc
xchg
mov
in
mov
push
sbb
mov
cwtl
jmp
lds
mov
pop
push
roll
cmp
add
xor
xchg
mov
test
sub
loope
sahf
mov
add
mov
js
cmp
adc
das
pusha
ja
push
lods
xor
cli
lret
int3
xor
mov
addl
addl
push
adc
mov
sub
loopne
lret
cmp
cld
into
pop
cld
iret
push
push
inc
cmpsb
and
jl
pop
or
xchg
outsl
cwtl
subb
and
jecxz
loop
call
xor
dec
sbb
insb
pop
sbb
add
sbb
sub
fwait
clc
push
fwait
andb
add
mov
clc
push
push
insb
mov
and
ss
pop
rclb
xor
arpl
test
pop
pop
sbb
fwait
jp
xchg
aaa
jecxz
jle
push
push
pop
mov
cmp
sbbb
inc
loopne
xchg
insl
or
es
pop
adcb
pop
imul
jae
inc
movq
sbb
mov
jne
rorb
xor
cwtl
mov
xor
ss
imul
xchg
lret
dec
shrb
dec
xor
out
mov
jno
and
sub
leave
sti
cmp
pop
xchg
inc
mov
test
icebp
pop
clc
daa
and
xor
push
mov
add
pop
adc
pop
add
push
ret
push
push
or
pop
mov
xor
xlat
add
push
adc
es
mov
adc
test
into
jp
fdiv
pop
push
inc
repz
add
lret
pop
jnp
jns
jo
pop
imul
shrl
mov
loopne
lret
push
adc
adc
mov
test
scas
jg
or
sub
mov
ds
out
sub
rolb
dec
sbb
xlat
push
adc
jmp
and
out
sbb
inc
loope
and
fisttpl
inc
bound
mov
sti
inc
push
daa
push
sbb
repnz
dec
sub
jl
call
cld
jmp
pop
mov
push
jl
pop
or
push
clc
lret
ret
pop
add
cli
mov
push
in
push
sbb
jmp
sbb
jo
sub
push
aam
fstl
sbb
mov
movsb
and
and
pop
push
add
inc
push
ss
stos
ljmp
mov
jne
xor
in
push
sub
je,pn
mov
leave
jle
push
mov
movsb
scas
push
jno
push
clc
sbb
mov
cs
add
popa
aam
es
hlt
shlb
in
adcl
rolb
jne
stc
lahf
lea
mov
lods
sub
jbe
cmp
negb
xor
icebp
cwtl
cli
sbbb
dec
les
das
ds
or
cmp
mov
enter
jp
mov
push
or
jp
xchg
lods
sbb
test
stos
negl
mov
outsb
incl
add
cs
mov
jne
sub
je
jp
movsb
adc
inc
mov
add
push
lcall
mov
enter
inc
xchg
fistl
push
push
push
pop
lahf
sbb
add
enter
adc
lods
sahf
inc
sbb
popa
and
shlb
xchg
pop
pop
and
or
mov
xorl
xor
sbb
inc
xor
fcomi
pop
cmp
xor
or
lret
std
sbb
ficoml
jl
adc
in
push
or
loopne
push
and
inc
pop
pop
clc
js
imul
ret
rcr
fisubrl
cmp
inc
mov
cs
shl
loop
dec
icebp
imulb
jns
or
stc
pop
push
inc
jno
out
mov
arpl
push
scas
sahf
lcall
push
ja
push
mov
je
scas
dec
ficoml
stc
call
mov
ja
xor
jae
push
insb
cmp
xchg
jle
iret
cwtl
addl
sahf
dec
cmp
lea
and
movsb
cwtl
out
loope
mov
icebp
movsl
pushf
pushf
cmp
shlb
sahf
cli
and
push
xchg
sub
je
sub
mov
inc
mov
fs
test
mov
push
in
enter
push
js
int3
xchg
mov
imul
data16
xchg
xchg
cld
addl
mov
loopne
xor
mov
paddusb
arpl
das
inc
js
lods
xor
cmp
fwait
xchg
push
jp
std
xchg
jg
andb
add
movsl
push
popa
shlb
jl
sahf
jle
mov
inc
aas
cld
subb
cmp
adc
push
aam
adc
adc
xchg
hlt
imul
and
dec
je
shll
mov
sbb
or
mov
xor
sbb
sahf
popf
rcr
mov
cmp
xor
inc
test
cmpsb
fwait
xor
pop
and
incb
push
jmp
sub
orl
cli
jg
mov
mov
notb
out
sbb
sub
mov
in
test
and
xchg
push
stos
xor
and
sbb
addr16
mov
aaa
mov
lea
bound
xchg
fnstsw
cli
test
lock
mov
ds
xchg
shll
xchg
std
and
mov
cmp
add
dec
ss
push
sbb
ja
mov
ds
xorl
shlb
ja
jae
test
add
cmc
aaa
int
icebp
packuswb
aaa
sub
ret
lea
aaa
loopne
les
in
test
or
test
adc
pushf
xor
test
jp
ds
or
enter
fbld
lcall
mov
mov
out
push
add
pop
fadd
and
sahf
pop
or
xchg
push
sbb
push
add
gs
push
cmp
mov
sahf
lcall
xor
and
filds
icebp
xchg
pop
imul
push
inc
and
cld
clc
aaa
imul
imul
add
lret
jb
cmp
addr16
enter
je
mov
mov
repnz
pop
nop
in
ljmp
nop
push
aaa
rorb
insl
pushl
les
fisubl
add
mov
inc
sub
fdivrl
xor
add
add
movb
push
sub
loop
jl
xor
enter
inc
imul
pop
negb
inc
mov
add
adc
loope
cs
jl
add
stos
stc
inc
add
rolb
mov
push
fiaddl
or
xor
or
push
pop
push
test
jae
mov
test
jo
rcr
call
sub
mov
push
aad
aam
push
sub
push
and
and
mov
loopne
xor
mov
mov
jle
push
shll
jecxz
xor
push
jle
and
ljmp
mov
add
mov
xlat
mov
lret
imul
insb
adc
jmp
aad
sarl
pusha
dec
add
scas
inc
mov
cs
xor
ja
mov
pop
pusha
pushf
mov
sub
cwtl
adc
lods
es
ret
std
rclb
push
int3
pop
les
outsb
stos
push
fadds
mov
rorb
push
sti
push
js
push
mov
and
xchg
push
stos
shll
lods
push
and
shrb
and
jo
dec
incb
add
sbb
push
inc
stos
jecxz
test
sbb
pop
fsubs
ss
out
pusha
adc
sub
mov
loopne
or
pusha
push
movsb
mov
add
and
mov
mov
sub
mov
xchg
scas
add
das
cld
dec
adc
call
mov
mov
push
test
add
cs
jle
add
test
jle
test
push
or
daa
test
scas
loop
jo
insl
sahf
andl
cmp
dec
fistl
rclb
or
aam
or
scas
xchg
push
hlt
lock
outsb
imul
ja
mov
popf
es
cmpsl
loop
rcl
out
dec
and
pop
dec
lock
sbb
adc
xlat
mov
in
lock
sbb
shl
imul
sti
stos
push
repnz
pop
and
negb
push
and
pop
daa
dec
jl
mov
shrb
sbb
mov
rcll
pop
gs
lahf
or
or
cmp
sbb
ret
add
daa
mov
cwtl
jo
xchg
add
mov
jmp
add
mov
pusha
mov
inc
pop
into
enter
popf
sahf
rcrl
mov
ret
enter
inc
lahf
mov
mov
xor
jl
sbb
into
xchg
push
rol
jmp
cmp
sbb
pop
adc
push
mov
push
data16
ds
and
push
ret
data16
mov
and
push
ljmp
or
adc
pop
inc
fsubrs
pop
add
push
cli
pop
icebp
dec
hlt
or
cmp
lret
les
and
int3
insl
rorb
add
jmp
jp
or
mov
and
mov
loope
ficompl
decl
inc
or
and
push
xor
jne
adc
test
test
pop
ljmp
scas
test
lods
adc
aaa
gs
inc
lcall
and
cmp
psubsb
cmp
mov
push
dec
jb
and
pop
xor
insb
andl
adc
ljmp
or
inc
ret
es
imulb
mov
pop
sub
or
lock
sbb
mov
add
cld
jmp
pop
xlat
ficomps
adc
add
fs
and
mov
lahf
jb
stos
clc
mov
xchg
ds
sub
push
sub
outsb
mov
inc
insl
testb
mov
add
popf
fidivl
sbb
jb
lds
pop
push
test
cmpsb
fadd
push
sub
aas
mov
je
push
cmp
sti
xor
mov
xchg
adc
or
mov
mov
jecxz
fisubrl
sbb
push
dec
push
addl
mov
push
je
jne
xor
ret
addb
mov
push
push
and
sub
fcoms
fdivrs
mov
mov
stc
les
call
pop
mov
cli
aas
mov
adc
bound
cmp
xor
add
push
enter
shrb
insl
popa
and
pusha
push
les
test
sub
sbb
insl
clc
sub
clc
outsl
push
fdivrs
pop
dec
sti
pop
dec
ja
jmp
cld
int
inc
sbb
hlt
sbbb
adc
fcoms
add
add
aam
add
and
sbbb
or
mov
aam
nop
scas
and
dec
je
sub
or
pushf
leave
and
mov
inc
testl
cmc
pop
sahf
xchg
or
outsb
daa
jne
mov
loopne
inc
shrb
xor
rcll
scas
repz
push
and
movsb
jge
or
outsb
add
call
aam
push
fimuls
adc
andb
test
inc
pop
sub
addl
faddl
dec
imul
imul
mov
sub
orl
popf
mov
and
jo
out
add
add
cli
ja
fstps
mov
or
cwtl
inc
adc
out
pop
dec
in
and
loope
adc
cmp
aam
loop
add
fs
sbb
adc
mov
adc
orb
xchg
mov
dec
cmp
or
notl
jle
imul
mov
and
movsl
and
sub
sbb
and
adc
xchg
test
mov
das
push
mov
push
lret
sbb
pusha
push
enter
mov
cmp
sbb
xchg
mov
sahf
je
sub
inc
test
out
jbe
mov
ret
dec
inc
pusha
fisttpll
cs
push
in
fmulp
mov
fnsave
sbb
stos
jmp
repnz
rcr
loopne
or
call
mov
aam
jno
cmp
xchg
adc
pop
ljmp
xchg
xchg
adc
aam
jmp
test
adc
fnstcw
and
pop
inc
imul
dec
jl
fbld
pushf
fcoml
outsb
push
push
sbb
out
int3
mov
inc
push
xchg
mov
add
fldt
mov
xchg
dec
nop
cwtl
lods
pop
lods
pop
je
jns
insb
inc
jns
pop
cli
jo
aaa
ljmp
out
xchg
mov
aaa
cmp
mov
insb
hlt
pop
jno
cmp
pop
xchg
sarb
jp
ja
call
outsb
movsl
and
pop
xchg
push
pop
jbe
pop
xor
inc
xor
mov
add
lret
cmp
push
rclb
inc
mov
sub
push
subl
adc
into
arpl
movsb
aaa
imul
call
jb
or
in
or
sbb
stos
push
xor
sbb
rcl
mov
mov
rclb
jmp
jle
out
pop
shlb
faddl
add
or
enter
adc
xor
and
jb
xor
inc
or
clc
push
add
xchg
add
ret
sub
add
adcb
das
push
lcall
lahf
shlb
out
negl
xor
test
pushf
call
scas
ds
pusha
pop
cmpsb
daa
hlt
sub
pushl
add
mov
lods
inc
xchg
movsb
push
add
dec
push
stos
test
push
jl
xchg
cmp
jl
or
jne
pushf
pop
shll
repz
sahf
out
movsl
test
pop
push
es
inc
and
aam
mov
jp
aaa
ret
fiaddl
stos
leave
scas
jecxz
mov
push
inc
out
orb
lds
push
lcall
pusha
or
int3
push
jle
push
push
pop
xchg
stos
lock
lds
cmp
loope
fwait
add
fidivrs
fwait
lock
andb
test
add
push
shlb
fdivr
or
xor
sub
xor
insb
pop
and
push
sbb
icebp
loope
or
xchg
mov
mov
mov
imul
dec
jge
call
orb
rolb
fs
ficomps
mov
data16
mov
fcomps
sbb
adc
test
loopne
out
shlb
popa
push
inc
clc
and
in
cli
jb
ret
lds
push
inc
or
ds
sub
mov
dec
call
cwtl
shlb
adc
push
pushf
push
cld
rorb
dec
imul
xchg
test
xchg
cmpsl
insb
dec
mov
and
adc
aam
loopne
and
clc
xchg
push
dec
fdivr
es
aas
es
jb
sbb
adc
push
mov
mov
mov
call
sub
add
in
jo
and
xor
cltd
push
inc
rcrb
dec
jbe
sub
cld
mov
lods
pop
add
xor
gs
rcr
cvttps2pi
sub
mov
jb
es
stos
add
dec
sub
inc
xor
lret
inc
jmp
mov
cltd
movsl
into
jecxz
cld
push
dec
test
inc
int3
outsb
outsb
push
jne
pop
sbb
out
mov
or
or
mull
and
in
adc
hlt
dec
shll
add
or
mov
push
testb
jo
addl
ret
add
mov
clc
sbb
out
jmp
scas
nop
sbb
mov
inc
mov
push
or
ljmp
rolb
imul
fadds
sub
add
mov
shl
test
cli
icebp
stos
mov
lcall
add
mov
xchg
pop
cs
insb
int
dec
insb
push
test
aam
clc
and
daa
mov
stos
mov
in
or
outsb
ljmp
inc
cmpsl
cmp
sbb
pushf
cmp
cmp
sbb
imul
dec
sub
pop
push
xor
or
scas
iret
cltd
push
mov
and
mov
call
jmp
mov
mov
ljmp
mov
testb
inc
pop
xor
rolb
test
inc
aaa
sub
loop
negb
and
fwait
add
loopne
push
mov
in
mov
ds
sbb
add
arpl
andb
fisubrs
pop
add
les
push
icebp
push
pop
icebp
bound
sbb
sub
sub
pushaw
cmp
lea
sbb
push
js,pt
lock
inc
sahf
add
movsb
push
xor
stos
rol
leave
sbb
movsl
pusha
ret
negl
push
shl
add
loopne
mov
cmpsl
inc
int
adc
movsb
orb
adc
mov
rorb
popl
mov
push
je
dec
dec
pop
es
in
and
dec
inc
cmpsb
push
mov
clc
add
cmp
hlt
sahf
inc
sbb
xor
fsts
or
dec
xchg
lods
sub
pop
mov
cmp
stos
dec
pop
in
movsb
lea
adcl
pop
test
lock
fwait
sbb
push
stos
push
xor
adc
rcrl
push
imul
jg
mov
arpl
and
pop
push
jle
cmp
mov
jne
xor
ljmp
jmp
fucomi
inc
data16
mov
add
je
cli
hlt
sahf
mov
sbb
cmpsl
jo
outsl
lds
stos
and
sahf
sbb
lret
jge
mov
sub
insl
pusha
pusha
push
cmpsb
jne
lea
shr
sub
xchg
sub
jnp
cmp
sbb
and
dec
cmpb
int
rcll
fiaddl
pop
adcl
mov
scas
xlat
stos
pop
push
loop
test
jp
inc
orl
inc
ja
or
loop
dec
test
sbb
cmpsb
inc
arpl
or
and
inc
enter
dec
inc
xor
pop
mov
inc
lock
mov
in
and
mov
pop
inc
and
inc
in
in
mov
xchg
pop
and
insl
inc
je
imull
or
enter
push
jp
jle
xchg
bound
not
push
add
je
test
cmpsb
int
or
cmpsb
out
sahf
xchg
dec
shlb
and
mov
dec
jne
nop
jae
push
fcomps
in
inc
enter
jbe
pop
xchg
repnz
call
pop
sbb
mov
test
adc
stc
je
cmpsl
cmp
test
pop
or
push
aas
sbb
icebp
xchg
pushf
shll
call
dec
lods
in
cmpb
add
adc
add
andl
sbb
adc
sbb
lcall
fdivs
mov
ds
mov
sbb
mov
inc
push
sbb
mov
add
mov
lods
add
xor
jl
inc
or
andb
aas
mov
divb
in
pop
pop
push
lcall
pop
or
hlt
cmp
inc
lds
call
mov
cld
mov
js
adc
cld
sbb
jbe
subb
pop
mov
dec
daa
call
mov
or
fcompl
jge
adc
test
popf
xor
inc
imul
js
call
aad
dec
std
scas
lods
test
jno
xchg
lcall
outsl
mov
xchg
cs
xor
push
cld
cltd
xchg
shr
mov
fdivrl
test
push
mov
outsb
bound
repnz
jge
adcl
adc
xchg
jle
or
jle
imul
mov
push
adc
pop
fnstenv
lock
lret
stos
sub
sbb
jo
cmpsb
test
xor
out
sbb
sbbb
adc
xchg
add
sahf
leave
test
test
pop
rcr
jns
jbe
sub
addl
mov
pushf
in
pushf
cmpsb
fiadds
inc
adc
sub
mov
fcmovu
leave
cmp
jns
add
push
fwait
aam
loop
adc
mov
loopne
arpl
add
mov
sub
cltd
sub
inc
ficoml
clc
pop
xchg
xor
popa
xchg
xchg
int3
mov
rcrl
out
sbb
mov
mov
add
adc
hlt
mov
test
sbb
inc
or
jle
ficompl
push
inc
icebp
and
or
jo
cmp
and
call
or
and
sub
adc
les
jle
popa
popf
sbb
imul
test
nop
inc
sbb
cltd
ljmpw
push
xor
repz
sbb
ficompl
push
addb
mov
pop
or
sub
mov
cmp
cmp
movsl
imul
add
pop
orb
popf
mov
mov
inc
cld
pusha
sar
hlt
push
add
jb
fstpt
inc
rol
push
push
shrl
pusha
ret
fs
inc
push
in
xchg
xchg
sbb
addps
cmp
testb
inc
mov
mov
sbb
mov
lods
js
je
js
push
fistps
ret
cmp
xchg
sub
push
cmpsl
int3
push
rorl
push
jb
sub
jbe
addr16
sti
cmpl
adc
fisubs
mov
or
cmc
and
ret
jge
mov
sbb
mov
cmpsl
or
pushf
daa
mov
add
cmp
dec
incb
clc
adc
pusha
std
shl
shrb
pop
xor
inc
stos
push
je
inc
or
mov
and
idivb
fildll
fcomp
dec
outsl
cltd
popa
pop
mov
pop
adcl
xor
stos
cmpsl
or
in
cmp
cld
inc
sbb
sub
retw
ds
cmp
xor
xchg
adc
push
fdivs
dec
inc
sti
ja
dec
adc
aam
push
mov
pop
dec
cmp
test
out
sbbl
mov
push
or
add
add
cmp
scas
ljmp
mov
hlt
and
mov
and
sbb
in
jbe
std
xchg
dec
insb
xchg
mov
cmp
inc
lcall
js
mov
xchg
jne
sub
aaa
or
shrb
inc
push
pop
hlt
inc
cmp
fs
push
pop
or
push
js
pop
out
jp
mov
and
add
jnp
les
loope
xchg
fists
add
sbb
pusha
sbb
jecxz
stos
sbb
pop
and
clc
loopne
stos
cmpsb
cwtl
sub
sub
cmc
mov
and
mov
cmp
ss
or
in
mov
mov
inc
xchg
xor
add
sti
bound
stos
test
and
icebp
jp
in
jge
inc
pop
cmp
inc
jge
dec
mov
call
jmp
mov
sub
jns
jo
leave
clc
pop
addr16
ss
mov
daa
fadds
mov
dec
mov
xchg
mov
test
loop
shlb
decl
cld
aam
repz
jno
jg
dec
pusha
push
push
adc
adc
test
add
add
inc
cmp
add
ljmp
dec
add
pop
ja
push
xor
mov
imul
pusha
inc
adcl
push
inc
cs
mov
cmc
push
inc
mov
and
lcall
enter
pop
inc
ret
mov
fdivrl
add
sub
mov
push
sub
sarl
dec
add
xchg
or
push
test
movsb
sub
jb
jo
or
lcall
pinsrw
mov
icebp
and
inc
sub
loop
fsubrs
outsb
push
stc
push
cli
cld
mov
jnp
mov
mov
in
insb
call
mov
pushf
out
sbb
xorb
pop
cmp
lods
rcrl
testb
mov
sub
dec
adc
cmp
gs
lock
loop
mov
xchg
loope
popf
mov
std
add
fmulp
insb
mov
xor
inc
test
mov
in
sbb
mov
sar
es
add
clc
adc
adc
mov
ljmp
js
sbb
and
mov
dec
jl
push
imul
xor
dec
push
pop
ret
cmp
cmp
rorb
push
mov
add
push
jecxz
fsubs
sahf
loop
or
orb
pop
xor
add
cmp
jle
loopne
xor
jl
idiv
orl
popa
loop
cmc
mov
shrb
icebp
mov
shr
es
cltd
lret
lcall
push
pop
dec
loop
ja
ret
mov
mov
pop
lret
repnz
mov
mov
pop
ds
dec
cli
sub
push
sbb
lret
testl
sti
dec
mov
mov
mov
out
out
rolb
out
pop
xchg
pop
dec
xchg
hlt
pop
jp
ret
out
dec
fbld
popa
xor
decl
cmp
fcomip
in
fisubrl
cwtl
lcall
dec
rcrb
imul
aaa
popf
stos
push
add
pop
and
sti
pop
jecxz
dec
hlt
in
jo
cmc
inc
mov
or
push
mov
lock
das
push
data16
or
sub
pusha
pop
movsb
rol
cmp
lds
mov
aad
aas
lret
or
dec
adc
test
enter
add
push
aam
add
aad
adc
pop
hlt
and
dec
xor
testb
push
sbbl
sub
movsl
loop
push
jle
mov
ljmp
std
in
and
clc
les
or
xor
sahf
cmp
pop
ret
push
insl
test
add
sub
arpl
push
add
bound
lret
mov
sbb
push
idiv
repnz
xchg
sbb
and
inc
xor
lret
lret
mov
jbe
add
jne
es
pop
mov
sbb
sbb
fisubl
push
fistl
fcmovb
ret
loopne
inc
and
int3
push
movsb
shll
ficomps
mov
inc
dec
sbb
cmc
daa
cmp
mov
xor
iret
inc
mov
and
out
mov
mov
scas
je
call
pop
cwtl
pop
dec
cmp
fldt
push
clc
hlt
pop
das
aam
inc
inc
push
pop
test
mov
pop
fsubrs
sbb
push
push
mov
out
add
sub
add
mov
sbb
sbb
mov
psllw
pop
leave
sbb
mov
sub
mov
lods
add
cs
push
or
push
xchg
pop
push
ss
dec
icebp
rcll
jbe
aas
mov
imul
mov
aaa
outsb
test
push
shr
mov
ss
test
cli
sbbb
adc
sbb
dec
sub
out
das
cmpsb
out
fadds
dec
mov
jmp
mov
jae
sub
mov
insl
loopne
stos
fstl
or
mov
test
ret
lds
mull
stos
xchg
clc
mov
pop
push
inc
add
shll
ds
bound
jno
push
cmp
sbb
pusha
or
aam
xchg
dec
leave
mov
sbb
dec
jl
add
xchg
mov
jb
sub
adc
adc
xchg
inc
jne
js
adc
scas
js
stc
lds
jno
addb
enter
in
stos
aaa
test
jl
push
mov
push
and
sbb
xlat
add
pop
or
mov
dec
sbb
push
fistpll
inc
pop
lock
xor
xchg
call
test
adc
dec
insb
pop
scas
mov
hlt
push
push
ficoml
add
and
cmp
adc
in
das
into
pop
pop
cld
sbbb
mov
pop
orl
push
pushf
pop
jp
push
pop
pop
or
pop
es
in
pop
lcall
clc
addb
inc
xchg
push
mov
popa
fildl
pop
sbb
scas
imul
nop
int3
test
push
add
sahf
insl
stos
insl
pop
cmp
push
stos
jnp
mov
test
std
cs
mov
sbb
dec
pop
es
in
lahf
sti
lock
lods
sub
adc
inc
jnp
fidivs
ljmp
mov
iret
add
xchg
mov
pusha
arpl
sub
and
mov
jbe
dec
pop
xchg
and
clc
push
bound
and
dec
add
add
lcall
fdivrs
testl
push
xchg
iret
enter
push
xchg
popw
pop
aas
push
lock
or
xchg
sbb
scas
clc
inc
cli
clc
dec
aam
punpcklbw
push
incb
mov
fwait
adc
fadd
sets
call
adc
pop
jae
imul
daa
leave
lock
add
ret
sbb
leave
movsb
cmpsl
fnclex
call
cmpsb
fcomps
or
into
test
rcr
imul
out
mov
cld
jmp
push
rcr
jmp
mov
sbb
js
shrb
icebp
loopne
daa
es
cmp
sub
sti
xchg
das
add
mov
inc
loope
sbbl
mov
loopne
fdivrp
sbb
xchg
lea
push
out
ja
pop
and
pop
mov
popa
addr16
shlb
mull
dec
loop
add
hlt
xchg
icebp
popa
ret
pop
shlb
mov
xchg
jecxz
stc
mov
insl
jl
push
sbb
or
aam
test
stos
test
mov
aad
push
popf
push
mov
sub
cwtl
push
add
fiaddl
int
jecxz
sbb
add
sbb
mov
xchg
sub
fsubrs
inc
sbb
mov
xchg
rorl
loope
je
popa
inc
imul
push
xor
lds
inc
sbb
adc
rorb
jo
fwait
mov
cmpsl
outsl
faddl
inc
pushf
sbb
add
bound
imul
inc
nopl
mov
les
test
xchg
shl
clc
mov
dec
pop
inc
imul
loopne
add
add
push
jo
mov
sahf
test
ljmp
or
int
fucomi
sub
cs
call
mov
sbb
imul
mov
push
gs
fstpt
push
mov
inc
inc
idivb
adc
push
and
stos
sbb
pop
loopne
in
sbb
icebp
ds
inc
cmp
adc
orl
call
or
mov
das
or
popa
lret
outsb
inc
xor
inc
je
lock
jo
inc
push
les
xor
push
clc
sub
jmp
jge
jne
mov
sbb
jecxz
xchg
or
inc
sbb
and
nop
clc
cmp
xchg
andl
roll
dec
rcll
mov
lock
sbb
cld
jnp
nop
push
jo
sbbb
add
dec
insl
push
pop
gs
jl
mov
inc
pop
push
nop
es
cwtl
fidivrs
pusha
xor
dec
stc
add
pop
push
jle
sarb
aaa
xchg
in
movsb
bound
jmp
test
add
mov
push
insb
adc
cmp
xchg
cmpsl
mov
mov
hlt
mov
sbb
aam
mov
jne
xor
sbb
mov
add
mov
inc
mov
jg
xchg
scas
ror
and
mov
or
mov
cmc
push
pop
mov
add
push
mov
dec
add
jmp
mov
inc
or
ss
or
or
andb
in
cmp
sbb
stos
inc
mov
mov
push
push
rolb
mov
push
jge
and
nop
imul
push
mov
mov
scas
sbb
push
je
insl
mov
push
inc
jmp
mov
mov
pop
js
dec
ljmp
sbb
push
fs
or
test
inc
add
enter
push
das
mov
hlt
jge,pt
iret
pushf
sbb
cmp
loop
movsl
push
arpl
mov
fwait
leave
xchg
or
add
dec
xchg
inc
icebp
dec
in
fcmovbe
add
jbe
int
sub
decl
enter
sahf
fwait
mov
xor
aam
fldenv
js
hlt
adc
add
pop
ljmp
jo
or
cli
gs
inc
outsl
hlt
sub
mov
xchg
gs
jl
outsb
mov
sarb
cmp
or
jg
loopne
outsl
xor
add
sub
mov
addr16
das
add
scas
push
pop
push
sbb
in
adc
inc
jnp
inc
test
pusha
sahf
sub
aam
inc
mov
outsb
insl
fwait
adcb
dec
and
lods
int
cli
bound
jno
xor
in
ret
sub
popf
adc
adc
loope
add
sbb
push
cmp
cmp
sub
jno
mov
and
mov
or
sub
cli
mov
mov
push
scas
out
add
mov
test
dec
faddl
adc
rclb
add
jnp
lcall
sbb
inc
call
mov
stos
xor
repnz
mov
mov
mov
je
xor
ljmp
mov
outsl
jmp
xor
jmp
sarl
pusha
sbbl
les
push
sbb
es
test
xlat
sarl
inc
std
out
mov
and
add
xor
sbb
mov
or
lods
inc
mov
xor
add
scas
mov
and
test
dec
sub
inc
ret
shrl
pushf
pop
add
imul
les
mov
xchg
push
setnp
mov
and
js
mov
movsl
ja
xchg
insl
loop
mov
and
add
or
incl
int3
mov
fcmovnbe
pop
addr16
cld
icebp
out
add
test
shrb
mov
xchg
cli
xlat
shrb
lcall
pusha
dec
adc
mov
pushf
pushf
mov
jp
sbbb
mov
sub
or
xor
xor
xor
stos
or
gs
test
lahf
call
cmp
pop
sub
pop
and
lock
pop
andl
in
subb
mov
test
jle,pn
sub
ds
in
and
xor
mov
mov
jge
pop
mov
xchg
daa
call
mov
push
xor
jne
inc
sub
lret
inc
loopne
fldenv
mov
cmp
xchg
int3
or
mov
adc
add
jae
movsl
or
dec
test
loopne
or
lcall
mov
loopne
and
std
loop
ret
adc
jmp
rorl
in
mov
xacquire
dec
rcll
call
adc
xor
fcom
or
ds
mov
push
pushf
cltd
adc
mov
pop
push
fiaddl
jno
jecxz
push
xchg
fwait
xor
or
addb
stos
sub
mov
int
cs
mov
xor
adc
negb
sbb
cmc
stc
orb
ds
cwtl
xchg
sub
ficoml
popa
movsb
jle
shrl
and
mov
mov
mov
jge
or
or
loope
adcl
clc
mov
hlt
loopne
cld
pushf
xchg
mov
dec
movsl
in
inc
mov
int3
enter
in
call
adc
cmp
cmp
dec
fs
add
adc
stc
mov
add
or
mov
inc
and
ds
cmpl
movsl
dec
xchg
cmp
rol
ficoml
clc
mov
or
sbb
dec
popl
mov
in
mov
or
inc
mov
pop
call
insb
adc
incl
jo
adc
lret
in
std
test
mov
bt
in
shlb
stc
mov
cltd
test
adc
inc
ss
rorb
jb
and
xchg
out
and
cmpsb
push
cld
mov
bswap
sub
push
xlat
adc
aas
outsb
shll
ds
add
pop
adc
jmp
mov
jp
fwait
je
lock
cld
bound
add
inc
enter
push
inc
xor
xlat
rorb
js
sub
cmp
mov
mov
mov
push
mov
in
mov
add
sbb
fidivrl
or
xchg
inc
dec
xchg
push
imul
xorl
sub
in
cmpsb
push
push
popf
lods
add
push
nop
pop
cld
rolb
pop
clc
pop
shr
lret
and
push
pop
insl
cmp
push
cwtl
jmp
cmpsl
lods
mov
leave
ret
je
push
out
mov
dec
sarb
sarl
push
mov
movl
add
bound
lods
popa
xchg
sbb
ds
sbb
push
pop
push
jp
pop
fisttpl
jo
sub
and
and
inc
mov
adc
jb
and
push
lock
in
cmp
stos
adc
mov
and
jnp
xor
mov
or
xchg
jecxz
add
and
sub
scas
sbb
repnz
cmp
sub
push
push
mov
pushf
mov
fcomip
jg
loope
movsb
add
int
test
mov
out
loop
adc
mov
ljmp
aad
inc
xchg
sbb
add
pushf
mov
jl
add
movsb
and
and
or
adc
adc
mov
sar
or
ds
or
pop
movsb
aaa
jle
sub
pop
jbe
pop
jne
call
cli
push
dec
cmp
sbb
add
stc
pusha
sahf
inc
std
or
or
or
jp
ds
jl
jl
mov
or
adc
push
sbb
mov
push
cmpsb
push
sub
scas
push
push
cmpl
test
cmpsb
jnp
sar
mov
pop
test
loope
push
sub
outsl
fs
mov
imul
aaa
stc
lret
inc
enter
add
divl
movsl
movsb
mov
das
out
dec
mov
xchg
push
mov
mov
push
inc
xchg
jle
rolb
inc
pop
adc
adc
scas
js
enter
dec
in
scas
cmpsb
mov
icebp
add
ds
and
shl
push
aaa
jo
sub
fnstsw
aaa
loope
push
aam
cli
and
loop
xchg
dec
inc
aaa
dec
mov
dec
loop
mov
mov
jnp
lock
sahf
pop
sarb
lret
popa
pop
sub
mov
icebp
and
fmull
inc
or
loop
mov
mov
inc
std
clc
add
inc
xor
sbb
add
push
xchg
rolb
mov
sbb
push
inc
stc
loop
fisttpl
ret
pop
fsts
or
mov
ljmp
add
loop
out
dec
adc
and
pushf
out
push
pop
out
loopne
inc
mov
movsb
inc
or
sub
shrb
fsubrl
lods
hlt
roll
aam
pushf
lock
push
mov
outsb
orb
jbe
push
mov
repz
in
stos
mov
lock
lea
data16
scas
xor
lret
cmp
pusha
test
adc
push
daa
mov
xchg
popa
ljmp
lcall
rcr
das
adc
cmp
and
daa
outsl
stos
push
jle
inc
imulb
les
lds
add
pusha
inc
lret
test
or
mov
testl
cmp
cmpsb
or
mov
cld
test
pop
or
xor
addb
pop
xor
mov
and
lock
sub
out
into
adc
lock
mov
pop
insl
jle
lcall
js
push
ret
cld
or
pop
cli
pop
jae
add
mov
inc
jl
push
inc
cmp
adc
lock
loopne
pop
fwait
and
add
mov
xchg
cmp
movsl
jmp
pop
jne
pusha
sahf
ljmp
fisttps
push
mov
sub
popa
rol
push
daa
loop
sub
and
add
xor
out
push
mov
roll
pop
pop
xchg
fs
inc
fcomps
pop
mov
lcall
int3
xchg
mov
cmpsl
out
clc
pop
js
xor
push
pusha
mov
sbb
jecxz
movsb
sub
test
and
add
loopne
xor
js
in
pop
cmpb
xchg
cs
ja
adc
shlb
jno
xchg
jb
push
xlat
ret
adc
fcompl
sub
imul
lahf
loop
sar
dec
push
shlb
mov
enter
mov
inc
out
push
mov
mov
push
enter
push
das
inc
ja
out
bound
enter
cmp
xchg
xor
loope
rorb
test
or
in
int3
cmc
mov
scas
insl
loop
sub
jecxz
imul
inc
or
movsb
cmpsl
inc
xor
cmp
ljmp
das
int3
push
lcall
lcall
fcoms
add
mov
js
loopne
add
mov
jmp
or
rcrl
jmp
jp
adc
push
and
inc
jnp
push
icebp
and
and
jmp
test
mov
ss
push
sub
icebp
mov
inc
jo
dec
push
out
sub
push
shlb
loopne
lock
fadd
in
test
add
xor
cltd
les
inc
pop
adc
jmp
mov
pop
push
inc
jae
addb
lds
aad
out
mov
lcall
mov
les
test
rorb
negb
imul
mov
adc
pusha
imul
mov
mov
fisubrs
shlb
aad
pop
mov
shrl
cmp
hlt
pushf
sub
mov
pop
add
scas
push
jbe
lock
clc
in
fiaddl
and
lahf
fdivp
leave
int3
call
cmp
das
jl
jg
les
movsb
pusha
loop
adc
xchg
mov
mov
xchg
add
stc
ljmp
add
jo
xchg
adc
pop
popa
sbb
cmc
push
aam
jp
test
leave
mov
pop
iret
dec
add
inc
arpl
xorb
in
inc
push
inc
xor
shr
xchg
mov
dec
xor
jle
rorl
je
jo
ret
cmp
lods
or
mov
jg
mov
xchg
iret
push
hlt
mov
ret
mov
jo
lods
cld
rclb
pusha
stos
cmp
or
rol
ds
aam
mov
dec
fdivrp
mov
push
int
xlat
into
add
movb
jno
hlt
aad
ss
mov
mov
stc
sbb
imul
insl
and
mov
in
pop
and
into
int3
xor
push
les
stos
fldenv
je
cmp
fistps
js
int3
inc
cmp
lock
cld
add
rcrb
aam
jp
cltd
frstor
xchg
cmp
pusha
push
inc
and
cmp
testb
xchg
rcrb
mov
jo
push
cmpsl
lds
cli
pop
mov
ret
imul
sbb
xchg
push
outsl
loopne
mov
xor
fmuls
add
jle
lret
fninit
ret
ficompl
scas
push
dec
or
mov
scas
mov
mov
es
test
icebp
sbb
sbb
mov
sbb
aas
rolb
sub
add
push
push
push
sbb
inc
sbb
pop
pop
jl
arpl
xchg
dec
cmp
inc
aaa
es
mov
cmc
push
or
jbe
andb
sbb
bound
shrb
insb
xchg
cmp
mov
adc
push
out
test
add
testl
cmp
gs
mov
ljmp
dec
aas
lds
fldt
lock
into
fs
scas
hlt
mov
mov
pusha
inc
and
test
mov
test
lret
inc
add
stos
ret
mov
fistps
cmp
push
lods
sti
sub
jg
mov
mov
jle
or
sbb
mov
push
incb
inc
dec
mov
mov
or
testb
rclb
rorb
scas
cmc
outsl
pop
ja
repz
shrl
or
pop
ret
adc
cli
lcall
xor
add
or
scas
adc
sbb
inc
movsb
pop
jl
nop
push
shlb
lcall
nop
mov
cwtl
pop
dec
and
js
dec
and
mov
fs
push
rcrb
ret
clc
jmp
sub
mov
rcr
in
pop
add
clc
mov
fildl
push
jmp
mov
or
or
aas
cmpsb
mov
ficoml
cltd
sar
fdivl
sub
jp
fwait
movsb
addr16
sbb
rorb
adc
out
jecxz
xchg
test
scas
fmull
lret
lcall
inc
scas
test
adc
mov
decl
pop
ljmp
movsb
or
and
xor
dec
lock
mov
add
in
mov
subb
cmp
xorl
jg
repz
fadds
clc
dec
pop
add
sbb
ljmp
mov
sbb
push
pop
or
mov
sub
cmp
shlb
xchg
shlb
jnp
pop
test
fwait
out
addb
or
aam
dec
js
aaa
pop
sbb
loope
mov
mov
stc
mov
movsl
mov
arpl
fsub
pop
repnz
xchg
fistpll
arpl
mov
ror
push
stc
mov
mov
xor
add
pop
or
mov
adc
xor
mov
or
xchg
cld
f2xm1
mov
in
dec
mov
movsb
or
or
mov
cmp
mov
iret
aam
scas
mov
loop
add
roll
movsl
cwtl
pop
sbb
ja
mov
loopne
mov
mov
cmp
and
pop
push
lods
add
notl
or
mov
out
xor
icebp
dec
or
popa
jp,pt
inc
js
cld
mov
iret
jno
push
push
inc
sbb
mov
incb
cmp
add
jg
dec
jbe
lahf
jge,pt
sbbb
jmp
and
mov
push
push
adc
sti
fidivl
and
les
addb
movaps
adc
rolb
cmp
xor
xchg
push
lea
add
push
scas
dec
mov
sub
sbb
push
lods
and
lcall
xchg
ret
cld
cmpsb
mov
test
cli
or
ret
cwtl
push
jle
dec
in
test
xor
mov
fisubrl
inc
cld
dec
xor
or
mov
add
sub
sbb
std
fwait
mov
sbb
and
outsb
xchg
ret
popa
lret
add
gs
xlat
lds
je
ds
inc
push
fcmovnu
cld
and
cmp
push
jp
imul
and
sbb
dec
sbb
in
cmc
mov
mov
fistpll
mov
test
xchg
lock
push
or
mov
xor
clc
ds
cltd
test
or
cmp
ret
sahf
xor
inc
movsb
daa
push
gs
lock
mov
mov
cmpsb
push
push
aas
rol
sarl
mov
mov
mov
lods
and
js
inc
call
push
adc
imul
rcr
and
out
mov
add
cmp
test
fadds
gs
xor
outsb
mov
xlat
or
mov
xchg
sub
aaa
xor
lods
sbb
or
sub
lods
inc
into
xchg
ljmp
nop
fbstp
sbb
push
xor
andb
adc
movsl
pushf
in
and
pop
add
sbb
in
cmc
aad
jb
inc
sbb
push
or
sbb
jl
push
adcb
pop
or
push
inc
ret
push
mov
ds
pop
fldenv
push
ret
orl
pop
scas
fsubrp
cmp
jno
dec
add
cmp
in
push
mov
mov
je
mov
mov
jbe
mov
inc
clc
lods
mov
pusha
addr16
xchg
jmp
std
int3
pop
in
loopne
cmp
cwtl
add
adc
mov
gs
xlat
dec
inc
int
push
dec
or
mov
add
jo
push
data16
hlt
dec
cld
lcall
std
jbe
dec
mov
call
jns
mov
push
std
or
ss
xchg
jnp
scas
es
enter
sahf
in
xor
xor
fwait
jbe
rorl
adc
mov
shrl
incl
pop
mov
je
push
popa
mull
je
stos
push
hlt
cmp
cmpsb
adc
sbb
in
mov
and
imul
pop
adc
scas
gs
ficoml
aas
int
out
inc
je
cli
cli
js
shlb
xlat
lods
mov
mov
add
push
xor
sub
add
sbb
mov
and
push
dec
add
jle
jp
inc
outsb
decl
mov
mov
lretw
push
out
xchg
push
cld
push
enter
jp
and
push
xlat
dec
iret
notb
sbb
lret
push
xchg
clc
mov
pop
cmp
xor
adc
loopne
push
in
int
xchg
and
add
lods
cmpsb
pop
inc
and
jbe
ret
mov
fldcw
fistps
aaa
pop
pop
jns
into
sub
cmp
lock
pusha
test
mov
ficoml
cmpsb
xor
insb
jbe
out
pop
js
mov
mov
dec
sbb
inc
addb
add
rcrb
out
sbb
cmp
sub
fnstcw
fbld
xchg
pop
sti
sbb
shlb
add
xchg
adc
jno
or
test
sarb
mov
test
xlat
sarb
mov
ret
jg
pusha
ja
push
inc
jg
dec
sbb
hlt
xlat
and
lods
jge
shrb
sarb
aad
loop
or
add
fadds
insb
xchg
push
lods
mov
mov
sbb
cltd
shlb
cld
sbb
lods
dec
out
jge
pop
xor
jbe
pop
cmp
idivb
push
stc
ss
imul
repnz
imul
js
lock
inc
adc
ljmp
jb
or
addl
lea
cmp
sbb
sbb
add
fnstcw
jl
popa
add
iret
into
adc
dec
out
sti
mov
test
pop
xchg
pop
sahf
mov
cmp
ljmp
xrelease
mov
paddd
stos
pop
into
inc
dec
sbb
imul
fadds
and
addr16
xchg
xor
data16
jg
pop
jle
ret
sub
xchg
cld
out
jns
in
and
inc
mov
aam
pusha
and
jno
popa
xlat
lds
fs
pusha
inc
xor
xor
mov
mov
std
dec
adc
pop
mov
inc
push
rclb
lods
clc
adc
aam
test
in
pop
push
pop
jb
push
call
dec
ret
sub
scas
shll
dec
mov
decl
pushf
xchg
ss
jecxz
lock
lods
push
xchg
pop
add
mov
cmpb
xchg
sbb
jecxz
add
sbbb
jg
dec
into
in
cmp
outsl
pop
jbe
sub
push
mov
sbb
mov
test
sub
mov
ljmp
jge
pop
push
mov
ret
and
or
mov
dec
jb
adc
mov
clc
add
cmpsb
ljmp
mov
clc
ss
or
and
stos
mov
clc
andl
addl
and
mov
iret
aam
sub
daa
leave
fs
ret
mov
repnz
adc
mov
ljmp
test
push
mov
insb
into
jo
loope
sar
jae
jle
lahf
xchg
add
dec
xchg
scas
adc
imul
lret
shlb
rclb
xor
test
mov
iret
mov
scas
xchg
pop
xchg
cmp
cmpsb
lods
push
aas
roll
imul
jmp
adc
mov
push
sbb
cmp
pop
lds
inc
addl
push
adc
gs
lcall
mov
pop
movsb
or
dec
and
jl
mov
arpl
and
jnp
or
lret
rolb
sbb
push
sub
fnstsw
mov
movsl
inc
leave
test
add
jns
xchg
sbb
mov
mov
sub
push
mov
pop
std
xchg
les
sbb
mov
into
sub
pop
adc
filds
mov
call
dec
inc
jmp
push
sbbb
mov
fsubs
jge
lock
enter
dec
adc
repz
push
add
push
sbb
adc
lods
pop
dec
loopne
inc
ret
xlat
sub
mov
hlt
add
pop
and
mov
or
test
xor
add
sub
ficoms
das
push
push
mov
inc
add
ljmp
aam
loopne
mov
or
or
push
jnp
les
aam
jmp
nop
in
sbb
jbe
xchg
inc
dec
loopne
push
rcrl
dec
daa
outsl
in
subb
add
insb
cli
sub
fstps
js
mov
sub
jl
inc
inc
add
xor
or
nop
stos
jl
adcb
mov
and
arpl
xchg
mov
or
push
sahf
incb
ret
jb
rclb
loopne
test
lock
nopl
insb
out
mov
rcll
test
jp
out
xchg
pop
mov
mov
rolb
mov
mov
jle
push
push
ret
push
pop
cmpsb
sti
clc
into
jo
adcb
or
call
push
clc
clc
fsubl
js
inc
adc
sbb
sbb
aam
and
sbb
and
jmp
mov
add
filds
loopne
pop
les
out
clc
jmp
cltd
xor
pop
pop
arpl
xchg
mov
std
dec
nop
lods
xchg
inc
sub
and
adc
push
cmp
std
push
push
hlt
enter
add
pop
mov
push
mov
repnz
mov
out
inc
cmp
test
fimuls
add
daa
incb
stos
clc
lods
jp
sarl
enter
jbe
pop
int3
mov
pop
sbb
lock
outsl
dec
insl
call
int
outsl
int
stos
adc
adc
loop
mov
test
jmp
xor
test
or
jp
je
sub
xor
pop
nop
stos
hlt
imul
enter
cmp
mov
pop
inc
sti
lcall
adc
pop
je
daa
call
icebp
jne
jmp
and
xchg
lahf
jle
push
push
inc
pop
or
insl
xchg
ds
dec
lock
mov
out
lods
sbb
and
mov
push
call
mov
mov
sub
incb
int3
push
jo
aam
addb
std
cld
mov
and
arpl
jg,pt
jecxz
add
shr
stc
pushf
loop
inc
dec
mov
leave
sbb
fisttps
sub
xorb
add
lods
movsl
or
or
incl
pop
and
mov
jmp
mov
add
push
movsl
out
test
cmp
inc
ret
sbb
or
bound
push
pop
stos
xor
pop
push
pop
xchg
push
dec
jb
jno
roll
cli
nop
add
clc
insb
mov
hlt
movsl
nop
int3
test
add
push
sub
and
ret
rolb
das
out
scas
ss
clc
daa
xchg
ss
push
pop
xor
fildll
add
mov
xchg
xchg
jbe
add
cli
or
mov
arpl
imul
dec
into
xchg
adcl
mov
lahf
and
int3
jo
inc
xchg
ss
sahf
ds
fdiv
test
mull
ds
test
jmp
mov
push
and
insb
jp
inc
js
xor
pop
xor
mov
negb
and
lcall
ss
imul
insl
sub
scas
sub
nop
cs
adc
or
dec
push
xor
or
fimull
pop
xor
mov
ds
and
into
cli
rolb
or
test
out
xor
or
in
pop
je
pop
scas
xor
stos
cltd
aaa
dec
rolb
out
inc
popf
pop
movsl
pop
mov
xchg
fisubs
ficomps
fwait
pop
mov
lods
mov
pop
xchg
fdivs
xchg
xchg
mov
nop
cwtl
in
jg
loope
cmp
inc
jl
in
adc
jno
xchg
push
xchg
or
jbe
and
lahf
jg
and
fisubs
jbe
out
xchg
or
inc
cmpsb
jne
sahf
jmp
shll
lods
jo
mov
js
mul
mov
mov
dec
sub
xchg
cmc
popf
stos
push
xchg
mov
add
sbb
inc
cmp
notl
or
lret
adc
inc
fsubr
clc
sbb
mulb
pop
push
orl
cs
stos
pmaxsw
je
push
incl
adc
ljmp
insl
outsl
add
or
xor
adc
pop
xchg
mov
fsubl
movl
mov
cmp
das
ss
mov
mov
lds
xchg
jle
fwait
mov
or
jmp
fistl
mov
testb
pop
lock
in
xchg
mov
push
inc
xchg
push
inc
inc
pop
clc
or
popa
push
iret
add
xor
pextrw
pop
mov
adc
popf
subb
lret
loope
and
add
or
mov
not
dec
inc
dec
ljmp
mov
in
or
ss
jmp
pop
adc
out
hlt
jb
leave
adc
into
jno
mov
cmpsl
ss
push
pop
push
push
popa
es
cmp
adc
pop
outsl
jmp
add
ds
sub
adc
push
inc
fcompl
test
mov
inc
sbb
lods
cmp
add
inc
inc
out
adc
cli
add
mov
jb
ret
shl
test
inc
in
and
outsl
insb
adc
push
xor
gs
inc
sbb
or
sub
cmp
nop
lret
mov
loopne
add
lret
mov
pop
ljmp
lods
cmp
in
out
andb
aad
mov
jo
jbe
subl
mov
dec
sbb
and
jo
les
add
cli
jae
call
fwait
pop
adc
sub
sbb
or
pop
ljmp
mov
mov
insb
and
cmpsb
inc
fs
and
xor
pop
sub
lds
mov
cmp
cmp
out
test
and
push
hlt
add
xchg
js
in
mov
pop
inc
mov
cmc
mov
cmp
dec
aaa
add
mov
jl
outsb
outsl
ja
mov
push
xchg
in
adc
fcompl
leave
enter
out
or
inc
sarl
lods
mov
ss
add
repnz
sub
js
mov
loop
and
jae
loopne
hlt
push
test
subb
test
out
fcoms
cmp
or
std
lahf
rclb
jb
push
iret
or
loope
clc
or
cmp
or
and
ds
adc
mov
lock
jl
mov
sub
imul
push
xor
cmp
mov
enter
mov
or
jle
adc
xchg
shl
dec
adc
js
xchg
dec
data16
adc
fstp
push
jle
add
stos
cmp
sahf
adc
aas
inc
add
push
mov
push
dec
push
dec
lcall
jl
and
addb
xchg
in
out
xchg
ror
lea
lods
mov
loope
xchg
push
inc
fs
jbe
push
sbb
push
shl
shrb
outsb
jp
or
add
mov
gs
pop
imul
dec
adc
mov
hlt
sub
gs
cmpb
push
mov
inc
and
in
cwtl
cmp
iret
sub
insl
in
ret
outsl
pop
das
mov
into
push
rcrl
cmp
jmp
das
push
xchg
inc
or
je
sbb
jo
jle
xchg
and
push
nop
ficoms
inc
mov
aad
push
push
jb
lods
enter
sub
lahf
scas
mov
push
imul
xor
or
and
sub
lods
or
lock
jle
jg
mov
rorb
push
test
pop
gs
jmp
pop
push
lret
fimull
out
or
mov
xchg
insb
stc
xchg
xor
push
arpl
mov
lea
pop
push
sbb
jg
out
arpl
lods
push
mov
scas
sbb
mov
test
mov
ret
dec
outsl
call
psubsb
cmp
and
adc
insl
dec
mov
add
in
sbb
bound
and
mov
push
jb
enter
xor
add
dec
mov
inc
sub
insl
pusha
ss
testb
les
sahf
dec
inc
inc
jno
das
jns
test
aam
call
pusha
mov
jne
arpl
jne
mov
aas
pop
mov
push
push
ret
scas
and
leave
mull
adc
enter
dec
xchg
xor
fidivrl
adc
mov
aaa
sbb
ljmp
pop
mov
ljmp
flds
loop
adc
ljmp
mov
mov
mov
and
inc
scas
ljmp
scas
dec
cwtl
push
adc
xchg
cmc
and
rcll
rol
pushf
dec
dec
sub
or
shr
mov
lret
mov
adc
lret
pushf
dec
mulb
add
push
or
imul
push
dec
sbb
iret
neg
adc
xchg
addr16
cmp
mov
sbb
clc
je
xor
les
xchg
jmp
xchg
xchg
adcb
loop
ret
cld
leave
aas
cmpsl
lock
jl
mov
ficompl
or
push
and
pop
sidtl
adc
aas
mov
xor
out
fwait
scas
mov
or
stc
and
pop
lcall
pop
sub
movsb
movsb
lods
push
pop
mov
xchg
xchg
push
pop
and
or
dec
mov
loope
push
aad
mov
add
scas
add
and
adc
xchg
loopne
xor
mov
fsubrs
pop
mov
sub
rcll
pusha
xchg
push
sbb
in
ljmp
repnz
adc
xor
push
loop
movsb
xchg
aas
fcmovbe
call
mov
mov
cmp
cld
imul
push
sbb
fidivl
jp
sahf
call
and
dec
mov
sbb
adc
cmp
sub
adc
loope
pop
shlb
dec
fwait
sub
into
out
or
adc
push
push
aad
dec
stos
jp
nop
insb
dec
push
cs
xchg
incb
ljmp
push
mov
or
inc
dec
pop
call
sub
mov
movsl
and
mov
aaa
jb
js
mov
mov
xchg
pop
jns
or
call
add
pop
inc
ss
xor
inc
sbb
outsb
ror
jl
dec
and
add
mov
fimull
lcall
jo
sbb
inc
mov
dec
inc
fsubr
ret
adc
clc
clc
dec
mov
jmp
jb
shl
and
out
stos
push
lods
xchg
cmp
mov
insl
iret
push
jbe
adc
push
bound
mov
mov
cmp
mov
sbb
imulb
xchg
mov
dec
hlt
mov
cmp
cmp
dec
xor
sub
call
and
push
pop
fisttps
and
in
adc
fiaddl
mov
or
cli
mov
jl
push
xchg
pusha
popl
lahf
cwtl
clc
xchg
pusha
psubsw
mov
test
aas
and
mov
enter
clc
xchg
and
xchg
push
adc
mov
sub
out
cltd
nop
cmp
push
rcll
loope
mov
addl
mov
aas
loope
movl
movsb
sahf
repnz
fldl
hlt
bound
jae
sar
fsubs
in
outsb
daa
cmpsb
push
jbe
mov
sub
rorl
mov
lahf
bound
mov
test
adc
dec
push
pop
test
cmp
pop
aas
mov
pop
scas
stos
cs
or
xor
add
push
aaa
and
jns
lret
mov
mov
loop
push
push
scas
mov
mov
pop
jl
ds
adc
orl
add
dec
cwtl
hlt
add
lods
inc
daa
adc
sbb
loop
push
jnp
pushf
mov
sbb
ja
aam
das
out
mov
mov
push
xlat
xchg
out
mov
imul
xchg
mov
sbbb
add
add
bnd
mov
stos
roll
jl
inc
push
dec
cwtl
add
dec
push
xlat
cmovl
mov
std
gs
enter
popf
cli
cmp
adc
and
sti
dec
add
out
mov
push
addb
ds
into
dec
push
sti
xchg
mov
in
pop
xchg
dec
push
out
inc
or
cli
sub
lcall
sbb
mov
cmp
das
xchg
ret
mov
jle
ljmp
push
xchg
push
fildl
sub
andb
or
mov
dec
sahf
mov
les
mov
imul
subb
xchg
dec
insl
leave
inc
mulb
or
mov
cld
add
scas
push
mov
add
xchg
ret
push
add
jne
dec
xchg
add
xchg
xchg
add
fcomps
in
das
mov
add
cmp
adc
shrb
pop
lods
cmpsl
fs
pop
or
xchg
inc
mov
stos
jbe
and
shr
jbe
jbe
sarb
jbe
rdmsr
mov
cmp
mov
or
sub
adc
jbe
mov
jle
cmp
pop
int3
das
push
mov
sub
and
aas
mov
push
popa
jge
mov
dec
pop
pop
stos
pop
and
sahf
iret
dec
sarb
mov
xor
mov
adc
clc
sbb
or
push
sub
lods
rol
data16
jb
mov
jmp
xchg
dec
mov
outsb
insl
pop
sbb
and
cli
movsb
mov
mov
pusha
adc
les
clc
das
mov
inc
xlat
rorb
xor
test
mov
fdivp
bound
enter
mov
mov
insb
rclb
and
cmp
mov
faddp
push
mov
inc
push
xor
or
sahf
or
aad
fnstenv
add
outsl
xchg
xchg
mov
jo
ret
mov
rolb
fisttpl
mov
xor
int3
push
mov
pop
xor
test
and
or
cs
dec
mov
rclb
or
dec
lret
jbe
xorl
jg
clc
xchg
test
in
and
les
imull
fistpll
xchg
in
std
movsb
cs
scas
daa
out
mov
pusha
dec
xor
fwait
mov
sub
clc
lahf
mov
mov
decl
adc
ds
add
es
add
std
add
add
andl
dec
dec
test
mov
in
clc
push
icebp
sbb
lss
push
jmp
jl
add
in
mov
std
xchg
jb
push
cmpsl
xchg
mov
out
mov
dec
out
xchg
repnz
hlt
inc
ficoml
mov
mov
mov
or
pop
mov
sub
inc
fsts
in
ss
pop
jle
add
fwait
clc
cmpb
push
add
fisubl
out
mov
in
icebp
or
mov
adc
jle
and
inc
into
or
data16
sub
jbe,pt
xor
sub
push
outsl
mov
sub
fisttps
loope
nop
pop
shll
in
mov
sbb
test
leave
repnz
cmp
shlb
iret
cmp
fsubrl
or
les
push
loop
call
lods
lcall
outsb
das
add
mov
fisubrs
icebp
fsts
aaa
dec
pushf
test
mov
aaa
mov
cmp
arpl
xchg
ficoms
jecxz
sbbb
ffree
cmpl
pop
xor
ret
je
xchg
je
inc
add
rcl
cwtl
ret
pop
mov
into
add
neg
xchg
adc
inc
xor
orl
addb
clc
xor
idiv
or
xchg
icebp
mov
cs
cli
dec
or
loopne
dec
pusha
adc
daa
mov
rorb
js
push
mov
xchg
cs
lock
fnsave
xorl
testb
add
xchg
mov
outsb
out
or
jns
lcall
enter
insl
jmp
stos
sub
test
adc
push
add
les
pop
cmpsb
xchg
xor
add
fmull
sbb
stos
cmp
imul
inc
mov
or
cmp
or
fistl
ret
lea
cmp
sbb
arpl
mull
sbb
push
pop
mov
mov
pop
lcall
push
mov
add
movsl
inc
mov
xchg
lods
hlt
xchg
cmpsl
fimuls
push
push
out
cmp
pop
fs
mov
stos
sbb
sub
mov
cmp
roll
or
cmp
mov
aas
outsb
je
dec
test
inc
rol
cmpsl
call
inc
xchg
adc
add
mov
pop
mov
sbb
stos
cmpl
out
ss
clc
jg
dec
test
cld
sub
jp
fildl
or
test
stc
pop
pop
ja
shll
jg
inc
fwait
bound
fdivl
outsl
or
das
xchg
out
dec
sti
fcmovnb
push
xchg
loope
pop
test
movsl
aaa
fbstp
scas
pop
add
cmp
add
lcall
adc
jecxz
mov
dec
call
add
mov
sub
pop
clc
sbb
xchg
xor
insl
mov
les
jbe
dec
cmp
mov
shlb
popl
ret
fidivrl
mov
imul
ds
add
insl
inc
inc
pop
lcall
pop
das
imul
aad
sbb
inc
dec
xchg
std
ljmp
pusha
dec
clc
punpcklbw
fnsave
and
into
mov
mov
lret
fsub
mov
pop
fisubrs
push
in
rol
loope
adc
les
aad
inc
ret
mov
pop
pop
push
jns
lods
shrb
fsubrl
pushf
or
rclb
xor
pop
xor
sub
xchg
icebp
test
xchg
out
xchg
jp
sarl
jle
lea
xchg
mov
adc
subb
pop
insb
fidivl
pop
mov
cmp
sub
pop
addb
pop
les
leave
test
clc
notb
mov
jge
jo
mov
pop
pop
inc
cmp
mov
lods
add
ss
sub
adc
inc
dec
push
sbb
xchg
lock
into
pop
sbb
xchg
adc
mov
sbb
les
aam
xchg
scas
ds
add
inc
mov
mov
out
movsb
test
jo
shlb
inc
add
aaa
sbb
xchg
adc
or
sub
push
mov
decl
rorb
sbb
and
bound
xor
je
ret
insb
movsb
add
add
inc
movsb
sub
mov
stos
mov
mov
and
insb
mov
pop
push
xchg
loop
movl
iret
pushf
pop
icebp
aaa
xor
add
rolb
je
dec
insl
ss
add
mov
je
enter
push
mov
inc
stc
lret
push
and
pusha
pop
ficoms
sub
xchg
and
adc
mov
popf
xchg
and
lock
adc
in
mov
roll
xlat
mov
dec
je
fstpt
push
inc
test
loope
sub
popa
test
je
sbb
and
cld
or
loopne
addl
push
xchg
xchg
mov
iret
adc
inc
mov
jbe
ds
pop
jb
call
mov
sub
push
decl
push
or
lcall
mov
sbb
sub
sarl
out
filds
and
push
lds
mov
lods
mov
xor
test
mov
inc
sarl
test
js
and
sub
push
stos
aam
dec
dec
push
adc
pop
push
push
loope
ss
or
lods
int
adc
shlb
pop
sub
push
subl
mov
mov
sub
pop
xchg
mov
or
mov
lea
jge
in
xchg
xchg
mov
movsb
mov
je
idivb
sub
inc
lock
negb
call
sahf
xor
inc
mov
lret
into
adc
pop
mov
mov
jl
es
cmpsb
adc
test
jl
xchg
lock
clc
mov
ror
mov
inc
test
lock
popa
inc
inc
inc
aaa
push
push
inc
inc
push
mov
or
or
lock
push
loopne
or
push
sbb
lods
pop
push
fwait
pop
mov
mov
shrb
fbstp
popf
stos
lahf
out
and
mov
dec
mov
rolb
cmp
and
iret
and
divl
rorl
adc
in
sub
inc
xchg
add
push
mov
cmpsl
xchg
and
mov
push
dec
mov
pop
ss
cs
je
xchg
push
inc
dec
adc
js
jno
insb
repz
push
sub
test
mov
popf
inc
loop
in
push
arpl
sub
call
add
dec
lods
orl
xlat
ud0
and
jmp
enter
ds
dec
in
inc
or
fsubs
hlt
cmp
sahf
xchg
cs
sub
add
loopne
mov
add
out
jecxz
inc
mov
jle
add
testb
or
pop
sar
xor
les
pop
hlt
mov
pop
and
add
cmc
jbe
sub
int
cld
xchg
test
add
and
test
xor
add
pop
insb
mov
nop
int
mov
push
scas
add
and
lds
lea
xchg
es
testb
outsb
adc
sbbl
fsubr
test
loop
sbb
aam
inc
sub
pushf
push
add
loopne
and
sub
in
cs
or
cmp
lock
call
roll
push
inc
dec
js
aas
push
mov
jmp
mov
mov
incl
in
clc
add
es
cmp
inc
sahf
sbb
inc
add
add
push
sub
dec
sbb
es
dec
test
fdivs
popf
mov
mov
mov
ds
mov
mov
push
pop
push
call
loope
inc
movsb
ja
push
inc
push
mov
in
add
pusha
ljmp
mov
testl
iret
mov
inc
ss
outsb
or
ret
nop
jnp
inc
cli
pop
fs
rolb
rcr
lcall
hlt
stc
mov
jle
cli
jp
dec
in
mov
sbb
pop
push
pop
mov
jl
adc
test
lds
pop
pop
mov
push
mov
mov
clc
xchg
mov
xlat
push
jae
mov
xchg
jl
in
stos
or
xchg
inc
mov
and
inc
push
inc
mov
out
mov
pusha
jno
or
push
and
inc
xchg
pop
cli
mov
test
pop
out
jp
lcall
jb
cmp
or
adc
rorl
inc
dec
mov
fs
add
adc
cmpsb
scas
lods
cmp
repz
adc
fidivl
cs
or
add
call
fcmovu
inc
push
push
cld
shlb
mov
add
bound
mov
and
bound
or
rcrb
shr
outsl
clc
les
cmp
inc
xchg
add
cmc
sbb
ret
hlt
ss
rcll
addb
subl
fidivrl
cld
push
aam
jnp
addr16
cs
mov
pop
shl
mov
push
inc
hlt
arpl
outsl
lea
sub
lahf
cmp
in
or
int3
xor
fwait
ss
add
xchg
sbb
inc
or
and
clc
xchg
push
dec
cmpsb
pop
push
cmp
adc
mov
jbe
push
jne
push
mov
inc
je
push
jecxz
aas
mov
frstor
and
sbb
cmp
inc
enter
lret
pop
or
jns
cmp
ljmp
rcll
fld
sbb
adc
fmul
jle
push
negb
test
cmp
stos
and
gs
lret
push
sub
sti
bound
jmp
mov
ret
xor
arpl
jno
pop
xor
adc
sub
jecxz
inc
push
pop
pop
out
xchg
and
mov
and
adc
pusha
or
outsb
pop
idivb
push
mov
dec
push
adc
adc
call
xchg
into
aaa
inc
jp
daa
lods
fldt
subl
rolb
mov
push
or
shl
or
jle
outsl
pop
sub
enter
cmpsl
adc
push
jl
int
sbb
sub
in
mov
cwtl
dec
rolb
sbb
cmp
lret
movsb
mov
data16
or
adc
push
dec
jae
cmp
popa
add
xadd
pop
and
lock
dec
les
mov
lea
xor
repnz
out
dec
xor
outsb
bound
push
fwait
push
sbb
cmc
cmpsb
cwtl
xchg
push
shlb
out
cmp
fnstenv
mov
push
outsb
inc
cmpl
fisttpl
lret
or
mov
lret
xchg
cmp
fisubrl
inc
push
enter
mov
in
aam
jo
fcmovb
sbbl
adcl
out
adc
or
inc
adc
jecxz
movsl
adc
aas
into
pop
scas
sub
dec
push
mov
shl
push
fcomps
adc
mov
xchg
outsb
jns
dec
ja
mulb
nop
mov
mov
divb
sarb
ljmp
adc
ljmp
ss
clc
loope
push
xchg
mov
push
add
pop
iret
mov
std
jmp
hlt
sub
fisubs
lahf
sub
testb
test
in
cltd
test
xor
inc
fs
mov
sbb
aaa
jecxz
insl
sub
aam
adc
imul
fisttps
rcll
push
ja
mov
add
call
js
jbe
push
jmp
jecxz
stc
sbb
lods
rcr
in
in
faddl
add
xchg
fsub
test
iret
mov
pop
sub
lods
mov
jb
insb
mov
or
add
sub
adc
and
push
fidivrl
or
cmp
pop
cmc
mov
fiadds
jno
popa
mov
in
pusha
fsubs
mov
cmp
jns
xor
or
fs
fwait
xor
mov
cmp
dec
into
dec
cli
leave
sub
cmp
ret
ficompl
scas
push
stc
add
outsl
loopne
aam
aam
popa
or
mov
mov
mov
cs
inc
out
pushw
add
sbb
scas
lods
test
pop
shlb
xor
or
pushl
push
test
mov
addr16
mov
mov
das
and
inc
movsb
test
fisubrs
loopne
xchg
push
adc
dec
pop
inc
stc
jg
cmp
rolb
jae
nop
mov
mov
cmp
add
cs
decl
lds
dec
das
rolb
cmpsb
dec
popa
adc
add
pop
repz
push
enter
je
sbb
testb
push
les
push
test
cwtl
pop
jp
setbe
and
decb
mov
push
xor
or
aam
incl
outsl
shlb
ds
jns
lea
arpl
cld
stos
arpl
fcoml
sub
jmp
mov
or
pop
ljmp
push
pop
lods
or
mov
imul
sbb
and
fistpl
es
pop
mov
sub
xor
or
or
dec
adc
aad
cwtl
xlat
push
dec
das
pusha
xor
or
adc
aam
ret
dec
push
outsb
in
out
je
mov
or
ret
push
out
jecxz
mov
or
dec
and
lds
add
out
xor
sub
add
or
lds
js
cli
xor
les
push
xchg
mov
sub
mov
pop
cmp
add
ret
lods
aas
xorb
js
ja
cmp
cmpsl
mov
push
imul
les
fsubs
mov
adc
push
mov
adc
mov
add
or
add
rolb
ja
shlb
fmuls
mov
call
cmp
jnp
pop
jb
or
das
pop
add
mov
or
pop
xchg
xchg
xor
sbbl
mov
loop
dec
and
mov
pushf
dec
incl
mov
test
push
inc
dec
es
mov
hlt
mov
repz
pop
push
adcb
mov
push
daa
sub
mov
xchg
add
ret
mov
jmp
add
mov
mov
ljmp
jne
jp
lods
add
add
in
cmp
rcrb
leave
dec
push
scas
sub
mov
add
test
push
enter
shll
repnz
mov
sub
dec
mov
cmpsb
daa
out
add
test
out
dec
xchg
push
push
and
push
stos
xchg
or
es
mov
sbb
shr
adcb
mov
add
clc
adc
jle
mov
push
loop
push
lea
sbb
add
testb
pop
lods
mov
aaa
mov
xchg
dec
push
jb
xchg
sbb
cld
inc
xor
xor
pushf
fnstsw
lods
lds
xor
sub
xor
je
inc
lds
push
xlat
ss
test
into
shrd
mov
out
sub
jae
jp
lds
clc
and
mov
sbb
daa
rol
jp
fadds
int3
rcrb
push
jl
inc
dec
addl
mov
faddl
imul
sbb
push
cmp
pushf
xor
pop
test
faddl
push
ljmp
sbbl
xor
add
dec
inc
pop
xchg
shrb
sub
jecxz
repnz
jmp
sahf
fs
fcmove
data16
xorb
mov
jne
cmpsb
pop
ffreep
add
xor
out
cmp
push
jg
inc
xor
mov
or
aaa
or
and
lcall
movsl
cld
adc
jp
sbb
lcall
mov
outsb
loope
adc
pusha
subb
addl
rcrb
ret
adc
aad
inc
jge
mov
lock
sub
mov
jge
xchg
mov
aam
push
and
pusha
adc
xor
cmc
jns
ret
roll
icebp
fcomp
ss
push
test
push
sbb
rclb
cmp
lods
js
sti
pop
int
arpl
lds
sbb
push
mov
fstpt
push
add
stos
or
dec
cmc
cmp
mov
mov
decb
js
loop
cld
jne
jg
adcl
int
cmp
aas
jmp
test
mov
rclb
in
jo
mov
inc
or
pop
and
adc
xchg
lea
push
sub
test
xorb
add
negl
into
fildll
inc
mov
pop
mov
ds
pushl
pop
inc
and
jbe
add
mov
add
sbb
int
pop
jbe
cmpsl
aam
sar
scas
jg
stc
mov
shll
shl
lods
sbb
push
sub
std
decl
sub
dec
dec
into
out
jp
int3
sub
sbb
jl
mov
add
adc
lds
loope
jmp
mov
dec
testb
ficoms
or
aaa
cmp
add
fstps
sub
test
bound
pop
push
inc
cltd
insl
or
pop
repz
or
pop
insb
pop
adc
scas
aam
loop
clc
and
jp
push
add
notl
pop
add
or
add
xor
push
and
cmp
test
lods
popf
test
shrl
pusha
or
fcoms
fwait
rorb
sub
mov
nop
fwait
hlt
call
in
push
or
mov
loop
sahf
push
xchg
jl
and
or
repz
jae
ss
sbb
inc
test
or
pop
insb
cmp
shrd
icebp
shll
add
int
sti
insb
xchg
stos
cmp
dec
jmp
and
adc
push
dec
push
push
pxor
pusha
mov
xor
pusha
or
jp
or
push
dec
add
testb
test
jb
add
test
test
leave
scas
mov
cmp
sub
in
jb
sarb
rclb
or
or
mov
je
ljmp
scas
inc
mov
jb
out
subl
mov
sbb
mov
fiaddl
cmpb
rcrl
xor
and
sub
nop
dec
and
ljmp
or
push
daa
in
xchg
loop
outsb
add
or
lods
jb
inc
jnp
push
mov
inc
adc
fs
jle
xor
mov
push
pop
push
pop
orl
jo
dec
xor
rolb
or
cmp
cmpsb
ss
movsl
xor
hlt
sahf
mov
lods
je
mov
xor
or
call
scas
or
inc
dec
sub
adc
jecxz
sbbb
push
xor
jne
inc
cmp
cmpsl
sub
lock
sub
cmp
aam
or
cmc
bound
dec
push
ss
insb
adc
pop
ja
push
dec
clc
cli
in
or
cmpb
jno
adc
scas
sbb
jmp
xchg
nop
push
mov
inc
pop
cli
insl
dec
push
jg
fidivl
inc
lcall
fwait
xor
imul
cmp
push
push
inc
or
cmp
loope
push
push
xchg
in
sbb
lods
push
push
in
dec
inc
cli
mov
and
mov
push
mov
pop
adc
ror
sbb
sub
in
xchg
add
aaa
pop
add
jp
test
orl
xchg
loope
aam
shll
mov
sub
mov
inc
insl
loop
pop
hlt
pop
jp
arpl
nop
add
cli
xchg
dec
pusha
jmp
ds
add
mov
or
push
rorl
test
mov
js
xchg
sete
clc
in
outsl
push
jl
imul
sub
push
stos
or
clc
xor
add
call
pavgw
jp
pop
cmpsb
add
loope
fisubl
fneni(8087
into
sbb
pop
call
add
sbb
in
out
cmpsb
and
pop
cmp
xchg
clc
jmp
pop
imul
enter
out
xor
sbb
lret
lcall
out
sbbl
cs
jbe
jecxz
push
pop
pop
sbbb
inc
sti
fsubrl
push
sti
xchg
jo
sub
sbb
jl
jp
and
sub
mov
ljmp
and
cld
xchg
or
loope
arpl
sysexit
xor
jae
push
sbb
pop
inc
add
mov
fcomps
pop
adc
aam
movsl
mull
xor
ljmp
cmp
inc
cld
cli
stos
pusha
notl
inc
and
std
inc
in
or
mov
add
inc
push
pop
dec
mov
push
cltd
cld
mov
cs
sbb
fmuls
scas
push
xor
clc
mov
scas
dec
pop
and
adc
fs
push
jge,pn
loope
or
fwait
movsb
push
xor
xchg
and
pop
outsb
xor
ljmp
std
dec
lods
sbb
xchg
call
clc
js
mov
dec
adc
nop
push
insl
fs
subb
pushf
and
aaa
mov
or
or
lods
xor
gs
icebp
imul
pushf
lcall
mov
dec
pop
cs
std
sbb
out
xchg
mov
in
imul
dec
add
add
xor
es
mov
js,pn
push
xchg
lahf
rcr
inc
inc
mov
add
mov
je
jo
add
xchg
adc
test
bound
mov
push
pushf
push
xchg
sarl
movsb
and
sahf
addl
aad
mov
or
pop
pop
mov
push
push
xchg
addb
mov
je
mov
mov
shrl
rcrb
jb
mov
inc
inc
out
pop
loop
scas
lret
or
sbb
xor
pop
mov
xor
adc
jle
xchg
test
sub
dec
mov
or
jae
in
fnstenv
mov
cmp
je
push
adc
sar
dec
shl
and
mov
add
mov
lcall
popf
cmp
mov
decb
cmp
lds
or
shl
pusha
lods
xor
push
test
jmp
and
inc
sub
shll
pushf
imulb
mov
pop
inc
ljmp
and
inc
xor
repz
fisubl
in
ret
push
adc
push
scas
es
push
stos
ret
and
sub
call
sbb
dec
or
and
or
lret
mov
push
inc
stos
push
pushf
and
fwait
pusha
lcall
push
cmc
xorl
adc
fs
or
mov
nop
mov
push
inc
ja
push
add
xor
adc
cmp
push
mov
xlat
mov
cli
xchg
adc
fstl
inc
mov
add
xor
adc
cmp
data16
out
fwait
jle
push
cmpsb
sub
mov
mov
pop
mov
dec
mov
dec
and
adc
mov
mov
shrb
lock
dec
ss
mov
sub
jle
icebp
dec
cmp
push
int
push
loope
fcmovnbe
push
mov
lret
mov
mulb
add
shl
pop
mov
cli
and
loopne
subl
aaa
shll
rorl
rcl
xchg
faddl
fcompl
test
and
mov
mov
dec
jnp
jecxz
pop
sub
stos
cmpsl
aas
repnz
data16
adc
stos
inc
mov
sbb
add
mov
and
negl
je
xorb
mov
loope
xor
pop
push
sub
nop
or
arpl
push
arpl
xchg
ds
mov
or
push
cmp
in
insb
jmp
decb
je
clc
mov
jecxz
test
mov
sbb
xlat
fsts
aas
outsb
and
add
outsl
lods
dec
aas
xor
movsb
lds
out
shlb
test
je
rcll
gs
adc
loopne
or
test
lock
pop
je
inc
insb
mov
cmp
rcl
xlat
xor
js
out
in
loopne
mov
jb
push
mov
lock
xlat
dec
out
cmpsl
mov
cwtl
and
lret
lods
call
xor
push
inc
jl
cli
inc
test
push
or
push
outsb
cmc
movsl
iret
clc
push
es
loop
inc
and
and
add
fsin
mov
loop
inc
sahf
call
or
lahf
sub
push
adc
xor
testb
cmp
jmp
and
add
or
and
mov
fwait
pusha
pop
scas
enter
daa
lret
cmove
mov
movsl
pop
sahf
mov
cmpsl
dec
sbb
ficoms
repz
push
xchg
sbb
xchg
sub
mov
repz
add
cld
or
imul
or
xor
cwtl
hlt
pop
fadd
or
filds
shrb
mov
loope
out
mov
cmp
fidivs
mov
mov
pusha
or
xor
shl
sbb
clc
dec
inc
rcr
adc
dec
xchg
inc
sti
popf
outsl
dec
dec
inc
and
cmp
xchg
cmc
jb
and
adc
not
bound
mov
ja
mov
mov
scas
inc
push
fdivl
cmp
js
fcomps
push
pop
outsb
cmp
mov
out
das
push
pop
aaa
sti
jmp
inc
inc
lret
repz
orb
push
addr16
int3
movlps
mov
fs
adc
loop
ret
hlt
mov
xchg
fsubrs
mov
jg
inc
adc
lock
fmull
inc
mov
movsb
mov
ret
aaa
or
add
cmp
leave
test
ja
loopne
aaa
shll
xchg
lods
das
or
push
push
jbe
pop
add
stos
popf
mov
rcrb
and
xchg
inc
sbbb
xchg
lock
hlt
pop
stc
mov
clc
data16
mov
mov
lahf
adc
add
inc
dec
test
lods
loopne
cmpsb
dec
adc
ljmp
pop
pusha
in
push
cmpsl
mov
push
lock
mov
push
test
adc
mov
push
jnp
sbb
sbb
iret
loopne
cli
stos
cs
cwtl
int3
test
sbb
imul
jne
movsb
pop
fcomps
call
gs
lock
ss
adc
shl
aas
test
js
push
push
call
mov
adc
cmc
ja
jae
or
jmp
add
pusha
outsb
push
jp
rorl
add
mov
add
mov
sub
or
push
repnz
dec
ljmp
gs
sahf
jae
xor
or
cli
mov
std
xor
andl
stos
push
sbb
mov
nop
gs
pop
test
jo
mov
js
lds
pop
pop
push
fsubs
test
mov
jecxz
add
push
pop
xchg
mov
add
xchg
mov
mov
stos
ja
xchg
mov
mov
orb
mov
inc
in
adc
out
shrl
mov
andb
sub
jg
mov
pop
loopne
test
jo
lods
cmpsl
inc
popa
or
rcll
jbe
shrl
mov
scas
stos
lods
xor
mov
rclb
add
enter
pop
mov
hlt
ret
ds
adc
mov
inc
idiv
dec
insl
hlt
data16
xchg
mov
jne
mov
or
xor
js
loopne
and
popf
mov
or
push
pop
inc
pop
adc
ljmp
pop
cmp
mov
inc
mov
mov
push
fdivs
or
data16
dec
cmpsb
ret
and
mov
lahf
and
fidivrl
sub
add
mov
cmpb
push
inc
xor
push
roll
dec
push
int
loop
and
pop
inc
movsb
adc
dec
mov
push
pop
ss
adc
mov
push
jl
inc
loopne
mov
push
inc
or
test
jbe
mov
cmp
scas
imul
push
fistpl
jnp
std
cmp
pushl
inc
cmp
fidivrs
mov
push
sub
repnz
ljmp
dec
jbe
xchg
sbb
pop
lret
js
or
mov
addb
sbb
shlb
sbb
addb
pop
sub
addr16
ficompl
add
decl
bound
in
shll
cwtl
dec
cs
pushf
mov
mov
lock
cli
pushl
movl
clc
sub
cli
stc
addb
xlat
mov
adc
mov
outsl
sub
mov
adc
xchg
mov
dec
adc
test
push
pop
cmp
cmpsl
sub
xlat
mov
mov
mov
adc
out
adc
lock
loopne
sarl
mov
enter
ds
mov
lcall
test
jg
add
xor
aas
int3
clc
nop
xor
sub
and
or
sub
mov
sbb
fcomps
mov
lcall
push
sbb
add
and
mov
mov
lahf
pop
test
lods
imulb
add
add
rcll
inc
lds
pop
mov
pop
scas
ret
sbb
mov
subl
faddl
in
out
cmp
sbb
inc
mov
aam
or
movsb
icebp
cmp
repz
xchg
and
data16
push
inc
add
fcmovu
add
call
sbb
bound
das
repnz
mov
in
fiaddl
mov
rorl
xchg
pushf
push
sub
inc
sahf
cli
pop
cmp
nop
or
jnp
arpl
enter
fwait
inc
sbb
add
mov
std
andb
or
mov
call
cmp
pop
std
shll
inc
mov
push
pop
test
mov
hlt
icebp
pop
jecxz
jl
jecxz
sahf
fsubrs
orb
cmp
jb
imul
dec
in
and
cmp
divps
cmp
push
jnp
dec
subl
pop
cmp
jbe
xor
and
cmpsb
or
push
clc
add
and
push
xchg
xchg
jno
pop
mov
push
push
stos
cld
pop
push
push
xchg
and
cmpsb
lds
jg
dec
lahf
push
daa
outsb
cmp
jo
add
iret
fistl
jbe
adc
pushl
scas
es
ljmp
adc
add
inc
xorl
dec
xlat
shlb
and
insb
dec
push
and
mov
dec
movb
pushf
sbb
pop
inc
shrb
mov
stos
cmovo
pop
clc
cwtl
jecxz
pop
rcll
inc
pop
icebp
out
cli
push
outsb
and
aad
sub
fisubl
mov
mov
ja
jmp
and
movsb
daa
aad
dec
adc
sbb
shl
movsb
mov
or
test
mov
fisubrl
cli
push
xor
jbe
or
fiadds
movsb
punpckldq
add
js
icebp
ret
sub
jp
or
cwtl
push
push
xor
and
cltd
test
and
in
jb
mov
pop
testb
pop
ss
mov
insb
and
aam
mov
xor
rcrb
bound
leave
mov
out
and
and
roll
inc
sub
aaa
stos
inc
mulb
and
lock
cld
push
sahf
pop
dec
enter
rorb
push
inc
xor
mov
mov
cli
loopne
orl
aad
icebp
and
inc
pop
add
bound
jns
push
pushf
jne
jae
adc
fistpll
fwait
clc
push
pop
loope
rorb
lcall
cmp
push
scas
fnsave
ret
dec
mov
nop
pusha
mov
ljmp
adc
pop
pop
sub
sbb
shl
ret
cmpsl
push
or
or
rcrb
rol
fistpll
push
inc
fwait
xor
es
aaa
cld
arpl
je
aaa
lock
jns
jle
or
testl
les
push
je
dec
inc
inc
popa
aaa
rolb
call
int3
xchg
cmp
xor
pop
fcmovbe
and
icebp
push
inc
insl
sub
and
mov
mov
lods
pop
add
loope
fwait
in
inc
sub
jb
fimuls
jle
cmp
adc
lcall
incl
mov
sahf
nop
ret
je
call
adc
or
pop
sbb
push
xor
mov
shrb
pop
sub
push
in
sub
fcompl
xchg
aad
cmp
or
inc
mov
xor
add
adc
inc
mov
and
inc
lcall
push
or
or
outsb
jnp
stos
mov
cmp
ss
cmpl
lcall
mov
cs
shll
in
mov
sti
cmpsl
pop
jecxz
xor
outsl
dec
jp
shl
dec
mov
jno
mov
mov
cld
scas
andl
push
adc
xlat
push
push
sbb
pop
inc
push
mov
xchg
shlb
daa
lock
loope
xor
mov
and
sbbb
mov
lcall
jle
orb
lahf
repnz
loope
adc
sti
jmp
add
push
stos
mov
pop
jne
push
dec
jecxz
add
xor
xchg
out
inc
jl
out
add
imul
out
cli
ja
scas
imul
mov
cmp
pop
sbb
and
pop
mov
fcomi
sub
sar
cmp
add
add
mov
or
xchg
das
or
loop
je
cmp
jl
xchg
cmp
andb
mov
arpl
mov
ret
or
adcb
lret
adc
faddl
xchg
mov
les
mov
fwait
out
pushf
or
imul
sub
xor
andb
adc
int3
test
xchg
and
cmpsb
push
xor
push
aas
cmp
dec
sbb
mov
mulb
fadd
push
cld
shlb
push
push
pop
inc
jbe
int3
lock
or
xor
psubusb
addr16
sub
mul
or
jo
push
xchg
push
loope
mov
mov
pop
bound
push
insl
dec
cmpsl
outsb
ret
adc
dec
out
aas
rol
adc
jnp
ds
addl
dec
loope
test
ds
sub
in
testl
inc
jp
test
ja
std
pop
ljmp
rolb
pop
loopne
clc
mov
ljmp
push
add
lret
adc
lock
cmpsl
mov
data16
inc
mov
movsb
lea
sbb
jecxz
cmp
rcrb
test
js
push
xchg
jle
add
jae
shl
out
push
push
and
mov
mov
mov
xchg
cmp
jae
inc
mov
mov
test
dec
cwtl
sar
push
jo
aas
push
jl
lea
dec
sub
mov
lods
pusha
jp
xor
pop
or
mov
popa
sbb
outsb
dec
fsubs
push
and
sbb
dec
push
lea
aam
push
rcll
adc
dec
sub
je
and
add
aam
fldt
mov
mov
xchg
dec
aaa
test
sbb
xor
xchg
rcr
fbstp
or
rolb
popa
je
jmp
or
xchg
out
js
xchg
dec
inc
cwtl
push
fs
testl
jge
adc
pop
loopne
rol
push
add
test
imul
insb
shll
mov
das
cs
push
push
adc
push
in
mov
cmpsb
les
mov
or
push
pushf
jnp
sahf
int3
pop
inc
pop
es
mov
sbb
aad
cmp
arpl
orb
and
shlb
rol
pusha
in
inc
insl
sbb
icebp
lahf
outsb
sbb
jmp
clc
fadds
daa
pop
jb
loope
lock
int
push
xor
cmc
nop
pusha
shlb
les
add
into
sar
sub
fdivs
or
add
repnz
sub
jp
mov
xchg
sub
jmp
and
movsb
mov
sbb
pop
and
sub
insl
call
xchg
das
nop
xchg
fs
int
cld
or
push
mov
xchg
sub
mov
inc
mov
or
sti
gs
movsb
fwait
sbb
scas
push
or
lret
push
add
add
and
adc
fsubrs
aad
mov
mov
pop
fisubl
aaa
loopne
mov
int3
sahf
pusha
in
rcl
xor
lods
out
push
and
add
pop
xchg
or
in
pop
inc
out
cmpsl
mov
cmp
adc
mov
or
mov
loope
lods
sbb
inc
ficomps
shll
aam
aas
or
subl
pop
pop
pop
clc
ja
pop
mov
xchg
jle
and
pusha
outsl
dec
or
mov
mov
leave
inc
popf
aas
fcoml
sbb
loop
add
in
sarb
push
cs
cmp
ret
add
pop
mov
push
mov
sub
push
stos
push
jl
push
adc
sbb
shl
xchg
inc
lock
xchg
push
mov
cmp
mov
lods
shrb
icebp
cli
call
incl
cmpsl
fistpl
fistps
jo
mov
mov
sbb
inc
xchg
jno
jb
mov
aad
sub
in
gs
push
lahf
adc
jmp
por
aad
jmp
shrb
cmp
repz
inc
nop
test
nop
aad
add
pop
mov
or
lcall
add
mov
fs
sub
lods
or
mov
clc
jne
test
sub
pop
popl
lret
mov
and
mov
testl
adc
mov
das
sbb
add
and
rolb
add
inc
xchg
xchg
scas
dec
sbb
rclb
and
imul
xchg
cmc
aad
mov
dec
outsb
mov
stos
or
sub
push
cmp
fsubrl
dec
cli
aad
into
xor
push
fadds
ret
mov
dec
imul
js
sahf
xchg
rcll
xchg
sub
data16
test
stos
fmuls
cmp
add
adc
mov
adc
jl
or
pop
xchg
je
and
add
and
fstps
push
icebp
mov
xchg
iret
jle
icebp
loop
push
pop
push
repz
jmp
and
arpl
imul
flds
dec
test
test
inc
inc
sbbl
test
mov
cmp
add
cmp
fldt
adc
and
pop
ret
mov
cmpsb
pop
dec
call
dec
push
dec
and
test
cmp
mov
mov
sub
fisubs
jnp
adc
dec
outsl
stos
cmp
mov
inc
arpl
mov
icebp
loopne
shlb
pop
fidivrs
cli
xchg
data16
popf
jbe
clc
rclb
jg
loopne
jp
scas
lock
dec
pop
sbb
pop
call
dec
xor
cmp
sub
rcrb
scas
push
xchg
adc
fwait
js
dec
push
cmc
pop
mov
jno
add
clc
dec
mov
aaa
js
jp
inc
sub
lds
mov
xor
and
pop
mov
jnp
loope
jo
mov
je
sbb
les
mov
add
cmp
jns
rcrl
sbb
or
ficoml
js
mov
into
js
push
roll
xor
nop
and
loop
mov
popa
push
lret
cmpsb
mov
xor
pusha
out
pop
sbb
xor
repnz
sub
test
ja
dec
pushf
inc
rcrb
lock
mov
lea
int3
adcl
repnz
loop
shl
adc
cmp
mov
mov
icebp
dec
cmpl
jg
xchg
cmp
dec
jne
sub
and
sub
unpckhps
arpl
sub
popa
rolb
aas
dec
aam
push
push
inc
sub
rolb
jecxz
add
push
adc
adc
out
fs
ljmp
mov
cmp
sbb
pop
fcomi
jne
sbb
out
imul
mov
xchg
pop
fwait
pop
xchg
add
xchg
add
faddl
pop
jg
cli
mov
lret
cmp
mov
cmp
jg
aad
ficomps
dec
push
and
in
dec
popa
mov
loop
aaa
test
daa
inc
out
fwait
lcall
mov
je
popa
outsb
push
jge
push
xchg
addb
pop
subb
ret
pusha
in
lcall
lea
pop
push
ljmp
mov
and
cmp
mov
movsb
dec
outsl
pop
and
repz
js
fnsave
insb
cld
icebp
lcall
stos
push
jecxz
or
pop
callw
cwtl
push
shrl
push
mov
and
je
dec
sbbl
add
cmp
pop
test
ret
popf
xor
sbb
std
adc
in
out
pop
or
ret
fnstcw
lods
dec
loop
lock
mov
mov
jne
mov
push
mov
loop
xchg
fsubl
mov
fnsave
mov
push
pusha
pop
dec
dec
xchg
and
push
sbb
inc
and
mov
dec
imul
cmp
fwait
mov
xchg
jmp
xor
clc
jno
es
jg
sbb
xchg
je
dec
adc
in
or
test
xor
xor
cli
popa
lcall
dec
sarb
sub
repnz
jno
xor
push
inc
insb
dec
insb
loop
out
popa
mov
iret
mov
lock
mov
pop
sarb
inc
cmpsl
mov
daa
ss
outsb
or
sub
xor
mov
mulb
xor
push
mov
sub
hlt
or
sbb
pop
adcb
mov
push
insl
sahf
shl
or
sub
aad
ds
or
fcmovu
test
div
vsqrtps
mov
xor
mov
inc
imul
outsl
loope,pt
loopne
scas
adc
xchg
cld
or
sub
push
js
addr16
and
hlt
pop
test
ret
push
loopne
fsub
lds
xchg
fists
mov
push
xor
xchg
in
je
cmpsb
xchg
pop
xchg
sub
testl
or
sub
add
xchg
int
outsb
mov
push
popa
inc
and
adc
lds
push
cmp
mov
js
or
add
inc
out
bound
bound
cmp
sub
sbb
repz
mov
rclb
bound
insl
fimull
xchg
xchg
scas
dec
mov
lock
std
mov
in
xor
push
mov
stc
incl
ret
push
xchg
loope
or
mov
cmpsl
fnstenv
sub
rorb
lcall
pop
pop
xabort
cmpb
aas
jg
sbb
and
add
xor
jb
pop
push
jns
negb
jle
ljmp
daa
or
insb
loop
ret
push
jb
clc
xor
dec
stos
xchg
jb
push
subl
dec
inc
pmovmskb
mov
dec
pop
cmp
lcall
xor
xor
stos
es
in
pop
lods
lds
and
jp
xchg
dec
push
lahf
fstl
push
or
fnstenv
shrl
incl
sub
mov
mov
mov
xor
sub
test
dec
add
xchg
push
sbb
outsb
jmp
add
push
cmp
push
mov
or
cmpsl
push
pop
adc
sub
leave
out
subl
pop
hlt
lea
and
add
clc
dec
add
and
je
rolb
addr16
sub
ja
mov
lret
sbb
cmc
cld
lcall
leave
mov
jbe
mov
imul
and
aad
les
xor
sbb
add
cmpsl
fs
push
cmp
jg
das
out
add
pop
adc
push
adc
fnstsw
sbb
adc
or
xor
xchg
push
add
add
jg
pusha
xchg
push
jb
xlat
outsl
insb
sub
xchg
sub
shl
add
mov
add
cwtl
es
ret
cmp
xchg
outsb
xor
icebp
arpl
nop
loop
ds
pop
mov
sub
loope
jne
or
lock
xchg
adc
rol
fstl
fwait
xchg
sbb
ds
subl
into
or
add
push
push
xorl
dec
xchg
enter
les
xchg
lcall
xor
cmp
xor
dec
fstps
or
cmpsb
sbb
pop
xor
cli
cmpl
xchg
insl
mov
inc
xchg
jp
cmp
and
push
es
movsb
xchg
fwait
push
or
lea
loopne
add
clc
popa
cld
ret
dec
cmpl
movsb
movsb
mov
dec
adcl
xor
inc
mov
mov
fsubl
mov
push
fcomps
nopl
in
aam
and
adc
scas
icebp
or
inc
rorl
and
mov
loope
inc
in
ljmp
pop
or
inc
ja
mov
mov
dec
jg
andb
faddp
divb
sbb
movd
xchg
insb
sbb
cmp
and
cmpsb
loop
mov
push
lcall
icebp
das
fdivl
lds
pushf
mov
xchg
fnop
cmp
add
scas
outsb
jp
dec
cmp
push
imul
pop
imul
push
cmp
dec
push
inc
test
inc
push
out
mov
mov
pop
aad
xchg
mov
shrl
cmc
mov
sub
sbb
in
imul
or
mov
mov
unpcklps
cltd
testl
mov
add
adc
cli
dec
pop
dec
cmp
call
jo
dec
stos
dec
pop
imul
jo
xor
movsb
adc
ja
and
ljmp
lock
add
icebp
mull
mov
xlat
and
pop
cmpsb
rcrl
pop
out
arpl
fadds
xor
mov
jo
inc
pop
shl
pop
add
loopne
push
push
lock
mov
shrl
fdivrs
sbb
inc
js
popa
fisubrs
sub
sahf
xor
adc
pop
movsb
subb
sti
fldt
and
pop
mov
ja
push
cmpsb
loop
lcall
rorb
pop
mov
dec
popa
mov
ds
ljmp
loopne
mov
mov
add
add
jl
sbbl
sbb
mov
sbb
sbb
je
std
jo
mov
dec
es
in
aam
or
pusha
xor
mov
adc
and
jp
je
and
inc
mov
mov
push
mov
and
adc
testb
push
add
aaa
repz
xchg
popf
xlat
nop
mov
movsl
pushf
lods
lcall
fcmovnb
shlb
dec
cmp
adc
ficomps
psubb
push
sbb
icebp
lock
ret
pop
push
sbb
mov
cmp
sbb
mov
in
imul
loopne
mov
xchg
insl
sub
pushf
lds
or
and
inc
sub
push
mov
mov
xchg
outsb
hlt
inc
adc
dec
movzwl
pop
inc
pop
imul
push
pop
and
xchg
aam
pop
imul
nop
loope
movsl
stc
sub
pop
leave
imul
inc
cmp
xchg
push
and
push
andl
decb
loop
mov
js
dec
mov
jmp
xchg
int3
xchg
jecxz
jo
roll
or
cs
adc
sub
sub
mov
fildl
daa
xchg
call
lretw
test
test
mov
nop
pushl
loop
adc
popf
push
rorl
fimull
ds
test
jno
push
adc
int3
mov
in
lock
dec
loop
movq
push
repz
mov
mov
popf
test
icebp
mul
ret
je
sbb
loopne
rclb
bound
ljmp
testl
ljmp
shlb
jg
push
mov
sub
fiaddl
mov
jmp
mov
adc
insb
pop
mov
pusha
inc
or
and
lret
jno
bound
scas
jb
jbe
cmp
out
mov
dec
sub
divb
xchg
or
xchg
addr16
jp
inc
andb
sbb
xchg
test
jne
mov
xchg
jbe
pushf
sub
aad
xchg
subb
rolb
std
rolb
mov
cmc
decl
inc
out
enter
outsl
adc
jne
cmpsl
push
xchg
adc
nop
rorb
inc
cmc
or
shll
sysret
pop
jne
cltd
pop
out
lods
sub
xchg
jbe
scas
jp
mov
call
adc
enter
test
or
push
xchg
mov
push
add
movsb
cmpsl
out
lret
mov
cmp
sbb
les
int
jo
pop
cmpb
push
pop
das
add
cmp
push
fs
cmp
repnz
jle
fwait
or
push
pop
test
cmpsb
addb
xor
and
xchg
xchg
jo
pop
pop
cmp
rep
je
push
xor
dec
jo
or
popa
push
jge
popf
sbbb
mov
sub
jne
cmc
mov
mov
ret
dec
hlt
icebp
sbbb
fbstp
xchg
or
add
xchg
jmp
cld
into
test
fimuls
mov
mov
push
rcll
pop
mov
and
cmp
jecxz
cmpsb
lods
mov
mov
sbb
cld
adc
sub
rcrl
inc
js
adc
fsubrs
or
mov
mov
push
imulb
sub
insb
dec
mov
mov
sbb
fcomp
daa
cmpsb
fsubs
hlt
test
cwtl
sbbl
in
dec
scas
imul
sub
xchg
and
lret
aad
mov
sub
pop
sbb
jp
sti
negb
push
and
popa
jge
fisubl
pop
lods
std
test
xchg
mov
addl
cmpsb
cmp
sbb
mov
adc
addr16
fsubl
enter
mov
sti
and
mov
clc
into
ds
clc
faddl
jb
lods
cmp
mov
cli
xor
or
xor
inc
cmp
shrb
mov
fbstp
popa
push
fdivrp
ret
ljmp
popa
or
adc
dec
shl
sti
fstpl
ljmp
sbb
cmp
or
mov
mov
cli
hlt
je
icebp
fimuls
cmp
mov
vpavgw
push
inc
ret
sub
popa
fidivl
jmp
sub
mov
pop
lret
push
inc
xchg
jno
rcll
pavgb
leave
shll
pop
cmp
andb
xchg
add
cmc
xor
pop
sub
push
jmp
test
fmul
neg
add
or
call
adc
nop
add
scas
add
mov
fucomp
adc
nop
ror
dec
or
ret
jmp
int
mov
cmp
sub
inc
jecxz
push
dec
or
fiadds
xlat
aad
addr16
dec
xchg
adc
andb
jnp
add
imul
cmp
mov
add
mov
mov
notl
outsl
mov
arpl
or
iret
mov
pop
add
adc
mov
push
add
pop
hlt
sbb
out
xchg
mov
test
inc
pop
and
mov
or
test
cwtl
mov
incl
sarl
hlt
xchg
stos
in
shrb
repnz
cmp
lret
mov
push
inc
test
add
cmp
andb
js
dec
push
cli
scas
es
sbb
cld
add
fcmovnb
ss
sarb
mov
add
call
or
pop
fisttpl
inc
pop
sbb
add
xchg
add
arpl
jmp
sbb
loopne
or
xchg
test
loop
add
mov
inc
dec
or
call
lock
jb
inc
xchg
sarl
bound
push
sbb
clc
jno
dec
rclb
sub
popl
push
and
add
push
scas
xchg
mov
loop
mov
xchg
push
adc
xor
mov
mov
sub
fistl
mov
xchg
pop
inc
inc
dec
out
inc
xorb
xor
cmp
aas
push
rorl
nop
pop
sbb
jmp
nop
shll
call
ljmp
sti
lret
out
mov
and
dec
and
and
mov
and
cmc
pop
cmp
xor
sbb
adc
cs
inc
jne
scas
push
fucomip
loope
loope
adc
scas
sub
mov
fidivl
push
ret
data16
popa
int
sub
cmp
sbb
mov
inc
lods
add
push
pop
dec
push
mov
cmp
pop
xchg
clc
mov
pusha
mov
xchg
push
mov
out
loop
add
sbb
out
fs
mov
xchg
incb
mov
mulb
icebp
sbb
sub
icebp
jecxz
test
mov
mov
out
dec
or
imul
push
sub
xchg
cmc
int3
pop
loope
addl
sbb
or
jge
loopne
push
sub
jg
xor
mov
mov
sub
js
dec
push
out
sti
and
loop
jo
lret
mov
test
cs
sbb
inc
add
out
pop
pusha
out
mov
pop
mov
mov
lods
jnp
jecxz
mov
xchg
xor
or
cmc
and
decb
pop
or
add
imul
popa
add
aas
lcall
inc
dec
insb
mov
lock
xor
les
sbb
push
faddl
cmpb
mov
aaa
and
out
push
jl
inc
cli
sti
mov
cli
outsb
mov
cmp
jecxz
repz
ljmp
sub
std
mov
pop
scas
push
or
mov
sub
clc
cltd
pusha
add
jmp
push
fcoml
and
andps
fadd
sahf
cmp
mov
das
xchg
pop
pop
xor
and
mov
loop
or
push
jmp
inc
mov
dec
jecxz
mov
in
outsl
or
ds
data16
ja
jbe
stos
adc
shlb
nop
pop
lods
xor
xor
in
sbb
loope
push
mov
stos
lds
add
stos
cmp
jg
call
ror
pop
pushf
xor
jmp
cmp
push
cli
push
add
ret
incl
int3
xchg
loope
xorb
cwtl
jl
sysret
ljmp
sub
jp
sahf
fldl
jno
mov
cwtl
lods
mov
dec
cwtl
clc
push
fucomip
insb
shrb
mov
push
xchg
in
aas
xchg
ljmp
ret
or
enter
sbb
adc
push
cmc
lods
lea
loopne
testb
mov
cmc
add
cs
mov
test
pusha
lret
adc
inc
xchg
test
lock
je
repz
push
mov
sbbb
xchg
ljmp
test
sar
das
sbb
cmp
inc
loope
xor
cld
cmpsb
ss
adc
mov
pop
mov
ss
addl
push
jg
jo
bound
std
add
movsl
ds
imul
icebp
adc
mov
inc
fsubs
push
stos
loop
out
push
dec
stos
daa
or
mov
aam
pop
les
sbb
shl
pop
rorl
adc
and
cld
fdivrl
jne
dec
sbb
pop
xorb
mov
bound
cmp
out
inc
iret
and
nop
aad
pop
mov
push
dec
push
pusha
sbb
xchg
inc
mov
shrb
iret
push
mov
jb
jo
sub
add
add
add
fists
jl,pn
mov
and
out
mov
sbb
jb
jns
pushf
mov
loopne
shrb
sub
stc
lds
daa
xchg
mov
mov
testl
cld
dec
test
mov
ljmp
imul
ret
and
sar
loop
lock
cmp
sbb
or
hlt
imul
mov
push
dec
sarb
and
hlt
lods
mov
and
jb
dec
jle
movsb
or
lods
icebp
pop
cli
mov
mov
cwtl
sub
loope
fidivrs
mov
xlat
addl
test
cltd
add
ljmp
outsb
sub
mov
int3
cmc
fcompl
dec
jnp
sub
divl
or
inc
pop
push
push
ja
mov
push
jp
add
push
movsb
add
sbb
xorl
push
in
aam
add
jo
cmp
imul
inc
loopne
shlb
xor
dec
mov
test
clc
mov
aaa
mov
sahf
daa
orb
jl
call
clc
cs
mov
scas
es
loop
xor
not
icebp
aaa
inc
insb
push
inc
sub
movl
xchg
adc
xor
lock
sarl
add
icebp
mov
test
adc
mov
pop
fdivl
mov
ljmp
adc
call
push
and
test
xor
ljmp
add
xor
push
add
sbb
jae
and
fistpll
push
jp
lret
push
dec
scas
fildl
cmpsb
mov
xlat
fiadds
jp
jmp
stc
inc
js
stc
data16
clc
pusha
jmp
lret
push
mov
lahf
push
mov
stos
mov
lret
dec
xor
or
lock
pop
xchg
dec
scas
dec
pop
ret
rcrb
nop
iret
push
sub
push
add
popl
ror
ret
push
mov
cld
cld
insb
cmp
mov
popl
xor
mov
jmp
jbe
ds
sub
fisttpl
inc
clc
xchg
jns
pop
jbe
jmp
lret
and
and
sub
lret
sub
fdivr
mov
xor
pushl
js
loop
sub
in
and
test
jge
fwait
mov
add
loopne
and
fs
fldt
jl
jmp
insb
lds
lret
or
rol
stos
ja
ljmp
pusha
mov
movsl
jl
popa
lock
cs
cmpsb
xchg
or
push
sub
icebp
push
pop
and
lods
sbb
inc
enter
or
add
cmp
sahf
push
stos
jg
test
lds
add
fcomps
loope
dec
jnp
mov
repnz
sbb
sbb
add
jmp
cmp
fsubrs
imulb
test
ds
cmc
fdivl
cs
es
push
bound
ficoml
add
or
rol
imul
loopne
insb
add
or
and
out
lods
push
dec
xor
inc
and
push
and
jecxz
mov
push
pop
into
scas
xor
ror
shrb
fiadds
rorl
mov
loop
andl
mov
adc
pop
sub
lds
das
scas
fiadds
test
push
sarb
cmpb
pop
mov
or
fistl
xchg
cmp
or
inc
popf
lcall
mov
xchg
push
mov
dec
adc
mov
or
mov
xor
movsb
inc
push
or
rclb
mov
fbstp
test
mov
sbbb
sub
and
insl
cmp
jmp
dec
mov
push
mov
mov
xor
adc
push
mov
mov
pop
aas
stos
lods
push
stos
mov
nop
add
xor
call
push
jae
outsb
xchg
pop
dec
mov
dec
adc
push
cmp
cs
lods
lea
js
adc
jecxz
sbb
addb
xor
add
shlb
insb
sbbb
out
xor
sub
xor
hlt
fadds
ljmp
lds
rcrl
dec
adc
jmp
pop
int
sbb
rclb
je
addr16
mov
dec
or
dec
and
sub
mov
pop
rorb
jle
or
scas
adc
push
inc
loope
loopne
inc
lret
aad
lods
dec
xchg
dec
imul
icebp
arpl
mov
loop
pop
in
pop
add
pop
rolb
int
pop
mov
sarb
xchg
loope
sbb
mov
lods
or
mov
add
aam
mov
or
or
sbb
xchg
loopne
push
cli
aam
loop
inc
jl
adc
int
dec
popa
push
bound
push
mov
dec
add
mov
mov
jae
sbbl
mov
aad
movsl
dec
mov
or
rcrb
into
nop
mov
jae
and
mov
cwtl
cmpsl
into
adc
dec
lret
sar
lret
xor
orb
jp
andl
es
fisttpll
xchg
or
insb
sbbb
inc
cmp
mov
and
adc
stos
inc
cld
test
push
aam
test
mov
data16
mov
push
adc
push
inc
arpl
fdivrl
in
fprem1
inc
push
inc
jmp
mov
lret
ficomps
dec
inc
idiv
in
fsts
fbstp
lods
imul
out
loope
fmul
lcall
adc
fstpt
xchg
fmuls
arpl
push
cmp
jle
dec
xor
jno
dec
popa
jbe
aad
mov
xchg
xorb
fsubl
mov
sub
je
mov
mov
mov
data16
mov
test
add
or
imul
shlb
push
sbb
jbe
pop
std
cld
movswl
sbb
notl
xor
jg
insb
pop
dec
adc
test
cs
subb
mov
or
cwtl
jbe
ret
mov
scas
subb
inc
mov
mov
xlat
enter
call
les
in
push
adc
movsb
rcl
pop
add
stos
add
adc
neg
or
jo
xchg
js
ficomps
lahf
mov
movsb
fidivrl
add
out
mov
rclb
scas
xor
subb
mov
cmc
push
outsb
cmpsl
mov
or
adc
xor
ret
ja
add
pop
dec
inc
add
sub
mov
jo
pop
loop
and
scas
mov
cmp
cmp
push
cld
or
sub
add
mov
mov
movsb
push
arpl
nop
or
ret
cmpb
pop
fiadds
ficomps
mov
adc
pop
inc
pop
inc
adc
add
clc
pushf
and
fistpl
addb
into
pushf
movsb
clc
cld
push
mov
sub
mov
sub
js
xor
ds
pop
ljmp
sarb
mov
rorb
push
or
daa
mov
push
or
mov
add
nop
pop
push
call
sub
jbe
pop
sbb
pop
dec
cmp
mov
push
testb
fnsave
sbb
or
sub
rolb
jo
jb
repnz
and
adc
cmp
test
into
cli
and
insl
mov
mov
sub
jl
or
mov
push
aam
or
pop
add
and
and
cli
out
xor
ja
inc
inc
cwtl
leave
icebp
les
enter
pop
xchg
in
test
add
jae
mov
and
adc
dec
cltd
cmp
adc
mov
out
pop
push
add
cs
insl
outsb
nop
test
and
pop
or
enter
adc
and
and
rorb
dec
cmp
ret
roll
and
shlb
push
inc
mov
inc
imul
mov
fs
mov
das
mov
sub
test
or
sbb
sbb
xchg
ds
pop
ss
or
push
idivb
hlt
inc
cmp
test
mov
icebp
mov
xor
push
lcall
fisubrs
cs
xlat
mov
sar
lock
push
loopne
push
icebp
adc
fwait
xor
shll
scas
loop
push
imul
push
add
ss
xchg
dec
xchg
lret
xor
shl
sub
push
and
jns
sub
scas
or
popf
xchg
cld
nop
ljmp
mov
pop
pop
xor
adc
rcl
and
ss
sbb
sub
mov
inc
rclb
in
popl
pop
jmp
hlt
fmuls
pop
push
inc
jmp
pop
inc
pop
jb
stos
rol
inc
jg
adc
sbb
lods
call
cmp
lds
out
rcrl
cmp
lock
clc
sbb
jbe
decl
sub
fmul
inc
das
into
lcall
pop
add
repnz
in
outsl
icebp
push
mov
loope
out
sbb
sub
cmp
cmp
or
mull
sub
ficomps
add
aaa
sub
andl
hlt
aas
insl
ret
inc
sbb
adc
jne
lods
ficompl
lock
add
mov
or
aad
add
cmp
adc
jge
adc
jmp
scas
test
and
xor
mov
jmp
pop
ffree
push
inc
or
or
js
pop
jmp
negl
cmp
mov
cld
xor
xchg
mov
imul
push
push
mov
or
cli
stos
adc
jl
jp
ljmp
pop
inc
inc
cmpsb
push
push
fsubrs
ds
push
popf
ret
mov
in
inc
xchg
fadds
push
out
lret
inc
sbb
fildl
in
inc
cmp
jle
sub
add
xor
fstpl
test
cmp
push
mov
push
push
in
sbb
dec
cltd
or
mov
cmpsb
les
jg
sub
jno
int
rcl
imul
adc
mov
push
clc
and
fnstcw
mov
dec
jae
mov
jo
or
cmp
adcb
and
adc
adc
jne
pop
sbb
inc
sbb
jo
or
jmp
lret
sbb
push
insb
push
lds
les
mov
fisubs
clc
pushf
jae
jmp
ffree
pushf
cmpl
scas
mov
ja
arpl
add
ja
clc
xlat
sbb
ffreep
sbb
mov
inc
addr16
jg
add
pop
test
imul
cli
pop
ss
xchg
add
int3
lret
data16
xchg
inc
mov
add
std
cmp
or
or
ret
mov
ret
jecxz
popa
lods
push
sarl
cli
xchg
dec
adc
arpl
push
xorb
dec
aam
or
cs
adc
imul
sub
aas
addl
outsl
shl
mov
jl
aas
ja
or
cmpsb
orb
add
mov
fistpll
sbb
call
lcall
mov
mov
ret
sub
ss
xlat
aad
inc
jge
inc
ret
or
jg
push
jns
mov
xchg
insl
jne
fistpl
and
adc
push
xor
xor
clc
inc
inc
add
test
mov
cwtl
mov
insb
push
aad
rcl
push
adc
add
ljmp
test
rcrb
jp
mov
sbb
inc
cmp
mov
iret
test
sahf
loope
adc
sbb
or
inc
fucomi
sub
cs
in
out
lock
test
cmpsl
sbb
out
in
in
or
je
out
push
pop
mov
je
mov
ds
mov
push
dec
mov
iret
ret
xchg
pop
or
popa
inc
setbe
pop
jg
aaa
lret
push
xchg
dec
inc
jns
sbb
dec
xor
pusha
and
pop
inc
inc
mov
mov
add
sbb
or
shl
cmp
stos
cmp
or
jmpw
xor
sub
sub
pop
pop
enter
xlat
dec
and
imul
rcll
xchg
les
ret
bound
xorl
sbb
stc
shll
or
fisttps
ja
pop
loope
sahf
outsb
ret
sub
mov
and
out
repz
cld
lock
push
sub
push
es
bound
sub
and
jb
add
test
inc
cmp
jp
push
shlb
fistps
adc
add
repz
jle
mov
push
sub
lea
jmp
ret
sbb
add
loop
dec
addr16
test
pop
add
stos
and
lds
lahf
fs
fadds
xor
popf
rcl
push
or
dec
movsl
sub
jl
pop
or
adc
lds
bnd
das
loopne
adc
inc
pusha
jbe
orb
dec
mov
mov
jo
jnp
push
ss
push
cwtl
cvttps2pi
pop
ret
push
cs
push
scas
xlat
lds
and
xchg
repnz
ja
push
push
insb
adc
aam
dec
cmp
decb
xchg
es
js
jl
cmpsb
dec
and
jo
sbb
ret
inc
aad
or
int
inc
test
jle
pop
or
xchg
fcompl
lret
cmpb
aas
lea
adc
xor
push
inc
pop
mov
sbb
mov
ds
sbb
lahf
jb
sbb
fidivs
sbb
mov
js
fs
inc
shlb
arpl
inc
scas
mov
mov
dec
inc
add
adc
dec
adc
xchg
mov
mov
clc
jne
push
scas
loopne
push
test
jl
nop
ds
mov
inc
cmc
test
dec
hlt
mov
ret
xlat
ret
aas
int3
inc
cwtl
je
pop
adc
icebp
push
mov
or
inc
rcrb
repz
fwait
in
push
pop
mov
adc
insb
push
lock
add
mov
stos
pop
adc
push
push
cmpl
mov
add
push
mov
lahf
mov
inc
xlat
hlt
jo
test
or
daa
aam
cwtl
pop
dec
aas
test
mov
test
ja
cmpsl
jle
or
jmp
lret
cli
mov
adc
sbb
stos
andb
push
adcb
adc
mov
pop
mov
mov
imul
push
insb
test
gs
movsl
test
shrl
cmp
cmp
repnz
ret
sahf
and
sar
adc
fcoms
or
rol
lds
jnp
push
mov
mov
ja
sbb
mov
shr
mov
fisubrl
push
lods
push
xor
add
mov
stos
xor
mov
dec
in
aam
and
test
push
test
jg
mov
imul
adc
jns
movups
jge
inc
adc
into
sub
divb
aam
imul
xor
mov
cld
popa
push
pop
jae
ljmp
inc
sbb
cmpb
das
lcall
mov
xchg
sub
pop
adc
inc
loop
pushf
pop
inc
fisttpll
xor
adc
lock
add
sub
test
movsl
out
dec
into
lret
test
dec
push
cmp
loop
test
shll
inc
fsubs
mov
adc
dec
jmp
cmpsl
mov
insb
imull
add
cmp
in
insb
push
sub
adc
call
dec
rorl
pop
add
jg
jmp
xor
push
shl
push
mov
cmp
push
arpl
aaa
out
push
aas
mov
loop,pt
push
add
inc
xor
test
mov
mov
push
iret
mov
fs
test
jmp
xchg
movb
sbb
daa
and
jno
and
push
push
lods
xchg
jecxz
and
fdivrp
jns
lock
xlat
sbb
ret
push
cld
cmp
jno
mov
push
adc
xor
mov
insb
out
xchg
xor
jns
pusha
cmp
mov
cltd
aas
leave
jge
loope
mov
out
adc
jg
sub
js
push
cmp
mov
ljmp
sarl
movsb
cmc
int
cltd
pusha
jl
xchg
nop
xchg
dec
stos
outsl
adc
lret
push
push
int3
ret
sub
das
inc
cltd
ror
jmp
mov
and
inc
std
mov
movsl
or
lret
jb
mov
ret
push
mov
mov
setnp
rorb
pop
fiadds
pushf
xlat
imul
fimull
mov
jl
adc
or
and
sahf
mov
stc
ljmp
pusha
or
icebp
test
addr16
lds
cmp
mov
ficompl
aaa
add
int
fldt
out
movsl
movsl
popl
test
shlb
out
mov
and
or
inc
lods
xor
imul
and
into
pop
aam
popl
cwtl
dec
inc
in
ds
test
xlat
mov
mov
pop
int3
push
adc
dec
or
aam
push
and
nop
adc
mov
lods
pushl
sbb
or
iret
fsts
inc
push
add
dec
sbb
sbb
loopne
and
and
pop
sub
fdivs
pop
push
test
testl
inc
xor
and
out
push
push
mov
out
push
mov
stos
movsb
scas
xlat
test
sub
cs
pop
mov
ds
push
mov
jo
sarb
inc
inc
orl
adc
pop
jg
jns
inc
cmp
test
repz
jp
pop
cld
je
cmp
or
scas
stc
lods
daa
xor
cmp
dec
sub
bound
jbe
inc
arpl
add
stos
cmp
clc
xchg
les
sbb
mov
xor
mov
test
cmc
out
mov
and
xor
xchg
and
push
xchg
push
and
popa
add
mov
adc
push
out
jp
nop
mov
dec
ss
pop
cmp
mov
xor
pop
ljmp
jle
in
inc
jl
pop
insl
mov
jmp
pop
mov
test
shlb
inc
jp
in
xchg
lahf
inc
mov
pop
cmp
inc
push
imul
fnstenv
mov
leave
add
scas
jl,pn
lds
mov
cmp
in
and
xchg
xor
sub
mov
mov
ljmp
pop
mov
push
pop
sbb
das
pop
or
pop
mov
mov
test
mov
xor
pop
xchg
mov
push
xor
arpl
sbb
sahf
push
push
dec
pop
decb
inc
push
cmp
dec
pop
dec
inc
and
push
adc
gs
jg
loopne
sbb
push
in
or
xor
shll
loope
mov
or
inc
cmpsb
mov
fst
xor
test
out
dec
gs
add
arpl
mov
fdivrl
lds
aas
cmp
cs
sarb
je
in
hlt
es
sbb
cld
movhlps
adc
cwtl
inc
pop
pop
sbb
mov
fildll
pop
scas
lods
sub
ljmp
mov
inc
pop
xorb
adc
xor
xor
mov
mov
sahf
cltd
cmp
nop
xchg
xchg
aaa
xlat
dec
add
call
dec
mov
testl
test
push
fstp
cmp
arpl
jb
sbb
cmp
jne
inc
sbb
outsb
or
std
js
icebp
outsb
mov
subb
lahf
js
adc
rcl
lock
roll
xchg
mov
pop
mov
xchg
or
rcl
out
popa
inc
sub
xor
mov
lods
aad
fadds
pop
xor
test
outsb
xor
stc
std
jl
insl
ljmp
inc
lret
inc
xchg
mov
dec
jge
add
out
jle
popa
and
xor
sbb
pushf
jl
je
pop
mov
in
dec
in
ljmp
movsb
ds
cmp
addr16
fdivrp
imul
aam
adc
bound
out
and
mov
sbbb
mov
pop
xchg
xor
jne
popf
inc
loope
cmp
stos
clc
icebp
jae
push
xchg
pop
xchg
fcomp
bound
pop
outsb
add
incb
pop
in
fsts
push
adc
fidivrl
outsb
cmc
or
ret
data16
xchg
inc
les
repz
aas
pop
stos
pop
scas
inc
les
scas
lret
rcll
xor
adc
mov
cmp
lret
dec
mov
sbb
xchg
sti
sub
aaa
xor
and
xor
sbb
and
ljmp
cmp
popa
subb
cli
sbb
sub
test
cmp
push
pop
addr16
jnp
outsb
call
in
jmp
add
mov
mov
es
cmp
andb
lret
scas
lahf
call
lock
mov
mov
pop
xor
or
and
jb
fistl
les
psrld
adc
and
add
movb
lcall
ss
out
push
pop
cs
or
inc
in
xor
dec
mov
lcall
icebp
pop
mov
jns
dec
orb
insl
arpl
jle
sbb
mov
dec
inc
push
fs
lahf
test
push
jecxz
mov
repnz
jo
jnp
test
pop
push
imul
push
cmp
mov
nop
inc
cltd
cld
xor
jae
or
rolb
sbb
add
mov
inc
movsb
inc
shlb
pusha
rorl
mov
fdivrs
test
cli
inc
xor
aaa
pop
sti
incl
sti
pop
sbb
out
pop
pop
ds
mov
jmp
cli
push
adc
jb
mov
or
xchg
mov
inc
mov
std
mov
loope
fcoms
outsb
push
pop
mov
jmp
sub
and
pop
shlb
ret
pop
mov
les
xor
push
dec
rcrl
clc
std
dec
aam
gs
pusha
or
shrb
cli
nop
cmp
cltd
out
js
arpl
arpl
rclb
ret
mov
push
push
dec
jmp
adc
insb
xchg
mov
sbb
out
push
int3
pop
ss
stos
push
add
lret
cmp
jnp
xchg
add
pop
outsb
or
push
ret
addr16
test
push
or
fwait
mov
arpl
dec
int
push
fsubl
or
sub
das
and
sbb
mov
shrb
in
je
jmp
or
fistpl
pop
jmp
nop
xor
jg
fs
sbb
mov
mov
jns
test
out
dec
and
ds
lahf
add
dec
ss
rclb
dec
xchg
mov
lea
lods
adc
mov
inc
stos
mov
ss
push
xor
inc
cmp
jo
iret
mov
push
push
js
test
adc
sbb
dec
ret
cmc
or
jae
xchg
mov
mov
mov
iret
adc
in
sbb
add
or
jl
and
bound
push
outsb
sahf
ret
mov
jg
sbb
orb
lea
test
je
andb
sti
icebp
shlb
adc
inc
and
or
dec
adc
cwtl
mov
push
jb
jle
sub
inc
fwait
cmpsb
lahf
rolb
sub
or
dec
jmp
cld
ret
lds
jbe
push
pop
es
and
ds
das
adc
or
inc
in
xor
xor
xor
mov
icebp
dec
ljmp
or
sub
sub
xlat
push
mov
sub
loope
or
xor
lds
push
inc
pop
ret
pop
nop
jecxz
xchg
mov
mov
ret
inc
pop
mov
test
xor
and
mov
mov
jbe
mov
fisubl
sbb
je
mov
adc
adc
mov
mov
push
sub
sbb
xor
lcall
mov
aam
dec
pushf
jl
lds
inc
ljmp
aam
ss
mov
xchg
lret
mov
shl
cmp
mov
cmp
out
cmp
add
dec
inc
push
lea
adcl
repz
add
adc
push
out
xor
in
mov
jmp
stos
push
cmp
adc
divb
add
js
test
cmovp
and
add
pop
loopne
hlt
in
jne
inc
jne
jge
pop
push
cmp
xchg
jnp
push
frstor
inc
arpl
aad
hlt
imul
dec
pcmpeqd
lret
sub
mov
mov
icebp
push
loope
je
xorb
clc
xor
or
jp
pusha
mov
loope
cwtl
int3
mov
out
divl
fisttps
ret
out
stos
cmpb
cmc
test
lret
loop
sbb
daa
stos
hlt
fldt
fwait
jo
push
mov
icebp
and
into
and
mov
add
cmp
nop
mov
daa
or
jecxz
add
mov
cmp
sbbb
jno
dec
sbb
and
jg
xchg
pop
adc
scas
mov
xchg
movsl
xchg
mulb
push
mov
clc
shlb
cmp
mov
inc
jmp
pop
stos
ret
test
scas
sahf
in
sar
push
ds
sbb
sbb
scas
das
mov
cmp
orb
xchg
into
push
loope
push
idivl
jg
jmp
jmp
push
test
xor
mov
cmpsl
cmpsb
movsb
aad
inc
imul
cmp
jo
mov
adc
or
add
add
fstpl
lret
cltd
pop
sbb
pop
jb
fsts
push
cmp
imul
xor
stos
add
mov
push
sbb
inc
cltd
xchg
xor
push
xchg
out
add
push
mov
adc
ffree
int3
je
xchg
mov
mov
aaa
adc
xor
scas
hlt
inc
in
mov
stos
adc
inc
std
push
mov
stos
mov
fstpt
cmp
fldl
sub
inc
es
sahf
push
pusha
ret
ds
jp
cmp
xlat
jecxz
cmp
fcoms
outsb
xchg
outsl
push
bound
or
lods
adc
cmp
mov
xlat
sahf
fdivl
imul
and
jl
lods
xchg
loope
out
push
pusha
das
pusha
cmp
loop
or
and
fdivrl
xchg
push
sub
pop
arpl
mov
adc
dec
fs
sub
pop
sub
mov
in
pop
xor
mov
push
xor
iret
addl
jne
daa
lock
jl
pop
push
or
sbb
std
fwait
sub
mov
push
out
xlat
in
ljmp
fcoml
stos
cli
jne
call
loop
xor
pop
sahf
or
hlt
or
dec
sbb
cmp
xor
add
and
mov
push
and
jle
sbbl
xor
dec
mov
sbb
cld
mov
es
sbb
jbe
mov
fstps
inc
inc
test
rorl
and
nop
or
mov
pushf
add
dec
popa
adc
xchg
cli
cmp
inc
mov
out
mov
sahf
mov
inc
sbb
les
gs
ds
sub
insl
push
rcr
cmp
mov
mov
shl
and
sbbb
mov
and
pop
decb
daa
imul
sti
das
pop
iret
pop
lock
fldcw
xchg
mov
into
xchg
sbb
jns
dec
fdivrs
add
push
cmpsl
push
iret
jne
ret
aaa
or
sarb
cmp
fcmovnbe
and
test
enter
rdmsr
call
adc
add
stc
aaa
jge
mov
dec
adc
or
popf
lock
xorl
jl
dec
sbb
lcall
mov
mov
inc
jo
push
xor
inc
shll
xchg
adc
es
js
mov
cmp
inc
inc
inc
lock
out
in
je
aad
cmp
cmp
addr16
xchg
cmpsb
stos
loope
aas
jo
je
pushf
cltd
sbb
push
aaa
call
adc
in
cmpsb
add
pop
iret
inc
lods
data16
loopne
dec
fwait
jg
xchg
pop
sub
cltd
loopne
and
pop
imul
daa
adc
mov
out
jo
push
loopne
lods
and
int
sbb
stos
outsb
sti
cwtl
xchg
dec
pop
popa
stos
and
lahf
xchg
push
loopne
js
xor
push
dec
push
xor
jns
sbb
lcall
push
cmpsb
adc
sub
je
int3
cltd
inc
loopne
add
sbb
mov
ja
push
push
push
add
jno
rsqrtps
in
jno
sbb
xor
lods
and
jbe
stos
je
andb
ljmp
stos
sbb
jecxz
cmc
pop
pop
int3
les
dec
jle
jmp
ja
arpl
sbb
sbbl
push
shl
xchg
das
cli
test
aas
outsl
cmp
sub
mov
dec
bound
sti
pop
push
push
push
stc
cltd
ret
leave
out
popa
int
aas
cmp
push
dec
push
sub
clc
mov
loope
push
xor
pop
pop
ret
pop
in
pop
mov
subb
mov
lods
dec
sub
adc
xor
lcall
sbb
or
mov
push
xlat
sub
mov
fwait
jge
loopne
insl
shrb
iret
cmp
add
rcrl
pop
filds
add
mov
insl
lods
xchg
rcl
mov
cmp
je
subb
loope
es
hlt
add
cs
pusha
jle
pop
cmp
sub
popl
iret
mov
xlat
sahf
cmp
in
and
sbb
sub
dec
sub
mov
mov
fcomps
test
ret
push
scas
imul
lods
fildl
inc
push
icebp
or
mov
push
fbld
sub
cmp
push
jmp
les
jle
jno
jecxz
cltd
push
or
outsb
sbb
mov
lds
sub
ds
shrl
daa
fidivrs
xchg
enter
jmp
test
xor
xor
cmpsb
lret
mov
push
hlt
mov
mov
mov
aam
mov
push
shrb
jno
loope
ds
cmp
in
aam
mov
pop
es
dec
push
sbb
test
call
xor
jmp
add
out
icebp
sbb
dec
xor
xchg
inc
nop
pop
jle
repz
jle
dec
mull
lea
sub
loopne
inc
dec
xor
and
fisubrl
pushf
ljmp
arpl
hlt
inc
sbb
lea
pop
out
cwtl
xchg
shlb
mov
sub
shl
sti
mulb
sbb
inc
or
sbb
hlt
dec
xlat
nop
pop
pushw
sbbl
insb
inc
test
pop
icebp
xchg
lcall
push
push
negb
lock
and
jne
lods
shll
js
loopne
cmp
push
shld
shrb
sub
fidivs
shlb
cmc
pop
mov
daa
add
jo
mov
mov
xchg
dec
aad
lods
push
lret
inc
scas
sti
dec
jg
xor
bound
xchg
xchg
xchg
dec
mov
scas
or
cltd
xchg
shlb
xor
and
jg
and
mov
movsb
inc
ja
sbb
mov
scas
jns
xorb
pop
mov
adc
push
lock
or
pop
and
and
test
mov
pop
pop
mov
test
int
mov
push
push
or
sti
ret
ret
sub
out
cs
sub
inc
test
sbb
and
out
mov
cmp
fiaddl
mov
pop
ss
pop
push
add
add
inc
fstsw
mov
outsb
mov
cmp
sbb
je
or
test
pop
ljmp
repnz
push
add
cmc
cmp
scas
test
test
lock
mov
sbb
pop
sti
inc
cmp
pushl
lea
cmc
push
daa
shll
xchg
pop
xchg
out
in
nop
mov
mov
inc
adc
cmpsb
aam
scas
mov
mov
mov
sub
push
dec
lcall
loop
lret
adc
add
inc
push
xchg
jo
mov
repnz
pop
mov
cmp
push
js
mov
xorb
add
jno
lcall
xchg
fistps
mov
adc
test
sahf
repz
fimuls
add
dec
jl
add
ret
adc
das
ds
xchg
mov
aas
movsl
pop
jp
lret
sbb
cmp
les
xor
jne
xor
mov
lahf
frstor
lods
imul
and
xchg
inc
pop
sub
add
push
dec
jmp
adc
rol
jne
imul
movsb
and
cmp
mov
push
cs
pop
jbe
or
std
rol
jmp
insb
ret
and
jo
nop
stos
mov
jne
lret
mov
out
std
xor
outsl
loope
xor
fwait
cmp
mov
subb
jns
scas
orl
or
adc
dec
adcl
sahf
sub
pop
jnp
enter
incl
hlt
xor
sarl
loopne
pop
mov
mov
data16
rclb
mov
cmp
icebp
dec
stos
stos
aad
xchg
mov
pop
mov
sub
mov
js
push
roll
mov
push
xor
dec
mov
adcb
inc
iret
hlt
cltd
mov
int
push
adc
loope
loope
jmp
mov
fcmovb
pop
mov
push
imul
adc
xlat
loope
ja
xor
dec
mov
mov
cmc
stos
xor
mov
sub
xor
faddl
cmp
fimull
aam
inc
xor
loop
mov
pop
lret
or
in
daa
xchg
add
jmp
gs
jne
mov
xor
or
aaa
inc
mov
sbb
fisttpl
mov
dec
in
push
sahf
divb
push
sub
sbb
xor
out
into
sbb
nop
or
sub
add
add
mov
mov
jae
rcrb
out
sbbb
mov
sahf
jne
inc
scas
push
outsl
cmpsb
fsqrt
or
lock
xchg
jne
fstpt
add
rol
sub
cmp
aas
mov
jecxz
lret
jo
repz
add
shl
je
mov
lds
es
push
add
xchg
sbbl
dec
aam
pushf
push
mov
shrb
xchg
test
xor
mov
xchg
inc
sbb
scas
and
mov
pop
cltd
or
jp
sbb
fstps
xor
pusha
aaa
popa
mov
sbb
repz
mov
jge
or
or
cmp
add
mov
stc
int
jl
leave
nop
adc
ret
inc
sbbb
inc
push
mov
jo
test
push
in
inc
push
insl
sub
test
fstpl
mov
add
lods
cli
push
add
test
hlt
cmc
jno
add
mov
cmpsb
sub
test
fsubrl
xor
test
xchg
js
or
pop
or
sub
add
cmpsb
fidivrs
or
inc
loop
jmp
xchg
mov
icebp
insb
aam
mov
push
and
or
xchg
sub
mov
mov
pop
aad
sbb
sbb
pop
sub
and
std
inc
jae
test
or
pop
scas
adc
shrl
cmp
add
aam
mov
sub
inc
es
xorl
sbb
and
mov
lahf
and
sti
mul
popa
test
add
dec
mov
push
jo
loopne
insb
jns
popa
in
repnz
dec
ss
pop
std
adc
or
add
rcrl
mov
xorb
popf
sub
lock
sbb
sbb
mov
inc
scas
push
push
jae
lock
mov
jmp
insb
ds
subl
pushf
out
push
test
loopne
xchg
lea
shrl
cmp
push
mov
fwait
inc
jp
xlat
mov
aad
jns
lea
cmpsl
lods
pop
notl
ljmp
sbb
sub
inc
lcall
inc
rcll
mov
out
je
ret
lods
mov
rclb
or
sub
sub
nop
icebp
fsubrs
arpl
ss
imul
addl
movl
cld
pop
mov
sbb
or
scas
faddp
inc
mov
test
jp
ret
mov
pop
das
lcall
divb
inc
mov
jle
xor
shrb
insb
pusha
popf
dec
icebp
lret
shll
lret
stos
push
xchg
addr16
mov
adc
sbb
add
sub
adc
lock
lea
stos
arpl
loop
aad
jmp
ret
stc
xor
das
mov
pop
adc
or
jmp
loop
push
mov
fwait
add
add
dec
imul
in
adc
sub
xchg
cmp
or
into
fisubrl
lods
sbb
pop
aam
stos
add
roll
add
pop
mov
sbbl
insb
js
inc
call
sbb
ret
push
aad
mov
push
xor
enter
mov
push
pop
aad
push
dec
jle
dec
test
inc
aam
jle
sbb
fistpl
push
cmp
jnp
imul
mov
cmp
testb
movsbl
sub
insl
push
xchg
sub
or
mov
adc
ds
gs
lea
sahf
push
call
repnz
adc
lea
adc
jns
push
jmp
mov
movb
add
ficoms
cmp
sbb
loope
jne
add
cmp
movsl
test
adc
pop
mov
das
or
mov
sub
or
and
les
test
dec
fdivs
inc
out
sbb
pop
pop
pop
dec
ret
add
cmp
mov
push
in
in
popl
xor
mov
jmp
rorb
pop
mov
jno
fisubs
dec
pop
aaa
rcll
push
outsl
mov
push
stos
sbb
fidivrs
add
insl
push
and
js
jo
xor
sbbl
add
loop
test
pop
mov
out
aaa
jno
mov
loope
mov
jo
loopne
fwait
pop
mov
mov
test
xor
js
mov
cmpsb
pusha
in
outsb
mov
js
xor
sub
imull
iret
inc
adc
sub
dec
mov
and
adc
out
addr16
push
nop
sub
ret
sbb
shrl
in
jle
push
dec
test
loopne
cmp
ss
or
or
or
cmp
cmp
cltd
test
jnp
and
jne
mov
push
dec
roll
mov
mov
out
pop
mov
test
pop
mov
pop
push
aas
jmp
aad
mov
xchg
push
mov
iret
rcll
bound
scas
jp
jle
xlat
hlt
mov
mov
mov
imul
inc
pop
cmp
xor
sbb
lea
aas
adc
mov
jp
insl
dec
jmp
inc
sbb
sbb
mov
or
mov
jbe
cmp
dec
loope
bound
add
mov
sbb
or
in
xor
or
daa
jne
fildll
lock
ss
push
pop
lods
stos
mov
adc
adc
adc
cmp
lods
adc
xorb
or
enter
notb
dec
lock
das
adc
adc
shll
push
push
cmp
or
mov
jl
pop
imul
or
cltd
fcompl
in
movsl
sub
cmp
lea
loop
mov
in
or
dec
add
mov
mov
xchg
mov
pop
jb
lds
mov
loope
aas
leave
sahf
movsl
ljmp
gs
jb
pop
pop
pop
sarb
fnstsw
clc
loop
push
dec
sahf
mov
xchg
xchg
or
jl
add
loopne
sahf
mov
test
jne
insb
mov
loop
pop
rcrb
push
xchg
xor
std
jle
es
push
mov
js
mov
fmulp
sub
cmp
addr16
add
ljmp
pusha
and
or
push
xor
xchg
or
pop
sub
adc
std
sahf
insl
lea
push
test
lahf
sub
jmp
loop
mov
and
fs
test
add
shlb
mov
mov
sub
push
cmpsl
pop
ret
push
pusha
add
mov
cwtl
xchg
mov
cmp
pop
aad
sahf
je
loopne
cld
sbb
sub
test
mov
mov
xchg
scas
push
nop
sar
imul
add
insb
dec
inc
loopne
stos
pop
mov
jno
ss
mov
das
add
inc
dec
es
adc
push
enter
pop
push
pop
dec
mov
sbb
andb
cld
icebp
test
cmp
pop
adc
sbb
adcl
sbb
movsb
sbb
xor
scas
je
push
pusha
loopne
jp
arpl
pop
enter
or
inc
hlt
popa
inc
notb
mov
ret
popa
push
addr16
std
push
mov
cmp
inc
cmp
aam
sbb
xlat
add
insl
adc
int
sbb
cmc
jo
sub
sbb
mov
mov
dec
ret
sbb
pop
pop
push
mov
lcall
frstor
shll
mov
cmp
inc
dec
add
mov
adc
loopne
hlt
fistl
aaa
dec
push
pop
sbb
inc
rolb
enter
jnp
or
into
sbbb
dec
mov
push
lahf
mov
daa
dec
jl
std
pop
and
push
sarl
ret
dec
mov
mov
cltd
sahf
push
xchg
push
scas
push
mov
sqrtps
cmc
xchg
aas
testl
adc
sbb
sub
pop
sarl
xchg
cld
in
cwtl
adc
mov
jbe
xor
aad
shlb
loop
pusha
aam
ljmp
lds
fdivs
les
movl
dec
dec
dec
mov
mov
pop
scas
xor
jne
mov
mov
cld
jne
lock
mov
jae
or
pop
leave
stc
fldt
cmp
and
pop
sbb
loop
jbe
mov
inc
shr
and
lock
dec
jnp
ret
push
jl
out
and
add
dec
or
inc
sbb
ljmp
dec
cld
ds
ret
movq
dec
lods
jmp
pop
in
xor
movsb
mov
pop
xchg
ljmp
push
js
adc
dec
stos
jle
adc
xchg
lret
inc
repz
pop
xor
ret
push
outsb
xchg
mov
jg
cmpsb
mov
xchg
fsts
mov
inc
and
lds
add
inc
inc
les
mov
aad
je
fwait
hlt
xor
inc
add
cmpsl
daa
add
adc
sbb
sbb
lea
movsb
adc
xor
loopne
lods
sbb
jge
arpl
ret
aam
orb
test
xchg
adc
hlt
popf
out
aaa
jne
cmp
adc
jl
jns
sub
out
fwait
out
jmp
dec
shrb
push
and
enter
movhps
clc
inc
dec
orl
fildll
push
cmp
dec
std
stc
xor
dec
xor
cld
sti
xchg
and
imul
push
jge
push
ja
push
lret
call
inc
jl
icebp
popf
aaa
test
mov
aaa
push
mov
incl
scas
es
xor
daa
stc
jo
pop
dec
jns
js
test
adc
outsl
add
popl
call
leave
es
or
cmpsb
push
inc
push
insl
out
xchg
xor
out
xchg
ljmp
jge
sti
mov
add
mov
inc
push
cmp
out
inc
jnp
xor
mov
shlb
add
sbb
ret
mov
cltd
das
add
inc
jnp
add
inc
cli
movsb
jbe
call
cltd
xchg
mov
pop
mov
in
test
xor
in
mov
call
xor
adc
lea
test
rolb
xchg
aas
sub
lock
adc
stos
xchg
js
fisttpl
popf
sbb
pusha
add
stos
or
loop
pop
sub
push
mov
test
scas
or
jecxz
addr16
test
lods
sub
jp
xor
ret
and
add
lahf
mov
mov
dec
dec
repz
add
icebp
pusha
push
add
fidivs
inc
push
cmp
xchg
aas
scas
pop
mov
xor
mov
push
xor
mov
iret
mov
loopne
sar
enter
xor
shrb
mov
sti
jmp
mov
fmul
mull
roll
cmpsl
or
addr16
fidivl
jo
and
dec
adc
inc
ja
mov
imul
xor
adc
cmc
aam
fwait
and
add
fbld
out
add
pop
pop
xor
es
or
cmpsb
xor
rdmsr
scas
and
or
cli
inc
ss
sub
arpl
push
xor
xlat
test
daa
je
mov
ja
dec
dec
xchg
rolb
sub
mov
add
loope
nop
pushf
lock
pop
stos
es
xor
sub
and
jecxz
sbb
movsl
gs
and
addr16
cli
sbb
loop
hlt
int3
leave
mov
sub
and
jge
pop
repnz
cmp
push
mov
cmp
mov
sub
cmpsb
jbe
push
test
mov
mov
sbb
mov
push
test
add
stos
jb
jns
push
daa
mov
movsl
inc
rcll
jmp
and
xor
adc
adc
shll
and
rcrb
out
push
jp
pop
cmp
fbld
lcall
mov
sbb
popa
add
add
outsb
sub
mov
inc
cmp
mov
movl
xchg
les
adc
push
or
xor
ja
cwtl
dec
push
testl
push
addl
or
cmp
xchg
vpunpcklwd
mov
aad
aas
rcrb
inc
push
jecxz
fisubs
dec
dec
dec
add
insl
inc
pop
pminsw
cmp
js
subb
out
stos
je
xor
or
enter
xor
xchg
sub
jl
pushf
and
xchg
aad
xor
js
add
nop
loop
fnstcw
rcl
in
cmovp
pop
adc
add
add
and
daa
lock
cmp
add
in
fwait
mov
push
ret
cmovg
xlat
jbe
fs
push
pop
mov
mov
and
out
sbb
sub
movsb
dec
mov
je
imul
clc
sysenter
out
jo
or
xchg
adc
dec
pop
shl
test
fistl
sub
cmp
mov
sub
push
mov
jnp
mov
ja
xor
xor
data16
outsl
cmp
mov
jne
adc
dec
shlb
inc
mov
or
ljmp
mov
add
mov
xor
movl
pop
in
out
js
push
scas
adc
or
xchg
jmp
cli
add
inc
in
dec
scas
enter
aam
clc
push
xor
repz
adc
fcomps
inc
mov
push
sbb
sbb
xor
sbb
negb
arpl
pop
fstps
mov
mov
icebp
sub
jo
sbb
inc
test
shll
pop
ffreep
out
mov
pop
inc
rcrb
scas
or
mov
mov
lret
ja
inc
dec
jno
jp
bound
insb
and
pop
and
dec
aaa
mov
add
jno
dec
shr
pop
popf
jecxz
xlat
add
add
adc
pop
fsts
xor
sub
cmp
push
and
cwtl
int3
xor
or
mov
cli
loopne
push
sbb
imul
push
sbb
inc
and
loope
mov
or
xchg
aaa
pop
jp
mov
mov
cmovo
xchg
add
sbb
fucomp
subl
lock
dec
xchg
xor
cmp
bound
fidivrs
dec
and
jge
or
daa
jecxz
mov
xor
sbb
lahf
cmp
lds
fldcw
in
push
sbb
xchg
jo
push
add
insb
mov
scas
fstpl
and
xchg
pusha
pop
outsl
movsb
cltd
xchg
dec
int3
or
inc
jnp
nop
cmc
mov
xchg
ret
xor
mulb
mov
jno
imul
cltd
movsl
mov
sub
add
loop
mov
mov
test
jo
js
and
adc
mov
lock
cmp
shrb
add
call
pop
cmp
fldl
ret
dec
mov
addb
data16
inc
dec
outsl
xor
iret
push
or
and
or
push
das
test
outsb
add
inc
fiadds
sbb
cmp
imul
insb
sarb
jle
inc
gs
jne
stos
out
adc
add
divl
inc
jmp
cmp
test
or
rol
push
pop
insl
adc
sahf
dec
xor
fiaddl
mov
or
push
inc
int
mov
aas
icebp
or
pusha
dec
add
shll
push
daa
cs
pushf
outsl
inc
dec
push
dec
mov
jmp
add
push
mov
mov
mulb
repz
and
jae
pop
shl
cmp
inc
dec
inc
sub
mov
call
das
lods
inc
inc
add
test
in
shl
jo
repz
xor
or
clc
mov
mov
rcll
insb
push
add
push
or
pop
out
adc
pop
pop
clc
cli
out
mov
mov
test
mov
adc
ret
fimull
sub
push
adc
add
jnp
mov
sti
dec
inc
push
cmp
adc
adc
lock
and
unpckhps
or
cmp
mov
mov
adc
push
enter
mov
xor
adc
mov
stc
cmpsl
mov
push
ret
bound
sub
ret
outsb
jnp
mov
or
dec
sub
addr16
pop
jl
mov
push
inc
out
cld
mov
lret
data16
ret
xor
inc
sbb
mov
outsb
inc
inc
xor
sbb
andl
int
push
das
adc
xchg
das
loop
mov
adc
icebp
dec
loopne
ja
int3
ss
mov
push
leave
pop
push
mov
lock
lock
imul
ret
sbb
ret
mov
and
aam
aas
decl
in
lds
xlat
xchg
lods
lret
adc
enter
push
push
cmp
dec
sbb
femms
pop
adc
push
outsb
jle
cmpsl
mov
push
mov
lea
mov
cs
dec
or
add
xchg
lret
push
xchg
call
mov
pop
loope
and
cmp
clc
cmp
add
bnd
ret
push
lods
and
add
fsub
cmp
sbb
inc
push
je
dec
cmp
push
mov
sbb
cmpsb
sahf
mov
or
dec
js
add
cmp
xor
jecxz
mov
cmc
test
orl
scas
rclb
pop
mov
pop
push
stos
cwtl
movsb
or
jmp
jnp
fisubl
pushf
mov
jecxz
jmp
loop
mov
stos
faddl
dec
clc
fisubl
dec
jo
fsub
shll
add
movl
push
sbb
fdivrs
test
and
mov
aas
pop
imulb
dec
sbb
mov
packsswb
mov
ret
sbb
sub
scas
enter
shrb
shrb
popa
cwtl
mov
ret
mov
shl
adc
jg
cwtl
jl
call
push
xor
adc
mov
fwait
scas
and
inc
in
sub
lret
or
daa
ds
ja
movsl
lahf
movsb
jno
sub
pop
push
push
or
adc
lds
movsb
cmp
dec
clc
inc
cwtl
xchg
iret
nop
adc
test
adc
sbb
or
in
cmp
out
mov
push
xor
xor
push
push
xor
dec
push
dec
fstp
movl
xchg
mov
sti
dec
mov
pop
adc
scas
test
lret
pusha
inc
nop
mov
js
stos
xor
jge
notb
sbb
add
adc
pusha
fidivrs
mov
arpl
bnd
lds
pop
stc
fs
sub
mov
out
push
cmp
mov
sbb
adc
imul
loope
jae
jno
jmp
das
call
insb
rcll
ret
movsb
push
xor
lock
andl
loope
jo
lcall
adc
xchg
rorb
cli
mov
mov
aam
lods
pushf
ljmp
mov
shlb
ret
cmpsl
pop
mov
sbb
sbb
mov
adc
cmp
mov
inc
insb
test
scas
das
decb
fwait
lock
inc
jae
pop
cmp
push
push
add
jns
pop
or
push
repnz
int
rclb
add
jmp
insl
cmp
shlb
push
rorl
ja
adcl
jbe
sbb
mov
jmp
mov
adc
nop
inc
lea
jb
jnp
pop
mov
inc
or
jecxz
stos
nop
push
loopne
sbb
cltd
add
je
xchg
push
dec
push
sub
adc
dec
dec
out
out
pop
rcr
stos
inc
pop
ds
push
setg
mov
push
sbb
cmp
push
add
cs
out
jnp
inc
adc
sub
into
in
loopne
mov
lret
mov
int
add
fdivrs
sti
mov
mov
add
mov
adc
mov
or
add
ficoml
or
loop
cmp
popa
and
pop
jmp
lock
rcr
outsb
mov
cld
cmp
add
ss
gs
push
sub
pop
lock
mov
jl
andb
mov
xor
adc
jnp
mov
test
inc
adcb
loop
lods
pop
scas
push
and
aam
jmp
sub
sbb
inc
movsl
shrb
mov
test
or
sarb
push
data16
repz
xchg
xor
icebp
lret
push
sub
adc
fimuls
jnp
repz
inc
cltd
mov
fsubs
fistpll
aad
movsl
xchg
jp
and
imul
or
rcrl
ror
xchg
sbb
add
xor
mov
mov
and
ret
jle
pop
ds
cmpsl
insb
imul
shrb
mov
jl
fsubp
push
repnz
mov
and
and
jbe
push
movsl
add
adcl
call
dec
adc
popa
scas
dec
sbbb
jg
loope
pop
add
sbb
push
lods
rolb
xchg
je
or
inc
data16
aad
iret
mov
cmp
push
mov
in
imul
push
mov
dec
shlb
cmp
insb
mov
mov
das
xchg
out
cmp
pop
cld
les
fldt
mov
je
in
sbb
out
ret
cmp
sbb
in
sbb
push
lods
mov
push
mov
fadds
or
and
lods
mov
jns
cmpsb
xor
xchg
nop
sbb
pop
jbe
or
mov
adc
insb
xchg
mov
adc
pop
push
sbb
imul
popf
push
fwait
ret
pop
std
lahf
push
cmp
or
adc
les
xor
loopne
mov
aad
adc
mov
or
lds
mov
add
add
mov
sub
mov
mov
mov
inc
jnp
imul
imul
xchg
xor
fcoms
leave
and
sub
aad
sub
cmp
and
ret
popf
jbe
sbb
pop
push
dec
cmpsl
cmp
enter
mov
pop
cmp
pop
pop
loopne
or
push
xor
xchg
pop
sbb
push
cmp
leave
or
shlb
adc
pusha
outsl
outsb
rorl
inc
sbb
xchg
aam
dec
mov
lock
stc
je
shll
icebp
fwait
jp
inc
cs
mov
and
jno
adc
push
pop
scas
bound
adc
int3
mov
xor
rclb
jne
roll
xchg
cmp
sbb
fidivrs
jl
mov
push
scas
shlb
or
lret
movsb
lahf
enter
mov
movsb
shrl
and
jecxz
pop
adc
int3
ret
int3
xchg
push
sub
dec
dec
ror
js
cmpsb
push
mov
lahf
xor
mov
pop
ret
mov
or
jecxz
or
gs
inc
js
mov
mov
in
movsb
sub
adc
mov
pop
test
dec
mov
push
lret
xor
loope
outsb
jns
pop
pop
jbe
lock
sub
stos
sbb
out
xorb
mov
gs
pop
test
jbe
leave
int3
lock
adc
xlat
scas
loopne
icebp
push
push
sbb
fildll
mov
inc
and
addw
repnz
cmp
addl
push
push
cmpsl
pop
or
mov
push
fdivrs
call
adc
jo
mov
inc
jnp
add
adc
sti
fildl
cmp
mov
or
gs
dec
stc
xchg
inc
or
stos
ss
or
scas
dec
arpl
cltd
adc
pushf
aaa
cmp
inc
loope
lret
movsl
lock
inc
mov
test
repz
xor
sbb
daa
push
loopne
inc
jle
pop
subb
mov
and
js
das
or
add
lcall
xor
lock
js
imul
and
lcall
int3
loope
aam
insl
push
push
mov
jae,pn
jo
mov
mov
sbb
adc
sbb
call
jge
cmp
xor
cmp
das
lods
das
sar
or
test
pop
dec
or
sub
aas
jae
adc
mov
adc
mov
je
add
lods
add
jge
stos
inc
mov
xlat
cmp
push
jg
inc
or
mov
sub
rcrb
push
insl
inc
fiaddl
mov
xlat
mov
shr
xor
xlat
mov
jno
rcl
nop
mov
sub
mov
and
das
icebp
mov
cli
cli
add
popf
pop
push
ret
rcr
pusha
aad
adc
cwtl
push
js
data16
movsl
jle
jbe
test
push
cmp
dec
rcrl
push
xchg
clc
dec
mov
push
jno
bound
xor
pop
pop
in
decb
sub
rorl
pushf
or
lock
xor
or
inc
inc
or
cwtl
xor
dec
clc
push
jae
in
xchg
cld
outsb
xor
mov
xchg
push
fistpll
sbb
cmpsl
bound
je
push
call
int
push
mov
xchg
cmc
test
scas
jp
lods
stos
popa
sbb
cmpsb
test
mov
or
test
pusha
xchg
sub
xor
je
cmp
mov
sbb
push
jecxz
push
nop
je
notl
xor
cmc
jb
inc
or
psubd
daa
lods
pop
adc
fsubr
fwait
rclb
xor
jb
test
shrl
sbb
pop
mov
popf
fisttpll
aad
mov
fcmove
cli
fisubl
movsl
mov
xchg
sbb
push
sbb
add
loopne
hlt
ds
sbb
adc
sub
jnp
shlb
inc
inc
divb
bound
pop
rorb
push
imulb
icebp
adc
sbb
cmp
imul
cli
inc
imul
add
cmp
fsubrl
cld
sbb
xchg
cmpl
xlat
ljmp
icebp
cmp
repz
sarb
add
add
mov
mov
mov
or
cltd
lds
add
jle
test
and
loop
fsubs
lods
push
loopne
test
call
or
pop
cmp
ja
pop
lock
cmp
imul
cmp
push
mov
or
xor
and
mov
add
and
cwtl
ret
adc
push
cs
sbb
dec
loopne
clc
test
pop
pop
jl
sahf
aas
shrb
in
scas
inc
call
jmp
rcrl
cltd
subb
sahf
dec
stos
or
lock
xchg
ret
mov
mov
fimull
out
xor
inc
push
mov
loop
pop
push
xchg
inc
push
call
inc
cmp
mov
jb
hlt
rolb
cmpsb
push
hlt
push
and
jno
cmp
les
mov
mov
es
xchg
push
aad
mov
jle
sub
adc
test
clc
jae
into
or
nop
jecxz
loop
push
std
ja
sbb
add
push
shrl
add
sub
out
xchg
cmp
fiaddl
xchg
iret
gs
mov
or
mov
mov
mov
lock
call
mov
cld
jns
adc
dec
jne
dec
and
shll
add
ss
jne
sub
and
loop
inc
daa
add
ljmp
insl
push
je
and
movsb
mov
aam
mov
mov
enter
subb
and
mov
das
sbb
mov
inc
push
sub
adc
jne
xchg
mov
add
sub
js
xchg
lahf
lea
pop
or
xor
lock
insl
cmp
or
mov
loope
das
mov
dec
iret
out
mov
gs
je
cmc
or
sbb
js
icebp
roll
push
loop
xchg
push
sub
add
subb
add
dec
mov
sbb
and
scas
pop
je
dec
out
mov
nop
out
scas
mov
in
fbstp
push
gs
imul
or
loopne
dec
or
sbb
movsb
enter
jp
sbb
dec
pop
jne
movb
xor
sti
icebp
sarb
and
inc
mov
mov
jbe
sub
sbb
out
push
ret
stos
adc
je
lcall
cwtl
add
mov
sbb
ret
adc
mov
sub
xchg
into
push
fsincos
pop
fidivrs
mov
xlat
and
fistpll
stos
enter
es
test
std
push
cmp
cmp
add
int
xor
adc
add
sub
mov
add
sub
into
aam
pop
loope
add
rsqrtps
shl
loopne
or
and
push
pusha
ljmp
movb
fdiv
repz
mov
mov
xlat
lret
lods
pop
push
mov
out
notl
xlat
xchg
loop
sub
cmp
jmp
push
pop
test
aad
daa
xchg
xor
or
mov
push
fwait
imul
rolb
xchg
and
xorl
adc
divl
sub
pop
fwait
loope
pop
jp
pop
pop
cmpsb
dec
addr16
in
bound
push
outsl
mov
push
jo
jno
fdivr
mov
ds
pop
loopne
pop
movsb
fiaddl
xor
test
cld
out
dec
dec
out
mov
pop
and
and
enter
sbb
mov
jmp
push
pushf
punpckldq
jecxz
adc
mov
sbb
adc
cs
xlat
adc
pop
xor
inc
mov
adc
clc
and
popf
add
mov
cs
cmpsl
pop
adcl
in
mov
cmp
pop
test
cmp
cs
mov
ja
jae
loop
xor
out
mov
dec
pop
mov
pop
pop
or
push
jnp
add
mov
xchg
sbb
push
ds
jg
push
lods
cmpsb
jb
rol
adc
loop
pop
xchg
or
jmp
mov
or
mov
cmp
jno
mov
xchg
lods
jns
leave
push
sub
push
pop
sarb
je
jne
add
sbb
gs
test
arpl
cli
flds
aas
jae
in
andb
dec
sbb
xorl
movsb
aaa
or
mov
outsb
pop
std
rclb
data16
sbb
push
adc
mov
xchg
popa
frstor
punpckhbw
cmp
imulb
and
or
sub
jno
mov
movsb
mov
cmp
mulb
testl
orl
mov
into
jle
mov
lods
mov
mov
inc
icebp
sbb
fisttpl
inc
xchg
add
mov
mov
adc
ret
mov
xchg
dec
popa
adc
add
insl
mov
aam
xchg
addr16
or
jle,pt
sbb
jg
test
sbb
sti
imul
daa
add
mov
mov
ja
add
fiaddl
outsb
cltd
inc
dec
or
mov
stos
xchg
cli
dec
add
inc
pop
test
or
xchg
js
mov
popa
call
iret
xlat
cld
sbb
and
sub
in
sbb
ret
jne
dec
js
nop
aad
int
add
xor
arpl
sub
cmpsl
hlt
std
mov
out
arpl
ss
cs
pusha
negb
rorb
add
push
popa
xorb
mov
jmp
and
pop
mov
lods
lret
mov
gs
cld
mov
mov
mov
xor
rol
int3
pop
test
into
es
jl
cmpsb
jle
sbb
pop
or
loop
xor
mov
mov
inc
js
dec
xchg
mov
mov
inc
pusha
mov
int
mov
std
xor
inc
cld
mov
test
subl
mov
mov
inc
mov
repz
inc
repz
add
or
cmpsl
xchg
adc
testl
lret
in
dec
push
lcall
aaa
popa
dec
std
shlb
fisubs
pop
ret
lahf
ss
adc
pop
jbe
imul
mov
jp
mov
mov
addl
mov
or
ds
inc
cmp
mov
sahf
adc
shl
in
aam
ret
cmp
movsl
sahf
sbb
test
jmp
xor
cmp
insb
pop
movsl
cmp
push
mov
push
mov
dec
mov
sub
gs
movsl
push
jle
decl
mov
mov
cmpl
mov
jo
jb
cmpsb
sar
fadds
orb
test
out
push
jle
push
xlat
lock
ds
add
arpl
sub
push
mov
or
ret
mov
gs
mulb
add
xor
inc
mov
add
and
pop
inc
mov
sbb
fmul
mov
or
js
notb
push
cmc
pushf
test
or
sbb
lods
aam
pop
add
push
cmp
popf
js
mov
xlat
lea
aas
arpl
andb
icebp
jle
mov
inc
push
push
adcb
push
mov
dec
hlt
xor
sub
mov
sub
loop
test
ds
bound
cli
lret
int3
sbb
pop
popf
bound
lret
jl
sub
xchg
in
fadds
lods
aas
inc
adc
arpl
xor
push
jge
scas
and
shll
sahf
jne
arpl
cmp
pop
pop
mov
cmp
stc
sbb
fcoms
in
adc
pop
push
lods
rolb
pop
xchg
mov
hlt
and
sbb
test
shr
or
push
into
add
sbb
xchg
jns
push
lock
sub
and
pop
inc
push
add
jecxz
cltd
or
shlb
or
pop
clc
inc
xchg
fimull
mov
jge
popf
xchg
push
inc
lock
inc
and
enter
or
pushf
pop
mov
lret
call
push
test
call
add
pop
pop
rorl
mov
or
adc
int
mulb
adc
sub
ret
cmpsl
mov
imul
xor
dec
xchg
pop
adc
xlat
negb
cs
sub
mov
sbb
sbb
std
sbb
aaa
shl
mov
mov
add
mov
call
mov
cmp
mov
cwtl
fcmovb
ret
mov
or
orb
lret
xchg
adc
cmp
pop
mov
imul
xchg
push
inc
add
insb
int
test
cld
lcall
cmp
add
push
inc
cmp
push
xor
hlt
mov
inc
test
xchg
inc
xchg
sub
je
pop
push
lahf
sar
cwtl
pusha
add
xchg
sahf
andb
pop
aam
rcrb
pop
xor
jne
xorl
test
lcall
jle
jnp
xchg
mov
mov
scas
rolb
jae
les
fisubs
pop
cmp
push
add
adc
or
es
fnstenv
and
mov
lock
or
and
push
mov
mov
sbb
and
and
and
inc
xor
fcmovb
cmp
inc
arpl
mov
dec
jp
sub
pop
movsl
xorb
std
outsb
add
inc
dec
jae
adc
mov
hlt
ret
int3
ficoml
pop
movsb
ss
lea
sbb
scas
rcrb
adc
pushf
pop
pop
push
mov
imul
rcrl
fisttps
xor
rolb
jbe
loop
fs
xor
fmuls
xor
adc
cmp
nop
xor
test
jp
jb
aaa
repnz
push
jbe
push
xchg
pop
in
cmp
and
imul
push
adc
push
sbb
mov
pop
jmp
sub
push
jp
mov
push
xchg
cmpsb
scas
push
sbb
pusha
jecxz
sbb
mov
xor
out
cli
adc
jge
outsl
inc
sbb
cwtl
adc
jbe
das
fcoms
push
subb
push
mov
push
inc
test
imul
aam
mov
jl
inc
dec
insl
fwait
mov
inc
in
sub
xor
clc
cmpsb
test
and
add
cmpsb
mov
sub
mov
test
and
mov
lahf
xchg
push
pop
insb
jg
mov
or
jl
or
cmc
dec
pushf
dec
push
add
insl
cs
aad
icebp
mov
xchg
adc
aad
mov
push
inc
and
das
pop
les
test
jo
ja,pt
dec
add
xchg
bound
sarl
mov
jl
shlb
loop
jl
and
mov
fs
icebp
jp
aaa
lods
push
call
shlb
iret
mov
dec
inc
fists
cmp
sub
or
xchg
vcvtss2si
dec
add
push
mov
push
add
inc
lods
mov
mov
ljmp
inc
pop
test
or
sbb
loop
rep
imul
popa
xchg
or
pop
fwait
push
scas
mov
aaa
mov
inc
adc
out
rol
cmp
adc
pushl
pop
push
mov
jo
adc
sub
mov
cltd
lcall
push
lret
dec
fstp
mov
outsb
repnz
add
pusha
test
push
ja
test
sub
mov
adc
inc
push
cwtl
cli
add
xchg
repz
in
leave
push
mov
clc
pop
hlt
cld
inc
mov
inc
ret
lock
ljmp
sub
push
out
push
add
outsl
push
popf
jo
sub
rorb
mov
vlddqu
lret
inc
in
decb
sar
push
xor
ret
js
iret
pop
adc
push
mov
ret
cmpsl
fistpl
ret
nop
sub
fisubs
cmp
pop
or
js
stos
cmp
in
insb
mov
sbb
dec
aad
bound
sbb
xchg
or
out
ljmp
xchg
pop
enter
in
rcrb
cld
pop
mov
scas
push
mov
mov
or
lock
push
ja
idivb
push
add
lahf
jp
fldt
fs
inc
lods
rcrb
mov
pop
in
inc
dec
or
sbbb
xchg
lock
xor
sahf
ss
out
ja
pop
cmp
dec
inc
loopne
and
js
fdivrs
mulb
mov
lods
adc
rcrl
jae
push
mov
roll
fcomps
xchg
mov
inc
scas
daa
js
cli
shrb
push
lock
adc
mov
sarb
inc
repnz
push
xlat
out
xor
or
std
vmwrite
mov
rolb
insb
pop
inc
idiv
fisubrl
lcall
mov
popl
decl
scas
mov
dec
shll
mov
xchg
cwtl
add
shrb
mov
pusha
add
dec
in
aas
daa
test
cld
out
push
les
and
mov
add
pop
movsb
xor
aam
pushf
mov
pop
fcomip
dec
int3
dec
mov
scas
push
sarl
jne
pop
inc
jmp
jnp
mov
jnp
push
push
mov
orb
mov
mov
or
fstl
xchg
cmp
pop
loope
mov
adc
and
and
clc
enter
xchg
mov
dec
lahf
sbb
and
pop
and
push
mov
add
loopne
shll
and
scas
jl
fwait
sub
aaa
lea
gs
xchg
pop
or
int3
inc
jmp
inc
dec
sub
sbb
insl
inc
imul
push
and
out
fnsave
xor
add
enter
fs
push
mov
movsb
adc
mov
and
test
adc
jae
daa
mov
push
addr16
push
call
push
js,pt
inc
js
mov
xchg
dec
or
jg
mov
jge
inc
mov
pop
in
add
lods
fs
sub
xor
jg
adc
fsts
xor
dec
mov
incl
or
or
ss
jl
movsb
xor
ret
or
adcw
pop
nop
push
nop
mov
pop
adc
mov
neg
add
int
arpl
mov
mov
insb
adc
inc
ds
arpl
adc
mov
adc
lahf
jb
cmpsb
cmp
or
rcrb
mov
int3
sbbl
sub
roll
ss
jge
subb
hlt
sahf
jne
je
pop
cmc
test
xlat
jb
loop
xor
or
lods
aad
idivb
sar
enter
mov
mov
test
push
mov
xchg
fcmovbe
xchg
sbb
repz
mov
pop
sub
pushf
sbb
pop
or
inc
lods
lods
or
xchg
or
dec
aad
sahf
xchg
popa
xchg
sub
inc
out
pop
fcoms
jo
sbb
stos
fcmovbe
loop
sub
add
dec
stos
push
jmp
inc
lds
push
shlb
stos
sub
idivl
insb
mov
xchg
pusha
pop
inc
jle
mov
and
dec
mov
xchg
jle
fidivrs
in
adc
loope
aad
jbe
jecxz
inc
lea
lret
dec
pop
rcl
jp
stc
pop
outsb
test
jge
gs
jl
push
cmp
dec
stos
jne
into
mov
shlb
push
xchg
lods
and
add
bound
rolb
mov
test
and
jl
xchg
shlb
sbb
int
sar
sub
inc
lahf
mov
cmp
fildl
insl
push
in
xchg
call
dec
pop
mov
and
mov
scas
fldt
popa
push
loopne
sbb
or
xchg
push
dec
call
mov
or
xchg
push
push
aaa
xchg
add
fnstsw
jb
mov
sub
dec
adc
mov
inc
xchg
fs
scas
pop
cmp
mov
fwait
into
xor
jg
inc
pop
test
xchg
add
loopne
outsl
pop
loope
mov
jl
dec
movsl
scas
xor
or
pop
inc
xchg
adc
mov
mov
dec
xchg
jnp
cmp
push
gs
lods
pop
rcrl
movsb
fiadds
jo
js
cmp
xor
mov
inc
leave
inc
enter
mov
jnp
mov
mov
imul
aas
add
add
jle
mov
mov
shll
jg
fcoms
lret
sub
mov
jno
sub
cmp
adc
add
xor
ret
dec
cli
cmp
push
mov
cmp
hlt
call
das
or
lahf
sahf
push
push
out
mov
mov
stos
lea
or
les
sub
arpl
adc
nopl
mov
aaa
stos
lock
mov
pop
cmp
outsb
dec
sbb
outsl
push
loop
pop
stc
inc
inc
mov
hlt
dec
ljmp
inc
int3
mov
dec
pop
xchg
call
in
mov
mov
ret
or
fimull
mov
mov
ds
lods
fnop
and
ja
fisttpll
lcall
cmpsb
lock
loope
out
mov
jo
scas
call
outsb
mov
dec
js
mov
fstpl
pop
int3
jnp
cmp
push
jp
or
xchg
mov
imul
roll
nop
xor
push
mov
sub
les
out
out
je
mov
nop
hlt
jl
call
stc
mov
cli
jecxz
dec
cmp
imul
push
stos
shlb
mov
icebp
fstl
and
mov
out
ficoms
and
cmp
cmpsb
inc
scas
or
mov
and
stos
out
hlt
rol
push
lock
inc
or
mov
jo
push
cmpsb
jp
aam
and
aas
sub
xchg
fnstsw
inc
mov
fiaddl
test
xor
arpl
pop
mov
or
dec
ficoms
jo
outsb
and
pop
arpl
popa
mov
subb
push
aam
cmpsl
adc
mov
into
pop
xlat
pop
sub
xorl
nop
sub
sahf
clc
add
cmc
loope
addr16
icebp
xchg
mov
push
cmp
loopne
pop
jb
popa
mov
clc
fidivrs
mov
sbb
push
pop
xor
mull
enter
mov
cmc
sarl
jae
sahf
out
lods
sbb
sub
add
mov
mov
adc
adc
in
aaa
ret
and
mov
inc
xor
xchg
popa
pop
jae
dec
fsubs
subl
insl
jmp
lock
js
cli
xor
mov
mov
cmp
out
inc
loopne
jne
push
push
mov
mov
je
call
les
adc
shlb
dec
inc
add
xchg
add
aam
sub
or
sti
loopne
and
movb
icebp
sub
cli
cwtl
sahf
lods
fwait
jle
add
jl
jne
shll
lahf
ret
arpl
adc
mov
sarb
inc
enter
in
data16
cltd
mov
push
insl
add
iret
adc
es
cs
xchg
pop
pop
add
imul
imul
cmc
xchg
mov
ja
sbb
fcmovb
adcb
push
push
js
add
jae
outsb
add
test
and
push
sbb
and
jmp
inc
jmp
sbb
js
out
adc
lret
das
rolb
test
push
rolb
scas
sbb
scas
aad
lret
cwtl
ret
add
xchg
into
and
jne
mulb
out
and
call
jno
push
dec
bswap
and
jp
inc
add
loopne
pushl
cli
xchg
pop
sarb
mov
sbb
lock
sbb
sub
daa
scas
mov
push
sub
mov
jno
push
outsb
add
pop
mov
jge
rcrl
pop
mov
adc
and
in
push
clc
ss
int3
cmp
cmp
stos
adc
rol
bound
ret
cltd
dec
push
ss
pop
pop
stc
into
loope
sahf
mov
xchg
add
mov
cmp
fcmovu
jmp
in
test
xchg
filds
rcr
mov
xchg
dec
addb
dec
jne
push
out
adc
in
cmp
inc
xor
lea
inc
mov
add
mov
mov
aam
test
bound
push
rolb
insl
mov
loope
mov
sbb
sub
aad
subb
mov
std
sbb
es
xor
or
add
aad
sbb
dec
inc
pop
cmp
movsb
in
add
subb
or
sub
adcl
daa
leave
data16
push
inc
push
push
lds
sub
add
rorb
sti
pop
push
mov
mov
lods
sarb
ret
subl
loope
movsb
daa
inc
cs
mov
xor
std
jo
sub
mov
cli
call
inc
or
iret
out
inc
add
jo
mov
push
sbb
icebp
push
mov
push
fdivrs
mov
dec
popf
pop
sub
sub
ljmp
rorl
clc
pop
pop
mov
xor
pop
pop
push
xchg
shr
loop
push
test
ljmp
lods
xor
jp
les
xchg
dec
roll
adc
loopne
sub
js
xchg
push
inc
push
push
iret
mov
incb
movsb
xchg
cmp
outsb
and
inc
lcall
xor
inc
scas
push
mov
clc
scas
mov
xchg
jecxz
pop
icebp
stc
insl
out
jmp
adc
lods
sbb
loop
loope
jae
aad
pop
cmp
lock
rcr
mov
jl
fcoml
aas
jp
xchg
rclb
sbb
aas
jle
push
push
xor
jp
jo
jo
pop
adc
and
dec
cwtl
push
out
push
pop
in
pop
std
cmpsb
dec
out
pop
mov
and
cwtl
xchg
xor
es
dec
aaa
lea
or
int
pop
stos
rcl
xchg
inc
fadds
adc
jne
xchg
push
lock
mov
pop
movsb
sbb
and
lahf
sbb
in
or
xchg
and
gs
sbb
and
cmpsl
test
and
push
sub
pop
rorb
out
aam
jge
or
or
xor
push
out
lcall
push
cmp
mov
jecxz
xlat
pop
dec
jge
and
mov
dec
push
shrl
mov
stos
adc
jmp
xor
in
and
stos
aam
cmpb
xor
pusha
rcrb
andb
push
out
cmp
mov
sbb
sub
out
int3
mov
shlb
add
mov
adc
adc
mov
add
and
ret
mov
xchg
mov
mov
les
sbb
orl
push
loop
pop
mov
push
pushf
leave
push
in
pop
out
add
stos
ljmp
xchg
xchg
xchg
sub
dec
movsb
into
sub
fwait
je
cmp
rcrl
addb
loopne
cld
sti
stos
out
or
dec
or
and
cmpsl
out
nop
sbb
hlt
hlt
cmpsb
scas
jmp
les
gs
pop
cwtl
lock
ret
push
and
inc
xor
push
mov
sti
sahf
push
sub
jmp
add
and
cli
jne
add
mov
push
out
push
or
xor
ds
fsubl
lods
adc
adcb
mov
pop
inc
sub
stos
xchg
es
pop
int
xchg
aad
movsl
inc
jp
jp
push
xlat
pop
call
cmp
imulb
inc
add
movsl
or
addb
sahf
sbb
shl
addb
mov
pop
pop
mov
fmuls
test
testl
jb
adc
data16
pop
add
mov
out
xchg
xchg
mov
lahf
int3
fldcw
push
scas
outsb
clc
pop
mov
adc
pop
addb
dec
adc
mov
test
or
or
mov
pop
push
jp
fdivs
rclb
push
scas
pop
jecxz
add
xchg
dec
xchg
sbb
and
add
daa
js
xor
xchg
xchg
aaa
loopne
cmp
push
pusha
xor
mov
js
imul
cmp
out
je
push
jmp
mov
ret
jae
dec
cmpsb
ret
inc
pop
lods
enter
xor
inc
adc
add
cli
fbld
mov
mov
out
push
ja
dec
xchg
adc
fs
lcall
inc
mov
add
repz
cli
cmp
decl
test
adc
mov
and
test
lock
or
xor
mov
nop
lods
dec
mov
pop
cltd
xor
ss
jp
stos
inc
mov
push
add
cmpsb
inc
push
out
jp
outsb
xchg
stc
and
fisttpl
push
mov
clc
jne
or
xchg
push
inc
xor
inc
ret
ss
or
loope
outsb
sbb
mov
pop
loope
and
adc
adc
aam
pusha
enter
pusha
mov
adc
jo
cmp
fldenv
xchg
inc
jl
sbb
fdivr
push
push
push
sbb
negl
add
stc
adc
pop
imul
jl
stos
testb
jmp
sub
mov
lret
popa
jge
and
ret
sbb
decl
push
mov
sbb
xor
mov
daa
sbb
cmpsl
sbb
cmpsl
xlat
lret
inc
sub
jmp
lods
repnz
push
bound
mov
dec
mull
leave
enter
jbe
and
clc
dec
cwtl
pop
nop
incl
mov
shrb
inc
xor
and
mov
push
cmp
out
ret
outsb
lea
and
je
mov
add
adc
and
out
cmpsl
pop
jg
test
mov
jbe
cld
andl
add
stc
dec
adc
jne
push
arpl
add
add
inc
cli
test
add
mov
psllw
incl
mov
test
rorb
mov
out
and
pop
adc
movsb
dec
or
sbb
pop
ljmp
movsb
inc
dec
jge
lds
sbb
test
fcmovnb
push
stos
sbb
xchg
dec
dec
enter
jne
sub
jo
mov
inc
sbb
les
arpl
jne
cmpsl
test
pop
inc
pusha
shlb
adc
je
nop
or
test
sbb
push
sbb
fwait
out
mov
mov
ret
push
lret
sub
push
daa
loope
add
pop
add
cmp
mov
mov
mulb
sub
and
or
lea
out
push
fsubrl
mov
push
sahf
add
dec
sbb
inc
mov
xor
loop
mov
xchg
ret
xchg
jo
dec
inc
jg
dec
jmp
xchg
push
push
inc
insl
sub
jbe
sbb
fisubs
and
and
inc
cli
mov
std
mov
lret
hlt
sbb
js
or
mov
roll
loopne
push
or
adc
pushf
push
xchg
push
adc
lcall
and
push
les
out
lds
lock
mov
pop
jmp
in
and
ret
in
xor
push
ss
sub
int3
or
lods
mov
js
and
lret
xor
jo
data16
push
dec
into
mov
adc
push
loopne
push
and
loope
ret
push
push
das
xor
addb
rolb
je
pop
icebp
mov
dec
in
push
dec
lock
in
xchg
pop
leave
push
sub
das
mov
ror
lret
add
add
inc
pop
mov
add
jecxz
dec
test
jecxz
cmpsl
push
loopne
scas
cmpsl
mov
nop
sbb
inc
clc
add
and
mov
mov
jmp
or
js
xor
in
mov
or
jnp
or
mov
push
xlat
inc
cli
mov
mov
dec
push
shlb
pop
or
mov
pop
jle
in
andl
cld
scas
pop
sbb
out
pop
jl
xor
mov
xor
divb
aaa
jle
cld
icebp
shlb
scas
push
push
jae
icebp
inc
push
repnz
cld
js
or
mov
lcall
call
or
fcom
mov
mov
sub
xchg
clc
js
into
or
inc
inc
xchg
lahf
sbb
xor
ss
push
je
test
adc
push
bound
pushf
mov
popa
fmul
jno
adc
xchg
cltd
stc
sti
jb
jae
popa
inc
mov
outsl
and
push
xor
out
push
mov
push
sti
add
imulb
jbe
ret
mov
sbb
in
aaa
jp
mov
sbb
lcall
in
sbbl
sub
mov
pop
mov
and
subb
daa
mov
mov
or
mov
or
jg
cwtl
pop
sub
add
xor
mov
pop
mov
repnz
adc
push
dec
lcall
orl
out
jmp
adc
cmp
pop
rcl
and
int
loopne
movsb
je
mov
dec
xor
mov
dec
movsl
icebp
dec
sbb
jb
pushf
xchg
xor
jmp
scas
jb
out
xor
xor
and
ja
leave
xor
rol
test
lret
mov
cvttps2pi
lcall
icebp
jle
popf
or
sub
mov
jo
and
movsb
fldt
gs
sub
or
in
mov
les
xchg
stos
imulb
add
xchg
cmp
xlat
jmp
loop
push
cwtl
mov
in
insl
nop
lods
cmpsl
loopne
xor
or
and
dec
lods
push
sbb
push
mov
fs
fisubrl
sub
mov
sbb
push
pushf
jg
mov
loop
adc
push
int3
dec
inc
push
notl
mov
sbb
jmp
xchg
test
aaa
loopne
loope
pop
dec
pop
movsl
test
movsb
jo
andl
jg
movsl
jmp
ss
iret
sbb
add
loop
das
adc
sub
mov
push
in
imul
and
scas
or
int
es
clc
mov
gs
pop
pusha
jg
dec
jo
or
lahf
arpl
adc
dec
pop
test
sub
xchg
pushf
cmpsb
cmp
lret
push
mov
int
repz
shlb
push
jns
aam
sbbl
adc
or
and
sbb
jo
orb
mov
push
push
popa
push
mov
inc
and
out
adc
testb
push
push
sbb
sbb
loop
outsl
les
push
shrb
dec
cld
inc
mov
test
mov
scas
pushf
cwtl
or
or
call
sub
lds
int3
add
push
je
cmpsb
addl
inc
pop
les
cmc
inc
jmp
pop
shlb
push
cmp
mov
and
mov
mov
negb
addb
xchg
std
out
std
hlt
dec
mov
cmp
sub
ss
into
sub
and
nop
sbb
ficoml
sahf
add
rcl
imulb
push
in
dec
pop
hlt
xchg
lods
hlt
ds
mov
lcall
or
cmpsl
and
inc
push
xor
das
jbe
fldcw
push
shl
movsb
cmc
add
arpl
push
xor
xchg
lcall
icebp
mov
inc
add
mov
push
jp
decb
sahf
stos
add
movzbl
mov
cltd
inc
and
pop
scas
mov
mov
sarl
dec
and
and
into
adc
sbb
mov
out
xchg
push
scas
push
jae
les
sbb
adc
cmp
arpl
loope
loop
dec
mov
dec
dec
mov
adc
or
mov
imul
add
enter
and
sbbb
xor
shll
inc
adc
xchg
mov
icebp
jecxz
bound
inc
sbb
popf
subb
fidivs
lcall
inc
sbb
or
mov
pusha
or
inc
xchg
out
mov
inc
add
mov
sub
xor
lock
sbb
pop
cmp
je
popa
mov
mov
cs
pop
or
inc
ss
scas
stc
scas
dec
xor
xchg
mov
lcall
or
mov
ljmp
sbb
popa
pop
xchg
call
test
sarb
pop
inc
dec
jmp
add
fcoms
cmp
and
add
cmpsb
adc
jl
mov
pop
mov
sbb
or
mov
add
in
imul
data16
jg
hlt
jecxz
rcrb
cmp
or
and
fs
pop
pop
aam
jg
hlt
xchg
cwtl
in
and
adc
test
add
inc
push
lock
add
addb
and
mov
adc
loop
bound
loope
imul
jne
daa
loop
ds
push
insb
fxch
cli
mov
adc
mov
lock
dec
mov
cmp
addl
test
add
in
inc
or
mov
add
icebp
and
jmp
inc
mov
fisubrl
xor
mov
cmc
xor
into
loopne,pn
pop
gs
nop
and
fimuls
mov
hlt
push
xchg
push
fsubrs
or
pop
in
add
push
push
sbb
xlat
mov
push
cld
inc
addl
mov
xchg
mov
pop
add
out
bound
sub
adcl
hlt
int3
push
pop
pop
push
lds
pop
clc
lock
data16
and
xor
sbb
dec
pop
icebp
mov
inc
hlt
dec
movsb
cmp
or
mov
sbb
cmp
pop
fcompp
pushf
test
mov
out
inc
nop
dec
loop
adc
clc
dec
pop
hlt
adc
adc
sub
es
inc
dec
and
mov
popa
adc
hlt
pop
fstpl
ret
mov
mov
mov
imul
add
movsl
push
or
cmp
xor
push
lcall
dec
add
or
je
stos
pushf
fs
push
popf
fucomi
push
adc
inc
add
add
popl
std
jg
or
test
mov
dec
mov
out
mov
inc
adc
sbb
push
sbb
push
div
cmp
nop
xor
movsb
hlt
inc
dec
jl
cmp
mov
xor
pop
cmp
cs
cmp
add
je
in
stc
ret
dec
aam
fisttps
jmp
outsl
adc
movsb
lock
push
das
sarb
pop
ds
sub
or
sub
loopne
push
adcb
sti
adc
shlb
cmp
aaa
jmp
loopne
sahf
dec
mov
popa
in
inc
add
push
mov
repnz
sub
lods
pop
ja
sub
es
popf
movsb
aas
shlb
jne
lea
lods
clc
or
int
sub
int3
lock
pop
add
pop
loope
push
adc
es
dec
adc
jl
xor
fistpl
xor
outsb
mov
adc
pop
jbe
inc
aam
pusha
xchg
push
mov
lods
pop
mov
rolb
repnz
xor
clc
insl
inc
add
rclb
mov
imul
pop
test
lds
divb
inc
in
xchg
psubusw
mov
ljmp
cld
jle
aaa
add
ret
shll
insb
repz
pop
sti
sbb
mov
xor
repz
mov
lock
mov
pusha
xchg
push
rcrl
js
inc
mov
and
pop
movsl
xchg
scas
inc
mov
roll
adc
and
mov
pop
inc
jbe
loop
and
add
lahf
sbb
lds
xchg
adc
pushf
test
sub
cmpsb
mov
mov
adc
outsl
push
pop
cmp
pop
out
push
push
adc
mov
push
mov
lods
sub
mov
mov
and
xchg
fbld
inc
clc
imul
cli
stc
movsl
push
xor
cmpsl
inc
dec
popf
aaa
jp
sahf
mov
cmpsb
sub
ret
ljmp
mov
test
xor
push
mov
movsl
sar
fcomi
push
mov
push
repnz
ret
jbe
ret
dec
mov
test
pushf
test
mov
sbb
sbb
push
cmp
pop
jns
in
xor
lods
adc
sbb
cmpsl
aam
fucomi
out
sub
pusha
inc
popl
sub
outsb
inc
jne
add
push
clc
arpl
add
push
push
dec
leave
je
push
mov
cmp
lock
xchg
and
loopne
mov
xchg
and
adc
inc
leave
sbb
jle
in
mov
cmp
lds
dec
not
mov
sub
out
stos
cmc
aad
aas
daa
es
push
clc
jnp
pop
and
sbbb
subb
ljmp
and
and
inc
stos
adc
jle
xchg
inc
mov
push
or
jl
aas
mov
xchg
lock
add
mov
fwait
js
hlt
xor
insl
jle
sub
lcall
fdivp
jle
add
adc
enter
in
call
jmp
lds
clc
or
pop
push
or
out
jp
test
aaa
sub
pop
pop
outsb
cli
les
jmp
cld
call
cmpsb
and
adc
and
sti
lock
mov
ds
shr
dec
call
in
and
pop
add
push
hlt
push
jnp
pop
jp
sbb
push
xchg
jmp
cmp
mulb
pop
or
push
mov
pop
mov
incl
push
push
cmc
in
in
jmp
sub
lock
cld
mov
ljmp
add
cmpl
or
insl
pop
add
push
adc
mov
xchg
aam
push
cmp
pop
sub
or
xor
dec
sub
dec
jl
test
add
enter
sub
icebp
dec
fisubrs
repz
daa
loope
xchg
add
js
mov
loope
mov
fmull
xor
adc
and
add
mov
push
mov
into
scas
outsb
add
cmc
cmc
movl
add
push
cld
fwait
loope
add
cmc
cmp
and
and
loopne
xchg
adc
lock
stos
mov
cmpsb
adc
dec
sbb
push
xchg
dec
pop
sub
lret
xchg
cld
out
lea
add
jecxz
out
rol
idivb
nop
xchg
mov
add
mov
and
fwait
mov
arpl
inc
ljmp
data16
out
adc
lds
lahf
cs
jbe
and
or
dec
mov
insb
pop
rclb
bound
jecxz
pop
push
cmp
mov
jo
clc
sub
mov
xor
aam
pop
sarb
jno
inc
jmp
xchg
xchg
repz
push
jb
xorb
clc
add
push
outsb
shrb
jo
dec
dec
lret
sbb
push
icebp
shrb
xchg
fimuls
div
mov
push
and
cmc
fcoms
outsb
dec
insl
jl
hlt
xchg
hlt
jb
mov
cwtl
in
fidivl
xchg
and
inc
mov
jg
adc
or
sti
and
enter
pop
mov
or
inc
cmp
inc
pushf
fmuls
out
and
xorl
add
inc
dec
bound
add
jg
ja
add
add
icebp
inc
jecxz
sub
xchg
push
xchg
enter
popf
les
add
loop
and
sarl
hlt
pop
cmp
mov
aas
rorb
or
pop
outsb
inc
cld
pusha
and
out
mov
or
cmpl
sahf
mov
das
push
sarl
mov
aad
addr16
pop
add
xchg
mov
pushl
or
cmpsb
les
test
ret
mov
fsts
jle
adc
pushl
ds
mov
std
ljmp
push
xor
scas
insl
push
mov
push
inc
pop
fwait
jl
mov
add
inc
iret
adc
insb
mov
repz
or
sbb
xlat
mov
je
cmp
fs
dec
xor
mov
test
and
jg
ljmp
mov
loope
add
and
pop
jbe
sbb
popf
mov
dec
jl
xchg
cmp
xor
out
into
ds
mov
into
int
dec
and
lret
lods
add
leave
xor
mov
scas
adc
inc
scas
mov
lcall
cmp
push
inc
dec
pop
data16
cli
scas
mov
fimull
outsl
mov
mov
in
lods
test
inc
xorl
inc
jo
cmpb
mov
mov
mov
jmp
pushw
and
jno
pop
loopne
enter
sbb
mov
fisubl
add
adc
cmpsb
shr
mov
xor
jmp
xor
das
xor
cmpsb
mov
and
mov
movsl
cmc
iret
adc
mov
les
mov
mov
sbb
hlt
xor
pop
xor
pusha
cmp
or
cmp
push
data16
std
mov
and
lock
xor
scas
mov
negb
cmp
popf
or
lods
rclb
stos
fnsave
clc
sahf
rclb
pop
push
repnz
mov
push
pop
pop
push
and
mov
or
loopne
mov
xor
mov
xchg
mov
sub
ds
jnp
sbb
sub
lahf
and
ss
das
inc
pop
faddl
popa
inc
or
scas
fldl
sbb
fcmovnbe
test
mov
dec
cmp
andb
inc
or
sub
sbb
cltd
mov
mov
xor
cld
in
bound
mulb
jp
or
jbe
mov
dec
adc
xchg
xchg
sbb
lock
dec
loop
inc
rcrb
xchg
clc
add
rcl
mov
push
test
scas
inc
dec
pop
inc
fs
jne
scas
adc
add
rcll
subb
lods
jg
icebp
dec
fdivrl
add
push
lock
jb
pop
cmc
jo
dec
fidivl
xchg
adc
orb
cmpsl
push
aad
test
and
push
aas
sbb
ret
rorb
mov
sub
imul
aam
out
adc
insb
loope
popa
lds
icebp
in
das
or
icebp
out
jl
push
andb
or
rcrb
sub
push
pop
push
clc
test
aam
pop
loopne
loop
add
adc
pusha
xchg
xchg
jo
nop
add
sarb
jae
aam
mov
jge
paddw
push
pop
nop
inc
repnz
pop
add
jge
js
fildl
movsb
outsl
mov
cmp
and
sahf
cmpb
mov
pop
stos
mov
js
leave
arpl
and
loope
mov
xchg
push
xor
xor
cli
cli
ret
jle
jecxz
xchg
pop
cs
xchg
in
mov
pushf
mov
mov
sub
ljmp
jecxz
push
pusha
add
scas
aad
insb
pushf
jp
loopne
imul
add
xorb
add
adc
or
xor
mov
add
jnp
data16
jo
jno
sbb
mov
fucomip
mov
dec
push
insl
call
pop
in
pop
mov
test
movsb
and
adc
enter
push
sbb
ja
mov
pop
or
sbbb
arpl
popf
aam
cs
les
sarl
mov
notl
lds
jl
cld
adc
push
into
rcl
imul
xchg
stc
mov
pop
fisubrs
xchg
cwtl
call
cli
push
test
xor
push
je
fs
add
in
and
rol
push
insb
jb
je
out
ficomps
nop
shlb
mov
leave
mov
fsubrs
shl
and
inc
xor
or
inc
sbb
xor
and
mov
jbe
mov
add
or
push
ljmp
xchg
mov
jp
cmp
inc
aas
ret
inc
jb
mov
stos
js
jbe
lds
in
add
int3
pop
rol
push
jbe
pop
or
inc
test
add
dec
cs
std
mov
insl
pop
cmpsl
or
mov
pop
xor
inc
push
jge
iret
int3
sbb
sub
or
sahf
jecxz
loop
sbb
adc
ljmp
sub
push
add
mov
push
icebp
addr16
test
adc
mov
lock
lock
nop
add
std
arpl
divl
add
dec
or
stos
push
mov
dec
and
flds
in
test
insl
rcr
sbb
gs
xor
stos
shll
push
jno
cmp
dec
aad
outsb
cld
inc
mov
mov
ror
pop
jnp
inc
aam
cmpsl
test
xchg
xchg
testl
movsb
and
lea
pop
rclb
rcl
xchg
pop
mov
int3
sbb
aas
mov
jg
adc
call
sti
mov
pop
or
fs
push
inc
imul
test
jp
xchg
aaa
orl
test
rcrl
outsl
cltd
dec
movsb
jnp
cmp
jp
xor
xor
fildl
inc
daa
add
sbb
mov
rolb
push
outsb
xchg
shlb
test
ljmp
xchg
sbb
in
popa
add
push
or
add
pop
or
jne
sbb
mov
loopne
fildl
adc
add
outsb
clc
inc
xor
pop
mov
add
rolb
jmp
sbb
stc
stc
sbb
leave
cmp
jl
imul
dec
clc
adc
push
pusha
mov
and
sub
popf
shrl
test
and
imul
sub
jmp
aam
lret
fmull
sbb
fiaddl
pop
test
scas
orb
cmpsb
rolb
aaa
dec
and
repz
and
loopne
idivl
test
mov
movsb
and
push
mov
dec
sub
ss
pop
jg
mov
out
push
icebp
fisubl
mov
ss
dec
or
adc
pop
push
mov
cmp
jne
xchg
fdivrl
int3
sub
pop
jb
js
push
xor
jp
pop
sbb
adc
push
cmpsb
xchg
icebp
and
push
and
insl
rcrl
sti
add
je
jno
repz
sahf
xor
les
popa
mov
add
aam
sbb
mov
sub
sub
jnp
rorb
mov
arpl
out
and
cmp
dec
popw
mov
inc
adc
xchg
jge
cli
hlt
mov
outsb
adc
in
sbb
out
lods
add
aas
cmpsl
inc
aaa
shrl
popf
movsb
subb
jne
sbb
clc
ja
adc
stc
cmpb
mov
pop
and
popa
push
push
jns
in
jecxz
dec
pushf
sub
push
and
sbb
lods
sbb
subb
cmpsl
mov
xchg
mov
dec
icebp
mov
sub
mov
ficompl
mov
sti
xor
das
and
jne
and
ret
hlt
mov
pusha
stc
ds
scas
inc
jns
pop
rol
sti
daa
daa
mov
mov
clc
mov
dec
aad
jle
hlt
jbe
gs
xchg
mov
or
xor
mov
adc
inc
sti
inc
dec
xor
daa
frstor
push
pop
sbb
xchg
xchg
mov
xchg
popa
adc
into
loopne
lods
loop
aad
std
sub
push
test
sub
sbb
popf
add
push
dec
or
xchg
dec
mov
in
ret
shll
jo
add
sbb
xchg
cltd
or
cmpsb
jmp
scas
inc
cld
repnz
adc
imul
add
xor
xor
fs
jnp
sub
sub
in
repz
mov
add
cli
test
dec
stos
out
fcmovb
rorl
shrl
out
lcall
dec
pushf
and
fcompl
ja
mov
or
loopne
out
popa
mov
out
cwtl
hlt
cli
inc
xchg
outsl
and
fsub
push
mov
or
push
pop
mov
addb
push
add
pusha
push
aas
push
jg
out
jbe
and
hlt
adc
addl
xchg
adc
dec
cmp
push
mov
movl
ss
test
and
or
xchg
add
or
test
sub
lret
pusha
cmpsb
lock
lea
out
add
sbb
xor
jne
jge
cmp
jle
shrb
addb
arpl
xchg
movsb
or
mov
inc
loop
push
scas
push
pop
sarl
mov
pop
fiadds
mov
xchg
dec
out
add
xchg
movsl
jnp
ficoms
les
cmp
mov
adc
pop
inc
sub
cmp
cmpsb
jae
or
jnp
add
aam
adc
shlb
xlat
pop
cwtl
lret
outsb
xchg
sbb
js
jo
xor
or
push
cmpl
fs
outsb
dec
push
int
jns
je
mov
push
push
mov
out
sbb
sahf
adc
xor
cmp
xor
add
scas
jle
inc
inc
pop
in
inc
adc
shl
or
inc
test
mov
mov
push
and
xchg
test
cmp
pop
inc
add
sub
lea
std
js
aaa
popa
jecxz
insb
pop
andb
add
cmp
or
fcoms
int
roll
push
out
jb
pop
and
jge
outsl
setp
es
out
mov
mov
in
shll
aad
add
movsb
in
jns
enter
stos
cmpsl
jmp
adc
ss
sub
icebp
jbe
push
call
xor
outsl
mov
jmp
mov
mov
mov
imul
sub
call
insl
or
adc
fwait
fwait
loope
inc
or
jg
jo
jns
test
test
sub
adc
mov
cld
cmp
bnd
sub
mov
ret
add
jo
mov
push
adc
lock
inc
popf
push
push
push
popa
mov
rorl
neg
add
fidivl
cmpsb
inc
cmp
fldt
mov
add
dec
jge
mov
lods
scas
push
inc
add
inc
fadds
bound
rclb
popa
repnz
shrl
push
fadd
xorl
cmp
adc
ret
push
jp
xor
xor
mov
mov
add
je
pop
push
push
jp
loopne
dec
iret
mov
xorl
cmp
mov
js
mov
loope
xchg
std
inc
jmp
dec
icebp
mov
inc
add
js
add
inc
dec
jl
or
add
cmpsb
out
outsb
shll
adc
std
jno,pn
loope
sub
pop
mov
pop
mov
push
daa
and
cmp
sub
add
fiaddl
jae
xchg
loope
push
mov
pop
adc
mov
jge
aad
lahf
jbe
jne
push
pop
add
adc
insb
add
mov
cmpsb
into
in
out
pushf
aad
push
xchg
sti
sbb
dec
dec
mov
js
sbb
mov
clc
jmp
rol
imul
pop
fcoms
push
push
cmp
pop
pop
and
jnp
cmp
sbbb
sub
es
shrb
call
mov
push
adc
loope
sbb
ss
pop
xchg
test
dec
sub
movb
cwtl
gs
pop
mov
pop
fbld
inc
cli
rorb
xor
int
call
js
push
sbb
jmp
push
sub
arpl
adc
or
and
mov
insl
pop
mov
arpl
cmp
inc
mov
sub
mov
or
add
jae
aam
daa
fdivl
lock
or
sbb
inc
xlat
pushf
addr16
mov
ljmp
movsb
xchg
jmp
mov
xchg
mov
mov
or
js
jbe
cmp
aaa
lea
rolb
cmc
add
cmp
int
pop
adc
je
outsb
jmp
cmp
cmp
add
lcall
mov
pop
mov
scas
cs
mov
xor
xchg
iret
and
xor
out
test
mov
fcmovne
mov
mov
inc
cmp
or
sub
mov
call
and
cmp
lahf
or
and
mov
cmp
xchg
jno
adc
push
in
cmpsl
lret
ret
add
jecxz
xlat
dec
push
push
fsubl
dec
inc
mov
push
push
pushf
cmp
popa
test
sub
std
add
dec
inc
sbb
pop
xor
push
dec
sbb
pop
dec
dec
int3
xlat
mov
mov
mov
and
mov
rcrl
test
lahf
xor
dec
mov
inc
add
fmull
shlb
adcl
fcmovb
and
int
mov
lock
cmp
xlat
test
pushf
dec
pop
sbb
sub
xlat
add
mov
inc
outsl
pop
js
cmp
add
incl
subl
xlat
xchg
shrl
mov
js
outsl
pop
ret
sbb
movsb
or
add
or
and
pop
shrb
mov
cmp
or
push
add
push
ficoml
adc
movsl
push
jne
aas
inc
mov
jmp
cmpb
repnz
jecxz
punpckhbw
or
pop
das
push
aam
xor
or
mov
stos
adc
mov
mov
lea
loopne
out
push
or
inc
idivl
sub
jp
xchg
add
sbb
roll
pop
jo
inc
lea
inc
pusha
push
fildll
cwtl
icebp
sbb
cmpl
jb
push
test
test
cli
jnp
and
js
sbb
sbb
rcrb
imul
int
sub
sub
std
sub
mov
xor
jle
shll
adc
das
adc
sbb
cmpsb
sbb
fs
cmpsb
mov
pop
add
jo
inc
jae
das
and
jne
scas
xor
xchg
add
mov
gs
jo
test
xor
or
push
std
or
es
add
mov
mov
jmp
pop
mov
mov
aaa
jbe
cmc
jmp
add
pop
inc
outsl
ficompl
sub
insl
subl
sti
or
inc
or
adc
push
cmc
shlb
or
dec
sbb
frstor
add
dec
repnz
jecxz
sti
jmp
xchg
xchg
sbb
imul
insb
pop
daa
outsl
xorl
push
mov
outsb
es
jno
punpcklbw
xor
je
push
loopne
pop
inc
cmp
icebp
mov
bound
aam
rcl
sbb
mov
rol
sbb
lds
es
inc
out
jge
fsubl
and
std
ret
mov
push
mov
scas
cli
ret
inc
std
je
ljmp
or
push
pop
mov
jecxz
clc
add
js
jp
into
repz
mov
mov
push
out
gs
mov
dec
rclb
je
adc
iret
outsb
push
cmp
pusha
xor
xlat
cmpsl
je
iret
cld
inc
shll
in
add
sbbb
enter
idiv
faddl
std
mov
insl
repnz
mov
cltd
inc
inc
cmp
sub
cmp
dec
insb
lods
sbb
adc
xor
sbb
lods
jne
roll
pop
add
in
xchg
shr
pmuludq
std
ljmp
sub
aad
adc
loope
ja
stc
inc
lods
addr16
inc
dec
aas
push
das
mov
pop
pop
cmpsl
inc
lret
lcall
arpl
incl
add
cmp
lods
inc
outsl
add
les
mov
adc
out
shll
repnz
cmp
test
lret
pop
jno
cld
mov
dec
xchg
mov
cmp
gs
sarb
inc
lret
popf
sar
lcall
ljmp
sbb
test
push
mul
push
fcoms
scas
and
or
push
fiaddl
add
pop
imul
test
divb
loope
sbb
sub
lcall
mov
loop
jmp
dec
pop
fmulp
aas
out
idiv
mov
out
jne
js
fs
ss
lcall
lahf
pusha
and
imul
repnz
sbb
push
jg
jle
push
sbb
test
push
mov
mov
popa
out
ds
pop
mov
std
pop
add
jp
call
jo
or
mul
mov
add
xor
xchg
gs
and
add
sub
mov
jae
jmp
jne
or
and
add
jg
mov
xor
mov
mov
jle
js
add
pop
or
pusha
pop
mov
mov
cli
adc
cmp
push
std
rclb
xor
sbb
cmp
add
mov
lret
das
repnz
inc
out
or
dec
xchg
xchg
inc
fcoms
stos
in
shl
xchg
ss
mov
aaa
out
test
ljmp
jmp
mov
pop
sub
xor
and
ljmp
jne
addr16
insl
mov
inc
adc
dec
outsb
rcrb
pop
and
inc
fsubp
clc
lock
std
push
ds
jno
pop
dec
sub
push
mov
dec
mov
cmpsl
mov
pushf
fstps
icebp
push
cmc
sbb
sub
lods
mov
sarb
lea
cmpsl
add
lret
rolb
jl
pusha
out
mov
xchg
mov
das
arpl
sbb
dec
mov
mov
scas
xchg
mov
mov
roll
inc
jg
int
add
into
ja
xor
jge
data16
in
lcall
jmp
mov
out
rcrb
daa
cmp
mov
jg
mov
pop
imul
xorb
inc
cmp
xlat
mov
pop
shrb
stos
aaa
mov
pop
jg
cmp
dec
test
cmpb
sbb
mov
pop
inc
and
xchg
movsb
fucomp
cmp
je
mov
mov
sbb
jle
xchg
loop
mov
sahf
xchg
imul
fdivrs
adc
dec
in
sahf
mov
mov
pop
cmp
add
sbb
xor
movsl
mov
imul
mov
ljmp
dec
sbbb
lret
call
push
jns
enter
xlat
dec
mov
inc
add
and
xchg
out
xchg
add
pop
xchg
add
fldcw
sahf
mov
scas
dec
sub
aaa
push
pop
inc
cltd
mov
and
fcmove
loopne
pmuludq
inc
inc
and
xchg
loope
add
arpl
ret
fistpll
xor
pop
cmp
jne
rcrb
cltd
jl
fbld
dec
fldt
mov
int
negb
clc
in
add
push
lcall
sbb
dec
or
add
cwtl
pop
test
xchg
mov
ficomps
add
pop
out
dec
enter
mov
fs
pop
aam
jbe
or
xchg
scas
push
or
inc
or
sub
ret
ja
push
push
sub
pusha
aad
aam
push
jo
insb
or
sbb
mov
push
dec
cmc
dec
cmp
rcl
cli
and
test
cltd
sub
sbb
sbb
cmc
pop
xchg
sbb
ret
and
pop
out
or
negb
mov
mov
sub
xor
sbb
mov
mov
push
sysexit
stc
arpl
inc
push
insb
daa
leave
or
and
and
dec
loop
ja
mov
cli
mov
dec
jo
pusha
fmuls
mov
out
jae
or
sub
pop
lods
cmpb
in
sbb
pop
xor
sbb
xchg
inc
clc
mov
out
pop
pop
imul
in
mov
sarl
arpl
aad
into
fs
sbb
fs
aas
cmp
ds
xchg
inc
push
popa
inc
jecxz
shlb
shlb
sbb
cmp
jbe
and
pusha
dec
mov
xchg
pop
movsl
movsl
jo
mov
mov
mov
add
fdivs
or
push
xchg
xchg
dec
dec
sbb
filds
test
movsb
adc
imul
push
inc
or
nop
adc
xchg
aam
shrb
pop
cld
or
lea
push
lds
add
in
mov
jle
or
sbb
adc
inc
daa
inc
stos
lea
add
jo
mov
dec
push
and
outsl
dec
testb
insl
pushf
dec
pop
jp
push
mov
jp
mov
outsl
and
decl
adc
push
lret
xchg
leave
jge
imul
outsb
adc
mov
fwait
lock
adc
adc
push
add
adc
dec
clc
das
mov
mov
aaa
sti
adc
out
mov
mov
mov
scas
jg
lret
sbbb
sti
fdivrp
xchg
mov
jg
iret
lock
push
adc
push
nop
or
fisubs
sbb
dec
sub
sub
and
push
pop
mov
cli
or
ds
sub
mov
popf
adc
outsb
push
popf
adc
mov
aam
cli
inc
inc
notb
push
dec
inc
adc
lock
adc
inc
xor
inc
lock
fnstcw
cmp
pop
or
push
popa
jmp
mov
movsl
inc
sbb
xor
data16
sub
pop
mov
or
and
shlb
js
adcb
mov
inc
jns
stos
or
xchg
pop
icebp
adc
add
dec
leave
xchg
es
btr
stos
xchg
ds
mov
adcb
add
mov
das
cwtl
clc
scas
mov
push
cmp
adc
mov
sbb
push
aas
stos
mov
pop
xor
retw
mov
add
in
adc
insb
and
sub
xchg
mov
sub
sub
movsl
dec
in
xlat
push
subl
xor
lods
push
pop
or
test
nop
cmc
push
xchg
xor
push
sbb
js
sahf
addr16
aam
popa
sbb
test
pop
cmc
lcall
cld
push
or
mov
mov
jl
imulb
mov
pop
mov
test
jae
jmp
call
mov
xlat
ljmp
in
pusha
jmp
xchg
aad
xchg
and
imul
sbb
dec
fadds
hlt
in
adc
les
xor
sbb
dec
or
ds
mov
decl
hlt
in
fsubrp
add
rclw
mov
mov
jo
call
jmp
adc
fs
repz
in
outsb
stos
lcall
nop
sbb
or
enter
insb
mov
clc
ljmp
mov
imul
adcl
outsb
mov
das
add
inc
sub
adc
xchg
mov
out
movsl
loopne
cmp
fisubrs
inc
pop
sub
xchg
test
fsubrs
sarl
cli
stos
and
pusha
xchg
in
inc
dec
pop
inc
push
dec
out
or
addl
rorb
xor
inc
cmpsb
add
daa
test
cmp
test
rcrb
sahf
aam
lods
pop
pop
fadds
pop
test
cmpl
or
add
push
mov
int3
inc
ret
add
push
push
sahf
sbb
pop
xor
cs
rclb
icebp
pop
int3
push
aad
mov
cwtl
adc
add
jne
jg
mov
lret
and
cmp
cli
jbe
mov
mov
mov
std
jnp
inc
negl
lret
or
aam
lds
imull
sbb
inc
outsl
jg
movsl
cmp
push
add
mov
and
and
in
cmp
push
pop
mov
xchg
outsl
cmp
inc
cltd
mov
fdivrl
push
pop
adc
je
in
clc
mov
sub
out
cli
bnd
loopne
and
arpl
add
xor
cmp
xchg
out
out
aas
pop
push
divb
inc
pop
mov
sub
mov
ret
cmp
and
invd
dec
push
jle
or
aaa
sbb
add
or
mov
push
adc
or
pop
sub
cmp
addl
sbb
xor
cmp
lock
subb
and
push
or
jne
movsb
adc
adc
pop
jbe
jbe
fadd
mov
jp
mov
fs
popa
lock
push
jecxz
int
sbb
adc
enter
add
and
jb
adc
jg
fdivs
loopne
lods
mov
mov
popa
and
call
ljmp
xchg
movsl
movsb
mov
loope
call
movl
js
ljmp
mov
sti
stos
rcrl
in
jb
jb
pop
mov
filds
dec
ljmp
pop
xchg
sub
lea
test
je
repnz
mov
mov
lock
add
and
add
push
rolb
test
jbe
outsl
test
outsb
push
ss
fidivrs
lock
into
mov
dec
js
dec
into
xchg
shlb
adc
push
icebp
daa
jge
addl
jp
pop
test
cmp
loop
jge
in
lret
stos
or
push
sub
add
mov
rolb
jp
out
jmp
lock
xchg
lret
lods
xor
sahf
fcoms
sub
fdivl
int
push
clc
push
shlb
mov
lock
lock
adc
addl
mov
jl
cmpb
sub
push
stos
pop
hlt
in
nop
or
mov
mov
mov
push
push
adcb
roll
xor
jae
dec
lods
add
fiaddl
stc
adc
pusha
movsl
push
xlat
pop
int
adc
xchg
arpl
fistl
ds
out
push
js
xor
mov
adc
mov
rcrb
mov
adc
subl
lods
mov
incl
out
iret
mov
lcall
sbb
es
dec
repz
pop
push
jo
outsb
js
adc
mov
cmp
dec
loope
pop
incl
imul
sub
xlat
aad
bound
addb
stos
lret
adc
pop
ret
or
dec
or
lds
jecxz
adcb
mov
or
pop
hlt
push
lcall
xor
cli
pop
ret
add
test
stos
inc
int3
inc
adc
test
mov
subb
mov
mov
push
pop
arpl
ja
ss
sahf
sar
in
es
mov
shlb
fmuls
ja
push
js
push
sbbb
cmp
add
jp
mov
imul
lahf
cs
lret
push
add
pop
cmp
fnstsw
push
push
add
data16
movsb
fcoml
push
sub
stos
cli
jmp
pop
cmp
into
pop
iret
hlt
mov
shr
test
sbbl
aas
or
xchg
sti
repz
xorl
lahf
pop
lock
sub
mov
sbb
rolb
mov
out
push
mov
out
push
push
stos
or
test
lea
or
dec
sbb
mov
push
cli
ljmp
xor
pop
pop
pop
lea
mov
scas
outsb
icebp
sbb
lock
mov
cwtl
fcmovb
mov
push
or
lcallw
jl
lock
jp
push
fs
inc
cld
xchg
imul
add
test
mov
xor
mov
add
add
xchg
cltd
jae
add
movsl
icebp
mov
sbb
push
popa
sub
pusha
xor
push
and
imul
and
hlt
test
loopne
in
cmc
decb
test
mov
sub
cs
insb
mov
icebp
cmpsb
inc
add
hlt
and
jl
sub
add
mov
mov
rolb
mov
bound
adc
jbe
jb
jb
cmpsl
lock
ret
push
shlb
cmp
mov
inc
in
mov
dec
mov
pop
mov
out
xor
lock
data16
add
das
js
cmp
cmp
test
xor
fdiv
into
in
sub
push
sbb
and
and
mov
nopl
and
aas
xorps
xchg
add
and
lea
jle
outsb
adc
cmc
xchg
pop
imul
rclb
or
add
sub
jl
pop
rol
out
push
sbb
sub
out
mov
div
and
dec
pop
cld
add
sbbb
mov
mov
xor
jl
sub
sbb
cmpsb
mov
dec
and
rcr
add
out
mov
jne
cmpsb
jo
loopne
cmp
mov
arpl
aad
and
jne
xchg
sub
mov
loope
push
xor
rcr
pop
adc
xor
insb
rorb
push
push
mov
mov
ficomps
ja
popa
adc
iret
and
mov
hlt
push
xchg
stc
aad
dec
dec
push
mov
add
or
cld
add
or
sbb
ss
ja
lea
pop
mov
mov
jo
jo
test
jbe
mov
dec
js
push
and
inc
push
loope
stc
lods
rorl
push
xor
call
fdivs
adc
imull
dec
and
jo
pop
pop
js
cmpl
sahf
mov
fldcw
add
dec
mov
addl
sbb
pusha
cs
enter
mov
cmpsl
dec
scas
xorb
sub
int
mov
es
ret
adc
xor
std
daa
push
or
out
addl
sbb
std
jmp
sub
mov
testb
cmp
pop
sbb
out
int
jl
mov
cmpsb
fs
lods
push
hlt
popf
test
jno
aas
mov
mov
pop
or
sub
lahf
adc
mov
and
jecxz
jo
or
addl
enter
scas
hlt
dec
inc
xor
je
mov
pop
pshufw
mov
jno
lret
mov
xchg
call
pop
in
add
or
scas
das
ret
shrb
pop
loopne
mov
loopne
pop
popf
xor
cs
stos
push
xchg
push
icebp
or
inc
in
mov
xor
jecxz
pop
mov
rcl
mov
xchg
push
cld
sub
fistps
fs
sti
aas
mov
mov
mov
add
add
test
push
lds
xchg
repnz
test
cmp
bound
je
les
add
les
add
mov
dec
jp
loope
mov
ja
div
push
imul
cwtl
xor
leave
pushl
decl
jbe
test
push
dec
addr16
inc
negl
inc
pop
xor
xor
fnsave
mov
add
xchg
stos
pinsrw
push
jne
aas
mov
adc
xchg
orb
add
dec
pop
cs
add
sbb
mov
lret
movsb
enter
xchg
dec
or
sahf
xor
xchg
push
xor
push
test
test
pop
loopne
std
add
mov
sbb
mov
jg
jb
mov
cmp
mov
push
cmp
sbb
fdivs
push
adc
jbe
add
fucomi
add
pop
out
int
sbb
ror
xlat
mov
xor
cmpsb
icebp
push
mov
push
pop
or
jp
insb
divb
mov
test
sbb
mov
pop
stos
sahf
add
ljmp
sbb
push
push
and
lods
or
or
in
sub
jecxz
jl
outsb
scas
inc
mov
out
scas
sbb
or
clc
add
mov
xchg
sub
add
fiadds
inc
push
aaa
sub
cwtl
js
mov
clc
xchg
sub
sarb
jl
push
and
sbb
push
test
jbe
lea
xchg
and
cmp
inc
sub
mov
call
shlb
cmp
repnz
sub
int3
sub
sub
fstpl
js
adcl
or
mov
add
push
jb
jbe
jno
rorl
mov
fdivrp
and
cli
inc
cmc
sbb
popa
mov
lods
mov
sub
lret
push
sbb
sahf
cli
push
jl
add
ljmp
loope
add
into
sar
mov
ror
sub
loope
cwtl
xor
ds
je
mov
jbe
adc
mov
rcr
mov
lock
sub
add
and
mov
dec
adc
adc
das
popa
ds
cmp
push
stos
pop
popa
jo
sar
jb
push
fildll
out
aaa
xchg
cmp
clc
in
rclb
inc
shrl
cmp
test
sbb
or
push
mov
leave
shll
sbb
pop
aam
adc
cmp
test
lods
or
or
inc
cmp
sub
shr
sbb
jp
push
push
test
lcall
push
pusha
xor
mov
jecxz
push
cmp
inc
xadd
cwtl
push
iret
adcl
test
xor
les
jmp
inc
repz
mov
pop
push
jo
mov
inc
clc
mov
jecxz
add
nop
mov
out
out
jle
ret
lods
push
xchg
icebp
dec
or
int3
std
sbb
ret
lea
mov
lds
xchg
repnz
mov
test
pop
sarb
add
sbb
cli
stos
inc
mov
add
or
inc
sar
cmp
adc
sahf
xchg
xchg
lahf
fsubrs
je
pop
ss
aad
jle
shl
pushf
mov
setno
lret
jne
jp
cmp
ret
pop
mov
pusha
jle
pop
aas
lods
jge
jb
push
dec
adcb
inc
adc
mov
mov
fsubl
pop
dec
mov
and
push
daa
adc
push
push
jl
jecxz
mov
es
and
loopne
loope
stos
push
gs
and
stc
xor
pop
loopne
mov
add
pusha
push
push
movsb
fwait
cmp
hlt
loop
pusha
pop
fdivr
aas
jo
add
jnp
push
push
or
add
add
mov
sbb
jp
int3
in
jp
dec
lea
add
aaa
jb
lock
mov
inc
jg
dec
mov
or
pop
inc
jo
jo
fdivl
adc
mov
test
gs
adc
insb
push
xchg
cmp
cltd
mov
push
cmpsb
jl
xor
call
inc
in
inc
push
inc
out
push
shlb
fcmovb
hlt
cmpsb
outsb
xchg
add
shrl
stc
outsb
fistpll
lea
mov
enter
mov
xchg
cmpsb
mov
xor
addr16
mov
mov
in
int3
inc
push
leave
insl
and
xchg
mov
mov
push
pop
sub
imul
cmp
gs
inc
xor
push
fisubs
xchg
filds
je
add
xor
inc
fldl
ljmp
push
inc
jmp
stos
mov
cwtl
pop
mov
fcmovb
sbb
ret
adc
adc
sahf
mov
or
mov
aam
fimull
adc
shrl
shll
loopne
sbb
mov
xchg
pop
cwtl
shll
mov
xchg
pop
dec
sub
mov
push
jns
mov
add
aad
pop
aad
cmp
jnp
mov
sbb
fstps
in
enter
xor
lret
dec
push
adc
fsubs
and
jl
popa
mov
addl
inc
inc
test
hlt
mov
es
movl
inc
push
dec
lret
pushf
pop
xchg
adc
pop
and
mov
mov
nop
sti
fsubrp
mov
xchg
mov
pop
call
scas
cli
jo
idiv
mov
in
aam
xchg
aam
adc
mov
lock
jg
sub
rcrb
add
fstpt
je
ljmp
sti
popa
pop
mov
gs
inc
insl
add
adc
adc
push
push
pop
dec
mov
pop
pop
or
inc
lds
into
test
sub
inc
mov
pop
lods
ljmp
cs
cwtl
pop
lret
jns
testb
mov
pop
and
pop
or
cmpsb
js
les
cli
imul
jecxz
cmp
jbe
lods
inc
push
mov
mov
lret
pop
shrb
adc
adc
cmp
insl
mov
mov
cs
loopne
add
mov
jmp
lock
inc
inc
movsb
arpl
bound
add
in
sub
stos
lods
ds
inc
sahf
mov
or
jbe
jge
shll
xchg
dec
test
sbb
test
sub
inc
pushf
push
rcr
add
mov
call
fistl
or
int3
pushw
das
clc
test
sarb
pop
add
or
cmp
mov
shll
cmpsl
lcall
inc
push
jle
lahf
dec
enter
leave
stos
iret
pushf
ljmp
or
pop
push
popa
or
ss
mov
call
cli
cmpsl
mov
cmp
push
pop
push
add
adc
shrl
dec
aas
jp
data16
ljmp
cmp
xor
lds
xchg
add
xchg
data16
insb
push
sbb
ja
pop
and
jmp
pop
out
xchg
xchg
orl
cli
out
dec
sub
pop
xchg
jle
fcmovb
cmp
push
mov
fisttps
je
mov
inc
cmp
dec
xchg
push
subb
xchg
xor
jge
outsl
inc
fwait
push
loope
pusha
lock
xchg
testl
cs
stos
mov
fcom
mov
inc
insl
sarb
push
add
jo
rcrb
gs
mov
lcall
xchg
xor
sbb
mov
flds
push
or
movsl
mov
xchg
addr16
add
sbb
push
stos
adc
or
fiadds
loope
mov
jl
ljmp
dec
lods
cwtl
xchg
dec
add
xchg
xchg
push
rclb
lock
cmp
mov
test
into
ret
adcl
les
xchg
mov
ret
mov
ret
in
arpl
mov
insl
and
xchg
ljmp
and
mov
xchg
mov
and
xchg
xchg
int3
insl
mov
dec
in
xchg
mov
popa
add
mov
fabs
mov
movsl
cld
sub
dec
adc
andl
ljmp
cwtl
test
mov
adcb
mov
pop
mov
test
push
push
or
push
adc
xchg
loop
jmp
data16
mov
sub
mov
mul
mov
mov
push
pop
inc
adc
lea
adcl
ss
hlt
jnp
push
mov
nop
fmul
sub
or
lods
dec
test
adcb
popa
mov
mov
or
shll
mov
lds
fwait
cmpsl
xor
cmp
ret
add
stos
sar
enter
mov
jno
inc
dec
lock
sub
loope
movsb
jno
push
leave
xchg
push
pop
or
popa
sbb
sub
add
ret
or
sbb
push
lahf
fimull
jb
loopne
xchg
xor
xor
das
xor
adc
pop
rolb
jmp
adc
out
pop
popa
mov
add
jae
add
jl
leave
add
out
ja
push
int3
clc
faddl
mov
lret
jle
ljmp
sbb
lods
xor
fimuls
pusha
mov
lret
loopne
aaa
inc
push
adc
idivb
adc
cmp
rsqrtps
jns
add
ss
xor
rorb
jae
mov
adc
add
sbbb
ja
pop
aad
xor
scas
jecxz
cltd
or
xor
jae
jmp
movsl
xchg
adc
xor
mov
js
icebp
cld
and
pop
mov
mov
orl
adc
cmc
cmpsb
in
add
fcoml
adc
push
mov
fwait
insb
clc
mov
adc
inc
add
clc
testb
push
scas
push
pop
ret
or
xor
mov
iret
cmpsb
outsb
jl
call
jle
mov
lret
aam
clc
add
xlat
les
jg
lfs
xor
mov
adc
je
dec
xchg
lret
ret
fisubs
movb
hlt
movsl
jbe
pop
cmp
in
lds
mull
push
mov
fnstsw
fs
ret
pop
out
add
cmpb
mov
sbb
cld
cmp
mov
sbb
mov
pushf
xchg
repnz
fsubrp
push
insb
int3
lods
or
adc
loopne
xor
in
add
fdivl
push
push
sahf
mov
dec
ja
rolb
cmpsb
sahf
rclb
ljmp
or
or
mov
sbb
aaa
mov
sbb
inc
push
fisubrl
push
and
rol
mov
test
mov
mov
xchg
push
pop
cli
jg
xchg
jno
scas
pusha
call
stc
inc
or
out
jo
iret
and
push
jp
int
sbb
ret
xlat
fisttpl
cli
mov
push
jae
fwait
mov
out
daa
push
mov
add
mov
ds
call
test
inc
sti
or
arpl
or
cld
cmpsl
insl
mov
mov
xchg
orl
mov
push
ret
aam
es
lret
lea
fs
jl
cwtl
inc
shlb
scas
out
lods
test
and
shlb
and
and
in
dec
mov
pop
test
push
xor
pavgb
stc
cmpsb
xchg
fcom
bswap
vphaddubq
xchg
test
push
ret
xchg
in
mov
sub
pop
push
lretw
rolb
sub
insl
adc
sub
push
sub
mov
pop
xchg
mov
cmc
dec
clc
scas
ja
jns
add
orb
nop
test
test
mov
adc
ljmp
fdivrs
add
ficoml
mov
adc
pop
mov
ljmp
pushl
frstor
int3
mov
fcoms
push
mov
dec
int3
scas
movsb
mov
test
pop
add
sahf
push
rcr
jg
adc
fstpl
repnz
icebp
jmp
pop
mov
fistpl
and
pop
ds
jmp
pop
mov
aam
sti
mov
inc
and
mov
sbb
imul
and
and
dec
imul
fsts
loop
dec
js
test
xor
fwait
inc
sub
mov
push
jecxz
stos
pop
imul
push
xchg
and
xor
cmp
ret
xorb
or
bound
sahf
es
mov
or
ljmp
clc
or
movsb
mov
nop
adcl
cmp
add
jne
les
scas
clc
inc
int3
cmpb
mov
jp
stos
push
adc
in
dec
cli
sbb
inc
fwait
dec
push
pusha
and
cmpsl
mov
inc
xchg
jmp
loope
aad
jp
sbb
movsb
dec
dec
iret
mov
mov
cmpsl
ret
adc
add
xchg
rolb
cs
cli
in
jp
icebp
adc
sbb
and
or
xchg
mov
sbb
push
ret
int
jno
xchg
lahf
in
and
lods
aaa
shrl
jge
fucomi
test
lock
fcompl
adc
mov
jecxz,pn
cltd
nop
stos
into
ret
push
test
mov
call
inc
das
mov
jo
and
push
dec
xor
mov
jle
xchg
sub
jb
xlat
mov
jmp
and
jmp
stos
and
and
cmp
int
mov
cmc
in
lcall
loop
mov
or
and
gs
mov
dec
inc
insb
push
mov
es
adc
lock
repz
call
shlb
push
insb
push
fsubl
adc
fnstsw
mov
decl
lahf
adc
lods
xchg
das
jo
lods
fs
push
sbb
test
lret
aaa
iret
sbb
pop
fisubrs
cmp
test
cli
movsb
pop
hlt
and
fsubr
js
mov
and
mov
jmp
dec
test
cmp
pusha
fs
hlt
cmp
push
adc
sarb
call
mov
or
sub
xor
push
aam
idivl
xchg
scas
mov
cli
xchg
int
xchg
test
test
and
pop
jmp
hlt
notb
push
cmp
outsl
or
clc
add
in
and
pop
sbb
cmp
fisubs
jo
shrb
test
lock
push
inc
std
pop
je
add
mov
pop
outsb
in
scas
and
push
fimull
notb
scas
stc
mov
in
xchg
xchg
movsb
push
fisubl
fwait
xchg
sub
je
add
sbb
sar
pop
xlat
jp
push
xor
mov
adc
pop
mov
cltd
cwtl
popa
lods
mov
cmovs
cmp
mov
sub
rorl
jg
mov
push
xchg
fdivp
xor
push
sbb
jle
xor
jb
sub
and
leave
xchg
cmp
adc
push
or
xchg
add
sarb
push
pop
mov
xchg
dec
aad
mov
jecxz
adc
jo
dec
xchg
sub
xor
bound
mov
mov
or
pop
jno
and
pusha
sbb
mov
mov
inc
out
fndisi(8087
add
shlb
pop
ss
sbb
repz
stos
in
pop
or
or
in
dec
mov
test
sbb
inc
dec
mov
js
sbb
push
pusha
outsb
test
lahf
or
shlb
ljmp
mov
pop
imul
sub
lcall
sbb
push
sahf
stos
add
mov
push
aaa
jl
pop
inc
or
ja
bound
mov
lods
xchg
ficomps
aaa
sub
xor
mov
inc
or
push
mov
test
aam
fidivs
lock
sahf
xchg
mov
sbb
loop
fs
enter
sub
sub
scas
and
cmp
xchg
enter
mov
xchg
insb
and
sbb
jnp
paddd
inc
in
push
stos
xchg
lods
mov
inc
mov
mov
popf
cli
xor
pop
es
inc
insl
dec
or
test
ret
pop
push
cli
test
jne
inc
aam
mov
mov
fdiv
int3
repnz
add
add
mov
cmp
test
jl
add
movsb
es
movsb
inc
loop
and
mov
rol
in
xchg
lea
mov
xor
dec
test
je
cltd
add
je
jp
aam
movsb
bound
inc
push
mov
in
dec
push
push
lcall
mov
hlt
out
std
stos
dec
mov
fwait
sbb
dec
xor
xchg
and
mov
ss
cli
pop
maxps
or
sbb
push
nop
cmp
mov
in
ret
or
mov
push
rol
loope
inc
cmp
cmpsl
das
add
sbb
fdiv
call
test
jbe
inc
ret
cmp
cld
out
stc
js
pop
fstpt
aam
jno
ret
or
adc
repnz
mov
xchg
ret
hlt
lods
pop
adc
xor
dec
mov
ret
jo
aam
hlt
insl
push
ret
rcrl
cmp
push
xchg
clc
sbb
push
ljmp
mov
bound
mov
dec
mov
add
mov
es
dec
js
hlt
inc
ja
push
btc
or
loopne
and
les
lea
outsb
push
and
jp
jp
out
negb
jecxz
and
bound
add
dec
or
jne
jno
pop
push
mov
lock
pop
scas
xchg
aad
sbb
jo
pop
or
jp
cltd
repz
pusha
jnp
pop
shlb
ds
jle
mov
fstpt
adc
inc
test
loope
or
stos
sub
sbb
mov
out
push
dec
pop
sbb
js
dec
pop
inc
cmpsl
mov
gs
data16
int
adc
cltd
push
stos
stos
std
and
xor
fldt
pop
push
xor
cmp
fildl
fiaddl
lahf
and
mov
loop
inc
hlt
jl
mov
sbb
mov
fisttpl
movsl
rcll
gs
lcall
xor
adcb
rolb
sbb
arpl
es
dec
test
test
sbb
insl
jle
push
test
movsb
jle
pop
mov
jl
aas
jo
icebp
cmp
stos
adc
je
lea
xor
dec
sbb
push
stos
mov
adc
or
cmp
mov
dec
jbe
cwtl
iret
dec
push
lcall
fildll
mov
loop
fisttpll
jp
out
or
sahf
cltd
jecxz
xchg
sarb
push
or
jl
movsb
lock
sahf
add
xchg
in
test
push
enter
mov
mov
sub
scas
sbb
dec
inc
subb
loopne
cmpsb
dec
dec
pop
inc
lcall
jecxz
cmc
fcmovbe
jno
outsl
pop
push
xor
sbb
cmp
rcr
mov
sub
out
outsb
call
pop
inc
loope
test
stos
nop
push
je
dec
xor
leave
xor
push
jno
shrb
aam
mov
clc
sub
mov
xor
mov
loope
sub
jne
mov
mov
dec
mov
mov
gs
and
jbe
xchg
imulb
push
pop
push
mov
fldt
jbe
aam
data16
mov
mov
fdivrp
add
clc
stos
fisttpl
push
call
push
test
loop
or
js
jp
lock
mov
xor
jp
and
arpl
mov
push
leave
mov
jo
sbb
movsb
xor
fdivs
inc
rolb
push
outsl
pop
lret
mov
jo
fldenv
int3
pop
jbe
outsb
cli
shlb
mov
popf
ljmp
insb
pushl
fucomip
xorb
xchg
pop
cltd
inc
and
js
hlt
sbb
or
leave
aaa
xchg
add
xor
dec
dec
sub
pop
inc
jo
jae
and
xchg
mov
mov
push
imul
push
dec
mov
fucomi
mov
mov
add
repz
dec
push
arpl
push
stos
push
sbbb
push
stc
aad
movsb
arpl
or
pop
out
cmp
and
add
lods
sbbb
or
shll
scas
lock
insb
testl
dec
xlat
cmp
icebp
aam
cmp
lcall
mov
stc
aas
lcall
out
hlt
icebp
jmp
inc
inc
or
push
adc
sub
sub
mov
inc
mov
out
in
gs
mov
lock
cmp
xchg
adc
pusha
xchg
outsl
movsb
add
and
or
iret
cltd
rorb
sbb
dec
push
mov
pop
sbb
mov
lcall
mov
cmp
push
fistps
stc
lods
sbb
cli
ss
into
pop
or
pop
mov
and
mov
mov
loop
pop
push
pop
idivl
and
and
mov
jns
jp
orl
hlt
push
dec
ss
sldt
mov
add
in
fmuls
xchg
mov
add
shrb
cmp
mov
ds
stos
add
adc
in
push
add
inc
in
xchg
inc
push
add
andb
mov
mov
les
sub
add
and
add
lods
xor
movzbl
add
aam
dec
jle
lods
rorl
mov
mov
dec
mov
or
enter
push
lahf
movsb
icebp
ret
sbb
icebp
jne
mov
imul
data16
push
cmpb
in
mov
imul
add
dec
pop
mov
adc
ret
pop
push
outsb
fldl
adc
mov
xchg
push
xor
mov
gs
add
and
outsb
ror
cmp
jno
sub
cmc
adc
xorl
rclb
loop
dec
xor
push
dec
enter
std
mov
mov
es
stc
mov
add
xchg
mov
lahf
data16
aad
in
ds
pop
dec
loop
jne
stos
loopne
sub
mov
push
into
and
xchg
arpl
jo
mov
push
mov
mov
pusha
and
rorb
mov
sub
movsl
dec
sahf
es
lods
push
movsb
popf
stos
movsb
fdivrp
sahf
cmpsb
lock
imul
and
into
outsb
cmp
pop
lret
dec
les
cmp
enter
mov
xor
push
imul
iret
fsubrs
push
cli
sub
xor
mov
pop
dec
pop
cmc
jne
pop
dec
stos
push
push
inc
outsb
xor
cs
xor
sub
outsb
test
add
pop
mov
cmpsl
xchg
mov
push
sbb
loop
sub
cwtl
aam
inc
jge
jecxz
xor
fidivs
repnz
fidivs
pop
jmp
leave
sbb
rdpmc
lods
push
pop
inc
cmpb
fs
stc
clc
outsb
add
or
mov
into
pushf
push
icebp
ficoml
mov
out
lods
in
pop
jb
add
push
sahf
iret
or
into
loope
insb
psubb
lods
outsb
sub
push
out
fst
sub
stos
mov
sub
push
sahf
pop
test
xlat
xchg
mov
inc
out
adc
mov
lock
icebp
leave
add
movsb
push
ret
mov
inc
sub
sub
mov
outsb
add
mov
mov
mov
adc
les
adc
imul
sbb
jl
cs
mov
ret
adc
add
or
es
jne
andb
sub
push
adc
add
adc
inc
sbb
shlb
and
ret
push
ret
cmpsb
sbb
and
call
mov
pop
inc
lret
jo
sbb
outsb
inc
push
push
pusha
jno
inc
aaa
xorb
fsubrl
in
add
adc
push
pop
and
mov
push
xor
fwait
pop
xor
inc
xchg
sub
imul
rol
inc
call
mov
iret
iret
lcall
sbb
pop
stos
cmp
rolb
xor
xchg
int
push
xchg
cli
xlat
dec
jo
jp
add
pushf
xchg
mov
and
push
mov
mov
jae
mov
sub
pop
cmp
pop
jmp
ds
push
stos
cmp
sub
in
cli
xchg
mov
into
test
mov
movsb
test
cmp
int3
push
shlb
test
xchg
movsb
push
pop
ficoml
sub
xor
into
or
int3
loope
jle
add
jp
adc
je
jecxz
inc
pop
xchg
push
mov
push
insl
imul
fdivrl
jmp
xchg
insb
andb
mov
or
pop
pop
imul
getsec
fsub
add
fld
add
cmc
inc
jbe
mov
insl
push
inc
outsl
xchg
popa
sbb
jge
pop
inc
push
daa
mov
or
cli
test
add
cli
lret
mov
push
outsb
push
test
add
sbb
ds
mov
scas
and
mov
in
push
gs
loope
mov
xorb
xchg
cmpb
sbb
mov
jecxz
ljmp
call
ret
pop
pop
jb
gs
jne
arpl
roll
negl
loope
xchg
mov
in
jno
dec
xchg
pusha
ss
add
lret
aam
adc
scas
adcl
or
ljmp
bound
lods
fimuls
mov
mov
cmp
in
cmp
sahf
outsb
and
stos
mov
push
fsubr
add
sbb
mov
incl
rolb
fmul
sahf
jo
cld
stc
mov
mov
xchg
adc
rol
xor
out
mov
jp
popa
inc
lods
popf
das
inc
push
fbld
inc
clc
push
imul
fs
nop
pop
xor
mov
mov
dec
sub
ds
mov
jb
into
arpl
test
lcall
sub
xchg
push
clc
sub
test
mov
mov
out
mov
mov
cmp
mov
in
cmp
roll
mov
xchg
das
sbb
out
pop
sbb
movl
push
jmp
hlt
fisubrl
or
jge
sbb
xchg
push
addr16
fists
ds
out
cmp
fsubr
orb
pop
inc
inc
mov
insb
jbe
mov
dec
xchg
test
inc
push
inc
add
fincstp
test
or
add
repnz
jl
shl
test
dec
loopne
and
in
inc
add
jo
in
push
mov
xchg
mov
push
push
sub
les
push
xchg
lock
pushf
es
scas
mov
add
je
cwtl
inc
and
jb
mov
clc
inc
call
xor
test
or
push
add
sbb
icebp
cmpsl
enter
adc
enter
push
lods
rclb
mov
sbb
outsb
adc
dec
xchg
leave
pop
fiaddl
lret
enter
mov
dec
push
sti
pop
xchg
popf
or
mov
gs
push
ret
xor
inc
dec
mov
mov
lods
push
fldl2t
stos
jbe
jmp
sub
cmp
jl
cli
mov
mov
jb
inc
orb
mov
mov
and
mov
xchg
sbb
xlat
xor
inc
decl
cmp
je
out
inc
xchg
out
out
enter
xor
dec
mov
in
aad
lods
leave
sahf
aam
mov
lods
bound
dec
dec
add
pushl
lret
xor
mov
mov
mov
andb
testl
push
enter
mov
les
inc
rolb
cmp
push
es
push
jp
mov
dec
call
or
fs
fstps
xchg
inc
loop
xchg
nop
outsb
lahf
mov
and
scas
movsl
lods
mov
jge
sub
incb
icebp
push
adc
mov
loopne
aad
and
test
jge
fdivr
inc
rorb
filds
cmpl
lret
or
outsb
xchg
push
frstor
or
mov
add
mov
xor
mov
cmpsb
loopne
push
and
jl
lcall
aas
nop
iret
push
std
repz
dec
fimull
sub
jmp
nop
xchg
mov
pop
mov
inc
xchg
push
and
pushf
cld
jmp
mov
jnp
xadd
inc
adc
dec
mov
loop
jno
sub
mov
sbb
push
xchg
rcll
fsubrs
mov
xchg
cmp
into
out
inc
test
push
scas
mov
mov
mov
xchg
aam
sub
fwait
xchg
icebp
jne
and
and
out
jo
xchg
push
pop
std
lods
push
cs
jns
sbb
mov
ss
cli
pop
pushf
es
lods
xor
xor
test
and
add
push
jg
xchg
cmp
in
xlat
mov
jmp
push
lcall
jl
pusha
jle
jle
sbb
ret
mov
dec
push
dec
mov
dec
push
shrl
or
mov
fidivrl
cs
mov
xor
mov
gs
and
pop
cmp
pusha
pop
adcl
insl
push
mov
call
das
mov
xor
cmpsb
cld
pop
bound
push
add
xor
aas
fbld
sub
mov
outsb
jge
mov
fs
jnp
ljmp
shll
loopne
lcall
pop
mov
in
pop
out
sahf
cmpb
clc
xchg
je
pop
mov
push
sbb
into
pop
mov
dec
test
sub
add
movsb
mov
mov
cmp
xchg
jmp
mov
add
mov
daa
filds
test
cld
jne
xchg
imull
dec
mov
mov
sbb
mov
push
adc
jp
mov
adc
ret
ret
push
in
les
leave
imul
xchg
push
or
jle
movsb
out
mov
inc
sbb
mov
adc
or
sarb
movsl
and
fdivrs
jp
xchg
jno
nop
ss
mov
mov
pop
push
loope
jg
pop
hlt
mov
and
lock
mov
and
imul
out
dec
jge
ja
mov
into
mov
sbb
leave
fwait
sbb
cmp
xor
aas
rorb
inc
aam
inc
hlt
add
popa
aad
inc
or
adc
ror
xchg
and
sbb
xchg
or
xchg
sbb
testl
push
fsubp
mov
and
inc
mov
hlt
xor
lcall
mov
jno
jae
jp
pop
pushf
sbb
sbb
ret
xor
xor
xlat
xchg
or
dec
insl
loope
in
dec
std
addr16
pop
bound
sarl
out
mov
pop
mov
ja
lods
mov
cmp
or
mov
add
mov
pop
bound
test
inc
hlt
add
and
xchg
xchg
stos
jnp
cmpsl
call
clc
jl
hlt
lahf
jmp
into
and
stc
sub
lods
pusha
add
in
xor
xchg
ljmp
pop
sbbl
arpl
ficomps
or
popa
out
je
cmp
repnz
in
or
out
mov
test
stos
adc
ss
jo
inc
push
rorb
ret
mov
xchg
xor
adc
push
inc
ret
out
or
inc
clc
add
xlat
leave
inc
cli
and
sbb
mov
lret
cmp
cmp
jmp
xchg
pop
xchg
adc
jg
or
pop
mov
test
dec
cmp
rorb
sti
loop
std
or
and
enter
lahf
mov
xchg
add
fisubl
mov
out
xorb
enter
mov
push
daa
adc
aam
fdivrs
push
mov
popf
or
jns
jno
in
adc
dec
insl
sub
aad
push
pop
lock
pushf
sbb
ljmp
cltd
sub
pop
ret
adc
rol
stc
cmp
lds
xchg
call
dec
push
mov
mov
lea
push
outsl
pop
lahf
adc
fcoml
push
jb
aaa
fistl
lcall
xor
xchg
pop
sub
push
std
inc
push
dec
add
orl
adc
call
mov
sbb
mov
cmpsl
out
mov
cmp
rcr
sub
faddl
xor
clc
push
xor
lock
pop
or
inc
int
and
pop
test
in
cmp
push
loopne
ret
mov
into
xchg
mov
inc
mov
and
int
pop
cmp
idivl
sbb
lret
cmp
mov
sbb
mov
movsb
push
in
mov
jge
daa
mov
mov
ja
push
sbb
dec
or
mov
mov
jno
loope
bound
fcomps
pop
add
push
cs
jno
jge
ret
xor
adc
add
xchg
ss
cmp
or
sbb
jbe
daa
mov
cmc
and
ficoml
xchg
fisubs
loop
inc
ret
aam
nop
add
jns
dec
jge
fistpl
lods
pop
xchg
mov
int3
xchg
push
and
adc
jbe
in
sbb
lods
or
xor
push
in
xor
or
adc
sbb
mov
nop
pop
out
push
jecxz
arpl
ss
sub
outsb
mov
add
add
add
jns
sub
or
sahf
sbb
ret
cmp
xchg
sub
lods
push
dec
add
sub
adc
pop
adc
xor
lret
inc
mov
pusha
repnz
push
fisttps
rolb
push
pop
cmp
mov
in
and
mov
push
cmpsb
andb
movsl
inc
mov
repz
sbb
nop
push
push
daa
cmp
pop
test
orl
shlb
loope
ja
sub
mov
cmp
dec
inc
sbb
mov
mov
outsl
mov
sub
inc
xor
dec
or
cmp
shrb
mov
fstpt
pushf
pop
into
outsb
test
into
test
and
push
je
add
mov
and
gs
push
inc
das
push
fisubl
ljmp
pop
adc
dec
addl
hlt
push
inc
pop
dec
mov
aam
inc
cli
sahf
sar
xchg
pop
shlb
lret
pop
sbb
hlt
bound
mov
xorb
outsl
jb
clc
jge
and
repnz
sbb
and
cmp
push
jbe
inc
mov
mov
pop
loop
loope
aam
in
xchg
mov
out
mov
push
sub
jecxz
cmpsl
dec
jbe
mov
jmp
mov
pop
pop
clc
add
ret
lea
or
jge
scas
pusha
dec
hlt
shll
lock
dec
add
pop
cmpsb
inc
xlat
out
mov
push
lods
xor
push
aam
std
daa
pop
push
xchg
fdivrs
inc
lock
call
lea
pop
aam
jmp
push
pop
decb
mov
test
pop
ret
bound
cwtl
xchg
cmp
rcr
cmp
pminsw
stos
pop
xchg
dec
jecxz
jo
int3
xlat
cmpsb
xor
cmp
inc
sub
pop
and
mov
mov
xor
test
pop
movsb
retw
sarl
in
sub
stos
jmp
sarb
add
sbb
mov
jecxz
xchg
aaa
push
mov
or
icebp
gs
mov
mov
mov
outsb
xlat
add
mov
js
in
add
mov
movsl
xor
jbe
out
sub
mov
xchg
adc
sub
dec
or
ret
sbb
nop
addl
jmp
call
mov
aas
inc
jmp
test
movsl
xor
jg
lahf
inc
cltd
and
in
or
in
add
jae
pop
mov
add
das
mov
mov
imul
mov
push
push
xchg
adc
pop
jg
in
jp
mov
in
and
test
add
lea
int
dec
cs
lahf
adc
jne
lock
out
leave
adc
xor
sbbl
loop
pop
mov
leavew
test
push
lahf
aam
inc
pushfw
xchg
pushf
mov
pop
pop
mov
xchg
sbb
push
push
jge
lods
scas
adc
mov
pop
fldl
movsb
add
sub
or
imul
adc
pop
out
mov
mov
push
push
sbb
cmp
jnp
mov
int3
cmp
jno
movsb
scas
inc
jl
out
sub
sti
loope
cmp
cmp
mov
scas
adc
ret
inc
aaa
cmp
or
hlt
mov
mov
and
sub
add
inc
fld
or
pop
arpl
dec
dec
aas
adc
xlat
lret
test
dec
jg
sub
js
sub
inc
sarb
xlat
sar
xchg
pusha
rorb
push
ret
test
pop
in
mov
or
push
sbb
push
jmp
test
sahf
push
test
ret
insl
xchg
pop
enter
mov
shlb
fucom
cmc
mov
jge
cltd
push
clc
mov
pop
hlt
xchg
adc
mov
push
aas
sbb
jnp
imul
sarb
stos
sub
inc
add
lahf
push
pop
sbb
clc
fists
pop
leave
or
add
negl
dec
nop
scas
jo
or
xorl
xchg
pusha
mov
jbe
mov
js
sbb
ljmp
jo
cmpsb
into
pop
movsb
lcall
mov
je
sub
sti
rclb
sbb
cmp
ljmp
cmp
fstl
and
inc
jne
mov
mov
seto
lock
mov
or
sbb
out
xchg
je
xor
and
inc
insl
push
icebp
fs
lock
inc
hlt
fmulp
loopne
mov
and
xor
in
lret
shlb
xchg
scas
xor
das
xlat
loopne
jae
sub
mov
lret
nop
clc
xor
xor
lods
scas
lret
jge
inc
lahf
ficompl
sbb
fwait
cwtl
insl
jmp
inc
testb
add
mov
mov
add
sbb
lds
inc
inc
stos
or
clc
pusha
mov
fwait
sbb
cmp
sub
mov
mov
test
shlb
and
call
mov
sub
sub
sahf
ss
push
lods
nop
add
pusha
push
pusha
lods
adc
sbb
sbb
jno
push
mov
mov
ds
jg
jp
adc
shrl
sbb
gs
sub
xorb
ret
jecxz
push
add
add
pop
insl
clc
dec
jl
push
push
add
dec
loop
fnstenv
das
xor
daa
lods
mov
jecxz
add
mov
fwait
inc
loopne
mov
push
push
push
dec
popl
iret
jbe
dec
push
push
mov
push
push
sbb
mov
push
dec
or
rcll
pop
mov
gs
sbb
sahf
fisttpll
xchg
lods
sbb
inc
aad
and
xchg
es
or
test
push
call
mov
and
or
sahf
pop
fiadds
pop
int
dec
xor
out
mov
cmp
xorb
sub
int
lahf
mov
mov
testb
scas
pushl
mov
cmpsl
loopne
adc
pushf
push
push
push
and
xor
add
pusha
sbb
jmp
sbb
lock
dec
xor
pusha
mov
dec
popf
cli
inc
test
add
test
in
loop
das
insl
test
inc
jo
fdivl
push
sbb
push
inc
outsb
inc
mov
jns
or
mov
arpl
inc
adc
fwait
mov
inc
cmpsb
scas
mov
stos
xor
add
jl
push
add
jge
fwait
insl
adc
adc
test
mov
aad
dec
dec
stos
mov
sbb
mov
insb
out
stos
pushf
add
push
movsb
shr
hlt
mov
subl
int3
mov
inc
xchg
add
mov
push
xchg
jne
hlt
ret
sub
addr16
mov
or
ds
mov
fimull
negb
stos
inc
or
out
sbb
ret
push
pop
cmpsb
test
imul
jo
sidtl
out
or
dec
movsb
sub
out
cld
inc
iret
mov
aaa
jge
daa
scas
pushf
test
jecxz
inc
sub
xor
inc
shlb
push
push
inc
mov
out
mov
ja
cmc
idivl
js
add
lock
cwtl
cli
xor
js
push
lods
xorb
add
and
sbb
push
jl
push
and
push
cli
inc
and
loopne
movsb
inc
sbb
or
fadd
cli
jo
aas
ljmp
icebp
scas
mov
loopne
lcall
dec
inc
xchg
mov
lret
cli
dec
push
mov
nop
ret
loopne
jp
dec
fimull
sarb
dec
roll
bound
sahf
jle
and
pop
cli
mov
jl
mov
inc
and
jle
lsl
push
xchg
repz
int
lock
and
add
je
mov
dec
or
xchg
mov
lret
icebp
stos
stos
xchg
fdivrs
fs
mov
jl
sbb
nop
sub
jg
add
insl
inc
call
xchg
pushf
js
fimuls
pop
subb
shlb
pusha
xchg
stos
and
adc
aam
cmpsb
loope
shll
clc
cmc
js
clc
incb
push
add
ret
push
push
pop
cmp
in
pop
arpl
ds
lahf
sbb
outsl
xor
mov
and
sbb
pop
rcrb
call
mov
pop
aad
xor
call
loopne
fmuls
push
pop
aaa
dec
push
incl
sbb
fistpll
orb
jecxz
or
inc
je
test
sbbb
mov
aaa
mov
xor
sbb
cs
in
test
push
subl
enter
or
adc
adc
ss
fcoml
add
jecxz
jno
mov
imulb
jl
push
jp
call
ljmp
ljmp
cmp
xchg
test
add
xchg
les
mov
cmp
mov
and
and
adc
sub
jle
je
adc
jecxz
lahf
outsb
clc
popf
mov
or
test
xor
xchg
pusha
push
test
orl
call
xchg
push
push
rcrb
inc
outsb
or
aaa
adc
jno
out
push
push
jne
dec
sbb
daa
add
adc
jne
adc
cld
mov
sub
mov
sbb
jp
into
push
incb
popa
orl
lcall
stc
sub
dec
sbb
jo
jl
and
arpl
push
mov
fbstp
stos
dec
jmp
insl
popa
jle
or
les
pop
fcoms
pop
loopne
popa
adc
push
fcomi
cwtl
adc
sbbb
imul
aaa
mov
test
cwtl
push
aaa
insb
mov
mov
mov
push
pop
or
push
dec
add
cmpsb
fiadds
enter
sbb
mov
push
rcrl
dec
or
inc
das
or
aaa
stos
fadds
cs
cmp
ljmp
cmp
loopne
mov
push
sub
nop
mov
add
xor
jecxz
in
out
push
imul
test
outsb
loopne
or
adc
fwait
or
or
jl
mov
jecxz
shl
fdivr
lea
mov
and
adc
shlb
outsl
sub
mov
push
outsb
mov
fs
pop
fcmovnbe
xchg
loopne
scas
cs
lock
push
aad
arpl
rorb
push
add
push
bound
xor
xlat
cmpsl
jp
rcrl
shll
sbb
inc
test
push
fbstp
sbb
or
cmp
loopne
cmpsb
insb
fdivrs
testb
jb
push
cmc
dec
test
push
loopne
or
dec
sbb
adc
push
xor
pop
push
sub
cli
sub
mov
clc
jg
mov
or
notb
cmc
and
and
adc
adc
push
xor
adc
dec
push
lea
push
push
cmp
scas
shll
sub
rcrb
in
outsl
xchg
fs
jle
push
adc
mov
fnstsw
sub
xor
pop
cmp
cmpsb
iret
out
fisubrl
or
add
inc
je
inc
mov
test
pusha
xor
pop
mov
mov
add
and
fsubl
in
xor
loope
pushl
jns
mov
pusha
mov
cs
ds
add
add
xchg
push
iret
inc
push
xor
orb
data16
ret
ljmp
or
clc
scas
and
add
adc
pushf
and
aam
xor
cmp
lds
xchg
xchg
mov
adc
adc
mov
sahf
outsl
lock
cwtl
ds
loop
and
mov
sarl
sbb
hlt
dec
xchg
sub
adc
cmpsb
orb
jo
jge
inc
mov
jae
setne
adc
and
and
mov
inc
mov
mov
push
jae
adc
mov
cmpsl
jne
sub
sbb
mov
jge
popf
push
arpl
sbb
sub
sbb
jne
or
insl
inc
aad
aas
jle
rorl
inc
add
cmp
adc
mov
fs
jae
or
pop
dec
rcrl
dec
mov
push
aad
lock
fcmovne
push
or
and
leave
jbe
mov
out
mov
mov
lret
loop
add
add
or
call
jp
mov
push
mov
cmp
daa
xchg
cmp
mov
push
call
and
stos
push
jo
add
hlt
loopne
jo
lods
inc
shll
loopne
xchg
test
sbb
xchg
and
or
addl
ljmp
jb
test
enter
fistps
mov
sbb
addb
jnp
outsb
lea
sbb
decl
add
bound
daa
jecxz
into
call
ret
scas
pop
mov
cmp
xchg
loopne
mov
inc
jb
mov
loopne
fbstp
push
into
jno
xor
or
add
xor
cmp
and
insb
lahf
dec
add
sbb
mov
mov
lcall
mov
iret
test
sub
adc
fildl
jno
and
pop
inc
leave
jo
mov
cmp
into
cmp
ss
clc
mov
jae
dec
fucomi
jmp
adc
cltd
dec
mov
or
xchg
jne
and
xchg
insb
xchg
mov
pop
orl
sbb
popa
mov
les
clc
or
mov
loope
gs
clc
insb
lea
push
hlt
mov
push
inc
sbb
pop
jno
xchg
popl
dec
ds
jno
cltd
movb
adc
add
sub
mov
mov
dec
cmpsb
pop
and
testl
push
or
orl
xor
or
movsb
jns
sbb
hlt
out
test
outsb
xchg
xchg
jle
lds
in
pop
xor
sar
iret
or
loope
movsb
cld
mov
xchg
pop
fwait
xchg
pop
imul
or
neg
push
lds
mov
vphaddubq
jo
xchg
cmp
imul
add
lds
lret
call
test
or
inc
inc
push
push
icebp
adc
outsb
xchg
mov
or
clc
push
sub
hlt
sub
mov
mov
xchg
arpl
loope
and
jnp
push
je
and
xchg
xchg
inc
mov
sub
inc
or
ds
fsubs
cmp
add
xchg
sbb
mov
pop
cmp
inc
test
add
das
out
xchg
mov
lcall
mov
inc
testb
jg
clc
dec
cmpsb
loope
pushl
sub
and
cmp
mov
loopne
mov
andb
addr16
popa
pop
cld
arpl
jno
mov
cmp
movl
lret
inc
ret
fstl
jecxz
xchg
rclb
stc
xlat
lea
or
push
adc
cmp
adc
stos
mov
xchg
inc
xor
mov
push
loope
stos
fisttps
shr
mov
sub
dec
imul
mov
push
into
dec
mov
add
sbbb
jmp
aaa
mov
fs
push
dec
and
into
call
leave
sbb
ret
xorb
jge
imul
shrb
inc
push
adc
xchg
ds
call
fcmovb
mov
sbb
fidivrs
aas
jp
mov
aam
negl
lock
lea
adc
test
xor
shl
shll
cli
iret
mov
ss
stos
enter
dec
ret
clc
or
dec
inc
adc
xor
add
add
stos
add
sbb
xlat
nop
mov
aad
adc
jae
and
add
iret
pop
stos
fldt
pop
add
pop
mov
lea
loopne
rclb
mov
or
sub
pop
insb
adc
cmp
sbb
arpl
jne
cmpsl
adc
push
daa
push
push
adc
push
mov
insb
ljmp
call
stc
icebp
movsb
cltd
mov
es
cld
and
push
cmp
xchg
push
and
cmp
sbb
sub
xchg
pop
mov
mov
pop
mov
cmpsl
es
idivl
or
int3
xor
lds
sub
into
mov
les
and
jbe
nop
subl
adc
insb
add
andl
and
ret
dec
cmp
int3
push
daa
divb
sbb
or
push
fs
loope
out
rcl
pushf
addl
int3
ja
dec
clc
cmc
or
mov
scas
sarl
push
adc
sub
je
arpl
dec
mov
add
mov
pusha
fcompl
push
push
mov
call
aas
xor
pop
shrb
js
push
pop
outsl
jg
cmp
fucomi
bound
cmp
fmul
push
int3
fs
and
dec
fistl
mov
loopne
ljmp
add
test
cwtl
sbb
xchg
stc
bound
outsb
dec
add
jg
repz
xlat
adc
stos
fnstenv
ds
movl
mov
addr16
mov
mov
inc
xor
icebp
sarl
mov
rclb
jb
sbb
push
loop
ficompl
adc
rclb
pop
rcrb
adc
aam
scas
enter
push
cltd
inc
add
in
lock
aas
clc
inc
xchg
inc
xor
sti
cmp
cli
mov
mov
fstps
mov
in
lcall
mov
mov
jnp
scas
mov
notl
imul
cmpsb
scas
ret
fsts
add
mov
cltd
add
stos
adc
cs
ss
pusha
repnz
dec
adcb
xchg
jge
addr16
xlat
cwtl
xchg
clc
xchg
pop
xor
xor
dec
add
ficompl
pop
ret
out
jo
dec
xchg
aam
aas
testl
adc
cmp
adc
lret
out
test
inc
aad
stos
rcll
fstpl
push
cmp
fcmovnu
cmp
xor
mov
fs
loopne
xchg
scas
aam
insl
les
adcl
xchg
xor
pop
mov
xchg
xor
ss
int
stos
dec
das
xchg
sete
push
out
lds
lret
enter
xchg
inc
and
rolb
jge
mov
movsb
fmuls
insl
shrb
scas
clc
push
sbb
jns
or
lods
dec
and
add
addr16
andl
mov
imul
cmp
xchg
js
hlt
mov
mov
mov
dec
cld
loopne
std
pop
aas
lahf
cmpsb
dec
cmpb
xchg
enter
cld
out
aas
jmp
hlt
aad
push
fnstsw
and
mov
push
mov
sahf
xor
jo
out
inc
icebp
push
push
pop
rclb
mov
rorl
sbb
in
jl
sub
sub
outsl
mov
xchg
or
rcrb
mov
xchg
add
aam
dec
sbb
mov
ret
adc
js
mov
insb
popf
lock
daa
imul
js
push
and
adc
push
ret
rorl
ss
xor
jp
xchg
imul
push
hlt
lea
repz
ja
dec
cmpsb
add
iret
xchg
dec
pop
sbb
jbe
add
mov
into
mov
add
std
fbld
imul
cmp
jle
lods
lds
mov
inc
push
xchg
and
xlat
stc
jnp
jno
mov
test
push
xchg
adc
push
out
dec
adc
outsl
pop
lea
sarb
outsb
dec
sbb
pusha
fwait
cmpsl
push
dec
sti
adc
adc
gs
cmc
stos
or
pushf
sar
add
stos
shl
sqrtps
jbe
lods
dec
xchg
icebp
rcrl
inc
lds
stc
sub
fwait
mov
or
or
mov
mov
xchg
cmpsb
cmpsl
aad
jno
fsubl
jne
cld
cmp
jbe
sub
push
xchg
cs
outsb
rorb
sahf
xchg
mov
mov
mov
lret
cwtl
xor
mov
scas
ret
dec
push
add
in
stos
xchg
lock
jb
in
aam
mov
fnstenv
xchg
int3
push
and
jnp
fiadds
imul
pop
pop
lcall
adc
adc
sbb
fadds
jne
mov
mov
xchg
xchg
shlb
jge
mov
jmp
push
scas
daa
and
int3
decb
or
ret
pushl
add
xor
bound
mov
arpl
dec
jo
pop
loop
or
clc
in
jge
or
gs
scas
cld
mov
xchg
fldt
pop
mov
jno
push
leave
scas
mov
add
addr16
push
cmp
sub
ja
cli
adc
cmp
sbbl
cmp
repz
sar
mov
jbe
mov
pop
insb
fwait
add
fwait
and
cmp
icebp
and
xor
jo
adc
pop
bound
lock
or
jle
push
sub
cmp
sti
or
mov
in
adc
jbe
cmpsb
jo
loop
test
daa
lcall
pop
cmp
lret
mov
and
dec
pop
xchg
scas
cld
int3
scas
stc
adc
sbb
inc
pop
test
pop
loop
dec
xor
scas
call
mov
arpl
mov
push
fstpl
fadds
mov
lds
cmpsl
mov
jae
inc
daa
pop
outsb
adcb
aas
push
jo
mov
or
jae
push
gs
dec
js
mov
imul
mov
push
mov
cmc
enter
mov
gs
ss
pusha
lock
pop
push
ret
adc
jns
xor
mov
pop
bound
inc
xchg
imul
scas
mov
test
cmp
cmpb
and
jmp
push
enter
gs
push
push
sbb
mov
loopne
push
xchg
mov
sub
xchg
cltd
sbb
sbb
push
mov
ljmp
frstor
lret
mov
xor
adc
jmp
inc
les
ljmp
add
cwtl
jecxz
dec
ja
testl
insl
imulb
dec
icebp
sti
cli
ret
or
test
add
out
jbe
push
mov
adc
mov
push
cmpb
fdivr
mov
sbb
xor
xor
adc
jge
xchg
test
or
mov
mov
mov
cs
and
jmp
rcll
imull
clc
dec
movsb
adc
inc
mov
xchg
push
orb
or
cmpl
sbb
adc
aam
aaa
sub
imul
sub
inc
imul
mov
push
data16
loope
cltd
jecxz
lret
mov
add
ret
insl
cmp
dec
nop
dec
jge
cmp
and
mov
inc
dec
dec
xchg
das
ljmp
sbb
mov
push
jb
cmp
imul
push
push
faddl
in
fnclex
shl
cmp
insb
lods
shrb
shl
outsb
movsb
dec
movsl
ficompl
pop
sbb
cmp
and
add
xchg
jp
insb
xlat
inc
add
xchg
adcl
movsb
pop
loop
scas
and
inc
outsb
add
add
inc
andl
add
pusha
mov
ficompl
lds
stos
inc
pop
sbb
sbb
sbb
pop
test
add
cs
cmp
pop
cld
lcall
shll
loope
adcb
mov
add
popa
pop
xchg
dec
out
cmp
and
or
dec
add
addr16
mov
jg
xchg
iret
push
lods
inc
lret
pop
sbb
xchg
imul
test
inc
push
mov
fs
fldl
loopne
pop
int3
xor
insb
mov
dec
out
xor
push
add
ss
xlat
lods
dec
outsb
jg
cmp
sbb
inc
push
and
icebp
mov
test
sub
sti
add
add
sub
lock
sbb
adc
mov
fnstcw
sarl
jle
pop
xchg
imul
dec
add
push
stos
xor
mov
sub
cwtl
call
test
push
mov
sub
sbb
pushl
cmc
out
mov
xor
jae
ret
xchg
mov
add
cld
push
jb
or
test
leave
sarl
jnp
enterw
pop
xchg
ret
mov
or
ljmp
fistps
or
shlb
mov
cmp
ret
sbb
add
or
aaa
inc
ja
inc
in
jae
cmp
cmpsl
inc
clc
inc
dec
scas
push
or
daa
cmc
sbb
shrb
or
iret
ret
pop
insl
sbb
sub
sub
aam
lahf
push
notb
inc
lods
jne
cmp
push
imul
sub
rcr
js
lea
mov
cmpsl
sub
and
fisttps
fdivr
out
push
lods
inc
inc
adc
mov
push
cmp
mov
lds
xchg
jecxz
std
sbb
clc
push
sbb
mov
mov
sti
or
xchg
call
scas
jbe
adc
push
das
pusha
sub
in
mov
sub
jne
lret
test
rorl
pop
sbb
or
cmp
jmp
loopne
out
inc
sbb
ljmp
pop
pop
popf
pusha
loope
fdivrp
in
and
push
popf
hlt
jmp
xor
adc
into
adc
xor
pop
movsb
out
insb
cli
add
ret
jecxz
bound
mov
cli
aam
popf
ds
mov
jecxz
pop
mov
int3
and
sbb
jle
sahf
fbld
push
jg
ss
pop
xchg
rcrb
xchg
xchg
xlat
call
sub
dec
mov
push
shl
lods
popa
pop
push
inc
mov
test
negb
cmp
fldt
jle
mov
and
jbe
mov
sahf
in
cltd
dec
xor
es
lret
xor
outsl
subb
icebp
ret
addr16
dec
or
ljmp
inc
xor
mov
mov
cmp
pop
jmp
lret
xor
sbb
jbe
flds
mov
mov
xchg
xchg
or
fstpl
icebp
test
pop
dec
or
or
sti
mov
or
pop
and
xor
sbb
or
fsubrs
cmp
testl
rcrl
loope,pn
aad
into
xorb
push
repz
stc
inc
xor
orb
jne
popa
and
inc
mov
mov
rorl
pop
ficoms
divl
in
push
scas
mov
mov
movsl
les
cltd
and
mov
shll
lods
scas
rclb
dec
das
xor
cmpl
daa
jl
push
pop
inc
movsl
pop
jg
push
cmp
add
into
hlt
xor
dec
mov
fstl
mov
lret
aas
rolb
outsl
sahf
mov
rcl
cs
shlb
cmp
jmp
cs
aaa
mov
pop
mov
pop
lds
jge
dec
mov
les
pop
lock
xor
cmc
push
adc
add
mov
inc
jo
outsb
mov
ds
mov
movsw
jne
rolb
test
and
cli
shl
pop
add
les
mov
cmp
mov
or
movsb
mov
cs
lods
mov
sub
xchg
ficomps
sbb
iret
xchg
mov
pop
dec
fsub
or
cmc
pop
dec
movsl
and
mov
shlb
mov
scas
push
in
test
add
mov
cs
inc
loope
fwait
pop
testl
fucomi
adc
aas
jge
sub
in
pusha
or
stc
lahf
mov
nop
xor
xchg
ror
movsl
ret
push
fnsave
cmpsl
hlt
xchg
sarl
mov
lcall
pusha
or
xchg
add
dec
pop
movsb
or
add
xor
notl
je
fstp
outsl
sub
adc
nopl
es
sahf
imul
xor
pop
loop
lock
lret
and
sub
mov
jo
jns
call
sbb
test
mov
lock
sbb
xchg
jae
rcr
insl
lea
jg
mov
xchg
loopne
inc
add
enter
jl
adc
dec
push
out
pop
add
sbbl
roll
inc
push
fimull
cwtl
xorl
jl
sub
sub
sarb
jb
push
call
push
repz
inc
insb
scas
xchg
sbb
dec
xchg
and
xchg
xchg
setg
aas
inc
push
aas
adc
xchg
cmpsl
notl
adc
daa
and
sbb
push
inc
fists
jno
jnp
xor
adc
jl
or
push
lcall
shrd
cmp
fwait
or
fdivs
pop
or
or
sub
adc
aad
xchg
or
mov
cltd
pushf
jecxz
add
loop
fisubs
movsl
dec
vpmaxsw
xchg
outsb
add
cmp
cwtl
adc
aas
pop
cmp
in
mov
test
lods
outsl
cmpsl
xor
sti
add
inc
fistps
xorb
add
inc
sti
mov
shll
dec
enter
ss
jg
mov
pop
shrb
pop
push
mov
test
jb
xor
imul
mov
push
lahf
cmpl
adc
add
mov
push
push
mov
lret
and
inc
push
jns
cmp
scas
and
mov
shl
add
ss
int3
sbb
decb
xchg
mov
pop
insb
loop
lods
popa
ja
lea
mov
jb
push
xor
daa
pop
mov
pop
mov
orl
mov
ss
adc
inc
das
sbb
in
gs
fstp
mov
fidivs
and
fs
jg
mov
cli
add
sbb
pop
pop
cmp
mov
test
enter
aad
ret
pop
out
gs
out
add
push
ds
jle
fisubl
mov
sub
adc
loope
dec
xchg
test
mov
insb
cld
cmc
inc
gs
sahf
andb
jbe
jnp
shrb
fldcw
mov
adc
push
push
pop
xchg
popf
push
mov
sarb
mov
sti
xchg
mov
lea
add
outsb
mov
xor
push
push
sbb
stos
inc
mov
fisubs
dec
or
xchg
mov
pop
sbb
mov
lods
das
sbb
mov
and
shr
outsl
cmp
adc
jne
or
push
mov
mov
and
push
popf
or
shl
fiaddl
xchg
mov
enter
jmp
xchg
mov
vpsrlq
sbb
je
dec
fwait
jno
cmp
inc
or
pop
popf
push
pop
mov
add
cs
jmp
aas
adc
aas
lahf
push
hlt
adc
push
xchg
mov
push
inc
mov
leave
sbb
adc
ror
orl
cmpsl
mov
iret
and
pop
pop
cmpsl
scas
xor
pop
add
movd
ja
aam
stos
sahf
pop
push
dec
movsb
lock
jbe
adc
pop
sbb
arpl
xbegin
inc
pop
orl
xor
gs
enter
add
add
push
jne
or
add
sub
ja
inc
inc
jecxz
stos
inc
inc
mov
inc
jae
call
pop
inc
mov
das
mov
das
js
je
cmc
movsl
cmp
mov
cs
enter
push
dec
into
aam
aam
popf
mov
lds
xchg
dec
and
pop
cs
shl
push
icebp
imul
and
pushf
cld
fwait
repz
adc
ret
sbbb
adc
mov
ret
outsb
mov
out
xor
sub
cli
or
les
add
xchg
in
push
push
clc
sub
ret
xor
mov
push
push
fdiv
cwtl
rol
scas
or
fnsave
shlb
into
shll
mov
in
xchg
pop
js
xchg
cltd
lcall
flds
out
loopne
mov
mov
lret
out
inc
loope
mov
mov
nop
cmc
iret
or
add
or
mov
fcomip
adc
loop
xor
cltd
notb
push
mov
lahf
adc
pushf
dec
nop
pushf
pop
and
test
icebp
call
cli
rolb
pop
cmp
push
push
sub
or
ficompl
fs
subb
and
and
mov
or
movsl
push
inc
mov
nop
nop
mov
and
push
mov
lahf
test
cs
xor
mov
add
nop
xlat
xlat
dec
dec
adc
adc
inc
mov
cltd
lods
sub
sbb
mov
inc
int3
dec
jne
insb
andb
push
jl
mov
pop
adc
test
dec
fcoml
pop
or
mov
mov
sbb
test
pop
jmp
add
inc
ljmp
xchg
xor
jbe
lds
inc
dec
repz
loope
ss
sub
insb
sub
jmp
cltd
ret
jb
lods
or
jecxz
data16
scas
xchg
push
rcr
fmull
sti
stc
sub
mov
or
ret
sahf
test
sub
and
push
push
lahf
imul
ja
jns
adc
jns
aas
or
fsubr
mov
xchg
arpl
mov
pop
xchg
dec
pop
mov
sbb
cmp
repz
rcrl
inc
mov
dec
cli
insb
cmpsb
in
dec
xchg
test
incb
mov
idivb
addb
andl
stos
push
mov
insb
sub
push
cmp
xor
pushf
xchg
adc
or
jo
xchg
push
stos
xor
stos
stos
cmp
in
aam
test
call
cwtl
or
inc
rorb
inc
push
cmp
push
cvttps2pi
sub
mov
mov
mov
paddsb
xor
sbb
mov
xchg
dec
pop
xchg
fwait
pop
stos
inc
jae
into
call
mov
nop
incl
aas
loope
mov
incl
mov
arpl
scas
mov
cli
dec
pop
dec
ss
je
orb
test
repz
mov
fnstenv
sub
xor
rcpps
xor
inc
adc
push
sbb
cmc
jo
mov
inc
dec
fs
je
push
scas
fs
insb
clc
js
std
jo
in
adc
adc
aad
call
pop
jno
adc
mov
adc
imul
jle
gs
mov
jo
into
lcall
xorl
lea
ds
inc
test
mov
xchg
out
andnps
inc
test
sbb
jp
mov
test
nop
pusha
mov
leave
mov
and
loope
aam
in
stos
ret
mov
xchg
clc
jnp
loop
mov
xchg
mov
pop
sbb
jne
cltd
jl
flds
ja
inc
jb
mov
push
fs
pop
lock
scas
jo
inc
dec
sub
jp
icebp
mov
daa
pop
xchg
lods
test
sbb
into
or
adc
push
cmp
mov
or
andb
adc
inc
jmp
cmpsl
daa
adc
loope
faddp
mov
jp
scas
mov
cmp
cmp
mov
addl
xor
pop
outsb
mov
push
fsubrl
rcl
push
ret
pop
jmp
fiadds
add
loopne
push
out
cmp
cmp
inc
and
ret
test
adc
mov
and
jp
adc
cltd
xor
ds
les
mov
mov
xor
ljmp
cmp
pushf
add
and
pop
pop
pop
pop
bt
cld
add
or
shl
js
aaa
lock
sub
mov
and
adc
dec
xchg
test
lret
mov
jle
push
push
jno
outsl
jno
mov
arpl
cmp
dec
ja
mov
push
xorb
push
data16
js
lods
lahf
clc
and
popf
push
or
pop
rcrl
lcall
repnz
mov
std
jo
push
sub
jl
cmp
cmp
push
sbb
ret
sub
repz
adc
mov
dec
lods
add
rcll
ret
sub
aam
or
sbb
inc
push
jb
dec
sub
nop
mov
out
mov
lcall
clc
pusha
fs
rclb
mov
inc
shrl
jnp
mov
negl
or
sbbl
je
xchg
push
mov
adc
jge
inc
lret
jnp
lock
aas
add
push
das
rorb
fsubl
sbb
cmp
xchg
and
insl
lcall
xor
clc
sbbl
jg
push
mov
mov
sub
mov
ds
dec
sub
icebp
mov
mov
test
xchg
dec
jge
push
pop
jg
mov
inc
push
lret
fmull
outsb
fsts
push
or
scas
lods
loop
aam
hlt
movsb
rclb
add
pop
cmp
adc
aaa
std
lods
or
aaa
or
ljmp
xor
adc
and
cs
or
orb
icebp
mov
xchg
fwait
add
loopne
sub
mov
test
stos
xchg
lret
sub
fs
cltd
sahf
std
data16
add
cli
imul
sbb
test
aad
mov
fstpt
lcall
jnp
mov
pcmpgtb
sbb
pusha
sti
jge
xlat
shr
or
or
xor
mov
mov
sar
jecxz
pop
sbb
ror
jmp
sub
leave
ljmp
sub
and
arpl
ds
mov
mov
loope
test
cmp
push
call
into
inc
outsb
outsl
jp
fs
mov
inc
je
push
fsubl
inc
inc
ljmp
iret
dec
xorl
cld
jecxz
pop
push
bound
cmpsb
fwait
movsl
xlat
sarb
mov
and
mov
call
rcrb
dec
sbb
jne
cmp
sqrtps
je
pop
lods
pop
dec
stos
sti
aas
in
addl
cld
pop
mov
adc
cmp
jl
jne
cmp
fwait
mov
cmp
push
scas
faddl
add
lea
mov
push
push
mov
sub
push
mov
stos
nop
nop
xchg
push
dec
jle
push
scas
inc
loope
rcrb
sub
loop
and
adc
inc
dec
jl
les
inc
push
sub
xchg
push
into
in
add
into
popa
push
aas
or
dec
cld
decl
inc
mov
pop
cmp
sub
in
pop
lret
aas
adc
scas
dec
mov
push
dec
lods
cmpsl
inc
in
stos
dec
inc
imul
inc
xor
addr16
sub
mov
shrl
dec
xor
mov
pop
jo
int3
or
xchg
dec
or
pop
or
jb
sub
pop
shrl
fs
jle
xor
inc
add
loop
and
fwait
orb
push
and
incb
sbb
adc
mov
xor
inc
std
test
xor
popa
cmpb
pushf
push
xor
clc
pop
add
scas
mov
pushf
adc
jno
ds
aam
push
mov
pushw
xchg
sbb
push
sbb
inc
insb
in
mov
mov
dec
add
inc
xchg
xor
cmc
or
mov
push
adc
cmpb
jle
adc
neg
outsb
jb
mov
daa
or
push
out
insb
je
ljmpw
adc
or
push
cmp
pop
es
popa
xor
mov
and
cld
mov
mov
dec
adc
inc
pusha
xor
sub
cmp
xchg
add
lcall
dec
ja
mov
add
push
imul
xor
mov
sub
mov
push
pop
add
jp
xchg
sub
mov
into
cmpsl
int
fmull
push
imul
test
inc
inc
adc
mov
shrl
std
push
and
inc
les
adc
jmp
out
mull
jo
pop
cmp
js
orl
orl
adc
push
sbb
loop
cmp
mov
sub
imul
adc
adc
test
mov
cli
lods
jg
test
jnp
fisttpl
rorb
pusha
xlat
inc
add
lock
je
lret
adc
sub
aad
loop
xchg
jbe
push
xchg
pop
cmpsl
test
dec
add
push
dec
push
add
inc
inc
xor
add
js
std
dec
or
fcomps
add
cmpsb
xchg
inc
pusha
cmp
xor
lods
xchg
clc
adc
sti
loope
lret
or
adc
into
inc
shr
es
mov
add
jecxz
jl
fldl
jg
pop
mov
sub
rolb
int3
loopne
push
rcrb
rcrb
cmp
lahf
cli
jecxz
bound
cmp
sub
fsubrs
js
hlt
add
cmpsl
xchg
mov
jg
and
or
mov
pop
sbb
jno
add
test
subb
popa
pop
fistps
out
fisttpll
ror
mov
jo
clc
and
mov
mov
jl
out
or
mov
aaa
fisubs
xchg
mov
sub
ret
xor
adc
bound
push
jl
pop
iret
int3
jnp
sbb
xor
lds
cwtl
pop
in
push
mov
mov
push
adc
push
dec
je
pop
sbb
push
jb
mov
mov
cmpb
lods
dec
sahf
sub
test
aas
das
scas
pop
imull
aad
outsb
adc
clc
adc
lods
push
mov
xlat
sub
adc
ret
fs
jb
push
add
lods
push
dec
stos
mov
or
clc
sbb
mov
xor
ficoml
cmp
add
loope
pop
add
inc
lret
clc
mov
adc
xor
inc
pop
fdivrs
ljmp
jb
add
jg
leave
xor
mov
test
add
inc
and
cld
jb
in
loop
inc
add
xor
dec
or
mov
movl
add
sbb
or
lods
stos
xlat
lock
inc
call
das
lcall
and
les
loope
clc
inc
in
dec
bound
add
ds
dec
insb
insl
data16
dec
mov
mov
and
data16
jp
cs
rcl
and
pusha
pop
jl
sar
mov
adc
fiaddl
mov
lea
sub
push
cmp
mov
sub
jb
lea
push
rclb
xchg
mov
rcll
je
mov
xchg
into
dec
jb
outsl
ret
addr16
push
in
or
xchg
ljmp
aam
sbb
dec
mov
das
push
scas
mov
jae
pop
fimuls
pop
rcrb
mov
jmp
clc
scas
or
clc
mov
pop
add
lods
and
test
inc
in
mov
rcrb
aam
mov
adc
insl
mov
shlb
or
test
dec
fldl
movsl
insl
sub
xor
and
pop
jne
jmp
dec
or
lock
out
push
or
adc
fisubrl
mov
cmp
push
adc
jne
movsl
add
jb
xchg
cmp
loope
out
add
es
ljmp
cmp
xchg
je
cmc
mov
push
dec
bound
push
jge
pop
xor
mov
testl
add
adc
fidivs
push
out
sahf
sti
jp
fidivl
ljmp
jo
xchg
out
ja
jecxz
xchg
jle
mov
gs
test
bound
mov
sarb
out
arpl
sub
xchg
aam
ds
fiaddl
jge
addb
cli
or
rorb
pop
push
cwtl
outsb
sub
and
push
push
or
adc
pop
ljmp
orb
lea
les
jo
out
xchg
push
sbb
push
divl
fidivs
pop
ss
push
jnp
mov
ds
gs
ret
aaa
sbb
loope
ficompl
je
add
pusha
inc
pop
jmp
scas
sub
outsl
cmp
add
outsb
cmp
pop
pop
mov
cltd
inc
adc
outsb
adc
leave
test
cmovne
int3
clc
in
cmpsl
add
insl
push
mov
les
mov
jmp
dec
add
xor
xchg
pushf
in
pop
rclb
js
and
and
mov
and
movsb
dec
je
mov
mov
les
jo
inc
jge
popl
nop
mov
les
movsb
cmp
lcall
popf
jae
push
dec
push
cld
dec
jecxz
aad
push
xchg
mov
fisubrl
dec
test
sarl
push
add
pop
cmp
outsb
cmp
adc
xchg
push
test
jnp
lahf
xor
or
shrl
xchg
mov
imul
pop
xchg
push
push
rorb
stos
hlt
cmp
mov
hlt
out
call
jo
sub
fdivl
sub
xor
out
call
sub
push
and
out
mov
xor
jne
aaa
cs
lock
popa
lcall
dec
add
xor
stos
inc
add
out
push
push
inc
in
cmp
push
adc
push
aam
loope
inc
sbb
jecxz
mov
mov
fiadds
ljmp
add
es
or
cmp
mov
add
inc
or
ret
or
fdivrs
imul
insl
or
xor
das
fdivrl
dec
sub
mov
adc
inc
mov
add
mov
jo
sbb
xor
sti
mov
shlb
pop
inc
lock
data16
fsubrs
xor
inc
outsb
dec
fadd
scas
add
jb
repnz
pop
jmp
or
adc
mov
and
mov
mov
sub
je
or
mov
ss
pusha
jmp
lcall
stos
push
xchg
rcr
movsb
cmp
sbb
mov
push
insb
cmp
sbb
sub
insl
mov
or
dec
mov
sbb
adcb
mov
ljmp
outsl
fdivl
rol
or
xorl
test
cmp
out
xlat
mov
inc
fidivrs
inc
add
pushf
mov
addb
cli
xor
xchg
test
les
add
mov
push
mov
out
fs
rcrl
xchg
aad
in
xor
sbb
or
push
notb
in
addb
std
outsb
pop
loope
rol
push
add
mov
lea
jne
push
cld
pusha
xchg
out
inc
mov
ja
xor
xchg
and
add
imul
dec
popf
ja
fimull
fidivs
outsl
push
xor
repz
inc
cmp
mov
adc
stos
rorb
or
sbb
mov
mov
jmp
insb
sbb
in
sbbb
addb
xlat
cli
roll
lahf
gs
inc
mov
fisubrl
jmp
adc
aaa
xchg
ss
xchg
dec
push
imul
test
in
jnp
push
dec
cmp
cld
fsubs
loope
pop
inc
add
roll
or
jbe
ret
mov
mov
push
mov
sub
mov
dec
xchg
adc
cmp
rolb
pop
into
enter
xor
jns
js
add
inc
shrb
andl
jmp
aas
mov
out
rcll
sub
jno
fldl
xchg
loope
subb
adc
mov
scas
mov
fldcw
adcw
rorb
sbb
cmp
mov
mov
push
add
je
push
jge
xor
add
push
xchg
in
jb
les
cld
push
xchg
ret
mov
ds
jb
shrl
enter
add
rcll
mov
mov
mov
arpl
sbb
js
icebp
pop
jge
inc
push
test
inc
jne
push
pusha
rol
pinsrw
insl
pusha
push
add
jo
bound
aad
or
xchg
mov
insl
shll
xchg
pushf
sarl
adc
icebp
aam
cmp
push
adc
or
xor
add
cwtl
popf
repz
cmc
or
aam
and
pop
repnz
push
lock
mov
push
xor
mov
push
fisubrl
and
xor
sti
cmp
sahf
fcmovu
dec
shrb
or
pusha
sbbl
jnp
rolb
mov
clc
mov
adc
add
lea
mov
in
pop
push
aad
inc
mov
push
add
or
addl
cmp
lcall
inc
add
sbb
mov
pop
pop
adc
or
mov
mov
fistpl
loope,pt
dec
fstps
and
xor
adc
loope
dec
stos
ss
push
xchg
add
push
xorb
mov
or
repnz
insl
stos
dec
sub
xchg
nop
inc
dec
lea
pop
mov
xor
rcrb
out
ja
mov
mov
aas
adc
sbb
push
xor
sub
ret
jmp
test
dec
dec
xlat
xchg
jae
rcll
cld
push
lds
loopne
jmp
push
jb
test
int3
xchg
cmp
dec
jge
xlat
mov
out
or
call
mov
inc
xchg
add
fstl
push
fyl2x
mov
adc
in
add
pushf
lods
es
push
loop
pushf
sbb
rcrb
cmpl
or
in
adc
mov
fisttpll
add
add
mov
jns
xchg
or
push
add
cmp
ud0
mov
dec
das
mov
test
push
loope
mov
jp
and
push
test
or
js
dec
stos
cmpsb
loopne
sahf
scas
mov
shlb
push
aas
cmp
lods
and
jns
mov
push
je
mov
add
pop
movnti
scas
push
stos
shl
testb
mov
mov
pop
inc
loopne
push
pop
ret
fmul
sub
aam
add
add
sub
sub
jo
repz
jne,pn
add
lock
push
xor
mov
mov
dec
add
subl
mov
inc
xor
cmp
mov
fidivs
call
mov
add
inc
pop
rorl
loop
lock
pop
push
lret
xor
adc
mov
and
dec
ret
add
cmpsl
xor
push
or
pop
addl
test
sub
les
cmc
mov
add
cs
add
adc
cmpb
jb
icebp
cltd
inc
jo
bnd
jmp
fldcw
adc
mov
xchg
add
add
ret
cmp
fimull
pop
push
clc
mov
pop
pop
jnp
mov
push
ret
inc
stos
dec
insb
movsb
pushf
dec
fwait
sub
popf
adc
inc
jge
insl
pop
jo
ret
xor
inc
popf
adc
mov
xchg
mov
jmp
pmaxsw
or
aad
movsb
or
fsubrs
and
mov
sti
push
xchg
mov
cld
cmc
or
and
dec
fwait
add
in
sub
xchg
mov
xchg
loop
jb
fs
mov
fidivrs
dec
adc
adc
and
sbb
sbb
movsl
sbb
sbb
adc
mov
lcall
js
sbb
loopne
loope
xchg
jmp
js
mov
div
int
jecxz
adc
xor
push
jo
jle
icebp
fwait
insl
dec
sub
pushf
int3
addl
mov
add
xchg
test
cltd
xor
fwait
or
jmp
push
out
or
ljmp
cmp
shrl
sbb
aad
push
jmp
pop
clc
adc
jmp
mov
imul
inc
sub
cmpsl
push
clc
sbb
int3
bound
and
loopne
inc
push
xor
mov
fists
xchg
decb
popf
cwtl
push
pop
jbe
pop
xor
lret
mov
push
mov
pushf
fdivs
dec
stos
sub
das
cmpb
rcrb
dec
cmp
fistl
daa
ret
cmc
jmp
loopne
push
sub
push
rolb
nop
add
stos
pop
jo
xorb
push
iret
and
xor
push
nop
lcall
lahf
test
push
test
js
jbe
les
jb
add
ss
sbb
popl
scas
and
test
xchg
push
and
and
nop
scas
add
fcompp
sub
ret
dec
data16
pop
jmp
mov
fwait
xchg
mov
fimuls
adc
test
dec
xchg
sub
int
push
fildl
mov
push
mov
push
xchg
rcrb
add
sub
mov
or
jno
cmp
xchg
arpl
mov
pop
stos
mov
adc
fdivrl
sub
pusha
into
sbb
cmp
enter
sub
mov
cli
xchg
lods
pop
mov
jg
lds
inc
lret
sub
insl
push
dec
cmp
xchg
idivb
cmp
test
lret
sub
add
mov
push
aad
testl
sub
and
mov
pop
clc
mov
sti
hlt
clc
and
xchg
jbe
jnp
adc
imul
push
pop
mov
divb
push
lods
mov
pop
jge
xchg
daa
test
cld
mov
enter
mov
je
mov
dec
xchg
hlt
cmpsl
xor
cmp
jle
and
stos
sub
loope
adc
or
incl
mov
jl
lret
call
fwait
outsb
ljmp
sub
or
hlt
sub
sub
shrb
fistpll
aam
orl
xchg
inc
mov
cmpsb
roll
mov
scas
je
add
mov
insl
or
cmp
push
insb
lock
adc
jns
outsl
push
icebp
nop
push
adc
pop
inc
adc
lret
push
adc
xchg
and
add
fs
daa
push
jle
out
xor
and
sub
pusha
inc
pop
mov
sub
xchg
les
mov
sub
popf
and
ds
rcl
test
stos
sbb
cmp
hlt
popf
xor
cld
loope
xchg
loop
les
add
inc
lret
in
mov
or
add
adc
mov
subb
push
stos
xor
sti
pop
push
and
push
in
mov
aas
shrb
cmp
mov
pusha
mov
inc
mov
cmpb
xchg
pop
fistps
aaa
mov
pop
lcall
jns
lcall
sbb
jle
dec
ficompl
adc
xchg
add
loopne
sub
push
rcrl
sbb
rcll
mov
dec
sahf
and
insl
mov
aas
addb
inc
push
push
inc
sub
adc
pop
mov
clc
push
inc
out
mov
test
pusha
inc
xor
xor
sub
scas
or
jbe
ficoml
jo
sbb
jmp
lods
xor
push
shl
push
repnz
nop
imul
xchg
pusha
or
fsubrl
lret
jo
aaa
shll
push
scas
jl
shrb
repnz
les
xor
pusha
push
adc
xor
ret
xor
xor
inc
mov
aam
rclb
insb
insl
mov
sbb
rcr
jne
cmp
hlt
jmp
sbb
inc
jae
lods
or
je
jbe
cld
jno
cs
pop
xchg
shrb
pop
and
hlt
xchg
inc
xor
dec
lret
movsl
in
and
add
aaa
ret
pop
int3
mov
fadds
mov
fsubs
lds
xchg
sbb
dec
icebp
fs
enter
leave
hlt
or
mov
call
test
jle
or
xchg
lock
sbb
cmpsl
cmp
test
adc
cltd
dec
hlt
pop
in
mov
xchg
push
jno
mov
push
cmp
sub
jle
jmp
or
fsubl
loop
xchg
les
mov
call
cld
popa
add
sbb
push
xor
aam
sub
imul
jmp
xchg
push
xor
hlt
inc
dec
ljmp
jo
add
pop
cmp
out
cmpsl
insl
or
out
mov
jl
mov
xchg
lret
xor
mov
ffreep
cmp
xchg
or
jno
jle
icebp
roll
cmpsl
mov
rcrb
sbb
mov
inc
cwtl
mov
mov
dec
dec
add
jbe
mov
jecxz
add
nop
mov
int3
ds
loop
imul
xchg
and
dec
push
rol
in
pusha
mov
pop
or
add
push
dec
push
xor
lods
ficoml
addb
fsubl
imul
js
andb
pop
mov
pop
aad
mov
add
cmp
ds
lahf
dec
shrl
inc
sbb
sbb
mov
cli
push
andb
clc
xor
jb
xchg
sbbl
and
jbe
inc
insb
xchg
lea
mov
stos
cmp
push
push
jecxz
rcr
jno
cmp
push
and
nop
mov
addl
pop
mov
xor
push
jo
divb
mov
add
cli
and
das
je
dec
and
push
fisubl
and
and
fidivrs
mov
jecxz
xor
dec
mov
fildl
mov
or
dec
rclb
movsb
sub
stos
add
dec
jmp
dec
fadds
jg
add
bound
ficoms
pop
fsubrl
cmp
enter
mov
push
and
and
popa
dec
mov
icebp
sub
stos
cmp
jmp
push
sub
outsb
push
rcr
fs
xchg
cli
aad
mov
addr16
fs
std
sbb
fistps
ret
js
sbb
push
push
icebp
ljmp
cli
sub
xlat
and
ljmp
mov
sbb
mov
enter
daa
mov
sub
outsb
inc
fisubl
and
inc
jnp
test
ror
es
xor
add
mov
sub
ret
push
mov
or
xor
dec
inc
or
repnz
add
adc
cmc
outsl
int3
sbb
sti
inc
imul
sub
or
mov
or
pop
mov
jbe
test
clc
shrl
and
inc
push
pop
int
xor
jno
out
stos
sbb
xor
mov
pop
inc
inc
mov
aaa
lods
sbb
movsb
mov
mov
jo
push
cmp
xchg
push
fs
ret
sahf
je
jno
inc
xor
mov
stc
sub
sbb
mov
sub
push
dec
add
pop
fsubp
std
jmp
lods
fimull
notl
mov
sbb
mov
or
test
addl
dec
or
pop
shlb
or
fldl
lahf
mov
jecxz
scas
xchg
inc
into
add
rol
loop
sub
mov
and
je
xor
lret
push
mov
jo
add
mov
cli
mov
sub
arpl
popa
add
jp
jp
lret
aas
test
scas
pusha
insb
out
jno
insb
daa
dec
push
cmp
inc
pop
movb
and
aaa
fcompl
stos
mov
into
pop
jp
pusha
stos
lcall
int
or
aaa
mov
std
mov
add
daa
mov
mov
fcoms
cwtl
cwtl
mov
mov
cwtl
cmpsb
or
mov
add
xchg
adc
xchg
js
in
loop
stos
mov
pop
and
mov
decb
imul
outsl
xor
or
sbb
xchg
xchg
push
add
lods
xor
sub
xchg
or
test
je
xchg
out
jne
xchg
nop
and
sub
movsl
pop
out
ret
cmc
push
mov
add
add
pop
aam
fstpt
cmp
mov
jne
sti
sub
jecxz
pop
sbb
jge
adc
xor
push
mov
ja
xor
lret
daa
sub
cmpsb
dec
dec
or
add
fnstcw
jne
inc
pop
mov
inc
adc
mov
or
scas
cs
sub
js
aad
or
movsl
ret
sub
sti
dec
xchg
faddp
lahf
pop
xor
mov
cmpsb
add
adc
fwait
push
and
mov
inc
decb
mov
cmpl
push
scas
bound
loopne
mov
cmpsl
loopne
in
jmp
loop
cmp
test
or
mov
in
dec
sub
inc
into
and
andb
cmp
mov
sti
loope
sti
push
dec
cmp
inc
js
push
mov
aas
out
and
dec
and
lock
cli
and
xchg
mov
loope
jp
cmp
stos
inc
loope
rsm
jle
orb
ret
ret
pusha
lret
jmp
clc
loopne
stc
or
cmc
js
fistpll
pusha
hlt
out
or
icebp
dec
rolb
sbb
jl
cmpsb
aaa
push
pusha
lock
addr16
jo
mov
loope
pop
fldt
xlat
xchg
cs
inc
pop
les
mov
imul
push
icebp
into
repnz
or
jle
xchg
jmp
fiadds
popa
loop
mov
mov
icebp
xchg
cmpsl
push
xchg
or
mov
fnstenv
loopne
mov
cmp
loope
cmp
xorl
mov
out
and
push
sete
je
mov
add
mov
icebp
pop
xchg
icebp
dec
clc
jne
cmc
push
imul
jge
imul
ret
inc
adc
ljmpw
mov
sub
movsb
jno
popf
andl
fdiv
scas
inc
jl
xor
lock
push
popa
mov
push
aaa
xor
dec
pop
bound
pusha
push
and
xchg
out
xchg
jge
mov
and
xor
push
push
in
das
and
pop
outsl
pop
inc
shl
hlt
add
punpckhwd
test
mov
xchg
xchg
popa
jo
sub
mov
sbb
sbb
lds
int
aad
mov
adc
pop
je
lock
push
das
mov
jo
or
xchg
ret
jne
cwtl
adc
mov
loop
jmp
dec
jge
pop
jne
dec
push
mov
sub
inc
cmpsl
out
std
les
adc
outsb
int
or
sbb
lods
mov
jl
add
mov
jp
sahf
xchg
rcpps
cmp
int
clc
inc
push
add
jbe
push
add
xchg
pop
and
add
sbb
dec
cld
xor
mov
and
cwtl
jmp
fs
mov
jmp
xchg
dec
adc
mov
dec
inc
cmp
rcll
je
ljmp
fdivl
pop
jns
popf
jbe
inc
in
or
xchg
cmc
add
add
push
cli
mov
jno
sti
repz
mov
sahf
mov
xchg
je
push
notl
imul
jne
decb
mov
inc
call
sub
push
jmp
loope
mov
test
outsb
ficompl
rclb
xchg
pop
pop
les
movsl
ret
and
imul
lock
push
in
addb
ret
cmp
sahf
jo
jb
sub
test
adc
mov
sbbb
mov
fwait
push
test
bound
push
in
inc
or
mov
mov
lock
movsb
mov
loopne
outsl
imul
insl
test
xchg
jbe
mov
pop
or
pop
clc
movsb
nop
mov
je
mov
lock
subl
adcb
mov
sub
ss
sbb
idivb
jae
bnd
mov
stos
fdivl
lahf
mov
roll
cmp
stos
xor
es
xor
mov
push
jnp
pop
dec
xchg
hlt
ret
mov
movzbl
pop
and
movsl
push
lret
pop
inc
adc
faddl
or
inc
sti
dec
xor
pop
clc
sbb
int
mov
dec
rorl
nop
and
mov
jns
jmp
lea
lret
mov
rcrl
push
xchg
xchg
xor
sbb
jnp
add
in
lods
or
cli
stc
add
out
add
mov
je
ja
ret
shrb
sti
dec
and
lret
mov
inc
jbe
jo
stos
push
sbb
push
xor
push
fdivrs
test
pushf
mov
and
int
xor
fdivr
mul
out
lods
and
shlb
adc
ss
dec
mov
rorl
dec
push
mov
lods
out
adcb
ds
jo
mov
arpl
xor
sbb
sub
mov
push
call
mov
pop
jge
lock
dec
xor
ret
ja
and
bound
add
aas
hlt
cltd
push
pop
add
sbb
mov
popa
fstpt
lea
nop
movsb
mov
adc
xor
xchg
hlt
mov
mov
dec
adc
and
or
arpl
push
pop
lret
push
mov
cmp
out
sub
rol
in
orb
cli
cltd
ret
cmp
adc
pushf
jg
cmp
lea
mov
into
sub
mov
std
roll
cmp
fisubrs
push
adc
add
xchg
cmpsb
int3
push
push
lret
xchg
sub
cmpb
lock
push
cld
mov
cmp
in
aad
lods
sbb
xchg
or
mov
lahf
aam
dec
aam
jbe
stc
cs
ja
push
xchg
ficompl
cmpl
pop
push
mov
cmp
rcl
mov
aas
add
and
add
pusha
dec
mov
jne
pop
mov
shll
clc
mov
xchg
push
inc
into
sbb
popa
cmp
stc
pop
adc
push
fs
out
dec
fldl2t
js
ja
push
push
xor
ror
inc
adc
shll
test
inc
lret
lea
lret
addr16
cmp
push
movsl
push
int
bound
sbb
add
pop
sub
jp
iret
sarb
jg
xlat
and
adc
xchg
out
inc
pop
cs
mov
jle
push
xor
mov
mov
bound
pop
mov
es
jne
xlat
mov
call
loop
rol
insl
push
mov
loopne
aam
bound
in
cmp
loope
add
mov
jl
imul
insl
jnp
pop
adc
adc
insb
cmp
or
push
and
mov
adc
fcmovnbe
inc
lahf
inc
arpl
inc
push
xor
imul
jb
es
sbb
mov
mov
mov
push
std
mov
mov
movsl
xor
stos
pop
ret
cmpsb
rcl
jge
leave
adc
js
dec
mov
and
bound
mov
mull
or
ret
test
xor
loope
daa
dec
jl
imul
sub
sub
mov
mov
jge
inc
pop
lcall
sbb
daa
sar
stos
ret
and
push
data16
loope
fistl
push
pop
scas
sub
sbb
in
add
or
cmp
xchg
pop
and
fs
ds
xor
shrb
pop
jp
icebp
xor
inc
movl
mov
mov
mov
jnp
xchg
jo
insb
lret
sbb
xacquire
ret
es
ret
bound
idiv
rcrl
shrb
push
test
mov
xor
dec
dec
lahf
cmp
xor
cli
movsb
orl
pusha
push
bound
imul
ret
outsl
int
iret
icebp
inc
lods
xchg
lret
or
sub
mov
sbb
ljmp
push
pop
add
mov
loopne
decl
in
sub
cmp
rorb
mov
cli
lahf
jno
lock
inc
fsubr
cmp
cmp
xchg
imul
dec
sbb
mov
dec
imul
cli
mov
sub
xor
sub
pop
xor
pop
jg
mov
cmc
push
dec
cltd
or
scas
xchg
fwait
repz
mov
push
adc
mov
mov
mov
loope
mul
mov
repnz
loope
int3
adc
rcl
xchg
popa
rclb
and
cmp
inc
xor
lcall
xchg
leave
shl
xchg
ret
sub
sbb
icebp
sub
ret
scas
loop
xchg
rorb
das
xchg
cmpsb
dec
push
xchg
xor
cvtpi2ps
cld
push
jno
inc
pop
push
cmp
imul
adc
adc
into
push
or
bound
inc
cmp
adc
pop
mov
imul
in
sub
outsb
pop
arpl
push
cmp
add
jmp
mov
dec
setg
push
mov
sbb
mov
sarb
cmp
pop
sbb
or
imull
cmp
rcl
mov
leave
xchg
cmp
cmpsb
push
xchg
sbb
mov
inc
mov
dec
cmc
data16
shrb
xchg
sbb
bound
dec
ret
add
push
popf
xor
mov
mov
and
mov
mov
aas
mov
ss
mov
sub
sahf
xor
cmc
mov
lcall
ret
sub
mov
dec
test
lret
test
xor
inc
insl
mov
inc
push
jmp
xchg
hlt
dec
fsubrs
int3
mov
aaa
mov
ret
addl
xor
sub
repz
cltd
sbb
cli
and
pop
imul
in
or
xchg
pop
daa
xchg
sbb
xor
cmp
ds
ficompl
xorl
sub
mov
lret
dec
fisttps
jmp
inc
bound
pop
and
pop
jo
dec
std
pop
icebp
xor
ja
es
lock
sbb
sbb
sahf
dec
mov
es
pop
sub
cld
jbe
lock
xlat
jmp
setnp
ret
jo,pn
jns
mov
and
mov
adc
orb
sbb
adc
fnstenv
cltd
sbb
mov
out
adc
push
scas
jo
call
shr
scas
ret
out
sub
or
pop
daa
add
scas
mov
pop
lcall
xchg
inc
or
inc
jecxz
aad
fcoml
ret
xchg
push
adc
jne
fstps
adc
popf
lods
loope
mov
sti
jp
clc
sub
insl
adc
call
pop
orb
aad
stc
or
aam
mov
sahf
jne
repz
aam
dec
outsl
push
and
rolb
cmpsb
dec
adc
stos
dec
add
or
cmpsl
sbb
adc
js
call
jno
loopne
arpl
sbb
mov
shll
js
lods
addr16
popa
shl
and
adc
push
sbb
and
adc
imul
fsqrt
push
jecxz
aas
mov
stos
jp
pop
jno
cltd
test
test
xor
lea
lcall
pop
sti
call
popa
fnstsw
pop
xchg
push
ret
lds
lahf
rolb
iret
sub
mov
xor
outsl
fsubl
fisubrs
ret
push
push
aad
jae
xchg
and
movsl
push
sub
test
lock
clc
inc
test
push
push
aaa
mov
lock
aam
jge
cld
mov
aaa
jge
aas
jns
xchg
jle
jle
lret
adc
insl
insl
mov
add
pop
add
cmp
xchg
or
repz
shl
clc
inc
mov
cltd
mov
repz
shr
imul
push
rolb
gs
or
in
test
pop
push
arpl
cmovp
lea
icebp
ret
jb
iret
or
adc
jmp
test
ss
sbb
cli
add
mov
dec
rorb
in
pop
outsb
lods
scas
rorb
mov
cmp
jp
add
pop
xor
adc
mov
pop
insl
addr16
inc
add
xor
jnp
push
jnp
bound
je
mov
add
sti
jae
aaa
arpl
subl
pop
jae
mov
shlb
fisubrs
repnz
mov
shll
out
mov
testb
aam
mov
adc
jg
ss
or
js
xchg
fisttps
hlt
sbb
dec
xor
mov
cmpsl
jbe
imul
loopne
in
add
sbb
push
inc
scas
rcrl
gs
xor
and
popa
lock
scas
fimuls
cmc
mov
fsubl
pop
add
cmpsb
add
mov
jp
adc
or
sbb
jl
stc
sbb
or
push
scas
xchg
cli
push
cld
push
popf
call
into
push
js
scas
dec
dec
cmp
ss
adc
fwait
xchg
loope
cmc
adc
pop
aas
rolb
sarl
xchg
test
cld
or
aam
cli
sarl
mov
repz
lret
les
andnps
push
enter
dec
das
inc
out
jns
xlat
loop
xor
xor
movsl
outsb
adc
aaa
fidivrl
mov
stos
add
das
jbe
add
mov
repz
in
fst
loopne
mov
mov
cwtl
inc
ret
lock
jno
mov
ficompl
shrl
test
sbb
push
xchg
shlb
out
out
cmpsl
rcrl
mov
inc
cs
add
aaa
xor
cmp
arpl
les
cmc
add
sbb
test
push
hlt
cmpsb
xor
arpl
loop
inc
add
loope
addl
mov
sti
inc
int
push
sub
sbb
push
mov
pop
pop
call
mov
je
mov
lea
dec
leave
mov
push
jmp
pop
dec
lea
pop
frstor
clc
cmp
loop
push
jns
push
add
xor
into
out
fiadds
jns
xchg
clc
and
sub
pop
or
dec
push
arpl
mov
mov
add
ret
pop
adc
lcall
mov
pop
mov
ds
pop
cmp
xchg
fxtract
sbb
outsl
clc
cmp
insl
mov
ljmp
ret
mov
ret
inc
sub
mov
mov
or
and
adc
add
mov
push
ret
cmpsb
xor
and
shrb
xchg
imul
mov
hlt
jmp
mov
push
lock
add
sub
inc
mov
repz
stos
sbb
mov
std
fmull
push
aam
fs
push
lret
xor
inc
mov
fwait
inc
or
ljmp
dec
mov
xor
sub
out
sbb
push
and
pushf
dec
ja
sti
cmp
mov
add
inc
or
mov
mov
ss
ds
sub
arpl
test
mov
jmp
enter
mov
iret
pop
imul
add
cmpsl
cmp
in
imulb
xchg
insl
pop
cmpsb
or
mov
jecxz
push
ret
mov
push
or
inc
mov
shll
mov
cs
mov
repz
ja
ret
cmp
mov
add
repnz
jne
stos
orl
pushf
push
lret
cltd
movsb
push
rorb
int
cmc
test
out
jnp
sbb
xor
dec
incb
cmp
jecxz
mov
icebp
sub
arpl
iret
xor
and
movsb
ja
test
adc
sbb
call
and
mov
jp
and
les
testb
push
pop
dec
add
inc
pop
imul
movsl
test
stos
jge
test
test
pop
add
lcall
les
js
addb
pop
arpl
inc
adc
push
leave
notl
loope
sbb
lret
sub
cmp
add
or
fldcw
test
orb
cmp
imulb
aad
add
inc
adc
or
inc
cltd
pop
dec
dec
rcrb
xlat
daa
inc
mov
testl
mov
cmp
push
xchg
add
cmpb
xor
jae
or
out
cmpb
dec
mov
jecxz
rolb
jne
mov
jnp
jp
inc
pop
cmp
fldt
mov
icebp
movsl
nop
xchg
lock
inc
add
stos
ja
cli
mov
movsb
jno
add
inc
scas
inc
fwait
pop
outsl
int
mov
scas
and
cmc
inc
stc
js
inc
pop
mov
mov
cmp
push
mov
adc
dec
arpl
adc
push
lds
jg
mov
pop
jecxz
fistps
fisubrs
cmc
movsb
xchg
jp
jae
mov
xchg
jle
inc
jp
add
test
mov
or
gs
loop
fld1
sbb
movsl
femms
cmc
pop
mov
mov
movsb
mov
rolb
mov
ja
in
and
push
ljmp
andb
jg
push
lret
pusha
jmpw
inc
cmpsl
mov
shl
dec
out
test
pop
aas
adc
in
or
clc
xor
xchg
inc
scas
mov
sbb
and
mov
add
insb
mov
push
add
lret
mov
mov
lds
les
push
ss
loope
push
ret
sbb
enter
mov
iret
mov
cmp
or
bound
ss
repz
fs
jmp
and
or
push
xchg
xor
cld
or
xor
cli
lock
push
jg
mov
orl
sbb
adc
cltd
je
push
iret
xchg
and
pop
add
and
mov
inc
mov
cli
sarb
mov
rcrb
mov
dec
sub
es
xor
std
mov
fs
in
outsb
aam
xchg
cld
leave
into
dec
push
out
dec
repnz
push
ss
sbb
adc
jne
jp
mov
sbb
sbb
icebp
mov
push
call
push
dec
mov
in
jge
mov
jmp
pop
pop
mov
out
lret
into
pop
jmp
lret
pop
add
in
int
mov
lds
aad
cld
jb
into
xor
lods
sub
movl
fdivl
push
popf
stos
outsb
js
shrl
cmp
jge
jecxz
fidivrs
push
fsub
aam
xchg
inc
into
mov
push
mov
pop
xor
mov
imulb
outsl
int
idivb
xor
or
icebp
jb
add
pop
xchg
pop
leave
mov
adc
xor
punpcklbw
aas
xchg
loope
xor
dec
cmp
idiv
stc
jae
or
les
mov
dec
imul
push
rcll
pop
or
sbb
inc
or
dec
out
notl
cmpb
rorb
mov
popa
mov
or
outsb
nop
clc
jbe
sbb
or
adc
jnp
sub
adc
call
cmpsl
xchg
loopne
scas
xchg
mov
loop
xchg
dec
inc
inc
push
lahf
lcall
dec
sbb
xchg
mov
adc
pavgb
scas
mov
vcvtss2si
sahf
dec
adc
outsl
scas
dec
outsb
and
dec
das
pop
dec
mov
mov
adc
dec
xor
arpl
test
cmpb
addb
dec
push
xchg
and
lock
jb
or
lock
mov
cmovs
mov
jnp
popf
stos
out
xchg
and
push
ja
dec
cmp
enter
mov
pop
pop
incl
popa
andb
push
addb
sti
shrb
sti
mov
mov
xor
popf
in
lods
and
int3
stc
mov
ljmp
inc
push
hlt
dec
arpl
mov
ds
icebp
add
dec
mov
add
lods
sbbl
rcrb
mov
xchg
pop
cmc
pop
imul
notb
loopne
testb
xchg
jle
push
push
xchg
loope
lea
inc
into
lret
mov
cmp
icebp
es
movsb
sbb
inc
sti
jb
loop
insl
jb
test
xchg
sub
imul
js
js
or
fiaddl
mov
daa
loopne
dec
rorl
nop
or
or
sub
and
rcrl
outsb
pusha
inc
ret
data16
lods
xlat
jae
dec
loop
sbb
and
push
push
pushf
out
sbb
bound
jo
and
outsb
lret
pop
and
addr16
sub
ljmp
pop
inc
cmp
push
xchg
fisubl
addl
sbb
mov
and
xor
xor
or
push
cmc
lcall
adc
dec
nop
movsl
pop
pop
push
cmp
xor
cmpsl
push
lret
ds
adc
je
mov
pop
popf
addb
das
sbb
lods
inc
pop
cmp
xchg
jp
int3
dec
sub
cwtl
cmp
mov
rolb
addr16
sbb
rcrb
dec
js
cmpb
jae
mov
mov
stos
xchg
ljmp
push
jne
pop
stos
and
add
call
sbb
into
push
mov
jl
sbb
inc
mov
pop
sbb
or
or
pusha
dec
imul
add
inc
clc
movsl
imul
push
xchg
jle
or
popf
push
das
les
and
inc
ljmp
sub
jae
fwait
bnd
pop
jns
xlat
dec
outsl
lret
in
rolb
roll
popf
dec
insl
aaa
dec
cmpsl
add
incb
add
mov
mov
add
mov
stos
loopne
lret
pusha
cmp
fsubr
idiv
adcl
and
or
lahf
inc
jl
push
jl,pn
adc
fimuls
insb
fsubr
pop
adc
std
add
cmpsl
jo
sub
sub
js
popw
sub
cli
out
sbb
mov
fidivs
jns
arpl
inc
sub
pop
lods
adc
cmc
mov
test
pusha
or
mov
shlb
ljmp
pop
js
lea
dec
dec
mov
mov
dec
sahf
jmp
xlat
roll
push
cmp
aad
jo
sub
test
sbb
xlat
inc
outsl
xchg
cmp
sbb
ja
cs
out
mov
jno
adc
rcrb
int
aas
dec
mov
repnz
and
push
mov
and
jp
ljmp
sub
icebp
rcll
stos
imul
das
pop
cmc
push
test
cmpsb
sub
adc
mov
ja
orl
scas
xchg
xor
adc
push
call
cmpsl
negl
pop
or
fs
mov
push
adc
mov
sti
inc
rclb
rcrl
inc
testb
xor
mov
cld
les
dec
jg
pushf
sbb
push
repz
imul
and
xchg
cwtl
sbb
divb
sbb
sbb
push
mov
push
xchg
aad
call
xor
pop
xchg
in
jle
mov
inc
or
cmp
js
pop
fadds
test
adc
cwtl
lock
jns
xchg
mov
and
jo
adc
rolb
lods
add
sbb
lret
jns
mov
paddsb
mov
and
scas
mov
pusha
lret
inc
push
xor
inc
sub
jno
clc
fmuls
mov
and
rcrb
loop
cmp
cwtl
jmp
dec
cwtl
push
das
imul
mov
rclb
rorb
jecxz
dec
popa
or
loopne
lock
test
fdiv
lret
lods
push
dec
sbb
mov
enter
jb
rcl
add
dec
xchg
sarb
mov
add
roll
sub
bnd
or
jae
add
insb
faddl
and
dec
ljmp
pusha
pop
cmp
push
jno
cltd
xchg
outsb
fsubr
push
cmpsl
sub
ss
repz
fwait
dec
adc
cld
ja
fldcw
cltd
xchg
push
pusha
dec
and
lods
pop
mov
xchg
xor
cmp
dec
hlt
mov
inc
ljmp
and
lds
and
orl
sub
lret
addb
out
cmpsl
push
jae
dec
push
push
jl
inc
fs
rol
add
push
or
mov
mov
pop
aas
mov
sahf
loop
stos
or
inc
mov
add
sbb
in
addb
adc
xchg
mov
cmp
xchg
lods
es
fiaddl
je
mov
scas
xchg
xchg
lds
sbb
out
inc
xchg
adcl
sub
and
add
loope
dec
mov
sub
pop
xchg
dec
cmp
push
pop
mov
pop
pop
or
out
out
cmp
pop
ret
jp
push
cmp
cli
xchg
and
incl
dec
and
pop
arpl
dec
daa
rcll
lea
or
test
add
pop
scas
inc
pop
mov
or
mov
rcrb
adc
mov
lods
scas
pop
xchg
jecxz
mov
loopne
mov
mov
mov
add
arpl
into
dec
rolb
mov
dec
adc
push
data16
pop
std
jae
or
lahf
test
fdivrl
ret
xorl
cld
out
rorb
and
sti
das
cmovs
js,pt
adc
add
pop
cmp
xchg
mov
filds
lcall
push
je
inc
mov
ja
jg
stc
insb
fs
cmp
in
inc
int3
mov
mov
push
aaa
je
dec
rcrl
sub
mov
xlat
sti
cmp
cmpsb
pop
mov
or
adc
cwtl
clc
dec
mov
outsb
or
sbb
push
push
sbb
push
incb
push
xchg
shl
mov
aas
adc
pop
inc
dec
jo
push
push
push
enter
fisubrl
lahf
inc
push
das
add
push
cli
aaa
jecxz
add
mov
fisttpl
jp
jp
ret
inc
das
lock
sub
dec
mov
les
test
add
cld
enter
idivl
mov
mov
in
cmp
cmp
lds
rcrb
divb
cmp
pop
cmp
xlat
and
pop
lock
test
xor
dec
add
fisttpl
mov
pop
pop
add
cs
call
push
jle
push
xchg
lea
loope
mov
pop
add
add
addr16
out
or
fisubl
ds
xchg
std
test
icebp
gs
push
adc
dec
push
jp
mov
scas
outsl
inc
hlt
pop
push
sub
cmpsl
pop
mov
or
stos
sub
mov
ret
pop
cwtl
scas
inc
mov
adcb
es
sarb
int
int
jb
icebp
mov
push
mov
je
sbb
ljmp
inc
adc
mov
scas
hlt
mov
push
mov
push
mov
or
pop
cmp
xorb
cwtl
push
cmp
sbbl
adc
jmp
ret
sbb
imul
stc
jb
and
cwtl
fwait
and
push
pop
pop
inc
sbb
sub
pop
push
ljmp
dec
pusha
inc
test
pop
sub
sub
mov
add
test
test
add
push
or
pop
mov
dec
or
arpl
dec
aad
fbstp
mov
mov
test
in
push
pop
push
ljmp
icebp
pop
test
fcomp
xchg
and
adc
ljmp
inc
push
shufps
inc
rcl
adc
fwait
test
xor
xchg
aaa
xchg
adc
push
push
test
in
jl
pushl
in
sbb
mov
repnz
sahf
insb
mov
mov
mov
js
adcl
xchg
cmpsb
cmp
nop
ret
out
subb
cmp
fisubl
insl
scas
add
inc
ret
loopne
rclb
jbe
sbb
fists
jb
push
cmp
pop
add
jmp
add
fisubs
les
xchg
xorb
ret
in
mov
pop
jge
into
adc
dec
cmc
or
sub
lods
call
cwtl
adc
decl
ja
dec
insl
bound
loope
arpl
mov
into
mov
mov
xor
ljmp
push
or
push
xchg
sahf
adc
ret
sbb
sbb
push
add
test
sbb
jg
jnp
std
js
clc
jne
cltd
push
lahf
sbb
add
shrb
test
out
mov
sbbl
add
mov
fs
xchg
cmp
mov
daa
std
pop
insb
adc
sub
push
lcall
testl
mov
jp
movsb
pop
iret
rorb
adc
mov
mov
jle
mov
notb
arpl
fs
dec
mov
sbb
mov
int3
xlat
or
rol
jle
xor
cmp
or
inc
test
pop
andb
pop
mov
xchg
enter
aaa
lret
js
addb
dec
adc
daa
add
roll
mov
aas
call
jno
dec
pusha
mov
loop
ret
pop
int3
movsl
scas
loope
bound
mov
inc
in
std
pop
pcmpgtb
jl
inc
xchg
mov
jmp
cmp
mov
and
iret
clc
mov
dec
lcall
sub
push
dec
clc
jmp
movsl
ljmp
pushf
add
daa
repz
aam
mov
cltd
mov
movsl
cmp
stos
sbb
pop
movsb
lcall
dec
adc
inc
insb
fcmovu
mov
jle
xchg
sub
data16
xor
dec
mov
or
jg
ret
rcrb
push
ds
xchg
xor
out
jl
cmp
jle
jmp
jecxz
vpmacssdd
mov
push
pusha
stos
sub
mov
xor
pop
and
pop
test
add
cli
sbbl
and
call
jo
pop
mov
mov
stos
arpl
dec
call
test
out
mov
jb
flds
mov
xchg
inc
aam
add
jne
call
pop
std
adc
fwait
cmc
fidivrs
icebp
mov
and
ds
jo
ja
add
iret
out
dec
and
and
adcb
pop
sub
and
adc
xchg
and
clc
divb
jno
mull
adc
imull
inc
test
rcll
mov
fsubr
iret
dec
call
xor
xchg
cwtl
fs
inc
arpl
rorl
sbb
pop
cmp
push
xor
and
pop
in
sub
lods
lret
inc
or
das
hlt
add
mov
and
or
mov
je
int3
inc
pop
or
pop
fisubrs
jmp
stc
or
gs
lcall
push
lods
pop
mov
lea
xor
dec
dec
inc
lahf
push
in
fs
xchg
jecxz
shll
dec
mov
fsubrl
ljmp
add
les
inc
fildl
or
pop
dec
test
push
cmp
pop
or
stos
adcb
cld
xor
push
fcompl
test
pop
clc
aad
adc
add
push
fisubl
push
pop
or
loopne
sub
aas
push
sub
add
jle
cmp
and
mov
xchg
or
or
xchg
add
gs
xor
and
or
add
xor
inc
loop
call
add
xor
psrlw
sub
sub
jnp
test
arpl
add
sub
out
jb
outsl
jo
mov
cwtl
inc
pushf
scas
aad
fs
and
adc
in
leave
jo
dec
sbb
test
dec
mov
inc
and
add
or
mov
push
fildl
and
imul
ds
lret
push
aaa
cmpsl
mov
mov
mul
or
mov
inc
roll
sub
mov
inc
aaa
pop
jo,pn
add
rolb
mov
inc
jno
sbb
jp
xchg
add
push
xor
add
cli
lcall
add
push
fldt
pusha
push
test
cmp
adc
shrl
je
dec
mov
or
in
or
lret
push
cld
mov
icebp
fwait
mov
cs
dec
sbb
sub
or
jl
push
add
jnp
lock
das
jecxz
rolb
cmp
pop
loope
bound
push
test
lea
test
xor
xlat
xchg
pop
push
cwtl
clc
loopne
bnd
imul
arpl
cmpsb
cwtl
sub
dec
in
mov
lds
shrl
xor
insb
outsl
jp
mov
lods
loope
lods
adc
add
int3
push
push
inc
xor
sbb
mov
movsb
sub
cwtl
jb
jle
fldl
xor
and
inc
scas
lret
inc
orl
movsl
mov
scas
mov
jb
sbb
push
aad
lds
mov
xchg
sbb
out
dec
push
es
cmp
loop
adc
inc
ret
fdivrs
in
nop
add
pop
js
push
mov
pop
push
lds
push
lock
push
xlat
push
push
movsb
daa
xor
cltd
fnsave
dec
call
mov
arpl
adcb
imulb
add
stc
cmp
in
daa
scas
rcll
sbb
xor
fdiv
adc
push
incl
test
or
int3
fs
sub
and
dec
mov
rcll
inc
ficompl
scas
push
adc
pop
pushf
in
sbb
and
rcrb
or
dec
or
inc
add
xorl
add
push
fnsave
aas
mov
cmp
mov
sahf
or
leave
jae
loope
dec
icebp
push
stos
call
or
mov
in
loopne
or
pop
je
adc
xor
lock
mov
mov
subb
pushl
in
push
les
insl
pusha
sub
xor
xor
scas
shll
adc
add
xchg
rcll
popa
inc
push
push
clc
sbb
or
das
inc
jmp
fsubs
push
out
push
and
hlt
dec
adc
test
and
inc
inc
push
bound
filds
or
les
pop
mov
push
ud2
clc
xchg
xchg
es
jle
roll
mov
sahf
loope
mov
test
mov
and
add
cmpsl
test
dec
mov
fs
lcall
lret
fsubr
das
jb
subl
mov
test
xor
mov
or
enter
sti
mov
jl
test
cmpsb
and
ljmp
xchg
cli
lahf
xor
xlat
lcall
add
rcrb
cltd
push
cwtl
push
cmp
inc
sub
mov
push
loopne
ficoml
sub
imul
decl
es
gs
xorb
popf
aam
mov
lods
xchg
leave
xor
lds
fstpl
je
xor
xchg
lret
or
or
xchg
jno
add
addr16
enter
sub
out
mov
pop
fcompl
movsl
jnp
mov
mov
enter
je
ds
inc
invd
push
push
sbb
loop
jne
dec
in
inc
lock
out
ljmp
adc
inc
jge
bswap
jno
push
cwtl
xor
call
jno
cmpsb
xor
addr16
nop
pop
sbb
notb
inc
pop
push
push
push
inc
pop
out
add
dec
mov
mov
in
add
sub
adc
fwait
sub
jle
sub
and
add
mov
mov
sbb
push
dec
dec
and
out
daa
dec
mov
dec
inc
add
mov
xchg
adc
sbb
repnz
sub
or
or
cmp
xor
push
adc
das
ds
cmp
mov
mov
dec
enter
mov
inc
nop
mov
add
shrl
dec
mov
or
not
ret
sub
push
mov
pusha
push
or
push
dec
dec
push
mov
inc
lret
mov
ja
insb
adc
xlat
enter
pop
jae
mov
gs
jmp
mov
movsl
addr16
rclb
cli
ja
fwait
add
cmp
and
or
fdivs
jne
mov
mov
mov
sub
or
and
cmpsb
clc
in
andb
mov
loop
out
mov
addr16
arpl
roll
xchg
out
iret
cmpsb
xchg
leave
dec
notb
call
and
rcrb
pop
loopne
imul
xchg
gs
jl
push
push
in
push
cmpsb
cmp
sahf
jge
aas
mov
jne
sbb
cmpsb
jmp
lock
sbbb
mov
pop
mov
in
test
hlt
and
sub
lock
pop
push
insl
repnz
and
and
adc
mov
mov
shlb
push
inc
popf
ds
and
jbe
sub
and
add
outsl
push
rorl
sbb
push
cmc
shlb
fisubrs
xlat
mov
inc
sbb
lret
and
shl
clc
pusha
mov
pop
mov
pop
test
fnstenv
inc
mov
mov
pusha
das
mov
or
stos
cwtl
into
add
inc
lea
jle
mov
fdivrp
fildl
mov
add
dec
sti
cmpsb
jp
out
or
add
icebp
dec
les
cvtps2pi
fistps
xchg
adc
out
jns
xchg
add
mov
cmc
clc
xchg
xlat
aas
js
in
jo
dec
insl
imul
clc
fnstenv
shlb
mov
mov
sub
dec
pushf
mov
or
enter
and
sbb
cld
outsl
popa
and
mov
movb
inc
cltd
lods
sahf
adc
es
pop
mov
into
call
sbb
jle
js
sub
test
dec
inc
std
xchg
scas
or
jo
in
inc
rclb
or
pop
add
jmp
add
stos
mov
test
mov
insb
add
push
mov
mov
clc
jl
imul
xor
add
push
and
or
xchg
inc
and
das
int3
ljmp
mov
mov
or
mov
rcrb
sarl
jno
cltd
lods
movsb
test
lock
mov
loopne
push
mov
pusha
inc
dec
push
aam
pusha
push
mov
or
fwait
sub
enter
das
std
sub
jb
cmc
sbb
test
aas
bound
out
inc
in
mov
in
sub
add
movsl
ret
imull
or
dec
xor
cltd
lret
sub
or
xlat
push
fstp
xchg
pop
ret
je
pop
mov
test
dec
loop
adc
add
mul
shl
clc
das
inc
std
cmp
sbb
dec
inc
jecxz
sbb
mov
cwtl
jle
lret
cltd
push
cmp
aaa
fldt
mov
out
jno
push
dec
pop
mov
gs
pop
cmpb
jp
dec
add
and
insl
stos
into
stos
cmp
push
mov
sbb
xor
jbe
mov
orl
jge
fdiv
ljmp
adc
dec
sbb
jle
stos
fadds
add
dec
push
clc
lcall
adc
lods
fcompl
leave
nop
sbb
jle
rorl
jmp
ret
adc
cmp
ss
test
jnp
and
movsb
int
test
or
adc
ret
mov
ja
xor
push
sub
cmp
adc
mov
add
scas
mov
loope
mov
sub
std
cli
adcb
jbe
in
mov
pop
incl
add
and
mov
das
pushf
mov
add
inc
test
incb
loopne
into
push
pop
int
inc
xor
ljmp
xor
loop
pop
ret
and
inc
adc
jb
sbb
add
js
jnp
mov
daa
sbb
push
adc
mov
es
test
add
cmp
mov
jbe
sub
mov
push
or
inc
orb
adc
lret
aam
loop
les
pop
cmp
add
fwait
push
out
jecxz
fisubl
movsb
xlat
das
movsb
mov
xor
flds
nop
mov
jg
dec
adc
jno
cmp
adc
mov
push
dec
ffree
mov
mov
inc
imul
xchg
js
mov
and
fdivrs
fs
adc
pop
mov
scas
inc
or
rcrb
test
push
pusha
sbb
shrb
or
jl
into
pusha
loopne
and
add
lea
fs
cmp
fbld
testb
lea
adc
mov
add
push
fsubr
andl
loopne
and
clc
js
or
pop
cmp
loop
mov
xchg
jg
push
sbb
outsb
mov
pop
out
insb
daa
add
jl
sbb
add
in
push
enter
insb
adc
pop
mov
loopne
lret
push
cmc
mov
bound
and
add
lods
ss
jne
out
call
push
dec
test
cs
in
divl
aad
jnp
cltd
pushf
rcr
orb
sbb
sub
nopl
cmp
cmp
aam
popa
pop
mov
dec
arpl
dec
addb
mov
dec
stos
push
nopl
mov
dec
push
push
repnz
dec
mov
test
inc
mov
xor
out
lcall
insb
add
ret
jbe
sbb
cmpsl
insl
jl
pop
rol
outsl
sbb
push
add
jb
mov
or
jnp
pop
movsl
mov
push
or
xchg
dec
jecxz
inc
push
cmp
pop
sub
inc
repz
push
fmull
pop
dec
sti
xor
mov
jg
push
clc
cmp
out
pushw
pushf
jle
pop
and
cmpsb
in
in
dec
aam
popa
or
mov
or
or
mov
push
fs
push
or
lds
dec
lock
inc
loopne
sbb
out
xor
or
add
xchg
adc
pop
push
xchg
shlb
xorl
add
aas
adc
jp
push
call
and
pop
iret
or
add
push
mov
pop
adc
push
jns
pop
test
jbe
sarl
mov
mov
dec
cmpsb
ror
test
xor
pop
mov
addr16
sub
or
stos
iret
lods
fisubrl
and
cmp
aam
ds
aam
pop
mov
inc
xchg
mov
sub
mov
out
push
and
je
dec
sbbl
and
adc
jo
out
js
out
scas
lcall
add
cmp
outsl
push
cmc
jb
pop
rcrl
sbb
xor
pusha
rcll
nop
dec
cld
sbb
inc
xor
into
and
xchg
jl
adc
xchg
adc
ja
dec
sahf
or
roll
or
push
sahf
test
cld
addl
and
add
cld
pop
orb
orb
inc
jnp
sbb
lock
mov
xlat
arpl
add
or
loop
stc
inc
push
add
inc
sbb
aam
push
dec
orb
push
bound
xor
push
dec
in
inc
cs
ffreep
adc
xchg
outsl
aam
hlt
pop
les
enter
cbtw
das
sbb
icebp
std
inc
mov
inc
jns
pop
mov
xchg
sub
jecxz
and
add
inc
insl
rcll
pop
sub
sub
mov
jle
cmpsb
push
add
loop
mov
fsubrl
mov
and
mov
adc
pop
pop
es
xchg
adc
aad
xor
pop
je
mov
push
add
push
dec
idivb
push
scas
and
mov
arpl
mov
pop
cmp
sbb
jb
push
cmc
pusha
mov
mov
pushf
in
loopne
xor
jge
jne
mov
lcall
aad
sub
mov
mov
cld
or
and
add
or
xchg
sub
ljmp
fdivr
ret
pop
push
mov
inc
mov
lea
sahf
dec
hlt
scas
ljmp
pop
inc
std
and
icebp
xchg
push
mov
mov
xchg
jno
into
pop
ja
and
cmp
sbb
pop
je
pop
aaa
les
loop
hlt
dec
mov
ds
rclb
mov
inc
pop
fcomps
fucomp
sub
xchg
push
jecxz
push
cmp
hlt
inc
cld
iret
in
pop
push
clc
jns
mov
ljmp
mov
jno
inc
dec
pop
cmp
dec
jmp
jp
pop
out
frstor
ljmp
in
jno
imul
cmpsl
es
xchg
push
jns
add
add
or
and
mov
cmp
loop
mov
ljmp
cwtl
xchg
jno
and
add
aad
cmp
xor
and
imul
pop
add
mov
cmp
iret
into
test
imul
add
push
sahf
inc
push
shll
pop
dec
shll
xorps
jp
jecxz
jns
or
out
mov
addr16
adc
daa
xchg
icebp
inc
and
sbb
jge
or
fldcw
or
pop
es
jo
lds
pusha
mov
outsl
les
stos
ficoml
dec
lds
popa
cld
cmc
clc
pop
mov
mov
cli
or
push
das
xchg
push
js
loop
cwtl
or
fs
mov
pop
or
out
out
mov
ss
das
push
jo
loopne
into
push
les
xor
pushl
mov
je
jns
cld
or
mov
mov
fwait
aam
nop
sub
loopne
dec
add
enter
mov
mov
and
stc
xor
mov
aam
out
ss
incl
inc
cmpsl
xor
mov
mov
sub
icebp
pop
mov
push
shlb
or
sub
add
xchg
rorb
div
mov
pop
imulb
in
mov
je
cmp
jp
push
test
loop
outsb
mov
mov
xchg
lahf
dec
dec
xchg
mov
dec
test
cwtl
out
or
in
push
clc
pop
adc
push
ss
clc
imul
cs
ljmp
pop
pop
cmp
or
fisttps
add
jbe
sahf
dec
aas
scas
mov
add
imul
pusha
nop
pop
ljmp
or
aad
xchg
or
jbe
mov
imul
push
or
cmp
mov
push
adc
push
jne
shlb
mov
ljmp
cmp
sahf
gs
repnz
push
push
pop
mov
inc
jle
and
dec
inc
xchg
pop
cmpsb
std
insb
sahf
add
pop
push
push
jp
xor
mov
or
popf
sub
subb
inc
fs
jb
data16
lea
mov
xchg
sbb
loopne
movsl
mov
mov
rcl
xor
xchg
mov
sub
dec
clc
ljmp
and
movsb
cmpsl
fldenv
jl
mov
adc
adc
cmp
pop
or
xor
into
push
mov
xor
mov
loope
out
jnp
test
std
adc
cs
aam
sbb
mov
addps
add
cmp
inc
sbb
lods
js
pop
sub
outsb
add
lcall
int3
jnp
leave
rclb
pop
or
xchg
test
hlt
dec
sbb
fisubs
rorb
pusha
repz
or
add
daa
jecxz
loop
je
outsl
add
loopne,pt
dec
cwtl
jmp
dec
jp
jae
or
movsb
jbe
jp
pop
pop
xor
jnp
hlt
sbb
adc
ss
popf
push
popa
fidivrl
dec
sbb
loop
lock
inc
and
mov
loop
pop
jo
iret
cmpsb
or
add
shlb
mov
xor
movhps
aaa
sbbl
or
mulb
hlt
lea
dec
pop
mov
or
repz
enter
cld
jp
and
xor
add
inc
add
mov
xchg
mov
ds
dec
shl
inc
in
test
fidivs
jg
jno
cmpsl
movsb
push
out
iret
iret
or
jl
inc
ljmp
sub
sbbl
lret
mov
pop
adc
scas
test
inc
pop
ss
pop
fsubl
adc
mov
aam
call
je
jbe
out
add
out
xchg
xchg
cld
pop
arpl
xchg
sub
inc
mov
stos
mov
ret
adc
jge
dec
roll
push
rcll
divl
jbe
inc
or
clc
xchg
sbbb
scas
add
or
movsb
dec
popa
lock
mov
adc
pop
jg
lea
mov
inc
loopne
mov
mov
jmp
fadd
cmp
push
or
mov
pusha
add
add
mov
dec
add
pop
mov
sbb
stc
in
mov
clc
fldt
add
lret
lods
test
and
jno
cmp
mull
adc
fiadds
int
leave
pop
clc
add
scas
or
inc
imul
pop
lret
sbb
add
lahf
and
push
notb
or
je
icebp
ljmp
sub
mov
cmp
add
aam
sub
pop
cmp
icebp
pop
push
ret
mov
jno
test
inc
mov
adc
ret
clc
loop
sbb
pushf
jne
adc
rclb
adc
push
clc
adcb
add
pop
pop
loope
jle
mov
js
jo
je
outsb
divl
sbb
movsb
test
mov
mov
fnstsw
mov
sub
call
testl
lock
mov
mov
adc
out
push
pop
sbb
scas
ljmp
sub
cmp
rcr
jl
mov
and
sub
inc
xor
mov
icebp
repnz
xor
mov
mov
insl
or
fisubl
popa
dec
inc
inc
pushl
xchg
ja
cltd
jge
daa
mov
jge
pusha
fwait
add
mov
cwtl
ss
push
and
inc
jbe
inc
jl
in
cmp
call
test
xor
sbb
push
jle
add
out
sub
mov
sbb
cmp
stos
jle
xor
push
lcall
mov
mov
ljmp
lock
and
cwtl
jne
nop
dec
aam
scas
sub
movsb
mov
jmp
mov
cwtl
push
xchg
add
pop
fs
mull
jo
data16
xor
pop
sarl
add
dec
mov
cs
lods
or
cmp
xchg
jo
sbb
popf
or
jo
add
pop
cmc
rol
dec
clc
mov
push
mov
leave
mov
stos
ret
insb
jp
aas
ret
mov
test
push
cmpb
insl
fidivs
add
ficompl
rolb
adc
pop
pop
leave
ds
mov
sub
dec
mov
flds
push
inc
cmp
xlat
lret
mov
cmpb
or
mov
or
rcrl
es
ja
adc
dec
adcb
jge
and
xchg
mov
nop
aaa
or
sbb
insl
and
jnp
push
adc
mov
les
rorl
adc
fldenv
gs
loope
adc
mov
adc
push
add
mov
fsubs
into
into
sub
pop
lret
push
hlt
enter
addr16
mov
call
push
push
int3
adc
roll
aas
mov
or
test
push
jne
dec
in
jae
pop
add
mov
icebp
add
sub
sub
xchg
outsb
aas
testl
lods
fsubl
lods
pop
push
push
fidivrl
sbb
test
sub
push
adc
and
dec
inc
mov
cld
loop
lods
mov
lock
pusha
sub
or
or
dec
clc
fcompl
add
scas
or
sub
fiadds
outsb
loopne
gs
push
jl
dec
push
and
decb
mov
push
movsb
loop
add
scas
insl
pusha
notl
adc
loopne
out
adc
jae
andl
add
or
rcrl
es
adc
call
clc
repz
mov
add
loope
dec
shlb
daa
mov
shl
mov
outsb
xlat
stc
hlt
add
cli
dec
dec
nop
and
xor
inc
es
mov
xchg
mov
push
fisubl
cld
shlb
ret
xorps
mov
xor
pushf
dec
mov
cmp
ret
cld
inc
movsb
jle
insb
add
mov
xor
hlt
sbb
sbb
mov
sbb
xchg
push
sbb
jl
adc
xor
mov
sbb
inc
xor
dec
pop
out
mov
stos
in
add
pop
sub
cmp
ja
daa
or
sbb
out
mov
daa
jl
add
sbb
xchg
aam
clc
pop
icebp
movsl
mov
push
sub
or
fdivrs
xlat
dec
cli
mov
xchg
ljmp
sbb
ret
je
pop
sbb
mov
je
xchg
loopne
or
xchg
inc
dec
sbbb
sbb
clc
das
test
lds
mov
mov
gs
es
clc
push
ret
or
jmp
cmpsl
push
add
xlat
push
or
cmpsl
mov
dec
imul
jo
cmp
mov
hlt
push
adc
cld
inc
inc
xchg
mov
mov
inc
hlt
daa
rcrl
testb
inc
jb
pop
shrb
ficoml
mov
add
loope
sbb
stos
sahf
jp
push
jbe
pop
in
ja
test
divb
out
dec
xchg
lcall
or
dec
fcomp
jnp
cmp
insb
in
xor
push
xchg
fisubl
push
inc
clc
insb
enter
negb
jge
jo
sti
sub
loope
inc
xor
test
sbb
inc
decl
sarl
inc
adc
or
dec
xchg
mov
push
ljmp
xchg
andb
sub
aas
inc
psadbw
mov
sti
je
shlb
es
mov
sub
into
cld
sub
inc
mov
in
add
xor
in
mov
dec
int3
imul
mov
in
inc
inc
test
xor
mov
add
je
or
or
fcoml
pop
je
cmp
loopne,pt
cmpl
stos
rorb
arpl
add
scas
fsub
add
bnd
bound
mov
pop
les
mov
inc
mov
ja
out
jle
or
cmp
and
clc
sub
mov
mov
or
stos
mov
xchg
addl
xchg
jo
pop
mov
ljmp
test
add
mov
xchg
dec
cmp
sbb
pop
or
movsb
pop
jbe
test
add
xchg
xchg
mov
daa
sub
push
insl
push
shl
loop
xchg
std
cld
cmp
jno
rcrb
jb
imul
cmp
and
pusha
jb
fld
iret
xchg
jne
dec
fs
lret
inc
pop
push
and
pusha
je
out
or
mov
jbe
mov
xchg
add
mov
mov
ja
and
dec
push
push
mov
sarb
push
nop
adc
inc
xchg
pop
and
and
sub
cli
adc
jbe
add
and
shlb
aam
or
insl
fs
inc
pop
fisttpl
aas
in
push
movsb
inc
imul
les
loope
cmp
outsb
hlt
inc
inc
call
pop
xor
or
mov
jl
jnp
push
mov
out
mov
inc
jge
rep
cld
adc
mov
add
add
shl
enter
push
dec
clc
adc
cli
loopne
mov
xor
into
addb
sahf
mov
or
andl
mov
mov
xchg
xchg
inc
cmp
pop
jae
mov
pop
push
sub
pop
lea
arpl
jbe
adc
adc
add
pushf
stos
inc
push
iret
xor
ret
outsb
add
sbb
daa
notb
and
aas
mov
call
and
push
hlt
pop
daa
mov
rcr
fstpt
add
mov
pop
or
jle
ret
fildl
aad
ljmp
stos
lds
dec
popa
ret
cli
adc
cmpsb
push
xorb
gs
xor
cmp
xor
negl
pop
xorl
iret
addb
in
xchg
lods
sahf
js
and
insb
jl
inc
cmp
ljmp
jle
lods
xchg
shlb
or
movb
popf
or
jnp
repz
push
loopne
enter
ret
mov
and
jbe
mov
mov
data16
dec
out
movsl
dec
inc
push
lret
jecxz
push
dec
pop
lea
pushf
mov
inc
movswl
add
and
add
mov
dec
sbb
xor
mov
xor
pusha
jno
adc
andb
inc
xchg
and
dec
inc
sub
push
sbbl
les
mov
test
pop
pop
aam
shl
sbb
pop
or
xchg
xor
push
sub
and
pop
out
test
dec
inc
ret
lods
and
pop
mov
scas
push
outsb
add
jp
push
rcrb
inc
arpl
push
pop
push
xchg
xor
xor
and
push
sbb
pushl
insl
aam
add
xchg
push
lods
mov
mov
add
mov
cli
mov
ds
shr
lods
push
cmp
sbb
movsb
leave
iret
sbb
xchg
fs
and
insl
sbb
movsb
ret
sar
xchg
xchg
gs
and
xchg
lods
aaa
ds
pusha
hlt
cld
jle
and
cmp
pop
fs
and
push
dec
outsl
xor
jp
cmp
or
aaa
xor
adc
ss
xchg
pop
std
or
sahf
sub
js
jmp
pop
inc
psubusb
mov
cwtl
repnz
lods
adc
outsb
cmp
fimull
mov
ljmp
and
addr16
jg
push
addb
pop
test
and
or
push
mov
insl
inc
sar
push
insb
inc
js
rol
aad
shlb
rcrb
mov
mov
aas
dec
inc
cmp
mov
mov
push
xchg
roll
inc
gs
pop
inc
push
cmc
push
pop
add
sahf
cmpsb
cmp
lods
scas
in
pop
add
inc
jo
popf
dec
add
mov
test
cmpsb
sbb
fsubrl
fadds
push
out
add
cli
push
cmp
dec
or
add
push
les
ljmp
les
into
rcr
rcrb
sbb
sub
test
pushl
mov
push
jne
inc
insl
cwtl
pushf
leave
jg
cmpb
inc
int3
test
inc
sbb
add
pop
sub
loopne
jge
aad
les
lods
lcall
rcrb
outsb
pop
inc
dec
arpl
cmp
cmp
xor
cs
lods
adc
scas
rolb
cli
lret
sub
sbb
pop
cwtl
js
das
jg
push
add
ficoml
ja
mov
mov
sti
loopne
sbb
daa
lods
ret
sub
dec
movb
xor
lods
sub
sub
pop
int
mov
xchg
adc
adc
sbb
popf
rcrl
pop
jmp
and
into
push
fcomps
pop
enter
inc
pop
sub
scas
sbb
or
adc
shr
adc
cs
stos
es
cmpsb
loop
test
add
jmp
push
stos
xor
jb
and
add
pop
inc
pop
and
aam
xchg
jecxz
fisttpll
adc
ljmp
mov
pop
int3
push
pop
clc
cmp
lgdtl
negb
inc
stos
mov
mov
mov
shrb
js
dec
sub
push
push
and
iret
divb
mov
ror
loopne
adc
movsb
call
pop
and
daa
int3
xchg
sub
enter
pusha
fwait
push
mov
in
mov
lcall
cwtl
outsl
insb
fstl
rolb
rcr
in
or
or
test
xchg
pop
xor
in
test
push
xchg
sub
daa
mov
adc
dec
dec
aad
sub
cmp
insb
adc
in
scas
add
lcall
ss
and
imul
push
fsubs
push
pop
clc
pop
add
adc
imul
add
sub
popa
inc
shrl
cmp
pop
movsb
clc
sub
jle
mov
pop
rcl
sbb
xor
sub
add
adc
jbe
xchg
add
xor
dec
test
les
mov
xor
mov
push
push
sti
xchg
out
iret
cmp
xchg
adc
mov
jnp
mov
xor
jp
pop
jbe
mov
lods
shrb
and
hlt
cmp
adc
push
mov
inc
or
mov
jmp
por
clc
pop
and
sahf
xchg
mov
jmp
fisubrl
adcl
cmp
js
cmp
dec
cmp
add
inc
push
in
push
or
fwait
inc
push
mov
pop
fcmovb
aas
movsb
daa
push
rcrl
mov
or
push
fnstsw
inc
pop
lods
push
ss
das
mov
sub
jl
lds
out
add
mov
lock
into
adc
mov
sub
call
xchg
test
pop
dec
inc
cmp
lret
adc
iret
icebp
inc
jp
rolb
xor
js
call
data16
js
cmp
push
mov
mov
sahf
test
loope
mov
mov
cld
mov
add
dec
fadd
movsb
je
and
inc
inc
adc
sub
ljmp
ret
lods
xor
add
loop
int3
adc
loope
mulb
push
cmp
push
mov
xor
mov
rcll
cmpl
pop
enter
sbb
push
call
movsl
xor
add
cmp
inc
in
cmp
jo
push
ljmp
divl
jmp
call
into
and
inc
jmp
mov
mov
push
pop
xchg
pop
movsb
enter
inc
and
add
push
les
jmp
sbb
fcompl
mov
sbbb
dec
adc
clc
or
dec
add
stc
mov
mov
adc
pusha
pop
inc
push
mov
fists
xchg
xor
push
shrl
movsb
jl
cmp
or
inc
das
in
icebp
inc
lds
bound
pop
push
add
inc
outsl
push
pop
into
repz
jo
or
cld
lock
les
mov
mov
xchg
pop
jp
sub
out
cmp
inc
dec
or
pushf
cld
mov
fs
das
sbb
je
adc
push
ja
aad
inc
shll
cmp
rcrl
and
inc
fisubl
push
xchg
jae
mov
test
pop
mov
cmp
pop
test
sbb
push
inc
adc
callw
mov
mov
mov
fiadds
jbe
cs
lock
sarb
push
test
push
inc
push
xor
jecxz
jp
ret
fdivs
pop
cmp
out
xchg
shlb
add
xchg
movsb
mov
lods
mov
mov
sti
jmp
iret
popf
imul
sub
fildl
jno
xchg
nop
or
outsb
adc
mov
push
js
push
pusha
add
jmp
sub
aam
or
lea
xor
cmp
fs
pop
mov
mov
shrb
push
cld
arpl
adc
stos
add
jmp
popa
pop
xor
push
sbb
imul
mov
ficoml
les
push
rcrb
inc
sbb
in
push
lods
clc
fwait
lock
test
inc
adc
and
cmc
insb
lock
decl
sbb
andl
inc
jg
push
lret
and
fs
or
psubd
cwtl
arpl
stc
or
sub
sub
ret
xlat
lds
sti
xchg
ss
push
dec
inc
jmp
sbb
aam
sub
or
test
pushl
and
outsb
xchg
test
scas
mov
outsb
call
daa
fsts
mov
les
cmp
cmpb
mov
add
inc
decl
fnstcw
mov
cmp
jge
sub
out
and
lds
push
cld
es
add
and
fs
or
inc
jg
and
outsl
popf
rclb
je
fstpl
test
lds
test
add
sahf
pop
insl
ret
mov
ficomps
add
or
insl
xchg
dec
or
dec
test
adc
push
pop
jge
xor
mov
cmp
inc
dec
hlt
or
movsl
push
pusha
repnz
cmpsb
xchg
shlb
jl
dec
sbb
mov
or
mov
clc
andl
or
sbb
mov
mov
mov
cltd
lock
fs
sub
mulb
cmpsb
dec
xchg
sub
adc
mov
pop
xchg
sbb
jg
sub
pop
push
aas
adc
cmc
xchg
add
es
ficoms
cmp
bound
dec
test
add
mov
mov
icebp
push
dec
dec
sarl
or
pop
lods
ds
sbb
dec
ljmp
rcr
jae
fstps
or
inc
je
icebp
movsb
pop
hlt
fisubs
lcall
xlat
adc
adc
and
mov
roll
fadds
aaa
pop
inc
jo
aaa
mov
or
sbb
pop
mov
test
nop
sahf
or
jg
or
test
daa
shll
xlat
xor
rclb
iret
in
lcall
stos
testb
xchg
pop
cmp
and
cmp
inc
aam
cltd
and
outsb
mov
mov
icebp
xchg
das
loopne
icebp
push
mov
dec
xor
aad
je
push
in
mov
pop
insb
adc
sub
rorb
notb
cmp
dec
xorb
jp
insb
faddl
sbb
in
in
call
clc
imul
mov
adc
jle
icebp
pop
fdivl
pop
and
dec
sbb
cwtl
add
aad
xchg
lea
subl
dec
outsb
adc
je
ja
xorb
jle
pop
mov
and
loope
in
pop
xchg
cmp
mov
mov
xchg
or
shl
lea
addb
cwtl
adc
jg
stos
mov
pop
inc
pop
cmp
mov
fiadds
stos
pop
call
movb
xor
cmp
mov
or
pop
cmc
add
movsb
inc
divb
ds
add
loopne
in
ljmp
adc
mov
pop
and
test
icebp
jge
adc
out
xor
cmpb
test
jl
or
iret
aad
cld
pop
mov
stos
xchg
and
cld
add
dec
fdivrs
clc
push
frstor
push
xchg
fisubrl
xchg
adc
in
jle
adc
lock
les
idivl
sub
add
mov
insl
mov
scas
jb
or
lcall
pop
or
repnz
jb
jp
mov
sub
rcll
pusha
add
inc
jg
fs
mov
or
movsl
test
lret
cld
test
fmul
pop
imulb
pop
aas
dec
lods
pop
dec
test
or
rol
push
in
mov
pop
call
ljmp
les
lea
sti
test
scas
push
mov
adc
mov
add
fimuls
mov
rol
mov
outsb
jo
clc
je
and
inc
lret
nop
mov
and
inc
fdivl
pushf
mov
fmuls
mov
jno
mov
into
push
sbb
jmp
dec
lcall
push
mov
in
incl
clc
xlat
push
adc
push
push
decl
ss
or
mov
xor
cld
sbb
cmp
mov
mov
ja
iret
in
dec
dec
call
mov
dec
in
movsl
mov
dec
push
xor
iret
pop
adc
rol
imull
nop
or
sbb
push
mov
lods
mov
fwait
xchg
push
xchg
sub
scas
cmpsb
pop
rclb
mov
mov
cmp
jns
push
cli
xchg
dec
inc
add
pop
test
das
in
fadds
sbb
rcr
inc
mov
dec
or
inc
or
rclb
inc
cmpl
mov
add
lret
decl
mov
test
imul
mov
or
nop
cmp
jg
and
mov
aas
inc
jb
pop
jmp
lock
xorb
popf
dec
stos
add
rolb
xor
jbe
es
loopne
imul
jns
imul
loop
jo
xchg
inc
aaa
popa
imul
pushf
inc
dec
cmpsl
movmskps
stos
out
push
fdivrs
add
fisubl
popa
xchg
clc
or
jns
pusha
xchg
ret
in
scas
movsb
dec
nop
idivb
cmpsb
imul
data16
ret
add
pushf
out
lds
dec
bound
xchg
mov
xchg
jge
nop
test
add
fs
xor
loop
push
cs
dec
inc
movsl
dec
bound
out
add
xchg
fs
sbb
scas
stos
jmp
int3
cmp
xchg
in
xor
inc
scas
ret
dec
inc
adc
incb
ss
outsb
popa
cwtl
fidivrs
sub
outsb
push
push
cmpsb
dec
fwait
sarl
mov
rcll
gs
ljmp
loope
sbb
js
mov
mov
out
sub
push
or
mov
pop
inc
clc
add
pop
mov
cmp
dec
pop
jg
out
stos
inc
mov
incl
xlat
lcall
push
adc
es
daa
jo
jge
adc
xor
mov
mov
mov
xchg
lcall
inc
push
dec
loope
xchg
jno
loope
adc
in
aad
or
fisttpl
es
je
xor
sub
insb
xor
repnz
mov
mov
js
adc
and
xor
mov
push
push
es
rol
hlt
and
scas
out
mov
cs
dec
xchg
cmc
loopne
shrl
mov
sbb
push
mov
pusha
rclb
cmp
sub
cmp
mov
inc
mov
sbb
jbe
push
lods
arpl
sarb
lock
mov
std
in
test
int3
add
jmp
mov
mov
daa
inc
pop
les
scas
dec
jmp
out
decl
sub
mov
gs
mov
rcrb
fwait
xchg
cmp
pusha
and
mov
ret
scas
les
lret
pop
fucomi
insl
jb
and
cmp
mov
ds
addr16
stos
std
cmpsl
sub
dec
xchg
lock
add
mov
fstps
je
push
mov
or
xchg
xchg
adc
mov
xor
imul
xchg
icebp
shlb
movl
dec
incb
nop
lods
push
jbe
mov
lods
push
xchg
mov
lds
sbb
sub
int3
lock
lock
ljmp
bound
push
test
mov
mov
pop
push
adc
jnp
cmpsb
jecxz
mov
push
adc
ja,pt
scas
dec
scas
adc
sbb
cmpl
xchg
sbb
jp
xor
rorl
cwtl
imul
sbb
fsubs
shl
xlat
pushf
popa
insb
mov
into
out
xchg
je
jmp
leave
cli
mov
iret
push
push
push
dec
xchg
cs
js
xor
adc
mov
adc
cmp
cs
add
ja
jb
andb
inc
mov
xorb
ss
add
nop
add
hlt
idiv
fnstcw
fcomps
inc
shr
imul
and
cmpl
into
push
mov
push
pop
out
inc
jb
fs
xorl
leave
sahf
mov
sbbb
push
call
xchg
jecxz
imul
incb
jae
lock
sbb
std
add
xorl
int
dec
pop
negl
stos
test
pusha
stos
xchg
movsb
fistpl
pusha
test
lret
fisttpl
push
add
mov
xchg
xor
cmp
inc
addr16
je
mov
sbb
push
sahf
js
fcmovu
dec
hlt
or
lods
movsl
js
and
pushf
imul
inc
push
das
mov
pop
mov
pop
jg
ret
or
out
movb
xor
xor
das
je
xchg
or
test
in
or
xor
jnp
rcrb
aaa
test
cs
mov
jecxz
in
ljmp
lock
sbbl
push
mov
sbb
pop
and
add
rorl
lret
int3
jg
xchg
insl
aam
adc
inc
push
cmc
push
lods
dec
loopne
push
pop
out
or
shrb
mov
and
jb
aam
xlat
jl
xchg
push
or
bound
cmp
cmp
add
arpl
dec
pushf
lods
je
fsubs
xchg
or
inc
inc
and
mov
adc
insb
mov
push
out
outsb
inc
or
out
icebp
jne
pusha
fsubrl
cltd
bnd
dec
into
sub
pop
add
sub
mov
lea
adc
push
pop
jp
jno
mov
inc
and
or
std
add
inc
pop
xchg
jbe
mov
push
sbb
mov
adc
int
sub
mov
xchg
loop
cmp
add
xorb
mov
test
and
nop
or
sub
je
xchg
hlt
xor
xchg
nop
fstpl
jb
lea
adc
mov
or
or
push
sbb
aas
cld
es
pop
inc
and
fsubrl
pop
cmpb
xchg
loopne
cmp
rclb
sti
loope
or
mov
xor
fsub
pop
nop
fcmovb
aam
shlb
push
js
arpl
adc
inc
dec
push
mov
add
cwtl
xor
jae
add
aam
mov
xor
pop
or
sbb
dec
jne
fcoms
cmp
jecxz
iret
mov
mov
jns
and
test
cmp
pop
add
mov
in
outsb
cmp
loope
jbe
jne
das
adc
test
lret
dec
mov
in
mov
les
loopne
js
cli
add
cmpsb
mov
sbb
imul
mov
mov
negb
jo
adc
xlat
lods
adc
dec
push
popa
add
cmp
jo
inc
pop
push
es
out
jl
xchg
xor
mov
sarb
adcl
push
mov
pop
inc
loop
in
jmp
jne
in
xchg
xlat
mov
loopne
data16
push
mov
mov
jle
out
inc
jne
jmp
mov
fldenv
jno
dec
add
jecxz
mov
pusha
adcb
arpl
inc
sub
pop
repnz
outsb
sbb
or
dec
dec
mov
imul
cmpsl
or
sub
test
adc
sbbb
push
jne
loopne
inc
jecxz
and
xor
inc
cmp
jno
aad
addl
repnz
or
jle
sbb
lcall
xor
or
cmp
ret
mov
sbb
adc
loope
jge
jp
cmp
xor
pusha
inc
ljmp
inc
stos
into
icebp
imul
mov
push
out
and
inc
sbb
pop
lods
or
faddl
and
setae
sbb
ds
cmp
mov
fnsave
negb
js
lret
dec
pop
mov
dec
arpl
fidivs
jmp
test
pop
movsl
push
popf
ljmp
mov
dec
mov
xlat
icebp
icebp
xor
sbb
dec
mov
lock
push
inc
dec
add
push
xor
lods
mov
ret
xchg
fildll
push
xchg
addb
dec
or
icebp
divl
xchg
mov
push
sahf
xor
pop
xchg
scas
mov
xchg
repnz
in
test
xchg
faddl
cwtl
dec
scas
sbb
jb
dec
scas
pop
sti
cmp
dec
xor
idivl
ss
and
or
fs
jb
cmp
push
inc
and
es
hlt
xchg
enter
pop
xchg
cwtl
aam
mov
add
pop
push
push
and
lcall
rorb
and
pop
cmpl
jl
cmpsl
in
test
outsb
iret
mov
addb
insl
rclb
ficoms
repz
jmp
ds
xor
mov
dec
fldcw
pop
scas
fcmovnb
imul
dec
lods
dec
loop
xor
daa
outsb
xor
fwait
cmpl
daa
xor
jb
sbbb
xor
lahf
bound
call
mov
push
push
cmp
cmovg
add
test
xchg
add
and
jb
xorb
xlat
xchg
inc
loope
arpl
jb
jne
and
xchg
icebp
sub
popa
inc
insb
push
insl
sahf
push
inc
cli
ret
add
sbb
cmp
decl
stos
data16
movsl
sub
test
daa
push
insl
testb
xchg
adc
push
cmpsl
and
and
sub
js
inc
lret
adc
scas
cvtdq2ps
insl
inc
loopne,pn
scas
sub
mov
bound
add
mov
dec
sub
pop
pop
sub
mov
sbb
shll
lcall
push
and
dec
fs
or
xchg
rcll
mov
inc
mov
fisubs
xor
in
sbb
push
decl
and
fildl
or
xchg
bound
scas
cmp
pop
ss
or
mov
test
in
or
loope
insb
jmp
sub
sbb
movsb
das
and
sub
xor
insb
inc
jnp
mov
mov
sahf
mov
in
pop
mov
mov
test
and
add
jmp
adc
test
push
rcrb
add
test
outsl
rcl
mov
ja
cltd
pushf
sub
push
cmp
mov
cmp
sub
mov
pop
ret
inc
mov
jne
popa
fs
push
rcll
push
ret
out
jg
adc
movsb
mov
push
jbe
stos
sbb
je
mov
push
jae
clc
aam
inc
push
test
xorb
sbb
ljmp
push
movups
push
mov
sub
mov
out
stos
rcll
pop
loope
dec
loop
aad
mov
insl
out
or
cs
xor
cmp
inc
jbe
cltd
iret
xor
jl
scas
out
sbb
push
enter
out
jnp
pop
ljmp
daa
cmp
ret
or
popf
out
mov
orl
lock
out
mov
and
dec
jns
push
lock
sbb
mov
push
or
cmp
pop
xchg
xor
jle
mov
adc
xchg
in
cmp
jb
lret
push
iret
cmp
adc
lods
sub
js
popa
addr16
push
push
xchg
mov
xor
sub
inc
jmp
cwtl
add
fucom
sbb
pop
sub
xor
xchg
add
fisubl
mov
xor
fstpt
mov
or
xor
lret
push
insb
lds
pop
add
and
jae
in
push
jmp
and
cli
cmp
inc
push
and
in
dec
cld
xor
push
dec
stos
rclb
sarb
cmp
and
pop
jne
dec
lea
loop
aad
outsl
adcl
mov
ficoms
and
sahf
dec
mov
mov
ret
mov
jl
outsb
or
push
sbb
cmp
ljmp
shll
or
out
jns
or
aam
sbb
push
sub
or
mov
aad
movsl
fldl
jp
lret
push
into
jo
adc
call
jno
fcoml
cmc
mov
subl
xchg
pop
inc
inc
cmp
cmp
fisttps
ja
scas
add
xchg
push
xchg
push
test
pop
xor
pop
outsl
loopne
xchg
mov
sbb
and
and
ret
mov
aam
in
sbb
pushf
mov
pushf
jno
sahf
xchg
mov
inc
ja
sbb
jae
push
mov
mov
out
mov
popa
aas
cmp
bound
adc
mov
and
imul
dec
inc
xor
loopne
push
in
sub
mov
loop
jl
pop
loope
in
ss
scas
jge
mov
jp
cmp
fidivrl
shrl
es
inc
fdivl
add
psubsw
and
lods
add
xor
mov
imull
and
ds
xor
popa
sbb
jo
mov
jp
inc
scas
test
fmull
cmp
push
adc
insb
insb
add
cmc
call
mov
out
jne
pop
insl
outsb
xorl
pop
and
cmp
xor
add
jg
jp
sub
lods
mov
mov
stos
add
adc
insb
cmp
and
insb
xchg
addl
jecxz
fimuls
sub
or
mov
aaa
fwait
and
dec
out
cmp
lea
mov
int3
and
popa
cmpsb
call
xchg
lcall
pop
ja
repnz
fisubrs
xlat
cwtl
imul
sub
jnp
push
jle
sub
imul
xor
cmp
adc
cmp
or
dec
jb
lea
add
mov
js
mov
adc
leave
in
neg
in
imul
pop
or
push
mov
aad
adc
cmp
bound
mov
aam
sbb
movsl
test
je
rcl
pop
xchg
iret
mov
and
sbb
and
adc
loope
mov
pop
jbe
adc
pop
nop
in
inc
add
rol
or
pop
lds
sbb
popa
es
loop
mov
mov
sbb
shll
xor
push
iret
jle
mov
add
push
cmpsl
stos
hlt
mov
fdivp
push
fidivl
sub
jp
insl
lods
push
inc
cltd
cs
dec
mov
jecxz
pop
jnp
xor
test
push
add
mov
add
mov
jge
push
sub
rcrb
icebp
push
andl
loopne
inc
jo
jo
push
loope
sbb
xlat
push
aad
fadds
divl
adc
sub
dec
aaa
pop
push
inc
add
push
mov
clc
mov
xchg
cmpsb
mov
ret
add
ds
movb
shlb
es
data16
and
es
shlb
pop
movsl
mov
mov
mov
fmuls
or
fnsave
das
test
sbb
mov
xor
addl
cmp
test
cld
mov
cltd
aas
js
loop
lods
push
push
inc
enter
dec
andl
sbb
mov
call
rorl
setne
push
lahf
mov
jge
inc
sbb
fdivrp
sbb
sbb
adc
jns
add
mov
and
add
sub
inc
pop
testb
sub
or
or
ljmp
jae
addl
inc
lea
scas
or
cmp
vpsrad
out
and
push
sbb
push
lea
add
cmp
das
inc
mov
add
sbb
rorb
jo,pn
pop
cmp
mov
fisubl
push
cmc
adc
add
arpl
adc
test
outsl
and
adc
push
imul
pusha
xor
or
cmp
test
or
push
mov
dec
xchg
add
mov
jle
pop
dec
je
jl
iret
jg
add
sub
cli
jge
sub
add
int
add
push
rorb
pop
js
imul
mov
aam
inc
outsb
mov
jmp
and
in
and
mov
xchg
inc
pop
sbb
loope
pusha
stc
mov
cmpsl
outsb
ret
pop
call
out
test
mov
je
loope,pt
cs
das
icebp
sarl
push
in
sar
xchg
adc
pusha
mov
fisubl
cmp
iret
pop
popf
add
stos
incb
pop
push
push
push
fdivr
aam
iret
xchg
dec
sbbl
sbbb
fsubrs
mov
and
sbb
jle
add
pop
add
fwait
es
cmp
popa
push
cmp
pusha
or
and
pop
cmp
in
cmp
mov
cs
adc
fimuls
mov
repnz
fbstp
jbe
adc
dec
je
jno
test
ret
xlat
popa
dec
ja
rclb
jp
loop
inc
jae
js
stos
or
add
aam
js
sub
lds
out
insb
cmp
mov
pop
mov
imul
add
fadds
imul
rol
adc
inc
jnp
inc
stos
xor
addl
or
scas
push
cld
add
xchg
inc
or
xor
mov
lds
push
fistpl
dec
out
pop
xchg
rcrb
dec
repz
cld
mov
loope
dec
imul
pop
int3
pop
mov
xchg
dec
in
daa
sub
sub
or
dec
xor
stos
jne
test
les
pop
and
ret
push
ss
push
mov
pop
maxps
jge
push
imul
xor
dec
stos
sar
cmp
js
jecxz
pop
cmp
rolb
aam
sub
push
mov
in
and
jnp
add
jp
mov
sar
add
loop
fwait
movsl
xlat
mov
rorb
ss
nop
push
xor
cs
xchg
push
insl
ret
bound
push
mov
outsl
loope
out
rorl
add
xchg
mov
jbe
mov
and
cmp
shrl
mov
sbb
sub
adc
adc
sbb
pop
inc
outsb
push
mov
mov
sub
xchg
lock
gs
loop
push
jg
stos
fs
ljmp
aas
lods
cli
cmc
test
std
or
sti
xchg
sub
adc
xchg
dec
aad
push
test
xlat
dec
imul
loope
mov
ss
jmp
outsl
mov
sbb
adc
orb
cltd
add
js
and
fisttpl
roll
jmp
cmp
sbb
fs
movsl
pop
cmp
mov
jo
sbb
addl
jmp
xchg
push
das
scas
pusha
popa
sub
addl
movsl
mov
inc
pop
roll
add
and
pop
roll
push
sub
adc
sub
incl
shl
icebp
shlb
xchg
xor
inc
dec
sarb
pop
push
mov
pop
pop
shr
cmp
repz
mov
dec
sbb
movsl
ja
push
clc
add
int3
mov
fadds
notb
lock
or
outsl
push
mov
xor
cmpsl
sub
lods
addr16
inc
push
mov
add
adc
sub
icebp
fcomip
das
testb
push
jns
in
mov
or
and
imul
in
jae
mov
aad
cmp
daa
fdivl
vsubss
addb
mov
aaa
mov
xor
lock
ljmp
iret
fcmovb
xlat
movsb
push
or
pusha
popa
negb
jmp
jne
js
add
mov
cmp
call
jne
pop
pop
pusha
and
sbb
or
fcmovne
xchg
sub
arpl
test
add
push
add
mov
repnz
adc
dec
adc
outsb
lds
mov
dec
add
loopne
fbld
out
insb
lock
andb
ret
rcrb
iret
push
inc
clc
mov
sbb
pushl
cmpsl
aad
xchg
or
mov
js
popf
shrl
sahf
mov
pusha
out
push
and
sub
jmp
xchg
lahf
fistpll
es
lahf
pop
lea
jae
ret
add
push
lods
sub
rcll
and
daa
js
in
push
je
pop
cmpsl
aad
dec
xor
xor
dec
pop
push
test
mov
lcall
popa
sbb
roll
test
mov
adc
sub
mov
test
inc
jge
addr16
push
pop
xchg
or
xorl
dec
dec
jnp
test
push
fidivs
je
les
xor
imul
or
sub
mov
xchg
mov
add
ja
negb
jo
mov
jmp
jp
sbb
mov
shlb
or
mov
rclb
fmuls
inc
gs
fisttpl
xchg
or
fbld
push
jp
lock
fmuls
xchg
mov
loop
and
loope
mov
pop
mov
cs
sub
xorb
clc
cld
xchg
fsubl
sub
imul
std
jge
arpl
pop
scas
insb
jg
loope
scas
insl
pusha
test
mov
jb
stos
cmc
loop
adc
inc
aas
sbb
enter
or
dec
scas
loop
push
notb
cmc
or
dec
ja
mov
mov
or
sbb
dec
jmp
jns
dec
aam
imul
bound
cli
insb
arpl
and
shlb
cmp
mov
push
sbb
xchg
fisubl
imul
test
xchg
rcrb
push
adc
jbe
in
movsl
jb
sub
xor
rcll
inc
arpl
rolb
mov
pop
push
fwait
xchg
xor
leave
rdpmc
cmpsl
xchg
bound
or
adc
jmp
sbb
pop
rcll
mov
xchg
mov
jns
push
out
or
or
xchg
mov
sub
scas
mov
sub
lock
sti
roll
sbb
pop
out
stos
aad
imul
stos
push
fisttpll
add
pop
jmp
insl
push
pop
and
je
push
bnd
hlt
cmp
ljmp
mov
std
daa
adcb
repz
sbb
jge
call
clc
xor
fsubr
push
sbb
or
sub
or
adc
sti
lock
xchg
imul
lahf
aaa
cmp
lcall
mov
mov
mov
jne
in
shl
and
ret
inc
lret
ret
or
in
dec
rol
rorl
fstl
dec
add
shlb
mull
ds
pop
insl
arpl
inc
popf
mov
jle
xor
adc
push
push
add
movb
pushl
iret
mov
dec
clc
and
shr
or
loopne
rcl
jno
xor
or
insb
faddl
lock
xchg
hlt
adc
and
jnp
pop
push
cmp
xor
sub
jbe
xlat
sbb
lret
xchg
dec
jl
push
pop
test
cmp
xchg
or
pop
rolb
shlb
mov
xor
rcll
std
mov
rorb
sub
mov
jno
hlt
xchg
adcb
fisttpll
jmp
mov
adc
ja
lods
dec
stos
lods
mov
jns
xor
lods
sbb
pop
daa
add
dec
pop
shrb
lret
inc
shrb
lock
cmp
insl
lea
pop
int
out
cmp
sarb
mov
gs
add
push
stos
sbb
sbb
mov
dec
sbb
stc
ficoml
xor
fiadds
pop
mov
out
shl
pop
dec
divl
lret
test
or
mov
iret
dec
out
outsb
pop
negl
pop
js
lret
imul
cmp
mov
jnp
cmp
jae
xor
inc
add
adc
inc
push
mov
pop
aas
mov
xchg
sti
push
mov
scas
push
fsubrl
daa
frstor
pop
cmp
xchg
icebp
jecxz
adc
push
push
inc
pop
int
loop
inc
es
ret
jnp
frstor
push
mov
mov
mov
add
arpl
mov
sbb
fidivrl
push
stos
mov
pop
jnp
push
cmpsb
xchg
and
dec
pop
shrb
mov
push
or
int3
loope
fistpll
xchg
adcl
mov
inc
clc
leave
inc
sub
ljmp
pop
in
and
jg
in
and
aad
insl
inc
ss
aam
dec
test
cld
ret
push
xchg
add
push
fisubs
adc
in
cmp
outsl
mov
loopne
add
xor
cmp
sbb
push
add
mov
and
aad
jmp
xchg
lock
data16
popl
mov
push
sub
aam
fucom
xor
dec
sub
aaa
stc
pop
or
lret
scas
inc
xor
or
inc
xor
sbb
aaa
fucomp
js
rcrb
call
mov
mov
push
fcomp
jae
cld
sub
mov
loopne
das
and
push
into
or
dec
insl
add
cli
sbb
mov
pop
lcall
add
sub
mov
sub
inc
pop
mov
shl
xchg
sub
test
leave
loop
adc
je
ret
push
aam
pop
xor
adc
aam
mov
fwait
leave
das
lcall
dec
inc
jmp
xor
call
fisttpll
add
jo
add
aaa
out
aam
xor
shr
addb
adc
cs
test
and
lret
sahf
pop
int
loop
adc
sbb
mov
jecxz
ds
popf
mov
iret
inc
test
mov
pop
push
pop
rclb
gs
adc
or
push
in
movsl
daa
hlt
es
shlb
lahf
in
mov
test
imul
in
loope
fs
xchg
push
scas
scas
fstps
jb
mov
mov
fisttps
mov
dec
xlat
xor
sahf
clc
loop
bound
lods
fcmovnb
adc
lock
sbb
popf
cltd
test
cmp
jbe
xchg
inc
cs
and
sbb
orl
xor
popf
sub
mov
mov
mov
loop
clc
add
movsl
mov
pop
mov
fcoml
dec
sbb
xor
mov
jecxz
jne
aad
sbb
inc
mov
mov
cmpsl
movl
fiaddl
lea
push
inc
mov
movsb
out
icebp
dec
pop
lahf
lahf
orl
xchg
sub
scas
cmp
popa
jnp
inc
cmp
xchg
add
std
and
add
stc
fstl
add
insb
jbe
or
pop
push
incb
inc
add
sub
mov
repnz
data16
cmp
adc
xchg
jp
hlt
repz
push
lahf
pop
out
cmp
push
adc
pop
loope
popa
push
jnp
push
push
inc
inc
ja
lret
mov
sbb
mov
and
pushl
inc
lea
outsb
mov
fs
scas
pop
out
nop
add
insb
iret
call
lea
jae
ret
ret
jno
inc
outsb
dec
and
cltd
mov
lcall
loop
jmp
fldt
aam
rorb
outsb
shl
adc
enter
jo
mov
cld
loop
fs
pop
or
add
aam
bswap
shrb
push
xor
out
fistl
push
mov
clc
iret
xor
push
lock
movsl
cmp
and
mov
arpl
push
cmp
imul
push
fs
add
fdiv
cmp
adc
push
mov
scas
xor
cmp
sbb
and
push
sbb
cmp
jp
add
es
out
pop
fstpl
xchg
dec
out
outsl
adc
jecxz
test
lahf
cmpsl
mov
out
lret
and
mov
iret
jmp
imul
mov
out
out
fiadds
xchg
jmp
pop
cmp
jle
fwait
mov
rorb
inc
adc
sub
bound
aaa
inc
push
mov
inc
sub
insb
call
add
add
ret
pop
test
pusha
push
push
cmpsl
bound
test
cmpsl
dec
scas
and
xor
xchg
push
ficompl
jae
push
sbb
xchg
dec
imul
fwait
mov
mov
and
pop
filds
insb
sub
stc
or
push
push
subl
lock
xlat
in
inc
fs
ficoms
jbe
mov
mov
into
rolb
dec
and
or
mov
mov
cmp
lahf
jo
dec
test
mov
dec
dec
mov
dec
dec
xor
push
dec
pop
shlb
or
or
fs
sarb
fldenv
repz
and
adc
xor
dec
cmp
mov
mov
lds
cli
in
fildl
rolb
adc
cmpsb
pushf
jo
add
adc
push
dec
js
mov
dec
adc
add
lds
inc
aam
popa
dec
dec
mov
mov
pop
xchg
mov
pop
popf
lods
pop
js
outsb
gs
test
out
and
mov
out
fcmovb
andb
mov
test
cli
inc
or
fisttpl
gs
repnz
xchg
push
add
push
jne
aaa
call
lret
popa
subb
dec
add
mov
iret
in
mov
xor
cmpsb
jno,pt
sahf
sbb
cmp
mov
cmp
add
sbb
idiv
jmp
aam
jp
xchg
sub
popf
xor
lret
or
clc
adc
scas
data16
into
or
push
cli
nop
dec
loope
loope
andb
dec
lock
jge
mov
cltd
jle
dec
jg
loope
add
cmp
es
arpl
into
pop
out
shrl
test
test
inc
cli
mov
movsl
inc
aas
dec
cmc
mov
push
test
jno
test
adc
mov
cld
insl
mov
in
mov
jnp
insb
dec
sbb
int
ret
mov
sbb
xor
xchg
mov
mov
popl
test
stc
loop
add
dec
sbb
nop
xchg
dec
mov
inc
dec
test
sbb
sub
xor
test
add
imul
xor
xchg
xchg
popa
call
test
push
mov
ficoms
and
add
into
int
aas
xchg
pop
inc
xchg
sbbl
jo
mov
sbb
push
or
push
test
adc
div
mov
mov
jp
sbb
into
jp
in
test
aaa
add
outsl
es
sbb
mov
inc
rol
jle
stc
pop
repz
mov
jbe
dec
and
jecxz
xchg
nop
test
mov
xchg
pop
add
mov
dec
sbb
or
stos
lea
add
fidivl
aad
adc
xor
lock
sarl
sbb
shl
imul
adc
scas
sub
in
xor
cmpl
rcrl
clc
add
push
rorl
dec
aam
inc
loop
and
int3
and
rolb
aam
rorl
sbb
out
call
popa
imul
pop
out
xchg
push
xchg
insl
sbb
pop
push
cli
fidivl
and
subb
popl
lahf
mov
cltd
mov
sahf
xlat
and
xor
cmc
scas
inc
outsb
xor
dec
pop
inc
mov
push
subl
neg
outsb
sahf
pop
sar
loop
or
push
sub
mov
popa
mov
scas
mov
hlt
jo
test
push
out
lret
push
push
ljmp
lock
mov
inc
mov
rcll
push
inc
rcr
test
test
pop
lcall
sbb
jge
test
fisubl
pop
js
jg
imul
sahf
ficomps
call
ret
aas
dec
add
stos
in
mov
adc
and
sub
add
cwtl
cwtl
jp
fstl
or
je
test
inc
sbb
fdivp
xor
mov
lods
lahf
scas
jne
xor
xchg
sbb
xchg
out
rcll
or
daa
mov
icebp
ss
cmp
push
push
mov
shlb
rcr
or
mov
inc
lcall
je
inc
orl
fidivrl
mov
lods
xor
test
rol
push
ss
aad
int
or
xchg
out
ds
popf
add
jmp
add
cmp
push
xchg
and
push
lea
push
das
mov
or
test
lock
dec
push
addr16
nop
lahf
incl
dec
jne
stos
jno
fstpl
lods
dec
call
es
xor
xchg
out
xchg
or
out
mov
or
pop
insl
cmp
clc
mov
test
pop
rolb
sub
inc
inc
paddb
test
shrl
mov
mov
inc
jp
or
xchg
leave
mov
adc
hlt
loop
in
js
insl
and
out
and
pop
clc
ficomps
mov
or
cmp
cmp
sbb
cmp
xchg
add
mov
pusha
in
add
fiadds
xchg
push
aam
imul
cmc
in
mov
mov
inc
sub
xor
test
jge
dec
rclb
bound
out
mov
mov
dec
das
test
add
jle
das
dec
pop
hlt
jne
pusha
out
fildll
sub
pop
jne
sub
jle
movsb
mov
daa
push
lcall
clc
dec
adc
mov
and
or
lods
add
cmp
hlt
sbb
inc
in
sub
and
and
adc
rorl
idivl
loopne
aad
shrl
pop
mov
jb
scas
cmpsl
sbb
imul
stos
rcrb
ret
mov
pop
lds
push
or
push
adc
dec
cmp
js
or
movsb
mov
insb
aas
pushf
jecxz
pop
lock
dec
xor
pusha
das
jle
xchg
pop
xchg
mov
hlt
in
lcall
mov
pushl
inc
in
and
mov
fnsave
loop
cli
pusha
jmp
gs
pop
lods
repz
adc
mov
lcall
and
sub
xchg
mov
xlat
fimull
js
jp
cmpsb
mov
fdivl
jb
mov
add
adc
cmp
rcl
push
insb
and
adc
add
inc
sbb
repz
pop
lret
loop
inc
or
loope
mov
js
jno
in
cmp
xchg
shll
out
lcall
cwtl
out
mov
pop
test
shrl
or
push
and
or
es
aad
dec
es
shrb
aas
dec
pop
pop
lds
jo
xorb
sbb
push
out
jno,pt
xor
xor
mov
xchg
out
mov
loope
test
adc
mov
lock
outsl
lock
sbb
mov
pop
cmpsl
and
push
jl
jbe
fdiv
lock
jb
mov
addr16
imul
ret
bound
dec
repnz
mov
adc
dec
addl
rclb
sub
xor
mov
push
mov
or
cli
fwait
mov
lret
repnz
pop
pop
jo
arpl
jl
adc
cmpsl
daa
cmpsl
lods
adc
and
ret
fwait
cltd
mov
sbb
ror
mov
dec
sbbb
rolb
sub
push
and
pop
movsb
mov
fwait
mov
mov
mov
pop
lahf
fs
jnp
push
iret
fimull
call
es
xlat
lea
scas
sbb
jns
pop
adc
cmc
inc
add
lods
mov
mov
pop
insl
ret
icebp
sub
adc
adcb
lock
mov
mov
ss
xchg
adc
dec
jge
lret
shr
fs
mov
xor
aad
inc
fucomi
mov
js
jg
leave
fstp
cmp
loop
or
pusha
hlt
mov
cs
adc
adc
or
jb
xchg
inc
stos
test
mov
pop
xchg
or
cld
icebp
cs
lock
notb
add
fbstp
adcb
aad
loope
fdivrl
pop
clc
adc
jne
flds
idivl
sbb
cmc
inc
das
lods
and
adc
clc
pop
ljmp
inc
loope
jns
mov
shlb
inc
les
cmp
inc
cmpsb
pop
data16
push
pop
paddusw
aad
adcb
icebp
jnp
rcl
aas
imul
xchg
xor
pop
outsb
push
mov
stos
push
sahf
dec
mov
aaa
call
idivb
jnp
jbe
test
pop
out
xor
loop
inc
dec
mov
and
cmp
dec
or
es
aad
xchg
xchg
fcomip
insl
rolb
sbb
popa
dec
adc
jp
imul
and
movsb
stos
ljmp
mov
cmp
lret
ljmp
stc
cmp
loope
sub
lods
jbe
addr16
sahf
rcrb
adc
fnsave
clc
or
mov
mov
pop
mov
xchg
push
xorb
pop
outsl
lods
shlb
lods
sub
ss
ret
lret
jnp
mov
and
inc
or
pop
push
dec
mov
pop
out
frstor
jge
cltd
out
xchg
sbb
and
jne
and
enter
dec
subl
iret
push
dec
hlt
movsb
or
inc
call
push
push
push
daa
jno
fldl
xor
and
pop
outsl
push
pop
out
pop
clc
jecxz
movsb
aas
nopl
cmp
pop
sbb
mov
rorl
fdiv
jecxz
pushf
and
and
std
and
aas
pop
loopne
mov
adc
xor
test
push
mov
jmp
loope
or
mov
js
aad
cmpsl
inc
sarl
repnz
sbb
icebp
call
mov
mov
fwait
add
jo
pop
adc
pop
dec
cmp
cwtl
and
jb
lret
js
dec
pop
jge
push
push
or
jle
push
mov
pop
xor
ret
mov
and
mov
lea
adc
popa
rorb
js
aas
ret
xchg
out
stc
lods
loopne
sbb
jge
cmp
pop
sbb
ret
bound
rcll
popf
dec
sbb
dec
push
cs
mov
iret
inc
nop
and
push
pushf
and
mov
je
push
shlb
lret
std
daa
push
mov
xlat
mov
mov
fcomip
cwtl
add
push
pushf
pop
lret
lret
xor
inc
cmp
je
inc
in
std
movsb
mov
xor
lea
inc
and
cltd
mov
mov
test
xchg
loopne
mov
gs
cli
mov
cmp
rcl
push
sarl
adc
mov
or
pop
leave
mov
mov
lods
mov
ja
std
stos
dec
jb
lock
push
jno
mov
pop
xchg
icebp
push
xor
mov
xchg
or
xchg
push
pop
mov
mov
clc
dec
mov
mov
inc
subl
hlt
scas
aad
xor
inc
jmp
xchg
lahf
inc
stos
mov
pop
cs
dec
iret
mov
popa
insl
sub
insb
test
jno
fmuls
adc
mov
aaa
xor
mov
mov
sub
iret
pop
adc
loopne
repnz
repz
xlat
and
adc
outsb
leave
nop
les
cmp
pop
outsl
mov
adc
dec
adc
mov
dec
fists
dec
sub
inc
push
or
xchg
pusha
sub
pop
or
pop
xor
aaa
jp
pop
loop
pop
push
clc
inc
sub
mov
mov
mov
jbe
xor
mov
fsubrs
dec
stc
aaa
add
leave
add
push
push
data16
adc
icebp
add
sub
mov
or
dec
lea
outsl
test
add
jo
imul
jno
ret
or
xchg
mov
xchg
dec
jne
iret
jnp
jmp
jbe
sub
ds
repnz
enter
cmp
mov
push
in
dec
popa
insb
inc
jge
aas
jno
lock
addl
out
pop
fsub
sbb
in
pop
mov
lds
pop
js
push
push
loope
ret
hlt
je,pt
mov
nop
mov
imul
push
bound
add
jne
push
mov
adc
outsl
sti
mov
insb
movhps
dec
adc
test
jg
stc
sahf
push
arpl
add
sbb
aad
pop
shrb
stos
adc
fisubrl
mov
imul
add
pop
mov
mov
mov
pop
in
in
pop
or
sub
imul
sub
ja
arpl
sbb
or
in
sti
mov
adc
jp
cmc
push
jge
jecxz
and
pop
sbb
adc
push
cmp
jns
and
push
push
shl
adc
movsb
ja
test
jne
mov
mov
movsl
imulb
xlat
and
mov
jo
aas
idivb
sahf
scas
adc
lea
sub
inc
jae
rolb
lods
dec
jmp
cmp
test
in
mov
loopne
clc
mulb
loop
xlat
pop
pop
push
add
call
stos
arpl
mov
lret
sub
or
cmp
stos
lret
mov
mov
xor
hlt
mov
sti
clc
imul
push
les
cmp
movsl
pop
fwait
cmp
push
psubusb
xchg
fwait
popa
fisttpl
sub
aam
aaa
int
mov
inc
lret
ret
outsb
dec
mov
cs
loope
call
jae
adc
push
ds
flds
mov
jge
sub
and
gs
ds
inc
scas
cmp
push
sbb
sarl
subl
fwait
setne
lods
push
lods
fs
ja
pop
dec
sbb
xor
xchg
sub
add
push
aaa
hlt
fbstp
xchg
or
fwait
adc
es
add
sub
lods
scas
inc
arpl
ret
int3
les
mov
dec
ds
out
shl
cmp
or
mov
inc
push
xor
inc
add
mov
jo
xor
loopne
pop
stos
fstpl
inc
inc
jnp
shlb
std
js
add
and
insl
enter
mov
mov
sub
sbb
cmpsb
jecxz
push
xchg
icebp
xchg
int
inc
icebp
push
xchg
inc
jg
iret
imul
insb
adc
jbe
cmc
rolb
mov
or
js
lahf
mov
lret
scas
inc
les
lea
mov
xor
ja
mov
or
xor
ret
mov
imull
bound
outsb
jecxz
mov
lcall
mov
jg
call
cwtl
adc
pop
inc
icebp
out
sub
stos
inc
stos
fcoml
cmp
pop
mov
lock
sti
imul
push
push
daa
loope
sbb
add
dec
or
pop
or
sbb
mov
mov
jp
mov
test
jmp
ret
movsb
inc
dec
adc
jg
ds
int
jecxz
lds
mov
cmp
inc
adc
or
mov
dec
adc
dec
jno
in
pop
aad
popf
rcrl
pop
xor
fcomi
jo
xchg
ficomps
xchg
stos
push
aaa
out
nop
jp
clc
xchg
jecxz
xchg
lret
mov
mov
lret
mov
push
add
lods
mov
ret
xchg
add
out
adc
outsb
xchg
cmpb
pop
loopne
pop
mov
cmp
dec
xchg
shll
pop
out
cmp
xchg
and
mov
xchg
jns
lock
push
arpl
push
mov
push
mov
jno
dec
fcoms
sub
xorb
cwtl
in
std
jno
mov
jle
cmp
and
cmp
push
xchg
mov
cld
and
add
sub
aam
mov
mov
xchg
in
insl
push
push
inc
popf
adc
jbe
mov
fs
jo
adc
add
out
inc
out
addb
jle
movsl
loop
cmp
fnstenv
push
mov
jp
push
inc
inc
jge
xorl
dec
mov
and
mov
cmp
xchg
adc
xchg
aaa
pop
leave
mov
mov
pushf
pop
jae
dec
inc
mov
xor
aaa
inc
cmp
mov
cmp
xor
push
das
and
test
and
xchg
jns
popf
mov
mov
push
mov
adc
loop
cmp
rclb
pop
sbb
les
inc
inc
dec
dec
add
jns
pop
xchg
and
dec
out
and
adc
pop
aaa
cmp
or
jo
in
call
push
test
iret
mov
push
mov
lret
adc
and
jg
call
and
lods
and
subb
mov
decb
adc
scas
dec
les
fiadds
ret
xchg
pop
jmp
jg
mov
out
idivb
icebp
fwait
jp
push
mov
cmc
dec
add
lcall
jo
inc
lods
mov
repnz
es
mov
inc
pop
add
cli
push
adc
add
decb
inc
mov
jmp
lock
test
jb
mov
out
test
decl
cmpsb
mov
roll
int3
lock
lds
dec
mov
inc
loop
jle
nop
and
subl
clc
pop
movsb
mov
outsl
test
add
mov
or
cld
or
xabort
sar
pushf
jb
xor
mov
pop
xor
out
in
push
ljmp
repnz
je
es
sbb
xchg
clc
mov
leave
xchg
sahf
leave
insb
cwtl
or
mov
push
popa
or
pushf
mov
pmuludq
pushf
xorw
shlb
dec
imul
inc
loop
dec
test
ss
addb
mov
mov
shlb
adc
pop
mov
lock
stos
sbb
lock
jno
and
clc
mov
mov
icebp
fdivl
hlt
cmovl
add
das
mov
xlat
shlb
add
push
test
add
loopne
sub
scas
mov
in
dec
dec
mov
push
xchg
jno
aam
mov
cwtl
add
add
scas
or
cs
push
push
out
add
call
loopne
adc
mov
cmp
pop
aas
jo
clc
ja
enter
xor
lret
ret
sub
lcall
sbb
adcb
inc
popa
std
inc
dec
movsl
add
cmpsl
or
push
push
loope
xchg
jle
mov
test
stos
out
push
or
jno
idivl
jae
shll
insb
jl
subl
ljmp
cmp
outsl
sub
jmp
adc
cwtl
incl
push
scas
dec
fildl
ss
xchg
call
fisubs
aam
xor
fdivrl
fwait
mov
pop
push
mov
lea
lds
add
dec
or
or
xchg
out
pcmpgtw
fs
roll
cmp
and
cwtl
xor
lret
pop
pop
pop
mov
mov
mov
sti
arpl
popa
inc
pop
ret
ret
fildl
pop
mov
pop
add
movsl
and
adc
mov
rcl
fimull
into
mov
or
es
pop
roll
mov
mov
loope
xlat
xor
sahf
mov
mov
mov
xchg
add
fcomp
sbb
sbb
incb
push
jnp
xchg
pop
lock
fidivrs
jp
push
inc
xchg
cs
jle
fxtract
inc
outsl
iret
bound
std
in
and
push
lock
popf
repnz
clc
dec
repnz
das
loop
xchg
ljmp
shlb
frstor
ds
imul
pusha
clc
jle
pop
xchg
mov
xor
aad
mov
xchg
mov
and
jnp
inc
add
cmpsb
nop
add
daa
sarb
data16
in
pop
adc
jg
xchg
xor
mov
neg
popa
int3
push
inc
inc
outsl
jl
mov
xchg
frstor
pop
insl
cmp
ret
movsl
push
lods
push
add
add
adc
fsts
sub
testb
jnp
jmp
and
hlt
fsts
lods
adcl
orb
lock
and
int
andl
mov
and
pop
push
or
clc
out
sub
sbb
cli
mov
xorb
mov
jecxz
inc
ret
in
mov
outsb
jmp
ljmp
mov
jnp
push
movl
out
dec
adc
rorb
shrb
pop
cltd
pxor
mov
cmp
jne
jp
inc
ret
xchg
sub
movsl
pop
adc
add
xchg
inc
mov
jle
mov
dec
bound
fidivs
das
inc
sbb
lock
cmp
pop
push
mov
xchg
push
ljmp
les
scas
insb
mov
jl
jmp
test
dec
jb
mov
adc
out
push
add
push
mov
testb
pcmpgtd
mov
imul
ds
mov
pushf
repz
outsb
adc
shrb
int3
loope
adc
xchg
clc
mov
push
out
shll
addl
sub
jno
addr16
xor
xor
das
cmp
pcmpeqw
je
push
fwait
jo
sub
js
mov
ja
or
pop
add
rcr
adcb
push
mov
addb
push
loope
add
call
jge
daa
pushf
push
stos
xchg
xor
pmulhw
and
and
in
daa
jae
add
insl
addb
and
out
jl
mov
or
mov
clc
sbb
push
cmp
imul
mov
pop
add
outsb
jnp
out
inc
negb
sub
mov
and
iret
call
jno
lea
ret
adc
and
and
dec
dec
sub
adc
or
pushf
push
push
pop
rolb
icebp
pop
xchg
jle
cmp
mov
add
lds
bound
cmp
cmp
ret
rcrl
xchg
sub
test
jne
js
jmp
xor
push
pop
lods
bound
xor
push
stc
out
aaa
adc
popa
gs
fisubrs
jno
sbb
mov
push
push
fdiv
fbld
inc
cli
es
incb
xor
jmp
mov
cli
test
mov
lret
inc
pop
pop
push
xor
xorl
xchg
ja
push
push
cmc
add
xor
jp
pop
mov
or
lcall
pop
ss
add
test
fildl
dec
xor
push
into
pop
mov
mov
out
pusha
mov
mov
dec
aam
cmp
and
jg
xchg
xor
pop
testl
jg
adc
addb
imul
pop
add
in
xchg
mov
jo
add
sbb
lods
sbb
es
xchg
jo
bound
xor
sbb
mov
push
or
xchg
pop
and
and
andb
aam
cwtl
cld
hlt
pop
fsubl
in
mulb
adc
and
in
xor
mov
sarb
jl
mov
xor
mov
sbb
cltd
clc
out
les
mov
insl
or
in
and
mov
xchg
sub
adc
cmp
ret
shll
ret
push
ss
ljmp
aam
or
popa
push
push
adcb
loopne
outsb
sarl
jbe
movsb
or
leave
pop
cmp
or
lock
je
lock
push
inc
inc
popa
popa
test
dec
adc
iret
cmp
call
or
inc
andl
jmp
cmp
cld
fistpl
mov
and
insb
sbb
xchg
lahf
mov
add
nop
jae
add
mov
imul
pusha
ret
inc
aad
pop
es
add
aaa
ds
xchg
loope
stos
pop
enter
or
in
call
and
test
adcl
adc
cmpsb
ret
ljmp
nop
mulb
pop
insl
add
scas
out
jo
icebp
scas
xchg
addr16
sub
and
testb
jns
cmp
jnp
out
cld
jg
xor
adcb
jno
neg
xor
aas
sub
add
adc
sub
xchg
inc
mov
negb
sbb
xchg
sbb
push
imul
aad
mov
shrb
pusha
iret
js
mov
xchg
mov
scas
movsb
fwait
sarb
testl
push
jns
pop
sbb
imul
hlt
lcall
hlt
add
cltd
sbb
dec
xchg
pop
mov
into
xor
clc
out
cmp
sahf
adc
inc
stos
xchg
xor
or
add
je
or
mov
dec
mov
cmp
ljmp
movsl
sub
insl
push
test
or
fnsave
nop
aad
jae
rol
add
adcl
lahf
pop
mov
dec
or
clc
ja
xchg
cli
loopne
out
adc
hlt
and
enter
js
mulb
push
les
sub
aad
daa
xor
add
ljmp
ret
les
dec
sbb
xchg
cli
cmp
jbe
jge
sahf
dec
mov
add
fsubs
shlb
mov
or
pop
xor
fnstenv
je
push
enter
dec
mov
int
fnsave
lock
test
push
shrb
push
push
xor
adc
shl
dec
pop
and
add
xchg
lock
mov
inc
aad
jnp
mov
out
add
mov
sarl
or
enter
call
xchg
dec
dec
sub
les
pop
push
mov
xchg
maskmovq
testl
inc
stos
popf
and
in
mov
popa
or
add
jne
adc
jo
or
jo
nop
sbb
inc
mov
pop
adc
cltd
inc
divb
or
push
mov
arpl
addl
nop
loope
cmpsl
lock
xor
sbb
inc
orl
js
pop
mov
subl
cmp
les
mulb
mov
push
mov
xor
roll
mov
mov
lods
sahf
xchg
dec
mov
outsb
pop
or
inc
mov
xor
les
out
cwtl
or
sbbl
shlb
outsl
sbb
add
xor
sti
mov
mov
sarb
jb
sarl
cmp
int3
inc
sbb
mov
jp
pop
xchg
sbb
sub
dec
xor
shlb
jp
dec
cmp
js
rcrl
adc
or
sbb
sarl
mov
test
notb
bound
mov
pusha
and
test
cmp
push
cmpsb
sbb
nop
add
push
cmc
pushw
cwtl
xorb
cmc
inc
scas
movsb
or
pop
inc
lock
or
movsl
sub
call
xor
mov
adc
subb
aas
push
mov
insb
dec
push
lret
inc
aam
movsb
int3
js
js
stos
adc
cmp
daa
shrl
or
arpl
or
test
adc
add
sub
mov
fistpll
out
push
loop
mov
xchg
mov
adc
out
ljmp
bound
nop
pop
addl
mov
xor
mov
mov
sub
jp
shl
or
lock
stc
xchg
xor
clc
mov
fbld
cld
lcall
imul
ds
jno
cmp
hlt
test
pushf
test
scas
das
adc
shrb
xchg
repnz
stos
lock
dec
sbb
pop
mov
adc
cs
aas
insl
mov
mov
cli
xchg
push
movsb
xorb
stc
fsubrs
cmp
sbb
imul
inc
adc
add
mov
pop
mov
test
cmpsb
xchg
push
loope
lea
jg
clc
mov
inc
add
inc
sbb
insb
leave
aam
push
sarb
dec
cmpsl
and
xor
std
pop
std
mov
movsb
push
jmp
divl
icebp
dec
inc
push
mov
lret
push
lgs
test
daa
stos
cmp
jbe
ret
add
into
mov
sub
fimull
in
jae
dec
inc
test
jbe
lret
mov
sbbb
mov
out
out
xor
mov
pop
popa
ss
in
sbb
push
es
jns
outsl
xchg
nop
or
cmc
jmp
imul
or
dec
call
lods
cmpsb
mov
push
xor
xlat
add
inc
idivb
inc
mov
jp
ss
in
rorb
loopne
add
imul
and
dec
pop
cmp
dec
bound
js
inc
ds
pusha
aaa
sub
mov
cmpsb
shll
dec
mov
adc
clc
jb
jecxz
lahf
push
mov
imul
xchg
add
outsb
and
push
jg
lds
out
inc
inc
in
pop
mov
xchg
and
mov
rolb
ss
jb
aad
jp
sarb
mov
mov
jg
adcl
dec
clc
pop
and
push
ss
ret
mov
ret
out
ret
movsl
mov
add
add
cld
dec
lret
push
inc
ret
loop
pop
mov
gs
js
sarb
fdivrl
pop
pop
add
scas
test
add
pop
es
aaa
cmpb
cmp
sub
pop
cli
xor
lock
sbb
jg
push
fsubl
subl
mov
nop
sub
adc
leave
sub
pop
sbb
ret
mov
sbb
adc
imul
mov
shrb
ret
cmp
push
xor
lcall
xlat
mov
loopne
or
insb
mov
aam
int
inc
mov
das
pop
loope
mov
or
push
hlt
dec
dec
hlt
push
lahf
adc
mov
imul
je
lock
mov
lret
ds
dec
sbb
pusha
ljmp
add
lfs
mov
lods
push
mov
ljmp
addr16
push
push
jb
or
iret
cmpsb
sub
loopne
lock
bound
or
adc
xor
and
test
mov
into
inc
aaa
insb
pop
and
lahf
sahf
cs
add
cmp
rcll
jnp
sbb
lods
je
scas
push
test
in
inc
movsb
add
inc
jb
pop
mov
push
mov
call
movsl
inc
fstps
pop
mov
popf
loopne
sub
fcoms
lock
add
jge
sti
inc
sti
pop
je
mov
mov
mov
mov
shr
pop
aas
mov
fdivp
xor
xchg
icebp
inc
sub
pop
int3
mov
adc
mov
jno
and
andl
negb
pusha
fstp
andl
std
call
xchg
and
in
push
mov
sub
and
mov
adc
aas
mov
mov
xchg
or
fsubrs
pop
movsb
in
and
cmp
lahf
and
addl
addr16
ret
sbb
mov
adc
iret
or
fs
hlt
push
sbb
std
das
shl
aas
mov
dec
into
add
ret
lock
mov
inc
es
pop
adc
inc
or
in
adc
inc
adc
aam
cli
pop
leave
mov
xor
inc
adc
add
hlt
scas
mov
push
pop
pop
cmp
xchg
push
mov
mov
sub
outsb
js
mov
out
jo
xor
push
sbb
jo
cmp
test
add
fmuls
ficompl
adc
jecxz
xchg
mov
bound
movsl
mov
dec
inc
daa
jmp
xor
in
test
jo
add
jle
sub
or
mov
dec
scas
or
test
mov
pop
adc
aad
or
stc
push
addr16
clc
inc
inc
mov
mov
pusha
mov
inc
xabort
xchg
imul
sub
jp
cmp
aam
dec
pusha
imul
or
add
and
sahf
sub
push
cmp
outsl
pusha
jnp
into
sbb
test
add
shll
dec
jnp
xor
test
pop
fists
aaa
xchg
push
mov
fstps
aas
xchg
mov
push
vpunpckhwd
loop
dec
pop
push
jle
mov
test
xchg
call
ljmp
ds
test
sbb
or
dec
ds
xchg
js
sbb
ljmp
jmp
out
and
xchg
popf
push
sbb
out
jo
stc
push
inc
clc
sbb
push
addb
push
fidivl
imul
add
sub
nop
test
dec
cmp
mov
dec
movsl
jmp
push
imul
inc
mov
aam
push
mov
scas
fpatan
dec
js
push
les
mov
decb
or
mov
call
cmp
insb
add
cmp
or
dec
sbb
push
sti
icebp
sub
mov
pop
sbb
cltd
pop
aam
and
cmpb
add
mov
ss
sbb
sub
add
add
pop
cmp
mov
sub
lods
outsl
cmp
out
xchg
jne
pop
mov
ss
popl
arpl
outsb
xor
test
bound
mov
xor
or
push
loopne
xchg
xor
loope
push
push
push
and
insb
ret
cmpsb
lock
push
clc
dec
icebp
adc
rcll
pop
push
cmp
inc
lds
or
mov
push
jge
cmp
or
jl
or
push
ljmp
ds
pushf
jbe
xchg
cmp
lcall
jo
push
daa
int3
lret
adc
and
xor
shlb
shlb
pop
aam
rol
pop
add
or
leave
test
or
add
rolb
in
add
pushf
js
or
mov
mov
push
sbb
rcrl
pop
add
xor
sub
stos
adc
add
shlb
rcrb
lock
and
push
das
stos
aad
sub
sub
sbb
sub
fcmovu
icebp
xchg
lods
ds
aad
xchg
lock
push
push
mov
adc
mov
mull
fistl
cli
repz
aas
data16
cwtl
aam
cmc
mov
or
or
sbb
push
shrb
in
lods
cmpsb
rcrb
dec
pop
or
mov
push
nop
xchg
pusha
jg
lock
das
out
add
push
xor
js
sbb
push
pushf
ss
push
fwait
mov
sbb
aad
xchg
hlt
mov
insb
test
cmp
das
sub
repz
jnp
lock
incl
xchg
fs
in
hlt
rclb
mov
cli
mov
xchg
xor
fsubl
cmp
clc
dec
jmp
call
push
sbb
jbe
mov
movsb
scas
icebp
inc
add
cmp
rolb
adc
pop
push
movsl
aad
and
lods
pop
mov
add
pop
lret
mov
adc
dec
pusha
adc
fidivs
frstor
xor
xor
mov
mov
add
inc
push
mov
insb
test
xchg
mov
cmp
int3
xchg
addr16
mov
adc
xor
rclb
jle
mov
int
add
xor
test
js
rorl
jge
rolb
testl
aam
mov
lock
rcr
hlt
add
mov
mov
inc
sub
sub
push
fistl
pusha
mov
add
xor
and
push
add
cli
dec
outsl
mov
inc
add
xor
movsb
jne
mov
shrb
std
loopne
xor
xchg
xchg
pop
adc
cmp
in
or
js
out
mov
add
dec
fcomps
or
mov
cmp
and
sbb
push
sbb
push
add
les
xchg
aad
xor
or
jl
jbe
adc
or
xor
movlps
lds
xchg
mov
inc
xor
cwtl
in
outsl
aas
decl
jne
and
and
sbbb
leave
hlt
xor
push
xor
jae
orb
mov
inc
sbb
aas
and
stos
jecxz
mov
dec
and
push
cli
iret
jg
loopne
xchg
mov
xor
cmp
loopne
and
repnz
or
add
cmpsl
cli
negl
inc
add
clc
sbb
push
ds
and
cmp
cmp
out
es
add
icebp
stc
jne
shrl
ljmp
fisttpl
mov
lock
test
rcr
push
add
dec
adc
cmp
sbb
push
lods
je
add
mov
fst
mov
leave
in
ljmp
loop
fmul
imul
pop
sbb
adc
add
xor
sub
hlt
aas
fldl
pop
add
mov
push
pop
cmp
faddl
dec
sub
pop
pushf
ficoms
mov
and
std
sbb
in
clc
cmpsl
outsl
cmp
inc
test
push
pop
fnstcw
jecxz
scas
addl
pop
dec
push
inc
js
or
sbb
cmp
add
add
mov
mov
adc
filds
hlt
mov
cmpsl
subb
fidivs
inc
pushf
and
insb
and
ja,pt
and
mov
fsubrl
icebp
pmuludq
cmp
fnstcw
mov
in
loopne
test
xchg
rorb
and
jl
push
and
inc
or
xchg
push
popf
push
mov
in
outsb
inc
sbb
mov
mov
mov
or
and
dec
mov
or
cwtl
pop
aas
sar
test
out
pop
pop
mov
lahf
shr
rolb
lods
mov
cmp
out
mov
fs
str
mov
dec
mov
insb
test
inc
jnp
adc
sbb
sbb
mov
pop
leave
adc
jg
iret
dec
cld
adc
loopne
xor
lods
mov
pop
mov
orl
mov
sarb
mov
adc
call
add
adc
or
pop
sbb
add
mov
inc
adcb
mov
into
mov
cld
adc
push
inc
loopne
mov
pop
push
jno
add
cmp
inc
push
cld
ljmp
adc
xor
push
dec
loop
and
out
les
jg
add
mov
mov
push
pop
push
call
inc
cmp
out
scas
adc
lds
push
xchg
hlt
jg
xor
mov
jp
data16
add
aam
mov
movsb
jmp
sub
xchg
sbb
test
lahf
inc
pop
sub
les
jecxz
andl
lock
add
pop
mov
arpl
out
je
pop
inc
mov
or
scas
or
and
adc
outsb
pop
inc
les
sub
scas
jo
ds
mov
es
sub
and
xchg
test
rcl
cmp
pop
je
jp
ja
fs
push
aad
mov
mov
cmpsb
scas
shl
xor
jl
mov
pop
loope
and
dec
xor
popa
and
loopne
mov
lock
jp
push
sub
ret
xor
xor
pop
in
popa
ret
js
pop
xor
xor
inc
mov
addr16
cltd
sub
std
ss
mov
fs
into
call
pop
int
lretw
push
sub
push
in
mov
inc
pop
push
xor
test
cs
jl,pt
dec
imul
jbe
dec
pushf
clc
iret
aad
mov
mov
mov
inc
adc
adc
mov
out
or
daa
loop
cmp
adc
jns
imul
fdivr
pop
adc
sbb
sarl
push
clc
insl
sbb
mov
adc
adc
jno
ds
jg
or
loope
enter
inc
pushf
ret
xchg
or
fimull
jno
add
or
bound
popf
and
xchg
outsb
stc
xrelease
inc
jg
test
mov
out
inc
inc
ljmp
xchg
jbe
mov
mov
sbb
cltd
ss
fwait
je
enter
jmp
lret
or
or
and
add
test
sti
call
add
and
je
mov
out
xchg
jle
mov
pop
lods
mov
nop
xchg
icebp
or
push
notl
hlt
push
adc
adc
sahf
jae
rcrb
roll
or
repz
xor
add
jno
js
icebp
lock
cs
and
mov
push
popa
jo
xchg
decb
test
clc
outsl
sbb
cmpsb
lods
movsb
and
mov
xchg
hlt
fidivl
dec
hlt
pop
jge
out
pop
mov
sub
mov
mov
adc
inc
or
int
sub
dec
dec
or
or
mov
scas
js,pn
test
rolb
decb
mov
xorb
or
call
inc
notb
sub
lea
test
addb
fisubrl
dec
pop
push
dec
xchg
mov
push
rclb
hlt
xor
mov
js
sbbb
jne
es
js
scas
mov
into
xchg
mov
ret
popa
adc
sbb
mov
rolb
rcrb
nop
adc
adc
ret
rolb
testb
jle
jo
mov
push
xchg
dec
std
orb
es
jp
lds
and
xor
sub
js
dec
pusha
add
cli
adcb
dec
xor
push
xchg
fs
mov
repnz
cld
pusha
scas
js
push
inc
inc
mov
xor
movsl
xchg
mov
adc
movsl
or
xor
mov
jo
pop
lret
bnd
xor
mov
test
cmp
adc
mov
cld
jg
mov
int3
popf
icebp
ret
sbb
outsl
aad
xor
and
pop
mov
and
sbb
or
hlt
sub
jp
mov
cld
adc
fnstsw
pusha
fimull
jg
xor
cmc
cmp
cmpsb
inc
loopne
mov
mov
fsts
cwtl
mulb
and
dec
cld
movd
xor
adc
iret
icebp
xchg
adc
nop
sbb
pop
ret
jle
inc
jmp
xchg
mov
andb
or
in
addr16
nop
add
push
hlt
mov
orl
add
shrb
push
sub
jb
mov
arpl
adc
call
adc
nop
insl
pusha
lahf
test
mov
lahf
bound
pushf
mov
js
pushf
lret
jg
rcr
icebp
aaa
mov
and
or
cmp
dec
pop
fstl
shlb
mov
mov
sub
leave
cli
jg
pop
sbb
fidivl
test
adc
push
cmc
das
bound
and
incb
lods
pop
xchg
jp
in
das
mov
jnp
xor
lds
push
pop
and
push
adc
dec
imul
inc
ljmp
xchg
subb
sbb
imul
test
jne
gs
adc
jge
int
daa
test
jae
in
rorb
ret
pop
aaa
add
out
int
jp
inc
call
adc
dec
imul
push
or
adc
xor
test
imul
push
lea
cld
and
les
push
cmp
shr
lods
push
add
adc
fsubs
add
or
cmp
inc
adc
mov
cmp
out
gs
cmp
ret
loop
mov
in
in
inc
pop
xor
stos
pop
push
rcll
cli
pop
and
pop
jge
ror
pop
mov
add
test
cmc
or
jo
es
push
mov
in
or
mov
jecxz
sbb
sub
mov
xchg
cs
rolb
imul
das
js
bound
push
test
popa
dec
pop
and
ret
dec
lods
es
cwtl
repnz
cmp
mov
push
test
ja
mov
dec
pop
inc
aaa
out
loopne
sub
xor
add
aam
test
mov
fldl2t
sbb
add
pop
jmp
ret
scas
jg
into
dec
cld
loopne
fs
in
ror
sbb
decl
jbe
mov
insb
iret
aad
sub
das
inc
add
fsts
sbb
ds
cli
dec
leave
mov
jge
fsubrs
jmp
jns
dec
daa
and
sarb
push
inc
add
js
shrl
icebp
aad
sbb
sti
out
cli
cmp
popa
loope
rol
jnp
mov
stc
add
das
scas
cmpsl
mov
and
lods
inc
imul
sbb
mov
int
pusha
sbb
xchg
or
imul
sub
out
push
mov
xchg
xor
push
and
lods
sub
rcrl
clc
addl
nop
mov
cmp
pop
popa
mov
sbb
mov
dec
rclb
cwtl
cmp
lock
add
and
arpl
in
cli
arpl
cltd
or
dec
dec
psubsb
cmp
ret
pop
lock
mov
dec
sahf
adcb
fists
dec
mov
outsl
xor
sarb
test
pusha
aad
scas
adc
dec
adc
add
jmp
xchg
daa
push
add
push
jl
and
aad
stc
or
repnz
call
repz
daa
out
push
outsl
xor
fbld
int3
xchg
mov
notb
mov
pop
mov
mov
fsubrs
push
jo
aam
xchg
xchg
mov
dec
fs
arpl
push
inc
pusha
mov
outsl
lcall
pushf
or
add
mov
lods
dec
push
mov
cmp
mov
jno
pop
gs
push
push
filds
inc
data16
adc
inc
rcll
outsl
xchg
icebp
shll
mov
and
ja
inc
pushf
popa
sub
sub
xor
or
xor
ljmp
mov
sub
xor
add
sub
jl
test
movsl
or
jmp
sbb
hlt
aam
inc
push
xchg
mov
out
ljmp
adc
add
inc
jmp
das
dec
insl
dec
xchg
xor
inc
ret
lods
scas
push
cmp
pop
fwait
sbb
add
mov
jno
call
outsl
add
cmp
push
xor
js
pop
test
jg
or
adc
cmp
mov
subb
fists
hlt
add
push
js
iret
jl
addl
pop
inc
loopne
xchg
xlat
sbb
js
mov
or
inc
call
xchg
push
or
out
out
ds
dec
jmp
pop
fisubl
sub
or
inc
insl
mov
stc
fdivrp
pop
mov
sub
inc
pop
es
xor
and
repz
icebp
lock
inc
subl
scas
mov
xchg
sub
lcall
je
in
mov
mov
add
sarb
pop
pop
leave
inc
push
pop
psubw
icebp
cld
je
ljmp
or
mov
dec
sbb
push
or
adc
fisttps
and
or
xor
pop
adc
imul
lahf
push
aam
ret
je
in
sbb
sbbb
fildll
rorb
in
inc
aaa
sub
rcrb
nop
repnz
mov
mov
add
in
dec
clc
aam
jno
hlt
or
std
stc
in
cld
mov
xor
sub
or
in
pop
jl
pop
jg
subl
idivl
mov
pop
icebp
shrb
inc
mov
sbbb
cwtl
lock
loope
adc
mov
lods
inc
lods
cmp
shlb
push
bound
xchg
sbb
test
and
pop
mov
mov
lcall
mov
and
leave
xchg
xchg
dec
xor
jmp
pop
shlb
push
lock
mov
icebp
mov
inc
adc
cmc
mov
rcrb
mov
push
mov
cmc
sub
inc
sbb
inc
enter
mov
enter
fwait
dec
inc
out
jo
imul
xor
mov
ljmp
es
je
adc
inc
lock
xor
sub
ret
iret
lock
mov
pop
mov
cli
ljmp
aas
xchg
push
dec
xchg
dec
jp
pusha
push
jne
sbb
sahf
adc
add
push
or
adc
inc
push
adc
fistpll
stos
rol
adc
push
lcall
fucom
sbb
inc
push
push
add
ret
out
and
popf
pop
out
mov
or
outsb
inc
pop
mov
pop
adcl
inc
pop
sbb
shlb
mov
xchg
jge
les
mov
and
aam
stos
pop
cmp
out
pop
adc
test
push
cs
xchg
nop
xchg
inc
nop
xor
sbb
xchg
stc
pop
movsl
and
mov
shl
fs
mov
iret
sub
and
dec
sbb
xor
rolb
mov
popa
push
popa
and
mov
dec
and
neg
roll
cmc
subb
cmp
mov
insb
inc
push
leave
in
roll
pop
cltd
insl
fisttps
inc
push
in
and
jno
push
rolb
dec
loopne
js
push
mov
mov
sub
and
rol
test
stos
dec
pop
dec
scas
sti
pop
mov
and
sbb
or
sub
dec
sbb
jne
mov
mov
xchg
pop
mov
mov
in
daa
mov
inc
pop
push
and
ret
pop
or
fs
cmp
mov
inc
push
pop
xchg
jg
js
mov
adc
push
loop
aaa
repz
push
stos
mov
inc
movsl
inc
jecxz
mov
das
push
mov
push
mov
insl
xchg
lea
loopne
mov
mov
cmp
xchg
mov
and
je
pusha
mov
sbb
mov
pushf
pushf
insb
pop
lea
adc
jno
cmp
jne
rcrb
mov
xor
xchg
sub
je
jae
xchg
push
jge
xchg
and
btc
cwtl
orl
pop
shll
pushf
sbbl
dec
push
mov
shlb
sbb
inc
out
mov
movsb
adc
sar
repz
and
mov
jns
dec
add
pusha
bound
fiaddl
loopne
or
dec
jnp
pop
mov
and
dec
lds
pop
xchg
arpl
jge
call
push
inc
in
or
adc
fcom
mov
cmp
arpl
pop
cmp
mov
mov
xchg
jne
orb
fcomi
or
pusha
xchg
adc
mov
stos
pop
adc
ds
fidivrl
addb
insl
movsb
or
adcb
sub
jecxz
in
mov
jge
mov
mov
xor
cwtl
push
stos
sti
and
out
loopne
sbb
rol
or
cmpsb
xchg
pop
or
inc
cmp
push
jbe
add
iret
mov
out
sub
or
adc
cld
roll
xor
push
repz
ljmp
cmc
mov
mov
into
stos
xchg
or
inc
jnp
mov
imull
cmp
movsb
rcl
scas
es
mov
add
jbe
mov
sbb
clc
out
movsb
imul
add
and
xchg
popf
pop
pushf
cld
dec
or
mov
and
int3
loope
fnsave
pop
orl
mov
xchg
movsl
jmp
sbb
adc
sub
pop
sbbb
and
adc
add
jnp
push
dec
mov
push
sub
jnp
adc
lret
fwait
inc
int3
adc
ret
dec
dec
lods
jnp
sub
pop
rol
push
mov
vpmacssdql
dec
insl
jp
dec
stos
fistps
jecxz
ss
jecxz
test
jno
mov
orl
jmp
dec
ret
loopne
jecxz
mov
mov
adc
mov
dec
jbe
shrb
jae
fs
pop
mov
xchg
mov
sbb
out
cmc
stos
daa
inc
ret
insl
mov
or
scas
fdivl
and
in
inc
push
adc
jecxz
adc
push
push
or
adc
rcll
add
xchg
pushf
js
ficoms
ds
lds
adc
shlb
mov
fwait
in
dec
ss
push
jmp
je
fst
ret
insb
add
mov
das
pushf
mov
pop
inc
xor
sub
insb
lcall
mov
jo
jl
xor
jne
loopne
mov
mov
lea
mov
je
decl
sbb
rolb
lds
pop
add
push
popa
lret
pop
lods
inc
sbb
testl
or
scas
mov
jp
arpl
fwait
sahf
jno
cmpb
and
cld
cmc
insl
movsb
subl
push
xchg
pop
or
mov
popa
pop
xchg
push
int3
jno,pt
sub
xor
mov
mov
flds
push
pop
test
in
mov
loop
push
insl
sti
adc
in
jne
push
ja
xchg
pop
add
push
daa
pop
adc
sbb
cs
imul
rcll
or
xor
ljmp
inc
fcomp
dec
inc
mov
mov
mov
ss
sub
lods
sbb
pop
clc
sbbb
in
js
das
call
lahf
push
into
loope
lods
inc
ret
loope
rorb
and
test
xchg
add
cltd
aas
test
movsb
pop
into
dec
out
in
movsb
mov
mov
dec
add
mov
test
inc
dec
or
jmp
push
cmc
and
push
add
sbb
outsl
jmp
dec
cmp
jp
test
or
jle
aam
pop
or
orl
loop
rorb
lods
inc
pavgb
repnz
jns
adc
jmp
pop
rcrl
xlat
jbe
rorb
arpl
and
push
jg
cmp
rorl
scas
mov
push
sbb
mov
inc
inc
insb
sub
ljmp
dec
jl
hlt
scas
pop
pop
xorb
mov
adc
jge
in
aas
xor
add
add
shrb
les
push
push
add
jle
inc
cmpb
cs
clc
rclb
mov
lds
pop
jg
xchg
ret
inc
int3
shlb
xor
stc
loopne
add
or
pop
pop
les
shl
pop
pop
ret
mov
bound
out
lahf
pop
vandnps
add
lods
repnz
ja
push
jp
adc
and
shl
int
insl
sub
sub
sbb
cmp
pushf
iret
iret
mov
shll
aaa
dec
cmp
add
in
mov
sbb
push
rcrb
cmpsb
insl
mov
je
jb
xchg
push
lods
sub
lret
outsl
xchg
xchg
push
sahf
push
jno
or
cli
stos
mov
cwtl
mov
ljmp
xorl
fidivrs
push
jne
cmp
push
mov
jbe
sbb
data16
xor
in
cld
ret
lods
push
pushf
jne
lock
sbb
sti
jl
mov
shll
movb
inc
rclb
gs
pop
xor
lock
inc
push
or
shl
les
adc
cwtl
loopne
cmpsb
fisubrs
dec
ds
mov
mov
xchg
jecxz
add
lcall
or
clc
mov
push
outsb
push
fnstsw
pusha
test
daa
lds
xchg
and
mov
addl
add
cmpsb
xchg
cmp
stos
popl
xor
imul
dec
sbbl
dec
loope
adc
pop
xchg
clc
mov
pop
cmpsb
push
push
call
mov
cmp
jg
push
jle
inc
les
int3
aad
pop
or
add
repz
loopne
mov
mov
add
in
mov
loop
mov
dec
xchg
cmp
ljmp
xchg
fadds
and
pop
mov
iret
sub
aas
push
gs
or
mov
xorb
adc
pusha
popf
stc
pop
iret
pop
adcb
and
or
or
cmp
scas
mov
loopne
push
aam
enter
push
rclb
ret
addl
mov
jge
cmp
sub
cmp
sbb
xchg
mov
scas
mov
xor
imul
jae
fisttps
ret
scas
mov
sub
subb
into
divb
mov
mov
xchg
in
fistps
js
or
mov
pushf
aaa
jg
xchg
cmove
mov
daa
fcompl
stos
xor
ds
dec
add
add
ljmp
lahf
enter
jecxz
cmp
gs
xor
mov
andl
mov
loop
sbbb
fsqrt
dec
adc
mov
arpl
mov
out
mov
inc
add
bound
or
jmp
aad
push
inc
ret
data16
jmp
jnp
and
mov
roll
lahf
or
add
jbe
mov
adc
out
cmc
inc
xchg
add
xlat
mov
rolb
fsubrs
roll
adc
loopne
add
sbb
jnp
aam
xor
dec
xor
xchg
push
stos
pop
add
mov
adc
rcr
inc
mov
pop
dec
xor
out
cs
sub
gs
add
xor
ja
int
test
cmc
pop
mov
xor
cmp
jecxz
repz
push
out
jmp
xor
push
icebp
test
jmp
out
lcall
mov
lret
mov
fucomip
movsl
push
insb
push
nop
lds
ds
jb
pop
repz
dec
ja
lods
popf
or
bound
mov
jle
mov
adc
mov
ret
lea
insb
pushf
sub
dec
in
sarb
xchg
xlat
cmpb
jno
push
sbbl
add
popa
lcall
mov
add
adc
shll
movsb
add
inc
mov
xorb
inc
clc
adc
pop
push
lods
add
or
cmpsl
cs
pop
adc
nop
imulb
outsb
or
mov
mov
mov
mov
cli
mov
or
mov
xchg
sub
adc
or
scas
push
push
ljmp
cmpsl
xor
pop
imul
daa
or
loopne
or
mov
inc
sub
xchg
dec
popa
mov
addl
mov
pop
cmp
imul
jmp
jne
add
add
dec
push
dec
out
jp
rol
mov
bound
repnz
mov
pop
cld
sub
pop
pop
iret
test
push
mov
ror
xor
cli
jne
jbe
repz
add
jo
out
mov
xlat
mov
xlat
lret
movsb
mov
loopne
add
add
fdivrs
das
cmp
out
and
rorl
sub
xchg
addb
push
out
vmovntps
jns
xchg
dec
clc
push
mov
cmp
dec
ds
subl
test
inc
inc
pop
sub
ljmp
fidivrs
lcall
aas
dec
mov
add
pop
ss
aam
fistl
aaa
dec
test
adc
or
je
aaa
int3
orl
xor
loop
mov
inc
adc
sarb
mov
mov
fcom
and
movl
sbb
movsl
scas
jecxz
cmp
push
fisubrl
mov
and
pop
jp
cmp
movsl
pop
sub
mov
imul
insb
push
adc
cmp
inc
test
cs
adc
arpl
not
aam
shll
pop
adc
add
stos
adc
pop
daa
repnz
cmp
addl
adc
fldenv
insb
aad
or
fdivrp
out
pop
movsb
inc
loope
lods
xchg
push
subl
and
sub
jnp
xor
pop
xchg
fwait
add
or
pop
int
std
insl
pop
dec
pop
movsb
cmpsl
out
lods
lret
dec
sbb
sbb
push
cmp
push
push
or
xchg
test
push
mov
lcall
ds
sbb
xor
sbb
or
mov
xchg
stos
jns
cmovbe
cmp
and
imul
pop
pop
mov
and
inc
add
test
xor
sarb
inc
arpl
fadds
dec
xor
push
jno
sub
mov
mov
cmp
mov
popa
mov
dec
nop
inc
or
lods
aas
frstor
es
mov
scas
sub
xorb
outsl
xlat
and
push
lcall
push
xor
or
xchg
xchg
jnp,pn
test
or
sti
lock
pop
cmpsb
hlt
push
and
mov
sbbl
cmc
sahf
inc
mov
mov
cmp
jno
jecxz
mov
inc
mov
pop
sub
mov
loopne
cmp
pop
cmp
mov
push
adc
ss
pop
test
inc
stos
push
mov
popa
stos
push
pop
mov
stos
pushf
lock
xor
iret
sahf
add
adc
add
cmp
cltd
lds
and
add
lods
inc
in
xchg
repz
add
dec
xor
cwtl
lods
cmp
movsb
sub
daa
insl
and
cmp
push
or
iret
cmovae
rclb
pop
add
cmp
sub
dec
insl
sub
cmp
jmp
add
lock
push
insb
jns
mov
sar
adc
mov
pop
cmp
or
stos
and
mov
pop
shlb
cmpsl
mov
xor
fiaddl
out
into
leave
popf
and
adc
testb
xchg
nop
pop
jmp
std
mov
cmp
mov
add
xchg
pop
xchg
pusha
mov
int
add
sub
xchg
negl
sbb
xor
inc
xor
inc
ret
aam
sub
movsl
lahf
insl
aad
sub
popa
cmp
cmp
or
in
lcall
aaa
jns
cmpsb
pushl
mov
and
mov
pop
pop
lods
push
cmp
inc
in
sti
int
popa
sbb
call
out
int
mov
notb
push
mov
fistps
inc
fsubl
push
add
cmp
hlt
inc
js
pop
push
dec
inc
pop
mov
cmp
push
add
and
adc
adc
inc
pop
mov
lods
push
sahf
stos
push
xlat
push
ret
hlt
outsb
fadd
push
cmp
test
jno
stos
fldt
or
mov
lret
insl
imul
mov
cs
sbb
mov
imul
stos
xchg
cld
jge
xor
adc
enter
push
ljmp
orl
or
icebp
xchg
adc
dec
loope
mov
jno
jl
pop
pop
mov
ljmp
ss
clc
inc
sub
xchg
scas
jge
xor
or
adc
ret
jge
imul
loopne
lcall
repnz
dec
xchg
sbbb
scas
jne
push
pop
inc
dec
stc
in
bound
mov
setb
mov
int
pop
sub
push
pop
add
int3
into
js
and
sbb
cmp
out
sbb
push
xor
xchg
orb
pop
outsb
pop
mov
push
jbe
test
sbb
push
stos
lock
dec
or
fnsave
or
fisttps
sbbl
cmp
subb
loopne
insb
or
jg
and
push
pop
and
hlt
es
pop
or
add
imul
ds
bound
jge
add
add
or
add
mov
sbb
add
repnz
test
push
push
mov
loop
int
shrb
lret
lds
nop
adc
dec
add
aad
insb
jecxz
mov
lds
adc
adc
mov
movb
push
movsl
mov
jnp
in
adcb
cmp
push
das
and
test
inc
and
fidivl
push
mov
add
push
pop
add
dec
mov
sbb
xchg
imul
push
add
ss
adc
dec
pop
mov
fs
jp
jns
adc
jmp
mov
data16
sub
jnp
adcb
mov
mov
test
or
fsubrl
jne
pop
movsb
cmp
je
adc
je
repz
loope
lods
jo
leave
jno
loop
push
jge
sub
cmp
jbe
mov
rolb
or
mov
jl
xor
pop
lock
adc
mov
mov
xorb
mov
mov
mov
and
inc
es
push
aas
insb
sarb
roll
aaa
dec
repz
inc
pop
add
lcall
rcrb
insb
or
scas
sbb
or
mov
dec
pushf
out
ret
mov
inc
dec
cmp
sub
mov
inc
mov
jne
ret
mov
shrb
clc
cmc
loop
in
xor
lahf
sbb
sbb
pop
pop
xor
push
aas
add
adc
dec
or
xchg
inc
aam
jbe
pop
sarb
sahf
mov
sbb
mov
scas
dec
pop
ret
int3
inc
rorl
mov
cmp
mov
push
fdivl
cmpl
push
jmp
test
mov
es
add
or
jle
and
jne
mov
ljmp
ret
movsl
test
jne
push
test
enter
xor
jb
cwtl
aam
push
sbb
nop
cli
adc
dec
subb
js
test
out
test
lret
inc
dec
xor
mov
push
xor
cmp
xor
in
mov
or
rcrb
mov
pushf
push
mov
mov
sub
ret
shll
cmp
int
loope
cli
stos
lret
or
cmp
cmp
or
or
cmp
ja
jg
cmpb
dec
gs
jmp
jnp
push
xor
imul
mov
or
mov
push
lahf
sub
ljmp
or
cwtl
sbb
xor
outsl
xor
dec
pop
xor
jno
xlat
dec
call
aad
sahf
sub
ljmp
add
xchg
jnp
cld
add
out
in
and
sahf
mov
cltd
inc
dec
sub
dec
mov
cmp
or
aas
scas
xor
inc
or
add
stos
lds
stc
xchg
shlb
push
add
fucomi
les
lahf
mov
aas
movsl
dec
push
and
fisttps
mov
fiaddl
sahf
push
iret
sbb
jo
je
mov
adc
inc
outsl
mov
lods
pushl
fcmovnb
cmp
inc
jnp
out
lods
sub
cmp
jbe
sub
pop
cmp
ljmp
xor
jo
sahf
sbb
sahf
push
xchg
xchg
mov
xor
call
adc
fdiv
outsb
sbb
add
clc
inc
sbb
mov
sub
jp
imul
outsl
popa
ja
fucomi
mov
dec
xor
mov
add
add
and
mov
shrb
sbb
pop
push
cmpsb
jmp
mov
jne
outsb
jle
movsl
stos
mov
sti
mov
or
xchg
pop
pop
jmp
push
inc
je
outsb
cmp
icebp
in
add
mov
fiaddl
fs
xchg
xlat
xchg
js
or
jns
push
jae
aad
mov
jnp
lcall
pop
popa
inc
mov
js
push
adc
or
mov
into
aam
rorl
or
test
add
icebp
dec
cmc
bound
push
pop
lods
cmp
sbb
dec
jno
add
pop
movsb
push
outsl
push
dec
sbb
inc
test
shll
stos
or
mov
mov
clc
icebp
sub
xchg
out
mov
ret
fcom
xor
add
inc
ja
inc
jmp
stos
push
dec
or
inc
pop
pop
movl
loope
push
adc
inc
sbb
push
dec
mov
cltd
push
jle
add
cmp
test
fidivl
dec
add
movhps
les
adc
imul
cltd
data16
adcb
mov
inc
test
lcall
pop
subl
inc
aas
pop
pop
xor
movsb
test
cmp
sub
divl
pop
pop
jo
sahf
bound
xor
lds
add
sbb
jl
push
insl
fdivrs
jo
jbe
sub
rclb
push
xorl
out
xlat
ljmp
mov
push
mov
jne
cmp
push
roll
or
pop
pop
jae
fsubl
into
and
out
jle
jbe
das
adc
lea
cltd
dec
jne
arpl
fisubl
sub
mov
jle
pop
loope
ds
adc
dec
cmp
hlt
push
inc
sub
mov
jo
outsb
xor
dec
es
and
ret
adc
mov
mov
sbb
pop
add
mov
les
or
mov
jmp
xlat
mov
adc
jae
jne
movsl
icebp
lea
gs
nop
subb
mov
clc
inc
jno
or
jge
outsl
lahf
rclb
lock
or
jo
rcr
add
pop
mov
jmp
inc
in
dec
jle
push
xchg
cmpsb
xchg
ret
xchg
push
insl
adc
pop
push
cwtl
ret
sbb
andb
xorb
mov
movsb
mov
xorl
addr16
lea
imul
cld
or
and
cmpl
out
jge
push
ss
or
gs
or
leave
rol
push
dec
dec
and
ds
jp
inc
xor
in
cmc
js
mov
xchg
pop
lahf
rorb
ljmp
hlt
mov
sub
xor
cmpsl
mov
lock
and
pushf
sbb
inc
imull
pop
repz
add
adc
ret
in
or
imul
test
lcall
cmp
pop
cmpsl
mov
sbb
lret
rclb
pusha
add
mov
push
sti
into
add
inc
mov
divl
xchg
sti
cmpsb
push
sub
xor
jg
pop
inc
shrl
cmp
mov
andl
adc
xor
je
inc
mov
int3
xor
testb
test
dec
or
pop
xor
pop
add
mov
test
hlt
xor
pop
cltd
clc
rorl
and
or
nop
sbb
push
mov
shrb
mov
lock
mov
and
hlt
insl
push
enter
cmp
sbb
sub
xchg
ds
xor
cmp
ret
cmp
cli
out
sub
push
xchg
movsb
mov
mov
fidivs
or
loope
fs
loope
shr
rcll
and
dec
andb
and
js
pop
aaa
lock
mov
mov
inc
rcrl
push
ret
shlb
dec
into
xor
in
loope
imul
enter
movsb
cli
movsl
xchg
xchg
jnp
enter
mov
iret
loop
loope
pop
pop
mov
xlat
cmc
int3
mov
and
or
outsb
aaa
sbbl
xlat
shll
push
sub
lods
xchg
mov
subl
mov
inc
rcll
xchg
adc
adc
fsubrs
stos
call
sbbb
out
test
mov
fwait
ret
loopne
ljmp
fs
pop
add
adc
sti
cltd
push
cmp
adc
mov
cmp
mov
sbb
loop
xchg
mov
insl
push
enter
sbb
jo
mov
fwait
outsl
js
movsb
fwait
inc
aad
mov
jmp
pop
add
pop
aad
fidivs
xchg
movsl
test
das
pop
inc
or
fimuls
test
loopne
scas
in
mov
leavew
mov
notb
pop
pop
mov
popf
pop
inc
jle
xchg
mov
xor
xor
or
out
mov
in
sarb
or
add
sbb
clc
push
loop
sbb
or
mov
jne
pop
repz
jp
pop
cmp
cmp
pop
test
mov
cltd
ja
cs
or
xchg
ror
ds
jo
cmp
mov
or
bound
out
inc
adc
xor
test
and
sbb
fs
aas
imul
rcl
and
sbb
in
add
push
adcb
pop
test
out
jmp
call
dec
and
xchg
loopne
push
movsb
jbe
mov
movsl
push
jo
lds
fiadds
std
sarb
sub
jl
or
cmpl
or
add
popa
in
jns
jnp
mov
scas
mov
push
ret
cmp
fiaddl
adcl
testl
jmp
cwtl
pop
push
cmpsb
jle
je
inc
adc
jmp
roll
dec
lods
cmp
imul
inc
rorb
call
xor
mov
push
cmp
mov
ss
push
out
sarb
outsb
mov
iret
sbb
stc
daa
dec
lods
movsb
pop
mov
subl
repz
xchg
push
outsl
pusha
test
inc
popa
add
stos
mov
xor
push
bound
or
rcr
dec
and
mov
inc
shll
add
cmp
xchg
mov
add
or
sbb
aas
adc
ret
cmovno
outsl
dec
pusha
sbbl
inc
popf
rorb
cwtl
inc
nop
hlt
cli
leave
loop
pop
ret
and
aad
cmpb
in
shrl
aam
xchg
add
in
mov
jmp
popa
fsin
outsb
cmpsb
orl
jo
xchg
jp
ret
pop
xchg
movsl
dec
xchg
in
in
fidivs
sub
sbb
mov
mov
mov
add
imul
mov
pop
cld
stos
jnp
adc
mov
or
or
add
sub
or
and
loop
icebp
mov
test
push
push
pop
rorl
cmc
sbb
hlt
addr16
push
popf
sub
pop
fdiv
xchg
mov
loop
hlt
xchg
or
int
mov
adc
mov
pop
iret
cmp
pop
cmpsl
movsl
cmpsl
adc
into
xorl
xchg
sbb
insb
or
dec
mov
cmpsl
sub
ljmp
pusha
mov
add
cmpsb
add
insb
cmpsl
dec
sub
and
jnp
fs
loope
adc
ss
add
icebp
mov
and
mov
mov
inc
sub
push
lcall
call
or
cmp
or
mov
ss
dec
mov
push
sbb
lret
cmp
jne
imul
std
pop
or
mov
cltd
add
adc
lahf
push
mov
stos
add
sub
jne
mov
add
out
or
int
xchg
dec
mov
int3
jo
jmp
push
in
cmpsl
push
loop
psraw
sbb
push
or
scas
shrl
pusha
mov
inc
or
xchg
cmpl
and
test
push
sub
test
adc
jmp
add
clc
insb
mov
lock
daa
and
iret
incl
pusha
movsl
push
lret
shl
imul
mov
lahf
js
testl
aas
cmpl
test
movsl
cmp
xchg
sbb
lock
add
dec
movl
fcomi
movsl
sub
inc
sti
mov
sub
push
mov
arpl
lock
sbb
xchg
iret
push
imul
scas
sub
xor
sbb
sub
and
mov
sahf
jp
lret
fstl
scas
mov
mov
leave
lods
add
mov
push
sbb
xor
pop
and
sbb
addr16
pop
ficoml
rol
aam
jecxz
lcall
sbb
push
xor
pop
xor
les
cs
pop
ret
rol
stc
fldl
cmpb
cmpsb
scas
and
cs
pop
adc
lcall
sahf
adcb
imul
lea
ljmp
test
adc
xor
or
push
or
push
aas
ljmp
xchg
hlt
incl
cmpsb
and
pop
mov
enter
sahf
jbe
adc
jle
int
or
sbb
dec
mov
jge
mov
cli
mov
pop
xchg
rdpmc
add
push
imul
dec
or
fbstp
imul
dec
xorl
push
cmc
dec
bound
push
outsl
dec
sbb
xlat
lret
xlat
test
push
rclb
or
lock
mov
faddp
mov
add
iret
je
dec
cmp
xor
dec
mov
test
pop
sahf
adc
mov
lcall
gs
adc
or
pop
jmp
jecxz
push
and
lds
sbb
sub
stos
hlt
in
pop
in
xchg
sbb
orl
or
aad
mov
dec
scas
pop
inc
cmc
cmp
cmp
popa
test
lret
push
iret
xchg
pop
adc
dec
sub
in
aas
inc
cmpsl
push
rol
std
pop
xchg
mov
push
loop
aad
jp
jne
xor
jo
mov
sub
rolb
cmpsb
sti
sub
gs
jb
loopne
push
mov
mov
and
jl
sbb
cmp
cmp
dec
cmpsl
mov
daa
roll
sbb
push
test
mov
in
pop
and
jae
xchg
repz
lods
jns
cmp
mov
mov
jno
push
mov
xor
ret
shlb
mov
in
fmull
les
and
pop
jecxz
cli
arpl
xor
sbb
xchg
cmc
pop
xor
outsl
xchg
xor
loopne
push
cwtl
push
dec
adc
rolb
push
sub
dec
in
mov
dec
pop
add
adc
cmpsl
lret
jmp
dec
dec
inc
cli
cmc
or
inc
push
scas
lock
sub
xlat
mov
jg
pop
push
loope
or
and
add
popf
rorb
adc
mov
and
push
and
cmpsl
xchg
fcmovb
sbb
out
push
jmp
in
inc
clc
js
inc
std
xchg
roll
test
adc
sub
outsl
out
movsb
lret
xchg
rorb
enter
pop
push
ljmp
cmp
sub
or
jo
xor
ret
pop
aaa
adc
xchg
fs
fldt
cmp
pop
xchg
xlat
je
xchg
mov
fisttpll
cmovns
lret
movsl
add
imul
test
les
arpl
je
add
lock
aas
pop
push
push
ja
icebp
in
std
mov
mov
les
mov
inc
lahf
mov
lea
pop
mov
loopne
cmpsl
bound
popf
inc
cmpsl
jecxz
xchg
xchg
ffree
arpl
push
xchg
sub
icebp
cs
push
xor
sbb
sahf
mov
roll
outsl
es
or
push
push
mov
jno
out
mov
jb
in
ljmp
out
add
dec
mov
fists
jbe
je
pop
loope
and
jmp
mov
push
aas
fidivl
leave
add
cmc
imul
add
subb
movsl
ja
je
test
push
add
rol
sub
push
pop
dec
loop
dec
rcrl
jb
push
ljmp
loope
lcall
and
sbb
ret
jae
pop
sti
test
insl
ret
adc
dec
dec
xchg
filds
enter
cmp
shlb
push
mov
mov
push
xchg
adc
mov
loopne
cs
mov
rorb
mov
jbe
xlat
push
jno
and
mov
jne
xchg
hlt
cwtl
pop
inc
std
mov
cmp
fisttpl
inc
cmp
cmpsb
xchg
ljmp
and
orb
js
push
push
in
cltd
insl
pop
add
inc
subb
lock
push
jp
pop
mov
or
mov
mov
les
imul
stos
or
mov
iret
test
rcrb
push
imul
data16
dec
sub
add
dec
rorb
clc
hlt
cli
or
add
leave
sbb
loop
jmp
aaa
mov
add
inc
adc
mov
daa
jne
loope
js
mov
adc
sub
nop
fildll
jp
sub
pop
or
hlt
clc
mov
and
mov
mov
leave
decb
sbb
sbb
mov
cmp
sbb
cmpsb
hlt
outsb
inc
xor
pusha
adc
push
leave
mov
outsl
cmp
gs
and
and
and
fsub
call
pop
stc
xchg
push
xchg
pop
scas
pop
dec
and
test
test
mov
inc
dec
shrb
xchg
sahf
dec
lret
mov
pop
dec
scas
jo
cmp
lock
xchg
jge
cmpl
stos
cli
inc
add
test
sbb
aaa
stos
inc
rclb
inc
add
sub
mov
adcl
fisubrs
xor
stos
xlat
and
xor
and
sbb
in
xchg
jge
sarl
ss
jecxz
ret
mov
mov
lods
pop
jp
xlat
dec
imul
mov
mov
pushaw
pusha
mov
incl
and
test
loop
xor
mov
hlt
js
stc
test
hlt
cwtd
or
xor
adc
mov
roll
roll
ficoms
shlb
lods
addl
mov
add
shrb
sub
and
and
xchg
loopne
pop
mov
das
lret
xchg
inc
fldt
xor
cwtl
mov
aam
mov
jo
idivb
or
xor
icebp
jo
dec
and
ljmp
movsb
mov
or
add
jne,pt
and
pusha
cld
mov
add
push
mov
addb
fdiv
or
jbe
mov
inc
aaa
shlb
adcl
pop
mov
dec
inc
cmp
sub
dec
adc
lock
sahf
dec
mov
and
push
pop
sub
loopnew
xor
cwtl
mov
push
pop
xchg
jmp
inc
mov
fisubrl
push
in
popa
popa
cmp
and
jecxz
lret
xchg
rcrb
mov
add
stos
cmp
out
divl
into
in
in
push
hlt
test
mov
sahf
or
insl
lock
addr16
add
and
loopne
fwait
mov
pop
imul
mov
pop
sbb
in
or
mov
das
shlb
sbb
mov
addb
push
fadd
and
xlat
push
aam
scas
mov
inc
in
mov
call
lret
and
stc
adc
outsl
add
lret
roll
leave
inc
loope
jl
insb
sub
cmp
push
fucompp
adc
dec
jns
or
adc
fcomip
sarl
ret
sub
loope
pusha
mov
call
add
les
sub
ljmp
xlat
sbb
sbb
out
addr16
xchg
lcall
aad
sub
in
test
cmpsl
adc
and
pop
lods
add
sarl
repz
xor
dec
dec
mov
dec
cli
mov
pop
pop
and
mov
push
jnp
cmp
lcall
gs
xchg
sub
cli
cmp
cs
call
aaa
pop
int3
xchg
fisttps
pop
dec
sub
insb
mov
sbb
mov
xchg
cmpsl
jb
mov
enter
xor
lods
inc
push
imul
cmpsb
sub
jo
repz
mov
dec
test
xchg
or
cmp
lcall
mov
arpl
push
pop
jg
sti
adc
sahf
inc
xor
pop
push
int
xchg
mov
mov
loope
mov
aam
ret
fidivrl
outsb
dec
clc
pop
mov
repnz
mov
or
push
fbld
outsl
pop
out
cld
scas
jl
test
push
in
sbb
push
jne
movsb
jo
dec
fisttpll
loopne
sbb
jns
sbb
rcrb
loopne
jno
mov
popf
dec
fisubl
add
xchg
xchg
mov
int
dec
mov
inc
std
sbb
cmpsb
int3
stc
fwait
push
xor
mov
jecxz
iret
ret
and
pop
cwtl
mov
mov
xchg
cmp
xor
or
adc
mov
cmc
sub
je
test
dec
loope
add
fnsave
je
sub
sbb
inc
xor
negb
sahf
pop
jmp
mov
jle
or
jle
fs
pop
push
dec
sub
movsl
ret
add
sarl
hlt
outsb
dec
sbb
inc
in
push
push
pusha
in
mov
and
pcmpeqd
jns
lcall
insb
inc
jbe
shr
dec
outsb
pop
inc
int
setge
push
dec
mov
cmp
mov
sub
fwait
mov
jl
dec
cli
cmp
icebp
repz
stos
orl
stc
popa
pop
movsl
sbb
in
dec
fldl
xor
xor
xchg
imul
xchg
dec
ret
jge
movb
pop
mov
sahf
lods
imul
add
mov
push
aad
cs
addl
icebp
popa
sub
sbbl
xor
inc
lret
bound
data16
mov
sbb
mov
clc
ja
js
xchg
mov
pop
xor
add
add
xchg
push
jne
in
scas
jp
cli
jecxz
test
lods
stos
jno
dec
movl
pop
push
mov
test
leave
cpuid
fisubs
inc
rclb
push
test
pop
or
push
pop
int
lock
movsl
adc
pop
jbe
or
repz
fs
mov
mov
mov
lods
fildll
loop
sbbl
lds
or
icebp
popa
pop
loopne
jp
and
daa
pop
dec
xlat
adcl
xor
pusha
fs
fiaddl
leave
adc
lcall
outsl
sub
inc
call
mov
in
mov
adc
icebp
lock
or
or
mov
lock
addr16
call
fs
or
lock
push
inc
pop
xor
lods
inc
imul
fs
sub
pop
and
rcr
aaa
sar
lock
push
push
test
aaa
inc
stc
sysexit
dec
pop
pop
aam
jg
or
inc
mov
lods
sub
jp
in
leave
shrl
jo
lds
add
loope
or
add
scas
out
movsb
jp
arpl
add
or
mov
popf
aaa
ret
jae
cmp
inc
dec
leave
mov
icebp
or
ljmp
imul
mov
inc
cld
mov
data16
mov
lock
loope
adcl
jmp
mov
dec
adc
add
push
fisubs
cltd
stc
icebp
imul
mov
call
push
out
adc
mov
repz
roll
jmp
mov
and
dec
mov
pop
jo
xchg
clc
pop
cmp
or
lds
push
daa
add
mov
inc
sbb
call
aam
enter
addr16
push
or
addl
cmp
push
jno
push
mov
imul
xchg
mov
inc
fchs
popa
jbe
arpl
add
outsl
jbe
test
push
cmp
pop
mov
scas
mov
aad
stos
loop
adc
movl
fildll
pop
nop
pop
lds
mov
add
xchg
shlb
dec
mov
cwtl
xor
pop
loopne
mov
adc
jbe
jne
cmovp
nop
ds
call
and
daa
add
dec
lds
inc
jl
mov
scas
inc
test
fildl
popa
and
test
inc
out
fldt
incl
cmp
lods
mov
mov
jle
jmp
fcoml
sbb
es
fadds
xchg
mov
fldl
psubd
test
loop
testb
push
push
stos
popa
cmp
aad
mov
lock
pop
push
loop
lds
in
dec
pop
push
aaa
pop
pop
mov
add
das
bound
sbb
dec
aas
adc
ja
mov
dec
test
sti
test
out
bound
out
lcall
xchg
stos
mov
mov
and
movsb
sub
mov
movsb
jge
lahf
subb
andl
push
xor
jmp
jg
xchg
imul
inc
outsb
shrb
icebp
imul
int
xor
out
inc
iret
clc
icebp
pop
jnp
in
push
sub
dec
lcall
inc
enter
test
push
add
mov
xchg
jo
sub
iret
pop
inc
or
mov
add
add
and
sbb
xchg
cmp
in
or
scas
test
movb
int3
pop
jns
ds
rorb
adc
or
insl
filds
loop
or
push
sti
push
pop
daa
jl
sbb
repnz
fmuls
jno
push
ret
lcall
sbb
pop
or
jne
pop
cli
faddl
out
loop
loope
pop
add
mov
xor
pushf
mov
add
jl
and
dec
dec
xor
or
add
inc
mov
cltd
push
lock
loopne
push
ja
out
sub
push
repz
jmp
cmpb
shr
jnp
sbb
or
mov
xor
xchg
dec
push
mov
in
stc
orb
dec
inc
fnstenv
pop
pop
ja
push
pop
sub
mov
mov
shrl
xchg
xor
sub
cmp
jl
bound
mov
pop
ja
dec
inc
arpl
add
lret
jo
mov
jns
fcom
loope
push
loop
ret
xchg
xor
sub
jecxz
es
call
imul
pop
mov
add
mov
push
jbe
push
jbe
or
adc
dec
lock
iret
inc
push
adc
call
mov
incl
lock
push
mov
xchg
xchg
adc
xchg
out
inc
les
psrad
in
mov
sub
stos
into
jns
out
rclb
test
adc
test
mov
mov
jne
ret
inc
pusha
fiadds
pop
iret
icebp
cmp
jnp
daa
add
mov
sbb
xor
and
adc
pop
xor
shrl
pop
bound
adc
imul
vprotb
pop
pop
mov
adc
cmp
dec
imul
mov
jge
xchg
repnz
pop
xor
test
rolb
add
and
jecxz
dec
andb
fwait
sub
jo
mov
dec
ret
imul
and
xor
jne
sub
push
mov
mov
clc
ljmp
pop
xor
cmp
cmp
fnsave
je
mov
shll
xchg
shl
scas
jge
es
xchg
dec
xchg
gs
push
pop
mov
pop
fldcw
push
arpl
add
cmpsb
inc
xchg
jae
jne
inc
adc
inc
add
xchg
js
aam
mov
jb
outsb
outsb
aas
outsl
andl
cwtl
jae
out
jno
mov
cmc
out
int
dec
cmp
clc
movsb
mov
loope
call
clc
xchg
pusha
aam
push
cltd
pushl
dec
mov
ficoms
notl
mov
call
pshufw
cmpl
xchg
je
sbb
sahf
ljmp
jp
mov
fcompl
mov
jp
pushw
adc
in
adc
das
ret
out
cmp
cmp
enter
lret
push
lret
lods
jp
mov
lock
or
pop
dec
push
add
mov
xor
mov
mov
ds
shll
mov
fcmovb
aad
push
rorl
in
pop
sbb
lock
inc
mov
push
test
out
loope
test
xchg
enter
xchg
call
rol
or
mov
orl
cmpl
xlat
push
shll
lods
mov
sbb
mov
rorl
pop
mulb
negb
sub
push
arpl
mov
frstor
fidivl
mov
or
push
aaa
mov
and
mov
es
es
pop
inc
js
add
fucomp
cmp
xor
fmull
jle
cwtl
stc
dec
jl
jnp
ret
pop
sub
movsl
cmpl
jo
std
mov
ret
sub
xor
in
scas
rol
stos
mov
mov
xor
or
add
dec
insb
loop
sbb
adc
roll
pop
in
fidivl
popf
hlt
cmpsl
mov
testb
cmc
cmp
inc
push
fwait
push
sub
int3
add
pop
xor
adcb
pop
dec
cmpsl
inc
in
mov
shr
push
or
popa
add
stos
pop
sub
repz
xor
mov
insl
sbb
ja
in
stos
ret
push
out
mov
insl
cld
rcl
fisubs
scas
mov
jno
bound
pop
sub
clc
mov
mov
rorb
test
loopne
inc
sub
cs
pop
dec
jp
out
in
in
xchg
dec
decl
cmp
in
out
or
xor
mov
sub
stos
pusha
cmpsb
mov
pop
pop
cmp
push
repz
insb
sbb
or
jne
and
cmpsb
inc
dec
arpl
dec
push
decl
outsl
xor
mov
push
ja
add
xadd
inc
in
lret
xchg
jbe
repz
dec
cld
icebp
sbb
add
sbb
decl
clc
xorl
xor
pop
rolb
lds
fisubrs
stos
jecxz
add
scas
jb
sbb
jl
xchg
and
repnz
ljmp
int3
out
cmp
cs
xor
outsb
incb
lods
adc
mov
xor
fwait
mov
lods
test
loop
mov
mov
sbb
ret
xchg
inc
xchg
push
mov
addr16
rcrl
popa
les
cmpsl
je
mov
inc
add
cmp
mov
add
imul
xor
mov
cmpsb
loopne
push
xor
ljmp
sbb
leave
fdivrs
inc
inc
cmp
push
out
smsw
jbe
sahf
xchg
mov
adc
out
mov
pop
es
clc
mov
push
in
jns
jb
sbb
mov
lcall
push
pop
add
incl
xor
loop
cmp
jo
push
push
lahf
pop
push
xor
mov
test
call
les
ja
sbb
xchg
ret
ret
xchg
ljmp
jbe
jp
mov
or
push
outsl
pop
cmp
sub
cld
std
pop
inc
loop
sub
movsb
push
mov
hlt
adc
xor
xor
addb
ret
testb
mov
mov
mov
daa
jo
add
push
sbb
cwtl
fs
lods
sub
adc
adc
cmp
ds
loope
adc
ret
dec
ja
sub
and
nop
xor
pop
xor
loop
xchg
and
sbb
pop
faddp
lods
mov
test
adc
dec
push
call
inc
inc
in
fld1
pop
xor
add
mov
cld
sbbb
xchg
pushf
jp
sbb
mov
imul
cli
or
ljmp
jnp
push
aas
mov
inc
fnsave
cmp
ret
adc
psubd
addb
movsb
pop
hlt
mov
test
push
mov
je
test
adc
inc
push
sub
fdivp
addr16
inc
je
dec
xchg
popa
dec
rcr
sbb
pop
or
lea
rcrb
pop
xor
incb
stos
push
icebp
mov
rcrb
pop
adc
inc
or
add
scas
push
jg
call
lret
and
das
and
imul
inc
aas
aaa
subb
in
test
mov
push
xchg
js
icebp
mov
mov
xchg
mov
imul
cmpsl
jae
rorb
aas
mov
sbb
adc
call
sarl
jmp
adc
arpl
inc
and
mov
mov
sarl
jmp
dec
fcomps
xlat
add
and
or
rsm
xor
jg
loopne
sbb
nop
adc
arpl
sub
push
aad
add
fs
in
push
jg
push
push
and
cmpsb
xlat
sti
mov
es
or
lcall
mov
mov
test
fnstenv
push
psrlw
push
pop
ret
lea
out
sub
imul
cs
inc
ret
in
jp
mov
push
lret
cmpsb
cmpsl
add
adc
js
mov
mov
push
sbb
js
add
push
mov
adc
pop
loope
mov
mov
test
adc
inc
and
ss
sub
subb
pop
loop
ret
mov
fistpl
loopne
push
mov
mov
mov
idivb
xchg
pop
xor
cmp
xor
stos
sbb
xchg
pop
sub
inc
sub
lret
push
aam
inc
add
lock
inc
outsb
push
pop
aad
or
or
mov
mov
pop
cmpb
insb
inc
sahf
test
add
and
bound
loopne
pop
xor
inc
lods
cmp
subl
rcl
xchg
ficomps
test
adc
mov
push
cmpsb
fcoms
popf
mul
mov
test
adc
fdivp
jecxz
dec
adc
sti
mov
push
imul
push
pop
push
pop
ljmp
sbbl
fidivl
ret
mov
ret
add
hlt
insb
xor
sub
adc
push
rcrl
addl
mov
mov
and
push
fbstp
jl
inc
sarb
fildll
inc
pop
sbb
dec
fistpll
pop
pop
dec
pusha
sub
and
lds
mov
movsb
push
add
mov
nop
popl
push
xor
insb
push
iret
les
es
fs
jg
mov
orl
in
mov
mov
mov
xchg
cmp
testl
rep
outsl
mov
mov
movsb
xchg
cwtl
pop
fs
incl
out
notl
mov
jb
push
mov
push
mov
or
lea
addr16
mov
inc
or
or
dec
movsl
cmpb
ror
daa
inc
jge
mov
and
test
int3
scas
cli
pop
push
lcall
out
out
cld
int
fsubs
dec
mov
xchg
aas
mov
mov
cwtl
sub
dec
mov
incl
xchg
fdivr
cmp
xor
popa
cmpsb
cli
mov
lods
push
cli
mov
fstl
pop
mov
fwait
jo
je
dec
dec
test
ljmp
adc
or
fs
lods
cmp
out
je
xor
pop
add
jbe
jle
and
sub
fwait
mov
sbb
and
sbb
shl
mov
add
dec
imulb
cmpsb
xchg
add
sbb
loope
jns
clc
add
call
and
adc
sub
pop
test
loop
jecxz
dec
stos
mov
pop
js
xchg
jl
mov
aas
iret
inc
adc
js
sti
xor
nop
mov
aam
js
add
xchg
jbe
adcb
dec
cmp
imul
aaa
pushf
or
out
test
loopne
lret
mov
je
loop
aad
scas
in
ret
adc
push
jmp
mov
cmpsb
je
sti
popa
inc
mov
mov
sahf
sbb
cmp
insb
aad
fwait
add
cli
ret
xchg
jmp
inc
sbb
imul
inc
cmpsl
mov
enter
sub
dec
and
sarb
js
add
and
xor
push
pop
mov
lahf
add
jle
jne
sbb
mov
movsb
loopne
xor
add
loope
addr16
cmp
sbb
in
push
add
mov
stos
andl
xor
cmovle
xchg
sbb
and
pop
mov
or
dec
out
movsl
xchg
rcll
mov
adc
pop
divl
scas
ss
bound
repz
and
adc
and
sahf
adc
mov
pop
mov
popl
adc
or
adc
and
adcb
pop
add
mov
test
test
je
push
icebp
cs
or
xor
sbb
and
ss
jge
add
or
imul
lock
cmpsl
icebp
and
imul
xorl
bsf
xlat
pop
push
inc
js
mov
insl
je
cld
mov
and
sbb
std
shl
incl
push
sbb
and
mov
outsl
sbb
mov
jne
add
xchg
mov
or
rorb
push
mov
add
and
and
bound
inc
rcr
in
mov
push
mov
push
mull
divb
cs
push
sub
cld
in
xor
inc
fdivs
adc
out
mov
orb
nop
rclb
jmp
fcmovnu
ds
pop
test
sbb
cs
jae
movsl
adc
insl
loopne
mov
add
int3
push
push
mov
adc
xlat
mov
or
jp
mov
bound
daa
ds
insl
aad
add
xchg
sub
leave
jge
sbb
xchg
xchg
mov
imul
lahf
jp
mov
aam
jle
loopne
test
dec
mov
mov
fsubrl
mov
pop
mov
and
fldl
pop
movsb
lret
adc
or
push
dec
add
jno
fisubrs
negb
sub
sub
mov
xor
or
loop
int3
push
cli
xchg
jle
inc
or
roll
mov
sbb
test
adc
enter
lock
ret
jo
pop
popa
loopne
arpl
aas
scas
test
and
repz
pop
jl
rcrl
aam
lds
outsb
pop
or
cmp
add
lcall
or
push
mov
jecxz
pusha
bound
and
or
sub
ret
xchg
mov
pop
incl
inc
test
lods
mov
jg
lods
jo
sbb
adc
cmc
mov
andl
push
mov
pop
dec
add
test
mov
mov
mov
mov
adc
mov
dec
jns
mov
cmp
xchg
mov
insl
es
adc
je
icebp
pop
hlt
xor
mov
jbe
push
repnz
jle
cmp
shll
pop
jg
sub
repz
aam
mov
dec
push
dec
gs
cli
sub
cwtl
mov
push
push
and
mov
pop
inc
mov
adc
test
pop
fimull
cmp
fwait
icebp
mov
repnz
cmp
outsl
nop
mov
adc
xor
add
sbbb
clc
arpl
ljmp
dec
push
sub
fs
cmp
mov
mov
rclb
lret
inc
jge
jmp
push
cmpsb
push
or
and
loop
pop
insb
sarb
outsb
add
cs
dec
rclb
dec
aaa
pop
mov
and
stos
push
shrb
sbb
inc
adc
lcall
jge
and
bound
sbb
pop
mov
jo
iret
dec
mov
jnp
sub
mov
push
ds
fwait
std
xchg
daa
test
data16
add
mov
bound
imul
enter
add
xlat
cmp
mov
sar
outsl
inc
add
lods
mov
add
cmc
pop
add
insb
and
cmp
sahf
mov
push
inc
mov
test
pop
inc
js
dec
cmp
xchg
adc
inc
mov
cmp
pop
cmp
aam
cld
sbb
pop
inc
pop
sub
sub
push
jmp
add
sub
push
pop
fidivrs
clc
pop
sub
jne
jo,pn
and
mov
aam
in
push
inc
je
push
test
jge
add
lret
enter
movsl
cwtl
push
add
enter
xor
pusha
jmp
js
push
cmpb
inc
jp
xchg
out
add
mov
into
or
mov
shll
mov
xor
test
sub
push
xor
dec
mov
ja
lods
lret
pop
sub
insb
ret
jmp
xor
adc
sub
mov
ret
shrb
aas
push
ljmp
mov
sbb
das
pop
mov
call
mov
dec
sub
and
and
sbb
orl
dec
xor
mov
jnp
sbb
fldcw
cmp
clc
dec
inc
movsl
cld
mov
adc
cltd
and
push
adc
push
rcrl
add
ror
cmp
fnstenv
pop
incb
jmp
mov
popa
dec
mov
pop
insl
ja
std
pop
xchg
jo
aaa
lock
lcall
lcall
sbb
ret
push
dec
int3
loop
flds
xchg
jo
add
or
dec
pop
insl
jge
cmp
and
pop
lcall
xchg
mov
add
subl
ljmp
inc
sbb
ljmp
inc
or
iret
mov
xor
daa
popl
mov
loopne
fistl
mov
jbe
inc
push
and
fsqrt
je
and
cli
popf
shl
jbe
mov
mov
lcall
hlt
add
imul
or
push
and
in
cmpsb
or
out
pushf
adc
push
out
jge
push
dec
lret
dec
add
xor
rorb
cmp
cmpsb
hlt
or
push
mov
out
aas
push
push
cmp
aam
hlt
call
stos
adc
cmp
sahf
xor
test
mov
add
enter
movsl
stos
ret
or
sub
jo
xor
mov
jae
sbb
test
into
xchg
cmpb
mov
test
lret
movsb
cwtl
aaa
xchg
cmp
andl
lcall
mov
add
mov
test
rcr
fstp
jl
mov
mov
lret
sbb
outsl
cmp
ds
push
insl
pop
mov
push
cmp
scas
push
fcmove
cli
mov
push
sbb
daa
lea
mov
outsl
adc
andl
pusha
insl
push
test
incb
ret
sub
popa
xchg
and
fwait
es
mov
mov
clc
arpl
or
dec
enter
mov
into
xchg
addb
xchg
data16
test
mov
fs
cmp
loop
out
pusha
mov
lret
jle
pop
inc
inc
stos
and
scas
push
xor
or
jo
adc
jl
and
and
pop
gs
sahf
pop
imul
aas
subb
xor
push
js
scas
clc
popa
rolb
inc
cmp
sub
cmp
mov
mov
xchg
mov
cmp
cmp
test
fs
fisubrl
outsl
rorb
sub
pusha
js
mov
mov
insb
lds
or
inc
push
fisttps
jns
clc
adc
xchg
add
push
rcrb
fs
mov
lock
movsb
scas
mov
inc
imul
fs
aaa
and
nop
lock
das
dec
mov
lret
push
xor
clc
push
dec
cli
inc
jl
cmp
ret
mov
cmpsl
adc
rcll
push
scas
cmpsl
lock
insl
sbb
push
jno
mov
ljmp
push
cmp
fs
dec
scas
insl
xor
daa
inc
in
mov
shll
add
cmp
sub
pusha
scas
addr16
xor
and
es
dec
lahf
scas
les
fsts
sbbb
sbb
ret
dec
xchg
inc
mov
repz
lcall
push
add
push
mov
and
lea
jp
xchg
inc
cli
mov
fwait
cli
xorb
rcll
cld
sub
je
leave
into
mov
inc
iret
dec
ds
aam
inc
jge
mov
rolb
nop
or
stos
mov
ljmp
faddl
jmp
pop
xor
not
clc
sbb
in
in
xchg
xor
je
loopne
pop
add
mov
inc
mov
popf
xchg
stos
xchg
mov
push
mov
push
ljmp
push
and
jg
cli
filds
repz
or
out
add
add
shll
fisttps
shrb
lds
test
repnz
mov
mov
jge
pop
sub
sub
cld
or
mov
imul
adc
das
jo
jmp
rol
sti
push
ret
aam
arpl
mov
mov
ret
mov
ds
inc
mov
adc
mov
sbb
mov
into
or
xchg
xchg
cmp
incl
mov
inc
int3
push
sbb
test
dec
and
sub
loope
adc
call
mov
sub
ret
and
jno
mov
push
insl
rolb
pusha
push
sub
out
mov
stos
mov
mov
lods
xchg
sub
insb
push
nop
or
inc
js
push
je
cmp
test
inc
jecxz
imul
loopne
lea
xorb
and
add
fs
shlb
mov
push
cmpl
shrl
push
fsubrs
aaa
mov
je
inc
mov
mov
mov
jbe
fdiv
cmp
dec
js
cmc
and
adc
ljmp
or
adcl
or
mov
cmp
cmp
or
pop
push
dec
ret
movsl
mov
orb
mov
enter
in
outsb
sub
ret
jge
push
mov
pop
push
jb
cmp
sub
ret
mov
jl
adc
ret
jmp
cmpl
push
xchg
or
lret
lock
iret
mov
inc
scas
scas
xor
sub
ret
inc
into
adc
lea
pop
call
std
push
lret
clc
js
jmp
sub
outsl
dec
imul
mov
mov
xor
or
mov
jns
loopne
pusha
outsb
test
mov
push
test
stos
cwtl
push
inc
push
dec
ss
pop
dec
sarl
mov
fadds
push
lahf
aad
jmp
inc
push
addr16
ljmp
push
aam
in
adc
sbb
test
loopne
push
int3
pop
dec
jp
addr16
arpl
incl
pop
fldl
addr16
pop
into
and
arpl
sahf
in
inc
ret
je
insl
les
mov
bound
add
notl
add
mov
cld
cmpl
popf
xchg
inc
cmp
sbb
or
mov
cli
push
sbb
negl
or
divb
add
clc
and
cwtl
out
inc
in
jecxz
lret
sbb
jo
ret
lea
int3
icebp
aam
inc
mov
shrb
or
and
aam
push
lahf
scas
flds
daa
jne
mov
cmc
adc
imul
adc
mov
xor
lret
push
pop
popf
xor
push
push
sub
call
pop
adc
or
push
insb
loopne
adc
and
push
movsb
loop
popf
lcall
mov
push
imul
inc
sbb
inc
sbb
push
sub
loop
addl
push
mov
std
and
in
adc
mov
jo
adc
nop
or
out
adc
leave
push
inc
mov
in
pop
pop
jecxz
add
or
mov
outsb
and
test
pop
les
clc
mov
xchg
jle
add
push
in
popf
stos
jle
inc
mov
cmp
and
add
out
lods
push
inc
imul
insb
ljmp
adc
test
fwait
add
fimull
rolb
clc
sti
out
je
jae
fsubrs
mov
ret
shlb
add
mov
pushf
enter
pop
js
stc
mov
fsubr
mov
mov
ret
rclb
push
pop
xorl
clc
test
lds
test
pop
sub
push
add
or
fiadds
sarb
loop
mov
movsb
out
jecxz
dec
mov
add
cmp
subb
or
and
mov
cmpsl
push
lods
push
cmp
ljmp
imul
and
fucomi
scas
fsubl
shlb
lahf
lahf
xchg
dec
ret
lcall
shl
cmp
jmp
cs
ret
shrl
mov
pop
xor
arpl
pop
jge
push
scas
mov
push
faddl
mov
inc
ret
inc
daa
lea
fistps
enter
or
mov
lods
imul
fcoml
insl
outsl
inc
add
cmc
mov
mov
push
sub
push
sbb
sarl
cmp
or
clc
xchg
shl
mov
lds
inc
test
xor
add
sbb
lock
outsb
pop
cmp
pop
sbb
sub
jns
std
adc
repnz
fisubs
cmp
lret
and
add
cmp
mov
cld
sbb
and
cltd
les
xor
arpl
sub
and
mov
sbb
testb
es
pop
adc
push
adc
add
test
push
inc
stc
mov
orl
shlb
or
mov
rcll
mov
fistl
pop
bound
dec
ljmp
stos
and
inc
mov
sub
xlat
jg
into
and
lcall
adc
sub
and
outsb
pop
pop
movb
movsb
cmp
xchg
fs
add
xchg
add
sbb
pushl
ret
mov
std
pop
mov
mov
push
fidivl
adcl
stc
loop
xchg
cmp
aam
add
xchg
lock
popa
shll
addr16
and
test
add
mov
pop
call
cli
js
jno
bound
push
sub
or
cmpsb
aam
mov
into
adc
push
ljmp
data16
addr16
jne
sahf
pusha
loop
ret
fisubrl
xchg
jmp
sahf
mov
mov
xor
push
and
add
push
jbe
ja
or
ja
lcall
call
push
bound
push
insb
jl
mov
ljmp
mov
loopne
call
dec
inc
cmp
daa
add
mov
cmp
fadd
outsb
mov
dec
lock
cli
adc
cltd
cs
test
push
les
int
cmp
or
and
xlat
stc
mov
push
push
dec
push
xchg
pop
sbb
inc
add
inc
xchg
cld
loopne
mov
ljmp
adc
adc
loope
and
popf
jo
ret
mov
dec
cmp
push
test
cmpsb
or
add
out
pop
xor
int
cmp
jg
push
push
jns,pt
inc
cmp
mov
lret
dec
adc
test
inc
jmp
fimuls
adc
aad
stos
xor
dec
sbb
push
push
mov
mov
push
or
popf
inc
sub
mov
dec
cwtl
out
call
or
push
xor
out
mov
dec
pop
add
inc
gs
push
cmp
repnz
imul
int3
gs
push
call
xchg
stos
add
push
cld
dec
or
popa
mov
dec
js
xchg
fstpt
mov
add
cli
or
adc
je
xchg
nop
out
mov
xor
addr16
push
lock
jl
shrl
pusha
pusha
xor
add
shlb
movsb
scas
sub
iret
out
les
lahf
jl
inc
cmp
inc
mov
sti
dec
jecxz
lods
mov
xor
pop
xchg
out
fsubs
mov
inc
std
out
adc
dec
pop
mov
dec
inc
or
pop
clc
hlt
mov
fldt
imul
movsb
cli
cmp
gs
adc
sub
leave
sti
hlt
xor
testb
outsb
call
mov
cmp
cmp
pop
aad
pop
ret
and
or
and
loopne
jno
inc
sti
call
roll
out
loop
or
shrb
aas
mov
push
add
pop
add
mov
insl
ud0
hlt
into
inc
jg
push
cmpb
imul
sub
mov
pop
pop
cwtl
pop
imulb
adcl
jae
shlb
insl
jg
mov
sub
jns
pop
adc
das
lods
mov
out
sbb
pop
xlat
adc
ja
dec
rorl
add
cmc
sub
mov
sbb
xchg
cli
xchg
aaa
mov
push
out
jmp
gs
fcmovnu
adc
mov
icebp
pop
gs
ja
sub
add
mov
ja
and
jmp
add
test
cmc
inc
pop
js
jmp
ss
rorb
fdivr
inc
inc
mov
cmp
mov
mov
fmuls
mov
adc
mov
out
xor
test
xchg
inc
fbstp
mov
into
sbb
or
inc
out
cmp
sub
cli
cs
je
adc
dec
pop
jno
push
xchg
test
mov
add
mov
push
dec
cmp
out
popa
jp
push
nop
lcall
xchg
push
es
stos
fbld
mov
call
mov
aam
push
int
rcrb
sti
adc
clc
test
movsb
or
jge
stos
lret
mov
cmp
lcall
jne
xchg
sbb
mov
and
sub
adc
add
shlb
pop
pop
imul
int3
test
ret
in
xchg
mov
mov
push
popa
into
push
inc
dec
pop
jno
scas
inc
xchg
dec
sbb
cmpsb
les
test
dec
add
lods
dec
in
push
and
mov
in
faddl
jo
scas
xchg
pop
loope
jae
inc
repz
mov
adc
jp
push
pop
outsl
cmp
movl
jmp
shlb
addr16
mov
add
mov
jno
mov
jle
add
sbb
adc
sbb
sbb
inc
sbb
push
cld
and
add
shr
test
cmp
adcb
call
inc
test
shlb
fsubr
fs
lods
mov
in
xchg
push
sbb
ss
xchg
cld
and
mov
cmp
std
in
call
and
sar
add
mov
lds
into
dec
adc
mov
out
inc
daa
out
lahf
inc
rolb
and
mov
fdivs
movb
dec
aas
std
and
push
and
das
xchg
jecxz
add
cmp
mov
fiaddl
data16
or
inc
std
icebp
addb
icebp
out
xor
icebp
mov
sbb
jno
fcmovbe
fcmovu
or
jno
insb
jl
rolb
jl
mov
inc
pop
pop
lret
xor
inc
or
pop
je
das
scas
push
into
or
xor
sbb
stos
dec
mov
stc
loop
inc
ds
lods
pop
or
push
xchg
mov
mov
mov
jo
test
es
mov
das
js
sbb
push
jb
in
mov
mov
xchg
fmuls
aad
scas
mov
dec
xor
cmc
sub
loopne
lcall
sub
movsb
leave
and
test
cli
jge
mov
repnz
test
nop
lea
stos
inc
inc
mov
push
ja
hlt
fnstenv
out
dec
sbb
inc
shrb
mov
sbb
addl
lods
test
enter
adc
mov
addl
xlat
pusha
scas
push
daa
and
and
js
filds
cmc
sbbb
mov
inc
cmp
mov
sub
push
pop
xchg
fistpll
adc
xchg
add
pop
mov
and
and
lods
add
dec
inc
jns
or
and
decl
lea
add
pop
or
mov
xor
adc
test
mov
neg
stos
loope
inc
int3
in
fildl
loope
bound
imul
sub
sub
gs
jle
pushl
pop
cwtl
les
negb
xchg
ss
inc
dec
enter
jmp
adc
cwtl
xchg
outsl
jnp
add
xchg
popa
cmp
cmp
or
aam
dec
mov
pop
or
leave
push
sbb
fisubs
fsubrl
sub
dec
and
and
popf
enter
jmp
call
lds
cmp
push
sbb
xchg
cmp
jp
cmpsl
cs
leave
mov
loop
jecxz
mov
mov
mov
testb
aaa
test
pop
rclb
fwait
int
ja
cli
adc
scas
fmull
in
mov
mov
and
dec
push
pop
cmp
xor
cmp
adc
decl
loopne
aam
pop
inc
pushf
repnz
sub
jmp
rol
imul
inc
ljmp
imul
or
test
sub
dec
cmp
pop
mov
add
or
xlat
notb
cmpsb
rcrb
bound
into
cmpsb
lcall
adc
imul
repz
push
or
push
hlt
shl
mov
jb
jmp
dec
int
lahf
ljmp
add
and
dec
xchg
pop
inc
ret
push
addb
push
cld
ljmp
int
scas
cwtl
and
dec
cwtl
outsl
cmc
and
jbe
push
in
inc
sbb
adc
mov
call
ja
sarb
pushf
lods
aaa
mov
mov
inc
clc
sub
imulb
jl
jno
loopne
pop
cmp
shlb
mov
and
cmc
cmp
cwtl
sahf
jl
push
insb
mov
cli
dec
add
jmp
sti
mov
push
xor
push
lret
pop
sbb
adc
jae
dec
or
bound
sahf
or
inc
fistpl
inc
dec
sub
dec
cmp
js
and
inc
ficoms
test
jg
popa
aam
push
cmovae
sbb
movsl
hlt
dec
aas
dec
push
xchg
dec
fdivrl
movsl
out
xchg
sbbb
mov
adc
js
xchg
push
sti
jnp
add
vpsrlw
loopne
pop
test
stc
je
push
add
es
fiaddl
bound
push
pushf
rclb
push
sbb
inc
push
repz
and
ljmp
popf
insl
and
aam
aas
jge
mov
ret
icebp
mov
xchg
mov
gs
cmpsb
add
xchg
jge
daa
loop
add
fistl
pop
js
mov
mov
mov
nop
mov
add
dec
test
push
or
aaa
jb
shll
xchg
and
or
mov
lds
inc
enter
imul
cs
cmp
sub
add
jge
ljmp
ljmp
mov
add
mov
call
orb
sbb
out
mov
popa
insb
sub
movsb
insl
dec
loopne
sub
sub
lret
xchg
mov
aaa
push
std
es
dec
mov
push
jbe
clc
shlb
jge
aam
xor
jp
jmp
addb
jle
add
sub
out
shrb
mov
adc
push
icebp
mov
push
ret
or
pusha
pusha
cmpsl
xor
jne
pushl
dec
int
dec
xor
xchg
ljmp
cltd
cli
cld
call
lock
loope
or
jg
popl
movb
test
xor
xchg
std
imul
adc
sub
outsl
fldcw
jbe
mov
pop
dec
clc
aaa
les
arpl
or
mov
mov
fsub
in
add
mov
push
xchg
test
cmp
jg
stos
js
cmp
xchg
fbld
xor
inc
hlt
and
je
rclb
pusha
xchg
out
push
rorl
shll
sub
fiadds
pop
popa
or
push
adc
dec
popa
xchg
lcall
scas
dec
cmp
ret
pushf
push
std
inc
leave
mov
push
xchg
rcrl
add
inc
inc
add
push
push
adc
dec
inc
aas
adc
outsb
adc
enter
in
out
dec
lods
inc
mov
pop
adc
inc
push
mov
ljmp
lahf
sub
mov
mov
sbb
outsb
data16
mov
les
jmp
gs
add
hlt
dec
push
clc
ljmp
sbb
negb
cmp
sub
cmp
pop
les
inc
sbb
dec
add
in
jecxz
sbb
mov
mov
sub
mov
sub
mov
idivl
aam
fldenv
push
mov
pusha
lret
push
imul
hlt
mov
pusha
inc
popa
insl
bound
cmp
sbb
xor
push
sar
scas
ret
push
adc
and
inc
pop
push
inc
ljmp
sbb
jmp
or
stos
or
mov
pop
ds
push
jle
sbb
and
xorb
cmp
push
jmp
imul
mov
sbb
fcompl
adc
inc
dec
rorb
jle
mov
ja
mov
dec
xor
dec
cmp
adc
nop
lahf
aaa
or
es
enter
aas
arpl
cmpsb
mov
mov
sbb
shrl
sub
push
dec
scas
cmp
sub
add
lods
lods
mov
lahf
and
scas
les
add
clc
test
add
cs
xchg
fsubrp
xchg
sub
aaa
add
shlb
imul
stos
stos
int
enter
insl
pop
or
scas
hlt
cmp
imul
inc
insl
outsb
xor
pop
fisubrl
roll
jge
ljmp
loop
aad
jecxz
test
into
aas
data16
cmp
or
pop
cmc
outsl
push
xor
mov
outsb
cmp
jge
xchg
push
mov
jmp
std
loopne
add
or
sbb
jecxz
ja
add
inc
call
test
pop
es
insl
push
jmp
cmpsl
test
in
adc
aad
fs
add
dec
lea
das
pop
push
cmp
push
leave
es
in
add
roll
mov
mov
jmp
insl
jo
inc
push
fnsave
dec
popf
rolb
mov
jg
xor
loop
test
dec
mov
mov
add
lret
xchg
pop
lcall
pop
sub
inc
in
and
imul
mov
push
fidivrl
std
subl
les
aad
je
das
add
sub
dec
sub
rcrl
sbb
mov
xchg
jle
andl
mov
mov
push
pop
pop
sub
jle
adc
push
aam
add
sub
sbb
xchg
inc
xchg
add
mov
push
xor
pop
mov
mov
in
lcall
dec
jg
imulb
dec
push
outsb
data16
movsb
lds
cmp
or
pop
insl
xor
and
jl
lock
jl
in
add
push
adcl
push
repnz
or
jno
mov
js
mov
imul
add
push
mov
in
or
cmp
pop
dec
mov
push
aam
scas
ret
inc
cmp
cmpsb
leave
test
add
push
rorl
pop
or
xor
xchg
add
lods
ljmp
mov
movsb
mov
lcall
push
inc
mov
adc
mov
push
je
add
ss
jo
ss
in
xor
pop
mov
aaa
movsb
and
mov
ss
sub
fldt
rclb
pop
sbb
rcrl
sub
jb
mov
subb
inc
lahf
jl
add
int3
pushf
mov
mov
xchg
mov
or
push
aam
sbb
push
jp
sub
sub
idiv
jnp
xchg
mov
inc
les
movb
push
pop
mov
jmp
inc
mov
movsb
ret
xchg
xor
daa
rorb
jg
ror
sbb
call
or
push
cmp
ljmp
xchg
mov
or
mov
loop
icebp
test
clc
jecxz
ret
rol
insb
adc
fadds
jp
stos
sub
insb
loopne
xor
inc
cmp
or
ret
icebp
and
mov
add
jl
sbb
js
push
pop
mov
loop
fldl
ss
adc
dec
nop
cli
mov
sar
or
and
xor
adc
hlt
hlt
and
in
in
mov
call
or
inc
or
movsb
adc
mov
xchg
xchg
ret
adc
js
xorl
xchg
fcmovnb
mov
inc
adc
lock
push
push
dec
pushf
jecxz
pusha
movsl
ss
sti
rol
fiaddl
ljmp
push
mov
imulw
sub
andl
push
pop
movsb
push
pop
mov
xor
lock
stos
mov
push
pusha
pushf
cld
push
add
js
fnsave
fildl
xor
mov
test
jo
cltd
sub
adc
jbe
ret
fimull
js
cld
inc
sbbb
push
lds
cmp
mov
adc
cwtl
enter
in
call
cmpsb
sub
pop
push
shll
jne
jmp
add
lods
dec
sub
pop
push
cmp
fmul
lret
mov
dec
xchg
testb
movsl
jns
add
jge
and
outsl
xor
cs
lret
test
shrl
pop
dec
lcall
mov
sbb
inc
mov
test
sbb
mov
xor
stos
or
mov
imul
push
or
push
ljmp
stos
mov
jmp
notb
dec
ret
shlb
adc
or
push
sbb
insl
rcrb
mov
in
add
bound
shlb
outsw
daa
mov
inc
testb
test
mov
loopne
ja
js
mov
add
jnp
xchg
xchg
andl
mov
popf
fucomip
fwait
clc
fdivs
sub
aam
cmp
cmc
or
pop
or
mov
fldt
out
iret
sahf
mov
xchg
add
dec
lret
pop
leave
adc
cmp
inc
sahf
outsb
mov
loope
and
int3
push
les
mov
std
aam
inc
int
sar
add
push
dec
xor
insb
ljmp
int3
out
decl
push
test
fcoml
pop
xorb
sub
push
divb
mov
pop
std
dec
jg
inc
push
and
jo
xchg
push
inc
xchg
inc
sub
sbbl
lds
or
int3
adcl
or
cwtl
jge
push
push
je
test
sub
pop
test
mov
adcl
pop
fwait
mov
lock
jbe
and
adc
xchg
fsubr
loope
nop
push
mov
stos
adc
data16
push
sbb
inc
mov
aaa
pop
rorb
sahf
push
mov
push
pop
ret
dec
sub
jbe
enter
dec
xor
jns
mov
mov
ficomps
adc
lods
ss
dec
jecxz
xchg
adc
shl
add
add
enter
mov
ret
mov
mov
mov
dec
sub
cld
mov
lcall
and
movsb
and
cmp
mov
loop
pop
xchg
fs
xor
mov
dec
pop
fwait
mov
jp
inc
mov
movb
push
or
or
stos
push
or
adc
adc
icebp
sbb
xor
lcall
fldcw
hlt
test
jbe
and
xor
pop
cmpsb
add
or
ret
js
clc
mov
aad
das
scas
dec
mulb
add
fdivp
add
mov
jl
sub
inc
xor
addr16
js
and
in
pop
in
bound
and
nop
and
in
sub
mov
push
mov
xor
popa
mov
bnd
pop
xchg
fwait
loopne
imul
add
sbb
fiadds
scas
inc
fwait
sarb
inc
imulb
cmp
imul
negb
loop,pt
or
dec
and
push
test
pop
in
add
loop
arpl
incl
jle
test
test
ds
adc
mov
and
das
sbb
jb
arpl
shrl
call
xor
push
outsl
cmp
mov
out
nop
mov
pop
je
movsl
push
pusha
std
inc
pop
xorb
push
inc
mov
lods
and
or
stos
xchg
rol
lds
sar
lock
add
pop
cmpsb
test
fistps
adc
push
pop
ffreep
mov
jmp
nop
jo
push
repz
jle
fs
cmp
fwait
les
sbb
jb
xchg
outsl
jo
das
testb
or
jle
popf
or
or
add
and
sbb
xor
mov
mov
add
sti
fcomps
inc
xchg
ds
inc
jmp
nop
push
sbb
fidivl
xchg
or
das
pop
mov
jne
mov
jo
cmpb
js
mov
ss
dec
in
dec
sahf
xor
adc
lods
aaa
fistl
add
outsb
in
out
lds
out
push
adc
push
ret
and
js
cs
inc
ffreep
in
and
mull
cmpb
shll
fwait
mov
xchg
popl
lahf
xchg
push
xor
mov
fldl
sub
xor
jae
inc
mov
ret
adc
mov
outsl
and
scas
xor
add
out
mov
mov
xlat
or
push
nop
mov
test
pop
rol
dec
test
loope
xchg
insb
imul
or
fcomps
ror
pop
cmc
pop
pusha
out
out
and
aam
repnz
insb
mov
jg
rcrb
push
int3
pop
mov
jmp
adc
hlt
adc
cmpb
adc
or
mov
stos
loopne
mov
fsubrl
mov
ljmp
out
mov
in
xor
mov
mov
pop
ss
or
ret
mov
add
lds
xchg
gs
sub
push
aas
movsb
mov
lock
xor
loopne
add
jae
lods
dec
ja
push
sbb
adc
sbb
cli
popf
jle
fimull
in
popl
push
hlt
loopne
xchg
mov
push
insl
outsl
mov
pusha
and
shrb
ret
lock
mov
test
rol
sbb
mov
jb
cmp
js
ret
push
jo
cmc
test
push
lea
in
mov
scas
and
sbb
mov
fidivl
mov
jne
ret
inc
imul
add
xor
jge
rclb
mov
jb
fcmovb
adc
and
mov
cmp
push
mov
inc
sahf
adc
sbb
mov
jle
adc
aam
add
push
in
lcall
nop
xchg
bound
mov
push
lcall
nop
push
cltd
ret
pop
outsl
insb
in
and
pop
pop
ljmp
push
cld
out
icebp
lea
mov
movl
loopne
xchg
nop
js
ss
lock
cld
dec
push
test
mov
test
mov
sub
push
push
mov
pop
fnstsw
or
sbb
aaa
aas
mov
fnsave
dec
dec
pusha
insl
jl
dec
adc
pop
dec
fsubrl
inc
add
popa
pop
les
loop
xor
decb
push
std
mov
scas
dec
and
mov
dec
dec
ljmp
mov
iret
das
mov
jecxz
imul
sbb
cwtl
fsubrl
adc
js
nop
lea
daa
jo
iret
add
rorl
xor
cmp
scas
imul
sbb
mov
cmp
add
xchg
cltd
hlt
push
or
sbb
mov
fwait
mov
divl
cwtl
subb
stos
jno
cmc
loop
je
inc
paddw
fsts
mov
filds
clc
pushf
test
dec
sub
icebp
bound
push
out
inc
test
and
mov
xlat
mov
jp
aad
sbb
or
jb
sbb
sbb
push
sbb
xor
pusha
rcl
push
out
jno
inc
repnz
insb
lcall
xor
xchg
fidivs
lret
dec
movsb
lea
xchg
clc
jmp
jo
cli
test
inc
imulb
jo
xorl
loopne
sub
cmp
sub
xor
jmp
dec
add
jmp
arpl
jmp
out
inc
insl
jg
push
or
out
mov
test
add
xchg
mov
lock
jne
add
in
stos
push
aam
in
nop
aas
pop
and
cmp
or
push
ret
pop
pop
nop
jle
movsb
push
inc
jne
je
in
insl
jl
fdivrl
fildl
outsb
insb
decl
xor
out
stos
pop
add
faddp
rol
sarl
cmp
popa
and
jno
push
out
xchg
lret
es
scas
test
add
cmpsb
addr16
jecxz
and
aas
cld
mov
cli
dec
pop
aam
lds
and
or
das
mov
mov
dec
imul
loopne
pop
jo
jno
hlt
mov
leave
cli
xchg
mov
adc
addb
add
shrl
cmp
push
mov
pop
lahf
lret
ficoml
pop
pop
cmc
pusha
and
sarl
mov
insl
add
ret
in
cmp
popa
xchg
add
dec
add
dec
neg
mov
sbb
bound
adc
rcrb
pushf
mov
cmpsl
dec
in
or
and
sub
mov
divb
mov
shrl
mov
add
and
icebp
or
pusha
push
int3
mov
mov
cmp
aam
divl
push
rorl
in
push
rcl
fdiv
dec
or
xchg
add
jge
loop
shll
pop
sub
sub
inc
sub
pop
jmp
sub
lods
je
pop
jno
or
cmpb
jne
outsb
movsb
jb
lret
and
mov
in
insl
dec
out
mov
fs
add
outsl
popl
or
mov
mov
push
lock
je
xchg
dec
ss
int3
ret
rcrl
sub
inc
mov
hlt
cmpsb
cmp
cmpsl
ss
in
jbe
dec
outsl
insl
gs
loopne
pop
xlat
mov
mov
push
jecxz
adc
shlb
dec
ja
add
or
sub
dec
data16
xchg
pop
cltd
int3
rorl
dec
sbb
aam
nop
addb
aaa
int3
cmc
add
leave
fidivrs
pop
mov
sub
sbb
cmp
add
push
inc
outsl
dec
stos
push
imul
push
mov
lods
dec
xor
pop
or
enter
in
mov
pusha
or
cmp
mov
push
testl
nop
xor
in
call
fwait
and
sub
sbb
mov
cs
test
sbbb
rorb
andb
sarb
xchg
adc
pushf
loope
loope
outsb
push
pop
inc
cmp
and
xchg
fimuls
mov
sbb
inc
jnp
and
sbb
fadds
dec
push
ds
pop
adc
mov
call
xchg
repz
lods
inc
fidivl
mov
js
sahf
add
lea
or
int
mov
lcall
mov
mov
dec
sbb
cld
popf
and
call
ss
adcb
lahf
xor
dec
lods
dec
sbb
fidivrs
pop
aam
jmp
or
fs
loop
sbb
xchg
dec
jae
fildl
loope
dec
push
dec
cwtl
gs
push
pop
rol
fwait
and
ljmpw
int3
pop
xlat
mov
test
inc
hlt
sbbb
xor
jne
sbb
jle
mov
and
dec
push
cltd
mov
das
movsb
xchg
inc
bound
add
insb
sub
sub
scas
inc
clc
xor
dec
ret
scas
push
cli
pop
push
or
cld
je
inc
mov
push
lahf
ret
jp
cmp
mov
ljmp
insb
xchg
mov
hlt
mov
jmp
sti
lock
adc
repnz
sbb
cltd
mov
jl
insl
loopne
jmp
stc
pop
clc
addb
dec
ficompl
aaa
fwait
mov
std
test
pop
add
pop
aas
inc
arpl
pop
rclb
sahf
je
and
cmpsl
in
sbb
sbb
add
jns
pop
mov
loopne
pop
dec
cwtl
sub
dec
and
ret
add
loope
out
nop
xor
jge
inc
test
fsubrs
mov
xchg
test
cs
outsl
out
xor
xor
pop
ja
je
insb
inc
cmp
in
lock
mov
cmp
fsub
fbld
xor
jl
mov
push
lock
jge
stos
int3
outsl
inc
je
aaa
mov
push
mov
dec
lds
sbb
adc
cld
mov
mov
push
sti
cs
std
sahf
test
prefetcht2
repnz
pushf
jbe
xchg
mov
inc
inc
gs
outsl
out
mov
out
test
cmp
add
outsl
mov
pop
jo
mov
mov
das
or
jmp
adc
jmp
sbb
jmp
pop
data16
loopne
push
fisubrl
mov
faddl
lcall
lret
mov
sbb
test
sub
push
xchg
cmp
addb
dec
lods
push
nop
xor
out
lock
fidivrl
std
fs
lods
xchg
adc
loopne
mov
cmp
addl
pop
pop
and
adc
std
test
jnp
cmp
sarl
fcmovb
iret
fs
sarb
int
or
push
jecxz
cmc
pop
adc
inc
fildl
clc
push
or
xchg
stos
and
mov
push
lock
mov
in
pop
add
je
xchg
hlt
cltd
call
xchg
mov
data16
and
adc
and
add
fsubl
dec
xor
hlt
sbb
mov
or
mov
cmp
xlat
push
mov
fbld
lock
mov
mov
lock
out
or
mov
pop
aam
inc
pop
mov
or
cmp
pcmpeqd
das
cmp
push
das
pushl
lods
push
aas
jns
push
jmp
shlb
adc
div
int3
xor
jmp
leave
add
cmc
cmp
iret
cmp
or
lahf
test
int
cld
or
sti
xchg
pop
push
push
push
stos
rcll
gs
jne
dec
jb
int3
sub
jge
pushf
les
jmp
add
fstl
adc
cmp
rcr
fwait
pop
adc
xor
xorb
idivl
add
adcb
fs
mov
cmp
dec
jb
in
adc
and
mov
dec
lcall
sahf
mov
inc
imul
roll
sbb
filds
sarb
cltd
ds
dec
cmp
filds
call
mov
ret
or
sub
jle
add
lret
nop
push
fcoms
and
xchg
or
push
pop
aam
mov
pop
ds
push
sbb
inc
adc
or
cmpsb
add
mov
adc
aad
cmp
loope
cmp
jb
out
jns
clc
push
add
and
inc
sbb
int
mov
test
daa
bound
in
add
xor
lods
adc
jbe
sub
or
fcomps
sbb
sbb
je
sahf
pushf
std
jne
and
jo
push
ds
fsubl
cld
pop
add
cltd
dec
dec
or
mov
push
movsb
dec
int3
pop
jae
popa
popa
mov
sbbl
xor
or
push
cmp
push
movsb
nop
dec
mov
into
or
addb
aas
loop
add
mov
data16
mov
sbbb
je
call
jmp
aaa
jo
js
loope
pop
pop
es
rclb
mov
fs
push
mov
jbe
cwtl
xchg
fldz
loope
adc
push
int
push
xchg
cmp
adc
or
movsb
mov
in
mov
or
mov
sub
cwtl
rcrl
cmc
ret
inc
dec
push
mov
mov
adc
sbb
loopne
in
addr16
into
lret
loop
mov
lahf
insl
cmp
js
pop
js
sbb
pop
adc
dec
fadd
repnz
idivl
movsb
stos
or
xchg
stc
dec
inc
gs
push
stc
mov
sub
xchg
push
lcall
daa
mov
add
sbb
aam
sub
push
cmp
mov
out
mov
adc
sti
jp
sahf
dec
add
sub
das
jo
xchg
mov
inc
setb
push
fisttps
push
and
dec
or
stos
scas
xchg
mov
jle
sbb
imul
movsb
mov
insb
pushf
popa
pop
shll
cmp
jge
jo
adc
mov
xor
add
add
in
aas
sti
mov
inc
les
inc
divb
aas
push
movsb
or
imul
jo
xchg
out
inc
decl
mov
outsb
ds
lret
aam
add
jl
std
sbb
pop
or
js
aaa
push
or
cmpsb
incl
push
mov
sbb
test
cld
loope
pop
in
loope
dec
xor
and
dec
push
cmpsl
roll
xor
movsl
push
add
add
jbe
inc
imul
xor
loope
add
and
fs
push
mov
xchg
sar
push
xlat
push
icebp
jecxz
fs
lret
inc
push
subl
scas
xchg
loopne
sbb
push
int
xor
out
or
outsl
scas
insl
mov
dec
or
fsubrs
push
pop
and
rcl
or
mov
shl
sbb
outsb
pop
pop
pop
cmpb
cs
add
shr
dec
jbe
jae
ret
sbb
jp
mov
pop
jno
jbe
push
jp
nop
lret
jo
xorl
ss
test
int3
inc
pop
pop
jp
mov
popa
inc
loopne
xor
sti
out
pop
xchg
popf
push
mov
dec
xchg
add
insl
ss
shrb
cli
mov
or
xchg
dec
pop
mov
add
and
dec
push
incl
and
dec
js
addl
cmp
inc
mov
mov
mov
jne
orl
xchg
jecxz
pop
stos
mov
pop
push
mov
pop
cmp
fucom
push
push
xorl
imul
test
mov
jo
stos
fcmovbe
es
xor
dec
jge
lock
push
scas
fcompl
push
push
mov
enter
lea
out
mov
mov
setle
mov
jo
mov
push
inc
sahf
and
or
mov
mov
loop
es
les
jmp
inc
add
xchg
lock
mov
and
cld
imul
cli
mov
pop
fsub
sub
rclb
jno
xor
lcall
xchg
jge
cmp
loop
hlt
push
add
push
cltd
pop
addb
sbb
ds
sbb
xor
fdivs
hlt
sbbb
in
inc
call
jp
jne
sahf
sub
fdivrs
lcall
loopne
dec
or
out
bound
adc
and
adc
mov
ret
mov
out
mov
lock
shll
mov
or
push
movsb
add
aad
add
xor
dec
mov
fldt
fsubrs
adc
negb
test
push
xor
loop
push
insb
lcall
js
and
in
cmp
in
je
dec
mov
loope
ljmp
das
cwtl
pop
loope
and
adc
stos
cli
adc
jno
data16
aam
pop
or
sahf
push
jmp
inc
ds
push
ffree
leave
enter
jnp
sti
push
inc
pop
rclb
out
stos
test
popa
jb
add
lock
lods
sbb
insl
cmc
add
cs
add
mov
sub
mov
inc
pop
test
push
es
or
push
sarl
push
inc
push
filds
data16
in
fisttps
mov
pop
sbb
pop
loopne
push
jno
and
mov
inc
icebp
inc
loope
mov
ret
stos
lock
pop
cmpsb
mov
fs
dec
push
and
push
sti
and
mov
fld
scas
popl
fidivs
popf
hlt
imul
fsubr
add
cmp
sub
hlt
push
inc
jnp
mov
loopne
loop
sub
push
in
je
or
pop
lock
pop
scas
jg
add
fsubrl
jmp
sub
loopne
push
popa
xchg
mov
or
or
mov
mov
repnz
pop
movsb
push
mov
clc
je
and
das
adc
add
movsb
lock
and
lock
jne
mov
aad
dec
inc
call
sahf
pop
or
hlt
sbb
mov
dec
push
add
mov
cs
inc
xchg
pop
shlb
gs
pushl
push
pop
sbb
fs
dec
jae
sti
scas
push
add
insl
paddsb
adc
push
or
sub
mov
sbb
xchg
sub
notl
subl
aam
mov
sbbl
pusha
sub
sub
aaa
mov
stc
sahf
es
arpl
mov
jle
outsl
mov
mov
sti
xor
and
sub
add
incb
out
jne
cs
int3
inc
add
mov
or
stos
dec
in
mov
mov
insl
js
pusha
lret
and
mov
idivb
pop
out
xchg
insb
push
inc
ret
add
das
push
das
push
les
mov
icebp
pop
bound
lret
in
shrb
push
mov
popa
mov
std
nop
add
test
in
and
out
or
test
sub
outsl
cmp
push
lret
xchg
std
inc
ja
aas
insb
and
sbb
mov
push
xchg
or
add
push
adc
xchg
jle
add
lret
jle
gs
mov
or
sbb
mov
out
sub
ds
add
in
orb
push
xchg
cltd
movsb
mov
jmp
das
test
std
icebp
push
outsb
add
shll
sbb
jb
mov
push
push
and
xchg
mov
stos
mov
dec
pop
shr
mov
insl
push
sbb
add
jno
loopne
xchg
push
add
cmc
pop
mov
sbb
arpl
outsl
nop
fldenv
insb
loope
sbb
lea
mov
adc
sub
mov
mov
popa
xchg
pop
pusha
lahf
mov
dec
dec
sbb
push
cmp
orb
adc
imul
shlb
jnp
sahf
mov
leave
and
and
fcomip
and
mov
add
jb
xchg
outsl
add
mov
call
insl
mov
sbb
rorb
inc
cld
xchg
add
add
xorb
cli
shlb
mov
icebp
mov
rolb
pop
std
lock
mov
or
xor
or
or
leave
nop
adc
sub
inc
pop
adc
sbb
fcomi
cmp
inc
in
inc
and
inc
mov
repz
imul
add
push
push
pop
cltd
inc
or
xchg
jno
stos
mov
sbb
inc
jnp
int
sbb
xor
mov
popa
push
fcompl
dec
lea
aam
int3
lea
sarb
and
test
sbb
lea
pop
add
pop
fsubl
add
shll
jecxz
mov
gs
lds
sub
movsl
inc
mov
loope
and
or
sbb
adc
sbb
jo
push
cwtl
cwtl
cmp
mov
inc
sbb
mov
push
iret
pop
arpl
pop
jmp
adc
jmp
je
adc
inc
movsl
add
in
cmp
jmp
jo
add
shrl
jecxz
inc
div
dec
adc
push
test
sbb
or
shrb
mov
xor
or
movsl
lcall
lahf
adc
pop
sub
pop
and
mov
and
shl
movsl
cmpsl
pop
inc
gs
cmp
pop
popa
rcr
ret
ljmp
movsb
jecxz
leave
lods
or
adc
jbe
cmp
sbb
xor
std
lcall
pop
cmp
sub
adc
mov
imul
lcall
add
imul
dec
cli
push
lds
lock
mov
inc
dec
jno
int
jl
js
es
lods
mov
sub
insl
ret
mov
fidivrs
push
lock
add
fldcw
cmp
pop
js
je
mov
xchg
add
bound
pop
loop
ss
movsl
imul
ljmp
js
xlat
or
xor
mov
dec
mov
stos
pop
xchg
aad
test
mov
cmpsb
xchg
add
outsl
mov
iret
mov
mov
test
add
sbb
imul
jns
dec
call
out
xor
mov
out
cmpsb
addl
or
sbb
out
jmp
and
xchg
hlt
out
rcrb
lds
rclb
mov
xlat
mov
adc
shl
testl
sbb
add
push
sub
mov
adc
xchg
mov
dec
sbb
xor
repz
lock
clc
xor
cltd
add
in
push
cwtl
mov
push
test
cmp
inc
fs
push
mov
stos
repz
hlt
dec
add
dec
daa
cmp
ja
sbb
adc
add
in
jns
ja
jne
and
aam
mov
data16
pop
mov
pop
test
faddl
imul
bound
mov
ret
dec
dec
push
push
cmp
inc
and
add
out
pop
lods
addl
in
dec
jb
fcoml
adcl
subb
xor
add
lock
leave
int3
inc
or
jo
stos
sub
xor
outsl
enter
xchg
pop
inc
jb
pop
mov
or
adc
mov
orl
cmpsb
add
dec
out
lds
nop
and
add
sub
add
jo
xchg
jecxz
add
nop
and
xchg
cltd
loopne
jnp
lret
aad
inc
and
push
or
fimuls
pop
scas
xchg
pop
mov
xor
lea
divl
jne
xor
lret
ds
mov
lock
popa
sarl
movsl
mov
ds
jo
imul
add
jno
icebp
push
imul
push
adc
add
shlb
xchg
and
aad
adc
cld
fwait
pop
loopne
sub
loop
movsb
and
push
xchg
push
ret
sbb
pusha
cmpsb
cmp
iret
and
mov
test
loop
scas
xor
sub
stos
int
mov
jp
cs
jb
mov
jne
jne
pop
xchg
mov
rorl
and
imul
add
mov
test
enter
add
xor
popa
inc
adc
enter
lea
loope
add
lret
in
xor
inc
sbb
xchg
pop
mov
fadd
add
or
loopne
pusha
sbb
imul
fildl
dec
xchg
dec
cwtl
fdivs
cmp
push
nop
insl
mov
div
rcll
xchg
loop
popa
fnsave
fmul
dec
jmp
xchg
push
in
mov
ss
std
clc
into
scas
dec
push
sub
jbe
mov
sbb
cmp
xchg
xor
dec
and
pop
lahf
jb
mov
add
cmp
pop
pop
es
andl
dec
or
mov
into
xchg
push
xchg
mov
cmpl
out
outsl
jno
fsubr
fbld
int
popl
sub
xchg
xchg
das
adc
in
aam
rcl
stos
pop
fcomps
and
sub
dec
xlat
repnz
lret
mov
call
mov
push
pop
loopne
pop
jne
and
add
cmp
adcl
aam
test
xchg
adc
fidivl
pop
mov
jno
stc
into
xor
add
jecxz
je
jl
test
mov
pop
pop
or
mov
mov
cwtl
dec
sbb
sub
xchg
js
mov
and
dec
cwtl
or
sub
jle
pop
das
xor
mull
jae
fisttps
jg
cmpsl
xchg
mov
sbb
test
mov
fcoml
out
loopne
add
scas
mov
aam
push
mov
popa
jo
mov
push
adcb
or
packssdw
addr16
mov
dec
fnstcw
cmp
nopl
push
inc
in
inc
mov
pop
pusha
loopne
and
sub
test
xchg
shrb
fldcw
fsubrp
ficoml
add
dec
clc
push
push
jo
cmp
cmp
sbb
add
add
call
push
sbb
sbb
lret
icebp
cwtl
inc
movsb
mov
adc
fcompl
mov
outsl
mov
sub
cmp
or
or
jno
fwait
outsl
les
rorl
inc
xchg
rcll
in
fwait
in
push
imul
jne
es
xorl
lcall
ja
insb
adc
outsb
cmp
mov
dec
inc
or
out
out
daa
pop
dec
cmp
movsl
mov
mov
lea
or
sub
popa
in
dec
out
inc
lds
pop
mov
lcall
xlat
loope
mov
shlb
dec
inc
push
ret
stos
xor
jecxz
pop
pop
push
sub
add
outsb
popl
popf
mov
xchg
dec
les
and
push
jnp
pop
jo
imul
cmpsl
pop
nop
mov
and
fdivr
mov
push
data16
in
clc
mov
cmpsl
pop
dec
inc
lds
popa
push
sub
gs
mov
enter
sub
hlt
insb
test
insb
or
adc
mov
adc
and
mov
mov
mov
jl
pop
cmc
inc
into
sbb
scas
sti
and
inc
daa
pusha
dec
call
jge
pushf
pop
test
rorb
cmp
nop
mov
lods
inc
mov
mov
sbb
scas
mov
cs
int
lret
mov
fidivs
fmull
xor
mov
mov
xor
sub
mov
push
int3
jno
repz
push
ret
mov
mov
je
push
xor
fsubrl
gs
add
push
out
adc
xchg
out
and
jbe
jns
xchg
or
repnz
add
movq
jl
dec
shll
inc
enter
lret
fists
dec
push
movsl
push
pop
ljmp
notl
or
dec
inc
lahf
sub
aam
hlt
dec
imul
push
mov
sub
mov
int3
jno
movsl
push
sbb
inc
dec
fsubrp
test
inc
icebp
jle
mov
push
add
jmp
mov
or
outsb
leave
jbe
mov
xchg
lods
outsl
mov
test
insb
xor
inc
cmp
aam
mov
add
push
inc
push
lahf
cmp
hlt
jo
ljmp
pop
sti
dec
fnstsw
xor
jne
adc
cmpsb
or
xchg
xchg
stos
mov
imul
sbb
add
gs
aaa
test
leave
out
xchg
push
shll
movsl
leave
pop
push
adc
test
pop
push
das
add
push
xor
imul
xlat
xchg
andb
pusha
adc
xor
out
jns
lods
lds
sti
ljmp
push
jb
or
mov
or
sub
add
fimuls
fists
cmp
mov
ljmp
push
sbb
add
mov
add
outsl
mov
jge
push
jmp
popf
test
add
jl
sub
mov
dec
cmc
inc
movsb
jmp
mov
sbb
sub
add
dec
inc
outsl
iret
sbb
pop
cmp
push
call
rol
sbb
pop
inc
daa
mov
leave
push
addr16
pop
pushf
aas
inc
pop
xchg
jo
test
shll
pop
push
fiaddl
mov
mov
dec
xor
lods
xlat
sbbl
fistps
sbb
add
jno
push
mov
sub
repz
push
sbb
mov
int
and
pop
push
add
jle
adc
pop
add
inc
sub
jo
xchg
outsl
test
push
pop
pusha
fstpl
sub
xchg
cmp
loope
hlt
lret
popa
sbb
cmp
ret
pop
sbb
lea
xchg
push
sbb
hlt
and
pop
faddp
mov
add
sbb
cmp
repz
orb
ficoms
push
jg
adc
pop
sbb
push
mov
adcl
cmp
mov
aam
inc
jbe
ljmp
mov
jb
xor
inc
loopne
incl
in
add
incl
mov
aas
in
fstl
into
adc
mulb
xor
sbb
adc
mov
mov
xchg
hlt
and
leave
dec
fsubs
add
rol
enter
outsb
push
or
cld
mov
js
ret
shll
push
push
test
dec
dec
loope
xlat
xchg
mov
pop
shll
out
repnz
ret
inc
xchg
mov
mov
add
mov
xchg
xchg
sub
fisttps
xor
in
mov
jle
cltd
sbb
push
and
cwtl
mov
cmp
or
push
sarl
decl
add
ja
faddl
mulb
jmp
lods
add
mov
lea
stos
mov
cmc
and
mov
ja
ljmp
sbb
jmp
js
dec
push
in
push
pop
push
xchg
pusha
xchg
aad
push
sub
pop
nop
fnstcw
mov
push
xor
out
hlt
mov
js
add
push
pop
sub
fadds
mov
roll
and
jl
scas
call
add
roll
xchg
or
fadds
lahf
push
xor
xchg
and
cmp
xchg
sub
loop
pusha
dec
cmp
mov
mov
cmc
mov
popf
stos
xchg
xlat
push
xchg
inc
je
mov
jl,pt
push
test
or
sbb
js
or
movsl
mov
pop
pop
cld
pop
ficoms
pop
enter
sbb
sub
pop
xor
loopne
push
jmp
aas
push
clc
inc
loopne
add
jo
pop
test
iret
xor
rol
fstpt
imul
loop
test
rol
push
cmc
xor
loop
pop
in
enter
aas
mov
inc
roll
lahf
jle
xor
enter
in
inc
jno
aad
add
pop
pop
xor
jbe
lods
into
movsl
jne
adc
lret
sbb
sti
outsb
xchg
and
pop
jle
add
aaa
sub
mov
lcall
pop
pop
xor
dec
dec
mov
cmpl
push
dec
movsb
jbe
jb
fmulp
divb
sub
sub
int
sbb
sub
ret
push
dec
sub
jne
sahf
sub
jo
sub
adc
or
aas
lods
xchg
test
mov
push
mov
orb
ds
mov
jb
mov
adc
mov
push
mov
mov
sbb
adc
jb
sbb
push
push
mov
shrb
mov
mov
or
movl
jp,pn
lcall
push
js
rcrl
lods
pop
xchg
inc
mov
push
cmp
pop
js
dec
sbb
jnp
xchg
sub
mov
mov
lret
mov
jg
out
mov
push
lahf
cmpsl
in
mov
ja
xchg
sub
adcb
push
arpl
int3
dec
sbb
cmp
push
xor
imul
ljmp
pop
sub
cmp
mov
jg
inc
mov
jne
ljmp
xchg
jg
les
sbb
rolb
lods
sbb
sub
test
sub
movsb
decl
mov
lcall
jo
jle
cmpsl
sbb
xor
inc
push
lds
sbb
mov
or
ss
mov
inc
jno
and
add
out
inc
loopne
xchg
mov
lds
and
mov
lret
bound
mov
pop
cmp
clc
mov
call
mov
mov
popa
inc
add
inc
mov
add
outsl
shlb
test
mov
add
push
or
fadd
push
cmpsb
nop
rcll
loope
fcomps
and
sub
scas
jle
es
pop
pop
push
jb
inc
adc
sub
das
sahf
cmp
test
pushf
adc
fimull
fst
and
insb
into
mov
add
jbe
shr
imulb
jbe
adc
sub
shll
lcall
adc
cmpsb
xchg
ret
add
push
out
ror
decl
gs
push
lods
inc
dec
incl
sub
mov
bound
mov
xchg
inc
hlt
and
popl
xchg
or
enterw
cmp
mov
mov
pushl
pop
add
stos
ret
out
in
shrl
into
push
stc
aaa
int3
lea
in
cli
sbb
adcb
push
dec
jno
mov
adc
push
insb
mov
adc
dec
jbe
iret
cmovae
stos
ret
mov
adc
std
push
jle
add
call
push
cmp
call
cmp
mov
jns
int
insb
cmp
adc
add
jl
test
arpl
pushf
movsb
add
nop
test
push
sbb
inc
inc
shrl
pop
jmp
pop
cmc
push
xchg
orl
xor
imul
lahf
pusha
outsb
or
ss
out
mov
cmpsl
adc
movsb
mov
stos
sbb
xor
mov
xor
int3
mov
mov
mov
xchg
xor
and
and
adc
or
adc
mov
dec
xor
lret
sbb
bound
or
add
or
je
mov
lret
xor
push
xor
or
cmp
nop
stos
jo
insl
insb
sub
in
fldl
sbb
ds
mov
inc
mov
mov
mov
int
lahf
outsl
lcall
fabs
pop
sbbl
push
sbb
movsb
fisttps
inc
cltd
cwtl
lds
dec
push
adc
adcb
andl
pushf
outsl
inc
shll
insl
push
mov
stos
fsubrs
leave
mov
or
fistpl
dec
sbb
push
sarl
add
sbb
cwtl
mov
or
push
add
mov
cmp
add
iret
cmp
sub
loopne
add
xchg
test
mov
xor
xlat
out
loopne
push
push
insb
scas
popa
cld
mov
rcrb
jo
call
inc
or
fbld
mov
fsubs
and
add
adc
push
inc
lret
dec
mov
xchg
or
mov
pop
sbb
mov
adc
jge
data16
in
in
mov
add
xor
push
lcall
push
cmc
lret
cmp
mov
shr
imul
or
movsb
mov
ss
cli
mov
push
rcr
jb
sub
or
or
dec
mov
jg
xchg
test
push
cmp
rol
sub
negl
push
jge
mov
jb
add
loop
pop
jg
test
and
ljmp
fildll
out
repz
jge
test
fiadds
insb
jns
xchg
mov
xor
push
fwait
mov
xchg
pop
inc
decl
aas
or
adc
mulb
xor
inc
insb
push
cmp
loope
ret
add
dec
jae
das
dec
push
mov
divl
and
test
push
cli
and
inc
pop
rcr
jmp
test
test
mov
outsl
push
adcb
or
loope
enter
dec
orb
push
mov
insb
dec
test
and
cld
add
xor
and
arpl
inc
gs
hlt
xchg
push
cmp
mov
xchg
mov
dec
insl
adc
mov
sbb
loope
pushf
loop
sarb
fadds
jae
mov
pop
loope
mov
sbb
adc
adc
rolb
and
dec
and
popf
mov
jne
fldt
test
outsb
sub
test
test
movsb
push
ret
adc
pop
inc
jbe
mov
pop
xchg
mov
shl
jne
mov
mov
push
xchg
jbe
add
mov
int
xchg
dec
bound
aas
cwtl
jbe
shr
mov
imul
cli
insb
iret
push
insl
gs
xchg
cmp
rolb
out
ret
xor
mov
jbe
cld
mov
pusha
dec
lock
fdivrs
punpcklbw
dec
mov
cltd
pop
lock
lret
cwtl
popf
adc
or
inc
cwtl
sbb
mov
xor
xchg
add
frstor
xchg
adc
inc
push
inc
xchg
mov
xchg
cld
add
repnz
add
jne
ljmp
ds
daa
jmp
lahf
leave
xchg
cli
test
test
or
rolb
sub
nop
jne
mov
mov
sahf
sarb
mov
add
xor
sahf
inc
in
adc
adc
clc
or
pop
jecxz
cmpsl
rorl
cltd
leave
ds
cmpb
rcr
cmp
dec
enter
sbb
push
arpl
fidivrl
xor
xor
pop
mov
mov
xlat
addl
xchg
pusha
loop
fsub
ja
cmpsl
fsubl
push
pop
lcall
shl
icebp
divl
adc
and
or
ljmp
sub
dec
xchg
pushf
dec
xor
cli
mov
push
cmp
rorb
pop
add
or
add
scas
idivl
jbe
clc
xchg
mov
mov
sub
pop
mov
je
and
xor
mov
sbbl
jb
sarl
int
xchg
dec
mov
fiaddl
jp
aaa
cmp
test
aam
mov
xor
enter
mov
mov
adc
les
or
cld
shll
addb
test
aad
adc
stc
fiadds
js
sti
push
out
cli
and
in
mov
repz
rorb
pop
pop
popf
fsubs
add
pop
cmp
std
insl
mov
fdivp
sub
sub
cli
jg
test
lret
and
inc
stos
sarb
push
jb
sbb
sub
lret
inc
mov
ret
pusha
leave
mov
inc
test
xchg
push
or
inc
outsl
sahf
movsb
xor
dec
outsb
cs
repnz
clc
mov
jo
roll
cmp
addb
mov
mov
xor
or
or
mov
test
lea
cmpl
xor
fisttpll
jne
aam
push
xchg
xor
xor
mov
stos
or
in
mov
mov
cmp
in
and
shrb
mov
xchg
scas
pop
ss
dec
add
loope
sbb
js
ss
ds
pop
insl
xor
xor
cmc
not
pop
mov
hlt
pusha
ficomps
arpl
sbb
adc
sbb
test
shl
or
es
adc
lcall
loopne
insb
and
jne
clc
xor
lods
test
fstpt
lock
dec
mov
jb
mov
andl
fsubrs
push
or
jbe
bound
and
mov
mov
push
dec
and
push
cmpsl
aam
sbb
mov
push
subb
adc
sub
mov
cs
and
cmp
and
mov
les
adc
jno
xchg
fidivrl
aas
scas
stos
movsl
sarb
mov
xor
cmpsl
xchg
add
cmp
or
pop
mov
lcall
jae
scas
push
popa
inc
push
test
cli
aaa
jb
lret
in
outsb
out
call
pop
lods
setbe
movsl
int
out
mov
stc
pushf
in
pop
jg
xor
push
sub
pop
xchg
cmp
add
js
xor
das
repnz
pop
jno
mov
jnp
aad
mov
ja
sub
adc
push
std
test
cmp
mov
jecxz
add
xchg
test
xor
xchg
fcmovne
and
xlat
xchg
mov
dec
cmp
jmp
loop
fisttpl
pop
sbb
push
addb
ret
xor
out
mov
xchg
or
xlat
es
adc
js
lret
bound
sbb
icebp
cmp
fs
sub
enter
and
ret
jecxz
pop
cmp
popa
js
imul
cltd
push
push
jp
cmp
mov
dec
xor
dec
add
xchg
sub
push
rorb
in
test
aad
mov
clc
sbb
fsubrl
addl
or
fsubl
shll
sub
hlt
sub
adc
ret
mov
fs
jne
mov
jle
mov
cwtl
add
lods
fistl
cs
insb
cmp
mov
rclb
pop
xor
out
pop
outsl
ds
sub
xorb
aas
outsb
filds
fs
or
cmp
xor
lock
lods
dec
or
and
mov
xor
or
lock
mov
movsb
or
mov
xor
sarl
jmp
mov
push
dec
or
sub
popa
stos
les
mov
std
pop
mov
es
popf
orb
mov
adc
push
mov
push
jg
icebp
roll
jmp
leave
rorb
or
sub
jae
push
cmpsl
lods
ja
incb
inc
out
mov
or
push
push
adc
push
aas
mov
inc
jg
sub
jmp
jl
pop
adcb
adc
sbb
mov
stos
lds
pop
mov
xor
inc
add
in
test
mov
fldl2e
cmc
sahf
mov
xlat
loope
mov
pushf
mov
js
loopne
mov
mov
sub
and
xorb
jge
mov
push
movsb
incl
je
mov
je
subb
les
or
or
pop
int
mov
cmpb
outsb
xchg
sbb
pop
mov
or
fidivl
out
add
lea
adc
filds
pop
fldenv
loop
push
inc
mov
adc
in
pop
add
xchg
mov
jo
mov
std
jbe
and
insb
rorl
mov
mov
pop
inc
repnz
mov
and
mov
fneni(8087
iret
dec
mov
sti
xchg
ljmp
iret
pop
mov
loopne
mov
insb
jl
inc
ss
loopne
mov
outsl
aad
jmp
push
push
pop
xlat
push
ret
or
enter
outsb
mov
sub
imul
ljmp
jo
sbb
sbb
or
negb
scas
nop
mov
lds
ss
jbe
mov
push
shlb
addb
pushf
daa
sub
insb
jne
insb
xor
mov
in
push
scas
jge
and
js
inc
mov
add
out
inc
insl
cmp
aaa
pop
and
jno
adc
mov
and
test
nop
sbb
or
push
in
push
inc
pop
clc
push
xor
mov
or
fs
xchg
lock
movsl
push
aas
push
lock
xchg
jge
rorb
call
push
xchg
jp
mov
test
hlt
aad
lret
and
ss
mov
cmpsb
jle
test
adc
xchg
jb
shlb
lock
leave
push
push
sbb
insb
push
push
mov
mov
push
push
adc
sub
mov
jecxz
xchg
inc
jbe
xchg
mov
inc
mov
call
and
pop
shlb
jmp
xor
inc
repz
fwait
ljmp
jbe
xor
fimull
out
fdivs
mov
imul
icebp
cmp
inc
mov
clc
pop
lret
scas
mov
incl
cmc
dec
addr16
xor
pop
addl
mov
pop
out
outsl
inc
fs
xchg
cmc
in
ja
mov
sbb
xor
adc
pop
xchg
rcrb
shrb
push
sub
bound
ret
shlb
mov
fstpt
xor
hlt
push
loope
pop
call
aad
dec
pusha
push
subl
jecxz
insl
shll
push
or
sub
jecxz
cwtl
and
pop
insl
sbb
sbb
mov
fimuls
stos
sbb
mov
or
loopne
jmp
mov
cmp
pop
cmc
xlat
mov
iret
sub
mov
adc
stos
mov
das
or
test
loopne
dec
mov
mov
and
adc
repz
sbb
cmpsb
jle
cmc
pop
jecxz
mov
push
rcr
inc
popa
jne,pn
lret
cmp
aam
inc
jmp
rorb
jl
xor
mov
lahf
add
inc
sub
adc
xor
out
repz
hlt
lcall
inc
jae
and
pop
add
dec
pop
push
cwtl
xor
lods
xor
movsl
nop
test
les
jl
dec
cmp
adc
imul
push
sub
sarb
sbb
xchg
adc
call
popa
std
or
cltd
mov
inc
imul
adcl
mul
add
lock
jae
xchg
inc
or
adc
adc
repnz
xchg
add
mov
or
lret
mov
push
ds
inc
sub
iret
lock
lahf
aaa
loop
call
jp
mov
mov
stos
push
push
aad
push
push
and
clc
sti
adc
popa
daa
daa
and
mov
mov
push
cli
inc
gs
mov
aaa
adcl
jmp
out
imul
ja
push
dec
cmc
fldt
test
push
dec
inc
mov
mov
xchg
jge
into
mov
inc
lea
push
xor
add
dec
shr
sbb
cli
pusha
rorb
cld
aaa
rclb
add
push
pushl
inc
cmp
mov
inc
loop
aas
mov
adc
xchg
jnp
aaa
and
ljmp
and
or
sbb
sarb
jnp
mov
imul
push
push
xchg
and
push
flds
and
pushl
inc
push
xbegin
sahf
inc
mov
fcom
fiaddl
inc
or
jb
adc
xorl
and
sti
stc
fiadds
jmp
and
mov
mov
dec
mov
clc
aam
push
jbe
pop
mov
and
inc
fcomps
dec
sbb
dec
pop
hlt
orl
mov
addb
sub
xor
cmpb
mov
mov
cmp
push
les
push
push
jecxz
or
pop
ljmp
cmp
mov
aad
in
les
pushf
outsb
and
loopne
push
ret
test
jp
lahf
mov
je
lcall
outsl
dec
je
xchg
lock
loop
sbbl
les
inc
add
bound
mov
jg
roll
fs
mov
pop
and
pop
ja
loopne
dec
mov
out
xchg
push
dec
or
add
push
cli
subb
out
jmp
add
in
aam
je
sbb
sbb
lods
ja
movb
stc
dec
inc
mov
ret
addl
mov
scas
adc
nop
sub
push
pop
clc
push
push
push
lock
push
sbb
dec
testl
pushf
psubb
xor
push
cmc
inc
arpl
jno
cmp
adc
cli
xchg
imul
push
and
cmpsb
push
push
jl
std
lds
ss
dec
push
mov
pop
ss
pop
xor
hlt
ret
or
mov
nop
icebp
movb
repnz
or
imul
sbb
cmp
lcall
or
pop
mov
aaa
push
xchg
and
fldcw
cmp
or
pop
xchg
or
popl
jo
fcmovnbe
cmp
inc
sbb
pop
adc
mov
mov
sbb
je
cltd
inc
inc
push
jmp
push
push
mov
mov
adc
and
or
outsl
mov
mov
cs
gs
push
stc
push
call
mov
pop
push
dec
jno
arpl
in
in
cmp
jb
stc
int
jns
push
mov
cmp
clc
hlt
rolb
xchg
add
add
adc
dec
inc
mov
jg
dec
orb
xor
xor
push
shll
or
pushf
test
xor
pop
movsb
scas
popf
push
std
cmp
jecxz
ret
jne
mov
push
dec
es
pushf
cmp
arpl
repnz
and
movsb
pop
movl
inc
mov
shr
stos
test
repz
dec
das
jmp
pushf
adc
lods
loopne
sub
jmp
dec
push
lods
add
xchg
out
in
test
xorb
repnz
cmp
cmp
mov
jmp
add
xchg
fs
insb
or
pop
or
fisubs
leave
testl
mov
mov
pop
je
mov
or
and
sbb
incb
test
pop
mov
and
test
outsb
das
xor
sub
stos
mov
frstor
stos
icebp
xor
cmp
sahf
fistl
push
xchg
xor
sbb
es
stc
xlat
inc
loope
enter
mov
loope
push
mov
fbld
sbb
es
push
lret
or
mov
pop
sub
popa
cmc
or
or
mov
or
or
xchg
mov
push
in
mov
daa
sub
mov
jl
outsb
or
roll
jne
pop
push
fs
cmp
xor
sub
arpl
movsl
jno
cmp
ljmp
dec
sub
lret
andl
movsb
add
cld
stc
pusha
test
inc
lahf
imulb
pop
and
ret
mov
lret
ret
outsb
mov
clc
arpl
test
rol
jle
js
fs
add
inc
test
sbb
mov
pusha
movl
ja
adc
adc
mov
xor
cmp
cmp
push
dec
enter
dec
xchg
pop
not
add
pop
popl
cmp
movsb
lret
sbb
or
push
adc
push
or
loopne
mov
xor
jmp
pop
addr16
inc
call
call
mov
mov
ret
mov
or
xchg
call
addr16
xor
mov
pop
jecxz
dec
mull
xor
sti
adc
cmp
mov
dec
inc
and
inc
adc
aas
lret
mov
sbb
popf
inc
mov
nop
or
rolb
add
jbe,pt
inc
outsb
test
mov
fdivrl
mov
adc
add
sti
xor
lods
cld
push
out
xchg
xchg
dec
jno
jae
and
and
sarb
xchg
ljmp
shl
enter
pop
mov
cmp
daa
and
adc
adc
cwtl
adc
or
in
cmp
clc
xor
adc
or
sub
xchg
mov
ljmp
movsl
pop
inc
inc
sbb
push
loope
sbbb
jle
faddp
inc
aam
jb
sub
imul
stos
sbb
movsl
xchg
xchg
fs
dec
sub
jmp
popf
pop
xor
add
loope
dec
jae
rol
push
inc
sub
xchg
mov
outsb
jb
cltd
push
ja
and
imul
mov
mov
ret
and
push
and
jl
sbb
movsl
jno
push
sub
add
push
es
sbb
sub
leave
xchg
outsb
cmp
test
add
dec
xchg
adc
and
cltd
scas
pusha
fsubp
or
shrb
in
mov
test
or
jle
shr
lock
insl
add
adc
sub
cmpsl
jecxz
jns
add
push
dec
push
data16
sbb
ret
jns
add
push
sti
mov
pop
dec
push
sti
mov
mov
roll
adcb
adc
push
test
mov
pop
sub
cmp
mov
add
inc
and
and
into
dec
jo
inc
mov
dec
mov
xchg
mov
lock
pop
dec
xor
sub
add
mov
cmp
or
aaa
mov
in
or
dec
inc
mov
dec
ret
jmp
in
push
pop
pop
adc
mov
sbb
mov
inc
ret
in
xlat
into
loop
call
push
cmp
inc
inc
sub
mov
or
dec
or
icebp
pop
dec
popa
jg
or
pop
jle
test
jecxz
pusha
mov
les
cmpsl
adc
int
push
push
out
js
add
filds
or
add
ja
bnd
adc
mov
pop
cli
xor
loop
lock
lods
test
imul
out
push
mov
iret
lcall
push
push
fldz
hlt
les
ja
inc
fcmovbe
je
jle
or
push
je
into
push
and
pop
and
roll
adc
addr16
js
jnp
ret
mov
dec
push
push
xlat
and
loop
test
sbb
inc
js
test
dec
dec
pop
cmp
hlt
fwait
roll
jo
call
arpl
ret
jge
cmpsl
pop
mov
js
jo
stc
push
inc
mov
sub
scas
mov
jp
mov
loope
ss
or
cmp
inc
enter
loop
mov
lret
fstps
cli
push
mov
loop
cmp
es
xchg
mov
aaa
in
loop
loope
pop
and
aad
call
sbb
cmp
movsl
inc
mov
xchg
aam
mov
pmulhuw
pop
enter
dec
dec
nop
jl
lods
pop
cwtl
nop
fstpt
adc
lcall
mov
pop
sub
jne
pusha
daa
fcoml
push
sub
ja
pop
pop
sbb
fstpt
sbbb
cli
les
add
jp
stos
cld
sbb
rolb
push
mov
mov
test
ltr
outsb
sbb
aas
scas
dec
jbe
test
hlt
cmp
insb
pop
mov
dec
pop
popa
cmp
mov
stos
cwtl
loop
pop
mov
and
cmpl
xchg
xchg
cld
inc
mov
clc
xchg
dec
loop
out
mov
dec
pop
sbb
loop
mov
arpl
popa
addb
iret
mov
and
sbb
shlb
stos
in
clc
mov
jnp
insb
loope
jp
lock
sbb
add
test
dec
lea
fisttps
dec
std
push
js
or
roll
subl
push
ret
pop
jl
sub
cmc
ja
push
and
cmp
insb
ja
mov
adc
scas
push
mov
and
pop
cs
subb
mov
add
incl
mov
sbb
jge
pop
insl
imul
sbb
imulb
add
mov
jmp
je
pop
pop
inc
ret
loope
xchg
cmp
test
push
cmc
sbb
hlt
sub
ss
pop
adc
mov
sarl
adc
push
cmpsl
or
inc
sbb
das
dec
imul
icebp
loope
push
nop
mov
cmpsb
pop
pop
and
hlt
xor
dec
frstor
loopne
push
test
inc
push
mov
push
mov
rorb
icebp
inc
sub
jno
cmpsb
sub
dec
xchg
mov
mov
cmp
inc
or
add
sbb
sbb
out
out
insb
dec
push
cmp
nop
xor
lret
jne
icebp
sahf
inc
test
cmp
loope
cwtl
add
test
mov
clc
mov
pushf
call
pusha
ljmp
pop
add
dec
xchg
sub
scas
in
xchg
popa
cmp
movb
fxch
mov
ret
sbb
repnz
cli
push
incl
mov
jno
or
or
lcall
fisttpll
pop
jp
dec
mov
push
not
push
dec
pop
xorl
rol
movsl
mov
icebp
and
push
sti
push
test
xor
icebp
pop
test
dec
repnz
sbb
dec
shlb
aas
xchg
call
mov
das
fwait
inc
jp
xor
lcall
arpl
dec
fwait
daa
ret
std
xor
pop
lret
inc
push
xor
adc
pop
pop
mov
insl
cmc
xor
inc
pop
jl
repnz
test
inc
ja
outsb
sbb
out
cwtl
lea
xor
mov
add
mov
sub
mov
lcall
movsl
and
stos
fwait
jecxz
pop
fwait
sub
dec
mov
cmp
nop
out
lret
repnz
pop
mov
cmp
cmp
dec
xor
sysret
xor
and
mov
sti
shrb
cli
mov
mov
pop
rcrb
jge
imul
xchg
test
cmp
cmc
sbb
pop
mov
push
movsb
pop
aam
das
push
pop
dec
inc
jmp
jbe
insb
push
jmp
push
xchg
add
idivl
les
in
popa
sbb
dec
sub
and
pop
subb
pop
push
insb
sub
pop
cmp
cmp
mov
jle
scas
pop
pop
cmc
mov
popa
cld
sar
xchg
push
leave
dec
push
jb
inc
inc
call
nop
dec
jmp
ja
daa
jp
icebp
or
lds
mov
sub
in
iret
xor
hlt
jmp
xchg
mov
dec
cli
cmc
les
aas
mov
push
inc
iret
dec
cld
pop
push
or
pop
adc
push
test
mov
stos
loop
movsb
dec
call
cwtl
and
sub
ficoms
xchg
mov
aas
pop
dec
or
pop
push
outsb
ljmp
mov
ljmp
and
je
bswap
popa
loopne
pop
aad
sbb
mov
pop
xchg
ret
jge
std
adc
jnp
jmp
sub
xorb
jl
leave
adc
jp
mov
scas
fisubrl
movswl
sub
adc
mov
add
popf
cwtl
mov
clc
add
xor
scas
ljmp
sub
xor
cmpsl
and
mov
jns
xorb
ss
inc
fsubs
jbe
aaa
stos
xchg
mov
dec
jbe
adc
jecxz
pop
mov
adc
les
mov
adc
ja
adc
xor
dec
imul
std
pop
sbb
stc
call
mov
mov
mov
sar
jmp
push
pop
xchg
mov
mov
dec
leave
clc
xchg
outsb
jecxz
pop
add
repz
adcb
adc
pushf
cmp
scas
pop
sub
sub
add
dec
loope
xor
aad
ret
dec
push
pop
pop
aaa
fidivrs
mov
outsb
leave
test
aad
es
outsl
nop
loopne
or
sti
iret
mov
xchg
or
xchg
roll
xor
iret
aam
sub
jo
jne
stos
xchg
sahf
insl
rcrl
int
mov
pushf
xor
xor
and
insl
repz
icebp
pop
je
fdivrs
mov
add
pop
scas
shll
dec
push
pop
mov
rolb
push
and
xchg
lods
outsl
mov
mov
xor
andl
jecxz
into
sub
adc
sub
pop
xchg
mov
pop
add
popl
scas
movsl
loop
mov
mov
aad
call
jecxz
jbe
gs
pop
cld
int3
mov
or
mov
cmc
imul
cmp
jmp
push
fisubl
inc
mov
pop
les
lea
xor
pop
and
xor
and
and
out
pop
mov
imul
inc
cmpsb
lcall
cli
mov
xor
pusha
xor
mov
mov
test
dec
movsb
lds
xor
cli
jl
push
into
test
rorb
rolb
inc
stos
or
pop
xor
clc
push
jne
nop
mov
add
xchg
mov
gs
jo
shlb
mov
jmp
push
shl
inc
test
pushf
nop
push
inc
mov
adc
ret
rcl
std
add
imulb
loope
sub
pop
xchg
sbb
arpl
es
cli
pop
in
adc
mov
add
inc
ret
icebp
pop
lea
xchg
ljmp
shll
push
sub
xchg
mov
rolb
enter
or
pop
cmp
es
ds
pop
test
push
add
push
imul
xor
arpl
jmp
test
sar
iret
movsl
bound
call
mov
jae
shrl
xchg
movsl
mov
fcomps
dec
jge
pop
xchg
jl
leave
lcall
sub
pop
and
repnz
loopne
or
add
jg
pop
add
and
lock
mov
icebp
dec
loope
push
hlt
aad
dec
mov
add
aaa
adc
mov
cmpsl
in
add
pop
push
mov
lods
dec
fs
pusha
push
scas
adc
test
adc
fwait
out
fucom
dec
lods
je
cmp
push
notl
int3
sub
push
push
daa
ret
out
sti
in
ljmp
jecxz
notb
repz
lock
dec
dec
out
ss
daa
dec
jp
xchg
jnp
pusha
icebp
jbe
test
xchg
imul
lret
xor
dec
pop
dec
ss
popa
xorb
push
std
insl
ja
iret
clc
dec
cmp
pop
adc
movsl
mov
jbe
push
cmp
scas
mov
loop
mov
and
outsb
pop
jge
sub
lret
not
jnp
inc
cs
or
into
sub
jmp
add
mov
push
sarb
ficomps
shrl
push
push
outsl
cmpb
movsb
loop
and
jno
or
inc
jnp
pop
loopne
dec
fsubs
sub
mov
lock
nop
outsb
dec
add
inc
lcall
inc
hlt
bound
lock
out
ja
inc
out
xlat
or
fdivr
dec
sbb
aam
out
mov
push
scas
cli
sbb
js
xor
dec
out
fimuls
insl
pop
cmpl
cmpsl
mov
xlat
inc
sbb
mov
pop
fisttps
in
pop
dec
inc
and
pop
pop
in
lods
mov
fcompl
add
add
push
nop
pop
and
sahf
imul
jmp
daa
mov
inc
sarl
cmp
shlb
les
test
into
rcrb
int3
lret
xchg
ret
push
ss
sub
jp
jno
push
jecxz
jecxz
mov
jns
in
popa
push
push
push
sti
cmp
movsl
fs
or
sbb
fimull
push
clc
outsb
pop
jge
bound
adc
adcb
jp
or
loop
mov
sbb
roll
movsb
sub
js
pop
mov
sub
mov
cmp
arpl
clc
cmp
add
cmp
dec
mov
jne
jne
pop
subl
scas
mov
aas
jne
xor
add
lods
scas
and
sbbl
fimuls
jno
stos
sbb
xchg
sbb
mov
sbb
dec
xchg
popf
dec
mov
add
pop
addb
lret
mov
test
int3
pop
pop
inc
popa
pop
mov
cmp
push
sbb
push
lock
ss
push
cmp
dec
adc
out
xchg
mov
lea
sti
pop
jl
xor
leave
rclb
cmp
std
andb
xor
inc
aaa
jmp
fdivrs
mov
rorl
pusha
push
popf
push
fldenv
hlt
xor
push
aaa
adc
xor
sub
test
aaa
mov
sub
shl
inc
inc
aam
sub
into
mov
and
xchg
push
movsl
inc
mov
add
shl
jecxz
loopne
aad
pop
insb
aad
xchg
test
inc
test
xchg
mov
lahf
mov
jno
xor
cmp
imul
jmp
lcall
gs
lods
scas
fsubr
sbbl
jo
lock
mov
cmc
add
add
fsubrl
xor
test
add
adc
mov
or
enter
inc
jns
inc
cltd
jmp
int3
clc
add
jnp
xlat
arpl
sti
cmp
daa
mov
mov
or
xlat
sbb
and
repnz
sbb
inc
movsl
adc
incl
je
pop
jecxz
out
dec
sub
pop
or
and
inc
pop
pop
pop
mov
clc
jo
or
push
fdivrl
push
adc
xchg
push
push
movsl
shll
fldt
push
inc
cmp
xchg
lods
movsl
pop
pushf
dec
paddq
xchg
xchg
dec
mov
shrd
sub
xor
pop
dec
mov
aad
cltd
dec
arpl
inc
cmp
call
xor
inc
dec
jmp
pop
fisubs
jo
jb
cmp
mov
and
dec
push
lahf
sarl
pop
addl
fisubrl
add
sub
cmp
cmc
push
dec
jge
lret
sbb
jg
loop
mov
andl
das
insb
adc
adc
jl
push
xchg
sub
roll
xchg
or
inc
jmp
xor
jnp
xor
add
adc
adc
ljmp
mov
dec
xor
imul
push
ret
mov
sbb
daa
xor
inc
imul
sbb
inc
push
add
cmpsb
cltd
inc
pop
pop
mov
mov
push
xchg
inc
insb
cmp
pop
adc
je
or
pop
jle
mov
mov
dec
add
pop
movsb
popl
adc
sarb
fcoms
mov
shlb
push
js
repz
push
cmp
loope
or
repnz
sub
jp
cmc
jbe
cmpsb
inc
imul
ljmp
sti
cld
or
push
bound
sub
fs
std
sub
and
jp
xor
mov
leave
jb
xchg
sbb
mov
loope
popa
inc
fwait
divb
xchg
push
andb
mov
insl
cmp
push
and
lods
push
dec
int
rcll
mov
mov
mov
int
xlat
push
xor
jmp
xchg
and
test
add
loop
and
push
stos
mov
cwtl
xchg
fistpl
nop
cmpb
pop
in
add
call
jmp
xchg
rcrl
mov
inc
pusha
loope
loop
mov
lds
loope
divl
movsb
test
or
icebp
in
sbb
inc
lcall
mov
jnp
rclb
cwtl
push
mov
sbb
int
pop
repz
stc
testl
mov
mov
imul
fsubrl
aas
cmpsb
fnstcw
daa
cmp
cmp
adcb
and
inc
push
jge
lcall
xorl
jg
inc
xchg
adc
jnp
aad
push
in
imul
jne
repnz
push
jge
add
inc
sbb
inc
insb
sbb
pop
icebp
leave
mov
rclb
mov
jno
pop
xchg
mov
cmp
pop
push
in
add
xchg
jne
inc
sub
push
repz
pushf
mov
jl
clc
pop
sbb
push
jo
pop
adc
jmp
jno
daa
and
icebp
adc
lret
pop
cld
insl
daa
pop
xor
push
addl
mov
call
jg
shrl
xchg
lahf
and
shll
outsb
pop
xor
mov
int
pop
mov
jmp
lahf
pop
cmpsb
ljmp
lods
add
dec
icebp
ds
mov
mov
push
xchg
mov
or
xor
adc
wbinvd
fcoml
stos
pop
mov
mov
popf
cmpsl
push
jp
insl
dec
in
xchg
inc
inc
std
enter
add
adc
call
xchg
rorl
arpl
sahf
or
insb
fs
fstpt
xchg
and
xchg
pop
inc
repnz
pop
hlt
push
add
loopne
xchg
mov
sbb
jnp
xor
sub
or
pop
pop
xor
sbb
jo
faddp
xchg
int
in
js
adc
push
dec
call
or
cmpb
mov
lds
arpl
mov
scas
sub
sub
add
cli
repz
mov
enter
push
push
pop
adc
xchg
imul
out
in
jmp
push
fildl
loop
adc
ljmp
sub
sbb
adc
adc
mov
idivb
inc
jnp
adc
push
out
push
push
pop
cmp
xchg
inc
testb
ja
lock
in
mov
jp
sub
fldt
scas
data16
arpl
dec
mov
cli
xor
movsl
fidivrs
lods
dec
inc
test
jle
aas
add
ljmp
cmpsl
lea
rcrl
cmp
fwait
pop
pushf
pop
cmp
lea
bound
adc
lods
inc
ljmp
in
inc
les
data16
xor
inc
setb
sarb
stos
or
std
test
jae
sahf
add
sub
or
jne
mov
icebp
jecxz
or
jnp
fstps
sub
scas
cs
jnp
cmc
inc
mov
inc
ss
cwtl
adc
mov
inc
push
xorb
inc
aaa
or
fsts
mov
icebp
imul
xor
xor
sub
xchg
adc
jno
es
dec
stos
push
push
inc
lods
addb
clc
xlat
ljmp
pushl
sar
cmp
sbb
subb
xlat
xor
es
movsb
sub
cld
sub
loopne
sbb
ret
jno
sbb
movsb
sub
cmp
bound
lods
insl
cmp
sub
icebp
sbb
mov
cmp
fstpl
dec
aas
push
test
add
push
scas
fimuls
je
fldl
jnp
cmp
aaa
sub
dec
lods
repz
push
out
cmovbe
movsb
sbb
fisubs
scas
sahf
jno
xchg
lret
or
jle
imul
enter
adc
add
sbb
cmp
pop
test
lods
add
dec
es
adc
lods
jp
into
sub
movsl
cwtl
and
inc
shll
inc
sbb
or
add
cmpsb
push
pushf
fadds
xor
sub
int3
pusha
fcmovnbe
adc
rcll
jbe
scas
mov
scas
and
dec
inc
imul
add
add
mov
orb
pop
push
sbbl
add
hlt
jb
adc
shrb
adc
fadds
js
pop
add
adc
mov
pop
popa
je
mov
sahf
inc
mov
shll
and
lret
stos
mov
shlb
mov
pop
nop
pop
aas
push
sbbb
mov
lds
xor
xchg
jae
call
in
mov
xorl
push
adcl
or
xor
pushf
mov
aas
xor
hlt
jl
pop
fneni(8087
adc
cmpsb
adc
andb
das
popf
and
jecxz
jle
xor
push
adc
insb
sbb
inc
cmp
cmp
fadd
mov
incl
jp
dec
inc
push
add
ret
test
inc
subb
jae
or
fwait
mov
xorl
into
fistpl
pop
ret
xor
out
aam
inc
xchg
pop
mov
jmp
jmp
lods
clc
sub
lods
push
mov
je
sar
andb
sbb
rcl
xlat
test
cmovp
test
mov
inc
add
jmp
jb
sbb
adcl
loope
pop
out
add
sub
shlb
mov
xorl
fiaddl
inc
mov
xchg
notl
addr16
push
and
mov
roll
fmuls
fwait
or
sahf
rol
lock
or
jnp
push
orl
in
adc
inc
or
inc
imul
popf
mov
adc
outsb
xor
sub
adc
push
in
pop
pop
xchg
decl
cmp
dec
cmp
pushl
push
mov
xchg
add
fstpl
add
cmp
add
dec
push
inc
out
xor
les
push
xor
jae
lds
insl
mov
xchg
add
fidivl
ficompl
cmp
add
sub
xchg
mov
addb
or
adc
jp
ret
stos
push
jecxz
xchg
ja
add
ret
push
loopne
jnp
popf
into
popa
cwtl
jo
pop
sti
xor
in
pop
fcmovnb
add
sub
jne
sbb
and
cli
push
je
or
and
pop
enter
stos
ss
inc
in
pop
push
or
movsl
jmp
and
lahf
push
and
xchg
mov
cld
dec
test
cmp
jecxz
scas
sub
cmpsb
dec
das
mov
add
pop
sub
insb
dec
insb
xchg
lock
add
arpl
cmp
mov
pop
jle
mov
xchg
sub
or
call
pop
stc
ljmp
sub
jo
mov
adc
xchg
fsubs
test
out
push
adc
sahf
cs
shl
mov
je
mov
mov
decl
add
mov
fwait
adc
gs
xchg
ffree
or
and
mov
add
out
adc
jbe
js
les
test
int
shrb
jne
movsl
test
inc
loopne
not
xor
sti
xchg
jmp
pop
aad
mov
adc
rcrl
nop
cmp
or
and
sub
mov
mov
sub
jg
lea
hlt
lods
loop
add
or
inc
mov
mov
sti
xchg
jbe
outsb
xchg
pushl
insb
out
and
popa
mov
es
and
cld
testb
js
jecxz
out
ja
jae
outsl
sub
sti
adc
sbb
mov
xor
arpl
cmp
inc
xchg
and
js
test
cmp
adc
and
pop
xorb
out
mov
and
subb
mov
lods
add
seto
std
adcb
fdiv
loop
in
sub
js
mov
dec
sbb
scas
ret
push
cli
dec
aas
push
ds
das
jo
rorb
jbe
shll
sqrtps
pusha
or
mov
push
mov
mov
adc
xchg
sahf
or
cmp
ljmp
lcall
movsb
xchg
add
repnz
xor
je
lods
push
dec
sub
mul
jle
clc
daa
insl
and
popa
or
and
test
ret
mov
out
lret
lods
push
and
icebp
fstps
sti
dec
outsb
mov
ljmp
xlat
mov
jle
cmpsl
mov
loopne,pt
clc
sbb
push
pop
jl
pop
int
scas
xor
dec
mov
rcll
dec
push
bound
leave
loope
mov
sbb
sbb
sub
out
jecxz
int
loop
sbb
xchg
pop
aad
push
lods
lret
stos
cmp
and
ret
rcrw
push
je
mov
mov
sarb
loop
mov
mov
xchg
pop
shl
push
stos
test
xchg
or
jne
mov
cli
or
pop
or
les
sbb
pop
inc
jo
sbb
push
inc
cwtl
les
add
adc
adc
cli
test
or
and
cmpl
xor
mov
adc
mov
and
xor
pmulhw
dec
pop
out
or
inc
mov
loop
js
pop
fistl
mov
jae
lahf
add
and
fwait
sbb
cmp
fnstsw
adc
mov
loopne
and
and
sarl
movsb
jmp
sbb
out
lock
and
mov
cmpsb
push
cmovle
imul
cmp
leave
push
push
outsb
test
add
sarl
xchg
push
jmp
adc
jo
push
fwait
push
clc
data16
and
loope
lcall
cli
ret
cmc
sbbb
fwait
lods
stos
add
jg
inc
cmp
jno
dec
repz
cld
sub
pop
mulb
pop
dec
adc
dec
bnd
imul
jge
or
out
das
or
add
dec
mov
enter
insb
pop
stc
push
or
imul
jg
cmpsb
xor
cmpsb
test
dec
sbb
mov
stos
ja
sbb
or
sub
movsb
pop
xchg
push
fldcw
sbb
out
cmp
fsubrs
pop
mov
inc
add
sub
mov
or
inc
inc
imul
push
sbb
and
test
pusha
les
or
lea
inc
mov
rorb
sahf
jnp
and
imul
roll
mov
dec
or
fwait
sbb
mov
les
aad
and
movsl
push
negl
pop
fwait
inc
mov
jg
imul
dec
and
or
arpl
push
cmp
shrb
cmp
pop
out
rol
pop
xchg
leave
icebp
cmp
mov
in
cmp
mov
cmp
inc
add
mov
ror
shrl
je
push
xor
push
test
es
repnz
les
ss
sbb
icebp
shrl
cli
adc
mov
adcl
rol
xor
in
mov
push
jns
push
xchg
nop
movsl
out
daa
cwtl
pop
mov
lods
sbb
cmc
insl
bound
cmp
jns
mov
call
fs
jae
jns
push
test
sbb
imul
mov
shll
mov
and
imul
das
jl
in
aaa
and
jbe
fimull
mov
xor
js
lock
cmp
arpl
jne
push
test
dec
pop
pop
ja
out
cwtl
fsts
inc
flds
arpl
incb
lods
or
mov
lock
push
and
adc
cmpl
mov
jle
clc
pop
test
int3
jno
push
div
mov
test
and
stos
and
imul
inc
pusha
pushf
loopne
cmp
in
adc
fs
push
or
fwait
pop
dec
js
sub
push
jg
add
cs
std
je
push
das
cmp
xor
cld
divb
jl
sbb
push
sbb
jmp
or
pop
pop
fisubl
frstor
mov
push
insb
push
adc
lret
push
mov
lds
in
pop
test
jmp
and
dec
push
stos
roll
outsl
mov
aas
pop
xor
jg
sbb
out
repz
jo
bound
push
cmp
lcall
lods
push
mov
inc
add
mov
jl
cltd
shrb
add
movsb
xor
push
sahf
inc
leave
loope
sbb
xor
xchg
jbe
mov
jbe
jb
icebp
mov
lahf
jo
das
sbb
push
rcll
or
push
rclb
sbb
mov
lods
add
loope
cmp
inc
dec
or
inc
push
push
ljmp
loope
push
sahf
fs
cmp
inc
pusha
xor
adcl
jnp
outsb
aaa
cmp
sbb
testl
call
or
mov
aam
stc
add
push
add
xor
pop
mov
sub
mov
gs
ljmp
es
add
loope
or
js
xor
mov
mov
adc
or
cmp
or
inc
or
cmpsl
nop
or
xor
loopne
call
outsl
mov
mov
loope
add
xchg
icebp
or
ljmp
jg
rolb
jge
lock
jno
or
jg
leave
loopne
sbb
or
push
imul
pop
clc
test
cmpsl
ret
or
add
cmpsb
sbb
sub
dec
pusha
les
imul
pushl
repnz
xlat
or
orb
cli
add
fisttpll
sbb
sbb
mov
mov
pop
js
popa
sbb
sbb
rorl
stos
cltd
inc
or
mov
xchg
xchg
adc
jp
sub
test
lcall
jae
or
js
sbb
rclb
addr16
add
aad
mov
test
jp
dec
push
adc
addb
mov
mov
jp
mov
addb
lahf
lea
lahf
add
bound
push
or
sbb
dec
or
pusha
fucomp
mov
stc
movsb
push
rclb
js
imul
and
in
add
push
lcall
ljmp
sub
sbb
fmuls
dec
mov
sbb
pop
movsl
mov
hlt
rol
imul
jo
lret
vandnps
push
sahf
jns
or
or
cmpsl
and
lahf
sub
xor
and
loope
loopne
push
mov
in
pop
lods
arpl
jp
test
clc
push
push
lcall
dec
in
add
push
ret
xor
lret
pop
push
xchg
movb
xlat
mov
mov
or
hlt
cs
ljmp
pop
loope
movsb
pop
jno
lea
fdivl
add
add
lods
rcl
loop
cmp
xchg
xchg
mov
inc
and
repz
sbb
clc
cmp
mov
jne
cmpsb
js
jnp
push
push
call
pop
cmp
iret
pop
cs
push
xlat
push
test
sbb
dec
and
mov
insl
xor
std
test
push
mov
into
mov
and
dec
add
or
loopne
mov
out
xlat
add
cmpsl
test
push
sbb
data16
mov
stos
aad
adc
dec
mov
bound
mov
fmull
adcb
jns
cld
cld
sub
and
lods
inc
mov
je
test
inc
sarl
and
cmova
pop
movsb
aaa
push
pop
push
sbb
ja
mov
out
and
sbb
decl
pusha
mov
orl
xor
scas
add
xor
xor
pop
jecxz
jl
xor
les
mov
pop
sub
dec
dec
cmp
sbb
sub
add
add
and
xchg
rolb
fbld
aam
sub
and
int
les
sbb
xorl
dec
sub
push
push
imul
lret
xlat
insb
loopne
add
push
cmc
rolb
mov
addr16
fdivp
adc
in
ljmp
movups
add
add
aad
test
xorb
das
popa
jno
ja
sbb
mov
insl
je
mov
add
mov
mov
pop
push
push
daa
push
or
mov
fisubl
popf
push
sbb
cmp
divl
scas
push
scas
lds
lcall
call
aad
adc
add
sbb
cmp
dec
jp
lret
ret
in
fs
adc
xchg
sbb
mov
or
rorb
jge
fiadds
rolb
push
aad
lock
dec
xor
pop
sbb
mov
mov
jmp
lods
xor
cmp
sub
popa
sbb
add
cmpsb
add
add
inc
cli
stos
adc
popa
cwtl
add
adc
sub
cmp
lock
imul
insb
dec
jecxz
rorl
les
rol
ss
sub
cli
mov
test
pop
test
pop
add
les
push
mov
inc
jg
lcall
loopne
scas
cmp
jo
call
push
fs
mov
xchg
insb
jae
and
rcll
aaa
addr16
xchg
cli
ja
inc
repz
loop
aad
cmp
jo
xchg
and
fwait
cmp
push
pop
pop
gs
xlat
or
xchg
adc
mov
and
adc
ficoms
mov
mov
push
call
fildl
inc
mov
xor
push
outsl
mov
or
jp
xor
xor
jb
mov
into
sub
outsl
push
inc
fst
sbb
inc
out
pop
jecxz
ds
inc
aad
xlat
add
sub
dec
sub
push
ss
mov
popf
sbb
pusha
cmp
insl
and
mov
and
ret
jno
xchg
jnp
add
add
in
call
fistps
test
dec
adc
mov
jecxz
hlt
les
jnp
shrl
adc
sub
arpl
movsl
adc
rolb
fmull
loope
fcmovbe
adc
sbb
stos
xor
addr16
adc
dec
mov
inc
or
cmp
cmp
pop
pop
outsb
sbb
cmpsl
xchg
imul
ret
and
faddl
lcall
sbb
jge
jne
inc
mov
push
mov
xor
jo
inc
pop
popf
dec
out
mov
flds
jl
in
ja
mov
mov
in
and
sar
test
das
popf
or
stc
fwait
ret
aaa
pop
cmp
sub
lea
mov
lea
jne
outsb
addr16
cmp
mov
in
lret
test
test
xor
push
sahf
push
das
loope
adc
int3
in
jns
cs
out
pop
js
je
or
xchg
cmp
ljmp
out
mov
pop
push
test
imul
push
hlt
jns
xchg
pop
hlt
sub
in
jb
push
rcrl
xchg
pop
stos
shlb
aam
fs
jp
lds
xor
inc
ljmp
pop
movsl
hlt
out
inc
clc
hlt
lea
pop
mov
es
data16
in
pop
adc
fwait
push
mov
and
xorb
pop
in
jbe
or
out
aam
loop
incb
fimull
xchg
add
scas
pop
pop
fisubrl
sub
adcl
push
mov
xor
cmp
lcall
cmpsl
pusha
mov
shrb
add
sub
mov
xchg
shl
stos
mov
leave
sbb
adc
out
nop
xchg
cs
xchg
arpl
pop
cmp
push
pushl
inc
decl
adc
stos
stos
mov
xchg
loopne
adc
jnp
call
jle
inc
cld
mov
pushf
and
nop
mov
inc
fildll
add
mov
sbb
clc
std
lea
inc
cld
pop
loopne
dec
les
sbb
lahf
xorb
inc
mov
xchg
pop
sub
xchg
and
mov
ja
xchg
icebp
xchg
sub
js
sti
es
insb
pop
addb
cmpsl
fiaddl
and
inc
sbb
add
dec
add
sub
sbb
xor
push
das
aam
subps
pop
dec
cmpsb
inc
mov
scas
jb
cld
loopne
call
xor
or
ds
shrl
add
add
js
xor
adc
lret
rorb
test
xor
ret
ss
cmp
repz
adc
mov
js
divb
mov
lods
jb
sub
lea
lcall
lods
jmp
jp
inc
daa
xchg
je
push
and
adc
ret
push
cmpsb
push
daa
jne
test
and
test
and
shl
push
adc
inc
lds
lcall
adc
push
loopne
aaa
mov
arpl
sbb
sbb
cmpsb
lcall
pop
push
pop
add
test
jmp
out
call
cmpsl
mov
jg
sbb
inc
push
adc
push
jl
xchg
add
loopne
ret
fsubrs
xor
jae
push
jns
dec
cmp
mov
pop
mov
fimull
xlat
sahf
loop
add
cltd
loopne
pop
mov
negb
or
in
xchg
or
inc
repz
sub
mov
ret
aas
dec
test
cmp
std
pusha
icebp
push
sub
inc
push
dec
jbe
inc
or
dec
or
arpl
sarb
and
sbb
or
lea
outsl
pop
add
andb
xor
int
fdivs
pop
ds
aas
out
adc
sub
xor
nop
xchg
mov
insb
and
dec
pop
sub
adc
cmpsl
mov
je
push
mov
or
leave
mov
and
and
mov
xchg
cli
mov
mov
fucom
jno
stos
sub
push
mov
fs
pushf
js
shrb
js
les
imul
and
je
movsb
cmp
xchg
lock
testb
push
sahf
push
push
test
enter
outsb
loopne
js
mov
aas
push
push
adc
adc
mov
ds
jp
inc
daa
jg
gs
mov
aas
inc
pop
sbbl
and
nop
lret
shll
insb
and
sbb
ja
dec
pop
mov
out
or
shl
ret
push
stos
adc
testb
call
test
and
inc
push
pushf
addr16
push
outsl
pop
test
mov
pop
xchg
adc
mov
pop
push
movsl
cmpl
sbb
js
subl
out
cmpb
jb
fnstsw
test
cli
or
jne
xchg
cmovns
mov
add
fucom
incb
push
imul
movsb
sbb
pop
insb
enter
mov
sbb
sbb
daa
cld
rolb
adc
scas
push
jno
adc
jno
das
nop
jbe
out
fcmove
push
xor
ds
inc
sbb
xchg
popf
push
push
addb
mov
jmp
aad
cmp
mov
push
sbb
adc
cmp
ds
and
pusha
inc
loopne
or
push
fs
out
test
adcl
cmp
dec
jle
in
scas
dec
in
mov
sub
movsb
sets
cld
push
sbb
ror
dec
sub
bswap
mov
sahf
out
xor
add
add
sbb
jg
sbb
fsubs
push
inc
ss
mov
ljmp
jae
mov
inc
pushf
ds
jne
das
or
and
dec
rorb
inc
xlat
inc
hlt
inc
ja
int3
je
xchg
ficoml
adc
shll
add
fsts
loope
dec
mov
movsl
test
xchg
bound
xchg
in
sbb
xchg
mov
out
cwtl
orb
loopne
das
add
mov
fldt
cs
jge
add
sahf
bound
jb
jbe
out
mov
sbb
push
mov
cli
js
push
cmp
lcall
pop
xor
xchg
sbb
out
les
inc
cli
test
jge
adc
mov
and
mov
les
mov
xor
sbb
xchg
ja
xor
fwait
xor
cltd
push
mov
mov
dec
add
pop
leave
mov
testl
jo
mov
cmpsb
cld
xor
mov
inc
adc
xchg
push
sarl
sbb
test
and
or
insb
cwtl
inc
xlat
pop
pop
adc
adc
out
mov
arpl
jo
insb
push
test
mov
lock
insb
pushf
or
mov
sbb
aam
sbbb
lods
jns
mov
push
pop
das
mov
sti
mov
sar
outsb
pop
inc
call
hlt
add
sbb
mov
jbe
xchg
sbb
adc
mov
push
mov
dec
push
inc
pop
add
and
popa
fs
pop
fbld
lods
xchg
idiv
stos
jle
sub
shlb
push
xor
sbb
mov
push
ret
aas
mov
test
push
or
mov
stos
cmp
cmp
mov
in
xor
stos
std
mov
lcall
ja
int
mov
jg
or
xor
mov
fstps
xchg
mov
dec
mov
lea
mov
pop
push
test
addr16
cmc
mov
add
and
jbe
negb
jne
lock
in
pop
aad
and
lcall
out
test
das
aam
sub
xor
mov
rol
cmpb
shr
adc
pop
incl
adc
and
jo
bound
addb
dec
pop
pushl
adc
cmpsl
xor
scas
mov
mov
sbb
cmp
sub
inc
flds
hlt
cmpsb
mov
pop
fists
movsb
daa
cwtl
sub
dec
xor
fdivrs
out
xchg
scas
jb
xchg
xchg
sbb
popf
sub
jmp
dec
cmp
mov
xchg
addr16
fiaddl
lret
mov
nop
fs
subb
pushf
imul
or
add
push
cmp
fcompl
loope
xchg
ret
jae
das
enter
pop
leave
jmp
das
addb
sbb
mov
out
push
xchg
sbb
jmp
push
or
xchg
jmp
aas
xorb
inc
aaa
icebp
or
dec
ss
add
jg
test
add
data16
xor
aaa
insb
gs
divl
jmp
scas
mov
adc
jb
aas
or
fcmove
test
hlt
xchg
pop
xor
add
fs
inc
shrb
cmc
adc
cmp
aas
pushl
imul
xchg
pop
add
add
or
lret
push
clc
mov
out
in
pop
lods
mov
mov
das
or
xor
xor
insl
or
repz
xor
jo
cmpsb
jge
out
daa
mov
mov
inc
orl
js
inc
xor
fcomip
xor
fs
pusha
test
and
mov
inc
dec
repz
mov
cwtl
jo
mov
adc
mov
scas
mov
xor
xlat
testl
ficoml
push
incl
sarl
dec
test
mov
push
pop
cld
je
mov
call
mov
lret
push
push
xorb
in
rcrb
loop
mov
mov
xor
shlb
sbb
outsb
cmp
aas
ds
mov
std
test
or
daa
mov
je
mov
xchg
lock
push
pop
adc
cmp
sarb
inc
mov
orl
mov
gs
mov
lahf
sub
sub
clc
dec
lock
mov
pop
mov
mov
push
fsubs
cmp
cli
cmp
gs
pmuludq
out
xor
add
inc
add
adc
mov
inc
pusha
and
mov
fs
add
sarb
gs
mov
cmc
addr16
pushf
dec
fwait
out
jo
mov
pop
xor
adc
js
pop
lret
mov
jl
jp
add
mov
or
add
sub
sub
dec
sub
ret
xchg
lds
and
fisttpll
or
jg
dec
rcrb
cwtl
out
es
cs
cmp
es
shl
push
push
cli
push
popa
lret
imul
sub
jle
jg,pt
stos
lret
or
popa
or
jb
paddw
or
fiaddl
das
jns
mov
mov
xor
sarl
mov
lods
dec
nopl
ret
pushf
or
dec
cmp
scas
lods
and
or
mov
push
mov
pop
push
cmpsl
ficoms
scas
xorb
mov
sbb
rorl
inc
add
iret
insb
hlt
clc
mov
dec
add
cmc
shl
dec
jo
lcall
loopne
jge
mov
fisubl
pop
xor
xor
sahf
movsl
stos
lock
sub
mov
pop
test
mov
lods
mov
jo
inc
mov
bound
push
mov
fisubl
adc
add
popf
xchg
decl
in
jae
in
cmp
fs
nop
jg
cmpsb
sbb
pushf
outsb
pusha
cwtl
js
sub
into
xchg
sti
add
xchg
pop
lret
jae
orl
sbb
loopne
mov
cmp
ljmp
std
inc
pop
in
inc
xchg
jb
adc
dec
dec
lea
and
movsl
mov
loopne
out
in
stos
jns
sbb
sub
repnz
inc
loopne
clc
cmp
add
shll
xor
mov
or
add
lods
aaa
test
sbb
adc
rclb
and
vmovntps
daa
aam
pop
adc
test
in
xchg
push
push
js
jne
dec
xor
cmc
cld
pushf
fsub
dec
rcll
dec
push
xor
inc
leave
cmp
mov
pusha
mov
pop
sub
subl
sar
push
add
out
push
jne
aam
sub
sub
lcall
jo
adc
jne
inc
out
insb
jo
add
push
cmp
and
fcoms
leave
into
insl
faddl
fs
and
jo
fucomi
aaa
or
add
leave
out
iret
adc
sahf
push
cld
inc
cmp
inc
or
dec
test
jl
hlt
and
outsl
loop
and
daa
pop
push
cmovae
stos
mov
inc
cmpb
mov
jbe
pop
push
add
mov
fcomps
sbb
sub
dec
shr
xlat
dec
cli
mov
mov
sbb
adc
or
cmp
lcall
test
dec
or
das
push
pop
jl
mov
xchg
push
and
dec
inc
jg
out
bound
out
mov
sub
and
in
inc
rorb
outsb
bound
test
pop
xchg
xor
fstpl
jb
push
push
push
jo
cmp
and
jg
mov
ret
xchg
inc
ss
js
mov
cwtl
lods
xchg
xchg
clc
cmpsb
and
hlt
add
mov
mov
fwait
push
sub
mov
es
sbb
sbb
test
sbb
dec
enter
pop
mov
stos
sbb
add
mov
sti
daa
pop
add
mov
ja
push
xor
and
pusha
push
jge
fiadds
pop
dec
rorl
cmc
adc
into
dec
or
ds
mov
mov
xor
xor
sub
and
popa
mov
xchg
xor
pop
andl
push
mov
in
addr16
push
shrl
outsb
add
push
repnz
pop
push
movsb
mov
jae
imulb
adc
push
test
aad
adc
ds
rolb
add
xchg
add
push
push
into
jg
shlb
sarb
dec
or
mov
imul
stc
mov
into
and
adc
adcb
add
mov
ja
mov
push
adc
lock
jmp
cmc
ss
jp
in
sbb
decb
push
imul
jnp
fisubl
cmp
add
jecxz
mov
inc
shrl
fiadds
push
pop
or
sub
add
sahf
adc
inc
aam
xchg
lahf
sbb
and
sub
push
aad
adc
pop
ljmp
repnz
jl
mov
stos
fisubrs
das
addl
inc
fwait
sbb
cli
rclb
cmp
filds
das
mov
xlat
add
loope
inc
mov
lock
rep
clc
sbb
clc
sbb
xor
push
fisubs
stos
sub
add
lods
and
leave
shr
insl
ficomps
insb
push
add
xchg
sbb
and
mov
aas
cmp
test
mov
clc
xchg
cli
xchg
inc
test
cld
sbb
loopne
out
ficoml
pusha
sub
sub
loop
rcr
and
lods
push
das
in
and
xor
imul
rclb
pushf
filds
std
pop
mov
mov
mov
jl
arpl
in
mov
sbb
jb
mov
int
pop
pop
cmpsl
inc
fdivr
mov
scas
mov
mov
mov
pop
jp
aaa
loop
sbb
pop
xor
ret
fucom
and
jbe
xor
jne
xor
inc
adc
loope
push
aas
outsb
pop
fisubrl
test
fidivrs
jb
inc
xchg
add
push
cmp
negb
fisubrl
nop
or
bound
pop
es
jnp
jecxz
push
push
pop
adc
add
dec
popl
pop
cmp
inc
fidivs
les
lods
int
add
arpl
sbb
lods
sub
sub
sub
mov
inc
cmp
mov
aam
movsb
jg
jl
fisubrl
cmp
jle
and
inc
insb
fpatan
sti
rcl
add
push
inc
inc
pusha
stos
popf
outsb
js
or
test
fisubl
icebp
sbb
push
adc
je
pop
loope
and
mov
or
pop
mov
mov
lods
stos
adc
rclb
loopne
dec
push
dec
sub
je
nop
sub
or
push
std
ds
inc
lods
int
adcl
sbb
fdivrs
inc
cmp
jns
inc
xchg
rclb
push
mov
sbb
scas
lock
cmc
clc
into
cmpsl
in
outsl
in
fwait
cmp
push
fbld
push
test
flds
ret
cmpsl
sub
cmp
ret
aas
jg
jno
pop
push
scas
adc
xor
inc
add
incl
shr
add
and
inc
inc
xchg
mov
lcall
out
inc
and
push
pop
jno
mov
fimull
aam
lock
aas
pop
clc
aaa
ret
mov
mov
in
stc
mov
mov
fbstp
out
cli
add
jecxz
sbb
ret
movsb
loopne
flds
or
xor
ror
cwtl
fists
add
jb
sub
loopne
pushf
stos
fdivp
sub
lods
sub
mov
ds
pusha
lds
xor
mov
fidivrl
pop
test
std
pusha
test
addb
xchg
push
jmp
arpl
fimull
pop
mov
push
cmp
pop
pop
or
clc
fidivl
inc
in
add
es
ficomps
orb
add
jno
push
pusha
das
dec
adc
mov
or
inc
hlt
sbb
push
add
test
sbb
sbb
cmc
mov
das
scas
push
enter
jmp
in
xor
outsl
pop
test
loop
or
int3
rcr
aam
outsb
in
cmp
adc
pop
xor
push
cld
popf
repz
dec
fs
push
inc
lret
hlt
cmp
outsb
or
add
nop
rorb
sbb
loop
imul
xchg
push
rcll
add
mov
aam
fdivrp
push
sbb
inc
hlt
iret
and
cmp
shrb
sbbb
xor
push
filds
pop
xchg
add
mov
xchg
mov
adc
add
inc
inc
fs
push
clc
into
ss
rorb
lods
lea
cmc
sub
js
popl
out
pop
aad
sbb
je
mov
lds
dec
sub
je
jnp
mov
data16
adc
adc
push
jno
adc
adc
lods
fadd
lods
or
dec
inc
mov
rorb
loope
mov
xchg
or
cmpb
jp
data16
movsb
fdivp
loop
xor
icebp
dec
test
dec
inc
bound
cwtl
or
das
fimuls
add
std
mov
pop
mov
adc
dec
sbb
mov
lret
lock
adc
mov
jo
outsb
ret
add
or
mov
add
hlt
in
daa
xor
push
and
test
dec
xchg
jbe
inc
movsb
mov
bound
mov
sbb
add
cmpsl
sub
out
ret
loop
push
mov
inc
xlat
popf
andl
popa
sbb
cmp
lds
out
cmpsb
aad
mov
ret
incl
test
into
push
fistpl
add
out
pop
push
mov
push
cwtl
enter
std
jp
mov
mov
cmpsb
hlt
sbb
jnp
xor
and
sbb
or
ds
movsb
lods
daa
push
mov
loopne
sub
adc
clc
jae
xchg
push
pop
push
in
or
lds
shll
push
push
or
cmc
sub
movsb
bound
mov
lods
insb
bound
pop
add
fildll
dec
pop
mov
out
mov
jno
or
out
js
repnz
out
add
mov
pop
pop
out
mov
push
in
jb
sahf
lods
xorb
fnstenv
push
sub
js
dec
cmp
mov
test
dec
add
sub
fdivr
pop
test
push
fisubrs
or
outsb
adc
out
xchg
mov
inc
movsl
adcb
lods
fistpl
xor
pop
rcr
mov
daa
xchg
js
mov
xchg
cmp
ljmp
jle
pop
std
dec
int
add
inc
sub
decl
xor
mov
mov
jmp
mov
scas
xor
push
jb
sbb
ds
dec
fsubl
jg
stos
xor
lahf
pushf
mov
ja
lahf
or
in
xor
ret
mov
pop
push
pop
pop
cmp
add
gs
pop
inc
ljmp
sahf
repz
adc
xor
xchg
rcr
lods
mov
inc
push
fistpll
int
aam
cmp
or
and
bnd
inc
pop
jb
sbb
and
ret
inc
dec
mov
cwtl
add
jg
sbb
inc
mov
pop
push
insb
cmp
pop
les
xchg
cwtl
test
popf
ret
ja
and
data16
lcall
sub
pop
or
aam
jg
mov
enter
pop
push
lock
jmp
sub
cmp
sbb
push
cli
dec
jbe
jnp
mov
in
repnz
out
pop
push
dec
fiaddl
daa
add
sub
adc
icebp
sti
xchg
sub
xchg
sbbb
xor
outsb
xchg
xor
sbb
aad
call
add
cmpsb
jle
pusha
jle
pop
int3
ja
or
sbb
cmp
xor
or
jge
incb
fmull
or
mov
dec
mov
pop
or
jo
mov
out
add
dec
dec
int
inc
aam
andb
add
sbb
mov
pop
aam
pop
cld
int
push
pop
aam
dec
stos
add
cmp
dec
sbb
pop
add
mov
mov
iret
cmpsl
xchg
scas
adc
in
adcb
shrb
adc
js
test
mov
popa
mov
les
das
lds
dec
mov
roll
test
cmp
xchg
mov
or
push
stc
std
mov
aaa
mov
dec
orb
stos
jno
mov
sbb
mov
dec
xchg
fwait
mov
pop
cli
clc
hlt
nop
jg
sub
or
int
lret
ss
jle
hlt
mov
push
sub
push
vmovd
jo
shll
mov
jle
fidivs
jns
int3
dec
arpl
aam
mov
and
cmpsl
pop
push
pop
xlat
mov
push
xchg
push
pop
pusha
in
cld
or
lcall
or
mov
mov
popf
mov
sbb
xchg
xchg
xor
or
imul
ss
jecxz
pusha
scas
xor
hlt
addr16
lds
jmp
jne
pop
icebp
jae
mov
mov
sahf
insb
jle
push
negl
add
fidivrs
scas
mov
cmp
hlt
sahf
jo
es
mov
shlb
pushf
aam
add
orl
in
js
add
test
push
cmp
add
jecxz
or
add
xchg
cmc
pop
sahf
xor
mov
mov
inc
or
add
nop
mov
movsl
sbb
ljmp
xchg
imul
mov
and
push
into
or
jp
mov
ss
in
ret
mov
hlt
repz
js
and
fwait
mov
sar
fidivl
out
ret
inc
inc
xchg
mov
jo
xor
in
andl
shrb
mov
cmp
mov
aad
push
or
decl
ds
jecxz
xchg
stos
sbb
inc
addr16
or
push
adc
hlt
in
sbb
lock
ret
clc
xorb
repnz
out
push
sbb
ret
cli
xchg
mov
movsl
sbb
pusha
pop
das
jbe
imul
loopne
jno
adc
addr16
fs
jl
push
add
cld
sarl
cs
nop
dec
mov
push
vpshufd
mov
jno
stc
pusha
pusha
mov
adc
js
adc
imul
in
shl
dec
xor
cli
push
gs
and
adc
pop
add
pop
jle
mov
lods
push
sarb
mov
movsb
dec
dec
clc
cwtl
cmp
loop
and
dec
mov
adc
cli
cs
insl
lds
or
hlt
fwait
test
mov
daa
mov
add
outsl
inc
push
add
out
loope
je
mov
dec
mov
xor
push
popa
ljmp
mov
mov
nop
push
pop
mov
cltd
add
shrd
mov
inc
sbb
ret
inc
out
movb
mov
test
lock
add
leave
in
and
paddsb
jp
pop
xchg
sbb
stos
adc
insb
dec
push
mov
sbb
out
pop
push
out
subb
pop
rcrb
daa
into
les
jb
addr16
add
lahf
mov
stos
mov
or
add
mov
aad
xchg
mov
sahf
or
xlat
ljmp
pusha
mov
les
addb
dec
xchg
and
push
xorb
pop
lock
rolb
jb
movsl
ljmp
popf
clc
rcrb
aam
mov
jmp
or
insb
or
in
mov
pop
inc
jl
mov
pop
sbb
movsl
mov
xchg
popa
mov
mov
popf
push
sbb
and
loope
cwtl
mov
adc
ja
mov
dec
add
movsl
fsubrs
ja
ret
push
out
bound
addr16
sub
shll
test
fwait
push
es
sbb
ret
adc
push
in
pop
rolb
scas
in
add
dec
into
inc
xor
arpl
dec
data16
ret
jge
pop
repnz
fadds
and
test
mov
xor
ss
push
insb
adc
add
clc
cmp
loopne
adc
push
iret
sub
inc
arpl
cli
jp
add
mov
sub
sar
mov
dec
ret
jp
std
sub
hlt
cmp
mov
mov
or
call
fistpl
call
mov
push
dec
test
mov
popf
in
les
and
xchg
fs
and
pop
in
lret
sahf
xor
addb
xor
mov
sbb
pushf
movsb
or
push
mov
mov
inc
xor
mov
push
ret
adc
xor
and
mov
xor
xor
js
stos
sbb
andl
push
mov
or
test
mov
shlb
xchg
push
test
push
mov
sbb
cmp
aad
cld
xor
xchg
gs
or
icebp
dec
sahf
daa
loop
xor
inc
mov
inc
mov
mov
sub
test
outsl
dec
fstpt
push
push
xlat
or
gs
push
mov
push
or
outsl
sbb
dec
push
mov
inc
xchg
jb
adc
mov
insb
adc
dec
pop
stos
mov
xor
or
add
shrl
repz
cld
or
mov
mov
sbb
jg
push
jbe
pop
repz
movsb
idivb
and
std
sbb
pop
stc
repz
bound
fwait
jno
inc
add
scas
adc
sbb
je
sbb
jo
into
push
lock
insb
jb
sub
sbb
inc
hlt
nop
lret
xor
and
les
mov
test
xchg
sbb
loop
inc
cs
sbb
stos
pop
xor
push
js
inc
jne
stos
inc
adc
adc
lods
sub
rcl
je
mov
push
ds
xor
add
enter
mov
jmp
ss
sbb
cmp
int3
insl
movsb
sub
aad
or
popa
mov
mov
pslld
pop
xor
rcr
aaa
push
js
mov
xchg
inc
insl
daa
adc
xchg
and
fnsave
mov
sbb
and
aam
mov
das
clc
movsb
sbbb
jp
add
xor
pop
lcall
shlb
mov
ret
jae
add
es
push
cltd
loop
loopne
into
cmp
hlt
and
test
sub
cwtl
add
loop
test
stc
adc
add
out
mov
and
inc
lret
icebp
jnp
call
nop
stos
cmp
add
cli
xchg
push
cwtl
cmp
mov
icebp
hlt
jbe
push
cs
and
in
mov
sti
dec
xor
sub
cmpsb
loop
frstor
xchg
lret
or
roll
mov
repnz
int3
xchg
push
xor
mov
push
jno
rclb
adc
jne
inc
lock
jle
cli
ljmp
mov
xchg
mov
sbb
add
ret
mov
mov
hlt
test
sbb
sbb
outsl
loop
sar
xchg
stos
and
push
cmp
xor
adc
lods
test
mov
das
fcomi
adc
loope
or
jp
mov
mov
dec
cltd
leave
dec
xchg
add
je
xchg
sbb
xor
lahf
es
adc
cld
mov
mov
sub
mov
cmp
decl
nop
flds
or
jns
jo
inc
or
add
push
das
add
dec
cld
inc
nop
loop
mov
pop
push
push
and
cmpsl
lahf
pop
fcmovnb
addb
mov
xor
cwtl
mov
xchg
sbb
popa
fldt
pusha
repnz
add
mov
out
or
pop
sarl
cmp
mov
mov
dec
push
mov
pop
hlt
adc
jne
mov
shll
and
adc
call
mov
ss
fildl
lcall
jb
inc
push
decl
iret
pop
and
pop
inc
add
mov
dec
push
xorb
sbb
imul
sarb
sbb
mov
cmp
xor
mov
or
test
inc
sbb
xchg
divl
or
add
pop
inc
inc
lods
jmp
aaa
mov
cmc
leave
ss
cmp
push
insl
je
stos
lods
mov
push
cwtl
fsubs
cs
lret
inc
je
or
enter
jb
sbb
adc
mov
aas
push
mov
xchg
outsb
mov
incl
out
mov
lret
or
call
push
lds
cmp
mov
add
and
call
test
xchg
xchg
push
push
nop
lock
loop
out
cmc
mov
testl
icebp
int
std
and
mov
hlt
pop
add
jb
inc
test
fldt
xor
mov
les
ret
xchg
cs
cmpsl
or
mov
pop
jge
push
mov
mov
push
ja
int3
inc
sbb
push
xlat
and
push
loopne
mov
dec
scas
pop
lods
lea
sarb
add
xchg
jle
pop
imul
bound
mulb
out
sbb
daa
in
inc
push
rclb
xchg
or
movsb
ja
jo
sbb
shlb
xchg
xchg
addb
repz
mov
por
fadds
mov
inc
mov
out
sbb
xor
ds
lods
mov
sub
xchg
sub
and
jmp
sbb
int3
pusha
ds
scas
insb
mov
pusha
outsb
cmc
inc
pop
test
push
mov
pusha
jmp
movsb
ret
loopne
or
mov
inc
sub
jmp
push
out
addr16
xor
jb,pn
jno
mov
mov
xor
pop
mov
or
add
push
inc
test
sub
outsb
movd
outsb
fsubrl
cli
xorb
inc
or
xchg
cmc
add
data16
cmpsl
mov
lahf
cli
shll
sbb
orb
mov
xor
sub
fisubrl
mov
int3
aad
jmp
dec
cmp
lahf
movsb
pop
sbbb
sahf
lock
cmp
jp
jne
daa
pop
push
sub
xchg
loop
lock
rclb
push
outsl
mov
fadds
ret
mov
mov
neg
stos
das
jnp
insb
test
mov
or
popf
xor
and
jecxz
outsb
mov
fcoml
xchg
push
mov
scas
mov
mov
hlt
rclb
mov
add
mov
or
adc
jb
in
sbb
mov
push
inc
idivb
into
rcrb
rcrb
adc
inc
setbe
fldt
pop
add
sub
mov
xor
arpl
rcr
mov
add
or
mov
fldt
adc
adc
xor
sbb
hlt
cmc
les
cmpsb
add
inc
lock
loopne
mov
ss
in
pop
into
lahf
les
loopne
in
mov
jge
mov
scas
outsb
or
push
roll
out
push
dec
inc
mov
push
mov
rclb
cmpsb
adc
scas
pop
shll
mov
push
xor
ds
sub
push
fidivrl
lcall
mov
lret
bound
movsl
sub
aas
mov
les
mov
or
push
inc
mov
push
lret
jle
adc
iret
clc
call
adc
cltd
mov
nop
lret
dec
pop
xor
out
neg
or
mov
sbb
outsl
fucomi
mov
test
add
cwtl
pusha
cli
jo
nop
inc
cld
jecxz
rcrb
mov
sbb
jge
or
xchg
arpl
mov
repnz
sbb
mov
inc
test
jl
daa
mov
add
push
xchg
sub
ret
je
mov
into
insb
imul
pop
shlb
lahf
dec
and
add
sbb
mov
or
push
shll
addl
divb
mov
add
dec
movsb
mov
jp
jl
mov
mov
mov
jo
push
not
testb
test
in
loop
sbb
repnz
pop
imul
mov
in
out
je,pt
lret
mov
adc
ljmp
add
xor
inc
jno
clc
clc
rcrb
sbb
cmp
or
push
das
pop
lods
sbb
push
fiaddl
sbb
lret
sbb
dec
les
push
adc
stos
clc
sahf
xorl
mov
mov
add
sbb
push
sub
pop
mov
mov
and
repnz
pop
mov
cmp
das
jle
mov
ret
out
cli
cmpsb
add
xchg
jns
lods
mov
push
push
xlat
push
insl
mov
fimuls
test
fs
sbb
inc
fs
clc
jmp
ror
rcrl
or
xor
sub
sub
add
std
or
mov
jl
sbb
pop
sbb
stos
sub
xchg
cmp
ljmp
xchg
cli
or
xchg
jle
jno
enter
pop
xor
push
and
les
pop
cli
arpl
loopne
mov
mov
repz
push
adc
loopne
je
rclb
cld
push
cli
sub
out
mov
jp
mov
adc
cwtl
add
push
dec
orb
iret
mov
loopne
out
push
shl
sahf
inc
mov
mov
out
jbe
adc
dec
add
push
lock
dec
sbb
test
fstps
add
adc
push
test
inc
ret
loopne
shrl
fstpt
inc
dec
stos
icebp
cld
ljmp
cmpl
mov
sbb
jo
xchg
fnstsw
jbe
faddl
adc
mov
xchg
loopne
call
pop
pop
pop
ret
les
pop
xchg
mov
cmp
pushf
adc
pop
xchg
loopne
mov
or
cmp
fdecstp
push
test
mov
cmp
out
mov
into
and
dec
push
cs
loop
jmp
movaps
es
inc
jo
push
jecxz
sub
stc
cmpsl
cmc
stos
mov
bound
or
jl
pop
loope
adc
icebp
or
jno
or
cltd
mov
cmpb
rolb
clc
mov
aam
js,pn
push
mov
jmp
add
scas
sbb
in
inc
mov
mov
cmpsl
or
shlb
shrl
out
add
cmp
fdivp
jmp
mov
add
xor
into
ljmp
or
stos
outsl
or
lcall
sbb
dec
xor
ljmp
test
adc
sub
aad
jle
rol
dec
add
jo
scas
inc
pop
xor
push
adc
fdivrs
add
repnz
adc
repz
dec
dec
sbb
scas
sub
cmp
mov
jle
out
and
into
neg
jl
inc
addr16
or
jns
pushf
lock
mov
cli
xor
push
fsubs
or
loopne
sbb
adc
add
leave
push
mov
cs
imul
sub
lret
icebp
mov
mov
fwait
sbb
pop
loope
aam
mov
mov
cmp
pop
ret
jae
xchg
mov
ds
push
pmaddwd
adc
inc
aad
adc
and
inc
sbb
adc
ss
mul
inc
push
jg
movsb
dec
cs
push
insl
outsb
xor
rolb
stos
push
xchg
pushf
lahf
pusha
test
cld
or
xor
fs
outsb
lea
hlt
orb
add
lahf
femms
dec
mov
cwtl
mov
inc
pop
and
or
adc
ret
rolb
and
adc
loopne
cmc
rorb
push
or
and
in
dec
fsubl
mov
subb
jo
cld
sub
loopne
pusha
std
sub
icebp
test
xor
pop
ja
or
mov
sbb
pop
jp
cmp
mov
fistpll
notl
decb
sub
cmp
test
cmpsl
hlt
repnz
jb
ljmp
sbb
test
mov
push
js
mov
shrb
sti
ror
cltd
and
jo
sub
mov
xor
push
fucomi
pop
xchg
lcall
add
cs
fcoms
pop
cwtl
and
xchg
and
pop
mov
cmpsl
xor
cmp
mov
mov
push
shlb
sbb
mov
jmp
mov
sbb
xchg
test
mov
and
mov
cmp
pop
subb
mov
cli
scas
add
push
or
xchg
lods
cmc
sbb
loope
jmp
lods
inc
lahf
nop
xchg
add
rcrl
jnp
pop
or
push
insl
mov
mov
add
imul
mov
adc
mov
bound
adc
inc
cmp
sub
pop
ret
dec
dec
xchg
pop
ds
adc
test
ljmp
insl
les
lea
push
in
pop
pop
fiaddl
dec
add
movsb
adc
adc
and
inc
cmpsb
imul
into
scas
scas
push
pop
and
jo
clc
mov
out
and
jne
mov
addr16
cmp
push
sub
xchg
jmp
mov
mov
jmp
aad
call
adc
push
lods
mov
fmul
scas
aam
sub
fcomip
push
dec
fdivrs
add
push
test
mov
aad
mov
stos
test
js
cs
mov
mov
inc
mov
sub
enter
cmpsl
mov
int
push
cli
test
mov
lock
popf
popa
daa
and
jp
mov
ds
jg
cmpsl
insl
clc
bswap
mov
pop
popf
scas
out
adc
or
lret
or
loope
xor
jae
add
stc
adc
imul
mov
daa
mov
mov
shll
fadds
in
pop
cwtl
je
jp
push
jge
hlt
push
mov
addr16
mov
test
mov
iret
outsl
mov
lea
insl
push
cmpb
add
insl
and
shrl
adc
mov
sbb
mov
cltd
cli
loope
push
jns
dec
jg
test
jne
pop
cmp
lock
add
jmp
adc
sbb
es
jno
adc
out
stc
or
jp
dec
test
cmpsb
lock
es
test
fwait
pop
mov
dec
ficoms
clc
enter
mov
cs
cmp
push
shrb
stos
addr16
push
test
mov
stos
or
mov
pop
cs
mov
ljmp
enter
stos
mov
or
jge
and
cmp
jl
cltd
inc
lahf
mov
dec
fwait
or
push
add
push
or
cmc
mov
or
mov
test
aas
nop
add
add
mov
mov
frstor
pop
push
push
in
sahf
ljmp
loope
jnp
dec
cmpsb
or
mov
scas
add
mov
cmp
xor
cmpsl
xchg
xor
frstor
pop
cli
pop
add
mov
icebp
add
outsb
cmp
incl
dec
xchg
or
sub
aaa
jl
imul
jle
cmp
jecxz
lock
repnz
mov
sub
xchg
dec
mov
orb
sbb
jne
test
mov
add
mov
dec
test
add
pop
mov
outsl
inc
sub
adc
adc
cld
ljmp
fst
or
scas
mov
test
dec
repnz
icebp
fwait
mov
aaa
leave
inc
xchg
mov
stos
pop
xor
rcrb
cli
xchg
adc
adc
adc
daa
jmp
adc
arpl
pop
idivl
add
cmp
in
sbbb
sti
outsb
sub
pop
jle
aam
xchg
push
push
rcll
or
std
lret
push
xlat
mov
ficompl
dec
rolb
dec
push
aas
inc
mov
icebp
shll
mov
and
push
cmp
xchg
push
or
scas
xor
push
mov
push
mov
push
fwait
pop
jb
lods
mov
fdivp
xchg
xchg
movsb
cmpsb
cmp
pop
nop
add
lock
stos
or
jo
ja
xchg
adc
hlt
xor
inc
and
scas
mov
pop
inc
mov
or
or
bound
xchg
or
jno
fisubrs
mov
jle
es
xor
ror
mov
or
frstor
push
clc
rcrb
pop
dec
xor
dec
push
das
js
movsb
sub
pusha
mov
push
divb
pop
sti
push
mov
xor
ficoml
mov
push
cltd
xchg
mov
jecxz
lea
mov
je
enter
test
dec
mov
adc
rclb
adc
mov
test
mov
push
pop
inc
mov
xor
loopne
scas
mov
dec
outsb
jg
pop
mov
inc
lcall
add
push
and
and
dec
adc
mov
bound
dec
mov
fsubl
xchg
ss
mov
je
sub
cmp
nop
loopne
cmp
mov
add
test
jl
xchg
dec
loop
add
movsb
lods
faddl
lods
unpckhps
mov
cmp
jo
add
pop
and
cltd
xchg
je
stos
push
adc
pop
adc
insl
pop
inc
nop
stos
pop
rcl
xchg
sbb
dec
mov
mov
inc
je
jne
cmp
cmp
call
movsl
or
mov
and
lock
xor
xorb
frndint
xchg
jae
xorb
test
int
and
fisttpl
inc
mov
jle
sahf
sbb
scas
cmp
push
mov
lds
cmc
adc
mov
adc
fidivrl
and
mov
rorl
dec
pop
sbb
cmp
rolb
push
push
xchg
mov
adc
stos
inc
mov
or
daa
mov
sbb
andl
xor
sar
test
rorl
push
sbb
push
sub
xor
or
or
jl
lock
int3
mov
jl
lock
adc
fcomps
mov
mov
mov
xor
mov
xchg
adc
xlat
mov
sahf
and
aam
shl
and
dec
push
push
shrb
mov
dec
mov
push
testb
pop
or
push
repz
ja
rol
stos
dec
jae
push
sbb
xchg
fcoms
inc
pop
in
filds
dec
push
nop
les
lret
xor
pop
les
pushf
loopne
adc
das
mov
shlb
xchg
mov
adc
push
sbb
pop
xor
xchg
mov
jae,pt
lock
mov
adc
loopne
in
xor
mov
data16
fidivs
jle
sarl
and
adc
push
les
dec
inc
jge
xor
adc
pop
pop
pop
adc
fstl
jge
imul
and
push
cmp
imul
fwait
sbb
adc
sbb
mov
inc
lods
add
mov
pop
inc
pop
test
pop
fdivs
adc
adc
mov
jno
and
jns
and
add
repz
sbb
mulb
dec
jp
push
js
fldt
faddl
insb
cld
in
push
cmp
pop
mov
mov
mov
ret
imull
pop
mov
sbb
xchg
aas
mov
das
push
add
movsb
sub
adc
ffree
dec
sbb
sub
mov
aaa
movsb
divl
and
xor
push
ja
sbb
sub
lea
lods
mov
fisttps
xchg
push
push
lea
clc
into
xchg
ret
cmp
imul
adc
jge
addb
mov
xor
add
stos
xlat
out
dec
in
inc
xchg
fucom
mov
sahf
negb
push
shl
jo
stos
aam
dec
idiv
je
lods
fcmovnu
popa
loop
test
test
xor
sbb
clc
mov
test
pop
mov
aam
jle
imul
jne
int
mov
aas
push
clc
into
mov
push
mov
pushf
pop
pop
nop
sub
popf
loopne
les
xchg
pop
je
lds
jl
mov
lds
repz
inc
ljmp
adc
cli
lock
dec
inc
push
mov
loopne
mov
mov
xor
es
test
cmp
inc
hlt
pop
mov
push
adc
fadd
push
xchg
enter
jle
aam
jo
xchg
mov
fs
scas
sub
fisubs
test
enter
aas
and
mov
fnsave
or
cwtl
jmp
pop
js
cmp
inc
test
loope
lock
shll
pusha
arpl
mov
pop
pop
push
sub
fdiv
cmc
cmpb
xor
aam
jl
mov
inc
xchg
mov
add
sub
inc
mov
mov
js
push
lcall
sbb
mov
cmp
mov
inc
lock
es
push
and
pop
lret
jl
lods
jl
pushl
sahf
je
adc
fmuls
cmp
pop
and
cltd
ja
xchg
push
mov
cmp
pop
lock
clc
mov
sbb
jno
je
das
cmp
icebp
mov
fs
push
nop
mov
aas
dec
jo
push
shrl
call
jno
outsb
incb
pop
std
loopne
fnstenv
and
push
mov
adc
inc
adc
mov
fprem
adc
mov
cmpb
inc
popa
jp
and
je
test
clc
mov
mov
outsl
push
lock
jg
sbb
ds
rol
jne
sub
cld
popa
pop
xchg
jp
add
call
sbb
mov
xor
sbbl
inc
sub
ds
or
gs
outsl
dec
fsubrs
ss
pop
add
hlt
das
dec
sub
jp
daa
lods
push
int
fisubrs
outsb
pop
scas
inc
inc
pushf
int
push
pushf
sahf
mov
push
movsl
and
add
sub
cmp
fsubs
fs
lret
adc
jno
fdivrl
or
lods
pop
test
mov
in
mov
pop
push
ljmp
insb
cwtl
mov
insl
push
je
lods
sub
sub
mov
leave
shlb
scas
mov
xchg
lret
mov
push
hlt
xorb
ficompl
pop
or
push
mov
inc
or
daa
ss
bound
pop
out
lds
and
xchg
dec
imull
dec
aas
and
dec
incl
mov
ljmp
dec
adc
cmc
push
pop
xchg
push
and
xor
rcrl
add
outsb
loop
push
add
stc
mov
jns
es
adc
pusha
sbbb
pop
lret
sub
hlt
mov
add
ljmp
mov
out
jl
xchg
jo
stos
and
pushf
fcoms
xchg
adc
mov
fidivs
dec
cmc
sbb
sahf
les
leave
sub
addb
xlat
mov
fisttpll
pop
lods
adc
mov
cwtl
and
aam
loop
imul
mov
dec
mov
clc
push
push
adc
imul
sub
iret
mov
cs
push
sbb
cmp
call
mov
inc
or
or
cmp
in
jmp
sbb
loop
xchg
xor
scas
inc
inc
js
xchg
push
sbb
jle
loopne
incl
cmc
lock
jnp
ret
leave
pop
cmpsl
xchg
test
arpl
pushf
ljmp
adc
push
sbb
mov
mov
push
inc
dec
jne
mov
xchg
adc
push
and
sbb
or
jl
in
push
testb
xor
xchg
xchg
dec
cltd
push
aaa
and
xchg
lea
cmpl
adc
mov
js
bound
sbb
pop
mov
mov
aas
int3
sbb
or
inc
sbbl
cli
loop
pop
cltd
hlt
mov
push
and
dec
test
mov
cli
decb
add
outsb
shll
fmull
pop
hlt
jo
les
cmp
fisubrl
sub
out
xchg
insb
inc
stos
imulb
pop
ret
or
xor
popf
and
ss
dec
insb
lcall
fsubrl
mov
mov
dec
fidivrl
mov
mov
cs
loopne
in
repnz
test
lods
xchg
push
sub
imul
bound
push
icebp
mov
jbe
stc
cmp
xchg
jnp
pop
aaa
es
push
daa
imul
int
mov
test
and
and
mov
fs
and
push
pop
jmp
test
repnz
or
sbb
lret
scas
pop
pop
adc
out
cmpsb
aas
push
mov
jne
icebp
cmp
xor
push
adc
pop
mov
add
xlat
sub
inc
out
loopne
xchg
loope
outsb
add
adc
outsl
das
fbstp
mov
jo
inc
sbb
xchg
fs
data16
push
ret
inc
aas
scas
popa
adc
fs
mov
inc
inc
xor
orb
cmp
add
or
pop
das
repnz
pop
int
or
dec
add
and
fnstsw
inc
leave
mov
push
cmp
or
enter
adc
push
lods
add
sbb
dec
adc
mov
repnz
shlb
call
lret
lret
pushf
stos
mov
pop
mov
dec
dec
push
lds
mov
in
inc
mov
stos
jns
pop
and
inc
cmpsl
cmp
add
fistpl
shll
lret
mov
inc
ss
mov
jbe
jns
jp
xor
addl
or
dec
in
sub
movsb
scas
pop
mov
dec
or
mov
mov
mov
hlt
pop
adc
call
cli
add
into
leave
nop
push
xorb
push
xchg
mov
fwait
sub
jmp
ja
int3
fiaddl
xlat
call
fidivl
or
cmp
push
imul
shr
jl
cli
dec
pop
sbb
rorl
loopne
jae
repz
cld
dec
mov
stos
stc
xor
cs
cmp
jne
sarb
pop
push
sbb
and
push
call
mov
add
add
cmpsb
aad
push
fnsave
jge
push
cmp
fimuls
test
hlt
push
mov
nop
push
aaa
imul
mov
jle
cmp
out
sbb
sbb
icebp
jge
cli
jg
test
and
test
lock
xlat
mov
mov
cs
ss
jne
cwtl
add
clc
or
push
jb
inc
sub
jnp
dec
push
mov
test
dec
cmp
or
xor
lcall
movsb
outsl
shlb
dec
dec
test
add
mov
xchg
mov
sbb
seta
outsl
dec
fwait
jbe
sub
or
dec
jge
or
shlb
jp
out
int3
add
push
decb
sbb
arpl
punpckhdq
adc
cs
incl
lods
pop
xchg
dec
sarl
jge
imull
mov
adcl
cmovbe
ja
sub
push
dec
push
stos
daa
lods
add
jge
add
and
xchg
ljmp
push
xchg
add
out
loop
cmc
dec
stc
mov
adc
dec
mov
mov
inc
mov
mov
adc
sub
xor
ret
add
lea
adc
pusha
push
and
loop
sub
and
loopne
dec
call
sahf
mov
clc
outsb
adc
push
inc
xchg
dec
rclb
or
mov
hlt
or
mov
fnstenv
cmp
mov
leave
mov
jo
js
or
xchg
sar
xor
fmull
mov
test
or
scas
gs
xorl
jnp
or
mov
and
mov
movsb
mov
js
aam
ja
and
and
jo
add
xor
push
movsl
call
cmp
test
sub
mov
push
ds
or
fwait
mov
push
push
or
xor
inc
imul
cmp
push
ss
rorl
ljmp
and
mov
in
mov
mov
cmpsb
add
out
fcoms
cmp
scas
add
outsb
push
mov
int3
into
scas
incl
mov
and
sub
push
push
loope
add
mov
rolb
cmc
adc
fcomi
mov
xor
lds
mov
xchg
fwait
pop
pop
sub
mov
push
lock
inc
cmpsb
aad
sbb
pop
mov
mov
andb
pop
or
xchg
inc
cmp
sub
pop
lret
cmpsl
xchg
movsl
sub
sub
clc
je
popf
adc
in
out
xchg
inc
mov
ficomps
daa
aas
mov
rclb
push
or
aas
adc
inc
movsl
lea
sbb
loopne
inc
jp
es
cmc
lret
or
xchg
pop
jge
inc
dec
dec
test
jb
clc
imul
shlb
cmpsb
mov
pusha
js
sbb
or
loopne
ficoml
mov
loopne
lods
mov
cmp
lret
insb
lds
add
out
push
and
mov
mov
nop
push
shll
into
add
fists
ret
mov
insl
outsl
fwait
xlat
lret
pop
sbb
mov
or
hlt
rcl
mov
nop
push
or
out
sbb
cmpsb
and
scas
push
cltd
bound
aad
call
mov
test
popf
push
jge
mov
hlt
mov
pop
pop
sub
xchg
daa
dec
insl
xchg
fsts
cmp
into
insl
mov
dec
adc
dec
adc
mov
lcall
push
mov
sub
xlat
xchg
or
cmp
jmp
sbbl
movsl
stos
inc
pop
sbb
fdiv
fbstp
mov
jo
sahf
mov
push
movsb
shlb
popa
ljmp
pushf
jge
inc
inc
shrb
sti
mov
enter
and
jl
aad
pop
mov
les
pop
and
nop
scas
jbe
push
mov
loop
roll
ds
in
stos
or
cld
pop
jmp
shrl
xchg
sbb
hlt
mov
cs
in
je
pop
popf
mov
pop
iret
loopne
lret
outsb
add
ret
lods
test
xchg
sub
jno
or
lods
cli
sbb
and
cltd
mov
lea
cli
and
rolb
fimull
sbb
test
out
call
mov
mov
push
testl
enter
jp
inc
jmp
pusha
into
push
enter
pusha
push
loopne
out
insl
clc
loopne
xor
xlat
add
or
lods
push
loop
jg
test
xchg
data16
push
inc
adc
or
cmpsb
push
sar
je
push
mov
adc
cmp
int3
cmp
aas
sub
lock
bound
adc
sti
shrb
scas
xchg
xchg
lods
fcomps
mov
rcrb
mov
and
inc
add
push
cmp
cmp
mov
push
sbb
lods
les
fsubrs
pop
rcll
ljmp
push
ljmp
add
outsl
fmuls
movl
xor
in
mov
je
idivb
es
inc
mov
aam
pop
scas
xlat
and
cmp
inc
pop
fisttps
add
sbb
or
subb
or
ja
incl
mov
push
sbb
push
loopne
mov
mov
aam
int
pop
test
scas
movsb
lods
mov
inc
jmp
icebp
xor
push
cmpsb
jbe
adc
cmp
rcrl
js
ljmp
adc
xchg
je
fistps
add
push
inc
pop
in
hlt
mov
dec
cmp
sub
sbbb
sub
mov
leave
jns
outsb
and
sub
add
lea
sbb
add
inc
and
movsl
and
inc
mov
repz
movsb
mov
sbb
into
hlt
pop
pop
adc
icebp
push
dec
daa
add
mov
les
jle
pop
mov
cld
insl
es
and
dec
ljmp
cld
xchg
cwtl
test
sar
popa
dec
and
mov
inc
mov
dec
shlb
je
push
or
add
adc
dec
loope
sub
int3
sar
cwtl
mov
ljmp
jbe
arpl
lahf
pop
pop
loopne
mov
fdiv
mov
and
push
int3
mov
fistpl
mov
jns
sub
push
sbb
iret
push
jmp
push
xor
loopne
xchg
add
cmpb
movsb
scas
test
decb
sub
xchg
lret
fs
into
dec
add
pop
incb
pusha
aas
and
pop
pop
mov
xchg
jne
pop
sub
dec
sbb
addb
inc
pop
jb
pop
call
mov
xor
fsubrs
cmp
lds
repz
std
or
sbb
xchg
pop
ret
mov
jo
mov
mov
arpl
incl
cmp
mov
addb
and
add
cmp
jp
push
sbb
loope
pushf
fs
ss
jb
inc
das
xchg
mov
jg
fwait
or
mov
roll
shlb
or
movsb
dec
jecxz
aad
jo
enter
inc
mov
cltd
test
out
sbb
test
xorl
cltd
sub
add
push
stos
sbb
shlb
lret
inc
xchg
sbb
popa
jmp
cltd
lds
testl
imul
lock
and
push
fs
addl
lret
lock
cs
jl
add
jnp
sbb
dec
imul
xor
repz
dec
jb
mov
adc
and
add
gs
clc
clc
mov
inc
pop
dec
pushf
std
adc
cmp
enter
mov
imul
xchg
adc
sbb
rcr
jno
jg
pusha
jmp
data16
shrb
icebp
push
ljmp
push
aad
adc
adc
loopne
inc
cmp
push
movsl
fists
jo
xchg
lahf
stos
outsb
adc
jle
adc
mov
sub
sub
add
out
mov
bound
sbb
adc
and
dec
leave
mov
ljmp
pop
sarb
std
daa
mov
loop
add
mov
xchg
pop
xchg
inc
jl
jmp
movsl
jl
ljmp
lcall
mov
xor
test
dec
push
lahf
fsubrl
sarb
pop
into
add
add
imul
mov
adc
adc
mov
xor
test
inc
xor
scas
incl
mov
clc
fimuls
adc
mov
shl
mov
outsb
pop
imul
fists
mov
in
mov
shll
je
jo
out
jo
adc
jo
or
lret
adc
icebp
orb
jmp
and
lods
add
out
xor
pusha
xor
data16
sbb
push
cmovo
push
inc
xchg
jge
leave
mov
icebp
call
add
cmp
jnp
repz
test
lods
shll
sub
loop
lret
js
mov
push
imul
incl
cli
inc
and
sahf
ja
push
xor
loop
xchg
push
adc
mov
out
mov
test
push
lret
mov
out
xchg
outsb
dec
sti
jl
data16
ss
push
das
sub
add
ror
fistps
jp
lcall
adc
mov
jno
xor
jle,pn
movsl
out
mov
pusha
push
push
cld
out
pop
daa
mov
in
lahf
xchg
nop
pop
xchg
push
cs
fists
pop
pop
mov
add
ljmp
in
cmc
mov
inc
dec
xor
popf
das
adc
fadds
cltd
sbb
adc
stos
jge
push
sti
loope
or
popa
jle
inc
aad
loope
push
icebp
mov
inc
rcrl
inc
sbb
pop
mov
cwtl
or
adc
cwtl
inc
jl
jb
xor
xor
ret
inc
or
lcall
hlt
adc
add
or
push
dec
shlb
adc
xchg
icebp
ljmp
push
push
lcall
in
dec
sahf
pushf
cld
push
aad
xorl
aam
testb
psubb
cmp
sub
push
sbb
or
rcrl
incl
aam
mov
fistl
sahf
push
jecxz
pop
push
add
out
and
repnz
cmp
icebp
mov
ret
addr16
jle
pop
pop
jg
xorl
cmp
push
out
push
test
push
data16
sub
imul
scas
jnp
lods
test
andl
mov
adc
sbbl
jmp
dec
imul
cmp
jo
jecxz
test
lock
cld
mov
or
jmp
or
les
inc
fnsave
jbe
fcmovnbe
adc
jne
adc
and
push
fldl
popa
out
mull
add
pop
xor
add
in
mov
rolb
orb
jb
sahf
je
or
lret
inc
mov
call
cmp
mov
outsb
jmp
cli
icebp
xor
jle
mov
loopne
pop
add
fidivrl
rclb
push
shrb
mov
inc
psubd
cmp
inc
and
mov
ja
push
inc
lods
dec
aam
jbe
neg
clc
mov
cld
mov
notl
cli
mov
outsl
orb
ljmp
scas
dec
insb
add
insl
mov
in
cmc
mov
test
scas
leave
mov
mov
sub
rolb
ret
rcr
cli
loop
fwait
sbb
add
pop
fisubs
cs
mov
and
or
sbb
cmp
add
push
call
arpl
inc
or
xor
filds
das
push
xchg
int3
sbb
inc
in
sub
inc
mov
mov
cmp
sbb
dec
int
pop
adc
pop
inc
push
cmp
clc
cmp
xchg
and
adc
mov
pop
cwtl
decl
mov
nop
push
sub
subb
ret
andb
jno
cmpsb
add
and
add
xor
les
dec
sbb
inc
and
sub
es
mov
xlat
les
outsb
sub
ffreep
add
sbb
mov
and
jno
adc
call
ljmp
sub
xor
inc
enter
shlb
loopne
test
stc
sub
jae
jle
aaa
lock
sbb
loope
outsl
and
mov
jmp
adc
cmp
sub
fmuls
mov
pop
bound
and
addb
sbb
cld
sti
cli
adc
lcall
mov
inc
aas
sbb
cmc
testb
shrl
cld
scas
adc
or
int3
cmp
notb
mov
mov
push
mov
xchg
xor
out
das
cli
xchg
mov
mov
add
leave
inc
mov
pop
mov
cld
lods
pop
add
lcall
cs
adc
mov
dec
mov
xchg
ficomps
adc
sbb
insb
lods
push
push
xor
add
cmp
insb
scas
add
mov
hlt
cmp
clc
in
mov
jo
add
cld
jmp
mov
aaa
repz
or
loop
cmc
mov
ret
xchg
push
pop
push
sbb
loop
pop
cmc
pushf
add
xor
es
cmp
push
movsl
xor
stos
adc
jbe
pushf
popa
cld
push
add
push
test
inc
jmp
pop
dec
xchg
lcall
enter
cmp
lcall
aaa
cmp
jg
cltd
xor
and
dec
cmp
pusha
ss
jmp
cwtl
scas
ja
jge
popf
dec
cli
popf
inc
into
cmc
ficomps
rolb
mov
addr16
out
xchg
cmp
jmp
adc
cld
js
push
jp
roll
dec
mov
hlt
sub
cmpl
inc
jle
js
inc
decb
xchg
mov
fdivrl
jno
mov
test
mov
xchg
mov
mov
sti
jg
pop
mov
add
leave
subl
fdivr
dec
test
repz
xchg
rdtsc
ljmp
cmpsb
ret
push
cli
dec
push
cld
jg
pop
cmp
inc
xor
lods
adc
push
mov
jge
xchg
jge
dec
xlat
adc
shl
push
mov
cmp
inc
xchg
mov
lea
mov
xchg
cmp
xor
jl
cmp
add
pop
sub
or
stc
mov
or
cmp
and
stos
push
mov
mov
and
and
scas
push
xor
xor
jge
pop
mov
dec
sbb
cmp
adc
jg
xchg
fptan
mov
add
bound
cvtps2pi
sub
add
cli
and
jmp
arpl
pusha
lds
inc
mov
or
data16
dec
push
ret
js
jb
cmp
hlt
lock
jne
test
add
int
outsb
cmp
rclb
lock
inc
and
jle
loopne
cmpb
scas
lods
jle
mov
xchg
movsb
or
add
pop
pop
addl
inc
jb
cmp
push
shl
je
push
or
iret
xor
shr
pop
cmp
clc
lahf
incl
push
cld
push
shlb
sbb
or
lea
mov
push
jo
data16
lock
aad
ret
jnp
hlt
add
and
cmpsb
push
add
mov
xchg
into
inc
popa
mov
push
scas
sbb
repnz
jg
sub
sub
xchg
pop
lods
push
fsubs
xchg
or
cmpsb
push
push
or
call
jne
jno
jmp
inc
mov
jp
jnp
push
rcrb
lret
out
push
add
xchg
push
test
aas
movsb
and
sub
imul
push
sahf
outsl
xchg
or
mov
pushf
loopne
leave
xor
and
push
sub
xchg
jl
call
ss
rol
call
pushf
xchg
sub
mov
dec
sub
cmp
jg
leave
fs
xchg
jge
shlb
mov
xor
test
addr16
notb
mov
pop
xchg
test
cmp
daa
out
int3
or
and
js
push
lock
pop
mov
loopne
jle
mov
out
es
cmpsb
in
das
and
pop
or
fimuls
shrb
or
jp
pop
je
jbe
dec
add
aam
inc
cmp
les
jns
add
daa
mov
jmp
add
rorl
sbb
add
or
jmp
adc
js
ret
scas
clc
mov
les
inc
adc
xor
xchg
clc
xchg
arpl
enterw
jbe
jmp
in
dec
inc
jnp
push
fsub
adcb
push
mov
jno
adc
and
sub
daa
mov
decb
fdivl
sarb
push
enter
cmpl
or
out
int
pop
ret
js
ret
push
xchg
call
ss
icebp
sbb
xchg
mov
inc
out
popf
and
add
jb
clc
sub
call
pop
mov
push
popa
int3
roll
cs
mov
add
jp
ficompl
dec
incl
mov
xlat
loope
in
pop
jg
cmp
jns
cmpsb
cli
xor
dec
jle
shl
xchg
cmp
je
fmull
sub
xchg
nop
enter
in
jg
out
mov
in
outsb
test
loope
icebp
mull
or
adcb
jmp
outsw
jg
clc
cmp
add
add
mov
fadds
push
int3
pop
les
hlt
adcl
push
je
mov
or
out
loop
or
dec
push
xor
ljmp
rcrb
push
pop
filds
jmp
cmpsb
shlb
movsl
cwtl
xor
xlat
bound
cmpsb
push
cmp
jno
sbb
rorb
scas
jb
xchg
cmp
push
int
leave
cs
push
out
and
icebp
cld
xor
aad
lret
push
call
pop
fdivrp
sub
jae
push
sub
xchg
lahf
repnz
xchg
dec
bound
mov
clc
dec
mov
xlat
nop
cmp
test
cmp
out
jle
xor
and
cmp
lcall
push
hlt
adc
sbb
inc
lcall
jecxz
nop
xchg
adc
scas
in
dec
mov
push
add
stos
pop
roll
movb
aaa
mov
mov
popa
insl
clc
sbb
mov
shrb
data16
and
int
cmp
shlb
comiss
icebp
pushf
cld
jnp
add
xchg
ds
cwtl
xchg
jno
pop
into
jb
mov
fistps
sahf
js
fidivrs
aas
in
xchg
jmp
in
loopne
leave
push
or
fldt
mov
dec
repnz
fcomp
push
pushf
outsb
dec
mov
pop
leave
repnz
push
nop
lds
sbb
push
cmp
leave
ret
dec
and
mov
in
jb
mul
inc
adc
cmp
adc
xchg
inc
data16
adc
adc
xchg
ja
inc
cmp
out
mov
add
inc
xchg
or
inc
inc
jle
jp
pusha
hlt
xchg
cmpb
insb
pop
push
loopne
pop
ds
jb
inc
jae
dec
sbb
shlb
mov
jg
inc
js
pop
xlat
pop
cmp
pop
mov
int3
shl
cmpsb
xchg
aad
es
dec
inc
icebp
ret
fisttpl
pop
xchg
push
movsb
add
movb
adc
ret
insb
add
inc
divl
fidivs
and
xor
test
dec
fwait
push
inc
sub
ss
shl
mov
mov
pop
push
movsl
cld
dec
inc
adc
and
mov
pop
or
hlt
fiaddl
fwait
inc
sbb
ljmp
stos
dec
sbb
movsb
fdivr
repnz
dec
mov
movsb
dec
push
push
xchg
push
or
in
mov
mov
jno
lods
gs
jl
stos
cmp
hlt
inc
or
outsl
clc
lretw
cli
sbb
loope
std
mov
cs
inc
sbb
mov
pop
hlt
ljmp
mov
cmpl
xor
sti
mov
je
inc
xor
push
or
sbb
mov
sbb
xchg
fcompl
adc
xor
inc
or
icebp
pop
cmc
or
push
lcall
aas
and
sbb
mov
les
pop
lcall
jmp
mov
inc
jns
add
and
dec
cmp
inc
dec
push
pop
aas
enter
dec
out
cli
imul
rcrb
cmp
cmp
aam
cmp
xchg
bound
cs
mov
adc
mov
decl
xor
mov
xchg
jb
add
loop
clc
dec
push
xchg
jl
dec
das
mov
dec
jecxz
iret
bound
incl
ficomps
jecxz
ds
xor
outsl
fldt
lahf
lahf
xor
je
sub
ss
in
fldl
insb
enter
cmpsb
es
or
hlt
cmp
jle
inc
clc
jge
testl
mov
lock
xchg
sub
das
imul
subb
add
mov
adc
sahf
cmpsl
popa
loopne
sbb
dec
sbb
sub
in
test
push
out
adc
cltd
inc
push
mov
out
mov
xor
lods
add
dec
pop
push
jp
and
xor
add
gs
aaa
daa
inc
mov
lods
mov
dec
sbbl
jbe
jbe
mov
scas
mov
aam
cmc
mov
push
push
ficompl
lahf
sbb
std
inc
cmp
fst
imul
and
outsl
dec
cmp
sbb
imul
sbb
push
push
stos
jg
fcoms
fdivrs
rol
jl
or
or
and
pop
hlt
mov
push
in
jbe
shlb
popa
xchg
add
sbb
inc
jg
div
fnstsw
call
push
push
pusha
sbb
lds
leave
jecxz
es
jl
dec
aad
test
int3
inc
push
insb
imul
and
arpl
insl
repz
std
mov
add
ds
add
cmp
pushf
jp
xor
inc
cmpl
xorb
xlat
fcmovb
sahf
jg
movsb
test
ret
ds
clc
dec
insl
jmp
outsb
bound
or
lods
mov
loop
push
loop
cmpsl
js
dec
jle
daa
dec
sub
pop
nop
lds
xchg
sahf
and
mov
push
and
xlat
out
adc
scas
mov
rcpps
add
fucomip
inc
sti
fdivrs
sarl
pop
int
mov
enter
sub
insl
lods
dec
loope
movsb
sub
jb
adc
push
subb
dec
loopne
pop
sbb
inc
mov
std
cli
cmp
adc
and
shr
sahf
xchg
std
aam
test
pop
cmp
es
inc
push
movsb
fldt
notl
push
dec
sub
push
or
inc
pop
ds
mov
dec
roll
add
xchg
sub
and
nop
xchg
ljmp
scas
and
bnd
je
imul
dec
fwait
or
mov
push
cmpsl
sbb
decl
push
sbb
add
inc
or
sbb
adc
push
movsb
jl
sub
sarb
push
xchg
xor
ds
dec
and
movsb
fisubl
mov
or
push
mov
xchg
inc
xor
xchg
fsubl
arpl
xchg
adc
stos
cwtl
xor
mov
loop
es
pop
add
sbb
pop
js
and
cmp
and
mov
inc
sahf
push
push
xchg
adc
adc
stos
xor
mov
and
daa
and
xor
sbb
rolb
out
inc
jge
das
and
xlat
in
cwtl
jns
insb
call
dec
lret
aaa
mov
or
sbb
das
pop
fildl
push
mov
lret
push
dec
sub
out
les
sbb
test
and
push
mov
clc
mov
aaa
aad
sub
shl
cmc
fildl
out
jno
jmp
mov
mov
jle
test
pop
test
push
sub
sub
or
jbe
aam
gs
loope
adc
inc
pop
push
push
add
pop
push
xor
iret
ss
push
sbb
lods
cmp
insb
fadd
cs
xchg
cmpsb
push
call
stos
out
push
xor
fcoml
cmp
adc
dec
dec
mov
or
xchg
arpl
mov
rcrb
mov
push
push
ja
lock
icebp
ficoms
push
add
out
cli
add
pop
add
scas
stos
jecxz
add
mov
xorb
aam
scas
incl
inc
sarb
jne
js
cs
rcl
repz
cmc
inc
pop
or
xor
sti
xchg
add
lret
hlt
add
mov
mov
mov
mov
bound
add
int3
add
es
ljmp
adc
pop
jl
imul
or
inc
and
and
dec
icebp
loop
lcall
js
xor
push
mov
pushf
mov
gs
sbb
fwait
mov
fwait
les
out
aas
leave
jmp
lret
xchg
jns
imul
jne
mov
sub
out
decl
xor
jns
stos
and
pop
adc
push
adcl
inc
ret
rcl
iret
cmpsl
push
clc
aaa
xchg
aaa
cs
pop
in
pop
out
cltd
into
pop
pop
and
sbb
nop
sbb
test
and
sti
cmp
xchg
push
add
scas
mov
xor
dec
push
sbb
popa
clc
fisubrl
mov
pop
push
cli
pop
test
imul
loopne
imul
push
loop
add
jne
mov
inc
add
and
and
mov
jecxz
xor
jnp
mov
pop
pop
xchg
pop
fstl
mov
out
sbb
fisubl
add
cmp
in
sbb
mov
dec
pop
pop
xchg
xchg
xor
xor
les
test
sbb
cmp
add
faddp
fmuls
mov
js
or
or
lock
mov
mov
mov
jp
orb
cld
fimull
and
push
adc
pop
inc
rcrl
push
or
jno
add
je
sub
or
jo
testb
aam
pop
and
shl
lret
popa
sbb
sbb
std
leave
call
nop
add
xor
sahf
jo
cmp
or
rclb
inc
inc
xor
jmp
mov
shlb
int3
and
adc
xchg
loope
loope
pop
dec
sub
pop
fsubrs
and
adcb
faddp
pop
adc
lods
push
mov
add
dec
push
mov
rcll
out
cmp
aas
out
mov
and
jp
nop
dec
orb
cmp
or
cmp
lcall
inc
pop
mov
push
sub
lea
ret
adc
add
cmpsl
and
xchg
or
aaa
sbb
test
pushf
xor
pop
add
mov
mov
dec
xor
push
adcl
mov
sbb
cli
insb
test
lock
xor
xchg
daa
pop
jp
roll
movsb
mov
cmp
adc
push
vmovshdup
aam
jge
fwait
je
mov
roll
pop
adcl
or
sbb
dec
jle
xchg
cmpsl
in
pushf
mov
jp
addl
nop
push
inc
std
xor
ror
gs
pop
aad
push
jo
ss
iret
cwtl
push
and
cmp
mov
repz
popf
ljmp
jo
test
mov
cmp
mov
sahf
cmp
shrl
push
test
ja
push
das
and
sub
or
cmpsb
orb
scas
cli
cld
mov
pop
xchg
jo
push
divb
in
mov
pop
divb
cmpsl
les
add
cmpsb
in
leave
sbb
push
rorl
sbb
movsb
jo
add
mov
clc
subb
adc
aam
inc
inc
imul
mov
movsb
push
jno
push
xchg
dec
adc
out
fwait
outsb
add
add
pop
mov
popa
ret
mov
in
mov
mov
and
das
push
adc
popa
mov
xor
gs
stos
movsl
into
insl
out
insb
mov
push
addb
xchg
nop
xchg
adc
sbb
in
pop
test
ficompl
dec
xlat
ja
popa
js
mov
add
cli
lahf
dec
jmp
mov
xor
data16
xor
mov
test
loop
xor
pop
pop
scas
shll
pop
and
lock
syscall
ljmp
push
inc
pop
fisttpl
mov
jo
xor
mov
push
cli
and
hlt
es
mov
add
mov
js
push
movsl
jae
inc
inc
arpl
ss
out
adc
js
popa
outsb
push
shlb
je
dec
rclb
call
lods
scas
rcrb
clc
mov
lods
je,pn
pop
mov
bound
insb
mov
add
sbb
adc
rorl
cmp
dec
push
or
add
pop
mov
mov
add
push
loopne
dec
pop
inc
mov
sbb
test
add
jo
dec
sub
sub
je
ret
cmp
repnz
lods
jbe
inc
clc
xor
push
in
pop
lcall
notl
arpl
scas
sub
jns
ret
movsb
cmpsb
repnz
fsubl
inc
jns
popa
shll
dec
mov
aad
lods
out
scas
sub
sbb
xor
push
xchg
jp
ljmp
push
push
mov
add
pop
pop
or
add
out
adc
loope
and
add
out
mov
daa
add
push
mov
mov
inc
mov
push
incb
shrb
jno
xlat
cwtl
mov
inc
jecxz
mov
lods
cmc
dec
test
mov
xchg
add
and
mov
pop
or
out
xor
xchg
ss
xchg
mov
imul
mov
sbb
cmovno
cmp
mov
out
and
push
inc
addps
cwtl
cmp
insb
mov
mov
movsb
sbb
push
inc
pop
sbb
or
rol
push
or
mov
ret
sub
push
outsb
sti
pop
xchg
mov
lea
inc
mov
mov
pop
pop
adc
lea
test
cmp
jnp
jmp
jo
mov
test
les
sbb
cmc
jle
jb
and
xchg
loopne
jmp
movsl
jno
or
movsb
sub
or
or
dec
xchg
sub
mov
adc
sbb
add
push
jb
and
push
mov
inc
jns
test
test
pop
imul
jecxz
scas
xchg
pop
or
rol
mov
mov
lods
pop
rorb
stos
mov
in
lret
lods
push
outsb
push
add
xchg
je
mov
add
test
jecxz
je
dec
pop
mov
adc
out
mov
pop
add
in
adc
incb
xchg
inc
or
xor
cltd
xchg
mov
scas
dec
stc
mov
jp
rorl
push
mov
stos
cltd
inc
or
aaa
mov
dec
or
or
shlb
call
pushf
cltd
mov
adc
mov
dec
cmpsl
ret
jle
inc
adc
lret
jmp
xchg
aad
mul
pop
enter
xlat
fcmovnbe
bound
and
sub
inc
mov
and
sti
inc
mov
lahf
les
dec
test
ljmp
push
push
lret
outsl
imul
das
shrl
push
xor
stc
fiaddl
adc
imul
imul
rorl
push
cmpb
xchg
ds
and
ss
mov
add
dec
cmp
and
out
cli
dec
pop
fistpl
mov
in
je
outsl
xor
insl
mov
les
pop
cmc
mov
repz
in
pop
adc
mov
in
xchg
daa
sub
pushf
fldenv
or
mov
or
jb
jge
mov
inc
out
shlb
outsb
call
test
add
sbb
sub
cmc
push
rolb
add
lret
mov
fbld
lods
mov
add
sbb
call
jns
inc
inc
cld
das
js
cltd
out
jne
fidivrs
icebp
jecxz
lds
mov
dec
je
xor
adc
aam
pusha
lea
push
ret
sbb
xchg
cmpb
fdiv
fmull
stos
ror
cwtl
popa
mov
lock
inc
pop
cltd
in
ja
pop
ds
ss
fidivs
cmp
ss
lds
mov
add
dec
scas
jae
push
cwtl
ret
mov
dec
add
repz
dec
pusha
jne
fbld
jle
inc
cli
mov
imul
cld
nop
push
rorb
or
jno
inc
mov
push
int
rorl
nop
pop
in
sbb
mov
popa
xchg
cmc
dec
jg
jl
push
and
dec
out
and
nop
mov
sbb
cmp
mov
push
jecxz
dec
inc
push
jno
orb
mov
movsl
in
pushf
inc
xchg
iret
xchg
push
popf
les
pop
cmc
and
push
sbb
cli
jbe
aas
sbb
mov
inc
stos
jne
xlat
out
je
scas
push
sbb
loope
test
or
jmp
pushf
aam
std
push
xor
outsl
fcoms
clc
push
and
iret
or
push
add
pop
rcrb
pop
sbb
push
xchg
cs
dec
iret
inc
lahf
cmp
push
sarb
push
dec
mov
jno
mov
aad
add
lds
adc
push
stos
dec
aam
xchg
adc
lods
stc
rolb
out
ljmp
pop
adc
pop
add
mov
adc
loope
ljmp
out
xor
sub
je
in
aas
push
scas
mov
cwtl
cmp
sbb
das
push
popa
andb
dec
jl
mov
mov
jo
shl
cmp
push
push
lahf
cmp
js
ret
mov
add
sbb
xchg
add
into
fstl
sbb
fcmovnbe
inc
je
cmc
aam
addr16
dec
inc
add
push
mov
into
gs
mov
fisubrs
sbb
inc
ret
mov
xor
sub
inc
dec
icebp
movsb
lock
jo,pt
jp
mov
or
das
ret
in
loope
adc
lock
adc
adc
gs
or
test
adc
scas
xchg
xchg
push
sub
and
and
fldenv
loopne
in
lds
cli
imul
test
and
add
in
lret
mov
sahf
stos
mov
loopne
and
pop
mov
pop
pop
aam
xchg
pop
add
movsb
pop
shrb
push
outsb
lret
imul
fsubs
fs
je
andb
sbbl
and
and
push
test
filds
dec
xor
push
push
push
mov
hlt
push
jecxz
or
test
fidivrl
mov
xchg
jle
ja
mov
push
xchg
gs
fs
in
push
sbb
mov
mov
ds
sahf
shlb
jne
lahf
jae
lds
mov
movaps
wbinvd
pop
addb
xchg
inc
fldl
push
push
je
inc
cmp
or
add
inc
out
dec
cmc
pushl
dec
fs
imul
dec
cmp
push
inc
das
mov
push
jbe
jno
jno
outsb
imul
sar
ficoms
ljmp
inc
push
pop
call
inc
iret
add
js
in
inc
orb
dec
xchg
ret
lcall
add
das
dec
sbb
or
jecxz
adc
popa
inc
or
mov
xchg
mov
in
rcl
sub
inc
push
push
push
scas
ds
mov
cmp
inc
push
inc
mov
or
pusha
cmp
sub
fmull
push
lahf
jmp
dec
xchg
aam
arpl
or
out
add
pop
sub
mov
or
hlt
pop
xorb
pop
out
jp
and
pop
mov
aad
cs
es
scas
pop
adcl
mov
jmp
jmp
mov
cmp
fwait
sarb
dec
mov
sbb
fwait
icebp
sbb
rorb
lds
mov
cmc
or
xlat
inc
popf
pop
mov
adc
orb
fldt
mov
sub
lret
sbb
aaa
arpl
out
mov
or
mov
in
addl
push
jle,pt
sub
add
lods
sub
dec
dec
out
test
push
adc
cmp
jg
loopne
ds
or
xorl
dec
mov
loope
testl
sti
pop
push
rclb
push
mov
rorl
push
mov
cld
mov
xchg
mov
js
xor
xchg
movsl
std
and
je
in
dec
sti
loopne
xlat
add
clc
shlb
mov
out
xor
pop
lock
mov
pushf
push
pusha
or
pop
sahf
jo
fidivs
mov
es
loopne
out
sub
mov
sbb
sub
imul
or
jno
jl
arpl
jle
outsb
subl
pop
test
and
ss
lds
aaa
idivb
lret
lea
lea
fucom
jns
mov
pop
aad
stc
das
push
inc
jge
pop
in
movsb
scas
call
push
and
mov
movsl
xchg
in
mov
mov
and
ret
push
mov
add
lret
sbb
in
ret
jno
into
inc
or
xchg
or
mov
sbb
popa
xor
mov
sbb
into
cmpsb
fs
pop
cmpsl
mov
jge
mov
out
lea
lods
xchg
insl
insl
rolb
lods
dec
rorl
mov
mov
inc
rolb
inc
cwtl
inc
loope
push
lock
pusha
add
stc
pop
and
mov
stos
xchg
adc
cmc
push
cwtl
push
cld
mov
sbb
sub
jl
xlat
arpl
push
inc
pop
inc
daa
enter
test
push
mov
push
test
hlt
jae
adc
shll
mov
sbb
std
addr16
dec
dec
mov
sbb
pop
xor
push
jb
adc
add
insb
and
mov
pop
push
push
bnd
mov
sarb
ret
push
sahf
aam
dec
aas
xchg
dec
divb
mov
cs
and
ss
xor
jo
es
inc
add
shll
je
test
loopne
add
pop
mov
andl
call
jg
movsb
scas
cmp
cmpb
arpl
lcallw
ror
or
pop
mov
jmp
and
mov
sub
insb
add
push
test
fadds
lds
sub
test
sub
ljmp
aas
pop
push
mov
mov
int3
mov
jle
aaa
vmread
cmp
xchg
mov
icebp
roll
jecxz
fldl
testb
rcl
jo
mov
inc
sub
push
mov
mov
sahf
dec
loop
xor
test
mov
js
cmp
lock
js
push
mov
and
ja
bound
xchg
fisttpll
pop
inc
in
mov
sbb
je
filds
push
fisubl
add
xchg
lea
xchg
and
jmp
xor
arpl
or
and
out
sarl
push
mov
lret
inc
jge
add
push
xchg
push
mov
mov
inc
idivl
ficomps
ds
enter
daa
and
orl
scas
mov
jge
andb
lock
in
stc
rolb
out
imul
je
aad
out
sub
ret
add
aad
ja
pushf
bound
popl
aad
divb
cltd
cmc
mov
mov
pop
ds
sub
movl
loopne
add
inc
jns
loop
in
adc
mov
test
jg
and
nop
lahf
sahf
cmp
push
test
mov
lock
scas
inc
add
add
xlat
or
addr16
pop
outsl
push
addr16
cmc
push
xchg
shll
mul
mov
test
adc
mov
loop
adc
cmc
cmp
pop
jp
dec
add
push
gs
movb
pop
pop
sbb
imul
inc
mov
sub
js
dec
mov
lods
xchg
jecxz
call
out
aas
aad
fcomip
arpl
sbb
jns
jne
ja
movsb
icebp
scas
enter
or
mov
es
scas
add
aad
and
push
gs
pop
cli
outsl
fs
aas
in
pop
mov
sahf
jmp
xor
cli
jp
adc
bound
mov
and
add
mov
leave
mov
mov
fcoms
mov
inc
lcall
push
push
mov
dec
sub
xlat
fiadds
sbb
add
lds
push
hlt
mov
jle
jo
jae
pusha
fwait
incl
sbb
int3
movsl
mov
adc
fdivrl
push
sahf
jo
sbb
fcmovbe
pop
jb
add
fists
out
inc
cli
lods
ds
mov
cmp
movsb
fists
xor
push
mov
adc
nop
in
push
es
or
cmp
add
in
inc
sbb
loope
dec
test
or
and
push
inc
stos
scas
push
mov
mov
push
stos
sub
das
push
jg
loopne
loop
je
arpl
test
dec
pop
lcall
daa
add
aaa
cwtl
outsb
lret
test
inc
enter
add
inc
daa
sub
fiaddl
scas
insb
nop
nop
mov
sub
negl
adc
jecxz
cmpsl
cmp
fcoml
mov
mov
lcall
int3
adc
loopne
jl
out
xor
cmp
xor
clc
cvttps2pi
jo
ja
inc
mov
out
fildll
mov
and
mov
insb
cmp
adc
jmp
pop
adc
out
leave
and
pushf
orb
ss
repz
outsl
and
fcomi
inc
lock
add
std
inc
cmc
xchg
pusha
je
xchg
mov
sbb
push
lods
lea
stos
dec
inc
in
in
aam
push
add
je
in
add
cmp
int3
jp
shrb
jmp
add
popf
dec
cld
pop
mov
xchg
mov
mov
and
mov
and
jae
jbe
call
lret
arpl
or
out
scas
je
ret
mov
mov
inc
push
add
fwait
subl
repnz
pop
jl
sbb
add
mov
fbstp
jl
das
icebp
jmp
addr16
jmp
mov
ds
mov
leave
and
inc
jge
loopne
and
mov
jecxz
rorb
push
lcall
mov
ss
jp
mov
loopne
daa
imul
js
sarl
and
lea
mov
jge
ja
shll
add
cmpsl
and
bound
sbb
popf
pusha
test
mov
add
sbb
cmpsb
mov
cwtl
ret
push
rorb
or
outsl
outsl
cmpsb
or
icebp
or
mov
sbb
in
stos
rolb
out
sbb
fwait
lea
jne
jmp
mov
cli
xchg
fidivrs
sbb
std
push
enter
in
or
mov
mov
sbb
push
xchg
push
outsl
loopne
cmp
repnz
les
dec
les
xor
or
mov
popf
scas
mov
lods
xor
xchg
jo
sub
sub
or
and
adc
sub
nop
mov
mov
xchg
and
ret
stc
cmp
dec
add
aad
push
push
popa
push
mov
ret
fildll
xor
pop
ret
subl
add
into
xor
jmp
push
mov
dec
mov
repz
adc
add
push
testb
outsl
stc
rcll
sahf
rep
or
cmc
dec
rcll
xchg
dec
jmp
sbb
mov
sbb
icebp
imul
scas
inc
or
adcl
push
gs
xor
xchg
cmp
call
push
mov
aad
adc
in
add
cmp
inc
mov
test
movsl
shlb
fimuls
pop
js
fld
cli
lock
mov
mov
dec
mov
push
sub
sarb
insb
adc
adc
mov
fsubrs
cmp
pop
call
shll
je
push
or
sbb
out
lea
mov
sbbb
xchg
push
cmp
test
aam
add
cmpsb
inc
outsb
jle
dec
add
dec
movsl
hlt
add
repz
repz
push
inc
lea
jmpw
les
lods
repnz
adc
lret
sub
push
out
jecxz
das
add
pusha
sub
lcall
sbb
adc
test
add
adc
popa
xchg
add
js
xchg
or
mov
out
fcoms
out
rcrl
sub
sbb
mov
fwait
pop
cmpsl
jge
daa
es
pop
adc
push
jge
sbb
lds
js
push
mov
ljmp
test
push
loopne
lcall
push
movsb
hlt
repz
ficoms
ljmp
pop
cmp
bound
cli
push
lcall
jg
push
or
loope
test
out
and
mov
sub
dec
xchg
fnsave
loop
cltd
cmp
dec
or
xlat
and
aam
sbb
mov
or
mov
adc
scas
pmaddwd
and
aam
loopne
cmp
lock
es
jmp
cs
not
ret
stos
add
loop
out
js
mov
adc
test
jno
push
clc
fdivrl
jae
lahf
mov
add
pop
mov
sub
jno
mov
stos
mov
jmp
ljmp
or
test
lods
ds
adc
mov
dec
test
and
cmc
loope
aam
ficoms
icebp
push
jl,pt
or
js
and
xchg
inc
inc
jecxz
test
imul
nop
dec
mov
popa
push
aas
push
cmp
loope
pop
push
push
sub
rcl
rcl
add
ja
sub
or
pop
mov
cmp
mov
insb
jne
hlt
stc
mov
jge
cwtl
xor
push
adc
pusha
jg
jo
mov
nop
xorb
add
loope
sbb
outsl
dec
js
int3
testb
mov
jno
fstps
add
pop
mov
aam
test
push
imul
std
add
out
dec
pcmpgtb
and
stos
scas
test
adc
ljmp
addb
inc
jns
sub
scas
pop
add
clc
notl
sub
pop
push
xchg
or
pop
xor
jl
push
ret
push
jno
push
lea
and
push
inc
clc
or
dec
std
daa
pusha
je
daa
sbb
and
adc
xor
sub
jge
or
dec
push
rcll
mov
cld
mov
fs
adc
jo
adc
inc
pop
mov
or
psrld
adc
push
adc
aaa
cmp
ret
pop
shrl
andl
inc
ret
mov
inc
add
test
and
or
inc
pusha
cvttps2pi
jmp
lods
stos
je
or
sbb
mov
dec
test
test
fwait
cmp
sbb
loope
lahf
or
and
imul
fldcw
or
jbe
hlt
ss
adc
mov
dec
ret
cmp
cmp
sub
jb
mov
or
sbb
sbb
popw
and
js
sub
add
push
mov
pop
xorps
push
lahf
dec
xchg
sbb
stos
xor
clc
lea
and
cmp
loopne
sbb
and
idivl
xorb
lahf
inc
ja
data16
rol
ret
imul
aam
cli
dec
nop
cmp
cwtd
fnstcw
cwtl
cs
or
imul
mov
out
push
movsb
out
popa
popf
div
adc
in
cltd
push
dec
inc
cltd
or
push
cmpsb
mov
stos
xchg
inc
mov
sahf
adc
test
jmp
sbb
dec
mov
movsl
jbe
fimuls
dec
popf
in
inc
test
int3
cs
jmp
loopne
adc
add
ret
fwait
pusha
mov
in
repz
jno
adc
push
sub
inc
add
mov
add
add
add
xchg
imul
imull
mov
icebp
push
mov
aad
cmp
mov
stos
xchg
adc
shrb
icebp
loope
mov
xor
enter
dec
or
int3
aam
sub
clc
lds
add
push
jle
push
loope
inc
lods
mov
or
mov
push
testb
pushf
push
ljmp
push
cmp
inc
idivl
outsb
add
inc
aam
fdivl
shrl
jle
mov
sub
jne
cmp
sub
push
popf
push
push
out
jbe
jns
mov
dec
arpl
stos
xchg
outsb
add
push
cmp
fs
mov
and
xchg
mov
mov
cmc
clc
push
shlb
sarl
cmp
cld
sbb
divb
sbbb
nop
int
push
scas
add
or
es
push
je
push
andl
push
rol
mov
hlt
ret
mov
jle
xchg
lret
sbb
test
aam
pop
mulb
mov
dec
mov
outsb
andl
insb
push
inc
and
sahf
dec
add
test
cwtl
shrd
pushf
out
scas
dec
jl
mov
jnp
dec
arpl
ret
push
fs
adc
mov
and
push
cmp
dec
xchg
dec
test
or
push
mov
popw
fisubl
mov
rcl
sbb
ret
rolb
mov
shrl
or
lret
jae
inc
cmp
insb
xchg
adc
cli
cmp
mov
xlat
cmpsl
mov
ret
push
rol
mov
push
or
std
test
nop
repz
jnp
mov
adc
mov
xchg
arpl
sbbl
adc
pusha
add
into
ja
xchg
or
xchg
das
mov
mov
clc
loop
or
loopne
dec
inc
mov
leave
roll
les
loopne
adc
pop
sub
pop
xchg
jmp
movsb
mov
mov
fisttpl
lods
push
fwait
sbb
cmc
scas
ds
jl
ljmp
push
mov
jecxz
push
pusha
stos
adc
test
mov
clc
xchg
and
outsb
mov
add
js
dec
xor
push
pop
shlb
dec
mov
pusha
cmp
mov
les
cwtl
mov
inc
add
pushf
das
add
xchg
cmp
push
insb
push
mov
test
lds
cmp
ret
jno
int
test
xchg
dec
imul
pop
lds
sbb
push
les
pop
jo
xor
sbb
rcrl
daa
ss
shrl
push
dec
xor
ret
cmp
sbb
shll
jge
add
or
test
sub
mov
sbb
insb
or
mov
les
and
mov
sti
xorb
xchg
and
sub
loope
hlt
add
push
lret
stc
mov
test
pusha
jbe
adc
pop
push
fdivs
out
lahf
pop
sbb
mov
aaa
incl
sub
addr16
jp
adc
cs
jns
jmp
adc
scas
mov
je
sbb
pop
mov
int3
cli
ficoml
mov
pop
push
fmuls
jle
mov
xor
clc
mov
and
xor
mov
xor
aas
je
sub
pop
pop
pop
mov
and
je
fdivrl
push
enter
pop
loop
daa
cmp
dec
adc
or
mov
lea
jnp
or
cmp
mov
shll
mov
leave
mov
adc
lcall
loope
or
xorl
jnp
int3
js
pop
fisubs
mov
or
dec
inc
fdivrl
test
cmp
leave
in
lods
pop
push
jmp
rcrb
mov
lea
pop
out
and
push
imul
jle
mulb
outsb
lcall
add
push
cmpsl
ds
mov
sbb
dec
dec
and
inc
dec
popa
mov
je
push
mov
cmp
cmp
jecxz
testl
scas
cmpl
push
rorb
cmp
loopne
inc
fincstp
xor
xchg
push
adc
sub
push
lock
mov
mov
cwtl
or
sti
daa
ret
decl
mov
int
mov
or
dec
inc
cltd
pop
pop
or
mov
pusha
push
pop
dec
insb
jne
or
clc
aas
shrb
js
fsts
pop
lea
pop
pop
sbb
divb
sbbb
adc
mov
mov
fwait
leave
rcl
outsl
fnstenv
out
adc
inc
ret
or
je
mov
add
push
jno
jge
hlt
pop
dec
insb
aas
push
xchg
lcall
mov
ljmp
add
aas
or
mov
jp
mov
or
fstpt
addr16
addr16
jb
sub
loop
or
xchg
cs
push
popf
or
mov
sbb
or
in
fsub
imul
mov
aam
or
or
xor
xlat
pop
dec
in
push
repz
mov
fildl
ret
jb
shll
loope
roll
sti
out
dec
aas
cmp
cmp
cmp
push
ret
aad
je
stos
insl
cmc
ffree
or
jb
mov
cmpsb
jge
pop
inc
or
aam
add
shlb
roll
push
sub
xor
mov
jnp
xlat
adc
or
lret
ret
inc
push
ja
sti
mov
push
in
lods
xchg
push
ss
jno
imul
test
es
add
jg
mov
or
mov
add
stc
rcrb
or
outsb
pop
ljmp
fsubrs
movsb
mov
pop
inc
push
sub
mov
out
inc
dec
clc
in
popa
cmp
nopl
mov
fadds
aam
push
mov
add
movsb
cmc
sbb
je
mov
push
sub
pop
inc
sbb
push
mov
incl
push
rol
lods
mov
xor
in
mov
adc
daa
test
bound
mov
test
stos
test
imul
call
rcrl
pop
cmp
mov
test
iret
jno
lods
mov
mov
ljmp
daa
sbb
mov
jmp
pusha
sub
das
jmp
stos
test
adc
mov
or
and
rcrb
pop
dec
dec
inc
shll
xlat
jl
loope
push
or
stc
pop
lea
stos
nop
ljmp
pop
fidivs
and
je
rcrl
mov
inc
xor
jns
adc
ss
add
xlat
dec
pusha
push
and
clc
xor
mov
sub
loope
pop
jg
and
push
sahf
dec
loope
and
xchg
dec
mov
imul
fwait
mov
imul
dec
jecxz
orl
sbb
movsl
mov
jmp
and
clc
ret
out
lret
pop
cmp
adc
jg
test
cmp
lods
mov
sarb
sub
mov
push
sub
inc
pop
push
xchg
nop
pop
scas
insb
imul
ja
pop
mov
sub
jecxz
mov
jae
leave
mov
mov
cmc
sbb
pop
fsts
add
push
mov
pop
mov
outsl
push
bswap
int3
cmp
mov
sahf
mov
push
sbb
insl
jge
clc
push
sbb
xchg
push
rorb
fildll
aaa
mov
push
das
jae
scas
pop
mov
or
imul
sbb
mov
add
stos
sbb
lds
fcomps
pop
dec
pop
ret
push
adc
pop
adc
push
push
mov
clc
push
cmpsl
push
xchg
scas
push
pop
fs
push
outsl
test
les
adc
push
mulb
addr16
leave
pop
enter
lock
dec
sti
scas
mov
mov
dec
cmp
sbb
stos
lds
outsl
out
das
sub
hlt
ret
ss
mov
jle
push
cltd
mov
test
or
xchg
loop
add
push
lods
jne
mov
cmp
sahf
xchg
add
out
rcll
ss
mov
adc
cli
push
mov
aam
mov
pop
sub
sbb
xchg
scas
sti
or
mov
dec
sub
mov
push
mov
movsb
add
test
lock
imul
ljmp
je
int
inc
nop
dec
out
xchg
cmc
jo
pop
add
inc
mov
xchg
push
and
stos
imul
xchg
ds
rolb
pop
in
aad
xor
outsb
xor
add
test
xor
rol
cmp
cmp
out
hlt
mov
sub
mov
adcl
fistl
pushf
add
and
push
inc
lret
sbb
icebp
dec
and
test
adc
sarl
xchg
or
negl
xor
or
lfs
mov
push
mov
shrb
mov
shrb
stc
mov
jg
or
adc
dec
inc
and
scas
pop
mov
aad
test
pop
push
dec
outsl
cmc
jge
icebp
push
inc
jg
push
loope
add
inc
cs
je
push
sub
or
push
out
mov
inc
dec
mov
inc
dec
jmp
mov
test
mov
mov
jecxz
inc
loope
test
pop
sbb
dec
xor
in
mov
jo
inc
fldl
add
lea
mov
insl
je
shrl
repnz
fisubs
cs
adc
adc
sbb
fidivrl
and
mov
cli
in
sbbl
or
add
pushf
in
mov
orl
cld
icebp
loope
popfw
or
addb
rol
das
xor
mov
ss
in
xchg
adc
clc
mov
test
icebp
aas
sub
lahf
sub
push
or
cltd
lods
adc
rorl
add
and
pop
lds
fwait
pop
push
pushf
fistps
mov
aas
push
pop
movl
pop
call
bound
into
xlat
or
es
add
pop
mov
add
add
in
xchg
int3
xchg
jnp
and
test
or
sub
leave
insb
inc
dec
adc
or
lock
bound
clc
aas
sbb
mov
xlat
or
and
xor
dec
fs
cwtl
popa
ret
dec
aas
xchg
push
jg
sti
int3
jne
inc
add
and
jecxz
dec
push
mov
adc
imul
inc
xor
mov
mov
push
lock
jo
pop
and
daa
cmp
lcall
loopne
adc
addr16
pop
mov
add
lahf
pop
js
dec
xchg
pop
mov
addl
mov
lcall
and
mov
rol
shrb
jg
orps
push
sarb
pop
rclb
push
mov
mov
push
outsb
loope
mov
mov
inc
pcmpgtw
xor
in
pushl
xchg
gs
push
xor
pop
jecxz
dec
jp
pop
jecxz
xor
and
stos
jp
insl
shll
mov
repnz
pusha
mov
and
pusha
jo
ficoms
jmp
xchg
sub
insl
push
loopne
imul
je
adc
leave
les
nop
lretw
dec
pop
test
outsb
fs
lcall
fists
movsb
mov
sub
or
inc
repnz
mov
mov
out
enter
xchg
test
push
imul
jo
cmp
mov
push
insl
mov
add
add
xchg
mov
outsb
ja
xor
fs
fdivl
xchg
into
fsubrs
lock
xor
insl
mov
jbe,pt
dec
aad
xchg
fcoml
addr16
jae
sbb
mov
fisubs
or
pop
data16
subb
and
xor
hlt
fiadds
iret
sub
adc
adc
mov
roll
fimuls
test
les
sub
les
dec
cmp
jae
andb
aas
sbb
mov
jae
imul
loop
jl
push
sub
dec
es
mov
mov
sub
add
cmp
adc
cmp
les
mov
out
xor
and
inc
or
rorl
rolb
mov
cmp
cwtl
jp
xchg
outsb
dec
aaa
orb
loopne
mov
mov
hlt
hlt
out
es
inc
jmp
out
or
pop
dec
ja
mov
out
mov
inc
push
enter
or
int
jmp
ljmp
mov
pop
jl
sbb
and
xchg
orb
push
les
push
incl
scas
rorb
push
lock
outsb
fcoml
dec
mov
in
or
mov
jbe
jp
add
loopne
out
fcoms
pop
pop
fstl
shr
insl
cmp
in
jb
sbb
movsl
mov
pusha
data16
mov
movsb
xor
or
mov
lret
push
cmp
lods
push
lret
ljmp
dec
lahf
xchg
test
test
pop
push
jl
mov
adcb
cmpsb
cs
or
or
test
jno
lret
dec
insb
inc
jecxz
mov
jmp
dec
test
hlt
push
mov
fs
icebp
clc
mov
mov
ljmp
shl
mul
pop
adc
mov
adc
out
xorb
inc
lods
cli
rcrb
cmpsb
movsb
jns
aam
or
mov
jge
jle
add
pop
pushf
shr
daa
pop
ljmp
stc
add
mov
sbb
mov
cmc
outsl
pop
dec
nop
push
or
sahf
xchg
fsubl
jo
mov
mov
mov
lret
popf
xor
jl
test
movsl
ret
xor
and
add
cld
cmp
mov
jnp
jl
fsts
dec
subl
xchg
xor
dec
xchg
cmpsl
fdivp
xor
shll
cltd
jo
inc
test
decb
and
adc
xchg
in
stc
mov
pop
pop
add
into
add
push
invd
jae
int
or
popa
cwtl
or
loope
cmp
push
repnz
js
fisttpll
mov
sub
xor
pop
jl
dec
cmp
push
les
jb
xor
fdivl
orb
pushf
testb
dec
mov
sub
insb
pop
rol
in
roll
popa
nop
dec
and
mov
imul
inc
movsl
or
adcl
mov
cwtl
add
mov
cmp
push
sub
cmp
loop
cmpl
int
ficomps
inc
dec
popf
adc
test
cwtl
je
icebp
test
std
stc
lcall
sar
pop
sahf
push
pop
jno
push
push
fidivs
clc
andb
cs
and
call
ret
xchg
mov
cmp
and
mov
sbb
cli
or
mov
or
sti
int
pop
dec
mov
dec
imul
arpl
arpl
mov
jge
xchg
pop
les
or
rclb
das
adc
push
mov
test
aam
adc
hlt
pop
leave
and
xor
cmc
sbb
mov
push
cmp
add
sbb
inc
in
xlat
pop
aas
movsb
mov
cwtl
mov
push
xchg
outsb
or
repnz
push
repz
xchg
test
mov
or
cmp
scas
mov
jne
or
dec
insl
lcall
xchg
jg
push
addr16
out
out
mov
jge
loop
les
adc
push
mov
add
cmp
stos
xor
movsl
and
xchg
xchg
jle
pop
mov
dec
add
pop
enter
mov
mov
lahf
outsb
push
pop
aad
dec
roll
ret
sti
ljmp
jp
cmp
mov
daa
adc
clc
cmp
adc
or
dec
mov
repnz
rcrb
fcomi
sahf
add
jo
sbb
pop
mov
xchg
mov
jmp
push
inc
in
lods
or
mov
adc
mov
pop
or
pop
enter
push
inc
fstpl
xchg
jmp
xchg
mov
and
xchg
or
jbe
fcmovb
orl
dec
fsts
pop
hlt
or
in
lahf
push
ja
xor
outsl
jbe
jp
repnz
je
outsl
inc
lds
cmc
jb
mov
push
ljmp
iret
or
xchg
dec
lcall
jmp
pop
mov
mov
mov
xchg
loopne
inc
cmp
sub
jg
push
shll
mov
test
inc
cltd
xor
sbb
push
add
in
jge
push
xorl
jno
xor
jbe
jle
dec
lcall
pop
inc
sub
mov
ljmp
insb
dec
call
or
repz
mov
data16
rcl
ja
push
loopne
add
pop
shll
cmp
sub
add
jp
add
add
xchg
mov
and
jl
jle
sbb
mull
cld
int3
inc
fcompl
inc
je
add
cmp
into
mov
add
dec
lcall
mov
jno
enter
ss
shlb
cmc
ja
loope
mov
dec
lret
xchg
inc
push
and
rcrb
out
pop
jg
pop
repz
sbb
adc
mov
cmp
xlat
sub
jbe
imul
xor
ret
fsub
jp
addb
insb
std
sbb
push
and
cs
enter
pop
scas
adc
cmp
jns
xor
push
cmp
mov
pop
enter
sbb
or
cmc
cmpsl
das
sbb
xor
sub
mov
mov
push
push
inc
movb
jl
mov
pop
lods
dec
or
aad
xchg
test
lods
and
lock
mov
dec
mov
pop
cwtl
outsb
pop
mov
push
mov
ret
jg
in
sarb
jle
test
movsb
je
int3
jno
stc
fdivrp
xor
xor
iret
pusha
bnd
dec
rorb
sub
mov
cmp
adc
ss
inc
inc
sbb
lcall
iret
test
lret
mov
jbe
push
mov
mov
leave
jb
sub
divl
rorl
adc
fildl
jl
cmpsl
mov
pop
mov
sub
mov
in
push
or
cmpsl
adc
loopne
mov
cmp
inc
rcrl
popa
cmp
test
xchg
outsb
add
dec
es
adc
fwait
push
adc
mov
sbb
jmp
imul
mov
jg
and
pushf
add
pop
pop
jge
xchg
push
out
xchg
dec
mov
flds
test
call
jl
adc
mov
lss
addb
inc
lds
pop
mov
jp
lock
mov
mov
movb
daa
ret
rcrb
mulb
subb
daa
xchg
mov
mov
call
dec
mov
jo
rolb
les
dec
xor
push
jo
aaa
mov
jecxz
push
adc
mov
sub
add
aas
jbe
inc
scas
loopne
test
mov
dec
xor
cli
sar
jmp
and
divb
dec
pop
inc
adc
add
or
dec
lods
loopne
loopne
ficoml
xchg
inc
pop
push
ret
fisttpll
in
add
cmp
dec
add
call
jge
sub
fs
xor
xchg
xchg
fnstenv
sbb
or
loope
scas
icebp
fs
imul
cwtl
sub
push
in
fwait
or
jg
adc
stos
andb
mov
es
popl
sbb
and
mov
add
lret
fsubrl
adc
mov
jnp
clc
add
dec
cwtl
aas
and
out
xchg
and
add
call
movb
mov
sbb
cmpsb
mov
xor
insb
repnz
fstp
mov
pop
movsb
pop
adc
xchg
mov
test
hlt
lea
mov
sahf
mov
adc
aas
inc
add
ret
lcall
inc
shrb
ja
dec
loope
push
das
outsb
xchg
jmp
push
jge
xchg
mov
fsubl
andb
and
lds
insb
aad
das
pop
call
or
push
nop
xchg
shl
pop
sub
xchg
pushf
cmp
lahf
nop
jle
mov
fisubrl
roll
js
push
inc
or
loopne
rcrl
pusha
ss
sub
test
jo
aam
lock
mov
xor
pop
jo
adc
std
xchg
cmp
test
xchg
sub
xor
sub
dec
mov
xor
adc
and
aad
adc
insb
pop
cmc
xor
mov
test
in
in
cli
fs
rcll
jl
jp
push
jp
cli
out
dec
call
repnz
pop
pop
repnz
sti
mov
fadd
sbb
and
cmpsb
fcom
mov
aas
xor
dec
rorl
bnd
add
cmp
sbb
stc
imul
call
jecxz
sub
cltd
pushf
dec
mov
add
sub
aas
push
cld
sbb
jbe
lret
xor
sarl
les
lock
orl
ret
sbb
outsb
lods
pop
mov
aam
idivb
sarl
or
mov
cmp
loop
push
xchg
mov
or
inc
rcrb
jp
pop
dec
icebp
xor
out
out
mov
jb
icebp
mov
dec
push
xor
orl
jl
add
out
jp
xor
push
hlt
jnp
lock
jno
fcoml
cmp
fsubrs
and
xor
or
fdivrl
not
add
pop
or
out
push
adc
jl
test
lods
stos
and
and
or
cmp
lods
or
sub
dec
adc
xor
aam
hlt
pop
sub
shll
inc
mov
mov
call
sub
push
sbb
stc
xchg
mov
aaa
sahf
lret
push
inc
test
pop
xor
fnstsw
fstpl
loop
xchg
cltd
test
or
push
inc
dec
push
push
mov
fsubs
sub
in
ljmp
pop
mov
repnz
lods
push
nop
in
lods
sub
mov
sbbl
std
xorb
in
push
mov
and
insl
jmp
push
pushf
jns
loope
filds
mov
loope
sub
xsaveopt
addr16
dec
or
pop
inc
loope
test
inc
mov
lods
xor
mov
lcall
rorb
aam
add
add
idiv
repnz
cmp
jne
ret
les
dec
or
pop
popa
mov
add
je
jl
mov
ret
mov
sahf
jmp
add
dec
inc
mov
cmc
cmc
pop
std
ret
fcoml
jg
repnz
inc
in
mov
aaa
and
mov
push
aaa
dec
lods
je
sarl
add
ds
aam
mov
push
lret
popa
xchg
sbbl
mov
mov
push
aaa
xor
xor
loope
ds
cmp
cli
je
mov
mov
sarb
movsb
inc
out
not
ud0
jle
nop
movsb
int3
ds
mov
xor
xchg
cs
ret
or
mov
xor
lock
jnp
pop
mov
sub
jg
jne
cmp
popa
dec
cmp
shr
inc
lock
pusha
add
lods
mov
lods
test
je
push
or
out
sbb
jl
ret
inc
and
out
cltd
cld
hlt
cwtl
add
add
pop
jecxz
ljmp
aaa
xor
or
mov
push
dec
adc
mov
jmp
add
mov
or
add
push
xchg
pushf
inc
jbe
lret
mov
sbb
pop
or
dec
sti
movsl
push
lea
lock
test
pop
sub
les
test
and
lea
scas
mov
sarb
cwtl
aas
les
in
aam
aam
test
scas
shrl
ret
mov
xor
int
inc
inc
dec
xlat
lods
aas
push
cmpsb
sbb
or
pop
mov
daa
sbb
fdivs
jp
push
sub
and
movsl
pop
dec
andl
mov
popf
insb
insb
cld
rcr
mov
mov
lock
fldt
sub
jnp
dec
fldl
and
pop
jns
sbb
xchg
push
fs
sbb
ret
lea
push
pop
push
sub
mov
ficoml
popa
arpl
jp
push
movq
inc
sbb
dec
std
mov
jno
inc
scas
xor
jb
outsl
cmpl
pop
pop
mov
inc
mov
mov
lods
icebp
jl
push
inc
int
cmpsl
mov
dec
es
push
mov
push
jo
sti
ret
rclb
xor
loope
sub
add
mov
mov
das
adc
shll
rorl
loop
and
movsl
ret
cmpsl
or
sbb
in
rolb
mov
sub
inc
push
addr16
outsl
cmp
jle
mov
cmp
icebp
movsl
and
mov
dec
inc
inc
mov
ja
jo
fisubl
dec
mov
in
orl
xchg
mov
loop
imul
inc
mov
sbb
mov
fwait
loop
out
sub
push
mov
outsb
jbe
icebp
icebp
call
ret
dec
out
and
addb
sbb
dec
movsl
cmp
in
int
pushf
inc
xor
dec
mov
add
scas
out
scas
lret
inc
sbb
sbb
pop
cmp
and
mov
popa
add
and
push
inc
pop
sahf
mov
insl
sahf
adc
jp
dec
mov
pop
jae
or
cmp
dec
or
ret
shlb
or
outsl
insl
rclb
sbb
jno
popf
inc
jge
in
pop
mov
mov
xor
mov
sti
jo
les
and
and
pusha
jmp
jecxz
test
scas
mov
stos
add
mov
mov
xchg
and
sarl
aam
sbb
sbb
int
and
cmp
pinsrw
cli
repz
into
sarl
cs
and
loope
imul
inc
nop
mov
lahf
in
movsb
adcl
mov
cmp
cmpsb
pop
push
stos
aas
imul
shlb
add
repnz
xlat
xchg
inc
les
sti
cmp
pop
or
shlb
movb
mov
lock
js
cmp
xor
dec
imul
push
leave
adc
mov
push
mov
inc
pop
pop
fwait
push
or
push
cmp
movsl
lods
mov
mov
jecxz
je
jmp
inc
sbb
dec
mov
into
xor
add
scas
rolb
addl
cs
jne
sbb
mov
outsl
sub
mov
or
dec
xchg
pop
fsub
dec
mov
pop
test
add
fwait
popa
imul
filds
mov
cmc
orb
jno
mul
jae
nop
mov
add
push
push
movsb
jbe
test
pop
mov
cltd
out
popa
test
mov
inc
outsl
shlb
dec
mov
jge
orl
and
jecxz
jbe
and
outsb
cmpsb
fisttpl
pop
outsb
icebp
ret
add
push
push
sbb
stos
inc
mov
jbe
js
push
in
lock
jbe
idivl
or
mov
test
push
rol
rcl
adc
scas
rcll
sar
jecxz
shl
push
push
icebp
inc
fiadds
mov
push
inc
and
mov
jge
dec
sbb
aaa
push
adc
add
sar
jmp
ds
mov
dec
call
fisubs
roll
dec
ret
fwait
dec
jl
fsubp
sbb
xchg
adc
out
movsl
xchg
jbe
fsubrl
xchg
idivl
fdivrs
sub
insb
jbe
pop
pop
shlb
cmp
stc
mov
push
dec
adc
dec
hlt
pop
movsb
ret
mov
xchg
or
loope
jecxz
push
das
sahf
push
sar
aad
push
sbb
shrb
sub
xor
int3
dec
jle
js
test
ficoml
jne
lret
pop
aaa
mov
shlb
popa
jnp,pn
and
inc
fs
inc
sub
dec
mov
mov
jmp
pusha
sbb
in
push
push
jmp
imul
push
shrb
push
xor
cmp
call
sbb
lret
push
imul
ds
push
mov
mov
jo
or
ljmp
mov
pop
imul
mov
jecxz
dec
push
incb
jecxz
out
sub
addr16
push
cmp
jbe
ja
scas
jecxz
mov
adc
or
imul
push
sbb
mul
sub
movsb
pop
dec
arpl
popa
fldl
ret
sbb
inc
loopne
adc
add
ss
ret
rcl
insl
aaa
and
xchg
jg
mov
mov
sahf
out
xor
loope
xchg
dec
fcomps
xor
and
mov
jge
in
jno
aaa
dec
ret
insl
xchg
mov
add
sti
jmp
cmp
pop
xchg
sub
push
xchg
push
pop
ljmp
decl
arpl
mov
and
cmpsl
cld
sub
insb
jmp
and
inc
shrl
ret
lock
jmp
decl
jo
jno
les
inc
sahf
ja
into
js
shrb
push
cmp
or
ficompl
jb
pop
call
stos
fiaddl
dec
sub
insb
test
das
pop
test
cli
sti
mov
call
aad
jge
add
sarb
xchg
lods
inc
inc
and
fldenv
mov
pop
ret
push
dec
subb
mov
cs
into
mov
xchg
pop
sub
fisttpll
mov
xchg
dec
iret
rorl
mov
notl
mov
fimull
int3
rcll
mov
loope
lahf
rcrl
les
pop
ret
add
xchg
fldl
dec
adc
or
jmp
les
mov
cmp
mov
dec
outsl
adc
out
sub
xlat
sbb
dec
test
cmpl
imul
call
daa
dec
inc
mov
adc
sbb
fsubr
nop
lea
mov
and
in
insb
aad
cmc
xor
jnp
cmp
add
clc
dec
mov
nop
adc
movsl
push
and
jo
lret
and
add
sti
nop
lret
add
add
adc
jecxz
xchg
add
push
ud2
out
testl
stos
cmp
jg
scas
mov
cmp
inc
and
das
and
add
icebp
enter
sbb
out
lcall
adc
lea
xchg
mov
sbb
loop
pusha
jge
push
imul
add
shlb
loope
sub
pop
cmpsb
sub
loop
cmp
cmpb
cltd
arpl
push
sub
push
notl
minps
loop
sbb
add
cli
and
mov
xchg
lock
mov
testl
xor
dec
seto
xor
mov
adc
loope
cs
sbb
push
cwtl
adc
jecxz
lods
inc
mov
je
ficompl
cmpsl
xchg
cmp
dec
mov
je
loopne
shlb
outsl
fnsave
add
test
dec
mov
xor
push
and
xor
push
dec
push
add
push
imul
hlt
mov
rcrl
lahf
test
movsb
dec
out
inc
mov
jmp
out
insl
out
enter
gs
push
sbb
or
arpl
xor
xchg
xchg
repnz
pop
dec
jne
or
aad
push
movb
sub
clc
cmp
pop
mov
add
clc
nop
jp
jnp
outsl
imul
sbb
inc
mov
cs
mov
scas
loopne
jne
lock
add
scas
mov
mov
sbb
dec
cmpl
cltd
push
ret
aam
jmp
pop
out
lock
pop
insb
xchg
cwtl
and
jno
mov
sub
sub
je
lods
adc
test
dec
out
ja
xor
add
jb
sub
sbb
jne
arpl
lsl
jl
jmp
pop
xor
test
in
mov
shll
ss
js
data16
mov
mov
cvtps2pi
mov
push
ss
cmpb
std
dec
sub
stos
pushf
filds
jno
cwtl
adc
cmpsl
out
imul
sbb
sub
xlat
iret
add
pop
bswap
or
fsub
adc
xor
add
jns
lret
or
adc
cmc
dec
sbb
stc
or
sti
arpl
pop
sti
xor
fcomps
loope
mov
inc
lret
or
mov
cmp
jg
pusha
mov
cmp
add
lds
out
inc
int
inc
shrb
pop
rclb
adc
movsl
xchg
or
or
adc
jbe
imul
test
push
pop
add
gs
mov
mov
push
ret
and
xlat
sub
pop
fisttps
cmpsb
setge
sbb
sub
pop
aad
not
jmp
push
cmp
adc
fnstcw
fbstp
aaa
cmp
in
rol
add
mov
int
test
push
jne
ds
pushf
mov
cmc
cld
cmp
fstp
xor
cli
rorb
leave
cli
mov
orb
jae
je
testb
dec
pushaw
jle
inc
push
loope
aad
je
inc
clc
push
inc
jnp
inc
mov
test
cmpb
ret
mov
lock
dec
sbb
call
jmp
sbb
shll
stos
sub
xchg
xlat
add
lret
xor
aad
dec
aad
push
mov
cmp
sub
or
pop
or
adc
or
leave
dec
call
mov
mov
and
jl
sbb
je
mov
jmp
jbe
sbb
jno
aaa
std
insl
mov
call
xchg
adc
test
lea
adc
mov
dec
xor
adc
sub
hlt
ret
xor
or
out
outsl
push
mov
xor
pop
pop
mov
ss
repz
movsl
cmpsl
adc
or
repz
inc
and
mov
inc
jp
mov
mov
lods
dec
lods
cmc
push
mov
push
inc
popl
inc
rclb
push
or
aas
xor
fsubr
jbe
bnd
xor
scas
jge
and
xchg
pushf
and
push
jge
shlb
insl
adc
jle
nop
repnz
out
add
pop
dec
or
adc
pop
clc
or
and
pop
ljmp
push
ljmp
cmp
adc
sub
lea
and
ljmp
adc
xchg
mov
js
inc
cmp
sub
sbbb
subl
sub
jp
add
out
sub
inc
mov
jno
or
jg
into
scas
pop
xchg
jnp
mov
xchg
fstpl
and
mov
jnp
and
sbbl
es
cmpsl
imul
rcll
or
xor
push
push
jmp
push
outsb
test
pop
mov
fbstp
ds
sbb
xchg
insb
xchg
divl
inc
je
jmp
icebp
pcmpeqb
or
push
add
outsl
pushf
or
cmpsl
mov
jecxz
cmp
shrb
cli
and
imul
movsl
push
or
orl
repnz
mov
lea
pop
out
dec
inc
cmp
jmp
inc
cwtl
and
call
mov
test
inc
add
pop
dec
push
pop
add
pop
cli
add
mov
lods
push
or
dec
push
pop
mov
pop
xorb
mov
or
inc
add
mov
mov
lods
scas
mov
rcl
ds
lret
in
sub
nop
cli
adc
jae
into
loope
adc
mov
mov
int
xlat
jne
sbb
jecxz
gs
lret
hlt
add
ret
sub
stos
push
adc
fildll
jmp
pop
ds
call
xchg
into
jne
add
jno
jp
mov
dec
inc
mov
add
push
push
push
xchg
cmp
adc
mov
ret
aaa
sub
push
push
xchg
pop
or
and
adc
loop
push
insb
cmp
sub
outsb
aad
gs
nop
movsb
and
push
js
add
dec
ss
mov
test
sarl
xchg
add
pop
add
ljmp
jmp
mov
int
ja
faddp
push
jo
lcall
rol
fbstp
mov
sbb
cmp
push
mov
mov
jmp
scas
sub
adc
sbb
int
test
lods
or
aaa
loop
add
rclb
iret
mov
mov
mov
pop
nop
mov
jl
add
mov
jecxz
jmp
push
arpl
or
xor
adc
push
shlb
loop
rorb
sbb
mov
inc
mov
xor
test
scas
test
repz
xchg
mov
push
sar
jmp
xchg
test
inc
push
fucom
and
inc
adc
js
lock
daa
scas
and
fimull
mov
sarl
dec
mov
pushf
sahf
rcll
mov
js
arpl
jmp
ljmp
add
dec
gs
data16
sbb
stos
incb
punpckhwd
adc
and
xchg
test
dec
std
shlb
add
mov
scas
jmp
xorb
or
jp
stos
add
insl
hlt
decb
xchg
mov
hlt
mov
arpl
ret
jmp
cmpsb
or
or
or
js
mov
mov
or
ja
mov
push
or
movb
loope
add
add
inc
cmp
mov
add
ret
and
into
sub
mov
insb
cmpsl
mov
jne
inc
rorb
dec
lcall
mov
sub
or
xor
cmp
arpl
outsb
lods
jbe
adc
sarb
and
outsl
xorb
icebp
or
or
cmp
movsb
mov
jmp
sbb
xchg
mov
push
andb
pop
xor
mov
add
pop
or
add
mov
inc
adc
push
in
inc
in
test
pop
arpl
cli
cwtl
ljmp
add
jne
mov
add
jge
sbb
pop
repnz
pop
test
push
mov
sub
testb
mov
xchg
hlt
xor
ljmp
test
lock
inc
cmp
test
in
out
push
insb
lret
lahf
cs
sarb
pop
pop
and
xchg
js
pusha
dec
loopne
fisttpl
sbb
mov
mov
stos
cmp
xchg
out
mov
scas
test
mov
xorl
in
scas
adc
add
and
lahf
sbb
lock
roll
adc
je
cmpsl
dec
jge
push
and
lea
sbbb
mov
cmpsb
cs
mov
rolb
scas
shlb
cmpl
stos
pop
sbb
pop
gs
js
cmp
aas
or
adc
fidivrl
ret
adc
or
push
enter
xchg
sete
mov
pop
xchg
test
sbb
adc
sbb
cltd
and
loopne
fidivrs
lods
add
cld
add
pop
iret
das
cmp
aad
mov
jl
jecxz
add
loope
or
push
mov
aam
mov
jmp
stos
outsl
call
sub
add
fcmovb
pop
sub
and
mov
sahf
in
cmp
push
xor
push
clc
sbb
movsb
int
daa
push
cld
lods
in
scas
lods
gs
inc
jns
into
push
push
or
les
mov
jmp
dec
cmp
sahf
mov
xchg
adc
sar
ja
add
idivb
jp
jb
nop
outsb
mov
jno
push
push
call
orl
sub
pop
xlat
insl
push
sbb
mov
cmp
pop
push
jb
shll
mov
test
xlat
rorb
cmpb
cs
rclb
jle
add
jp
push
push
push
ds
addr16
scas
inc
jl
adc
les
jg
push
pop
cli
mov
out
push
cmp
mov
and
lcall
adc
add
inc
mov
int
dec
adc
js
lock
sbb
cwtl
andl
jae
roll
gs
enter
inc
stc
dec
mov
sbb
mov
inc
dec
cmpsl
adc
cs
hlt
stos
adc
jno
xchg
xor
insb
jp
dec
enter
pop
or
cli
int3
aam
inc
cmp
popa
lock
ror
sbb
int3
ljmp
loopne
add
out
xorl
cli
test
out
lahf
inc
popl
ja
ds
sbb
iret
cmp
std
jl
ret
mov
jg
mov
xchg
test
sub
psubq
or
dec
lret
mov
cvtpi2ps
fbld
add
push
scas
cltd
gs
rcrb
or
fidivl
mov
xlat
lahf
inc
inc
dec
add
add
mov
repz
xchg
xor
cmp
loop
push
jmp
sbb
cmp
cmp
jge
jmp
jnp
in
fucomip
in
repnz
pop
mov
sub
push
ljmp
xor
repnz
mov
add
in
and
ret
cli
or
lcall
out
movsl
scas
dec
jb
stc
xorb
inc
dec
jmp
sub
sub
in
fwait
mov
push
inc
cli
sub
pushf
test
xchg
ficomps
sub
add
push
rolb
sbb
mov
jl
pop
fucomp
in
test
xchg
sahf
xchg
mov
inc
xor
pop
mov
push
and
xor
xchg
int3
mov
jne
fidivrs
mov
data16
push
add
jns
mov
in
movsb
scas
xor
mov
and
mov
not
inc
ljmp
cmpsb
cmpsb
fbstp
cmp
ja
test
dec
lock
repz
adc
nop
or
out
sub
mov
out
inc
xchg
mov
jg
mov
inc
xor
mov
out
or
out
out
cmp
pop
js
icebp
sbb
aam
test
sbb
rcrl
sarb
daa
femms
or
xchg
rol
mov
add
pop
andl
pop
fildl
sub
sub
inc
jp
pop
rcr
inc
mov
je
push
mov
lods
xchg
push
cltd
mov
mov
xchg
cmpsl
mov
mov
dec
cmc
sbb
pop
movsl
inc
lahf
jo
inc
test
rcl
jo
js
or
jae
adc
aad
cld
push
loop
dec
loope
addl
and
ljmp
mov
sbb
lds
xor
filds
insb
cmpsl
iret
push
sar
nopl
mov
sbb
adc
adc
cmp
or
dec
mov
pop
xor
aaa
cs
push
stos
pop
roll
sub
rorb
outsl
shl
mov
stos
testb
jg
test
cmc
cwtl
repnz
dec
hlt
dec
imul
pop
scas
icebp
jae
xor
pop
jmp
mov
sub
pop
js
pop
adc
sub
stos
leave
pop
pop
scas
jg
aam
pop
inc
pushf
sbb
mov
pop
flds
addb
movsb
popa
mov
lods
mov
push
or
push
fnsave
and
loope
or
inc
sub
sub
add
aad
int3
sbb
push
sbb
rorb
or
dec
xor
adc
outsl
loopne
or
shrb
cmc
imul
lahf
cmp
aas
mov
and
push
or
mov
imul
and
xor
push
scas
or
pop
adc
dec
sbb
outsl
test
mov
jmp
xor
jbe
jno
pop
and
jecxz
imul
jns
jnp
int3
insb
push
cmp
mov
in
arpl
in
adc
jecxz
aam
xchg
mov
or
cld
test
adc
lods
pop
in
xchg
push
dec
add
pop
jae
sub
inc
cmpsl
xchg
cmp
adc
test
sub
iret
push
aad
fdivrs
nop
lock
out
xor
xchg
inc
cmp
lods
jns
pop
inc
inc
std
mov
sub
cmp
fcmovne
test
push
jns
adc
sub
pop
xchg
ljmp
sbb
loope
mov
pusha
pop
cmp
stos
push
dec
out
xchg
xor
in
jp
add
aad
mov
sub
notb
cld
pop
sbb
and
mov
aas
pop
mov
dec
mov
or
and
push
clc
mov
xchg
popf
sbb
out
mov
sub
clc
test
and
decb
sbb
add
gs
fnsave
popf
adc
sbb
imul
cmp
sub
ljmp
loop
loop
sub
push
mov
xchg
sbb
idivl
std
pop
out
mov
mov
lret
inc
fcmovnb
mov
add
fdivs
movsl
sub
ljmp
dec
pop
jbe
mov
push
into
and
aam
rolb
mov
cmp
test
arpl
out
sti
sti
out
arpl
test
xor
push
mov
xchg
xor
mov
push
inc
or
pop
adc
dec
mov
insl
int
xor
dec
adc
aaa
stc
adc
stos
fistpl
xor
cld
mov
arpl
cmp
mov
jne
jnp
add
and
mov
inc
in
lock
add
jmp
adc
or
lock
mov
xchg
je,pn
popf
jae
sub
mov
mov
out
jg
push
aas
mov
hlt
cmp
leave
call
jle
sub
mov
js
fbld
inc
ds
sub
inc
sbb
push
jp
sub
out
and
push
idivl
int3
sbb
and
xor
pop
je
loop
stos
pop
jb
mov
clc
fcmovu
lcall
sbb
andb
fiadds
lahf
or
fiadds
sbb
push
movsb
mov
imul
inc
push
pop
in
or
inc
mov
mov
jne
lock
mov
rcll
xchg
popf
test
mov
sti
xchg
jp
mov
sub
sbb
into
mov
cmp
dec
aas
mov
cld
push
inc
mulb
rolb
and
icebp
adcb
jmp
adc
subb
movsb
push
mov
xor
adc
fucomi
sbb
flds
dec
repnz
mov
pop
les
aad
shll
pop
lret
enter
jmp
cmpsl
xchg
div
je
sar
or
jbe
and
in
mov
jo
inc
ljmp
jp
cmp
aas
loopne
inc
dec
aad
xlat
hlt
push
mov
dec
js
cmp
push
jl
aad
rorb
ret
and
pop
test
and
loop
addb
adcb
int
iret
and
sar
dec
fsubr
jge
inc
pushl
cmp
cmpsb
sbb
jge
dec
leave
clc
inc
sub
xor
arpl
jbe
push
data16
push
push
mov
stos
dec
popf
and
insl
mov
add
cmp
mov
jecxz
pusha
ljmp
inc
jmp
mov
jbe
xor
inc
push
xchg
mov
jbe
clc
add
aam
sbb
loop
lock
sub
lods
cmc
adc
out
cmp
imul
dec
lret
arpl
cwtl
shlb
jae
cs
xchg
mov
dec
cwtl
inc
ss
mov
jmp
inc
push
pop
stc
inc
sbb
cmp
test
push
pop
inc
loope
or
inc
jp
pushf
lock
pushw
mov
loopne
lock
push
mov
adc
mov
lods
push
test
push
mov
or
dec
cltd
add
das
and
mov
push
inc
aas
ljmp
hlt
movb
and
js
rcrl
mov
cmc
test
mov
pop
loop
shlb
xchg
subl
clc
aam
xor
push
xlat
aam
mov
xor
mov
add
nop
dec
pop
and
and
pop
jle
rolb
or
out
adc
test
jp
xor
inc
mov
pop
push
pop
ja
cmp
lcall
fucomip
or
cmp
jge
imul
adc
and
cmp
mov
adc
leave
je
and
mov
pop
dec
sub
insl
out
ja
pop
pop
push
push
aad
mov
mov
jae
xor
hlt
adc
int3
cmp
cwtl
rclb
xorl
rorb
mov
or
or
xchg
xchg
adc
ret
add
jge
jae
or
or
leave
jl,pt
pop
push
jge
test
push
aaa
xor
inc
js
pop
sub
mov
add
aaa
push
inc
pop
pop
mov
sub
inc
mov
xor
rcll
cli
data16
arpl
pop
sbb
add
imul
sti
mov
cmpb
sbb
jnp
xchg
jns
push
push
lods
mul
cwtl
fmull
push
ja
and
ret
pop
or
or
mov
ja
sbb
or
push
push
add
push
test
inc
loopne
aaa
mov
pushf
xlat
push
bound
pop
cmpsl
testb
shrl
add
popa
jle
adc
es
dec
pop
dec
dec
jmp
pop
push
cmp
gs
call
mov
les
adc
cmp
push
lcall
and
jmp
mov
mov
jae
jne
movsl
inc
cmp
or
adc
mov
inc
add
jle
inc
js
imul
aaa
dec
mov
sbb
xchg
xor
lock
xchg
in
xorl
rorl
in
add
sub
xor
mov
jmp
ja
sub
shll
push
inc
vmread
cmp
pop
mov
sub
jae
outsb
test
lcall
das
or
ret
scas
adc
in
cmp
das
mov
mov
jne
mov
pop
add
xchg
xor
cmp
call
loopne
dec
sbb
jo
int3
mov
pop
loope
add
adc
fstl
xor
cmpsl
shlb
xor
push
inc
inc
inc
push
xor
add
pop
pushf
xlat
lea
mov
push
jge
xchg
adcl
inc
in
xor
xchg
loope
outsb
hlt
into
sub
jle
add
cli
jne
push
cmp
jne
pop
push
sbb
bound
paddusw
inc
pusha
punpckhwd
mov
rcll
fiaddl
xchg
ret
fdivrl
sbb
filds
jp
dec
loopne
push
and
xchg
cld
mov
jae
pop
adc
bnd
in
mov
mov
push
movsl
add
jle
sub
pusha
test
lea
push
data16
cwtl
inc
add
xchg
mov
test
aaa
jno
xor
xor
dec
in
xchg
jnp
out
push
cmp
outsb
clc
shr
push
and
mov
xor
fcomp
or
imul
sahf
dec
cmovns
inc
mov
pop
lea
je
imul
sub
sbb
push
push
jne
mov
inc
xor
dec
inc
mov
hlt
movsb
stos
adc
cmpsb
inc
adcl
push
cmp
cs
inc
mov
mov
and
stos
test
nop
xchg
repnz
inc
pop
imul
orl
pop
mov
adc
dec
inc
pop
mov
ss
dec
loope
push
mov
mov
adc
push
pop
lods
xchg
adc
mov
push
add
pop
xchg
jne
out
add
ljmp
repnz
or
pop
adc
inc
push
add
cltd
cmp
mov
fists
rcrb
pop
or
pop
xor
sub
mov
call
lea
adc
sbb
js
or
adc
and
jmp
ret
and
sahf
pop
movups
aam
in
xchg
adc
mov
add
roll
xchg
mov
mov
mov
mov
outsl
andl
and
insl
lret
pop
movsl
in
aam
cmp
sbb
aad
bswap
mov
daa
test
dec
adc
shlb
add
mov
lret
stc
pop
lahf
inc
dec
or
test
jmp
faddp
sbb
add
call
xor
jne
cmpsb
push
mov
inc
pop
mov
loopne
cmp
add
sub
mov
inc
add
scas
cmp
dec
bound
popa
sub
mov
loop
xchg
shlb
mov
roll
push
sub
icebp
pop
jb
fmuls
push
or
fisubrl
mov
mov
stos
xor
mov
mov
and
js
ffree
sbb
ss
mov
pop
add
or
shl
push
sub
aas
xchg
ret
lcall
sub
out
push
inc
repz
pop
adc
cmp
inc
lock
mov
xor
jno
rolb
push
enter
inc
jg
jnp
mov
test
add
lock
push
shlb
rorl
or
cmc
mov
xor
lds
test
add
ss
ds
js
aas
mov
or
push
xor
sbb
add
sti
mov
add
sahf
mov
xchg
je
push
pop
add
xchg
pop
cld
xchg
xchg
mov
sti
xlat
jo
jns
cwtl
push
addb
ret
xchg
clc
pop
and
stc
fnstsw
loope
imul
stos
adc
xchg
dec
insl
cmp
sbb
scas
mov
cwtl
jg
push
jns
loop
fsubrs
add
lds
lods
idiv
test
xchg
inc
std
push
aad
jne
push
lock
mov
sub
subb
mov
ljmp
inc
mov
aad
sub
jg
ffreep
xor
bound
insb
pop
or
xchg
aam
aad
stos
add
imul
xor
sbb
pushf
xor
ja
fbld
cwtl
stos
xchg
cmc
inc
push
in
fwait
push
pop
mov
jmp
out
jne
and
lds
xor
cmp
adc
mov
ljmp
int3
or
aaa
dec
movsb
icebp
iret
push
sbb
ss
inc
mov
jns
push
xchg
fisubrl
or
xchg
lock
repnz
dec
mov
lcall
psubusb
cmp
inc
aam
add
xor
pop
inc
jbe
addl
push
pop
call
loop
sbb
cld
cmp
cwtd
and
mov
lds
icebp
icebp
cvtdq2ps
fchs
push
scas
imul
lods
out
call
data16
repz
cmp
or
test
jae
mov
test
dec
add
ljmp
hlt
xchg
push
aaa
sarb
inc
push
pushf
ss
mov
cmp
jnp
xchg
sbb
lcall
xorl
inc
pop
and
cmc
mov
jmp
mov
loopne
int
add
inc
inc
push
cmc
pop
lds
add
xchg
div
inc
aas
mov
fcmovnb
mov
inc
cld
push
push
sbb
or
mov
jmp
sub
pop
call
add
sbb
mov
jne
inc
scas
adc
sub
push
and
push
dec
iret
adcb
push
clc
sbb
add
inc
adcb
lock
inc
ja
sub
cmp
push
xchg
cmp
cmp
lcall
adc
lea
xchg
mov
bound
mov
mov
push
mov
test
je
cmc
dec
out
popa
inc
sbb
shl
adc
pop
add
mov
xchg
dec
cmp
jne
ds
ds
jne
push
mov
mov
push
dec
xchg
and
jmp
js
test
aad
ret
pop
cmpsl
loopne
dec
pop
and
pop
or
mov
pusha
pop
stos
or
xor
insb
push
lahf
bound
xor
xchg
ret
subl
jo
lds
push
out
je
loope
xchg
cli
push
lods
lret
stc
or
xlat
inc
jmp
inc
out
arpl
or
lahf
xchg
cld
mov
xor
adc
jnp
mov
push
inc
insb
jl
adc
pop
or
jp
cmp
adc
popa
roll
adc
pusha
test
test
in
or
jno
jle
add
cmp
mov
sub
pop
pop
movsl
sub
and
mov
mov
adc
test
adc
pop
ret
add
and
jne
cmpsb
fisttpl
lret
insb
movsb
pop
jo
inc
dec
push
add
hlt
add
fidivrl
ficomps
xor
stos
in
cmp
aad
adc
notl
pop
inc
xchg
pusha
jge
mov
mov
mov
xor
shl
add
xchg
xchg
int3
jp
mov
fsubrl
dec
shlb
pop
mov
or
mov
mov
cmp
add
inc
add
adc
in
test
es
xor
xor
jg
hlt
mov
sub
outsl
je
sti
add
ds
add
push
aad
int
subl
dec
fiaddl
sarl
pop
push
or
adc
out
int3
ljmp
or
push
lds
jbe
outsb
cli
inc
test
inc
push
imul
xchg
add
cli
lods
pop
mov
and
mov
mov
icebp
cmp
outsl
scas
xor
inc
hlt
xchg
fimuls
cmpl
cmpsb
adc
mov
cld
nop
enter
jle
jae
mov
add
lock
roll
dec
pop
mov
mov
loop
inc
mov
out
cmp
rcrl
popa
mov
push
mov
adc
or
pop
dec
fst
inc
fs
push
jl
sarb
add
jl
subl
jb
pushl
test
or
adc
shr
dec
adc
gs
inc
imul
test
jecxz,pt
mov
and
and
fsubs
sub
orl
jecxz
cld
adc
or
outsb
rcpps
icebp
scas
sbb
and
daa
or
imul
call
push
fs
popf
movsl
and
imul
xlat
mov
add
dec
cmp
xchg
dec
or
adc
fisubs
cmp
xchg
push
lods
and
cmc
jne
pushf
loopne
xchg
adc
lahf
mov
loopne
cmp
push
and
xchg
int
lds
inc
sbb
jle
or
pop
jecxz
jb
mov
int
and
insb
daa
imul
push
adcb
popf
pop
dec
push
icebp
add
ljmp
ljmp
adc
jmp
jo
cmp
outsl
dec
fsubrl
ljmp
lock
shrb
stos
fdivp
iret
shrl
dec
inc
xchg
dec
pusha
push
test
dec
clc
mov
callw
and
and
lock
in
aas
jnp
inc
test
gs
cmp
jl
sub
and
subb
cmpsl
mov
or
pop
xorb
push
js
fwait
int3
bound
fcmovb
stos
push
mov
pop
daa
idivb
and
out
lods
lea
xchg
outsl
xchg
or
or
sbb
mov
lret
mov
das
dec
pand
or
cmp
mov
jb
jg
or
lahf
lahf
add
ret
ds
fnstcw
inc
and
lahf
cmpb
f2xm1
rolb
jae
jp
test
push
ret
cmp
lods
add
lds
add
cmp
mov
jp
imul
mov
jg
sub
clc
add
xlat
into
or
icebp
clc
and
pop
cmc
lds
dec
adc
mov
inc
sub
jbe
lods
lods
aam
cmp
je
push
mov
mov
rcll
inc
mov
mov
pop
inc
push
inc
mov
shrb
and
pusha
adc
ret
in
clc
dec
or
mov
adc
cwtl
mov
rolb
mov
out
scas
sbb
jle
jno
mov
test
lret
adc
mov
in
icebp
cld
leave
xchg
ja
sbb
cli
or
sub
out
cwtl
imul
fsub
leave
adc
lods
loopne
jge
fisttps
adc
inc
jmp
hlt
inc
shll
or
mov
icebp
ret
shr
out
loope
inc
jmp
test
and
into
cld
push
push
das
rolb
dec
ljmp
cmpb
mov
fcoml
je
daa
arpl
outsl
inc
mov
sbb
cmc
cmp
data16
push
jmp
loop
out
push
pop
sub
jo
call
mov
mov
pusha
add
aam
sbb
arpl
lea
gs
ret
cmp
insb
enter
adc
cmp
sbb
das
add
pop
push
aaa
addb
call
xchg
aam
dec
enter
fdivl
pop
sub
sar
xor
xchg
mov
enter
arpl
mov
das
cmp
inc
xor
push
sub
mov
or
pop
fucomip
shrb
fsubs
insl
pop
sbb
add
mov
stc
testb
lahf
sbb
pop
inc
roll
pop
pop
jmp
cmp
dec
ja
xchg
pop
jle
int
mov
mov
inc
dec
imul
mov
popa
xchg
mov
outsl
or
cmc
push
ror
inc
dec
or
dec
mov
dec
mov
sub
cmpsb
test
je
cmp
addr16
lcall
fs
pop
pop
mov
nop
in
shlb
or
cmp
mov
pop
ds
push
mov
mov
lods
lock
lcall
je
lea
sub
lds
jne
jp
negl
mov
xchg
jo
into
push
jo
cmp
jecxz
insb
mov
je
sbb
movsl
push
jl
add
outsw
jl
cltd
nop
shrb
pop
xor
into
push
std
xchg
adc
jl
push
or
xor
ficoms
xlat
loop
sub
sahf
mov
shll
in
filds
int
pop
cmpsl
lods
pop
aaa
outsl
mov
jg
inc
out
push
mov
adc
js
mov
pop
xchg
lock
sub
xor
dec
mov
mov
and
jecxz
push
push
aam
ljmp
imul
mov
popf
shll
xlat
scas
sub
popa
pop
aam
sahf
dec
mov
and
scas
test
xor
xor
imul
lds
mov
das
xchg
or
push
shll
sub
mov
test
inc
jmp
xor
mov
mov
jg
sbb
xlat
loope
push
mov
je
xor
push
or
cmp
test
adcb
lods
pop
xchg
dec
push
idiv
xor
sbb
sbb
cmpl
cmpsl
pop
and
shll
call
add
daa
hlt
pop
fisubs
cmp
ja
cs
mov
cli
pop
jae
pop
or
add
pop
xor
jmp
mov
and
or
hlt
or
push
and
stc
cmc
xor
sbb
lcall
pusha
fimuls
or
inc
in
insb
push
ljmp
jmp
jbe
jo
fs
mov
mov
fisttps
bound
sbb
cmp
pusha
sbb
movsl
std
jnp
xor
subb
pop
add
dec
push
stos
sub
xor
add
test
jmp
lds
shrl
mov
outsl
cltd
repnz
pop
insl
push
fmull
sbb
inc
arpl
pop
lock
inc
cmp
not
and
cmpsl
pop
and
push
imul
hlt
mov
add
insl
xor
movsl
jne
ret
insb
ficoms
jo
mov
and
cmpsl
or
loop
scas
mov
rolb
and
popf
sub
or
sbb
movsb
xor
push
sbb
mov
xor
push
sbb
aas
dec
outsl
jns
test
add
je
shl
hlt
inc
and
dec
addr16
add
or
mov
push
push
cmc
inc
dec
fwait
adc
and
add
out
and
outsb
jmp
ss
sbb
adc
xchg
adc
es
mov
enter
dec
ss
or
jno
andl
loop
and
dec
pop
mov
test
pushf
add
out
stos
and
test
cmp
lahf
pop
pop
and
adc
mov
aaa
scas
push
mov
mov
loope
jns
enter
incl
aad
aad
ds
movsl
xor
push
mov
jmp
movsl
test
std
adc
cmpsb
fwait
jp
sbb
es
jmp
inc
inc
mov
and
loopne
pop
dec
fsubrs
pop
jne
adc
ljmp
pop
push
ud0
xor
daa
pmullw
jbe
mov
call
push
gs
push
int3
test
enter
mov
loop
lds
insb
jae
mov
xor
nop
cmp
inc
and
xor
sbb
add
or
and
adc
lock
loopne
push
gs
pop
fdivl
call
inc
cmp
jge
lock
int
jge
call
sahf
es
dec
bound
loop
int3
inc
in
dec
xchg
into
mov
xchg
xor
and
sarl
mov
into
out
stc
mov
popf
cld
inc
cmp
imul
orl
pop
jbe
aam
ret
arpl
or
cmp
mov
or
push
xor
movsb
lock
mov
sti
or
icebp
ret
pop
lret
rcr
inc
xor
cmp
scas
js
js
sbb
pop
mov
inc
push
fiaddl
mov
or
jp
jl
jns
or
xlat
pop
faddl
mov
loope
pop
cmpsl
test
std
adc
jmp
test
mov
cmp
jo
jp
push
adc
mov
scas
insl
cmp
cld
xor
lock
push
xor
hlt
jmp
mov
arpl
and
aas
out
dec
call
sub
push
mov
mov
bound
bound
addr16
mov
dec
xchg
mov
mov
insl
sub
mov
dec
pop
test
adc
sub
addl
test
xlat
add
xor
inc
stc
xor
cmpsb
add
leave
fcmovb
cmp
loopne
xchg
cld
push
rolb
push
jno
push
mov
mov
cmc
rorb
movl
subb
dec
push
jecxz
push
ror
mov
into
movb
and
sub
movhps
xchg
fdiv
into
je
pop
mov
mov
inc
cmp
add
push
push
cmpsb
daa
push
fcoml
adc
jle
outsb
jno
ljmp
adc
stc
xor
ja
add
mov
inc
push
test
push
and
fucom
and
mov
cmc
pusha
aam
rorb
adc
rcll
popa
aam
test
xchg
jno
pop
loopne
and
xor
pop
and
fnstcw
into
pushf
push
add
in
out
movsb
les
lcall
jg
xchg
xchg
mov
inc
inc
push
arpl
cwtl
jg
rcrb
adc
dec
dec
std
mov
out
pop
incl
or
jae
aas
lods
add
cmpsb
inc
out
sub
lods
or
add
dec
cs
ja
inc
adc
rol
sub
pop
xchg
cltd
repnz
lock
popf
and
sbb
sub
sahf
dec
lret
and
lds
add
sub
insb
inc
or
and
xchg
dec
jge
ds
hlt
mov
mov
lea
inc
pop
in
or
std
ss
push
fiaddl
or
mov
loopne
cmpsl
orb
sahf
jo
adc
jmp
jo
je
xchg
pop
out
fmull
mov
push
pop
or
pop
or
sti
int3
test
rcl
cmp
mov
ss
mov
or
sbb
hlt
ror
mov
adc
sti
hlt
add
or
lds
xlat
addr16
add
imul
lret
clc
xor
jg
orb
xchg
pop
or
xchg
orb
aam
fwait
jne
fisubs
movsl
pop
cmp
jp
add
inc
bound
dec
jecxz
hlt
cmp
dec
mov
jmp
add
or
xor
mov
add
dec
jg
xchg
imul
jp
and
sub
or
loop
addr16
jmp
mov
mov
xor
mov
add
test
inc
push
lods
insb
pop
mov
or
popa
fwait
add
cmp
cmp
lock
dec
cmpsl
add
jno
ds
je
xchg
test
loope
push
cmp
test
mov
add
sbb
xchg
push
subl
clc
test
mov
pop
cmp
pop
mov
cmpsl
repz
or
loop
mov
sbb
je
pop
xor
inc
pop
std
shll
sub
lcall
lds
sub
addb
cmc
jmp
je
pushf
stos
insl
add
pop
sti
fld
inc
sbb
add
lcall
mov
lods
push
cmpl
xchg
stos
or
es
add
scas
scas
inc
je
inc
ret
cs
inc
pop
pop
rcrb
insb
mov
lods
cli
loopne
pusha
or
pop
add
pop
insb
mov
jge
fst
adcl
hlt
and
in
daa
xchg
mov
push
insl
sti
cwtl
add
sti
xchg
ret
sahf
pop
add
addr16
mov
pop
mov
in
inc
dec
cmp
sub
imul
xlat
mov
xorl
jecxz
aaa
lret
sub
mov
push
loopne
lcall
sahf
push
movsb
fsts
sbb
loop
ror
lds
sahf
les
sub
lcall
clc
inc
push
in
adc
imul
pop
iret
pop
jae
loope
xor
gs
icebp
movsl
jle
sbb
inc
sub
popa
cmp
dec
or
add
push
movsl
push
out
pop
xchg
fwait
and
cmpl
jmp
lods
orl
adc
xchg
mov
aam
in
push
and
adc
ficoms
outsl
or
sahf
orb
mov
sub
cmpsb
and
popa
sub
push
pusha
jno
and
outsl
add
inc
dec
mov
mov
enter
and
ret
cwtl
cltd
int
and
test
inc
stos
sub
mov
orl
and
xchg
ja
cmc
xor
mov
mov
into
xor
adc
dec
icebp
jae
shrb
sbb
add
shlb
sub
jno
jp
xchg
cmp
sar
xchg
lret
sbb
dec
lods
and
or
std
mov
stos
and
inc
add
push
stos
xlat
imul
js
je
xlat
jmp
inc
les
or
mov
shrl
pushf
lahf
stc
cmp
out
sub
add
mov
add
xor
push
mov
or
xchg
repz
mov
dec
inc
push
loopne
loopne
jo
mov
ret
in
ret
sbb
nop
test
arpl
imul
dec
and
mov
xchg
arpl
ret
lods
pop
call
pop
cmpb
pop
and
or
cmpb
xor
mov
repz
mov
add
cmp
pushf
sahf
fwait
inc
loop
bound
mov
adc
sbb
das
adc
sbb
loopne
test
xor
mov
mov
mov
daa
lret
push
mov
enter
xor
cltd
dec
xchg
dec
inc
xor
mov
add
xor
pusha
mov
jnp
xchg
sub
mov
gs
es
cli
pop
rorl
push
push
cld
fidivl
fldl
js
mov
push
les
dec
xlat
inc
out
jo
cltd
lock
sub
inc
stos
jg
scas
add
ljmp
shl
sub
lea
sbb
test
out
xchg
xchg
ret
pop
inc
sti
clc
inc
add
int
sbb
cltd
push
or
xorl
cwtl
les
dec
pop
lods
adc
sub
int
loopne
and
gs
nop
jo
or
adc
mov
mov
jo
shl
shrl
mov
or
or
pop
cltd
add
fcmovnbe
je
les
mov
int
and
loope
and
jle
insl
movsl
mov
scas
mov
inc
and
dec
sbb
or
lea
mov
pop
jl
or
jmp
mov
dec
outsb
and
jnp
mov
pushf
test
enter
stos
inc
test
push
or
les
rorb
mov
and
addl
mov
fiadds
push
or
sbb
dec
cld
out
js
xchg
add
movsl
jmp
add
mov
push
or
push
outsb
mov
push
push
loopne
mov
adc
mov
dec
loope
pusha
inc
cli
sub
fldt
xchg
pop
push
leave
push
addr16
xor
inc
mov
shlb
mov
sub
inc
movsl
adc
pop
pop
and
js
cmp
stos
mov
sbb
mov
dec
adc
push
xchg
pop
sub
ss
add
lods
rorl
mov
popf
ret
cmc
decb
pop
xor
js
adc
cmpsl
int
test
xchg
or
or
fs
dec
je
test
out
mov
fcmovb
push
push
jo
jge
aaa
in
push
jle
cltd
test
out
or
adc
jne
jo
xchg
xchg
push
aas
jecxz
add
adc
and
scas
popa
std
ja
mov
out
pop
pop
or
xor
sbb
mov
pushf
add
insb
xchg
call
rcr
repz
or
dec
sti
jns
pop
xor
xchg
ja
xchg
jecxz
push
cmp
in
adc
adc
xchg
sbb
jl
xchg
cmp
adc
clc
sarl
out
pop
mov
inc
lcall
push
imul
pop
loop
cmp
lahf
and
icebp
dec
inc
loopne
imul
jne
in
mov
xchg
lea
push
out
and
sbb
scas
sub
repz
lea
sti
pop
out
outsb
mov
pop
mov
lods
jne
add
rorl
in
fcmovbe
cmc
stos
xchg
mov
inc
insb
divl
mov
inc
imul
rolb
cmovs
jnp
and
int
inc
sub
mov
or
aas
movsb
xchg
adc
cmp
orl
xchg
lods
ret
bound
mov
xchg
andl
nop
add
jg
xor
mov
inc
in
cld
out
adc
push
es
dec
cmpb
loope
aad
jo
dec
aam
test
xchg
push
js
js
mov
sub
sbbl
mov
shlb
js
iret
mov
les
inc
popa
or
cltd
mov
movsl
ds
fistpl
rorb
mov
std
les
in
and
dec
xchg
outsb
and
repnz
dec
test
cmpsl
dec
mov
fucom
fsubs
pop
scas
add
arpl
xchg
cmp
push
jg
jno
das
jns
inc
pop
adc
mov
pusha
fbld
cltd
mov
test
pop
pop
pop
ljmp
call
ficompl
loopne
dec
sbb
test
rcrb
pop
or
jge
loopne
enter
pop
inc
lret
mov
pop
cmpsb
or
mov
jecxz
lods
fwait
scas
pusha
call
enter
test
xor
cmpsl
movsb
push
mov
jno
cmpsl
dec
or
and
es
xchg
imul
mov
jns
es
or
adcb
sbb
inc
cmp
cmp
dec
add
jle
xor
pop
sub
popa
jnp
aaa
add
cmp
xchg
lea
hlt
arpl
or
mov
pop
sbb
push
dec
cltd
dec
add
cmp
popf
push
inc
jp
in
arpl
cmp
sub
xor
in
xor
xchg
lcall
mov
and
push
adc
iret
xor
hlt
inc
ja
jecxz
shrb
or
stos
adc
mov
addb
iret
in
mov
int3
mov
pop
mov
pushf
pop
xchg
or
imul
daa
shll
jp
push
inc
outsl
mov
fdiv
inc
daa
imul
loopne
mov
int3
mov
pop
cmp
mov
and
jns
mov
mov
test
add
sbbl
jmp
sbb
mov
sarl
mov
jae
ret
shrb
jge
xchg
xlat
xor
pop
mov
nop
inc
imul
or
sub
pop
mov
aad
cmp
pop
sub
stc
mov
or
sbb
sbb
cld
xchg
fldcw
adc
push
inc
out
and
xchg
and
aad
rcl
lcall
sub
xchg
adc
add
cmp
sub
movb
lods
clc
add
hlt
jae
lret
mov
fs
jmp
inc
mov
mov
and
js
outsl
dec
shll
adc
enter
mov
enter
add
and
sub
out
dec
fbstp
mov
movsb
aam
jnp
shl
jle
inc
test
ror
pop
das
push
xor
cs
je
jo
decb
xor
mov
cmc
imul
pop
loope
testl
cmpsb
inc
jl
push
sbb
cwtl
stos
push
inc
mov
mov
mov
or
dec
dec
add
pop
dec
rcrb
push
out
mov
jne
cmp
sbb
jmp
mov
sub
mov
aas
mov
ret
out
cltd
arpl
dec
or
loope
daa
cld
push
ja
mov
clc
repnz
dec
pop
and
inc
dec
xchg
pop
jbe
test
jecxz
mov
mov
je
mull
sti
mov
outsl
xchg
and
mov
test
hlt
clc
hlt
cwtl
mov
out
int
outsb
pop
adc
adc
xchg
dec
push
push
xchg
aam
leave
inc
sti
repnz
inc
add
xchg
xchg
xor
jae
push
scas
sbb
test
mov
icebp
scas
xchg
xor
push
fstp
insb
cmp
lock
nop
mov
addl
out
in
xchg
imul
pop
je
stos
cmp
cmpsb
in
insl
mov
or
adc
ljmp
arpl
rorl
lds
hlt
xchg
jbe
xor
sbb
xlat
sub
and
es
loopne
mov
push
js
call
fidivs
mov
stc
out
das
xchg
call
inc
lods
movsl
cli
pop
xor
mov
jg
dec
bound
ret
or
add
push
fldcw
adc
mov
fistl
adc
movsl
dec
mov
lods
inc
lods
jbe
mov
xchg
dec
mov
adc
cld
sahf
in
cmc
jg
xor
mov
aad
roll
adc
cmp
add
lcall
lcall
dec
add
pop
pop
push
jp
loope
imul
mov
xchg
push
mov
jae
jge
aas
call
filds
mov
andb
fsubs
js
nop
or
stc
push
sub
sub
je
pop
sti
adc
cmp
xor
push
dec
and
jmp
jecxz
lret
xor
push
xor
jne
jecxz
or
cmpb
insl
fdivs
sub
and
sbb
dec
jecxz
jno
scas
xchg
jl
sub
out
xchg
or
ss
pop
out
loope
loop
push
and
mov
mov
imul
push
loopne
sbb
rorb
mov
rclb
or
popa
int
js
or
cmp
cmp
adc
stos
jg
cmp
dec
xor
cmp
add
pusha
fs
adc
fiaddl
sub
ss
fistpll
push
scas
add
jp
inc
cli
lcall
js
nop
sub
and
jo
mov
inc
and
xor
rcr
xchg
movsl
xor
inc
jno
js
loopne
xor
mov
xchg
or
pushl
fstpt
sbb
lahf
lods
pop
sahf
pop
cmp
aas
in
cli
test
push
mov
and
sub
in
sahf
cmp
sub
inc
dec
push
jecxz
xor
dec
insl
and
leave
test
xor
add
xor
cmp
pop
pop
pop
lods
xchg
mov
inc
aad
lods
push
in
rcl
lahf
out
xchg
pop
movl
xchg
je
aaa
les
xlat
dec
xchg
scas
inc
push
daa
je
xchg
and
adc
adc
add
cmp
mov
inc
mov
dec
dec
lds
xor
fdivs
xchg
rorb
push
jno
ror
icebp
sbb
rcl
cmovp
adc
adc
xchg
push
inc
dec
cli
xor
xor
add
add
or
stos
lcall
cmp
or
aad
stos
mov
scas
popa
popa
loop
jnp
pop
daa
aad
daa
mov
outsb
inc
aad
add
mov
aaa
sub
imul
or
xchg
cmp
cmc
leave
aas
rorb
and
adc
mov
imul
shlb
mov
mov
inc
add
jge
fldcw
mov
pop
push
push
xor
aam
mov
dec
jl
test
sbb
pop
add
jnp
fwait
mov
fildl
jo
or
add
jne
push
xchg
sub
ret
push
lods
rcll
mov
xchg
or
std
mov
movb
dec
push
and
aaa
dec
loopne
mov
pop
out
not
rclb
leave
pop
mov
pop
mov
ret
cli
mov
dec
adc
inc
jno
mov
popa
fsubr
ljmp
sbb
rcrb
inc
mov
aad
jne
subb
push
xor
dec
jmp
pop
pop
mov
and
jae
icebp
push
sub
add
js
xor
add
xor
jg
pop
call
xchg
sub
test
sbb
cmpsl
sahf
or
icebp
and
and
mov
adc
dec
jne
loopne
or
dec
inc
movsb
xor
adc
and
subl
add
pop
xchg
adc
inc
cli
dec
and
add
pop
rorb
pop
inc
inc
mov
dec
ret
cmp
pop
push
aam
movsl
push
push
adc
adc
rclb
sbb
or
ret
scas
lds
idivb
push
pusha
jbe
cmp
js
xorb
negl
inc
pop
in
arpl
cmp
ret
pop
cs
arpl
pushf
xor
pop
push
pop
dec
xor
or
sub
sar
jmp
pop
test
mov
sbb
andb
inc
ljmp
xlat
mov
and
adc
aam
mov
movl
test
sub
es
adc
jo
out
rcrb
push
inc
push
xor
cmp
add
or
pop
repz
or
pop
mov
lods
jmp
rclb
sbb
fwait
add
pop
mov
mov
mov
adc
out
xor
cmp
dec
dec
jns
pop
incl
mov
mov
call
mov
jcxz
negb
les
mov
imul
clc
or
cwtl
push
std
insl
jne
roll
out
xchg
mov
pop
imul
jg
sbbl
inc
outsl
in
in
subl
inc
sbb
mov
adc
ret
std
shl
rorl
jecxz
jne
bound
loopne
fisttpl
jmp
in
rcrb
jne
inc
sahf
and
stc
loop
push
jno
bnd
jmp
insb
add
cmpb
push
shr
pop
jns
or
dec
imul
pop
test
adc
and
aam
xor
or
mov
insl
mov
mov
scas
into
ds
jg
jo
je
out
and
mov
outsl
sub
jecxz
popa
sbb
dec
add
clc
jmp
or
rolb
sub
popa
or
jmp
dec
add
jl
xchg
jno
in
or
mov
pop
test
in
daa
stos
jo
sti
inc
sbb
mov
pop
mov
jge
add
and
pop
cmp
imull
cld
hlt
outsb
jbe
push
xchg
inc
mov
int3
pop
jp
sub
mov
sub
mov
mov
mov
xorl
dec
push
dec
sbb
mov
fnstsw
dec
dec
sti
test
popa
sbb
dec
aas
push
out
mov
xchg
sub
and
push
or
mov
mov
mov
dec
lds
push
mov
mov
xchg
sbb
jecxz
idivb
sbb
inc
imul
jbe
int3
jp
xlat
dec
sti
cmp
repz
cmp
jmp
pop
mov
scas
xchg
xor
sahf
addb
sbb
in
adc
out
mov
adc
mov
add
rcrb
in
jmp
aam
rcll
fwait
ret
inc
and
insl
xor
mov
sbb
ljmp
bound
cltd
loop
pop
adc
push
bound
mov
into
rorb
lret
pop
xor
push
lret
xchg
inc
sbb
outsl
dec
lcall
test
rorb
fidivs
dec
xor
dec
push
adc
call
xor
jg
xor
in
xchg
inc
and
and
lret
add
mov
cs
sbb
lcall
xor
jo
fwait
inc
int3
roll
popf
adc
ss
sbb
rcrl
ss
jmp
shll
push
add
xchg
mov
and
cmp
mov
andb
cmp
adcl
add
hlt
add
enter
xlat
add
jo
mov
inc
xor
movsl
testb
push
xchg
push
mov
add
out
icebp
push
jns
imul
daa
jge
mov
sahf
das
adc
aas
ret
add
leave
mov
adc
xor
jbe
pushl
adc
into
push
pop
popf
adc
movsb
push
stos
push
pop
jo
dec
movsb
cli
mov
jbe
gs
jo
xor
je
mov
clc
icebp
inc
sbb
fbld
lahf
testb
and
leave
insl
inc
mov
into
xchg
lret
pop
xchg
ret
xor
popa
dec
push
sbb
dec
lret
popw
test
jne
adc
mov
movsl
loopne
out
push
cmp
dec
push
sbb
adc
mov
loope
xor
mov
jae
or
jg
mov
jmp
jnp
gs
mov
fdiv
lcall
and
loop
xchg
das
movsb
dec
iret
mov
adc
sbbb
pop
pushf
shrb
mov
in
enter
sbb
das
in
xchg
movsl
repnz
sub
pop
jp
repnz
jge
rol
repz
decl
or
xchg
or
cld
cmp
mov
pop
dec
push
cs
cltd
or
es
and
mov
and
nop
xchg
ja
push
stos
xor
movsb
sbb
xor
loope
out
ds
mov
cmp
fbstp
add
rcrb
lock
dec
inc
insl
dec
test
dec
xchg
mov
pop
pushf
sbb
gs
add
pop
mov
pop
ja
stc
xchg
aaa
in
movsl
scas
in
add
in
push
add
add
les
movsl
dec
out
xchg
pop
repnz
sub
cmp
imul
pop
inc
mov
lds
js
rclb
lret
pop
repz
pop
lahf
push
popf
cmp
cmp
int3
icebp
jb
or
dec
loope
sbb
in
hlt
lds
sbb
ja
pop
add
jb
xchg
fcmovu
push
pop
psubb
cmpl
or
dec
call
outsb
shll
xchg
xchg
xchg
cwtl
pusha
cmpsl
repz
dec
mov
movsl
push
add
jmp
js
cmp
xor
cmp
inc
add
rorb
pop
icebp
lock
mov
pusha
cmp
adc
sub
nop
pop
xchg
cmp
fisttpll
sbb
jl
pop
rcl
loope
mov
jbe
lret
mov
loope
jl
or
arpl
inc
xor
sub
pop
add
subl
cs
add
imul
push
and
jmp
mov
adc
pop
lahf
adc
cmc
and
mov
push
add
inc
shl
fisubs
cmp
lds
add
inc
jl
mov
in
fwait
jno
clc
sbb
nop
or
adc
mov
les
dec
mov
adcl
xchg
rcr
mov
in
hlt
popf
into
add
mov
jge
pop
pop
dec
movb
cltd
mov
dec
cmp
xchg
xchg
stos
inc
mov
sbb
pop
lock
mov
mov
xor
adc
pushl
or
repz
cmp
push
fwait
in
lret
cmp
cmc
sub
nop
xor
icebp
push
xchg
psadbw
xor
adc
mov
lret
jae
ret
inc
push
jbe
push
inc
das
xchg
lods
mov
js
mov
xchg
leave
orl
mov
sub
or
push
mov
std
shld
push
xchg
pop
fdivrs
cmpsb
inc
cld
adc
mov
movsl
or
dec
cmp
inc
sub
lock
add
mov
mov
mov
les
aaa
push
je
adc
mov
in
scas
cli
jmp
lods
jne
test
inc
or
addr16
fdivl
jno
or
scas
in
jecxz
dec
sub
ss
ljmp
iret
and
mov
mov
jle
je
aas
lret
orb
test
test
ja
or
xlat
add
add
fiadds
sbb
js
fidivs
out
sub
dec
pop
dec
cmp
jle
adc
out
sub
lret
jb
or
sub
decl
add
out
adc
roll
ds
mov
push
jmp
mov
mov
push
mov
movsl
cwtl
imul
scas
pop
and
push
fxam
sub
push
into
add
fucompp
stos
rcr
mov
lock
shrb
fwait
mov
mov
mov
sbb
push
mov
jne
cli
test
mov
je
pop
loope
inc
sbbl
cmc
mov
dec
jnp
xchg
pop
shrl
mov
xor
aas
mov
xor
pop
or
roll
pop
dec
loope
jl
sbb
out
lcall
push
lods
mov
sub
fnstenv
sarl
shll
movsb
outsb
adc
xor
iret
pop
cmpsl
jne
pop
movsl
cmpsl
xlat
push
or
fwait
sbb
and
sub
stos
stos
add
std
imul
fsubs
xchg
cwtl
and
aas
loope
sbb
mov
cmp
pop
loop
int
and
rcl
mov
les
sahf
add
inc
ffree
mov
bound
inc
lcall
add
xor
adc
xor
imul
mov
and
or
cmp
mov
jmp
shlb
hlt
xor
shlb
std
and
or
lret
xchg
jp
or
vmovntps
cs
cmc
pop
test
dec
call
imul
dec
inc
js
adc
mov
cwtl
pusha
pusha
das
mov
je
jecxz
loop
outsb
aad
inc
jp
inc
lcall
jle
cmp
fadd
inc
adc
sub
sbb
mov
jmp
mov
xor
sub
lods
inc
movsb
cmp
fdivp
test
jne
and
lods
repz
sub
push
fdivs
inc
cmp
out
out
mov
jmp
jb
rorb
xchg
clc
repz
mov
mov
rcr
jno
loope
lahf
sahf
mov
test
mov
and
pop
or
pop
adc
xchg
dec
scas
xchg
jo
ret
mov
orl
pop
pop
adc
nop
or
jno
add
dec
aas
cmp
adcb
orb
int3
call
mov
xchg
or
pop
pop
addb
xchg
push
mov
pop
cmpsl
add
mov
js
scas
and
bound
dec
stos
call
hlt
cwtl
add
add
push
pop
sbb
loopne
ret
sub
mov
out
mov
popf
mov
icebp
leave
xchg
sbb
xchg
and
lret
sbb
cmp
xlat
mov
rcrb
clc
scas
add
inc
loopne
iret
mov
and
adc
test
dec
sub
push
aad
push
pop
ret
in
adc
addr16
dec
jg
icebp
jge
or
rcll
fcoml
pop
and
mov
fnstsw
loopne
mov
jno
push
ja
and
enter
fmul
rorb
cli
adc
or
push
sbbb
pusha
ss
inc
shll
fdivrl
mov
decb
inc
cmc
and
sbb
pop
rorl
js
stos
jp
add
mov
test
sbb
inc
dec
cli
push
pop
aad
out
shlb
jae
adc
cs
icebp
pop
mov
sbb
dec
hlt
add
jno
inc
out
hlt
push
dec
loope
xor
xor
mov
or
jle
cmp
sub
test
outsl
mov
aam
sahf
mov
xchg
mov
pop
movsb
push
or
xor
cmp
incl
sar
adc
sbb
loop
sbb
pop
pop
or
movsl
adcb
or
aaa
gs
jle
test
sub
aaa
and
les
push
addr16
dec
or
icebp
push
pop
mov
jge
and
pop
dec
xor
fidivrl
rcrl
cmpsb
pop
xlat
push
pusha
into
mov
imul
fs
cmp
outsb
add
aad
mov
xor
outsb
mov
xchg
push
dec
mov
stos
iret
rolb
sub
cmpsb
test
push
add
dec
xor
add
push
mov
fstps
inc
imul
test
mov
or
inc
sbb
cmpsb
xchg
rcrl
xor
enter
test
mov
mov
sbb
test
stc
insl
xor
aas
jp
xchg
xchg
mov
bound
sarl
pop
fsqrt
push
daa
or
jp
pop
xor
sbb
add
sbb
inc
adc
repnz
leave
pop
and
stos
ffreep
es
xchg
sti
ja
dec
loope
push
mov
adc
cmp
sbb
mov
sbb
sbbb
add
xor
sar
push
xor
imul
xor
xchg
cmpsl
int3
negl
cmpsl
xchg
test
and
xchg
pop
cmpsb
out
outsl
addl
xor
imul
pop
imul
test
loop
add
cmp
mov
mov
xchg
adc
jg
aas
aas
call
xchg
dec
xlat
leave
ror
adc
loopne
hlt
xlat
cmp
cmp
pop
mov
adc
dec
sub
imul
outsb
enter
inc
cmc
loopne
sub
mov
iret
or
lods
popa
dec
cmp
and
cli
popa
cwtl
orl
push
cld
int3
push
adcl
movsl
inc
cmp
call
xchg
pop
insl
mov
push
mov
inc
fistpl
shr
sub
cmp
xchg
push
xor
sbb
push
sbb
mov
cmp
push
push
das
loopne
mov
cmp
mov
and
push
sub
dec
sbb
mov
pop
inc
dec
pop
aad
clc
aas
sbb
imul
lods
and
data16
adc
lock
xor
movsl
jo
sub
mov
movsl
bound
lahf
ror
or
push
ret
add
cmp
jmp
out
xchg
enter
push
aaa
mov
jg
and
lea
movb
xlat
pop
mov
mov
or
jg
add
cmp
push
fwait
pop
lret
je
vcomiss
out
xchg
nop
cltd
add
js,pn
inc
cmp
popf
pop
aas
push
insl
ss
cli
adc
clc
mov
adc
orb
jo
ret
aas
add
add
shlb
jecxz
cmp
push
das
cs
pusha
rcr
in
sbb
sbb
je
adc
scas
dec
call
mov
orl
cmp
jns
push
and
push
js
mov
outsl
sbb
test
dec
jns
jp
les
cmpsb
mov
popf
and
mov
out
or
scas
loopne
and
adc
in
sbb
mov
cmp
inc
in
inc
es
mov
lock
inc
mov
divb
xchg
jns
adc
shlb
movsl
adc
mov
fsts
mov
movsl
and
jecxz
dec
movsl
stos
das
inc
xor
and
lret
mov
pop
loop
movb
loopne
push
mov
lea
ljmp
inc
lcall
mov
xchg
inc
mov
lcall
pop
adc
inc
add
testb
cmpsl
ret
inc
idivb
lret
mov
stc
scas
xchg
jb
add
fisubrl
or
in
add
mov
scas
je
je
pop
dec
aam
xorl
sub
mov
dec
hlt
xor
cmc
mov
dec
pop
ljmp
inc
cmp
xchg
les
cltd
pop
mulb
rorb
push
fs
popf
pop
inc
ret
int
add
ds
fs
bts
pop
lahf
test
pop
subb
xor
popa
call
mov
jecxz
rol
add
and
mov
sub
mov
add
dec
fidivs
in
imul
cmp
mov
addl
push
or
mov
jle
mov
jo
cmp
cld
add
subl
push
lods
imul
ret
iret
push
ret
push
pusha
push
sub
outsb
adcl
cmc
icebp
in
decl
in
insb
hlt
test
iret
lods
cmp
and
and
ficoms
mov
pushf
popa
xchg
fstpl
jae
leave
mov
sahf
add
mov
lds
jge
or
enter
xor
ret
jne
add
sub
mov
scas
mov
mov
mov
jmp
ljmp
mov
inc
cli
loop
in
test
lds
icebp
jo
mov
mov
adc
sbb
pop
ss
inc
or
rol
sbb
ljmp
rcll
jge
dec
mov
in
xchg
popf
mov
andb
in
js
inc
mov
push
add
jns
ja
cld
rolb
test
pop
lret
push
adc
inc
das
loopne
xchg
jp
sbb
adc
js
mov
idivb
inc
rcr
pop
iret
xor
inc
or
stos
xor
inc
cmp
mov
popf
lcall
out
and
stos
out
test
or
cmpsb
push
sbb
cmc
inc
cmp
cmp
xchg
or
stos
gs
dec
jnp
insb
es
jp
iret
push
clc
and
je
inc
sysenter
inc
xchg
imul
mov
add
mov
rcl
lds
lea
mov
mov
js
add
insb
loopne
test
fsubrl
scas
inc
sbb
lock
or
jnp
add
xor
dec
insl
and
mov
mov
cwtl
adc
movsb
mov
sbbl
repnz
push
dec
scas
fdivrp
fsubs
cmp
inc
adc
loopne
add
roll
or
out
and
xor
ds
adc
lods
add
fdivrl
dec
add
out
and
mov
mov
out
shr
loopne
push
inc
xchg
pop
pop
rclb
lock
pop
add
popf
sub
shll
and
push
lods
xchg
addr16
jecxz
cmpsl
outsl
adc
mov
mov
stos
test
lock
dec
xchg
mov
cld
js
push
mov
or
add
inc
lahf
clc
dec
pop
mov
cltd
xor
sub
dec
sub
dec
xor
or
xchg
or
xor
or
loop
lret
addr16
cs
inc
pushf
inc
mov
dec
lods
jle
imul
js
jne
loope
dec
gs
pop
mov
aam
js
test
lods
dec
dec
dec
inc
xchg
call
sarl
jbe
sub
aas
sbbb
mov
ret
mov
pop
mov
mov
jecxz
xlat
fistl
test
mov
sti
mov
in
popf
ret
rol
pusha
jne
xor
push
sahf
push
mov
lret
and
filds
add
and
sbb
loopne
es
push
pop
or
iret
dec
inc
dec
orb
movsl
cmp
ds
pusha
lods
lret
sti
shlb
add
mov
mov
cmpsb
dec
incl
repnz
dec
gs
push
pop
lods
je
mov
lcall
mov
pop
ret
cld
inc
xchg
dec
cmp
pusha
loop
push
rclb
mov
sbb
jmp
and
js
xchg
dec
fidivl
clc
and
mov
xlat
cmpsb
xor
mov
sbb
xchg
push
cmp
mov
add
dec
xlat
test
cld
mov
add
lea
aaa
scas
clc
pop
cmp
adc
lret
insb
jmp
fldenv
rorl
ljmp
clc
test
push
jb
adc
imul
mov
sbb
mov
insl
dec
and
les
rorb
jne
jecxz
loope
cmp
mov
test
mov
push
jle
out
sbb
lcall
nop
add
jl
rolb
mov
imull
js
fildl
push
pop
int
dec
pop
sbb
pop
sbb
push
adc
fcomip
das
iret
pop
add
adc
jecxz
icebp
mov
xor
sub
inc
or
cmp
cmp
in
out
jl
jmp
inc
or
movsb
xlat
mov
sbb
js
jp
mov
push
xor
cmp
add
add
jmp
aas
sbb
nop
cmpsl
out
rol
movsb
mov
sbb
cli
cmp
adc
dec
jecxz
inc
xlat
ret
xchg
nop
leave
outsb
adc
cwtl
xor
popa
pop
xchg
movsl
aas
mov
scas
push
pop
xchg
and
jne
xchg
cs
lods
mov
sub
in
mov
sub
loop
ret
data16
add
je
mov
into
adc
rcll
sbbl
jo
out
out
loope
or
ret
daa
in
inc
and
sti
and
cmp
add
sbb
sahf
mov
lahf
mov
imul
mov
mov
jo
icebp
mov
fs
arpl
data16
ja
rcrb
movsl
addb
adc
bound
leave
enter
inc
adc
dec
rorl
add
push
pop
inc
insl
cmp
and
mov
mov
orl
cmpl
or
cltd
jb
pop
add
lcall
test
lods
xlat
rcll
push
xor
je
adc
and
xorb
sbb
movsl
add
cmc
dec
lahf
cs
insb
xchg
mov
imul
dec
popa
cwtl
and
push
xchg
sahf
mov
adc
sbb
daa
jae
push
sub
in
insb
rcll
fadds
push
outsl
mov
sar
push
bound
punpckhdq
stos
in
loope
setge
push
aaa
outsb
jo
xorb
push
inc
adc
cmp
mov
cmp
jge
jbe
sbb
pop
leave
js
inc
add
loope
pop
movsb
out
xchg
int3
outsl
jmp
mov
fcompl
sub
loopne
imul
cwtl
test
mov
in
jnp
inc
faddl
inc
fnstsw
mov
aad
in
mov
inc
outsl
repz
sbb
ret
shll
push
pop
dec
mov
mov
movb
je
pop
imul
and
or
not
call
and
add
xor
add
add
xchg
orb
inc
inc
pop
push
mov
xchg
jno
dec
add
fcomps
je
dec
es
sbb
aas
mov
cmp
mov
sub
jno
out
add
xor
loope
out
or
fisubl
jge
not
lds
fcoms
shlb
fnstenv
mov
stos
jge
jmp
sub
xor
push
test
bound
mov
add
jo
sub
pushf
mov
sbb
push
push
test
push
push
imul
mov
call
lods
test
lds
insl
or
loop
jo
dec
notb
mov
sbb
mov
push
add
and
jl
or
popa
movsl
out
cmc
loope
ss
sbb
movsb
mov
push
pop
push
add
pop
xchg
push
add
and
dec
cmc
mov
push
sti
and
jl
aad
or
add
scas
lret
cmp
call
lea
cmp
fdivs
or
mov
je
push
sbb
in
popl
push
shll
push
mov
cmp
dec
popf
jmp
push
movsl
inc
ljmp
ja
aam
fimull
pushf
add
int
rcl
movsl
xchg
add
addr16
sbb
adc
mov
and
mov
mov
and
imul
pusha
leave
push
mov
lods
add
das
sti
rcll
bound
sbb
movsl
into
loop
cmpsl
jne
mov
xchg
fwait
or
sbb
xchg
loope
dec
jnp
fwait
dec
loopne
ficompl
pusha
loope
xchg
dec
add
mov
mov
xor
lds
push
xor
pop
push
or
std
gs
aam
mov
bound
push
sbb
lods
cmp
stc
scas
paddb
inc
push
fmul
ljmp
jmp
dec
or
inc
enter
imul
push
cmc
or
cmp
xor
pop
dec
push
shll
jns
xor
mov
pop
jo
inc
pop
xchg
and
shrb
inc
mov
insl
fwait
xor
dec
push
dec
clc
cmp
jl,pt
out
ret
jmp
inc
cmp
test
pusha
mov
imul
adc
loop
adc
pop
cmp
nop
sbb
cmp
add
imul
in
jns
push
dec
add
insl
ret
in
xor
hlt
je
jp
xlat
aaa
test
mov
inc
adc
xor
inc
je
add
push
lea
xchg
xor
sbbl
aas
xor
nop
and
adc
push
pop
jno
jecxz
arpl
ret
out
cwtl
aad
sarb
dec
and
xor
nop
cmp
stos
cmp
mov
popa
test
rol
push
movsb
hlt
std
ret
push
xchg
push
mov
sbb
push
mov
inc
add
cmp
inc
daa
insb
adc
sub
out
stos
les
test
inc
mov
dec
dec
sbb
stos
adc
add
inc
jp
mov
imul
adc
lahf
pop
cmpsl
push
mov
enter
jns
je
push
icebp
push
or
jl
adc
out
inc
adc
push
popl
mov
jecxz
les
cmp
mov
mov
outsl
cmpsb
adc
mov
lea
in
pop
fstpt
clc
orb
into
mov
xor
subl
cmp
outsb
sbb
push
data16
and
adc
fcoml
jbe
push
and
and
xor
arpl
mov
aad
imul
dec
mov
inc
sbb
sub
pop
pop
rcrb
mov
je
add
jl
pusha
jo
mov
pop
mov
pop
jmp
mov
xchg
sbb
and
imul
ds
dec
pop
stos
push
pop
out
jno
sbbb
bound
lcall
sbb
mov
lods
dec
sub
and
ja
hlt
mov
adc
cmp
inc
addb
addps
in
aam
stc
xor
sub
ret
adc
inc
mov
mov
and
mov
jns
mov
and
pop
sub
sub
iret
invd
insb
mov
daa
in
sar
xor
add
cli
mov
fnstenv
ret
aad
je
inc
fwait
pop
pop
in
pop
mov
mov
loope
mov
std
js
movsb
cmc
adc
jle
lea
pusha
pusha
mov
scas
ds
cs
cmp
je
js
int3
rcrb
add
push
xor
movsl
cmpl
cld
shrl
ret
dec
insl
outsl
sbb
add
aad
and
cmp
pop
jg
xorl
xchg
call
push
pushl
dec
rorl
and
or
loopne
add
test
add
mov
sub
clc
adc
mov
orl
xchg
mov
jle
xor
nop
fisttpll
xor
sarb
push
inc
stc
sbb
inc
mov
jns
clc
jecxz
outsb
push
jnp
add
pop
push
jmp
mov
gs
das
lock
leave
adc
mull
cmpsb
add
insb
sbb
imul
arpl
xlat
adc
and
hlt
fistl
cbtw
mov
cmp
lock
cs
js
ljmp
test
sub
or
test
ljmp
daa
les
sub
mov
pop
mov
clc
movsb
lea
dec
fisttpll
lret
sub
aad
and
pop
xchg
or
bound
les
xor
pop
hlt
sbb
sbb
dec
xor
pop
test
lcall
or
data16
out
push
sub
aas
outsl
out
test
adc
shlb
insl
popa
leave
mov
mov
lret
lds
outsb
cwtl
push
push
or
push
mov
cmp
xchg
push
test
pushl
lcall
jae
sbb
jecxz
lahf
mov
outsb
sub
cmp
and
aaa
xchg
insb
scas
js
dec
ja
sbb
adc
sub
in
mov
or
jmp
movsb
insb
lock
idivl
xor
aam
pop
inc
push
cmp
push
je
xor
mov
pop
push
popa
pop
sbb
xchg
es
xor
fwait
into
hlt
adc
sbbl
push
clc
loope
jae
ja
mov
pop
mov
push
cld
aam
rcrb
rolb
sti
decl
insl
xor
rorb
test
mov
jnp
sub
mov
in
sub
and
and
inc
jb
fs
test
icebp
loopne
rolb
test
fcoml
jp
outsb
add
pop
mov
dec
out
adc
out
inc
add
insl
enter
mov
jecxz
cmpb
jge
inc
aas
jo
imul
or
popl
fchs
xor
xchg
shll
mov
xchg
das
mov
push
insb
outsl
cmp
addr16
mov
into
cli
pusha
sbb
cmpb
push
xchg
or
call
push
cmp
push
and
icebp
sbb
or
jb
sbb
out
sahf
inc
cmc
jb
shll
sahf
dec
mov
adc
ffreep
mov
or
les
push
cmp
dec
rcrl
mov
or
out
fcomps
sti
dec
jle
jo
or
pop
cld
push
pusha
jp
xchg
xchg
test
adc
jno
jmp
addr16
lea
ret
cli
mov
xor
mov
mov
aam
out
ret
pop
andl
add
mov
je
imul
cld
xchg
xchg
mov
in
enter
je
pop
sbb
out
add
push
lock
pop
mov
loope
xor
in
lods
and
stos
out
enter
adc
xchg
lds
adc
sbb
pop
and
in
cmp
into
movsb
inc
add
ret
popf
cmp
mov
pop
mov
and
ds
mov
sub
lock
subb
fcomps
aas
lret
fwait
mov
xchg
pop
call
mov
shll
xor
ret
ret
dec
xorb
adc
in
ja,pn
xchg
ror
add
adcb
cwtl
loop
adc
dec
call
jb
sub
test
mov
add
add
jne
xchg
data16
adc
mov
mov
insl
jge
sbb
rol
sub
mov
jg
mov
gs
add
fdiv
fcoml
adc
call
xchg
rclb
push
mov
pop
adc
stos
jne
sub
sarb
mov
and
inc
shlb
divl
fstps
cld
sbb
loop
jecxz
fidivrs
jp
sbb
adc
cmp
into
shll
lcall
xor
jmp
loope
aam
popf
shr
shlb
or
lcall
mov
ret
ja
add
push
cmpsb
push
xor
fadd
sub
sbb
or
shll
cli
add
sub
divb
popf
test
push
dec
mov
das
xor
lea
aam
cmp
pop
hlt
addb
cli
pusha
and
push
inc
ret
or
scas
push
cmp
dec
mov
sub
xchg
add
cmp
or
xor
and
or
jno
nop
xchg
adc
orl
xchg
jae
shrl
mov
pop
sbb
inc
xchg
adc
and
inc
cli
sti
roll
enter
pop
pop
lock
sbb
mov
mov
lret
lret
push
rcr
adcb
push
add
stc
nop
push
jle
ds
nop
rcl
lock
xchg
pop
dec
or
mov
inc
stos
into
and
scas
pusha
sbb
jnp
mov
loope
in
add
ret
dec
inc
or
outsb
lahf
fsubrl
movsb
mov
or
popa
scas
js
mov
mov
or
movsb
cmp
ja
into
loop
fistl
push
es
je
sub
out
jle
sti
and
in
mov
push
push
imul
push
lret
cmp
sbb
add
adc
stc
repnz
adcb
int3
mov
sub
mov
icebp
jo
mov
xor
mov
adc
or
pop
gs
loopne
pushf
push
test
jnp
pop
ds
add
je
lea
add
loopne
cmpsl
push
lods
jp
ret
dec
mov
stos
sbb
push
insb
lock
mov
out
lods
sti
add
mov
jle
stos
lods
pop
sbb
pop
call
rcl
outsb
xchg
add
repnz
add
cmc
sbb
sub
sarl
loope
imul
clc
pop
sub
jmp
add
dec
mov
and
mov
jmp
dec
cmpsl
mov
push
lahf
cmp
inc
mov
jmp
cmp
int3
adc
dec
pop
cli
ljmp
mov
inc
jb
pop
call
or
xchg
dec
mov
add
or
ja
testl
xchg
lods
and
push
les
shr
ljmp
in
lods
insb
test
stos
loop
push
mov
int
mov
lods
xor
ljmp
pusha
add
lea
in
ljmp
xchg
inc
xor
lock
push
cmove
jle
add
ljmp
dec
int3
icebp
cmpsb
sub
insb
aad
jl
cwtl
int3
add
movd
inc
mov
add
addl
leave
shlb
movsl
xor
adc
or
xchg
addr16
cmp
mov
std
jmp
sbb
add
add
push
mov
ficomps
inc
mov
adc
mov
or
push
jbe
popf
adc
mov
inc
clc
gs
loopne
pusha
cwtl
fcompl
lods
add
mov
xchg
subb
jno
mov
movsb
push
jecxz
das
mov
add
push
aad
cmp
fldcw
inc
mov
jg
sarb
mov
dec
and
jb
arpl
push
dec
sbb
ds
fcom
sub
dec
fimull
and
test
push
mov
sbb
divb
sbb
adc
or
filds
jb
out
pop
pop
adc
jbe
add
xor
adc
cli
insb
decl
stos
pop
mov
inc
bound
imul
sub
mov
push
sub
or
pop
jge
aas
pusha
call
inc
and
ss
and
in
pop
scas
mov
adc
adc
cmp
jl
inc
adc
jne
dec
mov
adc
cmp
rorb
xchg
clc
out
frstpm(287
push
jb
xchg
xchg
add
mov
fiaddl
cltd
lcall
js
sbb
mov
adc
xor
clc
stos
das
sbb
inc
enter
lds
or
xor
sub
cmovno
adc
mov
lcall
xlat
fidivrl
in
int3
xchg
fs
int
aas
jecxz
orl
stos
cmp
mov
inc
jecxz
and
ja
xor
xchg
cmp
sbb
fstl
or
push
fwait
call
push
add
or
mov
xchg
rolb
es
pop
mov
ret
in
jmp
icebp
mov
dec
inc
push
repnz
clc
test
and
mov
mov
jp
lock
shl
mov
adc
enter
inc
or
mov
jo
pop
add
lcall
mov
fcomps
aas
xchg
es
mov
test
mov
push
or
pop
loopne
push
push
lret
adc
dec
sbb
sbb
sarb
out
inc
rorb
aas
repz
cmc
and
adc
jbe
clc
cli
add
int3
add
int3
push
ret
add
mov
pusha
mov
es
xor
gs
mov
mov
loopne
mov
push
xorl
mov
sbb
xchg
mov
push
popa
and
unpckhps
sub
mov
add
mov
nop
loop
push
das
mov
inc
mov
icebp
adc
aad
sbb
jl
pop
rorb
jl
imul
in
inc
sbb
adc
mov
iret
jbe
sbbb
xchg
inc
scas
push
or
cmp
cli
mov
mov
data16
mov
cli
mov
mov
cwtl
cmpsl
jb
push
push
ss
lea
cs
aas
test
push
ds
inc
push
adc
push
lods
loopne
dec
pusha
inc
mov
sbb
lcall
mov
sbb
leave
adc
add
pop
push
pop
add
ss
jg
jle
scas
inc
imul
push
movsl
subl
inc
outsb
dec
add
mov
loope
xchg
fwait
mov
sub
jge
popa
adc
repnz
aam
mov
mov
mov
pop
stc
push
cmp
push
dec
and
addb
sub
xchg
push
xchg
fiadds
repnz
add
loope
push
sti
sbb
xor
dec
jmp
stos
inc
add
fidivrs
cwtl
cmpsl
aaa
add
mov
mov
mull
xchg
test
ds
fbstp
mov
call
popa
shll
clc
ret
outsb
rcrb
dec
sbb
inc
pop
push
pop
es
dec
repnz
lahf
pop
sti
add
fbld
add
xor
cltd
imul
icebp
and
xor
imul
sbb
add
xchg
dec
push
pop
lea
sbb
dec
or
testb
cmp
fbstp
push
movsb
ss
mov
xorb
dec
clc
push
dec
cmp
insl
mov
cmpsl
fs
cmpsl
loop
mov
sbbb
inc
data16
enter
test
add
les
fisubrs
out
pop
into
fstp
xor
scas
push
pop
sahf
pop
add
xor
xchg
fnstenv
xchg
loopne
out
shll
test
or
jecxz,pn
shlb
adc
pushf
clc
inc
push
icebp
xor
outsb
lahf
push
insb
push
test
dec
xchg
or
popf
mov
dec
mov
adc
inc
clc
outsb
jae
stos
stos
cmp
pop
cmp
and
fidivrl
adc
iret
pop
jbe
sub
fmuls
rorb
leave
xor
fnsave
xchg
movsb
lahf
mov
loopne
inc
je
fwait
ret
mov
inc
negl
fs
add
sbb
jl
call
cmc
ss
pop
lret
fisubrs
pop
xor
mov
stos
sub
inc
pop
adc
rorl
adc
dec
mov
and
cld
sub
inc
out
sbb
cltd
ljmp
aas
xor
aas
mov
jmp
sbb
aad
xchg
dec
mov
cmp
mov
add
icebp
add
les
loope
mov
sarl
jp
insl
lds
fwait
cld
stos
fnsave
dec
les
dec
ficoms
out
xchg
fsubl
cmpsb
out
cmpsb
pop
mov
pop
lcall
xchg
in
mov
or
push
ss
lret
add
pop
orl
int
and
and
sub
shrb
sarl
and
and
jbe
sub
add
or
mov
pusha
push
push
clc
sbb
mov
sub
xchg
scas
outsb
push
test
rolb
sub
push
pop
or
scas
pop
xor
loope
pop
ret
jnp
add
inc
sahf
push
or
out
nop
xchg
or
imul
maxps
lds
ss
pop
jmp
jno
lret
add
test
ds
push
lods
and
cmc
push
ss
adc
xchg
mov
loop
js
stos
xor
les
sbb
movb
sbb
mov
pop
sub
or
in
pop
xor
dec
insb
jo
fnsave
mov
pop
stos
mov
inc
xchg
shlb
and
loope
xchg
mov
pop
jmp
sti
movups
push
sbb
loopne
add
dec
test
xchg
shl
pop
lods
lods
cmp
jecxz
aas
push
pushf
clc
cli
lcall
daa
jmp
ret
call
or
int3
fnstenv
out
gs
mov
pop
rcrb
inc
dec
or
popf
inc
cli
sub
add
inc
mov
cs
mov
mov
rorl
cmp
sub
js
into
adc
loop
stos
pop
cmpsl
jmp
fwait
rcrl
fnsave
mov
shrb
iret
push
mov
sub
paddb
or
loope
and
test
xchg
clc
mov
sbb
lock
ljmp
or
push
les
mov
inc
mov
mov
cmp
or
cwtl
mov
sub
in
cmp
push
sti
xor
sub
enter
std
sub
sti
xor
bound
jbe
hlt
lret
aad
cmc
ds
cs
jg
scas
testb
push
cmp
xorl
dec
scas
or
jl
push
xchg
in
pusha
jb
pop
loop
and
movq
aas
imull
popf
cltd
fs
xor
addb
mov
and
fwait
xchg
mov
jle
sti
or
cmp
andb
xchg
icebp
push
neg
pop
add
call
in
mov
jge
mov
lret
push
jbe
inc
clc
mov
loopne
dec
pop
pop
dec
xchg
hlt
aad
iret
mov
into
sbb
mov
push
jae
lods
les
negb
hlt
push
imul
mov
jbe
ret
cwtl
dec
dec
and
shll
adcb
in
aam
dec
inc
sbb
outsb
xchg
or
adc
fistl
or
sbb
fisubs
push
jecxz
push
fidivl
jns
sbb
cmpsl
dec
andb
js
sbb
loopne
push
jmp
je
push
jl
xchg
xchg
mov
jmp
mov
fiaddl
fmuls
fs
cld
jae
and
xchg
dec
jg
sub
pop
call
stos
add
insl
jecxz
lret
mov
lea
pop
out
xorb
push
xlat
add
pop
push
out
scas
or
fidivrs
ds
pop
jge
lock
dec
int3
daa
lcall
sbb
xor
daa
mov
mov
mov
lahf
inc
inc
dec
fsts
lock
xchg
sarb
mov
popf
jnp
sub
or
inc
push
pusha
test
or
scas
rolb
lahf
hlt
icebp
add
ljmp
dec
inc
es
adc
inc
sub
adc
jb
push
adc
fstps
movsb
lea
xor
push
or
push
rorb
dec
cmp
xchg
mov
push
jne
cmp
gs
dec
pop
sub
mov
xchg
bound
shlb
clc
outsl
in
or
add
fldenv
cmp
or
mov
xchg
pushf
mov
mov
inc
inc
and
pmaddwd
or
test
insl
push
pushf
aad
xchg
out
out
adc
push
add
jle
aam
loopne
inc
xchg
adcl
and
rcll
add
add
pop
mov
call
mov
pop
outsb
pop
lea
or
es
mov
jle
out
ja
add
sar
pop
hlt
cmp
out
push
lret
push
and
in
movsb
pop
enter
mov
push
ds
and
sub
adc
inc
in
cmpsb
cmp
addl
xchg
cwtl
leave
adcb
or
out
in
pop
inc
sarb
xchg
shl
and
subb
push
pop
sarl
idivb
movsb
movsb
scas
or
or
inc
dec
sbb
add
inc
push
pmaxub
add
rcrl
lea
push
push
xchg
dec
adc
cmc
test
dec
pushf
mov
cmp
add
push
dec
sub
pop
mul
mov
add
cld
mov
mov
test
mov
push
popf
mov
fnsave
rolb
cs
test
dec
mov
or
xchg
xchg
arpl
mov
and
mov
les
adc
fadds
cmp
and
jle
int
ja
cs
mov
xchg
je
or
pop
scas
rorb
push
and
push
lods
cmp
and
bound
inc
leave
cmpsb
cmc
lcall
js
xor
cmpsb
pop
fdiv
addl
mov
repz
mov
or
icebp
mov
cld
sbb
je
fcom
es
js
lods
lock
int
dec
aaa
hlt
arpl
xor
jg
test
adc
and
cmp
add
loop
inc
mov
scas
mov
out
add
lds
jae
enter
pop
inc
mov
test
jge
mov
out
sub
and
jle
add
mov
jle
sbb
push
xchg
lret
mov
dec
ljmp
push
nop
loopne
lcall
sbb
xor
dec
cmp
or
pop
sahf
repz
jmp
test
pop
nop
icebp
test
mov
push
ds
xlat
add
xor
adc
mov
mov
call
mov
or
int3
dec
inc
dec
xchg
and
orb
pushl
in
rcr
pop
pop
cli
mov
sbb
add
divb
dec
mov
scas
mov
fdivrl
add
out
mov
lcall
push
test
insl
out
mov
pop
push
test
xor
movl
pop
xor
cmpb
jge
sti
pop
and
lods
push
xor
mov
imul
fcomi
incl
lock
and
out
test
loopne
jl
cmpl
testl
mov
xchg
jo
daa
in
and
shl
push
pop
ja
jo
cwtl
mov
pop
jno
imul
dec
pop
mov
movsl
xchg
fs
jge
mov
add
sbb
sbb
sti
sbb
mov
fs
adc
cmp
push
mov
inc
fsubrs
sub
les
push
loop
rol
dec
xorb
mov
push
sbb
mov
pusha
push
add
pop
push
call
lret
or
mov
add
inc
jecxz
std
xlat
ds
xchg
sub
in
cmp
jne,pt
dec
push
faddl
cmpsl
cmp
outsl
mov
cmp
daa
xor
cmp
aas
pop
cld
ljmp
arpl
push
or
call
fwait
imul
add
or
hlt
mov
mov
fldl
stc
pop
push
mov
nop
jo
movsb
cmp
nop
mov
scas
loopne
xor
test
repnz
xor
shrb
xor
into
jle
push
xchg
and
xchg
call
pop
lods
mov
mov
clc
mov
fadd
add
rclb
push
cmpl
xor
lret
fsubr
dec
cld
ficompl
push
dec
xor
cmp
push
mov
sti
push
aas
push
jbe
sbbl
lahf
mov
idiv
add
movsb
mov
inc
xor
lcall
pop
repz
mov
pop
fwait
lret
adc
jp
cltd
aam
fs
insl
rorl
aam
insb
mov
fcmovbe
mov
in
les
in
sbb
add
das
jmp
rorb
cltd
jle
or
jmp
mov
jno
adc
das
lods
cmp
jg
inc
insb
sub
xchg
lcall
dec
mov
mov
jl
mov
ja
and
adcb
pop
loope
rolb
hlt
in
jo
clc
loope
ljmp
popa
repnz
lcall
jmp
pop
mov
inc
mov
jno
pop
mov
incb
das
cmp
or
xchg
jmp
shrl
xchg
divb
icebp
popa
pop
ljmp
repnz
inc
push
dec
fsub
sub
dec
dec
jbe
mov
or
fisttpl
xchg
add
cmp
adc
rcrb
cli
andl
mov
xchg
jl
sarb
out
sub
push
mov
add
xchg
lahf
outsl
and
dec
jmp
fs
aaa
dec
aam
jae
mov
ret
rclb
jp
mov
adc
rclb
mov
and
rorb
push
jmp
nop
cli
add
xchg
mov
enter
mov
xlat
dec
jle
push
pop
decl
sti
xchg
ss
ss
pop
adc
and
add
cmpsl
js
dec
pop
and
outsl
xor
cmp
mov
mov
je
fists
xor
stos
mov
aas
loope
add
adc
or
stos
mov
loop
out
sub
mov
xchg
clc
jl
mov
mov
mov
scas
loop
pop
das
push
lock
fwait
xor
out
add
xor
rolb
jg
add
daa
xchg
ficoms
and
mov
and
pop
inc
xorps
jne
out
inc
sub
and
adc
fnsave
and
add
scas
imul
lret
cmp
mov
push
lds
dec
std
pop
test
jmp
outsl
or
cmp
cmp
clc
mov
rol
pusha
ljmp
xorb
ja
stos
pop
mov
in
xchg
adc
jno
push
or
cltd
cli
js
loope
sti
leave
pushf
cmp
add
popa
cmovg
in
add
dec
clc
mov
insl
ret
scas
push
sub
cli
pop
sti
and
push
push
shlb
jne
xchg
pop
adc
hlt
ret
mov
jecxz
pop
test
test
and
lcall
movsl
push
push
lock
push
lds
mov
push
pop
adc
ja
push
hlt
mov
sar
and
insb
jl
mov
sub
pop
popa
pop
fidivrs
cld
or
push
jge
clc
aad
add
sti
fiaddl
push
mov
push
sub
push
dec
mov
das
adc
fldcw
push
pop
cmp
pop
or
mov
arpl
shl
scas
jg
jo
add
dec
fnstenv
scas
mov
lods
aas
mov
sub
movsl
fcmovnu
jecxz
call
xchg
divb
pop
and
call
inc
loop
and
dec
push
xor
rolb
fidivrl
inc
pop
mov
dec
popa
mov
xchg
xor
imul
xor
popf
mov
pop
notrack
or
inc
inc
in
mov
sub
addb
xor
xchg
pushf
rorb
inc
mov
lcall
push
fstpt
xchg
lret
pushf
push
hlt
pusha
jl
add
or
jae
or
inc
sbb
pushl
cmp
sub
mov
lock
cmp
pop
aad
pop
xor
push
movsb
adcl
xchg
mov
adc
cwtl
jp
ret
lahf
inc
cmp
sbb
clc
rorb
cwtl
cmp
stos
lret
mov
inc
xchg
loopne
ret
cli
js
js
ss
clc
lret
pusha
jle
mov
jle
stc
xor
addb
les
rclb
pop
and
push
mov
xor
jbe
xor
iret
subb
add
mov
stos
daa
and
iret
sbb
dec
sub
imul
loopne
fstps
outsl
insl
and
and
push
aas
es
cli
jmp
rorl
push
clc
pop
jo
xor
lret
dec
cmpsb
mov
mov
insb
or
add
lods
add
cld
shrb
lock
js
je
jo
dec
shll
clc
push
fbld
inc
popf
cmp
movsl
cmc
pop
lock
adc
or
jae
fld
lock
pop
jnp
lret
add
lds
cltd
add
icebp
jp
push
lcall
mov
push
mov
dec
and
mov
sub
cmpsb
into
xor
inc
cmp
daa
mov
adcb
sbb
pop
push
arpl
or
hlt
adc
pop
sub
push
rcll
scas
pusha
push
pop
and
sub
arpl
jo
dec
scas
pop
xchg
test
cmpsb
push
popa
mulb
pop
das
insb
sbb
mov
xchg
int
test
movnti
mov
in
test
incl
sbb
sarl
mov
jo
fldl
lock
adc
int3
mov
je,pt
jg
cltd
mov
add
fs
std
jbe
push
push
loopne
pop
fprem1
mov
xchg
xor
mov
pusha
jae
sub
mov
dec
insb
push
jmp
dec
jmp
fldt
mov
pop
nop
cld
data16
sub
push
decl
mov
xchg
loop
pop
fsqrt
push
pop
adc
lock
aas
push
jns
mov
sbb
mov
enter
push
pushf
cmpsl
out
pop
jbe
mov
test
cwtl
sbb
lret
add
fiaddl
inc
cmp
out
pop
and
inc
dec
adc
movb
rolb
sbb
cmp
lcall
lahf
xchg
mov
pop
lds
fcomps
hlt
cwtl
mov
push
aas
fcompl
mov
enter
bound
insb
add
push
shrb
cli
imul
jo
push
push
xor
bound
push
inc
negb
cmp
inc
pop
mov
push
and
hlt
push
or
pop
insl
lret
leave
sbb
loop
lds
subb
push
mov
clc
pop
adc
mov
xchg
ljmp
inc
push
jg
ja
adc
sub
out
sbb
bound
push
pop
xchg
or
mov
fcmovnb
mov
sti
or
sti
aas
mov
xchg
sbb
inc
xchg
mov
shl
aas
fidivrl
cwtl
aam
loope
fs
call
mov
add
rolb
mov
mov
imul
or
fldcw
lods
xor
add
mov
ljmp
lea
cmp
cmp
inc
push
mov
subl
pusha
mov
inc
jg
and
leave
icebp
and
fs
je
add
bound
add
mov
lahf
jl
push
mov
mov
dec
dec
lahf
mov
pop
fbstp
jge
fistpl
loopne
call
je
scas
pop
lods
ficompl
and
jo
inc
sbb
dec
and
push
push
sub
jl
cwtl
mov
or
test
add
stos
dec
inc
je
jecxz
xor
dec
xchg
push
repz
mov
add
fdivrp
nop
pop
inc
jne
pop
push
or
or
call
sub
jle
pop
mov
push
aaa
das
xor
bound
aas
push
sbb
push
sbb
add
out
mov
insb
or
sub
jo
lds
data16
or
add
xor
ret
and
jecxz
inc
and
adc
mov
jg
pop
dec
hlt
je
stos
sbb
push
or
pop
sti
lods
sarb
inc
daa
mov
lret
pop
bound
mov
pop
aad
jno
pop
mov
idivb
pop
xor
sbb
insb
xchg
push
add
mov
mov
iret
call
rcrb
jb
xchg
push
or
jge
loopne
icebp
adc
in
mov
xchg
add
sub
lock
ret
lea
or
into
adc
cmp
push
fadd
sbb
inc
jmp
push
push
fmull
dec
insl
sbb
jns
sub
jne
xor
in
push
push
subl
ss
adc
dec
aas
test
int3
sahf
xchg
inc
cmc
or
popf
aam
mov
adc
dec
push
jmp
xor
adc
clc
push
mov
js
add
mov
fs
mov
cmpsb
incb
inc
pop
push
arpl
pop
loopne
mov
push
aas
jbe
adc
dec
inc
and
push
nop
jmp
xchg
in
add
or
push
adc
fsubl
push
adc
test
fbstp
lock
dec
inc
push
jo
int
jg
and
sbb
mov
adc
movsb
inc
jnp
xor
roll
mov
mov
in
push
test
sbb
push
dec
mov
sbb
mov
call
inc
cmp
cmp
dec
and
inc
dec
pop
inc
ret
outsb
ret
dec
int
dec
lods
inc
dec
in
xor
rolb
loopne
push
mov
mull
orb
aam
lcall
adc
mov
popa
jmp
pusha
sub
cltd
bound
lock
jle
inc
cmp
jnp
sub
mov
xchg
push
inc
mov
push
add
lods
jne
test
sub
push
aad
add
cmp
enter
sub
jb
jbe
or
lret
and
add
lock
clc
shl
ficomps
test
bound
xchg
pop
das
ss
popa
inc
loop
cmpsb
ljmp
data16
js
and
mov
shlb
xlat
enter
mov
icebp
ljmp
stos
lea
push
mov
hlt
pop
xchg
repnz
rorl
enter
push
scas
lods
ret
cmc
mov
jnp
sub
cmp
es
dec
push
push
jmp
cmpb
stos
xor
mov
jg
popl
push
leave
cmp
dec
push
mov
je
pusha
pop
pushf
aas
in
push
and
xorb
int
es
xlat
pop
mov
dec
mov
stc
xchg
mov
mov
in
popa
dec
stos
in
adc
or
jle
inc
and
std
rcrl
out
mov
hlt
into
jno
pop
dec
lods
fstps
mov
mov
ljmp
or
add
out
xor
fwait
inc
call
ljmp
sbb
mov
add
fbstp
fucomip
ja
movsb
jno
rcll
icebp
mov
xor
mov
push
rcr
ficompl
mov
fcmovbe
pop
lock
mov
add
push
and
mov
sub
sbb
outsb
call
aaa
data16
add
out
ja
inc
inc
xchg
add
inc
fnsave
pop
pop
cld
sbbb
outsl
push
aam
sub
aam
adc
je
pop
sbb
std
fiaddl
imulb
movsl
and
fcoms
mov
lods
sub
nop
add
inc
out
add
mov
cmp
cmc
add
lret
ret
xor
inc
pop
mov
sbb
jno
decl
push
inc
or
xchg
outsl
fdivl
xor
and
dec
inc
cmpsl
in
jns
ds
ret
repnz
movsb
fildl
push
enter
or
or
cmpsl
pusha
test
mov
jnp
sbb
sar
adc
mov
addl
cmp
sub
jmp
insb
aaa
xor
mov
mov
sbb
scas
add
mov
dec
mov
inc
lods
mov
in
inc
push
or
cmc
jno
js
push
fnop
arpl
cwtl
stos
loope
mov
push
ss
dec
loope
in
mov
and
mov
rcrl
ds
add
adc
dec
das
pop
fstps
add
mov
xor
scas
fs
mov
pop
cmpsb
leave
stos
adc
cmp
movsb
rcrb
or
or
xchg
ret
sbb
sti
insb
jmp
clc
andb
lea
mov
cmpb
sbb
divl
add
or
mov
pop
mov
aam
xor
insb
mov
adc
popa
xchg
push
inc
adc
rclb
add
shrl
daa
out
push
xor
push
loop
xchg
mov
xchg
push
mov
push
add
cmp
add
cwtl
out
mov
in
jnp
test
shr
mov
lock
inc
cmp
adc
adc
ret
psubsb
jo
jno
ret
cld
adc
cmp
sub
lock
aaa
and
or
cmpsb
insb
sbb
inc
push
repnz
sbb
jmp
out
inc
pop
sbb
aam
jp
push
dec
lret
adc
mov
pop
mov
xchg
push
enter
adc
pop
sti
mov
icebp
out
lea
mov
aam
lock
xchg
mov
lock
cmpsl
jbe
gs
xchg
rcr
and
jl
dec
pop
das
or
out
fmulp
add
pop
clc
sub
jmp
jmp
fcmovb
pop
enter
inc
fistpll
clc
inc
add
lcall
mov
int
xor
dec
inc
cmp
add
mov
scas
and
push
pop
or
jg
ss
mov
jae
into
rolb
mov
addb
pop
and
or
pop
fdivrp
mov
or
into
jle
push
in
adc
mov
mov
xchg
sbb
xchg
ja
jne
sarb
add
dec
or
mov
sub
repz
int3
dec
pusha
xor
jnp
pushf
div
xor
jp
and
sbb
fdivl
push
adc
xchg
out
aad
cs
lock
notb
push
adc
mov
add
adc
mov
fsubs
jbe
and
push
mov
lds
dec
cld
and
xor
add
add
push
mov
push
cmovns
cmp
xchg
or
push
loope
xchg
jbe
movsb
sub
push
into
jbe
mov
mov
mov
call
jne
aad
andl
pop
pop
not
movsb
ljmp
adc
pop
cmp
call
cmc
stos
or
cmpsb
ret
lock
scas
mov
pop
jmp
jns
aam
adc
push
ljmp
mov
sahf
xor
push
push
repnz
fnstsw
add
or
ret
sub
call
add
or
out
ret
dec
rcrb
inc
popa
and
pusha
pop
addb
pop
movsl
fbld
jb
adc
cmpsb
data16
push
popa
mov
roll
rcrb
lods
shlb
push
jecxz
xor
mov
les
adc
addb
xor
cmp
subl
mov
inc
ljmp
mov
lods
mov
lock
add
xchg
xor
lea
test
dec
inc
mov
dec
call
mov
sbb
cmp
clc
sbb
pop
sub
lss
push
ds
xor
push
or
cli
adc
pop
jl
mov
fadds
mov
xchg
mov
clc
daa
je
mov
negb
into
cmp
jecxz
or
in
fnstcw
and
or
pop
push
aaa
leave
mov
ljmp
push
aas
out
push
add
notb
sbb
stos
inc
push
sbb
call
sbb
testb
scas
adc
test
ret
clc
es
or
pop
jecxz
mov
loop
adc
test
mov
cmp
aas
arpl
jne
push
cmpl
in
xchg
addb
fcomip
stos
jp
pop
ret
inc
pop
imul
mov
inc
clc
icebp
push
addr16
mov
loope
ss
es
out
push
mov
shll
jle
mov
xchg
call
lods
cmp
das
dec
jbe
sarb
push
ds
icebp
cli
int
adc
push
mov
xchg
xchg
subb
lea
lcall
imul
dec
out
clc
jmp
and
pop
push
pop
dec
js
adc
mulb
add
dec
xor
mov
and
cmc
scas
dec
jnp
mov
mov
sbb
paddusb
incb
dec
push
push
mov
lds
pop
inc
jmp
loop
pop
addb
aad
sbb
inc
xor
push
in
jmp
call
sub
rclb
icebp
adc
jp
movsb
or
inc
jbe
jne
adc
cmp
push
outsb
mov
cmp
lahf
addl
rcll
or
shrb
jge
or
sub
sub
jb
lsl
mov
dec
mov
jecxz
add
mov
sbb
movsb
cmp
sbb
cli
xor
mov
sbbb
je
pop
fcoms
xor
sub
xorb
inc
jmp
xor
sbb
movsl
or
add
mov
adcb
inc
int3
popa
or
lock
pop
jo
push
pop
mov
pusha
cli
cwtl
push
inc
out
dec
adc
lods
loopne
imul
xchg
mov
ds
xor
dec
mov
loope
pop
mov
push
sbb
and
cltd
adc
add
mov
sbb
pushl
jo
and
fwait
stos
adc
dec
mov
mov
mov
scas
paddusb
mov
add
pop
ljmp
arpl
sbb
loope
dec
mov
push
sbb
xchg
std
mov
ret
mov
pop
sub
pop
rcrl
dec
and
adc
xor
inc
decl
push
add
jge
push
inc
jl
call
outsl
jp
dec
das
push
mov
dec
mov
ds
jb
xor
cli
call
mov
push
out
push
loopne
sub
cltd
xor
adc
jle
pop
rcr
xchg
adc
sbb
jno
lahf
sbb
cmp
dec
mov
aam
inc
inc
mov
mov
pop
mov
lds
push
push
add
pop
mov
imul
stos
sbb
mov
sub
sub
scas
and
dec
js
cmpsl
inc
fs
push
add
movsl
push
addl
push
xchg
mov
xchg
or
das
push
jno
lods
loope
inc
push
sbb
add
mov
dec
iret
sub
subb
jle
insb
cmp
pop
add
or
inc
daa
stos
movl
loopne
mov
mov
sbb
sbb
and
ret
mov
xor
pushf
inc
shrb
jb
ret
sbb
shr
push
lock
pusha
loopne
addb
mov
cmp
xor
jmp
mov
jg
mov
inc
dec
add
imul
push
dec
in
sub
aaa
mov
cmp
fisubs
sub
aad
xor
insb
push
aaa
js
sahf
and
push
data16
stos
ss
in
or
cli
rclb
in
cmp
clc
cmpsb
ljmp
aad
jl
cmpsl
add
clc
and
aas
ret
pop
ret
dec
lods
sub
push
xchg
fsts
cmp
xchg
xor
stos
jo
pop
fldl
jmp
jae
pusha
adc
iret
mov
adc
push
add
sbb
xor
pop
loopne
fs
or
cmp
out
ret
pop
jecxz
inc
int3
sub
stos
ds
pop
ljmp
mov
lock
and
leave
xchg
sub
adc
sbb
or
fwait
scas
sub
les
aaa
adc
or
std
jns
cmovo
xchg
outsb
or
out
test
xorl
mov
mov
inc
icebp
jg
and
lcall
jp
cld
icebp
dec
push
in
mov
fwait
testb
push
and
nop
js
loope
cmp
sbb
add
and
cmpsb
and
lea
test
test
adc
xchg
pop
mov
adc
inc
cmp
out
loopne
push
push
orl
add
pusha
ja
jl
popa
inc
xchg
and
pop
sub
dec
mov
xlat
outsb
pop
shrb
dec
popf
mov
adc
jne
push
popf
and
adc
inc
scas
mov
loopne
arpl
popf
xor
mov
adc
roll
loop
or
lods
adcb
mov
movsl
sub
adc
dec
insb
inc
ja
loopne
and
sti
test
mov
jmp
int3
jb
lock
sub
insb
gs
jo
cmc
or
or
jnp
sahf
cmpb
or
sub
cmpsb
xor
adc
in
pop
push
sbb
add
sbb
es
repnz
mov
mov
dec
jno
mov
int
inc
sub
loopne
add
and
pop
lea
cmp
mov
or
mov
or
sar
pop
jns
push
push
mov
add
cld
pop
adc
sbb
and
adc
addb
or
lcall
neg
testb
jecxz
mov
lret
or
dec
or
pop
jb
and
int3
push
sub
loopne
dec
xchg
out
add
cwtl
loopne
dec
pop
xchg
fistps
fadd
inc
sub
xchg
outsl
mulb
add
shrb
dec
xchg
xchg
cmp
and
sti
stc
push
inc
lret
inc
test
lret
fs
sar
sub
cmc
jnp
roll
xchg
adc
dec
add
adc
pop
fstl
aaa
add
sbb
xchg
cmc
add
cmp
push
mov
mov
inc
lahf
fs
jp
ljmp
or
ss
and
lods
rcrl
test
dec
xchg
test
mov
adc
or
adc
lock
cmpsl
and
test
pop
jle
loopne
push
call
outsl
fadds
xchg
jne
addl
jo
test
out
gs
push
jb
popa
and
insl
mov
popf
dec
pop
and
adc
sbb
pusha
add
sub
loopne
test
pop
stos
int
popf
cmp
ss
ja
push
cmp
fcomip
jl
imulb
add
into
inc
adc
pop
and
mov
mov
dec
mov
sub
adc
adc
pop
sub
lcall
pop
addb
or
cli
xlat
loopne
mov
add
dec
or
fwait
pop
rolb
inc
or
jmp
jmp
inc
inc
push
and
ret
pop
shll
lock
lea
push
sbb
mov
es
adc
inc
add
movsl
or
sub
dec
in
imul
push
shlb
ficomps
add
jno
lods
shlb
bound
int
jge
mov
rcrl
push
fildl
inc
cld
lods
dec
dec
jl
bound
xor
lret
shr
inc
addb
adc
dec
in
loop
jp
xor
mov
push
fmuls
hlt
mov
faddp
inc
inc
jp
add
shr
incl
mov
divps
and
add
rorb
lea
pop
push
outsb
es
sbbb
mov
in
cmp
fisubl
push
ficoml
movsl
sarl
inc
outsl
cwtl
popa
std
dec
mov
mov
mov
inc
sbb
jmp
xchg
out
mov
mov
inc
loop
xor
mov
fnstenv
sbb
daa
add
lock
push
lods
and
ret
lock
pop
cmp
cmpsl
leave
mov
scas
movsl
cmpsb
rcrb
jne
ret
aad
andl
jle
pop
ss
mov
xchg
sbb
js
cmpsb
loopne
inc
decb
sub
aaa
leave
sbb
inc
adc
daa
dec
inc
inc
xor
add
xor
test
call
pop
ds
insb
mov
or
jbe
adc
cmp
ret
aam
filds
cwtl
punpckldq
mov
jg
ret
ficoms
sbb
fildl
inc
push
loop
lock
lds
mov
adc
sub
mov
mov
in
or
push
int3
scas
insl
xchg
mov
xchg
test
cmp
repnz
xchg
dec
ds
hlt
cltd
mov
adc
lods
push
lahf
add
jecxz
and
jbe
sub
pusha
xchg
hlt
aad
pusha
js
fisttpl
decb
stc
movsb
addr16
sbb
scas
into
push
and
in
xchg
arpl
adc
push
dec
stos
cltd
push
or
mov
in
mov
mov
int3
dec
pop
or
jg
sub
rclb
inc
cld
mov
or
ja
scas
jne
sbb
cmpl
jnp
adc
mov
insl
lcall
push
jbe
movl
popa
les
mov
jecxz
shl
push
and
and
inc
lea
inc
jge
jo
and
xchg
imul
mov
and
pop
std
adc
dec
cwtl
das
push
and
sbb
cltd
mov
inc
xchg
das
xor
shlb
sbb
into
mov
rclb
in
adc
add
gs
pop
in
dec
mov
outsl
mov
jo
rcl
xchg
fstps
clc
mov
add
jge
jnp
ret
xor
mov
fsubrl
add
aaa
and
popa
loope
jecxz
inc
mov
or
or
iret
mov
call
push
xchg
js
movsb
popa
mov
pop
rclb
mov
or
or
inc
sarb
es
ja
mov
bound
adc
lret
aam
aas
add
or
adc
mov
mov
add
xor
xor
mov
cmp
movsb
movsl
or
mov
xchg
ja
pop
clc
sbb
mov
pusha
ss
scas
or
push
aam
add
js
daa
sub
or
ret
cmp
out
fwait
call
sub
mov
xchg
push
lcall
xorb
inc
cs
les
mov
fwait
jb
bound
sub
out
rcrl
scas
es
xchg
jns
es
push
mov
mov
jo
lock
jne
add
sbb
jp
add
jnp
and
mov
test
inc
jge
clc
fildl
loop
sarl
add
xchg
mov
mov
mov
fistpll
cmpsb
push
sub
gs
popf
push
call
mov
dec
js
and
imul
sub
out
mov
mov
out
shlb
mov
sbb
mov
or
dec
push
stos
add
aaa
push
dec
xor
or
cmp
pop
ficoms
and
sbb
push
inc
mov
mov
pop
mov
test
sub
and
sbb
dec
mov
pusha
push
sub
and
xor
aas
in
inc
pop
std
and
jge
ds
shlb
sub
inc
add
pop
lock
cmc
jp
sbb
loopne
lcall
imul
leave
clc
orb
jo
adc
jae
cmp
fildll
out
pop
subb
repz
push
mov
inc
xor
and
subb
adc
icebp
add
cmp
mov
icebp
cmpsl
fmuls
mov
sbb
mov
movsb
das
mov
je
lcall
mov
testb
outsl
pop
adc
jo
or
rorb
insl
test
std
cmp
push
incb
sub
pop
sahf
push
outsl
popf
pop
mov
push
psubsb
roll
incl
es
add
addr16
sbbb
fwait
test
call
push
push
test
test
lcall
push
xor
es
fcoms
cmp
and
and
mov
xor
pop
adc
dec
lock
outsl
nop
pushf
or
lahf
xchg
rorb
xor
inc
push
xor
push
mov
dec
xor
and
cmp
cmp
test
shrl
push
push
lcall
inc
pop
fsubrl
add
insb
clc
push
ss
and
repnz
sbb
aam
mov
aas
inc
add
cmp
pop
add
add
imul
or
or
dec
push
push
sbb
scas
push
fiadds
lock
xchg
xor
jmp
push
pushl
inc
js
sbbb
repnz
fisttps
outsl
insl
mov
in
ja
adc
xchg
xchg
mov
ret
mov
movsb
fiadds
std
cwtl
cli
loop
jnp
and
sub
jle
fcomps
scas
inc
loope
inc
pop
ljmp
push
js
ficoml
sbb
imul
ret
adc
movsl
lea
xchg
sahf
daa
cmpsb
mov
push
dec
xor
testl
xor
add
dec
push
jle
clc
test
jnp
ficoml
dec
mov
stc
and
subb
push
fmuls
icebp
insb
imul
or
sti
xor
into
inc
bound
mov
or
mov
call
mov
mov
cmp
xor
push
std
mov
repz
jb
int
xchg
lds
cmp
adc
cs
mov
push
outsb
js
ds
jge
fisubrs
cmp
adc
dec
adc
movsb
and
notb
sbb
mov
adc
mov
add
out
jl,pn
pop
inc
adc
stos
ds
js
jp
cmpsl
cmp
incb
cwtl
or
cmp
lds
jo
xor
fdivr
sbb
bound
in
andb
cmp
add
sbb
js
inc
add
cli
push
or
loope
jle
push
xchg
int
sub
push
push
movsb
in
pop
repnz
mov
xchg
rcrl
fwait
ljmp
in
adc
and
loop
and
lock
arpl
push
push
xor
iret
cmpb
mov
test
or
outsb
mov
mov
movsl
in
shrl
push
ss
cmp
adc
sub
inc
call
rcll
jl
mov
imul
mov
inc
sarb
xchg
mov
out
sub
fwait
jp
xchg
jbe
mov
add
loope
inc
cmc
clc
push
adc
cmp
cli
or
add
xorl
bound
and
cmpsl
scas
movsb
or
daa
dec
out
cmp
mov
adc
pop
push
addb
inc
sbb
mov
inc
and
dec
pop
inc
push
fwait
inc
cld
add
jp
dec
roll
inc
pop
xor
cmp
or
mov
test
lahf
sub
add
lock
mov
out
or
jnp
incl
insb
call
stos
mov
nop
add
sub
into
ljmp
roll
jle
jbe
incl
push
xorl
cli
pop
sbb
imul
inc
rolb
fildll
int3
and
cmp
shll
mov
adc
not
or
inc
clc
inc
jnp
push
addb
fsubp
adc
add
push
sbb
pop
pop
nop
or
jnp
inc
add
dec
shlb
add
inc
push
adc
pop
or
loope
insl
xchg
inc
sbb
dec
push
push
mov
or
js
cmc
insl
test
mov
add
pop
lods
clc
inc
push
cs
add
adc
inc
jmp
mov
fldl
push
inc
ret
data16
mov
icebp
mov
push
sbb
mov
fisttps
dec
adc
cmp
dec
mov
pop
pop
add
idiv
cmp
movsb
pop
cmp
scas
sub
mov
loope
scas
das
cmpsb
mov
rol
lcall
test
out
les
push
das
mov
or
pop
mov
hlt
fwait
add
cmp
jl
lret
sahf
and
insb
stos
sbb
inc
adc
std
push
adc
js
jmp
test
out
add
jp
insl
cld
lahf
cmp
adc
jnp
mov
xor
pop
cmpsb
cld
mov
sub
lcall
test
scas
push
sub
inc
or
cmp
add
inc
xchg
mov
mulb
xor
rcrb
mov
js
test
icebp
adc
cltd
jl
pop
dec
lock
and
xchg
push
lea
add
mov
cmp
rcl
das
sbb
or
jae
dec
mov
push
nop
les
gs
jge
dec
lods
push
jg
ds
in
cmp
aad
jg
in
and
mov
and
dec
jbe
push
rol
xchg
clc
mov
push
and
js
mov
jne
cmpsb
aam
and
stos
das
leave
rolb
cmp
sbb
mov
popa
xchg
out
jle
or
pop
scas
xchg
mov
xor
mov
sbb
test
xor
add
pop
cmpsl
pop
inc
jp
mov
into
sbb
fbstp
mov
ret
int
mov
dec
push
faddl
lods
cmp
sar
daa
fdivs
mov
fistpll
mov
out
or
push
adc
jecxz
cmpsb
mov
mov
add
sub
push
bnd
push
cmp
repz
xor
jne
and
mov
sub
testl
add
dec
dec
adc
pushf
xlat
and
mov
pop
cmp
xor
jnp
or
cmpsb
arpl
jl
add
out
mov
js
adc
add
cmp
jo
xor
ret
stos
pop
popa
pop
pop
jg
fistpl
addr16
lock
hlt
jne
int3
jno
ja
mov
mov
je
mov
mov
mov
outsb
test
mov
cmp
cli
lea
shl
icebp
mov
loop
icebp
lret
fbstp
das
mov
pop
add
xor
mov
cmc
xchg
sub
ret
sbb
mov
or
adc
add
push
aas
jecxz
jl
ret
in
mov
mov
mov
cmp
daa
dec
jbe
adc
push
adc
push
out
push
out
imull
lret
ret
mov
jo
mov
cmp
add
or
pavgb
lcall
or
test
cs
mov
shl
and
xchg
cmpb
mov
les
subb
test
cmp
mov
cmp
cmp
cmp
inc
sub
and
add
mov
or
push
and
cmp
mov
int3
les
pop
lock
mov
ljmp
pop
xchg
jbe
imul
mov
or
clc
or
jno
inc
nop
jbe
mov
fistps
push
or
xlat
pop
lods
xor
add
int
fldt
push
pop
fisubs
test
or
subl
insb
repz
sub
or
or
add
mov
mov
cmp
xchg
fcom
lock
loopne
mov
lahf
push
dec
mov
inc
fisubrl
cmp
jmp
sub
stc
loope
stc
pop
cli
enter
fidivs
lods
xor
clc
push
into
rorl
add
jne
and
lods
rclb
or
add
pushf
orb
sub
ss
cli
or
or
xchg
ret
dec
repnz
mov
loopne
into
mov
and
pop
adc
outsb
ss
dec
push
aam
fnstsw
xchg
daa
mov
jbe
std
sbb
cwtl
lods
lea
pop
loopne
sbb
or
ja
add
sub
nop
and
cld
dec
dec
pop
out
pop
out
push
out
cwtl
and
and
mov
mov
xor
bound
addl
es
dec
mov
ja
roll
jae
sbb
fisubs
xor
push
leave
les
lcall
cmp
dec
push
sarl
xor
cmpb
or
lds
hlt
and
mov
push
repnz
cmp
jnp
mov
clc
es
adc
cwtl
je
sbb
or
fcompl
cld
cmp
mov
mov
lea
fstl
imul
ja
or
stc
or
cmp
loop
adc
mov
pop
jno
adc
loopne
js
inc
mov
push
mov
lahf
pop
push
iret
ss
mov
mov
mov
shll
cld
mov
icebp
shl
and
adc
jp
mov
sbb
mov
mov
cwtl
xchg
pop
and
aam
popa
fsubr
decl
stc
push
jge
push
nop
testl
adc
add
loope
jecxz
or
fscale
data16
movsl
mov
mov
mov
and
lcall
add
lock
mov
mov
push
mov
lods
loopne
inc
xlat
lea
mov
push
mov
xchg
call
gs
sub
dec
cmp
loope
js
js
pop
iret
cmp
stos
inc
mov
cmp
push
and
xchg
jle
into
or
lods
mov
hlt
and
data16
loopew
sbb
jmp
mov
add
pusha
fnstsw
pushf
push
adc
sarb
jl
fldl
mov
xchg
push
jbe
inc
pushf
hlt
xchg
cmp
ds
mov
movsb
mov
inc
enter
cmp
sub
dec
mov
stos
fisubs
adc
add
js
sub
add
imul
pop
jp
mov
std
pop
popa
xchg
ljmp
add
add
mov
jle
outsb
add
sbb
inc
mov
iret
in
insl
lds
ljmp
xchg
icebp
xor
clc
jo
mov
and
dec
enter
adc
xor
mov
stos
sbb
push
jl
shll
test
xchg
js
adc
push
and
mov
xor
subb
ret
aam
in
sbb
imul
or
mov
jle
and
lods
mov
mov
or
inc
add
es
xchg
out
jns
adc
dec
outsb
or
js
movsl
addr16
pusha
idiv
jne
jb
inc
add
mov
stos
dec
or
test
mov
inc
fcmovbe
push
fsubrs
dec
scas
dec
outsl
mov
mov
ss
sbb
data16
test
xor
lods
insl
pop
sub
mov
lock
xor
cmp
int3
pop
aam
pop
inc
inc
xchg
les
fsubl
jno
or
xchg
add
fdivr
test
mov
mov
fs
dec
and
ljmp
je
xor
popa
pop
mov
out
cld
ret
cmc
loopne
push
sub
fimuls
dec
sbb
sbb
mov
mov
inc
sahf
lock
stos
sub
push
sti
xor
mov
test
push
sbb
std
js
push
shrb
cmpb
mov
xlat
xchg
sbb
bound
mov
lret
cli
ss
cmpsb
and
adc
rcr
incb
loopne
nop
roll
test
pusha
and
sti
push
fbld
dec
fstpt
loopne
rolb
das
cli
push
dec
fidivrl
ss
adc
pop
pop
cltd
shl
scas
mov
sbb
xchg
push
mov
cmpsb
lahf
bound
in
icebp
andb
imul
movhps
cmp
mov
adc
fwait
loop
loop
loopne
cmp
daa
jo
call
stos
adc
loop
fs
add
push
xor
adcl
lods
mov
mov
push
inc
out
mov
jb
sbb
inc
and
cs
jb
gs
imul
push
test
movsb
mov
mov
xchg
mov
loop
setge
pop
das
jle
mov
ss
aas
mov
mov
sbb
sub
sub
repz
add
and
sti
aam
pop
mov
and
xchg
cmp
out
and
ret
push
das
arpl
fistpll
xchg
mov
xor
scas
in
cmp
fnop
pop
sub
jns
dec
push
repnz
test
mov
ss
and
shl
mov
jbe
out
xor
add
clc
jmp
loop
add
stos
jle
jg
cmp
ljmp
push
sbb
pop
fbstp
push
push
jne
cmp
inc
or
js
xchg
sahf
scas
sbb
notl
inc
sbb
mov
pop
rolb
cvtpi2ps
jmp
mov
divb
hlt
dec
rorb
in
and
xor
inc
lahf
inc
jae
mov
jbe
add
jle
or
movsb
or
repnz
pop
add
pop
je
xchg
sub
leave
stos
mov
cld
or
xor
mov
cmp
adc
or
hlt
aaa
sub
decl
lods
adc
lock
add
jg
inc
dec
stc
dec
mov
arpl
stc
pop
out
aam
cmc
add
nop
shrb
jnp
jnp
jae
xlat
push
dec
push
jne
je
jb
fdivr
xor
pusha
jge
or
lock
add
mov
mov
xchg
cmpsb
daa
stos
in
pop
aaa
aaa
js
pop
clc
dec
mov
ficoms
inc
je
lcall
in
push
and
xlat
orb
jmp
popa
add
ds
cmp
pop
insl
sbb
mov
lahf
jle
pop
jmp
outsl
or
subl
add
and
gs
jle
mov
jo
mov
fisttpl
jne
push
bound
test
push
shlb
jecxz
lcall
jge
shlb
xchg
add
int3
xor
jne
aam
pop
insb
adc
es
inc
ret
sbbb
xchg
data16
sbb
mov
jo
mov
or
cmp
sub
jbe
jge
xchg
and
iret
mov
pop
jl
insl
ret
jl
add
int3
je
daa
cld
or
add
aam
add
push
mov
fcmovbe
dec
arpl
call
inc
imul
hlt
jo
xchg
shll
out
jge
pop
test
sbb
cmp
daa
test
les
sbb
push
pusha
adc
sbb
hlt
lea
inc
pushl
dec
push
mov
inc
and
xchg
xor
cli
cwtl
dec
dec
fst
daa
jmp
add
inc
dec
lock
adcb
xchg
xor
imul
fiaddl
insb
or
inc
js
xor
push
popf
xor
lea
clc
aaa
or
push
and
mov
pushf
outsl
mov
shlb
mov
cmp
add
sub
xchg
insb
cmp
mov
jnp
add
xchg
xlat
and
jle
xorl
repnz
imul
lahf
push
cmp
add
int
dec
adc
cli
sub
push
sub
inc
insl
das
push
or
jno
dec
popa
add
push
xor
jge
adc
out
jno,pn
fcoml
and
lock
dec
xchg
fcoml
cld
mov
mov
cmp
roll
insb
insb
popa
fistpl
mov
sarl
sbb
and
into
jo
and
ljmp
and
push
pmaxub
in
aad
pop
mulb
xor
hlt
in
xchg
data16
frstor
and
xchg
inc
mov
hlt
cvttps2pi
and
cmp
mov
lods
ret
fwait
inc
sbb
add
jmp
inc
sbb
mov
pushf
push
push
sbb
dec
push
push
xchg
or
inc
test
or
mov
test
inc
insl
push
rolb
mov
inc
pop
imul
mov
decb
lret
scas
mov
jo
sbb
sub
push
or
pop
insl
in
scas
dec
ja
jmp
mov
popf
test
test
ljmp
sub
mov
add
pop
int
cli
add
add
add
cmp
loopne
cmp
aam
sarl
lea
pop
cld
mov
insb
into
js
push
sarl
and
jp
ret
aad
outsb
clc
repnz
cli
dec
das
add
add
push
aad
out
mov
mov
mov
push
xor
roll
dec
rolb
mov
or
mov
or
pop
cmp
push
cmpsl
jle
movsl
scas
adc
or
clc
add
inc
iret
lds
imul
scas
jae
xor
xchg
in
pop
mov
mov
outsl
les
dec
fisubs
adc
aad
push
mov
es
sbb
add
add
mov
mov
or
mov
insb
out
sub
orb
aam
dec
and
add
in
xchg
push
mov
jle
stos
rolb
out
in
jne
sbbb
mov
lret
pop
mov
loopne
push
data16
imull
lret
sbb
and
mov
mov
push
inc
fistpll
add
or
mull
push
lret
mov
call
sub
push
out
xchg
movsb
push
and
cmp
push
mov
rcrl
daa
cltd
push
lret
mov
loopne
dec
mov
lcall
xor
dec
dec
dec
aas
stos
es
test
xor
int3
sub
xchg
sub
sub
shll
and
cmp
stos
popl
pushf
bound
mull
adc
push
outsl
aad
mov
inc
testl
frstor
loope
xor
jbe
scas
loope
cmp
push
fildll
call
rcrl
aaa
out
nop
ds
ss
jp
cmp
adc
shlb
or
sub
or
push
mov
adcb
ljmp
add
aam
pop
push
std
or
scas
cli
insb
mov
inc
cmp
cltd
aad
add
xchg
cmp
std
and
test
xchg
lcall
ja
pop
hlt
xor
mov
add
sub
push
shll
inc
les
jbe
xor
xchg
xchg
rclb
test
adc
mov
shlb
add
call
sbb
loop
pop
xor
add
shl
outsb
test
mov
scas
incl
testl
inc
and
iret
adcb
test
add
orb
and
js
xor
inc
xlat
mov
dec
cmpsl
into
jno
jo
cld
gs
ljmp
push
mov
jg
cmp
rcll
adc
arpl
imul
std
stos
mov
jbe
loopne
push
call
sbb
les
ja
call
xchg
sbb
pop
lock
jns
and
fldcw
cmp
mov
jnp
sub
pop
sahf
les
outsb
xchg
out
or
insl
hlt
xchg
mov
sub
inc
mov
mov
pop
xchg
and
sub
adc
shlb
leave
mov
adc
push
fdivl
or
sub
call
xor
sbb
mov
sbb
insl
jmp
jo
ret
rolb
out
pop
es
or
rcl
mov
or
mov
mov
inc
jp
fldenv
dec
sub
or
push
ficoms
fisttpl
into
rcrb
pop
mov
shrb
inc
sbb
and
adc
fildl
call
cmp
sbb
push
nop
ds
cmp
clc
mov
jp
rorb
repnz
test
mov
rolb
jecxz
mov
mov
imul
pop
cld
mov
stos
addr16
movsl
dec
lcall
stos
loope
push
push
in
fs
cwtl
call
sarb
sub
ljmp
cmp
test
and
or
mov
mov
and
lret
fisubrs
and
adc
push
mov
sbb
jp
inc
jno
pop
lock
jecxz
nop
adc
mov
pop
bound
xchg
popa
in
lds
mov
cmpsl
sub
out
sahf
sahf
cmpsl
cmp
scas
mov
mov
jmp
sarb
adc
push
mov
stos
mov
sub
push
je
std
cltd
xorb
fldl
aad
in
mov
mov
xor
imul
jecxz
xor
inc
fiadds
cmc
or
int
jbe
and
lock
xchg
xchg
mov
stc
jns
aam
in
sbb
enter
push
hlt
sbb
test
out
sbb
cmp
mov
jge
cmpsb
jo
dec
xchg
adc
cli
hlt
mov
xchg
or
xor
jne
aaa
xchg
idivl
jecxz
roll
inc
loop
out
jg
push
push
flds
mov
sbb
push
sbb
mov
or
push
xor
aad
add
mov
inc
nop
rorb
notb
adc
cmc
iret
mov
push
jge
int
mov
sbb
je
push
xchg
shrl
jo
cwtl
push
xchg
rorb
call
pop
sbb
xor
mov
xchg
rorb
test
into
loopne
cmpsl
and
testb
test
data16
pop
lea
inc
subb
testl
into
lret
mov
lods
xchg
lock
shlb
pop
and
leave
leave
clc
shrb
fimull
sahf
lcall
sub
cmp
or
ret
loop
add
mov
andb
mov
mov
sbb
punpcklwd
loopne
mov
ja
ret
loope
mov
or
inc
mov
pushf
icebp
aad
sbb
pop
divb
jge
adc
push
lods
xchg
jns
cmp
jae
push
dec
add
mov
cli
outsb
inc
dec
and
cld
push
test
mov
into
sbb
add
lahf
orb
mov
fsubrl
add
out
or
cmp
adc
pop
and
lods
ret
pop
aad
add
dec
sbb
push
mov
jge
jp
add
int
call
xor
lret
roll
sahf
insl
gs
ljmp
xor
aaa
push
cmp
xor
das
inc
imul
test
add
sbb
sbb
fisttpl
shr
lds
repz
aad
mov
mov
mov
out
adc
and
jl
push
shlb
test
sub
loop
push
in
ucomiss
cmpl
les
xchg
fadd
shll
out
inc
sahf
cmp
rclb
lock
mov
outsb
dec
mov
jecxz
pop
adc
jo
ljmp
xor
push
sub
mov
pop
out
gs
or
add
and
sahf
ds
decb
jns
inc
ja
push
or
stos
flds
insb
lret
add
pop
jmp
xchg
icebp
mov
out
clc
sbb
xorb
int
inc
inc
mov
cld
imul
dec
push
xlat
loop
inc
sub
and
xchg
rcl
push
and
or
scas
mov
cwtl
xchg
imul
cmpsl
jae
ret
push
pop
and
lret
sub
xor
add
lods
clc
loop
bound
pusha
and
adc
addr16
add
lock
cli
and
jbe
sbb
xchg
jecxz
cmp
pop
or
add
adc
mov
fsubr
mov
out
rol
mov
cmp
icebp
and
jle
mov
mov
cmp
rcll
jnp
ljmp
inc
mov
insb
or
lock
std
pop
mov
fidivrs
in
push
call
jle
adc
dec
ss
insb
jnp
sbb
fwait
pushf
mov
push
loopne
cmp
push
inc
sub
pop
cli
xor
shlb
out
xchg
mov
movsb
inc
mov
rclb
sub
xchg
jle
rol
push
icebp
push
xchg
mov
mov
inc
sub
mov
lcall
xor
je
loop
ret
pop
pop
aam
sub
fnstenv
jl
shll
mov
jbe
das
fmul
out
mov
popa
ret
jbe
mov
je
push
add
mov
lods
and
sbb
test
jecxz
jnp
adc
sub
loopne
inc
add
data16
call
fdivl
test
xchg
lock
clc
inc
repz
inc
mov
mov
out
lret
cmpsb
movups
xchg
pop
cwtl
nop
shr
leave
mov
pop
clc
push
add
std
repz
mov
dec
cld
lds
mov
xor
fnsave
sahf
das
repnz
push
rcr
pop
or
adc
test
and
xor
sbb
and
pusha
shr
test
rolb
xchg
adc
enter
sub
mov
sar
pop
fstpt
mov
leave
dec
sub
ljmp
push
insb
out
or
push
adc
push
aas
mov
mov
mov
inc
xchg
pushf
out
mov
lods
mov
pop
pop
lret
fucomi
pop
adc
or
mov
addl
insl
cmc
adc
dec
adc
xor
cld
mov
fimuls
lods
ljmp
pop
test
imul
xor
mov
imul
mov
xor
xor
push
push
ffreep
dec
add
into
inc
cs
aad
data16
push
leave
pop
adc
rol
mov
lock
or
push
lds
mov
test
mov
icebp
das
mov
es
add
movsb
add
push
test
xor
pop
repz
pop
dec
fucompp
jg
notb
and
dec
add
mov
inc
rcrb
nop
cli
adc
ss
and
dec
popf
or
ds
les
insl
push
xorl
fsubrs
cld
adc
push
sub
std
dec
xor
cmp
mov
mov
add
cmpsb
mov
orb
mov
mov
dec
pop
jae
jmp
inc
adc
popa
pop
dec
inc
dec
jecxz
cmp
adc
mov
ss
mov
lret
ljmp
and
inc
mov
mov
cmp
pop
test
cs
lret
push
add
mov
leave
add
xchg
add
sbb
lods
adc
or
aas
mov
dec
fwait
add
lods
fcompl
xor
pop
out
or
push
ljmp
sub
fwait
sub
ret
mov
inc
pop
mov
adcb
in
adc
je
out
push
rcrb
adc
jb
lea
jno
sub
push
and
cmovl
mov
jle
mov
je
sbb
mov
data16
push
test
and
jge
push
jg
ja
repnz
jge
sub
jae
incl
icebp
std
mov
adc
scas
clc
mov
pushf
push
mov
inc
rcll
ret
loop
mov
or
out
add
mov
sbb
lds
fnop
pop
lock
fprem1
add
push
outsb
mov
add
and
test
add
xchg
jo
loop
push
bound
xchg
jne
rorb
mov
push
scas
test
shl
mov
xor
lock
jbe
nop
xor
out
inc
xchg
sub
mov
adc
hlt
pusha
fisubl
pop
test
lea
int3
loop
and
inc
je
pop
jl
push
ljmp
lock
loop
xor
cmp
xor
add
aam
and
test
ss
int3
xchg
or
xchg
mov
sbb
and
pop
pop
sub
pop
pushf
cmpsl
fs
cmp
xchg
int
jge
sti
xchg
mov
add
xchg
sahf
inc
xchg
pusha
mov
pusha
icebp
or
jb
lods
cli
jne
sub
lret
hlt
call
ja
insl
cmp
hlt
cmp
sbb
ss
push
add
stos
hlt
cmp
dec
add
xor
mov
adc
popf
inc
xchg
cmpsb
mov
sbb
cld
jmp
xchg
xchg
mov
rolb
stos
in
mov
and
js
or
adc
into
fwait
cmpsb
lock
or
sbb
xorb
sahf
adc
loop
and
mov
add
mov
lds
push
adc
stos
stos
repnz
testl
dec
push
or
dec
enter
push
lods
outsl
movsb
xor
cltd
mov
pop
or
inc
out
out
lods
outsl
daa
clc
fdiv
adc
inc
push
sbb
jg
mov
dec
add
pop
xchg
cmp
aam
add
lret
cmp
mov
pop
mov
add
lods
cmpsb
fiadds
add
push
mov
rcrb
js
jg
movsb
or
ret
iret
mov
idivb
pop
cwtl
sub
sbb
std
lock
inc
js
pop
int3
cli
mov
lds
mov
hlt
push
in
into
mov
repnz
movsl
fcmove
cmp
lret
fisubrl
ret
push
les
sub
mov
xor
jge
icebp
inc
pop
mov
mov
sub
cmp
dec
pop
insl
push
xor
int
out
mov
dec
call
js
sbb
cld
pop
sahf
lock
push
xchg
jmp
push
aaa
pop
or
scas
shl
sub
xchg
xchg
ret
inc
xor
out
lcall
adc
sub
mov
or
add
aam
push
mov
fisubl
scas
dec
fisttpl
movb
adc
mov
dec
sub
nop
jp
aaa
mov
mov
sbb
dec
sub
mov
mov
add
jae
adc
and
sub
inc
insb
loopne
dec
in
int
lcall
push
mov
pop
arpl
cmpsb
fiaddl
pop
mov
mov
or
dec
sub
cmpsb
out
lea
sarb
test
mov
push
sbb
and
xlat
xor
push
ret
xlat
dec
push
clc
or
and
mov
cmp
mov
test
cld
clc
loop
dec
xor
push
mov
mov
or
mov
lock
cmp
mov
clc
pop
xor
inc
push
mov
jo
in
jbe
xchg
pop
dec
sbbb
out
add
adc
fiadds
xchg
sahf
in
or
cmp
mulb
sbbb
addb
jp
adc
sbb
js
into
xchg
ret
push
push
push
fcoml
cs
testb
and
imul
ds
pusha
sbbl
mov
xchg
insb
dec
jae
mov
shlb
xchg
or
pop
add
sub
sbb
fs
mov
in
sub
dec
inc
and
xchg
gs
adc
or
pop
jp
sub
pop
data16
sbb
jno
repz
insl
fdivl
fnstsw
fdivs
add
aam
sbb
sarl
mov
mov
cmpb
jno
out
jne
les
fsubp
or
pop
pop
mov
pop
xchg
pop
cld
rcl
fsubrl
test
or
inc
sbb
add
adc
nop
xchg
add
mov
loopne
mov
enter
or
ret
in
fldt
cli
adc
add
cmpsb
jmp
add
adc
pop
pop
push
adc
add
orb
xchg
jp
jp
or
sti
xchg
lahf
push
flds
les
orl
cmp
jg
fisttpll
cltd
jb
mov
shl
xchg
push
sbb
clc
arpl
jno
inc
adc
add
or
mov
mov
stos
mov
mov
clc
mov
cli
pop
xchg
rolb
mov
mov
pop
push
es
cld
nop
lret
add
mov
inc
outsb
pop
cmovb
adc
add
and
into
lock
sub
add
js
aaa
negb
mov
fldcw
mov
mov
push
xor
fwait
ss
test
pushf
xchg
imul
cltd
sbb
frstor
jp
pusha
push
test
xchg
cs
emms
adc
outsb
or
cmp
dec
aad
es
mov
aad
adc
shll
mov
mov
or
and
push
and
pop
xor
push
mov
push
jae
cmp
nop
cld
sub
push
or
data16
cmp
ficompl
sar
lods
hlt
mov
add
jmp
rolb
sbb
sub
xchg
ret
enter
jae
fmull
hlt
in
push
mov
sbb
enter
dec
add
mov
mov
jbe
cmpsb
mov
cli
insl
stos
in
hlt
mov
cwtl
std
js
push
jp
mov
mov
xor
and
jno
cmpsl
pop
push
imul
sbbb
xchg
push
mov
xor
push
or
mov
xlat
es
add
mov
sub
mov
mov
push
pop
add
lock
ljmp
add
sub
mov
je
sbb
pop
mov
jle
jae
rcr
jle
add
in
push
push
aam
das
push
sbb
unpcklps
push
pop
cltd
mov
xchg
xchg
jbe
imul
mov
mov
mov
mov
cmp
mov
fldl
leave
je
adc
mov
dec
insl
push
xor
nop
dec
xor
scas
and
nop
xor
outsl
and
dec
into
addl
sbb
adc
iret
add
pop
out
jl
adc
shll
adc
add
inc
call
push
and
out
sbb
cmove
lret
add
testb
loop
bound
sub
sti
mov
pop
dec
das
outsl
push
out
mov
xchg
pop
mov
call
clc
lods
sub
mov
lahf
and
push
inc
xchg
movsb
fisubl
push
mov
fisubrl
lea
xchg
sbb
lock
loopne
daa
cmp
aaa
lret
fwait
movsl
nop
jle
lods
js
outsl
push
lods
fidivl
or
mov
test
adc
mov
mov
inc
xchg
push
and
jnp
xchg
mov
faddl
movsl
loop
adc
push
or
mov
andb
test
sahf
roll
popf
pop
dec
loope
test
pop
enter
xor
push
fisubs
lahf
jge
and
mov
sbb
dec
out
mov
sbb
lock
push
ret
fwait
xor
shlb
fcmovb
fsts
add
sub
popl
mov
cmp
fs
incb
sub
sahf
dec
and
insb
add
fs
lock
je
mov
mov
dec
fiadds
loope
in
jmp
push
repnz
mov
shlb
jmp
jo
movsb
add
inc
mov
or
and
outsb
outsl
push
push
rcl
cmpsb
cmpsl
enter
xor
clc
mov
negb
cli
sub
jle
dec
cld
inc
cmp
mov
hlt
adc
call
dec
sub
shlb
xor
notb
rolb
loop
dec
pop
lods
mov
or
jmp
pushf
orb
cmp
dec
cli
fcomp
scas
and
ss
mov
ret
in
xor
inc
pop
xchg
call
dec
in
add
sub
orl
ss
inc
adc
cmc
push
je,pt
sub
adc
insb
xchg
or
and
or
lds
and
jb
mov
pop
imul
ret
add
je
and
inc
mov
imul
flds
pushf
ds
popa
test
or
cmp
inc
push
xlat
mov
movsb
and
je
cmpsl
cmp
out
push
and
ja
cmp
out
push
xor
xor
xchg
nop
ss
or
inc
adc
stos
scas
dec
cld
incb
repnz
jmp
add
cmp
mov
sbb
mov
sbb
sahf
decb
jmp
sbb
or
and
loopne
stos
neg
in
into
test
insb
mov
inc
insb
ret
shll
xor
lahf
pop
insb
or
loop
mov
fdivrl
or
jbe
cmp
xchg
and
cltd
stos
fistl
andb
push
call
and
addb
clc
cld
enter
xlat
pop
push
cmp
inc
daa
lods
push
sub
xchg
adc
test
pop
movsb
icebp
and
fisttpll
fadds
sbb
sti
inc
mov
clc
ljmp
adc
adc
pop
cs
push
pop
sbb
or
mov
ss
dec
push
sbb
mov
or
pop
mov
xor
cmp
mov
xor
or
test
out
call
jb
mov
dec
mov
ds
pop
or
out
shrl
repz
or
imul
in
out
loop
and
fistl
add
mov
xor
fildl
testl
fcmovbe
lcall
movsl
inc
sbb
ficomps
cmc
sub
fs
add
xor
mov
jnp
outsb
into
dec
test
stos
or
xchg
cmp
sbb
fnsave
stos
ret
ret
loope
and
aaa
dec
mov
mov
imul
mov
sub
lds
xchg
sbb
dec
ret
pop
into
jle
jle
inc
cmp
mov
in
xchg
push
adc
rcrb
cld
inc
aam
dec
or
jg
adc
mov
out
dec
sbb
push
dec
xchg
cld
mov
test
xchg
and
rcll
inc
inc
stos
mov
xor
jnp
push
and
icebp
cmpsl
xor
jno
xor
lea
icebp
and
cmp
xchg
ljmp
lock
popa
repz
xor
xor
or
cmp
mov
add
cs
data16
in
adc
pop
jecxz
jle
out
lods
data16
lret
push
loope
loop
xchg
sub
push
xchg
adc
push
pushf
mov
inc
jb
xchg
mov
lock
ss
call
into
mov
stos
data16
sbb
pop
aaa
pop
iret
rolb
popa
neg
out
inc
xchg
jo
insb
dec
pop
movb
popf
lock
fdivrs
movb
aam
and
cmp
mov
shrb
xchg
sub
mov
ljmp
inc
push
stos
out
mov
lods
xchg
pusha
mulb
pusha
add
mov
in
or
out
pushf
mov
cs
fldt
pop
inc
pop
pop
adcl
adc
lret
xchg
rcrb
arpl
or
or
pop
jl
cmova
mov
cmc
adc
dec
lcall
and
jns
jecxz
cmp
mov
cmp
mul
icebp
push
push
jge
test
mov
xlat
or
sbb
or
jmp
test
jnp
dec
xor
jge
push
or
popf
jecxz
or
xorb
leave
cmp
in
adc
inc
aaa
or
lahf
sti
sbb
mov
add
repz
mulb
lods
adc
jno
nop
lea
fwait
lods
orb
fucomip
add
cmp
xchg
mov
push
cmp
cli
xor
test
test
inc
jecxz
sub
ss
pop
pop
or
mov
loopne
out
call
or
push
push
lret
add
or
inc
xlat
mov
xor
adc
and
mov
dec
sbb
adc
fidivrs
jns
add
jge
insl
push
cs
je
push
or
and
dec
insl
inc
add
xchg
test
sbb
adc
ret
mov
je
xor
fcompl
jno
fldenv
les
or
es
push
adc
cmp
into
push
outsb
aaa
shl
pop
push
ljmp
cmc
outsl
xchg
jge
test
xchg
js
test
adc
psubd
push
sbb
adc
fiaddl
cmp
pusha
sbb
or
adc
mov
mov
push
mov
popf
xchg
sbb
push
pushf
xor
xorb
jecxz
push
jl
jmp
push
mov
mov
push
js
jecxz
in
push
popf
or
mov
test
outsl
adc
test
shrb
ret
add
pop
dec
lahf
mov
push
test
orb
imul
pusha
icebp
push
add
sahf
mov
push
pop
lcall
pop
dec
loopne
sbb
mov
jmp
out
mov
push
sbb
jp,pn
mov
pop
ss
stos
xor
pusha
cmc
addb
imul
push
pop
in
or
xchg
test
adc
nop
js
lods
push
push
sbb
cmp
roll
call
ret
ds
dec
aad
loop
inc
mov
stos
sahf
xorb
icebp
scas
popa
lahf
lock
or
mov
xchg
mov
sub
xchg
cwtl
adc
mov
std
pop
adc
rclb
adc
xchg
xchg
sub
mov
or
adc
dec
rcll
hlt
pop
push
test
dec
in
sahf
pop
imul
fldl
xlat
mov
and
orb
movsl
ljmp
ljmp
mov
dec
inc
xor
mov
cwtl
popf
xor
push
sub
scas
xor
push
outsb
movsb
mov
push
inc
cltd
arpl
pusha
and
mov
sbb
insl
loope
xor
xchg
in
ret
dec
mov
sbb
ljmp
mov
stc
inc
lcall
or
sbb
dec
lcall
icebp
or
xchg
mov
xor
aaa
xchg
daa
mov
jl
loop
mov
or
xchg
mov
fmuls
mov
hlt
rolb
sub
xor
mov
mov
popf
in
and
mov
std
dec
das
mov
dec
out
mov
mov
cld
repz
out
add
mov
or
sub
push
mov
push
pop
inc
xorb
mov
fsubl
jnp
mov
ja
and
mov
or
xor
in
xchg
data16
out
sar
jp
push
in
adc
es
ja
je
fnstcw
add
mov
jo
add
out
jbe
and
mov
mov
imul
push
loope
imul
lea
jo
pop
mov
int3
rcl
pusha
sbb
loopne
pop
pop
or
out
scas
inc
addr16
and
in
push
mov
jae
insb
pop
lods
mulb
mov
mov
test
pop
sub
and
lock
dec
or
pushw
or
push
clc
test
ret
loopne
imul
push
lds
pusha
das
cs
stos
or
stos
stos
test
daa
lea
scas
fnstsw
pop
js
std
xchg
mov
imul
and
dec
cmp
xchg
and
mov
jo
leave
iret
mov
mov
or
cltd
push
fdivl
push
cmp
test
adc
mov
mov
jg
pop
loop
arpl
stos
aas
add
stc
in
sub
or
push
xchg
cld
add
pop
or
mov
mov
mov
add
and
mov
daa
push
or
roll
xor
push
mov
mov
ficoms
push
xchg
pop
xor
and
testb
inc
push
dec
rcr
adc
fcomps
aam
jmp
fistps
jmp
xor
pop
orl
xchg
imul
mov
inc
push
sbb
xor
xchg
jecxz
adc
into
ret
and
adc
mov
out
stos
sub
mov
sbb
adc
jb
sub
dec
add
ljmp
sbb
dec
xor
scas
adc
subb
std
sub
scas
inc
movsl
fwait
mov
pushf
scas
nop
fisttps
aad
test
adc
es
shlb
jmp
dec
jmp
mov
in
and
add
jmp
push
jmp
mov
pushf
movsb
fists
push
lods
add
sub
pop
stos
push
mov
sbbb
pop
daa
enter
dec
test
mov
out
fwait
ret
mov
mov
sbb
movsl
cmpsb
push
out
push
mov
inc
push
inc
add
cld
mov
pop
sbb
js
and
fidivs
add
jmp
adc
mov
pop
stos
mov
sbb
pushf
cmp
les
adc
movsl
fs
and
lret
jle
cmp
sub
push
and
bswap
js
and
test
jle
pop
or
jle
and
insb
mov
aam
fildll
mov
xor
adc
cld
das
adc
push
push
movsl
scas
xor
in
imul
call
int3
rcrl
mov
sub
dec
adc
add
xor
fcoms
mov
ds
sahf
jp
xchg
sar
lret
xchg
adc
fwait
adcb
xor
aas
out
pop
inc
clc
xor
xchg
push
ljmp
mov
xchg
push
mov
mov
outsb
adc
arpl
mov
pusha
jnp
loopne
call
clc
add
shlb
jnp
imul
loop
xor
negb
mov
stos
sarl
sbb
ds
clc
xor
rorl
lret
and
jl
aam
test
mov
in
lret
push
mov
ja
cmp
jae
popa
outsb
adc
sbb
sbb
aad
or
or
sub
shl
call
add
mov
adc
jbe
lods
je
push
jb
cmp
mov
lea
jo
in
loope,pt
sbb
popa
cmp
xchg
dec
push
arpl
xchg
sub
out
test
add
xor
mov
add
enter
cmp
fisubs
test
pop
cli
sbb
sti
or
outsb
push
add
inc
movsb
sar
enter
shll
testl
in
lock
push
sbb
ss
cmc
pop
mov
mov
addr16
mov
ljmp
inc
pop
fbstp
mov
xor
adc
lcall
fidivs
psubd
cmp
mov
mov
lret
fadds
push
push
mov
stos
or
cmpsb
mov
pusha
push
pusha
adcb
outsb
outsb
add
push
pop
mov
mov
jl
pop
or
icebp
mov
sahf
add
dec
lods
test
lds
mov
pop
cmpsb
cmc
xchg
and
decl
mov
adc
es
jle
jmp
adc
pop
sahf
sbb
jl
push
lock
xchg
ss
dec
aas
fisubl
xchg
ljmp
mov
inc
pop
dec
adc
clc
add
leave
push
in
idivb
enter
adc
jge
adc
sub
loopne
jg
mov
xchg
lock
shrb
push
cmpl
sahf
sbb
ss
add
jle
cmp
mov
or
pop
sub
add
sbb
xor
xchg
mov
ss
call
scas
add
dec
lcall
orb
mov
and
sbb
mov
sti
sub
jne
ds
sarb
stos
push
out
jae
cli
jbe
and
sbb
lea
mov
jg
fimull
in
daa
insb
sbb
adc
cli
sub
mov
cmp
out
sub
shlb
addl
dec
loope
pop
xchg
movsb
les
loope
add
scas
sub
jle
dec
or
mov
iret
js
xor
negb
data16
sahf
adc
or
ficoml
jg
jge
xchg
ret
add
mov
ret
icebp
dec
dec
and
push
and
fadd
les
mov
fiadds
jno
mov
loop
xchg
push
lea
or
jo
mov
pop
jge
out
push
push
xor
dec
mov
into
jl
ret
mov
mov
cs
movsb
xor
std
or
push
jle
bound
popl
cs
ficoml
insl
jb
movsb
cmp
and
decl
in
inc
loop
and
mov
fsts
addl
lock
sbb
dec
ljmp
mov
ret
xchg
or
loope
sbb
push
dec
jmp
paddsw
push
mov
push
ficoml
insl
test
fadds
sub
mov
ret
jl
decl
add
fbstp
xor
xchg
imul
xchg
shl
pop
sub
adc
push
sub
stos
lods
inc
mov
add
aas
xor
inc
and
pop
stos
mov
add
jl
mov
cwtl
loop
push
aam
mov
pop
or
hlt
ja
enter
loopne
shrl
fbstp
inc
pusha
lods
sahf
xchg
jbe
test
or
hlt
jo
inc
hlt
sbb
daa
jno
add
mov
mov
adc
pop
mov
sbb
mov
out
cs
inc
imul
ret
ret
subb
push
pop
cmp
mov
addr16
lahf
cmpsb
adc
cld
cmp
inc
mov
sub
dec
jge
loopne
add
adc
xchg
xchg
xchg
mov
mov
jecxz
fadds
outsb
sbb
clc
pop
sub
jge
inc
lock
xchg
jle
test
add
lock
or
add
adc
fidivrs
jmp
mov
sbb
roll
xchg
les
add
push
rclb
and
cmpl
stos
decb
cli
sub
test
fmull
or
sbb
adc
popf
ja
das
pusha
call
repz
loop
popa
cld
mov
mov
loopne
rorl
cmpsb
rolb
mov
add
mov
pusha
in
sub
jg
imul
xor
aaa
lret
or
daa
mov
dec
xor
mov
push
call
pop
sbb
mov
enter
in
out
push
js
inc
bnd
jge
rcll
shr
leave
adc
xlat
push
jg
stos
dec
call
mov
call
ficompl
xchg
dec
dec
mov
or
or
je
gs
std
imul
rclb
push
push
adc
lods
sub
pop
cli
inc
aad
xchg
and
add
mov
mov
stos
inc
aad
cld
repnz
out
push
and
dec
test
shrl
xor
test
addb
inc
sarb
cmp
inc
enter
cmp
pop
pop
cs
xlat
inc
cmp
dec
pop
stos
adc
lds
clc
pop
in
push
out
inc
cmpsl
jo
orb
mov
xchg
jo
aaa
or
sub
sbb
aam
faddl
aam
cmpsb
scas
andl
dec
inc
jecxz
jne
pop
add
shll
aam
push
jle
pusha
cmp
into
ja
jecxz
sti
shll
sub
sbb
insl
sub
sbb
jnp
jecxz
jg
fldenv
pop
rorb
jmp
and
leave
push
or
adc
andb
mov
push
sar
lods
mov
pop
pop
mov
dec
pop
lret
stos
lods
ret
mov
adc
nop
mov
push
call
push
mov
adc
mov
test
adc
into
pop
mov
cmp
repnz
mov
cmp
inc
addb
or
xchg
sub
sbb
cmc
jg
mov
out
xor
nop
cmp
xchg
lret
mov
fstl
xor
hlt
add
stos
orb
dec
pavgb
inc
es
jg
sub
stos
jo
mov
lret
jge
cmp
xor
data16
cmp
ljmp
aas
or
fwait
adc
adc
imul
rcr
and
loopne
inc
adc
cmp
and
add
lods
scas
pop
inc
xchg
les
xchg
stos
fists
movsl
ljmp
pop
je
cs
mov
std
push
lock
mov
roll
aas
in
cltd
mov
push
lea
push
dec
mov
subb
outsb
jmp
mov
stos
sbb
push
fs
dec
or
push
or
mov
jno
pop
lock
jb
push
scas
push
test
inc
lods
add
pop
xchg
xchg
pop
ss
adc
inc
sbb
jl
dec
ja
outsb
jp
or
flds
stos
xor
test
or
mov
add
shl
mov
pop
pop
adc
sti
dec
mov
imulb
and
mov
in
dec
xlat
dec
inc
and
cltd
push
shrb
add
imul
jbe
mov
lods
ret
cmp
es
inc
hlt
lret
mov
incl
jo
je
sbb
add
cmp
sbbl
in
mov
pop
jne
push
mov
xlat
subb
test
imul
push
sub
dec
incl
mov
adc
out
test
fistl
mov
je
scas
nop
and
cmp
lods
int
cld
inc
push
out
push
pusha
pop
push
lahf
mulb
and
stos
paddb
ja
roll
jo
jns
push
mov
cli
mov
leave
push
int
and
shll
sbbl
mov
jne
push
mov
add
lahf
adc
mov
into
add
mov
pop
jecxz
test
push
in
nop
sti
gs
insb
outsb
rcrb
out
push
jb
adc
and
sti
add
sbb
call
clc
icebp
movsl
shll
pop
lea
mov
sbbb
cld
inc
mov
sbb
mov
cs
bound
shll
shll
mov
call
cmp
ja
dec
sarb
mov
cwtl
sbb
pop
hlt
pop
rcrl
imul
jmp
inc
andl
ret
inc
cmp
pop
mov
icebp
in
pop
cmp
sub
add
mov
adc
mov
jl
sub
bound
mov
add
test
outsb
sbb
scas
cmp
jle
fbld
mov
push
call
pop
sub
mov
and
mov
mov
xchg
icebp
push
push
bound
data16
push
add
stos
adc
orl
cmp
enter
dec
sbb
xlat
xlat
out
mov
fimull
or
mov
inc
bound
cwtl
lahf
and
mov
std
sub
in
fisttpl
data16
adc
lods
rorl
aas
leave
rol
mov
and
data16
outsl
mov
aad
xorb
addr16
push
lock
nop
xchg
sbb
and
std
fadd
bound
incl
pop
lods
xor
mov
mov
iret
sub
ret
call
xchg
lock
out
icebp
add
jl
out
mov
push
addl
mov
or
mov
push
push
test
loop
xor
lcall
or
aam
ds
out
aad
fsts
or
jbe
pop
push
or
out
repnz
ljmp
mov
xchg
imul
stos
testb
shrb
push
cltd
jge
mov
pushf
mov
adc
imul
or
inc
add
inc
pop
out
push
pop
push
cmc
mov
test
data16
add
cwtl
jl
scas
dec
addl
dec
div
mov
mov
cmpsb
pop
push
dec
rolb
push
lods
cmp
cld
rolb
cmc
or
fisttps
clc
sbb
mull
ret
add
inc
mov
movsl
dec
adc
adc
cmpsb
aad
mov
es
xchg
cli
pushf
enter
mov
jl
xchg
inc
or
loopne
scas
jnp
pop
aas
adc
and
add
ret
push
cmp
cmp
and
imulb
data16
xchg
dec
imul
cs
loope
jecxz
enter
fwait
je
lds
push
sub
pop
and
js
dec
pop
pop
mov
add
xor
or
fidivrl
adc
ret
lods
repnz
in
cmpb
lods
pop
sub
cmc
add
cwtl
cmp
test
call
push
rcl
add
push
mov
loope
fs
fists
outsl
mov
in
pop
sbb
in
stos
enter
iret
js
insl
jae
scas
outsl
inc
inc
xchg
lods
pop
adc
js
insl
in
cli
cmp
xchg
ret
add
sbb
mov
inc
adc
fs
jg
data16
mov
inc
dec
aaa
push
pushf
rolb
pop
cmp
loop
dec
push
dec
lock
stos
and
orb
stos
cmp
and
sub
adc
subb
aad
popa
xor
adc
pop
mov
pop
insb
bound
or
xchg
je
xor
push
dec
xor
dec
negb
and
xchg
cmpsb
out
adc
push
ljmp
movsb
aad
pop
mov
ja
ds
arpl
pop
jge
push
pop
mov
fdivl
or
inc
push
outsl
jg
ljmp
sub
add
orl
mov
cwtl
cmp
scas
nop
icebp
in
and
lret
adc
mov
ja
mov
mov
cli
push
push
push
pop
dec
add
pop
pop
lcall
sti
jbe
pusha
aam
adc
mov
loope
js
adc
hlt
inc
int3
shr
js
mov
pushf
xor
pop
xchg
jecxz
jns
or
xchg
shl
cmp
push
out
aaa
out
push
add
pusha
jno
cmp
mov
incl
push
add
xor
call
inc
or
imul
movsb
dec
xor
sub
rorb
mov
scas
ret
xor
sbbb
lea
cltd
aaa
iret
pop
je
sbb
adc
std
jg
imul
aas
xchg
sbb
andb
movaps
mov
mov
and
lea
in
add
pushf
fbstp
loop
testb
sub
jo
jbe
push
add
mov
je
jl
add
mov
fs
out
xor
jbe
and
sti
sbb
mov
xor
aad
or
popf
jle
push
loope
icebp
loope
cli
jo
cmpsb
inc
add
mov
fimull
lret
ret
mov
sub
adc
sbb
shll
pop
mov
push
mov
and
loopne
dec
cltd
adc
jmp
dec
lret
xchg
imul
jge
and
mov
pusha
lods
cli
cmpsb
and
scas
push
inc
imul
sub
loopne
fdivs
imul
popf
notb
add
or
hlt
lods
or
xor
pushf
ljmp
js
adc
filds
out
in
rorb
jno
inc
xchg
test
lods
inc
mov
andl
push
sahf
jle
test
push
shll
xchg
fwait
mov
inc
jo
jne
rol
xchg
pop
clc
adc
stos
int
push
or
aas
dec
inc
call
outsb
pop
jle
pushl
das
ret
icebp
dec
mov
imul
aaa
mov
pop
inc
arpl
cmp
cmp
stos
loope
inc
mov
ss
stos
and
ret
xchg
add
leave
or
shll
pusha
mov
push
or
dec
mov
mov
cs
outsb
pop
xchg
and
stos
jecxz
inc
cmp
into
insb
lret
mov
sub
cmpsb
imul
push
aam
lock
cmpsl
outsl
add
push
push
out
into
pop
dec
mov
mov
and
mov
shlb
fs
lahf
pop
ja
xchg
inc
sub
test
sub
insl
mov
iret
push
xchg
mov
push
pushf
cmp
test
outsb
or
mov
mov
enter
loop
clc
inc
xchg
push
test
out
call
pop
mov
push
repnz
in
dec
adc
or
mov
mov
inc
dec
adc
push
outsl
andb
mov
aam
or
in
stos
cmp
stos
push
mov
vpaddusb
or
and
test
xor
jle
sub
adc
bound
clc
or
orb
rcll
repnz
add
push
pop
sbb
pop
bound
dec
jle
sbb
notb
inc
mov
push
sbb
fisttpll
aaa
decb
movsb
call
fisttps
xor
adc
adc
divb
mov
inc
cld
mov
cs
or
mov
push
sbb
jl
or
sub
stos
push
lods
cmpb
in
push
mov
xchg
lods
push
es
pusha
imul
add
loope
loop
dec
pushl
cmpsb
scas
mov
scas
push
fwait
ds
testl
rorb
push
jae
mov
sub
or
inc
xor
mov
sbb
pop
imul
sub
add
cltd
jbe
rcrb
xor
std
iret
loope
aad
in
xchg
insl
jae
adc
clc
fdiv
dec
adc
or
insb
inc
inc
xchg
pop
sbb
push
sbbl
mov
jp
je
mov
push
mov
push
cli
xor
jb
std
jno
push
xor
std
enter
add
rcr
das
dec
in
sti
xchg
clc
pop
xchg
jo
sarb
mov
xchg
xchg
and
cmpl
mov
xchg
hlt
mov
xor
or
adc
lcall
lcall
iret
sarb
mov
adc
into
push
sbb
aas
ss
ss
ret
dec
loop
mov
ret
gs
pop
into
imul
adc
je
in
push
cmp
fstpl
mov
outsl
push
pop
pop
cmp
test
insl
daa
shr
and
adc
push
std
adc
int3
mov
pop
scas
mov
hlt
cmp
jno
sbb
jl
pop
decl
std
pop
sub
jl
push
inc
jbe
mov
pop
or
sub
faddl
sbb
je
and
cmpsb
sub
mov
rcrb
mov
imul
xchg
jp
push
sarl
pop
dec
lods
fmuls
aas
add
or
push
mov
fwait
push
cmp
xchg
mov
xchg
les
in
xchg
xchg
flds
ljmp
repnz
in
pop
cmp
insb
jnp
jnp
jle
mov
decl
sbb
sub
ficoms
mov
mov
jo
or
lock
sar
dec
loopne
xor
cmpsb
lret
dec
cmp
adc
xchg
mov
add
xor
adc
outsb
mov
dec
mov
cmp
pop
add
loop
fisubs
cmp
cmpsl
adc
mov
repz
aaa
inc
shlb
dec
jl
ret
jge
loop
jbe
jg
test
ds
int3
mov
mov
mov
pop
lods
fmul
mov
outsb
adc
mov
and
xchg
repz
and
cld
inc
enter
adc
sub
pop
inc
cmpsb
inc
mov
fbld
add
cs
sbb
adc
mov
add
push
add
adc
imul
mov
loop
mov
jp
fmull
mov
add
sbb
push
inc
push
ja
fsts
inc
lods
scas
ljmp
xchg
push
inc
xchg
inc
jecxz
add
push
xchg
out
adc
imul
hlt
cwtl
jae
imul
mov
mov
dec
loopne
or
loop
out
push
add
in
fsubl
mov
mov
and
imul
push
pop
push
les
adc
loop
push
cld
add
jbe
xor
xor
push
jb
ret
adc
shrl
add
popf
scas
loop
nop
aam
or
or
pop
xchg
dec
ja
mov
mov
fadds
fmuls
hlt
ja
or
dec
mov
add
sarl
aas
test
shl
cmp
lea
loope
inc
out
xchg
imulb
fstps
into
jmp
push
test
arpl
lcall
push
xchg
jo
mov
out
ds
inc
mov
jle
sub
push
mov
and
mov
sbb
rcll
and
faddp
or
add
in
stos
mov
push
andl
sub
aaa
dec
clc
call
sti
cld
xchg
icebp
push
inc
mov
cld
mov
pushf
mov
mov
push
dec
xorb
aas
andl
jbe
pop
loop
or
pop
push
pushf
adc
ljmp
xchg
cmp
mov
insl
mov
das
leave
mov
xchg
shl
fwait
adc
pop
mov
mov
sub
nop
sbb
ficompl
rorb
lock
nop
inc
rolb
adc
mov
inc
cmp
sub
mov
add
push
aam
sub
test
ss
js
loop
repz
clc
and
xlat
push
out
sub
mov
jp
inc
jmp
leave
adc
inc
add
aam
in
inc
jle
sub
pmaddwd
jmp
push
push
dec
jg
rcl
dec
cmpsb
push
add
stos
xor
pop
xor
sub
rorb
inc
adc
dec
testl
dec
lods
les
mov
inc
xor
lods
mov
in
add
mov
bound
pop
dec
shrb
ja
pop
mov
inc
adc
jo
mov
and
or
cld
push
pop
imul
push
cli
inc
jle
jecxz
xor
aam
pop
xor
ficoms
mov
push
mov
add
xchg
jae
or
loopne
xor
pusha
lods
cmp
es
aam
enter
scas
imul
push
out
xor
ret
aam
mov
mov
push
decl
push
les
adcl
loopne
push
xchg
stos
inc
sub
lret
js
push
dec
stc
inc
pop
aam
aad
sub
stos
out
daa
mov
or
cmp
cld
shrb
jge
mov
pop
mov
mov
rclb
faddp
rcll
xchg
mov
insb
push
pextrw
pop
lcall
out
lods
hlt
inc
mov
loopne
lds
rolb
in
pop
xor
call
and
je
je
mov
sub
inc
in
aas
mov
push
mov
xchg
add
addb
dec
pop
push
mov
test
test
mov
dec
add
lock
out
mov
push
sbb
daa
jo
ja
in
in
push
jp
test
scas
or
stos
mov
xor
mov
xor
sbb
mov
stc
in
jns
popf
pushf
sbb
or
out
adc
insl
add
adc
adc
jp
xchg
aas
sub
fldt
inc
sar
sbb
push
lret
loopne
insb
pop
pop
loopne
repz
loopne
or
std
lods
fs
test
aam
xchg
add
mulb
mov
push
sbb
or
mov
lock
inc
in
add
or
sub
lds
rcr
inc
push
je
inc
xor
dec
stos
mov
mov
cmp
aam
lcall
xor
int3
push
mov
dec
cmpsb
adc
outsb
mov
icebp
loopne
dec
data16
into
xor
jae
loope
xor
cld
enter
imul
test
push
sub
shll
dec
js
divl
aam
dec
xor
mov
jns
fisttpll
repz
test
clc
and
sar
std
clc
mov
leave
jle
adc
bound
mov
xor
mov
mov
imul
jl
push
ja
sbb
xchg
xor
or
jb
lcall
flds
adc
outsl
loopne
lcall
je
subb
push
frstor
mov
enter
incl
popa
xor
pushf
ret
pusha
fdivl
lock
fdivrs
inc
mov
sahf
push
fsubs
clc
popf
adc
inc
and
inc
adc
insb
pusha
push
pop
mov
mov
lds
xchg
ficoml
sbb
ret
and
inc
imul
mov
scas
sbb
mov
inc
xlat
rolb
shrb
rorb
mov
mov
pop
pop
ret
in
cmc
jp
hlt
lock
test
js
pop
mov
mov
inc
or
mov
cmpsl
jno
and
mov
das
jmp
filds
call
adc
subl
aaa
insl
cld
je
loop
and
mov
mov
and
imul
sbb
xorb
negb
mov
jmp
push
inc
movb
push
faddp
or
push
and
cltd
andl
xor
subb
inc
dec
test
popa
mov
mov
testb
dec
outsb
fidivrl
filds
jmp
pop
sarl
lahf
mov
sbb
mov
xor
adc
mov
cmp
sahf
fldl
cmpsb
in
sbb
or
fcmovu
scas
push
cmpsl
scas
mov
cltd
xor
sub
and
jno
lea
mov
push
cli
jle
icebp
xchg
pop
inc
std
add
push
add
mov
stos
mov
ss
sbb
icebp
or
xchg
movsb
or
add
add
out
loop
je
in
sahf
orl
test
xor
lret
pop
aaa
push
xchg
mov
sbb
das
cmpsb
stos
jp
mov
shll
mov
inc
jae
and
loope
adc
cmpsb
sbb
pop
mov
adcl
iret
inc
mov
adc
enter
pushf
call
push
push
and
and
and
pusha
je
mov
ss
out
jb
cmp
imul
mov
dec
xlat
ror
sub
test
mov
push
stos
aad
ljmp
scas
inc
jge
gs
dec
outsl
sub
cmpsl
rorb
cmc
inc
es
sarl
mov
stos
adc
add
adc
ss
xchg
cmp
mov
std
dec
fnsave
jne
push
test
add
inc
add
jmp
pop
xor
rol
dec
sarl
adc
jp
lock
je
cld
mov
std
loop
mov
or
sub
cmp
outsl
fwait
inc
sbb
hlt
nop
or
inc
lock
outsb
insb
add
incl
dec
les
sbb
aad
bound
imul
add
loope
lock
cwtl
aaa
cmpl
dec
jecxz
pop
mov
fsubrs
sub
pop
or
dec
inc
and
adc
lock
or
sahf
mov
rorb
ja
inc
xor
push
push
lods
or
outsb
mov
ret
fiadds
push
repnz
js
and
movsb
mov
push
lahf
enter
jnp,pn
inc
and
hlt
test
popf
sbb
fisubl
push
ret
outsl
xor
sub
mov
pop
lods
sbb
insb
sahf
pop
andb
cmp
sbb
mov
enter
repz
jg
cmp
loopne
sbb
add
xchg
pop
iret
add
into
jecxz
psllq
ljmp
test
xchg
adc
push
push
add
push
das
push
mov
mov
and
test
mov
out
fmuls
mov
mov
mov
lahf
pop
mov
jns
dec
popa
inc
stc
mov
imul
cs
xchg
out
dec
adc
rorb
test
or
jmp
aaa
mov
loopne
jp
mov
push
xchg
js
sub
fstpt
js
xchg
in
cmp
fisubs
jge
lret
sbb
arpl
scas
inc
sub
dec
adc
mov
lods
sbb
dec
or
xchg
push
pop
mov
jg
and
mov
sub
xor
add
sbb
xor
sbb
mov
orl
popf
mov
pop
sbbb
push
ret
cmp
sub
add
add
dec
sub
mov
mov
int
movsb
mov
andl
cmp
mov
push
ss
rol
xchg
cs
sbb
inc
lcall
sbb
test
mov
push
inc
loope
add
pop
scas
push
sbb
jl
jbe
adc
cmp
bound
pop
xor
inc
inc
cmp
movsb
mov
sbb
subb
push
mov
pop
dec
sbb
push
pop
orb
jno
es
add
rclb
mov
jp
icebp
ss
jno
rclb
enter
js
cwtl
mov
jbe
mov
xchg
add
repnz
xchg
pop
js
rclb
inc
imul
cld
cmp
add
fdivr
mov
lds
shlb
dec
mov
inc
les
push
jl
push
ljmp
shr
jle
loop
icebp
push
jge
cmpsl
sbb
comiss
xor
stc
dec
icebp
je
inc
adcb
pop
push
cld
das
sbb
pop
mov
xor
mov
xchg
mov
lret
mov
fldenv
pop
adc
call
pop
fadds
sbb
push
aam
movsl
cmpb
mov
dec
ror
test
out
sbb
je
sbb
mov
mov
xchg
fcmovnu
jge
mov
add
jb
mov
add
ss
clc
add
les
in
xor
aam
mov
push
insl
int
mov
aam
fwait
inc
or
and
out
pop
add
mov
cmp
scas
push
push
sahf
inc
mov
punpckhwd
enter
push
lret
dec
cmp
cmp
xor
imul
and
fimuls
cmp
xlat
leave
or
push
imul
add
inc
fdiv
pusha
mov
adcb
test
mov
add
jb
mov
lock
pop
mov
fwait
cmpsl
imul
repz
ljmp
jne
jl
add
xor
or
inc
shll
jbe
aas
mov
dec
mov
roll
add
mov
outsl
sbb
add
push
stos
add
mov
jg
das
sbb
sub
add
stos
adc
dec
out
adc
pop
mov
imul
pop
adc
loopne
jge
cmpsb
push
xorb
out
xor
ret
mov
dec
mov
add
mov
in
xchg
cwtl
stos
lret
cmpsb
mov
add
shlb
and
orl
jb
sarb
cmp
and
std
xor
int3
cmpsb
add
icebp
shufps
rclb
mov
inc
jl
sub
jle
sbb
sbb
add
inc
sub
inc
dec
sbb
ret
cwtl
inc
iret
jne
pop
mov
orl
and
rol
mull
push
test
dec
add
jbe
sbb
xchg
sbb
sub
dec
lret
mov
dec
test
pop
out
mov
ljmp
mov
xor
lock
cmp
or
mov
cmpsl
in
cmpsb
shll
mov
call
inc
fcoms
in
jle
sub
shll
xor
fisubl
shrb
jp
clc
adc
xchg
push
mov
mov
lea
and
dec
ljmp
lods
jl
popf
std
subb
or
xor
inc
int
xchg
or
inc
inc
mov
cmpl
cmp
sbb
lods
adc
and
adc
pop
popf
addl
stos
stos
mov
push
push
jno
sub
repz
pop
popf
jl,pt
mov
or
hlt
jcxz
popa
ja
or
sub
ret
insb
jge
stc
pop
push
dec
or
jnp
aam
sbb
jnp
in
andl
in
push
shll
int3
cltd
cmp
loope
cs
mov
jb
cmpsb
mov
push
test
cmp
xor
xchg
inc
in
fimuls
enter
push
inc
or
xor
aam
mov
jle
fistl
sbb
lods
scas
lds
stos
push
stos
test
mov
and
imul
xor
int3
and
jns
mov
adc
jmp
push
jecxz
jae
jp
or
jmp
hlt
or
fcmovnbe
inc
aaa
lods
and
push
bnd
aaa
je
xchg
mov
pop
jmp
or
jnp,pt
sbbb
inc
insl
adc
and
fisttpll
pusha
dec
fstpt
andb
leave
add
icebp
cmp
ja
aam
in
adc
dec
jno
lods
out
mov
lret
loope
mov
adc
sbb
add
scas
loope
xor
pop
scas
sub
in
pop
loop
dec
ret
xor
mov
push
jecxz
cmpb
enter
add
ja
push
push
add
out
sub
lock
jae
inc
or
mov
dec
int
loop
loopne
mov
mov
out
gs
add
or
pop
inc
rol
push
adc
loopne
icebp
mov
pop
movsb
into
addb
or
jge
jne
adc
jmp
rorb
addr16
sbb
loope
ror
mov
faddl
jge
pop
iret
sbb
inc
cmp
test
gs
sub
jecxz
ret
loop
scas
inc
and
adc
jo
pop
loop
xor
gs
mov
xor
xchg
or
fwait
and
test
pop
scas
push
xor
orb
sub
out
loopne
in
pop
in
call
mov
jns
dec
pop
push
imul
sub
and
adcl
cmp
jmp
sub
int
adc
div
jl
ljmp
or
sbb
movsb
push
inc
fs
shr
xor
data16
aaa
or
mov
sub
xlat
cmp
daa
xchg
jne
scas
inc
or
push
outsl
mov
mov
cmpl
lcall
sbb
sti
in
dec
out
and
lock
jno
pop
add
cli
jp
sbb
rcrb
mov
push
sub
xchg
adcb
push
add
sub
add
xor
mov
fsubrp
mov
icebp
pop
scas
pop
jp
xchg
adc
pop
in
inc
mov
insb
hlt
cmp
sub
adc
mov
mov
test
xchg
or
xchg
loop
bound
xchg
test
outsl
xchg
cmpsl
lcall
clc
repz
sbb
pop
js
push
out
lret
mov
push
push
cmp
xchg
dec
xlat
dec
ljmp
mov
fwait
fidivl
lahf
inc
add
push
das
fld
dec
test
movsl
movsb
scas
fisubrs
in
or
inc
ss
mov
adc
das
sahf
add
rclb
xor
sub
cmp
jo
aas
popf
std
enter
test
in
sahf
add
addr16
inc
ficompl
or
std
mov
mov
imul
xor
insb
cld
xor
xchg
pop
sbb
hlt
insl
popa
cmpsl
ljmp
mov
lcall
push
out
jle
add
xlat
es
sbb
mov
jno
mov
inc
or
ds
fldl
cmp
ret
cmp
fldt
mov
pop
lret
mov
lds
sub
sub
fiadds
xor
jmp
insl
fs
mov
xor
in
ljmp
jno
daa
sti
or
push
pop
cmp
movsb
lock
pop
mov
dec
inc
sub
sbb
push
in
jne
xor
lahf
adc
mov
cmp
rcr
inc
inc
in
push
out
movsl
lock
dec
xchg
adc
or
nop
movsl
jp
mov
gs
inc
out
fsubrs
jo
lock
aaa
mov
xorb
ror
rclb
dec
out
sub
loopne
cmp
pop
cltd
dec
repz
outsb
xor
in
mov
shl
pop
dec
or
lock
jge
clc
xchg
or
fcmovbe
push
adc
loop
or
iret
xor
mov
sub
add
dec
pop
decl
loopne
sub
adc
es
adc
mov
push
mul
jg
mov
push
jmp
push
xorb
js
je
xor
jbe
jl
clc
xlat
enter
push
icebp
adc
imul
mov
ss
add
pop
jl
xchg
mov
xchg
js
cmp
xchg
maskmovq
divl
xor
xchg
jnp
imul
pop
loop
repz
xor
inc
in
repz
movsl
or
shlb
sbb
out
pusha
xchg
xlat
rcrl
nop
fs
or
push
xchg
mov
jp
dec
dec
mov
sbb
hlt
adc
xor
sbb
leave
add
loopne
cmp
lds
or
push
or
pop
int
jecxz
insb
push
and
ret
mov
lea
push
das
shr
lret
xchg
les
scas
cli
add
inc
gs
mov
lret
cmp
fucomp
push
and
roll
pop
das
scas
jne
mov
mov
sub
stos
fcmovb
pop
movsl
xor
popf
stos
cmp
mov
sbb
daa
fisttpl
push
insb
ret
jns
lock
into
mov
mov
ja
and
movsl
fdiv
cmp
sub
xor
add
xchg
xor
mov
inc
inc
insl
push
in
test
push
sbb
call
btc
sub
data16
dec
rcll
lret
mov
inc
xchg
cltd
jns
out
popl
stos
and
mov
rolb
rclb
jle
adc
push
stc
xor
jae
fs
daa
pushf
pusha
loope
jns
jmp
inc
adc
rcll
lahf
pushf
testl
mov
push
stos
ret
lahf
pop
rorl
je
mov
cmp
or
inc
sub
add
loopne
inc
push
lcall
push
adc
test
mov
loop
mov
fsubl
xchg
push
cmp
fmuls
ret
sbb
inc
push
dec
or
clc
je
dec
rcl
cmp
sbb
icebp
adc
add
icebp
mov
add
cli
add
das
mov
and
mov
out
loop
jno
sub
mov
jge
mov
jnp
xchg
push
add
sbbb
mov
xchg
rolb
sbb
mov
idiv
xor
insb
sbb
fistl
push
js
push
push
ret
sbb
adc
push
je
dec
pop
shll
mov
call
dec
push
filds
xchg
jno
or
ljmp
dec
mov
icebp
rcrl
scas
sub
orb
pusha
push
orb
jne
add
xor
mov
iret
movsb
sub
shlb
js
pop
push
adc
push
mov
clc
adcb
in
mov
cld
mov
scas
add
mov
mov
lret
adc
mov
loopne
lock
sbb
pop
nop
mov
fidivl
mov
inc
es
test
push
orb
test
cmp
repz
xor
or
daa
addb
test
das
clc
dec
loope
fcompl
pusha
jbe
jb
and
mov
cld
mov
mov
shll
repnz
fists
or
lea
xor
mov
mov
mov
lea
icebp
push
js
xor
in
cmp
ja
iret
stos
and
mov
sbbl
inc
rcrl
aas
adc
inc
stc
mov
mov
push
dec
sub
xor
lea
dec
xchg
xchg
push
out
sbb
lods
sbb
decb
inc
js
repnz
push
dec
pop
cli
mov
mov
cmpsb
arpl
enter
dec
popf
lcall
xorb
repnz
clc
push
out
mov
mov
and
push
or
or
mov
call
test
mov
inc
repz
arpl
enter
inc
cli
pop
and
movsb
repnz
hlt
sbb
ficoml
cmc
push
push
decb
xor
aas
jo
xor
dec
jno
shufps
xlat
add
jge
sbb
push
into
inc
iret
jae
rclb
adc
sbb
dec
push
push
lret
ret
inc
je
out
jmp
cmc
and
lcall
lock
cld
pushf
das
std
sbb
dec
mov
ds
out
mov
dec
negl
arpl
push
es
ljmp
rolb
stos
sbbb
frstor
adc
shr
in
xchg
xchg
ret
js
ss
popf
ficomps
mov
movsl
add
mov
scas
sbb
ja
jg
test
and
sbb
push
xor
jmp
test
fildl
hlt
mov
cwtl
and
or
pop
cmp
outsb
pop
cli
cmc
and
push
pop
adc
rolb
xchg
in
xor
inc
xchg
or
jo
aas
fnsave
stos
sub
les
test
sbb
call
outsb
inc
push
pop
mov
push
push
inc
mov
adc
mov
push
hlt
mov
dec
push
add
scas
cmpl
dec
clc
push
add
addr16
pop
sbb
mov
shl
mov
push
ljmp
cmp
push
xchg
clc
movsl
add
idivb
lods
iret
jo
jae
xchg
jb
xchg
test
js
std
sub
pop
dec
jb
out
pop
pop
xor
mov
andb
pop
or
cmp
lcall
cmp
and
lret
add
or
push
fmull
bound
pop
xlat
fisubrl
ljmp
dec
jg
gs
xor
mov
cmpsl
out
cmpsl
cs
mov
dec
lods
pushf
jbe
call
dec
std
sbb
idivb
in
mov
or
mov
jl
add
shrb
cmp
inc
add
add
jmp
cmp
dec
sbb
xor
mov
je
insb
ja
cli
daa
sub
inc
int3
inc
js
dec
xor
pop
pusha
shrb
ljmp
add
jo
push
movsl
mov
scas
addl
mov
incl
pusha
in
xchg
sbb
push
cmp
adc
aaa
faddl
cmp
fisttpl
outsb
jbe
mov
ret
pop
xchg
cli
xchg
jae
and
loopne
sbb
dec
ret
adc
or
xor
adc
adc
inc
shll
cli
sbbl
stos
dec
xor
fsubp
cmp
push
adc
movsl
inc
lods
cmp
or
push
addb
mov
dec
orb
xchg
pop
leave
decl
inc
jno
fidivrs
sub
xchg
fadd
sbb
cmpsb
fdivrl
imul
jno
jbe
mov
push
es
rcrb
sub
jl
sbb
push
mov
mov
ljmp
cli
sub
bound
das
test
mov
cld
test
fisubl
dec
nop
adc
jbe
fidivl
mov
repz
hlt
fldt
jae
push
push
clc
int
ds
mulb
lods
popa
pop
pusha
in
adc
test
std
out
jg
push
cmp
popf
cmpsl
or
sbb
dec
sbb
mov
push
mov
push
xor
or
pop
or
das
sub
js
pusha
fs
xchg
jl
pop
inc
sub
mov
push
clc
cmp
lea
sub
jmp
daa
clc
hlt
lahf
movsb
into
rorl
and
push
mov
fwait
iret
rorb
in
das
mov
mov
cld
pop
adc
call
push
mov
fstl
hlt
mov
xor
pop
pop
test
sbb
pop
loopne
inc
jl
lea
fisttpll
sbb
dec
fcoms
sub
inc
les
sub
pop
idiv
and
in
stos
cmpb
inc
push
ret
xchg
loop
inc
loop
call
test
mov
push
or
and
ss
sbb
lcall
mov
inc
dec
jg
ret
lock
stos
lcall
data16
inc
mov
pusha
in
xor
cld
dec
pop
xor
or
xchg
ret
inc
sub
jl
pop
and
xchg
xor
stos
dec
xor
mov
mov
or
mov
sahf
pop
insb
mov
adc
add
and
clc
int
loope
in
push
nop
adcl
out
pushf
std
dec
cld
das
cmp
popa
cmp
clc
push
movsb
mov
sbbl
sub
push
lods
add
movsl
pop
rolb
aad
icebp
jg
mov
xchg
mov
pushf
pop
ret
dec
lds
cmp
lock
mov
ret
mov
nop
lcall
dec
data16
push
mov
js
add
loop
push
push
xchg
inc
mov
push
mov
incl
enter
mov
shlb
test
add
aad
lahf
dec
or
sbb
fadds
jge
enter
rorl
call
ficompl
fs
test
mov
jo
mov
test
fdivrl
add
push
mov
and
pop
dec
adc
andb
pushf
push
or
cs
jno
aam
inc
clc
or
pushf
add
jp
jge
loope
mov
lods
aaa
sbb
out
adc
rcl
orb
outsb
in
shl
add
sub
inc
and
ret
push
jl
inc
cld
xchg
push
or
lcall
les
scas
int
icebp
xchg
adc
or
filds
outsl
cmpsb
xor
and
shlb
or
jg
jmp
sub
popa
icebp
div
ds
mov
sub
outsl
idivb
ds
mov
sbb
cmpsl
add
push
fdivp
mov
lret
mov
inc
in
lahf
lods
cwtl
adc
shrl
or
mov
add
sbb
jp
aaa
lods
cmp
fs
pushf
inc
pusha
add
adc
andb
lods
xchg
popa
push
enter
cmpsb
lock
decl
jae
xchg
or
push
inc
add
pop
and
pop
cmc
outsl
push
clc
das
sbb
adc
pop
fwait
adc
sti
push
jg
loop
dec
or
les
xchg
add
rorb
or
sub
and
sbb
lock
sti
or
mov
or
dec
mov
mov
js
call
orb
mov
mov
orb
push
bsr
in
jbe
shrl
adc
inc
push
push
mov
mov
aad
mov
cmp
lods
add
sarb
cwtl
mov
mov
mov
push
repz
jl
idivb
add
or
or
rorb
enter
ret
fdivp
xor
sbb
out
xchg
cmp
xor
add
cs
mov
popf
lret
movb
dec
xchg
daa
mov
ret
in
jg
inc
pop
pop
inc
in
ficomps
add
sub
cs
and
std
jb
mov
movsl
lods
bound
je
adc
inc
sahf
incb
out
pushf
dec
mov
or
jo
push
cld
jo
roll
nop
test
scas
sub
push
stos
rcrb
loop
aam
int
and
mov
mov
fdivl
and
cmp
adc
hlt
mov
jle
and
in
test
test
xchg
out
rcrb
jg
mov
mov
xchg
repnz
js
adc
pop
dec
dec
push
pop
and
loop
stos
pop
outsl
or
inc
inc
popl
pop
dec
clc
mov
pushf
into
push
out
jecxz
xchg
xchg
mov
pushf
lcall
and
inc
std
test
jle
in
inc
cmp
lcall
shll
cmp
js
mov
stos
and
cmp
cmpsl
icebp
mov
inc
push
mov
mov
pop
stos
loopne
jne
jp
mov
stc
mov
in
or
push
sub
ds
mov
out
mov
pop
hlt
inc
push
jecxz
sbbb
pop
stos
or
mov
cmp
add
sub
xor
or
inc
out
imul
popa
inc
xchg
in
pop
mov
or
out
in
clc
or
je
dec
inc
sbb
leave
das
push
mov
mov
and
inc
adc
outsb
jg
mov
or
enter
adc
ds
pusha
adc
das
inc
aaa
or
xorb
mov
fadd
and
push
stos
out
push
incl
push
sub
add
mov
mov
imul
std
cmp
inc
xchg
push
adc
outsb
rorb
dec
push
js
leave
dec
sbb
in
paddusb
mov
sbb
std
mov
lcall
pushf
in
and
xlat
into
jo
cmc
cli
inc
shlb
sub
lock
jmp
jnp
xchg
seta
movsb
imull
adc
sub
arpl
insb
push
sbb
cli
push
mov
sbb
stos
mov
cs
mov
rcr
pop
dec
cmp
xchg
sub
mov
cmp
jo
cmpsb
pop
fimull
cmp
test
loope
rcrb
jg
xor
xor
rcll
mov
popa
in
jo
fdivs
push
add
mov
mov
adc
push
or
imul
push
clc
sub
sar
jl
sbb
mov
or
add
xor
cltd
push
or
loop
push
and
jo
sub
aam
jge
stos
add
es
sbb
scas
add
movl
fisttps
sub
rcrb
popf
jo
stos
push
adc
cmp
sti
jno
or
rcr
cmp
adc
inc
into
fs
jo
adc
loopne
scas
ds
and
cmc
push
xchg
in
ljmp
mov
mov
ret
dec
push
sbb
imul
lods
stos
insl
cmpsb
push
pop
js
aaa
xor
cwtl
add
push
roll
dec
inc
cmp
push
xor
jnp
ficompl
lock
out
sub
lock
int
sahf
jo
add
add
sahf
add
jb
pop
lea
mov
fisubrs
jp
test
in
arpl
add
call
stos
js
inc
or
insl
and
xor
loop
pop
test
sbb
push
mov
add
mov
push
xor
pop
js
add
pop
mov
sbb
ja
pop
sub
push
fs
sbbb
xor
aaa
jb
inc
sub
xlat
aas
fidivs
xor
inc
ss
sbb
inc
rol
sub
push
push
subl
inc
xchg
fistl
or
rol
xchg
xchg
xchg
sbb
push
adc
mov
in
sbb
jle
idivl
shll
dec
lods
adc
mov
add
loop
pop
mov
ja
out
jb
ret
mov
inc
ss
and
lret
or
cmpsb
sahf
mov
mov
test
and
icebp
add
lods
outsb
enter
movsb
jne
test
fcmovbe
cmp
push
outsl
jne
push
stos
lock
xor
or
pop
sbb
jge
mov
xchg
andl
cmp
xchg
pop
cmp
push
sbb
arpl
push
les
jecxz
ficoms
dec
ljmp
mov
ljmp
xorl
mov
push
jno
cmpsb
lahf
pop
bound
test
dec
mov
adc
mov
jle
sbb
fidivl
lahf
sub
adc
lods
jle
mov
movq
call
inc
jmp
pop
cli
inc
add
adc
test
and
lcall
push
sbb
pushf
sub
add
cvtpi2ps
mov
sub
xor
ret
cmpsb
shlb
fidivrl
push
mov
sbb
or
inc
inc
fsubr
push
icebp
mov
fadds
sbb
cli
lock
xor
dec
mov
loope
add
push
push
call
cltd
or
test
sub
nop
push
andb
xor
loope
xchg
xor
enter
cli
dec
movsl
subl
test
scas
movl
mov
mov
outsl
cmpsl
mov
push
mov
and
mov
mov
xlat
jp
ret
xchg
mov
cli
dec
cmc
lds
push
pop
mov
loopne
incl
mov
xorl
insb
pusha
mov
and
inc
and
xchg
and
scas
and
add
jmp
sub
cmc
fwait
mov
dec
inc
jmp
imul
fisubrs
add
insl
scas
add
data16
ss
inc
jg
jecxz
xor
fisubl
pusha
sti
pusha
xor
sbb
dec
add
jo
sahf
cs
and
sub
jmp
xchg
stos
hlt
daa
sbb
jecxz
add
sahf
dec
clc
mov
sub
sbb
xchg
inc
xlat
out
cs
hlt
xor
push
lret
std
pop
xor
sub
and
push
test
insb
sbb
cmp
cli
add
rcr
scas
push
xchg
cmp
and
xlat
test
jl
lods
sbb
mov
mov
xchg
push
cmpsl
adc
dec
pop
cli
lock
cli
inc
bnd
jmp
mov
fxtract
insl
xor
xchg
addr16
shl
adc
add
xor
dec
jg
shlb
push
ja
leave
jns,pt
int
pop
and
sti
push
and
out
add
outsb
push
dec
dec
hlt
cmp
push
outsb
xchg
cmpb
stc
ja
adc
enter
mov
cmp
xor
cli
xor
push
and
dec
cld
into
adc
dec
in
imul
fidivrl
ja
leave
lcall
pop
mov
push
std
adc
test
dec
shrb
pushl
or
add
xchg
or
das
aam
adc
push
cwtl
or
jbe
rorb
imul
rorl
xchg
daa
push
lret
adc
inc
cmpsl
sub
or
in
les
data16
sbb
pop
lock
andb
cmp
add
outsb
jl
xchg
sahf
test
mov
shl
xor
or
shlb
mov
ret
dec
adc
inc
adc
fidivs
push
or
mov
xchg
inc
add
insb
adc
in
test
popa
adcb
leave
ficompl
hlt
or
aam
subb
fdivs
mov
pop
lds
stos
das
ret
and
pushf
and
push
xor
sbb
mov
push
lods
adc
mov
or
sbb
sub
in
adc
int3
jbe
mul
sbb
lds
pushf
insl
or
cmp
daa
shr
fidivrl
sbb
push
ds
stos
dec
daa
add
sub
hlt
neg
stos
adc
add
mov
ljmp
add
sub
and
icebp
push
sbb
out
out
ret
scas
push
in
stos
push
clc
cld
scas
push
nopl
loop
dec
mov
in
mov
push
stos
add
popa
in
clc
push
cmpsb
std
jge
test
sub
adc
inc
je
add
xchg
data16
insb
mov
xchg
or
add
sub
push
mov
lcall
enter
adc
jle
xchg
jnp
xor
pop
ss
adc
mov
icebp
push
or
xlat
fbstp
jno
scas
adc
popf
jecxz
xor
jle
mov
sbb
inc
cwtl
nop
push
pop
movsb
push
hlt
aas
mov
addr16
or
push
or
push
aad
mov
test
aam
movb
loopne
push
icebp
push
add
jmp
lds
sbb
pop
cmpsb
faddp
fs
push
hlt
jmp
pusha
std
pop
inc
inc
outsl
loope
data16
add
push
rorl
rolb
push
pop
shr
loopne
faddl
popa
icebp
inc
pop
pop
and
adc
loopne
imul
aaa
insb
js
mov
insb
push
rorb
jmp
lds
xchg
and
shlb
and
jg
inc
xor
mov
shlb
mov
mov
arpl
pop
std
aas
xchg
mov
or
cs
cwtl
das
xchg
int3
pushf
pop
sbbb
add
push
out
scas
vshufps
jg
inc
fwait
leave
mov
sbb
and
pop
call
xor
adc
clc
dec
sbb
or
cmp
pop
cld
sub
pop
inc
dec
xchg
dec
mov
ds
stos
ljmp
pushf
inc
sahf
add
mov
fidivs
and
loop
mov
data16
aaa
mov
inc
xchg
jmp
pusha
push
lahf
mov
scas
cmp
cli
mov
adc
enter
jg
lods
sahf
push
mov
movsb
jmp
clc
fs
in
fmuls
lods
insl
mov
test
sub
mov
rclb
fisubs
mov
enter
lods
mov
outsb
nop
sbb
repz
cmp
mov
test
shlb
mov
call
push
push
xchg
cmc
pusha
pusha
jae
or
or
ds
addr16
ljmp
push
mov
shl
js
xchg
or
fmul
xchg
pop
or
fists
repnz
dec
pusha
lods
je
dec
adc
and
jbe
or
lock
sub
lcall
inc
mov
or
inc
mov
xchg
fadd
lea
push
lahf
lret
clc
dec
repnz
lds
ja
stos
and
xchg
aaa
out
movsl
ret
shlb
out
frstor
loop
and
data16
hlt
cmp
mov
jae
push
mov
xchg
bound
pop
sub
rcrb
loopne
fdivrl
sub
cs
hlt
dec
push
sbb
inc
pop
sti
sub
jg
icebp
xor
or
dec
mov
aam
shlb
inc
es
out
lcall
nop
sbbl
inc
mov
ret
clc
std
push
pop
mov
push
pop
mov
sbb
or
iret
inc
cld
fcoms
dec
aad
lret
lock
ret
test
flds
sbb
hlt
pusha
cli
rolb
add
fcomip
sub
aam
mov
mov
in
and
push
stos
push
cmpsl
lds
mov
xchg
jns
stos
xchg
int
add
and
aam
jge
testl
jg
dec
adc
js
rcrb
adc
sbb
rol
adc
dec
enter
das
pop
daa
adc
mov
jmp
bound
movsb
minps
iret
lods
or
es
sahf
popa
dec
sbb
xchg
sub
cmc
pop
pop
and
orb
mov
fldt
xchg
je
sub
inc
ficoms
aas
pop
push
popf
fsubr
adc
call
out
jae
repz
incb
popa
test
or
sub
xor
xlat
mov
adcl
xchg
sub
xchg
pop
push
das
ret
add
lahf
push
loope
pop
cltd
add
movsl
sbb
das
pop
xchg
mov
sbb
cmp
dec
xchg
sub
sbb
cmp
add
sarb
mov
mov
cld
push
cs
jp
inc
pop
rcrb
jb
pop
stos
pushf
mov
test
repnz
ljmp
or
cmc
imul
pop
xchg
sarl
push
inc
shll
jae
sub
cwtl
or
lods
ret
aam
jle
mov
inc
es
and
or
jmp
dec
call
scas
int3
ret
inc
orl
dec
mov
sub
movsb
inc
sub
je
ret
test
int
cmc
mov
imul
sbb
out
loop
lds
pop
adc
xor
ret
nop
fstpt
sub
lcall
pop
rol
lods
push
dec
push
jo
xchg
outsl
jecxz
and
pushl
cltd
loopne
repnz
test
enter
pop
sub
test
add
sub
ja
fisubrs
xor
int
mov
xchg
or
in
shrb
insl
jmp
sub
add
push
sbb
sar
mov
dec
aaa
or
addb
cmp
add
js
adc
adc
scas
push
iret
inc
scas
testl
mov
fdivr
rcll
cld
sub
jne
adc
es
mov
insl
and
mov
ficoml
hlt
leave
sbb
pop
fwait
incl
jge
xchg
bound
push
cmc
scas
imul
in
xor
ja
jmp
inc
adc
imul
xor
mov
add
pop
mov
stos
push
fcos
call
cmp
mov
aam
pop
rolb
add
inc
lret
xor
lahf
add
or
outsl
sbb
dec
lock
mov
clc
lods
xor
pop
push
adc
out
mov
imul
std
pushf
or
ljmp
fildl
insb
cmp
and
cmp
push
sti
and
mov
jmp
fstps
imul
jno
mov
mov
ficomps
arpl
jp
jge
fs
dec
cltd
clc
fisttpll
incl
out
leave
jo
jecxz
dec
test
xchg
mov
lcall
movsb
shll
push
inc
pop
jns
lock
xor
cmpsb
xor
push
ret
cmc
cltd
pop
jp
mov
outsl
add
add
dec
jo
mov
add
ret
dec
into
pushf
and
push
dec
cmc
aas
cmc
xor
jbe
imul
ja
sarb
lods
out
sub
mov
cmp
mov
dec
icebp
jbe
je
inc
cmpsb
insb
push
pusha
pop
add
mov
jg
mov
mov
test
enter
xor
push
lahf
xchg
and
mov
add
mov
push
je
mov
aad
mov
jp
xchg
mov
xor
out
mov
loop
mov
cmp
push
inc
stos
out
or
and
add
lods
sub
adc
push
icebp
imul
ficoml
mov
and
fistpl
jg
leave
xchg
mov
cmpsb
arpl
dec
mul
adc
add
ss
sub
fldenv
push
mov
push
and
addb
lock
fisubrl
call
adc
rorl
mov
or
xchg
pop
push
dec
or
inc
inc
rorb
jb
ds
pop
cmp
enter
pop
fs
ds
add
cmc
cwtl
or
out
pop
push
mov
pop
sti
xchg
xor
in
mov
xchg
mov
iret
dec
mov
jmp
inc
sti
fistpl
nopl
lahf
loop
test
mov
mov
stc
add
dec
imul
roll
sarb
push
jo
mov
xchg
add
outsb
cli
mov
and
pop
jle
jmp
push
xlat
mov
or
fisttpl
push
or
call
pop
ja
push
lds
jmp
mov
mov
icebp
out
dec
jo
insb
push
sahf
push
iret
and
pop
adc
sub
out
pop
xlat
mov
out
nop
fcoms
loope
pop
sub
cmc
loopne
mov
mov
add
fidivs
cwtl
mov
ret
add
sarb
fists
dec
inc
insl
lret
outsb
mov
daa
sbbb
jecxz
inc
pop
gs
movsb
or
push
js
and
push
pop
pop
sbb
push
in
nop
pop
sbb
dec
push
not
pop
push
xlat
mov
pusha
jmp
pop
subl
xchg
mov
arpl
lcall
aaa
pusha
cwtl
push
div
or
add
rcll
rol
into
std
jmp
es
and
aas
sbb
outsb
xor
jle
cmpsb
stos
or
lret
adc
js
ds
cmp
ljmp
sbb
pop
leave
mov
push
call
sbb
pushf
jns
mov
fmull
insl
xlat
mov
jge
pop
mov
faddl
repnz
push
pop
mov
jmp
loop
and
lods
hlt
das
pop
rcl
js
je
xchg
lret
lret
call
into
add
vxorps
clc
mov
add
push
jo
scas
aam
stos
cmc
dec
or
mov
ret
xor
dec
xor
pop
inc
inc
addr16
shrd
aam
aaa
push
cwtl
sbb
and
add
mov
inc
cmp
add
jne
fdivrl
pusha
rolb
and
decb
stc
lret
xchg
jno
or
popa
test
lcall
cmp
lret
cmp
test
loop
cmp
cld
adcb
mov
or
scas
int3
aam
fstpt
adc
outsb
jmp
xchg
outsb
inc
into
loope
inc
cmp
shlb
nop
fs
rcrl
out
movsb
gs
aad
les
jno
jecxz
int3
dec
cmp
cmc
clc
movsl
jp
mov
sub
cwtl
dec
xchg
push
mov
dec
inc
lock
sbb
jecxz
jo
fcmovnu
mov
sub
push
push
xchg
mov
rcl
push
pop
xchg
call
gs
jo
xor
jmp
test
lods
sbb
nop
sub
je
arpl
je
jo
xor
std
les
shlb
in
xor
stc
js
test
ja
push
adc
dec
jl
shlb
pop
scas
jp
hlt
push
sub
add
cs
pop
push
and
lahf
or
mov
pop
xor
and
pop
mov
xor
inc
repz
pop
adc
in
mov
pop
or
xchg
mov
xchg
xchg
cwtl
jae
sbb
fimull
sbb
and
cwtl
addr16
cmp
jge
and
xchg
jae
or
in
pop
fisubl
ja
dec
xchg
ret
sub
pop
xchg
int
nop
pusha
cmp
inc
les
ds
xchg
daa
jecxz
sbb
test
inc
jg
and
jns
pop
js
mov
out
icebp
daa
rcr
mov
shlb
nop
sbb
sahf
fidivl
test
int3
ja
int3
nop
mov
test
test
stos
leave
insl
xorl
nop
mov
and
or
adc
dec
fstl
rol
es
lock
aam
and
rcrb
lcall
push
xchg
and
sbb
outsb
or
pop
mov
cs
jmp
sbb
jmp
jne
test
test
pusha
push
xlat
into
aad
mov
cmp
or
cmpsl
in
call
push
add
add
mov
in
test
lcall
sbb
pop
push
push
pop
push
dec
mov
pop
fs
cwtl
popa
mov
inc
andb
sarl
imul
lock
dec
int3
or
loope
js
push
mov
leave
mov
out
sub
pop
cmp
xlat
jg
push
xchg
scas
mov
jb
and
scas
sub
cli
pop
inc
dec
dec
sti
mov
stos
mov
mov
pop
lea
dec
ror
mov
js
inc
test
clc
mov
add
or
aam
or
sub
ds
fcmovnbe
or
daa
mov
push
xchg
inc
adc
cmp
jo
or
or
mov
test
loop
sbbl
popa
gs
and
sub
test
cmp
jae
fwait
arpl
sub
fsts
jg
fnstenv
or
mov
lret
pop
push
pop
icebp
pop
or
rorl
xchg
xor
imul
xchg
sahf
push
in
repnz
jp
hlt
sbb
fstpt
lock
aam
cmp
push
in
push
jnp
push
pop
icebp
ds
sbb
sub
mov
push
cli
je
push
push
loop
mov
scas
push
imul
cmpsl
jns
mov
mov
sub
rorb
es
add
pop
mov
inc
mov
fs
mov
or
loop
loope
add
jg
xor
loop
push
or
xchg
xchg
mov
mov
stos
pop
cli
mov
dec
push
bound
jge
test
scas
addr16
mov
faddl
xlat
xchg
sub
cmp
jmp
nop
xlat
test
mov
imul
test
fistl
adc
sti
pop
scas
cs
sbb
mov
push
in
cmp
pop
xchg
mov
rclb
addl
testb
push
or
dec
dec
add
outsl
pop
testb
faddp
cmp
rcll
dec
adcl
mull
mov
js
ficoms
in
in
sub
movsb
ret
lret
mov
sbb
lds
fwait
lahf
mov
and
push
jge
xlat
inc
dec
pusha
rol
daa
lods
pop
mov
je
xchg
dec
xchg
hlt
dec
sbb
push
lret
mov
sbb
leave
je
icebp
fiadds
mov
xchg
inc
pushl
xchg
mov
shrl
cmp
ret
mov
test
sti
push
and
jmp
pop
pushl
push
xchg
push
push
sti
rcl
dec
pop
out
pushf
or
mov
loop
lods
pop
std
mov
xchg
ljmp
out
in
roll
sar
jae
mov
dec
iret
dec
adc
outsb
addr16
loope
pusha
or
add
mov
or
adc
add
movsl
jmp
inc
lea
arpl
cmp
loope
ret
stos
lret
aad
pop
jg
adc
dec
hlt
sub
sbb
jp
pushl
cltd
cmp
repz
call
xchg
and
push
push
and
push
pop
mov
arpl
cmp
push
orl
add
adc
fwait
add
rclb
or
cli
test
add
enter
push
pop
xor
loopne
sbb
dec
inc
jno
sub
test
mov
in
mov
push
shrb
sbb
dec
setp
lods
mov
sub
mov
add
adc
mov
jbe
pop
push
cltd
pop
in
psubusw
sub
into
popa
mov
or
jbe
nop
movsb
repz
jle
rorl
push
inc
add
add
jmp
aas
mov
sbb
ret
data16
push
jae
inc
mov
faddl
lahf
or
push
in
out
setne
testl
cltd
add
adc
test
insb
sbb
sahf
sarl
sub
in
repnz
lds
dec
inc
xchg
mov
jbe
sub
push
cmpb
or
cwtl
arpl
push
cmc
pop
xor
push
pop
dec
stos
sub
jno
icebp
ds
testl
fstpt
push
lods
imul
stos
insb
xor
mov
add
cmovge
mov
xchg
mov
dec
push
stos
test
xlat
lds
add
mov
stos
mov
nop
inc
fbstp
mov
mov
das
mov
or
or
divb
jbe
stc
mov
addb
std
clc
add
rol
jae
sub
inc
sbb
add
call
ret
mov
iret
adc
adc
xchg
add
xchg
scas
jb
cmp
dec
adc
scas
xchg
sbb
push
ljmp
out
add
and
cmp
pop
jg
or
lds
cltd
or
stc
jl
pop
and
pop
andl
pop
xchg
addl
jno
das
push
and
sbb
push
adc
ja
pop
sub
push
push
push
add
addr16
jo
mov
jecxz
fwait
xchg
mov
iret
add
je
jle
jo
das
jmp
inc
and
inc
imul
rcrb
shlb
mov
xchg
mov
lret
cmp
mov
adc
lds
hlt
xchg
ret
mov
pop
push
lea
mov
test
clc
cwtl
fisubrs
xchg
inc
and
pop
jae
and
mov
loope
aad
mov
mov
data16
dec
mov
adc
insb
push
cmp
mov
pop
pop
test
adc
fadd
add
imulb
clc
xchg
or
push
mov
rorb
hlt
ja
shlb
insl
pusha
sarl
out
movsb
cmpsb
mov
add
fwait
nop
push
adc
lahf
inc
mull
imul
dec
lahf
jnp
adc
andb
in
pop
orl
rcll
push
cmpsl
adc
sbb
outsl
jmp
loopne
cld
jmp
inc
std
inc
xchg
rclb
push
push
dec
inc
mov
dec
sub
aam
stos
repz
aad
outsb
inc
inc
dec
sti
push
std
sti
add
leave
ret
and
xor
add
add
sub
mov
jge
sub
aaa
xchg
jb
inc
mov
inc
out
ljmp
ficompl
push
push
add
inc
push
pushl
push
xchg
lea
or
leave
ret
inc
rcrl
fiadds
clc
mov
dec
add
lcall
jo
mov
dec
pushf
xchg
cmpsl
sub
jecxz
push
xchg
daa
push
and
add
clc
in
fstl
dec
lea
pushf
fbstp
testb
out
fdivrs
push
push
jno
inc
fs
in
mov
mov
push
mov
sub
sub
inc
ret
cmp
ror
fdivs
dec
push
into
dec
add
adc
fisttpl
mov
push
xor
add
push
mov
cmp
arpl
adc
int
aad
dec
mov
icebp
mov
dec
xor
into
cmpsb
xor
cmp
aaa
push
je
mov
push
push
or
movl
sub
jo
fs
add
add
xchg
mov
sbb
out
pop
xchg
test
testb
cwtl
xchg
add
aaa
ret
fstl
fs
stos
fldl
shrb
push
xor
gs
push
push
dec
or
sub
add
push
movsb
or
sub
push
push
or
outsl
xchg
add
dec
cli
mov
inc
add
in
loopne
jnp
sbb
mov
pushf
sti
jne
gs
lds
dec
dec
dec
scas
bound
sub
icebp
mov
clc
add
xor
jne
dec
dec
adc
xor
inc
mov
test
inc
and
inc
fimuls
cli
je
fisubs
xor
dec
xchg
ret
mov
or
popa
fadds
jns
push
jno
lock
fiaddl
cwtl
lret
jp
jecxz
or
call
outsb
data16
ja
movsb
fadds
ud0
inc
stos
iret
xor
dec
std
push
mov
inc
pop
pusha
dec
rclb
add
push
lea
push
pop
cld
and
xchg
push
xor
jnp
int3
pop
fadds
mov
cmp
dec
jb
dec
mov
movsb
jno
sbb
lock
inc
mov
dec
push
jne
mov
push
mov
jmp
outsb
pusha
jnp
inc
dec
jne
or
outsl
and
ret
aas
hlt
sbb
xor
cmp
outsb
das
push
popa
dec
jne
pop
dec
mov
jp
cmpb
or
add
loopne
fs
xor
jnp
rol
sbb
push
push
dec
xor
idivb
std
shll
pop
add
aam
add
int
inc
scas
cmp
lret
mov
jb
je
inc
xchg
fsubr
fs
xor
les
shll
adc
jmp
push
dec
fs
jo
xor
cli
cld
push
push
jmp
iret
pop
mov
shlb
push
mov
mov
push
dec
inc
repnz
sub
add
pushf
fs
mov
dec
xor
outsl
pusha
cwtl
js
cli
xor
xchg
or
test
cmp
outsl
sbb
adc
dec
clc
adc
push
mov
inc
xor
dec
icebp
pop
mov
and
jne
add
cmp
fiadds
out
rcrl
push
js
cmp
fdivr
add
cmp
stos
pop
sub
cmp
mov
sub
ficompl
inc
push
cmp
or
in
dec
cmp
lcall
scas
mov
sbb
daa
arpl
jmp
inc
dec
dec
pushl
ss
fidivrl
fisubrs
sar
pop
lock
inc
je
pop
jbe
fisttpll
pop
mov
pop
fiaddl
fldt
into
cli
je
inc
and
mov
mov
popf
nop
int3
jne
fistps
add
push
inc
mov
gs
dec
and
dec
jo
insl
push
cmp
sub
dec
movsb
out
push
cld
sub
add
rorb
inc
push
sub
test
and
dec
xchg
aad
repnz
sbb
pop
fchs
adc
inc
xor
shl
cli
jbe
imul
xchg
pop
add
lock
add
lock
xor
imul
add
mov
aam
or
ja
inc
popf
addb
es
mov
aaa
push
inc
inc
sub
clc
sbbb
sub
or
clc
cmp
add
xor
add
push
rolb
xor
push
push
jl
and
in
push
xchg
fs
clc
ja
inc
ss
sub
fstpl
push
dec
add
ss
jb
rolb
mov
je
jns
leave
mov
add
add
shlb
xchg
aad
loop
add
and
push
imul
jbe
inc
ja
mov
dec
pop
inc
ja
lock
jb
outsb
adc
push
xchg
hlt
jle
bnd
xchg
mov
adc
cld
mov
ja
inc
or
cmp
add
jl
inc
dec
repnz
ja
push
insb
cmp
nop
add
lcall
inc
dec
xchg
ljmp
push
cmpb
and
mov
cmpsl
mov
push
xor
sahf
shlb
inc
mov
sub
inc
lods
sbb
fsubl
cmp
xor
inc
outsb
add
inc
cmp
stos
fdiv
xchg
leave
icebp
sub
jle
xor
inc
pop
in
mov
sub
xor
lock
ds
mov
mov
push
movups
push
cli
ret
loopne
test
pop
inc
jns
or
cmp
in
into
movzbl
std
mov
lea
push
hlt
jo
outsl
push
popf
in
mov
sub
aas
mov
dec
lret
notl
ror
xor
push
aam
shl
xchg
jl
mov
dec
xchg
in
jns
mov
inc
push
xor
push
jns
sbb
je
clc
ljmp
decl
pushl
shl
test
or
es
call
pop
push
mov
clc
inc
icebp
and
mov
push
ja
imul
push
push
dec
into
xchg
inc
mov
cmp
or
dec
sti
mov
adc
add
ret
aaa
js
mov
out
jae
push
inc
xchg
inc
popa
in
cs
push
test
push
push
xlat
dec
sbb
iret
dec
mov
or
dec
call
pusha
adc
loop
sbb
rcll
inc
mov
inc
rcll
sub
lahf
adc
push
or
pop
idivb
push
lock
xor
outsl
sub
inc
inc
arpl
inc
aaa
nop
xor
fcoml
cs
xchg
icebp
outsl
push
jp
ja
mov
dec
cmp
xor
enter
ret
adc
scas
jge
lcall
mov
cltd
jg
add
rorb
pop
shll
and
mov
loopne
inc
inc
adc
js
dec
mov
rclb
loope
hlt
in
stc
fwait
sbb
dec
xchg
or
insb
addr16
pop
cmp
mov
dec
mov
arpl
push
xchg
std
je
je
das
adcl
xor
push
outsb
dec
aam
orb
insb
xor
test
dec
add
adc
xlat
cld
repz
shll
mov
push
jb
inc
ja
inc
pusha
mov
dec
push
xor
adc
mov
cmp
lods
jmp
dec
outsl
dec
inc
arpl
cmp
cli
mov
add
and
push
xor
fildl
jmp
or
icebp
fidivrs
or
lahf
outsb
test
dec
pop
xlat
xorb
mov
cli
gs
rolb
pop
inc
dec
xchg
or
notl
inc
int
dec
inc
popa
sub
inc
push
scas
int
push
push
push
arpl
aaa
jnp
loope
or
inc
sub
inc
xor
loope
jle
inc
imul
mov
mov
ret
push
bound
push
jne
out
imul
pop
js
jo
sub
cld
dec
repnz
inc
jl
div
daa
fsubrl
mov
popa
jbe
push
dec
jo
pop
push
adcb
add
push
fs
sbb
mov
mov
pop
out
mov
inc
ja
ret
push
add
jno
insl
adc
gs
mov
push
adc
mov
lahf
push
orl
inc
jmp
mov
test
push
xor
xor
shl
mov
pop
popa
pop
push
add
rcrl
sbb
loopne
out
clc
insb
scas
jl
es
andb
sbb
or
jg
mov
aam
push
push
dec
arpl
pop
cmp
test
xchg
cmpsb
enter
pop
dec
add
test
into
rorl
or
mov
je
add
adc
jo
adc
mov
stos
lret
add
cmp
xor
pop
rorl
ljmp
mov
cli
outsl
and
jge
in
and
mov
push
ja
loopne
and
xor
setb
lds
hlt
xchg
push
lret
je
call
jns
xor
push
dec
cmc
repz
fdivr
fildll
inc
add
mov
xor
rcl
in
sub
xlat
adc
int3
push
jp
xchg
insl
jns
cltd
mov
in
pop
mov
jmp
mov
js
outsl
bound
ret
add
inc
ds
adc
in
sbb
cmpl
xor
dec
int3
sti
or
jmp
test
inc
pop
rcrb
js
adc
sbb
clc
or
dec
shr
xor
outsb
push
and
lahf
adc
sub
pop
and
fs
aaa
lea
mov
xchg
ret
adc
mov
dec
dec
je
dec
xor
mov
call
into
rorl
stc
icebp
push
cmp
out
push
testl
add
aam
fidivl
loop
mov
mov
xchg
dec
cmpsl
out
mov
leave
jo
jp
pushf
loope
or
sbb
test
pop
mov
and
or
les
lret
and
out
sbb
jo
pop
cs
ja
stos
jg
loope
decl
jp
push
mov
dec
adc
push
push
out
pusha
testb
pop
push
push
cld
bound
clc
pop
ss
out
test
push
dec
es
mov
inc
xlat
or
clc
es
ja
xor
adc
cmc
mov
inc
ss
pop
ljmp
adc
scas
mov
lea
push
push
sub
sarl
push
lods
lcall
loop
xchg
cmp
pushf
jbe
test
outsl
jb
cmp
cld
inc
lret
enter
xor
test
cli
mov
inc
clc
inc
pop
andl
dec
jo
mov
pusha
out
xor
sub
iret
js
lods
dec
xor
add
dec
hlt
jle
les
jno
pop
cwtl
jmp
incb
fs
cmp
pop
mov
inc
lock
jb
jo
inc
pusha
jns
mov
push
xor
pop
out
iret
inc
fiaddl
sub
popa
arpl
mov
cmovl
push
push
mov
cmp
mov
rcll
hlt
mov
jno
jb
dec
push
inc
mov
dec
fmuls
test
bound
inc
into
insb
jno
add
loopne
push
into
iret
cmp
push
dec
pop
xchg
mov
inc
addr16
pop
dec
in
push
and
daa
pushf
scas
sahf
jno
ss
cmc
lret
mov
imul
call
addr16
clc
jbe
fimuls
dec
mov
addb
jmp
enter
pop
pop
add
inc
addr16
xchg
insb
inc
fisubrs
sbb
clc
push
aaa
ficompl
push
pop
insl
push
jo
sbb
dec
add
icebp
xor
sahf
aaa
stos
lock
orb
addr16
shlb
push
xor
clc
add
xchg
lret
popa
push
aaa
je
or
mov
push
inc
xor
loope
mov
push
jne
jmp
and
xchg
xor
pop
mov
dec
mov
call
pushl
call
imul
dec
xor
inc
push
push
rcl
in
push
pop
push
negb
mov
xor
push
inc
sbb
xchg
xchg
or
out
les
pushl
jge
lods
xor
data16
sub
pop
dec
dec
es
imul
push
test
clc
xchg
test
fdivrl
xchg
push
dec
sub
fadds
mov
pop
cli
dec
inc
lret
lock
scas
jl
mov
or
mov
dec
gs
test
lock
in
sub
jns
clts
push
ss
and
dec
add
mov
add
xor
fcom
data16
sub
ret
jae
push
mov
dec
jle
scas
dec
adcb
lea
xorb
mov
into
mov
pop
insb
jbe
xor
enter
mov
and
push
push
cld
rorb
call
loop
push
or
and
add
imul
mov
cmp
js
add
imul
je
inc
add
xor
fdiv
mov
xchg
stc
cwtl
ret
push
jo
cmp
adc
push
rcl
fidivl
add
or
push
add
in
push
daa
mulb
aas
add
inc
push
dec
mov
lock
dec
inc
xchg
inc
add
inc
ss
mov
out
ret
and
int3
bound
push
popa
cli
mov
es
add
stos
out
or
insl
insl
insb
sub
pop
enter
gs
mov
aaa
call
push
jno
jne
push
jno
sub
into
div
loope
mov
add
sub
mov
test
cmpb
iret
sub
push
ret
popa
xor
int3
inc
push
ja
arpl
dec
mov
push
outsb
fdiv
sbb
outsb
xor
cwtl
pushf
sub
xor
sbb
outsl
xlat
inc
dec
imul
and
testl
aam
xor
mov
mov
ja
mov
sub
outsl
inc
insb
dec
and
push
xor
mov
into
jo
cmp
jmp
inc
ficoms
jg
sahf
imul
push
jae
fstl
in
imul
insb
std
js
xlat
insb
sahf
sahf
sbb
rorb
adc
pop
ss
dec
je
inc
test
dec
mov
jns
sbb
xor
je
xchg
insb
or
pop
mov
inc
push
imul
lock
aam
or
push
push
pop
inc
and
mov
leave
popa
ret
fldt
repz
cmp
loop
outsl
or
jg
inc
xlat
xchg
cmp
push
shr
popa
mov
iret
ss
mov
dec
call
divl
pop
call
jns
sbb
mov
adc
xor
jnp
or
cwtl
insb
xor
push
dec
xor
jno
and
dec
test
repnz
push
ja
inc
dec
sub
daa
xor
jp
lret
xchg
fidivl
inc
movsb
cld
bound
pop
pop
xchg
or
ficomps
fnstcw
jno
sbb
push
imul
js
outsl
scas
push
jnp
sub
std
push
ss
add
into
and
pop
ljmp
push
cwtl
hlt
pop
stos
sub
pushf
pop
imul
ret
jo
enter
mov
addr16
in
hlt
xchg
js
add
shll
jle
xor
inc
call
push
cwtl
jns
call
push
orl
jb
repnz
and
mov
loope
mov
lds
xor
loop
sub
pop
sub
lret
mov
cs
jg
xor
pushf
or
dec
flds
shll
test
aas
in
add
dec
mov
fistps
movsl
push
mov
loope
pop
jl
xchg
xor
push
icebp
sbb
test
sti
or
loop
bound
sahf
in
ret
xor
pop
aas
cmp
mov
outsl
sbb
sub
rolb
sub
call
xor
ds
push
loope
or
lods
push
pop
push
push
insb
push
jns
add
add
jg
or
dec
mov
gs
aad
int
into
lock
je
ja
enter
jg
insb
inc
xor
jae
push
inc
sbb
dec
jno
data16
cmp
fstl
inc
dec
cmpsb
push
rclb
inc
dec
jmp
push
pop
ret
inc
das
dec
dec
loope
lret
jno
cmp
cmp
push
mov
dec
push
clc
push
rorl
clc
mov
sbb
arpl
add
jmp
add
or
add
negb
mov
inc
xorb
arpl
cmp
and
cmp
xor
shll
jl
scas
xor
inc
lock
sbb
adc
aaa
insl
push
xchg
lcall
jns
dec
inc
imul
jle
mov
movsb
enter
mov
jp
dec
pop
icebp
fisttpl
push
dec
mov
mov
invd
incb
inc
dec
push
mov
insb
fwait
in
inc
mov
push
jecxz
cli
int
repz
mov
inc
push
inc
mov
pop
sbb
pop
stc
loopne
clc
out
mov
mov
mov
mov
ret
push
push
inc
or
movsb
cvttps2pi
dec
ss
decl
rorb
pop
mov
push
les
push
fimull
gs
fucompp
pop
stc
mov
fs
mov
dec
out
in
xlat
mov
cmpb
cld
loopne
mov
jp
mov
ret
insb
imul
jne
add
decl
add
jnp
cmpl
loope
popf
pusha
inc
movsb
add
sbb
mov
into
sbb
cmpsl
or
out
jbe
cmc
sub
outsl
xor
xor
in
stos
cmpsl
jno
ror
mov
inc
inc
leave
add
clc
sub
test
stos
jne
test
xor
aaa
je
dec
mov
cmp
popf
xlat
jg
lock
sub
insb
inc
push
pop
sahf
out
imul
jle
lock
repnz
dec
nop
lret
in
sub
inc
dec
lods
dec
xchg
push
jg
pop
xor
inc
sbb
fdivs
dec
mov
jp
ja
push
push
dec
xor
xchg
jnp
pusha
xchg
sub
pop
mov
lcall
lret
scas
jg
faddp
push
mov
sub
fs
dec
jb
movb
fstps
js
dec
mov
fdivrl
lods
jecxz
mov
push
imul
mov
loopne
mov
xorb
sbb
arpl
lret
dec
pop
push
je
cld
es
int3
sub
inc
pop
adc
js
test
addb
pop
mov
mov
lcall
shlb
inc
mov
fadds
ret
add
jge
cmp
je
dec
push
push
aas
push
clc
add
sub
decb
out
or
call
incl
add
scas
push
sub
lds
fcomi
daa
dec
pop
fsubrs
cltd
lahf
xor
outsb
mov
shlb
cwtl
and
xchg
inc
mov
mov
xor
insb
mov
addb
push
cmp
push
push
call
push
push
pop
xchg
lahf
pusha
or
jmp
test
test
inc
mov
dec
push
sbbb
cmp
lret
pop
jns
ss
lock
ljmp
in
push
ss
testl
lcall
movsb
mov
iret
jp
push
popf
pushf
test
push
testl
js
adc
mov
loop
push
rcll
inc
sub
sub
pop
mov
fwait
mov
push
jns
mov
cmpsb
call
fdivrl
inc
inc
add
sbb
outsl
or
jns
dec
cwtl
dec
aam
stos
in
sbb
cmp
jns
rolb
not
push
pop
fstpl
insl
push
jb
push
arpl
in
pusha
hlt
push
adc
mov
cmpsl
mov
test
imul
inc
jne
cs
jl
rcll
js
sti
addl
pushf
stos
push
mov
xor
lret
push
mov
pop
inc
xor
ljmp
loopne
push
and
xchg
push
inc
add
outsl
push
clc
lds
push
loopne
mov
dec
movb
shrb
jbe
test
test
sub
fwait
dec
frstor
jno
stos
push
push
mov
pop
test
mov
sbb
inc
out
fs
pop
sub
xor
insb
push
jbe
xor
testb
call
mov
test
push
adc
dec
outsb
or
and
mov
xor
push
dec
js
pop
inc
jo
aaa
push
inc
cli
aaa
outsb
jae
popa
jp
out
mov
jns
fwait
push
push
cld
js
sub
outsb
jmp
adc
inc
mov
push
gs
fldenv
bound
push
push
je
push
cmp
cmp
jne
pop
sub
mov
jo
inc
and
push
add
adc
fiaddl
addr16
dec
jns
or
push
cmc
cli
aaa
cmp
sti
out
outsl
inc
mov
xor
dec
in
mul
mov
and
mov
divb
sbb
cmp
inc
outsl
notl
popf
pushf
mov
mov
push
popf
pop
test
push
test
dec
or
int
stos
int3
inc
dec
fadd
push
or
clc
dec
cld
ficoml
push
jbe
jns
jb
and
adc
mov
or
mov
push
lcall
jbe
das
jp
inc
hlt
lods
inc
dec
dec
stos
mov
jns
test
test
in
inc
dec
mov
dec
inc
adc
jecxz
cmp
xchg
xchg
jnp
test
cmp
xchg
or
cmpb
xor
push
int
das
out
fs
inc
inc
inc
jae
ds
mov
jne
xorl
int
scas
or
xchg
out
xor
pushf
pop
aas
adc
push
sahf
outsb
cmpsb
mov
popa
hlt
outsl
inc
mov
ds
add
xchg
dec
inc
xchg
pop
das
orb
push
pusha
mov
push
pusha
push
mov
decb
ja
pop
cs
push
ljmp
scas
cld
sub
lock
cltd
das
lods
jmp
mov
mov
add
xchg
jb
insb
pop
pop
stos
jo
mov
cli
jmp
push
test
inc
jb
xchg
aad
xchg
xchg
xorb
adc
int3
add
jmp
aaa
clc
call
aam
fst
inc
js
push
popf
add
push
fsubrs
clc
adc
enter
xor
loopne
das
mov
or
outsl
jno
pop
loopne
mov
pop
test
outsl
inc
dec
out
aas
bnd
add
movsb
jle
aad
mov
cs
mov
dec
pop
aaa
cwtl
sahf
mov
hlt
and
inc
xor
adc
inc
div
rclb
jns
push
push
dec
jne
mov
lcall
imul
inc
and
shll
xor
xchg
stos
mov
lods
mov
inc
jb
xor
push
dec
js
std
add
mov
mov
in
jno
mov
push
sub
xor
jp
adc
xor
adc
dec
pusha
clc
out
or
shll
push
cmpsl
test
pop
mov
lret
dec
lock
push
or
dec
aam
arpl
insb
ret
addr16
hlt
shll
rcrb
pop
and
test
sub
push
pop
cmc
or
shlb
jmp
xor
push
movsb
and
popa
insl
jle
push
imul
dec
inc
ljmp
push
xor
jbe
sub
dec
push
enter
ja
push
inc
dec
rcl
dec
js
lock
mov
lahf
jae
imul
shrb
inc
js
int
sbb
call
fstl
push
xchg
xor
das
xchg
xor
xchg
shrl
icebp
xchg
inc
jo
icebp
loope
cmpsl
out
dec
inc
pusha
mov
adc
push
xchg
dec
andl
pop
aas
or
iret
movl
data16
inc
movsb
and
ja
xor
inc
jbe
mov
push
lock
jno
mov
or
jno
mov
cld
pop
pop
jle
mov
or
js
jo
xchg
ss
ljmp
testb
jb
inc
inc
dec
jne
xchg
scas
push
ds
addl
dec
ljmp
lods
xchg
inc
fistps
push
inc
sahf
test
je
stos
jno
inc
xor
add
push
adc
fisubl
xor
roll
mov
std
add
mov
bound
fs
pop
push
sarl
xor
jb
cmc
and
mov
lock
cmp
sub
add
push
sar
and
ss
cmp
cmp
subb
add
jl
jbe
push
ja
imul
xlat
cmpsl
push
lret
cmp
mov
adc
sbbl
and
int3
mov
xor
js
mov
dec
xor
sbb
cmpsl
add
lcall
inc
ja
jmp
mov
xor
je
add
sbb
outsb
push
aaa
daa
lock
jo
add
enter
inc
cmp
dec
ret
jne
push
push
jmp
push
or
sub
ja
jmp
psubusw
push
rclb
jmp
insb
xor
gs
inc
sbb
fs
inc
cmp
or
mov
sub
loopne
sahf
popa
insb
lea
xor
sbb
bound
xor
shrb
push
sbb
stos
mov
push
sub
std
xchg
aam
and
addl
jns
icebp
dec
lcall
imul
jmp
dec
addr16
fsubrs
cmp
pusha
outsb
dec
loope
xor
sbb
lock
and
inc
dec
dec
inc
in
pop
and
xor
xor
push
jbe
dec
popa
mov
xor
sar
in
push
rcll
cmp
sarl
fimuls
inc
mov
mov
testl
pop
inc
or
ret
pop
lods
int3
dec
js
jne
mov
mov
mov
repz
fistpll
cmpsb
or
sbb
add
mov
and
ja
add
testb
bound
push
psraw
jns
fs
or
mov
addr16
stos
push
pop
cmp
stc
push
rclb
jecxz
xor
push
in
push
inc
inc
xor
inc
out
adc
xor
outsl
in
inc
xor
std
stos
dec
mov
push
adc
mov
cmp
xor
xor
pusha
imul
jecxz
orb
mov
aam
icebp
push
xlat
lret
and
aaa
mov
bound
test
out
ljmp
push
loop
sahf
lret
sub
nop
inc
xorb
inc
sub
ret
mov
hlt
or
dec
rcrb
push
ja
cmpsb
icebp
jg
test
or
dec
adc
jp
ret
leave
loopne
cs
dec
into
out
push
or
out
pop
adc
aam
enter
scas
sti
clc
call
push
inc
push
testb
inc
scas
and
fldcw
xor
ja
pop
sahf
cmp
repnz
outsb
dec
inc
xchg
add
jno
push
jo
lock
jne,pt
cmp
xchg
and
xchg
xor
push
cmpsl
pop
popf
jp
dec
cmp
outsb
dec
inc
mov
stc
int3
jbe
insl
push
icebp
frstor
push
inc
cmc
push
outsb
jae
pop
mov
rol
pop
fs
std
pop
ficompl
jae
push
pop
mov
mov
clc
das
cmpsb
push
inc
xchg
adc
or
sub
dec
jbe
sub
pop
mov
je
mov
rcrl
push
xchg
clc
add
ret
sub
sub
dec
pop
adc
mov
movsb
aaa
aad
push
cmp
push
push
xor
pop
inc
cmp
orb
dec
or
outsl
xor
dec
mov
outsl
inc
rolb
mov
xchg
loopne
jae
dec
je
mov
dec
adc
popa
shr
lretw
cld
adc
out
push
push
pop
lock
pushf
out
mov
mov
push
sub
mov
inc
mov
cs
add
jo
push
mov
rcl
cld
pop
push
cmpsb
xchg
sbbb
pop
adc
inc
sbb
fs
pop
dec
mov
das
call
mov
adc
inc
mov
or
jne
sahf
pop
pop
gs
sub
add
cli
fs
inc
jns
xchg
pop
cmp
dec
pop
and
dec
xor
inc
or
add
pop
loopne
mov
inc
xorb
xor
dec
and
cmp
clc
jo
add
mov
push
fs
ljmp
addr16
dec
jns
int3
test
sbb
icebp
aaa
sbb
es
fisubrs
xor
shll
inc
push
mov
dec
icebp
test
aam
test
loop
sub
imul
aad
insb
loop
insl
cld
push
imul
xchg
ret
test
icebp
pop
aam
push
push
dec
popf
adc
inc
imul
popa
stos
adc
cwtl
jl
out
or
jmp
pop
push
mov
mov
inc
pop
jns
adc
inc
dec
mov
push
push
cmp
lcall
scas
push
sub
dec
or
repz
push
ds
bound
push
stos
push
dec
cmp
sbb
adc
loope
fnstcw
cmp
out
dec
call
jo
add
call
movsb
jno
je
out
frstor
cmpsb
gs
test
mov
clc
push
hlt
iret
ret
sarl
sbb
inc
mov
dec
adc
andl
dec
dec
and
outsl
frstor
rorb
imul
outsl
push
push
mov
xchg
jns
push
ret
push
dec
sub
dec
dec
dec
fisubs
or
sub
pop
jae
ss
fimull
push
jo
jp
sbb
mov
mov
fcmove
mov
jno
push
je
push
or
cld
ffreep
pop
loope
jmp
add
insl
cmp
lahf
sub
or
jbe
sbb
mov
or
or
xchg
or
repnz
fildll
xor
imull
es
scas
add
sub
rcrb
ret
cmp
fninit
bound
push
gs
insl
xor
jecxz
scas
cs
xor
xor
or
jne
push
dec
dec
cmp
ss
lcall
fildl
xchg
dec
into
dec
xor
lcall
bound
stc
and
mov
out
iret
mov
mov
dec
mov
push
push
popa
outsl
mov
xchg
iret
mov
adcb
daa
es
lret
cmpb
sub
dec
cmp
mov
inc
fs
cwtl
ret
popf
mov
jbe
pop
cmp
hlt
ja
addr16
fwait
or
stc
dec
scas
fldt
xor
in
mov
mov
ss
jo
movsbl
out
inc
push
push
enter
ljmp
inc
nop
arpl
decb
cwtl
sahf
ret
or
jno
add
sub
mov
and
fisttpl
cmpb
shr
pusha
push
lock
dec
pop
dec
outsl
inc
sahf
rol
push
mov
ret
push
data16
rcrl
push
fdivrs
push
push
lret
outsb
add
mov
push
imul
popf
pushf
pop
mov
cld
fists
jge
xor
jg
fdivrl
cmc
ret
cmp
jno
cld
hlt
aam
cmp
and
xor
inc
adc
imul
ljmp
pop
lods
ds
sahf
into
into
mov
jns
jbe
dec
inc
mov
dec
subb
add
fisttps
cmp
pop
and
gs
pop
iret
shlb
or
xor
sub
sbb
adc
adc
stos
loopne
add
and
inc
enter
cmpb
add
pusha
adc
add
rclb
push
add
insb
and
xor
test
and
popa
or
add
jge
mov
jl
push
inc
idivl
jp
and
inc
adc
lods
test
cmp
divb
push
push
div
sahf
fnsave
pop
adc
es
loopne
imul
outsb
push
jae
imul
fnstsw
cmpsl
inc
arpl
rcr
sti
mov
inc
xchg
addr16
outsb
push
outsb
mov
cmp
jle
ficompl
arpl
and
sub
inc
fisubrs
mov
pop
imul
inc
cmp
pop
dec
push
es
cs
popa
push
ja
pusha
out
adc
push
adc
push
mov
add
dec
dec
popa
addr16
testb
shll
cmp
roll
cmp
arpl
outsb
inc
arpl
push
jg
add
es
loopne
jo
jne
inc
ja
adc
pop
aas
mov
adc
jo
insb
jnp
xorl
sbb
sub
cmp
mov
push
cmp
mul
mov
jg
dec
adc
lds
push
fwait
sahf
mov
inc
shl
in
inc
sbb
pop
jae
loopne
popa
icebp
and
out
dec
push
pop
xchg
mov
ja
arpl
jmp
sub
ds
lret
jae
cmp
dec
sub
sbb
cmp
push
sahf
mov
mov
insl
pop
inc
mov
in
adc
outsb
xchg
pop
lahf
pop
je
jbe
mov
sbb
rorb
jle
pop
imulb
xlat
ja
loope
push
cmp
sub
pop
loop
ret
notl
arpl
outsl
xchg
femms
push
std
pop
aam
push
inc
push
mov
jo
xlat
outsb
dec
fwait
mov
enter
jecxz
inc
sub
mov
repz
outsb
bound
imul
pop
push
jp
inc
pop
bound
stos
sbb
inc
xlat
ret
fstpt
movups
inc
outsb
mov
ss
imul
imul
push
fwait
pop
shrl
je
in
jge
fbld
dec
bound
jp
or
inc
inc
insl
mov
out
adc
popa
call
dec
inc
addr16
push
cmpb
inc
fs
addr16
mov
mov
cmpsl
adcl
andb
mov
fisubrs
xchg
outsl
dec
aas
roll
lahf
mov
jae
push
repz
scas
insb
out
ja
xchg
inc
ja
inc
push
push
pop
fimuls
outsw
inc
ret
mov
jge
sti
out
push
push
xchg
mul
fcoms
jne
push
push
bnd
ja
add
je
dec
cmpsl
pop
mov
push
sub
popa
daa
pop
jno
js
imul
adc
cld
push
pop
outsb
rorl
sahf
scas
std
out
cmp
scas
imulb
repz
jns
sbb
cwtl
jmp
lds
insl
pop
cmpsl
scas
push
fiaddl
lahf
and
jb
outsl
fdiv
loope
ret
mov
jo
out
out
je
xorb
aad
pop
or
xchg
rorb
adc
mov
jecxz
bound
imul
subb
or
mov
push
pop
fistpll
pop
or
fistpl
jae
pop
loopne
ljmp
insb
mov
inc
dec
xchg
sub
cmp
jecxz
je
out
cs
cmpsl
dec
fwait
push
jmp
cmpsb
mov
adc
pop
xchg
mov
xchg
scas
jnp
movsl
cmp
jo
out
sahf
scas
jae
xchg
pushw
ss
mov
jmp
ss
xlat
loopne
jecxz
or
das
or
cwtl
rolb
sub
add
push
mov
adc
cmp
mov
out
rcrl
outsb
mov
insb
outsl
js
xchg
push
fwait
push
cmp
mov
scas
jle
pop
shl
rol
aaa
pop
add
lcall
inc
cmpsl
rol
xchg
push
into
addb
sbb
xchg
std
loopne
inc
inc
pop
sub
aam
aas
mov
ljmp
adc
out
lock
or
repnz
xchg
or
jg
pop
jo
xchg
jg
je
ret
jnp
andb
jns
jmp
in
push
mov
imul
mov
pop
sahf
stos
jo
out
mov
add
push
out
mov
imul
lret
scas
mov
jnp
xor
adc
push
test
xor
mov
add
mov
sub
push
mov
mov
add
sbb
push
add
xchg
xor
movsb
mov
sbb
sahf
in
fistps
jne
call
inc
mov
xchg
or
inc
add
jno
dec
or
out
loopne
push
inc
lock
fdivl
ja
imul
add
mov
ret
push
mov
push
cmp
dec
add
push
iret
jmp
and
pop
fists
add
cmovs
aaa
mov
pop
out
out
loope
fsubl
out
push
pop
out
gs
fmul
adc
add
add
adc
daa
imul
mov
cs
sub
inc
adc
jle
popl
insb
dec
jp
hlt
es
aas
push
jbe
addr16
dec
sub
outsb
aas
push
ret
ja
das
pop
pusha
mov
test
push
dec
enter
adc
pop
push
add
xor
outsl
inc
xor
mov
loopne
inc
iret
lock
insb
pop
imul
dec
mov
icebp
xlat
pop
push
add
adc
movsb
leave
data16
lea
jecxz
pop
into
cmp
pop
js
rcll
push
daa
gs
aas
pop
rcrl
adc
push
xchg
push
js
adc
jbe
aaa
dec
lret
and
fwait
inc
jp
or
scas
jb
test
test
dec
add
add
or
aas
xchg
dec
jno
lret
out
push
roll
push
subl
popa
insl
sbb
addr16
cli
shll
add
cwtl
stos
sbb
loopne
sbb
maskmovq
rcll
xchg
push
inc
xchg
cmp
ficoms
es
push
aas
ljmp
subps
fildl
dec
cmp
aaa
cmp
xchg
jp
xchg
ret
stos
inc
or
jnp
js
pusha
pop
pop
adc
imul
test
push
test
mov
mov
sarl
fdivs
imul
xchg
adc
das
xchg
mov
inc
ret
and
out
loop
rcll
scas
out
inc
inc
test
xchg
dec
jg
ljmp
sar
repz
js
ss
adc
iret
mov
and
pop
dec
mov
sbb
xor
or
xorb
hlt
mov
and
outsb
sub
shll
jmp
ret
sbb
pop
push
mov
or
push
inc
loope
add
js
jmp
sbb
rorl
inc
add
sub
xlat
xchg
push
cltd
cmpsl
aad
imul
lcall
sbb
ds
or
fimull
fwait
popf
xlat
adc
mov
pop
xor
dec
mov
jo
inc
int
ja
jl
or
rcl
jge
fs
xor
divb
push
jmp
pushl
out
mov
pushf
test
mov
lea
data16
sub
clc
dec
lea
pushl
or
push
loope
ss
jecxz
sbb
jne
mov
or
stc
jmp
sub
arpl
idivb
out
loopne
push
push
jb
push
lret
lret
leave
add
cmp
pop
stc
and
repnz
repz
cmc
xor
iret
sti
xor
outsl
test
mov
and
pop
xchg
iret
lret
sahf
and
aad
lds
jg
mov
sbb
stc
add
cwtl
into
pop
inc
jnp
xlat
push
ljmp
aam
xor
mov
sar
fnstsw
mov
push
je
out
inc
lcall
out
ja
fstp
or
adc
aaa
fscale
cli
xor
lret
dec
jmp
je
mov
pop
int
repz
jg
mov
jb
lcall
lds
xchg
inc
scas
inc
insl
cmpsl
leave
inc
pop
int
cmp
test
fs
push
mov
ljmp
sub
adc
mov
stc
xor
inc
push
lea
pop
in
call
in
es
or
inc
cmpb
adc
mov
fistps
push
jne
inc
cmp
iret
ljmp
cmpsb
xchg
int3
add
and
lret
repnz
in
sti
mov
clc
xor
pop
jmp
xchg
lods
in
scas
jnp
cmp
jns
jmp
jp
cmp
and
clc
jg
fsubs
sarl
or
jo
and
rcrb
jg
xchg
mov
ja
dec
and
subl
icebp
adc
test
adc
cmpsl
lahf
inc
imul
cld
int3
int3
out
test
push
push
push
mov
test
sbb
jo
xchg
rorb
icebp
push
shr
mov
ja
jo
ljmp
pop
xchg
in
call
repz
mov
sub
lock
imul
insb
movsb
fstl
cmp
ss
and
out
clc
call
mov
and
jo
lahf
jecxz
rcl
dec
jmp
fstpt
sti
imul
pop
in
mov
js
out
in
push
mov
data16
in
sub
mov
clc
fcoml
bound
std
xor
xbegin
push
mov
inc
jl
cmp
out
jo
cli
or
dec
addl
and
and
and
mov
lock
cli
stc
mov
daa
outsb
or
and
sub
inc
inc
push
dec
rclb
vunpckhps
ret
push
mov
mov
xchg
dec
jnp
and
and
mov
cld
aas
outsb
incb
repnz
cmp
fsubrl
xor
loope
sbb
fistpl
push
popf
mov
popa
test
lcall
jp
hlt
movsl
sar
outsb
nop
mov
push
mov
add
pop
out
push
pop
xchg
mov
daa
dec
fistps
push
roll
fdivs
roll
push
cmp
mov
sbb
pop
xchg
int
sbb
lcall
decl
push
dec
xchg
sbb
cmp
cld
int3
out
pop
xchg
dec
jle
icebp
addr16
xchg
push
jo
fidivs
push
sbb
divl
push
or
pop
mov
imul
dec
jl
or
dec
xchg
icebp
fwait
incb
push
mov
and
out
sub
fwait
or
pop
cltd
rorb
cmp
jnp
dec
test
cli
lret
mov
out
jo
jb
cmp
pop
xchg
lret
add
and
jg
adc
int3
out
call
loope
cmpsb
jo
shrb
icebp
mov
sbb
inc
call
mov
dec
xor
fcomi
loop
add
test
aaa
fcomip
idiv
rcll
in
xor
cltd
push
shl
arpl
fwait
xor
fildl
lods
xchg
cmp
xor
fdivs
adcl
lcall
jl
sub
inc
jl
imul
addb
lret
popaw
pop
clc
mov
mov
sub
sub
cmpl
pop
shl
jnp
incb
sub
test
scas
jmp
or
les
shrb
rorb
xorb
inc
jo
cld
xor
ja
rorb
jo
adc
sub
fidivrl
movsl
clc
call
cltd
fmull
aaa
fnstcw
mov
jne
shrb
push
add
incl
sub
sub
aad
sub
push
outsl
pop
add
mov
jmp
sarl
shlb
mov
lea
out
daa
bound
cmpb
inc
ja
test
add
jo
repz
mov
jmp
push
inc
mov
cmpsl
sub
fwait
mov
sub
jo
int
jecxz
cmp
adc
or
and
and
and
jo
mov
pop
cmp
loop
loopne
push
jbe
or
lods
out
test
gs
decl
lret
repz
dec
jo
sbb
mov
mov
pop
shlb
push
jp
push
cmp
loop
mov
rorl
filds
jl
cmp
and
pop
pop
cmp
jg
or
icebp
rolb
pop
xor
cmpsb
outsl
add
enter
test
inc
adc
add
xor
outsl
fistpll
shl
xlat
cmpl
jno
mov
jg
cld
mov
pop
pop
pop
aas
popa
dec
sbb
cmc
gs
iret
add
addb
pop
fcomip
imulb
stos
int
imul
fiadds
jecxz
xor
xchg
mov
gs
ret
hlt
adc
loopne
jno
add
add
out
ret
fwait
shlb
hlt
test
in
loopne
jle
cmp
std
add
sbb
ror
insb
xchg
jo
dec
jbe
or
rolb
sub
dec
dec
dec
xchg
ja
push
xor
pop
add
cmp
test
loopne
mov
shl
das
cli
jecxz
jl
push
and
bound
mov
insb
push
jns
xor
jl
std
inc
arpl
into
aas
jo
mov
pop
rorb
dec
jle
popa
hlt
fadds
inc
pop
mov
jg
cmp
dec
enter
imul
out
clc
sbb
repz
adc
aam
mov
mov
andb
jne
and
pop
mov
push
inc
jb
out
repnz
xor
movsb
imulb
push
mov
in
fistpll
push
mov
popf
movsl
arpl
or
xchg
int
fwait
inc
ret
cmpsl
xchg
sar
ret
inc
and
fdivp
out
in
ljmp
popf
ret
add
jno
push
in
xor
sbb
aam
jno
jle
sub
test
pop
xorb
sarb
popa
pusha
or
jns
xor
sarb
loop
pop
pop
shll
inc
sub
lods
hlt
xlat
mov
loop
aad
mov
iret
add
out
int
adc
xor
mov
mov
xor
pusha
hlt
pop
sbbb
add
add
hlt
sbb
adc
sarb
dec
clc
mov
orl
cmp
and
adc
icebp
das
lcall
xor
mov
xor
mov
mov
pop
shr
xor
inc
enter
lea
mov
outsb
pop
sub
icebp
add
out
dec
inc
xor
mov
fbstp
add
cwtl
ror
sub
mov
aaa
sar
lods
mov
call
mov
imul
xchg
inc
shl
mov
popf
xlat
clc
addr16
negl
arpl
jno
or
mov
sbb
loope
jne
hlt
rol
es
insb
add
repz
negb
mov
movsl
mov
aas
mov
or
mov
adc
lret
into
cld
clc
jl
data16
lds
mov
rclb
xor
icebp
pop
bnd
mov
ret
fidivrs
push
shrb
jo
jns
lods
sub
jno
add
mov
out
loopne
incl
pop
in
jg
sbb
push
inc
hlt
pop
int
into
icebp
add
add
mov
stc
sbb
mov
jo
lret
test
fistpll
pop
dec
lock
out
xchg
ljmp
adc
lock
shl
sahf
cmpsl
mov
mov
clc
xchg
mov
mov
xchg
aaa
jg
andl
xor
add
mov
adc
fiadds
out
jno
jle
mov
sbb
xchg
xchg
mov
dec
movups
shrb
or
inc
push
cli
flds
outsb
mov
push
decl
push
sbb
aas
js
enter
jl
xor
mov
test
pop
pop
ljmp
orb
xchg
mov
js
mov
and
ljmp
sbbb
jg
fistl
lahf
fdivs
cmpsl
push
popa
lock
and
mov
xchg
sub
mov
mov
cmpsl
push
push
push
jg
fcmovbe
stos
sahf
mov
xor
xchg
iret
aas
out
mov
xor
xchg
jo
popa
dec
and
hlt
sub
subb
xchg
sbb
push
aas
out
mov
dec
jno
cmp
mov
sbb
jns
adc
repnz
cmpsl
xchg
std
jo
int3
or
xor
das
adc
and
sub
add
fildll
inc
push
ljmp
inc
jne
std
and
stos
jecxz
sbb
sub
jbe
push
or
jg
stc
sbb
mov
rorb
pop
cld
jno
xchg
xlat
mov
jae
loop
add
xchg
mov
incl
out
adc
loop
xchg
inc
pushl
imul
jg
repz
cmp
add
hlt
or
fld
sbb
test
xlat
movsb
mov
int3
aas
xor
or
stc
leave
dec
enter
movsb
out
mov
into
test
sahf
xchg
dec
hlt
push
add
fiadds
cmpsb
mov
jo
fwait
mov
jo
cld
icebp
call
rcrb
les
fcompl
xchg
aaa
incl
xor
mov
pusha
dec
ja
inc
out
mov
pushf
stos
icebp
pushf
mov
dec
sub
dec
test
clc
pop
loopne
mov
and
cmp
cld
push
dec
or
sahf
sub
sub
pushf
mov
push
test
shl
push
add
add
and
mov
cmp
insb
aaa
mov
shl
cmp
inc
mov
into
inc
pusha
shrb
das
cli
pop
push
jl
add
adc
adc
lcall
shll
sti
popf
mov
loopne
add
sahf
add
loop
sub
insl
xchg
bound
pop
stc
add
adc
cmpsl
nop
xor
sub
adc
sbb
inc
clc
out
sar
fbstp
bound
push
es
cltd
mov
icebp
adc
mov
xor
adc
cmc
xchg
fsts
push
hlt
mov
bound
mov
aaa
and
lret
add
mov
insb
cmp
aaa
jb
push
jb
imul
inc
loopw
incl
inc
ljmp
push
nop
mov
jne
add
pop
jp
daa
mov
xor
fmuls
and
decl
lret
sahf
pusha
mov
lods
out
pop
mov
jo
fimull
xor
cmc
clc
int
fdivrs
push
jae
mov
xor
mov
sarb
rolb
ljmp
mov
mov
and
pop
mov
add
nop
mov
jg
or
or
dec
fisttpll
dec
andl
mov
xor
jb
loop
ret
jg
or
lock
or
dec
or
hlt
xor
rorl
outsl
xchg
push
xor
ljmp
and
mov
add
cmc
cs
dec
inc
mov
sub
sbb
idiv
mov
data16
cli
jnp
mov
cmp
mov
dec
dec
mov
push
repz
insl
sbb
jo
icebp
inc
mov
adc
xor
xchg
daa
sbb
adc
or
aaa
js
inc
cmc
movsb
mov
xorb
jle
es
icebp
adc
rorb
and
ss
insl
dec
stos
sub
daa
je
jecxz
aaa
mov
sub
xchg
out
add
mov
mov
add
xor
or
pop
scas
pop
loopne
jno
cwtl
and
js
jg
and
es
into
cmc
xor
fs
mov
loopne
aaa
cmp
cmp
and
jo
hlt
sbb
jns
xor
mov
adc
in
sub
mov
fists
cmp
jb
adc
fwait
lea
jmp
inc
addr16
loop
mov
jg
xor
jmp
out
jl
inc
mov
inc
mov
or
and
orb
pop
xchg
inc
clc
sub
xor
push
aam
mov
jno
xchg
clc
out
sub
or
out
cs
dec
sbb
rcrb
insb
int
dec
nop
leave
add
shr
ljmp
lret
bound
out
enter
insl
clc
mov
push
cmp
xchg
push
cmp
pop
ret
jo
sbb
mov
pop
test
stc
popf
mov
dec
ljmp
fwait
mov
xor
loop
out
jp
hlt
xchg
sub
sbb
mov
xlat
shl
test
dec
scas
xor
shlb
xor
xlat
mov
out
mov
inc
cmp
mov
mov
rorb
or
jne
and
push
lahf
jo
or
test
incl
rcrb
push
js
and
shll
ljmp
cli
out
push
mov
mov
rcr
mov
pop
lea
sahf
rcl
mov
ljmp
or
pop
adc
xsavec
mov
movsl
sub
hlt
call
subb
mov
hlt
sub
jle
stos
icebp
add
stos
and
out
cli
adc
rorl
dec
pusha
prefetch
pop
and
xchg
lods
shr
cmp
lret
adc
rolb
inc
pushf
push
xor
mov
mov
scas
rclb
push
pop
lea
sbb
fildl
js
fistpl
pop
xor
sub
mov
dec
push
cmc
or
mov
data16
dec
shll
or
mov
inc
add
call
and
clc
repz
jo
mov
jno
loope
arpl
icebp
scas
sbb
jno
inc
lcall
cmp
rolb
mov
shll
icebp
sbb
mov
sbb
jg
out
nop
pop
mov
cwtl
loopne
mov
xlat
lock
arpl
int3
out
movsl
aaa
inc
icebp
or
cmpsl
jno
fsubs
hlt
sub
call
xchg
pop
loope
decb
jecxz
inc
add
dec
pop
jns
sbb
push
lretw
daa
sub
call
aad
add
sahf
jo
inc
ficomps
lds
shlb
mov
mov
stos
adc
mov
test
mov
mov
clc
push
dec
inc
out
hlt
pop
repz
sbb
xor
mov
xor
icebp
fldcw
rcll
sbb
mov
hlt
loope
mov
sub
test
stos
jmp
inc
test
icebp
fwait
ja
jne
jnp
xor
and
dec
imul
adc
in
mov
push
add
jmp
jg
inc
mov
adc
rcr
movsb
mov
push
jmp
sub
cmp
ljmp
xor
xor
daa
dec
outsl
cli
outsl
pop
sub
mov
sar
sbb
push
sbb
mov
and
and
stos
jmp
cld
arpl
out
adc
jecxz
repz
mov
jmp
aaa
cli
sbb
add
addr16
jge
daa
push
rorb
insl
test
das
hlt
cmc
adc
push
add
mov
movsb
sarb
inc
jp
cmp
dec
mov
jl
orb
mov
insb
dec
push
stos
in
sbb
int
or
scas
test
jns
sub
dec
push
and
into
fnstcw
js
xchg
and
sbb
and
rcrb
jg
insl
imul
push
push
pop
sbb
cmpsb
imul
andb
fsubrs
mov
jns
ljmp
loop
cli
ja
ficoms
push
scas
je
jb
lods
jp
test
add
xor
xlat
mov
hlt
int3
inc
adc
and
and
xchg
cmpb
pop
xchg
mov
pop
ja
xchg
inc
mov
add
insl
xor
jne
mov
cmp
xlat
pop
icebp
or
jecxz
jg
mov
ror
push
inc
add
iret
xadd
rcl
sbb
outsl
ss
pop
shll
enter
call
inc
outsl
or
fldenv
cld
sub
dec
xor
xor
addr16
add
sti
fdivrl
imul
add
pushf
sahf
jbe
int3
and
pop
xor
mov
jo
aas
mov
test
scas
xchg
cwtd
dec
imul
das
sahf
push
cli
and
scas
jl
jmp
insb
punpcklbw
jmp
pop
jge
add
cmp
pusha
push
push
or
jg
push
mov
lods
and
lret
sub
pop
sbb
loopne
cld
pop
popa
repz
stc
sub
mov
mov
xor
rol
xchg
sbb
mov
test
dec
lahf
pop
call
fmull
nop
sbb
es
jno
pop
rclb
pusha
pusha
arpl
stc
rcl
popa
jb
adc
ret
sub
ss
stc
cmc
sub
aas
scas
sub
je
mov
jp
pusha
dec
sbb
push
jmp
rcr
jo
js
lods
mov
pop
rcrl
mov
cs
call
dec
imul
pop
xlat
dec
outsl
into
cld
pop
test
sahf
jne
outsb
mov
jo
in
dec
mov
repz
jno
mov
mov
hlt
mov
sbb
fs
ljmp
dec
decl
sbb
add
rol
push
js
mov
mov
loopne
in
dec
xor
lods
shll
dec
or
mov
dec
push
ljmp
into
mov
ljmp
sbb
daa
push
fdivl
xchg
or
jg
add
sub
movsl
shlb
mov
jg
js
jo
push
push
xchg
lret
cmp
enter
sub
cld
pop
push
call
loopne
push
xchg
push
push
popf
mov
sbb
inc
mov
out
mov
pop
jmp
out
cmp
cmc
adc
xor
lret
push
mov
ss
loopne
aaa
jo
dec
jge
popf
mov
dec
and
or
jo
nop
xchg
fildll
sahf
jecxz
clc
mov
fmuls
aas
arpl
es
mov
sub
int
scas
xor
lcall
icebp
xchg
and
cmpsb
lret
clc
popa
outsw
xor
xchg
iret
icebp
dec
or
rcrb
cmc
adc
fimull
pusha
dec
xor
stc
in
cmpsl
xor
mov
sub
lahf
xor
pop
das
js
andb
repz
inc
std
xor
into
or
rolb
ds
mov
into
out
pusha
hlt
scas
stos
icebp
fwait
mov
xchg
cwtl
xchg
aaa
push
mov
sub
adc
int3
stos
sub
sub
sbb
js
notb
mov
sub
xchg
jle
sbb
adc
and
je
into
sub
push
jno
mov
or
ljmp
stos
sub
outsb
into
icebp
adc
scas
jns
inc
push
mov
aas
add
mov
test
in
into
js
int
push
jbe
add
or
sarl
sbb
mov
pop
jg
loop
aaa
loop
mov
cmpsb
jne
out
data16
popf
jp
push
clc
icebp
mov
dec
jns
jl
xor
cmc
add
rcll
add
cmp
ja
clc
es
push
inc
pop
data16
xor
jg
mov
outsb
sbb
test
jbe
jecxz
jo
idivb
push
dec
ja
je
xor
xchg
xchg
cmp
cld
scas
movb
mov
out
cmpsl
stos
sarb
out
or
incl
sub
aas
out
lods
adc
ficoms
out
pop
test
cld
mov
mov
stc
xor
jecxz
mov
fwait
ss
loopne
sub
test
outsl
adc
xchg
imul
and
dec
jge
stc
jecxz
clc
stos
sub
fsubs
push
sbb
xchg
push
pop
dec
sbb
xchg
mov
mov
cmp
pop
lret
adc
push
clc
fbstp
out
arpl
divb
push
xchg
sar
repnz
in
mov
adc
dec
loopne
jo
cmp
out
adc
add
xchg
enter
sahf
lea
pop
jmp
xchg
xchg
push
xor
shlb
hlt
scas
jno
pop
adc
and
stos
fwait
arpl
dec
inc
and
adc
shlb
and
imul
data16
add
mov
stc
dec
loopne
xchg
adc
xor
shl
mov
add
lds
push
push
pop
lods
rcrl
jo
lock
mov
popa
lds
xor
repz
stc
and
js
adc
add
xchg
jl
das
sbbl
daa
jo
imul
add
fidivs
fbstp
xchg
lret
fcomip
pop
arpl
mov
scas
add
js
mov
addb
push
je
hlt
scas
les
mov
xchg
xchg
ret
sbb
cmc
sbb
inc
cli
call
mov
jo
adc
jmp
fwait
scas
in
pop
jecxz
insl
pop
jns
clc
pop
pop
and
hlt
mov
cld
dec
test
loope
hlt
lcall
hlt
xchg
sbb
cld
test
out
insl
daa
insb
stos
rcrb
jne
hlt
shl
les
cld
mov
xchg
filds
pop
cmpb
stos
lcall
sub
insb
in
xchg
adc
jge
faddl
mov
xor
aam
je
imul
xchg
xor
rcrb
inc
hlt
movsb
enter
sti
stc
jecxz
hlt
int3
inc
dec
and
movsb
mov
scas
iret
sbb
push
cmc
lahf
insb
popf
incl
pop
add
xor
xchg
cmp
addr16
pushw
push
ljmp
sbb
ljmp
inc
repz
inc
aam
pop
pop
std
push
bnd
adc
mov
arpl
xchg
sub
push
call
mov
pop
ja
ljmp
aaa
sub
add
ja
ret
add
xor
mov
gs
adc
cmp
fidivrs
nop
mov
xor
mov
or
negl
pop
inc
fs
adc
xchg
xor
pop
int3
sub
das
xor
cs
nop
test
ljmp
dec
lret
cli
rclb
lcall
mov
icebp
sbb
clc
inc
hlt
ds
mov
pop
and
sub
add
shll
jg
add
sub
scas
stos
and
push
je
aas
jle
add
dec
and
clc
and
orb
lods
loop
iret
pop
lds
mov
push
ss
jp
add
decb
rcl
fdiv
xchg
mov
das
add
push
or
out
push
pushl
mov
sti
or
push
in
xorl
xor
xchg
add
hlt
mov
push
je
pop
int
lea
fldl
push
jl
orl
push
sub
fistl
cli
aaa
das
adc
push
pop
stc
out
roll
xchg
ljmp
outsb
inc
mov
pop
in
dec
push
jecxz
aaa
xor
jmp
mov
sub
jg
push
adc
ljmp
push
and
hlt
mov
push
mov
adcb
jle
imul
inc
in
jne
mov
cld
mov
nop
mov
and
mov
jae
pop
pop
adc
mov
fwait
inc
mov
jae
and
test
rorl
rcl
imul
inc
fcom
dec
rcll
adcl
lds
aaa
push
leave
add
mov
pop
xor
inc
dec
lcall
cld
or
mov
das
les
leave
sbb
or
ja
and
xchg
shrb
lods
stos
shll
pop
fwait
add
aas
subb
mov
pop
and
jae,pt
add
repz
mulb
xor
pusha
imul
fistpl
fdivrl
outsb
test
in
ljmp
cmp
jg
test
cmpb
ss
dec
or
push
lds
jg
pop
jne
jge
push
clc
out
and
add
add
mov
xor
fbstp
jno
cltd
shlb
mov
pop
sub
das
dec
ja
test
addr16
hlt
pop
mov
dec
or
sbb
xchg
fistps
push
jbe
out
lahf
adcb
inc
adc
or
mov
and
out
dec
loop
and
xchg
mov
ficompl
ja
jne
cmpb
outsb
sub
sbb
imul
scas
out
pop
or
jbe
cmp
adc
mov
rcl
lods
jl
outsb
inc
and
cli
or
push
cmp
cmp
push
int
lcall
push
ficomps
mov
cmp
pop
push
xchg
int3
or
aas
add
jne
xchg
rclb
addr16
sbb
jnp
das
push
cwtl
and
mov
add
sub
dec
popa
jmp
ljmp
in
daa
mov
loope
hlt
push
jle
pop
add
push
jp
push
ds
adc
mov
adc
push
or
xlat
stc
dec
jp
mov
loopne
and
pop
repz
jecxz
inc
stos
idivl
aam
loop
shrb
lahf
xchg
sub
outsl
sub
mov
pop
es
xor
add
pop
pop
sub
andb
out
shll
pushf
jo
mov
hlt
push
fdiv
stc
lods
or
fwait
aam
stos
cmpl
lds
xor
dec
rclb
pop
lret
xor
jmp
xor
loopne
lret
out
xor
outsb
data16
add
loope
add
dec
xchg
sub
ret
mov
hlt
testb
cld
rorb
fistpl
shl
pop
call
addr16
ljmp
std
sbb
sahf
mov
sub
es
or
xor
cmp
sub
das
orl
adc
cltd
and
test
cli
sub
ljmp
or
xlat
rclb
in
mov
out
pop
cltd
lret
les
stc
inc
and
cmp
push
cmpb
sub
xchg
sarb
imul
call
push
lods
clc
xor
fidivs
pop
jns
adc
xor
mov
fs
aas
add
addr16
sbb
sbb
or
add
ja
xor
pop
jge
cmp
daa
loopne
insl
leave
mov
sbb
mov
cli
enter
into
ljmp
repnz
fcmove
jge
test
mov
not
leave
push
loop
int
sahf
jo
lret
mov
cmpsb
cwtl
lahf
mov
add
sub
cmp
push
shl
or
hlt
popa
xlat
xchg
push
mov
push
loop
sbb
inc
dec
sub
es
gs
push
xchg
add
mov
or
push
mov
push
cmc
pop
popa
pop
pop
push
cld
sub
push
les
mov
fildll
xor
push
dec
cmpl
roll
mov
std
clc
test
jge
aas
stos
sub
int
mov
clc
cs
mov
mov
or
cld
push
out
mov
es
js
or
addl
xor
jl
fs
dec
fidivrs
loop
mov
test
mov
or
add
arpl
sub
in
in
daa
dec
addr16
push
cmc
pop
xor
hlt
rorl
jp
lret
lea
jg
jg
cmp
jnp
imul
push
mov
addl
xchg
rclb
adc
add
dec
shrb
add
mov
loopne
or
hlt
leave
js
insb
adc
add
sar
test
das
or
pop
and
adc
jmp
cmp
stos
mov
lahf
jg
adc
ret
and
mov
jns
bound
frstor
mov
sub
push
out
rolb
call
shlb
sbb
push
arpl
pop
ljmp
sub
in
jmp
sti
add
push
adc
jbe
ss
pushl
pushf
push
jnp
or
pop
flds
fsubrl
les
mov
mov
lds
in
mov
xchg
push
push
dec
popa
rolb
shrb
fs
loopne
pop
shrb
push
call
inc
dec
fnstcw
ja
loop
loopne
in
cmp
sub
enter
adc
stos
test
rolb
xorb
call
and
mov
mov
iret
xlat
rcr
mov
sub
scas
xchg
lods
jne
jo
sbb
in
test
mov
xchg
lock
adc
or
daa
out
aam
icebp
clc
sbb
rorl
pop
daa
into
lret
pop
fdivrl
mov
dec
inc
fcomp
or
leave
or
aaa
add
out
push
xor
jmp
mov
pop
loopne
jns
mov
pop
jp
fldcw
lods
insb
out
cs
test
jg
enter
test
or
jle
dec
icebp
aaa
xor
lret
add
roll
cmp
xor
cli
pop
das
or
sarl
mov
push
lds
adcb
dec
push
shlb
adc
push
rorl
cmp
mov
into
push
das
mov
aas
sub
adc
cs
xchg
mov
push
xchg
cltd
xor
int
loope
fisubs
dec
test
mov
hlt
sub
outsb
xchg
sarb
and
jns
sub
arpl
in
push
ror
mov
or
and
add
add
jae
subb
out
lods
push
pop
push
lock
pop
loope
sub
sahf
outsl
xor
and
add
or
int3
roll
dec
mov
adc
or
lea
jo
cmp
inc
fcmovnbe
mov
sbb
test
loop
stc
mov
fldt
maskmovq
sbb
into
loopne
dec
aas
bound
mov
push
inc
out
mov
or
mov
das
loop
push
into
dec
inc
loopne
pop
jg
fwait
stos
inc
rcrb
mov
jmp
pop
xor
inc
push
jge
lods
xor
loop
addr16
add
mov
roll
inc
jbe
mov
hlt
jns
pop
lret
rcrl
cs
ficoms
dec
add
add
cmc
lock
push
pop
and
aaa
sub
push
stos
divb
push
push
iret
push
outsb
out
push
jmp
push
pop
push
test
pop
xlat
stc
or
jno
mov
rcrb
rol
int3
jae
movb
xor
out
sub
pusha
dec
hlt
sarl
rorl
push
jl
dec
into
sbbb
dec
and
push
jecxz
scas
push
jo
mov
shrb
adc
movsl
mov
and
pop
fwait
leave
or
mov
inc
adc
mov
aam
outsb
mov
shll
push
push
push
cmp
pop
pusha
cmc
mov
andl
repz
jmp
jge
mov
insb
xlat
andl
xor
jp
out
ss
faddl
rclb
outsl
jbe
cmc
imul
ja
xlat
or
inc
jnp
fisttpl
pusha
jo
push
mov
jl
sub
dec
sbb
dec
jp
mov
lods
rol
jae
add
sbb
pop
fisttps
sbb
push
cmpsb
add
inc
js
ljmp
out
jnp
mov
jo
jns
mov
loop
push
push
jbe
add
mov
mov
jp
sbb
movsl
inc
pop
rcrb
call
pop
call
nop
pushf
mov
stc
push
add
adc
insl
push
imul
call
mov
arpl
add
jg
adcl
jne
add
pop
xlat
clc
das
fisttpll
out
lods
jb
int
jno
mov
mov
xchg
add
xchg
and
mov
clc
das
adc
push
nop
sub
and
cli
jge
jae
dec
insb
jg
cmp
push
or
pop
lret
int
imul
ljmp
arpl
push
pop
ret
loop
dec
sub
add
dec
mov
clc
out
add
ret
inc
push
jne
pop
pushf
aad
inc
mov
ja
adc
lds
mov
jnp
sbb
dec
xor
lcall
loopne
adc
test
mov
dec
or
das
test
and
int
ror
ret
pop
jb
ljmp
jg
add
fwait
adc
es
js
loope
and
cs
sub
fsubrs
fcmovnu
dec
ja
add
push
out
cmpl
inc
test
jg
cmpsb
xchg
mov
jb
cld
pop
shrb
out
xchg
loopne
pop
dec
jne
jge
in
inc
jp
loope
pop
or
xchg
icebp
icebp
dec
xchg
pop
scas
insb
cmpb
jbe
ljmp
push
test
lds
push
ds
addr16
jge
stc
subl
and
sub
adc
mov
and
faddp
testb
ljmp
nop
adc
cld
adc
rclb
and
shl
pop
repnz
lock
scas
jg
arpl
xor
sbb
mov
jp
or
lods
push
mov
mov
jg
mov
iret
and
mov
clc
xor
cmpsb
push
clc
icebp
in
or
and
jmp
pop
add
cmpb
or
mov
xchg
xor
gs
xchg
sarl
data16
xor
icebp
adc
mov
xchg
xchg
or
jecxz
mov
cmp
push
add
mov
or
xlat
rorb
ret
data16
sub
test
stos
icebp
ja
leave
das
sub
lods
scas
mov
icebp
push
loope
mov
sub
shlb
loop
mov
push
jbe
cld
cld
mov
pop
cmpsb
xchg
data16
stc
or
fcoml
lock
call
shr
js
adc
test
add
xor
pop
enter
adc
ljmp
js
ljmp
or
int
arpl
cmp
dec
mov
pop
and
push
sbb
sarl
jp
mov
sub
adcb
xchg
pop
add
xchg
xchg
iret
fwait
incl
ds
nop
bound
cmc
mov
sbb
xorb
bound
stos
clc
pop
pop
loope
imul
mov
mov
les
inc
hlt
sbb
dec
dec
dec
loop
cld
pop
pop
ljmp
cmpps
decb
frndint
int3
jecxz
dec
xchg
fwait
jg
pop
das
popa
adc
inc
arpl
xlat
fsub
outsl
fcomps
dec
push
add
rcl
sub
or
loopne
sub
mov
sbb
out
mov
xchg
inc
insl
xor
scas
pop
pop
or
fwait
jno
jns
fdivrs
push
xor
or
loopne
js
mov
clc
or
and
out
out
adc
ljmp
adc
movsb
clc
loopne
push
add
mov
ss
mov
and
xor
jle
mov
mov
sub
xor
xchg
push
shlb
sub
lahf
and
xor
notb
fwait
std
ss
mov
lret
adc
push
int
xchg
rolb
inc
mov
mov
mov
loopne
cmp
mov
adc
mov
jae
mov
test
data16
frstor
jl
in
ljmp
mov
xchg
push
movb
dec
jb
mov
ret
add
push
dec
es
mov
sbb
loop
loopne
adcb
sbb
sahf
mov
aaa
mov
or
das
push
out
cli
ljmp
push
test
add
cmp
mov
ret
inc
aas
arpl
shll
arpl
fistps
sahf
div
jb
jp
pop
cli
pop
jo
sub
jmp
shlb
clc
jo
loop
mov
fdiv
pop
lahf
sahf
dec
js
xchg
push
and
stc
xchg
std
jbe
inc
gs
pop
mov
rcrb
scas
inc
jo
hlt
mov
and
and
bound
adc
fdiv
and
stc
outsl
dec
jb
movb
pop
sti
mov
push
pop
add
loopne
notb
shll
and
adc
xor
push
inc
push
pop
sub
decb
int
in
add
ljmp
lds
dec
xlat
test
jl
jecxz
lret
pop
xlat
and
stos
jge
clc
sbb
aad
data16
and
hlt
js
adc
ret
cmc
fisttps
adc
cmp
fiaddl
xchg
sub
push
repz
or
clc
inc
dec
push
fcmove
clc
scas
pop
cmp
pop
cli
inc
dec
inc
stos
int
in
push
sbb
sub
bound
pop
out
rcrl
and
adc
sbb
cmp
adc
push
dec
mov
call
pop
adc
repnz
adc
out
fisubrl
push
sub
push
hlt
xchg
fadds
cmp
or
mov
or
loopne
jno
testl
jno
lock
mov
pop
push
orl
fimull
mov
sahf
mov
insl
lock
xor
mov
sbb
cs
lret
adc
sarb
inc
push
fldenv
add
push
xor
cmpsb
pop
cmp
adc
in
xor
pop
mov
push
and
dec
sbb
movsbl
mov
sarl
shlb
mov
pop
mov
inc
mov
mov
lcall
xchg
decl
mov
pop
iret
mov
scas
sub
ljmp
add
dec
repnz
loop
jl
xorl
sub
ljmp
scas
loopne
jbe
mov
ret
mov
push
bound
loop
xor
cmp
scas
add
and
mov
mov
shl
ret
insl
xchg
sarb
icebp
scas
ljmp
push
lea
mov
lcall
decb
fsubrs
push
test
jp
sub
and
nop
mov
movsb
mov
xchg
and
push
adc
in
jp
ret
or
inc
hlt
mov
out
xchg
sarl
test
jnp
lods
clc
add
mov
jmp
add
pop
mov
in
xchg
lock
jo
dec
pop
jns
idiv
aas
call
es
mov
cmp
fcoms
ss
movsl
je
add
xchg
ds
pusha
gs
ds
lret
push
dec
imul
fimuls
mov
xor
imul
xchg
mov
mov
rcl
cs
xlat
push
mov
and
test
push
and
inc
icebp
dec
cltd
mov
mov
xor
mov
out
ljmp
loop
or
faddp
arpl
rclb
test
add
call
loopne
loope
xchg
cmp
push
aas
loop
dec
leave
dec
daa
adc
mov
mov
scas
adc
movsl
dec
inc
cmp
mov
aaa
mov
repz
clc
pusha
mov
and
push
add
sub
sbb
or
or
pusha
sbb
ljmp
repz
sub
sub
cmc
cs
push
and
lcall
adc
push
xchg
mov
pop
or
and
mov
mov
andb
add
shrb
andb
xor
lock
andl
mov
pop
mov
sar
cmp
cmp
das
hlt
iret
fldcw
dec
dec
fsubrp
adc
fwait
pop
outsb
cmpsl
loope
dec
or
inc
jl
pop
jle
data16
outsl
xchg
aas
js
ljmp
insb
jg
push
jmp
aaa
jp
dec
int
stc
scas
filds
xorb
push
and
test
mov
fucomip
or
sub
push
pop
loopne
fwait
les
clc
jg
outsb
push
iret
mov
mov
mov
mov
push
xchg
fistps
xchg
jb
aaa
inc
sub
lret
pop
or
mov
stos
and
or
add
inc
jae
pop
xchg
mov
push
sub
cmp
bound
add
sbb
and
xlat
stos
sub
xor
daa
xchg
adc
loope
lods
hlt
popa
js
icebp
jl
icebp
ds
sbb
push
std
scas
js
cmp
adc
and
sahf
add
shrb
fwait
cmp
or
cmp
sbb
pushf
xchg
dec
sbb
addb
pusha
sbb
cli
popf
lea
test
pop
sub
lahf
sbb
fsts
mulb
push
lcall
cmp
aam
dec
and
incl
inc
jle
aas
inc
hlt
xchg
pcmpeqw
fidivs
dec
cmp
call
xchg
adc
daa
lea
pop
clc
adc
sub
xor
iret
xor
sbb
and
aas
pop
mov
and
mov
pop
sahf
jne
fnstcw
rcl
mov
hlt
jge
lcall
push
nop
leave
push
es
pop
sbb
add
adc
sub
imulb
jne
mov
incl
sti
imul
add
cltd
adc
cli
dec
dec
jl
inc
repz
fwait
clc
lcall
stos
add
cld
push
mov
dec
sub
in
push
iret
shlb
cltd
inc
pop
mov
iret
push
mov
fsubrp
xchg
mov
ss
jecxz
and
movsb
push
lea
fisubl
popa
cmpsb
test
dec
jno
pop
or
js
or
rcl
js
add
lock
push
dec
mov
and
xorb
mov
test
loop
pop
fwait
mov
mov
sub
or
fbld
fmull
mov
pop
fildl
jecxz
adc
dec
loopne
sub
mov
mov
push
aad
xchg
mov
mov
repnz
jns
jo
ja
push
loopne
aas
push
jo
into
shlb
leave
pop
lea
and
sbb
lcall
pop
movsb
add
loop
outsl
add
cli
inc
mov
scas
cmp
jb
jge
sub
add
push
pop
loope
jmp
addl
sbb
xchg
mov
sbb
in
mov
push
in
jle
xor
data16
fucom
inc
out
decl
call
fsubr
out
dec
mov
outsb
or
xchg
jb
push
jle
fistpl
aas
loopne
scas
and
add
mov
push
xlat
add
sbb
inc
rcrb
mov
loopne
pop
lods
sub
pop
xor
pop
pusha
add
mov
sbbb
jns
pusha
pop
rcr
int
cli
mov
sub
mov
push
pop
mov
and
mov
leave
aam
pop
ffreep
sub
sub
add
and
inc
mov
mov
fistpl
mov
cmp
mov
xor
add
bound
mov
daa
mov
lods
loopne
outsl
and
cld
cmc
sub
movsb
loop
dec
hlt
shl
jmp
outsl
jb,pt
mov
adc
and
or
xor
add
scas
mov
pop
sarl
imul
cli
arpl
mov
add
mov
pop
jnp
xor
mov
mov
cli
xor
mov
hlt
push
xor
mov
mov
mov
mov
mov
enter
icebp
dec
push
mov
sub
adc
aas
shr
addb
push
jp
cld
scas
mov
adc
movsl
xchg
popf
out
xor
xor
repz
jmp
call
pop
add
mov
data16
mov
mov
jb
add
movsl
data16
jge
jns
cld
imul
js
or
and
inc
adc
rorb
repz
xchg
loop
leave
ret
and
int3
pop
xor
push
leave
std
and
add
dec
dec
data16
jno
jle
xchg
dec
test
sahf
push
xchg
les
out
icebp
stos
sub
cmp
xchg
mov
xchg
xchg
notb
jl
shrb
adc
outsl
test
or
mov
sar
rcrb
lods
push
jne
mov
add
ds
fidivrl
jg
fildl
push
or
pop
popa
and
or
pop
jge
ret
mov
pop
hlt
jae
inc
push
lods
inc
int
cmp
fwait
pusha
mov
sbb
scas
ss
jp
push
or
pop
add
mov
mov
mov
jmp
inc
mov
aad
stc
test
mov
stos
and
iret
dec
push
mov
pop
loop
add
mov
jb
cmp
aaa
lcall
and
pop
mov
lock
add
pop
dec
mov
dec
sub
add
out
into
sub
push
dec
addl
push
push
ficoms
imul
jo
scas
lods
ja
aaa
xor
lret
pop
movlps
movsl
ja
push
andb
dec
or
jmp
popa
negb
stos
cltd
pop
inc
dec
adc
js
adc
cmc
into
cmc
add
xor
fldl
repz
pop
lock
jae
xor
testb
jns
addr16
or
sub
loop
pop
out
cmp
sbb
test
inc
movsb
mov
test
fimuls
adc
pop
outsl
add
pop
pop
xchg
les
and
cmpsb
pop
loop
jmp
pop
pop
xchg
push
int
arpl
popf
imulb
insl
ds
add
mov
sbb
add
push
and
stc
sbb
je
pusha
fs
mov
sub
outsl
sub
pop
je
and
add
lods
add
sub
mov
in
push
ss
shr
adc
push
ljmp
shll
out
movsb
loop
or
out
inc
iret
xchg
movsb
jo
stos
adc
hlt
aaa
mov
inc
mov
ljmp
xor
dec
jne
int
lods
outsb
fs
jnp
leave
jmp
xchg
mov
inc
or
in
je
xlat
adc
adc
sar
add
mov
inc
inc
pop
push
les
daa
icebp
or
hlt
xorb
sti
arpl
sub
cmpsl
data16
imul
mov
or
ljmp
fadds
fsubs
inc
mov
mov
push
jecxz
lcall
ror
mov
fs
rcr
loopne
pop
flds
std
ret
divb
out
xor
dec
sub
adc
ret
sub
and
xlat
enter
xor
loop
jo
call
push
sub
insl
inc
add
dec
and
xor
cli
pop
dec
cmc
out
incl
repnz
andb
icebp
push
pop
outsl
scas
test
dec
and
pop
fbstp
cld
push
fildll
lret
inc
and
mov
jmp
test
cld
xlat
loopne
cwtl
xor
in
rcrb
xorb
mov
test
sbb
or
push
mov
repz
add
rorb
mov
loop
push
test
dec
pop
mov
sub
adc
loopne
push
adc
imul
mov
decl
insb
adc
inc
clc
xchg
out
jb
imul
popf
lea
jo
cmpsb
cmp
xor
jge
movsb
jecxz
push
xchg
sahf
test
jo
cwtl
xchg
cmp
push
xchg
out
decl
jae
push
mov
popa
cld
aaa
mov
mov
mov
lock
inc
lcall
test
push
call
ljmp
push
fcomp
push
loope
fildl
and
xchg
or
cli
adc
fwait
and
mov
icebp
das
dec
xchg
mov
fwait
add
call
xchg
enter
aaa
call
frstor
mov
mov
xor
mov
rcrb
xchg
cmp
push
pop
popa
call
mov
jge
xor
jg
push
ljmp
push
pop
popl
mov
xor
xor
adc
push
adc
pop
fmul
mov
inc
dec
loopne
andb
xchg
in
mov
in
add
loope
jge
cmp
and
pop
or
imul
xor
movb
add
cmpb
add
xor
pop
sub
jmp
js
loopne
in
mov
in
loop
test
adc
lret
add
xchg
out
rclb
lods
in
bound
cmp
addr16
push
adc
into
mov
adc
pop
ret
dec
push
pushl
sbb
jns
jl
ficoms
loop
mov
mov
push
call
in
xchg
and
mov
loope
cmc
mov
ret
add
or
rolb
and
xor
push
or
xchg
cli
aaa
xor
add
jbe
testb
mov
push
loope
je
jl
push
ss
add
sbb
popa
rorb
shrb
pop
dec
cmp
shl
orl
sub
xor
hlt
xor
in
add
or
popa
mov
sbb
out
cmpsl
jbe
std
adc
into
or
sbb
inc
clc
aaa
loope
mov
hlt
popf
mov
pop
sub
jp
pushf
cmp
pop
jl
push
pop
loope
push
add
in
loop
and
xchg
clc
es
mov
ret
mov
roll
push
sahf
outsb
lods
jg
mov
lods
push
inc
icebp
pop
scas
sub
pop
jnp
ljmp
and
push
sub
sti
out
outsb
dec
push
pop
mov
xor
add
icebp
push
jecxz
cmpl
cmpsl
or
arpl
xor
rcrb
loopne
cmp
and
test
outsb
cmc
jmp
jnp
das
ret
pushf
xchg
jg
add
test
push
jns
dec
subb
inc
sub
add
insl
aad
roll
ficoml
les
in
or
imul
adcb
fnstcw
aam
xor
push
ja
popf
sub
repnz
mov
dec
loopne
and
mov
push
inc
jecxz
fadds
mov
mov
repz
adc
sub
jb
add
dec
or
mov
push
sub
mov
aad
or
clc
stos
lea
outsb
and
cmpsl
cmpsb
sub
jg
test
sarb
dec
sub
sahf
cld
js
inc
cmp
xchg
stos
and
or
push
cltd
jmp
or
mov
or
adc
lock
sbb
mov
mov
js
ds
jecxz
jns
int3
add
pusha
push
les
mov
mov
jno
pop
cwtl
stos
outsb
xchg
xor
fsubl
cmp
outsl
movsb
loopne
inc
mov
inc
mov
push
pop
adc
sar
jb
pop
and
jns
in
movswl
or
mov
repz
rol
add
sbb
hlt
sbb
inc
scas
cld
sub
dec
fs
mov
mov
push
das
call
sbb
insl
pop
sbb
sub
sbb
inc
lods
cmp
dec
xlat
fwait
dec
adc
lcall
xlat
push
in
scas
cmp
pop
push
jne
in
clc
sbb
aad
fs
jns
mov
outsb
pop
outsb
pusha
loope
daa
dec
push
or
pop
pusha
lret
cmp
inc
add
add
and
lret
test
bound
loop
sub
ljmp
or
negb
push
outsb
push
jns,pn
xlat
cli
divb
mov
ret
dec
mov
shlb
clc
sub
sub
mov
fcomip
mov
mov
cli
pop
xchg
push
shl
std
pop
rorb
sub
dec
pusha
loopne
add
clc
fnstenv
adc
lock
push
or
pop
aas
imul
sbbb
and
sbb
pop
cmc
push
rol
sbb
inc
lock
sbb
aas
sbb
imul
cmp
insb
cs
sarl
test
mov
sub
rolb
jle
jl
push
or
mov
jg
std
int
cmpl
sbb
ljmp
pop
or
adc
lock
mov
cmpsl
jl
and
inc
add
fisubl
xor
sub
jge
ret
imul
rcrl
mov
lds
add
cmp
rorb
and
or
out
cld
fsubr
inc
mov
adc
jbe
and
dec
add
jae
or
loop
rcrb
insl
in
xor
sbb
call
lds
mov
loop
stos
shrb
or
aad
xor
jne
push
les
push
leave
int3
pop
add
das
hlt
fcomi
pop
pop
ljmp
pop
out
mov
jmp
fsincos
inc
jno
push
flds
mov
sub
jmp
jp
xor
lock
pop
and
mov
loop
in
out
lcall
mov
lcall
call
icebp
mov
movsb
out
stos
loop
outsl
cmp
aaa
adc
mov
loope
inc
add
adc
xchg
or
push
cmp
push
or
or
jmp
add
adc
imul
insl
daa
mov
movsb
movl
dec
sahf
pop
rcrl
leave
ja
cld
or
add
movsl
adc
cmp
mov
cmp
ja
rclb
cli
imul
push
jle
fisttpll
and
push
imul
add
or
pop
mov
mov
adc
icebp
mov
jmp
xchg
pop
int
fdivs
and
fadd
inc
jle
pop
cli
ret
cmpsb
mov
mov
sbb
aas
jecxz
push
push
lcall
popa
je
std
mov
or
add
jg
out
or
jmp
jmp
xor
mov
icebp
dec
imulb
test
xchg
sbbb
inc
pop
mov
std
test
inc
rolb
ljmp
add
das
pop
xor
sub
xchg
outsl
push
hlt
fxch
stos
mov
adc
cmpb
jl
fisubrl
out
mov
int
jecxz
nop
sub
xchg
sbb
clc
inc
inc
cmc
sbb
mov
or
loop
pushl
mov
cli
adcl
sbb
adc
loop
cmp
inc
js
push
and
push
divb
jecxz
std
out
jnp
xor
enter
and
or
scas
add
add
rol
add
add
sahf
xor
outsl
fidivs
or
sub
xchg
fwait
sub
inc
fprem
pop
add
nop
aaa
insb
push
scas
clc
sub
push
dec
sbbb
xchg
shlb
xchg
lods
push
mov
add
jo
rorb
adc
jo
or
test
mov
push
lds
data16
pop
adc
negl
xlat
adc
stc
lret
push
out
push
xor
out
fwait
js
inc
cmc
mov
lcall
mov
mov
mov
pop
loope
adc
in
pop
push
jmp
xchg
add
dec
fwait
add
or
xor
std
lea
push
inc
mov
push
jp
out
inc
cmc
dec
clc
mov
or
add
iret
inc
jmp
dec
sbb
mov
ret
push
and
cmp
mov
dec
rolb
cmpsb
loopne
adc
fidivs
lods
jno
pop
into
and
sbb
pop
cmp
sub
dec
pop
leave
xorb
divb
push
push
xchg
icebp
adc
js
pop
add
adc
movsl
fsubrl
adc
lock
inc
xor
cmp
mov
cli
iret
jg
push
scas
and
icebp
sbb
pop
pushf
adc
xchg
clc
adc
cmp
jg
loopne
loop
loopne
mov
push
mov
mov
mov
sbb
xor
lods
push
loop
das
jl
xor
sarl
test
or
imul
sub
aaa
rcrb
jge
xor
add
push
jecxz
in
in
mov
mov
mov
jbe
hlt
lret
pushf
fdiv
cmpb
mov
pop
dec
hlt
test
or
call
hlt
arpl
mov
jo
rcrb
xchg
sbbb
ljmp
cld
movsb
xchg
inc
scas
decl
pop
adc
loop
in
out
in
and
seto
dec
sbb
and
xor
sbb
mov
inc
hlt
addb
xchg
mov
stos
sbb
dec
outsl
and
xor
xchg
xchg
scas
sbb
jecxz
imul
mov
hlt
cmovo
pop
movsl
jg
add
in
loop
xor
mov
or
add
dec
ja
push
adc
or
mov
inc
xchg
adc
sbb
pop
add
mov
scas
fsts
inc
out
adc
push
pop
xlat
mov
sbb
pop
inc
hlt
push
sub
repz
rol
lods
mov
adc
jp
std
cmp
jg
cld
mov
imul
shrb
adc
xchg
out
inc
dec
pop
or
hlt
nop
push
mov
pop
or
fwait
subb
das
cmpl
jg
pop
mov
pop
push
dec
aas
cltd
and
lods
pop
push
xchg
xor
xchg
repz
mov
sbbb
shl
testb
dec
sarb
stos
pop
sahf
mov
jg
push
hlt
out
pop
push
xor
and
jle
idivb
fistpll
mov
scas
aam
filds
push
roll
cmp
add
lock
or
cmp
adc
and
sbb
add
icebp
inc
cld
cmpsb
mov
push
jno
adc
stc
out
adc
jns
rclb
jno
out
dec
sbb
std
or
xor
pop
fmulp
push
mov
cmp
push
push
push
loopne
mov
or
sbb
js
sub
aam
in
sub
push
cmpb
testb
dec
loopne
std
pop
mov
leave
or
in
adc
bound
jbe
push
fdivrs
icebp
out
cld
fwait
pop
dec
outsl
xchg
hlt
enter
xchg
push
clc
movsl
aaa
ljmp
cwtl
and
repnz
aad
push
or
and
inc
or
dec
cld
or
xor
mov
pusha
adc
fdiv
aas
test
and
pop
jns
dec
test
clc
pop
mov
dec
xor
or
sbb
push
clc
or
int3
push
or
dec
push
jecxz
in
cmc
jb
jge
add
add
lods
jl
cmpsl
or
icebp
les
pop
mov
in
mov
sub
out
shll
repz
jo
in
or
push
pop
test
stos
jl
out
cmp
dec
mov
lods
mov
jbe
jl
rcrb
adc
mov
push
fwait
add
dec
adc
nop
cmp
cld
cli
add
repz
imul
mov
adc
lods
cld
imull
jecxz
dec
inc
loope
test
insl
cmp
iret
rcrb
mov
movsl
inc
or
idivl
shlb
and
cmpsl
push
dec
push
mov
into
es
cld
stc
fdivrs
shlb
push
mov
lret
and
cwtl
fs
and
sub
roll
jle
scas
das
mov
repz
pop
jle
rsqrtps
dec
icebp
ljmp
std
xchg
mov
shlb
scas
icebp
in
xor
pop
or
dec
push
pushf
test
adc
int3
push
loopne
dec
jecxz
pop
rolb
or
inc
push
cmp
inc
inc
fstpl
and
adc
dec
iret
daa
loopne
add
cli
lods
jecxz
mov
jp
rolb
push
jp
call
mov
call
mov
sbb
lea
pop
and
test
sub
pop
lcall
ret
out
shl
jl
mov
ds
or
pop
pop
lock
mov
mov
loopne
fs
xor
and
pop
rcrb
mov
pop
and
dec
sbb
cmp
leave
jp
fldt
call
sub
xor
and
and
mov
loope
aas
mov
pop
push
sahf
pusha
adc
add
call
xlat
push
jge
push
mov
mov
iret
mov
lods
mov
xor
movsb
movl
daa
and
in
and
adc
mov
and
mov
adc
dec
xchg
orb
les
mov
jo
fst
ret
xchg
mov
mov
ja
adc
push
stos
int3
icebp
xchg
cld
lock
jno
cwtl
mov
xor
sbb
cmp
popw
xor
nop
sub
into
jle
data16
into
popa
push
gs
and
add
add
cld
xchg
adc
lea
pop
sbbl
add
fldenv
pop
jb
stos
or
add
sub
cs
repnz
loopne
fsubrs
mov
xchg
loopne
sub
stos
dec
add
fsubl
xor
je
pop
fwait
into
mov
dec
sub
jmp
out
jg
and
xor
sbb
mov
xor
push
xchg
insl
inc
jge
ficoms
xlat
or
dec
mov
jb
add
xchg
sahf
leave
jecxz
or
mov
lods
rcrb
sbb
stos
addr16
rol
sub
pop
jecxz
push
mov
sub
std
pop
dec
ja
lods
jae
lea
sub
sbb
cmp
ja
psraw
mov
leave
lahf
mov
ret
jl
fcomi
gs
dec
pop
outsb
call
imul
xchg
std
and
out
xlat
jae
and
fwait
cmp
popf
cmp
into
sbb
in
icebp
sub
sahf
mov
lods
pop
push
mov
jnp
mov
cmpb
xor
mov
lcall
and
or
mov
imul
mov
cld
pushl
adc
sub
scas
xchg
adc
out
pop
stos
push
rolb
push
and
cli
sub
push
or
sub
ljmp
cld
push
jmp
mov
inc
ljmp
sbb
stos
adc
in
xchg
add
pop
inc
pop
mov
or
mov
pop
sbb
xor
pop
lar
pop
or
test
dec
pop
fsubp
xchg
push
fs
jns
in
enter
shrl
add
or
xlat
movsl
pop
icebp
push
mov
subl
loopne
xchg
sub
out
loope
jae
mov
jae
mov
icebp
xor
mov
rcll
mov
adc
pop
data16
les
or
mov
fisubrs
into
cld
jne
pop
insl
push
add
scas
adc
scas
ja
repnz
or
pop
jno
clc
xchg
lods
popf
sbb
pusha
ror
mov
inc
xorl
and
daa
jmp
dec
stos
and
jmp
add
jbe
addr16
rclb
lcall
cmpsl
imul
jo
sub
loopne
xchg
xlat
js
bound
fildll
dec
filds
xor
iret
mov
adc
inc
lods
push
or
xorb
and
inc
leave
cmp
mov
push
or
add
imul
das
hlt
aaa
cld
mov
ljmp
xchg
arpl
adc
mov
inc
adc
stos
xchg
insl
pusha
in
mov
sbb
inc
js
je
jb
arpl
jae
inc
outsl
insl
fdivrp
idiv
jo
jb
inc
imul
inc
gs
outsl
fs
dec
popa
outsb
call
or
stc
fcoms
imul
popa
fildll
inc
jne
fs
sub
outsl
jae
dec
gs
dec
outsl
outsl
imul
mov
jo
arpl
jne
je
inc
ds
inc
jbe
push
fcomp
fucomi
mov
jne
jns
popa
insb
or
scas
loopne
and
push
je
je
lods
dec
jo
sub
aaa
pop
ja
int
shll
push
in
push
add
insl
xchg
loope
insb
inc
outsb
jae
inc
push
outsb
imul
iret
sbb
dec
gs
jbe
jb
sub
loopne
pop
add
arpl
outsl
outsb
xor
je
sbb
outsb
cli
xor
imul
and
jp
inc
mov
fwait
pusha
outsb
sub
cmp
sub
inc
push
dec
inc
push
sub
push
mov
js
js
inc
insb
push
imul
cwtl
dec
jae
ret
sbb
js
rcll
sbb
jbe
jns
push
jns
push
sub
sub
mov
decl
insl
pop
popa
test
repz
jo
je
push
mov
ljmp
inc
in
push
or
outsl
jb
data16
repnz
xchg
xor
cs
push
adc
jae
cmp
xchg
ja
add
push
dec
xor
add
shr
inc
push
dec
add
pop
or
loopne
nop
dec
stc
add
add
add
fbld
js
adc
push
ss
pop
inc
pop
add
sti
cmp
inc
sarl
sbb
or
adcb
adc
test
jmp
int3
sbb
scas
mov
shrb
mov
xchg
orb
add
mov
sahf
add
xlat
add
sub
insb
jae
negl
dec
sbb
dec
daa
mov
jg
shrb
fs
popa
dec
shlb
jae
arpl
xlat
ficoms
mov
lahf
or
lock
les
push
mov
sti
pop
xchg
rdtsc
or
aas
cmp
or
dec
adc
adcl
dec
adc
das
mov
add
add
pusha
mov
lea
movl
push
jmp
rclb
add
loop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
adc
dec
add
mov
