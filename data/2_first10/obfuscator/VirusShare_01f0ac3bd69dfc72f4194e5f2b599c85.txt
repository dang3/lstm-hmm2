jg
or
add
mov
lret
repz
sarb
imul
cmp
mov
repnz
in
mov
lret
mov
or
dec
pop
cmp
sub
cmp
fldz
mov
icebp
mov
movl
mov
pop
aaa
in
sti
cmpsl
mov
mov
sub
lock
jg
pop
sub
mov
pushf
pop
mov
add
rolb
mov
jnp
sub
cmp
sbb
add
js
imul
jg
adc
sub
bnd
ret
rorb
add
push
adc
cli
rclb
out
imul
into
add
imulb
push
add
cmp
pop
rorl
adc
sbb
outsl
int
sti
sarl
mov
lock
mov
adc
rolb
adc
mov
or
in
imul
mov
lret
adc
lock
or
pop
testb
shl
xchg
or
push
add
sub
cmp
dec
mov
or
mov
add
push
mov
test
pushf
add
fwait
xor
sub
mov
mov
sub
adc
cmp
pop
sbb
rcl
insb
idivl
sub
mov
inc
add
or
add
push
or
inc
je
add
sarb
jl
cmp
adc
lock
mov
sar
loop
mov
mov
or
mov
inc
sbb
insb
or
add
clc
mov
add
inc
add
loopne
mov
rcr
sub
sub
mov
or
data16
adc
adc
push
aaa
push
sbb
out
cs
insl
mov
adcb
ret
mov
roll
push
adc
adc
add
inc
data16
repnz
mov
aam
add
add
or
incl
pop
push
loop
fucomi
dec
add
add
mov
push
pop
mov
ret
repnz
fs
or
pop
sub
js
push
lods
outsb
pop
dec
sbb
stc
sbb
sub
jo
insb
jl
or
lcall
sbb
inc
cli
lock
das
shrl
pop
ret
nop
leave
jle
idivb
leave
sbb
andl
xchg
xchg
add
insl
xorl
out
fidivrs
push
shr
in
lcall
mov
in
or
or
ds
movsb
adc
or
out
sbb
mov
inc
jae
inc
cmove
xchg
push
push
dec
sbb
repnz
pushf
int3
xor
lea
or
pop
sbb
out
xchg
adc
cwtl
pop
movsb
scas
test
aad
pop
adc
add
xchg
xor
mov
lods
jle
cmp
push
mov
dec
pop
or
push
pop
mov
push
or
or
add
and
jl
mov
imul
sbb
mov
negb
adc
aam
and
rcrl
je
xor
jno
or
bound
insl
cmpsl
out
dec
scas
push
mov
leave
or
xor
sub
lret
xlat
adc
mov
push
mov
ret
daa
push
mov
icebp
xchg
mov
cmpsl
mov
cmp
lock
incl
fcmovb
je
rcl
ss
ss
sbb
pop
push
aas
xor
sbb
stos
or
daa
sbb
imul
add
in
push
add
or
cmp
subl
cmp
fadds
insb
mov
adc
sbb
sarb
mov
cmp
sub
mov
xor
add
shl
not
push
mov
mov
xchg
clc
or
add
fsubrp
ds
mov
cmpb
sbb
add
pusha
pop
push
and
xchg
cmp
push
insb
rcll
call
push
pusha
shlb
and
xor
and
test
dec
mov
mov
xor
clc
xor
jge
push
lcall
jne
sub
out
lods
mov
outsb
test
adc
test
out
fld
mov
push
sbb
mov
cmp
rcl
fisubl
push
loop
sub
test
mov
movsb
mov
mov
loop
test
repz
mov
aad
jbe
sti
sbb
adc
rorl
mov
pop
adc
jbe
dec
imul
push
mov
stos
mov
sbb
pop
std
xor
movl
or
push
inc
fs
add
mov
mov
adc
push
mov
adc
adc
mov
pop
ret
add
sub
shrl
sbb
cld
sbb
push
insb
imul
js
jnp
inc
adc
pop
xchg
mov
push
xchg
add
movb
push
mov
ss
pop
adc
mov
cmpb
jle
or
or
mov
adc
or
push
add
jnp
mov
xor
testb
mov
push
sarl
sbb
sbb
fdivr
ret
pop
mov
mov
jge
stos
add
insb
ja
mov
cmc
cld
ret
sbb
or
js
mov
xor
mov
sub
adc
or
adc
pop
push
loope
lock
sahf
sbb
pop
push
mov
adc
add
cmpsb
rcrb
mov
popa
sbbb
cmp
decb
push
inc
nop
ret
dec
shlb
roll
clc
ljmp
xor
inc
pop
lea
or
push
xchg
cmp
sbb
jl
push
add
mov
and
fiaddl
ret
insb
xor
mov
push
add
push
cmp
add
sbb
or
push
mov
push
push
or
mov
fdiv
ret
sbb
sbb
mov
mov
or
and
add
loopne
icebp
mov
add
mov
ror
cmpsb
adc
jp
xchg
ret
push
and
ds
cs
sbb
adc
or
sbb
sbb
and
subl
cmpb
mov
lds
push
negb
push
loop
add
and
sbb
aam
iret
xorb
mov
les
sub
pop
pop
test
test
or
inc
push
xor
montmul
cmpsb
ret
icebp
mov
cmp
add
jns
adc
data16
test
inc
in
mov
lret
mov
insl
imul
or
int
cli
lret
cmp
ljmp
push
sub
cmp
stos
roll
mov
push
lock
mov
test
and
or
push
rclb
fidivrs
ljmp
jo
rorb
popa
scas
push
inc
rorb
rclb
pop
xchg
and
push
and
xchg
mov
push
mov
adc
adc
mov
popa
inc
lock
sbb
movb
add
sub
stc
sub
jmp
pop
sub
adc
adc
push
xor
test
jo
lock
cmp
pop
movl
adc
xchg
sbb
sub
sarb
jge
test
mov
ret
dec
in
test
add
jp
push
add
jae
cld
or
cli
mov
push
adc
pop
jmp
mov
inc
mov
test
fs
adc
adc
repnz
in
push
popa
jne
rcrb
jo
add
out
pop
mov
xchg
stos
mov
sbb
adc
adcb
sub
push
xor
ljmp
bound
cmp
js
loop
add
repnz
adc
test
dec
or
sbb
xor
xchg
xlat
roll
xlat
or
mov
mov
into
movsb
rcrb
div
cmp
mov
lea
pop
jne
jns
jle
cmp
cli
movsb
push
outsl
adc
cmp
xor
lock
adc
push
adcb
or
add
and
add
mov
jbe
cmp
ja
fadds
lods
or
or
add
adc
sub
pop
add
pusha
clc
mov
or
mov
aam
inc
adc
cli
and
repz
shl
mov
jno
push
mov
jge
adc
mov
push
or
cli
mov
cs
pop
mov
sbb
xor
js
mov
test
movb
leave
pop
add
unpckhps
fsubr
sbb
int3
dec
jo
lds
jg
sbb
sub
sbb
dec
jbe
cld
call
ret
cmp
mov
pop
add
adc
mov
jg
add
inc
mov
push
sub
sbb
out
rcll
dec
into
mov
sub
mov
pop
push
pop
cmp
add
push
push
sbb
push
sti
push
push
shlb
push
mov
mov
jo
imull
shll
add
pop
sbb
cli
lret
jo,pt
hlt
push
subb
sbb
outsb
mov
mov
jmp
mov
or
enter
inc
pusha
str
nop
sbb
jne
js
addl
repnz
clc
jl
xor
mov
popf
mov
cs
out
and
and
mov
aam
sub
mov
icebp
push
popl
cmp
pop
leave
ret
add
pop
incl
mov
mov
pop
sarb
ret
scas
sbb
add
cwtl
adc
rcl
insb
icebp
sbb
orb
mov
adc
xchg
xchg
jecxz
cmp
and
cmc
mov
xor
aam
out
push
mov
push
pop
lcallw
mov
sti
in
sbbb
incb
lock
test
loopne
jmp
add
xor
jno
add
adc
das
orl
or
pop
testl
dec
cwtl
fsubrl
sub
push
adc
shl
push
push
xor
lret
leave
in
or
test
dec
negb
pusha
and
jae
inc
rclb
xor
inc
push
pop
daa
add
fs
sbb
sbb
push
or
call
adc
xor
mov
ret
mov
jl
lret
adc
ljmp
and
adc
push
fiadds
in
fcompl
cmp
adc
sbb
in
xchg
in
mov
jle
dec
mov
rcll
imul
and
add
popa
ret
dec
pop
sbb
sbb
rclb
movsb
or
mov
add
into
js
jne
sub
leave
shlb
add
fisttpll
sub
loop
ljmp
sbb
std
out
sub
roll
popa
xchg
add
fisttpl
subl
pop
add
pop
lock
jecxz
push
call
sub
jg
inc
clc
jl
add
adc
add
pushf
inc
addl
ret
fiaddl
push
pop
add
test
and
repnz
inc
push
test
push
ja
xchg
stc
fldl
mov
sti
push
dec
insl
and
mov
sbb
incb
mov
xor
bound
rcr
push
push
xorl
or
hlt
push
dec
adc
adcb
test
outsb
test
xor
adc
sahf
test
loop
imul
or
add
add
mov
nop
addl
jg
sbb
mov
cli
imul
push
push
negl
sbb
scas
cmpsl
cmpsl
xor
sub
addl
xchg
adc
jno
xchg
push
jl
adc
cli
or
and
out
adc
es
adc
adc
lret
sbb
sbb
repnz
inc
sub
test
mov
add
lret
imul
cli
jo
shl
jo
cld
loop
pusha
pop
fdivl
xchg
mov
mov
ljmp
lock
adc
xor
aam
push
or
cmp
and
mov
cltd
and
mov
hlt
or
pop
loope
inc
mov
test
loopne
adc
inc
cmpl
push
mov
sbb
mov
cmp
cmpsb
adc
pop
shll
pop
outsl
sbb
daa
sub
ficoml
adc
jb
in
pop
push
lock
jo
xor
xchg
insl
and
mov
jmp
test
ret
pop
jb
and
sbb
int3
movsl
pop
sbb
rorb
and
push
xor
jl
mov
outsl
fs
or
adc
xchg
adc
testb
mov
sub
push
sub
nop
cs
sub
inc
jae
xchg
sub
cli
pop
in
adc
push
cltd
outsb
cwtl
adc
das
in
nop
rcrl
ret
and
ds
loop
icebp
roll
lds
mov
mov
jp
or
bound
xchg
ret
sbb
pop
xor
jb
movb
js
push
je
sub
nop
test
xchg
iret
lret
or
iret
hlt
das
sub
hlt
and
lea
mov
mov
roll
and
xor
or
and
jo
repz
js
js
hlt
inc
rclb
sbb
bound
add
test
mov
adc
xor
dec
xchg
or
cs
nop
add
mov
lods
mov
sbb
push
mov
dec
sub
xchg
sarl
push
mov
or
icebp
in
jp
adc
shll
mov
cmp
mov
mov
sub
add
sbb
mov
popf
push
xchg
leave
mov
xchg
lods
or
stos
and
push
xchg
stos
jle
jbe
xor
fdivl
arpl
stos
mov
cmpsb
cmpsl
mov
sub
imul
test
sbb
cmp
leave
sub
ficomps
pop
pop
call
xchg
dec
daa
fldt
mov
inc
mov
push
add
push
stc
and
adc
ljmp
adc
sbb
or
or
jbe
aas
shrb
push
cmc
add
sbb
pushf
dec
dec
shll
fadds
cmp
adc
sbb
pop
lcall
or
sub
adc
inc
or
mov
shl
xchg
mov
call
or
sub
or
pop
push
pop
push
xor
push
ret
add
add
sub
mov
icebp
jle
push
orl
mov
cmp
cmp
xor
sbb
ljmp
and
push
outsb
xlat
ret
gs
iret
dec
addr16
or
cmp
xor
dec
jns
test
push
xchg
test
call
outsb
in
sbb
mov
add
push
cmp
adc
pcmpgtb
aam
or
add
cmp
jmp
inc
rolb
cmp
push
push
pop
fs
test
sbb
cmpsb
pushf
int3
adc
pop
pushf
xrelease
subl
adc
mov
arpl
add
scas
adcl
rolb
orb
mov
loope
movsb
lock
testb
loopne
xor
adc
jl
loope
subb
sbb
or
outsb
ret
jb
loopne
leave
add
movsb
test
push
add
push
bound
andl
push
ljmp
adc
or
add
or
push
push
adc
icebp
lea
dec
jns
jg
mov
fadds
ret
ret
sbb
add
xchg
ret
outsb
aaa
int3
enter
sbb
out
push
add
rcll
mov
lods
in
loop
xchg
rcrl
adc
and
and
mov
dec
or
or
sub
or
ret
jge
imul
popa
icebp
mov
xor
dec
or
pop
addb
jne
leave
sub
repnz
mull
push
adc
and
fimuls
lret
jo
stos
rorb
orl
rorb
cmc
inc
or
aam
ds
leave
loopne
inc
add
outsb
test
push
add
rcrb
push
in
xor
cmp
adc
push
xor
add
stos
scas
cmp
push
mov
jno
mov
xlat
inc
jl
sbb
sahf
xchg
cmpsb
test
or
add
clc
push
add
adc
adc
js
cli
cmpl
les
lret
jmp
or
push
and
mov
call
dec
or
adc
ljmp
clc
sbb
sub
cmpsl
push
sub
xchg
rcl
sbb
fimull
pop
mov
adc
fs
push
or
out
ret
xor
cli
sbb
sbb
inc
adc
push
loope
pop
inc
cli
push
or
adc
jne
lds
ljmp
lods
scas
fists
idiv
adc
adc
xchg
sub
or
test
into
sbbb
adc
jl
les
mov
pusha
sbb
test
and
loope
adc
icebp
ja
push
add
ljmp
insb
inc
adc
mov
rorb
pusha
lds
inc
fwait
in
pop
xor
mov
and
nop
adc
add
add
pop
mov
or
rcrl
mov
add
sub
ss
loope
cmpl
jns
out
mov
inc
push
les
sbb
data16
bound
jbe
pusha
sti
adc
loop
mov
sbb
sub
or
push
mov
daa
add
addb
ljmp
mov
adc
into
test
mov
adc
xor
jo
ljmp
or
pop
mov
test
das
mov
rolb
pop
and
fimull
xor
jmp
cmp
mov
rol
mov
out
or
into
or
clc
inc
adcb
lret
add
add
es
ret
push
sbb
call
repnz
and
jl
add
or
mov
sub
mov
icebp
ret
popa
and
or
lcall
inc
cmp
pop
ljmp
inc
icebp
push
push
clc
or
ret
loopne
hlt
push
movb
mov
add
sbb
icebp
push
pop
fldenv
shlb
int3
push
or
cmpsb
loope
cs
adc
inc
inc
fnstsw
xor
push
dec
roll
orl
inc
adc
enter
sub
push
push
mov
add
sahf
inc
push
push
xor
sub
push
add
mov
cmp
or
divb
xchg
popa
and
shr
push
jbe
xor
ljmp
mov
lods
loop
xor
or
push
popf
pop
rolb
lods
push
insb
ret
in
mov
add
add
sbb
sub
jle
or
pop
cltd
std
and
jbe
jo
into
cmc
push
jecxz
xor
sub
lret
dec
sub
pop
mov
mov
cli
jns
and
arpl
sbb
push
xor
sahf
hlt
ret
inc
xchg
mov
enter
or
in
lret
and
jle
movb
popa
in
mov
inc
rclb
sbb
test
push
loope
cli
nop
js
lea
shr
shlb
mov
lods
add
mov
stc
mov
movsb
inc
push
lock
lcall
xor
loop
or
adc
mov
xchg
add
push
insb
mov
push
pop
adc
or
out
and
xchg
or
bound
push
mov
cwtl
dec
sbb
cmpsl
adc
jae
mov
pop
mov
int
movsb
add
xchg
add
xchg
rcll
jmp
or
std
sub
or
sarl
notb
loop
dec
or
pop
lods
sbb
gs
xorb
ret
and
xchg
jb
xchg
dec
add
pop
mov
sub
lock
mov
popa
nop
cmp
loope
xor
das
adc
maxps
call
push
xor
mov
inc
jo
jns
cs
mov
loop
push
pop
mov
pop
push
mov
mov
sbb
push
add
mov
div
add
xlat
dec
dec
clc
out
je
jne
mov
or
fwait
and
adc
push
mov
xor
push
outsl
pushf
aam
sahf
dec
mov
dec
mov
outsl
mov
and
or
sub
xchg
and
jp
inc
add
loop
lods
fnsave
push
into
in
mov
or
clc
jmp
mov
add
test
push
add
or
push
aaa
cmp
dec
lret
cmpb
sub
scas
pop
dec
bnd
scas
push
lock
ds
sub
stc
pop
js
add
dec
jbe
mov
sahf
add
push
inc
cmp
shr
rcll
shrb
mov
outsl
shrb
and
shrl
add
or
mov
and
inc
or
pop
clc
loope
mov
dec
loopne
mov
dec
pop
int
jecxz
pop
dec
sub
in
cmp
outsb
adc
loope
call
push
push
add
mov
push
mov
shl
arpl
or
mov
shr
icebp
jmp
rcrl
pop
dec
cli
add
rolb
cmp
or
or
xchg
rorb
inc
sbb
or
push
and
js
add
jge
jmp
and
pop
pop
or
data16
mov
adc
int3
lods
sahf
add
xchg
add
enter
loope
test
push
loopne
movsl
push
gs
mov
int3
xorl
jb
nopl
add
daa
rol
adc
xchg
pop
inc
and
push
pushf
rorl
loope
imul
xchg
push
push
jns
lret
or
addb
ret
cmpsb
xchg
pop
push
or
or
rcrl
jmp
rcrb
js
or
mul
out
nop
inc
jl
shrb
add
jne
sbb
sub
pop
lcall
sbb
add
add
jmp
lock
popa
imul
addr16
dec
daa
cli
rol
lods
sbb
add
movb
jnp
jae
popa
jnp
sbb
push
shlb
adc
ljmp
lods
loopne
mov
notb
std
into
into
mov
js
popf
or
xor
imul
pop
rolb
scas
add
xchg
inc
push
xor
loopne
rcll
pop
loopne
sub
sub
mov
mov
xchg
cwtl
outsb
sub
add
jb
pushf
js
in
xor
sub
or
movsb
bswap
rcrb
test
inc
dec
jb
lock
cmpl
ret
push
mov
xchg
mov
jb
cmp
movb
ds
data16
call
sbb
sbb
jnp
lock
into
jmp
enter
add
cmp
or
sbb
icebp
mov
jl
add
ds
mov
push
push
lods
je
cli
push
jno
xor
inc
or
inc
sbb
pop
inc
dec
dec
roll
push
daa
mov
mov
mov
add
pusha
add
scas
or
push
cmp
je
subb
pop
add
pusha
hlt
mov
shrl
in
xchg
jo
aad
push
sbb
dec
add
or
sahf
out
sbb
call
add
dec
int3
in
shll
sub
add
inc
jp
push
lahf
cmpb
push
ret
sti
push
or
mov
or
fadds
pop
aam
cmp
mov
add
mov
sub
push
call
push
mov
lret
mov
inc
mov
jbe
jge
and
mov
icebp
pop
push
pop
cld
ljmp
push
in
xchg
and
cmpsb
int
sub
sub
lret
lods
or
dec
mov
pop
add
ljmp
and
movsb
stos
or
ret
pop
and
es
stc
push
jo
ret
cmp
ror
test
xor
js
int3
push
adc
push
jp
arpl
addb
dec
ss
sub
adc
xchg
mov
sbb
leave
adc
mov
and
into
dec
lret
xchg
dec
and
call
rcl
test
ret
sbbb
out
and
add
adc
and
jo
into
icebp
sbb
inc
test
fsubrl
push
jne
sbb
setae
dec
pop
cmp
bound
rolb
push
mov
and
imul
sarb
ljmp
andb
lret
push
call
sbb
push
sbb
movsl
xchg
push
inc
mov
dec
rorb
mov
imul
adc
test
aad
and
mov
pop
rcrb
insl
jb
movsl
push
lahf
out
jge
push
inc
andb
push
push
xor
iret
sbb
sbbb
add
or
push
sbb
inc
imul
xchg
cmp
les
rolb
pop
inc
pusha
test
xchg
lock
loop
cmp
push
pop
add
enter
push
inc
mov
sahf
and
adc
rcrb
jmp
push
cmpl
or
xchg
jl
push
sbb
adc
xchg
js
or
stc
add
xchg
in
or
add
lock
test
ss
test
fists
or
jmp
popa
cli
daa
dec
push
adc
adc
push
adc
or
pop
pushf
int3
or
loopne
add
add
and
mov
jl
pusha
movsl
test
cwtl
loopne
xchg
sub
ret
sarb
sub
sbb
add
sarl
jo
sti
enter
dec
pop
sub
dec
mov
fldz
adc
push
push
inc
jecxz
addl
or
xchg
mov
ljmp
shrb
ret
cli
inc
pop
loop
add
push
push
jo
dec
test
adc
pop
cwtl
rorb
jo
push
push
mov
or
xor
adc
shll
stos
aaa
dec
adc
xor
inc
rcll
cmpsl
sbb
rcll
mov
cmp
stc
add
leave
push
pop
sbb
pop
push
jp
pop
pop
or
push
mov
fidivrl
shrb
or
cmp
popa
xchg
into
sbb
test
mov
adc
push
add
mov
sbb
andb
mov
push
cld
and
mov
iret
xchg
push
inc
das
add
enter
and
push
data16
imul
cmp
bound
mov
jl
sbb
xor
and
addb
loopne
sub
mov
test
and
call
xchg
divb
mov
mov
and
dec
push
pop
push
cwtl
add
cmpb
pop
and
jl
scas
test
stos
jmp
add
in
push
int3
jo
dec
mov
xor
dec
test
jo
rorb
sbb
lret
int3
sub
jmp
push
xor
push
sbbl
add
outsl
mov
jo
int
orb
and
add
insb
and
push
mov
adc
iret
add
lock
ffree
add
jbe
push
icebp
adc
inc
and
fdivs
dec
shl
icebp
push
adc
sahf
pop
inc
xor
or
popf
call
pop
cli
into
adc
cli
jae
add
loope
or
add
sub
out
dec
lods
lahf
xchg
lahf
mov
mov
test
cs
push
and
inc
push
mov
loopne
sbb
push
stos
aaa
test
adc
and
or
xchg
or
push
dec
cmp
or
jmp
nop
test
jge
dec
sbb
jo
repz
fcmovb
add
in
inc
push
stos
xor
pop
movsl
jbe
clc
pop
faddp
and
icebp
movsb
adc
adc
sub
xor
pushf
mov
rcll
or
call
add
orl
popf
test
shlb
test
loop
das
inc
and
daa
sbb
dec
jo
adc
sbb
xchg
push
les
mov
hlt
in
out
adc
cwtl
je
stc
add
aam
and
pop
pop
lods
icebp
push
clc
adc
mov
sbb
mov
or
gs
addr16
sbb
dec
cmp
call
jge
lock
adc
es
push
push
add
add
js
adc
lock
stos
sbb
ret
mov
movl
adc
lahf
icebp
popa
shl
stc
sbb
push
mov
sbb
jo
adc
js
inc
dec
insb
mov
push
shlb
push
inc
mov
adc
enter
jo
add
xchg
rorb
or
inc
or
cmp
cmp
test
push
push
push
enter
push
inc
rol
mov
outsl
sarb
dec
insb
sub
and
cmp
es
dec
or
insb
sbb
xor
sub
in
inc
sbb
mov
lock
mov
sbb
cmp
add
push
mov
lods
dec
dec
rolb
push
inc
or
adc
pop
ljmp
insb
jb
bound
cmp
sbb
dec
mov
sub
aad
test
or
ljmp
sahf
sbb
test
inc
mov
adc
sub
inc
cmp
stos
lahf
shlb
dec
cmp
push
push
sbbb
dec
js
mov
fidivl
pushf
rcrb
repnz
cmp
pop
les
push
jmp
or
enter
add
adc
xorl
push
pop
ror
int3
sbb
and
je
stc
pop
mov
xor
push
jne
sbb
push
mov
pop
adc
jle
ret
fidivrs
movb
cmp
xchg
lods
or
fs
jb
add
sbb
or
sbb
mov
xor
mov
xor
pop
test
mov
cmp
jecxz
fcomps
icebp
pop
rol
filds
mov
fstp
ficomps
sub
push
cmpsl
enter
adc
cmpb
mov
and
test
sub
mov
and
add
loopne
movsl
dec
ret
adc
adc
pusha
jge
shll
sbb
push
mov
pop
addr16
addr16
push
aam
add
movb
sbb
mov
adc
pop
data16
pop
cmp
mov
push
xchg
pop
test
movsb
cli
or
test
mov
xor
push
mov
jns
dec
fdivs
mov
add
sbb
bound
mov
or
hlt
dec
xor
jo
rolb
add
jo
sarb
gs
sahf
movsl
jecxz
jp
or
lcall
sub
and
or
les
pop
mov
pop
je
test
or
push
ja
lahf
xor
pusha
push
movsb
lret
sbbl
adc
stos
pusha
sbb
imul
pop
loop
rcr
push
xchg
rolb
or
and
jno
rcrb
inc
pavgw
pop
ljmp
mov
inc
jecxz
scas
into
sbb
or
add
rclb
fwait
mov
lock
xchg
sbb
call
jle
and
mov
dec
jecxz
and
push
inc
ret
and
or
push
add
or
cmc
and
cltd
xchg
lock
and
and
test
roll
push
sbb
mov
cmp
ss
cmp
ljmp
sbbl
push
hlt
jl
jno
test
das
mov
sbb
jb
std
mov
adc
shrb
jmp
cmpunordps
add
dec
pop
out
or
cmp
push
push
sub
popa
add
push
pop
inc
test
adc
cwtl
adc
and
xchg
xchg
mov
jb
sbb
dec
loopne
or
in
lret
jmp
mov
dec
js
inc
jmp
pop
mov
subb
xchg
mov
pop
test
xor
sbb
es
lock
xchg
movsl
ds
sbb
or
add
pop
mov
rcrb
sbb
shrb
notb
bound
cmp
mov
repnz
jl
sbb
nop
jge
sub
add
in
iret
push
es
adc
dec
pop
pop
xor
lock
lea
pop
xchg
movsl
or
dec
adcl
or
add
or
stos
pop
add
jle
aam
xchg
mov
insl
adc
adc
mov
es
pop
mov
dec
xchg
shl
cmp
adc
ret
xlat
negl
add
mov
jp
out
cmovp
adc
inc
rorl
xchg
lods
cmpsl
jne
xlat
movb
js
sbb
stos
and
rcrl
lods
add
mov
dec
divps
jb
push
gs
sbbb
or
or
cmp
push
dec
stos
imul
jmp
lcall
pusha
stos
rcrl
loopne
in
rcrl
or
into
insb
adc
lock
push
xorl
ficoml
push
fisubrs
pushf
shrb
sahf
xchg
adc
ret
in
pop
pop
iret
sbb
or
sbb
lahf
test
push
and
scas
mov
pusha
adc
cmp
out
dec
push
lods
in
out
add
add
lods
les
lea
adc
lds
inc
negb
inc
shlb
pop
sbb
mov
movsb
jo
pop
test
pop
rol
notb
pop
sub
cmp
push
pushf
dec
sub
fisubl
fmulp
aam
mov
mov
or
mov
cmp
decl
lods
pop
adc
jmp
addr16
add
sbb
mov
xchg
lcall
bound
das
jge
push
push
adc
add
cwtl
mov
or
or
les
mov
pop
lret
cvtpi2ps
cli
push
xchg
test
adc
into
xchg
inc
inc
adc
into
scas
test
adc
sbb
and
pop
mov
xor
js
adc
or
and
xchg
cmp
lcall
stos
ja
test
push
enter
ret
pop
push
fld
jo
and
ja
icebp
pop
repnz
xlat
shl
inc
jbe
testb
les
pop
lock
lods
pushf
push
pushf
das
adc
cmpsb
xlat
sbb
lret
repnz
xor
jp
ret
cmpsl
mov
iret
adc
pushf
into
mov
adc
and
out
mov
pop
hlt
jle
push
test
cli
subb
dec
mov
jp
or
jl
xlat
mov
loop
mov
xor
dec
push
insb
jle
rclb
xchg
add
and
sahf
adc
or
loope
xor
sub
or
mov
ds
jb
push
mov
cmp
leave
xchg
lcall
mov
je
lock
adcb
xor
movb
cltd
sbb
pusha
scas
xchg
sbb
sbb
adc
loope
dec
sbb
and
fidivl
mov
in
outsb
push
mov
push
or
jae
mov
lcall
stos
sbb
jl
loope
cmp
je
cmp
push
adc
or
addl
sub
imul
ret
shlb
dec
cmp
mov
retw
add
inc
push
pop
pop
int
mov
pop
mov
and
sbb
rorb
movsl
fucompp
pop
rcll
jecxz
into
aam
fcmovbe
dec
xor
adc
call
or
add
or
inc
rcll
inc
sub
add
mov
push
mov
mov
cmpl
loope
fistps
push
into
mov
imul
ljmp
cmp
push
popf
jecxz
jbe
xchg
cmp
cmp
cmp
aaa
lock
popa
push
loope
mov
enter
and
cs
rolb
pusha
sub
mov
sub
xor
ret
pop
sbb
nop
mov
push
test
push
bound
fs
inc
cmp
jo
sahf
mov
and
xchg
sub
or
loope
sub
jle
push
addl
push
cmp
jg
or
or
ret
pop
ljmp
incb
test
clc
sbb
jge
les
inc
pop
fiadds
jecxz
lods
jo
in
cli
or
fcoms
xlat
sub
and
aam
and
push
adc
push
mov
shl
jp
adc
sub
xor
adcl
push
push
push
xchg
js
jmp
add
jecxz
sub
jecxz
lea
clc
push
adc
lds
shr
mov
les
mov
cmp
clc
cli
add
xor
mov
out
sub
rorl
pop
in
push
push
or
adc
lock
jno
or
lds
popf
fmuls
les
push
pop
enter
out
sub
push
pop
inc
mov
push
rcrb
pop
mov
adc
add
pop
loope
adc
pop
add
cwtl
sbb
adc
sub
push
sub
xchg
add
sbb
push
sbb
or
les
outsb
aad
rorb
add
xchg
mov
sub
dec
hlt
shlb
pop
lods
add
push
mov
jmp
add
lahf
sahf
clc
dec
pop
pop
jnp
add
ss
add
sbb
int3
call
std
xchg
fcompl
adc
pop
mov
xchg
mov
cli
add
cmpsl
pop
rolb
icebp
xchg
add
inc
cs
push
stos
scas
adc
andb
add
add
js
int3
mov
add
test
outsb
sbb
repnz
dec
xchg
mov
adc
mov
sub
stc
and
mov
sbb
decl
mov
push
or
sahf
nop
cmp
and
je
dec
add
pusha
fimuls
nop
pushf
ljmp
push
stc
pop
push
dec
inc
sbb
add
or
stos
clc
rorb
test
or
add
iret
dec
imul
sbb
loope
or
mov
xchg
xchg
xor
in
bound
mov
sbb
cvttps2pi
rolb
inc
add
adc
sub
aaa
in
sub
clc
mov
enter
stc
imul
cli
push
xchg
stos
add
dec
pop
mov
cmp
rorl
sub
push
cwtl
mov
clc
pop
dec
xorb
push
cmp
repnz
adc
mov
mov
rolb
push
clc
push
adc
jbe
push
xchg
xor
sahf
imul
aaa
push
adc
mov
movsb
push
xchg
movsl
out
adc
add
popa
or
lock
mov
push
movsl
loopne
mov
add
mov
sahf
rorb
pop
test
push
xor
ret
imul
lock
or
dec
jno
shld
mov
inc
adc
mov
push
arpl
lret
into
out
push
and
push
push
stos
cmpl
and
in
or
inc
call
xor
adc
in
mov
shlb
daa
pop
pusha
dec
int3
add
inc
sub
add
call
sar
mov
push
dec
insl
sbb
add
add
add
cwtl
sbb
sti
adc
aas
test
sbb
pop
aaa
nop
or
inc
stos
repnz
dec
movsl
add
xchg
icebp
or
mov
lahf
arpl
add
mov
hlt
sbb
pop
outsb
icebp
xor
subl
pop
mov
adc
or
cmc
jecxz
aad
ljmp
add
sti
or
jo
or
les
adc
mov
lea
rorl
push
push
mov
gs
movsb
adcl
xor
shlb
cmp
or
or
loope
cli
cmp
jne
sub
cmp
cld
and
popa
rolb
pop
mov
mov
incb
lea
shlb
stc
add
mov
leave
sahf
je
lods
in
add
adc
inc
inc
cmp
jecxz
sub
or
imul
sbb
push
xor
sbb
xchg
rorl
es
dec
sub
push
xchg
ljmp
or
and
pop
loope
mov
cmc
mov
inc
bound
add
pusha
aam
test
jo
adc
adc
add
inc
ficomps
or
bound
push
jle
movsb
and
xlat
faddl
pop
scas
lods
pusha
aad
fsubs
add
push
loopne
dec
cmp
mov
clc
push
sbb
mov
sbb
cmp
fs
in
stc
fs
add
addl
jno
add
mov
or
sti
imul
cmp
push
mov
push
xor
pop
fmul
dec
mov
loope
das
mov
daa
call
xchg
cmp
add
push
jp
inc
push
aas
jecxz
or
shrl
sub
mov
hlt
sbb
push
and
adc
add
js
lret
int3
or
loopne
test
dec
inc
add
mov
rolb
pusha
pop
sub
fcoms
inc
push
sub
add
call
into
adc
push
sub
leave
dec
add
sarl
jb
dec
push
inc
aam
or
adc
mov
or
push
adc
xchg
cmp
sqrtps
or
mov
adcb
or
xchg
les
jbe
push
xor
movsl
mov
push
addl
mov
rcrb
xchg
add
xchg
in
sbb
push
mov
xchg
loop
cli
push
scas
bound
aam
xchg
fsubs
pop
shlb
adc
inc
mov
add
add
mov
or
icebp
cmc
dec
pop
je
shlb
add
dec
rcrl
mov
add
xor
or
mov
sahf
lret
push
push
hlt
scas
rcrl
sbb
sbb
add
daa
ds
inc
les
nop
fistl
mov
inc
and
add
test
mov
cs
add
clc
or
adc
cmp
inc
rolb
or
sbb
mov
in
mov
xor
xchg
movsl
nop
xchg
jge
lcall
sbb
mov
repnz
test
push
cmp
xor
mov
sbb
add
inc
sub
sbb
mov
push
jp
cmp
mov
dec
hlt
pusha
dec
push
into
in
inc
rorb
nop
lret
pop
inc
loop
shlb
and
ss
push
imul
xor
xchg
test
push
or
xacquire
push
mov
xor
sbbl
mov
add
sub
imul
inc
adc
lcall
aam
in
test
sbb
mov
sbb
push
mov
dec
js
xchg
enter
jl
aam
and
fs
sub
or
jae
add
or
adc
enter
fsubrl
int3
pushf
pusha
icebp
ret
mov
push
dec
pop
les
rcrb
roll
and
or
sbb
or
xor
sbb
js
lock
push
push
lods
add
cltd
ds
add
sub
or
int3
sbb
or
loope
lcall
fsubrs
cli
jne
and
xor
jo
push
scas
jne
xchg
xchg
js
dec
adc
ret
mov
lock
fwait
xor
push
pop
mov
cwtl
xchg
xchg
call
hlt
mov
lock
sbb
mov
sbb
cmpsl
pop
and
pop
or
dec
movsb
xor
leave
icebp
addb
mov
cmp
push
or
dec
xchg
int3
div
hlt
cmp
lcall
xor
scas
mov
loop
add
fnstsw
pop
mov
pop
pop
out
or
mov
xchg
in
xor
jb
js
jecxz
inc
icebp
mov
inc
shll
pop
ljmp
dec
cli
cmp
bt
pop
pop
jl
les
les
stos
push
push
mov
xchg
ret
repz
leave
cld
stc
adc
aam
or
dec
ljmp
pop
dec
add
mov
add
xchg
cli
push
mov
ret
xor
add
mov
and
call
push
ret
cmpsl
lcall
int3
jns
push
adc
inc
das
rol
jecxz
insl
adc
dec
dec
xor
xchg
add
icebp
or
mov
or
mov
sbb
rorl
cmp
cmp
jg
sub
mov
sub
sbb
dec
lods
shll
iret
push
fyl2x
inc
pop
sbb
sbb
adc
pop
and
cs
sbb
cmp
push
sub
nop
push
mov
or
pop
or
je
sbb
mov
xor
sbb
jo
hlt
and
adc
push
das
loope
fisubs
sti
adc
pusha
sbb
lret
orl
inc
push
cwtl
shlb
mov
push
and
aaa
pusha
pop
test
test
es
repnz
sub
adc
cmp
push
repnz
cwtl
sbb
loopne
lret
mov
cmp
lods
or
sbb
push
xor
sub
enter
adc
push
or
ficoms
jecxz
das
jno
dec
adc
stos
pop
out
rclb
lock
sub
add
sarl
sbb
mov
push
push
lea
lods
sub
sbb
cmp
pop
pop
adc
sti
mov
push
mov
test
pop
pop
cwtl
inc
lods
rcrl
and
das
pop
or
lods
add
sub
add
xor
mov
aam
loope
sbb
or
ds
loop
fdivr
sbb
cld
xchg
int3
xchg
cli
jb
mov
push
stos
lret
ret
mov
dec
in
into
ja
inc
sbb
add
sub
pop
push
mov
add
push
pop
ret
ja
cmp
ror
shrl
and
ljmp
pop
loopne
xchg
icebp
and
inc
in
call
lods
clc
sbb
test
sbb
inc
pop
and
jecxz
push
inc
dec
lock
inc
loope
loopne
bound
cmc
outsb
out
mov
xor
pop
mov
sbbb
loop
sbb
clc
sbb
mov
ljmp
mov
sub
sahf
enter
mov
cmp
call
inc
mov
xor
sbb
lods
movl
js
rolb
nop
paddusw
rcrl
dec
fsubrl
inc
sarb
push
push
popf
pop
adc
not
test
adc
pop
testb
add
pop
adc
adc
mov
adc
das
mov
hlt
adc
push
ret
lds
push
adc
xor
add
dec
insl
rcl
push
push
adc
scas
and
adc
iret
inc
or
xchg
rcrl
bswap
xchg
sbb
or
pop
push
or
xchg
or
cmp
mov
cmpsl
pop
aam
ror
lcall
clc
in
scas
and
add
adc
sbb
adc
cli
je
sbb
orb
mov
mov
jl
dec
adc
rcrl
cld
xor
hlt
adc
adc
push
mov
push
sub
mov
and
repnz
cmp
cmp
sbb
xlat
xor
cmp
and
mov
popf
jno
cs
cmp
push
jmp
push
inc
add
dec
jb
mov
inc
lods
movl
xchg
dec
push
push
xor
add
xor
mov
jae
mov
pop
leave
test
push
adc
push
shlb
addr16
xor
jg
sbb
add
xor
clc
popf
leave
xchg
xor
push
call
cwtl
test
mov
jp
mov
sahf
adc
ret
dec
mov
rorl
fmul
or
mov
pop
add
repz
aas
sbb
sbb
and
stos
xor
push
pop
mov
mov
xchg
sbb
rcrb
xchg
push
mov
push
ljmp
or
xchg
xchg
adc
or
inc
pop
in
outsl
ret
out
sar
inc
leave
icebp
inc
sbb
xchg
xchg
movsb
ret
jmp
mov
sub
add
cmc
push
enter
jo
mov
clc
ljmp
into
pop
lret
mov
adc
xchg
sbb
dec
mov
aam
test
sub
jo
push
push
test
sub
mov
rorb
les
xor
into
or
bound
push
inc
push
fnsave
push
or
shlb
add
mov
ud2
mov
lret
mov
push
mov
pop
sbb
push
cwtl
sbb
jmp
test
sub
enter
add
enter
in
out
aad
cmp
dec
into
loop
cld
or
jmp
add
into
imul
jne
fsts
push
mov
xchg
cmp
int3
roll
push
in
shl
rolb
out
mov
add
cmc
jne
pushf
add
sbb
adc
mov
add
stos
enter
mov
mov
add
inc
cs
les
sbb
add
rcrb
cli
aad
add
mov
aad
mov
push
inc
lea
cli
pop
mov
hlt
rcll
or
lods
sbb
imul
mov
pop
int3
call
push
xchg
mov
lock
cmp
pop
fadds
rolb
mov
adc
cmp
fdivrl
push
xlat
add
inc
push
sub
daa
jmp
adc
add
pushf
push
or
mov
push
inc
rcl
lock
push
mov
and
pop
enter
xor
cmp
mov
call
movsl
push
xor
cld
test
shl
sub
loopne
and
sbb
shl
sbb
out
jo
add
mov
aaa
iret
push
dec
shlb
negb
test
addl
cmc
shrb
loopne
mov
mov
test
mov
ss
subl
sub
loope
test
testb
add
jmp
push
int3
xchg
mov
sub
jp
add
fs
cli
xchg
in
lret
mov
pop
mov
es
test
dec
xorl
cmp
mov
jg
xor
pusha
fsubrp
mov
cmp
adc
gs
pop
dec
xor
js
push
inc
inc
cli
pop
inc
inc
push
or
mov
dec
push
movsl
mov
xchg
mov
push
lods
dec
enter
ds
and
loopne
leave
pop
or
insb
inc
pop
js
xchg
pushf
push
sbb
add
andb
ret
icebp
pushf
jmp
les
xor
sbb
in
fwait
and
in
nop
jmp
mov
adcb
mov
pushf
adc
xor
xchg
sbb
add
nop
pop
dec
sahf
push
es
fs
pop
adc
or
fiaddl
sbb
dec
clc
push
pop
cmp
xor
push
aas
adc
js
cmp
sub
push
mov
inc
test
je
xor
jb
or
fs
sahf
andb
cwtl
adc
cli
sub
test
shrl
ret
lods
rclb
adc
add
xorb
adc
enter
or
jg
stc
shlb
push
pop
dec
pop
and
add
mov
leave
je
or
or
cs
fldl
xor
pusha
lret
stos
scas
inc
es
or
or
mov
sub
adc
dec
sarb
or
fnstcw
push
pop
or
jmp
stos
sahf
add
or
xchg
sbb
adc
scas
or
sub
xchg
ror
test
ficoms
pop
sub
cmp
and
sub
fistps
subb
lock
or
sub
xchg
xor
pusha
stos
jl
mov
into
pop
call
daa
add
sbb
nop
loope
lock
dec
add
test
ja
add
stos
or
pop
adc
ja
add
add
or
xchg
inc
jne
test
push
xchg
pop
sub
dec
push
fmuls
cmp
jb
or
add
mov
jns
or
jno
push
xor
or
pop
cmp
adc
cmp
sub
jo
fisubl
test
add
out
enter
jmp
aas
jmp
pusha
into
inc
pop
es
xchg
adc
pushf
mov
ret
sub
dec
jecxz
inc
pop
mov
cmpb
stos
push
or
jg
adc
push
ficoms
cli
mov
add
pop
loope
rcrb
notb
mov
dec
xor
adc
inc
daa
loop
cwtl
xor
in
and
fwait
enter
ret
inc
sbb
pushf
or
push
xchg
adc
andb
pop
adc
loopne
fisubs
shrb
push
adc
pop
and
loop
lret
xor
movsl
aam
mov
pop
mov
jmp
mov
add
mov
add
adc
sbbl
fisttpll
call
or
pop
push
cmp
sbb
push
stos
push
mov
jo
sub
sbb
mov
sub
pusha
std
ljmp
arpl
or
mov
aam
add
add
lock
addb
mov
leave
into
or
xchg
mov
push
icebp
and
lret
or
add
xchg
mov
adc
push
les
ljmp
cmp
mov
int
ljmp
xchg
or
mov
jo
and
btc
xor
pop
sbb
cmpsl
cmpsl
jo
push
ljmp
or
fsubr
push
fs
xchg
pusha
mov
stos
lds
xchg
enter
test
add
push
push
xor
xchg
imul
add
adc
xchg
inc
pop
push
pop
sub
xchg
ljmp
and
sbb
sbb
add
jecxz
adc
sbb
shll
inc
or
lcall
and
mov
add
inc
into
mov
cmc
xor
in
adc
stos
addl
and
lea
das
fisubl
sarl
cmp
rorb
push
mov
or
rorl
je
hlt
jmp
or
add
or
mov
outsb
and
jl,pn
or
adc
es
push
inc
cmp
in
cmp
pop
and
hlt
imul
testb
shlb
pop
inc
rorb
inc
sub
cmpsl
adc
adc
adc
lea
mov
jb
add
scas
inc
push
pop
mov
mov
jl
mov
push
les
mov
push
pop
movsl
test
lret
adc
mov
jo
movsl
or
jo
ds
sbb
add
mov
popf
inc
pop
gs
mov
pop
insl
or
clc
test
inc
add
add
or
pusha
cmpsb
lds
fldt
cltd
jl
or
sbb
divb
out
loopne
lcall
pop
scas
pop
sbb
ror
inc
movb
mov
adc
roll
xor
pop
shlb
push
inc
gs
fildl
jne
push
cmp
push
or
pop
cli
je
out
or
push
enter
or
inc
in
add
push
cli
inc
pop
push
rclb
push
adc
sbb
fcmovbe
ret
mov
popa
inc
pushf
mov
bound
mov
subl
pop
movsb
je
push
dec
adc
shrb
inc
cwtl
lods
and
sbb
and
inc
pop
outsl
out
and
inc
jns
adc
in
bound
adc
addr16
jnp
xor
lods
add
jnp
loop
ficoms
add
jae
mov
into
cmpsl
push
sub
push
xlat
or
dec
lods
mov
pop
ret
inc
mov
sub
push
js
shl
add
xchg
sarb
dec
pop
xchg
loope
dec
or
add
mov
aam
sbb
pinsrw
dec
jp
xor
inc
add
xchg
cli
xchg
adc
sbb
lret
andl
rol
shlb
mov
and
jae
cwtl
and
add
lret
stos
cmc
pop
aam
dec
or
and
cmc
test
sub
mov
popf
pop
inc
daa
pusha
inc
cmp
xchg
jmp
je
mov
ret
inc
lcall
dec
add
jne
xor
je
daa
in
adc
call
sbb
shrb
jo
or
addl
in
push
aaa
lret
or
mov
rcrb
and
pushf
jbe
stc
mov
cmp
adc
pop
inc
lret
xchg
pop
cmpl
xchg
pop
arpl
ror
loop
rclb
cli
mov
sbb
add
push
xor
test
push
adc
call
cs
jbe
inc
loopne
or
sbb
add
scas
pop
ljmp
or
dec
mov
out
je
pop
and
stc
sub
bound
xor
add
sub
pusha
push
push
xchg
push
mov
out
pop
mov
xor
fsubr
and
dec
add
inc
jnp
rol
adc
mov
inc
add
rolb
pop
pop
push
mov
cmp
call
test
sub
dec
xchg
xchg
add
adc
pop
dec
pop
push
adc
sbb
dec
pop
push
icebp
pushf
sahf
sbb
and
gs
test
adcl
push
inc
mov
inc
pop
loopne
mov
inc
pop
fisubs
aad
inc
or
scas
add
inc
mov
push
sub
imul
in
and
adc
mov
lock
adc
adc
or
js
repz
push
sbb
ret
ret
rolb
lock
add
and
ret
sbb
adc
pop
mov
lods
or
pop
hlt
aam
xor
addb
mov
add
sbb
loopne
cmp
ret
and
jl
push
xchg
or
xchg
mov
movsbl
pusha
jp
daa
inc
sbb
mov
pushf
mov
dec
loopne
push
ljmp
lods
cs
or
sbb
xchg
xchg
inc
adc
mov
in
dec
gs
lock
jo
sbb
nop
nop
mov
fimull
or
or
sub
dec
mov
cmp
sbb
xchg
shrb
dec
lret
mov
aam
mov
jno
xchg
sbb
sbb
call
sbb
inc
imul
aas
dec
pop
lods
push
stos
cmpsb
or
fs
jo
jne
stos
dec
jmp
pusha
and
testb
subl
and
push
idivb
outsl
in
inc
iret
int
ret
call
in
adc
hlt
leave
mov
push
jl
xor
sub
sbb
add
test
add
nop
lcall
ss
sub
lea
lcall
mov
add
jo
stc
inc
enter
push
sub
sbb
inc
sbb
sub
add
ret
dec
adc
or
movl
inc
bound
ss
and
xchg
jb
xor
js
adc
add
in
cmp
pop
or
loop
lock
popf
imul
push
arpl
jmp
sub
jecxz
bound
pusha
cs
xchg
dec
call
jno
subb
inc
jno
dec
fdivrl
cmp
add
leave
mov
adc
mov
in
scas
hlt
jmp
sarb
dec
mov
sbb
xchg
fstps
xor
push
ret
add
andb
pop
rcrb
out
rcl
mov
arpl
rcrl
pusha
jg
xor
adc
mov
adc
inc
mov
inc
imul
cmp
xchg
push
push
adc
xchg
ret
sbb
adc
leave
mov
and
adc
shrl
test
out
add
pop
in
pop
loopne
push
mov
cmp
cmp
outsl
mov
adc
jp
sbbb
inc
fnstcw
loop
xor
add
nop
es
not
fsts
xor
push
addr16
pop
test
cmp
movsb
push
adc
adc
das
sar
or
cs
nop
dec
mov
jl
adc
mov
sbb
push
lods
mov
sbb
jae
pop
and
xchg
xor
loopne
mov
daa
pop
jne
mov
rcrb
aad
lret
pop
sub
fdiv
pusha
repnz
dec
add
mov
pop
sub
and
or
sbb
andl
les
and
push
pushf
out
add
out
mov
mov
cwtl
push
jo
or
call
cmp
adc
jns
pop
dec
mov
movsb
aam
or
jmp
ret
mov
adc
fs
sub
pop
enter
rorb
lds
movsl
push
addr16
out
lds
mov
inc
add
js
mov
leave
stos
mov
jb
mov
test
mov
clc
dec
ret
lahf
gs
fwait
sub
jmp
jmp
loopne
loope
add
push
mov
in
pop
push
mov
rol
dec
cmp
add
xchg
mov
addb
je
mov
add
ljmp
mov
xchg
lret
dec
fsts
jb
or
push
cmp
sbb
add
jb
out
and
add
mov
jo
dec
int3
and
xchg
rolb
into
lods
sbb
movsl
push
dec
movsl
xor
xchg
aam
loopne
pop
stos
add
or
xor
inc
inc
addr16
cwtl
test
cmp
adc
loope
xchg
popa
imul
push
call
roll
out
mov
xor
sbb
data16
cmp
mov
or
pop
adc
add
adc
cmp
cs
icebp
cltd
mov
or
push
push
js
xor
imul
ffree
pop
sbb
push
jne,pn
sahf
mov
sbb
loopne
call
adc
push
mov
and
sbb
clc
ficoms
mov
rcll
dec
push
sarl
add
sub
cwtl
and
sbb
pop
sbb
inc
loop
xchg
lea
xor
or
push
lods
cmp
or
add
push
stos
dec
xchg
jmp
inc
xchg
mov
dec
pop
ret
add
iret
or
xor
xor
out
sahf
push
dec
push
inc
cld
test
rorl
rclb
cmp
xor
mov
sbb
pop
ret
mov
sbb
sbb
or
adc
sub
sbb
sbb
out
sbb
arpl
add
imul
cwtl
pop
adcl
jo
nop
add
pop
mov
or
add
sbb
pop
sbb
xor
jp
push
pop
push
xchg
and
je
pop
out
lret
cld
lret
std
lret
push
cmp
jecxz
jnp
repnz
sarb
push
push
xchg
push
and
pop
and
mov
lock
sbb
pusha
lea
orb
call
or
jle
jo
rcrb
xor
xchg
add
jmp
inc
mov
pop
mov
fsubl
mov
mov
ret
ret
leave
fs
enter
adc
daa
push
cmp
adc
call
push
popa
add
sub
mov
sbb
test
pop
aam
ret
cmp
call
cwtl
push
dec
cmpsb
dec
mov
and
sahf
cmp
sbbl
stos
add
addl
push
mov
or
adc
sbb
rcl
cmp
shlb
pop
adc
into
mov
incb
push
sub
adc
mov
pop
sbb
inc
adc
adc
and
fcmovnb
and
mov
dec
inc
sbb
into
sbb
mov
loop
push
je
pop
fcoml
roll
icebp
loopne
sub
push
mov
and
push
jp
sub
sbb
aaa
add
or
ret
dec
add
les
in
sbb
or
loopne
sub
pmovmskb
inc
inc
pop
imull
or
fs
inc
pop
adc
nop
in
and
or
enter
ljmp
sbb
repnz
movb
pusha
jl
jp
int3
rol
mov
xor
sbb
push
and
pop
xorb
xchg
add
scas
sbb
push
pop
jg
sub
or
ret
in
xor
xorl
lea
pop
testb
jg
faddl
mov
cmpsl
xor
lock
arpl
adcb
xchg
sub
xor
rclb
stc
lock
mov
add
push
sub
loope
popf
cmpsb
pop
sbb
xchg
mov
sbb
push
cwtl
adc
xor
jp
clc
inc
jmp
cmp
pop
pushf
imul
clc
push
fwait
or
mov
mov
adc
stos
mov
or
test
pop
inc
repnz
and
push
cmp
fidivs
or
loope
cmp
push
xor
sbb
add
mov
jecxz
pusha
lret
lds
pop
xchg
pop
xor
mov
adc
and
daa
add
push
lods
mov
mov
sbb
test
adc
sbb
and
imul
inc
and
aas
aam
scas
repnz
movb
andb
or
cmp
inc
mov
test
mov
popf
mov
repnz
mov
adc
xor
ficoms
mov
pop
jmp
test
sarl
inc
mov
push
xor
lret
mov
cld
shrl
push
sub
cmpb
lock
mov
shlb
xchg
ljmp
adc
sub
mov
je
xorb
adc
js
hlt
xchg
mov
inc
cmp
xor
decb
and
push
ljmp
loop
dec
inc
and
rclb
or
jmp
mov
push
cs
out
repnz
mov
adc
into
jne
push
scas
push
jb
nop
inc
adc
fmulp
movsl
pusha
pop
test
jo
and
and
mov
sbb
lock
mov
cmp
mov
cwtl
addb
popa
xchg
scas
push
push
sbb
iret
inc
mov
jge
ret
fs
jno
sbbl
insb
jbe
lods
pop
test
push
or
xor
pop
add
xor
mov
mov
add
and
je
dec
and
push
xchg
push
mov
mov
fs
jmp
push
test
xchg
aam
add
jl
mov
xchg
lock
lock
add
jl
test
dec
xor
cli
test
sbb
push
addl
jmp
loop
mov
movsb
loope
shr
lret
sarb
shl
mov
mov
cld
and
dec
sbb
mov
jmp
int
pop
jl
nop
cmp
mov
mov
pop
mov
pop
rclb
mov
cmp
dec
rclb
push
adc
push
sbb
aam
nop
jno
add
or
icebp
inc
js
sti
jl
inc
cmp
shr
stc
clc
lock
shll
or
shl
cmp
sarl
jno
sbb
push
mov
add
lock
push
add
cli
sahf
sbb
aam
call
mov
add
jbe
mov
adc
xor
sbbb
mov
mov
lret
addr16
and
push
ret
or
push
add
adc
scas
push
enter
add
mov
in
popf
add
push
cmp
sbb
gs
sbb
add
dec
mov
push
xchg
mov
ret
mov
mov
je
addr16
rclb
add
shlb
out
xchg
aaa
xor
push
sbb
sbb
push
mov
push
ret
sub
adc
xor
jo
mov
push
ret
subl
push
fstl
test
es
mulb
lock
aas
adc
rolb
adc
mov
sub
repnz
mov
cmc
pop
push
xchg
sbb
popa
sbbb
pusha
xchg
pop
push
add
int3
loope
add
or
nop
inc
cmp
inc
rorb
push
ds
sub
lock
xchg
aad
hlt
mov
sub
call
or
cmp
mov
jne
xchg
fs
les
sub
daa
call
or
test
movsb
mov
out
and
aad
or
unpcklps
and
icebp
xor
call
jl
xchg
mov
sbb
sbb
fidivs
in
adc
mov
lock
jb
mov
ret
add
sub
mov
add
cmp
mov
mov
push
hlt
lret
and
les
ss
dec
sbb
sbb
inc
testb
xor
popf
pusha
xchg
ret
bound
in
popa
loopne
jae
xchg
enter
loopne
pop
mov
das
cwtl
xor
movsb
pop
xchg
scas
inc
inc
mov
sbb
add
dec
loopne
or
movsb
imul
ds
je
push
int3
cmp
sbb
repz
imul
xor
add
mov
nop
push
xchg
sbb
push
pop
test
dec
lods
dec
sub
mov
gs
xchg
push
loope,pn
or
test
out
sarb
push
rdtsc
cwtl
je
cwtl
lret
rolb
stos
testb
dec
fimuls
or
xchg
scas
inc
mov
adc
adc
lock
fbld
push
push
push
pop
addl
inc
mov
or
nop
adc
push
or
add
pop
or
pop
nop
lret
ljmp
adc
inc
scas
or
ret
and
rclb
adc
ret
adcl
scas
pop
rorb
adc
mov
test
mov
jne
adc
call
clc
pop
add
sbb
dec
xchg
sbb
out
imul
cs
mov
push
repz
fcomp
jo
push
or
ss
test
clc
into
lea
adc
xchg
sbb
rorb
das
or
aad
sbb
aad
sbb
mov
insl
mov
mov
add
hlt
les
sbb
jmp
int3
js
sarl
xchg
adc
stos
shlb
adc
lock
nop
mov
sub
xor
sub
mov
hlt
xchg
sbb
push
and
ret
pop
push
push
insb
shrb
and
stc
sub
pop
addr16
bnd
ret
or
mov
sub
sub
pop
push
rorl
cmp
add
adc
dec
pushf
sahf
sub
mov
inc
add
sbb
push
adc
xlat
cmp
test
add
push
enter
add
and
sbb
rorb
scas
testl
push
mov
int
sub
rclb
mov
dec
sbb
popl
test
adc
call
xchg
stos
or
in
dec
sbb
int3
or
add
mov
stos
pusha
adcl
frstor
or
mov
shrb
sbb
cmp
in
add
arpl
jb
lcall
push
cld
mov
out
add
and
gs
jo
pop
adc
movsb
addb
xchg
sbb
dec
mov
adc
aam
js
or
sbb
fisttpl
outsl
in
rol
and
xchg
scas
loopne
xor
mov
mov
mov
sbb
cli
dec
sbb
push
aaa
pop
je
dec
cmp
push
dec
push
aaa
je
push
cltd
add
popa
and
or
orb
je
cmp
ljmp
scas
sub
cmp
lods
jbe
or
lock
jae
clc
clc
xchg
mov
sbb
sbbb
or
dec
leave
adc
pop
sub
in
jl
sbb
or
imul
fiaddl
insl
xchg
dec
sub
pop
scas
xor
push
cmp
adc
xor
sbb
xchg
inc
or
outsb
enter
lock
invd
iret
mov
cwtl
pop
pushf
or
or
or
adcb
clc
add
push
cmp
mov
sbb
and
mov
sarb
imulb
add
cmp
add
addl
scas
test
outsl
mov
dec
je
xchg
add
jo
popf
jne
cmovbe
and
xor
or
inc
bound
cmp
daa
jmp
cmp
jl
dec
rclb
add
movsl
cltd
test
and
adc
mov
mov
cmp
add
jge
cltd
loope
add
mov
jmp
adc
roll
jo
frstor
mov
adc
ret
rolb
sbb
lea
cmp
lcall
cmp
or
mov
aaa
bound
dec
insl
popf
dec
nop
enter
adcb
insl
push
rolb
insb
insl
mov
addb
ds
int3
mov
ljmp
cld
push
sbb
movsb
inc
js
lcall
test
push
cli
xchg
jle
adc
xchg
push
pop
pop
cmp
push
inc
jo
lods
inc
cli
or
adc
leave
sub
xor
cs
or
or
jp
leave
xchg
shll
rol
add
pop
adc
loope
insb
nop
cmp
xor
adcb
pop
sbb
and
lret
lahf
rcrb
icebp
pop
lahf
pop
cmpsl
stos
pcmpgtb
arpl
sbb
aam
out
cmp
add
or
sbb
or
jo
outsl
pop
cmp
mov
test
add
icebp
adc
imul
push
and
loop
dec
xor
pop
subb
sub
or
fs
cmp
sahf
jo
add
popa
out
add
fadd
lret
jecxz
cmpsl
sbb
imul
dec
xor
xor
fstl
cmp
rolb
add
ret
jmp
pop
sub
cld
jo
add
add
xor
subl
shrb
add
and
or
ret
orb
add
and
xlat
dec
or
clc
lods
push
daa
arpl
sbb
lock
bound
js
sbb
ret
dec
sub
aam
test
sbb
into
aaa
jno
shl
sbb
ret
mov
cli
push
push
pop
stos
pop
rclb
or
aas
imulb
cltd
test
mov
jnp
rorl
and
or
add
cmp
inc
xchg
cmp
mov
jge
in
inc
adc
push
cmc
jp
lods
enter
rclb
fs
cmp
incb
enter
daa
outsb
mov
or
ljmp
movsb
sahf
and
mov
cli
test
inc
js
fiadds
mov
mov
or
add
pop
pxor
add
push
add
enter
push
ret
inc
negb
push
adc
lcall
dec
mov
cmp
call
loop
cwtl
add
xor
insl
lds
or
insl
mov
adc
cmpsb
or
into
adc
inc
add
xlat
or
repnz
push
ret
outsl
mov
or
movsl
repnz
cmp
adc
xchg
sahf
or
ret
hlt
test
js
mov
or
js
jp
and
xor
adc
adc
enter
mov
jno
adc
xchg
rorl
or
test
add
and
xor
je
in
cmp
inc
cwtl
loope
test
aas
shlb
mov
adc
daa
sbb
mov
push
adc
cmp
or
sbb
cmovae
mov
inc
add
cmp
push
pop
mov
adc
hlt
imul
adc
ss
push
jp
aas
icebp
xchg
cli
adc
in
mov
pusha
xor
xor
mov
pop
sbb
ja
lret
or
fcomps
dec
or
sub
dec
add
adc
sbb
sarb
or
xchg
icebp
loop
shl
push
faddl
out
getsec
or
and
cs
jmp
mov
jl
mov
adc
xchg
add
or
adc
adcl
enter
mov
and
inc
ds
push
pop
pop
jl
test
add
adc
mov
lods
push
dec
jno
jne
and
dec
pop
sbb
inc
out
add
xchg
push
inc
push
call
or
sbb
sub
adc
jmp
stos
test
xchg
inc
dec
jge
push
sbb
and
push
sub
lods
cwtl
push
jp
lods
sbb
sub
sub
call
xchg
cmc
mov
or
jo
add
adc
roll
rcrb
lods
or
sti
test
lcall
xchg
sbb
mov
movsl
sbb
cwtl
lret
push
sahf
sti
mov
push
mov
ja
cmp
loopne
push
inc
jecxz
lea
add
xlat
outsb
rorl
aam
mov
pop
int3
pop
jp
mov
xor
xor
sbb
inc
mov
xchg
sub
pop
sub
jp
loopne
fsubrs
and
fiadds
outsl
imul
adc
test
adc
ss
pop
cmp
popf
push
pop
pop
adc
pop
inc
outsb
cs
pushf
and
jmp
inc
movsb
fbld
nop
dec
inc
xor
ljmp
lds
dec
add
push
add
xor
mov
orb
int3
add
or
push
test
cmp
xor
in
pop
or
dec
shlb
pop
cltd
or
or
push
les
shr
inc
mov
add
addl
add
sbb
or
fstps
icebp
ficoms
shlb
scas
into
push
ljmp
inc
rolb
or
sub
adc
int
xchg
jo
xchg
add
rorb
push
stos
mov
faddp
or
loope
cwtl
pop
xchg
mov
push
mov
rol
add
mov
loopne
jo
in
sbb
push
push
mov
mov
mov
dec
push
push
adc
ss
pushf
sub
and
mov
or
adc
adc
mov
sbb
sub
push
pop
or
pusha
lahf
fistpl
xchg
add
sbb
push
or
fisubs
scas
mov
or
mov
adc
mov
xor
xor
mov
cmpsl
je
aaa
clc
push
mov
inc
xorl
push
je
mov
push
inc
bound
sbb
and
jo
out
repnz
or
add
shlb
xchg
and
inc
sub
adc
add
sbb
sub
xor
push
add
xchg
or
adc
ret
cmpsl
and
icebp
add
and
sbbb
fwait
movsl
dec
roll
or
mov
rorb
pushf
movsb
mov
or
mov
jmp
sbb
mov
jle
sub
add
mov
pushf
push
dec
mov
pop
push
andb
sbb
lds
loope
mov
mov
adc
dec
or
lret
in
adc
xorl
movsl
add
jbe
inc
sbb
cmp
pop
mov
sub
mov
jp
or
dec
xchg
add
sbbb
scas
xor
add
test
push
and
daa
mov
add
rclb
cmpsl
adc
mov
shll
or
xor
incb
xor
pop
sbb
or
mov
push
jnp
test
ret
orb
fwait
mov
cmpl
fucomp
or
sub
jno
mov
movsb
vpunpckldq
mov
loope
pop
shlb
pop
outsl
ret
push
daa
rclb
ljmp
add
xor
je
imul
sarl
mov
cmp
nop
mov
sahf
push
lahf
xchg
js
rorb
int
mov
bound
and
es
cmp
dec
icebp
mov
or
jbe
test
add
mov
sub
xorb
movlps
mov
out
adc
cltd
test
jo
ror
or
sbb
sbb
rorb
insb
pop
inc
or
xor
test
pop
adc
mov
sub
imul
mov
adc
inc
cmp
outsb
xor
flds
push
ret
enter
sub
pop
xchg
daa
inc
push
orb
cmp
ret
je
mov
jae
jb
pusha
and
insl
mov
ljmp
add
or
add
mov
mov
add
and
dec
test
adc
mov
add
and
xor
orl
dec
ret
cmp
add
rcll
pop
add
into
incl
push
mov
enter
aam
inc
pusha
or
adc
xor
sbb
mov
xor
sbb
addb
push
cmp
push
sbbb
or
inc
mov
mov
pop
pushf
lahf
decb
or
ljmp
roll
jno
daa
mov
lods
ret
dec
or
ss
je
daa
test
and
dec
loope
test
les
insl
push
sub
sbbl
mov
mov
mov
push
add
sar
stos
addl
ret
out
cmp
mov
add
or
push
sbb
adc
sbb
sahf
push
push
rcrl
mov
xor
in
and
inc
ret
xchg
loop
sub
mov
add
inc
sub
xor
andl
add
sub
xchg
pop
sbb
loop
rolb
pop
pop
jns
bound
mov
jbe
and
push
pushf
pop
cli
xor
lods
push
push
lods
jne
pop
sub
adc
bound
test
lods
add
inc
jmp
jg
hlt
imul
mov
mov
mov
pop
sbb
push
add
jmp
push
pop
mov
and
mov
aad
icebp
lret
test
ret
xor
popa
insl
mov
dec
xor
data16
or
adc
xchg
icebp
add
movb
sahf
and
inc
jb
popw
push
loopne
add
pop
sbb
mov
adc
outsb
adc
add
inc
inc
cmp
xor
push
push
mov
lock
pop
push
push
sbb
fs
mov
xchg
cmp
icebp
pop
add
leave
stos
faddl
leave
xchg
pop
push
popl
loopne
sub
testb
lods
stos
repnz
cmp
push
lea
test
loopne
test
lods
aad
scas
es
mulb
inc
pop
into
out
out
test
arpl
clc
adc
jno
jmp
out
push
hlt
ss
roll
cli
adc
pop
jl
das
jl
xchg
or
mov
xchg
cmp
or
dec
ret
dec
pop
or
pop
in
inc
xchg
arpl
sub
negb
lock
sub
xchg
repnz
je
es
scas
lods
or
push
push
cld
add
popa
lods
into
adc
push
cs
fwait
pop
inc
leave
xor
into
lock
sahf
push
gs
js
mov
sub
fimull
pop
xor
into
sbb
fdivs
out
dec
rclb
adc
and
mov
ja
inc
and
in
adc
dec
dec
movsb
fadds
bound
clc
add
scas
lea
lahf
inc
or
mov
test
shl
adc
cmp
insb
jns
sbb
dec
xchg
lock
adc
mov
in
std
inc
dec
pop
dec
sub
or
js
test
and
or
adc
sub
jg
push
push
les
push
xor
xchg
add
mov
rolb
push
je
sbb
orb
adcb
mov
or
pop
cmc
mov
add
jp
pop
rclb
inc
aam
xchg
jo
push
and
lods
xchg
faddl
mov
add
or
push
or
fwait
jno
mov
loop
sbb
jle
test
aaa
cmp
push
add
add
jne
js
sbb
insb
mov
fidivl
dec
mov
add
and
rolb
xor
dec
outsb
adc
out
ret
inc
mov
dec
ljmp
int
cmc
jo
jbe
add
nop
mov
push
push
sub
nop
test
clc
fistps
and
mov
je
test
lret
sbb
add
aas
ds
pop
adc
ret
or
xor
add
cmc
outsl
lret
jo
inc
dec
cwtl
mov
sbb
sbb
dec
cmovne
and
xor
bound
je
xor
xchg
lret
or
sbb
dec
add
sbb
mov
inc
inc
out
sbb
lcall
stos
cmp
iret
lea
ss
in
movsl
rcrl
rol
repnz
test
aaa
inc
push
or
pop
add
dec
xor
push
in
repnz
into
dec
pop
rorb
rorl
adc
push
inc
lods
adcl
stos
sub
adc
loopne
icebp
xor
xlat
pop
dec
mov
ret
imul
sbb
add
inc
or
or
mov
add
lcall
setle
rolb
and
enter
hlt
xor
xchg
pusha
dec
sahf
add
loope
add
pop
jmp
pop
sub
push
dec
popa
rorb
add
mov
cld
add
mov
add
mov
aam
adc
adc
jg
leave
adc
pop
subb
add
push
add
add
add
add
stc
and
shlb
js
idivb
fsubrl
pop
or
sub
imul
xchg
leave
es
push
inc
mov
adc
xor
lods
rclb
xor
sub
and
sub
daa
ss
push
fs
testb
add
jmp
mov
adc
adc
add
and
lahf
xor
sub
or
addl
push
insl
shlb
loope
push
or
inc
cmp
stos
mov
ljmp
mov
and
mov
sub
loop
jle
inc
push
push
sbb
xchg
lahf
adc
pop
pop
es
repnz
ret
push
mov
push
push
pop
aas
loop
nop
icebp
push
mov
xor
jecxz
imul
lret
sub
sbb
mov
xchg
adc
adc
sub
sub
sarb
xor
movsl
aad
sub
lock
mov
lock
add
pop
test
cmpsl
lock
push
mov
out
add
mov
push
sbb
fsubr
mov
lock
jge
dec
inc
jecxz
or
pop
je
sbb
pop
inc
cmp
call
out
idivb
mov
add
lods
add
or
les
mull
dec
fadds
in
push
inc
test
and
mov
push
loopne
loope
pop
push
sbb
in
popa
sub
lds
in
sub
inc
xchg
dec
push
mov
test
add
push
cmp
jne
movsb
mov
or
ds
imul
adc
sub
mov
add
xor
imul
add
cmpsl
xchg
push
setp
push
adc
and
rolb
and
andl
out
cltd
xor
test
cmp
sbb
push
xchg
adc
sbb
stos
in
or
pop
js
mov
cs
dec
mov
xor
adc
jo
inc
push
mov
inc
mov
cmpsl
add
push
mov
push
xchg
out
adc
inc
rorb
and
mov
push
mov
call
adc
into
subl
mov
test
sarl
lds
jo
and
sar
loop
mov
sahf
and
pusha
movsb
outsb
or
and
orb
clc
push
scas
inc
inc
lret
cmp
jns
sbb
push
ljmp
ljmp
cli
je
sbb
movsb
xchg
rorb
push
sub
loope
aad
packsswb
mov
pop
pop
pusha
mov
lds
xchg
xchg
cwtl
sbb
mov
sub
jb
xor
dec
push
das
xor
mov
adc
rcrb
adc
xor
in
pop
add
daa
vfrczps
mov
inc
or
insl
sbb
jo
xor
js
es
scas
insb
add
adc
push
push
xchg
hlt
adc
pop
or
push
or
push
sti
mov
call
mov
scas
add
call
arpl
pop
loop
rolb
cmp
mov
mov
or
scas
movsl
repnz
xchg
add
mov
add
lods
lea
outsb
mov
mov
movsl
ss
xchg
add
pop
add
loop
push
lea
movsb
adc
sub
inc
or
dec
and
and
sub
push
dec
rol
orb
jp
sahf
sbb
mov
and
xchg
xchg
pushf
inc
sbb
and
jno
test
into
movsb
sbb
inc
push
lds
das
loope
adc
pop
push
jo
push
addr16
shlb
arpl
test
hlt
push
push
sbb
inc
or
fdiv
cmp
mov
out
in
test
add
pop
jl
mov
lods
inc
push
sbb
mov
xchg
imul
shlb
lods
ds
shl
lods
mov
dec
rcrb
loope
loopne
mov
and
loope
push
cld
pop
enter
cmp
pop
add
mov
mov
add
loopne
leave
or
sub
pop
fmul
or
push
cli
jle
xchg
adc
push
and
push
subb
mov
btr
dec
sbb
add
aaa
mov
sub
ret
mov
inc
mov
in
push
sahf
psrad
push
sub
adc
rcr
mov
cmp
push
jle
cmp
mov
xor
repnz
cmp
cmp
jl
pop
sbb
notb
sbb
pop
inc
mov
ud2
cmp
mov
rcll
lret
lock
adc
pop
rcll
jmp
into
call
mov
push
test
inc
clc
or
jo
xor
pushf
sbb
adc
stos
adc
in
and
push
adc
mov
movsl
test
mov
pushf
add
cmp
lock
fstl
and
pop
das
and
test
cmp
pop
gs
and
push
rolb
jne
sbb
push
mov
cli
add
jp
cmp
mov
add
aad
rorl
add
gs
das
pop
mov
pop
ja
mov
and
xlat
adc
test
mov
xor
leave
dec
add
pop
nop
cmp
push
mov
inc
sbb
ret
nop
lcall
inc
pop
jnp
adc
mov
and
and
xchg
unpckhps
push
nop
cli
out
test
adc
je
add
xchg
xor
shl
subb
test
inc
jnp
test
movl
jp
lcall
adc
dec
adc
and
add
test
and
xchg
pop
pushf
clc
les
add
std
lcall
mov
inc
mov
cmp
mov
lahf
movb
ljmp
pop
xor
ja
sbb
adc
or
adc
stos
or
mov
inc
lods
mov
xchg
push
aam
loope
mov
add
shl
push
inc
push
jb
popa
jg
mov
push
test
inc
inc
sub
push
stos
jae
shlb
sbb
outsb
fs
loopne
lods
push
dec
shlb
mul
mov
xor
cld
pop
push
pop
lods
fs
push
ret
imul
push
xchg
adc
in
mov
arpl
into
pusha
dec
popf
or
inc
adc
in
sarl
movsb
xchg
pop
or
into
into
jle
ret
sub
mov
xchg
lds
or
lea
mov
pop
lods
movsl
roll
incb
xchg
int3
pop
sub
rcrl
push
jo
dec
fsts
iret
loopne
jbe
popf
cli
adc
inc
lret
call
call
ret
out
rcrb
pop
add
cmp
and
ret
sahf
lods
pop
ret
cld
pop
pop
test
add
mov
or
cmpsl
cmp
loope
mov
push
push
test
inc
stos
shll
clc
addb
xchg
arpl
loopne
js
test
and
xchg
cmc
or
jmp
xor
add
cli
push
mov
xchg
nop
and
daa
outsb
leave
add
adc
test
and
scas
icebp
push
clc
add
mov
and
inc
cs
aas
pusha
add
push
sbb
mov
sahf
stc
cli
push
aam
mov
mov
sbb
mov
cmpsl
ljmp
add
lods
mov
dec
test
xchg
and
out
popa
pop
pop
mov
js
or
adc
push
cmp
andb
adc
popf
sbb
push
inc
fisubl
outsl
addr16
cmp
dec
ljmp
sbb
fs
sbb
cmp
inc
dec
imul
and
add
or
pop
loope
and
movsl
mov
pusha
or
sub
mov
adc
and
or
add
orb
cwtl
icebp
popa
rcrb
push
push
cmovns
arpl
and
in
or
cwtl
cmp
cmp
mov
scas
and
ret
dec
lret
adc
cmp
idivb
ret
lahf
xchg
add
add
jle
faddl
xorl
adc
pop
popl
cltd
add
jle
lods
fwait
repnz
out
or
add
or
and
stos
or
xchg
jno
lahf
jg
pop
jge
inc
movsb
xchg
mov
dec
xchg
adc
or
movsb
or
sub
sbb
sbb
lahf
inc
in
push
mov
test
cli
movsl
xorb
and
out
cli
mov
push
xchg
stc
adc
negb
fsts
je
xor
add
and
inc
and
insl
xchg
loopne
pushf
int
adc
push
sahf
cli
cmp
sbb
sbb
in
loope
sbb
sbb
test
push
or
sarb
mov
xchg
sub
inc
popf
push
adc
lret
pushf
or
jo
sub
cli
xor
stos
mov
inc
das
loope
je
sbb
adc
mov
inc
cwtl
test
shrb
mov
das
xor
shl
dec
pop
push
sbb
inc
or
cmp
push
sbb
adc
in
pop
rclb
je
stc
rolb
mov
mov
cltd
add
sahf
pusha
sbb
mov
inc
js
or
lods
inc
sbb
or
in
add
sbb
or
imul
pop
dec
rorb
out
enter
mov
das
jg
ljmp
add
push
lds
add
sbbl
rorb
adc
pop
push
push
add
sub
adc
push
xchg
pusha
mov
inc
loop
mov
mov
jmp
mov
test
jmp
sbb
lsl
xchg
dec
jno
mov
sahf
xor
xchg
adc
add
pusha
or
pop
add
cmp
mov
loopne
push
mov
or
pcmpeqb
gs
sbb
cli
inc
jne
ret
les
daa
jp
sbb
pop
pop
or
call
subb
test
shlb
push
popa
cmp
jb
add
dec
mov
add
fs
test
test
test
jle
mov
xchg
push
pop
cmp
xor
mov
jno
lods
add
es
push
pmuludq
mulb
push
mov
sbb
sub
pop
ljmp
add
lods
and
adc
xor
mov
add
hlt
add
inc
in
sbb
adcl
push
rol
push
mov
hlt
mov
das
sbb
mov
out
call
jmp
pop
jns
clc
or
pop
aad
in
cld
sub
out
mov
leave
push
sub
and
mov
mov
jge
push
push
mov
test
inc
sub
clc
in
jp
adc
icebp
inc
add
mov
sub
imulb
mov
or
test
push
jo
add
adc
inc
or
test
push
adc
shll
shr
das
jb
test
jb
mov
enter
pop
pop
sub
or
jle
mov
enter
stc
shll
mov
cwtl
and
mov
jge
scas
jecxz
adc
ret
and
neg
mov
insl
addl
or
es
add
adc
lods
test
movb
rcl
cmp
lods
out
mov
sbb
cmp
test
lods
addb
or
idiv
or
adc
or
or
mov
jo
loope
je
sbb
dec
jo
mov
xchg
fstpt
outsb
insl
push
lods
lods
cs
push
loopne
mov
popa
or
mov
sbb
fisubrs
dec
sbb
cli
push
inc
pop
sbbb
inc
xor
dec
inc
adc
icebp
dec
sbb
xor
insb
and
shlb
not
pop
jmp
aaa
sahf
pop
push
push
push
fs
aad
jb
rolb
push
push
leave
mov
les
sbb
add
jne
dec
and
cmp
ret
xchg
lret
and
adc
lret
ds
idivl
mov
mov
push
dec
sbb
dec
push
adc
jl
dec
pop
or
imul
insb
xchg
into
hlt
push
loopne
push
add
cwtl
mov
ret
test
push
imul
cmp
inc
sbb
clc
xor
inc
cltd
sbb
pop
jb
mov
pop
mov
stos
insb
push
inc
adc
scas
outsb
cmp
cli
add
les
add
add
inc
inc
xchg
rcl
mov
dec
and
sub
dec
sub
addb
sbb
mov
sbb
adc
xor
ss
nop
rcr
addl
mov
dec
test
mov
lods
mov
push
popa
loope
in
into
shrb
pop
stc
pop
fnsave
jecxz
mov
cs
movsb
and
dec
and
enter
mov
mov
dec
mov
sub
mov
push
aam
push
ret
mov
xor
xor
inc
shrb
lcall
test
movsl
out
and
or
adc
lods
push
scas
imul
dec
jmp
lock
push
or
push
loop
xlat
lods
clc
push
in
push
ljmp
test
or
and
push
inc
mov
add
outsb
lock
jge
outsl
sbb
sbb
sub
std
xchg
test
mov
lock
bound
sbb
imul
sbb
dec
push
lcall
push
adc
leave
loop
mov
cld
sbb
divb
pop
icebp
insl
aam
fs
mov
sub
jl
addb
and
cwtl
xchg
fwait
sbb
or
mov
into
pop
pop
mov
loop
ss
xchg
xchg
insl
xor
mov
icebp
cmpsb
inc
fnstenv
or
in
mov
or
popa
and
mov
repnz
xor
or
stos
add
sbb
push
add
mov
ror
popf
lret
sbb
into
mov
push
sldt
add
xchg
jo
imul
push
fsubp
jmp
adc
ljmp
sbb
sahf
add
mov
movsl
xchg
inc
or
xor
add
sub
or
xorb
or
popa
cwtl
mov
cmp
adc
imulb
arpl
je
daa
ret
add
xchg
loope
xor
xchg
push
ss
push
cmp
mov
mov
inc
sub
xchg
xchg
add
leave
mov
push
call
xchg
xchg
cmc
rclb
sub
adc
add
lock
cli
pop
mov
dec
cs
or
adc
inc
jmp
jo
lea
das
ljmp
cmp
in
pop
pop
dec
push
push
enter
dec
or
xchg
and
cmp
adc
cmp
adc
ret
sbb
xor
push
arpl
loope
incl
js
mov
shrl
js
mov
sbb
sar
cmpsl
xor
pushf
cmp
mov
sbb
pop
adc
push
or
xor
shr
fidivl
pop
shlb
pusha
pop
sbb
mov
inc
mov
mov
xchg
cld
push
sbb
test
stos
and
cmove
loop
addr16
addl
test
test
adcb
add
test
les
mov
add
je
jp
push
aad
hlt
or
inc
les
xchg
sub
mov
inc
or
sub
pushf
and
xor
push
push
adcb
xchg
imul
cmp
inc
lea
or
fcoml
hlt
test
jne
sub
jnp
adc
mov
push
cmp
inc
jne
push
mov
jo
loopne
jb
adc
fwait
add
clc
icebp
xchg
jo
adcb
ret
and
mov
loopne
sub
sahf
xchg
cltd
ds
pop
js
aad
inc
test
push
add
imul
inc
cmp
lret
pop
push
sbb
in
pop
add
lahf
loop
andb
loope
jge
xchg
in
ret
mov
sub
pop
subl
sub
fs
add
popf
add
movsb
sub
adc
rcr
lret
daa
sbb
or
and
movb
sub
aas
mov
push
push
iret
ja
adcb
les
mov
jmp
adc
add
mov
pop
js
push
jb
mov
inc
popa
xchg
bound
pop
dec
and
and
lahf
test
cmc
dec
loope
adc
lret
je
sub
sub
lock
xor
inc
sub
pop
cwtl
xorb
icebp
adc
xor
push
jo
add
dec
mov
add
and
loopne
mov
sbb
inc
or
sbb
dec
add
add
pop
js
call
icebp
adc
cltd
jl
push
jne
dec
pop
pop
add
or
cs
inc
jecxz
lods
inc
push
js
inc
shl
roll
stc
pop
arpl
inc
jl
icebp
das
or
call
or
adc
xor
jle
push
or
popa
data16
aam
test
add
jnp
ljmp
sub
mov
insb
mov
daa
les
jp
add
xchg
xor
xlat
enter
adc
mov
mov
mov
insl
add
hlt
lods
outsl
out
pop
imul
xor
ljmp
add
add
cmp
inc
roll
and
add
ret
sahf
push
or
cmp
rcl
shl
inc
or
ret
lret
xchg
sub
xchg
pop
and
cld
test
adcb
scas
sub
pop
fiadds
pop
rclb
add
mov
add
or
adc
mov
or
repz
je
rorl
dec
imul
xor
loope
push
outsb
add
and
adc
add
into
movsl
out
mov
dec
mov
inc
xor
repnz
add
loopne
push
test
aas
lock
fdivr
pop
and
mov
adc
cmp
imul
jp
ljmp
mov
dec
scas
call
pop
mov
rolb
add
nop
sbb
nop
xlat
ret
fildll
aad
cmp
add
xor
and
jne
cltd
or
sub
daa
test
cmp
cmp
andl
mov
loopne
cmp
outsb
sbb
push
orl
sbb
dec
jl
loope
dec
aam
ret
add
mov
test
xor
adc
lds
mov
add
popa
cmp
cmp
or
shrl
rclb
sbb
les
js
test
mov
movsl
test
pop
and
lock
shl
scas
sub
icebp
adc
xor
shr
leave
or
push
jl
adc
and
pop
aam
jae
sub
dec
push
xor
inc
jle
cmp
xchg
fimull
neg
pop
push
js
rorb
push
add
pop
aaa
pop
mov
js
shrl
jbe
lret
rolb
add
rclb
or
inc
and
loopne
adc
mov
inc
add
sub
div
xor
push
dec
ljmp
dec
clc
push
add
jb
outsl
xchg
push
jne
dec
sbbb
cmpsb
mov
leave
arpl
testb
or
push
rcrb
pop
les
push
cmp
sbb
inc
adc
push
sar
popa
or
loopne
mov
or
dec
cmp
push
das
dec
xor
scas
adc
pop
les
add
sbb
les
mov
call
sbb
das
jno
cmpsb
jmp
hlt
sbb
mov
mov
imul
xor
mov
hlt
xchg
sahf
push
sub
bound
or
rclb
imul
loop
cmp
subb
dec
push
imul
cwtl
mov
push
clc
and
pushf
fcoms
shrd
js
jge
rorl
add
pushf
scas
roll
into
push
rolb
jae
mov
xchg
sbb
test
adc
mov
sbbb
jmp
test
xor
lea
xor
or
inc
mov
js
or
adc
dec
jp
jns
and
dec
into
push
insl
mov
outsb
dec
clc
fistps
lods
push
mov
mov
js
sbb
nop
loop
rcll
mov
shrb
inc
push
xor
clc
clc
jmp
mov
test
xchg
loopne
nop
sbb
aas
rorl
add
mov
test
adc
enter
jle
and
arpl
dec
fistpll
push
mov
test
adc
push
add
push
xchg
loope
inc
faddl
scas
repz
inc
or
cli
ja
ret
or
sub
fadd
scas
xchg
scas
or
mov
pusha
sahf
pop
cmp
mov
or
add
outsl
cmp
xchg
push
or
icebp
roll
lret
shll
dec
or
shll
xor
xchg
fbstp
mov
add
or
adc
sbb
fisubrl
push
sub
dec
sahf
ret
push
fs
popf
push
test
insb
les
adc
cmp
sbb
sub
sbb
aas
jle
arpl
pusha
mov
andb
jl
lret
pop
lahf
add
divb
lret
xchg
and
dec
xchg
adc
mov
je
pusha
add
cmp
daa
popf
insb
fs
xchg
bswap
push
and
lock
aad
and
loopne
hlt
lret
push
pop
popf
hlt
jns
ljmp
and
mov
out
adc
push
push
adc
call
adc
dec
dec
jbe
pop
pop
cmp
or
mov
adc
leave
inc
xor
inc
movsl
call
add
ret
sbb
stos
adc
xor
jl
dec
loop
nop
and
xor
and
aad
loope
in
cli
push
mov
push
push
pop
mov
sbb
les
sahf
mov
inc
push
insl
and
xor
jbe
gs
loopne
sbb
orl
movsb
xorb
add
data16
sbb
mov
add
cmp
add
or
mov
shlb
cmp
adc
mov
shlb
push
push
popf
imul
and
ret
pop
out
mov
or
adc
add
push
hlt
xor
push
dec
or
push
or
pminub
add
xchg
cmc
pop
imul
dec
es
or
imul
arpl
adc
mov
adc
dec
arpl
push
outsb
test
lock
jl
push
mov
dec
dec
inc
jl
adc
push
cmp
add
pusha
imul
inc
sub
push
data16
push
dec
jmp
scas
in
jle
or
mov
cmp
loopne
adc
cwtl
pop
pop
sub
mov
push
jnp
adc
xor
shl
lret
adc
adcb
push
dec
lods
hlt
shl
inc
xchg
loopne
sub
adc
jp
add
and
add
sbb
rcpps
mov
out
enter
js
adc
sbb
hlt
cli
push
inc
pusha
sub
orl
loope
sbb
xor
hlt
cmpsb
lahf
addb
ficomps
rcrb
mov
add
xchg
and
dec
lea
lods
es
push
aad
pop
decb
test
in
add
add
xchg
shrb
xchg
sbb
push
lds
mov
mov
push
sar
lret
sbb
lock
or
mov
jno
sbb
ror
xchg
or
ljmp
fadds
lock
mov
insl
lods
add
dec
push
sarb
arpl
sahf
rclb
leave
xchg
cmp
xor
mov
insb
add
push
adcb
or
dec
jns
mov
add
sbb
into
push
jmp
sahf
add
loopne
lods
rorl
cmp
fld
and
sub
dec
xlat
subb
lcall
sbb
movb
std
add
dec
cli
movsb
xlat
push
lods
cmp
and
mov
sub
addl
rolb
jge
or
movsb
xchg
jbe
icebp
jge
add
bound
rcrl
cmp
xchg
or
pushf
cld
aam
xchg
and
cmp
das
sarl
movb
mov
xorb
push
mov
idivb
clc
call
inc
cs
mov
add
mov
neg
inc
sbbb
push
pop
xor
jmp
aam
les
dec
or
sarl
ficoml
gs
mov
aaa
adc
push
test
pop
loop
sub
mov
xchg
popa
sbb
nop
bound
addb
sbb
inc
les
and
add
loop
sub
ljmp
sub
mov
enter
xor
sub
icebp
movsb
fmull
shr
fsubl
addps
js
xchg
and
and
add
push
cmp
jmp
divl
into
adc
filds
and
js
dec
jae
or
mov
lahf
sbb
pop
dec
shrb
push
ret
enter
test
pushf
fdiv
adc
sbb
adc
mov
lods
dec
js
divb
sbb
adc
mov
ret
adc
inc
ss
test
insb
push
or
pop
or
or
out
and
mov
ljmp
ret
xor
lods
xchg
push
sub
mov
mov
fs
add
or
jge
shlb
loopne
and
popa
jp
jno
iret
ljmp
push
bound
aam
test
jmp
das
dec
test
pop
ljmp
dec
bound
sbb
lret
inc
pushf
jp
rorb
cmpsb
rolb
add
orb
rclb
test
lods
mov
add
call
dec
sbb
ror
mov
push
push
js
push
outsl
xchg
pop
outsb
adc
pop
int
pop
xor
sbb
insl
push
popf
mov
in
dec
cmp
jmp
sbb
inc
or
push
inc
daa
xchg
push
add
push
pop
or
dec
push
shrb
and
mov
das
lock
push
hlt
in
fsubr
rol
xor
or
nop
xchg
aam
jp
push
lcall
and
pop
xor
xchg
divl
test
mov
and
sub
cmp
outsb
rcrw
cs
add
inc
cmp
test
das
adc
adc
push
pop
inc
mov
mov
xor
lea
xor
adc
push
fnstenv
fcoml
mov
nop
gs
mov
push
pop
fcmovnbe
lcall
or
jo
xchg
rcrl
std
pop
inc
jo
stos
or
mov
jp
fs
test
sahf
mov
dec
leave
fnsave
test
loop
mov
jb
xchg
or
or
or
pop
sub
sbb
scas
add
movsb
mov
inc
inc
out
jne
mov
sbb
shll
call
add
add
xor
rorb
shll
pop
adc
popf
fisttpll
add
inc
rorb
stos
dec
push
push
scas
add
sbb
mov
insb
push
xor
mov
mov
je
lock
les
xor
movlps
sbb
imul
js
test
xor
les
xor
cmc
mov
out
push
mov
fdivs
popf
into
add
test
jl
mov
push
movl
add
or
movsb
into
push
add
push
add
inc
or
jge
jge
pop
cmp
incl
mov
add
ret
sbb
add
in
leave
insl
sbb
inc
ja
cmp
enter
ret
xchg
adcb
jmp
cwtl
nopl
add
fwait
sub
sub
xchg
push
fadd
add
push
or
lods
push
cli
add
rcrb
fcmovb
arpl
rcr
cltd
xor
cmp
and
sub
sbb
mov
xor
xor
push
xor
enter
pop
in
dec
xor
test
inc
or
into
loopne
and
shll
or
sahf
loop
push
xchg
in
cmp
int
adc
push
addb
jl
nop
mov
cli
fmuls
aam
daa
add
aaa
adc
push
andb
push
jne
cmpb
dec
fs
sbb
pop
add
add
add
mov
fstpl
mov
das
mov
add
lock
jo
jno
test
push
je
sbb
fisubs
pop
sub
mov
add
dec
cmp
ret
dec
rclb
imul
lahf
pop
loopne
or
xor
jl
je
dec
mov
addb
mov
adc
into
sub
hlt
xor
pop
mov
xor
add
ret
clc
pop
into
sarl
add
push
jecxz
inc
ljmp
push
push
clc
flds
sub
pop
divb
adc
aas
cld
jp
adc
and
xchg
repz
rol
or
in
cs
add
adc
mov
jo
inc
js
int3
add
or
iret
cwtl
mov
int
into
push
push
rol
test
addr16
les
dec
mov
add
sbb
sbb
leave
fisttpll
dec
lret
xchg
sbb
loope
outsl
ljmp
jo
jp
loope
pop
pusha
jp
pop
rcr
push
repz
repnz
dec
dec
popf
cs
adc
sub
mov
sub
or
lea
orl
add
mov
sbb
sahf
push
sbb
xor
sub
add
or
test
or
inc
jle
push
sub
popa
scas
mov
mov
ja
ret
mov
pop
sub
push
pop
adc
jne
add
cli
add
mov
sbb
push
mov
dec
icebp
adc
push
and
push
push
push
push
and
inc
jno
mov
adc
inc
jo
mov
repnz
int
cmp
pop
jle
addl
cmp
or
stos
shlb
mov
es
arpl
stos
repnz
nop
lock
or
mov
and
pop
imul
clc
sbb
dec
dec
mov
or
cs
mov
or
iret
jecxz
movsl
mov
mov
jecxz
lcall
dec
adc
or
inc
and
dec
push
dec
pop
mov
ret
jg
inc
add
adc
or
or
jnp
mov
push
inc
add
jo
das
pop
lea
adc
aam
test
lock
lret
data16
mov
adcb
adc
outsl
call
sahf
adc
daa
sbb
and
dec
adc
repnz
xor
sub
push
add
pop
mov
in
dec
loopne
xchg
lock
lret
clc
mov
dec
inc
adc
cmpb
aam
je
jo
movsb
movsl
pop
jae
mov
sbb
mov
sbb
xlat
loope
and
sub
inc
cmpsb
fcoml
xor
test
inc
cmpsl
js
mov
addb
lret
xchg
xlat
add
in
or
loop
xchg
adc
daa
ret
xchg
add
movsl
xchg
xchg
or
pop
adc
adc
pusha
push
aaa
into
ret
xor
je
adc
and
xchg
add
sbb
xor
push
inc
jecxz
cwtl
andb
dec
mov
pop
loopne
ljmp
xor
je
and
push
jp
xchg
orb
add
cld
enter
mov
sbb
inc
popf
dec
cmp
out
and
loopne
lock
rcll
rol
pop
and
mov
jno
and
cwtl
or
mov
iret
push
aam
movb
clc
and
or
and
lds
or
sbb
and
imul
adc
push
mov
mov
xchg
sbb
pop
cmp
pop
and
push
push
addb
jecxz
or
jp
shr
xlat
pop
pop
dec
rclb
gs
mov
sbb
mov
xor
icebp
std
icebp
cmpsb
or
rcrb
rol
xchg
inc
nop
mov
and
mov
xchg
sbb
or
dec
xchg
popf
sub
daa
xorb
ror
mov
call
add
adcl
shl
jno
sbb
insb
ret
add
insb
mov
xchg
repz
stc
push
in
outsl
pushaw
leave
cwtl
or
xchg
add
insb
cmp
xchg
inc
or
add
lea
bound
movsw
sarl
jecxz
punpckhdq
in
test
fsubrl
xchg
js
cmpb
dec
push
push
cltd
xchg
jl
mov
loop
push
sub
adc
push
or
clc
sbbb
sub
pop
push
adc
adc
or
mov
xchg
andb
aam
add
cli
xor
sbb
mov
xor
xchg
add
iret
and
cmp
mov
push
test
rolb
mov
jnp
sub
out
jb
lret
and
jp
sub
nop
inc
or
push
dec
inc
sub
lods
push
xor
adc
dec
inc
jp
cmp
inc
sub
pop
pop
jno
sbb
fs
inc
inc
sbb
mov
push
sbb
imulb
push
xorb
rclb
push
cld
and
sbb
sbb
cmp
test
ljmp
xchg
inc
loop
push
xchg
aaa
pop
push
jo
add
fmuls
push
rcrl
pop
jmp
sbb
ds
loopne,pn
sarb
xor
jo
cs
adc
or
pop
adc
popf
icebp
and
add
pusha
inc
lods
clc
pop
xor
rorb
js
fst
push
mov
add
mov
and
inc
enter
cmp
push
jo
push
int
xchg
cmpl
dec
lldt
sbb
adc
addb
andb
or
dec
pop
sbb
sarl
sub
lods
add
push
loope
cmp
lock
mov
adc
mov
loopw
jge
push
sbb
shrb
mov
xor
out
add
data16
cmc
dec
aam
adc
mov
je
adc
add
rorl
adc
test
fs
rol
mov
jl
cwtl
mov
aaa
sahf
addb
sub
xchg
xor
sbbl
rorl
xchg
pushf
cld
mov
mov
fdivrs
jmp
sbb
mov
xchg
sti
mov
jl
push
xor
jmp
jecxz
imulb
loop
xchg
lea
into
cs
sbb
xor
or
adc
and
push
ret
shrb
jo
jp
iret
sbb
inc
movsb
cmpsb
xchg
xor
xchg
add
ljmp
mov
aad
popf
pushf
test
and
and
ja
rcrl
sbbb
sbb
push
ret
or
mov
es
leave
sbb
inc
stos
aam
ror
rcl
push
adc
xchg
addr16
jle
pop
jb
push
fs
rclb
pop
pop
test
lahf
js
sbb
or
ret
loopne
insb
dec
addb
je
xor
dec
adc
sarb
mov
icebp
cli
sbbb
shrl
shlb
cmp
add
push
pop
add
js
lds
movb
ljmp
mov
inc
pop
adc
push
fsubr
xchg
cmc
adc
mov
nop
sahf
or
inc
movsl
xor
js
xor
or
ret
sbb
fimull
push
loope
shrb
push
jecxz
aad
mov
sarb
add
test
les
cmp
adc
dec
loopne
fcmovnb
xor
add
adc
cmpsl
icebp
mov
sahf
es
fs
andl
mov
hlt
or
loopne
cmp
testb
adc
movsb
mov
push
sub
add
ss
popa
andb
imul
mov
cmp
pop
lret
rcl
adc
dec
fadd
push
cmp
inc
jl
sbb
rolb
dec
loope
pusha
inc
imul
ret
shr
and
mov
test
mov
pop
push
repz
rol
mov
pop
adc
xor
rorb
pop
adc
lcall
movb
mov
sbb
cs
sub
push
fcoml
clc
ror
xor
mov
or
jae
add
out
mov
add
or
mov
lret
xchg
push
sub
movsb
add
fstpl
jo
push
je
fdivrp
xor
push
mov
sub
or
into
inc
cmpsb
push
xor
or
cwtl
or
fistps
fwait
mov
sbb
jle
xor
adc
mov
es
insb
and
in
pop
imul
popa
dec
adc
adc
shlb
loope
imul
gs
and
insb
pop
mov
dec
push
sbb
add
or
ss
cli
pusha
or
test
lcall
jb
sub
int3
into
test
hlt
dec
pop
cmp
xor
cmp
adc
call
sbb
in
mov
fldcw
orb
mov
adcl
mov
cmpsb
sbb
inc
loopne
js
dec
loope
mov
or
adc
and
pop
nop
jb
or
and
cmp
add
fwait
ret
cmp
enter
jnp
leave
mov
sub
je
ja
inc
into
xchg
jle
mov
sbb
loopne
loope
mov
push
cwtl
leave
out
mov
xchg
pop
icebp
pop
stos
test
movsl
add
ss
push
jb
out
or
arpl
xchg
dec
jge
add
cmp
mov
mov
add
sub
and
mov
fstl
test
adc
ja
mov
add
xchg
push
popf
add
ret
mov
insb
aam
pop
or
mov
test
bnd
push
add
cltd
cltd
push
hlt
and
mov
cmp
adc
js
adc
pop
push
adc
pusha
insl
ret
fcoml
add
jo
inc
imul
sahf
lcall
cmp
add
enter
add
xchg
and
addb
lret
sub
inc
unpcklps
and
mov
aam
scas
or
adc
rolb
fs
cli
shr
push
outsb
push
fs
dec
and
sbb
fimull
mov
sub
sbb
sub
sti
adc
scas
fld
inc
sbb
mov
push
les
lea
lods
or
lock
cmp
enter
pop
les
dec
addb
adc
pop
add
inc
xorw
and
pop
js
jns
sbb
mov
pop
mov
mov
adc
mov
les
push
test
cmp
jbe
jge
dec
repz
and
jp
cmpb
pop
enter
ret
imul
or
ds
and
mov
ficoml
mov
sbb
adc
icebp
inc
daa
pop
push
cmpsb
fidivs
push
lods
sarb
add
add
rcrb
mov
fiadds
nop
push
and
pop
bound
sub
or
rcrb
add
inc
fmuls
psubsw
add
shlb
push
mov
dec
rclb
clc
clc
jno
movsb
inc
dec
xor
or
mov
push
push
mov
cltd
rorb
inc
cmp
cli
cli
je
loop
lods
pop
or
aam
jp
adc
test
jns
inc
mov
push
ljmp
imul
xchg
adc
xor
mov
sub
sbb
enter
add
rolb
rolb
add
aam
dec
inc
or
loop
push
xchg
subl
xchg
sbb
mov
inc
add
js
sbb
movsb
pop
push
out
and
xorb
dec
push
sbb
push
jae
dec
add
pop
into
sub
sub
sbb
ret
xchg
daa
mov
inc
xor
rcl
clc
cmpb
sbb
xor
and
shlb
push
cmp
rcll
sbb
or
and
sub
outsb
mov
lods
test
adc
test
jo
enter
insl
add
shl
adc
add
call
sbb
push
les
push
jl
add
add
sahf
sub
lret
sbb
loopne
pusha
cmp
jno
loopne
jle
cmp
pop
add
out
rolb
push
pop
jae
push
rcr
lcall
cltd
test
imul
std
rclb
and
shrb
add
rcr
jge
pop
pop
adc
lock
add
loopne
sahf
lods
and
mov
addl
push
clc
int3
subl
mov
pop
test
mov
or
test
int3
call
aam
inc
lods
das
shl
addr16
shr
test
test
inc
les
cmp
mov
sarb
je
inc
lret
xor
or
jb
add
lcall
push
ret
push
loop
popf
hlt
int3
adc
sub
movl
div
push
cmc
lret
js
add
jns
push
add
jae
mov
inc
nop
push
outsl
mov
cmp
dec
add
push
jmp
outsl
ror
sub
or
andl
test
fucomp
inc
sub
fidivrl
sbbl
mov
or
push
sub
orl
jae
dec
add
xlat
rorb
mov
pushf
xchg
jb
mov
lods
sub
mov
pop
test
sub
sbb
pusha
add
sahf
lods
subl
jl
fimuls
add
inc
mov
cmc
sbb
pop
sub
inc
mov
rorl
inc
cmp
cmp
int3
xor
int3
rolb
loopne
mov
adc
cmp
mov
mov
imul
cs
push
jae
sub
imul
and
jge
jb
ret
sub
xor
xor
clc
mov
and
clc
adc
sub
divb
das
pop
mov
sbb
or
call
inc
cld
lahf
or
push
push
or
lods
sbb
and
cmp
sbb
loope
mov
ds
addl
add
fimull
mov
pop
or
push
push
mov
icebp
repz
sbb
femms
xchg
test
and
inc
das
mov
inc
dec
cmc
dec
inc
btc
loop
js
adc
push
jmp
cmpsl
lock
aad
fdivs
test
or
dec
or
hlt
mov
fstpt
and
loopne
das
adc
and
sub
jp
xchg
jbe
jecxz
cwtl
js
xchg
mov
pop
adc
mov
or
jo
in
cmp
dec
movl
dec
cmp
aam
jge
add
mov
and
push
loope
sbb
pop
push
loop
rclb
je
stc
sahf
and
mov
lods
rorb
push
popa
and
mov
mov
js
add
pop
cmp
pushf
inc
pop
dec
cmp
sbb
mov
loop
push
inc
arpl
aas
cs
and
cltd
imul
jo
das
jo
insl
xchg
xchg
loopne
jo
pop
push
mov
cs
ret
adc
xorl
mov
push
rolb
and
xchg
andl
addb
or
sub
sbbb
xor
adc
add
cs
push
mov
mov
push
add
aaa
and
cs
add
inc
add
into
fcompl
sbb
sbb
push
insb
ret
add
dec
push
dec
ret
xchg
cli
lea
loopne
or
lods
fmull
roll
push
outsl
shlb
dec
repnz
enter
sbb
and
inc
mov
jp
rorl
lock
mov
es
sbb
cmp
sbb
loopne
sbb
sub
push
add
or
test
pop
popa
out
sahf
or
mov
mov
push
add
outsb
mov
dec
hlt
inc
lods
add
inc
into
cwtl
add
or
add
mov
xchg
push
add
ljmp
add
sub
call
cmp
out
xor
rorl
popf
push
cwtl
push
pop
jmp
test
mov
or
add
pop
and
sub
pop
call
pop
sbb
cmpsl
push
lods
cld
pushf
and
pop
sbb
inc
paddb
add
xchg
push
jp
add
call
push
ret
fsubrs
mov
ret
aaa
mov
lock
push
and
add
pop
aam
loop
cmpsl
andl
icebp
inc
add
sti
je
dec
dec
das
pop
sub
and
lods
ret
dec
dec
push
add
cmc
enter
dec
and
cmp
xor
xchg
push
or
adc
xor
push
add
cmp
and
rcrl
xchg
test
hlt
shrb
add
jo
adc
xor
es
adc
inc
add
sbb
sub
adc
lret
add
js
mov
shrb
jp
jne
rclb
divb
push
rorb
cmp
hlt
adc
and
push
rorb
xor
cmp
or
dec
or
adc
test
or
xchg
call
inc
jmp
sub
cltd
push
lods
je
fstps
xchg
test
push
mov
xor
mov
stos
push
pop
out
adc
mov
insl
call
adc
subb
call
loope
cld
insb
shl
call
cltd
dec
add
and
push
in
imul
loop
pushf
test
dec
or
and
xchg
push
outsb
xchg
jno
xchg
push
add
mov
movsb
push
scas
je
jno
cmp
xorb
lock
hlt
dec
and
lret
pop
and
sub
xor
push
dec
in
jo
and
add
sub
pop
adc
data16
jns
xor
pop
pop
smsw
sbb
sbbb
mov
cmp
gs
pop
dec
mov
mov
insl
cltd
mov
push
popa
loop
mov
add
push
push
and
lock
inc
test
adc
xchg
push
and
sub
or
inc
sub
mov
rol
pop
rolb
jecxz
dec
jno
mov
sbb
lods
test
push
loop
xor
mov
dec
add
or
adc
mov
push
inc
jl
pop
xor
insb
mov
test
push
mov
negb
mov
push
imul
outsb
loop
dec
xor
sbb
add
cmp
enter
xor
push
cld
push
xchg
dec
sbb
dec
pop
sub
and
xchg
xchg
js
push
sub
pop
xchg
mov
das
sbb
and
icebp
shlb
ja
push
mov
test
mov
jl
mov
sbb
rcrl
xor
aam
jno
cmp
or
sbb
lock
es
ret
pop
or
arpl
pop
stos
fidivs
ds
subb
add
mov
mov
mov
add
sbb
or
shrb
mov
xchg
enter
mov
mov
sbb
add
sbb
loope
xor
cltd
or
jno
jecxz
dec
or
shrb
xorl
dec
daa
pop
shll
dec
int3
test
inc
subb
in
and
sbb
adc
sub
notb
cltd
jno
js
and
add
adc
push
mov
cld
sub
xchg
ret
lahf
pop
push
idiv
or
xlat
shrb
or
mov
adc
dec
inc
std
push
jns
jne
push
or
mov
call
dec
xor
loope
scas
sub
rcrl
mov
xchg
rolw
hlt
test
inc
xorl
or
jle
or
push
xor
add
and
mov
or
nop
xor
add
aam
ret
mov
leave
or
lds
lret
lock
inc
jecxz
mov
or
push
out
jb
lods
aaa
xchg
scas
adc
enter
mov
and
jbe
inc
mov
cmp
aam
push
mov
add
xor
ss
jge
add
leave
mov
mov
leave
pushf
adc
daa
xchg
lds
fisubrs
mov
and
or
xorb
xor
fisubrs
xchg
pop
lahf
adcb
subl
sbb
dec
sub
adc
mov
sbb
pop
arpl
add
mov
and
jl
in
test
or
push
mov
xor
loope
sbb
dec
mov
push
dec
dec
ja
andb
xchg
loopne
pop
int3
xor
mov
adc
inc
scas
into
dec
or
push
mov
aaa
push
push
mov
ret
lcall
ret
push
dec
ficompl
jecxz
pop
or
inc
cmp
xchg
test
inc
in
lock
push
or
clc
xchg
and
mov
push
mov
ficoml
in
std
and
push
or
int3
add
mov
inc
mov
lods
andl
js
lret
inc
pushf
pop
mov
xchg
push
mov
pop
xchg
sbbl
adc
jb
mov
fbld
mov
pop
add
or
mov
pushf
pop
les
or
inc
popl
jecxz
push
and
push
lcall
pop
cli
inc
xchg
ret
insb
dec
xor
mov
cmpsl
test
loop
jno
mov
andb
push
or
lret
loopne
xchg
push
adc
or
add
and
adc
cmp
cmc
dec
mov
fldenv
mov
and
or
mov
rorb
mov
int
leave
mov
push
xchg
add
mov
xor
xchg
sbb
sbb
rorb
insb
add
jge
scas
xor
lret
push
loop
icebp
mov
xchg
lret
cmpb
jnp
jg
jg
imul
and
hlt
push
nopl
sbb
test
nop
adc
add
imul
push
mov
inc
jnp
sub
pop
jmp
pop
adc
mov
sbb
xor
nop
gs
or
scas
cli
bound
dec
rol
and
or
outsb
lods
lea
xchg
xor
adc
push
inc
inc
add
stos
lds
mov
inc
cltd
into
enter
movsl
punpckldq
cmp
es
sub
pop
adc
add
sub
adc
js
sub
sub
dec
mov
mov
test
push
andl
out
add
lds
test
adc
add
inc
pop
or
pusha
dec
mov
push
push
xchg
inc
into
cmpsl
pop
or
lret
pcmpgtb
imul
adc
cmp
cmp
lahf
xor
or
xchg
sbb
mov
add
sub
dec
xchg
mov
pop
aad
inc
sub
std
cmp
sahf
pusha
subb
jmp
jle
lods
ja
adc
test
loopne
es
iret
push
ja
adc
popa
inc
sbb
mov
cmp
test
jp
adc
jmp
add
inc
test
adc
pop
clc
add
mov
cmp
js
lock
stos
insl
or
rol
ret
ljmp
cmp
sbb
pusha
dec
leave
and
arpl
push
dec
and
or
add
pop
dec
xor
es
jo
lea
call
push
mov
jp
push
outsb
clc
rcl
sbb
cmp
sub
ret
xlat
leave
pop
clc
inc
pop
inc
mov
sub
add
sub
add
inc
xor
jge
or
mov
cld
xchg
scas
or
imul
in
push
ljmp
add
jge
sub
add
test
sbb
jne
rclb
adc
jno
add
push
lock
cmp
cmpps
xchg
stos
and
push
push
out
inc
push
pop
sbb
fimuls
mov
sbb
movsb
add
aam
and
nop
mov
xor
lea
sbb
adc
jbe
pop
jp
insb
push
xchg
lods
xor
cmp
iret
add
adc
stc
sub
scas
mov
push
xlat
inc
push
lahf
xchg
add
cmpsl
cmp
xchg
mov
inc
in
add
inc
jb
ret
rolb
or
popf
gs
and
xor
push
pop
push
ss
jno
adc
sbb
or
jne
or
aam
xor
fs
cmp
inc
jb
and
sbb
dec
add
mov
mov
lcall
push
icebp
add
xchg
js
into
mov
sbb
sbb
popf
and
enter
ret
sbb
sbb
popa
add
scas
addl
icebp
xchg
lea
lea
call
les
sti
loopne
adc
sbb
insl
ficoms
add
xor
lods
or
pmaxub
fstpt
pusha
icebp
rorb
mov
mov
adc
cli
lret
push
cmp
into
aaa
or
call
push
or
sbb
jmp
adc
cli
and
sub
sbb
enter
lcall
mov
int3
pop
dec
sbb
lods
push
xor
das
pop
outsb
adc
pop
add
je
insl
shlb
lock
les
test
xchg
roll
inc
or
in
repz
sbb
inc
inc
mov
js
and
push
pop
pop
sbb
push
pop
sbb
daa
sahf
cmp
das
dec
pop
push
mov
adc
hlt
movsb
mov
or
xchg
dec
sbb
popf
adc
or
dec
lcall
cmp
mov
imul
loopne
jl
scas
popf
jl
push
cmp
push
jne
jo
mov
mov
jb
cli
sbb
push
push
dec
mov
mov
push
mov
jbe
jecxz
mov
xchg
aam
rclb
popf
lcall
sarb
and
sbb
inc
mov
mov
jb
add
xchg
cmp
cmp
add
mov
pop
into
dec
rcll
test
inc
jp
aam
or
test
push
lock
mov
inc
ljmp
push
nop
daa
call
aas
sbb
fistpl
inc
dec
or
or
lods
pop
icebp
shll
mov
stc
sub
andb
adc
adc
mov
je
loopne
mov
sbb
push
push
pusha
insb
loop
test
sub
aam
daa
icebp
push
pop
ljmp
orb
push
addr16
test
xchg
mov
inc
jle
mov
add
mov
mov
lea
out
ror
or
mov
andb
cmpsb
xchg
sbb
pushf
addb
pop
ljmp
mov
adc
inc
testb
jp
test
das
add
sbb
xlat
sbb
sahf
cli
es
inc
mov
xchg
mov
es
sbb
xchg
and
xchg
mov
lock
xor
sbb
outsl
inc
scas
sbb
inc
or
push
sub
inc
push
sub
push
add
sbb
pop
xor
mov
bound
cmp
movsb
push
pushf
sbb
xchg
popf
test
xlat
mov
adc
test
les
es
add
bound
enter
add
dec
mov
xchg
or
xchg
mov
push
or
xchg
sbb
js
add
push
imul
loop
sbb
popf
push
xchg
jns
pop
cli
cmpb
add
cwtl
ficoms
ss
lcall
or
loope
push
sbb
mov
in
mov
and
loope
mov
inc
pop
rorl
pushf
maskmovq
mull
shl
movb
loope
repnz
add
inc
fdivr
or
push
jne
and
addr16
faddl
or
test
pop
xchg
aaa
mov
cld
sub
adc
pop
dec
outsl
test
add
push
sub
pop
and
lret
sbb
and
dec
imul
xchg
xchg
or
cmc
in
mov
or
ja
pusha
rclb
popa
push
pop
mov
sub
mov
insl
sub
inc
xor
adc
sub
imul
stos
inc
rorl
jp
inc
roll
inc
aaa
les
mov
add
dec
lods
je
out
je
pop
dec
pusha
sahf
sub
icebp
mov
je
xchg
adc
push
or
rolb
push
add
push
rol
test
xor
shlb
jmp
into
shl
inc
aas
test
cli
inc
sbb
incb
outsl
mov
test
xchg
mov
push
flds
movsb
add
orb
dec
js
sysret
lock
into
mov
adc
jl
mov
repnz
xor
nop
cwtl
les
das
sbb
hlt
push
test
inc
jo
push
dec
mov
jb
or
lods
mov
sbb
adc
adc
xchg
ds
rolb
sub
dec
js
rcrl
shr
enter
mov
adc
js
and
mov
inc
mov
repnz
mov
or
stos
push
mov
ds
pop
inc
or
and
xchg
ror
movsb
push
jo
jo
rolb
lret
inc
les
pop
shrl
add
dec
mov
dec
sbb
lret
jo
and
jecxz
ja
pop
xor
insb
cmp
clc
mov
push
jmp
nop
rcrb
sbbb
and
imul
jp
add
fnsave
ds
clc
xor
xchg
jo
imul
clc
or
imul
push
jp
dec
dec
pop
add
or
jo
xchg
daa
cmp
or
mov
sbb
fs
mov
fisubs
bound
stos
cmc
test
xchg
mov
clc
mov
adcb
testb
in
sub
out
rclb
adc
mov
xchg
inc
mov
jmp
mov
add
mov
or
orl
ret
and
adc
sbb
cmp
add
repnz
add
out
sbb
cmp
push
fstl
addr16
in
inc
jb
sahf
cmp
je
sbb
xchg
in
pop
add
push
xchg
push
scas
mov
mov
cmp
push
sbb
pusha
dec
add
lahf
jmp
call
enter
sbb
fwait
or
or
mov
adc
mov
hlt
fwait
mov
or
fcomp
lret
pop
adc
das
loopne
cmp
into
adc
push
push
js
in
cmp
insl
push
jne
cmp
mov
inc
sahf
xchg
jae
push
rcrl
sbb
aad
push
xor
cmc
jp
or
mov
mov
pop
ret
xor
orb
inc
or
xchg
adcb
or
int3
pop
add
test
mov
cmpb
outsl
adc
addb
mov
add
jmp
inc
jnp
mov
mov
ret
inc
into
shl
pop
add
xor
mov
aas
add
push
js
shl
sbb
sbb
xor
je
loop
and
sbb
dec
daa
enter
daa
sub
sbb
inc
pushf
mov
jecxz
test
clc
cmpb
imul
xchg
push
mov
xor
add
or
xor
dec
sbb
xchg
add
push
and
add
adc
adc
insb
sub
push
aaa
xchg
shlb
movb
push
popa
sub
adc
or
loop
cmp
in
or
fimull
push
or
ljmp
daa
out
adc
mov
sub
cli
jo
fsubr
xchg
push
push
movsb
jge
or
sbbb
inc
lret
mov
adc
jp
shr
add
cmp
shlb
inc
or
mov
sbb
and
and
sub
sub
ret
xchg
push
mov
mov
imul
jp
rcrl
xorb
push
cmp
and
scas
jle
push
sti
testb
push
les
xchg
push
out
xchg
and
sbb
rorb
push
outsb
add
shl
pop
adc
mov
daa
mov
cmpsl
hlt
sarb
lods
arpl
mov
les
or
add
lock
repz
inc
inc
inc
sub
hlt
mov
or
push
mov
dec
push
shrb
and
add
dec
mov
gs
aam
xchg
sub
adc
stos
mull
inc
ficomps
cltd
sbb
inc
pop
add
cwtl
hlt
sbb
or
imul
xchg
sbb
jmp
add
dec
int3
es
js
and
xlat
mov
pminub
and
rorb
in
minps
adc
jmp
mov
inc
inc
adc
lahf
fnstcw
sbb
or
adc
sbb
icebp
xchg
mov
pop
add
shl
hlt
sub
test
fimuls
and
xchg
fcompl
sbb
or
hlt
inc
leave
shl
pop
pusha
and
jecxz
sbb
popf
test
and
fidivrs
call
adc
ret
add
jae
nop
cmp
mov
mov
pop
xchg
sbb
xchg
add
loop
sti
in
push
push
jg
movb
in
mov
xchg
xor
ret
mov
rolb
xlat
mov
sbb
pushf
insl
test
rcr
push
adc
dec
mov
or
and
pop
xchg
rclb
mov
mov
test
pop
xchg
jbe
testb
hlt
pop
rcrl
je
cs
add
shll
in
into
mov
adc
add
or
adcl
inc
xchg
push
adc
mov
call
pop
stos
mov
outsb
mov
xchg
jns
inc
imul
mov
divl
inc
mov
sub
hlt
add
pop
or
pop
popa
gs
stc
mov
mov
stos
cmp
fcmovnbe
fwait
pop
or
arpl
sbb
push
mov
sub
enter
andb
loope
pusha
adcb
sub
xor
cmpsb
cld
cli
punpckhdq
mov
add
ret
dec
pop
and
mov
dec
xadd
add
xchg
cmp
dec
xchg
add
mov
sub
adc
ret
add
add
push
dec
dec
ljmp
sbb
shrb
pop
les
ret
test
xchg
or
adc
sbb
mov
sub
mov
jge
cli
jmp
or
rorb
xchg
loop
push
xor
adc
cmp
mov
add
mov
cmp
fcoml
inc
add
mov
or
lret
cli
pop
dec
add
scas
and
fld
inc
repnz
xchg
jle
inc
pop
or
mov
loop
aad
rcl
mov
cmpsl
inc
and
cli
pavgb
insl
and
data16
and
push
sub
std
or
iret
xchg
out
push
cmc
rolb
mov
pop
arpl
subb
adc
or
sbb
lar
push
stos
imul
pop
pusha
cmp
aaa
cmpsb
add
rolb
or
loope
dec
in
iret
sbb
mov
inc
mov
orb
adc
adc
inc
mov
lods
push
adc
sub
jae
or
push
adc
add
xor
cli
xchg
cwtl
test
ret
mov
sbbb
fsubrp
lea
sub
xchg
and
sub
inc
mov
pop
jo
outsb
xchg
add
dec
mov
out
stos
test
lret
and
fs
xor
sbb
loopne
sub
xchg
outsl
add
popa
int3
movsl
jo
sbb
inc
pop
inc
sub
jge
xor
add
xchg
mov
sti
sti
xchg
push
add
mov
mov
ds
mulb
xchg
pop
out
clc
mov
int3
loopne
icebp
push
mov
stos
or
xchg
xchg
sahf
jno
sahf
ret
push
outsl
sbb
mov
sbb
cltd
adcl
mov
faddl
mov
or
jge
pushf
out
ret
mov
movsb
adc
sahf
add
jne
push
or
push
mov
sahf
adc
inc
hlt
aaa
add
popa
mov
push
data16
adc
jo
mov
inc
in
clc
and
lock
je
loope
iret
pop
pop
and
mov
sub
xor
sbbb
mov
cld
pop
fsubrs
aaa
push
and
adc
stc
and
xchg
mov
rolb
mov
lods
sub
mov
or
adc
popa
rcrb
push
mov
push
xchg
test
add
daa
das
or
cmpsl
mov
sbb
mov
inc
repnz
int3
loopne
test
popf
aaa
rcrb
cmc
dec
jmp
ljmp
ret
andl
adc
xchg
pop
sbb
scas
cld
xchg
jl
add
push
xor
mov
outsl
es
pop
rolb
sbb
dec
mov
popl
pushf
ds
pop
movsl
xor
test
cmp
adc
inc
cmpsb
add
mov
das
dec
mov
inc
loope
call
or
or
popa
pop
sbb
push
cmp
ret
imul
js
pop
add
fcmovnbe
xor
jle
inc
sub
mov
ss
cmp
daa
arpl
adc
push
cmpsl
jo
inc
inc
shl
push
test
inc
adc
and
lret
lods
inc
mov
jnp
pusha
add
ss
hlt
jp
mov
sub
cmc
insb
add
daa
outsb
mov
xor
shlb
pop
xchg
inc
push
mov
mov
adc
jmp
adc
lods
or
rorl
aam
mov
push
enter
xchg
lods
mov
mov
out
loope
andl
push
xchg
test
mov
jp
pop
adc
cs
sub
xchg
arpl
movsb
cltd
mov
rorl
loope
sbb
test
movsb
jecxz
sbb
out
adc
bound
lea
bound
loop
movl
dec
sub
sbb
or
enter
in
out
and
push
sub
jbe,pn
jecxz
add
push
push
repnz
mov
dec
mov
push
sub
cs
pop
mov
add
mov
push
mov
adc
roll
push
cmpb
pushf
push
lea
je
shr
and
sbb
adc
cli
xor
mov
xchg
bound
movsl
mov
pusha
inc
dec
sub
call
cmpsl
rcll
or
hlt
mov
adc
dec
loop
or
inc
cmp
add
stos
push
outsb
out
push
adc
das
push
shrl
push
cmp
push
lods
pop
inc
jb
and
xchg
decl
lods
inc
jle
cmpsl
or
pop
push
test
cmp
test
rcrb
add
mov
sub
sbb
sbb
mov
aaa
daa
imul
cs
fsubr
add
mov
mov
stos
mov
sbbl
fld
shr
adc
adc
jne
xchg
add
inc
or
push
rclb
mov
xchg
xor
outsb
popa
cltd
mov
push
push
std
imul
pop
ret
sbb
outsl
fcomp
inc
test
inc
les
js
dec
or
popf
insb
cld
mov
mov
cltd
add
mov
ret
lea
das
push
loope
adc
mov
enter
and
sub
cmp
sbb
mov
pop
lods
add
adc
sub
lods
mov
sbb
add
push
nop
ljmp
pop
add
lcall
or
pop
sbb
mov
cmp
sbb
adc
enter
mov
popa
xchg
push
sub
jo
les
mov
ss
mov
cmp
lret
sub
jnp
pushf
aad
fiaddl
push
clc
gs
in
loop
adc
ds
imul
pusha
jns
cs
adc
mov
arpl
or
and
scas
bound
movsb
cmp
popf
xchg
sbb
or
adcb
dec
and
mov
inc
hlt
jmp
addl
push
aam
cld
or
push
pop
xlat
xchg
and
push
sub
jnp
and
scas
shrl
cwtl
push
mov
push
outsb
sub
mov
cmp
sbb
dec
xchg
mov
shlb
das
popa
pop
ljmp
leave
ds
or
leave
pop
imul
mov
push
push
sub
dec
mov
add
les
jp
out
xchg
xorl
xchg
daa
push
jg
cmp
add
push
add
stos
push
stos
and
in
rol
push
mov
jb
sahf
add
xor
and
adc
xlat
lods
or
ret
pop
cmpb
mov
cmp
dec
loope
stos
scas
mov
mov
sbb
or
aam
ret
cli
cli
xor
and
into
fsubl
sbb
cmc
icebp
daa
cmc
add
inc
leave
or
movl
cmpsl
pop
inc
adc
xlat
pop
xlat
cmp
push
pop
push
mov
fsin
fimuls
xor
fisttpl
mov
ljmp
rolb
inc
cmp
and
lock
mov
push
addb
rcrl
enter
loope
int3
gs
or
rorb
and
hlt
inc
test
test
in
daa
sbb
sub
pushf
mov
inc
sbb
into
mov
add
ret
cli
or
and
jp
insb
negb
xor
call
daa
push
dec
sbb
dec
test
push
fbld
dec
xchg
mov
cmpsb
xor
fisubl
pop
popf
add
in
je
or
movsl
rcrb
sub
or
xchg
divb
sbb
sbb
imul
es
insl
test
or
pop
lods
test
adcl
or
add
jmp
testb
push
add
mov
or
or
pop
cmp
jbe
sbb
bound
or
outsl
dec
lock
aam
adc
movsb
lock
mov
mov
mov
push
dec
roll
sbb
xchg
mov
sbb
mov
cmp
inc
divl
cs
or
js
ja
cmp
adc
and
rclb
lods
push
cmp
sub
adc
mov
add
decb
addr16
pushf
test
loopne
cs
cmpsb
cs
out
rolb
add
inc
les
outsb
jo
pusha
in
mov
push
push
xorb
inc
lahf
sub
mov
in
xor
jo
sub
jb
xchg
mov
cltd
std
push
push
xor
loope
dec
adc
cli
adc
add
loope
mov
mov
mov
cld
dec
popf
and
mov
or
dec
popf
dec
cwtl
leave
rolb
add
cmp
push
aad
popa
push
movsl
sbb
je
xor
push
add
mov
cmpsb
rorb
int3
pop
clc
and
cmp
lods
rclb
iret
cli
dec
lahf
add
mov
mov
and
jb
in
les
jnp
movsl
mov
or
mov
add
jo
push
xor
cmp
pushf
push
push
scas
sti
add
jl
dec
stc
cmpsb
pop
add
add
lods
mov
js
enter
pop
and
sub
test
enter
sbb
push
or
xchg
jne
and
or
shlb
lcall
pop
inc
fidivs
or
std
movsl
push
addl
mov
jb
lret
test
pop
hlt
and
inc
filds
rcrb
sbb
add
adc
mov
mov
dec
push
or
loop
mov
sub
and
push
mov
jp
xor
cmp
mov
mov
xchg
in
cmp
daa
hlt
xor
mov
push
stos
push
clc
sahf
loope
fstpt
stc
clc
xchg
pusha
test
add
adc
test
sbb
xchg
and
leave
pushf
call
daa
add
nop
inc
pop
aam
loop
mov
adc
adc
pop
adc
add
jno
mov
test
inc
sbb
xchg
push
push
aad
dec
add
cmpsb
mov
push
inc
pop
nop
add
dec
sbb
sub
mov
notl
pop
pop
out
pop
xor
cld
xor
xchg
addl
sub
dec
test
jmp
or
test
dec
push
sarb
sbbb
es
xchg
mov
movsb
xchg
mov
xchg
push
es
shr
xchg
add
sbb
fsubrs
loope
mov
fistpl
js
ss
clc
add
pusha
rclb
xor
shr
scas
outsl
pop
push
std
xor
cli
das
or
je
loope
inc
ljmp
jns
jne
cmovne
bnd
and
fldt
adc
call
rolb
aam
add
adc
xor
lods
dec
ds
pop
loopne
adc
stc
test
xor
adc
daa
inc
bound
sbb
mov
and
xor
adc
and
mov
or
sub
mov
lret
sub
int3
sub
popf
xchg
subl
clc
pop
sbb
shrl
insl
cmp
int3
adc
mov
shlb
test
gs
loop
and
daa
xor
icebp
loope
test
or
pop
adc
push
jl
push
bound
xor
shrb
and
jo
out
xor
shlb
jo
das
inc
and
mov
inc
mov
pop
cltd
shl
out
ret
test
or
push
cs
push
cmc
push
pop
xor
lods
sbb
dec
pop
adc
enter
movsl
call
subb
add
fisttpll
cmpb
bound
mov
add
sbbb
push
fsts
ror
cmp
mov
lret
and
cmp
adcb
movsb
add
dec
lock
xchg
cmp
clc
push
loop
in
or
movsl
inc
jp
xor
aad
add
sahf
mov
push
mov
ret
and
pusha
mov
or
roll
jmp
xor
xchg
add
lret
lahf
sbb
sbb
jle
sbb
enter
add
or
addl
and
cltd
add
push
scas
repz
push
or
add
xlat
imul
adcb
inc
ljmp
mov
adc
inc
mov
add
roll
mov
testb
jne
push
imull
dec
add
inc
cmp
push
sub
and
int
adc
adc
test
adc
push
out
lds
jge
push
xchg
ret
sbb
loope
mov
dec
sub
or
inc
lock
or
lock
int
dec
ss
cmp
cmp
xchg
shll
xor
pusha
imul
jmp
or
dec
rcll
ret
movsb
pushf
inc
nop
mov
pop
adc
and
lea
hlt
sub
xchg
or
jmp
or
in
rol
mov
jnp
test
ret
movsb
fimull
mov
jo
aad
sub
sbb
or
aam
add
jmp
dec
rorb
inc
mov
add
sub
test
add
xor
mov
add
pusha
pop
jns
add
dec
pop
jne
ds
mulb
jmp
add
push
mov
push
inc
add
mov
adc
add
rol
addl
add
or
cmp
daa
jl
mov
rcl
and
sbb
xchg
push
sbbb
ficoms
add
sbb
add
push
mov
sbb
scas
movsb
pop
inc
mov
jo
mov
cld
insb
xchg
lahf
add
cmp
dec
andb
imul
mov
inc
and
xchg
loop
mov
iret
jbe
shl
rorl
ret
push
ret
hlt
xchg
adc
sbb
cmp
ret
mov
pop
mov
andl
cmp
stos
test
pop
icebp
or
sahf
add
dec
add
cmpsl
lcall
jmp
sbb
test
je
xchg
clc
xor
jecxz
adc
jne
adc
fucomi
stos
adc
lret
pop
cmp
push
loope
dec
cmpsb
shlb
push
xchg
fcomp
adc
fdivrs
leave
adc
js
cwtl
movups
xor
add
jo
roll
and
jno
add
add
inc
test
test
repnz
sbb
rcl
mov
dec
test
adcb
pop
rclb
push
and
movsb
sbb
or
sub
sub
mov
movsb
pushf
add
mov
cs
mov
sbbl
jno
adc
sub
std
xchg
shrb
orl
adc
sbb
lcall
cmp
adc
xor
mov
insb
add
test
pop
cmp
sbb
add
cmovnp
hlt
lods
mov
sbb
cwtl
push
js
inc
sub
shrl
xor
fs
push
xor
lods
and
push
movsl
pop
ss
xlat
mov
lock
aam
jmp
cmc
xor
adc
or
jae
mov
or
stos
dec
cmp
movb
orb
leave
cmp
inc
inc
mov
jmp
push
push
sub
add
push
mov
mov
ret
loopne
sub
mov
mov
sbb
add
xor
xlat
popf
inc
push
mov
out
nop
stos
cmpsl
aam
mov
push
push
or
inc
gs
sbb
scas
xchg
cs
adc
sbb
cs
cltd
or
insl
bound
subl
and
mov
xchg
xchg
les
dec
cmp
xchg
mov
adc
bound
xchg
and
or
sbb
xchg
pop
into
popa
lock
jecxz
ss
in
sub
icebp
mov
outsb
sub
mov
sbb
jmp
popf
psllw
cmp
adc
sahf
sbb
addr16
dec
pop
jno
lret
pop
add
or
adc
add
loop
jo
ret
clc
mov
mov
mov
pop
into
inc
es
xor
cmp
mov
xchg
push
fadds
sbb
lds
inc
ljmp
fistpll
lock
push
xchg
fdiv
jmp
adc
pushf
arpl
cwtl
sarb
pop
jl
daa
es
inc
pop
aas
shlb
mov
fs
stos
add
push
inc
sub
jl
dec
add
push
adc
call
addb
push
mov
enter
or
push
pop
dec
imul
test
lods
int3
push
jno
dec
add
add
daa
jmp
pop
ret
call
ret
pop
ret
mov
das
call
push
je
sbb
sbb
rcrl
jp
or
push
sub
ds
xor
push
dec
test
mov
jl
aam
sub
testl
addb
mov
js
popf
int
add
or
xor
mov
add
add
and
shl
rorb
pusha
ficompl
xchg
cmp
pop
ficompl
sarb
adc
push
sbb
xor
andb
xor
test
pop
add
lcall
insl
xlat
push
xchg
xor
stc
fadds
dec
loop
jne
or
push
xchg
out
test
xor
inc
js
cmpl
mov
lret
shrl
inc
add
fiadds
adcl
and
sbb
aam
pop
dec
dec
xor
pop
rcll
add
addb
sti
lcall
sbb
add
pushf
and
cmpsl
sbb
and
cmp
inc
cli
call
orb
cmp
lock
push
xor
sarb
sub
sub
xor
bound
shl
add
push
sbb
xor
jbe
cwtl
data16
and
mov
rclb
mov
in
push
daa
mov
sub
scas
movsb
mov
xchg
test
inc
jo
call
dec
mov
hlt
sub
xor
repnz
inc
push
xchg
sahf
xor
sub
imul
outsb
add
lods
push
add
movsb
cmp
pop
sbbb
push
xor
or
test
mov
mov
stos
xorl
lods
dec
and
xchg
repnz
addr16
add
add
xchg
mov
xchg
shrb
in
xor
xor
fs
sub
gs
add
pop
movsl
xchg
cs
mov
cmpsl
or
pop
adc
hlt
movsl
cmovo
ss
or
mov
dec
sbb
or
cmp
sbb
mov
cli
cli
add
enter
dec
cwtl
aas
lock
popa
mov
test
push
and
faddl
jo
movsl
add
add
mov
lret
and
lret
fcompl
or
push
sub
cmpl
dec
push
fisttps
jo
dec
add
sti
push
into
jge
push
mov
movsb
cld
xchg
sbb
inc
or
xor
int3
rclb
mov
pop
sub
add
fdivrl
mov
xchg
out
or
inc
rorl
data16
inc
cmp
ds
pop
cld
scas
popa
add
enter
mov
pop
sbb
aam
push
icebp
mov
in
mov
sbb
cli
pop
js
or
cltd
jo
leave
fildl
mov
mov
mov
clc
aaa
nop
lock
jp
test
dec
cmp
and
mov
fidivs
es
mov
mov
test
add
clc
cmpsb
xor
dec
ljmp
testb
call
orb
mov
push
es
cmp
sub
cmp
cmp
js
jmp
push
jo
sub
daa
sbb
out
addb
lahf
loop
dec
ret
icebp
push
xor
adc
add
ret
dec
mov
sbb
and
inc
pop
inc
mov
jne
bound
cmp
push
jnp
mov
mov
xchg
inc
or
orl
jp
cmpsl
adc
xchg
mov
mov
or
cwtl
or
lods
arpl
sbb
lret
pop
jp
and
stos
add
insl
push
fstp
shrb
rclb
aam
mov
jbe
out
js
dec
pop
or
jle
push
jne
xor
or
adc
dec
push
incl
pop
loop
adc
xchg
dec
xor
data16
cwtl
out
adc
les
and
ficoms
cmp
sbb
push
enter
pop
inc
and
popa
push
fldl
nop
add
dec
insb
roll
rorl
icebp
dec
arpl
sahf
push
pusha
popf
in
rolb
pop
aam
sub
sbb
xor
jl
xchg
xchg
push
push
mov
in
ja
adc
sbb
cmp
andb
and
dec
jecxz
cmpsl
jnp
xchg
jo
xchg
es
sbb
pusha
push
sbb
movsl
jo
cmc
out
adc
add
aam
add
scas
lds
popf
dec
sbb
push
inc
pop
arpl
dec
test
mov
xchg
xor
dec
push
ror
les
enter
lods
push
orl
imul
mov
or
jge
sbb
jp
cmpsb
xor
add
lds
pop
enter
mov
dec
push
and
ljmp
incb
or
ficomps
in
mov
js
sub
pop
dec
ret
pop
dec
bnd
nop
add
add
imul
inc
xchg
loop
adc
lret
jae
mov
rolb
push
imul
mov
ret
xchg
daa
das
push
jb
fwait
mov
mov
rcrl
daa
and
inc
shrb
adc
jno
xchg
and
test
loop
aaa
rolb
leave
lock
xchg
mov
jmp
xchg
clc
pop
enter
dec
pfnacc
mov
ja
adcl
pop
test
xchg
add
andb
inc
rclb
mov
mov
sbb
lods
pop
outsl
xor
push
pop
push
xchg
mov
lar
mov
xor
enter
push
in
movsb
lds
scas
cmp
loope
loopne
ret
call
lds
pop
mov
sub
bnd
jmp
or
outsb
pop
lret
test
xor
sub
jo
mov
sub
adc
dec
loop
mov
sbb
js
sub
mov
movsb
aam
rorb
jb
dec
push
movsl
mov
orl
adc
in
push
ljmp
dec
jmp
adc
dec
and
inc
lret
cmp
je
inc
sbb
es
xor
testl
movsl
mov
test
mov
movsb
jmp
or
push
repnz
or
mov
cmp
inc
je
pushf
pop
and
in
std
les
fs
mov
adc
and
loop
loopne
ret
lock
and
add
ror
xchg
pop
and
push
mov
imul
or
stc
pop
cwtl
push
add
call
push
scas
dec
fnstenv
or
mov
push
inc
call
enter
lahf
arpl
dec
jo
cli
push
xor
pop
xchg
daa
mov
xchg
test
pop
repnz
movsl
lock
xchg
push
mov
xor
xchg
movb
inc
lods
addb
add
add
int3
mov
inc
call
popa
mov
sbb
cltd
sbb
or
xor
inc
xchg
push
les
arpl
aas
mov
pop
mov
push
nop
pusha
add
push
add
mov
and
add
and
xor
loop
jno
push
jge
push
icebp
jp
int3
shl
lods
cmp
xchg
add
adc
push
and
push
aam
jnp
and
popa
mov
and
cmp
adcb
int3
sbb
dec
sbb
adc
inc
dec
xor
sbb
add
jne
inc
nop
and
push
jo
mov
dec
add
xchg
lods
and
add
xchg
insb
rorl
jp
push
push
jmp
pusha
fsubrs
dec
cmp
mov
pop
jbe
and
pop
sbb
loopne
cmp
dec
aas
add
movsb
mov
jno
push
jl
pop
xchg
sbb
test
push
sbb
pop
adc
lock
push
loopne
add
or
mov
testb
mov
pusha
outsb
xor
add
mov
xor
shlb
add
or
shl
and
and
add
orl
jnp
xchg
mov
xor
xor
xchg
or
mov
ljmp
mov
mov
xchg
out
xor
cmpb
inc
mov
push
or
sbbl
roll
inc
inc
cmp
shrb
xchg
add
loopne
flds
sbb
adc
inc
test
adcb
sbb
inc
bound
xchg
dec
iret
xchg
sbb
adc
inc
sbb
repnz
add
mov
push
jmp
push
push
imul
adcl
xchg
sahf
inc
stc
and
jb
push
dec
or
xchg
push
add
into
adc
mov
fs
add
adc
mov
ret
das
or
shrb
sub
enter
xor
sbb
outsb
rclb
cmc
arpl
or
or
les
sbb
shll
xchg
je
mulb
jne
mov
lea
inc
mov
xlat
mov
and
ss
loope
mov
pop
in
pop
scas
sbb
clc
push
cld
pop
dec
dec
xor
jl
call
cmp
clc
das
pop
lods
add
jns
dec
clc
shlb
add
decb
enter
cltd
sbb
mov
bound
lods
sbb
cmp
je
push
mov
pop
popa
adc
mov
dec
pop
add
add
sarb
daa
inc
dec
ret
xchg
insb
ljmp
xchg
pop
dec
inc
clc
cmp
jne
push
fdivl
cs
dec
pop
xchg
clc
aam
lock
add
clc
jns
pop
xchg
imul
sahf
push
cli
out
dec
pop
push
pushf
lret
roll
arpl
push
cs
mov
or
jne
cmc
push
adc
icebp
cmpsb
xor
or
lea
jns
mov
push
test
das
pop
decb
adc
sub
pop
mov
mov
pop
push
rcrl
imul
sub
movsl
sbb
ds
xor
test
lahf
mov
icebp
nop
mov
mov
push
xchg
mov
add
pop
push
mov
jne
push
hlt
push
add
fidivrs
loopne
add
fs
or
cs
mov
popf
sbb
sbb
jbe
fs
lcall
or
fcmovnbe
std
or
mov
imul
sahf
mov
repnz
sbb
push
dec
aas
ret
sbb
pop
adc
mov
add
dec
das
test
pop
or
nop
and
sbb
daa
or
cmc
enter
and
push
mov
push
push
stc
sbb
pop
add
dec
sbb
iret
orb
adc
and
mov
pop
mov
hlt
rclb
addr16
test
jne
mov
sbb
outsl
or
pop
xor
or
pop
and
inc
and
push
aas
xor
loopne
ret
mov
ss
mov
mov
pop
out
rorb
or
push
add
pop
sbb
pop
pop
rol
pop
adc
dec
pop
adc
movsb
test
and
add
sub
mov
mov
sbb
xor
push
and
jmp
cmp
imul
adc
push
or
xchg
mov
mov
xchg
mov
or
shll
dec
cmp
jne
int
enter
or
pop
inc
movl
cld
cmp
inc
cs
fnop
adcb
mov
add
cld
into
lcall
or
mov
aam
push
lock
lret
or
xchg
push
push
loopne
pop
mov
sub
xchg
dec
dec
das
sarb
fcomps
push
jb
push
mov
xlat
loop
and
lock
jo
subb
lcall
xor
and
and
xor
lcall
xchg
push
adc
or
dec
xor
or
out
jbe
idivl
cli
sbb
pop
inc
dec
inc
mov
or
sub
add
pop
sbb
cmp
rcr
cli
adcb
adc
jno
enter
mov
xchg
adc
cmpsb
xor
cli
repnz
xor
sbb
pop
out
outsb
xchg
lods
popa
sahf
aam
xchg
mov
sub
push
icebp
ret
popa
mov
cmpb
addr16
jmp
rcrb
cmp
add
mov
mov
in
adc
xor
push
decb
xorb
mov
or
and
lods
pop
jecxz
mov
test
push
enter
int
dec
iret
add
out
add
movups
dec
xchg
pop
loope
xchg
je
push
fnsave
push
daa
negb
call
adc
xor
aam
dec
ljmp
imul
or
xor
dec
scas
add
inc
lahf
xlat
adc
mov
mov
pop
xorb
add
and
xchg
sbb
rcr
insb
mov
aad
adc
cmpsl
add
hlt
outsb
inc
shr
gs
push
xchg
pop
mov
dec
mov
lock
add
sbb
popa
incb
xchg
sbb
mov
push
xor
aad
out
sbb
cmp
push
cmp
out
test
jo
lods
jbe
adc
test
rcl
xchg
movsb
test
add
add
adc
or
jo
pop
in
fs
lea
dec
push
add
dec
enter
fistl
push
nop/reserved
mov
cmp
jmp
sbb
sahf
andb
lock
lock
mov
ljmp
test
add
ljmp
orb
or
push
sub
jl
xor
out
adc
lcall
imul
inc
add
std
test
test
add
pop
lahf
sbb
cmp
and
or
pop
in
test
pop
rcl
fisttpl
mov
test
inc
sub
lcall
in
inc
lea
add
xor
je
cli
call
cmp
icebp
push
loop
adc
jno
adc
adc
sub
jmp
out
xor
cs
xor
pop
mov
pop
out
mov
push
adc
jne
loopne
mov
sbb
testb
push
adc
lea
insb
ljmp
cltd
gs
inc
adc
mov
bound
decb
stos
lret
sbb
xchg
int
add
or
dec
subb
jo
ficoms
and
loop
pop
into
push
pop
jno
mov
pushf
dec
adc
jns
push
sbb
les
inc
adc
sbb
iret
xchg
addr16
or
fildl
sub
test
das
js
das
fwait
jecxz
shlb
out
adc
ljmp
js
jecxz
shlb
xchg
xchg
mov
sbb
rcll
push
jbe
std
addb
scas
dec
int
mov
call
pop
data16
fldcw
push
fwait
adc
add
pop
jmp
cmpsl
sbb
jb
arpl
hlt
loopne
es
push
push
ljmp
loop
and
es
clc
sbb
add
call
icebp
mov
je
cmp
rclb
lock
imul
rcl
pushf
adc
popa
sbb
int3
pop
decb
add
dec
lea
or
mov
add
or
add
cmp
enter
or
jns
sbb
lea
inc
adc
loope
inc
cmp
divps
icebp
and
jbe
daa
lods
add
push
lcall
pop
cmp
pop
sbb
jnp
lret
movsb
sti
and
pusha
sbb
mov
pop
pusha
and
nop
jb
inc
push
push
dec
or
data16
jge
inc
add
call
add
or
jno
lahf
jo
push
push
repz
mov
pushf
inc
sbb
outsb
adc
mov
gs
aad
jne
inc
jmp
test
jl
test
hlt
je
into
popl
xchg
cmp
scas
xchg
sbb
dec
and
xchg
cli
fadds
icebp
inc
js
mov
enter
mov
and
data16
call
xchg
sbb
mov
popa
shlb
mov
xor
xor
rcll
or
rcl
push
js
dec
inc
add
push
push
or
xchg
dec
pop
cmpb
push
dec
xor
cmp
rorb
adcl
add
mov
dec
shr
loope
fsubl
jo
and
dec
sbb
sbb
xlat
xor
pop
xchg
pop
pop
popa
fsubs
xchg
and
in
adc
xchg
adc
loop
loop
adc
int
xchg
enter
and
sbb
jp
lods
or
cmpsl
hlt
xchg
fisubrl
sbb
cmpsl
enter
pop
push
jmp
pop
xor
mov
sbbb
pop
and
popa
icebp
call
sbb
inc
cmp
addl
mov
adc
cmpsl
push
xorl
mov
cmpl
dec
push
rol
inc
dec
or
cmp
loopne
xor
je
js
icebp
in
mov
cs
or
mov
push
cmp
push
cli
mov
pop
or
inc
push
sbb
jo
mov
loopne
sub
xchg
push
clc
jmp
adcb
push
sub
test
add
adc
mov
sub
push
xchg
push
ss
pusha
cmpsb
cmp
clc
add
or
or
xor
or
xchg
jle
xor
adc
and
or
sbb
and
push
mov
aas
add
icebp
sub
loop
sbb
sbb
or
pop
andb
xchg
scas
inc
in
adc
or
ret
inc
add
jo
push
mov
jo
inc
stc
mov
pusha
xchg
pop
add
cmc
add
ficomps
inc
sbb
or
mov
mov
adc
jmp
xor
dec
adc
js
shrl
ret
ds
adc
sub
adc
lods
xlat
testb
or
inc
inc
mov
mov
pop
dec
rorl
push
sahf
or
out
pop
sbb
rolb
fsubr
insb
call
ror
xchg
out
and
shll
xor
shrb
sbb
xchg
adc
lahf
jge
clc
loope
cmp
push
or
movsb
lds
rorl
dec
xchg
mov
or
and
add
mov
cli
and
push
lock
movsl
cmpsb
sbb
pop
mov
add
pop
dec
les
push
data16
sbb
divb
mov
xor
xor
mov
out
aam
ret
or
xor
in
rclb
adc
sbb
push
enter
add
les
jne
fiaddl
popl
mov
and
or
or
movsl
pushf
icebp
stos
mov
hlt
gs
mov
pop
hlt
push
stos
enter
fs
mov
and
and
sbb
out
popa
mov
xlat
inc
jmp
jbe
or
es
xor
sub
ljmp
stos
clc
xacquire
sbb
sarb
in
aaa
daa
mov
and
loop
adc
jmp
dec
mov
cmp
xchg
insb
cmp
xor
or
shlb
aad
test
fdivrs
fcomi
ss
into
sar
clc
xor
add
add
cwtl
add
ss
push
addps
jl
add
adc
push
ret
inc
or
xor
adcl
enter
sbb
and
add
push
push
adc
jle
stos
push
or
and
rcrl
and
pop
movsl
inc
sbb
sbb
sbb
xlat
stc
sbb
pop
adc
cmpsl
mov
adc
adc
addr16
inc
pop
addl
movsb
shrb
push
jmp
sbb
push
xor
push
rolb
jg
movsl
lods
lods
mov
dec
inc
fidivrl
ficomps
mov
cli
add
sbb
dec
jmp
add
cmp
sbb
add
add
xchg
push
pop
xchg
push
jne
mov
je
mov
arpl
ds
inc
or
or
jb
pop
push
mov
movsb
cld
rcl
pop
xchg
mov
loop
sbb
cltd
fwait
add
pop
or
xor
data16
or
xor
inc
or
sub
stc
adc
pop
cli
mov
and
daa
out
fadds
lds
mov
mov
iret
pop
sbb
mov
lods
rolb
sbb
and
inc
out
and
mov
gs
call
add
lcall
lods
adc
inc
inc
push
aad
les
add
add
sbb
pop
pop
cwtl
dec
repz
push
add
movsb
and
push
and
sbb
dec
ret
push
dec
pop
or
add
xchg
mov
sub
jp
mov
jae
push
add
mov
fwait
sbb
sysret
in
rclb
pop
lods
mov
enter
jnp
and
push
push
push
add
or
pop
es
sub
add
adc
xor
scas
enter
das
xor
sub
pop
push
xor
or
xadd
sbb
adc
push
cmp
dec
fistl
mov
push
lods
pop
xchg
pop
icebp
push
sub
insb
data16
clc
xor
mov
clc
xchg
push
mov
nop
sbbb
or
or
hlt
enter
cmp
adc
adcb
xor
and
rorb
or
nop
daa
loope
sahf
xchg
push
sbb
je
sbb
sbb
cmc
insl
sahf
sub
inc
loopne
out
adc
jp
xor
pusha
jecxz
out
lahf
dec
ret
rcrl
loopne
call
dec
loopne
ljmp
jp
icebp
xor
rolb
daa
pop
insb
mov
ljmp
mov
push
lret
add
sbb
add
cmp
jo
cmp
insl
popf
sub
cli
mov
aam
cmp
xchg
push
addl
pop
jle
nop
push
ss
adc
jecxz
and
cmc
inc
lea
pop
sbb
lret
cmp
and
addb
imul
and
push
movsl
rolb
ds
lea
stc
adc
lods
xor
call
or
andb
repnz
sub
fiaddl
enter
iret
leave
movsb
push
add
lret
pop
adc
rcrl
sub
adc
movsl
lods
fs
movsb
int3
cs
sarb
or
loop
or
push
xchg
push
xchg
pop
jb
mov
sbb
adc
inc
sbb
scas
and
xchg
pop
mov
orl
lcall
inc
das
leave
add
jne
dec
push
mov
mov
flds
andb
test
call
dec
inc
and
arpl
or
aad
dec
push
inc
enter
mov
dec
adc
sub
mov
into
and
lahf
les
les
mov
pop
js
inc
lea
pop
inc
mov
mov
aam
pop
pop
pop
movsb
or
push
cmpb
and
jp
pop
sbb
loopne
and
xor
idivb
mov
dec
push
sbb
jp
jmp
cld
push
mov
fcoms
shrl
adc
add
rcr
loop
pop
mov
rolb
or
icebp
loopne
cmp
mov
jp
add
adc
push
loopne
pop
pop
cli
or
subb
mov
add
test
xchg
arpl
mov
mov
loop
enter
inc
sbb
rol
sbb
jb
xchg
movsb
adc
inc
lods
xchg
pop
popa
mov
test
xor
push
pushf
les
add
enter
pop
xor
and
mov
dec
jp
mov
mov
loopne
not
bnd
sub
ror
mov
aad
insb
jo
mov
data16
cmp
inc
daa
jecxz
xchg
test
insl
sbb
lock
fsubs
xchg
mov
mov
and
pop
fldcw
test
les
xchg
pop
cli
fs
push
pusha
mov
int3
and
cmp
ret
dec
test
fiadds
movsl
addl
sbb
or
sub
data16
arpl
mov
xchg
pop
add
jb
add
sbb
inc
movsl
add
lret
mov
dec
leave
pop
mov
sbb
lds
sbb
sbb
in
sarw
xchg
roll
iret
testb
mov
es
cmp
dec
or
adc
push
clc
mov
adc
mov
cmp
xchg
push
push
mov
loopne
call
adc
bound
je
push
dec
mov
test
lahf
and
sub
dec
mov
rcrb
stc
add
movsb
and
or
sbb
in
jl
cmp
or
jp
or
mov
cmpb
into
pop
orl
add
mov
pop
or
jp
ffreep
je
andb
push
sbb
jmp
mov
les
and
pop
adc
jno
and
bound
adc
in
cmc
or
sbb
push
fs
lods
arpl
ljmp
cli
inc
dec
int3
mov
pop
sub
mov
lods
shl
add
mov
pop
loope
sbb
pop
pop
les
shl
sarl
push
scas
push
fiadds
adc
mov
cmp
add
mov
adc
sahf
jp
inc
add
fs
imul
xchg
leave
inc
sbb
pop
rcl
sub
cltd
add
nop
mov
psubsw
mov
adc
lods
push
test
rcl
push
mov
dec
lock
add
sub
pop
pop
lea
call
sub
mov
add
ds
cli
add
adc
or
pop
and
cs
jae
sbb
aad
mov
ret
mov
orl
xorb
xchg
dec
dec
bound
sbb
add
imul
push
test
add
pusha
or
mov
mov
mov
cwtl
pop
xchg
xor
stos
jne
imul
popf
pop
test
inc
adc
insb
ret
ret
sarb
vpshufd
mov
test
cmp
pop
fstpt
cmp
sbb
rorb
pop
cwtl
push
pushaw
in
xor
js
mov
out
adc
sub
mov
les
pushf
xor
daa
inc
mov
sbb
push
xlat
add
xchg
sbb
sub
adc
xchg
movsb
arpl
and
push
cmp
and
inc
lret
push
inc
loope
cmp
mov
test
push
adc
mov
inc
add
mov
rol
add
xchg
rclb
jmp
ret
add
sub
mov
movsl
push
dec
pop
xchg
xor
sahf
or
bound
fcoms
dec
std
loopne
or
js
hlt
xchg
inc
push
shrl
xchg
hlt
xor
inc
xchg
or
ret
lret
pop
sbbl
and
mov
push
arpl
daa
pop
jmp
mov
add
push
bound
gs
addb
push
add
dec
roll
sub
mov
jmp
inc
les
orb
addr16
mov
les
sbb
dec
lret
cmp
rol
and
les
pop
shll
lods
test
push
insl
or
pop
enter
xor
js
sub
xchg
mov
lcall
xchg
lcall
sbb
or
inc
je
and
or
adc
push
les
inc
pop
daa
ljmp
fcompl
movsl
dec
sub
into
mov
test
lea
mov
cmp
orb
pop
imul
stos
inc
clc
xchg
mov
cmpsl
je
jecxz
test
daa
lret
bound
rcl
out
add
xchg
in
dec
pop
ror
xchg
push
xor
mov
mov
and
sarb
adc
lock
sub
mov
or
or
mov
rorl
mov
xchg
call
rcll
add
mov
inc
pop
add
or
mov
adc
sbb
scas
mov
cmc
fiaddl
cmp
add
jmp
decb
movb
cmpsl
pusha
or
gs
nop
notl
push
pop
push
cmp
cmp
sahf
mov
sub
loope
pop
out
icebp
add
push
or
adc
sbb
xchg
insl
pop
lret
or
push
lods
scas
imul
mov
push
outsl
pop
or
push
adc
adc
pop
and
sbb
xchg
push
adc
test
sub
mov
popa
pushf
insb
jb
lods
pop
and
xor
gs
or
mov
add
outsl
andb
adc
movsb
mov
loope
mov
push
ss
lea
mov
lahf
ljmp
cmc
cs
push
push
push
inc
mov
push
movb
pop
addr16
cmp
dec
xchg
xchg
jbe
arpl
xchg
mov
xorb
add
jo
push
push
or
cltd
cmc
in
push
push
pop
pop
xchg
xor
adc
jecxz
push
dec
cmp
pop
mov
insb
pushf
daa
and
adc
loop
imul
cmp
mov
mov
ret
fs
inc
sbb
roll
addb
or
mov
fwait
bound
sbb
or
dec
enter
cmpsl
dec
mov
jns
or
mov
add
mov
mov
jo
out
sub
andb
adc
sbb
mov
push
adc
mov
or
mov
pop
cwtl
scas
fnstcw
xchg
pop
mov
cmp
push
add
insl
movsb
insl
or
adc
add
icebp
cmc
adc
cmpsb
pusha
call
xchg
sub
enter
add
add
stos
mov
cmp
or
cltd
sub
sbb
loopne
test
pop
mov
dec
mov
sbb
xor
cmp
or
loop
adc
push
and
xchg
xchg
push
push
or
daa
push
sub
and
rcrl
jl
adcb
lds
and
popa
cmc
xchg
adc
adc
loop
xchg
push
mov
and
adc
call
imul
lds
xchg
icebp
inc
arpl
or
pop
mov
push
ficoml
dec
push
jmp
sahf
adc
pop
adc
mov
push
sbb
mov
icebp
inc
mov
and
sub
push
xchg
inc
cmp
jp
mov
add
inc
data16
cmp
inc
mov
add
adcb
les
adc
shlb
xor
jnp
xchg
mov
inc
test
mov
fmulp
adc
add
adc
int
scas
push
es
gs
adc
mov
xor
mov
cmp
loop
test
push
scas
sub
outsl
loope
and
call
aad
lock
aaa
mov
xor
mov
xor
inc
sub
call
xchg
xor
sub
mov
ss
daa
sub
loopne
pushf
sbb
and
lods
addl
movb
leave
hlt
ljmp
xchg
adcl
test
xor
sbb
mov
xchg
rorb
xchg
mov
adc
add
pusha
rcrl
jns
pop
sbb
js
cli
or
adc
ret
popf
mov
shl
rcrb
xlat
jo
arpl
jecxz
adc
sbb
cmovnp
hlt
pop
and
daa
inc
lods
dec
ss
insl
or
cmp
adc
outsb
xchg
mov
fcoml
push
cmp
test
add
outsb
hlt
mov
outsl
pop
outsl
jb
in
sbb
or
sbb
sub
pop
mov
add
into
je
dec
lock
adc
push
inc
aam
mov
xchg
ja
mov
repnz
or
pusha
sbb
fldt
or
or
ror
inc
adcl
pop
mov
movsb
scas
sbb
xor
ret
imul
xchg
adc
xchg
xchg
add
add
push
mov
push
xor
pop
xchg
loope
sbb
or
ficomps
cmp
pop
and
insl
jmp
test
jge
dec
adc
js
add
push
movl
ljmp
lods
adc
push
xor
mov
sahf
dec
mov
push
out
and
jmp
push
frstor
jae
dec
or
subb
inc
sbb
sbb
mov
movb
shr
fs
push
mov
cli
lock
stc
push
jmp
jg
cmp
xchg
je
adc
xor
mov
rolb
adc
sbb
inc
inc
add
pop
movsb
add
mov
sbb
fsub
or
mov
inc
mov
cmp
pop
jb
and
adc
mov
adc
rcrb
sbb
add
ret
xor
fmul
leave
jo
fidivs
bound
cmp
in
xor
inc
jno
add
cmpsb
movsl
movsb
push
stos
pop
xor
xchg
mov
lods
and
add
stos
ret
jno
mov
inc
pushf
sub
fmuls
btr
cltd
jp
add
loopew
jecxz
and
enter
stos
xchg
add
out
call
mov
and
les
sahf
xchg
stos
or
dec
pop
call
cmp
out
inc
add
add
push
inc
jmp
sub
dec
push
sub
cmp
sbb
or
mov
sbb
or
addb
dec
sbb
inc
pop
jmp
dec
cmp
sub
leave
inc
adc
inc
repnz
inc
adc
add
mov
out
sub
inc
lods
xor
jp
push
sub
sbb
rclb
jae
and
add
or
lods
test
dec
sub
mov
daa
xchg
ss
adc
jb
lock
xorb
rcr
add
fcom
ljmp
fimull
into
rclb
lret
jo
sub
lahf
xchg
adc
dec
test
ja
xchg
rorb
xor
inc
cwtl
movsb
gs
or
rorl
repnz
push
inc
lret
xor
shll
jne
test
push
mov
or
jl
icebp
enter
and
dec
xorl
daa
mov
scas
out
inc
loop
mov
cli
xchg
push
mov
clc
or
mov
and
cmpsb
fdivrl
sbb
push
loopne
or
mov
enter
and
xor
pop
xorb
adc
mov
dec
jge
adc
call
test
push
ret
add
add
pushf
dec
jge
jg
sub
enter
cmp
mov
arpl
loop
sbb
or
jmp
popa
jae
add
sbb
pop
inc
adc
movsb
shrl
ret
call
pop
js
mov
ret
jno
repz
push
and
and
lds
bound
inc
pusha
aaa
mov
les
daa
loopne
xchg
ret
push
dec
or
and
add
pushf
or
bound
out
push
in
mov
lock
roll
push
sub
movsl
rorb
inc
arpl
mov
or
dec
jbe
imul
ja
add
and
cltd
and
hlt
inc
xchg
shlb
pop
sbb
dec
mov
jp
xor
mov
aad
xchg
into
push
call
inc
sub
inc
adc
and
cltd
jl
sbb
fisubrs
lock
sbb
add
bnd
sbb
cmpsl
add
add
xchg
nop
aas
lea
add
cli
xchg
in
test
jne
icebp
cld
push
xchg
push
movsb
adc
push
rolb
adc
enter
pushf
jo
inc
lret
imul
and
sub
fnstenv
lcall
fdivp
add
shlb
adc
adc
push
arpl
push
adc
xchg
push
xchg
cmp
test
test
xlat
pop
add
insb
sti
test
adc
xorb
xchg
lods
add
push
es
xchg
xor
dec
dec
mov
rolb
sbb
js
lods
into
cmp
sbb
push
mov
lcall
mov
xor
inc
notb
inc
es
sbbb
push
fldcw
das
ret
rolb
cltd
test
daa
rorb
mov
jns
or
cmp
imul
or
nop
test
daa
mov
push
jmp
insb
xor
outsl
lock
xchg
inc
and
jge
and
add
push
adc
lret
stos
adc
mov
int
mov
ret
inc
pop
das
ret
pusha
mov
add
lods
sbb
ljmp
push
or
xor
or
sbb
ret
movsb
inc
push
adc
or
aam
incl
or
sub
jle
inc
mov
sbb
dec
sub
mov
inc
jns
xor
cltd
into
pop
pushf
popa
lods
cmp
mov
mov
ror
add
xchg
or
push
pop
std
inc
sbb
and
add
mov
rcrb
fwait
jmp
cwtl
sub
ret
add
xchg
ret
mov
or
mov
adc
int3
push
push
andb
mov
rol
adc
xor
mov
imul
loope
int
lret
mov
aam
cmp
int3
subb
push
or
rorb
cmp
mov
ljmp
xor
hlt
outsl
dec
and
add
rorb
movsb
fcmove
add
push
int
dec
into
adc
jne
add
inc
and
sbbb
push
into
xchg
andl
lods
sbb
mov
and
adc
leave
add
pop
pop
mov
test
xor
jo
lods
pop
repnz
or
push
xor
jno
sarl
loopne
mov
push
cmpsb
add
jno
sub
add
addb
add
xchg
addr16
xor
adc
jnp
cli
bt
dec
mov
adc
and
loop
ljmp
out
loope
test
sbb
xor
and
pop
scas
test
adc
jl
movb
and
xchg
mov
jns
push
int3
test
inc
push
add
fdivs
jns
cli
xchg
sbb
dec
pop
pop
rcl
cmp
das
lcall
or
aam
adc
mov
inc
pop
sarb
mov
xchg
addl
mov
mov
jge
sbb
cmp
xor
adc
xchg
aam
push
xchg
mov
adc
add
aam
jns
addb
call
fmuls
stos
ucomiss
test
not
popf
and
or
dec
or
cmp
sbb
dec
or
mov
mov
pusha
pop
xchg
mov
loope
adc
rcll
pop
push
ss
xor
insb
ficoms
jp
cmp
add
cmp
shrl
or
mov
imul
xchg
push
push
add
es
and
sbb
push
and
dec
push
dec
aad
xchg
sahf
mov
fsubl
and
jle
movsl
push
pop
cpuid
jl
xor
xor
pop
je
sbb
and
adc
orb
push
add
inc
dec
xor
into
int
sub
pushf
mov
or
es
outsl
lret
fnstcw
je
addb
add
fs
ljmp
cmp
inc
push
inc
js
cltd
les
xchg
mov
xor
sub
bound
inc
or
dec
fidivs
sahf
call
in
mov
push
fadds
pop
push
in
pop
xchg
or
xchg
rol
stos
adc
jo
call
sub
cmp
test
push
push
adc
add
sub
rorb
cmpb
lods
and
aaa
imul
add
or
fidivs
stc
mov
xchg
fwait
or
jp
popa
or
sub
pusha
lods
sahf
mov
outsb
xchg
ljmp
inc
dec
pop
mov
mov
sbb
xor
inc
pop
xor
das
enter
icebp
pop
inc
dec
roll
or
outsb
or
imul
push
ret
mov
or
les
or
sbb
call
pop
sbb
fisubrl
imul
mov
test
lcall
push
out
shl
adcl
jbe
outsl
aas
fstpt
sub
icebp
rsqrtps
push
jmp
add
inc
pusha
push
or
sbbb
add
add
and
push
cltd
sbb
xchg
pop
xor
add
inc
adc
test
xor
add
dec
das
pop
dec
and
adc
por
in
jb
fldenv
and
sahf
lods
dec
add
ret
cli
lods
rolb
test
lock
xchg
cmp
dec
xchg
pop
and
jmp
cmp
ret
push
xchg
push
mov
xchg
add
pop
pop
mov
push
rclb
push
mov
pop
dec
ss
or
sbb
std
xchg
movsb
add
adc
ret
or
push
stos
out
dec
cmp
sbb
xor
rorl
sub
orl
arpl
lcall
inc
pop
les
enter
subb
repnz
jne
pop
shrb
adcl
clc
push
gs
inc
or
mov
mov
sarb
lods
or
and
loope
movsb
test
andl
rol
lcall
and
mov
dec
loopne
inc
add
or
sbb
xor
xor
ret
or
lock
lods
movsb
and
pop
adc
adc
pushaw
test
cmp
clc
inc
pop
pop
test
mov
xor
or
stc
sub
xchg
or
dec
add
mov
and
orb
leave
mov
xchg
push
push
mov
and
and
adc
stc
and
xchg
andl
pop
pusha
sub
add
movsb
inc
test
into
sub
xor
dec
push
pop
push
adc
movsb
xor
xor
inc
or
rorb
les
lods
lret
inc
enter
popa
push
fstps
xor
mov
icebp
pop
add
cmp
test
ret
aam
jmp
test
movsb
add
pop
shll
addl
sbb
cmpsb
dec
and
jp
icebp
ljmp
pop
stos
pushf
sub
pop
rolb
push
aaa
inc
ret
push
adc
test
popa
dec
in
xchg
sahf
push
xchg
push
adc
into
push
dec
bound
and
sbb
ss
gs
inc
pop
mov
or
mov
add
in
cmpl
sbb
mov
nop
push
outsb
push
dec
sbb
adc
mov
cs
hlt
shl
insb
and
and
adc
je
bound
sbb
xor
and
ret
add
shll
xor
call
les
inc
in
mov
cli
insl
in
adc
ljmp
jo
xor
jecxz
xor
push
imul
pop
das
sbb
shlb
js
enter
mov
sarl
push
pop
imul
ret
adc
jo
jecxz
jg
add
mov
xorb
mov
dec
or
or
pop
and
push
mov
sbb
out
add
sub
es
push
or
and
fmul
es
mov
clc
adc
fsts
or
outsl
push
jecxz
inc
sbb
ljmp
stos
lea
adcb
push
pop
dec
sub
xor
adc
mov
pusha
pop
enter
push
xchg
les
jp
jae
and
and
and
sub
push
adc
loop
popa
test
mov
adc
jp
daa
movsl
sbb
push
inc
sub
lret
jmp
adc
jecxz
cmp
hlt
xor
and
inc
cmp
pusha
or
in
mov
push
jmp
push
adc
insl
or
adc
jns
and
js
mov
push
ja
fs
and
cmp
mov
into
sbb
cwtl
or
adc
xchg
adc
je
fs
mov
and
iret
rolb
fwait
shlb
lods
addr16
scas
add
pop
adc
push
push
fists
cld
ret
test
jle
pop
or
adc
cmp
inc
and
sbb
orb
arpl
adc
call
addr16
pop
adc
add
xor
add
push
and
pop
decl
push
push
lds
mov
dec
jno
mov
xor
rcr
stos
xchg
xor
lea
and
or
ret
inc
dec
lods
inc
and
mov
ss
mov
mov
test
lahf
loope
sbb
xchg
stos
add
loope
jle
cmp
popa
pusha
jmp
add
add
or
subb
pop
xor
lea
pop
add
inc
jmp
push
mov
xchg
cmp
in
xchg
sbb
fcom
pop
pop
push
push
lret
inc
jns
int3
sarb
mov
push
pushf
pop
or
or
mov
bound
pop
push
in
mov
xor
pop
inc
jecxz
or
add
out
dec
and
dec
lea
addr16
test
repnz
daa
sbb
cmp
out
mov
insb
sbb
pop
dec
lea
pop
sar
mov
push
lods
mov
sub
movsl
pop
adc
sbb
mov
sbb
nop
xor
xchg
mov
and
test
xchg
pushf
jb
add
clc
lods
jb
jmp
cmpsb
pushf
enter
adc
xchg
adc
loopne
xor
add
loope
sbb
andb
add
cltd
call
or
test
imul
sub
scas
outsb
pushf
out
dec
jns
push
negb
xchg
pusha
outsb
fistl
out
clc
dec
or
pop
jb
test
jno
jp
push
push
out
les
aas
adc
pop
test
inc
test
stos
inc
xor
scas
sbb
hlt
cmp
mov
and
leave
add
mov
adc
inc
jmp
mov
pop
add
push
es
mov
and
pushf
sbbb
or
xchg
fiadds
pop
pop
mov
adc
sub
push
adc
jp
cmp
arpl
imul
jp
int
es
shlb
test
test
sub
cmp
cwtl
xchg
daa
push
not
ret
fsubrs
repnz
adc
nop
cs
int
xchg
and
rolb
into
inc
cs
mov
and
mov
dec
sub
in
push
shr
add
popf
and
sub
int3
and
adc
nop
xchg
je
lea
pop
add
inc
add
inc
mov
ret
push
sub
cmpsb
popa
les
sub
cmp
xor
sbb
lea
xor
sub
inc
das
int
pushf
mov
repnz
into
pop
sbb
xchg
mov
push
fiadds
cmpsb
jmp
leave
insb
xor
nop
mov
bound
jo
dec
rorb
sbb
jo
test
add
insl
pop
ret
addl
nop
mov
inc
push
inc
lods
or
and
adc
int3
mov
add
jne
loopne
xchg
or
dec
and
sub
jp
sbbl
pop
aam
cmp
outsb
test
adc
out
push
adc
and
sub
ror
add
daa
sub
lahf
xor
cmp
fmul
clc
adc
cmp
inc
push
test
dec
add
ret
xchg
int3
gs
inc
add
pop
aaa
mov
adc
fnstsw
push
or
lret
inc
push
sbb
inc
and
jmp
push
xchg
adc
lea
movsb
add
inc
movsl
lcall
dec
xchg
loope
sub
xor
ficompl
rcr
mov
stc
ljmp
or
and
push
rolb
inc
dec
pusha
inc
dec
mov
pop
fmul
dec
add
xchg
mov
int
test
pop
out
push
pop
test
pop
ret
into
gs
push
mov
subl
push
rolb
ds
loope
popa
shlb
mov
cmpsl
xchg
fidivs
cmc
cmpsb
lock
push
mov
dec
daa
cwtl
in
ljmp
pusha
inc
inc
rclb
scas
fs
jle
or
fsubrl
rorb
ja
mov
sub
pop
push
cwtl
push
das
cmp
out
push
rcrb
cs
jnp
add
push
test
jo
pop
outsl
syscall
cltd
outsb
shr
push
rcll
add
inc
mov
sub
fimuls
jnp
cmp
xor
dec
dec
test
add
fstl
out
push
stos
orl
icebp
leave
fiaddl
push
pop
daa
mov
jl
clc
sbb
xor
push
dec
mov
sbb
clc
or
cmp
cmp
divps
aas
cli
adc
mov
push
inc
or
test
mov
inc
sub
xor
add
inc
sub
cmp
leave
xchg
je
je
sub
or
lret
or
lock
sbb
and
push
call
dec
insb
sbb
rolb
xor
pop
roll
add
dec
call
js
sbb
pop
or
testb
call
sub
sbb
bound
push
js
fs
cmc
outsl
js
sbb
je
xchg
sbb
add
and
push
jns
arpl
shlb
ret
test
mov
mov
fcmovb
rcl
lret
test
test
add
adc
ret
sub
mov
push
out
pushf
cmp
push
sub
fmul
inc
cmp
inc
icebp
mov
shlb
es
and
push
mov
mov
es
or
push
add
pushf
cmp
cmp
test
sbb
mov
pop
pop
inc
ret
loop
xchg
pop
dec
aam
sbb
push
gs
or
dec
dec
js
outsl
xor
cmp
rorb
icebp
imul
or
pop
pop
and
sbb
sarb
sbb
cmp
inc
mov
push
sbb
pusha
xor
lods
push
loop
popa
pusha
lea
sub
out
add
or
adc
insb
vbroadcastss
jbe
xchg
outsb
ss
filds
ljmp
cmc
adc
add
repnz
xchg
enter
lret
inc
push
or
outsl
aam
les
pop
int3
or
push
and
or
dec
jp
rclb
dec
lea
adc
pop
sub
and
mov
sbb
or
ret
dec
or
push
push
push
div
dec
dec
les
sub
lods
sbb
xor
cltd
sarb
push
mov
mov
test
add
fdivrs
push
jo
in
xchg
add
pop
sub
imul
loope
lock
lods
push
push
inc
cmp
rolb
jbe
adc
xchg
xchg
ss
sbb
rcrb
mov
cmpsl
sbb
sbb
clc
push
and
push
adc
fcomi
ret
add
pusha
xchg
push
push
push
xor
ror
jg
and
mov
je
sbb
ret
outsl
test
insb
addb
mov
mov
lods
xchg
ljmp
sarb
inc
mov
cmpsb
fistpl
movsl
adc
xor
sub
test
rep
xchg
lea
test
cmc
jmp
and
xchg
repnz
adc
xor
xchg
bound
cmp
inc
mov
sbb
inc
or
add
cmp
popa
sub
jbe
out
pop
ljmp
popf
jo
jmp
mov
jl
int
enter
push
pop
movsb
sbb
xorl
jne
cmp
or
cmp
outsl
cltd
shlb
call
jns
xchg
adc
lret
xchg
push
das
adc
add
mov
pop
roll
add
int3
out
jb
fs
add
or
cmp
or
mov
pop
mov
dec
pushf
fs
dec
mov
mov
and
ret
xor
xorb
shl
adc
sbb
shrl
jno
mov
push
and
les
add
push
sahf
and
mov
xchg
loop
sbb
add
mov
idivb
in
dec
push
mov
or
ret
or
out
mov
xchg
leave
fcompl
add
inc
aam
js
mov
push
repz
xchg
mov
in
dec
or
inc
and
int3
push
mov
ds
add
add
testb
push
add
leave
add
xor
lret
andl
fcoms
leave
add
daa
dec
mov
imul
daa
test
sbb
imul
push
xor
or
test
push
push
rcrb
jl
jnp
or
pop
sub
pop
xchg
loop
mov
adc
pop
fdivl
or
clc
pop
and
add
repnz
pusha
push
pop
inc
or
subl
or
mov
cmp
addb
pushf
cmp
sub
sbb
clc
int
ljmp
sti
pop
or
nop
xchg
add
add
jmp
xor
loop
lea
push
jmp
mov
sub
push
fnop
mov
outsl
sbb
rol
cmp
in
mov
pop
sbb
sub
repz
add
inc
jge
jo
lods
push
or
psrad
icebp
mov
add
adc
mov
cs
in
xor
adc
loope,pt
mov
les
dec
rcrl
adc
sbb
mov
loope
xor
and
adc
andb
inc
testb
xchg
inc
notb
faddp
notb
stos
adc
addr16
push
iret
pop
rol
lret
mov
addl
add
adc
push
popa
adc
push
dec
cmp
test
sbb
xchg
xlat
push
out
outsl
cwtl
repnz
pushf
add
addb
cmp
dec
inc
or
addl
lds
pop
cmpb
mov
inc
cwtl
in
lcall
lods
and
and
lds
in
jo
adc
mov
mov
in
cmp
push
push
into
mov
xchg
int3
cmpsl
cmc
lods
pushf
adc
add
mov
inc
adc
mov
cmp
dec
ret
sbb
cltd
cmpb
loopne
jl
in
sbb
rol
out
ss
and
fimull
cmp
add
pop
add
sub
hlt
jno
pushf
xchg
clc
or
pop
mov
sbb
mov
xor
mov
inc
loope
test
and
xor
xchg
and
sbb
fcomps
pop
push
push
pop
mov
pusha
sub
mov
js
fidivs
test
cmp
enter
nop
pop
cs
adc
ret
cltd
bound
xchg
pop
filds
dec
ja
test
js
je
mov
ljmp
es
cmp
or
and
adc
add
aam
xor
test
cs
sub
mov
mov
jne
cld
jbe
adc
push
add
shrb
mov
and
lea
add
mov
int
out
loope
xor
adc
int
lret
rolb
dec
jb
and
out
out
lret
xchg
push
pop
adc
cmpsl
add
jne
and
push
jmp
jle
inc
add
nop
add
jecxz
sub
lods
jo
xchg
add
ja
dec
pop
stos
lods
add
adc
xchg
cmp
add
mov
ret
icebp
inc
push
mov
jle
leave
xchg
das
dec
add
or
ss
test
cmpb
xor
xor
mov
hlt
jo
cmp
xlat
pop
xchg
mov
js
rolb
xor
push
lret
or
fadds
aaa
push
mov
movsl
push
add
pusha
add
add
mov
adc
out
enter
xor
xor
mov
add
int
frstor
and
lock
orb
and
test
sbb
push
add
lret
pop
movb
ret
push
shr
lods
add
push
jl
cmp
add
add
xchg
cmp
mov
ljmp
outsl
add
js
mov
pop
add
or
mov
iret
push
push
xchg
pop
ds
lods
inc
jp
adc
cs
add
xchg
lret
loope
sbb
cmp
orl
inc
push
call
or
test
gs
mov
cmp
xchg
pop
dec
sti
pop
mov
xchg
fcmovb
mov
out
popa
outsb
sbb
adc
sbb
or
push
out
loope
or
add
add
ror
or
lods
aad
mov
jb
movsl
cmp
ret
lods
adc
ljmp
adc
pop
jge
mov
or
pop
xor
adc
fnstcw
push
aaa
push
test
in
movsb
cmp
add
sbb
add
lods
adc
xor
jno
fs
arpl
test
xchg
mov
mov
out
lret
pusha
and
or
sti
adc
js
test
cmp
enter
outsb
xor
into
sarb
bound
sub
mov
sbbb
sbb
out
xchg
mov
inc
adc
pusha
cmc
nop
jne
outsb
and
das
or
fs
rcl
cmpsl
pop
pop
or
add
jno
dec
dec
adc
data16
jecxz
in
and
outsl
sbb
test
loopne
imul
arpl
mov
jo
icebp
xorl
rol
push
repnz
mov
sbb
jmp
or
lock
dec
sbb
push
rorb
cltd
fcomps
add
push
outsl
push
les
lret
xchg
xchg
andl
cli
sbb
pop
sbb
das
or
cmp
scas
int3
movsl
and
adc
push
xchg
sub
pusha
pop
jne
mov
test
add
inc
add
adc
pop
xor
movsb
es
test
pop
cmc
int3
test
aam
cmp
cltd
push
sbb
mov
test
sub
push
push
or
xor
and
sub
and
mov
or
mov
or
inc
adc
fs
push
cmp
subl
add
and
or
cmp
adc
jne
popa
cli
in
push
jo
inc
mov
pop
push
ds
dec
mov
jns
cmp
xchg
ljmp
imul
add
xchg
bound
mov
sbb
inc
dec
stc
imul
push
pusha
sub
cmp
add
mov
add
roll
mov
mov
nop
push
push
popa
into
mov
inc
jp
es
or
add
xchg
push
movsb
jbe
movsb
test
push
icebp
lods
push
sbb
sbb
jo
orb
mov
push
xor
ror
into
push
arpl
xadd
jmp
mov
mov
and
movsl
xlat
movsb
sbb
mov
test
sub
cltd
pop
xchg
add
ret
mov
test
pop
es
mov
or
sbb
fs
cmp
lcall
shlb
out
pop
pop
orb
loope
inc
add
push
jge
add
ret
mov
xor
cmp
sub
rclb
dec
push
sub
xchg
adc
rolb
lock
das
lds
js
or
clc
adc
test
push
push
test
dec
mov
nop
add
or
dec
mov
imul
sbb
xor
xchg
add
adc
mov
mov
add
push
pop
movb
sub
insb
movsl
lock
push
xor
add
add
xorb
clc
push
xchg
mov
xchg
mov
or
or
cld
or
xor
sub
roll
cli
and
adc
xor
jo
into
test
shlb
ret
xor
xor
mov
xchg
add
sub
lock
test
sub
inc
inc
mov
jcxz
mov
cmp
popa
add
adc
and
jo
sbb
insl
cltd
roll
sbb
js
lea
mov
lcall
sbb
xor
ds
push
and
sbb
les
sar
xor
out
xor
pop
mov
xor
insb
insl
stos
jne
test
sbb
jp
test
leave
js
dec
fwait
ror
stos
repnz
loope
dec
sub
or
pop
or
mov
push
daa
add
cmp
adc
ljmp
fs
mov
roll
adc
inc
add
jne
push
imul
push
add
outsb
aam
jno
add
sti
push
add
out
daa
add
flds
out
add
movsl
and
loopne
inc
inc
testb
loope
popf
push
cmp
mov
xlat
push
sbb
adc
shlb
jecxz
add
push
pushf
add
xchg
popf
or
add
add
fidivrl
rorb
bound
ret
ja
mov
add
std
clc
or
aam
lret
cmpl
mov
pop
loope
icebp
push
fs
push
loopne
or
imul
pop
xchg
clc
rcl
iret
adc
loop
add
outsl
out
mov
adc
cmp
add
les
push
cmp
or
sbb
cmp
mov
sub
js
sti
add
out
addb
js
add
test
sbb
and
mov
adc
add
cmp
add
and
xor
mov
rcr
jp
mov
rol
push
xorl
loopne
cmpsl
adc
dec
xchg
sti
imul
fnsave
lods
adc
adc
push
je
roll
or
les
sarl
mov
mov
lods
rcrl
comiss
adc
push
js
cmp
lods
test
fadds
sbb
or
or
arpl
jl
orl
lea
inc
aas
imul
cltd
add
dec
imul
push
push
and
into
ret
sbb
nop
push
or
add
js
xchg
xor
movsb
add
xchg
jno
jb
mov
rorw
adc
bound
int
lods
or
in
pusha
and
in
and
cmp
jno
or
inc
rolb
les
add
das
xchg
shrl
xor
fs
mov
cltd
mov
rcrb
and
xor
push
xor
out
repz
sub
add
into
out
sbb
inc
icebp
ja
icebp
call
push
idivb
adc
lcall
cwtl
mov
call
imul
rcr
add
dec
jns
cmp
insb
fs
cmp
pop
add
cmp
rolb
mov
and
iret
and
sub
sahf
sbb
or
cmp
andl
lcall
or
lea
dec
or
xor
push
repz
test
inc
daa
add
pop
adc
xchg
jno
pop
adc
pop
add
les
loop
and
push
fisubrs
enter
push
sbb
sbb
inc
dec
pop
push
inc
or
js
lret
lods
hlt
or
movsl
inc
sbb
and
jbe
pushf
mov
dec
and
loope
add
cmp
sbb
add
loopne
push
out
push
mov
int3
lret
or
test
mov
dec
ret
dec
or
xor
mov
outsl
or
mov
sub
add
insb
ret
push
push
adc
push
and
xchg
sbb
mov
rolb
pop
push
sbb
or
pushf
push
sub
mov
add
in
mov
mov
jmp
lock
mov
aam
ljmp
jecxz
clc
lock
aaa
sbb
out
add
push
dec
cmp
pop
sbb
pop
fwait
jmp
push
dec
xor
xchg
cli
sub
push
and
ret
sbb
inc
loopne
push
cwtd
addb
cltd
or
jb
pop
insl
hlt
test
xchg
or
mov
out
sbb
sbb
push
dec
cmp
and
mov
adc
jnp
inc
loope
sbb
lcall
icebp
test
shll
adc
inc
cmp
mov
enter
stc
adc
add
rcr
addb
adc
lods
dec
ss
push
mov
xchg
and
pop
jge
cmp
call
in
push
cli
rolb
dec
out
push
mov
adc
fldl
or
xor
push
mov
and
add
xchg
mov
hlt
ret
loopne
bound
pushf
movsl
pushf
mov
xchg
push
pop
shrb
rcrl
mov
stos
setbe
test
adc
xor
jo
jmp
bound
or
cli
add
hlt
push
jge
test
nop
xchg
lods
dec
and
es
sub
cltd
lcall
add
ret
test
add
or
jcxz
test
pop
mov
jne
inc
push
stos
test
sbb
les
rcr
je
mov
adcb
sahf
gs
popa
shlb
imul
sub
cld
xlat
dec
pop
dec
pcmpgtd
sub
pop
dec
shl
or
and
es
les
enter
shll
lock
fistpll
popf
mov
repz
cli
mov
ret
cli
in
popa
leave
or
imul
inc
popa
nop
ljmp
or
test
je
dec
lret
jbe
jp
xchg
push
in
sub
movsb
adc
lcall
adc
loopne
xchg
pop
test
cmpsl
pop
fisubs
arpl
fwait
adc
sub
cmp
sub
cmpsl
inc
mov
sarl
push
and
jbe
ljmp
cmp
and
paddsw
add
scas
add
xor
mov
ss
pop
enter
nop
cmc
mov
push
dec
xchg
sbb
mov
stos
rorb
mov
cmp
push
pop
andb
mov
repz
xchg
pusha
mov
loope
rcl
inc
inc
shrb
cmpsl
xor
popa
lea
sarb
es
jge
orl
add
rolb
js
push
pop
and
or
push
pop
xchg
adc
or
inc
cmp
push
aas
dec
nop
int3
fadds
inc
sbb
add
repz
lock
nop
mov
lods
add
mov
seta
loop
popa
xchg
adcl
inc
add
cltd
pop
bound
cmp
fstpt
jo
jno
adc
xor
push
insl
sbb
add
push
dec
jge
fsubrs
cwtl
or
stos
lahf
ficompl
inc
cwtl
ja
xor
xchg
fsub
in
roll
add
add
pop
and
lea
inc
in
fistps
add
and
xchg
clc
lret
clc
push
sbb
mov
cmpsl
sbb
inc
outsb
adc
rcrl
sbb
outsb
dec
jl
adc
mov
and
sub
outsb
sahf
in
lock
xchg
lods
mov
test
or
xchg
dec
ret
ljmp
inc
or
mov
test
adc
mov
repnz
rclb
cltd
push
sbb
lods
xor
sub
insl
xchg
mov
xor
lods
fisttpl
cs
test
cmp
xor
mov
pop
dec
add
roll
mov
rolb
loop
pop
cmpsl
or
insb
or
lock
rcrb
out
sbb
push
repnz
mov
xchg
jl
push
test
jmp
push
pop
mov
mov
xchg
data16
and
sbb
sbb
and
mov
mov
insl
leave
inc
push
add
aad
pop
dec
sbb
add
popa
leave
fisubs
push
inc
je
cmp
inc
push
shl
dec
add
lea
and
mov
nop
test
add
lret
pop
pushf
inc
xor
fsubrs
cmp
push
xchg
push
dec
orl
and
sub
vrsqrtss
push
add
mov
addb
adc
adc
fs
xchg
shlb
test
xchg
sub
sbb
orb
lods
test
adc
push
mov
pop
sbb
sub
addl
jge
pushf
mov
call
adc
mov
sarl
mov
push
std
sbb
jp
rcll
cwtl
and
lret
push
rcll
mov
push
mov
popf
sti
out
in
or
push
inc
outsl
in
inc
int3
sbb
fistps
xor
lret
adc
push
arpl
inc
adc
or
into
or
pop
mov
push
cmp
sub
addr16
add
mov
inc
or
out
cmc
insl
loope
xchg
jp
add
mov
cmpl
filds
mov
push
ret
jo
enter
or
inc
ljmp
fs
lret
orl
and
pop
ss
sub
dec
movsb
nop
xchg
sbb
out
cmp
ja
xor
push
ret
lds
clc
add
addl
dec
pop
mov
fs
jle
negb
push
in
lea
clc
and
and
rcrb
or
imul
test
les
push
roll
mov
or
xor
sbb
push
test
or
loopne
orb
jecxz
inc
js
xor
arpl
pop
push
dec
add
pop
fimuls
nop
or
mov
ss
imul
lods
movsl
loope
push
sub
inc
imulb
fiaddl
in
jbe
xchg
add
push
dec
mov
cmc
xchg
adc
sbb
add
sub
add
and
and
push
ja
inc
jb
imul
test
fisubrl
mov
adc
push
or
mov
add
and
cmp
xor
push
shll
mov
jb
adc
imul
lcall
fxch
in
mov
lock
sbb
inc
jns
pop
or
sbb
addps
mov
push
add
lret
sub
test
outsl
cmp
add
mov
dec
push
xchg
jecxz
push
cmpsb
sbb
stc
sub
or
arpl
or
xor
jp
adc
repnz
outsb
adc
push
ljmp
add
imul
and
cmp
adc
fs
ret
dec
sub
mov
adc
jnp
mov
leave
into
shrb
addb
add
loop
adc
jb
test
outsl
fs
push
jl
sub
jbe
dec
cmpsl
gs
test
adc
pop
and
cmp
pop
or
or
scas
or
adc
jp
ficoms
xchg
cs
inc
or
adc
scas
push
lcall
test
clc
cmpsb
sbb
cs
add
aam
xor
pop
push
js
xchg
or
adc
lock
mov
jp
inc
push
or
lock
pop
pop
xchg
add
les
adc
or
test
icebp
lock
or
out
inc
and
fsubs
xchg
or
jb
punpckhwd
push
paddw
add
cmp
push
cmp
jecxz
cs
cmp
mov
repz
clc
sbb
sbbl
jl
and
inc
add
mov
add
dec
shlb
sub
or
dec
cmpsb
mov
sub
je
xchg
jp
xor
shrb
stos
mov
out
jecxz
push
pusha
loopne
adc
inc
sub
lret
shlb
pop
loop
lds
js
cld
mov
adc
scas
test
dec
minps
lea
repnz
dec
mov
mov
push
rclb
pop
jge
rolb
add
insl
mov
cmp
pop
inc
cwtl
fistps
negb
push
pushf
pusha
das
and
or
shll
adc
xchg
adc
pop
pop
lret
out
cs
cmp
in
xor
adc
add
xchg
sub
jo
add
call
xchg
movsl
xchg
sub
mov
xchg
stos
testb
or
and
incb
dec
sub
stos
xorb
adc
push
or
nop
clc
mov
inc
cmpsb
gs
sbb
xorb
sbb
jae
test
ds
push
or
dec
js
outsl
adc
arpl
sub
ds
inc
ret
sbb
sbb
clc
lret
cli
sbb
and
inc
ret
push
icebp
ror
imul
ja
xor
pusha
dec
out
arpl
xor
fwait
push
adc
push
xchg
adc
add
mov
dec
add
push
xor
add
xchg
negb
test
in
jmp
sub
jb
sbb
inc
push
pop
fmul
push
jne
rcrl
pop
jno
stos
out
outsb
sbb
push
xchg
cmp
inc
pop
sbb
loop
iret
add
xchg
dec
pop
inc
adc
dec
sub
mov
or
and
add
pop
imul
cmp
mov
hlt
adc
pop
lahf
subb
adc
subl
dec
or
mov
cmp
aad
adc
push
loope
mov
xchg
inc
dec
clc
mov
sahf
cli
push
cwtl
dec
add
fsubl
lahf
and
imul
and
sbb
xchg
ficoml
pushf
add
das
add
add
or
pop
sub
shl
xchg
jo
pop
adc
and
add
jno
call
shr
xchg
mov
lock
xor
sub
jno
and
inc
pusha
sbb
insl
shrl
orl
dec
outsl
or
adc
sbb
daa
cmp
add
push
scas
pop
adc
in
lods
addl
sbb
sub
ljmp
jecxz
in
adc
cmpsb
icebp
aam
inc
mov
mov
lret
clc
mov
mov
pop
jecxz
mov
dec
sbb
loopne
xchg
inc
sub
push
imul
data16
xchg
lock
dec
out
in
dec
rcrb
sbb
sub
xor
inc
mov
sahf
sub
pop
sub
mov
lret
orb
test
adc
sbb
mov
or
aaa
test
or
rclb
test
xor
xor
adc
add
jne
mov
mov
ds
xor
out
sub
jbe
cwtl
enter
adc
xor
aad
lds
sub
pop
adc
push
insb
pop
and
test
lret
push
and
jbe
pusha
sbb
out
add
or
adc
jp
mov
sbb
xor
xchg
and
lcall
cmp
js
sbb
pop
jbe
cs
sub
cmp
rcl
push
adc
loopne
into
mov
push
out
inc
data16
movsb
jae
push
loopne
cmp
bound
lahf
xchg
or
sbb
add
lock
andb
lea
lret
jb
cmpsb
cld
iret
push
sub
dec
sub
dec
loope
sarb
push
push
xor
movsb
addr16
bound
mov
cld
stos
inc
cmp
setb
or
or
xchg
insl
xor
push
add
or
aaa
mov
xchg
and
add
ss
add
pop
in
loopne
mov
cmp
fs
pop
adc
mov
imul
lods
or
cs
push
add
sub
sbb
ss
inc
mov
psllw
divb
add
push
cmp
jbe
push
lods
mov
icebp
sub
push
sbb
or
push
nop
mov
sub
jo
jecxz
add
xor
ds
hlt
xchg
test
jno
mov
xchg
or
or
push
fdivrp
in
icebp
mov
add
cwtl
les
ds
mov
test
popa
add
push
rclb
cmp
mov
pop
jl
pop
pop
sbb
jg
add
adc
adc
push
js
dec
add
mov
adc
pop
mov
in
dec
mov
sub
add
and
fdivp
add
adc
inc
pop
cmc
xchg
add
adc
jmp
inc
je
or
lret
ret
mov
mov
bound
jne
push
sub
test
and
push
push
and
add
popf
jmp
or
scas
cld
xchg
push
and
repnz
insl
push
neg
sub
sbb
mov
jnp
xchg
push
call
sbb
ja
lret
sbb
adc
push
inc
ret
rcr
sub
add
es
xchg
les
sub
lods
sbb
pop
jmp
outsl
out
and
sbb
iret
loope
pop
add
pop
mov
pop
pop
adc
sbbl
test
inc
jge
sbb
sub
rorb
icebp
jno
mov
icebp
inc
mov
ret
cmp
add
mov
loope
ret
xor
add
daa
movsb
pop
dec
cli
push
mov
movsl
and
sarl
push
and
add
mov
sub
dec
pushf
int3
cmp
lock
sbb
xor
and
xchg
add
ds
jns
icebp
pusha
add
incb
and
lods
xor
or
lods
arpl
sbb
or
xor
cmp
cmp
xchg
shufps
jp
dec
clc
add
adc
repnz
cmp
mov
jmp
cmp
mov
fs
insb
pop
mov
out
das
or
out
push
orl
flds
inc
or
cs
ret
js
xchg
add
rol
jae
ljmp
lret
or
mov
bound
imul
sbb
lret
inc
hlt
lds
dec
cmp
imul
sbb
push
sub
xor
push
or
dec
loopne
mov
pop
ret
add
lock
roll
insb
fst
sbb
js
scas
lock
call
xor
es
lods
xchg
jno
mov
inc
arpl
xchg
int3
movb
sbb
xlat
roll
hlt
cwtl
sbb
inc
fmuls
movb
int3
jp
lods
clc
sahf
add
and
jno
lahf
loope
cmp
add
icebp
mov
or
and
ret
inc
insl
rcrl
add
pop
or
ret
mov
sbb
das
out
imul
cmp
insb
mov
or
push
divl
test
scas
xor
sbb
enter
cmp
rcll
or
sbb
cltd
shlb
js
rol
sarl
add
hlt
cmp
fmull
and
xor
nop
sbb
mov
cmp
jp
sti
xchg
push
rorb
push
add
insb
fildll
xchg
jbe
add
mov
xchg
jle
negb
sbb
arpl
pop
push
loopne
int3
jno
dec
das
pop
dec
lods
out
inc
mov
mov
lret
mov
testb
push
mov
nop
add
sub
and
shlb
cmp
dec
pop
push
mov
dec
push
pop
add
mov
loopne
push
rorb
ret
roll
sub
add
test
fwait
popa
sub
sbb
mov
scas
sbb
adc
inc
mov
les
push
int3
and
orb
ds
ret
sub
or
xor
pop
mov
add
test
movsb
call
push
sbb
loope
stos
mov
ss
lcall
or
jbe
adc
into
into
enter
add
adc
add
ljmp
fdivs
inc
dec
addb
or
jmp
icebp
pop
add
mov
sbb
mov
imul
loope
pop
push
leave
bound
jnp
sub
mov
cmp
push
call
cmp
dec
jp
outsl
gs
nop
add
and
dec
mov
test
xor
add
mov
adc
mov
push
cmpsl
sub
xchg
xchg
adc
pop
xchg
movsl
and
mov
test
adc
popf
orb
cmp
add
xchg
test
and
pop
add
fs
push
pop
jl
cmc
add
notl
subl
scas
or
mov
pop
sub
mov
adc
jo
pop
rorb
and
rolb
push
adc
push
push
sub
test
mov
ja
push
xor
push
js
gs
loopne
sarb
fmull
loop
shrb
mov
xchg
scas
push
mov
push
imul
jg
loope
push
pop
in
adc
jge
aas
push
jp
add
mov
sbb
sub
mov
rcl
jp
cmc
and
in
pusha
in
pushf
lret
sbb
adc
les
repnz
jmp
add
mov
pop
or
xchg
fs
mov
push
leave
test
and
adc
xchg
inc
cmp
shl
or
lods
das
sub
xor
loope
outsb
add
adc
xor
bound
mov
xchg
je
hlt
add
or
rclb
dec
inc
add
aas
ret
xor
mov
test
pop
push
xor
add
rolb
xor
push
push
jnp
pop
test
incb
aam
imul
test
movsb
test
mov
push
or
daa
push
mov
add
stos
mov
adcb
loope
jmp
mov
orb
test
or
sbb
cmp
add
push
mov
outsl
push
ss
in
arpl
add
xchg
mov
mov
fs
sahf
xchg
sbb
daa
ret
test
sbb
cmp
ss
sarb
loopne
push
lods
sub
sub
lret
pusha
lods
imull
mov
fadds
or
rclb
mov
push
subb
xor
or
rcr
adc
imul
xchg
mov
push
movsb
mov
loopne
test
ss
pop
inc
js
cmc
in
or
or
add
inc
push
xorl
dec
pop
rolb
add
or
pop
inc
stos
dec
cmp
push
out
ja
arpl
add
adc
lcall
in
call
pop
mov
pop
add
and
nop
adc
imul
aam
xchg
in
js
stos
data16
pop
mov
pop
mov
addl
xchg
push
inc
and
adcb
mov
mov
push
add
cwtl
cli
sub
loopne
jbe
mov
xchg
test
ret
mov
mov
xchg
fs
jecxz
jge
cmc
xor
or
lock
adc
je
hlt
xchg
fcom
loop
ret
xor
or
pop
adc
stos
sbb
xorb
test
or
cmpsb
jo
scas
fisubrl
mov
data16
repnz
adc
fists
scas
push
pop
fistpl
rcl
js
cmpsb
out
add
sub
and
movsb
ret
xchg
add
enter
xor
or
loopne
sbb
or
inc
dec
inc
ror
mov
jge
ficoms
orb
xchg
sbb
loope
frstor
lea
push
xor
sahf
lock
xor
stc
or
movsb
add
jp
lahf
cli
inc
popf
or
xchg
pushf
clc
jecxz
je
scas
pop
and
sbb
xor
or
stc
dec
loopne
add
pop
fs
push
pop
xchg
lret
daa
stc
orl
rolb
pop
inc
jge
movl
mov
ja
add
xor
rol
popf
mov
xchg
jp
and
xchg
movsb
add
mov
cld
mov
adc
jg
push
es
inc
ret
sub
clc
lcall
push
movsb
and
aad
jbe
xchg
test
mov
add
pop
cmp
lods
por
jns
lret
cli
and
ficoms
cld
adc
adc
sbbb
add
mov
pop
jp
xor
mov
sub
pop
outsb
idivb
xchg
mov
js
push
movsl
cli
and
mov
inc
out
add
test
push
dec
js
test
imul
xchg
mov
add
out
dec
gs
leave
jo
ret
add
dec
add
ficoms
fcompl
leave
mov
sbb
push
or
pusha
inc
mov
dec
lods
push
icebp
mov
dec
or
inc
and
lret
dec
xlat
andb
sbb
cmp
inc
rol
adc
sub
roll
add
cmpsb
jo
xchg
cmp
or
fwait
pop
inc
aam
pop
sub
inc
or
mov
mov
cmpsl
movsl
pop
sub
lods
hlt
mov
push
sbb
push
loopne
add
pushf
push
adc
add
xchg
ret
out
cmpsl
sahf
and
sbb
inc
bnd
aam
sub
mov
rcr
decb
je
sbb
jecxz
add
cwtl
jge
rclb
movsl
add
repnz
add
or
call
inc
js
js
add
loop
xchg
andl
and
push
jb
cmp
ror
cli
push
imul
loopnew
pop
call
push
cltd
sahf
add
cmp
add
inc
sbb
cmp
loope
or
pop
push
inc
jp
loopne
xchg
sbb
negl
mov
sbb
mov
popa
in
notb
and
add
lods
insb
and
nop
xor
imul
ret
mov
sub
pop
add
dec
inc
sub
js
pop
imul
push
rcrl
test
pop
lock
or
jle
pop
dec
cmc
ds
sub
enter
insb
scas
add
lods
add
arpl
ds
insl
data16
and
push
xchg
sub
es
js
add
aam
sbb
insb
push
leave
mov
inc
aaa
pop
dec
sbb
nop
sub
sbb
hlt
dec
xor
or
and
inc
out
sub
aaa
shl
popa
mov
inc
inc
into
xchg
stos
insb
add
or
fiadds
push
cmp
stc
test
loop
jecxz
sbb
push
and
or
mov
mov
adc
cwtl
inc
fcoms
enter
cmp
lret
adc
pusha
icebp
sbb
jge
ss
mov
pop
add
adc
push
xor
cmp
sub
pop
aad
popa
dec
sub
arpl
ret
sarl
outsb
cmp
mov
xchg
mov
cmp
je
imul
sub
js
pop
test
push
adc
dec
test
sub
str
sbb
mov
inc
inc
cmp
daa
sbb
sbb
hlt
or
dec
test
push
pop
sbb
repnz
dec
cmc
adc
test
sub
arpl
dec
push
mov
ret
ja
sub
sub
pop
xor
movsb
pop
shlb
mov
or
ss
pop
scas
pusha
mov
inc
mov
mov
adc
data16
or
inc
hlt
or
pop
cli
xchg
out
je
push
pop
mov
dec
cmpb
jg
test
or
push
ss
cmp
lock
sub
mov
loope,pt
js
mov
and
je
lret
and
jno
call
stc
add
mov
inc
push
test
mov
adc
push
adc
xor
dec
pop
insb
jae
mov
jne
jmp
mov
push
pop
xor
enter
es
mov
cmpsl
and
xchg
lock
loopne
pushf
pusha
adc
add
jno
lock
add
fsts
adc
sbb
mov
mov
push
loopne
jno
add
or
fdiv
or
test
out
jb
lods
and
pop
dec
jmp
icebp
nop
cmp
push
fcmovnb
cmp
push
mov
mov
pop
sbb
clc
rcll
cmovns
pop
push
jl
ret
adc
sahf
bound
movsl
gs
cmc
xchg
add
mov
sub
xor
mov
mov
add
sbb
test
pop
enter
xchg
mov
mov
pop
dec
pop
cmp
cmp
xor
clc
or
dec
fstpl
pop
or
sahf
or
aaa
jb
add
sub
push
daa
xchg
xorb
imul
sbb
lahf
dec
shrb
sbb
inc
test
lret
or
sahf
inc
dec
push
xor
jns
popf
test
mov
xchg
add
lds
pop
pop
mov
icebp
loopne
test
stos
adc
push
mov
xor
cwtl
ljmp
js
sarl
inc
adc
rolb
dec
pop
push
hlt
les
push
fisttpll
bnd
mov
add
cmp
ljmp
dec
ret
add
mov
mov
add
mov
mov
add
orb
push
lock
xor
insb
repnz
sub
mov
cli
xor
pop
ret
shrb
lock
das
pop
lcall
inc
dec
cmp
jns
cmp
push
and
jmp
adc
xor
and
pop
clc
or
add
leave
mov
and
or
xchg
fimull
sbb
fs
add
push
and
sbb
mov
sbb
mov
mov
mov
leave
stos
sbb
leave
mov
jl
sahf
sub
into
push
sbb
out
lret
cmp
xchg
inc
ret
add
lret
cmp
movb
sbb
rolb
lock
or
out
test
add
and
daa
stos
rcrl
mov
or
imul
and
and
xchg
js
adc
cmpsb
adc
mov
fs
pop
int
lcall
loopne
inc
push
and
mov
and
inc
inc
shrl
lock
jb
inc
mov
cmp
movb
pop
dec
sbb
push
mov
sti
adc
add
jne
insb
lock
add
pminub
push
dec
test
pop
mov
cmpl
ret
add
mov
scas
sbb
into
insl
sub
ds
icebp
kmovb
adc
mov
enter
push
imul
push
add
inc
stos
cmp
data16
int3
pop
movsb
sub
cmp
and
mov
or
popa
mov
mov
push
es
les
jbe
sub
scas
movsl
aad
insl
mov
leave
sbb
or
popa
jecxz
sbb
sbb
sbb
jae
les
inc
pop
xchg
sbb
push
call
test
mov
cmp
test
call
pop
add
and
cmp
adc
or
adc
jae
sub
pop
inc
fstps
adc
jo
pop
cmovbe
sbb
mov
pop
pop
shl
es
repnz
push
cmp
fidivrs
in
jl
mov
dec
js
xlat
aaa
cld
ret
add
sub
pop
inc
fwait
mov
jbe
push
xlat
push
xor
orb
dec
sub
push
fildll
fwait
out
inc
out
sub
movsb
rol
aam
add
test
mov
aam
jecxz
jo
rol
es
mov
add
sbb
fldt
xchg
mov
lock
cmp
lcall
add
add
adc
outsl
push
out
push
add
sbb
inc
les
adc
or
inc
mov
leave
inc
or
roll
mov
sub
sbb
pop
jb
or
dec
out
test
rolb
pop
and
cmpsb
push
mov
sbb
mov
insl
cmp
add
sub
mov
mov
add
jge
xchg
inc
ret
sbb
sub
nop
sahf
aam
sbb
out
sbb
ljmp
mov
aas
push
and
jo
sarl
call
or
xchg
inc
cs
push
xchg
push
js
adc
pushf
inc
rcrl
cmp
into
aam
bound
mov
movsl
aam
fwait
sbb
movsb
xchg
je
lock
and
mov
fdivl
ja
sbb
es
cmp
push
or
movsb
rorb
inc
or
js
sahf
rorb
sub
cmp
popa
dec
sbb
sbb
divb
and
lods
test
mov
rclb
jecxz
or
pop
test
and
inc
dec
mov
and
hlt
push
cmp
xchg
orb
icebp
shrb
pop
inc
or
cmpb
dec
inc
push
cmpsb
and
jg
das
push
scas
and
shlb
cld
add
test
mov
inc
adc
orl
xor
cmp
and
pop
orb
adc
add
dec
dec
into
mov
dec
shrl
push
popa
inc
rcrb
test
add
xor
lea
sti
mov
or
and
cmp
inc
or
test
inc
loope
movsb
pop
xchg
xchg
lock
dec
popa
loopne
rol
pop
and
mov
loopne
cmc
enter
faddl
mov
js
mov
xor
out
jns
je
xor
adc
movsb
and
add
call
mov
mov
sub
inc
pop
mov
xchg
dec
push
dec
xchg
or
jmp
add
popa
mov
add
ds
loopne
xor
movsl
ret
shlb
faddl
cmp
and
incb
fsubrp
pop
stos
or
repnz
pop
pop
imul
add
sbb
mov
call
xchg
les
rcll
pop
cmp
sbb
loopne
inc
and
xchg
ret
and
add
orl
sbb
inc
mov
mov
and
xor
in
mov
xchg
shlb
stos
lret
jp
xor
mov
movsb
sbbl
nop
and
pop
in
jmp
movl
add
push
xchg
push
pop
jns
int3
jae
dec
bound
and
pop
jns
xor
xor
xor
int3
pop
inc
outsb
pop
pop
movntq
adc
push
jb
pop
adc
repnz
test
ss
adc
lret
mov
pop
mov
pop
scas
mov
push
inc
xor
xchg
repnz
insl
jp
sahf
lods
pusha
xchg
and
out
out
lret
sub
lods
push
lret
and
lret
repnz
xchg
mov
cmp
lea
or
fcmovne
aas
sub
repnz
pop
jns
jbe
or
cmp
pop
inc
pop
jns
xchg
in
hlt
pop
leave
loopne
insb
jecxz
shrl
aad
in
push
cmp
mov
in
push
stc
mov
xchg
push
pop
negl
inc
lcall
fdivrp
jb
push
pop
outsb
scas
push
pop
repz
sbb
test
mul
xchg
push
mov
rcrl
push
fidivrs
scas
movl
mov
jns
fstl
mov
ror
mov
lods
mov
xor
sub
xchg
push
pop
jns
mov
adcb
imull
cmp
jns
sub
dec
add
lock
xchg
addr16
mov
cmpsl
mov
and
dec
popf
in
push
pop
fwait
shrl
mov
cmp
dec
orl
jle
jns
ret
repnz
and
mov
repnz
xchg
cmp
popf
push
test
in
das
scas
jbe
jle
outsb
cmp
xchg
push
pop
jns
pop
iret
add
push
lahf
mov
pop
jns
push
movsl
jl
enter
add
pop
jns
xchg
pop
dec
adcl
movsl
inc
aam
in
push
ficomps
hlt
rolb
test
das
sbb
push
and
jno
pop
jns
xchg
push
mov
mov
sub
loopne
int
pop
mov
addr16
imul
pusha
lods
sbbb
inc
test
push
inc
and
inc
xchg
movsl
cli
adc
scas
mov
pop
sbb
pop
sbb
mov
or
repnz
jge
iret
cmpsl
std
sub
scas
cmc
test
repnz
xor
js
dec
hlt
loop
test
into
or
sti
jnp
mov
mov
sub
cs
sub
test
push
scas
mov
mov
or
xor
int
mov
mov
leave
push
push
aad
xchg
div
lret
test
and
sub
stc
test
addb
mull
jns
repz
sbbl
xchg
movsb
jl
inc
pop
pop
cmp
push
lods
into
out
cmpl
sub
push
mov
and
hlt
adc
mov
pop
cmp
outsb
jmp
iret
mov
lret
aad
cmp
push
jo
sub
mov
pushl
mov
jge
xchg
das
mov
mov
or
ljmp
loop
mov
repnz
adc
popf
out
loopne
jl
outsb
loop
push
xchg
sub
mov
jo
int
xchg
push
fsubrp
dec
inc
lcall
xchg
jae
or
jns
jbe
inc
lods
lret
movsl
jo
inc
mov
bound
xor
mov
das
daa
js
in
add
dec
jge
repnz
outsl
cs
fldcw
sub
scas
mov
jne
shll
out
nop
mov
repnz
mov
xchg
dec
movups
push
mov
sub
stos
or
pushf
mov
outsl
rolb
and
ror
lret
mov
in
inc
mov
das
scas
mov
mov
clc
addr16
inc
cld
jl
and
mov
dec
jno
fisubrl
pop
insl
mov
test
xchg
cmp
popa
jbe
lds
dec
lret
mov
dec
mov
jo
push
lock
cmpsl
outsl
and
mov
lods
cmpsl
and
lret
mov
lret
xchg
loope
or
scas
mov
mov
xchg
xchg
test
jnp
repnz
pop
push
ja
inc
into
mov
in
pushf
ficompl
in
push
mov
jl
daa
lahf
pop
test
push
fdivrp
jb
and
push
jns
xchg
sub
fimull
stc
in
ja
xchg
fimuls
aas
inc
cwtl
hlt
icebp
push
mov
pop
jns
fstpl
shrb
xor
pop
jns
out
imul
fwait
xchg
pop
jmp
xchg
inc
mov
add
shlb
push
aam
sbb
mov
shll
cmp
int
lret
aaa
push
ja
lods
int3
lea
notl
jle
fldl
lock
ja
ret
xchg
push
pop
jns
push
cmc
call
cmc
in
mov
push
pop
jns
sbb
pop
std
pop
jno
lea
lahf
inc
sarb
fstl
outsl
mov
dec
lret
xchg
push
pop
rorb
popa
xchg
int
push
xchg
icebp
in
pop
jns
and
mov
pusha
fsubl
mov
in
test
or
test
fidivrs
sub
cmpsl
lods
push
jmp
scas
push
pop
jns
mov
cmpl
cwtl
std
or
mov
in
fildll
xor
jne
mov
cmpsb
sbb
jns
mov
loope
pop
mov
pop
jns
cmp
push
sahf
push
movsb
nop
fldl
pop
jns
xchg
lret
test
sar
push
popf
test
ret
push
cmpsb
xor
ljmp
push
pop
jns
add
or
dec
mov
in
lahf
out
test
mov
inc
pop
in
push
pop
or
jg
mov
shrb
clc
adc
jns
in
mov
xor
sub
mov
fiadds
stos
inc
outsl
insb
sbb
lret
mov
lock
sub
lret
dec
outsl
data16
stc
add
mov
mov
and
icebp
hlt
ja
fabs
or
dec
and
das
jne
in
jns
xchg
cmp
hlt
sub
out
sbb
push
pop
stc
outsl
stos
addr16
add
lret
mov
int
jmp
in
mov
or
push
stos
cmpsl
das
loop
xchg
cmp
adc
sub
mov
jp
push
jb
pop
adc
mov
data16
out
scas
add
imul
imul
repnz
cmp
test
pop
mov
cmp
inc
mov
imull
jnp
fidivl
out
xlat
nop
pop
add
mov
inc
mov
push
out
mov
sbb
lret
push
cmp
into
mov
push
mov
shll
scas
outsl
xchg
pop
jg
push
pop
jns
or
inc
mov
icebp
imul
jns
xlat
in
fnstenv
call
imul
sub
xlat
adc
mov
mov
popf
pop
aas
mov
inc
fldcw
mov
lret
adc
push
arpl
testl
mov
outsl
in
mov
sub
ds
aad
sahf
mov
loopne
sti
xchg
scas
mov
and
ss
mov
mov
xlat
imul
inc
mov
das
mov
fwait
dec
or
imul
ss
mov
in
and
sbb
push
mov
lahf
dec
sub
cmpb
pop
jns
xchg
mov
sbb
or
repnz
mov
mov
sbb
cmpsl
out
repnz
jbe
push
into
cmp
jle
sbb
scas
mov
sbb
daa
add
in
fdivs
mov
stc
pop
jns
xchg
lret
pop
xchg
in
dec
sub
push
lahf
push
ret
ja
cmpsl
xchg
dec
fcomip
xor
movsb
sbb
pop
jns
push
cmp
inc
mov
lcall
in
and
mov
dec
jmp
jns
xchg
push
lods
jno
jg
xchg
cmp
xchg
xchg
push
pop
nop
and
hlt
mov
fwait
pop
xor
dec
xchg
push
pop
jns
jle
daa
xchg
iret
in
push
and
outsl
push
pop
jns
loope
mov
push
mov
movsb
imul
scas
lahf
push
cmpsl
pop
add
aaa
sbb
inc
xchg
ja
pop
sbb
dec
js
addb
mov
imul
into
pop
inc
fucomp
es
pop
jns
xchg
cmpsb
xchg
jle
das
outsb
xchg
sub
adcl
cmp
into
inc
sbb
jns
lods
add
fdivp
pop
xor
je
enter
jns
xchg
mov
lds
lcall
in
push
and
fucompp
pop
insb
imull
ja
pop
nop
dec
xchg
nop
push
jl
scas
outsl
idivl
testl
ss
mov
xchg
dec
mov
pop
jns
fstl
mov
in
sbb
scas
in
push
pop
int3
sbb
in
jecxz
test
pop
push
push
xchg
push
pop
jns
cmc
pop
sub
and
icebp
xchg
jbe
cmpsb
push
pop
jns
insb
xchg
dec
jnp
jg
sub
call
xchg
add
jo
jo
inc
lock
push
pop
loopne
iret
cmc
mov
and
xchg
push
pop
jns
mov
ret
mov
div
lret
std
mov
jp
jl
add
mov
xchg
push
fidivrs
stos
lcall
jnp
mov
pop
pop
jns
ret
mov
xor
mov
xchg
ja
push
mov
lahf
fsubs
lods
add
push
pop
jns
add
fisubl
pop
xchg
mov
pop
jns
imul
mov
hlt
ret
mov
jns
xchg
and
pop
mov
ficoms
in
push
add
jmp
jecxz
popa
jb
jae
das
in
push
pop
loopne
leave
xchg
roll
jns
push
pop
jns
push
xchg
sbb
xor
mov
pop
dec
push
pop
jns
sbb
xchg
movsl
dec
xor
push
mov
mov
jp
in
xchg
push
clc
jnp
sub
cwtl
cwtl
push
fidivrs
add
push
sahf
pop
mov
jmp
add
pop
jns
xchg
mov
stos
int3
push
sbb
lret
xchg
ja
xor
xor
mov
xor
sub
cmc
mov
mov
jo
imul
sub
xor
lcall
ja
pushf
mov
fmuls
mov
cmpsl
fs
pop
adc
jno
rolb
sbb
in
xor
fmuls
ret
add
adc
jg
xchg
push
repz
jae
or
inc
movsb
pusha
cltd
out
lahf
aas
lods
into
add
push
add
dec
xchg
int
stc
cld
stc
repz
iret
adc
sub
jmp
sub
jle
mov
stos
in
movsl
pop
mov
mov
das
cmp
sub
cmp
jns
mov
mov
mov
xchg
les
outsl
mov
repnz
jnp
ss
stos
mov
add
lret
inc
insb
repnz
insl
ss
lock
add
lret
mov
jecxz
rsqrtps
dec
out
mov
rol
test
rcl
pop
aas
cmovl
lret
push
js
fucomip
ret
test
repnz
cld
lock
xor
xchg
sub
fwait
loopne
loop
dec
dec
shrl
mov
pcmpgtw
xchg
mov
addb
repnz
sbb
imul
stos
andnps
enter
out
add
inc
lahf
add
das
push
pop
in
inc
lahf
flds
orb
jns
out
in
stos
in
or
ffreep
cmc
sub
das
iret
shlb
push
push
dec
pop
add
pop
xor
inc
je
jns
out
lret
push
add
pop
ds
or
pop
cmc
lods
jno
in
push
pop
add
enter
or
stos
les
aas
or
bound
rclb
popa
cwtl
sub
add
push
xor
xchg
mov
rclb
cltd
jnp
sub
and
je
pop
jns
rolb
mov
fldl
pop
jns
xchg
adc
pop
add
mov
push
xor
je
call
cmp
scas
in
mov
scas
arpl
push
cmp
dec
stc
mov
fucomip
hlt
xor
das
in
rcl
dec
dec
dec
outsl
inc
out
call
pop
cmovl
decb
out
out
cmpsb
sahf
jg
cld
stc
icebp
cmp
aas
sub
movsb
lock
and
lahf
aas
pop
shll
cwtl
mov
push
inc
cld
stc
repz
outsb
mov
and
and
aaa
jae
iret
lahf
aas
jg
jnp
call
out
clc
mov
repz
cmpsb
lea
mov
jns
sub
in
cmc
mov
xchg
push
pop
push
cmp
jb
divl
xchg
push
pop
jns
ret
call
cmp
xor
loop
jno
test
dec
dec
ljmp
popf
scas
pushf
gs
mov
sbb
lock
sub
bound
fmulp
adc
sarl
adc
jg
aad
mov
dec
pushf
add
jecxz
xchg
and
sbb
sub
fdivl
cld
add
push
ror
mov
iret
lahf
aas
jg
or
add
shl
scas
cli
in
out
or
dec
in
cld
jbe
popa
push
repnz
lret
pop
scas
jo
mov
or
dec
insb
xor
sub
fildll
or
ds
xor
lahf
pop
jmp
push
pushf
sahf
inc
in
pop
jno
sbb
push
jns
in
and
dec
push
js
fmull
push
pop
pop
dec
call
adc
mov
test
sarl
aas
sub
lcall
lock
arpl
jp
push
xchg
jle
inc
mov
add
das
loopne
cmp
mov
xor
push
pop
loopne
pusha
xorb
sbb
jo
loopne
loopne
call
pop
call
lods
pop
scas
mov
scas
mov
sub
fisubrs
mov
or
jnp
insl
xchg
push
pop
jns
pop
dec
cld
pop
xchg
lock
cmp
mov
mul
mov
cmp
in
jecxz
daa
mov
addr16
pushf
aas
jecxz,pt
rcll
lret
sub
test
mov
scas
ja
push
out
in
push
fimuls
xlat
dec
std
inc
arpl
mov
iret
scas
je
or
xchg
ss
pop
mov
out
lahf
sub
xor
int3
fisttpll
repnz
push
aas
cmpsl
xchg
sbb
add
lret
test
fcmovne
mov
popa
lods
in
and
lret
mov
scas
adc
and
and
scas
mov
ja
or
out
push
mov
mov
dec
or
mov
mov
lds
sbb
mov
push
pop
jns
mov
fiadds
inc
mov
pop
jns
out
mov
pop
clc
nop
sarb
inc
jns
fstl
dec
dec
hlt
push
or
or
aas
add
lea
cli
mov
fcoms
cmp
out
lahf
dec
insb
sub
push
sub
adc
jg
cld
stc
mov
testb
in
in
loopne
ret
lret
lret
sbb
rorb
pop
jns
lret
pop
ret
imul
cmpsb
lret
stc
dec
adc
jb
xchg
push
xchg
mov
iret
std
ficomps
std
std
jbe
aas
or
add
aas
adc
popl
and
cmpsb
repnz
addps
frstor
outsl
jmp
lret
fcoms
stos
or
xlat
push
movsb
sti
movsb
xchg
mov
adc
out
nop
sub
pop
lea
scas
mov
loopne
mov
lahf
aas
aas
cs
out
add
xorl
arpl
lods
repnz
mov
cmp
lods
add
jg
jmp
shl
dec
or
jb
jg,pt
cld
jle
je
test
popf
lret
add
scas
sbbb
or
push
push
cmp
add
jg
lahf
mov
sbb
lret
in
dec
test
fmull
pop
scas
mov
mov
dec
ds
aas
jg
out
pop
jle
mov
mov
jge
les
adc
sbb
pop
mov
jle
cld
decl
rorl
outsb
test
es
stc
repz
adc
cmpsb
push
pop
out
cwtl
and
and
xor
add
data16
mov
je
pop
jns
xchg
mov
pop
rcll
mov
and
jge
loopne
mov
lret
stos
ja
inc
jle
sub
imul
setle
call
sbb
add
sbb
dec
or
pop
jle
out
mov
fwait
push
popa
xchg
lahf
aas
mov
xchg
mov
jp,pt
jno
aad
in
shl
xlat
lock
xchg
lahf
jg
inc
lcall
add
cld
stc
adc
loopne
or
rclb
jg
loopne
xchg
insl
and
test
adc
jl
cld
stc
repz
nop
sub
test
nop
test
in
inc
imul
sub
pop
xor
pop
imul
scas
jle
outsb
pop
jp
jp
xor
cmpl
stos
mov
jne
xchg
loopne
out
out
scas
orl
in
int3
cld
stc
repz
jns
loope
mov
hlt
sbb
jg
xchg
aas
jg
lods
vmwrite
inc
add
push
scas
jge
mov
das
jmp
and
ret
repnz
jno
dec
lcall
cmp
mov
fdivr
int
xorl
mov
inc
mov
sbb
mov
or
lret
repnz
das
mov
mov
cmpsb
lret
mov
andb
cs
ljmp
sbb
addr16
xor
sbb
or
popf
scas
outsb
mov
jge
out
lahf
aas
jge
mov
mov
lods
ret
xchg
cld
stc
repz
push
cmovg
inc
imulb
inc
outsb
lret
lahf
aas
jg
cmp
mov
insb
sub
add
outsl
lahf
aas
jg
pop
mov
test
int3
mov
inc
hlt
aaa
ljmp
andb
cmpsb
ds
bound
fsts
inc
cli
lods
jo
jns
xchg
push
add
psrld
cmp
pop
out
clc
pop
dec
sub
jne
xor
bnd
cmp
aaa
inc
xchg
sti
aaa
ja
sbb
add
push
xchg
pop
rol
out
lahf
pop
mov
or
hlt
in
rcrb
test
mov
ja
mov
in
push
stos
xor
adc
int3
repz
setne
jns
mov
or
fucomi
lahf
mov
in
sarb
xor
sbbl
repnz
pop
aad
push
mov
test
mov
scas
mov
push
jo
or
jg
scas
mov
js
lret
test
jo
dec
mov
punpcklbw
mov
and
mov
fwait
add
push
ds
das
ja
cmc
nop
movsb
add
push
pop
sub
inc
lea
in
mov
lret
repnz
test
xor
push
popa
add
inc
dec
xchg
cmp
jo
repnz
das
xlat
xchg
pop
in
cmpsl
clc
jno
iret
das
shr
iret
fidivs
scas
mov
test
cld
stc
repz
jb
notl
push
adc
iret
lahf
aas
jg
out
fs
jmp
add
sti
in
out
mov
shll
lahf
stos
cltd
scas
popf
push
or
scas
mov
bswap
cs
popl
mov
jecxz
cmp
xor
daa
sahf
ss
push
push
lret
out
push
and
xchg
clc
inc
dec
sbb
insl
jl
push
jecxz
dec
test
in
fbld
lcall
mov
add
pop
jns
or
in
pop
sub
jne
scas
xchg
cmpsl
xchg
sub
push
jmp
daa
loope
data16
jecxz
dec
imul
mov
mov
jno
ljmp
loopne
sbb
xchg
aas
lret
sarb
mov
repnz
in
mov
out
push
arpl
pop
scas
mov
push
stos
lock
orl
jns
or
divb
jecxz
fcompl
in
ljmp
jge
sbb
or
in
push
adc
dec
xor
xor
push
mov
mov
push
push
lret
push
lret
mov
ret
dec
and
ljmp
inc
cmp
lahf
pop
or
adc
sahf
mov
in
repz
mov
dec
jp
cwtl
mov
pop
jle
cld
shl
push
sahf
dec
cmp
cmp
hlt
jle
cld
or
sub
loop
int3
out
dec
jle
ljmp
mov
mov
aas
not
loop
pop
xchg
sub
jns
xchg
and
in
clc
faddl
xchg
push
fisubrs
out
push
sbb
jg
lahf
les
xchg
push
pop
jns
dec
scas
out
inc
push
and
and
push
pop
jns
sbb
inc
dec
jmp
cmp
scas
int
pop
jns
xchg
dec
pop
movsb
sti
iret
mov
add
in
push
je
adc
cli
movsl
xchg
scas
add
jmp
jb
push
sub
xchg
ret
pop
into
pop
cmpsb
loopne
hlt
mov
stc
repz
jl
mov
aas
dec
pop
sbb
or
push
push
xor
cs
out
lahf
rcrb
pop
loope
test
lret
iret
mov
out
push
push
inc
xor
dec
cmc
scas
mov
and
pop
and
sahf
push
sbb
mov
sarb
inc
ja
jno
pop
scas
mov
xlat
cmp
aas
outsl
push
data16
fnstcw
out
cli
in
ficoml
aas
mov
stos
mov
lock
mov
leave
jmp
jmp
bound
jg
cld
ss
cmc
mov
es
movsb
loopne
mov
push
hlt
out
lret
iret
lahf
adc
sti
sbb
cli
mov
ret
inc
clc
in
scas
sbb
out
sbb
or
adc
cld
push
faddl
cld
mov
mov
das
lahf
push
and
fcom
fsubrs
push
inc
movsl
xchg
push
pop
jns
xchg
cs
bound
push
pop
jns
lock
out
mov
inc
mov
es
jns
xchg
popf
fstl
in
fmul
sti
pop
jns
xchg
push
or
cmp
pushf
fmuls
aam
int
in
push
pop
das
sbb
test
and
lods
repnz
jge
fistl
call
pop
test
dec
sbb
stc
add
cmp
pop
out
cltd
sub
sbb
xchg
ja
jl
mov
cmp
insl
inc
and
jnp
or
in
pop
ja
adc
jl
adc
sub
pusha
rolb
xchg
out
lret
mov
pop
insb
add
adc
mov
cmp
repnz
mov
sub
xchg
jne
adc
std
or
and
cmc
aas
ficoms
xor
mov
ja
cwtl
add
push
pop
push
call
mov
or
dec
adc
pop
adc
mov
push
jg
in
lret
adc
xor
fldt
sub
ret
pushf
aad
rorb
push
clc
in
jmp
sbb
mov
cld
stc
repz
xlat
gs
mov
lds
jl
lahf
aas
jg
stc
and
push
les
adc
les
cld
jg
xchg
sub
out
je
pop
scas
mov
les
lahf
dec
pop
push
in
lret
mov
sbb
inc
dec
sub
stc
xchg
lahf
mov
hlt
inc
push
sbb
mov
out
das
test
xchg
xor
das
scas
mov
bound
add
xchg
lock
loope
mov
and
add
pop
sahf
pop
or
out
lahf
xor
mov
sub
std
lret
imul
pusha
inc
mov
push
into
xchg
pop
add
push
sub
jg
lock
lret
xchg
push
fdivr
int
push
in
lahf
xchg
push
fidivrs
nop
jg
mov
push
pop
jns
xor
stc
mov
jmp
adc
ret
das
scas
out
xor
ss
rorl
lret
jl
or
and
dec
add
lret
xchg
pop
push
jecxz
popf
mov
cli
xchg
in
test
adc
test
pop
pop
jns
arpl
fmul
stos
jbe
repnz
cmovl
int
adc
xchg
add
xor
push
bound
pop
xchg
loop
das
cs
in
sbb
nop
pop
insb
cmp
pop
jmp
loopne
and
xchg
leave
je
stos
enter
shrl
icebp
shrb
push
movsl
add
xchg
mov
mov
mov
adc
jg
mov
scas
out
add
adc
jp
sub
scas
mov
pop
jg
shl
xchg
andb
in
orl
cwtl
add
cmp
lock
and
shll
mov
sbb
cs
mov
or
jle
adc
xchg
push
fidivrs
into
mov
push
pop
jns
inc
mov
movsb
xchg
movmskps
pop
pop
jns
ds
xlat
mov
pop
xchg
repz
aas
push
pop
pushf
ljmp
rolb
mov
pop
std
aaa
inc
push
add
lahf
aas
js
test
jl
push
mov
and
pop
and
out
int
sbb
rcll
lret
gs
cmp
pop
dec
sbb
ljmp
xor
ret
mov
test
dec
dec
dec
sbb
repz
xchg
push
leave
xor
cmp
cli
cld
or
repnz
pop
xor
je
aas
jg
inc
add
fwait
push
gs
aad
movsl
sbb
mul
out
imul
and
mov
mov
jb
cld
jb
mov
inc
mov
sbb
cmp
push
inc
sub
push
and
mov
and
push
ret
dec
jge
mov
cmpsb
add
stos
mov
mov
ficoml
in
das
shl
mov
adc
shlb
in
push
aad
rcrl
jne
or
repnz
pop
cmp
inc
addr16
jg
ret
mov
add
mov
repz
pop
inc
mov
jg
stc
push
mov
aad
test
test
push
cwtl
cli
ss
in
lahf
cld
xlat
cld
mov
xchg
shl
das
stos
lret
inc
loopne
jmp
cmp
mov
push
cmp
push
pop
jns
mov
iret
enter
sub
push
pop
lock
xchg
arpl
push
popa
push
push
sbb
out
lea
in
cld
sahf
jns
push
pop
adc
repz
xchg
mov
xchg
cmp
stc
repz
negl
sbb
cltd
cmp
stos
sbb
mov
pop
jge
outsl
repnz
test
sbb
sti
arpl
fmul
sub
in
jno
fsubl
jmp
cli
repnz
jp
jp
mov
addr16
icebp
or
scas
or
xor
in
insl
cmpsl
inc
rcrl
mov
jae
pop
out
xchg
iret
stc
mov
fcmovnu
loop
sub
mov
in
xchg
push
bound
das
mov
push
pop
jns
mov
xor
pusha
ret
std
add
push
pop
jns
dec
cmp
js
inc
or
sbb
sbb
xchg
cmp
stos
movsl
cmpb
mov
dec
jns
xchg
push
outsb
mov
or
clc
mov
in
push
pop
pop
dec
sbb
pop
insl
mov
sbb
push
pop
jns
push
repz
xchg
imul
mov
add
jns
xchg
ret
test
popf
mov
xchg
mov
pop
out
dec
xchg
dec
ficomps
add
inc
inc
or
repnz
jge
xchg
push
and
ficompl
adc
xchg
sub
scas
out
and
scas
mov
in
test
jg
jns
jno
push
lahf
pop
loope
jae
mov
mov
hlt
xchg
mov
jmp
movsl
push
dec
dec
aas
fcomip
push
pop
jns
adc
sub
lret
jns
call
std
pop
jns
xchg
mov
cmp
popa
xchg
jns
xchg
push
and
inc
decl
cmp
clc
and
sahf
mov
push
sub
cmpsb
add
clc
fisubrl
cmp
pushf
lret
lret
aas
out
mov
in
das
mov
mov
aaa
out
mov
mov
scas
mov
jno
pop
nop
jg
and
into
pop
pop
imul
negl
push
cld
stc
repz
test
outsb
movsb
lret
lods
repz
mov
mov
leave
mov
jns
ljmp
fiaddl
loopne
punpcklwd
iret
lahf
pop
adc
push
sarb
jle
in
out
outsb
xor
jg
mov
mov
lret
mov
and
push
push
sub
push
dec
sub
insl
ss
test
inc
fldcw
adc
andb
and
inc
pop
jns
pop
pinsrw
iret
xchg
repnz
ljmp
xchg
push
push
jmp
mov
fdivrp
jb
fdivl
sbb
jnp
dec
adc
std
jb
xchg
push
xor
adc
mov
stos
sbb
cmp
js
repz
push
in
xor
mov
pop
ds
xor
cmp
xor
mov
ficomps
dec
or
ds
fdivrl
cli
aam
dec
out
shrb
mov
mov
mov
mov
ljmp
xchg
sub
jle
sub
or
popf
sub
sar
repz
sbb
insl
orb
hlt
sbb
jg
cld
mov
shll
daa
in
mov
addr16
and
xchg
das
mov
inc
push
lds
jo
jns
ffree
add
mov
std
push
mov
ds
nop
in
das
push
cmp
bound
jne
imul
push
pop
jns
jne
push
jmp
arpl
stc
pop
fidivl
xlat
fdivrp
rol
es
jns
xchg
push
add
test
notb
mov
rcl
in
mov
out
push
jo
pushl
rorb
xor
popf
and
loopne
iret
lahf
sub
aaa
inc
xor
or
aam
lahf
aas
ds
xchg
pop
std
mov
mov
sub
cld
push
xchg
les
inc
std
scas
sub
push
cmp
lret
out
inc
mov
cmp
nop
pop
pop
cmp
cmc
and
inc
push
jge
lds
add
jns
xchg
icebp
aad
test
negb
pop
xchg
in
push
mov
mov
scas
pushf
inc
sbb
cmp
pop
scas
mov
pop
fmul
in
jne
push
pop
push
jmp
mov
pushf
in
fs
push
and
xchg
loope
repnz
dec
and
push
inc
inc
pop
ret
cld
add
xor
dec
dec
ds
sub
adc
mov
ja
lahf
aas
jg
pop
cld
std
daa
fiadds
lahf
mov
xor
repz
in
pop
ret
mov
sub
xchg
mov
jge
or
jo
or
sub
adc
jbe
xchg
jle
cld
stc
fcompl
mov
stos
scas
and
mov
into
xchg
lahf
aas
mov
sbb
mov
pop
call
repz
fmuls
mov
rcrb
stos
loopne
out
mov
repz
pop
pop
hlt
repnz
jl
jl
mov
push
inc
insb
and
and
stc
cmpl
push
mov
data16
aas
jg
jns
ds
arpl
lret
pop
repnz
xchg
iret
adc
cmc
out
cmp
pop
dec
mov
scas
mov
aas
insl
aad
lret
cmp
popl
lret
mov
cld
insb
xor
dec
cld
cmpb
dec
test
in
ja
sbb
cmp
daa
push
mov
pop
jns
inc
int
bound
inc
pop
push
pop
jns
xchg
scas
call
mov
vmovd
xlat
jns
xchg
push
imul
xchg
sub
push
pop
or
adc
sbb
stc
xor
adc
ret
loop
stos
hlt
aam
int
ja
aas
jg
add
xchg
lea
out
cmp
sub
dec
cmc
sarb
hlt
lods
je
or
cld
dec
add
lods
mov
sbb
out
lret
iret
lahf
sub
fcoml
dec
cmp
mov
repnz
xchg
adcb
fcmovbe
stos
mov
lret
mov
ret
shl
mov
and
iret
scas
mov
push
inc
movsl
fidivs
cld
stc
repz
ds
cli
pop
mov
testb
ss
pop
jg,pt
adc
mov
fimuls
cmp
call
xchg
out
jl
pushf
rcrl
out
jecxz
stc
pop
jns
xchg
insb
sub
sub
test
xchg
ss
xchg
push
jmp
xchg
daa
gs
cmpl
pop
sub
mov
scas
pushf
mov
arpl
ret
and
lret
mov
clc
lret
rcl
xor
xchg
dec
cmc
repnz
pusha
dec
frstpm(287
out
icebp
iret
mov
leave
mov
das
mov
and
ja
out
scas
into
pop
std
mov
iret
outsl
dec
mov
cld
stc
and
fcmovnbe
das
dec
es
in
mov
xchg
pushf
add
pop
lods
fucomip
sti
pop
jns
fisttpll
mov
lods
testb
out
mul
xchg
push
xlat
or
adcl
sahf
sub
jg
dec
jl
in
fdiv
pop
xchg
mov
stc
mov
es
aam
pop
cmp
add
cld
push
pop
arpl
push
jb
push
mov
test
pop
mov
mov
jne
jecxz
xchg
lahf
jns
mov
test
stc
repz
into
hlt
lcall
jle
xor
loopne
test
test
jns
das
jg
cld
pop
div
add
test
xor
cld
inc
ds
insb
mov
mov
add
lahf
aas
pop
xor
adc
push
sub
lret
out
pop
inc
mov
and
fld
mov
jns
cmp
test
jl
dec
test
ds
xchg
sbb
xchg
inc
mov
loopne
sub
xor
mov
adc
in
inc
fadds
repz
lods
test
in
icebp
call
orl
loopne
cwtl
dec
inc
lret
call
cld
jmp
jne
add
loop
sub
pusha
pop
fildll
xlat
cmc
mov
ja
push
dec
js
das
repnz
or
adcl
add
movl
idivl
movsb
sti
sarb
mov
fstl
arpl
pop
xorl
stos
adc
mov
mov
lret
pop
pop
mov
das
je
mov
repnz
filds
xchg
push
sbbl
cwtl
and
xor
xchg
mov
aas
add
mov
data16
lods
sti
in
out
ds
jae
lret
cmp
sbb
mov
jle
lds
cmp
lock
and
in
or
lock
out
lahf
mov
pop
lret
sbb
sbbl
cld
stc
xchg
mov
jno
rcrb
pop
mov
pop
ds
push
jl
imul
mov
cmpsl
or
lret
adc
lock
sbbl
stc
adc
repnz
pop
lods
out
mov
inc
jb
jbe
int
aam
jg
int3
es
repnz
fdivrp
jno
sarb
jg
cld
add
or
shrb
shl
outsl
xor
aas
xor
sar
addr16
repz
ficompl
mov
cld
jle
and
imul
cmpsb
mov
mov
lret
sub
add
ficomps
stc
repz
mov
push
and
repz
lahf
aas
jg
lds
lahf
addl
sub
or
stc
stc
repz
push
mov
fstp
xor
es
std
jnp
jl
dec
and
mov
aas
jg
add
idivl
lods
repz
lahf
inc
fs
das
mov
jg
cld
stc
pop
pop
hlt
mov
sbb
aaa
and
xlat
sub
or
aas
sbb
lds
pop
sarl
dec
popf
xchg
or
mov
pop
sarl
fdivl
or
and
sub
sub
cld
sbb
cmc
adc
xor
cs
test
sub
pop
incb
jmp
add
xor
xchg
cli
in
nop
push
push
xchg
lret
cmpsl
in
pop
mov
stc
repz
gs
fs
lret
pop
lcall
lahf
aas
jg
mov
fcom
sbb
mov
in
sbb
loopne
iret
dec
notl
test
iret
andl
push
add
adc
call
fucomip
pop
pop
jns
dec
mov
cmp
aas
lret
sub
into
cltd
mov
pop
cmp
call
scas
stos
lahf
out
dec
rcrb
jle
dec
xchg
sbb
fidivl
dec
push
daa
out
dec
incl
in
sub
hlt
jge
sbb
fdivs
in
push
std
dec
dec
xchg
cs
mov
nop
out
in
push
pop
popf
ss
mov
enter
icebp
pop
repnz
mov
ds
jl
mov
sub
sbb
dec
and
sbb
stc
repz
rcrl
xor
jbe
addr16
lret
mov
dec
je
jmp
dec
add
pop
scas
mov
pop
sub
test
dec
stos
pop
jns
xchg
mov
insl
mov
rclb
dec
push
pop
insl
jns
xchg
push
insl
stc
lret
pushf
cli
fidivrs
or
inc
dec
dec
or
dec
and
fbld
pop
jns
lret
add
test
nopl
pop
adcb
nop
mov
jno
cmp
jg
sub
dec
inc
dec
ljmp
cmp
cmp
and
xchg
aas
popf
andl
mov
mov
xorl
sti
in
popa
rcrl
lret
fimull
sub
mov
out
insb
jbe
fiaddl
mov
lret
lahf
pop
and
and
add
jg
cld
sahf
push
lahf
inc
es
mov
inc
jnp
mov
out
lahf
aam
stos
jmp
add
dec
movsb
pop
sbb
stc
and
movsb
sub
addr16
adc
aas
jg
xorb
test
out
or
aam
es
pavgw
iret
cmpsl
fidivrs
faddl
into
cld
stc
repz
pop
cmp
loopne
bswap
xlat
mov
dec
xchg
lahf
push
jle
jge
add
mov
and
in
push
jnp
outsb
fwait
sbb
frstor
test
xchg
push
or
mov
mov
xchg
xchg
push
pop
cmp
mov
scas
fadds
xchg
push
pop
jns
add
adc
test
add
jge
in
popf
xchg
loopne
dec
pop
pop
pop
in
cmp
iret
dec
jno
or
out
movsl
rorb
jg
jmp
pop
pushf
outsb
inc
in
dec
shll
mov
loopne
std
xchg
cld
stc
repz
add
aad
fsubrs
or
jl
stos
sti
rclb
mov
aam
in
ja
fcomip
push
ret
dec
or
inc
ja
pop
jns
cmp
outsl
cmp
cli
ss
ret
adcl
adc
jno
cmc
xchg
out
insl
fcmove
sub
jle
cmp
repnz
xchg
sub
lods
out
dec
and
es
add
or
insb
stos
jge
pop
mov
repnz
adc
adc
loope
xchg
jns
lret
xchg
adc
adc
sbb
and
pop
loope
out
and
sbb
push
mov
pop
loopne
cmpsl
imul
stc
repz
pop
sub
pop
test
mov
loop
lahf
aas
scas
cld
mov
stos
inc
mov
and
mov
xchg
jecxz
pop
sbb
das
into
pop
sti
in
out
pop
test
popf
test
clc
aas
cmp
scas
mov
test
pop
mov
and
repnz
lods
xor
cvtps2pd
xor
lock
add
out
pop
in
cmpsl
jg
push
into
dec
call
daa
shrl
jmp
sub
aas
add
add
loope
call
inc
inc
fimuls
fsubl
out
xchg
iret
lahf
push
popf
mov
jge
lock
push
int3
adc
lret
cmpsl
rorl
inc
clc
repnz
aad
dec
inc
fucomip
and
lret
out
cli
mov
pushf
enter
test
lahf
arpl
popa
es
jl
sti
mov
pop
aas
mov
xchg
pop
bound
jg
sub
ss
pop
sub
pop
sub
xor
mov
lcall
scas
mov
jle
jb
notl
clc
adc
dec
pop
jns
pop
add
sarl
jp
sti
lret
sarb
push
clc
dec
mov
mov
mov
das
lret
xchg
push
pop
imul
adc
stos
jecxz
jns
repnz
mov
mov
push
or
sub
push
or
enter
scas
mov
ret
andb
inc
sahf
mov
inc
mov
out
xor
dec
lods
xchg
incb
aad
adc
aad
orb
aas
jg
push
sub
dec
cmp
dec
addr16
pop
jns
push
lret
jmp
cltd
pop
pop
outsl
jl
sti
or
out
out
mov
and
cld
mov
pop
xchg
popa
or
in
ficoml
push
xchg
out
repz
xchg
jg
cld
outsb
mov
popa
and
fistpl
test
fs
das
lahf
xchg
je
je
in
iret
xchg
inc
adc
push
pop
jns
outsb
sbb
mov
fxch
sub
mov
jns
gs
mov
mov
leave
cmc
push
ret
jg
push
shrl
test
aam
pop
mov
sbb
pop
lock
iret
sbb
dec
mov
imull
sub
pop
mov
pusha
and
and
or
sub
lret
cli
int
das
cld
lret
clc
sbb
mov
loop
aam
pop
xchg
lahf
aas
jg
xor
inc
lret
jge
pop
inc
jbe
pop
jns
xchg
out
cmp
in
mov
mov
aam
xchg
push
pop
xchg
test
push
and
cmp
push
in
xchg
push
pop
jns
add
fcmovnu
int3
and
movsl
lock
sub
xchg
or
mov
add
and
fcomip
lret
stos
push
add
gs
int3
mov
pop
cmp
sub
lcall
pop
sub
sub
loope
jge
in
or
push
lahf
push
repnz
stc
rep
outsb
jae
push
adc
pop
and
fxch
lahf
nop
imul
or
lods
stc
repz
std
xchg
out
mov
mov
addb
fadds
cld
sub
and
pusha
adc
cmpsl
pop
nop
ljmp
cmp
push
pop
lds
cld
stc
repz
lds
dec
test
loop
lahf
aas
jg
xchg
push
andl
fcomps
stc
repz
cli
pop
imul
pop
xchg
mov
mov
jecxz
aas
jg
cld
outsl
cmc
int3
xchg
pop
add
or
sub
repnz
sbb
xor
imul
mov
jecxz
aas
xor
mov
aas
adc
cli
and
jnp
lahf
aas
jmp
mov
fnstcw
test
push
popf
mov
pop
lahf
xchg
push
pop
jns
mov
xor
push
and
jns
push
inc
outsl
push
mov
fcmovb
and
xor
jb
xchg
fildll
and
sub
pop
xchg
pop
repnz
ja
test
sub
mov
mov
outsl
mov
jle
repnz
nop
icebp
insl
out
lret
lret
lret
lahf
aas
aas
mov
mov
or
pop
jns
fucomp
xor
xor
push
sub
outsb
dec
movaps
push
fwait
dec
pop
popl
dec
jbe
fstl
jg
push
out
lods
push
scas
orb
or
fwait
jg
scas
ljmp
rclb
dec
ss
lock
nop
test
sahf
lods
mov
pop
jns
ret
cld
mov
cmp
js
aam
mov
or
fucomi
aaa
pop
jns
push
jno
test
out
sti
mov
in
inc
rcrl
pop
jns
xchg
scas
pushf
out
lods
aam
adcl
xchg
push
mov
mov
xchg
ja
and
ficoml
adc
ja
pop
call
push
test
push
daa
add
push
pop
jns
out
mov
adc
jmp
inc
xchg
and
or
xor
lods
in
lahf
inc
jo
lret
arpl
aaa
cmp
pop
adc
mov
inc
enter
por
iret
pop
sarl
xor
in
cltd
push
add
cmc
test
das
xor
repnz
dec
mov
lcall
popa
aam
push
dec
sti
push
enter
jle
cld
stc
repz
inc
pop
movsb
testb
das
push
fidivrs
mov
adc
adc
adc
test
das
dec
scas
mov
lea
mov
jmp
inc
adc
push
lods
jg
data16
repz
sti
cmp
les
mov
das
dec
and
aas
test
mov
dec
jge
jb
sahf
xchg
sub
out
in
sub
inc
out
int
xchg
pop
sysenter
mov
sub
xor
lahf
xlat
cmp
cs
jb
in
xchg
shrl
imul
xor
scas
mov
push
rorl
loop
adc
clc
in
sub
inc
inc
jne
sbb
in
orl
stc
cld
push
into
cmpsb
cmp
pop
jecxz
or
outsl
lret
out
mov
pop
andl
sub
cmpsb
mov
pop
cmp
ficoml
cmp
mov
xor
cmpsl
dec
cwtl
hlt
fimull
xchg
in
adc
xchg
mov
push
pop
jns
cld
ret
mov
int3
sbb
stc
enter
in
fidivrs
out
out
rorl
pop
jns
xchg
mov
mov
pop
fistl
xor
test
push
jg
push
dec
jle
and
pop
jle
cmp
lahf
out
push
in
bound
jns
sti
mov
push
popa
jg
or
fwait
pop
jns
xchg
dec
in
dec
aaa
or
mov
xor
xchg
push
fs
sbb
leave
xchg
inc
and
cmpsb
ss
ja
pop
jo
pop
fdiv
dec
arpl
adc
loopne
add
jns
rcll
cmpsb
or
add
jb
xchg
jo
jecxz
je
and
fstl
xchg
rolb
iret
icebp
lret
clc
mov
iret
adc
jge
leave
sahf
ds
stc
repz
mov
mov
mov
mov
pop
imul
pop
sti
subl
int
aad
jmp
pop
pop
call
mov
movsl
cmp
out
mov
das
lahf
out
sub
test
fs
add
cs
mov
sub
aas
add
lea
xor
stc
repz
in
sbb
push
out
cmp
xor
push
push
mov
lahf
pusha
les
bts
popf
push
or
xchg
sub
pop
inc
lahf
das
sbb
pop
jns
lret
mov
pop
pop
sub
data16
sbb
jb
xchg
push
mov
imulb
adc
fwait
and
jno
mov
loope
sub
movsl
movsb
test
clc
or
xchg
jmp
in
test
maskmovq
fnstsw
stos
add
jae
test
and
pop
jns
mov
add
ja
push
lahf
aas
push
dec
dec
pop
or
jo
std
xlat
dec
adc
pop
jns
push
xorb
sub
jg
sub
nop
pop
iret
aas
out
sahf
lahf
clc
popf
cmp
in
mov
jmp
mov
mov
das
push
stc
sbb
mov
jg
xchg
jge
in
lods
adc
es
dec
sbb
loope
jg
pusha
std
iret
add
dec
jecxz
push
iret
cwtl
stc
in
ja
cmp
dec
sbb
shlb
cld
cmp
fistpl
test
aas
jg
push
xor
add
cmp
xchg
repz
adc
jle
push
jg
jmp
out
jg
cld
push
pop
loop
sbb
and
push
mov
sbb
or
clc
fcmovne
mov
adc
in
jl
mov
adc
repnz
mov
lahf
aas
jg
xchg
sbb
and
loop
scas
out
and
subl
xchg
outsl
mov
andl
addr16
aas
jg
cld
test
xor
mov
js
sub
fimuls
repnz
movsl
push
insb
mov
out
xchg
xchg
push
fidivrs
mov
xor
jns
xchg
jg
inc
xor
leave
sbb
ja,pn
or
arpl
lcall
jp
mov
in
push
pop
fstps
push
mov
aam
in
mov
adc
pop
sar
jns
cld
xor
or
add
and
scas
dec
cmp
iret
lahf
mov
dec
hlt
push
sahf
movsl
scas
mov
int
pop
sbb
cmp
lahf
test
jae
pushf
sub
inc
loop
inc
roll
orb
cld
cld
stc
mov
add
je
lock
sbb
jecxz
sub
pop
push
jne
jae
aas
pop
push
inc
inc
in
ja
aas
add
fldcw
int
rclb
push
pop
jns
fisttpl
xor
icebp
in
mov
jns
xchg
subl
sub
inc
lret
stos
sbbb
adc
stos
or
add
aas
out
xchg
fdivrs
adc
pop
xor
es
cmp
cli
mov
ja
jle
jle
rorb
mov
jge
in
xchg
mov
into
jnp
ret
repz
lds
mov
fbstp
pop
adc
and
xor
sub
pop
repz
and
iret
lahf
aas
jg
xchg
ds
mov
daa
cld
stc
repz
dec
insb
mov
pop
fsubl
out
pop
imul
daa
mov
jg
orl
repnz
and
push
aam
sub
test
sub
pop
scas
xchg
scas
push
cmpsl
imul
jg
jno
je
xchg
push
pop
fsubl
stos
add
jbe
push
push
les
or
sub
pop
sub
sbb
aas
ss
or
lret
sub
adc
dec
je
mov
out
sbb
scas
mov
out
pop
andb
push
test
fiadds
or
cld
stc
repz
js
sub
mov
adc
das
lret
sub
mov
das
or
mov
push
sahf
dec
stc
rep
jmp
lods
adc
nop
bnd
cld
imul
pop
sarb
pop
inc
das
mov
popf
jp
and
or
xchg
inc
sahf
shl
pop
icebp
in
scas
scas
shr
mov
mov
mov
stc
test
xchg
movaps
pushf
pushf
sub
inc
gs
aaa
fistpll
push
movl
aas
sbb
lea
out
sti
in
sub
out
js
repz
or
das
xchg
sub
loope
ficompl
and
mov
pop
cs
adc
in
iret
push
aam
jae
sbb
hlt
loopne
jle
call
push
pop
sbb
daa
in
clc
aas
fadd
mov
jns
jl
mov
pusha
xchg
adc
xor
out
shrb
pushf
or
push
ret
mov
cld
stc
repz
insb
mov
ss
xchg
cmp
mov
or
cltd
jae
jl
out
decb
out
leave
mov
or
fists
sub
test
and
repnz
xor
js
aaa
cltd
sbb
loope
sub
call
dec
mov
xor
hlt
mul
daa
jge
dec
divb
lock
pop
das
mov
fists
jo
inc
in
addb
sbb
test
mov
jg
dec
outsb
pop
fwait
sbb
mov
mov
repz
sub
or
icebp
shrb
bnd
cld
stc
pusha
sbb
jp
dec
inc
adc
add
mov
rolb
dec
sbb
xlat
inc
dec
repnz
out
xchg
pop
mov
push
bound
fldcw
lock
dec
ljmp
jg
scas
mov
cmp
das
adc
xchg
jmp
test
mov
inc
cmp
ret
aad
lret
mov
lahf
aas
jg
mov
adc
xchg
and
xadd
jg
das
sbb
ds
stc
repz
rorl
les
push
icebp
es
jl
adc
mov
jle
je
iret
lahf
pop
into
lds
mov
mov
out
cld
stc
repz
push
adc
and
mov
sub
mov
dec
or
jecxz
dec
dec
repnz
adc
cmp
pop
sbb
repnz
outsl
pop
xchg
lock
cmpsl
or
jmp
stos
pop
jecxz
sub
mov
pop
xchg
cmp
push
jo
xlat
xor
pusha
mov
nop
stc
cld
stc
xchg
int
mov
inc
jnp
jmp
incb
jge
aas
pop
sahf
not
hlt
gs
out
fsubp
iret
lahf
aas
adcl
pop
cmp
repz
jno
cmp
mov
add
iret
sub
scas
out
pop
stos
mov
mov
loopne
inc
insb
jo
sbb
jnp
inc
mov
lret
iret
lahf
jg
pop
test
add
push
inc
xchg
jns
in
mov
jno
jo
inc
jg
cmc
xchg
mov
sahf
lods
out
shrl
mov
dec
jle
jl
mov
aas
mov
inc
pop
dec
pop
jle
mov
pop
push
js
xor
xchg
repz
lahf
mov
ret
cwtl
xor
or
or
std
jb
in
push
pop
das
mov
inc
outsl
pop
xchg
mov
scas
jge
jle
mov
jno
je
lahf
pop
pop
outsb
imul
and
stc
repz
cmp
rolb
mov
inc
or
iret
out
loop
incl
lcall
push
lahf
lods
pop
ds
ljmp
jb
pop
aam
mov
cld
stc
repz
xchg
pop
cmpsb
arpl
out
cmp
jno
or
xchg
aas
jg
in
out
aad
loopne
popf
daa
stos
aas
push
mov
dec
in
inc
mov
mov
iret
lahf
fcomps
add
xchg
imul
adc
xor
add
loopne
dec
inc
pop
repnz
or
lock
xchg
ja
jge
or
pop
mov
in
ds
pop
lret
std
lret
inc
sbb
xchg
test
inc
stos
mov
test
scas
mov
jecxz
inc
mov
sub
ds
scas
mov
or
and
iret
xor
sub
jle
lahf
mov
add
push
hlt
stos
pcmpgtw
jecxz
fwait
decl
sbb
out
lahf
aas
into
add
and
pop
push
or
cld
stc
repz
inc
sub
adc
dec
jo
jbe
enter
add
dec
int3
mov
fmul
lret
aas
mov
add
jecxz
es
cwtl
cmp
ds
and
jmp
cld
cmpsb
sahf
js
jg
bndldx
in
in
ja
imull
in
pslld
mov
test
or
sub
into
mov
jb
mov
push
nop
std
lcall
push
adc
in
lahf
fstpt
jno
movsb
stc
jo
adc
sub
mov
mov
xchg
push
pop
xchg
lahf
jg
outsl
test
stc
repz
addb
mov
cld
mov
fucomi
lods
mov
ja
xchg
sahf
push
fbstp
xchg
xchg
push
pop
jns
test
addr16
push
adc
xor
lret
jb
pop
jns
pop
mov
es
ret
mov
pop
jns
xchg
mov
dec
inc
dec
adc
jb
gs
in
push
push
inc
jp
out
mov
pop
stc
xchg
cmc
inc
jg
stos
mov
mov
repz
cld
repnz
jg
andl
ds
pop
mov
bnd
mov
add
cld
jecxz
and
xchg
jo
push
in
cmpsl
adc
icebp
push
pop
lahf
aas
jg
andl
push
mov
loopne
int3
stc
repz
jl
insb
xchg
fsubrs
cmpsl
pusha
cmp
jle
cld
push
xor
xor
sti
fildll
rcll
sub
or
or
cmp
std
jle
bound
lahf
add
jg
ds
pop
aaa
mov
or
test
mov
int
xor
sub
int3
push
sbb
sbb
inc
clc
xchg
pop
scas
mov
inc
jg
ljmp
fstp
xchg
mov
gs
repz
cld
sahf
xor
mov
dec
or
xor
cld
inc
xor
xor
loop
lret
pop
push
sahf
insb
psrlw
out
adc
in
adc
mov
xchg
and
cmovs
pop
rclb
into
lea
jmp
or
loopne
push
mov
mov
or
lahf
aas
jg
push
jl
sub
movsb
mov
subb
xchg
add
sub
jg
cld
pop
addr16
pop
ss
daa
push
pop
aas
xorl
mov
outsl
in
cmp
icebp
cmp
sub
sub
aas
fidivrs
jne
sub
xchg
hlt
and
xchg
rdseed
sub
lret
push
push
pop
cmc
std
push
and
out
lret
sub
xchg
repnz
pop
cs
gs
or
pusha
mov
adc
sub
aaa
push
cli
mov
das
andb
sub
pop
aam
lret
mov
pop
pop
dec
or
scas
mov
jmp
mov
inc
mov
repnz
repnz
xor
ja
lret
insl
mov
mov
jl
das
aas
jg
fidivrl
insl
pop
sbb
testl
xchg
repnz
sub
out
xor
fdivl
and
pop
xor
call
ds
mov
xchg
dec
aam
lahf
or
fidivs
test
lahf
pop
vmwrite
xchg
push
js
push
jp
lock
aad
and
push
pop
ja
push
pop
add
and
push
pop
jns
push
cmpb
pop
jns
mov
das
jge
mov
std
fs
jns
xchg
ja
sbb
stos
movsl
or
and
fadd
stc
in
push
pop
dec
sbb
shll
call
sub
out
cmp
xchg
push
ficomps
mov
or
mov
add
iret
das
lock
xor
fcompl
and
in
jmp
jp
inc
fbld
cs
lods
xchg
in
push
mov
cmp
xchg
xchg
push
pop
jns
lahf
push
int3
push
pop
inc
mov
cld
jb
adc
ret
or
out
mov
inc
pop
add
imul
repz
xchg
pop
xchg
or
push
sbb
repnz
fimull
jb
mov
das
jecxz
mov
push
loope
adc
stc
and
leave
jb
bound
aas
pop
loopne
mov
cmp
sub
cwtl
cmp
push
clc
pop
scas
mov
sbb
ret
ja
or
dec
lahf
outsb
ds
mov
push
pop
jns
mov
mov
xor
ljmp
das
cli
mov
jmp
mov
xchg
lahf
aas
add
out
mov
lret
xor
in
aas
jno
mov
dec
hlt
cwtl
std
pop
aas
jg
cld
adc
cmp
xor
ficomps
xchg
aam
lahf
orl
cs
cld
stc
repz
call
inc
call
push
inc
stc
pop
jg,pt
xchg
pop
or
ss
imul
pop
jns
xchg
lahf
xchg
lods
out
ljmp
dec
jg
test
add
rolb
xchg
jmp
imul
lahf
aas
test
cltd
int3
mov
ja
repnz
sbb
je
aaa
outsl
lock
cmp
gs
jns
xchg
int3
sub
scas
out
mov
jl
aam
in
push
cld
jecxz
add
aaa
insl
sbb
xchg
push
pop
xchg
mov
sub
call
ljmp
outsl
jecxz
cmp
push
repnz
lahf
aas
push
leave
in
and
jno
jg
dec
js
push
js
rep
dec
cltd
dec
push
inc
loopne
outsb
mov
in
xchg
sbb
aad
scas
pushf
pop
jmp
xor
pop
stc
mov
fbstp
mov
iret
xor
fstl
in
pusha
push
iret
inc
ss
rcll
jns
or
cmp
mov
jb
cltd
pop
jns
xchg
sbb
push
test
xor
aam
jns,pt
xchg
push
inc
daa
push
mov
or
fsubl
vmread
mulps
cmpsl
cs
cld
stc
repz
fwait
std
iret
in
loope
out
insb
lea
int
test
aas
jg
gs
xor
loop
scas
push
mov
sbb
leave
mov
sbb
pop
jns
addr16
xor
repz
sbb
jb
sbb
adc
mov
out
scas
call
repnz
nop
inc
mov
pop
adc
mov
das
aas
jg
cs
mov
dec
xchg
mov
dec
jmp
jmp
inc
fsubrs
inc
sahf
mov
pop
sub
push
inc
push
jg
pop
lahf
shl
sub
cmpb
stc
cmpsb
pop
jge
sub
jno
lcall
sub
ss
fidivs
je
xor
push
dec
dec
rorb
jb
jecxz
incl
call
adc
or
xchg
lock
jecxz
fildll
hlt
outsb
scas
mov
pop
pop
inc
lods
pop
xor
pusha
popf
sti
in
sub
pop
cmp
lods
addr16
dec
lret
mov
or
xchg
scas
mov
sub
pop
aaa
addr16
jns
dec
adc
aas
inc
mov
mov
and
dec
into
sub
js
mov
out
repnz
das
iret
ljmp
fwait
mov
stc
rorl
fwait
aad
push
mov
mov
add
loop
lods
stc
mov
shll
lret
fstl
in
ljmp
insb
cmc
data16
bound
test
mov
or
mov
jl
add
subb
into
mov
scas
mov
fmul
out
sahf
paddd
out
int3
cli
repnz
adc
jns
pop
xchg
stos
dec
pop
stc
repz
cs
repz
in
mov
pop
cld
mov
call
outsl
mov
cld
lahf
aas
incl
push
scas
sbb
add
and
repz
add
inc
jbe
adc
iret
std
mov
cmp
xor
inc
and
jge
jg
cld
stc
addr16
add
stos
jmp
imul
lahf
aas
out
sub
sahf
test
cld
stc
repz
popf
fcompl
jo
cld
mov
push
roll
imul
cmp
data16
cmp
addr16
pushf
cmp
stc
jb
jmp
imul
cmp
out
lahf
aas
jl
or
pop
rorb
lea
push
stc
cld
stc
repz
fwait
inc
into
rorl
and
lock
mov
ret
jmp
cmp
inc
mov
cld
stc
xchg
push
inc
test
movsb
roll
lahf
aas
jg
pushf
mov
jbe
mov
mov
call
cli
cwtl
xchg
aaa
shrb
mov
mov
jb
ret
ficoml
ret
mov
inc
in
push
xchg
jnp
pop
adc
outsl
xor
jns
popf
jecxz
xchg
aas
and
lcall
push
pop
fistpl
mov
sub
iret
lahf
aas
jg
sub
mov
xchg
xchg
stc
repz
and
adc
push
xor
shll
add
jg
je
dec
mov
std
cmpsb
bnd
jg
cld
sahf
xor
mov
add
fnstenv
inc
pop
mov
cmp
mov
jle
std
inc
xchg
cmpsb
lret
dec
jge
cld
stc
hlt
and
nop
outsl
clc
sbb
mov
sub
outsl
dec
mov
jae
and
stc
repz
sub
fs
cmpsl
adc
xor
aas
jg
cld
sub
mov
ret
cwtl
jg
sub
mov
repz
lahf
rcrb
adc
push
stc
stc
cmp
jbe
xchg
insb
hlt
das
enter
mov
push
jmp
incb
loop
mov
out
mov
mov
scas
int3
and
sub
jmp
js
add
enter
scas
mov
or
pop
pop
decl
loopne
test
subl
decb
adc
scas
jnp
aad
mov
jle
inc
stc
repz
push
adc
mov
jmp
xor
add
loop
xchg
xorb
sbb
iret
lahf
adc
sbb
stos
fnsave
add
and
in
loope
jae
in
dec
ja
lahf
sbb
pop
or
xchg
push
popl
jnp
mov
push
pop
fstps
and
jle
std
jb
jmp
xchg
adc
mov
pop
jne
loope
lahf
push
jle
subl
cmp
scas
mov
mov
xlat
insl
iret
pop
cmpsb
xchg
notb
xchg
sub
je
sbb
sub
lods
sub
aas
jg
ds
loopne
sarl
mov
pop
or
lahf
sbb
in
iret
pop
test
mov
sahf
clc
movsl
mov
lret
out
xchg
xor
maxps
push
sbb
sbb
mov
push
sbb
add
cmp
xchg
push
pop
jns
rcrb
jno
push
cld
test
cmpsl
hlt
lret
test
sbb
mov
in
sbb
lcall
jbe
stc
cld
shrl
add
mov
lahf
stos
out
cli
fistpl
fdivl
dec
or
aaa
cli
cmp
xor
add
out
rep
jmp
out
nop
jno
add
sub
repz
fnstenv
loop
jg
cld
or
ljmp
sti
aaa
ja
in
iret
xchg
add
pushf
xchg
fwait
and
xchg
pop
icebp
shlb
ljmp
repz
into
pop
adc
mov
repz
sub
pop
rcrl
incb
push
fldenv
out
cltd
repnz
lahf
dec
lods
cmp
nop
addr16
stc
mov
adc
or
mov
pop
pop
mov
imul
sarb
fstl
data16
sbb
xchg
or
popa
and
jns
sub
inc
imul
fisubrl
out
mov
push
subb
fadd
cmpsl
scas
mov
push
push
cmp
hlt
jne
ret
mov
inc
je
repnz
mov
mul
xchg
shlb
or
scas
inc
ljmp
fs
das
scas
mov
gs
loop
repz
iret
aas
mov
inc
or
fs
dec
push
bound
bswap
out
clc
xchg
dec
fbstp
ds
ret
andb
rcl
das
aas
cmc
cmpb
lea
inc
adc
pop
sbb
lock
jp
aam
aaa
js
imul
mov
inc
sub
out
loopne
arpl
inc
aas
or
or
in
adc
mov
minps
int
in
mov
lret
pushf
xchg
pminsw
jg
jb
mov
repnz
mov
or
sbb
mov
jg
clc
daa
jno
scas
inc
cld
sahf
jns
dec
xlat
lret
out
repnz
xlat
dec
das
mov
ss
in
vprotw
repz
arpl
xchg
and
jmp
jb
in
mov
mov
xchg
mov
repnz
jb
icebp
push
pop
mov
sub
or
pop
cmpb
xchg
cltd
sub
or
mov
or
pop
ds
mov
mov
push
lods
lret
cld
stc
repz
mov
mov
iret
mov
hlt
insb
scas
cmc
sub
mov
rolb
jg
testl
dec
repnz
lahf
jmp
shll
fisubrl
out
pop
das
std
push
xchg
pop
xchg
mov
mov
cmpsb
aam
jmp
pcmpeqw
dec
sub
mov
cld
nop
jle
insl
xor
repnz
outsl
dec
or
jno
push
scas
inc
pusha
lret
mov
push
xor
add
xorb
repnz
lcall
fwait
ret
add
clc
jbe
gs
xchg
mov
mov
das
pop
popf
or
or
cld
stc
push
cli
sbb
pop
fmull
jae
cs
push
fisubrs
xor
scas
mov
sbb
xchg
push
pop
jns
ficoml
cmp
jbe
stc
loope
dec
test
mov
aam
adc
pusha
stc
cld
mov
mov
jge
push
pushf
scas
iret
sahf
xchg
aaa
call
mov
jne
jns
jge
cmp
aas
ret
loope
and
in
push
hlt
lahf
or
ret
pop
push
pop
jns
sub
xchg
out
insl
aam
mov
and
lret
xchg
das
in
cltd
push
sbb
cmp
pop
lret
xchg
adc
outsl
inc
ficompl
add
xchg
lahf
pop
mov
movntps
imul
push
lret
lahf
aas
jg
out
imulb
out
jge
mov
pop
in
inc
inc
jae
je
iret
sub
xchg
push
ficomps
repz
pop
pop
bound
jl
lds
stc
adc
sbb
mov
pop
xchg
ja
jns
mov
addb
outsb
pop
pop
jns
loop
fstl
push
push
mov
mov
jg
cld
inc
push
cmp
ljmp
pop
or
aas
aas
test
mov
sbb
imul
lret
sub
mov
outsl
cmc
mov
mov
lds
lret
xchg
push
pop
or
jno
mov
jns
jle
inc
add
movsb
out
jp
pop
jg
push
repnz
fstl
out
andl
push
les
sbb
xchg
push
pop
pop
nop
mov
mov
repnz
push
fdivrp
jb
push
inc
test
sub
mov
mov
fldenv
cmp
cld
pop
int
add
xchg
repnz
stos
mov
jno
dec
pop
stos
ljmp
adc
lods
adc
sbbl
stc
repz
dec
je
lds
xchg
aaa
mov
loope
or
repnz
push
lret
lea
mov
ror
mov
orb
pop
shr
jmp
pop
xchg
aas
xchg
mov
add
gs
repnz
and
inc
jge
lret
dec
loopne
add
or
sub
into
hlt
jbe
cs
scas
mov
xor
fs
sbb
pusha
lea
jg
test
sub
into
stc
dec
mov
daa
fs
dec
mov
repnz
lret
mov
push
fistpll
cmp
lods
das
scas
mov
sarb
int
push
jecxz
out
mov
push
ja
inc
xor
xchg
xchg
hlt
in
cli
arpl
arpl
jns
daa
outsl
repnz
sti
call
or
jle
fisttpl
push
mov
mov
or
out
rclb
sbb
into
out
lahf
aas
out
pop
xchg
mov
mov
test
jbe
xchg
and
sub
xchg
push
mov
out
cs
cld
stc
xor
sbb
sub
mov
adc
in
push
mov
mov
lahf
jnp
lods
test
add
adc
lret
dec
test
mov
arpl
test
out
xchg
sub
mov
jecxz
es
aad
mov
repnz
movsl
decb
out
aas
test
out
and
fcmovnbe
jmp
add
cld
stc
rep
inc
cwtl
and
or
pop
jg
aas
xchg
pop
sub
cmpsl
out
or
out
lahf
scas
repz
les
cld
stc
sbb
bound
loope
lret
adc
jg
es
adc
testl
loope
out
pop
mov
push
lahf
aas
aas
ret
outsb
cmp
aad
jns
sub
out
ljmp
pop
sub
es
sbb
lcall
mov
loopne
cld
mov
jle
bound
fwait
inc
outsl
add
out
das
add
jmp
das
push
fidivrs
mov
pop
or
fimull
popf
fwait
jns
lret
xchg
pop
mov
sub
lea
lahf
add
push
pop
imul
ljmp
pop
jns
mov
cld
dec
outsl
sub
mov
sbb
inc
arpl
stos
and
sub
mov
mov
jae
sbb
mov
dec
push
jne
sbb
cmpb
lret
inc
push
pop
je
mov
arpl
sub
divb
or
lahf
jg
fisubrs
sbb
loopne
xor
cmc
pop
sub
sahf
jl
xchg
or
cld
push
dec
pop
ljmp
scas
hlt
and
iret
lahf
pop
or
int
mov
mov
add
repnz
xchg
icebp
dec
sahf
and
leave
fldl
aas
push
add
cmp
adc
dec
jbe
pop
jns
repnz
or
jmp
mov
aad
das
movsb
das
mulb
lock
inc
xchg
das
aaa
mov
leave
pop
into
int3
repnz
repz
scas
add
iret
xchg
sub
sbb
push
push
pop
jle
test
iret
lahf
jg
ret
push
xchg
push
inc
lea
pushf
jo
stc
rep
push
and
and
stos
stc
and
popf
cmc
imul
nop
jle
cwtl
adc
les
mov
out
lahf
jmp
into
mov
enter
mov
xchg
fmulp
pop
xchg
les
adc
pop
push
aas
pop
iret
test
out
adc
lock
sahf
xor
jmp
pop
ss
sub
lods
mov
push
test
jecxz
mov
mov
mov
mov
mov
jno
mov
cmp
aaa
and
sub
test
cmc
mov
repnz
insb
imul
fsubp
lret
mov
scas
fsubs
mov
xchg
shlb
ljmp
push
jo
lcall
aas
jg
cld
pop
jb
sbb
popf
jne
cmp
data16
jb
mov
dec
lret
mov
call
sahf
fsubl
decl
xchg
lcall
mov
stc
repz
dec
daa
jmp
adc
cmpsb
jno
mov
mov
cs
iret
and
popa
out
lahf
pop
push
stc
or
mov
add
cld
stc
repz
sbbl
call
mov
shr
lret
repz
push
pop
mov
pop
movsb
lods
fimull
in
idivb
cmp
mov
jns
xchg
push
repnz
xor
rolb
pop
fisubs
outsb
in
push
pop
idivb
sub
mov
lods
push
xchg
push
pop
jns
and
test
out
lods
xlat
xor
and
push
jg
jne
iret
push
push
xchg
pop
test
push
pushf
add
xchg
push
cltd
inc
pop
insb
sbb
fisttps
pusha
jle
add
cmp
dec
mov
lahf
push
sarl
add
sti
in
mov
scas
out
aas
xlat
pop
mov
std
jnp
pop
jae
out
leave
and
repz
jle
subb
inc
mov
mov
ja
jp
pop
inc
mov
adc
adc
mov
xchg
iret
mov
ljmp
repnz
call
push
adc
jp
jl
pop
jns
xor
rclb
xchg
ja
dec
dec
pop
xchg
pop
pop
pushl
jns
fucom
repz
lret
push
cmp
test
lahf
pop
add
push
xchg
sbb
inc
je
stc
repz
xchg
xor
loopne
xchg
mov
dec
inc
jg,pt
cld
pusha
sub
loopne
icebp
add
mov
jg
test
lods
jg
cld
test
mov
repnz
pop
out
test
add
xchg
lahf
mov
scas
dec
and
into
lret
mov
cmpsb
int3
push
gs
scas
mov
inc
ljmp
test
cmpl
ja
jns
scas
inc
push
lret
daa
mov
push
mov
add
mov
jle
std
fwait
push
or
jle
sti
pop
cltd
dec
or
push
and
stos
cmovle
jns
lcall
aam
bnd
adc
xchg
ja
xchg
in
iret
insl
jae
movsb
sti
adc
pop
pop
ret
pop
and
cmc
lahf
imul
pop
jns
icebp
pop
outsb
inc
and
dec
push
sahf
cld
mov
lret
xchg
xor
jecxz
mov
push
and
jb
xchg
push
pop
leave
scas
pusha
cmpsb
and
pop
dec
incb
jb
in
jmp
jge
sahf
jbe
addr16
mov
mov
mov
loop
pop
jns
fldl
and
add
xchg
push
mov
stos
mov
enter
jns
fnsave
xor
pop
cld
push
xor
andb
jb
imul
clc
in
sub
inc
ror
loopnew
fcoml
mov
cld
shrl
xchg
popa
fidivs
imull
pop
add
loope
pop
in
jae
fmul
sub
jle
xchg
dec
repz
shll
aad
enter
clc
div
lcall
and
out
cwtl
pop
jns
xchg
test
jb
cmp
lods
ret
jp
push
or
pop
inc
pop
jns
xchg
and
or
mov
or
das
cltd
cwtl
dec
pop
xchg
fwait
mov
clc
repnz
lret
bound
lcall
sbb
push
jle
cld
ret
sub
mov
es
stos
in
ja
jp
xor
adc
sub
adcb
jb
fnstsw
jle
push
scas
lods
mov
jae
sbb
jge
in
xor
lods
mov
push
mov
dec
inc
jno
out
and
sbb
stc
aaa
cmc
in
sub
mov
inc
std
repnz
pop
sbb
das
aas
jg
dec
subb
test
cmpsb
xchg
ljmp
scas
mov
and
xor
daa
xchg
sarb
xor
lret
sub
push
mov
iret
lahf
xchg
int
and
stc
and
or
and
in
shlb
fwait
push
test
lahf
aas
out
aas
or
mov
or
repnz
aas
xchg
bound
ret
add
jns
xchg
push
xchg
adc
lods
cmpsl
rcl
push
jbe
pop
in
push
pop
mov
daa
cs
xchg
push
pop
jns
jbe
xor
jmp
mov
cmp
jl
in
jno
push
les
inc
dec
push
pop
out
pop
jle
lock
xchg
int3
fcoms
mov
xchg
iret
scas
test
sahf
xlat
pop
push
jb
xor
mov
xor
jns
imul
jg,pt
shll
or
in
outsl
jge
enter
mov
add
add
and
sti
repnz
lea
add
call
adc
jp
jne
dec
push
out
aas
or
test
and
mov
cmpsb
pop
push
cmpsl
push
pop
jns
xchg
push
lcall
pusha
xchg
aaa
bound
xchg
push
push
in
aaa
neg
cltd
sub
call
mov
leave
repz
outsl
pop
jo
mov
xor
stc
mov
push
jmp
mov
dec
sbb
out
lahf
aas
mov
dec
popa
ljmp
stos
cli
jb
repnz
jb
cli
mov
mov
test
dec
jmp
xchg
push
mov
cld
stc
jg
in
sahf
lock
mov
gs
test
pusha
lret
lahf
aas
mulb
mov
push
lret
in
iret
dec
jg
out
leave
dec
dec
sub
jl
push
shl
jne
mov
mov
repnz
xchg
cmp
ret
jnp
fistps
pusha
or
lret
jle
xchg
pop
mov
loope
push
mov
addr16
sti
in
in
fnstsw
sbb
repnz
adc
iret
mov
call
cmp
lret
aam
sub
fidivrs
inc
jbe
das
scas
mov
adc
test
repnz
das
push
repnz
cmpsl
scas
call
cld
stc
ljmp
pushf
hlt
cmp
dec
ss
pop
jg,pt
ds
jecxz
inc
mov
in
mov
pusha
loopne
fwait
out
or
cmc
xchg
scas
mov
xchg
aas
test
cmp
sbb
fs
cmpsb
jnp
push
sub
sub
xchg
mull
mov
icebp
inc
int3
fwait
les
mov
cmp
push
jno
jns
push
test
xchg
cmp
or
sti
or
in
xchg
pop
push
jl
push
lret
mov
lret
mov
push
test
scas
mov
add
decb
xor
jns
xchg
mov
shrl
lcall
test
xlat
dec
data16
popf
pop
pop
enter
push
ja
ss
shll
jl
adc
push
arpl
sahf
sub
aas
jg
push
cld
js
cwtl
adcl
iret
lahf
dec
aaa
pop
or
and
jp
cld
stc
repz
xor
xlat
aam
sbb
pop
pusha
popf
cli
lahf
aas
jg
insb
push
rolb
sub
xor
hlt
stc
repz
je
in
fwait
and
or
sar
gs
dec
cld
jae
pop
fnstsw
es
jle
and
das
mov
mov
push
xchg
push
mov
subl
jno
jecxz
insb
and
loop
gs
jo
lods
mov
jle
std
xor
insb
mov
fsubr
dec
das
ja
jle
mul
xor
xchg
loope
out
lret
lahf
les
test
aam
imull
rclb
leave
add
and
sbb
ds
cld
stc
repz
pop
idivb
xchg
mov
out
jle
pushaw
push
jg
dec
jp
ja
pop
adc
scas
mov
xchg
out
cmpsl
js
aam
movsb
mov
lea
push
push
cmovne
jns
mov
fmul
lret
or
mov
jnp
outsl
push
leave
orl
push
jge
inc
inc
mov
das
push
fidivrs
call
out
jmp
and
mov
xchg
xchg
scas
lea
jns
xor
es
sbb
push
add
push
push
in
pop
cld
pop
jns
xchg
fisttps
icebp
mov
dec
addr16
xchg
daa
in
das
push
out
mov
pop
pop
sub
fcoms
je
and
adc
call
ja
jmp
fwait
and
movb
insl
lcall
xor
repz
sahf
icebp
ds
push
andb
stc
adc
inc
xchg
ja
push
in
test
pusha
jle
xor
mov
les
fdivl
cs
lock
iret
and
in
scas
mov
stos
sub
jge
sti
in
into
dec
rclb
pop
dec
jnp
add
sub
sub
mov
xor
aaa
insl
in
mov
mulps
sub
dec
hlt
negl
xchg
scas
aad
add
jl
ja
in
push
mov
stc
aas
and
push
pop
jns
cwtl
rorb
and
and
cmp
pop
jns
xchg
popa
aas
fwait
dec
icebp
pop
mov
pop
mov
dec
xor
xchg
push
add
cmp
mov
pop
dec
inc
push
sbb
pop
mov
mov
jns
push
pop
jns
addr16
outsl
cmp
outsb
adc
icebp
out
lret
xchg
mov
mov
iret
xchg
ljmp
outsb
out
add
pop
pop
push
pop
popa
mov
daa
stc
repz
pop
mov
fistps
cmpsb
jecxz
loope
cli
aas
scas
cld
cld
shll
ret
aaa
and
dec
aas
test
lahf
mov
pop
mov
xor
fnstsw
stc
xchg
mov
mov
cwtl
mov
lock
jge
aam
cmp
lds
sub
lea
mov
jmp
add
aas
jg
or
fstl
and
cmpsl
es
stc
repz
xor
sub
rolb
mov
and
dec
popf
syscall
pop
mov
mov
mov
addb
jle
das
in
sub
fimull
dec
mov
repnz
xor
in
and
xchg
jg
stc
add
push
push
out
into
inc
jle
jp
int
xchg
push
fdivrp
adc
pop
imul
les
jns
outsb
ds
mov
push
add
in
pop
jns
xchg
push
test
cwtl
es
dec
pop
and
mov
and
pop
mov
xchg
xor
sub
ja
das
cmp
lret
mov
dec
aad
jo
les
bnd
jbe
or
lret
mov
fildll
seta
ljmp
dec
loopne
das
loopne
pop
push
jle
iret
inc
jnp
stc
leave
clc
in
fcompl
sti
aaa
xor
icebp
cmpsl
subb
mov
scas
mov
nop
adc
insb
or
jno
push
clc
in
pushf
or
fcmovnu
cs
les
enter
inc
jb
jp
fistl
push
mov
dec
and
cli
cmp
mov
scas
test
insl
dec
xchg
shl
cwtl
mov
lahf
dec
pop
and
sahf
aas
test
leave
push
pop
push
in
aad
aas
sbbb
push
pop
jns
add
fisubl
cld
jne
fcomp
jge
in
mov
sbb
into
push
xchg
push
das
sbbb
cmpl
cld
add
add
xchg
test
and
xor
push
xchg
out
lahf
fsubs
mov
or
repnz
fmul
test
and
add
lds
and
in
mov
neg
outsb
sbb
mov
pop
jns
inc
lahf
inc
fistpl
inc
cld
or
add
jns
xchg
ja
xchg
sub
cs
jl
xor
xchg
push
pop
clc
pusha
cltd
dec
ret
hlt
arpl
xor
mov
xchg
push
pop
jns
pop
fldenv
fsubrp
or
sbb
ret
decb
sub
xchg
jecxz
scas
dec
dec
ljmp
iret
sub
mov
push
sub
dec
xchg
scas
dec
test
mov
jbe
les
lahf
cmpsl
push
push
cld
stos
push
outsb
jmp
mov
and
adc
mov
shrl
push
pusha
test
out
cs
sbb
or
enter
loope
pop
cld
out
into
mov
lret
loop
mov
fwait
pop
int
out
lahf
aas
loopne
fstps
xchg
mov
adc
mov
repz
push
jmp
int
push
dec
in
push
fisubrs
es
loop
subl
lds
sub
stos
or
test
outsl
les
or
xor
in
or
out
mov
popf
loopne
or
dec
addr16
sbb
fistps
in
push
pop
mov
pop
pop
sub
iret
add
jns
mov
repnz
dec
es
push
fsubrl
xchg
mov
jmp
pop
push
mov
cmpl
sub
arpl
shll
mov
out
lahf
fdivl
mov
dec
cli
inc
pop
dec
cmp
fidivrs
scas
ss
imul
clc
incl
int3
cs
das
push
fistps
mov
shrb
add
jns
orl
stc
stc
repz
pop
xorb
push
jg
push
xchg
sbb
test
mov
aad
sbb
out
fsubl
fstps
mov
cmp
mov
imulb
jg
add
aas
jg
push
clc
mov
rclb
mov
mov
fstpl
jns
jmp
lahf
je
or
outsb
adc
mov
pop
out
jle
jge
nop
pop
cmp
inc
les
das
aas
mov
mov
ret
cs
fsubrl
jle
sahf
imul
jne
push
or
cld
pop
xor
rcrl
jge
lahf
mov
jg,pt
fbld
sahf
aad
jle
and
repnz
jge
jge
pop
int
aam
push
pop
in
jp
das
scas
mov
mov
push
lds
pop
flds
inc
aaa
xchg
ss
loop
pop
inc
dec
fiaddl
jle
pop
scas
popa
mov
push
mov
sbb
xor
sub
pop
pop
and
sti
fcoms
mov
push
inc
sub
mov
out
xchg
loope
pop
js
lods
xor
aas
jg
add
lahf
sub
dec
add
out
lahf
insl
rcrb
cmp
pop
mov
jbe
dec
add
out
rclb
loopne
mov
push
and
jge
repz
push
jno
add
add
dec
add
mov
xchg
dec
push
fildll
idiv
mov
jl
leave
outsl
or
mov
or
cli
cmp
jle
xchg
das
cld
stc
repz
cmp
mov
xor
jns
cmp
jg
aas
faddl
enter
aam
xor
out
or
test
imul
jge
jge
je
jae
cmp
inc
das
cltd
dec
in
push
ficomps
ret
or
xchg
movsb
or
cld
sbb
sbb
cmp
mov
pop
clc
add
add
das
lahf
pop
pop
subb
add
aas
pop
pushf
push
insl
and
aam
repnz
and
push
js
or
repz
push
into
into
stc
inc
or
scas
mov
outsl
adc
push
cmp
scas
mov
pop
jge
stos
jle
aam
push
mov
das
aam
dec
push
lea
stc
repz
xlat
jg
orb
cwtl
or
pushf
jecxz
pop
out
pop
decb
or
inc
jge
jg
rclb
pop
sbb
dec
jge
repnz
sahf
xchg
mov
xchg
push
jecxz,pt
shlb
sbb
test
arpl
cmp
cmp
in
push
pop
sbb
inc
add
xchg
lret
xchg
push
pop
jns
inc
fidivrs
pop
jo
adc
ret
bound
nop
push
cld
mov
lret
xchg
sbb
xor
add
inc
call
rcr
jnp
jo
inc
int
jg
cld
out
sub
sbb
and
inc
xor
or
jle
lcall
sahf
sbb
stc
repz
aam
or
mov
cli
xor
jle
insl
jle
jecxz
lret
add
pcmpgtb
aas
repnz
lret
sub
add
xor
call
mov
mov
nop
int3
push
mov
lret
lock
repz
loop
sub
mov
mov
out
fsubrs
mov
lret
ret
les
xlat
mov
fwait
jns
stos
mov
aas
cmp
adc
lret
cwtl
xor
push
insb
xor
test
scas
mov
test
aaa
out
inc
movsl
lahf
aas
jg
out
aam
xchg
push
jno
ds
mov
push
pop
push
stc
pop
cmp
lret
cmp
dec
pop
loope
jbe
sub
ret
adc
sti
das
scas
mov
add
mov
ljmp
pop
or
add
push
arpl
sub
mov
add
in
jp
es
or
add
repnz
mov
inc
jg
dec
mov
sbb
cbtw
addb
cmpsl
add
popl
stc
push
fs
popf
jne
xchg
fsin
cld
stc
repz
dec
test
jne
jno
scas
mov
and
mov
repnz
cmp
xchg
add
cmc
mov
mov
or
stos
es
das
out
mov
aas
sahf
stos
iret
insb
data16
adc
xor
lods
mov
mov
pop
fwait
movsl
fistpll
cmpsb
sub
xchg
xchg
test
aas
jnp
sbb
mov
push
cli
add
stos
outsl
push
pushf
adc
mov
add
inc
addr16
aaa
das
aas
jg
fcmove
into
in
sbb
stc
cli
bound
xchg
mov
sahf
daa
adc
xchg
ja
lahf
and
test
jge
sub
fwait
iret
sub
rcll
iret
and
pop
mov
clc
repnz
insb
pop
rorb
xchg
add
jg
cld
jle
movsb
in
xchg
mov
mov
mov
jnp
stc
repz
das
cld
aam
inc
push
repz
push
jo
mov
and
cmp
push
mov
cmpsb
xor
iret
das
icebp
mov
sub
scas
pop
dec
adc
in
mov
fwait
pop
aas
sub
mov
gs
pop
scas
fwait
mov
adc
stos
stc
sbb
in
push
pop
push
inc
loop
xor
mov
jb
pushf
cmc
aas
shl
stc
repz
mov
mov
pop
insl
std
cmpsb
push
dec
jns
mov
divl
shld
adc
lahf
aas
aas
mov
jg
jp
jl
stc
repz
xor
jae
arpl
lret
jg
cld
int3
jl
pop
stc
xchg
sbb
mov
fcomps
mov
call
fmulp
push
aam
movsl
pop
out
push
xor
out
les
mov
into
cld
stc
repz
inc
mov
push
cmp
ret
aas
jg
push
mov
data16
stc
repz
mov
mov
js
xchg
pop
jle
push
sbb
sub
adc
repnz
mov
dec
adc
lds
or
das
mov
push
jns
fisttpll
div
ss
sti
cltd
and
shrb
cltd
je
sahf
or
sti
repnz
jno
add
loop
outsl
sub
mov
ljmp
mov
aaa
mov
inc
leave
scas
clc
fs
mov
loopne
sub
aas
fcomps
dec
xor
cwtl
pop
cld
fwait
cld
or
lahf
dec
ja
mov
pop
addb
or
jnp
mov
pop
scas
xor
fdivr
sub
sahf
dec
stos
mov
mov
pop
pop
lds
xor
xchg
test
in
scas
dec
jne
iret
lahf
aas
mov
pop
or
int3
dec
loop
insl
lock
xchg
out
mov
into
outsl
insl
shll
cld
stc
movsl
scas
jbe
mov
filds
nop
negb
std
fs
mov
das
cs
mov
in
mov
mov
fwait
jne
fsubrs
arpl
fwait
lahf
dec
or
out
mov
push
fcmove
jp
or
scas
xor
sub
iret
iret
lahf
pop
jmp
sub
xor
repz
cld
xchg
mov
xchg
or
jecxz
cmc
push
pop
out
jle
mov
dec
inc
inc
inc
dec
in
jle
fnsave
lea
movsl
cmpsb
cltd
out
push
dec
clc
in
aad
dec
add
pop
xor
iret
lahf
aas
mov
fcomps
sti
xchg
dec
adc
or
fsubr
and
std
stos
jmp
ret
fisttps
adc
gs
cld
stc
repz
gs
pop
lods
sahf
lret
and
push
idivb
incb
xor
push
out
mov
lds
iret
aam
fwait
pop
mov
std
adc
cld
mov
js
scas
jae
lahf
aas
mov
lcall
inc
mov
clc
in
out
xchg
dec
nop
pop
rclb
std
mov
xchg
idivl
cmc
xchg
jne
jb
adc
push
pop
add
dec
je
aad
out
jbe
pop
pop
jns
iret
push
scas
popf
sti
outsl
or
out
outsb
ds
addl
lahf
push
pop
jns
jnp
jmp
inc
data16
push
adc
pop
jns
xchg
mov
push
mov
jo
lea
jns
xchg
push
adc
cmp
lds
sbb
jg
and
inc
push
pop
sbb
lea
orl
adc
mov
das
sbbb
mov
lret
or
int3
inc
pop
mul
cmpps
cmpsb
aad
scas
cltd
xchg
stc
mov
addps
aaa
push
cltd
out
jg
cld
dec
jg
xchg
fisttpl
aam
or
and
aam
lahf
lods
xchg
movsl
adc
jns
repz
rcrb
sbb
rcrl
cld
stc
sti
fldt
ja
or
mov
lret
lahf
aas
dec
sti
rclb
mov
xor
test
pop
adc
jge
push
scas
lahf
cmc
test
sbb
lds
mov
pop
inc
pop
jns
xchg
adc
sbb
jg
adc
mov
xchg
push
xchg
push
loope
xchg
xchg
push
and
iret
aas
inc
cld
sbb
ja
fisubs
inc
add
out
fstps
jge
add
inc
mov
stc
stc
repz
mov
arpl
pop
dec
cmp
outsl
ficoms
es
icebp
lret
outsl
mov
sahf
popa
outsb
jl
sub
in
and
lret
nop
jbe
je
cld
cld
stc
repz
sbb
sub
add
mov
ror
ficoms
insl
push
cmc
adc
jo
aas
jg
mov
mov
adc
repnz
xchg
iret
jmp
cmpsl
sbb
or
fisttps
lret
mov
pop
pop
xchg
push
es
mov
mov
and
scas
addr16
ja
fdivrp
std
sbb
cmpsl
push
aas
lock
jb
in
push
scas
subl
xchg
mov
icebp
ds
push
pop
je
fists
add
int3
push
xchg
push
pop
jns
add
stos
repnz
cmpsb
hlt
cmpsl
jnp
pop
aas
mov
stc
sti
mov
dec
push
out
lahf
aas
jl
movsb
xlat
in
cs
push
icebp
movsl
push
cmp
repz
in
pop
sub
lcall
repz
test
les
sbb
add
cmp
out
push
pop
pop
and
repz
pop
xchg
cld
loop
repnz
repz
cmp
push
and
ret
jmp
cs
mov
imul
pop
pop
pop
ss
sub
sub
mov
repz
pmaxub
xor
cltd
in
and
cld
stc
mov
push
dec
inc
xchg
shl
push
dec
dec
mov
jb
fisttpll
out
mov
out
aad
repnz
lahf
jg
fstpl
sub
mov
ss
iret
gs
or
pop
imul
das
aas
aas
adc
mov
inc
or
mov
faddl
test
adc
call
in
aas
xchg
mov
sbb
iret
lahf
aas
imul
push
adc
pop
repz
and
add
sbb
hlt
or
pop
jle
cld
nop
mov
xchg
imul
pop
pop
cmp
cmp
orl
daa
idivl
jg
dec
mov
cmp
aad
addr16
repz
lret
imul
and
pop
jle
jg
jg
cld
data16
lods
jns
mov
pop
pop
or
mov
fisttpll
test
pusha
cld
das
jle
jo
jge
jl
cmp
mov
outsl
cli
enter
dec
into
adc
pop
xor
fistps
sbb
imul
jno
repz
outsb
es
int3
jp
outsl
xor
dec
mov
mov
out
fists
insl
push
xchg
xorps
in
cmpl
jg
dec
adc
add
sti
jge
jg
cld
stc
loop
cs
mov
rorl
lea
aas
pushf
sub
cmp
cs
iret
jne
and
pop
push
push
dec
sbb
icebp
out
mov
cld
mov
mov
pop
sbbl
sub
mov
ffreep
or
xchg
jle
jle
cld
inc
ds
xchg
int3
loopne
and
pop
lahf
aas
jg
pop
stos
mov
aaa
std
test
repz
inc
fucom
mov
mov
and
mov
add
lods
sti
cmp
test
mov
jae
sub
xchg
cmp
mov
insl
outsl
mov
xchg
pop
decb
maxps
jle
and
jecxz
sub
jg
mov
loope
mov
ds
stc
pop
lock
xchg
xchg
aas
jg
cld
and
hlt
sbb
xchg
stc
inc
push
lock
out
lahf
in
lods
xor
fimull
lcall
lds
iret
cltd
mov
movsb
and
fsub
xchg
ja
out
lock
cld
loop
sub
push
mov
mov
mov
sub
mov
jle
push
jmp
mov
lret
push
add
cwtl
test
jecxz
aas
aas
cmpsb
pop
scas
ss
or
stc
repz
inc
adc
jmp
inc
roll
or
sub
arpl
push
sbb
repnz
or
fsts
mov
fsubr
adc
pop
jle
xchg
pushf
jnp
shrl
inc
cltd
in
push
sarb
xchg
mov
xchg
push
pop
jns
xchg
icebp
cmpsb
loope
bound
add
sub
jns
imul
push
lcall
jns
xchg
pushf
std
push
out
out
xor
mov
stc
icebp
in
das
push
fistps
adc
mov
out
jl
enter
popf
push
jp
call
fcomip
xchg
dec
pop
pop
add
mov
gs
out
arpl
push
jg
push
int
repnz
xchg
push
fmull
add
insl
and
jge
inc
int3
ret
shl
inc
iret
jno
or
sarl
jg
add
fs
adc
in
sub
int3
stos
mov
adc
icebp
lods
out
movq
cmp
out
sahf
xor
clc
mov
pop
aas
jg
cld
fiaddl
mov
sbb
jno
cmp
sub
lret
aam
mov
int3
jae
push
clc
lret
sub
fisttpll
shr
lret
imull
dec
imul
mov
sbb
icebp
xchg
out
mov
stc
repz
das
jecxz
pushl
mov
dec
push
dec
iret
scas
sub
js
xchg
mov
stc
stc
repz
mov
pop
out
leave
add
cmp
push
decl
jbe
fcomps
in
test
popf
add
aas
adc
push
cli
testl
in
lret
jg
and
lahf
les
stc
repz
jg
mov
mov
dec
xchg
loope
push
mov
pop
and
addr16
cmpsl
push
out
repnz
and
push
lret
adc
movsb
sub
mov
sbb
imul
imul
lret
push
pushf
stos
std
in
sbb
add
sub
in
sub
popf
or
bswap
sub
jb
dec
mov
jge
scas
mov
test
and
xorb
mov
push
jecxz
cmp
pop
sub
cmp
out
xchg
outsl
cwtl
int3
out
outsl
popl
xchg
cmpsl
prefetcht1
imul
mov
imul
xor
sub
add
pop
jns
sbb
sub
and
out
mov
mov
dec
iret
test
or
jmp
cld
stc
repz
shll
sahf
rcrb
jmp
in
or
mov
cld
stc
repz
lcall
xor
adc
lahf
aas
jg
sbb
mov
or
pop
fmuls
add
out
mov
cli
in
mov
add
cmpsl
add
pop
scas
mov
mov
jne
add
in
dec
jns
repnz
movl
sub
jle
bnd
lahf
adc
frstor
pop
push
scas
mov
xchg
mov
jae
pop
mov
mov
ret
pusha
in
mov
sub
cs
sbb
cli
ror
inc
adc
out
lahf
test
sti
jbe
mov
leave
std
mov
sbb
add
cli
push
dec
push
scas
cmp
pop
mov
test
mov
push
lods
out
outsl
mov
pushf
dec
fcompl
xor
iret
push
rcll
push
xchg
jp
repnz
orl
adc
loope
lret
mov
mov
outsb
movsb
lret
repnz
enter
xchg
scas
jecxz
rorl
lret
and
jnp
lods
aam
jae
jne
and
es
mov
lret
fbstp
lret
sub
int3
add
gs
and
xchg
lahf
pop
sahf
jno
sub
dec
divl
push
lret
fstpl
xorb
rorb
icebp
pop
sbb
fwait
pop
lahf
jo
repz
push
mov
pop
mov
push
clc
cmc
out
jne
xchg
pop
push
mov
sbb
xor
aas
out
inc
repz
jecxz
jmp
fiadds
jno
and
scas
mov
mov
filds
and
mov
push
pop
cltd
mov
push
jnp
repnz
mov
stos
push
stc
push
in
xchg
loop
sub
pop
movsb
data16
test
cmp
repz
out
cmp
xor
inc
fs
leave
repz
jg
cld
cmc
insb
mov
add
frstor
dec
xchg
and
push
js
popf
scas
repnz
jo
stc
dec
xchg
mov
loopne
scas
fbld
imul
jg
sbb
das
loop
mov
aad
mov
lcall
insl
cmp
lock
pop
ret
sbb
dec
sub
icebp
in
adcl
dec
lahf
jg
pop
decl
out
push
xchg
in
das
dec
sbb
cwtl
outsl
shl
sub
add
pop
popa
jg
movsb
xchg
icebp
mov
das
aas
call
push
fsubrp
jl
jno
mov
lret
lahf
test
ret
insb
in
pop
ds
dec
out
andb
fsubl
adc
in
push
mov
es
lock
ljmp
lret
add
sti
outsl
daa
les
or
fmull
push
mov
xchg
cld
pop
sub
mov
jno
lahf
aas
jle
jg
imul
scas
cmp
mov
add
adc
insb
int3
mov
push
daa
and
js
cmpb
in
mov
jg
cld
cs
mov
push
mov
and
or
or
inc
mov
ja,pn
arpl
pop
add
fstpl
push
or
jbe
ficoml
jle
fmull
lahf
int
int
fldcw
sti
in
fimuls
jg
in
xchg
mov
repnz
negl
sub
mov
scas
mov
pop
cmp
jl
test
bnd
mov
sub
cld
adc
out
test
or
iret
lahf
aas
jg
pop
inc
js
mov
inc
xor
aaa
mov
adc
adc
fcomps
adc
push
pop
mov
cltd
dec
outsl
pop
lcall
jle
mov
int3
out
and
mov
pop
jg
adc
mov
fsubrl
mov
rcll
test
pop
repnz
add
xor
or
sbb
add
ja
cli
push
scas
sub
mov
in
sbb
div
repnz
pop
pop
ja
in
jle
rcll
jge
xor
push
sub
cmp
lret
iret
das
test
add
repnz
jnp
sub
es
pop
mov
pop
jnp
repnz
or
aaa
pop
pop
aad
arpl
cmpl
repnz
addr16
leave
out
scas
jmp
idivb
sti
mov
pop
lret
repnz
in
pop
stos
cmc
xchg
adcl
stos
in
xchg
xchg
sub
adc
and
xchg
aas
inc
pop
sbb
outsb
lock
mov
adc
aas
xchg
iret
lods
push
and
dec
sbb
jg
cld
stc
jge
and
mov
sub
inc
sahf
aas
mov
mov
pop
jge
in
into
cmp
xlat
loopne
push
fisubrs
aaa
call
rorb
lret
xchg
fnsave
xor
pop
jg
cld
stc
lahf
push
sti
xor
ds
lret
addr16
xchg
lea
xchg
cs
cld
stc
repz
das
inc
or
icebp
aam
call
ja
jle
jae
cltd
idivl
scas
inc
mov
int
imull
add
insl
pop
add
call
xchg
out
scas
mov
jp
adc
rorb
repnz
lcall
stos
push
add
sbbb
pop
sbb
dec
push
in
iret
lahf
aaa
and
dec
add
cmc
pop
lret
out
mov
scas
jle
adc
fsubp
int3
push
pop
iret
lahf
aas
jg
dec
dec
in
cli
or
cmp
sarl
repz
dec
jge
inc
lret
shrl
stos
les
popf
aas
sub
jle
or
outsl
stc
pop
adc
jb
out
lcall
mov
add
lret
mov
testb
gs
imul
daa
xor
cmp
jmp
stc
add
mov
aaa
jmp
push
sahf
fistpll
cld
dec
int3
adc
inc
adc
lret
xor
push
repnz
lahf
pop
rcll
and
and
cli
jb
fdivl
ss
jg
inc
std
das
and
mov
push
mov
dec
lret
xchg
lahf
aas
pop
adc
loop
in
inc
sub
jns
in
ljmpw
xchg
inc
push
jmp
fidivrl
jb
xchg
push
aas
mov
xchg
shrb
inc
div
add
and
divl
xchg
push
pop
jns
test
js
push
and
or
jl
push
pop
jns
fnsave
add
ficoms
adc
inc
rclb
fistps
cmp
ret
sbb
jbe
add
shll
push
into
aas
jmp
xchg
push
fdivrp
lret
loopne
xchg
aas
outsb
call
scas
lods
cli
mov
xor
dec
mov
out
jno
mov
std
sti
repnz
pushw
fisubrl
cmpsb
sbb
push
fimuls
pop
jbe
mov
pop
lods
movsb
xchg
push
pop
jns
push
dec
movaps
jecxz
mov
xor
jns
add
jae
cmpsb
imul
jns
xchg
scas
pop
in
test
lods
jmp
imul
lret
push
gs
sbb
cs
stos
sbbb
in
or
fwait
test
clc
xor
stc
repz
sbb
jo
ja
pop
mov
cmp
xchg
pusha
ret
push
jae
movd
repz
lahf
sbb
inc
push
ss
push
divb
xlat
cli
repnz
mov
mov
inc
loopne
out
repnz
pop
lahf
pop
mov
outsl
rep
adc
mov
dec
out
or
popf
out
jg
cld
stc
mov
movsl
xlat
push
nop
push
sub
shll
lahf
aas
outsb
adc
pop
jecxz
xor
lret
mov
idivb
ss
loop
sbb
adc
sub
mov
je
xor
scas
mov
insl
or
ret
mov
jb
and
xor
repnz
xchg
std
mov
in
imul
jle
das
dec
add
lahf
adc
cld
clc
repnz
push
xor
int3
xchg
test
cld
inc
ficomps
pop
frstor
je
lcall
push
inc
cltd
add
dec
push
push
pop
jns
enter
mov
sti
fldenv
xchg
imul
pusha
rcrb
pusha
int3
xchg
cmp
test
jg
inc
ds
outsb
cmpsl
dec
outsl
pop
lods
fucomip
aad
lahf
cs
std
adc
dec
lcall
icebp
scas
cltd
fdivs
dec
inc
cld
lods
sub
add
movsl
xchg
mov
lret
popa
mov
jb
xchg
ja
aaa
cmp
gs
ljmp
fdivrp
je
in
movsb
push
incl
scas
mov
adc
fldl
xchg
scas
repz
inc
cld
out
fwait
imul
jg
cld
stc
cmp
jmp
inc
call
fsubrs
iret
lahf
aas
dec
inc
scas
mov
mov
push
andb
pop
jmp
pop
mov
fxch
mov
fsubp
inc
jmp
pushf
dec
daa
and
lahf
cli
xor
add
stc
xor
mov
xor
orb
movsl
jb
repz
mov
cmp
mov
jl
cld
stc
aad
add
stc
dec
sub
jo
iret
dec
leave
lahf
jg
mov
add
mul
out
enter
cmpsb
pmaddwd
mov
pop
fistpll
or
sub
xchg
xchg
scas
xchg
gs
pop
ret
in
ja
stos
lea
ret
in
inc
jmp
add
adc
fisubrs
ljmp
pop
push
icebp
mov
pop
push
xor
mov
bound
cmc
in
lahf
aas
ds
repz
xor
cmc
lret
outsl
jmp
mov
xor
add
push
jmp
sti
ljmp
jg
adc
in
bound
pop
jg,pt
mov
cs
mov
xchg
mov
insb
aas
imul
dec
push
mov
jns
cmp
mov
cmpsl
bound
pop
fists
push
sub
jle
outsl
jns
push
les
lret
test
push
aad
mov
aaa
xchg
fists
mov
cld
jne
fwait
fs
repz
scas
enter
popf
and
cld
aaa
fwait
push
pop
stos
ja
js
negb
daa
xchg
int
jno
mov
das
ja
dec
pop
cmp
pop
mov
icebp
loop
sahf
inc
push
fbld
ret
ljmp
mov
iret
lahf
aas
mov
jbe
lret
mov
stc
repz
into
add
push
shrl
cld
cmpl
mov
das
out
mov
pushf
lea
sbb
pop
jns
aad
mov
dec
push
sbb
xlat
popa
aaa
pop
jns
xchg
arpl
pop
sbb
ret
sbb
in
das
push
rolb
mov
sub
test
fsubrp
mov
in
lods
lahf
jg
xchg
sub
mov
cmp
sbb
data16
jl
jb
ds
call
test
into
inc
sub
lret
icebp
out
mov
adc
adc
or
inc
sub
xor
push
bound
test
lret
gs
mov
jg
movsl
push
or
pop
mov
movsl
in
iret
lahf
aas
clc
stos
adc
ljmp
jne
repz
jae
sub
add
jl
lcall
push
les
fiadds
jns
fsubr
inc
jmp
xor
push
and
inc
scas
les
imul
pop
pop
jns
aam
out
or
xorb
lahf
pop
add
add
stc
imul
sub
mov
fsubr
jae
mov
in
subl
repnz
sti
inc
ror
pop
test
ja
idivb
lea
or
jg
mov
stos
repnz
cltd
fidivs
in
fidivrl
mov
lods
xchg
sub
jle
xchg
add
daa
xchg
push
data16
adc
repnz
icebp
inc
std
mov
mov
les
outsb
das
shl
ss
lahf
aas
jg
ljmp
pop
lret
call
gs
mov
cmp
sub
adc
out
dec
dec
mov
fldl
sub
jge
and
mov
ja
mov
je
or
fsts
paddsw
sub
subl
sarb
jno
lahf
aas
jg
mov
mov
or
sar
in
out
xchg
ret
outsl
mov
mov
add
sub
mov
adc
aad
aas
je
into
nop
jne
scas
mov
xor
jecxz
ljmp
xchg
sub
add
cld
stc
repz
mov
shl
jae
dec
pop
jle
dec
pop
inc
cmc
call
in
das
lahf
lods
ficoms
out
xchg
and
fdivp
jns
push
sahf
sub
iret
xlat
dec
notb
cmpsl
hlt
mov
lock
lret
aaa
aad
std
cld
out
cld
bound
push
push
jge
stc
repz
jns
or
pop
call
ret
push
ficomps
inc
fadd
shlb
stos
mov
aad
ja
pop
jns
test
mov
inc
mov
pop
jns
xchg
dec
lods
leave
xlat
fsubrl
mov
pop
lea
pop
lock
push
push
push
popf
mov
lret
add
das
push
int3
pop
and
add
or
jge
stc
jnp
adc
ret
or
call
xchg
push
or
lahf
gs
jns
repz
jle
xchg
imul
xor
inc
mov
or
in
sub
pop
dec
xchg
push
pop
jns
ss
fsubs
dec
das
je
dec
dec
push
lea
jnp
sbb
fistps
pop
jns
xchg
sahf
cld
cltd
xor
inc
add
test
xchg
push
cs
test
cmp
cmp
es
out
pop
mov
scas
mov
xor
pop
sub
cwtl
aad
test
cmpl
lea
lret
jo
in
ja
mov
shll
adcl
cld
outsl
jle
scas
mov
dec
mov
iret
cmpsl
ror
mov
and
icebp
pop
inc
push
in
scas
mov
push
jbe
aaa
je
bound
loope
sbb
lret
repz
es
iret
sbb
nop
test
daa
add
and
pop
sti
dec
insl
cld
add
cld
stc
subl
cmc
int3
sbb
popa
stos
shll
mov
aaa
test
stc
stc
repz
in
in
iret
mov
cli
cs
lret
in
aaa
pusha
outsl
cmp
call
sub
fbstp
push
pop
jns
jmp
out
icebp
xchg
mov
lods
notb
jns
mov
mov
mov
mov
cld
frstor
in
push
stc
jg
mov
adc
mov
mov
push
test
sti
test
dec
loop
and
dec
jns
leave
lret
mov
add
pop
loope
andb
out
mov
sub
int
and
out
push
mov
repnz
mov
movsl
adc
mov
sarl
sub
cmp
cmc
push
out
or
fdivrl
in
cld
xor
push
popa
fildll
dec
mov
jle
adc
shll
ja
repz
mov
aas
mov
jns
test
sub
std
std
repnz
lds
aas
jg
scas
mov
nop
sub
sbb
paddq
ss
mov
dec
mov
inc
popf
sub
cmp
and
cmc
test
add
inc
or
js
xor
dec
push
ret
jecxz
in
ja
out
and
arpl
in
bound
fidivrs
test
aas
and
je
mov
jge
sbb
pop
sbb
fsubrs
das
push
adc
mov
pushf
gs
aas
in
fwait
aaa
mov
es
sarl
cld
stc
repz
xor
popf
pusha
and
cwtl
jecxz
xchg
test
xor
jg,pn
xchg
mov
daa
loop
das
mov
out
gs
cld
stc
add
adc
or
mov
sahf
or
xchg
divb
mov
sub
jbe
pushf
sub
sbb
scas
push
arpl
in
or
sub
call
stc
repz
dec
pop
lcall
push
mov
aas
jg
fwait
les
sub
and
mov
fists
sub
push
dec
inc
imul
iret
lahf
aas
fs
sub
adc
jne
das
push
out
in
ljmp
mov
mov
daa
mov
mov
mov
cmp
sub
sti
cmpsl
js
out
sub
adc
lods
in
mov
repnz
test
push
je
mov
pop
pop
jns
cld
jo
and
notl
sbb
scas
mov
mov
pop
sbb
adc
mov
pushf
push
scas
xlat
xchg
lea
lret
sub
xor
push
popa
loop
or
into
mov
aas
in
ja
mov
push
cmp
mov
push
pop
pop
jns
add
push
outsl
mov
dec
push
test
dec
jae
divb
mov
mov
push
sbb
dec
push
mov
and
inc
xor
jecxz
pop
push
pop
jmp
jbe
int3
push
in
jg
sub
and
lods
and
out
sub
push
add
psubsb
jg
les
test
out
jecxz
xchg
aaa
mov
test
cmp
addr16
jnp
aas
ds
aad
scas
mov
in
lea
out
mov
cbtw
pop
fwait
iret
js
pop
xchg
cmp
in
adc
inc
and
sub
push
pop
subl
aam
dec
mov
jb
ljmp
data16
ja
inc
push
or
mov
inc
pop
popl
xchg
push
ficomps
aaa
stos
mov
xchg
dec
inc
cld
sbb
pop
iret
adcl
ja
jl
es
xor
inc
dec
dec
push
add
in
mov
fcoml
push
movntps
xchg
push
lret
xchg
push
leave
and
in
out
sbb
adc
test
seta
scas
mov
mov
lret
jle
repnz
outsb
or
scas
jne
cmpsl
iret
mov
xchg
shlb
lret
sub
out
fidivs
adc
adc
stc
repz
frstors
fldcw
jl
ljmp
cli
jbe
out
lahf
jg
lock
jo
mov
push
dec
gs
jb
pop
jnp
add
dec
push
fdivrp
subb
jno
repnz
cmp
movsl
mov
mov
idivl
push
jbe
mov
lds
xchg
xchg
push
pop
push
fmull
lods
aad
stc
and
mull
outsb
cmpsl
test
push
imul
das
ja
daa
mov
daa
xor
cs
mov
pop
cmp
pop
fimuls
mov
push
cmp
jbe
jle
push
adc
repz
dec
dec
adc
inc
jns
xchg
push
insb
inc
data16
dec
jge
dec
cmp
in
push
pop
adc
sbb
xchg
fcmovnb
rcrb
push
pop
jns
out
inc
sub
xor
sbb
lahf
insl
aaa
std
jnp
in
neg
pop
push
jno
adc
xchg
mov
cmpsl
in
xchg
mov
xlat
sbb
mov
adcl
in
mov
mov
mov
sub
mov
mov
xchg
pushf
mov
mov
mov
roll
lret
iret
lahf
or
scas
std
mull
gs
stc
rep
cs
inc
mov
lret
arpl
jecxz
icebp
imul
jl
dec
jp
sahf
fsubrp
xor
sbb
xchg
add
jb
popf
and
pop
sub
notb
mov
pushf
add
or
dec
clc
mov
inc
mov
aad
sarl
adc
xor
sbb
and
lahf
sbb
rcl
mov
add
cmc
repnz
jl
xchg
aad
vmwrite
mov
mov
in
cs
add
stos
int
jg,pt
push
sbb
add
lret
addb
cmp
lcall
sub
adc
mov
mov
addr16
div
lret
or
filds
mulb
ret
faddp
call
xchg
inc
popf
ss
xchg
iret
lahf
aas
dec
pop
mov
imul
mov
xchg
andb
stos
sti
imul
sahf
push
mov
or
dec
iret
lahf
aas
jg
lahf
pop
lcall
iret
xor
cld
stc
repz
ret
loope
daa
jb
fdivl
adcb
or
push
mov
stos
lea
jmp
in
sub
pop
jns
mov
mov
stos
mov
pop
jns
xchg
or
xchg
subl
dec
xchg
fs
aas
sbb
into
addb
xor
filds
test
test
loope,pt
mov
inc
sbb
in
repz
push
push
int
pop
jno
xchg
pop
iret
mov
dec
xor
sarb
lret
out
adc
popf
sbb
xchg
iret
lahf
add
xor
mov
out
rolb
cmpsb
das
sbb
xlat
aas
mov
mov
jge
dec
clc
push
bnd
pusha
mov
out
fstpt
or
pop
aas
mov
or
test
xchg
call
mov
out
pop
cmp
out
mov
adc
mov
dec
es
jl
subb
lret
outsl
adc
daa
bnd
jmp
sbb
mov
jmp
pop
addr16
lahf
aas
jg
out
imulb
inc
jecxz
movsl
mov
repnz
mov
pushf
mov
mov
mov
xchg
sbb
mov
or
push
xchg
push
pop
jns
std
iret
movsb
cli
mov
out
pop
jns
hlt
or
jecxz
ss
lret
inc
shr
inc
sub
pop
out
mov
repnz
inc
mov
mov
inc
outsb
pop
repnz
sbb
mov
lods
or
scas
mov
dec
std
mov
push
sarb
daa
dec
sbb
adc
cld
stc
repz
inc
cmpb
out
or
jnp
scas
jmp
inc
pop
jle
sub
sbb
faddl
iret
lahf
aas
pop
call
jmp
rorb
cld
stc
repz
lock
dec
jg
enter
mov
ja
mov
cmpsb
mov
push
scas
mov
in
imull
mov
cmc
stc
mov
loop
pop
inc
out
jns
push
jle
cld
mov
fcompl
lahf
aas
mov
mov
mov
lds
inc
imul
push
ret
lret
out
jecxz
add
and
cld
inc
outsb
xchg
insb
pop
jns
frstor
loopne
sbb
mov
in
ja
cmp
je
push
sbb
sub
ret
xor
iret
aas
hlt
jmp
add
aam
js
repz
jns
lea
daa
jne
mov
clc
mov
mov
cmp
and
xchg
ja
mov
mov
inc
mov
jno
jg
jmp
iret
cmovle
nop
jo
or
pop
jp
jl
cld
stc
insl
pop
add
mov
inc
in
or
arpl
mov
cld
stc
repz
sahf
outsb
ja,pt
lret
xchg
pop
cmpsb
loope
lock
xor
cwtl
mov
xchg
mov
adc
push
sahf
mov
das
push
fidivrs
sti
mov
shl
mov
stc
repz
push
inc
or
push
mov
ret
inc
nop
jg,pt
cld
xchg
insb
xlat
push
ja
jne
push
negb
repnz
ss
sbb
aas
pop
xchg
mov
pop
scas
mov
push
jle
test
stc
pop
mov
stc
add
xorl
pop
incb
mov
jmp
cltd
or
xchg
sub
test
repz
inc
add
sbb
xchg
mov
and
lahf
aas
jg
pop
outsl
insb
insl
xor
pushf
inc
fldt
out
inc
fstl
xlat
mov
or
fwait
pop
jg,pt
mov
sbb
jne
jne
adc
cld
xchg
and
jmp
dec
jb
stos
xchg
mov
in
not
push
pusha
cld
stc
add
mov
pop
mov
push
pop
cmp
flds
sbb
out
mov
iret
lahf
aas
jge
rclb
push
out
cwtl
pushf
int3
andl
dec
iret
lret
sub
cmp
jns,pt
mov
fwait
push
sub
sahf
inc
pop
or
xchg
ja
dec
add
test
pop
loop
mov
sub
aam
or
jns
test
loop
mov
imul
pop
jns
xchg
adc
jmp
dec
mov
jp
lahf
pop
add
out
cmp
fld
pop
jmp
out
xchg
iret
rcrb
inc
mov
faddl
hlt
mov
cli
sub
jns
jg
cld
mov
xor
mov
adc
hlt
xor
xchg
lahf
adcl
repz
mov
pop
adc
sbb
pop
mov
cltd
into
xchg
mov
cmp
mov
ret
aad
inc
cwtl
rolb
lahf
aas
decl
push
in
sub
lds
pop
xor
mov
insl
out
push
jle
int
mov
inc
cltd
push
jmp
pop
lret
pop
cld
lret
xchg
lods
push
jnp
das
out
push
mov
cmp
adc
xchg
lea
sar
scas
adc
cmp
jg
pop
cmpsb
mov
push
call
sti
in
mov
or
pop
pop
cld
testl
scas
mov
inc
mov
mov
pop
mov
notb
test
inc
loope
cmc
pushf
imull
negl
dec
in
push
pop
out
xlat
cmp
jle
loop
add
push
fdivrp
jb
xor
jg
movsl
mov
xchg
dec
cmp
adc
mov
inc
paddq
xor
das
push
pop
fwait
xor
or
int3
bswap
sub
std
jno
je
cmpsb
enter
scas
mov
nop
and
popl
jo
and
pop
xchg
insb
repz
push
in
jg
fs
jg
cld
stc
enter
mov
jecxz
mov
lahf
aas
xor
dec
and
in
fdiv
or
fdivrp
jb
and
daa
jb
pop
mov
adc
in
lret
jns
xchg
push
push
xchg
lcall
adc
mov
adc
gs
pop
cmc
out
jb
out
lahf
std
mov
in
lea
xor
loope
cld
stc
sub
pushf
sub
mov
test
inc
shrb
aas
and
inc
sub
mov
aaa
mov
daa
push
paddusw
sahf
lret
mov
leave
lods
push
movsb
mov
fwait
out
push
mov
pop
outsl
push
or
add
xsaves
lret
sub
fisttps
repz
loope
fistps
xorl
enter
xchg
mov
adc
push
daa
and
iret
lahf
aas
sub
lods
js
das
xlat
cs
lds
push
repnz
shrl
mov
mov
mov
sahf
shlb
dec
repnz
inc
add
lahf
jg
sahf
shll
push
or
pop
mov
repz
mov
addr16
adc
or
outsb
pop
imul
pop
push
push
lret
cmp
in
iret
xchg
add
mov
lret
mov
pop
lahf
cld
stc
add
outsb
jecxz
jne
or
popf
and
jge
outsb
pop
in
aam
out
fwait
test
in
mov
arpl
inc
push
aas
jg
cld
out
pusha
les
movnti
pop
lahf
mov
xchg
sub
mov
xor
and
cmp
addr16
pop
fdivrp
adc
das
aaa
cmc
imul
sbb
xchg
push
movsl
in
pop
cwtl
in
insl
and
out
lret
xchg
push
pop
add
stc
pop
mov
mul
lret
hlt
jne
and
das
fadds
sbb
scas
cmpsl
repz
scas
mov
add
pusha
out
xor
enter
fists
mov
test
push
fiaddl
push
push
rclb
sub
xor
jnp
mov
mov
jle
in
pop
sbb
pop
in
ss
lahf
cli
pop
pop
ror
jno
add
in
cmc
cmp
and
in
cmp
out
push
pusha
pop
sar
sti
jno
or
lds
pusha
cs
add
repz
lahf
insb
pop
lods
cmpsl
jno
in
ret
cmpsb
bound
addr16
shl
push
jnp
cmp
sbb
pop
or
iret
lahf
aas
mov
repz
das
mov
xchg
roll
into
add
rorb
add
xchg
xchg
sbb
jne
stos
sub
push
fmulp
sbb
push
into
add
mov
icebp
repnz
sahf
pop
shl
hlt
imul
filds
decb
idivl
xchg
rcrb
mov
inc
xor
mov
pop
lods
icebp
repz
sbb
rcl
popa
stc
cld
stc
lock
aam
cmp
rclb
inc
stos
xor
cli
push
dec
pusha
in
fstl
rcrb
out
cmp
pop
outsb
xchg
push
pop
jns
mov
mov
mov
ljmp
lret
clc
movsb
dec
in
sub
push
mov
insb
and
xchg
nop
jns
jle
repnz
sub
push
and
lret
sub
incl
xchg
add
jb
pop
sub
iret
lahf
mov
mov
int
int
push
and
stc
repz
das
imul
int
push
lds
loope
add
cmp
lock
in
sahf
imul
adc
cld
std
repnz
int3
xchg
jmp
jle
subb
jle
jle
pop
mov
sub
out
out
xchg
mov
pop
out
cmpsb
dec
push
lahf
sub
xchg
in
fcompl
outsl
out
scas
mov
lcall
popa
imul
sub
sahf
sub
push
fsubrl
cld
stc
repz
mov
sub
cmp
fwait
xchg
ja
jl
push
loop
addb
and
fldt
push
pop
jns
loop
push
push
icebp
ret
cmp
outsb
rcrb
fstl
jg
out
push
jmp
imul
das
xchg
push
fimuls
sub
loope
xchg
aas
bound
adc
adc
cmp
xchg
int
iret
mov
push
lock
fucomip
ss
stc
repz
inc
scas
std
mov
push
in
jmp
insb
jl
mov
into
mov
jno
adc
mov
add
out
les
out
mov
xor
and
scas
mov
dec
sub
fcoml
pop
ljmp
sub
and
push
repnz
and
jp
mov
addr16
das
scas
mov
jns
lods
xor
das
jg
mov
push
je
into
andl
pop
stc
repz
sbb
jmp
mov
aas
jg
cld
rolb
popa
mov
lahf
cmpb
jle
out
lahf
xchg
out
fnstcw
ss
cmp
xchg
lock
ljmp
sahf
pop
cmp
lock
lahf
jmp
out
or
adc
in
pop
mov
dec
cwtl
aas
push
jg
inc
push
icebp
in
jl
jecxz
ds
push
pusha
outsl
fisubrl
ds
jecxz
xor
push
add
in
outsl
std
sbbl
adc
call
mov
mov
lcall
repz
lahf
aam
jb
into
stc
xor
mov
cld
stc
jo
push
sahf
sahf
mov
ja
xor
mov
mov
mov
jmp
insb
sbb
imul
icebp
lret
outsl
push
push
cmp
mov
push
mov
nop
xchg
mov
orb
add
jae
shll
repnz
lahf
inc
mov
sub
lret
clc
cmp
enter
fbstp
mov
lock
clc
jg
scas
cmpb
and
push
dec
jge
inc
mul
out
scas
call
lods
ds
pop
jns
add
mov
mov
mov
mov
sub
cld
stc
repz
fisubs
cs
lcall
fsubs
sub
pop
xor
xchg
das
movsb
pop
dec
arpl
push
loopne
push
jg
repz
ret
adc
pop
mov
cld
fdivr
in
test
pop
xchg
jge
and
mov
stc
icebp
scas
dec
loopne
in
mov
mov
pop
or
mov
repz
jo
sahf
jb
pop
sti
shlb
cli
ds
cmp
jg
cld
fistpl
ret
cmp
sub
lret
sahf
aam
das
xor
gs
cld
sbb
sbb
incb
cmp
aas
jg
mov
push
adc
data16
scas
cs
lahf
ret
jnp
mov
scas
ljmp
lret
scas
inc
xor
outsl
aas
jg
cld
pop
xlat
pop
inc
jbe
out
movsb
cs
mov
pop
repz
lahf
aas
jg
lods
mov
mov
cli
in
stc
fcoms
inc
sahf
idiv
stc
repz
out
adc
sbb
aam
fidivs
cld
xlat
cld
lret
popa
adc
pop
dec
inc
xchg
mov
jge
hlt
jmp
stos
cld
stc
repz
fdivs
pop
sub
subl
sbb
lahf
aas
jg
add
mov
test
or
es
repnz
ret
jmp
faddp
lock
fdivrl
cmp
pop
pop
mov
cld
repnz
push
mov
inc
out
punpckhwd
icebp
movsl
clc
cwtl
xor
stc
repz
inc
sub
sbb
sbb
aam
mov
cld
iret
sub
jg
mov
arpl
repz
cld
stc
repz
xchg
sbbl
cld
mov
jb
or
ds
mov
mov
iret
dec
pop
or
jns
inc
nopl
mov
repz
out
imul
inc
mov
inc
inc
jae
cmp
in
push
cmp
outsl
pop
xor
fwait
ror
fisttps
in
push
pop
adc
mov
test
aas
mov
sbb
jmp
push
xorb
jg
jle
enter
cmp
pop
cmpb
stc
cld
stc
repz
outsl
pop
or
mov
sbbb
jb
sbb
xchg
push
mov
lret
out
cmovle
out
cli
enter
xor
ss
pop
and
scas
fsubrl
and
mov
mov
cld
stc
repz
push
jp
inc
popf
add
xchg
fisubrl
sbb
inc
sahf
aas
jg
rcrl
pop
sbb
cmpsl
aas
jg
dec
incb
mov
jle
mov
hlt
mov
mov
jns
sbb
imul
or
push
scas
sub
pop
jns
xchg
mov
sub
inc
jnp
in
push
in
xchg
xchg
cmc
mov
mov
add
in
jnp
repz
inc
nop
cvttps2pi
fidivrs
stc
cltd
pushf
mov
xchg
add
jb
xchg
push
leave
pop
jmp
subl
lcall
cmpb
cld
lret
push
scas
fildl
enter
ss
cld
sbb
push
ss
mov
or
push
das
aas
jg
fsts
inc
add
jg
pop
add
jmp
pop
mov
pop
decb
or
mov
aas
dec
jecxz
mov
mov
out
cmp
cld
stc
repz
pop
inc
sbb
jp
mov
mov
cmpsl
cs
mov
pop
sbb
and
sub
nop
lahf
pop
pop
jg
les
sbb
or
mov
out
xchg
std
inc
je
movsl
shld
cmp
sti
cltd
or
ja
movsb
and
iret
lahf
into
stc
stos
ret
jp,pt
pop
out
mov
outsb
insl
ja
xchg
cwtl
mov
mov
mov
dec
scas
xlat
lret
imul
and
in
fisttps
pop
jg
andl
aaa
mov
std
xor
xchg
iret
lahf
aas
mov
push
adc
loope
mov
jmp
jbe
outsb
movsb
cmp
jmp
pop
out
rclb
addl
out
sahf
jl
das
lods
out
xchg
jbe
dec
lods
push
jle
repnz
jns
sub
or
std
ret
in
xchg
pop
cmpb
jg
cltd
and
gs
fiadds
and
jae
insl
andb
mov
sbb
push
insb
mov
jle
jecxz
xor
pop
in
lods
adc
fdivrl
rcr
inc
cmc
mov
out
jns
add
push
cld
stc
cmp
mov
pop
sarb
adc
and
jb
iret
lahf
aas
hlt
dec
pop
jns
mov
pop
call
cld
stc
repz
adc
xor
cli
in
inc
addl
aas
jg
push
int
cwtl
lods
mov
jg
cwtl
mov
mov
ja
nop
push
fucomi
aas
mov
push
movsl
cmpsl
jecxz
imul
xlat
mov
repnz
cld
stc
repz
push
jle
jmp
push
mov
lahf
aas
jg
push
or
and
loope
mov
loop
jg
cmc
repnz
mov
into
sub
rol
mov
stc
mov
mov
inc
cld
iret
mov
into
insb
movsb
scas
and
dec
faddl
aad
push
xor
fisubrl
mov
mov
jo
sti
ja
cld
sub
sbb
lods
das
insl
mov
testb
ljmp
fcomi
mov
sahf
pop
inc
fnstsw
xor
jno
push
jg
mov
push
xor
mov
stc
mov
push
xchg
and
aaa
cmpsl
xlat
sbb
into
dec
sbb
js
repnz
xchg
cwtl
out
jne
imul
mov
push
mov
clc
stc
repz
lret
int3
fsubrs
test
lods
loopne
mov
push
cmc
hlt
aas
jg
cld
outsb
xchg
mov
mov
push
cld
inc
lahf
dec
inc
repz
lahf
mov
out
subb
repnz
ret
adc
jge
stc
cmpsb
jle
mov
mov
mov
pop
add
dec
mov
xchg
dec
xchg
aad
push
cmp
or
jle
repnz
ds
out
lea
fisttpll
pop
out
icebp
xchg
or
in
and
inc
in
pop
add
repnz
fstl
jle
xor
iret
das
lods
bound
or
push
inc
jb
repnz
inc
subb
and
sbb
lods
cmp
inc
jl
pop
scas
lahf
inc
xor
subl
lcall
inc
dec
out
dec
lods
fcmovnb
in
mov
faddl
inc
and
cmpsl
loop
popf
push
mov
ljmp
xor
xor
sbb
das
mov
or
mov
push
xchg
sub
fmul
movsl
jne
and
sbb
xchg
ja
sbb
pop
loop
and
cmp
pop
jns
in
test
jnp
fisubrl
jmp
cli
mov
sahf
aam
xor
pop
mov
lea
sbb
lock
repnz
mov
aam
stc
repz
cltd
mov
outsb
jg
jmp
or
fsubl
popa
movsbl
inc
loopne
mov
daa
int
push
outsb
fbld
pop
loope
and
mov
adc
scas
repnz
lret
iret
in
mov
push
es
and
mov
cwtl
pushf
sub
loope
push
pop
jns
pop
xchg
lea
sti
sub
pop
lds
jg
fcmovb
scas
mov
cmp
push
xor
mov
fbld
sub
outsl
lcall
das
out
and
or
cmp
push
pop
lahf
aas
jg
or
sub
insb
sbb
cmp
jg
jecxz
xchg
stc
repz
push
idivb
into
xchg
shlb
sub
mov
push
fdivrp
repnz
subps
std
jb
ret
outsl
pop
mov
lret
mov
outsl
sub
leave
adc
sub
mov
movd
jg
cld
mov
mov
dec
loopne
lods
mov
ljmp
cmp
and
out
lahf
pop
sti
popf
xlat
rol
sub
or
mov
nop
add
add
push
nop
jle
sub
xchg
jle
cmp
cmp
or
mov
cld
fsqrt
gs
inc
lfs
iret
lahf
aas
jg
repz
jb
lahf
fstpl
cmp
cld
stc
repz
cmc
pop
xchg
js
ret
aam
jge
pop
sub
call
arpl
cld
rol
lea
inc
repnz
mov
jns
dec
sti
scas
sub
jg
inc
xchg
fstpt
movsb
mov
lret
xchg
push
and
js
loope
push
mov
mov
mull
out
xor
adc
or
stc
push
xor
sahf
repz
sbb
gs
push
popf
stc
and
cmp
leave
fisubrs
dec
lahf
aas
adc
loopne
cltd
enter
push
adc
or
lock
cmpsb
xchg
arpl
ljmp
xor
and
repnz
fwait
clc
add
xchg
lcall
scas
mov
outsb
rclb
xchg
iret
aas
sahf
sub
jl
insl
push
aas
mov
and
sbb
aad
lret
repz
lahf
add
xchg
js
outsl
mov
leave
pop
jg
cld
stc
daa
or
movsl
mov
imul
ljmp
cmp
inc
mov
inc
jno
stc
repz
daa
sahf
add
and
dec
std
jb
cmp
push
mov
cs
scas
test
mov
dec
aas
pop
pop
jle
fidivrs
cwtl
js
lret
xor
gs
mov
sub
mov
movsl
mov
iret
pop
scas
push
scas
mov
jns
cmp
or
rclb
pop
xchg
push
iret
or
dec
or
aam
movsb
mov
shlb
xchg
sub
jecxz
mov
mov
int3
shll
loopne
lcall
xor
mov
cmp
and
in
xchg
insb
leave
cmp
out
loopne
movsl
inc
loop
xchg
cld
outsb
add
fsub
inc
in
out
adc
mov
mov
or
outsb
mov
lret
iret
lahf
aas
jmp
inc
outsb
inc
je
jb
mov
outsb
dec
push
and
or
sub
aas
mov
sub
mov
jg,pt
movsl
inc
out
xlat
hlt
xchg
mov
adc
mov
call
push
adc
xchg
ja
lds
fistps
clc
js
dec
sub
push
fstpl
mov
jge
push
jmp
jge
out
adc
ret
mov
mov
xchg
mov
test
sub
outsb
sbb
je
jns
xchg
push
mov
ss
sub
cmp
jge
jge
pop
sub
lods
negb
cli
add
cmp
inc
pop
in
push
scas
out
pmaddwd
enter
and
push
cltd
mov
repz
ret
jp
outsl
cmp
or
push
adc
lahf
aas
jg
lods
insb
movsl
loope
xorb
ret
mov
sti
cld
stc
repz
mov
mov
mov
insl
mov
mov
stos
loopne
add
mov
mov
jp
mov
ss
insb
test
cld
mov
imul
shrb
hlt
pop
test
data16
xchg
ds
dec
inc
xchg
mov
jg
incb
sub
stos
sub
clc
sbb
pop
ret
inc
call
xchg
push
mov
pushf
dec
pop
and
fistl
jns
dec
adc
out
ss
scas
push
das
inc
ds
stos
pusha
out
lahf
lock
sarl
mov
cld
stc
repz
es
add
jg
mov
mov
cmp
lahf
aas
jg
push
dec
in
mov
sub
mov
repz
lret
adc
push
scas
push
cmp
adc
stc
sbb
lahf
inc
dec
iret
or
mov
lahf
pop
adc
mov
stos
xor
mov
repz
jmp
mov
and
or
aas
jg
cld
jns
and
lahf
jecxz
clc
cmp
xchg
lods
and
lret
iret
lahf
mov
mov
sar
adc
in
lahf
jg
and
pusha
xlat
les
xor
xchg
movsl
jns
jle
loop
scas
add
outsb
jnp
xchg
call
aas
dec
mov
adc
and
test
mov
daa
mov
add
cmp
test
inc
jb
xchg
cltd
ds
push
repnz
xchg
iret
cmc
daa
popa
ds
jecxz
fistps
scas
mov
mov
mov
clc
in
or
jg
sub
jns
mov
scas
push
les
adc
rdpmc
in
push
pop
fs
repz
sarb
inc
pop
pop
jns
push
adc
pop
jle
cld
stc
repz
push
test
ds
adc
call
mov
stos
out
jmp
test
mov
sub
call
lcall
adc
iret
sub
jb
in
mov
lret
sub
fmull
gs
lret
test
mov
iret
lahf
aas
neg
xchg
jne
or
pop
ficompl
repz
rdmsr
inc
add
adc
idivb
dec
arpl
inc
pop
and
dec
dec
xchg
aad
lahf
aas
sbb
popa
lahf
pop
jns
fnstsw
xchg
dec
push
shl
cmp
dec
outsb
pop
jle
pop
pop
shrl
inc
inc
std
sti
daa
fbld
es
lea
adc
testb
push
pop
jns
stos
cld
jbe
daa
adc
test
fwait
dec
shlb
icebp
pop
cs
jb
repz
stos
pop
cmp
xchg
and
cld
ret
mov
fsubrp
adc
mov
scas
or
ret
ja
push
cmp
insb
call
js
sahf
das
fsubrl
rcll
cwtl
jl
shrb
mov
inc
jno
cltd
sahf
rcll
xabort
mov
push
call
test
adc
out
enter
mov
sti
dec
aas
fwait
xor
data16
cld
push
clc
sti
into
inc
dec
mov
mov
sub
jle
mov
jge
daa
call
call
pop
scas
mov
or
pop
and
add
jns
daa
out
stos
or
or
push
push
pop
jns
xchg
imul
movsb
in
adc
dec
out
loopne
das
push
ret
jecxz
mov
cld
stc
repz
cmp
dec
cltd
je
popf
pusha
lahf
aas
jg
pop
jp
jle
xchg
or
or
repz
jbe
jp
pushf
sbb
push
mov
mov
cld
push
xor
mov
mov
jge
dec
je
adc
stos
lret
lahf
movsb
xchg
pop
lock
mov
arpl
out
cmp
shl
out
sahf
xchg
mov
movsb
ficompl
sub
jns
jnp
add
and
movsl
lea
or
repnz
insl
cmp
mov
das
andl
fistpll
mov
in
lret
mov
shll
xchg
push
mov
mov
xchg
out
dec
xlat
sbb
mov
pop
jns
dec
pop
mov
sbb
mov
shrb
lahf
out
lahf
aas
int3
into
fistpll
outsl
rolb
cld
stc
repz
inc
sub
inc
add
add
inc
repnz
lret
mov
hlt
fstpt
cmp
loopne
cmpb
std
pushf
ljmp
lahf
aas
incb
push
ja
xchg
nop
mov
outsl
repz
jmp
mov
ds
sbb
int
std
repnz
test
sbb
test
jg
adc
fdivrl
xchg
push
stc
mov
adc
xor
fs
xor
xchg
push
pop
jmp
out
in
fmuls
stc
xchg
jp
mov
iret
test
jmp
pop
jg,pt
cmp
xchg
imul
loop
mov
and
into
lods
jns
repz
lahf
mov
mov
xchg
sbb
jmp
stc
call
shll
ljmp
lret
aas
je
rorl
aam
xchg
idivl
and
repnz
bound
in
jmp
in
inc
insb
int3
dec
daa
push
jns
movsb
pop
jns
xchg
popf
adcl
pop
xchg
jns
xchg
push
xchg
addb
jp
pop
sub
xchg
push
pop
in
adc
mov
sub
fnstenv
xchg
mov
mov
or
out
icebp
lds
add
lahf
push
mov
scas
sbb
fmul
sub
jg
fwait
mov
cltd
sbb
scas
mov
in
repz
xchg
imul
mov
cmp
xchg
dec
mov
mov
push
pop
jo
push
call
mov
fistpll
aas
add
and
dec
mov
adc
or
out
lahf
pop
loope
lret
push
inc
imul
movsl
push
loopne
sbb
out
lock
mov
jle
jmp
loopne
adc
andl
cld
cmc
dec
adc
clc
sub
in
push
pop
lods
ja
test
and
mov
jns
in
mov
mov
cs
adc
in
jmp
pushf
cmp
das
sub
pop
jle
mov
out
addb
xor
out
inc
es
scas
mov
mov
mov
stos
cwtl
sbbb
imul
xor
jmp
mov
scas
xor
in
sub
nop
xchg
jle
adc
cmp
adc
aas
push
push
xor
xchg
das
movsl
push
subl
lret
repz
mov
stc
sbb
push
xchg
lahf
test
lret
lret
jnp
and
aad
or
sub
jle
mov
or
adc
dec
imul
jle
repnz
sahf
pop
repz
cs
lahf
aas
mov
cmpsl
loop
cmpsl
push
xor
ret
cld
stc
repz
ret
push
imul
jno
add
fnclex
popw
sub
pop
sarl
out
xor
inc
repz
fldcw
sti
sar
in
jg
cld
stc
add
or
je
and
lret
iret
lahf
aas
sbb
incb
test
sar
mov
repnz
xchg
pop
cmp
adc
add
cli
outsl
cmp
fbstp
jge
inc
xchg
xchg
push
pop
jns
jge
arpl
mov
push
call
pop
push
cs
insl
mov
ja
repz
addr16
sub
imul
jg
shlb
add
repnz
pop
loop
push
add
repnz
pop
pop
adc
fwait
push
pushf
je
out
push
testb
mov
aaa
scas
data16
popa
or
fmuls
icebp
lret
ds
inc
xchg
scas
sub
mov
mov
sahf
and
shll
dec
testb
sbbb
in
sub
pushf
lea
xchg
sbbb
mov
das
xor
xchg
and
clc
in
push
and
xchg
dec
mov
jg
cld
ds
cmpl
repz
mov
mov
out
lahf
cmp
xchg
dec
jmp
jbe
inc
ret
jmp
pusha
lahf
sub
cld
cld
xchg
clc
lock
fstpl
pop
lds
lods
and
lret
out
ucomiss
cmp
mov
mov
loope
xor
pop
stc
repz
mov
idivl
xorb
cld
data16
fisubrl
xchg
mov
repz
lahf
sbb
repnz
rol
add
stc
sbb
pop
adc
lahf
repz
and
in
pop
xchg
iret
lahf
aas
dec
clc
repz
adc
push
jns
inc
ljmp
add
shl
or
fwait
pop
add
in
shll
add
stos
dec
lret
out
lahf
inc
sahf
sti
stos
mulb
dec
es
jns
repz
push
call
into
clc
scas
pop
jns
xchg
test
push
push
ja
mov
mov
mov
sbb
mov
adc
lret
les
jns
and
lahf
xchg
sub
push
mov
jne
lahf
aas
inc
fimull
mov
sub
and
xchg
into
rorl
cld
stc
repz
divb
xchg
mov
pusha
iret
lahf
aas
jg
add
xor
jb
aas
fincstp
inc
cld
stc
repz
stc
cltd
jb
test
cmp
xor
xchg
aam
xchg
sub
shl
ljmp
fmulp
cmp
cld
stc
rep
xor
movsl
xor
lds
jg,pt
xchg
mov
adc
xor
fiadds
repnz
sub
lahf
aas
jg
pop
or
enter
xchg
jl
dec
lock
out
bound
call
cld
stc
add
shl
outsl
mov
push
loop
mov
pop
jg,pt
lods
loope
mov
xchg
push
fisubrs
mov
inc
pop
inc
and
divl
push
cmp
mov
scas
int
pop
jns
xchg
lcall
and
sub
jns
xchg
push
xor
adc
icebp
test
adc
lea
jae
cmp
mov
xor
iret
mov
xchg
or
jmp
movsl
clc
and
iret
mov
adc
clc
dec
iret
sbb
inc
gs
jecxz
pop
jb
push
jno
dec
jmp
jb
loopw
scas
xlat
inc
mov
cld
stc
arpl
adc
mov
je
out
lahf
aas
cmpsb
sbb
ja
dec
jge
sub
repz
cld
stc
repz
loope
rclb
jg
mov
out
add
mov
fistpl
fs
scas
mov
stos
add
inc
push
and
mov
ret
popa
inc
mov
lcall
cmc
ret
xchg
mov
decb
mov
xchg
aam
ds
xchg
pop
cld
sbb
fisttps
pop
lahf
aas
jg
pop
insl
mov
sub
xchg
jecxz
xchg
iret
ret
repz
loopne
out
fdivr
dec
pusha
mov
cmp
cmp
imul
out
cmp
lahf
cmp
lret
out
scas
mov
ds
push
mov
fists
jns
inc
sub
int3
pop
rcrb
inc
loop
sbb
jecxz
jns
xchg
mov
and
popa
dec
loope
and
scas
bound
iret
cld
rcl
into
mov
lock
movsl
faddl
and
in
xor
mov
jge
in
aas
je
pushf
xchg
bound
or
dec
repnz
inc
pop
fisubrs
xor
mov
mov
out
pop
clc
outsl
cmpsb
inc
sti
inc
sub
rol
add
push
and
pop
mov
movsb
and
mov
cmp
lret
xchg
imul
les
in
push
pop
std
loope
shll
jae
into
or
xchg
xchg
push
pop
jns
inc
xchg
sub
fs
ss
pop
jns
test
inc
es
xchg
fsubs
jge
in
popf
adc
jg
outsb
aad
icebp
leave
data16
enter
and
ljmp
dec
sub
adc
rol
pop
repz
rcrl
mov
stc
stc
inc
lcall
arpl
add
pop
lahf
mov
jg
cld
stc
sahf
and
notl
jp
mov
aas
lret
pushf
mov
stc
repz
dec
push
aaa
inc
in
nopl
testb
cld
push
cmpsl
mov
sub
cld
dec
push
dec
outsl
pusha
push
ds
push
pop
lds
jbe
ds
xchg
inc
insl
mov
repz
in
outsb
push
pop
pop
mov
sub
dec
ja
fdivrp
mov
xchg
sarl
xchg
das
aas
jle
movsl
stos
adc
jb
xchg
mov
lods
rclb
movsb
cmc
cli
in
gs
and
xchg
xchg
les
je
xor
js
cmp
add
orb
imul
xchg
mov
cmpsb
out
loopne
cmp
lods
mov
das
lcall
es
movsl
das
scas
inc
mov
lret
push
cmp
mov
mul
out
xchg
pop
push
mov
mov
mov
mov
jge
outsl
int
jecxz
cld
stc
stc
sbb
out
out
mov
cltd
pop
clc
cmp
iret
lahf
aas
pop
popf
scas
mov
pop
scas
mov
jge
stc
repz
fidivrl
pop
jecxz
dec
icebp
addl
push
outsb
adc
jge
movsb
xor
mov
push
imul
pusha
fistpll
test
push
pop
jns
mov
addb
notb
fsubrs
mov
pop
jns
xchg
jecxz
push
dec
and
jno
pop
push
mov
cmp
cs
aad
cmp
in
dec
orb
call
fimuls
fstl
jo
pop
inc
jg
mov
addr16
ljmp
jno
shll
lahf
shl
cmc
fwait
fwait
jo
rcll
inc
push
fsubrp
add
mov
jne
lods
inc
repnz
rolb
stc
adc
sub
jle
repnz
cmpsb
js
mov
repnz
cvtpi2ps
dec
sub
or
cmpsl
mov
jno
pop
push
fcoms
or
lret
fmuls
jne
add
cli
std
repnz
mov
or
negl
jecxz
lahf
call
ret
xor
into
lahf
pop
cmp
out
mov
xchg
jae
xor
push
mov
ja
mov
outsb
cmp
mov
mov
lahf
aad
enter
dec
scas
mov
fucomp
dec
or
movsb
jnp
sub
div
lret
out
mov
hlt
pushf
sarl
stc
cld
push
cli
sub
cmpsb
fs
adc
sub
xchg
jle
pop
enter
cmpsb
test
out
mov
repz
lahf
ds
dec
sub
test
shll
fstps
mov
pop
pop
adc
mov
loop
cmp
fdivrp
jb
sbb
in
jne
pop
test
push
xchg
loop
mov
sub
jbe
fdivrp
repnz
jne
dec
sub
loopne
iret
sbb
adc
adcl
dec
pushf
pop
pop
clc
pop
dec
mov
mov
lcall
pusha
incl
jg
cld
stc
enter
jmp
xchg
or
iret
lahf
aas
and
aam
mov
pop
stc
repz
add
inc
jae
or
jg
pop
jle
out
sub
and
mov
iret
lahf
stos
push
adc
std
movsb
jns
arpl
popf
ret
mov
outsl
repnz
jle
jg
mov
pop
cmc
jp
fisubrs
or
call
jb
out
fwait
ja
hlt
jg
cld
stc
js
xchg
push
inc
and
adc
or
aas
test
inc
mov
daa
jmp
mov
push
mov
push
fs
xor
mov
or
mov
xor
in
push
add
test
xchg
aas
mov
jge
sbb
jg
mov
sbb
sbbl
lahf
movl
sbb
das
jmp
iret
add
pop
shll
jns
enter
stc
repz
dec
stos
mov
add
and
adc
lods
in
pop
fistpll
aas
test
out
cld
push
or
or
pop
fistps
das
lahf
lods
cwtl
lea
jg
cld
push
dec
mov
dec
lret
pop
in
or
iret
lahf
std
mov
push
sub
lods
jg
cld
stc
push
lret
in
jb
push
out
ret
push
mov
aas
jecxz
jne
scas
cltd
lock
cld
stc
repz
rcl
nop
mov
js
insb
push
les
iret
lahf
aas
jg
cmpsb
ds
aas
mov
sub
repnz
movsl
lret
mov
std
xchg
mov
test
pop
shlb
xlat
lds
mov
div
ljmp
push
jl
pop
int
push
jne
in
push
negb
sbb
ja
lds
pop
jne
add
mov
repz
scas
mov
inc
lock
sub
sbb
push
cmp
daa
leave
addr16
testb
scas
mov
and
push
and
ljmp
sbb
sbb
loopne
or
lret
jecxz
leave
jecxz
add
xor
push
sbb
aaa
daa
test
cli
push
push
lock
or
push
test
bound
fdiv
das
jecxz
jae
mov
dec
pushf
aam
stos
mov
repz
bound
andl
xor
mov
aas
fisttps
jns
in
jo
aad
lret
push
sub
aam
in
push
pop
and
push
mov
pushf
push
sti
jb
hlt
xchg
push
pop
jns
xor
fisttpl
and
or
stc
push
lock
mov
mov
ficoms
mov
or
xor
sub
outsb
xlat
fists
lock
mov
jle
repnz
divl
dec
adc
andl
lahf
aas
aas
and
popf
xchg
pop
dec
stos
mov
and
push
mov
dec
enter
cmp
jg
cld
xor
and
scas
adc
sbb
mov
aas
sbbl
sbb
dec
add
jmp
ret
adc
out
ljmp
and
inc
outsb
pop
jns
lret
mov
je
adc
into
pop
push
popl
mov
iret
cmp
bound
leave
mov
in
mov
or
fs
add
fists
scas
iret
jmp
dec
pop
push
inc
loope
in
dec
outsl
es
add
inc
jae
jae
jb
xchg
aaa
lahf
dec
ds
dec
inc
xor
roll
cmp
adc
dec
out
mov
repnz
stc
repnz
cmp
sbb
repz
mov
jmp
fmull
leave
lahf
pop
dec
out
cmp
andb
std
jle
jae
imul
xchg
mov
stc
sbb
inc
in
dec
and
movsb
mov
lret
lahf
aas
inc
leave
jns
shlb
jmp
jl
inc
outsl
xor
fmul
mov
mov
cld
mov
inc
ds
jp
or
cmp
jns
lahf
push
jle
dec
pop
mov
pusha
jl
xor
ret
ficoms
or
pop
xor
clc
adc
or
fistpll
push
pop
jns
and
fistl
sbb
mov
les
outsb
lea
cmpsl
xchg
sub
in
cltd
clc
in
pusha
jns
jle
scas
repz
out
lahf
and
into
cltd
mov
iret
xor
hlt
adc
das
test
int3
je
dec
pop
shl
xchg
cld
stc
repz
add
add
adc
mov
push
xchg
push
fidivrs
je
cmp
jle
pop
jns
jns
jl
mov
stos
sbb
imul
xchg
xorl
insb
les
test
cmp
cmpsb
jp
or
xchg
push
lods
popa
lret
iret
lahf
aas
scas
cmc
and
mov
bswap
push
shlb
dec
push
das
jae
dec
cli
enter
inc
lahf
fwait
repz
cmc
mov
das
pop
bswap
push
add
cld
stc
repz
sbb
cltd
mov
lods
sub
mov
movsb
int
ds
icebp
fidivrl
iret
lahf
aas
insb
mov
insl
adc
and
lret
neg
rcrb
movsb
mov
cld
movsb
push
inc
push
and
mov
hlt
sbb
mov
jle
mov
stc
repz
enter
sub
jle
mov
sub
stos
mov
aaa
and
mov
out
das
in
scas
fistps
cmp
leave
stc
repnz
leave
jb
fdiv
out
rorb
popf
lret
rcr
loopne
jg
stc
push
jp
sbb
inc
cmp
push
sbb
mov
lods
stos
mov
mov
aas
jg
cld
stos
or
shrl
lods
pop
push
jl
cwtl
lods
and
add
pop
rolb
sub
cwtl
daa
push
mov
orl
xchg
negb
inc
add
lret
outsl
push
pusha
into
fcomip
lods
sub
jle
cld
add
scas
xor
fstps
in
lahf
mov
sub
imul
xchg
push
sbb
mov
xor
loop
pusha
aas
call
sub
icebp
jl
gs
sbb
aam
test
cmp
lods
add
jg
repnz
pop
into
cli
fisttpll
xor
loopne
test
fstpt
test
cmp
repz
movd
cmp
mov
jle
cld
stc
scas
sti
leave
push
pusha
aas
imul
in
mov
sahf
ret
mov
int
jg
xchg
pop
push
dec
jnp
xor
sbb
ret
push
mov
popf
push
repnz
rclb
ja
pushf
or
lahf
jg
addr16
repz
rclb
das
push
adc
sbb
pop
push
in
xor
popa
testb
lret
ljmp
jb
adc
scas
aaa
jecxz
jae
in
lcall
stos
test
inc
jne
out
cld
jns
push
arpl
movntq
iret
and
jg
jmp
gs
cs
pop
jns
arpl
pop
push
jno
stc
aad
test
sub
inc
and
scas
fwait
aas
lock
add
rolb
or
je
add
mov
jae
jg
cld
stc
jmp
sbb
mov
into
xchg
push
repnz
ret
das
aas
daa
push
inc
pop
xchg
daa
scas
lret
in
lret
fidivl
stc
xchg
out
clc
in
aas
jns
cmp
ds
scas
das
pop
jle
cld
xchg
aaa
into
dec
es
mov
lcall
or
std
out
cwtl
mov
in
leave
loope
mov
pop
jae
lret
push
mov
aam
je
dec
es
fsubp
adc
mov
and
mov
xlat
jg
jl
and
pop
lea
cs
mov
lret
add
aas
in
imul
insl
push
aam
xor
stc
repz
mov
adc
test
inc
iret
lahf
aas
jg
stc
or
jne
aaa
xor
test
mov
fsubp
xchg
lods
lahf
and
mov
pop
jns
xchg
imul
call
mov
push
or
enter
jge
pop
out
std
mov
ljmp
in
lea
push
rolb
cmpsl
rorl
iret
aam
xor
aaa
jle
rcll
pop
imul
push
fistl
sbb
lret
xchg
push
sub
jns
adc
cmpsb
test
xor
mov
jg
lcall
out
cli
fdiv
push
xor
lods
and
xchg
popa
es
lahf
hlt
cs
lcall
je
sbb
xchg
pop
aam
cs
xchg
insl
iret
daa
mov
pop
sahf
fs
add
repz
dec
jo
or
xchg
shrb
cld
lods
enter
sbb
and
push
in
xchg
lahf
jnp
jb
gs
in
bnd
lret
pop
jns
xor
xor
mov
xor
push
pop
jns
cmp
push
sbbb
jcxz
cmpsl
pop
jns
xchg
sub
jge
bound
popf
dec
pop
lahf
les
pop
push
roll
out
push
mov
imul
push
pop
inc
repnz
adc
fmull
jg
ja
cmp
jle
or
and
inc
aad
popf
mov
fisubrs
in
mov
mov
scas
jae
sarl
cld
ret
fisubrs
stc
xor
aas
and
push
mov
mov
lahf
mov
scas
inc
dec
imul
jns
enter
rclb
enter
jno
das
xor
mov
mov
leave
push
iret
lahf
aas
aas
pop
jb
aad
xchg
out
mov
mov
clc
repnz
pop
jo
mov
xorb
cld
sarb
dec
outsl
push
sub
loope
jae
ror
das
aas
mov
push
cwtl
sbb
repz
test
scas
mov
pop
int
scas
lahf
js
xor
xor
jp
cmp
jno
or
test
mov
jb
pop
rcll
or
xchg
pop
mov
pop
xchg
fistl
dec
or
xor
scas
dec
notl
jns
push
scas
fsts
jns
fsub
and
inc
cmp
pop
jns
xchg
mov
loop
mov
jns
xchg
push
or
dec
fucomi
add
movsb
xchg
mov
push
pop
ds
sub
lock
push
sbb
fidivrl
pusha
ljmp
fists
inc
and
aaa
mov
jno
sub
das
outsb
inc
cmpsl
aas
dec
push
scas
mov
add
sarl
mov
mov
sbb
add
push
xchg
sub
jp
jno
mov
ja
in
xchg
mov
das
scas
out
jp
cmc
iret
push
bound
adc
jns
adc
out
lahf
aas
test
mov
sbb
inc
push
mov
div
scas
cld
adc
jl
xor
push
iret
lahf
aas
jg
mov
popf
or
ror
lock
push
adc
mov
pop
mov
or
add
push
sbb
fstps
sub
and
push
mov
add
in
xchg
push
dec
test
outsl
cmc
adc
xchg
or
iret
lahf
sub
insl
jle
push
pop
or
cld
stc
repz
cmp
mul
pushw
and
jae
aas
jg
push
or
mov
inc
stc
repz
pushf
and
xchg
das
dec
les
cld
cld
cmp
mov
mov
dec
shrb
push
sub
enter
out
inc
repz
loopne
repnz
push
sahf
fadd
mov
fnstsw
lock
mov
test
mov
jns
hlt
jb
mov
hlt
fldcw
push
pop
fs
pop
jns
xchg
xlat
nop
pop
xor
lret
shl
lret
xchg
push
sbb
in
or
cld
stc
xor
pop
es
mov
in
into
test
sbb
mov
outsb
aam
aas
repz
lahf
les
sti
das
dec
scas
pop
jge
mov
or
outsb
leave
push
sub
adc
repnz
shl
lret
das
sbb
mov
cmp
push
stc
jo
std
pop
jg
scas
mov
repz
push
lahf
int3
test
mov
fbstp
push
jne
xor
aaa
psrlw
mov
sbb
jle
lds
rclb
rolb
cmp
fildll
mov
mov
cli
lods
lcall
into
or
lahf
dec
push
pop
jns
xchg
and
mov
cmc
jp
imul
adc
mov
repnz
pop
mov
push
negb
inc
std
scas
stc
aam
outsb
jecxz
jae
dec
lcall
push
xchg
aas
sub
sbb
repnz
xchg
adc
lret
pushl
add
push
fcmove
mov
push
sbb
aas
pop
punpckhdq
repnz
jge
mov
xchg
jp
into
aas
clc
int3
leave
sbb
repnz
or
test
aas
jg
cld
mov
popa
add
mov
in
jne
fildll
lahf
bound
cld
aas
cmpl
out
iret
push
dec
mov
xchg
mov
mov
pop
cmp
std
filds
and
xchg
ja
ret
stc
fstl
fnsave
jg
pop
pop
in
inc
add
mov
inc
clc
fists
mov
das
repz
dec
outsl
call
pop
or
jle
push
lock
in
jnp
inc
mul
and
mov
ljmp
in
fdivrp
jb
in
pop
mov
sbb
and
scas
mov
adc
fdiv
roll
jbe
in
sub
fidivs
mov
lret
subb
mov
and
mov
iret
pushf
subl
mov
cmc
cmp
repnz
inc
clc
repnz
xchg
scas
addr16
xor
out
mov
stc
repz
pusha
scas
faddl
and
xchg
jnp
lahf
jmp
jg
fcmove
or
pusha
scas
rolb
aas
mov
pop
xor
mov
push
loope
jb
add
lret
add
lret
inc
push
adc
inc
mov
xchg
lret
mov
mov
cmpsb
inc
es
repnz
stos
data16
mov
lret
pop
iret
lahf
aas
mov
add
pop
cmp
sub
stc
repz
push
push
push
loopne
fists
jg
sbb
iret
sub
lahf
push
lret
adc
xchg
iret
jae
lea
xor
pop
inc
sahf
sub
sahf
xor
icebp
in
sti
and
jle
std
xor
adc
mov
or
lahf
aas
jg
pop
and
shll
icebp
repz
shlb
adc
and
mov
dec
sbb
bound
or
mov
ljmp
outsw
into
and
gs
xor
inc
adc
mov
cmpsb
fnstcw
mov
iret
test
decb
mov
std
xorl
mov
sub
or
pop
fcmovne
iret
enter
pushf
jns
xchg
ja
fwait
push
dec
fstl
or
lea
pop
push
mov
daa
push
cbtw
lahf
jb
das
addr16
out
aam
ds
mov
out
data16
lods
inc
mov
out
pop
inc
fcomps
jne
loopne
lods
outsb
stc
repz
mov
mov
sub
lret
repnz
fisttpll
lahf
sub
bswap
sub
xor
stc
in
and
sub
push
int3
push
jge
pop
mov
and
pop
dec
aam
mov
cmp
scas
out
lds
out
insb
push
pop
jns
jns
adc
dec
test
jno
push
push
out
shrb
popf
pop
lahf
aas
iret
hlt
in
sub
shll
lods
hlt
cs
mov
lret
lcall
inc
shr
jb
lods
in
lods
fimuls
iret
aas
test
xchg
dec
sub
mov
jmp
repz
sub
lcall
in
aaa
dec
clc
js
cld
test
idivl
in
push
pop
into
jl
dec
pop
cmp
xchg
push
pop
jns
fldt
sub
je
mov
das
ja
xchg
aas
lahf
decl
push
mov
jmp
ficoms
jecxz
push
jp
mov
fdiv
pop
in
push
fisubrs
clc
inc
push
push
and
xchg
jl
mov
push
pop
jns
lea
out
jge
jno
bound
in
mov
dec
pusha
cmp
jg
pop
or
stos
sahf
sbb
loope
rcrl
adc
in
iret
mov
lods
xor
add
scas
pop
xchg
push
pop
jns
push
lret
shll
in
mov
das
jecxz
pop
jns
icebp
into
dec
xchg
mov
xor
add
and
fnstsw
fstl
mov
xor
pop
sub
aas
dec
jl
lods
out
call
jmp
setb
sbb
mov
push
pop
jns
iret
adc
fwait
icebp
std
xlat
xchg
daa
out
dec
repnz
pop
sbb
leave
jmp
cld
stc
xchg
mov
push
popf
icebp
xchg
mov
sub
jl
jo
cmpsl
orb
orl
sub
cmpsb
gs
xchg
gs
xchg
sub
loopne
into
cld
stc
repz
jns
mov
push
inc
add
notl
add
lahf
aas
jg
cwtl
and
fucomip
mov
mov
out
mov
arpl
mov
movsb
jle
push
lahf
aas
jg
les
or
subl
outsl
jae
or
incb
das
das
adc
sub
aas
aas
out
sbb
add
rcrb
scas
hlt
in
mov
xor
ret
hlt
dec
std
ficomps
mov
xchg
cmpsb
inc
not
loopnew
lahf
jb
stc
repz
test
and
movsl
jge
xchg
sbb
jne
aas
jg
cld
lahf
push
shrl
dec
sbb
and
lahf
movl
sti
and
xchg
iret
xor
pop
jle
jle
sti
in
test
lahf
pop
ret
scas
fildll
repnz
outsl
or
sbb
push
pop
pop
and
leave
lret
mov
adc
sbbl
mov
adc
sbb
adc
mov
xorb
push
scas
jno
add
mov
mov
repnz
cmc
bound
leave
xchg
jl
mov
mov
and
sbb
jge
cmp
call
enter
mov
jns
xchg
stc
rcrb
ret
push
inc
add
in
push
fwait
xor
push
rcr
leave
dec
ja
lcall
sbb
ret
mov
pop
mov
das
fistpll
dec
and
xchg
sub
aas
shr
scas
loop
jecxz
adc
dec
aam
stc
repz
aad
leave
lods
fsts
in
lahf
aas
jg
push
cmp
fadds
or
shl
in
iret
jnp
mov
lea
dec
stc
add
maxps
scas
fidivrs
repz
cld
repnz
or
loopne
scas
cmp
stc
push
pusha
push
outsb
xlat
or
push
push
jbe
arpl
loope
scas
xchg
sub
out
xor
testb
and
ret
mov
loope
repz
lahf
int3
leave
insl
repnz
les
insb
lret
push
jmp
std
repnz
mov
mov
push
sarb
jbe
aaa
jns
xchg
push
and
cmp
xchg
xor
scas
mov
push
pop
push
repnz
mov
outsl
push
cltd
ja
and
push
imul
ja
mov
mov
out
or
or
pop
js
subb
pop
jle
inc
scas
test
in
icebp
mov
repnz
decl
and
fadds
inc
xlat
repnz
inc
rcrl
jmp
sub
push
mov
and
xchg
movsl
push
jge
repnz
xchg
add
fnstsw
nop/reserved
and
repnz
in
loope
jg
lea
std
test
scas
mov
mov
jnp
sub
repnz
ficoml
mov
scas
mov
cmp
cmc
shr
sub
incl
xchg
sub
movsb
mov
push
js
repz
addr16
jnp
adc
ss
push
sti
repnz
jle
mov
pusha
shll
scas
mov
sub
fdivr
add
cmc
aad
imul
andl
xor
jns
sbbb
sub
cmp
gs
add
sub
jae
add
ret
xchg
ja
loop
rorb
imul
in
loop
test
xchg
add
jns
das
jmp
adc
mov
cmp
pushf
into
and
xchg
push
pop
mov
inc
stos
fbld
das
mov
test
and
xchg
scas
mov
icebp
out
rclb
pushf
adc
out
mov
fisubrl
sbbl
repnz
adc
cwtl
das
fstpl
loopne
in
push
pop
jp
jmp
xchg
fstpt
xchg
fucompp
push
mov
pop
and
mov
push
push
lods
cmpsb
repnz
addb
repnz
aas
mov
mov
fcmovu
lret
scas
dec
cs
inc
inc
push
jae
mov
mov
les
xor
repz
jg
sub
or
pop
out
clc
mov
cmp
lret
fsts
or
arpl
scas
mov
push
mov
ss
jne
jge
push
clc
in
sub
xchg
test
push
dec
fdivrl
fwait
push
bound
int
test
fildll
ja
fcomps
sbb
add
push
dec
call
push
pop
jns
in
cmp
jp
je
cld
jge
mul
xchg
and
xchg
int
pop
push
ror
aas
jg
and
addl
lret
out
lahf
inc
jo
ds
or
cmc
mov
hlt
dec
sahf
movsb
incb
jg
jl
andb
add
insb
xchg
loop
cs
ja
jg
mov
pop
call
hlt
mov
out
das
icebp
ret
pop
dec
icebp
xchg
movsl
mov
stc
stc
repz
inc
sbb
sub
push
jl
int
das
aas
and
xor
filds
in
jb
lock
push
jmp
pop
push
mov
ds
sub
add
repz
int
loopne
frndint
push
fdivrl
scas
ret
pop
je
cld
adc
fs
int
lret
pop
aad
lahf
aas
jg
jae
outsl
sbbb
fnstsw
in
inc
bound
shr
lret
push
in
lret
xchg
push
cmp
dec
cmp
aas
xor
add
out
inc
inc
dec
sbb
pop
into
jae
ret
dec
rolb
cmp
xchg
repz
lahf
xor
lret
lods
and
idivl
js
loop,pt
xchg
fisubrs
stos
push
adc
out
in
jnp
cmc
sub
cmp
out
clc
repnz
dec
pop
loop
test
mov
stc
repz
das
test
scas
inc
insb
aad
jae
mov
mov
mov
mov
shll
mov
jno
push
dec
call
popa
clc
in
push
int
clc
mov
mov
cld
into
jecxz
push
mov
inc
cwtl
in
xchg
ja
and
cli
xor
jg
cld
stc
xor
imul
pop
and
add
add
nop
int
add
pop
je
jbe
int3
aas
call
lret
addr16
shlb
in
iret
lahf
sub
inc
inc
xor
std
int
push
pop
jns
push
cs
inc
cmp
jmp
and
pop
jns
xchg
data16
pop
mov
cmp
in
push
orl
cmp
repnz
adc
or
scas
mov
xchg
dec
sub
mov
in
jecxz
imul
repz
cmp
xor
jae
jns
scas
mov
test
mov
pop
add
sub
adc
jmpw
das
out
jle
leave
fbld
aas
jge
push
popa
adc
or
out
sbb
stos
mov
rol
test
lret
mov
jae
sub
dec
pushf
ror
sub
jp
xchg
notl
fimull
in
adc
xchg
cmpl
push
gs
test
js
test
cmp
xchg
mov
daa
stc
repz
pop
stos
inc
loopne
aam
movsl
or
lcall
pop
xchg
cmc
inc
jecxz
sahf
cmp
xchg
mov
jg
xor
inc
iret
in
jmp
mov
das
adc
sbb
insl
imul
repnz
lahf
stos
outsl
mov
jmp
lret
pop
lahf
push
bound
in
adc
sar
inc
add
jg
fstl
stc
inc
arpl
xchg
jns
fucomp
pop
pop
xchg
cmp
lret
xchg
push
mov
popf
pop
mov
out
ror
jno
scas
imul
push
dec
nop
jle
cld
stc
xchg
cmp
xchg
repz
popf
fidivl
jl
mov
pop
pop
das
push
xchg
pop
sbb
lock
cwtl
in
scas
test
sar
stc
mov
jge
mov
mov
xchg
int3
sbb
aas
jg
movsb
loop
xlat
loop
test
lret
mov
xchg
add
fbld
je
mov
sub
rcrl
jno
cld
stc
daa
test
pop
je
cmpsl
jae
in
scas
std
mov
stc
repnz
lahf
mulb
push
pop
dec
mov
cmp
sub
aas
jo
xchg
enter
and
out
lahf
mov
sahf
fwait
mov
jg
cld
stc
mov
insl
outsb
pop
dec
sbb
lods
aaa
scas
repz
das
lret
fnstsw
cld
stc
subl
xchg
sub
in
push
inc
pop
jbe,pt
cmp
mov
xchg
dec
and
sarb
mov
pop
outsb
sbb
scas
repnz
fstps
jmp
shl
out
mov
push
xchg
pop
xor
iret
xlat
push
sbb
sub
xor
pop
push
jns
rcrl
fsubrl
fldl
mov
cmc
sti
xchg
push
or
movq
sbb
and
pop
shll
aam
push
in
push
out
lahf
aas
out
lret
testl
std
repnz
rep
loope
mov
in
or
lret
dec
ficoms
pop
jmp
inc
clc
repnz
sub
or
mov
jae
andl
jmp
dec
add
cmpsb
iret
pop
int3
sbb
jg
mov
shrl
lahf
mov
ja
test
aas
sub
jne
out
decl
jmp
cmp
jb
insl
sub
dec
xchg
pop
test
mov
popf
call
xor
fildll
pop
jns
arpl
in
out
and
out
sti
push
pop
jns
xchg
dec
cmp
fsts
and
inc
mov
ret
in
xchg
push
adc
imul
xor
xchg
push
pop
jns
add
adc
mov
call
jb
add
sarl
fisubs
mov
mov
pop
fisubrs
cmp
push
pop
jle
scas
je
hlt
lods
pop
ds
aad
push
fcoms
repz
sbb
clc
lcall
mov
and
jns
jmp
aas
test
cmp
sub
lret
mov
and
popa
pusha
jge
outsl
jns
pop
shlb
adc
add
cmpsb
lret
xchg
push
pop
outsl
movsb
pushf
stc
mov
clc
std
and
cmc
mov
mov
and
fs
sub
int3
mov
dec
inc
into
int3
enter
in
mov
fldl
jae
mov
mov
mov
mov
enter
pop
imul
in
mov
cmp
or
out
std
subl
lods
and
cmp
iret
pop
movsb
scas
addb
mov
lds
scas
jne
xrelease
dec
fisttpl
ffreep
dec
push
pop
pop
push
rcrb
fiadds
mov
fwait
push
xor
sub
fbld
pop
push
adc
jb
pop
adc
fldl
ret
sub
jne
movsb
das
mov
jbe
inc
cmp
iret
scas
into
lds
mov
cs
clc
in
dec
cmpsl
sub
les
movsb
pop
imul
adc
push
fsubp
xchg
xor
sub
dec
das
sbbb
packsswb
das
xchg
dec
outsb
mov
les
popf
iret
xor
aas
mov
ds
aas
repz
jns
lret
rcrb
aam
dec
lds
fstl
popa
inc
ss
testl
push
pushf
jl
push
or
in
mov
sub
rcrl
jns
xchg
jl
mov
jo
in
movsl
mov
jns
xchg
push
loop
std
mov
lcall
push
pop
cld
lcall
or
pop
jns
in
scas
adc
rorb
cmc
js
adc
mov
dec
pop
leave
pop
into
mov
bound
das
mov
mov
ljmp
sahf
xchg
xor
sbb
lret
mov
scas
pop
les
ljmp
jg
jl
dec
fdivrp
fldenv
repz
mov
pop
pop
loop
and
adc
aas
jg
cld
fucompp
mov
push
jbe
repz
lahf
mov
ror
sbb
jg
cld
stc
or
inc
sbb
int3
insb
in
shll
lret
xchg
ja
dec
inc
aas
fs
push
inc
fwait
jge
stc
xchg
cmc
sarb
lret
sbb
add
adc
or
sbb
mov
cld
stc
repz
cmpsl
mov
adc
jp
fwait
rcrb
and
push
lcall
ds
lahf
jg
mov
ja
pop
jmp
bsf
mul
repz
insl
mov
sbb
mov
lret
mov
sbb
adc
scas
mov
fistpll
data16
inc
pop
int
inc
jle
repnz
sub
fwait
jp
mov
adc
xor
mul
fists
pop
cld
and
fidivrs
notl
jg
mov
stos
out
fisttps
cld
cmovns
nop
iret
jnp
dec
stos
add
pop
sub
or
dec
movsb
lret
lock
repz
jg
das
scas
mov
hlt
inc
shlb
xor
pop
sti
mov
lret
xchg
mov
cld
inc
cs
adc
xor
cs
aas
iret
lret
arpl
repnz
lahf
aas
lcall
push
add
xchg
lea
dec
sbb
stc
repz
xchg
dec
lods
dec
jbe
rcll
js
jno
lahf
mov
repz
cs
inc
aaa
jo
push
inc
rcrl
scas
mov
out
pop
cmpsb
pop
push
add
cli
xchg
cli
repnz
dec
mov
sahf
dec
dec
ret
cld
adc
aaa
jecxz
jle
scas
and
imul
lds
push
scas
cmp
sarb
cld
stc
shrl
push
nop
sub
cwtl
pop
pushf
roll
lret
out
lahf
aas
sub
shll
mov
add
repnz
mov
adc
push
pop
jns
hlt
sub
mov
mov
mov
mov
xor
and
filds
and
fwait
test
cmp
jl
jg
mov
pop
int3
mov
cltd
repz
lahf
cmp
cmc
insl
xchg
subb
cmpl
stc
mov
xor
data16
out
loope
out
lahf
aas
aaa
lods
mov
or
scas
loopne
cld
mov
loope
mov
and
mov
out
shlb
ds
aas
jg
sbb
out
decl
out
jecxz
adc
iret
sub
xchg
loopne
xchg
mov
mov
inc
sbb
xchg
ficoms
mov
stc
scas
cld
stc
xchg
lock
cmpsl
lret
outsb
mov
pop
ljmp
cmp
mov
jns
in
mov
inc
decl
jo
scas
adc
lret
cmpsb
jb
adc
loope
hlt
dec
push
push
cli
xor
iret
push
inc
sbb
jns
repnz
das
cwtl
std
sub
dec
xchg
out
inc
add
push
pop
push
mov
cwtl
jmp
xchg
cmp
std
xor
test
xchg
xor
pop
stos
mov
sbb
mov
cmp
or
jp
pop
imul
pop
inc
sub
cltd
lea
repnz
out
xor
data16
es
cmp
sub
push
das
test
push
sbb
fnstsw
xchg
and
scas
hlt
jns
pop
fbld
or
jle
pop
aas
xchg
stc
xlat
sbb
xchg
pop
inc
dec
in
repnz
ds
mov
lahf
sahf
repnz
iret
add
imulb
jge
insl
int
sub
fsubrl
adc
sub
int
fsubrl
pop
mov
mov
mov
daa
add
adc
cmp
repnz
sysexit
mov
std
fdivrp
icebp
repnz
mov
idivl
test
rcl
and
bound
sub
pusha
ficoms
cmp
out
push
imull
pushl
test
shlb
scas
mov
lahf
scas
fcomps
cmpsb
jo
dec
adc
repnz
dec
xchg
or
dec
js
inc
in
xchg
mov
lahf
adcb
outsl
dec
adcl
scas
cmpsl
stos
fcomps
fdivr
adc
lret
mov
jbe
outsl
push
shll
inc
push
jle
repnz
pop
ljmp
cli
repnz
xchg
pop
adc
fadd
push
jl
mov
jl
inc
ljmp
mov
aaa
jg
repz
jg
imul
mov
scas
dec
out
lahf
aas
test
push
movsb
sub
out
push
push
fsubrp
xchg
lret
nop
xor
and
mov
xchg
das
sbb
in
pop
xor
pusha
fs
push
leave
jns
xchg
push
jmp
stos
xchg
rep
decl
stos
xorb
jns
mov
scas
mov
ja
loope
lods
dec
ror
scas
test
sahf
push
mov
jmp
imul
lahf
jns
scas
jmp
pop
movsl
movsb
sbb
pop
rcrl
mov
push
pop
jns
addl
subb
cld
pop
jns
lret
pop
xchg
mov
in
dec
sbb
fwait
dec
jae
xor
xchg
push
xchg
sti
cmp
push
mov
fcoml
in
push
pop
lahf
aad
push
jecxz
mov
int3
insb
cmp
or
adc
movsl
aad
inc
mov
jnp
in
sbb
mov
aad
xlat
test
fimuls
ljmp
sahf
incb
jb
orb
icebp
or
jg
sbb
pop
stos
stos
lahf
inc
add
sti
repnz
cmp
aam
clc
cmp
cmp
repz
sub
push
enter
xor
jns
movsl
cmp
clc
sbb
mov
jb
xchg
push
sub
or
inc
incb
fmull
std
add
cwtl
fs
and
out
lahf
add
sbb
mov
sbb
cld
stc
pop
sbb
push
mov
sub
shlb
push
push
mov
repnz
xchg
out
jno
dec
inc
push
jl
add
sub
mov
push
fiaddl
cmc
pop
scas
mov
shrl
ljmp
push
das
sahf
sbb
cmpsb
and
sbbb
pop
jns
lret
sti
mov
xchg
mov
pop
add
or
out
pop
outsb
jne
test
xor
les
repnz
pop
pop
fdivl
xor
movsb
cli
in
sub
into
adc
test
xchg
pop
cmp
lahf
pop
cmpl
xchg
pop
jecxz
lods
cmp
lahf
jg
xchg
popaw
mov
hlt
mov
stc
repz
test
shl
xchg
loopne
xchg
or
orb
jg
cld
mov
jnp
jge
cmp
jl
lret
out
lahf
outsl
inc
lahf
lahf
mov
icebp
cli
repnz
in
pop
fdivr
mov
and
jge
or
mov
aas
dec
xlat
mov
test
fcmovnu
pop
mov
xorl
jns
jno
mov
xor
xchg
pop
jns
xchg
rorl
fwait
push
xchg
pop
aas
cmp
xchg
xchg
and
cmp
add
mull
gs
cmp
stos
repnz
mov
pop
sub
mov
mov
jns
sarb
andb
sub
aam
inc
xchg
jmp
leave
stc
repz
mov
jo
xchg
xchg
push
je
mov
mov
sbb
cmp
pop
pop
popa
xadd
mov
jbe
sbb
sbb
into
rcrl
dec
jne
and
pop
insl
stc
repz
add
stos
sbb
sub
pop
aas
jg
cld
mov
and
sahf
flds
push
dec
ds
fsubl
xchg
push
in
lock
pop
fwait
cs
inc
ja
add
sub
mov
jnp
fdivrl
ffreep
ljmp
xchg
dec
sahf
aas
adc
push
in
inc
jmp
jns
pop
sahf
adc
icebp
bnd
pop
jmp
jmp
cmpsl
repz
in
push
xchg
cmc
and
out
repnz
movsl
imulb
and
xor
sarl
enter
mov
ds
shl
dec
jge
stc
repz
daa
or
gs
enter
push
or
call
mov
mov
cltd
scas
adc
pop
jle
insb
push
sub
mov
stc
inc
push
ss
jmp
jo
fnstsw
mov
pop
jbe
sbb
cs
imul
test
jge
in
lahf
aas
jg
and
lock
pop
mov
shrl
jge
lcall
subl
and
movups
fwait
mov
cmpsb
ret
dec
pop
push
xbegin
xstore-rng
cmpsl
inc
lahf
xchg
push
fsubrp
push
or
cwtl
mov
push
pop
jns
jp
loop
inc
mov
push
in
xchg
movl
mov
fistl
out
pop
or
jmp
pushf
sub
add
add
call
movsl
xor
jb
cli
loope
dec
clc
jnp
adc
lret
popa
mov
out
cmp
scas
mov
cs
pop
notb
pop
push
cmpsl
or
out
lret
jo
fdivr
adc
cld
stc
repz
push
xlat
push
mov
mov
push
addr16
lahf
aas
jg
sub
rcl
sbb
shlb
cli
shl
out
repnz
adc
lahf
pop
pushl
scas
aad
lahf
jnp
dec
ljmp
xor
aas
repnz
push
incl
mov
lahf
jg
cli
dec
sbb
xor
fcomps
pop
mov
jmp
repz
jnp
popa
aas
jg
cld
push
inc
pop
rorl
outsb
ljmp
and
stc
pop
lods
xchg
xor
loop
repnz
int3
mov
inc
outsl
sbb
xchg
lock
mov
popf
stos
popa
repnz
and
repz
jmp
xchg
insl
pop
or
jl
cld
lds
stos
out
mov
mov
jg
scas
lret
fwait
mull
ss
xchg
jle
ljmp
fimuls
in
push
iret
lahf
aas
jg
jne
dec
lcall
inc
add
enter
xchg
inc
xchg
xchg
iret
popa
pop
push
cmp
out
rcrb
scas
aad
jnp
cld
stc
repz
lahf
mov
sahf
sbb
hlt
loope
imul
mov
aas
jg
je
aas
test
loop
xor
jb
lret
out
mov
push
cld
push
in
mov
std
adc
mov
aas
push
lret
mov
pop
xor
inc
inc
scas
mov
xchg
sub
loope
pop
and
mov
int3
in
add
scas
mov
mov
cmpsb
push
jecxz
cltd
leave
and
sbbb
sub
loope
scas
cld
stc
repz
stos
inc
jl
call
mov
pop
iret
xchg
ja
jl
mov
jecxz
pop
lahf
adc
ror
aas
lock
sti
into
fs
dec
loope
mov
repz
ror
test
sub
mov
rcrl
stos
sbb
repnz
jno
mov
les
push
xchg
push
push
mov
imul
imul
push
pop
mov
in
pop
mov
scas
mov
lea
sbb
mov
adc
mov
pop
fstps
repnz
mov
xchg
rclb
aas
in
push
mov
add
in
ja
sbb
pop
sbb
clc
push
and
jge
cmpl
je
outsl
sub
mov
clc
int3
sti
pop
nop
pop
iret
jmp
mov
push
out
call
rclb
out
bound
mov
in
dec
dec
lret
outsl
cmp
fucomi
cltd
scas
mov
aaa
dec
inc
xor
mov
mov
xor
out
aas
hlt
clc
pop
enter
xchg
data16
cld
stc
repz
mov
sbb
jp
xlat
mov
cwtl
ret
adc
cmp
pop
fistl
hlt
lret
ret
jmp
popa
repz
outsb
fidivs
inc
xchg
mov
cld
stc
out
mov
es
fldl
scas
adc
into
fwait
push
hlt
in
iret
xor
push
cmpb
xchg
xor
cld
stc
xchg
fwait
cmc
push
lea
mov
lahf
aas
jg
dec
fimuls
cmc
mov
stc
repz
ds
mov
inc
lods
bound
sbb
cmp
pop
jle
cld
push
filds
fnstsw
pop
jns
iret
pop
out
mov
cmp
sbb
test
xchg
push
pop
cmp
fcompl
jns
pop
lock
pop
and
cli
sbb
sbb
in
add
test
mov
into
mov
or
test
aas
mov
out
sahf
cmpsl
xchg
out
xchg
push
sahf
mov
imul
ficomps
ja
das
paddq
jo
nop
pavgw
jmp
pop
jns
fisttpll
mov
adc
js
jp
xor
mov
dec
out
dec
pminub
push
pop
jns
push
cmc
and
pop
mov
xor
sub
sarl
push
adc
add
xlat
xchg
cli
enter
rcrl
movsb
xchg
int3
fdivl
cld
mov
sub
mov
aas
adc
pop
inc
idivb
jg
or
inc
movsb
xchg
dec
lret
jns
das
dec
xorl
loope
in
push
ret
cltd
inc
sub
mov
adc
xchg
push
pop
push
adc
shll
ljmp
pop
mov
stc
xor
or
xor
lret
dec
sbb
lods
and
pop
pop
cld
stc
xlat
sbb
fisubrl
mov
xchg
xchg
js
stos
in
jle
cld
mov
sahf
lret
sbb
cmp
sti
in
ja
cmc
dec
iret
cltd
and
dec
xchg
push
pop
jns
adc
mov
repz
in
scas
in
add
cmp
sub
jns
xchg
push
push
push
int
add
pop
jmp
jnp
sbb
or
scas
pop
mov
lods
sarl
pop
scas
mov
push
ret
icebp
daa
sbb
mov
imul
xor
push
xor
fidivrs
stc
mov
stos
add
aas
sub
jns
xchg
push
sub
dec
outsl
sub
cmp
stc
repz
jge
insl
pop
mov
pusha
mov
fildl
cld
push
jne
mov
mov
xchg
ja
cld
sahf
lods
mull
shll
sti
jb
jns
popa
dec
xchg
mov
mov
negb
scas
and
test
in
imul
mov
mov
push
rclb
jg
jnp
sbb
scas
xor
mov
cld
stc
repz
dec
fs
xchg
cmp
mov
mov
mov
lahf
or
ja
pop
shrb
xchg
mov
cld
fprem
movl
sub
push
pop
jle
or
bound
cwtl
push
out
test
shl
jo
jle
cld
stc
push
ret
imul
scas
icebp
and
pop
xor
imul
push
out
jge
cld
pop
inc
mov
pop
xchg
sub
repnz
push
pop
dec
int
outsb
xor
jbe
adc
jb
outsl
movsb
fs
pop
cmp
les
jns
in
pop
push
push
cltd
lret
sbb
jl
jp
aas
add
push
or
cmp
jns
ljmp
mov
daa
push
cmpl
lret
xchg
push
jne
rolb
icebp
mov
lret
iret
mov
inc
idivl
pop
rorl
aas
ljmp
sbb
mov
dec
sub
ds
xor
aad
xchg
pop
stos
lahf
lahf
shl
cmp
add
push
pop
jns
adc
add
in
in
test
sarl
jns
jg
ds
xchg
das
pop
or
rclb
dec
inc
cld
stc
repz
mov
dec
sarl
mov
lahf
aas
jg
add
fisttpl
cltd
out
cs
iret
pop
test
stc
repz
jns
in
push
insb
jbe
movsb
mov
inc
movsb
xchg
lds
inc
jge
stc
cmpl
repz
and
cld
or
out
arpl
arpl
dec
adc
pop
push
cmpsl
push
pop
jns
push
imul
push
out
jbe
subl
mov
mov
popf
cmp
lods
pop
pop
cld
push
inc
sub
test
out
lock
leave
addl
mov
repz
ss
cld
stc
xor
lods
int3
mov
jo
lahf
aas
jg
pop
jg
push
sbb
icebp
das
aas
aas
rorb
outsl
cmp
inc
jbe
test
dec
dec
test
dec
not
lret
mov
mov
ja
stos
ljmp
out
inc
dec
das
rol
push
pop
xchg
xchg
cmp
repz
add
iret
lahf
aas
jg
pause
mov
xor
lock
out
pop
out
scas
das
repnz
pop
adc
clc
decl
lock
dec
xchg
iret
cmpsl
stc
mov
fistl
stos
out
in
mov
cld
lock
fadds
pop
dec
sbb
sbb
pop
int
and
xorb
jmp
das
test
fists
aad
mov
repnz
dec
incl
xchg
lahf
jmp
imul
dec
outsl
aad
data16
sub
das
fistps
in
nop
dec
pop
ljmp
clc
jge
cmp
aas
ret
cmp
xchg
xchg
ret
push
pop
jnp
mov
loop
jbe
mov
popf
out
or
fsubrp
add
orb
push
pop
jns
push
hlt
fstpt
jb
cld
push
or
xchg
mov
mov
dec
stc
mov
xchg
push
jns
xchg
push
lods
fcomp
ret
and
out
nop
sarb
push
popf
sti
test
jg
lds
pop
in
jp
xor
inc
decl
std
addps
iret
sub
pop
jbe
out
shlb
dec
pop
lret
repnz
xor
mov
push
cmc
xor
aas
mov
andl
pusha
xchg
lret
lds
outsl
and
out
xor
icebp
xchg
ret
outsl
in
into
mov
scas
push
std
inc
repz
pop
add
orb
adc
scas
pop
cmc
jp
pop
sti
loope
mov
dec
sub
adc
das
iret
icebp
in
loope
mov
cmp
lahf
shl
scas
jmp
daa
or
fbstp
aam
pop
les
cmp
mov
mov
aaa
lret
das
aas
rorb
push
sti
jns
dec
sar
out
and
add
psubusb
sahf
adc
cli
sbb
cld
testb
fsubp
imul
adc
rclb
lcall
mov
jle
xchg
aas
mov
push
popa
test
sub
add
inc
out
dec
out
lahf
pop
mov
lea
push
insl
xor
fcomi
dec
jmp
repz
and
popf
sub
loope
adc
iret
lods
lock
lret
mov
fildl
call
in
and
decl
lfs
xor
lret
sub
aam
pop
xchg
mov
leave
push
icebp
fdivrl
xchg
add
call
sub
adcb
pop
outsl
jno
mov
pop
scas
mov
jne
sbb
mov
iret
pop
push
addr16
rorb
fsubp
iret
lahf
pop
xor
cmp
push
jp
sbb
cmc
dec
into
xchg
push
or
sub
stc
cld
cltd
ret
xor
cld
test
mov
mov
scas
mov
xchg
push
fsubrp
push
push
scas
cs
arpl
out
sub
push
pop
jns
lret
test
sbb
test
stc
xchg
hlt
in
jp
sub
out
insl
shl
pop
jle
cld
jno
repz
sbb
bound
ja
cmp
fnstsw
and
std
std
xor
xchg
das
out
incb
fisubl
mov
pop
mov
pop
xor
or
movsb
repz
popa
or
mov
cmp
mov
std
mov
xchg
daa
out
jb
into
xchg
ret
push
pop
fdivrp
inc
getsec
cmp
fstpt
divl
je
scas
mov
mov
sub
iret
pop
loopne
sub
out
jle
test
rcr
das
lahf
js
xchg
xor
stos
cltd
mov
ljmp
cmpsb
cmp
dec
jge
stc
repz
stos
or
xlat
out
dec
mov
stc
mov
lret
inc
scas
jbe
js
pop
scas
dec
sti
jnp
repnz
decl
pop
push
mov
lret
mov
idivl
xchg
sub
sub
mov
aas
mov
fdivrs
das
pop
stc
in
fiaddl
inc
mov
xor
sub
nop
lahf
test
cld
stc
mov
or
xchg
iret
pop
enter
iret
lahf
aas
jg
mov
sbbb
dec
hlt
lret
adc
repz
cmp
dec
jno
xchg
shrb
fldcw
test
pop
jb
hlt
push
out
lahf
aas
push
mov
imul
cli
shlb
test
out
in
lahf
mov
fidivrl
aas
dec
add
mov
rcrl
sarb
push
sub
cmpsb
jbe
cmp
ret
lods
lret
scas
mov
stc
push
in
faddp
aaa
pop
jnp
insl
in
mov
aaa
jae
incl
hlt
push
push
sbb
lret
ja
add
and
or
lret
mov
enter
adc
out
sub
push
xchg
xorb
lds
adc
outsl
loopne
movsb
or
inc
sar
cmp
stc
adc
in
push
cmp
jg
sbb
sub
cmc
cmp
iret
lahf
aas
xorl
popf
cli
std
aaa
push
jl
stc
repz
in
add
sbb
pop
jnp
clc
loopne
sub
jg
insb
mov
jl
inc
lahf
xor
std
iret
mov
xor
call
icebp
lret
out
call
jnp
push
out
inc
mov
pop
xor
xor
mov
push
sbb
push
mov
fsubrl
push
imul
xor
out
aas
test
test
pop
scas
mov
daa
mov
jg
mov
lret
filds
mov
dec
dec
mov
lret
out
pop
xorb
sbb
scas
mov
ds
pushf
rclb
push
loopne
xchg
jle
repnz
in
mov
xchg
sbb
sub
fildll
push
insb
ret
mov
xor
cld
fdivr
shll
lahf
mov
into
enter
mov
dec
push
mov
insl
repz
mov
sub
mov
cld
stc
sahf
outsb
shll
mov
inc
jecxz
xor
xchg
das
lahf
aas
mov
pop
inc
in
rcrl
out
movb
fsubrl
cmp
cld
stc
repz
out
test
mov
mov
sbb
mov
jle
repnz
jmp
sbb
movsb
fsubr
fsub
lret
andps
js
add
sub
out
lahf
inc
pop
std
mov
jo
inc
adc
and
fcoml
pop
ljmp
push
mov
sub
lcall
cli
mov
dec
jmp
jno
fisttpl
and
jns
fs
es
jmp
in
arpl
out
icebp
jno
hlt
clc
pop
add
sub
pop
in
mov
aad
cmpsb
pop
lret
fsubrl
pop
loope
stos
out
xor
push
pop
add
mov
js
out
lahf
ja
inc
stos
adc
cmp
dec
push
cld
stc
mov
iret
adcb
cmpsl
aad
push
jbe
lret
lahf
aas
sub
xor
icebp
cld
xchg
js
mov
sbb
mov
stc
mov
push
in
jmp
shlb
lahf
aas
scas
inc
popa
mov
xchg
stc
repz
outsb
push
cwtl
jb
adc
fistl
jge
xor
dec
popa
jmp
jnp
movsl
add
jns
xchg
and
inc
or
dec
push
lret
test
test
popf
mov
xor
stc
jo,pt
ljmp
xchg
int3
rcl
or
xchg
lahf
aas
jg
loope
or
push
jb
adc
in
mov
xchg
repz
lods
xchg
jmp
xchg
sarl
in
push
mov
shr
ds
push
pop
jo
jge
imul
pop
jns
push
push
push
sbb
xchg
pop
xchg
clc
jnp
lahf
ret
movsl
in
dec
jl
or
rolb
and
test
dec
cld
stc
repz
push
pop
lahf
jne
sub
mov
loope
lahf
aas
jg
jno
loope
popf
mov
jp
flds
in
lret
popf
push
and
dec
sti
data16
xchg
movsb
sub
lahf
gs
loope
pop
xor
cld
stc
repz
fmull
addr16
xor
cmp
lahf
aas
jg
dec
mov
push
pop
pop
push
repz
xor
aaa
mov
mov
jno
repnz
aas
jg
cld
movsb
loope
fisubrs
lcall
add
out
lahf
mov
or
pop
pop
mov
out
test
push
jae
es
test
dec
and
repnz
stc
xchg
out
ficomps
sub
ds
test
mov
jle
ds
jne
subb
push
dec
sbb
iret
lahf
aas
pop
sahf
out
cli
lret
imul
add
in
add
hlt
stos
aas
pop
dec
out
pop
test
mov
push
iret
sub
lods
dec
inc
mov
xlat
shrb
pop
xchg
mov
out
push
mov
or
push
dec
adcl
cmpsb
aaa
push
ror
xchg
push
pop
add
stos
pusha
rol
mov
iret
pop
cmc
adc
push
xor
subl
in
nop
xlat
jle
iret
push
repnz
das
push
pop
jns
clc
pop
jns
aam
sub
and
adc
cmp
cmp
lret
iret
scas
lods
lcall
inc
popa
scas
mov
adc
testl
add
int3
inc
sahf
pop
add
std
aas
pop
imul
fisttpl
gs
test
das
pushf
test
and
jns
test
mov
mov
pop
insb
dec
pop
jns
in
lret
insl
cmc
mov
js
jl
mov
jb
xchg
push
rcrb
rcll
popa
std
add
stos
sahf
test
aas
pushl
mov
cmp
iret
loopne
scas
fsub
pop
insb
lock
xchg
inc
add
pop
pop
jns
mov
stc
int3
aam
mov
test
in
lahf
aas
jle
cmp
inc
les
test
in
mov
sbb
cmpl
loopne
push
leave
sti
mov
jg
mov
imul
test
gs
sbb
sub
xchg
push
pop
jns
inc
jo
or
pop
addb
sbb
lret
stc
mov
loopne
fistl
hlt
sbbl
cmp
jmp
add
xchg
mov
lahf
adc
insl
or
inc
jmp
dec
dec
or
pop
xchg
cmp
iret
jl
fidivrl
add
mov
pop
inc
call
pop
mov
cld
stc
repz
mov
shlb
and
lods
push
popf
ret
pop
jns
pop
adc
fwait
outsl
cmc
rclb
sti
repnz
mov
inc
pop
fildll
cmp
mov
pusha
inc
test
das
add
clc
mov
mov
jb
ret
mov
fdivrp
dec
popl
mov
cli
and
ret
or
sbb
mov
jg
movsl
and
jg
push
adc
mov
iret
das
fisubs
loop
ficompl
dec
mov
mov
push
push
mov
push
repnz
mov
ljmp
xor
push
das
scas
mov
frstor
mov
test
pop
jg,pt
push
jae
iret
loopne
sbbl
jne
bswap
shrl
ret
sbb
mov
dec
jbe
in
push
dec
sbb
je
mov
push
dec
subb
xor
sub
xchg
rorb
loop
cmp
mov
dec
repz
data16
lock
loop
xchg
into
out
movsl
xor
data16
pop
rol
add
inc
jae,pn
arpl
in
push
fnstsw
clc
push
in
ljmp
cwtl
int3
imul
ds
sub
sti
repnz
test
std
orl
cld
dec
cli
adc
repnz
and
fsts
shl
fdivrl
rcrb
aas
jg
jle
or
adc
or
js
cmpsb
in
fadd
push
shl
out
pop
sbb
adc
push
add
pop
jns
imul
pop
loop
out
mov
xchg
push
add
jmp
lods
ret
jge
stc
xor
daa
inc
xor
cld
sti
inc
pop
fisubrs
sbb
into
in
pop
dec
xchg
mov
lods
iret
out
fcmovbe
gs
repnz
mov
stos
xor
dec
xchg
aas
repz
sbb
sbb
pushf
movsb
cli
enter
sti
repnz
fistl
push
das
or
fs
subl
mov
popl
outsb
cmp
repz
imul
cmpsb
test
add
mov
push
xchg
add
xchg
lahf
aas
push
jns
cwtl
mov
jp
cmp
jb
adc
and
test
rcrb
pusha
les
cmp
jl
jl
adcb
movsb
hlt
incl
adc
dec
int3
out
lahf
pop
push
stc
jb
sub
push
add
repz
in
pop
int
push
add
cli
outsb
iret
lahf
aas
jg
addr16
cld
jb,pn
or
cmp
repz
jnp
xchg
inc
shll
pop
mov
dec
push
cmpsb
push
mov
jo
ljmp
pop
cmp
adcl
scas
sti
cltd
xchg
rcrb
fildll
scas
mov
inc
mov
cmpsb
shlb
sbb
jle
sbb
or
sub
xchg
ja
and
push
out
ljmp
mul
pop
test
add
pop
adc
add
in
push
in
adc
fisttpll
pop
push
fisubrs
addr16
adc
lret
xchg
xor
loopne
es
adc
mov
lds
in
push
pop
and
cmp
ljmp
or
js
andl
mov
out
rorb
pushf
pop
or
les
icebp
jg
cld
stc
xchg
int
ljmp
xorb
jmp
cmp
iret
lahf
aas
xchg
jnp
test
pop
and
pop
mov
inc
dec
dec
add
aad
lahf
aas
scas
dec
xchg
jecxz
std
mov
inc
jne
repnz
repz
aas
or
sbb
adc
jmp
jle
cld
sahf
and
fcompp
pushw
mov
lahf
aas
jb
cmp
ret
xchg
dec
mov
icebp
ret
adc
in
ja
aad
aas
lahf
clc
repnz
push
fs
lds
mov
cmc
popa
fucomip
or
out
or
lahf
aas
mov
sbb
fwait
jp
mov
das
or
jl
in
jne
push
cmp
jne
aas
ss
mov
sub
scas
sub
pop
sbb
lret
ficomps
aam
xchg
pop
mov
sbb
orl
repnz
bound
and
test
aaa
mov
sti
addr16
hlt
pop
sbb
xor
sbb
sbb
adc
fs
pop
mov
jecxz
mov
adc
lock
jle
xchg
pop
out
out
mov
frstor
sub
ljmp
sbb
adc
ds
push
enter
cmpb
incb
jle
in
ss
jg
pop
and
test
iret
std
ss
mov
sub
cmpsb
stc
mov
cld
mov
add
inc
dec
push
aas
xchg
xchg
repz
lahf
jo
or
icebp
push
cld
stc
dec
sub
jle
mov
into
and
iret
lahf
aas
loopne
fs
ljmp
rep
pop
add
pop
rcrb
or
popa
push
sbb
lahf
aas
jg
push
sbb
xchg
fsub
cmp
in
and
test
loop
mov
push
pop
pop
jns
adc
das
mov
ja
lods
jl
adc
loope
fisttps
add
jns
out
dec
jmp
scas
lock
mov
jae
mov
sbb
int
repnz
js
into
pop
dec
hlt
pusha
pop
js
pop
in
idiv
adc
aad
pop
xor
or
dec
adc
mov
mov
sub
aad
mov
imul
push
pop
jbe
call
sbb
lahf
aas
jg
lcall
ret
push
dec
addr16
jmp
in
xor
test
dec
add
xchg
cmc
lret
adc
scas
es
sti
dec
lcall
insl
cld
or
out
or
mov
lret
sub
mov
cmovo
add
incb
iret
lahf
pop
ljmp
and
inc
mov
repnz
in
adc
js
iret
push
sahf
dec
add
xchg
xchg
repnz
pushf
sub
sub
or
fs
mul
lret
mov
addr16
cmp
pop
cld
fnclex
cld
ret
jno
push
sahf
imul
mov
or
sbb
pop
fidivrs
and
fisubl
ss
xchg
ja
mov
or
test
pop
mov
and
pop
in
adc
pop
jns
sbb
or
push
fwait
xor
pop
jns
in
add
sbb
jl
push
add
xor
mov
cmpsb
xchg
lcall
in
jne
imul
adc
icebp
aad
pop
sub
lret
xchg
push
dec
cmovo
push
mov
jae
fbld
ret
sarl
ljmp
push
jg
in
adc
mov
and
pop
push
addr16
xchg
ret
in
mov
cmp
stos
cli
cld
xor
or
push
jo
sbb
cmp
adc
lahf
aas
aas
push
jle
cltd
mov
repz
sbbl
or
pop
sub
jle
popl
jb
push
sbb
insl
fsubs
clc
repnz
outsb
sub
nop
js
repz
rclb
add
leave
or
push
mov
dec
push
scas
ds
xchg
insb
out
iret
lahf
aas
aaa
add
sarl
cld
stc
repz
push
pop
jnp
fidivrl
addr16
cmp
mov
dec
mov
movsb
jmp
incb
iret
lahf
jns
sbb
cmp
xchg
pushf
push
pop
dec
fidivrl
cld
stc
inc
inc
dec
dec
sub
and
mov
iret
lahf
aas
or
stos
sub
jg
in
cld
stc
repz
pop
push
inc
lcall
jbe
gs
out
decb
jne
imul
mov
jg
or
jo
das
or
dec
and
loope
iret
lahf
aas
inc
pusha
xlat
cld
inc
repnz
outsb
cs
jl
stc
repz
xchg
mov
sub
stc
pop
call
lret
or
add
cmp
xchg
xorb
adc
out
jbe
aaa
imul
daa
in
pusha
add
jg
dec
outsb
xchg
cmpsl
jns
xchg
xlat
xchg
inc
xor
mov
dec
jl
adc
pop
into
pop
div
repnz
jmp
cmp
jbe
jnp
xchg
sub
mov
mov
push
stos
aas
mov
jle
and
mov
and
out
lahf
leave
sbb
js
xor
mov
push
loop
sub
incl
sbb
loope
sub
popa
test
lea
out
and
mov
xchg
iret
sbb
repz
test
scas
movl
jb
mov
mov
in
das
stc
js
add
mov
xchg
cmp
jb
push
int
imul
outsl
loope
jp
mov
cmp
cltd
es
sbb
jg
cld
ret
stos
lcall
repz
mov
mov
dec
clts
mov
outsb
pop
push
jmp
mov
fucomp
pop
xchg
inc
xchg
cmp
xor
repnz
das
lods
xlat
xchg
test
in
out
pop
insb
sti
jbe
pop
xchg
sti
call
or
in
push
fdivrp
repnz
sbb
mov
or
sahf
jmp
jg
pop
and
mov
repz
aaa
mov
fildl
and
aas
jg
cld
push
ljmp
xor
jns
cmp
es
lahf
cltd
cmp
cli
scas
xchg
std
sub
es
mov
repnz
push
dec
mov
push
lahf
aas
jg
data16
andb
xor
xchg
jo
lret
mov
dec
xor
test
test
jle
les
cli
in
addr16
std
jecxz
jns
dec
xchg
jg
cld
subl
or
out
lahf
aas
push
sub
adc
lods
das
in
mov
in
aam
push
repz
shl
int3
mov
and
insl
lods
mov
outsl
xchg
sub
push
loop
mov
sub
jg
adc
push
push
jmp
ror
lahf
fwait
mov
jo
jp
out
inc
sub
out
lret
sub
bound
cld
stc
repz
mov
std
xor
clc
out
sti
into
fistpll
jbe
lahf
aas
jg
sub
jns
fnstcw
push
add
in
mov
scas
dec
enter
adc
repz
scas
push
std
jns
xchg
push
fsub
test
cwtl
sub
jge
xchg
push
pop
sbb
add
sbb
cmpsl
push
scas
arpl
mov
mov
adc
cld
xor
add
xchg
ja
jae
in
out
dec
xor
int
xchg
pop
push
les
dec
sub
lret
pop
std
jb
push
insb
jl
popf
or
xor
sbb
dec
aaa
push
ja
loop
push
into
cwtl
sbb
adc
mov
stc
jg
pop
fdivrp
in
notb
icebp
repnz
pushl
std
loop
das
ja
adc
xor
jmp
push
push
push
pop
sub
xchg
push
pop
jns
cmp
xor
add
sub
mov
pop
cmp
inc
test
push
in
mov
push
pop
gs
das
lcall
jns
xchg
pop
or
mov
mov
in
ja
mov
in
or
lret
inc
std
mulb
inc
ja
js
xchg
push
pop
jns
iret
sarb
pop
imul
stos
bound
jmp
xlat
jae
ret
add
repz
dec
int
mov
xchg
sbb
stc
cmp
jmp
mov
inc
cltd
sbb
push
jmp
mov
mov
mov
in
ja
adcl
sbb
mov
xchg
push
pop
or
icebp
adc
stos
lcall
jl
mov
cmpsl
mov
cmp
jle
jecxz
hlt
add
xor
mov
ss
ds
or
pop
jns
movsb
add
lahf
xchg
cmp
pop
jns
xchg
aas
aad
sub
inc
divl
jp
rolb
ret
fimuls
jge
fisubs
das
jbe
xchg
push
fdivrp
jg
cmpsl
repz
rclb
je
cmpsb
jb
mov
enter
or
aas
mov
iret
mov
or
repnz
stc
repz
icebp
mov
mov
movhps
inc
cmc
inc
pop
jle
push
sub
sub
enter
mov
lret
out
adc
jge
fsub
xchg
ja
sub
cs
xor
sub
jnp
sub
fists
adc
fidivs
push
jge
call
and
cmpsl
mov
lea
and
mov
jo
jg
inc
lock
jg
cld
mov
stos
adc
leave
cwtl
sbb
in
ja
imul
fnsave
lret
xchg
push
pop
push
fdivr
lods
jge
push
lahf
or
mov
jns
add
push
dec
icebp
movzbl
test
xchg
hlt
in
loope
xchg
cmpsb
icebp
cmp
adc
pop
jns
arpl
pop
test
idivl
in
xchg
dec
popf
inc
or
lods
ja
imul
out
jle
sti
xchg
push
pop
mov
mov
xchg
test
sub
add
mov
in
mov
xchg
ret
mov
cmp
xchg
jne
aas
dec
xchg
sahf
ret
das
movsl
pop
ds
aaa
mov
adc
aas
fdivrs
int3
mov
sbb
ret
mov
das
scas
push
cmpsl
sarl
es
repz
sahf
test
inc
add
xchg
sti
mov
pushf
sbb
pusha
mov
in
test
scas
mov
jmp
mov
iret
jns
repnz
jg
lods
mov
fs
outsl
jno
jns
pop
scas
inc
aaa
fdivl
test
push
popl
pusha
and
dec
pop
pop
add
xchg
mov
lret
xchg
ja
jnp
cmp
cmc
sbb
popa
pop
jns
fildll
dec
lea
andb
lds
add
aam
cld
fcompl
add
and
xchg
setnp
sti
aad
pop
out
push
stc
add
xchg
mov
ja
rolb
das
aas
jg
scas
mov
sbb
or
lahf
out
iret
lahf
mov
jbe
movsb
sbb
stc
repz
ficompl
je
mov
in
lahf
aas
jg
pop
loope
jl
sbb
cmpsb
sbb
cld
stc
repz
insl
cmp
rclb
andb
mov
aas
jg
xchg
les
shrb
adc
repz
mov
lea
and
loop
jg
cld
mov
loop
sti
sub
sti
mov
dec
icebp
dec
xchg
push
div
enter
fucomi
fs
lds
sti
dec
sub
sbb
ljmp
repnz
jecxz
inc
and
dec
mov
nop
pusha
icebp
js
xchg
sub
ret
xor
lea
pusha
outsb
shrb
stc
repz
sbb
mov
and
fimull
and
repz
divl
or
je
jne
mov
mov
cmpsb
out
dec
out
xor
in
ja
sti
add
jle
mov
xor
pop
lret
push
cmp
icebp
cmp
push
fdivrp
jnp
test
xchg
sub
pop
pushf
add
jg,pt
dec
cs
aam
cmp
cmp
xchg
gs
lret
shlb
scas
lea
cld
or
repz
push
jmp
in
adc
fs
outsl
push
fmuls
mov
mov
add
add
outsl
into
aaa
pavgw
sbb
cs
fsubr
cmpsl
andb
test
or
out
cmp
cmpsl
testl
mov
mov
cmp
mov
iret
lahf
aas
mov
and
jne
loope
cltd
outsl
pop
jl
test
sub
jnp
imul
xor
mov
out
aas
jg
pop
mov
xor
dec
shlb
repz
sbb
lea
jge
push
pop
push
cld
into
inc
xchg
or
es
sbb
mov
ljmp
sub
movsl
fbstp
int3
in
fcomp
mov
test
scas
mov
leave
jb
bound
stc
xor
decb
test
add
mov
mov
adc
push
inc
or
push
in
push
fisubrs
mov
ror
test
xchg
push
pop
jns
mov
inc
cld
loope
cld
repnz
repnz
lret
ljmp
push
repz
scas
mov
scas
sbb
movsl
lret
fs
jmp
or
mov
je
jl
add
setae
popl
data16
cld
sti
std
outsl
xchg
inc
sub
loop
aam
lahf
aas
jg
jle
sbb
enter
cltd
jns
cwtl
test
mov
fbld
jecxz
inc
std
call
push
daa
pop
cmp
fiadds
pop
add
mov
xor
add
sub
or
popa
sub
or
repnz
add
cli
mov
cmp
fists
mov
out
and
popf
mov
js
test
sbb
das
jns
xchg
push
orb
fildll
in
push
pop
arpl
push
inc
aam
mov
out
or
jb
movsl
sarl
mov
push
aas
leave
mov
sbb
xor
lret
sub
loope
cli
cmp
in
xchg
sub
jns
mov
int
and
or
mov
dec
push
mov
pop
cltd
mov
sub
sub
fidivrs
and
aad
cld
pushf
movsb
stos
dec
xorl
inc
jnp
cmpsl
lcall
and
add
stos
mov
sarl
push
push
ret
dec
sbb
cld
add
sub
lahf
lret
fsubrp
mov
xchg
in
lahf
aas
clc
inc
mov
sub
cli
ljmp
loopne
dec
mov
in
orl
cmp
out
daa
adc
pop
jns
xchg
adc
rcrb
sbb
pop
lahf
pop
push
pop
popa
sub
jo
and
inc
loope
iret
push
out
pop
sub
cld
repnz
repz
mov
orb
mov
pop
jle
cmpsl
or
jnp
xor
jp
stos
es
fistpll
xor
nop
jle
jae
stc
scas
mov
ja
cmpsl
out
loop
pop
add
icebp
loop
in
enter
sbb
imul
xchg
test
testl
sbb
pop
jle
lahf
pop
lret
lahf
aas
jg
mov
jge
mov
cmpsb
push
jle
rol
loop
sbb
inc
push
imul
das
scas
mov
lret
out
mov
mov
movsb
or
les
add
std
xchg
xor
ficoml
jmp
or
cmc
in
mov
lcall
pusha
jl
stc
mov
lods
pop
mov
xchg
mov
ds
out
roll
cwtl
xadd
fdivs
lock
lret
loopne
aaa
mov
sahf
and
cld
stc
xorl
fucom
hlt
shll
adc
loope
icebp
mov
in
lahf
aas
mov
xor
jbe
cli
jmp
inc
lea
and
icebp
sbb
scas
xchg
pop
movsl
cli
addl
cs
aas
inc
cmp
pushf
pop
mov
cmp
xchg
ficomps
pop
dec
xchg
iret
pop
xor
mov
sub
into
dec
loopne
cwtl
lods
shr
mov
repnz
loopne
decl
dec
sbb
add
adc
fdivrs
ljmp
inc
add
call
jb
repnz
add
scas
out
cmc
rcrl
sub
mov
dec
dec
add
bnd
jecxz
pusha
cmp
sub
aas
enter
mulb
xor
xor
repnz
arpl
pop
inc
and
xor
cmp
xor
repnz
js
xor
sbb
jae
repnz
cmp
xchg
aas
aas
mov
push
mov
pop
shll
loop
lods
insl
rcr
repz
pop
or
and
dec
sbb
enter
stc
stos
cld
ja
ret
fs
inc
adc
and
or
dec
push
lahf
push
in
mov
jnp
fldcw
push
mov
pop
jnp,pt
xlat
cmp
jmp
adc
clc
hlt
imul
subl
jle
addr16
and
fwait
in
push
push
nop
cmpsl
lds
jmp
add
aaa
push
mov
mov
and
daa
or
ds
ficompl
jg
cld
stc
dec
repnz
repz
mov
adc
lea
inc
mov
or
dec
add
mov
mov
movsl
in
add
mov
mov
ja
pop
out
call
xchg
inc
mov
lahf
lods
mov
xchg
inc
mov
push
dec
into
sti
sti
sti
repnz
xor
xchg
or
mov
fs
lahf
lret
mov
or
dec
mov
lods
cmpsl
sub
push
fs
jae
lods
mov
push
dec
adc
push
les
int
jg
sbb
lret
sub
shr
outsl
mov
jp
repz
aam
inc
adc
imul
jb
xchg
fsubs
ret
push
sub
mov
iret
mov
push
movsb
adc
pop
or
mov
inc
negl
pop
jecxz
push
jae
sahf
ficompl
mov
rcr
syscall
rclb
mov
xor
push
jge
or
jno
aas
jg
mov
data16
pop
sub
pusha
cmpsl
mov
loop
sbb
cmp
es
nop
lock
pushaw
lods
dec
mov
cs
aas
js
adc
repnz
out
nop
jle
test
lret
cld
stc
jne
loopne
ret
mov
sarb
out
lahf
aas
mov
pop
daa
lea
cld
stc
repz
out
sub
push
xchg
xchg
push
fsubrp
notl
popa
dec
jmp
sub
add
add
add
imul
pop
mov
cld
stc
mov
dec
push
cld
sbb
pusha
sub
lahf
aas
jg
cmp
mov
imul
movsb
repz
add
sub
push
xchg
cld
stc
mov
jmp
aam
or
xchg
aas
incl
and
cmp
inc
jp
out
lret
mov
xor
pop
imul
fists
stc
mov
lret
gs
xchg
mov
pop
subl
adc
sub
pop
mov
jns
lods
out
ljmp
mov
mov
loop
cmpsl
xchg
push
pop
jns
inc
iret
in
and
xor
rolb
jns
xchg
fwait
imul
in
es
xor
jns
xchg
push
xchg
mov
or
shl
aam
push
pop
shrl
sti
xor
mov
mov
xor
subb
outsb
pop
jmp
shrl
cmp
jns
xchg
ja
sub
pop
cld
shrb
dec
pop
sbb
or
ret
pop
xchg
or
ficomps
push
lret
cvtps2pi
adc
mov
iret
ret
into
lds
pop
xchg
adc
std
repnz
xor
rorb
mov
jns
xchg
push
mov
fidivl
mov
dec
int3
loop
das
push
pop
and
push
xchg
mov
jns
xchg
xor
and
repnz
iret
mov
or
adc
in
lds
daa
inc
cli
cmp
jg
mov
into
pop
inc
push
mov
daa
repz
sbbb
insb
test
pop
insl
inc
in
push
pop
cmpsb
int
loope
out
adc
or
push
pop
jns
sub
sub
cltd
jnp
loope
aas
push
pop
jns
jb
loopne
mov
pop
pop
push
mov
cmp
xchg
lcall
insb
jle
repz
std
repnz
jle
pop
out
out
and
idivl
cmp
cld
adc
mov
cmp
repnz
sbb
fs
jmp
xchg
loop
das
jg
cld
ds
fstps
pop
jp
loope
cmp
dec
push
add
mul
fs
pop
jle
mov
aas
mov
aam
in
ja
or
xchg
mov
push
fidivrs
and
scas
push
in
insl
fldl
pop
pop
pop
jns
in
sahf
mov
xchg
sub
push
decl
pop
imulb
cmp
out
cmp
mov
pop
pop
nop
scas
call
mov
mov
scas
adcb
test
ja
mov
in
repz
iret
mov
pop
lods
inc
data16
cld
stc
repz
adcl
lods
ljmp
xchg
mov
in
pop
out
mov
iret
lahf
aas
dec
push
ljmp
cmp
test
cmp
sti
fmul
dec
xchg
push
pop
jns
xor
int
cmp
fiadds
push
pop
jns
and
dec
fidivs
xor
xor
add
xchg
xchg
pop
or
enterw
out
pop
mov
ds
mov
mov
test
jns
adc
and
jg
xchg
fstl
pop
insl
rorb
push
pop
jns
int3
inc
out
iret
and
inc
push
ss
lock
xchg
test
add
add
out
xchg
pop
adc
push
jno
add
jle
sti
repnz
xlat
das
xchg
pop
outsl
sbb
stc
adc
jne
repz
test
mov
subb
or
insl
sarb
xchg
aas
mov
inc
dec
das
adc
cmp
ficomps
das
or
sub
lahf
aas
aas
ret
mov
mov
aad
gs
xchg
iret
adc
sub
dec
sub
sub
pop
add
mov
clc
repnz
lds
pop
ret
lahf
aas
jg
xchg
inc
pushl
cmp
in
iret
sahf
or
sbb
sbb
cvtps2pi
jg
outsb
fcmovne
sub
xor
cli
push
inc
pop
rorb
pop
in
push
fdivrp
idivl
xor
dec
xor
sbb
pop
jge
outsl
out
jmp
push
cli
outsb
mov
jns
jne
unpcklps
repz
mov
lock
xor
jns
popf
jle
sti
mov
dec
stc
push
das
lret
xchg
push
pop
push
push
pushf
leave
or
or
pop
mov
push
xorb
mov
xor
mov
fstps
pop
jns
lret
adc
pop
pop
cmp
jg
adc
mov
add
loop
mov
xchg
xchg
push
mov
sbb
push
mov
das
ja
mov
sti
pop
adc
subl
aas
nop
mov
ss
icebp
push
pop
sbb
cltd
test
dec
add
in
cs
and
or
mov
jae
mov
fbstp
orb
mov
in
pop
in
das
push
mov
mov
jmp
ret
repz
lret
cli
fcmovb
mov
inc
sub
repnz
movsb
jl
mov
nop
dec
repz
lahf
pop
movsl
call
dec
js
into
push
jle
cld
stc
mov
inc
je
mov
mov
mov
out
pop
mov
shlb
and
std
pop
jp
call
pop
mov
sarl
dec
fwait
sub
lret
lahf
aas
mov
packssdw
enter
jl
in
jl
lret
cltd
lahf
inc
ret
cmp
mov
loopne
jne
idivl
fisubs
repz
add
aad
xchg
repnz
xor
insb
repz
sbb
daa
fwait
mov
cld
stc
sbb
add
xor
jnp
imul
fwait
in
mov
jne
pop
lret
mov
mov
orl
cmp
lahf
aas
jg
mov
jg
idivl
cli
sub
sub
aam
iret
xor
inc
out
inc
scas
sub
stc
repz
sub
inc
mov
cld
popa
dec
mov
lahf
aas
jg
mov
fwait
xor
sub
and
out
lcall
xchg
shlb
js
sub
mov
fs
decb
dec
sarl
sub
in
push
pop
les
sub
mov
or
mov
scas
cmovno
cmp
add
push
mov
fmuls
adc
icebp
out
pop
fstpl
ret
cmp
lock
xchg
ja
loope
and
adc
ljmp
repnz
xchg
and
sub
jle
aad
push
str
dec
jnp
mov
out
mov
cmp
sub
lret
repnz
dec
sahf
inc
xor
sbb
push
dec
pop
jle
repnz
add
fldl
push
iret
lahf
pop
sbb
fcmovnbe
mov
repz
push
fsubr
stc
pop
mov
out
adc
mov
jge
push
adc
cs
arpl
and
xchg
mov
ljmp
cs
ja
loop
pop
dec
pop
jns
cmp
push
mov
dec
xchg
dec
cld
xchg
ja
pop
inc
mov
inc
popl
fs
mov
or
je
sub
cld
out
cwtl
push
lock
and
sbb
in
or
lea
xorb
sub
push
in
dec
lock
scas
mov
cmpsl
cmp
jp
pop
ss
xor
lea
lods
pop
mov
mulb
jno
test
data16
cli
shrl
jnp
pop
imul
xor
sub
scas
xchg
lahf
aas
jg
sahf
sbbb
xchg
rorb
imul
jo
sub
push
jmp
or
inc
push
out
mov
push
in
test
lret
xor
dec
out
or
sub
xchg
push
pop
stc
jbe
enter
jmp
pushf
adc
or
pop
pop
jns
out
inc
sti
mov
sub
mov
gs
pop
lods
jl,pn
cld
inc
fimuls
or
ja
in
cld
push
mov
push
flds
es
lahf
aas
jg
lahf
fdivrl
out
add
andb
cld
stc
repz
into
cmpsb
xchg
mov
imul
jp
xor
aas
jg
iret
in
jle
adc
sbb
pop
mov
mov
outsb
sub
adc
pop
movsl
adc
sub
cli
jl
jo
pop
jns
mov
jno
stos
adc
add
xor
push
in
loopne
cmp
in
ja
fidivrs
fildl
dec
xor
iret
mov
mov
cs
lds
movsl
push
rol
lret
dec
lret
shll
repz
scas
in
jb
sti
xchg
into
add
mul
lahf
cmp
xor
outsl
and
pop
add
mov
push
inc
mov
clc
in
movsb
pop
lods
lret
mov
call
iret
popl
inc
daa
jle
sub
repz
inc
call
insb
xchg
lea
out
jns,pt
mov
xchg
sbb
pop
jae
loopne
sub
aaa
scas
xchg
aas
and
out
mov
lret
adc
mov
into
aas
add
stc
test
notb
push
adc
in
iret
popf
mov
xor
dec
pop
inc
shll
jg
inc
dec
fildll
jmp
popf
scas
mov
lret
jge
inc
fmul
out
imul
mov
mov
frstor
aaa
or
out
dec
clc
sti
pop
fsubrp
jg
push
iret
mov
sub
imul
jnp
mov
mov
ror
jmp
enter
cmp
mov
mov
out
movsb
sbb
scas
mov
xchg
sub
cwtl
icebp
cmp
mov
mov
mov
aas
aad
add
mov
clc
mov
sub
ja
or
sbb
jle
push
stc
mov
or
fbld
jns
daa
or
das
fists
add
decb
stc
mov
ret
add
incb
ficompl
mov
xor
mov
call
sbb
loope
mov
bound
push
std
jb
das
je
cmp
loop
dec
xchg
push
fimuls
adc
jo
jp
shl
nop
sbb
aas
mov
ret
mov
pop
pusha
xchg
ret
in
inc
sahf
push
adc
into
decb
in
pop
lcall
mov
inc
ja
out
mov
pop
jg
fisubrs
mov
jg
cld
stc
fwait
test
rorl
das
lcall
das
lahf
aas
xor
shll
mov
xchg
sahf
ds
mov
mov
adc
mov
or
fildll
scas
mov
cwtl
flds
xchg
add
cmp
scas
scas
stc
add
das
into
shlb
aas
jg
cld
pxor
adc
stc
lea
cli
jno
repz
lahf
fmulp
stc
in
popa
fsubs
rcrl
inc
inc
lods
lret
lahf
aas
jg
jne
shl
xlat
outsb
lds
lods
mov
jnp
push
push
cld
in
das
add
jmp
in
sub
ret
cwtl
fidivs
pop
cld
cld
cltd
cli
push
cmpsl
lahf
les
xchg
lea
sub
mov
inc
lret
test
mov
cmc
push
inc
lahf
divl
aaa
jp
dec
repnz
lret
sub
rcrl
pop
insb
clc
jle
jle
fisttpl
add
and
jg,pt
cld
stc
jb
fisttpll
sbb
xor
inc
mov
sub
stc
repz
mov
loopne
mov
shl
enter
jg
cld
adc
ds
lahf
mov
jae
fcoms
lods
pop
mov
out
sbb
mov
xchg
push
sub
mov
insb
and
add
cmp
ret
jle
jge
cmp
mul
cmc
sahf
rolb
dec
mov
call
es
pop
jns
hlt
sarb
add
xor
xor
sub
jg
test
push
adc
iret
lahf
aas
jg
pop
addb
sub
movsl
mov
pop
loope
cli
adc
ds
mov
jg
pop
orl
seto
scas
incl
iret
push
pop
jns
imul
push
xchg
mov
data16
jno
ljmp
xlat
dec
pop
adc
mov
out
xorb
into
mov
fcoml
ret
or
fistpll
lret
mov
dec
mov
xlat
jnp
scas
mov
xor
push
mov
inc
inc
cli
repnz
dec
adc
lods
pushf
add
inc
sarl
rcll
push
mov
ret
aas
pop
lods
adc
push
dec
push
push
jp
pop
ljmp
pop
xor
lds
rclb
enter
or
mov
jg
cld
push
movsl
inc
sahf
lods
inc
mov
and
test
int3
scas
fstp
xchg
lahf
stc
push
notl
jbe
jo
jno
addr16
std
jb
cmp
sbb
or
jg
fimuls
imul
outsl
imul
loopne
pop
jle
or
adc
jle
adcl
dec
fsubrp
mov
iret
lahf
aas
out
mov
cmpb
jge
faddp
pop
jmp
mov
mov
call
mov
scas
or
jge
enter
sbb
and
int3
mov
mov
in
fs
ret
push
jo
sahf
mov
mov
xorl
inc
cmp
dec
lcall
jg
push
cmpb
leave
push
mov
repz
nop
ret
rcrb
das
sub
xor
frstor
mov
sar
minps
imul
cld
jae
repz
xor
outsl
push
mov
add
sbb
iret
pop
mov
in
jp
cld
stc
repz
dec
les
mov
out
jns
cmp
stos
xorb
jg
pop
clc
scas
xchg
inc
mov
stos
pusha
test
mov
ss
dec
cmpsl
cli
repnz
in
lods
rorb
mov
lahf
jg
decb
insb
rcrl
jns
stc
repz
addr16
iret
sub
pop
int3
fwait
mov
repz
adc
call
out
nop
jecxz
dec
out
dec
sub
std
mov
push
scas
mov
pop
lock
push
aas
push
dec
dec
loopne
sub
in
cmp
dec
sbb
jp
add
xchg
mov
xchg
in
into
idivl
xorl
or
scas
andl
in
xchg
ja
sti
cmpsb
mov
clc
jae
in
pop
lock
aas
push
mov
sub
out
or
nop
pop
ret
mov
jmp
push
fnstenv
jno
sti
mov
test
mov
jg
ja
mov
pop
push
add
fnstsw
and
std
mov
out
lahf
cltd
stc
and
cmp
mov
mov
mov
push
shrl
nop
aad
in
ja
pop
aad
xchg
mov
jae
jno
cmpsb
pop
pop
lods
leave
adc
insl
push
iret
lahf
pop
push
out
mov
ja
jle
lret
lret
ljmp
js
fldt
scas
mov
pop
cltd
out
sbb
xor
in
pop
in
fsubp
xchg
cmp
and
nop
cmpsb
mov
lds
test
cmp
andnps
and
pop
cmc
test
repz
outsl
movsl
mov
cmp
inc
pop
out
scas
or
rorl
repnz
fistpl
adc
test
leave
or
out
lret
sub
aad
leave
mov
jns
sub
mov
xchg
clc
adc
jle
repnz
add
flds
pop
sub
sbb
cmp
jo
lea
repnz
mov
xor
push
js
out
sbb
mov
jmp
pop
jns
in
scas
xchg
das
lcall
clc
pop
testb
in
push
xchg
aaa
and
or
stc
orl
mov
cld
add
cld
scas
pop
pop
mov
fnstcw
ds
xchg
shr
push
hlt
mov
pop
pop
pop
stos
ja
into
dec
out
mov
fdivr
repz
pushw
inc
popa
lds
repnz
or
push
sub
scas
sub
pop
sbb
cmc
fstpt
xchg
inc
dec
pop
jle
out
or
jp
lret
mov
inc
bnd
lods
pop
dec
scas
mov
xchg
cmpxchg
pop
outsl
jb
jno
add
mov
sub
or
mov
es
insb
lret
mov
fcoms
mov
cld
into
loopne
jmp
inc
int3
ljmp
dec
lahf
fdivrs
inc
sarb
push
pop
jns
test
dec
aad
jb
cmp
dec
jge
in
test
dec
push
or
ds
cmpsl
xchg
xor
or
lea
and
test
mov
dec
jecxz
cld
mov
ret
aas
outsl
mov
jbe
stos
push
testl
xor
jmp
in
push
pop
or
pop
cltd
and
std
daa
adc
andb
lret
out
mov
cmp
idivl
outsl
cwtl
mov
inc
fisttpll
cmp
shl
lret
ljmp
outsl
test
mov
push
out
es
movsb
push
lret
jns
sti
in
push
pushf
sub
gs
or
movsb
pop
loope
mov
popf
cli
inc
push
sub
repnz
xchg
add
lock
lret
fs
sti
repnz
xor
mov
lret
mov
push
push
add
sti
div
divb
std
adc
cltd
aas
xchg
mov
add
add
xlat
adc
xchg
cld
inc
insl
cmc
addl
adc
in
arpl
fistl
xchg
xchg
in
adc
enter
mov
mov
in
cs
adc
cld
sahf
mov
mov
push
jno
mov
stos
sub
lahf
xor
cmp
in
jp
push
or
dec
sub
incb
fcomip
mov
int3
movsl
cld
std
xor
jne
jg
xchg
pop
aas
jg
and
out
mov
cmp
das
lahf
rorb
out
data16
mov
iret
lahf
aas
ja
loope
jnp
test
test
out
hlt
repnz
inc
jne
inc
das
xchg
aad
mov
jae
jg
push
dec
into
sbb
lret
sbb
lahf
aas
jne
in
xchg
or
imul
lds
push
push
push
pop
jns
pop
test
adc
jp
dec
sbb
mov
in
aam
mov
mov
and
hlt
sub
aaa
sbb
cltd
sub
fists
rcll
shrb
fwait
sahf
pop
push
xor
fs
fisttpll
stc
ds
inc
lods
xchg
push
fdivrp
jmp
pusha
mov
mov
lods
push
push
pop
jns
pop
xchg
das
push
ficompl
lods
divb
jns
xchg
mov
jne
loope
jmp
loope
mov
jns
xchg
push
lods
insb
cmp
mov
gs
in
push
pop
xlat
test
sub
mov
out
jb
rol
mov
outsb
inc
cmp
repz
mov
xchg
fsubs
adc
outsl
mov
bound
mov
adc
rcl
jmp
cld
stc
cmpsl
push
int3
out
test
jo
push
pop
mov
fmull
aas
pop
push
sub
arpl
xor
stc
stc
repz
pop
or
mov
push
fdivrp
in
push
xchg
out
es
pushf
mov
cmc
in
aad
loope
xchg
jmp
cld
addr16
dec
sub
cmc
mov
mov
lret
out
lahf
mov
xchg
push
cld
stc
mov
sbb
call
pushf
in
int
mov
aas
jg
inc
pop
mov
scas
xchg
into
out
in
nop
stc
repz
xor
hlt
cmp
popa
repz
mov
not
inc
pop
adc
jp
jecxz
ljmp
sub
ret
fidivrs
sbbl
xor
dec
das
xor
test
push
stc
sub
ds
cld
fwait
aam
xchg
gs
ja
sub
shll
mov
pop
or
inc
ret
cli
mul
rcl
scas
cmpsl
or
enter
sti
iret
mov
mov
mov
lret
adc
sbb
aad
xlat
into
ds
daa
inc
das
lahf
aas
jg
jnp
repnz
or
fisubrs
adc
fldl
fisttps
cli
mov
in
ja
xlat
sahf
and
pop
mov
std
sti
jge
aam
and
aas
repnz
dec
dec
fwait
lcall
scas
sub
mov
in
arpl
enter
in
cmpl
add
cld
sar
dec
ss
xor
push
fcomps
popa
mov
jmp
xor
ret
loop
add
xchg
mov
fidivrs
bsr
mov
cld
out
loope
call
das
mov
sub
mov
in
iret
lahf
loop
ljmp
cmc
inc
sbb
out
lods
icebp
out
mov
into
ja
pop
fwait
cmpsb
ljmp
mov
out
scas
scas
cmp
cmp
repz
rorb
xor
cld
stc
popf
jp
dec
cmpl
imul
push
pop
mov
pop
dec
xchg
mov
int
aaa
ror
iret
lahf
pop
dec
cli
mov
in
add
clc
xchg
scas
mov
add
lret
push
cmp
mov
repnz
inc
inc
pop
add
fstpt
cmp
mov
lcall
arpl
imul
push
dec
cmc
rorl
stc
stc
jno
add
push
jno
pusha
lahf
stc
rep
ljmp
xor
sub
pop
mov
dec
mov
loope
daa
dec
xchg
nop
mov
in
ljmp
push
lahf
aas
jg
ds
repz
mov
cltd
xor
xor
jecxz
out
stos
mov
dec
lods
scas
jg
pop
jns
xchg
push
ret
ljmp
das
ja
aas
out
stc
sub
das
add
ljmp
sub
dec
cmp
cld
stc
xchg
mov
xlat
mov
jg
rcll
in
or
inc
sti
push
in
cmp
in
xor
or
or
pop
mov
imul
sarl
cs
and
inc
out
in
xchg
push
iret
lahf
pop
dec
mov
dec
fcoml
int3
add
subb
push
mov
mov
fldln2
stos
mov
pop
std
sub
jle
test
pop
add
cmp
mov
div
inc
fs
out
sub
aas
add
fs
in
push
pop
cld
fmuls
sub
stc
daa
icebp
aaa
outsl
jne
xor
aas
sub
adc
enter
fcomi
es
sub
fists
bound
xor
add
mov
jg,pt
lock
jae
hlt
stos
lret
cmp
xorb
or
fimuls
cmovle
lret
sub
pop
or
cmpsb
push
push
dec
jmp
mov
outsl
out
in
sub
into
sar
sahf
sub
pop
adc
xlat
xchg
lahf
aas
rcr
push
add
push
add
dec
scas
mov
std
leave
out
push
cmp
inc
cmc
adc
mov
xchg
push
fidivrs
and
adc
test
mov
shlb
es
test
in
in
out
cs
js
nop
sbb
pop
push
addr16
idiv
sti
sub
inc
pop
rolb
out
pushf
inc
push
popw
pop
jns
repnz
sbb
mov
sbb
hlt
in
ja
jae
inc
push
jle
lock
repnz
mov
lahf
dec
js
sbb
lret
aas
ss
cmp
dec
stc
aaa
mov
add
dec
sbb
xor
xor
xchg
push
jle
sti
mov
es
jno
cmp
mov
adc
jle
cltd
add
lea
push
lcall
scas
data16
daa
add
mov
ja
scas
mov
fldl
idiv
movsb
repnz
inc
sbb
js
mov
add
add
and
jl
dec
add
pusha
leave
lret
sahf
icebp
push
mov
les
popf
sbb
in
hlt
lds
inc
popf
leave
adc
xchg
ja
xor
xor
fdivrp
retw
loopne
in
push
pop
pop
inc
leave
mov
cmp
das
push
pop
jns
cmpb
enter
xchg
cmc
mov
les
out
mov
cld
stc
repz
cmp
jg
xchg
push
rcrl
mov
in
stos
into
ljmp
pop
mov
cmp
das
stos
jbe
aas
jg
adc
iret
test
xchg
push
setge
push
fimull
inc
aaa
arpl
lds
or
sub
in
std
or
movsl
sbb
lea
lret
lcall
out
sub
stc
repz
js
sbb
test
mov
mov
hlt
insb
and
xor
dec
rclb
repnz
scas
and
xchg
in
pushf
mov
push
or
repnz
stc
mov
pop
fidivrl
rcrb
push
push
mov
scas
aad
xchg
les
push
mov
loopne
shll
out
in
sub
std
sub
pop
sub
sub
insl
aas
call
jge
into
pop
int
push
cmpsb
scas
add
andl
daa
ror
hlt
clc
dec
push
xchg
iret
lods
sbbl
popa
bnd
repnz
inc
lods
mov
movsb
loop
fdivl
sub
sbb
ds
lret
out
lods
push
add
loope
nop
pop
jge
cmpsl
movsb
and
orl
xchg
shrb
repnz
rep
into
imul
add
repnz
xor
cmp
sbb
sbb
jns
cmpsb
cmp
lahf
cmp
mov
fldcw
popf
pop
lcall
aas
fadds
lret
xchg
sub
and
and
jg
outsb
push
adc
divb
jge
add
stc
add
mov
repz
and
jp
cmp
cmp
stc
repz
bound
or
mov
cmp
pop
loop,pt
js
add
jno
add
mov
dec
mov
xchg
xchg
aas
cs
addr16
dec
scas
mov
cmpsl
mov
xor
test
ds
mov
lret
mov
jmp
sub
push
stc
sahf
insl
cmp
cmpsl
sbb
sub
inc
sbb
pop
shr
movsb
xchg
cli
insb
mov
out
or
mov
mov
push
movsb
out
dec
imul
xchg
pop
ds
subl
aaa
push
sub
sbb
lds
test
nop
icebp
outsl
lcall
insb
or
es
enter
push
mov
out
push
lock
lods
into
or
ror
arpl
leave
cmpsl
loope
pop
mov
and
rcrb
imul
pop
add
leave
iret
lahf
jge
imul
lret
std
dec
mov
mov
xchg
iret
lahf
aas
cmp
and
scas
or
ja
es
lahf
aas
jnp
adc
mov
jle
jbe
mov
test
cmp
and
repz
adc
push
sub
insl
xchg
fstpl
jns
cltd
jle
es
and
lahf
pop
cmp
adc
imul
pop
jg
aas
add
lret
adc
jle
and
mov
aam
lahf
aas
jo
dec
mov
in
xlat
jmp
lahf
aas
mov
std
mov
movsb
je
das
mov
adcb
mov
lahf
pop
sbb
jns
fistl
pop
subl
out
bound
stc
and
mov
jp
cmp
psraw
lock
lret
mov
lret
scas
inc
stc
dec
adc
repnz
xor
in
add
sub
cld
pop
dec
sub
in
pop
decb
pop
or
and
push
sub
mov
cmp
test
lock
dec
sbb
cld
add
inc
aaa
scas
dec
xchg
mov
iret
lahf
sub
cltd
mov
and
aad
test
ficomps
das
movb
pop
sub
std
xor
mov
inc
xchg
push
pop
jns
inc
popf
push
push
pop
popa
or
ret
add
pusha
and
mov
jecxz
hlt
jge
clc
mov
popf
es
lahf
rcrl
jle
jmp
pop
mov
dec
or
cmp
repnz
jmp
int3
shl
mov
imul
fisubs
add
sub
fdivr
add
in
stos
jl
jl
addr16
dec
sub
iret
insb
out
sbb
loopne
ret
jns
ljmp
popa
mov
push
jle
cltd
into
in
cmc
insl
dec
pop
aas
adc
pop
lahf
out
add
mov
mov
decb
push
sbb
xchg
nop
jl
mov
push
cmc
push
pop
imul
lret
xor
iret
xchg
aas
push
scas
test
jg
sbb
into
repz
rorb
aam
inc
add
loope
stc
stc
ja
mov
int3
mov
inc
and
cs
mov
sbb
out
filds
mov
les
dec
add
pushf
stc
xchg
lcall
sbb
in
and
out
test
test
dec
cmc
mov
lds
addr16
mov
add
ss
fbld
xor
mov
jmp
int3
adc
xchg
jmp
mov
repnz
into
setns
pop
xor
sahf
repnz
xor
mov
push
fdivrp
add
mov
call
dec
sub
shrb
cld
jb
and
adc
int3
xor
cmp
dec
mov
add
popa
mov
jno
and
xchg
cmpb
es
add
xor
ret
clc
and
jnp
mov
movsl
xchg
pop
mov
fiadds
push
push
jle
cld
stc
adc
js
aam
pop
out
scas
mov
xor
pop
jo
add
es
xchg
pop
xor
mov
iret
imul
sti
jne
fistpl
les
stos
mov
jg
xorl
mov
lret
sbb
fwait
test
adc
mov
scas
mov
cmp
jmp
cld
lahf
inc
out
mov
inc
ja
out
sub
bnd
std
gs
arpl
add
lahf
xor
sub
inc
cltd
fldln2
and
fistl
nop
pop
cmpsb
add
popa
push
aaa
sti
lret
aas
mov
test
cmp
dec
enter
push
inc
mov
in
aas
rol
adc
xor
xor
fldl
cmp
push
outsb
push
and
xchg
ja
scas
mov
xor
or
ret
pop
js
cmp
nop
push
ficoml
incl
dec
jp
push
in
or
lcall
lock
add
add
int
add
cld
stc
cmpl
mov
adc
lret
add
div
out
add
pop
in
aas
xchg
and
jnp
sbb
and
cltd
lahf
stos
adc
into
add
ja
ds
cs
mov
push
shrb
jg
cld
stc
aaa
mov
mov
pop
pop
jg,pt
add
cmp
jg
les
jg
cwtl
push
mov
mov
rorl
mov
pop
out
out
clc
lods
les
mov
das
xor
in
xor
push
pop
xchg
addb
push
call
andl
pop
aas
das
in
mov
dec
js
sbb
pushf
repnz
sbb
les
mov
outsl
jle
and
ds
lods
icebp
lds
push
mov
das
ja
jl
mov
jecxz
cmp
sub
or
arpl
aas
sbb
leave
add
jp
ret
andb
iret
lahf
jg
sbbb
daa
dec
or
stos
jecxz
leave
out
sar
outsb
sbb
mov
inc
jmp
jmp
aas
aas
add
cld
sub
xchg
jb
mov
scas
mov
loopne
cld
mov
pop
inc
into
cmpsl
sbb
dec
aas
fwait
les
repnz
or
fucomip
daa
adc
out
aas
movsb
sbb
sarb
or
cld
stc
repz
ja,pt
lret
mov
mov
mov
mov
mov
dec
ja
pop
jns
jle
sub
cmpsl
jp
and
mov
pop
jge
xor
das
hlt
cmp
mov
stc
repz
dec
in
cltd
flds
sbb
jp
popa
lods
aas
jg
cld
dec
cmp
cmc
mov
cmp
push
lock
mov
and
movsb
mov
xor
push
in
lcall
xor
sbb
outsl
and
pusha
scas
push
and
lods
in
mov
lret
pushf
fcmovbe
mov
mov
or
mov
nop
clc
and
and
scas
mov
popa
lods
iretw
mov
jo
test
jmp
inc
je
pop
aaa
rol
mov
lds
pop
mov
cs
push
int
in
xchg
aas
ss
nop
out
push
jg
pushf
cld
inc
andl
mov
pop
mov
pop
iret
jg
mov
stos
cs
outsb
xor
xchg
aas
push
push
pop
sub
cld
stc
test
in
add
sub
and
xor
and
in
dec
sub
jno
jns
add
lret
js
adcl
repnz
aas
push
lret
lahf
lods
jge
daa
mov
mov
in
in
sub
xchg
dec
dec
out
test
jo
mov
clc
aas
pusha
jne,pn
ljmp
out
xchg
mov
out
dec
pop
sbb
pop
cld
cwtl
clc
jge
and
cmpb
xor
adc
jns
gs
xchg
leave
mov
test
dec
mov
stc
adc
sbb
or
imul
lahf
inc
addr16
icebp
cltd
and
push
push
ds
cmpl
ljmp
jb
ljmp
push
arpl
jmp
aas
jg
scas
cltd
xchg
mov
shlb
sbb
pop
push
pop
inc
jge
inc
iret
cld
stc
adc
cld
and
nopl
movsl
xchg
mov
xlat
xchg
pop
jns
fnsave
adc
test
fstp
xchg
push
cmp
sbb
ja
jg
push
daa
mov
xchg
cli
sbb
aas
jmp
xchg
sar
pusha
outsl
dec
testb
iret
ror
mov
add
out
bound
scas
sarl
in
cld
xchg
aas
mov
jbe
popa
push
jo
cmp
or
xor
repz
pop
ss
insl
js
repnz
xor
xor
pop
scas
mov
pop
jno
sbb
push
mov
xchg
lods
lret
dec
hlt
dec
push
js
or
dec
dec
call
jg
cld
adc
mov
test
shl
aas
pop
orb
clc
ja
cmpsl
fdivrp
test
mov
and
repnz
sub
aas
jg
dec
dec
cld
pop
xchg
lock
cmp
mov
cli
enter
cs
pop
jecxz
sti
push
mov
aas
adc
pushf
jecxz,pt
cmpsb
daa
jge
rcl
pop
push
fs
jl
test
ds
push
sti
mov
cld
push
add
mov
std
inc
arpl
insb
stc
add
pop
dec
mov
xor
das
pop
mov
lahf
psubsb
out
adc
das
xor
jg
adc
aas
cmpsl
xchg
sbbb
aaa
lods
lret
inc
add
mov
adc
out
or
sbb
pop
shr
arpl
cld
stc
repz
and
lea
mov
mov
pop
cmp
mov
das
or
cld
and
in
mov
lds
jo
mov
test
jge
add
stc
repz
std
sub
jle
mov
pop
clc
nop
sarb
lcall
jge
mov
hlt
push
or
movsl
pop
jp
and
xor
mov
adc
xchg
lahf
aas
cmp
sub
push
xor
stos
fidivrs
and
neg
seta
xlat
jb
xchg
push
in
loopne
ret
call
lret
xor
shlb
ret
jle
imul
popf
ret
adc
lret
scas
adc
xchg
mov
iret
std
add
out
sbb
sbb
stc
pop
frstor
mov
and
adc
frstor
outsl
movsl
cli
das
ss
pop
jns
add
or
xlat
push
movsb
sti
movsb
xchg
cmpsb
mov
out
fildll
out
lea
jb
mov
icebp
loopne
mov
shrb
lahf
push
cmp
push
mov
shll
arpl
lods
repnz
add
cmp
mov
scas
shl
dec
or
imul
xor
je
push
sbb
out
sub
cld
stc
mov
dec
jle
pop
push
fs
aas
jg
push
push
cmp
cs
or
add
push
lahf
mov
iret
inc
push
je
jmp
test
mov
sahf
xlat
ficomps
out
dec
and
mov
addl
pop
sbb
out
test
xchg
mov
push
dec
int3
fcomip
cld
cld
add
aas
add
out
pushl
insb
sbb
push
incb
mov
ret
idiv
repz
dec
es
adc
cmpsb
push
cltd
sbb
jnp
out
dec
fbld
repz
pop
add
data16
test
mov
cmp
mov
fists
arpl
push
ja
or
pop
lret
push
pop
jns
stos
ja
pop
cmc
sub
iret
shlb
das
leave
sahf
call
cmp
sbb
fisttps
cmc
leave
xchg
outsb
or
or
sub
lret
iret
call
xchg
mov
sbb
enter
jp
jno
in
mov
dec
loope
xlat
lock
filds
clc
inc
loop
dec
scas
mov
hlt
xchg
add
cmpsb
sub
sub
add
and
rclb
jno
jle
dec
mov
nop
sub
fldt
mov
test
xchg
push
mov
xor
mov
mov
movsl
inc
imul
jg
fs
pop
xor
imul
iret
lahf
aas
outsb
pop
jp
jp
xor
orl
repnz
mov
jne
pop
loopne
xchg
clc
in
insl
lock
and
fstl
icebp
repnz
jns,pn
mov
cld
sti
xchg
subb
jg
lods
ds
xchg
mov
das
push
pop
jge
loopne
adc
mov
ret
mov
aas
jmp
pop
mov
mov
mov
ret
repz
lahf
lock
or
sti
int
xorl
add
in
loop
xor
ljmp
repnz
sub
popf
decl
enter
das
call
cs
fsubrp
xchg
leave
pushf
dec
sbb
inc
addr16
in
xchg
xor
cs
xchg
push
mov
mov
scas
mov
cmp
mov
mov
lods
ret
xchg
mov
repnz
dec
out
jnp
popw
shl
jno
pop
pushf
cmp
lahf
jns
insb
sub
add
cs
lret
push
pop
xor
mov
inc
mov
enter
fdivrl
in
andb
repnz
adc
mov
push
add
insl
psrld
xchg
xchg
sub
clc
pop
dec
in
ja
or
sysexit
jno
pop
cmp
aaa
cld
inc
cld
jb
xchg
sti
ja
sbb
outsl
roll
adc
lret
cmpb
or
hlt
nop
repnz
adcb
mov
mov
stos
rolb
pushf
inc
aas
jg
cld
into
push
int3
xchg
repz
test
test
in
fcomi
out
lahf
jmp
sarb
xor
jns
in
adcl
test
jle
add
mov
sub
std
jb
dec
add
mov
lret
bound
iret
lahf
add
dec
mov
cwtl
fld
repz
add
lods
jns
and
lods
cs
add
adc
and
movsb
out
add
pop
sub
push
icebp
ret
fsubr
inc
add
roll
and
inc
dec
xchg
inc
sbb
xchg
das
hlt
xchg
xlat
xchg
pop
in
int3
jno
iret
lahf
aas
aas
incb
iret
ss
mov
test
repnz
sub
push
cmp
adc
sub
ds
fs
xchg
shlb
add
outsl
mov
shll
rclb
lahf
stos
cltd
fildll
pop
out
push
or
loope
add
stc
sbbl
mov
insl
xor
daa
les
xchg
adc
push
and
daa
lods
lret
inc
outsb
xchg
clc
inc
pop
iret
aas
jecxz
cmp
dec
test
es
pop
mov
dec
sub
mov
push
aas
iret
fwait
test
pop
in
in
pusha
inc
dec
sub
sub
jne
xchg
aas
jmp
mov
data16
jecxz
imul
mov
push
ljmp
in
adc
ret
loopne
sbb
jge
cs
mov
pop
mov
out
icebp
jb
xchg
movsb
push
cmp
insb
cmpsb
test
das
xchg
push
mov
lock
sub
ret
mov
inc
mov
in
popf
xchg
sub
sahf
dec
loopne
cld
into
xchg
loop
out
nop
pop
jns
sub
pushl
lods
jmp
push
dec
xor
insb
cli
rcll
scas
lret
sbb
inc
lahf
std
pop
sti
sarb
mov
mov
cmpsl
cs
adcb
std
out
cld
stc
add
sti
mov
out
cmc
pop
jp
imul
rcr
and
aas
repnz
das
popa
pop
insl
pop
add
lret
das
jp
lret
mov
mov
mov
aam
bound
gs
fdivp
pop
xor
push
pop
gs
jne
ds
sbb
and
call
dec
das
scas
mov
stc
push
out
xchg
sub
scas
sub
pop
jle
push
bnd
pop
push
js
and
cmpsl
fdivrp
mov
xchg
je
sbb
sub
sub
sahf
int
test
aad
inc
aas
test
cmpsl
lock
pop
outsl
sub
cmc
andl
adc
iret
lret
mov
fs
mov
ljmp
repnz
mov
icebp
inc
pop
mov
xor
push
adc
or
mov
and
dec
xadd
in
cmp
cwtl
int
jae
pusha
sub
aas
jg
pop
out
inc
jmp
cmp
mov
lds
jmp
out
lahf
adc
lea
cs
pop
imul
cli
in
in
shl
xchg
into
mov
call
stc
icebp
sarb
stc
flds
xor
adc
pop
scas
cmp
and
scas
dec
sbb
lea
sahf
stos
sbb
mov
insb
dec
jg
dec
cmp
arpl
arpl
decb
orb
pop
push
mov
mov
insb
outsb
pusha
stc
or
in
xchg
ja
insl
adc
sbb
out
cmp
mov
dec
fildll
je
dec
std
dec
and
cltd
inc
push
xor
xor
test
iret
push
xor
hlt
aas
aam
ss
dec
cs
pushf
xchg
aas
mov
cmp
mov
cmpl
les
pushf
cs
mov
aad
aas
jl
iret
das
mov
clc
sub
filds
lret
inc
loope
sbb
jmp
push
push
add
stc
xor
or
insb
outsl
dec
mov
pusha
shlb
inc
push
movsl
stos
mov
and
and
cli
cs
pusha
stc
repz
push
add
cmc
rcrb
fwait
jmp
dec
pop
xchg
das
loope
iret
jle
lds
jle
push
push
ja
repnz
xlat
mov
pushf
ret
fisttps
lds
mov
cs
xor
mov
jecxz
adc
cld
dec
out
lahf
aas
xor
xor
and
ja
ja
cld
stc
repz
dec
jmp
mov
movsl
out
mov
xchg
lahf
jae
dec
ror
icebp
ljmp
add
nop
jb
pop
ds
mov
xchg
push
fsubrp
lcall
hlt
enter
repz
cli
dec
out
rcrb
sbb
xor
cld
stc
fs
shr
pusha
lds
jl
push
out
mov
aas
push
jmp
out
add
cld
stc
orl
inc
bound
popf
add
and
inc
push
pop
jns
sbb
mov
int
out
inc
push
pop
jns
xchg
and
and
sbb
inc
dec
jmp
cltd
add
push
cmp
scas
cltd
lahf
jg
lahf
pop
movsb
sti
iret
mov
pop
xor
lret
ret
icebp
add
imul
mov
jg
jne
lahf
jmp
push
les
sub
iret
lahf
aas
jg
enter
and
add
xchg
inc
stos
filds
aas
add
xchg
pop
fwait
out
push
cmp
push
hlt
ds
iret
lahf
aas
std
movsb
add
leave
movsb
stc
cld
stc
repz
fcomps
mov
or
cmp
jo
pusha
aas
test
push
test
scas
mov
fs
mov
jle
repnz
mov
in
fwait
scas
lahf
test
imul
out
jg
cmp
int
pop
bound
and
mov
lret
push
adc
mov
xchg
pop
pop
sub
sbb
and
dec
mov
jg
cld
pop
pop
int
push
mov
movsb
push
or
sbb
aas
jae
cmpsl
enter
mov
pop
repnz
incb
fcmovne
jg
mov
jae
inc
sbb
jg
fistl
inc
pop
scas
pop
mov
xor
lahf
roll
stos
xchg
push
sbbl
xchg
sub
ja
jp
in
test
cmp
aas
pop
jns
aad
insb
imull
fsubrs
stos
mov
iret
lahf
aas
adc
xor
pop
push
imul
stc
stc
repz
lock
adc
xchg
cmp
hlt
pop
jle
push
outsb
xchg
clc
adc
orb
loopne
insb
mov
mov
stc
repz
pop
mov
add
inc
imul
bound
out
mov
rcrb
inc
push
out
test
xor
repnz
lret
sub
test
lahf
leave
pop
jecxz
movsl
pop
scas
mov
rcll
mov
iret
outsb
fisubl
cmp
push
cld
stc
mov
mov
icebp
or
pop
lret
out
lahf
pop
or
jle
cmp
xchg
aaa
sti
movsb
sub
clc
jp
jo
ja
cwtl
mov
dec
pop
icebp
repnz
jecxz
repnz
jns
fildll
mov
lcall
or
mov
sub
mov
cld
stc
repz
loop
popf
les
imul
repnz
xchg
mov
push
loope
jg
cld
orl
cmp
call
repz
lahf
mov
mov
faddl
add
cld
dec
clc
repnz
mov
dec
dec
pop
adc
aas
jg
pop
xchg
xor
cmp
pop
fs
testl
pusha
pop
or
lock
pop
push
sbbb
jle
cld
nop
sub
mov
mov
fs
clc
mov
scas
subl
cli
in
sub
push
and
xor
jg
cld
adc
adc
out
filds
mov
jno
pop
or
ret
adc
in
pushf
mov
jge
hlt
jg
mov
mov
in
sub
in
pop
dec
nop
push
sub
scas
mov
dec
mov
pop
scas
or
ja
repnz
push
mov
add
xor
pop
push
in
mov
jl
pop
out
scas
lock
push
push
cli
and
xchg
mov
stc
repz
xor
sub
xchg
xchg
iret
lahf
aas
jg
or
lcall
stc
stc
repz
push
or
ficompl
hlt
dec
push
cmp
push
jl
lahf
aas
jg
mov
pop
add
sub
lret
mov
adc
jno
add
filds
pop
ror
lahf
pop
dec
sahf
cmp
sub
scas
jg
cld
stc
repz
add
mov
mov
out
pop
add
addl
lret
push
add
outsb
dec
popf
mov
repnz
sbb
push
pusha
in
in
adc
ret
scas
mov
out
int
jmp
out
pop
rorb
fcomip
mov
das
call
movsl
mov
or
cld
jmp
mov
fwait
dec
add
xchg
xor
jns
sbb
sbb
add
sbbb
cmp
fidivrs
outsb
lahf
pop
inc
das
jb
das
jl
fadds
lahf
adcl
in
repnz
jmp
mov
push
shll
pusha
mov
fcoml
inc
add
xlat
rol
push
add
mov
xchg
jp
in
ret
mov
jmp
iret
das
ds
out
cmp
xchg
mov
sahf
push
btl
jb
in
sub
xchg
mov
cwtl
rcrb
in
ljmp
jge
jnp
fsubp
pop
int3
cld
pushf
fnstcw
xlat
xchg
lahf
aas
fwait
mov
xchg
dec
das
inc
lods
std
leave
mov
ret
std
loope
in
lods
mov
fstpt
stc
stc
test
movsb
aaa
sbb
cld
sbb
cltd
dec
fcoms
loop
sahf
push
imul
out
mov
aas
xor
jle
call
lock
sub
ds
push
pop
iret
lahf
aas
jg
adc
test
rol
pop
xchg
ja
xchg
cld
aas
js
mov
xor
jb
mov
popf
mov
loope
dec
sbb
jg
pop
cmp
mov
fcmovu
gs
jmp
fisubs
aam
stc
outsb
dec
xor
lret
mov
sbb
data16
mov
scas
jne
lock
je
mov
sub
xchg
aas
test
fiadds
push
dec
push
pop
pop
jns
dec
inc
push
icebp
hlt
ljmp
stos
adc
popf
xchg
fdivrp
cld
stc
rep
in
inc
test
mov
shll
fnclex
mov
iret
pop
fildll
jno
jb
adc
and
xchg
loopne
in
cli
lods
jb
iret
push
aaa
je
adc
lcall
int3
flds
in
xchg
xor
lock
in
mov
push
dec
inc
jge
cmp
jns
xchg
push
rclb
sbb
test
xchg
cld
mov
js
xchg
push
pop
sub
in
sbb
mov
bound
mov
pop
jmp
mov
ret
jle
adc
or
dec
mov
in
das
ja
jae
and
mov
aas
bound
sbb
xchg
push
pop
jns
xor
adc
cmpsb
insb
pop
xchg
int3
adc
push
pop
jns
inc
or
lods
sahf
mov
or
imul
cmp
or
and
mov
aas
pop
sbb
enter
mov
inc
xor
sahf
mov
mov
or
mov
aam
into
dec
loope
das
addl
add
std
shlb
sbbb
mov
pop
fdivrp
dec
or
sti
in
inc
xchg
lds
leave
dec
and
and
mov
lret
mov
pop
pop
xor
cld
dec
cli
je
and
inc
jne
sub
xchg
stos
iret
lahf
aas
jg
xchg
cmp
daa
add
sbb
mov
cld
stc
repz
or
jmp
fwait
cwtl
rolb
mov
int3
lahf
das
xor
lret
iret
adc
inc
test
push
jnp
fwait
test
fisttpll
lret
add
das
pop
dec
pop
or
shll
repnz
xchg
xor
push
pop
pop
inc
mov
ds
repz
jno
pop
pop
ds
cmc
out
shlb
cltd
test
adc
xor
pushf
rcrl
xchg
dec
sbb
jl
sbb
jp
push
mov
iret
inc
and
pop
push
mov
sub
das
adc
mov
jmp
hlt
and
insb
mov
add
mov
scas
test
xchg
dec
lds
repnz
neg
rcrb
and
xchg
lds
sbb
lret
mov
and
push
mov
sub
push
setb
add
and
loop
mov
sub
jecxz
cmc
repnz
cs
xchg
push
push
bound
sub
and
xchg
lahf
pop
push
push
push
cmp
aam
sahf
mov
mov
sti
repnz
aam
xchg
mov
pop
das
std
repnz
cli
mov
dec
mov
imul
popa
test
and
cmp
jl
cld
mov
sub
pop
push
pop
jns
lods
dec
inc
push
not
addb
add
in
jecxz
dec
and
pushf
idivl
das
push
pop
lcall
dec
sbb
std
iret
lahf
aas
lcall
repz
ljmp
sub
cld
stc
repz
jmp
scas
mov
mov
fcmovnu
push
jg
sub
lret
lret
cmp
shl
iret
lahf
aas
aad
mov
out
loop
mov
cli
in
lahf
sahf
xor
mov
jg
cld
data16
in
mov
or
das
lea
adc
pop
cltd
adc
mov
lods
popa
cwtl
cli
inc
ds
into
out
push
dec
jecxz
xor
in
sub
fisubrs
aas
data16
popa
cltd
mov
clc
call
jmp
jns
rcll
and
pop
fidivs
lds
inc
decl
pop
outsb
scas
mov
xchg
std
xor
push
loop
stc
icebp
sub
clc
in
sub
xchg
mov
mov
fiaddl
mov
out
out
jg
push
andb
aas
sar
repz
jle
jns
fmulp
jbe
aas
pop
test
shrb
xlat
and
add
xchg
ja
dec
iret
push
sbb
cli
pop
std
push
repnz
lret
iret
xor
dec
mov
test
pushl
xchg
test
xchg
lods
dec
jmp
out
lahf
aas
es
xchg
in
jmp
mov
mov
cld
stc
repz
mov
jge
dec
nop
fildl
add
push
fs
and
stc
repz
enter
push
movsl
mov
repnz
xchg
mov
sub
jg
add
das
cmpb
or
mov
clc
xchg
aas
leave
into
xchg
data16
repz
out
and
out
repz
adc
adc
cmp
cld
stc
push
pop
loope
sub
cmp
and
cld
cwtl
adc
out
mov
push
iret
lahf
aas
jg
inc
sub
fs
addl
lock
out
mov
jne
test
and
cmpsl
js
mov
out
cmp
fsubr
sti
hlt
add
stc
repz
in
in
dec
sbb
or
push
push
push
dec
push
jo
jo
add
jle
cmc
xchg
out
mov
add
scas
jmp
fdivrl
test
mov
out
lahf
aas
mov
dec
jp
cwtl
mov
hlt
repnz
sbb
aas
or
loope
push
cmp
sub
cmp
jle
loop
int3
pushl
cld
stc
xchg
sahf
fisttps
loop
aam
cs
sub
and
call
mov
push
sbb
jg
lahf
testw
sbb
popa
jg
push
pop
jns
je
dec
or
ficompl
aas
push
pop
jns
loop
das
mov
enter
mov
xchg
jmp
push
mov
dec
pop
cld
stc
xchg
out
pop
jg
mov
add
iret
sub
std
cld
stc
xor
sahf
jo
jmp
cmp
mov
mov
test
in
sbb
pop
adc
daa
adc
pop
sub
xchg
dec
xorb
sbb
repz
dec
flds
cmp
pop
outsb
dec
addb
push
popa
icebp
in
jmp
icebp
jo,pt
mov
sti
repnz
xchg
dec
movsb
repz
xchg
lea
ret
icebp
add
xor
clc
mov
pslld
mov
popa
inc
decl
hlt
and
pop
decb
gs
and
js
mov
push
iret
lret
iret
filds
jl
sbb
icebp
pop
add
xchg
loop
mov
mov
push
lret
out
pop
push
cmp
clc
mov
lret
les
aad
mov
xchg
lahf
mov
out
jmp
adc
cmp
xlat
rcr
data16
jno
add
or
dec
push
loopne
dec
or
cld
stc
repz
loope
pushf
test
lcall
mov
sbbl
in
push
mov
pop
outsl
xchg
mov
and
rorb
fwait
call
mov
push
jl
push
dec
ret
out
inc
icebp
dec
mov
iret
lahf
pop
fidivrs
mov
and
push
idivl
dec
loope
repz
rorl
icebp
pop
add
mov
add
test
sbb
out
stc
and
lret
out
inc
and
cld
and
es
sub
inc
push
add
and
aaa
outsl
pop
add
xchg
aas
xlat
xchg
stc
testb
pusha
sti
mov
scas
clc
cmpsl
test
sbb
ljmp
adc
movsb
in
mov
sub
orb
xlat
scas
test
push
mov
incb
iret
jo
xor
mov
cmp
stc
xor
mov
ljmp
mov
jg
cld
inc
mov
xchg
out
loope
in
repnz
jle
cmp
push
or
or
push
iret
repz
fimull
push
sbb
xchg
out
icebp
ret
sbb
push
inc
mov
stos
popa
adc
das
pop
ret
pop
dec
fmul
xchg
ja
ljmp
push
fwait
push
inc
movsb
mov
mov
jno
push
pop
lret
fidivl
ret
adc
lretw
lahf
xor
aas
cs
aas
rorl
inc
sbb
dec
das
cmp
pop
data16
call
push
fisttps
into
cmp
out
scas
insl
fisttps
das
sbbb
push
fsubrp
jl
aam
mov
adc
push
lods
push
pop
jns
push
and
and
out
xchg
cmp
xlat
loopne
xchg
or
arpl
add
add
aas
jg
cld
push
ja
scas
fwait
cmp
xor
pop
mov
decb
jno,pt
push
and
lahf
aas
push
mov
mov
dec
sbb
subb
loope
es
clc
scas
fsubs
nop
scas
mov
fsts
pop
jg
cld
stc
xchg
cmpsb
xchg
movsl
xchg
sub
xlat
out
das
jno
out
out
lahf
aas
mov
inc
js
sub
mov
repz
mov
xor
or
fwait
das
jg
insl
outsb
lea
jecxz
jbe
mov
insb
and
cld
or
fmuls
push
cmp
lods
cld
and
inc
mov
pusha
bnd
das
ja
jmp
mov
jecxz
push
add
iret
mov
mov
add
in
cmovle
leave
fcoml
or
iret
outsl
pop
jle
mov
cltd
lcall
and
hlt
out
pop
loopne
jbe,pt
nop
out
pop
ja
jns
repnz
cwtl
enter
dec
push
jae
pop
lahf
pop
push
pop
shlb
iret
cld
sub
icebp
lret
out
test
test
in
stc
cld
stc
add
jnp
or
iret
arpl
inc
fs
adc
addr16
add
in
add
outsl
push
inc
dec
pop
jg,pt
test
cmp
sub
stc
xchg
dec
sahf
ret
daa
shlb
scas
cld
cld
stc
repz
xchg
or
jmp
lea
pop
ds
lods
in
scas
gs
jb
scas
cli
repnz
jg
sub
arpl
pop
insb
lret
mov
jbe
fucomp
daa
cld
sbb
scas
mov
ret
ljmp
jo
mov
jns
sbb
and
mov
out
pop
and
push
sbb
roll
adc
out
mov
mov
test
xlat
xor
scas
mov
cmp
jge
cwtl
push
and
jns
jg
mov
or
jmp
xchg
push
pop
cmp
rcrl
mov
add
iret
into
or
fdiv
pop
stc
xchg
hlt
enter
jo
mov
or
cld
cltd
shr
and
jge
sahf
adc
iret
test
lahf
iret
push
xchg
cmpsb
jns
adc
xor
repz
fcoms
icebp
mov
or
imul
push
shll
lea
das
lret
outsl
aad
adc
push
aad
xchg
push
repnz
adc
cmc
les
or
mov
mov
pop
in
movsl
in
push
pop
xchg
cmc
rolb
int3
lds
mov
jb
dec
icebp
xchg
mov
stc
jnp
xor
scas
mov
arpl
or
repz
sbb
inc
jl
jle
aas
cltd
shl
sub
scas
in
dec
out
cs
cld
stc
repz
jbe
cmpl
xor
pop
dec
das
jg
imull
and
cmp
pop
out
gs
jecxz
mov
adcb
or
jne
insl
loope
popa
lahf
or
or
outsw
or
jl
mov
scas
mov
outsl
lds
aas
ret
inc
ljmp
mov
scas
ss
cmp
sub
mov
lret
pushf
jae
jmp
cmp
dec
xchg
xchg
sub
and
dec
in
pop
test
in
iret
lahf
add
out
test
stos
std
aaa
rcr
hlt
xchg
out
adc
imul
out
int
rolb
and
aas
jg
mov
mov
lds
add
mov
out
lahf
je
andb
adc
popa
addl
xchg
cld
or
repnz
push
and
cli
xor
and
mov
jae,pt
out
jg
movsl
cmp
in
xchg
dec
mov
push
sbb
push
fdivs
xor
pop
sbb
xchg
push
pop
sti
fisttpll
sub
ret
add
mov
icebp
pop
dec
lock
mov
pushf
arpl
mov
test
mov
repz
das
cmp
fcmovu
mov
or
data16
das
jg
cld
stc
dec
add
dec
cmp
mov
pop
or
iret
lahf
aas
ror
push
adc
or
push
cld
stc
repz
clc
xchg
sti
xchg
fdivs
inc
inc
ss
iret
lahf
aas
jg
addr16
mov
stos
mov
mul
out
cmp
in
and
jne
repnz
push
fidivrs
or
cli
pop
mov
loopne
call
in
add
pop
test
push
cld
stc
repz
sahf
insl
mov
mov
lods
ret
es
pop
sub
jle
outsb
sbb
dec
xor
scas
mov
xchg
insb
das
pop
mov
scas
dec
mov
in
jb
or
cmp
jp
nop
iret
popf
add
push
adc
icebp
lret
aas
cmp
shrb
iret
mov
js
sub
js
jg
sub
pop
mov
scas
mov
sub
or
fisttpll
test
sub
pop
cmpsl
test
xor
out
fsubs
or
out
scas
ficomps
xlat
mov
in
pop
push
jbe
jge
stc
outsl
nop
mov
mov
pop
pop
stc
xor
and
or
out
movsb
mov
sub
xchg
push
pop
pop
sbb
inc
addr16
push
push
in
out
dec
jbe
adc
add
push
or
push
ja
ja
fs
pop
inc
adc
jg
cld
stc
jae
call
ljmp
adc
out
lahf
aas
cli
push
mov
jmp
mov
mov
ljmp
mov
loop
jns
nop
iret
xor
push
in
aas
frstor
adc
in
out
lahf
xchg
push
pop
jns
cmp
ljmp
test
fs
xchg
lcall
push
mov
jns
xchg
push
fidivrs
push
xchg
aaa
out
out
gs
pop
jns
push
pushf
iret
insb
pop
or
stos
pushl
leave
shrb
adc
xchg
scas
mov
push
cltd
or
gs
cli
jb
popf
cmpb
xchg
xchg
cmp
pop
push
sarl
or
dec
shrb
ret
xchg
iret
lahf
mov
mov
inc
jbe
push
psllw
in
rep
arpl
push
leave
std
lock
subl
xchg
jle
xor
mov
ja
stc
push
jecxz
movsb
je
jb
inc
out
test
cwtl
or
iret
mov
xchg
decb
outsb
adc
es
push
pop
aam
in
jmp
ret
lret
mov
mov
iret
lahf
pop
sbb
xlat
add
fstps
repz
inc
cmp
lahf
das
stc
ss
xor
cmp
pushf
pop
lock
out
insb
dec
insl
adc
enter
pop
icebp
call
mov
mov
subl
pop
inc
mov
leave
aas
aas
cmpb
jge
bound
clc
stc
subl
outsl
je
mov
jmp
out
imul
in
push
dec
and
fldenv
int3
jle
scas
arpl
push
mov
push
inc
mov
xchg
lahf
aas
inc
sahf
pop
movsb
pop
xor
ret
iret
shlb
pop
lret
lret
lahf
orb
imul
inc
add
jns
sbb
and
test
dec
pop
jne
push
pop
outsl
sbb
cli
addr16
push
lock
sub
sub
je
lods
into
pop
aad
jns
insb
fildll
pop
mov
cld
xchg
sub
movsb
cld
mov
pop
sub
add
pop
fistps
inc
mov
nop
lock
xchg
mov
bswap
pop
add
xchg
jae
dec
test
inc
jne
outsl
mov
in
daa
iret
outsb
xchg
scas
popf
out
loope
sub
js
test
cmp
imul
push
int3
int
mov
cmovl
push
inc
sbb
outsl
pop
fsubrl
mov
lahf
jg
mov
testw
repz
dec
out
bound
xchg
test
in
dec
add
test
popf
test
cld
mov
mov
pop
out
jns
fadds
jne
and
cmp
mov
or
stc
mov
xchg
inc
out
push
in
call
sub
push
mov
mov
imul
in
lock
cli
fs
jae
incl
js
push
fistpll
ljmp
leave
arpl
int3
outsl
scas
mov
scas
fcoms
sub
pushf
pop
xchg
push
xor
je
push
dec
ss
push
jg
inc
ljmp
pop
loopne
clc
push
sbb
xchg
or
jmp
mov
or
or
jno
xor
lahf
in
fs
add
aas
jg
xorl
pop
icebp
ret
jecxz
das
lahf
ror
cwtl
xchg
insb
insb
sbb
lret
ret
sbb
or
jo
jg,pt
scas
into
and
xor
in
test
pushl
scas
fs
sti
and
loopne
mov
mov
or
push
mov
mov
adc
pop
xchg
hlt
xchg
scas
cmc
inc
lahf
xor
iret
pop
add
ret
add
cld
xor
fistpll
outsl
mov
outsb
sbb
mov
testl
xchg
dec
mov
xchg
xor
xchg
mov
push
dec
mov
imul
sbb
repnz
pop
insb
jge
notb
pop
jle
daa
xchg
icebp
lock
popl
nop
pop
jnp
cmp
outsl
in
xchg
mov
jno
cld
xchg
cli
in
and
inc
clc
ds
aas
jg
fstl
scas
testl
pop
xchg
add
adc
jecxz
xchg
ss
ljmp
stc
cld
sarl
ljmp
mov
mov
jne
lahf
ds
sub
xchg
dec
lahf
sub
decb
ds
mov
int
nop
adc
in
rcrb
push
aas
aas
cmp
jl
rdpmc
iret
push
adc
pop
cs
mov
adc
call
call
push
mov
mov
xor
pop
in
movl
push
lock
push
mov
xchg
aas
jmp
ds
jne
dec
mov
es
jg
scas
in
add
push
ret
push
push
int3
lahf
dec
cmpl
add
loope
ds
mov
sbb
popa
outsb
adc
mov
lock
clc
cmpsb
test
jle
add
push
and
aaa
pop
mov
aas
cmpsl
xchg
dec
addr16
mov
in
ds
inc
mov
add
push
push
rcr
fsqrt
jp
mov
movsb
mov
int3
lret
lret
jge
loop
stc
cld
stos
jmp
cwtl
xor
xchg
jae,pn
or
arpl
mov
sub
test
or
ss
stc
add
sbb
or
push
cld
jg
dec
inc
xor
push
dec
jecxz
adc
and
jb
mov
xchg
movsl
mov
cmp
aad
sahf
aas
imul
xor
pop
loopne
mov
movsb
scas
jge
iret
mov
push
in
fxtract
repnz
in
mov
in
jg
jb
sbbl
outsl
cmp
pop
lcall
mov
pop
mov
pop
cwtl
adc
imul
dec
es
iret
lods
adc
cmc
adcl
pop
outsb
jp
inc
inc
or
cwtl
stos
iret
push
sbb
lock
ret
pop
imul
and
js
jno
imul
cmp
mov
shlb
fbld
add
out
addl
push
jp
iret
cld
dec
aas
jg
dec
outsb
fcomps
adc
mov
xchg
inc
sub
mov
enter
adc
dec
stc
jb
lea
lahf
pop
fisubrl
out
inc
adc
mov
sbb
rcrl
add
sarb
cld
popa
jge
in
insb
loopne
push
enter
mov
and
inc
sbb
test
or
pushf
jb
push
adc
daa
lahf
xor
addl
pop
repnz
push
stos
adc
inc
pop
cli
test
repnz
or
push
rorl
fisttps
data16
cs
mov
mov
call
loopne
add
loopne
jae
and
aas
imul
orb
outsb
push
in
xchg
scas
aam
push
add
and
adc
sub
iret
lahf
aas
stc
pop
sahf
push
adc
pop
leave
add
and
sub
fisubl
pop
sub
sbb
and
insb
pop
movups
mov
sub
stc
outsb
pop
mov
cwtl
sub
jmp
or
sar
sbb
inc
daa
jo
add
outsl
adc
in
cmp
add
sbb
das
jmp
pop
jg
leave
add
ds
add
lret
shll
int3
fwait
les
movsb
les
ret
cwtl
aas
mov
repnz
movsl
mov
pop
pop
mov
push
jo
je
add
mov
repz
push
popa
out
or
mov
repnz
lret
add
jp
dec
add
or
loope
push
dec
dec
cwtl
out
add
in
cmp
sub
inc
xchg
mov
pop
pop
dec
imul
adc
jp
jnp
les
lahf
sti
repnz
mov
out
out
dec
push
cwtl
push
jg
pop
scas
mov
or
repnz
ds
and
jne
shrb
out
pusha
stos
add
jg
xor
push
mov
dec
lahf
pop
fstps
leave
repz
mov
arpl
and
dec
xchg
jle
cmp
cmpsb
add
dec
or
outsb
adc
xchg
dec
andl
adc
push
dec
mov
xchg
mov
push
ds
pop
adc
sahf
aas
jg
jg
mov
mov
frstor
shl
in
push
lahf
ja
repz
add
imul
or
inc
and
cs
push
inc
xchg
incl
fidivrs
jle
jl
out
lret
push
mov
pop
adc
in
and
in
cmp
jl
ds
or
push
sub
jbe
xor
and
pop
cmp
fcompl
inc
punpcklwd
inc
pop
pop
outsb
imul
pop
lahf
fdivs
out
mov
scas
xchg
les
aas
cld
inc
cli
in
dec
jl
dec
test
push
push
add
lahf
aas
jg
fisubrl
xchg
mov
push
and
mov
int
ja
dec
xor
in
cmc
sub
sbb
dec
adc
mov
faddl
or
loopne
ror
cld
stc
add
add
cli
cltd
gs
jae
cmp
pop
loop
pop
dec
mov
mov
mov
dec
fs
insl
pop
icebp
ret
ret
or
xchg
dec
call
pop
repnz
adc
movsl
in
scas
iret
sahf
jg
cli
idivb
dec
out
mov
out
inc
in
push
xor
push
fs
lret
enter
mov
lock
repz
aam
js
js
and
out
push
cmp
aas
jmp
inc
scas
outsb
pop
push
jns
fstp
btc
push
or
mov
push
rorl
sub
jnp
lahf
lds
pop
fiadds
fldt
loope
clc
int3
mov
and
mov
movsb
adc
dec
mov
pop
pop
scas
inc
adc
loop
mov
mov
pop
jl
pop
jns
sbb
popf
inc
xchg
sti
push
cld
lahf
push
popf
push
and
lahf
pop
add
dec
imul
and
loopne
mov
jg
jbe
lds
mov
fbstp
popa
mov
iret
scas
mov
sbb
add
daa
insl
iret
adc
cwtl
fisubrl
mov
dec
outsl
mov
arpl
movsb
sub
add
xchg
gs
pop
cmp
jg
lcall
das
mov
test
clc
fidivl
test
sbb
mov
mov
inc
xchg
movsl
in
mov
loop
iret
lahf
aas
insl
adc
jle
jne
xchg
cwtl
icebp
pop
ror
add
inc
lcall
lret
decb
stos
sbb
loope
xchg
fwait
xchg
pop
sub
sbb
ret
pop
sbb
gs
xlat
sub
cli
inc
pop
out
mov
sub
jns
pop
psubb
dec
arpl
stos
push
and
mov
dec
pop
loope
xchg
jle
push
adc
pop
aas
aas
aam
aam
mov
out
inc
inc
mov
repz
lahf
int
arpl
dec
jnp
mov
jg
cld
stc
cmp
inc
adc
fisttpl
lahf
aas
fsubl
int3
je
test
dec
clc
repnz
cmpsl
sti
idivl
pop
cld
stc
repz
mov
leave
fcmove
mov
pop
xchg
mov
out
pop
cmp
ljmp
push
pop
dec
inc
cli
in
clc
mov
ds
pop
out
lahf
aas
push
cmpsl
shl
cmpsb
push
jp
shrl
int
popf
ljmp
into
add
push
dec
jle
pop
jns
ljmp
lock
jp
repnz
ljmp
sbb
roll
outsl
rcrl
jecxz
push
lea
das
scas
mov
enter
or
push
daa
imul
lahf
jo
scas
mov
jnp
adc
arpl
adc
push
shl
out
lret
sub
jge
in
hlt
outsl
aaa
mov
mov
das
adc
mov
push
add
rol
jno
cmp
push
das
add
movsb
in
repnz
insl
xor
mov
xor
adc
lret
or
dec
test
jg
jle
jb
sub
adc
repz
mov
call
pop
imul
cld
in
cmpb
test
jae
sbb
pop
jmp
in
pop
cmp
rorl
lret
das
pop
cmp
cmpsl
adc
mov
xchg
sub
or
pop
jg
fs
inc
inc
or
cs
cmpsb
jno
ljmp
testl
inc
jnp
addl
jo
xor
add
outsl
push
clc
out
stc
adc
lret
xchg
scas
push
jge
mov
aas
jg
cld
jns,pt
nop
xchg
ret
mov
test
rclb
xchg
lahf
lea
adc
lock
outsl
repz
xchg
ja
dec
push
xor
pop
jae
sbb
clc
leave
cmp
adc
out
stos
push
add
mov
jle
fmull
xchg
test
in
sbb
scas
mov
xchg
dec
push
out
mov
sub
push
fisttpl
push
push
stc
repz
outsb
neg
hlt
stos
js
inc
inc
push
ficomps
rcrl
out
mov
or
in
scas
jmp
cmpb
loope
nop
jb
outsl
pop
and
daa
aas
aas
xchg
test
ljmp
jg
mov
mov
ficomps
cmp
cmp
test
das
aas
and
inc
sbb
mov
jo
fdivrl
dec
lahf
sbbl
in
jbe
push
icebp
lahf
sbbl
repz
xor
inc
insl
push
cmp
loope
mov
cwtl
jle
push
scas
jle
cld
stc
ja
stc
int
or
xchg
repz
push
inc
sub
pop
jle
inc
push
and
xlat
rcll
shl
cld
stc
subl
inc
add
jne
aad
gs
lcall
jns
add
lahf
xlat
or
sub
sub
mov
push
fdivr
lds
in
xor
mov
dec
sbb
jno
popa
mov
xor
in
adc
repnz
or
push
testl
dec
sbb
pop
pop
stc
jp
bound
jg
add
xchg
rcll
push
inc
mov
sbb
jae
sbb
pop
mov
js
das
or
lea
sahf
cld
stc
rsqrtss
mov
or
fs
mov
jg
stos
or
xor
fucomi
jae
stc
repz
mov
push
pop
out
inc
insb
pop
inc
mov
jg
movsl
sti
popf
fcmove
je
arpl
pop
mov
mov
mov
aad
stc
repz
loop
or
push
jne
pop
das
movsb
jp
loop
fidivrs
mov
xor
adc
je
movsb
cmc
div
lret
xchg
xchg
nop
xchg
cmpsl
loope,pt
jno
stc
test
pop
jns
jno
stos
aad
dec
mov
ret
pop
jns
lret
bound
sbb
bound
test
xchg
cltd
xor
lods
jns
xchg
push
mov
xor
jno
inc
jle
jle
jge
ret
pop
push
nop
mov
cmpl
aas
or
adc
pop
sbb
adc
xchg
pop
cli
jmp
mov
cld
test
pop
xchg
rclb
push
in
das
lahf
imul
cmp
add
lock
smsw
repz
aas
mov
pusha
leave
scas
xchg
cmpsb
xchg
and
mov
and
xor
rcl
jno
jl
movsl
das
popf
inc
adc
mov
mov
fildll
dec
ja
lret
mov
mov
cmp
repnz
xor
iret
js
movsb
or
inc
xchg
xchg
lcall
and
mov
mov
dec
and
out
aaa
xchg
test
cld
stc
push
add
sbb
and
fistl
pop
jge
pop
in
ja
jb
pusha
pushf
fisttps
inc
jbe
bnd
ja
pop
jns
in
es
into
hlt
imul
cld
push
in
mov
lods
aas
pop
int
aam
scas
icebp
jbe
jae
scas
xor
or
into
test
fisttpl
scas
mov
scas
icebp
das
push
pop
dec
int3
adc
push
fidivrs
jnp
outsb
dec
pop
in
in
pop
xchg
jg
mov
js
mov
xor
fistpll
inc
push
dec
popa
xor
les
mov
repnz
out
stc
aad
outsb
xor
mov
mov
fstpt
push
jbe
sbb
mov
aas
sbb
cld
stc
in
cwtl
scas
movd
lret
scas
inc
xor
add
iret
lahf
push
scas
mov
or
inc
adc
clc
xor
stc
repz
or
aaa
insl
into
fidivrs
push
jge
push
xor
xchg
push
inc
flds
mov
outsl
andb
mov
lret
dec
cmc
inc
jecxz
push
sub
sub
aas
dec
cmpsb
stc
dec
shlb
shll
mov
pop
ss
adc
mov
clc
add
lahf
pop
push
das
jp
jle
mov
daa
jmp
inc
dec
pusha
push
scas
fidivrl
je
xor
jns
mov
sbb
int3
scas
jg
scas
mov
jge
pop
jae
out
ffreep
lahf
stos
movsb
ja
jl
imul
mov
in
lret
out
lcall
mov
add
push
pop
mov
mov
ficompl
in
cs
push
push
mov
and
dec
jns
xchg
push
mov
xchg
in
cmp
adcb
scas
add
mov
dec
jp
cld
mov
sahf
lcall
cwtl
repnz
inc
mov
xchg
cmpsl
call
movl
pop
jns
aad
adc
aas
or
lahf
lds
in
in
ja
lods
adc
rorb
mov
cmp
out
adc
cmp
xor
scas
mov
inc
pop
aam
lret
mov
add
pop
loopne
mov
xor
popf
xor
cmp
lods
iret
lahf
aas
aas
mov
je
fidivrl
xlat
jb
cmpsb
xor
repz
jmp
push
in
push
jae
sahf
insl
sbb
bound
mov
imul
mov
aaa
dec
add
inc
cmc
inc
jg
ret
aam
repz
xor
in
sub
fildll
cld
into
and
test
inc
es
imul
test
pusha
jae
xor
cs
jg
cld
stc
mov
sbb
lret
jae
pop
adc
inc
sahf
aas
adc
lret
test
daa
iret
lahf
aas
lcall
je
aad
mov
pushf
rcl
cld
stc
repz
sahf
jecxz
fdivl
adc
cs
mov
sub
pop
decb
lods
jl
inc
jg
cld
dec
lock
mov
sbb
mov
add
jg
push
sub
sub
pop
fildll
js
cmp
out
pop
adc
lock
mov
add
sub
xchg
fisubrs
adc
repnz
lock
in
stos
adc
mov
test
xchg
push
pop
jns
xor
or
dec
xchg
aad
inc
std
jb
lds
mov
pop
les
jge
cld
jnp
negl
pop
insl
out
pop
cmp
inc
or
stos
div
fs
pushf
fsubp
xchg
imul
in
frstpm(287
lahf
faddl
jns
and
dec
out
mov
divl
xchg
push
pop
jns
imul
fcomp
xorl
dec
jl
in
sarb
das
add
scas
inc
dec
lock
sbb
sub
repz
push
faddp
out
and
sub
xchg
jle
jge
pop
jbe
add
enter
jg
inc
inc
add
mov
nop
mov
sti
in
out
lea
pop
sbb
clc
xchg
cmpsl
pop
lahf
aas
add
ror
xchg
ficoms
loop
repz
adc
cmp
sub
sub
xchg
clc
xchg
orb
or
or
jmp
add
popf
fistl
xchg
addl
pop
cmpsl
rcr
outsl
jl
dec
roll
mov
push
scas
jae
mov
sahf
or
and
pop
mov
insb
mov
adc
out
loopne
ret
rolb
add
add
outsb
addl
addl
pop
cld
pop
test
sahf
xchg
push
push
sbb
add
jns
push
scas
pop
aas
adc
and
sbb
sub
aam
andl
pop
and
test
cmc
push
or
add
ja,pn
sbb
popa
outsl
sub
scas
rclb
or
and
sub
mov
icebp
dec
cmp
mov
add
or
mov
add
mov
and
das
and
add
cmp
mov
and
sub
inc
into
stos
push
adc
ficomps
and
in
and
out
pop
rclb
xchg
xlat
xchg
xor
inc
push
add
pop
and
dec
jge
out
sub
imul
and
xchg
das
jno
test
mov
dec
and
into
jg
xchg
enter
mov
and
pop
xor
repnz
sahf
test
xor
mov
add
adc
add
scas
dec
out
add
sarb
pop
push
and
aaa
lcall
or
fidivl
adc
clc
pop
je
into
jno
xorb
iret
inc
and
es
and
and
jns
into
adc
jnp
xchg
sub
pusha
and
fs
push
aas
dec
push
add
js,pt
aam
add
sahf
fistl
scas
and
movsl
push
push
lahf
jo
xchg
fsubs
outsl
inc
xchg
add
scas
iret
enter
jge
andl
cmp
fcompl
add
lods
pop
jns
add
rcll
pusha
and
cmp
adc
mov
jp
lock
push
add
js
adc
incl
aaa
xor
pop
out
roll
add
or
pop
and
and
or
arpl
and
or
and
or
popl
call
sbb
add
and
daa
add
sbb
mov
or
add
cld
clc
imul
or
push
jmp
iret
cmpb
push
add
and
cmp
adc
mov
and
aam
daa
add
andl
stc
cmpl
mov
xor
and
popa
and
dec
inc
fs
and
xchg
ds
and
add
popa
and
mov
outsl
sbb
clc
dec
push
addb
pusha
stc
push
inc
das
sbb
and
and
and
and
xchg
pusha
and
das
xchg
pop
xor
or
outsb
add
or
cs
or
mov
and
jle
or
and
sub
push
daa
notb
push
pop
add
and
lock
jle
jg
fwait
inc
filds
mov
pusha
and
push
push
cli
dec
push
add
pop
lods
les
mov
nop
and
push
in
xor
repnz
inc
and
xchg
jecxz
ljmp
mov
shlb
iret
cmp
addb
or
sbb
and
add
push
add
push
and
or
outsl
dec
sahf
lds
add
sbb
ret
sub
push
xor
js
and
and
xchg
mov
or
and
xchg
nop
pop
adc
pop
fsubrp
test
sbb
daa
dec
or
adc
xor
and
and
aas
add
outsl
out
je
ret
nop
and
push
jno
mov
into
and
inc
xor
and
das
sub
xchg
das
das
add
lahf
fists
pop
inc
add
push
add
out
inc
jle
push
and
cmpsb
repnz
push
hlt
in
daa
dec
jnp
pop
push
enter
adc
sbb
and
shl
or
shl
add
or
shl
mov
add
mov
dec
into
sub
stc
pop
xchg
cmpsl
xor
sbb
daa
and
add
js
sbb
fs
and
dec
incb
flds
sbb
cmc
leave
inc
in
lahf
add
inc
loopne
and
mov
push
mov
mov
add
xacquire
mov
push
and
sub
outsb
pop
push
push
add
lods
cmpsl
and
pop
or
fcmovbe
mov
add
or
andl
sbb
mov
xchg
push
push
add
jno,pn
dec
xchg
add
test
add
sbb
je
jno
outsl
out
subl
ror
sub
daa
mov
addb
sbb
inc
and
and
and
jl
and
jb
xor
lock
iret
and
and
or
or
dec
and
add
and
dec
loopne
addr16
cmpxchg
into
jno
or
inc
and
dec
and
or
or
nopl
pop
sbb
fbld
add
sahf
dec
fsubrp
add
out
sub
add
andl
and
iret
and
inc
movsb
pusha
and
jle
dec
jo
lret
ret
repnz
dec
push
ficompl
and
add
add
mov
aas
and
lret
cmp
sbb
loopne
mov
dec
shlb
leave
lea
sbb
ss
and
ret
jbe
mov
out
icebp
cltd
and
orl
shl
and
lret
inc
xchg
andl
jl
push
add
out
push
add
add
push
arpl
sub
mov
jecxz
rcrb
pop
xor
or
push
inc
pusha
in
jnp
imul
and
add
or
inc
sahf
jg
pop
xchg
xlat
xchg
mov
or
iret
dec
test
insl
sub
or
jle
add
test
int
outsl
shr
or
aas
mov
sbb
sbb
iret
outsl
and
xor
ds
je
dec
add
repnz
or
fwait
and
push
and
cmp
adc
scas
cmpsl
and
ret
xor
and
popa
push
add
iret
lahf
jo
mov
cmp
add
insl
repnz
and
and
nop
add
push
add
mov
and
adc
addl
fbld
mov
mov
test
and
xchg
and
xchg
out
cmp
scas
adc
pusha
and
scas
push
jmp
mov
popa
and
cmpsb
icebp
cmp
lods
cmp
adc
mov
xor
and
dec
sbb
inc
and
jle
inc
and
andl
and
pop
mov
in
pop
xor
js
and
and
and
xchg
and
and
orl
cvtdq2ps
add
repnz
test
aas
std
inc
dec
arpl
mov
pop
dec
insb
and
and
xchg
ja
stc
mov
adc
daa
xor
adc
add
into
fstl
inc
xor
mov
pop
push
add
fldl
aas
adc
add
mov
and
or
in
xchg
andl
inc
pusha
arpl
or
sahf
lea
mov
sub
fidivrs
out
and
sbb
jl
and
aam
mov
pop
adc
and
sbb
and
outsl
popl
pop
push
add
fdivrp
and
and
lcall
lret
inc
fnstcw
jns
add
popf
and
inc
pusha
and
daa
add
and
mov
jl
sub
adc
xor
aas
and
adc
dec
xor
and
add
fbstp
cmp
pop
lahf
mov
lfs
add
test
and
data16
outsl
xchg
movsl
cmp
inc
faddl
fildll
das
add
add
and
mov
and
cmpsl
xor
and
outsl
movsl
xchg
pop
adc
aas
add
add
push
movsb
das
sti
movsb
xchg
cmpsb
rolb
or
and
pop
mov
loopne
adc
mov
jl
jle
and
or
and
imul
arpl
lods
repnz
adc
push
pop
jg
pop
ret
ljmp
pop
jl
sbb
and
testb
jb
out
lret
or
and
xchg
aas
jle,pn
pop
and
xchg
out
sbb
dec
or
add
and
xchg
add
scas
or
test
fmull
xchg
push
ficomps
and
and
pop
add
or
and
or
ds
pop
and
mov
aaa
out
arpl
or
and
and
and
bts
pop
pusha
and
aas
aas
add
daa
mov
ljmp
in
adc
mov
cwtl
and
shl
pop
imul
adc
nop
and
mov
leave
daa
adc
and
rorl
stc
xchg
adc
ffreep
mov
nop
and
and
sub
jg
sub
ret
cmc
sub
and
icebp
sbb
iret
leave
das
lahf
and
or
scas
adc
adc
cs
and
adc
cmp
xor
lock
and
cmp
out
scas
dec
push
sbb
sbb
lahf
and
or
lock
add
cmp
lret
and
cmp
rclb
addb
repnz
mov
pop
adc
dec
addb
iret
lahf
pop
rcrb
test
inc
in
jmp
ja
leave
and
sub
filds
imul
imul
mov
or
adc
enter
mov
add
dec
sub
pop
es
jne
jmp
xchg
dec
mull
sbb
sub
incb
push
pop
enter
fucomip
iret
jge
push
push
push
or
in
out
mov
add
and
and
jp
ror
out
cmp
mov
pop
mov
xchg
mov
test
sbb
in
mov
inc
aam
sti
adc
shrl
ss
mov
push
xor
stc
lods
sbb
push
ss
lahf
aas
sbb
sbb
imul
or
sub
scas
mov
push
divl
rclb
mov
aad
mov
dec
cmp
xchg
xchg
and
inc
decl
pop
xor
sub
mov
add
mov
push
sbb
in
mov
pushf
rorl
cmp
mov
adc
iret
and
mov
sub
jo
dec
add
add
pusha
push
jl
aas
test
sub
mov
jne
sub
out
bound
jb
mov
mov
repnz
ljmp
addl
sub
or
out
mov
scas
cli
xchg
cmovg
add
mov
movsl
pop
dec
in
push
adc
cwtl
add
outsl
pop
iret
inc
jl
popa
push
jg
lar
mov
adc
clc
in
cld
shrd
sbb
xbegin
fisttps
std
movsb
xor
out
and
add
lahf
jmp
iret
or
inc
iret
dec
cwtl
or
nop
dec
gs
sbb
pop
lahf
iret
lods
add
in
mov
pop
lret
jo
mov
fs
or
call
xor
pop
push
sbbl
hlt
mov
lret
xchg
mov
lock
inc
cli
xchg
sub
push
mov
ret
or
pushf
pop
out
mov
adc
sarb
xor
test
sbb
inc
adc
fucomip
stc
repz
inc
jae
mov
clc
and
xor
mov
leave
stos
mov
repnz
xor
movsb
das
inc
cmpb
ds
adc
mov
and
xchg
mov
xchg
adc
dec
pop
cmpl
mov
sub
jo
fsub
repz
mov
jle
and
push
out
incl
push
leave
pop
sbb
inc
adc
sub
inc
das
mov
push
sbb
sbbb
adc
add
scas
jnp
mov
cmp
cmpsb
rcrb
scas
push
pushf
xchg
jg
mov
dec
pop
jle
push
mov
jg
inc
je
xchg
push
pop
dec
bound
enter
das
addr16
cwtl
xchg
dec
jns
mov
or
loopne
outsl
xor
insl
fildll
sbb
or
aas
call
aas
imulb
cltd
mov
adc
iret
mov
shrb
inc
xor
push
or
xchg
dec
stos
sub
adc
lea
cld
inc
and
add
dec
inc
pop
and
dec
xor
test
pop
fisttps
jp
iret
and
loopne
xor
cmpsb
jg
xchg
sub
movsb
mov
pop
or
test
ror
push
int
insb
jecxz
mov
in
mov
inc
je
sbb
inc
pusha
and
or
jns
mov
adc
push
sub
fisubs
popf
fstl
in
inc
aas
pop
scas
xchg
iret
stos
mov
or
jmp
mov
insb
jg
pusha
clc
lds
pop
iret
incl
leave
ret
pop
jnp
das
sbb
push
ljmp
pop
mov
lock
jo
fsubr
xor
stc
and
mov
and
jnp
xchg
cld
push
lret
jecxz
dec
repz
out
insb
mov
jne
dec
jle
mov
insb
and
dec
jle
ds
xor
punpckldq
ret
xor
or
stos
scas
sahf
fisubl
lret
mov
lahf
les
mov
ja
jno
fistpll
push
repnz
sar
dec
jge
sub
scas
or
or
push
cld
cmc
ret
out
fistpll
xchg
jmp
xchg
popa
jb
and
mov
dec
mov
add
repz
mov
inc
mov
add
sbb
test
inc
lahf
aaa
iret
ret
mov
iret
fistpll
jg
pop
xor
sbb
dec
or
jae
add
sarb
jnp
out
push
sbb
int
aas
sbb
incl
andb
pop
jnp
popf
das
aas
cmp
mov
xchg
cmpsb
jnp
cmp
or
mov
clc
lret
fstpl
mov
inc
das
das
mov
push
fcompl
xor
out
sbb
pop
xchg
sti
arpl
fdivrl
mov
sti
cs
fmull
pop
out
sbb
mov
push
addr16
icebp
or
or
mov
xlat
shrb
aas
rcrl
pop
sarl
pop
mov
das
xchg
sub
stc
mov
fisttpl
incl
pop
or
sub
lret
ljmp
repz
push
dec
in
jle
dec
cmc
push
je
sbb
outsl
popa
comiss
jb
push
jns
fwait
test
pop
lock
sub
or
ds
push
dec
aad
leave
mov
mov
sub
xor
sub
in
jno
ret
in
lcall
mov
test
xchg
int
adc
mov
mov
xchg
mov
das
mov
push
icebp
cmp
push
movsl
jecxz
xorb
dec
fistpll
cmp
es
and
scas
in
push
repz
test
icebp
mov
lahf
jg
inc
out
pop
sahf
xor
lock
out
sub
add
repz
out
xchg
pop
outsb
lcall
lret
inc
out
push
test
out
mov
sbb
jl
lods
xchg
leave
adc
je
xor
flds
repnz
dec
inc
in
mov
pop
mov
mov
hlt
xlat
hlt
xchg
insb
mov
xlat
nop
add
push
ret
jg
test
dec
or
dec
fisubrs
jbe
ljmp
xchg
aas
aam
sbbl
xchg
jns
mov
outsb
rcl
test
jns
repnz
stc
ret
cld
jmp
jg
jns
xchg
push
jmp
into
fisubl
mov
pop
jl
mov
xchg
mov
enter
pop
pushf
mov
pushf
mov
setl
mov
lcall
dec
iret
sti
sub
adc
xchg
jg
loope
xchg
out
aas
mov
mov
xor
pusha
test
addb
sbb
inc
add
jg
or
subl
cmp
stos
movsl
cmpb
mov
dec
outsb
mov
or
add
out
push
je
pop
dec
sbb
pop
xchg
shrl
push
push
repz
xchg
sbb
pop
push
sbb
add
cli
bnd
test
pop
loop
loopne,pt
repnz
xor
aas
push
cmpb
adc
add
dec
jecxz
xchg
fidivl
or
aas
inc
into
scas
adc
arpl
or
dec
fistl
jno
push
push
jae
sbb
push
fsubp
mov
sar
pop
stc
mov
xor
lret
lret
xchg
pop
pop
add
aas
mov
scas
mov
out
test
fldenv
stos
test
sbb
loopne
jo
popf
repnz
repnz
das
ds
mov
and
lahf
repz
add
xchg
repz
sub
dec
fdiv
icebp
in
mov
xchg
idiv
push
cwtl
and
sbb
aas
pop
imul
in
aas
sbb
loop
je
sub
cmp
lahf
sar
xchg
out
in
adc
pushf
jecxz
aad
inc
or
mov
lahf
mov
mov
aas
jg
jg
insl
leave
mov
inc
xor
cltd
fbld
iret
lahf
scas
sbb
cltd
lods
sahf
pop
jl
xchg
jg
and
and
rcl
adc
int3
mov
das
push
fmulp
mov
ret
cmc
test
pop
popf
pusha
adc
and
adc
jnp
push
mov
pop
loopne
scas
add
add
insb
cmpsb
scas
clc
test
imul
out
inc
mov
daa
or
xor
mov
jl
scas
fistpl
jns
pop
add
pop
xchg
rolb
stc
shlb
pusha
adc
lahf
cmp
add
mov
mov
pop
das
dec
xchg
leave
adc
outsb
cltd
xchg
mov
fs
incl
outsb
rorl
jb
or
repnz
out
push
lods
mov
loope
int3
outsl
mov
das
scas
mov
sub
inc
cmp
out
aas
xchg
jnp
fs
sbb
xchg
pop
in
xchg
ja
inc
mov
notb
and
lret
mov
rcrl
repz
push
sahf
xchg
gs
jno
stc
cld
stc
inc
imul
aaa
aaa
add
fmuls
testl
ficoms
iret
mov
int
js
xor
or
xlat
movsb
ds
ds
das
and
ljmp
or
lahf
aas
ja
iret
fcoml
xor
div
out
dec
adc
cltd
aas
push
inc
movsl
xchg
xchg
sbb
hlt
xor
inc
push
dec
inc
imul
mov
stc
movb
inc
and
aad
mul
shrb
fucom
mov
pop
loope
test
test
dec
add
mov
fmuls
cmp
sub
push
add
mov
repz
jmp
data16
xchg
mov
jnp
in
add
repnz
int
cmp
add
sbb
mov
out
push
push
push
rclb
repnz
mov
jle
push
popf
inc
add
or
filds
.byte
nop
and
cs
jg
or
add
mov
lret
repz
sarb
imul
cmp
mov
repnz
in
mov
lret
mov
or
dec
pop
cmp
sub
cmp
fldz
mov
icebp
mov
movl
mov
pop
aaa
in
sti
cmpsl
mov
mov
sub
lock
jg
pop
sub
mov
pushf
pop
mov
add
rolb
mov
jnp
sub
cmp
sbb
add
js
imul
jg
adc
sub
bnd
ret
rorb
add
push
adc
cli
rclb
out
imul
into
add
imulb
push
add
cmp
pop
rorl
adc
sbb
outsl
int
sti
sarl
mov
lock
mov
adc
rolb
adc
mov
or
in
imul
mov
lret
adc
lock
or
pop
testb
shl
xchg
or
push
add
sub
cmp
dec
mov
or
mov
add
push
mov
test
pushf
add
fwait
xor
sub
mov
mov
sub
adc
cmp
pop
sbb
rcl
insb
idivl
sub
mov
inc
add
or
add
push
or
inc
je
add
sarb
jl
cmp
adc
lock
mov
sar
loop
mov
mov
or
mov
inc
sbb
insb
or
add
clc
mov
add
inc
add
loopne
mov
rcr
sub
sub
mov
or
data16
adc
adc
push
aaa
push
sbb
out
cs
insl
mov
adcb
ret
mov
roll
push
adc
adc
add
inc
data16
repnz
mov
aam
add
add
or
incl
pop
push
loop
fucomi
dec
add
add
mov
push
pop
mov
ret
repnz
fs
or
pop
sub
js
push
lods
outsb
pop
dec
sbb
stc
sbb
sub
jo
insb
jl
or
lcall
sbb
inc
cli
lock
das
shrl
pop
ret
nop
leave
jle
idivb
leave
sbb
andl
xchg
xchg
add
insl
xorl
out
fidivrs
push
shr
in
lcall
mov
in
or
or
ds
movsb
adc
or
out
sbb
mov
inc
jae
inc
cmove
xchg
push
push
dec
sbb
repnz
pushf
int3
xor
lea
or
pop
sbb
out
xchg
adc
cwtl
pop
movsb
scas
test
aad
pop
adc
add
xchg
xor
mov
lods
jle
cmp
push
mov
dec
pop
or
push
pop
mov
push
or
or
add
and
jl
mov
imul
sbb
mov
negb
adc
aam
and
rcrl
je
xor
jno
or
bound
insl
cmpsl
out
dec
scas
push
mov
leave
or
xor
sub
lret
xlat
adc
mov
push
mov
ret
daa
push
mov
icebp
xchg
mov
cmpsl
mov
cmp
lock
incl
fcmovb
je
rcl
ss
ss
sbb
pop
push
aas
xor
sbb
stos
or
daa
sbb
imul
add
in
push
add
or
cmp
subl
cmp
fadds
insb
mov
adc
sbb
sarb
mov
cmp
sub
mov
xor
add
shl
not
push
mov
mov
xchg
clc
or
add
fsubrp
ds
mov
cmpb
sbb
add
pusha
pop
push
and
xchg
cmp
push
insb
rcll
call
push
pusha
shlb
and
xor
and
test
dec
mov
mov
xor
clc
xor
jge
push
lcall
jne
sub
out
lods
mov
outsb
test
adc
test
out
fld
mov
push
sbb
mov
cmp
rcl
fisubl
push
loop
sub
test
mov
movsb
mov
mov
loop
test
repz
mov
aad
jbe
sti
sbb
adc
rorl
mov
pop
adc
jbe
dec
imul
push
mov
stos
mov
sbb
pop
std
xor
movl
or
push
inc
fs
add
mov
mov
adc
push
mov
adc
adc
mov
pop
ret
add
sub
shrl
sbb
cld
sbb
push
insb
imul
js
jnp
inc
adc
pop
xchg
mov
push
xchg
add
movb
push
mov
ss
pop
adc
mov
cmpb
jle
or
or
mov
adc
or
push
add
jnp
mov
xor
testb
mov
push
sarl
sbb
sbb
fdivr
ret
pop
mov
mov
jge
stos
add
insb
ja
mov
cmc
cld
ret
sbb
or
js
mov
xor
mov
sub
adc
or
adc
pop
push
loope
lock
sahf
sbb
pop
push
mov
adc
add
cmpsb
rcrb
mov
popa
sbbb
cmp
decb
push
inc
nop
ret
dec
shlb
roll
clc
ljmp
xor
inc
pop
lea
or
push
xchg
cmp
sbb
jl
push
add
mov
and
fiaddl
ret
insb
xor
mov
push
add
push
cmp
add
sbb
or
push
mov
push
push
or
mov
fdiv
ret
sbb
sbb
mov
mov
or
and
add
loopne
icebp
mov
add
mov
ror
cmpsb
adc
jp
xchg
ret
push
and
ds
cs
sbb
adc
or
sbb
sbb
and
subl
cmpb
mov
lds
push
negb
push
loop
add
and
sbb
aam
iret
xorb
mov
les
sub
pop
pop
test
test
or
inc
push
xor
montmul
cmpsb
ret
icebp
mov
cmp
add
jns
adc
data16
test
inc
in
mov
lret
mov
insl
imul
or
int
cli
lret
cmp
ljmp
push
sub
cmp
stos
roll
mov
push
lock
mov
test
and
or
push
rclb
fidivrs
ljmp
jo
rorb
popa
scas
push
inc
rorb
rclb
pop
xchg
and
push
and
xchg
mov
push
mov
adc
adc
mov
popa
inc
lock
sbb
movb
add
sub
stc
sub
jmp
pop
sub
adc
adc
push
xor
test
jo
lock
cmp
pop
movl
adc
xchg
sbb
sub
sarb
jge
test
mov
ret
dec
in
test
add
jp
push
add
jae
cld
or
cli
mov
push
adc
pop
jmp
mov
inc
mov
test
fs
adc
adc
repnz
in
push
popa
jne
rcrb
jo
add
out
pop
mov
xchg
stos
mov
sbb
adc
adcb
sub
push
xor
ljmp
bound
cmp
js
loop
add
repnz
adc
test
dec
or
sbb
xor
xchg
xlat
roll
xlat
or
mov
mov
into
movsb
rcrb
div
cmp
mov
lea
pop
jne
jns
jle
cmp
cli
movsb
push
outsl
adc
cmp
xor
lock
adc
push
adcb
or
add
and
add
mov
jbe
cmp
ja
fadds
lods
or
or
add
adc
sub
pop
add
pusha
clc
mov
or
mov
aam
inc
adc
cli
and
repz
shl
mov
jno
push
mov
jge
adc
mov
push
or
cli
mov
cs
pop
mov
sbb
xor
js
mov
test
movb
leave
pop
add
unpckhps
fsubr
sbb
int3
dec
jo
lds
jg
sbb
sub
sbb
dec
jbe
cld
call
ret
cmp
mov
pop
add
adc
mov
jg
add
inc
mov
push
sub
sbb
out
rcll
dec
into
mov
sub
mov
pop
push
pop
cmp
add
push
push
sbb
push
sti
push
push
shlb
push
mov
mov
jo
imull
shll
add
pop
sbb
cli
lret
jo,pt
hlt
push
subb
sbb
outsb
mov
mov
jmp
mov
or
enter
inc
pusha
str
nop
sbb
jne
js
addl
repnz
clc
jl
xor
mov
popf
mov
cs
out
and
and
mov
aam
sub
mov
icebp
push
popl
cmp
pop
leave
ret
add
pop
incl
mov
mov
pop
sarb
ret
scas
sbb
add
cwtl
adc
rcl
insb
icebp
sbb
orb
mov
adc
xchg
xchg
jecxz
cmp
and
cmc
mov
xor
aam
out
push
mov
push
pop
lcallw
mov
sti
in
sbbb
incb
lock
test
loopne
jmp
add
xor
jno
add
adc
das
orl
or
pop
testl
dec
cwtl
fsubrl
sub
push
adc
shl
push
push
xor
lret
leave
in
or
test
dec
negb
pusha
and
jae
inc
rclb
xor
inc
push
pop
daa
add
fs
sbb
sbb
push
or
call
adc
xor
mov
ret
mov
jl
lret
adc
ljmp
and
adc
push
fiadds
in
fcompl
cmp
adc
sbb
in
xchg
in
mov
jle
dec
mov
rcll
imul
and
add
popa
ret
dec
pop
sbb
sbb
rclb
movsb
or
mov
add
into
js
jne
sub
leave
shlb
add
fisttpll
sub
loop
ljmp
sbb
std
out
sub
roll
popa
xchg
add
fisttpl
subl
pop
add
pop
lock
jecxz
push
call
sub
jg
inc
clc
jl
add
adc
add
pushf
inc
addl
ret
fiaddl
push
pop
add
test
and
repnz
inc
push
test
push
ja
xchg
stc
fldl
mov
sti
push
dec
insl
and
mov
sbb
incb
mov
xor
bound
rcr
push
push
xorl
or
hlt
push
dec
adc
adcb
test
outsb
test
xor
adc
sahf
test
loop
imul
or
add
add
mov
nop
addl
jg
sbb
mov
cli
imul
push
push
negl
sbb
scas
cmpsl
cmpsl
xor
sub
addl
xchg
adc
jno
xchg
push
jl
adc
cli
or
and
out
adc
es
adc
adc
lret
sbb
sbb
repnz
inc
sub
test
mov
add
lret
imul
cli
jo
shl
jo
cld
loop
pusha
pop
fdivl
xchg
mov
mov
ljmp
lock
adc
xor
aam
push
or
cmp
and
mov
cltd
and
mov
hlt
or
pop
loope
inc
mov
test
loopne
adc
inc
cmpl
push
mov
sbb
mov
cmp
cmpsb
adc
pop
shll
pop
outsl
sbb
daa
sub
ficoml
adc
jb
in
pop
push
lock
jo
xor
xchg
insl
and
mov
jmp
test
ret
pop
jb
and
sbb
int3
movsl
pop
sbb
rorb
and
push
xor
jl
mov
outsl
fs
or
adc
xchg
adc
testb
mov
sub
push
sub
nop
cs
sub
inc
jae
xchg
sub
cli
pop
in
adc
push
cltd
outsb
cwtl
adc
das
in
nop
rcrl
ret
and
ds
loop
icebp
roll
lds
mov
mov
jp
or
bound
xchg
ret
sbb
pop
xor
jb
movb
js
push
je
sub
nop
test
xchg
iret
lret
or
iret
hlt
das
sub
hlt
and
lea
mov
mov
roll
and
xor
or
and
jo
repz
js
js
hlt
inc
rclb
sbb
bound
add
test
mov
adc
xor
dec
xchg
or
cs
nop
add
mov
lods
mov
sbb
push
mov
dec
sub
xchg
sarl
push
mov
or
icebp
in
jp
adc
shll
mov
cmp
mov
mov
sub
add
sbb
mov
popf
push
xchg
leave
mov
xchg
lods
or
stos
and
push
xchg
stos
jle
jbe
xor
fdivl
arpl
stos
mov
cmpsb
cmpsl
mov
sub
imul
test
sbb
cmp
leave
sub
ficomps
pop
pop
call
xchg
dec
daa
fldt
mov
inc
mov
push
add
push
stc
and
adc
ljmp
adc
sbb
or
or
jbe
aas
shrb
push
cmc
add
sbb
pushf
dec
dec
shll
fadds
cmp
adc
sbb
pop
lcall
or
sub
adc
inc
or
mov
shl
xchg
mov
call
or
sub
or
pop
push
pop
push
xor
push
ret
add
add
sub
mov
icebp
jle
push
orl
mov
cmp
cmp
xor
sbb
ljmp
and
push
outsb
xlat
ret
gs
iret
dec
addr16
or
cmp
xor
dec
jns
test
push
xchg
test
call
outsb
in
sbb
mov
add
push
cmp
adc
pcmpgtb
aam
or
add
cmp
jmp
inc
rolb
cmp
push
push
pop
fs
test
sbb
cmpsb
pushf
int3
adc
pop
pushf
xrelease
subl
adc
mov
arpl
add
scas
adcl
rolb
orb
mov
loope
movsb
lock
testb
loopne
xor
adc
jl
loope
subb
sbb
or
outsb
ret
jb
loopne
leave
add
movsb
test
push
add
push
bound
andl
push
ljmp
adc
or
add
or
push
push
adc
icebp
lea
dec
jns
jg
mov
fadds
ret
ret
sbb
add
xchg
ret
outsb
aaa
int3
enter
sbb
out
push
add
rcll
mov
lods
in
loop
xchg
rcrl
adc
and
and
mov
dec
or
or
sub
or
ret
jge
imul
popa
icebp
mov
xor
dec
or
pop
addb
jne
leave
sub
repnz
mull
push
adc
and
fimuls
lret
jo
stos
rorb
orl
rorb
cmc
inc
or
aam
ds
leave
loopne
inc
add
outsb
test
push
add
rcrb
push
in
xor
cmp
adc
push
xor
add
stos
scas
cmp
push
mov
jno
mov
xlat
inc
jl
sbb
sahf
xchg
cmpsb
test
or
add
clc
push
add
adc
adc
js
cli
cmpl
les
lret
jmp
or
push
and
mov
call
dec
or
adc
ljmp
clc
sbb
sub
cmpsl
push
sub
xchg
rcl
sbb
fimull
pop
mov
adc
fs
push
or
out
ret
xor
cli
sbb
sbb
inc
adc
push
loope
pop
inc
cli
push
or
adc
jne
lds
ljmp
lods
scas
fists
idiv
adc
adc
xchg
sub
or
test
into
sbbb
adc
jl
les
mov
pusha
sbb
test
and
loope
adc
icebp
ja
push
add
ljmp
insb
inc
adc
mov
rorb
pusha
lds
inc
fwait
in
pop
xor
mov
and
nop
adc
add
add
pop
mov
or
rcrl
mov
add
sub
ss
loope
cmpl
jns
out
mov
inc
push
les
sbb
data16
bound
jbe
pusha
sti
adc
loop
mov
sbb
sub
or
push
mov
daa
add
addb
ljmp
mov
adc
into
test
mov
adc
xor
jo
ljmp
or
pop
mov
test
das
mov
rolb
pop
and
fimull
xor
jmp
cmp
mov
rol
mov
out
or
into
or
clc
inc
adcb
lret
add
add
es
ret
push
sbb
call
repnz
and
jl
add
or
mov
sub
mov
icebp
ret
popa
and
or
lcall
inc
cmp
pop
ljmp
inc
icebp
push
push
clc
or
ret
loopne
hlt
push
movb
mov
add
sbb
icebp
push
pop
fldenv
shlb
int3
push
or
cmpsb
loope
cs
adc
inc
inc
fnstsw
xor
push
dec
roll
orl
inc
adc
enter
sub
push
push
mov
add
sahf
inc
push
push
xor
sub
push
add
mov
cmp
or
divb
xchg
popa
and
shr
push
jbe
xor
ljmp
mov
lods
loop
xor
or
push
popf
pop
rolb
lods
push
insb
ret
in
mov
add
add
sbb
sub
jle
or
pop
cltd
std
and
jbe
jo
into
cmc
push
jecxz
xor
sub
lret
dec
sub
pop
mov
mov
cli
jns
and
arpl
sbb
push
xor
sahf
hlt
ret
inc
xchg
mov
enter
or
in
lret
and
jle
movb
popa
in
mov
inc
rclb
sbb
test
push
loope
cli
nop
js
lea
shr
shlb
mov
lods
add
mov
stc
mov
movsb
inc
push
lock
lcall
xor
loop
or
adc
mov
xchg
add
push
insb
mov
push
pop
adc
or
out
and
xchg
or
bound
push
mov
cwtl
dec
sbb
cmpsl
adc
jae
mov
pop
mov
int
movsb
add
xchg
add
xchg
rcll
jmp
or
std
sub
or
sarl
notb
loop
dec
or
pop
lods
sbb
gs
xorb
ret
and
xchg
jb
xchg
dec
add
pop
mov
sub
lock
mov
popa
nop
cmp
loope
xor
das
adc
maxps
call
push
xor
mov
inc
jo
jns
cs
mov
loop
push
pop
mov
pop
push
mov
mov
sbb
push
add
mov
div
add
xlat
dec
dec
clc
out
je
jne
mov
or
fwait
and
adc
push
mov
xor
push
outsl
pushf
aam
sahf
dec
mov
dec
mov
outsl
mov
and
or
sub
xchg
and
jp
inc
add
loop
lods
fnsave
push
into
in
mov
or
clc
jmp
mov
add
test
push
add
or
push
aaa
cmp
dec
lret
cmpb
sub
scas
pop
dec
bnd
scas
push
lock
ds
sub
stc
pop
js
add
dec
jbe
mov
sahf
add
push
inc
cmp
shr
rcll
shrb
mov
outsl
shrb
and
shrl
add
or
mov
and
inc
or
pop
clc
loope
mov
dec
loopne
mov
dec
pop
int
jecxz
pop
dec
sub
in
cmp
outsb
adc
loope
call
push
push
add
mov
push
mov
shl
arpl
or
mov
shr
icebp
jmp
rcrl
pop
dec
cli
add
rolb
cmp
or
or
xchg
rorb
inc
sbb
or
push
and
js
add
jge
jmp
and
pop
pop
or
data16
mov
adc
int3
lods
sahf
add
xchg
add
enter
loope
test
push
loopne
movsl
push
gs
mov
int3
xorl
jb
nopl
add
daa
rol
adc
xchg
pop
inc
and
push
pushf
rorl
loope
imul
xchg
push
push
jns
lret
or
addb
ret
cmpsb
xchg
pop
push
or
or
rcrl
jmp
rcrb
js
or
mul
out
nop
inc
jl
shrb
add
jne
sbb
sub
pop
lcall
sbb
add
add
jmp
lock
popa
imul
addr16
dec
daa
cli
rol
lods
sbb
add
movb
jnp
jae
popa
jnp
sbb
push
shlb
adc
ljmp
lods
loopne
mov
notb
std
into
into
mov
js
popf
or
xor
imul
pop
rolb
scas
add
xchg
inc
push
xor
loopne
rcll
pop
loopne
sub
sub
mov
mov
xchg
cwtl
outsb
sub
add
jb
pushf
js
in
xor
sub
or
movsb
bswap
rcrb
test
inc
dec
jb
lock
cmpl
ret
push
mov
xchg
mov
jb
cmp
movb
ds
data16
call
sbb
sbb
jnp
lock
into
jmp
enter
add
cmp
or
sbb
icebp
mov
jl
add
ds
mov
push
push
lods
je
cli
push
jno
xor
inc
or
inc
sbb
pop
inc
dec
dec
roll
push
daa
mov
mov
mov
add
pusha
add
scas
or
push
cmp
je
subb
pop
add
pusha
hlt
mov
shrl
in
xchg
jo
aad
push
sbb
dec
add
or
sahf
out
sbb
call
add
dec
int3
in
shll
sub
add
inc
jp
push
lahf
cmpb
push
ret
sti
push
or
mov
or
fadds
pop
aam
cmp
mov
add
mov
sub
push
call
push
mov
lret
mov
inc
mov
jbe
jge
and
mov
icebp
pop
push
pop
cld
ljmp
push
in
xchg
and
cmpsb
int
sub
sub
lret
lods
or
dec
mov
pop
add
ljmp
and
movsb
stos
or
ret
pop
and
es
stc
push
jo
ret
cmp
ror
test
xor
js
int3
push
adc
push
jp
arpl
addb
dec
ss
sub
adc
xchg
mov
sbb
leave
adc
mov
and
into
dec
lret
xchg
dec
and
call
rcl
test
ret
sbbb
out
and
add
adc
and
jo
into
icebp
sbb
inc
test
fsubrl
push
jne
sbb
setae
dec
pop
cmp
bound
rolb
push
mov
and
imul
sarb
ljmp
andb
lret
push
call
sbb
push
sbb
movsl
xchg
push
inc
mov
dec
rorb
mov
imul
adc
test
aad
and
mov
pop
rcrb
insl
jb
movsl
push
lahf
out
jge
push
inc
andb
push
push
xor
iret
sbb
sbbb
add
or
push
sbb
inc
imul
xchg
cmp
les
rolb
pop
inc
pusha
test
xchg
lock
loop
cmp
push
pop
add
enter
push
inc
mov
sahf
and
adc
rcrb
jmp
push
cmpl
or
xchg
jl
push
sbb
adc
xchg
js
or
stc
add
xchg
in
or
add
lock
test
ss
test
fists
or
jmp
popa
cli
daa
dec
push
adc
adc
push
adc
or
pop
pushf
int3
or
loopne
add
add
and
mov
jl
pusha
movsl
test
cwtl
loopne
xchg
sub
ret
sarb
sub
sbb
add
sarl
jo
sti
enter
dec
pop
sub
dec
mov
fldz
adc
push
push
inc
jecxz
addl
or
xchg
mov
ljmp
shrb
ret
cli
inc
pop
loop
add
push
push
jo
dec
test
adc
pop
cwtl
rorb
jo
push
push
mov
or
xor
adc
shll
stos
aaa
dec
adc
xor
inc
rcll
cmpsl
sbb
rcll
mov
cmp
stc
add
leave
push
pop
sbb
pop
push
jp
pop
pop
or
push
mov
fidivrl
shrb
or
cmp
popa
xchg
into
sbb
test
mov
adc
push
add
mov
sbb
andb
mov
push
cld
and
mov
iret
xchg
push
inc
das
add
enter
and
push
data16
imul
cmp
bound
mov
jl
sbb
xor
and
addb
loopne
sub
mov
test
and
call
xchg
divb
mov
mov
and
dec
push
pop
push
cwtl
add
cmpb
pop
and
jl
scas
test
stos
jmp
add
in
push
int3
jo
dec
mov
xor
dec
test
jo
rorb
sbb
lret
int3
sub
jmp
push
xor
push
sbbl
add
outsl
mov
jo
int
orb
and
add
insb
and
push
mov
adc
iret
add
lock
ffree
add
jbe
push
icebp
adc
inc
and
fdivs
dec
shl
icebp
push
adc
sahf
pop
inc
xor
or
popf
call
pop
cli
into
adc
cli
jae
add
loope
or
add
sub
out
dec
lods
lahf
xchg
lahf
mov
mov
test
cs
push
and
inc
push
mov
loopne
sbb
push
stos
aaa
test
adc
and
or
xchg
or
push
dec
cmp
or
jmp
nop
test
jge
dec
sbb
jo
repz
fcmovb
add
in
inc
push
stos
xor
pop
movsl
jbe
clc
pop
faddp
and
icebp
movsb
adc
adc
sub
xor
pushf
mov
rcll
or
call
add
orl
popf
test
shlb
test
loop
das
inc
and
daa
sbb
dec
jo
adc
sbb
xchg
push
les
mov
hlt
in
out
adc
cwtl
je
stc
add
aam
and
pop
pop
lods
icebp
push
clc
adc
mov
sbb
mov
or
gs
addr16
sbb
dec
cmp
call
jge
lock
adc
es
push
push
add
add
js
adc
lock
stos
sbb
ret
mov
movl
adc
lahf
icebp
popa
shl
stc
sbb
push
mov
sbb
jo
adc
js
inc
dec
insb
mov
push
shlb
push
inc
mov
adc
enter
jo
add
xchg
rorb
or
inc
or
cmp
cmp
test
push
push
push
enter
push
inc
rol
mov
outsl
sarb
dec
insb
sub
and
cmp
es
dec
or
insb
sbb
xor
sub
in
inc
sbb
mov
lock
mov
sbb
cmp
add
push
mov
lods
dec
dec
rolb
push
inc
or
adc
pop
ljmp
insb
jb
bound
cmp
sbb
dec
mov
sub
aad
test
or
ljmp
sahf
sbb
test
inc
mov
adc
sub
inc
cmp
stos
lahf
shlb
dec
cmp
push
push
sbbb
dec
js
mov
fidivl
pushf
rcrb
repnz
cmp
pop
les
push
jmp
or
enter
add
adc
xorl
push
pop
ror
int3
sbb
and
je
stc
pop
mov
xor
push
jne
sbb
push
mov
pop
adc
jle
ret
fidivrs
movb
cmp
xchg
lods
or
fs
jb
add
sbb
or
sbb
mov
xor
mov
xor
pop
test
mov
cmp
jecxz
fcomps
icebp
pop
rol
filds
mov
fstp
ficomps
sub
push
cmpsl
enter
adc
cmpb
mov
and
test
sub
mov
and
add
loopne
movsl
dec
ret
adc
adc
pusha
jge
shll
sbb
push
mov
pop
addr16
addr16
push
aam
add
movb
sbb
mov
adc
pop
data16
pop
cmp
mov
push
xchg
pop
test
movsb
cli
or
test
mov
xor
push
mov
jns
dec
fdivs
mov
add
sbb
bound
mov
or
hlt
dec
xor
jo
rolb
add
jo
sarb
gs
sahf
movsl
jecxz
jp
or
lcall
sub
and
or
les
pop
mov
pop
je
test
or
push
ja
lahf
xor
pusha
push
movsb
lret
sbbl
adc
stos
pusha
sbb
imul
pop
loop
rcr
push
xchg
rolb
or
and
jno
rcrb
inc
pavgw
pop
ljmp
mov
inc
jecxz
scas
into
sbb
or
add
rclb
fwait
mov
lock
xchg
sbb
call
jle
and
mov
dec
jecxz
and
push
inc
ret
and
or
push
add
or
cmc
and
cltd
xchg
lock
and
and
test
roll
push
sbb
mov
cmp
ss
cmp
ljmp
sbbl
push
hlt
jl
jno
test
das
mov
sbb
jb
std
mov
adc
shrb
jmp
cmpunordps
add
dec
pop
out
or
cmp
push
push
sub
popa
add
push
pop
inc
test
adc
cwtl
adc
and
xchg
xchg
mov
jb
sbb
dec
loopne
or
in
lret
jmp
mov
dec
js
inc
jmp
pop
mov
subb
xchg
mov
pop
test
xor
sbb
es
lock
xchg
movsl
ds
sbb
or
add
pop
mov
rcrb
sbb
shrb
notb
bound
cmp
mov
repnz
jl
sbb
nop
jge
sub
add
in
iret
push
es
adc
dec
pop
pop
xor
lock
lea
pop
xchg
movsl
or
dec
adcl
or
add
or
stos
pop
add
jle
aam
xchg
mov
insl
adc
adc
mov
es
pop
mov
dec
xchg
shl
cmp
adc
ret
xlat
negl
add
mov
jp
out
cmovp
adc
inc
rorl
xchg
lods
cmpsl
jne
xlat
movb
js
sbb
stos
and
rcrl
lods
add
mov
dec
divps
jb
push
gs
sbbb
or
or
cmp
push
dec
stos
imul
jmp
lcall
pusha
stos
rcrl
loopne
in
rcrl
or
into
insb
adc
lock
push
xorl
ficoml
push
fisubrs
pushf
shrb
sahf
xchg
adc
ret
in
pop
pop
iret
sbb
or
sbb
lahf
test
push
and
scas
mov
pusha
adc
cmp
out
dec
push
lods
in
out
add
add
lods
les
lea
adc
lds
inc
negb
inc
shlb
pop
sbb
mov
movsb
jo
pop
test
pop
rol
notb
pop
sub
cmp
push
pushf
dec
sub
fisubl
fmulp
aam
mov
mov
or
mov
cmp
decl
lods
pop
adc
jmp
addr16
add
sbb
mov
xchg
lcall
bound
das
jge
push
push
adc
add
cwtl
mov
or
or
les
mov
pop
lret
cvtpi2ps
cli
push
xchg
test
adc
into
xchg
inc
inc
adc
into
scas
test
adc
sbb
and
pop
mov
xor
js
adc
or
and
xchg
cmp
lcall
stos
ja
test
push
enter
ret
pop
push
fld
jo
and
ja
icebp
pop
repnz
xlat
shl
inc
jbe
testb
les
pop
lock
lods
pushf
push
pushf
das
adc
cmpsb
xlat
sbb
lret
repnz
xor
jp
ret
cmpsl
mov
iret
adc
pushf
into
mov
adc
and
out
mov
pop
hlt
jle
push
test
cli
subb
dec
mov
jp
or
jl
xlat
mov
loop
mov
xor
dec
push
insb
jle
rclb
xchg
add
and
sahf
adc
or
loope
xor
sub
or
mov
ds
jb
push
mov
cmp
leave
xchg
lcall
mov
je
lock
adcb
xor
movb
cltd
sbb
pusha
scas
xchg
sbb
sbb
adc
loope
dec
sbb
and
fidivl
mov
in
outsb
push
mov
push
or
jae
mov
lcall
stos
sbb
jl
loope
cmp
je
cmp
push
adc
or
addl
sub
imul
ret
shlb
dec
cmp
mov
retw
add
inc
push
pop
pop
int
mov
pop
mov
and
sbb
rorb
movsl
fucompp
pop
rcll
jecxz
into
aam
fcmovbe
dec
xor
adc
call
or
add
or
inc
rcll
inc
sub
add
mov
push
mov
mov
cmpl
loope
fistps
push
into
mov
imul
ljmp
cmp
push
popf
jecxz
jbe
xchg
cmp
cmp
cmp
aaa
lock
popa
push
loope
mov
enter
and
cs
rolb
pusha
sub
mov
sub
xor
ret
pop
sbb
nop
mov
push
test
push
bound
fs
inc
cmp
jo
sahf
mov
and
xchg
sub
or
loope
sub
jle
push
addl
push
cmp
jg
or
or
ret
pop
ljmp
incb
test
clc
sbb
jge
les
inc
pop
fiadds
jecxz
lods
jo
in
cli
or
fcoms
xlat
sub
and
aam
and
push
adc
push
mov
shl
jp
adc
sub
xor
adcl
push
push
push
xchg
js
jmp
add
jecxz
sub
jecxz
lea
clc
push
adc
lds
shr
mov
les
mov
cmp
clc
cli
add
xor
mov
out
sub
rorl
pop
in
push
push
or
adc
lock
jno
or
lds
popf
fmuls
les
push
pop
enter
out
sub
push
pop
inc
mov
push
rcrb
pop
mov
adc
add
pop
loope
adc
pop
add
cwtl
sbb
adc
sub
push
sub
xchg
add
sbb
push
sbb
or
les
outsb
aad
rorb
add
xchg
mov
sub
dec
hlt
shlb
pop
lods
add
push
mov
jmp
add
lahf
sahf
clc
dec
pop
pop
jnp
add
ss
add
sbb
int3
call
std
xchg
fcompl
adc
pop
mov
xchg
mov
cli
add
cmpsl
pop
rolb
icebp
xchg
add
inc
cs
push
stos
scas
adc
andb
add
add
js
int3
mov
add
test
outsb
sbb
repnz
dec
xchg
mov
adc
mov
sub
stc
and
mov
sbb
decl
mov
push
or
sahf
nop
cmp
and
je
dec
add
pusha
fimuls
nop
pushf
ljmp
push
stc
pop
push
dec
inc
sbb
add
or
stos
clc
rorb
test
or
add
iret
dec
imul
sbb
loope
or
mov
xchg
xchg
xor
in
bound
mov
sbb
cvttps2pi
rolb
inc
add
adc
sub
aaa
in
sub
clc
mov
enter
stc
imul
cli
push
xchg
stos
add
dec
pop
mov
cmp
rorl
sub
push
cwtl
mov
clc
pop
dec
xorb
push
cmp
repnz
adc
mov
mov
rolb
push
clc
push
adc
jbe
push
xchg
xor
sahf
imul
aaa
push
adc
mov
movsb
push
xchg
movsl
out
adc
add
popa
or
lock
mov
push
movsl
loopne
mov
add
mov
sahf
rorb
pop
test
push
xor
ret
imul
lock
or
dec
jno
shld
mov
inc
adc
mov
push
arpl
lret
into
out
push
and
push
push
stos
cmpl
and
in
or
inc
call
xor
adc
in
mov
shlb
daa
pop
pusha
dec
int3
add
inc
sub
add
call
sar
mov
push
dec
insl
sbb
add
add
add
cwtl
sbb
sti
adc
aas
test
sbb
pop
aaa
nop
or
inc
stos
repnz
dec
movsl
add
xchg
icebp
or
mov
lahf
arpl
add
mov
hlt
sbb
pop
outsb
icebp
xor
subl
pop
mov
adc
or
cmc
jecxz
aad
ljmp
add
sti
or
jo
or
les
adc
mov
lea
rorl
push
push
mov
gs
movsb
adcl
xor
shlb
cmp
or
or
loope
cli
cmp
jne
sub
cmp
cld
and
popa
rolb
pop
mov
mov
incb
lea
shlb
stc
add
mov
leave
sahf
je
lods
in
add
adc
inc
inc
cmp
jecxz
sub
or
imul
sbb
push
xor
sbb
xchg
rorl
es
dec
sub
push
xchg
ljmp
or
and
pop
loope
mov
cmc
mov
inc
bound
add
pusha
aam
test
jo
adc
adc
add
inc
ficomps
or
bound
push
jle
movsb
and
xlat
faddl
pop
scas
lods
pusha
aad
fsubs
add
push
loopne
dec
cmp
mov
clc
push
sbb
mov
sbb
cmp
fs
in
stc
fs
add
addl
jno
add
mov
or
sti
imul
cmp
push
mov
push
xor
pop
fmul
dec
mov
loope
das
mov
daa
call
xchg
cmp
add
push
jp
inc
push
aas
jecxz
or
shrl
sub
mov
hlt
sbb
push
and
adc
add
js
lret
int3
or
loopne
test
dec
inc
add
mov
rolb
pusha
pop
sub
fcoms
inc
push
sub
add
call
into
adc
push
sub
leave
dec
add
sarl
jb
dec
push
inc
aam
or
adc
mov
or
push
adc
xchg
cmp
sqrtps
or
mov
adcb
or
xchg
les
jbe
push
xor
movsl
mov
push
addl
mov
rcrb
xchg
add
xchg
in
sbb
push
mov
xchg
loop
cli
push
scas
bound
aam
xchg
fsubs
pop
shlb
adc
inc
mov
add
add
mov
or
icebp
cmc
dec
pop
je
shlb
add
dec
rcrl
mov
add
xor
or
mov
sahf
lret
push
push
hlt
scas
rcrl
sbb
sbb
add
daa
ds
inc
les
nop
fistl
mov
inc
and
add
test
mov
cs
add
clc
or
adc
cmp
inc
rolb
or
sbb
mov
in
mov
xor
xchg
movsl
nop
xchg
jge
lcall
sbb
mov
repnz
test
push
cmp
xor
mov
sbb
add
inc
sub
sbb
mov
push
jp
cmp
mov
dec
hlt
pusha
dec
push
into
in
inc
rorb
nop
lret
pop
inc
loop
shlb
and
ss
push
imul
xor
xchg
test
push
or
xacquire
push
mov
xor
sbbl
mov
add
sub
imul
inc
adc
lcall
aam
in
test
sbb
mov
sbb
push
mov
dec
js
xchg
enter
jl
aam
and
fs
sub
or
jae
add
or
adc
enter
fsubrl
int3
pushf
pusha
icebp
ret
mov
push
dec
pop
les
rcrb
roll
and
or
sbb
or
xor
sbb
js
lock
push
push
lods
add
cltd
ds
add
sub
or
int3
sbb
or
loope
lcall
fsubrs
cli
jne
and
xor
jo
push
scas
jne
xchg
xchg
js
dec
adc
ret
mov
lock
fwait
xor
push
pop
mov
cwtl
xchg
xchg
call
hlt
mov
lock
sbb
mov
sbb
cmpsl
pop
and
pop
or
dec
movsb
xor
leave
icebp
addb
mov
cmp
push
or
dec
xchg
int3
div
hlt
cmp
lcall
xor
scas
mov
loop
add
fnstsw
pop
mov
pop
pop
out
or
mov
xchg
in
xor
jb
js
jecxz
inc
icebp
mov
inc
shll
pop
ljmp
dec
cli
cmp
bt
pop
pop
jl
les
les
stos
push
push
mov
xchg
ret
repz
leave
cld
stc
adc
aam
or
dec
ljmp
pop
dec
add
mov
add
xchg
cli
push
mov
ret
xor
add
mov
and
call
push
ret
cmpsl
lcall
int3
jns
push
adc
inc
das
rol
jecxz
insl
adc
dec
dec
xor
xchg
add
icebp
or
mov
or
mov
sbb
rorl
cmp
cmp
jg
sub
mov
sub
sbb
dec
lods
shll
iret
push
fyl2x
inc
pop
sbb
sbb
adc
pop
and
cs
sbb
cmp
push
sub
nop
push
mov
or
pop
or
je
sbb
mov
xor
sbb
jo
hlt
and
adc
push
das
loope
fisubs
sti
adc
pusha
sbb
lret
orl
inc
push
cwtl
shlb
mov
push
and
aaa
pusha
pop
test
test
es
repnz
sub
adc
cmp
push
repnz
cwtl
sbb
loopne
lret
mov
cmp
lods
or
sbb
push
xor
sub
enter
adc
push
or
ficoms
jecxz
das
jno
dec
adc
stos
pop
out
rclb
lock
sub
add
sarl
sbb
mov
push
push
lea
lods
sub
sbb
cmp
pop
pop
adc
sti
mov
push
mov
test
pop
pop
cwtl
inc
lods
rcrl
and
das
pop
or
lods
add
sub
add
xor
mov
aam
loope
sbb
or
ds
loop
fdivr
sbb
cld
xchg
int3
xchg
cli
jb
mov
push
stos
lret
ret
mov
dec
in
into
ja
inc
sbb
add
sub
pop
push
mov
add
push
pop
ret
ja
cmp
ror
shrl
and
ljmp
pop
loopne
xchg
icebp
and
inc
in
call
lods
clc
sbb
test
sbb
inc
pop
and
jecxz
push
inc
dec
lock
inc
loope
loopne
bound
cmc
outsb
out
mov
xor
pop
mov
sbbb
loop
sbb
clc
sbb
mov
ljmp
mov
sub
sahf
enter
mov
cmp
call
inc
mov
xor
sbb
lods
movl
js
rolb
nop
paddusw
rcrl
dec
fsubrl
inc
sarb
push
push
popf
pop
adc
not
test
adc
pop
testb
add
pop
adc
adc
mov
adc
das
mov
hlt
adc
push
ret
lds
push
adc
xor
add
dec
insl
rcl
push
push
adc
scas
and
adc
iret
inc
or
xchg
rcrl
bswap
xchg
sbb
or
pop
push
or
xchg
or
cmp
mov
cmpsl
pop
aam
ror
lcall
clc
in
scas
and
add
adc
sbb
adc
cli
je
sbb
orb
mov
mov
jl
dec
adc
rcrl
cld
xor
hlt
adc
adc
push
mov
push
sub
mov
and
repnz
cmp
cmp
sbb
xlat
xor
cmp
and
mov
popf
jno
cs
cmp
push
jmp
push
inc
add
dec
jb
mov
inc
lods
movl
xchg
dec
push
push
xor
add
xor
mov
jae
mov
pop
leave
test
push
adc
push
shlb
addr16
xor
jg
sbb
add
xor
clc
popf
leave
xchg
xor
push
call
cwtl
test
mov
jp
mov
sahf
adc
ret
dec
mov
rorl
fmul
or
mov
pop
add
repz
aas
sbb
sbb
and
stos
xor
push
pop
mov
mov
xchg
sbb
rcrb
xchg
push
mov
push
ljmp
or
xchg
xchg
adc
or
inc
pop
in
outsl
ret
out
sar
inc
leave
icebp
inc
sbb
xchg
xchg
movsb
ret
jmp
mov
sub
add
cmc
push
enter
jo
mov
clc
ljmp
into
pop
lret
mov
adc
xchg
sbb
dec
mov
aam
test
sub
jo
push
push
test
sub
mov
rorb
les
xor
into
or
bound
push
inc
push
fnsave
push
or
shlb
add
mov
ud2
mov
lret
mov
push
mov
pop
sbb
push
cwtl
sbb
jmp
test
sub
enter
add
enter
in
out
aad
cmp
dec
into
loop
cld
or
jmp
add
into
imul
jne
fsts
push
mov
xchg
cmp
int3
roll
push
in
shl
rolb
out
mov
add
cmc
jne
pushf
add
sbb
adc
mov
add
stos
enter
mov
mov
add
inc
cs
les
sbb
add
rcrb
cli
aad
add
mov
aad
mov
push
inc
lea
cli
pop
mov
hlt
rcll
or
lods
sbb
imul
mov
pop
int3
call
push
xchg
mov
lock
cmp
pop
fadds
rolb
mov
adc
cmp
fdivrl
push
xlat
add
inc
push
sub
daa
jmp
adc
add
pushf
push
or
mov
push
inc
rcl
lock
push
mov
and
pop
enter
xor
cmp
mov
call
movsl
push
xor
cld
test
shl
sub
loopne
and
sbb
shl
sbb
out
jo
add
mov
aaa
iret
push
dec
shlb
negb
test
addl
cmc
shrb
loopne
mov
mov
test
mov
ss
subl
sub
loope
test
testb
add
jmp
push
int3
xchg
mov
sub
jp
add
fs
cli
xchg
in
lret
mov
pop
mov
es
test
dec
xorl
cmp
mov
jg
xor
pusha
fsubrp
mov
cmp
adc
gs
pop
dec
xor
js
push
inc
inc
cli
pop
inc
inc
push
or
mov
dec
push
movsl
mov
xchg
mov
push
lods
dec
enter
ds
and
loopne
leave
pop
or
insb
inc
pop
js
xchg
pushf
push
sbb
add
andb
ret
icebp
pushf
jmp
les
xor
sbb
in
fwait
and
in
nop
jmp
mov
adcb
mov
pushf
adc
xor
xchg
sbb
add
nop
pop
dec
sahf
push
es
fs
pop
adc
or
fiaddl
sbb
dec
clc
push
pop
cmp
xor
push
aas
adc
js
cmp
sub
push
mov
inc
test
je
xor
jb
or
fs
sahf
andb
cwtl
adc
cli
sub
test
shrl
ret
lods
rclb
adc
add
xorb
adc
enter
or
jg
stc
shlb
push
pop
dec
pop
and
add
mov
leave
je
or
or
cs
fldl
xor
pusha
lret
stos
scas
inc
es
or
or
mov
sub
adc
dec
sarb
or
fnstcw
push
pop
or
jmp
stos
sahf
add
or
xchg
sbb
adc
scas
or
sub
xchg
ror
test
ficoms
pop
sub
cmp
and
sub
fistps
subb
lock
or
sub
xchg
xor
pusha
stos
jl
mov
into
pop
call
daa
add
sbb
nop
loope
lock
dec
add
test
ja
add
stos
or
pop
adc
ja
add
add
or
xchg
inc
jne
test
push
xchg
pop
sub
dec
push
fmuls
cmp
jb
or
add
mov
jns
or
jno
push
xor
or
pop
cmp
adc
cmp
sub
jo
fisubl
test
add
out
enter
jmp
aas
jmp
pusha
into
inc
pop
es
xchg
adc
pushf
mov
ret
sub
dec
jecxz
inc
pop
mov
cmpb
stos
push
or
jg
adc
push
ficoms
cli
mov
add
pop
loope
rcrb
notb
mov
dec
xor
adc
inc
daa
loop
cwtl
xor
in
and
fwait
enter
ret
inc
sbb
pushf
or
push
xchg
adc
andb
pop
adc
loopne
fisubs
shrb
push
adc
pop
and
loop
lret
xor
movsl
aam
mov
pop
mov
jmp
mov
add
mov
add
adc
sbbl
fisttpll
call
or
pop
push
cmp
sbb
push
stos
push
mov
jo
sub
sbb
mov
sub
pusha
std
ljmp
arpl
or
mov
aam
add
add
lock
addb
mov
leave
into
or
xchg
mov
push
icebp
and
lret
or
add
xchg
mov
adc
push
les
ljmp
cmp
mov
int
ljmp
xchg
or
mov
jo
and
btc
xor
pop
sbb
cmpsl
cmpsl
jo
push
ljmp
or
fsubr
push
fs
xchg
pusha
mov
stos
lds
xchg
enter
test
add
push
push
xor
xchg
imul
add
adc
xchg
inc
pop
push
pop
sub
xchg
ljmp
and
sbb
sbb
add
jecxz
adc
sbb
shll
inc
or
lcall
and
mov
add
inc
into
mov
cmc
xor
in
adc
stos
addl
and
lea
das
fisubl
sarl
cmp
rorb
push
mov
or
rorl
je
hlt
jmp
or
add
or
mov
outsb
and
jl,pn
or
adc
es
push
inc
cmp
in
cmp
pop
and
hlt
imul
testb
shlb
pop
inc
rorb
inc
sub
cmpsl
adc
adc
adc
lea
mov
jb
add
scas
inc
push
pop
mov
mov
jl
mov
push
les
mov
push
pop
movsl
test
lret
adc
mov
jo
movsl
or
jo
ds
sbb
add
mov
popf
inc
pop
gs
mov
pop
insl
or
clc
test
inc
add
add
or
pusha
cmpsb
lds
fldt
cltd
jl
or
sbb
divb
out
loopne
lcall
pop
scas
pop
sbb
ror
inc
movb
mov
adc
roll
xor
pop
shlb
push
inc
gs
fildl
jne
push
cmp
push
or
pop
cli
je
out
or
push
enter
or
inc
in
add
push
cli
inc
pop
push
rclb
push
adc
sbb
fcmovbe
ret
mov
popa
inc
pushf
mov
bound
mov
subl
pop
movsb
je
push
dec
adc
shrb
inc
cwtl
lods
and
sbb
and
inc
pop
outsl
out
and
inc
jns
adc
in
bound
adc
addr16
jnp
xor
lods
add
jnp
loop
ficoms
add
jae
mov
into
cmpsl
push
sub
push
xlat
or
dec
lods
mov
pop
ret
inc
mov
sub
push
js
shl
add
xchg
sarb
dec
pop
xchg
loope
dec
or
add
mov
aam
sbb
pinsrw
dec
jp
xor
inc
add
xchg
cli
xchg
adc
sbb
lret
andl
rol
shlb
mov
and
jae
cwtl
and
add
lret
stos
cmc
pop
aam
dec
or
and
cmc
test
sub
mov
popf
pop
inc
daa
pusha
inc
cmp
xchg
jmp
je
mov
ret
inc
lcall
dec
add
jne
xor
je
daa
in
adc
call
sbb
shrb
jo
or
addl
in
push
aaa
lret
or
mov
rcrb
and
pushf
jbe
stc
mov
cmp
adc
pop
inc
lret
xchg
pop
cmpl
xchg
pop
arpl
ror
loop
rclb
cli
mov
sbb
add
push
xor
test
push
adc
call
cs
jbe
inc
loopne
or
sbb
add
scas
pop
ljmp
or
dec
mov
out
je
pop
and
stc
sub
bound
xor
add
sub
pusha
push
push
xchg
push
mov
out
pop
mov
xor
fsubr
and
dec
add
inc
jnp
rol
adc
mov
inc
add
rolb
pop
pop
push
mov
cmp
call
test
sub
dec
xchg
xchg
add
adc
pop
dec
pop
push
adc
sbb
dec
pop
push
icebp
pushf
sahf
sbb
and
gs
test
adcl
push
inc
mov
inc
pop
loopne
mov
inc
pop
fisubs
aad
inc
or
scas
add
inc
mov
push
sub
imul
in
and
adc
mov
lock
adc
adc
or
js
repz
push
sbb
ret
ret
rolb
lock
add
and
ret
sbb
adc
pop
mov
lods
or
pop
hlt
aam
xor
addb
mov
add
sbb
loopne
cmp
ret
and
jl
push
xchg
or
xchg
mov
movsbl
pusha
jp
daa
inc
sbb
mov
pushf
mov
dec
loopne
push
ljmp
lods
cs
or
sbb
xchg
xchg
inc
adc
mov
in
dec
gs
lock
jo
sbb
nop
nop
mov
fimull
or
or
sub
dec
mov
cmp
sbb
xchg
shrb
dec
lret
mov
aam
mov
jno
xchg
sbb
sbb
call
sbb
inc
imul
aas
dec
pop
lods
push
stos
cmpsb
or
fs
jo
jne
stos
dec
jmp
pusha
and
testb
subl
and
push
idivb
outsl
in
inc
iret
int
ret
call
in
adc
hlt
leave
mov
push
jl
xor
sub
sbb
add
test
add
nop
lcall
ss
sub
lea
lcall
mov
add
jo
stc
inc
enter
push
sub
sbb
inc
sbb
sub
add
ret
dec
adc
or
movl
inc
bound
ss
and
xchg
jb
xor
js
adc
add
in
cmp
pop
or
loop
lock
popf
imul
push
arpl
jmp
sub
jecxz
bound
pusha
cs
xchg
dec
call
jno
subb
inc
jno
dec
fdivrl
cmp
add
leave
mov
adc
mov
in
scas
hlt
jmp
sarb
dec
mov
sbb
xchg
fstps
xor
push
ret
add
andb
pop
rcrb
out
rcl
mov
arpl
rcrl
pusha
jg
xor
adc
mov
adc
inc
mov
inc
imul
cmp
xchg
push
push
adc
xchg
ret
sbb
adc
leave
mov
and
adc
shrl
test
out
add
pop
in
pop
loopne
push
mov
cmp
cmp
outsl
mov
adc
jp
sbbb
inc
fnstcw
loop
xor
add
nop
es
not
fsts
xor
push
addr16
pop
test
cmp
movsb
push
adc
adc
das
sar
or
cs
nop
dec
mov
jl
adc
mov
sbb
push
lods
mov
sbb
jae
pop
and
xchg
xor
loopne
mov
daa
pop
jne
mov
rcrb
aad
lret
pop
sub
fdiv
pusha
repnz
dec
add
mov
pop
sub
and
or
sbb
andl
les
and
push
pushf
out
add
out
mov
mov
cwtl
push
jo
or
call
cmp
adc
jns
pop
dec
mov
movsb
aam
or
jmp
ret
mov
adc
fs
sub
pop
enter
rorb
lds
movsl
push
addr16
out
lds
mov
inc
add
js
mov
leave
stos
mov
jb
mov
test
mov
clc
dec
ret
lahf
gs
fwait
sub
jmp
jmp
loopne
loope
add
push
mov
in
pop
push
mov
rol
dec
cmp
add
xchg
mov
addb
je
mov
add
ljmp
mov
xchg
lret
dec
fsts
jb
or
push
cmp
sbb
add
jb
out
and
add
mov
jo
dec
int3
and
xchg
rolb
into
lods
sbb
movsl
push
dec
movsl
xor
xchg
aam
loopne
pop
stos
add
or
xor
inc
inc
addr16
cwtl
test
cmp
adc
loope
xchg
popa
imul
push
call
roll
out
mov
xor
sbb
data16
cmp
mov
or
pop
adc
add
adc
cmp
cs
icebp
cltd
mov
or
push
push
js
xor
imul
ffree
pop
sbb
push
jne,pn
sahf
mov
sbb
loopne
call
adc
push
mov
and
sbb
clc
ficoms
mov
rcll
dec
push
sarl
add
sub
cwtl
and
sbb
pop
sbb
inc
loop
xchg
lea
xor
or
push
lods
cmp
or
add
push
stos
dec
xchg
jmp
inc
xchg
mov
dec
pop
ret
add
iret
or
xor
xor
out
sahf
push
dec
push
inc
cld
test
rorl
rclb
cmp
xor
mov
sbb
pop
ret
mov
sbb
sbb
or
adc
sub
sbb
sbb
out
sbb
arpl
add
imul
cwtl
pop
adcl
jo
nop
add
pop
mov
or
add
sbb
pop
sbb
xor
jp
push
pop
push
xchg
and
je
pop
out
lret
cld
lret
std
lret
push
cmp
jecxz
jnp
repnz
sarb
push
push
xchg
push
and
pop
and
mov
lock
sbb
pusha
lea
orb
call
or
jle
jo
rcrb
xor
xchg
add
jmp
inc
mov
pop
mov
fsubl
mov
mov
ret
ret
leave
fs
enter
adc
daa
push
cmp
adc
call
push
popa
add
sub
mov
sbb
test
pop
aam
ret
cmp
call
cwtl
push
dec
cmpsb
dec
mov
and
sahf
cmp
sbbl
stos
add
addl
push
mov
or
adc
sbb
rcl
cmp
shlb
pop
adc
into
mov
incb
push
sub
adc
mov
pop
sbb
inc
adc
adc
and
fcmovnb
and
mov
dec
inc
sbb
into
sbb
mov
loop
push
je
pop
fcoml
roll
icebp
loopne
sub
push
mov
and
push
jp
sub
sbb
aaa
add
or
ret
dec
add
les
in
sbb
or
loopne
sub
pmovmskb
inc
inc
pop
imull
or
fs
inc
pop
adc
nop
in
and
or
enter
ljmp
sbb
repnz
movb
pusha
jl
jp
int3
rol
mov
xor
sbb
push
and
pop
xorb
xchg
add
scas
sbb
push
pop
jg
sub
or
ret
in
xor
xorl
lea
pop
testb
jg
faddl
mov
cmpsl
xor
lock
arpl
adcb
xchg
sub
xor
rclb
stc
lock
mov
add
push
sub
loope
popf
cmpsb
pop
sbb
xchg
mov
sbb
push
cwtl
adc
xor
jp
clc
inc
jmp
cmp
pop
pushf
imul
clc
push
fwait
or
mov
mov
adc
stos
mov
or
test
pop
inc
repnz
and
push
cmp
fidivs
or
loope
cmp
push
xor
sbb
add
mov
jecxz
pusha
lret
lds
pop
xchg
pop
xor
mov
adc
and
daa
add
push
lods
mov
mov
sbb
test
adc
sbb
and
imul
inc
and
aas
aam
scas
repnz
movb
andb
or
cmp
inc
mov
test
mov
popf
mov
repnz
mov
adc
xor
ficoms
mov
pop
jmp
test
sarl
inc
mov
push
xor
lret
mov
cld
shrl
push
sub
cmpb
lock
mov
shlb
xchg
ljmp
adc
sub
mov
je
xorb
adc
js
hlt
xchg
mov
inc
cmp
xor
decb
and
push
ljmp
loop
dec
inc
and
rclb
or
jmp
mov
push
cs
out
repnz
mov
adc
into
jne
push
scas
push
jb
nop
inc
adc
fmulp
movsl
pusha
pop
test
jo
and
and
mov
sbb
lock
mov
cmp
mov
cwtl
addb
popa
xchg
scas
push
push
sbb
iret
inc
mov
jge
ret
fs
jno
sbbl
insb
jbe
lods
pop
test
push
or
xor
pop
add
xor
mov
mov
add
and
je
dec
and
push
xchg
push
mov
mov
fs
jmp
push
test
xchg
aam
add
jl
mov
xchg
lock
lock
add
jl
test
dec
xor
cli
test
sbb
push
addl
jmp
loop
mov
movsb
loope
shr
lret
sarb
shl
mov
mov
cld
and
dec
sbb
mov
jmp
int
pop
jl
nop
cmp
mov
mov
pop
mov
pop
rclb
mov
cmp
dec
rclb
push
adc
push
sbb
aam
nop
jno
add
or
icebp
inc
js
sti
jl
inc
cmp
shr
stc
clc
lock
shll
or
shl
cmp
sarl
jno
sbb
push
mov
add
lock
push
add
cli
sahf
sbb
aam
call
mov
add
jbe
mov
adc
xor
sbbb
mov
mov
lret
addr16
and
push
ret
or
push
add
adc
scas
push
enter
add
mov
in
popf
add
push
cmp
sbb
gs
sbb
add
dec
mov
push
xchg
mov
ret
mov
mov
je
addr16
rclb
add
shlb
out
xchg
aaa
xor
push
sbb
sbb
push
mov
push
ret
sub
adc
xor
jo
mov
push
ret
subl
push
fstl
test
es
mulb
lock
aas
adc
rolb
adc
mov
sub
repnz
mov
cmc
pop
push
xchg
sbb
popa
sbbb
pusha
xchg
pop
push
add
int3
loope
add
or
nop
inc
cmp
inc
rorb
push
ds
sub
lock
xchg
aad
hlt
mov
sub
call
or
cmp
mov
jne
xchg
fs
les
sub
daa
call
or
test
movsb
mov
out
and
aad
or
unpcklps
and
icebp
xor
call
jl
xchg
mov
sbb
sbb
fidivs
in
adc
mov
lock
jb
mov
ret
add
sub
mov
add
cmp
mov
mov
push
hlt
lret
and
les
ss
dec
sbb
sbb
inc
testb
xor
popf
pusha
xchg
ret
bound
in
popa
loopne
jae
xchg
enter
loopne
pop
mov
das
cwtl
xor
movsb
pop
xchg
scas
inc
inc
mov
sbb
add
dec
loopne
or
movsb
imul
ds
je
push
int3
cmp
sbb
repz
imul
xor
add
mov
nop
push
xchg
sbb
push
pop
test
dec
lods
dec
sub
mov
gs
xchg
push
loope,pn
or
test
out
sarb
push
rdtsc
cwtl
je
cwtl
lret
rolb
stos
testb
dec
fimuls
or
xchg
scas
inc
mov
adc
adc
lock
fbld
push
push
push
pop
addl
inc
mov
or
nop
adc
push
or
add
pop
or
pop
nop
lret
ljmp
adc
inc
scas
or
ret
and
rclb
adc
ret
adcl
scas
pop
rorb
adc
mov
test
mov
jne
adc
call
clc
pop
add
sbb
dec
xchg
sbb
out
imul
cs
mov
push
repz
fcomp
jo
push
or
ss
test
clc
into
lea
adc
xchg
sbb
rorb
das
or
aad
sbb
aad
sbb
mov
insl
mov
mov
add
hlt
les
sbb
jmp
int3
js
sarl
xchg
adc
stos
shlb
adc
lock
nop
mov
sub
xor
sub
mov
hlt
xchg
sbb
push
and
ret
pop
push
push
insb
shrb
and
stc
sub
pop
addr16
bnd
ret
or
mov
sub
sub
pop
push
rorl
cmp
add
adc
dec
pushf
sahf
sub
mov
inc
add
sbb
push
adc
xlat
cmp
test
add
push
enter
add
and
sbb
rorb
scas
testl
push
mov
int
sub
rclb
mov
dec
sbb
popl
test
adc
call
xchg
stos
or
in
dec
sbb
int3
or
add
mov
stos
pusha
adcl
frstor
or
mov
shrb
sbb
cmp
in
add
arpl
jb
lcall
push
cld
mov
out
add
and
gs
jo
pop
adc
movsb
addb
xchg
sbb
dec
mov
adc
aam
js
or
sbb
fisttpl
outsl
in
rol
and
xchg
scas
loopne
xor
mov
mov
mov
sbb
cli
dec
sbb
push
aaa
pop
je
dec
cmp
push
dec
push
aaa
je
push
cltd
add
popa
and
or
orb
je
cmp
ljmp
scas
sub
cmp
lods
jbe
or
lock
jae
clc
clc
xchg
mov
sbb
sbbb
or
dec
leave
adc
pop
sub
in
jl
sbb
or
imul
fiaddl
insl
xchg
dec
sub
pop
scas
xor
push
cmp
adc
xor
sbb
xchg
inc
or
outsb
enter
lock
invd
iret
mov
cwtl
pop
pushf
or
or
or
adcb
clc
add
push
cmp
mov
sbb
and
mov
sarb
imulb
add
cmp
add
addl
scas
test
outsl
mov
dec
je
xchg
add
jo
popf
jne
cmovbe
and
xor
or
inc
bound
cmp
daa
jmp
cmp
jl
dec
rclb
add
movsl
cltd
test
and
adc
mov
mov
cmp
add
jge
cltd
loope
add
mov
jmp
adc
roll
jo
frstor
mov
adc
ret
rolb
sbb
lea
cmp
lcall
cmp
or
mov
aaa
bound
dec
insl
popf
dec
nop
enter
adcb
insl
push
rolb
insb
insl
mov
addb
ds
int3
mov
ljmp
cld
push
sbb
movsb
inc
js
lcall
test
push
cli
xchg
jle
adc
xchg
push
pop
pop
cmp
push
inc
jo
lods
inc
cli
or
adc
leave
sub
xor
cs
or
or
jp
leave
xchg
shll
rol
add
pop
adc
loope
insb
nop
cmp
xor
adcb
pop
sbb
and
lret
lahf
rcrb
icebp
pop
lahf
pop
cmpsl
stos
pcmpgtb
arpl
sbb
aam
out
cmp
add
or
sbb
or
jo
outsl
pop
cmp
mov
test
add
icebp
adc
imul
push
and
loop
dec
xor
pop
subb
sub
or
fs
cmp
sahf
jo
add
popa
out
add
fadd
lret
jecxz
cmpsl
sbb
imul
dec
xor
xor
fstl
cmp
rolb
add
ret
jmp
pop
sub
cld
jo
add
add
xor
subl
shrb
add
and
or
ret
orb
add
and
xlat
dec
or
clc
lods
push
daa
arpl
sbb
lock
bound
js
sbb
ret
dec
sub
aam
test
sbb
into
aaa
jno
shl
sbb
ret
mov
cli
push
push
pop
stos
pop
rclb
or
aas
imulb
cltd
test
mov
jnp
rorl
and
or
add
cmp
inc
xchg
cmp
mov
jge
in
inc
adc
push
cmc
jp
lods
enter
rclb
fs
cmp
incb
enter
daa
outsb
mov
or
ljmp
movsb
sahf
and
mov
cli
test
inc
js
fiadds
mov
mov
or
add
pop
pxor
add
push
add
enter
push
ret
inc
negb
push
adc
lcall
dec
mov
cmp
call
loop
cwtl
add
xor
insl
lds
or
insl
mov
adc
cmpsb
or
into
adc
inc
add
xlat
or
repnz
push
ret
outsl
mov
or
movsl
repnz
cmp
adc
xchg
sahf
or
ret
hlt
test
js
mov
or
js
jp
and
xor
adc
adc
enter
mov
jno
adc
xchg
rorl
or
test
add
and
xor
je
in
cmp
inc
cwtl
loope
test
aas
shlb
mov
adc
daa
sbb
mov
push
adc
cmp
or
sbb
cmovae
mov
inc
add
cmp
push
pop
mov
adc
hlt
imul
adc
ss
push
jp
aas
icebp
xchg
cli
adc
in
mov
pusha
xor
xor
mov
pop
sbb
ja
lret
or
fcomps
dec
or
sub
dec
add
adc
sbb
sarb
or
xchg
icebp
loop
shl
push
faddl
out
getsec
or
and
cs
jmp
mov
jl
mov
adc
xchg
add
or
adc
adcl
enter
mov
and
inc
ds
push
pop
pop
jl
test
add
adc
mov
lods
push
dec
jno
jne
and
dec
pop
sbb
inc
out
add
xchg
push
inc
push
call
or
sbb
sub
adc
jmp
stos
test
xchg
inc
dec
jge
push
sbb
and
push
sub
lods
cwtl
push
jp
lods
sbb
sub
sub
call
xchg
cmc
mov
or
jo
add
adc
roll
rcrb
lods
or
sti
test
lcall
xchg
sbb
mov
movsl
sbb
cwtl
lret
push
sahf
sti
mov
push
mov
ja
cmp
loopne
push
inc
jecxz
lea
add
xlat
outsb
rorl
aam
mov
pop
int3
pop
jp
mov
xor
xor
sbb
inc
mov
xchg
sub
pop
sub
jp
loopne
fsubrs
and
fiadds
outsl
imul
adc
test
adc
ss
pop
cmp
popf
push
pop
pop
adc
pop
inc
outsb
cs
pushf
and
jmp
inc
movsb
fbld
nop
dec
inc
xor
ljmp
lds
dec
add
push
add
xor
mov
orb
int3
add
or
push
test
cmp
xor
in
pop
or
dec
shlb
pop
cltd
or
or
push
les
shr
inc
mov
add
addl
add
sbb
or
fstps
icebp
ficoms
shlb
scas
into
push
ljmp
inc
rolb
or
sub
adc
int
xchg
jo
xchg
add
rorb
push
stos
mov
faddp
or
loope
cwtl
pop
xchg
mov
push
mov
rol
add
mov
loopne
jo
in
sbb
push
push
mov
mov
mov
dec
push
push
adc
ss
pushf
sub
and
mov
or
adc
adc
mov
sbb
sub
push
pop
or
pusha
lahf
fistpl
xchg
add
sbb
push
or
fisubs
scas
mov
or
mov
adc
mov
xor
xor
mov
cmpsl
je
aaa
clc
push
mov
inc
xorl
push
je
mov
push
inc
bound
sbb
and
jo
out
repnz
or
add
shlb
xchg
and
inc
sub
adc
add
sbb
sub
xor
push
add
xchg
or
adc
ret
cmpsl
and
icebp
add
and
sbbb
fwait
movsl
dec
roll
or
mov
rorb
pushf
movsb
mov
or
mov
jmp
sbb
mov
jle
sub
add
mov
pushf
push
dec
mov
pop
push
andb
sbb
lds
loope
mov
mov
adc
dec
or
lret
in
adc
xorl
movsl
add
jbe
inc
sbb
cmp
pop
mov
sub
mov
jp
or
dec
xchg
add
sbbb
scas
xor
add
test
push
and
daa
mov
add
rclb
cmpsl
adc
mov
shll
or
xor
incb
xor
pop
sbb
or
mov
push
jnp
test
ret
orb
fwait
mov
cmpl
fucomp
or
sub
jno
mov
movsb
vpunpckldq
mov
loope
pop
shlb
pop
outsl
ret
push
daa
rclb
ljmp
add
xor
je
imul
sarl
mov
cmp
nop
mov
sahf
push
lahf
xchg
js
rorb
int
mov
bound
and
es
cmp
dec
icebp
mov
or
jbe
test
add
mov
sub
xorb
movlps
mov
out
adc
cltd
test
jo
ror
or
sbb
sbb
rorb
insb
pop
inc
or
xor
test
pop
adc
mov
sub
imul
mov
adc
inc
cmp
outsb
xor
flds
push
ret
enter
sub
pop
xchg
daa
inc
push
orb
cmp
ret
je
mov
jae
jb
pusha
and
insl
mov
ljmp
add
or
add
mov
mov
add
and
dec
test
adc
mov
add
and
xor
orl
dec
ret
cmp
add
rcll
pop
add
into
incl
push
mov
enter
aam
inc
pusha
or
adc
xor
sbb
mov
xor
sbb
addb
push
cmp
push
sbbb
or
inc
mov
mov
pop
pushf
lahf
decb
or
ljmp
roll
jno
daa
mov
lods
ret
dec
or
ss
je
daa
test
and
dec
loope
test
les
insl
push
sub
sbbl
mov
mov
mov
push
add
sar
stos
addl
ret
out
cmp
mov
add
or
push
sbb
adc
sbb
sahf
push
push
rcrl
mov
xor
in
and
inc
ret
xchg
loop
sub
mov
add
inc
sub
xor
andl
add
sub
xchg
pop
sbb
loop
rolb
pop
pop
jns
bound
mov
jbe
and
push
pushf
pop
cli
xor
lods
push
push
lods
jne
pop
sub
adc
bound
test
lods
add
inc
jmp
jg
hlt
imul
mov
mov
mov
pop
sbb
push
add
jmp
push
pop
mov
and
mov
aad
icebp
lret
test
ret
xor
popa
insl
mov
dec
xor
data16
or
adc
xchg
icebp
add
movb
sahf
and
inc
jb
popw
push
loopne
add
pop
sbb
mov
adc
outsb
adc
add
inc
inc
cmp
xor
push
push
mov
lock
pop
push
push
sbb
fs
mov
xchg
cmp
icebp
pop
add
leave
stos
faddl
leave
xchg
pop
push
popl
loopne
sub
testb
lods
stos
repnz
cmp
push
lea
test
loopne
test
lods
aad
scas
es
mulb
inc
pop
into
out
out
test
arpl
clc
adc
jno
jmp
out
push
hlt
ss
roll
cli
adc
pop
jl
das
jl
xchg
or
mov
xchg
cmp
or
dec
ret
dec
pop
or
pop
in
inc
xchg
arpl
sub
negb
lock
sub
xchg
repnz
je
es
scas
lods
or
push
push
cld
add
popa
lods
into
adc
push
cs
fwait
pop
inc
leave
xor
into
lock
sahf
push
gs
js
mov
sub
fimull
pop
xor
into
sbb
fdivs
out
dec
rclb
adc
and
mov
ja
inc
and
in
adc
dec
dec
movsb
fadds
bound
clc
add
scas
lea
lahf
inc
or
mov
test
shl
adc
cmp
insb
jns
sbb
dec
xchg
lock
adc
mov
in
std
inc
dec
pop
dec
sub
or
js
test
and
or
adc
sub
jg
push
push
les
push
xor
xchg
add
mov
rolb
push
je
sbb
orb
adcb
mov
or
pop
cmc
mov
add
jp
pop
rclb
inc
aam
xchg
jo
push
and
lods
xchg
faddl
mov
add
or
push
or
fwait
jno
mov
loop
sbb
jle
test
aaa
cmp
push
add
add
jne
js
sbb
insb
mov
fidivl
dec
mov
add
and
rolb
xor
dec
outsb
adc
out
ret
inc
mov
dec
ljmp
int
cmc
jo
jbe
add
nop
mov
push
push
sub
nop
test
clc
fistps
and
mov
je
test
lret
sbb
add
aas
ds
pop
adc
ret
or
xor
add
cmc
outsl
lret
jo
inc
dec
cwtl
mov
sbb
sbb
dec
cmovne
and
xor
bound
je
xor
xchg
lret
or
sbb
dec
add
sbb
mov
inc
inc
out
sbb
lcall
stos
cmp
iret
lea
ss
in
movsl
rcrl
rol
repnz
test
aaa
inc
push
or
pop
add
dec
xor
push
in
repnz
into
dec
pop
rorb
rorl
adc
push
inc
lods
adcl
stos
sub
adc
loopne
icebp
xor
xlat
pop
dec
mov
ret
imul
sbb
add
inc
or
or
mov
add
lcall
setle
rolb
and
enter
hlt
xor
xchg
pusha
dec
sahf
add
loope
add
pop
jmp
pop
sub
push
dec
popa
rorb
add
mov
cld
add
mov
add
mov
aam
adc
adc
jg
leave
adc
pop
subb
add
push
add
add
add
add
stc
and
shlb
js
idivb
fsubrl
pop
or
sub
imul
xchg
leave
es
push
inc
mov
adc
xor
lods
rclb
xor
sub
and
sub
daa
ss
push
fs
testb
add
jmp
mov
adc
adc
add
and
lahf
xor
sub
or
addl
push
insl
shlb
loope
push
or
inc
cmp
stos
mov
ljmp
mov
and
mov
sub
loop
jle
inc
push
push
sbb
xchg
lahf
adc
pop
pop
es
repnz
ret
push
mov
push
push
pop
aas
loop
nop
icebp
push
mov
xor
jecxz
imul
lret
sub
sbb
mov
xchg
adc
adc
sub
sub
sarb
xor
movsl
aad
sub
lock
mov
lock
add
pop
test
cmpsl
lock
push
mov
out
add
mov
push
sbb
fsubr
mov
lock
jge
dec
inc
jecxz
or
pop
je
sbb
pop
inc
cmp
call
out
idivb
mov
add
lods
add
or
les
mull
dec
fadds
in
push
inc
test
and
mov
push
loopne
loope
pop
push
sbb
in
popa
sub
lds
in
sub
inc
xchg
dec
push
mov
test
add
push
cmp
jne
movsb
mov
or
ds
imul
adc
sub
mov
add
xor
imul
add
cmpsl
xchg
push
setp
push
adc
and
rolb
and
andl
out
cltd
xor
test
cmp
sbb
push
xchg
adc
sbb
stos
in
or
pop
js
mov
cs
dec
mov
xor
adc
jo
inc
push
mov
inc
mov
cmpsl
add
push
mov
push
xchg
out
adc
inc
rorb
and
mov
push
mov
call
adc
into
subl
mov
test
sarl
lds
jo
and
sar
loop
mov
sahf
and
pusha
movsb
outsb
or
and
orb
clc
push
scas
inc
inc
lret
cmp
jns
sbb
push
ljmp
ljmp
cli
je
sbb
movsb
xchg
rorb
push
sub
loope
aad
packsswb
mov
pop
pop
pusha
mov
lds
xchg
xchg
cwtl
sbb
mov
sub
jb
xor
dec
push
das
xor
mov
adc
rcrb
adc
xor
in
pop
add
daa
vfrczps
mov
inc
or
insl
sbb
jo
xor
js
es
scas
insb
add
adc
push
push
xchg
hlt
adc
pop
or
push
or
push
sti
mov
call
mov
scas
add
call
arpl
pop
loop
rolb
cmp
mov
mov
or
scas
movsl
repnz
xchg
add
mov
add
lods
lea
outsb
mov
mov
movsl
ss
xchg
add
pop
add
loop
push
lea
movsb
adc
sub
inc
or
dec
and
and
sub
push
dec
rol
orb
jp
sahf
sbb
mov
and
xchg
xchg
pushf
inc
sbb
and
jno
test
into
movsb
sbb
inc
push
lds
das
loope
adc
pop
push
jo
push
addr16
shlb
arpl
test
hlt
push
push
sbb
inc
or
fdiv
cmp
mov
out
in
test
add
pop
jl
mov
lods
inc
push
sbb
mov
xchg
imul
shlb
lods
ds
shl
lods
mov
dec
rcrb
loope
loopne
mov
and
loope
push
cld
pop
enter
cmp
pop
add
mov
mov
add
loopne
leave
or
sub
pop
fmul
or
push
cli
jle
xchg
adc
push
and
push
subb
mov
btr
dec
sbb
add
aaa
mov
sub
ret
mov
inc
mov
in
push
sahf
psrad
push
sub
adc
rcr
mov
cmp
push
jle
cmp
mov
xor
repnz
cmp
cmp
jl
pop
sbb
notb
sbb
pop
inc
mov
ud2
cmp
mov
rcll
lret
lock
adc
pop
rcll
jmp
into
call
mov
push
test
inc
clc
or
jo
xor
pushf
sbb
adc
stos
adc
in
and
push
adc
mov
movsl
test
mov
pushf
add
cmp
lock
fstl
and
pop
das
and
test
cmp
pop
gs
and
push
rolb
jne
sbb
push
mov
cli
add
jp
cmp
mov
add
aad
rorl
add
gs
das
pop
mov
pop
ja
mov
and
xlat
adc
test
mov
xor
leave
dec
add
pop
nop
cmp
push
mov
inc
sbb
ret
nop
lcall
inc
pop
jnp
adc
mov
and
and
xchg
unpckhps
push
nop
cli
out
test
adc
je
add
xchg
xor
shl
subb
test
inc
jnp
test
movl
jp
lcall
adc
dec
adc
and
add
test
and
xchg
pop
pushf
clc
les
add
std
lcall
mov
inc
mov
cmp
mov
lahf
movb
ljmp
pop
xor
ja
sbb
adc
or
adc
stos
or
mov
inc
lods
mov
xchg
push
aam
loope
mov
add
shl
push
inc
push
jb
popa
jg
mov
push
test
inc
inc
sub
push
stos
jae
shlb
sbb
outsb
fs
loopne
lods
push
dec
shlb
mul
mov
xor
cld
pop
push
pop
lods
fs
push
ret
imul
push
xchg
adc
in
mov
arpl
into
pusha
dec
popf
or
inc
adc
in
sarl
movsb
xchg
pop
or
into
into
jle
ret
sub
mov
xchg
lds
or
lea
mov
pop
lods
movsl
roll
incb
xchg
int3
pop
sub
rcrl
push
jo
dec
fsts
iret
loopne
jbe
popf
cli
adc
inc
lret
call
call
ret
out
rcrb
pop
add
cmp
and
ret
sahf
lods
pop
ret
cld
pop
pop
test
add
mov
or
cmpsl
cmp
loope
mov
push
push
test
inc
stos
shll
clc
addb
xchg
arpl
loopne
js
test
and
xchg
cmc
or
jmp
xor
add
cli
push
mov
xchg
nop
and
daa
outsb
leave
add
adc
test
and
scas
icebp
push
clc
add
mov
and
inc
cs
aas
pusha
add
push
sbb
mov
sahf
stc
cli
push
aam
mov
mov
sbb
mov
cmpsl
ljmp
add
lods
mov
dec
test
xchg
and
out
popa
pop
pop
mov
js
or
adc
push
cmp
andb
adc
popf
sbb
push
inc
fisubl
outsl
addr16
cmp
dec
ljmp
sbb
fs
sbb
cmp
inc
dec
imul
and
add
or
pop
loope
and
movsl
mov
pusha
or
sub
mov
adc
and
or
add
orb
cwtl
icebp
popa
rcrb
push
push
cmovns
arpl
and
in
or
cwtl
cmp
cmp
mov
scas
and
ret
dec
lret
adc
cmp
idivb
ret
lahf
xchg
add
add
jle
faddl
xorl
adc
pop
popl
cltd
add
jle
lods
fwait
repnz
out
or
add
or
and
stos
or
xchg
jno
lahf
jg
pop
jge
inc
movsb
xchg
mov
dec
xchg
adc
or
movsb
or
sub
sbb
sbb
lahf
inc
in
push
mov
test
cli
movsl
xorb
and
out
cli
mov
push
xchg
stc
adc
negb
fsts
je
xor
add
and
inc
and
insl
xchg
loopne
pushf
int
adc
push
sahf
cli
cmp
sbb
sbb
in
loope
sbb
sbb
test
push
or
sarb
mov
xchg
sub
inc
popf
push
adc
lret
pushf
or
jo
sub
cli
xor
stos
mov
inc
das
loope
je
sbb
adc
mov
inc
cwtl
test
shrb
mov
das
xor
shl
dec
pop
push
sbb
inc
or
cmp
push
sbb
adc
in
pop
rclb
je
stc
rolb
mov
mov
cltd
add
sahf
pusha
sbb
mov
inc
js
or
lods
inc
sbb
or
in
add
sbb
or
imul
pop
dec
rorb
out
enter
mov
das
jg
ljmp
add
push
lds
add
sbbl
rorb
adc
pop
push
push
add
sub
adc
push
xchg
pusha
mov
inc
loop
mov
mov
jmp
mov
test
jmp
sbb
lsl
xchg
dec
jno
mov
sahf
xor
xchg
adc
add
pusha
or
pop
add
cmp
mov
loopne
push
mov
or
pcmpeqb
gs
sbb
cli
inc
jne
ret
les
daa
jp
sbb
pop
pop
or
call
subb
test
shlb
push
popa
cmp
jb
add
dec
mov
add
fs
test
test
test
jle
mov
xchg
push
pop
cmp
xor
mov
jno
lods
add
es
push
pmuludq
mulb
push
mov
sbb
sub
pop
ljmp
add
lods
and
adc
xor
mov
add
hlt
add
inc
in
sbb
adcl
push
rol
push
mov
hlt
mov
das
sbb
mov
out
call
jmp
pop
jns
clc
or
pop
aad
in
cld
sub
out
mov
leave
push
sub
and
mov
mov
jge
push
push
mov
test
inc
sub
clc
in
jp
adc
icebp
inc
add
mov
sub
imulb
mov
or
test
push
jo
add
adc
inc
or
test
push
adc
shll
shr
das
jb
test
jb
mov
enter
pop
pop
sub
or
jle
mov
enter
stc
shll
mov
cwtl
and
mov
jge
scas
jecxz
adc
ret
and
neg
mov
insl
addl
or
es
add
adc
lods
test
movb
rcl
cmp
lods
out
mov
sbb
cmp
test
lods
addb
or
idiv
or
adc
or
or
mov
jo
loope
je
sbb
dec
jo
mov
xchg
fstpt
outsb
insl
push
lods
lods
cs
push
loopne
mov
popa
or
mov
sbb
fisubrs
dec
sbb
cli
push
inc
pop
sbbb
inc
xor
dec
inc
adc
icebp
dec
sbb
xor
insb
and
shlb
not
pop
jmp
aaa
sahf
pop
push
push
push
fs
aad
jb
rolb
push
push
leave
mov
les
sbb
add
jne
dec
and
cmp
ret
xchg
lret
and
adc
lret
ds
idivl
mov
mov
push
dec
sbb
dec
push
adc
jl
dec
pop
or
imul
insb
xchg
into
hlt
push
loopne
push
add
cwtl
mov
ret
test
push
imul
cmp
inc
sbb
clc
xor
inc
cltd
sbb
pop
jb
mov
pop
mov
stos
insb
push
inc
adc
scas
outsb
cmp
cli
add
les
add
add
inc
inc
xchg
rcl
mov
dec
and
sub
dec
sub
addb
sbb
mov
sbb
adc
xor
ss
nop
rcr
addl
mov
dec
test
mov
lods
mov
push
popa
loope
in
into
shrb
pop
stc
pop
fnsave
jecxz
mov
cs
movsb
and
dec
and
enter
mov
mov
dec
mov
sub
mov
push
aam
push
ret
mov
xor
xor
inc
shrb
lcall
test
movsl
out
and
or
adc
lods
push
scas
imul
dec
jmp
lock
push
or
push
loop
xlat
lods
clc
push
in
push
ljmp
test
or
and
push
inc
mov
add
outsb
lock
jge
outsl
sbb
sbb
sub
std
xchg
test
mov
lock
bound
sbb
imul
sbb
dec
push
lcall
push
adc
leave
loop
mov
cld
sbb
divb
pop
icebp
insl
aam
fs
mov
sub
jl
addb
and
cwtl
xchg
fwait
sbb
or
mov
into
pop
pop
mov
loop
ss
xchg
xchg
insl
xor
mov
icebp
cmpsb
inc
fnstenv
or
in
mov
or
popa
and
mov
repnz
xor
or
stos
add
sbb
push
add
mov
ror
popf
lret
sbb
into
mov
push
sldt
add
xchg
jo
imul
push
fsubp
jmp
adc
ljmp
sbb
sahf
add
mov
movsl
xchg
inc
or
xor
add
sub
or
xorb
or
popa
cwtl
mov
cmp
adc
imulb
arpl
je
daa
ret
add
xchg
loope
xor
xchg
push
ss
push
cmp
mov
mov
inc
sub
xchg
xchg
add
leave
mov
push
call
xchg
xchg
cmc
rclb
sub
adc
add
lock
cli
pop
mov
dec
cs
or
adc
inc
jmp
jo
lea
das
ljmp
cmp
in
pop
pop
dec
push
push
enter
dec
or
xchg
and
cmp
adc
cmp
adc
ret
sbb
xor
push
arpl
loope
incl
js
mov
shrl
js
mov
sbb
sar
cmpsl
xor
pushf
cmp
mov
sbb
pop
adc
push
or
xor
shr
fidivl
pop
shlb
pusha
pop
sbb
mov
inc
mov
mov
xchg
cld
push
sbb
test
stos
and
cmove
loop
addr16
addl
test
test
adcb
add
test
les
mov
add
je
jp
push
aad
hlt
or
inc
les
xchg
sub
mov
inc
or
sub
pushf
and
xor
push
push
adcb
xchg
imul
cmp
inc
lea
or
fcoml
hlt
test
jne
sub
jnp
adc
mov
push
cmp
inc
jne
push
mov
jo
loopne
jb
adc
fwait
add
clc
icebp
xchg
jo
adcb
ret
and
mov
loopne
sub
sahf
xchg
cltd
ds
pop
js
aad
inc
test
push
add
imul
inc
cmp
lret
pop
push
sbb
in
pop
add
lahf
loop
andb
loope
jge
xchg
in
ret
mov
sub
pop
subl
sub
fs
add
popf
add
movsb
sub
adc
rcr
lret
daa
sbb
or
and
movb
sub
aas
mov
push
push
iret
ja
adcb
les
mov
jmp
adc
add
mov
pop
js
push
jb
mov
inc
popa
xchg
bound
pop
dec
and
and
lahf
test
cmc
dec
loope
adc
lret
je
sub
sub
lock
xor
inc
sub
pop
cwtl
xorb
icebp
adc
xor
push
jo
add
dec
mov
add
and
loopne
mov
sbb
inc
or
sbb
dec
add
add
pop
js
call
icebp
adc
cltd
jl
push
jne
dec
pop
pop
add
or
cs
inc
jecxz
lods
inc
push
js
inc
shl
roll
stc
pop
arpl
inc
jl
icebp
das
or
call
or
adc
xor
jle
push
or
popa
data16
aam
test
add
jnp
ljmp
sub
mov
insb
mov
daa
les
jp
add
xchg
xor
xlat
enter
adc
mov
mov
mov
insl
add
hlt
lods
outsl
out
pop
imul
xor
ljmp
add
add
cmp
inc
roll
and
add
ret
sahf
push
or
cmp
rcl
shl
inc
or
ret
lret
xchg
sub
xchg
pop
and
cld
test
adcb
scas
sub
pop
fiadds
pop
rclb
add
mov
add
or
adc
mov
or
repz
je
rorl
dec
imul
xor
loope
push
outsb
add
and
adc
add
into
movsl
out
mov
dec
mov
inc
xor
repnz
add
loopne
push
test
aas
lock
fdivr
pop
and
mov
adc
cmp
imul
jp
ljmp
mov
dec
scas
call
pop
mov
rolb
add
nop
sbb
nop
xlat
ret
fildll
aad
cmp
add
xor
and
jne
cltd
or
sub
daa
test
cmp
cmp
andl
mov
loopne
cmp
outsb
sbb
push
orl
sbb
dec
jl
loope
dec
aam
ret
add
mov
test
xor
adc
lds
mov
add
popa
cmp
cmp
or
shrl
rclb
sbb
les
js
test
mov
movsl
test
pop
and
lock
shl
scas
sub
icebp
adc
xor
shr
leave
or
push
jl
adc
and
pop
aam
jae
sub
dec
push
xor
inc
jle
cmp
xchg
fimull
neg
pop
push
js
rorb
push
add
pop
aaa
pop
mov
js
shrl
jbe
lret
rolb
add
rclb
or
inc
and
loopne
adc
mov
inc
add
sub
div
xor
push
dec
ljmp
dec
clc
push
add
jb
outsl
xchg
push
jne
dec
sbbb
cmpsb
mov
leave
arpl
testb
or
push
rcrb
pop
les
push
cmp
sbb
inc
adc
push
sar
popa
or
loopne
mov
or
dec
cmp
push
das
dec
xor
scas
adc
pop
les
add
sbb
les
mov
call
sbb
das
jno
cmpsb
jmp
hlt
sbb
mov
mov
imul
xor
mov
hlt
xchg
sahf
push
sub
bound
or
rclb
imul
loop
cmp
subb
dec
push
imul
cwtl
mov
push
clc
and
pushf
fcoms
shrd
js
jge
rorl
add
pushf
scas
roll
into
push
rolb
jae
mov
xchg
sbb
test
adc
mov
sbbb
jmp
test
xor
lea
xor
or
inc
mov
js
or
adc
dec
jp
jns
and
dec
into
push
insl
mov
outsb
dec
clc
fistps
lods
push
mov
mov
js
sbb
nop
loop
rcll
mov
shrb
inc
push
xor
clc
clc
jmp
mov
test
xchg
loopne
nop
sbb
aas
rorl
add
mov
test
adc
enter
jle
and
arpl
dec
fistpll
push
mov
test
adc
push
add
push
xchg
loope
inc
faddl
scas
repz
inc
or
cli
ja
ret
or
sub
fadd
scas
xchg
scas
or
mov
pusha
sahf
pop
cmp
mov
or
add
outsl
cmp
xchg
push
or
icebp
roll
lret
shll
dec
or
shll
xor
xchg
fbstp
mov
add
or
adc
sbb
fisubrl
push
sub
dec
sahf
ret
push
fs
popf
push
test
insb
les
adc
cmp
sbb
sub
sbb
aas
jle
arpl
pusha
mov
andb
jl
lret
pop
lahf
add
divb
lret
xchg
and
dec
xchg
adc
mov
je
pusha
add
cmp
daa
popf
insb
fs
xchg
bswap
push
and
lock
aad
and
loopne
hlt
lret
push
pop
popf
hlt
jns
ljmp
and
mov
out
adc
push
push
adc
call
adc
dec
dec
jbe
pop
pop
cmp
or
mov
adc
leave
inc
xor
inc
movsl
call
add
ret
sbb
stos
adc
xor
jl
dec
loop
nop
and
xor
and
aad
loope
in
cli
push
mov
push
push
pop
mov
sbb
les
sahf
mov
inc
push
insl
and
xor
jbe
gs
loopne
sbb
orl
movsb
xorb
add
data16
sbb
mov
add
cmp
add
or
mov
shlb
cmp
adc
mov
shlb
push
push
popf
imul
and
ret
pop
out
mov
or
adc
add
push
hlt
xor
push
dec
or
push
or
pminub
add
xchg
cmc
pop
imul
dec
es
or
imul
arpl
adc
mov
adc
dec
arpl
push
outsb
test
lock
jl
push
mov
dec
dec
inc
jl
adc
push
cmp
add
pusha
imul
inc
sub
push
data16
push
dec
jmp
scas
in
jle
or
mov
cmp
loopne
adc
cwtl
pop
pop
sub
mov
push
jnp
adc
xor
shl
lret
adc
adcb
push
dec
lods
hlt
shl
inc
xchg
loopne
sub
adc
jp
add
and
add
sbb
rcpps
mov
out
enter
js
adc
sbb
hlt
cli
push
inc
pusha
sub
orl
loope
sbb
xor
hlt
cmpsb
lahf
addb
ficomps
rcrb
mov
add
xchg
and
dec
lea
lods
es
push
aad
pop
decb
test
in
add
add
xchg
shrb
xchg
sbb
push
lds
mov
mov
push
sar
lret
sbb
lock
or
mov
jno
sbb
ror
xchg
or
ljmp
fadds
lock
mov
insl
lods
add
dec
push
sarb
arpl
sahf
rclb
leave
xchg
cmp
xor
mov
insb
add
push
adcb
or
dec
jns
mov
add
sbb
into
push
jmp
sahf
add
loopne
lods
rorl
cmp
fld
and
sub
dec
xlat
subb
lcall
sbb
movb
std
add
dec
cli
movsb
xlat
push
lods
cmp
and
mov
sub
addl
rolb
jge
or
movsb
xchg
jbe
icebp
jge
add
bound
rcrl
cmp
xchg
or
pushf
cld
aam
xchg
and
cmp
das
sarl
movb
mov
xorb
push
mov
idivb
clc
call
inc
cs
mov
add
mov
neg
inc
sbbb
push
pop
xor
jmp
aam
les
dec
or
sarl
ficoml
gs
mov
aaa
adc
push
test
pop
loop
sub
mov
xchg
popa
sbb
nop
bound
addb
sbb
inc
les
and
add
loop
sub
ljmp
sub
mov
enter
xor
sub
icebp
movsb
fmull
shr
fsubl
addps
js
xchg
and
and
add
push
cmp
jmp
divl
into
adc
filds
and
js
dec
jae
or
mov
lahf
sbb
pop
dec
shrb
push
ret
enter
test
pushf
fdiv
adc
sbb
adc
mov
lods
dec
js
divb
sbb
adc
mov
ret
adc
inc
ss
test
insb
push
or
pop
or
or
out
and
mov
ljmp
ret
xor
lods
xchg
push
sub
mov
mov
fs
add
or
jge
shlb
loopne
and
popa
jp
jno
iret
ljmp
push
bound
aam
test
jmp
das
dec
test
pop
ljmp
dec
bound
sbb
lret
inc
pushf
jp
rorb
cmpsb
rolb
add
orb
rclb
test
lods
mov
add
call
dec
sbb
ror
mov
push
push
js
push
outsl
xchg
pop
outsb
adc
pop
int
pop
xor
sbb
insl
push
popf
mov
in
dec
cmp
jmp
sbb
inc
or
push
inc
daa
xchg
push
add
push
pop
or
dec
push
shrb
and
mov
das
lock
push
hlt
in
fsubr
rol
xor
or
nop
xchg
aam
jp
push
lcall
and
pop
xor
xchg
divl
test
mov
and
sub
cmp
outsb
rcrw
cs
add
inc
cmp
test
das
adc
adc
push
pop
inc
mov
mov
xor
lea
xor
adc
push
fnstenv
fcoml
mov
nop
gs
mov
push
pop
fcmovnbe
lcall
or
jo
xchg
rcrl
std
pop
inc
jo
stos
or
mov
jp
fs
test
sahf
mov
dec
leave
fnsave
test
loop
mov
jb
xchg
or
or
or
pop
sub
sbb
scas
add
movsb
mov
inc
inc
out
jne
mov
sbb
shll
call
add
add
xor
rorb
shll
pop
adc
popf
fisttpll
add
inc
rorb
stos
dec
push
push
scas
add
sbb
mov
insb
push
xor
mov
mov
je
lock
les
xor
movlps
sbb
imul
js
test
xor
les
xor
cmc
mov
out
push
mov
fdivs
popf
into
add
test
jl
mov
push
movl
add
or
movsb
into
push
add
push
add
inc
or
jge
jge
pop
cmp
incl
mov
add
ret
sbb
add
in
leave
insl
sbb
inc
ja
cmp
enter
ret
xchg
adcb
jmp
cwtl
nopl
add
fwait
sub
sub
xchg
push
fadd
add
push
or
lods
push
cli
add
rcrb
fcmovb
arpl
rcr
cltd
xor
cmp
and
sub
sbb
mov
xor
xor
push
xor
enter
pop
in
dec
xor
test
inc
or
into
loopne
and
shll
or
sahf
loop
push
xchg
in
cmp
int
adc
push
addb
jl
nop
mov
cli
fmuls
aam
daa
add
aaa
adc
push
andb
push
jne
cmpb
dec
fs
sbb
pop
add
add
add
mov
fstpl
mov
das
mov
add
lock
jo
jno
test
push
je
sbb
fisubs
pop
sub
mov
add
dec
cmp
ret
dec
rclb
imul
lahf
pop
loopne
or
xor
jl
je
dec
mov
addb
mov
adc
into
sub
hlt
xor
pop
mov
xor
add
ret
clc
pop
into
sarl
add
push
jecxz
inc
ljmp
push
push
clc
flds
sub
pop
divb
adc
aas
cld
jp
adc
and
xchg
repz
rol
or
in
cs
add
adc
mov
jo
inc
js
int3
add
or
iret
cwtl
mov
int
into
push
push
rol
test
addr16
les
dec
mov
add
sbb
sbb
leave
fisttpll
dec
lret
xchg
sbb
loope
outsl
ljmp
jo
jp
loope
pop
pusha
jp
pop
rcr
push
repz
repnz
dec
dec
popf
cs
adc
sub
mov
sub
or
lea
orl
add
mov
sbb
sahf
push
sbb
xor
sub
add
or
test
or
inc
jle
push
sub
popa
scas
mov
mov
ja
ret
mov
pop
sub
push
pop
adc
jne
add
cli
add
mov
sbb
push
mov
dec
icebp
adc
push
and
push
push
push
push
and
inc
jno
mov
adc
inc
jo
mov
repnz
int
cmp
pop
jle
addl
cmp
or
stos
shlb
mov
es
arpl
stos
repnz
nop
lock
or
mov
and
pop
imul
clc
sbb
dec
dec
mov
or
cs
mov
or
iret
jecxz
movsl
mov
mov
jecxz
lcall
dec
adc
or
inc
and
dec
push
dec
pop
mov
ret
jg
inc
add
adc
or
or
jnp
mov
push
inc
add
jo
das
pop
lea
adc
aam
test
lock
lret
data16
mov
adcb
adc
outsl
call
sahf
adc
daa
sbb
and
dec
adc
repnz
xor
sub
push
add
pop
mov
in
dec
loopne
xchg
lock
lret
clc
mov
dec
inc
adc
cmpb
aam
je
jo
movsb
movsl
pop
jae
mov
sbb
mov
sbb
xlat
loope
and
sub
inc
cmpsb
fcoml
xor
test
inc
cmpsl
js
mov
addb
lret
xchg
xlat
add
in
or
loop
xchg
adc
daa
ret
xchg
add
movsl
xchg
xchg
or
pop
adc
adc
pusha
push
aaa
into
ret
xor
je
adc
and
xchg
add
sbb
xor
push
inc
jecxz
cwtl
andb
dec
mov
pop
loopne
ljmp
xor
je
and
push
jp
xchg
orb
add
cld
enter
mov
sbb
inc
popf
dec
cmp
out
and
loopne
lock
rcll
rol
pop
and
mov
jno
and
cwtl
or
mov
iret
push
aam
movb
clc
and
or
and
lds
or
sbb
and
imul
adc
push
mov
mov
xchg
sbb
pop
cmp
pop
and
push
push
addb
jecxz
or
jp
shr
xlat
pop
pop
dec
rclb
gs
mov
sbb
mov
xor
icebp
std
icebp
cmpsb
or
rcrb
rol
xchg
inc
nop
mov
and
mov
xchg
sbb
or
dec
xchg
popf
sub
daa
xorb
ror
mov
call
add
adcl
shl
jno
sbb
insb
ret
add
insb
mov
xchg
repz
stc
push
in
outsl
pushaw
leave
cwtl
or
xchg
add
insb
cmp
xchg
inc
or
add
lea
bound
movsw
sarl
jecxz
punpckhdq
in
test
fsubrl
xchg
js
cmpb
dec
push
push
cltd
xchg
jl
mov
loop
push
sub
adc
push
or
clc
sbbb
sub
pop
push
adc
adc
or
mov
xchg
andb
aam
add
cli
xor
sbb
mov
xor
xchg
add
iret
and
cmp
mov
push
test
rolb
mov
jnp
sub
out
jb
lret
and
jp
sub
nop
inc
or
push
dec
inc
sub
lods
push
xor
adc
dec
inc
jp
cmp
inc
sub
pop
pop
jno
sbb
fs
inc
inc
sbb
mov
push
sbb
imulb
push
xorb
rclb
push
cld
and
sbb
sbb
cmp
test
ljmp
xchg
inc
loop
push
xchg
aaa
pop
push
jo
add
fmuls
push
rcrl
pop
jmp
sbb
ds
loopne,pn
sarb
xor
jo
cs
adc
or
pop
adc
popf
icebp
and
add
pusha
inc
lods
clc
pop
xor
rorb
js
fst
push
mov
add
mov
and
inc
enter
cmp
push
jo
push
int
xchg
cmpl
dec
lldt
sbb
adc
addb
andb
or
dec
pop
sbb
sarl
sub
lods
add
push
loope
cmp
lock
mov
adc
mov
loopw
jge
push
sbb
shrb
mov
xor
out
add
data16
cmc
dec
aam
adc
mov
je
adc
add
rorl
adc
test
fs
rol
mov
jl
cwtl
mov
aaa
sahf
addb
sub
xchg
xor
sbbl
rorl
xchg
pushf
cld
mov
mov
fdivrs
jmp
sbb
mov
xchg
sti
mov
jl
push
xor
jmp
jecxz
imulb
loop
xchg
lea
into
cs
sbb
xor
or
adc
and
push
ret
shrb
jo
jp
iret
sbb
inc
movsb
cmpsb
xchg
xor
xchg
add
ljmp
mov
aad
popf
pushf
test
and
and
ja
rcrl
sbbb
sbb
push
ret
or
mov
es
leave
sbb
inc
stos
aam
ror
rcl
push
adc
xchg
addr16
jle
pop
jb
push
fs
rclb
pop
pop
test
lahf
js
sbb
or
ret
loopne
insb
dec
addb
je
xor
dec
adc
sarb
mov
icebp
cli
sbbb
shrl
shlb
cmp
add
push
pop
add
js
lds
movb
ljmp
mov
inc
pop
adc
push
fsubr
xchg
cmc
adc
mov
nop
sahf
or
inc
movsl
xor
js
xor
or
ret
sbb
fimull
push
loope
shrb
push
jecxz
aad
mov
sarb
add
test
les
cmp
adc
dec
loopne
fcmovnb
xor
add
adc
cmpsl
icebp
mov
sahf
es
fs
andl
mov
hlt
or
loopne
cmp
testb
adc
movsb
mov
push
sub
add
ss
popa
andb
imul
mov
cmp
pop
lret
rcl
adc
dec
fadd
push
cmp
inc
jl
sbb
rolb
dec
loope
pusha
inc
imul
ret
shr
and
mov
test
mov
pop
push
repz
rol
mov
pop
adc
xor
rorb
pop
adc
lcall
movb
mov
sbb
cs
sub
push
fcoml
clc
ror
xor
mov
or
jae
add
out
mov
add
or
mov
lret
xchg
push
sub
movsb
add
fstpl
jo
push
je
fdivrp
xor
push
mov
sub
or
into
inc
cmpsb
push
xor
or
cwtl
or
fistps
fwait
mov
sbb
jle
xor
adc
mov
es
insb
and
in
pop
imul
popa
dec
adc
adc
shlb
loope
imul
gs
and
insb
pop
mov
dec
push
sbb
add
or
ss
cli
pusha
or
test
lcall
jb
sub
int3
into
test
hlt
dec
pop
cmp
xor
cmp
adc
call
sbb
in
mov
fldcw
orb
mov
adcl
mov
cmpsb
sbb
inc
loopne
js
dec
loope
mov
or
adc
and
pop
nop
jb
or
and
cmp
add
fwait
ret
cmp
enter
jnp
leave
mov
sub
je
ja
inc
into
xchg
jle
mov
sbb
loopne
loope
mov
push
cwtl
leave
out
mov
xchg
pop
icebp
pop
stos
test
movsl
add
ss
push
jb
out
or
arpl
xchg
dec
jge
add
cmp
mov
mov
add
sub
and
mov
fstl
test
adc
ja
mov
add
xchg
push
popf
add
ret
mov
insb
aam
pop
or
mov
test
bnd
push
add
cltd
cltd
push
hlt
and
mov
cmp
adc
js
adc
pop
push
adc
pusha
insl
ret
fcoml
add
jo
inc
imul
sahf
lcall
cmp
add
enter
add
xchg
and
addb
lret
sub
inc
unpcklps
and
mov
aam
scas
or
adc
rolb
fs
cli
shr
push
outsb
push
fs
dec
and
sbb
fimull
mov
sub
sbb
sub
sti
adc
scas
fld
inc
sbb
mov
push
les
lea
lods
or
lock
cmp
enter
pop
les
dec
addb
adc
pop
add
inc
xorw
and
pop
js
jns
sbb
mov
pop
mov
mov
adc
mov
les
push
test
cmp
jbe
jge
dec
repz
and
jp
cmpb
pop
enter
ret
imul
or
ds
and
mov
ficoml
mov
sbb
adc
icebp
inc
daa
pop
push
cmpsb
fidivs
push
lods
sarb
add
add
rcrb
mov
fiadds
nop
push
and
pop
bound
sub
or
rcrb
add
inc
fmuls
psubsw
add
shlb
push
mov
dec
rclb
clc
clc
jno
movsb
inc
dec
xor
or
mov
push
push
mov
cltd
rorb
inc
cmp
cli
cli
je
loop
lods
pop
or
aam
jp
adc
test
jns
inc
mov
push
ljmp
imul
xchg
adc
xor
mov
sub
sbb
enter
add
rolb
rolb
add
aam
dec
inc
or
loop
push
xchg
subl
xchg
sbb
mov
inc
add
js
sbb
movsb
pop
push
out
and
xorb
dec
push
sbb
push
jae
dec
add
pop
into
sub
sub
sbb
ret
xchg
daa
mov
inc
xor
rcl
clc
cmpb
sbb
xor
and
shlb
push
cmp
rcll
sbb
or
and
sub
outsb
mov
lods
test
adc
test
jo
enter
insl
add
shl
adc
add
call
sbb
push
les
push
jl
add
add
sahf
sub
lret
sbb
loopne
pusha
cmp
jno
loopne
jle
cmp
pop
add
out
rolb
push
pop
jae
push
rcr
lcall
cltd
test
imul
std
rclb
and
shrb
add
rcr
jge
pop
pop
adc
lock
add
loopne
sahf
lods
and
mov
addl
push
clc
int3
subl
mov
pop
test
mov
or
test
int3
call
aam
inc
lods
das
shl
addr16
shr
test
test
inc
les
cmp
mov
sarb
je
inc
lret
xor
or
jb
add
lcall
push
ret
push
loop
popf
hlt
int3
adc
sub
movl
div
push
cmc
lret
js
add
jns
push
add
jae
mov
inc
nop
push
outsl
mov
cmp
dec
add
push
jmp
outsl
ror
sub
or
andl
test
fucomp
inc
sub
fidivrl
sbbl
mov
or
push
sub
orl
jae
dec
add
xlat
rorb
mov
pushf
xchg
jb
mov
lods
sub
mov
pop
test
sub
sbb
pusha
add
sahf
lods
subl
jl
fimuls
add
inc
mov
cmc
sbb
pop
sub
inc
mov
rorl
inc
cmp
cmp
int3
xor
int3
rolb
loopne
mov
adc
cmp
mov
mov
imul
cs
push
jae
sub
imul
and
jge
jb
ret
sub
xor
xor
clc
mov
and
clc
adc
sub
divb
das
pop
mov
sbb
or
call
inc
cld
lahf
or
push
push
or
lods
sbb
and
cmp
sbb
loope
mov
ds
addl
add
fimull
mov
pop
or
push
push
mov
icebp
repz
sbb
femms
xchg
test
and
inc
das
mov
inc
dec
cmc
dec
inc
btc
loop
js
adc
push
jmp
cmpsl
lock
aad
fdivs
test
or
dec
or
hlt
mov
fstpt
and
loopne
das
adc
and
sub
jp
xchg
jbe
jecxz
cwtl
js
xchg
mov
pop
adc
mov
or
jo
in
cmp
dec
movl
dec
cmp
aam
jge
add
mov
and
push
loope
sbb
pop
push
loop
rclb
je
stc
sahf
and
mov
lods
rorb
push
popa
and
mov
mov
js
add
pop
cmp
pushf
inc
pop
dec
cmp
sbb
mov
loop
push
inc
arpl
aas
cs
and
cltd
imul
jo
das
jo
insl
xchg
xchg
loopne
jo
pop
push
mov
cs
ret
adc
xorl
mov
push
rolb
and
xchg
andl
addb
or
sub
sbbb
xor
adc
add
cs
push
mov
mov
push
add
aaa
and
cs
add
inc
add
into
fcompl
sbb
sbb
push
insb
ret
add
dec
push
dec
ret
xchg
cli
lea
loopne
or
lods
fmull
roll
push
outsl
shlb
dec
repnz
enter
sbb
and
inc
mov
jp
rorl
lock
mov
es
sbb
cmp
sbb
loopne
sbb
sub
push
add
or
test
pop
popa
out
sahf
or
mov
mov
push
add
outsb
mov
dec
hlt
inc
lods
add
inc
into
cwtl
add
or
add
mov
xchg
push
add
ljmp
add
sub
call
cmp
out
xor
rorl
popf
push
cwtl
push
pop
jmp
test
mov
or
add
pop
and
sub
pop
call
pop
sbb
cmpsl
push
lods
cld
pushf
and
pop
sbb
inc
paddb
add
xchg
push
jp
add
call
push
ret
fsubrs
mov
ret
aaa
mov
lock
push
and
add
pop
aam
loop
cmpsl
andl
icebp
inc
add
sti
je
dec
dec
das
pop
sub
and
lods
ret
dec
dec
push
add
cmc
enter
dec
and
cmp
xor
xchg
push
or
adc
xor
push
add
cmp
and
rcrl
xchg
test
hlt
shrb
add
jo
adc
xor
es
adc
inc
add
sbb
sub
adc
lret
add
js
mov
shrb
jp
jne
rclb
divb
push
rorb
cmp
hlt
adc
and
push
rorb
xor
cmp
or
dec
or
adc
test
or
xchg
call
inc
jmp
sub
cltd
push
lods
je
fstps
xchg
test
push
mov
xor
mov
stos
push
pop
out
adc
mov
insl
call
adc
subb
call
loope
cld
insb
shl
call
cltd
dec
add
and
push
in
imul
loop
pushf
test
dec
or
and
xchg
push
outsb
xchg
jno
xchg
push
add
mov
movsb
push
scas
je
jno
cmp
xorb
lock
hlt
dec
and
lret
pop
and
sub
xor
push
dec
in
jo
and
add
sub
pop
adc
data16
jns
xor
pop
pop
smsw
sbb
sbbb
mov
cmp
gs
pop
dec
mov
mov
insl
cltd
mov
push
popa
loop
mov
add
push
push
and
lock
inc
test
adc
xchg
push
and
sub
or
inc
sub
mov
rol
pop
rolb
jecxz
dec
jno
mov
sbb
lods
test
push
loop
xor
mov
dec
add
or
adc
mov
push
inc
jl
pop
xor
insb
mov
test
push
mov
negb
mov
push
imul
outsb
loop
dec
xor
sbb
add
cmp
enter
xor
push
cld
push
xchg
dec
sbb
dec
pop
sub
and
xchg
xchg
js
push
sub
pop
xchg
mov
das
sbb
and
icebp
shlb
ja
push
mov
test
mov
jl
mov
sbb
rcrl
xor
aam
jno
cmp
or
sbb
lock
es
ret
pop
or
arpl
pop
stos
fidivs
ds
subb
add
mov
mov
mov
add
sbb
or
shrb
mov
xchg
enter
mov
mov
sbb
add
sbb
loope
xor
cltd
or
jno
jecxz
dec
or
shrb
xorl
dec
daa
pop
shll
dec
int3
test
inc
subb
in
and
sbb
adc
sub
notb
cltd
jno
js
and
add
adc
push
mov
cld
sub
xchg
ret
lahf
pop
push
idiv
or
xlat
shrb
or
mov
adc
dec
inc
std
push
jns
jne
push
or
mov
call
dec
xor
loope
scas
sub
rcrl
mov
xchg
rolw
hlt
test
inc
xorl
or
jle
or
push
xor
add
and
mov
or
nop
xor
add
aam
ret
mov
leave
or
lds
lret
lock
inc
jecxz
mov
or
push
out
jb
lods
aaa
xchg
scas
adc
enter
mov
and
jbe
inc
mov
cmp
aam
push
mov
add
xor
ss
jge
add
leave
mov
mov
leave
pushf
adc
daa
xchg
lds
fisubrs
mov
and
or
xorb
xor
fisubrs
xchg
pop
lahf
adcb
subl
sbb
dec
sub
adc
mov
sbb
pop
arpl
add
mov
and
jl
in
test
or
push
mov
xor
loope
sbb
dec
mov
push
dec
dec
ja
andb
xchg
loopne
pop
int3
xor
mov
adc
inc
scas
into
dec
or
push
mov
aaa
push
push
mov
ret
lcall
ret
push
dec
ficompl
jecxz
pop
or
inc
cmp
xchg
test
inc
in
lock
push
or
clc
xchg
and
mov
push
mov
ficoml
in
std
and
push
or
int3
add
mov
inc
mov
lods
andl
js
lret
inc
pushf
pop
mov
xchg
push
mov
pop
xchg
sbbl
adc
jb
mov
fbld
mov
pop
add
or
mov
pushf
pop
les
or
inc
popl
jecxz
push
and
push
lcall
pop
cli
inc
xchg
ret
insb
dec
xor
mov
cmpsl
test
loop
jno
mov
andb
push
or
lret
loopne
xchg
push
adc
or
add
and
adc
cmp
cmc
dec
mov
fldenv
mov
and
or
mov
rorb
mov
int
leave
mov
push
xchg
add
mov
xor
xchg
sbb
sbb
rorb
insb
add
jge
scas
xor
lret
push
loop
icebp
mov
xchg
lret
cmpb
jnp
jg
jg
imul
and
hlt
push
nopl
sbb
test
nop
adc
add
imul
push
mov
inc
jnp
sub
pop
jmp
pop
adc
mov
sbb
xor
nop
gs
or
scas
cli
bound
dec
rol
and
or
outsb
lods
lea
xchg
xor
adc
push
inc
inc
add
stos
lds
mov
inc
cltd
into
enter
movsl
punpckldq
cmp
es
sub
pop
adc
add
sub
adc
js
sub
sub
dec
mov
mov
test
push
andl
out
add
lds
test
adc
add
inc
pop
or
pusha
dec
mov
push
push
xchg
inc
into
cmpsl
pop
or
lret
pcmpgtb
imul
adc
cmp
cmp
lahf
xor
or
xchg
sbb
mov
add
sub
dec
xchg
mov
pop
aad
inc
sub
std
cmp
sahf
pusha
subb
jmp
jle
lods
ja
adc
test
loopne
es
iret
push
ja
adc
popa
inc
sbb
mov
cmp
test
jp
adc
jmp
add
inc
test
adc
pop
clc
add
mov
cmp
js
lock
stos
insl
or
rol
ret
ljmp
cmp
sbb
pusha
dec
leave
and
arpl
push
dec
and
or
add
pop
dec
xor
es
jo
lea
call
push
mov
jp
push
outsb
clc
rcl
sbb
cmp
sub
ret
xlat
leave
pop
clc
inc
pop
inc
mov
sub
add
sub
add
inc
xor
jge
or
mov
cld
xchg
scas
or
imul
in
push
ljmp
add
jge
sub
add
test
sbb
jne
rclb
adc
jno
add
push
lock
cmp
cmpps
xchg
stos
and
push
push
out
inc
push
pop
sbb
fimuls
mov
sbb
movsb
add
aam
and
nop
mov
xor
lea
sbb
adc
jbe
pop
jp
insb
push
xchg
lods
xor
cmp
iret
add
adc
stc
sub
scas
mov
push
xlat
inc
push
lahf
xchg
add
cmpsl
cmp
xchg
mov
inc
in
add
inc
jb
ret
rolb
or
popf
gs
and
xor
push
pop
push
ss
jno
adc
sbb
or
jne
or
aam
xor
fs
cmp
inc
jb
and
sbb
dec
add
mov
mov
lcall
push
icebp
add
xchg
js
into
mov
sbb
sbb
popf
and
enter
ret
sbb
sbb
popa
add
scas
addl
icebp
xchg
lea
lea
call
les
sti
loopne
adc
sbb
insl
ficoms
add
xor
lods
or
pmaxub
fstpt
pusha
icebp
rorb
mov
mov
adc
cli
lret
push
cmp
into
aaa
or
call
push
or
sbb
jmp
adc
cli
and
sub
sbb
enter
lcall
mov
int3
pop
dec
sbb
lods
push
xor
das
pop
outsb
adc
pop
add
je
insl
shlb
lock
les
test
xchg
roll
inc
or
in
repz
sbb
inc
inc
mov
js
and
push
pop
pop
sbb
push
pop
sbb
daa
sahf
cmp
das
dec
pop
push
mov
adc
hlt
movsb
mov
or
xchg
dec
sbb
popf
adc
or
dec
lcall
cmp
mov
imul
loopne
jl
scas
popf
jl
push
cmp
push
jne
jo
mov
mov
jb
cli
sbb
push
push
dec
mov
mov
push
mov
jbe
jecxz
mov
xchg
aam
rclb
popf
lcall
sarb
and
sbb
inc
mov
mov
jb
add
xchg
cmp
cmp
add
mov
pop
into
dec
rcll
test
inc
jp
aam
or
test
push
lock
mov
inc
ljmp
push
nop
daa
call
aas
sbb
fistpl
inc
dec
or
or
lods
pop
icebp
shll
mov
stc
sub
andb
adc
adc
mov
je
loopne
mov
sbb
push
push
pusha
insb
loop
test
sub
aam
daa
icebp
push
pop
ljmp
orb
push
addr16
test
xchg
mov
inc
jle
mov
add
mov
mov
lea
out
ror
or
mov
andb
cmpsb
xchg
sbb
pushf
addb
pop
ljmp
mov
adc
inc
testb
jp
test
das
add
sbb
xlat
sbb
sahf
cli
es
inc
mov
xchg
mov
es
sbb
xchg
and
xchg
mov
lock
xor
sbb
outsl
inc
scas
sbb
inc
or
push
sub
inc
push
sub
push
add
sbb
pop
xor
mov
bound
cmp
movsb
push
pushf
sbb
xchg
popf
test
xlat
mov
adc
test
les
es
add
bound
enter
add
dec
mov
xchg
or
xchg
mov
push
or
xchg
sbb
js
add
push
imul
loop
sbb
popf
push
xchg
jns
pop
cli
cmpb
add
cwtl
ficoms
ss
lcall
or
loope
push
sbb
mov
in
mov
and
loope
mov
inc
pop
rorl
pushf
maskmovq
mull
shl
movb
loope
repnz
add
inc
fdivr
or
push
jne
and
addr16
faddl
or
test
pop
xchg
aaa
mov
cld
sub
adc
pop
dec
outsl
test
add
push
sub
pop
and
lret
sbb
and
dec
imul
xchg
xchg
or
cmc
in
mov
or
ja
pusha
rclb
popa
push
pop
mov
sub
mov
insl
sub
inc
xor
adc
sub
imul
stos
inc
rorl
jp
inc
roll
inc
aaa
les
mov
add
dec
lods
je
out
je
pop
dec
pusha
sahf
sub
icebp
mov
je
xchg
adc
push
or
rolb
push
add
push
rol
test
xor
shlb
jmp
into
shl
inc
aas
test
cli
inc
sbb
incb
outsl
mov
test
xchg
mov
push
flds
movsb
add
orb
dec
js
sysret
lock
into
mov
adc
jl
mov
repnz
xor
nop
cwtl
les
das
sbb
hlt
push
test
inc
jo
push
dec
mov
jb
or
lods
mov
sbb
adc
adc
xchg
ds
rolb
sub
dec
js
rcrl
shr
enter
mov
adc
js
and
mov
inc
mov
repnz
mov
or
stos
push
mov
ds
pop
inc
or
and
xchg
ror
movsb
push
jo
jo
rolb
lret
inc
les
pop
shrl
add
dec
mov
dec
sbb
lret
jo
and
jecxz
ja
pop
xor
insb
cmp
clc
mov
push
jmp
nop
rcrb
sbbb
and
imul
jp
add
fnsave
ds
clc
xor
xchg
jo
imul
clc
or
imul
push
jp
dec
dec
pop
add
or
jo
xchg
daa
cmp
or
mov
sbb
fs
mov
fisubs
bound
stos
cmc
test
xchg
mov
clc
mov
adcb
testb
in
sub
out
rclb
adc
mov
xchg
inc
mov
jmp
mov
add
mov
or
orl
ret
and
adc
sbb
cmp
add
repnz
add
out
sbb
cmp
push
fstl
addr16
in
inc
jb
sahf
cmp
je
sbb
xchg
in
pop
add
push
xchg
push
scas
mov
mov
cmp
push
sbb
pusha
dec
add
lahf
jmp
call
enter
sbb
fwait
or
or
mov
adc
mov
hlt
fwait
mov
or
fcomp
lret
pop
adc
das
loopne
cmp
into
adc
push
push
js
in
cmp
insl
push
jne
cmp
mov
inc
sahf
xchg
jae
push
rcrl
sbb
aad
push
xor
cmc
jp
or
mov
mov
pop
ret
xor
orb
inc
or
xchg
adcb
or
int3
pop
add
test
mov
cmpb
outsl
adc
addb
mov
add
jmp
inc
jnp
mov
mov
ret
inc
into
shl
pop
add
xor
mov
aas
add
push
js
shl
sbb
sbb
xor
je
loop
and
sbb
dec
daa
enter
daa
sub
sbb
inc
pushf
mov
jecxz
test
clc
cmpb
imul
xchg
push
mov
xor
add
or
xor
dec
sbb
xchg
add
push
and
add
adc
adc
insb
sub
push
aaa
xchg
shlb
movb
push
popa
sub
adc
or
loop
cmp
in
or
fimull
push
or
ljmp
daa
out
adc
mov
sub
cli
jo
fsubr
xchg
push
push
movsb
jge
or
sbbb
inc
lret
mov
adc
jp
shr
add
cmp
shlb
inc
or
mov
sbb
and
and
sub
sub
ret
xchg
push
mov
mov
imul
jp
rcrl
xorb
push
cmp
and
scas
jle
push
sti
testb
push
les
xchg
push
out
xchg
and
sbb
rorb
push
outsb
add
shl
pop
adc
mov
daa
mov
cmpsl
hlt
sarb
lods
arpl
mov
les
or
add
lock
repz
inc
inc
inc
sub
hlt
mov
or
push
mov
dec
push
shrb
and
add
dec
mov
gs
aam
xchg
sub
adc
stos
mull
inc
ficomps
cltd
sbb
inc
pop
add
cwtl
hlt
sbb
or
imul
xchg
sbb
jmp
add
dec
int3
es
js
and
xlat
mov
pminub
and
rorb
in
minps
adc
jmp
mov
inc
inc
adc
lahf
fnstcw
sbb
or
adc
sbb
icebp
xchg
mov
pop
add
shl
hlt
sub
test
fimuls
and
xchg
fcompl
sbb
or
hlt
inc
leave
shl
pop
pusha
and
jecxz
sbb
popf
test
and
fidivrs
call
adc
ret
add
jae
nop
cmp
mov
mov
pop
xchg
sbb
xchg
add
loop
sti
in
push
push
jg
movb
in
mov
xchg
xor
ret
mov
rolb
xlat
mov
sbb
pushf
insl
test
rcr
push
adc
dec
mov
or
and
pop
xchg
rclb
mov
mov
test
pop
xchg
jbe
testb
hlt
pop
rcrl
je
cs
add
shll
in
into
mov
adc
add
or
adcl
inc
xchg
push
adc
mov
call
pop
stos
mov
outsb
mov
xchg
jns
inc
imul
mov
divl
inc
mov
sub
hlt
add
pop
or
pop
popa
gs
stc
mov
mov
stos
cmp
fcmovnbe
fwait
pop
or
arpl
sbb
push
mov
sub
enter
andb
loope
pusha
adcb
sub
xor
cmpsb
cld
cli
punpckhdq
mov
add
ret
dec
pop
and
mov
dec
xadd
add
xchg
cmp
dec
xchg
add
mov
sub
adc
ret
add
add
push
dec
dec
ljmp
sbb
shrb
pop
les
ret
test
xchg
or
adc
sbb
mov
sub
mov
jge
cli
jmp
or
rorb
xchg
loop
push
xor
adc
cmp
mov
add
mov
cmp
fcoml
inc
add
mov
or
lret
cli
pop
dec
add
scas
and
fld
inc
repnz
xchg
jle
inc
pop
or
mov
loop
aad
rcl
mov
cmpsl
inc
and
cli
pavgb
insl
and
data16
and
push
sub
std
or
iret
xchg
out
push
cmc
rolb
mov
pop
arpl
subb
adc
or
sbb
lar
push
stos
imul
pop
pusha
cmp
aaa
cmpsb
add
rolb
or
loope
dec
in
iret
sbb
mov
inc
mov
orb
adc
adc
inc
mov
lods
push
adc
sub
jae
or
push
adc
add
xor
cli
xchg
cwtl
test
ret
mov
sbbb
fsubrp
lea
sub
xchg
and
sub
inc
mov
pop
jo
outsb
xchg
add
dec
mov
out
stos
test
lret
and
fs
xor
sbb
loopne
sub
xchg
outsl
add
popa
int3
movsl
jo
sbb
inc
pop
inc
sub
jge
xor
add
xchg
mov
sti
sti
xchg
push
add
mov
mov
ds
mulb
xchg
pop
out
clc
mov
int3
loopne
icebp
push
mov
stos
or
xchg
xchg
sahf
jno
sahf
ret
push
outsl
sbb
mov
sbb
cltd
adcl
mov
faddl
mov
or
jge
pushf
out
ret
mov
movsb
adc
sahf
add
jne
push
or
push
mov
sahf
adc
inc
hlt
aaa
add
popa
mov
push
data16
adc
jo
mov
inc
in
clc
and
lock
je
loope
iret
pop
pop
and
mov
sub
xor
sbbb
mov
cld
pop
fsubrs
aaa
push
and
adc
stc
and
xchg
mov
rolb
mov
lods
sub
mov
or
adc
popa
rcrb
push
mov
push
xchg
test
add
daa
das
or
cmpsl
mov
sbb
mov
inc
repnz
int3
loopne
test
popf
aaa
rcrb
cmc
dec
jmp
ljmp
ret
andl
adc
xchg
pop
sbb
scas
cld
xchg
jl
add
push
xor
mov
outsl
es
pop
rolb
sbb
dec
mov
popl
pushf
ds
pop
movsl
xor
test
cmp
adc
inc
cmpsb
add
mov
das
dec
mov
inc
loope
call
or
or
popa
pop
sbb
push
cmp
ret
imul
js
pop
add
fcmovnbe
xor
jle
inc
sub
mov
ss
cmp
daa
arpl
adc
push
cmpsl
jo
inc
inc
shl
push
test
inc
adc
and
lret
lods
inc
mov
jnp
pusha
add
ss
hlt
jp
mov
sub
cmc
insb
add
daa
outsb
mov
xor
shlb
pop
xchg
inc
push
mov
mov
adc
jmp
adc
lods
or
rorl
aam
mov
push
enter
xchg
lods
mov
mov
out
loope
andl
push
xchg
test
mov
jp
pop
adc
cs
sub
xchg
arpl
movsb
cltd
mov
rorl
loope
sbb
test
movsb
jecxz
sbb
out
adc
bound
lea
bound
loop
movl
dec
sub
sbb
or
enter
in
out
and
push
sub
jbe,pn
jecxz
add
push
push
repnz
mov
dec
mov
push
sub
cs
pop
mov
add
mov
push
mov
adc
roll
push
cmpb
pushf
push
lea
je
shr
and
sbb
adc
cli
xor
mov
xchg
bound
movsl
mov
pusha
inc
dec
sub
call
cmpsl
rcll
or
hlt
mov
adc
dec
loop
or
inc
cmp
add
stos
push
outsb
out
push
adc
das
push
shrl
push
cmp
push
lods
pop
inc
jb
and
xchg
decl
lods
inc
jle
cmpsl
or
pop
push
test
cmp
test
rcrb
add
mov
sub
sbb
sbb
mov
aaa
daa
imul
cs
fsubr
add
mov
mov
stos
mov
sbbl
fld
shr
adc
adc
jne
xchg
add
inc
or
push
rclb
mov
xchg
xor
outsb
popa
cltd
mov
push
push
std
imul
pop
ret
sbb
outsl
fcomp
inc
test
inc
les
js
dec
or
popf
insb
cld
mov
mov
cltd
add
mov
ret
lea
das
push
loope
adc
mov
enter
and
sub
cmp
sbb
mov
pop
lods
add
adc
sub
lods
mov
sbb
add
push
nop
ljmp
pop
add
lcall
or
pop
sbb
mov
cmp
sbb
adc
enter
mov
popa
xchg
push
sub
jo
les
mov
ss
mov
cmp
lret
sub
jnp
pushf
aad
fiaddl
push
clc
gs
in
loop
adc
ds
imul
pusha
jns
cs
adc
mov
arpl
or
and
scas
bound
movsb
cmp
popf
xchg
sbb
or
adcb
dec
and
mov
inc
hlt
jmp
addl
push
aam
cld
or
push
pop
xlat
xchg
and
push
sub
jnp
and
scas
shrl
cwtl
push
mov
push
outsb
sub
mov
cmp
sbb
dec
xchg
mov
shlb
das
popa
pop
ljmp
leave
ds
or
leave
pop
imul
mov
push
push
sub
dec
mov
add
les
jp
out
xchg
xorl
xchg
daa
push
jg
cmp
add
push
add
stos
push
stos
and
in
rol
push
mov
jb
sahf
add
xor
and
adc
xlat
lods
or
ret
pop
cmpb
mov
cmp
dec
loope
stos
scas
mov
mov
sbb
or
aam
ret
cli
cli
xor
and
into
fsubl
sbb
cmc
icebp
daa
cmc
add
inc
leave
or
movl
cmpsl
pop
inc
adc
xlat
pop
xlat
cmp
push
pop
push
mov
fsin
fimuls
xor
fisttpl
mov
ljmp
rolb
inc
cmp
and
lock
mov
push
addb
rcrl
enter
loope
int3
gs
or
rorb
and
hlt
inc
test
test
in
daa
sbb
sub
pushf
mov
inc
sbb
into
mov
add
ret
cli
or
and
jp
insb
negb
xor
call
daa
push
dec
sbb
dec
test
push
fbld
dec
xchg
mov
cmpsb
xor
fisubl
pop
popf
add
in
je
or
movsl
rcrb
sub
or
xchg
divb
sbb
sbb
imul
es
insl
test
or
pop
lods
test
adcl
or
add
jmp
testb
push
add
mov
or
or
pop
cmp
jbe
sbb
bound
or
outsl
dec
lock
aam
adc
movsb
lock
mov
mov
mov
push
dec
roll
sbb
xchg
mov
sbb
mov
cmp
inc
divl
cs
or
js
ja
cmp
adc
and
rclb
lods
push
cmp
sub
adc
mov
add
decb
addr16
pushf
test
loopne
cs
cmpsb
cs
out
rolb
add
inc
les
outsb
jo
pusha
in
mov
push
push
xorb
inc
lahf
sub
mov
in
xor
jo
sub
jb
xchg
mov
cltd
std
push
push
xor
loope
dec
adc
cli
adc
add
loope
mov
mov
mov
cld
dec
popf
and
mov
or
dec
popf
dec
cwtl
leave
rolb
add
cmp
push
aad
popa
push
movsl
sbb
je
xor
push
add
mov
cmpsb
rorb
int3
pop
clc
and
cmp
lods
rclb
iret
cli
dec
lahf
add
mov
mov
and
jb
in
les
jnp
movsl
mov
or
mov
add
jo
push
xor
cmp
pushf
push
push
scas
sti
add
jl
dec
stc
cmpsb
pop
add
add
lods
mov
js
enter
pop
and
sub
test
enter
sbb
push
or
xchg
jne
and
or
shlb
lcall
pop
inc
fidivs
or
std
movsl
push
addl
mov
jb
lret
test
pop
hlt
and
inc
filds
rcrb
sbb
add
adc
mov
mov
dec
push
or
loop
mov
sub
and
push
mov
jp
xor
cmp
mov
mov
xchg
in
cmp
daa
hlt
xor
mov
push
stos
push
clc
sahf
loope
fstpt
stc
clc
xchg
pusha
test
add
adc
test
sbb
xchg
and
leave
pushf
call
daa
add
nop
inc
pop
aam
loop
mov
adc
adc
pop
adc
add
jno
mov
test
inc
sbb
xchg
push
push
aad
dec
add
cmpsb
mov
push
inc
pop
nop
add
dec
sbb
sub
mov
notl
pop
pop
out
pop
xor
cld
xor
xchg
addl
sub
dec
test
jmp
or
test
dec
push
sarb
sbbb
es
xchg
mov
movsb
xchg
mov
xchg
push
es
shr
xchg
add
sbb
fsubrs
loope
mov
fistpl
js
ss
clc
add
pusha
rclb
xor
shr
scas
outsl
pop
push
std
xor
cli
das
or
je
loope
inc
ljmp
jns
jne
cmovne
bnd
and
fldt
adc
call
rolb
aam
add
adc
xor
lods
dec
ds
pop
loopne
adc
stc
test
xor
adc
daa
inc
bound
sbb
mov
and
xor
adc
and
mov
or
sub
mov
lret
sub
int3
sub
popf
xchg
subl
clc
pop
sbb
shrl
insl
cmp
int3
adc
mov
shlb
test
gs
loop
and
daa
xor
icebp
loope
test
or
pop
adc
push
jl
push
bound
xor
shrb
and
jo
out
xor
shlb
jo
das
inc
and
mov
inc
mov
pop
cltd
shl
out
ret
test
or
push
cs
push
cmc
push
pop
xor
lods
sbb
dec
pop
adc
enter
movsl
call
subb
add
fisttpll
cmpb
bound
mov
add
sbbb
push
fsts
ror
cmp
mov
lret
and
cmp
adcb
movsb
add
dec
lock
xchg
cmp
clc
push
loop
in
or
movsl
inc
jp
xor
aad
add
sahf
mov
push
mov
ret
and
pusha
mov
or
roll
jmp
xor
xchg
add
lret
lahf
sbb
sbb
jle
sbb
enter
add
or
addl
and
cltd
add
push
scas
repz
push
or
add
xlat
imul
adcb
inc
ljmp
mov
adc
inc
mov
add
roll
mov
testb
jne
push
imull
dec
add
inc
cmp
push
sub
and
int
adc
adc
test
adc
push
out
lds
jge
push
xchg
ret
sbb
loope
mov
dec
sub
or
inc
lock
or
lock
int
dec
ss
cmp
cmp
xchg
shll
xor
pusha
imul
jmp
or
dec
rcll
ret
movsb
pushf
inc
nop
mov
pop
adc
and
lea
hlt
sub
xchg
or
jmp
or
in
rol
mov
jnp
test
ret
movsb
fimull
mov
jo
aad
sub
sbb
or
aam
add
jmp
dec
rorb
inc
mov
add
sub
test
add
xor
mov
add
pusha
pop
jns
add
dec
pop
jne
ds
mulb
jmp
add
push
mov
push
inc
add
mov
adc
add
rol
addl
add
or
cmp
daa
jl
mov
rcl
and
sbb
xchg
push
sbbb
ficoms
add
sbb
add
push
mov
sbb
scas
movsb
pop
inc
mov
jo
mov
cld
insb
xchg
lahf
add
cmp
dec
andb
imul
mov
inc
and
xchg
loop
mov
iret
jbe
shl
rorl
ret
push
ret
hlt
xchg
adc
sbb
cmp
ret
mov
pop
mov
andl
cmp
stos
test
pop
icebp
or
sahf
add
dec
add
cmpsl
lcall
jmp
sbb
test
je
xchg
clc
xor
jecxz
adc
jne
adc
fucomi
stos
adc
lret
pop
cmp
push
loope
dec
cmpsb
shlb
push
xchg
fcomp
adc
fdivrs
leave
adc
js
cwtl
movups
xor
add
jo
roll
and
jno
add
add
inc
test
test
repnz
sbb
rcl
mov
dec
test
adcb
pop
rclb
push
and
movsb
sbb
or
sub
sub
mov
movsb
pushf
add
mov
cs
mov
sbbl
jno
adc
sub
std
xchg
shrb
orl
adc
sbb
lcall
cmp
adc
xor
mov
insb
add
test
pop
cmp
sbb
add
cmovnp
hlt
lods
mov
sbb
cwtl
push
js
inc
sub
shrl
xor
fs
push
xor
lods
and
push
movsl
pop
ss
xlat
mov
lock
aam
jmp
cmc
xor
adc
or
jae
mov
or
stos
dec
cmp
movb
orb
leave
cmp
inc
inc
mov
jmp
push
push
sub
add
push
mov
mov
ret
loopne
sub
mov
mov
sbb
add
xor
xlat
popf
inc
push
mov
out
nop
stos
cmpsl
aam
mov
push
push
or
inc
gs
sbb
scas
xchg
cs
adc
sbb
cs
cltd
or
insl
bound
subl
and
mov
xchg
xchg
les
dec
cmp
xchg
mov
adc
bound
xchg
and
or
sbb
xchg
pop
into
popa
lock
jecxz
ss
in
sub
icebp
mov
outsb
sub
mov
sbb
jmp
popf
psllw
cmp
adc
sahf
sbb
addr16
dec
pop
jno
lret
pop
add
or
adc
add
loop
jo
ret
clc
mov
mov
mov
pop
into
inc
es
xor
cmp
mov
xchg
push
fadds
sbb
lds
inc
ljmp
fistpll
lock
push
xchg
fdiv
jmp
adc
pushf
arpl
cwtl
sarb
pop
jl
daa
es
inc
pop
aas
shlb
mov
fs
stos
add
push
inc
sub
jl
dec
add
push
adc
call
addb
push
mov
enter
or
push
pop
dec
imul
test
lods
int3
push
jno
dec
add
add
daa
jmp
pop
ret
call
ret
pop
ret
mov
das
call
push
je
sbb
sbb
rcrl
jp
or
push
sub
ds
xor
push
dec
test
mov
jl
aam
sub
testl
addb
mov
js
popf
int
add
or
xor
mov
add
add
and
shl
rorb
pusha
ficompl
xchg
cmp
pop
ficompl
sarb
adc
push
sbb
xor
andb
xor
test
pop
add
lcall
insl
xlat
push
xchg
xor
stc
fadds
dec
loop
jne
or
push
xchg
out
test
xor
inc
js
cmpl
mov
lret
shrl
inc
add
fiadds
adcl
and
sbb
aam
pop
dec
dec
xor
pop
rcll
add
addb
sti
lcall
sbb
add
pushf
and
cmpsl
sbb
and
cmp
inc
cli
call
orb
cmp
lock
push
xor
sarb
sub
sub
xor
bound
shl
add
push
sbb
xor
jbe
cwtl
data16
and
mov
rclb
mov
in
push
daa
mov
sub
scas
movsb
mov
xchg
test
inc
jo
call
dec
mov
hlt
sub
xor
repnz
inc
push
xchg
sahf
xor
sub
imul
outsb
add
lods
push
add
movsb
cmp
pop
sbbb
push
xor
or
test
mov
mov
stos
xorl
lods
dec
and
xchg
repnz
addr16
add
add
xchg
mov
xchg
shrb
in
xor
xor
fs
sub
gs
add
pop
movsl
xchg
cs
mov
cmpsl
or
pop
adc
hlt
movsl
cmovo
ss
or
mov
dec
sbb
or
cmp
sbb
mov
cli
cli
add
enter
dec
cwtl
aas
lock
popa
mov
test
push
and
faddl
jo
movsl
add
add
mov
lret
and
lret
fcompl
or
push
sub
cmpl
dec
push
fisttps
jo
dec
add
sti
push
into
jge
push
mov
movsb
cld
xchg
sbb
inc
or
xor
int3
rclb
mov
pop
sub
add
fdivrl
mov
xchg
out
or
inc
rorl
data16
inc
cmp
ds
pop
cld
scas
popa
add
enter
mov
pop
sbb
aam
push
icebp
mov
in
mov
sbb
cli
pop
js
or
cltd
jo
leave
fildl
mov
mov
mov
clc
aaa
nop
lock
jp
test
dec
cmp
and
mov
fidivs
es
mov
mov
test
add
clc
cmpsb
xor
dec
ljmp
testb
call
orb
mov
push
es
cmp
sub
cmp
cmp
js
jmp
push
jo
sub
daa
sbb
out
addb
lahf
loop
dec
ret
icebp
push
xor
adc
add
ret
dec
mov
sbb
and
inc
pop
inc
mov
jne
bound
cmp
push
jnp
mov
mov
xchg
inc
or
orl
jp
cmpsl
adc
xchg
mov
mov
or
cwtl
or
lods
arpl
sbb
lret
pop
jp
and
stos
add
insl
push
fstp
shrb
rclb
aam
mov
jbe
out
js
dec
pop
or
jle
push
jne
xor
or
adc
dec
push
incl
pop
loop
adc
xchg
dec
xor
data16
cwtl
out
adc
les
and
ficoms
cmp
sbb
push
enter
pop
inc
and
popa
push
fldl
nop
add
dec
insb
roll
rorl
icebp
dec
arpl
sahf
push
pusha
popf
in
rolb
pop
aam
sub
sbb
xor
jl
xchg
xchg
push
push
mov
in
ja
adc
sbb
cmp
andb
and
dec
jecxz
cmpsl
jnp
xchg
jo
xchg
es
sbb
pusha
push
sbb
movsl
jo
cmc
out
adc
add
aam
add
scas
lds
popf
dec
sbb
push
inc
pop
arpl
dec
test
mov
xchg
xor
dec
push
ror
les
enter
lods
push
orl
imul
mov
or
jge
sbb
jp
cmpsb
xor
add
lds
pop
enter
mov
dec
push
and
ljmp
incb
or
ficomps
in
mov
js
sub
pop
dec
ret
pop
dec
bnd
nop
add
add
imul
inc
xchg
loop
adc
lret
jae
mov
rolb
push
imul
mov
ret
xchg
daa
das
push
jb
fwait
mov
mov
rcrl
daa
and
inc
shrb
adc
jno
xchg
and
test
loop
aaa
rolb
leave
lock
xchg
mov
jmp
xchg
clc
pop
enter
dec
pfnacc
mov
ja
adcl
pop
test
xchg
add
andb
inc
rclb
mov
mov
sbb
lods
pop
outsl
xor
push
pop
push
xchg
mov
lar
mov
xor
enter
push
in
movsb
lds
scas
cmp
loope
loopne
ret
call
lds
pop
mov
sub
bnd
jmp
or
outsb
pop
lret
test
xor
sub
jo
mov
sub
adc
dec
loop
mov
sbb
js
sub
mov
movsb
aam
rorb
jb
dec
push
movsl
mov
orl
adc
in
push
ljmp
dec
jmp
adc
dec
and
inc
lret
cmp
je
inc
sbb
es
xor
testl
movsl
mov
test
mov
movsb
jmp
or
push
repnz
or
mov
cmp
inc
je
pushf
pop
and
in
std
les
fs
mov
adc
and
loop
loopne
ret
lock
and
add
ror
xchg
pop
and
push
mov
imul
or
stc
pop
cwtl
push
add
call
push
scas
dec
fnstenv
or
mov
push
inc
call
enter
lahf
arpl
dec
jo
cli
push
xor
pop
xchg
daa
mov
xchg
test
pop
repnz
movsl
lock
xchg
push
mov
xor
xchg
movb
inc
lods
addb
add
add
int3
mov
inc
call
popa
mov
sbb
cltd
sbb
or
xor
inc
xchg
push
les
arpl
aas
mov
pop
mov
push
nop
pusha
add
push
add
mov
and
add
and
xor
loop
jno
push
jge
push
icebp
jp
int3
shl
lods
cmp
xchg
add
adc
push
and
push
aam
jnp
and
popa
mov
and
cmp
adcb
int3
sbb
dec
sbb
adc
inc
dec
xor
sbb
add
jne
inc
nop
and
push
jo
mov
dec
add
xchg
lods
and
add
xchg
insb
rorl
jp
push
push
jmp
pusha
fsubrs
dec
cmp
mov
pop
jbe
and
pop
sbb
loopne
cmp
dec
aas
add
movsb
mov
jno
push
jl
pop
xchg
sbb
test
push
sbb
pop
adc
lock
push
loopne
add
or
mov
testb
mov
pusha
outsb
xor
add
mov
xor
shlb
add
or
shl
and
and
add
orl
jnp
xchg
mov
xor
xor
xchg
or
mov
ljmp
mov
mov
xchg
out
xor
cmpb
inc
mov
push
or
sbbl
roll
inc
inc
cmp
shrb
xchg
add
loopne
flds
sbb
adc
inc
test
adcb
sbb
inc
bound
xchg
dec
iret
xchg
sbb
adc
inc
sbb
repnz
add
mov
push
jmp
push
push
imul
adcl
xchg
sahf
inc
stc
and
jb
push
dec
or
xchg
push
add
into
adc
mov
fs
add
adc
mov
ret
das
or
shrb
sub
enter
xor
sbb
outsb
rclb
cmc
arpl
or
or
les
sbb
shll
xchg
je
mulb
jne
mov
lea
inc
mov
xlat
mov
and
ss
loope
mov
pop
in
pop
scas
sbb
clc
push
cld
pop
dec
dec
xor
jl
call
cmp
clc
das
pop
lods
add
jns
dec
clc
shlb
add
decb
enter
cltd
sbb
mov
bound
lods
sbb
cmp
je
push
mov
pop
popa
adc
mov
dec
pop
add
add
sarb
daa
inc
dec
ret
xchg
insb
ljmp
xchg
pop
dec
inc
clc
cmp
jne
push
fdivl
cs
dec
pop
xchg
clc
aam
lock
add
clc
jns
pop
xchg
imul
sahf
push
cli
out
dec
pop
push
pushf
lret
roll
arpl
push
cs
mov
or
jne
cmc
push
adc
icebp
cmpsb
xor
or
lea
jns
mov
push
test
das
pop
decb
adc
sub
pop
mov
mov
pop
push
rcrl
imul
sub
movsl
sbb
ds
xor
test
lahf
mov
icebp
nop
mov
mov
push
xchg
mov
add
pop
push
mov
jne
push
hlt
push
add
fidivrs
loopne
add
fs
or
cs
mov
popf
sbb
sbb
jbe
fs
lcall
or
fcmovnbe
std
or
mov
imul
sahf
mov
repnz
sbb
push
dec
aas
ret
sbb
pop
adc
mov
add
dec
das
test
pop
or
nop
and
sbb
daa
or
cmc
enter
and
push
mov
push
push
stc
sbb
pop
add
dec
sbb
iret
orb
adc
and
mov
pop
mov
hlt
rclb
addr16
test
jne
mov
sbb
outsl
or
pop
xor
or
pop
and
inc
and
push
aas
xor
loopne
ret
mov
ss
mov
mov
pop
out
rorb
or
push
add
pop
sbb
pop
pop
rol
pop
adc
dec
pop
adc
movsb
test
and
add
sub
mov
mov
sbb
xor
push
and
jmp
cmp
imul
adc
push
or
xchg
mov
mov
xchg
mov
or
shll
dec
cmp
jne
int
enter
or
pop
inc
movl
cld
cmp
inc
cs
fnop
adcb
mov
add
cld
into
lcall
or
mov
aam
push
lock
lret
or
xchg
push
push
loopne
pop
mov
sub
xchg
dec
dec
das
sarb
fcomps
push
jb
push
mov
xlat
loop
and
lock
jo
subb
lcall
xor
and
and
xor
lcall
xchg
push
adc
or
dec
xor
or
out
jbe
idivl
cli
sbb
pop
inc
dec
inc
mov
or
sub
add
pop
sbb
cmp
rcr
cli
adcb
adc
jno
enter
mov
xchg
adc
cmpsb
xor
cli
repnz
xor
sbb
pop
out
outsb
xchg
lods
popa
sahf
aam
xchg
mov
sub
push
icebp
ret
popa
mov
cmpb
addr16
jmp
rcrb
cmp
add
mov
mov
in
adc
xor
push
decb
xorb
mov
or
and
lods
pop
jecxz
mov
test
push
enter
int
dec
iret
add
out
add
movups
dec
xchg
pop
loope
xchg
je
push
fnsave
push
daa
negb
call
adc
xor
aam
dec
ljmp
imul
or
xor
dec
scas
add
inc
lahf
xlat
adc
mov
mov
pop
xorb
add
and
xchg
sbb
rcr
insb
mov
aad
adc
cmpsl
add
hlt
outsb
inc
shr
gs
push
xchg
pop
mov
dec
mov
lock
add
sbb
popa
incb
xchg
sbb
mov
push
xor
aad
out
sbb
cmp
push
cmp
out
test
jo
lods
jbe
adc
test
rcl
xchg
movsb
test
add
add
adc
or
jo
pop
in
fs
lea
dec
push
add
dec
enter
fistl
push
nop/reserved
mov
cmp
jmp
sbb
sahf
andb
lock
lock
mov
ljmp
test
add
ljmp
orb
or
push
sub
jl
xor
out
adc
lcall
imul
inc
add
std
test
test
add
pop
lahf
sbb
cmp
and
or
pop
in
test
pop
rcl
fisttpl
mov
test
inc
sub
lcall
in
inc
lea
add
xor
je
cli
call
cmp
icebp
push
loop
adc
jno
adc
adc
sub
jmp
out
xor
cs
xor
pop
mov
pop
out
mov
push
adc
jne
loopne
mov
sbb
testb
push
adc
lea
insb
ljmp
cltd
gs
inc
adc
mov
bound
decb
stos
lret
sbb
xchg
int
add
or
dec
subb
jo
ficoms
and
loop
pop
into
push
pop
jno
mov
pushf
dec
adc
jns
push
sbb
les
inc
adc
sbb
iret
xchg
addr16
or
fildl
sub
test
das
js
das
fwait
jecxz
shlb
out
adc
ljmp
js
jecxz
shlb
xchg
xchg
mov
sbb
rcll
push
jbe
std
addb
scas
dec
int
mov
call
pop
data16
fldcw
push
fwait
adc
add
pop
jmp
cmpsl
sbb
jb
arpl
hlt
loopne
es
push
push
ljmp
loop
and
es
clc
sbb
add
call
icebp
mov
je
cmp
rclb
lock
imul
rcl
pushf
adc
popa
sbb
int3
pop
decb
add
dec
lea
or
mov
add
or
add
cmp
enter
or
jns
sbb
lea
inc
adc
loope
inc
cmp
divps
icebp
and
jbe
daa
lods
add
push
lcall
pop
cmp
pop
sbb
jnp
lret
movsb
sti
and
pusha
sbb
mov
pop
pusha
and
nop
jb
inc
push
push
dec
or
data16
jge
inc
add
call
add
or
jno
lahf
jo
push
push
repz
mov
pushf
inc
sbb
outsb
adc
mov
gs
aad
jne
inc
jmp
test
jl
test
hlt
je
into
popl
xchg
cmp
scas
xchg
sbb
dec
and
xchg
cli
fadds
icebp
inc
js
mov
enter
mov
and
data16
call
xchg
sbb
mov
popa
shlb
mov
xor
xor
rcll
or
rcl
push
js
dec
inc
add
push
push
or
xchg
dec
pop
cmpb
push
dec
xor
cmp
rorb
adcl
add
mov
dec
shr
loope
fsubl
jo
and
dec
sbb
sbb
xlat
xor
pop
xchg
pop
pop
popa
fsubs
xchg
and
in
adc
xchg
adc
loop
loop
adc
int
xchg
enter
and
sbb
jp
lods
or
cmpsl
hlt
xchg
fisubrl
sbb
cmpsl
enter
pop
push
jmp
pop
xor
mov
sbbb
pop
and
popa
icebp
call
sbb
inc
cmp
addl
mov
adc
cmpsl
push
xorl
mov
cmpl
dec
push
rol
inc
dec
or
cmp
loopne
xor
je
js
icebp
in
mov
cs
or
mov
push
cmp
push
cli
mov
pop
or
inc
push
sbb
jo
mov
loopne
sub
xchg
push
clc
jmp
adcb
push
sub
test
add
adc
mov
sub
push
xchg
push
ss
pusha
cmpsb
cmp
clc
add
or
or
xor
or
xchg
jle
xor
adc
and
or
sbb
and
push
mov
aas
add
icebp
sub
loop
sbb
sbb
or
pop
andb
xchg
scas
inc
in
adc
or
ret
inc
add
jo
push
mov
jo
inc
stc
mov
pusha
xchg
pop
add
cmc
add
ficomps
inc
sbb
or
mov
mov
adc
jmp
xor
dec
adc
js
shrl
ret
ds
adc
sub
adc
lods
xlat
testb
or
inc
inc
mov
mov
pop
dec
rorl
push
sahf
or
out
pop
sbb
rolb
fsubr
insb
call
ror
xchg
out
and
shll
xor
shrb
sbb
xchg
adc
lahf
jge
clc
loope
cmp
push
or
movsb
lds
rorl
dec
xchg
mov
or
and
add
mov
cli
and
push
lock
movsl
cmpsb
sbb
pop
mov
add
pop
dec
les
push
data16
sbb
divb
mov
xor
xor
mov
out
aam
ret
or
xor
in
rclb
adc
sbb
push
enter
add
les
jne
fiaddl
popl
mov
and
or
or
movsl
pushf
icebp
stos
mov
hlt
gs
mov
pop
hlt
push
stos
enter
fs
mov
and
and
sbb
out
popa
mov
xlat
inc
jmp
jbe
or
es
xor
sub
ljmp
stos
clc
xacquire
sbb
sarb
in
aaa
daa
mov
and
loop
adc
jmp
dec
mov
cmp
xchg
insb
cmp
xor
or
shlb
aad
test
fdivrs
fcomi
ss
into
sar
clc
xor
add
add
cwtl
add
ss
push
addps
jl
add
adc
push
ret
inc
or
xor
adcl
enter
sbb
and
add
push
push
adc
jle
stos
push
or
and
rcrl
and
pop
movsl
inc
sbb
sbb
sbb
xlat
stc
sbb
pop
adc
cmpsl
mov
adc
adc
addr16
inc
pop
addl
movsb
shrb
push
jmp
sbb
push
xor
push
rolb
jg
movsl
lods
lods
mov
dec
inc
fidivrl
ficomps
mov
cli
add
sbb
dec
jmp
add
cmp
sbb
add
add
xchg
push
pop
xchg
push
jne
mov
je
mov
arpl
ds
inc
or
or
jb
pop
push
mov
movsb
cld
rcl
pop
xchg
mov
loop
sbb
cltd
fwait
add
pop
or
xor
data16
or
xor
inc
or
sub
stc
adc
pop
cli
mov
and
daa
out
fadds
lds
mov
mov
iret
pop
sbb
mov
lods
rolb
sbb
and
inc
out
and
mov
gs
call
add
lcall
lods
adc
inc
inc
push
aad
les
add
add
sbb
pop
pop
cwtl
dec
repz
push
add
movsb
and
push
and
sbb
dec
ret
push
dec
pop
or
add
xchg
mov
sub
jp
mov
jae
push
add
mov
fwait
sbb
sysret
in
rclb
pop
lods
mov
enter
jnp
and
push
push
push
add
or
pop
es
sub
add
adc
xor
scas
enter
das
xor
sub
pop
push
xor
or
xadd
sbb
adc
push
cmp
dec
fistl
mov
push
lods
pop
xchg
pop
icebp
push
sub
insb
data16
clc
xor
mov
clc
xchg
push
mov
nop
sbbb
or
or
hlt
enter
cmp
adc
adcb
xor
and
rorb
or
nop
daa
loope
sahf
xchg
push
sbb
je
sbb
sbb
cmc
insl
sahf
sub
inc
loopne
out
adc
jp
xor
pusha
jecxz
out
lahf
dec
ret
rcrl
loopne
call
dec
loopne
ljmp
jp
icebp
xor
rolb
daa
pop
insb
mov
ljmp
mov
push
lret
add
sbb
add
cmp
jo
cmp
insl
popf
sub
cli
mov
aam
cmp
xchg
push
addl
pop
jle
nop
push
ss
adc
jecxz
and
cmc
inc
lea
pop
sbb
lret
cmp
and
addb
imul
and
push
movsl
rolb
ds
lea
stc
adc
lods
xor
call
or
andb
repnz
sub
fiaddl
enter
iret
leave
movsb
push
add
lret
pop
adc
rcrl
sub
adc
movsl
lods
fs
movsb
int3
cs
sarb
or
loop
or
push
xchg
push
xchg
pop
jb
mov
sbb
adc
inc
sbb
scas
and
xchg
pop
mov
orl
lcall
inc
das
leave
add
jne
dec
push
mov
mov
flds
andb
test
call
dec
inc
and
arpl
or
aad
dec
push
inc
enter
mov
dec
adc
sub
mov
into
and
lahf
les
les
mov
pop
js
inc
lea
pop
inc
mov
mov
aam
pop
pop
pop
movsb
or
push
cmpb
and
jp
pop
sbb
loopne
and
xor
idivb
mov
dec
push
sbb
jp
jmp
cld
push
mov
fcoms
shrl
adc
add
rcr
loop
pop
mov
rolb
or
icebp
loopne
cmp
mov
jp
add
adc
push
loopne
pop
pop
cli
or
subb
mov
add
test
xchg
arpl
mov
mov
loop
enter
inc
sbb
rol
sbb
jb
xchg
movsb
adc
inc
lods
xchg
pop
popa
mov
test
xor
push
pushf
les
add
enter
pop
xor
and
mov
dec
jp
mov
mov
loopne
not
bnd
sub
ror
mov
aad
insb
jo
mov
data16
cmp
inc
daa
jecxz
xchg
test
insl
sbb
lock
fsubs
xchg
mov
mov
and
pop
fldcw
test
les
xchg
pop
cli
fs
push
pusha
mov
int3
and
cmp
ret
dec
test
fiadds
movsl
addl
sbb
or
sub
data16
arpl
mov
xchg
pop
add
jb
add
sbb
inc
movsl
add
lret
mov
dec
leave
pop
mov
sbb
lds
sbb
sbb
in
sarw
xchg
roll
iret
testb
mov
es
cmp
dec
or
adc
push
clc
mov
adc
mov
cmp
xchg
push
push
mov
loopne
call
adc
bound
je
push
dec
mov
test
lahf
and
sub
dec
mov
rcrb
stc
add
movsb
and
or
sbb
in
jl
cmp
or
jp
or
mov
cmpb
into
pop
orl
add
mov
pop
or
jp
ffreep
je
andb
push
sbb
jmp
mov
les
and
pop
adc
jno
and
bound
adc
in
cmc
or
sbb
push
fs
lods
arpl
ljmp
cli
inc
dec
int3
mov
pop
sub
mov
lods
shl
add
mov
pop
loope
sbb
pop
pop
les
shl
sarl
push
scas
push
fiadds
adc
mov
cmp
add
mov
adc
sahf
jp
inc
add
fs
imul
xchg
leave
inc
sbb
pop
rcl
sub
cltd
add
nop
mov
psubsw
mov
adc
lods
push
test
rcl
push
mov
dec
lock
add
sub
pop
pop
lea
call
sub
mov
add
ds
cli
add
adc
or
pop
and
cs
jae
sbb
aad
mov
ret
mov
orl
xorb
xchg
dec
dec
bound
sbb
add
imul
push
test
add
pusha
or
mov
mov
mov
cwtl
pop
xchg
xor
stos
jne
imul
popf
pop
test
inc
adc
insb
ret
ret
sarb
vpshufd
mov
test
cmp
pop
fstpt
cmp
sbb
rorb
pop
cwtl
push
pushaw
in
xor
js
mov
out
adc
sub
mov
les
pushf
xor
daa
inc
mov
sbb
push
xlat
add
xchg
sbb
sub
adc
xchg
movsb
arpl
and
push
cmp
and
inc
lret
push
inc
loope
cmp
mov
test
push
adc
mov
inc
add
mov
rol
add
xchg
rclb
jmp
ret
add
sub
mov
movsl
push
dec
pop
xchg
xor
sahf
or
bound
fcoms
dec
std
loopne
or
js
hlt
xchg
inc
push
shrl
xchg
hlt
xor
inc
xchg
or
ret
lret
pop
sbbl
and
mov
push
arpl
daa
pop
jmp
mov
add
push
bound
gs
addb
push
add
dec
roll
sub
mov
jmp
inc
les
orb
addr16
mov
les
sbb
dec
lret
cmp
rol
and
les
pop
shll
lods
test
push
insl
or
pop
enter
xor
js
sub
xchg
mov
lcall
xchg
lcall
sbb
or
inc
je
and
or
adc
push
les
inc
pop
daa
ljmp
fcompl
movsl
dec
sub
into
mov
test
lea
mov
cmp
orb
pop
imul
stos
inc
clc
xchg
mov
cmpsl
je
jecxz
test
daa
lret
bound
rcl
out
add
xchg
in
dec
pop
ror
xchg
push
xor
mov
mov
and
sarb
adc
lock
sub
mov
or
or
mov
rorl
mov
xchg
call
rcll
add
mov
inc
pop
add
or
mov
adc
sbb
scas
mov
cmc
fiaddl
cmp
add
jmp
decb
movb
cmpsl
pusha
or
gs
nop
notl
push
pop
push
cmp
cmp
sahf
mov
sub
loope
pop
out
icebp
add
push
or
adc
sbb
xchg
insl
pop
lret
or
push
lods
scas
imul
mov
push
outsl
pop
or
push
adc
adc
pop
and
sbb
xchg
push
adc
test
sub
mov
popa
pushf
insb
jb
lods
pop
and
xor
gs
or
mov
add
outsl
andb
adc
movsb
mov
loope
mov
push
ss
lea
mov
lahf
ljmp
cmc
cs
push
push
push
inc
mov
push
movb
pop
addr16
cmp
dec
xchg
xchg
jbe
arpl
xchg
mov
xorb
add
jo
push
push
or
cltd
cmc
in
push
push
pop
pop
xchg
xor
adc
jecxz
push
dec
cmp
pop
mov
insb
pushf
daa
and
adc
loop
imul
cmp
mov
mov
ret
fs
inc
sbb
roll
addb
or
mov
fwait
bound
sbb
or
dec
enter
cmpsl
dec
mov
jns
or
mov
add
mov
mov
jo
out
sub
andb
adc
sbb
mov
push
adc
mov
or
mov
pop
cwtl
scas
fnstcw
xchg
pop
mov
cmp
push
add
insl
movsb
insl
or
adc
add
icebp
cmc
adc
cmpsb
pusha
call
xchg
sub
enter
add
add
stos
mov
cmp
or
cltd
sub
sbb
loopne
test
pop
mov
dec
mov
sbb
xor
cmp
or
loop
adc
push
and
xchg
xchg
push
push
or
daa
push
sub
and
rcrl
jl
adcb
lds
and
popa
cmc
xchg
adc
adc
loop
xchg
push
mov
and
adc
call
imul
lds
xchg
icebp
inc
arpl
or
pop
mov
push
ficoml
dec
push
jmp
sahf
adc
pop
adc
mov
push
sbb
mov
icebp
inc
mov
and
sub
push
xchg
inc
cmp
jp
mov
add
inc
data16
cmp
inc
mov
add
adcb
les
adc
shlb
xor
jnp
xchg
mov
inc
test
mov
fmulp
adc
add
adc
int
scas
push
es
gs
adc
mov
xor
mov
cmp
loop
test
push
scas
sub
outsl
loope
and
call
aad
lock
aaa
mov
xor
mov
xor
inc
sub
call
xchg
xor
sub
mov
ss
daa
sub
loopne
pushf
sbb
and
lods
addl
movb
leave
hlt
ljmp
xchg
adcl
test
xor
sbb
mov
xchg
rorb
xchg
mov
adc
add
pusha
rcrl
jns
pop
sbb
js
cli
or
adc
ret
popf
mov
shl
rcrb
xlat
jo
arpl
jecxz
adc
sbb
cmovnp
hlt
pop
and
daa
inc
lods
dec
ss
insl
or
cmp
adc
outsb
xchg
mov
fcoml
push
cmp
test
add
outsb
hlt
mov
outsl
pop
outsl
jb
in
sbb
or
sbb
sub
pop
mov
add
into
je
dec
lock
adc
push
inc
aam
mov
xchg
ja
mov
repnz
or
pusha
sbb
fldt
or
or
ror
inc
adcl
pop
mov
movsb
scas
sbb
xor
ret
imul
xchg
adc
xchg
xchg
add
add
push
mov
push
xor
pop
xchg
loope
sbb
or
ficomps
cmp
pop
and
insl
jmp
test
jge
dec
adc
js
add
push
movl
ljmp
lods
adc
push
xor
mov
sahf
dec
mov
push
out
and
jmp
push
frstor
jae
dec
or
subb
inc
sbb
sbb
mov
movb
shr
fs
push
mov
cli
lock
stc
push
jmp
jg
cmp
xchg
je
adc
xor
mov
rolb
adc
sbb
inc
inc
add
pop
movsb
add
mov
sbb
fsub
or
mov
inc
mov
cmp
pop
jb
and
adc
mov
adc
rcrb
sbb
add
ret
xor
fmul
leave
jo
fidivs
bound
cmp
in
xor
inc
jno
add
cmpsb
movsl
movsb
push
stos
pop
xor
xchg
mov
lods
and
add
stos
ret
jno
mov
inc
pushf
sub
fmuls
btr
cltd
jp
add
loopew
jecxz
and
enter
stos
xchg
add
out
call
mov
and
les
sahf
xchg
stos
or
dec
pop
call
cmp
out
inc
add
add
push
inc
jmp
sub
dec
push
sub
cmp
sbb
or
mov
sbb
or
addb
dec
sbb
inc
pop
jmp
dec
cmp
sub
leave
inc
adc
inc
repnz
inc
adc
add
mov
out
sub
inc
lods
xor
jp
push
sub
sbb
rclb
jae
and
add
or
lods
test
dec
sub
mov
daa
xchg
ss
adc
jb
lock
xorb
rcr
add
fcom
ljmp
fimull
into
rclb
lret
jo
sub
lahf
xchg
adc
dec
test
ja
xchg
rorb
xor
inc
cwtl
movsb
gs
or
rorl
repnz
push
inc
lret
xor
shll
jne
test
push
mov
or
jl
icebp
enter
and
dec
xorl
daa
mov
scas
out
inc
loop
mov
cli
xchg
push
mov
clc
or
mov
and
cmpsb
fdivrl
sbb
push
loopne
or
mov
enter
and
xor
pop
xorb
adc
mov
dec
jge
adc
call
test
push
ret
add
add
pushf
dec
jge
jg
sub
enter
cmp
mov
arpl
loop
sbb
or
jmp
popa
jae
add
sbb
pop
inc
adc
movsb
shrl
ret
call
pop
js
mov
ret
jno
repz
push
and
and
lds
bound
inc
pusha
aaa
mov
les
daa
loopne
xchg
ret
push
dec
or
and
add
pushf
or
bound
out
push
in
mov
lock
roll
push
sub
movsl
rorb
inc
arpl
mov
or
dec
jbe
imul
ja
add
and
cltd
and
hlt
inc
xchg
shlb
pop
sbb
dec
mov
jp
xor
mov
aad
xchg
into
push
call
inc
sub
inc
adc
and
cltd
jl
sbb
fisubrs
lock
sbb
add
bnd
sbb
cmpsl
add
add
xchg
nop
aas
lea
add
cli
xchg
in
test
jne
icebp
cld
push
xchg
push
movsb
adc
push
rolb
adc
enter
pushf
jo
inc
lret
imul
and
sub
fnstenv
lcall
fdivp
add
shlb
adc
adc
push
arpl
push
adc
xchg
push
xchg
cmp
test
test
xlat
pop
add
insb
sti
test
adc
xorb
xchg
lods
add
push
es
xchg
xor
dec
dec
mov
rolb
sbb
js
lods
into
cmp
sbb
push
mov
lcall
mov
xor
inc
notb
inc
es
sbbb
push
fldcw
das
ret
rolb
cltd
test
daa
rorb
mov
jns
or
cmp
imul
or
nop
test
daa
mov
push
jmp
insb
xor
outsl
lock
xchg
inc
and
jge
and
add
push
adc
lret
stos
adc
mov
int
mov
ret
inc
pop
das
ret
pusha
mov
add
lods
sbb
ljmp
push
or
xor
or
sbb
ret
movsb
inc
push
adc
or
aam
incl
or
sub
jle
inc
mov
sbb
dec
sub
mov
inc
jns
xor
cltd
into
pop
pushf
popa
lods
cmp
mov
mov
ror
add
xchg
or
push
pop
std
inc
sbb
and
add
mov
rcrb
fwait
jmp
cwtl
sub
ret
add
xchg
ret
mov
or
mov
adc
int3
push
push
andb
mov
rol
adc
xor
mov
imul
loope
int
lret
mov
aam
cmp
int3
subb
push
or
rorb
cmp
mov
ljmp
xor
hlt
outsl
dec
and
add
rorb
movsb
fcmove
add
push
int
dec
into
adc
jne
add
inc
and
sbbb
push
into
xchg
andl
lods
sbb
mov
and
adc
leave
add
pop
pop
mov
test
xor
jo
lods
pop
repnz
or
push
xor
jno
sarl
loopne
mov
push
cmpsb
add
jno
sub
add
addb
add
xchg
addr16
xor
adc
jnp
cli
bt
dec
mov
adc
and
loop
ljmp
out
loope
test
sbb
xor
and
pop
scas
test
adc
jl
movb
and
xchg
mov
jns
push
int3
test
inc
push
add
fdivs
jns
cli
xchg
sbb
dec
pop
pop
rcl
cmp
das
lcall
or
aam
adc
mov
inc
pop
sarb
mov
xchg
addl
mov
mov
jge
sbb
cmp
xor
adc
xchg
aam
push
xchg
mov
adc
add
aam
jns
addb
call
fmuls
stos
ucomiss
test
not
popf
and
or
dec
or
cmp
sbb
dec
or
mov
mov
pusha
pop
xchg
mov
loope
adc
rcll
pop
push
ss
xor
insb
ficoms
jp
cmp
add
cmp
shrl
or
mov
imul
xchg
push
push
add
es
and
sbb
push
and
dec
push
dec
aad
xchg
sahf
mov
fsubl
and
jle
movsl
push
pop
cpuid
jl
xor
xor
pop
je
sbb
and
adc
orb
push
add
inc
dec
xor
into
int
sub
pushf
mov
or
es
outsl
lret
fnstcw
je
addb
add
fs
ljmp
cmp
inc
push
inc
js
cltd
les
xchg
mov
xor
sub
bound
inc
or
dec
fidivs
sahf
call
in
mov
push
fadds
pop
push
in
pop
xchg
or
xchg
rol
stos
adc
jo
call
sub
cmp
test
push
push
adc
add
sub
rorb
cmpb
lods
and
aaa
imul
add
or
fidivs
stc
mov
xchg
fwait
or
jp
popa
or
sub
pusha
lods
sahf
mov
outsb
xchg
ljmp
inc
dec
pop
mov
mov
sbb
xor
inc
pop
xor
das
enter
icebp
pop
inc
dec
roll
or
outsb
or
imul
push
ret
mov
or
les
or
sbb
call
pop
sbb
fisubrl
imul
mov
test
lcall
push
out
shl
adcl
jbe
outsl
aas
fstpt
sub
icebp
rsqrtps
push
jmp
add
inc
pusha
push
or
sbbb
add
add
and
push
cltd
sbb
xchg
pop
xor
add
inc
adc
test
xor
add
dec
das
pop
dec
and
adc
por
in
jb
fldenv
and
sahf
lods
dec
add
ret
cli
lods
rolb
test
lock
xchg
cmp
dec
xchg
pop
and
jmp
cmp
ret
push
xchg
push
mov
xchg
add
pop
pop
mov
push
rclb
push
mov
pop
dec
ss
or
sbb
std
xchg
movsb
add
adc
ret
or
push
stos
out
dec
cmp
sbb
xor
rorl
sub
orl
arpl
lcall
inc
pop
les
enter
subb
repnz
jne
pop
shrb
adcl
clc
push
gs
inc
or
mov
mov
sarb
lods
or
and
loope
movsb
test
andl
rol
lcall
and
mov
dec
loopne
inc
add
or
sbb
xor
xor
ret
or
lock
lods
movsb
and
pop
adc
adc
pushaw
test
cmp
clc
inc
pop
pop
test
mov
xor
or
stc
sub
xchg
or
dec
add
mov
and
orb
leave
mov
xchg
push
push
mov
and
and
adc
stc
and
xchg
andl
pop
pusha
sub
add
movsb
inc
test
into
sub
xor
dec
push
pop
push
adc
movsb
xor
xor
inc
or
rorb
les
lods
lret
inc
enter
popa
push
fstps
xor
mov
icebp
pop
add
cmp
test
ret
aam
jmp
test
movsb
add
pop
shll
addl
sbb
cmpsb
dec
and
jp
icebp
ljmp
pop
stos
pushf
sub
pop
rolb
push
aaa
inc
ret
push
adc
test
popa
dec
in
xchg
sahf
push
xchg
push
adc
into
push
dec
bound
and
sbb
ss
gs
inc
pop
mov
or
mov
add
in
cmpl
sbb
mov
nop
push
outsb
push
dec
sbb
adc
mov
cs
hlt
shl
insb
and
and
adc
je
bound
sbb
xor
and
ret
add
shll
xor
call
les
inc
in
mov
cli
insl
in
adc
ljmp
jo
xor
jecxz
xor
push
imul
pop
das
sbb
shlb
js
enter
mov
sarl
push
pop
imul
ret
adc
jo
jecxz
jg
add
mov
xorb
mov
dec
or
or
pop
and
push
mov
sbb
out
add
sub
es
push
or
and
fmul
es
mov
clc
adc
fsts
or
outsl
push
jecxz
inc
sbb
ljmp
stos
lea
adcb
push
pop
dec
sub
xor
adc
mov
pusha
pop
enter
push
xchg
les
jp
jae
and
and
and
sub
push
adc
loop
popa
test
mov
adc
jp
daa
movsl
sbb
push
inc
sub
lret
jmp
adc
jecxz
cmp
hlt
xor
and
inc
cmp
pusha
or
in
mov
push
jmp
push
adc
insl
or
adc
jns
and
js
mov
push
ja
fs
and
cmp
mov
into
sbb
cwtl
or
adc
xchg
adc
je
fs
mov
and
iret
rolb
fwait
shlb
lods
addr16
scas
add
pop
adc
push
push
fists
cld
ret
test
jle
pop
or
adc
cmp
inc
and
sbb
orb
arpl
adc
call
addr16
pop
adc
add
xor
add
push
and
pop
decl
push
push
lds
mov
dec
jno
mov
xor
rcr
stos
xchg
xor
lea
and
or
ret
inc
dec
lods
inc
and
mov
ss
mov
mov
test
lahf
loope
sbb
xchg
stos
add
loope
jle
cmp
popa
pusha
jmp
add
add
or
subb
pop
xor
lea
pop
add
inc
jmp
push
mov
xchg
cmp
in
xchg
sbb
fcom
pop
pop
push
push
lret
inc
jns
int3
sarb
mov
push
pushf
pop
or
or
mov
bound
pop
push
in
mov
xor
pop
inc
jecxz
or
add
out
dec
and
dec
lea
addr16
test
repnz
daa
sbb
cmp
out
mov
insb
sbb
pop
dec
lea
pop
sar
mov
push
lods
mov
sub
movsl
pop
adc
sbb
mov
sbb
nop
xor
xchg
mov
and
test
xchg
pushf
jb
add
clc
lods
jb
jmp
cmpsb
pushf
enter
adc
xchg
adc
loopne
xor
add
loope
sbb
andb
add
cltd
call
or
test
imul
sub
scas
outsb
pushf
out
dec
jns
push
negb
xchg
pusha
outsb
fistl
out
clc
dec
or
pop
jb
test
jno
jp
push
push
out
les
aas
adc
pop
test
inc
test
stos
inc
xor
scas
sbb
hlt
cmp
mov
and
leave
add
mov
adc
inc
jmp
mov
pop
add
push
es
mov
and
pushf
sbbb
or
xchg
fiadds
pop
pop
mov
adc
sub
push
adc
jp
cmp
arpl
imul
jp
int
es
shlb
test
test
sub
cmp
cwtl
xchg
daa
push
not
ret
fsubrs
repnz
adc
nop
cs
int
xchg
and
rolb
into
inc
cs
mov
and
mov
dec
sub
in
push
shr
add
popf
and
sub
int3
and
adc
nop
xchg
je
lea
pop
add
inc
add
inc
mov
ret
push
sub
cmpsb
popa
les
sub
cmp
xor
sbb
lea
xor
sub
inc
das
int
pushf
mov
repnz
into
pop
sbb
xchg
mov
push
fiadds
cmpsb
jmp
leave
insb
xor
nop
mov
bound
jo
dec
rorb
sbb
jo
test
add
insl
pop
ret
addl
nop
mov
inc
push
inc
lods
or
and
adc
int3
mov
add
jne
loopne
xchg
or
dec
and
sub
jp
sbbl
pop
aam
cmp
outsb
test
adc
out
push
adc
and
sub
ror
add
daa
sub
lahf
xor
cmp
fmul
clc
adc
cmp
inc
push
test
dec
add
ret
xchg
int3
gs
inc
add
pop
aaa
mov
adc
fnstsw
push
or
lret
inc
push
sbb
inc
and
jmp
push
xchg
adc
lea
movsb
add
inc
movsl
lcall
dec
xchg
loope
sub
xor
ficompl
rcr
mov
stc
ljmp
or
and
push
rolb
inc
dec
pusha
inc
dec
mov
pop
fmul
dec
add
xchg
mov
int
test
pop
out
push
pop
test
pop
ret
into
gs
push
mov
subl
push
rolb
ds
loope
popa
shlb
mov
cmpsl
xchg
fidivs
cmc
cmpsb
lock
push
mov
dec
daa
cwtl
in
ljmp
pusha
inc
inc
rclb
scas
fs
jle
or
fsubrl
rorb
ja
mov
sub
pop
push
cwtl
push
das
cmp
out
push
rcrb
cs
jnp
add
push
test
jo
pop
outsl
syscall
cltd
outsb
shr
push
rcll
add
inc
mov
sub
fimuls
jnp
cmp
xor
dec
dec
test
add
fstl
out
push
stos
orl
icebp
leave
fiaddl
push
pop
daa
mov
jl
clc
sbb
xor
push
dec
mov
sbb
clc
or
cmp
cmp
divps
aas
cli
adc
mov
push
inc
or
test
mov
inc
sub
xor
add
inc
sub
cmp
leave
xchg
je
je
sub
or
lret
or
lock
sbb
and
push
call
dec
insb
sbb
rolb
xor
pop
roll
add
dec
call
js
sbb
pop
or
testb
call
sub
sbb
bound
push
js
fs
cmc
outsl
js
sbb
je
xchg
sbb
add
and
push
jns
arpl
shlb
ret
test
mov
mov
fcmovb
rcl
lret
test
test
add
adc
ret
sub
mov
push
out
pushf
cmp
push
sub
fmul
inc
cmp
inc
icebp
mov
shlb
es
and
push
mov
mov
es
or
push
add
pushf
cmp
cmp
test
sbb
mov
pop
pop
inc
ret
loop
xchg
pop
dec
aam
sbb
push
gs
or
dec
dec
js
outsl
xor
cmp
rorb
icebp
imul
or
pop
pop
and
sbb
sarb
sbb
cmp
inc
mov
push
sbb
pusha
xor
lods
push
loop
popa
pusha
lea
sub
out
add
or
adc
insb
vbroadcastss
jbe
xchg
outsb
ss
filds
ljmp
cmc
adc
add
repnz
xchg
enter
lret
inc
push
or
outsl
aam
les
pop
int3
or
push
and
or
dec
jp
rclb
dec
lea
adc
pop
sub
and
mov
sbb
or
ret
dec
or
push
push
push
div
dec
dec
les
sub
lods
sbb
xor
cltd
sarb
push
mov
mov
test
add
fdivrs
push
jo
in
xchg
add
pop
sub
imul
loope
lock
lods
push
push
inc
cmp
rolb
jbe
adc
xchg
xchg
ss
sbb
rcrb
mov
cmpsl
sbb
sbb
clc
push
and
push
adc
fcomi
ret
add
pusha
xchg
push
push
push
xor
ror
jg
and
mov
je
sbb
ret
outsl
test
insb
addb
mov
mov
lods
xchg
ljmp
sarb
inc
mov
cmpsb
fistpl
movsl
adc
xor
sub
test
rep
xchg
lea
test
cmc
jmp
and
xchg
repnz
adc
xor
xchg
bound
cmp
inc
mov
sbb
inc
or
add
cmp
popa
sub
jbe
out
pop
ljmp
popf
jo
jmp
mov
jl
int
enter
push
pop
movsb
sbb
xorl
jne
cmp
or
cmp
outsl
cltd
shlb
call
jns
xchg
adc
lret
xchg
push
das
adc
add
mov
pop
roll
add
int3
out
jb
fs
add
or
cmp
or
mov
pop
mov
dec
pushf
fs
dec
mov
mov
and
ret
xor
xorb
shl
adc
sbb
shrl
jno
mov
push
and
les
add
push
sahf
and
mov
xchg
loop
sbb
add
mov
idivb
in
dec
push
mov
or
ret
or
out
mov
xchg
leave
fcompl
add
inc
aam
js
mov
push
repz
xchg
mov
in
dec
or
inc
and
int3
push
mov
ds
add
add
testb
push
add
leave
add
xor
lret
andl
fcoms
leave
add
daa
dec
mov
imul
daa
test
sbb
imul
push
xor
or
test
push
push
rcrb
jl
jnp
or
pop
sub
pop
xchg
loop
mov
adc
pop
fdivl
or
clc
pop
and
add
repnz
pusha
push
pop
inc
or
subl
or
mov
cmp
addb
pushf
cmp
sub
sbb
clc
int
ljmp
sti
pop
or
nop
xchg
add
add
jmp
xor
loop
lea
push
jmp
mov
sub
push
fnop
mov
outsl
sbb
rol
cmp
in
mov
pop
sbb
sub
repz
add
inc
jge
jo
lods
push
or
psrad
icebp
mov
add
adc
mov
cs
in
xor
adc
loope,pt
mov
les
dec
rcrl
adc
sbb
mov
loope
xor
and
adc
andb
inc
testb
xchg
inc
notb
faddp
notb
stos
adc
addr16
push
iret
pop
rol
lret
mov
addl
add
adc
push
popa
adc
push
dec
cmp
test
sbb
xchg
xlat
push
out
outsl
cwtl
repnz
pushf
add
addb
cmp
dec
inc
or
addl
lds
pop
cmpb
mov
inc
cwtl
in
lcall
lods
and
and
lds
in
jo
adc
mov
mov
in
cmp
push
push
into
mov
xchg
int3
cmpsl
cmc
lods
pushf
adc
add
mov
inc
adc
mov
cmp
dec
ret
sbb
cltd
cmpb
loopne
jl
in
sbb
rol
out
ss
and
fimull
cmp
add
pop
add
sub
hlt
jno
pushf
xchg
clc
or
pop
mov
sbb
mov
xor
mov
inc
loope
test
and
xor
xchg
and
sbb
fcomps
pop
push
push
pop
mov
pusha
sub
mov
js
fidivs
test
cmp
enter
nop
pop
cs
adc
ret
cltd
bound
xchg
pop
filds
dec
ja
test
js
je
mov
ljmp
es
cmp
or
and
adc
add
aam
xor
test
cs
sub
mov
mov
jne
cld
jbe
adc
push
add
shrb
mov
and
lea
add
mov
int
out
loope
xor
adc
int
lret
rolb
dec
jb
and
out
out
lret
xchg
push
pop
adc
cmpsl
add
jne
and
push
jmp
jle
inc
add
nop
add
jecxz
sub
lods
jo
xchg
add
ja
dec
pop
stos
lods
add
adc
xchg
cmp
add
mov
ret
icebp
inc
push
mov
jle
leave
xchg
das
dec
add
or
ss
test
cmpb
xor
xor
mov
hlt
jo
cmp
xlat
pop
xchg
mov
js
rolb
xor
push
lret
or
fadds
aaa
push
mov
movsl
push
add
pusha
add
add
mov
adc
out
enter
xor
xor
mov
add
int
frstor
and
lock
orb
and
test
sbb
push
add
lret
pop
movb
ret
push
shr
lods
add
push
jl
cmp
add
add
xchg
cmp
mov
ljmp
outsl
add
js
mov
pop
add
or
mov
iret
push
push
xchg
pop
ds
lods
inc
jp
adc
cs
add
xchg
lret
loope
sbb
cmp
orl
inc
push
call
or
test
gs
mov
cmp
xchg
pop
dec
sti
pop
mov
xchg
fcmovb
mov
out
popa
outsb
sbb
adc
sbb
or
push
out
loope
or
add
add
ror
or
lods
aad
mov
jb
movsl
cmp
ret
lods
adc
ljmp
adc
pop
jge
mov
or
pop
xor
adc
fnstcw
push
aaa
push
test
in
movsb
cmp
add
sbb
add
lods
adc
xor
jno
fs
arpl
test
xchg
mov
mov
out
lret
pusha
and
or
sti
adc
js
test
cmp
enter
outsb
xor
into
sarb
bound
sub
mov
sbbb
sbb
out
xchg
mov
inc
adc
pusha
cmc
nop
jne
outsb
and
das
or
fs
rcl
cmpsl
pop
pop
or
add
jno
dec
dec
adc
data16
jecxz
in
and
outsl
sbb
test
loopne
imul
arpl
mov
jo
icebp
xorl
rol
push
repnz
mov
sbb
jmp
or
lock
dec
sbb
push
rorb
cltd
fcomps
add
push
outsl
push
les
lret
xchg
xchg
andl
cli
sbb
pop
sbb
das
or
cmp
scas
int3
movsl
and
adc
push
xchg
sub
pusha
pop
jne
mov
test
add
inc
add
adc
pop
xor
movsb
es
test
pop
cmc
int3
test
aam
cmp
cltd
push
sbb
mov
test
sub
push
push
or
xor
and
sub
and
mov
or
mov
or
inc
adc
fs
push
cmp
subl
add
and
or
cmp
adc
jne
popa
cli
in
push
jo
inc
mov
pop
push
ds
dec
mov
jns
cmp
xchg
ljmp
imul
add
xchg
bound
mov
sbb
inc
dec
stc
imul
push
pusha
sub
cmp
add
mov
add
roll
mov
mov
nop
push
push
popa
into
mov
inc
jp
es
or
add
xchg
push
movsb
jbe
movsb
test
push
icebp
lods
push
sbb
sbb
jo
orb
mov
push
xor
ror
into
push
arpl
xadd
jmp
mov
mov
and
movsl
xlat
movsb
sbb
mov
test
sub
cltd
pop
xchg
add
ret
mov
test
pop
es
mov
or
sbb
fs
cmp
lcall
shlb
out
pop
pop
orb
loope
inc
add
push
jge
add
ret
mov
xor
cmp
sub
rclb
dec
push
sub
xchg
adc
rolb
lock
das
lds
js
or
clc
adc
test
push
push
test
dec
mov
nop
add
or
dec
mov
imul
sbb
xor
xchg
add
adc
mov
mov
add
push
pop
movb
sub
insb
movsl
lock
push
xor
add
add
xorb
clc
push
xchg
mov
xchg
mov
or
or
cld
or
xor
sub
roll
cli
and
adc
xor
jo
into
test
shlb
ret
xor
xor
mov
xchg
add
sub
lock
test
sub
inc
inc
mov
jcxz
mov
cmp
popa
add
adc
and
jo
sbb
insl
cltd
roll
sbb
js
lea
mov
lcall
sbb
xor
ds
push
and
sbb
les
sar
xor
out
xor
pop
mov
xor
insb
insl
stos
jne
test
sbb
jp
test
leave
js
dec
fwait
ror
stos
repnz
loope
dec
sub
or
pop
or
mov
push
daa
add
cmp
adc
ljmp
fs
mov
roll
adc
inc
add
jne
push
imul
push
add
outsb
aam
jno
add
sti
push
add
out
daa
add
flds
out
add
movsl
and
loopne
inc
inc
testb
loope
popf
push
cmp
mov
xlat
push
sbb
adc
shlb
jecxz
add
push
pushf
add
xchg
popf
or
add
add
fidivrl
rorb
bound
ret
ja
mov
add
std
clc
or
aam
lret
cmpl
mov
pop
loope
icebp
push
fs
push
loopne
or
imul
pop
xchg
clc
rcl
iret
adc
loop
add
outsl
out
mov
adc
cmp
add
les
push
cmp
or
sbb
cmp
mov
sub
js
sti
add
out
addb
js
add
test
sbb
and
mov
adc
add
cmp
add
and
xor
mov
rcr
jp
mov
rol
push
xorl
loopne
cmpsl
adc
dec
xchg
sti
imul
fnsave
lods
adc
adc
push
je
roll
or
les
sarl
mov
mov
lods
rcrl
comiss
adc
push
js
cmp
lods
test
fadds
sbb
or
or
arpl
jl
orl
lea
inc
aas
imul
cltd
add
dec
imul
push
push
and
into
ret
sbb
nop
push
or
add
js
xchg
xor
movsb
add
xchg
jno
jb
mov
rorw
adc
bound
int
lods
or
in
pusha
and
in
and
cmp
jno
or
inc
rolb
les
add
das
xchg
shrl
xor
fs
mov
cltd
mov
rcrb
and
xor
push
xor
out
repz
sub
add
into
out
sbb
inc
icebp
ja
icebp
call
push
idivb
adc
lcall
cwtl
mov
call
imul
rcr
add
dec
jns
cmp
insb
fs
cmp
pop
add
cmp
rolb
mov
and
iret
and
sub
sahf
sbb
or
cmp
andl
lcall
or
lea
dec
or
xor
push
repz
test
inc
daa
add
pop
adc
xchg
jno
pop
adc
pop
add
les
loop
and
push
fisubrs
enter
push
sbb
sbb
inc
dec
pop
push
inc
or
js
lret
lods
hlt
or
movsl
inc
sbb
and
jbe
pushf
mov
dec
and
loope
add
cmp
sbb
add
loopne
push
out
push
mov
int3
lret
or
test
mov
dec
ret
dec
or
xor
mov
outsl
or
mov
sub
add
insb
ret
push
push
adc
push
and
xchg
sbb
mov
rolb
pop
push
sbb
or
pushf
push
sub
mov
add
in
mov
mov
jmp
lock
mov
aam
ljmp
jecxz
clc
lock
aaa
sbb
out
add
push
dec
cmp
pop
sbb
pop
fwait
jmp
push
dec
xor
xchg
cli
sub
push
and
ret
sbb
inc
loopne
push
cwtd
addb
cltd
or
jb
pop
insl
hlt
test
xchg
or
mov
out
sbb
sbb
push
dec
cmp
and
mov
adc
jnp
inc
loope
sbb
lcall
icebp
test
shll
adc
inc
cmp
mov
enter
stc
adc
add
rcr
addb
adc
lods
dec
ss
push
mov
xchg
and
pop
jge
cmp
call
in
push
cli
rolb
dec
out
push
mov
adc
fldl
or
xor
push
mov
and
add
xchg
mov
hlt
ret
loopne
bound
pushf
movsl
pushf
mov
xchg
push
pop
shrb
rcrl
mov
stos
setbe
test
adc
xor
jo
jmp
bound
or
cli
add
hlt
push
jge
test
nop
xchg
lods
dec
and
es
sub
cltd
lcall
add
ret
test
add
or
jcxz
test
pop
mov
jne
inc
push
stos
test
sbb
les
rcr
je
mov
adcb
sahf
gs
popa
shlb
imul
sub
cld
xlat
dec
pop
dec
pcmpgtd
sub
pop
dec
shl
or
and
es
les
enter
shll
lock
fistpll
popf
mov
repz
cli
mov
ret
cli
in
popa
leave
or
imul
inc
popa
nop
ljmp
or
test
je
dec
lret
jbe
jp
xchg
push
in
sub
movsb
adc
lcall
adc
loopne
xchg
pop
test
cmpsl
pop
fisubs
arpl
fwait
adc
sub
cmp
sub
cmpsl
inc
mov
sarl
push
and
jbe
ljmp
cmp
and
paddsw
add
scas
add
xor
mov
ss
pop
enter
nop
cmc
mov
push
dec
xchg
sbb
mov
stos
rorb
mov
cmp
push
pop
andb
mov
repz
xchg
pusha
mov
loope
rcl
inc
inc
shrb
cmpsl
xor
popa
lea
sarb
es
jge
orl
add
rolb
js
push
pop
and
or
push
pop
xchg
adc
or
inc
cmp
push
aas
dec
nop
int3
fadds
inc
sbb
add
repz
lock
nop
mov
lods
add
mov
seta
loop
popa
xchg
adcl
inc
add
cltd
pop
bound
cmp
fstpt
jo
jno
adc
xor
push
insl
sbb
add
push
dec
jge
fsubrs
cwtl
or
stos
lahf
ficompl
inc
cwtl
ja
xor
xchg
fsub
in
roll
add
add
pop
and
lea
inc
in
fistps
add
and
xchg
clc
lret
clc
push
sbb
mov
cmpsl
sbb
inc
outsb
adc
rcrl
sbb
outsb
dec
jl
adc
mov
and
sub
outsb
sahf
in
lock
xchg
lods
mov
test
or
xchg
dec
ret
ljmp
inc
or
mov
test
adc
mov
repnz
rclb
cltd
push
sbb
lods
xor
sub
insl
xchg
mov
xor
lods
fisttpl
cs
test
cmp
xor
mov
pop
dec
add
roll
mov
rolb
loop
pop
cmpsl
or
insb
or
lock
rcrb
out
sbb
push
repnz
mov
xchg
jl
push
test
jmp
push
pop
mov
mov
xchg
data16
and
sbb
sbb
and
mov
mov
insl
leave
inc
push
add
aad
pop
dec
sbb
add
popa
leave
fisubs
push
inc
je
cmp
inc
push
shl
dec
add
lea
and
mov
nop
test
add
lret
pop
pushf
inc
xor
fsubrs
cmp
push
xchg
push
dec
orl
and
sub
vrsqrtss
push
add
mov
addb
adc
adc
fs
xchg
shlb
test
xchg
sub
sbb
orb
lods
test
adc
push
mov
pop
sbb
sub
addl
jge
pushf
mov
call
adc
mov
sarl
mov
push
std
sbb
jp
rcll
cwtl
and
lret
push
rcll
mov
push
mov
popf
sti
out
in
or
push
inc
outsl
in
inc
int3
sbb
fistps
xor
lret
adc
push
arpl
inc
adc
or
into
or
pop
mov
push
cmp
sub
addr16
add
mov
inc
or
out
cmc
insl
loope
xchg
jp
add
mov
cmpl
filds
mov
push
ret
jo
enter
or
inc
ljmp
fs
lret
orl
and
pop
ss
sub
dec
movsb
nop
xchg
sbb
out
cmp
ja
xor
push
ret
lds
clc
add
addl
dec
pop
mov
fs
jle
negb
push
in
lea
clc
and
and
rcrb
or
imul
test
les
push
roll
mov
or
xor
sbb
push
test
or
loopne
orb
jecxz
inc
js
xor
arpl
pop
push
dec
add
pop
fimuls
nop
or
mov
ss
imul
lods
movsl
loope
push
sub
inc
imulb
fiaddl
in
jbe
xchg
add
push
dec
mov
cmc
xchg
adc
sbb
add
sub
add
and
and
push
ja
inc
jb
imul
test
fisubrl
mov
adc
push
or
mov
add
and
cmp
xor
push
shll
mov
jb
adc
imul
lcall
fxch
in
mov
lock
sbb
inc
jns
pop
or
sbb
addps
mov
push
add
lret
sub
test
outsl
cmp
add
mov
dec
push
xchg
jecxz
push
cmpsb
sbb
stc
sub
or
arpl
or
xor
jp
adc
repnz
outsb
adc
push
ljmp
add
imul
and
cmp
adc
fs
ret
dec
sub
mov
adc
jnp
mov
leave
into
shrb
addb
add
loop
adc
jb
test
outsl
fs
push
jl
sub
jbe
dec
cmpsl
gs
test
adc
pop
and
cmp
pop
or
or
scas
or
adc
jp
ficoms
xchg
cs
inc
or
adc
scas
push
lcall
test
clc
cmpsb
sbb
cs
add
aam
xor
pop
push
js
xchg
or
adc
lock
mov
jp
inc
push
or
lock
pop
pop
xchg
add
les
adc
or
test
icebp
lock
or
out
inc
and
fsubs
xchg
or
jb
punpckhwd
push
paddw
add
cmp
push
cmp
jecxz
cs
cmp
mov
repz
clc
sbb
sbbl
jl
and
inc
add
mov
add
dec
shlb
sub
or
dec
cmpsb
mov
sub
je
xchg
jp
xor
shrb
stos
mov
out
jecxz
push
pusha
loopne
adc
inc
sub
lret
shlb
pop
loop
lds
js
cld
mov
adc
scas
test
dec
minps
lea
repnz
dec
mov
mov
push
rclb
pop
jge
rolb
add
insl
mov
cmp
pop
inc
cwtl
fistps
negb
push
pushf
pusha
das
and
or
shll
adc
xchg
adc
pop
pop
lret
out
cs
cmp
in
xor
adc
add
xchg
sub
jo
add
call
xchg
movsl
xchg
sub
mov
xchg
stos
testb
or
and
incb
dec
sub
stos
xorb
adc
push
or
nop
clc
mov
inc
cmpsb
gs
sbb
xorb
sbb
jae
test
ds
push
or
dec
js
outsl
adc
arpl
sub
ds
inc
ret
sbb
sbb
clc
lret
cli
sbb
and
inc
ret
push
icebp
ror
imul
ja
xor
pusha
dec
out
arpl
xor
fwait
push
adc
push
xchg
adc
add
mov
dec
add
push
xor
add
xchg
negb
test
in
jmp
sub
jb
sbb
inc
push
pop
fmul
push
jne
rcrl
pop
jno
stos
out
outsb
sbb
push
xchg
cmp
inc
pop
sbb
loop
iret
add
xchg
dec
pop
inc
adc
dec
sub
mov
or
and
add
pop
imul
cmp
mov
hlt
adc
pop
lahf
subb
adc
subl
dec
or
mov
cmp
aad
adc
push
loope
mov
xchg
inc
dec
clc
mov
sahf
cli
push
cwtl
dec
add
fsubl
lahf
and
imul
and
sbb
xchg
ficoml
pushf
add
das
add
add
or
pop
sub
shl
xchg
jo
pop
adc
and
add
jno
call
shr
xchg
mov
lock
xor
sub
jno
and
inc
pusha
sbb
insl
shrl
orl
dec
outsl
or
adc
sbb
daa
cmp
add
push
scas
pop
adc
in
lods
addl
sbb
sub
ljmp
jecxz
in
adc
cmpsb
icebp
aam
inc
mov
mov
lret
clc
mov
mov
pop
jecxz
mov
dec
sbb
loopne
xchg
inc
sub
push
imul
data16
xchg
lock
dec
out
in
dec
rcrb
sbb
sub
xor
inc
mov
sahf
sub
pop
sub
mov
lret
orb
test
adc
sbb
mov
or
aaa
test
or
rclb
test
xor
xor
adc
add
jne
mov
mov
ds
xor
out
sub
jbe
cwtl
enter
adc
xor
aad
lds
sub
pop
adc
push
insb
pop
and
test
lret
push
and
jbe
pusha
sbb
out
add
or
adc
jp
mov
sbb
xor
xchg
and
lcall
cmp
js
sbb
pop
jbe
cs
sub
cmp
rcl
push
adc
loopne
into
mov
push
out
inc
data16
movsb
jae
push
loopne
cmp
bound
lahf
xchg
or
sbb
add
lock
andb
lea
lret
jb
cmpsb
cld
iret
push
sub
dec
sub
dec
loope
sarb
push
push
xor
movsb
addr16
bound
mov
cld
stos
inc
cmp
setb
or
or
xchg
insl
xor
push
add
or
aaa
mov
xchg
and
add
ss
add
pop
in
loopne
mov
cmp
fs
pop
adc
mov
imul
lods
or
cs
push
add
sub
sbb
ss
inc
mov
psllw
divb
add
push
cmp
jbe
push
lods
mov
icebp
sub
push
sbb
or
push
nop
mov
sub
jo
jecxz
add
xor
ds
hlt
xchg
test
jno
mov
xchg
or
or
push
fdivrp
in
icebp
mov
add
cwtl
les
ds
mov
test
popa
add
push
rclb
cmp
mov
pop
jl
pop
pop
sbb
jg
add
adc
adc
push
js
dec
add
mov
adc
pop
mov
in
dec
mov
sub
add
and
fdivp
add
adc
inc
pop
cmc
xchg
add
adc
jmp
inc
je
or
lret
ret
mov
mov
bound
jne
push
sub
test
and
push
push
and
add
popf
jmp
or
scas
cld
xchg
push
and
repnz
insl
push
neg
sub
sbb
mov
jnp
xchg
push
call
sbb
ja
lret
sbb
adc
push
inc
ret
rcr
sub
add
es
xchg
les
sub
lods
sbb
pop
jmp
outsl
out
and
sbb
iret
loope
pop
add
pop
mov
pop
pop
adc
sbbl
test
inc
jge
sbb
sub
rorb
icebp
jno
mov
icebp
inc
mov
ret
cmp
add
mov
loope
ret
xor
add
daa
movsb
pop
dec
cli
push
mov
movsl
and
sarl
push
and
add
mov
sub
dec
pushf
int3
cmp
lock
sbb
xor
and
xchg
add
ds
jns
icebp
pusha
add
incb
and
lods
xor
or
lods
arpl
sbb
or
xor
cmp
cmp
xchg
shufps
jp
dec
clc
add
adc
repnz
cmp
mov
jmp
cmp
mov
fs
insb
pop
mov
out
das
or
out
push
orl
flds
inc
or
cs
ret
js
xchg
add
rol
jae
ljmp
lret
or
mov
bound
imul
sbb
lret
inc
hlt
lds
dec
cmp
imul
sbb
push
sub
xor
push
or
dec
loopne
mov
pop
ret
add
lock
roll
insb
fst
sbb
js
scas
lock
call
xor
es
lods
xchg
jno
mov
inc
arpl
xchg
int3
movb
sbb
xlat
roll
hlt
cwtl
sbb
inc
fmuls
movb
int3
jp
lods
clc
sahf
add
and
jno
lahf
loope
cmp
add
icebp
mov
or
and
ret
inc
insl
rcrl
add
pop
or
ret
mov
sbb
das
out
imul
cmp
insb
mov
or
push
divl
test
scas
xor
sbb
enter
cmp
rcll
or
sbb
cltd
shlb
js
rol
sarl
add
hlt
cmp
fmull
and
xor
nop
sbb
mov
cmp
jp
sti
xchg
push
rorb
push
add
insb
fildll
xchg
jbe
add
mov
xchg
jle
negb
sbb
arpl
pop
push
loopne
int3
jno
dec
das
pop
dec
lods
out
inc
mov
mov
lret
mov
testb
push
mov
nop
add
sub
and
shlb
cmp
dec
pop
push
mov
dec
push
pop
add
mov
loopne
push
rorb
ret
roll
sub
add
test
fwait
popa
sub
sbb
mov
scas
sbb
adc
inc
mov
les
push
int3
and
orb
ds
ret
sub
or
xor
pop
mov
add
test
movsb
call
push
sbb
loope
stos
mov
ss
lcall
or
jbe
adc
into
into
enter
add
adc
add
ljmp
fdivs
inc
dec
addb
or
jmp
icebp
pop
add
mov
sbb
mov
imul
loope
pop
push
leave
bound
jnp
sub
mov
cmp
push
call
cmp
dec
jp
outsl
gs
nop
add
and
dec
mov
test
xor
add
mov
adc
mov
push
cmpsl
sub
xchg
xchg
adc
pop
xchg
movsl
and
mov
test
adc
popf
orb
cmp
add
xchg
test
and
pop
add
fs
push
pop
jl
cmc
add
notl
subl
scas
or
mov
pop
sub
mov
adc
jo
pop
rorb
and
rolb
push
adc
push
push
sub
test
mov
ja
push
xor
push
js
gs
loopne
sarb
fmull
loop
shrb
mov
xchg
scas
push
mov
push
imul
jg
loope
push
pop
in
adc
jge
aas
push
jp
add
mov
sbb
sub
mov
rcl
jp
cmc
and
in
pusha
in
pushf
lret
sbb
adc
les
repnz
jmp
add
mov
pop
or
xchg
fs
mov
push
leave
test
and
adc
xchg
inc
cmp
shl
or
lods
das
sub
xor
loope
outsb
add
adc
xor
bound
mov
xchg
je
hlt
add
or
rclb
dec
inc
add
aas
ret
xor
mov
test
pop
push
xor
add
rolb
xor
push
push
jnp
pop
test
incb
aam
imul
test
movsb
test
mov
push
or
daa
push
mov
add
stos
mov
adcb
loope
jmp
mov
orb
test
or
sbb
cmp
add
push
mov
outsl
push
ss
in
arpl
add
xchg
mov
mov
fs
sahf
xchg
sbb
daa
ret
test
sbb
cmp
ss
sarb
loopne
push
lods
sub
sub
lret
pusha
lods
imull
mov
fadds
or
rclb
mov
push
subb
xor
or
rcr
adc
imul
xchg
mov
push
movsb
mov
loopne
test
ss
pop
inc
js
cmc
in
or
or
add
inc
push
xorl
dec
pop
rolb
add
or
pop
inc
stos
dec
cmp
push
out
ja
arpl
add
adc
lcall
in
call
pop
mov
pop
add
and
nop
adc
imul
aam
xchg
in
js
stos
data16
pop
mov
pop
mov
addl
xchg
push
inc
and
adcb
mov
mov
push
add
cwtl
cli
sub
loopne
jbe
mov
xchg
test
ret
mov
mov
xchg
fs
jecxz
jge
cmc
xor
or
lock
adc
je
hlt
xchg
fcom
loop
ret
xor
or
pop
adc
stos
sbb
xorb
test
or
cmpsb
jo
scas
fisubrl
mov
data16
repnz
adc
fists
scas
push
pop
fistpl
rcl
js
cmpsb
out
add
sub
and
movsb
ret
xchg
add
enter
xor
or
loopne
sbb
or
inc
dec
inc
ror
mov
jge
ficoms
orb
xchg
sbb
loope
frstor
lea
push
xor
sahf
lock
xor
stc
or
movsb
add
jp
lahf
cli
inc
popf
or
xchg
pushf
clc
jecxz
je
scas
pop
and
sbb
xor
or
stc
dec
loopne
add
pop
fs
push
pop
xchg
lret
daa
stc
orl
rolb
pop
inc
jge
movl
mov
ja
add
xor
rol
popf
mov
xchg
jp
and
xchg
movsb
add
mov
cld
mov
adc
jg
push
es
inc
ret
sub
clc
lcall
push
movsb
and
aad
jbe
xchg
test
mov
add
pop
cmp
lods
por
jns
lret
cli
and
ficoms
cld
adc
adc
sbbb
add
mov
pop
jp
xor
mov
sub
pop
outsb
idivb
xchg
mov
js
push
movsl
cli
and
mov
inc
out
add
test
push
dec
js
test
imul
xchg
mov
add
out
dec
gs
leave
jo
ret
add
dec
add
ficoms
fcompl
leave
mov
sbb
push
or
pusha
inc
mov
dec
lods
push
icebp
mov
dec
or
inc
and
lret
dec
xlat
andb
sbb
cmp
inc
rol
adc
sub
roll
add
cmpsb
jo
xchg
cmp
or
fwait
pop
inc
aam
pop
sub
inc
or
mov
mov
cmpsl
movsl
pop
sub
lods
hlt
mov
push
sbb
push
loopne
add
pushf
push
adc
add
xchg
ret
out
cmpsl
sahf
and
sbb
inc
bnd
aam
sub
mov
rcr
decb
je
sbb
jecxz
add
cwtl
jge
rclb
movsl
add
repnz
add
or
call
inc
js
js
add
loop
xchg
andl
and
push
jb
cmp
ror
cli
push
imul
loopnew
pop
call
push
cltd
sahf
add
cmp
add
inc
sbb
cmp
loope
or
pop
push
inc
jp
loopne
xchg
sbb
negl
mov
sbb
mov
popa
in
notb
and
add
lods
insb
and
nop
xor
imul
ret
mov
sub
pop
add
dec
inc
sub
js
pop
imul
push
rcrl
test
pop
lock
or
jle
pop
dec
cmc
ds
sub
enter
insb
scas
add
lods
add
arpl
ds
insl
data16
and
push
xchg
sub
es
js
add
aam
sbb
insb
push
leave
mov
inc
aaa
pop
dec
sbb
nop
sub
sbb
hlt
dec
xor
or
and
inc
out
sub
aaa
shl
popa
mov
inc
inc
into
xchg
stos
insb
add
or
fiadds
push
cmp
stc
test
loop
jecxz
sbb
push
and
or
mov
mov
adc
cwtl
inc
fcoms
enter
cmp
lret
adc
pusha
icebp
sbb
jge
ss
mov
pop
add
adc
push
xor
cmp
sub
pop
aad
popa
dec
sub
arpl
ret
sarl
outsb
cmp
mov
xchg
mov
cmp
je
imul
sub
js
pop
test
push
adc
dec
test
sub
str
sbb
mov
inc
inc
cmp
daa
sbb
sbb
hlt
or
dec
test
push
pop
sbb
repnz
dec
cmc
adc
test
sub
arpl
dec
push
mov
ret
ja
sub
sub
pop
xor
movsb
pop
shlb
mov
or
ss
pop
scas
pusha
mov
inc
mov
mov
adc
data16
or
inc
hlt
or
pop
cli
xchg
out
je
push
pop
mov
dec
cmpb
jg
test
or
push
ss
cmp
lock
sub
mov
loope,pt
js
mov
and
je
lret
and
jno
call
stc
add
mov
inc
push
test
mov
adc
push
adc
xor
dec
pop
insb
jae
mov
jne
jmp
mov
push
pop
xor
enter
es
mov
cmpsl
and
xchg
lock
loopne
pushf
pusha
adc
add
jno
lock
add
fsts
adc
sbb
mov
mov
push
loopne
jno
add
or
fdiv
or
test
out
jb
lods
and
pop
dec
jmp
icebp
nop
cmp
push
fcmovnb
cmp
push
mov
mov
pop
sbb
clc
rcll
cmovns
pop
push
jl
ret
adc
sahf
bound
movsl
gs
cmc
xchg
add
mov
sub
xor
mov
mov
add
sbb
test
pop
enter
xchg
mov
mov
pop
dec
pop
cmp
cmp
xor
clc
or
dec
fstpl
pop
or
sahf
or
aaa
jb
add
sub
push
daa
xchg
xorb
imul
sbb
lahf
dec
shrb
sbb
inc
test
lret
or
sahf
inc
dec
push
xor
jns
popf
test
mov
xchg
add
lds
pop
pop
mov
icebp
loopne
test
stos
adc
push
mov
xor
cwtl
ljmp
js
sarl
inc
adc
rolb
dec
pop
push
hlt
les
push
fisttpll
bnd
mov
add
cmp
ljmp
dec
ret
add
mov
mov
add
mov
mov
add
orb
push
lock
xor
insb
repnz
sub
mov
cli
xor
pop
ret
shrb
lock
das
pop
lcall
inc
dec
cmp
jns
cmp
push
and
jmp
adc
xor
and
pop
clc
or
add
leave
mov
and
or
xchg
fimull
sbb
fs
add
push
and
sbb
mov
sbb
mov
mov
mov
leave
stos
sbb
leave
mov
jl
sahf
sub
into
push
sbb
out
lret
cmp
xchg
inc
ret
add
lret
cmp
movb
sbb
rolb
lock
or
out
test
add
and
daa
stos
rcrl
mov
or
imul
and
and
xchg
js
adc
cmpsb
adc
mov
fs
pop
int
lcall
loopne
inc
push
and
mov
and
inc
inc
shrl
lock
jb
inc
mov
cmp
movb
pop
dec
sbb
push
mov
sti
adc
add
jne
insb
lock
add
pminub
push
dec
test
pop
mov
cmpl
ret
add
mov
scas
sbb
into
insl
sub
ds
icebp
kmovb
adc
mov
enter
push
imul
push
add
inc
stos
cmp
data16
int3
pop
movsb
sub
cmp
and
mov
or
popa
mov
mov
push
es
les
jbe
sub
scas
movsl
aad
insl
mov
leave
sbb
or
popa
jecxz
sbb
sbb
sbb
jae
les
inc
pop
xchg
sbb
push
call
test
mov
cmp
test
call
pop
add
and
cmp
adc
or
adc
jae
sub
pop
inc
fstps
adc
jo
pop
cmovbe
sbb
mov
pop
pop
shl
es
repnz
push
cmp
fidivrs
in
jl
mov
dec
js
xlat
aaa
cld
ret
add
sub
pop
inc
fwait
mov
jbe
push
xlat
push
xor
orb
dec
sub
push
fildll
fwait
out
inc
out
sub
movsb
rol
aam
add
test
mov
aam
jecxz
jo
rol
es
mov
add
sbb
fldt
xchg
mov
lock
cmp
lcall
add
add
adc
outsl
push
out
push
add
sbb
inc
les
adc
or
inc
mov
leave
inc
or
roll
mov
sub
sbb
pop
jb
or
dec
out
test
rolb
pop
and
cmpsb
push
mov
sbb
mov
insl
cmp
add
sub
mov
mov
add
jge
xchg
inc
ret
sbb
sub
nop
sahf
aam
sbb
out
sbb
ljmp
mov
aas
push
and
jo
sarl
call
or
xchg
inc
cs
push
xchg
push
js
adc
pushf
inc
rcrl
cmp
into
aam
bound
mov
movsl
aam
fwait
sbb
movsb
xchg
je
lock
and
mov
fdivl
ja
sbb
es
cmp
push
or
movsb
rorb
inc
or
js
sahf
rorb
sub
cmp
popa
dec
sbb
sbb
divb
and
lods
test
mov
rclb
jecxz
or
pop
test
and
inc
dec
mov
and
hlt
push
cmp
xchg
orb
icebp
shrb
pop
inc
or
cmpb
dec
inc
push
cmpsb
and
jg
das
push
scas
and
shlb
cld
add
test
mov
inc
adc
orl
xor
cmp
and
pop
orb
adc
add
dec
dec
into
mov
dec
shrl
push
popa
inc
rcrb
test
add
xor
lea
sti
mov
or
and
cmp
inc
or
test
inc
loope
movsb
pop
xchg
xchg
lock
dec
popa
loopne
rol
pop
and
mov
loopne
cmc
enter
faddl
mov
js
mov
xor
out
jns
je
xor
adc
movsb
and
add
call
mov
mov
sub
inc
pop
mov
xchg
dec
push
dec
xchg
or
jmp
add
popa
mov
add
ds
loopne
xor
movsl
ret
shlb
faddl
cmp
and
incb
fsubrp
pop
stos
or
repnz
pop
pop
imul
add
sbb
mov
call
xchg
les
rcll
pop
cmp
sbb
loopne
inc
and
xchg
ret
and
add
orl
sbb
inc
mov
mov
and
xor
in
mov
xchg
shlb
stos
lret
jp
xor
mov
movsb
sbbl
nop
and
pop
in
jmp
movl
add
push
xchg
push
pop
jns
int3
jae
dec
bound
and
pop
jns
xor
xor
xor
int3
pop
inc
outsb
pop
pop
movntq
adc
push
jb
pop
adc
repnz
test
ss
adc
lret
mov
pop
mov
pop
scas
mov
push
inc
xor
xchg
repnz
insl
jp
sahf
lods
pusha
xchg
and
out
out
lret
sub
lods
push
lret
and
lret
repnz
xchg
mov
cmp
lea
or
fcmovne
aas
sub
repnz
pop
jns
jbe
or
cmp
pop
inc
pop
jns
xchg
in
hlt
pop
leave
loopne
insb
jecxz
shrl
aad
in
push
cmp
mov
in
push
stc
mov
xchg
push
pop
negl
inc
lcall
fdivrp
jb
push
pop
outsb
scas
push
pop
repz
sbb
test
mul
xchg
push
mov
rcrl
push
fidivrs
scas
movl
mov
jns
fstl
mov
ror
mov
lods
mov
xor
sub
xchg
push
pop
jns
mov
adcb
imull
cmp
jns
sub
dec
add
lock
xchg
addr16
mov
cmpsl
mov
and
dec
popf
in
push
pop
fwait
shrl
mov
cmp
dec
orl
jle
jns
ret
repnz
and
mov
repnz
xchg
cmp
popf
push
test
in
das
scas
jbe
jle
outsb
cmp
xchg
push
pop
jns
pop
iret
add
push
lahf
mov
pop
jns
push
movsl
jl
enter
add
pop
jns
xchg
pop
dec
adcl
movsl
inc
aam
in
push
ficomps
hlt
rolb
test
das
sbb
push
and
jno
pop
jns
xchg
push
mov
mov
sub
loopne
int
pop
mov
addr16
imul
pusha
lods
sbbb
inc
test
push
inc
and
inc
xchg
movsl
cli
adc
scas
mov
pop
sbb
pop
sbb
mov
or
repnz
jge
iret
cmpsl
std
sub
scas
cmc
test
repnz
xor
js
dec
hlt
loop
test
into
or
sti
jnp
mov
mov
sub
cs
sub
test
push
scas
mov
mov
or
xor
int
mov
mov
leave
push
push
aad
xchg
div
lret
test
and
sub
stc
test
addb
mull
jns
repz
sbbl
xchg
movsb
jl
inc
pop
pop
cmp
push
lods
into
out
cmpl
sub
push
mov
and
hlt
adc
mov
pop
cmp
outsb
jmp
iret
mov
lret
aad
cmp
push
jo
sub
mov
pushl
mov
jge
xchg
das
mov
mov
or
ljmp
loop
mov
repnz
adc
popf
out
loopne
jl
outsb
loop
push
xchg
sub
mov
jo
int
xchg
push
fsubrp
dec
inc
lcall
xchg
jae
or
jns
jbe
inc
lods
lret
movsl
jo
inc
mov
bound
xor
mov
das
daa
js
in
add
dec
jge
repnz
outsl
cs
fldcw
sub
scas
mov
jne
shll
out
nop
mov
repnz
mov
xchg
dec
movups
push
mov
sub
stos
or
pushf
mov
outsl
rolb
and
ror
lret
mov
in
inc
mov
das
scas
mov
mov
clc
addr16
inc
cld
jl
and
mov
dec
jno
fisubrl
pop
insl
mov
test
xchg
cmp
popa
jbe
lds
dec
lret
mov
dec
mov
jo
push
lock
cmpsl
outsl
and
mov
lods
cmpsl
and
lret
mov
lret
xchg
loope
or
scas
mov
mov
xchg
xchg
test
jnp
repnz
pop
push
ja
inc
into
mov
in
pushf
ficompl
in
push
mov
jl
daa
lahf
pop
test
push
fdivrp
jb
and
push
jns
xchg
sub
fimull
stc
in
ja
xchg
fimuls
aas
inc
cwtl
hlt
icebp
push
mov
pop
jns
fstpl
shrb
xor
pop
jns
out
imul
fwait
xchg
pop
jmp
xchg
inc
mov
add
shlb
push
aam
sbb
mov
shll
cmp
int
lret
aaa
push
ja
lods
int3
lea
notl
jle
fldl
lock
ja
ret
xchg
push
pop
jns
push
cmc
call
cmc
in
mov
push
pop
jns
sbb
pop
std
pop
jno
lea
lahf
inc
sarb
fstl
outsl
mov
dec
lret
xchg
push
pop
rorb
popa
xchg
int
push
xchg
icebp
in
pop
jns
and
mov
pusha
fsubl
mov
in
test
or
test
fidivrs
sub
cmpsl
lods
push
jmp
scas
push
pop
jns
mov
cmpl
cwtl
std
or
mov
in
fildll
xor
jne
mov
cmpsb
sbb
jns
mov
loope
pop
mov
pop
jns
cmp
push
sahf
push
movsb
nop
fldl
pop
jns
xchg
lret
test
sar
push
popf
test
ret
push
cmpsb
xor
ljmp
push
pop
jns
add
or
dec
mov
in
lahf
out
test
mov
inc
pop
in
push
pop
or
jg
mov
shrb
clc
adc
jns
in
mov
xor
sub
mov
fiadds
stos
inc
outsl
insb
sbb
lret
mov
lock
sub
lret
dec
outsl
data16
stc
add
mov
mov
and
icebp
hlt
ja
fabs
or
dec
and
das
jne
in
jns
xchg
cmp
hlt
sub
out
sbb
push
pop
stc
outsl
stos
addr16
add
lret
mov
int
jmp
in
mov
or
push
stos
cmpsl
das
loop
xchg
cmp
adc
sub
mov
jp
push
jb
pop
adc
mov
data16
out
scas
add
imul
imul
repnz
cmp
test
pop
mov
cmp
inc
mov
imull
jnp
fidivl
out
xlat
nop
pop
add
mov
inc
mov
push
out
mov
sbb
lret
push
cmp
into
mov
push
mov
shll
scas
outsl
xchg
pop
jg
push
pop
jns
or
inc
mov
icebp
imul
jns
xlat
in
fnstenv
call
imul
sub
xlat
adc
mov
mov
popf
pop
aas
mov
inc
fldcw
mov
lret
adc
push
arpl
testl
mov
outsl
in
mov
sub
ds
aad
sahf
mov
loopne
sti
xchg
scas
mov
and
ss
mov
mov
xlat
imul
inc
mov
das
mov
fwait
dec
or
imul
ss
mov
in
and
sbb
push
mov
lahf
dec
sub
cmpb
pop
jns
xchg
mov
sbb
or
repnz
mov
mov
sbb
cmpsl
out
repnz
jbe
push
into
cmp
jle
sbb
scas
mov
sbb
daa
add
in
fdivs
mov
stc
pop
jns
xchg
lret
pop
xchg
in
dec
sub
push
lahf
push
ret
ja
cmpsl
xchg
dec
fcomip
xor
movsb
sbb
pop
jns
push
cmp
inc
mov
lcall
in
and
mov
dec
jmp
jns
xchg
push
lods
jno
jg
xchg
cmp
xchg
xchg
push
pop
nop
and
hlt
mov
fwait
pop
xor
dec
xchg
push
pop
jns
jle
daa
xchg
iret
in
push
and
outsl
push
pop
jns
loope
mov
push
mov
movsb
imul
scas
lahf
push
cmpsl
pop
add
aaa
sbb
inc
xchg
ja
pop
sbb
dec
js
addb
mov
imul
into
pop
inc
fucomp
es
pop
jns
xchg
cmpsb
xchg
jle
das
outsb
xchg
sub
adcl
cmp
into
inc
sbb
jns
lods
add
fdivp
pop
xor
je
enter
jns
xchg
mov
lds
lcall
in
push
and
fucompp
pop
insb
imull
ja
pop
nop
dec
xchg
nop
push
jl
scas
outsl
idivl
testl
ss
mov
xchg
dec
mov
pop
jns
fstl
mov
in
sbb
scas
in
push
pop
int3
sbb
in
jecxz
test
pop
push
push
xchg
push
pop
jns
cmc
pop
sub
and
icebp
xchg
jbe
cmpsb
push
pop
jns
insb
xchg
dec
jnp
jg
sub
call
xchg
add
jo
jo
inc
lock
push
pop
loopne
iret
cmc
mov
and
xchg
push
pop
jns
mov
ret
mov
div
lret
std
mov
jp
jl
add
mov
xchg
push
fidivrs
stos
lcall
jnp
mov
pop
pop
jns
ret
mov
xor
mov
xchg
ja
push
mov
lahf
fsubs
lods
add
push
pop
jns
add
fisubl
pop
xchg
mov
pop
jns
imul
mov
hlt
ret
mov
jns
xchg
and
pop
mov
ficoms
in
push
add
jmp
jecxz
popa
jb
jae
das
in
push
pop
loopne
leave
xchg
roll
jns
push
pop
jns
push
xchg
sbb
xor
mov
pop
dec
push
pop
jns
sbb
xchg
movsl
dec
xor
push
mov
mov
jp
in
xchg
push
clc
jnp
sub
cwtl
cwtl
push
fidivrs
add
push
sahf
pop
mov
jmp
add
pop
jns
xchg
mov
stos
int3
push
sbb
lret
xchg
ja
xor
xor
mov
xor
sub
cmc
mov
mov
jo
imul
sub
xor
lcall
ja
pushf
mov
fmuls
mov
cmpsl
fs
pop
adc
jno
rolb
sbb
in
xor
fmuls
ret
add
adc
jg
xchg
push
repz
jae
or
inc
movsb
pusha
cltd
out
lahf
aas
lods
into
add
push
add
dec
xchg
int
stc
cld
stc
repz
iret
adc
sub
jmp
sub
jle
mov
stos
in
movsl
pop
mov
mov
das
cmp
sub
cmp
jns
mov
mov
mov
xchg
les
outsl
mov
repnz
jnp
ss
stos
mov
add
lret
inc
insb
repnz
insl
ss
lock
add
lret
mov
jecxz
rsqrtps
dec
out
mov
rol
test
rcl
pop
aas
cmovl
lret
push
js
fucomip
ret
test
repnz
cld
lock
xor
xchg
sub
fwait
loopne
loop
dec
dec
shrl
mov
pcmpgtw
xchg
mov
addb
repnz
sbb
imul
stos
andnps
enter
out
add
inc
lahf
add
das
push
pop
in
inc
lahf
flds
orb
jns
out
in
stos
in
or
ffreep
cmc
sub
das
iret
shlb
push
push
dec
pop
add
pop
xor
inc
je
jns
out
lret
push
add
pop
ds
or
pop
cmc
lods
jno
in
push
pop
add
enter
or
stos
les
aas
or
bound
rclb
popa
cwtl
sub
add
push
xor
xchg
mov
rclb
cltd
jnp
sub
and
je
pop
jns
rolb
mov
fldl
pop
jns
xchg
adc
pop
add
mov
push
xor
je
call
cmp
scas
in
mov
scas
arpl
push
cmp
dec
stc
mov
fucomip
hlt
xor
das
in
rcl
dec
dec
dec
outsl
inc
out
call
pop
cmovl
decb
out
out
cmpsb
sahf
jg
cld
stc
icebp
cmp
aas
sub
movsb
lock
and
lahf
aas
pop
shll
cwtl
mov
push
inc
cld
stc
repz
outsb
mov
and
and
aaa
jae
iret
lahf
aas
jg
jnp
call
out
clc
mov
repz
cmpsb
lea
mov
jns
sub
in
cmc
mov
xchg
push
pop
push
cmp
jb
divl
xchg
push
pop
jns
ret
call
cmp
xor
loop
jno
test
dec
dec
ljmp
popf
scas
pushf
gs
mov
sbb
lock
sub
bound
fmulp
adc
sarl
adc
jg
aad
mov
dec
pushf
add
jecxz
xchg
and
sbb
sub
fdivl
cld
add
push
ror
mov
iret
lahf
aas
jg
or
add
shl
scas
cli
in
out
or
dec
in
cld
jbe
popa
push
repnz
lret
pop
scas
jo
mov
or
dec
insb
xor
sub
fildll
or
ds
xor
lahf
pop
jmp
push
pushf
sahf
inc
in
pop
jno
sbb
push
jns
in
and
dec
push
js
fmull
push
pop
pop
dec
call
adc
mov
test
sarl
aas
sub
lcall
lock
arpl
jp
push
xchg
jle
inc
mov
add
das
loopne
cmp
mov
xor
push
pop
loopne
pusha
xorb
sbb
jo
loopne
loopne
call
pop
call
lods
pop
scas
mov
scas
mov
sub
fisubrs
mov
or
jnp
insl
xchg
push
pop
jns
pop
dec
cld
pop
xchg
lock
cmp
mov
mul
mov
cmp
in
jecxz
daa
mov
addr16
pushf
aas
jecxz,pt
rcll
lret
sub
test
mov
scas
ja
push
out
in
push
fimuls
xlat
dec
std
inc
arpl
mov
iret
scas
je
or
xchg
ss
pop
mov
out
lahf
sub
xor
int3
fisttpll
repnz
push
aas
cmpsl
xchg
sbb
add
lret
test
fcmovne
mov
popa
lods
in
and
lret
mov
scas
adc
and
and
scas
mov
ja
or
out
push
mov
mov
dec
or
mov
mov
lds
sbb
mov
push
pop
jns
mov
fiadds
inc
mov
pop
jns
out
mov
pop
clc
nop
sarb
inc
jns
fstl
dec
dec
hlt
push
or
or
aas
add
lea
cli
mov
fcoms
cmp
out
lahf
dec
insb
sub
push
sub
adc
jg
cld
stc
mov
testb
in
in
loopne
ret
lret
lret
sbb
rorb
pop
jns
lret
pop
ret
imul
cmpsb
lret
stc
dec
adc
jb
xchg
push
xchg
mov
iret
std
ficomps
std
std
jbe
aas
or
add
aas
adc
popl
and
cmpsb
repnz
addps
frstor
outsl
jmp
lret
fcoms
stos
or
xlat
push
movsb
sti
movsb
xchg
mov
adc
out
nop
sub
pop
lea
scas
mov
loopne
mov
lahf
aas
aas
cs
out
add
xorl
arpl
lods
repnz
mov
cmp
lods
add
jg
jmp
shl
dec
or
jb
jg,pt
cld
jle
je
test
popf
lret
add
scas
sbbb
or
push
push
cmp
add
jg
lahf
mov
sbb
lret
in
dec
test
fmull
pop
scas
mov
mov
dec
ds
aas
jg
out
pop
jle
mov
mov
jge
les
adc
sbb
pop
mov
jle
cld
decl
rorl
outsb
test
es
stc
repz
adc
cmpsb
push
pop
out
cwtl
and
and
xor
add
data16
mov
je
pop
jns
xchg
mov
pop
rcll
mov
and
jge
loopne
mov
lret
stos
ja
inc
jle
sub
imul
setle
call
sbb
add
sbb
dec
or
pop
jle
out
mov
fwait
push
popa
xchg
lahf
aas
mov
xchg
mov
jp,pt
jno
aad
in
shl
xlat
lock
xchg
lahf
jg
inc
lcall
add
cld
stc
adc
loopne
or
rclb
jg
loopne
xchg
insl
and
test
adc
jl
cld
stc
repz
nop
sub
test
nop
test
in
inc
imul
sub
pop
xor
pop
imul
scas
jle
outsb
pop
jp
jp
xor
cmpl
stos
mov
jne
xchg
loopne
out
out
scas
orl
in
int3
cld
stc
repz
jns
loope
mov
hlt
sbb
jg
xchg
aas
jg
lods
vmwrite
inc
add
push
scas
jge
mov
das
jmp
and
ret
repnz
jno
dec
lcall
cmp
mov
fdivr
int
xorl
mov
inc
mov
sbb
mov
or
lret
repnz
das
mov
mov
cmpsb
lret
mov
andb
cs
ljmp
sbb
addr16
xor
sbb
or
popf
scas
outsb
mov
jge
out
lahf
aas
jge
mov
mov
lods
ret
xchg
cld
stc
repz
push
cmovg
inc
imulb
inc
outsb
lret
lahf
aas
jg
cmp
mov
insb
sub
add
outsl
lahf
aas
jg
pop
mov
test
int3
mov
inc
hlt
aaa
ljmp
andb
cmpsb
ds
bound
fsts
inc
cli
lods
jo
jns
xchg
push
add
psrld
cmp
pop
out
clc
pop
dec
sub
jne
xor
bnd
cmp
aaa
inc
xchg
sti
aaa
ja
sbb
add
push
xchg
pop
rol
out
lahf
pop
mov
or
hlt
in
rcrb
test
mov
ja
mov
in
push
stos
xor
adc
int3
repz
setne
jns
mov
or
fucomi
lahf
mov
in
sarb
xor
sbbl
repnz
pop
aad
push
mov
test
mov
scas
mov
push
jo
or
jg
scas
mov
js
lret
test
jo
dec
mov
punpcklbw
mov
and
mov
fwait
add
push
ds
das
ja
cmc
nop
movsb
add
push
pop
sub
inc
lea
in
mov
lret
repnz
test
xor
push
popa
add
inc
dec
xchg
cmp
jo
repnz
das
xlat
xchg
pop
in
cmpsl
clc
jno
iret
das
shr
iret
fidivs
scas
mov
test
cld
stc
repz
jb
notl
push
adc
iret
lahf
aas
jg
out
fs
jmp
add
sti
in
out
mov
shll
lahf
stos
cltd
scas
popf
push
or
scas
mov
bswap
cs
popl
mov
jecxz
cmp
xor
daa
sahf
ss
push
push
lret
out
push
and
xchg
clc
inc
dec
sbb
insl
jl
push
jecxz
dec
test
in
fbld
lcall
mov
add
pop
jns
or
in
pop
sub
jne
scas
xchg
cmpsl
xchg
sub
push
jmp
daa
loope
data16
jecxz
dec
imul
mov
mov
jno
ljmp
loopne
sbb
xchg
aas
lret
sarb
mov
repnz
in
mov
out
push
arpl
pop
scas
mov
push
stos
lock
orl
jns
or
divb
jecxz
fcompl
in
ljmp
jge
sbb
or
in
push
adc
dec
xor
xor
push
mov
mov
push
push
lret
push
lret
mov
ret
dec
and
ljmp
inc
cmp
lahf
pop
or
adc
sahf
mov
in
repz
mov
dec
jp
cwtl
mov
pop
jle
cld
shl
push
sahf
dec
cmp
cmp
hlt
jle
cld
or
sub
loop
int3
out
dec
jle
ljmp
mov
mov
aas
not
loop
pop
xchg
sub
jns
xchg
and
in
clc
faddl
xchg
push
fisubrs
out
push
sbb
jg
lahf
les
xchg
push
pop
jns
dec
scas
out
inc
push
and
and
push
pop
jns
sbb
inc
dec
jmp
cmp
scas
int
pop
jns
xchg
dec
pop
movsb
sti
iret
mov
add
in
push
je
adc
cli
movsl
xchg
scas
add
jmp
jb
push
sub
xchg
ret
pop
into
pop
cmpsb
loopne
hlt
mov
stc
repz
jl
mov
aas
dec
pop
sbb
or
push
push
xor
cs
out
lahf
rcrb
pop
loope
test
lret
iret
mov
out
push
push
inc
xor
dec
cmc
scas
mov
and
pop
and
sahf
push
sbb
mov
sarb
inc
ja
jno
pop
scas
mov
xlat
cmp
aas
outsl
push
data16
fnstcw
out
cli
in
ficoml
aas
mov
stos
mov
lock
mov
leave
jmp
jmp
bound
jg
cld
ss
cmc
mov
es
movsb
loopne
mov
push
hlt
out
lret
iret
lahf
adc
sti
sbb
cli
mov
ret
inc
clc
in
scas
sbb
out
sbb
or
adc
cld
push
faddl
cld
mov
mov
das
lahf
push
and
fcom
fsubrs
push
inc
movsl
xchg
push
pop
jns
xchg
cs
bound
push
pop
jns
lock
out
mov
inc
mov
es
jns
xchg
popf
fstl
in
fmul
sti
pop
jns
xchg
push
or
cmp
pushf
fmuls
aam
int
in
push
pop
das
sbb
test
and
lods
repnz
jge
fistl
call
pop
test
dec
sbb
stc
add
cmp
pop
out
cltd
sub
sbb
xchg
ja
jl
mov
cmp
insl
inc
and
jnp
or
in
pop
ja
adc
jl
adc
sub
pusha
rolb
xchg
out
lret
mov
pop
insb
add
adc
mov
cmp
repnz
mov
sub
xchg
jne
adc
std
or
and
cmc
aas
ficoms
xor
mov
ja
cwtl
add
push
pop
push
call
mov
or
dec
adc
pop
adc
mov
push
jg
in
lret
adc
xor
fldt
sub
ret
pushf
aad
rorb
push
clc
in
jmp
sbb
mov
cld
stc
repz
xlat
gs
mov
lds
jl
lahf
aas
jg
stc
and
push
les
adc
les
cld
jg
xchg
sub
out
je
pop
scas
mov
les
lahf
dec
pop
push
in
lret
mov
sbb
inc
dec
sub
stc
xchg
lahf
mov
hlt
inc
push
sbb
mov
out
das
test
xchg
xor
das
scas
mov
bound
add
xchg
lock
loope
mov
and
add
pop
sahf
pop
or
out
lahf
xor
mov
sub
std
lret
imul
pusha
inc
mov
push
into
xchg
pop
add
push
sub
jg
lock
lret
xchg
push
fdivr
int
push
in
lahf
xchg
push
fidivrs
nop
jg
mov
push
pop
jns
xor
stc
mov
jmp
adc
ret
das
scas
out
xor
ss
rorl
lret
jl
or
and
dec
add
lret
xchg
pop
push
jecxz
popf
mov
cli
xchg
in
test
adc
test
pop
pop
jns
arpl
fmul
stos
jbe
repnz
cmovl
int
adc
xchg
add
xor
push
bound
pop
xchg
loop
das
cs
in
sbb
nop
pop
insb
cmp
pop
jmp
loopne
and
xchg
leave
je
stos
enter
shrl
icebp
shrb
push
movsl
add
xchg
mov
mov
mov
adc
jg
mov
scas
out
add
adc
jp
sub
scas
mov
pop
jg
shl
xchg
andb
in
orl
cwtl
add
cmp
lock
and
shll
mov
sbb
cs
mov
or
jle
adc
xchg
push
fidivrs
into
mov
push
pop
jns
inc
mov
movsb
xchg
movmskps
pop
pop
jns
ds
xlat
mov
pop
xchg
repz
aas
push
pop
pushf
ljmp
rolb
mov
pop
std
aaa
inc
push
add
lahf
aas
js
test
jl
push
mov
and
pop
and
out
int
sbb
rcll
lret
gs
cmp
pop
dec
sbb
ljmp
xor
ret
mov
test
dec
dec
dec
sbb
repz
xchg
push
leave
xor
cmp
cli
cld
or
repnz
pop
xor
je
aas
jg
inc
add
fwait
push
gs
aad
movsl
sbb
mul
out
imul
and
mov
mov
jb
cld
jb
mov
inc
mov
sbb
cmp
push
inc
sub
push
and
mov
and
push
ret
dec
jge
mov
cmpsb
add
stos
mov
mov
ficoml
in
das
shl
mov
adc
shlb
in
push
aad
rcrl
jne
or
repnz
pop
cmp
inc
addr16
jg
ret
mov
add
mov
repz
pop
inc
mov
jg
stc
push
mov
aad
test
test
push
cwtl
cli
ss
in
lahf
cld
xlat
cld
mov
xchg
shl
das
stos
lret
inc
loopne
jmp
cmp
mov
push
cmp
push
pop
jns
mov
iret
enter
sub
push
pop
lock
xchg
arpl
push
popa
push
push
sbb
out
lea
in
cld
sahf
jns
push
pop
adc
repz
xchg
mov
xchg
cmp
stc
repz
negl
sbb
cltd
cmp
stos
sbb
mov
pop
jge
outsl
repnz
test
sbb
sti
arpl
fmul
sub
in
jno
fsubl
jmp
cli
repnz
jp
jp
mov
addr16
icebp
or
scas
or
xor
in
insl
cmpsl
inc
rcrl
mov
jae
pop
out
xchg
iret
stc
mov
fcmovnu
loop
sub
mov
in
xchg
push
bound
das
mov
push
pop
jns
mov
xor
pusha
ret
std
add
push
pop
jns
dec
cmp
js
inc
or
sbb
sbb
xchg
cmp
stos
movsl
cmpb
mov
dec
jns
xchg
push
outsb
mov
or
clc
mov
in
push
pop
pop
dec
sbb
pop
insl
mov
sbb
push
pop
jns
push
repz
xchg
imul
mov
add
jns
xchg
ret
test
popf
mov
xchg
mov
pop
out
dec
xchg
dec
ficomps
add
inc
inc
or
repnz
jge
xchg
push
and
ficompl
adc
xchg
sub
scas
out
and
scas
mov
in
test
jg
jns
jno
push
lahf
pop
loope
jae
mov
mov
hlt
xchg
mov
jmp
movsl
push
dec
dec
aas
fcomip
push
pop
jns
adc
sub
lret
jns
call
std
pop
jns
xchg
mov
cmp
popa
xchg
jns
xchg
push
and
inc
decl
cmp
clc
and
sahf
mov
push
sub
cmpsb
add
clc
fisubrl
cmp
pushf
lret
lret
aas
out
mov
in
das
mov
mov
aaa
out
mov
mov
scas
mov
jno
pop
nop
jg
and
into
pop
pop
imul
negl
push
cld
stc
repz
test
outsb
movsb
lret
lods
repz
mov
mov
leave
mov
jns
ljmp
fiaddl
loopne
punpcklwd
iret
lahf
pop
adc
push
sarb
jle
in
out
outsb
xor
jg
mov
mov
lret
mov
and
push
push
sub
push
dec
sub
insl
ss
test
inc
fldcw
adc
andb
and
inc
pop
jns
pop
pinsrw
iret
xchg
repnz
ljmp
xchg
push
push
jmp
mov
fdivrp
jb
fdivl
sbb
jnp
dec
adc
std
jb
xchg
push
xor
adc
mov
stos
sbb
cmp
js
repz
push
in
xor
mov
pop
ds
xor
cmp
xor
mov
ficomps
dec
or
ds
fdivrl
cli
aam
dec
out
shrb
mov
mov
mov
mov
ljmp
xchg
sub
jle
sub
or
popf
sub
sar
repz
sbb
insl
orb
hlt
sbb
jg
cld
mov
shll
daa
in
mov
addr16
and
xchg
das
mov
inc
push
lds
jo
jns
ffree
add
mov
std
push
mov
ds
nop
in
das
push
cmp
bound
jne
imul
push
pop
jns
jne
push
jmp
arpl
stc
pop
fidivl
xlat
fdivrp
rol
es
jns
xchg
push
add
test
notb
mov
rcl
in
mov
out
push
jo
pushl
rorb
xor
popf
and
loopne
iret
lahf
sub
aaa
inc
xor
or
aam
lahf
aas
ds
xchg
pop
std
mov
mov
sub
cld
push
xchg
les
inc
std
scas
sub
push
cmp
lret
out
inc
mov
cmp
nop
pop
pop
cmp
cmc
and
inc
push
jge
lds
add
jns
xchg
icebp
aad
test
negb
pop
xchg
in
push
mov
mov
scas
pushf
inc
sbb
cmp
pop
scas
mov
pop
fmul
in
jne
push
pop
push
jmp
mov
pushf
in
fs
push
and
xchg
loope
repnz
dec
and
push
inc
inc
pop
ret
cld
add
xor
dec
dec
ds
sub
adc
mov
ja
lahf
aas
jg
pop
cld
std
daa
fiadds
lahf
mov
xor
repz
in
pop
ret
mov
sub
xchg
mov
jge
or
jo
or
sub
adc
jbe
xchg
jle
cld
stc
fcompl
mov
stos
scas
and
mov
into
xchg
lahf
aas
mov
sbb
mov
pop
call
repz
fmuls
mov
rcrb
stos
loopne
out
mov
repz
pop
pop
hlt
repnz
jl
jl
mov
push
inc
insb
and
and
stc
cmpl
push
mov
data16
aas
jg
jns
ds
arpl
lret
pop
repnz
xchg
iret
adc
cmc
out
cmp
pop
dec
mov
scas
mov
aas
insl
aad
lret
cmp
popl
lret
mov
cld
insb
xor
dec
cld
cmpb
dec
test
in
ja
sbb
cmp
daa
push
mov
pop
jns
inc
int
bound
inc
pop
push
pop
jns
xchg
scas
call
mov
vmovd
xlat
jns
xchg
push
imul
xchg
sub
push
pop
or
adc
sbb
stc
xor
adc
ret
loop
stos
hlt
aam
int
ja
aas
jg
add
xchg
lea
out
cmp
sub
dec
cmc
sarb
hlt
lods
je
or
cld
dec
add
lods
mov
sbb
out
lret
iret
lahf
sub
fcoml
dec
cmp
mov
repnz
xchg
adcb
fcmovbe
stos
mov
lret
mov
ret
shl
mov
and
iret
scas
mov
push
inc
movsl
fidivs
cld
stc
repz
ds
cli
pop
mov
testb
ss
pop
jg,pt
adc
mov
fimuls
cmp
call
xchg
out
jl
pushf
rcrl
out
jecxz
stc
pop
jns
xchg
insb
sub
sub
test
xchg
ss
xchg
push
jmp
xchg
daa
gs
cmpl
pop
sub
mov
scas
pushf
mov
arpl
ret
and
lret
mov
clc
lret
rcl
xor
xchg
dec
cmc
repnz
pusha
dec
frstpm(287
out
icebp
iret
mov
leave
mov
das
mov
and
ja
out
scas
into
pop
std
mov
iret
outsl
dec
mov
cld
stc
and
fcmovnbe
das
dec
es
in
mov
xchg
pushf
add
pop
lods
fucomip
sti
pop
jns
fisttpll
mov
lods
testb
out
mul
xchg
push
xlat
or
adcl
sahf
sub
jg
dec
jl
in
fdiv
pop
xchg
mov
stc
mov
es
aam
pop
cmp
add
cld
push
pop
arpl
push
jb
push
mov
test
pop
mov
mov
jne
jecxz
xchg
lahf
jns
mov
test
stc
repz
into
hlt
lcall
jle
xor
loopne
test
test
jns
das
jg
cld
pop
div
add
test
xor
cld
inc
ds
insb
mov
mov
add
lahf
aas
pop
xor
adc
push
sub
lret
out
pop
inc
mov
and
fld
mov
jns
cmp
test
jl
dec
test
ds
xchg
sbb
xchg
inc
mov
loopne
sub
xor
mov
adc
in
inc
fadds
repz
lods
test
in
icebp
call
orl
loopne
cwtl
dec
inc
lret
call
cld
jmp
jne
add
loop
sub
pusha
pop
fildll
xlat
cmc
mov
ja
push
dec
js
das
repnz
or
adcl
add
movl
idivl
movsb
sti
sarb
mov
fstl
arpl
pop
xorl
stos
adc
mov
mov
lret
pop
pop
mov
das
je
mov
repnz
filds
xchg
push
sbbl
cwtl
and
xor
xchg
mov
aas
add
mov
data16
lods
sti
in
out
ds
jae
lret
cmp
sbb
mov
jle
lds
cmp
lock
and
in
or
lock
out
lahf
mov
pop
lret
sbb
sbbl
cld
stc
xchg
mov
jno
rcrb
pop
mov
pop
ds
push
jl
imul
mov
cmpsl
or
lret
adc
lock
sbbl
stc
adc
repnz
pop
lods
out
mov
inc
jb
jbe
int
aam
jg
int3
es
repnz
fdivrp
jno
sarb
jg
cld
add
or
shrb
shl
outsl
xor
aas
xor
sar
addr16
repz
ficompl
mov
cld
jle
and
imul
cmpsb
mov
mov
lret
sub
add
ficomps
stc
repz
mov
push
and
repz
lahf
aas
jg
lds
lahf
addl
sub
or
stc
stc
repz
push
mov
fstp
xor
es
std
jnp
jl
dec
and
mov
aas
jg
add
idivl
lods
repz
lahf
inc
fs
das
mov
jg
cld
stc
pop
pop
hlt
mov
sbb
aaa
and
xlat
sub
or
aas
sbb
lds
pop
sarl
dec
popf
xchg
or
mov
pop
sarl
fdivl
or
and
sub
sub
cld
sbb
cmc
adc
xor
cs
test
sub
pop
incb
jmp
add
xor
xchg
cli
in
nop
push
push
xchg
lret
cmpsl
in
pop
mov
stc
repz
gs
fs
lret
pop
lcall
lahf
aas
jg
mov
fcom
sbb
mov
in
sbb
loopne
iret
dec
notl
test
iret
andl
push
add
adc
call
fucomip
pop
pop
jns
dec
mov
cmp
aas
lret
sub
into
cltd
mov
pop
cmp
call
scas
stos
lahf
out
dec
rcrb
jle
dec
xchg
sbb
fidivl
dec
push
daa
out
dec
incl
in
sub
hlt
jge
sbb
fdivs
in
push
std
dec
dec
xchg
cs
mov
nop
out
in
push
pop
popf
ss
mov
enter
icebp
pop
repnz
mov
ds
jl
mov
sub
sbb
dec
and
sbb
stc
repz
rcrl
xor
jbe
addr16
lret
mov
dec
je
jmp
dec
add
pop
scas
mov
pop
sub
test
dec
stos
pop
jns
xchg
mov
insl
mov
rclb
dec
push
pop
insl
jns
xchg
push
insl
stc
lret
pushf
cli
fidivrs
or
inc
dec
dec
or
dec
and
fbld
pop
jns
lret
add
test
nopl
pop
adcb
nop
mov
jno
cmp
jg
sub
dec
inc
dec
ljmp
cmp
cmp
and
xchg
aas
popf
andl
mov
mov
xorl
sti
in
popa
rcrl
lret
fimull
sub
mov
out
insb
jbe
fiaddl
mov
lret
lahf
pop
and
and
add
jg
cld
sahf
push
lahf
inc
es
mov
inc
jnp
mov
out
lahf
aam
stos
jmp
add
dec
movsb
pop
sbb
stc
and
movsb
sub
addr16
adc
aas
jg
xorb
test
out
or
aam
es
pavgw
iret
cmpsl
fidivrs
faddl
into
cld
stc
repz
pop
cmp
loopne
bswap
xlat
mov
dec
xchg
lahf
push
jle
jge
add
mov
and
in
push
jnp
outsb
fwait
sbb
frstor
test
xchg
push
or
mov
mov
xchg
xchg
push
pop
cmp
mov
scas
fadds
xchg
push
pop
jns
add
adc
test
add
jge
in
popf
xchg
loopne
dec
pop
pop
pop
in
cmp
iret
dec
jno
or
out
movsl
rorb
jg
jmp
pop
pushf
outsb
inc
in
dec
shll
mov
loopne
std
xchg
cld
stc
repz
add
aad
fsubrs
or
jl
stos
sti
rclb
mov
aam
in
ja
fcomip
push
ret
dec
or
inc
ja
pop
jns
cmp
outsl
cmp
cli
ss
ret
adcl
adc
jno
cmc
xchg
out
insl
fcmove
sub
jle
cmp
repnz
xchg
sub
lods
out
dec
and
es
add
or
insb
stos
jge
pop
mov
repnz
adc
adc
loope
xchg
jns
lret
xchg
adc
adc
sbb
and
pop
loope
out
and
sbb
push
mov
pop
loopne
cmpsl
imul
stc
repz
pop
sub
pop
test
mov
loop
lahf
aas
scas
cld
mov
stos
inc
mov
and
mov
xchg
jecxz
pop
sbb
das
into
pop
sti
in
out
pop
test
popf
test
clc
aas
cmp
scas
mov
test
pop
mov
and
repnz
lods
xor
cvtps2pd
xor
lock
add
out
pop
in
cmpsl
jg
push
into
dec
call
daa
shrl
jmp
sub
aas
add
add
loope
call
inc
inc
fimuls
fsubl
out
xchg
iret
lahf
push
popf
mov
jge
lock
push
int3
adc
lret
cmpsl
rorl
inc
clc
repnz
aad
dec
inc
fucomip
and
lret
out
cli
mov
pushf
enter
test
lahf
arpl
popa
es
jl
sti
mov
pop
aas
mov
xchg
pop
bound
jg
sub
ss
pop
sub
pop
sub
xor
mov
lcall
scas
mov
jle
jb
notl
clc
adc
dec
pop
jns
pop
add
sarl
jp
sti
lret
sarb
push
clc
dec
mov
mov
mov
das
lret
xchg
push
pop
imul
adc
stos
jecxz
jns
repnz
mov
mov
push
or
sub
push
or
enter
scas
mov
ret
andb
inc
sahf
mov
inc
mov
out
xor
dec
lods
xchg
incb
aad
adc
aad
orb
aas
jg
push
sub
dec
cmp
dec
addr16
pop
jns
push
lret
jmp
cltd
pop
pop
outsl
jl
sti
or
out
out
mov
and
cld
mov
pop
xchg
popa
or
in
ficoml
push
xchg
out
repz
xchg
jg
cld
outsb
mov
popa
and
fistpl
test
fs
das
lahf
xchg
je
je
in
iret
xchg
inc
adc
push
pop
jns
outsb
sbb
mov
fxch
sub
mov
jns
gs
mov
mov
leave
cmc
push
ret
jg
push
shrl
test
aam
pop
mov
sbb
pop
lock
iret
sbb
dec
mov
imull
sub
pop
mov
pusha
and
and
or
sub
lret
cli
int
das
cld
lret
clc
sbb
mov
loop
aam
pop
xchg
lahf
aas
jg
xor
inc
lret
jge
pop
inc
jbe
pop
jns
xchg
out
cmp
in
mov
mov
aam
xchg
push
pop
xchg
test
push
and
cmp
push
in
xchg
push
pop
jns
add
fcmovnu
int3
and
movsl
lock
sub
xchg
or
mov
add
and
fcomip
lret
stos
push
add
gs
int3
mov
pop
cmp
sub
lcall
pop
sub
sub
loope
jge
in
or
push
lahf
push
repnz
stc
rep
outsb
jae
push
adc
pop
and
fxch
lahf
nop
imul
or
lods
stc
repz
std
xchg
out
mov
mov
addb
fadds
cld
sub
and
pusha
adc
cmpsl
pop
nop
ljmp
cmp
push
pop
lds
cld
stc
repz
lds
dec
test
loop
lahf
aas
jg
xchg
push
andl
fcomps
stc
repz
cli
pop
imul
pop
xchg
mov
mov
jecxz
aas
jg
cld
outsl
cmc
int3
xchg
pop
add
or
sub
repnz
sbb
xor
imul
mov
jecxz
aas
xor
mov
aas
adc
cli
and
jnp
lahf
aas
jmp
mov
fnstcw
test
push
popf
mov
pop
lahf
xchg
push
pop
jns
mov
xor
push
and
jns
push
inc
outsl
push
mov
fcmovb
and
xor
jb
xchg
fildll
and
sub
pop
xchg
pop
repnz
ja
test
sub
mov
mov
outsl
mov
jle
repnz
nop
icebp
insl
out
lret
lret
lret
lahf
aas
aas
mov
mov
or
pop
jns
fucomp
xor
xor
push
sub
outsb
dec
movaps
push
fwait
dec
pop
popl
dec
jbe
fstl
jg
push
out
lods
push
scas
orb
or
fwait
jg
scas
ljmp
rclb
dec
ss
lock
nop
test
sahf
lods
mov
pop
jns
ret
cld
mov
cmp
js
aam
mov
or
fucomi
aaa
pop
jns
push
jno
test
out
sti
mov
in
inc
rcrl
pop
jns
xchg
scas
pushf
out
lods
aam
adcl
xchg
push
mov
mov
xchg
ja
and
ficoml
adc
ja
pop
call
push
test
push
daa
add
push
pop
jns
out
mov
adc
jmp
inc
xchg
and
or
xor
lods
in
lahf
inc
jo
lret
arpl
aaa
cmp
pop
adc
mov
inc
enter
por
iret
pop
sarl
xor
in
cltd
push
add
cmc
test
das
xor
repnz
dec
mov
lcall
popa
aam
push
dec
sti
push
enter
jle
cld
stc
repz
inc
pop
movsb
testb
das
push
fidivrs
mov
adc
adc
adc
test
das
dec
scas
mov
lea
mov
jmp
inc
adc
push
lods
jg
data16
repz
sti
cmp
les
mov
das
dec
and
aas
test
mov
dec
jge
jb
sahf
xchg
sub
out
in
sub
inc
out
int
xchg
pop
sysenter
mov
sub
xor
lahf
xlat
cmp
cs
jb
in
xchg
shrl
imul
xor
scas
mov
push
rorl
loop
adc
clc
in
sub
inc
inc
jne
sbb
in
orl
stc
cld
push
into
cmpsb
cmp
pop
jecxz
or
outsl
lret
out
mov
pop
andl
sub
cmpsb
mov
pop
cmp
ficoml
cmp
mov
xor
cmpsl
dec
cwtl
hlt
fimull
xchg
in
adc
xchg
mov
push
pop
jns
cld
ret
mov
int3
sbb
stc
enter
in
fidivrs
out
out
rorl
pop
jns
xchg
mov
mov
pop
fistl
xor
test
push
jg
push
dec
jle
and
pop
jle
cmp
lahf
out
push
in
bound
jns
sti
mov
push
popa
jg
or
fwait
pop
jns
xchg
dec
in
dec
aaa
or
mov
xor
xchg
push
fs
sbb
leave
xchg
inc
and
cmpsb
ss
ja
pop
jo
pop
fdiv
dec
arpl
adc
loopne
add
jns
rcll
cmpsb
or
add
jb
xchg
jo
jecxz
je
and
fstl
xchg
rolb
iret
icebp
lret
clc
mov
iret
adc
jge
leave
sahf
ds
stc
repz
mov
mov
mov
mov
pop
imul
pop
sti
subl
int
aad
jmp
pop
pop
call
mov
movsl
cmp
out
mov
das
lahf
out
sub
test
fs
add
cs
mov
sub
aas
add
lea
xor
stc
repz
in
sbb
push
out
cmp
xor
push
push
mov
lahf
pusha
les
bts
popf
push
or
xchg
sub
pop
inc
lahf
das
sbb
pop
jns
lret
mov
pop
pop
sub
data16
sbb
jb
xchg
push
mov
imulb
adc
fwait
and
jno
mov
loope
sub
movsl
movsb
test
clc
or
xchg
jmp
in
test
maskmovq
fnstsw
stos
add
jae
test
and
pop
jns
mov
add
ja
push
lahf
aas
push
dec
dec
pop
or
jo
std
xlat
dec
adc
pop
jns
push
xorb
sub
jg
sub
nop
pop
iret
aas
out
sahf
lahf
clc
popf
cmp
in
mov
jmp
mov
mov
das
push
stc
sbb
mov
jg
xchg
jge
in
lods
adc
es
dec
sbb
loope
jg
pusha
std
iret
add
dec
jecxz
push
iret
cwtl
stc
in
ja
cmp
dec
sbb
shlb
cld
cmp
fistpl
test
aas
jg
push
xor
add
cmp
xchg
repz
adc
jle
push
jg
jmp
out
jg
cld
push
pop
loop
sbb
and
push
mov
sbb
or
clc
fcmovne
mov
adc
in
jl
mov
adc
repnz
mov
lahf
aas
jg
xchg
sbb
and
loop
scas
out
and
subl
xchg
outsl
mov
andl
addr16
aas
jg
cld
test
xor
mov
js
sub
fimuls
repnz
movsl
push
insb
mov
out
xchg
xchg
push
fidivrs
mov
xor
jns
xchg
jg
inc
xor
leave
sbb
ja,pn
or
arpl
lcall
jp
mov
in
push
pop
fstps
push
mov
aam
in
mov
adc
pop
sar
jns
cld
xor
or
add
and
scas
dec
cmp
iret
lahf
mov
dec
hlt
push
sahf
movsl
scas
mov
int
pop
sbb
cmp
lahf
test
jae
pushf
sub
inc
loop
inc
roll
orb
cld
cld
stc
mov
add
je
lock
sbb
jecxz
sub
pop
push
jne
jae
aas
pop
push
inc
inc
in
ja
aas
add
fldcw
int
rclb
push
pop
jns
fisttpl
xor
icebp
in
mov
jns
xchg
subl
sub
inc
lret
stos
sbbb
adc
stos
or
add
aas
out
xchg
fdivrs
adc
pop
xor
es
cmp
cli
mov
ja
jle
jle
rorb
mov
jge
in
xchg
mov
into
jnp
ret
repz
lds
mov
fbstp
pop
adc
and
xor
sub
pop
repz
and
iret
lahf
aas
jg
xchg
ds
mov
daa
cld
stc
repz
dec
insb
mov
pop
fsubl
out
pop
imul
daa
mov
jg
orl
repnz
and
push
aam
sub
test
sub
pop
scas
xchg
scas
push
cmpsl
imul
jg
jno
je
xchg
push
pop
fsubl
stos
add
jbe
push
push
les
or
sub
pop
sub
sbb
aas
ss
or
lret
sub
adc
dec
je
mov
out
sbb
scas
mov
out
pop
andb
push
test
fiadds
or
cld
stc
repz
js
sub
mov
adc
das
lret
sub
mov
das
or
mov
push
sahf
dec
stc
rep
jmp
lods
adc
nop
bnd
cld
imul
pop
sarb
pop
inc
das
mov
popf
jp
and
or
xchg
inc
sahf
shl
pop
icebp
in
scas
scas
shr
mov
mov
mov
stc
test
xchg
movaps
pushf
pushf
sub
inc
gs
aaa
fistpll
push
movl
aas
sbb
lea
out
sti
in
sub
out
js
repz
or
das
xchg
sub
loope
ficompl
and
mov
pop
cs
adc
in
iret
push
aam
jae
sbb
hlt
loopne
jle
call
push
pop
sbb
daa
in
clc
aas
fadd
mov
jns
jl
mov
pusha
xchg
adc
xor
out
shrb
pushf
or
push
ret
mov
cld
stc
repz
insb
mov
ss
xchg
cmp
mov
or
cltd
jae
jl
out
decb
out
leave
mov
or
fists
sub
test
and
repnz
xor
js
aaa
cltd
sbb
loope
sub
call
dec
mov
xor
hlt
mul
daa
jge
dec
divb
lock
pop
das
mov
fists
jo
inc
in
addb
sbb
test
mov
jg
dec
outsb
pop
fwait
sbb
mov
mov
repz
sub
or
icebp
shrb
bnd
cld
stc
pusha
sbb
jp
dec
inc
adc
add
mov
rolb
dec
sbb
xlat
inc
dec
repnz
out
xchg
pop
mov
push
bound
fldcw
lock
dec
ljmp
jg
scas
mov
cmp
das
adc
xchg
jmp
test
mov
inc
cmp
ret
aad
lret
mov
lahf
aas
jg
mov
adc
xchg
and
xadd
jg
das
sbb
ds
stc
repz
rorl
les
push
icebp
es
jl
adc
mov
jle
je
iret
lahf
pop
into
lds
mov
mov
out
cld
stc
repz
push
adc
and
mov
sub
mov
dec
or
jecxz
dec
dec
repnz
adc
cmp
pop
sbb
repnz
outsl
pop
xchg
lock
cmpsl
or
jmp
stos
pop
jecxz
sub
mov
pop
xchg
cmp
push
jo
xlat
xor
pusha
mov
nop
stc
cld
stc
xchg
int
mov
inc
jnp
jmp
incb
jge
aas
pop
sahf
not
hlt
gs
out
fsubp
iret
lahf
aas
adcl
pop
cmp
repz
jno
cmp
mov
add
iret
sub
scas
out
pop
stos
mov
mov
loopne
inc
insb
jo
sbb
jnp
inc
mov
lret
iret
lahf
jg
pop
test
add
push
inc
xchg
jns
in
mov
jno
jo
inc
jg
cmc
xchg
mov
sahf
lods
out
shrl
mov
dec
jle
jl
mov
aas
mov
inc
pop
dec
pop
jle
mov
pop
push
js
xor
xchg
repz
lahf
mov
ret
cwtl
xor
or
or
std
jb
in
push
pop
das
mov
inc
outsl
pop
xchg
mov
scas
jge
jle
mov
jno
je
lahf
pop
pop
outsb
imul
and
stc
repz
cmp
rolb
mov
inc
or
iret
out
loop
incl
lcall
push
lahf
lods
pop
ds
ljmp
jb
pop
aam
mov
cld
stc
repz
xchg
pop
cmpsb
arpl
out
cmp
jno
or
xchg
aas
jg
in
out
aad
loopne
popf
daa
stos
aas
push
mov
dec
in
inc
mov
mov
iret
lahf
fcomps
add
xchg
imul
adc
xor
add
loopne
dec
inc
pop
repnz
or
lock
xchg
ja
jge
or
pop
mov
in
ds
pop
lret
std
lret
inc
sbb
xchg
test
inc
stos
mov
test
scas
mov
jecxz
inc
mov
sub
ds
scas
mov
or
and
iret
xor
sub
jle
lahf
mov
add
push
hlt
stos
pcmpgtw
jecxz
fwait
decl
sbb
out
lahf
aas
into
add
and
pop
push
or
cld
stc
repz
inc
sub
adc
dec
jo
jbe
enter
add
dec
int3
mov
fmul
lret
aas
mov
add
jecxz
es
cwtl
cmp
ds
and
jmp
cld
cmpsb
sahf
js
jg
bndldx
in
in
ja
imull
in
pslld
mov
test
or
sub
into
mov
jb
mov
push
nop
std
lcall
push
adc
in
lahf
fstpt
jno
movsb
stc
jo
adc
sub
mov
mov
xchg
push
pop
xchg
lahf
jg
outsl
test
stc
repz
addb
mov
cld
mov
fucomi
lods
mov
ja
xchg
sahf
push
fbstp
xchg
xchg
push
pop
jns
test
addr16
push
adc
xor
lret
jb
pop
jns
pop
mov
es
ret
mov
pop
jns
xchg
mov
dec
inc
dec
adc
jb
gs
in
push
push
inc
jp
out
mov
pop
stc
xchg
cmc
inc
jg
stos
mov
mov
repz
cld
repnz
jg
andl
ds
pop
mov
bnd
mov
add
cld
jecxz
and
xchg
jo
push
in
cmpsl
adc
icebp
push
pop
lahf
aas
jg
andl
push
mov
loopne
int3
stc
repz
jl
insb
xchg
fsubrs
cmpsl
pusha
cmp
jle
cld
push
xor
xor
sti
fildll
rcll
sub
or
or
cmp
std
jle
bound
lahf
add
jg
ds
pop
aaa
mov
or
test
mov
int
xor
sub
int3
push
sbb
sbb
inc
clc
xchg
pop
scas
mov
inc
jg
ljmp
fstp
xchg
mov
gs
repz
cld
sahf
xor
mov
dec
or
xor
cld
inc
xor
xor
loop
lret
pop
push
sahf
insb
psrlw
out
adc
in
adc
mov
xchg
and
cmovs
pop
rclb
into
lea
jmp
or
loopne
push
mov
mov
or
lahf
aas
jg
push
jl
sub
movsb
mov
subb
xchg
add
sub
jg
cld
pop
addr16
pop
ss
daa
push
pop
aas
xorl
mov
outsl
in
cmp
icebp
cmp
sub
sub
aas
fidivrs
jne
sub
xchg
hlt
and
xchg
rdseed
sub
lret
push
push
pop
cmc
std
push
and
out
lret
sub
xchg
repnz
pop
cs
gs
or
pusha
mov
adc
sub
aaa
push
cli
mov
das
andb
sub
pop
aam
lret
mov
pop
pop
dec
or
scas
mov
jmp
mov
inc
mov
repnz
repnz
xor
ja
lret
insl
mov
mov
jl
das
aas
jg
fidivrl
insl
pop
sbb
testl
xchg
repnz
sub
out
xor
fdivl
and
pop
xor
call
ds
mov
xchg
dec
aam
lahf
or
fidivs
test
lahf
pop
vmwrite
xchg
push
js
push
jp
lock
aad
and
push
pop
ja
push
pop
add
and
push
pop
jns
push
cmpb
pop
jns
mov
das
jge
mov
std
fs
jns
xchg
ja
sbb
stos
movsl
or
and
fadd
stc
in
push
pop
dec
sbb
shll
call
sub
out
cmp
xchg
push
ficomps
mov
or
mov
add
iret
das
lock
xor
fcompl
and
in
jmp
jp
inc
fbld
cs
lods
xchg
in
push
mov
cmp
xchg
xchg
push
pop
jns
lahf
push
int3
push
pop
inc
mov
cld
jb
adc
ret
or
out
mov
inc
pop
add
imul
repz
xchg
pop
xchg
or
push
sbb
repnz
fimull
jb
mov
das
jecxz
mov
push
loope
adc
stc
and
leave
jb
bound
aas
pop
loopne
mov
cmp
sub
cwtl
cmp
push
clc
pop
scas
mov
sbb
ret
ja
or
dec
lahf
outsb
ds
mov
push
pop
jns
mov
mov
xor
ljmp
das
cli
mov
jmp
mov
xchg
lahf
aas
add
out
mov
lret
xor
in
aas
jno
mov
dec
hlt
cwtl
std
pop
aas
jg
cld
adc
cmp
xor
ficomps
xchg
aam
lahf
orl
cs
cld
stc
repz
call
inc
call
push
inc
stc
pop
jg,pt
xchg
pop
or
ss
imul
pop
jns
xchg
lahf
xchg
lods
out
ljmp
dec
jg
test
add
rolb
xchg
jmp
imul
lahf
aas
test
cltd
int3
mov
ja
repnz
sbb
je
aaa
outsl
lock
cmp
gs
jns
xchg
int3
sub
scas
out
mov
jl
aam
in
push
cld
jecxz
add
aaa
insl
sbb
xchg
push
pop
xchg
mov
sub
call
ljmp
outsl
jecxz
cmp
push
repnz
lahf
aas
push
leave
in
and
jno
jg
dec
js
push
js
rep
dec
cltd
dec
push
inc
loopne
outsb
mov
in
xchg
sbb
aad
scas
pushf
pop
jmp
xor
pop
stc
mov
fbstp
mov
iret
xor
fstl
in
pusha
push
iret
inc
ss
rcll
jns
or
cmp
mov
jb
cltd
pop
jns
xchg
sbb
push
test
xor
aam
jns,pt
xchg
push
inc
daa
push
mov
or
fsubl
vmread
mulps
cmpsl
cs
cld
stc
repz
fwait
std
iret
in
loope
out
insb
lea
int
test
aas
jg
gs
xor
loop
scas
push
mov
sbb
leave
mov
sbb
pop
jns
addr16
xor
repz
sbb
jb
sbb
adc
mov
out
scas
call
repnz
nop
inc
mov
pop
adc
mov
das
aas
jg
cs
mov
dec
xchg
mov
dec
jmp
jmp
inc
fsubrs
inc
sahf
mov
pop
sub
push
inc
push
jg
pop
lahf
shl
sub
cmpb
stc
cmpsb
pop
jge
sub
jno
lcall
sub
ss
fidivs
je
xor
push
dec
dec
rorb
jb
jecxz
incl
call
adc
or
xchg
lock
jecxz
fildll
hlt
outsb
scas
mov
pop
pop
inc
lods
pop
xor
pusha
popf
sti
in
sub
pop
cmp
lods
addr16
dec
lret
mov
or
xchg
scas
mov
sub
pop
aaa
addr16
jns
dec
adc
aas
inc
mov
mov
and
dec
into
sub
js
mov
out
repnz
das
iret
ljmp
fwait
mov
stc
rorl
fwait
aad
push
mov
mov
add
loop
lods
stc
mov
shll
lret
fstl
in
ljmp
insb
cmc
data16
bound
test
mov
or
mov
jl
add
subb
into
mov
scas
mov
fmul
out
sahf
paddd
out
int3
cli
repnz
adc
jns
pop
xchg
stos
dec
pop
stc
repz
cs
repz
in
mov
pop
cld
mov
call
outsl
mov
cld
lahf
aas
incl
push
scas
sbb
add
and
repz
add
inc
jbe
adc
iret
std
mov
cmp
xor
inc
and
jge
jg
cld
stc
addr16
add
stos
jmp
imul
lahf
aas
out
sub
sahf
test
cld
stc
repz
popf
fcompl
jo
cld
mov
push
roll
imul
cmp
data16
cmp
addr16
pushf
cmp
stc
jb
jmp
imul
cmp
out
lahf
aas
jl
or
pop
rorb
lea
push
stc
cld
stc
repz
fwait
inc
into
rorl
and
lock
mov
ret
jmp
cmp
inc
mov
cld
stc
xchg
push
inc
test
movsb
roll
lahf
aas
jg
pushf
mov
jbe
mov
mov
call
cli
cwtl
xchg
aaa
shrb
mov
mov
jb
ret
ficoml
ret
mov
inc
in
push
xchg
jnp
pop
adc
outsl
xor
jns
popf
jecxz
xchg
aas
and
lcall
push
pop
fistpl
mov
sub
iret
lahf
aas
jg
sub
mov
xchg
xchg
stc
repz
and
adc
push
xor
shll
add
jg
je
dec
mov
std
cmpsb
bnd
jg
cld
sahf
xor
mov
add
fnstenv
inc
pop
mov
cmp
mov
jle
std
inc
xchg
cmpsb
lret
dec
jge
cld
stc
hlt
and
nop
outsl
clc
sbb
mov
sub
outsl
dec
mov
jae
and
stc
repz
sub
fs
cmpsl
adc
xor
aas
jg
cld
sub
mov
ret
cwtl
jg
sub
mov
repz
lahf
rcrb
adc
push
stc
stc
cmp
jbe
xchg
insb
hlt
das
enter
mov
push
jmp
incb
loop
mov
out
mov
mov
scas
int3
and
sub
jmp
js
add
enter
scas
mov
or
pop
pop
decl
loopne
test
subl
decb
adc
scas
jnp
aad
mov
jle
inc
stc
repz
push
adc
mov
jmp
xor
add
loop
xchg
xorb
sbb
iret
lahf
adc
sbb
stos
fnsave
add
and
in
loope
jae
in
dec
ja
lahf
sbb
pop
or
xchg
push
popl
jnp
mov
push
pop
fstps
and
jle
std
jb
jmp
xchg
adc
mov
pop
jne
loope
lahf
push
jle
subl
cmp
scas
mov
mov
xlat
insl
iret
pop
cmpsb
xchg
notb
xchg
sub
je
sbb
sub
lods
sub
aas
jg
ds
loopne
sarl
mov
pop
or
lahf
sbb
in
iret
pop
test
mov
sahf
clc
movsl
mov
lret
out
xchg
xor
maxps
push
sbb
sbb
mov
push
sbb
add
cmp
xchg
push
pop
jns
rcrb
jno
push
cld
test
cmpsl
hlt
lret
test
sbb
mov
in
sbb
lcall
jbe
stc
cld
shrl
add
mov
lahf
stos
out
cli
fistpl
fdivl
dec
or
aaa
cli
cmp
xor
add
out
rep
jmp
out
nop
jno
add
sub
repz
fnstenv
loop
jg
cld
or
ljmp
sti
aaa
ja
in
iret
xchg
add
pushf
xchg
fwait
and
xchg
pop
icebp
shlb
ljmp
repz
into
pop
adc
mov
repz
sub
pop
rcrl
incb
push
fldenv
out
cltd
repnz
lahf
dec
lods
cmp
nop
addr16
stc
mov
adc
or
mov
pop
pop
mov
imul
sarb
fstl
data16
sbb
xchg
or
popa
and
jns
sub
inc
imul
fisubrl
out
mov
push
subb
fadd
cmpsl
scas
mov
push
push
cmp
hlt
jne
ret
mov
inc
je
repnz
mov
mul
xchg
shlb
or
scas
inc
ljmp
fs
das
scas
mov
gs
loop
repz
iret
aas
mov
inc
or
fs
dec
push
bound
bswap
out
clc
xchg
dec
fbstp
ds
ret
andb
rcl
das
aas
cmc
cmpb
lea
inc
adc
pop
sbb
lock
jp
aam
aaa
js
imul
mov
inc
sub
out
loopne
arpl
inc
aas
or
or
in
adc
mov
minps
int
in
mov
lret
pushf
xchg
pminsw
jg
jb
mov
repnz
mov
or
sbb
mov
jg
clc
daa
jno
scas
inc
cld
sahf
jns
dec
xlat
lret
out
repnz
xlat
dec
das
mov
ss
in
vprotw
repz
arpl
xchg
and
jmp
jb
in
mov
mov
xchg
mov
repnz
jb
icebp
push
pop
mov
sub
or
pop
cmpb
xchg
cltd
sub
or
mov
or
pop
ds
mov
mov
push
lods
lret
cld
stc
repz
mov
mov
iret
mov
hlt
insb
scas
cmc
sub
mov
rolb
jg
testl
dec
repnz
lahf
jmp
shll
fisubrl
out
pop
das
std
push
xchg
pop
xchg
mov
mov
cmpsb
aam
jmp
pcmpeqw
dec
sub
mov
cld
nop
jle
insl
xor
repnz
outsl
dec
or
jno
push
scas
inc
pusha
lret
mov
push
xor
add
xorb
repnz
lcall
fwait
ret
add
clc
jbe
gs
xchg
mov
mov
das
pop
popf
or
or
cld
stc
push
cli
sbb
pop
fmull
jae
cs
push
fisubrs
xor
scas
mov
sbb
xchg
push
pop
jns
ficoml
cmp
jbe
stc
loope
dec
test
mov
aam
adc
pusha
stc
cld
mov
mov
jge
push
pushf
scas
iret
sahf
xchg
aaa
call
mov
jne
jns
jge
cmp
aas
ret
loope
and
in
push
hlt
lahf
or
ret
pop
push
pop
jns
sub
xchg
out
insl
aam
mov
and
lret
xchg
das
in
cltd
push
sbb
cmp
pop
lret
xchg
adc
outsl
inc
ficompl
add
xchg
lahf
pop
mov
movntps
imul
push
lret
lahf
aas
jg
out
imulb
out
jge
mov
pop
in
inc
inc
jae
je
iret
sub
xchg
push
ficomps
repz
pop
pop
bound
jl
lds
stc
adc
sbb
mov
pop
xchg
ja
jns
mov
addb
outsb
pop
pop
jns
loop
fstl
push
push
mov
mov
jg
cld
inc
push
cmp
ljmp
pop
or
aas
aas
test
mov
sbb
imul
lret
sub
mov
outsl
cmc
mov
mov
lds
lret
xchg
push
pop
or
jno
mov
jns
jle
inc
add
movsb
out
jp
pop
jg
push
repnz
fstl
out
andl
push
les
sbb
xchg
push
pop
pop
nop
mov
mov
repnz
push
fdivrp
jb
push
inc
test
sub
mov
mov
fldenv
cmp
cld
pop
int
add
xchg
repnz
stos
mov
jno
dec
pop
stos
ljmp
adc
lods
adc
sbbl
stc
repz
dec
je
lds
xchg
aaa
mov
loope
or
repnz
push
lret
lea
mov
ror
mov
orb
pop
shr
jmp
pop
xchg
aas
xchg
mov
add
gs
repnz
and
inc
jge
lret
dec
loopne
add
or
sub
into
hlt
jbe
cs
scas
mov
xor
fs
sbb
pusha
lea
jg
test
sub
into
stc
dec
mov
daa
fs
dec
mov
repnz
lret
mov
push
fistpll
cmp
lods
das
scas
mov
sarb
int
push
jecxz
out
mov
push
ja
inc
xor
xchg
xchg
hlt
in
cli
arpl
arpl
jns
daa
outsl
repnz
sti
call
or
jle
fisttpl
push
mov
mov
or
out
rclb
sbb
into
out
lahf
aas
out
pop
xchg
mov
mov
test
jbe
xchg
and
sub
xchg
push
mov
out
cs
cld
stc
xor
sbb
sub
mov
adc
in
push
mov
mov
lahf
jnp
lods
test
add
adc
lret
dec
test
mov
arpl
test
out
xchg
sub
mov
jecxz
es
aad
mov
repnz
movsl
decb
out
aas
test
out
and
fcmovnbe
jmp
add
cld
stc
rep
inc
cwtl
and
or
pop
jg
aas
xchg
pop
sub
cmpsl
out
or
out
lahf
scas
repz
les
cld
stc
sbb
bound
loope
lret
adc
jg
es
adc
testl
loope
out
pop
mov
push
lahf
aas
aas
ret
outsb
cmp
aad
jns
sub
out
ljmp
pop
sub
es
sbb
lcall
mov
loopne
cld
mov
jle
bound
fwait
inc
outsl
add
out
das
add
jmp
das
push
fidivrs
mov
pop
or
fimull
popf
fwait
jns
lret
xchg
pop
mov
sub
lea
lahf
add
push
pop
imul
ljmp
pop
jns
mov
cld
dec
outsl
sub
mov
sbb
inc
arpl
stos
and
sub
mov
mov
jae
sbb
mov
dec
push
jne
sbb
cmpb
lret
inc
push
pop
je
mov
arpl
sub
divb
or
lahf
jg
fisubrs
sbb
loopne
xor
cmc
pop
sub
sahf
jl
xchg
or
cld
push
dec
pop
ljmp
scas
hlt
and
iret
lahf
pop
or
int
mov
mov
add
repnz
xchg
icebp
dec
sahf
and
leave
fldl
aas
push
add
cmp
adc
dec
jbe
pop
jns
repnz
or
jmp
mov
aad
das
movsb
das
mulb
lock
inc
xchg
das
aaa
mov
leave
pop
into
int3
repnz
repz
scas
add
iret
xchg
sub
sbb
push
push
pop
jle
test
iret
lahf
jg
ret
push
xchg
push
inc
lea
pushf
jo
stc
rep
push
and
and
stos
stc
and
popf
cmc
imul
nop
jle
cwtl
adc
les
mov
out
lahf
jmp
into
mov
enter
mov
xchg
fmulp
pop
xchg
les
adc
pop
push
aas
pop
iret
test
out
adc
lock
sahf
xor
jmp
pop
ss
sub
lods
mov
push
test
jecxz
mov
mov
mov
mov
mov
jno
mov
cmp
aaa
and
sub
test
cmc
mov
repnz
insb
imul
fsubp
lret
mov
scas
fsubs
mov
xchg
shlb
ljmp
push
jo
lcall
aas
jg
cld
pop
jb
sbb
popf
jne
cmp
data16
jb
mov
dec
lret
mov
call
sahf
fsubl
decl
xchg
lcall
mov
stc
repz
dec
daa
jmp
adc
cmpsb
jno
mov
mov
cs
iret
and
popa
out
lahf
pop
push
stc
or
mov
add
cld
stc
repz
sbbl
call
mov
shr
lret
repz
push
pop
mov
pop
movsb
lods
fimull
in
idivb
cmp
mov
jns
xchg
push
repnz
xor
rolb
pop
fisubs
outsb
in
push
pop
idivb
sub
mov
lods
push
xchg
push
pop
jns
and
test
out
lods
xlat
xor
and
push
jg
jne
iret
push
push
xchg
pop
test
push
pushf
add
xchg
push
cltd
inc
pop
insb
sbb
fisttps
pusha
jle
add
cmp
dec
mov
lahf
push
sarl
add
sti
in
mov
scas
out
aas
xlat
pop
mov
std
jnp
pop
jae
out
leave
and
repz
jle
subb
inc
mov
mov
ja
jp
pop
inc
mov
adc
adc
mov
xchg
iret
mov
ljmp
repnz
call
push
adc
jp
jl
pop
jns
xor
rclb
xchg
ja
dec
dec
pop
xchg
pop
pop
pushl
jns
fucom
repz
lret
push
cmp
test
lahf
pop
add
push
xchg
sbb
inc
je
stc
repz
xchg
xor
loopne
xchg
mov
dec
inc
jg,pt
cld
pusha
sub
loopne
icebp
add
mov
jg
test
lods
jg
cld
test
mov
repnz
pop
out
test
add
xchg
lahf
mov
scas
dec
and
into
lret
mov
cmpsb
int3
push
gs
scas
mov
inc
ljmp
test
cmpl
ja
jns
scas
inc
push
lret
daa
mov
push
mov
add
mov
jle
std
fwait
push
or
jle
sti
pop
cltd
dec
or
push
and
stos
cmovle
jns
lcall
aam
bnd
adc
xchg
ja
xchg
in
iret
insl
jae
movsb
sti
adc
pop
pop
ret
pop
and
cmc
lahf
imul
pop
jns
icebp
pop
outsb
inc
and
dec
push
sahf
cld
mov
lret
xchg
xor
jecxz
mov
push
and
jb
xchg
push
pop
leave
scas
pusha
cmpsb
and
pop
dec
incb
jb
in
jmp
jge
sahf
jbe
addr16
mov
mov
mov
loop
pop
jns
fldl
and
add
xchg
push
mov
stos
mov
enter
jns
fnsave
xor
pop
cld
push
xor
andb
jb
imul
clc
in
sub
inc
ror
loopnew
fcoml
mov
cld
shrl
xchg
popa
fidivs
imull
pop
add
loope
pop
in
jae
fmul
sub
jle
xchg
dec
repz
shll
aad
enter
clc
div
lcall
and
out
cwtl
pop
jns
xchg
test
jb
cmp
lods
ret
jp
push
or
pop
inc
pop
jns
xchg
and
or
mov
or
das
cltd
cwtl
dec
pop
xchg
fwait
mov
clc
repnz
lret
bound
lcall
sbb
push
jle
cld
ret
sub
mov
es
stos
in
ja
jp
xor
adc
sub
adcb
jb
fnstsw
jle
push
scas
lods
mov
jae
sbb
jge
in
xor
lods
mov
push
mov
dec
inc
jno
out
and
sbb
stc
aaa
cmc
in
sub
mov
inc
std
repnz
pop
sbb
das
aas
jg
dec
subb
test
cmpsb
xchg
ljmp
scas
mov
and
xor
daa
xchg
sarb
xor
lret
sub
push
mov
iret
lahf
xchg
int
and
stc
and
or
and
in
shlb
fwait
push
test
lahf
aas
out
aas
or
mov
or
repnz
aas
xchg
bound
ret
add
jns
xchg
push
xchg
adc
lods
cmpsl
rcl
push
jbe
pop
in
push
pop
mov
daa
cs
xchg
push
pop
jns
jbe
xor
jmp
mov
cmp
jl
in
jno
push
les
inc
dec
push
pop
out
pop
jle
lock
xchg
int3
fcoms
mov
xchg
iret
scas
test
sahf
xlat
pop
push
jb
xor
mov
xor
jns
imul
jg,pt
shll
or
in
outsl
jge
enter
mov
add
add
and
sti
repnz
lea
add
call
adc
jp
jne
dec
push
out
aas
or
test
and
mov
cmpsb
pop
push
cmpsl
push
pop
jns
xchg
push
lcall
pusha
xchg
aaa
bound
xchg
push
push
in
aaa
neg
cltd
sub
call
mov
leave
repz
outsl
pop
jo
mov
xor
stc
mov
push
jmp
mov
dec
sbb
out
lahf
aas
mov
dec
popa
ljmp
stos
cli
jb
repnz
jb
cli
mov
mov
test
dec
jmp
xchg
push
mov
cld
stc
jg
in
sahf
lock
mov
gs
test
pusha
lret
lahf
aas
mulb
mov
push
lret
in
iret
dec
jg
out
leave
dec
dec
sub
jl
push
shl
jne
mov
mov
repnz
xchg
cmp
ret
jnp
fistps
pusha
or
lret
jle
xchg
pop
mov
loope
push
mov
addr16
sti
in
in
fnstsw
sbb
repnz
adc
iret
mov
call
cmp
lret
aam
sub
fidivrs
inc
jbe
das
scas
mov
adc
test
repnz
das
push
repnz
cmpsl
scas
call
cld
stc
ljmp
pushf
hlt
cmp
dec
ss
pop
jg,pt
ds
jecxz
inc
mov
in
mov
pusha
loopne
fwait
out
or
cmc
xchg
scas
mov
xchg
aas
test
cmp
sbb
fs
cmpsb
jnp
push
sub
sub
xchg
mull
mov
icebp
inc
int3
fwait
les
mov
cmp
push
jno
jns
push
test
xchg
cmp
or
sti
or
in
xchg
pop
push
jl
push
lret
mov
lret
mov
push
test
scas
mov
add
decb
xor
jns
xchg
mov
shrl
lcall
test
xlat
dec
data16
popf
pop
pop
enter
push
ja
ss
shll
jl
adc
push
arpl
sahf
sub
aas
jg
push
cld
js
cwtl
adcl
iret
lahf
dec
aaa
pop
or
and
jp
cld
stc
repz
xor
xlat
aam
sbb
pop
pusha
popf
cli
lahf
aas
jg
insb
push
rolb
sub
xor
hlt
stc
repz
je
in
fwait
and
or
sar
gs
dec
cld
jae
pop
fnstsw
es
jle
and
das
mov
mov
push
xchg
push
mov
subl
jno
jecxz
insb
and
loop
gs
jo
lods
mov
jle
std
xor
insb
mov
fsubr
dec
das
ja
jle
mul
xor
xchg
loope
out
lret
lahf
les
test
aam
imull
rclb
leave
add
and
sbb
ds
cld
stc
repz
pop
idivb
xchg
mov
out
jle
pushaw
push
jg
dec
jp
ja
pop
adc
scas
mov
xchg
out
cmpsl
js
aam
movsb
mov
lea
push
push
cmovne
jns
mov
fmul
lret
or
mov
jnp
outsl
push
leave
orl
push
jge
inc
inc
mov
das
push
fidivrs
call
out
jmp
and
mov
xchg
xchg
scas
lea
jns
xor
es
sbb
push
add
push
push
in
pop
cld
pop
jns
xchg
fisttps
icebp
mov
dec
addr16
xchg
daa
in
das
push
out
mov
pop
pop
sub
fcoms
je
and
adc
call
ja
jmp
fwait
and
movb
insl
lcall
xor
repz
sahf
icebp
ds
push
andb
stc
adc
inc
xchg
ja
push
in
test
pusha
jle
xor
mov
les
fdivl
cs
lock
iret
and
in
scas
mov
stos
sub
jge
sti
in
into
dec
rclb
pop
dec
jnp
add
sub
sub
mov
xor
aaa
insl
in
mov
mulps
sub
dec
hlt
negl
xchg
scas
aad
add
jl
ja
in
push
mov
stc
aas
and
push
pop
jns
cwtl
rorb
and
and
cmp
pop
jns
xchg
popa
aas
fwait
dec
icebp
pop
mov
pop
mov
dec
xor
xchg
push
add
cmp
mov
pop
dec
inc
push
sbb
pop
mov
mov
jns
push
pop
jns
addr16
outsl
cmp
outsb
adc
icebp
out
lret
xchg
mov
mov
iret
xchg
ljmp
outsb
out
add
pop
pop
push
pop
popa
mov
daa
stc
repz
pop
mov
fistps
cmpsb
jecxz
loope
cli
aas
scas
cld
cld
shll
ret
aaa
and
dec
aas
test
lahf
mov
pop
mov
xor
fnstsw
stc
xchg
mov
mov
cwtl
mov
lock
jge
aam
cmp
lds
sub
lea
mov
jmp
add
aas
jg
or
fstl
and
cmpsl
es
stc
repz
xor
sub
rolb
mov
and
dec
popf
syscall
pop
mov
mov
mov
addb
jle
das
in
sub
fimull
dec
mov
repnz
xor
in
and
xchg
jg
stc
add
push
push
out
into
inc
jle
jp
int
xchg
push
fdivrp
adc
pop
imul
les
jns
outsb
ds
mov
push
add
in
pop
jns
xchg
push
test
cwtl
es
dec
pop
and
mov
and
pop
mov
xchg
xor
sub
ja
das
cmp
lret
mov
dec
aad
jo
les
bnd
jbe
or
lret
mov
fildll
seta
ljmp
dec
loopne
das
loopne
pop
push
jle
iret
inc
jnp
stc
leave
clc
in
fcompl
sti
aaa
xor
icebp
cmpsl
subb
mov
scas
mov
nop
adc
insb
or
jno
push
clc
in
pushf
or
fcmovnu
cs
les
enter
inc
jb
jp
fistl
push
mov
dec
and
cli
cmp
mov
scas
test
insl
dec
xchg
shl
cwtl
mov
lahf
dec
pop
and
sahf
aas
test
leave
push
pop
push
in
aad
aas
sbbb
push
pop
jns
add
fisubl
cld
jne
fcomp
jge
in
mov
sbb
into
push
xchg
push
das
sbbb
cmpl
cld
add
add
xchg
test
and
xor
push
xchg
out
lahf
fsubs
mov
or
repnz
fmul
test
and
add
lds
and
in
mov
neg
outsb
sbb
mov
pop
jns
inc
lahf
inc
fistpl
inc
cld
or
add
jns
xchg
ja
xchg
sub
cs
jl
xor
xchg
push
pop
clc
pusha
cltd
dec
ret
hlt
arpl
xor
mov
xchg
push
pop
jns
pop
fldenv
fsubrp
or
sbb
ret
decb
sub
xchg
jecxz
scas
dec
dec
ljmp
iret
sub
mov
push
sub
dec
xchg
scas
dec
test
mov
jbe
les
lahf
cmpsl
push
push
cld
stos
push
outsb
jmp
mov
and
adc
mov
shrl
push
pusha
test
out
cs
sbb
or
enter
loope
pop
cld
out
into
mov
lret
loop
mov
fwait
pop
int
out
lahf
aas
loopne
fstps
xchg
mov
adc
mov
repz
push
jmp
int
push
dec
in
push
fisubrs
es
loop
subl
lds
sub
stos
or
test
outsl
les
or
xor
in
or
out
mov
popf
loopne
or
dec
addr16
sbb
fistps
in
push
pop
mov
pop
pop
sub
iret
add
jns
mov
repnz
dec
es
push
fsubrl
xchg
mov
jmp
pop
push
mov
cmpl
sub
arpl
shll
mov
out
lahf
fdivl
mov
dec
cli
inc
pop
dec
cmp
fidivrs
scas
ss
imul
clc
incl
int3
cs
das
push
fistps
mov
shrb
add
jns
orl
stc
stc
repz
pop
xorb
push
jg
push
xchg
sbb
test
mov
aad
sbb
out
fsubl
fstps
mov
cmp
mov
imulb
jg
add
aas
jg
push
clc
mov
rclb
mov
mov
fstpl
jns
jmp
lahf
je
or
outsb
adc
mov
pop
out
jle
jge
nop
pop
cmp
inc
les
das
aas
mov
mov
ret
cs
fsubrl
jle
sahf
imul
jne
push
or
cld
pop
xor
rcrl
jge
lahf
mov
jg,pt
fbld
sahf
aad
jle
and
repnz
jge
jge
pop
int
aam
push
pop
in
jp
das
scas
mov
mov
push
lds
pop
flds
inc
aaa
xchg
ss
loop
pop
inc
dec
fiaddl
jle
pop
scas
popa
mov
push
mov
sbb
xor
sub
pop
pop
and
sti
fcoms
mov
push
inc
sub
mov
out
xchg
loope
pop
js
lods
xor
aas
jg
add
lahf
sub
dec
add
out
lahf
insl
rcrb
cmp
pop
mov
jbe
dec
add
out
rclb
loopne
mov
push
and
jge
repz
push
jno
add
add
dec
add
mov
xchg
dec
push
fildll
idiv
mov
jl
leave
outsl
or
mov
or
cli
cmp
jle
xchg
das
cld
stc
repz
cmp
mov
xor
jns
cmp
jg
aas
faddl
enter
aam
xor
out
or
test
imul
jge
jge
je
jae
cmp
inc
das
cltd
dec
in
push
ficomps
ret
or
xchg
movsb
or
cld
sbb
sbb
cmp
mov
pop
clc
add
add
das
lahf
pop
pop
subb
add
aas
pop
pushf
push
insl
and
aam
repnz
and
push
js
or
repz
push
into
into
stc
inc
or
scas
mov
outsl
adc
push
cmp
scas
mov
pop
jge
stos
jle
aam
push
mov
das
aam
dec
push
lea
stc
repz
xlat
jg
orb
cwtl
or
pushf
jecxz
pop
out
pop
decb
or
inc
jge
jg
rclb
pop
sbb
dec
jge
repnz
sahf
xchg
mov
xchg
push
jecxz,pt
shlb
sbb
test
arpl
cmp
cmp
in
push
pop
sbb
inc
add
xchg
lret
xchg
push
pop
jns
inc
fidivrs
pop
jo
adc
ret
bound
nop
push
cld
mov
lret
xchg
sbb
xor
add
inc
call
rcr
jnp
jo
inc
int
jg
cld
out
sub
sbb
and
inc
xor
or
jle
lcall
sahf
sbb
stc
repz
aam
or
mov
cli
xor
jle
insl
jle
jecxz
lret
add
pcmpgtb
aas
repnz
lret
sub
add
xor
call
mov
mov
nop
int3
push
mov
lret
lock
repz
loop
sub
mov
mov
out
fsubrs
mov
lret
ret
les
xlat
mov
fwait
jns
stos
mov
aas
cmp
adc
lret
cwtl
xor
push
insb
xor
test
scas
mov
test
aaa
out
inc
movsl
lahf
aas
jg
out
aam
xchg
push
jno
ds
mov
push
pop
push
stc
pop
cmp
lret
cmp
dec
pop
loope
jbe
sub
ret
adc
sti
das
scas
mov
add
mov
ljmp
pop
or
add
push
arpl
sub
mov
add
in
jp
es
or
add
repnz
mov
inc
jg
dec
mov
sbb
cbtw
addb
cmpsl
add
popl
stc
push
fs
popf
jne
xchg
fsin
cld
stc
repz
dec
test
jne
jno
scas
mov
and
mov
repnz
cmp
xchg
add
cmc
mov
mov
or
stos
es
das
out
mov
aas
sahf
stos
iret
insb
data16
adc
xor
lods
mov
mov
pop
fwait
movsl
fistpll
cmpsb
sub
xchg
xchg
test
aas
jnp
sbb
mov
push
cli
add
stos
outsl
push
pushf
adc
mov
add
inc
addr16
aaa
das
aas
jg
fcmove
into
in
sbb
stc
cli
bound
xchg
mov
sahf
daa
adc
xchg
ja
lahf
and
test
jge
sub
fwait
iret
sub
rcll
iret
and
pop
mov
clc
repnz
insb
pop
rorb
xchg
add
jg
cld
jle
movsb
in
xchg
mov
mov
mov
jnp
stc
repz
das
cld
aam
inc
push
repz
push
jo
mov
and
cmp
push
mov
cmpsb
xor
iret
das
icebp
mov
sub
scas
pop
dec
adc
in
mov
fwait
pop
aas
sub
mov
gs
pop
scas
fwait
mov
adc
stos
stc
sbb
in
push
pop
push
inc
loop
xor
mov
jb
pushf
cmc
aas
shl
stc
repz
mov
mov
pop
insl
std
cmpsb
push
dec
jns
mov
divl
shld
adc
lahf
aas
aas
mov
jg
jp
jl
stc
repz
xor
jae
arpl
lret
jg
cld
int3
jl
pop
stc
xchg
sbb
mov
fcomps
mov
call
fmulp
push
aam
movsl
pop
out
push
xor
out
les
mov
into
cld
stc
repz
inc
mov
push
cmp
ret
aas
jg
push
mov
data16
stc
repz
mov
mov
js
xchg
pop
jle
push
sbb
sub
adc
repnz
mov
dec
adc
lds
or
das
mov
push
jns
fisttpll
div
ss
sti
cltd
and
shrb
cltd
je
sahf
or
sti
repnz
jno
add
loop
outsl
sub
mov
ljmp
mov
aaa
mov
inc
leave
scas
clc
fs
mov
loopne
sub
aas
fcomps
dec
xor
cwtl
pop
cld
fwait
cld
or
lahf
dec
ja
mov
pop
addb
or
jnp
mov
pop
scas
xor
fdivr
sub
sahf
dec
stos
mov
mov
pop
pop
lds
xor
xchg
test
in
scas
dec
jne
iret
lahf
aas
mov
pop
or
int3
dec
loop
insl
lock
xchg
out
mov
into
outsl
insl
shll
cld
stc
movsl
scas
jbe
mov
filds
nop
negb
std
fs
mov
das
cs
mov
in
mov
mov
fwait
jne
fsubrs
arpl
fwait
lahf
dec
or
out
mov
push
fcmove
jp
or
scas
xor
sub
iret
iret
lahf
pop
jmp
sub
xor
repz
cld
xchg
mov
xchg
or
jecxz
cmc
push
pop
out
jle
mov
dec
inc
inc
inc
dec
in
jle
fnsave
lea
movsl
cmpsb
cltd
out
push
dec
clc
in
aad
dec
add
pop
xor
iret
lahf
aas
mov
fcomps
sti
xchg
dec
adc
or
fsubr
and
std
stos
jmp
ret
fisttps
adc
gs
cld
stc
repz
gs
pop
lods
sahf
lret
and
push
idivb
incb
xor
push
out
mov
lds
iret
aam
fwait
pop
mov
std
adc
cld
mov
js
scas
jae
lahf
aas
mov
lcall
inc
mov
clc
in
out
xchg
dec
nop
pop
rclb
std
mov
xchg
idivl
cmc
xchg
jne
jb
adc
push
pop
add
dec
je
aad
out
jbe
pop
pop
jns
iret
push
scas
popf
sti
outsl
or
out
outsb
ds
addl
lahf
push
pop
jns
jnp
jmp
inc
data16
push
adc
pop
jns
xchg
mov
push
mov
jo
lea
jns
xchg
push
adc
cmp
lds
sbb
jg
and
inc
push
pop
sbb
lea
orl
adc
mov
das
sbbb
mov
lret
or
int3
inc
pop
mul
cmpps
cmpsb
aad
scas
cltd
xchg
stc
mov
addps
aaa
push
cltd
out
jg
cld
dec
jg
xchg
fisttpl
aam
or
and
aam
lahf
lods
xchg
movsl
adc
jns
repz
rcrb
sbb
rcrl
cld
stc
sti
fldt
ja
or
mov
lret
lahf
aas
dec
sti
rclb
mov
xor
test
pop
adc
jge
push
scas
lahf
cmc
test
sbb
lds
mov
pop
inc
pop
jns
xchg
adc
sbb
jg
adc
mov
xchg
push
xchg
push
loope
xchg
xchg
push
and
iret
aas
inc
cld
sbb
ja
fisubs
inc
add
out
fstps
jge
add
inc
mov
stc
stc
repz
mov
arpl
pop
dec
cmp
outsl
ficoms
es
icebp
lret
outsl
mov
sahf
popa
outsb
jl
sub
in
and
lret
nop
jbe
je
cld
cld
stc
repz
sbb
sub
add
mov
ror
ficoms
insl
push
cmc
adc
jo
aas
jg
mov
mov
adc
repnz
xchg
iret
jmp
cmpsl
sbb
or
fisttps
lret
mov
pop
pop
xchg
push
es
mov
mov
and
scas
addr16
ja
fdivrp
std
sbb
cmpsl
push
aas
lock
jb
in
push
scas
subl
xchg
mov
icebp
ds
push
pop
je
fists
add
int3
push
xchg
push
pop
jns
add
stos
repnz
cmpsb
hlt
cmpsl
jnp
pop
aas
mov
stc
sti
mov
dec
push
out
lahf
aas
jl
movsb
xlat
in
cs
push
icebp
movsl
push
cmp
repz
in
pop
sub
lcall
repz
test
les
sbb
add
cmp
out
push
pop
pop
and
repz
pop
xchg
cld
loop
repnz
repz
cmp
push
and
ret
jmp
cs
mov
imul
pop
pop
pop
ss
sub
sub
mov
repz
pmaxub
xor
cltd
in
and
cld
stc
mov
push
dec
inc
xchg
shl
push
dec
dec
mov
jb
fisttpll
out
mov
out
aad
repnz
lahf
jg
fstpl
sub
mov
ss
iret
gs
or
pop
imul
das
aas
aas
adc
mov
inc
or
mov
faddl
test
adc
call
in
aas
xchg
mov
sbb
iret
lahf
aas
imul
push
adc
pop
repz
and
add
sbb
hlt
or
pop
jle
cld
nop
mov
xchg
imul
pop
pop
cmp
cmp
orl
daa
idivl
jg
dec
mov
cmp
aad
addr16
repz
lret
imul
and
pop
jle
jg
jg
cld
data16
lods
jns
mov
pop
pop
or
mov
fisttpll
test
pusha
cld
das
jle
jo
jge
jl
cmp
mov
outsl
cli
enter
dec
into
adc
pop
xor
fistps
sbb
imul
jno
repz
outsb
es
int3
jp
outsl
xor
dec
mov
mov
out
fists
insl
push
xchg
xorps
in
cmpl
jg
dec
adc
add
sti
jge
jg
cld
stc
loop
cs
mov
rorl
lea
aas
pushf
sub
cmp
cs
iret
jne
and
pop
push
push
dec
sbb
icebp
out
mov
cld
mov
mov
pop
sbbl
sub
mov
ffreep
or
xchg
jle
jle
cld
inc
ds
xchg
int3
loopne
and
pop
lahf
aas
jg
pop
stos
mov
aaa
std
test
repz
inc
fucom
mov
mov
and
mov
add
lods
sti
cmp
test
mov
jae
sub
xchg
cmp
mov
insl
outsl
mov
xchg
pop
decb
maxps
jle
and
jecxz
sub
jg
mov
loope
mov
ds
stc
pop
lock
xchg
xchg
aas
jg
cld
and
hlt
sbb
xchg
stc
inc
push
lock
out
lahf
in
lods
xor
fimull
lcall
lds
iret
cltd
mov
movsb
and
fsub
xchg
ja
out
lock
cld
loop
sub
push
mov
mov
mov
sub
mov
jle
push
jmp
mov
lret
push
add
cwtl
test
jecxz
aas
aas
cmpsb
pop
scas
ss
or
stc
repz
inc
adc
jmp
inc
roll
or
sub
arpl
push
sbb
repnz
or
fsts
mov
fsubr
adc
pop
jle
xchg
pushf
jnp
shrl
inc
cltd
in
push
sarb
xchg
mov
xchg
push
pop
jns
xchg
icebp
cmpsb
loope
bound
add
sub
jns
imul
push
lcall
jns
xchg
pushf
std
push
out
out
xor
mov
stc
icebp
in
das
push
fistps
adc
mov
out
jl
enter
popf
push
jp
call
fcomip
xchg
dec
pop
pop
add
mov
gs
out
arpl
push
jg
push
int
repnz
xchg
push
fmull
add
insl
and
jge
inc
int3
ret
shl
inc
iret
jno
or
sarl
jg
add
fs
adc
in
sub
int3
stos
mov
adc
icebp
lods
out
movq
cmp
out
sahf
xor
clc
mov
pop
aas
jg
cld
fiaddl
mov
sbb
jno
cmp
sub
lret
aam
mov
int3
jae
push
clc
lret
sub
fisttpll
shr
lret
imull
dec
imul
mov
sbb
icebp
xchg
out
mov
stc
repz
das
jecxz
pushl
mov
dec
push
dec
iret
scas
sub
js
xchg
mov
stc
stc
repz
mov
pop
out
leave
add
cmp
push
decl
jbe
fcomps
in
test
popf
add
aas
adc
push
cli
testl
in
lret
jg
and
lahf
les
stc
repz
jg
mov
mov
dec
xchg
loope
push
mov
pop
and
addr16
cmpsl
push
out
repnz
and
push
lret
adc
movsb
sub
mov
sbb
imul
imul
lret
push
pushf
stos
std
in
sbb
add
sub
in
sub
popf
or
bswap
sub
jb
dec
mov
jge
scas
mov
test
and
xorb
mov
push
jecxz
cmp
pop
sub
cmp
out
xchg
outsl
cwtl
int3
out
outsl
popl
xchg
cmpsl
prefetcht1
imul
mov
imul
xor
sub
add
pop
jns
sbb
sub
and
out
mov
mov
dec
iret
test
or
jmp
cld
stc
repz
shll
sahf
rcrb
jmp
in
or
mov
cld
stc
repz
lcall
xor
adc
lahf
aas
jg
sbb
mov
or
pop
fmuls
add
out
mov
cli
in
mov
add
cmpsl
add
pop
scas
mov
mov
jne
add
in
dec
jns
repnz
movl
sub
jle
bnd
lahf
adc
frstor
pop
push
scas
mov
xchg
mov
jae
pop
mov
mov
ret
pusha
in
mov
sub
cs
sbb
cli
ror
inc
adc
out
lahf
test
sti
jbe
mov
leave
std
mov
sbb
add
cli
push
dec
push
scas
cmp
pop
mov
test
mov
push
lods
out
outsl
mov
pushf
dec
fcompl
xor
iret
push
rcll
push
xchg
jp
repnz
orl
adc
loope
lret
mov
mov
outsb
movsb
lret
repnz
enter
xchg
scas
jecxz
rorl
lret
and
jnp
lods
aam
jae
jne
and
es
mov
lret
fbstp
lret
sub
int3
add
gs
and
xchg
lahf
pop
sahf
jno
sub
dec
divl
push
lret
fstpl
xorb
rorb
icebp
pop
sbb
fwait
pop
lahf
jo
repz
push
mov
pop
mov
push
clc
cmc
out
jne
xchg
pop
push
mov
sbb
xor
aas
out
inc
repz
jecxz
jmp
fiadds
jno
and
scas
mov
mov
filds
and
mov
push
pop
cltd
mov
push
jnp
repnz
mov
stos
push
stc
push
in
xchg
loop
sub
pop
movsb
data16
test
cmp
repz
out
cmp
xor
inc
fs
leave
repz
jg
cld
cmc
insb
mov
add
frstor
dec
xchg
and
push
js
popf
scas
repnz
jo
stc
dec
xchg
mov
loopne
scas
fbld
imul
jg
sbb
das
loop
mov
aad
mov
lcall
insl
cmp
lock
pop
ret
sbb
dec
sub
icebp
in
adcl
dec
lahf
jg
pop
decl
out
push
xchg
in
das
dec
sbb
cwtl
outsl
shl
sub
add
pop
popa
jg
movsb
xchg
icebp
mov
das
aas
call
push
fsubrp
jl
jno
mov
lret
lahf
test
ret
insb
in
pop
ds
dec
out
andb
fsubl
adc
in
push
mov
es
lock
ljmp
lret
add
sti
outsl
daa
les
or
fmull
push
mov
xchg
cld
pop
sub
mov
jno
lahf
aas
jle
jg
imul
scas
cmp
mov
add
adc
insb
int3
mov
push
daa
and
js
cmpb
in
mov
jg
cld
cs
mov
push
mov
and
or
or
inc
mov
ja,pn
arpl
pop
add
fstpl
push
or
jbe
ficoml
jle
fmull
lahf
int
int
fldcw
sti
in
fimuls
jg
in
xchg
mov
repnz
negl
sub
mov
scas
mov
pop
cmp
jl
test
bnd
mov
sub
cld
adc
out
test
or
iret
lahf
aas
jg
pop
inc
js
mov
inc
xor
aaa
mov
adc
adc
fcomps
adc
push
pop
mov
cltd
dec
outsl
pop
lcall
jle
mov
int3
out
and
mov
pop
jg
adc
mov
fsubrl
mov
rcll
test
pop
repnz
add
xor
or
sbb
add
ja
cli
push
scas
sub
mov
in
sbb
div
repnz
pop
pop
ja
in
jle
rcll
jge
xor
push
sub
cmp
lret
iret
das
test
add
repnz
jnp
sub
es
pop
mov
pop
jnp
repnz
or
aaa
pop
pop
aad
arpl
cmpl
repnz
addr16
leave
out
scas
jmp
idivb
sti
mov
pop
lret
repnz
in
pop
stos
cmc
xchg
adcl
stos
in
xchg
xchg
sub
adc
and
xchg
aas
inc
pop
sbb
outsb
lock
mov
adc
aas
xchg
iret
lods
push
and
dec
sbb
jg
cld
stc
jge
and
mov
sub
inc
sahf
aas
mov
mov
pop
jge
in
into
cmp
xlat
loopne
push
fisubrs
aaa
call
rorb
lret
xchg
fnsave
xor
pop
jg
cld
stc
lahf
push
sti
xor
ds
lret
addr16
xchg
lea
xchg
cs
cld
stc
repz
das
inc
or
icebp
aam
call
ja
jle
jae
cltd
idivl
scas
inc
mov
int
imull
add
insl
pop
add
call
xchg
out
scas
mov
jp
adc
rorb
repnz
lcall
stos
push
add
sbbb
pop
sbb
dec
push
in
iret
lahf
aaa
and
dec
add
cmc
pop
lret
out
mov
scas
jle
adc
fsubp
int3
push
pop
iret
lahf
aas
jg
dec
dec
in
cli
or
cmp
sarl
repz
dec
jge
inc
lret
shrl
stos
les
popf
aas
sub
jle
or
outsl
stc
pop
adc
jb
out
lcall
mov
add
lret
mov
testb
gs
imul
daa
xor
cmp
jmp
stc
add
mov
aaa
jmp
push
sahf
fistpll
cld
dec
int3
adc
inc
adc
lret
xor
push
repnz
lahf
pop
rcll
and
and
cli
jb
fdivl
ss
jg
inc
std
das
and
mov
push
mov
dec
lret
xchg
lahf
aas
pop
adc
loop
in
inc
sub
jns
in
ljmpw
xchg
inc
push
jmp
fidivrl
jb
xchg
push
aas
mov
xchg
shrb
inc
div
add
and
divl
xchg
push
pop
jns
test
js
push
and
or
jl
push
pop
jns
fnsave
add
ficoms
adc
inc
rclb
fistps
cmp
ret
sbb
jbe
add
shll
push
into
aas
jmp
xchg
push
fdivrp
lret
loopne
xchg
aas
outsb
call
scas
lods
cli
mov
xor
dec
mov
out
jno
mov
std
sti
repnz
pushw
fisubrl
cmpsb
sbb
push
fimuls
pop
jbe
mov
pop
lods
movsb
xchg
push
pop
jns
push
dec
movaps
jecxz
mov
xor
jns
add
jae
cmpsb
imul
jns
xchg
scas
pop
in
test
lods
jmp
imul
lret
push
gs
sbb
cs
stos
sbbb
in
or
fwait
test
clc
xor
stc
repz
sbb
jo
ja
pop
mov
cmp
xchg
pusha
ret
push
jae
movd
repz
lahf
sbb
inc
push
ss
push
divb
xlat
cli
repnz
mov
mov
inc
loopne
out
repnz
pop
lahf
pop
mov
outsl
rep
adc
mov
dec
out
or
popf
out
jg
cld
stc
mov
movsl
xlat
push
nop
push
sub
shll
lahf
aas
outsb
adc
pop
jecxz
xor
lret
mov
idivb
ss
loop
sbb
adc
sub
mov
je
xor
scas
mov
insl
or
ret
mov
jb
and
xor
repnz
xchg
std
mov
in
imul
jle
das
dec
add
lahf
adc
cld
clc
repnz
push
xor
int3
xchg
test
cld
inc
ficomps
pop
frstor
je
lcall
push
inc
cltd
add
dec
push
push
pop
jns
enter
mov
sti
fldenv
xchg
imul
pusha
rcrb
pusha
int3
xchg
cmp
test
jg
inc
ds
outsb
cmpsl
dec
outsl
pop
lods
fucomip
aad
lahf
cs
std
adc
dec
lcall
icebp
scas
cltd
fdivs
dec
inc
cld
lods
sub
add
movsl
xchg
mov
lret
popa
mov
jb
xchg
ja
aaa
cmp
gs
ljmp
fdivrp
je
in
movsb
push
incl
scas
mov
adc
fldl
xchg
scas
repz
inc
cld
out
fwait
imul
jg
cld
stc
cmp
jmp
inc
call
fsubrs
iret
lahf
aas
dec
inc
scas
mov
mov
push
andb
pop
jmp
pop
mov
fxch
mov
fsubp
inc
jmp
pushf
dec
daa
and
lahf
cli
xor
add
stc
xor
mov
xor
orb
movsl
jb
repz
mov
cmp
mov
jl
cld
stc
aad
add
stc
dec
sub
jo
iret
dec
leave
lahf
jg
mov
add
mul
out
enter
cmpsb
pmaddwd
mov
pop
fistpll
or
sub
xchg
xchg
scas
xchg
gs
pop
ret
in
ja
stos
lea
ret
in
inc
jmp
add
adc
fisubrs
ljmp
pop
push
icebp
mov
pop
push
xor
mov
bound
cmc
in
lahf
aas
ds
repz
xor
cmc
lret
outsl
jmp
mov
xor
add
push
jmp
sti
ljmp
jg
adc
in
bound
pop
jg,pt
mov
cs
mov
xchg
mov
insb
aas
imul
dec
push
mov
jns
cmp
mov
cmpsl
bound
pop
fists
push
sub
jle
outsl
jns
push
les
lret
test
push
aad
mov
aaa
xchg
fists
mov
cld
jne
fwait
fs
repz
scas
enter
popf
and
cld
aaa
fwait
push
pop
stos
ja
js
negb
daa
xchg
int
jno
mov
das
ja
dec
pop
cmp
pop
mov
icebp
loop
sahf
inc
push
fbld
ret
ljmp
mov
iret
lahf
aas
mov
jbe
lret
mov
stc
repz
into
add
push
shrl
cld
cmpl
mov
das
out
mov
pushf
lea
sbb
pop
jns
aad
mov
dec
push
sbb
xlat
popa
aaa
pop
jns
xchg
arpl
pop
sbb
ret
sbb
in
das
push
rolb
mov
sub
test
fsubrp
mov
in
lods
lahf
jg
xchg
sub
mov
cmp
sbb
data16
jl
jb
ds
call
test
into
inc
sub
lret
icebp
out
mov
adc
adc
or
inc
sub
xor
push
bound
test
lret
gs
mov
jg
movsl
push
or
pop
mov
movsl
in
iret
lahf
aas
clc
stos
adc
ljmp
jne
repz
jae
sub
add
jl
lcall
push
les
fiadds
jns
fsubr
inc
jmp
xor
push
and
inc
scas
les
imul
pop
pop
jns
aam
out
or
xorb
lahf
pop
add
add
stc
imul
sub
mov
fsubr
jae
mov
in
subl
repnz
sti
inc
ror
pop
test
ja
idivb
lea
or
jg
mov
stos
repnz
cltd
fidivs
in
fidivrl
mov
lods
xchg
sub
jle
xchg
add
daa
xchg
push
data16
adc
repnz
icebp
inc
std
mov
mov
les
outsb
das
shl
ss
lahf
aas
jg
ljmp
pop
lret
call
gs
mov
cmp
sub
adc
out
dec
dec
mov
fldl
sub
jge
and
mov
ja
mov
je
or
fsts
paddsw
sub
subl
sarb
jno
lahf
aas
jg
mov
mov
or
sar
in
out
xchg
ret
outsl
mov
mov
add
sub
mov
adc
aad
aas
je
into
nop
jne
scas
mov
xor
jecxz
ljmp
xchg
sub
add
cld
stc
repz
mov
shl
jae
dec
pop
jle
dec
pop
inc
cmc
call
in
das
lahf
lods
ficoms
out
xchg
and
fdivp
jns
push
sahf
sub
iret
xlat
dec
notb
cmpsl
hlt
mov
lock
lret
aaa
aad
std
cld
out
cld
bound
push
push
jge
stc
repz
jns
or
pop
call
ret
push
ficomps
inc
fadd
shlb
stos
mov
aad
ja
pop
jns
test
mov
inc
mov
pop
jns
xchg
dec
lods
leave
xlat
fsubrl
mov
pop
lea
pop
lock
push
push
push
popf
mov
lret
add
das
push
int3
pop
and
add
or
jge
stc
jnp
adc
ret
or
call
xchg
push
or
lahf
gs
jns
repz
jle
xchg
imul
xor
inc
mov
or
in
sub
pop
dec
xchg
push
pop
jns
ss
fsubs
dec
das
je
dec
dec
push
lea
jnp
sbb
fistps
pop
jns
xchg
sahf
cld
cltd
xor
inc
add
test
xchg
push
cs
test
cmp
cmp
es
out
pop
mov
scas
mov
xor
pop
sub
cwtl
aad
test
cmpl
lea
lret
jo
in
ja
mov
shll
adcl
cld
outsl
jle
scas
mov
dec
mov
iret
cmpsl
ror
mov
and
icebp
pop
inc
push
in
scas
mov
push
jbe
aaa
je
bound
loope
sbb
lret
repz
es
iret
sbb
nop
test
daa
add
and
pop
sti
dec
insl
cld
add
cld
stc
subl
cmc
int3
sbb
popa
stos
shll
mov
aaa
test
stc
stc
repz
in
in
iret
mov
cli
cs
lret
in
aaa
pusha
outsl
cmp
call
sub
fbstp
push
pop
jns
jmp
out
icebp
xchg
mov
lods
notb
jns
mov
mov
mov
mov
cld
frstor
in
push
stc
jg
mov
adc
mov
mov
push
test
sti
test
dec
loop
and
dec
jns
leave
lret
mov
add
pop
loope
andb
out
mov
sub
int
and
out
push
mov
repnz
mov
movsl
adc
mov
sarl
sub
cmp
cmc
push
out
or
fdivrl
in
cld
xor
push
popa
fildll
dec
mov
jle
adc
shll
ja
repz
mov
aas
mov
jns
test
sub
std
std
repnz
lds
aas
jg
scas
mov
nop
sub
sbb
paddq
ss
mov
dec
mov
inc
popf
sub
cmp
and
cmc
test
add
inc
or
js
xor
dec
push
ret
jecxz
in
ja
out
and
arpl
in
bound
fidivrs
test
aas
and
je
mov
jge
sbb
pop
sbb
fsubrs
das
push
adc
mov
pushf
gs
aas
in
fwait
aaa
mov
es
sarl
cld
stc
repz
xor
popf
pusha
and
cwtl
jecxz
xchg
test
xor
jg,pn
xchg
mov
daa
loop
das
mov
out
gs
cld
stc
add
adc
or
mov
sahf
or
xchg
divb
mov
sub
jbe
pushf
sub
sbb
scas
push
arpl
in
or
sub
call
stc
repz
dec
pop
lcall
push
mov
aas
jg
fwait
les
sub
and
mov
fists
sub
push
dec
inc
imul
iret
lahf
aas
fs
sub
adc
jne
das
push
out
in
ljmp
mov
mov
daa
mov
mov
mov
cmp
sub
sti
cmpsl
js
out
sub
adc
lods
in
mov
repnz
test
push
je
mov
pop
pop
jns
cld
jo
and
notl
sbb
scas
mov
mov
pop
sbb
adc
mov
pushf
push
scas
xlat
xchg
lea
lret
sub
xor
push
popa
loop
or
into
mov
aas
in
ja
mov
push
cmp
mov
push
pop
pop
jns
add
push
outsl
mov
dec
push
test
dec
jae
divb
mov
mov
push
sbb
dec
push
mov
and
inc
xor
jecxz
pop
push
pop
jmp
jbe
int3
push
in
jg
sub
and
lods
and
out
sub
push
add
psubsb
jg
les
test
out
jecxz
xchg
aaa
mov
test
cmp
addr16
jnp
aas
ds
aad
scas
mov
in
lea
out
mov
cbtw
pop
fwait
iret
js
pop
xchg
cmp
in
adc
inc
and
sub
push
pop
subl
aam
dec
mov
jb
ljmp
data16
ja
inc
push
or
mov
inc
pop
popl
xchg
push
ficomps
aaa
stos
mov
xchg
dec
inc
cld
sbb
pop
iret
adcl
ja
jl
es
xor
inc
dec
dec
push
add
in
mov
fcoml
push
movntps
xchg
push
lret
xchg
push
leave
and
in
out
sbb
adc
test
seta
scas
mov
mov
lret
jle
repnz
outsb
or
scas
jne
cmpsl
iret
mov
xchg
shlb
lret
sub
out
fidivs
adc
adc
stc
repz
frstors
fldcw
jl
ljmp
cli
jbe
out
lahf
jg
lock
jo
mov
push
dec
gs
jb
pop
jnp
add
dec
push
fdivrp
subb
jno
repnz
cmp
movsl
mov
mov
idivl
push
jbe
mov
lds
xchg
xchg
push
pop
push
fmull
lods
aad
stc
and
mull
outsb
cmpsl
test
push
imul
das
ja
daa
mov
daa
xor
cs
mov
pop
cmp
pop
fimuls
mov
push
cmp
jbe
jle
push
adc
repz
dec
dec
adc
inc
jns
xchg
push
insb
inc
data16
dec
jge
dec
cmp
in
push
pop
adc
sbb
xchg
fcmovnb
rcrb
push
pop
jns
out
inc
sub
xor
sbb
lahf
insl
aaa
std
jnp
in
neg
pop
push
jno
adc
xchg
mov
cmpsl
in
xchg
mov
xlat
sbb
mov
adcl
in
mov
mov
mov
sub
mov
mov
xchg
pushf
mov
mov
mov
roll
lret
iret
lahf
or
scas
std
mull
gs
stc
rep
cs
inc
mov
lret
arpl
jecxz
icebp
imul
jl
dec
jp
sahf
fsubrp
xor
sbb
xchg
add
jb
popf
and
pop
sub
notb
mov
pushf
add
or
dec
clc
mov
inc
mov
aad
sarl
adc
xor
sbb
and
lahf
sbb
rcl
mov
add
cmc
repnz
jl
xchg
aad
vmwrite
mov
mov
in
cs
add
stos
int
jg,pt
push
sbb
add
lret
addb
cmp
lcall
sub
adc
mov
mov
addr16
div
lret
or
filds
mulb
ret
faddp
call
xchg
inc
popf
ss
xchg
iret
lahf
aas
dec
pop
mov
imul
mov
xchg
andb
stos
sti
imul
sahf
push
mov
or
dec
iret
lahf
aas
jg
lahf
pop
lcall
iret
xor
cld
stc
repz
ret
loope
daa
jb
fdivl
adcb
or
push
mov
stos
lea
jmp
in
sub
pop
jns
mov
mov
stos
mov
pop
jns
xchg
or
xchg
subl
dec
xchg
fs
aas
sbb
into
addb
xor
filds
test
test
loope,pt
mov
inc
sbb
in
repz
push
push
int
pop
jno
xchg
pop
iret
mov
dec
xor
sarb
lret
out
adc
popf
sbb
xchg
iret
lahf
add
xor
mov
out
rolb
cmpsb
das
sbb
xlat
aas
mov
mov
jge
dec
clc
push
bnd
pusha
mov
out
fstpt
or
pop
aas
mov
or
test
xchg
call
mov
out
pop
cmp
out
mov
adc
mov
dec
es
jl
subb
lret
outsl
adc
daa
bnd
jmp
sbb
mov
jmp
pop
addr16
lahf
aas
jg
out
imulb
inc
jecxz
movsl
mov
repnz
mov
pushf
mov
mov
mov
xchg
sbb
mov
or
push
xchg
push
pop
jns
std
iret
movsb
cli
mov
out
pop
jns
hlt
or
jecxz
ss
lret
inc
shr
inc
sub
pop
out
mov
repnz
inc
mov
mov
inc
outsb
pop
repnz
sbb
mov
lods
or
scas
mov
dec
std
mov
push
sarb
daa
dec
sbb
adc
cld
stc
repz
inc
cmpb
out
or
jnp
scas
jmp
inc
pop
jle
sub
sbb
faddl
iret
lahf
aas
pop
call
jmp
rorb
cld
stc
repz
lock
dec
jg
enter
mov
ja
mov
cmpsb
mov
push
scas
mov
in
imull
mov
cmc
stc
mov
loop
pop
inc
out
jns
push
jle
cld
mov
fcompl
lahf
aas
mov
mov
mov
lds
inc
imul
push
ret
lret
out
jecxz
add
and
cld
inc
outsb
xchg
insb
pop
jns
frstor
loopne
sbb
mov
in
ja
cmp
je
push
sbb
sub
ret
xor
iret
aas
hlt
jmp
add
aam
js
repz
jns
lea
daa
jne
mov
clc
mov
mov
cmp
and
xchg
ja
mov
mov
inc
mov
jno
jg
jmp
iret
cmovle
nop
jo
or
pop
jp
jl
cld
stc
insl
pop
add
mov
inc
in
or
arpl
mov
cld
stc
repz
sahf
outsb
ja,pt
lret
xchg
pop
cmpsb
loope
lock
xor
cwtl
mov
xchg
mov
adc
push
sahf
mov
das
push
fidivrs
sti
mov
shl
mov
stc
repz
push
inc
or
push
mov
ret
inc
nop
jg,pt
cld
xchg
insb
xlat
push
ja
jne
push
negb
repnz
ss
sbb
aas
pop
xchg
mov
pop
scas
mov
push
jle
test
stc
pop
mov
stc
add
xorl
pop
incb
mov
jmp
cltd
or
xchg
sub
test
repz
inc
add
sbb
xchg
mov
and
lahf
aas
jg
pop
outsl
insb
insl
xor
pushf
inc
fldt
out
inc
fstl
xlat
mov
or
fwait
pop
jg,pt
mov
sbb
jne
jne
adc
cld
xchg
and
jmp
dec
jb
stos
xchg
mov
in
not
push
pusha
cld
stc
add
mov
pop
mov
push
pop
cmp
flds
sbb
out
mov
iret
lahf
aas
jge
rclb
push
out
cwtl
pushf
int3
andl
dec
iret
lret
sub
cmp
jns,pt
mov
fwait
push
sub
sahf
inc
pop
or
xchg
ja
dec
add
test
pop
loop
mov
sub
aam
or
jns
test
loop
mov
imul
pop
jns
xchg
adc
jmp
dec
mov
jp
lahf
pop
add
out
cmp
fld
pop
jmp
out
xchg
iret
rcrb
inc
mov
faddl
hlt
mov
cli
sub
jns
jg
cld
mov
xor
mov
adc
hlt
xor
xchg
lahf
adcl
repz
mov
pop
adc
sbb
pop
mov
cltd
into
xchg
mov
cmp
mov
ret
aad
inc
cwtl
rolb
lahf
aas
decl
push
in
sub
lds
pop
xor
mov
insl
out
push
jle
int
mov
inc
cltd
push
jmp
pop
lret
pop
cld
lret
xchg
lods
push
jnp
das
out
push
mov
cmp
adc
xchg
lea
sar
scas
adc
cmp
jg
pop
cmpsb
mov
push
call
sti
in
mov
or
pop
pop
cld
testl
scas
mov
inc
mov
mov
pop
mov
notb
test
inc
loope
cmc
pushf
imull
negl
dec
in
push
pop
out
xlat
cmp
jle
loop
add
push
fdivrp
jb
xor
jg
movsl
mov
xchg
dec
cmp
adc
mov
inc
paddq
xor
das
push
pop
fwait
xor
or
int3
bswap
sub
std
jno
je
cmpsb
enter
scas
mov
nop
and
popl
jo
and
pop
xchg
insb
repz
push
in
jg
fs
jg
cld
stc
enter
mov
jecxz
mov
lahf
aas
xor
dec
and
in
fdiv
or
fdivrp
jb
and
daa
jb
pop
mov
adc
in
lret
jns
xchg
push
push
xchg
lcall
adc
mov
adc
gs
pop
cmc
out
jb
out
lahf
std
mov
in
lea
xor
loope
cld
stc
sub
pushf
sub
mov
test
inc
shrb
aas
and
inc
sub
mov
aaa
mov
daa
push
paddusw
sahf
lret
mov
leave
lods
push
movsb
mov
fwait
out
push
mov
pop
outsl
push
or
add
xsaves
lret
sub
fisttps
repz
loope
fistps
xorl
enter
xchg
mov
adc
push
daa
and
iret
lahf
aas
sub
lods
js
das
xlat
cs
lds
push
repnz
shrl
mov
mov
mov
sahf
shlb
dec
repnz
inc
add
lahf
jg
sahf
shll
push
or
pop
mov
repz
mov
addr16
adc
or
outsb
pop
imul
pop
push
push
lret
cmp
in
iret
xchg
add
mov
lret
mov
pop
lahf
cld
stc
add
outsb
jecxz
jne
or
popf
and
jge
outsb
pop
in
aam
out
fwait
test
in
mov
arpl
inc
push
aas
jg
cld
out
pusha
les
movnti
pop
lahf
mov
xchg
sub
mov
xor
and
cmp
addr16
pop
fdivrp
adc
das
aaa
cmc
imul
sbb
xchg
push
movsl
in
pop
cwtl
in
insl
and
out
lret
xchg
push
pop
add
stc
pop
mov
mul
lret
hlt
jne
and
das
fadds
sbb
scas
cmpsl
repz
scas
mov
add
pusha
out
xor
enter
fists
mov
test
push
fiaddl
push
push
rclb
sub
xor
jnp
mov
mov
jle
in
pop
sbb
pop
in
ss
lahf
cli
pop
pop
ror
jno
add
in
cmc
cmp
and
in
cmp
out
push
pusha
pop
sar
sti
jno
or
lds
pusha
cs
add
repz
lahf
insb
pop
lods
cmpsl
jno
in
ret
cmpsb
bound
addr16
shl
push
jnp
cmp
sbb
pop
or
iret
lahf
aas
mov
repz
das
mov
xchg
roll
into
add
rorb
add
xchg
xchg
sbb
jne
stos
sub
push
fmulp
sbb
push
into
add
mov
icebp
repnz
sahf
pop
shl
hlt
imul
filds
decb
idivl
xchg
rcrb
mov
inc
xor
mov
pop
lods
icebp
repz
sbb
rcl
popa
stc
cld
stc
lock
aam
cmp
rclb
inc
stos
xor
cli
push
dec
pusha
in
fstl
rcrb
out
cmp
pop
outsb
xchg
push
pop
jns
mov
mov
mov
ljmp
lret
clc
movsb
dec
in
sub
push
mov
insb
and
xchg
nop
jns
jle
repnz
sub
push
and
lret
sub
incl
xchg
add
jb
pop
sub
iret
lahf
mov
mov
int
int
push
and
stc
repz
das
imul
int
push
lds
loope
add
cmp
lock
in
sahf
imul
adc
cld
std
repnz
int3
xchg
jmp
jle
subb
jle
jle
pop
mov
sub
out
out
xchg
mov
pop
out
cmpsb
dec
push
lahf
sub
xchg
in
fcompl
outsl
out
scas
mov
lcall
popa
imul
sub
sahf
sub
push
fsubrl
cld
stc
repz
mov
sub
cmp
fwait
xchg
ja
jl
push
loop
addb
and
fldt
push
pop
jns
loop
push
push
icebp
ret
cmp
outsb
rcrb
fstl
jg
out
push
jmp
imul
das
xchg
push
fimuls
sub
loope
xchg
aas
bound
adc
adc
cmp
xchg
int
iret
mov
push
lock
fucomip
ss
stc
repz
inc
scas
std
mov
push
in
jmp
insb
jl
mov
into
mov
jno
adc
mov
add
out
les
out
mov
xor
and
scas
mov
dec
sub
fcoml
pop
ljmp
sub
and
push
repnz
and
jp
mov
addr16
das
scas
mov
jns
lods
xor
das
jg
mov
push
je
into
andl
pop
stc
repz
sbb
jmp
mov
aas
jg
cld
rolb
popa
mov
lahf
cmpb
jle
out
lahf
xchg
out
fnstcw
ss
cmp
xchg
lock
ljmp
sahf
pop
cmp
lock
lahf
jmp
out
or
adc
in
pop
mov
dec
cwtl
aas
push
jg
inc
push
icebp
in
jl
jecxz
ds
push
pusha
outsl
fisubrl
ds
jecxz
xor
push
add
in
outsl
std
sbbl
adc
call
mov
mov
lcall
repz
lahf
aam
jb
into
stc
xor
mov
cld
stc
jo
push
sahf
sahf
mov
ja
xor
mov
mov
mov
jmp
insb
sbb
imul
icebp
lret
outsl
push
push
cmp
mov
push
mov
nop
xchg
mov
orb
add
jae
shll
repnz
lahf
inc
mov
sub
lret
clc
cmp
enter
fbstp
mov
lock
clc
jg
scas
cmpb
and
push
dec
jge
inc
mul
out
scas
call
lods
ds
pop
jns
add
mov
mov
mov
mov
sub
cld
stc
repz
fisubs
cs
lcall
fsubs
sub
pop
xor
xchg
das
movsb
pop
dec
arpl
push
loopne
push
jg
repz
ret
adc
pop
mov
cld
fdivr
in
test
pop
xchg
jge
and
mov
stc
icebp
scas
dec
loopne
in
mov
mov
pop
or
mov
repz
jo
sahf
jb
pop
sti
shlb
cli
ds
cmp
jg
cld
fistpl
ret
cmp
sub
lret
sahf
aam
das
xor
gs
cld
sbb
sbb
incb
cmp
aas
jg
mov
push
adc
data16
scas
cs
lahf
ret
jnp
mov
scas
ljmp
lret
scas
inc
xor
outsl
aas
jg
cld
pop
xlat
pop
inc
jbe
out
movsb
cs
mov
pop
repz
lahf
aas
jg
lods
mov
mov
cli
in
stc
fcoms
inc
sahf
idiv
stc
repz
out
adc
sbb
aam
fidivs
cld
xlat
cld
lret
popa
adc
pop
dec
inc
xchg
mov
jge
hlt
jmp
stos
cld
stc
repz
fdivs
pop
sub
subl
sbb
lahf
aas
jg
add
mov
test
or
es
repnz
ret
jmp
faddp
lock
fdivrl
cmp
pop
pop
mov
cld
repnz
push
mov
inc
out
punpckhwd
icebp
movsl
clc
cwtl
xor
stc
repz
inc
sub
sbb
sbb
aam
mov
cld
iret
sub
jg
mov
arpl
repz
cld
stc
repz
xchg
sbbl
cld
mov
jb
or
ds
mov
mov
iret
dec
pop
or
jns
inc
nopl
mov
repz
out
imul
inc
mov
inc
inc
jae
cmp
in
push
cmp
outsl
pop
xor
fwait
ror
fisttps
in
push
pop
adc
mov
test
aas
mov
sbb
jmp
push
xorb
jg
jle
enter
cmp
pop
cmpb
stc
cld
stc
repz
outsl
pop
or
mov
sbbb
jb
sbb
xchg
push
mov
lret
out
cmovle
out
cli
enter
xor
ss
pop
and
scas
fsubrl
and
mov
mov
cld
stc
repz
push
jp
inc
popf
add
xchg
fisubrl
sbb
inc
sahf
aas
jg
rcrl
pop
sbb
cmpsl
aas
jg
dec
incb
mov
jle
mov
hlt
mov
mov
jns
sbb
imul
or
push
scas
sub
pop
jns
xchg
mov
sub
inc
jnp
in
push
in
xchg
xchg
cmc
mov
mov
add
in
jnp
repz
inc
nop
cvttps2pi
fidivrs
stc
cltd
pushf
mov
xchg
add
jb
xchg
push
leave
pop
jmp
subl
lcall
cmpb
cld
lret
push
scas
fildl
enter
ss
cld
sbb
push
ss
mov
or
push
das
aas
jg
fsts
inc
add
jg
pop
add
jmp
pop
mov
pop
decb
or
mov
aas
dec
jecxz
mov
mov
out
cmp
cld
stc
repz
pop
inc
sbb
jp
mov
mov
cmpsl
cs
mov
pop
sbb
and
sub
nop
lahf
pop
pop
jg
les
sbb
or
mov
out
xchg
std
inc
je
movsl
shld
cmp
sti
cltd
or
ja
movsb
and
iret
lahf
into
stc
stos
ret
jp,pt
pop
out
mov
outsb
insl
ja
xchg
cwtl
mov
mov
mov
dec
scas
xlat
lret
imul
and
in
fisttps
pop
jg
andl
aaa
mov
std
xor
xchg
iret
lahf
aas
mov
push
adc
loope
mov
jmp
jbe
outsb
movsb
cmp
jmp
pop
out
rclb
addl
out
sahf
jl
das
lods
out
xchg
jbe
dec
lods
push
jle
repnz
jns
sub
or
std
ret
in
xchg
pop
cmpb
jg
cltd
and
gs
fiadds
and
jae
insl
andb
mov
sbb
push
insb
mov
jle
jecxz
xor
pop
in
lods
adc
fdivrl
rcr
inc
cmc
mov
out
jns
add
push
cld
stc
cmp
mov
pop
sarb
adc
and
jb
iret
lahf
aas
hlt
dec
pop
jns
mov
pop
call
cld
stc
repz
adc
xor
cli
in
inc
addl
aas
jg
push
int
cwtl
lods
mov
jg
cwtl
mov
mov
ja
nop
push
fucomi
aas
mov
push
movsl
cmpsl
jecxz
imul
xlat
mov
repnz
cld
stc
repz
push
jle
jmp
push
mov
lahf
aas
jg
push
or
and
loope
mov
loop
jg
cmc
repnz
mov
into
sub
rol
mov
stc
mov
mov
inc
cld
iret
mov
into
insb
movsb
scas
and
dec
faddl
aad
push
xor
fisubrl
mov
mov
jo
sti
ja
cld
sub
sbb
lods
das
insl
mov
testb
ljmp
fcomi
mov
sahf
pop
inc
fnstsw
xor
jno
push
jg
mov
push
xor
mov
stc
mov
push
xchg
and
aaa
cmpsl
xlat
sbb
into
dec
sbb
js
repnz
xchg
cwtl
out
jne
imul
mov
push
mov
clc
stc
repz
lret
int3
fsubrs
test
lods
loopne
mov
push
cmc
hlt
aas
jg
cld
outsb
xchg
mov
mov
push
cld
inc
lahf
dec
inc
repz
lahf
mov
out
subb
repnz
ret
adc
jge
stc
cmpsb
jle
mov
mov
mov
pop
add
dec
mov
xchg
dec
xchg
aad
push
cmp
or
jle
repnz
ds
out
lea
fisttpll
pop
out
icebp
xchg
or
in
and
inc
in
pop
add
repnz
fstl
jle
xor
iret
das
lods
bound
or
push
inc
jb
repnz
inc
subb
and
sbb
lods
cmp
inc
jl
pop
scas
lahf
inc
xor
subl
lcall
inc
dec
out
dec
lods
fcmovnb
in
mov
faddl
inc
and
cmpsl
loop
popf
push
mov
ljmp
xor
xor
sbb
das
mov
or
mov
push
xchg
sub
fmul
movsl
jne
and
sbb
xchg
ja
sbb
pop
loop
and
cmp
pop
jns
in
test
jnp
fisubrl
jmp
cli
mov
sahf
aam
xor
pop
mov
lea
sbb
lock
repnz
mov
aam
stc
repz
cltd
mov
outsb
jg
jmp
or
fsubl
popa
movsbl
inc
loopne
mov
daa
int
push
outsb
fbld
pop
loope
and
mov
adc
scas
repnz
lret
iret
in
mov
push
es
and
mov
cwtl
pushf
sub
loope
push
pop
jns
pop
xchg
lea
sti
sub
pop
lds
jg
fcmovb
scas
mov
cmp
push
xor
mov
fbld
sub
outsl
lcall
das
out
and
or
cmp
push
pop
lahf
aas
jg
or
sub
insb
sbb
cmp
jg
jecxz
xchg
stc
repz
push
idivb
into
xchg
shlb
sub
mov
push
fdivrp
repnz
subps
std
jb
ret
outsl
pop
mov
lret
mov
outsl
sub
leave
adc
sub
mov
movd
jg
cld
mov
mov
dec
loopne
lods
mov
ljmp
cmp
and
out
lahf
pop
sti
popf
xlat
rol
sub
or
mov
nop
add
add
push
nop
jle
sub
xchg
jle
cmp
cmp
or
mov
cld
fsqrt
gs
inc
lfs
iret
lahf
aas
jg
repz
jb
lahf
fstpl
cmp
cld
stc
repz
cmc
pop
xchg
js
ret
aam
jge
pop
sub
call
arpl
cld
rol
lea
inc
repnz
mov
jns
dec
sti
scas
sub
jg
inc
xchg
fstpt
movsb
mov
lret
xchg
push
and
js
loope
push
mov
mov
mull
out
xor
adc
or
stc
push
xor
sahf
repz
sbb
gs
push
popf
stc
and
cmp
leave
fisubrs
dec
lahf
aas
adc
loopne
cltd
enter
push
adc
or
lock
cmpsb
xchg
arpl
ljmp
xor
and
repnz
fwait
clc
add
xchg
lcall
scas
mov
outsb
rclb
xchg
iret
aas
sahf
sub
jl
insl
push
aas
mov
and
sbb
aad
lret
repz
lahf
add
xchg
js
outsl
mov
leave
pop
jg
cld
stc
daa
or
movsl
mov
imul
ljmp
cmp
inc
mov
inc
jno
stc
repz
daa
sahf
add
and
dec
std
jb
cmp
push
mov
cs
scas
test
mov
dec
aas
pop
pop
jle
fidivrs
cwtl
js
lret
xor
gs
mov
sub
mov
movsl
mov
iret
pop
scas
push
scas
mov
jns
cmp
or
rclb
pop
xchg
push
iret
or
dec
or
aam
movsb
mov
shlb
xchg
sub
jecxz
mov
mov
int3
shll
loopne
lcall
xor
mov
cmp
and
in
xchg
insb
leave
cmp
out
loopne
movsl
inc
loop
xchg
cld
outsb
add
fsub
inc
in
out
adc
mov
mov
or
outsb
mov
lret
iret
lahf
aas
jmp
inc
outsb
inc
je
jb
mov
outsb
dec
push
and
or
sub
aas
mov
sub
mov
jg,pt
movsl
inc
out
xlat
hlt
xchg
mov
adc
mov
call
push
adc
xchg
ja
lds
fistps
clc
js
dec
sub
push
fstpl
mov
jge
push
jmp
jge
out
adc
ret
mov
mov
xchg
mov
test
sub
outsb
sbb
je
jns
xchg
push
mov
ss
sub
cmp
jge
jge
pop
sub
lods
negb
cli
add
cmp
inc
pop
in
push
scas
out
pmaddwd
enter
and
push
cltd
mov
repz
ret
jp
outsl
cmp
or
push
adc
lahf
aas
jg
lods
insb
movsl
loope
xorb
ret
mov
sti
cld
stc
repz
mov
mov
mov
insl
mov
mov
stos
loopne
add
mov
mov
jp
mov
ss
insb
test
cld
mov
imul
shrb
hlt
pop
test
data16
xchg
ds
dec
inc
xchg
mov
jg
incb
sub
stos
sub
clc
sbb
pop
ret
inc
call
xchg
push
mov
pushf
dec
pop
and
fistl
jns
dec
adc
out
ss
scas
push
das
inc
ds
stos
pusha
out
lahf
lock
sarl
mov
cld
stc
repz
es
add
jg
mov
mov
cmp
lahf
aas
jg
push
dec
in
mov
sub
mov
repz
lret
adc
push
scas
push
cmp
adc
stc
sbb
lahf
inc
dec
iret
or
mov
lahf
pop
adc
mov
stos
xor
mov
repz
jmp
mov
and
or
aas
jg
cld
jns
and
lahf
jecxz
clc
cmp
xchg
lods
and
lret
iret
lahf
mov
mov
sar
adc
in
lahf
jg
and
pusha
xlat
les
xor
xchg
movsl
jns
jle
loop
scas
add
outsb
jnp
xchg
call
aas
dec
mov
adc
and
test
mov
daa
mov
add
cmp
test
inc
jb
xchg
cltd
ds
push
repnz
xchg
iret
cmc
daa
popa
ds
jecxz
fistps
scas
mov
mov
mov
clc
in
or
jg
sub
jns
mov
scas
push
les
adc
rdpmc
in
push
pop
fs
repz
sarb
inc
pop
pop
jns
push
adc
pop
jle
cld
stc
repz
push
test
ds
adc
call
mov
stos
out
jmp
test
mov
sub
call
lcall
adc
iret
sub
jb
in
mov
lret
sub
fmull
gs
lret
test
mov
iret
lahf
aas
neg
xchg
jne
or
pop
ficompl
repz
rdmsr
inc
add
adc
idivb
dec
arpl
inc
pop
and
dec
dec
xchg
aad
lahf
aas
sbb
popa
lahf
pop
jns
fnstsw
xchg
dec
push
shl
cmp
dec
outsb
pop
jle
pop
pop
shrl
inc
inc
std
sti
daa
fbld
es
lea
adc
testb
push
pop
jns
stos
cld
jbe
daa
adc
test
fwait
dec
shlb
icebp
pop
cs
jb
repz
stos
pop
cmp
xchg
and
cld
ret
mov
fsubrp
adc
mov
scas
or
ret
ja
push
cmp
insb
call
js
sahf
das
fsubrl
rcll
cwtl
jl
shrb
mov
inc
jno
cltd
sahf
rcll
xabort
mov
push
call
test
adc
out
enter
mov
sti
dec
aas
fwait
xor
data16
cld
push
clc
sti
into
inc
dec
mov
mov
sub
jle
mov
jge
daa
call
call
pop
scas
mov
or
pop
and
add
jns
daa
out
stos
or
or
push
push
pop
jns
xchg
imul
movsb
in
adc
dec
out
loopne
das
push
ret
jecxz
mov
cld
stc
repz
cmp
dec
cltd
je
popf
pusha
lahf
aas
jg
pop
jp
jle
xchg
or
or
repz
jbe
jp
pushf
sbb
push
mov
mov
cld
push
xor
mov
mov
jge
dec
je
adc
stos
lret
lahf
movsb
xchg
pop
lock
mov
arpl
out
cmp
shl
out
sahf
xchg
mov
movsb
ficompl
sub
jns
jnp
add
and
movsl
lea
or
repnz
insl
cmp
mov
das
andl
fistpll
mov
in
lret
mov
shll
xchg
push
mov
mov
xchg
out
dec
xlat
sbb
mov
pop
jns
dec
pop
mov
sbb
mov
shrb
lahf
out
lahf
aas
int3
into
fistpll
outsl
rolb
cld
stc
repz
inc
sub
inc
add
add
inc
repnz
lret
mov
hlt
fstpt
cmp
loopne
cmpb
std
pushf
ljmp
lahf
aas
incb
push
ja
xchg
nop
mov
outsl
repz
jmp
mov
ds
sbb
int
std
repnz
test
sbb
test
jg
adc
fdivrl
xchg
push
stc
mov
adc
xor
fs
xor
xchg
push
pop
jmp
out
in
fmuls
stc
xchg
jp
mov
iret
test
jmp
pop
jg,pt
cmp
xchg
imul
loop
mov
and
into
lods
jns
repz
lahf
mov
mov
xchg
sbb
jmp
stc
call
shll
ljmp
lret
aas
je
rorl
aam
xchg
idivl
and
repnz
bound
in
jmp
in
inc
insb
int3
dec
daa
push
jns
movsb
pop
jns
xchg
popf
adcl
pop
xchg
jns
xchg
push
xchg
addb
jp
pop
sub
xchg
push
pop
in
adc
mov
sub
fnstenv
xchg
mov
mov
or
out
icebp
lds
add
lahf
push
mov
scas
sbb
fmul
sub
jg
fwait
mov
cltd
sbb
scas
mov
in
repz
xchg
imul
mov
cmp
xchg
dec
mov
mov
push
pop
jo
push
call
mov
fistpll
aas
add
and
dec
mov
adc
or
out
lahf
pop
loope
lret
push
inc
imul
movsl
push
loopne
sbb
out
lock
mov
jle
jmp
loopne
adc
andl
cld
cmc
dec
adc
clc
sub
in
push
pop
lods
ja
test
and
mov
jns
in
mov
mov
cs
adc
in
jmp
pushf
cmp
das
sub
pop
jle
mov
out
addb
xor
out
inc
es
scas
mov
mov
mov
stos
cwtl
sbbb
imul
xor
jmp
mov
scas
xor
in
sub
nop
xchg
jle
adc
cmp
adc
aas
push
push
xor
xchg
das
movsl
push
subl
lret
repz
mov
stc
sbb
push
xchg
lahf
test
lret
lret
jnp
and
aad
or
sub
jle
mov
or
adc
dec
imul
jle
repnz
sahf
pop
repz
cs
lahf
aas
mov
cmpsl
loop
cmpsl
push
xor
ret
cld
stc
repz
ret
push
imul
jno
add
fnclex
popw
sub
pop
sarl
out
xor
inc
repz
fldcw
sti
sar
in
jg
cld
stc
add
or
je
and
lret
iret
lahf
aas
sbb
incb
test
sar
mov
repnz
xchg
pop
cmp
adc
add
cli
outsl
cmp
fbstp
jge
inc
xchg
xchg
push
pop
jns
jge
arpl
mov
push
call
pop
push
cs
insl
mov
ja
repz
addr16
sub
imul
jg
shlb
add
repnz
pop
loop
push
add
repnz
pop
pop
adc
fwait
push
pushf
je
out
push
testb
mov
aaa
scas
data16
popa
or
fmuls
icebp
lret
ds
inc
xchg
scas
sub
mov
mov
sahf
and
shll
dec
testb
sbbb
in
sub
pushf
lea
xchg
sbbb
mov
das
xor
xchg
and
clc
in
push
and
xchg
dec
mov
jg
cld
ds
cmpl
repz
mov
mov
out
lahf
cmp
xchg
dec
jmp
jbe
inc
ret
jmp
pusha
lahf
sub
cld
cld
xchg
clc
lock
fstpl
pop
lds
lods
and
lret
out
ucomiss
cmp
mov
mov
loope
xor
pop
stc
repz
mov
idivl
xorb
cld
data16
fisubrl
xchg
mov
repz
lahf
sbb
repnz
rol
add
stc
sbb
pop
adc
lahf
repz
and
in
pop
xchg
iret
lahf
aas
dec
clc
repz
adc
push
jns
inc
ljmp
add
shl
or
fwait
pop
add
in
shll
add
stos
dec
lret
out
lahf
inc
sahf
sti
stos
mulb
dec
es
jns
repz
push
call
into
clc
scas
pop
jns
xchg
test
push
push
ja
mov
mov
mov
sbb
mov
adc
lret
les
jns
and
lahf
xchg
sub
push
mov
jne
lahf
aas
inc
fimull
mov
sub
and
xchg
into
rorl
cld
stc
repz
divb
xchg
mov
pusha
iret
lahf
aas
jg
add
xor
jb
aas
fincstp
inc
cld
stc
repz
stc
cltd
jb
test
cmp
xor
xchg
aam
xchg
sub
shl
ljmp
fmulp
cmp
cld
stc
rep
xor
movsl
xor
lds
jg,pt
xchg
mov
adc
xor
fiadds
repnz
sub
lahf
aas
jg
pop
or
enter
xchg
jl
dec
lock
out
bound
call
cld
stc
add
shl
outsl
mov
push
loop
mov
pop
jg,pt
lods
loope
mov
xchg
push
fisubrs
mov
inc
pop
inc
and
divl
push
cmp
mov
scas
int
pop
jns
xchg
lcall
and
sub
jns
xchg
push
xor
adc
icebp
test
adc
lea
jae
cmp
mov
xor
iret
mov
xchg
or
jmp
movsl
clc
and
iret
mov
adc
clc
dec
iret
sbb
inc
gs
jecxz
pop
jb
push
jno
dec
jmp
jb
loopw
scas
xlat
inc
mov
cld
stc
arpl
adc
mov
je
out
lahf
aas
cmpsb
sbb
ja
dec
jge
sub
repz
cld
stc
repz
loope
rclb
jg
mov
out
add
mov
fistpl
fs
scas
mov
stos
add
inc
push
and
mov
ret
popa
inc
mov
lcall
cmc
ret
xchg
mov
decb
mov
xchg
aam
ds
xchg
pop
cld
sbb
fisttps
pop
lahf
aas
jg
pop
insl
mov
sub
xchg
jecxz
xchg
iret
ret
repz
loopne
out
fdivr
dec
pusha
mov
cmp
cmp
imul
out
cmp
lahf
cmp
lret
out
scas
mov
ds
push
mov
fists
jns
inc
sub
int3
pop
rcrb
inc
loop
sbb
jecxz
jns
xchg
mov
and
popa
dec
loope
and
scas
bound
iret
cld
rcl
into
mov
lock
movsl
faddl
and
in
xor
mov
jge
in
aas
je
pushf
xchg
bound
or
dec
repnz
inc
pop
fisubrs
xor
mov
mov
out
pop
clc
outsl
cmpsb
inc
sti
inc
sub
rol
add
push
and
pop
mov
movsb
and
mov
cmp
lret
xchg
imul
les
in
push
pop
std
loope
shll
jae
into
or
xchg
xchg
push
pop
jns
inc
xchg
sub
fs
ss
pop
jns
test
inc
es
xchg
fsubs
jge
in
popf
adc
jg
outsb
aad
icebp
leave
data16
enter
and
ljmp
dec
sub
adc
rol
pop
repz
rcrl
mov
stc
stc
inc
lcall
arpl
add
pop
lahf
mov
jg
cld
stc
sahf
and
notl
jp
mov
aas
lret
pushf
mov
stc
repz
dec
push
aaa
inc
in
nopl
testb
cld
push
cmpsl
mov
sub
cld
dec
push
dec
outsl
pusha
push
ds
push
pop
lds
jbe
ds
xchg
inc
insl
mov
repz
in
outsb
push
pop
pop
mov
sub
dec
ja
fdivrp
mov
xchg
sarl
xchg
das
aas
jle
movsl
stos
adc
jb
xchg
mov
lods
rclb
movsb
cmc
cli
in
gs
and
xchg
xchg
les
je
xor
js
cmp
add
orb
imul
xchg
mov
cmpsb
out
loopne
cmp
lods
mov
das
lcall
es
movsl
das
scas
inc
mov
lret
push
cmp
mov
mul
out
xchg
pop
push
mov
mov
mov
mov
jge
outsl
int
jecxz
cld
stc
stc
sbb
out
out
mov
cltd
pop
clc
cmp
iret
lahf
aas
pop
popf
scas
mov
pop
scas
mov
jge
stc
repz
fidivrl
pop
jecxz
dec
icebp
addl
push
outsb
adc
jge
movsb
xor
mov
push
imul
pusha
fistpll
test
push
pop
jns
mov
addb
notb
fsubrs
mov
pop
jns
xchg
jecxz
push
dec
and
jno
pop
push
mov
cmp
cs
aad
cmp
in
dec
orb
call
fimuls
fstl
jo
pop
inc
jg
mov
addr16
ljmp
jno
shll
lahf
shl
cmc
fwait
fwait
jo
rcll
inc
push
fsubrp
add
mov
jne
lods
inc
repnz
rolb
stc
adc
sub
jle
repnz
cmpsb
js
mov
repnz
cvtpi2ps
dec
sub
or
cmpsl
mov
jno
pop
push
fcoms
or
lret
fmuls
jne
add
cli
std
repnz
mov
or
negl
jecxz
lahf
call
ret
xor
into
lahf
pop
cmp
out
mov
xchg
jae
xor
push
mov
ja
mov
outsb
cmp
mov
mov
lahf
aad
enter
dec
scas
mov
fucomp
dec
or
movsb
jnp
sub
div
lret
out
mov
hlt
pushf
sarl
stc
cld
push
cli
sub
cmpsb
fs
adc
sub
xchg
jle
pop
enter
cmpsb
test
out
mov
repz
lahf
ds
dec
sub
test
shll
fstps
mov
pop
pop
adc
mov
loop
cmp
fdivrp
jb
sbb
in
jne
pop
test
push
xchg
loop
mov
sub
jbe
fdivrp
repnz
jne
dec
sub
loopne
iret
sbb
adc
adcl
dec
pushf
pop
pop
clc
pop
dec
mov
mov
lcall
pusha
incl
jg
cld
stc
enter
jmp
xchg
or
iret
lahf
aas
and
aam
mov
pop
stc
repz
add
inc
jae
or
jg
pop
jle
out
sub
and
mov
iret
lahf
stos
push
adc
std
movsb
jns
arpl
popf
ret
mov
outsl
repnz
jle
jg
mov
pop
cmc
jp
fisubrs
or
call
jb
out
fwait
ja
hlt
jg
cld
stc
js
xchg
push
inc
and
adc
or
aas
test
inc
mov
daa
jmp
mov
push
mov
push
fs
xor
mov
or
mov
xor
in
push
add
test
xchg
aas
mov
jge
sbb
jg
mov
sbb
sbbl
lahf
movl
sbb
das
jmp
iret
add
pop
shll
jns
enter
stc
repz
dec
stos
mov
add
and
adc
lods
in
pop
fistpll
aas
test
out
cld
push
or
or
pop
fistps
das
lahf
lods
cwtl
lea
jg
cld
push
dec
mov
dec
lret
pop
in
or
iret
lahf
std
mov
push
sub
lods
jg
cld
stc
push
lret
in
jb
push
out
ret
push
mov
aas
jecxz
jne
scas
cltd
lock
cld
stc
repz
rcl
nop
mov
js
insb
push
les
iret
lahf
aas
jg
cmpsb
ds
aas
mov
sub
repnz
movsl
lret
mov
std
xchg
mov
test
pop
shlb
xlat
lds
mov
div
ljmp
push
jl
pop
int
push
jne
in
push
negb
sbb
ja
lds
pop
jne
add
mov
repz
scas
mov
inc
lock
sub
sbb
push
cmp
daa
leave
addr16
testb
scas
mov
and
push
and
ljmp
sbb
sbb
loopne
or
lret
jecxz
leave
jecxz
add
xor
push
sbb
aaa
daa
test
cli
push
push
lock
or
push
test
bound
fdiv
das
jecxz
jae
mov
dec
pushf
aam
stos
mov
repz
bound
andl
xor
mov
aas
fisttps
jns
in
jo
aad
lret
push
sub
aam
in
push
pop
and
push
mov
pushf
push
sti
jb
hlt
xchg
push
pop
jns
xor
fisttpl
and
or
stc
push
lock
mov
mov
ficoms
mov
or
xor
sub
outsb
xlat
fists
lock
mov
jle
repnz
divl
dec
adc
andl
lahf
aas
aas
and
popf
xchg
pop
dec
stos
mov
and
push
mov
dec
enter
cmp
jg
cld
xor
and
scas
adc
sbb
mov
aas
sbbl
sbb
dec
add
jmp
ret
adc
out
ljmp
and
inc
outsb
pop
jns
lret
mov
je
adc
into
pop
push
popl
mov
iret
cmp
bound
leave
mov
in
mov
or
fs
add
fists
scas
iret
jmp
dec
pop
push
inc
loope
in
dec
outsl
es
add
inc
jae
jae
jb
xchg
aaa
lahf
dec
ds
dec
inc
xor
roll
cmp
adc
dec
out
mov
repnz
stc
repnz
cmp
sbb
repz
mov
jmp
fmull
leave
lahf
pop
dec
out
cmp
andb
std
jle
jae
imul
xchg
mov
stc
sbb
inc
in
dec
and
movsb
mov
lret
lahf
aas
inc
leave
jns
shlb
jmp
jl
inc
outsl
xor
fmul
mov
mov
cld
mov
inc
ds
jp
or
cmp
jns
lahf
push
jle
dec
pop
mov
pusha
jl
xor
ret
ficoms
or
pop
xor
clc
adc
or
fistpll
push
pop
jns
and
fistl
sbb
mov
les
outsb
lea
cmpsl
xchg
sub
in
cltd
clc
in
pusha
jns
jle
scas
repz
out
lahf
and
into
cltd
mov
iret
xor
hlt
adc
das
test
int3
je
dec
pop
shl
xchg
cld
stc
repz
add
add
adc
mov
push
xchg
push
fidivrs
je
cmp
jle
pop
jns
jns
jl
mov
stos
sbb
imul
xchg
xorl
insb
les
test
cmp
cmpsb
jp
or
xchg
push
lods
popa
lret
iret
lahf
aas
scas
cmc
and
mov
bswap
push
shlb
dec
push
das
jae
dec
cli
enter
inc
lahf
fwait
repz
cmc
mov
das
pop
bswap
push
add
cld
stc
repz
sbb
cltd
mov
lods
sub
mov
movsb
int
ds
icebp
fidivrl
iret
lahf
aas
insb
mov
insl
adc
and
lret
neg
rcrb
movsb
mov
cld
movsb
push
inc
push
and
mov
hlt
sbb
mov
jle
mov
stc
repz
enter
sub
jle
mov
sub
stos
mov
aaa
and
mov
out
das
in
scas
fistps
cmp
leave
stc
repnz
leave
jb
fdiv
out
rorb
popf
lret
rcr
loopne
jg
stc
push
jp
sbb
inc
cmp
push
sbb
mov
lods
stos
mov
mov
aas
jg
cld
stos
or
shrl
lods
pop
push
jl
cwtl
lods
and
add
pop
rolb
sub
cwtl
daa
push
mov
orl
xchg
negb
inc
add
lret
outsl
push
pusha
into
fcomip
lods
sub
jle
cld
add
scas
xor
fstps
in
lahf
mov
sub
imul
xchg
push
sbb
mov
xor
loop
pusha
aas
call
sub
icebp
jl
gs
sbb
aam
test
cmp
lods
add
jg
repnz
pop
into
cli
fisttpll
xor
loopne
test
fstpt
test
cmp
repz
movd
cmp
mov
jle
cld
stc
scas
sti
leave
push
pusha
aas
imul
in
mov
sahf
ret
mov
int
jg
xchg
pop
push
dec
jnp
xor
sbb
ret
push
mov
popf
push
repnz
rclb
ja
pushf
or
lahf
jg
addr16
repz
rclb
das
push
adc
sbb
pop
push
in
xor
popa
testb
lret
ljmp
jb
adc
scas
aaa
jecxz
jae
in
lcall
stos
test
inc
jne
out
cld
jns
push
arpl
movntq
iret
and
jg
jmp
gs
cs
pop
jns
arpl
pop
push
jno
stc
aad
test
sub
inc
and
scas
fwait
aas
lock
add
rolb
or
je
add
mov
jae
jg
cld
stc
jmp
sbb
mov
into
xchg
push
repnz
ret
das
aas
daa
push
inc
pop
xchg
daa
scas
lret
in
lret
fidivl
stc
xchg
out
clc
in
aas
jns
cmp
ds
scas
das
pop
jle
cld
xchg
aaa
into
dec
es
mov
lcall
or
std
out
cwtl
mov
in
leave
loope
mov
pop
jae
lret
push
mov
aam
je
dec
es
fsubp
adc
mov
and
mov
xlat
jg
jl
and
pop
lea
cs
mov
lret
add
aas
in
imul
insl
push
aam
xor
stc
repz
mov
adc
test
inc
iret
lahf
aas
jg
stc
or
jne
aaa
xor
test
mov
fsubp
xchg
lods
lahf
and
mov
pop
jns
xchg
imul
call
mov
push
or
enter
jge
pop
out
std
mov
ljmp
in
lea
push
rolb
cmpsl
rorl
iret
aam
xor
aaa
jle
rcll
pop
imul
push
fistl
sbb
lret
xchg
push
sub
jns
adc
cmpsb
test
xor
mov
jg
lcall
out
cli
fdiv
push
xor
lods
and
xchg
popa
es
lahf
hlt
cs
lcall
je
sbb
xchg
pop
aam
cs
xchg
insl
iret
daa
mov
pop
sahf
fs
add
repz
dec
jo
or
xchg
shrb
cld
lods
enter
sbb
and
push
in
xchg
lahf
jnp
jb
gs
in
bnd
lret
pop
jns
xor
xor
mov
xor
push
pop
jns
cmp
push
sbbb
jcxz
cmpsl
pop
jns
xchg
sub
jge
bound
popf
dec
pop
lahf
les
pop
push
roll
out
push
mov
imul
push
pop
inc
repnz
adc
fmull
jg
ja
cmp
jle
or
and
inc
aad
popf
mov
fisubrs
in
mov
mov
scas
jae
sarl
cld
ret
fisubrs
stc
xor
aas
and
push
mov
mov
lahf
mov
scas
inc
dec
imul
jns
enter
rclb
enter
jno
das
xor
mov
mov
leave
push
iret
lahf
aas
aas
pop
jb
aad
xchg
out
mov
mov
clc
repnz
pop
jo
mov
xorb
cld
sarb
dec
outsl
push
sub
loope
jae
ror
das
aas
mov
push
cwtl
sbb
repz
test
scas
mov
pop
int
scas
lahf
js
xor
xor
jp
cmp
jno
or
test
mov
jb
pop
rcll
or
xchg
pop
mov
pop
xchg
fistl
dec
or
xor
scas
dec
notl
jns
push
scas
fsts
jns
fsub
and
inc
cmp
pop
jns
xchg
mov
loop
mov
jns
xchg
push
or
dec
fucomi
add
movsb
xchg
mov
push
pop
ds
sub
lock
push
sbb
fidivrl
pusha
ljmp
fists
inc
and
aaa
mov
jno
sub
das
outsb
inc
cmpsl
aas
dec
push
scas
mov
add
sarl
mov
mov
sbb
add
push
xchg
sub
jp
jno
mov
ja
in
xchg
mov
das
scas
out
jp
cmc
iret
push
bound
adc
jns
adc
out
lahf
aas
test
mov
sbb
inc
push
mov
div
scas
cld
adc
jl
xor
push
iret
lahf
aas
jg
mov
popf
or
ror
lock
push
adc
mov
pop
mov
or
add
push
sbb
fstps
sub
and
push
mov
add
in
xchg
push
dec
test
outsl
cmc
adc
xchg
or
iret
lahf
sub
insl
jle
push
pop
or
cld
stc
repz
cmp
mul
pushw
and
jae
aas
jg
push
or
mov
inc
stc
repz
pushf
and
xchg
das
dec
les
cld
cld
cmp
mov
mov
dec
shrb
push
sub
enter
out
inc
repz
loopne
repnz
push
sahf
fadd
mov
fnstsw
lock
mov
test
mov
jns
hlt
jb
mov
hlt
fldcw
push
pop
fs
pop
jns
xchg
xlat
nop
pop
xor
lret
shl
lret
xchg
push
sbb
in
or
cld
stc
xor
pop
es
mov
in
into
test
sbb
mov
outsb
aam
aas
repz
lahf
les
sti
das
dec
scas
pop
jge
mov
or
outsb
leave
push
sub
adc
repnz
shl
lret
das
sbb
mov
cmp
push
stc
jo
std
pop
jg
scas
mov
repz
push
lahf
int3
test
mov
fbstp
push
jne
xor
aaa
psrlw
mov
sbb
jle
lds
rclb
rolb
cmp
fildll
mov
mov
cli
lods
lcall
into
or
lahf
dec
push
pop
jns
xchg
and
mov
cmc
jp
imul
adc
mov
repnz
pop
mov
push
negb
inc
std
scas
stc
aam
outsb
jecxz
jae
dec
lcall
push
xchg
aas
sub
sbb
repnz
xchg
adc
lret
pushl
add
push
fcmove
mov
push
sbb
aas
pop
punpckhdq
repnz
jge
mov
xchg
jp
into
aas
clc
int3
leave
sbb
repnz
or
test
aas
jg
cld
mov
popa
add
mov
in
jne
fildll
lahf
bound
cld
aas
cmpl
out
iret
push
dec
mov
xchg
mov
mov
pop
cmp
std
filds
and
xchg
ja
ret
stc
fstl
fnsave
jg
pop
pop
in
inc
add
mov
inc
clc
fists
mov
das
repz
dec
outsl
call
pop
or
jle
push
lock
in
jnp
inc
mul
and
mov
ljmp
in
fdivrp
jb
in
pop
mov
sbb
and
scas
mov
adc
fdiv
roll
jbe
in
sub
fidivs
mov
lret
subb
mov
and
mov
iret
pushf
subl
mov
cmc
cmp
repnz
inc
clc
repnz
xchg
scas
addr16
xor
out
mov
stc
repz
pusha
scas
faddl
and
xchg
jnp
lahf
jmp
jg
fcmove
or
pusha
scas
rolb
aas
mov
pop
xor
mov
push
loope
jb
add
lret
add
lret
inc
push
adc
inc
mov
xchg
lret
mov
mov
cmpsb
inc
es
repnz
stos
data16
mov
lret
pop
iret
lahf
aas
mov
add
pop
cmp
sub
stc
repz
push
push
push
loopne
fists
jg
sbb
iret
sub
lahf
push
lret
adc
xchg
iret
jae
lea
xor
pop
inc
sahf
sub
sahf
xor
icebp
in
sti
and
jle
std
xor
adc
mov
or
lahf
aas
jg
pop
and
shll
icebp
repz
shlb
adc
and
mov
dec
sbb
bound
or
mov
ljmp
outsw
into
and
gs
xor
inc
adc
mov
cmpsb
fnstcw
mov
iret
test
decb
mov
std
xorl
mov
sub
or
pop
fcmovne
iret
enter
pushf
jns
xchg
ja
fwait
push
dec
fstl
or
lea
pop
push
mov
daa
push
cbtw
lahf
jb
das
addr16
out
aam
ds
mov
out
data16
lods
inc
mov
out
pop
inc
fcomps
jne
loopne
lods
outsb
stc
repz
mov
mov
sub
lret
repnz
fisttpll
lahf
sub
bswap
sub
xor
stc
in
and
sub
push
int3
push
jge
pop
mov
and
pop
dec
aam
mov
cmp
scas
out
lds
out
insb
push
pop
jns
jns
adc
dec
test
jno
push
push
out
shrb
popf
pop
lahf
aas
iret
hlt
in
sub
shll
lods
hlt
cs
mov
lret
lcall
inc
shr
jb
lods
in
lods
fimuls
iret
aas
test
xchg
dec
sub
mov
jmp
repz
sub
lcall
in
aaa
dec
clc
js
cld
test
idivl
in
push
pop
into
jl
dec
pop
cmp
xchg
push
pop
jns
fldt
sub
je
mov
das
ja
xchg
aas
lahf
decl
push
mov
jmp
ficoms
jecxz
push
jp
mov
fdiv
pop
in
push
fisubrs
clc
inc
push
push
and
xchg
jl
mov
push
pop
jns
lea
out
jge
jno
bound
in
mov
dec
pusha
cmp
jg
pop
or
stos
sahf
sbb
loope
rcrl
adc
in
iret
mov
lods
xor
add
scas
pop
xchg
push
pop
jns
push
lret
shll
in
mov
das
jecxz
pop
jns
icebp
into
dec
xchg
mov
xor
add
and
fnstsw
fstl
mov
xor
pop
sub
aas
dec
jl
lods
out
call
jmp
setb
sbb
mov
push
pop
jns
iret
adc
fwait
icebp
std
xlat
xchg
daa
out
dec
repnz
pop
sbb
leave
jmp
cld
stc
xchg
mov
push
popf
icebp
xchg
mov
sub
jl
jo
cmpsl
orb
orl
sub
cmpsb
gs
xchg
gs
xchg
sub
loopne
into
cld
stc
repz
jns
mov
push
inc
add
notl
add
lahf
aas
jg
cwtl
and
fucomip
mov
mov
out
mov
arpl
mov
movsb
jle
push
lahf
aas
jg
les
or
subl
outsl
jae
or
incb
das
das
adc
sub
aas
aas
out
sbb
add
rcrb
scas
hlt
in
mov
xor
ret
hlt
dec
std
ficomps
mov
xchg
cmpsb
inc
not
loopnew
lahf
jb
stc
repz
test
and
movsl
jge
xchg
sbb
jne
aas
jg
cld
lahf
push
shrl
dec
sbb
and
lahf
movl
sti
and
xchg
iret
xor
pop
jle
jle
sti
in
test
lahf
pop
ret
scas
fildll
repnz
outsl
or
sbb
push
pop
pop
and
leave
lret
mov
adc
sbbl
mov
adc
sbb
adc
mov
xorb
push
scas
jno
add
mov
mov
repnz
cmc
bound
leave
xchg
jl
mov
mov
and
sbb
jge
cmp
call
enter
mov
jns
xchg
stc
rcrb
ret
push
inc
add
in
push
fwait
xor
push
rcr
leave
dec
ja
lcall
sbb
ret
mov
pop
mov
das
fistpll
dec
and
xchg
sub
aas
shr
scas
loop
jecxz
adc
dec
aam
stc
repz
aad
leave
lods
fsts
in
lahf
aas
jg
push
cmp
fadds
or
shl
in
iret
jnp
mov
lea
dec
stc
add
maxps
scas
fidivrs
repz
cld
repnz
or
loopne
scas
cmp
stc
push
pusha
push
outsb
xlat
or
push
push
jbe
arpl
loope
scas
xchg
sub
out
xor
testb
and
ret
mov
loope
repz
lahf
int3
leave
insl
repnz
les
insb
lret
push
jmp
std
repnz
mov
mov
push
sarb
jbe
aaa
jns
xchg
push
and
cmp
xchg
xor
scas
mov
push
pop
push
repnz
mov
outsl
push
cltd
ja
and
push
imul
ja
mov
mov
out
or
or
pop
js
subb
pop
jle
inc
scas
test
in
icebp
mov
repnz
decl
and
fadds
inc
xlat
repnz
inc
rcrl
jmp
sub
push
mov
and
xchg
movsl
push
jge
repnz
xchg
add
fnstsw
nop/reserved
and
repnz
in
loope
jg
lea
std
test
scas
mov
mov
jnp
sub
repnz
ficoml
mov
scas
mov
cmp
cmc
shr
sub
incl
xchg
sub
movsb
mov
push
js
repz
addr16
jnp
adc
ss
push
sti
repnz
jle
mov
pusha
shll
scas
mov
sub
fdivr
add
cmc
aad
imul
andl
xor
jns
sbbb
sub
cmp
gs
add
sub
jae
add
ret
xchg
ja
loop
rorb
imul
in
loop
test
xchg
add
jns
das
jmp
adc
mov
cmp
pushf
into
and
xchg
push
pop
mov
inc
stos
fbld
das
mov
test
and
xchg
scas
mov
icebp
out
rclb
pushf
adc
out
mov
fisubrl
sbbl
repnz
adc
cwtl
das
fstpl
loopne
in
push
pop
jp
jmp
xchg
fstpt
xchg
fucompp
push
mov
pop
and
mov
push
push
lods
cmpsb
repnz
addb
repnz
aas
mov
mov
fcmovu
lret
scas
dec
cs
inc
inc
push
jae
mov
mov
les
xor
repz
jg
sub
or
pop
out
clc
mov
cmp
lret
fsts
or
arpl
scas
mov
push
mov
ss
jne
jge
push
clc
in
sub
xchg
test
push
dec
fdivrl
fwait
push
bound
int
test
fildll
ja
fcomps
sbb
add
push
dec
call
push
pop
jns
in
cmp
jp
je
cld
jge
mul
xchg
and
xchg
int
pop
push
ror
aas
jg
and
addl
lret
out
lahf
inc
jo
ds
or
cmc
mov
hlt
dec
sahf
movsb
incb
jg
jl
andb
add
insb
xchg
loop
cs
ja
jg
mov
pop
call
hlt
mov
out
das
icebp
ret
pop
dec
icebp
xchg
movsl
mov
stc
stc
repz
inc
sbb
sub
push
jl
int
das
aas
and
xor
filds
in
jb
lock
push
jmp
pop
push
mov
ds
sub
add
repz
int
loopne
frndint
push
fdivrl
scas
ret
pop
je
cld
adc
fs
int
lret
pop
aad
lahf
aas
jg
jae
outsl
sbbb
fnstsw
in
inc
bound
shr
lret
push
in
lret
xchg
push
cmp
dec
cmp
aas
xor
add
out
inc
inc
dec
sbb
pop
into
jae
ret
dec
rolb
cmp
xchg
repz
lahf
xor
lret
lods
and
idivl
js
loop,pt
xchg
fisubrs
stos
push
adc
out
in
jnp
cmc
sub
cmp
out
clc
repnz
dec
pop
loop
test
mov
stc
repz
das
test
scas
inc
insb
aad
jae
mov
mov
mov
mov
shll
mov
jno
push
dec
call
popa
clc
in
push
int
clc
mov
mov
cld
into
jecxz
push
mov
inc
cwtl
in
xchg
ja
and
cli
xor
jg
cld
stc
xor
imul
pop
and
add
add
nop
int
add
pop
je
jbe
int3
aas
call
lret
addr16
shlb
in
iret
lahf
sub
inc
inc
xor
std
int
push
pop
jns
push
cs
inc
cmp
jmp
and
pop
jns
xchg
data16
pop
mov
cmp
in
push
orl
cmp
repnz
adc
or
scas
mov
xchg
dec
sub
mov
in
jecxz
imul
repz
cmp
xor
jae
jns
scas
mov
test
mov
pop
add
sub
adc
jmpw
das
out
jle
leave
fbld
aas
jge
push
popa
adc
or
out
sbb
stos
mov
rol
test
lret
mov
jae
sub
dec
pushf
ror
sub
jp
xchg
notl
fimull
in
adc
xchg
cmpl
push
gs
test
js
test
cmp
xchg
mov
daa
stc
repz
pop
stos
inc
loopne
aam
movsl
or
lcall
pop
xchg
cmc
inc
jecxz
sahf
cmp
xchg
mov
jg
xor
inc
iret
in
jmp
mov
das
adc
sbb
insl
imul
repnz
lahf
stos
outsl
mov
jmp
lret
pop
lahf
push
bound
in
adc
sar
inc
add
jg
fstl
stc
inc
arpl
xchg
jns
fucomp
pop
pop
xchg
cmp
lret
xchg
push
mov
popf
pop
mov
out
ror
jno
scas
imul
push
dec
nop
jle
cld
stc
xchg
cmp
xchg
repz
popf
fidivl
jl
mov
pop
pop
das
push
xchg
pop
sbb
lock
cwtl
in
scas
test
sar
stc
mov
jge
mov
mov
xchg
int3
sbb
aas
jg
movsb
loop
xlat
loop
test
lret
mov
xchg
add
fbld
je
mov
sub
rcrl
jno
cld
stc
daa
test
pop
je
cmpsl
jae
in
scas
std
mov
stc
repnz
lahf
mulb
push
pop
dec
mov
cmp
sub
aas
jo
xchg
enter
and
out
lahf
mov
sahf
fwait
mov
jg
cld
stc
mov
insl
outsb
pop
dec
sbb
lods
aaa
scas
repz
das
lret
fnstsw
cld
stc
subl
xchg
sub
in
push
inc
pop
jbe,pt
cmp
mov
xchg
dec
and
sarb
mov
pop
outsb
sbb
scas
repnz
fstps
jmp
shl
out
mov
push
xchg
pop
xor
iret
xlat
push
sbb
sub
xor
pop
push
jns
rcrl
fsubrl
fldl
mov
cmc
sti
xchg
push
or
movq
sbb
and
pop
shll
aam
push
in
push
out
lahf
aas
out
lret
testl
std
repnz
rep
loope
mov
in
or
lret
dec
ficoms
pop
jmp
inc
clc
repnz
sub
or
mov
jae
andl
jmp
dec
add
cmpsb
iret
pop
int3
sbb
jg
mov
shrl
lahf
mov
ja
test
aas
sub
jne
out
decl
jmp
cmp
jb
insl
sub
dec
xchg
pop
test
mov
popf
call
xor
fildll
pop
jns
arpl
in
out
and
out
sti
push
pop
jns
xchg
dec
cmp
fsts
and
inc
mov
ret
in
xchg
push
adc
imul
xor
xchg
push
pop
jns
add
adc
mov
call
jb
add
sarl
fisubs
mov
mov
pop
fisubrs
cmp
push
pop
jle
scas
je
hlt
lods
pop
ds
aad
push
fcoms
repz
sbb
clc
lcall
mov
and
jns
jmp
aas
test
cmp
sub
lret
mov
and
popa
pusha
jge
outsl
jns
pop
shlb
adc
add
cmpsb
lret
xchg
push
pop
outsl
movsb
pushf
stc
mov
clc
std
and
cmc
mov
mov
and
fs
sub
int3
mov
dec
inc
into
int3
enter
in
mov
fldl
jae
mov
mov
mov
mov
enter
pop
imul
in
mov
cmp
or
out
std
subl
lods
and
cmp
iret
pop
movsb
scas
addb
mov
lds
scas
jne
xrelease
dec
fisttpl
ffreep
dec
push
pop
pop
push
rcrb
fiadds
mov
fwait
push
xor
sub
fbld
pop
push
adc
jb
pop
adc
fldl
ret
sub
jne
movsb
das
mov
jbe
inc
cmp
iret
scas
into
lds
mov
cs
clc
in
dec
cmpsl
sub
les
movsb
pop
imul
adc
push
fsubp
xchg
xor
sub
dec
das
sbbb
packsswb
das
xchg
dec
outsb
mov
les
popf
iret
xor
aas
mov
ds
aas
repz
jns
lret
rcrb
aam
dec
lds
fstl
popa
inc
ss
testl
push
pushf
jl
push
or
in
mov
sub
rcrl
jns
xchg
jl
mov
jo
in
movsl
mov
jns
xchg
push
loop
std
mov
lcall
push
pop
cld
lcall
or
pop
jns
in
scas
adc
rorb
cmc
js
adc
mov
dec
pop
leave
pop
into
mov
bound
das
mov
mov
ljmp
sahf
xchg
xor
sbb
lret
mov
scas
pop
les
ljmp
jg
jl
dec
fdivrp
fldenv
repz
mov
pop
pop
loop
and
adc
aas
jg
cld
fucompp
mov
push
jbe
repz
lahf
mov
ror
sbb
jg
cld
stc
or
inc
sbb
int3
insb
in
shll
lret
xchg
ja
dec
inc
aas
fs
push
inc
fwait
jge
stc
xchg
cmc
sarb
lret
sbb
add
adc
or
sbb
mov
cld
stc
repz
cmpsl
mov
adc
jp
fwait
rcrb
and
push
lcall
ds
lahf
jg
mov
ja
pop
jmp
bsf
mul
repz
insl
mov
sbb
mov
lret
mov
sbb
adc
scas
mov
fistpll
data16
inc
pop
int
inc
jle
repnz
sub
fwait
jp
mov
adc
xor
mul
fists
pop
cld
and
fidivrs
notl
jg
mov
stos
out
fisttps
cld
cmovns
nop
iret
jnp
dec
stos
add
pop
sub
or
dec
movsb
lret
lock
repz
jg
das
scas
mov
hlt
inc
shlb
xor
pop
sti
mov
lret
xchg
mov
cld
inc
cs
adc
xor
cs
aas
iret
lret
arpl
repnz
lahf
aas
lcall
push
add
xchg
lea
dec
sbb
stc
repz
xchg
dec
lods
dec
jbe
rcll
js
jno
lahf
mov
repz
cs
inc
aaa
jo
push
inc
rcrl
scas
mov
out
pop
cmpsb
pop
push
add
cli
xchg
cli
repnz
dec
mov
sahf
dec
dec
ret
cld
adc
aaa
jecxz
jle
scas
and
imul
lds
push
scas
cmp
sarb
cld
stc
shrl
push
nop
sub
cwtl
pop
pushf
roll
lret
out
lahf
aas
sub
shll
mov
add
repnz
mov
adc
push
pop
jns
hlt
sub
mov
mov
mov
mov
xor
and
filds
and
fwait
test
cmp
jl
jg
mov
pop
int3
mov
cltd
repz
lahf
cmp
cmc
insl
xchg
subb
cmpl
stc
mov
xor
data16
out
loope
out
lahf
aas
aaa
lods
mov
or
scas
loopne
cld
mov
loope
mov
and
mov
out
shlb
ds
aas
jg
sbb
out
decl
out
jecxz
adc
iret
sub
xchg
loopne
xchg
mov
mov
inc
sbb
xchg
ficoms
mov
stc
scas
cld
stc
xchg
lock
cmpsl
lret
outsb
mov
pop
ljmp
cmp
mov
jns
in
mov
inc
decl
jo
scas
adc
lret
cmpsb
jb
adc
loope
hlt
dec
push
push
cli
xor
iret
push
inc
sbb
jns
repnz
das
cwtl
std
sub
dec
xchg
out
inc
add
push
pop
push
mov
cwtl
jmp
xchg
cmp
std
xor
test
xchg
xor
pop
stos
mov
sbb
mov
cmp
or
jp
pop
imul
pop
inc
sub
cltd
lea
repnz
out
xor
data16
es
cmp
sub
push
das
test
push
sbb
fnstsw
xchg
and
scas
hlt
jns
pop
fbld
or
jle
pop
aas
xchg
stc
xlat
sbb
xchg
pop
inc
dec
in
repnz
ds
mov
lahf
sahf
repnz
iret
add
imulb
jge
insl
int
sub
fsubrl
adc
sub
int
fsubrl
pop
mov
mov
mov
daa
add
adc
cmp
repnz
sysexit
mov
std
fdivrp
icebp
repnz
mov
idivl
test
rcl
and
bound
sub
pusha
ficoms
cmp
out
push
imull
pushl
test
shlb
scas
mov
lahf
scas
fcomps
cmpsb
jo
dec
adc
repnz
dec
xchg
or
dec
js
inc
in
xchg
mov
lahf
adcb
outsl
dec
adcl
scas
cmpsl
stos
fcomps
fdivr
adc
lret
mov
jbe
outsl
push
shll
inc
push
jle
repnz
pop
ljmp
cli
repnz
xchg
pop
adc
fadd
push
jl
mov
jl
inc
ljmp
mov
aaa
jg
repz
jg
imul
mov
scas
dec
out
lahf
aas
test
push
movsb
sub
out
push
push
fsubrp
xchg
lret
nop
xor
and
mov
xchg
das
sbb
in
pop
xor
pusha
fs
push
leave
jns
xchg
push
jmp
stos
xchg
rep
decl
stos
xorb
jns
mov
scas
mov
ja
loope
lods
dec
ror
scas
test
sahf
push
mov
jmp
imul
lahf
jns
scas
jmp
pop
movsl
movsb
sbb
pop
rcrl
mov
push
pop
jns
addl
subb
cld
pop
jns
lret
pop
xchg
mov
in
dec
sbb
fwait
dec
jae
xor
xchg
push
xchg
sti
cmp
push
mov
fcoml
in
push
pop
lahf
aad
push
jecxz
mov
int3
insb
cmp
or
adc
movsl
aad
inc
mov
jnp
in
sbb
mov
aad
xlat
test
fimuls
ljmp
sahf
incb
jb
orb
icebp
or
jg
sbb
pop
stos
stos
lahf
inc
add
sti
repnz
cmp
aam
clc
cmp
cmp
repz
sub
push
enter
xor
jns
movsl
cmp
clc
sbb
mov
jb
xchg
push
sub
or
inc
incb
fmull
std
add
cwtl
fs
and
out
lahf
add
sbb
mov
sbb
cld
stc
pop
sbb
push
mov
sub
shlb
push
push
mov
repnz
xchg
out
jno
dec
inc
push
jl
add
sub
mov
push
fiaddl
cmc
pop
scas
mov
shrl
ljmp
push
das
sahf
sbb
cmpsb
and
sbbb
pop
jns
lret
sti
mov
xchg
mov
pop
add
or
out
pop
outsb
jne
test
xor
les
repnz
pop
pop
fdivl
xor
movsb
cli
in
sub
into
adc
test
xchg
pop
cmp
lahf
pop
cmpl
xchg
pop
jecxz
lods
cmp
lahf
jg
xchg
popaw
mov
hlt
mov
stc
repz
test
shl
xchg
loopne
xchg
or
orb
jg
cld
mov
jnp
jge
cmp
jl
lret
out
lahf
outsl
inc
lahf
lahf
mov
icebp
cli
repnz
in
pop
fdivr
mov
and
jge
or
mov
aas
dec
xlat
mov
test
fcmovnu
pop
mov
xorl
jns
jno
mov
xor
xchg
pop
jns
xchg
rorl
fwait
push
xchg
pop
aas
cmp
xchg
xchg
and
cmp
add
mull
gs
cmp
stos
repnz
mov
pop
sub
mov
mov
jns
sarb
andb
sub
aam
inc
xchg
jmp
leave
stc
repz
mov
jo
xchg
xchg
push
je
mov
mov
sbb
cmp
pop
pop
popa
xadd
mov
jbe
sbb
sbb
into
rcrl
dec
jne
and
pop
insl
stc
repz
add
stos
sbb
sub
pop
aas
jg
cld
mov
and
sahf
flds
push
dec
ds
fsubl
xchg
push
in
lock
pop
fwait
cs
inc
ja
add
sub
mov
jnp
fdivrl
ffreep
ljmp
xchg
dec
sahf
aas
adc
push
in
inc
jmp
jns
pop
sahf
adc
icebp
bnd
pop
jmp
jmp
cmpsl
repz
in
push
xchg
cmc
and
out
repnz
movsl
imulb
and
xor
sarl
enter
mov
ds
shl
dec
jge
stc
repz
daa
or
gs
enter
push
or
call
mov
mov
cltd
scas
adc
pop
jle
insb
push
sub
mov
stc
inc
push
ss
jmp
jo
fnstsw
mov
pop
jbe
sbb
cs
imul
test
jge
in
lahf
aas
jg
and
lock
pop
mov
shrl
jge
lcall
subl
and
movups
fwait
mov
cmpsb
ret
dec
pop
push
xbegin
xstore-rng
cmpsl
inc
lahf
xchg
push
fsubrp
push
or
cwtl
mov
push
pop
jns
jp
loop
inc
mov
push
in
xchg
movl
mov
fistl
out
pop
or
jmp
pushf
sub
add
add
call
movsl
xor
jb
cli
loope
dec
clc
jnp
adc
lret
popa
mov
out
cmp
scas
mov
cs
pop
notb
pop
push
cmpsl
or
out
lret
jo
fdivr
adc
cld
stc
repz
push
xlat
push
mov
mov
push
addr16
lahf
aas
jg
sub
rcl
sbb
shlb
cli
shl
out
repnz
adc
lahf
pop
pushl
scas
aad
lahf
jnp
dec
ljmp
xor
aas
repnz
push
incl
mov
lahf
jg
cli
dec
sbb
xor
fcomps
pop
mov
jmp
repz
jnp
popa
aas
jg
cld
push
inc
pop
rorl
outsb
ljmp
and
stc
pop
lods
xchg
xor
loop
repnz
int3
mov
inc
outsl
sbb
xchg
lock
mov
popf
stos
popa
repnz
and
repz
jmp
xchg
insl
pop
or
jl
cld
lds
stos
out
mov
mov
jg
scas
lret
fwait
mull
ss
xchg
jle
ljmp
fimuls
in
push
iret
lahf
aas
jg
jne
dec
lcall
inc
add
enter
xchg
inc
xchg
xchg
iret
popa
pop
push
cmp
out
rcrb
scas
aad
jnp
cld
stc
repz
lahf
mov
sahf
sbb
hlt
loope
imul
mov
aas
jg
je
aas
test
loop
xor
jb
lret
out
mov
push
cld
push
in
mov
std
adc
mov
aas
push
lret
mov
pop
xor
inc
inc
scas
mov
xchg
sub
loope
pop
and
mov
int3
in
add
scas
mov
mov
cmpsb
push
jecxz
cltd
leave
and
sbbb
sub
loope
scas
cld
stc
repz
stos
inc
jl
call
mov
pop
iret
xchg
ja
jl
mov
jecxz
pop
lahf
adc
ror
aas
lock
sti
into
fs
dec
loope
mov
repz
ror
test
sub
mov
rcrl
stos
sbb
repnz
jno
mov
les
push
xchg
push
push
mov
imul
imul
push
pop
mov
in
pop
mov
scas
mov
lea
sbb
mov
adc
mov
pop
fstps
repnz
mov
xchg
rclb
aas
in
push
mov
add
in
ja
sbb
pop
sbb
clc
push
and
jge
cmpl
je
outsl
sub
mov
clc
int3
sti
pop
nop
pop
iret
jmp
mov
push
out
call
rclb
out
bound
mov
in
dec
dec
lret
outsl
cmp
fucomi
cltd
scas
mov
aaa
dec
inc
xor
mov
mov
xor
out
aas
hlt
clc
pop
enter
xchg
data16
cld
stc
repz
mov
sbb
jp
xlat
mov
cwtl
ret
adc
cmp
pop
fistl
hlt
lret
ret
jmp
popa
repz
outsb
fidivs
inc
xchg
mov
cld
stc
out
mov
es
fldl
scas
adc
into
fwait
push
hlt
in
iret
xor
push
cmpb
xchg
xor
cld
stc
xchg
fwait
cmc
push
lea
mov
lahf
aas
jg
dec
fimuls
cmc
mov
stc
repz
ds
mov
inc
lods
bound
sbb
cmp
pop
jle
cld
push
filds
fnstsw
pop
jns
iret
pop
out
mov
cmp
sbb
test
xchg
push
pop
cmp
fcompl
jns
pop
lock
pop
and
cli
sbb
sbb
in
add
test
mov
into
mov
or
test
aas
mov
out
sahf
cmpsl
xchg
out
xchg
push
sahf
mov
imul
ficomps
ja
das
paddq
jo
nop
pavgw
jmp
pop
jns
fisttpll
mov
adc
js
jp
xor
mov
dec
out
dec
pminub
push
pop
jns
push
cmc
and
pop
mov
xor
sub
sarl
push
adc
add
xlat
xchg
cli
enter
rcrl
movsb
xchg
int3
fdivl
cld
mov
sub
mov
aas
adc
pop
inc
idivb
jg
or
inc
movsb
xchg
dec
lret
jns
das
dec
xorl
loope
in
push
ret
cltd
inc
sub
mov
adc
xchg
push
pop
push
adc
shll
ljmp
pop
mov
stc
xor
or
xor
lret
dec
sbb
lods
and
pop
pop
cld
stc
xlat
sbb
fisubrl
mov
xchg
xchg
js
stos
in
jle
cld
mov
sahf
lret
sbb
cmp
sti
in
ja
cmc
dec
iret
cltd
and
dec
xchg
push
pop
jns
adc
mov
repz
in
scas
in
add
cmp
sub
jns
xchg
push
push
push
int
add
pop
jmp
jnp
sbb
or
scas
pop
mov
lods
sarl
pop
scas
mov
push
ret
icebp
daa
sbb
mov
imul
xor
push
xor
fidivrs
stc
mov
stos
add
aas
sub
jns
xchg
push
sub
dec
outsl
sub
cmp
stc
repz
jge
insl
pop
mov
pusha
mov
fildl
cld
push
jne
mov
mov
xchg
ja
cld
sahf
lods
mull
shll
sti
jb
jns
popa
dec
xchg
mov
mov
negb
scas
and
test
in
imul
mov
mov
push
rclb
jg
jnp
sbb
scas
xor
mov
cld
stc
repz
dec
fs
xchg
cmp
mov
mov
mov
lahf
or
ja
pop
shrb
xchg
mov
cld
fprem
movl
sub
push
pop
jle
or
bound
cwtl
push
out
test
shl
jo
jle
cld
stc
push
ret
imul
scas
icebp
and
pop
xor
imul
push
out
jge
cld
pop
inc
mov
pop
xchg
sub
repnz
push
pop
dec
int
outsb
xor
jbe
adc
jb
outsl
movsb
fs
pop
cmp
les
jns
in
pop
push
push
cltd
lret
sbb
jl
jp
aas
add
push
or
cmp
jns
ljmp
mov
daa
push
cmpl
lret
xchg
push
jne
rolb
icebp
mov
lret
iret
mov
inc
idivl
pop
rorl
aas
ljmp
sbb
mov
dec
sub
ds
xor
aad
xchg
pop
stos
lahf
lahf
shl
cmp
add
push
pop
jns
adc
add
in
in
test
sarl
jns
jg
ds
xchg
das
pop
or
rclb
dec
inc
cld
stc
repz
mov
dec
sarl
mov
lahf
aas
jg
add
fisttpl
cltd
out
cs
iret
pop
test
stc
repz
jns
in
push
insb
jbe
movsb
mov
inc
movsb
xchg
lds
inc
jge
stc
cmpl
repz
and
cld
or
out
arpl
arpl
dec
adc
pop
push
cmpsl
push
pop
jns
push
imul
push
out
jbe
subl
mov
mov
popf
cmp
lods
pop
pop
cld
push
inc
sub
test
out
lock
leave
addl
mov
repz
ss
cld
stc
xor
lods
int3
mov
jo
lahf
aas
jg
pop
jg
push
sbb
icebp
das
aas
aas
rorb
outsl
cmp
inc
jbe
test
dec
dec
test
dec
not
lret
mov
mov
ja
stos
ljmp
out
inc
dec
das
rol
push
pop
xchg
xchg
cmp
repz
add
iret
lahf
aas
jg
pause
mov
xor
lock
out
pop
out
scas
das
repnz
pop
adc
clc
decl
lock
dec
xchg
iret
cmpsl
stc
mov
fistl
stos
out
in
mov
cld
lock
fadds
pop
dec
sbb
sbb
pop
int
and
xorb
jmp
das
test
fists
aad
mov
repnz
dec
incl
xchg
lahf
jmp
imul
dec
outsl
aad
data16
sub
das
fistps
in
nop
dec
pop
ljmp
clc
jge
cmp
aas
ret
cmp
xchg
xchg
ret
push
pop
jnp
mov
loop
jbe
mov
popf
out
or
fsubrp
add
orb
push
pop
jns
push
hlt
fstpt
jb
cld
push
or
xchg
mov
mov
dec
stc
mov
xchg
push
jns
xchg
push
lods
fcomp
ret
and
out
nop
sarb
push
popf
sti
test
jg
lds
pop
in
jp
xor
inc
decl
std
addps
iret
sub
pop
jbe
out
shlb
dec
pop
lret
repnz
xor
mov
push
cmc
xor
aas
mov
andl
pusha
xchg
lret
lds
outsl
and
out
xor
icebp
xchg
ret
outsl
in
into
mov
scas
push
std
inc
repz
pop
add
orb
adc
scas
pop
cmc
jp
pop
sti
loope
mov
dec
sub
adc
das
iret
icebp
in
loope
mov
cmp
lahf
shl
scas
jmp
daa
or
fbstp
aam
pop
les
cmp
mov
mov
aaa
lret
das
aas
rorb
push
sti
jns
dec
sar
out
and
add
psubusb
sahf
adc
cli
sbb
cld
testb
fsubp
imul
adc
rclb
lcall
mov
jle
xchg
aas
mov
push
popa
test
sub
add
inc
out
dec
out
lahf
pop
mov
lea
push
insl
xor
fcomi
dec
jmp
repz
and
popf
sub
loope
adc
iret
lods
lock
lret
mov
fildl
call
in
and
decl
lfs
xor
lret
sub
aam
pop
xchg
mov
leave
push
icebp
fdivrl
xchg
add
call
sub
adcb
pop
outsl
jno
mov
pop
scas
mov
jne
sbb
mov
iret
pop
push
addr16
rorb
fsubp
iret
lahf
pop
xor
cmp
push
jp
sbb
cmc
dec
into
xchg
push
or
sub
stc
cld
cltd
ret
xor
cld
test
mov
mov
scas
mov
xchg
push
fsubrp
push
push
scas
cs
arpl
out
sub
push
pop
jns
lret
test
sbb
test
stc
xchg
hlt
in
jp
sub
out
insl
shl
pop
jle
cld
jno
repz
sbb
bound
ja
cmp
fnstsw
and
std
std
xor
xchg
das
out
incb
fisubl
mov
pop
mov
pop
xor
or
movsb
repz
popa
or
mov
cmp
mov
std
mov
xchg
daa
out
jb
into
xchg
ret
push
pop
fdivrp
inc
getsec
cmp
fstpt
divl
je
scas
mov
mov
sub
iret
pop
loopne
sub
out
jle
test
rcr
das
lahf
js
xchg
xor
stos
cltd
mov
ljmp
cmpsb
cmp
dec
jge
stc
repz
stos
or
xlat
out
dec
mov
stc
mov
lret
inc
scas
jbe
js
pop
scas
dec
sti
jnp
repnz
decl
pop
push
mov
lret
mov
idivl
xchg
sub
sub
mov
aas
mov
fdivrs
das
pop
stc
in
fiaddl
inc
mov
xor
sub
nop
lahf
test
cld
stc
mov
or
xchg
iret
pop
enter
iret
lahf
aas
jg
mov
sbbb
dec
hlt
lret
adc
repz
cmp
dec
jno
xchg
shrb
fldcw
test
pop
jb
hlt
push
out
lahf
aas
push
mov
imul
cli
shlb
test
out
in
lahf
mov
fidivrl
aas
dec
add
mov
rcrl
sarb
push
sub
cmpsb
jbe
cmp
ret
lods
lret
scas
mov
stc
push
in
faddp
aaa
pop
jnp
insl
in
mov
aaa
jae
incl
hlt
push
push
sbb
lret
ja
add
and
or
lret
mov
enter
adc
out
sub
push
xchg
xorb
lds
adc
outsl
loopne
movsb
or
inc
sar
cmp
stc
adc
in
push
cmp
jg
sbb
sub
cmc
cmp
iret
lahf
aas
xorl
popf
cli
std
aaa
push
jl
stc
repz
in
add
sbb
pop
jnp
clc
loopne
sub
jg
insb
mov
jl
inc
lahf
xor
std
iret
mov
xor
call
icebp
lret
out
call
jnp
push
out
inc
mov
pop
xor
xor
mov
push
sbb
push
mov
fsubrl
push
imul
xor
out
aas
test
test
pop
scas
mov
daa
mov
jg
mov
lret
filds
mov
dec
dec
mov
lret
out
pop
xorb
sbb
scas
mov
ds
pushf
rclb
push
loopne
xchg
jle
repnz
in
mov
xchg
sbb
sub
fildll
push
insb
ret
mov
xor
cld
fdivr
shll
lahf
mov
into
enter
mov
dec
push
mov
insl
repz
mov
sub
mov
cld
stc
sahf
outsb
shll
mov
inc
jecxz
xor
xchg
das
lahf
aas
mov
pop
inc
in
rcrl
out
movb
fsubrl
cmp
cld
stc
repz
out
test
mov
mov
sbb
mov
jle
repnz
jmp
sbb
movsb
fsubr
fsub
lret
andps
js
add
sub
out
lahf
inc
pop
std
mov
jo
inc
adc
and
fcoml
pop
ljmp
push
mov
sub
lcall
cli
mov
dec
jmp
jno
fisttpl
and
jns
fs
es
jmp
in
arpl
out
icebp
jno
hlt
clc
pop
add
sub
pop
in
mov
aad
cmpsb
pop
lret
fsubrl
pop
loope
stos
out
xor
push
pop
add
mov
js
out
lahf
ja
inc
stos
adc
cmp
dec
push
cld
stc
mov
iret
adcb
cmpsl
aad
push
jbe
lret
lahf
aas
sub
xor
icebp
cld
xchg
js
mov
sbb
mov
stc
mov
push
in
jmp
shlb
lahf
aas
scas
inc
popa
mov
xchg
stc
repz
outsb
push
cwtl
jb
adc
fistl
jge
xor
dec
popa
jmp
jnp
movsl
add
jns
xchg
and
inc
or
dec
push
lret
test
test
popf
mov
xor
stc
jo,pt
ljmp
xchg
int3
rcl
or
xchg
lahf
aas
jg
loope
or
push
jb
adc
in
mov
xchg
repz
lods
xchg
jmp
xchg
sarl
in
push
mov
shr
ds
push
pop
jo
jge
imul
pop
jns
push
push
push
sbb
xchg
pop
xchg
clc
jnp
lahf
ret
movsl
in
dec
jl
or
rolb
and
test
dec
cld
stc
repz
push
pop
lahf
jne
sub
mov
loope
lahf
aas
jg
jno
loope
popf
mov
jp
flds
in
lret
popf
push
and
dec
sti
data16
xchg
movsb
sub
lahf
gs
loope
pop
xor
cld
stc
repz
fmull
addr16
xor
cmp
lahf
aas
jg
dec
mov
push
pop
pop
push
repz
xor
aaa
mov
mov
jno
repnz
aas
jg
cld
movsb
loope
fisubrs
lcall
add
out
lahf
mov
or
pop
pop
mov
out
test
push
jae
es
test
dec
and
repnz
stc
xchg
out
ficomps
sub
ds
test
mov
jle
ds
jne
subb
push
dec
sbb
iret
lahf
aas
pop
sahf
out
cli
lret
imul
add
in
add
hlt
stos
aas
pop
dec
out
pop
test
mov
push
iret
sub
lods
dec
inc
mov
xlat
shrb
pop
xchg
mov
out
push
mov
or
push
dec
adcl
cmpsb
aaa
push
ror
xchg
push
pop
add
stos
pusha
rol
mov
iret
pop
cmc
adc
push
xor
subl
in
nop
xlat
jle
iret
push
repnz
das
push
pop
jns
clc
pop
jns
aam
sub
and
adc
cmp
cmp
lret
iret
scas
lods
lcall
inc
popa
scas
mov
adc
testl
add
int3
inc
sahf
pop
add
std
aas
pop
imul
fisttpl
gs
test
das
pushf
test
and
jns
test
mov
mov
pop
insb
dec
pop
jns
in
lret
insl
cmc
mov
js
jl
mov
jb
xchg
push
rcrb
rcll
popa
std
add
stos
sahf
test
aas
pushl
mov
cmp
iret
loopne
scas
fsub
pop
insb
lock
xchg
inc
add
pop
pop
jns
mov
stc
int3
aam
mov
test
in
lahf
aas
jle
cmp
inc
les
test
in
mov
sbb
cmpl
loopne
push
leave
sti
mov
jg
mov
imul
test
gs
sbb
sub
xchg
push
pop
jns
inc
jo
or
pop
addb
sbb
lret
stc
mov
loopne
fistl
hlt
sbbl
cmp
jmp
add
xchg
mov
lahf
adc
insl
or
inc
jmp
dec
dec
or
pop
xchg
cmp
iret
jl
fidivrl
add
mov
pop
inc
call
pop
mov
cld
stc
repz
mov
shlb
and
lods
push
popf
ret
pop
jns
pop
adc
fwait
outsl
cmc
rclb
sti
repnz
mov
inc
pop
fildll
cmp
mov
pusha
inc
test
das
add
clc
mov
mov
jb
ret
mov
fdivrp
dec
popl
mov
cli
and
ret
or
sbb
mov
jg
movsl
and
jg
push
adc
mov
iret
das
fisubs
loop
ficompl
dec
mov
mov
push
push
mov
push
repnz
mov
ljmp
xor
push
das
scas
mov
frstor
mov
test
pop
jg,pt
push
jae
iret
loopne
sbbl
jne
bswap
shrl
ret
sbb
mov
dec
jbe
in
push
dec
sbb
je
mov
push
dec
subb
xor
sub
xchg
rorb
loop
cmp
mov
dec
repz
data16
lock
loop
xchg
into
out
movsl
xor
data16
pop
rol
add
inc
jae,pn
arpl
in
push
fnstsw
clc
push
in
ljmp
cwtl
int3
imul
ds
sub
sti
repnz
test
std
orl
cld
dec
cli
adc
repnz
and
fsts
shl
fdivrl
rcrb
aas
jg
jle
or
adc
or
js
cmpsb
in
fadd
push
shl
out
pop
sbb
adc
push
add
pop
jns
imul
pop
loop
out
mov
xchg
push
add
jmp
lods
ret
jge
stc
xor
daa
inc
xor
cld
sti
inc
pop
fisubrs
sbb
into
in
pop
dec
xchg
mov
lods
iret
out
fcmovbe
gs
repnz
mov
stos
xor
dec
xchg
aas
repz
sbb
sbb
pushf
movsb
cli
enter
sti
repnz
fistl
push
das
or
fs
subl
mov
popl
outsb
cmp
repz
imul
cmpsb
test
add
mov
push
xchg
add
xchg
lahf
aas
push
jns
cwtl
mov
jp
cmp
jb
adc
and
test
rcrb
pusha
les
cmp
jl
jl
adcb
movsb
hlt
incl
adc
dec
int3
out
lahf
pop
push
stc
jb
sub
push
add
repz
in
pop
int
push
add
cli
outsb
iret
lahf
aas
jg
addr16
cld
jb,pn
or
cmp
repz
jnp
xchg
inc
shll
pop
mov
dec
push
cmpsb
push
mov
jo
ljmp
pop
cmp
adcl
scas
sti
cltd
xchg
rcrb
fildll
scas
mov
inc
mov
cmpsb
shlb
sbb
jle
sbb
or
sub
xchg
ja
and
push
out
ljmp
mul
pop
test
add
pop
adc
add
in
push
in
adc
fisttpll
pop
push
fisubrs
addr16
adc
lret
xchg
xor
loopne
es
adc
mov
lds
in
push
pop
and
cmp
ljmp
or
js
andl
mov
out
rorb
pushf
pop
or
les
icebp
jg
cld
stc
xchg
int
ljmp
xorb
jmp
cmp
iret
lahf
aas
xchg
jnp
test
pop
and
pop
mov
inc
dec
dec
add
aad
lahf
aas
scas
dec
xchg
jecxz
std
mov
inc
jne
repnz
repz
aas
or
sbb
adc
jmp
jle
cld
sahf
and
fcompp
pushw
mov
lahf
aas
jb
cmp
ret
xchg
dec
mov
icebp
ret
adc
in
ja
aad
aas
lahf
clc
repnz
push
fs
lds
mov
cmc
popa
fucomip
or
out
or
lahf
aas
mov
sbb
fwait
jp
mov
das
or
jl
in
jne
push
cmp
jne
aas
ss
mov
sub
scas
sub
pop
sbb
lret
ficomps
aam
xchg
pop
mov
sbb
orl
repnz
bound
and
test
aaa
mov
sti
addr16
hlt
pop
sbb
xor
sbb
sbb
adc
fs
pop
mov
jecxz
mov
adc
lock
jle
xchg
pop
out
out
mov
frstor
sub
ljmp
sbb
adc
ds
push
enter
cmpb
incb
jle
in
ss
jg
pop
and
test
iret
std
ss
mov
sub
cmpsb
stc
mov
cld
mov
add
inc
dec
push
aas
xchg
xchg
repz
lahf
jo
or
icebp
push
cld
stc
dec
sub
jle
mov
into
and
iret
lahf
aas
loopne
fs
ljmp
rep
pop
add
pop
rcrb
or
popa
push
sbb
lahf
aas
jg
push
sbb
xchg
fsub
cmp
in
and
test
loop
mov
push
pop
pop
jns
adc
das
mov
ja
lods
jl
adc
loope
fisttps
add
jns
out
dec
jmp
scas
lock
mov
jae
mov
sbb
int
repnz
js
into
pop
dec
hlt
pusha
pop
js
pop
in
idiv
adc
aad
pop
xor
or
dec
adc
mov
mov
sub
aad
mov
imul
push
pop
jbe
call
sbb
lahf
aas
jg
lcall
ret
push
dec
addr16
jmp
in
xor
test
dec
add
xchg
cmc
lret
adc
scas
es
sti
dec
lcall
insl
cld
or
out
or
mov
lret
sub
mov
cmovo
add
incb
iret
lahf
pop
ljmp
and
inc
mov
repnz
in
adc
js
iret
push
sahf
dec
add
xchg
xchg
repnz
pushf
sub
sub
or
fs
mul
lret
mov
addr16
cmp
pop
cld
fnclex
cld
ret
jno
push
sahf
imul
mov
or
sbb
pop
fidivrs
and
fisubl
ss
xchg
ja
mov
or
test
pop
mov
and
pop
in
adc
pop
jns
sbb
or
push
fwait
xor
pop
jns
in
add
sbb
jl
push
add
xor
mov
cmpsb
xchg
lcall
in
jne
imul
adc
icebp
aad
pop
sub
lret
xchg
push
dec
cmovo
push
mov
jae
fbld
ret
sarl
ljmp
push
jg
in
adc
mov
and
pop
push
addr16
xchg
ret
in
mov
cmp
stos
cli
cld
xor
or
push
jo
sbb
cmp
adc
lahf
aas
aas
push
jle
cltd
mov
repz
sbbl
or
pop
sub
jle
popl
jb
push
sbb
insl
fsubs
clc
repnz
outsb
sub
nop
js
repz
rclb
add
leave
or
push
mov
dec
push
scas
ds
xchg
insb
out
iret
lahf
aas
aaa
add
sarl
cld
stc
repz
push
pop
jnp
fidivrl
addr16
cmp
mov
dec
mov
movsb
jmp
incb
iret
lahf
jns
sbb
cmp
xchg
pushf
push
pop
dec
fidivrl
cld
stc
inc
inc
dec
dec
sub
and
mov
iret
lahf
aas
or
stos
sub
jg
in
cld
stc
repz
pop
push
inc
lcall
jbe
gs
out
decb
jne
imul
mov
jg
or
jo
das
or
dec
and
loope
iret
lahf
aas
inc
pusha
xlat
cld
inc
repnz
outsb
cs
jl
stc
repz
xchg
mov
sub
stc
pop
call
lret
or
add
cmp
xchg
xorb
adc
out
jbe
aaa
imul
daa
in
pusha
add
jg
dec
outsb
xchg
cmpsl
jns
xchg
xlat
xchg
inc
xor
mov
dec
jl
adc
pop
into
pop
div
repnz
jmp
cmp
jbe
jnp
xchg
sub
mov
mov
push
stos
aas
mov
jle
and
mov
and
out
lahf
leave
sbb
js
xor
mov
push
loop
sub
incl
sbb
loope
sub
popa
test
lea
out
and
mov
xchg
iret
sbb
repz
test
scas
movl
jb
mov
mov
in
das
stc
js
add
mov
xchg
cmp
jb
push
int
imul
outsl
loope
jp
mov
cmp
cltd
es
sbb
jg
cld
ret
stos
lcall
repz
mov
mov
dec
clts
mov
outsb
pop
push
jmp
mov
fucomp
pop
xchg
inc
xchg
cmp
xor
repnz
das
lods
xlat
xchg
test
in
out
pop
insb
sti
jbe
pop
xchg
sti
call
or
in
push
fdivrp
repnz
sbb
mov
or
sahf
jmp
jg
pop
and
mov
repz
aaa
mov
fildl
and
aas
jg
cld
push
ljmp
xor
jns
cmp
es
lahf
cltd
cmp
cli
scas
xchg
std
sub
es
mov
repnz
push
dec
mov
push
lahf
aas
jg
data16
andb
xor
xchg
jo
lret
mov
dec
xor
test
test
jle
les
cli
in
addr16
std
jecxz
jns
dec
xchg
jg
cld
subl
or
out
lahf
aas
push
sub
adc
lods
das
in
mov
in
aam
push
repz
shl
int3
mov
and
insl
lods
mov
outsl
xchg
sub
push
loop
mov
sub
jg
adc
push
push
jmp
ror
lahf
fwait
mov
jo
jp
out
inc
sub
out
lret
sub
bound
cld
stc
repz
mov
std
xor
clc
out
sti
into
fistpll
jbe
lahf
aas
jg
sub
jns
fnstcw
push
add
in
mov
scas
dec
enter
adc
repz
scas
push
std
jns
xchg
push
fsub
test
cwtl
sub
jge
xchg
push
pop
sbb
add
sbb
cmpsl
push
scas
arpl
mov
mov
adc
cld
xor
add
xchg
ja
jae
in
out
dec
xor
int
xchg
pop
push
les
dec
sub
lret
pop
std
jb
push
insb
jl
popf
or
xor
sbb
dec
aaa
push
ja
loop
push
into
cwtl
sbb
adc
mov
stc
jg
pop
fdivrp
in
notb
icebp
repnz
pushl
std
loop
das
ja
adc
xor
jmp
push
push
push
pop
sub
xchg
push
pop
jns
cmp
xor
add
sub
mov
pop
cmp
inc
test
push
in
mov
push
pop
gs
das
lcall
jns
xchg
pop
or
mov
mov
in
ja
mov
in
or
lret
inc
std
mulb
inc
ja
js
xchg
push
pop
jns
iret
sarb
pop
imul
stos
bound
jmp
xlat
jae
ret
add
repz
dec
int
mov
xchg
sbb
stc
cmp
jmp
mov
inc
cltd
sbb
push
jmp
mov
mov
mov
in
ja
adcl
sbb
mov
xchg
push
pop
or
icebp
adc
stos
lcall
jl
mov
cmpsl
mov
cmp
jle
jecxz
hlt
add
xor
mov
ss
ds
or
pop
jns
movsb
add
lahf
xchg
cmp
pop
jns
xchg
aas
aad
sub
inc
divl
jp
rolb
ret
fimuls
jge
fisubs
das
jbe
xchg
push
fdivrp
jg
cmpsl
repz
rclb
je
cmpsb
jb
mov
enter
or
aas
mov
iret
mov
or
repnz
stc
repz
icebp
mov
mov
movhps
inc
cmc
inc
pop
jle
push
sub
sub
enter
mov
lret
out
adc
jge
fsub
xchg
ja
sub
cs
xor
sub
jnp
sub
fists
adc
fidivs
push
jge
call
and
cmpsl
mov
lea
and
mov
jo
jg
inc
lock
jg
cld
mov
stos
adc
leave
cwtl
sbb
in
ja
imul
fnsave
lret
xchg
push
pop
push
fdivr
lods
jge
push
lahf
or
mov
jns
add
push
dec
icebp
movzbl
test
xchg
hlt
in
loope
xchg
cmpsb
icebp
cmp
adc
pop
jns
arpl
pop
test
idivl
in
xchg
dec
popf
inc
or
lods
ja
imul
out
jle
sti
xchg
push
pop
mov
mov
xchg
test
sub
add
mov
in
mov
xchg
ret
mov
cmp
xchg
jne
aas
dec
xchg
sahf
ret
das
movsl
pop
ds
aaa
mov
adc
aas
fdivrs
int3
mov
sbb
ret
mov
das
scas
push
cmpsl
sarl
es
repz
sahf
test
inc
add
xchg
sti
mov
pushf
sbb
pusha
mov
in
test
scas
mov
jmp
mov
iret
jns
repnz
jg
lods
mov
fs
outsl
jno
jns
pop
scas
inc
aaa
fdivl
test
push
popl
pusha
and
dec
pop
pop
add
xchg
mov
lret
xchg
ja
jnp
cmp
cmc
sbb
popa
pop
jns
fildll
dec
lea
andb
lds
add
aam
cld
fcompl
add
and
xchg
setnp
sti
aad
pop
out
push
stc
add
xchg
mov
ja
rolb
das
aas
jg
scas
mov
sbb
or
lahf
out
iret
lahf
mov
jbe
movsb
sbb
stc
repz
ficompl
je
mov
in
lahf
aas
jg
pop
loope
jl
sbb
cmpsb
sbb
cld
stc
repz
insl
cmp
rclb
andb
mov
aas
jg
xchg
les
shrb
adc
repz
mov
lea
and
loop
jg
cld
mov
loop
sti
sub
sti
mov
dec
icebp
dec
xchg
push
div
enter
fucomi
fs
lds
sti
dec
sub
sbb
ljmp
repnz
jecxz
inc
and
dec
mov
nop
pusha
icebp
js
xchg
sub
ret
xor
lea
pusha
outsb
shrb
stc
repz
sbb
mov
and
fimull
and
repz
divl
or
je
jne
mov
mov
cmpsb
out
dec
out
xor
in
ja
sti
add
jle
mov
xor
pop
lret
push
cmp
icebp
cmp
push
fdivrp
jnp
test
xchg
sub
pop
pushf
add
jg,pt
dec
cs
aam
cmp
cmp
xchg
gs
lret
shlb
scas
lea
cld
or
repz
push
jmp
in
adc
fs
outsl
push
fmuls
mov
mov
add
add
outsl
into
aaa
pavgw
sbb
cs
fsubr
cmpsl
andb
test
or
out
cmp
cmpsl
testl
mov
mov
cmp
mov
iret
lahf
aas
mov
and
jne
loope
cltd
outsl
pop
jl
test
sub
jnp
imul
xor
mov
out
aas
jg
pop
mov
xor
dec
shlb
repz
sbb
lea
jge
push
pop
push
cld
into
inc
xchg
or
es
sbb
mov
ljmp
sub
movsl
fbstp
int3
in
fcomp
mov
test
scas
mov
leave
jb
bound
stc
xor
decb
test
add
mov
mov
adc
push
inc
or
push
in
push
fisubrs
mov
ror
test
xchg
push
pop
jns
mov
inc
cld
loope
cld
repnz
repnz
lret
ljmp
push
repz
scas
mov
scas
sbb
movsl
lret
fs
jmp
or
mov
je
jl
add
setae
popl
data16
cld
sti
std
outsl
xchg
inc
sub
loop
aam
lahf
aas
jg
jle
sbb
enter
cltd
jns
cwtl
test
mov
fbld
jecxz
inc
std
call
push
daa
pop
cmp
fiadds
pop
add
mov
xor
add
sub
or
popa
sub
or
repnz
add
cli
mov
cmp
fists
mov
out
and
popf
mov
js
test
sbb
das
jns
xchg
push
orb
fildll
in
push
pop
arpl
push
inc
aam
mov
out
or
jb
movsl
sarl
mov
push
aas
leave
mov
sbb
xor
lret
sub
loope
cli
cmp
in
xchg
sub
jns
mov
int
and
or
mov
dec
push
mov
pop
cltd
mov
sub
sub
fidivrs
and
aad
cld
pushf
movsb
stos
dec
xorl
inc
jnp
cmpsl
lcall
and
add
stos
mov
sarl
push
push
ret
dec
sbb
cld
add
sub
lahf
lret
fsubrp
mov
xchg
in
lahf
aas
clc
inc
mov
sub
cli
ljmp
loopne
dec
mov
in
orl
cmp
out
daa
adc
pop
jns
xchg
adc
rcrb
sbb
pop
lahf
pop
push
pop
popa
sub
jo
and
inc
loope
iret
push
out
pop
sub
cld
repnz
repz
mov
orb
mov
pop
jle
cmpsl
or
jnp
xor
jp
stos
es
fistpll
xor
nop
jle
jae
stc
scas
mov
ja
cmpsl
out
loop
pop
add
icebp
loop
in
enter
sbb
imul
xchg
test
testl
sbb
pop
jle
lahf
pop
lret
lahf
aas
jg
mov
jge
mov
cmpsb
push
jle
rol
loop
sbb
inc
push
imul
das
scas
mov
lret
out
mov
mov
movsb
or
les
add
std
xchg
xor
ficoml
jmp
or
cmc
in
mov
lcall
pusha
jl
stc
mov
lods
pop
mov
xchg
mov
ds
out
roll
cwtl
xadd
fdivs
lock
lret
loopne
aaa
mov
sahf
and
cld
stc
xorl
fucom
hlt
shll
adc
loope
icebp
mov
in
lahf
aas
mov
xor
jbe
cli
jmp
inc
lea
and
icebp
sbb
scas
xchg
pop
movsl
cli
addl
cs
aas
inc
cmp
pushf
pop
mov
cmp
xchg
ficomps
pop
dec
xchg
iret
pop
xor
mov
sub
into
dec
loopne
cwtl
lods
shr
mov
repnz
loopne
decl
dec
sbb
add
adc
fdivrs
ljmp
inc
add
call
jb
repnz
add
scas
out
cmc
rcrl
sub
mov
dec
dec
add
bnd
jecxz
pusha
cmp
sub
aas
enter
mulb
xor
xor
repnz
arpl
pop
inc
and
xor
cmp
xor
repnz
js
xor
sbb
jae
repnz
cmp
xchg
aas
aas
mov
push
mov
pop
shll
loop
lods
insl
rcr
repz
pop
or
and
dec
sbb
enter
stc
stos
cld
ja
ret
fs
inc
adc
and
or
dec
push
lahf
push
in
mov
jnp
fldcw
push
mov
pop
jnp,pt
xlat
cmp
jmp
adc
clc
hlt
imul
subl
jle
addr16
and
fwait
in
push
push
nop
cmpsl
lds
jmp
add
aaa
push
mov
mov
and
daa
or
ds
ficompl
jg
cld
stc
dec
repnz
repz
mov
adc
lea
inc
mov
or
dec
add
mov
mov
movsl
in
add
mov
mov
ja
pop
out
call
xchg
inc
mov
lahf
lods
mov
xchg
inc
mov
push
dec
into
sti
sti
sti
repnz
xor
xchg
or
mov
fs
lahf
lret
mov
or
dec
mov
lods
cmpsl
sub
push
fs
jae
lods
mov
push
dec
adc
push
les
int
jg
sbb
lret
sub
shr
outsl
mov
jp
repz
aam
inc
adc
imul
jb
xchg
fsubs
ret
push
sub
mov
iret
mov
push
movsb
adc
pop
or
mov
inc
negl
pop
jecxz
push
jae
sahf
ficompl
mov
rcr
syscall
rclb
mov
xor
push
jge
or
jno
aas
jg
mov
data16
pop
sub
pusha
cmpsl
mov
loop
sbb
cmp
es
nop
lock
pushaw
lods
dec
mov
cs
aas
js
adc
repnz
out
nop
jle
test
lret
cld
stc
jne
loopne
ret
mov
sarb
out
lahf
aas
mov
pop
daa
lea
cld
stc
repz
out
sub
push
xchg
xchg
push
fsubrp
notl
popa
dec
jmp
sub
add
add
add
imul
pop
mov
cld
stc
mov
dec
push
cld
sbb
pusha
sub
lahf
aas
jg
cmp
mov
imul
movsb
repz
add
sub
push
xchg
cld
stc
mov
jmp
aam
or
xchg
aas
incl
and
cmp
inc
jp
out
lret
mov
xor
pop
imul
fists
stc
mov
lret
gs
xchg
mov
pop
subl
adc
sub
pop
mov
jns
lods
out
ljmp
mov
mov
loop
cmpsl
xchg
push
pop
jns
inc
iret
in
and
xor
rolb
jns
xchg
fwait
imul
in
es
xor
jns
xchg
push
xchg
mov
or
shl
aam
push
pop
shrl
sti
xor
mov
mov
xor
subb
outsb
pop
jmp
shrl
cmp
jns
xchg
ja
sub
pop
cld
shrb
dec
pop
sbb
or
ret
pop
xchg
or
ficomps
push
lret
cvtps2pi
adc
mov
iret
ret
into
lds
pop
xchg
adc
std
repnz
xor
rorb
mov
jns
xchg
push
mov
fidivl
mov
dec
int3
loop
das
push
pop
and
push
xchg
mov
jns
xchg
xor
and
repnz
iret
mov
or
adc
in
lds
daa
inc
cli
cmp
jg
mov
into
pop
inc
push
mov
daa
repz
sbbb
insb
test
pop
insl
inc
in
push
pop
cmpsb
int
loope
out
adc
or
push
pop
jns
sub
sub
cltd
jnp
loope
aas
push
pop
jns
jb
loopne
mov
pop
pop
push
mov
cmp
xchg
lcall
insb
jle
repz
std
repnz
jle
pop
out
out
and
idivl
cmp
cld
adc
mov
cmp
repnz
sbb
fs
jmp
xchg
loop
das
jg
cld
ds
fstps
pop
jp
loope
cmp
dec
push
add
mul
fs
pop
jle
mov
aas
mov
aam
in
ja
or
xchg
mov
push
fidivrs
and
scas
push
in
insl
fldl
pop
pop
pop
jns
in
sahf
mov
xchg
sub
push
decl
pop
imulb
cmp
out
cmp
mov
pop
pop
nop
scas
call
mov
mov
scas
adcb
test
ja
mov
in
repz
iret
mov
pop
lods
inc
data16
cld
stc
repz
adcl
lods
ljmp
xchg
mov
in
pop
out
mov
iret
lahf
aas
dec
push
ljmp
cmp
test
cmp
sti
fmul
dec
xchg
push
pop
jns
xor
int
cmp
fiadds
push
pop
jns
and
dec
fidivs
xor
xor
add
xchg
xchg
pop
or
enterw
out
pop
mov
ds
mov
mov
test
jns
adc
and
jg
xchg
fstl
pop
insl
rorb
push
pop
jns
int3
inc
out
iret
and
inc
push
ss
lock
xchg
test
add
add
out
xchg
pop
adc
push
jno
add
jle
sti
repnz
xlat
das
xchg
pop
outsl
sbb
stc
adc
jne
repz
test
mov
subb
or
insl
sarb
xchg
aas
mov
inc
dec
das
adc
cmp
ficomps
das
or
sub
lahf
aas
aas
ret
mov
mov
aad
gs
xchg
iret
adc
sub
dec
sub
sub
pop
add
mov
clc
repnz
lds
pop
ret
lahf
aas
jg
xchg
inc
pushl
cmp
in
iret
sahf
or
sbb
sbb
cvtps2pi
jg
outsb
fcmovne
sub
xor
cli
push
inc
pop
rorb
pop
in
push
fdivrp
idivl
xor
dec
xor
sbb
pop
jge
outsl
out
jmp
push
cli
outsb
mov
jns
jne
unpcklps
repz
mov
lock
xor
jns
popf
jle
sti
mov
dec
stc
push
das
lret
xchg
push
pop
push
push
pushf
leave
or
or
pop
mov
push
xorb
mov
xor
mov
fstps
pop
jns
lret
adc
pop
pop
cmp
jg
adc
mov
add
loop
mov
xchg
xchg
push
mov
sbb
push
mov
das
ja
mov
sti
pop
adc
subl
aas
nop
mov
ss
icebp
push
pop
sbb
cltd
test
dec
add
in
cs
and
or
mov
jae
mov
fbstp
orb
mov
in
pop
in
das
push
mov
mov
jmp
ret
repz
lret
cli
fcmovb
mov
inc
sub
repnz
movsb
jl
mov
nop
dec
repz
lahf
pop
movsl
call
dec
js
into
push
jle
cld
stc
mov
inc
je
mov
mov
mov
out
pop
mov
shlb
and
std
pop
jp
call
pop
mov
sarl
dec
fwait
sub
lret
lahf
aas
mov
packssdw
enter
jl
in
jl
lret
cltd
lahf
inc
ret
cmp
mov
loopne
jne
idivl
fisubs
repz
add
aad
xchg
repnz
xor
insb
repz
sbb
daa
fwait
mov
cld
stc
sbb
add
xor
jnp
imul
fwait
in
mov
jne
pop
lret
mov
mov
orl
cmp
lahf
aas
jg
mov
jg
idivl
cli
sub
sub
aam
iret
xor
inc
out
inc
scas
sub
stc
repz
sub
inc
mov
cld
popa
dec
mov
lahf
aas
jg
mov
fwait
xor
sub
and
out
lcall
xchg
shlb
js
sub
mov
fs
decb
dec
sarl
sub
in
push
pop
les
sub
mov
or
mov
scas
cmovno
cmp
add
push
mov
fmuls
adc
icebp
out
pop
fstpl
ret
cmp
lock
xchg
ja
loope
and
adc
ljmp
repnz
xchg
and
sub
jle
aad
push
str
dec
jnp
mov
out
mov
cmp
sub
lret
repnz
dec
sahf
inc
xor
sbb
push
dec
pop
jle
repnz
add
fldl
push
iret
lahf
pop
sbb
fcmovnbe
mov
repz
push
fsubr
stc
pop
mov
out
adc
mov
jge
push
adc
cs
arpl
and
xchg
mov
ljmp
cs
ja
loop
pop
dec
pop
jns
cmp
push
mov
dec
xchg
dec
cld
xchg
ja
pop
inc
mov
inc
popl
fs
mov
or
je
sub
cld
out
cwtl
push
lock
and
sbb
in
or
lea
xorb
sub
push
in
dec
lock
scas
mov
cmpsl
cmp
jp
pop
ss
xor
lea
lods
pop
mov
mulb
jno
test
data16
cli
shrl
jnp
pop
imul
xor
sub
scas
xchg
lahf
aas
jg
sahf
sbbb
xchg
rorb
imul
jo
sub
push
jmp
or
inc
push
out
mov
push
in
test
lret
xor
dec
out
or
sub
xchg
push
pop
stc
jbe
enter
jmp
pushf
adc
or
pop
pop
jns
out
inc
sti
mov
sub
mov
gs
pop
lods
jl,pn
cld
inc
fimuls
or
ja
in
cld
push
mov
push
flds
es
lahf
aas
jg
lahf
fdivrl
out
add
andb
cld
stc
repz
into
cmpsb
xchg
mov
imul
jp
xor
aas
jg
iret
in
jle
adc
sbb
pop
mov
mov
outsb
sub
adc
pop
movsl
adc
sub
cli
jl
jo
pop
jns
mov
jno
stos
adc
add
xor
push
in
loopne
cmp
in
ja
fidivrs
fildl
dec
xor
iret
mov
mov
cs
lds
movsl
push
rol
lret
dec
lret
shll
repz
scas
in
jb
sti
xchg
into
add
mul
lahf
cmp
xor
outsl
and
pop
add
mov
push
inc
mov
clc
in
movsb
pop
lods
lret
mov
call
iret
popl
inc
daa
jle
sub
repz
inc
call
insb
xchg
lea
out
jns,pt
mov
xchg
sbb
pop
jae
loopne
sub
aaa
scas
xchg
aas
and
out
mov
lret
adc
mov
into
aas
add
stc
test
notb
push
adc
in
iret
popf
mov
xor
dec
pop
inc
shll
jg
inc
dec
fildll
jmp
popf
scas
mov
lret
jge
inc
fmul
out
imul
mov
mov
frstor
aaa
or
out
dec
clc
sti
pop
fsubrp
jg
push
iret
mov
sub
imul
jnp
mov
mov
ror
jmp
enter
cmp
mov
mov
out
movsb
sbb
scas
mov
xchg
sub
cwtl
icebp
cmp
mov
mov
mov
aas
aad
add
mov
clc
mov
sub
ja
or
sbb
jle
push
stc
mov
or
fbld
jns
daa
or
das
fists
add
decb
stc
mov
ret
add
incb
ficompl
mov
xor
mov
call
sbb
loope
mov
bound
push
std
jb
das
je
cmp
loop
dec
xchg
push
fimuls
adc
jo
jp
shl
nop
sbb
aas
mov
ret
mov
pop
pusha
xchg
ret
in
inc
sahf
push
adc
into
decb
in
pop
lcall
mov
inc
ja
out
mov
pop
jg
fisubrs
mov
jg
cld
stc
fwait
test
rorl
das
lcall
das
lahf
aas
xor
shll
mov
xchg
sahf
ds
mov
mov
adc
mov
or
fildll
scas
mov
cwtl
flds
xchg
add
cmp
scas
scas
stc
add
das
into
shlb
aas
jg
cld
pxor
adc
stc
lea
cli
jno
repz
lahf
fmulp
stc
in
popa
fsubs
rcrl
inc
inc
lods
lret
lahf
aas
jg
jne
shl
xlat
outsb
lds
lods
mov
jnp
push
push
cld
in
das
add
jmp
in
sub
ret
cwtl
fidivs
pop
cld
cld
cltd
cli
push
cmpsl
lahf
les
xchg
lea
sub
mov
inc
lret
test
mov
cmc
push
inc
lahf
divl
aaa
jp
dec
repnz
lret
sub
rcrl
pop
insb
clc
jle
jle
fisttpl
add
and
jg,pt
cld
stc
jb
fisttpll
sbb
xor
inc
mov
sub
stc
repz
mov
loopne
mov
shl
enter
jg
cld
adc
ds
lahf
mov
jae
fcoms
lods
pop
mov
out
sbb
mov
xchg
push
sub
mov
insb
and
add
cmp
ret
jle
jge
cmp
mul
cmc
sahf
rolb
dec
mov
call
es
pop
jns
hlt
sarb
add
xor
xor
sub
jg
test
push
adc
iret
lahf
aas
jg
pop
addb
sub
movsl
mov
pop
loope
cli
adc
ds
mov
jg
pop
orl
seto
scas
incl
iret
push
pop
jns
imul
push
xchg
mov
data16
jno
ljmp
xlat
dec
pop
adc
mov
out
xorb
into
mov
fcoml
ret
or
fistpll
lret
mov
dec
mov
xlat
jnp
scas
mov
xor
push
mov
inc
inc
cli
repnz
dec
adc
lods
pushf
add
inc
sarl
rcll
push
mov
ret
aas
pop
lods
adc
push
dec
push
push
jp
pop
ljmp
pop
xor
lds
rclb
enter
or
mov
jg
cld
push
movsl
inc
sahf
lods
inc
mov
and
test
int3
scas
fstp
xchg
lahf
stc
push
notl
jbe
jo
jno
addr16
std
jb
cmp
sbb
or
jg
fimuls
imul
outsl
imul
loopne
pop
jle
or
adc
jle
adcl
dec
fsubrp
mov
iret
lahf
aas
out
mov
cmpb
jge
faddp
pop
jmp
mov
mov
call
mov
scas
or
jge
enter
sbb
and
int3
mov
mov
in
fs
ret
push
jo
sahf
mov
mov
xorl
inc
cmp
dec
lcall
jg
push
cmpb
leave
push
mov
repz
nop
ret
rcrb
das
sub
xor
frstor
mov
sar
minps
imul
cld
jae
repz
xor
outsl
push
mov
add
sbb
iret
pop
mov
in
jp
cld
stc
repz
dec
les
mov
out
jns
cmp
stos
xorb
jg
pop
clc
scas
xchg
inc
mov
stos
pusha
test
mov
ss
dec
cmpsl
cli
repnz
in
lods
rorb
mov
lahf
jg
decb
insb
rcrl
jns
stc
repz
addr16
iret
sub
pop
int3
fwait
mov
repz
adc
call
out
nop
jecxz
dec
out
dec
sub
std
mov
push
scas
mov
pop
lock
push
aas
push
dec
dec
loopne
sub
in
cmp
dec
sbb
jp
add
xchg
mov
xchg
in
into
idivl
xorl
or
scas
andl
in
xchg
ja
sti
cmpsb
mov
clc
jae
in
pop
lock
aas
push
mov
sub
out
or
nop
pop
ret
mov
jmp
push
fnstenv
jno
sti
mov
test
mov
jg
ja
mov
pop
push
add
fnstsw
and
std
mov
out
lahf
cltd
stc
and
cmp
mov
mov
mov
push
shrl
nop
aad
in
ja
pop
aad
xchg
mov
jae
jno
cmpsb
pop
pop
lods
leave
adc
insl
push
iret
lahf
pop
push
out
mov
ja
jle
lret
lret
ljmp
js
fldt
scas
mov
pop
cltd
out
sbb
xor
in
pop
in
fsubp
xchg
cmp
and
nop
cmpsb
mov
lds
test
cmp
andnps
and
pop
cmc
test
repz
outsl
movsl
mov
cmp
inc
pop
out
scas
or
rorl
repnz
fistpl
adc
test
leave
or
out
lret
sub
aad
leave
mov
jns
sub
mov
xchg
clc
adc
jle
repnz
add
flds
pop
sub
sbb
cmp
jo
lea
repnz
mov
xor
push
js
out
sbb
mov
jmp
pop
jns
in
scas
xchg
das
lcall
clc
pop
testb
in
push
xchg
aaa
and
or
stc
orl
mov
cld
add
cld
scas
pop
pop
mov
fnstcw
ds
xchg
shr
push
hlt
mov
pop
pop
pop
stos
ja
into
dec
out
mov
fdivr
repz
pushw
inc
popa
lds
repnz
or
push
sub
scas
sub
pop
sbb
cmc
fstpt
xchg
inc
dec
pop
jle
out
or
jp
lret
mov
inc
bnd
lods
pop
dec
scas
mov
xchg
cmpxchg
pop
outsl
jb
jno
add
mov
sub
or
mov
es
insb
lret
mov
fcoms
mov
cld
into
loopne
jmp
inc
int3
ljmp
dec
lahf
fdivrs
inc
sarb
push
pop
jns
test
dec
aad
jb
cmp
dec
jge
in
test
dec
push
or
ds
cmpsl
xchg
xor
or
lea
and
test
mov
dec
jecxz
cld
mov
ret
aas
outsl
mov
jbe
stos
push
testl
xor
jmp
in
push
pop
or
pop
cltd
and
std
daa
adc
andb
lret
out
mov
cmp
idivl
outsl
cwtl
mov
inc
fisttpll
cmp
shl
lret
ljmp
outsl
test
mov
push
out
es
movsb
push
lret
jns
sti
in
push
pushf
sub
gs
or
movsb
pop
loope
mov
popf
cli
inc
push
sub
repnz
xchg
add
lock
lret
fs
sti
repnz
xor
mov
lret
mov
push
push
add
sti
div
divb
std
adc
cltd
aas
xchg
mov
add
add
xlat
adc
xchg
cld
inc
insl
cmc
addl
adc
in
arpl
fistl
xchg
xchg
in
adc
enter
mov
mov
in
cs
adc
cld
sahf
mov
mov
push
jno
mov
stos
sub
lahf
xor
cmp
in
jp
push
or
dec
sub
incb
fcomip
mov
int3
movsl
cld
std
xor
jne
jg
xchg
pop
aas
jg
and
out
mov
cmp
das
lahf
rorb
out
data16
mov
iret
lahf
aas
ja
loope
jnp
test
test
out
hlt
repnz
inc
jne
inc
das
xchg
aad
mov
jae
jg
push
dec
into
sbb
lret
sbb
lahf
aas
jne
in
xchg
or
imul
lds
push
push
push
pop
jns
pop
test
adc
jp
dec
sbb
mov
in
aam
mov
mov
and
hlt
sub
aaa
sbb
cltd
sub
fists
rcll
shrb
fwait
sahf
pop
push
xor
fs
fisttpll
stc
ds
inc
lods
xchg
push
fdivrp
jmp
pusha
mov
mov
lods
push
push
pop
jns
pop
xchg
das
push
ficompl
lods
divb
jns
xchg
mov
jne
loope
jmp
loope
mov
jns
xchg
push
lods
insb
cmp
mov
gs
in
push
pop
xlat
test
sub
mov
out
jb
rol
mov
outsb
inc
cmp
repz
mov
xchg
fsubs
adc
outsl
mov
bound
mov
adc
rcl
jmp
cld
stc
cmpsl
push
int3
out
test
jo
push
pop
mov
fmull
aas
pop
push
sub
arpl
xor
stc
stc
repz
pop
or
mov
push
fdivrp
in
push
xchg
out
es
pushf
mov
cmc
in
aad
loope
xchg
jmp
cld
addr16
dec
sub
cmc
mov
mov
lret
out
lahf
mov
xchg
push
cld
stc
mov
sbb
call
pushf
in
int
mov
aas
jg
inc
pop
mov
scas
xchg
into
out
in
nop
stc
repz
xor
hlt
cmp
popa
repz
mov
not
inc
pop
adc
jp
jecxz
ljmp
sub
ret
fidivrs
sbbl
xor
dec
das
xor
test
push
stc
sub
ds
cld
fwait
aam
xchg
gs
ja
sub
shll
mov
pop
or
inc
ret
cli
mul
rcl
scas
cmpsl
or
enter
sti
iret
mov
mov
mov
lret
adc
sbb
aad
xlat
into
ds
daa
inc
das
lahf
aas
jg
jnp
repnz
or
fisubrs
adc
fldl
fisttps
cli
mov
in
ja
xlat
sahf
and
pop
mov
std
sti
jge
aam
and
aas
repnz
dec
dec
fwait
lcall
scas
sub
mov
in
arpl
enter
in
cmpl
add
cld
sar
dec
ss
xor
push
fcomps
popa
mov
jmp
xor
ret
loop
add
xchg
mov
fidivrs
bsr
mov
cld
out
loope
call
das
mov
sub
mov
in
iret
lahf
loop
ljmp
cmc
inc
sbb
out
lods
icebp
out
mov
into
ja
pop
fwait
cmpsb
ljmp
mov
out
scas
scas
cmp
cmp
repz
rorb
xor
cld
stc
popf
jp
dec
cmpl
imul
push
pop
mov
pop
dec
xchg
mov
int
aaa
ror
iret
lahf
pop
dec
cli
mov
in
add
clc
xchg
scas
mov
add
lret
push
cmp
mov
repnz
inc
inc
pop
add
fstpt
cmp
mov
lcall
arpl
imul
push
dec
cmc
rorl
stc
stc
jno
add
push
jno
pusha
lahf
stc
rep
ljmp
xor
sub
pop
mov
dec
mov
loope
daa
dec
xchg
nop
mov
in
ljmp
push
lahf
aas
jg
ds
repz
mov
cltd
xor
xor
jecxz
out
stos
mov
dec
lods
scas
jg
pop
jns
xchg
push
ret
ljmp
das
ja
aas
out
stc
sub
das
add
ljmp
sub
dec
cmp
cld
stc
xchg
mov
xlat
mov
jg
rcll
in
or
inc
sti
push
in
cmp
in
xor
or
or
pop
mov
imul
sarl
cs
and
inc
out
in
xchg
push
iret
lahf
pop
dec
mov
dec
fcoml
int3
add
subb
push
mov
mov
fldln2
stos
mov
pop
std
sub
jle
test
pop
add
cmp
mov
div
inc
fs
out
sub
aas
add
fs
in
push
pop
cld
fmuls
sub
stc
daa
icebp
aaa
outsl
jne
xor
aas
sub
adc
enter
fcomi
es
sub
fists
bound
xor
add
mov
jg,pt
lock
jae
hlt
stos
lret
cmp
xorb
or
fimuls
cmovle
lret
sub
pop
or
cmpsb
push
push
dec
jmp
mov
outsl
out
in
sub
into
sar
sahf
sub
pop
adc
xlat
xchg
lahf
aas
rcr
push
add
push
add
dec
scas
mov
std
leave
out
push
cmp
inc
cmc
adc
mov
xchg
push
fidivrs
and
adc
test
mov
shlb
es
test
in
in
out
cs
js
nop
sbb
pop
push
addr16
idiv
sti
sub
inc
pop
rolb
out
pushf
inc
push
popw
pop
jns
repnz
sbb
mov
sbb
hlt
in
ja
jae
inc
push
jle
lock
repnz
mov
lahf
dec
js
sbb
lret
aas
ss
cmp
dec
stc
aaa
mov
add
dec
sbb
xor
xor
xchg
push
jle
sti
mov
es
jno
cmp
mov
adc
jle
cltd
add
lea
push
lcall
scas
data16
daa
add
mov
ja
scas
mov
fldl
idiv
movsb
repnz
inc
sbb
js
mov
add
add
and
jl
dec
add
pusha
leave
lret
sahf
icebp
push
mov
les
popf
sbb
in
hlt
lds
inc
popf
leave
adc
xchg
ja
xor
xor
fdivrp
retw
loopne
in
push
pop
pop
inc
leave
mov
cmp
das
push
pop
jns
cmpb
enter
xchg
cmc
mov
les
out
mov
cld
stc
repz
cmp
jg
xchg
push
rcrl
mov
in
stos
into
ljmp
pop
mov
cmp
das
stos
jbe
aas
jg
adc
iret
test
xchg
push
setge
push
fimull
inc
aaa
arpl
lds
or
sub
in
std
or
movsl
sbb
lea
lret
lcall
out
sub
stc
repz
js
sbb
test
mov
mov
hlt
insb
and
xor
dec
rclb
repnz
scas
and
xchg
in
pushf
mov
push
or
repnz
stc
mov
pop
fidivrl
rcrb
push
push
mov
scas
aad
xchg
les
push
mov
loopne
shll
out
in
sub
std
sub
pop
sub
sub
insl
aas
call
jge
into
pop
int
push
cmpsb
scas
add
andl
daa
ror
hlt
clc
dec
push
xchg
iret
lods
sbbl
popa
bnd
repnz
inc
lods
mov
movsb
loop
fdivl
sub
sbb
ds
lret
out
lods
push
add
loope
nop
pop
jge
cmpsl
movsb
and
orl
xchg
shrb
repnz
rep
into
imul
add
repnz
xor
cmp
sbb
sbb
jns
cmpsb
cmp
lahf
cmp
mov
fldcw
popf
pop
lcall
aas
fadds
lret
xchg
sub
and
and
jg
outsb
push
adc
divb
jge
add
stc
add
mov
repz
and
jp
cmp
cmp
stc
repz
bound
or
mov
cmp
pop
loop,pt
js
add
jno
add
mov
dec
mov
xchg
xchg
aas
cs
addr16
dec
scas
mov
cmpsl
mov
xor
test
ds
mov
lret
mov
jmp
sub
push
stc
sahf
insl
cmp
cmpsl
sbb
sub
inc
sbb
pop
shr
movsb
xchg
cli
insb
mov
out
or
mov
mov
push
movsb
out
dec
imul
xchg
pop
ds
subl
aaa
push
sub
sbb
lds
test
nop
icebp
outsl
lcall
insb
or
es
enter
push
mov
out
push
lock
lods
into
or
ror
arpl
leave
cmpsl
loope
pop
mov
and
rcrb
imul
pop
add
leave
iret
lahf
jge
imul
lret
std
dec
mov
mov
xchg
iret
lahf
aas
cmp
and
scas
or
ja
es
lahf
aas
jnp
adc
mov
jle
jbe
mov
test
cmp
and
repz
adc
push
sub
insl
xchg
fstpl
jns
cltd
jle
es
and
lahf
pop
cmp
adc
imul
pop
jg
aas
add
lret
adc
jle
and
mov
aam
lahf
aas
jo
dec
mov
in
xlat
jmp
lahf
aas
mov
std
mov
movsb
je
das
mov
adcb
mov
lahf
pop
sbb
jns
fistl
pop
subl
out
bound
stc
and
mov
jp
cmp
psraw
lock
lret
mov
lret
scas
inc
stc
dec
adc
repnz
xor
in
add
sub
cld
pop
dec
sub
in
pop
decb
pop
or
and
push
sub
mov
cmp
test
lock
dec
sbb
cld
add
inc
aaa
scas
dec
xchg
mov
iret
lahf
sub
cltd
mov
and
aad
test
ficomps
das
movb
pop
sub
std
xor
mov
inc
xchg
push
pop
jns
inc
popf
push
push
pop
popa
or
ret
add
pusha
and
mov
jecxz
hlt
jge
clc
mov
popf
es
lahf
rcrl
jle
jmp
pop
mov
dec
or
cmp
repnz
jmp
int3
shl
mov
imul
fisubs
add
sub
fdivr
add
in
stos
jl
jl
addr16
dec
sub
iret
insb
out
sbb
loopne
ret
jns
ljmp
popa
mov
push
jle
cltd
into
in
cmc
insl
dec
pop
aas
adc
pop
lahf
out
add
mov
mov
decb
push
sbb
xchg
nop
jl
mov
push
cmc
push
pop
imul
lret
xor
iret
xchg
aas
push
scas
test
jg
sbb
into
repz
rorb
aam
inc
add
loope
stc
stc
ja
mov
int3
mov
inc
and
cs
mov
sbb
out
filds
mov
les
dec
add
pushf
stc
xchg
lcall
sbb
in
and
out
test
test
dec
cmc
mov
lds
addr16
mov
add
ss
fbld
xor
mov
jmp
int3
adc
xchg
jmp
mov
repnz
into
setns
pop
xor
sahf
repnz
xor
mov
push
fdivrp
add
mov
call
dec
sub
shrb
cld
jb
and
adc
int3
xor
cmp
dec
mov
add
popa
mov
jno
and
xchg
cmpb
es
add
xor
ret
clc
and
jnp
mov
movsl
xchg
pop
mov
fiadds
push
push
jle
cld
stc
adc
js
aam
pop
out
scas
mov
xor
pop
jo
add
es
xchg
pop
xor
mov
iret
imul
sti
jne
fistpl
les
stos
mov
jg
xorl
mov
lret
sbb
fwait
test
adc
mov
scas
mov
cmp
jmp
cld
lahf
inc
out
mov
inc
ja
out
sub
bnd
std
gs
arpl
add
lahf
xor
sub
inc
cltd
fldln2
and
fistl
nop
pop
cmpsb
add
popa
push
aaa
sti
lret
aas
mov
test
cmp
dec
enter
push
inc
mov
in
aas
rol
adc
xor
xor
fldl
cmp
push
outsb
push
and
xchg
ja
scas
mov
xor
or
ret
pop
js
cmp
nop
push
ficoml
incl
dec
jp
push
in
or
lcall
lock
add
add
int
add
cld
stc
cmpl
mov
adc
lret
add
div
out
add
pop
in
aas
xchg
and
jnp
sbb
and
cltd
lahf
stos
adc
into
add
ja
ds
cs
mov
push
shrb
jg
cld
stc
aaa
mov
mov
pop
pop
jg,pt
add
cmp
jg
les
jg
cwtl
push
mov
mov
rorl
mov
pop
out
out
clc
lods
les
mov
das
xor
in
xor
push
pop
xchg
addb
push
call
andl
pop
aas
das
in
mov
dec
js
sbb
pushf
repnz
sbb
les
mov
outsl
jle
and
ds
lods
icebp
lds
push
mov
das
ja
jl
mov
jecxz
cmp
sub
or
arpl
aas
sbb
leave
add
jp
ret
andb
iret
lahf
jg
sbbb
daa
dec
or
stos
jecxz
leave
out
sar
outsb
sbb
mov
inc
jmp
jmp
aas
aas
add
cld
sub
xchg
jb
mov
scas
mov
loopne
cld
mov
pop
inc
into
cmpsl
sbb
dec
aas
fwait
les
repnz
or
fucomip
daa
adc
out
aas
movsb
sbb
sarb
or
cld
stc
repz
ja,pt
lret
mov
mov
mov
mov
mov
dec
ja
pop
jns
jle
sub
cmpsl
jp
and
mov
pop
jge
xor
das
hlt
cmp
mov
stc
repz
dec
in
cltd
flds
sbb
jp
popa
lods
aas
jg
cld
dec
cmp
cmc
mov
cmp
push
lock
mov
and
movsb
mov
xor
push
in
lcall
xor
sbb
outsl
and
pusha
scas
push
and
lods
in
mov
lret
pushf
fcmovbe
mov
mov
or
mov
nop
clc
and
and
scas
mov
popa
lods
iretw
mov
jo
test
jmp
inc
je
pop
aaa
rol
mov
lds
pop
mov
cs
push
int
in
xchg
aas
ss
nop
out
push
jg
pushf
cld
inc
andl
mov
pop
mov
pop
iret
jg
mov
stos
cs
outsb
xor
xchg
aas
push
push
pop
sub
cld
stc
test
in
add
sub
and
xor
and
in
dec
sub
jno
jns
add
lret
js
adcl
repnz
aas
push
lret
lahf
lods
jge
daa
mov
mov
in
in
sub
xchg
dec
dec
out
test
jo
mov
clc
aas
pusha
jne,pn
ljmp
out
xchg
mov
out
dec
pop
sbb
pop
cld
cwtl
clc
jge
and
cmpb
xor
adc
jns
gs
xchg
leave
mov
test
dec
mov
stc
adc
sbb
or
imul
lahf
inc
addr16
icebp
cltd
and
push
push
ds
cmpl
ljmp
jb
ljmp
push
arpl
jmp
aas
jg
scas
cltd
xchg
mov
shlb
sbb
pop
push
pop
inc
jge
inc
iret
cld
stc
adc
cld
and
nopl
movsl
xchg
mov
xlat
xchg
pop
jns
fnsave
adc
test
fstp
xchg
push
cmp
sbb
ja
jg
push
daa
mov
xchg
cli
sbb
aas
jmp
xchg
sar
pusha
outsl
dec
testb
iret
ror
mov
add
out
bound
scas
sarl
in
cld
xchg
aas
mov
jbe
popa
push
jo
cmp
or
xor
repz
pop
ss
insl
js
repnz
xor
xor
pop
scas
mov
pop
jno
sbb
push
mov
xchg
lods
lret
dec
hlt
dec
push
js
or
dec
dec
call
jg
cld
adc
mov
test
shl
aas
pop
orb
clc
ja
cmpsl
fdivrp
test
mov
and
repnz
sub
aas
jg
dec
dec
cld
pop
xchg
lock
cmp
mov
cli
enter
cs
pop
jecxz
sti
push
mov
aas
adc
pushf
jecxz,pt
cmpsb
daa
jge
rcl
pop
push
fs
jl
test
ds
push
sti
mov
cld
push
add
mov
std
inc
arpl
insb
stc
add
pop
dec
mov
xor
das
pop
mov
lahf
psubsb
out
adc
das
xor
jg
adc
aas
cmpsl
xchg
sbbb
aaa
lods
lret
inc
add
mov
adc
out
or
sbb
pop
shr
arpl
cld
stc
repz
and
lea
mov
mov
pop
cmp
mov
das
or
cld
and
in
mov
lds
jo
mov
test
jge
add
stc
repz
std
sub
jle
mov
pop
clc
nop
sarb
lcall
jge
mov
hlt
push
or
movsl
pop
jp
and
xor
mov
adc
xchg
lahf
aas
cmp
sub
push
xor
stos
fidivrs
and
neg
seta
xlat
jb
xchg
push
in
loopne
ret
call
lret
xor
shlb
ret
jle
imul
popf
ret
adc
lret
scas
adc
xchg
mov
iret
std
add
out
sbb
sbb
stc
pop
frstor
mov
and
adc
frstor
outsl
movsl
cli
das
ss
pop
jns
add
or
xlat
push
movsb
sti
movsb
xchg
cmpsb
mov
out
fildll
out
lea
jb
mov
icebp
loopne
mov
shrb
lahf
push
cmp
push
mov
shll
arpl
lods
repnz
add
cmp
mov
scas
shl
dec
or
imul
xor
je
push
sbb
out
sub
cld
stc
mov
dec
jle
pop
push
fs
aas
jg
push
push
cmp
cs
or
add
push
lahf
mov
iret
inc
push
je
jmp
test
mov
sahf
xlat
ficomps
out
dec
and
mov
addl
pop
sbb
out
test
xchg
mov
push
dec
int3
fcomip
cld
cld
add
aas
add
out
pushl
insb
sbb
push
incb
mov
ret
idiv
repz
dec
es
adc
cmpsb
push
cltd
sbb
jnp
out
dec
fbld
repz
pop
add
data16
test
mov
cmp
mov
fists
arpl
push
ja
or
pop
lret
push
pop
jns
stos
ja
pop
cmc
sub
iret
shlb
das
leave
sahf
call
cmp
sbb
fisttps
cmc
leave
xchg
outsb
or
or
sub
lret
iret
call
xchg
mov
sbb
enter
jp
jno
in
mov
dec
loope
xlat
lock
filds
clc
inc
loop
dec
scas
mov
hlt
xchg
add
cmpsb
sub
sub
add
and
rclb
jno
jle
dec
mov
nop
sub
fldt
mov
test
xchg
push
mov
xor
mov
mov
movsl
inc
imul
jg
fs
pop
xor
imul
iret
lahf
aas
outsb
pop
jp
jp
xor
orl
repnz
mov
jne
pop
loopne
xchg
clc
in
insl
lock
and
fstl
icebp
repnz
jns,pn
mov
cld
sti
xchg
subb
jg
lods
ds
xchg
mov
das
push
pop
jge
loopne
adc
mov
ret
mov
aas
jmp
pop
mov
mov
mov
ret
repz
lahf
lock
or
sti
int
xorl
add
in
loop
xor
ljmp
repnz
sub
popf
decl
enter
das
call
cs
fsubrp
xchg
leave
pushf
dec
sbb
inc
addr16
in
xchg
xor
cs
xchg
push
mov
mov
scas
mov
cmp
mov
mov
lods
ret
xchg
mov
repnz
dec
out
jnp
popw
shl
jno
pop
pushf
cmp
lahf
jns
insb
sub
add
cs
lret
push
pop
xor
mov
inc
mov
enter
fdivrl
in
andb
repnz
adc
mov
push
add
insl
psrld
xchg
xchg
sub
clc
pop
dec
in
ja
or
sysexit
jno
pop
cmp
aaa
cld
inc
cld
jb
xchg
sti
ja
sbb
outsl
roll
adc
lret
cmpb
or
hlt
nop
repnz
adcb
mov
mov
stos
rolb
pushf
inc
aas
jg
cld
into
push
int3
xchg
repz
test
test
in
fcomi
out
lahf
jmp
sarb
xor
jns
in
adcl
test
jle
add
mov
sub
std
jb
dec
add
mov
lret
bound
iret
lahf
add
dec
mov
cwtl
fld
repz
add
lods
jns
and
lods
cs
add
adc
and
movsb
out
add
pop
sub
push
icebp
ret
fsubr
inc
add
roll
and
inc
dec
xchg
inc
sbb
xchg
das
hlt
xchg
xlat
xchg
pop
in
int3
jno
iret
lahf
aas
aas
incb
iret
ss
mov
test
repnz
sub
push
cmp
adc
sub
ds
fs
xchg
shlb
add
outsl
mov
shll
rclb
lahf
stos
cltd
fildll
pop
out
push
or
loope
add
stc
sbbl
mov
insl
xor
daa
les
xchg
adc
push
and
daa
lods
lret
inc
outsb
xchg
clc
inc
pop
iret
aas
jecxz
cmp
dec
test
es
pop
mov
dec
sub
mov
push
aas
iret
fwait
test
pop
in
in
pusha
inc
dec
sub
sub
jne
xchg
aas
jmp
mov
data16
jecxz
imul
mov
push
ljmp
in
adc
ret
loopne
sbb
jge
cs
mov
pop
mov
out
icebp
jb
xchg
movsb
push
cmp
insb
cmpsb
test
das
xchg
push
mov
lock
sub
ret
mov
inc
mov
in
popf
xchg
sub
sahf
dec
loopne
cld
into
xchg
loop
out
nop
pop
jns
sub
pushl
lods
jmp
push
dec
xor
insb
cli
rcll
scas
lret
sbb
inc
lahf
std
pop
sti
sarb
mov
mov
cmpsl
cs
adcb
std
out
cld
stc
add
sti
mov
out
cmc
pop
jp
imul
rcr
and
aas
repnz
das
popa
pop
insl
pop
add
lret
das
jp
lret
mov
mov
mov
aam
bound
gs
fdivp
pop
xor
push
pop
gs
jne
ds
sbb
and
call
dec
das
scas
mov
stc
push
out
xchg
sub
scas
sub
pop
jle
push
bnd
pop
push
js
and
cmpsl
fdivrp
mov
xchg
je
sbb
sub
sub
sahf
int
test
aad
inc
aas
test
cmpsl
lock
pop
outsl
sub
cmc
andl
adc
iret
lret
mov
fs
mov
ljmp
repnz
mov
icebp
inc
pop
mov
xor
push
adc
or
mov
and
dec
xadd
in
cmp
cwtl
int
jae
pusha
sub
aas
jg
pop
out
inc
jmp
cmp
mov
lds
jmp
out
lahf
adc
lea
cs
pop
imul
cli
in
in
shl
xchg
into
mov
call
stc
icebp
sarb
stc
flds
xor
adc
pop
scas
cmp
and
scas
dec
sbb
lea
sahf
stos
sbb
mov
insb
dec
jg
dec
cmp
arpl
arpl
decb
orb
pop
push
mov
mov
insb
outsb
pusha
stc
or
in
xchg
ja
insl
adc
sbb
out
cmp
mov
dec
fildll
je
dec
std
dec
and
cltd
inc
push
xor
xor
test
iret
push
xor
hlt
aas
aam
ss
dec
cs
pushf
xchg
aas
mov
cmp
mov
cmpl
les
pushf
cs
mov
aad
aas
jl
iret
das
mov
clc
sub
filds
lret
inc
loope
sbb
jmp
push
push
add
stc
xor
or
insb
outsl
dec
mov
pusha
shlb
inc
push
movsl
stos
mov
and
and
cli
cs
pusha
stc
repz
push
add
cmc
rcrb
fwait
jmp
dec
pop
xchg
das
loope
iret
jle
lds
jle
push
push
ja
repnz
xlat
mov
pushf
ret
fisttps
lds
mov
cs
xor
mov
jecxz
adc
cld
dec
out
lahf
aas
xor
xor
and
ja
ja
cld
stc
repz
dec
jmp
mov
movsl
out
mov
xchg
lahf
jae
dec
ror
icebp
ljmp
add
nop
jb
pop
ds
mov
xchg
push
fsubrp
lcall
hlt
enter
repz
cli
dec
out
rcrb
sbb
xor
cld
stc
fs
shr
pusha
lds
jl
push
out
mov
aas
push
jmp
out
add
cld
stc
orl
inc
bound
popf
add
and
inc
push
pop
jns
sbb
mov
int
out
inc
push
pop
jns
xchg
and
and
sbb
inc
dec
jmp
cltd
add
push
cmp
scas
cltd
lahf
jg
lahf
pop
movsb
sti
iret
mov
pop
xor
lret
ret
icebp
add
imul
mov
jg
jne
lahf
jmp
push
les
sub
iret
lahf
aas
jg
enter
and
add
xchg
inc
stos
filds
aas
add
xchg
pop
fwait
out
push
cmp
push
hlt
ds
iret
lahf
aas
std
movsb
add
leave
movsb
stc
cld
stc
repz
fcomps
mov
or
cmp
jo
pusha
aas
test
push
test
scas
mov
fs
mov
jle
repnz
mov
in
fwait
scas
lahf
test
imul
out
jg
cmp
int
pop
bound
and
mov
lret
push
adc
mov
xchg
pop
pop
sub
sbb
and
dec
mov
jg
cld
pop
pop
int
push
mov
movsb
push
or
sbb
aas
jae
cmpsl
enter
mov
pop
repnz
incb
fcmovne
jg
mov
jae
inc
sbb
jg
fistl
inc
pop
scas
pop
mov
xor
lahf
roll
stos
xchg
push
sbbl
xchg
sub
ja
jp
in
test
cmp
aas
pop
jns
aad
insb
imull
fsubrs
stos
mov
iret
lahf
aas
adc
xor
pop
push
imul
stc
stc
repz
lock
adc
xchg
cmp
hlt
pop
jle
push
outsb
xchg
clc
adc
orb
loopne
insb
mov
mov
stc
repz
pop
mov
add
inc
imul
bound
out
mov
rcrb
inc
push
out
test
xor
repnz
lret
sub
test
lahf
leave
pop
jecxz
movsl
pop
scas
mov
rcll
mov
iret
outsb
fisubl
cmp
push
cld
stc
mov
mov
icebp
or
pop
lret
out
lahf
pop
or
jle
cmp
xchg
aaa
sti
movsb
sub
clc
jp
jo
ja
cwtl
mov
dec
pop
icebp
repnz
jecxz
repnz
jns
fildll
mov
lcall
or
mov
sub
mov
cld
stc
repz
loop
popf
les
imul
repnz
xchg
mov
push
loope
jg
cld
orl
cmp
call
repz
lahf
mov
mov
faddl
add
cld
dec
clc
repnz
mov
dec
dec
pop
adc
aas
jg
pop
xchg
xor
cmp
pop
fs
testl
pusha
pop
or
lock
pop
push
sbbb
jle
cld
nop
sub
mov
mov
fs
clc
mov
scas
subl
cli
in
sub
push
and
xor
jg
cld
adc
adc
out
filds
mov
jno
pop
or
ret
adc
in
pushf
mov
jge
hlt
jg
mov
mov
in
sub
in
pop
dec
nop
push
sub
scas
mov
dec
mov
pop
scas
or
ja
repnz
push
mov
add
xor
pop
push
in
mov
jl
pop
out
scas
lock
push
push
cli
and
xchg
mov
stc
repz
xor
sub
xchg
xchg
iret
lahf
aas
jg
or
lcall
stc
stc
repz
push
or
ficompl
hlt
dec
push
cmp
push
jl
lahf
aas
jg
mov
pop
add
sub
lret
mov
adc
jno
add
filds
pop
ror
lahf
pop
dec
sahf
cmp
sub
scas
jg
cld
stc
repz
add
mov
mov
out
pop
add
addl
lret
push
add
outsb
dec
popf
mov
repnz
sbb
push
pusha
in
in
adc
ret
scas
mov
out
int
jmp
out
pop
rorb
fcomip
mov
das
call
movsl
mov
or
cld
jmp
mov
fwait
dec
add
xchg
xor
jns
sbb
sbb
add
sbbb
cmp
fidivrs
outsb
lahf
pop
inc
das
jb
das
jl
fadds
lahf
adcl
in
repnz
jmp
mov
push
shll
pusha
mov
fcoml
inc
add
xlat
rol
push
add
mov
xchg
jp
in
ret
mov
jmp
iret
das
ds
out
cmp
xchg
mov
sahf
push
btl
jb
in
sub
xchg
mov
cwtl
rcrb
in
ljmp
jge
jnp
fsubp
pop
int3
cld
pushf
fnstcw
xlat
xchg
lahf
aas
fwait
mov
xchg
dec
das
inc
lods
std
leave
mov
ret
std
loope
in
lods
mov
fstpt
stc
stc
test
movsb
aaa
sbb
cld
sbb
cltd
dec
fcoms
loop
sahf
push
imul
out
mov
aas
xor
jle
call
lock
sub
ds
push
pop
iret
lahf
aas
jg
adc
test
rol
pop
xchg
ja
xchg
cld
aas
js
mov
xor
jb
mov
popf
mov
loope
dec
sbb
jg
pop
cmp
mov
fcmovu
gs
jmp
fisubs
aam
stc
outsb
dec
xor
lret
mov
sbb
data16
mov
scas
jne
lock
je
mov
sub
xchg
aas
test
fiadds
push
dec
push
pop
pop
jns
dec
inc
push
icebp
hlt
ljmp
stos
adc
popf
xchg
fdivrp
cld
stc
rep
in
inc
test
mov
shll
fnclex
mov
iret
pop
fildll
jno
jb
adc
and
xchg
loopne
in
cli
lods
jb
iret
push
aaa
je
adc
lcall
int3
flds
in
xchg
xor
lock
in
mov
push
dec
inc
jge
cmp
jns
xchg
push
rclb
sbb
test
xchg
cld
mov
js
xchg
push
pop
sub
in
sbb
mov
bound
mov
pop
jmp
mov
ret
jle
adc
or
dec
mov
in
das
ja
jae
and
mov
aas
bound
sbb
xchg
push
pop
jns
xor
adc
cmpsb
insb
pop
xchg
int3
adc
push
pop
jns
inc
or
lods
sahf
mov
or
imul
cmp
or
and
mov
aas
pop
sbb
enter
mov
inc
xor
sahf
mov
mov
or
mov
aam
into
dec
loope
das
addl
add
std
shlb
sbbb
mov
pop
fdivrp
dec
or
sti
in
inc
xchg
lds
leave
dec
and
and
mov
lret
mov
pop
pop
xor
cld
dec
cli
je
and
inc
jne
sub
xchg
stos
iret
lahf
aas
jg
xchg
cmp
daa
add
sbb
mov
cld
stc
repz
or
jmp
fwait
cwtl
rolb
mov
int3
lahf
das
xor
lret
iret
adc
inc
test
push
jnp
fwait
test
fisttpll
lret
add
das
pop
dec
pop
or
shll
repnz
xchg
xor
push
pop
pop
inc
mov
ds
repz
jno
pop
pop
ds
cmc
out
shlb
cltd
test
adc
xor
pushf
rcrl
xchg
dec
sbb
jl
sbb
jp
push
mov
iret
inc
and
pop
push
mov
sub
das
adc
mov
jmp
hlt
and
insb
mov
add
mov
scas
test
xchg
dec
lds
repnz
neg
rcrb
and
xchg
lds
sbb
lret
mov
and
push
mov
sub
push
setb
add
and
loop
mov
sub
jecxz
cmc
repnz
cs
xchg
push
push
bound
sub
and
xchg
lahf
pop
push
push
push
cmp
aam
sahf
mov
mov
sti
repnz
aam
xchg
mov
pop
das
std
repnz
cli
mov
dec
mov
imul
popa
test
and
cmp
jl
cld
mov
sub
pop
push
pop
jns
lods
dec
inc
push
not
addb
add
in
jecxz
dec
and
pushf
idivl
das
push
pop
lcall
dec
sbb
std
iret
lahf
aas
lcall
repz
ljmp
sub
cld
stc
repz
jmp
scas
mov
mov
fcmovnu
push
jg
sub
lret
lret
cmp
shl
iret
lahf
aas
aad
mov
out
loop
mov
cli
in
lahf
sahf
xor
mov
jg
cld
data16
in
mov
or
das
lea
adc
pop
cltd
adc
mov
lods
popa
cwtl
cli
inc
ds
into
out
push
dec
jecxz
xor
in
sub
fisubrs
aas
data16
popa
cltd
mov
clc
call
jmp
jns
rcll
and
pop
fidivs
lds
inc
decl
pop
outsb
scas
mov
xchg
std
xor
push
loop
stc
icebp
sub
clc
in
sub
xchg
mov
mov
fiaddl
mov
out
out
jg
push
andb
aas
sar
repz
jle
jns
fmulp
jbe
aas
pop
test
shrb
xlat
and
add
xchg
ja
dec
iret
push
sbb
cli
pop
std
push
repnz
lret
iret
xor
dec
mov
test
pushl
xchg
test
xchg
lods
dec
jmp
out
lahf
aas
es
xchg
in
jmp
mov
mov
cld
stc
repz
mov
jge
dec
nop
fildl
add
push
fs
and
stc
repz
enter
push
movsl
mov
repnz
xchg
mov
sub
jg
add
das
cmpb
or
mov
clc
xchg
aas
leave
into
xchg
data16
repz
out
and
out
repz
adc
adc
cmp
cld
stc
push
pop
loope
sub
cmp
and
cld
cwtl
adc
out
mov
push
iret
lahf
aas
jg
inc
sub
fs
addl
lock
out
mov
jne
test
and
cmpsl
js
mov
out
cmp
fsubr
sti
hlt
add
stc
repz
in
in
dec
sbb
or
push
push
push
dec
push
jo
jo
add
jle
cmc
xchg
out
mov
add
scas
jmp
fdivrl
test
mov
out
lahf
aas
mov
dec
jp
cwtl
mov
hlt
repnz
sbb
aas
or
loope
push
cmp
sub
cmp
jle
loop
int3
pushl
cld
stc
xchg
sahf
fisttps
loop
aam
cs
sub
and
call
mov
push
sbb
jg
lahf
testw
sbb
popa
jg
push
pop
jns
je
dec
or
ficompl
aas
push
pop
jns
loop
das
mov
enter
mov
xchg
jmp
push
mov
dec
pop
cld
stc
xchg
out
pop
jg
mov
add
iret
sub
std
cld
stc
xor
sahf
jo
jmp
cmp
mov
mov
test
in
sbb
pop
adc
daa
adc
pop
sub
xchg
dec
xorb
sbb
repz
dec
flds
cmp
pop
outsb
dec
addb
push
popa
icebp
in
jmp
icebp
jo,pt
mov
sti
repnz
xchg
dec
movsb
repz
xchg
lea
ret
icebp
add
xor
clc
mov
pslld
mov
popa
inc
decl
hlt
and
pop
decb
gs
and
js
mov
push
iret
lret
iret
filds
jl
sbb
icebp
pop
add
xchg
loop
mov
mov
push
lret
out
pop
push
cmp
clc
mov
lret
les
aad
mov
xchg
lahf
mov
out
jmp
adc
cmp
xlat
rcr
data16
jno
add
or
dec
push
loopne
dec
or
cld
stc
repz
loope
pushf
test
lcall
mov
sbbl
in
push
mov
pop
outsl
xchg
mov
and
rorb
fwait
call
mov
push
jl
push
dec
ret
out
inc
icebp
dec
mov
iret
lahf
pop
fidivrs
mov
and
push
idivl
dec
loope
repz
rorl
icebp
pop
add
mov
add
test
sbb
out
stc
and
lret
out
inc
and
cld
and
es
sub
inc
push
add
and
aaa
outsl
pop
add
xchg
aas
xlat
xchg
stc
testb
pusha
sti
mov
scas
clc
cmpsl
test
sbb
ljmp
adc
movsb
in
mov
sub
orb
xlat
scas
test
push
mov
incb
iret
jo
xor
mov
cmp
stc
xor
mov
ljmp
mov
jg
cld
inc
mov
xchg
out
loope
in
repnz
jle
cmp
push
or
or
push
iret
repz
fimull
push
sbb
xchg
out
icebp
ret
sbb
push
inc
mov
stos
popa
adc
das
pop
ret
pop
dec
fmul
xchg
ja
ljmp
push
fwait
push
inc
movsb
mov
mov
jno
push
pop
lret
fidivl
ret
adc
lretw
lahf
xor
aas
cs
aas
rorl
inc
sbb
dec
das
cmp
pop
data16
call
push
fisttps
into
cmp
out
scas
insl
fisttps
das
sbbb
push
fsubrp
jl
aam
mov
adc
push
lods
push
pop
jns
push
and
and
out
xchg
cmp
xlat
loopne
xchg
or
arpl
add
add
aas
jg
cld
push
ja
scas
fwait
cmp
xor
pop
mov
decb
jno,pt
push
and
lahf
aas
push
mov
mov
dec
sbb
subb
loope
es
clc
scas
fsubs
nop
scas
mov
fsts
pop
jg
cld
stc
xchg
cmpsb
xchg
movsl
xchg
sub
xlat
out
das
jno
out
out
lahf
aas
mov
inc
js
sub
mov
repz
mov
xor
or
fwait
das
jg
insl
outsb
lea
jecxz
jbe
mov
insb
and
cld
or
fmuls
push
cmp
lods
cld
and
inc
mov
pusha
bnd
das
ja
jmp
mov
jecxz
push
add
iret
mov
mov
add
in
cmovle
leave
fcoml
or
iret
outsl
pop
jle
mov
cltd
lcall
and
hlt
out
pop
loopne
jbe,pt
nop
out
pop
ja
jns
repnz
cwtl
enter
dec
push
jae
pop
lahf
pop
push
pop
shlb
iret
cld
sub
icebp
lret
out
test
test
in
stc
cld
stc
add
jnp
or
iret
arpl
inc
fs
adc
addr16
add
in
add
outsl
push
inc
dec
pop
jg,pt
test
cmp
sub
stc
xchg
dec
sahf
ret
daa
shlb
scas
cld
cld
stc
repz
xchg
or
jmp
lea
pop
ds
lods
in
scas
gs
jb
scas
cli
repnz
jg
sub
arpl
pop
insb
lret
mov
jbe
fucomp
daa
cld
sbb
scas
mov
ret
ljmp
jo
mov
jns
sbb
and
mov
out
pop
and
push
sbb
roll
adc
out
mov
mov
test
xlat
xor
scas
mov
cmp
jge
cwtl
push
and
jns
jg
mov
or
jmp
xchg
push
pop
cmp
rcrl
mov
add
iret
into
or
fdiv
pop
stc
xchg
hlt
enter
jo
mov
or
cld
cltd
shr
and
jge
sahf
adc
iret
test
lahf
iret
push
xchg
cmpsb
jns
adc
xor
repz
fcoms
icebp
mov
or
imul
push
shll
lea
das
lret
outsl
aad
adc
push
aad
xchg
push
repnz
adc
cmc
les
or
mov
mov
pop
in
movsl
in
push
pop
xchg
cmc
rolb
int3
lds
mov
jb
dec
icebp
xchg
mov
stc
jnp
xor
scas
mov
arpl
or
repz
sbb
inc
jl
jle
aas
cltd
shl
sub
scas
in
dec
out
cs
cld
stc
repz
jbe
cmpl
xor
pop
dec
das
jg
imull
and
cmp
pop
out
gs
jecxz
mov
adcb
or
jne
insl
loope
popa
lahf
or
or
outsw
or
jl
mov
scas
mov
outsl
lds
aas
ret
inc
ljmp
mov
scas
ss
cmp
sub
mov
lret
pushf
jae
jmp
cmp
dec
xchg
xchg
sub
and
dec
in
pop
test
in
iret
lahf
add
out
test
stos
std
aaa
rcr
hlt
xchg
out
adc
imul
out
int
rolb
and
aas
jg
mov
mov
lds
add
mov
out
lahf
je
andb
adc
popa
addl
xchg
cld
or
repnz
push
and
cli
xor
and
mov
jae,pt
out
jg
movsl
cmp
in
xchg
dec
mov
push
sbb
push
fdivs
xor
pop
sbb
xchg
push
pop
sti
fisttpll
sub
ret
add
mov
icebp
pop
dec
lock
mov
pushf
arpl
mov
test
mov
repz
das
cmp
fcmovu
mov
or
data16
das
jg
cld
stc
dec
add
dec
cmp
mov
pop
or
iret
lahf
aas
ror
push
adc
or
push
cld
stc
repz
clc
xchg
sti
xchg
fdivs
inc
inc
ss
iret
lahf
aas
jg
addr16
mov
stos
mov
mul
out
cmp
in
and
jne
repnz
push
fidivrs
or
cli
pop
mov
loopne
call
in
add
pop
test
push
cld
stc
repz
sahf
insl
mov
mov
lods
ret
es
pop
sub
jle
outsb
sbb
dec
xor
scas
mov
xchg
insb
das
pop
mov
scas
dec
mov
in
jb
or
cmp
jp
nop
iret
popf
add
push
adc
icebp
lret
aas
cmp
shrb
iret
mov
js
sub
js
jg
sub
pop
mov
scas
mov
sub
or
fisttpll
test
sub
pop
cmpsl
test
xor
out
fsubs
or
out
scas
ficomps
xlat
mov
in
pop
push
jbe
jge
stc
outsl
nop
mov
mov
pop
pop
stc
xor
and
or
out
movsb
mov
sub
xchg
push
pop
pop
sbb
inc
addr16
push
push
in
out
dec
jbe
adc
add
push
or
push
ja
ja
fs
pop
inc
adc
jg
cld
stc
jae
call
ljmp
adc
out
lahf
aas
cli
push
mov
jmp
mov
mov
ljmp
mov
loop
jns
nop
iret
xor
push
in
aas
frstor
adc
in
out
lahf
xchg
push
pop
jns
cmp
ljmp
test
fs
xchg
lcall
push
mov
jns
xchg
push
fidivrs
push
xchg
aaa
out
out
gs
pop
jns
push
pushf
iret
insb
pop
or
stos
pushl
leave
shrb
adc
xchg
scas
mov
push
cltd
or
gs
cli
jb
popf
cmpb
xchg
xchg
cmp
pop
push
sarl
or
dec
shrb
ret
xchg
iret
lahf
mov
mov
inc
jbe
push
psllw
in
rep
arpl
push
leave
std
lock
subl
xchg
jle
xor
mov
ja
stc
push
jecxz
movsb
je
jb
inc
out
test
cwtl
or
iret
mov
xchg
decb
outsb
adc
es
push
pop
aam
in
jmp
ret
lret
mov
mov
iret
lahf
pop
sbb
xlat
add
fstps
repz
inc
cmp
lahf
das
stc
ss
xor
cmp
pushf
pop
lock
out
insb
dec
insl
adc
enter
pop
icebp
call
mov
mov
subl
pop
inc
mov
leave
aas
aas
cmpb
jge
bound
clc
stc
subl
outsl
je
mov
jmp
out
imul
in
push
dec
and
fldenv
int3
jle
scas
arpl
push
mov
push
inc
mov
xchg
lahf
aas
inc
sahf
pop
movsb
pop
xor
ret
iret
shlb
pop
lret
lret
lahf
orb
imul
inc
add
jns
sbb
and
test
dec
pop
jne
push
pop
outsl
sbb
cli
addr16
push
lock
sub
sub
je
lods
into
pop
aad
jns
insb
fildll
pop
mov
cld
xchg
sub
movsb
cld
mov
pop
sub
add
pop
fistps
inc
mov
nop
lock
xchg
mov
bswap
pop
add
xchg
jae
dec
test
inc
jne
outsl
mov
in
daa
iret
outsb
xchg
scas
popf
out
loope
sub
js
test
cmp
imul
push
int3
int
mov
cmovl
push
inc
sbb
outsl
pop
fsubrl
mov
lahf
jg
mov
testw
repz
dec
out
bound
xchg
test
in
dec
add
test
popf
test
cld
mov
mov
pop
out
jns
fadds
jne
and
cmp
mov
or
stc
mov
xchg
inc
out
push
in
call
sub
push
mov
mov
imul
in
lock
cli
fs
jae
incl
js
push
fistpll
ljmp
leave
arpl
int3
outsl
scas
mov
scas
fcoms
sub
pushf
pop
xchg
push
xor
je
push
dec
ss
push
jg
inc
ljmp
pop
loopne
clc
push
sbb
xchg
or
jmp
mov
or
or
jno
xor
lahf
in
fs
add
aas
jg
xorl
pop
icebp
ret
jecxz
das
lahf
ror
cwtl
xchg
insb
insb
sbb
lret
ret
sbb
or
jo
jg,pt
scas
into
and
xor
in
test
pushl
scas
fs
sti
and
loopne
mov
mov
or
push
mov
mov
adc
pop
xchg
hlt
xchg
scas
cmc
inc
lahf
xor
iret
pop
add
ret
add
cld
xor
fistpll
outsl
mov
outsb
sbb
mov
testl
xchg
dec
mov
xchg
xor
xchg
mov
push
dec
mov
imul
sbb
repnz
pop
insb
jge
notb
pop
jle
daa
xchg
icebp
lock
popl
nop
pop
jnp
cmp
outsl
in
xchg
mov
jno
cld
xchg
cli
in
and
inc
clc
ds
aas
jg
fstl
scas
testl
pop
xchg
add
adc
jecxz
xchg
ss
ljmp
stc
cld
sarl
ljmp
mov
mov
jne
lahf
ds
sub
xchg
dec
lahf
sub
decb
ds
mov
int
nop
adc
in
rcrb
push
aas
aas
cmp
jl
rdpmc
iret
push
adc
pop
cs
mov
adc
call
call
push
mov
mov
xor
pop
in
movl
push
lock
push
mov
xchg
aas
jmp
ds
jne
dec
mov
es
jg
scas
in
add
push
ret
push
push
int3
lahf
dec
cmpl
add
loope
ds
mov
sbb
popa
outsb
adc
mov
lock
clc
cmpsb
test
jle
add
push
and
aaa
pop
mov
aas
cmpsl
xchg
dec
addr16
mov
in
ds
inc
mov
add
push
push
rcr
fsqrt
jp
mov
movsb
mov
int3
lret
lret
jge
loop
stc
cld
stos
jmp
cwtl
xor
xchg
jae,pn
or
arpl
mov
sub
test
or
ss
stc
add
sbb
or
push
cld
jg
dec
inc
xor
push
dec
jecxz
adc
and
jb
mov
xchg
movsl
mov
cmp
aad
sahf
aas
imul
xor
pop
loopne
mov
movsb
scas
jge
iret
mov
push
in
fxtract
repnz
in
mov
in
jg
jb
sbbl
outsl
cmp
pop
lcall
mov
pop
mov
pop
cwtl
adc
imul
dec
es
iret
lods
adc
cmc
adcl
pop
outsb
jp
inc
inc
or
cwtl
stos
iret
push
sbb
lock
ret
pop
imul
and
js
jno
imul
cmp
mov
shlb
fbld
add
out
addl
push
jp
iret
cld
dec
aas
jg
dec
outsb
fcomps
adc
mov
xchg
inc
sub
mov
enter
adc
dec
stc
jb
lea
lahf
pop
fisubrl
out
inc
adc
mov
sbb
rcrl
add
sarb
cld
popa
jge
in
insb
loopne
push
enter
mov
and
inc
sbb
test
or
pushf
jb
push
adc
daa
lahf
xor
addl
pop
repnz
push
stos
adc
inc
pop
cli
test
repnz
or
push
rorl
fisttps
data16
cs
mov
mov
call
loopne
add
loopne
jae
and
aas
imul
orb
outsb
push
in
xchg
scas
aam
push
add
and
adc
sub
iret
lahf
aas
stc
pop
sahf
push
adc
pop
leave
add
and
sub
fisubl
pop
sub
sbb
and
insb
pop
movups
mov
sub
stc
outsb
pop
mov
cwtl
sub
jmp
or
sar
sbb
inc
daa
jo
add
outsl
adc
in
cmp
add
sbb
das
jmp
pop
jg
leave
add
ds
add
lret
shll
int3
fwait
les
movsb
les
ret
cwtl
aas
mov
repnz
movsl
mov
pop
pop
mov
push
jo
je
add
mov
repz
push
popa
out
or
mov
repnz
lret
add
jp
dec
add
or
loope
push
dec
dec
cwtl
out
add
in
cmp
sub
inc
xchg
mov
pop
pop
dec
imul
adc
jp
jnp
les
lahf
sti
repnz
mov
out
out
dec
push
cwtl
push
jg
pop
scas
mov
or
repnz
ds
and
jne
shrb
out
pusha
stos
add
jg
xor
push
mov
dec
lahf
pop
fstps
leave
repz
mov
arpl
and
dec
xchg
jle
cmp
cmpsb
add
dec
or
outsb
adc
xchg
dec
andl
adc
push
dec
mov
xchg
mov
push
ds
pop
adc
sahf
aas
jg
jg
mov
mov
frstor
shl
in
push
lahf
ja
repz
add
imul
or
inc
and
cs
push
inc
xchg
incl
fidivrs
jle
jl
out
lret
push
mov
pop
adc
in
and
in
cmp
jl
ds
or
push
sub
jbe
xor
and
pop
cmp
fcompl
inc
punpcklwd
inc
pop
pop
outsb
imul
pop
lahf
fdivs
out
mov
scas
xchg
les
aas
cld
inc
cli
in
dec
jl
dec
test
push
push
add
lahf
aas
jg
fisubrl
xchg
mov
push
and
mov
int
ja
dec
xor
in
cmc
sub
sbb
dec
adc
mov
faddl
or
loopne
ror
cld
stc
add
add
cli
cltd
gs
jae
cmp
pop
loop
pop
dec
mov
mov
mov
dec
fs
insl
pop
icebp
ret
ret
or
xchg
dec
call
pop
repnz
adc
movsl
in
scas
iret
sahf
jg
cli
idivb
dec
out
mov
out
inc
in
push
xor
push
fs
lret
enter
mov
lock
repz
aam
js
js
and
out
push
cmp
aas
jmp
inc
scas
outsb
pop
push
jns
fstp
btc
push
or
mov
push
rorl
sub
jnp
lahf
lds
pop
fiadds
fldt
loope
clc
int3
mov
and
mov
movsb
adc
dec
mov
pop
pop
scas
inc
adc
loop
mov
mov
pop
jl
pop
jns
sbb
popf
inc
xchg
sti
push
cld
lahf
push
popf
push
and
lahf
pop
add
dec
imul
and
loopne
mov
jg
jbe
lds
mov
fbstp
popa
mov
iret
scas
mov
sbb
add
daa
insl
iret
adc
cwtl
fisubrl
mov
dec
outsl
mov
arpl
movsb
sub
add
xchg
gs
pop
cmp
jg
lcall
das
mov
test
clc
fidivl
test
sbb
mov
mov
inc
xchg
movsl
in
mov
loop
iret
lahf
aas
insl
adc
jle
jne
xchg
cwtl
icebp
pop
ror
add
inc
lcall
lret
decb
stos
sbb
loope
xchg
fwait
xchg
pop
sub
sbb
ret
pop
sbb
gs
xlat
sub
cli
inc
pop
out
mov
sub
jns
pop
psubb
dec
arpl
stos
push
and
mov
dec
pop
loope
xchg
jle
push
adc
pop
aas
aas
aam
aam
mov
out
inc
inc
mov
repz
lahf
int
arpl
dec
jnp
mov
jg
cld
stc
cmp
inc
adc
fisttpl
lahf
aas
fsubl
int3
je
test
dec
clc
repnz
cmpsl
sti
idivl
pop
cld
stc
repz
mov
leave
fcmove
mov
pop
xchg
mov
out
pop
cmp
ljmp
push
pop
dec
inc
cli
in
clc
mov
ds
pop
out
lahf
aas
push
cmpsl
shl
cmpsb
push
jp
shrl
int
popf
ljmp
into
add
push
dec
jle
pop
jns
ljmp
lock
jp
repnz
ljmp
sbb
roll
outsl
rcrl
jecxz
push
lea
das
scas
mov
enter
or
push
daa
imul
lahf
jo
scas
mov
jnp
adc
arpl
adc
push
shl
out
lret
sub
jge
in
hlt
outsl
aaa
mov
mov
das
adc
mov
push
add
rol
jno
cmp
push
das
add
movsb
in
repnz
insl
xor
mov
xor
adc
lret
or
dec
test
jg
jle
jb
sub
adc
repz
mov
call
pop
imul
cld
in
cmpb
test
jae
sbb
pop
jmp
in
pop
cmp
rorl
lret
das
pop
cmp
cmpsl
adc
mov
xchg
sub
or
pop
jg
fs
inc
inc
or
cs
cmpsb
jno
ljmp
testl
inc
jnp
addl
jo
xor
add
outsl
push
clc
out
stc
adc
lret
xchg
scas
push
jge
mov
aas
jg
cld
jns,pt
nop
xchg
ret
mov
test
rclb
xchg
lahf
lea
adc
lock
outsl
repz
xchg
ja
dec
push
xor
pop
jae
sbb
clc
leave
cmp
adc
out
stos
push
add
mov
jle
fmull
xchg
test
in
sbb
scas
mov
xchg
dec
push
out
mov
sub
push
fisttpl
push
push
stc
repz
outsb
neg
hlt
stos
js
inc
inc
push
ficomps
rcrl
out
mov
or
in
scas
jmp
cmpb
loope
nop
jb
outsl
pop
and
daa
aas
aas
xchg
test
ljmp
jg
mov
mov
ficomps
cmp
cmp
test
das
aas
and
inc
sbb
mov
jo
fdivrl
dec
lahf
sbbl
in
jbe
push
icebp
lahf
sbbl
repz
xor
inc
insl
push
cmp
loope
mov
cwtl
jle
push
scas
jle
cld
stc
ja
stc
int
or
xchg
repz
push
inc
sub
pop
jle
inc
push
and
xlat
rcll
shl
cld
stc
subl
inc
add
jne
aad
gs
lcall
jns
add
lahf
xlat
or
sub
sub
mov
push
fdivr
lds
in
xor
mov
dec
sbb
jno
popa
mov
xor
in
adc
repnz
or
push
testl
dec
sbb
pop
pop
stc
jp
bound
jg
add
xchg
rcll
push
inc
mov
sbb
jae
sbb
pop
mov
js
das
or
lea
sahf
cld
stc
rsqrtss
mov
or
fs
mov
jg
stos
or
xor
fucomi
jae
stc
repz
mov
push
pop
out
inc
insb
pop
inc
mov
jg
movsl
sti
popf
fcmove
je
arpl
pop
mov
mov
mov
aad
stc
repz
loop
or
push
jne
pop
das
movsb
jp
loop
fidivrs
mov
xor
adc
je
movsb
cmc
div
lret
xchg
xchg
nop
xchg
cmpsl
loope,pt
jno
stc
test
pop
jns
jno
stos
aad
dec
mov
ret
pop
jns
lret
bound
sbb
bound
test
xchg
cltd
xor
lods
jns
xchg
push
mov
xor
jno
inc
jle
jle
jge
ret
pop
push
nop
mov
cmpl
aas
or
adc
pop
sbb
adc
xchg
pop
cli
jmp
mov
cld
test
pop
xchg
rclb
push
in
das
lahf
imul
cmp
add
lock
smsw
repz
aas
mov
pusha
leave
scas
xchg
cmpsb
xchg
and
mov
and
xor
rcl
jno
jl
movsl
das
popf
inc
adc
mov
mov
fildll
dec
ja
lret
mov
mov
cmp
repnz
xor
iret
js
movsb
or
inc
xchg
xchg
lcall
and
mov
mov
dec
and
out
aaa
xchg
test
cld
stc
push
add
sbb
and
fistl
pop
jge
pop
in
ja
jb
pusha
pushf
fisttps
inc
jbe
bnd
ja
pop
jns
in
es
into
hlt
imul
cld
push
in
mov
lods
aas
pop
int
aam
scas
icebp
jbe
jae
scas
xor
or
into
test
fisttpl
scas
mov
scas
icebp
das
push
pop
dec
int3
adc
push
fidivrs
jnp
outsb
dec
pop
in
in
pop
xchg
jg
mov
js
mov
xor
fistpll
inc
push
dec
popa
xor
les
mov
repnz
out
stc
aad
outsb
xor
mov
mov
fstpt
push
jbe
sbb
mov
aas
sbb
cld
stc
in
cwtl
scas
movd
lret
scas
inc
xor
add
iret
lahf
push
scas
mov
or
inc
adc
clc
xor
stc
repz
or
aaa
insl
into
fidivrs
push
jge
push
xor
xchg
push
inc
flds
mov
outsl
andb
mov
lret
dec
cmc
inc
jecxz
push
sub
sub
aas
dec
cmpsb
stc
dec
shlb
shll
mov
pop
ss
adc
mov
clc
add
lahf
pop
push
das
jp
jle
mov
daa
jmp
inc
dec
pusha
push
scas
fidivrl
je
xor
jns
mov
sbb
int3
scas
jg
scas
mov
jge
pop
jae
out
ffreep
lahf
stos
movsb
ja
jl
imul
mov
in
lret
out
lcall
mov
add
push
pop
mov
mov
ficompl
in
cs
push
push
mov
and
dec
jns
xchg
push
mov
xchg
in
cmp
adcb
scas
add
mov
dec
jp
cld
mov
sahf
lcall
cwtl
repnz
inc
mov
xchg
cmpsl
call
movl
pop
jns
aad
adc
aas
or
lahf
lds
in
in
ja
lods
adc
rorb
mov
cmp
out
adc
cmp
xor
scas
mov
inc
pop
aam
lret
mov
add
pop
loopne
mov
xor
popf
xor
cmp
lods
iret
lahf
aas
aas
mov
je
fidivrl
xlat
jb
cmpsb
xor
repz
jmp
push
in
push
jae
sahf
insl
sbb
bound
mov
imul
mov
aaa
dec
add
inc
cmc
inc
jg
ret
aam
repz
xor
in
sub
fildll
cld
into
and
test
inc
es
imul
test
pusha
jae
xor
cs
jg
cld
stc
mov
sbb
lret
jae
pop
adc
inc
sahf
aas
adc
lret
test
daa
iret
lahf
aas
lcall
je
aad
mov
pushf
rcl
cld
stc
repz
sahf
jecxz
fdivl
adc
cs
mov
sub
pop
decb
lods
jl
inc
jg
cld
dec
lock
mov
sbb
mov
add
jg
push
sub
sub
pop
fildll
js
cmp
out
pop
adc
lock
mov
add
sub
xchg
fisubrs
adc
repnz
lock
in
stos
adc
mov
test
xchg
push
pop
jns
xor
or
dec
xchg
aad
inc
std
jb
lds
mov
pop
les
jge
cld
jnp
negl
pop
insl
out
pop
cmp
inc
or
stos
div
fs
pushf
fsubp
xchg
imul
in
frstpm(287
lahf
faddl
jns
and
dec
out
mov
divl
xchg
push
pop
jns
imul
fcomp
xorl
dec
jl
in
sarb
das
add
scas
inc
dec
lock
sbb
sub
repz
push
faddp
out
and
sub
xchg
jle
jge
pop
jbe
add
enter
jg
inc
inc
add
mov
nop
mov
sti
in
out
lea
pop
sbb
clc
xchg
cmpsl
pop
lahf
aas
add
ror
xchg
ficoms
loop
repz
adc
cmp
sub
sub
xchg
clc
xchg
orb
or
or
jmp
add
popf
fistl
xchg
addl
pop
cmpsl
rcr
outsl
jl
dec
roll
mov
push
scas
jae
mov
sahf
or
and
pop
mov
insb
mov
adc
out
loopne
ret
rolb
add
add
outsb
addl
addl
pop
cld
pop
test
sahf
xchg
push
push
sbb
add
jns
push
scas
pop
aas
adc
and
sbb
sub
aam
andl
pop
and
test
cmc
push
or
add
ja,pn
sbb
popa
outsl
sub
scas
rclb
or
and
sub
mov
icebp
dec
cmp
mov
add
or
mov
add
mov
and
das
and
add
cmp
mov
and
sub
inc
into
stos
push
adc
ficomps
and
in
and
out
pop
rclb
xchg
xlat
xchg
xor
inc
push
add
pop
and
dec
jge
out
sub
imul
and
xchg
das
jno
test
mov
dec
and
into
jg
xchg
enter
mov
and
pop
xor
repnz
sahf
test
xor
mov
add
adc
add
scas
dec
out
add
sarb
pop
push
and
aaa
lcall
or
fidivl
adc
clc
pop
je
into
jno
xorb
iret
inc
and
es
and
and
jns
into
adc
jnp
xchg
sub
pusha
and
fs
push
aas
dec
push
add
js,pt
aam
add
sahf
fistl
scas
and
movsl
push
push
lahf
jo
xchg
fsubs
outsl
inc
xchg
add
scas
iret
enter
jge
andl
cmp
fcompl
add
lods
pop
jns
add
rcll
pusha
and
cmp
adc
mov
jp
lock
push
add
js
adc
incl
aaa
xor
pop
out
roll
add
or
pop
and
and
or
arpl
and
or
and
or
popl
call
sbb
add
and
daa
add
sbb
mov
or
add
cld
clc
imul
or
push
jmp
iret
cmpb
push
add
and
cmp
adc
mov
and
aam
daa
add
andl
stc
cmpl
mov
xor
and
popa
and
dec
inc
fs
and
xchg
ds
and
add
popa
and
mov
outsl
sbb
clc
dec
push
addb
pusha
stc
push
inc
das
sbb
and
and
and
and
xchg
pusha
and
das
xchg
pop
xor
or
outsb
add
or
cs
or
mov
and
jle
or
and
sub
push
daa
notb
push
pop
add
and
lock
jle
jg
fwait
inc
filds
mov
pusha
and
push
push
cli
dec
push
add
pop
lods
les
mov
nop
and
push
in
xor
repnz
inc
and
xchg
jecxz
ljmp
mov
shlb
iret
cmp
addb
or
sbb
and
add
push
add
push
and
or
outsl
dec
sahf
lds
add
sbb
ret
sub
push
xor
js
and
and
xchg
mov
or
and
xchg
nop
pop
adc
pop
fsubrp
test
sbb
daa
dec
or
adc
xor
and
and
aas
add
outsl
out
je
ret
nop
and
push
jno
mov
into
and
inc
xor
and
das
sub
xchg
das
das
add
lahf
fists
pop
inc
add
push
add
out
inc
jle
push
and
cmpsb
repnz
push
hlt
in
daa
dec
jnp
pop
push
enter
adc
sbb
and
shl
or
shl
add
or
shl
mov
add
mov
dec
into
sub
stc
pop
xchg
cmpsl
xor
sbb
daa
and
add
js
sbb
fs
and
dec
incb
flds
sbb
cmc
leave
inc
in
lahf
add
inc
loopne
and
mov
push
mov
mov
add
xacquire
mov
push
and
sub
outsb
pop
push
push
add
lods
cmpsl
and
pop
or
fcmovbe
mov
add
or
andl
sbb
mov
xchg
push
push
add
jno,pn
dec
xchg
add
test
add
sbb
je
jno
outsl
out
subl
ror
sub
daa
mov
addb
sbb
inc
and
and
and
jl
and
jb
xor
lock
iret
and
and
or
or
dec
and
add
and
dec
loopne
addr16
cmpxchg
into
jno
or
inc
and
dec
and
or
or
nopl
pop
sbb
fbld
add
sahf
dec
fsubrp
add
out
sub
add
andl
and
iret
and
inc
movsb
pusha
and
jle
dec
jo
lret
ret
repnz
dec
push
ficompl
and
add
add
mov
aas
and
lret
cmp
sbb
loopne
mov
dec
shlb
leave
lea
sbb
ss
and
ret
jbe
mov
out
icebp
cltd
and
orl
shl
and
lret
inc
xchg
andl
jl
push
add
out
push
add
add
push
arpl
sub
mov
jecxz
rcrb
pop
xor
or
push
inc
pusha
in
jnp
imul
and
add
or
inc
sahf
jg
pop
xchg
xlat
xchg
mov
or
iret
dec
test
insl
sub
or
jle
add
test
int
outsl
shr
or
aas
mov
sbb
sbb
iret
outsl
and
xor
ds
je
dec
add
repnz
or
fwait
and
push
and
cmp
adc
scas
cmpsl
and
ret
xor
and
popa
push
add
iret
lahf
jo
mov
cmp
add
insl
repnz
and
and
nop
add
push
add
mov
and
adc
addl
fbld
mov
mov
test
and
xchg
and
xchg
out
cmp
scas
adc
pusha
and
scas
push
jmp
mov
popa
and
cmpsb
icebp
cmp
lods
cmp
adc
mov
xor
and
dec
sbb
inc
and
jle
inc
and
andl
and
pop
mov
in
pop
xor
js
and
and
and
xchg
and
and
orl
cvtdq2ps
add
repnz
test
aas
std
inc
dec
arpl
mov
pop
dec
insb
and
and
xchg
ja
stc
mov
adc
daa
xor
adc
add
into
fstl
inc
xor
mov
pop
push
add
fldl
aas
adc
add
mov
and
or
in
xchg
andl
inc
pusha
arpl
or
sahf
lea
mov
sub
fidivrs
out
and
sbb
jl
and
aam
mov
pop
adc
and
sbb
and
outsl
popl
pop
push
add
fdivrp
and
and
lcall
lret
inc
fnstcw
jns
add
popf
and
inc
pusha
and
daa
add
and
mov
jl
sub
adc
xor
aas
and
adc
dec
xor
and
add
fbstp
cmp
pop
lahf
mov
lfs
add
test
and
data16
outsl
xchg
movsl
cmp
inc
faddl
fildll
das
add
add
and
mov
and
cmpsl
xor
and
outsl
movsl
xchg
pop
adc
aas
add
add
push
movsb
das
sti
movsb
xchg
cmpsb
rolb
or
and
pop
mov
loopne
adc
mov
jl
jle
and
or
and
imul
arpl
lods
repnz
adc
push
pop
jg
pop
ret
ljmp
pop
jl
sbb
and
testb
jb
out
lret
or
and
xchg
aas
jle,pn
pop
and
xchg
out
sbb
dec
or
add
and
xchg
add
scas
or
test
fmull
xchg
push
ficomps
and
and
pop
add
or
and
or
ds
pop
and
mov
aaa
out
arpl
or
and
and
and
bts
pop
pusha
and
aas
aas
add
daa
mov
ljmp
in
adc
mov
cwtl
and
shl
pop
imul
adc
nop
and
mov
leave
daa
adc
and
rorl
stc
xchg
adc
ffreep
mov
nop
and
and
sub
jg
sub
ret
cmc
sub
and
icebp
sbb
iret
leave
das
lahf
and
or
scas
adc
adc
cs
and
adc
cmp
xor
lock
and
cmp
out
scas
dec
push
sbb
sbb
lahf
and
or
lock
add
cmp
lret
and
cmp
rclb
addb
repnz
mov
pop
adc
dec
addb
iret
lahf
pop
rcrb
test
inc
in
jmp
ja
leave
and
sub
filds
imul
imul
mov
or
adc
enter
mov
add
dec
sub
pop
es
jne
jmp
xchg
dec
mull
sbb
sub
incb
push
pop
enter
fucomip
iret
jge
push
push
push
or
in
out
mov
add
and
and
jp
ror
out
cmp
mov
pop
mov
xchg
mov
test
sbb
in
mov
inc
aam
sti
adc
shrl
ss
mov
push
xor
stc
lods
sbb
push
ss
lahf
aas
sbb
sbb
imul
or
sub
scas
mov
push
divl
rclb
mov
aad
mov
dec
cmp
xchg
xchg
and
inc
decl
pop
xor
sub
mov
add
mov
push
sbb
in
mov
pushf
rorl
cmp
mov
adc
iret
and
mov
sub
jo
dec
add
add
pusha
push
jl
aas
test
sub
mov
jne
sub
out
bound
jb
mov
mov
repnz
ljmp
addl
sub
or
out
mov
scas
cli
xchg
cmovg
add
mov
movsl
pop
dec
in
push
adc
cwtl
add
outsl
pop
iret
inc
jl
popa
push
jg
lar
mov
adc
clc
in
cld
shrd
sbb
xbegin
fisttps
std
movsb
xor
out
and
add
lahf
jmp
iret
or
inc
iret
dec
cwtl
or
nop
dec
gs
sbb
pop
lahf
iret
lods
add
in
mov
pop
lret
jo
mov
fs
or
call
xor
pop
push
sbbl
hlt
mov
lret
xchg
mov
lock
inc
cli
xchg
sub
push
mov
ret
or
pushf
pop
out
mov
adc
sarb
xor
test
sbb
inc
adc
fucomip
stc
repz
inc
jae
mov
clc
and
xor
mov
leave
stos
mov
repnz
xor
movsb
das
inc
cmpb
ds
adc
mov
and
xchg
mov
xchg
adc
dec
pop
cmpl
mov
sub
jo
fsub
repz
mov
jle
and
push
out
incl
push
leave
pop
sbb
inc
adc
sub
inc
das
mov
push
sbb
sbbb
adc
add
scas
jnp
mov
cmp
cmpsb
rcrb
scas
push
pushf
xchg
jg
mov
dec
pop
jle
push
mov
jg
inc
je
xchg
push
pop
dec
bound
enter
das
addr16
cwtl
xchg
dec
jns
mov
or
loopne
outsl
xor
insl
fildll
sbb
or
aas
call
aas
imulb
cltd
mov
adc
iret
mov
shrb
inc
xor
push
or
xchg
dec
stos
sub
adc
lea
cld
inc
and
add
dec
inc
pop
and
dec
xor
test
pop
fisttps
jp
iret
and
loopne
xor
cmpsb
jg
xchg
sub
movsb
mov
pop
or
test
ror
push
int
insb
jecxz
mov
in
mov
inc
je
sbb
inc
pusha
and
or
jns
mov
adc
push
sub
fisubs
popf
fstl
in
inc
aas
pop
scas
xchg
iret
stos
mov
or
jmp
mov
insb
jg
pusha
clc
lds
pop
iret
incl
leave
ret
pop
jnp
das
sbb
push
ljmp
pop
mov
lock
jo
fsubr
xor
stc
and
mov
and
jnp
xchg
cld
push
lret
jecxz
dec
repz
out
insb
mov
jne
dec
jle
mov
insb
and
dec
jle
ds
xor
punpckldq
ret
xor
or
stos
scas
sahf
fisubl
lret
mov
lahf
les
mov
ja
jno
fistpll
push
repnz
sar
dec
jge
sub
scas
or
or
push
cld
cmc
ret
out
fistpll
xchg
jmp
xchg
popa
jb
and
mov
dec
mov
add
repz
mov
inc
mov
add
sbb
test
inc
lahf
aaa
iret
ret
mov
iret
fistpll
jg
pop
xor
sbb
dec
or
jae
add
sarb
jnp
out
push
sbb
int
aas
sbb
incl
andb
pop
jnp
popf
das
aas
cmp
mov
xchg
cmpsb
jnp
cmp
or
mov
clc
lret
fstpl
mov
inc
das
das
mov
push
fcompl
xor
out
sbb
pop
xchg
sti
arpl
fdivrl
mov
sti
cs
fmull
pop
out
sbb
mov
push
addr16
icebp
or
or
mov
xlat
shrb
aas
rcrl
pop
sarl
pop
mov
das
xchg
sub
stc
mov
fisttpl
incl
pop
or
sub
lret
ljmp
repz
push
dec
in
jle
dec
cmc
push
je
sbb
outsl
popa
comiss
jb
push
jns
fwait
test
pop
lock
sub
or
ds
push
dec
aad
leave
mov
mov
sub
xor
sub
in
jno
ret
in
lcall
mov
test
xchg
int
adc
mov
mov
xchg
mov
das
mov
push
icebp
cmp
push
movsl
jecxz
xorb
dec
fistpll
cmp
es
and
scas
in
push
repz
test
icebp
mov
lahf
jg
inc
out
pop
sahf
xor
lock
out
sub
add
repz
out
xchg
pop
outsb
lcall
lret
inc
out
push
test
out
mov
sbb
jl
lods
xchg
leave
adc
je
xor
flds
repnz
dec
inc
in
mov
pop
mov
mov
hlt
xlat
hlt
xchg
insb
mov
xlat
nop
add
push
ret
jg
test
dec
or
dec
fisubrs
jbe
ljmp
xchg
aas
aam
sbbl
xchg
jns
mov
outsb
rcl
test
jns
repnz
stc
ret
cld
jmp
jg
jns
xchg
push
jmp
into
fisubl
mov
pop
jl
mov
xchg
mov
enter
pop
pushf
mov
pushf
mov
setl
mov
lcall
dec
iret
sti
sub
adc
xchg
jg
loope
xchg
out
aas
mov
mov
xor
pusha
test
addb
sbb
inc
add
jg
or
subl
cmp
stos
movsl
cmpb
mov
dec
outsb
mov
or
add
out
push
je
pop
dec
sbb
pop
xchg
shrl
push
push
repz
xchg
sbb
pop
push
sbb
add
cli
bnd
test
pop
loop
loopne,pt
repnz
xor
aas
push
cmpb
adc
add
dec
jecxz
xchg
fidivl
or
aas
inc
into
scas
adc
arpl
or
dec
fistl
jno
push
push
jae
sbb
push
fsubp
mov
sar
pop
stc
mov
xor
lret
lret
xchg
pop
pop
add
aas
mov
scas
mov
out
test
fldenv
stos
test
sbb
loopne
jo
popf
repnz
repnz
das
ds
mov
and
lahf
repz
add
xchg
repz
sub
dec
fdiv
icebp
in
mov
xchg
idiv
push
cwtl
and
sbb
aas
pop
imul
in
aas
sbb
loop
je
sub
cmp
lahf
sar
xchg
out
in
adc
pushf
jecxz
aad
inc
or
mov
lahf
mov
mov
aas
jg
jg
insl
leave
mov
inc
xor
cltd
fbld
iret
lahf
scas
sbb
cltd
lods
sahf
pop
jl
xchg
jg
and
and
rcl
adc
int3
mov
das
push
fmulp
mov
ret
cmc
test
pop
popf
pusha
adc
and
adc
jnp
push
mov
pop
loopne
scas
add
add
insb
cmpsb
scas
clc
test
imul
out
inc
mov
daa
or
xor
mov
jl
scas
fistpl
jns
pop
add
pop
xchg
rolb
stc
shlb
pusha
adc
lahf
cmp
add
mov
mov
pop
das
dec
xchg
leave
adc
outsb
cltd
xchg
mov
fs
incl
outsb
rorl
jb
or
repnz
out
push
lods
mov
loope
int3
outsl
mov
das
scas
mov
sub
inc
cmp
out
aas
xchg
jnp
fs
sbb
xchg
pop
in
xchg
ja
inc
mov
notb
and
lret
mov
rcrl
repz
push
sahf
xchg
gs
jno
stc
cld
stc
inc
imul
aaa
aaa
add
fmuls
testl
ficoms
iret
mov
int
js
xor
or
xlat
movsb
ds
ds
das
and
ljmp
or
lahf
aas
ja
iret
fcoml
xor
div
out
dec
adc
cltd
aas
push
inc
movsl
xchg
xchg
sbb
hlt
xor
inc
push
dec
inc
imul
mov
stc
movb
inc
and
aad
mul
shrb
fucom
mov
pop
loope
test
test
dec
add
mov
fmuls
cmp
sub
push
add
mov
repz
jmp
data16
xchg
mov
jnp
in
add
repnz
int
cmp
add
sbb
mov
out
push
push
push
rclb
repnz
mov
jle
push
popf
inc
add
or
filds
or
or
mov
rorl
mov
popf
jl
add
stos
pop
xor
mov
mov
outsl
pop
sbbb
and
lret
out
ja
ja
stc
mov
push
cld
push
mov
ja
jmp
cmp
lods
adc
sub
pop
cmp
xchg
iret
outsb
xor
lods
lahf
aas
mov
insl
mov
add
sub
cld
xchg
shrb
das
mov
sbb
push
sub
xor
out
scas
out
pop
xlat
gs
mov
lds
adc
and
push
les
mov
mov
fstpl
aas
inc
inc
lret
jg
outsl
xor
je
adc
jo
out
cld
mov
xchg
cld
inc
into
lahf
js
dec
push
sahf
add
iret
lahf
or
cld
inc
dec
outsl
jp
jne
repz
xchg
mov
hlt
inc
push
sbb
ret
sub
out
in
rclb
mov
xor
leave
xchg
lock
das
adc
add
lret
add
data16
pop
sbb
flds
or
das
mov
dec
lret
imul
xchg
push
into
xchg
enter
movsb
pop
add
lret
jns
shll
mov
int
sub
nop
lcall
das
imul
stc
mov
xchg
push
fimuls
mov
fs
lcall
stc
mov
in
rorl
pop
or
jl
cld
test
adc
dec
add
pop
push
sbb
inc
mov
mov
xchg
scas
mov
mov
mov
sti
fsubl
pop
pop
repnz
stos
jbe
cld
push
adc
mov
pop
decl
dec
subl
test
and
push
jl
pop
push
inc
fists
cld
iret
insb
pop
push
ret
cmp
loopne
je
stos
sbb
stc
enter
shl
mov
jg
movsl
add
xchg
mov
mov
imul
nop
pop
cld
adc
stc
adc
jp
test
jl
push
mov
rorb
out
loope
pop
mov
imul
push
push
and
outsb
ljmp
outsb
lret
sbbb
push
sbbb
push
lahf
xor
dec
add
fsubrp
mov
aaa
hlt
mov
dec
xchg
sub
cmc
push
hlt
mov
mov
push
ficomps
jg
mov
out
ljmp
in
mov
push
aaa
xor
stc
mov
fidivrl
pop
adc
push
sub
mov
dec
jnp
jle
fs
add
scas
cmp
push
in
push
scas
fsts
mov
iret
pop
and
add
push
or
sarl
cwtl
push
sub
push
pusha
lods
mov
lss
clc
mov
inc
rcl
mov
imul
xchg
fistps
mov
ljmp
rcrl
dec
adcb
ljmp
adc
adc
fistps
adc
add
xchg
mov
arpl
pop
es
rorb
sub
iret
adc
cld
test
das
cmp
scas
out
test
mov
push
inc
scas
inc
xor
std
repnz
xchg
cmpsl
mov
inc
xchg
adcb
add
mov
cmp
mov
out
mov
jo
fists
jmp
push
push
xchg
dec
inc
xor
xchg
add
cld
shl
shl
cltd
out
cmpsb
test
or
scas
scas
push
test
in
mov
pop
cmp
add
rorb
adc
xlat
mov
aam
lock
mov
loope
pop
insb
scas
stc
subl
int
movsb
jbe
cld
push
jno
lods
xor
or
aas
push
pop
jle
mov
mov
mov
mov
push
cmpl
add
and
lahf
std
faddp
lahf
arpl
lret
jl
sti
repnz
jg
scas
adc
pop
pop
add
sub
cld
and
js
mov
ds
xor
rcrb
loop,pt
nop
ja
mov
inc
pop
shrb
cld
stc
repz
add
sahf
push
pusha
sbb
push
stos
xor
iret
lahf
aas
jg
cmp
popa
inc
iret
push
or
inc
and
out
xchg
mov
outsl
mov
adc
mov
lock
mov
not
stc
repz
ficomps
int3
rorl
and
mov
and
scas
pop
outsb
shrl
repnz
cld
sub
mov
add
mov
inc
adc
add
pop
fabs
add
sbb
je
pop
clc
ss
and
pop
data16
cld
lret
dec
inc
push
jne
shlb
out
xor
fbstp
cmp
push
cmp
cld
stc
repz
clc
xor
and
and
push
adc
nop
jl
xchg
outsl
xorb
mov
xchg
repnz
add
or
sbb
pop
cmp
addr16
mov
adc
sti
repnz
dec
ljmp
push
dec
push
mov
lahf
idivb
cld
repnz
mov
lods
stc
daa
cmc
aaa
mov
ljmp
outsb
es
ret
mov
je
pop
fists
mov
jp
pop
mov
in
call
xchg
ja
test
adc
cmc
jecxz
ror
pop
xor
iret
lahf
pop
fistps
movsl
sbb
jne
test
out
xchg
imul
push
push
and
pop
les
lahf
lret
pop
push
repnz
repz
lods
push
inc
pop
aad
aad
xchg
outsb
cmp
fwait
lahf
and
or
cmp
sbb
push
xchg
lock
lahf
pop
mov
insl
push
add
push
mov
jl
out
or
in
ja
lahf
pop
in
and
jbe
cltd
mov
cli
aaa
xchg
daa
mov
shrb
xor
xchg
clc
movsl
xchg
cwtl
inc
gs
out
xsave
lret
jb
mov
movsb
test
sbb
push
outsb
cmp
and
repz
add
out
mov
inc
cltd
push
cs
das
jecxz
cmpsb
icebp
ds
xchg
xor
sarb
add
gs
pop
shr
lods
sub
jg
pop
cmc
push
pop
stc
add
mov
movsl
jo
imul
fs
mov
xor
mov
sub
push
insb
scas
loopne
hlt
mov
mov
sub
inc
gs
inc
iret
ret
xor
cmp
mov
pop
adc
add
in
jg
pop
pop
dec
sub
fidivs
sub
mov
jg
dec
adc
iret
lods
vmwrite
jo
mov
mov
fbld
jo
sub
sub
imul
add
and
or
jnp
push
pop
sub
pop
int
inc
dec
adc
subl
fiadds
push
adc
dec
pop
rcr
loope
or
repnz
pop
xor
sub
cltd
or
inc
mov
ljmp
add
das
jp
xchg
adc
push
pop
sub
or
cld
inc
fisubrs
sbb
jge
sub
sub
adc
popl
mov
sub
pop
popa
sub
imul
sub
lret
out
lahf
lret
cmp
mov
insb
sub
or
or
jmp
mov
sub
aas
pop
out
in
insl
adc
sarb
jb
inc
and
out
cmpsb
ds
outsl
test
mov
inc
cli
lods
jo
lods
sub
add
sub
sub
xchg
jo
mov
push
lcall
in
lret
inc
popa
stc
inc
ds
hlt
push
es
sub
sub
push
js
or
mov
fs
push
iret
sub
sbbb
repnz
or
out
in
fucomi
lahf
mov
push
pop
scas
mov
xor
xchg
xlat
inc
popa
jns
mov
sub
out
orb
sub
or
repnz
aas
inc
out
sbb
xor
jg
scas
loope
bound
pushf
outsl
push
mov
cld
test
xchg
sub
add
sbb
sub
mov
mov
mov
ret
inc
ljmp
add
cmpb
inc
and
dec
outsb
cmp
movl
inc
dec
xchg
mov
xlat
push
adc
pop
sbb
outsb
iret
ss
mov
sub
mov
push
jle
push
adc
loopne
das
or
sub
sub
or
pop
sub
outsl
not
lock
adc
arpl
pop
sbb
sub
or
loope
lods
enter
leave
cs
jg
add
loopne
sub
adc
ss
push
lret
loope
fsub
pop
dec
dec
sbb
pop
loop
pop
pop
push
sub
into
aas
add
sbbb
pop
test
pop
ds
into
mov
pop
fs
sbb
ret
call
push
cmp
inc
fs
mov
or
test
repnz
ljmp
mov
dec
test
mov
cmp
sbb
sbb
mov
popf
or
sbb
mov
cld
mov
add
insl
sub
jns
mov
xchg
addl
xchg
orl
sub
mov
fcoml
ljmp
dec
sbb
inc
inc
push
or
mov
mov
emms
add
lds
mov
jle
cmpsb
jg
jo
pop
outsb
in
pop
dec
and
or
loopne
add
out
nop
les
adc
loope
pop
mov
pop
or
daa
mov
or
fbld
sbb
cmc
dec
add
mov
mov
pop
or
lahf
loop
shlb
int3
out
dec
jle
mov
or
or
cld
dec
inc
push
or
cs
sub
xchg
adcl
cld
fcoms
or
mov
lahf
aas
jg
ret
int
out
inc
push
and
and
addl
test
xchg
or
sbb
repnz
dec
pop
lahf
and
loope
movsl
add
mov
sub
out
xchg
add
repnz
pusha
scas
push
jb
push
addr16
push
loopne
loopne
xchg
or
imul
xchg
stc
repnz
or
pop
sbb
add
loopne
push
xor
sub
rcrb
pop
loope
add
jns
push
loopne
lret
sub
pxor
inc
xor
dec
cmc
mov
cmpsl
mov
sbb
into
dec
mov
lret
or
imul
dec
aas
out
inc
jo
xor
js
loopne
ror
dec
dec
lods
push
data16
iret
cmp
and
add
adcb
xlat
nop
loopne
mov
dec
add
jle
jmp
bound
dec
and
lret
cli
cmc
jmp
pop
mov
sub
loop
adc
loopne
xchg
push
fsubrp
push
ret
sub
sbb
sbb
or
mov
add
aas
jg
movsl
loopne
mov
mov
lahf
add
inc
jno
xchg
xlat
fdivrs
push
inc
xor
out
leave
movsl
cs
stc
xor
lock
out
mov
add
and
add
scas
fistl
stos
in
cmpsl
das
in
hlt
sahf
xchg
push
pop
pop
or
mov
pushf
fsubrs
sbb
in
mov
test
and
jg
and
lods
or
adc
push
and
sbb
jp
shl
mov
jg
add
scas
mov
add
pop
mov
repz
jle
cmp
sbb
pusha
loope
imul
pop
rcl
mov
insb
add
mov
dec
pusha
aaa
adc
dec
loop
dec
and
shlb
stc
mov
jb
imul
rcrl
fdivrs
pop
xor
aas
jg
cmp
mov
mov
ficomps
mov
gs
scas
cwtl
xchg
add
adc
mov
out
enter
mov
cmp
into
and
insl
mov
cmpsb
repnz
out
js
jmp
outsl
push
push
add
dec
cld
cld
stc
repz
sbb
xor
xlat
gs
mov
lds
add
fwait
jl
inc
pop
mov
aas
fwait
imul
add
daa
pop
fdivp
out
addb
out
je
adc
adc
mov
js
dec
sbbb
testb
leave
dec
xchg
mov
inc
das
and
loopne
cli
mov
ret
and
add
aas
mov
mov
mov
cs
ret
sbbl
jle
pop
or
fbld
fbld
in
jno
out
aad
push
into
cmpsb
insb
aas
movsl
and
enter
inc
add
loopne
lcall
insb
xchg
loopne
sub
cmpsl
nop
test
jns
and
mov
jmp
adc
out
adc
loopne
inc
ss
rorl
push
insb
pop
jl
or
and
dec
sub
jg
push
pop
jns
das
popf
mov
cli
xchg
rclb
imull
jb
mov
arpl
loop
mov
mov
aaa
add
inc
and
or
addb
or
lret
sbb
inc
xor
push
pop
jns
mov
push
inc
cs
pop
xchg
insb
cmp
pop
out
les
and
leave
je
inc
pop
bnd
enter
inc
enter
mov
push
loopne
imul
test
loopne
lahf
aas
mov
shl
xchg
andb
add
loopne
push
mov
lock
sbbb
mov
add
fadds
or
pop
insb
pop
and
loopne
lock
repnz
pushf
inc
xlat
dec
jg
mov
sub
popf
add
incl
add
pop
xor
test
jl
push
lea
inc
loopne
mov
lahf
int
adc
out
stc
repz
into
push
js
or
mov
repnz
fsubs
and
and
ret
mov
add
faddl
push
jo
cli
iret
rorb
cli
mov
out
xor
les
mov
sub
push
loopne
mov
mov
test
jg
loop
or
fsubrl
add
aas
or
xchg
cwtl
adc
and
mov
xchg
jne
or
cmp
cli
sub
lahf
aas
or
js
push
add
lods
daa
repz
sub
and
addb
scas
lahf
scas
xchg
pop
pop
push
push
cwtl
cli
mov
sub
jb
aaa
xchg
fcompl
add
cmp
sbb
pop
sbb
loopne
xor
jae
and
adc
arpl
sahf
aas
jg
push
out
das
lea
sahf
jns
push
pop
xchg
and
loopne
lahf
add
rorb
rolb
pusha
mov
or
sbb
sahf
aas
mov
cmp
enter
push
pop
jge
test
sbbb
sbbb
jle
add
loopne
in
jno
iret
xchg
aas
jg
fsubl
jmp
jp
mov
addr16
sbb
and
icebp
mov
pushf
nop
addl
pop
inc
pushf
mov
or
imul
mov
iret
out
enter
pandn
sub
pop
dec
das
push
mov
inc
inc
lahf
lahf
and
xchg
adc
add
pop
insb
mov
xor
insb
jg
adc
and
and
insb
movsl
test
fmuls
adc
sub
inc
sbb
insb
inc
and
sarb
pop
aas
inc
jl
mov
inc
cmp
das
insb
sbb
add
dec
insb
jg
inc
or
loop
insb
scas
sub
and
inc
inc
insb
das
cld
push
push
inc
insb
xor
push
orl
inc
jl
push
das
mov
insb
mov
jg
insb
inc
add
add
inc
inc
js
insb
iret
insb
aas
ret
iret
mov
mov
and
mov
xchg
lahf
addb
pop
aas
cmc
sbb
inc
add
loopne
jns
call
push
mov
xchg
pop
cmp
mov
iret
dec
cmp
jecxz
insl
pop
fistps
pop
andb
jg
clc
and
and
sub
cmpsb
add
xchg
add
xchg
pop
into
lret
mov
dec
loopne
in
mov
add
out
mov
mov
push
mov
inc
mov
mov
and
or
mov
sub
jb
out
mov
mov
iret
mov
mov
inc
test
lahf
jp
bound
sub
loopne
stos
leave
mov
xchg
int
nop
sub
fists
cltd
push
lahf
enter
push
jbe
test
aas
arpl
lahf
xor
mov
nop
mov
push
or
or
loopne
inc
fisttps
xor
xchg
pop
nop
jg
cmc
pop
jmp
sub
por
out
int3
push
fnsaves
lock
jbe
dec
popf
push
xor
cmp
or
xor
in
mov
dec
pop
jp
repz
xchg
dec
in
lods
stc
xor
and
js
xchg
mov
jle
outsb
incb
in
sbb
cmp
pop
insb
into
push
jle
pop
into
mov
pop
fidivl
repnz
jge
mov
out
jp
ds
lret
jmp
sub
cmc
pop
imul
arpl
add
gs
inc
sub
mov
aas
jg
inc
dec
add
and
push
and
repnz
pop
mov
jne
in
ja
mov
lds
scas
xchg
ret
and
dec
mov
das
scas
mov
push
or
jle
repz
sub
leave
pop
aaa
adc
and
mov
or
addr16
cld
pop
verr
repz
add
ss
inc
dec
sub
ret
cld
stc
jns
adc
push
adc
das
into
hlt
sarb
mov
jg
addb
jl
jl
and
or
xor
dec
data16
jl
adcl
xchg
pop
xchg
sahf
jl
scas
clc
fbstp
lock
push
jl
jl
repnz
push
mov
jl
mov
push
jl
jl
repnz
inc
pop
movsl
pop
int3
adcb
int3
adcb
int
jl
incb
sarl
push
int3
sarb
jo
jl
jl
push
adc
adc
lahf
pop
and
rorb
xadd
data16
scas
push
inc
pop
shl
push
int
xchg
scas
outsb
or
cli
or
std
mov
jg
push
sarl
add
pcmpeqw
sub
jl
mov
mov
xchg
mov
rolb
cmpb
push
int3
jl
jl
pop
xor
jl
outsl
js
test
inc
in
mov
adc
pop
pop
cwtl
test
jl
cmp
scas
insb
cs
and
outsl
flds
int3
jle
scas
arpl
push
cwtl
iret
lahf
aaa
xor
out
mov
xor
ret
nop
out
pusha
aas
xor
ss
dec
or
push
ljmp
rorb
add
rcrb
sahf
sub
push
pop
cmp
test
mov
dec
ss
cld
rclb
inc
clc
sub
lret
cld
fcomip
lcall
inc
xor
or
or
lret
push
jmp
jnp
and
iret
lock
rolb
add
xchg
adc
mov
jno
testl
inc
mov
lahf
aas
add
inc
add
add
and
and
xor
lods
cltd
int
aas
mov
cmp
push
jle
in
mov
xchg
das
or
js
sbb
pop
mov
push
jle
imul
mov
xchg
shl
jnp
imul
sti
dec
jb
mov
outsl
and
adc
fimull
dec
addr16
into
jae
aam
jae
lret
out
push
mov
in
add
test
inc
and
xchg
lock
ds
jecxz
repnz
call
insb
hlt
dec
wrmsr
mov
push
scas
or
or
mov
mov
xor
nop
jg
rcrb
das
out
int
data16
scas
fcoml
nop
pop
fs
fsts
mov
mov
stc
jle
push
nop
data16
fmuls
lahf
cmp
fists
pop
nop
fists
mov
int3
nop
out
das
mov
popa
nop
seto
nop
dec
pop
xor
nop
pop
sbb
cwtl
nop
iret
shlb
sbb
xor
stc
fstps
pop
pop
rorb
das
cs
shrb
adc
inc
xchg
dec
xor
mov
sbb
pop
push
rclb
mov
ret
mov
inc
mov
pop
sub
shl
inc
adc
ret
xchg
inc
sub
dec
sarb
pop
imul
and
or
cltd
sub
mov
xlat
stos
mov
test
xchg
push
xor
inc
jmp
rcl
and
test
popl
negb
mov
imul
sbb
sub
xor
and
mov
dec
or
mov
pop
xorl
mov
movsb
sarl
sbb
mov
xchg
adc
inc
pop
inc
pop
rorl
mov
adc
cltd
jo
test
clc
and
add
or
inc
addr16
notb
or
sbb
sbb
shrb
ljmp
enter
mov
pusha
lods
pop
imul
adc
add
dec
movsl
mov
rcrb
push
std
cmp
cli
xor
sbb
lods
icebp
dec
nop
push
mov
pop
arpl
and
mov
andb
dec
fsts
and
push
rorb
movsb
jl
fstpt
fidivl
orl
ret
dec
call
test
mov
push
xor
adc
push
sub
ss
pop
mov
cmp
sub
xor
add
inc
cmp
mov
or
rorb
stos
ljmp
enter
cmpb
test
and
and
sbb
rorb
dec
sub
sub
mov
jp
sub
dec
pop
push
aam
adc
loop
add
xchg
cmp
cmp
lea
xchg
fisttpll
in
cmp
lcall
bound
outsl
sbbl
cmp
jmp
orb
sbb
je
or
mov
stos
add
mov
test
push
clc
mov
xchg
inc
or
mov
add
insb
adc
repnz
pusha
je
testb
and
cwtl
mov
es
ds
mov
out
dec
or
cwtl
pop
cltd
es
add
enter
mov
stc
pop
cmpsb
pop
sub
imul
add
lcall
cs
lret
loop
pop
xor
sbb
or
xchg
rcrl
sbb
mov
shll
je
push
jp
imul
xchg
pusha
rorl
sub
clc
insb
fwait
add
sbb
imul
xor
cmp
test
mov
xchg
push
ror
and
xor
push
inc
xor
shrb
or
dec
cli
sbb
movsb
movsl
inc
lods
idiv
jecxz
push
lret
jecxz
stos
fs
pushf
cmpsb
hlt
call
sbb
movsb
jecxz
or
mov
enter
popa
imul
sbb
xor
mov
insb
or
aam
sbb
xor
xchg
adc
push
gs
inc
dec
push
iret
or
mov
roll
jge
push
shll
add
loop
test
aam
and
cmp
test
push
or
outsl
push
xchg
sbb
pop
xchg
add
inc
shll
mov
rcll
mov
add
mov
push
out
lcall
mov
xor
add
sbb
data16
and
push
idivl
test
xlat
or
mov
out
inc
push
or
dec
add
sbb
sub
pop
and
or
pop
cmp
sub
or
int3
lahf
push
jne
mov
and
adc
lods
dec
lss
insb
leave
inc
mov
and
sub
jb
ret
xchg
imul
sbb
jp
or
jbe
repz
daa
add
mov
and
push
adc
sqrtps
and
and
lahf
out
roll
xchg
shl
or
pop
add
and
fwait
adc
xchg
je
sbb
sbb
cmp
jo
mov
add
and
push
add
pop
ret
lock
dec
stc
or
push
push
sub
jmp
or
ret
push
push
call
lret
ret
sub
or
daa
add
scas
and
shlb
adc
mov
fs
adc
add
xchg
jno
mov
push
rcr
add
cmp
or
mov
pop
adc
sbb
andl
push
shl
stos
add
bswap
push
push
mov
or
ja
sbb
adc
mov
or
add
push
push
fwait
add
dec
mov
push
or
or
jb
pop
rol
mov
cmp
ja
or
adc
addb
xchg
inc
ficoml
leave
mov
xchg
sbb
enter
inc
stos
es
push
leave
subb
add
mov
mov
sbb
pusha
shlb
nop
lds
cmp
push
sbb
dec
ljmp
sub
cmp
adc
mov
jns
scas
rclb
xor
and
lret
inc
add
or
cmp
icebp
inc
jmp
scas
movb
add
jecxz
mov
push
mov
xchg
lret
mov
xchg
adc
shll
or
adc
mov
or
sbb
xchg
fwait
rorb
es
and
sbbb
xor
add
jp
cmpsb
lret
loop
loop
cmpsl
adc
sbb
adc
sbb
rcrl
adc
inc
adcb
cmp
cmp
call
rolb
loopne
daa
cltd
jo
cmp
xchg
pop
fstl
adc
sti
xor
es
xorl
mov
push
xor
movsb
adc
adc
mov
rclb
adc
cmp
xor
cwtl
cmp
pop
cmp
insl
call
testb
roll
shrb
dec
mov
cld
es
icebp
mov
adc
ss
clc
sbb
inc
dec
cmp
xchg
cmp
int3
mov
mov
pop
xchg
dec
fildl
add
loope
xor
xchg
pusha
sbb
mov
jbe
in
sub
bound
insb
mov
call
fwait
sub
jp
inc
sbb
mov
dec
lcall
ret
pop
jbe
mov
sub
test
xchg
xchg
jno
sbb
cmp
and
jne
pminub
hlt
shrl
xor
cmp
mov
out
inc
push
cmp
pushf
mov
xchg
push
add
xlat
xor
dec
pushf
shll
add
popa
in
and
push
push
mov
sbb
mov
ds
pop
in
adcl
push
out
mov
push
in
and
pop
mov
pop
jge
pop
loop
mov
test
adc
jle
test
sti
adc
pusha
push
sbb
les
cmpsb
or
loop
insl
pop
es
cli
mov
pmaddwd
ss
gs
in
into
adc
mov
cmc
fsubs
add
pop
shlb
push
or
adcb
pop
inc
fmuls
mov
cmpsb
not
loop
cmpsl
scas
pop
jno
clc
add
rcll
and
sbb
and
fimull
orl
shlb
aad
nop
push
jbe
or
sahf
jo
int3
dec
inc
xchg
gs
into
jnp
mov
fsubrs
push
pop
andb
std
jge
xor
mov
into
nop
cmp
adc
insl
adc
popf
mov
addb
xor
sub
ret
push
aam
sbb
outsb
pop
jp
sbb
xlat
mov
sbb
pop
or
cltd
rorb
push
lret
fcmovbe
leave
into
sub
cmp
adc
and
jnp
shlb
sbb
sub
inc
xchg
xacquire
pusha
hlt
insb
sbb
mov
mov
add
shrb
xlat
push
loopne
test
sbb
push
adc
loope
sbb
adc
lret
sub
adc
xor
enter
int3
pop
xchg
sbb
pop
sub
aaa
dec
js
js
mov
adc
in
adc
orb
adc
xchg
rolb
jmp
mov
gs
and
jg
add
in
or
add
sub
sbb
xchg
mov
add
pop
pop
rorb
sbb
out
mov
test
pop
imul
mov
push
call
bound
cmp
push
push
jl
pop
aas
mov
adc
xor
test
mov
or
mov
mov
push
pop
out
ret
adc
pop
push
xchg
js
or
out
or
push
and
clc
call
aam
cmp
stos
popa
rclb
popa
and
stos
sbb
dec
mov
out
adc
xor
sbb
push
push
jo
mov
adc
pop
sub
test
inc
and
push
movsb
mov
sbbb
mov
test
in
repz
dec
test
push
clc
sbb
adc
popa
sub
and
rorl
arpl
loope
inc
mov
es
rol
inc
lock
hlt
mov
stc
or
into
and
in
shll
int
jne
or
cmp
and
into
push
sub
mov
in
mov
cmp
inc
mov
ljmp
neg
ret
xor
xchg
aam
mulb
pop
mov
aam
mov
repnz
pop
cmpsb
push
lea
subl
adc
adc
aam
jnp
jns
mov
cmp
and
or
imul
shll
sbb
or
pop
leave
loope
xchg
in
adc
mov
adc
sbb
pop
pop
sbb
dec
cmp
popa
jbe
cmpsb
ljmp
pop
xor
lods
roll
mov
pop
push
or
adc
add
cmp
and
or
mov
and
pop
sub
xor
sbb
push
bnd
dec
and
subb
scas
or
stos
fildll
jno
or
std
jo
mov
adc
inc
xchg
test
js
mov
push
xchg
push
and
add
aam
add
movsb
adc
dec
outsl
xor
adc
into
movsb
loop
inc
pop
xor
add
mov
imul
cli
cld
sbb
xchg
sub
push
or
lods
or
pop
aam
push
xchg
adc
out
push
pushf
or
movsb
data16
push
orb
jns
add
adcb
pushf
cmp
jl
cmc
cmp
add
jbe
xchg
loopne
movsb
inc
cltd
ja
ljmp
loopne
ret
push
inc
cli
or
pop
xor
push
xchg
xor
jae
or
sbbb
loopne
jg
pop
sbb
ss
sbb
out
pop
ret
dec
out
mov
mov
hlt
xor
inc
rcrl
inc
movb
mov
or
jp
sbb
insb
mov
mov
or
inc
adc
sbb
inc
mov
add
ds
data16
or
mov
adc
popf
xchg
pusha
dec
and
rcrl
sbb
and
imul
sbbl
dec
add
fimull
mov
or
xor
adc
xchg
dec
sub
xchg
sbb
rol
adc
ret
out
mov
test
je
mov
inc
lahf
push
dec
jo
push
inc
xchg
jno
pop
and
loopne
adc
push
mov
imul
sub
call
dec
ret
roll
pop
out
sbb
repnz
add
xchg
jle
repnz
push
sbb
push
mov
jb
push
enter
mov
xor
add
add
dec
movsl
add
dec
sbb
sbb
movsb
rolb
inc
adc
push
sub
or
xor
push
adc
gs
xchg
adc
push
jae
push
inc
pop
inc
jo
inc
lcall
cmp
and
shlb
adc
rcrb
pop
xchg
out
jmp
xchg
js
or
rclb
test
bound
xor
test
cmpsb
js
add
adc
shrl
lahf
adc
xchg
jo
add
dec
xadd
mov
push
sbbb
adc
xchg
fidivl
push
add
inc
test
add
dec
sub
mov
inc
lea
fwait
mov
push
dec
add
sub
hlt
xchg
cwtl
ja
cmp
imul
sub
push
mov
cmp
test
out
sbb
addb
shlb
mov
mov
ss
ljmp
leave
imul
push
or
pop
push
aas
inc
pop
lock
pop
pushf
push
jmp
fdivs
clc
add
mov
popa
dec
add
mov
rorl
aam
ja
test
and
dec
pushf
sbb
or
sub
sbbb
or
shrb
les
push
inc
lods
add
push
push
pop
leave
mov
movsb
movsl
ljmp
out
xorb
icebp
mov
or
movzbl
jmp
stos
push
push
sbb
leave
adc
mov
add
sbb
pop
dec
or
inc
loopne
add
dec
loop
dec
xor
jp
sbb
xchg
or
or
jb
inc
test
pop
es
sbb
pusha
xlat
pop
dec
and
add
sar
sbb
adc
call
xor
gs
sti
jns
int3
dec
js
inc
ret
insl
mov
popa
adc
cmp
mov
or
sbb
ret
xorl
xor
mov
cmp
and
mov
test
testb
cmpl
push
mov
fisttpll
ret
fnstcw
lret
adc
push
das
cmp
mov
xchg
sbb
testb
sub
js
shr
or
xchg
add
addl
or
test
leave
dec
inc
lret
sbb
adc
int3
push
mov
jle
test
cmpsl
inc
adc
sbb
mov
lods
or
shll
sbb
js
pop
mov
sbb
dec
sub
add
push
lds
imul
pop
std
mov
ret
loopne
in
clc
pop
ret
or
popf
add
xor
mov
shr
jno
xchg
cmp
jp
mov
xchg
sbb
mov
xchg
push
call
sbb
jp
ljmp
cmp
xchg
inc
mov
add
rcrb
lret
or
and
xorb
popf
loope
sbb
add
stos
mov
pop
xchg
mov
test
fsts
push
dec
adcl
push
jae
sar
add
jg
addl
enter
and
mov
add
ljmp
and
adc
testb
xchg
adc
sbb
push
cmp
and
mov
cmp
or
fistps
mov
insb
movsb
add
add
sbb
addl
lret
pop
adc
aas
add
dec
ficompl
sbb
data16
gs
add
ss
subb
into
mov
enter
jo
mov
rolb
test
mov
add
ss
loop
mov
jmp
push
adc
mov
xor
add
push
inc
in
pop
das
jl
mov
sbb
outsb
sbb
inc
push
xor
xor
dec
gs
sbb
cmp
mov
mov
mov
loopne
shrl
adc
mov
mov
dec
adc
ret
mov
cmp
jl
mov
sahf
stos
ret
add
dec
adc
xor
or
lods
loope
add
cmp
dec
mov
arpl
inc
stos
cmpb
sub
push
movsl
mov
rorb
jae
inc
outsb
movb
add
sbb
add
inc
cmpb
mov
mov
push
and
jo
inc
sbb
pusha
mov
mov
xor
jno
leave
rorb
or
cmpsl
mov
mov
dec
xorl
add
aaa
insl
sbb
shrb
aam
cmp
into
adc
adc
pushf
jns
sbb
cltd
sub
aas
loop
push
jns
adc
orb
jno
push
pop
lret
fwait
mov
dec
sbb
mov
lret
sbb
and
and
push
lock
enter
lea
sbb
jl
aam
loopne
pop
movsb
push
add
dec
and
pushf
push
mov
sub
add
and
jne
adc
sbbb
add
add
add
out
pusha
push
fcoms
adc
pushl
pop
ret
xchg
inc
lret
xchg
inc
jl
lea
mov
test
mov
cli
adc
xor
pop
aas
rorl
pop
sahf
add
shlb
stos
fistpll
popa
shll
adc
lea
clts
mov
inc
in
or
aad
xor
xor
jp
fs
pop
jns
shlb
dec
pop
ret
rcrl
xchg
pusha
jno
jb
xor
inc
mov
cmp
inc
add
in
or
sub
in
test
jno
orl
xor
jbe
pusha
nop
loopne
and
stos
inc
inc
scas
push
or
dec
mov
xor
jo,pn
and
mov
cmp
inc
adc
adc
shrb
cwtl
lret
jne
mov
cmp
cmpsb
mov
push
ret
cld
and
daa
dec
adc
inc
orb
fcomps
rclb
mov
xchg
je
sbb
push
ror
je
add
adc
pop
jmp
xor
pop
ret
enter
or
or
xcrypt-cbc
cmpsl
xchg
pop
test
push
sub
xor
push
sahf
arpl
xlat
fidivs
adc
filds
int3
adc
mov
ror
jae
mov
push
aaa
lret
xor
aaa
mov
rol
call
aam
xchg
and
push
les
test
movsl
out
adc
pusha
add
pop
jmp
movsb
add
daa
and
sub
sbb
sub
and
subl
fnstenv
adc
xor
adc
xor
jmp
inc
sbb
xchg
gs
sbb
and
out
popf
pop
ds
pop
movb
jo
inc
push
mov
sbb
add
aam
jmp
stos
shrl
push
jno
mov
push
orb
fnsave
mov
pop
sbb
push
mov
xor
inc
sub
dec
jnp
or
test
aaa
subb
je
vminsd
lods
leave
or
add
ljmp
jmp
or
loope
pushf
push
mov
push
inc
outsb
out
out
xchg
insb
inc
push
adc
or
popa
sub
mov
xor
insb
cld
arpl
call
cltd
jnp
test
negb
or
xchg
sbb
or
xchg
push
cli
call
shrb
daa
cmp
aam
sub
call
je
inc
dec
jmp
or
in
test
xchg
insb
inc
push
xchg
int
data16
jae
jb
dec
push
and
mov
pop
push
sbb
pop
ret
out
pop
flds
lret
xchg
cmp
jo
push
or
add
pop
adc
sbb
pcmpgtb
arpl
sbb
push
js
push
push
pusha
cltd
popa
out
mov
aam
gs
xor
xchg
cmp
loop
jno
jns
test
and
sbbl
push
sbb
xor
repnz
push
jo
das
add
mov
cmp
test
mov
sub
cmp
movsb
sub
lcall
xchg
push
xor
inc
sbb
addl
fdivl
out
fcmovbe
cmp
arpl
sbb
xchg
cld
sti
or
add
push
les
add
mov
ds
mov
or
sbb
pop
jbe
pop
addr16
rcl
dec
mov
push
or
popf
xor
dec
or
sub
and
fsts
or
jle
xchg
subb
xchg
repz
lret
push
or
adc
aam
xor
pop
cmp
ret
cltd
jp
or
push
orb
ret
or
add
sarb
mov
add
mov
icebp
jle
pop
daa
push
cmp
ret
iret
or
gs
int3
insl
inc
fwait
mov
xor
add
shrb
cmp
sbbl
add
sub
or
or
es
ret
or
shll
mov
push
dec
testb
mov
movsl
add
dec
xor
and
addr16
dec
mov
data16
sbb
mov
cld
or
inc
or
pop
cld
inc
and
xchg
daa
xchg
push
or
or
stos
in
adc
cmp
divb
jb
mov
adc
outsl
mov
add
dec
pusha
add
hlt
mov
in
pop
xchg
mov
rorb
subb
iret
roll
ret
loop
adc
mov
rcl
rclb
add
add
add
fcmove
inc
stos
lcall
dec
push
dec
pop
rcrb
loope
jbe
testb
jb
add
and
rol
pop
cmp
sbb
push
mov
cmp
push
out
or
mov
add
ds
push
and
test
push
in
lret
rcrb
movsb
and
repnz
mov
sub
pop
insl
icebp
fs
push
jo
inc
pushf
popf
cmp
inc
rcrb
pop
lock
test
inc
dec
push
rorb
mov
push
andb
xstore-rng
cmpsl
xchg
rorb
lcall
icebp
and
aaa
int3
mov
xchg
pop
jp
push
dec
push
mov
popa
psubd
cmp
sub
ret
je
mov
dec
or
rorb
dec
lea
cs
xor
loop
or
cld
inc
movsb
pop
daa
ret
xchg
sbb
jno
inc
jmp
les
sub
inc
scas
pop
adc
rclb
add
je
inc
outsb
hlt
push
push
orl
icebp
ss
push
or
jne
mov
lods
out
movsb
mov
sbb
adcl
jmp
or
or
inc
adc
add
cmp
int3
xchg
int
gs
lods
into
push
das
pop
push
mov
adc
jbe
push
inc
push
aam
mov
mov
xchg
shl
or
adc
mov
test
addl
jno
add
les
and
insl
add
mov
cmp
xor
loopne
xchg
push
je
cmovae
sub
addl
addb
loop
or
je
mov
push
xchg
pop
mov
pop
ret
test
push
sbb
mov
pop
sbb
imul
xchg
dec
adc
xchg
mov
ret
add
cmp
addl
sbb
cmc
jmp
shlb
lock
xchg
xor
insl
cmp
push
mov
jne
pop
andl
inc
sub
es
lcall
cmc
mov
iret
test
xor
push
mov
orb
jp
push
and
out
adc
inc
mov
mov
xor
into
and
sbbb
dec
pop
and
icebp
and
push
jmp
or
pop
mov
mov
sub
out
icebp
jecxz
mov
mov
adc
lret
push
fs
daa
sub
add
mov
or
jp
sbb
pop
add
lret
mov
in
sub
and
or
mov
add
orl
xchg
nop
push
stos
adc
loope
jecxz
mov
lret
push
xlat
cmc
rcrl
pop
cltd
rolb
dec
and
pop
dec
xchg
sbb
push
mov
jnp
push
cmp
mov
fucom
inc
test
pop
dec
cmp
and
pop
dec
cwtl
prefetch
pusha
mov
inc
add
dec
repnz
lea
cmp
sub
mov
imul
cmp
rorb
inc
and
and
push
mov
xchg
test
cmpsl
inc
add
or
xor
nop
push
inc
inc
mov
icebp
inc
scas
ret
imul
mov
dec
pop
mov
dec
cmp
push
adc
pushf
movl
xchg
push
or
sbb
cmp
adc
adc
sbb
add
jmp
lea
mov
sarb
rolb
test
or
sbb
inc
mov
inc
push
lret
aam
sbb
sbb
and
and
test
popw
adc
lock
insl
cltd
sarb
mov
push
pop
enter
dec
dec
js
add
sub
movsl
test
aam
int
add
or
xchg
addb
or
psrlq
xor
cmp
test
jp
loopne
dec
cmp
mov
xchg
rcl
add
js
idivb
inc
test
xchg
mov
orb
shll
test
inc
sbb
jl
rol
add
cmp
aam
sahf
das
xor
inc
sahf
add
loopne
sbb
ficompl
adc
rcl
xchg
adc
decb
and
mov
idivb
into
mov
es
punpckhdq
push
orl
push
movsb
mov
or
and
cmp
daa
fistpl
cmp
jo
call
fnsave
repz
sbb
sub
sbb
dec
add
and
loop
add
pop
mov
sbb
rcl
dec
add
inc
dec
and
sbb
xchg
mov
or
inc
mov
roll
and
xchg
bound
mov
add
rorb
add
add
test
xorb
mov
roll
cs
aam
sub
or
adc
jne
jns
sub
loop
adc
sbb
lods
add
mov
and
ret
xor
icebp
and
add
pop
add
adc
and
mov
inc
shl
and
and
cmp
inc
cs
call
shlb
or
adc
cli
push
lahf
cmp
push
mov
fcoms
stos
popa
jecxz
sbb
fsubrs
das
or
fimull
add
in
inc
dec
jl
fcoms
shlb
or
shrl
sub
or
ret
aam
mov
sub
add
mov
push
dec
movb
xchg
add
adc
xorb
shll
mov
add
adc
mov
cmpsb
mov
xchg
pop
test
scas
fiaddl
sarl
and
pop
jge
data16
and
mov
sbb
lret
shll
dec
lcall
push
and
insl
push
cltd
gs
push
incb
adc
int
xchg
xor
adc
lahf
xchg
roll
je
insl
js
cltd
jb
fs
push
outsl
cmp
push
adc
dec
dec
jp
shl
xor
push
leave
jp
into
stos
popl
and
ds
sbb
xchg
xchg
xorb
das
dec
addr16
popa
adc
sub
push
xchg
mov
lret
jmp
mov
jno
cmovo
and
mov
jg
cmp
jae
mov
movsl
add
or
aam
inc
test
push
mov
and
das
adc
jmp
rorb
nop
mov
push
or
es
stos
dec
inc
jae
mov
rolb
pop
cltd
psubw
mov
mov
mov
adc
push
mov
pusha
out
sub
xor
add
loop
or
cmp
outsb
push
or
cmpsb
xor
mov
pop
orb
push
mov
ds
ss
xchg
or
sub
dec
dec
nop
cltd
add
push
cli
xchg
sub
sbb
sub
mov
jecxz
add
sub
mov
add
mov
mov
xchg
push
cmp
mov
scas
test
and
dec
nop
loopne
dec
dec
loopne
inc
push
leave
icebp
adc
adc
ficoms
loop
and
jecxz
or
daa
loopne
mov
sbb
add
add
inc
js
nop
adc
enter
pushf
ret
rclb
dec
sbb
hlt
cmp
adc
mov
sbb
lret
rclb
jb
adc
movsl
das
in
ja
add
push
cwtl
xchg
push
or
stos
enter
iret
ljmp
divb
add
xor
call
push
je
ret
cwtl
in
outsb
cmp
dec
stos
pop
call
arpl
inc
dec
sub
mov
and
sti
xor
jbe
lock
push
add
add
sbb
rorl
sub
stos
je
popa
test
pop
pop
lea
push
jb
xor
inc
std
lcall
inc
lcall
rorb
gs
jbe
mov
lea
pop
mov
jne
inc
or
adc
jecxz
add
sbb
sbb
push
test
mull
sub
push
add
or
xchg
jmp
arpl
cltd
subb
mov
cmp
add
addr16
push
scas
rol
dec
mov
xchg
add
mov
negl
out
cmc
hlt
and
inc
inc
in
pop
into
ret
push
push
adc
roll
or
mov
out
jb
iret
test
cli
clc
rcrb
xchg
sbb
xor
rorb
sbb
adc
pop
sbb
or
enter
and
outsb
idivb
xchg
cmp
orl
cs
dec
push
pop
add
sbb
xor
mov
cmp
and
test
cmp
loope
nop
rcrl
mov
or
repnz
popa
push
cmc
fsubs
inc
rcrl
xchg
rorb
mov
cmp
xor
xor
clc
cmp
or
pop
mov
and
push
ficoml
sub
push
fwait
aam
jns
rorb
rcrl
lcall
pop
sbb
push
subl
test
sub
dec
fdivs
icebp
aam
testb
clc
aad
cmc
sbbb
cltd
insb
pusha
sbb
mov
xchg
mov
mov
pop
push
cmp
mulb
stos
fdivl
call
mov
and
outsb
xchg
fwait
push
push
or
mov
mov
movups
sub
push
mov
sbb
pop
inc
ret
sti
or
js
or
lock
cs
jp
push
rclb
and
rdtsc
jmp
adc
rorl
fidivrl
sbb
add
ja
inc
enter
stc
add
testb
sbb
movb
xchg
adc
pop
pop
push
xor
mov
inc
testb
adc
push
jne
or
es
lods
mov
mov
xor
ret
adc
ja
ljmp
push
lret
push
mov
cmp
dec
cwtl
or
mov
rcl
test
out
or
inc
ret
xor
enter
hlt
ret
fildl
mov
mov
cmp
mov
ret
dec
mov
mov
in
jo
xor
enter
cmpps
jle
and
adc
into
xchg
mov
push
pop
sub
adc
or
pop
js
pusha
loop
lock
es
lret
mov
dec
movb
xchg
mov
cmpsl
xchg
aas
fwait
sbb
negl
repz
add
xchg
ret
div
dec
adc
fs
ja
add
clc
ljmp
rorb
arpl
popa
andb
hlt
add
push
lods
sbb
add
inc
loopne
or
mov
rorb
cltd
sbb
add
inc
add
hlt
adc
fst
dec
cmp
cmpsb
and
sbb
sub
and
lret
addl
xor
into
cmp
ds
repnz
or
push
test
loop
cmp
cmc
adc
xchg
mov
loop
mov
add
les
mov
leave
incb
cmp
push
ret
movb
mov
shll
xchg
xor
dec
prefetcht1
mov
in
push
adc
fld
add
rcrl
test
inc
xchg
rcll
xchg
pusha
sub
sar
movsb
xchg
imul
adc
jl
test
sbb
mov
mov
jle
cmpsl
test
dec
jae
and
aaa
rorl
add
inc
inc
fldt
push
xor
pop
sbb
jno
rcr
mov
sub
lret
inc
xchg
mov
xor
xchg
pop
cltd
lock
faddl
xchg
xchg
rcll
jp
cmp
jbe
shl
popf
xchg
inc
sbbb
cmp
js
movsb
rclb
cmp
jb
or
or
roll
test
lock
mov
jmp
inc
add
lret
clc
sbb
xor
cmpsl
push
sbb
andb
cmp
mov
mov
mov
fcoms
icebp
push
and
xor
push
outsl
popa
pop
aaa
or
call
and
dec
enter
and
add
xor
jno
loope
mov
mov
je
adc
insb
cli
aas
pop
dec
push
add
xchg
cltd
loopne
cmp
cmp
pusha
movsb
cmp
push
cmp
add
scas
imul
jge
sbb
stos
adc
lods
or
adc
pop
jno
out
stos
xchg
and
lret
and
shlb
enter
cmp
out
outsb
je
or
jp
test
inc
xor
or
cmp
repnz
sub
arpl
inc
xchg
xor
adc
jl
mov
or
icebp
push
test
jl
push
dec
pop
orb
adc
stos
push
add
sarl
and
inc
mov
inc
lret
iret
testl
add
lret
divb
or
jb
jns
je
mov
lock
dec
ret
pushf
adcb
scas
inc
xor
xchg
mull
movsl
add
adc
or
sub
rol
sbb
pop
inc
repnz
or
adc
jle
pop
sub
sar
add
or
or
pop
into
add
xchg
mov
imul
dec
xor
sub
popa
push
test
push
jbe,pn
mov
dec
mov
rcll
adc
rol
inc
and
popf
push
and
mov
hlt
xchg
dec
iret
test
jmp
icebp
shrb
test
jmp
xchg
lock
mov
es
push
push
sub
rcl
fs
js
test
scas
clc
add
es
lock
and
cmp
dec
inc
pusha
pop
das
test
in
add
cmp
fdivrs
push
sbb
xchg
cmp
sbb
enter
sbb
dec
addr16
add
imul
xchg
mov
push
das
xchg
adc
push
adc
xor
sbb
mov
dec
imulb
jmp
push
hlt
scas
push
mov
push
mov
push
ret
popf
inc
pushf
mov
mov
fiaddl
jmp
and
push
adc
roll
jnp
push
ret
sub
inc
call
add
popa
inc
in
movsb
jecxz
or
cmpsl
jns
push
lods
pop
push
loope
into
lods
push
test
cmc
adc
cmc
cltd
mov
jp
hlt
xor
fists
andb
outsb
pop
xchg
je
dec
cmpsb
ret
addb
xchg
je
adc
iret
pop
lret
ret
sub
enter
inc
scas
aad
clc
adc
adc
adc
not
cmp
les
jne
pop
bound
add
inc
je
pop
fidivrs
add
pop
pop
jbe
mov
in
push
xchg
push
push
push
cmp
cmp
add
orb
adc
dec
imul
loope
push
adc
loope
inc
fwait
xlat
pop
ret
xchg
insl
icebp
inc
push
inc
and
mov
adc
xor
jo
movsb
push
fistl
je
idiv
bound
sbb
sbb
jne
add
sbb
or
mov
mov
shlb
adc
pop
fst
cmp
adc
push
shl
sarl
xor
dec
enter
mov
mov
push
ljmp
mov
mov
jne
mov
cmp
test
pop
aad
scas
adc
repz
add
or
mov
in
add
inc
out
ljmp
xor
pop
and
push
outsl
pushf
xchg
add
inc
stos
dec
addl
rclb
lods
fadd
frstor
cli
int3
add
sub
lcall
sahf
rcrb
xchg
sbb
stc
xchg
sbb
sub
push
sub
les
data16
mov
dec
sub
repz
pop
xor
sub
orb
inc
inc
xorb
sub
inc
mov
inc
xor
add
mov
loopne
mov
cli
or
add
or
inc
jne
leave
cmp
nop
rclb
jp
nop
push
mov
dec
ja
dec
or
xchg
pop
lret
je
pop
repz
repnz
jge
xchg
xor
andb
push
xor
rclb
lods
sub
movsl
sub
push
push
inc
dec
mov
bound
shr
aad
ret
inc
dec
pop
jo
pop
push
add
push
fcmovbe
xchg
cs
adc
mov
add
or
add
ljmp
push
or
pop
js
jbe
test
pop
inc
ljmp
test
les
test
mov
mov
jmp
pop
daa
and
pusha
lea
push
divb
and
out
mov
aaa
sub
hlt
enter
xor
pusha
mov
movsb
inc
mov
stos
adc
mov
sarb
xchg
jns
rorb
or
mov
inc
pop
ret
adc
sub
add
xor
inc
add
add
jmp
lret
cmp
rcrb
rclb
hlt
jo
mov
push
push
loopne
popf
mov
sysenter
and
pop
sbb
cmp
popf
cld
xor
fldl
sub
daa
jnp
push
cmpb
ret
test
jne
int3
jp
or
loopne
pusha
jo
jmp
jge
adcl
mov
mov
jmp
dec
push
fcompl
pop
rclb
sbb
imul
or
mov
lods
dec
xchg
iret
adc
jb
js
outsb
mov
jmp
inc
push
neg
mov
lahf
jecxz
sbb
pop
scas
pusha
scas
call
jne
or
stc
jle
cmp
pop
inc
cmp
or
inc
jl
aad
push
cmp
add
or
jmp
inc
pop
adc
push
jb
loop
pusha
orl
sbb
popa
add
mov
inc
push
push
pop
outsb
push
jmp
nop
adc
loopne
hlt
loopne
push
mov
inc
mov
push
lea
add
dec
and
push
mov
hlt
sub
push
or
fisubrl
enter
or
cmp
mov
insb
mov
sbb
cmp
lret
jp
mov
scas
pop
setns
rol
dec
xchg
repz
push
adc
jmp
xor
jecxz
nop
mov
das
cmp
rcrl
stc
adc
cli
push
rcrb
arpl
xchg
inc
rolb
add
cmp
add
add
and
orb
rorl
cwtl
xor
cs
ss
dec
jae
in
cmc
insl
aas
mov
xor
mov
push
inc
popf
sbb
add
mov
sbb
jno
cmc
or
sub
pop
call
jnp
pop
mov
sub
adc
xorb
sub
and
mov
xchg
and
mov
fs
bound
sar
sub
xchg
test
add
push
bound
repnz
lock
fdivl
dec
mov
pop
insb
xchg
movsb
je
pop
test
add
test
call
mov
movsb
sarl
jl
push
mov
data16
cmpsb
pop
inc
and
inc
or
enter
arpl
arpl
push
pop
adc
adc
or
jno
or
jns
xchg
adc
pushf
ljmp
push
out
cmpsl
lock
pop
pop
jb
mov
push
mov
insl
pop
shr
or
outsl
push
dec
adc
xchg
and
rorl
pop
inc
repnz
shll
leave
dec
and
sub
or
loopne
mov
sbb
jno
add
repnz
dec
dec
call
movsb
push
or
sub
add
ret
inc
jnp
mov
xchg
jp
push
push
iret
push
andb
leave
cmp
xchg
shll
and
mov
loop
sub
addr16
and
lret
adc
sub
xor
xchg
lea
pop
dec
push
mov
lock
add
mov
jb
sbb
adc
test
incl
ds
jmp
dec
sbb
xchg
dec
sbb
mov
cmpsl
mov
pusha
or
sbbl
mov
pop
mov
and
test
xlat
nop
push
jbe
pushf
pop
push
adc
pop
or
test
mov
jp
arpl
add
xor
add
dec
sub
inc
enter
add
lret
mov
xor
test
inc
mov
mov
ret
add
std
outsl
into
xor
add
outsb
fcoms
loopne
sbb
and
fcmovnb
ret
adc
mov
jecxz
dec
push
push
jp
fimuls
xor
cmp
into
push
inc
add
and
push
rcrb
stos
mov
push
hlt
sarb
idivb
arpl
test
push
mov
pop
fs
inc
rclb
add
loopne
lea
sub
dec
add
andl
std
xchg
mov
rol
subb
mov
test
and
mulps
add
add
jo
or
xor
adc
lock
add
orb
mov
out
xchg
xchg
jo
addb
ljmp
test
xchg
and
in
xchg
imul
dec
push
sub
sub
xlat
or
cmp
daa
sub
sbb
addr16
mov
jmp
mov
push
or
push
fxch
test
stos
rclb
push
hlt
or
inc
xchg
div
push
je,pn
mov
sbb
cmp
mov
shll
stos
aam
pop
sub
sbb
arpl
and
nop
lds
sar
xchg
pop
lea
test
loope
aas
pusha
addr16
pusha
add
inc
jmp
jno
sbb
jbe
mov
and
loopne
das
lock
mov
je
dec
call
xlat
clc
cmp
fnsave
cmp
push
xor
push
or
jmp
int3
push
mov
into
pushf
jb
xchg
cmc
and
sbb
ljmp
adc
outsb
push
xchg
je
inc
cmp
call
loopne
mov
movsb
mov
xor
lds
cmp
outsl
push
pop
cmpsb
jns
adc
addr16
xchg
les
icebp
mov
popl
cmp
sub
or
add
or
or
std
push
and
mov
rcl
test
push
icebp
call
adc
mov
adc
daa
lret
xor
xlat
pop
cmp
or
dec
or
lret
mov
sub
inc
inc
psrld
cld
dec
shll
sub
inc
push
jle
dec
rolb
test
pop
scas
and
jl
push
fcomps
dec
into
jge
jg
cltd
pop
push
mov
pop
inc
inc
adc
mov
test
xchg
ljmp
jae
push
or
pop
cmp
sbb
dec
add
push
dec
jmp
insb
jmp
sbb
rcl
jb
repz
fmul
pop
fld
push
fs
push
mov
add
outsb
movsb
push
or
or
add
add
sbb
cmp
mov
in
lret
cmc
andl
xor
push
mov
lock
push
push
adc
mov
jecxz
jne
mov
push
mov
mov
xor
bound
scas
into
mov
add
xor
or
scas
clc
andl
mov
int3
xor
mov
test
shlb
and
lds
mov
sbb
rcr
pop
int
and
rolb
ljmp
sub
inc
mov
adc
ljmp
sub
pop
psraw
pop
pop
jp
insl
movsl
cli
inc
xchg
xchg
and
mov
shlb
clc
xchg
jle
std
pop
mov
es
rep
rcrl
fdivrl
sub
jp
adc
imul
sbb
push
mov
and
sarb
dec
fidivl
bound
hlt
in
rol
and
add
js
mov
adc
sahf
jp
pop
bound
cmp
mov
jecxz
mov
or
fidivl
add
shlb
adc
mov
cmpsb
sahf
enter
out
andb
hlt
pushf
jmp
loopne
shll
cltd
dec
push
jmp
push
jb
gs
inc
test
xor
call
sbb
sbb
or
jmp
sbb
rclb
xchg
xor
xor
pop
mov
fdiv
add
rclb
xor
mov
mov
xor
es
jo
push
inc
mov
pop
pop
mov
loop
xor
into
pushf
test
lock
sti
ds
movsl
loop
or
negb
je
sbb
add
insl
mov
fwait
adc
xchg
pop
xchg
data16
movsb
pop
mov
push
cmpsb
or
pop
mov
pop
adc
sub
adc
inc
inc
sub
dec
push
shl
rclb
adc
jb
adc
cmpsl
sar
jmp
mov
adc
repnz
ret
icebp
mov
xor
add
xor
lds
shll
jp
mov
lods
std
ljmp
jmp
call
mov
sahf
and
orl
adc
jmp
mov
out
push
dec
imul
and
ss
dec
pop
adc
mov
sbb
sbb
xchg
or
xor
fwait
rol
pop
push
lods
arpl
ljmp
xor
shrb
jp
add
add
mov
dec
sbb
dec
pop
push
xadd
call
and
lods
dec
int3
bound
insl
pop
orb
push
push
push
dec
cmp
mov
lock
and
pop
sub
cmc
div
sti
pop
dec
inc
andb
push
arpl
fisubrl
enter
rcll
fcmovnb
push
mov
push
sarb
mov
imul
sarb
fadds
cmpb
aad
fldcw
inc
sbb
cmp
enter
or
push
shrb
les
add
icebp
out
ja
sahf
dec
sbb
jb
xchg
cmp
ret
push
mov
imul
test
pop
add
jmp
and
xchg
add
popf
dec
data16
hlt
les
fs
and
insb
sarl
xchg
pop
outsb
notl
shr
icebp
add
in
int3
or
cwtd
repnz
addl
mov
xchg
add
xor
adc
push
fsubrl
xchg
enter
hlt
int3
dec
sbb
dec
pop
nop
rolb
dec
and
adc
mov
ljmp
ja
sahf
ret
mov
std
or
add
pop
bswap
loopne
mov
mov
push
dec
push
in
xor
jne
mov
xchg
inc
and
or
pop
xor
jmp
test
sbb
jbe
adc
mov
cmpsb
adc
sbb
inc
leave
dec
sbb
insb
cmp
js
lods
dec
and
test
cmp
and
inc
sub
and
mov
mov
xor
mov
bound
int3
mov
or
push
movsb
loope
fwait
clc
andl
sub
mov
outsl
adc
or
scas
push
rcrb
jge
mov
adc
call
mov
imul
lcall
sbb
loopne
pusha
pop
xlat
jo
and
in
rolb
jecxz
or
js
aaa
and
xor
cmp
js
fsubs
mov
mov
xchg
nop
lods
rcrb
jns
sarb
popa
inc
sub
cmp
inc
and
cmp
cmp
cmp
sbb
or
test
fs
push
mov
inc
add
sub
push
sarl
sbb
icebp
mov
xchg
cli
scas
sub
idiv
adc
rorl
push
cmpsb
inc
js
xorb
jo
sbb
loopne
inc
jg
or
fcoml
and
into
int3
mov
shrb
push
xchg
aam
push
xor
sbb
jo
adc
loope
cmp
outsb
loopne
lods
sub
inc
mov
or
xor
adc
jp
push
sbb
ret
mov
adcb
or
ja
pusha
insb
divb
and
pop
pop
and
xchg
mov
loop
mov
fsubrl
leave
call
mov
mov
rorb
push
shrl
in
loop
dec
jl
mov
xor
push
or
or
imul
xchg
in
or
lret
cmp
fistps
push
mov
je
mov
cmp
mov
xchg
push
inc
or
dec
inc
inc
pop
loopne
inc
mov
rcl
jo
dec
loop
sbb
xchg
and
nop
add
test
loopne
mov
dec
pop
add
push
add
dec
push
ret
cs
push
lret
nop
bound
pop
push
inc
shl
int3
jp
jbe
adc
adc
xchg
out
push
loop
and
dec
inc
or
mov
and
movb
mov
inc
jg
or
adc
lret
loope
cltd
xchg
cmp
and
popf
fcmovbe
cmpsl
in
xor
xor
pop
push
mov
jg
sarb
mov
mov
je
xor
call
sub
shl
psrlw
adc
mov
adc
les
gs
inc
or
push
pop
das
lret
jbe
xchg
push
pop
and
xchg
push
mov
dec
ret
icebp
pop
sub
ljmp
nop
push
adc
sbb
subb
add
xor
mov
pop
adc
fs
push
and
mov
sub
lock
mov
pushf
shrl
push
push
mov
icebp
addb
xor
pop
cltd
add
pusha
mov
or
jecxz
pop
inc
out
ret
push
shrb
scas
xchg
xor
inc
sbb
es
push
mov
sub
or
and
rcl
cmpsl
in
aam
nop
les
add
jb
dec
lret
xchg
inc
ret
popa
or
sbb
cmp
sub
inc
cmpsb
bound
cmp
sbb
sbb
or
sahf
aam
or
out
jnp
push
jo
movsb
cmp
fldl
subl
xchg
mov
outsb
and
inc
clc
or
imul
aas
sub
nop
push
mov
and
pop
pop
rcll
addb
mov
dec
enter
aam
mov
js
adc
aaa
push
dec
sbb
and
push
ret
cmp
in
pop
inc
pop
lret
sub
ljmp
sbb
rclb
push
shlb
jmp
push
push
cmp
mov
push
repz
test
xchg
or
arpl
mov
or
and
repnz
dec
or
push
jne
rorb
jecxz
inc
xchg
mov
imul
fwait
mov
stos
nop
pop
adc
subb
popa
hlt
dec
pop
push
movsl
adc
or
dec
cwtl
mov
out
add
outsl
stos
gs
inc
sar
mov
cmc
incb
fiaddl
rorb
jns
in
push
mov
loopne
pusha
repnz
sub
les
adc
pop
xchg
pusha
jmp
jp
xor
add
sub
cmp
cmp
rcll
call
or
or
xor
push
adcb
scas
push
lods
push
lcall
inc
mov
loope
pop
rcr
adc
sarl
mov
dec
imul
sub
hlt
push
icebp
push
nop
jmp
push
adc
jmp
pop
xor
mov
adc
inc
push
enter
and
jmp
xchg
adc
pop
sbb
xchg
lock
std
nop
cmc
add
xchg
sub
aaa
mov
add
lret
mov
in
add
dec
pop
inc
test
insb
sbb
js
sbb
andb
or
xchg
cli
adc
ret
mov
sbb
lock
mov
movsl
add
leave
inc
cmpsb
aad
and
or
add
adc
rolb
inc
insb
pushf
movsl
xor
rorb
shlb
add
lret
mov
add
lods
into
pop
or
test
mov
add
rorl
add
orb
imul
pop
sbb
jecxz
jns
inc
sbb
sbb
imul
adc
je
sahf
push
pop
xor
subb
or
xchg
push
xor
jp
sti
mov
insl
xchg
shlb
xchg
repnz
xorl
cs
popa
pusha
rolb
mov
push
add
xor
shr
or
or
xchg
sub
sarb
imul
pop
sbb
imul
pop
rorb
mov
icebp
clc
jle
invd
dec
shrl
mov
or
testb
push
rcrb
mov
scas
sbb
or
loopne
out
dec
cli
imul
rorb
jbe
in
pop
std
pop
ret
loope
inc
sbb
sub
outsl
and
in
push
xchg
mov
sbb
or
mov
bound
ret
mov
test
or
dec
sbb
dec
ret
xchg
rol
and
add
lods
shlb
cmp
repnz
insb
cmp
jp
mov
mov
adc
or
incb
mov
test
insl
addr16
sub
adcl
jle
pop
arpl
hlt
rcrb
mov
or
sbb
add
dec
pop
sub
ret
pop
dec
mov
pop
add
mov
lea
xlat
xlat
sbb
xlat
mov
hlt
pop
inc
push
inc
mov
inc
or
adc
jge
sahf
xchg
add
test
push
ljmp
or
mov
push
pushf
test
shrl
add
imul
sbb
jb
cwtl
xor
add
imul
sbb
inc
xchg
movsb
xor
sbb
lea
loope
mov
push
leave
adc
test
mov
pop
xor
inc
ret
mov
push
in
add
loopne
add
pusha
or
data16
jb
adc
ret
sub
adc
fisubs
sub
movsb
sarl
push
or
loopne
pop
scas
ret
dec
orb
or
bound
push
add
push
push
lret
mov
fmul
dec
pop
icebp
and
add
js
test
ficomps
clc
outsl
loop
lock
lods
jno
cmpsb
mov
mov
addl
in
sahf
sbb
cmpsb
mov
pop
in
shr
dec
nop
mov
xor
jge
inc
push
cmp
or
and
mov
add
nop
imul
mov
cmp
aas
add
push
push
sub
mov
ret
insb
loopne
daa
push
xor
push
and
push
or
scas
rcll
add
cmpsl
testl
int3
push
cmp
pusha
dec
mov
sbb
or
push
or
and
jecxz
mov
push
sub
mov
inc
xchg
mov
add
sbb
add
xor
test
push
sub
or
xor
and
adc
js
adc
movsl
and
fsub
subl
jno
imul
cmpsb
repnz
pop
in
stos
dec
cld
cli
adc
andl
je
roll
mov
add
inc
es
or
adc
cli
cmp
scas
addb
and
fildll
daa
pop
mov
pop
mov
sub
mov
add
xor
adc
test
pop
repnz
push
int
sub
mov
or
push
daa
jge
or
fstps
shlb
xor
aam
xchg
or
andb
insb
pop
sbb
rcrl
add
rclb
out
js
or
inc
push
imul
mov
dec
xor
bound
pop
inc
ss
sub
mov
sbb
les
sbb
gs
lock
and
cwtl
lret
xchg
je
add
shll
test
adcb
adc
js
or
repnz
test
adcb
push
lock
rcll
xor
arpl
gs
sbb
sahf
sub
into
sti
leave
mov
cmpsb
or
cmp
adc
lods
pop
mov
sbb
and
push
scas
int3
dec
pusha
push
pop
scas
mov
inc
xor
scas
push
pop
sub
dec
xchg
and
push
mov
data16
mov
mov
sbb
lock
mov
push
xor
rcrl
dec
pusha
icebp
or
xchg
inc
ret
ljmp
rclb
leave
xor
out
or
pop
push
jl
test
dec
lea
dec
insl
icebp
test
sub
clc
mov
inc
in
adc
inc
fdivs
sbb
cmpsl
push
ret
pop
rolb
adc
imul
push
inc
pop
sar
add
cmp
stos
adc
add
ret
mov
sub
add
mov
stos
and
clc
xor
loope
or
dec
mov
inc
xchg
pop
ds
sbb
lea
clc
cmpsb
sub
aad
jbe
adc
shll
scas
roll
and
mov
movsb
sub
sub
loop
sbb
mov
jb
cmp
inc
popf
mov
inc
lods
ret
aas
adc
nop
mov
je
mov
cli
ret
xchg
lock
dec
mov
xchg
fldl
pop
jle
imulb
popf
pop
repnz
sbb
inc
cmp
movsl
inc
gs
mov
xor
adc
add
add
xchg
imul
dec
test
out
fstps
mov
sti
mov
xor
push
pop
imul
jnp
movsb
xchg
sbb
jae
movsl
sarb
or
cmpsb
int3
add
dec
add
arpl
jp
cmp
insl
fstpt
and
jp
add
icebp
fstpt
cmp
xor
in
pusha
sbb
jle
pop
cwtl
xchg
fsubrs
daa
test
adc
xchg
lret
ret
imul
call
fcompl
enter
pop
ljmp
push
lods
or
adc
movsb
jno
xor
jge
vmread
xchg
test
rolb
nop
lcall
gs
icebp
lods
movsb
je
dec
in
mov
test
xchg
push
xor
arpl
ja
movsb
nopl
and
sbb
js
outsl
xor
inc
ljmp
fucom
ret
adc
in
mov
or
aad
into
sarb
setp
add
mov
rorb
adc
pop
lods
push
add
mov
fsqrt
inc
xor
pop
cmpsw
rcrb
test
add
xchg
pop
dec
sbb
js
or
sub
data16
cmp
testl
rcll
bswap
movsl
or
mov
je
shlb
insl
pop
and
add
stos
ss
leave
or
or
insb
je
sub
pop
sysret
sbb
and
movb
jp
adc
jns
das
lods
loope
loopne
sbb
fs
cld
sub
addr16
es
stos
lods
xchg
roll
push
sub
jmp
add
jno
mov
mov
adc
push
jae
rolb
call
rcrl
push
mov
daa
or
jp
outsb
cmc
call
arpl
jecxz
push
in
into
test
hlt
or
loopne
push
xor
movsb
es
push
push
mov
push
mov
stc
or
ds
pop
pop
lcall
fnstcw
adc
add
into
jmp
sub
pop
add
push
push
push
cmpsl
add
sbb
movb
or
call
dec
ljmp
and
mov
cld
mov
add
adcb
stos
sbb
xorb
sbbl
out
inc
pop
add
ret
pop
pop
lahf
mov
out
icebp
or
inc
cld
pop
test
cwtl
adc
or
and
add
call
xorb
xor
push
or
adc
mov
push
adcl
mov
icebp
add
enter
pusha
add
and
xchg
mov
call
or
fsubs
cmpsl
insb
mov
add
adc
and
cmp
mov
lcall
xchg
pop
sti
inc
lock
mov
insb
dec
and
and
test
hlt
imulb
mov
stos
xor
xor
or
hlt
adc
leave
popa
dec
mov
subb
inc
xchg
dec
loopne
nop
pop
mov
fidivrs
or
pusha
inc
insl
cmp
test
ret
push
mov
adc
dec
add
cmp
clc
out
orb
sbb
pushf
xchg
aaa
jnp
jl
adc
push
cmp
or
ds
xor
or
ret
or
aaa
or
xchg
lds
out
and
add
push
xor
loop
add
inc
fsubrs
lret
lret
outsl
inc
push
movsl
add
sbb
jmp
xchg
cmp
mov
adc
mov
sbbb
into
or
loop
lock
insl
or
sbb
add
xor
inc
pop
mov
push
xor
pop
cmp
pop
in
loopne
xchg
inc
sbb
mov
pop
add
out
add
xchg
adc
push
int
in
movsb
aad
mov
mov
daa
pop
test
dec
cmpsl
fwait
inc
sub
add
sbb
add
cmp
scas
mov
cmp
jb
pop
add
pop
addb
xor
or
inc
dec
sbb
add
mov
call
std
mov
dec
into
fcompl
pop
mov
js
pop
jbe
ror
adc
mov
int
sbb
dec
shlb
or
mov
test
subb
addr16
out
sbb
xor
adc
inc
pusha
inc
movsb
loope
pop
or
pop
jo
inc
sbb
lock
dec
pop
rol
and
test
push
lcall
or
shrb
inc
pop
adc
and
pop
into
push
xorb
mov
xor
sub
and
add
push
test
and
into
out
fwait
adc
mov
mov
mov
cltd
mov
decl
cmp
sbb
dec
in
xlat
or
push
out
mov
gs
pop
add
lock
mov
test
dec
out
add
js
add
negb
inc
add
jne
push
cmpsb
mov
mov
lret
and
mov
or
daa
jo
xchg
xchg
xchg
adc
xlat
sahf
or
inc
rcrb
add
cmpsl
add
or
imul
lret
xor
dec
aaa
mov
ret
mov
push
test
dec
test
into
dec
loop
pop
push
mov
xchg
rol
or
sub
ror
dec
push
pop
mov
in
or
cs
xor
sub
test
aaa
dec
test
mov
popa
adc
sbb
out
or
addr16
enter
scas
int3
xorb
insl
sbb
mov
lock
dec
cmp
inc
or
adc
push
mov
cmp
pop
sub
hlt
out
or
cwtl
or
test
in
out
test
rcll
movsb
push
push
push
fstpt
xor
insl
pop
add
pop
mov
orl
pop
add
or
pushf
leave
pusha
pop
dec
cmp
xor
add
xchg
lea
pop
xor
dec
pop
dec
rorb
mov
out
adc
add
sub
sub
ljmp
pop
ss
push
xchg
push
addl
aas
decb
mov
adc
or
pop
cli
pop
sbb
pop
loopne
adc
adc
dec
iret
dec
mov
lret
dec
sub
mov
jg
xchg
lea
sub
or
xor
jp
aam
or
dec
mov
push
nop
add
cmp
sbb
pop
adc
nop
xchg
jle
xchg
cmp
in
rolb
or
mov
pushf
and
add
aad
ret
lods
jl
add
adcb
das
mov
adc
lods
xor
into
cld
inc
cwtl
cmp
shrl
adc
jecxz
cmpsb
sarb
inc
jne
ja
or
pop
mov
in
outsl
push
inc
inc
add
int
inc
xchg
inc
mov
push
push
and
imul
hlt
xchg
je
stc
sbb
cmp
arpl
sbb
fs
aad
or
push
leave
mov
xchg
loope
data16
mov
mov
sbb
and
ljmp
loopne
clc
or
add
rclb
inc
push
xchg
inc
lahf
test
sbb
es
push
and
add
push
cld
out
lcall
or
and
add
mov
cltd
push
enter
jp
and
sbb
xchg
mov
jne
xchg
push
or
xchg
adc
and
js
cmpsl
into
test
loopne
or
lods
lods
out
ret
dec
jg
mov
test
add
xchg
insb
insl
cmp
jmp
xchg
stos
dec
add
mov
test
add
mov
fldl
pusha
gs
gs
ds
test
loopne
cmp
xchg
sbb
pusha
mov
mov
mov
hlt
or
adc
push
cmp
mov
mov
inc
into
inc
and
sub
inc
loope
bound
pop
mov
lret
add
or
mov
xor
adc
leave
jo,pn
ss
adc
rclb
enter
dec
or
sahf
stc
or
jno
push
xor
pop
pop
add
ss
leave
xchg
adc
pop
jle
jl
and
or
pop
into
fdivs
add
push
and
in
repnz
inc
ja
add
pop
push
jl
test
mov
ljmp
lds
je
fldl
sbb
nop
push
rcl
mov
pop
and
or
mov
lods
adc
lea
add
je
cmpsl
add
sbb
push
add
lock
movsl
pop
or
pop
insb
in
dec
jecxz
mov
jb
test
mov
mov
and
ret
inc
rorb
lock
mov
xchg
call
cwtl
repz
adc
rolb
add
icebp
jno
loopne
xchg
push
push
jo
or
test
negb
call
mov
shrb
xor
fisubrs
insl
inc
test
adc
cwtl
dec
pop
mov
sub
movsl
pop
int
scas
cli
les
xor
sar
xor
dec
add
jp
inc
lods
or
ret
fnsave
ret
inc
or
dec
loop
jecxz
cmp
sbb
push
xchg
dec
xor
pop
add
push
cmp
sbb
add
cld
pop
jmp
shll
push
shrb
enter
push
ret
add
push
mov
xchg
les
icebp
and
or
popa
ficoms
and
leave
jno
rclb
push
jb
rolb
rcrb
xchg
and
adc
xor
shll
mov
out
push
sub
add
push
adc
test
insb
add
adcb
icebp
int
stos
adc
cli
xchg
add
cld
cmpb
shll
fdivs
popa
inc
inc
addr16
dec
push
pop
mov
mov
mov
pop
and
cmp
icebp
dec
jae
shl
cmpsb
sbb
negb
xor
call
gs
psrld
push
and
call
dec
cmp
add
pop
rolb
jne
and
jle
mov
lret
dec
aam
adc
or
lcall
sub
or
lret
int3
dec
test
cmp
push
or
bound
arpl
mov
fists
insb
mov
cmpsl
mov
ret
add
test
hlt
adcb
outsb
lret
cmpsl
rsm
movsl
xor
mov
je
jl
pop
push
and
pop
xchg
movsl
repz
rcl
jne
add
out
adc
inc
cmp
repnz
dec
dec
dec
push
hlt
mov
sbb
arpl
add
test
push
inc
sbb
mov
mov
cmp
ret
ss
pop
enter
cs
pop
xchg
and
sbb
addl
test
xor
push
pop
nop
mov
in
rcl
xchg
push
mov
add
pusha
cwtl
xor
push
imul
sub
cmpsb
and
repz
pop
mov
cwtl
sbb
enter
andl
shl
sar
psllw
sub
mov
fnsave
nop
fstps
add
popa
pusha
push
jno
and
mov
adc
and
movsl
aam
rol
test
mov
dec
push
push
mov
dec
imul
push
faddl
inc
xchg
jne
stc
enter
ret
mov
dec
push
cmp
inc
adc
hlt
andb
ror
xor
clc
loope
dec
loopne
dec
adc
sub
inc
outsl
test
or
ret
cmpsb
sbb
or
pop
mov
in
rcrb
sbb
subl
lock
jmp
clc
and
movsb
or
lret
sbb
add
sbb
pop
clc
mov
and
pop
enter
cmpsl
jbe
push
adc
jno
clc
repnz
jnp
nop
movsl
dec
sar
nop
push
outsb
cmp
andb
adc
xor
dec
rcl
les
mov
push
enter
mov
inc
push
sbb
mov
mov
pop
xchg
pop
xchg
add
add
lock
cmp
and
sbb
mov
icebp
add
xor
pop
lock
fsub
inc
xchg
cmp
and
push
cmp
icebp
and
inc
das
sub
pop
sbb
mov
push
mov
push
or
xchg
into
ret
ret
shlb
add
lods
mov
jns
addb
sbb
mov
clc
sbb
loopne
pop
mov
adc
adc
in
pop
or
add
add
xchg
enter
jo
fiadds
rcll
dec
sbb
sahf
cmp
test
mov
pushf
push
mov
adc
inc
sbb
sahf
xor
lock
cmp
sub
popa
test
xchg
push
or
ret
adc
add
sahf
insb
ljmp
test
sub
loope
fiadds
in
int
mov
xchg
fldt
xchg
cwtl
sbb
adc
cltd
addb
mov
sbb
adc
mov
adc
gs
or
lea
enter
push
arpl
sub
and
sbb
lret
jl
je
call
std
imul
cmp
jo
int
dec
cwtl
adcl
inc
mov
repz
pop
lahf
aam
xor
push
cli
xor
and
xchg
jb
shlb
lea
aaa
sahf
add
sbb
repz
pop
push
mov
inc
inc
hlt
add
movsl
sbb
popf
lret
sbb
cmp
sbb
sbb
jo
mov
imul
movb
movsl
scas
xor
xchg
lret
mov
dec
sub
mov
jecxz
loope
or
adc
push
test
jne
das
xor
lds
mov
adc
decb
add
sbb
outsl
and
adcl
mov
shrl
adc
jns
add
xor
pop
std
enter
adc
popa
test
lock
cmp
inc
lock
adc
mov
adc
cmpsb
push
cmp
cmp
xchg
out
subl
sbbb
mov
dec
adcl
mov
push
add
sbb
xor
adc
push
dec
lods
xor
inc
cmp
push
dec
dec
loope
repnz
pop
inc
dec
sbb
seta
loope
mov
jo
sbb
pop
out
sbb
and
lock
inc
aas
mov
mov
and
dec
and
add
or
dec
mov
cmp
rcrb
jp
leave
daa
lock
push
push
sti
mov
sub
add
push
movsl
int3
shlb
push
inc
push
or
sbb
roll
div
or
ret
mov
cmpsl
aad
mov
sub
js
inc
rorl
imul
cmpsb
jbe
add
stos
push
adc
outsb
sbb
dec
ficoms
push
sub
inc
jge
rcll
push
es
mov
sbb
fdivrs
int3
push
push
popf
sub
ds
push
xchg
add
mov
push
dec
mov
mov
cwtl
inc
adc
loope
lea
or
pop
sub
movsl
out
out
dec
mov
or
shl
sarl
dec
sbb
mov
mov
or
clc
add
mov
popf
js
rcrb
ss
xor
xorb
outsb
cwtl
mov
or
mov
adc
loop
imul
fwait
xor
push
inc
or
sbbb
mov
pop
loopne
jo
bound
push
arpl
jp
pop
scas
fimuls
cld
sbb
pushf
add
xor
cmp
cli
mov
pusha
test
inc
adc
push
xchg
add
test
lods
test
adc
pop
sub
mov
and
ja
lods
adc
insb
sub
test
dec
sub
stc
mov
nop
lea
inc
sbb
fnstenv
sub
gs
mov
push
and
inc
sbb
or
cmpsb
mov
sub
sbb
movsb
dec
loopne
ds
mov
jo
decb
xor
pop
rcrb
js
push
movntps
pop
cmpsb
pop
pop
int3
jo
stos
shr
and
xor
jl
cmp
add
inc
cltd
mov
ss
bound
cmp
pop
pop
test
mov
clc
fwait
subb
es
lock
sub
rolb
sub
ret
and
mov
arpl
or
hlt
cmc
add
test
jbe
cmp
mov
stos
jo
add
or
cmp
sub
insb
mov
or
sahf
xchg
inc
movsb
add
add
inc
adc
cmp
enter
roll
lahf
xor
rclb
sahf
nop
inc
movsb
fstpl
dec
clc
xchg
aaa
xchg
pxor
and
ret
xor
push
adc
sbb
jmp
ret
sbb
mov
pop
adc
pmaxsw
ret
fldenv
sub
add
pop
add
in
outsl
add
dec
sbb
cmpsb
or
movsb
and
jns
adc
jo
cmp
mov
adc
scas
mov
popa
popf
dec
dec
mov
push
xchg
jbe
in
or
dec
sub
xor
push
add
sar
or
mov
inc
arpl
fsubs
int3
shlb
outsb
dec
or
xor
push
jmp
outsb
jg
popa
push
add
ror
xor
inc
fdivrs
lock
jmp
pop
enter
sub
inc
cwtl
cs
dec
lock
push
adc
fdivs
cmp
cwtl
and
into
dec
xor
imul
push
add
inc
push
adc
enter
sbbl
adc
and
repz
lea
and
cmp
fisubrl
scas
pop
in
fisubrl
leave
jo
dec
das
jecxz,pt
test
mov
addl
and
mov
repnz
xor
add
or
inc
fs
pop
mov
dec
outsl
stos
sbb
sar
add
xor
cs
cs
into
jmp
mov
pop
cmp
rorl
push
cmpsl
sbb
push
adc
mov
adc
xor
push
mov
adc
push
mov
ljmp
add
xchg
ss
clc
sbb
pop
mov
dec
loopne
push
xor
or
cmpsb
lea
or
mov
xchg
push
cmpsb
sub
add
mov
fdivrp
mov
push
cld
mov
jp
aad
enter
loop
rcl
sub
sbb
sbb
icebp
test
bound
je
test
stc
adc
mov
adc
ret
mov
sbb
pushf
mov
movsl
andb
mov
jo
jg
sarl
or
adc
rcl
cmp
push
dec
or
faddl
in
rol
jnp
push
sahf
jg
push
addr16
lods
cld
dec
dec
sbb
mov
xor
inc
les
cmp
mov
xor
pop
or
movsb
or
js
in
cmc
sbb
push
push
fwait
pop
push
das
rcrb
or
add
leave
movsl
stos
pusha
pop
inc
or
dec
lea
sti
pop
cmp
outsl
jge
mov
jb
push
pop
add
popa
lods
sbb
xchg
ret
add
pop
movsb
jge
js
pop
cs
and
add
popa
mov
add
imul
js
add
dec
mov
jmp
je
enter
movsl
xor
or
mov
out
add
lret
xor
push
mov
xchg
repnz
das
mov
cltd
push
adc
inc
addl
sub
arpl
enter
loope
mov
push
pop
or
add
mov
adc
test
sub
cmp
jmp
lods
test
cmp
sbb
push
lods
pusha
ljmp
bswap
jbe
pop
movsb
pop
orl
xlat
sbb
and
fsubrp
xchg
adc
test
mov
sar
adc
inc
push
pop
or
add
mov
jl
add
rclb
sub
sub
rolb
adcb
aam
das
xor
loope
adc
add
or
dec
inc
and
dec
jno
stos
addr16
lock
adc
sub
sub
mov
cld
push
push
mov
call
and
mov
cmp
push
jnp
pop
mov
in
jb
testb
add
in
lret
mov
jns
add
jge
push
pop
sub
push
and
subb
mov
insb
pop
xor
add
and
or
pop
push
xchg
fidivrs
inc
lret
pop
ret
sbb
adc
xchg
test
mov
enter
pop
mov
mov
sbb
xchg
shl
loop
notb
mov
enter
aam
sbb
and
pop
imul
sub
sbbb
or
add
add
push
cmp
jno
lea
fsubrl
shlb
sbb
dec
sub
adc
sbb
push
out
push
invd
push
test
sub
and
or
cmpsb
xor
push
or
sbb
jle
cmp
fstpt
fwait
xchg
sub
in
ret
enter
sbb
out
sub
sbb
mov
sub
mov
mov
inc
mov
adc
loopne
jne
push
lods
adc
ret
popa
push
pop
je,pt
xchg
repnz
cmc
cmpsb
into
and
pop
push
and
and
lods
sub
add
mov
aaa
btr
pusha
rolb
or
jo
fldenv
sub
push
and
shrb
add
mov
jbe
ds
xchg
adc
les
push
in
push
mov
lret
aad
and
mov
rolb
test
add
mov
xor
mov
pushf
aad
mov
or
xchg
cltd
aaa
xchg
xlat
or
adc
cmpsb
xchg
test
into
addr16
popa
leave
dec
sbb
mov
pop
push
notl
sbb
inc
push
mov
mov
imul
mov
jbe
sbb
ret
stc
incb
fdivrs
or
and
mov
mov
ret
pushf
jno
pop
scas
xor
adc
and
and
and
xor
fs
push
je
jecxz
orb
mov
pop
inc
mov
popa
adc
pop
add
mov
and
adc
mov
and
mov
add
pop
mov
loopne
inc
mov
jne
inc
sbb
pop
loopne
pop
xchg
pop
insb
rorl
mov
int3
rorb
xlat
shl
in
enter
and
sub
or
cltd
movsb
jbe
decl
cmpsl
jae
push
pop
pop
bound
push
aas
push
sub
out
xchg
or
and
pop
lea
inc
bound
add
or
imul
aaa
pop
lds
cmp
hlt
mov
add
pusha
loop,pn
xor
sbb
push
inc
cs
aam
sub
icebp
dec
adc
loope
add
leave
rolb
adc
and
addr16
loope
loop
dec
cmovp
push
mov
cs
enter
arpl
scas
push
rolb
je
sub
inc
and
scas
push
xor
movsb
or
addl
cmpb
add
sub
inc
push
sub
sub
rcrb
popa
andl
jne,pn
fadd
sbb
xchg
add
adc
dec
or
lods
mov
add
inc
fsubrl
mov
push
xchg
add
inc
into
jbe
dec
or
in
js
jo
rclb
test
dec
add
sbb
push
popf
push
js
or
es
and
push
out
inc
mull
test
sahf
jp
jo
cs
add
cmp
setp
or
push
cmp
mov
and
les
dec
xor
mov
or
xchg
pushf
dec
jae
mov
adc
jle
add
lret
xor
inc
daa
xchg
mov
pusha
cmp
mov
add
sub
gs
push
xor
ljmp
call
out
or
das
or
outsl
jle
sbbb
enter
and
jl
fldenv
andl
jne
jge
sti
adc
xchg
inc
inc
xor
addr16
cli
mov
xchg
or
mov
nop
mov
xchg
subl
inc
sbb
mov
shlb
or
xor
cltd
jmp
cmp
in
int3
add
rolb
out
arpl
ret
pusha
or
push
ss
xchg
sbb
jae
xor
fcmovnb
rclb
stc
mov
and
pop
mov
xchg
daa
or
push
push
daa
pusha
fs
adc
addl
lds
cli
cmp
ficompl
push
xor
mov
mov
cmp
out
insb
lock
cmp
jo
mov
and
pop
sbb
enter
test
xchg
jecxz
sbb
inc
sub
and
mov
add
icebp
adc
dec
push
rclb
sbb
pop
cmp
test
orl
and
or
sub
sub
scas
sub
jmp
and
sbb
jae
xor
mov
test
sub
es
jge
push
fisttpl
pop
push
xor
dec
add
xchg
adc
or
clc
mov
sub
inc
add
sbb
jbe
adc
aam
cmp
xchg
sbb
xchg
lea
or
or
and
je
or
add
frstor
mov
push
xchg
js
dec
xor
jle
cmpsl
aam
xchg
loop
add
andl
shrl
adc
cmpsl
sub
xor
jo
mov
push
rcrb
add
inc
lods
sbb
sub
lock
pop
scas
es
add
lcall
pushf
dec
jge
daa
mov
aad
pshufw
fs
dec
mul
in
loope
jl
dec
pop
mov
inc
xchg
adc
out
sbb
xchg
cmp
mov
loopne
fs
xchg
mov
and
push
lcall
stos
lock
xchg
in
mov
popa
aaa
loop
jne
mov
pop
rorb
test
movsl
push
or
dec
in
add
pusha
cs
cltd
sbb
sub
daa
in
das
call
sbb
xchg
outsb
loopne
xchg
sbb
pop
and
test
pop
mov
lea
je
and
nop
pop
int3
xchg
nop
jb
xor
push
push
mov
xchg
adc
jne
iret
shll
icebp
add
cmpsb
sahf
jmp
mov
andb
jge
push
xchg
xchg
dec
scas
and
mov
cltd
xchg
in
cld
add
aad
test
mov
enter
mov
cmp
scas
jo
cwtl
incl
fld
nop
test
mov
sbb
wrmsr
outsl
test
push
and
add
movsl
cmp
or
push
push
repnz
or
push
int3
mov
sti
mov
mov
pop
or
popa
movsl
add
fsubr
adc
add
fadds
xor
in
cli
or
icebp
adc
dec
mov
pop
jo
cmp
or
add
dec
test
sbb
loop
xchg
pop
or
cmp
pop
pop
jo
or
subb
repz
mov
sahf
push
add
xchg
inc
shl
or
add
enter
mov
lea
pusha
lcall
push
shl
sub
push
hlt
sbb
lret
xorb
add
or
adc
sub
mov
js
lods
ret
and
mov
es
addl
push
into
mov
xor
mov
lock
daa
lret
inc
jns
out
test
cmp
test
icebp
out
ret
and
dec
add
xchg
dec
loopne
push
inc
sbb
pop
bound
loope
aam
push
and
sub
adc
sub
push
push
push
xchg
sbb
inc
mov
adc
pop
pop
add
adc
push
scas
mov
test
pop
pop
jne
cmc
add
add
dec
fwait
sbb
clc
xor
and
add
cld
adc
sbbb
shlb
test
or
and
gs
push
dec
das
sub
dec
mov
rorl
mov
push
push
xor
mov
mov
adc
pop
mov
nop
inc
xlat
divb
add
pop
lods
or
jbe
imul
sub
loopne
mov
clc
rcrl
push
mov
pop
test
or
leave
stos
adc
mov
lds
dec
inc
stos
cmpsb
incl
mov
test
mov
movsl
adc
xor
cmp
push
cli
adc
mov
add
add
add
inc
mov
mov
mov
xchg
loopne
roll
and
or
and
in
mov
fs
aas
das
jns
sub
xchg
rcrb
add
push
or
movsl
mov
insl
call
mov
push
shll
pop
outsb
mov
sub
dec
popf
inc
dec
nop
and
mov
pop
sbb
xchg
repnz
sub
notb
dec
or
fadd
test
out
inc
xor
pusha
sbb
mov
jl
mov
daa
sti
xor
cmp
fsubrl
jno
ret
es
ljmp
push
shlb
mov
mov
les
mov
aad
sub
mov
push
jae
sub
dec
push
lods
incb
ss
mov
pop
test
push
nop
cld
push
add
or
push
loop
inc
pop
enter
cmp
sbb
movsl
or
xchg
sahf
add
adc
pop
arpl
sbb
jbe
cmp
or
xchg
mov
mov
sar
or
dec
lea
cwtl
push
xchg
cmp
ret
add
mov
mov
push
mov
imul
aad
inc
inc
lahf
sbb
dec
mov
pusha
insl
ret
mov
or
cmp
sbb
dec
jb
test
pop
aaa
push
aaa
cmp
push
mov
sub
adc
adc
cmp
pop
cli
mov
insl
pushf
sahf
and
xor
shlb
je,pn
imul
pop
negb
or
mov
push
mov
loop
mov
arpl
or
stc
xchg
and
and
xor
ret
push
or
xor
fwait
in
inc
mov
and
loopne
pop
popa
mov
push
or
mov
jmp
or
jle
movsb
sub
push
and
xchg
subb
xor
inc
gs
push
ret
xchg
aas
mov
call
adc
xchg
adc
mov
ss
mov
xchg
rcl
inc
pusha
inc
loope
icebp
jl
sbb
stos
or
sbb
push
cmp
push
arpl
call
int3
adcb
testb
das
rcrb
sub
dec
leave
bound
lock
mov
les
inc
jle
out
notb
sbb
adc
add
cmpsb
push
sbb
mov
adc
or
popa
or
adc
add
sbb
out
insb
add
arpl
and
nop
ret
or
adc
rcl
mov
dec
aam
idiv
push
adc
pop
loop
cs
arpl
or
test
mov
mov
xchg
ljmp
push
rclb
jne
iret
push
sbb
push
sbb
or
div
push
cmp
xchg
insl
je
pop
hlt
sbb
pop
and
xor
jbe
push
sahf
push
je
sub
mov
aam
loope
stc
stc
or
inc
add
push
add
pop
xorb
cmpl
out
or
mov
xchg
push
lret
mov
mov
add
push
pop
sbb
enter
inc
loope
sbb
mov
push
inc
sahf
adc
subb
sbb
jp
lcall
add
out
or
push
movsl
adc
add
sub
loope
pop
negl
call
push
fdivrl
cmp
jp
cmp
cmp
jae
add
or
pop
push
dec
sub
gs
mov
test
pop
pop
xchg
adc
lods
push
xor
push
sbb
or
push
or
rcrl
or
jo
pop
out
xorb
sti
sub
rcl
adc
mov
push
in
adc
popf
and
inc
enter
or
pop
adc
cmpsl
and
sbb
pusha
rol
xchg
mov
icebp
mov
xchg
and
xor
pop
cli
cmpb
cmpsl
lret
mov
sub
push
in
pop
les
in
mov
rolb
push
push
clc
dec
mov
mov
repnz
loopne
adc
and
pop
add
jle
ljmp
add
subl
sbb
test
xchg
mov
or
xchg
or
test
js
pusha
xchg
mov
fisttpl
push
lds
adc
adc
aam
mov
sbb
shl
jmp
cwtl
pusha
test
jp
test
arpl
pop
mov
add
add
pop
add
jns
dec
xlat
push
xchg
fs
mov
hlt
push
lret
sbbb
sarb
and
cltd
inc
xchg
mov
or
or
dec
and
gs
adc
ja
cmp
adc
je
add
inc
xchg
loope
popa
and
inc
pusha
cmp
mov
loopne
cmp
dec
insb
movsb
mov
sub
and
inc
sbbl
adc
pop
cmpsb
cmc
add
fistps
adcb
or
in
inc
filds
sub
jno
ljmp
add
adc
and
ret
cli
dec
mov
push
dec
inc
add
daa
push
cmp
xchg
push
inc
sub
add
sbb
mov
dec
push
cltd
mov
xor
xor
mov
jo
ret
iret
push
dec
test
movsb
xor
inc
adc
aad
fsubp
inc
inc
aaa
xchg
push
sub
xchg
orb
push
pusha
jo
xor
push
xchg
insb
jns
test
les
adc
dec
or
popa
pop
lahf
xchg
mov
aam
pop
push
rcrb
popf
xchg
pop
fistpll
inc
inc
imul
test
dec
fcoml
ss
pop
jp
push
pop
mov
popf
sbb
mov
stc
add
inc
mov
push
and
mov
dec
or
and
cmp
pop
test
sub
shr
cmp
repnz
mov
mov
xor
pop
mov
and
cmpsl
cmp
jbe
cmp
xchg
ds
xchg
mov
orb
or
dec
data16
xlat
shl
decl
cld
je
xchg
mov
inc
pop
pop
out
jp
xor
dec
and
lock
ljmp
inc
and
inc
inc
push
jle
add
dec
mov
aam
xchg
sub
inc
in
es
pop
jne
or
sbb
push
push
dec
pop
test
add
add
or
pushf
cmpsb
xchg
leave
imul
xlat
js
movsb
dec
push
test
stos
mov
loop
mov
inc
add
pop
push
pop
hlt
add
mov
cli
pop
lahf
add
or
ljmp
push
adc
sbb
jmp
test
xchg
push
jecxz
push
or
rolb
js
inc
roll
dec
leave
push
push
or
pop
add
pop
or
testl
mov
xor
xor
and
or
cmp
jbe
push
adc
add
hlt
js
aad
add
lods
push
shll
lcall
push
push
sub
test
leave
add
call
push
or
stos
cli
jmp
cmpl
xor
jb
test
jb
mov
mov
aas
or
jecxz
in
jne
mov
les
int3
iret
or
jecxz
inc
js
pop
arpl
fstpt
adc
jo
or
imul
adc
push
lods
fs
daa
mov
add
dec
lcall
mov
outsl
arpl
sbb
fdivrs
adc
cmc
lods
sbb
lods
cmp
or
mov
and
xchg
mov
ljmp
lock
jbe
pusha
jbe
inc
mov
ret
sbb
dec
inc
icebp
ret
loopne
ljmp
xchg
pop
or
jp
adc
add
lret
leave
adc
mov
xchg
xor
or
mov
fadd
leave
xor
add
sub
outsl
adc
xor
sahf
xchg
or
mov
add
pop
fisubrs
loopne
or
into
sarl
stos
dec
leave
push
pop
sbb
or
push
lock
or
testb
or
or
or
mov
inc
shlb
push
scas
aad
sbb
sbb
and
pushf
mov
sahf
mov
pop
mov
add
in
mov
adc
es
xchg
push
inc
bound
ss
dec
test
xor
mov
sub
or
bnd
dec
or
push
cmp
dec
aam
enter
negl
ljmp
add
inc
sbb
mov
enter
test
inc
add
add
or
or
xor
mov
negb
push
js
push
xor
push
test
insb
inc
movb
js
cmp
sbb
icebp
imul
jbe
push
cs
or
lret
dec
mov
or
ret
sub
fidivrl
xchg
nop
rcl
xchg
pop
mov
push
mov
test
and
loopne
add
sbb
mov
jbe
mov
jge
in
pop
pop
dec
pop
dec
push
iret
roll
dec
sbbb
or
fcomps
jl
movsl
pushf
bound
and
add
cwtl
and
fldl
pop
andb
pop
out
sahf
pusha
repnz
cmp
orl
vpmacswd
add
adc
inc
loope
ret
lahf
inc
aam
shrl
test
sub
and
sahf
xchg
sub
xchg
icebp
sbb
inc
mov
in
leave
or
or
daa
push
or
xor
ja
lds
sbb
sub
and
push
fs
je
sbb
xor
xor
adc
pop
cmp
pop
sbb
movb
dec
sbb
add
cmp
fcoms
pusha
mov
push
jp
pop
push
jnp
xor
sub
jge
or
mov
imul
sub
lahf
sahf
mov
push
dec
or
sub
rolb
and
inc
lret
xlat
loop
and
pop
mov
push
dec
test
dec
popf
cs
dec
sbb
lea
sbb
fmul
jno
jbe
dec
and
or
sub
pop
or
jge
dec
jg
add
mov
xor
add
pop
push
mov
cmpb
add
pop
cmp
rolb
xorl
xchg
mov
jne
pop
push
cli
push
hlt
or
ljmp
xchg
test
inc
lea
mov
cli
cli
shl
data16
int3
add
cmp
inc
adc
rsqrtps
xchg
add
adc
mov
adc
dec
daa
or
inc
sub
push
js
aam
cmp
idiv
or
inc
cmp
sub
mov
test
ret
test
in
and
inc
xchg
orb
inc
fildll
xchg
jb
or
push
les
or
inc
push
dec
inc
loopne
outsb
and
sbb
nop
mov
sahf
pop
cmp
test
xchg
or
clc
mov
push
sub
mov
repnz
imul
sub
mov
cmp
loope
jne
mov
insl
inc
or
fcoms
lods
xor
xor
add
cwtl
mov
aaa
and
pop
push
test
pop
dec
addb
sbb
jle
in
into
inc
or
jmp
imul
or
xchg
js
in
and
or
pop
push
jo
loopne
push
push
nop
js
add
jp
cmc
mov
xor
inc
jmp
lret
mov
or
add
orb
imul
lods
xchg
sub
hlt
sub
push
stos
jp
mov
lods
dec
fstp
aaa
sub
pop
or
sub
fadds
add
adc
repnz
sbb
mov
sub
ret
push
lock
adc
xor
mov
adc
dec
out
and
enter
lea
lret
mov
cmpsl
pusha
sub
sahf
into
test
aaa
lcall
clc
mov
daa
sbb
adcb
cmp
xor
xor
add
mov
mov
fnsave
adc
and
push
sub
pop
ret
push
imul
adcb
shll
mov
push
mov
sti
adcb
jne
hlt
movsb
jo
push
add
push
mov
leave
icebp
ret
rcll
cmp
push
sub
cmpsb
insl
dec
mov
loopne
loopne
dec
or
pcmpgtb
test
dec
insl
lea
or
sub
jb
pop
lahf
sub
outsb
sbb
mov
loopne
cmpsb
dec
lds
push
mov
pusha
or
mov
setb
mov
and
stos
pop
xchg
mov
filds
xor
insb
jl
test
in
cmp
xchg
xchg
jns
hlt
mov
inc
sub
mov
and
sub
and
mov
xchg
ret
push
mov
xchg
adc
idivl
test
mov
xchg
fs
or
test
mov
std
adc
stos
adc
add
push
dec
add
push
push
outsl
ljmp
movl
xchg
sbb
jmp
call
or
rolb
dec
adc
sbb
bound
andb
cmp
jb
push
rcll
mov
data16
pop
outsb
ds
inc
xor
stos
sbb
jb
lret
popa
push
imul
sbb
cmovne
rcll
pop
shll
cli
push
cmpl
ds
mov
jge
mov
mov
nop
mov
mov
aaa
mov
pushl
xchg
add
push
push
add
ret
in
and
dec
jmp
arpl
sub
add
addl
add
lret
ret
aas
push
and
sub
repnz
cmp
push
iret
les
sub
and
xchg
jb
xchg
jmp
jge
dec
push
adc
test
and
pop
sbb
sub
or
lods
nop
inc
and
repz
cs
xor
fmull
jg
add
or
push
add
test
cmp
xchg
jo
ret
ret
ror
ja
xor
pop
xchg
jo
and
rorb
xor
fsubl
pop
xchg
and
shll
popa
mov
sub
hlt
pop
push
or
push
in
shl
or
sbb
outsb
in
icebp
pop
leave
mov
enter
push
xchg
xor
mov
inc
lods
daa
icebp
mul
or
popf
je
int
lret
gs
push
das
inc
dec
aam
and
shrb
adc
mov
push
lret
iret
and
leave
or
stos
xor
inc
cld
push
loopne
inc
cmp
sbb
sbb
mov
jp
sub
dec
shlb
jp
ret
lahf
pop
adc
sbb
jb
inc
sbb
jle
or
push
hlt
lds
cmp
pop
les
xor
lock
or
adc
adcb
cs
sti
sub
test
test
outsl
fcomps
xor
sub
clc
loopne
popa
xor
push
test
out
pop
jb
sub
xchg
adc
inc
sbb
test
mov
and
enter
mov
jo
lock
ficoml
outsb
test
add
xchg
xchg
addl
dec
push
pop
add
jne
leave
adc
pop
push
or
pop
dec
sbb
lods
es
sub
and
inc
push
pop
mov
xor
mov
mov
popa
and
jbe
ljmp
push
push
dec
and
xchg
dec
dec
and
test
dec
imulb
mov
fs
mov
mov
mov
adcl
push
movsl
and
jne
add
arpl
test
xor
nop
test
dec
imul
rolb
les
xor
xchg
push
mov
push
xor
rolb
add
adc
enter
test
outsl
orb
int3
mov
cli
xchg
add
jo
mov
lods
push
mov
sub
ret
repnz
aam
rol
pop
mov
push
loop
std
dec
lock
popa
dec
into
movsl
mul
sbb
sbb
lods
adc
pop
jl
les
lcall
call
insl
imul
xchg
mov
out
shlb
popl
mov
push
push
and
ret
addr16
add
jne
int
and
or
negb
rep
fisttps
or
pop
pop
lcall
andl
ja
fstpt
enter
rclb
lahf
nop
scas
test
clc
push
adc
or
cmp
add
mov
adc
repnz
nop
jnp
js
je
ret
je
sbb
loopne
out
and
ljmp
sbb
shr
pop
or
imul
inc
push
xchg
jo
popa
popa
add
dec
mov
icebp
cwtl
or
loopne
push
mov
dec
or
xor
and
pop
adc
add
mov
jb
cmp
pop
jle
inc
xchg
outsl
add
xorl
mov
push
into
scas
push
std
fadd
mov
pop
jl
inc
pusha
dec
mov
inc
cmpsb
xchg
testb
sbb
adc
jae
add
cmp
nop
mov
inc
cs
pop
push
imul
mov
sbb
mov
jb
sbb
daa
jp
mov
cmp
or
sub
inc
pushf
shrl
aad
or
sbb
les
call
shl
bound
adc
cmpsb
and
aam
xor
cmp
cmpsl
jbe
sbb
inc
xorl
add
arpl
pop
jb
xchg
ja
lock
inc
ss
xchg
xchg
or
shr
lock
inc
jmp
push
pop
adc
add
or
and
xlat
cltd
pop
mov
add
ret
les
and
popa
mov
xchg
adc
cmp
push
incl
jge
inc
mov
lret
and
lret
adcb
insb
sbb
pop
mov
inc
loope
inc
add
add
rorl
inc
daa
rorb
mov
jo
test
xchg
cld
add
mov
mov
movsb
and
sub
outsl
inc
push
push
lock
or
mov
fcoml
cs
and
or
xchg
xor
or
inc
stos
or
jne
jbe
pop
xchg
dec
xor
pop
push
mov
mov
sub
inc
inc
cmp
and
xor
pusha
popa
add
idivb
adc
subl
pop
mov
adcl
mov
mov
xchg
xor
lods
bswap
test
je
and
dec
push
adc
rorb
lock
mov
clc
lods
adc
push
adc
jecxz
cmp
enter
in
push
push
cmp
dec
pop
cmpsb
nop
les
dec
or
out
or
sub
jp
lds
lock
dec
push
or
adc
mov
xchg
adc
add
dec
loope
call
jle
adc
pusha
popf
lods
sub
shlb
and
lret
push
xor
lret
test
ret
mov
sub
sbb
lods
fists
push
jp
pop
cmp
insb
dec
imul
or
xchg
dec
into
outsl
dec
punpckhwd
or
inc
ljmp
lea
sbb
mov
cmpsl
scas
movsl
clc
test
sub
mov
aad
jno
std
dec
cmp
nop
pusha
repnz
add
cwtl
pushf
lret
movsl
add
mov
mov
sbb
push
dec
in
add
outsb
jle
and
pop
imul
pop
xchg
in
lea
popa
xor
scas
mov
sub
js
insb
cmp
call
cmp
push
mov
ljmp
pushf
gs
and
inc
jne
jne
scas
sbb
ja
push
push
dec
jo
mov
mov
or
pop
rcl
push
stc
push
xchg
mov
xor
add
jnp
sbb
lods
test
cli
xchg
stc
xchg
lret
add
and
mulb
imul
sub
dec
repnz
cmp
adcl
out
aam
push
mov
push
mov
inc
xor
xchg
and
xor
sbb
orb
movsl
and
mov
adc
inc
push
add
sbb
adc
outsl
popf
sahf
sub
pop
fwait
movsl
dec
add
pop
pushf
mov
fistl
lahf
nop
subl
inc
iret
push
imul
or
sbb
inc
pop
imul
or
fiaddl
jno
lret
mov
inc
add
adc
add
movups
in
movsb
mov
test
mov
dec
pop
inc
daa
mov
adc
pop
add
cmpsb
push
inc
or
xor
adc
in
call
fs
clc
add
imul
mov
mov
fwait
xchg
nop
sbb
cmp
outsb
push
sub
rcrl
mov
dec
lods
addl
movsb
adc
lcall
stos
and
scas
movsl
lea
pusha
add
enter
sub
lock
sub
add
addl
mov
or
xchg
enter
jg
push
lcall
mov
imul
cmp
xchg
mov
mov
js
cs
cmp
sbb
add
pusha
and
aaa
adc
sbb
ret
addr16
mov
sbb
and
les
adc
shll
push
sub
mov
rclb
inc
or
push
or
arpl
xchg
add
out
sub
push
cs
cmp
adc
jl
lods
prefetchw
rorb
xlat
pop
lret
adc
xor
jo
shrb
mov
xchg
and
push
jl
cmp
add
and
add
test
insl
add
outsb
jmp
addb
add
push
sub
and
subb
dec
jmp
pusha
pop
sbb
call
push
clc
sbbb
sbb
jge
push
aam
push
fs
jle
roll
xchg
mov
xchg
xor
adc
movb
test
xchg
aas
cs
dec
add
adc
inc
push
mov
lcall
xchg
rolb
cmp
xor
repz
mov
add
add
enter
push
leave
inc
pop
or
shlb
cmp
sbb
pop
or
jecxz
and
mov
into
mov
fists
loopne
mov
jge
or
cmp
loopne
sbb
sbb
cli
push
dec
pusha
imul
inc
imul
sbb
into
add
push
clc
xchg
movsb
shll
loope
andb
dec
loop
inc
imul
mov
cltd
jo
dec
dec
push
and
add
mov
and
out
ret
adc
dec
adc
loop
addr16
ret
cmp
movsl
inc
rolb
xor
leave
pop
mov
dec
and
adc
pop
and
aad
mov
or
insl
inc
push
and
cwtl
ret
sbb
rcrb
push
nop
or
dec
adc
sbb
movsb
xchg
mov
stc
sbb
insl
dec
pop
jl
std
enter
imul
shrb
xchg
jmp
or
inc
mov
pop
stos
mov
js
push
ret
repnz
sbb
jmp
ja
daa
cltd
pusha
les
ss
in
add
lret
sbb
ret
mov
mov
movsl
dec
jl
je
hlt
push
popf
cli
cmp
decb
test
popa
or
in
pop
ret
call
je
cmp
cmp
fcoml
pusha
adc
add
arpl
dec
pop
add
pusha
movsl
mov
fsub
push
ror
inc
push
xchg
orl
adc
adc
rolb
adc
loope
push
mov
jmp
sbb
jo
roll
cmpsb
into
jo
or
inc
lret
aaa
push
and
jo
xchg
sbb
js
inc
dec
pop
loopne
push
sbb
xchg
inc
jns
cmpsb
dec
mov
push
or
inc
popf
in
dec
add
stos
push
ret
outsb
test
sub
sub
push
jecxz
adc
pcmpgtb
aaa
aam
cmp
int
pusha
jo
loopne
adc
adc
imul
sbb
or
mov
pop
dec
pop
dec
pop
cmp
hlt
pop
dec
in
or
shll
or
rclb
push
fimuls
int
adc
xor
scas
lea
mov
adc
pop
pop
mov
add
jecxz
jb
pop
mov
dec
and
sbbw
pop
push
xchg
cmc
add
pop
pmaddwd
or
xorb
loopne
pop
xor
and
dec
mov
nop
add
pop
sbb
hlt
push
leave
outsb
shll
inc
cmp
es
mov
negl
sbb
jle
imul
add
cmp
and
pop
push
push
pushf
lods
push
mov
sub
or
sub
clc
mov
repnz
inc
rol
mov
and
pusha
dec
or
call
add
stos
sub
adc
add
cmp
or
xor
shrb
roll
or
jne
test
xchg
mov
daa
into
mov
and
popa
subl
movsb
and
inc
sub
jecxz
cmp
dec
repz
mov
mov
inc
and
push
in
lods
iret
and
pop
cmp
sbb
loope
or
push
aam
cs
dec
and
add
sub
sbb
xor
lcall
jno
xor
mov
pop
movsb
fiaddl
popf
dec
sbb
fs
mov
outsl
xor
adc
lods
cmp
jge
push
ret
mov
pop
jo
sbb
imulb
adc
push
sub
sahf
enter
sub
ljmp
xchg
push
loopne
nop
fiadds
hlt
dec
aaa
push
xchg
add
ds
ds
flds
icebp
hlt
repz
push
hlt
add
jecxz
cld
ret
cmp
scas
or
adc
aad
adc
pusha
sarb
pop
add
mov
adc
dec
and
xor
mov
fs
add
aad
jnp
add
scas
inc
or
nop
scas
mov
insb
lods
dec
repnz
mov
test
jp
shrb
test
popa
movsl
dec
pop
stos
inc
push
jb
or
jecxz
in
add
push
xchg
push
add
ljmp
xchg
loopne
push
jnp
daa
sub
out
and
cwtl
lcall
stos
push
cmp
sbb
push
mov
loope
and
test
adc
fisttpl
and
ficompl
add
leave
ret
push
nop
mov
add
add
clc
fs
and
idivb
add
pop
push
push
push
mov
call
rorb
sub
sahf
and
std
cmpsl
add
cwtl
shl
adc
mov
push
nop
jnp
jne
filds
addl
out
and
jge
mull
xor
mov
adc
xor
sti
jl
negl
mov
xchg
test
orb
jg
jge
lea
push
push
sbb
testb
je
movzwl
jmp
in
div
add
pop
cmp
push
push
inc
adc
inc
add
in
mov
push
jge
mov
mov
or
and
out
out
rol
mov
cwtl
cmp
lock
ds
and
mov
xchg
lahf
rolb
dec
jecxz
sbbl
and
mov
add
xchg
scas
jnp
jmp
or
adc
das
add
ret
mov
mov
sbbb
test
adc
or
mov
test
aad
adc
sub
mov
mov
mov
add
jle
adc
and
lea
push
adc
jo
jl
cmp
xor
xor
adc
sub
sbb
fildl
je
pop
or
add
int3
in
lods
or
std
popl
js
loop
mov
nop
jae
loope
add
jo
mov
aam
loopne
test
inc
std
stc
jno
lock
or
pop
je
aas
orb
or
add
idivb
lods
pop
pusha
or
pop
jmp
dec
loop
sbb
jl
push
lcall
mov
sbb
das
pop
enter
pop
hlt
inc
inc
cs
loop
daa
lea
dec
add
mov
cld
inc
cmp
jg
add
cmp
jl
mov
mov
jle
cmp
std
fidivrl
movl
nop
pop
and
cmp
xchg
sub
cmp
cmpsl
jb
nop
popl
mov
imul
sahf
rcrl
lock
pop
jmp
loope
call
pop
cld
mov
or
jmp
sbb
iret
xor
leave
bound
lcall
push
mov
ret
cmp
push
mov
je
lea
add
aaa
sar
outsb
jae
cmp
jne
fisubs
or
cmp
lods
xor
pop
pop
ja
call
add
push
cmp
jne
mov
inc
mov
adc
mov
pop
negl
std
je
inc
jmp
cmpb
or
jbe
inc
sbb
ja
push
push
add
jmp
fstpt
sbb
pop
push
mov
jp
push
outsl
icebp
fisttps
ret
je
cmp
je
inc
fists
add
sarl
jmp
lea
push
pop
cmp
mov
lods
xor
ret
cmp
std
cmp
je
push
push
jae
call
xchg
and
cmp
pop
mov
pop
push
pushl
icebp
jl
les
ffree
fildl
std
outsb
jne
pop
decl
sub
pop
cmp
mov
push
or
add
ljmp
mov
scas
jb
inc
push
push
out
xor
clc
pop
orb
cmp
sahf
mov
adc
push
push
push
fs
js
push
push
push
aas
xchg
push
push
cld
or
test
or
dec
dec
xchg
and
mov
imul
adc
mov
cmp
mov
cmp
lds
and
jge
movl
mov
xor
cli
aaa
xor
sbb
movl
mov
inc
cmp
outsl
aaa
pop
jl
test
je
shl
orb
add
jle
test
loopne
adc
aad
into
sbb
andb
inc
cmpl
out
outsl
leave
lods
or
xorl
mov
inc
lret
outsb
outsb
iret
je
or
or
jne
dec
bound
scas
cli
xchg
decw
sbb
pushf
add
repz
mov
push
add
das
enter
cmpb
adc
add
mov
scas
or
add
inc
jmp
and
xchg
cmp
or
lea
fisubl
adc
cmp
jmp
outsb
or
xor
push
cld
negb
ret
shr
mov
dec
test
push
inc
and
push
pop
inc
bound
repz
and
dec
cmpl
adc
insl
mov
push
mov
lds
pop
ret
or
aas
aaa
jno
fisubrl
add
xchg
popa
mov
mov
daa
sbb
insb
pop
sub
jo
negb
xchg
dec
aam
jbe
or
sub
fs
shlb
mov
aad
repz
sbb
aam
sub
cltd
popf
xchg
cs
scas
sub
inc
test
xchg
hlt
shll
cmp
out
lods
in
mov
inc
inc
adc
jne
or
ficomps
inc
sar
sbb
add
push
mov
fdivp
and
call
push
jmp
xor
adc
add
push
andb
mov
push
sbb
dec
pop
adc
dec
cmpl
jne
fwait
push
roll
arpl
mov
stos
fidivrl
cmp
sti
or
sub
inc
aam
popf
inc
aad
inc
push
imul
or
rcl
mov
je
loope
adc
pop
pop
pop
xchg
lret
dec
xor
sbb
pop
in
adc
push
gs
xor
push
cmp
jae
fiadds
fcoml
jo
pushfw
movb
mov
xor
lcall
dec
data16
hlt
push
loopne
repnz
fcoms
cmp
mov
mov
popa
cmc
mov
into
jge
mov
and
or
addl
inc
scas
out
mov
pusha
or
sbbb
and
rcr
push
push
add
fwait
jl
jmp
mov
add
jle
loopne
fmuls
aam
or
scas
xor
or
push
push
push
inc
and
inc
sbb
mov
adc
popa
sub
fdivrs
rolb
jecxz
out
enter
mov
mov
idivl
jg
add
inc
fildl
xor
jne
test
pop
mov
nop
push
pop
jmp
ret
dec
divl
sub
fcomps
jo
sbb
clc
cmp
adc
loope
and
cltd
outsb
leave
push
orb
adc
jne
addb
testl
inc
cmp
jl
xchg
test
adc
dec
pop
or
roll
mov
pushl
cld
mov
pop
pop
jmp
mov
insb
sub
xor
push
js
fistps
inc
pop
and
sbb
pop
pop
ret
sub
jmp
push
mov
add
push
pusha
push
or
and
push
les
jl
sarb
lea
aam
mov
adc
push
rorb
cwtl
iret
pop
stos
incb
cs
lcall
insb
push
ret
and
int3
add
mov
test
aaa
add
lret
mov
pop
mov
testl
dec
cmp
mov
adc
and
push
push
sbb
incb
pop
xor
and
push
icebp
push
cmp
fidivl
mov
dec
mov
mov
adc
jl
in
jne
push
pop
pop
mov
mov
call
ret
popl
lods
add
shlb
mov
stos
out
cmpl
or
push
or
push
push
add
aaa
adc
mov
arpl
adc
ret
inc
add
imul
or
pop
pop
ret
push
inc
xor
pop
inc
xor
orl
cmc
xor
or
testl
jb
stos
and
ret
adc
hlt
jl
jae
add
andl
jbe
je
push
push
mov
imul
push
pop
pop
orb
xor
jnp
mov
dec
push
jno
add
push
sbb
xor
or
std
mov
or
mov
jmp
fldl
lcall
push
sub
mov
jg
sub
in
fldt
je
mov
push
push
sbb
ret
pusha
lea
out
loope
std
and
add
sbb
add
pop
cld
add
mov
push
or
sub
loope
leave
mov
je
or
shrl
icebp
push
mov
cmp
xlat
dec
sbb
fldenv
in
or
jmp
and
ss
icebp
std
test
xor
sti
or
pusha
adc
sti
in
and
mov
push
or
lea
test
jbe
xor
lahf
popf
or
mov
push
add
adcl
xor
sbb
pusha
decl
xchg
les
push
sbb
pushf
and
mov
sbb
and
and
cltd
es
dec
cwtl
mov
jmp
lcall
mov
ss
add
daa
aaa
adc
push
rorl
dec
add
xchg
mov
icebp
jae
repnz
paddusb
lods
sbb
in
stos
add
cmp
sar
paddb
out
xor
jne
push
push
mov
pop
test
xlat
pop
mov
cmpl
adc
dec
add
fldl
paddd
and
test
inc
fistl
sub
add
xchg
or
mov
mov
pop
adc
test
in
mov
jge
movzwl
repnz
jl
jge
outsb
add
sbb
inc
jae
and
out
sarb
jge
cs
cwtl
pop
adc
xor
jmp
out
mov
xor
mov
je
xor
cwtl
iret
xor
pusha
stos
call
in
mov
push
andl
shr
mov
call
jg
mov
mov
jge
mov
dec
out
mov
test
sbb
sbbl
xchg
dec
movsl
push
jbe
rorb
gs
lods
lahf
lea
mov
add
lea
jmp
je
mov
pop
add
cmp
ja
lock
idivl
inc
push
es
inc
inc
cmpb
mov
decl
ret
jle
cld
add
shll
lods
pop
push
mov
dec
ds
xor
je
mov
scas
out
push
mov
jns
loop
lret
cmp
or
sub
push
jno
mov
nop
push
xchg
cmpsb
jmp
push
push
fsubrs
sbb
jmp
loope
inc
mov
arpl
mov
nop
pusha
or
xor
mov
rorl
inc
sbbl
and
in
ljmp
mov
sub
cld
rcr
fwait
nop
cld
jne
mov
sub
or
je
data16
add
je
dec
je
stos
mov
mov
or
sub
movsb
mov
jo
sarb
sahf
pop
mov
adc
push
in
push
push
call
inc
sub
idivb
mov
in
pop
mov
jb
mov
movb
push
lea
frstor
sbb
shll
loopne
fisttps
and
mov
shr
or
in
out
mov
inc
inc
mov
push
cmc
rcrb
push
in
cli
call
adc
or
insl
pop
cmpsb
imul
movsl
in
imul
int3
jo
inc
dec
in
out
ja
xchg
lea
test
je
pop
adc
xchg
add
jmp
xor
je
and
mov
cmp
inc
ss
clc
rorl
dec
inc
jb
xor
push
pop
fs
enter
outsl
mov
pop
xor
adc
jp
push
popf
cmp
rolb
das
in
and
loopne
xchg
mov
outsl
fistl
push
cmp
pop
aam
inc
jge
aaa
mov
lea
push
lcall
adc
sbb
js
or
clc
scas
mov
je
int3
add
jmp
lea
pop
ficoms
lds
add
cmp
jne
mov
mov
pop
lock
jg
shll
test
call
and
mov
and
bound
mov
jmp
shr
or
jmp
std
jmp
scas
mov
or
sbb
int3
fs
adc
fistl
inc
add
fdiv
sbb
xlat
loope
xor
ret
pop
cli
daa
test
jo
cmp
cmp
andb
inc
ficompl
mov
insb
mov
sub
aaa
lods
jne
mov
sub
add
ja
jl
mov
xchg
jne
mov
out
cmpsl
mov
mov
xor
add
adc
in
popf
rcrb
mov
in
rolb
mov
aam
cwtl
pushf
sub
mov
out
add
pop
xchg
sbb
add
jo
nop
inc
stc
out
fs
xor
inc
inc
push
imul
push
pop
xchg
cld
ficoms
jne
push
dec
cli
or
dec
adc
pop
in
test
jbe
clc
jb
sbb
int
ljmp
jb
rep
jmp
test
or
aas
add
or
loopne
test
lahf
mov
loopne
fcoms
lock
popf
cli
fistps
inc
and
mov
mov
data16
or
and
in
lods
adc
xor
aaa
testb
add
out
int
test
inc
inc
jg
mov
mov
jmp
jns
pushf
xchg
mov
mov
out
sahf
in
call
sahf
out
lock
hlt
clc
clc
or
scas
or
loope
sub
adc
loope
push
int
push
loopne
cwtl
pop
pop
pop
mov
push
xchg
nop
cmp
repz
sbb
or
je
into
jl
cld
jmp
repz
or
cltd
pusha
neg
sbb
mov
lret
cltd
adc
out
popf
sbb
nop
push
js
cwtl
shlb
fiadds
dec
mov
lods
mov
adc
inc
out
add
fisubl
mov
mov
push
pop
add
mov
dec
dec
sbbl
sbb
sahf
out
and
xor
inc
jns
out
push
cs
sbb
out
sahf
out
adc
adc
out
sahf
or
or
repz
jo
js
movsb
test
push
add
andl
adc
push
push
imul
xchg
adc
filds
xor
sub
sub
ja
dec
push
cmp
dec
xlat
jne
sub
cmp
and
push
das
stos
js
push
std
jno
xlat
pop
cmp
test
fdivl
pop
dec
daa
jmp
push
mov
push
cmp
pop
loope
or
daa
inc
das
mov
mov
xor
mov
andl
push
or
cli
inc
dec
jb
test
rcr
adc
mov
add
pop
ljmp
cld
add
push
shr
add
imul
jge
mov
inc
xor
pop
xchg
or
test
adc
jne
sarl
aas
dec
pop
push
or
iret
jbe
xchg
dec
adc
aas
and
jne
mov
jae
xchg
decl
lea
not
and
decb
push
jge
in
jg
and
jmp
add
cmp
les
dec
push
jns
mov
push
or
pop
clc
sbb
sbb
adc
aas
testb
rclb
cmc
roll
add
paddd
sbb
inc
mov
dec
pop
cmp
dec
jbe
fcompl
orl
cmpb
jbe
lret
push
je
cli
jle
imul
pop
scas
mov
ljmp
dec
adc
cmp
add
cwtl
movsl
jle
pusha
cmpsb
cltd
adc
or
pop
add
pop
and
cmp
in
cmp
mov
lea
pop
adc
testw
or
dec
std
add
pop
add
and
mov
jae
cmpb
mov
mov
jmp
or
sbb
inc
bound
sbb
sub
dec
loopne
jbe
add
cmp
ret
cmp
sbb
stos
xchg
cli
popf
mov
out
lods
testl
dec
or
cmpb
or
shlb
cmp
push
or
insl
notl
andl
inc
adc
inc
imul
pusha
add
and
adc
jo
mov
adc
sti
sub
cli
push
add
and
sbb
pusha
push
push
dec
adc
push
lea
pop
jge
adc
xchg
test
decl
pop
cmp
mov
scas
fstl
mov
dec
mull
rclb
cmp
pop
aaa
dec
pop
in
push
lock
push
sub
pop
shr
sbb
mov
jmp
dec
popf
push
testl
sbb
xchg
mov
sub
mov
cmp
sahf
jae
mov
cmp
push
and
jge
decb
iret
jne
add
cmp
jb
push
jne
mov
cmp
mov
xorl
jne
lret
decl
adc
outsb
jmp
loope
outsl
nop
es
add
push
mov
outsb
add
or
adc
mov
add
jecxz
sub
lods
mov
cltd
xchg
pop
mov
pusha
adc
aaa
mov
outsl
js
mov
mov
jne
mov
sub
cmp
mov
and
or
je
cld
add
jmp
scas
pop
mov
scas
out
push
test
or
pop
test
jl
shl
inc
jmp
mov
std
mov
or
icebp
test
add
cmp
jle
je
pop
lock
cmp
ss
ret
inc
jge
and
cmp
shl
in
and
mov
decb
jne
pop
sarl
or
xor
push
fistl
inc
and
push
insb
out
mov
or
add
scas
cmpb
add
ljmp
adc
xchg
push
jl
jae
cltd
mov
test
aas
dec
push
decb
jge
mov
or
mov
sub
mov
sbb
cmp
push
or
das
push
or
stos
dec
insl
or
arpl
sub
out
or
aam
je
mov
sbb
cmpsb
mov
cld
fs
mov
and
add
push
inc
jp
shrb
jns
jne,pt
mov
cmp
loopne
dec
or
and
pop
cmpsb
cmpsl
add
add
xlat
pop
stos
cmp
jne
mov
cld
stos
mov
push
das
pushf
cmp
je
ds
inc
cmp
inc
nop
popf
push
ss
popa
lods
outsl
adc
adc
mov
jp
and
pop
stc
xor
jbe
leave
je
jo
cltd
data16
dec
dec
mov
push
cmpb
mov
mov
xchg
das
nop
inc
or
fisttpl
mov
imul
and
and
das
js
xor
cmp
or
out
add
pop
out
or
push
addb
aas
lods
xchg
dec
mov
jo
push
sti
cs
ja
lea
dec
in
mov
paddsw
ds
movl
xlat
pop
ret
cmp
dec
add
call
or
xorb
out
adc
add
dec
mov
dec
or
in
cmpsb
rclb
inc
fs
inc
test
adc
test
hlt
mov
mov
js
mov
rcl
sub
push
leave
nop
cmp
mov
jle
mov
insl
movsb
addr16
or
and
cmpsl
sti
inc
je
and
dec
cld
push
sub
sbb
push
mov
sarb
push
and
and
test
pop
out
lcall
add
aaa
loop
jp,pn
push
mov
ljmp
out
test
and
loop
jne
jmp
mov
inc
mov
inc
dec
je
jbe
mov
jne
pop
cmp
jecxz
or
or
mov
pop
pop
pop
ret
mov
adc
imul
je
insb
xor
nop
mov
cli
push
jno
in
inc
push
scas
xor
pop
inc
lcall
jns
sub
jb
sbb
push
add
lcall
loop
or
mov
mov
jne
pusha
jne
inc
pop
push
nop
aaa
mov
incl
inc
push
push
push
inc
rclb
push
popa
cmp
pop
cltd
pop
popa
mov
sub
inc
jmp
les
testb
lods
dec
and
shrl
sub
cmp
jle
pushl
adc
ds
pop
rcrb
dec
sbb
aas
cmc
sub
mov
movsl
stos
xor
mov
xor
daa
push
xchg
pop
and
pop
add
stos
ja
movsl
mov
outsb
and
fistps
lahf
jo
or
js
adc
and
stos
jl
mov
jo
fdivl
jmp
call
data16
and
push
cwtl
fdivl
inc
scas
call
decl
dec
mov
lock
cmp
je
testb
je
jl
jo
pop
sbb
mov
stos
jg
push
pusha
mov
movsb
sbb
into
decb
imul
inc
or
fmull
cmp
or
je
push
enter
iret
je
push
data16
shll
push
jmp
sbb
and
stos
add
or
jle
jno
sub
gs
adc
rclb
lcall
fmuls
and
sbb
sbb
add
popf
pop
inc
mov
add
imul
lea
push
mov
repz
dec
mov
jae,pn
aaa
push
xchg
push
mov
mov
out
sub
add
xchg
in
rcl
sbb
add
and
xchg
pop
push
sbb
mov
sbb
push
xchg
sbb
loopne
je
lret
les
push
cmp
stc
hlt
les
push
inc
fdiv
push
push
jmp
pop
pop
xchg
mov
mov
sbb
cwtl
gs
shl
mov
jmp
jmp
push
prefetchwt1
inc
jl
pmulhuw
and
inc
lcall
sbb
add
or
dec
ffree
pop
insl
je
cmp
cmp
adc
flds
push
sub
into
cmp
mov
rol
rorl
sub
or
stos
je
inc
dec
jp
pop
cmp
fxch
add
inc
xchg
jg
mov
in
out
mov
nopl
sbb
jg
mov
mov
jg
jns
out
insb
fs
push
dec
pop
add
test
jo
push
mov
stos
sub
and
inc
stos
sub
push
cmp
inc
test
jg
and
mov
cmp
repz
aam
fsub
in
hlt
add
idiv
cmp
push
pop
jg
mov
xor
cmp
add
push
or
sahf
jb
sbb
pop
sub
jae
mov
mov
loope
inc
add
jb
lret
xlat
adc
push
adc
hlt
cs
lret
in
loopne
in
in
mov
aam
push
adc
fadds
add
lcall
andl
and
jb
jb
lea
cwtl
or
push
push
and
pop
repnz
sbb
inc
add
inc
and
mov
cmpsl
and
xor
cmp
sub
insb
je
and
in
imul
jp
push
dec
aaa
xlat
dec
scas
outsb
outsl
je
or
push
arpl
divb
insl
mov
imul
ss
adc
fs
jo
jb
jbe
jb
jne
dec
arpl
movsb
jnp
and
insb
push
mov
mov
push
gs
das
mov
mov
lds
jo
jb
jge
mov
jae
push
fs
push
cmp
dec
arpl
mov
insl
jne
je
push
fwait
push
pop
insb
outsl
arpl
shrb
popa
pop
add
outsl
setnp
insl
add
addr16
insl
inc
xchg
les
xchg
pop
xor
lahf
push
xchg
push
pusha
out
inc
dec
ja
push
cmp
addr16
lahf
mov
push
xor
fsubrl
xor
outsl
or
dec
outsb
or
pop
shlb
push
imul
inc
sub
and
dec
imul
popa
xlat
dec
or
inc
sbb
imul
fstp
or
rorb
fdivs
mov
cmp
dec
popa
fs
add
gs
pop
adcl
fs
push
mov
cld
jg
jae
popa
addr16
outsl
js
add
dec
xor
cs
mov
and
jg
cs
xor
loop
sti
mov
cmpsl
pushw
push
add
or
pop
leave
syscall
xchg
adc
cmp
stc
divl
add
push
dec
add
iret
insl
daa
push
add
and
or
nop
xchg
xchg
sahf
ja
and
js
mov
adc
outsb
dec
mov
add
mov
mov
or
or
and
adc
stc
jb
dec
sbb
sbb
xchg
and
js
push
js
jns
jb
enter
cld
sbb
or
lds
sub
loopne
add
xor
sub
clc
iret
jg
maxps
add
stc
enter
and
cmpsb
fisttps
mov
cld
cmp
pop
inc
jle
test
shll
in
testb
nop
inc
mov
iret
mov
in
call
jle
jle
adc
push
ficompl
mov
xor
jle
rcr
fsubp
stc
jb
jle
add
cmp
jp
ljmp
and
adc
push
jb
test
pop
sbbb
jg
nop
imul
add
add
mov
push
rorl
xchg
push
add
repz
add
dec
gs
jo
insb
insb
outsl
arpl
imul
push
dec
outsl
fs
gs
popa
outsb
or
push
je
mov
jo
outsb
outsw
and
insl
insl
ds
imul
push
gs
jle
inc
cmpsb
or
ss
arpl
sbb
and
jnp
iret
ja
jb
outsb
dec
push
outsb
push
cmc
test
and
inc
imul
and
popa
insl
xlat
inc
jbe
inc
lods
adcb
xor
jae
sbb
imul
les
outsl
dec
xchg
mov
mov
pusha
test
cs
fs
lock
loopne
pop
jbe
and
jo
xchg
icebp
dec
fs
or
adcb
jne
sbb
push
push
pop
pop
pop
pop
jne
inc
cmpsb
fldcw
bound
inc
gs
jns
or
shlb
mov
insb
js
je
je
imul
mov
dec
adc
loope
cmpsb
mov
xchg
adc
lods
sbb
sub
push
negb
dec
mov
adc
jo
cmovg
adc
mov
mov
mov
fs
mov
inc
mov
arpl
push
fwait
sarl
adc
sbb
and
push
popf
pop
mov
pop
fdivl
fildl
sbb
inc
cs
or
dec
push
pop
stos
cmp
push
roll
jp
mov
or
in
addr16
rcl
lcall
bound
rolb
call
and
test
push
xor
fneni(8087
or
dec
bound
mov
push
arpl
nop
push
sub
dec
pop
insb
inc
jno
data16
or
pop
ja
mull
or
inc
jae
outsb
arpl
jns
and
std
dec
jnp
gs
bound
push
adc
add
add
mov
dec
inc
add
adc
add
dec
inc
add
in
cmpsb
insl
add
cmp
int
inc
lock
mov
jo
add
in
add
xor
insl
fisubl
mov
dec
pop
inc
aas
and
fldt
mov
jle
mov
aas
push
inc
xlat
pop
imul
jae,pt
inc
cmpsb
dec
add
outsl
int
lds
aaa
mov
xchg
inc
sti
fcomi
cmp
add
xor
add
fwait
dec
jle
jg
out
subl
or
lock
add
add
add
cmp
add
addb
test
shrb
fbstp
adc
cmp
dec
add
sbb
pop
sbb
lock
cmp
and
mov
lcall
add
cmp
add
sbbl
add
roll
add
fs
shll
push
xchg
into
sub
lods
add
negb
je
jle
mov
ljmp
divl
add
mov
add
pop
outsl
add
adcl
jecxz
aaa
lock
pop
sbb
pop
push
fisttps
lock
mov
or
xor
cwtl
lds
lock
imul
aam
add
outsb
mov
stos
lock
loope
test
sbb
movsb
cmp
push
add
andb
xor
jle
int3
dec
imul
xchg
js
jo
or
jo
aaa
lret
mov
sub
mov
push
mov
xchg
add
inc
mov
add
data16
pushf
call
enter
mov
mov
or
jg
add
pusha
add
xor
js
aas
xor
je
jmp
aas
je
add
iret
xor
push
add
push
icebp
cs
mov
nop
dec
lds
pop
add
testb
pusha
imul
and
adc
add
mov
inc
push
sbb
or
das
fisubrs
fimull
cmp
shlb
push
xor
fadds
inc
and
bound
add
xchg
out
xor
sbb
insl
cmpsb
ret
add
lret
stos
inc
mov
daa
shll
shlb
push
fisttpl
dec
mov
inc
inc
jo
lock
aas
mov
inc
push
mov
xor
adc
inc
inc
jnp
inc
jb
dec
cmp
nop
pop
mov
cmpsl
add
or
mov
cmp
xchg
sarl
sahf
fs
jp
add
lock
inc
shr
fidivl
cmp
es
lock
add
jp
lock
sbb
das
out
dec
adc
mov
push
cmpsl
mov
mov
stos
mov
sbb
lock
xchg
mov
mov
mov
inc
lock
mov
shll
insb
fimull
dec
cmpsb
inc
lock
outsl
mov
jl
lock
aam
jnp
inc
mov
adc
test
outsl
bound
mov
adcl
or
pop
lock
mov
shll
mov
cmpsb
mov
jge
mov
repnz
lcall
inc
insl
mov
rcll
das
add
add
aas
js
and
pusha
ror
pop
pop
std
or
sbb
dec
lock
jl
push
sbb
xchg
dec
xchg
sbbb
ljmp
testl
aaa
rorb
inc
ret
cwtl
mov
movsb
dec
xor
int3
dec
sbb
jle
jb
jno
leave
inc
xor
mov
xor
jl
jbe
inc
and
add
push
pop
fldln2
popf
inc
jnp
inc
add
pushf
sub
add
pop
inc
xchg
mov
sbb
inc
dec
mov
xor
add
xor
popa
sbb
dec
cmpl
aas
mov
push
pop
inc
cmp
popa
or
inc
jns
daa
dec
lock
push
dec
mov
xor
ss
js
push
lods
jle
jo
fisttpll
faddl
out
lret
jne
je
loopne
pop
sahf
ja
add
nop
fsubrs
inc
fimull
jmp
rcr
xor
jae
jae
subb
ds
mov
mov
push
fdivp
sti
repnz
inc
push
or
clc
push
outsl
dec
jl
xor
ret
adc
fdivrs
popa
mov
jb
mov
jne
clc
inc
cli
outsb
or
lahf
xor
jp
ret
jle
cld
je
inc
jne
sub
add
ficomps
jp
inc
loop
mov
mov
add
push
outsb
nop
mov
jnp
pop
lods
sbb
cld
cld
inc
cmp
call
inc
rol
bound
mov
lret
and
or
add
fildl
loopne
add
jno
add
out
cmp
mov
and
add
and
jmp
cmp
jle
into
mov
xchg
loopne
mov
repnz
into
push
outsl
mov
inc
pop
dec
mov
icebp
or
add
and
pop
mov
jnp
ret
sub
sbb
fiadds
test
dec
or
pop
cmp
loopne
jl
xchg
lds
aaa
pop
xor
scas
mov
out
cmp
jno
jl
inc
out
xchg
or
inc
xchg
cmp
jp
mov
sbb
mov
sub
mov
loope
addb
inc
mov
pushl
push
jne
in
jl
sahf
cmp
arpl
lods
movsl
lret
inc
xchg
es
or
add
fdivs
outsb
mov
and
sub
or
push
cmp
mov
push
std
dec
add
cwtl
outsl
cli
cmp
cmpsl
pandn
adc
dec
lock
andb
andb
pop
adc
addb
mov
sub
into
cmp
sub
xor
out
out
sbb
orb
inc
bound
mov
js
mov
push
dec
mov
add
inc
jb
inc
ret
lds
outsb
cld
inc
push
sub
pop
sub
loop
adc
insl
push
inc
push
push
push
scas
jae
push
cmp
push
pop
dec
xor
ljmp
mov
sti
icebp
or
jo
jle
stos
mov
jmp
mov
loopne
jle
dec
int3
lcall
adc
mov
jg
jecxz
cmp
mov
sbb
dec
inc
jmp
stos
dec
ret
nopl
out
inc
lret
push
fadds
add
mov
inc
scas
and
sbb
pop
mov
orb
aaa
inc
rorl
scas
movsb
push
cmpsl
stc
imulb
pop
xchg
add
pop
mov
sbb
xchg
sbb
fsub
cld
add
iret
test
pop
pop
js
pop
mov
bound
lods
cmp
dec
cmp
inc
add
cmp
jecxz
pop
dec
sbbb
shlb
fisubl
test
mov
mov
pop
add
dec
cmpb
rcll
and
mov
push
cmp
lahf
enter
pusha
test
sbb
jg
or
cld
or
xor
or
or
negb
dec
and
or
or
push
push
push
test
ss
decl
dec
rdmsr
adc
or
or
dec
inc
jecxz
xor
aas
push
adc
xor
xor
adc
and
push
xor
adc
push
sbb
push
inc
les
sbb
sbb
sbb
enter
sti
movlps
or
inc
adc
or
adc
adc
in
or
xor
xor
mov
and
adc
pop
aaa
inc
fstpt
call
xor
sbb
outsl
call
adc
adc
or
push
movups
popf
std
add
push
ret
sbb
pop
add
sub
sbb
add
dec
push
clc
add
std
or
sbb
sub
sub
jb
push
or
das
clc
add
or
or
dec
add
inc
add
jnp
clc
or
adc
push
mov
es
cmpsb
lock
add
push
push
push
xor
or
fmul
pusha
das
cwtl
adc
or
jbe
adc
or
mov
jo
or
push
sbb
xor
mov
sbb
pop
lods
adc
push
adc
adc
sbb
aaa
xchg
add
mov
out
mov
sub
add
add
lods
or
fmuls
add
jg
adc
lock
add
push
inc
add
dec
add
dec
add
pop
inc
scas
add
add
inc
out
adc
nop
push
adc
lods
aaa
mov
pop
call
or
ucomiss
add
neg
fs
inc
adcl
cmc
adc
les
jmp
push
shlb
push
and
cmp
je,pn
scas
sbb
fwait
dec
in
cmp
or
or
in
or
mov
inc
jns,pn
addr16
dec
cld
or
push
mov
rcrb
loopne
or
jmp
cmp
jns
addr16
sbb
sbb
adc
insl
mov
cs
add
xchg
and
add
test
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
