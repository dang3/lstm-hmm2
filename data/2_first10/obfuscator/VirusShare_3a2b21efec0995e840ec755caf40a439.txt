stos
popf
movsl
adc
push
in
sbb
dec
in
mov
cmp
adc
inc
cld
add
popf
jle
push
xorb
stos
inc
stos
sub
pop
pop
add
dec
sbb
sub
notb
pushf
in
nop
inc
push
jo
insl
ds
andb
and
lods
js
and
mov
imul
inc
in
or
sub
or
xchg
cld
ja
data16
pop
jmp
or
mov
pop
and
gs
enter
rclb
mov
aas
adc
loopne
stc
jl
and
rclb
xor
and
mov
movsl
loop
leave
sub
stc
ds
mov
aaa
gs
int3
daa
test
inc
test
int
dec
aam
jno
es
xor
mov
push
inc
mov
pop
add
xor
pop
inc
movsl
decl
inc
or
pop
sub
hlt
or
in
nop
stc
push
lret
in
jecxz
sub
std
add
cltd
mov
gs
pusha
cltd
cwtl
jb
sbb
leave
mov
out
lahf
roll
pop
shlb
int3
xlat
jne
shll
inc
cwtl
pop
fcmovnb
and
sub
lods
adc
les
jge
xchg
xchg
sub
pop
push
inc
push
lret
fistpll
sub
icebp
aaa
shlb
cmpsb
dec
addr16
dec
mov
subb
inc
dec
dec
cmp
sbb
out
push
mov
mov
mov
add
les
xor
cmc
mov
test
jmp
sbb
adc
mov
push
aas
dec
adc
xor
inc
out
hlt
bound
lock
pusha
inc
mov
ret
mov
es
dec
inc
aaa
les
jge
mov
pop
scas
ss
fildl
sub
es
rclb
scas
aam
pushf
jnp
sbb
pop
add
sti
loope
push
sbb
add
setl
test
test
sub
aam
enter
addr16
adc
sbb
mov
out
and
dec
adc
cltd
lret
xchg
mov
push
jg
cmp
repnz
cmp
ret
inc
push
lret
add
les
xchg
xchg
push
pop
push
mov
cmp
ret
push
inc
and
mull
inc
mov
pop
insl
fidivs
mov
stos
push
jg
loop
xor
gs
add
rcrb
jae
rol
mov
mov
mov
jge
pop
push
jae
sub
cmp
mov
jbe
cmp
add
nop
jb
fdivrs
popf
mov
test
mov
fdivrs
jle
pop
gs
or
add
xor
gs
push
push
mov
adc
add
sub
push
test
push
xchg
int
pushf
mov
mov
and
xchg
and
sub
enter
dec
subl
xor
xchg
cs
shl
insl
aas
add
in
pusha
sbb
gs
arpl
mov
mov
push
fwait
jge
es
and
jbe
xchg
lret
cwtl
cmp
lods
adc
insl
sbb
pushf
xchg
repz
inc
dec
sbb
fcoms
jb
bnd
sub
ljmp
ja
in
mov
test
shl
pand
sbb
cmpsb
dec
jp
jle
mull
cmpsb
xorb
mov
cmpsb
stos
or
jae
push
dec
arpl
jno
std
add
inc
jle
inc
cld
mov
pop
pop
loope
pop
or
outsl
mov
inc
cmpsb
push
inc
pop
decb
push
enter
push
lcall
mov
mov
mov
ret
mov
fstpl
dec
cltd
jae
out
jl
dec
dec
add
cmp
inc
mov
push
ret
sarb
xchg
rolb
pop
mov
inc
mov
mov
sub
aas
inc
pop
outsl
add
sub
lock
ss
outsl
adc
xor
xchg
jmp
mov
imulb
mov
xor
push
xor
sub
mov
mov
movsl
dec
jmp
fcmovnu
and
in
and
mov
xchg
leave
dec
dec
push
loop
add
cli
or
dec
scas
ficoms
cmpsl
out
scas
cmp
mov
jo
mov
out
sarb
ljmp
and
repz
pop
jg
mov
mov
push
mov
stc
add
dec
test
lds
out
and
ss
push
jne
xlat
add
mov
cli
cmp
std
mov
hlt
adc
mov
adc
jp
cmpsl
aas
inc
xor
pop
sub
sbb
and
fcom
loopne
dec
je
lea
cmp
das
movl
and
fistpl
lcall
xor
sub
cmp
jle
out
lahf
cld
scas
cmp
sub
mov
scas
xchg
imul
inc
iret
lea
mov
inc
sarl
icebp
xchg
xchg
xorl
push
sbb
cmp
lds
xor
mov
mov
and
mov
jno
repz
mov
subl
pop
out
or
stos
pop
add
and
stos
push
xor
shr
adc
mov
push
pop
add
inc
xchg
pop
jno
xlat
mov
cmp
lret
cmpsl
imul
icebp
pop
adc
rcll
aam
es
xchg
shrb
subl
dec
ljmp
sub
pop
fs
leave
int3
addb
push
ljmp
das
push
cltd
fnstenv
push
or
push
and
cwtl
sub
notb
lret
add
rcrb
sbb
sub
push
and
jg
mov
mov
testl
call
or
in
fists
repnz
cltd
int3
push
mov
mov
cmp
imul
lods
fnsave
data16
cmp
sub
adc
mov
pop
cmp
sbb
cmp
xchg
arpl
xor
cmpb
inc
aam
stc
jl
or
es
stc
xor
cmc
jns
insl
pop
jb
pusha
pop
mov
and
daa
or
out
insl
pop
fcmovnb
pop
mov
roll
or
lret
mov
fidivl
loop
nop
es
add
iret
xchg
push
mov
inc
aam
push
outsb
xlat
test
push
lret
cmp
sbb
int3
fidivs
push
xchg
pop
pop
fldenv
pop
fbld
mov
popf
lcall
lret
cmp
and
aas
cmp
stc
ret
mov
and
or
jae
cmc
mov
mov
xchg
xchg
push
imul
and
push
jp
test
arpl
out
cmp
push
out
xchg
sbb
sarl
xor
out
mov
lcall
out
sub
movsb
vpavgw
sub
mov
mov
hlt
loop
mov
lds
shrl
lret
loop
mov
aad
mov
sahf
repnz
dec
popf
pop
adc
out
dec
push
dec
pop
aas
cltd
sarb
mov
into
jo
pushf
inc
mov
sbb
push
cmp
cmp
cwtl
mov
ss
jecxz
sahf
clc
cmp
xchg
cs
fs
sub
negl
mov
mov
stos
mov
or
push
outsb
movsl
mov
add
jge
or
stos
pop
stos
popw
mov
pop
xchg
aam
loope
or
push
addr16
clc
push
mov
fisubl
es
divb
mov
rorb
fisubrl
pop
dec
inc
je
imul
aad
ss
and
push
hlt
stos
pop
das
imull
or
test
ljmp
dec
ss
repnz
mov
xchg
pop
sbb
negl
std
xlat
stc
inc
sbb
iret
std
or
rcll
inc
daa
push
mov
in
pop
fs
mov
into
pop
jne
inc
xlat
lds
loop
lds
push
in
push
je
pop
stc
data16
push
aas
add
mov
jle
dec
mov
or
mov
add
xchg
shrl
sahf
push
inc
shrl
jne
insl
lock
sti
pop
rep
push
push
outsb
xor
xor
push
dec
aam
pusha
in
mov
repz
test
mov
sub
in
jo
jns
movsb
cmp
xchg
push
insl
pop
sbb
into
xor
push
xchg
test
xor
mov
subl
push
cmpsb
dec
mov
imul
add
add
xchg
sahf
adc
xchg
lods
push
mov
rolb
sub
mov
adc
or
outsb
lock
push
into
lea
or
fdivrp
scas
push
mov
cmp
ret
push
mov
in
sbb
jne
xchg
and
imul
nop
xor
call
fwait
das
icebp
pop
mov
adc
xchg
daa
mov
ja
mov
fdivl
bnd
pusha
jb
je
cmp
sub
and
jbe
xchg
fs
dec
cmp
insl
mov
pusha
sbbl
test
bound
ja
xor
imulb
sub
push
int
pop
push
cmc
sbb
add
xor
shl
jnp
jne
sti
mov
xor
popf
sbb
jge
lahf
push
ja
xchg
xor
imulb
pop
pop
lock
fdivrl
inc
ftst
lret
sub
add
aam
adc
dec
jmp
and
mov
cmpsl
dec
mov
sub
cmp
pushl
pop
mov
adc
cmc
int3
rcr
out
jg
pop
cs
and
xchg
pop
stos
inc
jbe
rcrl
push
add
stos
les
cwtl
push
sbb
nop
mov
and
stc
mov
fistps
sti
or
out
loopne
add
repz
pusha
adc
bound
int3
push
sub
cmp
aad
sub
in
or
jne
push
jno
xlat
pop
jbe
loope
test
sub
negb
std
bound
pop
jl
sbb
sub
repnz
out
lods
call
xchg
das
rcrl
int
jmp
adc
fcom
xchg
lds
aaa
int
cmp
pop
adc
push
mov
cmc
jo
xchg
ret
insb
adc
fistpll
or
add
push
pop
lock
int
cs
xchg
nop
mov
pop
inc
insb
loopne
movsl
lods
push
mov
dec
xchg
jne
and
hlt
push
jns
jnp
daa
movsb
es
pop
fimull
xchg
cltd
dec
mov
gs
mov
add
lods
sub
subl
scas
mov
pop
and
insl
divl
mov
pop
out
inc
mov
adc
sbb
movsl
lods
jae
nop
nop
jl
cli
mov
ljmp
dec
jns
inc
nop
fwait
mov
push
xchg
pop
jb
cmp
inc
mov
adc
test
cmpsl
cmpsl
pop
cmp
mov
in
bound
mov
jno
dec
imul
movsl
pop
add
push
fiaddl
out
dec
loop
xor
stc
inc
scas
mov
dec
stos
mov
bound
js
or
je
and
lods
sub
mov
sub
xchg
cld
or
decl
int3
orb
sub
lods
dec
sti
out
jno
ret
add
jae
shlb
sbb
pop
xor
jns
mov
sbb
int3
sub
xchg
adc
lock
mov
ficoml
sbb
das
dec
mov
cmp
xor
out
aaa
xchg
mov
js
enter
out
es
pop
sbb
jle
xchg
cld
movsl
xchg
xor
inc
and
mov
mov
sar
dec
cmpsl
fsubrs
stc
ja
fmull
insl
push
cwtl
push
mov
xchg
push
in
fs
fidivrl
mov
adc
push
mov
test
out
aad
aam
xor
xor
xchg
adc
out
loopne
negl
pop
imulb
lahf
imul
fs
ss
sub
sbb
pop
push
mov
fwait
xor
inc
adc
hlt
jne
sti
add
mov
movsl
rcrb
mov
xchg
mov
imul
shrb
movsl
lock
nop
jne
in
sarb
push
push
mov
pop
cli
mov
imul
pop
xchg
lods
add
inc
or
dec
sub
cltd
aad
repz
movsb
xchg
pop
jp
jns
test
sbb
adc
push
arpl
mov
push
add
pop
test
mov
inc
stc
scas
pushl
lock
jb
add
enter
xchg
loop
push
cs
pusha
mov
mov
sarl
or
leave
into
arpl
push
in
add
lea
pushf
jnp
adc
loopne
and
adc
xchg
mov
mov
sbb
dec
dec
aaa
fsts
jl
repnz
cs
mov
dec
add
sbb
int3
xchg
aad
sti
subl
test
in
into
testl
ret
cld
bound
inc
pusha
dec
enter
andl
xchg
xor
fisubl
mov
cwtl
pop
dec
cmc
pushf
sti
ds
push
insb
or
inc
cwtl
push
cmp
mov
rcr
jb
iret
cmpsl
and
adcb
fwait
stc
mov
enter
jge
pop
cmpsb
out
cltd
jle
sub
mov
xor
inc
adc
ret
je
dec
ret
sbb
add
je
lretw
int
shrl
mov
cmp
lcall
imul
dec
js
es
mov
push
mov
leave
jecxz
xor
fisubl
daa
xor
scas
xchg
push
sbb
xchg
imul
aas
mov
addl
pusha
jmp
ds
popf
pop
int3
sub
cwtl
mov
out
ss
mov
mov
sbb
jae
ds
orl
add
clc
xor
cwtl
push
adc
dec
loopne
jnp
stos
and
pop
mov
stos
lds
pop
loope
and
loop
adc
dec
cmp
mov
inc
add
lahf
jbe
sub
cwtl
scas
dec
roll
shll
nop
sbb
sarb
xor
aad
scas
mov
rclb
push
adc
sub
fistpl
mov
imul
stc
insl
loope
push
ljmp
sbbb
and
xor
cwtl
aad
xchg
add
pop
push
sub
in
or
ja
and
adc
cmp
sti
adc
cli
cmpsl
imul
call
jecxz
or
ret
popa
push
mov
punpckhbw
in
mov
add
fistps
pop
mov
pop
inc
mov
pop
xchg
lret
inc
xchg
mov
into
jmp
cmp
sbb
inc
cmpsb
mov
jae
push
pop
cltd
push
and
dec
mov
cli
loopne
pop
orl
adcb
int3
and
movsl
das
pushl
and
dec
scas
push
xchg
mov
add
out
push
call
ja
push
es
leave
pop
scas
push
lahf
cmp
addl
mov
mov
adc
test
lahf
pop
push
clc
add
arpl
test
fstps
push
jns
pop
lea
cwtl
mov
mov
sbb
js
andl
mov
hlt
push
jl
aam
push
or
je
div
xchg
and
lcall
es
or
pop
subb
ficoms
loopne
inc
out
and
bound
mov
jne
mov
xor
lret
loop
xor
inc
lods
shr
add
in
pushf
mov
jl
mov
aaa
ret
mov
dec
in
jge
inc
or
icebp
ret
gs
leave
jo
and
paddusw
or
into
mov
mov
inc
pop
xorl
adc
scas
gs
dec
outsl
out
adc
lds
mov
push
mov
ret
andb
out
call
inc
ljmp
mov
jle
movsl
mov
inc
repz
cmp
sbbb
gs
add
cmc
adc
mov
aaa
mov
sbb
clc
mov
or
mov
repnz
rorl
mov
xor
xor
or
shlb
in
cmp
xchg
aas
cmp
xchg
pop
dec
call
movsb
mov
push
outsl
ret
sahf
inc
pop
ljmp
push
outsl
push
xchg
sbb
in
scas
pop
adc
pop
sahf
and
mov
jb
ret
jl
mov
jnp
call
lahf
add
mov
loop
jnp
xchg
jp
push
lea
call
push
mov
iret
mov
loopne
push
cli
dec
adc
aas
mov
sahf
mov
shll
lods
in
outsl
test
mov
lea
rol
sub
pop
cmp
xchg
jmp
inc
and
mov
into
int3
push
adcb
inc
dec
jl
jg
enter
xchg
cmc
mov
sbb
pop
push
jns
jge
mov
and
mov
sub
xchg
rcrl
adcl
cmpb
and
mov
rcrl
enter
mov
push
inc
pop
test
inc
xor
pop
lods
clc
mov
jmp
rcrl
gs
popa
sbb
xlat
loop
pop
add
iret
adc
mov
dec
loopne
clc
xchg
sbb
in
xor
iret
push
sbb
or
stos
fildll
mov
dec
push
lcall
inc
dec
sub
das
add
mov
cs
test
xchg
mov
negb
or
mov
rcr
jnp
xlat
xchg
inc
lcall
mov
jbe
rorl
out
test
lret
sub
dec
movsl
cmpsb
push
push
mov
sub
fsubrl
nop
lea
pushf
xor
mov
sahf
cmp
mov
xor
in
stc
inc
or
adcl
in
cltd
orb
adc
jbe
jns
outsl
test
leave
outsb
inc
mov
imull
out
mov
jmp
repnz
insb
stos
stos
jno
icebp
nop
ret
sub
add
inc
andb
add
fldl2t
mov
xor
sahf
mov
sbb
fwait
dec
loope
mov
fldcw
lahf
in
mov
sub
fdivr
mov
add
sbb
pushf
jo
and
lock
cmc
into
ss
lret
das
into
lock
push
inc
xchg
mov
push
adc
test
mov
inc
scas
movsb
adc
adc
fnstsw
dec
lods
pop
pop
mov
inc
inc
dec
ljmp
sbb
xorb
xor
stos
push
mov
repnz
rcrl
scas
fildl
faddp
xor
outsl
sub
inc
xchg
out
push
mov
lea
inc
xor
das
sahf
pop
xchg
scas
incl
pop
mov
out
jo
ret
sbb
push
dec
mull
xor
cmp
cwtl
ss
or
fists
enter
sbb
movsb
dec
mov
es
hlt
cmp
jbe
data16
push
jmp
sarb
int3
stc
add
sti
and
xchg
xor
mov
mov
jbe
mov
sti
ficompl
push
mov
pop
mov
int3
jmp
enter
fstpl
sbb
push
aad
pop
roll
rcl
add
sbb
jmp
push
jnp
and
or
push
mov
fwait
outsb
das
cltd
out
jb
jbe
sub
xchg
pop
rorl
jmp
fisttpl
and
andb
push
or
mov
xchg
xor
loopne
fwait
gs
iret
xchg
hlt
filds
repz
xchg
incl
ss
leave
fucomip
push
and
in
inc
arpl
dec
or
mov
scas
cmpsl
mov
mov
imul
dec
int
pop
inc
mov
mov
loopne
mov
jbe
sub
add
mov
sbb
stos
iret
xor
subb
push
int3
adc
add
pushf
push
insl
jl
loop
adc
mov
cmp
lds
shl
lcall
add
mov
test
ss
dec
jp
pushaw
sti
cmp
jnp
sub
outsl
push
adc
ds
jle
in
and
insb
mov
and
stc
lahf
ret
aaa
jecxz
out
push
cmp
ret
in
scas
push
pushf
test
ja
xchg
or
cmpsb
mov
std
jg
lcall
out
cmpsb
mov
push
add
test
lock
mov
out
add
aam
mov
sub
test
push
repz
sbb
push
dec
or
cmp
push
std
jns
jb
sub
mov
sarl
int3
cmp
mov
pop
movsb
fsub
xchg
int3
cltd
cmp
insb
aas
mov
cmp
mov
lahf
jae
aam
in
mov
jmp
pop
dec
pop
push
adc
call
repnz
stc
andl
push
aas
int
je
jecxz
lea
xor
popa
js
mov
stc
inc
mov
int
jl
lcall
adc
in
push
or
out
dec
aam
imul
push
in
push
pop
mov
popf
sub
inc
and
mov
iret
data16
fisubs
mov
or
and
insb
push
dec
push
mull
sub
shr
jl
mov
adc
pop
aas
push
fdivs
or
push
mov
sub
dec
push
pushf
or
enter
dec
jns
mov
mov
lock
dec
jmp
mov
pop
lock
movsl
ret
inc
rorb
xlat
sbb
mov
rclb
jo
add
ret
out
cmpsb
xlat
mov
and
mov
xchg
push
addr16
adc
and
mov
sub
movsl
iret
or
adc
outsb
ljmp
pop
jb
or
xor
hlt
out
shl
std
movsb
xchg
sbb
pop
sti
test
mov
out
inc
cmp
dec
outsl
mov
or
cmp
push
ficoms
xor
pop
in
jno
pop
inc
test
hlt
xchg
popf
subb
mov
mov
fwait
mov
lahf
mov
loop
jge
cmc
jl
xchg
sub
dec
mov
cmp
mov
jge
or
jns
stc
mov
rcr
cmp
out
mov
int3
rolb
pop
and
aad
stos
jp
ret
hlt
mov
sbb
lock
xor
push
mov
lods
pop
fs
orl
pop
into
xor
cmp
scas
gs
sbb
lahf
ss
scas
push
loopne
test
push
lods
dec
xchg
and
xchg
lock
out
ret
xchg
or
mov
mov
adc
and
test
pop
lods
iret
jg
mov
ss
jno
inc
xchg
nop
dec
jae
jne
cmp
addb
mov
and
xor
arpl
or
aad
stos
call
std
sarl
xchg
repz
stos
xor
and
stos
or
loopne
iret
les
sub
stc
cwtl
fs
jne
cmp
pushf
cmpsb
jo
mov
enter
sub
je
lret
mov
dec
repz
insl
cs
fdivl
jmp
mov
pop
dec
data16
movsl
add
in
rcrl
popa
adc
xor
pop
jecxz
call
push
push
sahf
pop
jle
add
adc
notl
dec
cs
imul
ja
xchg
rorb
ret
popf
xor
cmp
ficoml
int
test
pushf
aas
add
xor
jp
inc
mov
aas
xor
leave
mov
push
pop
mov
mov
lret
ja
jne
sbbb
aad
adc
orb
shrb
out
pop
jge
pop
push
push
shr
pop
cmp
mov
aad
pushf
pusha
outsl
mov
iret
stos
aad
fs
dec
push
or
ljmp
inc
out
xor
bsr
leave
add
fcompl
jmp
daa
push
xor
and
mov
inc
jge
mov
xor
out
jecxz
jno
addb
jle
cmp
sahf
clc
std
cmp
andb
dec
pop
pop
or
loope
or
ret
xor
int
lret
or
or
dec
fwait
insl
sbb
jl
lock
adc
add
das
jno
jmp
in
pop
xchg
mov
fsts
add
inc
jp
das
ljmp
lcall
mov
fisttps
stos
jg
stos
jmp
repz
dec
inc
in
or
arpl
rol
jl
push
and
push
or
mov
jp
in
pop
vmwrite
jp
and
in
sti
cmp
xorb
popf
dec
insl
adc
cmp
cltd
xlat
or
mov
sbb
jns
jle
lret
icebp
sub
sub
push
mov
fisubrl
xor
addr16
rcr
lods
fwait
lahf
xchg
stos
cltd
push
inc
cmp
aas
mov
loope
mov
movsl
dec
js
addr16
sub
sub
icebp
dec
adc
mov
cld
flds
clc
sub
push
xlat
add
cli
rcrb
mov
add
iret
xchg
push
dec
stos
fistps
push
ljmp
sub
mov
jns
sbb
jecxz
insl
xor
data16
mov
rclb
femms
rcrb
in
sub
sahf
xchg
jecxz
stc
inc
jb
aad
sbb
sahf
jl
lret
xchg
scas
xchg
or
mov
jae
bound
pop
or
movsb
dec
icebp
nop
inc
scas
pop
fdivrs
dec
enter
lods
icebp
xchg
fstl
jnp
test
fsubp
imul
cmp
sub
out
mov
inc
dec
outsb
mov
add
push
cmp
jmp
test
pop
pop
xchg
fnsave
popa
ret
sbb
idiv
les
int
loopne
test
or
fldl
jle
fists
pop
inc
xor
test
mov
mov
mov
xchg
and
pop
movsl
dec
aam
mov
cmp
jbe
test
leave
and
pusha
cwtl
sbb
dec
adc
lcall
add
inc
int
mov
fs
bound
cld
cmp
dec
iret
jle
add
or
pop
adc
inc
into
mov
mov
lods
pop
cmpsb
negb
mov
incb
mov
sub
cmp
sbb
and
cmp
loope
push
daa
das
mov
insl
inc
fsubs
adc
das
je
xor
dec
popa
aaa
xor
jns
ud2
mov
jns
inc
pop
out
mov
imul
mov
mov
pop
pop
xchg
mov
sar
imul
inc
lcall
popa
stos
adc
mov
pushf
adc
and
and
ds
fs
inc
call
fstpt
xor
ds
decb
or
fsubl
arpl
inc
or
cmpsb
aaa
or
add
fldt
loope
pop
push
popa
add
stc
loopne
push
fdivs
mov
stc
std
xchg
pop
bound
jnp
lahf
nop
clc
inc
and
sahf
or
sub
lods
loopne
outsb
mov
mov
pushf
push
insb
popa
mov
adc
call
and
pop
dec
xchg
and
ja
jmp
icebp
testl
mov
stos
roll
fcmovne
subl
cmp
bound
sahf
sbb
sbb
push
or
push
cmpsb
addb
push
adc
sarl
jg
shr
jmp
cld
dec
bound
xor
push
and
dec
out
add
repnz
popa
cli
xchg
jge
jmp
or
in
nop
loop
into
pop
jmp
out
push
ds
or
fwait
mov
and
ss
stos
andb
mov
jo
dec
mov
inc
xchg
jmp
add
lret
inc
in
xchg
inc
mov
mov
push
mov
loop
fucomp
out
cs
int3
or
cmp
inc
and
xchg
pop
jae
gs
add
inc
pop
mulps
inc
mov
sub
push
rcrl
xchg
into
mov
imul
or
lret
mov
xchg
shrb
lahf
cmc
sbbb
xor
stos
mov
shll
out
ret
sub
mov
adc
xchg
daa
sbb
popf
js
push
mov
pop
mov
mov
test
jecxz
push
mov
push
jnp
cmpsb
pusha
into
xor
cwtl
push
int
mov
arpl
pop
call
in
mov
call
orl
add
fldenv
cmp
outsb
jns
adc
std
lods
push
mov
cmp
xchg
ds
pop
addr16
in
dec
mov
cmp
rorl
or
int
mov
mov
outsl
adc
adc
adc
jp
pop
shll
pop
cli
jg
ds
aam
inc
lcall
bound
xchg
add
cmpsb
mov
push
lods
sub
add
dec
mov
pop
mov
mov
xchg
cli
dec
lret
cmc
sbb
push
mov
mov
sub
mov
stos
fs
fiaddl
adc
jae
fs
out
xor
jg
dec
arpl
jp
out
and
cltd
adc
pop
mov
add
adcl
sbb
mov
jne
pop
dec
xchg
sub
add
addl
adc
in
adc
adc
lods
xchg
lret
sub
or
in
or
jns
xchg
xchg
das
daa
xchg
xchg
mov
int
jbe
add
jne
pop
jge
pop
cmp
in
fwait
jge
ljmp
insb
or
xor
loop
add
adc
mov
js
in
sbb
divb
jbe
jne
or
leave
adc
sbb
rcrl
jns
pop
in
xchg
pop
mov
andb
push
cwtl
push
add
jne
loopne
jmp
add
sbb
incb
adc
movsb
pop
subb
mov
xor
dec
or
push
dec
fwait
jns
or
aaa
inc
test
jg
add
cmpsb
push
mov
xchg
fisubl
cs
mov
int3
cli
pop
loopne
inc
xchg
push
les
movsb
subl
cmp
sbb
test
and
dec
mov
lret
shl
mov
or
mov
dec
repz
aam
and
aaa
mov
inc
and
push
sub
adc
pop
push
mov
enterw
fs
pop
push
lods
push
xlat
xor
push
adc
cltd
in
mov
aad
mov
cmpb
std
rcrl
and
stc
in
pop
loope
arpl
mov
mov
imul
pushf
xchg
orl
mov
std
popa
pop
dec
insb
sbb
scas
push
test
jne
inc
gs
mov
mov
jns
and
cmpsl
cwtl
enter
je
xor
lea
cltd
cltd
sub
xchg
inc
dec
cmp
ja
mov
shl
xor
ja
rorb
xchg
sub
push
cld
pop
inc
inc
add
mov
push
mov
xor
or
jge
daa
inc
jg
ret
lret
xlat
std
test
cmp
mov
in
and
mov
bound
clc
sbbb
xchg
mov
addl
pop
xchg
loop
sub
or
xor
leave
xor
ljmp
inc
in
dec
dec
and
mov
push
pop
cltd
mov
push
in
jne
mov
hlt
pushf
push
inc
or
dec
xlat
mov
inc
into
insl
imul
in
outsl
mov
fs
adc
adc
inc
cmpsb
mov
mov
jge
ds
adc
mov
fisubl
pop
dec
push
or
addr16
pop
mov
inc
xchg
mov
shr
xchg
mov
aaa
xlat
cmpsb
dec
push
out
movsl
scas
sbb
pop
inc
pop
data16
and
mov
or
mov
dec
sbb
movsb
cmp
roll
lret
cli
pop
or
or
cmpb
out
xchg
sub
cmp
gs
dec
ljmp
arpl
sbb
fldl2e
fwait
mov
mov
subl
sub
shrb
push
mov
std
f2xm1
xchg
adc
or
popf
fwait
imul
hlt
mov
inc
xor
std
data16
aad
mov
lods
dec
xor
mov
sbb
add
subl
cmpsb
outsb
imul
jmp
mov
lods
std
push
add
pop
xchg
jge
mov
shrb
pop
mov
loop
aas
push
ret
rcrl
sbb
jmp
push
addr16
lret
cwtl
stc
add
or
xor
push
mov
icebp
pusha
cmp
mov
incb
xchg
and
sub
or
ja
xchg
addr16
sbb
ds
aas
add
rorl
decl
movsb
push
movsl
xor
pusha
aas
or
fs
lods
out
mov
jp
movsl
loope
pop
int
insb
pop
mov
loope
dec
or
jo
xchg
daa
cltd
mov
inc
or
popf
insb
inc
cmp
daa
dec
mov
stos
in
sub
xchg
and
cmp
addl
jns
test
jl
aad
ds
jl
orl
cmp
lods
pop
aad
cwtl
sbb
pop
adc
pop
add
dec
rorl
xor
in
in
loop
mov
cmp
movsb
adc
out
jne
cmp
jg
cmp
dec
mov
or
sbb
jl
ja
decl
sbb
and
arpl
sub
in
ja
bnd
test
insl
fstpt
pop
sti
and
adc
sbb
in
shll
pusha
shrl
inc
or
xor
adc
test
jmp
pop
cmp
jbe
addr16
pop
adc
dec
insb
cmp
mov
adc
adc
xor
mov
pusha
cmpsb
inc
xor
xchg
inc
popa
mov
pusha
or
add
push
jne
jmp
sub
mov
cltd
adc
test
sub
dec
movsl
movsb
ss
add
in
push
mov
out
sbb
frstor
sub
mov
push
mov
xorl
xchg
mov
add
mov
test
sahf
cmp
fmull
scas
or
sub
fstp
pop
or
loop
jle
push
xchg
out
jle
sbb
shl
pop
std
lahf
inc
push
out
dec
pushf
pop
sbb
clc
cmc
out
out
lcall
fstpl
rolb
dec
mov
pop
std
stos
in
or
movsb
push
das
fcoml
fisttps
cmp
in
dec
jb
add
xlat
bndmov
xchg
or
cmp
fistpl
sbb
push
lcall
lods
fimull
and
rcrb
sbb
xor
inc
in
sbb
mov
popa
lods
cmp
nop
sub
das
sub
out
imul
dec
and
add
mov
adc
and
pop
call
fadds
xchg
mov
pusha
cmp
or
jo
jae
mov
sub
adc
xchg
nop
arpl
xchg
adc
pop
pop
movsl
cld
sti
aam
pop
or
lret
je
fimull
jle
scas
imul
adc
cmp
cmp
ret
dec
adc
or
jae
fstps
call
xchg
add
and
xor
xor
mov
pop
lret
push
mov
addr16
fisubrs
xchg
push
mov
jmp
dec
lock
mov
inc
test
cli
ret
cltd
es
les
arpl
int
dec
test
insl
pushl
jl
cmpsl
loope
rcrb
lock
adc
push
iret
xor
sub
pop
sbb
cmp
je
xchg
rcrl
jne
adc
pusha
punpckhdq
jnp
loope
push
mov
stos
daa
js
loopne
and
aad
jbe
fsubl
int3
add
jbe
data16
out
rolb
fcomps
lret
nop
pop
add
push
sbb
sub
xlat
scas
mov
dec
jo
fmull
fistpl
cmp
das
mov
dec
inc
push
cld
movsl
adc
or
inc
in
mov
xchg
insb
enter
testb
cmp
mov
rolb
mov
add
pop
push
ds
fdiv
fnstsw
inc
inc
add
push
fistpl
mov
fildl
adc
jae
cmp
pop
mov
ss
jp
pop
jmp
mov
sub
push
ficomps
aas
jle
cmp
mov
inc
hlt
lahf
in
clc
lea
out
pop
mov
jp
lods
pop
and
sahf
pusha
push
cwtl
pop
mov
nop
cmc
cmp
mov
ljmp
xchg
sbb
mov
aaa
cmc
push
testl
out
inc
cmp
add
mov
add
sarl
cmp
pop
lcall
mov
mov
insl
insl
mov
pop
hlt
mov
stos
ljmp
mov
jno
enter
rorl
faddl
mov
into
data16
pop
das
push
ds
cld
inc
fisubrs
wrmsr
xchg
cmp
jmp
arpl
adc
int3
in
stos
lea
mov
sti
mov
xchg
cmp
sub
mov
mov
mov
adc
sbb
sub
or
sbb
in
pushf
sarl
xor
push
dec
subb
adc
rcrb
pop
dec
call
stos
sub
stos
lods
repnz
jecxz
push
fcmovnbe
dec
dec
lahf
mov
mov
push
gs
sbb
jmp
adc
jp
push
dec
sub
inc
add
cmp
pop
mov
aas
cmpsl
cmpsl
insl
inc
rorb
inc
push
je
pop
jle
adc
inc
push
xchg
add
cmp
insl
cmpsb
jmp
and
addb
cmpsb
pop
cmpsl
pop
jbe
in
dec
sbb
adcl
or
xchg
cwtl
inc
icebp
inc
inc
loope
adc
pop
cmp
push
fildl
lock
jae
adc
or
adc
adc
inc
lret
push
test
aad
test
imul
push
lods
sub
dec
adcb
adc
in
or
sbbl
imul
cvtps2pi
call
mov
lea
pop
aad
cmp
push
fs
das
and
jno,pn
pop
push
test
sub
add
in
jo
divl
dec
mov
and
sbb
mov
xor
jle
push
cmpsb
mov
xchg
in
sbb
cltd
mov
dec
push
adc
mov
sub
jne
adc
popa
data16
cmp
test
push
lock
stos
push
out
add
or
adc
or
jmp
xchg
icebp
lods
and
add
dec
in
aas
sub
arpl
sbb
xchg
sahf
in
inc
jecxz
inc
js
repz
jmp
aam
sub
add
aaa
sbb
popa
mov
fdivrl
pop
and
xchg
lcall
pop
inc
fwait
rolb
mov
fs
icebp
or
jge
xor
mov
and
ret
or
stos
test
faddl
inc
xor
sbb
hlt
pop
inc
out
cmp
mov
cmpsl
mov
dec
out
mov
mov
lret
out
data16
aad
fwait
popf
mov
test
ret
cwtl
xchg
inc
dec
xchg
and
xor
jp
jmp
shlb
ja
ficompl
cmp
or
loop
pop
mov
inc
push
jmp
mov
pop
xchg
and
inc
scas
mov
push
insb
ja
push
in
pusha
xor
into
lea
test
fadds
cltd
inc
cltd
stos
rorl
cmp
add
inc
fsub
loopne
sub
cwtl
sbbl
or
rcrb
pop
dec
ljmp
xchg
adc
mov
xor
cmp
pop
inc
sub
aas
and
push
cmp
aaa
push
adc
insb
imul
sub
movsb
mov
sub
sti
or
xchg
adc
jnp
lret
mov
iret
loope
fwait
test
das
mov
pop
into
fbld
mov
loopne
cmp
leave
shll
ja
test
sub
repnz
and
push
inc
icebp
in
mov
inc
sbb
dec
sti
dec
sti
movsb
xchg
aam
and
sbb
and
push
sahf
test
imulb
ficoml
mov
add
sub
aaa
int
mov
jno
inc
ret
jnp
out
pop
movl
lahf
and
jp
dec
jle
mov
inc
aad
cmpsl
sbb
dec
sbb
mov
pop
jp
jg
push
out
jg
jp
fisubl
aaa
inc
in
mov
fs
fldl
shll
push
sub
xchg
loope
lods
add
pop
int
jb
push
cmp
dec
loope
pushf
add
ss
push
jns
sub
scas
cmovs
test
inc
pop
ret
je
jl
fisubs
sub
mov
mov
aaa
in
mov
clc
fdiv
out
adc
dec
out
push
stos
out
leave
push
xchg
jne
imul
cmp
sub
dec
in
cmpsb
fadds
push
inc
fcmovnu
mov
adc
fs
icebp
dec
dec
imul
out
fnstcw
cmpsb
jno
lods
sbb
cmp
push
pushf
repz
popa
cmc
or
fbstp
xor
mov
sbb
cld
sbb
push
lods
aam
addb
add
sbb
into
inc
push
sbb
mov
sbb
jl
sub
mov
adc
dec
pop
outsb
mov
dec
loopne
pushf
jne
inc
inc
push
lahf
ret
fs
popaw
mov
cmc
cmpsb
fldenv
popf
dec
shl
ss
lea
jo
adc
or
sub
mov
cmp
jmp
iret
insl
cmpsb
pop
jg
lcall
js
sub
jmp
mov
fwait
lret
jne
cmc
xchg
aaa
mov
push
cmp
dec
mov
sbb
popl
sub
lods
popf
mov
das
xor
inc
lods
pop
inc
lcall
xor
mov
xchg
sahf
in
xor
xchg
fsts
pushf
out
pop
jp
outsl
imul
pop
fisubl
xchg
add
stc
in
xchg
dec
int
iret
dec
or
inc
cmp
sub
dec
notb
jo
inc
pop
aad
in
fdivrs
or
fwait
in
mov
cli
jne
lods
hlt
mov
or
dec
or
push
xchg
xchg
push
sbb
outsl
cmpsb
lret
test
push
fwait
and
mov
das
test
mov
push
mov
jne
cwtl
sbb
push
sarb
push
hlt
sub
and
xchg
add
and
pop
stc
ja
jg
sub
subl
mov
movsl
mov
cmc
pop
shrl
xor
es
std
adc
cmp
inc
dec
push
rcrb
cs
sub
xor
xchg
cmpl
add
lods
out
pushf
movb
pop
or
lahf
push
out
inc
in
enter
cmpsl
and
xchg
fbld
sbb
bound
addb
outsb
xor
sbb
cli
sbb
int3
fldenv
push
enter
pop
jmp
mov
xchg
xlat
dec
jecxz
xorb
jp
fisubl
insb
or
mov
jnp
cwtl
xchg
outsb
and
mov
enter
dec
xor
push
into
jp
fldenv
int
dec
into
inc
pop
pop
mov
ffree
jae
sbb
int
lds
adc
imul
je
adc
jb
dec
ss
pop
jno
dec
cmpsb
into
fldlg2
xor
pusha
mov
inc
xor
cld
adc
or
and
mov
sbb
cmpsl
xlat
ds
imul
jo
lods
push
mov
push
lea
stos
push
jp
sbb
mov
ja
test
imul
adc
add
rcl
lea
mov
inc
or
inc
test
dec
push
sub
or
cmpb
pop
daa
loop
pusha
mov
gs
cmp
mov
cltd
aas
arpl
insb
insl
inc
push
leave
daa
mov
dec
out
or
movsl
add
loop
add
pop
push
jge
fildl
pop
gs
mov
cwtl
push
cmp
loop
mov
pop
lcall
pop
dec
jle
in
mov
mov
xchg
add
mov
or
ret
xchg
jg
xlat
dec
jne
fidivrl
mov
mov
paddusb
lock
in
adc
or
mov
es
mov
pop
imul
rolb
mov
fnstsw
push
hlt
aad
cmpsb
dec
pop
mov
push
pop
xor
sub
pop
ficoms
repz
pop
adc
adc
dec
jmp
or
clc
xchg
mov
icebp
std
xchg
or
pop
xchg
push
jne
sbb
pop
fistl
pop
jmp
shl
test
outsb
jne
in
sti
pop
cs
adc
mov
call
jo
jg
je
mov
adc
xlat
into
cld
mov
add
addr16
add
mov
fnstcw
mov
push
in
sbb
mov
jnp
mov
pushf
pop
pop
and
cltd
dec
sbb
lret
or
xor
nop
mov
and
loope
lahf
and
frstor
sbb
into
and
mov
xchg
mov
add
cmp
ja
mov
je
sarb
rcrb
test
jbe
jmp
lods
cmpsb
std
out
jno
addr16
xchg
addb
inc
fisubrl
jb
mov
mov
int3
pop
inc
test
mov
or
test
hlt
das
or
sub
pop
loope
pop
xchg
outsl
mov
sub
pusha
inc
xor
nop
add
mov
out
xor
push
loope
insb
pushf
xchg
aas
pusha
fld
xchg
adc
cmp
stos
sti
les
addl
aam
pop
lock
pop
stos
lea
icebp
shlb
aam
add
xor
imul
popa
paddsb
sbb
or
push
xor
arpl
jmp
cmp
mov
cltd
add
cltd
ret
add
popf
or
aaa
rcrl
jmp
mov
fiadds
pop
or
and
dec
cmp
call
dec
clc
jae
cmp
push
inc
lret
dec
sbb
lea
shrl
cmc
mov
cmp
movl
sti
jne
mov
jne
xor
jbe
xchg
loop
inc
fistps
lock
pop
dec
fwait
out
sarb
mov
mov
sbb
fimuls
mov
xchg
in
sbb
sbb
in
mov
jnp
add
jns
mov
mov
insl
mov
mov
pop
sbb
xchg
js
fwait
xchg
xlat
in
xor
mov
dec
scas
mov
adc
test
dec
outsl
sub
pop
cmpsb
subb
push
inc
sahf
mov
out
adc
stc
js
lret
int3
mov
dec
sub
push
and
xchg
push
sbb
pop
sub
out
inc
aad
mov
jecxz
ja
ss
xchg
add
or
frstor
popf
call
or
and
aas
hlt
clc
add
inc
repnz
aas
mov
add
daa
in
dec
xor
xor
js
movsl
jne
cmp
dec
push
test
mov
fistpll
test
xor
add
es
les
xchg
adc
lds
leave
mov
lret
jecxz
sub
sub
and
xor
push
sahf
pop
push
sub
decl
and
inc
inc
xor
fcoml
mov
inc
push
lahf
loop
sub
or
xchg
xor
enter
inc
pop
ss
shrb
stc
mov
sub
adc
cltd
sub
push
jb
int
adcl
insl
jp
mov
jne
inc
mov
dec
jecxz
mov
outsl
sub
lret
cltd
push
mov
add
adc
in
jbe
mov
aad
jp
mov
loope
jp
jae
xchg
jg
add
xlat
pop
out
and
or
popa
xor
fisubrs
mov
shll
cltd
jno
mov
pop
mov
jbe
and
fldcw
push
fucompp
xchg
sbb
stos
lds
pop
jmp
aas
xchg
xchg
jge
pop
or
aaa
scas
shrl
insl
and
push
push
and
dec
xor
sti
inc
scas
push
lret
mov
or
jle
jbe
bound
sub
dec
loop
in
pusha
gs
add
stos
cmc
push
fcmovne
inc
mov
jecxz
xor
or
das
xchg
andb
jmp
test
cmp
out
pushf
sets
adc
jge
mov
call
les
imul
mov
rcrl
cli
mov
xor
test
pop
sbb
out
out
aaa
ret
cmpsl
ror
sub
mov
inc
pop
mov
sbb
aad
fdivs
testb
mov
stc
test
dec
pushf
and
adc
jg
imulb
mov
xchg
add
fimull
leave
rol
adc
ljmp
cmp
stc
shrl
xor
jne
dec
push
cmpl
mov
lret
fidivl
pop
xor
mov
inc
ret
mov
pop
push
mov
fstps
adc
stos
dec
xor
rcr
lcall
xor
push
or
inc
cli
sub
out
push
bound
es
and
lcall
fsubrl
or
and
clc
xchg
gs
jg
imull
mov
mov
ficoms
aam
bound
out
sahf
xchg
ja
sbb
xchg
data16
ja
fidivl
cmc
loop
jp
cltd
mov
sub
mov
pop
filds
mov
shrl
fs
idiv
icebp
xor
fadd
std
cmpsb
jl
xchg
leave
fistps
pop
pop
adc
jnp
shrd
dec
mov
pop
push
xchg
mov
pop
push
push
lds
push
les
adcb
popa
sbb
repnz
test
outsb
and
sub
ret
push
xor
dec
ss
xchg
cmp
sbb
pop
xchg
or
insb
in
mov
sti
insl
mov
jge
or
ret
mov
fisubl
sub
dec
pop
imul
or
jge
rclb
mov
cli
fistpl
and
dec
adc
cmpl
in
xchg
lock
ret
hlt
or
xor
inc
push
dec
arpl
push
mov
sarb
sub
sbb
jl
loopne
xor
inc
lock
jl
nop
xchg
pop
arpl
sbbb
je
mov
mov
sub
adcl
popf
das
adcl
fs
adc
ret
dec
and
mov
sub
ss
inc
pushf
inc
stos
sti
ja
out
and
cmp
bound
sub
test
dec
scas
cmpsl
jo
loope
and
mov
test
mov
insb
cli
loopne
into
xchg
or
sub
cmp
lret
bound
lret
cmpsb
gs
sub
outsl
lahf
jae
and
xor
enter
test
xlat
sub
dec
in
or
push
push
sbb
fildl
pop
jl
cmp
stos
out
inc
add
inc
insb
iret
mov
pop
aaa
or
push
mov
mov
sahf
sti
repz
test
jne
push
aad
lcall
mov
data16
std
adc
jo
xchg
cmpsb
xchg
xchg
pusha
rclb
leave
fsubs
cs
pop
leave
shlb
les
clc
xor
jno
das
push
decb
sbb
fbld
mov
jno
mov
lahf
clc
inc
packsswb
mov
fisttpl
scas
mov
data16
fcompl
xor
pop
sbb
jns
int3
call
incb
xor
loopne
inc
mov
loope
jmp
add
pusha
test
dec
sbb
sub
cwtl
sub
jnp
rcll
test
cmpsb
push
mov
add
xchg
outsb
cmp
data16
test
insl
push
push
and
into
call
inc
dec
movsl
pop
hlt
dec
xorb
pop
call
inc
push
or
dec
add
repnz
or
jbe
or
add
call
sub
jmp
xor
lods
inc
popf
leave
rolb
mov
cmp
aas
stos
out
mov
jecxz
sbb
out
out
in
sbb
aam
shufps
ret
adc
sahf
lods
xchg
call
sbb
or
mov
sbb
test
push
clc
jg
sbb
mov
cwtl
inc
mov
jg
shll
insb
dec
inc
or
xor
and
fnstenv
mov
mov
sub
mov
cltd
rcrl
xchg
insl
cmp
pop
fistpll
cmc
jo
jle
mov
xor
loope
pop
mov
pop
or
inc
subl
out
mov
mov
cmc
push
and
test
or
push
rcl
divl
fisubrl
fisttpll
push
mov
mov
in
shll
push
xchg
lea
mov
mov
mov
les
xchg
sub
mov
adc
xchg
aas
negl
jnp
pop
push
pusha
pop
pop
ret
paddq
cwtl
lock
data16
sbb
cmp
push
cltd
cmp
in
xor
jge
adc
push
cld
and
xor
into
cmc
xchg
jp
jb
popa
pop
inc
inc
mov
xorb
ja
push
fists
sbb
lods
xor
xlat
mov
das
imul
fwait
cmp
and
mov
fs
add
andb
sub
fildll
fcoml
jns
sti
filds
fcoml
ljmp
cmc
jns
in
mov
scas
roll
cmp
lods
scas
movsb
hlt
ds
cmp
or
sbb
mov
and
jns
test
std
sub
inc
je
notl
and
leave
cld
sbb
adc
lret
decb
popf
adc
std
inc
dec
testl
cmc
mov
lods
push
push
sbb
imul
mov
xchg
cmp
pop
hlt
jmp
popf
in
insb
icebp
pop
mov
and
push
sbb
je
loope
stos
or
add
out
sbb
sub
call
insb
adc
inc
aam
ror
lea
shl
mov
mov
push
jnp
push
sub
jl
inc
loope
push
xor
pop
hlt
mov
sub
out
mov
sti
add
cwtl
insb
pop
jg
fmull
sbbb
aam
ljmp
and
and
sbb
ss
mov
xchg
dec
inc
jg
cld
mov
pusha
jp
orb
inc
stos
xchg
sti
in
je
sub
xchg
mov
mov
addr16
stos
dec
lcall
popf
pmaddwd
sub
cmpl
mov
orl
iret
xor
enter
and
nop
pop
nop
add
cmpsl
sbb
sarb
pop
nop
clc
xacquire
mov
lret
lret
dec
or
out
sbb
repnz
pop
mov
push
mov
mov
mov
rcrl
push
sub
lock
sub
xor
faddl
xor
mov
imul
nop
sbb
xchg
pop
push
outsb
outsb
pushf
mov
mov
insb
mov
test
sub
mov
incb
mov
and
aas
test
out
dec
daa
dec
push
dec
icebp
xchg
jge
jb
clc
std
cmpsl
jne
sub
aad
cmp
adc
popa
ljmp
mov
pop
or
add
js
push
add
lock
ds
icebp
aad
test
xchg
cmp
add
sbb
push
mov
lahf
arpl
xor
lret
ds
fwait
cmc
sub
push
mov
adc
push
aas
cltd
adc
ljmp
add
xchg
nop
push
repnz
insl
shlb
out
cs
sahf
push
test
scas
add
clc
jb
adc
or
aaa
xchg
mov
loope
imul
aas
pop
pop
fwait
sbb
dec
out
rcrl
int3
mov
dec
fstps
push
pushf
cs
and
scas
fidivl
jle
jmp
lods
gs
test
push
xor
and
and
push
pop
mov
xchg
mov
mov
es
fbld
sbb
inc
mov
adc
scas
movsl
jecxz
mov
pop
aas
cmp
testl
movsl
jge
cwtl
mov
imul
fcomps
mov
push
sub
clc
add
in
scas
fidivl
imul
add
and
imul
or
xchg
jne
jmp
mov
pushf
inc
repz
cltd
out
xchg
test
movsl
testl
cmp
cmp
sub
pop
inc
sub
fld
sub
adc
jbe
sub
ret
stos
test
or
std
and
loop
fldt
jne
insb
scas
roll
bound
rolb
nop
push
dec
or
in
jae
xchg
pushf
js
loope
xchg
insb
xchg
and
or
adc
int
sbb
out
into
cli
mov
pop
xor
or
and
insl
test
mov
xor
popf
bnd
lret
or
xchg
lcall
mov
stos
in
sbb
jne
sub
lods
in
ljmp
adc
out
test
mov
push
fistpl
into
dec
mov
inc
lds
mov
int3
jno
cmp
lods
mov
inc
jl
outsb
or
lahf
push
cmp
pop
outsb
sbb
jae
cli
loope
loopne
icebp
adcl
jp
mov
adc
xchg
push
push
mov
decb
stc
popf
popf
das
sti
sub
xchg
out
xor
ss
xchg
call
adc
cmp
pop
fwait
mov
mov
out
add
mov
ja
jp
adcb
aad
fnstenv
pop
mov
fwait
jg
and
mov
rcrb
dec
cmp
pop
mov
jae
int3
test
add
jg
fmuls
je
ds
jno
mov
test
or
sub
rcrl
sub
enter
sub
mov
rolb
cmp
fsubl
sub
inc
dec
lret
pop
imul
test
sbb
scas
movsl
scas
pop
ljmp
inc
ret
nop
mov
and
inc
or
mov
inc
adc
sub
shr
rol
popf
and
bound
nop
test
add
add
mul
pop
sbb
sub
scas
sbb
lcall
jp
xor
popa
fisttpll
and
jb
cmp
std
inc
jo
int
cltd
add
inc
stos
xchg
push
outsb
insl
mov
cs
out
sbb
fistpll
pop
mov
adc
inc
rcl
jnp
stos
jns
jnp
cltd
jle
test
inc
dec
adc
mov
sub
mov
sbb
add
jecxz
mov
mov
ja
out
or
add
jns
inc
ja
js
xor
push
adc
mov
js
fs
sbb
push
lock
pop
scas
lcall
mov
push
ja
pop
push
fadd
xchg
xchg
cmp
test
adc
mov
into
dec
xchg
int
lahf
xor
repz
mov
add
jb
dec
jne
xchg
insb
test
jo
stos
jne
imul
into
les
xchg
dec
mov
push
ret
movb
daa
cli
sbb
or
and
jae
add
or
rcrb
imul
adcl
lea
divl
in
sbb
pop
sbb
adc
bound
aas
xlat
jle
ds
sti
xchg
popf
in
xor
outsb
mov
jl
arpl
fdivl
mov
mov
or
imul
fmuls
mov
jl
popa
fwait
adc
push
jmp
outsb
jecxz
pop
and
sbb
pop
sar
sub
fmuls
jecxz
insl
or
xchg
push
xor
out
insl
xchg
cs
xchg
popf
roll
aam
push
mov
test
xchg
sti
call
cmpsl
or
out
dec
push
aaa
add
push
cmp
push
in
cld
jb
ljmp
out
fisubrs
jno
stos
push
add
inc
loopne
ljmp
ret
push
xor
mov
jl
xor
xchg
jb
repz
jb
adcl
xchg
addr16
ds
fs
xor
jmp
loopne
lea
and
mov
hlt
mov
push
add
sub
repz
xchg
mov
test
aam
loop
mov
icebp
or
inc
add
ljmp
push
xlat
data16
dec
data16
jns
pop
jp
sub
shrb
xchg
popf
notl
jp
clc
inc
cld
adc
imul
imul
adc
arpl
pop
dec
cmpsl
sub
leave
popf
inc
out
loopne
lods
fwait
sub
mov
xor
push
sbb
cmpl
or
iret
mov
addr16
sub
stc
stos
jp
inc
xchg
repz
add
in
fwait
test
pusha
cmp
push
sub
repz
in
fbld
jge
bound
shll
mov
inc
push
inc
and
adc
xchg
loope
fstl
es
xchg
les
jnp
lods
movsl
jno
xchg
xchg
int
pop
sahf
js
adc
hlt
push
pop
dec
push
outsb
cmp
mov
and
in
rorb
gs
je
push
add
push
test
push
push
es
test
jl
sti
ljmp
push
ret
call
mov
jge
xchg
jne
pop
and
mov
cmp
push
mov
add
subl
mov
dec
xchg
pop
repnz
leave
imul
out
fcomps
bound
push
mov
xchg
cli
shlb
adcb
stos
ds
push
stos
inc
sub
lahf
imul
jae
xorb
jno
jp
adc
hlt
nop
test
in
or
jmp
xchg
in
and
int3
arpl
push
adcb
xor
mov
into
lcall
ret
out
xchg
insl
push
das
or
imul
aam
jns
out
dec
out
xor
or
pop
adc
popa
cs
push
addr16
imul
inc
and
scas
into
ds
pop
subl
sub
aad
inc
adc
jns
sub
mov
out
xchg
ss
jp
sbb
scas
xor
fildll
add
mov
and
mov
push
test
mov
push
xor
mov
inc
cmp
sbb
sbb
scas
loopne
cmp
sub
sub
insl
cs
out
fsts
hlt
jge
mov
hlt
mov
loope
mov
xor
outsl
push
jne
adc
lods
sub
loope
mov
cs
mov
cmp
clc
xchg
fst
in
push
out
sbb
dec
mov
push
push
addr16
repz
divl
sbb
cmp
dec
into
mov
aas
push
fcoml
out
loop
shrb
pop
dec
or
or
or
or
sahf
and
mov
pop
cs
cmp
sub
aam
repnz
pop
pop
jo
pop
xorb
jns
int3
and
call
add
xchg
fiadds
hlt
in
aaa
and
cmp
cmp
bound
lea
jmp
test
mov
subl
cltd
shrb
lock
loop
adc
aad
xchg
out
ss
rclb
repz
loope
pop
insb
cmp
push
dec
stc
mov
nop
dec
aas
push
aas
push
fstpt
gs
cmp
rcll
lock
fsubrl
daa
mov
subl
inc
adc
inc
test
pop
mov
mov
jo
jmp
ss
cmp
inc
jle
jb
mov
push
jp
cld
pop
push
stc
xchg
cld
addb
inc
adc
adc
push
neg
dec
xor
test
ja
std
ret
mov
sub
pop
bound
mov
lock
pop
push
mulb
inc
fstpt
in
mov
dec
lods
push
mov
orb
inc
sub
addr16
ret
loop
decl
shrb
jno
cmp
dec
push
adc
fdivrl
adc
pop
sahf
outsl
jl
sbb
sahf
pop
push
std
jb
push
rorb
inc
inc
daa
je
pop
and
lret
inc
popa
and
xchg
stc
bound
call
rcl
in
jne
add
and
push
mov
xchg
mov
lret
inc
pusha
in
sub
leave
in
mov
adc
dec
dec
data16
mov
pop
adc
or
adc
cmpsb
sub
ret
clc
repnz
test
jne
xchg
push
jp
pushl
ret
fistl
ret
add
pop
aam
stc
test
jno
xchg
cld
addb
lret
pop
xor
sbb
in
mov
sbb
jne
imul
xchg
add
loopne
mov
xor
and
cmpb
sbb
xchg
cwtl
sub
lahf
or
mov
mov
pusha
adc
mov
daa
outsb
jno
mov
test
xor
mov
sti
adcl
nop
in
and
pop
pushf
mov
mov
adc
cwtl
mov
mov
pop
adcb
and
cwtl
pushf
rcr
sbb
xor
sbb
mov
test
cmpsb
jb
add
push
dec
dec
adc
jnp
loope
rolb
rcr
int3
mov
pop
push
mov
mov
mov
enter
stos
fisubl
stos
ds
xor
stc
mov
add
sbb
or
cmpsb
dec
int3
dec
jno
sahf
inc
insl
mov
xor
dec
sbbb
fdivrs
gs
xchg
or
pop
hlt
sub
mov
idiv
ret
sub
adc
mov
fsubrs
outsb
je
jnp
lds
fisubrl
mov
fidivs
and
mov
pop
aaa
xchg
arpl
fcompl
insb
imul
pusha
xor
jne
cmp
and
mov
insl
add
aad
adc
dec
pushf
xchg
mov
inc
push
pop
lods
addl
roll
cwtl
push
sbb
aaa
js
iret
cmpsb
cmpsl
les
into
xchg
js
sub
xchg
add
inc
test
mov
call
xchg
test
fisubrs
insb
out
jae
mov
inc
push
sbb
pop
push
adc
decl
mov
sbb
xor
inc
jecxz
aad
cmp
sar
mov
jbe
cmc
lcall
out
int
movsbl
lret
xor
mov
hlt
mov
enter
movsl
dec
data16
and
xchg
push
dec
sub
xor
mov
aaa
test
aad
mov
push
jecxz
cmc
sub
sete
adc
psubq
loope
js
rcr
dec
and
pop
push
out
mov
scas
push
inc
cmp
rcrb
pop
sbb
sub
add
sbb
clc
jl
cli
push
pop
fdivl
mov
mov
rolb
push
push
xorl
orb
jg
mov
lret
pop
fistpl
mov
jnp
leave
adc
ljmp
mov
sbb
mov
das
daa
imul
push
sbb
subl
pop
mov
movsb
xchg
test
add
jnp
adc
imul
jecxz
sub
dec
ret
cmp
or
xor
dec
in
xor
movsl
push
cld
push
inc
and
repnz
cs
test
sbb
jp
jle
ret
fdivrl
sahf
icebp
or
mov
inc
pop
pop
call
sbb
out
sbb
xchg
ds
push
push
clc
xchg
scas
xchg
sti
mov
xchg
sbb
pushf
ja
mov
insl
push
nop
cmp
cmp
pop
out
sub
jle
xchg
or
xor
cmp
and
sbb
sub
jbe
xchg
or
js
sbb
xor
dec
cmpb
pop
dec
cmp
outsb
push
fldcw
push
and
sbb
cmp
dec
and
or
sub
out
int3
jns
adc
test
or
or
clc
or
aas
in
inc
rcrl
xchg
pop
cwtl
call
jl
mov
push
or
adc
or
sbb
test
mov
loopne
jmp
cmp
mov
sahf
lods
andl
mov
data16
push
sbbb
or
call
daa
inc
outsb
add
int
divl
cltd
xor
inc
mov
dec
jp
cmpsl
test
shrl
xor
stos
stc
push
or
sbb
add
das
cmpsb
dec
popa
sahf
mov
fidivs
xor
ja
sbb
sub
mov
inc
xor
sub
mov
mov
gs
xchg
repz
sbb
cwtl
std
add
push
les
and
xchg
incb
sahf
inc
pop
popf
test
pop
and
pop
mov
cs
icebp
mov
jecxz
pushf
pop
dec
push
movsl
in
or
and
int
stos
imul
push
pop
add
xchg
adc
das
testb
add
out
and
pushf
xchg
cmpsb
pop
xor
fs
in
cmpsl
mov
cli
mov
mov
push
insb
inc
stos
je
xchg
lret
push
jnp
cmp
push
imul
jae
xor
pushf
insl
es
fdiv
rolb
ret
jecxz
jnp
sbb
mov
pop
or
push
leave
pop
orl
xchg
insl
gs
cmp
imul
add
sti
xchg
cs
ljmp
inc
arpl
mov
add
inc
test
dec
xchg
jb
sub
loop
ficomps
in
or
mov
ljmp
rol
push
cmpl
arpl
push
xchg
pushf
pop
leave
jg
movsl
inc
push
sbbb
rcl
push
xchg
dec
in
js
loopne
test
mov
cltd
adcl
loop
inc
dec
pop
repz
pusha
imul
aaa
repnz
jmp
jo
call
pop
ss
es
xchg
int3
pusha
insl
mov
mov
push
bound
push
dec
in
fcoml
es
push
loop
dec
lcall
lret
mov
inc
jae
add
cmp
jmp
daa
std
mov
cmp
xchg
cmp
dec
and
or
sbb
add
xchg
pop
lcall
daa
pushf
leave
jmp
or
cld
cmp
fisubs
cmpsb
mov
stos
xchg
or
call
movsl
loop
dec
push
mov
cwtl
mov
call
sbb
enter
arpl
add
sbb
lods
push
cmp
xchg
cli
sub
jmp
xlat
hlt
mov
gs
addr16
add
lcall
lcall
pop
andb
ds
call
or
jecxz
in
push
jne
jmp
mov
push
xchg
add
xor
stos
and
pop
aas
cmp
inc
sub
out
cmpsl
jecxz
shl
sbb
std
in
popf
out
hlt
out
hlt
outsl
aad
repz
xchg
jns
inc
adc
jecxz
dec
fstps
or
sbb
inc
mov
mov
inc
cmp
out
mov
js
and
mov
adc
or
shrl
push
or
sbb
andb
cmp
jbe
test
lods
lods
aas
test
push
outsb
fld
aas
repnz
data16
or
pop
stos
popa
xchg
xchg
sbb
and
xchg
jp
cmc
cmpsb
scas
push
xor
in
mov
sarb
cmp
rclb
cmp
pop
add
fisubl
xchg
and
jae
xchg
push
scas
pop
add
fs
insb
daa
jo
push
in
sbb
jne
mov
mov
fdivs
mov
int3
gs
and
sahf
pop
mov
push
adc
xorl
xlat
les
std
loop
jmp
jo
xchg
cmp
xchg
xchg
test
sub
push
imul
cmp
push
cmp
pop
dec
cwtl
aas
and
inc
enter
or
and
lea
in
sbb
push
xor
in
andl
mov
sub
ds
leave
mov
jne
mov
test
inc
cld
pop
clc
out
cmp
adc
iret
data16
pop
or
pop
mov
fsts
xlat
scas
fnstcw
out
inc
iret
cmp
sbb
iret
mov
mov
xchg
es
js
xchg
pushf
xor
cmp
or
mov
pop
into
lods
sbb
pop
and
or
aam
jecxz
mov
push
imul
in
lcall
jmp
enter
stos
aaa
xchg
enter
int3
fldpi
mov
iret
das
cwtl
push
jge
ja
sbbl
gs
out
jb
dec
lahf
jne
sbb
adcl
mov
cmpsb
in
pop
adc
xchg
adc
inc
icebp
dec
and
xchg
pop
mov
mov
movl
add
adc
fsubrl
mov
sub
icebp
sub
idivb
xor
pop
jb
sbb
mov
sbb
dec
mov
xor
cmpsb
jno
mov
xor
ret
into
mov
imul
cmp
jg
aad
int3
inc
in
pop
scas
push
xor
addl
xor
and
inc
test
jg
adc
cmpl
cs
dec
jge
xor
jle
aas
stos
lret
nopl
aam
data16
movsl
fnstcw
sbb
aad
push
daa
mov
test
shrl
popa
and
testl
pop
xchg
push
adc
clc
mov
add
sahf
sub
ja
lea
imul
and
cmpsl
dec
jo
pop
lahf
gs
mov
pop
cmpsb
ljmp
add
cmp
inc
lods
jo
push
jbe
loop
rcll
in
jl
add
stos
sbb
imul
xor
sub
mov
out
call
ljmp
adc
cs
and
add
imul
push
inc
xlat
mov
shrb
inc
imul
arpl
jp
or
add
addb
mov
test
xor
adcb
leave
mov
imul
ljmp
adc
lea
xchg
jmp
xor
repz
sahf
rcl
sub
lods
xchg
pop
fmull
movsb
mov
cmc
xchg
jmp
and
mov
or
or
loop
push
cmp
mov
mov
mov
cmp
fistpll
and
mov
jle
call
iret
call
mov
jno
and
adc
xchg
sub
sarb
out
add
int
fisttpl
xchg
fists
addr16
int
ret
jp
in
inc
sbb
shl
andl
or
or
sub
push
and
xor
push
in
fistpll
or
mov
pop
ja
xchg
insb
and
scas
inc
idivb
jecxz
jecxz
mov
xor
orl
dec
pop
lcall
inc
xchg
xchg
cwtl
out
or
mov
in
sarl
ret
sbb
adc
divb
mov
pop
cmp
or
lcall
mov
outsl
imul
push
insb
and
mov
testl
aas
sbb
dec
mov
mov
mov
inc
and
adc
jmp
sti
frstor
sti
mov
adc
test
mov
icebp
pop
cmp
es
inc
repnz
jle
xchg
icebp
sub
inc
sbb
mov
clc
jg
push
bound
fdivrl
adc
outsl
dec
fldt
pop
int
leave
clc
sub
arpl
fmulp
dec
dec
mov
nop
insb
ds
sbb
mov
js
cmc
call
call
mov
ret
dec
rorl
and
cmpb
cwtl
and
and
jge
jl
popf
push
or
mov
lret
push
mov
stos
in
in
sub
cmpl
pop
std
mov
sti
or
inc
push
std
lahf
add
movsb
add
cwtl
mov
scas
mov
xor
lret
shr
jno
inc
or
test
add
mov
pop
mov
scas
mov
sub
push
jecxz
push
dec
lret
xchg
scas
gs
and
mulb
mov
push
lret
fwait
mov
addl
fisubs
arpl
psrld
das
out
cmc
mov
loopne
xor
dec
jl
jmp
cmpsb
cmpsl
rol
rcrl
mov
int3
sahf
cld
je
cmp
ss
xchg
imul
pop
adc
xor
jne
sub
fmuls
ret
push
cmp
cmpsl
adc
test
das
rclb
ret
stos
cltd
aam
subl
dec
jne
pop
adc
cmp
lods
cs
addr16
enter
arpl
incl
mov
add
pop
xchg
ret
jmp
sub
xchg
mov
fimull
sbbl
xor
mov
mov
movsl
jb
shll
in
cli
inc
push
fstenv
pop
pusha
ret
or
outsb
scas
sbb
jge
int3
mov
test
adc
mov
xlat
nop
lods
ret
ds
fwait
gs
nop
mov
add
rolb
inc
or
scas
lods
or
sbb
adc
jg
out
cmpsb
stos
adc
mov
add
pop
lods
cwtl
movl
sbbl
dec
mov
push
sarl
xchg
add
mov
push
inc
in
mov
out
into
andb
mov
incl
sbb
cli
in
and
adc
jo
iret
insl
sbb
ret
fmull
stos
imul
je
popf
frstor
jno
xor
sbb
shlb
js
pop
jmp
in
xor
mov
dec
add
push
sbbl
dec
movsb
adc
pop
in
xchg
and
lret
cmp
push
outsl
jno
clc
xchg
lods
fists
out
mov
mov
mov
cmpsl
aad
xchg
in
test
call
inc
pop
bound
add
sub
mov
or
ja
cmpsl
jmp
mov
iret
out
push
cltd
mov
lock
fists
testb
pop
les
mov
repnz
loope
jnp
pop
std
ret
xchg
inc
adc
add
pop
loope
jne
ret
in
pop
mov
dec
sub
push
fldl
int
scas
ja
js
pop
mov
add
scas
mov
addr16
nop
jecxz
inc
mov
dec
sub
popa
pop
rcr
fdivl
xchg
fidivs
jmp
rcrb
ds
jbe
pop
mov
jnp
mov
ljmp
pop
icebp
and
xchg
addb
dec
sub
div
jl
je
nop
mov
mov
xchg
out
pusha
xchg
repnz
jmp
xor
xor
in
mov
mov
or
jb
push
xchg
imul
sti
decl
cltd
xchg
negb
ret
mov
negb
popf
cmp
sub
pop
add
mov
xor
mov
xchg
ficomps
ds
sahf
fadds
mov
test
rorb
popf
push
ss
shl
popa
xchg
rorl
pop
es
in
cmc
rorl
sahf
stos
shrb
adc
jge
subb
xor
xchg
xchg
fiadds
test
fwait
out
dec
loopne
mov
into
ja
pop
pop
pop
and
dec
clc
pop
jl
roll
jg
xchg
dec
das
dec
mov
inc
and
mov
nop
fidivrs
push
iret
adc
inc
pop
adc
gs
rolb
jecxz
aaa
cltd
insl
jmp
cmpsb
lahf
xor
jecxz
les
es
mov
push
pop
lock
lds
inc
in
sub
jge
sbbb
push
add
mov
ja
xor
xchg
rol
incl
jecxz
mov
add
mov
add
hlt
mov
cli
mov
push
xorl
lahf
ret
sub
inc
aad
sub
lret
notb
pop
cld
adc
inc
ja
jg
xchg
cmp
hlt
pop
inc
xor
sbb
daa
andl
jns
icebp
lcall
mov
enter
lds
roll
stos
out
fadds
loop
or
enter
std
push
out
cld
cltd
jge
fstps
imul
sub
negb
push
pop
and
pop
dec
xchg
jg
lcall
out
inc
pop
pop
cmp
push
mov
mov
mov
mov
fucom
push
loope
out
push
mov
in
int3
int
mov
sub
push
ja
and
nop
icebp
hlt
lods
xchg
xchg
sbb
inc
xchg
sbb
mov
leave
inc
push
and
and
mov
ret
push
mov
insl
mov
in
jns
lret
jmp
sub
push
imull
xor
loope
sbb
dec
pop
sti
jae
mov
int
vpmovm2w
adc
inc
test
add
sbb
cs
test
in
ret
cwtl
and
fs
fdivs
enter
mov
js
pop
xchg
lock
jno
jne
js
or
int3
outsl
inc
jae
aam
sub
test
sbb
cmp
movsb
outsb
int
cmp
fwait
or
xchg
push
jb
xchg
jae
enter
pop
inc
pop
mov
outsb
push
sbb
jmp
repz
mov
loop
push
mov
icebp
ret
je
ficoml
sbb
dec
push
inc
mov
cmp
rclb
mov
push
push
lods
xor
mov
fdivl
add
push
mov
dec
pop
ja
jae
xchg
jo
add
test
sbbb
xchg
mov
rorl
mov
jmp
pop
scas
fldt
fstps
cmp
xor
lss
fisttps
xor
stos
mov
imul
stc
imulb
js
mov
add
ljmp
mov
notl
xor
push
mov
dec
das
adc
gs
pop
les
sub
xchg
jmp
dec
int
or
xor
test
mov
in
mov
ret
sahf
xchg
sbb
aad
sbb
gs
fists
push
vminss
loope
out
push
lret
xlat
cld
push
dec
out
inc
int3
dec
cmp
sbb
incl
movsl
jg
add
dec
rcl
sti
add
push
fistpll
pop
sti
jecxz
dec
or
mov
and
es
sbb
xchg
in
push
xchg
mov
test
enter
and
pop
je
xchg
ds
push
xchg
dec
rcrb
push
mov
jp
push
xor
xchg
fwait
dec
arpl
stos
icebp
movsb
and
aad
xchg
fwait
lcall
lods
and
sbb
ljmp
outsb
popf
aaa
xchg
ljmp
mov
gs
daa
add
sahf
xchg
fistpll
and
jp
pop
ss
outsb
add
movsb
jno
data16
fisubl
mov
xchg
pop
or
xchg
xor
or
bound
xor
ret
pop
lods
dec
jmp
inc
fucom
adc
sub
aad
inc
dec
add
xchg
pop
lcall
mov
adc
add
jecxz
movsl
popf
push
and
aaa
mov
mov
ficompl
mov
cli
in
or
mov
mov
idivb
adc
lret
shlb
sub
pop
and
in
sbb
aaa
in
push
fisubl
pop
xchg
cltd
gs
pop
in
xchg
xchg
test
add
fnstenv
negb
aad
es
pop
nop
insl
scas
or
into
xchg
scas
jg
add
mov
dec
mov
clc
push
push
daa
adc
lcall
lods
pop
xchg
lods
cmp
sub
repnz
movsb
xorl
test
sbb
fidivs
into
lock
pop
imul
mull
rorb
dec
dec
and
nop
pushl
and
sub
in
in
push
xlat
out
aas
test
out
lods
cmpsb
mov
adc
popa
add
or
fildll
cs
popa
dec
ficoms
jb
pop
in
sbb
subl
adc
sub
ljmp
fisttpl
or
and
fidivl
sub
je
cli
ret
je
popa
sub
icebp
dec
mov
pop
xchg
scas
repnz
cmpb
fists
mov
jl
jl
jne
dec
fwait
sarb
sbb
sbbb
pop
mov
std
ja
push
xchg
push
mov
mov
lods
lds
iret
pop
mov
and
push
hlt
stc
adc
in
mov
insb
add
add
add
lcall
pop
push
leave
push
add
aam
lock
sbb
sub
insb
or
dec
ret
nop
lret
dec
pop
out
sti
sub
sahf
sub
inc
clc
cmp
cltd
jne
sbb
push
push
xchg
mov
add
add
jge
fidivl
pop
jae
imul
ljmp
lret
insl
xor
or
imul
aaa
andb
push
and
incl
adc
mov
xor
out
inc
lds
push
mov
movsb
and
pop
push
mov
push
incl
pop
fistpll
in
dec
imul
xor
das
adc
dec
mov
aas
js
int3
mov
and
movsl
ljmp
push
cmp
dec
imul
cmp
mov
mov
mov
in
cmpsb
xor
ja
mov
xor
add
cltd
mov
and
pop
and
fidivrs
outsl
push
lret
arpl
sbb
cmp
mov
int
ficompl
jp
mov
cmp
mov
push
mov
test
add
sub
aad
jecxz
jbe
repnz
jp
xor
fwait
pop
outsl
cli
jg
inc
lea
lcall
inc
lahf
dec
stc
xchg
jne
loope
mov
aad
addr16
add
stos
ss
and
mov
outsb
scas
scas
push
pop
jae
arpl
mov
outsl
lcall
imul
or
fildll
sarl
xor
jnp
cmp
mov
int3
jbe
add
fcmovnb
stos
jae
cmp
fwait
and
dec
in
cmpsb
inc
adc
jns
xchg
sub
push
std
and
js
out
sub
pusha
pusha
fcmovb
inc
fwait
test
pop
add
sub
faddl
lds
cmp
ret
out
ljmp
and
insl
scas
push
pusha
xchg
dec
inc
inc
ss
add
xchg
jns
mov
aad
mov
adc
mul
bound
pop
in
imul
pop
dec
cmp
xlat
cmc
jg
mov
inc
pop
fs
push
dec
inc
shl
or
add
ret
cld
repz
fdivr
sarl
adc
sub
loope
jne
mov
mov
xchg
cli
jmp
stos
les
cmpsl
js
and
xor
test
push
sahf
pop
push
repnz
mov
inc
cmpsb
es
hlt
pop
xchg
out
fs
jne
lds
mov
sarl
jge
mov
and
push
jecxz
sbb
shrb
scas
lea
imul
leave
cld
sbbb
rolb
xor
mov
ds
sub
je
sti
fbstp
pop
out
sbb
cmpb
iret
xchg
cmc
call
mov
or
add
push
loopne
adcb
adc
jo
xlat
pop
push
stc
insl
adc
lods
test
mov
mov
mov
inc
test
or
mov
cmc
les
call
in
xor
lods
sbb
add
stos
insl
and
call
mov
pop
in
sahf
mov
sbb
jns
int
in
xor
push
mov
xor
sbb
pop
decl
inc
sub
aam
adc
cmpsb
lret
ss
sbb
dec
int
fs
ret
add
cmpsb
sub
inc
push
jae
leave
cltd
incb
loopne
bound
mov
daa
or
movl
add
jg
cmp
pop
adc
fisubrl
xchg
xor
ds
sub
and
cwtl
cmp
fdivrs
or
movsb
incb
mov
xchg
inc
push
adc
and
xchg
push
fsts
std
xor
lret
es
mov
add
mov
xor
mov
daa
cli
sub
mov
pop
iret
andl
jmp
xorl
xor
and
jl
inc
insb
dec
push
sub
fldenv
inc
mov
xchg
cmp
sub
pusha
aam
xor
fldl
clc
outsb
push
and
pusha
xchg
jbe
sti
cmp
mov
inc
cwtl
jb
scas
insl
inc
adc
shlb
adc
pop
stos
lcall
dec
push
and
cmc
test
mov
icebp
mov
shlb
xchg
add
jg
outsl
insb
in
inc
cld
mov
bound
pushf
sub
cmp
or
sub
cwtl
inc
lret
sub
mov
xor
cmpsb
inc
out
insl
push
mov
or
add
mov
flds
mov
or
sub
mov
inc
jne
cwtl
loope
jecxz
push
ljmp
lret
loope,pn
notl
or
addr16
jb
aaa
inc
push
sub
les
dec
outsl
pop
pop
jae
in
fcoml
dec
fidivrl
js
ret
icebp
in
clc
mov
mov
push
aaa
jp
hlt
cmc
jle
out
xlat
adc
xor
dec
ljmp
jmp
cmp
arpl
mov
roll
mov
and
mov
loope
rcll
je
lahf
push
pop
mov
jne
fldcw
pop
cmpsl
inc
mov
jle
mov
dec
sti
pop
sub
adcb
mov
mov
les
push
mov
ret
std
push
gs
or
int
pop
jl
mov
sarb
add
jnp
xchg
fsts
popa
cli
pop
cwtl
xchg
mov
daa
out
mov
pop
and
cmpsb
jno
adc
test
cmc
pop
xor
fidivrs
mov
jae
movsl
add
adc
addb
adc
fcoml
out
mov
jmp
push
pop
jge
lret
in
test
cltd
cmp
push
mov
add
and
xchg
out
add
sbb
mov
xlat
sub
push
dec
pop
scas
mov
inc
lcall
rorb
pushf
lods
subb
mov
inc
imul
aam
dec
cld
sbb
sbb
xor
add
test
push
jae
orl
lahf
dec
sbb
cwtl
data16
xchg
jae
cs
jecxz
pop
sarl
cltd
test
jno
mov
iret
jg
loope
add
xor
lret
lahf
shll
jecxz
aad
cmpsb
adc
jmp
outsl
daa
sbb
rcl
mov
dec
cmp
jae
icebp
aad
dec
jecxz
aas
and
inc
sub
sbb
addr16
inc
into
addr16
jl
shlb
mov
sahf
nop
pushf
sub
lea
stos
pop
mov
out
adc
data16
jg
or
call
pop
loop
dec
mov
mov
loop
lea
aaa
xchg
sahf
inc
sub
enter
rolb
jl
out
mov
lds
mov
or
es
lods
sub
les
mov
jle
mov
dec
add
jbe
inc
inc
push
data16
or
js
xlat
fmuls
mov
and
stos
out
ss
movsb
and
sahf
dec
leave
aad
push
loop
mov
mov
loop
ret
jg
das
cmp
jae
loop
daa
mov
loopne,pn
movsb
lea
cmpsl
les
push
adc
es
lcall
xor
lcall
or
fcompl
in
xorb
movsb
xchg
addl
dec
push
arpl
data16
mov
pop
inc
pop
ljmp
insb
mov
loopne
test
bound
lea
outsl
dec
rol
adc
cmp
push
and
pop
out
inc
and
and
rclb
movsl
jbe
or
pop
inc
fstl
jge
std
ret
test
into
adc
cld
daa
pop
adc
jb
pop
pop
jo
nop
add
dec
inc
lock
sub
sti
pop
lcall
pop
ds
mov
xor
inc
mov
rorl
pop
jb
inc
mov
aam
pop
inc
xor
bswap
sbb
jo
xlat
jp
dec
pushf
jge
movsl
js
fs
sub
adc
es
mov
jne
cli
dec
cmpsb
js
dec
cmpsb
adc
sub
nop
dec
loopne
rcr
or
push
add
cmp
pop
loop
sub
std
int3
loope
movsl
sbb
test
jnp
pop
sbb
int
push
lcall
fmul
push
lds
sub
mov
xor
mov
jmp
pop
popf
jg
imul
adc
add
pusha
js
dec
push
jno
call
adc
sub
cmp
cmpsb
mov
incb
mov
jp
mov
sbb
movsb
sub
decb
mov
add
loop
adc
pop
sbb
mov
dec
iret
cs
out
test
push
or
dec
fdivr
stc
inc
outsl
js
roll
shll
or
and
fsubr
in
mov
dec
mov
fstl
out
lods
cmc
pop
xchg
outsb
repz
inc
or
cwtl
fsub
push
mul
pop
shr
cwtl
lahf
mov
pop
movsl
or
jo
data16
mov
aaa
out
adc
imul
inc
xchg
sub
xor
out
mov
dec
push
in
pop
push
pop
rcr
sbb
mov
je
andl
ljmp
sbb
in
mov
lods
xchg
push
pusha
adc
jle
in
fimull
das
mov
xor
mov
sarl
hlt
sub
jmp
outsl
mov
movsb
ds
outsl
dec
rol
aad
mov
jmp
cld
xchg
fistpll
pop
mov
insl
cs
gs
cmp
inc
push
fildll
mov
in
out
cmpsb
pop
push
and
sbb
aas
sub
pusha
fwait
pop
int3
cmp
dec
popa
mov
xchg
add
loop
jmp
jae
xchg
push
dec
xor
aam
pop
xchg
inc
shl
jns
pop
pusha
pop
cmp
inc
sbb
lahf
or
out
add
icebp
add
incl
xchg
xchg
stos
jecxz
xchg
ret
mov
mov
push
sub
pushf
xchg
push
shlb
int3
add
jp
lcall
mov
mov
aad
push
mov
lret
inc
out
sbb
adc
mov
fs
pop
mov
mov
outsl
clc
push
test
mov
mov
out
sbbb
adc
out
sub
or
ss
dec
sbb
or
lret
sbb
aam
cwtl
repnz
scas
aas
in
xor
pusha
popa
xchg
xchg
jmp
or
push
sbbl
pop
mov
lret
js
and
add
test
je
xlat
sbb
mov
out
popf
mov
scas
jae
lock
fwait
fs
mov
jne
ja
mov
lds
stos
fdivs
xor
cltd
pop
lret
iret
mov
xchg
or
cmp
jmp
fdiv
cmp
icebp
dec
repz
das
fdivs
cwtl
lds
xlat
ss
pop
xchg
cmp
push
push
mov
adc
and
cld
sbb
fsubs
adc
mov
pop
cld
bound
insb
add
bound
mov
bnd
bound
sbb
es
pop
lcall
inc
cmp
inc
pop
xchg
jge
into
cmc
add
out
dec
jno
push
das
sbb
pop
lret
div
filds
cmpsl
enter
mov
dec
xchg
cwtl
dec
imul
jge
jg
push
enter
inc
and
stos
dec
movsl
jmp
pusha
aas
push
ja
outsl
and
out
mov
pop
lds
adc
les
or
cs
sbb
test
pop
sub
stos
cmp
add
test
add
adc
ret
fcmovu
adc
xor
mov
pop
jno
inc
insb
cs
repz
out
ror
into
cmpb
jae
inc
inc
imul
sbb
dec
faddl
xor
mov
ds
call
into
mov
out
xor
js
sub
mov
int3
dec
mov
xor
mov
mov
movl
sub
mov
adc
jle
pop
mov
lock
clc
lds
push
inc
sbb
aaa
ja
lret
lret
mov
cmpsl
adc
out
mov
aas
jmp
icebp
inc
or
shrb
shr
sbb
fidivl
loop
jnp
lahf
sub
adc
and
xchg
add
mov
jecxz
dec
jns
or
test
sbb
cmp
mov
lods
mov
or
xor
or
mov
mov
leave
into
jp
test
lds
inc
dec
mov
push
mov
rorb
into
jnp
stos
xor
inc
sub
cmp
pop
mov
inc
mov
movsl
pop
add
ret
push
ljmp
dec
ret
test
sub
mov
imull
xor
mov
xchg
push
add
push
clc
out
sub
jge
adc
sub
sbb
push
out
orb
xchg
dec
mov
cmpsb
xor
cmp
ja
add
pop
in
std
cld
jecxz
sbb
pop
sbb
in
mov
push
lods
mov
sub
mov
and
mov
jg
repz
xor
fnstsw
jo
test
push
jge,pn
mov
ror
mov
lods
xchg
push
popf
dec
fadds
ret
sbb
adc
pop
sahf
xchg
sbb
inc
add
mov
cmp
pop
into
sahf
aas
push
cmpsb
cmp
fucomip
cmp
push
mov
lcall
jecxz
xor
scas
repnz
enter
clc
pop
pushf
mov
mov
xchg
fbstp
es
jno
xor
shrb
cmp
add
bound
xchg
cmp
inc
xchg
push
push
fldcw
js
dec
xchg
push
lods
lcall
xor
xor
and
jne
xor
cmp
lret
sarb
lahf
pop
or
xchg
ret
test
frstor
stos
sbb
jns
push
lock
or
jecxz
push
mov
fsts
test
or
rolb
cmp
or
test
idivl
addr16
xor
mov
icebp
cld
pop
cs
pop
int3
dec
inc
mov
lods
xchg
ja
push
insl
je
in
fdivl
add
and
sarl
xchg
push
jo
mov
push
dec
pop
in
xor
ret
pop
mov
dec
add
or
inc
test
in
inc
mov
pop
lcall
aam
xchg
cs
out
mov
stos
imul
lahf
pushf
xchg
dec
adc
cmpsl
ljmp
sarl
dec
push
push
jo
fnstenv
mov
gs
enter
frstor
mulb
jno
or
xchg
jae
pop
cmp
jg
cli
xchg
out
outsl
xchg
outsb
and
call
dec
dec
sti
sti
cmp
mov
xchg
xchg
push
lods
imul
stos
icebp
fisubrl
inc
imulb
pop
movsl
mov
fsubl
push
scas
xlat
cmpsl
xor
jne
ja
inc
mov
push
movsb
xor
out
sub
mov
xchg
xchg
cmpsl
mov
mov
cmp
dec
test
loope
cmc
imul
lret
jge
jmp
pushf
sbb
jo
mov
fsub
mov
add
mov
dec
inc
cli
sub
in
iret
dec
addl
paddw
lock
adc
mov
int
andb
out
lret
in
and
shl
pop
push
mov
sub
sbb
and
in
lret
lcall
pop
inc
pop
sti
inc
xchg
jmp
push
xchg
lea
jne
loope
int3
xorb
cmp
pop
or
lret
cmp
cli
sub
or
ds
or
mov
ret
divl
loop
pop
mov
mov
les
inc
mov
imul
insb
es
sbb
pop
loop
pop
stc
rolb
sbb
data16
hlt
data16
cmp
fldenv
lock
ret
push
in
roll
shll
movsl
imul
mov
je
sahf
push
mov
mov
mov
jle
mov
push
mov
or
idivl
or
filds
std
sbb
stos
scas
daa
jae
ret
movsb
loopne
hlt
xor
mov
lahf
and
sbb
fidivl
cmp
jo
push
dec
les
data16
stc
jae
dec
imul
jmp
add
and
xchg
sbb
das
dec
dec
cmp
ficomps
pop
mov
or
repnz
push
push
scas
mov
vmwrite
xor
dec
test
add
es
or
jb
mov
ss
lret
jmp
shl
jne
push
pop
cld
cli
push
shll
cmp
push
test
fnsave
cs
xlat
movsb
add
jo
mov
pop
xlat
mov
aam
fcmovnbe
adc
lcall
ja
xchg
out
mov
es
or
sbb
int
inc
loope
pop
leave
pop
data16
mov
adc
mov
inc
add
mov
cwtl
pop
aaa
dec
imul
sahf
sub
mov
xor
scas
cltd
add
jnp
stos
je
lods
mov
scas
aam
pushf
mov
popa
cs
sbb
addr16
lds
orb
mov
sahf
scas
inc
movsl
xchg
js
fnsave
xchg
call
scas
fldt
out
popa
xchg
ret
aad
shlb
cmp
bound
inc
outsl
sbb
mov
nop
test
ret
xchg
push
insl
insl
and
push
mov
sbb
inc
test
jge
aas
sub
out
jae
js
mov
jge
frndint
repnz
and
cld
mov
sbb
inc
xchg
fbstp
test
ljmp
mov
sti
add
push
ret
incl
push
insb
into
les
inc
loop
jnp
sti
adc
pop
mov
lahf
or
pop
bound
pop
xchg
push
and
jp
hlt
js
inc
pushf
outsb
inc
push
lret
data16
and
jns
imul
sub
ja
push
dec
das
iret
movsb
add
fs
pop
or
addr16
inc
clc
or
push
test
adc
fsts
loop
inc
xchg
dec
pop
dec
aaa
xor
std
call
push
ja
bnd
mov
push
jno
aas
jb
sub
cmp
gs
fsts
jle
hlt
lea
add
lods
icebp
fs
scas
fwait
test
pop
fstl
iret
lods
int
iret
pop
in
sbb
or
xchg
fstps
lods
out
je
push
inc
xchg
int
and
jp
pop
sarl
jb
jo
xchg
adc
std
xchg
repz
cmc
add
lds
fidivs
xor
mov
cmpsb
gs
jle
xchg
or
adc
in
sub
data16
imul
or
or
das
mov
jmp
xchg
jge
fmull
sbb
leave
add
pop
or
orl
sahf
jns
frstor
fiaddl
das
mov
push
mov
add
mov
xchg
icebp
mov
ret
inc
xor
shrb
cmp
cmp
or
jno
adc
xor
ja
lods
cwtl
xchg
clc
jae
pop
push
std
fisubrl
sbb
xor
cmp
xchg
out
in
lock
dec
std
inc
jg
jmp
out
mov
fld
pop
inc
data16
mov
rorl
add
push
push
dec
in
inc
jne
add
adc
or
pop
jns
sub
or
aaa
xor
adc
out
loop
mov
sub
xchg
orl
push
inc
cmc
into
cmpl
int3
incl
adc
out
call
repnz
mov
les
sub
lret
rorl
sarb
mov
xor
push
bound
inc
aam
rcrl
xchg
fwait
cld
jnp
mov
jecxz,pn
and
stos
lods
ds
scas
sub
cli
movsl
xor
add
inc
test
ljmp
and
mov
popa
pop
add
stos
dec
pop
mov
mov
inc
xchg
mov
insb
mov
rolb
loope
bound
push
cwtl
xchg
and
arpl
adc
out
lret
loopne
cmp
or
repz
jae
sarl
sub
lret
sub
in
std
lods
xchg
sbb
xor
lret
outsb
rorl
xchg
cmp
fdivrl
mov
xlat
mov
dec
inc
mov
bound
or
dec
mov
paddb
hlt
add
cltd
fldt
aas
sub
das
push
movsl
das
mov
into
xorl
aaa
cmp
sub
cmp
xor
arpl
cwtl
xor
test
push
adc
jae
mov
das
dec
in
push
or
sub
pusha
fadds
mov
push
jno
jmp
mov
addr16
push
push
xor
ljmp
loop
cmp
pop
cmp
xlat
ss
pop
mov
mov
jo
ror
dec
pop
lcall
int
sbb
sti
push
mov
imul
rolb
pop
cmpsl
repnz
jecxz
add
xchg
sub
xchg
add
cmp
mov
adc
insb
stos
add
push
cwtl
test
jg
inc
pushf
push
in
mov
xorb
sbb
ret
mov
nop
notb
fsubr
data16
mov
push
jl
jo
jb
pop
pop
mov
iret
into
sbb
pop
aad
fidivrl
xor
mov
add
clc
lds
test
jns
adc
jns
loop
outsb
mov
or
aam
or
push
fldl
xchg
jge
bound
mov
jecxz
popa
clc
lock
popf
push
ftst
lret
mov
decl
or
sbb
push
shrl
sub
pop
jp
je
decb
lahf
dec
mov
ss
or
lret
jno,pn
and
adc
dec
sub
adc
cmpsb
js
or
add
mov
loope
inc
mov
push
mov
jecxz
and
add
pushf
push
insl
adc
scas
pop
jp
or
stos
sbb
out
or
repnz
dec
lret
xor
jecxz
mov
xor
sub
fimull
hlt
clc
mov
dec
sub
mov
mov
stos
xchg
pop
xor
sub
repnz
pusha
sub
in
lods
into
mov
cmp
push
dec
rcrl
xchg
push
out
or
sbb
stc
mov
cltd
mov
adc
psubq
mov
inc
sbb
out
mov
ds
popf
mov
fs
jb
xchg
insl
sub
add
add
mov
inc
and
lahf
xor
xchg
les
je
in
adc
xor
push
fildl
lret
popl
idivb
addr16
int3
bound
pusha
inc
pop
loope
imul
outsl
fwait
iret
gs
add
xchg
mov
data16
lret
sahf
lods
mov
lahf
shlb
mov
and
out
sbb
lret
out
fmuls
mov
xor
xchg
push
or
lea
cli
mov
xor
sub
cmp
push
scas
pop
mov
sahf
dec
and
popf
rclb
push
jecxz
sub
arpl
ss
mul
cmp
or
lahf
jp
mov
cld
inc
adc
sub
or
add
roll
ss
mov
insb
icebp
popf
push
cwtl
add
iret
inc
pop
xor
or
mov
pop
mov
scas
lret
cwtl
std
dec
pop
push
push
pop
and
add
movsb
call
jne
out
dec
ret
sbb
ljmp
cltd
sub
adc
cmp
jp
mov
and
xor
lret
xchg
aaa
sub
pop
insb
das
cmp
popf
push
adc
adc
aas
xor
fsubs
lahf
bound
shll
inc
arpl
xor
mov
stc
xor
and
lcall
mov
cmp
push
popa
aam
or
mov
pop
inc
cmpsb
mov
jo
xchg
int
lcall
xor
pop
mov
adc
gs
cltd
dec
cld
lods
fbld
subb
jae
mov
mov
out
mov
loop
inc
sbb
iret
mov
mov
cmp
xchg
push
and
dec
jle
repnz
mov
dec
push
insb
insl
pop
cmp
push
mov
iret
cmpb
test
mov
push
add
lock
lcall
push
hlt
pop
jmp
inc
popa
inc
fucomi
movsl
leave
and
adc
sbbb
sub
pushf
or
jbe
adc
outsb
ret
mov
jecxz
ficompl
fs
jg
sti
sub
jo
mov
and
jae
daa
ljmp
in
push
daa
popf
das
test
jne
repz
pop
mov
and
xchg
pop
andl
fcoms
lret
xorl
leave
fisttpll
adc
cmpsl
push
xchg
dec
fisubrs
repnz
and
inc
mov
lret
jno
rcrb
xchg
and
inc
daa
jg
cmp
and
cmpsl
pop
jl
cld
add
or
cmp
cs
fldl
mov
mov
flds
sub
lcall
in
popf
out
sahf
call
repz
adc
add
mov
stc
and
pop
cmp
filds
push
pop
cs
jb
and
loopne
aam
or
outsb
rolb
push
mov
lods
out
inc
jmp
cwtl
xorb
cmp
inc
movsb
pop
jnp
dec
daa
cmpsl
mov
aas
loopne
xchg
xor
insl
or
cmpsl
into
cmp
test
roll
or
cmp
and
stos
sti
gs
mov
in
mov
mov
sbb
xchg
jo
ljmp
insl
ja
cmpb
cmp
xlat
in
mov
fldenv
idivl
and
fstpl
not
or
or
hlt
jge
inc
sbb
aaa
loope
out
and
jmp
mov
in
imul
push
test
popa
fldt
sbb
jnp
add
mov
addr16
and
dec
aad
out
push
out
cmp
lret
sarb
adc
jmp
pop
mov
stos
bound
inc
arpl
addr16
inc
inc
mov
jae
mov
sahf
push
and
repz
sahf
xor
jl
mov
and
imul
loopne
xchg
fidivrl
cltd
loopne
and
push
mov
lock
adc
dec
out
scas
push
mov
nop
add
or
jbe
vmaxss
pop
pop
fbstp
pop
sbb
pop
stos
dec
addr16
jmp
adc
in
fistpl
push
ret
sub
mov
and
ljmp
std
jne
jne
dec
test
dec
stos
inc
mov
scas
xor
dec
jae
lock
aas
xor
hlt
pop
mov
adc
pop
jbe
ficompl
jmp
mov
mov
int
je
xchg
jmp
jp
pusha
sub
pop
fildl
pop
sub
fmul
ss
je
dec
pop
pop
lret
sub
inc
cltd
loope
ja
shrl
popa
mov
out
jns
loope
ret
inc
push
xchg
cmp
scas
mov
push
mov
data16
push
jmp
adc
push
aaa
lds
ss
pop
cmp
push
mov
push
aam
jb
mov
mov
sub
add
dec
lcall
movsl
inc
jno
sbb
iret
adc
gs
enter
push
movsb
or
pop
lret
jmp
cltd
push
xor
arpl
add
ffree
push
ret
in
mov
icebp
jno
pop
mov
dec
jp
xchg
cmovb
cmp
sbb
dec
sub
and
mov
ret
or
les
out
mov
fs
adcl
add
mov
mov
push
xchg
loopne
scas
add
fldl
or
jo
rcrb
popa
xchg
mov
cmp
pop
insl
add
lds
mov
mov
jle
jbe
out
mov
jg
sub
push
adc
jnp
fwait
jb
fidivs
leave
aam
mov
mov
jle
iret
push
mov
sbb
xchg
sbb
mov
das
das
inc
jp
add
mov
cld
mov
pop
mov
outsb
mov
das
hlt
inc
xchg
stc
cmp
je
cmpsb
inc
sub
pusha
xor
repz
bnd
rcll
insl
aas
sti
fwait
cmpb
mov
push
jae
lds
add
adc
pop
add
lods
das
xor
js
movsl
push
aaa
lret
in
call
and
pop
cs
push
xor
jmp
push
shll
xchg
xchg
ds
pushw
out
inc
jp
mov
xchg
jg
mov
push
test
je
enter
add
xor
cmp
xchg
mov
rolb
or
cmp
push
cli
xor
lock
frstor
mov
jle
sbb
cltd
hlt
cmpsl
icebp
leave
and
loop
mov
push
retw
mov
test
lret
mov
insl
es
out
or
or
xor
out
jbe
nop
sub
add
adc
dec
sbb
or
rcrb
dec
push
bound
mov
jmp
sub
sbb
cltd
jb
push
xchg
mov
mov
jg
and
mov
mov
jl
les
jns
xchg
std
dec
jnp
pushl
or
insl
arpl
les
inc
cld
sbb
mov
jae
xchg
sub
mov
lea
mov
sbb
movsl
scas
push
inc
xor
pop
leave
outsl
xchg
inc
xlat
aas
icebp
dec
dec
fsubrs
sbbb
xchg
lds
rclb
mov
or
ljmp
negb
xchg
jno
out
in
sahf
ret
movb
out
aad
es
inc
and
adc
xor
ljmp
jge
ficoms
xchg
sbb
jge
pusha
je
jo
jmp
out
cmp
sub
jns
sub
add
cmp
cwtl
pop
add
mov
push
jnp
push
xchg
pop
dec
add
xor
xchg
test
jecxz
sub
iret
sub
pop
jns
in
xchg
add
dec
pop
ret
xchg
add
and
mov
cmp
fnsave
add
scas
inc
adc
int
fidivrl
cmp
das
xchg
es
jmp
sti
mov
dec
or
fldl
insb
cmp
cs
paddusw
movsb
ljmp
enter
dec
dec
inc
dec
sbb
adc
xchg
lret
fcmovnu
mov
jbe
xor
jmp
lods
scas
imul
incl
and
scas
and
jne
jg
leave
out
inc
mov
ficompl
mov
pop
dec
pop
test
jo
mov
mov
push
insl
add
leave
xor
jmp
mov
sar
leave
lock
push
cli
aam
mov
or
mov
adc
in
mov
cwtl
jg
mov
jl
push
sbb
bound
pop
mov
mov
pop
fdivrs
clc
out
mov
test
adc
xlat
int3
sub
pop
dec
cmp
xor
push
jl
push
loop
mov
pop
outsl
xchg
mov
rorl
hlt
pop
aaa
mov
into
rcl
or
xchg
pop
pop
mov
inc
repz
xchg
loope
cmp
pop
xor
mov
cmp
adc
call
adc
sub
mov
lcall
cmp
nop
scas
mov
inc
mov
push
ja
mov
sarb
fcoml
xchg
or
in
ret
divl
mull
pop
xchg
fwait
cmp
rcl
cmp
repnz
xor
pushf
rolb
ja
mov
adc
sarl
hlt
pop
cltd
jae
xchg
cmp
roll
mov
into
cli
jmp
sub
in
lcall
sub
mov
outsb
rclb
movl
movsl
sahf
inc
cmp
add
mov
cmpsb
test
pop
or
daa
adc
cmpsb
cmp
or
loopne
repz
pushf
dec
pop
xchg
pushf
adc
cmc
dec
sbb
mov
adc
cmp
sub
movsb
xlat
loopne
inc
testb
push
pushf
mov
dec
xor
xlat
adcl
int3
mov
dec
andl
pop
fs
jo
fdivrs
mov
fdivrs
inc
in
nop
fists
or
lret
insb
vunpckhpd
adcb
push
je
adc
fstps
scas
bound
jmp
xchg
loopne
dec
adc
sub
ss
cmpsb
push
ret
push
mov
xchg
pop
push
movsl
jmp
cmp
xor
adc
xor
or
pop
inc
or
xchg
push
cmp
xor
cli
imul
hlt
jae
jbe
push
mov
jae
inc
pop
aaa
pop
sub
repnz
sbb
xchg
ret
push
fimull
mov
push
inc
mov
loop
adc
jbe
push
sti
pop
fldcw
xchg
fdivr
mov
lods
mov
into
xor
push
jno
xchg
fs
lret
out
cmp
dec
shr
mov
mov
xchg
cmc
flds
cmpsb
mov
xor
jns
mov
test
mov
popf
pop
test
or
adc
cmpsl
iret
cmp
push
xchg
mov
jecxz
call
or
xchg
loope
mov
jp
test
xor
push
in
mov
mov
mov
decl
push
push
fnstcw
into
dec
ficomps
cmp
xor
mov
xor
iret
test
in
mov
dec
or
scas
add
negl
inc
jno
adc
push
pop
inc
cs
fidivrs
sbb
push
loopne
sub
xlat
mov
pop
push
inc
fdivs
or
or
mov
mov
aas
divl
cmp
inc
rclb
sbb
mov
xlat
sub
lret
fnstsw
pop
push
push
nop
xor
orl
xchg
mov
jns
out
add
add
dec
out
cmp
daa
inc
aaa
ret
data16
pop
xchg
push
push
les
push
test
test
fs
incb
mov
sbbb
out
jo
iret
xor
rolb
pop
jnp
cwtl
push
insb
pushf
and
fisttps
mov
push
pop
adc
inc
out
call
movsl
sub
cmpsl
mov
inc
mov
push
mov
in
adc
pop
sub
in
nop
push
mov
data16
jge
fildll
and
int
sarb
add
or
push
mov
inc
push
out
imul
pusha
cmpsb
iret
scas
rorl
mov
sahf
mov
mov
sbb
xor
sub
cltd
jo
hlt
mov
pop
xacquire
mov
scas
mov
inc
popf
std
pop
sbb
test
and
leave
test
imul
hlt
dec
push
inc
cmpl
push
fnstsw
data16
pop
jle
les
jo
inc
mov
fwait
inc
dec
pop
add
jno
jb
xor
inc
cltd
inc
mov
xor
xor
aad
xorb
mov
and
jo
test
ss
nop
mov
lods
jp
and
dec
mov
sbb
aaa
out
js
mov
fstpt
out
cwtl
repnz
cmp
es
mov
jle
fstpt
or
nop
pop
shlb
pop
or
popf
or
xor
imul
ljmp
push
xor
test
xor
dec
aaa
adc
movsb
lahf
in
dec
adc
sub
and
push
adc
pop
jnp
adc
mov
add
add
pop
aaa
and
pop
adc
and
inc
push
pop
icebp
pusha
leave
les
jmp
push
jb
dec
xor
adc
loope
cld
mov
cmpsl
jnp
mov
dec
cld
or
dec
jp,pn
lcall
lods
jb
ss
outsb
sub
jo
shrl
push
lock
int
jle
sbb
and
sahf
dec
enter
mov
dec
lcall
pushf
mov
fnstsw
dec
xchg
std
push
dec
push
mov
jnp
pop
xchg
mov
dec
test
sub
pop
out
push
sub
fwait
popa
lds
add
lds
out
jge
sbb
cmp
and
test
push
arpl
and
mov
jb
push
std
inc
mov
jmp
outsl
jae
sub
std
push
pop
dec
and
decb
cmp
jmp
cwtl
mov
inc
cs
xchg
out
pop
jae
fcmove
mov
lea
sbb
mov
mov
fnstsw
push
outsb
test
cltd
pusha
in
test
fstp
jnp
out
pop
rclb
pop
call
out
jne
hlt
ret
mov
push
ss
jae
negb
push
ret
stos
push
jecxz
xor
call
stos
mov
repz
shrb
cmp
das
in
mov
ljmp
mov
mov
push
jge
mov
or
fsubl
pop
or
jae
mov
or
xchg
xchg
dec
cli
and
sbb
push
popf
pop
and
sub
in
add
subl
push
fdivrs
mov
das
ss
and
pusha
cwtl
mov
inc
jns
mov
mov
test
fs
adc
scas
int
insb
stos
gs
xor
loop
call
jge
xchg
shl
loope
cmp
es
push
cmc
cltd
push
scas
lret
cld
cmpsb
mov
imul
mov
imul
shlb
orl
xchg
pop
test
jb
dec
dec
pop
mov
ds
test
sarl
imul
sub
repz
sbb
mov
jae
mov
call
movsl
rol
jno
jl
mov
and
pop
faddl
test
mov
add
push
jge
test
jmp
pop
bound
cs
xchg
dec
lods
mov
xor
xor
fistl
sub
mov
push
jb
adc
mov
add
and
leave
shr
adc
xor
in
xor
cmp
in
xchg
xchg
xchg
sbb
pop
jns
icebp
sbbl
imul
bound
pop
mov
mov
cmp
adc
pop
das
lds
adc
ret
jbe
dec
jecxz
rclb
pushf
and
jmp
out
xor
push
mov
fiadds
mov
push
nop
push
xchg
xlat
es
xchg
outsl
in
mov
subl
mov
bound
dec
dec
bound
out
fdiv
mov
xlat
ja
fdivs
cli
pop
mov
mov
mov
mov
push
in
dec
sbb
cmp
in
add
fcom
out
xor
pop
fiaddl
add
lcall
mov
dec
pop
test
int
enter
inc
mov
lea
test
xchg
out
push
xchg
push
adc
aaa
mov
cs
rclb
addr16
fdivrl
aaa
xchg
iret
fs
shr
shufps
dec
enter
rcll
sub
and
mov
pop
pop
push
aaa
add
lret
cmp
jg
inc
leave
das
sar
out
jo
sti
xchg
sub
push
pop
jnp
fists
loope
ret
scas
pop
mov
jge
push
mov
sti
es
clc
jne
aas
ds
mov
repnz
outsb
mov
xor
push
sbbb
outsl
roll
nop
in
test
in
fbld
pop
push
lret
and
test
and
gs
sahf
lods
aam
cwtl
jecxz
sub
lcall
mov
aaa
jmp
xchg
push
pop
pop
sbb
push
dec
dec
pop
addb
xchg
mov
adc
subb
jbe
mov
sbbb
scas
sti
ja
ret
sub
mov
das
jmp
fsub
fnstsw
adc
jge
and
psubd
sub
jecxz,pt
pop
fadds
and
pop
xor
jb
jecxz
sub
adcl
xlat
jno
add
jno
sbb
xchg
or
aas
adc
sbb
push
xchg
jnp
adc
ss
loop
inc
adc
int
dec
cld
mov
scas
std
aaa
into
pop
sbb
jle
adc
mov
scas
aas
aam
je
xor
xor
lods
inc
push
negl
lds
arpl
ss
loop
pop
dec
out
sbb
or
jle
test
cwtl
sub
mov
outsl
loop
mov
xchg
mov
push
nop
adc
fdivrs
inc
push
test
jle
test
icebp
cmpsl
pop
outsb
push
ds
arpl
jno
lds
iret
sub
jae
iret
xchg
sbb
cs
xorl
mov
das
mov
mov
adc
push
pushf
out
insb
fimull
sti
push
xchg
pop
jecxz
out
popf
out
xchg
xchg
mov
sbb
and
clc
iret
les
fcmovnu
enter
daa
xor
in
xlat
inc
inc
xor
sbb
sbb
cmp
shlb
xor
iret
ffreep
inc
popl
jg
jl
mov
cmp
sbb
cwtl
loope
sti
xor
push
out
push
out
dec
lods
mov
inc
movsl
cmp
ds
sub
movsb
cltd
iret
add
xchg
cmp
aad
push
and
and
mov
add
cmc
sub
inc
lahf
les
inc
cmp
sub
dec
lds
cmpsb
addr16
dec
out
dec
js
or
cli
mov
insb
xchg
sub
xor
fsubs
dec
dec
popf
popf
ret
cmp
jmp
add
hlt
stc
cs
imul
cmc
in
mov
jmp
mov
cmc
dec
pusha
daa
sub
mov
sbb
mov
faddl
xor
adc
mov
and
std
lods
inc
dec
xor
lds
mov
mov
mov
sbb
inc
pusha
mov
sbb
inc
and
cmp
shll
sti
push
lods
fmuls
dec
nop
mov
shl
testl
xchg
gs
dec
outsl
mov
data16
cld
jne
call
fsub
pushf
xchg
fidivl
cltd
clc
xchg
xor
cli
inc
xchg
fidivrl
into
lret
push
ret
fnstenv
pop
mov
mov
rcl
aam
mov
mov
arpl
jecxz
push
sahf
mov
xor
scas
addl
and
sub
loopne
mov
xchg
jb
das
sbb
ss
add
mov
jl
jp
mov
rcll
test
mov
pusha
pop
pop
fisubrl
mov
push
aam
push
out
stos
sub
lea
push
mov
scas
shlb
xor
jge
adc
aas
shll
stos
mov
mov
sahf
inc
xlat
notb
and
jo
add
mov
or
stos
das
stc
loope
ja
das
xchg
dec
or
fwait
sti
pushf
pushf
mov
mov
inc
push
push
mov
es
xchg
lods
imul
fsubrp
sub
push
lock
cmp
or
push
mov
cmpsb
push
shll
xchg
mov
sub
adc
mov
setp
dec
bound
jae
and
cmpsl
sbb
inc
popf
sti
inc
jl
test
ja
ljmp
mov
mov
outsl
jge
subl
mov
loopne
add
addr16
mov
lret
lods
ret
push
mov
ss
test
in
inc
push
mov
test
lcall
outsl
rcrl
push
int
jp
in
test
mov
sbb
test
jb
cwtl
mov
pusha
xchg
das
lcall
dec
or
loopne
fstl
xchg
aad
cmpsb
sbb
dec
mov
mov
jnp
dec
repnz
leave
push
mov
or
scas
pop
push
in
adc
popf
dec
stc
sub
stos
lcall
test
out
jl
rclb
pop
loope
mov
inc
mov
aam
or
mov
mov
leave
push
sub
mov
cmp
xchg
push
lahf
test
es
adc
jmp
jno
mov
icebp
repz
je
dec
popf
lea
jp
out
mov
lods
add
dec
or
pop
outsb
pop
mov
pop
rclb
dec
and
dec
bound
xchg
sub
or
es
and
sbb
leave
int
xchg
test
fs
fst
es
dec
lock
ud1
cmp
pusha
scas
mov
es
push
xchg
or
xchg
mov
int3
pop
dec
inc
out
sub
xor
in
scas
and
xchg
in
jae
pop
inc
loopne
mov
andl
jle
sub
xchg
adc
push
out
mov
icebp
fprem1
leave
dec
movsl
add
es
sub
lods
mov
fnsave
gs
pop
inc
add
ret
and
push
loop
push
jmp
push
jae
cli
pop
lcall
adc
push
in
cmpsl
jne
xchg
mov
rclb
sub
nop
mov
nop
mov
mov
insl
push
pop
add
mov
adc
sbb
in
pop
roll
xor
test
dec
subl
adc
lret
lock
std
aad
or
dec
inc
dec
ja
xor
cmp
sbbb
je
inc
sarb
sahf
push
pop
cmc
push
inc
xor
mov
cld
nop
mov
mov
and
mov
jns
cmp
out
sub
out
dec
les
cli
cmp
scas
fldenv
mov
in
sahf
jl
and
pop
stos
movsb
sub
rol
xchg
sti
insb
jne
cmpsl
lahf
imul
mov
shll
pusha
ss
cltd
dec
mov
xlat
std
incb
pop
out
rcr
lcall
inc
jno
mov
pop
sub
xchg
xor
iret
rol
stc
mov
cld
incb
jne
jnp
or
sub
je
mov
pop
xor
adc
push
xor
dec
pushf
and
mov
fsubr
bound
les
mov
xor
out
pop
lahf
xchg
ljmp
mov
les
adc
jge
in
dec
movsl
and
jl
imul
leave
popa
call
ja
hlt
add
xchg
fisubrs
adc
mov
jo
jge
or
mov
and
aad
add
enter
cmp
js
out
mov
mov
pop
push
sarb
scas
and
and
push
mov
out
sbb
rorb
fistl
inc
movsl
cmp
mov
daa
pusha
data16
rorb
xchg
cli
fnsave
out
sahf
pop
xchg
mov
js
push
testl
mov
push
pop
and
push
xchg
testl
ljmp
sti
cmp
jne
orb
add
xlat
xor
stc
pop
jbe
lods
pushf
je
push
lahf
addl
push
mov
in
lret
jmp
xchg
mov
js
or
cmp
sbb
xor
ret
push
cmpsl
mul
xchg
jge
out
outsb
cltd
and
xor
inc
lock
inc
repnz
pop
or
xchg
test
sub
xor
mov
into
xchg
jae
jle
rcrl
sbb
stos
aaa
jnp
mov
xor
jg
dec
xor
sub
mov
xchg
xchg
and
jae
aas
mov
xor
aad
mov
and
pop
adc
or
jecxz
inc
add
push
ds
aam
push
stos
push
jecxz
sbb
mov
in
mov
mov
xchg
or
or
movsl
xchg
add
jle
pop
inc
or
lret
das
scas
add
pushf
jle
jg
sbb
jl
imul
push
arpl
js
cmp
loopne
ss
jecxz
pop
xchg
cli
stos
jne
shrl
jns
add
and
sarl
stc
dec
fistpl
adc
push
fisubs
sbb
and
cld
shlb
sub
mov
lret
stos
out
lds
sub
lds
dec
sub
mov
scas
jae
fwait
stos
mov
rolb
pusha
ret
xchg
shlb
movsl
jecxz
out
push
popa
nop
dec
mov
adc
lods
and
cmp
cmp
xor
sub
fmull
sub
test
fsubs
dec
fs
fcoml
scas
movsl
xchg
or
fs
push
xchg
in
clc
leave
loopne
scas
push
stc
repnz
pop
sbb
clc
adc
loopne
mov
repnz
mov
jecxz
mov
mov
stos
xorl
add
icebp
cmp
xor
leave
mov
mov
call
js
sub
mov
leave
push
imul
inc
xchg
sbb
es
lods
lcall
in
pop
fdivrl
sti
push
imul
iret
and
mov
cmp
pop
xorl
mov
pop
into
dec
imul
xchg
pop
scas
and
sbb
sahf
dec
cmp
daa
lret
mov
xchg
rcrb
sar
stos
imul
adcb
pop
sbb
cmc
aad
in
or
popa
mov
push
pop
sti
push
add
push
in
sbb
jno
cmpsl
lock
data16
in
and
mov
inc
outsl
mov
cmp
in
pop
repnz
in
cmp
adc
jno
or
xchg
fwait
insl
mov
cltd
clc
jle
aad
push
mov
scas
data16
xor
imul
or
lods
or
std
add
jmp
push
pusha
pusha
add
ror
mov
sarb
xchg
xchg
enter
lds
arpl
lods
mov
sarb
cmp
cld
jg
movsl
popa
pop
popa
mov
or
shlb
fimull
outsb
adc
jl
test
lret
push
sbb
push
dec
out
insb
and
xchg
js
and
mov
loope
jnp
repz
mov
outsb
outsl
mov
leave
test
clc
and
pusha
mov
xchg
mov
or
ror
and
test
aas
mov
lret
and
push
pushf
jb
ds
xchg
pop
xchg
sbb
dec
xchg
inc
sub
xchg
xor
leave
int3
mov
sbb
mov
outsb
push
xchg
jge
das
stc
shrl
xor
les
ret
sbb
clc
ror
dec
sub
sbb
and
scas
cli
les
out
dec
shll
inc
jmp
and
mov
mov
jno
aad
xor
sub
mov
arpl
sbb
push
dec
jp
mov
dec
into
xor
adc
test
inc
out
cmp
xchg
push
inc
jbe
jecxz
les
sti
das
adc
push
out
test
inc
mov
dec
icebp
out
in
fnstcw
pusha
sbb
mov
test
aas
push
mov
jge
pop
adc
jae
testl
fstl
lret
jmp
ja
jne
icebp
xchg
repz
fmuls
or
mov
loop
inc
les
xchg
sub
push
add
push
add
mov
fs
sbb
pop
or
out
mov
inc
fdivp
push
add
aas
lds
aad
xchg
or
add
lods
leave
mov
cmp
mov
insl
xchg
pop
loope
int
jbe
or
inc
sbb
xor
test
popa
cli
fdiv
dec
adcl
je
pop
aaa
add
xchg
jnp
stos
mov
xlat
aad
pop
nop
fsub
enter
test
imul
testb
push
pop
scas
add
inc
ret
outsl
stc
cs
mov
loop
aas
and
dec
mov
stc
mov
out
lds
mov
adc
mov
imul
mov
lret
inc
pop
arpl
out
xchg
ja
hlt
out
shlb
fmuls
adc
push
inc
cmp
mov
add
sbb
sub
lods
mov
movsl
mov
sbb
out
and
and
pop
lret
push
sbb
jae
cmp
dec
das
mov
dec
aad
les
mov
mov
mov
jle
cmpl
inc
cmp
and
loopne
xor
jmp
fidivrl
jns
mov
aad
idivl
dec
jg
pop
sar
mov
sahf
data16
lds
xor
pop
pushl
fldl
inc
or
pop
xorl
sbb
jl
lcall
popf
pop
lds
fstps
in
inc
push
or
into
or
stos
mov
mov
insb
incb
rorl
dec
inc
mov
cmp
cwtl
push
and
leave
pop
jne
cmp
cmp
int3
push
enter
repnz
mov
hlt
test
in
lahf
iret
mov
fcomp
scas
es
push
hlt
movsl
jmp
popa
cltd
and
sub
decl
xchg
enter
popf
js
sti
or
add
inc
lret
inc
mov
mov
movsl
loopne
jg,pt
jl
xchg
push
pop
sbb
sub
inc
fbld
push
int
xchg
sbb
cmp
dec
adc
sub
xor
xchg
mov
mov
daa
in
inc
outsb
inc
cltd
subb
test
data16
fucomp
repnz
sub
popf
cmp
das
or
dec
sbb
adc
and
fiadds
arpl
xchg
leave
add
pusha
xor
push
dec
popf
and
cmp
gs
xor
loope
push
cmp
loope
repz
xor
jp
hlt
decb
pop
push
dec
inc
inc
popa
and
pop
dec
iret
in
shrb
jl
xor
jecxz
nop
add
push
adc
jp
mov
ljmp
movsb
call
jnp
xchg
call
push
adc
sarl
insl
dec
subl
out
push
and
insb
jae
adc
and
jns
mov
adc
pop
arpl
in
add
adc
stos
add
out
mov
jno
test
decb
push
hlt
dec
mov
cmc
and
jecxz
sbb
pop
ficomps
aam
divb
fiadds
jbe
jbe
adc
adc
inc
or
xchg
rclb
and
jmp
add
mov
nop
lds
mov
xor
dec
cmp
in
repnz
pushf
add
testb
scas
outsl
enter
lret
sti
movsl
xchg
rcll
jp
inc
add
mov
in
sbb
popf
in
dec
pop
incl
push
aaa
push
jo
or
cld
mov
push
sarl
test
push
xchg
jp
icebp
enter
cmp
in
mov
enter
jp
loopne
push
mov
sbb
sbb
mov
xor
sub
insl
pusha
mov
fmulp
mov
dec
jecxz
sbb
addr16
aas
inc
ss
or
aad
push
fndisi(8087
fidivrs
aaa
mov
xor
insl
xor
in
aas
sbb
or
sub
inc
rcrl
gs
sbb
inc
fdivrl
add
jl
mov
mov
test
pop
xlat
sbb
pushf
lods
bound
pop
pop
dec
mov
xchg
jle
scas
push
inc
test
lcall
ret
pop
scas
aad
stc
cmp
ret
or
or
orl
jnp
add
mov
sub
test
cld
sar
adc
notb
ret
push
fdivrp
je
ljmp
popa
mov
dec
jne
xchg
and
jle
gs
flds
mov
ficoml
xor
fwait
push
aas
aaa
test
test
dec
shr
cmp
mov
outsb
mov
push
movsl
sbb
in
push
add
stos
std
sub
loopne
ds
fdivrl
pop
cs
add
scas
enter
lahf
test
cmp
xchg
in
inc
pop
adc
out
cwtl
testl
scas
pushf
imul
add
add
push
sub
xchg
mov
enter
js
xchg
add
push
jge
fwait
jle
and
dec
outsb
jnp
jns
pop
lcall
push
stc
clc
fisubs
dec
or
sbb
bound
and
ljmp
xchg
imul
jg
inc
mov
mov
ret
xchg
adc
iret
dec
lods
adc
sub
mov
dec
push
loope
dec
inc
inc
or
je
int
mov
pop
sub
popf
and
mov
push
jle
ja
inc
dec
inc
pushw
mov
push
push
mov
sub
repnz
shlb
daa
jnp
mov
push
fmull
testb
or
pop
faddl
lret
or
or
push
inc
nop
pop
xchg
cmpsl
jbe
into
jg
mov
fisttps
xchg
and
ss
and
cmpsl
movsl
push
fnsave
pop
cmp
das
int3
push
cmp
movsl
aaa
mov
cmp
jmp
fsubp
or
mov
stos
inc
pushf
movsb
ret
js
mov
mov
push
mov
fstps
jae
aad
push
cs
pop
shll
pop
into
fisubs
xlat
icebp
hlt
hlt
jmp
mov
ficomps
cmp
clc
lock
add
cmpsb
or
cmpsl
or
fildl
rcll
into
jb
dec
dec
sbb
subl
xchg
iret
sub
mov
inc
xor
or
mov
fsubrl
daa
sahf
fsts
mov
lret
andl
push
movsb
pop
sbb
and
div
dec
jp
mov
pop
add
push
fsts
jns
xor
mov
inc
mov
jbe
mov
stc
inc
es
fdivrs
popa
mov
inc
mov
outsb
cmpsl
mov
push
jle
sbbb
dec
pop
call
xor
mov
dec
inc
fisubrl
cli
xchg
sub
rorb
xchg
out
cmpsb
ljmp
js
lea
and
inc
and
popa
and
out
push
ret
imul
xor
or
fs
adc
xlat
aad
or
push
aad
popa
popf
ret
testl
in
add
jmp
and
stos
jno
leavew
mov
nop
loop
and
xchg
lahf
dec
cwtl
cwtl
mov
cmc
in
andl
sub
pop
pop
enter
stos
cmp
pop
sub
mov
jmp
adc
mov
lock
xor
es
insb
enter
xchg
xlat
fdivl
jns
sbb
inc
in
dec
or
sbb
je
jg
pop
sbb
movl
jge
jl
in
imul
and
pop
pop
lea
test
pop
lret
inc
push
xor
xlat
sbbb
lret
inc
cld
mov
mov
mov
in
dec
push
jnp
sbb
add
pop
mov
adc
bnd
call
or
jecxz
and
push
mov
pop
mov
psubusw
push
flds
sbb
pop
pop
icebp
roll
loopne
sbb
or
insb
rcrb
stos
cmp
push
cmp
mov
mov
mov
dec
cmpsl
mov
cld
rolb
mov
insb
lods
repz
xor
or
or
bound
insl
shr
mov
pushf
jnp
inc
mov
mov
mov
mov
adc
ljmp
sub
push
pop
pusha
dec
add
enter
cld
mov
mov
popa
and
sub
idivl
jmp
inc
insl
call
and
mov
loope
stos
repz
enter
fdivs
add
xor
lods
or
ja
test
dec
call
add
cmpsl
mov
mov
mov
jbe
add
enter
jo
fwait
sbb
mov
insl
fwait
mov
dec
andl
imul
lods
adc
dec
ficoms
bound
dec
aaa
or
pop
adc
sub
jecxz
stos
outsl
lock
push
mov
fnsave
push
mov
xlat
xchg
pop
xor
repz
into
ds
lock
pusha
add
mov
je
in
popf
cli
jns
sub
loop
cs
cmp
test
mov
cmp
inc
sbb
xor
cs
fimull
out
pop
rclb
mov
testb
lret
cmp
ss
rolb
adc
gs
mov
mov
bound
push
leave
mov
jmp
scas
jae
sub
add
sbb
fildll
mov
xor
push
movsb
and
lea
cmp
add
lret
je
xchg
xorb
outsl
repnz
in
mov
cmc
pop
jmp
mov
out
jb
imul
mov
cmp
mov
lret
aas
pop
fwait
out
pop
ss
sub
cmp
xchg
push
cli
xor
xchg
xchg
loopne
and
sti
adcl
ljmp
je
dec
sbb
out
adc
nop
out
jne
shlb
das
idivl
adc
sarb
cmc
xchg
cmp
ja
mov
xchg
cmc
in
aam
and
push
bound
rorl
jle
pop
push
xor
aam
fistps
mov
push
stc
or
out
cmp
fnstsw
icebp
sbb
cs
cld
mov
jb
pushf
adc
pop
inc
jmp
adc
mull
cmp
sub
fadd
std
aaa
iret
push
ret
enter
pop
cmp
xchg
jg
xchg
scas
int3
or
mov
bound
push
and
mov
lcall
loope
add
mov
xor
and
adc
pop
dec
mov
mov
jne
mov
cmp
push
sahf
xchg
imul
sahf
pop
push
jp
xor
movsl
jae
push
xor
adc
mov
test
fwait
or
sub
jmp
pop
shl
scas
mov
mov
and
inc
cmp
icebp
shrb
sub
mov
imul
imul
add
test
roll
fwait
mov
mov
rorb
ss
mov
inc
imul
pushf
lret
adc
mov
test
xchg
cmp
sub
mov
inc
fs
xorl
ss
jmp
icebp
fwait
sahf
adc
fstpl
jmp
adc
jle
adc
push
sahf
subl
fsubrp
mov
scas
xchg
adc
repz
or
ror
outsl
lds
faddl
jge
sub
scas
xlat
loop
loopne
add
xchg
cmp
fimuls
bnd
test
mov
test
stos
lods
sub
aam
clc
ss
outsl
cmp
orb
fs
jecxz
es
push
adc
or
or
cmp
cltd
jbe
sub
dec
stos
fists
bound
inc
pop
hlt
jns
adc
cmp
fmull
ds
shll
adc
loopne
push
cltd
ret
inc
jb
mov
push
es
cmpsl
out
fisttpll
adc
int
aad
pop
aaa
int
cmpsl
jp
loop
fidivrs
daa
std
ja
xor
cmp
xchg
xor
xchg
inc
mov
lds
test
pop
dec
popl
xor
cli
rcrl
and
dec
ja
insb
jmp
int
enter
add
sahf
cwtl
insb
fmul
gs
fcomps
cmpsb
decl
mov
lcall
inc
scas
mull
fmul
cmp
jl,pt
xchg
ds
dec
lret
push
arpl
xchg
mov
pop
sub
or
mov
pop
mov
aad
xchg
ret
je
add
push
cs
mov
xchg
loopne
sub
jne
jge
inc
arpl
test
mov
xchg
xchg
and
hlt
inc
jp
dec
add
jge
rep
cmp
fistpll
mov
cmp
sub
pop
mov
ret
push
xchg
pop
loope
push
repnz
mov
aam
stc
pop
push
mov
add
xchg
add
mov
xchg
pop
fsubs
mov
fs
fsts
jb
mov
ss
stos
adc
cs
mov
loop
mov
movsl
and
mov
or
pop
or
dec
mov
dec
push
xor
xchg
adcb
bound
out
xor
dec
cltd
cmp
repz
adc
jo
outsb
test
jmp
jge
fwait
movsl
loop
and
mov
fsubl
mov
jnp
scas
mov
push
push
call
out
adc
xor
scas
cmpl
scas
in
dec
mov
dec
adc
fnstcw
xchg
hlt
xor
test
sub
jne
call
rcll
sti
jl
sub
mov
mov
cli
scas
xlat
and
xor
clc
pop
push
adc
fs
mulb
push
jl
outsb
cs
aas
scas
int3
popa
cltd
rcr
int
outsl
inc
mov
and
dec
andl
ret
mov
xor
test
add
sub
mov
or
add
mov
ss
pushf
push
imul
inc
loope
arpl
nop
add
inc
mov
leave
sub
xchg
lea
out
lahf
adc
mov
sub
inc
xor
scas
in
fdivrs
cmpsl
add
arpl
aad
daa
les
jne
mov
stc
cmpsl
push
jl
cmp
imul
mov
mov
jnp
mov
dec
dec
add
dec
insl
or
inc
call
mov
sbb
mov
fcoms
push
mov
shlb
sub
fadd
cli
fstps
rolb
push
jo
mov
imul
mov
stc
jmp
cltd
xchg
mov
jp
insb
mov
push
xchg
mov
xchg
inc
in
mov
push
cmp
aaa
in
push
sbb
sahf
outsb
xchg
jp
xor
mov
cmpsb
dec
jbe
cli
pop
push
std
dec
mov
hlt
int3
ljmp
and
inc
xor
int
fimuls
jge
fisubrl
pop
sub
mov
insb
lcall
inc
jp
into
or
hlt
jge
sbb
mov
pop
and
pop
cmc
sbb
repnz
push
dec
push
adc
js
sub
lods
xor
aam
add
fwait
xchg
aaa
orl
sub
sbb
jge
push
mov
outsb
push
pop
cmp
xor
pop
adc
dec
out
cmpsl
inc
pop
xchg
pop
mov
inc
iret
dec
je
and
shll
mov
cli
mov
mov
and
out
mov
scas
xchg
out
xchg
adc
aaa
mov
repnz
push
and
repnz
es
cli
insl
fstl
hlt
jae
add
ret
add
test
aaa
add
inc
pop
inc
dec
ficompl
sbb
in
xor
jno
inc
jmp
xor
jge
out
shrl
aaa
out
pop
jp
and
xchg
fwait
pop
fcmovnbe
adc
stos
cli
mov
mov
dec
ret
jp
push
cmp
popf
or
stos
out
arpl
xchg
aas
sub
pop
sub
lods
fs
lcall
fisubs
lret
in
data16
call
sbb
dec
or
std
inc
outsb
sub
cmp
and
pop
es
insb
ret
dec
js
dec
adc
arpl
inc
xchg
adc
push
out
sub
cmc
int
xor
cmp
insb
rcrb
dec
adcl
inc
mov
testl
lods
je
das
or
cmp
scas
subl
leave
mov
cwtl
pop
sbb
in
jae
sub
mov
inc
mov
add
xchg
cli
cmp
mov
mov
jge
or
fildll
mov
xor
jg
inc
and
pop
pop
bound
push
inc
or
inc
pusha
and
add
fidivrs
lahf
cmc
mov
cli
jns
pop
rorl
dec
movl
test
inc
adc
ret
iret
mov
xlat
jae
cltd
aam
or
xchg
xchg
cmc
jb
roll
pop
mov
jge
out
mov
xor
push
dec
js
cltd
push
cltd
imul
fistpl
in
adc
and
fwait
push
xchg
cmp
popf
cmp
ficoms
js
jbe
adc
sub
into
sub
pop
dec
fcmovnu
popa
sbb
int
ficompl
dec
ret
xor
pushl
or
iret
ja
inc
fwait
test
lcall
sti
xor
pop
sarb
shll
push
outsb
loopne
push
arpl
dec
xchg
fisubrl
pop
or
add
sahf
outsl
sbbl
xchg
aad
inc
loope
imul
xor
test
fiadds
xchg
arpl
int
mov
or
es
xor
test
mov
mov
es
cmc
xchg
andl
addr16
aas
call
and
cmp
and
insb
pusha
add
dec
adc
inc
cmp
loopne
jbe
fists
xchg
arpl
out
int
cltd
sub
add
lea
int3
pop
rorl
mov
in
adc
imul
xlat
in
jnp
cmc
inc
sub
sub
cmc
add
jl
into
jns
lods
inc
stc
mov
sbb
mov
ret
ljmp
out
sub
test
and
xor
cmp
out
lea
add
jo
cmp
lds
data16
sbb
sbbb
and
jne
and
jbe
test
xchg
inc
rolb
iret
pop
fwait
nop
enter
adc
int
mov
andl
and
les
xchg
out
movsb
lods
imul
cltd
xorl
mul
hlt
push
sbb
jno
adc
cli
xchg
shll
outsb
into
push
xchg
xor
push
movsl
dec
adc
ret
mov
shrb
fsubl
adc
push
mov
lea
cwtl
clc
outsb
xchg
mov
loopne
inc
ljmp
iret
cmc
cs
jns
xchg
rcr
fsubp
xor
jecxz
out
xor
sub
dec
aaa
sbb
mov
test
cld
and
inc
pop
fmul
mov
inc
cmp
mov
dec
jb
pop
lods
arpl
push
xchg
cmpsl
lcall
xlat
gs
addr16
jg
lods
and
es
sti
and
lock
adc
idiv
or
scas
out
test
pop
dec
mov
xor
cs
push
mov
mov
sub
sub
test
cld
mov
push
outsb
mov
jns
int3
lret
repz
in
mov
bound
push
inc
cmp
imul
test
aas
adc
loopne
stos
fcoml
dec
cmp
xchg
mov
jge
aad
ljmp
mov
test
inc
xchg
ret
in
mov
jge
jle
fnstsw
movsl
sub
cmpsl
scas
jge
pushl
cs
cli
jle
repnz
repnz
pop
inc
xor
fsts
test
pop
and
xchg
pop
mov
scas
cmp
mov
jns
out
and
or
fstps
dec
nop
dec
add
lahf
outsl
scas
imul
adc
out
cli
ds
test
sub
dec
adc
test
gs
sar
lods
sub
and
push
iret
push
xor
dec
mov
roll
and
push
cmpb
andb
repnz
inc
sub
and
xor
pop
mov
daa
lods
sbb
pop
es
cmp
fbstp
jl
scas
mov
aam
or
jecxz
cmpsb
cmp
jnp
mov
insb
add
and
imul
push
pop
in
clc
add
and
inc
and
jo
xchg
jg
shlb
add
jecxz
pop
pop
inc
sarl
test
mov
push
pop
lret
das
pop
test
pop
pop
insb
imull
std
test
daa
mov
add
jmp
mov
jae
jl
aas
add
xchg
and
sbb
imul
add
xchg
in
stc
push
inc
cmp
scas
inc
or
mov
or
and
adc
enter
call
jp
or
fildll
jp
or
cmp
movsb
mov
xchg
mov
ret
jmp
jb
lods
stos
mov
mov
inc
inc
push
jmp
sub
and
pop
ds
cmp
jnp
jno
das
push
pop
cwtl
out
inc
mov
and
hlt
aam
mov
jae
sub
shll
mov
jle
aam
sbb
lods
loope
adc
inc
push
and
or
clc
ljmp
inc
adc
or
pushf
sub
xor
out
cltd
and
mov
mov
imul
scas
inc
or
push
jmp
xor
int
bound
xchg
push
jmp
loope
std
lods
cmc
sti
clc
fucomp
inc
testb
mov
test
or
stos
ljmp
dec
je
lock
dec
sbb
xchg
mov
and
xchg
xchg
mov
xchg
outsl
jmp
out
push
mov
mov
mov
sti
imul
mov
mov
popf
pusha
mov
mov
in
cwtl
bnd
cld
xchg
pop
into
mov
xchg
push
aas
cwtl
sub
xorl
push
mov
fiaddl
std
daa
std
out
and
mov
testl
sub
mov
cmp
stos
sbb
jbe
jecxz
dec
addr16
dec
jle
sub
aam
outsl
sub
mov
xor
mov
xor
mov
in
ret
push
insb
mov
repnz
aam
test
mov
mov
lds
jne
and
push
insl
fistpll
jmp
mulb
mov
xchg
jg
mov
inc
sub
repz
xchg
dec
fistl
dec
push
movsb
add
jo
cmp
aas
mov
movsl
jge
push
shlb
cmp
xor
outsb
cmpsb
mov
xor
in
aaa
jno
or
pop
pop
loop
adc
in
inc
add
xchg
mov
xchg
imul
and
in
into
test
lret
push
inc
mov
dec
popf
sbb
jle
inc
into
jb
pop
mov
push
ja
mov
pop
lods
adc
mov
xchg
test
dec
xor
or
pop
mov
adc
scas
pop
testb
jle
repnz
sarb
pop
add
addr16
loopne
xchg
int3
pusha
xchg
adc
jg
xchg
addl
dec
mov
mov
push
mov
ror
adc
mov
xlat
jl
outsl
jmp
les
sbb
sub
insl
push
lret
mov
mov
call
call
ja
js
data16
lss
sbb
jp
add
lahf
cwtl
mov
cs
or
and
inc
aaa
js
or
fadd
jo
ja
hlt
push
pop
cmp
aas
and
adc
add
shrb
mov
fstpl
out
ffree
mov
cs
data16
push
stos
pop
dec
popa
inc
fstps
xchg
cmp
push
inc
sbb
xchg
sub
xchg
or
adc
mov
bound
scas
outsl
sarl
hlt
pushf
test
popa
arpl
dec
cmpsl
xchg
in
outsl
mov
adc
shll
cli
xchg
mov
mov
pop
cmpsl
jnp
fbld
cmp
lods
push
stc
push
outsl
mov
mov
cmp
gs
xlat
fildll
lods
sub
cmp
leave
clc
imul
das
sub
daa
adc
pop
and
xchg
inc
lds
cmp
es
repnz
test
test
adc
ret
dec
jp
mov
cmp
pop
frstor
test
add
movsb
mov
clc
sti
fiaddl
cmc
pushf
out
lahf
loope
ret
mov
pop
out
xchg
bt
mov
cmp
adc
or
mov
rorl
mov
or
ficoms
cmp
push
out
or
add
bound
lret
cmp
xchg
rolb
flds
xchg
push
mov
xchg
nop
stos
fsubrl
pusha
aaa
mov
adc
push
pop
dec
jb
cmpsb
pop
mov
cmpsb
cmpsl
pop
and
push
fstpl
and
cmp
jp
mov
in
std
jnp
into
inc
mov
fwait
repnz
rcll
adc
mov
dec
test
jmp
mov
nop
dec
mov
inc
xchg
lcall
xchg
adc
ret
loopne
inc
lret
fildl
aas
aam
cld
outsb
decb
std
imul
sub
or
cmp
and
pop
mov
rorl
in
xchg
mov
xor
mov
or
xor
jmp
or
sti
das
ret
popf
cmpsl
lret
popf
pop
scas
xorb
fadds
mov
fisttps
dec
jo
push
mov
and
xchg
ja
test
leave
or
int
cltd
shll
sbb
add
arpl
test
dec
repnz
pop
xchg
push
mov
jb
arpl
sti
icebp
out
aam
cwtl
mov
in
jo
out
ja
scas
pop
test
outsb
es
pop
cwtl
test
mov
test
loop
adc
aaa
lret
xlat
adc
push
aas
mov
xor
adc
pop
test
mov
mov
scas
xor
push
or
mov
loopne
xor
daa
mov
push
add
int3
lret
and
xor
call
xor
lcall
bound
adc
pop
add
lods
xchg
sbb
test
jg
dec
cli
test
js
mov
daa
dec
int3
adc
pop
sub
adc
mov
arpl
mov
outsb
mov
mov
ror
int3
sbb
testb
sub
add
xor
fwait
lret
psraw
cmp
cltd
jge
pop
push
add
push
mov
cmp
shlb
mov
push
or
in
gs
sahf
lods
fldcw
pusha
scas
ds
addb
and
repnz
pop
pop
dec
xchg
adc
xor
jnp
insl
out
push
out
pop
push
es
in
imul
xchg
sub
sub
fidivrl
movsl
xchg
gs
incl
pop
fimull
out
push
aas
outsb
dec
shrl
dec
in
inc
sbb
cmp
xor
sbb
subb
orl
dec
mov
pop
call
inc
push
pop
loope
add
aaa
jp
int3
int
cltd
cs
outsb
outsb
aas
sub
out
mov
int3
inc
cmp
inc
mov
insb
xor
cltd
pop
daa
push
fisubs
stc
xlat
loopne
daa
add
out
adc
sub
mov
jb
mov
push
sbb
aaa
xchg
or
xchg
loopne
inc
lea
jle
jns
and
out
xor
pop
sbb
pop
cmp
ss
pop
xchg
imul
mov
jne
jmp
cmp
fwait
into
test
mov
cli
xchg
inc
cmpsb
sbb
dec
and
es
jmp
and
ret
push
inc
sarb
lret
hlt
xlat
jo
mov
and
repz
add
mov
jmp
out
sbb
or
sbb
rdmsr
cmc
out
or
dec
enter
mov
dec
lahf
std
cmp
aam
scas
dec
mov
ja
int3
into
movsb
mov
mov
cmp
jmp
mov
cmpsl
inc
pop
sahf
movl
icebp
stc
shrl
shlb
movsb
int
inc
lret
inc
test
subl
outsl
les
and
jge
hlt
pop
ret
add
sarl
outsl
les
mov
sti
call
xchg
mov
mov
inc
subl
movsl
es
or
test
inc
cmp
mov
repz
shr
lret
cmp
in
roll
dec
push
pop
cmc
add
mov
or
cmp
idivl
adc
cmp
fs
je
cltd
or
jbe
call
mov
icebp
inc
or
shl
cmpsl
inc
fisubs
jo
nop
push
fisubs
pop
mov
js
test
xlat
and
lock
int3
lods
xor
je
mov
popa
jl
and
scas
xchg
mov
aad
dec
stos
shlb
lea
or
cmp
rorl
xor
cltd
in
push
je
fbld
mov
lods
into
sbb
adc
aas
and
data16
loope
sti
push
mov
mov
or
push
daa
es
or
cmp
xchg
mov
mov
imull
stos
add
rcrl
outsl
enter
call
or
fisttpll
pop
add
int
jo
xor
ret
mov
sahf
fistps
mov
out
push
outsb
adc
enter
clc
call
mov
int
lcall
cmp
or
xchg
push
sub
xor
insb
add
jle
dec
xchg
pushf
popf
sbb
cmp
les
or
or
mov
outsl
jg
repz
adc
xor
sbb
test
xstore-rng
cmpsl
test
jl
jl
jns
rcrb
imul
cmc
iret
dec
adc
jmp
add
in
jmp
addb
mov
cmp
inc
fwait
mov
lods
mov
cmpl
rcrl
hlt
push
scas
cmp
shll
mov
daa
std
sbb
idivl
bound
mov
mov
arpl
pop
jp
mov
adc
push
js,pt
adc
je
js
and
bound
jns
push
pop
lahf
pop
stos
cmp
and
sub
inc
add
jge
or
pusha
iret
sub
jo
dec
pushf
jge
inc
mov
ret
mov
insl
cmpsb
nop
push
enter
cmp
mov
adc
getsec
ja
shll
es
inc
mov
int3
xor
lret
in
mov
mov
add
dec
orb
es
sub
lahf
mov
movsb
outsl
xor
outsb
xchg
aad
cmp
hlt
lods
test
inc
ss
mov
aad
sub
lcall
decb
hlt
jne
jle
lcall
gs
sub
add
loope
stc
xor
aam
mov
dec
xor
dec
xor
popf
inc
dec
xchg
imul
stc
int
or
ret
pop
lret
gs
sbb
pusha
and
loopne
or
and
repz
push
sbb
xor
push
scas
mov
nop
pop
jg
xchg
jnp
jae
jnp
subl
repnz
jns
mov
imul
jecxz
imul
lret
test
push
pop
jge
xchg
int3
or
clc
add
mulb
ds
mov
bswap
les
inc
push
push
xchg
mov
mov
push
mov
push
push
incl
inc
sar
jmp
aaa
shll
jns
fcmovbe
jbe
jmp
iret
sub
adc
mov
mov
mov
fcmovbe
mov
sbb
stc
imul
sub
stc
adc
pop
pop
vpaddsw
adc
sbb
pop
in
shll
push
mov
lahf
xor
pop
xor
out
and
in
cmp
icebp
out
push
sahf
cmp
jmp
inc
dec
xchg
cmpl
lea
pop
push
jmp
mov
mov
push
sub
push
dec
sbb
je
outsl
pop
das
mov
loopne
or
out
cmpsb
out
jo
sti
in
call
jmp
stos
push
shl
into
in
data16
test
mov
imulb
int3
pop
mov
outsb
cld
out
mov
mov
je
add
and
pop
jns
jno
fidivs
pop
loope
es
std
out
sti
aam
or
testl
xor
es
lret
icebp
aam
pop
inc
pushf
sub
int3
dec
mov
dec
mov
imull
jno
lds
adc
or
ret
push
loopne
sarb
lcall
bnd
mov
jge
addr16
or
jno
movb
and
mov
rcll
adc
dec
sbb
mov
addl
test
xor
fisttpll
in
nop
xchg
pop
repz
loope
outsl
adc
stos
cld
jo
mov
gs
sub
jle
xor
ljmp
jae
inc
movsl
shlb
xchg
jmp
fcmovb
les
mov
jp
cmp
in
cmpsl
pop
cmp
xchg
into
out
jns
iret
dec
inc
scas
gs
sub
shl
jmp
cmp
sarl
test
gs
inc
mov
add
or
dec
outsl
iret
jp
repnz
or
pop
sub
aaa
adc
add
add
mov
pop
sbb
gs
or
and
adc
loop
xchg
arpl
mov
nop
and
fstps
rorl
cwtl
pop
test
test
pop
aad
orb
sbbb
shrb
in
dec
mov
xchg
adc
jmp
pop
inc
cmpsl
cmp
mov
call
aaa
adc
ror
fcompl
fildll
jmp
mov
dec
cmp
enter
sbb
incl
pop
cmp
loop
fnstcw
mov
push
cmp
jg
mov
mov
cmp
fidivs
mov
fs
add
imul
cs
dec
adcl
mov
icebp
mov
jo
jb
test
sub
dec
in
pushf
or
mov
stos
mov
mov
mov
lods
jne
xchg
gs
sub
sub
and
inc
clc
ret
or
xor
mov
and
add
aad
cli
mov
and
mov
and
outsb
adc
cwtl
test
cmp
inc
orl
gs
sub
ss
inc
push
sbb
addr16
das
cmpsl
add
cmpl
ja
popa
xlat
dec
in
adc
outsb
lea
imul
cmpl
mov
mov
xor
stc
xchg
movsb
arpl
jge
enter
inc
pop
popa
pop
add
paddusw
lock
mov
jmp
adc
dec
call
dec
lods
stos
xchg
mov
pop
cmp
xchg
imul
pushf
enter
mov
push
repz
mov
mov
cs
ljmp
jg,pt
fnstenv
arpl
mov
add
adc
ljmp
leave
sbb
pop
ret
jns
imul
xchg
jbe
jge
inc
xlat
jl
rcr
add
ret
into
mov
sub
aad
lahf
out
in
mov
movsl
movsb
out
xorb
and
mov
imul
sbb
cmp
sub
lods
inc
sub
pop
add
fstps
push
jmp
test
ja
push
ss
ret
xchg
xchg
pushf
xlat
and
int
add
and
divb
add
pop
fcmovnb
mov
insb
rcr
xchg
mov
push
imul
lcall
fistl
cltd
sbb
in
mov
dec
aas
jo
pushf
ret
rcrb
in
fwait
lods
mov
inc
jg
xor
leave
jae
inc
sub
push
add
push
inc
repnz
or
shll
loop
clc
push
out
mov
cwtl
push
ficoms
sbb
add
int
inc
jecxz
pop
sub
sub
and
int3
mov
gs
js
leave
cltd
and
jo
xor
fmull
out
mov
inc
fidivs
inc
dec
sahf
and
mov
mov
push
fnstenv
xchg
insb
jl
in
addr16
cmc
add
addr16
push
insb
mov
cmc
movsl
jbe
pop
dec
push
xchg
cmp
int3
dec
ret
adc
or
and
inc
pop
push
push
cmp
neg
cmp
popf
cwtl
jecxz
popf
aas
loope
test
push
loop
outsb
push
imul
aas
jmp
pop
fsubrl
inc
cmp
repnz
cld
into
shlb
inc
loop
das
xor
out
fld
hlt
ss
fwait
push
cld
mov
leave
cmp
or
sbb
fimull
cmpsb
into
push
pop
fs
inc
sub
xor
or
fimuls
sbb
jmp
cltd
pushf
decl
sbb
mov
xor
sti
pop
mov
push
data16
inc
aas
lret
lock
cmp
shrl
xor
pop
pop
cmp
mov
cmp
xchg
xchg
xchg
mov
xchg
mov
ljmp
or
dec
adc
insl
push
popf
in
loopne
jl
lahf
jle
dec
jmp
xlat
mov
mov
call
out
aam
push
sbb
cmp
js
leave
jecxz
adc
imul
testl
pop
loope
fisttpl
mov
mov
test
outsl
cmp
mov
xor
cmp
movsb
cltd
mov
int
dec
in
lock
loop
repz
imul
fwait
dec
xor
jno
jnp
loopne
mov
aad
push
decl
mov
push
cmpsb
xchg
cli
rorl
jne
sbb
insb
sbb
cmp
sbb
or
in
adc
ficomps
mov
insb
test
cld
mov
mov
inc
adcb
imul
ficomps
movsl
test
dec
dec
aad
mov
jnp
cld
sahf
test
fs
jae
inc
push
jmp
mov
cmc
dec
inc
out
sub
mov
adc
inc
add
fldt
outsl
test
or
loop
push
cmp
insl
inc
leave
rorl
jle
clc
mov
jp
mov
pop
mov
mov
fiaddl
and
in
cmp
insl
fistpl
dec
insl
dec
mov
or
inc
dec
in
mov
pop
xchg
sahf
push
pop
imul
dec
push
adc
push
xchg
sub
jno
jl
fwait
jl
loopne
and
test
inc
test
jne
mov
add
dec
aas
jge
jae
addl
inc
sub
andb
mov
out
lods
sub
xor
dec
mov
jo
clc
in
jnp
jne
inc
or
es
cmpsb
test
loop
fwait
push
imul
cmp
sahf
fsubl
sbb
insl
inc
mov
push
loopne
mov
jg
inc
mov
dec
mov
fsubl
inc
xor
sbb
loop
pushw
sub
mov
pop
sub
loop
filds
andl
push
jo
add
dec
dec
add
out
fsts
add
xchg
sbb
cmpsl
cmpb
fs
cmc
mov
xorl
xchg
mov
pop
xchg
call
inc
xchg
cmp
pop
inc
push
xlat
cmp
insb
arpl
test
repz
stc
std
lcall
fbld
jns
inc
int
and
fistl
mov
mov
aad
lret
shr
sti
nop
xchg
mov
xchg
xchg
or
push
test
sbb
loope
loope
sub
mov
scas
mov
adc
cli
sub
cwtl
mov
jne
inc
dec
inc
cwtl
jne
div
add
add
xchg
push
xchg
stos
push
jmp
shll
cli
sbb
bound
scas
push
dec
stos
xor
mov
arpl
fldcw
mov
mov
pop
repnz
sub
subb
idivb
test
jmp
dec
pop
rcrb
cltd
xor
cmp
test
rcr
lret
mov
pop
das
add
es
mov
enter
mov
clc
rclb
fldcw
daa
jmp
jne
xlat
fnsave
cmp
cmp
dec
icebp
or
push
lds
inc
jnp
popf
sub
nop
mov
movsb
cltd
add
mov
xchg
or
int
add
out
sbb
lahf
mov
push
stos
jns
jnp
push
push
imul
xlat
adc
rolb
sbb
sbb
in
inc
es
dec
roll
jmp
das
sbb
std
popf
aam
sub
sub
sbb
inc
adc
test
sarb
push
daa
roll
xchg
popf
repnz
sub
cwtl
ret
add
xchg
cmpsl
inc
xor
pop
xchg
sbb
iret
aaa
pop
mov
mov
lcall
mov
les
sbb
rorl
insb
xor
jecxz
mov
jns
cbtw
inc
mov
imul
cmp
pop
add
mov
test
pusha
aad
orl
pop
movsb
testb
sbb
and
stos
jae
sbb
pusha
sub
push
icebp
xchg
jg
fs
std
mov
sub
cmp
dec
imul
mov
push
cld
mov
mov
mov
popa
xor
fnstenv
adc
xchg
insb
in
imul
inc
add
leave
pop
and
cli
das
sbb
dec
or
sub
sub
inc
lcall
jmp
cmp
fmull
mov
sbb
js
xchg
sub
push
cmp
cmpsl
pushf
outsb
insb
fwait
int3
xchg
sub
repz
cmp
fnstsw
mov
int3
mov
or
aas
ret
add
std
popf
xchg
jnp
ret
pop
pop
mov
addr16
fcmovne
add
adc
add
aad
andb
fisttpll
enter
add
mov
sub
loope
mov
and
std
shlb
pusha
cmc
ficompl
push
push
xor
dec
push
jbe
sub
sbb
cmc
mov
jp
sbb
jnp
cmpsb
mov
mov
push
xchg
add
mov
jmp
enter
ret
xor
daa
cmp
loope
adc
pop
push
mov
clc
mov
xor
lds
xor
ljmp
aam
jbe
js
mov
sbb
xchg
test
pop
mov
iret
test
sbb
add
xor
imul
out
lock
fdivl
jns
add
out
aaa
adc
lret
outsb
lods
push
movsb
and
push
ret
sub
js
and
sub
cltd
xor
aam
cmp
and
std
in
mov
xchg
mov
push
cwtl
mov
mov
mov
cmc
out
inc
insb
sub
inc
mov
or
jmp
add
int3
sub
sub
jge
push
pop
push
outsb
insl
outsb
movsb
cmc
in
lods
mov
sub
cmp
cmp
and
in
mov
push
jae
repz
mov
and
add
and
ljmp
mov
xor
ds
ljmp
fcomip
movsl
movsl
push
adc
lods
add
pusha
or
les
divb
fsubrp
cmp
jle
fxam
jno
mov
out
psrld
imul
pop
inc
lods
mov
je
jle
les
sub
and
jo
stos
fisttpll
mov
mov
mov
pusha
pop
mov
xchg
shl
cwtl
mov
jne
ljmp
jbe
pop
loop
pop
lcall
daa
mov
fldt
sub
adc
push
lret
insl
into
loop
insl
xorb
movsl
sub
mov
or
pop
pop
push
cmp
lcall
daa
push
gs
adc
pop
imul
inc
imul
jne
jl
xchg
pop
aas
jmp
jbe
and
in
dec
test
out
cli
shr
sbb
jb
nop
sahf
test
sbb
or
fsubrs
stos
lret
jg
jp
outsb
push
dec
jb
xchg
imul
dec
and
ljmp
pusha
pop
sub
call
push
and
andl
mov
dec
mov
ror
pop
movsb
mov
data16
cli
jb
in
jnp
jb
jns
push
xlat
aas
jae
fiadds
cmp
stc
aaa
pminsw
call
into
fcomps
mov
adc
or
ficoml
cmpsl
sbb
stos
inc
pop
or
movsl
push
push
lods
fdivrs
ljmp
xchg
adc
outsl
xlat
adcl
push
stos
aam
adcl
and
pusha
das
sahf
stos
pop
add
adc
bnd
pop
or
fnstenv
es
ss
sbb
xchg
popf
dec
imul
adc
fdiv
sbb
mov
jne
sar
fwait
mov
out
or
jp
push
shll
inc
out
dec
push
jp
mov
fnsave
xchg
inc
in
sub
or
lods
and
ja
mov
cld
cmc
test
aad
fistl
pop
mov
orb
mov
or
rcrb
pop
push
outsl
lret
in
fsubl
movsb
or
pop
sub
movsl
fwait
or
invd
xchg
and
leave
lods
adc
mov
int
movl
hlt
or
call
mov
arpl
orb
rcrl
fisubs
ljmp
sub
aam
push
push
insl
cmp
nop
mov
loop
or
stos
adc
popa
nop
daa
inc
add
mov
mov
and
dec
gs
lahf
adc
push
bound
mov
jnp,pn
test
aad
pop
lahf
jle
fstl
sub
mov
sbb
adc
std
scas
fdivrp
sti
cmp
sbb
imul
mov
daa
aad
test
arpl
leave
out
ja
sbb
cmpl
fildl
enter
lahf
aaa
push
outsb
mov
ffreep
nop
adc
mov
xchg
sbb
mov
jle
add
lds
data16
cmpsb
jg
sti
jno
cwtl
pop
xchg
jno
out
in
mov
outsb
pop
xor
cmpsb
mov
mov
mov
cwtl
aad
mov
in
lods
push
icebp
cwtl
xor
ja
xchg
jg
sahf
jb
and
nop
pop
push
or
inc
push
push
xchg
and
adc
arpl
push
xchg
lahf
push
pop
adc
jmp
mov
push
daa
fnstsw
sub
idivb
inc
sub
inc
add
mov
adc
xlat
xchg
sbb
xor
inc
push
lahf
fcoml
add
imulb
popa
cld
jae
xlat
std
aam
push
inc
xor
popa
and
jecxz
mov
testb
nop
or
insb
lcall
cltd
rorb
adc
daa
loop
jnp
mov
jecxz
and
and
sbb
int3
xchg
xor
push
fcmovnbe
movsb
add
es
daa
insl
dec
aas
and
sub
pop
dec
or
adc
negb
shr
xor
ljmp
mov
sbb
xor
mov
cwtl
sub
inc
pop
add
stos
pop
inc
xor
out
xor
mov
mov
adc
jge
gs
fwait
hlt
je
add
ja
mov
leave
pop
aam
pop
and
push
push
std
sub
rclb
push
insl
test
mov
aaa
leave
push
cmp
pop
subl
push
sbb
lds
imul
or
loopne
add
imul
inc
or
mov
xchg
inc
es
ljmp
jl
xchg
jp
scas
shll
scas
xchg
mov
or
jle
stos
jns
aaa
loopne
pop
sbb
adcl
xchg
subl
rorb
mov
mov
fcoms
xchg
dec
int3
adc
mov
jecxz
pop
cld
jg
mov
cmp
push
add
shlb
mov
ljmp
shrb
jmp
stc
jp
scas
add
imul
dec
out
inc
mov
push
inc
repnz
add
mov
fxch
cmp
xor
imul
sbb
cmp
jg
and
fwait
in
pop
inc
or
dec
mov
push
mov
and
hlt
je
std
in
je
and
cltd
jae
test
sub
hlt
je
push
das
cld
or
fldt
push
sbbl
cmp
shrb
push
mov
lret
xor
add
loopne
in
mov
in
pop
inc
pop
push
mov
mov
mov
sub
out
xor
lret
or
xchg
jne
adcl
ficoml
test
mov
cld
push
dec
ret
xlat
push
jnp
push
ss
and
je
scas
hlt
jne
leave
dec
js
adc
flds
mov
xorb
add
out
inc
push
jecxz
jb
das
test
addb
jecxz
mov
dec
or
push
mov
pusha
push
inc
mov
jp
in
cmp
sub
lret
mov
aaa
or
pop
sub
xor
mov
out
in
xor
aaa
loop
adc
dec
fbld
jmp
call
or
jnp
or
cmp
or
push
loop
or
adc
insl
orb
cmp
cmpsb
jg
add
test
mov
cwtl
jl
test
jae
loop
fldl
jecxz
and
mov
or
pop
xchg
inc
sub
mov
test
pop
test
push
mov
fstps
xchg
mov
or
inc
lock
icebp
int3
mov
xchg
iret
xchg
pop
sbb
ret
clc
cli
xchg
add
xchg
lock
push
xor
ss
mov
mov
mov
pop
in
fsts
shld
lcall
push
out
mov
sbb
xlat
and
jg
dec
int3
stos
mov
int3
out
or
outsb
jmp
jmp
push
int3
push
and
push
jne
mov
daa
fists
lret
cltd
sbb
push
negl
sahf
leave
pop
mov
ret
cwtl
mov
push
add
push
and
ja
iret
je
insb
mov
mov
xor
test
aas
jmp
jmp
bound
dec
pushf
ret
jg
nop
mov
and
and
mov
sub
xchg
repnz
mov
insb
pop
pop
mov
call
sbb
mov
popf
jae
in
cmp
mov
insl
call
iret
imul
leave
stos
stos
xchg
cltd
adc
lret
out
xor
push
mov
push
or
jbe
lods
jne
insb
xchg
push
pop
pop
sbb
mov
mov
clc
rolb
mov
jno
inc
inc
pop
mov
lret
push
ret
mov
xchg
jp
jle
push
adc
adc
pop
pop
mov
pop
in
dec
cmp
pop
sbb
sbbb
dec
and
sahf
mov
xlat
push
inc
pop
inc
repz
inc
or
push
cmpb
call
pop
fwait
cmp
subl
mov
ret
gs
jg
dec
insl
fadd
outsb
movsl
push
jge
mov
sbbb
loopne
mov
push
adc
sub
aam
sti
pushf
out
inc
cmp
pop
push
inc
or
movsl
addb
outsl
push
insb
add
adc
nop
adc
sbb
jg
and
or
sbb
pop
sub
sbb
imul
test
outsl
ss
adc
cmpsl
mov
ja
adc
or
es
push
into
pop
mov
mov
push
mov
xchg
movsl
rorl
jbe
sub
rcr
adcb
sbb
icebp
hlt
or
jecxz
rcrl
cmp
push
fiadds
lock
aaa
sbb
push
cmpsl
cmc
or
nop
push
in
pop
cmp
fildll
cwtl
jbe
lock
cmpsb
ret
and
sub
mov
imul
mov
fldenv
pop
ljmp
xor
loopne
inc
xchg
insb
fwait
pop
iret
mov
push
push
clc
cmpsb
cmp
ss
out
out
or
loop
mov
inc
cli
pop
jo
arpl
insl
xor
push
lds
add
lret
test
ja
push
add
mov
mov
loopne
in
lods
xor
push
push
adc
mov
imulb
pop
mov
pop
jle
pop
xor
mov
mov
cmpsl
mov
adc
inc
shrl
adc
jae
jno
pop
and
xchg
pop
jmp
out
or
outsl
test
addl
xchg
xchg
enter
outsl
mov
xor
sbb
andl
aas
mov
mov
imul
rcrl
iret
in
xchg
cmc
xor
imul
fsts
dec
stc
sbb
stos
jg
arpl
lret
push
cmp
popa
decl
addb
aad
testl
xor
sbb
movsl
sahf
xchg
and
cwtl
xchg
ja
sbb
adcb
inc
xadd
movl
bound
cli
sub
mov
aad
xorb
mov
add
ret
out
sarb
in
rcrb
push
mov
add
mov
cmp
jg
dec
cli
adc
mov
outsl
shlb
mov
push
sbb
push
cmpsb
sub
fdivs
cmp
push
jge
rcrl
lret
jge
inc
ret
repnz
jns
in
pop
cmp
ja
adc
out
or
sbb
jne
mov
shlb
or
ss
mov
adc
jb
jmp
dec
or
gs
lret
sub
test
jns
daa
xchg
and
arpl
cs
scas
sub
mov
aaa
iret
push
sbb
push
add
add
arpl
xchg
mov
and
nop
test
jno
dec
loop
lret
in
dec
and
mov
mov
mov
out
mov
cmp
addr16
push
mov
add
nop
push
outsl
fstl
not
shrb
and
clc
sub
ljmp
dec
push
sahf
mov
dec
inc
mov
dec
je
cld
into
or
cmp
inc
jno
xor
rolb
out
and
xchg
add
lahf
push
push
pop
iret
outsl
repnz
out
scas
sub
pop
inc
adc
jg
scas
cwtl
dec
pop
pop
pusha
jmp
fdivrl
mov
hlt
sbb
jbe
mov
fcmovb
jae
das
test
js
pop
sbb
fiaddl
cmpsb
mov
incb
xchg
andb
sahf
rcl
mov
add
imul
mov
shll
roll
cld
loope
in
icebp
mov
push
fbld
ficoml
lods
inc
sbb
push
adc
pop
xchg
mov
mov
cmp
dec
pop
mov
and
testb
ljmp
mov
andl
ljmp
movsb
rolb
int3
or
and
ds
inc
xor
xor
es
jmp
aam
sbb
call
adc
dec
aas
js
shrl
lret
dec
aas
pop
pop
clc
add
gs
inc
cltd
fwait
cmpsb
adc
mov
leave
xor
mov
and
fdiv
fwait
xchg
add
push
push
mov
or
mov
cmpsb
inc
sub
mov
test
jmp
mov
mov
push
sbb
aaa
movsl
loopne
jg
or
fldl
jbe
xchg
inc
jo
loopne
ret
sub
divl
or
dec
xor
pusha
out
bound
mov
jnp
cmp
test
sbb
outsl
sub
xchg
cmpb
popa
push
dec
aaa
sub
jns
and
test
or
pop
cli
dec
add
pop
add
cs
paddusw
sbb
ljmp
jno
ret
idivl
push
dec
dec
mov
ret
xor
pop
lds
iret
popa
andb
int
sub
xchg
jno
ja
dec
cli
addl
cmp
jns
inc
jecxz
aam
cmp
xor
fcoms
leave
push
imul
add
push
out
or
pop
mov
lods
sub
pop
push
xlat
popl
js
lret
shr
push
ja
out
jns
gs
xchg
sbb
pop
pushf
jb
out
and
arpl
pushf
sahf
int3
jns
cmp
clc
shl
popa
cmp
int3
daa
inc
or
idivl
mov
mov
sub
pop
xlat
mov
leave
hlt
mov
xchg
jle
leave
imul
or
loopne
and
fcomp
push
mov
jge
sbb
mov
mov
test
add
add
adc
andl
pusha
ljmp
dec
push
sub
inc
aam
push
adc
xor
sbb
jb
and
xchg
adc
push
jb
jl
fstpl
mov
xchg
and
adc
pop
mov
adc
xor
add
adc
sub
aad
jno
jl
inc
in
mov
jmp
mov
jge
mov
xchg
sub
fisubrs
rorl
pop
or
test
outsl
imul
push
mov
movb
jmp
cmp
sbb
ret
out
scas
cltd
dec
jge
inc
push
and
jne
scas
out
insl
cs
arpl
dec
pop
mov
in
icebp
movsl
cwtl
jo
rorb
push
mov
mov
xor
or
dec
mov
neg
mov
adcl
outsl
sbb
push
incl
xor
jno
mov
push
xchg
cmpsl
test
ja
sub
sti
push
shlb
sbb
cmpsl
push
dec
inc
sti
ret
push
sahf
sbb
scas
daa
shll
add
test
mov
dec
mov
pushl
lcall
aad
jmp
xor
jns
dec
mov
xchg
sbb
fidivs
je
pop
lods
mov
jle
out
and
pop
dec
sub
sti
cwtl
lahf
xor
or
fisubl
xchg
leave
and
je
xor
mov
outsb
das
adc
lods
fildll
ret
aam
push
out
std
daa
fisubrs
iret
test
xor
fisttps
fmulp
dec
popa
dec
jg
aam
stos
lahf
push
sub
jbe
dec
out
jle
cmp
add
out
xor
jge
pop
push
scas
xchg
xlat
cmp
adc
xchg
sub
lret
xor
ja
xchg
out
mov
xor
jmp
mov
sub
sbb
jle
popa
xor
sarb
sarb
mov
frstor
mov
mov
mov
mov
outsb
nop
mov
punpckhdq
xor
outsb
fisubrl
sub
cwtl
sub
or
insb
push
jle
mov
mov
orl
cmp
mov
test
add
rcll
out
lcall
fadds
fldt
stc
dec
cmc
scas
mov
daa
mov
mov
cmp
ds
ret
and
loop
and
pop
stos
cmp
movsl
push
rcrl
test
mov
jae
inc
or
sahf
or
xchg
inc
dec
pop
je
mov
and
mov
les
mov
cmp
aam
pop
or
adc
stc
lret
int
in
push
sub
out
push
stos
mov
xchg
aas
pusha
outsl
inc
inc
nop
fwait
repnz
mov
adc
loop
xor
xchg
fdivr
rcr
xor
cmp
sbb
mov
test
mov
inc
jae
xchg
xchg
sub
push
hlt
out
sti
bound
jno
repnz
idivb
or
add
add
sub
mov
testl
movsl
dec
xor
jnp
xchg
fwait
ret
pop
cs
mov
mov
lahf
xchg
bound
jecxz
push
loopne
jg
testb
shr
sub
inc
pusha
orb
fstps
mull
ss
cmpsl
or
les
cli
sub
lcall
inc
push
add
ds
jp
dec
rolb
fdivl
mov
mov
push
addr16
loop
adc
aaa
pop
xchg
je
hlt
add
mov
xchg
adc
call
fsts
or
scas
push
loop
sahf
in
cmc
loope
cmp
jmp
call
mov
pop
mov
sbb
cmc
sbb
jl
loope
or
inc
loop
jmp
lea
repz
cmpsb
or
jne
popf
jle
xchg
and
out
sbb
ret
adc
cmp
mov
ljmp
int
fcom
cld
push
movsl
popl
adc
out
xchg
fisttpll
arpl
xchg
fbld
cmp
popf
xchg
cmpsl
xor
fs
and
pusha
sti
xchg
pop
scas
roll
insl
je
xchg
mov
pop
cmp
rcr
bound
and
in
enter
lea
lcall
adc
xor
out
out
inc
divb
cmp
fwait
or
jnp
xor
popf
and
mov
ficomps
cmp
jge
sbb
add
mov
sub
in
jnp
mov
in
inc
xlat
dec
push
jmp
pop
and
mov
icebp
and
mov
icebp
xor
lock
imul
outsl
jp
adc
lea
jle
cs
mov
callw
call
push
into
out
cmp
and
ss
addl
mov
add
mov
inc
movsb
mov
iret
mov
adc
push
mov
xor
in
push
mov
lcall
xchg
and
cmpsl
add
fstps
mov
sub
aaa
mov
es
mov
xchg
sahf
dec
aas
xchg
cmpsb
add
lods
aas
push
dec
jmp
pop
cmp
sub
fldln2
push
xchg
popa
jb
push
adc
push
jl
hlt
mov
test
in
scas
sti
sahf
aaa
inc
pushf
add
adcl
dec
or
scas
repnz
ret
mov
lcall
jecxz
xchg
xor
mov
mov
aam
jb
sub
jns
cmp
xor
sbb
fstpt
pop
lcall
dec
cmpsb
add
mov
pop
stos
push
mov
and
out
pop
dec
clc
mov
xadd
xor
das
mov
xchg
mov
xorb
xor
lahf
mov
lret
mov
stos
mov
rorl
das
mov
and
adc
fbld
jae
inc
mov
aam
int
cmc
test
jae
and
lods
flds
in
data16
or
inc
clc
pop
mov
dec
xchg
les
ljmp
jl
fisubrs
sahf
insl
cltd
stos
xchg
test
xor
lea
loope
fistpll
movsbl
into
lret
cs
dec
inc
ss
sahf
mov
adc
repz
mov
and
mov
mov
cmc
mov
xlat
shll
hlt
push
jne
and
cli
mov
add
cs
and
mov
and
mov
add
xor
push
outsb
sbb
popf
mov
inc
jge
mov
scas
jmp
loope
add
lea
pop
mov
xor
pop
inc
dec
imul
jmp
adc
loope
sbbl
stc
jmp
mov
call
dec
subb
mov
nop
negb
in
jle
scas
out
and
add
inc
lcall
jne
push
fs
pop
xor
push
add
push
hlt
mov
and
or
orb
shrb
arpl
mov
sub
sub
xor
lods
jecxz
cmp
pop
jp
in
mov
sbb
push
cmpsl
and
mov
xchg
test
mov
and
pop
adc
mov
sbb
mov
js
mov
xlat
adc
xor
stc
loope
lcall
aam
sub
fisubrs
pop
rolb
nop
push
ljmp
or
inc
imul
jmp
inc
push
xchg
adc
mov
or
mov
fisubrl
xchg
mov
jno
aam
sub
push
or
or
addr16
sub
pop
sahf
ret
popf
stc
arpl
jecxz
out
cmp
add
jns
add
movsl
out
xchg
mov
and
mov
push
imul
and
pop
inc
fildll
pop
movsb
fisubrs
fs
and
inc
sbb
andl
sub
mov
icebp
shl
mov
add
pop
popf
subl
imul
pop
and
cmp
loope
notb
hlt
jg
sahf
loope
mov
insb
shrl
insb
orl
xchg
mov
cmpsl
jbe
into
fwait
imul
dec
dec
out
or
stos
pop
imul
sahf
lahf
sub
out
inc
cli
or
arpl
jecxz
rorb
ret
stc
push
aad
push
testl
dec
call
pop
mov
mov
jb
pop
fwait
and
xchg
test
pop
hlt
aam
cmp
fbld
mov
jge
imul
xorb
sbb
pop
add
repnz
push
fistl
rcll
in
clc
rol
sub
aad
pushf
pop
xor
pop
sbb
mov
inc
test
loop
leave
pop
repz
adc
mov
ss
push
cmp
lret
into
xchg
ret
and
lahf
mov
aam
mov
addr16
mov
imul
inc
xchg
xchg
fstp
aad
lock
xlat
mov
mov
pop
mov
adc
fnstsw
clts
je
pop
and
pop
add
jmp
add
xchg
cmp
idivb
push
sub
dec
hlt
jnp
mov
mov
xchg
cwtl
inc
inc
push
mov
movlps
stos
pushf
fstps
rcll
test
cmp
jb
fs
xchg
adc
repz
loopne
data16
in
ljmp
jnp
lods
xor
repnz
jo
adc
push
das
fldcw
sub
nopl
repnz
pop
push
loope
lcall
and
mov
pop
int
sub
ret
jno
sub
dec
sub
lea
jecxz
xor
rcrl
cmp
mov
or
movsl
xor
in
add
movsl
das
or
ds
mov
push
inc
pop
push
leave
das
mulb
push
xchg
mov
shlb
sbb
movsb
stc
fs
stos
mov
scas
jo
or
cli
outsl
add
out
add
insl
inc
dec
and
addr16
aad
clc
or
push
add
push
xchg
sbbb
aam
fsub
fucom
loop
std
shll
cld
adc
ret
and
cmp
push
push
ret
scas
and
out
and
xor
pop
fs
sbb
sti
icebp
pop
fs
es
xchg
fimuls
mov
cli
fsub
aam
rcll
add
neg
jmp
mov
test
fstpt
dec
dec
xchg
into
data16
sub
inc
repz
mov
pop
cmpsl
hlt
icebp
lds
into
outsl
pop
jl
adc
adc
push
jle
jmp
out
mov
pop
pop
inc
sbb
mov
push
faddl
xor
push
pop
add
imul
sbb
in
icebp
scas
addr16
ret
nop
push
jge
adc
cmp
cltd
out
cld
jg
fnstsw
cmp
int3
jnp
mov
xor
adc
es
cmp
mov
imul
mov
push
add
in
push
pop
loope
iret
int
lahf
fwait
lret
push
in
dec
and
nop
push
pop
sbb
xchg
push
in
cld
mov
lahf
cmp
popa
xchg
cmp
rolb
cmp
into
pusha
mov
sbb
or
sahf
lock
dec
mov
xchg
cmp
mov
popf
call
loope
sbb
stos
pop
inc
xchg
loope
dec
shlb
and
add
clc
xor
lods
test
cs
pop
add
mov
subl
cmp
xchg
sbb
adc
cmp
mov
ficoms
rcrb
bound
mov
xor
adc
push
inc
dec
fsts
outsb
stos
xlat
sbbb
in
xor
lret
loop
imul
pop
pop
int
push
sbb
xchg
pop
into
and
mov
inc
ljmp
and
push
and
sub
xlat
roll
jge
mov
or
out
sbb
arpl
mov
mov
ficoms
add
lea
xchg
test
into
loop
push
add
loopne
push
sti
mov
aaa
push
out
jmp
scas
xchg
insl
addr16
test
mov
adc
dec
sub
mov
and
push
adc
ljmp
adc
cmp
es
aaa
lcall
add
rorb
outsl
fcomps
mov
imul
xor
xor
addr16
cli
leave
andl
fildl
int
movsl
ret
pop
mov
fwait
mov
or
cwtl
imul
dec
jnp
push
mov
js
aas
test
lahf
subb
ds
mov
mov
pop
shll
rep
fsubl
cmc
addl
pop
aas
mov
mov
xchg
sub
outsl
inc
xor
mov
addr16
dec
mov
sub
jle
int
test
adc
sbb
mov
cmpl
ds
shll
cmp
adc
cltd
add
mov
repz
sbbb
lea
and
and
mov
pop
jge
xchg
sbb
jae
sub
imul
mov
bound
jecxz
cwtl
push
jns
inc
dec
aaa
xchg
cmpsb
fsubl
lea
aas
outsl
mov
imul
fmul
icebp
leave
dec
xchg
nop
pushf
mov
mov
push
cmpsl
xchg
and
push
ja
mov
push
cmp
out
int
pop
adc
movsl
out
inc
cmp
inc
out
adc
pop
lock
mov
lods
pop
cld
mov
cmp
xchg
mov
test
and
or
inc
std
rclb
movsb
es
jl
inc
adc
jecxz
icebp
xor
loope
pop
xchg
lods
fwait
xchg
push
rcrb
ljmp
mov
imul
insl
or
enter
lret
sarl
xchg
call
fwait
imul
cmp
rcrl
mov
inc
adc
inc
pop
mov
test
jno
aaa
sub
cli
cmp
in
mov
jo
jmp
lods
jl
sub
call
std
sti
ja
fistps
ljmp
inc
adc
xlat
vfrczpd
push
sub
in
loopne
xlat
cmpsb
inc
jne
cmp
jne
jg
icebp
aad
xchg
das
movsl
icebp
ljmp
dec
out
mov
xchg
add
icebp
cmpsl
push
les
fcmovbe
jp
pusha
aaa
jo
mov
repnz
leave
sbb
flds
mov
jmp
ds
sahf
sub
sbb
loope
dec
imul
xchg
ljmp
cmp
pushf
shl
lods
dec
rorb
lds
and
nop
dec
ljmp
mov
test
js
pop
insb
pop
aam
fisubs
xor
call
lods
shll
lock
sbb
sahf
and
inc
mov
lds
xchg
orl
test
mov
sub
iret
popf
dec
push
cmpsb
shll
cwtl
ret
xchg
ds
push
xor
jae
testb
test
sub
clc
push
rcll
inc
push
imul
xchg
movsl
adc
popa
addr16
xchg
jae
mov
and
push
pop
push
inc
jns
hlt
add
lock
mov
es
adc
add
aaa
lret
push
stos
out
inc
or
add
sbb
cld
scas
shl
pop
repz
out
inc
stos
in
jb
or
bound
stc
inc
movsl
fsubrl
sbb
dec
in
mov
mov
sarl
xchg
test
sub
sbb
sbb
test
pop
jg
lock
xor
enter
in
xchg
jl
lea
jl
iret
lret
mov
mov
ret
outsl
fimull
pop
jmp
add
and
push
pop
and
ror
lea
jnp
mov
add
push
popf
cld
jbe
or
orl
push
sub
andb
cmpsl
in
movsb
sahf
adc
jno
xchg
xor
mov
adcl
frstor
lea
fwait
dec
adc
mov
mov
bound
test
inc
and
int3
js
loopne
mov
dec
lret
int
imul
jge
sbb
adc
xchg
jbe
jg
test
inc
rorb
sub
aas
and
stos
mov
aam
inc
in
es
test
xorb
fcoms
xor
rorl
xchg
xchg
outsl
aaa
push
rol
inc
cwtl
int
jmp
and
mov
pop
mov
mov
mov
out
pop
inc
je
inc
ror
lds
push
mov
mov
hlt
add
movsb
jl
lret
fstpl
stos
test
mov
push
pop
sti
xorl
lea
inc
jl
gs
dec
or
dec
xchg
jb
push
pop
adc
adc
enter
mov
cs
or
add
incl
mov
fs
add
lcall
std
ret
mov
sbb
arpl
push
aad
pushf
aaa
ljmp
popf
fwait
cmpsl
mov
jmp
ja
xor
push
fcmovb
sti
es
pop
fwait
adc
lahf
xor
sub
fisubl
pop
pusha
lcall
mov
and
popf
fcomip
jg
inc
cs
stos
mov
sti
pop
aad
nop
faddl
mov
negl
jecxz
cmpsl
lock
jns
fs
add
ds
mov
adc
pop
hlt
cld
cmp
test
and
sub
inc
pop
push
push
fbld
jmp
push
xchg
push
test
into
mov
fldenv
push
jns
jne
stc
adc
adc
leave
imul
fisttpll
cmp
jecxz
cmc
xor
push
xor
loope
jae
das
mov
lods
or
les
mov
shll
loopne
cmpsl
push
cli
cld
into
test
int3
jle
adc
scas
adc
push
outsb
xchg
gs
adc
loopne
xor
enter
hlt
icebp
dec
xchg
mov
add
sub
mov
rcrl
into
cmpl
roll
outsb
pop
mov
sbb
test
scas
mov
leave
xchg
xchg
mov
test
sbb
or
add
or
sti
sti
inc
or
aam
mov
insl
jbe
mov
pop
out
and
loope
dec
dec
xchg
fiaddl
xor
stos
push
sbb
cwtl
inc
ss
push
mov
xchg
xchg
pop
hlt
sub
jl
fisubl
jne
in
aad
mov
mov
adc
call
and
test
out
mov
out
outsl
imul
dec
sahf
test
mov
mov
outsb
or
cltd
inc
pop
ja
setae
inc
lds
icebp
mov
pusha
push
lahf
lahf
xor
mov
add
jns
movsb
sub
inc
xchg
push
in
stc
mov
jp
pop
jle
es
pop
dec
cmp
ret
cld
mov
loope
mov
shrb
jmp
std
repnz
cmp
add
aaa
jge,pn
mov
daa
sbb
push
push
rcl
dec
shll
sahf
fimull
mov
pop
jns
add
rcrb
js
in
cmc
lods
or
mov
iret
stc
inc
mov
pop
dec
nop
dec
bound
mov
inc
pop
xor
and
and
xchg
inc
pusha
in
roll
mov
xor
test
xor
bswap
fs
jl
sarb
cwtl
xchg
aaa
enter
dec
pop
adc
int
shlb
repnz
cmp
and
lahf
xlat
adc
cltd
xor
adc
inc
xchg
and
test
icebp
dec
negb
mov
roll
mov
dec
hlt
and
sbb
mov
in
stos
sarb
xchg
jecxz
clc
das
jp
xor
mov
jns
sub
cld
dec
jp
mov
pop
xor
pop
repz
pop
addr16
pop
into
adc
add
sub
hlt
lcall
fstl
pop
push
mov
aad
repnz
jne
out
fsubrl
imul
sbb
pushf
xor
ret
sbb
cwtl
mov
gs
into
xor
imulb
in
mov
test
mov
int
jne
mov
mov
shlb
xor
jle
gs
xchg
inc
push
xchg
inc
jecxz
outsl
mov
jno
xor
or
in
cmp
inc
or
lret
mov
push
ds
lcall
sar
lock
jae
mov
pusha
ds
sbb
or
dec
mov
call
test
call
adc
mov
dec
movb
shrb
ja
sub
and
mov
ss
add
cmp
mov
xchg
cltd
push
or
push
jo
lea
rcll
push
lret
cmp
lds
dec
and
stc
add
frstor
icebp
scas
arpl
lods
push
sbb
xor
or
adc
xchg
fadd
fisttps
ret
sbb
mov
cltd
lcall
fadd
jmp
mov
lahf
mov
fimull
int
mov
lock
push
sti
mov
cmp
cmpsl
pushl
pop
ja
rorl
push
incb
inc
aad
push
loope
leave
pusha
rorb
and
cli
adc
fcomps
lret
xor
jge
imul
cmp
movsb
mov
xor
dec
push
xchg
and
inc
aaa
push
mov
xlat
rolb
test
int
dec
fwait
rcll
aas
es
ret
and
push
data16
in
jg
or
add
shr
pop
sbb
cltd
jno
jbe
idivb
sub
scas
cwtl
add
inc
dec
pushf
and
ror
shll
bound
ja
mov
mov
xor
lea
std
daa
inc
ficoms
out
lcall
pop
push
adc
pop
mov
cmp
xor
jbe
mov
test
adc
mov
xchg
pop
aad
lret
test
adc
popf
and
mov
sub
jp
jb
insl
mov
sub
dec
xchg
sbb
outsb
cltd
mov
je
scas
das
mov
jmp
fwait
test
mov
jno
cmpl
das
push
and
mov
inc
mov
add
jge
adc
xchg
movsl
lcall
ljmp
ljmp
push
int
mov
and
pop
lret
rorl
leave
mov
gs
rorl
or
xor
xchg
in
loope
sub
dec
jbe
sarb
sub
out
pop
mov
mov
scas
inc
mov
outsl
lret
cmp
and
mov
sbb
jg
repz
mov
sub
xchg
and
gs
fistl
movsl
push
push
push
dec
insl
cmp
shr
push
lahf
inc
xchg
mov
enter
adc
rorl
or
test
mov
outsl
stos
cmc
push
push
mov
and
xchg
imul
mov
ret
loopne
incb
sub
inc
or
push
jbe
sbb
dec
jmp
test
adc
push
cmp
sub
jnp
test
jg
mov
ljmp
and
scas
pop
cmp
cmp
pop
pcmpgtd
mov
sbb
cmp
xor
mov
jb
rorl
jne
inc
xor
loopne
inc
fwait
add
push
daa
mov
outsl
ret
mov
lret
mov
push
pusha
mov
cmp
rcll
pop
cli
daa
into
mov
fiadds
xlat
push
or
or
jecxz
jae
xor
outsl
or
xlat
js
dec
je
das
test
sub
andl
xchg
cs
test
fiadds
cmc
push
pop
arpl
cltd
or
popa
js
cmp
mov
push
lock
inc
add
and
jle
gs
or
pop
jo
jo
push
in
mov
pop
adcl
bound
testb
int3
sahf
mov
pop
call
xor
pop
dec
cs
sub
and
movb
ret
incl
jb
dec
jbe
fstpt
xchg
push
add
faddp
fwait
aas
hlt
pop
mov
adc
xchg
or
fwait
jecxz
jns
fsubs
jmp
push
xchg
rcrl
jl
loopne
insb
mov
pop
and
out
pusha
jge
mov
dec
int3
shr
inc
pop
mov
push
insb
sti
enter
iret
xor
out
push
mov
xor
pop
pop
movb
jg
jl
in
jns
stos
dec
popa
add
pop
lea
cwtl
fwait
add
loopne
es
or
sub
mov
loope
jecxz
mov
adc
frstor
repz
push
adc
popa
mov
gs
push
push
test
lods
jo
push
cmc
push
inc
aas
repnz
lods
jmp
mov
cli
gs
jmp
adcl
jecxz
adc
std
inc
sub
mov
pop
jle
mov
push
inc
scas
out
mov
sub
gs
je
mov
lahf
cltd
and
aam
pop
cmpsb
outsl
push
test
sub
setge
rcll
rorl
and
xorl
ret
aad
or
cmp
mov
cltd
and
inc
xlat
sub
inc
or
jl
push
hlt
lods
cwtl
jne
movsl
jecxz
pop
push
xor
popf
inc
jg
mov
adc
fisttpll
es
hlt
jb
pop
and
dec
cmp
psubw
ret
sub
ret
lods
decl
and
pop
sbb
push
imul
negl
outsl
mov
sahf
push
shr
dec
repz
push
sarl
adc
scas
mov
icebp
mov
fistps
push
jecxz
sbb
pop
insl
cli
lods
push
sarb
mov
into
sbb
fstp
iret
lahf
jae
jnp
xchg
pop
sub
adc
xor
fisttpl
or
out
popa
insl
popf
mov
cld
dec
add
add
negb
pop
in
cld
add
xchg
or
sub
mov
and
add
je
mov
and
push
lock
lods
jb
in
loop
mov
adc
mov
imul
bound
fcomps
inc
or
test
bnd
enter
and
push
cmp
inc
xchg
jno
ret
dec
sti
bound
in
loope
loopne
jp
aam
frstor
fidivs
inc
pop
sbb
xchg
pop
mov
push
imul
lock
sub
xor
lods
sub
mulb
and
xchg
push
cwtl
lea
push
in
mov
pop
stc
pop
inc
cmp
dec
xchg
or
loop
add
movl
sub
out
sbb
push
pop
jns
std
adc
ret
inc
aam
lea
dec
mov
aas
mov
jnp
pop
sbb
inc
mov
sahf
sbb
cmc
fisubl
aad
pop
fdivrl
fcmovu
icebp
sub
jbe
mov
scas
outsl
ds
push
movsb
dec
dec
loopne
mov
jecxz
cmp
test
mov
inc
cmp
mov
icebp
push
stos
push
mov
jmp
jl
sahf
push
push
fstps
pop
arpl
arpl
or
lahf
aam
jge
mov
iret
out
adc
out
cmp
das
or
xchg
mov
das
scas
je
rcr
add
pop
mov
or
push
std
out
pop
ljmp
pop
aad
fbstp
adc
enter
in
mov
dec
cmp
add
sub
fcmovb
mov
inc
repz
test
or
add
mov
rorb
cmc
leave
icebp
mov
xchg
and
xchg
out
cwtl
dec
pop
push
fistl
or
sub
and
cs
scas
mov
sub
add
sub
dec
sbb
pop
daa
pop
dec
sub
xorl
add
pop
jg
hlt
inc
xlat
mov
std
jb
ss
fmull
test
jg
mov
cmpsb
jmp
mov
xchg
xor
pop
lds
es
jmp
lret
decb
xchg
out
or
inc
sarl
jp
mov
and
shlb
adc
push
cmc
sbb
lahf
repnz
fcoml
loop
outsb
xchg
mov
lods
adcl
lods
mov
adc
and
in
test
imul
lret
mov
pop
leave
rcr
movsb
loopne
pop
sbb
xchg
enter
movsl
ret
lcall
negl
add
xor
xor
push
and
test
dec
sbb
cli
hlt
call
xchg
xor
fidivs
ret
lahf
into
push
sahf
lea
cs
out
fisubrs
ret
xchg
xor
fistps
repnz
jl
push
stc
add
pop
xor
mov
sbb
insl
or
mov
lock
jl
pop
push
clc
pop
xchg
ret
sbb
leave
lret
jb
addl
aam
or
mov
xlat
or
cmpsb
mov
arpl
xchg
jo
sarl
sbb
cmp
enter
add
aas
dec
or
icebp
pop
xchg
inc
add
lds
push
cmc
mov
xchg
jbe
cwtl
adc
pop
shll
scas
lret
mov
sarl
imul
lea
inc
sbb
cmp
jno
in
int
or
add
mov
push
call
inc
daa
pop
adc
and
pushf
outsb
or
hlt
xor
fdivrs
jge
pop
inc
cmpsl
stos
fistl
stos
jg
mov
cld
call
jecxz
lds
sub
loopne,pn
outsb
rol
push
pop
test
push
jecxz
dec
pushl
in
mov
lods
stos
pop
inc
mov
pop
into
lahf
mov
sub
or
lock
mov
ds
or
jmp
add
imul
gs
cmpsb
fwait
pop
jae
add
les
filds
push
push
or
xchg
xchg
test
jae
push
sbb
xor
mov
cld
mov
jno
dec
mov
inc
cli
lock
dec
daa
xchg
rorb
pusha
mov
shll
xlat
push
lods
hlt
cld
movsb
iret
sbb
bound
push
js
push
adc
dec
arpl
xchg
cmp
pop
add
nop
out
pop
movsb
mov
pusha
push
pop
insl
cmovs
ds
jecxz
and
mov
pop
loop
mov
mov
pushf
or
test
xor
jl
test
add
data16
jae
or
jae
push
cmp
lds
fiaddl
loope
sbb
xor
das
mov
popa
pop
xchg
pushf
mov
sub
jbe
ds
push
inc
stos
and
or
xorb
xlat
push
and
add
mov
inc
mov
and
mov
orl
les
pop
dec
orl
fwait
mov
pop
jne
adc
xor
jo
cmp
in
loop
cld
cmpsb
ja
sbb
sub
shr
jp
aaa
push
cmp
dec
mov
cs
test
mov
aaa
lds
jge
add
inc
mov
or
mov
pusha
jne
push
dec
mov
pop
add
xor
adc
ror
rcll
add
pop
sahf
or
aaa
ljmp
fnstenv
arpl
push
gs
cmp
mov
mov
lock
mov
adc
out
add
daa
or
mov
mov
ds
iret
xor
mov
pop
mov
daa
push
or
cli
xor
rcll
add
dec
jno
lret
loopne
pop
jns
mov
xor
lds
pop
clc
xor
les
mov
ljmp
pop
adc
jb
or
sarb
push
popl
cltd
scas
aam
pusha
cltd
adc
pop
pushf
fidivs
add
mov
mov
xor
push
mov
stc
clc
cs
daa
jnp
cmp
jmp
movsb
out
dec
je
pop
sub
jge
dec
adc
sti
push
mov
or
test
orb
es
shll
and
loope
sub
sbb
andb
daa
pop
push
add
or
stc
mov
outsl
mov
jbe
sub
aad
push
xchg
jbe
add
mov
sub
ret
cmp
pop
xchg
shrl
lret
jle
mov
sub
jge
imul
push
pop
mov
pop
js
pusha
or
loop
test
scas
adc
cmp
mov
insb
scas
dec
arpl
dec
enter
dec
or
fildll
orb
pusha
or
ret
or
bound
scas
test
scas
jp
lret
in
popf
xor
xchg
adc
int
xlat
mov
fs
push
mov
inc
jg
push
mov
push
jp
int
xchg
or
cmpsl
jmp
mov
movsb
scas
imul
nop
mov
out
popf
dec
negl
or
jb
fdivrs
xchg
jg
add
sbb
add
mov
imul
mov
or
cltd
or
repz
mov
stos
xor
sbb
test
lahf
xor
arpl
add
mov
aaa
sub
insb
stc
adc
lret
movl
roll
push
movsb
insl
xchg
xchg
out
add
mov
mov
lds
xchg
jns
fwait
test
fimuls
shrl
sub
jo
mov
mov
shrb
scas
lods
sub
add
xchg
sub
mov
leave
sub
das
cmpsl
xorb
mov
mov
mov
xchg
xchg
cmp
push
push
jl
dec
push
outsb
ja
test
push
ret
xchg
xor
push
push
dec
push
movsl
lahf
fidivs
inc
add
ficoms
sub
cmp
iret
inc
pop
sub
xchg
in
and
iret
dec
stc
icebp
mov
hlt
lds
push
enter
sub
mov
das
xchg
stc
mov
scas
cmp
inc
xor
adc
xor
lret
scas
cltd
cli
pop
in
push
pop
pop
jne
sarb
sub
jne
mov
test
test
ret
mov
test
aaa
dec
cmp
dec
xor
pop
add
in
sbb
rep
lret
xor
test
jl
xor
bound
lea
or
jo
lods
test
xchg
test
enter
shrb
arpl
mov
les
in
es
aad
movsb
cmp
sahf
shlb
jl
pop
sbb
xor
jae
outsl
fistl
push
add
sti
and
iret
imul
xor
shll
xchg
sbb
push
aad
int3
cmp
add
sar
test
push
xchg
mul
clc
adc
jmp
lahf
mov
sti
inc
cmp
dec
push
jmp
ret
inc
pop
inc
clc
adc
cmp
out
mov
or
lds
es
mov
insb
ss
add
adc
xchg
fimuls
push
add
das
adc
xlat
jmp
loope
and
mov
xchg
or
in
insl
pause
xlat
and
test
insb
cltd
out
adc
icebp
add
mov
arpl
and
ljmp
dec
inc
jl
push
das
insb
dec
sbb
scas
sub
xor
mov
xorl
jns
cmpsb
jp
mov
sar
xchg
sub
add
inc
out
push
inc
mov
mov
lock
or
cmp
shrl
pop
cmp
lock
aad
cmpsb
pop
add
ss
lcall
dec
fistl
mov
popf
xchg
mov
inc
xchg
sahf
fisttpll
fs
mov
adc
std
or
inc
test
and
mov
jg
adc
jl
lods
xchg
scas
sub
aad
jo
xor
aad
push
subl
data16
mov
lahf
fwait
lods
or
push
jge
stc
cmp
enter
inc
dec
out
stc
andl
movsb
ljmp
mov
movsl
nop
inc
jmp
sub
scas
shrl
cmp
cmp
sbb
imul
push
xor
dec
adc
mov
mov
stos
pusha
pop
insb
arpl
cmc
imul
loopne
out
adc
cmpsb
and
adc
xlat
pop
lds
xchg
sarl
in
pop
jge
inc
push
cmpsb
cs
xchg
or
in
add
jb
sub
jp
jecxz
and
sub
aas
and
mov
push
fsubs
pop
call
adc
add
in
or
shr
shl
add
inc
pop
push
push
out
loop,pn
dec
dec
je
enter
jg
test
pop
cwtl
test
test
cmp
fisttpl
inc
pop
sbb
jmp
xor
cvtps2pi
or
dec
jb
shll
inc
push
pop
incb
pop
sbb
in
jns
jnp
cs
cmp
sbb
sbb
push
jle,pt
jmp
pop
mull
dec
enter
popa
pop
xor
into
shrl
data16
lods
push
out
nop
repz
cmp
jne
sbb
push
pusha
sbb
lds
stos
xor
mov
xchg
push
sub
mov
xorb
jmp
mov
pop
xchg
jecxz
push
xchg
out
frstor
jg
sahf
cld
scas
std
mov
push
mov
pop
ret
js
paddd
xchg
push
rcll
mov
jle
mov
mov
notb
pushf
daa
mov
jo
dec
jmp
call
fucomp
repnz
cmp
mov
ret
add
repnz
icebp
sbb
enter
les
mov
popa
pusha
adc
mov
jmp
fs
stos
inc
pop
repz
aaa
sub
push
ja
xor
ds
das
pop
arpl
mov
fldcw
bound
in
lock
orb
mov
jo
jnp
pop
pop
cmc
fldl
lcall
cli
outsl
movsl
fst
enter
push
sub
or
inc
shr
sbb
mov
fwait
pusha
jno
repz
mov
or
jbe
dec
sahf
cwtl
pop
insl
mov
inc
xor
mov
push
jmp
or
and
add
dec
add
push
lret
idivb
inc
mov
in
push
imul
cmp
fisubrs
push
gs
fistpll
pop
dec
inc
pop
push
and
push
call
or
sahf
out
xchg
dec
add
xchg
mov
pop
repz
adc
add
dec
add
pop
mov
add
pop
mov
int
insl
ds
mov
push
mov
jecxz
repz
lahf
xor
lds
hlt
fisubrs
xor
std
and
adc
mov
add
jmp
faddl
daa
adc
adc
xorb
hlt
push
int3
pusha
les
cmc
fcompl
and
push
sub
adc
add
mov
loop
lahf
jnp
inc
cmpsl
pop
jge
daa
push
adc
repz
fdiv
add
inc
sub
sub
and
add
lods
loopne
fisttpll
hlt
imul
jae
ret
adc
push
mov
int
test
push
fidivl
adc
rcl
xor
lcall
pop
and
dec
ja
pop
pop
adc
cltd
call
jb,pt
sub
mov
repnz
sti
inc
sbb
mov
fs
out
jle
or
xor
jg
sar
fistpl
jmp
sub
and
test
jp
adc
pop
mov
aas
jle
ficomps
adc
push
jge
jp
jp
add
sbb
xchg
mov
pusha
lret
fmull
adc
popf
es
jbe
dec
mov
mov
arpl
cwtl
lock
stos
stos
mov
mov
cltd
addr16
xor
push
push
cmp
stos
std
stos
pushf
adc
push
scas
push
mov
or
repz
lea
mov
and
dec
sbb
out
and
mov
mov
pop
fwait
pop
movsb
inc
in
jne
fisubl
out
test
xchg
addr16
sti
push
lahf
test
neg
out
fstpt
testb
xor
es
add
gs
push
out
xor
sub
fstps
dec
call
sti
xchg
jmp
insb
repnz
and
mov
sub
pop
mov
add
push
and
cwtl
pop
mov
add
inc
xor
js
scas
mov
lods
jb
xor
push
adc
sub
jp
mov
outsb
dec
aad
xchg
cld
sub
fists
adc
test
add
add
scas
popf
sub
sub
lahf
push
dec
sub
sub
pusha
fistpll
xlat
cmp
fildll
mov
inc
mov
adc
jmp
adc
dec
lods
adc
mov
repnz
js
adc
jl
or
iret
scas
stos
xor
cli
push
sti
sbb
add
push
mov
lods
xchg
js
inc
int
sub
out
out
jecxz
cmp
mov
xor
mov
pop
test
loope
cmp
xchg
add
out
xchg
mov
fistpl
and
push
or
push
and
in
mov
leave
js
adc
push
jns
in
ror
add
mov
test
loop
fcmovnu
xchg
pop
js
and
bound
jnp
and
fnstcw
int
inc
mov
pop
gs
inc
push
jmp
aas
mov
push
in
sub
gs
sub
pop
inc
add
hlt
mov
cmp
jg
adc
arpl
aas
push
mov
adc
mov
jno
cwtl
jp
xor
mov
dec
xchg
ret
and
sub
std
jg
lock
aad
fldcw
and
js
in
std
inc
xchg
bound
cmp
inc
jecxz
pop
mov
push
push
xchg
adc
pop
dec
call
add
aad
add
daa
xchg
mov
mov
mov
dec
fisttpl
data16
jno
xchg
mov
pop
add
push
sub
and
cld
sti
or
jecxz
sahf
mov
jp
add
imul
jg
push
scas
dec
pop
sbbb
cwtl
jl
mov
les
in
pop
bound
mov
aad
push
idiv
sbb
jno
pop
ret
fdivrs
cmpsl
xor
pop
dec
repnz
xchg
loopne
fs
lahf
je
ss
jb
rcll
push
mov
cmp
mov
push
mov
aam
or
and
lret
xor
jl
nop
mov
in
push
les
call
fsubl
stos
or
sub
xor
mov
dec
fwait
pop
sbb
push
ret
pop
cmp
out
test
jmp
xor
test
fstpt
ljmp
pop
cmc
sub
jle
mov
jb
dec
call
add
and
scas
cvttps2pi
xor
sub
mov
mov
pusha
outsl
mov
cmp
fisttpll
stos
inc
ljmp
jne
arpl
jmp
or
in
or
push
push
pop
idivl
mov
add
jmp
inc
mov
sbb
mov
inc
lret
addr16
mov
jl
adc
movsl
loop
dec
nop
fsubrp
shr
cmp
push
mov
std
sbb
sbb
mov
xlat
or
lock
loopne
jb
mov
in
xor
mov
aam
aas
in
mov
or
jns
aas
mov
push
xor
or
jne
pop
jge
mov
xor
bound
push
mov
mov
cs
cli
into
jno
mov
pushf
mov
mov
jmp
push
lods
xorb
test
test
repz
jno
addr16
push
stos
movsb
shlb
aas
add
add
mov
aaa
mov
out
stos
xor
jne
fdivr
mov
dec
das
xchg
sbb
in
xchg
xor
xchg
imul
ret
aas
inc
inc
adc
push
adc
aam
popa
loop
cmpsl
pop
mov
test
js
mov
mov
mov
cltd
sub
mov
jb
shlb
test
jae
arpl
mov
adc
ss
test
mov
add
inc
or
mov
dec
mov
in
push
ret
testl
sarb
or
nop
jbe
cltd
in
aaa
js
hlt
jno
arpl
mov
and
ja
mov
incl
popa
out
popf
rcrl
mov
fistps
mov
jmp
sbb
loop
fistpl
std
add
xchg
xchg
xchg
repz
je
mov
cld
leave
adc
push
adc
aad
into
dec
cmpsb
out
and
mov
xchg
jg
jb
xor
mov
and
push
jl
pop
xchg
cmp
sahf
popa
xorb
ret
pop
incb
xchg
js
sbb
test
call
lods
sub
loop
sub
lahf
cwtl
xchg
xchg
sub
pusha
pop
push
jns
or
stos
inc
xchg
inc
test
adc
outsb
lods
or
push
scas
add
notl
nop
cmp
shll
fwait
sahf
ret
outsl
push
lds
sbb
js
and
clc
push
xchg
out
sub
jno
mov
ja
mov
push
pop
test
xchg
lret
pushf
leave
movl
in
push
cmp
mov
inc
dec
xor
sub
dec
fbstp
mov
cmp
sti
dec
mov
pusha
push
ja
cli
stc
mov
dec
xor
pushf
int3
mov
sahf
jl
jns
out
jae
in
iret
mov
jae
movsl
test
adc
mov
aas
rorl
dec
psubusw
test
push
mov
adc
xorl
dec
pop
jns
add
pmaxsw
mov
insl
or
mov
inc
lret
out
in
mov
loopne
popf
dec
test
rcrl
push
dec
xor
add
mov
push
lds
outsl
xor
cmc
mov
adc
daa
pop
xchg
jl
pop
push
mov
aad
and
out
push
hlt
push
push
cmpsb
fadds
pushf
out
or
and
cmpsb
xchg
sar
adc
push
scas
jp
xlat
clc
adc
jl
dec
mov
mov
call
ljmp
and
sbbl
mov
dec
test
fisttpl
jo
or
mov
std
incb
out
loop
jb
pop
inc
pop
ret
adcl
ss
cwtl
push
sbb
push
cltd
outsl
jp
sub
enter
pop
cmpl
push
and
push
stc
cli
jno
aaa
pushaw
lahf
sub
push
lods
movsb
dec
adc
mov
cs
je
cmpsb
movb
cmp
add
daa
add
les
aaa
dec
lock
jecxz
and
inc
inc
fldcw
jmp
inc
lock
test
cli
lcall
out
add
fldl
shl
movsl
call
mov
jns
jae
xchg
adc
xchg
pop
popa
jg
sbb
lea
inc
dec
adc
lods
addr16
jb
insl
adc
dec
push
xor
ljmp
dec
fisubrl
out
adc
leave
mov
mov
scas
les
enter
cmp
fmuls
xor
mov
pop
aaa
in
cmp
mov
jl
outsb
in
add
sti
test
pushf
xchg
or
adc
inc
dec
xchg
in
sub
lods
mov
sub
ret
clc
repz
out
cmp
outsb
je
aad
and
repnz
les
dec
lahf
les
mov
test
out
les
sub
imul
mov
dec
rcrl
xchg
notl
pusha
mov
stc
sbb
in
scas
lods
clc
jp
lret
lret
sbb
cmp
cmp
sub
push
cwtl
icebp
shll
mov
or
push
cmp
mov
mov
jbe
cmpsb
cld
mov
cltd
mov
daa
les
push
xchg
pop
cmp
insl
shlb
scas
mov
mov
mov
fs
je
sub
pushf
push
xchg
frstor
adc
lds
add
in
out
xor
es
jae
or
cli
inc
daa
mov
int3
and
in
jecxz
dec
lahf
pop
mov
mov
push
jo
ret
jo
xor
dec
les
jo
aam
loope
in
fsubs
cmp
push
fldl
enter
xchg
outsb
iret
adc
add
les
or
out
mov
push
insl
clc
jo
sub
mov
and
jl
jbe
bound
pop
and
fwait
jnp
popa
test
lret
dec
dec
in
sahf
mov
in
cwtl
add
cmc
or
add
or
mov
mov
sbb
inc
xorb
add
cmp
pop
repz
repnz
ds
xchg
xor
insb
gs
lret
push
cmp
js
das
ficoml
lcall
aas
bound
pop
cmpsl
and
incl
rolb
sbb
sub
mov
and
std
mov
pop
cmc
loope
in
lcall
and
cmp
xor
jg
in
hlt
fidivs
push
fdivrl
out
push
or
sbb
test
pop
mov
ds
push
ss
rolb
cpuid
xor
adc
lcall
dec
or
loope
je
inc
fdivrp
mov
int
test
lcall
dec
shr
sbb
iret
jne
pop
insl
jle
and
jns
inc
and
jnp
xor
fcmovne
inc
test
sub
xor
push
xor
leave
or
ljmp
in
and
nop
xor
mov
in
mov
mov
push
xor
dec
sub
mov
sbb
sub
adc
xchg
inc
sbb
js
and
cmp
out
mov
or
mov
mov
or
sbb
loope
mov
push
jle
adc
mov
arpl
ret
mov
into
arpl
mov
test
addl
inc
sbb
int3
jnp
fsubrl
sub
pop
mov
lret
jl
hlt
xor
pop
dec
or
daa
ret
sbbb
jne
outsb
mov
aas
aaa
inc
repz
dec
jnp
ds
je
jae
icebp
fdivrs
and
sub
aad
push
or
pop
fsqrt
daa
rorl
mov
push
mov
pop
fists
addr16
pop
xlat
pop
orb
insl
jle
dec
pushf
inc
int
mov
push
outsb
je
outsb
cmp
sbb
jge
test
mov
dec
pop
mov
fcos
mov
lcall
adc
loop
idivl
rcll
fisubl
cmp
inc
push
pop
pop
sbb
mov
adc
ss
call
jnp
mov
pop
mov
test
rolb
jno
jae
lods
mov
inc
aam
lea
pop
bound
sbb
xchg
nop
add
mov
dec
mov
push
xchg
inc
jbe
js
mov
lds
jno
loope
scas
outsl
push
jo
jg
xchg
aaa
push
mov
push
mull
lds
jl
xchg
jbe
pop
push
outsl
mov
clc
cmp
xorb
aaa
out
mov
dec
es
add
mov
jmp
xor
in
push
sub
pop
jge
std
sub
jp
mov
aad
lahf
mov
lret
jnp
pop
call
enter
or
movsl
outsl
cmp
cwtl
mov
push
adc
out
rclb
cld
sbb
rcrl
test
repnz
pop
cs
nop
es
ja
cmp
jmp
dec
sbb
or
pop
jecxz
xor
pop
mov
add
pop
jg
mov
pushf
in
fistpll
stos
dec
roll
xchg
mov
lds
pop
pop
nop
fimuls
and
bound
adc
outsb
push
sub
dec
enter
xor
cmc
push
mov
xor
cmp
in
rorb
cmp
push
mov
mov
sbb
leave
adc
sub
in
mov
mov
scas
fmulp
adc
jmp
mov
adc
out
or
push
fidivrl
fcompl
push
xchg
loope
test
cmc
cltd
sub
ja
outsl
mov
dec
lods
mov
jne
addr16
mov
sub
pop
mov
lahf
add
xor
pop
enter
mov
popa
outsl
mov
mov
jp
shlb
jns
sub
mov
mov
pop
cwtl
les
rcrl
jns
in
stc
jl
stc
dec
test
data16
scas
ror
sub
in
or
pop
and
xchg
sbb
sbb
rolb
lea
cli
cs
stc
orl
dec
mov
jns
sbb
repz
mov
sti
mov
jo
jl
lds
xchg
cltd
push
imul
push
pop
mov
mov
jno
aad
add
es
mov
dec
pushfw
push
cmp
es
in
push
dec
cwtl
and
and
or
ret
popf
push
jbe
test
push
cltd
dec
lock
mov
loop
cmpsb
psrlq
inc
xor
pop
fwait
je
insb
outsl
pusha
fcmovnb
cmpsb
test
and
jnp
dec
fiaddl
imul
inc
ds
inc
es
fucomp
add
dec
adc
mov
adc
xor
test
xor
push
enter
lcall
mov
sub
std
mov
adc
in
rorl
repnz
sti
pop
imul
inc
outsl
add
int3
nop
inc
jno
shlb
pop
dec
rcl
lea
in
leave
pop
pushf
mov
mov
pop
cli
and
lahf
neg
in
pushf
dec
sti
lcall
inc
dec
lret
or
loopne
iret
mov
cmc
testl
xchg
lds
out
nop
ljmp
dec
cld
nop
inc
sbb
mov
xchg
sub
fldenv
ja
or
lret
sub
push
dec
loope
rorl
dec
jns
icebp
adc
push
pop
add
sub
and
or
mov
out
xchg
sub
cmp
insb
pop
push
das
fstps
inc
lret
pop
aam
ror
add
cmp
pusha
mov
loop
push
and
xchg
out
adc
mov
push
mul
in
mov
add
cmp
jl
das
lods
xor
push
cmpsb
xchg
sti
or
add
push
sbb
test
iret
das
fptan
mov
lret
xchg
dec
sub
fidivrs
arpl
sub
loop,pn
in
cmp
cs
sbb
dec
stos
bound
sahf
sub
xor
push
add
mov
sarb
sub
in
stos
jmp
lods
int
add
push
sub
add
jmp
xchg
mov
js
lcall
outsl
inc
sbb
ss
adc
pop
scas
adc
cmp
shll
scas
add
rolb
iret
imull
cmp
jae
clc
dec
jbe
shll
in
lea
dec
xchg
mov
xor
jnp
in
jns
out
adc
xchg
.byte
scas
.byte
push
mov
add
cmpl
je
xor
inc
leave
ret
incl
mov
mov
mov
mov
movl
movl
test
decl
cmpl
je
push
push
xor
mov
shr
mov
or
lods
push
jmp
pop
xor
xor
stos
loop
pop
pop
jmp
mov
cmp
jne
mov
mov
jmp
mov
mov
push
push
mov
call
cld
push
pushl
push
pushl
lea
sub
neg
add
push
jmp
xchg
push
push
mov
mov
mov
rep
push
mov
call
pop
pop
pop
mov
cmp
je
mov
mov
mov
jmp
movl
mov
leave
ret
push
xor
dec
push
shr
mov
and
xor
mov
div
mov
mov
mul
mov
mov
mov
mul
sub
xor
mov
mov
divl
mov
pop
pop
jmp
add
inc
add
in
push
push
push
mov
mov
mov
xor
add
movsb
cmp
jae
call
jae
call
xchg
call
dec
dec
inc
inc
shl
lods
inc
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
nop
ret
xor
inc
call
adc
call
jb
ret
xchg
sub
pop
pop
pop
leave
ret
add
add
jb
add
jae
add
jae
add
jb
add
add
add
add
add
add
adc
add
add
or
add
xor
add
add
.byte
.byte
mov
